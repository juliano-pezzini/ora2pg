-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consist_conta_proc_web ( nr_seq_conta_p bigint, nr_seq_prestador_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ie_tipo_conta_web_p text, ie_situacao_protocolo_p INOUT text) AS $body$
DECLARE

			
nr_seq_proc_w			bigint;
cd_procedimento_w		bigint;
dt_fim_proc_w			timestamp;
dt_inicio_proc_w			timestamp;
dt_procedimento_w			timestamp;
ie_via_acesso_w			varchar(2);
ie_tipo_despesa_w			varchar(2);
ie_tipo_despesa_ww		varchar(2);
ie_status_w			varchar(10);
ds_procedimento_w			varchar(255);
ie_origem_proced_w		bigint;
tx_item_w				double precision;
ie_situacao_protocolo_w		varchar(3)	:= 'A';
qt_registros_w			bigint;
ie_tipo_guia_w			varchar(2);
ie_tipo_segurado_w			varchar(3);
ie_liberar_item_autor_w		varchar(1);
nr_seq_guia_w			bigint;
cd_guia_w			varchar(20);
qt_utilizada_w			pls_guia_plano_proc.qt_autorizada%type;
qt_autorizada_w			pls_guia_plano_proc.qt_autorizada%type;
nr_seq_segurado_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_prestador_w		bigint;
ie_origem_ocorrencia_w		varchar(1);
ie_tipo_conta_w			varchar(1);
ie_conta_intercambio_w		varchar(10)	:= 'N';
nr_seq_protocolo_w		bigint;
nr_seq_prest_protocolo_w	bigint;
nr_seq_prestador_retorno_w	bigint;
nr_seq_regra_retorno_w		bigint;
ie_existe_regra_w		varchar(1);
nr_seq_motivo_glosa_w		bigint;
qt_glosa_w			bigint;
ie_segmentacao_w		varchar(3);
qt_procedimento_w		pls_conta_proc.qt_procedimento%type;
qt_proc_conta_w			bigint;
ie_utilizado_conta_w		varchar(1);
ds_contas_autor_w		varchar(4000);
ie_regra_preco_w		varchar(3);
nr_seq_regra_preco_pac_w	bigint;
nr_seq_pacote_w			bigint;
cd_pessoa_fisica_w		varchar(10);
qt_idade_w			bigint;
ie_conta_autor_w		varchar(1) := 'N';
ie_portal_web_w			varchar(3);
qt_conta_dif_w			integer;
qt_saldo_w				pls_guia_plano_proc.qt_autorizada%type;
qt_negativo_w			pls_guia_plano_proc.qt_autorizada%type;
nr_seq_prestador_exec_w		pls_conta.nr_seq_prestador_exec%type;
ie_proc_ativo_w			varchar(255);
ie_carencia_w			varchar(1); --aldellandrea os 819636
ie_nascido_plano_w		varchar(1); --aldellandrea os 819636
ie_carencia_abrangencia_ant_w	varchar(10); --aldellandrea os 819636
ie_via_conta_portal_w		pls_parametros.ie_via_conta_portal%type; --aedemuth OS912405
nr_seq_regra_autor_w		pls_regra_autorizacao.nr_sequencia%type;
dt_atendimento_referencia_w	timestamp;
ie_valoriza_w			pls_regra_valorizacao_cta.ie_valoriza%type;
ie_origem_protocolo_w		pls_protocolo_conta.ie_origem_protocolo%type;
ds_obs_data_w			pls_conta_glosa.ds_observacao%type;
ie_abrir_procedimento_w		pls_abertura_proc_portal.ie_abrir_procedimento%type := 'N';
nr_seq_conta_proc_nv_w		pls_conta_proc.nr_sequencia%type;
nr_seq_conta_proc_regra_w	pls_conta_proc_regra.nr_sequencia%type;
nr_seq_item_tiss_w		pls_conta_proc_regra.nr_seq_item_tiss%type;
nr_seq_item_tiss_vinculo_w	pls_conta_proc_regra.nr_seq_item_tiss_vinculo%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_procedimento,
		a.dt_fim_proc,
		a.dt_inicio_proc,
		a.dt_procedimento,
		a.ie_via_acesso,
		a.ie_tipo_despesa,
		a.ie_tipo_despesa ie_tipo_desp,
		a.ie_origem_proced,
		obter_descricao_procedimento(a.cd_procedimento,a.ie_origem_proced),
		a.qt_procedimento_imp,
		a.ie_status,
		(SELECT max(x.nr_sequencia) from pls_conta_proc_regra x where x.nr_sequencia = a.nr_sequencia) nr_seq_conta_proc_regra,
		(select max(x.nr_seq_item_tiss) from pls_conta_proc_regra x where x.nr_sequencia = a.nr_sequencia) nr_seq_item_tiss,
		(select max(x.nr_seq_item_tiss_vinculo) from pls_conta_proc_regra x where x.nr_sequencia = a.nr_sequencia) nr_seq_item_tiss_vinculo
	from	pls_conta_proc	a
	where	a.nr_seq_conta	= nr_seq_conta_p
	and	a.ie_status <> 'D';

BEGIN

if (ie_tipo_conta_web_p = 'D') then
	ie_origem_ocorrencia_w := 'P';
	ie_portal_web_w	:= 'DC';
else
	ie_origem_ocorrencia_w := 'C';
	ie_portal_web_w	:= 'CG';
end if;

for r_C01_w in C01 loop
	
	ie_abrir_procedimento_w := 'N';
	
	if (r_C01_w.qt_procedimento_imp > 1) then
		
		ie_abrir_procedimento_w := pls_obter_se_abre_proc(r_C01_w.cd_procedimento, r_C01_w.ie_origem_proced, ie_portal_web_w, r_C01_w.qt_procedimento_imp );		
		
		if (ie_abrir_procedimento_w = 'S') then
			
			for i in 1..r_C01_w.qt_procedimento_imp - 1 loop
				select	nextval('pls_conta_proc_seq')
				into STRICT	nr_seq_conta_proc_nv_w
				;
				
				insert	into	pls_conta_proc( 	nr_sequencia, dt_atualizacao, nm_usuario,
						dt_atualizacao_nrec, nm_usuario_nrec, dt_procedimento,
						cd_procedimento, ie_origem_proced, qt_procedimento, 
						vl_unitario, vl_procedimento, ie_via_acesso,
						nr_seq_conta, dt_procedimento_imp, cd_procedimento_imp, 
						qt_procedimento_imp, vl_unitario_imp, vl_procedimento_imp,
						ie_via_acesso_imp, dt_inicio_proc, dt_fim_proc,
						dt_inicio_proc_imp, dt_fim_proc_imp, tx_participacao,
						vl_participacao, ds_procedimento_imp, cd_tipo_tabela_imp,
						tx_reducao_acrescimo_imp, ie_tipo_despesa_imp, ie_tecnica_utilizada, 
						vl_liberado, vl_glosa, vl_saldo,
						nr_seq_regra, ie_tipo_despesa, ie_situacao, 
						ie_status, dt_liberacao, nm_usuario_liberacao, 
						tx_item, nr_seq_tiss_tabela, nr_seq_regra_horario, 
						vl_custo_operacional, vl_anestesista, vl_materiais, 
						vl_medico, vl_auxiliares, nr_seq_regra_liberacao, 
						ds_log, cd_conta_cred, cd_conta_deb, 
						cd_historico, cd_conta_glosa_cred, cd_conta_glosa_deb,
						cd_historico_glosa, nr_seq_regra_ctb_deb, nr_seq_regra_ctb_cred, 
						nr_seq_grupo_ans, nr_seq_honorario_crit, nr_seq_dados_proc, 
						nr_seq_pacote, vl_beneficiario, nr_seq_regra_pos_estab, 
						ie_cobranca_prevista, ds_justificativa, nr_seq_grupo_ans_sup, 
						nr_lote_provisao, nr_lote_contabil, vl_coparticipacao, 
						vl_liquido, cd_conta_copartic_cred, cd_conta_copartic_deb,
						cd_historico_copartic, ie_valor_informado, ie_sca, 
						nr_seq_mensalidade_item, nr_seq_tabela_sca, nr_seq_cobertura,
						nr_seq_item_sip, nr_seq_regra_vinculo, ie_tipo_cobertura,
						nr_seq_sca_cobertura, nr_seq_tipo_limitacao, nr_seq_conta_medica, vl_proc_copartic,
						nr_seq_regra_copartic, ie_tipo_contratacao, ie_segmentacao_sip, 
						cd_item_sip, sg_uf_sip, cd_classificacao_sip, 
						cd_porte_anestesico, nr_seq_setor_atend,
						ie_autogerado, dt_item_sip, ie_ato_cooperado, nr_seq_regra_cooperado, 
						cd_medico_solicitante, tx_intercambio, vl_intercambio, 
						tx_pcmso, vl_pcmso, cd_classif_cred, 
						cd_classif_deb, nr_seq_regra_valor, ie_estagio_complemento,
						nr_seq_proc_princ, nr_seq_regra_qtde_exec, ie_glosa,
						nr_seq_participante_hi,vl_taxa_servico_imp, vl_taxa_co_imp,
						vl_taxa_material_imp, vl_material_ptu_imp, vl_procedimento_ptu_imp,
						vl_co_ptu_imp, tx_intercambio_imp)
				( 	SELECT	nr_seq_conta_proc_nv_w, clock_timestamp(), nm_usuario,
						clock_timestamp(), nm_usuario, dt_procedimento,
						cd_procedimento, ie_origem_proced, 0,
						vl_unitario, vl_unitario, ie_via_acesso,
						nr_seq_conta, dt_procedimento_imp, cd_procedimento_imp,
						1, vl_unitario_imp, vl_unitario_imp,
						ie_via_acesso_imp, dt_inicio_proc, dt_fim_proc,
						dt_inicio_proc_imp, dt_fim_proc_imp, tx_participacao,
						vl_participacao, ds_procedimento_imp, cd_tipo_tabela_imp,
						tx_reducao_acrescimo_imp, ie_tipo_despesa_imp, ie_tecnica_utilizada, 
						0,0,0,
						nr_seq_regra, ie_tipo_despesa, ie_situacao, 
						'U', dt_liberacao, nm_usuario_liberacao, 
						tx_item, nr_seq_tiss_tabela, nr_seq_regra_horario, 
						vl_custo_operacional, vl_anestesista, vl_materiais, 
						vl_medico, vl_auxiliares, nr_seq_regra_liberacao, 
						ds_log, cd_conta_cred, cd_conta_deb, 
						cd_historico, cd_conta_glosa_cred, cd_conta_glosa_deb,
						cd_historico_glosa, nr_seq_regra_ctb_deb, nr_seq_regra_ctb_cred, 
						nr_seq_grupo_ans, nr_seq_honorario_crit, nr_seq_dados_proc, 
						nr_seq_pacote, vl_beneficiario, nr_seq_regra_pos_estab, 
						ie_cobranca_prevista, ds_justificativa, nr_seq_grupo_ans_sup, 
						nr_lote_provisao, nr_lote_contabil, vl_coparticipacao, 
						vl_liquido, cd_conta_copartic_cred, cd_conta_copartic_deb,
						cd_historico_copartic, ie_valor_informado, ie_sca, 
						nr_seq_mensalidade_item, nr_seq_tabela_sca, nr_seq_cobertura,
						nr_seq_item_sip, nr_seq_regra_vinculo, ie_tipo_cobertura,
						nr_seq_sca_cobertura, nr_seq_tipo_limitacao, nr_seq_conta_medica, vl_proc_copartic,
						nr_seq_regra_copartic, ie_tipo_contratacao, ie_segmentacao_sip, 
						cd_item_sip, sg_uf_sip, cd_classificacao_sip, 
						cd_porte_anestesico, nr_seq_setor_atend,
						ie_autogerado, dt_item_sip, ie_ato_cooperado, nr_seq_regra_cooperado, 
						cd_medico_solicitante, tx_intercambio, vl_intercambio, 
						tx_pcmso, vl_pcmso, cd_classif_cred, 
						cd_classif_deb, nr_seq_regra_valor, ie_estagio_complemento,
						nr_seq_proc_princ, nr_seq_regra_qtde_exec, 'N',
						nr_seq_participante_hi,vl_taxa_servico_imp, vl_taxa_co_imp,
						vl_taxa_material_imp, vl_material_ptu_imp, vl_procedimento_ptu_imp,
						vl_co_ptu_imp, tx_intercambio_imp
					from	pls_conta_proc
					where	nr_sequencia = r_C01_w.nr_sequencia);
				
				if (r_C01_w.nr_seq_conta_proc_regra IS NOT NULL AND r_C01_w.nr_seq_conta_proc_regra::text <> '') and (r_C01_w.nr_seq_item_tiss IS NOT NULL AND r_C01_w.nr_seq_item_tiss::text <> '') then
					
					
					-- gera o registro de regra
					CALL pls_cta_proc_mat_regra_pck.cria_registro_regra_proc(nr_seq_conta_proc_nv_w, nm_usuario_p);
					CALL pls_cta_proc_mat_regra_pck.atualiza_seq_tiss_proc(nr_seq_conta_proc_nv_w, r_C01_w.nr_seq_item_tiss, r_C01_w.nr_seq_item_tiss_vinculo, nm_usuario_p);
					
				end if;
				
				
				
					
				CALL pls_gravar_log_conta(	nr_seq_conta_p, nr_seq_conta_proc_nv_w, null,
							'Procedimento '||nr_seq_conta_proc_nv_w||' gerado a partir da regra de abertura de procedimento no Portal Web', nm_usuario_p);
							
				insert	into	pls_proc_participante(	nr_sequencia, dt_atualizacao, nm_usuario,
						dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_conta_proc, 
						cd_medico, nr_cpf_imp, nm_medico_executor_imp, 
						sg_conselho_imp, nr_crm_imp, uf_crm_imp,
						ie_funcao_medico_imp, cd_cgc_imp, cd_medico_imp,
						nr_seq_grau_partic, nr_seq_cbo_saude, cd_cbo_saude_imp,
						vl_participante, vl_honorario_medico, nr_seq_honorario_crit,
						ie_conselho_profissional, nr_seq_prestador_pgto, cd_guia,
						nr_seq_conselho, cd_prestador_imp, nr_seq_prestador,
						uf_conselho, vl_apresentado, ie_atualizado,
						ie_insercao_manual, vl_calculado, ie_glosa,
						ie_status, ie_gerada_cta_honorario)
				(	SELECT	nextval('pls_proc_participante_seq'), clock_timestamp(), nm_usuario_p, 
						clock_timestamp(), nm_usuario_p, nr_seq_conta_proc_nv_w, 
						cd_medico, nr_cpf_imp, nm_medico_executor_imp, 
						sg_conselho_imp, nr_crm_imp, uf_crm_imp,
						ie_funcao_medico_imp, cd_cgc_imp, cd_medico_imp,
						nr_seq_grau_partic, nr_seq_cbo_saude, cd_cbo_saude_imp,
						vl_participante, vl_honorario_medico, nr_seq_honorario_crit,
						ie_conselho_profissional, nr_seq_prestador_pgto, cd_guia,
						nr_seq_conselho, cd_prestador_imp, nr_seq_prestador,
						uf_conselho, vl_apresentado, ie_atualizado,
						ie_insercao_manual, vl_calculado, ie_glosa,
						ie_status, ie_gerada_cta_honorario
					from	pls_proc_participante
					where	nr_seq_conta_proc = r_C01_w.nr_sequencia);
				
				update	pls_conta_proc
				set	qt_procedimento_imp = qt_procedimento_imp - 1,
					vl_procedimento_imp = vl_procedimento_imp - vl_unitario_imp
				where	nr_sequencia = 	r_C01_w.nr_sequencia;
			end loop;
		end if;		
	end if;	
end loop;

begin
	select	coalesce(a.ie_tipo_guia,0),
		a.ie_tipo_segurado,
		coalesce(a.cd_guia,a.cd_guia_imp),
		a.nr_seq_segurado,
		a.nr_seq_prestador,
		coalesce(a.ie_tipo_conta,'O'),
		a.nr_seq_protocolo,
		b.nr_seq_prestador,
		a.nr_seq_prestador_exec,
		a.dt_atendimento_referencia,
		b.ie_origem_protocolo
	into STRICT	ie_tipo_guia_w,
		ie_tipo_segurado_w,
		cd_guia_w,
		nr_seq_segurado_w,
		nr_seq_prestador_w,
		ie_tipo_conta_w,
		nr_seq_protocolo_w,
		nr_seq_prest_protocolo_w,
		nr_seq_prestador_exec_w,
		dt_atendimento_referencia_w,
		ie_origem_protocolo_w
	from	pls_conta		a,
		pls_protocolo_conta 	b
	where	a.nr_seq_protocolo	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_conta_p;
exception
when others then
	nr_seq_protocolo_w := null;
end;

ie_valoriza_w := pls_obter_se_valoriza_portal(ie_origem_protocolo_w, cd_estabelecimento_p);
/*Obter conta intercambio para ocorrencia*/

if (ie_tipo_conta_w = 'I') then
	ie_conta_intercambio_w	:= 'I';
end if;

if (ie_conta_intercambio_w	<> 'I') then
	SELECT * FROM pls_obter_tipo_prest_consist(nr_seq_conta_p, nm_usuario_p, nr_seq_prestador_retorno_w, nr_seq_regra_retorno_w) INTO STRICT nr_seq_prestador_retorno_w, nr_seq_regra_retorno_w;
end if;
if (nr_seq_prestador_retorno_w IS NOT NULL AND nr_seq_prestador_retorno_w::text <> '') then
	nr_seq_prest_protocolo_w	:= nr_seq_prestador_retorno_w;
end if;

/* Obter dados da guia */

select	coalesce(max(nr_sequencia),0)
into STRICT	nr_seq_guia_w
from	pls_guia_plano
where	cd_guia		= cd_guia_w
and	nr_seq_segurado	= nr_seq_segurado_w;

begin
--select	nr_seq_plano,
select	pls_obter_produto_benef(nr_sequencia,dt_atendimento_referencia_w),
	cd_pessoa_fisica
into STRICT	nr_seq_plano_w,
	cd_pessoa_fisica_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_w;
exception
when others then
	nr_seq_plano_w	:= 0;
end;

if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
	qt_idade_w	:= obter_idade_pf(cd_pessoa_fisica_w,clock_timestamp(),'A');
end if;

/*Consistir a taxa de acordo com a via de acesso, caso consistido pelo portal*/

select	coalesce(max(ie_via_conta_portal),'N')
into STRICT	ie_via_conta_portal_w
from	pls_parametros
where	cd_estabelecimento = cd_estabelecimento_p;

open C01;
loop
fetch C01 into	
	nr_seq_proc_w,
	cd_procedimento_w,
	dt_fim_proc_w,
	dt_inicio_proc_w,
	dt_procedimento_w,
	ie_via_acesso_w,
	ie_tipo_despesa_w,
	ie_tipo_despesa_ww,
	ie_origem_proced_w,
	ds_procedimento_w,
	qt_procedimento_w,
	ie_status_w,
	nr_seq_conta_proc_regra_w,
	nr_seq_item_tiss_w,
	nr_seq_item_tiss_vinculo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	tx_item_w		:= 100;
if (ie_via_conta_portal_w = 'S') then
	if (ie_via_acesso_w	= 'M') then
		tx_item_w		:= 50;
	elsif (ie_via_acesso_w	= 'D') then
		tx_item_w		:= 70;
	elsif (ie_via_acesso_w	= 'B') then
		tx_item_w		:= 70;
	end if;
	
	update	pls_conta_proc
	set	tx_item = tx_item_w
	where	nr_sequencia = nr_seq_proc_w;
end if;
	
	ie_utilizado_conta_w	:= 'N';
	/* ST_OUTRASDESPESAS - dom 1835 Prestador
		1 - Gases Medicinais
		2 - Medicamentos
		3 - Materiais
		4 - Taxas Diversas
		5 - Di?rias
		6 - Aluguel 
	OPS - (1,2,3,4)(Procedimentos,Taxas,Di?rias,Pacotes) */
        if (ie_tipo_guia_w = '6') then
		CALL pls_tiss_consistir_honorario(nr_seq_proc_w, 'CP', 'DC',
			null, null, '', 
			nm_usuario_p, cd_estabelecimento_p, ie_origem_proced_w);
	end if;
	
	if (ie_tipo_despesa_w = '2') then
		CALL pls_tiss_consistir_taxa(nr_seq_proc_w, 'CP', 'DC',
			null, null, '', 
			nm_usuario_p, cd_estabelecimento_p, ie_origem_proced_w);
	end if;

	CALL pls_tiss_consistir_guia(nr_seq_proc_w, 'CP', 'DC',
			null, null, '', 
			nm_usuario_p, cd_estabelecimento_p);

	CALL pls_tiss_consistir_autorizacao(nr_seq_proc_w, 'CP', 'DC',
			null, null, '', 
			nm_usuario_p, cd_estabelecimento_p, ie_origem_proced_w);
	
	ds_obs_data_w := pls_valida_regra_data_conta(dt_procedimento_w);

	if (ds_obs_data_w IS NOT NULL AND ds_obs_data_w::text <> '') then
		CALL pls_gravar_conta_glosa('1701',nr_seq_conta_p,null,
					null,'N',ds_obs_data_w || '. Seq item: ' || nr_seq_proc_w,
					nm_usuario_p,'A','DC',
					nr_seq_prestador_w, cd_estabelecimento_p, '', null);
	end if;

	SELECT * FROM pls_consiste_proced_autor(	nr_seq_conta_p, nr_seq_proc_w, nm_usuario_p, cd_estabelecimento_p, nr_seq_prest_protocolo_w, 'DC', null, ie_liberar_item_autor_w, ie_existe_regra_w, nr_seq_motivo_glosa_w, nr_seq_regra_autor_w) INTO STRICT ie_liberar_item_autor_w, ie_existe_regra_w, nr_seq_motivo_glosa_w, nr_seq_regra_autor_w;
		
	if (ie_liberar_item_autor_w = 'S') and (nr_seq_guia_w	!= 0)then		
	
		if (ie_tipo_despesa_w <> '3') then /*Quando N?O for di?rias*/
	
			
			select 	coalesce(max(qt_saldo),0),
				coalesce(max(qt_utilizada),0),
				coalesce(max(qt_autorizada),0)
			into STRICT	qt_saldo_w,
				qt_utilizada_w,
				qt_autorizada_w
			from 	table(pls_conta_autor_pck.obter_dados(nr_seq_guia_w,'P', cd_estabelecimento_p, ie_origem_proced_w, cd_procedimento_w));
			
			/*Atualizado o calculo pois n?o estava contabilizando o item que estava passando no momento
			pois o seu status est? como usu?rio aguardando a??o drquadros 14/08/2013*/
	
			-- JJUNG - Removido pois as contas de complemento estar?o em usu?rio(aguardando a??o) por?m j? ser?o consideradas no 

			-- PLS_CONTA_AUTOR_PCK. 

			/*if	(ie_status_w = 'U')	then
				qt_utilizada_w	:= qt_utilizada_w + qt_procedimento_w;
				qt_saldo_w	:= qt_autorizada_w - qt_utilizada_w;
			end if;*/
			
			if ( qt_autorizada_w > 0 ) and ( qt_saldo_w < 0 ) 	then/*Verifica se o item realmente esta autorizada*/
				 
				select	count(1)
				into STRICT	qt_conta_dif_w
				from	pls_conta_autor_utilizada_v
				where	nr_seq_guia		=  nr_seq_guia_w
				and	nr_seq_conta		!= nr_seq_conta_p
				and	cd_procedimento 	= cd_procedimento_w
				and	ie_origem_proced	= ie_origem_proced_w;
				
				if ( qt_conta_dif_w = 0 )	then -- Se a n?o em outras contas
					CALL pls_gravar_conta_glosa('1820',null, nr_seq_proc_w,
								null,'N',
								'[1] - A quantidade de procedimentos autorizados e ainda n?o utilizados ? menor que a quantidade apresentada de procedimentos da conta. Procedimentos da conta: ' || qt_procedimento_w || 
								' / Procedimento autorizados : ' || qt_autorizada_w || '. Regra de autoriza??o: ' || nr_seq_regra_autor_w,
								nm_usuario_p,'A','DC', 
								nr_seq_prestador_w, cd_estabelecimento_p, '', null);		
				else 	

					select substr(pls_admin_cursor.obter_desc_cursor(cursor(  	select	nr_seq_conta ds
									from	pls_conta_autor_utilizada_v
									where	nr_seq_guia		=  nr_seq_guia_w
									and	nr_seq_conta		!= nr_seq_conta_p
									and	cd_procedimento 	= cd_procedimento_w
									and	ie_origem_proced	= ie_origem_proced_w), ', '), 1, 3500) x
					into STRICT	ds_contas_autor_w	
					;
						
					select position('-' in qt_saldo_w)
					into STRICT qt_negativo_w
					;
					
					if (coalesce(qt_negativo_w,0)	> 0)	then
						CALL pls_gravar_conta_glosa('1820',null, nr_seq_proc_w,
									null,'N', '[3] - Esta guia foi executada em outras contas ('|| ds_contas_autor_w ||'). Quantidade cobrada acima da autorizada : '|| replace(qt_saldo_w,'-','') ||
									'. Regra de autoriza??o: ' || nr_seq_regra_autor_w,
									nm_usuario_p,'A','DC',
									nr_seq_prestador_w, cd_estabelecimento_p, '', null);
					elsif (qt_saldo_w < 0)	then
						CALL pls_gravar_conta_glosa('1820',null, nr_seq_proc_w,
									null,'N', '[3] - Esta guia foi executada em outras contas ('|| ds_contas_autor_w ||') e possui saldo de '||qt_saldo_w ||
									'. Regra de autoriza??o: ' || nr_seq_regra_autor_w,
									nm_usuario_p,'A','DC',
									nr_seq_prestador_w, cd_estabelecimento_p, '', null);
					end if;
				end if;					
			end if;
		elsif (ie_tipo_despesa_w	= '3') and	-- Quando for di?rias e
			(ie_tipo_guia_w	= '5') then		-- Guia de Resumo de Interna??o	
			
			select 	coalesce(max(qt_saldo),0),
				coalesce(max(qt_utilizada),0),
				coalesce(max(qt_autorizada),0)
			into STRICT	qt_saldo_w,
				qt_utilizada_w,
				qt_autorizada_w
			from 	table(pls_conta_autor_pck.obter_dados(nr_seq_guia_w,'D', cd_estabelecimento_p, ie_origem_proced_w, cd_procedimento_w));
			
			/*Atualizado o calculo pois n?o estava contabilizando o item que estava passando no momento
			pois o seu status est? como usu?rio aguardando a??o drquadros 14/08/2013*/

			-- JJUNG - Removido pois as contas de complemento estar?o em usu?rio(aguardando a??o) por?m j? ser?o consideradas no 

			-- PLS_CONTA_AUTOR_PCK. 

			/*if	(ie_status_w = 'U')	then
				qt_utilizada_w	:= qt_utilizada_w + qt_procedimento_w;
				qt_saldo_w	:= qt_autorizada_w - qt_utilizada_w;
			end if;*/
			
			if (qt_saldo_w < 0) then
				
				select	count(1)
				into STRICT	qt_conta_dif_w
				from	pls_conta_autor_utilizada_v
				where	nr_seq_guia		=  nr_seq_guia_w
				and	nr_seq_conta		!= nr_seq_conta_p
				and	((cd_procedimento 	= cd_procedimento_w) or (coalesce(cd_procedimento::text, '') = ''))
				and	((ie_origem_proced	= ie_origem_proced_w) or (coalesce(ie_origem_proced::text, '') = ''));
				
				if (qt_conta_dif_w = 0) then
					CALL pls_gravar_conta_glosa('1999',null,nr_seq_proc_w,
								null,'N', '[1] Quantidade de di?rias utilizadas excede a quantidade de dias autorizados. '||
								'Autorizada: '||qt_autorizada_w||' Utilizada: '||qt_utilizada_w || '. Regra de autoriza??o: ' || nr_seq_regra_autor_w, 
								nm_usuario_p,'A','DC',
								nr_seq_prestador_w, cd_estabelecimento_p, '', null);

				else
					select substr(pls_admin_cursor.obter_desc_cursor(cursor(  	select	nr_seq_conta ds
									from	pls_conta_autor_utilizada_v
									where	nr_seq_guia	=  nr_seq_guia_w
									and	nr_seq_conta	!= nr_seq_conta_p
									and	cd_procedimento 	= cd_procedimento_w
									and	ie_origem_proced	= ie_origem_proced_w), ', '), 1, 3500) x
					into STRICT	ds_contas_autor_w	
					;
					
					CALL pls_gravar_conta_glosa('1999',null,nr_seq_proc_w,
								null,'N', '[3] Quantidade de di?rias utilizadas excede a quantidade de dias autorizados. Esta guia foi executada em outras contas ('|| ds_contas_autor_w ||') e possui saldo de '|| qt_saldo_w||'. '||
								'Autorizada: '||qt_autorizada_w||' Utilizada: '||qt_utilizada_w || '. Regra de autoriza??o: ' || nr_seq_regra_autor_w,
								nm_usuario_p,'A','DC',
								nr_seq_prestador_w, cd_estabelecimento_p, '', null);
				end if;
			end if;
		end if;
	end if;

	/*Consiste vigencia proc*/

	ie_proc_ativo_w	:= pls_obter_se_proc_ativo(cd_procedimento_w, ie_origem_proced_w, dt_procedimento_w);

	if (ie_proc_ativo_w = 'N') then
		CALL pls_gravar_conta_glosa('9920', null, nr_seq_proc_w, null, 'N', 'O procedimento n?o est? ativo.', nm_usuario_p, 'A', 'DC',
					nr_seq_prestador_w, cd_estabelecimento_p, '', null);
	elsif (ie_proc_ativo_w = 'D') then
		CALL pls_gravar_conta_glosa('9920', null, nr_seq_proc_w, null, 'N', 'O procedimento est? fora da data de vig?ncia.', nm_usuario_p, 'A', 'DC',
					nr_seq_prestador_w, cd_estabelecimento_p, '', null);
	end if;
	
	if (ie_tipo_despesa_w = '1') then
		CALL pls_tiss_consistir_proc(nr_seq_proc_w, 'CP', 'DC',
				null, null, '', 
				nm_usuario_p, cd_estabelecimento_p, ie_origem_proced_w);
				
		select	count(1)
		into STRICT	qt_proc_conta_w 
		from	pls_guia_plano_proc
		where	nr_seq_guia		= nr_seq_guia_w
		and	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w;
			
		/* Teste se n?o exigiu autoriza??o, ou se exigiu, mas a quantidade de procedimentos na conta ? maior do que na guia */

		if 	(ie_liberar_item_autor_w = 'S' AND qt_proc_conta_w = 0) or
			((ie_liberar_item_autor_w = 'N') and (coalesce(qt_procedimento_w,0) > 0)) then
			if (nr_seq_plano_w	<> 0) then
				select	max(ie_segmentacao)
				into STRICT	ie_segmentacao_w
				from	pls_plano 
				where	nr_sequencia	= nr_seq_plano_w;
			end if;
			
			ie_conta_autor_w	:= pls_obter_se_conta_autorizada(nr_seq_conta_p,'IA');
			
			if (ie_conta_autor_w <> 'S')	then
				/* Felipe - N?o pode consistir cobertura para Di?rias e Taxas*/

				qt_glosa_w := pls_consistir_cobertura_proc(	nr_seq_segurado_w, null, nr_seq_proc_w, null, cd_procedimento_w, ie_origem_proced_w, dt_procedimento_w, ie_segmentacao_w, cd_estabelecimento_p, null, nm_usuario_p, qt_glosa_w, 'W');
			end if;
		end if;
		
		--aldellandrea altera??o os 819636
		ie_carencia_w	:= pls_obter_se_gera_glosa_conta('1410',null,'DC',cd_estabelecimento_p);
	
		if (ie_carencia_w = 'S') then
			--aldellandrea - Verificar se o benefici?rio ? recem-nascido, caso for, n?o ser? preciso consitir as car?ncias do benefici?rio
			ie_nascido_plano_w := pls_obter_segurado_nasc_plano(nr_seq_segurado_w, cd_estabelecimento_p, ie_nascido_plano_w, nm_usuario_p);
			if (coalesce(ie_nascido_plano_w,'N') = 'N') then
				
				select	coalesce(ie_carencia_abrangencia_ant,'N')
				into STRICT	ie_carencia_abrangencia_ant_w
				from	pls_parametros
				where	cd_estabelecimento	= cd_estabelecimento_p;
		
				CALL pls_consistir_carencia_proc(	nr_seq_segurado_w, null, null,
								nr_seq_proc_w, null, cd_procedimento_w, 
								ie_origem_proced_w, dt_procedimento_w, cd_estabelecimento_p, 
								nm_usuario_p, 'DC',ie_carencia_abrangencia_ant_w);
			end if;
		end if;
		--fim
	end if;	


	if (cd_procedimento_w	> 0) then			
		/* Verificar se o procedimento importado ? um procedimento de pacote */

		select	max(nr_sequencia)
		into STRICT	nr_seq_pacote_w
		from	pls_pacote
		where	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w
		and	coalesce(nr_seq_prestador,coalesce(nr_seq_prestador_p,0))	= coalesce(nr_seq_prestador_p,0)
		and	ie_situacao		= 'A';
		
		/* Francisco - 16/05/2012 - OS 447352 */

		if (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '') then
			select	coalesce(ie_regra_preco,'N')
			into STRICT	ie_regra_preco_w
			from	pls_pacote a
			where	a.nr_sequencia = nr_seq_pacote_w;
			
			if (ie_regra_preco_w = 'S') then
				SELECT * FROM pls_obter_regra_preco_pacote(cd_procedimento_w, ie_origem_proced_w, 'C', nr_seq_proc_w, nm_usuario_p, nr_seq_pacote_w, nr_seq_regra_preco_pac_w) INTO STRICT nr_seq_pacote_w, nr_seq_regra_preco_pac_w;
			end if;
		end if;
		
		
		if (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '') then
			ie_tipo_despesa_w	:= '4'; /* Pacote */
		end if;

	else
		if (ie_tipo_despesa_w <> '2') then
			CALL pls_gravar_conta_glosa('1801',nr_seq_conta_p, nr_seq_proc_w, 
						null, 'N', 'Procedimento: '||ds_procedimento_w, 
						nm_usuario_p, 'A', 'DC', 
						nr_seq_prestador_p, cd_estabelecimento_p, '', null);
		end if;
	end if;	
	
	/*Djavan - Verifica??o da idade e sexo . Gera??o das glosas 1803 e 1802.*/
	CALL pls_consistir_benef_proc(nr_seq_segurado_w, null, nr_seq_proc_w, null, 'DC', nm_usuario_p, cd_estabelecimento_p, qt_idade_w);
	
	/* pls_atualiza_valor_proc(nr_seq_proc_w, 'S', nm_usuario_p); Diego 28/06/2011 - Modificado para gerar log da forma??o de pre?o.*/


	/*
	Retirado pois concentrado a valoriza??o conforme regra cadastrada
	if	(ie_tipo_despesa_ww = '1') then 
		pls_atualiza_valor_proc(nr_seq_proc_w, 'N', nm_usuario_p,'S',null,null);
	elsif	(ie_tipo_despesa_ww in ('2','3')) then 
		pls_atualiza_valor_servico(nr_seq_proc_w, 'N', nm_usuario_p,'S'); */
	if (ie_tipo_despesa_ww = '4') and (coalesce(ie_valoriza_w,'N') = 'N')then
		CALL pls_atualiza_valor_pacote(nr_seq_proc_w, 'C', nm_usuario_p, 'S', 'N');
	end if;
	
	CALL pls_consistir_proc_prestador(	nr_seq_prestador_p, nr_seq_proc_w, null,
					null, null, cd_estabelecimento_p,
					nm_usuario_p, 'DC');
	
	update	pls_proc_participante
	set	ie_status		= 'U'
	where 	nr_seq_conta_proc	= nr_seq_proc_w
	and	((coalesce(ie_status::text, '') = '') or (ie_status != 'C'));
	
	CALL pls_gerar_ocorrencia(	nr_seq_segurado_w, null, null,
				nr_seq_conta_p, nr_seq_proc_w, null, 
				cd_procedimento_w, ie_origem_proced_w, null, 
				ie_tipo_guia_w, nr_seq_plano_w, 'C',
				null, null, nr_seq_prestador_exec_w,
				null,'I','',
				ie_origem_ocorrencia_w, nm_usuario_p, cd_estabelecimento_p, 
				null,null, ie_tipo_conta_web_p,
				null, null);
	
	end;
end loop;
close C01;

/* Consist?ncia dos procedimentos */

if (ie_tipo_segurado_w	= 'B') then
	CALL pls_consiste_procedimento(nr_seq_conta_p, 'DC', nm_usuario_p, cd_estabelecimento_p);
end if;

if (qt_registros_w > 0) then
	ie_situacao_protocolo_w	:= 'RE';
end if;

update	pls_conta_proc
set	ie_status	= 'C'
where	nr_seq_conta 	= nr_seq_conta_p
and	ie_status 	not in ('D','M');

ie_situacao_protocolo_p	:= ie_situacao_protocolo_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consist_conta_proc_web ( nr_seq_conta_p bigint, nr_seq_prestador_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ie_tipo_conta_web_p text, ie_situacao_protocolo_p INOUT text) FROM PUBLIC;

