-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_componente_custo_pk () AS $body$
DECLARE


cd_empresa_w		bigint;
nr_seq_comp_custo_w	bigint;
nr_seq_comp_data_w	bigint;
qt_registro_w		bigint;
qt_reg_nulo_w		bigint;

c01 CURSOR FOR
SELECT	cd_estabelecimento,
	cd_componente,
	cd_empresa,
	nr_sequencia
from	componente_custo
where	1 = 1
order by 1,2;

vet01	C01%RowType;

c02 CURSOR FOR
SELECT	cd_estabelecimento,
	cd_componente,
	dt_componente
from	componente_data
where	coalesce(nr_sequencia::text, '') = '';

vet02	C02%Rowtype;

c03 CURSOR FOR
SELECT	cd_estabelecimento,
	cd_componente,
	dt_componente
from	componente_data
where	(nr_sequencia IS NOT NULL AND nr_sequencia::text <> '')
and	cd_estabelecimento	= vet01.cd_estabelecimento
and	cd_componente		= vet01.cd_componente
and	coalesce(nr_seq_comp_custo::text, '') = '';

vet03	C03%RowType;


BEGIN


/* Atualiza NR_SEQUENCIA - nova PK*/

open C02;
loop
fetch C02 into
	vet02;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	select	nextval('componente_data_seq')
	into STRICT	nr_seq_comp_data_w
	;

	update	componente_data
	set	nr_sequencia		= nr_seq_comp_data_w
	where	cd_estabelecimento	= vet02.cd_estabelecimento
	and	cd_componente		= vet02.cd_componente
	and	dt_componente		= vet02.dt_componente;

	end;
end loop;
close C02;

/* FIM TABELA COMPONENTE_DATA*/

open C01;
loop
fetch C01 into
	vet01;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	qt_registro_w		:= qt_registro_w + 1;
	cd_empresa_w		:= obter_empresa_estab(vet01.cd_estabelecimento);
	nr_seq_comp_custo_w	:= vet01.nr_sequencia;

	if (coalesce(vet01.nr_sequencia::text, '') = '') then
		begin
		select	nextval('componente_custo_seq')
		into STRICT	nr_seq_comp_custo_w
		;

		update	componente_custo
		set	nr_sequencia	= nr_seq_comp_custo_w,
			cd_empresa	= cd_empresa_w
		where	cd_estabelecimento	= vet01.cd_estabelecimento
		and	cd_componente	= vet01.cd_componente;
		end;
	end if;
	/* Atualiza FK*/

	open C03;
	loop
	fetch C03 into
		vet03;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		update	componente_data
		set	nr_seq_comp_custo	= nr_seq_comp_custo_w
		where	cd_estabelecimento	= vet03.cd_estabelecimento
		and	cd_componente		= vet03.cd_componente
		and	dt_componente		= vet03.dt_componente;

		end;
	end loop;
	close C03;

	update	componente_tabela
	set	nr_seq_comp_custo	= nr_seq_comp_custo_w
	where	cd_estabelecimento	= vet01.cd_estabelecimento
	and	cd_componente		= vet01.cd_componente
	and	coalesce(nr_seq_comp_custo::text, '') = '';

	update	tabela_parametro
	set	nr_seq_comp_custo	= nr_seq_comp_custo_w
	where	cd_estabelecimento	= vet01.cd_estabelecimento
	and	CD_COMP_PARAMETRO	= vet01.cd_componente
	and	coalesce(nr_seq_comp_custo::text, '') = '';

	end;
end loop;
close C01;
commit;

/* REMOVER INTEGRIDADES ANTERIORES */

select	count(*)
into STRICT	qt_registro_w
from	user_cons_columns a
where	a.constraint_name 	= 'COMDATA_COMCUST_FK'
and	a.table_name		= 'COMPONENTE_DATA'
and	a.column_name		= 'NR_SEQ_COMP_CUSTO';

if (qt_registro_w = 0) then
	CALL exec_sql_dinamico('COMCUS_PK','alter table COMPONENTE_DATA drop constraint COMDATA_COMCUST_FK');
end if;

select	count(*)
into STRICT	qt_registro_w
from	user_cons_columns a
where	a.constraint_name 	= 'COMTABE_COMCUST_FK'
and	a.table_name		= 'COMPONENTE_TABELA'
and	a.column_name		= 'NR_SEQ_COMP_CUSTO';

if (qt_registro_w = 0) then
	CALL exec_sql_dinamico('COMCUS_PK','alter table COMPONENTE_TABELA drop constraint COMTABE_COMCUST_FK');
end if;

select	count(*)
into STRICT	qt_registro_w
from	user_cons_columns a
where	a.constraint_name 	= 'TABPARA_COMCUST_FK'
and	a.table_name		= 'TABELA_PARAMETRO'
and	a.column_name		= 'NR_SEQ_COMP_CUSTO';

if (qt_registro_w = 0) then
	CALL exec_sql_dinamico('COMCUS_PK','alter table TABELA_PARAMETRO drop constraint TABPARA_COMCUST_FK');
end if;


/*REMOVER CHAVES PRIMÁRIAS*/

/*TABELA COMPONENTE_DATA */

select	count(*)
into STRICT	qt_reg_nulo_w
from	componente_data
where	coalesce(nr_sequencia::text, '') = '';

select	count(*)
into STRICT	qt_registro_w
from	user_cons_columns
where	constraint_name = 'COMDATA_PK'
and	column_name	= 'NR_SEQUENCIA';

if (qt_registro_w = 0) and (qt_reg_nulo_w = 0) then

	CALL exec_sql_dinamico('COMDATA_PK','alter table COMPONENTE_DATA drop constraint COMDATA_PK');

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'COMDATA_PK';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('COMDATA_PK','drop index COMDATA_PK');
	end if;
end if;

/* TABELA COMPONENTE_CUSTO */

select	count(*)
into STRICT	qt_reg_nulo_w
from	componente_custo
where	coalesce(nr_sequencia::text, '') = '';

select	count(*)
into STRICT	qt_registro_w
from	user_cons_columns
where	constraint_name = 'COMCUST_PK'
and	column_name	= 'NR_SEQUENCIA';

if (qt_registro_w = 0) and (qt_reg_nulo_w = 0) then

	CALL exec_sql_dinamico('COMCUST_PK','alter table COMPONENTE_CUSTO drop constraint COMCUST_PK');

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'COMCUST_PK';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('COMCUST_PK','drop index COMCUST_PK');
	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_componente_custo_pk () FROM PUBLIC;

