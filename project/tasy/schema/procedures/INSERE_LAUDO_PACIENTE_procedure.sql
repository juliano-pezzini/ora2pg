-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE insere_laudo_paciente (nm_usuario_digitacao_p text, nm_usuario_p text, nr_atendimento_p bigint, ds_lista_exames_p text, cd_protocolo_p bigint, cd_setor_execucao_p bigint, nr_sequencia_laudo_paciente_p INOUT bigint) AS $body$
DECLARE

nr_laudo_w                    bigint;
nr_sequencia_laudo_paciente_w bigint;
nr_seq_proced_w               bigint;
ds_lista_w                    varchar(2000);
tam_lista_w                   bigint;
ie_pos_virgula_w              smallint;
qt_existe_virgula_w           bigint;
qt_existe_laudo_w             bigint;
nr_prescricao_w               bigint;
nr_sequencia_prescricao_w     bigint;
nr_seq_interno_w              bigint;
cd_pessoa_fisica_w            varchar(10);
ie_exige_seg_aprov_w          varchar(1);
dt_procedimento_w             timestamp;
nr_seq_laudo_paciente_rel_w   bigint;
dt_inicio_laudo_w             timestamp;
ie_prelaudo_w                 varchar(1);
nm_usuario_digitacao_w        varchar(255);
ds_arquivo_w                  varchar(255);
nr_seq_imagem_w               laudo_paciente_imagem.nr_sequencia%type;
ie_gerar_comunic_w            laudo_paciente.ie_gerar_comunic%type;
ds_titulo_laudo_w             laudo_paciente.ds_titulo_laudo%type;

C01 CURSOR FOR
  SELECT ds_observacao
  FROM prescr_procedimento_obs
  WHERE nr_prescricao = nr_prescricao_w 
  AND nr_seq_prescricao = nr_sequencia_prescricao_w
  AND SUBSTR(ds_observacao, NULLIF(INSTR(ds_observacao,'.', -1) + 1, 1)) IN ('bmp', 'ico', 'emf', 'wmf', 'doc', 'pdf', 'jpg', 'avi') 
  AND nm_usuario_nrec <> 'SLEEPWARE'
  ORDER BY nr_sequencia asc;


BEGIN

  SELECT coalesce(MAX(ie_prelaudo), 'N')
  INTO STRICT   ie_prelaudo_w
  FROM   parametro_cdi
  WHERE  cd_estabelecimento = obter_estabelecimento_ativo;


  SELECT coalesce(MAX(nr_laudo), 0) + 1 
  INTO STRICT   nr_laudo_w 
  FROM   laudo_paciente 
  WHERE  nr_atendimento = nr_atendimento_p;

  SELECT nextval('laudo_paciente_seq') 
  INTO STRICT   nr_sequencia_laudo_paciente_w 
;

  ds_lista_w := ds_lista_exames_p;

  SELECT position(',' in ds_lista_w) 
  INTO STRICT   qt_existe_virgula_w 
;

  IF ( qt_existe_virgula_w = 0 ) THEN 
    ds_lista_w := ds_lista_w || ',';
  END IF;

  IF (ds_lista_w IS NOT NULL AND ds_lista_w::text <> '') THEN 
    BEGIN 
      WHILE(ds_lista_w IS NOT NULL AND ds_lista_w::text <> '') LOOP 
        BEGIN 
          tam_lista_w := LENGTH(ds_lista_w);
          ie_pos_virgula_w := position(',' in ds_lista_w);

          IF ( ie_pos_virgula_w <> 0 ) THEN 
            nr_seq_interno_w := (SUBSTR(ds_lista_w, 1, (ie_pos_virgula_w - 1)))::numeric;
            ds_lista_w := substr(ds_lista_w, ( ie_pos_virgula_w + 1 ), tam_lista_w);
          END IF;

          SELECT count(*) 
          INTO STRICT   qt_existe_laudo_w 
          FROM   laudo_paciente 
          WHERE  nr_sequencia = nr_sequencia_laudo_paciente_w;

          SELECT DISTINCT( a.nr_prescricao ), 
                         ( a.nr_sequencia ), 
                          coalesce(( b.ie_exige_seg_aprov ), 'N') 
          INTO STRICT           nr_prescricao_w, 
                     nr_sequencia_prescricao_w, 
                         ie_exige_seg_aprov_w 
          FROM   prescr_procedimento a 
          LEFT JOIN proc_interno b ON a.nr_seq_proc_interno = b.nr_sequencia 
          WHERE  a.nr_seq_interno = nr_seq_interno_w;

          SELECT MAX(cd_pessoa_fisica) 
          INTO STRICT   cd_pessoa_fisica_w 
          FROM   prescr_medica 
          WHERE  nr_prescricao = nr_prescricao_w;

          SELECT max(nr_sequencia) 
          INTO STRICT   nr_seq_proced_w 
          FROM   procedimento_paciente 
          LEFT JOIN conta_paciente ON procedimento_paciente.nr_interno_conta = conta_paciente.nr_interno_conta 
          WHERE  coalesce(conta_paciente.ie_cancelamento, 'N') = 'N' 
          AND nr_prescricao = nr_prescricao_w 
          AND procedimento_paciente.qt_procedimento > 0 
          AND nr_sequencia_prescricao = nr_sequencia_prescricao_w;

          SELECT MAX(a.dt_procedimento) 
          INTO STRICT   dt_procedimento_w 
          FROM   procedimento_paciente a 
          WHERE  a.nr_sequencia = nr_seq_proced_w;
          
          --Temporary report title
          ds_titulo_laudo_w := substr(obter_titulo_laudo_mmed(ds_lista_exames_p),1,1200);

          IF ( qt_existe_laudo_w = 0 ) THEN
        IF (ie_prelaudo_w = 'N') THEN
        nm_usuario_digitacao_w := nm_usuario_digitacao_p;
        dt_inicio_laudo_w := clock_timestamp();
      ELSE
        nm_usuario_digitacao_w := NULL;
        dt_inicio_laudo_w := NULL;
      END IF;

          SELECT    CASE WHEN 'S'=upper(obter_regra_atributo(obter_estabelecimento_ativo,                            obter_perfil_ativo,                             nm_usuario_p,                             'LAUDO_PACIENTE',                            'IE_GERAR_COMUNIC',                             'V', '', 0, 0, '')) THEN                          'S'  ELSE 'N' END  
          INTO STRICT      ie_gerar_comunic_w 
;

            INSERT INTO laudo_paciente(nr_sequencia,
                    ds_laudo, 
                    dt_entrada_unidade, 
                    nr_laudo, 
                    nm_usuario, 
                    dt_atualizacao, 
                    qt_imagem, 
                    nr_seq_proc, 
                    nr_prescricao, 
                    nr_seq_prescricao, 
                    nr_atendimento, 
                    dt_exame, 
                    nm_usuario_digitacao, 
                    dt_inicio_digitacao, 
                    dt_laudo, 
                    cd_pessoa_fisica, 
                    cd_protocolo, 
                    cd_setor_execucao,
                    ie_gerar_comunic,
                    ds_titulo_laudo) 
            SELECT nr_sequencia_laudo_paciente_w, 
                 '', 
                 dt_entrada_unidade, 
                               nr_laudo_w, 
                 nm_usuario_p, 
                 clock_timestamp(), 
                 0, 
                 nr_sequencia, 
                 nr_prescricao, 
                 nr_sequencia_prescricao, 
                 nr_atendimento, 
                 dt_procedimento_w, 
                 nm_usuario_digitacao_w, 
                 dt_inicio_laudo_w, 
                 clock_timestamp(), 
                 cd_pessoa_fisica_w, 
                 cd_protocolo_p, 
                 cd_setor_execucao_p, 
                 ie_gerar_comunic_w,
                 ds_titulo_laudo_w
            FROM   procedimento_paciente 
            WHERE  nr_sequencia = nr_seq_proced_w;

            SELECT nextval('laudo_paciente_relatorio_seq') 
            INTO STRICT   nr_seq_laudo_paciente_rel_w 
;

            INSERT INTO laudo_paciente_relatorio(nr_sequencia, 
                          nr_seq_laudo, 
                          dt_atualizacao, 
                          nm_usuario, 
                          dt_atualizacao_nrec, 
                          nm_usuario_nrec) 
            VALUES (nr_seq_laudo_paciente_rel_w, 
                                nr_sequencia_laudo_paciente_w, 
                                clock_timestamp(), 
                                nm_usuario_p, 
                                clock_timestamp(), 
                                nm_usuario_p);
          END IF;

          IF ( ie_exige_seg_aprov_w = 'S' ) THEN 
            UPDATE laudo_paciente 
            SET    ie_exige_seg_aprov = 'S' 
            WHERE  nr_sequencia = nr_sequencia_laudo_paciente_w;
          END IF;

          UPDATE procedimento_paciente 
          SET    nr_laudo = nr_sequencia_laudo_paciente_w 
          WHERE  nr_prescricao = nr_prescricao_w 
          AND nr_sequencia_prescricao = nr_sequencia_prescricao_w;

      COMMIT;

          CALL atualizar_status_exec(nr_seq_proced_w, nm_usuario_p);

      IF (ie_prelaudo_w = 'N') THEN
        CALL gravar_auditoria_mmed(nr_prescricao_w, 
                    nr_sequencia_prescricao_w, 
                  nm_usuario_p, 
                  3,
                  NULL);
      ELSE
      CALL gravar_auditoria_mmed(nr_prescricao_w, 
                    nr_sequencia_prescricao_w, 
                  nm_usuario_p, 
                  30,
                  NULL);
      END IF;
        END;
        END LOOP;
    END;
  
  CALL unificar_captura_img(nr_sequencia_laudo_paciente_w, nm_usuario_p);
  END IF;

  COMMIT;
  
  begin 
    select ds_observacao
    into STRICT ds_arquivo_w
    from PRESCR_PROCEDIMENTO_OBS
    where nr_sequencia = (SELECT max(nr_sequencia)  
                          from PRESCR_PROCEDIMENTO_OBS
                          where nr_prescricao = nr_prescricao_w
                          and nr_seq_prescricao = nr_sequencia_prescricao_w
                          and NM_USUARIO_NREC = 'SLEEPWARE');
  exception when others then
    ds_arquivo_w := null;
  end;

  if (ds_arquivo_w IS NOT NULL AND ds_arquivo_w::text <> '') then
  begin
  
    select (coalesce(max(nr_seq_imagem),0) + 1)
     into STRICT  nr_seq_imagem_w
    from  laudo_paciente_imagem
   where  nr_sequencia = nr_sequencia_laudo_paciente_w;

  insert into LAUDO_PACIENTE_IMAGEM(
      nr_sequencia,
      nr_seq_imagem,
      DS_ARQUIVO_IMAGEM,
      nm_usuario,
      dt_atualizacao,
      nm_usuario_nrec,
     dt_atualizacao_nrec
      )
  values (
      nr_sequencia_laudo_paciente_w,
      nr_seq_imagem_w,
      ds_arquivo_w,
      'SLEEPWARE',
      clock_timestamp(),
      'SLEEPWARE',
      clock_timestamp()
  );

    COMMIT;
  end;
  end if;

  OPEN C01;
    LOOP
    FETCH C01 INTO
      ds_arquivo_w;
    EXIT WHEN NOT FOUND; /* apply on C01 */
    SELECT (coalesce(MAX(nr_seq_imagem),0) + 1)
      INTO STRICT nr_seq_imagem_w
      FROM laudo_paciente_imagem
      WHERE  nr_sequencia = nr_sequencia_laudo_paciente_w;

      INSERT INTO LAUDO_PACIENTE_IMAGEM(nr_sequencia,
                    nr_seq_imagem,
                    ds_arquivo_imagem,
                    nm_usuario,
                    dt_atualizacao,
                    nm_usuario_nrec,
                    dt_atualizacao_nrec)
    VALUES (nr_sequencia_laudo_paciente_w,
      nr_seq_imagem_w,
      ds_arquivo_w,
      nm_usuario_p,
      clock_timestamp(),
      nm_usuario_p,
      clock_timestamp());

    END LOOP;
    CLOSE C01;
		
  COMMIT;

  nr_sequencia_laudo_paciente_p := nr_sequencia_laudo_paciente_w;
  
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE insere_laudo_paciente (nm_usuario_digitacao_p text, nm_usuario_p text, nr_atendimento_p bigint, ds_lista_exames_p text, cd_protocolo_p bigint, cd_setor_execucao_p bigint, nr_sequencia_laudo_paciente_p INOUT bigint) FROM PUBLIC;

