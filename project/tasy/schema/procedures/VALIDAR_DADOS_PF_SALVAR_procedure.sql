-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE validar_dados_pf_salvar ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_pessoa_fisica_p text, ie_evento_p text, nr_cpf_p text, nr_rg_p text, nr_passaporte_p text, nr_rne_p text, nr_ric_p text, cd_nacionalidade_p text, dt_nascimento_p timestamp, nr_pis_pasep_p text, nr_cartao_nac_sus_p text, cd_declaracao_nasc_vivo_p text, ds_mensagem_p INOUT text, ie_acao_mensagem_p INOUT text, nr_seq_regra_p INOUT bigint) AS $body$
DECLARE



ie_tipo_convenio_w	convenio.ie_tipo_convenio%type;
nr_cpf_w		pessoa_fisica.nr_cpf%type;
nr_rg_w			pessoa_fisica.nr_identidade%type;
nr_passaporte_w		pessoa_fisica.nr_identidade%type;
nr_rne_w		pessoa_fisica.nr_reg_geral_estrang%type;
nr_ric_w		pessoa_fisica.nr_ric%type;
cd_nacionalidade_w	pessoa_fisica.cd_nacionalidade%type;
sg_estado_w		compl_pessoa_fisica.sg_estado%type;
ds_municipio_w		compl_pessoa_fisica.ds_municipio%type;
ds_bairro_w		compl_pessoa_fisica.ds_bairro%type;
ds_endereco_w		compl_pessoa_fisica.ds_endereco%type;
ds_complemento_w	compl_pessoa_fisica.ds_complemento%type;
ds_email_w		compl_pessoa_fisica.ds_email%type;

nr_sequencia_w		regra_valida_dados_pf.nr_sequencia%type;
ds_mensagem_w		regra_valida_dados_pf.ds_mensagem%type;
ie_acao_mensagem_w	regra_valida_dados_pf.ie_acao_mensagem%type;
nr_sequencia_ww		regra_valida_dados_pf.nr_sequencia%type;
ds_mensagem_ww		regra_valida_dados_pf.ds_mensagem%type;
ie_acao_mensagem_ww	regra_valida_dados_pf.ie_acao_mensagem%type;
ie_cpf_w		regra_valida_dados_pf.ie_cpf%type;
ie_rg_w			regra_valida_dados_pf.ie_rg%type;
ie_passaporte_w		regra_valida_dados_pf.ie_passaporte%type;
ie_rne_w		regra_valida_dados_pf.ie_rne%type;
ie_ric_w		regra_valida_dados_pf.ie_ric%type;
ie_estado_w		regra_valida_dados_pf.ie_estado%type;
ie_municipio_w		regra_valida_dados_pf.ie_municipio%type;
ie_bairro_w		regra_valida_dados_pf.ie_bairro%type;
ie_rua_w		regra_valida_dados_pf.ie_rua%type;
ie_complemento_w	regra_valida_dados_pf.ie_complemento%type;
ie_email_w		regra_valida_dados_pf.ie_email%type;
ie_condicao_w		regra_valida_dados_pf.ie_condicao%type;

ie_brasileiro_w		varchar(1);
ie_ok_w			varchar(1);
qt_idade_pac_w		bigint;
qt_consistir_w		bigint;
qt_consistido_w		bigint;
ie_pis_w			regra_valida_dados_pf.ie_pis%type;
ie_cns_w			regra_valida_dados_pf.ie_cns%type;
ie_dnv_w			regra_valida_dados_pf.ie_dnv%type;
nr_pis_pasep_w			pessoa_fisica.nr_pis_pasep%type;
cd_declaracao_nasc_vivo_w	pessoa_fisica.cd_declaracao_nasc_vivo%type;
nr_cartao_nac_sus_w		pessoa_fisica.nr_cartao_nac_sus%type;

c01 CURSOR FOR
	SELECT	nr_sequencia,
		ds_mensagem,
		ie_acao_mensagem,
		ie_cpf,
		ie_rg,
		ie_passaporte,
		ie_rne,
		ie_ric,
		ie_estado,
		ie_municipio,
		ie_bairro,
		ie_rua,
		ie_complemento,
		ie_email,
		ie_condicao,
		ie_pis,
		ie_cns,
		ie_dnv
	from	regra_valida_dados_pf
	where	cd_estabelecimento 				= cd_estabelecimento_p
	and	ie_evento					= ie_evento_p
	and	coalesce(ie_situacao,'A')				= 'A'
	and	coalesce(cd_convenio,coalesce(cd_convenio_p,0))		= coalesce(cd_convenio_p,0)
	and	coalesce(ie_tipo_convenio,coalesce(ie_tipo_convenio_w,0))	= coalesce(ie_tipo_convenio_w,0)
	and	qt_idade_pac_w between coalesce(qt_idade_min,-1) 	and coalesce(qt_idade_max,999)
	and	((ie_brasileiro = 'S' and ie_brasileiro_w = 'S') or (ie_estrangeiro = 'S' and ie_brasileiro_w = 'N') or (ie_estrangeiro = 'R' and sg_estado_w = 'IN'))
	order by coalesce(qt_prioridade,0) desc,
		coalesce(cd_convenio,0),
		coalesce(ie_tipo_convenio,0);


BEGIN
ds_mensagem_p		:= null;
ie_acao_mensagem_p	:= null;

select	max(ie_tipo_convenio)
into STRICT	ie_tipo_convenio_w
from	convenio
where	cd_convenio	= cd_convenio_p;

begin


qt_idade_pac_w	:= (obter_idade(dt_nascimento_p,clock_timestamp(),'A'))::numeric;
	/*select	a.nr_cpf,
		a.nr_identidade,
		a.nr_passaporte,
		a.nr_reg_geral_estrang,
		a.nr_ric,
		a.cd_nacionalidade,
		to_number(obter_idade(a.dt_nascimento,sysdate,'A')),
		nr_pis_pasep,
		nr_cartao_nac_sus,
		cd_declaracao_nasc_vivo
	into	nr_cpf_w,
		nr_rg_w,
		nr_passaporte_w,
		nr_rne_w,
		nr_ric_w,
		cd_nacionalidade_w,
		qt_idade_pac_w,
		nr_pis_pasep_w,
		nr_cartao_nac_sus_w,
		cd_declaracao_nasc_vivo_w
	from	pessoa_fisica a
	where	a.cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	rownum 			= 1; --Residencial.*/
exception
when others then
	nr_cpf_w		:= null;
	nr_rg_w			:= null;
	nr_passaporte_w		:= null;
	nr_rne_w		:= null;
	nr_ric_w		:= null;
	cd_nacionalidade_w	:= null;
	qt_idade_pac_w		:= 0;
end;

/*begin
	select	b.sg_estado,
		b.ds_municipio,
		b.ds_bairro,
		b.ds_endereco,
		b.ds_complemento,
		b.ds_email
	into	sg_estado_w,
		ds_municipio_w,
		ds_bairro_w,
		ds_endereco_w,
		ds_complemento_w,
		ds_email_w
	from	pessoa_fisica a,
		compl_pessoa_fisica b
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	a.cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	b.ie_tipo_complemento	= 1
	and	rownum 			= 1;
exception
when others then
	sg_estado_w		:= null;
	ds_municipio_w		:= null;
	ds_bairro_w		:= null;
	ds_endereco_w		:= null;
	ds_complemento_w	:= null;
	ds_email_w		:= null;
end;*/
select	coalesce(max(ie_brasileiro),'N')
into STRICT	ie_brasileiro_w
from	nacionalidade
where	cd_nacionalidade	= cd_nacionalidade_p;

ie_ok_w	:= 'N';

open C01;
loop
fetch C01 into
	nr_sequencia_w,
	ds_mensagem_w,
	ie_acao_mensagem_w,
	ie_cpf_w,
	ie_rg_w,
	ie_passaporte_w,
	ie_rne_w,
	ie_ric_w,
	ie_estado_w,
	ie_municipio_w,
	ie_bairro_w,
	ie_rua_w,
	ie_complemento_w,
	ie_email_w,
	ie_condicao_w,
	ie_pis_w,
	ie_cns_w,
	ie_dnv_w;
EXIT WHEN NOT FOUND or (ds_mensagem_ww IS NOT NULL AND ds_mensagem_ww::text <> '');  /* apply on C01 */
	begin
	qt_consistir_w	:= 0;
	qt_consistido_w	:= 0;

	if (ie_cpf_w = 'S') then
		qt_consistir_w	:= qt_consistir_w + 1;
		if (coalesce(nr_cpf_p::text, '') = '') then
			qt_consistido_w	:= qt_consistido_w + 1;
		end if;
	end if;
	if (ie_rg_w = 'S') then
		qt_consistir_w	:= qt_consistir_w + 1;
		if (coalesce(nr_rg_p::text, '') = '') then
			qt_consistido_w	:= qt_consistido_w + 1;
		end if;
	end if;
	if (ie_passaporte_w = 'S') then
		qt_consistir_w	:= qt_consistir_w + 1;
		if (coalesce(nr_passaporte_p::text, '') = '') then
			qt_consistido_w	:= qt_consistido_w + 1;
		end if;
	end if;
	if (ie_rne_w = 'S') then
		qt_consistir_w	:= qt_consistir_w + 1;
		if (coalesce(nr_rne_p::text, '') = '') then
			qt_consistido_w	:= qt_consistido_w + 1;
		end if;
	end if;
	if (ie_ric_w = 'S') then
		qt_consistir_w	:= qt_consistir_w + 1;
		if (coalesce(nr_ric_p::text, '') = '') then
			qt_consistido_w	:= qt_consistido_w + 1;
		end if;
	end if;
	/*if	(ie_estado_w = 'S') then
		qt_consistir_w	:= qt_consistir_w + 1;
		if	(sg_estado_w is null) then
			qt_consistido_w	:= qt_consistido_w + 1;
		end if;
	end if;
	if	(ie_municipio_w = 'S') then
		qt_consistir_w	:= qt_consistir_w + 1;
		if	(ds_municipio_w is null) then
			qt_consistido_w	:= qt_consistido_w + 1;
		end if;
	end if;
	if	(ie_bairro_w = 'S') then
		qt_consistir_w	:= qt_consistir_w + 1;
		if	(ds_bairro_w is null) then
			qt_consistido_w	:= qt_consistido_w + 1;
		end if;
	end if;
	if	(ie_rua_w = 'S') then
		qt_consistir_w	:= qt_consistir_w + 1;
		if	(ds_endereco_w is null) then
			qt_consistido_w	:= qt_consistido_w + 1;
		end if;
	end if;
	if	(ie_complemento_w = 'S') then
		qt_consistir_w	:= qt_consistir_w + 1;
		if	(ds_complemento_w is null) then
			qt_consistido_w	:= qt_consistido_w + 1;
		end if;
	end if;
	if	(ie_email_w = 'S') then
		qt_consistir_w	:= qt_consistir_w + 1;
		if	(ds_email_w is null) then
			qt_consistido_w	:= qt_consistido_w + 1;
		end if;
	end if;*/
	if (ie_pis_w = 'S') then
		qt_consistir_w	:= qt_consistir_w + 1;

		if (coalesce(nr_pis_pasep_p::text, '') = '') then
			qt_consistido_w	:= qt_consistido_w + 1;
		end if;
	end if;

	if (ie_cns_w = 'S') then
		qt_consistir_w	:= qt_consistir_w + 1;

		if (coalesce(nr_cartao_nac_sus_p::text, '') = '') then
			qt_consistido_w	:= qt_consistido_w + 1;
		end if;
	end if;

	if (ie_dnv_w = 'S') then
		qt_consistir_w	:= qt_consistir_w + 1;

		if (coalesce(cd_declaracao_nasc_vivo_p::text, '') = '') then
			qt_consistido_w	:= qt_consistido_w + 1;
		end if;
	end if;

	if (ie_condicao_w = 'E' and qt_consistir_w = qt_consistido_w) or (ie_condicao_w = 'OU' and qt_consistido_w > 0) then
		nr_sequencia_ww		:= nr_sequencia_w;
		ds_mensagem_ww		:= ds_mensagem_w;
		if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then
			ie_acao_mensagem_ww	:= ie_acao_mensagem_w;
		end if;

	end if;

	end;
end loop;
close C01;

ds_mensagem_p		:= ds_mensagem_ww;
ie_acao_mensagem_p	:= ie_acao_mensagem_ww;
nr_seq_regra_p		:= nr_sequencia_ww;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE validar_dados_pf_salvar ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_pessoa_fisica_p text, ie_evento_p text, nr_cpf_p text, nr_rg_p text, nr_passaporte_p text, nr_rne_p text, nr_ric_p text, cd_nacionalidade_p text, dt_nascimento_p timestamp, nr_pis_pasep_p text, nr_cartao_nac_sus_p text, cd_declaracao_nasc_vivo_p text, ds_mensagem_p INOUT text, ie_acao_mensagem_p INOUT text, nr_seq_regra_p INOUT bigint) FROM PUBLIC;

