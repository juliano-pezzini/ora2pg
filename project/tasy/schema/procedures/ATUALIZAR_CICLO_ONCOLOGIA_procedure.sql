-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_ciclo_oncologia ( nr_seq_paciente_p bigint, nr_seq_atend_inicial_p bigint, dt_prevista_p timestamp, ie_todos_ciclos_p text, nm_usuario_p text, ie_dia_selecionado_p text, ds_erro_p INOUT text, ie_consiste_dia_util_p text default 'S', DS_MOTIVO_ALTERACAO_P text default null, CD_MOTIVO_ALTERACAO_P bigint default null) AS $body$
DECLARE


nr_ciclo_w			integer;
nr_ciclo_ant_w			integer;
nr_ciclo_atual_w		integer;
dt_prevista_inicial_w		timestamp;
dt_prevista_w			timestamp;
dt_prevista_ant_w		timestamp;
dt_prevista_maior_w		timestamp;          --Ivan em 29/08/2007 OS64993
ds_dia_ciclo_w			varchar(05);
ds_erro_w			varchar(254); --Ivan em 29/08/2007 OS64993
qt_anterior_w			bigint;  --Ivan em 29/08/2007 OS64993
nr_prescricao_w			bigint;
dt_real_w			timestamp;
dt_prevista_ww			timestamp;
ie_dia_util_w			varchar(25);
cd_estabelecimento_w		smallint;
nr_seq_ordem_w			bigint;
ie_alterar_data_prod_w		varchar(10);
qt_reg_w			bigint;
dt_atualizacao_w		timestamp;
qt_nao_util_w			bigint:= 1;
dia_w				bigint;
qt_dias_intervalo_w		bigint;
qt_dias_interv_total_w		bigint:=0;
qt_dias_interv_ciclo_w		bigint:=0;
ie_utliza_dt_atual_prescr_w	varchar(1);
ie_atualizar_horario_w		varchar(1);
ie_atualiza_dia_atendido_w	varchar(3);
ie_status_paciente_w		varchar(60);
dia_primeiro_ciclo_alterar_w	bigint;
nr_seq_atendimento_w		bigint;
ie_dia_selecionado_w		varchar(10);
nr_seq_pend_agenda_w		bigint;
nr_seq_autorizacao_w		bigint:=0;
nr_seq_atend_w			bigint;
nr_seq_atend_ant_w		bigint;
dt_Agenda_w			timestamp;
ie_consiste_datas_ant_w		varchar(10);
ie_cosiste_prescricao_w		varchar(1);
dt_liberacao_w			timestamp;
ie_atualiza_data_vig_w		varchar(15) := 'N';
nr_seq_estabio_param_w		bigint	:= 0;
nr_seq_estagio_w		bigint;
ie_autor_pendente_w		varchar(1);
ie_consiste_dias_conv_w		varchar(1);
ie_interno_autor_w		varchar(2);
cd_protocolo_w			bigint;
nr_seq_medicacao_w		bigint;
ie_interv_ciclo_w		varchar(1);
dt_ciclo_ant_w			timestamp;
ie_atualiza_prescr_gerada_w		varchar(1);
nr_ciclo_ww			integer;
dt_prevista_ciclo_w			timestamp;
dt_menor_prevista_w     timestamp;
dt_maior_prevista_w     timestamp;
nr_dia_ciclo_w          bigint;
dt_menor_prevista_ww    timestamp;
dt_maior_prevista_ww    timestamp;
ie_datas_superiores     varchar(1);
ie_datas_anteriores     varchar(1);
ie_informar_motivo_w varchar(1) :='N';
qt_dias_intervalo_ww	bigint;
nr_seq_autorizacao_ww	bigint:=0;
dt_prevista_dia_alterado_w paciente_atendimento.dt_prevista%type;
dt_prevista_dia_anterior_w paciente_atendimento.dt_prevista%type;

c01 CURSOR FOR
	SELECT	dt_prevista,
		dt_real,
		ds_dia_ciclo,
		nr_prescricao,
		nr_ciclo,
		substr(obter_status_paciente_qt(nr_seq_atendimento,dt_inicio_adm,dt_fim_adm,nr_seq_local,ie_exige_liberacao,dt_chegada,'C'),1,60),
		nr_seq_atendimento
	from 	paciente_atendimento
	where	nr_seq_paciente		= nr_seq_paciente_p
	and (ie_todos_ciclos_p	= 'S' or nr_ciclo = nr_ciclo_w)
	and	trunc(dt_prevista)	>= trunc(dt_prevista_inicial_w)
	and	coalesce(dt_liberacao_reg::text, '') = ''
	and	((ie_dia_selecionado_w	= 'N') or (nr_seq_atendimento	= nr_seq_atend_inicial_p))
	and	coalesce(qt_obter_data_status('E',nr_seq_atendimento),dt_fim_adm) is null
	and (((Obter_Funcao_Ativa = 3130 and coalesce(ie_atualiza_prescr_gerada_w,'N') = 'S') or (coalesce(ie_atualiza_prescr_gerada_w,'N') <> 'A'))
	or (coalesce(nr_prescricao::text, '') = ''))
	and coalesce(dt_cancelamento::text, '') = ''
	order by nr_ciclo, dt_prevista, ds_dia_ciclo;



	procedure	ajustar_data_producao(	nr_prescicao_p	bigint,
						dt_producao_p	timestamp) is

	c02 CURSOR FOR
	SELECT	b.nr_seq_ordem
	from	can_ordem_item_prescr b,
			prescr_material a
	where	a.nr_prescricao		= nr_prescicao_p
	and		a.nr_prescricao		= b.nr_prescricao
	and		a.nr_sequencia		= b.nr_seq_prescricao;

	
BEGIN
	if (ie_alterar_data_prod_w		= 'S') then
		open c02;
		loop
		fetch c02 into
			nr_seq_ordem_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

			update	can_ordem_prod
			set	dt_prevista	= dt_producao_p
			where	nr_sequencia	= nr_seq_ordem_w
			and	coalesce(dt_inicio_preparo::text, '') = '';

			end;
		end loop;
		close c02;

	end if;
	end;

begin
dt_prevista_ant_w	:= null;
dt_atualizacao_w	:= clock_timestamp();
ie_dia_selecionado_w	:= coalesce(ie_dia_selecionado_p,'N');

select	coalesce(max(b.cd_estabelecimento),1),
	max(b.qt_dias_intervalo)
into STRICT	cd_estabelecimento_w,
	qt_dias_intervalo_w
from	paciente_setor		b,
	paciente_atendimento	a
where	a.nr_seq_paciente	= b.nr_seq_paciente
and	a.nr_seq_paciente	= nr_seq_paciente_p;


select 	max(cd_protocolo),
	max(nr_seq_medicacao)
into STRICT	cd_protocolo_w,
	nr_seq_medicacao_w
from	paciente_setor
where	nr_seq_paciente = nr_seq_paciente_p;

select	max(nr_ciclo),
	max(dt_prevista)
into STRICT	nr_ciclo_w,
	dt_prevista_inicial_w
from	paciente_atendimento
where	nr_seq_atendimento	= nr_seq_atend_inicial_p
and	coalesce(dt_cancelamento::text, '') = '';

if (coalesce(nr_ciclo_w::text, '') = '') and (coalesce(dt_prevista_inicial_w::text, '') = '') then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(200811);
end if;

select	max(dt_prevista)
into STRICT	dt_prevista_maior_w
from	paciente_atendimento
where	nr_seq_paciente		= nr_seq_paciente_p
and	nr_ciclo		= nr_ciclo_w
and	trunc(dt_prevista)	< trunc(dt_prevista_p)
and	coalesce(dt_cancelamento::text, '') = '';

ie_alterar_data_prod_w := obter_param_usuario(281, 517, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_alterar_data_prod_w);
ie_utliza_dt_atual_prescr_w := obter_param_usuario(281, 555, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_utliza_dt_atual_prescr_w);
ie_atualiza_dia_atendido_w := obter_param_usuario(281, 675, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_dia_atendido_w);
ie_atualizar_horario_w := obter_param_usuario(3130, 114, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualizar_horario_w);
ie_consiste_datas_ant_w := obter_param_usuario(281, 1022, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consiste_datas_ant_w);
ie_cosiste_prescricao_w := obter_param_usuario(3130, 392, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_cosiste_prescricao_w);
ie_atualiza_data_vig_w := obter_param_usuario(281, 1352, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_data_vig_w);
ie_autor_pendente_w := obter_param_usuario(281, 1418, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_autor_pendente_w);
ie_consiste_dias_conv_w := obter_param_usuario(281, 1419, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consiste_dias_conv_w);
ie_atualiza_prescr_gerada_w := obter_param_usuario(3130, 74, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_prescr_gerada_w);
ie_informar_motivo_w := obter_param_usuario(281, 1526, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_informar_motivo_w);

select	coalesce(max(ie_interv_ciclo),'I')
into STRICT	ie_interv_ciclo_w
from	parametro_medico
where	cd_estabelecimento = cd_estabelecimento_w;


if (ie_todos_ciclos_p <> 'S') then

ie_datas_superiores := 'N';

select substr(DS_DIA_CICLO,2),nr_ciclo
into STRICT nr_dia_ciclo_w,nr_ciclo_w
from PACIENTE_ATENDIMENTO
where nr_seq_atendimento = nr_seq_atend_inicial_p;

begin
select 'S'
into STRICT ie_datas_superiores
from PACIENTE_ATENDIMENTO
where trunc(dt_prevista) < trunc(dt_prevista_p)
and nr_ciclo > nr_ciclo_w
and nr_seq_paciente = nr_seq_paciente_p
and coalesce(dt_cancelamento::text, '') = ''  LIMIT 1;
exception 
	when others then
	ie_datas_superiores	:= 'N';
end;
if (ie_datas_superiores = 'S') then
  CALL wheb_mensagem_pck.EXIBIR_MENSAGEM_ABORT(1034711);
end if;

begin
select 'S'
into STRICT ie_datas_anteriores
from PACIENTE_ATENDIMENTO
where trunc(dt_prevista) > trunc(dt_prevista_p)
and nr_ciclo < nr_ciclo_w
and nr_seq_paciente = nr_seq_paciente_p
and coalesce(dt_cancelamento::text, '') = ''  LIMIT 1;
exception 
	when others then
	ie_datas_anteriores	:= 'N';
end;

if (ie_datas_anteriores = 'S') then
  CALL wheb_mensagem_pck.EXIBIR_MENSAGEM_ABORT(1034712);
end if;

begin
select 'S'
into STRICT ie_datas_superiores
from PACIENTE_ATENDIMENTO
where trunc(dt_prevista) < trunc(dt_prevista_p)
and nr_ciclo = nr_ciclo_w
and substr(DS_DIA_CICLO,2) > nr_dia_ciclo_w
and nr_seq_paciente = nr_seq_paciente_p
and coalesce(dt_cancelamento::text, '') = ''  LIMIT 1;
exception
	when others then
	ie_datas_superiores	:= 'N';
end;

if (ie_datas_superiores = 'S') then
  CALL wheb_mensagem_pck.EXIBIR_MENSAGEM_ABORT(1034711);
end if;

begin
select 'S'
into STRICT ie_datas_anteriores
from PACIENTE_ATENDIMENTO
where trunc(dt_prevista) > trunc(dt_prevista_p)
and nr_ciclo = nr_ciclo_w
and substr(DS_DIA_CICLO,2) < nr_dia_ciclo_w
and nr_seq_paciente = nr_seq_paciente_p
and coalesce(dt_cancelamento::text, '') = ''  LIMIT 1;
exception
	when others then
	ie_datas_anteriores	:= 'N';
end;

if (ie_datas_anteriores = 'S') then
  CALL wheb_mensagem_pck.EXIBIR_MENSAGEM_ABORT(1034712);
end if;
end if;

select	dt_prevista
into STRICT	dt_prevista_dia_alterado_w
from	paciente_atendimento
where	nr_seq_atendimento = nr_seq_atend_inicial_p;

select	max(dt_prevista)
into STRICT	dt_prevista_dia_anterior_w
from	paciente_atendimento
where	nr_seq_paciente = nr_seq_paciente_p
and 	dt_prevista < dt_prevista_dia_alterado_w
and   coalesce(dt_cancelamento::text, '') = '';

if ((dt_prevista_dia_anterior_w IS NOT NULL AND dt_prevista_dia_anterior_w::text <> '') and trunc(dt_prevista_p) <= trunc(dt_prevista_dia_anterior_w) and (ie_consiste_datas_ant_w = 'S')) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1152794);
else
	begin

	open	c01;
		loop
	fetch	c01 into
		dt_prevista_w,
		dt_real_w,
		ds_dia_ciclo_w,
		nr_prescricao_w,
		nr_ciclo_atual_w,
		ie_status_paciente_w,
		nr_seq_atend_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select 	max(dt_liberacao)
		into STRICT	dt_liberacao_w
		from 	prescr_medica
		where	nr_prescricao	= nr_prescricao_w;	

		if (coalesce(ie_cosiste_prescricao_w,'N') = 'N') or (coalesce(dt_liberacao_w::text, '') = '') then
			dt_Agenda_w	:= dt_real_w;
			
			if (coalesce(dia_primeiro_ciclo_alterar_w::text, '') = '') then
				dia_primeiro_ciclo_alterar_w	:= Obter_numero_dia_ciclo(coalesce(ds_dia_ciclo_w,1));
			end if;

			if (coalesce(nr_ciclo_ant_w,nr_ciclo_atual_w)	<> nr_ciclo_atual_w) and (nr_seq_atend_ant_w IS NOT NULL AND nr_seq_atend_ant_w::text <> '') then
				begin
					CALL Gerar_alterar_dia_real_onc(nr_seq_atend_ant_w,nm_usuario_p,'N');
				exception
				when others then
					null;
				end;
			end if;
			
			if (ie_atualiza_dia_atendido_w = 'S') or (ie_status_paciente_w <> '83') then
			
				if (ie_interv_ciclo_w = 'U') and (coalesce(nr_ciclo_ant_w,nr_ciclo_atual_w)	<> nr_ciclo_atual_w) then
				
					select  max(dt_prevista)
					into STRICT	dt_ciclo_ant_w
					from	paciente_atendimento
					where	nr_seq_paciente = nr_seq_paciente_p
					and	nr_ciclo = nr_ciclo_ant_w
					and 	coalesce(dt_cancelamento::text, '') = '';
					
				end if;

				dia_w		:= Obter_numero_dia_ciclo(ds_dia_ciclo_w) - coalesce(dia_primeiro_ciclo_alterar_w,0);
				qt_dias_intervalo_ww	:= obter_dias_interv_protoc(nr_seq_paciente_p,nr_ciclo_atual_w);
				dt_prevista_ww	:= dt_prevista_p + dia_w;
				
				if (ie_interv_ciclo_w = 'U') and (dt_ciclo_ant_w IS NOT NULL AND dt_ciclo_ant_w::text <> '') then
					
					dt_prevista_ww := dt_ciclo_ant_w + dia_w + 1;

				end if;

				if (coalesce(nr_ciclo_ant_w,nr_ciclo_atual_w)	<> nr_ciclo_atual_w) then
					if (ie_interv_ciclo_w = 'I') then
						qt_dias_interv_total_w := qt_dias_interv_total_w + coalesce(qt_dias_intervalo_ww,qt_dias_intervalo_w);
					else
						qt_dias_interv_total_w := coalesce(qt_dias_intervalo_ww,qt_dias_intervalo_w);
					end if;
				end if;
				dt_prevista_ww	:= dt_prevista_ww + coalesce(qt_dias_interv_total_w,1);

				if (ie_consiste_dia_util_p = 'S') then
					select	count(*)
					into STRICT	qt_reg_w
					from	paciente_atendimento
					where	nr_seq_paciente = nr_seq_paciente_p
					and (ie_todos_ciclos_p	= 'S' or nr_ciclo = nr_ciclo_w)
					and	dt_atualizacao		= dt_atualizacao_w
					and	dt_prevista		= dt_prevista_ww
					and	coalesce(dt_suspensao::text, '') = '';
					ie_dia_util_w	:= obter_se_dia_util_oncologia(dt_prevista_ww, cd_estabelecimento_w, nm_usuario_p, null ,cd_protocolo_w,nr_seq_medicacao_w);
					if (qt_reg_w	>0) then
						ie_dia_util_w	:= 'N';
					end if;

					while(ie_dia_util_w	= 'N') loop
						begin
						qt_nao_util_w	:= qt_nao_util_w +1;
						dt_prevista_ww	:= dt_prevista_ww + 1;
						ie_dia_util_w	:= obter_se_dia_util_oncologia(dt_prevista_ww, cd_estabelecimento_w, nm_usuario_p, null, cd_protocolo_w,nr_seq_medicacao_w);

						select	count(*)
						into STRICT	qt_reg_w
						from	paciente_atendimento
						where	nr_seq_paciente = nr_seq_paciente_p
						and (ie_todos_ciclos_p	= 'S' or nr_ciclo = nr_ciclo_w)
						and	dt_atualizacao		= dt_atualizacao_w
						and	dt_prevista		= dt_prevista_ww
						and	coalesce(dt_suspensao::text, '') = '';

						if (qt_reg_w	>0) then
							ie_dia_util_w	:= 'N';
						end if;
						end;
					end loop;
				end if;

				if (dt_real_w IS NOT NULL AND dt_real_w::text <> '') then
					begin
					dt_real_w	:= dt_prevista_ww;
					end;
				end if;

				if (ie_atualizar_horario_w = 'S') then	
					update	paciente_atendimento
					set	dt_prevista	= dt_prevista_ww,
						dt_anterior	= dt_prevista,
						nm_usuario	= nm_usuario_p,
						dt_atualizacao	= dt_atualizacao_w,
						dt_real		= dt_real_w
					where	nr_seq_paciente = nr_seq_paciente_p
					and		nr_seq_atendimento = nr_seq_atend_w;	

					if (ie_informar_motivo_w = 'S'
					and (ds_motivo_alteracao_p IS NOT NULL AND ds_motivo_alteracao_p::text <> '') and
					(CD_MOTIVO_ALTERACAO_P IS NOT NULL AND CD_MOTIVO_ALTERACAO_P::text <> '')) then
             
					    CALL Gravar_Motivo_Alt_Prot_Onc( nr_seq_paciente_p,
					    nr_seq_atend_w,
					    null,
					    cd_motivo_alteracao_p,
					    ds_motivo_alteracao_p,
					    Obter_Pf_Usuario(nm_usuario_p,'C'),
					    'AD',
					    nm_usuario_p,
					    'PACIENTE_ATENDIMENTO',
					    'DT_PREVISTA',
					    pkg_date_formaters.to_varchar(dt_prevista_w, 'shortDateTime', cd_estabelecimento_w, nm_usuario_p),
					    pkg_date_formaters.to_varchar(dt_prevista_ww, 'shortDateTime', cd_estabelecimento_w, nm_usuario_p),
					    null);
					end if;
									
					update	agenda_quimio
					set	dt_agenda		= dt_real_w,
						nm_usuario		= nm_usuario_p,
						dt_atualizacao		= clock_timestamp()
					where	nr_seq_atendimento	= nr_seq_atend_w;

					select	max(nr_seq_pend_agenda)
					into STRICT	nr_seq_pend_agenda_w
					from	paciente_atendimento
					where	nr_seq_atendimento 	= nr_seq_atend_w;
					
					update	qt_pendencia_agenda
					set	ie_alt_enfermagem = 'S'
					where	nr_sequencia = nr_seq_pend_agenda_w
					and	coalesce(ie_alt_enfermagem,'N') <> 'S';

					update	agenda_quimio_marcacao
					set	dt_agenda		= dt_real_w
					where	dt_agenda = dt_Agenda_w
					and	nr_seq_pend_agenda	= nr_seq_pend_agenda_w;

				else

					update	paciente_atendimento
					set	dt_prevista	= to_date(to_char(dt_prevista_ww,'dd/mm/yyyy') || ' ' || to_char(dt_prevista,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'),
						dt_anterior	= dt_prevista,
						nm_usuario	= nm_usuario_p,
						dt_atualizacao	= dt_atualizacao_w,
						dt_real		= dt_real_w
					where	nr_seq_paciente = nr_seq_paciente_p
					and		nr_seq_atendimento = nr_seq_atend_w;


          
				if (ie_informar_motivo_w = 'S'
				and (ds_motivo_alteracao_p IS NOT NULL AND ds_motivo_alteracao_p::text <> '') and
				(CD_MOTIVO_ALTERACAO_P IS NOT NULL AND CD_MOTIVO_ALTERACAO_P::text <> '')) then
				
				    CALL Gravar_Motivo_Alt_Prot_Onc( nr_seq_paciente_p,
				    nr_seq_atendimento_w,
				    null,
				    cd_motivo_alteracao_p,
				    ds_motivo_alteracao_p,
				    Obter_Pf_Usuario(nm_usuario_p,'C'),
				    'AD',
				    nm_usuario_p,
				    'PACIENTE_ATENDIMENTO',
				    'DT_PREVISTA',
				    pkg_date_formaters.to_varchar(dt_prevista_w, 'shortDateTime', cd_estabelecimento_w, nm_usuario_p),
				    pkg_date_formaters.to_varchar(dt_prevista_ww, 'shortDateTime', cd_estabelecimento_w, nm_usuario_p),
				    null);
				end if;
									

					update	agenda_quimio
					set	dt_agenda		= dt_real_w,
						nm_usuario		= nm_usuario_p,
						dt_atualizacao		= clock_timestamp()
					where	nr_seq_atendimento	= nr_seq_atend_w;

					select	max(nr_seq_pend_agenda)
					into STRICT	nr_seq_pend_agenda_w
					from	paciente_atendimento
					where	nr_seq_atendimento 	= nr_seq_atend_w;
					
					update	qt_pendencia_agenda
					set	ie_alt_enfermagem = 'S'
					where	nr_sequencia = nr_seq_pend_agenda_w
					and	coalesce(ie_alt_enfermagem,'N') <> 'S';

					update	agenda_quimio_marcacao
					set	dt_agenda		= dt_real_w
					where	dt_agenda = dt_Agenda_w
					and	nr_seq_pend_agenda	= nr_seq_pend_agenda_w;

				end if;

				if (trunc(dt_prevista_w)	<> trunc(dt_prevista_ww)) then
					select	max(nr_seq_atendimento)
					into STRICT	nr_seq_atendimento_w
					from	paciente_atendimento
					where	trunc(dt_prevista)	= trunc(dt_prevista_ww)
					and	ds_dia_ciclo	= ds_dia_ciclo_w
					and	nr_seq_paciente = nr_seq_paciente_p;
					if (nr_seq_atendimento_w	> 0) then
						CALL cancelar_dia_quimio(nr_seq_atendimento_w, null, nm_usuario_p, cd_estabelecimento_w);
						
						update	agenda_quimio
						set		nr_seq_atendimento	 = NULL
						where	nr_seq_atendimento	= nr_seq_atendimento_w;
					end if;
				end if;

				if (nr_prescricao_w > 0) and (ie_utliza_dt_atual_prescr_w = 'N') then
					begin
					update	prescr_medica
					set		dt_prescricao	= dt_prevista_ww
					where	nr_prescricao	= nr_prescricao_w
					and		coalesce(dt_liberacao::text, '') = '';

					ajustar_data_producao(nr_prescricao_w,dt_prevista_ww);
					end;
				end if;
				
				begin
				select	coalesce(max(nr_sequencia),0)
				into STRICT	nr_seq_autorizacao_w
				from	autorizacao_convenio
				where	nr_seq_paciente = nr_seq_atend_w;
				exception
				when others then
					nr_seq_autorizacao_w := 0;
				end;
				
				if (coalesce(nr_seq_autorizacao_w,0) = 0) then
					
					begin
					select	coalesce(max(nr_sequencia),0)
					into STRICT	nr_seq_autorizacao_w
					from	autorizacao_convenio
					where	nr_seq_paciente_setor = nr_seq_paciente_p
					and 	nr_ciclo 		= nr_ciclo_atual_w;
					exception
					when others then
						nr_seq_autorizacao_w := 0;
					end;
					
				end if;	

				if (coalesce(ie_consiste_dias_conv_w,'N') = 'S') then
					CALL consiste_dias_conv_quimio(cd_estabelecimento_w,nr_seq_paciente_p,dt_prevista_ww);
				end if;
				
				if (nr_seq_autorizacao_w > 0) then
					begin					
					if (coalesce(ie_autor_pendente_w,'N') = 'S') then				
						nr_seq_estabio_param_w := obter_param_usuario(3004, 176, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, nr_seq_estabio_param_w);	
						select	min(nr_sequencia)
						into STRICT	nr_seq_estagio_w
						from	estagio_autorizacao a
						where	a.cd_empresa	= obter_empresa_estab(cd_estabelecimento_w)
						and	a.ie_situacao	= 'A'
						and	a.ie_interno	= '1';
						
						if (coalesce(nr_seq_estabio_param_w,0) > 0) then	
							nr_seq_estagio_w	:= nr_seq_estabio_param_w;
						end if;
						
						update	autorizacao_convenio
						set	dt_atualizacao		= clock_timestamp(),
							nm_usuario		= nm_usuario_p,
							nr_seq_estagio		= CASE WHEN coalesce(ie_autor_pendente_w,'N')='S' THEN nr_seq_estagio_w  ELSE nr_seq_estagio END ,
							dt_fim_vigencia		= CASE WHEN coalesce(ie_autor_pendente_w,'N')='S' THEN null  ELSE dt_fim_vigencia END
						where	nr_sequencia 		= nr_seq_autorizacao_w
						and	dt_fim_vigencia		< dt_prevista_ww; --Somente atualiza volta para pendente se a data fim vigencia for menor que nov data prevista (Retirada restricao OS  1036564)						
					end if;	

					select	max(obter_estagio_autor(nr_seq_estagio,'C'))
					into STRICT	ie_interno_autor_w
					from	autorizacao_convenio
					where	nr_sequencia	= nr_seq_autorizacao_w;	

					if (nr_seq_autorizacao_ww <> nr_seq_autorizacao_w) then
						update	autorizacao_convenio
						set	dt_entrada_prevista 	= dt_prevista_ww
						where	nr_sequencia 		= nr_seq_autorizacao_w;

						nr_seq_autorizacao_ww := nr_seq_autorizacao_w;
					end if;

					/* Ronaldo OS 339546   */

					if (ie_atualiza_data_vig_w = 'S') or
						((ie_atualiza_data_vig_w = 'A') and --Somente atualizar se a autorizacao nao estiver autorizada.
						 (ie_interno_autor_w <> '10')) then
						
						update	autorizacao_convenio
						set	dt_inicio_vigencia  	= dt_prevista_ww
						where	nr_sequencia 		= nr_seq_autorizacao_w;
						
					end if;

					begin
					insert into autorizacao_convenio_hist(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							ds_historico,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_sequencia_autor)
						values (nextval('autorizacao_convenio_hist_seq'),
							clock_timestamp(),
							nm_usuario_p,
							WHEB_MENSAGEM_PCK.get_texto(280154)||dt_prevista_w||WHEB_MENSAGEM_PCK.get_texto(280155)||dt_prevista_ww,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_autorizacao_w);
					exception
					when others then
						null;
					end;
					end;
				end if;	
			end if;
			
			dt_prevista_ant_w	:= dt_prevista_w;
			nr_ciclo_ant_w		:= nr_ciclo_atual_w;
			nr_seq_atend_ant_w	:= nr_seq_atend_w;
			
		else
			ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(280153);
		end if;
		end;
	end loop;
	close c01;
	end;

begin
	CALL Gerar_alterar_dia_real_onc(nr_seq_atend_w,nm_usuario_p,'N');
exception
when others then
	null;
end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_ciclo_oncologia ( nr_seq_paciente_p bigint, nr_seq_atend_inicial_p bigint, dt_prevista_p timestamp, ie_todos_ciclos_p text, nm_usuario_p text, ie_dia_selecionado_p text, ds_erro_p INOUT text, ie_consiste_dia_util_p text default 'S', DS_MOTIVO_ALTERACAO_P text default null, CD_MOTIVO_ALTERACAO_P bigint default null) FROM PUBLIC;

