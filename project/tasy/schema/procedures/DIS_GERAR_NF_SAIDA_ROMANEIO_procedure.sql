-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dis_gerar_nf_saida_romaneio ( nr_seq_romaneio_p bigint, cd_estabelecimento_p bigint, cd_operacao_nf_p bigint, cd_nat_oper_nf_p bigint, cd_serie_nf_p text, nr_nota_fiscal_p text, cd_local_estoque_p bigint, ds_observacao_p text, nm_usuario_p text, cd_setor_atendimento_p bigint, nr_sequencia_p INOUT bigint, ds_erro_p INOUT text) AS $body$
DECLARE


nr_sequencia_w			bigint;
nr_seq_romaneio_item_w		bigint;
cd_cgc_cliente_w			varchar(14);
cd_cgc_estab_w			varchar(14);
cd_estab_romaneio_w		bigint;
nr_nota_fiscal_w			varchar(255);
nr_sequencia_nf_w			bigint	:= 9;
dt_emissao_w			timestamp;
dt_entrada_saida_w		timestamp;
cd_condicao_pagto_w		bigint;
vl_frete_w			double precision;
qt_itens_nota_w			bigint;
ds_erro_w			varchar(255) := '';
ds_erro_item_w			varchar(255) := '';
ds_erro_nota_w			varchar(255) := '';
nr_sequencia_item_w		bigint;

/*Itens*/

cd_material_pedido_w		integer;
cd_material_romaneio_w		integer;
cd_material_estoque_w		integer;
qt_conv_compra_estoque_ip_w	double precision;/*Item pedido*/
qt_conv_compra_estoque_ir_w	double precision;/*Item romaneio*/
qt_conv_valor_w			double precision;
cd_unidade_venda_w		varchar(30);
pr_descontos_w			double precision;
ds_observacao_item_w		varchar(255);
cd_conta_contabil_w		varchar(20);
nr_item_nf_w			integer;
cd_unidade_medida_estoque_w	varchar(30);
qt_item_volume_w			double precision;
qt_item_romaneio_w		double precision;
qt_item_estoque_w			double precision;
pr_desconto_w			double precision;
vl_desconto_w			double precision;
vl_total_material_w			double precision;
vl_liquido_material_w		double precision;
vl_unitario_material_w		double precision;
vl_unitario_item_nf_w		double precision;
vl_total_item_nf_w			double precision;
vl_liquido_w			double precision;
ie_tipo_conta_w			integer;
cd_centro_conta_w			integer;
qt_nota_w			integer;
nr_seq_lote_w			bigint;
ie_indeterminado_w			varchar(2) := 'N';
dt_validade_w			timestamp;
ds_lote_fornec_w			varchar(20);
ds_barra_w			varchar(255);
dt_mesano_vigente_w		timestamp;
ie_unidade_medida_w		varchar(3);
pr_item_atendimento_w		double precision;
cd_tributo_w			integer;
pr_tributo_w			double precision;
vl_tributo_w			double precision;

c01 CURSOR FOR
SELECT	b.nr_sequencia,
	c.nr_sequencia,
	b.cd_material,
	b.qt_material,
	b.cd_unidade_venda,
	b.vl_unitario_material,
	b.vl_total_material,
	b.vl_liquido_material,
	coalesce(b.pr_desconto,0),
	coalesce(b.vl_desconto,0),
	c.cd_material,
	sum(d.qt_material)
from	dis_pedido_item b,
	dis_romaneio_item c,
	dis_volume_item d
where	b.nr_sequencia = c.nr_sequencia_item
and	c.nr_sequencia = d.nr_seq_romaneio_item
and	coalesce(b.nr_seq_motivo_cancel::text, '') = ''
and	coalesce(c.nr_seq_motivo_cancel::text, '') = ''
and	c.nr_seq_romaneio = nr_seq_romaneio_p
group by b.nr_sequencia,
	b.cd_material,
	b.qt_material,
	b.cd_unidade_venda,
	b.vl_unitario_material,
	b.vl_total_material,
	b.vl_liquido_material,
	coalesce(b.pr_desconto,0),
	coalesce(b.vl_desconto,0),
	c.cd_material,
	c.nr_sequencia
order by b.nr_sequencia,
	c.nr_sequencia;
	
C02 CURSOR FOR
SELECT	cd_tributo,
	pr_tributo,
	vl_tributo
from	dis_pedido_item_trib
where	nr_sequencia_item = nr_sequencia_item_w;


BEGIN
dt_emissao_w		:= trunc(clock_timestamp(), 'dd');
dt_entrada_saida_w	:= clock_timestamp();

select	a.cd_estabelecimento,
	a.cd_cond_pagto,
	vl_frete,
	substr(obter_cgc_estabelecimento(cd_estabelecimento_p),1,14),
	a.cd_cnpj
into STRICT	cd_estab_romaneio_w,
	cd_condicao_pagto_w,
	vl_frete_w,
	cd_cgc_estab_w,
	cd_cgc_cliente_w
from	dis_pedido a,
	dis_romaneio b
where	a.nr_sequencia = b.nr_seq_pedido
and	b.nr_sequencia = nr_seq_romaneio_p;

select	nextval('nota_fiscal_seq')
into STRICT	nr_sequencia_w
;

if (coalesce(nr_nota_fiscal_p, '0') = '0') then
	begin
	select	coalesce(max(somente_numero(nr_ultima_nf)), nr_sequencia_w) + 1
	into STRICT	nr_nota_fiscal_w
	from	serie_nota_fiscal
	where	cd_serie_nf 		= cd_serie_nf_p
	and	cd_estabelecimento 	= cd_estabelecimento_p;

	select	count(*)
	into STRICT	qt_nota_w
	from	nota_fiscal
	where	cd_estabelecimento = cd_estabelecimento_p
	and	cd_cgc_emitente = cd_cgc_estab_w
	and	cd_serie_nf = cd_serie_nf_p
	and	nr_nota_fiscal = nr_nota_fiscal_w;

	if (qt_nota_w > 0) then
		select (coalesce(max(somente_numero(nr_nota_fiscal)),'0')+1)
		into STRICT	nr_nota_fiscal_w
		from	nota_fiscal
		where	cd_estabelecimento = cd_estabelecimento_p
		and	cd_cgc_emitente = cd_cgc_estab_w
		and	cd_serie_nf = cd_serie_nf_p;
	end if;
	end;
else
	nr_nota_fiscal_w	:= nr_nota_fiscal_p;
end if;

insert into nota_fiscal(
	nr_sequencia,		cd_estabelecimento,
	cd_cgc_emitente,		cd_serie_nf,
	nr_nota_fiscal,		nr_sequencia_nf,
	cd_operacao_nf,		dt_emissao,
	dt_entrada_saida,		ie_acao_nf,
	ie_emissao_nf,		ie_tipo_frete,
	vl_mercadoria,		vl_total_nota,
	qt_peso_bruto,		qt_peso_liquido,
	dt_atualizacao,		nm_usuario,
	cd_condicao_pagamento,	cd_cgc,
	cd_pessoa_fisica,		vl_ipi,
	vl_descontos,		vl_frete,
	vl_seguro,		vl_despesa_acessoria,
	ds_observacao,		cd_natureza_operacao,
	vl_desconto_rateio,		ie_situacao,
	nr_interno_conta,		nr_seq_protocolo,
	ds_obs_desconto_nf,	nr_seq_classif_fiscal,
	ie_tipo_nota,		nr_ordem_compra,
	ie_entregue_bloqueto,	cd_setor_digitacao,
	nr_seq_romaneio)
values ( nr_sequencia_w,		cd_estabelecimento_p,
	cd_cgc_estab_w,		cd_serie_nf_p,
	nr_nota_fiscal_w,		nr_sequencia_nf_w,
	cd_operacao_nf_p,		dt_emissao_w,
	dt_entrada_saida_w,	'1',
	'0',			'0',
	0,			0,
	0,			0,
	clock_timestamp(),			nm_usuario_p,
	cd_condicao_pagto_w,	cd_cgc_cliente_w,
	null,			0,
	0,			vl_frete_w,
	0,			0,
	ds_observacao_p,		cd_nat_oper_nf_p,
	0,			'1',
	null,			null,
	null,			null,
	'SE',			null,
	'N',			cd_setor_atendimento_p,
	nr_seq_romaneio_p);

CALL gerar_historico_nota_fiscal(nr_sequencia_w, nm_usuario_p, '17', WHEB_MENSAGEM_PCK.get_texto(281130));
ie_tipo_conta_w	:= 3;

OPEN C01;
LOOP
FETCH C01 into
	nr_sequencia_item_w,
	nr_seq_romaneio_item_w,
	cd_material_pedido_w,
	qt_item_romaneio_w,
	cd_unidade_venda_w,
	vl_unitario_material_w,
	vl_total_material_w,
	vl_liquido_material_w,
	pr_desconto_w,
	vl_desconto_w,
	cd_material_romaneio_w,
	qt_item_volume_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UME'),1,30) cd_unidade_medida_estoque,
		qt_conv_compra_estoque,
		cd_material_estoque
	into STRICT	cd_unidade_medida_estoque_w,
		qt_conv_compra_estoque_ir_w,
		cd_material_estoque_w
	from	material
	where	cd_material = cd_material_romaneio_w;
	
	qt_item_estoque_w := qt_item_volume_w;
	
	qt_conv_valor_w := 1;
	if (cd_material_romaneio_w <> cd_material_pedido_w) then
		begin
		select	qt_conv_compra_estoque
		into STRICT	qt_conv_compra_estoque_ip_w
		from	material
		where	cd_material = cd_material_pedido_w;
		
		qt_conv_valor_w	:= (coalesce(qt_conv_compra_estoque_ip_w,1) / coalesce(qt_conv_compra_estoque_ir_w,1));
		qt_conv_valor_w	:= qt_conv_valor_w * qt_item_volume_w;
		qt_conv_valor_w	:= (qt_conv_valor_w / qt_item_romaneio_w);
		end;
	else
		qt_conv_valor_w	:= (qt_item_volume_w / qt_item_romaneio_w);
	end if;
	
	vl_total_item_nf_w		:= round((coalesce(vl_total_material_w,0) * qt_conv_valor_w)::numeric,2);
	vl_unitario_item_nf_w 	:= coalesce(dividir(vl_total_item_nf_w,qt_item_volume_w),0);
	vl_desconto_w		:= coalesce((vl_desconto_w * qt_conv_valor_w),0);
	vl_liquido_w		:= coalesce((vl_liquido_material_w * qt_conv_valor_w),0);

	SELECT * FROM define_conta_material(
		cd_estabelecimento_p, cd_material_romaneio_w, ie_tipo_conta_w, 0, 0, 0, 0, 0, 0, 0, cd_local_estoque_p, cd_operacao_nf_p, trunc(clock_timestamp()), cd_conta_contabil_w, cd_centro_conta_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_conta_w;
		
	select	coalesce(max(nr_item_nf),0) + 1
	into STRICT	nr_item_nf_w
	from	nota_fiscal_item
	where	nr_sequencia = nr_sequencia_w;
		
	insert into nota_fiscal_item(
		nr_sequencia,			cd_estabelecimento,
		cd_cgc_emitente,			cd_serie_nf,
		nr_nota_fiscal,			nr_sequencia_nf,
		nr_item_nf,			cd_natureza_operacao,
		qt_item_nf,			vl_unitario_item_nf,
		vl_total_item_nf,			dt_atualizacao,
		nm_usuario,			vl_frete,
		vl_desconto,			vl_despesa_acessoria,
		cd_material,			cd_local_estoque,
		ds_observacao,			ds_complemento,
		cd_unidade_medida_compra,		qt_item_estoque,
		cd_unidade_medida_estoque,		cd_conta_contabil,
		vl_desconto_rateio,			vl_seguro,
		cd_material_estoque,
		nr_ordem_compra,			vl_liquido,
		pr_desconto,			nr_item_oci,
		dt_entrega_ordem,			nr_seq_conta_financ,
		pr_desc_financ,
		nr_seq_romaneio,		nr_seq_romaneio_item,
		cd_sequencia_parametro)
	values (	nr_sequencia_w,			cd_estabelecimento_p,
		cd_cgc_estab_w,			cd_serie_nf_p,
		nr_nota_fiscal_w,			nr_sequencia_nf_w,
		nr_item_nf_w,			cd_nat_oper_nf_p,
		qt_item_volume_w,			vl_unitario_item_nf_w,
		vl_total_item_nf_w,			clock_timestamp(),
		nm_usuario_p, 			coalesce(vl_frete_w,0),
 		coalesce(vl_desconto_w,0),		0,
 		cd_material_romaneio_w, 		cd_local_estoque_p,
		'',				null,
		cd_unidade_medida_estoque_w,	qt_item_estoque_w,
		cd_unidade_medida_estoque_w,	cd_conta_contabil_w,
		0,				0,
 		cd_material_estoque_w,
		null,				vl_liquido_w,
		coalesce(pr_desconto_w,0),				null,
		null,				null,
		0,
		nr_seq_romaneio_p,		nr_seq_romaneio_item_w,
		philips_contabil_pck.get_parametro_conta_contabil);
	open C02;
	loop
	fetch C02 into	
		cd_tributo_w,
		pr_tributo_w,
		vl_tributo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		vl_tributo_w := vl_tributo_w * qt_conv_valor_w * pr_item_atendimento_w;
		insert into nota_fiscal_item_trib(
			NR_SEQUENCIA,
			CD_ESTABELECIMENTO,
			CD_CGC_EMITENTE,
			CD_SERIE_NF,
			NR_SEQUENCIA_NF,
			NR_ITEM_NF,
			CD_TRIBUTO,
			VL_TRIBUTO,
			DT_ATUALIZACAO,
			NM_USUARIO,
			VL_BASE_CALCULO,
			TX_TRIBUTO,
			VL_REDUCAO_BASE,
			IE_RATEIO,
			VL_TRIB_NAO_RETIDO,
			VL_BASE_NAO_RETIDO,
			VL_TRIB_ADIC,
			VL_BASE_ADIC,
			NR_NOTA_FISCAL)
		values (nr_sequencia_w,
			cd_estabelecimento_p,
			cd_cgc_estab_w,
			cd_serie_nf_p,
			nr_sequencia_nf_w,
			nr_item_nf_w,
			cd_tributo_w,
			vl_tributo_w,
			clock_timestamp(),
			nm_usuario_p,
			vl_total_item_nf_w,
			pr_tributo_w,
			0,
			'N',
			0,
			0,
			0,
			0,
			nr_nota_fiscal_w);
		end;
	end loop;
	close C02;
	end;
end loop;
close c01;

select 	count(*)
into STRICT	qt_itens_nota_w
from	nota_fiscal_item
where	nr_sequencia = nr_sequencia_w;

if (qt_itens_nota_w = 0) then
	begin
	delete FROM nota_fiscal where nr_sequencia = nr_sequencia_w;
	nr_sequencia_w	:= 0;
	ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(281131);
	end;
end if;

if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
	begin
	delete	FROM nota_fiscal
	where	nr_sequencia = nr_sequencia_w;
	
	nr_sequencia_w	:= 0;
	end;
end if;	

nr_sequencia_p	:= nr_sequencia_w;
ds_erro_p	:= substr(ds_erro_w,1,255);

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dis_gerar_nf_saida_romaneio ( nr_seq_romaneio_p bigint, cd_estabelecimento_p bigint, cd_operacao_nf_p bigint, cd_nat_oper_nf_p bigint, cd_serie_nf_p text, nr_nota_fiscal_p text, cd_local_estoque_p bigint, ds_observacao_p text, nm_usuario_p text, cd_setor_atendimento_p bigint, nr_sequencia_p INOUT bigint, ds_erro_p INOUT text) FROM PUBLIC;

