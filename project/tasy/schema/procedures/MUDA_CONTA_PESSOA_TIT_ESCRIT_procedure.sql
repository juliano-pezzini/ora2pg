-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE muda_conta_pessoa_tit_escrit ( nr_seq_escrit_p bigint, nr_titulo_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_pessoa_fisica_w			varchar(10);
cd_cgc_w				varchar(14);
cd_banco_w				integer;
cd_agencia_bancaria_w			varchar(8);
ie_digito_agencia_w			varchar(5);
nr_conta_w				varchar(20);
nr_digito_conta_w				varchar(5);
cd_camara_compensacao_w			smallint;
cont_w					bigint;


BEGIN

select	max(b.cd_pessoa_fisica),
	max(b.cd_cgc),
	max(a.cd_banco),
	max(a.cd_agencia_bancaria),
	max(a.ie_digito_agencia),
	max(a.nr_conta),
	max(a.ie_digito_conta),
	max(a.cd_camara_compensacao)
into STRICT	cd_pessoa_fisica_w,
	cd_cgc_w,
	cd_banco_w,
	cd_agencia_bancaria_w,
	ie_digito_agencia_w,
	nr_conta_w,
	nr_digito_conta_w,
	cd_camara_compensacao_w
from	titulo_pagar b,
	titulo_pagar_escrit a
where	a.nr_seq_escrit	= nr_Seq_escrit_p
and	a.nr_titulo	= nr_titulo_p
and	a.nr_titulo	= b.nr_titulo;

if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then

	select	count(*)
	into STRICT	cont_w
	from	pessoa_fisica_conta a
	where	a.cd_pessoa_Fisica	= cd_pessoa_Fisica_w
	and	a.ie_situacao		= 'A';

	if (cont_w > 0) then
		update	pessoa_fisica_conta
		set	cd_agencia_bancaria	= cd_agencia_bancaria_w,
			cd_banco		= cd_banco_w,
			cd_camara_compensacao	= cd_camara_compensacao_w,
			dt_atualizacao		= clock_timestamp(),
			ie_digito_agencia	= ie_digito_agencia_w,
			nm_usuario		= nm_usuario_p,
			nr_conta		= nr_conta_w,
			nr_digito_conta		= nr_digito_conta_w
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
	elsif (cont_w = 0) and (cd_banco_w IS NOT NULL AND cd_banco_w::text <> '') and (cd_agencia_bancaria_w IS NOT NULL AND cd_agencia_bancaria_w::text <> '') and (nr_conta_w IS NOT NULL AND nr_conta_w::text <> '') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		begin

		insert into pessoa_fisica_conta(
			nr_sequencia,
			cd_pessoa_fisica,
			cd_banco,
			cd_agencia_bancaria,
			nr_conta,
			dt_atualizacao,
			nm_usuario,
			ie_situacao,
			nr_digito_conta,
			cd_camara_compensacao,
			ie_digito_agencia,
			ie_tipo_conta,
			ie_conta_pagamento,
			ie_propriedade_conta,
			ds_observacao)
		values (	nextval('pessoa_fisica_conta_seq'),
			cd_pessoa_fisica_w,
			cd_banco_w,
			cd_agencia_bancaria_w,
			nr_conta_w,
			clock_timestamp(),
			nm_usuario_p,
			'A',
			nr_digito_conta_w,
			cd_camara_compensacao_w,
			ie_digito_agencia_w,
			'CC',
			'N',
			null,
			--substr('Gerado através do Pagamento Escritural: ' || nr_seq_escrit_p || ' Usuário: ' || nm_usuario_p,1,4000));
			substr(wheb_mensagem_pck.get_texto(304527,'NR_SEQ_ESCRIT=' || nr_seq_escrit_p || ';' || 'NM_USUARIO=' || nm_usuario_p),1,4000));

		end;
	end if;

elsif (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then

	select	count(*)
	into STRICT	cont_w
	from	pessoa_juridica_conta a
	where	a.cd_cgc		= cd_cgc_w
	and	a.ie_situacao		= 'A';

	if (cont_w > 0) then
		update	pessoa_juridica_conta
		set	cd_agencia_bancaria	= cd_agencia_bancaria_w,
			cd_banco		= cd_banco_w,
			cd_camara_compensacao	= cd_camara_compensacao_w,
			dt_atualizacao		= clock_timestamp(),
			ie_digito_agencia	= ie_digito_agencia_w,
			nm_usuario		= nm_usuario_p,
			nr_conta		= nr_conta_w,
			nr_digito_conta		= nr_digito_conta_w
		where	cd_cgc			= cd_cgc_w;
	elsif (cont_w = 0) and (cd_banco_w IS NOT NULL AND cd_banco_w::text <> '') and (cd_agencia_bancaria_w IS NOT NULL AND cd_agencia_bancaria_w::text <> '') and (nr_conta_w IS NOT NULL AND nr_conta_w::text <> '') and (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
		insert into pessoa_juridica_conta(
			nr_sequencia,
			cd_cgc,
			cd_banco,
			cd_agencia_bancaria,
			nr_conta,
			dt_atualizacao,
			nm_usuario,
			ie_situacao,
			nr_digito_conta,
			cd_camara_compensacao,
			ie_digito_agencia,
			ds_observacao,
			ie_conta_pagamento,
			ie_prestador_pls,
			cd_codigo_identificacao,
			ie_tipo_conta,
			ie_propriedade_conta)
		values (	nextval('pessoa_juridica_conta_seq'),
			cd_cgc_w,
			cd_banco_w,
			cd_agencia_bancaria_w,
			nr_conta_w,
			clock_timestamp(),
			nm_usuario_p,
			'A',
			nr_digito_conta_w,
			cd_camara_compensacao_w,
			ie_digito_agencia_w,
			--substr('Gerado através do Pagamento Escritural: ' || nr_seq_escrit_p || ' Usuário: ' || nm_usuario_p,1,255),
			substr(wheb_mensagem_pck.get_texto(304527,'NR_SEQ_ESCRIT=' || nr_seq_escrit_p || ';' || 'NM_USUARIO=' || nm_usuario_p),1,255),
			'N',
			'N',
			null,
			'CC',
			null);

	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE muda_conta_pessoa_tit_escrit ( nr_seq_escrit_p bigint, nr_titulo_p bigint, nm_usuario_p text) FROM PUBLIC;

