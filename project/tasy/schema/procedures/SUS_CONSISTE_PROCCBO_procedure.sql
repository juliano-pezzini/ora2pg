-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_consiste_proccbo ( nr_interno_conta_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_profissional_exec_p text, nr_seq_proc_p bigint, ie_funcao_p bigint, nm_usuario_p text, ie_tipo_consiste_p bigint, nr_seq_participante_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE



/* IE_TIPO_CONSISTE_P
	- 1 Fechamento da conta
	- 2 Saida do campo
*/
qt_cbo_profissional_w	numeric(20)	:= 0;
qt_cbo_compativel_w	smallint	:= 0;
qt_cbo_comp_anest_w	smallint	:= 0;
qt_cbo_proc_w		smallint	:= 0;
ds_detalhe_w		varchar(255)	:= '';
cd_estabelecimento_w	smallint;
ds_erro_w		varchar(255)	:= '';
qt_reg_proc_serv_w	integer	:= 0;
cd_grupo_w		smallint;
cd_subgrupo_w		smallint;
cd_forma_organizacao_w	integer;
ie_tipo_atendimento_w	smallint 	:= 0;
ds_tipo_atend_w		varchar(4) 	:= '';
nr_cartao_nac_sus_w	varchar(20);
ie_funcao_w		smallint;
cd_cbo_w		varchar(6);
qt_cbo_compat_w		smallint	:= 0;
ie_cnes_bpa_w		varchar(1)	:= 'N';
ie_cnes_aih_w		varchar(1)	:= 'N';
cd_medico_exp_w		varchar(10);
cd_cbo_exp_w		varchar(6);
cd_profissional_w		varchar(10);
cd_profissional_orig_w		varchar(10);
ie_codigo_autorizacao_w	smallint;
ie_aih_w			varchar(10)	:= 'N';
ie_apac_w		varchar(10)	:= 'N';
ie_bpa_w			varchar(10)	:= 'N';
cd_participante_w		varchar(10);
ie_regra_tipo_atend_w	varchar(1):= 'A';
nr_seq_grupo_w		bigint;
nr_seq_subgrupo_w	bigint;
nr_seq_forma_org_w	bigint;
cd_cbo_partic_w		varchar(6);
dt_procedimento_w	timestamp;
nr_seq_regra_w		bigint;
ie_exclui_medico_w	varchar(15);
ie_exclui_cnes_w	varchar(15);	
ie_exclui_procedimento_w	varchar(15);
qt_dados_aih_conta_w	bigint;
ie_residente_w		varchar(15) := 'N';
ie_consiste_cbo_residente_w	varchar(15) := 'S';
ie_cbo_regra_proc_w		varchar(15) := 'N';
ie_cbo_farmac_w			varchar(15) := 'N';
qt_det_cbo_w			bigint := 0;
qt_det_cns_w			bigint := 0;


BEGIN

ds_detalhe_w := substr(WHEB_MENSAGEM_PCK.get_texto(280816) || cd_procedimento_p || WHEB_MENSAGEM_PCK.get_texto(280817) || cd_profissional_exec_p,1,255);

if (obter_funcao_ativa		= 1123) then
	ie_aih_w	:= 'S';
elsif (obter_funcao_ativa	= 1124) then
	ie_apac_w:= 'S';
else
	ie_bpa_w:= 'S';
end if;


/* Obter dados da conta e do procedimento */

begin
select	b.cd_estabelecimento,
	a.ie_tipo_atendimento
into STRICT	cd_estabelecimento_w,
	ie_tipo_atendimento_w
from	atendimento_paciente	a,
	conta_paciente 		b
where	a.nr_atendimento	= b.nr_atendimento
and	b.nr_interno_conta	= nr_interno_conta_p;
exception
	when others then
	ie_tipo_atendimento_w	:= 0;
	cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;
end;

ie_consiste_cbo_residente_w := coalesce(obter_valor_param_usuario(1123,213,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'S');

/*Obter parametros de Faturamento*/

select	coalesce(max(ie_regra_tipo_atend),'A')
into STRICT	ie_regra_tipo_atend_w
from	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_w;

if (coalesce(ie_regra_tipo_atend_w,'A') = 'C') then
	begin
	select	coalesce(max(ie_tipo_atend_conta),ie_tipo_atendimento_w)
	into STRICT	ie_tipo_atendimento_w
	from 	conta_paciente
	where 	nr_interno_conta = nr_interno_conta_p;
	exception
		when others then
		ie_tipo_atendimento_w:= ie_tipo_atendimento_w;
	end;
end if;

/* Obter estrutura do procedimento */

begin
select	cd_grupo,
	cd_subgrupo,
	cd_forma_organizacao,
	nr_seq_grupo,
	nr_seq_subgrupo,
	nr_seq_forma_org
into STRICT	cd_grupo_w,
	cd_subgrupo_w,
	cd_forma_organizacao_w,
	nr_seq_grupo_w,
	nr_seq_subgrupo_w,
	nr_seq_forma_org_w
from	sus_estrutura_procedimento_v
where	cd_procedimento		= cd_procedimento_p
and	ie_origem_proced	= ie_origem_proced_p;
exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(188891,'CD_PROCED='||cd_procedimento_p ||';IE_ORIGEM='|| ie_origem_proced_p);
		/* Problema na leitura da estrutura do procedimento: #@ CD_PROCED #@, origem: #@ IE_ORIGEM #@ */

end;

select	coalesce(max(cd_cbo),'0'),
	coalesce(max(dt_procedimento),clock_timestamp())
into STRICT	cd_cbo_w,
	dt_procedimento_w
from	procedimento_paciente
where	nr_sequencia	= nr_seq_proc_p;

SELECT * FROM sus_obter_exec_exp_aih(cd_procedimento_p, ie_origem_proced_p, cd_profissional_exec_p, cd_cbo_w, cd_estabelecimento_w, ie_aih_w, ie_bpa_w, ie_apac_w, cd_medico_exp_w, cd_cbo_exp_w) INTO STRICT cd_medico_exp_w, cd_cbo_exp_w;

cd_profissional_w	:= cd_profissional_exec_p;

if (cd_medico_exp_w IS NOT NULL AND cd_medico_exp_w::text <> '') and (cd_cbo_exp_w IS NOT NULL AND cd_cbo_exp_w::text <> '') then
	begin
	cd_cbo_w		:= cd_cbo_exp_w;
	cd_profissional_w	:= cd_medico_exp_w;
	end;
end if;

/* Obter se existe CBO's compativel com o procedimento */

select	count(*)
into STRICT	qt_cbo_proc_w
from	sus_procedimento_cbo
where	cd_procedimento		= cd_procedimento_p
and	ie_origem_proced	= ie_origem_proced_p;

/* Obter dados do profissional executor*/

select	coalesce(max(nr_cartao_nac_sus),'0')
into STRICT	nr_cartao_nac_sus_w
from	pessoa_fisica
where	cd_pessoa_fisica	= cd_profissional_w;

select	count(*)
into STRICT	qt_cbo_profissional_w
from	sus_cbo_pessoa_fisica
where	cd_pessoa_fisica	= cd_profissional_w;

select	count(*)
into STRICT	qt_reg_proc_serv_w
from	sus_proced_serv_classif
where	cd_procedimento		= cd_procedimento_p
and	ie_origem_proced	= ie_origem_proced_p;

select	count(*)
into STRICT	qt_cbo_compat_w
from	sus_procedimento_cbo
where	cd_procedimento		= cd_procedimento_p
and	ie_origem_proced	= ie_origem_proced_p
and	cd_cbo			= cd_cbo_w;

/* 1 - CBO nao preenchido */

if (sus_obter_inco_ativa_proc(1,cd_procedimento_p)) and (cd_profissional_w IS NOT NULL AND cd_profissional_w::text <> '') and (qt_cbo_profissional_w	= 0) and
	((sus_validar_regra(nr_seq_regra_p => 12,cd_procedimento_p => cd_procedimento_p,ie_origem_proced_p => ie_origem_proced_p,dt_competencia_p => dt_procedimento_w) > 0) or (sus_obter_tiporeg_proc(cd_procedimento_p, ie_origem_proced_p, 'C', 2) = 3) or (sus_obter_tiporeg_proc(cd_procedimento_p, ie_origem_proced_p, 'C', 1) in (1,2)) or
        ((sus_obter_tiporeg_proc(cd_procedimento_p, ie_origem_proced_p, 'C', 16) = 6) and (qt_cbo_proc_w > 0))) then
	if (ie_tipo_consiste_p = 1) then
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 1, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	elsif (ie_tipo_consiste_p = 2) then
		ds_erro_w	:= ds_erro_w || '1, ';
	end if;
end if;

/* 2 - CBO nao permitida para o procedimento */


/*select	count(*)
into	qt_cbo_compativel_w
from	sus_cbo_pessoa_fisica	a
where	a.cd_pessoa_fisica	= cd_profissional_w
and	nvl(a.cd_estab_exclusivo,cd_estabelecimento_w) = cd_estabelecimento_w
and	exists (select 1 from sus_procedimento_cbo x where a.cd_cbo = x.cd_cbo and cd_procedimento = cd_procedimento_p and ie_origem_proced = ie_origem_proced_p);*/
select	count(*)
into STRICT	qt_cbo_compativel_w
from	sus_cbo_pessoa_fisica a
where	a.cd_pessoa_fisica					= cd_profissional_w
and	coalesce(a.cd_procedimento,cd_procedimento_p)		= cd_procedimento_p
and	coalesce(a.nr_seq_grupo,nr_seq_grupo_w)			= nr_seq_grupo_w
and	coalesce(a.nr_seq_subgrupo,nr_seq_subgrupo_w)		= nr_seq_subgrupo_w
and	coalesce(a.nr_seq_forma_org,nr_seq_forma_org_w)		= nr_seq_forma_org_w
and	coalesce(a.cd_estab_exclusivo,cd_estabelecimento_w)		= cd_estabelecimento_w
and	dt_procedimento_w between coalesce(a.dt_inicio_vigencia,dt_procedimento_w) and coalesce(a.dt_fim_vigencia,dt_procedimento_w)
and	exists (SELECT 	1
		from	sus_procedimento_cbo x
		where 	a.cd_cbo = x.cd_cbo
		and 	x.cd_procedimento = cd_procedimento_p);

if (ie_tipo_consiste_p	= 1) then
	ie_funcao_w	:= ie_funcao_p;
elsif (ie_tipo_consiste_p	= 2) then
	select	coalesce(max(ie_ind_equipe_sus),0)
	into STRICT	ie_funcao_w
	from	funcao_medico
	where	cd_funcao	= ie_funcao_p;
end if;

if (ie_funcao_w	= 6) then
	select	count(*)
	into STRICT	qt_cbo_comp_anest_w
	from	sus_cbo_pessoa_fisica
	where	cd_pessoa_fisica	= cd_profissional_w
	and	cd_cbo			in ('223104','225151');
end if;

select	coalesce(max(ie_codigo_autorizacao),0)
into STRICT	ie_codigo_autorizacao_w
from	sus_aih_unif
where	nr_interno_conta	= nr_interno_conta_p;

if (ie_codigo_autorizacao_w = 0) then
	begin
	
	select	count(*)
	into STRICT	qt_dados_aih_conta_w
	from	sus_dados_aih_conta
	where	nr_interno_conta = nr_interno_conta_p;
	
	if (qt_dados_aih_conta_w > 0) then
		begin
		
		select	coalesce(ie_codigo_autorizacao,0)
		into STRICT	ie_codigo_autorizacao_w
		from	sus_dados_aih_conta
		where	nr_interno_conta = nr_interno_conta_p;
		
		end;
	end if;
	end;
end if;

if (sus_obter_inco_ativa_proc(2,cd_procedimento_p)) and (qt_cbo_profissional_w	> 0) and (qt_cbo_proc_w		> 0) and (qt_cbo_compativel_w	= 0) and (coalesce(sus_verificar_codigo_autor(coalesce(ie_codigo_autorizacao_w,0),'CBO'),'N') = 'N') and (coalesce(nr_seq_participante_p::text, '') = '') and (qt_cbo_comp_anest_w = 0) then
	
	ie_cbo_regra_proc_w := coalesce(sus_obter_cbo_proc_med_comp(cd_procedimento_p,ie_origem_proced_p,cd_cbo_w),'N');
	
	if (ie_cbo_regra_proc_w = 'N') then
		begin
		if (ie_tipo_consiste_p = 1) then
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 2, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		elsif (ie_tipo_consiste_p = 2) then
			ds_erro_w	:= ds_erro_w || '2, ';
		end if;		
		end;
	end if;
end if;

/* 22 - Medico executor sem CNS cadastrado. */
 
/*Alterada para atender a portaria 763 de 2011*/

if (sus_obter_inco_ativa_proc(22,cd_procedimento_p)) and (nr_cartao_nac_sus_w	= '0') then
	begin
	cd_profissional_orig_w := cd_profissional_w;
	
	if (ie_tipo_atendimento_w = 1) and (ie_tipo_consiste_p = 1) then /*lhalves OS 483564 em 20/08/2012 - Chamar regra da AIH apenas se for  AIH*/
	
		SELECT * FROM Sus_Obter_Regra_ExpAih(nr_seq_proc_p, nm_usuario_p, nr_seq_regra_w, ie_exclui_medico_w, ie_exclui_cnes_w, ie_exclui_procedimento_w, nr_seq_participante_p) INTO STRICT nr_seq_regra_w, ie_exclui_medico_w, ie_exclui_cnes_w, ie_exclui_procedimento_w;
	
		if (ie_exclui_medico_w = 'S') then
			cd_profissional_w := 'X';
		end if;	
	end if;
	
	if (coalesce(cd_profissional_w,'X') <> 'X') then
		begin
		if (ie_tipo_consiste_p = 1) then
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 22, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		elsif (ie_tipo_consiste_p = 2) then
			ds_erro_w	:= ds_erro_w || '22, ';
		end if;
		end;
	end if;
	
	cd_profissional_w := cd_profissional_orig_w;
	end;
end if;

if (sus_obter_inco_ativa_proc(119,cd_procedimento_p)) and (qt_cbo_profissional_w	> 0) and (qt_cbo_proc_w		> 0) and (qt_cbo_compat_w	= 0) and (coalesce(cd_cbo_w,'0')	<> '0') and (coalesce(sus_verificar_codigo_autor(coalesce(ie_codigo_autorizacao_w,0),'CBO'),'N') = 'N') and (coalesce(nr_seq_participante_p::text, '') = '') and (qt_cbo_comp_anest_w = 0) then
	
	/* Regra para CBO das familias:2232,2231,2251,2252,2253 */

	ie_cbo_regra_proc_w := coalesce(sus_obter_cbo_proc_med_comp(cd_procedimento_p,ie_origem_proced_p,cd_cbo_w),'N');
	
	if (cd_cbo_w = '223410') and (establishment_timezone_utils.startOfMonth(dt_procedimento_w) < establishment_timezone_utils.startOfDay(to_date('01/07/2013','dd/mm/yyyy'))) then
		ie_cbo_farmac_w := 'S';
	end if;
	
	if (ie_tipo_consiste_p = 1) and (ie_cbo_regra_proc_w = 'N') and (ie_cbo_farmac_w = 'N') then
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 119, substr(ds_detalhe_w||WHEB_MENSAGEM_PCK.get_texto(280818)||cd_cbo_w,1,255), cd_estabelecimento_w, nm_usuario_p);
	end if;
end if;

if (sus_obter_inco_ativa_proc(125,cd_procedimento_p)) and (coalesce(nr_seq_participante_p::text, '') = '') then
	begin

	select	coalesce(max(ie_cnes_aih),'N')
	into STRICT	ie_cnes_aih_w
	from	sus_cbo_pessoa_fisica
	where	cd_cbo			= cd_cbo_w
	and	cd_pessoa_fisica	= cd_profissional_w
	and	coalesce(cd_estab_exclusivo,cd_estabelecimento_w)	= cd_estabelecimento_w;

	if (ie_cnes_aih_w = 'N') and (cd_cbo_w <> '0')  and (cd_profissional_w IS NOT NULL AND cd_profissional_w::text <> '') then
		begin
		if (ie_tipo_consiste_p = 1) then
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 125, substr(WHEB_MENSAGEM_PCK.get_texto(280819)||cd_procedimento_p||WHEB_MENSAGEM_PCK.get_texto(280820)||cd_profissional_w||WHEB_MENSAGEM_PCK.get_texto(280821)||cd_cbo_w,1,255), cd_estabelecimento_w, nm_usuario_p);
		end if;
		end;
	end if;
	end;
end if;

if (sus_obter_inco_ativa_proc(126,cd_procedimento_p))  and (coalesce(nr_seq_participante_p::text, '') = '') then
	begin
	select	coalesce(max(ie_cnes_bpa),'N')
	into STRICT	ie_cnes_bpa_w
	from	sus_cbo_pessoa_fisica
	where	cd_cbo			= cd_cbo_w
	and	cd_pessoa_fisica	= cd_profissional_w
	and	coalesce(cd_estab_exclusivo,cd_estabelecimento_w)	= cd_estabelecimento_w;

	if (ie_cnes_bpa_w = 'N') and (cd_cbo_w <> '0') and (cd_profissional_w IS NOT NULL AND cd_profissional_w::text <> '') then
		begin
		if (ie_tipo_consiste_p = 1) then
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 126, substr(WHEB_MENSAGEM_PCK.get_texto(280819)||cd_procedimento_p||WHEB_MENSAGEM_PCK.get_texto(280820)||cd_profissional_w||WHEB_MENSAGEM_PCK.get_texto(280821)||cd_cbo_w,1,255), cd_estabelecimento_w, nm_usuario_p);
		end if;
		end;
	end if;
	end;
end if;

/* 202 - CBO nao pode ser utilizado antes da competencia 08/2011*/

if (sus_obter_inco_ativa_proc(202,cd_procedimento_p)) and (coalesce(nr_seq_participante_p::text, '') = '') and (establishment_timezone_utils.startOfMonth(dt_procedimento_w) < establishment_timezone_utils.startOfDay(to_date('01/08/2011','dd/mm/yyyy'))) and (cd_cbo_w in ('515125','322250','322430','271105','223293','516220','223565','214005','322130','782725',
	'225105','225110','225148','225151','225115','225290','225122','225120','225210','225215','225220','225225',
	'225230','225235','225240','225305','225125','225280','225142','225130','225135','225140','225203','225310',
	'225145','225150','225315','225320','225155','225160','225165','225170','225175','225180','225250','225185',
	'225190','225195','225103','225106','225255','225109','225260','225350','225112','225118','225265','225121',
	'225270','225275','225325','225124','225127','225133','225330','225136','225139','225285','223570','251555',
	'515135','322245','322425')) then
	if (ie_tipo_consiste_p = 1) then
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 202, substr(WHEB_MENSAGEM_PCK.get_texto(280819)||cd_procedimento_p||WHEB_MENSAGEM_PCK.get_texto(280822)||dt_procedimento_w||WHEB_MENSAGEM_PCK.get_texto(280820)||cd_profissional_w||WHEB_MENSAGEM_PCK.get_texto(280821)||cd_cbo_w,1,255), cd_estabelecimento_w, nm_usuario_p);
	end if;
end if;

/* 203 - CBO nao pode ser utilizado apos a competencia 07/2011*/

if (sus_obter_inco_ativa_proc(203,cd_procedimento_p)) and (coalesce(nr_seq_participante_p::text, '') = '') and (establishment_timezone_utils.startOfMonth(dt_procedimento_w) > establishment_timezone_utils.startOfDay(to_date('01/07/2011','dd/mm/yyyy'))) and (cd_cbo_w in ('3522G1','3222E2','3224F2','510125','2232B1','5151H1','2235C1','2235C2','214275',
	'516115','514210','991415','514220','782721','516135','223101','223102','223103','223104','223105',
	'2231F5','2231F4','223106','223107','223108','223109','223110','223111','223112','223113','223114',
	'223115','223152','223116','2231F7','223117','223118','2231F3','223120','223121','223122','223123',
	'223124','223125','223126','223128','223129','223130','223131','223132','223133','223134','223135',
	'223136','223137','223138','223139','223140','223141','223142','223143','223144','223145','2231F6',
	'223146','223147','223148','223149','223151','223153','223154','223155','223156','223157','842305',
	'223615','3222E3','221555','3222B3','3222E1','3224F1','223620','991405')) then
	if (ie_tipo_consiste_p = 1) then
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 203, substr(WHEB_MENSAGEM_PCK.get_texto(280819)||cd_procedimento_p||WHEB_MENSAGEM_PCK.get_texto(280822)||dt_procedimento_w||WHEB_MENSAGEM_PCK.get_texto(280820)||cd_profissional_w||WHEB_MENSAGEM_PCK.get_texto(280821)||cd_cbo_w,1,255), cd_estabelecimento_w, nm_usuario_p);
	end if;
end if;

/*Procedimento nao permite a informacao do CBO*/

if (sus_obter_inco_ativa_proc(208,cd_procedimento_p)) and (coalesce(nr_seq_participante_p::text, '') = '') and (coalesce(sus_obter_se_detalhe_proc(cd_procedimento_p,ie_origem_proced_p,'10039'),0) > 0) and (coalesce(cd_cbo_w,'0') <> '0') then
	if (ie_tipo_consiste_p = 1) then
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 208, substr(WHEB_MENSAGEM_PCK.get_texto(280819)||cd_procedimento_p||WHEB_MENSAGEM_PCK.get_texto(280820)||cd_profissional_w||WHEB_MENSAGEM_PCK.get_texto(280821)||cd_cbo_w,1,255), cd_estabelecimento_w, nm_usuario_p);
	end if;
end if;

/*Procedimento nao permite a informacao de medico executor ou profissional */

if (sus_obter_inco_ativa_proc(232,cd_procedimento_p)) and (cd_profissional_w IS NOT NULL AND cd_profissional_w::text <> '') and (coalesce(nr_seq_participante_p::text, '') = '') and (coalesce(sus_obter_se_detalhe_proc(cd_procedimento_p,ie_origem_proced_p,'10039'),0) > 0) then
	if (ie_tipo_consiste_p = 1) then
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 232, substr(WHEB_MENSAGEM_PCK.get_texto(280819)||cd_procedimento_p||WHEB_MENSAGEM_PCK.get_texto(280820)||cd_profissional_w||WHEB_MENSAGEM_PCK.get_texto(280821)||cd_cbo_w,1,255), cd_estabelecimento_w, nm_usuario_p);
	end if;
end if;

/*Falta a informacao do CBO para o procedimento*/

if (sus_obter_inco_ativa_proc(221,cd_procedimento_p)) and (coalesce(nr_seq_participante_p::text, '') = '') and (coalesce(cd_cbo_w,'0') = '0') then

	if (ie_tipo_atendimento_w = 1) then		
		qt_det_cbo_w := coalesce(sus_obter_se_detalhe_proc(cd_procedimento_p,ie_origem_proced_p,'10021'),0);
	else
		qt_det_cns_w := coalesce(sus_obter_se_detalhe_proc(cd_procedimento_p,ie_origem_proced_p,'009'),0);		
	end if;
	
	if (qt_det_cbo_w > 0) or (qt_det_cns_w > 0) then
		begin
		if (ie_tipo_consiste_p = 1) then
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 221, substr(WHEB_MENSAGEM_PCK.get_texto(280819)||cd_procedimento_p||WHEB_MENSAGEM_PCK.get_texto(280820)||cd_profissional_w||WHEB_MENSAGEM_PCK.get_texto(280821)||cd_cbo_w,1,255), cd_estabelecimento_w, nm_usuario_p);
		end if;		
		end;		
	end if;
end if;

if (nr_seq_participante_p IS NOT NULL AND nr_seq_participante_p::text <> '') then
	begin

	cd_medico_exp_w := null;
	cd_cbo_exp_w := null;
	
	qt_det_cbo_w := 0;
	qt_det_cns_w := 0;
	
	begin
	select	coalesce(max(a.cd_cbo),'0'),
		coalesce(max(a.cd_pessoa_fisica),'0'),
		coalesce(max(b.ie_ind_equipe_sus),0)
	into STRICT	cd_cbo_partic_w,
		cd_participante_w,
		ie_funcao_w
	from	procedimento_participante a,
		funcao_medico b
	where	a.nr_sequencia	= nr_seq_proc_p
	and	a.nr_seq_partic	= nr_seq_participante_p
	and 	a.ie_funcao = b.cd_funcao;
	exception
		when others then
		cd_cbo_partic_w 	:= '0';
		cd_participante_w	:= '0';
		end;

	SELECT * FROM sus_obter_exec_exp_aih(cd_procedimento_p, ie_origem_proced_p, cd_participante_w, cd_cbo_partic_w, cd_estabelecimento_w, ie_aih_w, ie_bpa_w, ie_apac_w, cd_medico_exp_w, cd_cbo_exp_w) INTO STRICT cd_medico_exp_w, cd_cbo_exp_w;

	if (cd_medico_exp_w IS NOT NULL AND cd_medico_exp_w::text <> '') and (cd_cbo_exp_w IS NOT NULL AND cd_cbo_exp_w::text <> '') then
		begin
		cd_cbo_partic_w		:= cd_cbo_exp_w;
		cd_participante_w	:= cd_medico_exp_w;
		end;
	end if;		
		
	select	count(*)
	into STRICT	qt_cbo_profissional_w
	from	sus_cbo_pessoa_fisica
	where	cd_pessoa_fisica	= cd_participante_w;

	select	count(*)
	into STRICT	qt_cbo_compat_w
	from	sus_procedimento_cbo
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p
	and	cd_cbo			= cd_cbo_partic_w;

	if (ie_funcao_w	= 6) then
		select	count(*)
		into STRICT	qt_cbo_comp_anest_w
		from	sus_cbo_pessoa_fisica
		where	cd_pessoa_fisica	= cd_participante_w
		and	cd_cbo			in ('223104','225151');
	end if;
	ie_residente_w := 'N';
	if (ie_tipo_atendimento_w = 1) and (ie_consiste_cbo_residente_w = 'N') and (cd_cbo_partic_w = '2231F9') then
		begin
		ie_residente_w := 'S';
		end;
	end if;

	if (sus_obter_inco_ativa_proc(119,cd_procedimento_p)) and (qt_cbo_profissional_w	> 0) and (qt_cbo_proc_w		> 0) and (qt_cbo_compat_w	= 0) and (cd_cbo_partic_w	<> '0') and (ie_residente_w		= 'N') and (coalesce(sus_verificar_codigo_autor(coalesce(ie_codigo_autorizacao_w,0),'CBO'),'N') = 'N') and
	--	(nr_seq_participante_p	is null) and
		(qt_cbo_comp_anest_w = 0) then
		
		ie_cbo_regra_proc_w := coalesce(sus_obter_cbo_proc_med_comp(cd_procedimento_p,ie_origem_proced_p,cd_cbo_w),'N');
		
		if (cd_cbo_w = '223410') and (establishment_timezone_utils.startOfMonth(dt_procedimento_w) < establishment_timezone_utils.startOfDay(to_date('01/07/2013','dd/mm/yyyy'))) then
			ie_cbo_farmac_w := 'S';
		end if;

		if (ie_tipo_consiste_p = 1) and (ie_cbo_regra_proc_w = 'N') and (ie_cbo_farmac_w = 'N') then
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 119,WHEB_MENSAGEM_PCK.get_texto(280823)||cd_procedimento_p|| WHEB_MENSAGEM_PCK.get_texto(280824) ||cd_participante_w||WHEB_MENSAGEM_PCK.get_texto(280818)||cd_cbo_partic_w, cd_estabelecimento_w, nm_usuario_p);
		end if;
	end if;

	if (sus_obter_inco_ativa_proc(125,cd_procedimento_p)) then
		begin

		select	coalesce(max(ie_cnes_aih),'N')
		into STRICT	ie_cnes_aih_w
		from	sus_cbo_pessoa_fisica
		where	cd_cbo			= cd_cbo_partic_w
		and	cd_pessoa_fisica	= cd_participante_w
		and	coalesce(cd_estab_exclusivo,cd_estabelecimento_w)	= cd_estabelecimento_w;

		if (ie_cnes_aih_w = 'N') and (cd_cbo_partic_w <> '0') and (cd_participante_w IS NOT NULL AND cd_participante_w::text <> '') then
			begin
			if (ie_tipo_consiste_p = 1) then
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 125, WHEB_MENSAGEM_PCK.get_texto(280819)||cd_procedimento_p||WHEB_MENSAGEM_PCK.get_texto(280825)||cd_participante_w||WHEB_MENSAGEM_PCK.get_texto(280821)||cd_cbo_partic_w, cd_estabelecimento_w, nm_usuario_p);
			end if;
			end;
		end if;
		end;
	end if;

	if (sus_obter_inco_ativa_proc(126,cd_procedimento_p)) then
		begin
		select	coalesce(max(ie_cnes_bpa),'N')
		into STRICT	ie_cnes_bpa_w
		from	sus_cbo_pessoa_fisica
		where	cd_cbo			= cd_cbo_partic_w
		and	cd_pessoa_fisica	= cd_participante_w
		and	coalesce(cd_estab_exclusivo,cd_estabelecimento_w)	= cd_estabelecimento_w;

		if (ie_cnes_bpa_w = 'N') and (cd_cbo_partic_w <> '0') and (cd_participante_w IS NOT NULL AND cd_participante_w::text <> '') then
			begin
			if (ie_tipo_consiste_p = 1) then
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 126, WHEB_MENSAGEM_PCK.get_texto(280819)||cd_procedimento_p||WHEB_MENSAGEM_PCK.get_texto(280825)||cd_participante_w||WHEB_MENSAGEM_PCK.get_texto(280821)||cd_cbo_partic_w, cd_estabelecimento_w, nm_usuario_p);
			end if;
			end;
		end if;
		end;
	end if;

	if (sus_obter_inco_ativa_proc(142,cd_procedimento_p)) and (coalesce(cd_cbo_partic_w,'0')	<> '0') and
		((substr(cd_cbo_partic_w,1,4) not in ('2231','2233','2251','2252','2253')) and (coalesce(cd_cbo_partic_w,'0') not in ('223268','223252'))) then
		if (ie_tipo_consiste_p = 1) then
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 142, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end if;
	end if;

	/* 202 - CBO nao pode ser utilizado antes da competencia 08/2011*/

	if (sus_obter_inco_ativa_proc(202,cd_procedimento_p)) and (establishment_timezone_utils.startOfMonth(dt_procedimento_w) < establishment_timezone_utils.startOfDay(to_date('01/08/2011','dd/mm/yyyy'))) and (cd_cbo_partic_w in ('515125','322250','322430','271105','223293','516220','223565','214005','322130',
		'782725','225105','225110','225148','225151','225115','225290','225122','225120','225210','225215','225220',
		'225225','225230','225235','225240','225305','225125','225280','225142','225130','225135','225140','225203','225310',
		'225145','225150','225315','225320','225155','225160','225165','225170','225175','225180','225250','225185','225190',
		'225195','225103','225106','225255','225109','225260','225350','225112','225118','225265','225121','225270','225275',
		'225325','225124','225127','225133','225330','225136','225139','225285','223570','251555','515135','322245','322425')) then
		if (ie_tipo_consiste_p = 1) then
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 202, WHEB_MENSAGEM_PCK.get_texto(280819)||cd_procedimento_p||WHEB_MENSAGEM_PCK.get_texto(280822)||dt_procedimento_w||WHEB_MENSAGEM_PCK.get_texto(280825)||cd_participante_w||WHEB_MENSAGEM_PCK.get_texto(280821)||cd_cbo_partic_w, cd_estabelecimento_w, nm_usuario_p);
		end if;
	end if;

	/* 203 - CBO nao pode ser utilizado apos a competencia 07/2011*/

	if (sus_obter_inco_ativa_proc(203,cd_procedimento_p)) and (establishment_timezone_utils.startOfMonth(dt_procedimento_w) > establishment_timezone_utils.startOfDay(to_date('01/07/2011','dd/mm/yyyy'))) and (cd_cbo_partic_w in ('3522G1','3222E2','3224F2','510125','2232B1','5151H1','2235C1','2235C2','214275',
		'516115','514210','991415','514220','782721','516135','223101','223102','223103','223104','223105',
		'2231F5','2231F4','223106','223107','223108','223109','223110','223111','223112','223113','223114',
		'223115','223152','223116','2231F7','223117','223118','2231F3','223120','223121','223122','223123',
		'223124','223125','223126','223128','223129','223130','223131','223132','223133','223134','223135',
		'223136','223137','223138','223139','223140','223141','223142','223143','223144','223145','2231F6',
		'223146','223147','223148','223149','223151','223153','223154','223155','223156','223157','842305',
		'223615','3222E3','221555','3222B3','3222E1','3224F1','223620','991405')) then
		if (ie_tipo_consiste_p = 1) then
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 203, WHEB_MENSAGEM_PCK.get_texto(280819)||cd_procedimento_p||WHEB_MENSAGEM_PCK.get_texto(280822)||dt_procedimento_w||WHEB_MENSAGEM_PCK.get_texto(280825)||cd_participante_w||WHEB_MENSAGEM_PCK.get_texto(280821)||cd_cbo_partic_w, cd_estabelecimento_w, nm_usuario_p);
		end if;
	end if;
	
	/*Procedimento nao permite a informacao do CBO*/

	if (sus_obter_inco_ativa_proc(208,cd_procedimento_p)) and (coalesce(sus_obter_se_detalhe_proc(cd_procedimento_p,ie_origem_proced_p,'10039'),0) > 0) and (coalesce(cd_cbo_partic_w,'0') <> '0') then
		if (ie_tipo_consiste_p = 1) then
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 208, substr(WHEB_MENSAGEM_PCK.get_texto(280819)||cd_procedimento_p||WHEB_MENSAGEM_PCK.get_texto(280825)||cd_participante_w||WHEB_MENSAGEM_PCK.get_texto(280821)||cd_cbo_partic_w,1,255), cd_estabelecimento_w, nm_usuario_p);
		end if;
	end if;
	/*Falta a informacao do CBO para o procedimento*/

	if (sus_obter_inco_ativa_proc(221,cd_procedimento_p)) and (coalesce(cd_cbo_partic_w,'0') = '0') then
		
		if (ie_tipo_atendimento_w = 1) then		
			qt_det_cbo_w := coalesce(sus_obter_se_detalhe_proc(cd_procedimento_p,ie_origem_proced_p,'10021'),0);
		else
			qt_det_cns_w := coalesce(sus_obter_se_detalhe_proc(cd_procedimento_p,ie_origem_proced_p,'009'),0);		
		end if;
		
		if (qt_det_cbo_w > 0)  or (qt_det_cns_w > 0) then			
			begin
			if (ie_tipo_consiste_p = 1) then
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 221, substr(WHEB_MENSAGEM_PCK.get_texto(280819)||cd_procedimento_p||WHEB_MENSAGEM_PCK.get_texto(280820)||cd_profissional_w||WHEB_MENSAGEM_PCK.get_texto(280821)||cd_cbo_w,1,255), cd_estabelecimento_w, nm_usuario_p);
			end if;			
			end;
		end if;
	end if;
	
	end;
end if;

ds_erro_p	:= ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_consiste_proccbo ( nr_interno_conta_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_profissional_exec_p text, nr_seq_proc_p bigint, ie_funcao_p bigint, nm_usuario_p text, ie_tipo_consiste_p bigint, nr_seq_participante_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

