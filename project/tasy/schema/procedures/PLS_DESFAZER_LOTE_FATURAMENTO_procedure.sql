-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_desfazer_lote_faturamento (nr_seq_lote_p pls_lote_faturamento.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

					
C01 CURSOR(	nr_seq_lote_pc	pls_lote_faturamento.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_fatura,
		dt_geracao_xml
	from	pls_fatura	
	where	nr_seq_lote = nr_seq_lote_pc;

C02 CURSOR(	nr_seq_fatura_pc	pls_fatura.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_fatura_evento
	from	pls_fatura_evento
	where	nr_seq_fatura = nr_seq_fatura_pc;
	
C03 CURSOR(	nr_seq_fat_evt_pc 	pls_fatura_evento.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_fatura_conta
	from	pls_fatura_conta
	where	nr_seq_fatura_evento = nr_seq_fat_evt_pc;

C04 CURSOR(	nr_seq_fatura_pc	pls_fatura.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_ptu_fatura
	from	ptu_fatura
	where	nr_seq_pls_fatura = nr_seq_fatura_pc;
	
C05 CURSOR(	nr_seq_ptu_fatura_pc	ptu_fatura.nr_sequencia%type) FOR
        SELECT  nr_sequencia nr_seq_cobranca
        from    ptu_nota_cobranca
        where   nr_seq_fatura = nr_seq_ptu_fatura_pc;

C06 CURSOR(	nr_seq_cobranca_pc	ptu_nota_cobranca.nr_sequencia%type) FOR
        SELECT  nr_sequencia nr_seq_hospital
        from    ptu_nota_hospitalar
        where   nr_seq_nota_cobr = nr_seq_cobranca_pc;	
	
C07 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_conta
	from	pls_conta_pos_estabelecido a
	where	a.nr_seq_lote_fat = nr_seq_lote_p
	and 	vl_ajuste != 0;
	
C08 CURSOR(	nr_seq_ptu_fatura_pc	ptu_fatura.nr_sequencia%type) FOR
        SELECT  nr_sequencia nr_seq_cobranca_rss
        from    ptu_nota_cobranca_rrs
        where   nr_seq_fatura = nr_seq_ptu_fatura_pc;

qt_fatura_contes_w		integer;
nr_seq_lote_disc_w		pls_lote_faturamento.nr_seq_lote_disc%type;
ie_aplicar_arredondamento_w	pls_lote_faturamento.ie_aplicar_arredondamento%type;
nr_seq_pos_ajustar_w		pls_conta_pos_estabelecido.nr_sequencia%type;
nr_seq_conta_ajustar_w		pls_conta.nr_sequencia%type;
tb_seq_pos_w			pls_util_cta_pck.t_number_table;
tb_seq_contas_w			pls_util_cta_pck.t_number_table;
index_w				integer := 0;
qt_registro_w			integer := 0;
ie_novo_pos_estab_w		pls_visible_false.ie_novo_pos_estab%type := 'N';

BEGIN

if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then
	select	coalesce(max(ie_novo_pos_estab),'N')
	into STRICT	ie_novo_pos_estab_w
	from	pls_visible_false;
	
	if (ie_novo_pos_estab_w = 'S') then
		CALL pls_faturamento_pck.desfazer_lote_faturamento(nr_seq_lote_p, null, nm_usuario_p);
	else
		select	max(ie_aplicar_arredondamento)
		into STRICT	ie_aplicar_arredondamento_w
		from	pls_lote_faturamento
		where 	nr_sequencia = nr_seq_lote_p;
		
		--Se tiver marcado para ajustar taxas de servico para que o valor das faturas dos eventos x tx_adm iguale o somatorio 

		--de todas as taxas adm dos itens presentes no respectivo evento, entao ao desfazer o lote de faturamento, sera necessario desfazer o ajuste
		if (ie_aplicar_arredondamento_w = 'S') then
			
			for r_c07_w in C07 loop
				
				tb_seq_pos_w(index_w) 	:= r_c07_w.nr_sequencia;
				tb_seq_contas_w(index_w):= r_c07_w.nr_seq_conta;
				index_w := index_w + 1;
			end loop;
			
		end if;
			
		-- verifica primeiro se nao existe alguma fatura ja contestada, caso existir aborta a operacao.
		select	count(1)
		into STRICT	qt_fatura_contes_w
		from	pls_fatura a,
			pls_lote_contestacao b
		where	a.nr_seq_lote = nr_seq_lote_p
		and	b.nr_seq_pls_fatura = a.nr_sequencia;

		if (qt_fatura_contes_w > 0) then
		
			CALL wheb_mensagem_pck.exibir_mensagem_abort(414111);
		end if;
		
		CALL pls_gerar_fatura_log( nr_seq_lote_p, null, null, 'PLS_DESFAZER_LOTE_FATURAMENTO', 'DL', 'S', nm_usuario_p);

		delete 	from w_pls_lote_fat_item
		where	nr_seq_lote = nr_seq_lote_p;

		for r_c01_w in c01(nr_seq_lote_p) loop
		
			if (r_c01_w.dt_geracao_xml IS NOT NULL AND r_c01_w.dt_geracao_xml::text <> '') then
				CALL pls_desfazer_lote_guia_fat_xml( r_c01_w.nr_seq_fatura, nm_usuario_p);
			end if;
		
			delete	FROM pls_fatura_item_trib
			where	nr_seq_fatura_trib in (	SELECT	nr_sequencia
							from	pls_fatura_trib
							where	nr_seq_fatura = r_c01_w.nr_seq_fatura);
			
			update	nota_fiscal
			set	nr_seq_fatura  = NULL
			where	nr_seq_fatura = r_c01_w.nr_seq_fatura;
			
			update	nota_fiscal
			set	nr_seq_fatura_ndc  = NULL
			where	nr_seq_fatura_ndc = r_c01_w.nr_seq_fatura;
			
			update	titulo_receber
			set	nr_seq_pls_fatura	 = NULL
			where	nr_seq_pls_fatura	= r_c01_w.nr_seq_fatura;
			
			for r_c02_w in c02(r_c01_w.nr_seq_fatura) loop
			
				for r_c03_w in c03(r_c02_w.nr_seq_fatura_evento) loop

					-- jjung OS 636073 - Deletar as faturas que foram duplicadas para a fatura cancelada primeiro.
					delete 	from pls_fatura_proc
					where	nr_seq_fat_proc_cancel in (	SELECT	nr_sequencia
										from	pls_fatura_proc
										where	nr_seq_fatura_conta = r_c03_w.nr_seq_fatura_conta);
					
					delete 	from pls_fatura_proc
					where	nr_seq_fatura_conta = r_c03_w.nr_seq_fatura_conta;
					
					-- jjung OS 636073 - Deletar as faturas que foram duplicadas para a fatura cancelada primeiro.
					delete 	from pls_fatura_mat
					where	nr_seq_fat_mat_cancel in (	SELECT	nr_sequencia
										from	pls_fatura_mat
										where	nr_seq_fatura_conta = r_c03_w.nr_seq_fatura_conta);
					
					delete	from pls_fatura_mat
					where	nr_seq_fatura_conta = r_c03_w.nr_seq_fatura_conta;
				end loop; -- c03
				
				delete	from pls_fatura_conta
				where	nr_seq_fatura_evento = r_c02_w.nr_seq_fatura_evento;
			end loop; -- c02
			
			for r_c04_w in c04(r_c01_w.nr_seq_fatura) loop
			
				for r_c05_w in c05(r_c04_w.nr_seq_ptu_fatura) loop
				
					delete	FROM ptu_nota_servico_item
					where	nr_seq_nota_servico	in (SELECT	nr_sequencia
										from	ptu_nota_servico
										where	nr_seq_nota_cobr = r_c05_w.nr_seq_cobranca);
				
					delete 	from ptu_nota_servico
					where	nr_seq_nota_cobr = r_c05_w.nr_seq_cobranca;

					delete 	from ptu_nota_complemento
					where 	nr_seq_nota_cobr = r_c05_w.nr_seq_cobranca;

					delete 	from ptu_nota_fiscal
					where 	nr_seq_nota_cobr = r_c05_w.nr_seq_cobranca;
					
					for r_c06_w in c06(r_c05_w.nr_seq_cobranca) loop
					
						delete 	from ptu_nota_hosp_compl
						where 	nr_seq_nota_hosp = r_c06_w.nr_seq_hospital;
					end loop; -- c06
					
					delete 	from ptu_nota_hospitalar
					where 	nr_seq_nota_cobr = r_c05_w.nr_seq_cobranca;
				end loop;
				
				for r_c08_w in c08(r_c04_w.nr_seq_ptu_fatura) loop
				
					delete	FROM ptu_nota_servico_item
					where	nr_seq_nota_servico_rrs	in (SELECT	nr_sequencia
										from	ptu_nota_servico_rrs
										where	nr_seq_nota_cobr_rrs = r_c08_w.nr_seq_cobranca_rss);

					delete 	from ptu_nota_servico_rrs
					where	nr_seq_nota_cobr_rrs = r_c08_w.nr_seq_cobranca_rss;
				
				end loop;
				
				delete 	from ptu_nota_cobranca_rrs 	
				where 	nr_seq_fatura = r_c04_w.nr_seq_ptu_fatura;
				
				delete 	from ptu_nota_cobranca 	
				where 	nr_seq_fatura = r_c04_w.nr_seq_ptu_fatura;

				delete 	from ptu_fatura_boleto 	
				where 	nr_seq_fatura = r_c04_w.nr_seq_ptu_fatura;

				delete 	from ptu_fatura_boleto 	
				where 	nr_seq_fatura = r_c04_w.nr_seq_ptu_fatura;

				delete 	from ptu_fatura_corpo 	
				where 	nr_seq_fatura = r_c04_w.nr_seq_ptu_fatura;
				
				delete 	from ptu_fatura_historico
				where 	nr_seq_fatura = r_c04_w.nr_seq_ptu_fatura;
				
				delete 	from ptu_a500_historico
				where 	nr_seq_fatura = r_c04_w.nr_seq_ptu_fatura;
				
				delete	from ptu_fatura_cedente
				where	nr_seq_fatura = r_c04_w.nr_seq_ptu_fatura;
				
				delete from ptu_fatura_conta_exc
				where nr_seq_fatura = r_c04_w.nr_seq_ptu_fatura;
			end loop; -- c04
			
			delete	from pls_fatura_guia_envio
			where	nr_seq_fatura = r_c01_w.nr_seq_fatura;
			
			delete	from ptu_fatura
			where	nr_seq_pls_fatura = r_c01_w.nr_seq_fatura;
			
			delete	from pls_fatura_motivo_imp_cob
			where	nr_seq_fatura = r_c01_w.nr_seq_fatura;
			
			delete	from pls_fatura_evento 	
			where 	nr_seq_fatura = r_c01_w.nr_seq_fatura;
		end loop; -- c01
		
		delete	from pls_lote_fat_inconsist
		where	nr_seq_lote = nr_seq_lote_p;
		
		begin
			delete	from pls_fatura_atend
			where	nr_seq_lote_fat = nr_seq_lote_p;
		exception
		when others then
			null;
		end;
		
		begin
			delete	from ptu_lote_conta_erro
			where	nr_seq_lote = nr_seq_lote_p;
		exception
		when others then
			null;
		end;
		
		delete	from pls_fatura
		where	nr_seq_lote = nr_seq_lote_p;
		
		update	pls_conta_pos_estab_contab
		set	nr_seq_evento_fat	 = NULL,
			nr_seq_regra_evento_fat	 = NULL,
			nr_seq_lote_fat		 = NULL,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_seq_lote_fat		= nr_seq_lote_p;
		
		update	pls_conta_pos_estabelecido
		set	nr_seq_evento_fat	 = NULL,
			nr_seq_regra_evento_fat	 = NULL,
			nr_seq_lote_fat		 = NULL,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_seq_lote_fat		= nr_seq_lote_p;
		
		update	pls_lote_faturamento
		set	dt_geracao 		 = NULL,
			dt_geracao_titulos 	 = NULL,
			dt_fechamento		 = NULL,
			dt_inicio_ger_lote	 = NULL,
			dt_fim_ger_lote		 = NULL,
			nm_id_sid		 = NULL,
			nm_id_serial		 = NULL,
			nm_usuario_ger_lote	 = NULL,
			ie_status		= 1, -- Aguardando
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_sequencia		= nr_seq_lote_p;
		
		-- Ressarcimento ao SUS
		update	pls_segurado_mensalidade
		set	nr_seq_evento_fat	 = NULL,
			nr_seq_lote_fat		 = NULL,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_seq_lote_fat		= nr_seq_lote_p;
		
		select	max(nr_seq_lote_disc)
		into STRICT	nr_seq_lote_disc_w
		from	pls_lote_faturamento
		where	nr_sequencia = nr_seq_lote_p;
		
		if (nr_seq_lote_disc_w IS NOT NULL AND nr_seq_lote_disc_w::text <> '') then
			delete	from pls_lote_faturamento
			where	nr_sequencia = nr_seq_lote_p;
		end if;
		
		--Se tiver marcado para ajustar taxas de servico para que o valor das faturas dos eventos x tx_adm iguale o somatorio 

		--de todas as taxas adm dos itens presentes no respectivo evento, entao ao desfazer o lote de faturamento, sera necessario desfazer o ajuste
		if (ie_aplicar_arredondamento_w = 'S') then
			if (tb_seq_pos_w.count > 0) then
				CALL pls_desfazer_ajuste_taxas_fat(nr_seq_lote_p, tb_seq_pos_w, tb_seq_contas_w, nm_usuario_p);
				tb_seq_pos_w.delete;
				tb_seq_contas_w.delete;
			end if;
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_conta_pos_estabelecido
		where	nr_seq_lote_fat = nr_seq_lote_p;
		
		if (qt_registro_w > 0) then
			-- Alguns itens de contas medicas ainda permanecem vinculados ao lote de faturamento, verifique com o suporte. (PLSCOVB_PLSLOFA_FK)
			CALL wheb_mensagem_pck.exibir_mensagem_abort(818030);
		end if;
		
		commit;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_desfazer_lote_faturamento (nr_seq_lote_p pls_lote_faturamento.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

