-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_digitar_inf_consulta () AS $body$
DECLARE


nr_next_val_w		bigint;
ds_parametro_w         	varchar(255);
nm_usuario_w           	varchar(15);
cd_dominio_w           	integer;
vl_parametro_padrao_w  	varchar(255);
vl_parametro_w         	varchar(255);
ds_observacao_w        	varchar(255);
nr_seq_apresentacao_w  	integer;
ie_nivel_liberacao_w   	varchar(3);
ds_dependencia_w       	varchar(255);
nr_seq_agrup_w         	bigint;
ds_observacao_cliente_w	varchar(4000);
ds_sql_w               	varchar(2000);
nr_seq_localizador_w   	bigint;
ie_situacao_delphi_w   	varchar(1);
ie_situacao_swing_w    	varchar(1);
ie_auditoria_w         	varchar(1);
cd_funcao_w    		integer;
nr_sequencia_w		integer;
cd_perfil_w             integer;
dt_atualizacao_w        timestamp;
qt_funcao_w		bigint;
qt_agrup_w		bigint;
ds_agrupamento_w	varchar(80);
nr_seq_apres_w		bigint;
ie_situacao_w		varchar(1);
nr_seq_agrupador_w	bigint;
qt_achou_w		bigint;

c01 CURSOR FOR
	SELECT	nr_sequencia,
		ds_parametro,
		nm_usuario,
		cd_dominio,
		vl_parametro_padrao,
		vl_parametro,
		ds_observacao,
		nr_seq_apresentacao,
		ie_nivel_liberacao,
		ds_dependencia,
		nr_seq_agrup,
		ds_observacao_cliente,
		ds_sql,
		nr_seq_localizador,
		ie_situacao_delphi,
		ie_situacao_swing,
		ie_auditoria
	 from  	funcao_parametro
	 where 	cd_funcao = -1003;


BEGIN


begin
	select	cd_funcao
	into STRICT	qt_funcao_w
	from	funcao
	where	cd_funcao = 10030  LIMIT 1;
exception
	when	others then
		qt_funcao_w := 0;
end;

If (qt_funcao_w = 0) then
	/* Cria a nova função */

	insert into funcao(	CD_FUNCAO,
			DS_FUNCAO,
			IE_SITUACAO,
			DT_ATUALIZACAO,
			NM_USUARIO,
			DS_HINT,
			DS_CAPTION,
			DS_FORM,
			DS_APLICACAO,
			NR_SEQ_MODULO,
			NR_SEQ_IMPLANTACAO,
			NR_SEQ_MOD_IMPL,
			IE_REGRA_FUNCIONAMENTO,
			PR_FUNCAO_MODULO,
			DS_ACTION,
			DS_MODULO_WEB,
			IE_SITUACAO_WEB,
			NR_INDICE_IMAGEM,
			IE_LIB_CLIENTE,
			IE_MAXIMIZAR,
			IE_SITUACAO_SWING,
			DT_ATUALIZACAO_NREC,
			NM_USUARIO_NREC,
			CD_FUNCAO_SWING,
			IE_DIC_OBJETO,
			IE_RELEVANTE_SBIS,
			IE_BLOQUEADA)
		(SELECT	10030,
			wheb_mensagem_pck.get_texto(799391),
			'A',
			clock_timestamp(),
			'amramos',
			DS_HINT,
			DS_CAPTION,
			DS_FORM,
			DS_APLICACAO,
			NR_SEQ_MODULO,
			NR_SEQ_IMPLANTACAO,
			NR_SEQ_MOD_IMPL,
			IE_REGRA_FUNCIONAMENTO,
			PR_FUNCAO_MODULO,
			DS_ACTION,
			DS_MODULO_WEB,
			IE_SITUACAO_WEB,
			NR_INDICE_IMAGEM,
			IE_LIB_CLIENTE,
			IE_MAXIMIZAR,
			IE_SITUACAO_SWING,
			DT_ATUALIZACAO_NREC,
			NM_USUARIO_NREC,
			CD_FUNCAO_SWING,
			IE_DIC_OBJETO,
			IE_RELEVANTE_SBIS,
			IE_BLOQUEADA
		from	funcao
		where	cd_funcao = -1003);
end if;

select	967
into STRICT	nr_seq_agrupador_w
;

/*  Insere o agrupador (Se ainda não existir) */

begin
	select	nr_sequencia
	into STRICT	qt_achou_w
	from	funcao_grupo_param
	where	cd_funcao = 10030  LIMIT 1;
exception
	when 	others then
		qt_achou_w := 0;
end;

if (qt_achou_w = 0) then
	insert into funcao_grupo_param(	NR_SEQUENCIA,
			CD_FUNCAO,
			DT_ATUALIZACAO,
			NM_USUARIO,
			DT_ATUALIZACAO_NREC,
			NM_USUARIO_NREC,
			DS_AGRUPAMENTO,
			NR_SEQ_APRES,
			IE_SITUACAO
		)
	values (	nr_seq_agrupador_w,
			10030,
			clock_timestamp(),
			'amramos',
			clock_timestamp(),
			'amramos',
			wheb_mensagem_pck.get_texto(799761),
			999,
			'A');
end if;

open C01;
loop
fetch 	C01 into
	nr_next_val_w,
	ds_parametro_w,
	nm_usuario_w,
	cd_dominio_w,
	vl_parametro_padrao_w,
	vl_parametro_w,
	ds_observacao_w,
	nr_seq_apresentacao_w,
	ie_nivel_liberacao_w,
	ds_dependencia_w,
	nr_seq_agrup_w,
	ds_observacao_cliente_w,
	ds_sql_w,
	nr_seq_localizador_w,
	ie_situacao_delphi_w,
	ie_situacao_swing_w,
	ie_auditoria_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	/* Insere os parâmetros na função Nova baseada na antiga (Se ainda não existir) */

	begin
		select	nr_sequencia
		into STRICT	qt_achou_w
		from	funcao_parametro
		where	cd_funcao = 10030
		and	nr_sequencia = nr_next_val_w  LIMIT 1;
	exception
		when 	others then
			qt_achou_w := 0;
	end;

	if (qt_achou_w = 0) then
		insert into funcao_parametro(	cd_funcao,
				nr_sequencia,
				DS_PARAMETRO,
				dt_atualizacao,
				nm_usuario,
				CD_DOMINIO,
				VL_PARAMETRO_PADRAO,
				VL_PARAMETRO,
				DS_OBSERVACAO,
				NR_SEQ_APRESENTACAO,
				IE_NIVEL_LIBERACAO,
				DS_DEPENDENCIA,
				NR_SEQ_AGRUP,
				DS_OBSERVACAO_CLIENTE,
				DS_SQL,
				NR_SEQ_LOCALIZADOR,
				IE_SITUACAO_DELPHI,
				IE_SITUACAO_SWING,
				IE_AUDITORIA)
		values (	10030,
				nr_next_val_w,
				ds_parametro_w,
				clock_timestamp(),
				'amramos',
				cd_dominio_w,
				vl_parametro_padrao_w,
				vl_parametro_w,
				ds_observacao_w,
				nr_seq_apresentacao_w,
				ie_nivel_liberacao_w,
				ds_dependencia_w,
				nr_seq_agrupador_w,
				ds_observacao_cliente_w,
				ds_sql_w,
				nr_seq_localizador_w,
				ie_situacao_delphi_w,
				ie_situacao_swing_w,
				ie_auditoria_w);
	end if;

	/* Cria os valores dos parâmetros p/ Estabelecimento - tabela funcao_param_estab (se ainda não existir)*/

	begin
		select	nr_sequencia
		into STRICT	qt_achou_w
		from	funcao_param_Estab
		where	cd_funcao = 10030
		and	nr_seq_param = nr_next_val_w  LIMIT 1;
	exception
		when 	others then
			qt_achou_w := 0;
	end;

	if (qt_achou_w = 0) then
		insert 	into funcao_param_estab(	NR_SEQUENCIA,
				CD_FUNCAO,
				NR_SEQ_PARAM,
				CD_ESTABELECIMENTO,
				DT_ATUALIZACAO,
				NM_USUARIO,
				VL_PARAMETRO,
				DT_ATUALIZACAO_NREC,
				NM_USUARIO_NREC,
				DS_OBSERVACAO
			)
			(SELECT	nextval('funcao_param_estab_seq'),
				10030,
				nr_next_val_w,
				cd_estabelecimento,
				clock_timestamp(),
				NM_USUARIO,
				VL_PARAMETRO,
				clock_timestamp(),
				NM_USUARIO_NREC,
				DS_OBSERVACAO
			from	funcao_param_estab
			where	cd_funcao = -1003
			AND	NR_SEQUENCIA = nr_next_val_w);
	end if;

	/* Cria os valores dos parâmetros p/ Perfil - tabela funcao_param_perfil  (Se ainda não existir) */

	begin
		select	nr_sequencia
		into STRICT	qt_achou_w
		from	funcao_param_perfil
		where	cd_funcao = 10030
		and	nr_sequencia = nr_next_val_w  LIMIT 1;
	exception
		when 	others then
			qt_achou_w := 0;
	end;

	if (qt_achou_w = 0) then
		insert	into funcao_param_perfil(	CD_FUNCAO,
				NR_SEQUENCIA,
				CD_PERFIL,
				DT_ATUALIZACAO,
				NM_USUARIO,
				VL_PARAMETRO,
				DS_OBSERVACAO
			)
			(SELECT	10030,
				nr_next_val_w,
				cd_perfil,
				clock_timestamp(),
				'amramos',
				vl_parametro,
				ds_observacao
			from	funcao_param_perfil
			where	cd_funcao = -1003
			AND	NR_SEQUENCIA = nr_next_val_w);
	end if;


	/* Cria os valores dos parâmetros p/ Usuário - tabela funcao_param_usuario (Se ainda não existir) */

	begin
		select	nr_seq_interno
		into STRICT	qt_achou_w
		from	funcao_param_usuario
		where	cd_funcao = 10030
		and	nr_sequencia = nr_next_val_w  LIMIT 1;
	exception
		when 	others then
			qt_achou_w := 0;
	end;

	if (qt_achou_w = 0) then
		insert	into funcao_param_usuario(	CD_FUNCAO,
				NR_SEQUENCIA,
				NM_USUARIO_PARAM,
				DT_ATUALIZACAO,
				NM_USUARIO,
				VL_PARAMETRO,
				DS_OBSERVACAO,
				CD_ESTABELECIMENTO,
				NR_SEQ_INTERNO)
			(SELECT 10030,
				nr_next_val_w,
				nm_usuario_param,
				clock_timestamp(),
				'amramos',
				vl_parametro,
				ds_observacao,
				cd_estabelecimento,
				nextval('funcao_param_usuario_seq')
			from	funcao_param_usuario
			where 	cd_funcao = -1003
			AND	NR_SEQUENCIA = nr_next_val_w);
	end if;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_digitar_inf_consulta () FROM PUBLIC;

