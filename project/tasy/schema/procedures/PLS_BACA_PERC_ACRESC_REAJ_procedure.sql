-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_baca_perc_acresc_reaj () AS $body$
DECLARE


tx_acrescimo_w			double precision;
vl_preco_inicial_w		double precision;
tx_acrescimo_erro_w		double precision;
vl_preco_ant_w			double precision;
qt_idade_inicio_w		integer;
qt_idade_inicial_w		integer;
nr_seq_preco_ant_w		bigint;
nr_seq_preco_w			bigint;
ie_tabela_base_w		varchar(1);
nr_seq_tabela_w			bigint;

c01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_tabela_preco;

c02 CURSOR FOR
	SELECT	nr_sequencia,
		qt_idade_inicial,
		vl_preco_inicial
	from	pls_plano_preco
	where	nr_seq_tabela	= nr_seq_tabela_w
	order by ie_grau_titularidade,
		 qt_idade_inicial;

BEGIN

open c01;
loop
fetch c01 into
	nr_seq_tabela_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	if (nr_seq_tabela_w IS NOT NULL AND nr_seq_tabela_w::text <> '') and (coalesce(nr_seq_tabela_w,0) <> 0) then

		select	coalesce(ie_tabela_base,'N')
		into STRICT	ie_tabela_base_w
		from	pls_tabela_preco
		where	nr_sequencia	= nr_seq_tabela_w;

		if (ie_tabela_base_w = 'N') then

			open c02;
			loop
			fetch c02 into	nr_seq_preco_w,
					qt_idade_inicial_w,
					vl_preco_inicial_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				select	coalesce(min(qt_idade_inicial),0)
				into STRICT	qt_idade_inicio_w
				from	pls_plano_preco
				where	nr_seq_tabela	= nr_seq_tabela_w;

				if (qt_idade_inicial_w <> qt_idade_inicio_w) then

					select	coalesce(max(nr_sequencia),0)
					into STRICT	nr_seq_preco_ant_w
					from	pls_plano_preco
					where	nr_seq_tabela		= nr_seq_tabela_w
					and	qt_idade_inicial	< qt_idade_inicial_w;

					if (nr_seq_preco_ant_w > 0) then

						select	coalesce(vl_preco_inicial,0)
						into STRICT	vl_preco_ant_w
						from	pls_plano_preco
						where	nr_sequencia	= nr_seq_preco_ant_w;

						begin
						tx_acrescimo_w	:= (dividir_sem_round(vl_preco_inicial_w,vl_preco_ant_w) * 100) - 100;
						exception
						when others then
							tx_acrescimo_w	:= 0;
						end;

						update	pls_plano_preco
						set	tx_acrescimo	= tx_acrescimo_w
						where	nr_sequencia	= nr_seq_preco_w;
					end if;
				end if;
			end loop;
			close c02;
		end if;
	end if;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_baca_perc_acresc_reaj () FROM PUBLIC;

