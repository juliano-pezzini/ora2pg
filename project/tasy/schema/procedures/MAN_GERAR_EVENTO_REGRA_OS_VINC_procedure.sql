-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_gerar_evento_regra_os_vinc ( ie_evento_p text, nr_sequencia_p bigint, ds_valor_p text, nm_usuario_p text) AS $body$
DECLARE

 
/*	ie_evento_p 
	1 - Alterar estágio 
	2 - Alterar tipo solução 
	3 - Alterar tipo OS cliente 
	4 - Alterar causa dano 
	5 - Alterar a complexidade 
	6 - Liberar um histórico 
	7 - Gerar os executores previstos 
	8 - Encerrar OS via webservice	*/
 
	 
nr_seq_ordem_servico_w		bigint;
nm_usuario_exec_w		varchar(15);
				
C01 CURSOR FOR 
	SELECT	b.nr_sequencia 
	from	man_ordem_servico b, 
		man_ordem_serv_vinc a 
	where	b.nr_sequencia = a.nr_seq_os_vinculada 
	and	b.ie_status_ordem <> '3' 
	and	coalesce(b.dt_fim_real::text, '') = '' 
	and (ie_evento_p <> 8 or (ie_evento_p = 8 and coalesce(b.nr_seq_wheb::text, '') = '')) 
	and	a.nr_seq_ordem_servico = nr_sequencia_p;
	
C02 CURSOR FOR 
	SELECT	nm_usuario_exec 
	from	man_ordem_servico_exec 
	where	nr_seq_ordem = nr_sequencia_p;


BEGIN 
CALL wheb_usuario_pck.SET_IE_EXECUTAR_TRIGGER('N');
 
if (coalesce(ie_evento_p,'0') <> '0') and (coalesce(nr_sequencia_p,0) > 0) then 
	begin 
	if (ie_evento_p = '1') then 
		begin 
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_ordem_servico_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			update	man_ordem_servico 
			set	nr_seq_estagio		= ds_valor_p, 
				dt_atualizacao		= clock_timestamp(), 
				nm_usuario		= nm_usuario_p 
			where	nr_sequencia		= nr_seq_ordem_servico_w;
			end;
		end loop;
		close C01;
		end;
	elsif (ie_evento_p = '2') then 
		begin 
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_ordem_servico_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			update	man_ordem_servico 
			set	nr_seq_tipo_solucao	= ds_valor_p, 
				dt_atualizacao		= clock_timestamp(), 
				nm_usuario		= nm_usuario_p 
			where	nr_sequencia		= nr_seq_ordem_servico_w;
			end;
		end loop;
		close C01;
		end;
	elsif (ie_evento_p = '3') then 
		begin 
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_ordem_servico_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			update	man_ordem_servico 
			set	nr_seq_tipo_ordem	= ds_valor_p, 
				dt_atualizacao		= clock_timestamp(), 
				nm_usuario		= nm_usuario_p 
			where	nr_sequencia		= nr_seq_ordem_servico_w;
			end;
		end loop;
		close C01;
		end;
	elsif (ie_evento_p = '4') then 
		begin 
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_ordem_servico_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			update	man_ordem_servico 
			set	nr_seq_causa_dano	= ds_valor_p, 
				dt_atualizacao		= clock_timestamp(), 
				nm_usuario		= nm_usuario_p 
			where	nr_sequencia		= nr_seq_ordem_servico_w;
			end;
		end loop;
		close C01;
		end;
	elsif (ie_evento_p = '5') then 
		begin 
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_ordem_servico_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			update	man_ordem_servico 
			set	nr_seq_complex		= ds_valor_p, 
				dt_atualizacao		= clock_timestamp(), 
				nm_usuario		= nm_usuario_p 
			where	nr_sequencia		= nr_seq_ordem_servico_w;
			end;
		end loop;
		close C01;
		end;
	elsif (ie_evento_p = '6') then 
		begin 
		CALL man_gerar_hist_os_vinculada(nr_sequencia_p, nm_usuario_p);		
		end;
	elsif (ie_evento_p = '7') then 
		begin		 
		open C02;
		loop 
		fetch C02 into	 
			nm_usuario_exec_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			CALL man_inserir_usuario_executor(ds_valor_p, nm_usuario_exec_w, nm_usuario_p, null, null);
			end;
		end loop;
		close C02;		
		end;
	elsif (ie_evento_p = '8') then 
		begin 
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_ordem_servico_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			update man_ordem_servico 
			set	ie_status_ordem		= 3, 
				dt_atualizacao		= clock_timestamp(), 
				nm_usuario		= nm_usuario_p, 
				dt_inicio_real		= coalesce(dt_inicio_real,dt_ordem_servico), 
				dt_fim_real		= clock_timestamp(), 
				nr_seq_estagio		= CASE WHEN ds_valor_p=0 THEN nr_seq_estagio  ELSE ds_valor_p END  
			where  nr_sequencia		= nr_seq_ordem_servico_w;
			end;
		end loop;
		close C01;
		end;
	end if;
	 
	commit;
	end;
end if;
CALL wheb_usuario_pck.SET_IE_EXECUTAR_TRIGGER('S');
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_gerar_evento_regra_os_vinc ( ie_evento_p text, nr_sequencia_p bigint, ds_valor_p text, nm_usuario_p text) FROM PUBLIC;

