-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_preco_amb_tabela ( cd_edicao_amb_p bigint, cd_procedimento_p bigint, vl_procedimento_p bigint, cd_moeda_p bigint, nm_usuario_p text, vl_custo_operacional_p bigint, vl_anestesista_p bigint, vl_medico_p bigint, vl_filme_p bigint, qt_filme_p bigint, nr_auxiliares_p bigint, nr_incidencia_p bigint, qt_porte_anestesico_p bigint, ie_origem_proced_p bigint, vl_auxiliares_p bigint, dt_inicio_vigencia_p timestamp, ie_origem_tabela_imp_p text default 'P', cd_level_p text default '', cd_procedimento_loc_p text default '') AS $body$
DECLARE


ie_valor_nulo_w		varchar(15) := 'N';


BEGIN

ie_valor_nulo_w	:= coalesce(obter_valor_param_usuario(705,3,obter_perfil_ativo,nm_usuario_p,coalesce(wheb_usuario_pck.get_cd_estabelecimento,0)),'N');

if (cd_edicao_amb_p IS NOT NULL AND cd_edicao_amb_p::text <> '') and (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (cd_moeda_p IS NOT NULL AND cd_moeda_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') and ((cd_procedimento_loc_p IS NOT NULL AND cd_procedimento_loc_p::text <> '') or philips_param_pck.get_cd_pais = 1) and /* DBF import - Brazil doesn't have codigo_loc column */
	(ie_origem_proced_p IS NOT NULL AND ie_origem_proced_p::text <> '') then
	begin
	if (coalesce(ie_origem_tabela_imp_p,'P') = 'P') then
		insert into	preco_amb(
                    cd_edicao_amb,
                    cd_procedimento,
                    vl_procedimento,
                    cd_moeda,
                    dt_atualizacao,
                    nm_usuario,
                    vl_custo_operacional,
                    vl_anestesista,
                    vl_medico,
                    vl_filme,
                    qt_filme,
                    nr_auxiliares,
                    nr_incidencia,
                    qt_porte_anestesico,
                    ie_origem_proced,
                    vl_auxiliares,
                    dt_inicio_vigencia,
                    nr_sequencia,
                    cd_level,
                    cd_procedimento_loc
                    )
		values (
				cd_edicao_amb_p,
				cd_procedimento_p,
				vl_procedimento_p,
				cd_moeda_p,
				clock_timestamp(),
				nm_usuario_p,
				CASE WHEN ie_valor_nulo_w='N' THEN vl_custo_operacional_p  ELSE CASE WHEN vl_custo_operacional_p=0 THEN null  ELSE vl_custo_operacional_p END  END ,
				CASE WHEN ie_valor_nulo_w='N' THEN vl_anestesista_p  ELSE CASE WHEN vl_anestesista_p=0 THEN null  ELSE vl_anestesista_p END  END ,
				CASE WHEN ie_valor_nulo_w='N' THEN vl_medico_p  ELSE CASE WHEN vl_medico_p=0 THEN null  ELSE vl_medico_p END  END ,
				CASE WHEN ie_valor_nulo_w='N' THEN vl_filme_p  ELSE CASE WHEN vl_filme_p=0 THEN null  ELSE vl_filme_p END  END ,
				CASE WHEN ie_valor_nulo_w='N' THEN qt_filme_p  ELSE CASE WHEN qt_filme_p=0 THEN null  ELSE qt_filme_p END  END ,
				CASE WHEN ie_valor_nulo_w='N' THEN nr_auxiliares_p  ELSE CASE WHEN nr_auxiliares_p=0 THEN null  ELSE nr_auxiliares_p END  END ,
				nr_incidencia_p,
				CASE WHEN ie_valor_nulo_w='N' THEN qt_porte_anestesico_p  ELSE CASE WHEN qt_porte_anestesico_p=0 THEN null  ELSE qt_porte_anestesico_p END  END ,
				ie_origem_proced_p,
				CASE WHEN ie_valor_nulo_w='N' THEN vl_auxiliares_p  ELSE CASE WHEN vl_auxiliares_p=0 THEN null  ELSE vl_auxiliares_p END  END ,
				dt_inicio_vigencia_p,
				nextval('preco_amb_seq'),
				cd_level_p,
				cd_procedimento_loc_p
				);
	else
		insert into preco_tuss(
		            cd_edicao_amb,
	 				cd_moeda,
	 				cd_procedimento,
	 				dt_atualizacao,
	 				dt_atualizacao_nrec,
	 				dt_inicio_vigencia,
	 				ie_origem_proced,
	 				ie_situacao,
	 				nm_usuario,
	 				nm_usuario_nrec,
	 				vl_anestesista,
	 				vl_auxiliares,
	 				vl_custo_operacional,
	 				vl_filme,
	 				vl_medico,
	 				nr_porte_anest_amb,
	 				qt_filme_amb,
	 				nr_auxiliares_amb,
	 				qt_incidencia_amb,
	 				vl_procedimento,
	 				nr_sequencia
	 				)
		values (	cd_edicao_amb_p,

                    cd_moeda_p,
                    cd_procedimento_p,
                    clock_timestamp(),
                    clock_timestamp(),
                    dt_inicio_vigencia_p,
                    ie_origem_proced_p,
                    'A',
                    nm_usuario_p,
                    nm_usuario_p,
                    CASE WHEN ie_valor_nulo_w='N' THEN vl_anestesista_p  ELSE CASE WHEN vl_anestesista_p=0 THEN null  ELSE vl_anestesista_p END  END ,
                    CASE WHEN ie_valor_nulo_w='N' THEN vl_auxiliares_p  ELSE CASE WHEN vl_auxiliares_p=0 THEN null  ELSE vl_auxiliares_p END  END ,
                    CASE WHEN ie_valor_nulo_w='N' THEN vl_custo_operacional_p  ELSE CASE WHEN vl_custo_operacional_p=0 THEN null  ELSE vl_custo_operacional_p END  END ,
                    CASE WHEN ie_valor_nulo_w='N' THEN vl_filme_p  ELSE CASE WHEN vl_filme_p=0 THEN null  ELSE vl_filme_p END  END ,
                    CASE WHEN ie_valor_nulo_w='N' THEN vl_medico_p  ELSE CASE WHEN vl_medico_p=0 THEN null  ELSE vl_medico_p END  END ,
                    CASE WHEN ie_valor_nulo_w='N' THEN qt_porte_anestesico_p  ELSE CASE WHEN qt_porte_anestesico_p=0 THEN null  ELSE qt_porte_anestesico_p END  END ,
                    CASE WHEN ie_valor_nulo_w='N' THEN qt_filme_p  ELSE CASE WHEN qt_filme_p=0 THEN null  ELSE qt_filme_p END  END ,
                    CASE WHEN ie_valor_nulo_w='N' THEN nr_auxiliares_p  ELSE CASE WHEN nr_auxiliares_p=0 THEN null  ELSE nr_auxiliares_p END  END ,
                    nr_incidencia_p,
                    vl_procedimento_p,
                    nextval('preco_tuss_seq')
			);
	end if;
	end;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_preco_amb_tabela ( cd_edicao_amb_p bigint, cd_procedimento_p bigint, vl_procedimento_p bigint, cd_moeda_p bigint, nm_usuario_p text, vl_custo_operacional_p bigint, vl_anestesista_p bigint, vl_medico_p bigint, vl_filme_p bigint, qt_filme_p bigint, nr_auxiliares_p bigint, nr_incidencia_p bigint, qt_porte_anestesico_p bigint, ie_origem_proced_p bigint, vl_auxiliares_p bigint, dt_inicio_vigencia_p timestamp, ie_origem_tabela_imp_p text default 'P', cd_level_p text default '', cd_procedimento_loc_p text default '') FROM PUBLIC;

