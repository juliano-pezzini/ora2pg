-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE insert_exams_list_physician ( nm_user_p text, nm_order_p bigint, nm_prescription_p bigint, nm_exam_p text, cd_pessoa_fisica_p text, nm_sequence_list_p bigint, ie_status_parameter_85_p text, ie_status_parameter_86_p text, nm_result_already_added_p INOUT bigint, nm_result_same_physician_p INOUT bigint ) AS $body$
DECLARE


    c011                            integer;
    ds_select_w                     varchar(500);
    result_w                        integer;
    nr_new_sequence_w               lista_central_exame.nr_sequencia%TYPE;
    nr_presentation_order_w         lista_central_exame.nr_ordem_apresentacao%TYPE;
    prescription_number_w           prescr_procedimento.nr_prescricao%TYPE;
    exam_number_w                   varchar(50);
    prescr_proc_sequence_w          prescr_procedimento.nr_sequencia%TYPE;
    exam_status_w                   prescr_procedimento.ie_status_execucao%TYPE;
    nm_physician_user_w             varchar(50);
    nm_aproval_exam_user_w          varchar(50);
    nr_exam_exists                  bigint;
    ie_add_exams_more_status_w      varchar(2);
    ie_add_exams_same_physician_w   varchar(2);
    test1                           varchar(2);

BEGIN
    ie_add_exams_more_status_w := ie_status_parameter_85_p;
    ie_add_exams_same_physician_w := ie_status_parameter_86_p;
    nm_result_already_added_p := 0;
    nm_result_same_physician_p := 0;
    IF ( ie_add_exams_more_status_w = 'S' )
    THEN
        ds_select_w := 'select nr_prescricao, nr_acesso_dicom, nr_sequencia, ie_status_execucao from physician_exams_list_v where ie_status_execucao IN (''20'', ''22'', ''25'', ''26'', ''28'', ''30'', ''33'', ''35'', ''37'', ''38'') ';
    ELSE
        ds_select_w := 'select nr_prescricao, nr_acesso_dicom, nr_sequencia, ie_status_execucao from physician_exams_list_v where ie_status_execucao IN (''20'') and (nr_prescr_proc_dit_sequencia is null) ';
    END IF;

    IF
        coalesce(nm_order_p,0) > 0
    THEN
        ds_select_w := ds_select_w || ' and nr_atendimento = :nm_order_p';
    END IF;

    IF
        coalesce(nm_prescription_p,0) > 0
    THEN
        ds_select_w := ds_select_w || ' and nr_prescricao = :nm_prescription_p';
    END IF;

    IF
        coalesce(nm_exam_p,'NULL') != 'NULL'
    THEN
        ds_select_w := ds_select_w || ' and nr_acesso_dicom = :nm_exam_p';
    END IF;

    IF
        coalesce(cd_pessoa_fisica_p,'NULL') != 'NULL'
    THEN
        ds_select_w := ds_select_w || ' and cd_pessoa_fisica = :cd_pessoa_fisica_p';
    END IF;

    c011 := dbms_sql.open_cursor;
    dbms_sql.parse(c011,ds_select_w,dbms_sql.native);
    dbms_sql.define_column(c011,1,prescription_number_w);
    dbms_sql.define_column(c011,2,exam_number_w,50);
    dbms_sql.define_column(c011,3,prescr_proc_sequence_w);
    dbms_sql.define_column(c011,4,exam_status_w,5);
    IF
        coalesce(nm_order_p,0) > 0
    THEN
        dbms_sql.bind_variable(c011,'nm_order_p',nm_order_p,255);
    END IF;

    IF
        coalesce(nm_prescription_p,0) > 0
    THEN
        dbms_sql.bind_variable(c011,'nm_prescription_p',nm_prescription_p,255);
    END IF;

    IF
        coalesce(nm_exam_p,'NULL') != 'NULL'
    THEN
        dbms_sql.bind_variable(c011,'nm_exam_p',nm_exam_p,255);
    END IF;

    IF
        coalesce(cd_pessoa_fisica_p,'NULL') != 'NULL'
    THEN
        dbms_sql.bind_variable(c011,'cd_pessoa_fisica_p',cd_pessoa_fisica_p,255);
    END IF;

    SELECT
        u.nm_usuario
    INTO STRICT nm_physician_user_w
    FROM
        pessoa_fisica pf
        INNER JOIN usuario u ON pf.cd_pessoa_fisica = u.cd_pessoa_fisica
        INNER JOIN lista_central_medico lcm ON pf.cd_pessoa_fisica = lcm.cd_medico
    WHERE
        lcm.nr_sequencia = nm_sequence_list_p
        AND u.ie_situacao = 'A';

    /*  Numbers to be evaluated on back-end. These are their meanings:

        - nm_result_already_added_p = 1 = At least one exam has been added.

        - nm_result_same_physician_p = 1 = At least one exam has the same physician for first and second approval (parameter 86 is not enabled).
    */
    result_w := dbms_sql.execute(c011);
    WHILE( dbms_sql.fetch_rows(c011) > 0 ) LOOP
        dbms_sql.column_value(c011,1,prescription_number_w);
        dbms_sql.column_value(c011,2,exam_number_w);
        dbms_sql.column_value(c011,3,prescr_proc_sequence_w);
        dbms_sql.column_value(c011,4,exam_status_w);
        SELECT
            nextval('lista_central_exame_seq')
        INTO STRICT nr_new_sequence_w
;

        IF ( ie_add_exams_more_status_w = 'S' )
        THEN
            SELECT
                coalesce(MAX(a.nr_ordem_apresentacao),0) + 5
            INTO STRICT nr_presentation_order_w
            FROM
                lista_central_exame a
                INNER JOIN prescr_procedimento pp ON a.nr_prescricao = pp.nr_prescricao
                                                     AND a.nr_sequencia_prescricao = pp.nr_sequencia
                                                     AND pp.ie_status_execucao IN(
                    '20',
                    '22',
                    '25',
                    '26',
                    '28',
                    '30',
                    '33',
                    '35',
                    '37',
                    '38'
                )
            WHERE
                a.nr_seq_lista_medico = prescr_proc_sequence_w;

        ELSE
            SELECT
                coalesce(MAX(a.nr_ordem_apresentacao),0) + 5
            INTO STRICT nr_presentation_order_w
            FROM
                lista_central_exame a
                INNER JOIN prescr_procedimento pp ON a.nr_prescricao = pp.nr_prescricao
                                                     AND a.nr_sequencia_prescricao = pp.nr_sequencia
                                                     AND pp.ie_status_execucao IN(
                    '20'
                )
            WHERE
                a.nr_seq_lista_medico = prescr_proc_sequence_w;

        END IF;

        IF ( exam_status_w = '35' )
        THEN
            SELECT
                lp.nm_usuario_aprovacao
            INTO STRICT nm_aproval_exam_user_w
            FROM
                laudo_paciente lp
                INNER JOIN prescr_procedimento pp ON pp.nr_prescricao = lp.nr_prescricao
                                                     AND pp.nr_sequencia = lp.nr_seq_prescricao
            WHERE
                lp.nr_prescricao = prescription_number_w
                AND lp.nr_seq_prescricao = prescr_proc_sequence_w;

        END IF;

        IF ( ie_add_exams_same_physician_w != 'S' AND exam_status_w = '35' )
        THEN
            IF ( nm_aproval_exam_user_w = nm_physician_user_w )
            THEN
                --nm_result_same_physician_p := 1;
                goto end_loop;
            END IF;
        END IF;

        SELECT
            COUNT(nr_prescricao)
        INTO STRICT nr_exam_exists
        FROM
            lista_central_exame
        WHERE
            nr_prescricao = prescription_number_w
            AND nr_sequencia_prescricao = prescr_proc_sequence_w;

        IF ( coalesce(nr_exam_exists,0) <= 0 )
        THEN
            INSERT INTO lista_central_exame(
                nr_sequencia,
                dt_atualizacao,
                nm_usuario,
                dt_atualizacao_nrec,
                nm_usuario_nrec,
                nr_seq_lista_medico,
                nr_prescricao,
                nr_sequencia_prescricao,
                nr_ordem_apresentacao
            ) VALUES (
                nr_new_sequence_w,
                clock_timestamp(),
                nm_user_p,
                clock_timestamp(),
                nm_user_p,
                nm_sequence_list_p,
                prescription_number_w,
                prescr_proc_sequence_w,
                nr_presentation_order_w
            );

        ELSE
            nm_result_already_added_p := 1;
        END IF;

        <<end_loop>>
        nm_aproval_exam_user_w := '';
    END LOOP;

    COMMIT;
    dbms_sql.close_cursor(c011);
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        CALL wheb_mensagem_pck.exibir_mensagem_abort(279333);
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE insert_exams_list_physician ( nm_user_p text, nm_order_p bigint, nm_prescription_p bigint, nm_exam_p text, cd_pessoa_fisica_p text, nm_sequence_list_p bigint, ie_status_parameter_85_p text, ie_status_parameter_86_p text, nm_result_already_added_p INOUT bigint, nm_result_same_physician_p INOUT bigint ) FROM PUBLIC;

