-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE reg_campos AS (
	cd_estabelecimento	smallint,
	nr_seq_metrica		bigint,
	nr_seq_mes_ref		bigint,
	cd_conta_contabil		varchar(20),
	cd_centro_custo		bigint,
	vl_orcado			double precision,
	qt_metrica		double precision,
	vl_ticket_medio		double precision,
	ds_observacao		varchar(255));


CREATE OR REPLACE PROCEDURE ctb_cen_gerar_orcamento ( cd_estabelecimento_p bigint, nr_seq_cenario_p bigint, nr_seq_mes_inic_p bigint, nr_seq_mes_fim_p bigint, ie_sobrepor_p text, ie_zerar_conta_sem_cenario_p text, ie_deletar_conta_sem_cenario_p text, nm_usuario_p text) AS $body$
DECLARE


cd_empresa_w			bigint;
cd_estabelecimento_w		bigint;
ie_permite_gerar_mes_real_w		varchar(1);
ie_consistir_liberacao_valor_w	varchar(1);
nr_sequencia_w			bigint;
qt_reg_w				bigint;
dt_inicio_w			timestamp;
dt_fim_w				timestamp;
dt_referencia_w			timestamp;
i				integer;

type campos is table of reg_campos index by integer;

vetor_w				campos;

c01 CURSOR FOR
SELECT	b.cd_estabelecimento,
	b.nr_seq_metrica,
	b.nr_seq_mes_ref,
	b.cd_conta_contabil,
	b.cd_centro_custo,
	b.vl_orcado,
	b.qt_metrica,
	b.vl_ticket_medio,
	b.ds_observacao
from	ctb_orc_cen_valor b,
	ctb_mes_ref a
where	b.nr_seq_cenario	= nr_seq_cenario_p
and	b.nr_seq_mes_ref	= a.nr_sequencia
and	a.dt_referencia	between dt_inicio_w and dt_fim_w;

vet01	C01%RowType;


BEGIN

select	cd_empresa
into STRICT	cd_empresa_w
from	ctb_orc_cenario
where	nr_sequencia	= nr_seq_cenario_p;

select	coalesce(max(obter_valor_param_usuario(925, 29, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N'),
	coalesce(max(obter_valor_param_usuario(925, 95, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N')
into STRICT	ie_permite_gerar_mes_real_w,
	ie_consistir_liberacao_valor_w
;

select	dt_referencia
into STRICT	dt_inicio_w
from	ctb_mes_ref
where	nr_sequencia	= nr_seq_mes_inic_p
and	cd_empresa	= cd_empresa_w;

select	dt_referencia
into STRICT	dt_fim_w
from	ctb_mes_ref
where	nr_sequencia	= nr_seq_mes_fim_p
and	cd_empresa	= cd_empresa_w;

if (dt_inicio_w > dt_fim_w) then
	/*'A data de inicio deve ser menor ou igual à final');*/

	CALL wheb_mensagem_pck.exibir_mensagem_abort(266405);
end if;

if (ie_permite_gerar_mes_real_w = 'N') then
	select	min(nr_sequencia)
	into STRICT	nr_sequencia_w
	from	ctb_mes_ref a
	where	dt_referencia	between dt_inicio_w and dt_fim_w
	and	cd_empresa		= cd_empresa_w
	and	exists (
		SELECT	1
		from	ctb_orcamento b
		where	nr_seq_mes_ref	= a.nr_sequencia
		and	coalesce(vl_realizado,0) <> 0);

	select	min(dt_referencia)
	into STRICT	dt_referencia_w
	from	ctb_mes_ref
	where	nr_sequencia	= nr_sequencia_w
	and	cd_empresa	= cd_empresa_w;

	if (dt_referencia_w IS NOT NULL AND dt_referencia_w::text <> '') then
		/*O mês já teve valores realizados ' || dt_referencia_w);*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(266406,'DT=' || dt_referencia_w);
	end if;
end if;


if (ie_consistir_liberacao_valor_w = 'S') then
	begin

	select	count(*)
	into STRICT	qt_reg_w
	from	ctb_orc_cen_valor
	where	nr_seq_cenario	= nr_seq_cenario_p
	and	coalesce(dt_liberacao::text, '') = '';

	if (qt_reg_w > 0) then

		/*Existem valores do cenário que não estão liberados!');*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(266407);
	end if;

	end;
end if;

i	:= 0;

open c01;
loop
fetch c01 into
	vet01;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	i				:= i + 1;
	vetor_w[i].cd_estabelecimento	:= vet01.cd_estabelecimento;
	vetor_w[i].nr_seq_metrica	:= vet01.nr_seq_metrica;
	vetor_w[i].nr_seq_mes_ref	:= vet01.nr_seq_mes_ref;
	vetor_w[i].cd_conta_contabil	:= vet01.cd_conta_contabil;
	vetor_w[i].cd_centro_custo	:= vet01.cd_centro_custo;
	vetor_w[i].vl_orcado		:= vet01.vl_orcado;
	vetor_w[i].qt_metrica		:= vet01.qt_metrica;
	vetor_w[i].vl_ticket_medio	:= vet01.vl_ticket_medio;
	vetor_w[i].ds_observacao	:= vet01.ds_observacao;

	end;
end loop;
close c01;

for i in 1..vetor_w.Count loop
	begin
	cd_estabelecimento_w	:= vetor_w[i].cd_estabelecimento;

	if (ie_zerar_conta_sem_cenario_p = 'S') and (ie_deletar_conta_sem_cenario_p = 'N') then
		begin
		update	ctb_orcamento a
		set	vl_orcado		= 0
		where	a.nr_seq_mes_ref	= vetor_w[i].nr_seq_mes_ref
		and	a.cd_estabelecimento	= vetor_w[i].cd_estabelecimento
		and	a.cd_centro_custo	= vetor_w[i].cd_centro_custo
		and	not exists (	SELECT	1
					from	ctb_orc_cen_valor y
					where	a.nr_seq_mes_ref	= y.nr_seq_mes_ref
					and	y.nr_seq_cenario	= nr_seq_cenario_p
					and	y.cd_centro_custo	= a.cd_centro_custo
					and	y.cd_conta_contabil	= a.cd_conta_contabil);

		end;
	end if;

	if (ie_deletar_conta_sem_cenario_p = 'S') then
		begin
		delete from ctb_orcamento a
		where	a.cd_estabelecimento	= vetor_w[i].cd_estabelecimento
		and	a.cd_centro_custo	= vetor_w[i].cd_centro_custo
		and	not exists (	SELECT	1
					from	ctb_orc_cen_valor y
					where	a.nr_seq_mes_ref	= y.nr_seq_mes_ref
					and	y.nr_seq_cenario	= nr_seq_cenario_p
					and	y.cd_centro_custo	= a.cd_centro_custo
					and	y.cd_conta_contabil	= a.cd_conta_contabil)
		and	a.nr_seq_mes_ref in (	select	y.nr_sequencia
						from	ctb_mes_ref y
						where	y.cd_empresa	= cd_empresa_w
						and	y.dt_referencia between dt_inicio_w and dt_fim_w);
		end;
	end if;

	select	count(*)
	into STRICT	qt_reg_w
	from	ctb_orcamento
	where	cd_estabelecimento	= vetor_w[i].cd_estabelecimento
	and	cd_conta_contabil	= vetor_w[i].cd_conta_contabil
	and	cd_centro_custo		= vetor_w[i].cd_centro_custo
	and	nr_seq_mes_ref		= vetor_w[i].nr_seq_mes_ref;

	nr_sequencia_w	:= null;
	if (qt_reg_w = 0) then

		select	nextval('ctb_orcamento_seq')
		into STRICT	nr_sequencia_w
		;

		insert into ctb_orcamento(
			nr_sequencia,
			nr_seq_mes_ref,
			dt_atualizacao,
			nm_usuario,
			cd_estabelecimento,
			cd_conta_contabil,
			cd_centro_custo,
			qt_metrica_orc,
			vl_ticket_medio_orc,
			vl_orcado,
			vl_original,
			vl_realizado,
			nr_seq_metrica,
			ie_cenario,
			ds_observacao,
			ie_origem_orc)
		values (nr_sequencia_w,
			vetor_w[i].nr_seq_mes_ref,
			clock_timestamp(),
			nm_usuario_p,
			vetor_w[i].cd_estabelecimento,
			vetor_w[i].cd_conta_contabil,
			vetor_w[i].cd_centro_custo,
			vetor_w[i].qt_metrica,
			vetor_w[i].vl_ticket_medio,
			vetor_w[i].vl_orcado,
			vetor_w[i].vl_orcado,
			0,
			vetor_w[i].nr_seq_metrica,
			'S',
			vetor_w[i].ds_observacao,
			'SIS');
	elsif (ie_sobrepor_p = 'S') then

		select	max(nr_sequencia)
		into STRICT	nr_sequencia_w
		from	ctb_orcamento
		where	cd_estabelecimento	= vetor_w[i].cd_estabelecimento
		and	cd_conta_contabil	= vetor_w[i].cd_conta_contabil
		and	cd_centro_custo	= vetor_w[i].cd_centro_custo
		and	nr_seq_mes_ref	= vetor_w[i].nr_seq_mes_ref;


		update	ctb_orcamento
		set	vl_orcado		= vetor_w[i].vl_orcado,
			qt_metrica_orc	= vetor_w[i].qt_metrica,
			vl_ticket_medio_orc	= vetor_w[i].vl_ticket_medio,
			nr_seq_metrica	= vetor_w[i].nr_seq_metrica,
			ie_cenario	= 'S',
			ds_observacao	= vetor_w[i].ds_observacao,
			ie_origem_orc	= 'SIS'
		where	nr_sequencia	= nr_sequencia_w;


	end if;

	select	count(*)
	into STRICT	qt_reg_w
	from	ctb_orc_cen_valor_linear
	where	nr_seq_cenario	= nr_seq_cenario_p
	and	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_conta_contabil	= vetor_w[i].cd_conta_contabil
	and	cd_centro_custo	= vetor_w[i].cd_centro_custo;

	if (qt_reg_w > 0) and (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		CALL ctb_gerar_orc_detalhe(nr_seq_cenario_p, nr_sequencia_w, nm_usuario_p);
	end if;

	end;
end loop;

update	ctb_orc_cenario
set	dt_geracao_orc	= clock_timestamp()
where	nr_sequencia	= nr_seq_cenario_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_cen_gerar_orcamento ( cd_estabelecimento_p bigint, nr_seq_cenario_p bigint, nr_seq_mes_inic_p bigint, nr_seq_mes_fim_p bigint, ie_sobrepor_p text, ie_zerar_conta_sem_cenario_p text, ie_deletar_conta_sem_cenario_p text, nm_usuario_p text) FROM PUBLIC;

