-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_criar_guias_schlote ( nr_seq_protocolo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


DT_EMISSAO_w			timestamp;
nr_seq_segurado_w		bigint;
CD_GUIA_w			varchar(30);
IE_TIPO_GUIA_w			varchar(10);
nr_seq_plano_w			bigint;
qt_registros_w			bigint;
cd_medico_w			varchar(10);
nr_seq_prestador_w		bigint;
nr_crm_w			varchar(20);
ie_carater_internacao_w		varchar(20);
sg_conselho_exec_imp_w		varchar(20);
NR_SEQ_CONSELHO_w		bigint;
ds_indicacao_clinica_w		varchar(255);
nr_seq_clinica_w		bigint;
ie_regime_internacao_w		varchar(10);
NR_SEQ_TIPO_ACOMODACAO_w	bigint;
NR_SEQ_TIPO_ACOMODACAO_aux_w	bigint;
nr_seq_conta_w			bigint;
nr_seq_guia_plano_w		bigint;
NR_SEQ_CONGENERE_w		bigint;
CD_GUIA_REFERENCIA_w		pls_conta.CD_GUIA_REFERENCIA%type;
CD_GUIA_PRESTADOR_w		pls_conta.CD_GUIA_PRESTADOR%type;
------------------------------------------------------------------------------------------
ie_tipo_doenca_w		varchar(1);
ie_indicacao_acidente_w		varchar(1);
cd_doenca_w			varchar(10);
ds_diagnostico_w		varchar(2000);
------------------------------------------------------------------------------------------
ie_origem_proced_w		integer;
cd_procedimento_w		bigint;
qt_procedimento_imp_w		bigint;
------------------------------------------------------------------------------------------
nr_seq_material_w		bigint;
qt_material_imp_w		bigint;

C01 CURSOR FOR
	SELECT	b.nr_seq_segurado,
		coalesce(b.CD_GUIA_imp,b.cd_guia),
		add_months(coalesce(b.DT_EMISSAO,b.DT_EMISSAO_imp),-1),
		a.nr_seq_plano,
		b.nr_seq_prestador_exec,
		coalesce(b.nr_crm_solic_imp,nr_crm_exec_imp),
		coalesce(b.ie_carater_internacao,ie_carater_internacao_imp),
		coalesce(b.sg_conselho_solic_imp,sg_conselho_exec_imp),
		b.ds_indicacao_clinica,
		coalesce(b.nr_seq_clinica,b.nr_seq_clinica_imp),
		coalesce(b.ie_regime_internacao,b.ie_regime_internacao_imp),
		coalesce(b.cd_tipo_acomodacao_imp,b.NR_SEQ_TIPO_ACOMODACAO),
		CASE WHEN b.IE_TIPO_GUIA=6 THEN 1 WHEN b.IE_TIPO_GUIA=5 THEN 1 WHEN b.IE_TIPO_GUIA=4 THEN 2  ELSE b.IE_TIPO_GUIA END ,
		b.nr_sequencia,
		c.NR_SEQ_CONGENERE,
		b.CD_GUIA_REFERENCIA,
		b.CD_GUIA_PRESTADOR
	from	pls_conta		b,
		pls_segurado		a,
		pls_protocolo_conta	c
	where	b.nr_seq_segurado	= a.nr_sequencia
	and	b.nr_seq_protocolo	= c.nr_sequencia
	and	c.nr_sequencia		 = nr_seq_protocolo_p;

C02 CURSOR FOR
	SELECT	IE_TIPO_DOENCA,
		IE_INDICACAO_ACIDENTE,
		CD_DOENCA,
		DS_DIAGNOSTICO
	from	PLS_DIAGNOSTICO_CONTA
	where	nr_seq_conta	= nr_seq_conta_w;

C03 CURSOR FOR
	SELECT	IE_ORIGEM_PROCED,
		CD_PROCEDIMENTO,
		sum(qt_procedimento_imp)
	from	PLS_CONTA_PROC
	where	nr_seq_conta	= nr_seq_conta_w
	and	(CD_PROCEDIMENTO IS NOT NULL AND CD_PROCEDIMENTO::text <> '')
	group by IE_ORIGEM_PROCED,
		CD_PROCEDIMENTO;

C04 CURSOR FOR
	SELECT	NR_SEQ_MATERIAL,
		sum(qt_material_imp)
	from	pls_conta_mat
	where	nr_seq_conta	= nr_seq_conta_w
	AND	(NR_SEQ_MATERIAL IS NOT NULL AND NR_SEQ_MATERIAL::text <> '')
	group by NR_SEQ_MATERIAL;


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_segurado_w,
	CD_GUIA_w,
	DT_EMISSAO_w,
	nr_seq_plano_w,
	nr_seq_prestador_w,
	nr_crm_w,
	ie_carater_internacao_w,
	sg_conselho_exec_imp_w,
	ds_indicacao_clinica_w,
	nr_seq_clinica_w,
	ie_regime_internacao_w,
	NR_SEQ_TIPO_ACOMODACAO_w,
	IE_TIPO_GUIA_w,
	nr_seq_conta_w,
	NR_SEQ_CONGENERE_w,
	CD_GUIA_REFERENCIA_w,
	CD_GUIA_PRESTADOR_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	count(1)
	into STRICT	qt_registros_w
	from	pls_guia_plano
	where	cd_guia	= CD_GUIA_w;
	CALL wheb_usuario_pck.set_ie_executar_trigger('N');
	if (qt_registros_w = 0) then

		select	max(cd_pessoa_fisica)
		into STRICT	cd_medico_w
		from	medico
		where	nr_crm		= nr_crm_w
		and	ie_situacao <> 'I';

		select	max(nr_sequencia)
		into STRICT	NR_SEQ_CONSELHO_w
		from	conselho_profissional
		where	sg_conselho	= sg_conselho_exec_imp_w;

		select	nextval('pls_guia_plano_seq')
		into STRICT	nr_seq_guia_plano_w
		;

		NR_SEQ_TIPO_ACOMODACAO_aux_w	:= null;

		if (nr_seq_tipo_acomodacao_w IS NOT NULL AND nr_seq_tipo_acomodacao_w::text <> '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_tipo_acomodacao_aux_w
			from	pls_tipo_acomodacao
			where	cd_tiss	= nr_seq_tipo_acomodacao_w;
		end if;

		insert into pls_guia_plano(	nr_sequencia, dt_atualizacao, nm_usuario,dt_atualizacao_nrec, nm_usuario_nrec,
				nr_seq_segurado,cd_guia, ie_tipo_guia, ie_situacao,cd_estabelecimento,
				ie_tipo_processo, ie_status,dt_solicitacao, nr_seq_plano, ie_estagio,
				dt_cancelamento, dt_autorizacao, cd_medico_solicitante, nr_seq_prestador,ie_carater_internacao,
				cd_guia_principal, nr_seq_conselho, dt_emissao, nr_seq_uni_exec,ie_tipo_atend_tiss,
				nr_seq_motivo_cancel, nr_seq_motivo_lib, ds_indicacao_clinica, ds_observacao, nr_seq_guia_principal,
				nm_usuario_atendimento, nr_seq_atend_pls, nr_seq_evento_atend,nm_usuario_solic, ie_origem_solic,
				dt_duplicacao_guia,cd_guia_manual,nr_seq_clinica,ie_regime_internacao,nr_seq_tipo_acomodacao,
				qt_dia_solicitado,CD_GUIA_PRESTADOR)
		values (	nr_seq_guia_plano_w,clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				nr_seq_segurado_w,CD_GUIA_w,IE_TIPO_GUIA_w,'S',cd_estabelecimento_p,
				'M','1',DT_EMISSAO_w,nr_seq_plano_w,6,
				null,DT_EMISSAO_w,cd_medico_w,nr_seq_prestador_w,ie_carater_internacao_w,
				CD_GUIA_REFERENCIA_w,NR_SEQ_CONSELHO_w,DT_EMISSAO_w,NR_SEQ_CONGENERE_w,'',
				null,null,ds_indicacao_clinica_w,'CRIADO PELA PROCEDURE DO SCHLOTE'
,null,
				nm_usuario_p,null,null,nm_usuario_p,'M',
				null,'',nr_seq_clinica_w,ie_regime_internacao_w,nr_seq_tipo_acomodacao_aux_w,
				90,CD_GUIA_PRESTADOR_w);
		open c02;
		loop
		fetch c02 into
			ie_tipo_doenca_w,
			ie_indicacao_acidente_w,
			cd_doenca_w,
			ds_diagnostico_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

			insert into PLS_DIAGNOSTICO(	nr_sequencia, dt_atualizacao, nm_usuario,dt_atualizacao_nrec, nm_usuario_nrec,
					NR_SEQ_GUIA,IE_TIPO_DOENCA,IE_INDICACAO_ACIDENTE,CD_DOENCA,DS_DIAGNOSTICO)
			values (	nextval('pls_diagnostico_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					nr_seq_guia_plano_w,ie_tipo_doenca_w,ie_indicacao_acidente_w,cd_doenca_w,ds_diagnostico_w);

			end;
		end loop;
		close c02;

		open c03;
		loop
		fetch c03 into
			ie_origem_proced_w,
			cd_procedimento_w,
			qt_procedimento_imp_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin

			if (qt_procedimento_imp_w > 999) then
				qt_procedimento_imp_w	:= 999;
			end if;

			insert into PLS_GUIA_PLANO_PROC(	nr_sequencia, dt_atualizacao, nm_usuario,dt_atualizacao_nrec, nm_usuario_nrec,
					NR_SEQ_GUIA,IE_ORIGEM_PROCED,CD_PROCEDIMENTO,QT_SOLICITADA,QT_AUTORIZADA,
					IE_STATUS,DT_LIBERACAO,NM_USUARIO_LIBERACAO)
			values (	nextval('pls_guia_plano_proc_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					nr_seq_guia_plano_w,ie_origem_proced_w,cd_procedimento_w,qt_procedimento_imp_w,qt_procedimento_imp_w,
					'S',DT_EMISSAO_w,nm_usuario_p);
			end;
		end loop;
		close c03;


		open c04;
		loop
		fetch c04 into
			nr_seq_material_w,
			qt_material_imp_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			begin

			if (qt_material_imp_w > 999) then
				qt_material_imp_w	:= 999;
			end if;

			insert into pls_guia_plano_mat(	nr_sequencia, dt_atualizacao, nm_usuario,dt_atualizacao_nrec, nm_usuario_nrec,
					nr_seq_guia,qt_solicitada, qt_autorizada, ie_status,dt_liberacao,
					nm_usuario_liberacao, nr_seq_motivo_exc, nr_seq_material,
					qt_utilizado,ie_origem_inclusao)
			values (	nextval('pls_guia_plano_mat_seq'), clock_timestamp(), nm_usuario_p,clock_timestamp(), nm_usuario_p,
					nr_seq_guia_plano_w,qt_material_imp_w, qt_material_imp_w, 'S',clock_timestamp(),
					nm_usuario_p, null, nr_seq_material_w,
					qt_material_imp_w, 'T');
			end;
		end loop;
		close c04;

	commit;
	end if;
	end;
end loop;
close C01;
CALL wheb_usuario_pck.set_ie_executar_trigger('S');

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_criar_guias_schlote ( nr_seq_protocolo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

