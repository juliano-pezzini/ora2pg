-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_evento_paciente_trigger (nr_seq_evento_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, nr_seq_laudo_p bigint, nm_usuario_p text, ds_informacao_adic_p text default null, dt_referencia_p timestamp default clock_timestamp(), qt_ponto_must_p bigint default null, cd_tipo_alergia_p bigint default null) AS $body$
DECLARE


ie_forma_ev_w		varchar(15);
ie_pessoa_destino_w	varchar(15);
cd_pf_destino_w		varchar(10);
ds_mensagem_w		varchar(4000);
ds_titulo_w		varchar(255);
cd_pessoa_destino_w	varchar(10);
nr_sequencia_w		bigint;
ds_maquina_w		varchar(80);
nm_paciente_w		varchar(60);
ds_unidade_w		varchar(60);
ds_setor_atendimento_w	varchar(60);
ie_usuario_aceite_w	varchar(1);
qt_corresp_w		integer;
cd_setor_atendimento_w	integer;
cd_perfil_w		integer;
cd_pessoa_regra_w	varchar(10);
nr_ramal_w		varchar(10);
nr_telefone_w		varchar(10);
cd_convenio_w		bigint;
nm_usuario_destino_w	varchar(15);
cd_setor_atend_pac_w	integer;
ds_cid_w		varchar(240);
cd_cid_w		varchar(10);
nm_paciente_abrev_w	varchar(60);
ds_convenio_w		varchar(255);
ie_inserir_w		varchar(2);
dt_inicio_evento_w	timestamp;
dt_fim_evento_w		timestamp;
ie_dia_semana_w		varchar(1);
qt_pontos_must_w	bigint;
ds_pontos_must_w	varchar(200);
dt_nascimento_w		varchar(200);
ds_nome_usuario_w	varchar(1000);
qt_pontos_mst_w		bigint;
ds_pontos_mst_w		varchar(200);
dt_alta_prevista_w	timestamp;
ds_obs_prev_alta_w	varchar(255);
ds_exame_solicitacao_w  varchar(500);
ds_proc_solicitacao_w   varchar(500);
qt_exame_solicitacao_w  varchar(500);
ds_exame_sem_cad_solic_w varchar(500);
nr_Seq_exame_w            bigint;
nr_seq_grupo_usuario_w	bigint;
cd_especialidade_dest_prof_w	integer;
cd_agente_causador_w	double precision;
sql_errm_w			varchar(255);
ds_email_destino_w		varchar(100);
ds_email_fixo_w		varchar(100);
--ds_email_comercial_w		compl_pessoa_fisica.ds_email%type;
ds_email_paciente_w		varchar(100);
dt_alta_estorno_w		timestamp;
nm_usuario_estorno_w		varchar(15);
ds_plano_w				varchar(255);
ds_categoria_w			varchar(255);
ie_excecao_alerta_pessoa_w	varchar(1);
ds_procedencia_w		varchar(255);
ds_motivo_alta_w		varchar(80);
cd_estabelecimento_w		smallint;
ds_estab_atend_w		varchar(50);

C01 CURSOR FOR
	SELECT	ie_forma_ev,
		ie_pessoa_destino,
		cd_pf_destino,
		coalesce(ie_usuario_aceite,'N'),
		cd_setor_atendimento,
		cd_perfil,
		nr_seq_grupo_usuario,
		ds_email_fixo
	from	ev_evento_regra_dest
	where	nr_seq_evento	= nr_seq_evento_p
	and	coalesce(cd_convenio, coalesce(cd_convenio_w,0))	= coalesce(cd_convenio_w,0)
	and	coalesce(cd_setor_atend_pac, coalesce(cd_setor_atend_pac_w,0))	= coalesce(cd_setor_atend_pac_w,0)		
	order by ie_forma_ev;

C02 CURSOR FOR
	SELECT	obter_dados_usuario_opcao(a.nm_usuario,'C')
	from	usuario_setor_v a,
		usuario b
	where	a.nm_usuario = b.nm_usuario
	and	b.ie_situacao = 'A'
	and	a.cd_setor_atendimento = cd_setor_atendimento_w
	and	ie_forma_ev_w in (2,3)
	and	(obter_dados_usuario_opcao(a.nm_usuario,'C') IS NOT NULL AND (obter_dados_usuario_opcao(a.nm_usuario,'C'))::text <> '');

C03 CURSOR FOR
	SELECT	obter_dados_usuario_opcao(a.nm_usuario,'C'),
			a.nm_usuario
	from	usuario_perfil a,
		usuario b
	where	a.nm_usuario = b.nm_usuario
	and	b.ie_situacao = 'A'
	and	a.cd_perfil = cd_perfil_w
	and	ie_forma_ev_w in (2,3)
	and	(obter_dados_usuario_opcao(a.nm_usuario,'C') IS NOT NULL AND (obter_dados_usuario_opcao(a.nm_usuario,'C'))::text <> '');

	
c05 CURSOR FOR
	SELECT	x.cd_medico
	from	prescr_medica x
	where	x.nr_atendimento	= nr_atendimento_p
	and	x.dt_prescricao  between clock_timestamp() - interval '36 days'/24 and clock_timestamp()
	
union

	SELECT	x.cd_medico
	from	evolucao_paciente x
	where	x.nr_atendimento	= nr_atendimento_p
	and	x.dt_evolucao  between clock_timestamp() - interval '36 days'/24 and clock_timestamp();	

C09 CURSOR FOR
	SELECT	obter_dados_usuario_opcao(b.nm_usuario_grupo,'C')
	from	usuario_grupo b
	where	b.ie_situacao = 'A'
	and	ie_forma_ev_w in (2,3)
	and	(obter_dados_usuario_opcao(b.nm_usuario_grupo,'C') IS NOT NULL AND (obter_dados_usuario_opcao(b.nm_usuario_grupo,'C'))::text <> '')
	and	b.nr_seq_grupo = nr_seq_grupo_usuario_w;


BEGIN
select	substr(obter_inf_sessao(0),1,80)
into STRICT	ds_maquina_w
;


select	coalesce(max(obter_convenio_atendimento(nr_atendimento_p)), 0)
into STRICT	cd_convenio_w
;

if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') and (cd_convenio_w > 0) then
	begin
	ds_convenio_w	:= substr(obter_desc_convenio(cd_convenio_w),1,255);
	end;
end if;

select	ds_titulo,
	ds_mensagem
into STRICT	ds_titulo_w,
	ds_mensagem_w
from	ev_evento
where	nr_sequencia	= nr_seq_evento_p;

select	substr(obter_cid_atendimento(nr_atendimento_p, 'P'),1,10),
	substr(obter_desc_cid_doenca(obter_cid_atendimento(nr_atendimento_p, 'P')),1,240)
into STRICT	cd_cid_w,
	ds_cid_w
;

select	substr(obter_nome_pf(cd_pessoa_fisica_p),1,60),
	substr(abrevia_nome_pf(cd_pessoa_fisica_p,'M'),1,60),
	substr(obter_unidade_atendimento(nr_atendimento_p,'A','U'),1,60),
	substr(obter_unidade_atendimento(nr_atendimento_p,'A','RA'),1,10),
	substr(obter_unidade_atendimento(nr_atendimento_p,'A','TL'),1,10),
	substr(obter_unidade_atendimento(nr_atendimento_p,'A','S'),1,60),
	substr(obter_unidade_atendimento(nr_atendimento_p,'A','CS'),1,60),	
	PKG_DATE_FORMATERS.to_varchar(obter_dados_pf_dt(cd_pessoa_fisica_p, 'DN'), 'shortDate', wheb_usuario_pck.get_cd_estabelecimento, nm_usuario_p)
into STRICT	nm_paciente_w,
	nm_paciente_abrev_w,
	ds_unidade_w,
	nr_ramal_w,
	nr_telefone_w,
	ds_setor_atendimento_w,
	cd_setor_atend_pac_w,
	dt_nascimento_w
;



ds_nome_usuario_w	:= Obter_Nome_Usuario(nm_usuario_p)||' ('||nm_usuario_p||')';

select	max(dt_previsto_alta),
		max(ds_obs_prev_alta),
		substr(max(obter_desc_procedencia(cd_procedencia)),1,255),
		substr(max(Obter_Desc_Motivo_Alta(cd_motivo_alta)),1,80),
		max(cd_estabelecimento)
into STRICT	dt_alta_prevista_w,
		ds_obs_prev_alta_w,
		ds_procedencia_w,
		ds_motivo_alta_w,
		cd_estabelecimento_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_p;

select	nm_fantasia_estab
into STRICT	ds_estab_atend_w
from	estabelecimento
where	cd_estabelecimento = cd_estabelecimento_w;

select   max(c.nr_Sequencia)
into STRICT     nr_Seq_exame_w
from	   pedido_exame_externo c
where    c.nr_Atendimento = nr_atendimento_p;

select	substr(obter_dados_categ_conv(nr_atendimento_p,'DP'),1,255),
		substr(obter_dados_categ_conv(nr_atendimento_p,'DC'),1,255)
into STRICT	ds_plano_w,
		ds_categoria_w
;


if (nr_Seq_exame_w IS NOT NULL AND nr_Seq_exame_w::text <> '') then
   select	max(substr(Obter_Med_Exame_Externo(a.nr_sequencia),1,255)),
            max(substr(obter_descricao_procedimento(cd_procedimento,ie_origem_proced),1,240)),
            max(qt_exame),
            max(ds_exame_sem_cad)
   into STRICT     ds_exame_solicitacao_w,
            ds_proc_solicitacao_w,
            qt_exame_solicitacao_w,
            ds_exame_sem_cad_solic_w
   from  	pedido_exame_externo_item a
   where    a.nr_seq_pedido = nr_Seq_exame_w;

end if;

select	coalesce(MAX(a.CD_ESPECIALIDADE),'')
into STRICT	cd_especialidade_dest_prof_w
from	parecer_medico_req a
where	a.nr_parecer = (SELECT max(b.nr_parecer)
                        from   parecer_medico_req b
                        where  b.nr_atendimento = nr_atendimento_p);				

select	max(dt_alta_estorno),
	max(nm_usuario)
into STRICT	dt_alta_estorno_w,
	nm_usuario_estorno_w
from	atend_alta_hist
where	nr_atendimento = nr_atendimento_p
and	ie_alta_estorno = 'E'
and	dt_alta_estorno = (	SELECT	max(dt_alta_estorno)
				from	atend_alta_hist
				where	nr_atendimento = nr_atendimento_p
				and	ie_alta_estorno = 'E');
			
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@paciente',nm_paciente_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@nascimento',dt_nascimento_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@pac_abreviado',nm_paciente_abrev_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@quarto',ds_unidade_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@setor',ds_setor_atendimento_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@atendimento',nr_atendimento_p),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ramal',nr_ramal_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@telefone',nr_telefone_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@convenio',cd_convenio_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@plano',ds_plano_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@categoria',ds_categoria_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@cd_cid',cd_cid_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_cid',ds_cid_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@nomeusuario',ds_nome_usuario_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_inf_adic',ds_informacao_adic_p),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_convenio',ds_convenio_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_obs_prev_alta',ds_obs_prev_alta_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@dt_alta_prevista',PKG_DATE_FORMATERS.to_varchar(dt_alta_prevista_w, 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,4000);
ds_mensagem_w	:= substr(replace_macro_long(ds_mensagem_w,'@usuario_estorno_alta',nm_usuario_estorno_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@dt_estorno_alta',dt_alta_estorno_w),1,4000);
if (cd_tipo_alergia_p IS NOT NULL AND cd_tipo_alergia_p::text <> '') then
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_agente_causador',obter_desc_alergeno(cd_tipo_alergia_p)),1,4000);
end if;
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@data_hora_atual', PKG_DATE_FORMATERS.to_varchar(clock_timestamp(), 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@data_atual',PKG_DATE_FORMATERS.to_varchar(clock_timestamp(), 'shortDate', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,4000);


if (qt_ponto_must_p IS NOT NULL AND qt_ponto_must_p::text <> '') then
	qt_pontos_must_w	:= qt_ponto_must_p;
	ds_pontos_must_w	:= obter_result_must(qt_ponto_must_p);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@pontosmust', qt_pontos_must_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@descpontosmust', ds_pontos_must_w),1,4000);
	ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@descpontosmust', ds_pontos_must_w),1,255);
end if;
if (qt_ponto_must_p IS NOT NULL AND qt_ponto_must_p::text <> '') then
	qt_pontos_mst_w    := qt_ponto_must_p;
	ds_pontos_mst_w    := obter_desc_result_mst(qt_ponto_must_p);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@pontos_mst',qt_pontos_mst_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@desc_mst',ds_pontos_mst_w),1,4000);
end if;
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_exame_solicitacao', ds_exame_solicitacao_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_proc_solicitacao',  ds_proc_solicitacao_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@qt_exame_solicitacao', qt_exame_solicitacao_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_exame_sem_cad_solic',ds_exame_sem_cad_solic_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@especialidade_dest_prof',Obter_Desc_Espec_medica(cd_especialidade_dest_prof_w)),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@procedencia',ds_procedencia_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_motivo_alta',ds_motivo_alta_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_estab_atend',ds_estab_atend_w),1,4000);

ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@atendimento',nr_atendimento_p),1,255);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@usuario_estorno_alta',nm_usuario_estorno_w),1,255);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@dt_estorno_alta',dt_alta_estorno_w),1,255);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@procedencia',ds_procedencia_w),1,255);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@ds_motivo_alta',ds_motivo_alta_w),1,255);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@ds_estab_atend',ds_estab_atend_w),1,255);

select	pkg_date_utils.get_DateTime(dt_referencia_p, coalesce(coalesce(hr_inicial,dt_referencia_p), PKG_DATE_UTILS.GET_TIME('00:00:00')), 0),
	pkg_date_utils.get_DateTime(dt_referencia_p, coalesce(coalesce(hr_final,dt_referencia_p), PKG_DATE_UTILS.GET_TIME('00:00:00')), 0),
	ie_dia_semana
into STRICT	dt_inicio_evento_w,
	dt_fim_evento_w,
	ie_dia_semana_w
from 	ev_evento
where	nr_sequencia = nr_seq_evento_p;	

select	CASE WHEN count(*)='0' THEN 'N'  ELSE 'S' END
into STRICT	ie_inserir_w
from	ev_evento a
where	dt_referencia_p between dt_inicio_evento_w and dt_fim_evento_w
and	a.nr_sequencia = nr_seq_evento_p
and	a.ie_situacao = 'A'
and	((coalesce(ie_dia_semana_w,Obter_Cod_Dia_Semana(dt_referencia_p)) = Obter_Cod_Dia_Semana(dt_referencia_p)) 
		or ((ie_dia_semana_w = '9') and (Obter_Cod_Dia_Semana(dt_referencia_p) between 2 and 6))
		or ((ie_dia_semana_w = '0') and (CASE WHEN obter_se_feriado(wheb_usuario_pck.get_cd_estabelecimento, dt_referencia_p)=0 THEN 'N'  ELSE 'S' END  = 'S')));
		
if (ie_inserir_w = 'S') then

	select	nextval('ev_evento_paciente_seq')
	into STRICT	nr_sequencia_w
	;

	insert into ev_evento_paciente(
		nr_sequencia,
		nr_seq_evento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_pessoa_fisica,
		nr_atendimento,
		ds_titulo,
		ds_mensagem,
		ie_status,
		ds_maquina,
		dt_evento,
		dt_liberacao,
		ie_comunic_pendente)
	values (	nr_sequencia_w,
		nr_seq_evento_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_pessoa_fisica_p,
		nr_atendimento_p,
		ds_titulo_w,
		ds_mensagem_w,
		'G',
		ds_maquina_w,
		clock_timestamp(),
		clock_timestamp(),
		'S');

	open C01;
	loop
	fetch C01 into
		ie_forma_ev_w,
		ie_pessoa_destino_w,
		cd_pf_destino_w,
		ie_usuario_aceite_w,
		cd_setor_atendimento_w,
		cd_perfil_w,
		nr_seq_grupo_usuario_w,
		ds_email_fixo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		cd_pessoa_destino_w	:= null;
		qt_corresp_w	:= 1;
		if (ie_pessoa_destino_w = '1') then /* Medico do atendimento */
			begin
			select	max(cd_medico_atendimento)
			into STRICT	cd_pessoa_destino_w
			from	atendimento_paciente
			where	nr_atendimento	= nr_atendimento_p;
			end;
		elsif (ie_pessoa_destino_w = '2') then /*Medico responsavel pelo paciente*/
			begin
			select	max(cd_medico_resp)
			into STRICT	cd_pessoa_destino_w
			from	atendimento_paciente
			where	nr_atendimento	= nr_atendimento_p;
			end;
		elsif (ie_pessoa_destino_w = '3') then /*Medico laudante*/
			begin
			select	max(cd_medico_resp)
			into STRICT	cd_pessoa_destino_w
			from	laudo_paciente
			where	nr_sequencia	= nr_seq_laudo_p;
			end;
		elsif (ie_pessoa_destino_w = '4') then /*Medico referido*/
			begin
			select	max(cd_medico_referido)
			into STRICT	cd_pessoa_destino_w
			from	atendimento_paciente
			where	nr_atendimento	= nr_atendimento_p;
			end;
		elsif (ie_pessoa_destino_w = '5') or (ie_pessoa_destino_w = '12') then /*Pessoa fixa ou Usuario fixo*/
			cd_pessoa_destino_w	:= cd_pf_destino_w;
		elsif (ie_pessoa_destino_w = '28') then /*Usuario Logado*/
			cd_pessoa_destino_w	:= Obter_Pf_Usuario(nm_usuario_p,'C');
		elsif (ie_pessoa_destino_w	= '14') then
			begin
			open C05;
			loop
			fetch C05 into	
				cd_pessoa_destino_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin
				qt_corresp_w	:= 1;

				if (ie_usuario_aceite_w = 'S') then
					select	count(*)
					into STRICT	qt_corresp_w
					from	pessoa_fisica_corresp
					where	cd_pessoa_fisica	= cd_pessoa_destino_w
					and	ie_tipo_corresp		= CASE WHEN ie_forma_ev_w='1' THEN 'MCel' WHEN ie_forma_ev_w='3' THEN 'CI' WHEN ie_forma_ev_w='4' THEN 'Email' END
					and	ie_tipo_doc		= 'AE';
				end if;


				if (qt_corresp_w > 0) then
				ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_destino_w, ie_forma_ev_w);
				
					if (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') then
						insert into ev_evento_pac_destino(
							nr_sequencia,
							nr_seq_ev_pac,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							cd_pessoa_fisica,
							ie_forma_ev,
							ie_status,
							dt_ciencia,
							ie_pessoa_destino,
							dt_evento)
						values (	nextval('ev_evento_pac_destino_seq'),
							nr_sequencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							cd_pessoa_destino_w,
							ie_forma_ev_w,
							'G',
							null,
							ie_pessoa_destino_w,
							clock_timestamp());
						end if;
					end if;
				end;
			end loop;
			close C05;
			end;
		elsif (ie_pessoa_destino_w = '19') then /* Paciente */
			begin
			select	max(cd_pessoa_fisica)
			into STRICT	cd_pessoa_destino_w
			from	atendimento_paciente
			where	nr_atendimento = nr_atendimento_p;

			
			qt_corresp_w	:= 1;

			if (ie_usuario_aceite_w = 'S') then
					select	count(*)
					into STRICT	qt_corresp_w
					from	pessoa_fisica_corresp
					where	cd_pessoa_fisica	= cd_pessoa_destino_w
					and	ie_tipo_corresp		= CASE WHEN ie_forma_ev_w='1' THEN 'MCel' WHEN ie_forma_ev_w='3' THEN 'CI' WHEN ie_forma_ev_w='4' THEN 'Email' END
					and	ie_tipo_doc		= 'AE';
			end if;


			if (qt_corresp_w > 0) then				
			
				select	substr(obter_email_pf(cd_pessoa_destino_w),1,100)
				into STRICT	ds_email_paciente_w
				;
				
			end if;
			end;
			--cd_pessoa_destino_w	:= null;

		/* comentado pois o envio de email foi feito via codigo fonte.
		elsif 	(ie_pessoa_destino_w = '27') then
			begin
			select	max(cd_pessoa_fisica)
			into	cd_pessoa_destino_w
			from	atendimento_paciente
			where	nr_atendimento = nr_atendimento_p;
			
			if (cd_pessoa_destino_w is not null) then
				select 	max(ds_email)
				into	ds_email_comercial_w
				from	compl_pessoa_fisica
				where 	cd_pessoa_fisica = cd_pessoa_destino_w
				and	ie_tipo_complemento = 2;
			end if;
			end;*/
		end if;

		if (ie_usuario_aceite_w = 'S') and (cd_pessoa_destino_w IS NOT NULL AND cd_pessoa_destino_w::text <> '') and (ie_forma_ev_w = '1') then
			begin
			select	count(*)
			into STRICT	qt_corresp_w
			from	pessoa_fisica_corresp
			where	cd_pessoa_fisica	= cd_pessoa_destino_w
			and	ie_tipo_corresp		= 'MCel'
			and	ie_tipo_doc		= 'AE';
			end;
		elsif (ie_usuario_aceite_w = 'S') and (cd_pessoa_destino_w IS NOT NULL AND cd_pessoa_destino_w::text <> '') and (ie_forma_ev_w = '3') then
			begin
			select	count(*)
			into STRICT	qt_corresp_w
			from	pessoa_fisica_corresp
			where	cd_pessoa_fisica	= cd_pessoa_destino_w
			and	ie_tipo_corresp		= 'CI'
			and	ie_tipo_doc		= 'AE';
			end;
		elsif (ie_usuario_aceite_w = 'S') and (cd_pessoa_destino_w IS NOT NULL AND cd_pessoa_destino_w::text <> '') and (ie_forma_ev_w = '4') then
			begin
			select	count(*)
			into STRICT	qt_corresp_w
			from	pessoa_fisica_corresp
			where	cd_pessoa_fisica	= cd_pessoa_destino_w
			and	ie_tipo_corresp		= 'Email'
			and	ie_tipo_doc		= 'AE';
			end;
		end if;
		
		ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_destino_w, ie_forma_ev_w);					
					
		if (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') then
		
			if	((cd_pessoa_destino_w IS NOT NULL AND cd_pessoa_destino_w::text <> '') and (qt_corresp_w > 0) and (ie_pessoa_destino_w not in ('19','22')))
					or ((ie_pessoa_destino_w = '22') /*E-mail fixo*/
 and (coalesce(cd_pessoa_destino_w::text, '') = '') and (ds_email_fixo_w IS NOT NULL AND ds_email_fixo_w::text <> ''))
					or (((ie_forma_ev_w = '4') and (ie_pessoa_destino_w = '19') /*E-mail paciente*/ and (coalesce(ds_email_fixo_w::text, '') = '') and (ds_email_paciente_w IS NOT NULL AND ds_email_paciente_w::text <> '')) or (ie_forma_ev_w <> '4'))then
				begin
				
				if (ie_pessoa_destino_w = '22') then
					ds_email_destino_w := ds_email_fixo_w;
				elsif (ie_pessoa_destino_w = '19') then
					ds_email_destino_w := ds_email_paciente_w;
				/*elsif (ie_pessoa_destino_w = '27') then
					ds_email_destino_w := ds_email_comercial_w;*/
				end if;

				insert into ev_evento_pac_destino(
					nr_sequencia,
					nr_seq_ev_pac,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_pessoa_fisica,
					ie_forma_ev,
					ie_status,
					dt_ciencia,
					ie_pessoa_destino,
					dt_evento,
					ds_email_fixo)
				values (	nextval('ev_evento_pac_destino_seq'),
					nr_sequencia_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_pessoa_destino_w,
					ie_forma_ev_w,
					'G',
					null,
					ie_pessoa_destino_w,
					clock_timestamp(),
					coalesce(ds_email_destino_w,''));
					
				end;
			
			end if;
			
		end if;

		open C02;
		loop
		fetch C02 into
			cd_pessoa_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			if (cd_pessoa_regra_w IS NOT NULL AND cd_pessoa_regra_w::text <> '') then
			
				ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_regra_w, ie_forma_ev_w);
				if (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') then	
			
				insert into ev_evento_pac_destino(
					nr_sequencia,
					nr_seq_ev_pac,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_pessoa_fisica,
					ie_forma_ev,
					ie_status,
					dt_ciencia,
					ie_pessoa_destino,
					dt_evento)
				values (	nextval('ev_evento_pac_destino_seq'),
					nr_sequencia_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_pessoa_regra_w,
					ie_forma_ev_w,
					'G',
					null,
					ie_pessoa_destino_w,
					clock_timestamp());
				end if;
			end if;
			end;
		end loop;
		close C02;

		open C03;
		loop
		fetch C03 into
			cd_pessoa_regra_w,
			nm_usuario_destino_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			if (cd_pessoa_regra_w IS NOT NULL AND cd_pessoa_regra_w::text <> '') then
			
				ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_regra_w, ie_forma_ev_w);
				if (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') then
				
				insert into ev_evento_pac_destino(
					nr_sequencia,
					nr_seq_ev_pac,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_pessoa_fisica,
					ie_forma_ev,
					ie_status,
					dt_ciencia,
					nm_usuario_dest,
					ie_pessoa_destino,
					dt_evento)
				values (	nextval('ev_evento_pac_destino_seq'),
					nr_sequencia_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_pessoa_regra_w,
					ie_forma_ev_w,
					'G',
					null,
					nm_usuario_destino_w,
					ie_pessoa_destino_w,
					clock_timestamp());
				end if;
			end if;
			end;
		end loop;
		close C03;

		open C09;
		loop
		fetch C09 into
			cd_pessoa_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C09 */
			begin
			if (cd_pessoa_regra_w IS NOT NULL AND cd_pessoa_regra_w::text <> '') then
			
				ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_regra_w, ie_forma_ev_w);
				if (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') then
			
				insert into ev_evento_pac_destino(
					nr_sequencia,
					nr_seq_ev_pac,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_pessoa_fisica,
					ie_forma_ev,
					ie_status,
					dt_ciencia,
					ie_pessoa_destino,
					dt_evento)
				values (	nextval('ev_evento_pac_destino_seq'),
					nr_sequencia_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_pessoa_regra_w,
					ie_forma_ev_w,
					'G',
					null,
					ie_pessoa_destino_w,
					clock_timestamp());
				end if;
			end if;
			end;
		end loop;
		close C09;
		
		end;
	end loop;
	close C01;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_evento_paciente_trigger (nr_seq_evento_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, nr_seq_laudo_p bigint, nm_usuario_p text, ds_informacao_adic_p text default null, dt_referencia_p timestamp default clock_timestamp(), qt_ponto_must_p bigint default null, cd_tipo_alergia_p bigint default null) FROM PUBLIC;

