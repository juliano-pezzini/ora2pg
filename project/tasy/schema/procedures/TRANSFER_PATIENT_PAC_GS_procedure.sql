-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE transfer_patient_pac_gs ( nr_seq_origem_p bigint, nm_usuario_p text, cd_agenda_p bigint, dt_agenda_p timestamp, ht_inicio_p timestamp, nr_minuto_duracao_p bigint, nr_seq_motivo_p bigint, ds_motivo_p text) AS $body$
DECLARE

		
nr_sequencia_w		agenda_paciente.nr_sequencia%type;
hr_inicio_w		agenda_paciente.hr_inicio%type;
hr_inicio_ww		agenda_paciente.hr_inicio%type;
nr_seconds_w		integer;
ds_retorno_w		varchar(2000);
		

BEGIN

if (nr_seq_origem_p IS NOT NULL AND nr_seq_origem_p::text <> '') and (cd_agenda_p IS NOT NULL AND cd_agenda_p::text <> '') then

   CALL wheb_usuario_pck.set_ie_executar_trigger('N');

   
   select max(nr_sequencia)
   into STRICT	  nr_sequencia_w
   from	  agenda_paciente
   where  dt_agenda = dt_agenda_p
   and	  cd_agenda = cd_agenda_p
   and	  hr_inicio = ht_inicio_p
   and	  ie_status_agenda = 'L';

   
   if (coalesce(nr_sequencia_w::text, '') = '') then
	   select nextval('agenda_paciente_seq')
	   into STRICT nr_sequencia_w
	;
	
	   select max(hr_inicio)
	   into STRICT	  hr_inicio_w
	   from	  agenda_paciente
	   where  dt_agenda = dt_agenda_p
	   and	  cd_agenda = cd_agenda_p
	   and	  hr_inicio = ht_inicio_p
	   and	  ie_status_agenda <> 'L';
	
	   if (hr_inicio_w IS NOT NULL AND hr_inicio_w::text <> '') then
		nr_seconds_w := pkg_date_utils.extract_field('SECOND', ht_inicio_p);
			
		if (nr_seconds_w < 58) then
		    hr_inicio_w := ht_inicio_p + (1/86400);
		else
		    hr_inicio_w := ht_inicio_p - (1/86400);
		end if;
	   else
		hr_inicio_w := ht_inicio_p;
	   end if;
	
	   
	   insert into agenda_paciente(cd_agenda,
		dt_agenda,
		hr_inicio,
		nr_minuto_duracao,
		nm_usuario,
		dt_atualizacao,
		ie_status_agenda,
		ie_ortese_protese,
		ie_cdi,
		ie_uti,
		ie_banco_sangue,
		ie_serv_especial,
		nr_sequencia,
		ie_anestesia,
		ie_equipamento,
		ie_autorizacao,
		ie_video,
		ie_uc,
		ie_lado,
		ie_biopsia,
		ie_congelacao,
		ie_pre_internacao,
		ie_reserva_leito,
		nm_usuario_orig) 
	  values (cd_agenda_p,
		dt_agenda_p,
		hr_inicio_w,
		nr_minuto_duracao_p,
		nm_usuario_p,
		clock_timestamp(),
		'L', 'N', 'N', 'N', 'N', 'N',
		nr_sequencia_w,
		'N','N',
		'N',
		'N',
		'N',
		'N',
		'N',
		'N',
		'N',
		'N',
		nm_usuario_p);
	
		commit;
	    if (wheb_usuario_pck.get_ie_executar_trigger = 'N') then
		CALL wheb_usuario_pck.set_ie_executar_trigger('S');
	    end if;	
    end if;

    CALL generate_consis_transf_cir(nr_seq_origem_p, nr_sequencia_w);	
    CALL Transferir_Agenda_Pac(nr_seq_origem_p, nr_sequencia_w, nm_usuario_p, nr_seq_motivo_p, ds_motivo_p, null, null);
    ds_retorno_w := atualizar_gestao_vaga(nr_seq_origem_p, nm_usuario_p, ds_retorno_w);
    
end if;
				
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE transfer_patient_pac_gs ( nr_seq_origem_p bigint, nm_usuario_p text, cd_agenda_p bigint, dt_agenda_p timestamp, ht_inicio_p timestamp, nr_minuto_duracao_p bigint, nr_seq_motivo_p bigint, ds_motivo_p text) FROM PUBLIC;

