-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_autor_convenio_evento (dt_inicial_p timestamp, dt_final_p timestamp, cd_convenio_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_agenda_w		autor_convenio_evento.nr_seq_agenda%type;

dt_agendamento_w	timestamp;
dt_inclusao_mat_w	timestamp;
dt_cotacao_w		timestamp;
dt_email_w		timestamp;
dt_resposta_conv_w	timestamp;
dt_preinternacao_w	timestamp;
dt_alteracao_w		timestamp;

c01 CURSOR FOR
SELECT	distinct
	nr_seq_agenda
from	agenda_paciente b,
	autor_convenio_evento a
where	a.nr_seq_agenda	= b.nr_sequencia
and	a.dt_atualizacao between dt_inicial_p and trunc(dt_final_p) + 89399/89400
and	coalesce(b.cd_convenio,0) = coalesce(cd_convenio_p,coalesce(b.cd_convenio,0));


BEGIN

delete from w_autor_convenio_evento
where	nm_usuario	= nm_usuario_p;

open c01;
loop
fetch c01 into
	nr_seq_agenda_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	/* Agendamento */

	select	max(dt_atualizacao)
	into STRICT	dt_agendamento_w
	from	autor_convenio_evento
	where	nr_seq_agenda	= nr_seq_agenda_w
	and	ie_evento	= 1;

	/* Inclusao materiais */

	select	max(dt_atualizacao)
	into STRICT	dt_inclusao_mat_w
	from	autor_convenio_evento
	where	nr_seq_agenda	= nr_seq_agenda_w
	and	ie_evento	= 2;

	/* Cotacao */

	select	max(dt_atualizacao)
	into STRICT	dt_cotacao_w
	from	autor_convenio_evento
	where	nr_seq_agenda	= nr_seq_agenda_w
	and	ie_evento	= 3;

	/* Envio e-mail */

	select	max(dt_atualizacao)
	into STRICT	dt_email_w
	from	autor_convenio_evento
	where	nr_seq_agenda	= nr_seq_agenda_w
	and	ie_evento	= 4;

	/* Resposta convenio */

	select	max(dt_atualizacao)
	into STRICT	dt_resposta_conv_w
	from	autor_convenio_evento
	where	nr_seq_agenda	= nr_seq_agenda_w
	and	ie_evento	= 5;

	/* Pre internacao */

	select	max(dt_atualizacao)
	into STRICT	dt_preinternacao_w
	from	autor_convenio_evento
	where	nr_seq_agenda	= nr_seq_agenda_w
	and	ie_evento	= 6;

	/* Alteracao mat */

	select	max(dt_atualizacao)
	into STRICT	dt_alteracao_w
	from	autor_convenio_evento
	where	nr_seq_agenda	= nr_seq_agenda_w
	and	ie_evento	= 7;
	
	if (obter_min_entre_datas(dt_agendamento_w,dt_resposta_conv_w,1) <> 0) then

		insert	into	w_autor_convenio_evento(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_agenda,
			ds_evento,
			qt_minuto,
			ie_ordem)
		values (nextval('w_autor_convenio_evento_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_agenda_w,
			substr(wheb_mensagem_pck.get_texto(310490),1,255),
			obter_min_entre_datas(dt_agendamento_w,dt_resposta_conv_w,1),
			1);
	end if;

	if (obter_min_entre_datas(dt_agendamento_w,dt_inclusao_mat_w,1) <> 0) then

		insert	into	w_autor_convenio_evento(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_agenda,
			ds_evento,
			qt_minuto,
			ie_ordem)
		values (nextval('w_autor_convenio_evento_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_agenda_w,
			substr(wheb_mensagem_pck.get_texto(310491),1,255),
			obter_min_entre_datas(dt_agendamento_w,dt_inclusao_mat_w,1),
			1.1);
	end if;

	if (obter_min_entre_datas(dt_inclusao_mat_w,dt_cotacao_w,1) <> 0) then

		insert	into	w_autor_convenio_evento(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_agenda,
			ds_evento,
			qt_minuto,
			ie_ordem)
		values (nextval('w_autor_convenio_evento_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_agenda_w,
			substr(wheb_mensagem_pck.get_texto(310492),1,255),
			obter_min_entre_datas(dt_inclusao_mat_w,dt_cotacao_w,1),
			1.2);
	end if;

	if (obter_min_entre_datas(dt_inclusao_mat_w,dt_email_w,1) <> 0) then

		insert	into	w_autor_convenio_evento(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_agenda,
			ds_evento,
			qt_minuto,
			ie_ordem)
		values (nextval('w_autor_convenio_evento_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_agenda_w,
			substr(wheb_mensagem_pck.get_texto(310494),1,255),
			obter_min_entre_datas(dt_inclusao_mat_w,dt_email_w,1),
			1.3);
	end if;

	if (obter_min_entre_datas(dt_email_w,dt_resposta_conv_w,1) <> 0) then

		insert	into	w_autor_convenio_evento(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_agenda,
			ds_evento,
			qt_minuto,
			ie_ordem)
		values (nextval('w_autor_convenio_evento_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_agenda_w,
			substr(wheb_mensagem_pck.get_texto(310496),1,255),
			obter_min_entre_datas(dt_email_w,dt_resposta_conv_w,1),
			1.4);
	end if;

	/* complementares */

	if (obter_min_entre_datas(dt_agendamento_w,dt_cotacao_w,1) <> 0) then
		insert	into	w_autor_convenio_evento(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_agenda,
			ds_evento,
			qt_minuto,
			ie_ordem)
		values (nextval('w_autor_convenio_evento_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_agenda_w,
			substr(wheb_mensagem_pck.get_texto(310497),1,255),
			obter_min_entre_datas(dt_agendamento_w,dt_cotacao_w,1),
			2.1);
	end if;

	if (obter_min_entre_datas(dt_agendamento_w,dt_preinternacao_w,1) <> 0) then
		insert	into	w_autor_convenio_evento(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_agenda,
			ds_evento,
			qt_minuto,
			ie_ordem)
		values (nextval('w_autor_convenio_evento_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_agenda_w,
			substr(wheb_mensagem_pck.get_texto(310500),1,255),
			obter_min_entre_datas(dt_agendamento_w,dt_preinternacao_w,1),
			2.2);
	end if;

	if (obter_min_entre_datas(dt_inclusao_mat_w,dt_preinternacao_w,1) <> 0) then
		insert	into	w_autor_convenio_evento(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_agenda,
			ds_evento,
			qt_minuto,
			ie_ordem)
		values (nextval('w_autor_convenio_evento_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_agenda_w,
			substr(wheb_mensagem_pck.get_texto(310501),1,255),
			obter_min_entre_datas(dt_inclusao_mat_w,dt_preinternacao_w,1),
			2.3);
	end if;

	if (obter_min_entre_datas(dt_cotacao_w,dt_preinternacao_w,1) <> 0) then

		insert	into	w_autor_convenio_evento(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_agenda,
			ds_evento,
			qt_minuto,
			ie_ordem)
		values (nextval('w_autor_convenio_evento_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_agenda_w,
			substr(wheb_mensagem_pck.get_texto(310502),1,255),
			obter_min_entre_datas(dt_cotacao_w,dt_preinternacao_w,1),
			2.4);
	end if;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_autor_convenio_evento (dt_inicial_p timestamp, dt_final_p timestamp, cd_convenio_p bigint, nm_usuario_p text) FROM PUBLIC;

