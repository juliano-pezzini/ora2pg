-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_inserir_exame_adicional ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, cd_exame_p text, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE

 
nr_sequencia_w		bigint;
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_estabelecimento_w	smallint;
ie_tipo_atendimento_w	smallint;
ie_tipo_convenio_w	smallint;

nr_seq_exame_w		bigint;

cd_setor_w		integer;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
ds_erro_w		varchar(255);
nr_seq_proc_interno_w	bigint;
nr_seq_proc_interno_aux_w	bigint;
nr_seq_material_w	bigint;
cd_material_exame_w	varchar(20);
cd_plano_convenio_w	varchar(10);


BEGIN 
 
select	coalesce(min(nr_sequencia),0) 
into STRICT	nr_sequencia_w 
from	procedimento_paciente 
where	nr_prescricao = nr_prescricao_p 
 and	nr_sequencia_prescricao = nr_seq_prescr_p 
 and	qt_procedimento > 0;
 
if (nr_sequencia_w = 0) then 
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(277268,null);
else 
	select	a.cd_convenio, 
		a.cd_categoria, 
		b.cd_estabelecimento, 
		b.ie_tipo_atendimento, 
		b.ie_tipo_convenio, 
		a.nr_seq_material, 
		obter_plano_conv_atend(b.nr_atendimento) 
	into STRICT	cd_convenio_w, 
		cd_categoria_w, 
		cd_estabelecimento_w, 
		ie_tipo_atendimento_w, 
		ie_tipo_convenio_w, 
		nr_seq_material_w, 
		cd_plano_convenio_w 
	from	atendimento_paciente b, 
		procedimento_paciente a 
	where	a.nr_atendimento = b.nr_atendimento 
	 and	a.nr_sequencia	 = nr_sequencia_w;
 
	select	coalesce(max(nr_seq_exame),0) 
	into STRICT	nr_seq_exame_w 
	from	exame_laboratorio 
	where	cd_exame = cd_exame_p;
 
	if (nr_seq_exame_w = 0) then 
		ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(277270,null) || cd_exame_p;
	else 
		Select	max(nr_seq_proc_interno) 
		into STRICT	nr_seq_proc_interno_w 
		from	prescr_procedimento 
		where	nr_prescricao	= nr_prescricao_p 
		and	nr_sequencia	= nr_seq_prescr_p;
 
		if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then 
			select	max(cd_material_exame) 
			into STRICT	cd_material_exame_w 
			from	material_exame_lab 
			where	nr_sequencia = nr_seq_material_w;
		end if;
			 
		SELECT * FROM Obter_Exame_Lab_Convenio(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estabelecimento_w, ie_tipo_convenio_w, nr_seq_proc_interno_w, cd_material_exame_w, cd_plano_convenio_w, cd_setor_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT cd_setor_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;
 
		nr_sequencia_w := duplicar_proc_paciente(nr_sequencia_w, nm_usuario_p, nr_sequencia_w);
 
		update	procedimento_paciente 
		set	nr_seq_exame		= nr_seq_exame_w, 
			cd_procedimento		= cd_procedimento_w, 
			ie_origem_proced	= ie_origem_proced_w, 
			ie_valor_informado	= 'N', 
			qt_procedimento		= 1, 
			dt_procedimento		= clock_timestamp(), 
			nr_interno_conta	 = NULL 
		where nr_sequencia = nr_sequencia_w;
 
		CALL Atualiza_Preco_Procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);
	end if;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_inserir_exame_adicional ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, cd_exame_p text, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

