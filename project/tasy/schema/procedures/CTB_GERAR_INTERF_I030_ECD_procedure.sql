-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_interf_i030_ecd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenc?o:
-------------------------------------------------------------------------------------------------------------------

Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_linha_w			varchar(8000);
ds_arquivo_w			varchar(4000);
ds_compl_arquivo_w		varchar(4000);
nr_livro_w			varchar(6);
sep_w				varchar(1)	:= '|';
nr_linha_w			bigint	:= qt_linha_p;
nr_seq_registro_w		bigint	:= nr_sequencia_p;

ds_razao_social_w		pessoa_juridica.ds_razao_social%type;
cd_cnpj_w			estabelecimento.cd_cgc%type;
nr_reg_junta_comercial_w	estabelecimento.nr_reg_junta_comercial%type;
ds_municipio_w			pessoa_juridica.ds_municipio%type;
ds_natureza_w			ctb_sped_controle.ds_natureza_livro%type;
dt_fim_ctb_w			empresa.dt_fim_ctb%type;
cd_pf_auditor_w			empresa.cd_pf_auditor%type;
nm_pessoa_fisica_w		pessoa_fisica.nm_pessoa_fisica%type;
ds_codigo_prof_w		pessoa_fisica.ds_codigo_prof%type;
cd_versao_w			ctb_regra_sped.cd_versao%type;
dt_arquivamento_w		timestamp;
dt_arq_conv_emp_w		timestamp;
cd_cnpj_auditor_w		empresa.cd_cnpj_auditor%type;
ds_razao_social_auditoria_w	pessoa_juridica.ds_razao_social%type;
cd_cvm_w				pessoa_juridica.cd_cvm%type;

c_estabelecimento CURSOR FOR
	SELECT	dt_inicio_atividade dt_arquivamento,
		dt_arq_conv_emp dt_arquivam_conv,
		substr(obter_razao_social(cd_cgc),1,255) ds_razao_social,
		cd_cgc cd_cnpj,
		lpad(nr_reg_junta_comercial,11,0) nr_reg_junta_comercial,
		(obter_dados_pf_pj(null, cd_cgc, 'CI')) ds_municipio,
		coalesce(cd_pf_auditor,cd_pf_auditor_w) cd_pf_auditor,
		coalesce(cd_cnpj_auditor, cd_cnpj_auditor_w) cd_cnpj_auditor
	from	estabelecimento
	where   cd_estabelecimento	= cd_estabelecimento_p;


BEGIN
select	lpad(b.nr_livro,6,0),
	b.ds_natureza_livro,
	coalesce(a.cd_versao, '9.0')
into STRICT	nr_livro_w,
	ds_natureza_w,
	cd_versao_w
from	ctb_sped_controle 	b,
	ctb_regra_sped		a
where	a.nr_sequencia	= b.nr_seq_regra_sped
and	b.nr_sequencia	= nr_seq_controle_p;

select	max(dt_fim_ctb),
	max(cd_pf_auditor),
	max(cd_cnpj_auditor)
into STRICT	dt_fim_ctb_w,
	cd_pf_auditor_w,
	cd_cnpj_auditor_w
from	empresa
where	cd_empresa	= cd_empresa_p;

open c_estabelecimento;
loop
fetch c_estabelecimento into	
	dt_arquivamento_w,			
	dt_arq_conv_emp_w,		
	ds_razao_social_w,			
	cd_cnpj_w,			
	nr_reg_junta_comercial_w,		
	ds_municipio_w,
	cd_pf_auditor_w,
	cd_cnpj_auditor_w;		
EXIT WHEN NOT FOUND; /* apply on c_estabelecimento */
	begin
	if (cd_versao_w = '1.0') then
		ds_linha_w	:= substr(	sep_w || 'I030' ||
						sep_w || 'TERMO DE ABERTURA' ||
						sep_w || nr_livro_w ||
						sep_w || ds_natureza_w ||
						sep_w || '#QT_LINHAS' ||
						sep_w || ds_razao_social_w  ||
						sep_w || nr_reg_junta_comercial_w ||
						sep_w || cd_cnpj_w  ||
						sep_w || to_char(dt_arquivamento_w,'ddmmyyyy')  ||
						sep_w || to_char(dt_arq_conv_emp_w,'ddmmyyyy') ||
						sep_w || ds_municipio_w ||
						sep_w ,1,8000);
	elsif (cd_versao_w = '2.0') then
		begin
		if (cd_pf_auditor_w IS NOT NULL AND cd_pf_auditor_w::text <> '') then
			select	a.nm_pessoa_fisica,
				a.ds_codigo_prof
			into STRICT	nm_pessoa_fisica_w,
				ds_codigo_prof_w
			from	pessoa_fisica	a
			where	a.cd_pessoa_fisica	= cd_pf_auditor_w;
		elsif (cd_cnpj_auditor_w IS NOT NULL AND cd_cnpj_auditor_w::text <> '') then
			begin
			select	ds_razao_social,
				cd_cvm
			into STRICT	ds_razao_social_auditoria_w,
				cd_cvm_w
			from	pessoa_juridica a
			where	cd_cgc	= cd_cnpj_auditor_w;
			exception when others then
				ds_razao_social_auditoria_w	:= '';
			end;
		end if;	
		
		
		ds_linha_w	:= substr(	sep_w || 'I030' ||
						sep_w || 'TERMO DE ABERTURA' ||
						sep_w || nr_livro_w ||
						sep_w || ds_natureza_w ||
						sep_w || '#QT_LINHAS' ||
						sep_w || ds_razao_social_w  ||
						sep_w || nr_reg_junta_comercial_w ||
						sep_w || cd_cnpj_w  ||
						sep_w || to_char(dt_arquivamento_w,'ddmmyyyy')  ||
						sep_w || to_char(dt_arq_conv_emp_w,'ddmmyyyy') ||
						sep_w || ds_municipio_w ||
						sep_w || to_char(dt_fim_ctb_w,'ddmmyyyy') ||
						sep_w || coalesce(nm_pessoa_fisica_w,ds_razao_social_auditoria_w) ||
						sep_w || coalesce(ds_codigo_prof_w,cd_cvm_w) ||
						sep_w ,1,8000);
		end;
	elsif (cd_versao_w in ('3.0', '4.0', '5.0', '6.0', '7.0', '8.0','9.0')) then
		ds_linha_w	:= substr(	sep_w || 'I030' ||
						sep_w || 'TERMO DE ABERTURA' ||
						sep_w || nr_livro_w ||
						sep_w || ds_natureza_w ||
						sep_w || '#QT_LINHAS' ||
						sep_w || ds_razao_social_w  ||
						sep_w || nr_reg_junta_comercial_w ||
						sep_w || cd_cnpj_w  ||
						sep_w || to_char(dt_arquivamento_w,'ddmmyyyy')  ||
						sep_w || to_char(dt_arq_conv_emp_w,'ddmmyyyy') ||
						sep_w || ds_municipio_w ||
						sep_w || to_char(dt_fim_ctb_w,'ddmmyyyy') ||
						sep_w ,1,8000);
	
	end if;
	
	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_compl_arquivo_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w	:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;	
	
	insert into ctb_sped_registro(nr_sequencia,
		ds_arquivo,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_controle_sped,
		ds_arquivo_compl,
		cd_registro,
		nr_linha)
	values (nr_seq_registro_w,
		ds_arquivo_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_controle_p,
		ds_compl_arquivo_w,
		'I030',
		nr_linha_w);
	end;
end loop;
close c_estabelecimento;

commit;
qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_interf_i030_ecd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

