-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importa_extrato_santander_400 ( nr_seq_extrato_p bigint, nm_usuario_p text, ds_arquivo_p text) AS $body$
DECLARE


/* Layout Getnet 8.00 20/07/2015 */

/* Header de arquivo */

nr_seq_header_w		bigint;
dt_processamento_w	timestamp;
dt_inicial_w		timestamp;
dt_final_w		timestamp;
nr_extrato_w		varchar(9);
nr_seq_extrato_arq_w	bigint;
cd_interno_w		estabelecimento.cd_interno%type;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	to_date(substr(a.ds_conteudo,2,8),'ddmmyyyy') dt_processamento,
	to_date(substr(a.ds_conteudo,2,8),'ddmmyyyy') dt_inicial,
	to_date(substr(a.ds_conteudo,2,8),'ddmmyyyy') dt_final,
	somente_numero(substr(a.ds_conteudo,81,9)) nr_extrato
from	w_extrato_cartao_cr a
where	substr(a.ds_conteudo,1,1)	= '0'
and	a.nr_seq_extrato		= nr_seq_extrato_p
order by	a.nr_sequencia;

/* Resumo de Vendas */

nr_seq_resumo_w		bigint	:= 0;
nr_seq_resumo_tasy_w	bigint;
nr_resumo_w		varchar(9);
dt_prev_pagto_w		timestamp;
vl_bruto_w		double precision;
vl_comissao_w		double precision;
vl_rejeitado_w		double precision;
vl_liquido_w		double precision;
cd_banco_w		smallint;
cd_agencia_bancaria_w	integer;
nr_conta_w		varchar(14);
nr_seq_conta_banco_w	bigint;
qt_cv_aceito_w		bigint;
qt_cv_rejeitado_w	bigint;
cd_bandeira_w		varchar(2);
nr_seq_bandeira_w	bigint;
cd_estab_c02_w		estabelecimento.cd_interno%type;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;

c02 CURSOR FOR
SELECT	a.nr_sequencia,
	somente_numero(substr(a.ds_conteudo,22,9)) nr_resumo,
	to_date(substr(a.ds_conteudo,39,8),'ddmmyyyy') dt_prev_pagto,
	somente_numero(substr(a.ds_conteudo,85,12)) / 100 vl_bruto,
	somente_numero(substr(a.ds_conteudo,157,12)) / 100 vl_comissao,
	somente_numero(substr(a.ds_conteudo,133,12)) / 100 vl_rejeitado,
	somente_numero(substr(a.ds_conteudo,97,12)) / 100 vl_liquido,
	somente_numero(substr(a.ds_conteudo,47,3)) cd_banco,
	somente_numero(substr(a.ds_conteudo,50,6)) cd_agencia_bancaria,
	trim(both substr(a.ds_conteudo,56,11)) nr_conta,
	somente_numero(substr(a.ds_conteudo,67,9)) qt_cv_aceito,
	somente_numero(substr(a.ds_conteudo,76,9)) qt_cv_rejeitado,
	trim(both substr(a.ds_conteudo,17,2)) cd_bandeira,
	trim(both substr(a.ds_conteudo,2,15)) cd_estab
from	w_extrato_cartao_cr a
where (coalesce(cd_interno_w::text, '') = '' or cd_interno_w = trim(both substr(a.ds_conteudo,2,15)) or
	not exists (select	1
	from	estabelecimento x
	where	x.cd_interno	= trim(both substr(a.ds_conteudo,2,15))))
and	a.nr_sequencia			> nr_seq_resumo_w
and	substr(a.ds_conteudo,1,1)	= '1'
and	a.nr_seq_extrato		= nr_seq_extrato_p;

/* Registro de Transações */

nr_seq_movto_w		bigint;
nr_cartao_w		varchar(19);
dt_compra_w		timestamp;
vl_parcela_w		double precision;
nr_parcela_w		smallint;
qt_parcelas_w		smallint;
nr_autorizacao_w	varchar(10);
ds_comprovante_w	varchar(29);

c03 CURSOR FOR
SELECT	a.nr_sequencia,
	substr(a.ds_conteudo,52,19) nr_cartao,
	to_date(substr(a.ds_conteudo,123,8),'ddmmyyyy') dt_compra,
	somente_numero(substr(a.ds_conteudo,111,12)) / 100 vl_parcela,
	somente_numero(substr(a.ds_conteudo,109,2)) nr_parcela,
	somente_numero(substr(a.ds_conteudo,107,2)) qt_parcelas,
	trim(both substr(a.ds_conteudo,131,10)) nr_autorizacao,
	trim(both substr(a.ds_conteudo,26,12)) ds_comprovante
from	w_extrato_cartao_cr a
where	not exists (select	1
	from	w_extrato_cartao_cr x
	where	substr(x.ds_conteudo,1,1)	= '1'
	and	x.nr_sequencia			< a.nr_sequencia
	and	x.nr_sequencia			> nr_seq_resumo_w
	and	x.nr_seq_extrato		= nr_seq_extrato_p)
and	a.nr_sequencia			> nr_seq_resumo_w
and	somente_numero(substr(a.ds_conteudo,17,9))	= nr_resumo_w
and	substr(a.ds_conteudo,1,1)	= '2'
and	a.nr_seq_extrato		= nr_seq_extrato_p;


BEGIN

select	max(b.cd_interno)
into STRICT	cd_interno_w
from	estabelecimento b,
	extrato_cartao_cr a
where	a.cd_estabelecimento	= b.cd_estabelecimento
and	a.nr_sequencia		= nr_seq_extrato_p;

open	c01;
loop
fetch	c01 into
	nr_seq_header_w,
	dt_processamento_w,
	dt_inicial_w,
	dt_final_w,
	nr_extrato_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	update	extrato_cartao_cr
	set	dt_atualizacao		= clock_timestamp(),
		dt_final		= dt_final_w,
		dt_importacao		= clock_timestamp(),
		dt_inicial		= dt_inicial_w,
		dt_processamento	= dt_processamento_w,
		nm_usuario		= nm_usuario_p,
		nr_extrato		= nr_extrato_w
	where	nr_sequencia		= nr_seq_extrato_p;

	select	nextval('extrato_cartao_cr_arq_seq')
	into STRICT	nr_seq_extrato_arq_w
	;

	insert	into extrato_cartao_cr_arq(ds_arquivo,
		dt_atualizacao,
		dt_atualizacao_nrec,
		dt_final,
		dt_inicial,
		ie_tipo_arquivo,
		nm_usuario,
		nm_usuario_nrec,
		nr_seq_extrato,
		nr_sequencia)
	values (ds_arquivo_p,
		clock_timestamp(),
		clock_timestamp(),
		dt_final_w,
		dt_inicial_w,
		'F',
		nm_usuario_p,
		nm_usuario_p,
		nr_seq_extrato_p,
		nr_seq_extrato_arq_w);

	open	c02;
	loop
	fetch	c02 into
		nr_seq_resumo_w,
		nr_resumo_w,
		dt_prev_pagto_w,
		vl_bruto_w,
		vl_comissao_w,
		vl_rejeitado_w,
		vl_liquido_w,
		cd_banco_w,
		cd_agencia_bancaria_w,
		nr_conta_w,
		qt_cv_aceito_w,
		qt_cv_rejeitado_w,
		cd_bandeira_w,
		cd_estab_c02_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */

		select	max(a.nr_sequencia)
		into STRICT	nr_seq_conta_banco_w
		from	banco_estabelecimento a
		where	trim(both a.cd_conta)	= nr_conta_w
		and	somente_numero(a.cd_agencia_bancaria)	= cd_agencia_bancaria_w
		and	a.cd_banco		= cd_banco_w;

		select	max(cd_estabelecimento)
		into STRICT	cd_estabelecimento_w
		from	estabelecimento
		where	cd_interno = cd_estab_c02_w;

		select	max(a.nr_sequencia)
		into STRICT	nr_seq_bandeira_w
		from	bandeira_cartao_cr a,
			bandeira_cartao_estab b
		where	a.nr_sequencia		= b.nr_seq_bandeira
		and	trim(both a.cd_bandeira)	= cd_bandeira_w
		and	b.cd_estabelecimento	= cd_estabelecimento_w;

		if (coalesce(nr_seq_bandeira_w::text, '') = '') then
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_bandeira_w
			from	bandeira_cartao_cr a
			where	trim(both a.cd_bandeira)	= cd_bandeira_w;
		end if;

		if (coalesce(nr_seq_conta_banco_w::text, '') = '') then
			select	obter_valor_bandeira_estab(nr_seq_bandeira_w,cd_estabelecimento_w,'NR_SEQ_CONTA_BANCO')
			into STRICT	nr_seq_conta_banco_w
			;
		end if;

		select	nextval('extrato_cartao_cr_res_seq')
		into STRICT	nr_seq_resumo_tasy_w
		;

		insert	into extrato_cartao_cr_res(dt_atualizacao,
			dt_atualizacao_nrec,
			dt_prev_pagto,
			nm_usuario,
			nm_usuario_nrec,
			nr_resumo,
			nr_seq_bandeira,
			nr_seq_conta_banco,
			nr_seq_extrato,
			nr_seq_extrato_arq,
			nr_sequencia,
			qt_cv_aceito,
			qt_cv_rejeitado,
			vl_bruto,
			vl_comissao,
			vl_liquido,
			vl_rejeitado)
		values (clock_timestamp(),
			clock_timestamp(),
			dt_prev_pagto_w,
			nm_usuario_p,
			nm_usuario_p,
			nr_resumo_w,
			nr_seq_bandeira_w,
			nr_seq_conta_banco_w,
			nr_seq_extrato_p,
			nr_seq_extrato_arq_w,
			nr_seq_resumo_tasy_w,
			qt_cv_aceito_w,
			qt_cv_rejeitado_w,
			vl_bruto_w,
			vl_comissao_w,
			vl_liquido_w,
			vl_rejeitado_w);

		open	c03;
		loop
		fetch	c03 into
			nr_seq_movto_w,
			nr_cartao_w,
			dt_compra_w,
			vl_parcela_w,
			nr_parcela_w,
			qt_parcelas_w,
			nr_autorizacao_w,
			ds_comprovante_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */

			insert	into extrato_cartao_cr_movto(ds_comprovante,
				dt_atualizacao,
				dt_atualizacao_nrec,
				dt_compra,
				ie_pagto_indevido,
				nm_usuario,
				nm_usuario_nrec,
				nr_autorizacao,
				nr_cartao,
				nr_parcela,
				nr_resumo,
				nr_seq_extrato,
				nr_seq_extrato_arq,
				nr_seq_extrato_res,
				nr_sequencia,
				qt_parcelas,
				vl_aconciliar,
				vl_liquido,
				vl_parcela,
				vl_saldo_concil_fin)
			values (ds_comprovante_w,
				clock_timestamp(),
				clock_timestamp(),
				dt_compra_w,
				'N',
				nm_usuario_p,
				nm_usuario_p,
				nr_autorizacao_w,
				nr_cartao_w,
				nr_parcela_w,
				nr_resumo_w,
				nr_seq_extrato_p,
				nr_seq_extrato_arq_w,
				nr_seq_resumo_tasy_w,
				nextval('extrato_cartao_cr_movto_seq'),
				qt_parcelas_w,
				vl_parcela_w,
				vl_parcela_w,
				vl_parcela_w,
				vl_parcela_w);

		end	loop;
		close	c03;

	end	loop;
	close	c02;

end	loop;
close	c01;

delete	from w_extrato_cartao_cr
where	nr_seq_extrato	= nr_seq_extrato_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importa_extrato_santander_400 ( nr_seq_extrato_p bigint, nm_usuario_p text, ds_arquivo_p text) FROM PUBLIC;

