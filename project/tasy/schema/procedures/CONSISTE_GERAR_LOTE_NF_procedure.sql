-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_gerar_lote_nf ( nr_sequencia_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


qt_existe_item_lote_w		integer;
cd_material_w			integer;
nr_item_nf_w			integer;
qt_item_nf_w			double precision;
qt_item_lote_w			double precision;
cd_estabelecimento_w		smallint;
ie_gera_w			varchar(1);
ie_gerar_desdobrado_w		varchar(1);
ie_quantidade_w			varchar(1);
ds_erro_lote_w			varchar(254);
ds_erro_w			varchar(254);
cd_lote_fabricacao_w		varchar(20);
qt_lote_gerado_w			bigint := 0;
cd_operacao_nf_w			smallint;
ie_regra_lote_nf_w			varchar(1) := 'N';
dt_validade_w				timestamp;
ie_indeterminado_w			varchar(1);
nr_seq_marca_w			bigint;
ie_agrupar_lote_w		regra_nf_lote_fornec.ie_agrupar_lote%type;

C01 CURSOR FOR
SELECT	nr_item_nf,
	cd_material,
	qt_item_estoque,
	cd_lote_fabricacao,
	dt_validade,
	coalesce(ie_indeterminado,'N'),
	coalesce(nr_seq_marca,0)
from	nota_fiscal_item
where	nr_sequencia = nr_sequencia_p
and	(cd_material IS NOT NULL AND cd_material::text <> '');


BEGIN
select	cd_estabelecimento,
	cd_operacao_nf
into STRICT	cd_estabelecimento_w,
	cd_operacao_nf_w
from	nota_fiscal
where	nr_sequencia = nr_sequencia_p;

select	coalesce(max(ie_regra_lote_nf),'N')
into STRICT	ie_regra_lote_nf_w
from	operacao_nota
where	cd_operacao_nf = cd_operacao_nf_w;

if (ie_regra_lote_nf_w = 'N') then

	open c01;
	loop
	fetch c01 into
		nr_item_nf_w,
		cd_material_w,
		qt_item_nf_w,
		cd_lote_fabricacao_w,
		dt_validade_w,
		ie_indeterminado_w,
		nr_seq_marca_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		/*Matheus OS43702 em 01/11/2006 */

		select	count(*)
		into STRICT	qt_lote_gerado_w
		from	material_lote_fornec
		where	nr_sequencia_nf	= nr_sequencia_p
		and	nr_item_nf	= nr_item_nf_w;

		if (qt_lote_gerado_w = 0) then
			begin

			select	count(*)
			into STRICT	qt_existe_item_lote_w
			from	nota_fiscal_item_lote
			where	nr_seq_nota = nr_sequencia_p
			and	nr_item_nf = nr_item_nf_w;

			select	coalesce(sum(qt_material),0)
			into STRICT	qt_item_lote_w
			from	nota_fiscal_item_lote
			where	nr_seq_nota = nr_sequencia_p
			and	nr_item_nf = nr_item_nf_w;
		
			if (qt_item_nf_w <> qt_item_lote_w) and (qt_existe_item_lote_w > 0) then
				if (coalesce(ds_erro_w::text, '') = '') then
					ds_erro_w	:= substr(wheb_mensagem_pck.get_texto(312418,'CD_MATERIAL_W='||cd_material_w)|| chr(13) || chr(10),1,254);
				else	
					ds_erro_w	:= substr(cd_material_w || ',' || ds_erro_w,1,254);
				end if;
			end if;

			SELECT * FROM Obter_Regra_nf_lote_fornec(	cd_material_w, cd_estabelecimento_w, ie_gera_w, ie_quantidade_w, ie_gerar_desdobrado_w, ie_agrupar_lote_w, nr_seq_marca_w) INTO STRICT ie_gera_w, ie_quantidade_w, ie_gerar_desdobrado_w, ie_agrupar_lote_w;
		
			if (ie_gera_w = 'O') and /*Se obriga a informacao*/
				(qt_existe_item_lote_w = 0) and /*e se nao existe na tabela NOTA_FISCAL_ITEM_LOTE, pois ja sao obrigatorios*/
				((coalesce(cd_lote_fabricacao_w::text, '') = '') or ((coalesce(dt_validade_w::text, '') = '') and (ie_indeterminado_w = 'N'))) then
				if (coalesce(ds_erro_lote_w::text, '') = '') then
					ds_erro_lote_w	:= substr(wheb_mensagem_pck.get_texto(312419,'CD_MATERIAL_W='||cd_material_w)|| chr(13) || chr(10),1,254);
				else	
					ds_erro_lote_w	:= substr(cd_material_w || ',' || ds_erro_lote_w,1,254);
			end if;
			end if;
			end;
		end if;
		end;
	end loop;
	close c01;

	ds_retorno_p	:= substr(ds_erro_w || ds_erro_lote_w, 1, 254);
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_gerar_lote_nf ( nr_sequencia_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) FROM PUBLIC;

