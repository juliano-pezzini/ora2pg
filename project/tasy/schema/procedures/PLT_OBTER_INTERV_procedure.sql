-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE plt_obter_interv ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_agrupar_acm_sn_p text, ie_prescr_usuario_p text, nr_seq_regra_p bigint) AS $body$
DECLARE

 
nr_seq_wadep_w			bigint;
nr_seq_pe_prescr_w		bigint;
nr_seq_pe_proc_w		bigint;
cd_intervencao_w		varchar(255);
ds_intervencao_w		varchar(255);
ie_acm_sn_w			varchar(1);
cd_intervalo_w			varchar(7);
ds_intervalo_w			varchar(255);
ie_status_w			varchar(1);
ds_interv_prescr_w		varchar(15);
ie_liberado_w			varchar(1);
ie_copiar_w			varchar(1);
ds_cor_titulo_w			varchar(20);
					
c01 CURSOR FOR 
SELECT	CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p)='N' THEN  nr_seq_pe_prescr  ELSE null END   ELSE null END , 
	CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p)='N' THEN  nr_seq_pe_proc  ELSE null END   ELSE null END ,	 
	cd_intervencao, 
	ds_intervencao, 
	ie_acm_sn,	 
	cd_intervalo, 
	ds_prescricao, 
	--decode(ie_acm_sn, 'S', decode(obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p), 'N', decode(ie_suspenso, 'S', ie_suspenso, null), null), null) ie_status 
	null, 
	ds_intervalo, 
	ie_liberado 
from	( 
	SELECT	a.nr_sequencia nr_seq_pe_prescr, 
		c.nr_seq_pe_proc, 
		c.nr_seq_proc cd_intervencao, 
		substr(y.ds_procedimento,1,240) ds_intervencao, 
		obter_se_acm_sn(null,x.ie_se_necessario) ie_acm_sn,		 
		x.cd_intervalo, 
		substr(obter_desc_inf_sae_adep(x.ie_se_necessario,w.ds_prescricao),1,240) ds_prescricao, 
		coalesce(x.ie_suspenso,'N') ie_suspenso, 
		substr(obter_desc_intervalo_prescr(x.cd_intervalo),1,15) ds_intervalo, 
		CASE WHEN coalesce(a.dt_liberacao::text, '') = '' THEN 'N'  ELSE 'S' END  ie_liberado 
	FROM pe_procedimento y, pe_prescr_proc_hor c, pe_prescricao a, pe_prescr_proc x
LEFT OUTER JOIN intervalo_prescricao w ON (x.cd_intervalo = w.cd_intervalo)
WHERE y.nr_sequencia = x.nr_seq_proc and y.nr_sequencia = c.nr_seq_proc and x.nr_seq_prescr = c.nr_seq_pe_prescr and x.nr_sequencia = c.nr_seq_pe_proc and x.nr_seq_prescr = a.nr_sequencia and c.nr_seq_pe_prescr = a.nr_sequencia and a.nr_atendimento = nr_atendimento_p and a.dt_validade_prescr > dt_validade_limite_p and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and coalesce(x.ie_adep,'S') = 'S' and coalesce(c.ie_situacao,'A') = 'A' and (((obter_se_acm_sn(null,x.ie_se_necessario) = 'N') and (c.dt_horario between dt_inicial_horarios_p and dt_final_horarios_p)) or 
		 ((obter_se_acm_sn(null,x.ie_se_necessario) = 'S') and (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S'))) and ((a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '' AND ie_prescr_usuario_p = 'N') or (a.nm_usuario_nrec = nm_usuario_p)) group by 
		a.nr_sequencia, 
		c.nr_seq_pe_proc, 
		c.nr_seq_proc, 
		y.ds_procedimento, 
		x.ie_se_necessario, 
		x.cd_intervalo, 
		w.ds_prescricao, 
		x.ie_suspenso, 
		a.dt_liberacao 
	) alias26 
group by 
	CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p)='N' THEN  nr_seq_pe_prescr  ELSE null END   ELSE null END , 
	CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p)='N' THEN  nr_seq_pe_proc  ELSE null END   ELSE null END ,	 
	cd_intervencao, 
	ds_intervencao, 
	ie_acm_sn,	 
	cd_intervalo, 
	ds_prescricao, 
	--decode(ie_acm_sn, 'S', decode(obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p), 'N', decode(ie_suspenso, 'S', ie_suspenso, null), null), null); 
	null, 
	ds_intervalo, 
	ie_liberado;


BEGIN 
 
ie_copiar_w 	:= plt_obter_se_item_marcado('E', nr_seq_regra_p);
ds_cor_titulo_w	:= plt_obter_se_item_marcado('E', nr_seq_regra_p);
 
open c01;
loop 
fetch c01 into	nr_seq_pe_prescr_w, 
		nr_seq_pe_proc_w, 
		cd_intervencao_w, 
		ds_intervencao_w, 
		ie_acm_sn_w,		 
		cd_intervalo_w, 
		ds_intervalo_w, 
		ie_status_w, 
		ds_interv_prescr_w, 
		ie_liberado_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	select	nextval('w_rep_t_seq') 
	into STRICT	nr_seq_wadep_w 
	;
	 
	insert into w_rep_t( 
		nr_sequencia, 
		nm_usuario, 
		ie_tipo_item, 
		nr_prescricao, 
		nr_seq_item,		 
		cd_item, 
		ds_item, 
		ie_acm_sn,		 
		cd_intervalo, 
		ds_prescricao, 
		ie_status_item, 
		nr_agrupamento, 
		ie_diferenciado, 
		nr_seq_proc_interno, 
		ds_interv_prescr, 
		ie_liberado, 
		ie_copiar, 
		ds_cor_titulo) 
	values ( 
		nr_seq_wadep_w, 
		nm_usuario_p, 
		'E', 
		nr_seq_pe_prescr_w, 
		nr_seq_pe_proc_w, 
		cd_intervencao_w, 
		ds_intervencao_w, 
		ie_acm_sn_w, 
		cd_intervalo_w, 
		ds_intervalo_w, 
		ie_status_w, 
		0, 
		'N', 
		0, 
		ds_interv_prescr_w, 
		ie_liberado_w, 
		ie_copiar_w, 
		ds_cor_titulo_w);
	end;
end loop;
close c01;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_obter_interv ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_agrupar_acm_sn_p text, ie_prescr_usuario_p text, nr_seq_regra_p bigint) FROM PUBLIC;

