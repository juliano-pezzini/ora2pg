-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ehr_duplicar_template ( nr_seq_template_origem_p bigint, nr_seq_template_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE



nr_sequencia_w	bigint;
nr_seq_old_w	bigint;


C01 CURSOR FOR
	SELECT	*
from	ehr_template_conteudo a
where	nr_seq_template	= nr_seq_template_origem_p
and	not exists (	SELECT	1
				from	ehr_template_conteudo x
				where	x.nr_seq_elemento 	= a.nr_seq_elemento
				and	x.nr_seq_template 	= nr_seq_template_destino_p
				and	ehr_obter_inf_elemento(x.nr_seq_elemento,'COMP') <> 'clu');

C02 CURSOR FOR
	SELECT	*
	from	EHR_TEMPLATE_CONT_RET
	where	nr_seq_elemento	= nr_seq_old_w;


C03 CURSOR FOR
	SELECT	*
	from	EHR_TEMPLATE_CONT_INF
	where	NR_SEQ_TEMP_CONTEUDO	= nr_seq_old_w;

c04 CURSOR FOR
	SELECT	*
	from	EHR_TEMP_CONTEUDO_REGRA
	where	NR_SEQ_TEMP_CONTEUDO	= nr_seq_old_w;


C05 CURSOR FOR
	SELECT	*
	from	EHR_TEMPLATE_CONT_ITEM
	where	NR_SEQ_ITEM	= nr_seq_old_w;

c01_w	c01%rowtype;
c02_w	c02%rowtype;
c03_w	c03%rowtype;
c04_w	c04%rowtype;
c05_w	C05%rowtype;


BEGIN

if (nr_seq_template_origem_p = nr_seq_template_destino_p) then
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(245341);
end if;

open C01;
loop
fetch C01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	nextval('ehr_template_conteudo_seq')
	into STRICT	nr_sequencia_w
	;
	nr_seq_old_w	:= c01_w.nr_sequencia;
	insert into EHR_TEMPLATE_CONTEUDO(
	nr_sequencia, nr_seq_template, dt_atualizacao,
	nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
	nr_seq_elemento, nr_seq_apres, qt_tamanho,
	ds_label, qt_altura, ds_elemento,
	qt_tam_grid, ds_label_grid, ds_mascara,
	vl_minimo, vl_maximo, nr_seq_grid,
	qt_desloc_dir, ie_obrigatorio, ie_readonly,
	ie_tabstop, vl_padrao, nr_seq_elem_visual,
	ie_opcional, ie_vazio, ds_sql,
	ie_copia, ie_entidade, nr_seq_elem_sup,
	nr_seq_template_cluster, qt_coluna, ie_wordwrap,
	ds_formula, ie_alinhamento, ie_italico,
	ie_negrito, ie_sublinhado, ds_cor,
	qt_fonte, ie_situacao, ie_macro,
	nr_seq_texto_padrao )
	 values (
	nr_sequencia_w, nr_seq_template_destino_p, clock_timestamp(),
	nm_usuario_p, clock_timestamp(), nm_usuario_p,
	c01_w.nr_seq_elemento, c01_w.nr_seq_apres, c01_w.qt_tamanho,
	c01_w.ds_label, c01_w.qt_altura, c01_w.ds_elemento,
	c01_w.qt_tam_grid, c01_w.ds_label_grid, c01_w.ds_mascara,
	c01_w.vl_minimo, c01_w.vl_maximo, c01_w.nr_seq_grid,
	c01_w.qt_desloc_dir, c01_w.ie_obrigatorio, c01_w.ie_readonly,
	c01_w.ie_tabstop, c01_w.vl_padrao, c01_w.nr_seq_elem_visual,
	c01_w.ie_opcional, c01_w.ie_vazio, c01_w.ds_sql,
	c01_w.ie_copia, c01_w.ie_entidade, c01_w.nr_seq_elem_sup,
	c01_w.nr_seq_template_cluster, c01_w.qt_coluna, c01_w.ie_wordwrap,
	c01_w.ds_formula, c01_w.ie_alinhamento, c01_w.ie_italico,
	c01_w.ie_negrito, c01_w.ie_sublinhado, c01_w.ds_cor,
	c01_w.qt_fonte, c01_w.ie_situacao, c01_w.ie_macro,
	c01_w.nr_seq_texto_padrao );


	open C02;
	loop
	fetch C02 into
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		insert into ehr_template_cont_ret(
		nr_sequencia, nr_seq_elemento, dt_atualizacao,
		nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
		nm_atributo, nr_seq_apres, ds_label,
		ie_quebra_linha, ds_separador, ds_function )
		 values (
		nextval('ehr_template_cont_ret_seq'), nr_sequencia_w, clock_timestamp(),
		nm_usuario_p, clock_timestamp(), nm_usuario_p,
		c02_w.nm_atributo, c02_w.nr_seq_apres, c02_w.ds_label,
		c02_w.ie_quebra_linha, c02_w.ds_separador, c02_w.ds_function );


		end;
	end loop;
	close C02;


	open C03;
	loop
	fetch C03 into
		c03_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		insert into ehr_template_cont_inf(
			nr_sequencia,
			cd_estabelecimento,
			nr_seq_exame,
			ie_result_exame,
			dt_atualizacao,
			nm_usuario,
			ie_informacao,
			ie_atendimento,
			nr_seq_temp_conteudo,
			ie_inf_entidade )
			 values (
			nextval('ehr_template_cont_inf_seq'),
			c03_w.cd_estabelecimento,
			c03_w.nr_seq_exame,
			c03_w.ie_result_exame,
			clock_timestamp(),
			nm_usuario_p,
			c03_w.ie_informacao,
			c03_w.ie_atendimento,
			nr_sequencia_w,
			c03_w.ie_inf_entidade );


		end;
	end loop;
	close C03;

	open C04;
	loop
	fetch C04 into
		c04_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		INSERT INTO EHR_TEMP_CONTEUDO_REGRA(
		NR_SEQUENCIA, NR_SEQ_TEMP_CONTEUDO, NR_SEQ_TEMP_SUP,
		DS_RESULTADO, DT_ATUALIZACAO, IE_OPERACAO,
		NM_USUARIO, IE_CARREGAR_MACRO)
		 VALUES (
		nextval('ehr_temp_conteudo_regra_seq'), nr_sequencia_w, c04_w.NR_SEQ_TEMP_SUP,
		c04_w.DS_RESULTADO, clock_timestamp(), c04_w.IE_OPERACAO,
		nm_usuario_p, c04_w.IE_CARREGAR_MACRO);


		end;
	end loop;
	close C04;

	open C05;
	loop
	fetch C05 into
		c05_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin
		INSERT INTO EHR_TEMPLATE_CONT_ITEM(
		NR_SEQUENCIA, NR_SEQ_ITEM, DT_ATUALIZACAO,
		NM_USUARIO, DT_ATUALIZACAO_NREC, NM_USUARIO_NREC,
		NR_SEQ_APRES, CD_RESULTADO, DS_RESULTADO,
		VL_RESULTADO )
		 VALUES (
		nextval('ehr_template_cont_item_seq'), nr_sequencia_w, clock_timestamp(),
		nm_usuario_p, clock_timestamp(), nm_usuario_p,
		c05_w.NR_SEQ_APRES, c05_w.CD_RESULTADO, c05_w.DS_RESULTADO,
		c05_w.VL_RESULTADO );


		end;
	end loop;
	close C05;


	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ehr_duplicar_template ( nr_seq_template_origem_p bigint, nr_seq_template_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

