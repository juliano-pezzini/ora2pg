-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cot_comunicacao_envio_fornec ( nr_cot_compra_p bigint, nm_usuario_p text, ie_tipo_p text) AS $body$
DECLARE

 
/* 
ie_tipo_p = Momento do envio 
3 = Envio da cotação ao fornecedor 
4 = Geração da ordem de compras*/
 
 
nr_seq_classif_w			bigint;
nr_seq_regra_w			bigint;
nr_seq_comunic_w			bigint;
cd_estabelecimento_w		integer;
ds_titulo_w			varchar(80);
ds_comunic_w			varchar(2000);
nm_usuario_w			varchar(255);
nr_solicitacao_w			bigint;
cd_setor_atendimento_w		integer;
cd_perfil_w			varchar(10);
ie_ci_lida_w			varchar(1);
ds_setor_adicional_w          	varchar(2000) := '';
cd_setor_regra_usuario_w		integer;
ie_tipo_w			varchar(10);
qt_registros_w			bigint;

c01 CURSOR FOR 
SELECT	distinct 
	nr_solic_compra, 
	cd_setor_atendimento 
from ( 
	SELECT	a.nr_solic_compra, 
		obter_dados_solic_compra(a.nr_solic_compra,8) cd_setor_atendimento 
	from	cot_compra_item a 
	where	nr_cot_compra = nr_cot_compra_p 
	and	(a.nr_solic_compra IS NOT NULL AND a.nr_solic_compra::text <> '') 
	and	not exists ( 
			select	1 
			from	cot_compra_solic_agrup x 
			where	x.nr_cot_compra = a.nr_cot_compra 
			and	x.nr_item_cot_compra = a.nr_item_cot_compra) 
	
union all
 
	select	a.nr_solic_compra, 
		obter_dados_solic_compra(a.nr_solic_compra,8) cd_setor_atendimento 
	from	cot_compra_solic_agrup a 
	where	a.nr_cot_compra = nr_cot_compra_p 
	and	(a.nr_solic_compra IS NOT NULL AND a.nr_solic_compra::text <> '')) alias5;

c02 CURSOR FOR	 
SELECT	b.nr_sequencia, 
	b.cd_perfil 
from	regra_envio_comunic_compra a, 
	regra_envio_comunic_evento b 
where	a.nr_sequencia = b.nr_seq_regra 
and	a.cd_funcao = 915 
and	b.cd_evento = ie_tipo_w 
and	b.ie_situacao = 'A' 
and	a.cd_estabelecimento = 	cd_estabelecimento_w 
and	((cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '' AND b.cd_setor_destino = cd_setor_atendimento_w) or 
	((coalesce(cd_setor_atendimento_w::text, '') = '') and (coalesce(b.cd_setor_destino::text, '') = '')) or (coalesce(b.cd_setor_destino::text, '') = '')) 
and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,nr_cot_compra_p,'CC',obter_perfil_ativo,nm_usuario_p,null),1,1) = 'S';

c05 CURSOR FOR 
SELECT	coalesce(a.cd_setor_atendimento,0) cd_setor_atendimento 
from	regra_envio_comunic_usu a 
where	a.nr_seq_evento = nr_seq_regra_w;


BEGIN 
ie_tipo_w := ie_tipo_p;
 
select	cd_estabelecimento 
into STRICT	cd_estabelecimento_w 
from	cot_compra 
where	nr_cot_compra = nr_cot_compra_p;
 
open c01;
loop 
fetch c01 into 
	nr_solicitacao_w, 
	cd_setor_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	 
	open C02;
	loop 
	fetch C02 into	 
		nr_seq_regra_w, 
		cd_perfil_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
 
		open C05;
		loop 
		fetch C05 into	 
			cd_setor_regra_usuario_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin 
			if (cd_setor_regra_usuario_w <> 0) and (obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N') then 
				ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
			end if;
			end;
		end loop;
		close C05;
 
		select	nextval('comunic_interna_seq') 
		into STRICT	nr_seq_comunic_w 
		;
 
		select	obter_classif_comunic('F') 
		into STRICT	nr_seq_classif_w 
		;
 
		select	substr(obter_dados_regra_com_compra(nr_cot_compra_p, nr_solicitacao_w, 915, ie_tipo_w, nr_seq_regra_w,'T'),1,80), 
			substr(obter_dados_regra_com_compra(nr_cot_compra_p, nr_solicitacao_w, 915, ie_tipo_w, nr_seq_regra_w,'M'),1,2000) 
		into STRICT	ds_titulo_w, 
			ds_comunic_w 
		;
 
		select	coalesce(ie_ci_lida,'N') 
		into STRICT	ie_ci_lida_w 
		from 	regra_envio_comunic_evento 
		where 	nr_sequencia = nr_seq_regra_w;
 
		if (ie_tipo_w = 3) then 
			nm_usuario_w := obter_usuarios_comunic_compras(nr_solicitacao_w,null,3,nr_seq_regra_w,null);
		elsif (ie_tipo_w = 4) then 
			nm_usuario_w := obter_usuarios_comunic_compras(nr_solicitacao_w,null,4,nr_seq_regra_w,null);
		end if;	
		 
		if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then 
			cd_perfil_w := cd_perfil_w ||',';
		end if;
 
		if (nm_usuario_w IS NOT NULL AND nm_usuario_w::text <> '') then 
			insert into comunic_interna(	 
				cd_estab_destino,			dt_comunicado,			ds_titulo, 
				ds_comunicado,			nm_usuario,			dt_atualizacao,			 
				ie_geral,				nm_usuario_destino,		nr_sequencia, 
				ie_gerencial,			nr_seq_classif,			dt_liberacao, 
				ds_perfil_adicional,			ds_setor_adicional) 
			values (	cd_estabelecimento_w,		clock_timestamp(),				ds_titulo_w, 
				ds_comunic_w,			nm_usuario_p,			clock_timestamp(), 
				'N',				nm_usuario_w,			nr_seq_comunic_w, 
				'N',				nr_seq_classif_w,			clock_timestamp(), 
				cd_perfil_w,			ds_setor_adicional_w);
 
		/*Para que a comunicação seja gerada como lida ao próprio usuário */
 
		if (ie_ci_lida_w = 'S') then 
			insert into comunic_interna_lida(nr_sequencia,nm_usuario,dt_atualizacao)values (nr_seq_comunic_w,nm_usuario_p,clock_timestamp());
		end if;		
 
		end if;
		end;
	end loop;
	close C02;	
	end;
end loop;
close c01;
 
if (ie_tipo_p = 4) then 
	begin 
	select	count(*) 
	into STRICT	qt_registros_w 
	from	cot_compra_forn_item a, 
		cot_compra_item b 
	where	a.nr_cot_compra		= b.nr_cot_compra 
	and	a.nr_item_cot_compra	= b.nr_item_cot_compra 
	and	b.nr_cot_compra		= nr_cot_compra_p 
	and not exists ( 
		SELECT	d.nr_cot_compra 
		from	cot_compra_forn_item d 
		where	d.nr_cot_compra		= a.nr_cot_compra 
		and	d.nr_item_cot_compra	= a.nr_item_cot_compra 
		and	d.vl_unitario_material	<> 0);
 
	if (qt_registros_w > 0) then 
 
		ie_tipo_w := 76;
		 
		open C02;
		loop 
		fetch C02 into	 
			nr_seq_regra_w, 
			cd_perfil_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			 
			 
 
			open C05;
			loop 
			fetch C05 into	 
				cd_setor_regra_usuario_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin 
				if (cd_setor_regra_usuario_w <> 0) and (obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N') then 
					ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
				end if;
				end;
			end loop;
			close C05;
 
			select	nextval('comunic_interna_seq') 
			into STRICT	nr_seq_comunic_w 
			;
 
			select	obter_classif_comunic('F') 
			into STRICT	nr_seq_classif_w 
			;
 
			select	substr(obter_dados_regra_com_compra(nr_cot_compra_p, null, 915, ie_tipo_w, nr_seq_regra_w,'T'),1,80), 
				substr(obter_dados_regra_com_compra(nr_cot_compra_p, null, 915, ie_tipo_w, nr_seq_regra_w,'M'),1,2000) 
			into STRICT	ds_titulo_w, 
				ds_comunic_w 
			;
 
			select	coalesce(ie_ci_lida,'N') 
			into STRICT	ie_ci_lida_w 
			from 	regra_envio_comunic_evento 
			where 	nr_sequencia = nr_seq_regra_w;
 
			nm_usuario_w := obter_usuarios_comunic_compras(nr_cot_compra_p, null, 76, nr_seq_regra_w, null);
					 
			if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then 
				cd_perfil_w := cd_perfil_w ||',';
			end if;
 
			if (nm_usuario_w IS NOT NULL AND nm_usuario_w::text <> '') and (ds_titulo_w IS NOT NULL AND ds_titulo_w::text <> '') then 
				 
				insert into comunic_interna(	 
					cd_estab_destino,			dt_comunicado,			ds_titulo, 
					ds_comunicado,			nm_usuario,			dt_atualizacao,			 
					ie_geral,				nm_usuario_destino,		nr_sequencia, 
					ie_gerencial,			nr_seq_classif,			dt_liberacao, 
					ds_perfil_adicional,			ds_setor_adicional) 
				values (	cd_estabelecimento_w,		clock_timestamp(),				ds_titulo_w, 
					ds_comunic_w,			nm_usuario_p,			clock_timestamp(), 
					'N',				nm_usuario_w,			nr_seq_comunic_w, 
					'N',				nr_seq_classif_w,			clock_timestamp(), 
					cd_perfil_w,			ds_setor_adicional_w);
 
			/*Para que a comunicação seja gerada como lida ao próprio usuário */
 
			if (ie_ci_lida_w = 'S') then 
				insert into comunic_interna_lida(nr_sequencia,nm_usuario,dt_atualizacao)values (nr_seq_comunic_w,nm_usuario_p,clock_timestamp());
			end if;		
 
			end if;
			end;
		end loop;
		close C02;
	end if;
	end;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cot_comunicacao_envio_fornec ( nr_cot_compra_p bigint, nm_usuario_p text, ie_tipo_p text) FROM PUBLIC;

