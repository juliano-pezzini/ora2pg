-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_calcular_propos_benef ( nr_seq_proposta_p bigint, vl_proposta_benef_p INOUT bigint, vl_tot_benef_proposta_p INOUT bigint) AS $body$
DECLARE


qt_idade_benef_w		bigint;
nr_seq_tabela_benef_w		bigint;
nr_seq_proposta_benef_w		bigint;
nr_seq_bonificacao_w		bigint;
nr_seq_sca_tabela_w		bigint;
vl_proposta_benef_w		double precision 	:= 0;
vl_proposta_benef_tot_w		double precision 	:= 0;
vl_tot_benef_sca_w		double precision 	:= 0;
vl_proposta_sca_w		double precision 	:= 0;
cd_beneficiario_w		varchar(10);
vl_total_bonificacao_w		double precision 	:= 0;
vl_bonific_w			double precision;
vl_bonificacao_pros_w		double precision 	:= 0;
vl_bonific_proposta_w		double precision 	:= 0;
vl_tot_bonific_prop_w		double precision 	:= 0;
cd_estabelecimento_w		integer;
nr_seq_regra_w			bigint;
vl_inscricao_w			double precision;
tx_inscricao_w			double precision;
ie_taxa_inscricao_w		varchar(1);
dt_inicio_proposta_w		timestamp;
nr_seq_plano_w			bigint;
ie_tipo_proposta_w		bigint;
ie_tipo_item_w			varchar(255);
vl_total_inscricao_w		double precision;
ie_tipo_contratacao_w		varchar(2);
vl_adaptacao_plano_w		double precision;
vl_tot_adaptacao_plano_w	double precision;
ie_acao_contrato_w		varchar(10);
nr_contrato_w			bigint;
nr_seq_contrato_w		bigint;
nr_seq_tabela_sca_w		bigint;
ie_beneficiario_titular_w	varchar(10);
vl_total_sca_contrato_w		double precision 	:= 0;
ie_calcula_valor_sca_contr_w	varchar(10);
dt_nascimento_w			timestamp;
ie_grau_parentesco_w		varchar(10);
ie_preco_vidas_contrato_w	varchar(10);
qt_vidas_w			bigint;
qt_registros_w			bigint;
ie_estipulante_w		varchar(3);
vl_via_carteira_w		double precision;
vl_total_via_carteira_w		double precision;
nr_seq_preco_sca_w		pls_plano_preco.nr_sequencia%type;
nr_seq_reaj_sca_w		pls_reajuste_preco.nr_sequencia%type;
vl_sca_w			pls_plano_preco.vl_preco_atual%type;

C00 CURSOR FOR
	SELECT	cd_beneficiario,
		nr_sequencia,
		nr_seq_plano
	from	pls_proposta_beneficiario
	where	nr_seq_proposta	= nr_seq_proposta_p
	and	coalesce(dt_cancelamento::text, '') = '';

C01 CURSOR FOR
	SELECT	nr_seq_bonificacao
	from	pls_bonificacao_vinculo
	where	nr_seq_segurado_prop	= nr_seq_proposta_benef_w;

C02 CURSOR FOR
	SELECT	nr_seq_tabela
	from	pls_sca_vinculo
	where	nr_seq_benef_proposta	= nr_seq_proposta_benef_w;

C04 CURSOR FOR
	SELECT	nr_seq_bonificacao
	from	pls_bonificacao_vinculo
	where	nr_seq_proposta	= nr_seq_proposta_p
	
union

	SELECT	nr_seq_bonificacao
	from	pls_bonificacao_vinculo
	where	nr_seq_contrato	= nr_seq_contrato_w;

C05 CURSOR FOR
	SELECT	a.nr_seq_tabela
	from	pls_sca_regra_contrato	a
	where	a.nr_seq_contrato	= nr_seq_contrato_w
	and	dt_inicio_proposta_w between coalesce(a.dt_inicio_vigencia,dt_inicio_proposta_w) and fim_dia(coalesce(a.dt_fim_vigencia,dt_inicio_proposta_w))
	and	((coalesce(a.ie_geracao_valores,'B') = ie_beneficiario_titular_w) or coalesce(a.ie_geracao_valores,'B') = 'B')
	and	((a.nr_seq_plano_benef	= nr_seq_plano_w) or (coalesce(a.nr_seq_plano_benef::text, '') = ''))
	and	substr(pls_obter_se_sca_incl_contr(nr_seq_proposta_benef_w,a.nr_seq_plano),1,1) = 'S'
	and	(a.nr_seq_tabela IS NOT NULL AND a.nr_seq_tabela::text <> '')
	and	not exists (	SELECT	1
					from	pls_sca_vinculo		x
					where	x.nr_seq_benef_proposta	= nr_seq_proposta_benef_w
					and	a.nr_seq_plano		= x.nr_seq_plano);

C06 CURSOR FOR
	SELECT	nr_sequencia,
		coalesce(vl_preco_atual,0)
	from	pls_plano_preco
	where	nr_seq_tabela = nr_seq_tabela_sca_w
	and	qt_idade_benef_w between qt_idade_inicial and qt_idade_final
	and	coalesce(ie_grau_titularidade,ie_grau_parentesco_w)	= ie_grau_parentesco_w
	order	by coalesce(ie_grau_titularidade,' ');

BEGIN

vl_tot_benef_proposta_p 	:= 0;
vl_tot_adaptacao_plano_w	:= 0;

select	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	pls_proposta_adesao
where	nr_sequencia	= nr_seq_proposta_p;

select	ie_tipo_proposta,
	ie_tipo_contratacao,
	nr_seq_contrato,
	CASE WHEN coalesce(cd_cgc_estipulante::text, '') = '' THEN  'PF'  ELSE 'PJ' END ,
	dt_inicio_proposta
into STRICT	ie_tipo_proposta_w,
	ie_tipo_contratacao_w,
	nr_contrato_w,
	ie_estipulante_w,
	dt_inicio_proposta_w
from	pls_proposta_adesao
where	nr_sequencia	= nr_seq_proposta_p;

if (nr_contrato_w IS NOT NULL AND nr_contrato_w::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_contrato_w
	from	pls_contrato
	where	nr_contrato	= nr_contrato_w;
end if;

ie_calcula_valor_sca_contr_w	:= coalesce(obter_valor_param_usuario(1232, 77, Obter_Perfil_Ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_w), 'N');

if (ie_tipo_proposta_w = 5) then
	open C00;
	loop
	fetch C00 into
		cd_beneficiario_w,
		nr_seq_proposta_benef_w,
		nr_seq_plano_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */
		begin
		select	dt_nascimento
		into STRICT	dt_nascimento_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_beneficiario_w;
		
		if (dt_nascimento_w IS NOT NULL AND dt_nascimento_w::text <> '') then
			qt_idade_benef_w	:= trunc(months_between(dt_inicio_proposta_w,dt_nascimento_w) / 12);
		else
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1126926, 'BENEFICIARIO='||cd_beneficiario_w||' - '||obter_nome_pf(cd_beneficiario_w)); --Beneficiario(a): #@BENEFICIARIO#@ sem data de nascimento no cadastro.
		end if;
		
		open C02;
		loop
		fetch C02 into
			nr_seq_sca_tabela_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			if (coalesce(nr_seq_sca_tabela_w,0) <> 0) then
				begin
				select	coalesce(vl_preco_atual,0)
				into STRICT	vl_proposta_sca_w
				from	pls_plano_preco
				where	nr_seq_tabela	= nr_seq_sca_tabela_w
				and	qt_idade_benef_w between qt_idade_inicial and qt_idade_final;
				exception
				when others then
					vl_proposta_sca_w := 0;
				end;
			end if;
			vl_tot_benef_proposta_p	:= vl_tot_benef_proposta_p + vl_proposta_sca_w;
			end;
		end loop;
		close C02;
		end;
	end loop;
	close C00;
else
	open C00;
	loop
	fetch C00 into
		cd_beneficiario_w,
		nr_seq_proposta_benef_w,
		nr_seq_plano_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */
		begin
		select	dt_nascimento
		into STRICT	dt_nascimento_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_beneficiario_w;
		
		select	nr_seq_tabela,
			CASE WHEN coalesce(nr_seq_titular::text, '') = '' THEN CASE WHEN coalesce(nr_seq_titular_contrato::text, '') = '' THEN 'T'  ELSE 'D' END   ELSE 'D' END
		into STRICT	nr_seq_tabela_benef_w,
			ie_beneficiario_titular_w
		from	pls_proposta_beneficiario
		where	nr_sequencia	= nr_seq_proposta_benef_w;
		
		if (dt_nascimento_w IS NOT NULL AND dt_nascimento_w::text <> '') then
			qt_idade_benef_w	:= trunc(months_between(dt_inicio_proposta_w, dt_nascimento_w) / 12);
		else
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1126926, 'BENEFICIARIO='||cd_beneficiario_w||' - '||obter_nome_pf(cd_beneficiario_w)); --Beneficiario(a): #@BENEFICIARIO#@ sem data de nascimento no cadastro.
		end if;	
		
		ie_grau_parentesco_w	:= coalesce(substr(pls_obter_garu_dependencia_seg(nr_seq_proposta_benef_w,'P'),1,2),'X');
		
		if (nr_seq_tabela_benef_w IS NOT NULL AND nr_seq_tabela_benef_w::text <> '') then
			select	coalesce(ie_preco_vidas_contrato,'N')
			into STRICT	ie_preco_vidas_contrato_w
			from	pls_tabela_preco
			where	nr_sequencia	= nr_seq_tabela_benef_w;
		end if;
		
		vl_proposta_benef_w	:= coalesce(pls_obter_valores_propostas(nr_seq_proposta_benef_w,null,'P'),0);
		vl_proposta_benef_p	:= vl_proposta_benef_w;
		
		select	coalesce(max(ie_taxa_inscricao),'S')
		into STRICT	ie_taxa_inscricao_w
		from	pls_proposta_beneficiario
		where	cd_beneficiario		= cd_beneficiario_w
		and	nr_seq_proposta		= nr_seq_proposta_p;
		
		if (ie_taxa_inscricao_w = 'S') and (ie_tipo_proposta_w <> 9) then
			
			vl_inscricao_w	:= null;
			tx_inscricao_w	:= null;
			vl_total_inscricao_w	:= null;
			
			if (ie_tipo_proposta_w in (1,6,7)) then
				ie_acao_contrato_w	:= 'A';
			elsif (ie_tipo_proposta_w in (2,8)) then
				ie_acao_contrato_w	:= 'L';
			elsif (ie_tipo_proposta_w in (3,4,7,8)) then
				ie_acao_contrato_w	:= 'M';
			end if;
			
			qt_registros_w	:= 0;
			
			if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
				select	count(1)
				into STRICT	qt_registros_w
				from	pls_regra_inscricao
				where	nr_seq_contrato	= nr_seq_contrato_w;
			end if;
			
			if (qt_registros_w = 0) then
				select	count(1)
				into STRICT	qt_registros_w
				from	pls_regra_inscricao
				where	nr_seq_proposta	= nr_seq_proposta_p;
				
				if (qt_registros_w = 0) then
					SELECT * FROM pls_obter_taxa_inscricao(nr_seq_proposta_benef_w, null, null, nr_seq_plano_w, nr_seq_proposta_p, 1, dt_inicio_proposta_w, null, ie_acao_contrato_w, nr_seq_regra_w, vl_inscricao_w, tx_inscricao_w) INTO STRICT nr_seq_regra_w, vl_inscricao_w, tx_inscricao_w;
				else
					SELECT * FROM pls_obter_taxa_inscricao(nr_seq_proposta_benef_w, null, null, null, nr_seq_proposta_p, 1, dt_inicio_proposta_w, null, ie_acao_contrato_w, nr_seq_regra_w, vl_inscricao_w, tx_inscricao_w) INTO STRICT nr_seq_regra_w, vl_inscricao_w, tx_inscricao_w;
				end if;
			else
				SELECT * FROM pls_obter_taxa_inscricao(nr_seq_proposta_benef_w, nr_seq_contrato_w, null, null, nr_seq_proposta_p, 1, dt_inicio_proposta_w, null, ie_acao_contrato_w, nr_seq_regra_w, vl_inscricao_w, tx_inscricao_w) INTO STRICT nr_seq_regra_w, vl_inscricao_w, tx_inscricao_w;
			end if;
			
			if (coalesce(tx_inscricao_w,0) <> 0) then
				vl_total_inscricao_w := dividir((vl_proposta_benef_w * tx_inscricao_w), 100);
			elsif (coalesce(vl_inscricao_w,0) <> 0) then
				vl_total_inscricao_w := vl_inscricao_w;
			end if;
			
			vl_proposta_benef_w	:= coalesce(vl_proposta_benef_w,0) + coalesce(vl_total_inscricao_w,0);
		end if;
		
		vl_proposta_benef_tot_w	:= vl_proposta_benef_tot_w + vl_proposta_benef_w;
		
		nr_seq_tabela_sca_w	:= null;
		
		open C02;
		loop
		fetch C02 into
			nr_seq_tabela_sca_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			open C06;
			loop
			fetch C06 into
				nr_seq_preco_sca_w,
				vl_proposta_sca_w;
			EXIT WHEN NOT FOUND; /* apply on C06 */
			end loop;
			close C06;
			
			select	min(nr_sequencia)
			into STRICT	nr_seq_reaj_sca_w
			from	pls_reajuste_preco
			where	nr_seq_preco = nr_seq_preco_sca_w
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and	dt_reajuste > dt_inicio_proposta_w;
			
			if (nr_seq_reaj_sca_w IS NOT NULL AND nr_seq_reaj_sca_w::text <> '') then
				select	coalesce(vl_base,0)
				into STRICT	vl_sca_w
				from	pls_reajuste_preco
				where	nr_sequencia = nr_seq_reaj_sca_w;
			else	
				vl_sca_w := vl_proposta_sca_w;
			end if;
			
			vl_tot_benef_sca_w := vl_tot_benef_sca_w + vl_sca_w;
			end;
		end loop;
		close C02;
		
		open C01;
		loop
		fetch C01 into
			nr_seq_bonificacao_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			
			vl_bonific_w		:= coalesce(pls_obter_valores_propostas(nr_seq_proposta_benef_w,nr_seq_bonificacao_w,'B'),0);
			vl_total_bonificacao_w	:= vl_total_bonificacao_w + coalesce(vl_bonific_w,0);
			
			end;
		end loop;
		close C01;
		
		if (ie_tipo_contratacao_w = 'I') then
			for c04_w in C04 loop
				begin
				vl_bonific_proposta_w	:= substr(pls_obter_valor_bonif_tot_prop(nr_seq_proposta_p, c04_w.nr_seq_bonificacao, nr_seq_proposta_benef_w),1,20);
				
				vl_tot_bonific_prop_w	:= vl_tot_bonific_prop_w + vl_bonific_proposta_w;
				end;
			end loop;
		end if;
		
		if (ie_tipo_proposta_w = 9) then
			vl_adaptacao_plano_w		:= coalesce(pls_obter_valores_propostas(nr_seq_proposta_benef_w,0,'AP'),0);
			vl_tot_adaptacao_plano_w	:= vl_tot_adaptacao_plano_w + vl_adaptacao_plano_w;
		end if;
		
		nr_seq_tabela_sca_w	:= null;
		
		if (ie_calcula_valor_sca_contr_w = 'S') and (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
			
			open C05;
			loop
			fetch C05 into
				nr_seq_tabela_sca_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin
				open C06;
				loop
				fetch C06 into
					nr_seq_preco_sca_w,
					vl_proposta_sca_w;
				EXIT WHEN NOT FOUND; /* apply on C06 */
				end loop;
				close C06;
				
				select	min(nr_sequencia)
				into STRICT	nr_seq_reaj_sca_w
				from	pls_reajuste_preco
				where	nr_seq_preco = nr_seq_preco_sca_w
				and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
				and	dt_reajuste > dt_inicio_proposta_w;
				
				if (nr_seq_reaj_sca_w IS NOT NULL AND nr_seq_reaj_sca_w::text <> '') then
					select	coalesce(vl_base,0)
					into STRICT	vl_sca_w
					from	pls_reajuste_preco
					where	nr_sequencia = nr_seq_reaj_sca_w;
				else	
					vl_sca_w := vl_proposta_sca_w;
				end if;
				
				vl_total_sca_contrato_w	:= vl_total_sca_contrato_w + vl_sca_w;
				
				end;
			end loop;
			close C05;
		end if;
		
		if (ie_tipo_proposta_w not in (5,9)) then
			vl_via_carteira_w	:= coalesce(pls_obter_valores_propostas(nr_seq_proposta_benef_w,null,'VC'),0);
		else
			vl_via_carteira_w 	:= 0;
		end if;
		
		vl_total_via_carteira_w	:= coalesce(vl_total_via_carteira_w,0) + coalesce(vl_via_carteira_w,0);
		
		end;
	end loop;
	close C00;
	
	if (ie_tipo_contratacao_w <> 'I') then
		for c04_w in C04 loop
			begin
			vl_bonific_proposta_w	:= (pls_valor_bonif_tot_prop_pj(nr_seq_proposta_p, c04_w.nr_seq_bonificacao))::numeric;
			
			vl_tot_bonific_prop_w	:= vl_tot_bonific_prop_w + vl_bonific_proposta_w;
			end;
		end loop;
	end if;
	
	vl_tot_benef_proposta_p	:= 	(coalesce(vl_proposta_benef_tot_w,0)+ coalesce(vl_total_bonificacao_w,0) + coalesce(vl_tot_benef_sca_w,0) +
					coalesce(vl_tot_bonific_prop_w,0) + coalesce(vl_tot_adaptacao_plano_w,0) + coalesce(vl_total_sca_contrato_w,0) +
					coalesce(vl_total_via_carteira_w,0));
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_calcular_propos_benef ( nr_seq_proposta_p bigint, vl_proposta_benef_p INOUT bigint, vl_tot_benef_proposta_p INOUT bigint) FROM PUBLIC;

