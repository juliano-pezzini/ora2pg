-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_inserir_item ( nr_seq_agenda_int_p bigint, nr_seq_item_p text, ie_lado_p text, ie_anestesia_p text, nr_classif_agend_p bigint, ie_classif_agenda_p text, nr_seq_motivo_agend_p bigint, ie_replicar_conv_p text, cd_estabelecimento_p bigint, nm_usuario_p text, cd_profissional_p text default null, nr_seq_topografia_p bigint default null, nr_seq_topografia_adic_p bigint default null, dt_solicitacao_p timestamp default null, dt_desejada_p timestamp default null, nr_seq_mipres_p controle_mipres_agenda.nr_prescr_mipres%type default null, dt_validade_mipres_p timestamp default null) AS $body$
DECLARE


nr_seq_grupo_w		bigint;
nr_seq_proc_interno_w	bigint;
cd_especialidade_w	integer;
cd_medico_w		varchar(10);
ie_tipo_agendamento_w	varchar(15);
nr_seq_grupo_proc_w	bigint;
nr_seq_proc_interno_ww	bigint;
cd_medico_ww		varchar(10);
cd_especialidade_ww	integer;
ie_tipo_agendamento_ww	varchar(15);
nr_minuto_duracao_w	bigint;
nr_minuto_duracao_ww	bigint;
ds_itens_grupo_w	varchar(800);
tam_lista_w		bigint;
ie_pos_virgula_w	smallint	:= 0;
nr_seq_grupo_Real_w	bigint;
ds_lista_grupo_w	varchar(800);
ie_classif_agenda_w	varchar(5);
ie_classif_agenda_ww	varchar(5);
nr_seq_exame_adic_w	bigint;
nr_seq_grupo_item_w	bigint;
qt_exame_adic_w		bigint;
nr_seq_item_agenda_w	bigint;
ie_gerar_check_list_w	varchar(1);
nr_seq_ageint_check_list_w bigint;
ie_gerar_equip_w	varchar(1);
nr_seq_regra_w		bigint;
nr_seq_item_w		bigint;
ds_Retorno_w		varchar(255);
ie_forma_checklist_w	varchar(1) := 'L';
ie_anestesia_w		varchar(1) := 'N';
ie_verificar_anestesia_w	varchar(1);
nr_seq_proc_item_grupo_w	bigint;
ie_forma_agend_padrao_w	varchar(1);
nr_seq_agrupamento_w	bigint;
ie_utiliza_tempo_proced_w	varchar(1);
cd_paciente_w		varchar(10);
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_plano_w		varchar(10);
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_minuto_duracao_regra_w	bigint;
ie_cons_regra_dur_classif_w	varchar(1);
NR_SEQ_AREA_ATUACAO_W	bigint;
nr_seq_item_conv_w		agenda_integrada_item.nr_sequencia%type;
nr_seq_ageint_item_w	agenda_integrada_item.nr_sequencia%type;
ie_forma_agendamento_w  agenda_integrada_item.ie_forma_agendamento%type;
nr_seq_classif_agenda_w  agenda_integrada_item.nr_seq_classif_agenda%type;
nr_seq_proc_interno_adic_w ageint_exame_adic_item.nr_seq_proc_interno%type;
ie_lado_w		agenda_integrada_item.ie_lado%type;
ie_dup_selec_lado_w		varchar(1);
nr_for_add_w bigint := 1;
ie_lado_sub_w varchar(1) := ie_lado_p;
ie_anestesia_grupo_w	agenda_int_grupo.ie_anestesia%type;
nr_seq_exame_adic_item_w ageint_exame_adic_item.nr_sequencia%type;

C02 CURSOR FOR
	SELECT	ie_tipo_agendamento,
		nr_Seq_proc_interno,
		cd_medico,
		cd_especialidade,
		nr_minuto_duracao,
		ie_classif_agenda,
		nr_sequencia
	from	ageint_grupo_proc_item
	where	nr_Seq_grupo_proc	= nr_seq_grupo_proc_w
	and		ie_situacao		= 'A'
	order by NR_SEQ_APRES;

C01 CURSOR FOR
	SELECT	nr_seq_proc_interno
	from	ageint_ex_adic_grupo_item
	where	nr_seq_grupo_item	= nr_seq_item_p;

BEGIN

ie_gerar_equip_w := Obter_Param_Usuario(869, 24, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_equip_w);
ie_forma_checklist_w := Obter_Param_Usuario(869, 75, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_forma_checklist_w);
ie_verificar_anestesia_w := Obter_Param_Usuario(869, 147, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_verificar_anestesia_w);
ie_forma_agend_padrao_w  := Obter_Param_Usuario(869, 204, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_forma_agend_padrao_w );
ie_utiliza_tempo_proced_w := Obter_Param_Usuario(869, 178, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_utiliza_tempo_proced_w);
ie_cons_regra_dur_classif_w := Obter_Param_Usuario(869, 231, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_cons_regra_dur_classif_w);
ie_dup_selec_lado_w := Obter_Param_Usuario(869, 479, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_dup_selec_lado_w);

select	nr_seq_grupo,
	nr_Seq_proc_interno,
	cd_especialidade,
	coalesce(cd_medico, cd_profissional_p),
	nr_seq_grupo_proc,
	nr_minuto_duracao,
	ie_classif_agenda,
	nr_sequencia,
	nr_seq_agrupamento,
	NR_SEQ_AREA_ATUACAO,
	nr_seq_classif_agenda
into STRICT	nr_seq_grupo_w,
	nr_seq_proc_interno_w,
	cd_especialidade_w,
	cd_medico_w,
	nr_seq_grupo_proc_w,
	nr_minuto_duracao_w,
	ie_classif_agenda_w,
	nr_seq_item_w,
	nr_seq_agrupamento_w,
	NR_SEQ_AREA_ATUACAO_W,
	nr_seq_classif_agenda_w
from	agenda_int_grupo_item
where	nr_sequencia	= nr_seq_item_p
order by nr_seq_apres;

select	max(ie_tipo_agendamento),
		max(ie_anestesia)
into STRICT	ie_tipo_agendamento_w,
		ie_anestesia_grupo_w
from	agenda_int_grupo
where	nr_sequencia	= nr_seq_grupo_w;

select	max(cd_pessoa_fisica),
	max(cd_convenio),
	max(cd_categoria),
	max(cd_plano),
	max(ie_forma_agendamento)
into STRICT	cd_paciente_w,
	cd_convenio_w,
	cd_categoria_w,
	cd_plano_w,
	ie_forma_agendamento_w
from	agenda_integrada
where	nr_sequencia = nr_seq_agenda_int_p;

if (ie_lado_p = 'A' and ie_dup_selec_lado_w = 'S') then
	nr_for_add_w := 2;
else
	nr_for_add_w := 1;
end if;

for nr_loop in 1 .. nr_for_add_w loop
	if (ie_lado_p = 'A' and ie_dup_selec_lado_w = 'S' and nr_loop = 1) then
		ie_lado_sub_w := 'D';
	elsif (ie_lado_p = 'A' and ie_dup_selec_lado_w = 'S' and nr_loop = 2) then
		ie_lado_sub_w := 'E';
	else
		ie_lado_sub_w := ie_lado_p;
	end if;

if	((ie_tipo_agendamento_w	in ('E','S','Q')) and (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '')) or
	((ie_tipo_agendamento_w	= 'C') and
	((cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') or (cd_especialidade_w IS NOT NULL AND cd_especialidade_w::text <> ''))) then
	
		if (ie_utiliza_tempo_proced_w = 'S') then

			SELECT * FROM obter_proc_tab_interno_conv(
					nr_seq_proc_interno_w, cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;

			nr_minuto_duracao_regra_w := Obter_Tempo_Padrao_Ageint(nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, null, null, cd_paciente_w, nr_minuto_duracao_regra_w, ie_lado_sub_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, null);

			if (nr_minuto_duracao_regra_w <> 0) then
				nr_minuto_duracao_w	:= nr_minuto_duracao_regra_w;
			end if;

		end if;

		if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') and (coalesce(nr_minuto_duracao_w::text, '') = '') then
			nr_minuto_duracao_w	:= ageint_obter_tempo_exame(nr_seq_proc_interno_w);
		end if;

		if	((ie_cons_regra_dur_classif_w = 'S') or
			((coalesce(nr_minuto_duracao_w::text, '') = '') and
			((ie_classif_agenda_w IS NOT NULL AND ie_classif_agenda_w::text <> '') or (ie_classif_agenda_p IS NOT NULL AND ie_classif_agenda_p::text <> '')))) then
			select	coalesce(Ageint_Obter_Dur_Classif(coalesce(ie_classif_agenda_p,ie_classif_agenda_w), cd_estabelecimento_p, cd_medico_w), nr_minuto_duracao_w)
			into STRICT	nr_minuto_duracao_w
			;
		end if;

		if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
			SELECT * FROM Ageint_Consistir_Regra_Ex_Adic(nr_Seq_agenda_int_p, nr_seq_proc_interno_w, cd_estabelecimento_p, nm_usuario_p, nr_seq_regra_w, ds_retorno_w) INTO STRICT nr_seq_regra_w, ds_retorno_w;
			if (ie_verificar_anestesia_w = 'S') then
				ie_anestesia_w	:= Ageint_Obter_Se_Proc_Anest(nr_seq_proc_interno_w,null,null,nr_seq_agenda_int_p);
			end if;

		end if;

		if (Ageint_obter_se_exige_anest(nr_seq_proc_interno_w) = 'S') then
			ie_anestesia_w := ie_anestesia_p;
		elsif (ie_anestesia_grupo_w = 'S') THEN
			ie_anestesia_w := 'S';			
		end if;


		if	(((coalesce(nr_Seq_regra_w,0)	> 0) and (coalesce(ds_retorno_w::text, '') = '')) or
			((coalesce(ds_retorno_w::text, '') = '') and
			coalesce(nr_Seq_regra_w,0)	= 0)) then

			select	nextval('agenda_integrada_item_seq')
			into STRICT	nr_seq_item_agenda_w
			;

			insert into agenda_integrada_item(nr_sequencia,
				nr_seq_agenda_int,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_proc_interno,
				ie_tipo_agendamento,
				cd_medico,
				cd_especialidade,
				nr_minuto_duracao,
				ie_classif_agenda,
				nr_seq_grupo_selec,
				nr_seq_regra_ex_adic,
				nr_seq_item_selec,
				ie_anestesia,
				ie_lado,
				ie_forma_agendamento,
				nr_classificacao_agend,
				nr_seq_agrupamento,
				nr_seq_motivo_agendamento,
				NR_SEQ_AREA_ATUACAO,
				nr_seq_classif_agenda,
				nr_seq_topografia,
				dt_solicitacao,
				dt_desejada
				)
			values (nr_seq_item_agenda_w,
				nr_seq_agenda_int_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				CASE WHEN ie_tipo_agendamento_w='C' THEN  null  ELSE nr_seq_proc_interno_w END ,
				ie_tipo_agendamento_w,
				CASE WHEN ie_tipo_agendamento_w='C' THEN  cd_medico_w  ELSE null END ,
				cd_especialidade_w,
				CASE WHEN nr_minuto_duracao_w=0 THEN ''  ELSE nr_minuto_duracao_w END ,
				coalesce(ie_classif_agenda_p,ie_classif_agenda_w),
				nr_seq_grupo_w,
				nr_seq_regra_w,
				nr_seq_item_w,
				ie_anestesia_w,
				ie_lado_sub_w,
				CASE WHEN ie_tipo_agendamento_w='Q' THEN  null  ELSE coalesce(ie_forma_agendamento_w,CASE WHEN ie_forma_agend_padrao_w='' THEN  null  ELSE ie_forma_agend_padrao_w END ) END ,
				nr_classif_agend_p,
				nr_seq_agrupamento_w,
				nr_seq_motivo_agend_p,
				NR_SEQ_AREA_ATUACAO_W,
				nr_seq_classif_agenda_w,
				nr_seq_topografia_p,
				dt_solicitacao_p,
				dt_desejada_p
				);

				if (nr_seq_mipres_p IS NOT NULL AND nr_seq_mipres_p::text <> '') then
					CALL insert_controle_mipres_age(nr_seq_agenda_int_p, nr_seq_item_agenda_w, nr_seq_mipres_p, dt_validade_mipres_p, null, null, nm_usuario_p, null, 'agenda_integrada_item');
				end if;
		  if (cd_profissional_p IS NOT NULL AND cd_profissional_p::text <> '') and (ie_tipo_agendamento_w	in ('E','S')) then
			insert into agenda_integrada_prof_item(
			  nr_sequencia,
			  dt_atualizacao,
			  nm_usuario,
			  dt_atualizacao_nrec,
			  nm_usuario_nrec,
			  nr_seq_agenda_item,
			  cd_pessoa_fisica,
			  ie_confirmado)
			values (
			  nextval('agenda_integrada_prof_item_seq'),
			  clock_timestamp(),
			  nm_usuario_p,
			  clock_timestamp(),
			  nm_usuario_p,
			  nr_seq_item_agenda_w,
			  cd_profissional_p,
			  'N');
		  end if;
			commit;
			------
			
			IF ie_tipo_agendamento_w = 'C' THEN
			   CALL inserir_proc_regra_ageint_cons(cd_especialidade_p   => cd_especialidade_w,
											  nr_seq_ageint_item_p => nr_seq_item_agenda_w,
											  ie_classif_agenda_p  => coalesce(ie_classif_agenda_p,ie_classif_agenda_w),
											  cd_convenio_p        => cd_convenio_w,
											  cd_categoria_p       => cd_categoria_w,
											  cd_estabelecimento_p => cd_estabelecimento_p,
											  nm_usuario_p         => nm_usuario_p);
											  
				CALL gerar_ajust_proc_grupo_ageint(	cd_especialidade_p   => cd_especialidade_w,
												ie_classif_agenda_p  => coalesce(ie_classif_agenda_p,ie_classif_agenda_w),
												nr_seq_item_ageint_p => nr_seq_item_agenda_w,
												nr_seq_ageint_p		 => nr_seq_agenda_int_p,
												nr_seq_grupo_p		 => nr_seq_grupo_w,
												nr_seq_proc_interno_p=> nr_seq_proc_interno_w,
												ie_lado_p			 => ie_lado_sub_w,
												nm_usuario_p         => nm_usuario_p,
												cd_estabelecimento_p => cd_estabelecimento_p);
			END IF;
			-----
			select 	max(a.nr_sequencia)
			into STRICT 	nr_seq_item_conv_w
			from 	agenda_integrada_item	a
			where 	a.nr_seq_agenda_int = nr_seq_agenda_int_p
					and a.nr_sequencia <> nr_seq_item_agenda_w
					and	 exists (SELECT 1 from agenda_integrada_conv_item b where b.nr_seq_agenda_item = a.nr_sequencia);

			if (ie_replicar_conv_p = 'S') then
				CALL ageint_inserir_item_conv(nr_seq_agenda_int_p, nr_seq_item_conv_w, nm_usuario_p);
			end if;

			if (coalesce(nr_seq_proc_interno_w, 0)	> 0) then
				CALL ageint_gerar_proc_Assoc(nr_seq_agenda_int_p, nr_seq_item_agenda_w, nr_seq_proc_interno_w, nm_usuario_p, nr_seq_grupo_w);
				CALL Ageint_gerar_anexos_proc(nr_seq_agenda_int_p, nr_seq_proc_interno_w, cd_estabelecimento_p, nm_usuario_p);
			end if;

			CALL Ageint_Gerar_Equip_Item(nr_seq_proc_interno_w, nr_seq_item_agenda_w, cd_estabelecimento_p, nm_usuario_p);

			if (ie_forma_checklist_w = 'L') then

				select	substr(ageint_obter_se_proc_check(nr_seq_proc_interno_w,nr_seq_agenda_int_p, cd_estabelecimento_p, cd_especialidade_w),1,1)
				into STRICT	ie_gerar_check_list_w
				;

				if (ie_gerar_check_list_w = 'S') then
					select	nextval('ageint_check_list_paciente_seq')
					into STRICT	nr_seq_ageint_check_list_w
					;

					insert into ageint_check_list_paciente(nr_sequencia,
										nr_seq_ageint,
										dt_atualizacao,
										nm_usuario,
										ie_tipo_check_list)
									values (nr_seq_ageint_check_list_w,
										nr_seq_agenda_int_p,
										clock_timestamp(),
										nm_usuario_p,
										'I');

					commit;

					CALL Ageint_Gerar_Check_List(nr_seq_ageint_check_list_w,nr_seq_proc_interno_w,nr_seq_agenda_int_p,nm_usuario_p, cd_estabelecimento_p, cd_especialidade_w);

				end if;
			end if;
		end if;
end if;

select	count(*)
into STRICT	qt_exame_adic_w
from	ageint_ex_adic_grupo_item
where	nr_seq_grupo_item	= nr_seq_item_w;

select	max(nr_seq_proc_interno)
into STRICT	nr_seq_proc_interno_adic_w
from	ageint_ex_adic_grupo_item
where	nr_seq_grupo_item = nr_seq_item_w;

if (qt_exame_adic_w	> 0) and (nr_seq_item_agenda_w	> 0) then
	open C01;
	loop
	fetch C01 into
		nr_seq_exame_adic_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		select nextval('ageint_exame_adic_item_seq')
		into STRICT nr_seq_exame_adic_item_w
		;
		
		insert into ageint_exame_adic_item(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_proc_interno,
				nr_seq_item,
				nr_seq_grupo_selec,
				ie_lado,
				nr_seq_topografia)
			values (nr_seq_exame_adic_item_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_exame_adic_w,
				nr_seq_item_agenda_w,
				nr_seq_grupo_w,
				ie_lado_sub_w,
				CASE WHEN nr_seq_proc_interno_adic_w=nr_seq_exame_adic_w THEN  nr_seq_topografia_adic_p  ELSE null END );
				
				if (nr_seq_mipres_p IS NOT NULL AND nr_seq_mipres_p::text <> '') then
					CALL insert_controle_mipres_age(nr_seq_agenda_int_p, nr_seq_exame_adic_item_w, nr_seq_mipres_p, dt_validade_mipres_p, null, null, nm_usuario_p, null, 'ageint_exame_adic_item');
				end if;


			if (ie_forma_checklist_w = 'L') then

				select	substr(ageint_obter_se_proc_check(nr_seq_exame_adic_w,nr_seq_agenda_int_p, cd_estabelecimento_p),1,1)
				into STRICT	ie_gerar_check_list_w
				;

				if (ie_gerar_check_list_w = 'S') then
					select	nextval('ageint_check_list_paciente_seq')
					into STRICT	nr_seq_ageint_check_list_w
					;

					insert into ageint_check_list_paciente(nr_sequencia,
										nr_seq_ageint,
										dt_atualizacao,
										nm_usuario,
										ie_tipo_check_list)
									values (nr_seq_ageint_check_list_w,
										nr_seq_agenda_int_p,
										clock_timestamp(),
										nm_usuario_p,
										'I');

					commit;

					CALL Ageint_Gerar_Check_List(nr_seq_ageint_check_list_w,nr_seq_exame_adic_w,nr_seq_agenda_int_p,nm_usuario_p, cd_estabelecimento_p);
				end if;
			end if;

		if (ie_utiliza_tempo_proced_w = 'S') then
			CALL Ageint_atualiza_dur_ex_adic(nr_seq_item_agenda_w,'A','L');
		end if;
		end;
	end loop;
	close C01;
end if;

if (nr_Seq_grupo_proc_w IS NOT NULL AND nr_Seq_grupo_proc_w::text <> '') then
		open C02;
		loop
		fetch C02 into
			ie_tipo_agendamento_ww,
			nr_seq_proc_interno_ww,
			cd_medico_ww,
			cd_especialidade_ww,
			nr_minuto_duracao_ww,
			ie_classif_agenda_ww,
			nr_seq_proc_item_grupo_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin	
		if (nr_seq_proc_interno_ww IS NOT NULL AND nr_seq_proc_interno_ww::text <> '') then
			SELECT * FROM Ageint_Consistir_Regra_Ex_Adic(nr_Seq_agenda_int_p, nr_seq_proc_interno_ww, cd_estabelecimento_p, nm_usuario_p, nr_seq_regra_w, ds_retorno_w) INTO STRICT nr_seq_regra_w, ds_retorno_w;
		end if;

		if	(((coalesce(nr_Seq_regra_w,0)	> 0) and (coalesce(ds_retorno_w::text, '') = '')) or
			((coalesce(ds_retorno_w::text, '') = '') and
			coalesce(nr_Seq_regra_w,0)	= 0)) then

			select 	nextval('agenda_integrada_item_seq')
			into STRICT	nr_seq_ageint_item_w
			;

			insert into agenda_integrada_item(nr_sequencia,
				nr_seq_agenda_int,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_proc_interno,
				ie_tipo_agendamento,
				cd_medico,
				cd_especialidade,
				nr_minuto_duracao,
				ie_classif_agenda,
				nr_seq_grupo_proc,
				nr_seq_regra_ex_adic,
				nr_seq_proc_item_grupo,
				ie_forma_agendamento,
				nr_seq_grupo_selec,
				nr_seq_agrupamento,
				NR_SEQ_AREA_ATUACAO,
				dt_solicitacao,
				dt_desejada
				)
			values (nr_seq_ageint_item_w,
				nr_seq_agenda_int_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				CASE WHEN ie_tipo_agendamento_w='C' THEN  null  ELSE nr_seq_proc_interno_ww END ,
				ie_tipo_agendamento_ww,
				cd_medico_ww,
				cd_especialidade_ww,
				nr_minuto_duracao_ww,
				ie_classif_agenda_ww,
				nr_Seq_grupo_proc_w,
				nr_seq_regra_w,
				nr_seq_proc_item_grupo_w,
				CASE WHEN ie_tipo_agendamento_w='Q' THEN  null  ELSE coalesce(ie_forma_agendamento_w,CASE WHEN ie_forma_agend_padrao_w='' THEN  null  ELSE ie_forma_agend_padrao_w END ) END ,
				nr_seq_grupo_w,
				nr_seq_agrupamento_w,
				NR_SEQ_AREA_ATUACAO_W,
				dt_solicitacao_p,
				dt_desejada_p
				);

				if (nr_seq_mipres_p IS NOT NULL AND nr_seq_mipres_p::text <> '') then
					CALL insert_controle_mipres_age(nr_seq_agenda_int_p, nr_seq_ageint_item_w, nr_seq_mipres_p, dt_validade_mipres_p, null, null, nm_usuario_p, null, 'agenda_integrada_item');
				end if;
	if (cd_profissional_p IS NOT NULL AND cd_profissional_p::text <> '') and (ie_tipo_agendamento_w	in ('E','S')) then
		  insert into agenda_integrada_prof_item(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_agenda_item,
			cd_pessoa_fisica,
			ie_confirmado)
		  values (
			nextval('agenda_integrada_prof_item_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_ageint_item_w,
			cd_profissional_p,
			'N');
		end if;
			commit;
	  ----
	  IF ie_tipo_agendamento_w = 'C' THEN
		 CALL inserir_proc_regra_ageint_cons(cd_especialidade_p   => cd_especialidade_ww,
										nr_seq_ageint_item_p => nr_seq_ageint_item_w,
										ie_classif_agenda_p  => ie_classif_agenda_ww,
										cd_convenio_p        => cd_convenio_w,
										cd_categoria_p       => cd_categoria_w,
										cd_estabelecimento_p => cd_estabelecimento_p,
										nm_usuario_p         => nm_usuario_p);
										
		CALL gerar_ajust_proc_grupo_ageint(	cd_especialidade_p   => cd_especialidade_ww,
										ie_classif_agenda_p  => ie_classif_agenda_ww,
										nr_seq_item_ageint_p => nr_seq_ageint_item_w,
										nr_seq_ageint_p		 => nr_seq_agenda_int_p,
										nr_seq_grupo_p		 => nr_seq_grupo_w,
										nr_seq_proc_interno_p=> nr_seq_proc_interno_ww,
										ie_lado_p			 => ie_lado_sub_w,
										nm_usuario_p         => nm_usuario_p,
										cd_estabelecimento_p => cd_estabelecimento_p);
	  END IF;
	  ---
			select 	max(a.nr_sequencia)
			into STRICT 	nr_seq_item_conv_w
			from 	agenda_integrada_item	a
			where 	a.nr_seq_agenda_int = nr_seq_agenda_int_p
					and a.nr_sequencia <> nr_seq_ageint_item_w
					and	 exists (SELECT 1 from agenda_integrada_conv_item b where b.nr_seq_agenda_item = a.nr_sequencia);

			if (ie_replicar_conv_p = 'S') then
				CALL ageint_inserir_item_conv(nr_seq_agenda_int_p, nr_seq_item_conv_w, nm_usuario_p);
			end if;

			if (coalesce(nr_seq_proc_interno_ww, 0)	> 0) then
				CALL ageint_gerar_proc_Assoc(nr_seq_agenda_int_p, nr_seq_ageint_item_w, nr_seq_proc_interno_ww, nm_usuario_p, nr_seq_grupo_w);
				CALL Ageint_gerar_anexos_proc(nr_seq_agenda_int_p, nr_seq_proc_interno_ww, cd_estabelecimento_p, nm_usuario_p);
			end if;

			if (ie_forma_checklist_w = 'L') then

				select	substr(ageint_obter_se_proc_check(nr_seq_proc_interno_ww,nr_seq_agenda_int_p, cd_estabelecimento_p, cd_especialidade_ww),1,1)
				into STRICT	ie_gerar_check_list_w
				;

				if (ie_gerar_check_list_w = 'S') then

					select	nextval('ageint_check_list_paciente_seq')
					into STRICT	nr_seq_ageint_check_list_w
					;

					insert into ageint_check_list_paciente(nr_sequencia,
										nr_seq_ageint,
										dt_atualizacao,
										nm_usuario,
										ie_tipo_check_list)
									values (nr_seq_ageint_check_list_w,
										nr_seq_agenda_int_p,
										clock_timestamp(),
										nm_usuario_p,
										'I');

					commit;

					CALL Ageint_Gerar_Check_List(nr_seq_ageint_check_list_w,nr_seq_proc_interno_ww,nr_seq_agenda_int_p,nm_usuario_p, cd_estabelecimento_p, cd_especialidade_ww);

				end if;
			end if;
		end if;
		end;
	end loop;
	close c02;
end if;
end loop;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_inserir_item ( nr_seq_agenda_int_p bigint, nr_seq_item_p text, ie_lado_p text, ie_anestesia_p text, nr_classif_agend_p bigint, ie_classif_agenda_p text, nr_seq_motivo_agend_p bigint, ie_replicar_conv_p text, cd_estabelecimento_p bigint, nm_usuario_p text, cd_profissional_p text default null, nr_seq_topografia_p bigint default null, nr_seq_topografia_adic_p bigint default null, dt_solicitacao_p timestamp default null, dt_desejada_p timestamp default null, nr_seq_mipres_p controle_mipres_agenda.nr_prescr_mipres%type default null, dt_validade_mipres_p timestamp default null) FROM PUBLIC;

