-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sim_gerar_conta ( nm_usuario_p text, nr_seq_sim_p bigint, cd_convenio_p bigint, dt_inicio_p timestamp, dt_final_p timestamp) AS $body$
DECLARE

 
nr_interno_conta_w		bigint;
nr_interno_conta_ww		bigint;
nr_atendimento_w		bigint;
nr_atendimento_ww		bigint;
ie_tipo_atendimento_ww	smallint;
ie_tipo_atendimento_w	smallint;
vl_minimo_w			double precision;
vl_maximo_w			double precision;
qt_idade_w			smallint;
qt_idade_minima_w		smallint;
qt_idade_maxima_w		smallint;
nr_seq_protocolo_w		bigint;
cd_pessoa_fisica_w		varchar(10);
cd_medico_resp_w		varchar(10);
cd_medico_resp_ww		varchar(10);
cd_especialidade_w		integer;
ie_complexidade_w		varchar(1);
cd_proc_princ_w		varchar(20);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_estabelecimento_w		integer;
ie_cancelada_w		varchar(01);
ie_gerar_w			varchar(01);
dt_entrada_w			timestamp;
ie_pacote_w			varchar(01);
qt_reg_w			bigint;
ie_status_acerto_w		smallint;
ds_filtro_proc_int_w		varchar(4000);
ds_filtro_procedimento_w	varchar(4000);
cd_categoria_w			varchar(10);
ds_lista_protocolo_w		varchar(4000);
ie_lista_w			varchar(1);
nr_seq_protocolo_ww		bigint;
ie_tipo_protocolo_w		smallint;
ie_status_protocolo_w		smallint;
ie_tipo_protocolo_ww		smallint;
ie_status_protocolo_ww		smallint;

C01 CURSOR FOR 
SELECT	distinct	 
	a.nr_interno_conta, 
	a.nr_atendimento, 
	coalesce(a.cd_proc_princ,somente_numero(obter_proc_principal(a.nr_atendimento, a.cd_convenio_parametro, 
		obter_tipo_atendimento(a.nr_Atendimento),a.nr_interno_conta,'C'))), 
	a.ie_status_acerto, 
	a.nr_seq_protocolo 
from	conta_paciente a 
where	coalesce(cd_convenio_p,a.cd_convenio_parametro) = a.cd_convenio_parametro	 
and	a.dt_mesano_referencia	between trunc(dt_inicio_p,'dd') and trunc(dt_final_p,'dd') + 86399/86400 
and	coalesce(a.vl_conta,0)		>= coalesce(vl_minimo_w, coalesce(a.vl_conta,0)) 
and	coalesce(a.vl_conta,0)		<= coalesce(vl_maximo_w, coalesce(a.vl_conta,0)) 
and	coalesce(nr_seq_protocolo_w, coalesce(a.nr_seq_protocolo,0))	= coalesce(a.nr_seq_protocolo,0) 
and 	((ie_lista_w = 'N') or (obter_se_contido(a.nr_seq_protocolo, ds_lista_protocolo_w) = 'S')) --31936, 31933, 31929, 31930, 31819 
and	coalesce(nr_atendimento_w, a.nr_atendimento)		= a.nr_atendimento 
and	coalesce(ie_complexidade_w, coalesce(a.ie_complexidade,'0'))	= coalesce(a.ie_complexidade,'0') 
and	a.cd_estabelecimento					= cd_estabelecimento_w 
and	((ie_cancelada_w = 'S') or (coalesce(a.ie_cancelamento::text, '') = '')) 
and	coalesce(nr_interno_conta_w, a.nr_interno_conta) = a.nr_interno_conta 
and	coalesce(cd_categoria_w,a.cd_categoria_parametro) = a.cd_categoria_parametro;


BEGIN 
 
delete from sim_valor 
where	nr_seq_sim	= nr_seq_sim_p;
delete	from sim_conta 
where	nr_seq_sim	= nr_seq_sim_p;
commit;
select	max(ie_tipo_atendimento), 
	max(vl_minimo), 
	max(vl_maximo), 
	max(qt_idade_minima), 
	max(qt_idade_maxima), 
	max(nr_seq_protocolo), 
	max(nr_atendimento), 
	max(cd_medico_resp), 
	max(cd_especialidade), 
	max(ie_complexidade), 
	max(cd_procedimento), 
	max(ie_origem_proced), 
	max(cd_estabelecimento), 
	max(ie_cancelada), 
	max(ie_pacote), 
	max(nr_interno_conta), 
	max(ds_filtro_proc_int), 
	max(ds_filtro_procedimento), 
	max(cd_categoria), 
	max(ds_lista_protocolo), 
	max(ie_tipo_protocolo), 
	max(ie_status_protocolo) 
into STRICT	ie_tipo_atendimento_w, 
	vl_minimo_w, 
	vl_maximo_w, 
	qt_idade_minima_w, 
	qt_idade_maxima_w, 
	nr_seq_protocolo_w, 
	nr_atendimento_w, 
	cd_medico_resp_w, 
	cd_especialidade_w, 
	ie_complexidade_w, 
	cd_procedimento_w, 
	ie_origem_proced_w, 
	cd_estabelecimento_w, 
	ie_cancelada_w, 
	ie_pacote_w, 
	nr_interno_conta_w, 
	ds_filtro_proc_int_w, 
	ds_filtro_procedimento_w, 
	cd_categoria_w, 
	ds_lista_protocolo_w, 
	ie_tipo_protocolo_w, 
	ie_status_protocolo_w 
from	simulacao 
where	nr_sequencia = nr_seq_sim_p;
 
ie_lista_w:= 'N';
if ((trim(both ds_lista_protocolo_w) IS NOT NULL AND (trim(both ds_lista_protocolo_w))::text <> '')) then 	 
	ie_lista_w:= 'S';
end if;
 
OPEN c01;
LOOP 
FETCH c01 into 
	nr_interno_conta_ww, 
	nr_atendimento_ww, 
	cd_proc_princ_w, 
	ie_status_acerto_w, 
	nr_seq_protocolo_ww;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	ie_gerar_w			:= 'S';
 
	if (ie_status_acerto_w = 1) then 
		CALL atualizar_resumo_conta(nr_interno_conta_ww, 2);
	end if;			
 
	if (ie_tipo_atendimento_w IS NOT NULL AND ie_tipo_atendimento_w::text <> '') or (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') or (cd_especialidade_w IS NOT NULL AND cd_especialidade_w::text <> '') or (cd_medico_resp_w IS NOT NULL AND cd_medico_resp_w::text <> '') or (qt_idade_minima_w IS NOT NULL AND qt_idade_minima_w::text <> '') or (qt_idade_maxima_w IS NOT NULL AND qt_idade_maxima_w::text <> '') then 
		select	cd_medico_resp, 
			ie_tipo_atendimento, 
			cd_pessoa_fisica, 
			dt_entrada 
		into STRICT	cd_medico_resp_ww, 
			ie_tipo_atendimento_ww, 
			cd_pessoa_fisica_w, 
			dt_entrada_w 
		from	atendimento_paciente 
		where	nr_atendimento	= nr_atendimento_ww;
	end if;
	 
	if (ie_tipo_atendimento_w IS NOT NULL AND ie_tipo_atendimento_w::text <> '') and (ie_tipo_atendimento_w <> ie_tipo_atendimento_ww) then 
		ie_gerar_w		:= 'N';
	end if;
 
	if (cd_medico_resp_w IS NOT NULL AND cd_medico_resp_w::text <> '') and (cd_medico_resp_w <> cd_medico_resp_ww) then 
		ie_gerar_w		:= 'N';
	end if;
 
	if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (cd_procedimento_w <> cd_proc_princ_w) then 
		ie_gerar_w		:= 'N';
	end if;
 
	if (cd_especialidade_w IS NOT NULL AND cd_especialidade_w::text <> '') and (cd_especialidade_w <> coalesce(obter_especialidade_medico(cd_medico_resp_ww,'C'),0)) then 
		ie_gerar_w		:= 'N';
	end if;
 
	if (qt_idade_minima_w IS NOT NULL AND qt_idade_minima_w::text <> '') or (qt_idade_maxima_w IS NOT NULL AND qt_idade_maxima_w::text <> '') then 
		select	coalesce(Trunc((dt_entrada_w - coalesce(dt_nascimento, dt_entrada_w))/365.25),0) nr_anos 
		into STRICT	qt_idade_w 
		from	pessoa_fisica 
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		if (qt_idade_w < coalesce(qt_idade_minima_w, qt_idade_w)) or (qt_idade_w > coalesce(qt_idade_maxima_w, qt_idade_w)) then 
			ie_gerar_w		:= 'N';
		end if;
	end if;
 
	if (ie_gerar_w = 'S') and (ie_pacote_w <> 'T') then 
		select	count(*) 
		into STRICT	qt_reg_w 
		from	conta_paciente_resumo 
		where	nr_interno_conta	= nr_interno_conta_ww 
		and	(nr_seq_proc_pacote IS NOT NULL AND nr_seq_proc_pacote::text <> '');
		if (ie_pacote_w = 'S') and (qt_reg_w = 0) then 
			ie_gerar_w	:= 'N';
		elsif (ie_pacote_w = 'N') and (qt_reg_w > 0) then 
			ie_gerar_w	:= 'N';
		end if;
	end if;
	 
	ie_tipo_protocolo_ww	:= 0;
	ie_status_protocolo_ww	:= 0;
	 
	if	((ie_tipo_protocolo_w IS NOT NULL AND ie_tipo_protocolo_w::text <> '') or (ie_status_protocolo_w IS NOT NULL AND ie_status_protocolo_w::text <> '')) and (coalesce(nr_seq_protocolo_ww,0) > 0) then 
		select 	coalesce(max(ie_tipo_protocolo),0), 
			coalesce(max(ie_status_protocolo),0) 
		into STRICT	ie_tipo_protocolo_ww, 
			ie_status_protocolo_ww 
		from 	protocolo_convenio 
		where 	nr_seq_protocolo = nr_seq_protocolo_ww;
	end if;
	 
	if (ie_tipo_protocolo_w IS NOT NULL AND ie_tipo_protocolo_w::text <> '') and (ie_tipo_protocolo_w <> ie_tipo_protocolo_ww) then 
		ie_gerar_w		:= 'N';
	end if;
	 
	if (ie_status_protocolo_w IS NOT NULL AND ie_status_protocolo_w::text <> '') and (ie_status_protocolo_w <> ie_status_protocolo_ww) then 
		ie_gerar_w		:= 'N';
	end if;
	 
	if (ie_gerar_w = 'S') and (ds_filtro_procedimento_w IS NOT NULL AND ds_filtro_procedimento_w::text <> '') then 
		ie_gerar_w:= analise_Obter_Se_Conta_proced(nr_interno_conta_ww,ds_filtro_procedimento_w);
	end if;
	 
	if (ie_gerar_w = 'S') and (ds_filtro_proc_int_w IS NOT NULL AND ds_filtro_proc_int_w::text <> '') then 
		ie_gerar_w:= analise_Obter_Se_Conta_procint(nr_interno_conta_ww,ds_filtro_proc_int_w);
	end if;
 
	if (ie_gerar_w = 'S') then 
		insert	into sim_conta( 
			nr_sequencia, 
			nr_seq_sim, 
			dt_atualizacao, 
			nm_usuario, 
			nr_interno_conta, 
			nr_seq_protocolo) 
		values ( nextval('sim_conta_seq'), 
			nr_seq_sim_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_interno_conta_ww, 
			nr_seq_protocolo_ww);
	end if;
	end;
END LOOP;
CLOSE c01;
 
commit;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sim_gerar_conta ( nm_usuario_p text, nr_seq_sim_p bigint, cd_convenio_p bigint, dt_inicio_p timestamp, dt_final_p timestamp) FROM PUBLIC;

