-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nf_parcial_tit_rec_liq ( nr_titulo_p bigint, nr_sequencia_p bigint, nm_usuario_p text, ie_commit_p text, ie_acao_p text) AS $body$
DECLARE


/*ie_acao_p
I = Inclusão de baixa.
E = Estorno de baixa.

Essa rotina deve ser chamada nas rotinas que fazem baixa e estorno do título, e após a atualizacao do saldo do titulo
*/
ie_finalizar_sem_receb_w		varchar(1) := 'N';
vl_saldo_titulo_w			titulo_receber.vl_saldo_titulo%type;
ie_tipo_receb_parcial_w			varchar(1);
ie_regra_receb_parcial_w		varchar(1);
vl_recebido_w				titulo_receber_liq.vl_recebido%type;
nr_seq_nf_saida_w			titulo_receber.nr_seq_nf_saida%type;
nr_seq_nf_gerada_w			nota_fiscal.nr_sequencia%type;
nr_seq_liq_origem_w			titulo_receber_liq.nr_seq_liq_origem%type;
nr_seq_nota_fiscal_parc_w		titulo_receber_liq.nr_seq_nota_fiscal_parc%type;
nr_seq_movto_trans_fin_w		titulo_receber_liq.nr_seq_movto_trans_fin%type;
nr_seq_movto_orig_w			movto_trans_financ.nr_seq_movto_orig%type;
nr_interno_conta_w			titulo_receber.nr_interno_conta%type;
cd_convenio_parametro_w			conta_paciente.cd_convenio_parametro%type;
ie_tipo_convenio_w			convenio.ie_tipo_convenio%type;
vl_base_calculo_w			titulo_receber_trib.vl_base_calculo%type;
tx_tributo_w				titulo_receber_trib.tx_tributo%type;


BEGIN

ie_finalizar_sem_receb_w := Obter_Param_Usuario(813, 199, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_finalizar_sem_receb_w);

if ( coalesce(ie_finalizar_sem_receb_w,'N') = 'S' and philips_param_pck.get_cd_pais = 2 ) then

	select	max(a.vl_saldo_titulo),
		max(a.nr_seq_nf_saida),
		max(a.nr_interno_conta)
	into STRICT	vl_saldo_titulo_w,
		nr_seq_nf_saida_w,
		nr_interno_conta_w
	from	titulo_receber a
	where	a.nr_titulo	= nr_titulo_p;

	if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then

		select	max(a.cd_convenio_parametro)
		into STRICT	cd_convenio_parametro_w
		from	conta_paciente a
		where	a.nr_interno_conta	= nr_interno_conta_w;

		if (cd_convenio_parametro_w IS NOT NULL AND cd_convenio_parametro_w::text <> '') then

			select	max(a.ie_tipo_convenio)
			into STRICT	ie_tipo_convenio_w
			from	convenio a
			where	a.cd_convenio = cd_convenio_parametro_w;

		end if;

	end if;

	select	max(a.vl_recebido)
	into STRICT	vl_recebido_w
	from	titulo_receber_liq a
	where	a.nr_sequencia		= nr_sequencia_p
	and	a.nr_titulo		= nr_titulo_p;

	/*se saldo for 0, a regra ie_tipo_recebimento  é de Recebimento Total, senao é Parcial */

	if (vl_saldo_titulo_w = 0) then
		ie_tipo_receb_parcial_w := 'T';
	else
		ie_tipo_receb_parcial_w := 'P';
	end if;

	if (ie_tipo_receb_parcial_w IS NOT NULL AND ie_tipo_receb_parcial_w::text <> '') then
		/*Verificar se existe regra de recebimento parcial cadastrado*/

		select	obter_regra_fatura_parcial(ie_tipo_receb_parcial_w)
		into STRICT	ie_regra_receb_parcial_w
		;

	end if;

	/*Se a function retornar S, é porque tem a regra, entao deve chamar as rotinas do faturamento para gerar NF ou estorno.*/

	if ( coalesce(ie_regra_receb_parcial_w,'N') = 'S' ) then

		/*se for uma baixa */

		if (ie_acao_p = 'I') then
			/*apenas para titulos que possuem NF vinculada e que sao originados de conta paciente cujo convenio é particular.*/

			if (nr_seq_nf_saida_w IS NOT NULL AND nr_seq_nf_saida_w::text <> '') and (ie_tipo_convenio_w = 1) then

				/*Como no méxico so tem o IVA, não foi feito cursor, apenas vai  ter um tributo no titulo. */

				select	max(a.vl_base_calculo),
						max(a.tx_tributo)
				into STRICT	vl_base_calculo_w,
						tx_tributo_w
				from	titulo_receber_trib	a
				where	a.nr_titulo	= nr_titulo_p;

				begin
					/*Pegar o valor da baixa desconsiderando o valor do tributo*/

					vl_recebido_w := vl_recebido_w / (1 + (tx_tributo_w/100));
				exception when others then
					null; /*Caso algum divisor seja 0,  a divisao nao ocorre, ai pega o vl_recebido de cima  e nao esse calculado.*/
				end;

				nr_seq_nf_gerada_w := gerar_nf_baixa_titulo(	ie_tipo_receb_parcial_w, vl_recebido_w, nr_titulo_p, nr_seq_nf_saida_w, nr_seq_nf_gerada_w, nm_usuario_p);

				/*se gerou NF, vincular a NF gerada na baixa efetuada*/

				if (nr_seq_nf_gerada_w IS NOT NULL AND nr_seq_nf_gerada_w::text <> '') then

					update	titulo_receber_liq a
					set	a.nr_seq_nota_fiscal_parc	= nr_seq_nf_gerada_w
					where	a.nr_titulo			= nr_titulo_p
					and	a.nr_sequencia			= nr_sequencia_p;

				end if;

			end if;

		/*se for estorno*/

		elsif (ie_acao_p = 'E') then
			/*Buscar a baixa que originou o estorno*/

			select	max(a.nr_seq_liq_origem)
			into STRICT	nr_seq_liq_origem_w
			from	titulo_receber_liq a
			where	a.nr_titulo	= nr_titulo_p
			and	a.nr_sequencia	= nr_sequencia_p;

			/*estornos feitos atraves do controle bancario nao gravam nr_seq_liq_origem, entao temos que pegar pelo movimento bancario*/

			if (coalesce(nr_seq_liq_origem_w::text, '') = '') then

				select	max(a.nr_seq_movto_trans_fin)
				into STRICT	nr_seq_movto_trans_fin_w
				from	titulo_receber_liq a
				where	a.nr_titulo	= nr_titulo_p
				and 	a.nr_sequencia 	= nr_sequencia_p;

				/*atraves  da sequencia de movimento de estorno gerada no banco, pegamos a sequencia do movimento que gerou esse estorno, para esse titulo*/

				if (nr_seq_movto_trans_fin_w IS NOT NULL AND nr_seq_movto_trans_fin_w::text <> '') then

					select	max(a.nr_seq_movto_orig)
					into STRICT	nr_seq_movto_orig_w
					from	movto_trans_financ a
					where	a.nr_sequencia			= nr_seq_movto_trans_fin_w
					and	a.nr_seq_titulo_receber		= nr_titulo_p;

					/*se encotrou o movimento bancário que originou o movimento bancário de estorno, basta buscar a sequencia de baixa vinculada a essa sequencia*/

					if (nr_seq_movto_orig_w IS NOT NULL AND nr_seq_movto_orig_w::text <> '') then

						select	max(a.nr_sequencia)
						into STRICT	nr_seq_liq_origem_w
						from	titulo_receber_liq a
						where	a.nr_titulo 			= nr_titulo_p
						and	a.nr_seq_movto_trans_fin	= nr_seq_movto_orig_w;

					end if;

				end if;

			end if;

			/*verificar se a baixa que foi estornada possui NF */

			if (nr_seq_liq_origem_w IS NOT NULL AND nr_seq_liq_origem_w::text <> '') then

				select	max(a.nr_seq_nota_fiscal_parc)
				into STRICT	nr_seq_nota_fiscal_parc_w
				from	titulo_receber_liq a
				where	a.nr_titulo	= nr_titulo_p
				and	a.nr_sequencia	= nr_seq_liq_origem_w;

				/*se possuir  NF, tera que cancelar essa NF*/

				if (nr_seq_nota_fiscal_parc_w IS NOT NULL AND nr_seq_nota_fiscal_parc_w::text <> '') then

					 CALL canc_nf_estorno_baixa_tit( nr_seq_nota_fiscal_parc_w,
								    nr_titulo_p,
								    nm_usuario_p);

					update	titulo_receber_liq a
					set	a.nr_seq_nota_fiscal_parc	= nr_seq_nota_fiscal_parc_w
					where	a.nr_titulo			= nr_titulo_p
					and	a.nr_sequencia			= nr_sequencia_p;

				end if;

			end if;

		end if;

	end if;

end if;

if ( coalesce(ie_commit_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nf_parcial_tit_rec_liq ( nr_titulo_p bigint, nr_sequencia_p bigint, nm_usuario_p text, ie_commit_p text, ie_acao_p text) FROM PUBLIC;

