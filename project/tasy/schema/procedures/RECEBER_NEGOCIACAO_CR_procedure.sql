-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE receber_negociacao_cr ( nr_seq_saldo_caixa_p bigint, nr_seq_negociacao_p bigint, nm_usuario_p text, nr_seq_recebimento_p INOUT bigint) AS $body$
DECLARE

 
ds_transacao_w			varchar(255);
ds_comprovante_w		varchar(100);
nr_autorizacao_w		varchar(40);
nr_cheque_w			varchar(20);
nr_conta_w			varchar(20);
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
cd_agencia_bancaria_w		varchar(8);
ie_tipo_cartao_w		varchar(1);
vl_cheque_w			double precision;
vl_transacao_w			double precision;
vl_especie_w			double precision;
vl_convertido_w			double precision;
vl_total_especie_w		double precision;
vl_negociado_tit_w		double precision;
vl_baixado_w			double precision;
vl_titulo_negociacao_w		double precision;
nr_seq_trans_fin_baixa_w	bigint;
nr_seq_recebimento_w		bigint;
nr_seq_trans_fin_neg_w		bigint;
nr_seq_cheque_w			bigint;
nr_seq_bandeira_w		bigint;
nr_seq_movto_cartao_w		bigint;
nr_seq_cheque_neg_w		bigint;
nr_seq_cartao_neg_w		bigint;
nr_titulo_w			bigint;
nr_seq_baixa_w			bigint;
cd_tipo_recebimento_w		bigint;
nr_seq_forma_pagto_w		bigint;
nr_seq_trans_neg_cheque_vis_w	bigint;
nr_seq_trans_neg_cheque_pre_w	bigint;
nr_seq_trans_neg_cartao_cred_w	bigint;
nr_seq_trans_neg_cartao_deb_w	bigint;
nr_seq_trans_cheque_w		bigint;
nr_seq_trans_cartao_w		bigint;
nr_seq_forma_pag_cartao_neg_w	bigint;
nr_titulo_negociacao_w		bigint;
cd_banco_w			integer;
cd_moeda_padrao_w		integer;
cd_moeda_especie_w		integer;
cd_estabelecimento_w		smallint;
qt_parcela_w			smallint;
ie_acao_w			smallint;
dt_negociacao_w			timestamp;
dt_vencimento_cheque_w		timestamp;
dt_validade_caixa_w		timestamp;
dt_fechamento_w			timestamp;

C01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.nr_cheque, 
		a.cd_banco, 
		a.cd_agencia_bancaria, 
		a.nr_conta, 
		a.dt_vencimento, 
		a.vl_cheque 
	from	negociacao_cr_cheque	a 
	where	a.nr_seq_negociacao	= nr_seq_negociacao_p 
	and	(a.cd_banco IS NOT NULL AND a.cd_banco::text <> '') 
	and	(a.cd_agencia_bancaria IS NOT NULL AND a.cd_agencia_bancaria::text <> '') 
	and	(a.nr_conta IS NOT NULL AND a.nr_conta::text <> '') 
	order by 
		a.dt_vencimento;
	
C02 CURSOR FOR 
	SELECT	a.nr_sequencia,	 
		a.nr_autorizacao, 
		a.ds_comprovante, 
		a.nr_seq_bandeira, 
		a.qt_parcela, 
		a.vl_transacao, 
		a.ie_tipo_cartao, 
		a.nr_seq_forma_pagto 
	from	negociacao_cr_cartao	a 
	where	a.nr_seq_negociacao	= nr_seq_negociacao_p 
	and	(a.nr_seq_bandeira IS NOT NULL AND a.nr_seq_bandeira::text <> '') 
	and	(a.nr_autorizacao IS NOT NULL AND a.nr_autorizacao::text <> '') 
	and	(a.ds_comprovante IS NOT NULL AND a.ds_comprovante::text <> '');

C03 CURSOR FOR 
	SELECT	a.cd_moeda, 
		a.vl_especie 
	from	negociacao_cr_especie a 
	where	a.nr_seq_negociacao	= nr_seq_negociacao_p;

C04 CURSOR FOR 
	SELECT	a.nr_titulo, 
		a.vl_negociado 
	from	titulo_rec_negociado a 
	where	a.nr_seq_negociacao	= nr_seq_negociacao_p 
	order by 
		a.nr_titulo;

C05 CURSOR FOR 
	SELECT	a.nr_titulo 
	from	titulo_receber a 
	where	a.nr_seq_negociacao_origem	= nr_seq_negociacao_p;	
	 

BEGIN 
if (nr_seq_saldo_caixa_p IS NOT NULL AND nr_seq_saldo_caixa_p::text <> '') and (nr_seq_negociacao_p IS NOT NULL AND nr_seq_negociacao_p::text <> '') then	 
	select	a.dt_negociacao, 
		a.cd_pessoa_fisica, 
		a.cd_cgc, 
		a.cd_estabelecimento, 
		a.dt_validade_caixa, 
		a.dt_fechamento 
	into STRICT	dt_negociacao_w, 
		cd_pessoa_fisica_w, 
		cd_cgc_w, 
		cd_estabelecimento_w, 
		dt_validade_caixa_w, 
		dt_fechamento_w 
	from	negociacao_cr a 
	where	a.nr_sequencia	= nr_seq_negociacao_p;
	 
	if (coalesce(dt_fechamento_w::text, '') = '') then 
		CALL fechar_negociacao_cr(nr_seq_negociacao_p,nm_usuario_p);
	end if;
	 
	begin 
	select	a.cd_moeda_padrao, 
		a.nr_seq_trans_neg_cr, 
		a.nr_seq_trans_neg_cheque_vista, 
		a.nr_seq_trans_neg_cheque_pre, 
		a.nr_seq_trans_neg_cartao_cred, 
		a.nr_seq_trans_neg_cartao_deb, 
		nr_seq_forma_pag_cartao_neg 
	into STRICT	cd_moeda_padrao_w, 
		nr_seq_trans_fin_neg_w, 
		nr_seq_trans_neg_cheque_vis_w, 
		nr_seq_trans_neg_cheque_pre_w, 
		nr_seq_trans_neg_cartao_cred_w, 
		nr_seq_trans_neg_cartao_deb_w, 
		nr_seq_forma_pag_cartao_neg_w 
	from	parametro_contas_receber a 
	where	a.cd_estabelecimento	= cd_estabelecimento_w;
	exception 
		when no_data_found then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(185912);
	end;
	 
	if (coalesce(nr_seq_trans_fin_neg_w::text, '') = '') then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(185913);
	else 
		select	ie_acao, 
			ds_transacao 
		into STRICT	ie_acao_w, 
			ds_transacao_w 
		from	transacao_financeira a 
		where	a.nr_sequencia	= nr_seq_trans_fin_neg_w;
		 
		if (ie_acao_w <> 1) then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185914, 'DS_TRANSACAO_W=' || ds_transacao_w);
		end if;
	end if;
	 
	/* Consistir se passou da data de validade para recebimento no caixa */
 
	if (clock_timestamp() > coalesce(fim_dia(dt_validade_caixa_w),clock_timestamp())) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(185918,'DT_VALIDADE_CAIXA_W=' || to_char(dt_validade_caixa_w,'dd/mm/yyyy'));
	end if;
	 
	select	nextval('caixa_receb_seq') 
	into STRICT	nr_seq_recebimento_w 
	;
	 
	/* Criar recebimento de caixa */
 
	insert into caixa_receb(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		nr_seq_saldo_caixa, 
		nr_seq_trans_financ, 
		dt_recebimento, 
		vl_especie, 
		ie_tipo_receb, 
		nr_seq_negociacao_cr, 
		cd_pessoa_fisica, 
		cd_cgc) 
	values (nr_seq_recebimento_w, 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nr_seq_saldo_caixa_p, 
		nr_seq_trans_fin_neg_w, 
		clock_timestamp(), 
		0, 
		'R', 
		nr_seq_negociacao_p, 
		cd_pessoa_fisica_w, 
		cd_cgc_w);
		 
	/* Inserir no recebimento o título gerado pela negociação */
 
	 
	open C05;
	loop 
	fetch C05 into	 
		nr_titulo_negociacao_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin		 
		select	vl_saldo_titulo, 
			nr_seq_trans_fin_baixa 
		into STRICT	vl_titulo_negociacao_w, 
			nr_seq_trans_fin_baixa_w 
		from	titulo_receber a 
		where	a.nr_titulo	= nr_titulo_negociacao_w;
		 
		select	cd_tipo_recebimento 
		into STRICT	cd_tipo_recebimento_w 
		from	transacao_financeira 
		where	nr_sequencia	= nr_seq_trans_fin_neg_w;
		 
		if (coalesce(cd_tipo_recebimento_w::text, '') = '') then 
			select	max(cd_tipo_recebimento) 
			into STRICT	cd_tipo_recebimento_w 
			from	tipo_recebimento 
			where	ie_tipo_consistencia	= 0 
			and   ((cd_estabelecimento = cd_estabelecimento_w) or (coalesce(cd_estabelecimento::text, '') = ''));
		end if;
		 
		select	coalesce(max(nr_sequencia),0) + 1 
		into STRICT	nr_seq_baixa_w 
		from	titulo_receber_liq a 
		where	a.nr_titulo	= nr_titulo_negociacao_w;
		 
		insert into titulo_receber_liq(nr_titulo, 
			nr_sequencia, 
			nm_usuario, 
			dt_atualizacao, 
			nr_seq_caixa_rec, 
			dt_recebimento, 
			cd_moeda, 
			ie_acao, 
			ie_lib_caixa, 
			vl_recebido, 
			vl_descontos, 
			vl_juros, 
			vl_multa, 
			vl_glosa, 
			vl_rec_maior, 
			cd_tipo_recebimento, 
			nr_seq_trans_caixa, 
			nr_lote_contab_antecip, 
			nr_lote_contab_pro_rata, 
			nr_lote_contabil) 
		values (nr_titulo_negociacao_w, 
			nr_seq_baixa_w, 
			nm_usuario_p, 
			clock_timestamp(), 
			nr_seq_recebimento_w, 
			trunc(clock_timestamp(),'dd'), 
			cd_moeda_padrao_w, 
			'I', 
			'N', 
			vl_titulo_negociacao_w, 
			0, 
			0, 
			0, 
			0, 
			0, 
			cd_tipo_recebimento_w, 
			coalesce(nr_seq_trans_fin_baixa_w,nr_seq_trans_fin_neg_w), 
			0, 
			0, 
			0);
		end;
	end loop;
	close C05;
	 
	/* Inserir cheques conforme negociação */
 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_cheque_neg_w, 
		nr_cheque_w, 
		cd_banco_w, 
		cd_agencia_bancaria_w, 
		nr_conta_w, 
		dt_vencimento_cheque_w, 
		vl_cheque_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		nr_seq_trans_cheque_w	:= null;
		 
		if (nr_cheque_w IS NOT NULL AND nr_cheque_w::text <> '') then 
			/* Vencimento no mesmo dia da negociação considera como cheque a vista */
 
			if (trunc(dt_vencimento_cheque_w,'dd') = trunc(dt_negociacao_w,'dd')) then 
				nr_seq_trans_cheque_w	:= nr_seq_trans_neg_cheque_vis_w;
				if (coalesce(nr_seq_trans_neg_cheque_vis_w::text, '') = '') then 
					CALL wheb_mensagem_pck.exibir_mensagem_abort(185928);
				end if;
			else 
				nr_seq_trans_cheque_w	:= nr_seq_trans_neg_cheque_pre_w;
				if (coalesce(nr_seq_trans_neg_cheque_pre_w::text, '') = '') then 
					CALL wheb_mensagem_pck.exibir_mensagem_abort(263955);
				end if;
			end if;
		end if;
		 
		select	nextval('cheque_cr_seq') 
		into STRICT	nr_seq_cheque_w 
		;
		 
		insert into cheque_cr(nr_seq_cheque, 
			nm_usuario, 
			dt_atualizacao, 
			cd_estabelecimento, 
			ie_lib_caixa, 
			cd_pessoa_fisica, 
			cd_cgc, 
			nr_cheque, 
			dt_contabil, 
			dt_vencimento, 
			vl_cheque, 
			vl_terceiro, 
			cd_banco, 
			cd_agencia_bancaria, 
			nr_conta, 
			cd_moeda, 
			nr_seq_caixa_rec, 
			nr_seq_trans_caixa, 
			dt_registro) 
		values (nr_seq_cheque_w, 
			nm_usuario_p, 
			clock_timestamp(), 
			cd_estabelecimento_w, 
			'N', 
			cd_pessoa_fisica_w, 
			cd_cgc_w, 
			nr_cheque_w, 
			dt_negociacao_w, 
			dt_vencimento_cheque_w, 
			vl_cheque_w, 
			0, 
			cd_banco_w, 
			cd_agencia_bancaria_w, 
			nr_conta_w, 
			cd_moeda_padrao_w, 
			nr_seq_recebimento_w, 
			nr_seq_trans_cheque_w, 
			clock_timestamp());
			 
		update	negociacao_cr_cheque 
		set	nr_seq_cheque	= nr_seq_cheque_w 
		where	nr_sequencia	= nr_seq_cheque_neg_w;
		end;
	end loop;
	close C01;
	 
	/* Inserir cartões conforme negociação */
 
	open C02;
	loop 
	fetch C02 into	 
		nr_seq_cartao_neg_w, 
		nr_autorizacao_w, 
		ds_comprovante_w, 
		nr_seq_bandeira_w, 
		qt_parcela_w, 
		vl_transacao_w, 
		ie_tipo_cartao_w, 
		nr_seq_forma_pagto_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
		nr_seq_trans_cartao_w	:= null;
		 
		if (nr_autorizacao_w IS NOT NULL AND nr_autorizacao_w::text <> '') and (ie_tipo_cartao_w = 'C') and (coalesce(nr_seq_trans_neg_cartao_cred_w::text, '') = '') then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185934);			
		else 
			nr_seq_trans_cartao_w	:= nr_seq_trans_neg_cartao_cred_w;
		end if;
		 
		if (nr_autorizacao_w IS NOT NULL AND nr_autorizacao_w::text <> '') and (ie_tipo_cartao_w = 'D') and (coalesce(nr_seq_trans_neg_cartao_deb_w::text, '') = '') then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185935);
		else 
			if (coalesce(nr_seq_trans_cartao_w::text, '') = '') then 
				nr_seq_trans_cartao_w	:= nr_seq_trans_neg_cartao_deb_w;
			end if;
		end if;
		 
		if (coalesce(nr_seq_forma_pag_cartao_neg_w::text, '') = '') and (coalesce(nr_seq_forma_pagto_w::text, '') = '') then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185936);
		end if;
		 
		select	nextval('movto_cartao_cr_seq') 
		into STRICT	nr_seq_movto_cartao_w 
		;
		 
		insert into movto_cartao_cr(nr_sequencia, 
			nm_usuario, 
			dt_atualizacao, 
			nm_usuario_nrec, 
			dt_atualizacao_nrec, 
			ie_lib_caixa, 
			cd_estabelecimento, 
			nr_seq_caixa_rec, 
			dt_transacao, 
			vl_transacao, 
			ie_tipo_cartao, 
			nr_seq_bandeira, 
			qt_parcela, 
			nr_autorizacao, 
			ds_comprovante, 
			ie_situacao, 
			nr_seq_forma_pagto, 
			nr_seq_trans_caixa) 
		values (nr_seq_movto_cartao_w, 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			'N', 
			cd_estabelecimento_w, 
			nr_seq_recebimento_w, 
			clock_timestamp(), 
			vl_transacao_w, 
			ie_tipo_cartao_w, 
			nr_seq_bandeira_w, 
			qt_parcela_w, 
			nr_autorizacao_w, 
			ds_comprovante_w, 
			'A', 
			coalesce(nr_seq_forma_pagto_w,nr_seq_forma_pag_cartao_neg_w), 
			nr_seq_trans_cartao_w);
			 
		CALL gerar_cartao_cr_parcela(nr_seq_movto_cartao_w, 
					nm_usuario_p, 
					null);
			 
		update	negociacao_cr_cartao 
		set	nr_seq_movto_cartao	= nr_seq_movto_cartao_w 
		where	nr_sequencia		= nr_seq_cartao_neg_w;
		end;
	end loop;
	close C02;
	 
	/* Gerar valores em espécie */
 
	vl_total_especie_w	:= 0;
	 
	open C03;
	loop 
	fetch C03 into	 
		cd_moeda_especie_w, 
		vl_especie_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin 
		/* Se for moeda diferente da padrão deve converter */
 
		vl_convertido_w	:= vl_especie_w;
		if (cd_moeda_especie_w <> cd_moeda_padrao_w) then 
			vl_convertido_w	:= obter_conversao_moeda(vl_especie_w,cd_moeda_especie_w,clock_timestamp(),'EN');
		end if;
		vl_total_especie_w	:= vl_total_especie_w + vl_convertido_w;
		end;
	end loop;
	close C03;
	 
	update	caixa_receb 
	set	vl_especie	= vl_total_especie_w 
	where	nr_sequencia	= nr_seq_recebimento_w;
	 
	nr_seq_recebimento_p	:= nr_seq_recebimento_w;
end if;
 
/* Não pode dar commit */
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE receber_negociacao_cr ( nr_seq_saldo_caixa_p bigint, nr_seq_negociacao_p bigint, nm_usuario_p text, nr_seq_recebimento_p INOUT bigint) FROM PUBLIC;

