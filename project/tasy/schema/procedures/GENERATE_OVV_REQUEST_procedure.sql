-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE generate_ovv_request (cd_estabelecimento_p bigint, CD_PESSOA_FISICA_P text default null, nr_atendimento_p bigint default null, ie_calling_point_p text DEFAULT NULL, nm_usuario_p text DEFAULT NULL, cd_opv_type_p text default 'PVV', cd_seq_transaction_P INOUT text DEFAULT NULL, CD_error_string_p INOUT text DEFAULT NULL) AS $body$
DECLARE

						 
cd_opv_type_w                             varchar(3);
ds_address_w                              varchar(40);
nr_postcode_w                             varchar(4);
nm_alias_family_w                         varchar(40);
nm_alias_first_w                          varchar(40);
dt_birth_w                                timestamp;
nm_family_w                               varchar(40);
nm_first_w                                varchar(40);
ie_gender_w                               varchar(1);
nm_second_w                               varchar(40);
cd_provider_w                             varchar(8); --atendimento_paciente.cd_medico_resp%type;
cd_veteran_w                              varchar(9); --atend_categoria_convenio.cd_usuario_convenio%type;
nr_seq_ovv_w                              bigint;
ds_parameters_w                           varchar(1000);
cd_seq_transaction_w                  	  varchar(25);
nr_seq_pais_w                             bigint;
sg_pais_w                                 varchar(3);
cd_cep_w                                  bigint;
cd_attribute_w                            varchar(50);
cd_field_name_w                           varchar(50);

c03 CURSOR FOR
SELECT  nm_eclipse_field,
        nm_atributo
from    eclipse_attribute
where   ie_condition in ('M','C')
and     IE_OVV ='S';

BEGIN

select  nextval('ovv_request_seq')
into STRICT    nr_seq_ovv_w
;

if ( ie_calling_point_p = 'M') then
	
	select 	max(substr(a.cd_usuario_convenio, 1, 9))  cd_veteran
	into STRICT  cd_veteran_w
  from    pessoa_titular_convenio a,
		convenio b
	where   a.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
	and     a.CD_CONVENIO = b.CD_CONVENIO
	and     b.IE_TIPO_CONVENIO  = 13 -- DVA 
  LIMIT 1;

	select  max(Lpad(substr(u.NR_PROVIDER, 1,8),8,'0')) cd_provider
	into STRICT    cd_provider_w
	from    MEDICAL_PROVIDER_NUMBER u,
		atendimento_paciente a
	where   a.cd_pessoa_fisica = CD_PESSOA_FISICA_P
	and     u.CD_MEDICO = a.cd_medico_resp  LIMIT 1;
		
elsif (ie_calling_point_p = 'P') then
	
	select 	max(substr(a.cd_usuario_convenio, 1, 9))  cd_veteran
	into STRICT cd_veteran_w
  from    atend_categoria_convenio a,
		convenio b
	where   a.nr_atendimento = nr_atendimento_p
	and     a.CD_CONVENIO 	 = b.CD_CONVENIO
	and     b.IE_TIPO_CONVENIO  = 13 -- DVA 
  LIMIT 1;
	
	select  max(Lpad(substr(u.NR_PROVIDER, 1,8),8,'0')) cd_provider
	into STRICT    cd_provider_w
	from    MEDICAL_PROVIDER_NUMBER u,
		atendimento_paciente a
	where   a.nr_atendimento = nr_atendimento_p
	and     u.CD_MEDICO = a.cd_medico_resp  LIMIT 1;
	
end if;

select 	max(pkg_name_utils.get_person_name(b.nr_seq_person_name,cd_estabelecimento_p,'givenName')) NM_FIRST,
	max(pkg_name_utils.get_person_name(b.nr_seq_person_name,cd_estabelecimento_p,'familyName')) NM_FAMILY,
	max(pkg_name_utils.get_person_name(b.nr_seq_person_name,cd_estabelecimento_p,'middleName')) NM_SECOND,
	max(pkg_name_utils.get_person_name(b.nr_seq_person_name,cd_estabelecimento_p,'givenName'))  NM_ALIAS_FIRST,
	max(pkg_name_utils.get_person_name(b.nr_seq_person_name,cd_estabelecimento_p,'familyName')) NM_ALIAS_FAMILY,
        max(b.dt_nascimento) dt_birth,
        max(b.ie_sexo) ie_gender
into STRICT    nm_first_w,
        nm_family_w,
        nm_second_w,
        nm_alias_family_w,
        nm_alias_first_w,
        dt_birth_w,
        ie_gender_w
from    pessoa_fisica b
where   b.cd_pessoa_fisica = CD_PESSOA_FISICA_P  LIMIT 1;

select 	max(substr(DS_ENDERECO, 1, 40)) ds_address,
        generaterandomnumber cd_seq_transaction,
        max(c.nr_seq_pais),
        max(c.cd_cep)
into STRICT 	  ds_address_w,
        cd_seq_transaction_w,
        nr_seq_pais_w,
        cd_cep_w
from    pessoa_fisica b,
        compl_pessoa_fisica c       
where   b.cd_pessoa_fisica = CD_PESSOA_FISICA_P
and     c.cd_pessoa_fisica = b.cd_pessoa_fisica
and     c.ie_tipo_complemento = 1  LIMIT 1;

select  max(sg_pais) -- Max to avoid error message No Data found for user
into STRICT    sg_pais_w
from    pais
where   nr_sequencia      = nr_seq_pais_w;

if (sg_pais_w = 'AU') then
        nr_postcode_w  := cd_cep_w;
elsif (sg_pais_w = 'NZ') then
        nr_postcode_w  := '9302';
elsif (sg_pais_w = 'PG') then
        nr_postcode_w  := '9301';
else
	nr_postcode_w            := '0989';
end if;

for r03 in c03     loop

        cd_attribute_w := r03.nm_atributo;
        cd_field_name_w :=  r03.nm_eclipse_field;

if (cd_field_name_w = 'PatientAddressLocality') then
        if (coalesce(ds_address_w::text, '') = '' ) then
		CD_error_string_p := cd_error_string_p || Wheb_mensagem_pck.get_texto(1102998)  ||',';
        end if;

elsif (cd_field_name_w = 'PatientAddressPostcode') then
        if (coalesce(nr_postcode_w::text, '') = '' ) then
		CD_error_string_p := cd_error_string_p || Wheb_mensagem_pck.get_texto(1102999)  ||',';
        end if;

elsif (cd_field_name_w = 'PatientDateOfBirth') then
        if (coalesce(dt_birth_w::text, '') = '' ) then
		CD_error_string_p := cd_error_string_p || Wheb_mensagem_pck.get_texto(1101291)  ||',';
        end if;

elsif (cd_field_name_w = 'PatientFamilyName') then
        if (coalesce(nm_family_w::text, '') = '' ) then
		CD_error_string_p := cd_error_string_p || Wheb_mensagem_pck.get_texto(1101292)  ||',';
        end if;
               
elsif (cd_field_name_w = 'PatientFirstName') then
        if (coalesce(nm_first_w::text, '') = '' ) then
		CD_error_string_p := cd_error_string_p || Wheb_mensagem_pck.get_texto(1101293)  ||',';
        end if;

elsif (cd_field_name_w = 'VeteranFileNum') then
        if (coalesce(cd_veteran_w::text, '') = '' and cd_opv_type_p = 'PVV') then 
		CD_error_string_p := cd_error_string_p || Wheb_mensagem_pck.get_texto(1102997)  ||',';
        end if;
end if;
end loop;


if (coalesce(CD_error_string_p::text, '') = '') then



insert into ovv_request(nr_sequencia,
               dt_atualizacao,
               nm_usuario,
               dt_atualizacao_nrec,
               nm_usuario_nrec,
               cd_opv_type,
               ds_address,
               nr_postcode,
               nm_alias_family,
               nm_alias_first,
               dt_birth,
               nm_family,
               nm_first,
               ie_gender,
               cd_veteran,
               nm_second,
               cd_provider,
               cd_seq_transaction,
               ie_status_tasy,
               NR_ATENDIMENTO)
values (nr_seq_ovv_w,
               clock_timestamp(),
               nm_usuario_p,
               clock_timestamp(),
               nm_usuario_p,
               cd_opv_type_p,
               ds_address_w,
               nr_postcode_w,
               nm_alias_family_w,
               nm_alias_first_w,
               dt_birth_w,
               nm_family_w,
               nm_first_w,
               ie_gender_w,
               cd_veteran_w,
               nm_second_w,
               cd_provider_w,
               cd_seq_transaction_w,
               'P',
               nr_atendimento_p);
               cd_seq_transaction_p := cd_seq_transaction_w;
commit;

end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE generate_ovv_request (cd_estabelecimento_p bigint, CD_PESSOA_FISICA_P text default null, nr_atendimento_p bigint default null, ie_calling_point_p text DEFAULT NULL, nm_usuario_p text DEFAULT NULL, cd_opv_type_p text default 'PVV', cd_seq_transaction_P INOUT text DEFAULT NULL, CD_error_string_p INOUT text DEFAULT NULL) FROM PUBLIC;

