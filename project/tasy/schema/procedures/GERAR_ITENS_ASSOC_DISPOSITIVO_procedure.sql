-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_itens_assoc_dispositivo (ie_bomba_infusao_p text, nr_prescricao_p bigint, cd_perfil_p bigint, cd_estabelecimento_p bigint, nr_seq_material_p bigint, nr_seq_solucao_p bigint, nm_usuario_p text, nr_seq_horario_p bigint) AS $body$
DECLARE


nr_seq_acum_w			bigint;
nr_agrup_acum_w			double precision;
cd_material_w			integer;
nr_seq_proc_w			bigint;
nr_seq_map_w			bigint;
cd_unidade_medida_w		varchar(30);
qt_dose_w				double precision;
qt_conversao_w			double precision;
nr_sequencia_w			bigint;
qt_w					bigint;
cd_intervalo_w			varchar(7);
ds_horarios_w			varchar(2000);
ds_horarios_ww			varchar(2000);
ds_horarios2_ww			varchar(2000);
nr_ocorrencia_w			bigint := 0;
nr_ocorrencia_proced_w	bigint := 0;
cd_estabelecimento_w	smallint;
nr_seq_item_w			integer;
nr_seq_regra_w			bigint;
cd_convenio_w			bigint;
ie_tipo_item_w			bigint;
cont_w					bigint;
nr_seq_procedimento_novo_w	bigint;
nr_atendimento_w		bigint;
ie_bomba_elastomerica_w	bigint;
qt_total_disp_w			double precision;
ds_erro_w				varchar(255);
cd_pessoa_fisica_w		varchar(255);
ie_via_aplicacao_w		varchar(5);
ie_por_dia_w			varchar(5);
dt_primeiro_horario_w	timestamp;
dt_prescricao_w			timestamp;
dt_horario_adm_w		timestamp;
nr_horas_validade_w		integer;
ie_regra_disp_w			varchar(1);
ie_forma_lancamento_w	varchar(1);
ie_lancar_w				varchar(1);
ds_horarios_proced_w	varchar(255);
ds_horarios_proced2_w	varchar(255);
nr_seq_proc_interno_w	bigint;
cd_setor_atendimento_w	bigint;
cd_setor_atendimento_ww	bigint;
qt_procedimento_w		double precision;
cd_proced_adic_w		bigint;
ie_origem_proc_adic_w	bigint;
ie_plano_w				varchar(1);
dt_inicio_prescr_w		timestamp;
nr_seq_material_ww		bigint;	
nr_seq_material_w		prescr_material.nr_sequencia%type;
nr_seq_solucao_w		prescr_solucao.nr_seq_solucao%type;
ie_bomba_infusao_w		prescr_solucao.ie_bomba_infusao%type;
ie_item_disp_gerado_w	prescr_material_compl.ie_item_disp_gerado%type;
ie_se_necessario_w		varchar(1) := 'N';
cd_material_ww			prescr_material.cd_material%type;
cd_grupo_material_w		estrutura_material_v.cd_grupo_material%type;
cd_subgrupo_w			estrutura_material_v.cd_subgrupo_material%type;
cd_classe_material_w	estrutura_material_v.cd_classe_material%type;
cd_intervalo_ww			prescr_material.cd_intervalo%type;
ie_urgencia_w			prescr_solucao.ie_urgencia%type;

C01 CURSOR FOR
SELECT	nr_seq_acum_w + row_number() OVER () AS rownum,
		a.cd_material,
		a.cd_unidade_medida,
		a.qt_dose,
		a.ie_via_aplicacao,
		a.cd_intervalo,
		a.ds_horarios,
		a.ie_tipo_item,
		coalesce(a.ie_forma_lancamento,'P')
from	rep_dispositivo_material a
where	a.nr_seq_regra	= nr_seq_regra_w
and		((coalesce(cd_convenio::text, '') = '') or (cd_convenio = cd_convenio_w))
and 	((coalesce(cd_classe_material::text, '') = '') or (cd_classe_material = cd_classe_material_w))
and 	((coalesce(cd_subgrupo_material::text, '') = '') or (cd_subgrupo_material = cd_subgrupo_w))
and 	((coalesce(cd_grupo_material::text, '') = '') or (cd_grupo_material = cd_grupo_material_w))
and		((coalesce(ie_bomba_elastomerica::text, '') = '') or (ie_bomba_elastomerica = ie_bomba_elastomerica_w))
and		((coalesce(cd_medicamento::text, '') = '') or (cd_medicamento = cd_material_ww));

c02 CURSOR FOR
SELECT	nr_seq_proc_interno,
	cd_intervalo,
	cd_setor_atendimento,
	qt_procedimento,
	coalesce(ie_plano,'S'),
	coalesce(ie_forma_lancamento,'P'),
	coalesce(ie_por_dia,'N')
from	rep_dispositivo_proced a
where	a.nr_seq_regra	= nr_seq_regra_w;

c03 CURSOR FOR
SELECT	nr_seq_solucao,
		coalesce(ie_bomba_infusao,'N')
from	prescr_solucao
where	nr_prescricao = nr_prescricao_p
and		coalesce(ie_hemodialise,'N') = 'N'
and		coalesce(ie_bomba_infusao,'N') <> 'N'
and		coalesce(ie_item_disp_gerado,'N') <> 'S';

c04 CURSOR FOR
SELECT	a.nr_sequencia,
		coalesce(a.ie_bomba_infusao,'N'),
		a.cd_material
from	prescr_material a
where	coalesce(a.nr_seq_kit::text, '') = ''
and		a.nr_prescricao	= nr_prescricao_p
and		coalesce(a.ie_bomba_infusao,'N') <> 'N'
and 	coalesce(a.nr_sequencia_solucao,0) = 0
and	not exists (SELECT 	1
				from 	prescr_material_compl b
				where	b.nr_prescricao = a.nr_prescricao
				and		b.nr_sequencia  = a.nr_sequencia
				and		coalesce(b.ie_item_disp_gerado,'N') = 'S');
				
c05 CURSOR FOR
SELECT	a.cd_material,
		a.nr_sequencia
from	prescr_material a
where	nr_prescricao			= nr_prescricao_p
and		nr_sequencia_solucao	= coalesce(nr_seq_solucao_w,nr_seq_solucao_p);		

procedure gerar_dispositivo(nr_seq_solucao_p 	bigint,
							 nr_seq_material_p	bigint,
							 ie_bomba_infusao_p	text,
							 nr_seq_componente_p	bigint) is
;
BEGIN

nr_seq_solucao_w 	:= nr_seq_solucao_p;
nr_seq_material_w 	:= nr_seq_material_p;
ie_bomba_infusao_w 	:= ie_bomba_infusao_p;
nr_seq_material_ww	:= nr_seq_componente_p;

if (coalesce(nr_seq_solucao_w,0) > 0) then

	select	max(nr_sequencia)
	into STRICT	nr_seq_regra_w
	from	rep_dispositivo
	where	ie_bomba_infusao = ie_bomba_infusao_w
	and		ie_tipo_item = 1;

else

	select	max(nr_sequencia)
	into STRICT	nr_seq_regra_w
	from	rep_dispositivo
	where	ie_bomba_infusao = ie_bomba_infusao_w
	and		ie_tipo_item = 2;

end if;

cd_intervalo_ww	:= null;

if (coalesce(nr_seq_solucao_w,0) > 0) then
	select	max(ie_bomba_elastomerica),
			max(cd_intervalo),
			coalesce(max(ie_urgencia),'N')			
	into STRICT	ie_bomba_elastomerica_w,
			cd_intervalo_ww,
			ie_urgencia_w			
	from	prescr_solucao
	where	nr_prescricao	= nr_prescricao_p
	and		nr_seq_solucao	= nr_seq_solucao_w;
else
	select 	max(cd_intervalo),
			coalesce(max(ie_urgencia),'N')
	into STRICT	cd_intervalo_ww,
			ie_urgencia_w
	from	prescr_material
	where 	nr_prescricao = nr_prescricao_p
	and		nr_sequencia = nr_seq_material_p;
	
end if;

select	max(cd_estabelecimento),
	max(dt_primeiro_horario),
	max(dt_prescricao),
	max(cd_pessoa_fisica),
	max(nr_atendimento),
	max(nr_horas_validade),
	max(dt_inicio_prescr),
	max(cd_setor_atendimento),
	max(obter_convenio_atendimento(nr_atendimento))
into STRICT	cd_estabelecimento_w,
	dt_primeiro_horario_w,
	dt_prescricao_w,
	cd_pessoa_fisica_w,
	nr_atendimento_w,
	nr_horas_validade_w,
	dt_inicio_prescr_w,
	cd_setor_atendimento_ww,
	cd_convenio_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

select	coalesce(max(nr_sequencia),0),
	coalesce(max(nr_agrupamento),0)
into STRICT	nr_seq_acum_w, 
	nr_agrup_acum_w
from	prescr_material
where	nr_prescricao = nr_prescricao_p;

open C01;
loop
fetch C01 into	
	nr_sequencia_w,
	cd_material_w,
	cd_unidade_medida_w,
	qt_dose_w,
	ie_via_aplicacao_w,
	cd_intervalo_w,
	ds_horarios_w,
	ie_tipo_item_w,
	ie_forma_lancamento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	select	coalesce(max(qt_conversao),1)
	into STRICT	qt_conversao_w
	from	material_conversao_unidade
	where	cd_material		= cd_material_w
	and	cd_unidade_medida	= cd_unidade_medida_w;

	/* Oraci em 21/01/2008 */

	select	nr_horas_validade
	into STRICT	nr_horas_validade_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;

	if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then

		select	coalesce(max(ie_agora),'N')
		into STRICT	ie_urgencia_w
		from	intervalo_prescricao
		where	cd_intervalo = cd_intervalo_w;

	end if;

	if (coalesce(cd_intervalo_w::text, '') = '') and (cd_intervalo_ww IS NOT NULL AND cd_intervalo_ww::text <> '') then
		cd_intervalo_w	:= cd_intervalo_ww;
	end if;

	select	obter_ocorrencia_intervalo(cd_intervalo_w, nr_horas_validade_w, 'O')
	into STRICT	nr_ocorrencia_w
	;
	
	if (coalesce(ds_horarios_w::text, '') = '') then
	
		SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, coalesce(dt_primeiro_horario_w,dt_prescricao_w), coalesce(dt_primeiro_horario_w,dt_prescricao_w), 24, cd_material_w, null, null, nr_ocorrencia_w, ds_horarios_ww, ds_horarios2_ww, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horarios_ww, ds_horarios2_ww;

		ds_horarios_w	:= ds_horarios_ww || ds_horarios2_ww;
		
	end if;

	if (coalesce(nr_seq_solucao_w,0) > 0) then

		select	count(1)
		into STRICT	qt_w
		from	prescr_solucao
		where	nr_prescricao = nr_prescricao_p
		and		nr_seq_solucao = nr_seq_solucao_w
		and		coalesce(ie_item_disp_gerado, 'N') = 'S';

	else

		select	count(1)
		into STRICT	qt_w
		from	prescr_material_compl b
		where	b.nr_prescricao = nr_prescricao_p
		and		b.nr_sequencia  = nr_seq_material_w
		and		coalesce(b.ie_item_disp_gerado,'N') = 'S';

	end if;
		
	if (ie_forma_lancamento_w = 'P') and (coalesce(nr_seq_horario_p::text, '') = '') and (qt_w = 0) then
				
		if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
			select 	coalesce(max('S'),'N')
			into STRICT 	ie_se_necessario_w
			from    intervalo_prescricao
			where   ie_se_necessario     = 'S'
			and		cd_intervalo = cd_intervalo_w
			and		coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w;
		end if;

		Insert	into Prescr_material(
			nr_prescricao,
			nr_sequencia,
			ie_origem_inf,
			cd_material,
			cd_unidade_medida_dose,
			cd_unidade_medida,
			qt_dose,
			qt_unitaria,
			qt_material,
			dt_atualizacao,
			nm_usuario,
			cd_intervalo,
			ds_observacao,
			ie_agrupador,
			ie_medicacao_paciente,
			ie_se_necessario,
			ie_urgencia,
			ie_suspenso,
			ie_utiliza_kit,
			ie_status_cirurgia,
			ie_bomba_infusao,
			ie_aplic_bolus, 
			ie_aplic_lenta, 
			ie_acm,
			cd_motivo_baixa,
			dt_baixa,
			qt_conversao_dose,
			ds_horarios,
			nr_ocorrencia,
			ie_via_aplicacao,
			ie_recons_diluente_fixo,
			ie_sem_aprazamento,
			ie_cobra_paciente,
			ie_intervalo_dif,
			hr_prim_horario,
			ie_checar_adep,
			ie_gerado_bomba,
			nr_seq_mat_disp,
			nr_prescricao_original)
		values (	nr_prescricao_p,
			nr_sequencia_w,
			'A',
			cd_material_w,
			cd_unidade_medida_w,
			cd_unidade_medida_w,
			qt_dose_w,
			dividir(qt_dose_w,qt_conversao_w),
			qt_dose_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_intervalo_w,
			null,
			coalesce(ie_tipo_item_w,1),
			'N',
			coalesce(ie_se_necessario_w,'N'),
			ie_urgencia_w,
			'N',
			'N',
			'GI',
			'N',
			'N',
			'N',
			'N',
			0,
			null,
			qt_conversao_w,
			ds_horarios_w,
			nr_ocorrencia_w,
			ie_via_aplicacao_w,
			'N',
			'N',
			'S',
			'N',
			to_char(coalesce(dt_primeiro_horario_w,dt_prescricao_w),'hh24:mi'),
			'N',
			'S',
			nr_seq_material_ww,
			nr_prescricao_p);	
			
		if (coalesce(nr_seq_material_w,0) > 0) then
		
			select 	coalesce(max(ie_item_disp_gerado),'X')
			into STRICT	ie_item_disp_gerado_w
			from	prescr_material_compl
			where 	nr_prescricao = nr_prescricao_p
			and		nr_sequencia = nr_seq_material_w;
			
			if (ie_item_disp_gerado_w = 'X') then
				CALL gerar_prescr_mat_compl(nr_prescricao_p,nr_seq_material_w,nm_usuario_p,'S');
			elsif (ie_item_disp_gerado_w = 'N') then
			
				update 	prescr_material_compl
				set		ie_item_disp_gerado = 'S'
				where 	nr_prescricao = nr_prescricao_p
				and		nr_sequencia = nr_seq_material_w;
			end if;	
		end if;

		SELECT * FROM Obter_Quant_Dispensar(cd_estabelecimento_w, cd_material_w, NR_PRESCRICAO_P, nr_sequencia_w, cd_intervalo_w, null, dividir(qt_dose_w,qt_conversao_w), null, nr_ocorrencia_w, null, '1', cd_unidade_medida_w, 1, qt_dose_w, qt_total_disp_w, ie_regra_disp_w, ds_erro_w, 'N', 'N') INTO STRICT qt_dose_w, qt_total_disp_w, ie_regra_disp_w, ds_erro_w;
			
		update	prescr_material
		set	qt_material		= qt_dose_w,
			qt_total_dispensar	= qt_total_disp_w,
			ie_regra_disp		= CASE WHEN coalesce(ie_regra_disp,'X')='D' THEN  ie_regra_disp  ELSE ie_regra_disp_w END
		where	nr_prescricao		= nr_prescricao_p
		and	nr_sequencia		= nr_sequencia_w;

		CALL Gerar_Reconst_Diluicao(nr_prescricao_p, nr_sequencia_w,'A');
		
		nr_seq_acum_w:= nr_seq_acum_w + 1;
		
		if (coalesce(nr_seq_solucao_w,0) > 0) and (coalesce(nr_seq_material_ww,0) > 0) then
		
			update	prescr_solucao
			set		ie_item_disp_gerado = 'S'
			where 	nr_seq_solucao = nr_seq_solucao_w
			and 	nr_prescricao  = nr_prescricao_p;
		end if;	
	elsif (ie_forma_lancamento_w = 'A') and (nr_seq_horario_p IS NOT NULL AND nr_seq_horario_p::text <> '') then
	
		select	max(dt_horario)
		into STRICT	dt_horario_adm_w
		from	prescr_mat_hor
		where	nr_sequencia = nr_seq_horario_p;
	
		nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_p, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, null, null, null);
		
	end if;
	
end loop;
close C01;

open C02;
loop
fetch C02 into	
	nr_seq_proc_interno_w,
	cd_intervalo_w,
	cd_setor_atendimento_w,
	qt_procedimento_w,
	ie_plano_w,
	ie_forma_lancamento_w,
	ie_por_dia_w;
EXIT WHEN NOT FOUND; /* apply on C02 */

	SELECT * FROM obter_proc_tab_interno(nr_seq_proc_interno_w, nr_prescricao_p, nr_atendimento_w, 0, cd_proced_adic_w, ie_origem_proc_adic_w, null, null) INTO STRICT cd_proced_adic_w, ie_origem_proc_adic_w;
	
	if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then	
		SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, dt_prescricao_w, coalesce(dt_inicio_prescr_w,dt_prescricao_w), nr_horas_validade_w, cd_proced_adic_w, 0, 0, nr_ocorrencia_proced_w, ds_horarios_proced_w, ds_horarios_proced2_w, 'N', null) INTO STRICT nr_ocorrencia_proced_w, ds_horarios_proced_w, ds_horarios_proced2_w;
					
		nr_ocorrencia_w := nr_ocorrencia_proced_w;
		ds_horarios_w	:= ds_horarios_proced_w;
	end if;

	select 	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_seq_procedimento_novo_w
	from	prescr_procedimento
	where 	nr_prescricao = nr_prescricao_p;
	
	ie_lancar_w	:= 'S';
	if (ie_por_dia_w	= 'S') then
		select	count(*)
		into STRICT	cont_w
		from	prescr_procedimento
		where	nr_prescricao		= nr_prescricao_p
		and	cd_procedimento		= cd_proced_adic_w
		and	ie_origem_proced	= ie_origem_proc_adic_w
		and	nr_seq_proc_interno	= nr_seq_proc_interno_w;
		
		if (cont_w > 0) then
			ie_lancar_w	:= 'N';
		end if;
	end if;
	
	if (ie_lancar_w	= 'S') and (ie_forma_lancamento_w = 'P') and (coalesce(nr_seq_horario_p::text, '') = '') then
		insert into prescr_procedimento(
			nr_prescricao,
			nr_sequencia,
			nr_seq_origem,
			dt_prev_execucao,
			qt_procedimento,
			nm_usuario,
			dt_atualizacao,
			cd_procedimento,
			ie_origem_proced,
			nr_seq_proc_interno,
			ie_urgencia,
			cd_setor_atendimento,
			ie_origem_inf,
			cd_motivo_baixa,
			ie_suspenso,
			ds_observacao,
			ds_dado_clinico,
			nr_ocorrencia,
			ds_horarios,
			ie_plano,
			nr_seq_prescr_mat,
			nr_seq_prescr_sol,
			cd_intervalo)
		values (nr_prescricao_p,
			nr_seq_procedimento_novo_w,
			null,
			dt_inicio_prescr_w,
			qt_procedimento_w,
			nm_usuario_p,
			clock_timestamp(),
			cd_proced_adic_w,
			ie_origem_proc_adic_w,
			nr_seq_proc_interno_w,
			'N',
			cd_setor_atendimento_w,
			1,
			0,
			'N',
			--'Gerado automaticamento ao liberar a prescricao ',
			OBTER_DESC_EXPRESSAO(728239),
			null,
			nr_ocorrencia_w,
			ds_horarios_w,
			ie_plano_w,
			nr_seq_material_w,
			nr_seq_solucao_w,
			cd_intervalo_w);
	elsif (ie_forma_lancamento_w = 'A') and (nr_seq_horario_p IS NOT NULL AND nr_seq_horario_p::text <> '') then
		ie_lancar_w	:= 'S';
		if (ie_por_dia_w	= 'S') then
			select	count(*)
			into STRICT	cont_w
			from	procedimento_paciente
			where	nr_prescricao		= nr_prescricao_p
			and	cd_procedimento		= cd_proced_adic_w
			and	ie_origem_proced	= ie_origem_proc_adic_w
			and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp());
			
			if (cont_w > 0) then
				ie_lancar_w	:= 'N';
			end if;
		elsif (ie_por_dia_w = 'T') then
			if (nr_seq_solucao_w IS NOT NULL AND nr_seq_solucao_w::text <> '') then
				select	count(*)
				into STRICT		cont_w
				from		procedimento_paciente
				where	nr_prescricao = nr_prescricao_p
				and		nr_seq_solucao = nr_seq_solucao_w;
				
				if (cont_w > 0) then
					ie_lancar_w := 'N';
				end if;
			elsif (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
				select	count(*)
				into STRICT		cont_w
				from		procedimento_paciente
				where	nr_prescricao = nr_prescricao_p
				and		nr_seq_prescr_mat = nr_seq_material_w;
				
				if (cont_w > 0) then
					ie_lancar_w := 'N';
				end if;
			end if;
		elsif (ie_por_dia_w = 'M') then

      if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
        select	count(*)
        into STRICT	cont_w
        from	procedimento_paciente
        where	nr_prescricao		= nr_prescricao_p
        and	cd_procedimento		= cd_proced_adic_w
        and	ie_origem_proced	= ie_origem_proc_adic_w
        and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp())
        and nr_seq_prescr_mat = nr_seq_material_w;

      elsif (nr_seq_solucao_w IS NOT NULL AND nr_seq_solucao_w::text <> '') then
        select	count(*)
        into STRICT	cont_w
        from	procedimento_paciente
        where	nr_prescricao		= nr_prescricao_p
        and	cd_procedimento		= cd_proced_adic_w
        and	ie_origem_proced	= ie_origem_proc_adic_w
        and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp())
        and nr_seq_solucao = nr_seq_solucao_w;
      end if;

			if (cont_w > 0) then
				ie_lancar_w	:= 'N';
			end if;

    end if;
		
		if (ie_lancar_w = 'S') then
			CALL ADEP_gerar_lancto_Disp_medic(nr_seq_proc_interno_w, null, nr_atendimento_w, cd_proced_adic_w, ie_origem_proc_adic_w, qt_procedimento_w, nm_usuario_p,nr_prescricao_p,nr_seq_solucao_w,nr_seq_material_w);
		end if;
	end if;
end loop;
close C02;
end;
		
begin

if (coalesce(nr_seq_solucao_p,0) = 0) and (coalesce(nr_seq_material_p,0) = 0) then

	open C03;
	loop
	fetch C03 into	
		nr_seq_solucao_w,
		ie_bomba_infusao_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
				
			for C05_w in C05 loop
			begin
				
				select	max(cd_grupo_material),
						max(cd_subgrupo_material),
						max(cd_classe_material)
				into STRICT	cd_grupo_material_w,
						cd_subgrupo_w,
						cd_classe_material_w
				from	estrutura_material_v
				where 	cd_material	= c05_w.cd_material;
				
				cd_material_ww	:=	c05_w.cd_material;
				
				gerar_dispositivo(nr_seq_solucao_w, null, ie_bomba_infusao_w, c05_w.nr_sequencia);
				
				
			end;
			end loop;	
			
		end;
	end loop;
	close C03;
		
	open C04;
	loop
	fetch C04 into	
		nr_seq_material_w,
		ie_bomba_infusao_w,
		cd_material_ww;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		
			select	max(cd_grupo_material),
					max(cd_subgrupo_material),
					max(cd_classe_material)
			into STRICT	cd_grupo_material_w,
					cd_subgrupo_w,
					cd_classe_material_w
			from	estrutura_material_v
			where 	cd_material	= cd_material_ww;
					
			gerar_dispositivo(null, nr_seq_material_w, ie_bomba_infusao_w, null);
		end;
	end loop;
	close C04;
else

	for C05_w in C05 loop
	begin
		
		select	max(cd_grupo_material),
				max(cd_subgrupo_material),
				max(cd_classe_material)
		into STRICT	cd_grupo_material_w,
				cd_subgrupo_w,
				cd_classe_material_w
		from	estrutura_material_v
		where 	cd_material	= c05_w.cd_material;
		
		cd_material_ww	:=	c05_w.cd_material;
		
		gerar_dispositivo(nr_seq_solucao_p, nr_seq_material_p, ie_bomba_infusao_p, c05_w.nr_sequencia);	
		
	end;
	end loop;	
	
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_itens_assoc_dispositivo (ie_bomba_infusao_p text, nr_prescricao_p bigint, cd_perfil_p bigint, cd_estabelecimento_p bigint, nr_seq_material_p bigint, nr_seq_solucao_p bigint, nm_usuario_p text, nr_seq_horario_p bigint) FROM PUBLIC;

