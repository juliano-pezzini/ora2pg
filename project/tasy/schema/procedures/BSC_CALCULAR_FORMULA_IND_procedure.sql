-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE bsc_calcular_formula_ind ( nr_seq_indicador_p bigint, nr_seq_ind_inf_p bigint, nr_seq_regra_calc_p bigint, qt_real_p INOUT bigint) AS $body$
DECLARE


i				integer		:= 0;
ie_participacao_calc_w		varchar(15);
ie_regra_apuracao_w		varchar(15);
nr_sequencia_w			bigint;
qt_real_w				double precision;
vl_acumulado_w			double precision 	:= 0;
vl_fixo_w				double precision;
vl_maior_w			double precision 	:= 0;
vl_menor_w			double precision 	:= 99999999999;
vl_primeiro_w			double precision	:= 0;
vl_segundo_w			double precision	:= 0;

/* Buscar regras de formula para calculo do indicador passado por parÃ¢metro*/

c01 CURSOR FOR
SELECT	nr_sequencia,
	ie_participacao_calc,
	coalesce(vl_fixo,0)
from	bsc_regra_formula
where	nr_seq_regra_calc	= nr_seq_regra_calc_p
order by nr_sequencia;


BEGIN

select	ie_regra_apuracao
into STRICT	ie_regra_apuracao_w
from	bsc_regra_calc_ind
where	nr_sequencia		= nr_seq_regra_calc_p;

open C01;
loop
fetch C01 into
	nr_sequencia_w,
	ie_participacao_calc_w,
	vl_fixo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	i	:= i + 1;
	if (ie_participacao_calc_w = 'VF') then
		qt_real_w	:= vl_fixo_w;
	elsif (ie_participacao_calc_w = 'IV') then
		begin
		qt_real_w	:= bsc_obter_valor_intervalo(nr_seq_ind_inf_p,nr_sequencia_w);
		end;
	elsif (ie_participacao_calc_w = 'RI') then
		qt_real_w	:= bsc_obter_valor_classif_result(nr_seq_ind_inf_p,nr_sequencia_w);
	elsif (ie_participacao_calc_w = 'VIO') then
		qt_real_w	:= bsc_obter_valor_indicador(nr_seq_ind_inf_p,nr_sequencia_w);
	end if;
	vl_acumulado_w	:= vl_acumulado_w + qt_real_w;
	if (qt_real_w > vl_maior_w) then
		vl_maior_w	:= qt_real_w;
	end if;
	if (qt_real_w < vl_menor_w) then
		vl_menor_w	:= qt_real_w;
	end if;
	if (ie_regra_apuracao_w = 'D12') OR (ie_regra_apuracao_w = '%12') then
		if (i = 1) then
			vl_primeiro_w	:= bsc_obter_valor_indicador(nr_seq_ind_inf_p,nr_sequencia_w);
		else
			begin
			if (ie_participacao_calc_w = 'VF') then
				vl_segundo_w	:= qt_real_w;
			else
				vl_segundo_w	:= bsc_obter_valor_indicador(nr_seq_ind_inf_p,nr_sequencia_w);
			end if;
			end;
		end if;
	end if;
	end;
end loop;
close C01;
if (ie_regra_apuracao_w = 'SM') then
	qt_real_w	:= vl_acumulado_w;
elsif (ie_regra_apuracao_w = 'MA') then
	qt_real_w	:= vl_maior_w;
elsif (ie_regra_apuracao_w = 'ME') then
	qt_real_w	:= vl_menor_w;
elsif (ie_regra_apuracao_w = 'MD') then
	qt_real_w	:= dividir(vl_acumulado_w,i);
elsif (ie_regra_apuracao_w = 'D12') then
	qt_real_w	:= dividir(vl_primeiro_w,vl_segundo_w);
elsif (ie_regra_apuracao_w = '%12') then
	qt_real_w	:= dividir(vl_primeiro_w * 100,vl_segundo_w);
end if;
qt_real_p	:= coalesce(qt_real_w,0);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE bsc_calcular_formula_ind ( nr_seq_indicador_p bigint, nr_seq_ind_inf_p bigint, nr_seq_regra_calc_p bigint, qt_real_p INOUT bigint) FROM PUBLIC;

