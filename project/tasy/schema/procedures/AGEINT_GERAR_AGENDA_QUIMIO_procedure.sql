-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_gerar_agenda_quimio ( nr_seq_pend_quimio_p bigint, cd_paciente_p text, cd_profissional_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_ageint_quimio_p INOUT text, cd_prof_p INOUT text, nr_seq_status_p INOUT text, dt_agenda_p INOUT text ) AS $body$
DECLARE

                  
                    
nr_telefone_w				varchar(60);
qt_altura_cm_w				real;
dt_nascimento_w				timestamp;
dt_inicio_agendamento_w		timestamp;
nm_paciente_w				varchar(60);
nr_seq_status_w				bigint;
nr_duracao_w				bigint;
ie_insere_convenio_w		varchar(1);
nr_seq_ageint_w				bigint;
grupo_quimio_w				bigint;
tipo_grupo_quimio_w			varchar(15);
ie_tipo_atendimento_w 		varchar(20);
nr_seq_pendencia_w			w_pendencia_agequi.nr_seq_pendencia%type;
dt_prevista_w				timestamp;
nr_doc_convenio_w varchar(20);
nr_seq_cobertura_w varchar(20);
--
ie_convenio_w varchar(1);
cd_pessoa_fisica_w smallint;
param_agenda_integrada325_w varchar(15);
param_agenda_integrada13_w varchar(15);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
dt_validade_w			timestamp;
cd_usuario_convenio_w	varchar(30);
cd_tipo_acomodacao_w	smallint;
cd_plano_w				varchar(10);
nr_seq_atendimento_w  paciente_atendimento.nr_seq_atendimento%type;

C01 CURSOR FOR
	SELECT DISTINCT c.nr_sequencia
	FROM paciente_setor a,
			paciente_atendimento b,
			qt_pendencia_agenda c
	WHERE a.nr_seq_paciente	= b.nr_seq_paciente
		AND	b.nr_seq_pend_agenda = c.nr_sequencia
		AND	(c.nr_sequencia = nr_seq_pend_quimio_p
		OR (a.ie_agendamento_multiplo = 'S'
			AND c.nr_sequencia <> nr_seq_pend_quimio_p
			AND a.nr_grupo_agendamento = (
			  SELECT MAX(wp.nr_grupo_agendamento)
			  FROM w_pendencia_agequi wp
			  WHERE wp.nr_seq_pendencia = nr_seq_pend_quimio_p
				AND (wp.nr_grupo_agendamento IS NOT NULL AND wp.nr_grupo_agendamento::text <> '')
			)
			AND a.cd_pessoa_fisica = (
			  SELECT MAX(wp.cd_pessoa_fisica)
			  FROM w_pendencia_agequi wp
			  WHERE wp.nr_seq_pendencia = nr_seq_pend_quimio_p
				AND (wp.nr_grupo_agendamento IS NOT NULL AND wp.nr_grupo_agendamento::text <> '')
			)
		))
	ORDER BY c.nr_sequencia ASC;


BEGIN


if (cd_paciente_p IS NOT NULL AND cd_paciente_p::text <> '') and (coalesce(nr_seq_pend_quimio_p,0) > 0) then
	
	nr_telefone_w			:= substr(obter_fone_pac_agenda(cd_paciente_p),1,60);
	dt_nascimento_w			:= to_date(obter_dados_pf(cd_paciente_p,'DN'),'dd/mm/yyyy');
	qt_altura_cm_w			:= obter_dados_pf(cd_paciente_p,'AL');
	nm_paciente_w			:= substr(obter_nome_pf(cd_paciente_p),1,60);
	dt_inicio_agendamento_w	:= clock_timestamp();
	cd_convenio_w			:= qt_obter_cd_conv_agendas(cd_paciente_p);


	ie_insere_convenio_w := Obter_param_Usuario(869, 325, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo, ie_insere_convenio_w);
	grupo_quimio_w := Obter_param_Usuario(869, 320, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo, grupo_quimio_w);
    ie_convenio_w := Obter_param_Usuario(869, 13, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo, ie_convenio_w);
	tipo_grupo_quimio_w := Obter_param_Usuario(869, 321, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo, tipo_grupo_quimio_w);

	select	min(nr_sequencia)
	into STRICT	nr_seq_status_w
	from 	agenda_integrada_status 
	where 	ie_situacao = 'A' 
	and 	ie_Status_tasy = 'EA';

	select	nextval('agenda_integrada_seq')
	into STRICT	nr_seq_ageint_w
	;

	/* Regra Atributo IE_TIPO_ATENDIMENTO*/
	SELECT  MAX(obter_regra_atributo(cd_estabelecimento_p, obter_perfil_ativo, nm_usuario_p, 'AGENDA_INTEGRADA', 'IE_TIPO_ATENDIMENTO', 'V', '', 0, 12744, 869, NULL, 0))
	into STRICT	ie_tipo_atendimento_w
	;

 if (cd_paciente_p IS NOT NULL AND cd_paciente_p::text <> '') and (nr_seq_ageint_w IS NOT NULL AND nr_seq_ageint_w::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
/*Parâmetro 325 - Ao criar um novo agendamento pela aba "Pendências de Quimioterapia", carregar o convênio da pendência
  Parâmetro 13 - Forma de obtenção dos dados do convênio para o agendamento*/
  
       param_agenda_integrada325_w :=  coalesce(obter_valor_param_usuario(869, 325, Obter_Perfil_Ativo, nm_usuario_p, 0), 'N');
        if (param_agenda_integrada325_w = 'S') then
            param_agenda_integrada13_w := coalesce(obter_valor_param_usuario(869, 13, Obter_Perfil_Ativo, nm_usuario_p, 0), 'N');
                if (param_agenda_integrada13_w in ('AG', 'AT')) then
                        if (param_agenda_integrada13_w = 'AT') then /* convenio ultimo atendimento */
                            SELECT * FROM define_convenio_atend_agenda(cd_paciente_p, nm_usuario_p, cd_convenio_w, cd_categoria_w, dt_validade_w, cd_usuario_convenio_w, nr_doc_convenio_w, cd_tipo_acomodacao_w, cd_plano_w) INTO STRICT cd_convenio_w, cd_categoria_w, dt_validade_w, cd_usuario_convenio_w, nr_doc_convenio_w, cd_tipo_acomodacao_w, cd_plano_w;
                        elsif (param_agenda_integrada13_w = 'AG') then /* convenio ultimo agendamento */
                            SELECT * FROM obter_convenio_ultima_ageint(cd_paciente_p, nr_seq_ageint_w, param_agenda_integrada13_w, cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w, dt_validade_w, nr_doc_convenio_w, cd_tipo_acomodacao_w, cd_plano_w) INTO STRICT cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w, dt_validade_w, nr_doc_convenio_w, cd_tipo_acomodacao_w, cd_plano_w;
                        end if;	
                end if;
        end if;
 end if;
             
	insert into agenda_integrada(
				nr_sequencia,
				cd_pessoa_fisica,
				nm_paciente,
				nr_telefone,
				dt_nascimento,
				qt_altura_cm,
				dt_inicio_agendamento,
				cd_profissional,
				nr_seq_status,
				cd_estabelecimento,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_turno,
				cd_convenio,
                cd_categoria,
                cd_plano,
                nr_doc_convenio,
                nr_seq_cobertura,
				ie_tipo_atendimento)
			values (nr_seq_ageint_w,
				cd_paciente_p,
				nm_paciente_w,
				nr_telefone_w,
				dt_nascimento_w,
				qt_altura_cm_w,
				dt_inicio_agendamento_w,
				cd_profissional_p,
				nr_seq_status_w,
				cd_estabelecimento_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				'2',
                CASE WHEN ie_insere_convenio_w='S' THEN cd_convenio_w  ELSE null END ,
                cd_categoria_w,
                cd_plano_w,
               nr_doc_convenio_w,
               nr_seq_cobertura_w,				
				ie_tipo_atendimento_w);

	open C01;
	loop
	fetch C01 into
		nr_seq_pendencia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		select	max(a.qt_tempo_medic),
			max(dt_prevista)
		into STRICT	nr_duracao_w,
			dt_prevista_w
		from	paciente_setor a,
			paciente_atendimento b,
			qt_pendencia_agenda c
		where	a.nr_seq_paciente = b.nr_seq_paciente
		and	b.nr_seq_pend_agenda = c.nr_sequencia
		and	c.nr_sequencia = nr_seq_pendencia_w;

    select max(b.nr_seq_atendimento)
    into STRICT  nr_seq_atendimento_w
    from  qt_pendencia_agenda c,
          paciente_atendimento b
    where c.nr_sequencia = nr_seq_pendencia_w
    and   b.nr_seq_pend_agenda = c.nr_sequencia;

		insert into agenda_integrada_item(
					nr_sequencia,
					ie_tipo_agendamento,
					ie_tipo_pend_agenda,
					nr_minuto_duracao,
					nr_seq_pend_quimio,
					nr_seq_agenda_int,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_grupo_quimio,
          nr_seq_atendimento)
				values (nextval('agenda_integrada_item_seq'),
					'Q',
					CASE WHEN coalesce(tipo_grupo_quimio_w::text, '') = '' THEN 'Q'  ELSE tipo_grupo_quimio_w END ,					
					nr_duracao_w,
					nr_seq_pendencia_w,
					nr_seq_ageint_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					CASE WHEN coalesce(grupo_quimio_w::text, '') = '' THEN null  ELSE grupo_quimio_w END ,
          nr_seq_atendimento_w);
	end;
	end loop;
	close C01;

	nr_seq_ageint_quimio_p	:= nr_seq_ageint_w;
	cd_prof_p:= cd_profissional_p;
	nr_seq_status_p	:= nr_seq_status_w;
	dt_agenda_p:= dt_inicio_agendamento_w;

    

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_gerar_agenda_quimio ( nr_seq_pend_quimio_p bigint, cd_paciente_p text, cd_profissional_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_ageint_quimio_p INOUT text, cd_prof_p INOUT text, nr_seq_status_p INOUT text, dt_agenda_p INOUT text ) FROM PUBLIC;

