-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_valida_aut_aft_coop_guia ( nr_seq_ocor_combinada_p pls_ocor_aut_combinada.nr_sequencia%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_motivo_glosa_p tiss_motivo_glosa.nr_sequencia%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_execucao_p pls_execucao_requisicao.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type ) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Validar o médico ou prestador da guia, conforme informado na regra. 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[X] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: Ocorrência aplicada na autorização do Tasy 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
ie_gerar_ocorrencia_w		varchar(1);
ie_regra_w			varchar(2);
ie_gerou_ocor_cabecalho_w	varchar(2);
nr_seq_oc_benef_w		bigint;
ie_tipo_ocorrencia_w		varchar(2);
cd_profissional_w		varchar(10);
dt_solicitacao_w		timestamp;
ie_utiliza_filtro_w		varchar(1);

nr_seq_prest_execucao_w		pls_prestador.nr_sequencia%type;

nr_seq_exec_item_w		pls_execucao_req_item.nr_sequencia%type;

nr_seq_guia_proc_w		pls_guia_plano_proc.nr_sequencia%type;
nr_seq_guia_mat_w		pls_guia_plano_mat.nr_sequencia%type;

cd_procedimento_w		procedimento.cd_procedimento%type;
ie_origem_proced_w		procedimento.ie_origem_proced%type;
nr_seq_material_w		pls_material.nr_sequencia%type;

nr_seq_req_proc_w		pls_requisicao_proc.nr_sequencia%type;
nr_seq_req_mat_w		pls_requisicao_mat.nr_sequencia%type;

ie_tipo_item_w			bigint;
ie_excecao_w			varchar(1) := 'N';
ie_ocorrencia_w			varchar(1) := 'N';

/*Retorna opção marcada na regra */
	 
C01 CURSOR( nr_seq_ocor_combinada_pc 	pls_ocor_aut_combinada.nr_sequencia%type ) FOR 
	SELECT	ie_valida_medico_solic,  
		ie_valida_prestador     
	from	pls_validacao_aut_aft_coop 
	where	nr_seq_ocor_aut_combinada = nr_seq_ocor_combinada_pc 
	and	ie_situacao = 'A';

/*Valida o prestador/médico em caso de ausência conforme regra */
	 
C02 CURSOR( cd_profissional_pc		pls_cooperado.cd_pessoa_fisica%type, 
		dt_solicitacao_pc	pls_guia_plano.dt_solicitacao%type) FOR 
	SELECT 	count(1) qt 
	from	pls_cooperado a, 
		pls_cooperado_ausencia b 
	where	a.cd_pessoa_fisica 	= cd_profissional_pc 
	and	b.nr_seq_cooperado	= a.nr_sequencia 
	and	dt_solicitacao_pc between b.dt_inicio and coalesce(b.dt_fim,dt_solicitacao_pc);

c04 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced 
	from	pls_guia_plano_proc 
	where	nr_seq_guia = nr_seq_guia_p;

c05 CURSOR FOR 
	SELECT 	nr_sequencia, 
		nr_seq_material 
	from	pls_guia_plano_mat 
	where	nr_seq_guia = nr_seq_guia_p;

c06 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced 
	from	pls_requisicao_proc 
	where	nr_seq_requisicao = nr_seq_requisicao_p;

c07 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_material 
	from	pls_requisicao_mat 
	where	nr_seq_requisicao = nr_seq_requisicao_p;

C08 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced 
	from	pls_execucao_req_item 
	where	nr_seq_execucao		= nr_seq_execucao_p 
	and	coalesce(nr_seq_material::text, '') = '';

C09 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_material 
	from	pls_execucao_req_item 
	where	nr_seq_execucao		= nr_seq_execucao_p 
	and	coalesce(cd_procedimento::text, '') = '';

BEGIN 
 
select	ie_utiliza_filtro 
into STRICT	ie_utiliza_filtro_w 
from	pls_ocor_aut_combinada 
where	nr_sequencia = nr_seq_ocor_combinada_p;
 
for	r_C01_w in C01( nr_seq_ocor_combinada_p ) loop 
 
	if	((nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') or (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') or (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '')) then 
 
		/* Valida Médico Cooperado */
 
		if ( r_C01_w.ie_valida_medico_solic	= 'S' )then		 
			ie_gerar_ocorrencia_w	:= 'N';	
			/*Retorna CD_MEDICO_SOLICITANTE do Médico caso a opção Valida Médico Solicitante esteja marcada na regra */
 
			if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then 
				begin 
					ie_tipo_item_w	:= 7;
 
					select 	cd_medico_solicitante, 
						dt_solicitacao 
					into STRICT	cd_profissional_w, 
						dt_solicitacao_w 
					from 	pls_guia_plano 
					where 	nr_sequencia = nr_seq_guia_p;
				exception 
				when others then 
						cd_profissional_w	:= null;
						dt_solicitacao_w	:= null;
				end;
			elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
				begin 
					ie_tipo_item_w	:= 9;
 
					select 	cd_medico_solicitante, 
						dt_requisicao 
					into STRICT	cd_profissional_w, 
						dt_solicitacao_w 
					from 	pls_requisicao 
					where 	nr_sequencia = nr_seq_requisicao_p;
				exception 
				when others then 
						cd_profissional_w	:= null;
						dt_solicitacao_w	:= null;
				end;
			elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then 
				begin 
					select 	b.cd_medico_requisitante, 
						a.dt_execucao 
					into STRICT	cd_profissional_w, 
						dt_solicitacao_w 
					from 	pls_execucao_requisicao a, 
						pls_execucao_req_item b 
					where 	a.nr_sequencia		= b.nr_seq_execucao 
					and	a.nr_sequencia 		= nr_seq_execucao_p 
					group by b.cd_medico_requisitante, a.dt_execucao;
				exception 
				when others then 
					cd_profissional_w 		:= null;
					dt_solicitacao_w		:= null;
				end;
			end if;
 
			for	r_C02_w in C02( cd_profissional_w, dt_solicitacao_w) loop 
 
				if (r_C02_w.qt > 0) then 
					ie_gerar_ocorrencia_w	:= 'S';
 
					if ( ie_utiliza_filtro_w	= 'S' and (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '')) then 
						/* Tratamento para filtros */
 
						open c04;
						loop 
						fetch c04 into	 
							nr_seq_guia_proc_w, 
							cd_procedimento_w, 
							ie_origem_proced_w;
						EXIT WHEN NOT FOUND; /* apply on c04 */
							begin 
								SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, nr_seq_guia_proc_w, null, null, null, null, cd_procedimento_w, ie_origem_proced_w, null, null, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
								if ( ie_regra_w	= 'S' ) then 
									ie_ocorrencia_w		:= 'S';
								elsif ( ie_regra_w	= 'E' ) then 
									ie_excecao_w		:= 'S';
									exit;
								end if;
							end;
						end loop;
						close c04;
 
						open c05;
						loop 
						fetch c05 into	 
							nr_seq_guia_mat_w, 
							nr_seq_material_w;
						EXIT WHEN NOT FOUND; /* apply on c05 */
							begin 
								SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, null, nr_seq_guia_mat_w, null, null, null, null, null, nr_seq_material_w, null, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
								if ( ie_regra_w	= 'S' ) then 
									ie_ocorrencia_w		:= 'S';
								elsif ( ie_regra_w	= 'E' ) then 
									ie_excecao_w		:= 'S';
									exit;
								end if;
							end;
						end loop;
						close c05;
 
					elsif ( ie_utiliza_filtro_w	= 'S' and (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '')) then 
						/* Tratamento para filtros */
 
						open c06;
						loop 
						fetch c06 into	 
							nr_seq_req_proc_w, 
							cd_procedimento_w, 
							ie_origem_proced_w;
						EXIT WHEN NOT FOUND; /* apply on c06 */
							begin 
								SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, nr_seq_req_proc_w, null, null, cd_procedimento_w, ie_origem_proced_w, null, null, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
								if ( ie_regra_w	= 'S' ) then 
									ie_ocorrencia_w		:= 'S';
								elsif ( ie_regra_w	= 'E' ) then 
									ie_excecao_w		:= 'S';
									exit;
								end if;
							end;
						end loop;
						close c06;
 
						open c07;
						loop 
						fetch c07 into	 
							nr_seq_req_mat_w, 
							nr_seq_material_w;
						EXIT WHEN NOT FOUND; /* apply on c07 */
							begin 
								SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, null, nr_seq_req_mat_w, null, null, null, nr_seq_material_w, null, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
								if ( ie_regra_w	= 'S' ) then 
									ie_ocorrencia_w		:= 'S';
								elsif ( ie_regra_w	= 'E' ) then 
									ie_excecao_w		:= 'S';
									exit;
								end if;
							end;
						end loop;
						close c07;
 
					elsif ( ie_utiliza_filtro_w	= 'S' and (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '')) then 
						/* Tratamento para filtros */
 
						open c08;
						loop 
						fetch c08 into 
							nr_seq_exec_item_w, 
							cd_procedimento_w, 
							ie_origem_proced_w;
						EXIT WHEN NOT FOUND; /* apply on c08 */
							begin 
								SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, null, nr_seq_execucao_p, null, null, null, null, nr_seq_exec_item_w, cd_procedimento_w, ie_origem_proced_w, null, null, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
								if ( ie_regra_w	= 'S' ) then 
									ie_ocorrencia_w		:= 'S';
								elsif ( ie_regra_w	= 'E' ) then 
									ie_excecao_w		:= 'S';
									exit;
								end if;
							end;
						end loop;
						close c08;
 
						open c09;
						loop 
						fetch c09 into	 
							nr_seq_exec_item_w, 
							nr_seq_material_w;
						EXIT WHEN NOT FOUND; /* apply on c09 */
							begin 
								SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, null, nr_seq_execucao_p, null, null, null, null, nr_seq_exec_item_w, null, null, nr_seq_material_w, null, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
								if ( ie_regra_w	= 'S' ) then 
									ie_ocorrencia_w		:= 'S';
								elsif ( ie_regra_w	= 'E' ) then 
									ie_excecao_w		:= 'S';
									exit;
								end if;
							end;
						end loop;
						close c09;
					end if;
					--Abre novamente os cursores caso algum item se encaixe nas regras de filtro e não haja nenhuma exceção. Isso é necessário devido a ocorrência na execução ser gerada para o item e não para o prestador. 
					if (ie_ocorrencia_w = 'S' and ie_excecao_w <> 'S' and ie_utiliza_filtro_w = 'S' and (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '')) or (ie_gerar_ocorrencia_w = 'S' and ie_utiliza_filtro_w <> 'S' and (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '')) then 
						open c08;
						loop 
						fetch c08 into 
							nr_seq_exec_item_w, 
							cd_procedimento_w, 
							ie_origem_proced_w;
						EXIT WHEN NOT FOUND; /* apply on c08 */
							begin 
								if (ie_utiliza_filtro_w = 'S') then 
									SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, null, nr_seq_execucao_p, null, null, null, null, nr_seq_exec_item_w, cd_procedimento_w, ie_origem_proced_w, null, null, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
									if ( ie_regra_w	= 'S' ) then 
										ie_gerar_ocorrencia_w		:= 'S';
									elsif ( ie_regra_w	<> 'S' ) then 
										ie_gerar_ocorrencia_w		:= 'N';
										exit;
									end if;
								end if;
 
								if ( ie_gerar_ocorrencia_w	= 'S') then 
									nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, null, null, nr_seq_exec_item_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 10, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);
 
									CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
													nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, 
													null, null, null, 
													null, nr_seq_exec_item_w, null, 
													nm_usuario_p, cd_estabelecimento_p);
								end if;
							end;
						end loop;
						close c08;
 
						open c09;
						loop 
						fetch c09 into	 
							nr_seq_exec_item_w, 
							nr_seq_material_w;
						EXIT WHEN NOT FOUND; /* apply on c09 */
							begin 
								if (ie_utiliza_filtro_w = 'S') then 
									SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, null, nr_seq_execucao_p, null, null, null, null, nr_seq_exec_item_w, null, null, nr_seq_material_w, null, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
									if ( ie_regra_w	= 'S' ) then 
										ie_gerar_ocorrencia_w		:= 'S';
									elsif ( ie_regra_w	<> 'S' ) then 
										ie_gerar_ocorrencia_w		:= 'N';
										exit;
									end if;
								end if;
 
								if ( ie_gerar_ocorrencia_w	= 'S') then 
									nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, null, null, nr_seq_exec_item_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 11, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);
 
									CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
													nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, 
													null, null, null, 
													null, null, nr_seq_exec_item_w, 
													nm_usuario_p, cd_estabelecimento_p);
								end if;
							end;
						end loop;
						close c09;
					end if;
 
					if (ie_utiliza_filtro_w	= 'S') then 
						if (ie_excecao_w = 'S' or (ie_excecao_w = 'N' and ie_ocorrencia_w = 'N')) then 
							ie_gerar_ocorrencia_w	:= 'N';
						elsif (ie_ocorrencia_w = 'S' and ie_excecao_w <> 'S') then 
							ie_gerar_ocorrencia_w	:= 'S';
						end if;
					end if;
 
					if	(( ie_gerar_ocorrencia_w	= 'S') and (coalesce(nr_seq_execucao_p::text, '') = '')) then 
						nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, nr_seq_guia_p, null, null, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, ie_tipo_item_w, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);
 
						CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
										nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, 
										null, null, null, 
										null, null, null, 
										nm_usuario_p, cd_estabelecimento_p);
					end if;
				end if;
			end loop;
		end if;
 
		/* Valida Prestador Cooperado, só valida se o prestador for pessoa física */
 
		if ( r_C01_w.ie_valida_prestador	= 'S' )then 
			ie_gerar_ocorrencia_w	:= 'N';
			/*Retorna CD_PESSOA_FISICA do Prestador caso a opção Valida Prestador esteja marcada na regra */
 			 
			if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then 
				begin 
					ie_tipo_item_w	:= 7;
 
					select 	b.cd_pessoa_fisica, 
						dt_solicitacao 
					into STRICT	cd_profissional_w, 
						dt_solicitacao_w 
					from 	pls_guia_plano a, 
						pls_prestador b 
					where 	a.nr_seq_prestador 	= b.nr_sequencia 
					and	a.nr_sequencia 		= nr_seq_guia_p;
				exception 
				when others then 
						cd_profissional_w	:= null;
						dt_solicitacao_w	:= null;
				end;
			elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
				begin 
					ie_tipo_item_w	:= 9;
 
					select 	a.cd_medico_solicitante, 
						a.dt_requisicao 
					into STRICT	cd_profissional_w, 
						dt_solicitacao_w 
					from 	pls_requisicao a, 
						pls_prestador b 
					where 	a.nr_seq_prestador	= b.nr_sequencia 
					and	a.nr_sequencia		= nr_seq_requisicao_p;
				exception 
				when others then 
						cd_profissional_w	:= null;
						dt_solicitacao_w	:= null;
				end;
			elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then 
				begin 
					select 	b.cd_pessoa_fisica, 
						dt_execucao 
					into STRICT	cd_profissional_w, 
						dt_solicitacao_w 
					from 	pls_execucao_requisicao a, 
						pls_prestador b 
					where 	a.nr_seq_prestador 	= b.nr_sequencia 
					and	a.nr_sequencia 		= nr_seq_execucao_p;
				exception 
				when others then 
						cd_profissional_w	:= null;
						dt_solicitacao_w	:= null;
				end;				
			end if;
 
			for	r_C02_w in C02( cd_profissional_w, dt_solicitacao_w) loop 
 
				if (r_C02_w.qt > 0) then 
					ie_gerar_ocorrencia_w	:= 'S';
 
					if ( ie_utiliza_filtro_w	= 'S' and (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '')) then 
						/* Tratamento para filtros */
 
						open c04;
						loop 
						fetch c04 into	 
							nr_seq_guia_proc_w, 
							cd_procedimento_w, 
							ie_origem_proced_w;
						EXIT WHEN NOT FOUND; /* apply on c04 */
							begin 
								SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, nr_seq_guia_proc_w, null, null, null, null, cd_procedimento_w, ie_origem_proced_w, null, null, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
								if ( ie_regra_w	= 'S' ) then 
									ie_ocorrencia_w		:= 'S';
								elsif ( ie_regra_w	= 'E' ) then 
									ie_excecao_w		:= 'S';
									exit;
								end if;
							end;
						end loop;
						close c04;
 
						open c05;
						loop 
						fetch c05 into	 
							nr_seq_guia_mat_w, 
							nr_seq_material_w;
						EXIT WHEN NOT FOUND; /* apply on c05 */
							begin 
								SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, null, nr_seq_guia_mat_w, null, null, null, null, null, nr_seq_material_w, null, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
								if ( ie_regra_w	= 'S' ) then 
									ie_ocorrencia_w		:= 'S';
								elsif ( ie_regra_w	= 'E' ) then 
									ie_excecao_w		:= 'S';
									exit;
								end if;
							end;
						end loop;
						close c05;
 
					elsif ( ie_utiliza_filtro_w	= 'S' and (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '')) then 
						/* Tratamento para filtros */
 
						open c06;
						loop 
						fetch c06 into	 
							nr_seq_req_proc_w, 
							cd_procedimento_w, 
							ie_origem_proced_w;
						EXIT WHEN NOT FOUND; /* apply on c06 */
							begin 
								SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, nr_seq_req_proc_w, null, null, cd_procedimento_w, ie_origem_proced_w, null, null, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
								if ( ie_regra_w	= 'S' ) then 
									ie_ocorrencia_w		:= 'S';
								elsif ( ie_regra_w	= 'E' ) then 
									ie_excecao_w		:= 'S';
									exit;
								end if;
							end;
						end loop;
						close c06;
 
						open c07;
						loop 
						fetch c07 into	 
							nr_seq_req_mat_w, 
							nr_seq_material_w;
						EXIT WHEN NOT FOUND; /* apply on c07 */
							begin 
								SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, null, nr_seq_req_mat_w, null, null, null, nr_seq_material_w, null, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
								if ( ie_regra_w	= 'S' ) then 
									ie_ocorrencia_w		:= 'S';
								elsif ( ie_regra_w	= 'E' ) then 
									ie_excecao_w		:= 'S';
									exit;
								end if;
							end;
						end loop;
						close c07;
 
					elsif ( ie_utiliza_filtro_w	= 'S' and (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '')) then 
						/* Tratamento para filtros */
 
						open c08;
						loop 
						fetch c08 into 
							nr_seq_exec_item_w, 
							cd_procedimento_w, 
							ie_origem_proced_w;
						EXIT WHEN NOT FOUND; /* apply on c08 */
							begin 
								SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, null, nr_seq_execucao_p, null, null, null, null, nr_seq_exec_item_w, cd_procedimento_w, ie_origem_proced_w, null, null, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
								if ( ie_regra_w	= 'S' ) then 
									ie_ocorrencia_w		:= 'S';
								elsif ( ie_regra_w	= 'E' ) then 
									ie_excecao_w		:= 'S';
									exit;
								end if;
							end;
						end loop;
						close c08;
 
						open c09;
						loop 
						fetch c09 into	 
							nr_seq_exec_item_w, 
							nr_seq_material_w;
						EXIT WHEN NOT FOUND; /* apply on c09 */
							begin 
								SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, null, nr_seq_execucao_p, null, null, null, null, nr_seq_exec_item_w, null, null, nr_seq_material_w, null, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
								if ( ie_regra_w	= 'S' ) then 
									ie_ocorrencia_w		:= 'S';
								elsif ( ie_regra_w	= 'E' ) then 
									ie_excecao_w		:= 'S';
									exit;
								end if;
							end;
						end loop;
						close c09;
					end if;
					--Abre novamente os cursores caso algum item se encaixe nas regras de filtro e não haja nenhuma exceção. Isso é necessário devido a ocorrência na execução ser gerada para o item e não para o prestador. 
					if (ie_ocorrencia_w = 'S' and ie_excecao_w <> 'S' and ie_utiliza_filtro_w = 'S' and (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '')) or (ie_gerar_ocorrencia_w = 'S' and ie_utiliza_filtro_w <> 'S' and (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '')) then 
						open c08;
						loop 
						fetch c08 into 
							nr_seq_exec_item_w, 
							cd_procedimento_w, 
							ie_origem_proced_w;
						EXIT WHEN NOT FOUND; /* apply on c08 */
							begin 
								if (ie_utiliza_filtro_w = 'S') then 
									SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, null, nr_seq_execucao_p, null, null, null, null, nr_seq_exec_item_w, cd_procedimento_w, ie_origem_proced_w, null, null, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
									if ( ie_regra_w	= 'S' ) then 
										ie_gerar_ocorrencia_w		:= 'S';
									elsif ( ie_regra_w	<> 'S' ) then 
										ie_gerar_ocorrencia_w		:= 'N';
										exit;
									end if;
								end if;
 
								if ( ie_gerar_ocorrencia_w	= 'S') then 
									nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, null, null, nr_seq_exec_item_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 10, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);
 
									CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
													nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, 
													null, null, null, 
													null, nr_seq_exec_item_w, null, 
													nm_usuario_p, cd_estabelecimento_p);
								end if;
							end;
						end loop;
						close c08;
 
						open c09;
						loop 
						fetch c09 into	 
							nr_seq_exec_item_w, 
							nr_seq_material_w;
						EXIT WHEN NOT FOUND; /* apply on c09 */
							begin 
								if (ie_utiliza_filtro_w = 'S') then 
									SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, null, nr_seq_execucao_p, null, null, null, null, nr_seq_exec_item_w, null, null, nr_seq_material_w, null, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
									if ( ie_regra_w	= 'S' ) then 
										ie_gerar_ocorrencia_w		:= 'S';
									elsif ( ie_regra_w	<> 'S' ) then 
										ie_gerar_ocorrencia_w		:= 'N';
										exit;
									end if;
								end if;
 
								if ( ie_gerar_ocorrencia_w	= 'S') then 
									nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, null, null, nr_seq_exec_item_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 11, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);
 
									CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
													nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, 
													null, null, null, 
													null, null, nr_seq_exec_item_w, 
													nm_usuario_p, cd_estabelecimento_p);
								end if;
							end;
						end loop;
						close c09;
					end if;
 
					if (ie_utiliza_filtro_w	= 'S') then 
						if (ie_excecao_w = 'S' or (ie_excecao_w = 'N' and ie_ocorrencia_w = 'N')) then 
							ie_gerar_ocorrencia_w	:= 'N';
						elsif (ie_ocorrencia_w = 'S' and ie_excecao_w <> 'S') then 
							ie_gerar_ocorrencia_w	:= 'S';
						end if;
					end if;
 
					if	(( ie_gerar_ocorrencia_w	= 'S') and (coalesce(nr_seq_execucao_p::text, '') = '')) then 
						nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, nr_seq_guia_p, null, null, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, ie_tipo_item_w, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);
 
						CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
										nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, 
										null, null, null, 
										null, null, null, 
										nm_usuario_p, cd_estabelecimento_p);
					end if;
				end if;
			end loop;
		end if;
	end if;	
end loop;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_valida_aut_aft_coop_guia ( nr_seq_ocor_combinada_p pls_ocor_aut_combinada.nr_sequencia%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_motivo_glosa_p tiss_motivo_glosa.nr_sequencia%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_execucao_p pls_execucao_requisicao.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type ) FROM PUBLIC;

