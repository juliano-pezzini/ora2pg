-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_conta_paciente_exced ( nr_interno_conta_p bigint, cd_moeda_p bigint, vl_cotacao_p bigint, nm_usuario_p text, nr_seq_conta_exced_p INOUT bigint) AS $body$
DECLARE

 
nr_seq_conta_exced_w   	CONTA_PACIENTE_EXCEDENTE.nr_sequencia%type;
vl_max_conta_out_w			REGRA_CONTA_EXCEDENTE.vl_max_conta%type;
cd_procedimento_out_w		REGRA_CONTA_EXCEDENTE.cd_procedimento%type;
ie_origem_proced_out_w		REGRA_CONTA_EXCEDENTE.ie_origem_proced%type;
cd_convenio_w					CONTA_PACIENTE.cd_convenio_parametro%type;	
vl_cotacao_w 				CONTA_PACIENTE_EXCEDENTE.vl_cotacao%type;


BEGIN 
nr_seq_conta_exced_p := 0;
vl_cotacao_w 		:= coalesce(vl_cotacao_p,0);
 
select 	coalesce(max(nr_sequencia),0) 
into STRICT		nr_seq_conta_exced_w 
from 		conta_paciente_excedente 
where  	nr_interno_conta = nr_interno_conta_p;
 
begin 
	select	cd_convenio_parametro 
	into STRICT 		cd_convenio_w 
	from  	conta_paciente 
	where 	nr_interno_conta = nr_interno_conta_p;
exception 
when others then 
	cd_convenio_w := null;
end;
 
--VERIFICA AS REGRAS DE CONTA EXCEDENTE PARA SALVAR VALORES NA TABELA CONTA_PACIENTE_EXCEDENTE 
SELECT * FROM obter_vl_maximo_regra_exced(cd_moeda_p, clock_timestamp(), cd_convenio_w, vl_max_conta_out_w, cd_procedimento_out_w, ie_origem_proced_out_w) INTO STRICT vl_max_conta_out_w, cd_procedimento_out_w, ie_origem_proced_out_w;
 
--inserir/atualizar registros em conta_paciente_excedente. Tabela representa 1-1 com a CONTA_PACIENTE 
if (nr_seq_conta_exced_w > 0 )then 
	update 	conta_paciente_excedente 
	set  	cd_moeda  	 		= cd_moeda_p, 
				vl_cotacao 	 		= vl_cotacao_w, 
				dt_atualizacao  	= clock_timestamp(), 
				nm_usuario 	 		= nm_usuario_p, 
				cd_procedimento 	= cd_procedimento_out_w, 
				ie_origem_proced 	= ie_origem_proced_out_w, 
				vl_max_conta 	 	= vl_max_conta_out_w 
	where  	nr_interno_conta 	= nr_interno_conta_p;
	commit;
else 
	select 	nextval('conta_paciente_excedente_seq') 
	into STRICT 	nr_seq_conta_exced_w 
	;
	 
	insert into conta_paciente_excedente(	nr_sequencia, 
											nr_interno_conta, 
											cd_moeda, 
											vl_cotacao, 
											dt_atualizacao, 
											nm_usuario, 
											dt_atualizacao_nrec, 
											nm_usuario_nrec, 
											vl_conta_origem, 
											cd_procedimento, 
											ie_origem_proced, 
											vl_max_conta) 
										values (	nr_seq_conta_exced_w, 
											nr_interno_conta_p, 
											cd_moeda_p, 
											vl_cotacao_w, 
											clock_timestamp(), 
											nm_usuario_p, 
											clock_timestamp(), 
											nm_usuario_p, 
											0, 
											cd_procedimento_out_w, 
											ie_origem_proced_out_w, 
											vl_max_conta_out_w);
	commit;
end if;
 
nr_seq_conta_exced_p := nr_seq_conta_exced_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_conta_paciente_exced ( nr_interno_conta_p bigint, cd_moeda_p bigint, vl_cotacao_p bigint, nm_usuario_p text, nr_seq_conta_exced_p INOUT bigint) FROM PUBLIC;

