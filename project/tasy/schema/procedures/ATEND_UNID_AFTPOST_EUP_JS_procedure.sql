-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atend_unid_aftpost_eup_js ( ie_clinica_p bigint, cd_procedencia_p bigint, ie_tipo_convenio_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text, cd_pessoa_fisica_p text, ie_tipo_atendimento_p bigint, nr_atendimento_p bigint, ie_edit_p text, ie_insert_p text, cd_setor_atendimento_p bigint, nr_seq_interno_p bigint, nm_usuario_p text, ds_msg_leito_p INOUT text, ds_msg_cons_interd_leito_p INOUT text, ds_msg_imp_solicitacao_p INOUT text, ds_msg_imp_boletim_p INOUT text, ds_msg_hist_medicamento_p INOUT text, ds_msg_hist_habitos_p INOUT text, ds_msg_aval_anest_p INOUT text, ds_msg_leito_radio_p INOUT text, ie_pasta_exames_p INOUT text, ds_msg_laudo_p INOUT text, ie_verifica_se_gv_p INOUT text, ie_leito_reservado_p INOUT bigint, qt_regra_inf_diag_p INOUT bigint, cd_classif_setor_p INOUT bigint, ds_msg_nova_prescricao_p INOUT text, ie_nivel_urgencia_p INOUT text, ie_inf_motivo_isolamento_p INOUT text, ie_atend_tem_setor_p INOUT text, ds_msg_conf_atual_dieta_p INOUT text, ds_msg_guia_spsadt_p INOUT text, ds_msg_conf_setor_isol_p INOUT text, ds_msg_agenda_cirurgica_p INOUT text, cd_classif_setor_atend_p INOUT bigint, ds_msg_hist_disability_p INOUT text) AS $body$
DECLARE


cd_estabelecimento_w		smallint;
ie_interditar_leitos_w		varchar(1);	
ie_vinc_prescr_pac_w		varchar(1);
ie_historico_saude_w		varchar(2);	
qt_dias_apae_w			integer;
ie_aval_anestesica_w		varchar(1);
qt_dias_reinternacao_w		integer;
ie_leito_radio_w		varchar(1);
ie_pasta_exames_w		varchar(60);
ie_informa_laudo_sus_w		varchar(1);
qt_laudo_sus_w			bigint;
ie_reserva_com_atend_w		varchar(1);
ie_gera_mov_prescr_w		varchar(1);
qt_precaucao_w			bigint;	
ie_motivo_isolamento_w		varchar(1);
ie_alerta_classificacao_w	varchar(3);
ie_setores_isolamento_w		varchar(60);
ie_existe_auto_aghos_w		varchar(1);
ie_clinica_age_cirur_w		varchar(60);
qt_pac_age_cirurgica_w		bigint;
ie_triagem_pa_w			varchar(1);
ie_insert_edit_w		varchar(1);
ie_gerar_solic_pront_w		varchar(1);
qt_regra_solic_pront_w		smallint;
					

BEGIN

cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;

qt_dias_reinternacao_w := Obter_param_Usuario(916, 99, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, qt_dias_reinternacao_w);
ie_interditar_leitos_w := Obter_param_Usuario(916, 188, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_interditar_leitos_w);
ie_historico_saude_w := Obter_param_Usuario(916, 308, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_historico_saude_w);
qt_dias_apae_w := Obter_param_Usuario(916, 343, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, qt_dias_apae_w);
ie_pasta_exames_w := Obter_param_Usuario(916, 508, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_pasta_exames_w);
ie_informa_laudo_sus_w := Obter_param_Usuario(916, 516, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_informa_laudo_sus_w);
ie_gera_mov_prescr_w := Obter_param_Usuario(916, 605, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gera_mov_prescr_w);
ie_triagem_pa_w := Obter_param_Usuario(916, 762, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_triagem_pa_w);
ie_reserva_com_atend_w := Obter_param_Usuario(916, 935, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_reserva_com_atend_w);
ie_alerta_classificacao_w := Obter_param_Usuario(916, 957, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_alerta_classificacao_w);
ie_vinc_prescr_pac_w := Obter_param_Usuario(916, 978, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_vinc_prescr_pac_w);
ie_setores_isolamento_w := Obter_param_Usuario(916, 1014, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_setores_isolamento_w);
ie_clinica_age_cirur_w := Obter_param_Usuario(916, 1046, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_clinica_age_cirur_w);
ie_gerar_solic_pront_w := Obter_param_Usuario(916, 1151, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_solic_pront_w);

ie_motivo_isolamento_w := Obter_param_Usuario(44, 80, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_motivo_isolamento_w);


if (ie_insert_p = 'S') then

	ds_msg_leito_p := obter_mensagem_leito_eup(cd_setor_atendimento_p, nr_seq_interno_p);

	if (ie_tipo_atendimento_p = 1) then
		CALL gerar_evento_internacao(nr_atendimento_p, nm_usuario_p);
	elsif (ie_tipo_atendimento_p = 3) then
		CALL gerar_evento_pronto_socorro(nr_atendimento_p, nm_usuario_p);
	end if;

	CALL gerar_higienizacao_leito(clock_timestamp(), nm_usuario_p, cd_estabelecimento_w, 'PSA', null, nr_atendimento_p, null);
	
	if (ie_vinc_prescr_pac_w = 'S') then
		CALL Atualizar_atend_prescricao(nr_atendimento_p, 'DS');
	end if;
	
	if (ie_historico_saude_w = 'S') then
		ds_msg_hist_medicamento_p := substr(wheb_mensagem_pck.get_texto(96715, null),1,255);
	elsif (ie_historico_saude_w = 'H') then
		ds_msg_hist_habitos_p := substr(wheb_mensagem_pck.get_texto(251374, null),1,255);
	elsif (ie_historico_saude_w = 'D') then
		ds_msg_hist_disability_p := substr(wheb_mensagem_pck.get_texto(1144989, null),1,255);
	end if;
	
	if (coalesce(qt_dias_apae_w,0) > 0) then
		
		select	coalesce(max('S'),'N')
		into STRICT	ie_aval_anestesica_w
		from	aval_pre_anestesica 
		where	coalesce(nr_atendimento::text, '') = '' 
		and 	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
		and	dt_avaliacao >= clock_timestamp() - qt_dias_apae_w 
		and	cd_pessoa_fisica = cd_pessoa_fisica_p;
		
		if (ie_aval_anestesica_w = 'S') then
			ds_msg_aval_anest_p := substr(wheb_mensagem_pck.get_texto(96765, null),1,255);
		end if;
	end if;
	
	CALL enviar_comunic_atend(nr_atendimento_p, qt_dias_reinternacao_w, cd_pessoa_fisica_p, nm_usuario_p, cd_estabelecimento_w, ie_tipo_atendimento_p, qt_dias_reinternacao_w);
	
	select	coalesce(max(ie_radioterapia),'N')
	into STRICT	ie_leito_radio_w
        from    unidade_atendimento 
	where   cd_setor_atendimento = cd_setor_atendimento_p
        and     cd_unidade_basica = cd_unidade_basica_p   
        and     cd_unidade_compl = cd_unidade_compl_p;

	if (ie_leito_radio_w = 'S') then
		ds_msg_leito_radio_p := substr(wheb_mensagem_pck.get_texto(89600, null),1,255);
	end if;
	
	select	coalesce(max(ie_verifica_se_gv),'N')
	into STRICT	ie_verifica_se_gv_p	
	from 	setor_atendimento
	where 	cd_setor_atendimento = cd_setor_atendimento_p;
	
	if (ie_reserva_com_atend_w = 'S') then
		ie_leito_reservado_p := coalesce(obter_se_leito_livre_reservado(cd_pessoa_fisica_p,'V','AB','PS',nr_atendimento_p),0);
	else
		ie_leito_reservado_p := coalesce(obter_se_leito_livre_reservado(cd_pessoa_fisica_p,'V','A','N',0),0);
	end if;
	
	select	coalesce(max(1),0)
	into STRICT	qt_regra_inf_diag_p
	from	regra_cons_inf_diag_eup
	where  	cd_procedencia = cd_procedencia_p
	and    	ie_tipo_atendimento = ie_tipo_atendimento_p;
	
	ds_msg_nova_prescricao_p := substr(wheb_mensagem_pck.get_texto(96810, null),1,255);
	
	if (ie_gera_mov_prescr_w = 'S') and (coalesce(cd_setor_atendimento_p,0) > 0) then
		CALL gerar_ajustes_ap_lote('S', nr_atendimento_p, nm_usuario_p);
	end if;
	
	ie_nivel_urgencia_p := obter_nivel_urgencia(nr_atendimento_p);
	
	CALL atualiza_procedencia_atend(nr_atendimento_p);
	
	if (ie_alerta_classificacao_w = 'AC') then
		
		CALL gerar_evento_classif_atend(nr_atendimento_p, cd_pessoa_fisica_p, nm_usuario_p, cd_estabelecimento_w);
	end if;
	
	if (ie_setores_isolamento_w IS NOT NULL AND ie_setores_isolamento_w::text <> '') and (Obter_Se_Contido_char(cd_setor_atendimento_p, ie_setores_isolamento_w) = 'S') then
		ds_msg_conf_setor_isol_p := substr(wheb_mensagem_pck.get_texto(222920, null),1,255);
	
	end if;
	
	select	coalesce(max('S'), 'N')
	into STRICT	ie_existe_auto_aghos_w
	from	solicitacao_tasy_aghos
	where	nr_atendimento = nr_atendimento_p
	and	ie_situacao = 'I';
	
	if (ie_tipo_atendimento_p = 1) and (ie_tipo_convenio_p = 3) and (ie_existe_auto_aghos_w = 'S') then
		CALL liberar_laudo_sus_aghos(nr_atendimento_p, nm_usuario_p);
	end if;	
	CALL gerar_sms_atend_unid_regra(nr_atendimento_p,cd_estabelecimento_w, nm_usuario_p ,cd_pessoa_fisica_p);
	
	if (ie_gerar_solic_pront_w = 'S') then
		CALL gerar_solic_pront_atendimento(nr_atendimento_p, nm_usuario_p, cd_estabelecimento_w);
	
	elsif (ie_gerar_solic_pront_w = 'D') then
		
		select	count(*)
		into STRICT	qt_regra_solic_pront_w
		from	gerar_solic_pront_regra
		where	coalesce(ie_tipo_atendimento, ie_tipo_atendimento_p) = ie_tipo_atendimento_p
		and	coalesce(cd_setor_atendimento,cd_setor_atendimento_p)= cd_setor_atendimento_p  LIMIT 1;
		
		if (qt_regra_solic_pront_w > 0) then
			CALL Gerar_Solic_Pront_Atendimento(nr_atendimento_p, nm_usuario_p, cd_estabelecimento_w);
		end if;
	
	end if;
end if;

CALL gerar_autor_regra(nr_atendimento_p, null, null, null, null, null, 'AT', nm_usuario_p, null, null, null, null, null, null, null, null, null);

if (ie_interditar_leitos_w = 'S') then
	ds_msg_cons_interd_leito_p := consiste_tipo_acomodacao(nr_atendimento_p, ds_msg_cons_interd_leito_p);
end if;

if (ie_pasta_exames_w IS NOT NULL AND ie_pasta_exames_w::text <> '') and (Obter_Se_Contido_char(ie_tipo_atendimento_p, ie_pasta_exames_w) = 'S') then
	ie_pasta_exames_p := 'S';
else
	ie_pasta_exames_p := 'N';
end if;

if (ie_tipo_convenio_p = 3) and (ie_tipo_atendimento_p = 1) then
	if (ie_informa_laudo_sus_w = 'S') then
	
		Select 	count(*) 
		into STRICT	qt_laudo_sus_w
		from 	sus_laudo_paciente
		where 	nr_atendimento = nr_atendimento_p;
		if (qt_laudo_sus_w = 0) then
			ds_msg_laudo_p := substr(wheb_mensagem_pck.get_texto(96791, null),1,255);
		end if;
	elsif (ie_informa_laudo_sus_w = 'H') then
		select count(*)
		into STRICT qt_laudo_sus_w
		from sus_aih_unif
		where nr_atendimento = nr_atendimento_p;
		if (qt_laudo_sus_w = 0) then
			ds_msg_laudo_p := substr(wheb_mensagem_pck.get_texto(324706, null),1,255);
		end if;
	elsif (ie_informa_laudo_sus_w = 'A')  then
		ds_msg_laudo_p := substr(wheb_mensagem_pck.get_texto(332174, null),1,255);
	end if;	
end if;

if (ie_edit_p = 'S') or (ie_insert_p = 'S') then
	
	select  max(cd_classif_setor)
	into STRICT	cd_classif_setor_p	
        from  	setor_atendimento
        where 	cd_setor_atendimento = cd_setor_atendimento_p;
	
	if (ie_clinica_age_cirur_w IS NOT NULL AND ie_clinica_age_cirur_w::text <> '') and (Obter_Se_Contido_char(ie_clinica_p, ie_clinica_age_cirur_w) = 'S') then
		qt_pac_age_cirurgica_w := obter_pac_age_cirurgica(nr_atendimento_p);
		if (coalesce(qt_pac_age_cirurgica_w,0) = 0) then
			ds_msg_agenda_cirurgica_p := substr(wheb_mensagem_pck.get_texto(234079, null),1,255);
		end if;
	end if;
	
	CALL gerar_evento_reint_isol(nr_atendimento_p, cd_pessoa_fisica_p, nm_usuario_p, cd_estabelecimento_w);
	
	if (ie_triagem_pa_w = 'S') then
		CALL atualizar_setor_triagem(nr_atendimento_p, nm_usuario_p);
	end if;
	
	if (ie_insert_p = 'S') then
		ie_insert_edit_w := 'I';
	else
		ie_insert_edit_w := 'E';
	end if;
	
	CALL Atend_Paciente_Unid_AfterPost(nr_seq_interno_p, ie_insert_edit_w, nm_usuario_p);
	
	select	coalesce(max(cd_classif_setor),0)
	into STRICT	cd_classif_setor_atend_p
	from 	setor_atendimento  
	where 	cd_setor_atendimento =  obter_setor_atendimento(nr_atendimento_p);
end if;

select	count(*)
into STRICT	qt_precaucao_w
from  	atendimento_paciente a,
	atendimento_precaucao b,
	atend_precaucao_micro c,
	cih_microorganismo d
where	a.nr_atendimento = b.nr_atendimento
and	b.nr_sequencia = c.nr_seq_atend_precaucao
and	c.cd_microorganismo = d.cd_microorganismo
and	coalesce(d.ie_isolamento_permanente,'N') = 'S'
and	a.cd_pessoa_fisica = cd_pessoa_fisica_p LIMIT 1;

ie_inf_motivo_isolamento_p := 'N';

if (qt_precaucao_w > 0) then
	if (ie_motivo_isolamento_w = 'S') then
		ie_inf_motivo_isolamento_p := 'S';
	else
		CALL eup_inserir_pac_isolamento(nr_atendimento_p, cd_setor_atendimento_p, null, null, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w);
	end if;
end if;

if (ie_edit_p = 'N') and (ie_insert_p = 'N') then
	
	 CALL Atualizar_Atendimento_Paciente(nr_atendimento_p);
end if;

ie_atend_tem_setor_p := obter_se_atendimento_tem_setor(nr_atendimento_p);

ds_msg_imp_solicitacao_p := substr(wheb_mensagem_pck.get_texto(96697, null),1,255);
ds_msg_imp_boletim_p := substr(wheb_mensagem_pck.get_texto(96710, null),1,255);
ds_msg_conf_atual_dieta_p := substr(wheb_mensagem_pck.get_texto(290685, null),1,255);
ds_msg_guia_spsadt_p := substr(wheb_mensagem_pck.get_texto(115596, null),1,255);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atend_unid_aftpost_eup_js ( ie_clinica_p bigint, cd_procedencia_p bigint, ie_tipo_convenio_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text, cd_pessoa_fisica_p text, ie_tipo_atendimento_p bigint, nr_atendimento_p bigint, ie_edit_p text, ie_insert_p text, cd_setor_atendimento_p bigint, nr_seq_interno_p bigint, nm_usuario_p text, ds_msg_leito_p INOUT text, ds_msg_cons_interd_leito_p INOUT text, ds_msg_imp_solicitacao_p INOUT text, ds_msg_imp_boletim_p INOUT text, ds_msg_hist_medicamento_p INOUT text, ds_msg_hist_habitos_p INOUT text, ds_msg_aval_anest_p INOUT text, ds_msg_leito_radio_p INOUT text, ie_pasta_exames_p INOUT text, ds_msg_laudo_p INOUT text, ie_verifica_se_gv_p INOUT text, ie_leito_reservado_p INOUT bigint, qt_regra_inf_diag_p INOUT bigint, cd_classif_setor_p INOUT bigint, ds_msg_nova_prescricao_p INOUT text, ie_nivel_urgencia_p INOUT text, ie_inf_motivo_isolamento_p INOUT text, ie_atend_tem_setor_p INOUT text, ds_msg_conf_atual_dieta_p INOUT text, ds_msg_guia_spsadt_p INOUT text, ds_msg_conf_setor_isol_p INOUT text, ds_msg_agenda_cirurgica_p INOUT text, cd_classif_setor_atend_p INOUT bigint, ds_msg_hist_disability_p INOUT text) FROM PUBLIC;

