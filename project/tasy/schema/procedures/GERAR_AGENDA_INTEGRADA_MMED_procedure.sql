-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_agenda_integrada_mmed ( nr_sequencia_p bigint, nm_usuario_p text, nr_seq_agenda_integrada_P INOUT bigint) AS $body$
DECLARE

					
					
					
nr_seq_proc_interno_w		bigint;					
nr_seq_agenda_int_w		bigint;
nr_seq_status_w			bigint;
cd_convenio_w			bigint;
cd_estabelecimento_w		bigint;
cd_pessoa_fisica_w		varchar(10);
nm_pessoa_fisica_w		varchar(60);
dt_inicio_agendamento_w		timestamp;
ie_sexo_w			varchar(1);
dt_nascimento_w			timestamp;
dt_prevista_item_w		timestamp;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_agenda_integrada_item_w	bigint;
ie_lado_w			varchar(10);
nr_prescricao_w			bigint;
nr_sequencia_prescricao_w	bigint;
ie_tipo_atendimento_w		smallint;
nr_minuto_duracao_w		bigint;
nr_count_w			bigint;
nr_count_aux_w			bigint;
cd_categoria_w			varchar(10);
cd_plano_w			varchar(10);
nr_doc_convenio_w		varchar(20);
cd_usuario_convenio_w		varchar(30);
cd_pessoa_responsavel_w		varchar(10);
nr_seq_exame_w			bigint;
cd_medico_exec_w		varchar(10);
qt_idade_pac_w			bigint;
ageint_seq_lab_w		bigint;
ie_associado_w			varchar(10);
nr_seq_exame_dur_w		bigint;
nr_seq_interno_w		numeric(20);
nr_autorizacao_w			bigint;
ie_autorizacao_w			varchar(3);
nr_atendimento_w			bigint;


BEGIN



begin

select	max(a.nr_prescricao),
	max(a.nr_seq_prescr),
	max(a.nr_atendimento)
into STRICT	nr_prescricao_w,
	nr_sequencia_prescricao_w,	
	nr_atendimento_w
from	solicitacao_exame_compl a
where	nr_sequencia = nr_sequencia_p;

exception
when others then
	null;
end;

/*
select	nvl(ie_exame_assoc,'N') 
into	ie_associado_w
from  	prescr_procedimento 
where 	nr_prescricao = nr_prescricao_p
and   	nr_sequencia = nr_sequencia_p;
*/
SELECT 	coalesce(MAX(b.nr_sequencia),0)
into STRICT	nr_seq_agenda_int_w
FROM	agenda_integrada_item a,
	agenda_integrada b,
	agenda_integrada_status c
WHERE	a.nr_prescricao = nr_prescricao_w
and	a.nr_sequencia_prescricao = nr_sequencia_prescricao_w
AND	a.nr_seq_agenda_int = b.nr_sequencia
and	b.nr_seq_status = c.nr_sequencia
and	c.ie_status_tasy = 'AG';

if (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') and (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') and (nr_seq_agenda_int_w = 0) then
begin

-- VERIFICA SE JA EXISTE AGENDAMENTO PARA A PRESCRICAO
	SELECT 	coalesce(MAX(b.nr_sequencia),0)
	into STRICT	nr_seq_agenda_int_w
	FROM	agenda_integrada_item a,
		agenda_integrada b,
		agenda_integrada_status c
	WHERE	a.nr_prescricao = nr_prescricao_w
	and	a.nr_sequencia_prescricao = nr_sequencia_prescricao_w
	AND	a.nr_seq_agenda_int = b.nr_sequencia
	and	b.nr_seq_status = c.nr_sequencia
	and	c.ie_status_tasy = 'EA';
	
-- Busca os dados	
	
	select	max(coalesce(obter_valor_param_usuario(99010,146,wheb_usuario_pck.get_cd_perfil,nm_usuario_p,wheb_usuario_pck.get_cd_estabelecimento),obter_convenio_atendimento(b.nr_atendimento))),
			max(b.cd_estabelecimento),
			max(p.cd_pessoa_fisica),
			max(SUBSTR(OBTER_NOME_PF(p.cd_pessoa_fisica), 1,60)),--max(p.nm_pessoa_fisica),
			max(p.ie_sexo),
			max(p.dt_nascimento),
			max(a.nr_prescricao),
			max(a.nr_sequencia),
			max(c.ie_tipo_atendimento),
			max(coalesce(obter_valor_param_usuario(99010,147,wheb_usuario_pck.get_cd_perfil,nm_usuario_p,wheb_usuario_pck.get_cd_estabelecimento),d.cd_categoria)),
			max(coalesce(obter_valor_param_usuario(99010,148,wheb_usuario_pck.get_cd_perfil,nm_usuario_p,wheb_usuario_pck.get_cd_estabelecimento),d.cd_plano_convenio)),
			max(d.nr_doc_convenio),
			max(d.cd_usuario_convenio),
			max(b.cd_medico),
			max((obter_idade(dt_nascimento,clock_timestamp(),'A'))::numeric )
	into STRICT		cd_convenio_w,
			cd_estabelecimento_w,
			cd_pessoa_fisica_w,
			nm_pessoa_fisica_w,
			ie_sexo_w,
			dt_nascimento_w,
			nr_prescricao_w,
			nr_sequencia_prescricao_w,
			ie_tipo_atendimento_w,
			cd_categoria_w,		
			cd_plano_w,
			nr_doc_convenio_w,
			cd_usuario_convenio_w,
			cd_medico_exec_w,
			qt_idade_pac_w
	from		pessoa_fisica p,
			prescr_medica  b,
			prescr_procedimento a,
			atendimento_paciente c,
			atend_categoria_convenio d
	where		a.nr_prescricao 	= b.nr_prescricao
	and		b.cd_pessoa_fisica	= p.cd_pessoa_fisica
	and		b.nr_atendimento 	= c.nr_atendimento
	and		c.nr_atendimento 	= d.nr_atendimento
	and		d.nr_seq_interno	 = obter_atecaco_atendimento(c.nr_atendimento)
	and		a.nr_prescricao		= nr_prescricao_w
	and		a.nr_sequencia		= nr_sequencia_prescricao_w;
	

--	GERAR O AGENDAMENTO	
	
	if (nr_seq_agenda_int_w = 0) then

		select	nextval('agenda_integrada_seq')
		into STRICT	nr_seq_agenda_int_w
		;

		dt_inicio_agendamento_w := clock_timestamp();

		select	min(nr_sequencia)
		into STRICT	nr_seq_status_w
		from	agenda_integrada_status
		where	ie_status_tasy = 'EA';

		insert into agenda_integrada(	
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,	
				dt_inicio_agendamento,
				nr_seq_status,
				cd_convenio,	
				cd_estabelecimento,
				cd_pessoa_fisica,
				ie_turno,
				ie_bloqueio_checklist,
				nm_paciente,
				dt_nascimento,
				ie_sexo,
				ie_tipo_atendimento,
				cd_categoria,
				cd_plano,
				nr_doc_convenio,
				cd_usuario_convenio)
			values (	nr_seq_agenda_int_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					dt_inicio_agendamento_w,
					nr_seq_status_w,
					cd_convenio_w,	
					cd_estabelecimento_w,
					cd_pessoa_fisica_w,
					2,
					'N',
					nm_pessoa_fisica_w,
					dt_nascimento_w,
					ie_sexo_w,
					ie_tipo_atendimento_w,
					cd_categoria_w,		
					cd_plano_w,
					nr_doc_convenio_w,
					cd_usuario_convenio_w);

		commit;	

		nr_seq_agenda_integrada_P	:=	nr_seq_agenda_int_w;
		

		
	end if;

-- 	BUSCAR PROCEDIMENTO 
	select		a.nr_seq_proc_interno,
			a.cd_procedimento,
			a.ie_origem_proced,
			a.ie_lado,
			a.dt_prev_execucao,
			a.nr_prescricao,
			a.nr_sequencia,
			coalesce(a.nr_seq_exame,0),
			a.nr_seq_interno
	into STRICT		nr_seq_proc_interno_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			ie_lado_w,
			dt_prevista_item_w,
			nr_prescricao_w,
			nr_sequencia_prescricao_w,
			nr_seq_exame_w,
			nr_seq_interno_w
	from		pessoa_fisica p,
			prescr_medica  b,
			prescr_procedimento a
	where		a.nr_prescricao 	= b.nr_prescricao
	and		b.cd_pessoa_fisica	= p.cd_pessoa_fisica
	and		a.nr_prescricao 	= nr_prescricao_w
	and		a.nr_sequencia 		= nr_sequencia_prescricao_w;
	
-- Verifica se o procedimento possui duracao cadastrada.
	select  count(*)
	into STRICT	nr_count_w
	from	agenda_int_grupo_item a,
			AGENDA_INT_AREA c,
			AGENDA_INT_GRUPO b
	where   a.nr_seq_proc_interno = nr_seq_proc_interno_w
	and		a.nr_seq_grupo = b.nr_sequencia
	and	    b.nr_seq_area = c.nr_sequencia
	and		c.cd_estabelecimento = cd_estabelecimento_w;
			
	if (nr_count_w = 1) then
	
		select 	nr_minuto_duracao
		into STRICT	nr_minuto_duracao_w
		from	agenda_int_grupo_item a,
				AGENDA_INT_AREA c,
				AGENDA_INT_GRUPO b
		where   a.nr_seq_proc_interno = nr_seq_proc_interno_w
		and		a.nr_seq_grupo = b.nr_sequencia
		and	    b.nr_seq_area = c.nr_sequencia
		and		c.cd_estabelecimento = cd_estabelecimento_w;
				
	end if;
	
	if (nr_count_w > 1) then
	
		select 	max(nr_minuto_duracao)
		into STRICT	nr_minuto_duracao_w
		from	agenda_int_grupo_item a,
				AGENDA_INT_AREA c,
				AGENDA_INT_GRUPO b
		where   a.nr_seq_proc_interno = nr_seq_proc_interno_w
		and		a.nr_seq_grupo = b.nr_sequencia
		and	    b.nr_seq_area = c.nr_sequencia
		and		c.cd_estabelecimento = cd_estabelecimento_w;
		
		select count(*)
		into STRICT  nr_count_aux_w
		from	agenda_int_grupo_item a,
				AGENDA_INT_AREA c,
				AGENDA_INT_GRUPO b
		where   a.nr_seq_proc_interno = nr_seq_proc_interno_w
		and		a.nr_seq_grupo = b.nr_sequencia
		and	    b.nr_seq_area = c.nr_sequencia
		and		c.cd_estabelecimento = cd_estabelecimento_w
		and    nr_minuto_duracao = nr_minuto_duracao_w;
		
		if (nr_count_aux_w <> nr_count_w) then
			nr_minuto_duracao_w := null;
		end if;
	
	end if;

--	Inserir exames
	if (nr_seq_exame_w > 0 ) then
		begin	
				--	INSERIR EXAMES DE LABORATORIO
				select	nextval('ageint_exame_lab_seq')
				into STRICT	ageint_seq_lab_w
				;
				
				insert into ageint_exame_lab(
								 nr_sequencia,
								 dt_atualizacao,
								 nm_usuario,
								 dt_atualizacao_nrec,
								 nm_usuario_nrec,
								 nr_seq_proc_interno,
								 nr_seq_ageint,
								 cd_procedimento,
								 ie_origem_proced,
								 nr_seq_exame,
								 nr_seq_interno_prescr
								 )
				values (
								 ageint_seq_lab_w,
								 clock_timestamp(),
								 nm_usuario_p,
								 clock_timestamp(),
								 nm_usuario_p,
								 nr_seq_proc_interno_w,
								 nr_seq_agenda_int_w,
								 cd_procedimento_w,
								 ie_origem_proced_w,
								 nr_seq_exame_w,
								 nr_seq_interno_w
								 );
								
				commit;
				
						select count(*)
						into STRICT   nr_autorizacao_w
						from   procedimento_autorizado
						where   nr_prescricao = nr_prescricao_w
						and		nr_seq_prescricao = nr_sequencia_prescricao_w;
						
						if (nr_autorizacao_w > 0) then
							begin

							update	procedimento_autorizado
							set		nr_seq_ageint_exame_lab = ageint_seq_lab_w
							where   nr_prescricao = nr_prescricao_w
							and		nr_seq_prescricao = nr_sequencia_prescricao_w;

							end;

						end if;				
											  
		end;
	else
		begin			
		-- INSERIR PROCEDIMENTO NO AGENDAMENTO
				
			select coalesce(max(a.nr_sequencia),0)
            into STRICT nr_seq_agenda_integrada_item_w
            from agenda_integrada_item a
            where nr_seq_solic_compl = nr_sequencia_p;
				
                if (nr_seq_agenda_integrada_item_w = 0) then
                begin
				
				select	nextval('agenda_integrada_item_seq')
				into STRICT	nr_seq_agenda_integrada_item_w	
				;

				insert into agenda_integrada_item(	nr_sequencia,
									nr_seq_agenda_int,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_seq_proc_interno,
									ie_tipo_agendamento,
									ie_lado,
									cd_procedimento,
									ie_origem_proced,
									cd_estabelecimento,
									nr_prescricao,
									nr_sequencia_prescricao,
									nr_minuto_duracao,
									ie_duplicado_estab,
									nr_seq_solic_compl)
									values (	nr_seq_agenda_integrada_item_w,
										nr_seq_agenda_int_w,
										clock_timestamp(),
										nm_usuario_p,
										clock_timestamp(),
										nm_usuario_p,
										nr_seq_proc_interno_w,
										'E',
										ie_lado_w,
										cd_procedimento_w,
										ie_origem_proced_w,
										cd_estabelecimento_w,
										nr_prescricao_w,
										nr_sequencia_prescricao_w,
										nr_minuto_duracao_w,
										'N',
										nr_sequencia_p);		
										
			commit;
			
		CALL ageint_gerar_proc_Assoc(nr_seq_agenda_int_w, nr_seq_agenda_integrada_item_w, nr_seq_proc_interno_w, nm_usuario_p, 0);
		
		CALL Ageint_atualiza_dur_ex_adic(nr_seq_agenda_integrada_item_w,'E','');
		
		CALL ageint_gerar_anexos_proc(nr_seq_agenda_int_w, nr_seq_proc_interno_w, cd_estabelecimento_w, nm_usuario_p);
		
		--Ageint_atualiza_convenio_itens(cd_convenio_w, cd_categoria_w, cd_plano_w, nr_seq_agenda_int_w, nm_usuario_p, cd_estabelecimento_w);
		
		CALL Ageint_Gerar_Equip_Item(nr_seq_proc_interno_w, nr_seq_agenda_integrada_item_w, cd_estabelecimento_w, nm_usuario_p);
				end;
            end if;
		end;
	end if;
	
end;
end if;	

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_agenda_integrada_mmed ( nr_sequencia_p bigint, nm_usuario_p text, nr_seq_agenda_integrada_P INOUT bigint) FROM PUBLIC;

