-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rop_gerar_itens_regra_roupa ( dt_inventario_p timestamp, cd_estabelecimento_p bigint, ie_somente_setor_usuario_p text, nm_usuario_p text) AS $body$
DECLARE

 
cd_setor_atendimento_w		integer;
cd_pessoa_resp_w			varchar(10);
nr_seq_inventario_w		bigint;
nr_seq_roupa_w			bigint;
qt_minimo_w			integer;
qt_maximo_w			integer;
nr_seq_kit_w			bigint;
ie_libera_w			varchar(1);
ie_somente_setor_usuario_w		varchar(1);
cd_setor_usuario_w		integer;

c01 CURSOR FOR 
SELECT	distinct 
	a.cd_setor_atendimento 
from	rop_regra_roupa_setor a 
where	a.cd_estabelecimento = cd_estabelecimento_p 
and	coalesce(ie_somente_setor_usuario_p,'N') = 'N' 

union all
 
SELECT	distinct 
	b.cd_setor_atendimento 
from	rop_regra_roupa_setor a, 
	rop_regra_roupa_setores b 
where	a.nr_sequencia = b.nr_seq_regra 
and	a.cd_estabelecimento = cd_estabelecimento_p 
and	a.cd_setor_atendimento <> b.cd_setor_atendimento 
and	coalesce(ie_somente_setor_usuario_p,'N') = 'N' 

union all
 
select	distinct 
	a.cd_setor_atendimento 
from	rop_regra_roupa_setor a 
where	a.cd_estabelecimento = cd_estabelecimento_p 
and	coalesce(ie_somente_setor_usuario_p,'N') = 'S' 
and	a.cd_setor_atendimento = cd_setor_usuario_w 

union all
 
select	distinct 
	b.cd_setor_atendimento 
from	rop_regra_roupa_setor a, 
	rop_regra_roupa_setores b 
where	a.nr_sequencia = b.nr_seq_regra 
and	a.cd_estabelecimento = cd_estabelecimento_p 
and	a.cd_setor_atendimento <> b.cd_setor_atendimento 
and	coalesce(ie_somente_setor_usuario_p,'N') = 'S' 
and	b.cd_setor_atendimento = cd_setor_usuario_w;

c02 CURSOR FOR 
SELECT	a.nr_seq_roupa, 
	a.qt_minimo, 
	a.qt_maximo 
from	rop_regra_roupa_setor a 
where	a.cd_estabelecimento	= cd_estabelecimento_p 
and	a.cd_setor_atendimento	= cd_setor_atendimento_w 
and	(a.nr_seq_roupa IS NOT NULL AND a.nr_seq_roupa::text <> '') 

union
 
SELECT	a.nr_seq_roupa, 
	b.qt_minimo, 
	b.qt_maximo 
from	rop_regra_roupa_setor a, 
	rop_regra_roupa_setores b 
where	a.nr_sequencia 		= b.nr_seq_regra 
and	a.cd_estabelecimento	= cd_estabelecimento_p 
and	a.cd_setor_atendimento	<> b.cd_setor_atendimento 
and	b.cd_setor_atendimento	= cd_setor_atendimento_w 
and	(a.nr_seq_roupa IS NOT NULL AND a.nr_seq_roupa::text <> '');

c03 CURSOR FOR 
SELECT	a.nr_seq_kit, 
	a.qt_minimo, 
	a.qt_maximo 
from	rop_regra_roupa_setor a 
where	a.cd_estabelecimento	= cd_estabelecimento_p 
and	a.cd_setor_atendimento	= cd_setor_atendimento_w 
and	(a.nr_seq_kit IS NOT NULL AND a.nr_seq_kit::text <> '') 

union
 
SELECT	a.nr_seq_kit, 
	b.qt_minimo, 
	b.qt_maximo 
from	rop_regra_roupa_setor a, 
	rop_regra_roupa_setores b 
where	a.nr_sequencia 		= b.nr_seq_regra 
and	a.cd_estabelecimento	= cd_estabelecimento_p 
and	a.cd_setor_atendimento	<> b.cd_setor_atendimento 
and	b.cd_setor_atendimento	= cd_setor_atendimento_w 
and	(a.nr_seq_kit IS NOT NULL AND a.nr_seq_kit::text <> '');


BEGIN 
 
select (max(obter_valor_param_usuario(1301, 71, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p))) 
into STRICT	ie_libera_w
;
 
select	coalesce(max(obter_setor_usuario(nm_usuario_p)),0) 
into STRICT	cd_setor_usuario_w
;
 
open C01;
loop 
fetch C01 into 
	cd_setor_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	select	coalesce(substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,100),'X'), 
		nextval('rop_inv_reposicao_seq') 
	into STRICT	cd_pessoa_resp_w, 
		nr_seq_inventario_w 
	;
 
	if (cd_pessoa_resp_w = 'X') then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266269);
		--'Usuário sem cadastro de pessoa fisíca. Favor cadastrar o mesmo.'); 
	end if;
 
	insert into rop_inv_reposicao( 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		dt_inventario, 
		nm_usuario_lib, 
		dt_liberacao, 
		cd_setor_atendimento, 
		cd_estabelecimento, 
		cd_pessoa_resp, 
		pr_reposicao) 
	values (	nr_seq_inventario_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		dt_inventario_p, 
		null, 
		null, 
		cd_setor_atendimento_w, 
		cd_estabelecimento_p, 
		cd_pessoa_resp_w, 
		100);
	 
	open C02;
	loop 
	fetch C02 into 
		nr_seq_roupa_w, 
		qt_minimo_w, 
		qt_maximo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
 
		insert into rop_inv_reposicao_item( 
			nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			nr_seq_inventario, 
			nr_seq_roupa, 
			qt_contagem, 
			qt_minimo, 
			qt_maximo, 
			qt_repor) 
		values (	nextval('rop_inv_reposicao_item_seq'), 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_inventario_w, 
			nr_seq_roupa_w, 
			0, 
			qt_minimo_w, 
			qt_maximo_w, 
			0);
		end;
	end loop;
	close C02;
 
	open C03;
	loop 
	fetch C03 into 
		nr_seq_kit_w, 
		qt_minimo_w, 
		qt_maximo_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
 
		insert into rop_inv_reposicao_item( 
			nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			nr_seq_inventario, 
			nr_seq_kit, 
			qt_contagem, 
			qt_minimo, 
			qt_maximo, 
			qt_repor) 
		values (	nextval('rop_inv_reposicao_item_seq'), 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_inventario_w, 
			nr_seq_kit_w, 
			0, 
			qt_minimo_w, 
			qt_maximo_w, 
			0);
		end;
	end loop;
	close C03;
	 
	if (ie_libera_w = 'S') then 
		update	rop_inv_reposicao 
		set	dt_liberacao	= clock_timestamp(), 
			nm_usuario_lib	= nm_usuario_p 
		where	nr_sequencia	= nr_seq_inventario_w;
	end if;	
	 
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rop_gerar_itens_regra_roupa ( dt_inventario_p timestamp, cd_estabelecimento_p bigint, ie_somente_setor_usuario_p text, nm_usuario_p text) FROM PUBLIC;

