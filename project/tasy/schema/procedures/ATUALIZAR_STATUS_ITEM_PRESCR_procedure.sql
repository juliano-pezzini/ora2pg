-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_status_item_prescr ( nr_prescricao_p bigint, nr_seq_item_p bigint, ie_status_p text, ie_item_p text, nm_usuario_p text) AS $body$
DECLARE

/*
ie_item_p :
P - prescr_procedimento
S - prescr_solucao
N - nut_pac
M - prescr_material
*/
-- ATENÇÃO: esta procedure altera apenas dt_status e ie_status (foi criada especificamente para o status 'P')
dt_inicio_prescr_w		timestamp;
dt_validade_prescr_w	timestamp;
dt_status_w				timestamp;
dt_inicio_nut_w			timestamp;
hr_inicio_nut_w			varchar(5);
cd_funcao_origem_w		prescr_medica.cd_funcao_origem%type;
nr_horas_validade_w		prescr_medica.nr_horas_validade%type;
nr_seq_dialise_cpoe_w	prescr_solucao.nr_seq_dialise_cpoe%type;
dt_inicio_w				cpoe_dialise.dt_inicio%type;


BEGIN

dt_status_w	:= clock_timestamp();

select	max(dt_inicio_prescr),
		max(dt_validade_prescr),
		max(cd_funcao_origem),
		max(nr_horas_validade)
into STRICT	dt_inicio_prescr_w,
		dt_validade_prescr_w,
		cd_funcao_origem_w,
		nr_horas_validade_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

if (ie_status_p	= 'P') and
	not(dt_status_w	between dt_inicio_prescr_w and dt_validade_prescr_w) then
	dt_status_w	:= dt_inicio_prescr_w;
end if;

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_item_p IS NOT NULL AND nr_seq_item_p::text <> '') then

	if (ie_item_p = 'P') then

		update  prescr_procedimento
		set	ie_status = ie_status_p,
                        dt_status = dt_status_w
		where   nr_prescricao = nr_prescricao_p
		and	nr_sequencia = nr_seq_item_p;

	elsif (ie_item_p = 'S') then

		if (cd_funcao_origem_w = 2314) then

			select 	max(nr_seq_dialise_cpoe)
			into STRICT	nr_seq_dialise_cpoe_w
			from	prescr_solucao
			where	nr_prescricao = nr_prescricao_p
			and 	nr_seq_solucao = nr_seq_item_p;

			if (coalesce(nr_seq_dialise_cpoe_w,0) > 0) then

				select	max(dt_inicio)
				into STRICT	dt_inicio_w
				from 	cpoe_dialise
				where 	nr_sequencia = nr_seq_dialise_cpoe_w;

				if (dt_inicio_w IS NOT NULL AND dt_inicio_w::text <> '') and (dt_inicio_w between dt_inicio_prescr_w and dt_inicio_prescr_w + nr_horas_validade_w/24) then

					dt_status_w := dt_inicio_w;
				end if;
			end if;
		end if;

		update  prescr_solucao
		set	ie_status = ie_status_p,
                        dt_status = dt_status_w
		where   nr_prescricao = nr_prescricao_p
		and	coalesce(ie_acm,'N')	= 'N'
		and	coalesce(ie_se_necessario,'N') = 'N'
		and	nr_seq_solucao	= nr_seq_item_p;

	elsif (ie_item_p = 'N') then

		update  nut_pac
		set	ie_status = ie_status_p,
                        dt_status = dt_status_w
		where   nr_prescricao = nr_prescricao_p
		and	nr_sequencia = nr_seq_item_p;

	elsif (ie_item_p = 'M') then

		update  prescr_material
		set	ie_status = ie_status_p,
                        dt_status = dt_status_w
		where   nr_prescricao = nr_prescricao_p
		and	nr_sequencia = nr_seq_item_p;

	elsif (ie_item_p = 'NPT') then

		select 	coalesce(max(hr_prim_horario), to_char(dt_inicio_prescr_w, 'hh24:mi'))
		into STRICT	hr_inicio_nut_w
		from	nut_pac
		where   nr_prescricao = nr_prescricao_p
		and		nr_sequencia = nr_seq_item_p;

		dt_inicio_nut_w	:= pkg_date_utils.get_time(dt_status_w, hr_inicio_nut_w, 0);

		if not(dt_inicio_nut_w	between dt_inicio_prescr_w and dt_validade_prescr_w) then

			dt_inicio_nut_w	:= dt_inicio_nut_w + 1;

			if not(dt_inicio_nut_w	between dt_inicio_prescr_w and dt_validade_prescr_w) then
				dt_inicio_nut_w	:= dt_status_w;
			end if;

		end if;

		update  nut_pac
		set		ie_status = ie_status_p,
                dt_status = dt_inicio_nut_w
		where   nr_prescricao = nr_prescricao_p
		and		nr_sequencia = nr_seq_item_p;

	end if;

end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_status_item_prescr ( nr_prescricao_p bigint, nr_seq_item_p bigint, ie_status_p text, ie_item_p text, nm_usuario_p text) FROM PUBLIC;

