-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_valida_ocor_aut_vl_conta ( nr_seq_ocorrencia_p bigint, nr_seq_ocor_combinada_p bigint, ie_aplicacao_regra_p text, ie_utiliza_filtro_p text, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
Procedure utilizada para validar informações de contratação do beneficiário, esta rotina é 
utilizada para geração de ocorrência na Autorização / Requisição e Execução 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [x Tasy (Delphi/Java) [ x] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
 Rotina utilizada para geração de ocorrência na Autorização / Requisição e Execução 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
cd_procedimento_w			bigint;
cd_proced_filtro_w			bigint;
ie_origem_proced_w			bigint;
ie_origem_proced_fil_w			bigint;
ie_gerar_ocorrencia_w			varchar(2)	:= 'N';
ie_exige_valor_conta_w			varchar(2);
ie_tipo_ocorrencia_w			varchar(2);
ie_regra_w				varchar(2);
ie_gerou_ocor_cabecalho_w		varchar(2);
ie_grupo_servico_w			varchar(2);
nr_seq_exige_valor_w			bigint;
nr_seq_guia_proc_w			bigint;
nr_seq_guia_proc_fil_w			bigint;
nr_seq_guia_mat_w			bigint;
nr_seq_guia_mat_fil_w			bigint;
nr_seq_oc_benef_w			bigint;
nr_seq_grupo_servico_w			bigint;
nr_seq_mat_filtro_w			bigint;
nr_seq_material_w			bigint;

C01 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced 
	from	pls_guia_plano_proc 
	where	nr_seq_guia		= nr_seq_guia_p;

C02 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_material 
	from	pls_guia_plano_mat 
	where	nr_seq_guia		= nr_seq_guia_p;

C03 CURSOR FOR 
	SELECT	nr_seq_exige_valor 
	from	pls_validacao_aut_valor 
	where	nr_seq_ocor_aut_combinada	= nr_seq_ocor_combinada_p 
	and	ie_situacao			= 'A';

C04 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced 
	from	pls_guia_plano_proc 
	where	nr_seq_guia		= nr_seq_guia_p;
	
C05 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_material 
	from	pls_guia_plano_mat 
	where	nr_seq_guia		= nr_seq_guia_p;
	

BEGIN 
 
open C01;
loop 
fetch C01 into	 
	nr_seq_guia_proc_w, 
	cd_procedimento_w, 
	ie_origem_proced_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	open C03;
	loop 
	fetch C03 into	 
		nr_seq_exige_valor_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		ie_exige_valor_conta_w	:= pls_obter_se_proc_mat_exige_vl(nr_seq_exige_valor_w, cd_procedimento_w, ie_origem_proced_w, null);
 
		if (ie_exige_valor_conta_w	= 'S') and (ie_utiliza_filtro_p	= 'S') then 
			ie_gerar_ocorrencia_w	:= 'N';
			open C04;
			loop 
			fetch C04 into	 
				nr_seq_guia_proc_fil_w, 
				cd_proced_filtro_w, 
				ie_origem_proced_fil_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin 
				 /*Tratamento para filtros */
 
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, nr_seq_guia_proc_fil_w, null, null, null, null, cd_procedimento_w, ie_origem_proced_fil_w, null, ie_gerou_ocor_cabecalho_w, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
								 
				if (ie_regra_w	= 'S') then 
					ie_gerar_ocorrencia_w	:= 'S';
				end if;
				end;
			end loop;
			close C04;
 
			open C05;
			loop 
			fetch C05 into 
				nr_seq_guia_mat_fil_w, 
				nr_seq_mat_filtro_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin 
				/* Tratamento para filtros */
 
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, null, nr_seq_guia_mat_fil_w, null, null, null, null, null, nr_seq_mat_filtro_w, ie_gerou_ocor_cabecalho_w, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
				 
				if (ie_regra_w	= 'S') then 
					ie_gerar_ocorrencia_w	:= 'S';
				end if;
				end;
			end loop;
			close C05;
		elsif (ie_exige_valor_conta_w	= 'S') and (ie_utiliza_filtro_p	= 'N') then 
			ie_gerar_ocorrencia_w	:= 'S';
		end if;
		 
		if (ie_gerar_ocorrencia_w	= 'S') then 
			nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, nr_seq_guia_proc_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 1, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
						 
			update	pls_guia_plano_proc 
			set	ie_exige_valor_conta	= 'S' 
			where	nr_sequencia		= nr_seq_guia_proc_w;
			 
			CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
							nr_seq_guia_p, null, null, 
							nr_seq_guia_proc_w, null, null, 
							null, null, null, 
							nm_usuario_p, cd_estabelecimento_p);
 
			ie_gerar_ocorrencia_w	:= '';
		end if;
		end;
	end loop;
	close C03;
	end;
end loop;
close C01;
 
open C02;
loop 
fetch C02 into	 
	nr_seq_guia_mat_w, 
	nr_seq_material_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
	open C03;
	loop 
	fetch C03 into	 
		nr_seq_exige_valor_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		ie_exige_valor_conta_w	:= pls_obter_se_proc_mat_exige_vl(nr_seq_exige_valor_w, null, null, nr_seq_material_w);
 
		if (ie_exige_valor_conta_w	= 'S') and (ie_utiliza_filtro_p	= 'S') then 
			ie_gerar_ocorrencia_w	:= 'N';
			open C04;
			loop 
			fetch C04 into	 
				nr_seq_guia_proc_fil_w, 
				cd_proced_filtro_w, 
				ie_origem_proced_fil_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin 
				/* Tratamento para filtros */
 
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, nr_seq_guia_proc_fil_w, null, null, null, null, cd_proced_filtro_w, ie_origem_proced_fil_w, null, ie_gerou_ocor_cabecalho_w, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
								 
				if (ie_regra_w	= 'S') then 
					ie_gerar_ocorrencia_w	:= 'S';
				end if;
				end;
			end loop;
			close C04;
 
			open C05;
			loop 
			fetch C05 into 
				nr_seq_guia_mat_fil_w, 
				nr_seq_mat_filtro_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin 
				/* Tratamento para filtros */
 
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, null, nr_seq_guia_mat_fil_w, null, null, null, null, null, nr_seq_mat_filtro_w, ie_gerou_ocor_cabecalho_w, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
				 
				if (ie_regra_w	= 'S') then 
					ie_gerar_ocorrencia_w	:= 'S';
				end if;
				end;
			end loop;
			close C05;
		elsif (ie_exige_valor_conta_w	= 'S') and (ie_utiliza_filtro_p	= 'N') then 
			ie_gerar_ocorrencia_w	:= 'S';
		end if;
		 
		if (ie_gerar_ocorrencia_w	= 'S') then 
			nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, null, nr_seq_guia_mat_w, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 2, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
						 
			update	pls_guia_plano_mat 
			set	ie_exige_valor_conta	= 'S' 
			where	nr_sequencia		= nr_seq_guia_mat_w;
			 
			CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
							nr_seq_guia_p, null, null, 
							null, nr_seq_guia_mat_w, null, 
							null, null, null, 
							nm_usuario_p, cd_estabelecimento_p);
 
			ie_gerar_ocorrencia_w	:= '';
		end if;
		end;
	end loop;
	close C03;
	end;
end loop;
close C02;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_valida_ocor_aut_vl_conta ( nr_seq_ocorrencia_p bigint, nr_seq_ocor_combinada_p bigint, ie_aplicacao_regra_p text, ie_utiliza_filtro_p text, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

