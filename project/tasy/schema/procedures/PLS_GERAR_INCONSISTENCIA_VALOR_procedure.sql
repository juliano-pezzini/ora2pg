-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_inconsistencia_valor ( nr_seq_conta_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


vl_item_w	double precision;
vl_pagamento_w	double precision;
vl_liberado_w	double precision;
nr_seq_item_w	bigint;
ie_proc_mat_w	varchar(1);
ds_observacao_w	varchar(4000);

C01 CURSOR FOR
	SELECT	'P',
		vl_liberado,
		nr_sequencia
	from	pls_conta_proc
	where	nr_seq_conta 	= nr_seq_conta_p
	and	vl_liberado	> 0
	
union all

	SELECT	'M',
		vl_liberado,
		nr_sequencia
	from	pls_conta_mat
	where	nr_seq_conta = nr_seq_conta_p
	and	vl_liberado	> 0;

C02 CURSOR FOR
	SELECT	vl_total
	from	pls_conta
	where	nr_sequencia = nr_seq_conta_p;

BEGIN

delete	FROM pls_conta_consist_resumo
where	nr_seq_conta	= nr_seq_conta_p;

open C01;
loop
fetch C01 into
	ie_proc_mat_w,
	vl_liberado_w,
	nr_seq_item_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (ie_proc_mat_w	= 'M') then
		select	coalesce(sum(vl_lib_original),0)
		into STRICT	vl_pagamento_w
		from	pls_conta_medica_resumo
		where	nr_seq_conta_mat	= nr_seq_item_w
		and	nr_seq_conta		= nr_seq_conta_p
		and	ie_tipo_item		<> 'I'
		and	vl_lib_original 	> 0
		and	((coalesce(ie_situacao::text, '') = '') or (ie_situacao != 'I'));
	elsif (ie_proc_mat_w	= 'P') then
		select	coalesce(sum(vl_lib_original),0)
		into STRICT	vl_pagamento_w
		from	pls_conta_medica_resumo
		where	nr_seq_conta_proc	= nr_seq_item_w
		and	nr_seq_conta		= nr_seq_conta_p
		and	ie_tipo_item		<> 'I'
		and	vl_lib_original 	> 0
		and	((coalesce(ie_situacao::text, '') = '') or (ie_situacao != 'I'));
	end if;

	if (vl_liberado_w <> vl_pagamento_w) then
		insert	into pls_conta_consist_resumo( 	ds_inconsistencia,dt_atualizacao,dt_atualizacao_nrec,
								nm_usuario,nm_usuario_nrec,nr_seq_conta,
								nr_sequencia )
			     values ( 	'Inconsistência entre o valor liberado no item R$ '||vl_liberado_w||' e o liberado para pagamento R$ '||vl_pagamento_w||' . Item '||nr_seq_item_w,clock_timestamp(),clock_timestamp(),
								nm_usuario_p,nm_usuario_p,nr_seq_conta_p,
								nextval('pls_conta_consist_resumo_seq') );
	end if;

	end;
end loop;
close C01;

for r_c02_w in C02() loop
	begin
	select	coalesce(sum(vl_lib_original),0)
	into STRICT	vl_pagamento_w
	from	pls_conta_medica_resumo
	where	nr_seq_conta		= nr_seq_conta_p
	and	ie_tipo_item		<> 'I'
	and	vl_lib_original 	> 0
	and	((coalesce(ie_situacao::text, '') = '') or (ie_situacao != 'I'));
	if (r_c02_w.vl_total <> vl_pagamento_w) then
		insert	into pls_conta_consist_resumo( 	ds_inconsistencia,dt_atualizacao,dt_atualizacao_nrec,
								nm_usuario,nm_usuario_nrec,nr_seq_conta,
								nr_sequencia )
			     values ( 	'Inconsistência entre o valor liberado no item R$ '||r_c02_w.vl_total||' e o liberado para pagamento R$ '||vl_pagamento_w||' . Conta '||nr_seq_conta_P,clock_timestamp(),clock_timestamp(),
								nm_usuario_p,nm_usuario_p,nr_seq_conta_p,
								nextval('pls_conta_consist_resumo_seq') );
	end if;

	end;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_inconsistencia_valor ( nr_seq_conta_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

