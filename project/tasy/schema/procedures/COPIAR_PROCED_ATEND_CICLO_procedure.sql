-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copiar_proced_atend_ciclo ( nr_seq_atendimento_p bigint, nr_seq_procedimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_estab_usuario_w		smallint;
nr_seq_atendimento_w		bigint;
nr_seq_paciente_w		bigint;
nr_seq_procedimento_w		integer;
ie_gerar_pend_quimio_w		varchar(1);

c01 CURSOR FOR
	SELECT	*
	from	paciente_atend_proc
	where	nr_seq_atendimento	= nr_seq_atendimento_p
	and	nr_seq_procedimento	= nr_seq_procedimento_p;
c01_w	c01%rowtype;

C02 CURSOR FOR
	SELECT	nr_seq_atendimento
	from	paciente_atendimento
	where	nr_seq_paciente		= nr_seq_paciente_w
	and	nr_seq_atendimento	<> nr_seq_atendimento_p
	and	coalesce(nr_prescricao::text, '') = '';


BEGIN

cd_estab_usuario_w	:= wheb_usuario_pck.get_cd_estabelecimento;
ie_gerar_pend_quimio_w := obter_param_usuario(865, 255, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_gerar_pend_quimio_w);

select	nr_seq_paciente
into STRICT	nr_seq_paciente_w
from	paciente_atendimento
where	nr_seq_atendimento	= nr_seq_atendimento_p;

open C01;
loop
fetch C01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin


	open C02;
	loop
	fetch C02 into
		nr_seq_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		select	coalesce(max(nr_seq_procedimento),0)	+ 1
		into STRICT	nr_seq_procedimento_w
		from	paciente_atend_proc
		where	nr_seq_atendimento	= nr_seq_atendimento_w;


		insert into paciente_atend_proc( nr_seq_atendimento,
						  nr_seq_procedimento,
						  cd_procedimento,
						  ie_origem_proced,
						  qt_procedimento,
						  dt_atualizacao,
						  nm_usuario,
						  dt_atualizacao_nrec,
						  nm_usuario_nrec,
						  cd_intervalo,
						  nr_agrupamento,
						  ie_se_necessario,
						  ie_acm,
						  nr_seq_proc_interno,
						  ie_lado,
						  nr_seq_ordem_adep,
						  ie_local_adm)
		values ( nr_seq_atendimento_w,
						  nr_seq_procedimento_w,
						  c01_w.cd_procedimento,
						  c01_w.ie_origem_proced,
						  c01_w.qt_procedimento,
						  clock_timestamp(),
						  nm_usuario_p,
						  clock_timestamp(),
						  nm_usuario_p,
						  c01_w.cd_intervalo,
						  c01_w.nr_agrupamento,
						  c01_w.ie_se_necessario,
						  c01_w.ie_acm,
						  c01_w.nr_seq_proc_interno,
						  c01_w.ie_lado,
						  c01_w.nr_seq_ordem_adep,
						  CASE WHEN ie_gerar_pend_quimio_w='S' THEN  coalesce(c01_w.IE_LOCAL_ADM,'H')  ELSE coalesce(c01_w.IE_LOCAL_ADM,'') END );


		end;
	end loop;
	close C02;

	end;
end loop;
close C01;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_proced_atend_ciclo ( nr_seq_atendimento_p bigint, nr_seq_procedimento_p bigint, nm_usuario_p text) FROM PUBLIC;

