-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_valor_retorno_movto (nr_seq_retorno_p bigint, nr_seq_ret_item_p bigint, cd_categoria_p text, vl_pago_p INOUT bigint, nm_usuario_p text) AS $body$
DECLARE


cd_convenio_w			integer;
dt_ref_preco_w		timestamp;
qt_pontos_w			preco_amb.qt_pontuacao%type;
nr_sequencia_w		bigint;
tp_proced_w			smallint;
cd_proced_w			bigint;
qt_paga_w			double precision;

vl_pago_w			double precision := 0;
vl_coper_w			double precision;
vl_anest_w			double precision;
vl_medico_w			double precision;
vl_aux_w			double precision;
vl_mat_w			double precision;
vl_pto_proc_w			double precision;
vl_pto_coper_w		double precision;
vl_pto_anest_w		double precision;
vl_pto_med_w			double precision;
vl_pto_aux_w			double precision;
vl_pto_mat_w			double precision;
qt_porte_anest_w		double precision;
cd_edicao_amb_w		integer;
cd_usuario_convenio_w	varchar(40);
cd_plano_w			varchar(20);
ie_clinica_w			bigint;
cd_empresa_ref_w		bigint;
ie_preco_informado_w		varchar(01);
nr_seq_ajuste_proc_w		bigint;
nr_seq_origem_w			bigint;
C01 CURSOR FOR
	SELECT nr_sequencia,
		 tp_item,
		 cd_item,
		 qt_paga,
		 coalesce(vl_total_pago, (qt_paga * vl_pago)),
		 coalesce((obter_dados_categ_conv(nr_atendimento,'OC'))::numeric ,0)
	from convenio_retorno_movto
	where nr_seq_ret_item = nr_seq_ret_item_p
	  and cd_item <> 0
	  and qt_paga > 0
	  and coalesce(ie_situacao_item,'X') <> 'G'
	  and coalesce(ie_gera_resumo,'S') = 'S';

BEGIN

vl_pago_p := 0;

select cd_convenio,
	 dt_ref_preco
into STRICT	 cd_convenio_w,
	 dt_ref_preco_w
from 	convenio_retorno
where nr_sequencia = nr_seq_retorno_p;

open C01;
loop
	fetch C01 into	nr_sequencia_w,
				tp_proced_w,
				cd_proced_w,
				qt_paga_w,
				vl_pago_w,
				nr_seq_origem_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

	if (tp_proced_w = 2) then
		SELECT * FROM define_preco_procedimento(	1, cd_convenio_w, cd_categoria_p, dt_ref_preco_w, cd_proced_w, 0, 0, 0, null, null, null, null, null, cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w, null, vl_pago_w, vl_coper_w, vl_anest_w, vl_medico_w, vl_aux_w, vl_mat_w, vl_pto_proc_w, vl_pto_coper_w, vl_pto_anest_w, vl_pto_med_w, vl_pto_aux_w, vl_pto_mat_w, qt_porte_anest_w, qt_pontos_w, cd_edicao_amb_w, ie_preco_informado_w, nr_seq_ajuste_proc_w, 0, null, 0, null, null, NULL, NULL, null, null, null, null, null, null, null, null, null, null, nr_seq_origem_w, null, null) INTO STRICT vl_pago_w, vl_coper_w, vl_anest_w, vl_medico_w, vl_aux_w, vl_mat_w, vl_pto_proc_w, vl_pto_coper_w, vl_pto_anest_w, vl_pto_med_w, vl_pto_aux_w, vl_pto_mat_w, qt_porte_anest_w, qt_pontos_w, cd_edicao_amb_w, ie_preco_informado_w, nr_seq_ajuste_proc_w;

		RAISE NOTICE '%X%X%', cd_convenio_w, cd_categoria_p, (qt_paga_w * vl_pago_w);
	else
		qt_paga_w := 1;
	end if;

	update convenio_retorno_movto
	set vl_pago = vl_pago_w,
	    vl_total_pago = vl_pago_w * qt_paga_w
	where nr_sequencia = nr_sequencia_w
	  and nm_usuario = nm_usuario_p;

	vl_pago_p := vl_pago_p + vl_pago_w;

end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_valor_retorno_movto (nr_seq_retorno_p bigint, nr_seq_ret_item_p bigint, cd_categoria_p text, vl_pago_p INOUT bigint, nm_usuario_p text) FROM PUBLIC;

