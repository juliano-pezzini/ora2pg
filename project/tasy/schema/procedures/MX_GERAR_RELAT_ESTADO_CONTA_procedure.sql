-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE mx_gerar_relat_estado_conta (nr_interno_conta_p bigint, nm_usuario_p text) AS $body$
DECLARE




cd_item_w			bigint;
IE_STATUS_ACERTO_w	bigint;
ds_item_w			varchar(300);
ie_origem_proced_w	bigint;
qt_item_w			double precision;
ie_valor_informado_w varchar(1);
cd_procedimento_w	bigint;
vl_item_w			double precision;
vl_medico_w			double precision;
ie_classificacao_w	varchar(1);
nr_seq_matproc_w	bigint;
ie_emite_conta_w	varchar(3);
vl_custo_oper_w		double precision;
dt_item_w			timestamp;
cd_setor_atend_w	bigint;
cd_medic_exec_w		bigint;
ie_tipo_registro_w	varchar(1);
cd_convenio_w		bigint;
vl_preco_unitario_w	double precision;
vl_acresc_tab_w		double precision;
vl_acresc_tab_uni_w double precision;
vl_desconto_conta_w	double precision;
vl_desconto_tab_w	double precision;
vl_desconto_unit_w	double precision := 0;
vl_subtotal_w		double precision;
vl_preco_unitario_cal_w	double precision;
vl_preco_total_w	double precision;
vl_imposto_w		double precision;
vl_indice_w			double precision;
vl_material_w		double precision;
vl_material_tab_w	double precision;
vl_proced_tab_w		double precision;
vl_total_desconto_w double precision;
cd_tipo_procedimento_w	bigint;
nr_seq_proc_pacote_w	bigint;
nr_atendimento_w		bigint;
nr_seq_matproc_desc_w	bigint;

cd_estabelecimento_w	conta_paciente.cd_estabelecimento%type;
nr_seq_ajuste_mat_w	material_atend_paciente.nr_seq_regra_ajuste_mat%type;
cd_material_w		material_atend_paciente.cd_material%type;
dt_preco_w		material_atend_paciente.dt_conta%type;
cd_convenio_mat_w	material_atend_paciente.cd_convenio%type;
cd_categoria_mat_w	material_atend_paciente.cd_categoria%type;
cd_cgc_fornecedor_w	material_atend_paciente.cd_cgc_fornecedor%type;
cd_grupo_material_w	grupo_material.cd_grupo_material%type;
cd_subgrupo_material_w	subgrupo_material.cd_subgrupo_material%type;
cd_classe_material_w	classe_material.cd_classe_material%type;
tx_ajuste_tabela_mat_w	convenio_preco_mat.tx_ajuste_tabela_mat%type;
cd_tabela_preco_w	regra_ajuste_material.cd_tabela_preco%type;
ie_ignora_preco_venda_w	regra_ajuste_material.ie_ignora_preco_venda%type;
tx_ajuste_w		regra_ajuste_material.tx_ajuste%type;
ie_valor_inf_desconto_w	parametro_faturamento.ie_valor_inf_desconto%type;
vl_item_original_w	double precision;
vl_calculo_item_w	double precision;
vl_deducao_item_w	conta_pac_ded_conv_item.vl_rateio%type;

C01 CURSOR FOR
SELECT	'P',
		b.cd_procedimento,
		b.ie_origem_proced,
		coalesce(b.qt_procedimento,0),
		b.ie_valor_informado,
		b.vl_procedimento,
		b.vl_medico,
		p.ie_classificacao,
		b.nr_sequencia,
		b.ie_emite_conta,
		vl_custo_operacional,
		b.dt_procedimento,
		b.cd_setor_atendimento,
		CASE WHEN p.cd_tipo_procedimento=135 THEN cd_medico_executor  ELSE NULL END ,
		0
FROM		conta_paciente a,
		procedimento_paciente b,
		procedimento p
WHERE	a.nr_interno_conta = nr_interno_conta_p
AND		b.nr_interno_conta = a.nr_interno_conta
AND		b.cd_procedimento = p.cd_procedimento
AND		b.ie_origem_proced = p.ie_origem_proced
AND		((coalesce(b.nr_seq_proc_pacote::text, '') = '')
OR		 (b.nr_sequencia = (SELECT 	z.nr_seq_procedimento
						FROM 	atendimento_pacote z
						WHERE  	z.nr_seq_procedimento = b.nr_sequencia
						AND  	z.nr_atendimento = nr_atendimento_w)
AND (b.nr_seq_proc_pacote IS NOT NULL AND b.nr_seq_proc_pacote::text <> '')))
/* No mostrar elementos prorrateados en la cuenta privada */

and		not exists (select	1
					from	conta_pac_ded_conv_item x
					where	x.nr_seq_propaci_dest = b.nr_sequencia)

UNION ALL

SELECT	'M',
		b.cd_material,
		NULL,
		coalesce(b.qt_material,0) qt_item,
		b.ie_valor_informado,
		b.vl_unitario,
		0,
		NULL,
		b.nr_sequencia,
		b.ie_emite_conta,
		0,
		b.dt_atendimento dt_item,
		b.cd_setor_atendimento,
		NULL cd_medico_executor,
		vl_material
FROM	conta_paciente a,
		material_atend_paciente b
WHERE	a.nr_interno_conta = nr_interno_conta_p
AND		coalesce(b.nr_seq_proc_pacote::text, '') = ''
AND		b.nr_interno_conta = a.nr_interno_conta
/* No mostrar elementos prorrateados en la cuenta privada */

and		not exists (select	1
					from	conta_pac_ded_conv_item x
					where	x.nr_seq_matpaci_dest = b.nr_sequencia);

C02 CURSOR FOR
	SELECT	/*+index (a prcmate_pk) */		b.tx_ajuste_tabela_mat
	from 	preco_material a,
		convenio_preco_mat b
	where 	a.cd_estabelecimento  	= cd_estabelecimento_w
	and	a.cd_estabelecimento  	= b.cd_estabelecimento
	and	a.cd_tab_preco_mat	= b.cd_tab_preco_mat
	and	a.cd_material = cd_material_w
	and 	((coalesce(cd_grupo_material::text, '') = '') or (cd_grupo_material = cd_grupo_material_w))
	and 	((coalesce(cd_subgrupo_material::text, '') = '') or (cd_subgrupo_material = cd_subgrupo_material_w))
	and 	((coalesce(cd_classe_material::text, '') = '') or (cd_classe_material = cd_classe_material_w))
	and	coalesce(cd_tabela_preco_w, a.cd_tab_preco_mat) = a.cd_tab_preco_mat
	and	((coalesce(cd_cgc_fornecedor_w::text, '') = '') or (coalesce(a.cd_cgc_fornecedor,cd_cgc_fornecedor_w) = cd_cgc_fornecedor_w))
	and	dt_preco_w between coalesce(trunc(a.dt_inicio_vigencia,'dd'), dt_preco_w) and coalesce(a.dt_final_vigencia, dt_preco_w)
	and	dt_preco_w between coalesce(b.dt_inicio_vigencia, dt_preco_w) and coalesce(b.dt_final_vigencia, dt_preco_w)
	and	b.cd_convenio = cd_convenio_mat_w
	and	b.cd_categoria = cd_categoria_mat_w
	and	coalesce(b.ie_situacao,'A')	= 'A'
	and 	coalesce(a.ie_situacao,'A') = 'A'
	and	((coalesce(a.ie_preco_venda, 'S') = 'S') or (ie_ignora_preco_venda_w = 'S'))
	and	exists (	SELECT	1
			from	tabela_preco_material x
			where	x.cd_tab_preco_mat = a.cd_tab_preco_mat
			and	coalesce(x.ie_situacao,'A') = 'A'
			and	x.cd_estabelecimento = cd_estabelecimento_w)
	order by	coalesce(b.nr_prioridade,1) desc,
		coalesce(b.ie_tab_adicional,'N') desc,
		coalesce(cd_classe_material,0),
		coalesce(cd_subgrupo_material,0),
		coalesce(cd_grupo_material,0),
		CASE WHEN coalesce(cd_cgc_fornecedor_w::text, '') = '' THEN  '0'  ELSE coalesce(a.cd_cgc_fornecedor,'0') END ,
		a.dt_inicio_vigencia,
		a.vl_preco_venda;/*Elemar 24/01/2005 Incluí o order by */
BEGIN


SELECT  IE_STATUS_ACERTO
INTO STRICT	IE_STATUS_ACERTO_w
FROM	conta_paciente
WHERE	nr_interno_conta = nr_interno_conta_p;


IF (IE_STATUS_ACERTO_w <> 2) THEN
	CALL recalcular_conta_paciente(nr_interno_conta_p,nm_usuario_p);
END IF;

DELETE FROM w_relatorio_conta
WHERE nm_usuario = nm_usuario_p;

SELECT	cd_convenio_calculo,
	nr_atendimento,
	cd_estabelecimento
INTO STRICT	cd_convenio_w,
	nr_atendimento_w,
	cd_estabelecimento_w
FROM	conta_paciente
WHERE	nr_interno_conta = nr_interno_conta_p;

select	coalesce(max(ie_valor_inf_desconto), 'N')
into STRICT	ie_valor_inf_desconto_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;

OPEN C01;
LOOP
FETCH C01 INTO
	ie_tipo_registro_w,
	cd_item_w,
	ie_origem_proced_w,
	qt_item_w,
	ie_valor_informado_w,
	vl_item_w,
	vl_medico_w,
	ie_classificacao_w,
	nr_seq_matproc_w,
	ie_emite_conta_w,
	vl_custo_oper_w,
	dt_item_w,
	cd_setor_atend_w,
	cd_medic_exec_w,
	vl_material_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	BEGIN
		vl_desconto_tab_w := 0;
		vl_indice_w := 0;
		vl_preco_unitario_w := 0;
		vl_desconto_conta_w := 0;
		vl_acresc_tab_w := 0;
		vl_preco_unitario_cal_w := 0;
		vl_subtotal_w := 0;
		vl_material_tab_w := 0;
		vl_preco_total_w := 0;
		vl_imposto_w := 0;
		vl_total_desconto_w := 0;
		vl_item_original_w := 0;
		vl_deducao_item_w	:= 0;

		-- descrição do item
		IF (ie_tipo_registro_w = 'P') THEN
			ds_item_w := SUBSTR(obter_desc_procedimento(cd_item_w,ie_origem_proced_w),1,255);
			vl_desconto_conta_w := obter_desconto_matproc(nr_seq_matproc_w,'P');
			vl_deducao_item_w	:= obter_valor_deducao_conv(nr_interno_conta_p,nr_seq_matproc_w,null,null,null);

			IF (ie_classificacao_w = 1) THEN
				vl_indice_w	  := coalesce(obter_indice_preco_proc(nr_seq_matproc_w),0);
			ELSE
				vl_indice_w	  := coalesce(obter_indice_preco_servico(nr_seq_matproc_w),0);
			END IF;

			if (vl_indice_w <> 0) then
				vl_proced_tab_w := (vl_item_w + vl_desconto_conta_w) / vl_indice_w;
			else
				vl_proced_tab_w := (vl_item_w + vl_desconto_conta_w);
			end if;

			vl_item_original_w	:= coalesce(obter_vl_item_conta_original(nr_seq_matproc_w, null),0); --1684,16 * 3
			--valor servico =   1684,15677 *3  = 5052,47031
			/* No considerar para que el valor se calcula como en el resumen */

			if (vl_item_original_w <> 0) then

				vl_preco_unitario_w	:= vl_item_original_w;
				vl_subtotal_w		:= vl_item_w;
				vl_calculo_item_w	:= round((vl_preco_unitario_w * qt_item_w)::numeric,2) - vl_subtotal_w;

				if (abs( vl_item_original_w ) > abs(dividir(vl_subtotal_w + vl_deducao_item_w,qt_item_w))) then
					vl_desconto_tab_w	:= vl_calculo_item_w - vl_desconto_conta_w - vl_deducao_item_w;
				else
					vl_acresc_tab_w		:= abs(vl_calculo_item_w);
				end if;
			else
				--calculo do valor unitario
				IF (ie_valor_informado_w  = 'N')  THEN
					IF coalesce(vl_item_w,0) <> 0 THEN
						vl_preco_unitario_w := coalesce(vl_item_w,0) / qt_item_w;
						vl_subtotal_w := vl_item_w;
					ELSE
						vl_preco_unitario_w := coalesce(vl_medico_w,0) / qt_item_w;
						vl_subtotal_w := vl_medico_w;
					END IF;


					IF	(vl_indice_w > 0 AND vl_indice_w < 1) THEN
						BEGIN
						vl_preco_unitario_w := ABS(vl_preco_unitario_w / vl_indice_w);
						EXCEPTION
						WHEN OTHERS THEN
							CALL Wheb_mensagem_pck.exibir_mensagem_abort('Hay items sin regla de precio o el item no esta en la tabla de precio para esta aseguradora');
						END;
					END IF;


					IF (vl_indice_w < 1) THEN
						vl_desconto_unit_w	:= vl_preco_unitario_w * (1 - vl_indice_w);
						vl_desconto_tab_w	:= vl_proced_tab_w * (1 - vl_indice_w);
					ELSE
						vl_acresc_tab_w		:= vl_proced_tab_w * (vl_indice_w - 1);
					END IF;

					vl_preco_unitario_w := vl_preco_unitario_w;

				ELSE
					IF coalesce(vl_item_w ,0) <> 0 THEN
						vl_preco_unitario_w := vl_item_w;
					ELSIF coalesce(vl_medico_w ,0) <> 0 THEN
						vl_preco_unitario_w := vl_item_w;
					ELSE
						vl_preco_unitario_w := vl_custo_oper_w;
					END IF;
					vl_subtotal_w := vl_preco_unitario_w;
					vl_preco_unitario_w := vl_preco_unitario_w + vl_desconto_conta_w;

					IF (vl_indice_w = 0) THEN
						vl_desconto_tab_w := 0;
					ELSE
						IF (vl_desconto_conta_w > 0) THEN
							if (ie_valor_inf_desconto_w = 'S') then
								select	coalesce(max(nr_sequencia),0)
								into STRICT	nr_seq_matproc_desc_w
								from	proc_paciente_valor
								where	nr_seq_procedimento	= nr_seq_matproc_w
								and	ie_tipo_valor		= 96;
							end if;

							if (coalesce(nr_seq_matproc_desc_w,0) = 0) then
								IF (vl_indice_w < 1) AND (vl_indice_w > 0) THEN
									vl_preco_unitario_cal_w := ABS(vl_preco_unitario_w / vl_indice_w);
									vl_desconto_unit_w	:= vl_preco_unitario_cal_w * (1 - vl_indice_w);
									vl_desconto_tab_w	:= vl_proced_tab_w * (1 - vl_indice_w);
								ELSE
									--vl_preco_unitario_cal_w := abs(vl_preco_unitario_w / vl_indice_w);
									vl_acresc_tab_w		:= vl_proced_tab_w * (vl_indice_w - 1);
								END IF;
							end if;
						END IF;
					END IF;

					--vl_preco_unitario_w := vl_preco_unitario_w + vl_desconto_tab_w + vl_desconto_conta_w;
					vl_preco_unitario_w := vl_preco_unitario_w + vl_desconto_unit_w;

				END IF;

			end if;

			SELECT 	coalesce(SUM(x.vl_imposto),0)
			INTO STRICT	vl_imposto_w
			FROM 	propaci_imposto x
			WHERE 	x.nr_seq_propaci = nr_seq_matproc_w;

			vl_preco_total_w := vl_imposto_w + vl_subtotal_w;

		ELSE
		/* -------------------MATERIAL-------------------*/

			ds_item_w   := SUBSTR(obter_desc_material(cd_item_w),1,255);
			vl_desconto_conta_w := obter_desconto_matproc(nr_seq_matproc_w,'M');
			vl_deducao_item_w	:= obter_valor_deducao_conv(nr_interno_conta_p,null,nr_seq_matproc_w,null,null);

			vl_item_original_w	:= coalesce(obter_vl_item_conta_original(null, nr_seq_matproc_w),0);

			/* No considerar para que el valor se calcula como en el resumen */

			if ( vl_item_original_w <> 0) then
				vl_preco_unitario_w	:= vl_item_original_w;
				vl_subtotal_w		:= vl_material_w;
				vl_calculo_item_w	:= round((vl_item_original_w * qt_item_w)::numeric,2) - vl_subtotal_w;

				if (abs( vl_item_original_w ) > abs(dividir( (vl_subtotal_w + vl_deducao_item_w) ,qt_item_w)) ) then -- valor unitario original > (valor do item atual/ quantidade atual) entao é um desconto
					vl_desconto_tab_w	:= vl_calculo_item_w - vl_desconto_conta_w - vl_deducao_item_w;
				else    ---  acrescimo
					vl_acresc_tab_w		:= abs(vl_calculo_item_w);
				end if;

			else

				--vl_indice_w := (NVL(obter_indice_preco_material_2(nr_seq_matproc_w),1));
				begin
				select	nr_seq_regra_ajuste_mat,
					cd_material,
					trunc(coalesce(dt_conta,dt_atendimento),'dd'),
					cd_convenio,
					cd_categoria,
					cd_cgc_fornecedor
				into STRICT	nr_seq_ajuste_mat_w,
					cd_material_w,
					dt_preco_w,
					cd_convenio_mat_w,
					cd_categoria_mat_w,
					cd_cgc_fornecedor_w
				from	material_atend_paciente
				where	nr_sequencia = nr_seq_matproc_w;
				exception
					when others then
					nr_seq_ajuste_mat_w	:= null;
					cd_material_w		:= null;
					dt_preco_w		:= clock_timestamp();
					cd_convenio_mat_w	:= null;
					cd_categoria_mat_w	:= null;
					cd_cgc_fornecedor_w	:= null;
				end;

				begin
				select	max(cd_tabela_preco),
					max(ie_ignora_preco_venda),
					max(tx_ajuste)
				into STRICT	cd_tabela_preco_w,
					ie_ignora_preco_venda_w,
					tx_ajuste_w
				from	regra_ajuste_material
				where	nr_sequencia = nr_seq_ajuste_mat_w;
				exception
					when others then
					cd_tabela_preco_w	:= null;
					ie_ignora_preco_venda_w	:= null;
					tx_ajuste_w		:= null;
				end;

				if (coalesce(tx_ajuste_w::text, '') = '') then

					begin
					select	cd_grupo_material,
						cd_subgrupo_material,
						cd_classe_material
					into STRICT	cd_grupo_material_w,
						cd_subgrupo_material_w,
						cd_classe_material_w
					from	estrutura_material_v
					where	cd_material = cd_material_w;
					exception
						when others then
						cd_grupo_material_w	:= null;
						cd_subgrupo_material_w	:= null;
						cd_classe_material_w	:= null;
					end;

					open C02;
					loop
					fetch C02 into
						tx_ajuste_tabela_mat_w;
					EXIT WHEN NOT FOUND; /* apply on C02 */
						begin
						tx_ajuste_tabela_mat_w	:= tx_ajuste_tabela_mat_w;
						end;
					end loop;
					close C02;

				end if;

				vl_indice_w	:= coalesce(tx_ajuste_w, coalesce(tx_ajuste_tabela_mat_w,1));

				if (vl_indice_w <> 0) then
					vl_material_tab_w := (vl_material_w + vl_desconto_conta_w) / vl_indice_w;
				else
					vl_material_tab_w := (vl_material_w + vl_desconto_conta_w);
				end if;

				vl_subtotal_w := vl_material_w;

				IF (ie_valor_informado_w  IN ('N'))  THEN

					vl_preco_unitario_w := ABS(vl_item_w / vl_indice_w);
					IF (vl_indice_w < 1) THEN
						vl_desconto_tab_w := vl_material_tab_w * (1 - vl_indice_w);
					ELSE
						vl_acresc_tab_w := vl_material_tab_w * (vl_indice_w - 1);
					END IF;
					vl_acresc_tab_uni_w := vl_acresc_tab_w / qt_item_w;
					vl_preco_unitario_w := vl_preco_unitario_w + vl_acresc_tab_uni_w;
				ELSE
					IF (vl_indice_w = 0) THEN
						vl_desconto_tab_w := 0;
					ELSE
						IF (vl_desconto_conta_w > 0) THEN
							if (ie_valor_inf_desconto_w = 'S') then
								select	coalesce(max(nr_sequencia),0)
								into STRICT	nr_seq_matproc_desc_w
								from	mat_atend_paciente_valor
								where	nr_seq_material	= nr_seq_matproc_w
								and	ie_tipo_valor		= 96;
							end if;

							if (coalesce(nr_seq_matproc_desc_w,0) = 0) then
								vl_preco_unitario_w := ABS(vl_item_w / vl_indice_w);
								--vl_material_tab_w := vl_material_tab_w + vl_desconto_conta_w;
								IF (vl_indice_w < 1) THEN
									vl_desconto_tab_w := vl_material_tab_w * (1 - vl_indice_w);
								ELSE
									vl_acresc_tab_w := vl_material_tab_w * (vl_indice_w - 1);
								END IF;
								vl_acresc_tab_uni_w := vl_acresc_tab_w / qt_item_w;
								vl_preco_unitario_w := vl_preco_unitario_w + vl_acresc_tab_uni_w;
							else
								vl_preco_unitario_w	:= vl_item_w;
							end if;
						ELSE
							vl_preco_unitario_w := vl_item_w;
						END IF;
					END IF;
				END IF;

			end if;

			SELECT 	coalesce(SUM(x.vl_imposto),0)
			INTO STRICT	vl_imposto_w
			FROM 	matpaci_imposto x
			WHERE	x.nr_seq_matpaci = nr_seq_matproc_w;

			vl_preco_total_w := vl_subtotal_w + vl_imposto_w;
			--calculo do valor unitario
		END IF;
	END;
	vl_total_desconto_w := vl_desconto_tab_w + vl_desconto_conta_w;

	INSERT INTO w_relatorio_conta(
		cd_item,
		ds_item,
		vl_preco_unitario,
		vl_unitario_sem_round,
		nm_usuario,
		vl_desconto_tab,
		vl_desconto_conta,
		vl_indice,
		nr_interno_conta,
		vl_acresc_tab,
		vl_subtotal,
		vl_preco_total,
		vl_imposto,
		ie_emite_conta,
		cd_setor_atendimento,
		qt_item,
		dt_item,
		vl_total_desconto,
		cd_medico_executor,
		vl_deducao)
	VALUES (cd_item_w,
			ds_item_w,
			vl_preco_unitario_w,
			vl_preco_unitario_w,
			nm_usuario_p,
			vl_desconto_tab_w,
			vl_desconto_conta_w,
			vl_indice_w,
			nr_interno_conta_p,
			vl_acresc_tab_w,
			vl_subtotal_w,
			vl_preco_total_w,
			vl_imposto_w,
			ie_emite_conta_w,
			cd_setor_atend_w,
			qt_item_w,
			dt_item_w,
			vl_total_desconto_w,
			cd_medic_exec_w,
			vl_deducao_item_w);

END LOOP;
CLOSE C01;


COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mx_gerar_relat_estado_conta (nr_interno_conta_p bigint, nm_usuario_p text) FROM PUBLIC;

