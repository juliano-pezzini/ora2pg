-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_coparticipacao_proc ( nr_sequencia_p bigint, ie_gravar_log_p text, nm_usuario_p text) AS $body$
DECLARE


cd_estabelecimento_w		integer;
nr_seq_prestador_w		bigint;
nr_seq_categoria_w		bigint;
dt_procedimento_w			timestamp;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
qt_procedimento_w			double precision;
nr_seq_tipo_acomodacao_w		bigint;
nr_seq_tipo_atendimento_w		bigint;
nr_seq_clinica_w			bigint;
nr_seq_plano_w			bigint;
nr_seq_regra_w			bigint;
nr_seq_regra_pos_estab_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_protocolo_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_regra_adic_w		bigint;
cd_edicao_amb_w			integer;
vl_prestador_w			double precision 	:= 0;
vl_procedimento_w			double precision	:= 0;
vl_custo_operacional_w		double precision	:= 0;
vl_anestesista_w		double precision	:= 0;
vl_medico_w			double precision	:= 0;
vl_filme_w			double precision	:= 0;
vl_auxiliares_w			double precision	:= 0;
vl_total_partic_w		double precision	:= 0;
vl_proc_unitario_w		double precision	:= 0;
tx_medico_adic_w		double precision	:= 1;
tx_anestesista_adic_w		double precision	:= 1;
tx_auxiliares_adic_w		double precision	:= 1;
tx_custo_operacional_adic_w	double precision	:= 1;
tx_materiais_adic_w		double precision	:= 1;
tx_procedimento_adic_w		double precision	:= 1;
dt_conta_w			timestamp;
nr_auxiliares_w			integer	:= 0;
nr_aux_w			integer	:= 0;
tx_item_w			double precision	:= 0;
ie_tipo_guia_w			varchar(2);
cd_medico_conta_w		varchar(10);
nr_seq_regra_honorario_w	bigint;
nr_seq_credenciado_w		bigint;
ie_calcula_w			varchar(1)	:= 'N';
ie_preco_informado_w		varchar(1)	:= 'N';
ie_calcula_valor_w		varchar(1)	:= 'S';
ie_repassa_medico_w		varchar(1)	:= 'S';
ie_repassa_medico_partic_w	varchar(1)	:= 'S';
ie_medico_credenciado_w		varchar(1)	:= 'N';
ie_conta_repasse_w		varchar(1)	:= 'N';
qt_medico_vinculado_w		integer	:= 0;
vl_beneficiario_w		double precision	:= 0;
ie_preco_plano_w		varchar(2);
nr_seq_contrato_w		bigint;
ie_preco_co_operadora_w		varchar(1);
nr_seq_outorgante_w		bigint;
ie_tipo_tabela_w		varchar(2)	:= '';
ie_tipo_tabela_int_w		varchar(2)	:= 'X';
vl_retorno_w			double precision;
ds_retorno_w			varchar(10);
cd_guia_w			varchar(20);
ie_cobranca_prevista_w		varchar(1);
ie_cobranca_previa_servico_w	varchar(1);
ie_cobranca_prev_proc_w		varchar(1);
nr_seq_guia_w			bigint;
vl_filme_ww			double precision	:= 0;
vl_custo_operacional_ww		double precision	:= 0;
vl_medico_ww			double precision	:= 0;
vl_auxiliares_ww		double precision	:= 0;
vl_anestesista_ww		double precision	:= 0;
ie_regra_data_preco_proc_w	varchar(1);
dt_protocolo_w			timestamp;
dt_preco_w			timestamp	:= clock_timestamp();
ie_gravar_log_w			varchar(1);
ds_observacao_log_w		varchar(4000);
ie_tipo_protocolo_w		varchar(3);
ie_calcula_preco_benef_w	varchar(1);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
ie_tipo_contratacao_w		varchar(2);
qt_dias_internacao_w		bigint;
nr_seq_regra_qtde_exec_w	bigint;
tx_proc_regra_qtde_w		double precision;
tx_med_regra_qtde_w		double precision;
tx_co_regra_qtde_w		double precision;
ie_origem_conta_w		varchar(1);
dt_inicio_proc_w		timestamp;
dt_fim_proc_w			timestamp;
vl_proc_copartic_w		double precision	:= 0;
nr_seq_regra_copartic_w		bigint;
ie_calculo_coparticipacao_w	varchar(3);
ie_carater_internacao_w		varchar(2);
cd_porte_anestesico_w		varchar(10);
ie_regra_autogerado_w		varchar(1);
nr_seq_autogerado_w		bigint;
ie_autogerado_w			varchar(1)	:= 'N';
nr_seq_prestador_solic_w	bigint;
nr_seq_regra_cooperado_w	bigint;
ie_ato_cooperado_w		bigint;
nr_seq_prestador_atend_w	bigint;
nr_seq_classificacao_prest_w	bigint;
nr_Seq_grau_partic_w		bigint;
nr_seq_grau_partic_part_w	bigint;
nr_seq_prestador_pgto_w		bigint;
nr_seq_regra_pgto_w		bigint;
nr_seq_congenere_w		bigint;
tx_intercambio_w		double precision;
ie_tipo_conta_w			varchar(10);
ie_taxa_via_acesso_w		varchar(1)	:= 'N';
ie_conta_interacao_w		varchar(1)	:= 'N';
tx_pcmco_w			double precision;
ie_pcmso_w			varchar(1);
nr_seq_intercambio_w		bigint;
dt_recebimento_fatura_w		timestamp;
qt_dia_proced_receb_w		bigint;
ie_taxa_w			varchar(1);
ie_tecnica_utilizada_w		varchar(1);
ie_criterio_pgto_w		varchar(1);
ie_medico_exec_coope_w		varchar(10);
ie_medico_solic_coope_w		varchar(10);
cd_medico_solicitante_w		varchar(10);
nr_aux_regra_w			bigint;
nr_aux_regra_copart_w		bigint;
ie_tipo_segurado_w		varchar(10);
vl_procedimento_ptu_w		double precision	:= 0;
vl_co_ptu_w			double precision	:= 0;
vl_material_ptu_w		double precision	:= 0;
nr_seq_regra_inter_w		bigint;
sg_estado_w			pessoa_juridica.sg_estado%type;
ie_tipo_intercambio_w		varchar(10)	:= 'A';
nr_seq_congenere_seg_w		bigint;
sg_estado_int_w			pessoa_juridica.sg_estado%type;
vl_total_procedimento_w		double precision;
cd_medico_solicitante_guia_w	varchar(20);
nr_seq_cbo_saude_w		bigint;
ie_tipo_partic_prof_w		varchar(10);
nr_seq_prest_solic_w		bigint;
nr_seq_regra_autogerado_w	bigint;
qt_porte_anestesico_w		bigint	:= 0;
ie_criterio_horario_w		varchar(10);
ie_cobranca_prevista_proc_w	varchar(1);
nr_seq_fatura_w			bigint;
ie_pagamento_cobranca_w		varchar(10);
cd_cgc_w			varchar(14) := '';
vl_pag_medico_conta_w		double precision;
ie_status_w			varchar(1);
cd_medico_w			varchar(10);
nr_seq_participante_w		bigint;

vl_medico_vinc_w		double precision;
vl_anestesista_vinc_w		double precision;
vl_auxiliares_vinc_w		double precision;
vl_custo_operacional_vinc_w	double precision;
vl_materiais_vinc_w		double precision;
vl_procedimento_vinc_w		double precision;
vl_total_proc_vinc_w		double precision;
nr_seq_congenere_outorg_w	bigint;
nr_seq_grupo_serv_w		bigint	:= null;
vl_calc_co_util_w		double precision	:= 0;
vl_calc_hi_util_w        	double precision	:= 0;
vl_calc_mat_util_w		double precision	:= 0;
vl_procedimento_imp_w		double precision	:= 0;
ie_valor_informado_w		varchar(1);
ie_vl_apresentado_sistema_w	varchar(1);
tx_procedimento_w		double precision;
tx_medico_w			double precision;
tx_custo_operacional_w		double precision;
tx_material_w			double precision;
tx_anestesista_w		double precision;
tx_auxiliares_w			double precision;
ie_restringe_estab_w		varchar(2);
ie_atualiza_via_acesso_w	varchar(1);
ie_via_acesso_w			varchar(1);
ie_ptu_vl_honorario_w		varchar(1);	
ie_ptu_vl_co_w			varchar(1);
ie_ptu_vl_filme_w		varchar(1);
vl_material_ptu_imp_w		double precision;
vl_co_ptu_imp_w			double precision;
vl_procedimento_ptu_imp_w	double precision;
vl_medico_ptu_imp_w		double precision;
vl_co_copartic_w		double precision;
vl_anestesista_copartic_w 	double precision;
vl_medico_copartic_w		double precision;
vl_filme_copartic_w		double precision;
vl_auxiliares_copartic_w	double precision;
vl_total_partic_copartic_w	double precision;
ie_copartic_grau_partic_w	pls_parametros.ie_copartic_grau_partic%type;
ie_taxa_grau_partic_w		pls_parametros.ie_taxa_grau_partic%type;
nr_seq_rp_combinada_w		pls_rp_cta_combinada.nr_sequencia%type;
cd_moeda_autogerado_w		smallint;
dt_alta_w			pls_conta.dt_alta%type;
dados_prestador_prot_w		pls_cta_valorizacao_pck.dados_prestador_prot;
dados_prestador_exec_w		pls_cta_valorizacao_pck.dados_prestador_exec;
dados_adic_horario_w		pls_cta_valorizacao_pck.dados_adic_horario;
dados_procedimento_w		pls_cta_valorizacao_pck.dados_procedimento;
dados_conta_valor_w		pls_cta_valorizacao_pck.dados_conta;
dados_conta_proc_valor_w	pls_cta_valorizacao_pck.dados_conta_proc;
dados_beneficiario_valor_w	pls_cta_valorizacao_pck.dados_beneficiario;
vl_ch_honorarios_w		cotacao_moeda.vl_cotacao%type;
vl_ch_custo_oper_w		cotacao_moeda.vl_cotacao%type;
vl_ch_custo_filme_w		cotacao_moeda.vl_cotacao%type;
vl_ch_anestesista_w		cotacao_moeda.vl_cotacao%type;
dados_regra_preco_proc_w	pls_cta_valorizacao_pck.dados_regra_preco_proc;
dados_guia_w			pls_cta_valorizacao_pck.dados_guia;
ie_tipo_log_w			pls_log_calculo_proc.ie_tipo_log%type := 'C';
nr_seq_ops_congenere_seg_w	pls_segurado.nr_seq_ops_congenere%type;
cd_estab_cad_benef_w		estabelecimento.cd_estabelecimento%type;
ie_tipo_intercambio_benef_w	varchar(1);
ie_tipo_despesa_w		pls_conta_proc.ie_tipo_despesa%type;
dados_regra_preco_servico_w	pls_cta_valorizacao_pck.dados_regra_preco_servico;
nr_seq_classificacao_w    	pls_conta_proc_v.nr_seq_clas_prest_exec%type;
ie_internado_w			pls_conta_proc_v.ie_internado%type;
ie_tipo_vinculo_w		pls_conta_proc_v.ie_tipo_vinculo_prest_exec%type;
cd_prestador_solic_w		pls_conta_proc_v.cd_prestador_solic%type;
ie_regime_atendimento_princ_w	pls_conta.ie_regime_atendimento%type;
ie_regime_atendimento_w	pls_conta.ie_regime_atendimento%type;
ie_saude_ocupacional_w	pls_conta.ie_saude_ocupacional%type;


BEGIN

/* Obter dados do procedimento */

select	cd_procedimento,
	ie_origem_proced,
	coalesce(dt_procedimento, clock_timestamp()),
	coalesce(qt_procedimento_imp,1),
	coalesce(tx_item,100),
	nr_seq_conta,
	dt_inicio_proc,
	dt_fim_proc,
	ie_tecnica_utilizada,
	ie_criterio_horario,
	ie_cobranca_prevista,
	ie_status,
	null,
	vl_procedimento_imp,
	ie_vl_apresentado_sistema,
	ie_valor_informado,
	nr_seq_regra_qtde_exec,
	ie_via_acesso,
	nr_seq_honorario_crit,
	nr_seq_rp_combinada,
	ie_tipo_despesa
into STRICT	cd_procedimento_w,
	ie_origem_proced_w,
	dt_procedimento_w,
	qt_procedimento_w,
	tx_item_w,
	nr_seq_conta_w,
	dt_inicio_proc_w,
	dt_fim_proc_w,
	ie_tecnica_utilizada_w,
	ie_criterio_horario_w,
	ie_cobranca_prevista_proc_w,
	ie_status_w,
	nr_seq_grupo_serv_w,
	vl_procedimento_imp_w,
	ie_vl_apresentado_sistema_w,
	ie_valor_informado_w,
	nr_seq_regra_qtde_exec_w,
	ie_via_acesso_w,
	nr_seq_regra_honorario_w,
	nr_seq_rp_combinada_w,
	ie_tipo_despesa_w
from	pls_conta_proc
where	nr_sequencia	= nr_sequencia_p;


select max(ie_regime_atendimento)
into STRICT	ie_regime_atendimento_princ_w
from	pls_conta where nr_sequencia = nr_seq_conta_w;

if (dt_inicio_proc_w IS NOT NULL AND dt_inicio_proc_w::text <> '') then
	begin
	dt_inicio_proc_w	:= to_date(to_char(dt_procedimento_w,'dd/mm/yyyy') || ' ' || to_char(dt_inicio_proc_w,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
	exception
	when others then
		dt_inicio_proc_w	:= dt_procedimento_w;
	end;
else
	
	dt_inicio_proc_w	:= dt_procedimento_w;
end if;

if (dt_fim_proc_w IS NOT NULL AND dt_fim_proc_w::text <> '') then
	begin
	dt_fim_proc_w		:= to_date(to_char(dt_procedimento_w,'dd/mm/yyyy') || ' ' || to_char(dt_fim_proc_w,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
	exception
	when others then
		dt_fim_proc_w	:= dt_procedimento_w;
	end;
end if;

dados_conta_proc_valor_w.nr_sequencia		:= nr_sequencia_p;
dados_conta_proc_valor_w.nr_seq_conta		:= nr_seq_conta_w;
dados_conta_proc_valor_w.ie_origem_proced	:= ie_origem_proced_w;
dados_conta_proc_valor_w.cd_procedimento	:= cd_procedimento_w;
dados_conta_proc_valor_w.dt_procedimento	:= dt_procedimento_w;
dados_conta_proc_valor_w.dt_inicio_proc		:= dt_inicio_proc_w;
dados_conta_proc_valor_w.dt_fim_proc		:= dt_fim_proc_w;
dados_conta_proc_valor_w.ie_criterio_horario	:= ie_criterio_horario_w;

select  cd_grupo_proc,
	cd_especialidade,
	cd_area_procedimento,
	nr_seq_grupo_rec,
	nr_seq_clas_prest_exec,
	ie_internado,
	ie_tipo_vinculo_prest_exec,
	cd_prestador_solic
into STRICT	dados_procedimento_w.cd_grupo_proc,
	dados_procedimento_w.cd_especialidade,
	dados_procedimento_w.cd_area_procedimento,
	dados_procedimento_w.nr_seq_grupo_rec,
	nr_seq_classificacao_w,
	ie_internado_w,
	ie_tipo_vinculo_w,
	cd_prestador_solic_w
from	pls_conta_proc_v
where	nr_sequencia	= nr_sequencia_p;

/* Obter dados da conta */

select	a.nr_sequencia,
	a.nr_seq_protocolo,
	a.cd_estabelecimento,
	coalesce(a.nr_seq_tipo_acomodacao,0),
	coalesce(a.nr_seq_tipo_atendimento,0),
	a.nr_seq_clinica,
	a.nr_seq_segurado,
	coalesce(a.dt_atendimento_referencia, coalesce(a.dt_autorizacao, coalesce(a.dt_entrada, clock_timestamp()))),
	a.ie_tipo_guia,
	a.cd_medico_executor,
	a.nr_seq_prestador_exec,
	coalesce(a.cd_guia,'X'),
	trunc(coalesce(a.dt_alta, clock_timestamp()) - a.dt_entrada) qt_dias_internacao,
	a.ie_origem_conta,
	a.ie_carater_internacao,
	coalesce(a.nr_seq_grau_partic,0),
	coalesce(a.ie_tipo_conta,'O'),
	substr(pls_obter_se_internado(a.nr_sequencia,'X'),1,1),
	a.cd_medico_solicitante,
	a.nr_seq_cbo_saude,
	a.nr_seq_prestador,
	a.nr_seq_fatura,
	a.dt_alta,
	a.ie_tipo_consulta,
	a.nr_seq_guia,
	(select	max(x.cd_prestador)
	 from	pls_prestador x
	 where	x.nr_sequencia	= a.nr_seq_prestador_solic_ref) cd_prestador_solic,
	a.nr_seq_tipo_atendimento,
	a.ie_tipo_segurado,
	a.nr_seq_tipo_conta,
	a.ie_regime_atendimento,
	a.ie_saude_ocupacional
into STRICT	nr_seq_conta_w,
	nr_seq_protocolo_w,
	cd_estabelecimento_w,
	nr_seq_tipo_acomodacao_w,
	nr_seq_tipo_atendimento_w,
	nr_seq_clinica_w,
	nr_seq_segurado_w,
	dt_conta_w,
	ie_tipo_guia_w,
	cd_medico_conta_w,
	nr_seq_prestador_w,
	cd_guia_w,
	qt_dias_internacao_w,
	ie_origem_conta_w,
	ie_carater_internacao_w,
	nr_Seq_grau_partic_w,
	ie_tipo_conta_w,
	ie_conta_interacao_w,
	cd_medico_solicitante_w,
	nr_seq_cbo_saude_w,
	nr_seq_prest_solic_w,
	nr_seq_fatura_w,
	dt_alta_w,
	dados_conta_valor_w.ie_tipo_consulta,
	nr_seq_guia_w,
	dados_conta_valor_w.cd_prestador_solic,
	dados_conta_valor_w.nr_seq_tipo_atendimento,
	ie_tipo_segurado_w,
	dados_conta_valor_w.nr_seq_tipo_conta,
	ie_regime_atendimento_w,
	ie_saude_ocupacional_w
from	pls_conta  a
where	nr_sequencia	= nr_seq_conta_w;

--dados da conta sera utilizado ao longo desta
dados_conta_valor_w.nr_sequencia 		:= nr_seq_conta_w;
dados_conta_valor_w.ie_origem_conta		:= ie_origem_conta_w;
dados_conta_valor_w.ie_tipo_conta		:= ie_tipo_conta_w;
dados_conta_valor_w.nr_seq_segurado		:= nr_seq_segurado_w;

dados_conta_valor_w.dt_alta			:= dt_alta_w;
dados_conta_valor_w.ie_tipo_guia		:= ie_tipo_guia_w;
dados_conta_valor_w.dt_atendimento		:= dt_conta_w;
dados_conta_valor_w.ie_carater_internacao	:= ie_carater_internacao_w;

if (coalesce(ie_via_acesso_w,'X') <> 'X') and (coalesce(ie_origem_conta_w,'X') = 'D') then
	ie_atualiza_via_acesso_w := obter_valor_param_usuario(1208, 28, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w);	
	if (coalesce(ie_atualiza_via_acesso_w,'N') = 'S') then
		select 	obter_tx_proc_via_acesso(ie_via_acesso_w)
		into STRICT	tx_item_w 
		;
	end if;
end if;
/* Obter dados do protocolo */

if (coalesce(nr_seq_protocolo_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(177447,'NR_SEQ_CONTA=' ||nr_seq_conta_w);
	/*(-20011,'Conta '||nr_seq_conta_w||' sem protocolo favor vincular um protocolo'||'#@#@');*/

end if;

select	coalesce(ie_tipo_guia_w, ie_tipo_guia),
	dt_mes_competencia,
	coalesce(ie_tipo_protocolo,'C'),
	nr_seq_prestador,
	nr_seq_congenere,
	nr_seq_prestador
into STRICT	ie_tipo_guia_w,
	dt_protocolo_w,
	ie_tipo_protocolo_w,
	nr_seq_prestador_atend_w,
	nr_seq_congenere_w,
	dados_prestador_prot_w.nr_seq_prestador
from	pls_protocolo_conta
where	nr_sequencia	= nr_seq_protocolo_w;

if (dados_prestador_prot_w.nr_seq_prestador IS NOT NULL AND dados_prestador_prot_w.nr_seq_prestador::text <> '') then
	select	max(nr_seq_tipo_prestador),
		max(nr_seq_classificacao),
		max(ie_tipo_vinculo),
		max(cd_prestador)
	into STRICT	dados_prestador_prot_w.nr_seq_tipo_prestador,
		dados_prestador_prot_w.nr_seq_classificacao,
		dados_prestador_prot_w.ie_tipo_vinculo,
		dados_prestador_prot_w.cd_prestador
	from	pls_prestador
	where	nr_sequencia	= dados_prestador_prot_w.nr_seq_prestador;
end if;

if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then
	select	max(nr_seq_tipo_prestador),
		max(nr_seq_classificacao),
		max(ie_tipo_vinculo),
		max(cd_prestador),
		max(nr_sequencia)
	into STRICT	dados_prestador_exec_w.nr_seq_tipo_prestador,
		dados_prestador_exec_w.nr_seq_classificacao,
		dados_prestador_exec_w.ie_tipo_vinculo,
		dados_prestador_exec_w.cd_prestador,
		dados_prestador_exec_w.nr_seq_prestador
	from	pls_prestador
	where	nr_sequencia	= nr_seq_prestador_w;
end if;

/* Obter parametros da conta medica */

ie_restringe_estab_w	:= pls_obter_se_controle_estab('CO');

begin
	select	coalesce(max(ie_calculo_coparticipacao),'P'),
		coalesce(max(ie_regra_autogerado),'N'),
		coalesce(max(ie_copartic_grau_partic),'N'),
		coalesce(max(ie_taxa_grau_partic),'N')
	into STRICT	ie_calculo_coparticipacao_w,
		ie_regra_autogerado_w,
		ie_copartic_grau_partic_w,
		ie_taxa_grau_partic_w
	from	pls_parametros
	where	(((coalesce(ie_restringe_estab_w,'S')= 'S') and (cd_estabelecimento	= cd_estabelecimento_w))
	or (coalesce(ie_restringe_estab_w,'S')	= 'N'));
exception
when others then
	ie_calculo_coparticipacao_w	:= 'P';
	ie_regra_autogerado_w		:= 'N';
	ie_copartic_grau_partic_w	:= 'N';
	ie_taxa_grau_partic_w		:= 'N';
end;

if (coalesce(nr_seq_guia_w::text, '') = '') then
	/* Obter dados da autorizacao */

	begin
		select	cd_medico_solicitante,
			coalesce(nr_seq_prestador, nr_seq_prest_solic_w),
			ie_tipo_consulta,
			ie_pcmso
		into STRICT	cd_medico_solicitante_guia_w,
			nr_seq_prest_solic_w,
			dados_guia_w.ie_tipo_consulta_guia,
			dados_conta_valor_w.ie_atend_pcmso
		from	pls_guia_plano
		where	cd_guia		= cd_guia_w
		and	nr_seq_segurado	= nr_seq_segurado_w;
	exception
	when others then
		nr_seq_guia_w	:= 0;
		ie_cobranca_prevista_w	:= ie_cobranca_prevista_proc_w;
	end;
else
		/* Obter dados da autorizacao */

	begin
		select	cd_medico_solicitante,
			coalesce(nr_seq_prestador, nr_seq_prest_solic_w),
			ie_tipo_consulta,
			ie_pcmso
		into STRICT	cd_medico_solicitante_guia_w,
			nr_seq_prest_solic_w,
			dados_guia_w.ie_tipo_consulta_guia,
			dados_conta_valor_w.ie_atend_pcmso
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_w;
	exception
	when others then
		nr_seq_guia_w	:= 0;
		ie_cobranca_prevista_w	:= ie_cobranca_prevista_proc_w;
	end;
end if;
dt_preco_w	:= pls_obter_data_preco_item(nr_sequencia_p, 'P');

/* Obter a categoria do tipo de acomodacao */

if (nr_seq_tipo_acomodacao_w IS NOT NULL AND nr_seq_tipo_acomodacao_w::text <> '') then
	select	max(nr_seq_categoria)
	into STRICT	nr_seq_categoria_w
	from	pls_regra_categoria
	where	nr_seq_tipo_acomodacao	= nr_seq_tipo_acomodacao_w;
end if;

begin
	--select	nvl(nr_seq_plano,0),
	select	coalesce(pls_obter_produto_benef(nr_sequencia,dt_conta_w),0),
		coalesce(nr_seq_contrato,0),
		pls_obter_conv_cat_segurado(nr_sequencia, 1),
		pls_obter_conv_cat_segurado(nr_sequencia, 2),
		coalesce(ie_pcmso,'N'),
		nr_seq_intercambio,
		nr_seq_congenere,
		nr_seq_ops_congenere,
		cd_estabelecimento
	into STRICT	nr_seq_plano_w,
		nr_seq_contrato_w,
		cd_convenio_w,
		cd_categoria_w,
		ie_pcmso_w,
		nr_seq_intercambio_w,
		nr_seq_congenere_seg_w,
		nr_seq_ops_congenere_seg_w,
		cd_estab_cad_benef_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
	
	ie_tipo_intercambio_benef_w := pls_obter_tipo_intercambio(coalesce(nr_seq_ops_congenere_seg_w, nr_seq_congenere_seg_w), cd_estab_cad_benef_w);
	
exception
	when others then
	nr_seq_plano_w	:= null;
	CALL pls_gravar_conta_glosa('1013',nr_seq_conta_w,null,
				null,'N','Beneficirio nao informado',nm_usuario_p,
				'A','CC',nr_seq_prestador_w,
				cd_estabelecimento_w,'',null);
end;

dados_beneficiario_valor_w.nr_sequencia		:= nr_seq_segurado_w;
dados_beneficiario_valor_w.nr_seq_intercambio	:= nr_seq_intercambio_w;
dados_beneficiario_valor_w.nr_seq_plano		:= nr_seq_plano_w;
dados_beneficiario_valor_w.ie_tipo_beneficiario	:= ie_tipo_segurado_w;
dados_beneficiario_valor_w.nr_seq_contrato	:= nr_seq_contrato_w;
dados_beneficiario_valor_w.ie_tipo_intercambio	:= ie_tipo_intercambio_benef_w;

/* Obter dados do plano */

begin
select	ie_preco,
	nr_seq_outorgante,
	ie_tipo_contratacao
into STRICT	ie_preco_plano_w,
	nr_seq_outorgante_w,
	ie_tipo_contratacao_w
from	pls_plano
where	nr_sequencia	= nr_seq_plano_w;
exception
	when others then
	ie_preco_plano_w	:= '0';
	nr_seq_outorgante_w	:= 0;
end;

/* Obter dados do prestador */

begin
select	nr_seq_classificacao,
	coalesce(cd_cgc,'')
into STRICT	nr_seq_classificacao_prest_w,
	cd_cgc_w
from	pls_prestador
where	nr_sequencia = nr_seq_prestador_w;
exception
when others then
	nr_seq_classificacao_prest_w := null;
end;

/* Obter dados do contrato */

begin
select	coalesce(ie_preco_co_operadora,'S')
into STRICT	ie_preco_co_operadora_w
from	pls_contrato
where	nr_sequencia	= nr_seq_contrato_w;
exception
	when others then
	ie_preco_co_operadora_w	:= 'N';
end;


if (coalesce(cd_medico_conta_w,'X') <> 'X') then
	cd_medico_w	:= cd_medico_conta_w;
else
	select	max(cd_medico)
	into STRICT	cd_medico_w
	from	 pls_proc_participante
	where	nr_seq_conta_proc	= nr_sequencia_p;

	if (coalesce(cd_medico_w,'X') = 'X') then
		cd_medico_w	:= cd_medico_conta_w;
	end if;
end if;

select	max(nr_seq_grau_partic)
into STRICT	nr_seq_grau_partic_part_w
from	pls_proc_participante
where	nr_seq_conta_proc	= nr_sequencia_p;

if (coalesce(nr_seq_regra_honorario_w::text, '') = '') then
	SELECT * FROM pls_obter_regra_honorario(	ie_tipo_guia_w, ie_conta_repasse_w, cd_medico_w, nr_seq_tipo_atendimento_w, cd_procedimento_w, ie_origem_proced_w, nm_usuario_p, cd_estabelecimento_w, nr_seq_prestador_w, nr_seq_prestador_atend_w, 'PE', ie_tipo_conta_w, nr_seq_grau_partic_part_w, dt_procedimento_w, vl_medico_ptu_imp_w, vl_co_ptu_imp_w, vl_material_ptu_imp_w, nr_seq_regra_honorario_w, ie_calcula_valor_w, ie_repassa_medico_w, ie_ptu_vl_honorario_w, ie_ptu_vl_co_w, ie_ptu_vl_filme_w, nr_sequencia_p  ) INTO STRICT nr_seq_regra_honorario_w, ie_calcula_valor_w, ie_repassa_medico_w, ie_ptu_vl_honorario_w, ie_ptu_vl_co_w, ie_ptu_vl_filme_w;
end if;
/*Necessario pasar como 'S' devidos as contas migradas*/

select	coalesce(max(ie_criterio_pgto),'N'),
	coalesce(max(ie_repassa_medico),'N')
into STRICT	ie_criterio_pgto_w,
	ie_repassa_medico_w
from	pls_regra_honorario
where	nr_sequencia	= nr_seq_regra_honorario_w;

if (ie_tipo_protocolo_w	= 'R') then
	ie_tipo_tabela_w	:= 'R';
	ie_calcula_valor_w	:= 'S';
elsif (ie_tipo_protocolo_w	= 'I') then
	ie_tipo_tabela_int_w	:= 'IP';

	if (ie_origem_conta_w	= 'A') then
		ie_tipo_tabela_w	:= 'IP';
	else
		ie_tipo_tabela_w	:= 'P';
	end if;
	ie_calcula_valor_w	:= 'S';
else
	ie_tipo_tabela_w	:= 'P';
	ie_calcula_valor_w	:= 'S';

	if (ie_criterio_pgto_w	= 'S') then

		if (cd_cgc_w <> '') then
			SELECT * FROM pls_obter_prest_pgto_prof(nr_seq_prestador_w, cd_medico_w, cd_procedimento_w, ie_origem_proced_w, nm_usuario_p, nr_seq_grupo_serv_w, null, nr_seq_prestador_pgto_w, nr_seq_regra_pgto_w) INTO STRICT nr_seq_prestador_pgto_w, nr_seq_regra_pgto_w;
		else
			SELECT * FROM pls_obter_prest_pgto_prof(nr_seq_prestador_atend_w, cd_medico_w, cd_procedimento_w, ie_origem_proced_w, nm_usuario_p, nr_seq_grupo_serv_w, null, nr_seq_prestador_pgto_w, nr_seq_regra_pgto_w) INTO STRICT nr_seq_prestador_pgto_w, nr_seq_regra_pgto_w;
		end if;

	end if;

	if	((ie_tipo_segurado_w	= 'I') or (ie_tipo_segurado_w	= 'H') or (ie_tipo_segurado_w	= 'T')) and (ie_tipo_protocolo_w	= 'C') then

		ie_tipo_tabela_int_w	:= 'IC';
	end if;
	

	select	coalesce(max(b.nr_sequencia),0)
	into STRICT	nr_seq_congenere_outorg_w
	from	pls_congenere b,
		pls_outorgante a
	where	a.cd_cgc_outorgante	= b.cd_cgc
	and	a.cd_estabelecimento	= cd_estabelecimento_w;
	
	if (nr_seq_congenere_seg_w IS NOT NULL AND nr_seq_congenere_seg_w::text <> '') and (nr_seq_congenere_seg_w <> nr_seq_congenere_outorg_w) then
		nr_seq_congenere_w	:= nr_seq_congenere_seg_w;
	end if;
end if;

if (ie_calcula_valor_w	= 'S') then
	ie_gravar_log_w	:= coalesce(ie_gravar_log_p,'N');

	if (ie_gravar_log_w = 'S') then
	
		if (pls_util_pck.ie_processo_pos_w = 'S') then
			ie_tipo_log_w := 'P';
		end if;
					
		delete	from pls_log_calculo_proc
		where	nr_seq_procedimento = nr_sequencia_p
		and	ie_tipo_log = ie_tipo_log_w;
	end if;

	ds_observacao_log_w	:= 'Data preco: ' || dt_preco_w || ' (' || ie_regra_data_preco_proc_w ||
				') / Categoria: ' || nr_seq_categoria_w || ' / Medico: ' || cd_medico_w ||
				' / Preco CO operadora: ' || ie_preco_co_operadora_w || ' / Preco plano: ' || ie_preco_plano_w;

	/* Obter a UF da operadora  - Tasy*/

	select	coalesce(max(sg_estado),'X')
	into STRICT	sg_estado_w
	from	pessoa_juridica
	where	cd_cgc	= (	SELECT	max(cd_cgc_outorgante)
				from	pls_outorgante
				where	cd_estabelecimento	= cd_estabelecimento_w);

	/* Obter a UF da operadora do beneficiario eventual ou que enviou o protocolo*/

	select	coalesce(max(a.sg_estado),'X')
	into STRICT	sg_estado_int_w
	from	pessoa_juridica	a,
		pls_congenere	b
	where	a.cd_cgc	= b.cd_cgc
	and	b.nr_sequencia	= nr_seq_congenere_w;

	if (sg_estado_w <> 'X') and (sg_estado_int_w <> 'X') then
		if (sg_estado_w	= sg_estado_int_w) then
			ie_tipo_intercambio_w	:= 'E';
		else
			ie_tipo_intercambio_w	:= 'N';
		end if;
	else
		ie_tipo_intercambio_w	:= 'A';
	end if;
	
	dados_conta_valor_w.ie_tipo_intercambio		:= ie_tipo_intercambio_w;
	dados_conta_valor_w.nr_seq_congenere		:= nr_seq_congenere_w;

	CALL pls_define_exame_coleta(nr_sequencia_p, nm_usuario_p);


	dados_regra_preco_proc_w := pls_define_preco_proc(	cd_estabelecimento_w, nr_seq_prestador_w, nr_seq_categoria_w, dt_preco_w, null, cd_procedimento_w, ie_origem_proced_w, nr_seq_tipo_acomodacao_w, nr_seq_tipo_atendimento_w, nr_seq_clinica_w, nr_seq_plano_w, ie_tipo_tabela_w, nr_seq_contrato_w, 0, nr_sequencia_p, ie_gravar_log_w, cd_convenio_w, cd_categoria_w, ie_tipo_contratacao_w, qt_dias_internacao_w, nr_seq_segurado_w, nr_seq_intercambio_w, '', nr_seq_classificacao_prest_w, cd_medico_conta_w, ie_conta_interacao_w, ie_tecnica_utilizada_w, ie_tipo_guia_w, ie_tipo_intercambio_w, sg_estado_int_w, nr_seq_cbo_saude_w, ie_carater_internacao_w, dt_procedimento_w, null, nr_seq_rp_combinada_w, dados_prestador_prot_w, dados_guia_w, dados_conta_valor_w, dados_regra_preco_proc_w, null, null, ie_regime_atendimento_w, ie_regime_atendimento_princ_w, ie_saude_ocupacional_w);
				
				vl_procedimento_w		:= dados_regra_preco_proc_w.vl_procedimento;
				vl_custo_operacional_w		:= dados_regra_preco_proc_w.vl_custo_operacional;
				vl_anestesista_w		:= dados_regra_preco_proc_w.vl_anestesista;
				vl_medico_w			:= dados_regra_preco_proc_w.vl_medico;
				vl_filme_w			:= dados_regra_preco_proc_w.vl_filme;
				vl_auxiliares_w			:= dados_regra_preco_proc_w.vl_auxiliares;
				nr_seq_regra_w			:= dados_regra_preco_proc_w.nr_sequencia;
				cd_edicao_amb_w			:= dados_regra_preco_proc_w.cd_edicao_amb;
				ie_preco_informado_w		:= dados_regra_preco_proc_w.ie_valor_informado;
				cd_porte_anestesico_w		:= dados_regra_preco_proc_w.cd_porte_anestesico;
				nr_aux_regra_w			:= dados_regra_preco_proc_w.nr_auxiliares;
				nr_seq_regra_autogerado_w	:= dados_regra_preco_proc_w.nr_seq_regra_autogerado;
				cd_moeda_autogerado_w		:= dados_regra_preco_proc_w.cd_moeda_autogerado;
				vl_ch_honorarios_w		:= dados_regra_preco_proc_w.vl_ch_honorarios;
				vl_ch_custo_oper_w		:= dados_regra_preco_proc_w.vl_ch_custo_oper;
				vl_ch_custo_filme_w		:= dados_regra_preco_proc_w.vl_ch_custo_filme;
				vl_ch_anestesista_w		:= dados_regra_preco_proc_w.vl_ch_anestesista;

	/* Obter o preco UNITaRIO da coparticipacao */

		
	if (ie_calculo_coparticipacao_w	= 'O') or ( ie_calculo_coparticipacao_w = 'R') then
			
		--taxas e servicos
		if (ie_tipo_despesa_w in ('2','3') ) then
				
			dados_regra_preco_servico_w := pls_define_preco_servico(cd_estabelecimento_w, nr_seq_prestador_w, dt_preco_w, cd_procedimento_w, ie_origem_proced_w, 'CO', nr_sequencia_p, 'S', ie_tipo_contratacao_w, nr_seq_plano_w, null, null, null, nr_seq_contrato_w, nr_seq_classificacao_w, nr_seq_categoria_w, ie_internado_w, ie_tipo_vinculo_w, nr_seq_intercambio_w, nr_seq_segurado_w, ie_tipo_intercambio_w, ie_tipo_guia_w, nr_seq_cbo_saude_w, ie_carater_internacao_w, nr_seq_clinica_w, nr_seq_tipo_atendimento_w, nr_seq_tipo_acomodacao_w, dados_prestador_prot_w, dados_conta_valor_w, dados_regra_preco_servico_w, null, cd_prestador_solic_w, ie_regime_atendimento_w, ie_saude_ocupacional_w);
	
			nr_seq_regra_copartic_w	:= dados_regra_preco_servico_w.nr_sequencia;
			vl_proc_copartic_w 	:= dados_regra_preco_servico_w.vl_servico;
							
			/* Tratar os adicionais por horario OS - 331057 Robson */
			
			dados_adic_horario_w := pls_cta_valorizacao_pck.pls_define_adic_horario(     	dados_conta_proc_valor_w, dados_prestador_exec_w, dados_prestador_prot_w, dados_conta_valor_w, dados_procedimento_w, dados_beneficiario_valor_w, 'CO', nm_usuario_p, cd_estabelecimento_w, dados_adic_horario_w);
									
			if (dados_adic_horario_w.tx_procedimento IS NOT NULL AND dados_adic_horario_w.tx_procedimento::text <> '') then
				vl_proc_copartic_w := (vl_proc_copartic_w * dados_adic_horario_w.tx_procedimento);
			end if;
		else
		
			dados_regra_preco_proc_w := pls_define_preco_proc(cd_estabelecimento_w, nr_seq_prestador_w, nr_seq_categoria_w, dt_preco_w, null, cd_procedimento_w, ie_origem_proced_w, nr_seq_tipo_acomodacao_w, nr_seq_tipo_atendimento_w, nr_seq_clinica_w, nr_seq_plano_w, 'CO', nr_seq_contrato_w, nr_seq_outorgante_w, nr_sequencia_p, ie_gravar_log_w, cd_convenio_w, cd_categoria_w, ie_tipo_contratacao_w, qt_dias_internacao_w, nr_seq_segurado_w, nr_seq_intercambio_w, '', nr_seq_classificacao_prest_w, cd_medico_conta_w, ie_conta_interacao_w, ie_tecnica_utilizada_w, ie_tipo_guia_w, ie_tipo_intercambio_w, sg_estado_int_w, nr_seq_cbo_saude_w, ie_carater_internacao_w, dt_procedimento_w, null, nr_seq_rp_combinada_w, dados_prestador_prot_w, dados_guia_w, dados_conta_valor_w, dados_regra_preco_proc_w, null, null, ie_regime_atendimento_w, ie_regime_atendimento_princ_w, ie_saude_ocupacional_w);
		
			vl_proc_copartic_w		:= dados_regra_preco_proc_w.vl_procedimento;
			vl_co_copartic_w		:= dados_regra_preco_proc_w.vl_custo_operacional;
			vl_anestesista_copartic_w	:= dados_regra_preco_proc_w.vl_anestesista;
			vl_medico_copartic_w		:= dados_regra_preco_proc_w.vl_medico;
			vl_filme_copartic_w		:= dados_regra_preco_proc_w.vl_filme;
			vl_auxiliares_copartic_w	:= dados_regra_preco_proc_w.vl_auxiliares;
			nr_seq_regra_copartic_w		:= dados_regra_preco_proc_w.nr_sequencia;
			nr_aux_regra_copart_w		:= dados_regra_preco_proc_w.nr_auxiliares;

			/* Tratar os adicionais por horario OS - 331057 Robson */

			dados_adic_horario_w := pls_cta_valorizacao_pck.pls_define_adic_horario(     	dados_conta_proc_valor_w, dados_prestador_exec_w, dados_prestador_prot_w, dados_conta_valor_w, dados_procedimento_w, dados_beneficiario_valor_w, 'CO', nm_usuario_p, cd_estabelecimento_w, dados_adic_horario_w);
			if (ie_taxa_grau_partic_w = 'S')  then
				begin
				vl_filme_copartic_w		:= (dados_adic_horario_w.tx_materiais		* vl_filme_copartic_w);
				vl_co_copartic_w		:= (dados_adic_horario_w.tx_custo_operacional	* vl_co_copartic_w);
				vl_medico_copartic_w		:= (dados_adic_horario_w.tx_medico		* vl_medico_copartic_w);
				vl_auxiliares_copartic_w	:= (dados_adic_horario_w.tx_auxiliares		* vl_auxiliares_copartic_w);
				vl_anestesista_copartic_w	:= (dados_adic_horario_w.tx_anestesista		* vl_anestesista_copartic_w);
		
				vl_co_copartic_w		:=	(vl_co_copartic_w 		* tx_custo_operacional_adic_w);
				vl_anestesista_copartic_w 	:=	(vl_anestesista_copartic_w 	* tx_anestesista_adic_w);
				vl_medico_copartic_w		:=	(vl_medico_copartic_w 		* tx_medico_adic_w);
				vl_filme_copartic_w		:=	(vl_filme_copartic_w 		* tx_materiais_adic_w);
				vl_auxiliares_copartic_w	:=	(vl_auxiliares_copartic_w 	* tx_auxiliares_adic_w);
						
				vl_medico_copartic_w		:= dividir((vl_medico_copartic_w 	* coalesce(tx_item_w,100) ),100);
				vl_anestesista_copartic_w	:= dividir((vl_anestesista_copartic_w 	* coalesce(tx_item_w,100) ),100);
				vl_auxiliares_copartic_w	:= dividir((vl_auxiliares_copartic_w 	* coalesce(tx_item_w,100) ),100);
				vl_co_copartic_w		:= dividir((vl_co_copartic_w 		* coalesce(tx_item_w,100) ),100);
				vl_filme_copartic_w		:= dividir((vl_filme_copartic_w 	* coalesce(tx_item_w,100) ),100);
				end;
			end if;
				
		end if;

	end if;

	if (ie_tipo_despesa_w not in ('2','3') ) then
		if (ie_copartic_grau_partic_w = 'S') then
			SELECT * FROM pls_gerar_honorario_proc(	nr_sequencia_p, cd_procedimento_w, ie_origem_proced_w, nr_seq_grau_partic_w, ie_tipo_guia_w, nr_seq_tipo_atendimento_w, ie_tipo_conta_w, nr_seq_prestador_w, ie_tipo_protocolo_w, nr_auxiliares_w, ie_status_w, ie_repassa_medico_w, vl_anestesista_copartic_w, vl_medico_copartic_w, vl_auxiliares_copartic_w, cd_estabelecimento_w, dt_procedimento_w, nm_usuario_p, nr_seq_categoria_w, dt_preco_w, nr_seq_tipo_acomodacao_w, nr_seq_clinica_w, nr_seq_plano_w, ie_tipo_tabela_w, nr_seq_contrato_w, cd_convenio_w, cd_categoria_w, ie_tipo_contratacao_w, qt_dias_internacao_w, nr_seq_segurado_w, nr_seq_intercambio_w, ie_conta_interacao_w, ie_tecnica_utilizada_w, ie_tipo_intercambio_w, sg_estado_int_w, ie_carater_internacao_w, 'CO', vl_total_partic_copartic_w, ie_tipo_partic_prof_w, nr_seq_prestador_pgto_w, null, 'A') INTO STRICT vl_total_partic_copartic_w, ie_tipo_partic_prof_w;
		end if;

		if	((coalesce(vl_total_partic_copartic_w,0) > 0) or (coalesce(nr_seq_regra_honorario_w,0) > 0)) then
			if (ie_repassa_medico_w	= 'S') then
				if (ie_copartic_grau_partic_w = 'S') or (ie_taxa_grau_partic_w	= 'S') then
					vl_proc_copartic_w := coalesce(vl_total_partic_copartic_w,0) + coalesce(vl_co_copartic_w,0) + coalesce(vl_filme_copartic_w,0);
				end if;
			elsif (ie_repassa_medico_w = 'H') then
				if (ie_copartic_grau_partic_w = 'S') or (ie_taxa_grau_partic_w	= 'S') then
					vl_proc_copartic_w := coalesce(vl_total_partic_copartic_w,0);
				end if;
			else
				if (ie_copartic_grau_partic_w = 'S') or (ie_taxa_grau_partic_w	= 'S') then
					vl_proc_copartic_w := coalesce(vl_total_partic_copartic_w,0) + coalesce(vl_co_copartic_w,0) + coalesce(vl_filme_copartic_w,0);
				end if;
			end if;
		else
			if (ie_copartic_grau_partic_w = 'S') or (ie_taxa_grau_partic_w = 'S') then
				vl_proc_copartic_w	:= 0;
			end if;
		end if;

		if (ie_copartic_grau_partic_w = 'N') and (ie_taxa_grau_partic_w = 'N') then
			vl_proc_copartic_w	:= ((tx_item_w * vl_proc_copartic_w)/100);
		elsif (ie_copartic_grau_partic_w = 'N') and (ie_taxa_grau_partic_w = 'T') then
			vl_proc_copartic_w	:= vl_proc_copartic_w;
		end if;
		
		if (ie_taxa_grau_partic_w = 'S')  then
			vl_proc_copartic_w	:= (coalesce(dados_adic_horario_w.tx_procedimento,1) * vl_proc_copartic_w);
		end if;
		
		vl_proc_copartic_w	:= round((vl_proc_copartic_w)::numeric,2);
	end if;
		
	update	pls_conta_proc
	set	vl_proc_copartic		= vl_proc_copartic_w,
		nr_seq_regra_copartic		= nr_seq_regra_copartic_w
	where	nr_sequencia			= nr_sequencia_p;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_coparticipacao_proc ( nr_sequencia_p bigint, ie_gravar_log_p text, nm_usuario_p text) FROM PUBLIC;

