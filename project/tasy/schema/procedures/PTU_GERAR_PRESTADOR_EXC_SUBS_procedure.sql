-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_prestador_exc_subs ( nr_seq_prest_ptu_p ptu_prestador.nr_sequencia%type, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, cd_cgc_p pessoa_juridica.cd_cgc%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_tipo_lote_w			ptu_movimento_prestador.ie_tipo_lote%type;
dt_referencia_w			ptu_movimento_prestador.dt_referencia%type;
cd_cnpj_cpf_substit_w		ptu_prestador_excl_subst.cd_cnpj_cpf_substit%type;
nr_referencia_end_w		pls_prestador.nr_referencia_end%type;
cd_motivo_exclusao_w		ptu_prestador_excl_subst.cd_motivo_exclusao%type;
ie_prestador_inativo_w		ptu_movimento_prestador.ie_prestador_inativo%type;
cd_motivo_substituicao_w	ptu_prestador_excl_subst.cd_motivo_substituicao%type;
nr_oficio_w			ptu_prestador_excl_subst.nr_oficio%type;
ie_tipo_prestador_w		ptu_prestador.ie_tipo_prestador%type;
nr_versao_w			bigint;
cd_unimed_destino_w		ptu_movimento_prestador.cd_unimed_destino%type;
nr_seq_congenere_w		pls_congenere.nr_sequencia%type;

C01 CURSOR( 	cd_estabelecimento_pc	estabelecimento.cd_estabelecimento%type,
		cd_pessoa_fisica_pc	pessoa_fisica.cd_pessoa_fisica%type,
		cd_cgc_pc		pessoa_juridica.cd_cgc%type,
		ie_tipo_lote_pc		text) FOR
	SELECT	/*+ USE_CONCAT */		a.nr_sequencia,
		a.nr_referencia_end,
		b.cd_exclusao_pla_prod,
		b.cd_exclusao_rede,
		b.dt_inicio_prest,
		b.dt_termino_prest,
		b.ie_nivel_exclusao_ptu,
		b.nr_seq_prestador_subst,
		b.nr_seq_motivo_exclusao,
		b.nr_seq_motivo_subst,
		b.nr_oficio,
		CASE WHEN coalesce(b.nr_seq_prestador_subst::text, '') = '' THEN 'N'  ELSE 'S' END  ie_substituicao
	from	pls_prestador			a,
		pls_prestador_excl_subst 	b
	where	a.nr_sequencia		= b.nr_seq_prestador
	and	a.cd_estabelecimento	= cd_estabelecimento_pc
	and	((cd_pessoa_fisica	= cd_pessoa_fisica_pc)
	or (cd_cgc			= cd_cgc_pc))
	and	((a.ie_situacao	= 'A' AND ie_prestador_inativo_w = 'N') or (ie_prestador_inativo_w = 'S'))
	and	((a.ie_ptu_a400		= 'S' and ie_tipo_lote_pc = 'PTU')
	or (a.ie_guia_medico 	= 'S' and ie_tipo_lote_pc = 'GUIA'))
	and	a.ie_tipo_relacao 	<> 'F'
	and	(a.dt_exclusao IS NOT NULL AND a.dt_exclusao::text <> '');

BEGIN
if (nr_seq_prest_ptu_p IS NOT NULL AND nr_seq_prest_ptu_p::text <> '') then
	select	max(ie_tipo_lote),
		max(dt_referencia),
		max(coalesce(a.ie_prestador_inativo,'N')),
		max(b.ie_tipo_prestador)
	into STRICT	ie_tipo_lote_w,
		dt_referencia_w,
		ie_prestador_inativo_w,
		ie_tipo_prestador_w
	from	ptu_movimento_prestador a,
		ptu_prestador b
	where	a.nr_sequencia	= b.nr_seq_movimento
	and	b.nr_sequencia	= nr_seq_prest_ptu_p;

	if (cd_unimed_destino_w IS NOT NULL AND cd_unimed_destino_w::text <> '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_congenere_w
		from	pls_congenere
		where	cd_cooperativa = cd_unimed_destino_w;
	end if;

	nr_versao_w := somente_numero(ptu_obter_versao_dominio('A400',pls_obter_interf_ptu( cd_estabelecimento_p, nr_seq_congenere_w, clock_timestamp(), 'A400')));

	for r_C01_w in C01( cd_estabelecimento_p, cd_pessoa_fisica_p, cd_cgc_p, ie_tipo_lote_w) loop

		begin
		select	obter_cpf_cnpj_pf_pj(cd_pessoa_fisica,cd_cgc)
		into STRICT	cd_cnpj_cpf_substit_w
		from	pls_prestador
		where	nr_sequencia	= r_C01_w.nr_seq_prestador_subst;
		exception
		when others then
			cd_cnpj_cpf_substit_w := null;
		end;

		nr_referencia_end_w := r_C01_w.nr_referencia_end;
		if (r_C01_w.ie_nivel_exclusao_ptu not in ('04', '06', '07', '08')) then
			nr_referencia_end_w := '00';
		end if;

		cd_motivo_exclusao_w := '00';
		if (nr_versao_w < 100) then -- Versão antes do PTU 10.0
			if (r_C01_w.nr_seq_motivo_exclusao IS NOT NULL AND r_C01_w.nr_seq_motivo_exclusao::text <> '') and (r_C01_w.ie_substituicao = 'N') then
				select	lpad(max(cd_motivo),2,'0')
				into STRICT	cd_motivo_exclusao_w
				from	ptu_motivo_exclusao_subst
				where	nr_sequencia	= r_C01_w.nr_seq_motivo_exclusao;
			end if;
		else
			if (r_C01_w.nr_seq_motivo_exclusao IS NOT NULL AND r_C01_w.nr_seq_motivo_exclusao::text <> '') and
				((r_C01_w.ie_substituicao = 'N') or (ie_tipo_prestador_w in ('02','10'))) then
				select	lpad(max(cd_motivo),2,'0')
				into STRICT	cd_motivo_exclusao_w
				from	ptu_motivo_exclusao_subst
				where	nr_sequencia	= r_C01_w.nr_seq_motivo_exclusao;
			end if;
		end if;

		cd_motivo_substituicao_w := '00';
		if (r_C01_w.nr_seq_motivo_subst IS NOT NULL AND r_C01_w.nr_seq_motivo_subst::text <> '') and (ie_tipo_prestador_w in ('02','10')) then
			select	lpad(max(cd_motivo),2,'0')
			into STRICT	cd_motivo_substituicao_w
			from	ptu_motivo_subst_prest
			where	nr_sequencia	= r_C01_w.nr_seq_motivo_subst;
		end if;

		-- Regra: Obrigatório se MOTIVO_SUBSTIT = 02. Para demais casos, preencher com brancos.
		nr_oficio_w := r_C01_w.nr_oficio;
		if (cd_motivo_substituicao_w not in ('02')) then
			nr_oficio_w := null;
		end if;

		-- Se for antes do PTU 11.0 o campo tem que gravar 10 caracteres
		if (nr_versao_w < 110) then
			nr_oficio_w := substr(nr_oficio_w,1,10);
		end if;

		insert into ptu_prestador_excl_subst(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ie_nivel_exclusao_ptu,
			cd_exclusao_rede,
			cd_exclusao_pla_prod,
			nr_exclusao_end,
			dt_termino_prest,
			ie_substituicao,
			cd_cnpj_cpf_substit,
			dt_inicio_prest,
			nr_seq_prestador,
			cd_motivo_exclusao,
			cd_motivo_substituicao,
			nr_oficio)
		values (nextval('ptu_prestador_excl_subst_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			r_C01_w.ie_nivel_exclusao_ptu,
			r_C01_w.cd_exclusao_rede,
			r_C01_w.cd_exclusao_pla_prod,
			nr_referencia_end_w,
			r_C01_w.dt_termino_prest,
			r_C01_w.ie_substituicao,
			cd_cnpj_cpf_substit_w,
			r_C01_w.dt_inicio_prest,
			nr_seq_prest_ptu_p,
			cd_motivo_exclusao_w,
			cd_motivo_substituicao_w,
			nr_oficio_w);
	end loop;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_prestador_exc_subs ( nr_seq_prest_ptu_p ptu_prestador.nr_sequencia%type, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, cd_cgc_p pessoa_juridica.cd_cgc%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

