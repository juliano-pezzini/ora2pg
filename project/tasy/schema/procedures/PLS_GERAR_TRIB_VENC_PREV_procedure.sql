-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_trib_venc_prev ( nr_seq_vencimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar os valores de tributos previstos (para baixa do título)
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_variacao_w			varchar(50);
ie_periodicidade_w		varchar(50);
ie_cnpj_w			varchar(50);
cd_cnpj_raiz_w			varchar(50);
cd_darf_w			varchar(20);
ie_tipo_tributo_w		varchar(15);
cd_beneficiario_w		varchar(14);
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
ie_irpf_w			varchar(3);
ie_apuracao_piso_w		varchar(3);
ie_tipo_contratacao_w		varchar(2);
ie_vencimento_w			varchar(1);
ie_acumulativo_w		varchar(1);
ie_restringe_estab_w		varchar(1);
pr_aliquota_w			double precision;
vl_tributo_w			double precision;
vl_base_calculo_w		double precision;
vl_minimo_tributo_w		double precision;
vl_base_retido_outro_w		double precision;
vl_base_calculo_paga_w		double precision;
vl_soma_trib_nao_retido_w	double precision;
vl_soma_base_nao_retido_w	double precision;
vl_soma_trib_adic_w		double precision;
vl_soma_base_adic_w		double precision;
vl_minimo_base_w		double precision;
vl_trib_adic_w			double precision;
vl_trib_nao_retido_w		double precision;
vl_base_adic_w			double precision;
vl_base_nao_retido_w		double precision;
vl_teto_base_w			double precision;
vl_trib_anterior_w		double precision;
vl_vencimento_w			double precision;
vl_reducao_w			double precision;
vl_desc_dependente_w		double precision;
vl_total_base_w			double precision;
vl_base_pago_adic_base_w	double precision;
cd_tributo_w			bigint;
nr_seq_venc_trib_prev_w		bigint;
cd_cond_pagto_w			bigint;
nr_seq_trans_reg_w		bigint;
nr_seq_trans_baixa_w		bigint;
cd_conta_financ_w		bigint;
nr_seq_regra_trib_w		bigint;
nr_seq_classe_w			bigint;
cd_estabelecimento_w		integer;
cd_tipo_baixa_neg_w		integer;
cd_empresa_w			smallint;
qt_dependente_w			smallint;
dt_vencimento_w			timestamp;
dt_tributo_w			timestamp;
dt_calculo_w			timestamp;
nr_seq_regra_irpf_w		regra_calculo_irpf.nr_sequencia%type;
nr_seq_tipo_prestador_w		pls_tipo_prestador.nr_sequencia%type;
nr_seq_classificacao_w		pls_prestador.nr_seq_classificacao%type;

C01 CURSOR FOR
	SELECT	cd_tributo,
		ie_vencimento,
		ie_tipo_tributo,
		ie_apuracao_piso,
		ie_cnpj,
		ie_restringe_estab
	from	tributo	a
	where	ie_conta_pagar	= 'S'
	and	ie_situacao	= 'A'
	and	ie_baixa_titulo	= 'S'
	and	((ie_pf_pj = 'A') or
		(ie_pf_pj = 'PF' AND cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') or
		(ie_pf_pj = 'PJ' AND cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> ''))
	order	by CASE WHEN ie_tipo_tributo='INSS' THEN  1  ELSE 2 END;


BEGIN

select	a.vl_vencimento,
	a.vl_vencimento,
	e.cd_empresa,
	d.cd_pessoa_fisica,
	d.cd_cgc,
	obter_cnpj_raiz(d.cd_cgc),
	coalesce(c.dt_mes_competencia, a.dt_vencimento),
	c.cd_estabelecimento,
	coalesce(c.dt_ref_tributo, c.dt_mes_competencia),
	d.nr_seq_tipo_prestador,
	d.nr_seq_classificacao
into STRICT	vl_vencimento_w,
	vl_base_calculo_w,
	cd_empresa_w,
	cd_pessoa_fisica_w,
	cd_cgc_w,
	cd_cnpj_raiz_w,
	dt_tributo_w,
	cd_estabelecimento_w,
	dt_vencimento_w,
	nr_seq_tipo_prestador_w,
	nr_seq_classificacao_w
from	estabelecimento 		e,
	pls_prestador			d,
	pls_lote_pagamento		c,
	pls_pagamento_prestador		b,
	pls_pag_prest_vencimento	a
where	c.cd_estabelecimento	= e.cd_estabelecimento
and	a.nr_seq_pag_prestador	= b.nr_sequencia
and	b.nr_seq_prestador	= d.nr_sequencia
and	b.nr_seq_lote		= c.nr_sequencia
and	a.nr_sequencia		= nr_seq_vencimento_p;

if (coalesce(vl_base_calculo_w,0) > 0) then
	open C01;
	loop
	fetch C01 into
		cd_tributo_w,
		ie_vencimento_w,
		ie_tipo_tributo_w,
		ie_apuracao_piso_w,
		ie_cnpj_w,
		ie_restringe_estab_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		vl_tributo_w := 0;
		
		SELECT * FROM obter_dados_trib_tit_pagar(cd_tributo_w, cd_estabelecimento_w, cd_cgc_w, cd_pessoa_fisica_w, cd_beneficiario_w, pr_aliquota_w, cd_cond_pagto_w, cd_conta_financ_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_darf_w, dt_calculo_w, cd_variacao_w, ie_periodicidade_w, null, null, null, null, ie_tipo_contratacao_w, null, nr_seq_regra_trib_w, null, 0, nr_seq_classe_w, cd_tipo_baixa_neg_w, vl_base_calculo_w, 'S', null, null, nr_seq_tipo_prestador_w, nr_seq_classificacao_w) INTO STRICT cd_beneficiario_w, pr_aliquota_w, cd_cond_pagto_w, cd_conta_financ_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_darf_w, cd_variacao_w, ie_periodicidade_w, nr_seq_regra_trib_w, nr_seq_classe_w, cd_tipo_baixa_neg_w;
					
		if (coalesce(pr_aliquota_w,0) > 0) then
		
			SELECT * FROM pls_pag_prod_obter_val_trib(	ie_apuracao_piso_w, ie_cnpj_w, cd_pessoa_fisica_w, cd_cgc_w, cd_cnpj_raiz_w, ie_restringe_estab_w, cd_empresa_w, cd_tributo_w, dt_tributo_w, vl_soma_trib_nao_retido_w, vl_soma_base_nao_retido_w, vl_soma_trib_adic_w, vl_soma_base_adic_w, vl_trib_anterior_w, vl_total_base_w, vl_reducao_w, cd_estabelecimento_w, nm_usuario_p) INTO STRICT vl_soma_trib_nao_retido_w, vl_soma_base_nao_retido_w, vl_soma_trib_adic_w, vl_soma_base_adic_w, vl_trib_anterior_w, vl_total_base_w, vl_reducao_w;
			
			SELECT * FROM obter_valores_tributo(	ie_acumulativo_w, pr_aliquota_w, vl_minimo_base_w, vl_minimo_tributo_w, vl_soma_trib_nao_retido_w, vl_soma_trib_adic_w, vl_soma_base_nao_retido_w, vl_soma_base_adic_w, vl_base_calculo_w, vl_tributo_w, vl_trib_nao_retido_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_base_adic_w, vl_teto_base_w, vl_trib_anterior_w, ie_irpf_w, vl_total_base_w, vl_reducao_w, vl_desc_dependente_w, qt_dependente_w, vl_base_calculo_paga_w, vl_base_pago_adic_base_w, vl_base_retido_outro_w, obter_outras_reducoes_irpf(cd_pessoa_fisica_w, cd_estabelecimento_w, dt_tributo_w), dt_calculo_w, nr_seq_regra_irpf_w) INTO STRICT pr_aliquota_w, vl_base_calculo_w, vl_tributo_w, vl_trib_nao_retido_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_base_adic_w, vl_reducao_w, vl_desc_dependente_w, nr_seq_regra_irpf_w;
						
			if (vl_tributo_w <> 0) then
				select	nextval('pls_pag_venc_trib_prev_seq')
				into STRICT	nr_seq_venc_trib_prev_w
				;
				
				insert into pls_pag_venc_trib_prev(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_vencimento,
					cd_tributo,
					dt_imposto,
					vl_base_adic,
					vl_base_calculo,
					vl_base_nao_retido,
					pr_tributo,
					vl_desc_base,
					vl_imposto,
					vl_trib_adic,
					vl_reducao,
					vl_nao_retido)
				values (nr_seq_venc_trib_prev_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_vencimento_p,
					cd_tributo_w,
					dt_vencimento_w,
					vl_base_adic_w,
					vl_base_calculo_w,
					vl_base_nao_retido_w,
					pr_aliquota_w,
					vl_desc_dependente_w,
					vl_tributo_w,
					vl_trib_adic_w,
					vl_reducao_w,
					vl_trib_nao_retido_w);
			end if;
		end if;
				
		end;
	end loop;
	close C01;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_trib_venc_prev ( nr_seq_vencimento_p bigint, nm_usuario_p text) FROM PUBLIC;

