-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_w_alt_sib_flex ( nr_seq_lote_sib_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
dt_referencia_w			timestamp;
nr_seq_segurado_w		bigint;
cd_pessoa_fisica_w		varchar(10);
nm_segurado_w			varchar(255);
dt_nascimento_w			timestamp;
ie_sexo_w			smallint;
nr_cpf_w			varchar(11);
nr_pis_pasep_w			varchar(11);
nm_mae_segurado_w		varchar(255);
cd_cns_w			varchar(15);
nr_identidade_w			varchar(15);
ds_orgao_emissor_ci_w		pessoa_fisica.ds_orgao_emissor_ci%type;
cd_nacionalidade_w		varchar(8);
nr_seq_titular_w		bigint;
ie_regulamentacao_w		varchar(2);
dt_liberacao_w			timestamp;
ds_logradouro_w			varchar(50);
ds_numero_w			varchar(5);
ds_complemento_w		varchar(15);
ds_bairro_w			varchar(50);
ds_municipio_w			varchar(50);
uf_w				pls_segurado_sib.sg_estado%type;
cep_w				varchar(15);
dt_mesano_referencia_w		timestamp;
dt_reinclusao_w			timestamp;
nr_seq_motivo_cancelamento_w	bigint;
dt_referencia_fim_w		timestamp;
ie_tipo_beneficiario_W		varchar(10);
nr_seq_segurado_sib_w		bigint;
nr_seq_seg_sib_ant_w		bigint;
nm_pessoa_fisica_ant_w		varchar(255);
dt_nascimento_ant_w		timestamp;
ie_sexo_ant_w			smallint;
nm_mae_pessoa_fisica_ant_w	varchar(255);
ds_endereco_ant_w		varchar(50);
nr_endereco_ant_w		varchar(5);
ds_bairro_ant_w			varchar(50);
ds_complemento_ant_w		compl_pessoa_fisica.ds_complemento%type;
cd_municipio_ibge_ant_w		varchar(50);
sg_estado_ant_w			pls_segurado_sib.sg_estado%type;
cd_cep_ant_w			varchar(15);
nr_cartao_nac_sus_ant_w		varchar(15);
nr_identidade_ant_w		varchar(15);
ds_orgao_emissor_ci_ant_w	pessoa_fisica.ds_orgao_emissor_ci%type;
cd_nacionalidade_ant_w		varchar(8);
nr_pis_pasep_ant_w		varchar(11);
nr_cpf_ant_w			varchar(11);
ie_alteracao_w			bigint;
qt_exitir_alteracao_w		bigint;
nr_seq_alteracao_sib_w		bigint;
qt_registros_w			bigint;
ie_w				bigint;
dt_mesano_referencia_ant_w	timestamp;
ie_tipo_logradouro_w		varchar(10);
cd_municipio_ibge_resid_w	varchar(10);
ie_tipo_historico_w		varchar(10);
cd_estabelecimento_w		bigint;
ds_alteracao_w			w_pls_alteracao_sib.ds_alteracoes%type;
nr_seq_parentesco_ant_w		pls_segurado_historico.nr_seq_parentesco_ant%type;
nr_seq_parentesco_w		pls_segurado.nr_seq_parentesco%type;
cd_sib_w			grau_parentesco.cd_sib%type := null;
ds_historico_w			pls_segurado_historico.ds_historico%type;
ds_into_atributos_w		varchar(4000):= '';
ds_values_atributos_w		varchar(4000):= '';
ds_sql_w			varchar(8000):= '';
ie_atributo_w			bigint;
ie_inserir_w			varchar(1);
cd_cgc_estipulante_w		pls_contrato.cd_cgc_estipulante%type;
dt_rescisao_w			pls_segurado.dt_rescisao%type;
qt_cpt_w			integer;
dt_referencia_lote_w		timestamp;
cd_motivo_cancelamento_w	pls_motivo_cancelamento.cd_motivo_cancelamento%type;
cd_sib_ant_w			grau_parentesco.cd_sib%type := null;

ds_atributo_w	varchar(255);
ds_valor_w	varchar(255);

C01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.cd_pessoa_fisica, 
		a.nr_seq_titular, 
		c.ie_regulamentacao, 
		a.dt_contratacao, 
		a.dt_rescisao, 
		a.nr_seq_motivo_cancelamento, 
		e.ie_tipo_beneficiario, 
		d.ie_tipo_historico, 
		d.nr_seq_parentesco_ant, 
		a.nr_seq_parentesco, 
		d.ds_historico, 
		e.cd_cgc_estipulante, 
		a.dt_rescisao 
	FROM pls_contrato e, pls_segurado_historico d, pls_plano c, pls_segurado a, pessoa_fisica b
LEFT OUTER JOIN pls_pessoa_fisica l ON (b.cd_pessoa_fisica = l.cd_pessoa_fisica)
WHERE a.nr_sequencia		= d.nr_seq_segurado and a.cd_pessoa_fisica	= b.cd_pessoa_fisica  and a.nr_seq_plano		= c.nr_sequencia and a.nr_seq_contrato	= e.nr_sequencia and e.cd_estabelecimento	= cd_estabelecimento_p and a.ie_tipo_segurado in ('B','R') and c.ie_tipo_operacao	= 'B' and d.ie_tipo_historico in ('8','9','10','12','14','19','20','47','71') and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and coalesce(a.dt_cancelamento::text, '') = '' and a.dt_contratacao <= dt_referencia_w and d.dt_ocorrencia_sib >= dt_referencia_w and d.dt_ocorrencia_sib <= dt_referencia_fim_w;

C02 CURSOR FOR 
	SELECT 	a.nr_sequencia, 
		a.cd_pessoa_fisica, 
		a.nr_seq_titular, 
		c.ie_regulamentacao 
	from	pls_segurado a, 
		pls_plano c, 
		pls_contrato e 
	where	a.nr_seq_plano		= c.nr_sequencia 
	and	a.nr_seq_contrato	= e.nr_sequencia 
	and	e.cd_estabelecimento	= cd_estabelecimento_p 
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
	and	coalesce(a.dt_cancelamento::text, '') = '' 
	and	e.ie_tipo_beneficiario	<> 'ENB' 
	and 	((a.dt_reativacao <> dt_referencia_w) or (coalesce(a.dt_reativacao::text, '') = '')) 
	and	((coalesce(a.dt_rescisao::text, '') = '' or trunc(a.dt_rescisao,'Month') > dt_referencia_w) or (trunc(a.dt_rescisao,'Month') = dt_referencia_w and trunc(a.dt_migracao,'Month') = dt_referencia_lote_w)) --No mês de rescisão deve enviar as alterações realizadas no cadastro da pessoa física quando existir migração. 
	and	a.dt_contratacao < dt_referencia_w 
	and	a.ie_tipo_segurado in ('B','R') 
	and	c.ie_tipo_operacao	= 'B' 
	and	exists (SELECT	1 
			from	pls_pessoa_fisica_sib x 
			where	x.cd_pessoa_fisica	= a.cd_pessoa_fisica 
			and	x.dt_ocorrencia_sib	= dt_referencia_w);

C03 CURSOR FOR 
	SELECT	ie_atributo 
	from 	pls_pessoa_fisica_sib 
	where 	cd_pessoa_fisica	= cd_pessoa_fisica_w 
	and  	dt_ocorrencia_sib 	= dt_referencia_w 
	and 	ie_atributo 		not in (5,15) -- 5 = DS_ORGAO_EMISSOR_CI / 15 = CD_PESSOA_FISICA_REF 
	group by ie_atributo;


BEGIN 
delete	from	w_pls_alteracao_sib 
where	nr_seq_lote_sib	= nr_seq_lote_sib_p;
 
select	trunc(add_months(dt_mesano_referencia,-1),'month'), 
	trunc(dt_mesano_referencia,'month'), 
	cd_estabelecimento 
into STRICT	dt_referencia_w, 
	dt_referencia_lote_w, 
	cd_estabelecimento_w 
from	pls_lote_sib 
where	nr_sequencia	= nr_seq_lote_sib_p;
 
select	fim_mes(dt_referencia_w) 
into STRICT	dt_referencia_fim_w
;
 
open C01;
loop 
fetch C01 into 
	nr_seq_segurado_w, 
	cd_pessoa_fisica_w, 
	nr_seq_titular_w, 
	ie_regulamentacao_w, 
	dt_liberacao_w, 
	dt_reinclusao_w, 
	nr_seq_motivo_cancelamento_w, 
	ie_tipo_beneficiario_w, 
	ie_tipo_historico_w, 
	nr_seq_parentesco_ant_w, 
	nr_seq_parentesco_w, 
	ds_historico_w, 
	cd_cgc_estipulante_w, 
	dt_rescisao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	if (ie_tipo_historico_w = '20') then --Se o grau de parentesco novo for igual o anterior, não deve gerar o movimento no SIB 
		select	max(x.cd_sib) 
		into STRICT 	cd_sib_w 
		from	grau_parentesco x 
		where 	x.nr_sequencia = nr_seq_parentesco_w;
		 
		select	max(y.cd_sib) 
		into STRICT	cd_sib_ant_w 
		from	grau_parentesco y 
		where	y.nr_sequencia = nr_seq_parentesco_ant_w;
		 
		if (cd_sib_w = cd_sib_ant_w) then 
			goto final;
		end if;
	end if;
	 
	if (ie_tipo_beneficiario_w	= 'ENB') then 
		goto final;
	end if;
	 
	if (dt_reinclusao_w IS NOT NULL AND dt_reinclusao_w::text <> '') and (trunc(dt_reinclusao_w,'month') >= dt_referencia_w) then 
		goto final;
	end if;
	 
	if (ie_tipo_historico_w <> '14') and (trunc(dt_liberacao_w,'Month') = dt_referencia_w) then 
		goto final;
	end if;
	 
	if (ie_tipo_historico_w = '14') then 
		select	count(1) 
		into STRICT	qt_registros_w 
		from	pls_interf_sib 
		where	nr_seq_lote_sib	= nr_seq_lote_sib_p 
		and	nr_seq_segurado	= nr_seq_segurado_w 
		and	ie_tipo_reg	= 1  LIMIT 1;
		 
		if (qt_registros_w > 0) then 
			goto final;
		end if;
	end if;
	 
	if (ie_tipo_historico_w <> '71') then 
		ds_historico_w := obter_valor_dominio(1899,ie_tipo_historico_w);
	end if;
	 
	if (ie_tipo_historico_w = '8') then --Transferência de titularidade 
		ds_into_atributos_w	:= 'nr_seq_titular';
		if (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then 
			ds_values_atributos_w	:= nr_seq_titular_w;
		else 
			ds_values_atributos_w	:= 'null';
		end if;
	elsif (ie_tipo_historico_w = '9') then --Mudança do cartão de identificação 
		ds_into_atributos_w	:= 'cd_usuario_plano';
		ds_values_atributos_w	:= pls_obter_dados_segurado(nr_seq_segurado_w,'C');
	elsif (ie_tipo_historico_w = '10') then --Alteração de estipulante 
		ds_into_atributos_w	:= 'cd_cgc_estipulante';
		ds_values_atributos_w	:= ''''||cd_cgc_estipulante_w||'''';
	elsif (ie_tipo_historico_w = '12') then --Alteração de titularidade 
		ds_into_atributos_w	:= 'nr_seq_titular';
		ds_values_atributos_w	:= nr_seq_titular_w;
	elsif (ie_tipo_historico_w = '14') then --Alteração da data de adesão 
		ds_into_atributos_w	:= 'dt_liberacao';
		ds_values_atributos_w	:= 'to_date('''||dt_liberacao_w||''')';
	elsif (ie_tipo_historico_w = '19') then --Alteração da data de rescisão do beneficiário 
		ds_into_atributos_w	:= 'dt_rescisao';
		ds_values_atributos_w	:= 'to_date('''||dt_rescisao_w||''')';
	elsif (ie_tipo_historico_w = '20') then --Alteração do grau de parentesco 
		ds_into_atributos_w	:= 'nr_seq_parentesco';
		ds_values_atributos_w	:= coalesce(cd_sib_w,'null'); -- Se não tiver codigo do SIB preencher com a descrição null 
	elsif (ie_tipo_historico_w = '47') then --Alteração do motivo da rescisão 
		select	max(cd_motivo_cancelamento)
		into STRICT	cd_motivo_cancelamento_w 
		from	pls_motivo_cancelamento 
		where	nr_sequencia	= nr_seq_motivo_cancelamento_w;
		 
		if (cd_motivo_cancelamento_w IS NOT NULL AND cd_motivo_cancelamento_w::text <> '') then 
			ds_into_atributos_w	:= 'cd_motivo_cancelamento';
			ds_values_atributos_w	:= cd_motivo_cancelamento_w;
		end if;
	elsif (ie_tipo_historico_w = '71') then --Inclusão de CPT 
		ds_into_atributos_w	:= 'ie_carencia_temp';
		begin 
		select	count(1) 
		into STRICT	qt_cpt_w 
		from	pls_carencia		a 
		where	a.nr_seq_segurado	= nr_seq_segurado_w 
		and	a.ie_cpt		= 'S'  LIMIT 1;
		exception 
		when others then 
			qt_cpt_w	:= 0;
		end;
		 
		if (qt_cpt_w > 0) then 
			ds_values_atributos_w	:= 1;
		else 
			ds_values_atributos_w	:= 2;
		end if;
	end if;
 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_alteracao_sib_w 
	from	w_pls_alteracao_sib 
	where	nr_seq_segurado	= nr_seq_segurado_w 
	and	nr_seq_lote_sib	= nr_seq_lote_sib_p;
	 
	if (nr_seq_alteracao_sib_w IS NOT NULL AND nr_seq_alteracao_sib_w::text <> '') then 
		ds_sql_w :=		'update w_pls_alteracao_sib ';
		ds_sql_w := ds_sql_w ||	'set	ds_alteracoes	= ds_alteracoes || chr(10) ||''' || ds_historico_w ||''',';
		ds_sql_w := ds_sql_w ||		ds_into_atributos_w ||' = '|| ds_values_atributos_w;
		ds_sql_w := ds_sql_w ||	' where	nr_sequencia	= ' || nr_seq_alteracao_sib_w;
		 
		CALL exec_sql_dinamico('update w_pls_alteracao_sib',ds_sql_w);
	else 
		if (ie_tipo_historico_w <> '12') and (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then 
			ds_into_atributos_w	:= ds_into_atributos_w || ',' || 'nr_seq_titular';
			ds_values_atributos_w	:= ds_values_atributos_w || ',' || to_char(nr_seq_titular_w);
		end if;
		 
		select	nextval('w_pls_alteracao_sib_seq') 
		into STRICT	nr_seq_alteracao_sib_w 
		;
		 
		ds_sql_w := ' insert into w_pls_alteracao_sib (nr_sequencia, nr_seq_lote_sib, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, '|| 
								'nr_seq_segurado, cd_pessoa_fisica, ie_regulamentacao, dt_geracao, ie_tipo_alteracao, ds_alteracoes,';
		ds_sql_w := ds_sql_w || ds_into_atributos_w || ')';
		ds_sql_w := ds_sql_w || ' values	('||nr_seq_alteracao_sib_w||', ' || nr_seq_lote_sib_p || ',sysdate,'''||nm_usuario_p||''',sysdate,'''||nm_usuario_p||''','|| 
					nr_seq_segurado_w||', '''||cd_pessoa_fisica_w||''', '''||ie_regulamentacao_w||''', '|| 
					'to_date('''||trunc(dt_referencia_lote_w)||'''), '''||ie_alteracao_w||''', '''||ds_historico_w||''',';
		ds_sql_w := ds_sql_w || ds_values_atributos_w || ')';
 
		CALL exec_sql_dinamico('INSERT INTO W_PLS_ALTERACAO_SIB',ds_sql_w);
	end if;
	 
	<<final>> 
	nr_seq_segurado_w	:= nr_seq_segurado_w;
	end;
end loop;
close C01;
 
open C02;
loop 
fetch C02 into 
	nr_seq_segurado_w, 
	cd_pessoa_fisica_w, 
	nr_seq_titular_w, 
	ie_regulamentacao_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
	ds_alteracao_w		:= '';
	ds_values_atributos_w	:= '';
	ds_into_atributos_w	:= '';
	ie_inserir_w		:= 'N';
 
	open C03;
	loop 
	fetch C03 into 
		ie_atributo_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		ie_inserir_w	:= 'S';		
		 
		select	max(x.nr_sequencia) 
		into STRICT	nr_seq_segurado_sib_w 
		from	pls_segurado_sib x 
		where	x.nr_seq_segurado	= nr_seq_segurado_w;
		exception 
		when others then 
			nr_seq_segurado_sib_w	:= 0;
		end;
		 
		select	upper(substr(b.nm_pessoa_fisica,1,69)) nm_beficiario, 
			b.dt_nascimento, 
			CASE WHEN b.ie_sexo='M' THEN 1  ELSE CASE WHEN b.ie_sexo='F' THEN 3  ELSE 0 END  END , 
			b.nr_cpf, 
			b.nr_pis_pasep, 
			upper(b.nm_mae_pessoa_fisica), 
			substr(b.nr_cartao_nac_sus,1,15), 
			b.nr_identidade, 
			upper(b.ds_orgao_emissor_ci), 
			b.cd_nacionalidade, 
			upper(b.ds_endereco), 
			to_char(b.nr_endereco), 
			b.ds_complemento, 
			upper(b.ds_bairro), 
			b.cd_municipio_ibge, 
			b.sg_estado, 
			b.cd_cep, 
			b.dt_geracao 
		into STRICT	nm_segurado_w, 
			dt_nascimento_w, 
			ie_sexo_w, 
			nr_cpf_w, 
			nr_pis_pasep_w, 
			nm_mae_segurado_w, 
			cd_cns_w, 
			nr_identidade_w, 
			ds_orgao_emissor_ci_w, 
			cd_nacionalidade_w, 
			ds_logradouro_w, 
			ds_numero_w, 
			ds_complemento_w, 
			ds_bairro_w, 
			ds_municipio_w, 
			uf_w, 
			cep_w, 
			dt_mesano_referencia_w 
		from	pls_segurado_sib b 
		where	nr_sequencia	= nr_seq_segurado_sib_w;
		 
		ds_municipio_w	:= ds_municipio_w || Calcula_Digito('MODULO10',substr(ds_municipio_w,1,10));
		 
		dt_mesano_referencia_ant_w	:= add_months(dt_mesano_referencia_w,-1);
		 
		select	count(1) 
		into STRICT	qt_registros_w 
		from	pls_segurado_sib 
		where	nr_seq_segurado = nr_seq_segurado_w 
		and	dt_geracao	= dt_mesano_referencia_ant_w;
		 
		/* Verificar se existe registro para o mes anterior, caso não existir buscar o ultimo mes gerado*/
 
		if (qt_registros_w = 0) then 
			select	max(dt_geracao) 
			into STRICT	dt_mesano_referencia_ant_w 
			from	pls_segurado_sib 
			where	nr_seq_segurado = nr_seq_segurado_w 
			and	nr_sequencia	<> nr_seq_segurado_sib_w;
		end if;
		 
		select	max(nr_sequencia) 
		into STRICT	nr_seq_seg_sib_ant_w 
		from	pls_segurado_sib 
		where	nr_seq_segurado = nr_seq_segurado_w 
		and	dt_geracao 	= dt_mesano_referencia_ant_w;
		 
		if (coalesce(nr_seq_seg_sib_ant_w,0) > 0) then 
			select	upper(a.nm_pessoa_fisica), 
				a.dt_nascimento, 
				CASE WHEN a.ie_sexo='M' THEN 1  ELSE CASE WHEN a.ie_sexo='F' THEN 3  ELSE 0 END  END , 
				a.nr_cpf, 
				upper(a.nm_mae_pessoa_fisica), 
				upper(a.ds_endereco), 
				a.nr_endereco, 
				upper(a.ds_bairro), 
				a.cd_municipio_ibge, 
				a.sg_estado, 
				a.cd_cep, 
				a.nr_cartao_nac_sus, 
				a.nr_identidade, 
				upper(a.ds_orgao_emissor_ci), 
				a.cd_nacionalidade, 
				a.nr_pis_pasep, 
				a.ds_complemento 
			into STRICT	nm_pessoa_fisica_ant_w, 
				dt_nascimento_ant_w, 
				ie_sexo_ant_w, 
				nr_cpf_ant_w, 
				nm_mae_pessoa_fisica_ant_w, 
				ds_endereco_ant_w, 
				nr_endereco_ant_w, 
				ds_bairro_ant_w, 
				cd_municipio_ibge_ant_w, 
				sg_estado_ant_w, 
				cd_cep_ant_w, 
				nr_cartao_nac_sus_ant_w, 
				nr_identidade_ant_w, 
				ds_orgao_emissor_ci_ant_w, 
				cd_nacionalidade_ant_w, 
				nr_pis_pasep_ant_w, 
				ds_complemento_ant_w 
			from	pls_segurado_sib a 
			where	nr_sequencia	= nr_seq_seg_sib_ant_w;
			 
			cd_municipio_ibge_ant_w	:= cd_municipio_ibge_ant_w || Calcula_Digito('MODULO10',substr(cd_municipio_ibge_ant_w,1,10));
			 
			/* Em algumas conexões, percebi que o sistema mandava a alteração de nomes apenas quando alterado a acentuação, porém no envio do arquivo ele retornava como erro, pois a acentuação não ia no XML e ficava com nenhuma alteração*/
 
			nm_pessoa_fisica_ant_w	:= elimina_acentos(nm_pessoa_fisica_ant_w);
			nm_segurado_w		:= elimina_acentos(nm_segurado_w);
			 
			nm_mae_pessoa_fisica_ant_w	:= elimina_acentos(nm_mae_pessoa_fisica_ant_w);
			nm_mae_segurado_w	:= elimina_acentos(nm_mae_segurado_w);
			 
			ds_endereco_ant_w	:= elimina_acentos(ds_endereco_ant_w);
			ds_logradouro_w		:= elimina_acentos(ds_logradouro_w);
			 
			ds_bairro_ant_w		:= elimina_acentos(ds_bairro_ant_w);
			ds_bairro_w		:= elimina_acentos(ds_bairro_w);
			 
			/*Caso houver alteração no cadastro do beneficiário, continua o tratamento*/
 
			if	((ie_atributo_w = 1) and (coalesce(nm_pessoa_fisica_ant_w,'X') <> coalesce(nm_segurado_w,'X'))) then 
				ie_alteracao_w	:= 1;
				ds_alteracao_w	:= ds_alteracao_w || ' Nome anterior : ' || nm_pessoa_fisica_ant_w || ' - Nome atual: ' || nm_segurado_w || chr(10);
			end if;
			 
			if	(ie_atributo_w = 2 AND dt_nascimento_ant_w <> dt_nascimento_w) then 
				ie_alteracao_w	:= 2;
				ds_alteracao_w	:= ds_alteracao_w || 'Dt nascimento anterior : ' || to_char(dt_nascimento_ant_w,'dd/mm/yyyy') || ' - Dt nascimento atual: ' || to_char(dt_nascimento_w,'dd/mm/yyyy')|| chr(10);
			end if;
			 
			if 	((ie_atributo_w = 3) and (coalesce(ie_sexo_ant_w,0) <> coalesce(ie_sexo_w,0))) then 
				ie_alteracao_w	:= 3;
				ds_alteracao_w	:= ds_alteracao_w || 'Sexo anterior : ' || ie_sexo_ant_w || ' - Sexo atual: ' || ie_sexo_w|| chr(10);
			end if;
			 
			if	((ie_atributo_w = 4) and (coalesce(nr_cartao_nac_sus_ant_w,'X') <> coalesce(cd_cns_w,'X'))) then 
				ie_alteracao_w	:= 11;
				ds_alteracao_w	:= ds_alteracao_w || 'CNS anterior : ' || nr_cartao_nac_sus_ant_w || ' - CNS atual: ' || cd_cns_w|| chr(10);
			end if;
			 
			if	((ie_atributo_w = 7) and (coalesce(nr_pis_pasep_ant_w,'X') <> coalesce(nr_pis_pasep_w,'X'))) then 
				ie_alteracao_w	:= 14;
				ds_alteracao_w	:= ds_alteracao_w || 'PIS/PASEP anterior : ' || nr_pis_pasep_ant_w || ' - PIS/PASEP atual: ' || nr_pis_pasep_w|| chr(10);
			end if;
			 
			if	((ie_atributo_w = 8) and (coalesce(nr_cpf_ant_w,'X') <> coalesce(nr_cpf_w,'X'))) then 
				ie_alteracao_w	:= 15;
				ds_alteracao_w	:= ds_alteracao_w || 'CPF anterior : ' || nr_cpf_ant_w || ' - CPF atual: ' || nr_cpf_w|| chr(10);
			end if;
			 
			if	((ie_atributo_w = 9) and (coalesce(ds_endereco_ant_w,'X') <> coalesce(ds_logradouro_w,'X'))) then 
				ie_alteracao_w	:= 5;
				ds_alteracao_w	:= ds_alteracao_w || 'Endereço anterior : ' || ds_endereco_ant_w || ' - Endereço atual: ' || ds_logradouro_w|| chr(10);
			end if;
			 
			if	((ie_atributo_w = 10) and (coalesce(nr_endereco_ant_w,'X') <> coalesce(ds_numero_w,'X'))) then 
				ie_alteracao_w	:= 6;
				ds_alteracao_w	:= ds_alteracao_w || 'Nr endereco anterior : ' || nr_endereco_ant_w || ' - Nr endereco atual: ' || ds_numero_w|| chr(10);
			end if;
			 
			if	((ie_atributo_w = 11) and (coalesce(ds_bairro_ant_w,'X') <> coalesce(ds_bairro_w,'X'))) then 
				ie_alteracao_w	:= 7;
				ds_alteracao_w	:= ds_alteracao_w || 'Bairro anterior : ' || ds_bairro_ant_w || ' - Bairro atual: ' || ds_bairro_w|| chr(10);
			end if;
			 
			if	((ie_atributo_w = 12) and (coalesce(cd_municipio_ibge_ant_w,'X') <> coalesce(ds_municipio_w,'X'))) then 
				ie_alteracao_w	:= 8;
				ds_alteracao_w	:= ds_alteracao_w || 'Município anterior : ' || cd_municipio_ibge_ant_w || ' - Município atual: ' || ds_municipio_w|| chr(10);
			end if;
			 
			if	((ie_atributo_w = 13) and (coalesce(sg_estado_ant_w,'X') <> coalesce(uf_w,'X'))) then 
				ie_alteracao_w	:= 9;
				ds_alteracao_w	:= ds_alteracao_w || 'UF anterior : ' || sg_estado_ant_w || ' - UF atual: ' || uf_w|| chr(10);
			end if;
			 
			if	((ie_atributo_w = 14) and (coalesce(cd_cep_ant_w,'X') <> coalesce(cep_w,'X'))) then 
				ie_alteracao_w	:= 10;
				ds_alteracao_w	:= ds_alteracao_w || 'CEP anterior : ' || cd_cep_ant_w || ' - CEP atual: ' || cep_w|| chr(10);
			end if;
			 
			if	((ie_atributo_w = 16) and (coalesce(nm_mae_pessoa_fisica_ant_w,'X') <> coalesce(nm_mae_segurado_w,'X'))) then 
				ie_alteracao_w	:= 4;
				ds_alteracao_w	:= ds_alteracao_w || 'Nome mãe anterior : ' || nm_mae_pessoa_fisica_ant_w || ' - Nome mãe atual: ' || nm_mae_segurado_w|| chr(10);
			end if;
 
			if	((ie_atributo_w = 17) and (coalesce(ds_complemento_ant_w,'X') <> coalesce(ds_complemento_w,'X'))) then 
				ie_alteracao_w	:= 21;
				ds_alteracao_w	:= ds_alteracao_w || 'Complemento anterior : ' || ds_complemento_ant_w || ' - Complemento atual: ' || ds_complemento_w|| chr(10);
			end if;
			 
			if (ie_atributo_w = 1) then 
				ds_into_atributos_w := ds_into_atributos_w || ' nm_beneficiario,';
			elsif (ie_atributo_w = 4) then 
				ds_into_atributos_w := ds_into_atributos_w || ' cd_cns,';
			elsif (ie_atributo_w = 9) then 
				ds_into_atributos_w := ds_into_atributos_w || ' ds_logradouro,';
			elsif (ie_atributo_w = 10) then 
				ds_into_atributos_w := ds_into_atributos_w || ' ds_numero,';
			elsif (ie_atributo_w = 13) then 
				ds_into_atributos_w := ds_into_atributos_w || ' sg_uf,';
			elsif (ie_atributo_w = 16) then 
				ds_into_atributos_w := ds_into_atributos_w || ' nm_mae_segurado,';
			else 
				ds_into_atributos_w := ds_into_atributos_w || Obter_Valor_Dominio(8083, ie_atributo_w) || ',';
			end if;
			 
			if (ie_atributo_w = 1) then 
				ds_values_atributos_w := ds_values_atributos_w || '''' || nm_segurado_w || ''',';
			elsif (ie_atributo_w = 2) then 
				ds_values_atributos_w := ds_values_atributos_w || 'to_date('''|| to_char(dt_nascimento_w,'dd/mm/yyyy') || '''),';
			elsif (ie_atributo_w = 3) then 
				ds_values_atributos_w := ds_values_atributos_w || '''' || ie_sexo_w || ''',';
			elsif (ie_atributo_w = 4) then 
				ds_values_atributos_w := ds_values_atributos_w || '''' || cd_cns_w || ''',';
			elsif (ie_atributo_w = 5) then 
				ds_values_atributos_w := ds_values_atributos_w || '''' || ds_orgao_emissor_ci_w || ''',';
			elsif (ie_atributo_w = 6) then 
				ds_values_atributos_w := ds_values_atributos_w || '''' || cd_nacionalidade_w || ''',';
			elsif (ie_atributo_w = 7) then 
				ds_values_atributos_w := ds_values_atributos_w || coalesce(nr_pis_pasep_w,'00000000000') || ',';
			elsif (ie_atributo_w = 8) then 
				ds_values_atributos_w := ds_values_atributos_w || '''' || nr_cpf_w || ''',';
			elsif (ie_atributo_w = 9) then 
				ds_values_atributos_w := ds_values_atributos_w || '''' || ds_logradouro_w || ''',';
			elsif (ie_atributo_w = 10) then 
				ds_values_atributos_w := ds_values_atributos_w || '''' || ds_numero_w || ''',';
			elsif (ie_atributo_w = 11) then 
				ds_values_atributos_w := ds_values_atributos_w || '''' || ds_bairro_w || ''',';
			elsif (ie_atributo_w = 12) then 
				ds_values_atributos_w := ds_values_atributos_w || '''' || ds_municipio_w || ''',';
			elsif (ie_atributo_w = 13) then 
				ds_values_atributos_w := ds_values_atributos_w || '''' || uf_w || ''',';
			elsif (ie_atributo_w = 14) then 
				ds_values_atributos_w := ds_values_atributos_w || '''' || cep_w || ''',';
			elsif (ie_atributo_w = 16) then 
				ds_values_atributos_w := ds_values_atributos_w || '''' || nm_mae_segurado_w || ''',';
			elsif (ie_atributo_w = 17) then 
				ds_values_atributos_w := ds_values_atributos_w || '''' || ds_complemento_w || ''',';
			end if;
		end if;
	end loop;
	close C03;
 
	if (ie_inserir_w = 'S') then 
		select	max(nr_sequencia) 
		into STRICT	nr_seq_alteracao_sib_w 
		from	w_pls_alteracao_sib 
		where	nr_seq_segurado	= nr_seq_segurado_w 
		and	nr_seq_lote_sib	= nr_seq_lote_sib_p;
		 
		if (nr_seq_alteracao_sib_w IS NOT NULL AND nr_seq_alteracao_sib_w::text <> '') then --Se já tiver gerado o beneficiário no C01, precisa atualizar as informações alteradas no cadastro de PF, que são carregadas no C02 
			ds_sql_w :=		'update w_pls_alteracao_sib ';
			ds_sql_w := ds_sql_w ||	'set	ds_alteracoes	= ds_alteracoes || chr(10) ||''' || ds_alteracao_w ||''',';
			 
			while(position(',' in ds_into_atributos_w) > 0) loop 
				ds_atributo_w		:= substr(ds_into_atributos_w,1,position(',' in ds_into_atributos_w) - 1);
				ds_into_atributos_w	:= substr(ds_into_atributos_w,position(',' in ds_into_atributos_w) + 1,255);
				 
				ds_valor_w		:= substr(ds_values_atributos_w,1,position(',' in ds_values_atributos_w) - 1);
				ds_values_atributos_w	:= substr(ds_values_atributos_w,position(',' in ds_values_atributos_w) + 1,255);
				 
				ds_sql_w := ds_sql_w ||	ds_atributo_w ||' = '|| ds_valor_w;
				 
				if (ds_into_atributos_w IS NOT NULL AND ds_into_atributos_w::text <> '') then 
					ds_sql_w	:= ds_sql_w || ',';
				end if;
			end loop;
			 
			ds_sql_w := ds_sql_w ||	' where	nr_sequencia	= ' || nr_seq_alteracao_sib_w;
			 
			CALL exec_sql_dinamico('update w_pls_alteracao_sib',ds_sql_w);
		else 
			select	nextval('w_pls_alteracao_sib_seq') 
			into STRICT	nr_seq_alteracao_sib_w 
			;
			 
			ds_sql_w := ' insert into w_pls_alteracao_sib (nr_sequencia, nr_seq_lote_sib, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, '|| 
								'nr_seq_segurado, cd_pessoa_fisica, nr_seq_titular, ie_regulamentacao, '|| 
								'dt_geracao, ie_tipo_alteracao, ds_alteracoes,';
			ds_sql_w := ds_sql_w || substr(ds_into_atributos_w, 1, length(ds_into_atributos_w) - 1) || ')';
			ds_sql_w := ds_sql_w || ' values	('||nr_seq_alteracao_sib_w||', ' || nr_seq_lote_sib_p || ',sysdate,'''||nm_usuario_p||''',sysdate,'''||nm_usuario_p||''','|| 
						nr_seq_segurado_w||', '''||cd_pessoa_fisica_w||''','||coalesce(to_char(nr_seq_titular_w),'null')||', '''||ie_regulamentacao_w||''', '|| 
						'to_date('''||to_char(dt_mesano_referencia_w,'dd/mm/yyyy')||'''), '''||ie_alteracao_w||''', '''||ds_alteracao_w||''',';
			ds_sql_w := ds_sql_w || substr(ds_values_atributos_w, 1, length(ds_values_atributos_w) - 1) || ')';	
 
			CALL exec_sql_dinamico('INSERT INTO W_PLS_ALTERACAO_SIB',ds_sql_w);
		end if;
	end if;
	end;
end loop;
close C02;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_w_alt_sib_flex ( nr_seq_lote_sib_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

