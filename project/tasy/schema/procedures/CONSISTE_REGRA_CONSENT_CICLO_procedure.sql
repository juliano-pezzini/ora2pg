-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_regra_consent_ciclo ( cd_pessoa_fisica_p text, nm_usuario_p text, nr_seq_paciente_p bigint, ie_tipo_regra_p text DEFAULT 'C', nr_atendimento_p text DEFAULT NULL, nr_seq_atendimento_p bigint DEFAULT 0) AS $body$
DECLARE


    qt_reg_w                 bigint;
    nr_seq_texto_w           bigint;
    ds_textos_necessarios_w  varchar(2000);
    qt_dias_w                bigint;
    cd_protocolo_w           bigint;
    nr_seq_medicacao_w       bigint;
    nr_ciclo_w               integer;
    ds_dia_ciclo_w           varchar(10);
    cd_estabelecimento_w     bigint;
    sql_w                    varchar(200);
    ds_txt_neces_w           varchar(2000);
    c01 CURSOR FOR
    SELECT
        nr_seq_texto,
        qt_dias_consentimento
    FROM
        regra_concentimento_ciclo
    WHERE
            coalesce(ie_tipo_regra, 'C') = coalesce(ie_tipo_regra_p, 'C')
        AND coalesce(cd_protocolo, coalesce(cd_protocolo_w, 0)) = coalesce(cd_protocolo_w, 0)
        AND coalesce(nr_seq_medicacao, coalesce(nr_seq_medicacao_w, 0)) = coalesce(nr_seq_medicacao_w, 0)
        AND coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_w, 0)) = coalesce(cd_estabelecimento_w, 0);


BEGIN
    cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
    SELECT
        COUNT(*)
    INTO STRICT qt_reg_w
    FROM
        regra_concentimento_ciclo
    WHERE
        coalesce(ie_tipo_regra, 'C') = coalesce(ie_tipo_regra_p, 'C');

    IF ( qt_reg_w > 0 ) THEN
        SELECT
            MAX(cd_protocolo),
            MAX(nr_seq_medicacao)
        INTO STRICT
            cd_protocolo_w,
            nr_seq_medicacao_w
        FROM
            paciente_setor
        WHERE
            nr_seq_paciente = nr_seq_paciente_p;

        OPEN c01;
        LOOP
            FETCH c01 INTO
                nr_seq_texto_w,
                qt_dias_w;
            EXIT WHEN NOT FOUND; /* apply on c01 */
            BEGIN
                IF ( nr_seq_atendimento_p > 0 ) THEN
                    BEGIN
                        SELECT
                            MAX(ds_dia_ciclo),
                            MAX(nr_ciclo)
                        INTO STRICT
                            ds_dia_ciclo_w,
                            nr_ciclo_w
                        FROM
                            paciente_atendimento a
                        WHERE
                            a.nr_seq_atendimento = nr_seq_atendimento_p;

                        IF (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') THEN
                            SELECT
                                COUNT(*)
                            INTO STRICT qt_reg_w
                            FROM
                                pep_pac_ci
                            WHERE
                                    nr_atendimento = nr_atendimento_p
                                AND nr_seq_texto = nr_seq_texto_w
                                AND (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
                                AND coalesce(dt_inativacao::text, '') = ''
                                AND coalesce(cd_protocolo, coalesce(cd_protocolo_w, 0)) = coalesce(cd_protocolo_w, 0)
                                AND coalesce(nr_seq_medicacao, coalesce(nr_seq_medicacao_w, 0)) = coalesce(nr_seq_medicacao_w, 0)
                                AND ( ( dt_atualizacao_nrec BETWEEN( clock_timestamp() - qt_dias_w ) AND clock_timestamp() )
                                      OR ( coalesce(qt_dias_w::text, '') = '' ) )
                                AND coalesce(nr_ciclo, coalesce(nr_ciclo_w, 0)) = coalesce(nr_ciclo_w, 0)
                                AND coalesce(ds_dia_ciclo, coalesce(ds_dia_ciclo_w, 'X')) = coalesce(ds_dia_ciclo_w, 'X');

                        ELSE
                            SELECT
                                COUNT(*)
                            INTO STRICT qt_reg_w
                            FROM
                                pep_pac_ci
                            WHERE
                                    cd_pessoa_fisica = cd_pessoa_fisica_p
                                AND nr_seq_texto = nr_seq_texto_w
                                AND (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
                                AND coalesce(dt_inativacao::text, '') = ''
                                AND coalesce(cd_protocolo, coalesce(cd_protocolo_w, 0)) = coalesce(cd_protocolo_w, 0)
                                AND coalesce(nr_seq_medicacao, coalesce(nr_seq_medicacao_w, 0)) = coalesce(nr_seq_medicacao_w, 0)
                                AND ( ( dt_atualizacao_nrec BETWEEN( clock_timestamp() - qt_dias_w ) AND clock_timestamp() )
                                      OR ( coalesce(qt_dias_w::text, '') = '' ) )
                                AND coalesce(nr_ciclo, coalesce(nr_ciclo_w, 0)) = coalesce(nr_ciclo_w, 0)
                                AND coalesce(ds_dia_ciclo, coalesce(ds_dia_ciclo_w, 'X')) = coalesce(ds_dia_ciclo_w, 'X');

                        END IF;

                    END;
                ELSE
                    BEGIN
                        IF (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') THEN
                            SELECT
                                COUNT(*)
                            INTO STRICT qt_reg_w
                            FROM
                                pep_pac_ci
                            WHERE
                                    nr_atendimento = nr_atendimento_p
                                AND nr_seq_texto = nr_seq_texto_w
                                AND (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
                                AND coalesce(dt_inativacao::text, '') = ''
                                AND coalesce(cd_protocolo, coalesce(cd_protocolo_w, 0)) = coalesce(cd_protocolo_w, 0)
                                AND coalesce(nr_seq_medicacao, coalesce(nr_seq_medicacao_w, 0)) = coalesce(nr_seq_medicacao_w, 0)
                                AND ( ( dt_atualizacao_nrec BETWEEN( clock_timestamp() - qt_dias_w ) AND clock_timestamp() )
                                      OR ( coalesce(qt_dias_w::text, '') = '' ) );

                        ELSE
                            SELECT
                                COUNT(*)
                            INTO STRICT qt_reg_w
                            FROM
                                pep_pac_ci
                            WHERE
                                    cd_pessoa_fisica = cd_pessoa_fisica_p
                                AND nr_seq_texto = nr_seq_texto_w
                                AND (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
                                AND coalesce(dt_inativacao::text, '') = ''
                                AND coalesce(cd_protocolo, coalesce(cd_protocolo_w, 0)) = coalesce(cd_protocolo_w, 0)
                                AND coalesce(nr_seq_medicacao, coalesce(nr_seq_medicacao_w, 0)) = coalesce(nr_seq_medicacao_w, 0)
                                AND ( ( dt_atualizacao_nrec BETWEEN( clock_timestamp() - qt_dias_w ) AND clock_timestamp() )
                                      OR ( coalesce(qt_dias_w::text, '') = '' ) );

                        END IF;

                    END;
                END IF;

                IF ( qt_reg_w = 0 ) THEN
                    ds_textos_necessarios_w := ds_textos_necessarios_w
                                               || chr(13)
                                               || chr(10)
                                               || substr(obter_descricao_padrao('TEXTO_PADRAO', 'DS_TITULO', nr_seq_texto_w), 1, 120);

                END IF;

            END;

        END LOOP;

        CLOSE c01;
--INICIO MD  
        BEGIN
            sql_w := 'CALL OBTER_MSG_CONSENT_CICLO_MD(:1, :2)INTO :ds_txt_neces_w';
            EXECUTE sql_w
                USING IN ds_textos_necessarios_w, IN ie_tipo_regra_p, OUT ds_txt_neces_w;
        EXCEPTION
            WHEN OTHERS THEN
                ds_txt_neces_w := NULL;
        END;

        IF (ds_txt_neces_w IS NOT NULL AND ds_txt_neces_w::text <> '') THEN
            CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_txt_neces_w);
        END IF;
    END IF;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_regra_consent_ciclo ( cd_pessoa_fisica_p text, nm_usuario_p text, nr_seq_paciente_p bigint, ie_tipo_regra_p text DEFAULT 'C', nr_atendimento_p text DEFAULT NULL, nr_seq_atendimento_p bigint DEFAULT 0) FROM PUBLIC;

