-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_benef_flex_sib ( nr_seq_devolucao_p bigint, nr_seq_retorno_p bigint, nr_seq_segurado_p bigint, ie_opcao_p text, ie_tipo_registro_p text, lista_atributo_p text, nm_usuario_p text) AS $body$
DECLARE

			 
ds_sql_w		varchar(2000);
cursor_w		sql_pck.t_cursor;
qt_total		bigint;
nr_seq_atributo_w	pls_util_cta_pck.t_number_table;
nr_seq_flex_sib_w	pls_benef_flex_sib_atrib.nr_seq_flex_sib%type;
valor_bind_w		sql_pck.t_dado_bind;


BEGIN 
if (coalesce(nr_seq_devolucao_p,0) > 0) then 
	select 	max(nr_sequencia) 
	into STRICT	nr_seq_flex_sib_w 
	from 	pls_benef_flex_sib 
	where 	nr_seq_devolucao = nr_seq_devolucao_p;
elsif (coalesce(nr_seq_retorno_p,0) > 0) then 
	select 	max(nr_sequencia) 
	into STRICT	nr_seq_flex_sib_w 
	from 	pls_benef_flex_sib 
	where 	nr_seq_retorno = nr_seq_retorno_p;
elsif (coalesce(nr_seq_segurado_p,0) > 0) then 
	select 	max(nr_sequencia) 
	into STRICT	nr_seq_flex_sib_w 
	from 	pls_benef_flex_sib 
	where 	nr_seq_segurado = nr_seq_segurado_p;
end if;
 
 
if (coalesce(nr_seq_flex_sib_w,0) = 0) then 
	select	nextval('pls_benef_flex_sib_seq') 
	into STRICT	nr_seq_flex_sib_w 
	;
 
	insert	into pls_benef_flex_sib( 
				nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_seq_devolucao, 
				nr_seq_retorno, 
				nr_seq_segurado, 
				ie_opcao, 
				ie_atributo_envio, 
				ie_tipo_registro) 
		values (nr_seq_flex_sib_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_devolucao_p, 
			nr_seq_retorno_p, 
			nr_seq_segurado_p,			 
			ie_opcao_p, 
			0, 
			ie_tipo_registro_p);
end if;
 
delete 
from	pls_benef_flex_sib_atrib 
where 	nr_seq_flex_sib = nr_seq_flex_sib_w;
			 
if (lista_atributo_p IS NOT NULL AND lista_atributo_p::text <> '') then 
	ds_sql_w	:= 	'	select	vl_dominio ' || pls_tipos_ocor_pck.enter_w ||	 
				' 	from	valor_dominio ' || pls_tipos_ocor_pck.enter_w || 
				'	where 	cd_dominio = 8064 ' || pls_tipos_ocor_pck.enter_w || 
				'	and	vl_dominio in ('||lista_atributo_p||')';
	-- executa o comando e devolve o cursor 
	valor_bind_w := sql_pck.executa_sql_cursor(	ds_sql_w, valor_bind_w);
	qt_total := 0;
	loop 
		fetch cursor_w bulk collect into nr_seq_atributo_w limit pls_util_pck.qt_registro_transacao_w;
		exit when nr_seq_atributo_w.count = 0;
 
		qt_total := qt_total + nr_seq_atributo_w.count;
		forall i in nr_seq_atributo_w.first .. nr_seq_atributo_w.last 
			insert 	into pls_benef_flex_sib_atrib( 
							nr_sequencia, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							nr_seq_flex_sib, 
							ie_atributo_envio) 
				values (nextval('pls_benef_flex_sib_atrib_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_flex_sib_w, 
					nr_seq_atributo_w(i));
			commit;
		end loop;
	close cursor_w;	
end if;
	 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_benef_flex_sib ( nr_seq_devolucao_p bigint, nr_seq_retorno_p bigint, nr_seq_segurado_p bigint, ie_opcao_p text, ie_tipo_registro_p text, lista_atributo_p text, nm_usuario_p text) FROM PUBLIC;

