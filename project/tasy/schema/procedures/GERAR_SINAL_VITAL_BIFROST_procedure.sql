-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE atributoSinaisVitais AS (nm_atributo_sv     	varchar(100),
										 vl_atributo_sv     	varchar(15));
CREATE TYPE atributoMonitorizacaoResp AS (nm_atributo_sv     	varchar(100),
											  vl_atributo_sv     	varchar(15));
CREATE TYPE atributoMonitorizacaoHemo AS (nm_atributo_sv     	varchar(100),
										      vl_atributo_sv     	varchar(15));
CREATE TYPE deHL7SVParaSDC AS (de_nm_codigo			varchar(255),
                               para_nm_atributo_sv     	varchar(100));


CREATE OR REPLACE PROCEDURE gerar_sinal_vital_bifrost ( NR_ATENDIMENTO_P text, USERNAME_P text, DT_EVENTO_P text, QT_FREQ_CARDIACA_P text DEFAULT NULL, QT_SATURACAO_O2_P text DEFAULT NULL, QT_PAM_P text DEFAULT NULL, QT_PRESSAO_CUFF_P text DEFAULT NULL, QT_PVC_P text DEFAULT NULL, QT_PRESSAO_INTRA_CRANIO_P text DEFAULT NULL, QT_PPC_P text DEFAULT NULL, QT_MAEC_P text DEFAULT NULL, QT_VC_PROG_P text DEFAULT NULL, QT_CO2_P text DEFAULT NULL, QT_PA_SIST_P text DEFAULT NULL, QT_PA_DIAST_P text DEFAULT NULL, QT_PAM2_P text DEFAULT NULL, QT_PPLATO_P text DEFAULT NULL, QT_FIO2_P text DEFAULT NULL, QT_PEEP_P text DEFAULT NULL, QT_HALOG_EXP_P text DEFAULT NULL, QT_OXIG_INS_P text DEFAULT NULL, QT_OXIG_EXP_P text DEFAULT NULL, QT_OXIDO_NITROSO_EXP_P text DEFAULT NULL, QT_OXIDO_NITROSO_INSP_P text DEFAULT NULL, QT_SAT_VENOSA_O2_P text DEFAULT NULL, QT_CAM_P text DEFAULT NULL, QT_HALOG_INS_P text DEFAULT NULL, QT_FLUXO_OXIGENIO_P text DEFAULT NULL, QT_TI_P text DEFAULT NULL, QT_FREQ_RESP_P text DEFAULT NULL, QT_CDYN_P text DEFAULT NULL, QT_ICO2_P text DEFAULT NULL, QT_PRESSAO_INTRA_ABD_P text DEFAULT NULL, QT_PAE_P text DEFAULT NULL, QT_SEGMENTO_ST_P text DEFAULT NULL, QT_TOF_BLOQ_NEURO_MUSC_P text DEFAULT NULL, QT_SPO2R_P text DEFAULT NULL, QT_PA_SISTOLICA_P text DEFAULT NULL, QT_PA_DIASTOLICA_P text DEFAULT NULL, QT_FREQ_RESP_SINAL_P text DEFAULT NULL, QT_TEMP_P text DEFAULT NULL, IE_PA_MEDIA_AP_INFORMADA_P text DEFAULT NULL, QT_PVC_HEMOD_P text DEFAULT NULL, QT_DEBITO_CARD_P text DEFAULT NULL, QT_PA_MEDIA_AP_P text DEFAULT NULL, TX_INDICE_CARD_P text DEFAULT NULL, QT_PVD_SIST_P text DEFAULT NULL, QT_PA_SIST_AP_P text DEFAULT NULL, QT_PA_DIAST_AP_P text DEFAULT NULL, QT_SATUR_VEN_MISTA_OXIGENIO_P text DEFAULT NULL, QT_DELTA_PP_P text DEFAULT NULL, QT_VPS_P text DEFAULT NULL, QT_VVS_P text DEFAULT NULL, IE_TIPO_P text DEFAULT 'MR', IE_INTEGRACAO_EXTRA_P text DEFAULT 'N', CD_SETOR_ATENDIMENTO_P text default null, CD_UNIDADE_BASICA_P text default null, CD_UNIDADE_COMPL_P text default null, QT_FREQ_CARD_MONIT_P text DEFAULT NULL, IE_DERIVACAO_SEG_ST_P text DEFAULT NULL, IE_APARELHO_PA_P text DEFAULT NULL, IE_SITIO_P text DEFAULT NULL, QT_O2_SUPLEMENTAR_P text DEFAULT NULL, IE_RITMO_ECG_P text DEFAULT NULL, TX_RV_SISTEMICA_P text DEFAULT NULL, QT_RV_SISTEMICA_P text DEFAULT NULL, QT_VOLUME_SIST_P text DEFAULT NULL, QT_CONT_ART_VEN_OXIG_P text DEFAULT NULL, QT_FREQ_VENT_P text DEFAULT NULL, QT_AUTO_PEEP_P text DEFAULT NULL, QT_PIP_P text DEFAULT NULL, QT_PVA_P text DEFAULT NULL, QT_VCI_P text DEFAULT NULL, QT_RSR_P text DEFAULT NULL, QT_TE_P text DEFAULT NULL, QT_VMIN_P text DEFAULT NULL, QT_CST_P text DEFAULT NULL, QT_PS_P text DEFAULT NULL, QT_SENSIB_FLUXO_P text DEFAULT NULL, QT_FLUXO_INSP_P text DEFAULT NULL) AS $body$
DECLARE


  NR_SEQ_SINAL_VITAL_W      	bigint := 0;
  NR_SEQ_MONIT_RESP_W       	bigint := 0;
  NR_SEQ_MONIT_HEMO_W       	bigint := 0;
  NR_ATENDIMENTO_W          	varchar(20);
  DT_SINAL_VITAL_W          	timestamp;
  NM_USUARIO_W              	varchar(50);
  DS_OBSERVACAO_W           	varchar(100);
  QT_FREQ_CARDIACA_W        	varchar(15);
  QT_SPO2R_W                	varchar(15);
  QT_PAM_W                  	varchar(15);
  QT_PVC_W                  	varchar(15);
  QT_PRESSAO_CUFF_W				varchar(15);
  QT_PRESSAO_INTRA_CRANIO_W 	varchar(15);
  QT_PPC_W                  	varchar(15);
  QT_MAEC_W                 	varchar(15);
  QT_VC_PROG_W              	varchar(15);
  QT_CO2_W                  	varchar(15);
  QT_PA_SIST_W              	varchar(15);
  QT_PA_DIAST_W             	varchar(15);
  QT_PAM2_W                		varchar(15);
  QT_PPLATO_W					varchar(15);
  QT_FIO2_W						varchar(15);
  QT_PEEP_W						varchar(15);
  QT_SATURACAO_O2_W				varchar(15);
  QT_HALOG_EXP_W				varchar(15);
  QT_OXIG_INS_W					varchar(15);
  QT_OXIG_EXP_W					varchar(15);
  QT_OXIDO_NITROSO_EXP_W		varchar(15);
  QT_OXIDO_NITROSO_INSP_W		varchar(15);
  QT_SAT_VENOSA_O2_W			varchar(15);
  QT_CAM_W						varchar(15);
  QT_HALOG_INS_W				varchar(15);
  QT_FLUXO_OXIGENIO_W			varchar(15);
  QT_TI_W						varchar(15);
  QT_FREQ_RESP_W				varchar(15);
  QT_CDYN_W						varchar(15);
  QT_ICO2_W						varchar(15);
  QT_PRESSAO_INTRA_ABD_W		varchar(15);
  QT_PAE_W						varchar(15);
  QT_SEGMENTO_ST_W				varchar(15);
  QT_TOF_BLOQ_NEURO_MUSC_W  	varchar(15);
  QT_FREQ_CARD_MONIT_W			varchar(15);
  IE_DERIVACAO_SEG_ST_W			varchar(15);
  QT_DERIV_VENTRIC_EXTER_W		varchar(15);
  QT_PRESSAO_INTRA_ABD_H2O_W	varchar(15);
  QT_PA_SISTOLICA_W				varchar(15);
  QT_PA_DIASTOLICA_W			varchar(15);
  QT_TEMP_W						varchar(15);
  QT_PA_DIASTOLICA_CMGH_W		varchar(15);
  QT_PAM_CMHG_W					varchar(15);
  IE_PA_MEDIA_AP_INFORMADA_W	varchar(15);
  QT_DEBITO_CARD_W				varchar(15);
  QT_PA_MEDIA_AP_W				varchar(15);
  TX_INDICE_CARD_W				varchar(15);
  QT_PVD_SIST_W					varchar(15);
  QT_FC_W						varchar(15);
  QT_PA_SIST_AP_W				varchar(15);
  QT_PA_DIAST_AP_W				varchar(15);
  QT_SATUR_VEN_MISTA_OXIGENIO_W	varchar(15);
  QT_DELTA_PP_W					varchar(15);
  QT_VPS_W						varchar(15);
  QT_VVS_W						varchar(15);
  QT_PVC_HEMOD_W				varchar(15);
  QT_FREQ_RESP_SINAL_W			varchar(15);
  IE_APARELHO_PA_W 				varchar(15);			
  IE_SITIO_W					varchar(15);						
  QT_O2_SUPLEMENTAR_W			varchar(15);
  IE_RITMO_ECG_W 				varchar(15);	
  TX_RV_SISTEMICA_W				varchar(15);
  QT_RV_SISTEMICA_W				varchar(15);				
  QT_VOLUME_SIST_W				varchar(15);				
  QT_CONT_ART_VEN_OXIG_W		varchar(15);
  QT_FREQ_VENT_W				varchar(15);		
  QT_AUTO_PEEP_W				varchar(15);	 						
  QT_PIP_W						varchar(15);						
  QT_PVA_W						varchar(15);						
  QT_VCI_W						varchar(15);						
  QT_RSR_W						varchar(15);						
  QT_TE_W						varchar(15);						
  QT_VMIN_W						varchar(15);						
  QT_CST_W						varchar(15);						
  QT_PS_W						varchar(15);						
  QT_SENSIB_FLUXO_W				varchar(15);
  QT_FLUXO_INSP_W				varchar(15);
  IE_SITUACAO_W             	varchar(5) := 'A';
  CD_PESSOA_FISICA_W			varchar(10);
  NLS_NUMERIC_CHARACTERS_W		varchar(255);

	ie_integracao_extra_w       varchar(1);
	qt_setor_integrado_w        bigint;
	ie_nome_setor_philips_w	    varchar(3) := 'N';
	ie_gravar_suporte_decisao_w varchar(1) := 'N';
	ie_tem_suporte_decisao_w    char(1) := 'N';
	qt_minutos_w                bigint;
	qt_min_philips_w            bigint;
	cd_estabelecimento_w        bigint;
	nr_cirurgia_w               bigint;
	nr_seq_pepo_w               bigint;
	cd_setor_atendimento_w	    integer;
	nr_cirurgia_ww		        bigint;
	ie_rpa_w                    varchar(1);
	qt_min_periodico_w          bigint;
	qt_min_aperiodico_w         bigint;
	ie_tem_sv_periodo_w         char(1);
	ie_consiste_aperiodico_w    char(1) := 'N';
	qt_idade_w	                bigint;
	cd_setor_regra_w	        integer;
	ie_tem_regra_shift_F11_w    char(1) := 'N';
	qt_idade_dias_w		        integer;
	qt_peso_gramas_w		    double precision;
	nr_regras_atendidas_w       varchar(2000);
	qt_percentual_tolerancia_w  bigint;
	ie_horario_aceito_w         char(1) := 'S';
	ie_controlar_data_apap_w    char(1);
	ie_tipo_horario_w           char(1);
	ie_horario_par_w            char(1) := 'P';
	ie_horario_impar_w          char(1) := 'I';
	ie_horario_ambos_w          char(1) := 'A';
	ie_horario_real_w           char(1) := 'R';
	ie_horario_apap_w           char(1) := 'A';
	minuto_sv_w                 bigint;
	hora_sv_w                   bigint;	
	pendencia_sinal_vital_w     constant integer := 3;
	indice                      integer;
	qt_gerado_mentor_w          varchar(1);
	sql_errm_w                  varchar(4000);
	vl_minimo_w                 bigint;
	vl_maximo_w                 bigint;
	nm_sv_atributo_w            varchar(30);
	nr_seq_regra_vital_w        bigint	:= 0;
	in_nm_codigo_w			    varchar(255);
	i                           integer;
	ds_sep_bv_w                 varchar(30)	:= obter_separador_bv;
	
	ds_param_integ_hl7_w        varchar(4000);	
	ie_exige_aprovacao_w        varchar(2);
	ie_retorno_valida_sv_w      varchar(10)   := '';
	ds_retorno_valida_sv_w      varchar(2000) := '';
	ExigeAprovacaoNao           varchar(2) := 'N';
	ExigeAprovacaoSim           varchar(2) := 'S';
	ExigeAprovacaoForaFaixa     varchar(2) := 'C';
	ie_tem_regra_minuto_sv_w    varchar(1);
	ie_integrar_regra_min_w     char(1) := 'N';
	seq_min_philips_w       	bigint	:= null;
	ds_atributos_regra_min_w    varchar(4000);
	ie_ignorar_item_sv_w        char(1) := 'N';
	ie_sinal_vital_w			varchar(1):= 'N';
	ie_monitorizacao_resp_w		varchar(1):= 'N';
	ie_monitorizacao_hemo_w		varchar(1):= 'N';
  ie_periodico_aceito_w   varchar(2) := 'S';
  ie_tipo_periodico_w  SV_INTEGRACAO_PHILIPS.IE_PERIODICO_APERIODICO%type;							
	type setAtributoSinaisVitais is table of atributoSinaisVitais index by integer;	
	atributoSinaisVitais_w			setAtributoSinaisVitais;							
	type setAtributoMonitorizacaoResp is table of atributoMonitorizacaoResp index by integer;	
	atributoMonitorizacaoResp_w			setAtributoMonitorizacaoResp;							
	type setAtributoMonitorizacaoHemo is table of atributoMonitorizacaoHemo index by integer;	
	atributoMonitorizacaoHemo_w			setAtributoMonitorizacaoHemo;							
	type setDeHL7SVParaSDC is table of deHL7SVParaSDC index by integer;	
	deParaHL7SV_SDC_w			setDeHL7SVParaSDC;	
	
	-- Cursor de suporte a decisao clinica
	C01 CURSOR FOR
    SELECT  c.nm_atributo,
            a.vl_minimo, 
            a.vl_maximo,
            a.nr_seq_sinal_vital
    from    gqa_pendencia_regra a,
            gqa_pendencia       b,
            sinal_vital         c
    where   b.nr_sequencia          = a.nr_seq_pendencia
    and     a.nr_seq_sinal_vital    = c.nr_sequencia
    and     (c.nm_atributo IS NOT NULL AND c.nm_atributo::text <> '')
    and     b.ie_tipo_pendencia     = pendencia_sinal_vital_w
    and     b.ie_situacao           = 'A'
    and     a.ie_situacao           = 'A'
    and     obter_se_gqa_regra_liberada(a.nr_sequencia) = 'S'
    and     qt_idade_w between coalesce(a.qt_idade_min, 0) and coalesce(a.qt_idade_max,   999)
    and     qt_idade_dias_w between coalesce(a.qt_dias_min,0) and coalesce(a.qt_dias_max,99999)
    and     qt_peso_gramas_w between coalesce(a.qt_peso_gramas_min,0) and coalesce(a.qt_peso_gramas_max,999999999)
    and     coalesce(a.cd_setor_atendimento, coalesce(cd_setor_atendimento_w, 0)) = coalesce(cd_setor_atendimento_w, 0)
    and     Obter_se_pendencia_mentor(nr_atendimento_w, a.nr_seq_sinal_vital,nm_usuario_w,cd_estabelecimento_w) <> 'S'
    and     exists (
                      SELECT z.nr_sequencia
                        from gqa_acao z
                       where z.nr_seq_pend_regra = a.nr_sequencia
                         and z.ie_situacao = 'A'
                         and coalesce(z.ie_executar, 'N') = 'N'
                   )
    and     nr_seq_sinal_vital in (select x.nr_sequencia 
                                         from sinal_vital x 
                                        where nm_atributo not in (
                                              'QT_ESCALA_DOR',
                                              'QT_GLICEMIA_CAPILAR',
                                              'QT_BCF',
                                              'QT_PESO',
                                              'QT_ALTURA_CM',
                                              'QT_IMC',
                                              'QT_SUPERF_CORPORIA',
                                              'QT_PVC_H2O',
                                              'QT_PRESSAO_INTRA_ABD',
                                              'QT_TEMP_INCUBADORA',
                                              'QT_PERIMETRO_CEFALICO',
                                              'QT_DOR'
                                            )
                                      );


  PROCEDURE INS_ATEND_SINAL_VITAL IS
;
BEGIN
    IF NR_SEQ_SINAL_VITAL_W = 0 THEN

      SELECT nextval('atendimento_sinal_vital_seq')
      INTO STRICT NR_SEQ_SINAL_VITAL_W
;
	
	 INSERT INTO ATENDIMENTO_SINAL_VITAL(
          NR_SEQUENCIA,
          NR_ATENDIMENTO,
          DT_SINAL_VITAL,
          NM_USUARIO,
          QT_FREQ_CARDIACA,
          QT_SPO2R,
          QT_PAM,
          QT_PVC,
          QT_PRESSAO_INTRA_CRANIO,
          QT_PPC,
          QT_MAEC,
		  QT_PRESSAO_INTRA_ABD,
		  QT_SATURACAO_O2,
		  QT_PAE,
		  QT_SEGMENTO_ST,
		  QT_TOF_BLOQ_NEURO_MUSC,
		  QT_FREQ_CARD_MONIT,
		  IE_DERIVACAO_SEG_ST,
		  QT_DERIV_VENTRIC_EXTER,
		  QT_PRESSAO_INTRA_ABD_H2O,
		  QT_PA_SISTOLICA,
		  QT_PA_DIASTOLICA,
		  QT_FREQ_RESP,
		  QT_TEMP,
		  QT_PA_DIASTOLICA_CMGH,
		  QT_PAM_CMHG,
		  IE_APARELHO_PA,
		  IE_SITIO,
		  QT_O2_SUPLEMENTAR,
		  IE_RITMO_ECG,
          DS_OBSERVACAO,
          DT_ATUALIZACAO,
          IE_SITUACAO,
		  DT_LIBERACAO,
		  NM_USUARIO_NREC,
		  DT_ATUALIZACAO_NREC,
		  CD_PACIENTE,
		  NR_CIRURGIA,
		  NR_SEQ_PEPO,
		  IE_INTEGRACAO
        )
        VALUES (
          NR_SEQ_SINAL_VITAL_W,
          NR_ATENDIMENTO_W,
          DT_SINAL_VITAL_W,
          NM_USUARIO_W,
          qt_freq_cardiaca_w,
          QT_SPO2R_w,
          QT_PAM_w,
          QT_PVC_w,
          QT_PRESSAO_INTRA_CRANIO_w,
          QT_PPC_w,
          QT_MAEC_w,
		  QT_PRESSAO_INTRA_ABD_w,
		  QT_SATURACAO_O2_w,
		  QT_PAE_w,
		  QT_SEGMENTO_ST_w,
		  QT_TOF_BLOQ_NEURO_MUSC_w,
		  QT_FREQ_CARDIACA_w,
		  QT_SEGMENTO_ST_w,
		  QT_PRESSAO_INTRA_CRANIO_w,
		  QT_PRESSAO_INTRA_ABD_w,
		  coalesce(QT_PA_SIST_w,QT_PA_SISTOLICA_w),
		  coalesce(QT_PA_DIAST_w,QT_PA_DIASTOLICA_w),
		  QT_FREQ_RESP_SINAL_W,
		  QT_TEMP_w,
		  QT_PA_DIASTOLICA_w,
		  case when QT_PAM_w < 100 then QT_PAM_w else null end,
		  IE_APARELHO_PA_W,
		  IE_SITIO_W,
		  QT_O2_SUPLEMENTAR_W,
		  IE_RITMO_ECG_W,
          DS_OBSERVACAO_W,
          clock_timestamp(),
          IE_SITUACAO_W,
		  clock_timestamp(),
		  NM_USUARIO_W,
		  clock_timestamp(),
		  CD_PESSOA_FISICA_W,
		  NR_CIRURGIA_w,
		  NR_SEQ_PEPO_w,
		  'S'
        );
      COMMIT;
    END IF;
  END;

  PROCEDURE INS_ATEND_MONIT_RESP IS
  BEGIN
    IF (NR_SEQ_MONIT_RESP_W = 0) THEN

      SELECT nextval('atendimento_monit_resp_seq') INTO STRICT NR_SEQ_MONIT_RESP_W;	
	  
      INSERT INTO ATENDIMENTO_MONIT_RESP(
          NR_SEQUENCIA,
          NR_ATENDIMENTO,
          DT_MONITORIZACAO,
          DT_ATUALIZACAO,
          NM_USUARIO,
          QT_VC_PROG,
          QT_CO2,
		  QT_PRESSAO_CUFF,
		  QT_PPLATO,
		  QT_FIO2,
		  QT_PEEP,
		  QT_SATURACAO_O2,
		  QT_HALOG_EXP,
		  QT_OXIG_INS,
		  QT_OXIG_EXP,
		  QT_OXIDO_NITROSO_EXP,
		  QT_OXIDO_NITROSO_INSP,
		  QT_SAT_VENOSA_O2,
		  QT_CAM,
		  QT_HALOG_INS,
		  QT_FLUXO_OXIGENIO,
		  QT_TI,
		  QT_FREQ_RESP,
		  QT_CDYN,
		  QT_ICO2,
		  QT_FREQ_VENT,
		  QT_AUTO_PEEP,
		  QT_PIP,
		  QT_PVA,
		  QT_VCI,
		  QT_RSR,
		  QT_TE,
		  QT_VMIN,
		  QT_CST,
		  QT_PS,
		  QT_SENSIB_FLUXO,
		  QT_FLUXO_INSP,
          DS_OBSERVACAO,
          IE_SITUACAO,
		  DT_LIBERACAO,
		  NM_USUARIO_NREC,
		  DT_ATUALIZACAO_NREC,
		  IE_IMPORTADO,
		  NR_CIRURGIA,
		  NR_SEQ_PEPO,
		  IE_INTEGRACAO
        )
        VALUES (
          NR_SEQ_MONIT_RESP_W,
          NR_ATENDIMENTO_W,
          DT_SINAL_VITAL_W,
          clock_timestamp(),
          NM_USUARIO_W,
          QT_VC_PROG_w,
          QT_CO2_w,
		  QT_PRESSAO_CUFF_w,
		  QT_PPLATO_w,
		  QT_FIO2_w,
		  QT_PEEP_w,
		  QT_SATURACAO_O2_w,
		  QT_HALOG_EXP_w,
		  QT_OXIG_INS_w,
		  QT_OXIG_EXP_w,
		  QT_OXIDO_NITROSO_EXP_w,
		  QT_OXIDO_NITROSO_INSP_w,
		  QT_SAT_VENOSA_O2_w,
		  QT_CAM_w,
		  QT_HALOG_INS_w,
		  QT_FLUXO_OXIGENIO_w,
		  QT_TI_w,
		  QT_FREQ_RESP_w,
		  QT_CDYN_w,
		  QT_ICO2_w,
		  QT_FREQ_VENT_w,
		  QT_AUTO_PEEP_w,
		  QT_PIP_w,
		  QT_PVA_w,
		  QT_VCI_w,
		  QT_RSR_w,
		  QT_TE_w,
		  QT_VMIN_w,
		  QT_CST_w,
		  QT_PS_w,
		  QT_SENSIB_FLUXO_w,
		  QT_FLUXO_INSP_W,
          DS_OBSERVACAO_W,
          IE_SITUACAO_W,
		  clock_timestamp(),
		  NM_USUARIO_W,
		  clock_timestamp(),
		  'S',
		  NR_CIRURGIA_w,
		  NR_SEQ_PEPO_w,
		  'S'
        );
         COMMIT;
    END IF;
  END;

  PROCEDURE INS_ATEND_MONIT_HEMO IS
  BEGIN
    IF (NR_SEQ_MONIT_HEMO_W = 0) THEN	
	
      SELECT nextval('atend_monit_hemod_seq') INTO STRICT NR_SEQ_MONIT_HEMO_W;

      INSERT INTO ATEND_MONIT_HEMOD(
          NR_SEQUENCIA,
          NR_ATENDIMENTO,
          DT_MONITORACAO,
          DT_ATUALIZACAO,
          NM_USUARIO,
          QT_PA_SIST,
          QT_PA_DIAST,
          QT_PAM,
		  IE_PA_MEDIA_AP_INFORMADA,
		  QT_PVC,
		  QT_DEBITO_CARD,
		  QT_PA_MEDIA_AP,
		  TX_INDICE_CARD,
		  QT_PVD_SIST,
		  QT_FC,
		  QT_PA_SIST_AP,
		  QT_PA_DIAST_AP,
		  QT_SATUR_VEN_MISTA_OXIGENIO,
		  QT_DELTA_PP,
		  QT_VPS,
		  QT_PAE,
		  QT_VVS,
		  TX_RV_SISTEMICA,
		  QT_RV_SISTEMICA,
		  QT_VOLUME_SIST,
		  QT_CONT_ART_VEN_OXIG,
          IE_SITUACAO,
		  DT_LIBERACAO,
		  NM_USUARIO_NREC,
		  DT_ATUALIZACAO_NREC,
		  IE_IMPORTADO,
		  NR_CIRURGIA,
		  NR_SEQ_PEPO,
		  IE_INTEGRACAO
        )
        VALUES (
          NR_SEQ_MONIT_HEMO_W,
          NR_ATENDIMENTO_W,
          DT_SINAL_VITAL_W,
          clock_timestamp(),
          NM_USUARIO_W,
          QT_PA_SIST_w,
          QT_PA_DIAST_w,
          QT_PAM_w,
		  IE_PA_MEDIA_AP_INFORMADA_w,
		  QT_PVC_w,
		  QT_DEBITO_CARD_w,
		  QT_PA_MEDIA_AP_w,
		  TX_INDICE_CARD_w,
		  QT_PVD_SIST_w,
		  QT_FREQ_CARDIACA_w,
		  coalesce(QT_PA_SIST_AP_w,QT_PA_SISTOLICA_w),
		  coalesce(QT_PA_DIAST_AP_w,QT_PA_DIASTOLICA_w),
		  QT_SATUR_VEN_MISTA_OXIGENIO_w,
		  QT_DELTA_PP_w,
		  QT_VPS_w,
		  QT_PAE_w,
		  QT_VVS_w,
		  TX_RV_SISTEMICA_W,
		  QT_RV_SISTEMICA_W,
		  QT_VOLUME_SIST_W,
		  QT_CONT_ART_VEN_OXIG_W,
          IE_SITUACAO_W,
		  clock_timestamp(),
		  NM_USUARIO_W,
		  clock_timestamp(),
		  'S',
		  NR_CIRURGIA_w,
		  NR_SEQ_PEPO_w,
		  'S'
        );
      COMMIT;
    END IF;
  END;

BEGIN

BEGIN

dt_sinal_vital_w := TO_DATE(DT_EVENTO_P, 'yyyymmddhh24miss');

EXCEPTION
	WHEN OTHERS THEN
	DT_SINAL_VITAL_W	:=  clock_timestamp();
END;

NM_USUARIO_W := coalesce(USERNAME_P,'DEFAULT');

if ( coalesce(upper(IE_TIPO_P),'MR') = 'VN' ) then

	nr_atendimento_w := nr_atendimento_p;
	
	Select  obter_pessoa_atendimento(nr_atendimento_w,'C')
	into STRICT	cd_pessoa_fisica_w
	;

else

	cd_pessoa_fisica_w := nr_atendimento_p;

end if;

Select  obter_desc_expressao(292158)||CHR(58)||' '||nm_usuario_w
into STRICT	ds_observacao_w
;

BEGIN
	SELECT 	MAX(VALUE)
	INTO STRICT	NLS_NUMERIC_CHARACTERS_W
	FROM 	V$NLS_PARAMETERS
	WHERE	PARAMETER = 'NLS_NUMERIC_CHARACTERS';
EXCEPTION
WHEN OTHERS THEN
	NLS_NUMERIC_CHARACTERS_W	:= NULL;
END;

IF (NLS_NUMERIC_CHARACTERS_W <> '.,') THEN 
	
	/*Start -  Conversao das variaveis*/


	
	--Sinais vitais
	
	QT_FREQ_CARDIACA_W         		:= REPLACE(QT_FREQ_CARDIACA_P,'.',',');
	QT_SPO2R_W                 		:= REPLACE(QT_SPO2R_P,'.',',');
	QT_PAM_W                   		:= REPLACE(QT_PAM_P,'.',',');
	QT_PVC_W                   		:= REPLACE(QT_PVC_P,'.',',');
	QT_PRESSAO_INTRA_CRANIO_W  		:= REPLACE(QT_PRESSAO_INTRA_CRANIO_P,'.',',');
	QT_PPC_W                   		:= REPLACE(QT_PPC_P,'.',',');
	QT_MAEC_W                  		:= REPLACE(QT_MAEC_P,'.',',');
	QT_PRESSAO_INTRA_ABD_W     		:= REPLACE(QT_PRESSAO_INTRA_ABD_P,'.',',');
	QT_SATURACAO_O2_W			 	:= REPLACE(QT_SATURACAO_O2_P,'.',',');
	QT_PAE_W					 	:= REPLACE(QT_PAE_P,'.',',');
	QT_SEGMENTO_ST_W			 	:= REPLACE(QT_SEGMENTO_ST_P,'.',',');
	QT_TOF_BLOQ_NEURO_MUSC_W   		:= REPLACE(QT_TOF_BLOQ_NEURO_MUSC_P,'.',',');
	QT_FREQ_CARD_MONIT_W     	 	:= REPLACE(QT_FREQ_CARD_MONIT_P,'.',',');
	IE_DERIVACAO_SEG_ST_W 	 		:= REPLACE(IE_DERIVACAO_SEG_ST_P,'.',',');
	QT_DERIV_VENTRIC_EXTER_W   		:= REPLACE(QT_PRESSAO_INTRA_CRANIO_P,'.',',');
	QT_PRESSAO_INTRA_ABD_H2O_W 		:= REPLACE(QT_PRESSAO_INTRA_ABD_P,'.',',');
	QT_PA_SISTOLICA_W			 	:= REPLACE(QT_PA_SISTOLICA_P,'.',',');
	QT_PA_DIASTOLICA_W		 		:= REPLACE(QT_PA_DIASTOLICA_P,'.',',');
	QT_FREQ_RESP_SINAL_W		 	:= REPLACE(QT_FREQ_RESP_SINAL_P,'.',',');
	QT_TEMP_W					 	:= REPLACE(QT_TEMP_P,'.',',');
	QT_PA_DIASTOLICA_CMGH_W	 		:= REPLACE(QT_PA_DIASTOLICA_P,'.',',');
	QT_PAM_CMHG_W				 	:= REPLACE(QT_PAM_P,'.',',');
	IE_APARELHO_PA_W		 		:= REPLACE(IE_APARELHO_PA_P,'.',',');
	IE_SITIO_W					 	:= REPLACE(IE_SITIO_P,'.',',');
	QT_O2_SUPLEMENTAR_W	 			:= REPLACE(QT_O2_SUPLEMENTAR_P,'.',',');
	IE_RITMO_ECG_W				 	:= REPLACE(IE_RITMO_ECG_P,'.',',');
	
	-- Respiratoria
	QT_VC_PROG_W 					:= REPLACE(QT_VC_PROG_P,'.',',');
	QT_CO2_W     					:= REPLACE(QT_CO2_P,'.',',');
	QT_PRESSAO_CUFF_W 				:= REPLACE(QT_PRESSAO_CUFF_P,'.',',');
	QT_PPLATO_W						:= REPLACE(QT_PPLATO_P,'.',',');
	QT_FIO2_W						:= REPLACE(QT_FIO2_P,'.',',');
	QT_PEEP_W						:= REPLACE(QT_PEEP_P,'.',',');
	QT_SATURACAO_O2_W 				:= REPLACE(QT_SATURACAO_O2_P,'.',',');
	QT_HALOG_EXP_W					:= REPLACE(QT_HALOG_EXP_P,'.',',');
	QT_OXIG_INS_W     				:= REPLACE(QT_OXIG_INS_P,'.',',');
	QT_OXIG_EXP_W					:= REPLACE(QT_OXIG_EXP_P,'.',',');
	QT_OXIDO_NITROSO_EXP_W 			:= REPLACE(QT_OXIDO_NITROSO_EXP_P,'.',',');
	QT_OXIDO_NITROSO_INSP_W			:= REPLACE(QT_OXIDO_NITROSO_INSP_P,'.',',');
	QT_SAT_VENOSA_O2_W				:= REPLACE(QT_SAT_VENOSA_O2_P,'.',',');
	QT_CAM_W						:= REPLACE(QT_CAM_P,'.',',');
	QT_HALOG_INS_W					:= REPLACE(QT_HALOG_INS_P,'.',',');
	QT_FLUXO_OXIGENIO_W				:= REPLACE(QT_FLUXO_OXIGENIO_P,'.',',');
	QT_TI_W							:= REPLACE(QT_TI_P,'.',',');
	QT_FREQ_RESP_W					:= REPLACE(QT_FREQ_RESP_P,'.',',');
	QT_CDYN_W						:= REPLACE(QT_CDYN_P,'.',',');
	QT_ICO2_W						:= REPLACE(QT_ICO2_P,'.',',');
	QT_FREQ_VENT_w					:= REPLACE(QT_FREQ_VENT_P,'.',',');
	QT_AUTO_PEEP_w		 			:= REPLACE(QT_AUTO_PEEP_P,'.',',');
	QT_PIP_w						:= REPLACE(QT_PIP_P,'.',',');
	QT_PVA_w						:= REPLACE(QT_PVA_P,'.',',');
	QT_VCI_w						:= REPLACE(QT_VCI_P,'.',',');
	QT_RSR_w						:= REPLACE(QT_RSR_P,'.',',');
	QT_TE_w							:= REPLACE(QT_TE_P,'.',',');
	QT_VMIN_w						:= REPLACE(QT_VMIN_P,'.',',');
	QT_CST_w						:= REPLACE(QT_CST_P,'.',',');
	QT_PS_w							:= REPLACE(QT_PS_P,'.',',');
	QT_SENSIB_FLUXO_w				:= REPLACE(QT_SENSIB_FLUXO_P,'.',',');
	QT_FLUXO_INSP_W					:= REPLACE(QT_FLUXO_INSP_P,'.',',');
	
	-- Hemodinamica
	QT_PA_SIST_W  			 		:= REPLACE(QT_PA_SIST_P,'.',',');
	QT_PA_DIAST_W 			 		:= REPLACE(QT_PA_DIAST_P,'.',',');
	QT_PAM2_W     			 		:= REPLACE(QT_PAM2_P,'.',',');
	IE_PA_MEDIA_AP_INFORMADA_W 		:= REPLACE(IE_PA_MEDIA_AP_INFORMADA_P,'.',',');
	QT_PVC_HEMOD_W			 		:= REPLACE(QT_PVC_HEMOD_P,'.',',');
	QT_DEBITO_CARD_W			 	:= REPLACE(QT_DEBITO_CARD_P,'.',',');
	QT_PA_MEDIA_AP_W			 	:= REPLACE(QT_PA_MEDIA_AP_P,'.',',');
	TX_INDICE_CARD_W			 	:= REPLACE(TX_INDICE_CARD_P,'.',',');
	QT_PVD_SIST_W				 	:= REPLACE(QT_PVD_SIST_P,'.',',');
	QT_FC_W  					 	:= REPLACE(QT_FREQ_CARDIACA_P,'.',',');
	QT_PA_SIST_AP_W      		 	:= REPLACE(QT_PA_SIST_AP_P,'.',',');
	QT_PA_DIAST_AP_W			 	:= REPLACE(QT_PA_DIAST_AP_P,'.',',');
	QT_SATUR_VEN_MISTA_OXIGENIO_W 	:= REPLACE(QT_SATUR_VEN_MISTA_OXIGENIO_P,'.',',');
	QT_DELTA_PP_W					:= REPLACE(QT_DELTA_PP_P,'.',',');
	QT_VPS_W						:= REPLACE(QT_VPS_P,'.',',');
	QT_PAE_W						:= REPLACE(QT_PAE_P,'.',',');
	QT_VVS_W						:= REPLACE(QT_VVS_P,'.',',');
	TX_RV_SISTEMICA_W				:= REPLACE(TX_RV_SISTEMICA_P,'.',',');
	QT_RV_SISTEMICA_W				:= REPLACE(QT_RV_SISTEMICA_P,'.',',');
	QT_VOLUME_SIST_W				:= REPLACE(QT_VOLUME_SIST_P,'.',',');
	QT_CONT_ART_VEN_OXIG_W			:= REPLACE(QT_CONT_ART_VEN_OXIG_P,'.',',');
	
	else
	
	--Sinais vitais
	QT_FREQ_CARDIACA_W         		:= QT_FREQ_CARDIACA_P;
	QT_SPO2R_W                 		:= QT_SPO2R_P;
	QT_PAM_W                   		:= QT_PAM_P;
	QT_PVC_W                   		:= QT_PVC_P;
	QT_PRESSAO_INTRA_CRANIO_W  		:= QT_PRESSAO_INTRA_CRANIO_P;
	QT_PPC_W                   		:= QT_PPC_P;
	QT_MAEC_W                  		:= QT_MAEC_P;
	QT_PRESSAO_INTRA_ABD_W     		:= QT_PRESSAO_INTRA_ABD_P;
	QT_SATURACAO_O2_W			 	:= QT_SATURACAO_O2_P;
	QT_PAE_W					 	:= QT_PAE_P;
	QT_SEGMENTO_ST_W			 	:= QT_SEGMENTO_ST_P;
	QT_TOF_BLOQ_NEURO_MUSC_W   		:= QT_TOF_BLOQ_NEURO_MUSC_P;
	QT_FREQ_CARD_MONIT_W     	 	:= QT_FREQ_CARD_MONIT_P;
	IE_DERIVACAO_SEG_ST_W 	 		:= IE_DERIVACAO_SEG_ST_P;
	QT_DERIV_VENTRIC_EXTER_W   		:= QT_PRESSAO_INTRA_CRANIO_P;
	QT_PRESSAO_INTRA_ABD_H2O_W 		:= QT_PRESSAO_INTRA_ABD_P;
	QT_PA_SISTOLICA_W			 	:= QT_PA_SISTOLICA_P;
	QT_PA_DIASTOLICA_W		 		:= QT_PA_DIASTOLICA_P;
	QT_FREQ_RESP_SINAL_W		 	:= QT_FREQ_RESP_SINAL_P;
	QT_TEMP_W					 	:= QT_TEMP_P;
	QT_PA_DIASTOLICA_CMGH_W	 		:= QT_PA_DIASTOLICA_P;
	QT_PAM_CMHG_W				 	:= QT_PAM_P;
	IE_APARELHO_PA_W		 		:= IE_APARELHO_PA_P;
	IE_SITIO_W					 	:= IE_SITIO_P;
	QT_O2_SUPLEMENTAR_W	 			:= QT_O2_SUPLEMENTAR_P;
	IE_RITMO_ECG_W				 	:= IE_RITMO_ECG_P;
	
	-- Respiratoria
	QT_VC_PROG_W 					:= QT_VC_PROG_P;
	QT_CO2_W     					:= QT_CO2_P;
	QT_PRESSAO_CUFF_W 				:= QT_PRESSAO_CUFF_P;
	QT_PPLATO_W						:= QT_PPLATO_P;
	QT_FIO2_W						:= QT_FIO2_P;
	QT_PEEP_W						:= QT_PEEP_P;
	QT_SATURACAO_O2_W 				:= QT_SATURACAO_O2_P;
	QT_HALOG_EXP_W					:= QT_HALOG_EXP_P;
	QT_OXIG_INS_W     				:= QT_OXIG_INS_P;
	QT_OXIG_EXP_W					:= QT_OXIG_EXP_P;
	QT_OXIDO_NITROSO_EXP_W 			:= QT_OXIDO_NITROSO_EXP_P;
	QT_OXIDO_NITROSO_INSP_W			:= QT_OXIDO_NITROSO_INSP_P;
	QT_SAT_VENOSA_O2_W				:= QT_SAT_VENOSA_O2_P;
	QT_CAM_W						:= QT_CAM_P;
	QT_HALOG_INS_W					:= QT_HALOG_INS_P;
	QT_FLUXO_OXIGENIO_W				:= QT_FLUXO_OXIGENIO_P;
	QT_TI_W							:= QT_TI_P;
	QT_FREQ_RESP_W					:= QT_FREQ_RESP_P;
	QT_CDYN_W						:= QT_CDYN_P;
	QT_ICO2_W						:= QT_ICO2_P;
	QT_FREQ_VENT_w					:= QT_FREQ_VENT_P;
	QT_AUTO_PEEP_w		 			:= QT_AUTO_PEEP_P;
	QT_PIP_w						:= QT_PIP_P;
	QT_PVA_w						:= QT_PVA_P;
	QT_VCI_w						:= QT_VCI_P;
	QT_RSR_w						:= QT_RSR_P;
	QT_TE_w							:= QT_TE_P;
	QT_VMIN_w						:= QT_VMIN_P;
	QT_CST_w						:= QT_CST_P;
	QT_PS_w							:= QT_PS_P;
	QT_SENSIB_FLUXO_w				:= QT_SENSIB_FLUXO_P;
	QT_FLUXO_INSP_W					:= QT_FLUXO_INSP_P;
	
	-- Hemodinamica
	QT_PA_SIST_W  			 		:= QT_PA_SIST_P;
	QT_PA_DIAST_W 			 		:= QT_PA_DIAST_P;
	QT_PAM2_W     			 		:= QT_PAM2_P;
	IE_PA_MEDIA_AP_INFORMADA_W 		:= IE_PA_MEDIA_AP_INFORMADA_P;
	QT_PVC_HEMOD_W			 		:= QT_PVC_HEMOD_P;
	QT_DEBITO_CARD_W			 	:= QT_DEBITO_CARD_P;
	QT_PA_MEDIA_AP_W			 	:= QT_PA_MEDIA_AP_P;
	TX_INDICE_CARD_W			 	:= TX_INDICE_CARD_P;
	QT_PVD_SIST_W				 	:= QT_PVD_SIST_P;
	QT_FC_W  					 	:= QT_FREQ_CARDIACA_P;
	QT_PA_SIST_AP_W      		 	:= QT_PA_SIST_AP_P;
	QT_PA_DIAST_AP_W			 	:= QT_PA_DIAST_AP_P;
	QT_SATUR_VEN_MISTA_OXIGENIO_W 	:= QT_SATUR_VEN_MISTA_OXIGENIO_P;
	QT_DELTA_PP_W					:= QT_DELTA_PP_P;
	QT_VPS_W						:= QT_VPS_P;
	QT_PAE_W						:= QT_PAE_P;
	QT_VVS_W						:= QT_VVS_P;
	TX_RV_SISTEMICA_W				:= TX_RV_SISTEMICA_P;
	QT_RV_SISTEMICA_W				:= QT_RV_SISTEMICA_P;
	QT_VOLUME_SIST_W				:= QT_VOLUME_SIST_P;
	QT_CONT_ART_VEN_OXIG_W			:= QT_CONT_ART_VEN_OXIG_P;
	
		
end if;
	

/*Finish -  Conversao das variaveis*/



/*Start -  Declarar  os campos para cada registro de sinais vitais  preenchidos */



-- Sinais vitais
i := 1;

if (qt_freq_cardiaca_w IS NOT NULL AND qt_freq_cardiaca_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_FREQ_CARDIACA';
	atributoSinaisVitais_w[i].vl_atributo_sv  := qt_freq_cardiaca_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (QT_SPO2R_w IS NOT NULL AND QT_SPO2R_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_SPO2R';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_SPO2R_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';	
end if;

if (QT_PAM_w IS NOT NULL AND QT_PAM_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_PAM';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_PAM_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (QT_PVC_w IS NOT NULL AND QT_PVC_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_PVC';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_PVC_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (QT_PRESSAO_INTRA_CRANIO_w IS NOT NULL AND QT_PRESSAO_INTRA_CRANIO_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_PRESSAO_INTRA_CRANIO';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_PRESSAO_INTRA_CRANIO_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (QT_PPC_w IS NOT NULL AND QT_PPC_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_PPC';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_PPC_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (QT_MAEC_w IS NOT NULL AND QT_MAEC_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_MAEC';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_MAEC_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (QT_PRESSAO_INTRA_ABD_w IS NOT NULL AND QT_PRESSAO_INTRA_ABD_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_PRESSAO_INTRA_ABD';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_PRESSAO_INTRA_ABD_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (QT_SATURACAO_O2_w IS NOT NULL AND QT_SATURACAO_O2_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_SATURACAO_O2';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_SATURACAO_O2_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (QT_PAE_w IS NOT NULL AND QT_PAE_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_PAE';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_PAE_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;
		
if (QT_SEGMENTO_ST_w IS NOT NULL AND QT_SEGMENTO_ST_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_SEGMENTO_ST';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_SEGMENTO_ST_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (QT_TOF_BLOQ_NEURO_MUSC_w IS NOT NULL AND QT_TOF_BLOQ_NEURO_MUSC_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_TOF_BLOQ_NEURO_MUSC';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_TOF_BLOQ_NEURO_MUSC_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (QT_FREQ_CARDIACA_w IS NOT NULL AND QT_FREQ_CARDIACA_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_FREQ_CARD_MONIT';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_FREQ_CARDIACA_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (QT_SEGMENTO_ST_w IS NOT NULL AND QT_SEGMENTO_ST_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'IE_DERIVACAO_SEG_ST';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_SEGMENTO_ST_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (QT_PRESSAO_INTRA_CRANIO_w IS NOT NULL AND QT_PRESSAO_INTRA_CRANIO_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_DERIV_VENTRIC_EXTER';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_PRESSAO_INTRA_CRANIO_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (QT_PRESSAO_INTRA_ABD_w IS NOT NULL AND QT_PRESSAO_INTRA_ABD_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_PRESSAO_INTRA_ABD_H2O';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_PRESSAO_INTRA_ABD_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (QT_PA_SISTOLICA_w IS NOT NULL AND QT_PA_SISTOLICA_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_PA_SISTOLICA';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_PA_SISTOLICA_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (QT_PA_DIASTOLICA_w IS NOT NULL AND QT_PA_DIASTOLICA_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_PA_DIASTOLICA';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_PA_DIASTOLICA_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (QT_FREQ_RESP_SINAL_W IS NOT NULL AND QT_FREQ_RESP_SINAL_W::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_FREQ_RESP';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_FREQ_RESP_SINAL_W;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (QT_TEMP_w IS NOT NULL AND QT_TEMP_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_TEMP';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_TEMP_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (QT_PA_DIASTOLICA_w IS NOT NULL AND QT_PA_DIASTOLICA_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_PA_DIASTOLICA_CMGH';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_PA_DIASTOLICA_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (QT_PAM_w IS NOT NULL AND QT_PAM_w::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_PAM_CMHG';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_PAM_w;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (IE_APARELHO_PA_W IS NOT NULL AND IE_APARELHO_PA_W::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'IE_APARELHO_PA';
	atributoSinaisVitais_w[i].vl_atributo_sv  := IE_APARELHO_PA_W;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (IE_SITIO_W IS NOT NULL AND IE_SITIO_W::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'IE_SITIO';
	atributoSinaisVitais_w[i].vl_atributo_sv  := IE_SITIO_W;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (QT_O2_SUPLEMENTAR_W IS NOT NULL AND QT_O2_SUPLEMENTAR_W::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'QT_O2_SUPLEMENTAR';
	atributoSinaisVitais_w[i].vl_atributo_sv  := QT_O2_SUPLEMENTAR_W;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

if (IE_RITMO_ECG_W IS NOT NULL AND IE_RITMO_ECG_W::text <> '') then
	atributoSinaisVitais_w[i].nm_atributo_sv  := 'IE_RITMO_ECG';
	atributoSinaisVitais_w[i].vl_atributo_sv  := IE_RITMO_ECG_W;
	i := i + 1;
	ie_sinal_vital_w :=  'S';
end if;

-- Monitorizacao respiratoria
 i := 1;
if (QT_VC_PROG_w IS NOT NULL AND QT_VC_PROG_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_VC_PROG';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_VC_PROG_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_CO2_w IS NOT NULL AND QT_CO2_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_CO2';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_CO2_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_PRESSAO_CUFF_w IS NOT NULL AND QT_PRESSAO_CUFF_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_PRESSAO_CUFF';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_PRESSAO_CUFF_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_PPLATO_w IS NOT NULL AND QT_PPLATO_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_PPLATO';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_PPLATO_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_FIO2_w IS NOT NULL AND QT_FIO2_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_FIO2';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_FIO2_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_PEEP_w IS NOT NULL AND QT_PEEP_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_PEEP';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_PEEP_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_SATURACAO_O2_w IS NOT NULL AND QT_SATURACAO_O2_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_SATURACAO_O2';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_SATURACAO_O2_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_HALOG_EXP_w IS NOT NULL AND QT_HALOG_EXP_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_HALOG_EXP';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_HALOG_EXP_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_OXIG_INS_w IS NOT NULL AND QT_OXIG_INS_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_OXIG_INS';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_OXIG_INS_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_OXIG_EXP_w IS NOT NULL AND QT_OXIG_EXP_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_OXIG_EXP';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_OXIG_EXP_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_OXIDO_NITROSO_EXP_w IS NOT NULL AND QT_OXIDO_NITROSO_EXP_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_OXIDO_NITROSO_EXP';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_OXIDO_NITROSO_EXP_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_OXIDO_NITROSO_INSP_w IS NOT NULL AND QT_OXIDO_NITROSO_INSP_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_OXIDO_NITROSO_INSP';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_OXIDO_NITROSO_INSP_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_SAT_VENOSA_O2_w IS NOT NULL AND QT_SAT_VENOSA_O2_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_SAT_VENOSA_O2';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_SAT_VENOSA_O2_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_CAM_w IS NOT NULL AND QT_CAM_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_CAM';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_CAM_w;		
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_HALOG_INS_w IS NOT NULL AND QT_HALOG_INS_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_HALOG_INS';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_HALOG_INS_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_FLUXO_OXIGENIO_w IS NOT NULL AND QT_FLUXO_OXIGENIO_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_FLUXO_OXIGENIO';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_FLUXO_OXIGENIO_w;		
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_TI_w IS NOT NULL AND QT_TI_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_TI';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_TI_w;		
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_FREQ_RESP_w IS NOT NULL AND QT_FREQ_RESP_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_FREQ_RESP';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_FREQ_RESP_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_CDYN_w IS NOT NULL AND QT_CDYN_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_CDYN';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_CDYN_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_ICO2_w IS NOT NULL AND QT_ICO2_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_ICO2';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_ICO2_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_FREQ_VENT_w IS NOT NULL AND QT_FREQ_VENT_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_FREQ_VENT';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_FREQ_VENT_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_AUTO_PEEP_w IS NOT NULL AND QT_AUTO_PEEP_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_AUTO_PEEP';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_AUTO_PEEP_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_PIP_w IS NOT NULL AND QT_PIP_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_PIP';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_PIP_P;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_PVA_w IS NOT NULL AND QT_PVA_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_PVA';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_PVA_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_VCI_w IS NOT NULL AND QT_VCI_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_VCI';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_VCI_w;	
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_RSR_w IS NOT NULL AND QT_RSR_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_RSR';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_RSR_w;	
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_TE_w IS NOT NULL AND QT_TE_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_TE';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_TE_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_VMIN_w IS NOT NULL AND QT_VMIN_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_VMIN';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_VMIN_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_CST_w IS NOT NULL AND QT_CST_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_CST';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_CST_w;	
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_PS_w IS NOT NULL AND QT_PS_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_PS';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_PS_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_SENSIB_FLUXO_w IS NOT NULL AND QT_SENSIB_FLUXO_w::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_SENSIB_FLUXO';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_SENSIB_FLUXO_w;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

if (QT_FLUXO_INSP_W IS NOT NULL AND QT_FLUXO_INSP_W::text <> '') then
	atributoMonitorizacaoResp_w[i].nm_atributo_sv  := 'QT_FLUXO_INSP';
	atributoMonitorizacaoResp_w[i].vl_atributo_sv  := QT_FLUXO_INSP_W;
	i := i + 1;
	ie_monitorizacao_resp_w :=  'S';
end if;

-- Monitorizacao hemodinamica
i := 1;

if (QT_PA_SIST_w IS NOT NULL AND QT_PA_SIST_w::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'QT_PA_SIST';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := QT_PA_SIST_w;	
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

if (QT_PA_DIAST_w IS NOT NULL AND QT_PA_DIAST_w::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'QT_PA_DIAST';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := QT_PA_DIAST_w;
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

if (QT_PAM_w IS NOT NULL AND QT_PAM_w::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'QT_PAM';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := QT_PAM_w;	
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

if (IE_PA_MEDIA_AP_INFORMADA_w IS NOT NULL AND IE_PA_MEDIA_AP_INFORMADA_w::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'IE_PA_MEDIA_AP_INFORMADA';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := IE_PA_MEDIA_AP_INFORMADA_w;		
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

if (QT_PVC_w IS NOT NULL AND QT_PVC_w::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'QT_PVC';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := QT_PVC_w;	
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

if (QT_DEBITO_CARD_w IS NOT NULL AND QT_DEBITO_CARD_w::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'QT_DEBITO_CARD';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := QT_DEBITO_CARD_w;	
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

if (QT_PA_MEDIA_AP_w IS NOT NULL AND QT_PA_MEDIA_AP_w::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'QT_PA_MEDIA_AP';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := QT_PA_MEDIA_AP_w;	
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

if (TX_INDICE_CARD_w IS NOT NULL AND TX_INDICE_CARD_w::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'TX_INDICE_CARD';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := TX_INDICE_CARD_w;	
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

if (QT_PVD_SIST_w IS NOT NULL AND QT_PVD_SIST_w::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'QT_PVD_SIST';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := QT_PVD_SIST_w;
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

if (QT_FREQ_CARDIACA_w IS NOT NULL AND QT_FREQ_CARDIACA_w::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'QT_FC';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := QT_FREQ_CARDIACA_w;
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

if (QT_PA_SIST_AP_w IS NOT NULL AND QT_PA_SIST_AP_w::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'QT_PA_SIST_AP';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := QT_PA_SIST_AP_w;
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

if (QT_PA_DIAST_AP_w IS NOT NULL AND QT_PA_DIAST_AP_w::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'QT_PA_DIAST_AP';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := QT_PA_DIAST_AP_w;	
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

if (QT_SATUR_VEN_MISTA_OXIGENIO_w IS NOT NULL AND QT_SATUR_VEN_MISTA_OXIGENIO_w::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'QT_SATUR_VEN_MISTA_OXIGENIO';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := QT_SATUR_VEN_MISTA_OXIGENIO_w;
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

if (QT_DELTA_PP_w IS NOT NULL AND QT_DELTA_PP_w::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'QT_DELTA_PP';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := QT_DELTA_PP_w;
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

if (QT_VPS_w IS NOT NULL AND QT_VPS_w::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'QT_VPS';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := QT_VPS_w;	
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

if (QT_PAE_w IS NOT NULL AND QT_PAE_w::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'QT_PAE';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := QT_PAE_w;	
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

if (QT_VVS_w IS NOT NULL AND QT_VVS_w::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'QT_VVS';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := QT_VVS_w;	
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

if (TX_RV_SISTEMICA_W IS NOT NULL AND TX_RV_SISTEMICA_W::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'TX_RV_SISTEMICA';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := TX_RV_SISTEMICA_W;
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

if (QT_RV_SISTEMICA_W IS NOT NULL AND QT_RV_SISTEMICA_W::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'QT_RV_SISTEMICA';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := QT_RV_SISTEMICA_W;
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

if (QT_VOLUME_SIST_W IS NOT NULL AND QT_VOLUME_SIST_W::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'QT_VOLUME_SIST';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := QT_VOLUME_SIST_W;	
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

if (QT_CONT_ART_VEN_OXIG_W IS NOT NULL AND QT_CONT_ART_VEN_OXIG_W::text <> '') then
	atributoMonitorizacaoHemo_w[i].nm_atributo_sv  := 'QT_VVS';
	atributoMonitorizacaoHemo_w[i].vl_atributo_sv  := QT_CONT_ART_VEN_OXIG_W;
	i := i + 1;
	ie_monitorizacao_hemo_w :=  'S';
end if;

/*Finish -  Declarar  os campos para cada registro de sinais vitais  preenchidos */

IF ( upper(nm_usuario_w)   = 'NIHON KOHDEN') then

		If ( upper(IE_TIPO_P) <> 'VN' or coalesce(IE_TIPO_P::text, '') = '') then

		SELECT 	MAX(nr_atendimento)
		INTO STRICT 	nr_atendimento_w
		FROM 	atendimento_paciente
		WHERE 	cd_pessoa_fisica = cd_pessoa_fisica_w;

	end if;
	
	
		select	max(nr_cirurgia),
				max(nr_seq_pepo)
		into STRICT	nr_cirurgia_w,
				nr_seq_pepo_w
		from	cirurgia
		where	nr_atendimento = nr_atendimento_w
		and		dt_sinal_vital_w between dt_inicio_real and coalesce(dt_termino, dt_sinal_vital_w);

		if (coalesce(nr_seq_pepo_w::text, '') = '') then
			begin
				select	max(nr_sequencia)
				into STRICT	nr_seq_pepo_w
				from	PEPO_CIRURGIA
				where	nr_atendimento = nr_atendimento_w
				and		dt_sinal_vital_w between dt_inicio_proced  and coalesce(dt_fim_cirurgia, dt_sinal_vital_w);
			end;
		end if;

		if (coalesce(nr_cirurgia_w::text, '') = '') and (coalesce(nr_seq_pepo_w::text, '') = '') then
			select	max(nr_cirurgia),
					max(nr_seq_pepo)
			into STRICT	nr_cirurgia_w,
					nr_seq_pepo_w
			from	atend_paciente_unidade
			where	nr_atendimento = nr_atendimento_w
			and		dt_sinal_vital_w between dt_entrada_unidade and coalesce(dt_saida_unidade, dt_sinal_vital_w);
		end if;	
		
	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
		
		If (ie_sinal_vital_w = 'S') then
			INS_ATEND_SINAL_VITAL;			
		end if;
		
		If (ie_monitorizacao_resp_w = 'S') then
			INS_ATEND_MONIT_RESP;			
		end if;
		
		If (ie_monitorizacao_hemo_w = 'S') then
			INS_ATEND_MONIT_HEMO;			
		end if;

	end if;
	
	 select	coalesce(max(cd_estabelecimento),1)
	into STRICT	cd_estabelecimento_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_w;

	if (coalesce(nr_seq_sinal_vital_w,0) > 0) then 
			begin
			ie_exige_aprovacao_w := obter_param_usuario(281, 1493, null, null, cd_estabelecimento_w, ie_exige_aprovacao_w);
			case ie_exige_aprovacao_w
				when ExigeAprovacaoSim then
					update atendimento_sinal_vital set dt_liberacao  = NULL where nr_sequencia = nr_seq_sinal_vital_w;
					update atendimento_monit_resp  set dt_liberacao  = NULL where nr_sequencia = nr_seq_monit_resp_w;
					update atend_monit_hemod       set dt_liberacao  = NULL where nr_sequencia = nr_seq_monit_hemo_w;
					
				when ExigeAprovacaoNao then
					update atendimento_sinal_vital set dt_liberacao = clock_timestamp() where nr_sequencia = nr_seq_sinal_vital_w;
					update atendimento_monit_resp  set dt_liberacao = clock_timestamp() where nr_sequencia = nr_seq_monit_resp_w;
					update atend_monit_hemod       set dt_liberacao = clock_timestamp() where nr_sequencia = nr_seq_monit_hemo_w;
					commit;
					
				when ExigeAprovacaoForaFaixa then

					SELECT * FROM consiste_itens_sinal_vital(nr_seq_sinal_vital_w, ds_retorno_valida_sv_w, ie_retorno_valida_sv_w) INTO STRICT ds_retorno_valida_sv_w, ie_retorno_valida_sv_w;
					
					if ((ie_retorno_valida_sv_w = 'E') or (ie_retorno_valida_sv_w = 'A'))then
                        update atendimento_sinal_vital set dt_liberacao  = NULL where nr_sequencia = nr_seq_sinal_vital_w;
                        update atendimento_monit_resp  set dt_liberacao  = NULL where nr_sequencia = nr_seq_monit_resp_w;
                        update atend_monit_hemod       set dt_liberacao  = NULL where nr_sequencia = nr_seq_monit_hemo_w;
						commit;
						
					end if;
				else
					update atendimento_sinal_vital set dt_liberacao = clock_timestamp() where nr_sequencia = nr_seq_sinal_vital_w;
					update atendimento_monit_resp  set dt_liberacao = clock_timestamp() where nr_sequencia = nr_seq_monit_resp_w;
					update atend_monit_hemod       set dt_liberacao = clock_timestamp() where nr_sequencia = nr_seq_monit_hemo_w;
					commit;
				
			end case;
			exception
			when others then
				update atendimento_sinal_vital set dt_liberacao = clock_timestamp() where nr_sequencia = nr_seq_sinal_vital_w;
				update atendimento_monit_resp  set dt_liberacao = clock_timestamp() where nr_sequencia = nr_seq_monit_resp_w;
				update atend_monit_hemod       set dt_liberacao = clock_timestamp() where nr_sequencia = nr_seq_monit_hemo_w;
				commit;
			end;
		end if;
	
elsif ( upper(nm_usuario_w)   = 'PHILIPS' ) then
	
	if ( coalesce(upper(IE_TIPO_P),'MR') <> 'VN') then
	
		select 	max(nr_atendimento)
		into STRICT 	nr_atendimento_w
		from 	atendimento_paciente
		where 	cd_pessoa_fisica  = cd_pessoa_fisica_w
		and		dt_alta_interno  = TO_DATE('30/12/2999','dd/mm/yyyy')
		and		ie_tipo_atendimento in (1,3);

		if (coalesce(nr_atendimento_w::text, '') = '') then
			select 	max(nr_atendimento)
			into STRICT 	nr_atendimento_w
			from 	atendimento_paciente
			where 	cd_pessoa_fisica  = cd_pessoa_fisica_w
			and		dt_alta_interno  = TO_DATE('30/12/2999','dd/mm/yyyy');
		end if;
	
	end if;
	
	ie_integracao_extra_w := coalesce(ie_integracao_extra_p,'N');

	select	max(nr_cirurgia),
			max(nr_seq_pepo)
	into STRICT	nr_cirurgia_w,
			nr_seq_pepo_w
	from	cirurgia
	where	nr_atendimento = nr_atendimento_w
	and		dt_sinal_vital_w between dt_inicio_real and coalesce(dt_termino, dt_sinal_vital_w);

	if (coalesce(nr_seq_pepo_w::text, '') = '') then
		begin
			select	max(nr_sequencia)
			into STRICT	nr_seq_pepo_w
			from	PEPO_CIRURGIA
			where	nr_atendimento = nr_atendimento_w
			and		dt_sinal_vital_w between dt_inicio_proced  and coalesce(dt_fim_cirurgia, dt_sinal_vital_w);
		end;
	end if;

	if (coalesce(nr_cirurgia_w::text, '') = '') and (coalesce(nr_seq_pepo_w::text, '') = '') then
		select	max(nr_cirurgia),
				max(nr_seq_pepo)
		into STRICT	nr_cirurgia_w,
				nr_seq_pepo_w
		from	atend_paciente_unidade
		where	nr_atendimento = nr_atendimento_w
		and		dt_sinal_vital_w between dt_entrada_unidade and coalesce(dt_saida_unidade, dt_sinal_vital_w);
	end if;
	
	
	select	coalesce(max(cd_estabelecimento),1)
	into STRICT	cd_estabelecimento_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_w;

	cd_setor_atendimento_w := obter_setor_atendimento(nr_atendimento_w);	

	select	max(nr_cirurgia)
	into STRICT	nr_cirurgia_ww
	from	cirurgia
	where	nr_atendimento = nr_atendimento_w;

	select	coalesce(max(QT_MIN_PHILIPS),120),
			coalesce(max(IE_NOME_SETOR_PHILIPS),'N')
	into STRICT	qt_minutos_w,
			ie_nome_setor_philips_w
	from	parametro_medico
	where	cd_estabelecimento = cd_estabelecimento_w;

	select  coalesce(MAX(qt_min_philips),0),
			coalesce(max(ie_rpa),'N')
	into STRICT	qt_min_philips_w,
			ie_rpa_w
	from	setor_atendimento
	where	cd_setor_atendimento = cd_setor_atendimento_w;

	if (qt_min_philips_w > 0) then
		qt_minutos_w := qt_min_philips_w;	
	end if;

	select  coalesce(max(qt_min_periodico_w), qt_minutos_w)             qt_min_periodico_w,
			coalesce(max(qt_min_aperiodico_w), qt_minutos_w)            qt_min_aperiodico_w,
			coalesce(max(ie_gravar_suporte_decisao_w), 'N')             ie_gravar_suporte_decisao_w,
			coalesce(max(cd_setor_regra_w), null)                       cd_setor_regra_w,
			coalesce(max(ie_tem_regra_shift_F11_w), 'N')                ie_tem_regra_shift_F11_w,
			coalesce(max(qt_percentual_tolerancia_w), 0)                qt_percentual_tolerancia_w,
			coalesce(max(ie_tipo_horario_w), 'A')                       ie_tipo_horario_w,
			coalesce(max(ie_controlar_data_apap_w), ie_horario_real_w)  ie_controlar_data_apap_w,
      coalesce(max(ie_tipo_periodico_w), 'T')                     ie_tipo_periodico_w
	  into STRICT qt_min_periodico_w,
		   qt_min_aperiodico_w,
		   ie_gravar_suporte_decisao_w,
		   cd_setor_regra_w,
		   ie_tem_regra_shift_F11_w,
		   qt_percentual_tolerancia_w,
		   ie_tipo_horario_w,
		   ie_controlar_data_apap_w,
       ie_tipo_periodico_w
	from ( 
			SELECT  max(qt_min_philips)                     qt_min_periodico_w,
					max(qt_min_philips_ap)                  qt_min_aperiodico_w,
					max(ie_gravar_suporte_decisao)          ie_gravar_suporte_decisao_w,
					max(cd_setor_atendimento)               cd_setor_regra_w,
					max('S')                                ie_tem_regra_shift_F11_w,
					max(qt_percentual_tolerancia)           qt_percentual_tolerancia_w,
					max(ie_horario_par_impar)               ie_tipo_horario_w,
					max(ie_tipo_horario)                    ie_controlar_data_apap_w,
          max(IE_PERIODICO_APERIODICO)            ie_tipo_periodico_w
			from    sv_integracao_philips
			where   cd_estabelecimento   = cd_estabelecimento_w
			and     cd_setor_atendimento = cd_setor_atendimento_w
			and     (cd_setor_atendimento IS NOT NULL AND cd_setor_atendimento::text <> '')
			
union all

			SELECT  max(qt_min_philips)                     qt_min_periodico_w,
					max(qt_min_philips_ap)                  qt_min_aperiodico_w,
					max(ie_gravar_suporte_decisao)          ie_gravar_suporte_decisao,
					max(cd_setor_atendimento)               cd_setor_regra_w,
					max('S')                                ie_tem_regra_shift_F11_w,
					max(qt_percentual_tolerancia)           qt_percentual_tolerancia_w,
					max(ie_horario_par_impar)               ie_tipo_horario_w,
					max(ie_tipo_horario)                    ie_controlar_data_apap_w,
          max(IE_PERIODICO_APERIODICO)            ie_tipo_periodico_w
			from    sv_integracao_philips
			where   cd_estabelecimento   = cd_estabelecimento_w
			and     coalesce(cd_setor_atendimento::text, '') = ''
			and     not exists (
			  select 1
			  from    sv_integracao_philips
			  where   cd_estabelecimento   = cd_estabelecimento_w
			  and     cd_setor_atendimento = cd_setor_atendimento_w
			)         
		) x
		order by cd_setor_regra_w;

	-- Horario Real ou Horario APAP    
	if (ie_controlar_data_apap_w = ie_horario_apap_w) then
		hora_sv_w	:= to_char(round(dt_sinal_vital_w, 'HH'),'hh24');
	else
		hora_sv_w	:= to_char(trunc(dt_sinal_vital_w, 'HH'),'hh24');
	end if;

	if (ie_integracao_extra_w = 'S' and ie_tem_regra_shift_F11_w = 'S') then	
		qt_minutos_w := qt_min_aperiodico_w;
		if (qt_percentual_tolerancia_w > 0) then
			qt_minutos_w := qt_min_aperiodico_w - ((qt_min_aperiodico_w*qt_percentual_tolerancia_w)/100);
		end if;
		ie_consiste_aperiodico_w := 'S';
	end if;

	if (ie_integracao_extra_w = 'N' and ie_tem_regra_shift_F11_w = 'S') then
		qt_minutos_w := qt_min_periodico_w;
	end if;

	ie_tem_sv_periodo_w := 'N';
	
	if (ie_integracao_extra_w = 'S' and ie_consiste_aperiodico_w = 'S') or (ie_integracao_extra_w <> 'S')  then
	   
		if (ie_controlar_data_apap_w = ie_horario_real_w) then
			select	coalesce(max('S'), 'N')
			into STRICT	ie_tem_sv_periodo_w
			from	atendimento_sinal_vital a
			where	a.nr_atendimento	= nr_atendimento_w
			and	    coalesce(a.dt_inativacao::text, '') = ''
			and	    a.dt_sinal_vital between dt_sinal_vital_w - (1/24/60)* qt_minutos_w and dt_sinal_vital_w
			and	    a.nm_usuario_nrec = nm_usuario_w
			and	    coalesce(a.ie_integracao_extra,'N') = ie_integracao_extra_w
			and	    coalesce(a.ie_integracao_mentor,'N') = 'N';
		else
					
			select  coalesce(max('S'), 'N')
			into STRICT	ie_tem_sv_periodo_w
			from	atendimento_sinal_vital a
			where	a.nr_atendimento	= nr_atendimento_w
			and	    coalesce(a.dt_inativacao::text, '') = ''
			and	    a.dt_referencia between round(dt_sinal_vital_w, 'HH') - (1/24/60)* qt_minutos_w and trunc(dt_sinal_vital_w, 'HH') + interval '1' hour
			and	    a.nm_usuario_nrec = nm_usuario_w
			and	    coalesce(a.ie_integracao_extra,'N') = ie_integracao_extra_w
			and	    coalesce(a.ie_integracao_mentor,'N') = 'N';
				
		end if;
		
	end if;
	
	-- Criado consistencia para verificar se o paciente se encontra em um setor/leito monitorado. 
	select	count(*)
	into STRICT	qt_setor_integrado_w	
	from	atend_paciente_unidade a,
			unidade_atendimento b
	where	a.nr_atendimento = nr_atendimento_w
	and		a.cd_setor_atendimento = b.cd_setor_atendimento
	and		a.cd_unidade_basica = b.cd_unidade_basica
	and		coalesce(b.ie_leito_monitorado,'N') = 'S'
	and		dt_sinal_vital_w between a.dt_entrada_unidade and coalesce(a.dt_saida_unidade, dt_sinal_vital_w);
	
	if (	qt_setor_integrado_w > 0) and (	ie_nome_setor_philips_w = 'S') then
		select	count(*)
		into STRICT	qt_setor_integrado_w	
		from	atend_paciente_unidade a,
				unidade_atendimento b
		where	a.nr_atendimento = nr_atendimento_w
		and		a.cd_setor_atendimento = b.cd_setor_atendimento
		and		a.cd_unidade_basica = b.cd_unidade_basica
		and		upper(b.nm_setor_integracao) = upper(cd_setor_atendimento_p)
		and		trim(both upper(b.nm_leito_integracao)) = trim(both upper(cd_unidade_compl_p))
		and		coalesce(b.ie_leito_monitorado,'N') = 'S'
		and		dt_sinal_vital_w between a.dt_entrada_unidade and coalesce(a.dt_saida_unidade, dt_sinal_vital_w);		
	end if;
	
	/* Start Suporte a decisao clinica */

	qt_minutos_w := obter_param_usuario(355, 2, 0, nm_usuario_w, cd_estabelecimento_w, qt_minutos_w);

	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and (qt_setor_integrado_w > 0) and (ie_tem_sv_periodo_w = 'S') and (ie_gravar_suporte_decisao_w = 'S') and (coalesce(qt_minutos_w,0) > 0) then
		
		select	coalesce(max('S'), 'N')
		into STRICT	ie_tem_sv_periodo_w
		from	atendimento_sinal_vital a
		where	a.nr_atendimento    = nr_atendimento_w
		and	    coalesce(a.dt_inativacao::text, '') = ''
		and	    a.dt_sinal_vital between dt_sinal_vital_w - ((1/24)* qt_minutos_w) and dt_sinal_vital_w
		and	    a.nm_usuario_nrec = nm_usuario_w
		and	    coalesce(a.ie_integracao_mentor,'N') = 'S';
		
		if (ie_tem_sv_periodo_w = 'N') then

			ie_tem_sv_periodo_w := 'S';

			qt_idade_w		 := obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'A');	
			qt_idade_dias_w	 := obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'DIA');
			qt_peso_gramas_w := (coalesce(obter_peso_pf(cd_pessoa_fisica_w),0) * 1000);

			--Inicializa vetores dos atributos considerados da tabela sinal_vital e seus respectivos codigos hl7
			deParaHL7SV_SDC_w[1].para_nm_atributo_sv  := 'QT_PAM';													
			deParaHL7SV_SDC_w[2].para_nm_atributo_sv  := 'QT_PA_SISTOLICA';
			deParaHL7SV_SDC_w[3].para_nm_atributo_sv  := 'QT_PA_DIASTOLICA';
			deParaHL7SV_SDC_w[4].para_nm_atributo_sv  := 'QT_FREQ_RESP';
			deParaHL7SV_SDC_w[5].para_nm_atributo_sv  := 'QT_TEMP';
			deParaHL7SV_SDC_w[6].para_nm_atributo_sv  := 'QT_SATURACAO_O2';
			deParaHL7SV_SDC_w[7].para_nm_atributo_sv  := 'QT_FREQ_CARDIACA';
			deParaHL7SV_SDC_w[8].para_nm_atributo_sv  := 'QT_PVC';
			deParaHL7SV_SDC_w[9].para_nm_atributo_sv  := 'QT_PAE';
			deParaHL7SV_SDC_w[10].para_nm_atributo_sv := 'QT_PRESSAO_INTRA_CRANIO';

			open C01;
			loop
			fetch C01 into
				nm_sv_atributo_w,
				vl_minimo_w,
				vl_maximo_w,
				nr_seq_regra_vital_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			
			
				if (ie_tem_suporte_decisao_w <> 'S') then
				
					in_nm_codigo_w := null;
					
					for i in 1..deParaHL7SV_SDC_w.count loop
						begin
							if ((deParaHL7SV_SDC_w[i].para_nm_atributo_sv = nm_sv_atributo_w) and (coalesce(in_nm_codigo_w::text, '') = '') ) then
								in_nm_codigo_w := deParaHL7SV_SDC_w[i].para_nm_atributo_sv;
							end if;
						end;
					end loop;
					
					if (in_nm_codigo_w IS NOT NULL AND in_nm_codigo_w::text <> '') then
					
						for i in 1..atributoSinaisVitais_w.count loop
							begin
								if ( atributoSinaisVitais_w[i](.vl_atributo_sv IS NOT NULL AND .vl_atributo_sv::text <> '')) then
						
									if (ie_tem_suporte_decisao_w = 'N' and position(atributoSinaisVitais_w[i].nm_atributo_sv in in_nm_codigo_w) > 0 ) then                            
										
										if vl_maximo_w >= (atributoSinaisVitais_w[i].vl_atributo_sv)::numeric  and vl_minimo_w <= (atributoSinaisVitais_w[i].vl_atributo_sv)::numeric  then                          
										   
											ie_tem_suporte_decisao_w := 'S';
										
										end if;
										
									end if;
									
								end if;
								
							end;
						end loop;
						
						if (ie_tem_suporte_decisao_w = 'N') then
						
							for i in 1..atributoMonitorizacaoResp_w.count loop
							begin

								if (atributoMonitorizacaoResp_w[i](.vl_atributo_sv IS NOT NULL AND .vl_atributo_sv::text <> '')) then
						
									if (ie_tem_suporte_decisao_w = 'N' and position(atributoMonitorizacaoResp_w[i].nm_atributo_sv in in_nm_codigo_w) > 0 ) then
										
										if vl_maximo_w >= (atributoMonitorizacaoResp_w[i].vl_atributo_sv)::numeric  and vl_minimo_w <= (atributoMonitorizacaoResp_w[i].vl_atributo_sv)::numeric  then                          
										   
											ie_tem_suporte_decisao_w := 'S';
										
										end if;
										
									end if;
									
								end if;
								
							end;
							end loop;
						
						
						end if;
						
						if (ie_tem_suporte_decisao_w = 'N') then
						
							for i in 1..atributoMonitorizacaoHemo_w.count loop
							begin
						
								if (atributoMonitorizacaoHemo_w[i](.vl_atributo_sv IS NOT NULL AND .vl_atributo_sv::text <> '')) then
						
									if (ie_tem_suporte_decisao_w = 'N' and position(atributoMonitorizacaoHemo_w[i].nm_atributo_sv in in_nm_codigo_w) > 0 ) then                            
										
										if vl_maximo_w >= (atributoMonitorizacaoHemo_w[i].vl_atributo_sv)::numeric  and vl_minimo_w <= (atributoMonitorizacaoHemo_w[i].vl_atributo_sv)::numeric  then                          
										   
											ie_tem_suporte_decisao_w := 'S';
										
										end if;
										
									end if;
									
								end if;
							end;
							end loop;
						
						
						end if;
					end if;						
				end if;
			end;
			end loop;
			close C01;
			
		end if;
		
	end if;
	
	/* Finish Suporte a decisao clinica */

	
	case ie_tipo_horario_w
    when ie_horario_par_w then
      if mod(hora_sv_w, 2) = 0 then 
        ie_horario_aceito_w :=  'S';
      else
        ie_horario_aceito_w :=  'N';
      end if;

    when ie_horario_impar_w then
      if mod(hora_sv_w, 2) <> 0 then 
        ie_horario_aceito_w :=  'S';
      else
        ie_horario_aceito_w :=  'N';
      end if;

    when ie_horario_ambos_w then
      ie_horario_aceito_w := 'S';
	end case;
		
	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and (qt_setor_integrado_w > 0) and (ie_tem_sv_periodo_w = 'S') then

        select coalesce(max('S'), 'N') 
        into STRICT   ie_tem_regra_minuto_sv_w 
        from   lib_itens_sv_philips  a,
               sv_integracao_philips b
        where  b.nr_sequencia           = a.nr_seq_regra
        and    b.cd_estabelecimento     = cd_estabelecimento_w
        and    b.cd_setor_atendimento   = cd_setor_atendimento_w
        and    a.ie_situacao = 'A'
        and exists (  SELECT x.nr_sequencia 
               from   lib_itens_regra_sv x
               where  x.nr_seq_regra_tempo =  a.nr_sequencia
            );

        if (ie_tem_regra_minuto_sv_w = 'S') then
            
            select  coalesce(max('S'), 'N'), 
                    max(a.nr_sequencia),
                    rtrim(xmlagg(XMLELEMENT(name e, pep_obter_info_ssvs_hl7(b.cd_integracao, 'A')||',')).extract('//text()'),',') 
            into STRICT    ie_integrar_regra_min_w,
                    seq_min_philips_w,
                    ds_atributos_regra_min_w
            from    lib_itens_sv_philips     a, 
                    lib_itens_regra_sv       b,
                    sv_integracao_philips    c  
            where   b.nr_seq_regra_tempo = a.nr_sequencia
            and     a.nr_seq_regra       = c.nr_sequencia
            and     coalesce(c.cd_estabelecimento, cd_estabelecimento_w)         = cd_estabelecimento_w
            and     coalesce(c.cd_setor_atendimento, cd_setor_atendimento_w)     = cd_setor_atendimento_w
            and     a.ie_situacao = 'A'            
            and     not exists
                    (         
                        SELECT	x.nr_atendimento
                        from	atendimento_sinal_vital x
                        where	x.nr_atendimento    = nr_atendimento_w
                        and	    coalesce(x.dt_inativacao::text, '') = ''
                        and	    x.dt_sinal_vital between dt_sinal_vital_w - ((1/24/60)* a.qt_min_item_philips) and dt_sinal_vital_w
                        and	    x.nm_usuario_nrec = nm_usuario_w
                        and	    coalesce(x.ie_integracao_regra, 'N') = 'S'
                        and     x.nr_seq_min_philips = a.nr_sequencia
                    );

        end if;
	end if;
		
    if (ie_tipo_periodico_w = 'T') or (ie_tipo_periodico_w = 'P' and ie_integracao_extra_p = 'N') or (ie_tipo_periodico_w = 'A' and ie_integracao_extra_p = 'S') then

        ie_periodico_aceito_w := 'S';
    else
        ie_periodico_aceito_w := 'N';
    end if;

	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and (qt_setor_integrado_w > 0) and (ie_horario_aceito_w = 'S') and (ie_periodico_aceito_w = 'S') and (ie_tem_sv_periodo_w <> 'S' or ie_tem_suporte_decisao_w = 'S' or ie_integrar_regra_min_w = 'S') then
		
		if (ie_integrar_regra_min_w = 'S') then	
					
			for i in 1..atributoSinaisVitais_w.count loop
				begin
					if (atributoSinaisVitais_w[i](.vl_atributo_sv IS NOT NULL AND .vl_atributo_sv::text <> '')) then
					
						select  coalesce(max('S'), 'N')
						into STRICT    ie_ignorar_item_sv_w
						
						where   ds_atributos_regra_min_w like '%'|| atributoSinaisVitais_w[i].nm_atributo_sv || '%';
			
						if (ie_ignorar_item_sv_w <> 'S') then
							atributoSinaisVitais_w[i].vl_atributo_sv := null;
						end if;
						
						
					end if;
					
				end;
			end loop;
			
			for i in 1..atributoMonitorizacaoResp_w.count loop
			begin

				if (atributoMonitorizacaoResp_w[i](.vl_atributo_sv IS NOT NULL AND .vl_atributo_sv::text <> '')) then
		
						Select  coalesce(max('S'), 'N')
						into STRICT    ie_ignorar_item_sv_w
						
						where   ds_atributos_regra_min_w like '%'|| atributoMonitorizacaoResp_w[i].nm_atributo_sv || '%';
			
						if (ie_ignorar_item_sv_w <> 'S') then
							atributoMonitorizacaoResp_w[i].vl_atributo_sv := null;
						end if;
					
				end if;
				
			end;
			end loop;
						
			for i in 1..atributoMonitorizacaoHemo_w.count loop
				begin
			
					if (atributoMonitorizacaoHemo_w[i](.vl_atributo_sv IS NOT NULL AND .vl_atributo_sv::text <> '')) then
			
						Select  coalesce(max('S'), 'N')
						into STRICT    ie_ignorar_item_sv_w
						
						where   ds_atributos_regra_min_w like '%'|| atributoMonitorizacaoHemo_w[i].nm_atributo_sv || '%';
			
						if (ie_ignorar_item_sv_w <> 'S') then
							atributoMonitorizacaoHemo_w[i].vl_atributo_sv := null;
						end if;
					end if;
				end;
				end loop;
			
			
		end if;
		
		--- Cirurgico Alogenicos (  Falta realizar )
		
		If (ie_sinal_vital_w = 'S') then
			INS_ATEND_SINAL_VITAL;			
		end if;
		
		If (ie_monitorizacao_resp_w = 'S') then
			INS_ATEND_MONIT_RESP;			
		end if;
		
		If (ie_monitorizacao_hemo_w = 'S') then
			INS_ATEND_MONIT_HEMO;			
		end if;
		
		
		if ( ie_tem_suporte_decisao_w = 'S') and (coalesce(nr_seq_sinal_vital_w,0) > 0) then
			begin
			
			nr_regras_atendidas_w := GQA_Liberacao_Sinal_Vital(nr_seq_sinal_vital_w, nm_usuario_w);
			CALL gera_protocolo_assistencial(nr_atendimento_w, nm_usuario_w);
			
			Select  coalesce(max('S'),'N')
			into STRICT    qt_gerado_mentor_w
			from    gqa_pendencia_pac
			where   nr_seq_sinal_vital = nr_seq_sinal_vital_w;
				
			if (qt_gerado_mentor_w = 'S') then
			
				update  atendimento_sinal_vital
				set     ie_integracao_mentor =  'S'
				where   nr_sequencia = nr_seq_sinal_vital_w;
				
				commit;
			
			end if;
			
			exception
			when others then
					sql_errm_w := substr(sqlerrm,4000);
			end;
		 end if;

		if (coalesce(nr_seq_sinal_vital_w,0) > 0) then
			begin
        CALL release_vital_sign_integration(nr_seq_sinal_vital_w, nr_seq_monit_hemo_w, nr_seq_monit_resp_w, nr_atendimento_w, cd_estabelecimento_w);
			exception
			when others then
				update atendimento_sinal_vital set dt_liberacao = clock_timestamp() where nr_sequencia = nr_seq_sinal_vital_w;
				update atendimento_monit_resp  set dt_liberacao = clock_timestamp() where nr_sequencia = nr_seq_monit_resp_w;
				update atend_monit_hemod       set dt_liberacao = clock_timestamp() where nr_sequencia = nr_seq_monit_hemo_w;
				commit;
			end;
		end if;
		
	end if;	
			
	
end if;

	
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_sinal_vital_bifrost ( NR_ATENDIMENTO_P text, USERNAME_P text, DT_EVENTO_P text, QT_FREQ_CARDIACA_P text DEFAULT NULL, QT_SATURACAO_O2_P text DEFAULT NULL, QT_PAM_P text DEFAULT NULL, QT_PRESSAO_CUFF_P text DEFAULT NULL, QT_PVC_P text DEFAULT NULL, QT_PRESSAO_INTRA_CRANIO_P text DEFAULT NULL, QT_PPC_P text DEFAULT NULL, QT_MAEC_P text DEFAULT NULL, QT_VC_PROG_P text DEFAULT NULL, QT_CO2_P text DEFAULT NULL, QT_PA_SIST_P text DEFAULT NULL, QT_PA_DIAST_P text DEFAULT NULL, QT_PAM2_P text DEFAULT NULL, QT_PPLATO_P text DEFAULT NULL, QT_FIO2_P text DEFAULT NULL, QT_PEEP_P text DEFAULT NULL, QT_HALOG_EXP_P text DEFAULT NULL, QT_OXIG_INS_P text DEFAULT NULL, QT_OXIG_EXP_P text DEFAULT NULL, QT_OXIDO_NITROSO_EXP_P text DEFAULT NULL, QT_OXIDO_NITROSO_INSP_P text DEFAULT NULL, QT_SAT_VENOSA_O2_P text DEFAULT NULL, QT_CAM_P text DEFAULT NULL, QT_HALOG_INS_P text DEFAULT NULL, QT_FLUXO_OXIGENIO_P text DEFAULT NULL, QT_TI_P text DEFAULT NULL, QT_FREQ_RESP_P text DEFAULT NULL, QT_CDYN_P text DEFAULT NULL, QT_ICO2_P text DEFAULT NULL, QT_PRESSAO_INTRA_ABD_P text DEFAULT NULL, QT_PAE_P text DEFAULT NULL, QT_SEGMENTO_ST_P text DEFAULT NULL, QT_TOF_BLOQ_NEURO_MUSC_P text DEFAULT NULL, QT_SPO2R_P text DEFAULT NULL, QT_PA_SISTOLICA_P text DEFAULT NULL, QT_PA_DIASTOLICA_P text DEFAULT NULL, QT_FREQ_RESP_SINAL_P text DEFAULT NULL, QT_TEMP_P text DEFAULT NULL, IE_PA_MEDIA_AP_INFORMADA_P text DEFAULT NULL, QT_PVC_HEMOD_P text DEFAULT NULL, QT_DEBITO_CARD_P text DEFAULT NULL, QT_PA_MEDIA_AP_P text DEFAULT NULL, TX_INDICE_CARD_P text DEFAULT NULL, QT_PVD_SIST_P text DEFAULT NULL, QT_PA_SIST_AP_P text DEFAULT NULL, QT_PA_DIAST_AP_P text DEFAULT NULL, QT_SATUR_VEN_MISTA_OXIGENIO_P text DEFAULT NULL, QT_DELTA_PP_P text DEFAULT NULL, QT_VPS_P text DEFAULT NULL, QT_VVS_P text DEFAULT NULL, IE_TIPO_P text DEFAULT 'MR', IE_INTEGRACAO_EXTRA_P text DEFAULT 'N', CD_SETOR_ATENDIMENTO_P text default null, CD_UNIDADE_BASICA_P text default null, CD_UNIDADE_COMPL_P text default null, QT_FREQ_CARD_MONIT_P text DEFAULT NULL, IE_DERIVACAO_SEG_ST_P text DEFAULT NULL, IE_APARELHO_PA_P text DEFAULT NULL, IE_SITIO_P text DEFAULT NULL, QT_O2_SUPLEMENTAR_P text DEFAULT NULL, IE_RITMO_ECG_P text DEFAULT NULL, TX_RV_SISTEMICA_P text DEFAULT NULL, QT_RV_SISTEMICA_P text DEFAULT NULL, QT_VOLUME_SIST_P text DEFAULT NULL, QT_CONT_ART_VEN_OXIG_P text DEFAULT NULL, QT_FREQ_VENT_P text DEFAULT NULL, QT_AUTO_PEEP_P text DEFAULT NULL, QT_PIP_P text DEFAULT NULL, QT_PVA_P text DEFAULT NULL, QT_VCI_P text DEFAULT NULL, QT_RSR_P text DEFAULT NULL, QT_TE_P text DEFAULT NULL, QT_VMIN_P text DEFAULT NULL, QT_CST_P text DEFAULT NULL, QT_PS_P text DEFAULT NULL, QT_SENSIB_FLUXO_P text DEFAULT NULL, QT_FLUXO_INSP_P text DEFAULT NULL) FROM PUBLIC;

