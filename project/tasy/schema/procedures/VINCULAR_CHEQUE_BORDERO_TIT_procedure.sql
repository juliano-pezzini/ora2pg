-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE vincular_cheque_bordero_tit ( nr_seq_cheque_p bigint, nr_bordero_p bigint, nr_titulo_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_agencia_bancaria_w	varchar(255);
vl_cheques_w		double precision;
vl_cheque_w		double precision;
vl_titulo_w		double precision;
cd_estabelecimento_w	bigint;
vl_saldo_titulo_w	double precision;
ie_soma_cheque_maior_w	varchar(255);
ie_valida_vl_titulo_w	varchar(1);
/* Projeto Multimoeda - Variáveis */

cd_moeda_cheque_w	integer;
cd_moeda_bordero_w	integer;


BEGIN

if (nr_seq_cheque_p IS NOT NULL AND nr_seq_cheque_p::text <> '') and
	((nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') or (nr_bordero_p IS NOT NULL AND nr_bordero_p::text <> '')) then

	select	cd_agencia_bancaria,
		vl_cheque,
		cd_estabelecimento,
		cd_moeda
	into STRICT	cd_agencia_bancaria_w,
		vl_cheque_w,
		cd_estabelecimento_w,
		cd_moeda_cheque_w
	from	cheque
	where	nr_sequencia	= nr_seq_cheque_p;

	ie_soma_cheque_maior_w := obter_param_usuario(127, 38, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_soma_cheque_maior_w);
	ie_valida_vl_titulo_w := obter_param_usuario(127, 50, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_valida_vl_titulo_w);
	if (ie_soma_cheque_maior_w	= 'N') and (coalesce(nr_titulo_p,0) > 0) then

		select	vl_titulo,
			vl_saldo_titulo
		into STRICT	vl_titulo_w,
			vl_saldo_titulo_w
		from	titulo_pagar
		where	nr_titulo	= nr_titulo_p;

		select	coalesce(sum(c.vl_cheque),0)
		into STRICT	vl_cheques_w
		from	cheque c,
			cheque_bordero_titulo b
		where	c.nr_sequencia 	= b.nr_seq_cheque
		and	b.nr_titulo	= nr_titulo_p
		and	coalesce(c.dt_cancelamento::text, '') = '';

		/* Valida pelo saldo do título quando indicado no parâmetro 50 da digitação de cheques */

		if (coalesce(ie_valida_vl_titulo_w,'T') = 'S') then
			if	((vl_cheques_w + coalesce(vl_cheque_w,0)) > vl_saldo_titulo_w) then
				-- A soma dos cheques vinculados ao título #@NR_TITULO#@ supera o saldo do título! Parâmetro [38]
				CALL wheb_mensagem_pck.exibir_mensagem_abort(361924, 'NR_TITULO_P=' || nr_titulo_p);
			end if;
		else
			if	((vl_cheques_w + coalesce(vl_cheque_w,0)) > vl_titulo_w) then
				-- A soma dos cheques vinculados ao título #@NR_TITULO#@ supera o valor do título! Parâmetro [38]
				CALL wheb_mensagem_pck.exibir_mensagem_abort(266898, 'NR_TITULO=' || nr_titulo_p);
			end if;
		end if;
	end if;

	/* Projeto Multimoeda - Busca a moeda do borderô e verifica se a moeda do cheque e do borderô são diferentes,
			caso positivo não deixa vincular o cheque ao borderô.*/
	if (nr_bordero_p IS NOT NULL AND nr_bordero_p::text <> '') then
		select max(cd_moeda)
		into STRICT cd_moeda_bordero_w
		from bordero_pagamento
		where nr_bordero = nr_bordero_p;

		if (cd_moeda_cheque_w IS NOT NULL AND cd_moeda_cheque_w::text <> '') and (cd_moeda_bordero_w IS NOT NULL AND cd_moeda_bordero_w::text <> '')
			and (cd_moeda_cheque_w <> cd_moeda_bordero_w) then
			-- A moeda do cheque deve ser a mesma do borderô.
			CALL wheb_mensagem_pck.exibir_mensagem_abort(343694);
		end if;
	end if;

	if (cd_agencia_bancaria_w IS NOT NULL AND cd_agencia_bancaria_w::text <> '') then

		insert	into	cheque_bordero_titulo(nr_sequencia,
			cd_banco,
			cd_agencia_bancaria,
			nr_cheque,
			dt_atualizacao,
			nm_usuario,
			nr_bordero,
			nr_titulo,
			nr_seq_cheque)
		SELECT	nextval('cheque_bordero_titulo_seq'),
			cd_banco,
			cd_agencia_bancaria,
			nr_cheque,
			clock_timestamp(),
			nm_usuario_p,
			nr_bordero_p,
			nr_titulo_p,
			nr_sequencia
		from	cheque
		where	nr_sequencia	= nr_seq_cheque_p;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vincular_cheque_bordero_tit ( nr_seq_cheque_p bigint, nr_bordero_p bigint, nr_titulo_p bigint, nm_usuario_p text) FROM PUBLIC;

