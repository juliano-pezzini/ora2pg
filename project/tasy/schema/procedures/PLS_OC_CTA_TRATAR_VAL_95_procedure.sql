-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_95 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Aplicar a validação de dados de Obito.

1 - A validação vai gerar ocorrência APENAS se o motivo de encerramento não for de Óbito.
2 - Para a validação ser executada, deverá possuir algum registro dentro da pasta "Óbito".
3 - Os checkbox "Validar declaração de Óbito" e "Validar CID" não obrigam a respectiva informação na pasta "Óbito".
4 - Quando o checkbox "Validar declaração de Óbito" estiver marcado:
	a) Será verificado na pasta ¿Óbito¿ se a declaração foi informada
	b) Se estiver informada, será verificado o motivo da saída de internação
	c) Se não possuir a declaração de óbito, a validação não irá gerar nada
5 - Quando o checkbox "Validar CID" estiver marcado:
	a) Será verificado na pasta ¿Óbito¿ se o CID foi informado
	b) Se estiver informado, será verificado o motivo da saída de internação
	c) Se não possuir o CID, a validação não irá gerar nada
6 - Quando o checkbox "Validar CID" e "Validar declaração de Óbito" estiverem marcados:
	a) Será verificado na pasta ¿Óbito¿ se o CID e a declaração de Óbito estão informadas
	b) Se ambas estiverem informadas, será verificado o motivo da saída de internação
	c) Se não possuir o CID ou a declaração de Óbito, a validação não irá gerar nada
7 - Quando o checkbox "Validar CID" e "Validar declaração de Óbito" não estiverem marcados:
	a) Será verificado o motivo da saída de internação, desde que possua qualquer registro na pasta ¿Óbito¿.
8 - Um motivo de saida será considerado de Óbito, quando o mesmo estiver preenchido na flag "Óbito" no cadastro Shift + F11 Plano de saúde -> OPS - Contas médicas -> Motivos de encerramento. Assim será permitido maior flexibilidade para a regra.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
i				integer;
dados_tb_sel_w			pls_tipos_ocor_pck.dados_table_selecao_ocor;
ie_gera_ocorrencia_w		varchar(1);
cd_doenca_w			pls_diagnost_conta_obito.cd_doenca%type;
nr_declaracao_obito_w		pls_diagnost_conta_obito.nr_declaracao_obito%type;
nr_declaracao_obito_alt_w	pls_diagnost_conta_obito.nr_declaracao_obito%type;
ds_observacao_w			pls_selecao_ocor_cta.ds_observacao%type;

-- Informações da regra
C01 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
	SELECT	coalesce(a.ie_declaracao_obito, 'N') ie_declaracao_obito,
		coalesce(a.ie_cid_obito, 'N') ie_cid_obito,
		coalesce(a.ie_diag_obito, 'N') ie_diag_obito,
		ds_carac_valido
	from	pls_oc_cta_val_dados_obito	a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p; -- tem que verificar pelo menos o CID OU declaração de obito
-- carrega as contas que contemplarem a regra de glosa e possuam algum tipo de obito
C02 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_ocor_v.nr_id_transacao%type) FOR
	SELECT	a.nr_seq_conta,
		(SELECT	max(d.ie_obito)
		from	pls_motivo_saida d
		where	d.nr_sequencia = a.nr_seq_saida_int) ie_obito,
		(select count(1)
		from	pls_diagnost_conta_obito c
		where	c.nr_seq_conta = a.nr_seq_conta) cont_diagnost_conta_obito
	from	pls_conta_ocor_v		a,
		pls_selecao_ocor_cta		b
	where	a.nr_seq_conta		= b.nr_seq_conta
	and	b.nr_id_transacao	= nr_id_transacao_pc
	and	b.ie_valido 		= 'S';
BEGIN
-- somente executa se tem regra
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '')  then
	-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
	CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);
	pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_sel_w);
	i := 0;
	-- carrega a regra
	for	r_C01_w in C01( dados_regra_p.nr_sequencia) loop
		-- valida as contas (o cursor já filtra as contas que possuem algum registro na pasta Óbito)
		for	r_C02_w in C02(	nr_id_transacao_p) loop
			nr_declaracao_obito_w := null;
			if (r_C02_w.cont_diagnost_conta_obito > 0) then
				select	cd_doenca,
					nr_declaracao_obito
				into STRICT	cd_doenca_w,
					nr_declaracao_obito_w
				from	pls_diagnost_conta_obito
				where	nr_seq_conta = r_C02_w.nr_seq_conta;
			end if;

			ie_gera_ocorrencia_w := 'N';
			dados_tb_sel_w.ds_observacao(i) := null;
			ds_observacao_w := null;

			if (r_C01_w.ds_carac_valido IS NOT NULL AND r_C01_w.ds_carac_valido::text <> '') then
				if (nr_declaracao_obito_w IS NOT NULL AND nr_declaracao_obito_w::text <> '') then
					nr_declaracao_obito_alt_w := regexp_replace(nr_declaracao_obito_w, '[^'||r_c01_w.ds_carac_valido ||']', '');

					if	((nr_declaracao_obito_alt_w <> nr_declaracao_obito_w) or (coalesce(nr_declaracao_obito_alt_w::text, '') = '')) then
						ds_observacao_w	:= 'Declaração de óbito com caracteres inválidos.';
					end if;
				end if;
			end if;

			-- Duas condições aqui, a primeira vai avaliar o que foi informado na regra, as combinações de DO e CID
			--  A Segunda confirma se o motivo de saida é diferente de obito
			if	((-- Valida se necessário APENAS o D.O.
				 ((r_C01_w.ie_declaracao_obito = 'S') and (nr_declaracao_obito_w IS NOT NULL AND nr_declaracao_obito_w::text <> '') and (r_C01_w.ie_cid_obito = 'N')) or
				 -- OU valida se necessário APENAS CID
				 ((r_C01_w.ie_cid_obito = 'S') and (cd_doenca_w IS NOT NULL AND cd_doenca_w::text <> '') and (r_C01_w.ie_declaracao_obito = 'N')) or
				 -- OU se for necessário validar D.O E CID
				 ((r_C01_w.ie_declaracao_obito = 'S') and (nr_declaracao_obito_w IS NOT NULL AND nr_declaracao_obito_w::text <> '') and (r_C01_w.ie_cid_obito = 'S') and (cd_doenca_w IS NOT NULL AND cd_doenca_w::text <> '')) or
				 -- OU se não for necessario nem D.O. E nem CID, tabém valida o motivo de saida
				 (r_C01_w.ie_declaracao_obito = 'N' AND r_C01_w.ie_cid_obito = 'N')) and
				-- Segunda parte, tem que te possuir o motivo de saida de internação diferente de Óbito
				(r_C02_w.ie_obito <> 'S')) or
				(((r_C01_w.ie_diag_obito = 'S') and (r_C02_w.cont_diagnost_conta_obito <= 0) and (r_C02_w.ie_obito = 'S'))) or (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then

				if (coalesce(ds_observacao_w::text, '') = '') then
					ds_observacao_w := 'O motivo de saida não é utilizado para óbito';
				end if;
				dados_tb_sel_w.nr_seq_selecao(i) := r_C02_w.nr_seq_conta;
				dados_tb_sel_w.ds_observacao(i) := ds_observacao_w;
				dados_tb_sel_w.ie_valido(i) := 'S';
				ie_gera_ocorrencia_w := 'S';
			end if;

			if (ie_gera_ocorrencia_w = 'S') then

				if ( i >= pls_util_pck.qt_registro_transacao_w) then

					CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_sel_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
											'SEQ_CONTA', dados_tb_sel_w.ds_observacao, dados_tb_sel_w.ie_valido, nm_usuario_p, nr_id_transacao_p);
					pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_sel_w);
					i := 0;
				else
					i := i + 1;
				end if;
			end if;
		end loop; -- C02
	end loop; -- C01
CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_sel_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
						'SEQ_CONTA', dados_tb_sel_w.ds_observacao, dados_tb_sel_w.ie_valido, nm_usuario_p, nr_id_transacao_p);
-- seta os registros que serão válidos ou inválidos após o processamento
CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_95 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

