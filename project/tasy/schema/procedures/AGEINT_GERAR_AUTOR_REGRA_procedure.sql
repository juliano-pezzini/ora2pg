-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_gerar_autor_regra ( nr_seq_ageint_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_proc_interno_w		bigint;
nr_seq_agenda_cons_w		agenda_integrada_item.nr_seq_agenda_cons%type;
nr_seq_agenda_exame_w		agenda_integrada_item.nr_seq_agenda_exame%type;
nr_seq_agenda_proc_adic_w		agenda_paciente_proc.nr_seq_agenda%type;
nr_seq_agenda_cons_adic_w		agenda_consulta_proc.nr_sequencia%type;		
ie_tipo_agendamento_w		varchar(15);
ds_retorno_w			varchar(255);
ie_status_agenda_w		varchar(3);

C01 CURSOR FOR
	SELECT	nr_seq_proc_interno,
		nr_seq_agenda_cons,
		nr_seq_agenda_exame,
		ie_tipo_agendamento
	from	agenda_integrada_item
	where	nr_seq_agenda_int		= nr_seq_ageint_p
	and (coalesce(nr_seq_agenda_cons,0)	> 0
	or	coalesce(nr_seq_agenda_exame,0)	> 0);

c02 CURSOR FOR
	SELECT 	nr_seq_agenda
	from	agenda_paciente_proc
	where	nr_sequencia 	= nr_seq_agenda_exame_w;	


c03 CURSOR FOR
	SELECT 	nr_sequencia
	from	agenda_consulta_proc
	where	nr_seq_agenda 	= nr_seq_agenda_cons_w;

opme CURSOR FOR
	SELECT	nr_sequencia,
		coalesce(ie_gerar_autor, 'S') ie_gerar_autor
	from	agenda_pac_opme
	where	nr_seq_agenda = nr_seq_agenda_exame_w;
	
BEGIN

open C01;
loop
fetch C01 into	
	nr_seq_proc_interno_w,
	nr_seq_agenda_cons_w,
	nr_seq_agenda_exame_w,
	ie_tipo_agendamento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (coalesce(nr_seq_Agenda_cons_w,0)	> 0) then
		if (ie_tipo_agendamento_w <> 'S') then

			CALL gerar_autor_regra(null,null,null,null,null,null,'AC',nm_usuario_p,null,null,null,nr_seq_agenda_cons_w,null,null,'','','');
			open C03;
			loop
			fetch C03 into	
				nr_seq_agenda_cons_adic_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				CALL gerar_autor_regra(null,null,null,null,null,null,'AC',nm_usuario_p,null,null,null,nr_seq_agenda_cons_w,null,nr_seq_agenda_cons_adic_w,'','','');
			end loop;
			close C03;
		else
			CALL gerar_autor_regra(null,null,null,null,null,null,'AS',nm_usuario_p,null,nr_seq_proc_interno_w,null,nr_seq_agenda_cons_w,null,null,'','','');
			open C03;
			loop
			fetch C03 into	
				nr_seq_agenda_cons_adic_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				CALL gerar_autor_regra(null,null,null,null,null,null,'AS',nm_usuario_p,null,null,null,nr_seq_agenda_cons_w,null,nr_seq_agenda_cons_adic_w,'','','');
			end loop;
			close C03;
		end if;
	else
		select	max(ie_status_agenda)
		into STRICT	ie_status_agenda_w
		from	agenda_paciente
		where	nr_sequencia = nr_seq_agenda_exame_w;
		
		if (ie_status_agenda_w <> 'C') then
			CALL gerar_autor_regra(null,null,null,null,null,null,'AP',nm_usuario_p,nr_seq_agenda_exame_w,nr_seq_proc_interno_w,null,null,null,null,'','','');
		end if;
		
		/*lhalves OS210616 em 07/05/2010 - Gerar autorizacao para os procedimentos adicionais.*/

		open C02;
		loop
		fetch C02 into	
			nr_seq_agenda_proc_adic_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			CALL gerar_autor_regra(null,null,null,null,null,null,'AP',nm_usuario_p,nr_seq_agenda_exame_w,null,null,null,null,nr_seq_agenda_proc_adic_w,'','','');
		end loop;
		close C02;
		
		/*
			nfcunha
			OS 2234310
			Gerar autorizacao para os itens opme
		*/
		for item in opme loop
			if item.ie_gerar_autor = 'S' then
				CALL gerar_autor_regra(null,null,null,null,null,null,'AP',nm_usuario_p,nr_seq_agenda_exame_w,null,null,null,item.nr_sequencia,null,'','','');
			end if;
		end loop;
		
	end if;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_gerar_autor_regra ( nr_seq_ageint_p bigint, nm_usuario_p text) FROM PUBLIC;

