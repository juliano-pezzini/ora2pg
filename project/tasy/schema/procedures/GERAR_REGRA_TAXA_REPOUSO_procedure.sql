-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_regra_taxa_repouso ( nr_atendimento_p bigint, dt_internacao_alta_p timestamp, nm_usuario_p text) AS $body$
DECLARE


cd_setor_atendimento_w	integer;
cd_unidade_basica_w	varchar(10);
cd_unidade_compl_w	varchar(10);
dt_entrada_unidade_w	timestamp;
dt_saida_unidade_w	timestamp;
nr_seq_atepacu_w	bigint;
qt_regra_w		bigint;
qt_tempo_setor_w	bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_proc_interno_w	bigint;
nr_interno_conta_w	bigint;
qt_tempo_min_w		bigint;
qt_tempo_max_w		bigint;
qt_procedimento_w	double precision;
nr_sequencia_w		bigint;
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
nr_doc_convenio_w	varchar(20);
cd_estabelecimento_w	smallint;
qt_taxa_repouso_w	bigint;
qt_item_w		double precision;
cd_plano_w		varchar(10);
cd_tipo_acomodacao_w	smallint;
ie_regra_quantidade_w	varchar(1);
ie_regra_aux_w		varchar(1);
qt_min_tolerancia_w	bigint;
ie_restringe_periodo_w	varchar(1);
ie_medico_executor_w	varchar(10);
cd_medico_executor_w	varchar(10);
cd_pessoa_fisica_w	varchar(10);
cd_cgc_prest_regra_w	varchar(14);
ie_tipo_atendimento_w	smallint;
nr_seq_classificacao_w	bigint;
cd_medico_exec_w	varchar(10);
cd_medico_laudo_sus_w	varchar(10);
cd_cbo_w		varchar(6) := '';
ie_atual_cid_w		varchar(15) := 'N';
cd_cid_w		varchar(4);

C01 CURSOR FOR
	SELECT	cd_setor_atendimento,
		cd_unidade_basica,
		cd_unidade_compl,
		dt_entrada_unidade,
		coalesce(dt_saida_unidade, dt_internacao_alta_p),
		nr_seq_interno
	from	atend_paciente_unidade
	where	nr_atendimento = nr_atendimento_p
	order by	dt_entrada_unidade;

C02 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno,
		qt_item,
		coalesce(qt_min_tolerancia,0),
		qt_tempo_min,
		qt_tempo_max,
		ie_restringe_periodo
	from	conv_regra_taxa_repouso
	where	ie_situacao = 'A'
	and	cd_convenio = cd_convenio_w
	and	cd_setor_atendimento = cd_setor_atendimento_w
	and	coalesce(cd_unidade_basica, cd_unidade_basica_w) = cd_unidade_basica_w
	and	coalesce(cd_unidade_compl, cd_unidade_compl_w) = cd_unidade_compl_w
	and	qt_tempo_min < coalesce(qt_tempo_setor_w,0)
	and	((coalesce(ie_restringe_periodo,'N') = 'N') or ((coalesce(ie_restringe_periodo,'N') = 'S') and (coalesce(qt_tempo_setor_w,0) between qt_tempo_min and qt_tempo_max)))
	and	((ie_regra_quantidade_w = 'N') or ((coalesce(qt_item,0) <> 0) and (ie_regra_quantidade_w = 'S')))
	and 	((coalesce(nr_seq_proc_int_conta,0) = 0) or (exists (SELECT 	1
								from 	procedimento_paciente x
								where 	x.nr_atendimento = nr_atendimento_p
								and 	nr_seq_proc_interno = nr_seq_proc_int_conta
								and 	coalesce(cd_motivo_exc_conta::text, '') = '')))
	order by coalesce(nr_seq_proc_int_conta,0);

BEGIN

select	count(*)
into STRICT	qt_taxa_repouso_w
from	procedimento_paciente
where	nr_atendimento = nr_atendimento_p
and	nr_seq_cor_exec = 3320;

if (coalesce(qt_taxa_repouso_w,0) = 0) then

	select	max(cd_estabelecimento),
		max(ie_tipo_atendimento),
		max(nr_seq_classificacao)
	into STRICT	cd_estabelecimento_w,
		ie_tipo_atendimento_w,
		nr_seq_classificacao_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;

	select	max(cd_convenio),
		max(cd_categoria),
		max(nr_doc_convenio),
		max(cd_plano_convenio),
		max(cd_tipo_acomodacao)
	into STRICT	cd_convenio_w,
		cd_categoria_w,
		nr_doc_convenio_w,
		cd_plano_w,
		cd_tipo_acomodacao_w
	from	atend_categoria_convenio
	where	nr_atendimento = nr_atendimento_p
	and	nr_seq_interno = obter_atecaco_atendimento(nr_atendimento);

	ie_regra_quantidade_w	:= 'N';
	ie_regra_aux_w		:= 'N';

	open C01;
	loop
	fetch C01 into
		cd_setor_atendimento_w,
		cd_unidade_basica_w,
		cd_unidade_compl_w,
		dt_entrada_unidade_w,
		dt_saida_unidade_w,
		nr_seq_atepacu_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		qt_tempo_setor_w	:= trunc((dt_saida_unidade_w - dt_entrada_unidade_w) * 1440);

		select	count(*)
		into STRICT	qt_regra_w
		from	conv_regra_taxa_repouso
		where	ie_situacao = 'A'
		and	cd_setor_atendimento = cd_setor_atendimento_w
		and	coalesce(cd_unidade_basica, cd_unidade_basica_w) = cd_unidade_basica_w
		and	coalesce(cd_unidade_compl, cd_unidade_compl_w) = cd_unidade_compl_w
		and	qt_tempo_min <= coalesce(qt_tempo_setor_w,0);

		if (qt_regra_w > 0) then

			open C02;
			loop
			fetch C02 into
				cd_procedimento_w,
				ie_origem_proced_w,
				nr_seq_proc_interno_w,
				qt_item_w,
				qt_min_tolerancia_w,
				qt_tempo_min_w,
				qt_tempo_max_w,
				ie_restringe_periodo_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin

				if (coalesce(qt_item_w,0) > 0) then
					ie_regra_aux_w	:= 'S';
				end if;

				end;
			end loop;
			close C02;

		end if;

		end;
	end loop;
	close C01;

	ie_regra_quantidade_w	:= ie_regra_aux_w;

	open C01;
	loop
	fetch C01 into
		cd_setor_atendimento_w,
		cd_unidade_basica_w,
		cd_unidade_compl_w,
		dt_entrada_unidade_w,
		dt_saida_unidade_w,
		nr_seq_atepacu_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		qt_tempo_setor_w	:= trunc((dt_saida_unidade_w - dt_entrada_unidade_w) * 1440);

		select	count(*)
		into STRICT	qt_regra_w
		from	conv_regra_taxa_repouso
		where	ie_situacao = 'A'
		and	cd_setor_atendimento = cd_setor_atendimento_w
		and	coalesce(cd_unidade_basica, cd_unidade_basica_w) = cd_unidade_basica_w
		and	coalesce(cd_unidade_compl, cd_unidade_compl_w) = cd_unidade_compl_w
		and	qt_tempo_min <= coalesce(qt_tempo_setor_w,0);

		if (qt_regra_w > 0) then

			open C02;
			loop
			fetch C02 into
				cd_procedimento_w,
				ie_origem_proced_w,
				nr_seq_proc_interno_w,
				qt_item_w,
				qt_min_tolerancia_w,
				qt_tempo_min_w,
				qt_tempo_max_w,
				ie_restringe_periodo_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				qt_procedimento_w	:= 0;

				if (coalesce(nr_seq_proc_interno_w,0) > 0) then
					SELECT * FROM Obter_Proc_Tab_Interno_Conv(nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, cd_setor_atendimento_w, dt_saida_unidade_w, cd_tipo_acomodacao_w, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
				end if;

				if (qt_item_w IS NOT NULL AND qt_item_w::text <> '') then
					qt_procedimento_w	:= qt_item_w;
				elsif (qt_tempo_max_w	> qt_tempo_setor_w) then
					qt_procedimento_w	:= trunc(dividir(qt_tempo_setor_w - qt_tempo_min_w, 60));

					if (mod(qt_tempo_setor_w - qt_tempo_min_w,60) > qt_min_tolerancia_w) then
						qt_procedimento_w	:= qt_procedimento_w + 1;
					end if;
				else
					qt_procedimento_w	:= trunc(dividir(qt_tempo_max_w - qt_tempo_min_w, 60));

					if (mod(qt_tempo_max_w - qt_tempo_min_w,60) > qt_min_tolerancia_w) then
						qt_procedimento_w	:= qt_procedimento_w + 1;
					end if;
				end if;

				if (coalesce(qt_procedimento_w,0) <> 0) and (coalesce(cd_procedimento_w,0) > 0) and (coalesce(ie_origem_proced_w,0) > 0) then

					select	nextval('procedimento_paciente_seq')
					into STRICT	nr_sequencia_w
					;

					SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, null, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_prest_regra_w, cd_medico_executor_w, cd_pessoa_fisica_w, null, dt_saida_unidade_w, nr_seq_classificacao_w, null, null, null) INTO STRICT ie_medico_executor_w, cd_cgc_prest_regra_w, cd_medico_executor_w, cd_pessoa_fisica_w;

					if (cd_medico_executor_w IS NOT NULL AND cd_medico_executor_w::text <> '') and (coalesce(cd_medico_exec_w::text, '') = '') then
						cd_medico_exec_w	:= cd_medico_executor_w;
					end if;

					if (coalesce(cd_medico_executor_w::text, '') = '') and (ie_medico_executor_w = 'N') then
						cd_medico_exec_w	:= null;
					end if;

					if (ie_medico_executor_w		= 'S') then
						select	max(cd_medico_requisitante)
						into STRICT	cd_medico_laudo_sus_w
						from	sus_laudo_paciente
						where	nr_atendimento	= nr_atendimento_p
						and	cd_procedimento_solic	= cd_procedimento_w
						and	ie_origem_proced 	= ie_origem_proced_w;

						cd_medico_exec_w	:= coalesce(cd_medico_laudo_sus_w,cd_medico_exec_w);
					end if;

					if (ie_medico_executor_w		= 'M') then
						begin
						cd_medico_laudo_sus_w	:= sus_obter_dados_sismama_atend(nr_atendimento_p,'M','CMR');
						cd_medico_exec_w 	:= coalesce(cd_medico_laudo_sus_w,cd_medico_exec_w);
						end;
					end if;

					if (ie_medico_executor_w = 'A') and (coalesce(cd_medico_exec_w::text, '') = '') then
						select	max(cd_medico_resp)
						into STRICT	cd_medico_exec_w
						from	atendimento_paciente
						where	nr_atendimento = nr_atendimento_p;
					end if;

					if (ie_medico_executor_w	= 'F') and (cd_medico_executor_w IS NOT NULL AND cd_medico_executor_w::text <> '') then
						cd_medico_exec_w	:= cd_medico_executor_w;
					end if;

					if (ie_medico_executor_w = 'Y') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
						cd_pessoa_fisica_w	:= null;
					end if;

					if (ie_origem_proced_w = 7) then
						begin
						select	max(a.cd_cbo)
						into STRICT	cd_cbo_w
						from    sus_cbo                 b,
							sus_cbo_pessoa_fisica   a
						where   sus_obter_secbo_compativel(coalesce(cd_medico_exec_w,cd_pessoa_fisica_w), cd_procedimento_w, ie_origem_proced_w, clock_timestamp(), a.cd_cbo, 0) = 'S'
						and     cd_pessoa_fisica        = coalesce(cd_medico_exec_w,cd_pessoa_fisica_w)
						and     a.cd_cbo        	= b.cd_cbo;
						end;

						select	coalesce(max(obter_valor_param_usuario(1125, 18, obter_perfil_ativo, nm_usuario_p, 0)), 'N')
						into STRICT	ie_atual_cid_w
						;

						if (ie_atual_cid_w = 'S') and (Sus_Obter_Se_Proc_Bpa(null,cd_procedimento_w) = 'S') then
							begin
							select	coalesce(max(b.cd_doenca),'')
							into STRICT	cd_cid_w
							from	diagnostico_doenca	b,
								diagnostico_medico	a
							where	a.nr_atendimento	= b.nr_atendimento
							and	a.dt_diagnostico	= b.dt_diagnostico
							and	a.cd_medico		= cd_medico_exec_w
							and	a.nr_atendimento	= nr_atendimento_p;
							end;
						end if;

						if (cd_medico_exec_w IS NOT NULL AND cd_medico_exec_w::text <> '') then
							cd_pessoa_fisica_w	:= null;
						end if;

					end if;

					insert into procedimento_paciente(	nr_sequencia, nr_atendimento, dt_entrada_unidade, cd_procedimento, nr_seq_proc_interno,
							dt_procedimento, qt_procedimento, dt_atualizacao, nm_usuario, cd_convenio,
							cd_categoria, vl_procedimento, vl_medico, vl_anestesista, vl_materiais,
							dt_acerto_conta, vl_auxiliares, vl_custo_operacional, tx_medico,
							tx_anestesia, nr_doc_convenio, dt_conta, cd_setor_atendimento,
							ie_origem_proced, nr_seq_atepacu, ie_auditoria, ds_observacao, nr_seq_cor_exec,
							cd_cgc_prestador,cd_medico_executor,cd_cbo,cd_doenca_cid,cd_pessoa_fisica)
					values (	nr_sequencia_w, nr_atendimento_p, dt_entrada_unidade_w,	cd_procedimento_w, nr_seq_proc_interno_w,
							dt_saida_unidade_w, qt_procedimento_w, clock_timestamp(), nm_usuario_p, cd_convenio_w,
							cd_categoria_w, 0, 0, 0, 0,
							null, 0, 0, 0,
							0, nr_doc_convenio_w, dt_saida_unidade_w, cd_setor_atendimento_w,
							ie_origem_proced_w, nr_seq_atepacu_w, 'N', OBTER_DESC_EXPRESSAO(729116), 3320,					-- 729116: 'Gerado pela regra taxa repouso.'
							cd_cgc_prest_regra_w,cd_medico_exec_w,cd_cbo_w,cd_cid_w,cd_pessoa_fisica_w);

					CALL Atualiza_Preco_Procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);

					CALL gerar_lancamento_automatico(nr_atendimento_p,null,34,nm_usuario_p,nr_sequencia_w,null,null,null,null,null);
				end if;
				end;
			end loop;
			close C02;
		end if;

		end;
	end loop;
	close C01;
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_regra_taxa_repouso ( nr_atendimento_p bigint, dt_internacao_alta_p timestamp, nm_usuario_p text) FROM PUBLIC;

