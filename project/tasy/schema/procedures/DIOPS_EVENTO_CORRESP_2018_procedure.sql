-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE diops_evento_corresp_2018 ( nm_usuario_p text, nr_seq_periodo_p bigint, cd_estabelecimento_p bigint) AS $body$
DECLARE


vl_sub_titulo_w 		smallint;
vl_item_quadro_w		smallint;
qt_count_plano_w		smallint;
qt_count_cobertura_w		smallint;
qt_count_origem_corresp_w	smallint;
qt_count_origem_event_w		smallint;
qt_count_moviment_corresp_w	smallint;
qt_count_moviment_event_w	smallint;

dt_referencia_w			timestamp;
ds_plano_w			diops_contr_ev_corresp_en.ds_plano%type;
nr_seq_mes_ref_w		ctb_mes_ref.nr_sequencia%type;
vl_conta_rec_w			ctb_saldo.vl_saldo%type;
vl_conta_rec_ww			ctb_saldo.vl_saldo%type;
vl_conta_desp_w			ctb_saldo.vl_saldo%type;
vl_conta_desp_ww		ctb_saldo.vl_saldo%type;
cd_empresa_w			empresa.cd_empresa%type;

BEGIN

select	cd_empresa
into STRICT 	cd_empresa_w
from	estabelecimento
where 	cd_estabelecimento = cd_estabelecimento_p;

/* Obtem o valor das contas 3.1.1.7.1.1, 3.1.1.7.1.2, 4.1.1.1.1.1, e 4.1.1.1.1.2 do balancete de dezembro/2018*/

dt_referencia_w := pkg_date_utils.start_of(pkg_date_utils.get_date(2018, 12, 1), 'MONTH');

select 	max(nr_sequencia)
into STRICT	nr_seq_mes_ref_w
from 	ctb_mes_ref
where 	pkg_date_utils.start_of(dt_referencia, 'MONTH') = dt_referencia_w
and	cd_empresa = cd_empresa_w;

select	coalesce(sum(vl_saldo), 0) vl_saldo
into STRICT 	vl_conta_rec_w
from	ctb_balancete_v
where	cd_estabelecimento		= cd_estabelecimento_p
and	nr_seq_mes_ref			= nr_seq_mes_ref_w
and	substr(obter_se_conta_vigente(cd_conta_contabil, ctb_obter_mes_ref(nr_seq_mes_ref)),1,1) = 'S'
and 	ctb_obter_classif_conta(cd_conta_contabil, null, dt_referencia_w)		= '3.1.1.7.1.1';

select	coalesce(sum(vl_saldo), 0) vl_saldo
into STRICT 	vl_conta_rec_ww
from	ctb_balancete_v
where	cd_estabelecimento		= cd_estabelecimento_p
and	nr_seq_mes_ref			= nr_seq_mes_ref_w
and	substr(obter_se_conta_vigente(cd_conta_contabil, ctb_obter_mes_ref(nr_seq_mes_ref)),1,1) = 'S'
and 	ctb_obter_classif_conta(cd_conta_contabil, null, dt_referencia_w)		= '3.1.1.7.1.2';

select	coalesce(sum(vl_saldo), 0) vl_saldo
into STRICT 	vl_conta_desp_w
from	ctb_balancete_v
where	cd_estabelecimento		= cd_estabelecimento_p
and	nr_seq_mes_ref			= nr_seq_mes_ref_w
and	substr(obter_se_conta_vigente(cd_conta_contabil, ctb_obter_mes_ref(nr_seq_mes_ref)),1,1) = 'S'
and 	ctb_obter_classif_conta(cd_conta_contabil, null, dt_referencia_w)		= '4.1.1.1.1.1';

select	coalesce(sum(vl_saldo), 0) vl_saldo
into STRICT 	vl_conta_desp_ww
from	ctb_balancete_v
where	cd_estabelecimento		= cd_estabelecimento_p
and	nr_seq_mes_ref			= nr_seq_mes_ref_w
and	substr(obter_se_conta_vigente(cd_conta_contabil, ctb_obter_mes_ref(nr_seq_mes_ref)),1,1) = 'S'
and 	ctb_obter_classif_conta(cd_conta_contabil, null, dt_referencia_w)		= '4.1.1.1.1.2';

vl_sub_titulo_w 	:= 1;
vl_item_quadro_w 	:= 7;

/* 
	Os "sub-titulos" para o quadro Corresponsabilidade sao os valores 1, 2, 3, 4, 5 e 6 do dominio, enquanto os itens que estao dentro deles sao os valores 7, 8 e 9.
	Os "sub-titulos" para o quadro Eventos sao os valores 1, 2, 3, 4, 5 e 6 do dominio, enquanto os itens que estao dentro deles sao os valores 12, 13, 14, 15 e 16 .

	Ao final de ambos os quadros, ha linhas para os valores 12 e 13 do dominio

	O tratamento abaixo gera essas informacoes com os valores zerados.
*/
while(vl_sub_titulo_w <= 6) loop
	begin

	insert into diops_contrap_ev_corresp(	nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_estabelecimento,
						cd_tipo_movimento,
						cd_tipo_movimento_sup,
						ie_tipo_evento,
						nr_seq_periodo,
						vl_preco_pre_corresp_pre,
						vl_preco_pre_corresp_pos,
						vl_preco_pos_corresp_pre,
						vl_preco_pos_corresp_pos,
						vl_preco_pre_cart_propr,
						vl_preco_pre_corresp_assum,
						vl_preco_pos_cart_propr,
						vl_preco_pos_corresp_assum
						)
					values (nextval('diops_contrap_ev_corresp_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_estabelecimento_p,
						vl_sub_titulo_w,
						null,
						'CE',
						nr_seq_periodo_p,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null);

	/* Quadro corresponsabilidade*/

	while(vl_item_quadro_w <= 9) loop
		insert into diops_contrap_ev_corresp(	nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							cd_estabelecimento,
							cd_tipo_movimento,
							cd_tipo_movimento_sup,
							ie_tipo_evento,
							nr_seq_periodo,
							vl_preco_pre_corresp_pre,
							vl_preco_pre_corresp_pos,
							vl_preco_pos_corresp_pre,
							vl_preco_pos_corresp_pos,
							vl_preco_pre_cart_propr,
							vl_preco_pre_corresp_assum,
							vl_preco_pos_cart_propr,
							vl_preco_pos_corresp_assum)
						values (nextval('diops_contrap_ev_corresp_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							cd_estabelecimento_p,
							vl_item_quadro_w,
							vl_sub_titulo_w,
							'C',
							nr_seq_periodo_p,
							0,
							0,
							0,
							0,
							null,
							null,
							null,
							null);
					
		vl_item_quadro_w := vl_item_quadro_w + 1;
	end loop;

	/* Quadro eventos */

	vl_item_quadro_w := 12;
	while(vl_item_quadro_w <= 16) loop
		insert into diops_contrap_ev_corresp(	nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							cd_estabelecimento,
							cd_tipo_movimento,
							cd_tipo_movimento_sup,
							ie_tipo_evento,
							nr_seq_periodo,
							vl_preco_pre_corresp_pre,
							vl_preco_pre_corresp_pos,
							vl_preco_pos_corresp_pre,
							vl_preco_pos_corresp_pos,
							vl_preco_pre_cart_propr,
							vl_preco_pre_corresp_assum,
							vl_preco_pos_cart_propr,
							vl_preco_pos_corresp_assum)
						values (nextval('diops_contrap_ev_corresp_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							cd_estabelecimento_p,
							vl_item_quadro_w,
							vl_sub_titulo_w,
							'E',
							nr_seq_periodo_p,
							null,
							null,
							null,
							null,
							0,
							0,
							0,
							0);
					
		vl_item_quadro_w := vl_item_quadro_w + 1;
	end loop;

	vl_item_quadro_w 	:= 7;
	vl_sub_titulo_w 	:= vl_sub_titulo_w + 1;
	end;
end loop;


/* Linhas: Total liquido e Valor contabilizado*/

insert into diops_contrap_ev_corresp(	nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_estabelecimento,
					cd_tipo_movimento,
					cd_tipo_movimento_sup,
					ie_tipo_evento,
					nr_seq_periodo,
					vl_preco_pre_corresp_pre,
					vl_preco_pre_corresp_pos,
					vl_preco_pos_corresp_pre,
					vl_preco_pos_corresp_pos,
					vl_preco_pre_cart_propr,
					vl_preco_pre_corresp_assum,
					vl_preco_pos_cart_propr,
					vl_preco_pos_corresp_assum)
				values (nextval('diops_contrap_ev_corresp_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_estabelecimento_p,
					10,
					null,
					'CE',
					nr_seq_periodo_p,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0);

insert into diops_contrap_ev_corresp(	nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_estabelecimento,
					cd_tipo_movimento,
					cd_tipo_movimento_sup,
					ie_tipo_evento,
					nr_seq_periodo,
					vl_preco_pre_corresp_pre,
					vl_preco_pre_corresp_pos,
					vl_preco_pos_corresp_pre,
					vl_preco_pos_corresp_pos,
					vl_preco_pre_cart_propr,
					vl_preco_pre_corresp_assum,
					vl_preco_pos_cart_propr,
					vl_preco_pos_corresp_assum)
				values (nextval('diops_contrap_ev_corresp_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_estabelecimento_p,
					11,
					null,
					'CE',
					nr_seq_periodo_p,
					null,
					vl_conta_rec_w,
					null,
					vl_conta_rec_ww,
					null,
					vl_conta_desp_w,
					null,
					vl_conta_desp_ww);

update	diops_contrap_ev_corresp
set	vl_preco_pre_corresp_pre  = NULL,
	vl_preco_pos_corresp_pre  = NULL
where	cd_tipo_movimento = 9
and	cd_estabelecimento = cd_estabelecimento_p
and	nr_seq_periodo = nr_seq_periodo_p;		

commit;

/* ############################ Fim da geracao das linhas com valores zerados ############################*/

/* ############################ Geracao dos valores zerados para a tabela utilizada na geracao do XML ############################ 
ie_tipo_cobertura: 	1 = Pre 
			2 = Pos

ie_tipo_origem:		1 = CCPRE (Corresp Cedida preco pre)
			2 = CCPOS (Corresp Cedida preco pos)
			3 = CRPRO (Carteira propria)
			4 = CRASS (Corresponsabilidade assumida)

ie_tipo_movimentacao:	0 = Contraprestacao cedida 			Equivalente no dominio: 7
			1 = (-) Recuperacao por coparticipacao		Equivalente no dominio: 8 (C) ou 14 (E)
			2 = (-) Glosas					Equivalente no dominio: 9 (C) ou 13 (E)
			3 = Despesa com eventos/sinistros		Equivalente no dominio: 12
			4 = Despesas com eventos/sinistros - Judicial	Equivalente no dominio: 15
			5 = (-) Outras recuperacoes			Equivalente no dominio: 16 */
qt_count_plano_w		:= 1;




while(qt_count_plano_w <= 6) loop
	select	CASE WHEN qt_count_plano_w=1 THEN  	'IFAL' WHEN qt_count_plano_w=2 THEN  	'IFPL' WHEN qt_count_plano_w=3 THEN  	'PLAL' WHEN qt_count_plano_w=4 THEN  	'PLAP' WHEN qt_count_plano_w=5 THEN  	'PCEA' WHEN qt_count_plano_w=6 THEN  	'PCEL' END
	into STRICT	ds_plano_w
	;

	qt_count_cobertura_w 		:= 1;


	while(qt_count_cobertura_w <= 2) loop
		qt_count_origem_corresp_w	:= 1;
		qt_count_origem_event_w		:= 3;


		while(qt_count_origem_corresp_w <= 2) loop
			qt_count_moviment_corresp_w	:= 0;

			while(qt_count_moviment_corresp_w <= 2) loop

				insert into diops_contr_ev_corresp_en( nr_sequencia,
									dt_atualizacao,
									dt_atualizacao_nrec,
									nm_usuario,
									nm_usuario_nrec,
									cd_estabelecimento,
									nr_seq_periodo,
									ds_plano,
									ie_tipo_cobertura,
									ie_tipo_origem,
									ie_tipo_movimentacao,
									vl_movimento
								) values (nextval('diops_contr_ev_corresp_en_seq'),
									clock_timestamp(),
									clock_timestamp(),
									nm_usuario_p,
									nm_usuario_p,
									cd_estabelecimento_p,
									nr_seq_periodo_p,
									ds_plano_w,
									to_char(qt_count_cobertura_w),
									to_char(qt_count_origem_corresp_w),
									to_char(qt_count_moviment_corresp_w),
									0);
				qt_count_moviment_corresp_w := qt_count_moviment_corresp_w + 1;
			end loop;

			qt_count_origem_corresp_w := qt_count_origem_corresp_w + 1;
		end loop;

		while(qt_count_origem_event_w <= 4) loop
			qt_count_moviment_event_w	:= 1;

			while(qt_count_moviment_event_w <= 5) loop

				insert into diops_contr_ev_corresp_en( nr_sequencia,
									dt_atualizacao,
									dt_atualizacao_nrec,
									nm_usuario,
									nm_usuario_nrec,
									cd_estabelecimento,
									nr_seq_periodo,
									ds_plano,
									ie_tipo_cobertura,
									ie_tipo_origem,
									ie_tipo_movimentacao,
									vl_movimento
								) values (nextval('diops_contr_ev_corresp_en_seq'),
									clock_timestamp(),
									clock_timestamp(),
									nm_usuario_p,
									nm_usuario_p,
									cd_estabelecimento_p,
									nr_seq_periodo_p,
									ds_plano_w,
									to_char(qt_count_cobertura_w),
									to_char(qt_count_origem_event_w),
									to_char(qt_count_moviment_event_w),
									0);
				qt_count_moviment_event_w := qt_count_moviment_event_w + 1;
			end loop;

			qt_count_origem_event_w := qt_count_origem_event_w + 1;
		end loop;

		qt_count_cobertura_w := qt_count_cobertura_w + 1;
	end loop;

qt_count_plano_w := qt_count_plano_w + 1;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE diops_evento_corresp_2018 ( nm_usuario_p text, nr_seq_periodo_p bigint, cd_estabelecimento_p bigint) FROM PUBLIC;

