-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_atualiza_guia_status_trans ( nr_seq_pedido_p bigint, nr_seq_guia_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_autorizado_w			smallint;
ie_estagio_guia_w		smallint;
ie_tipo_tabela_w		varchar(3);
qt_analise_proc_w		bigint;
qt_analise_mat_w		bigint;
qt_anali_proc_nega_w		bigint;
qt_anali_proc_apro_w		bigint;
qt_anali_proc_canc_w		bigint;
qt_anali_mat_nega_w		bigint;
qt_anali_mat_apro_w		bigint;
qt_anali_mat_canc_w		bigint;
ie_resultado_w			bigint;
qt_analise_negada_w		bigint;
qt_analise_aprovada_w		bigint;
qt_analise_cancelada_w		bigint;
cd_servico_w			bigint;
ds_servico_w			varchar(80);
nr_seq_guia_mat_w		bigint;
nr_seq_guia_proc_w		bigint;
dt_validade_w			timestamp;
nr_seq_origem_w			bigint;
qt_registros_aud_w		bigint;
qt_autorizado_w			integer;
qt_autorizado_ww		smallint;

ie_gerar_senha_interna_w	pls_param_intercambio_scs.ie_gerar_senha_interna%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
dt_solicitacao_w		pls_guia_plano.dt_solicitacao%type;
ie_tipo_guia_w			pls_guia_plano.ie_tipo_guia%type;
cd_senha_w			pls_guia_plano.cd_senha%type;
dt_validade_senha_w		pls_guia_plano.dt_validade_senha%type;
dt_validade_senha_ww		pls_guia_plano.dt_validade_senha%type;

C01 CURSOR FOR
	SELECT	nr_seq_guia_mat,
		nr_seq_guia_proc,
		ie_autorizado,
		ie_tipo_tabela,
		qt_autorizado
	from	ptu_resp_servico_status
	where	ie_autorizado in (1,2,5)
	and	nr_seq_resp_ped_status	= nr_seq_pedido_p;

C02 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_auditoria_grupo a,
		pls_auditoria b
	where	a.nr_seq_auditoria 	= b.nr_sequencia
	and   	b.nr_seq_guia		= nr_seq_guia_p
	order	by a.nr_seq_ordem;


BEGIN

-- Verificar o parâmetro na função OPS - Gestão de Operadoras / Parâmetros OPS / Intercâmbio / Intercâmbio SCS
begin
	select	ie_gerar_senha_interna
	into STRICT	ie_gerar_senha_interna_w
	from	pls_param_intercambio_scs;
exception
when others then
	ie_gerar_senha_interna_w := null;
end;


select	coalesce(ie_estagio, 0)
into STRICT	ie_estagio_guia_w
from	pls_guia_plano
where	nr_sequencia	= nr_seq_guia_p;

begin
	select	dt_validade,
		nr_seq_origem
	into STRICT	dt_validade_w,
		nr_seq_origem_w
	from	ptu_resp_pedido_status
	where	nr_sequencia	= nr_seq_pedido_p;
exception
when others then
	dt_validade_w	:= null;
	nr_seq_origem_w	:= null;
end;

/* Atualiza apenas se o estágio da guia é igual a 'AUDITORIA INTERCÂMBIO' */

if (ie_estagio_guia_w = 11) then
	open C01;
	loop
	fetch C01 into
		nr_seq_guia_mat_w,
		nr_seq_guia_proc_w,
		ie_autorizado_w,
		ie_tipo_tabela_w,
		qt_autorizado_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		qt_autorizado_ww   :=   substr(to_char(qt_autorizado_w),1,4);

		/* Atualiza o estágio dos procedimentos e materiais apenas se os status forem igual a 1 (Negado), 2 (Autorizado) o 3 (Cancelado) */

		if (ie_autorizado_w in (1,2,5)) then
			if (ie_tipo_tabela_w in ('0', '1', '4')) and (nr_seq_guia_proc_w IS NOT NULL AND nr_seq_guia_proc_w::text <> '') then
				update	pls_guia_plano_proc
				set	ie_status	= CASE WHEN ie_autorizado_w=1 THEN 'N' WHEN ie_autorizado_w=2 THEN 'S' WHEN ie_autorizado_w=5 THEN 'D' END ,
					qt_autorizada	= CASE WHEN ie_autorizado_w=2 THEN qt_autorizado_ww  ELSE 0 END
				where	nr_sequencia	= nr_seq_guia_proc_w;
			elsif (ie_tipo_tabela_w in ('2', '3')) and (nr_seq_guia_mat_w IS NOT NULL AND nr_seq_guia_mat_w::text <> '') then
				update	pls_guia_plano_mat
				set	ie_status	= CASE WHEN ie_autorizado_w=1 THEN 'N' WHEN ie_autorizado_w=2 THEN 'S' WHEN ie_autorizado_w=5 THEN 'D' END ,
					qt_autorizada	= CASE WHEN ie_autorizado_w=2 THEN qt_autorizado_ww  ELSE 0 END
				where	nr_sequencia	= nr_seq_guia_mat_w;
			end if;
		end if;
		end;
	end loop;
	close C01;

	select	count(1)
	into STRICT	qt_analise_proc_w
	from	pls_guia_plano_proc
	where	ie_status		= 'A'
	and	nr_seq_guia	= nr_seq_guia_p;

	select	count(1)
	into STRICT	qt_analise_mat_w
	from	pls_guia_plano_mat
	where	ie_status		= 'A'
	and	nr_seq_guia	= nr_seq_guia_p;

	if	(qt_analise_proc_w = 0 AND qt_analise_mat_w = 0) then
		/* Quantidade de procedimentos 'Negados' */

		select	count(1)
		into STRICT	qt_anali_proc_nega_w
		from	pls_guia_plano_proc
		where	ie_status	= 'N'
		and	nr_seq_guia	= nr_seq_guia_p;

		/* Quantidade de procedimentos 'Aprovados' */

		select	count(1)
		into STRICT	qt_anali_proc_apro_w
		from	pls_guia_plano_proc
		where	ie_status	= 'S'
		and	nr_seq_guia	= nr_seq_guia_p;

		/* Quantidade de procedimentos 'Cancelados' */

		select	count(1)
		into STRICT	qt_anali_proc_canc_w
		from	pls_guia_plano_proc
		where	ie_status	= 'D'
		and	nr_seq_guia	= nr_seq_guia_p;

		/* Quantidade de materiais 'Negados' */

		select	count(1)
		into STRICT	qt_anali_mat_nega_w
		from	pls_guia_plano_mat
		where	ie_status	= 'N'
		and	nr_seq_guia	= nr_seq_guia_p;

		/* Quantidade de materiais 'Aprovados' */

		select	count(1)
		into STRICT	qt_anali_mat_apro_w
		from	pls_guia_plano_mat
		where	ie_status	= 'S'
		and	nr_seq_guia	= nr_seq_guia_p;

		/* Quantidade de materiais 'Cancelados' */

		select	count(1)
		into STRICT	qt_anali_mat_canc_w
		from	pls_guia_plano_mat
		where	ie_status	= 'D'
		and	nr_seq_guia	= nr_seq_guia_p;

		qt_analise_negada_w	:= qt_anali_proc_nega_w + qt_anali_mat_nega_w;
		qt_analise_aprovada_w	:= qt_anali_proc_apro_w + qt_anali_mat_apro_w;
		qt_analise_cancelada_w	:= qt_anali_proc_canc_w + qt_anali_mat_canc_w;

		if	((qt_analise_cancelada_w > 0) and (qt_analise_negada_w = 0) and (qt_analise_aprovada_w = 0)) then
			ie_resultado_w	:= 8; --Cancelada
		elsif	(qt_analise_aprovada_w > 0 AND qt_analise_negada_w = 0) then
			ie_resultado_w	:= 6; -- Autorizado sem glosa
		elsif	(qt_analise_negada_w > 0 AND qt_analise_aprovada_w = 0) then
			ie_resultado_w	:= 4; -- Negado
		elsif	(qt_analise_negada_w > 0 AND qt_analise_aprovada_w > 0) then
			ie_resultado_w	:= 10; -- Autorizado parcialmente
		end if;

		if (ie_resultado_w IS NOT NULL AND ie_resultado_w::text <> '') then

			select	nr_seq_segurado,
				to_date(dt_solicitacao, 'dd/mm/rrrr'),
				ie_tipo_guia
			into STRICT	nr_seq_segurado_w,
				dt_solicitacao_w,
				ie_tipo_guia_w
			from	pls_guia_plano
			where	nr_sequencia	= nr_seq_guia_p;

			if (coalesce(ie_gerar_senha_interna_w,'S')	= 'S') then
				begin
					SELECT * FROM pls_gerar_validade_senha(	nr_seq_guia_p, nr_seq_segurado_w, 0, dt_solicitacao_w, ie_tipo_guia_w, nm_usuario_p, dt_validade_senha_w, cd_senha_w) INTO STRICT dt_validade_senha_w, cd_senha_w;
				exception
				when others then
					CALL pls_guia_gravar_historico(	nr_seq_guia_p,2,
									'Problema na conversão da data de solicitação.',
									'', nm_usuario_p);

					dt_validade_senha_w	:= null;
					cd_senha_w		:= null;
				end;
			else
				dt_validade_senha_w	:= null;
				cd_senha_w		:= null;
			end if;

			begin
				select	to_date(dt_validade_senha_w,'dd/mm/rrrr')
				into STRICT	dt_validade_senha_ww
				;
			exception
			when others then
				dt_validade_senha_ww	:= null;
			end;

			update	pls_guia_plano
			set	ie_estagio		= ie_resultado_w,
				ie_status		= CASE WHEN ie_resultado_w=8 THEN '3' WHEN ie_resultado_w=4 THEN '3'  ELSE '1' END ,
				dt_autorizacao		= CASE WHEN ie_resultado_w=8 THEN null WHEN ie_resultado_w=4 THEN null  ELSE clock_timestamp() END ,
				dt_valid_senha_ext	= CASE WHEN ie_resultado_w=8 THEN null WHEN ie_resultado_w=4 THEN null  ELSE dt_validade_w END ,
				cd_senha_externa	= CASE WHEN ie_resultado_w=8 THEN null WHEN ie_resultado_w=4 THEN null  ELSE nr_seq_origem_w END ,
				dt_validade_senha	= CASE WHEN ie_resultado_w=8 THEN null WHEN ie_resultado_w=4 THEN null  ELSE dt_validade_senha_w END ,
				cd_senha		= CASE WHEN ie_resultado_w=8 THEN null WHEN ie_resultado_w=4 THEN null  ELSE cd_senha_w END
			where	nr_sequencia		= nr_seq_guia_p;

			select	count(1)
			into STRICT	qt_registros_aud_w
			from	pls_auditoria
			where	nr_seq_guia	= nr_seq_guia_p
			and	coalesce(dt_liberacao::text, '') = '';

			if (qt_registros_aud_w > 0) then
				update	pls_auditoria
				set	ie_status		= CASE WHEN ie_resultado_w=8 THEN 'C'  ELSE 'F' END ,
					dt_liberacao		= clock_timestamp(),
					nr_seq_proc_interno	 = NULL,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_seq_guia		= nr_seq_guia_p;

				CALL pls_guia_gravar_historico(	nr_seq_guia_p,2,
								'Análise da guia finalizada na função OPS - Gestão de Análise de Autorizações, pela importação de pedido de status de autorização',
								'', nm_usuario_p);

				update	pls_auditoria_grupo
				set	dt_liberacao		= clock_timestamp(),
					ie_status		= 'S',
					nm_usuario		= nm_usuario_p,
					dt_atualizacao		= clock_timestamp()
				where	coalesce(dt_liberacao::text, '') = ''
				and	exists (	SELECT	1
						from 	pls_auditoria x
						where 	x.nr_seq_guia 	= nr_seq_guia_p
						and 	x.nr_sequencia 	= nr_seq_auditoria);
			end if;
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_atualiza_guia_status_trans ( nr_seq_pedido_p bigint, nr_seq_guia_p bigint, nm_usuario_p text) FROM PUBLIC;

