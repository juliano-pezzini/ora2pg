-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_dados_senha_fila_v2 (nr_seq_pac_senha_fila_p bigint, cd_pessoa_fisica_p text default null, qt_horas_validade_p bigint default null, dt_senha_p INOUT timestamp DEFAULT NULL, ds_senha_p INOUT text DEFAULT NULL, nr_seq_senha_fila_p INOUT bigint DEFAULT NULL) AS $body$
DECLARE


nr_seq_pac_senha_fila_w		bigint;
ie_tipo_data_w			varchar(1);
nr_seq_fila_senha_w		triagem_pronto_atend.nr_seq_fila_senha%type;
ie_dt_triagem_w			varchar(1);

BEGIN
--Verificar se j? existe registro de senha na fun??o 'Triagem do Pronto Atendimento'
select	max(coalesce(a.nr_seq_fila_senha,0))
into STRICT	nr_seq_fila_senha_w
from	triagem_pronto_atend a
where	cd_pessoa_fisica	= cd_pessoa_fisica_p
--and		nr_atendimento	is not null
and		dt_atualizacao_nrec between clock_timestamp() - (qt_horas_validade_p / 24) and clock_timestamp()
and		coalesce(dt_cancelamento::text, '') = ''
and		ie_status_paciente <> 'C'
and	exists (	SELECT	1
		from 	paciente_senha_fila x
		where	x.nr_sequencia = a.nr_seq_fila_senha
		and	coalesce(x.dt_vinculacao_senha::text, '') = '');

if (nr_seq_fila_senha_w IS NOT NULL AND nr_seq_fila_senha_w::text <> '')then
	nr_seq_senha_fila_p	:= nr_seq_fila_senha_w;
end if;
ie_dt_triagem_w := obter_param_usuario(10021, 147, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_dt_triagem_w);

if (coalesce(nr_seq_pac_senha_fila_p,0) > 0) and
	((coalesce(nr_seq_fila_senha_w,0) = 0) or ('N' = ie_dt_triagem_w)) then

	ie_tipo_data_w := obter_param_usuario(10021, 47, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_tipo_data_w);

	select	max(substr(obter_letra_verifacao_senha(coalesce(nr_seq_fila_senha_origem, nr_seq_fila_senha)) || cd_senha_gerada,1,20)),
		max(CASE WHEN ie_tipo_data_w='G' THEN dt_geracao_senha  ELSE dt_primeira_chamada END )
	into STRICT	ds_senha_p,
		dt_senha_p
	from	paciente_senha_fila
	where	nr_sequencia	= nr_seq_pac_senha_fila_p
	and	coalesce(dt_vinculacao_senha::text, '') = '';
elsif (coalesce(nr_seq_fila_senha_w,0) > 0) then
	select	max(substr(obter_letra_verifacao_senha(a.nr_seq_fila_senha) || a.cd_senha_gerada,1,20)),
		max(a.dt_atualizacao_nrec)
	into STRICT	ds_senha_p,
		dt_senha_p
	from	triagem_pronto_atend a
	where	a.nr_seq_fila_senha	= nr_seq_fila_senha_w
	and	exists (	SELECT	1
			from 	paciente_senha_fila x
			where	x.nr_sequencia = a.nr_seq_fila_senha
			and	coalesce(x.dt_vinculacao_senha::text, '') = '');

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_dados_senha_fila_v2 (nr_seq_pac_senha_fila_p bigint, cd_pessoa_fisica_p text default null, qt_horas_validade_p bigint default null, dt_senha_p INOUT timestamp DEFAULT NULL, ds_senha_p INOUT text DEFAULT NULL, nr_seq_senha_fila_p INOUT bigint DEFAULT NULL) FROM PUBLIC;

