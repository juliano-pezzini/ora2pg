-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_int_local_estoque ( nr_seq_local_estoque_p bigint, nm_usuario_p text, ie_status_p INOUT text, ds_erro_p INOUT text) AS $body$
DECLARE



qt_registros_w					bigint;
ie_status_w					varchar(15);
ds_erro_w					varchar(2000);
nr_sequencia_int_w               	  	w_int_local_estoque.nr_sequencia%type;
dt_atualizacao_int_w               		w_int_local_estoque.dt_atualizacao%type;
nm_usuario_int_w                   		w_int_local_estoque.nm_usuario%type;
dt_atualizacao_nrec_int_w        	 	w_int_local_estoque.dt_atualizacao_nrec%type;
nm_usuario_nrec_int_w          	 		w_int_local_estoque.nm_usuario_nrec%type;
ds_local_estoque_int_w          		w_int_local_estoque.ds_local_estoque%type;
cd_estabelecimento_int_w           		w_int_local_estoque.cd_estabelecimento%type;
cd_centro_custo_int_w              		w_int_local_estoque.cd_centro_custo%type;
cd_comprador_consig_int_w          		w_int_local_estoque.cd_comprador_consig%type;
cd_comprador_consig_int_ww          		w_int_local_estoque.cd_comprador_consig%type;
cd_pessoa_solic_consig_int_w       		w_int_local_estoque.cd_pessoa_solic_consig%type;
cd_pessoa_solic_consig_int_ww       		w_int_local_estoque.cd_pessoa_solic_consig%type;
ds_complemento_int_w               		w_int_local_estoque.ds_complemento%type;
ie_situacao_int_w                  		w_int_local_estoque.ie_situacao%type;
ie_permite_digitacao_int_w         		w_int_local_estoque.ie_permite_digitacao%type;
ie_tipo_local_int_w                		w_int_local_estoque.ie_tipo_local%type;
ie_ponto_pedido_int_w              		w_int_local_estoque.ie_ponto_pedido%type;
ie_req_automatica_int_w            		w_int_local_estoque.ie_req_automatica%type;
ie_proprio_int_w                   		w_int_local_estoque.ie_proprio%type;
ie_baixa_disp_int_w                		w_int_local_estoque.ie_baixa_disp%type;
ie_req_mat_estoque_int_w           		w_int_local_estoque.ie_req_mat_estoque%type;
ie_centro_inventario_int_w         		w_int_local_estoque.ie_centro_inventario%type;
ie_permite_estoque_neg_int_w  			w_int_local_estoque.ie_permite_estoque_negativo%type;
ie_centro_custo_ordem_int_w        		w_int_local_estoque.ie_centro_custo_ordem%type;
ie_local_entrega_oc_int_w          		w_int_local_estoque.ie_local_entrega_oc%type;
ie_externo_int_w                   		w_int_local_estoque.ie_externo%type;
ie_gera_lote_int_w                 		w_int_local_estoque.ie_gera_lote%type;
ie_cons_transf_padrao_int_w   			w_int_local_estoque.ie_considera_transf_padrao%type;
ie_centro_custo_nf_int_w           		w_int_local_estoque.ie_centro_custo_nf%type;
ie_permite_emprestimo_int_w        		w_int_local_estoque.ie_permite_emprestimo%type;
ie_limpa_requisicao_int_w          		w_int_local_estoque.ie_limpa_requisicao%type;
ie_consiste_saldo_rep_int_w        		w_int_local_estoque.ie_consiste_saldo_rep%type;
ie_permite_oc_int_w                		w_int_local_estoque.ie_permite_oc%type;
qt_dia_ajuste_minimo_int_w         		w_int_local_estoque.qt_dia_ajuste_minimo%type;
qt_dia_ajuste_maximo_int_w         		w_int_local_estoque.qt_dia_ajuste_maximo%type;
qt_dia_consumo_int_w               		w_int_local_estoque.qt_dia_consumo%type;
cd_estab_tasy_w					estabelecimento.cd_estabelecimento%type;
cd_centro_custo_tasy_w				centro_custo.cd_centro_custo%type;
cd_pessoa_fisica_tasy_w				pessoa_fisica.cd_pessoa_fisica%type;
cd_local_estoque_w     				local_estoque.cd_local_estoque%type;
cd_local_estoque_ww     			local_estoque.cd_local_estoque%type;



BEGIN

ie_status_w					:= 'OK';

select	count(*)
into STRICT	qt_registros_w
from	w_int_local_estoque
where   nr_sequencia = nr_seq_local_estoque_p;

if (qt_registros_w > 0) then

	select	nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ds_local_estoque,
		cd_estabelecimento,
		cd_centro_custo,
		cd_comprador_consig,
		cd_pessoa_solic_consig,
		ds_complemento,
		coalesce(ie_situacao,'A'),
		coalesce(ie_permite_digitacao,'S'),
		ie_tipo_local,
		coalesce(ie_ponto_pedido,'S'),
		coalesce(ie_req_automatica,'S'),
		coalesce(ie_proprio,'S'),
		coalesce(ie_baixa_disp,'N'),
		coalesce(ie_req_mat_estoque,'S'),
		coalesce(ie_centro_inventario,'N'),
		coalesce(ie_permite_estoque_negativo,'N'),
		coalesce(ie_centro_custo_ordem,'D'),
		coalesce(ie_local_entrega_oc,'S'),
		coalesce(ie_externo,'S'),
		coalesce(ie_gera_lote,'S'),
		coalesce(ie_considera_transf_padrao,'N'),
		coalesce(ie_centro_custo_nf,'N'),
		coalesce(ie_permite_emprestimo,'S'),
		coalesce(ie_limpa_requisicao,'S'),
		coalesce(ie_consiste_saldo_rep,'S'),
		coalesce(ie_permite_oc,'S'),
		qt_dia_ajuste_minimo,
		qt_dia_ajuste_maximo,
		qt_dia_consumo
	into STRICT 	nr_sequencia_int_w,
		dt_atualizacao_int_w,
		nm_usuario_int_w,
		dt_atualizacao_nrec_int_w,
		nm_usuario_nrec_int_w,
		ds_local_estoque_int_w,
		cd_estabelecimento_int_w,
		cd_centro_custo_int_w,
		cd_comprador_consig_int_w,
		cd_pessoa_solic_consig_int_w,
		ds_complemento_int_w,
		ie_situacao_int_w,
		ie_permite_digitacao_int_w,
		ie_tipo_local_int_w,
		ie_ponto_pedido_int_w,
		ie_req_automatica_int_w,
		ie_proprio_int_w,
		ie_baixa_disp_int_w,
		ie_req_mat_estoque_int_w,
		ie_centro_inventario_int_w,
		ie_permite_estoque_neg_int_w,
		ie_centro_custo_ordem_int_w,
		ie_local_entrega_oc_int_w,
		ie_externo_int_w,
		ie_gera_lote_int_w,
		ie_cons_transf_padrao_int_w,
		ie_centro_custo_nf_int_w,
		ie_permite_emprestimo_int_w,
		ie_limpa_requisicao_int_w,
		ie_consiste_saldo_rep_int_w,
		ie_permite_oc_int_w,
		qt_dia_ajuste_minimo_int_w,
		qt_dia_ajuste_maximo_int_w,
		qt_dia_consumo_int_w
	from	w_int_local_estoque
	where	nr_sequencia = nr_seq_local_estoque_p;
else
	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_Texto(450141,'NR_SEQ_LOCAL_ESTOQUE_P=' || NR_SEQ_LOCAL_ESTOQUE_P); /*Não existe nenhum registro na tabela de passos referente a integração com o código #@NR_SEQ_LOCAL_ESTOQUE_P#@.*/
END IF;



/*DS_LOCAL_ESTOQUE*/

if (ie_status_w = 'OK') and (coalesce(ds_local_estoque_int_w::text, '') = '') then

	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_Texto(450142);/*Favor informar descrição do local de estoque. Campo obrigatório.*/
end if;



/*CD_ESTABELECIMENTO*/

if (ie_status_w = 'OK') and (coalesce(cd_estabelecimento_int_w::text, '') = '') then

	ie_status_w 	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_Texto(450151);/*Favor informar o código do estabelecimeto.*/
else
	select 	coalesce(somente_numero(bkf_obter_conv_interna('','ESTABELECIMENTO','CD_ESTABELECIMENTO',CD_ESTABELECIMENTO_INT_W, 'BKF')),0)
	into STRICT 	cd_estab_tasy_w
	;

	if (cd_estab_tasy_w = 0) THEN
		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_Texto(450150,'CD_ESTABELECIMENTO_W='||CD_ESTABELECIMENTO_INT_W);/*Não foi cadastrada a conversão para o estabelecimento código #@CD_ESTABELECIMENTO_W#@ que veio do sistema externo.*/
	ELSE
		select	count(*)
		into STRICT	qt_registros_w
		from	estabelecimento
		where	cd_estabelecimento = cd_estab_tasy_w
		and	ie_situacao = 'A';

		if (qt_registros_w = 0) then
			ie_status_w	:= 'E';
			ds_erro_w	:= wheb_mensagem_pck.get_texto(450159,'CD_ESTAB_TASY_W='|| cd_estab_tasy_w ||';CD_ESTABELECIMENTO_W='|| CD_ESTABELECIMENTO_INT_W); /*Não existe no Tasy o estabelecimento com código  #@CD_ESTAB_TASY_W#@.Verifique o cadastro de conversão para o código do estabelecimento #@CD_ESTABELECIMENTO_W#@ que veio do sistema externo.*/
		end if;
	end if;
end if;



/*CD_CENTRO_CUSTO*/

IF (ie_status_w = 'OK') and (cd_centro_custo_int_w IS NOT NULL AND cd_centro_custo_int_w::text <> '') then

	select 	coalesce(somente_numero(bkf_obter_conv_interna('','CENTRO_CUSTO','CD_CENTRO_CUSTO',CD_CENTRO_CUSTO_INT_W, 'BKF')),0)
	into STRICT	cd_centro_custo_tasy_w
	;

	if (cd_centro_custo_tasy_w = 0) then
		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_Texto(450171,'CD_CENTRO_CUSTO_INT_W='||CD_CENTRO_CUSTO_INT_W);/*Não foi cadastrada a conversão para o centro de custo código #@CD_CENTRO_CUSTO_INT_W#@ que veio do sistema externo.*/
	else
		select	count(*)
		into STRICT	qt_registros_w
		from	centro_custo
		where	cd_centro_custo = cd_centro_custo_tasy_w
		and	ie_situacao = 'A';

		if (qt_registros_w = 0) THEN
			ie_status_w	:= 'E';
			ds_erro_w	:= wheb_mensagem_pck.get_texto(450289,'CD_CENTRO_CUSTO_TASY_W='|| cd_centro_custo_tasy_w ||';CD_CENTRO_CUSTO_INT_W='|| CD_CENTRO_CUSTO_INT_W); /*Não existe no Tasy o centro de custo com código  #@CD_CENTRO_CUSTO_TASY_W#@.Verifique o cadastro de conversão para o código do centro de custo #@CD_CENTRO_CUSTO_INT_W#@ que veio do sistema externo.*/
		end if;
	end if;
end if;



/*CD_COMPRADOR_CONSIG*/

if (ie_status_w = 'OK') and (cd_comprador_consig_int_w IS NOT NULL AND cd_comprador_consig_int_w::text <> '') then

	select	count(*)
	into STRICT	qt_registros_w
	from	pessoa_fisica
	where	nr_cpf = cd_comprador_consig_int_w;

	if (qt_registros_w = 0) then
		ie_status_W	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_texto(450179,'CD_CPF_W='||CD_COMPRADOR_CONSIG_INT_W); /*Não existe no Tasy uma pessoa física cadastrada com o CPF #@CD_CPF_W#@.*/
	else
		select	max(cd_pessoa_fisica)
		into STRICT	cd_comprador_consig_int_ww
		from	pessoa_fisica
		where	nr_cpf = cd_comprador_consig_int_w;
	end if;
end if;



/*CD_PESSOA_SOLIC_CONSIG*/

if (ie_status_w = 'OK') and (cd_pessoa_solic_consig_int_w IS NOT NULL AND cd_pessoa_solic_consig_int_w::text <> '') then
	select	count(*)
	into STRICT	qt_registros_w
	from	pessoa_fisica
	where	nr_cpf = cd_pessoa_solic_consig_int_w;

	if (qt_registros_w = 0) THEN
		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_texto(450179,'CD_CPF_W='||CD_PESSOA_SOLIC_CONSIG_INT_W); /*Não existe no Tasy uma pessoa física cadastrada com o CPF #@CD_CPF_W#@.*/
	else
		select	max(cd_pessoa_fisica)
		into STRICT	cd_pessoa_solic_consig_int_ww
		from	pessoa_fisica
		where	nr_cpf = cd_pessoa_solic_consig_int_w;
	end if;
end if;



/*IE_SITUACAO*/

if (ie_status_w = 'OK') and (coalesce(ie_situacao_int_w::text, '') = '') then

	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_texto(450180);/*Favor informar a situação do local de estoque.*/
else
	if (ie_situacao_int_w <> 'A') and (ie_situacao_int_w <> 'I') then

		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_texto(450181);/*Favor informar a situação do local de estoque corretamente (A para a situação Ativa, I para a situação Inativa).*/
	end if;
end if;



/*IE_PERMITE_DIGITACAO*/

if (ie_status_w = 'OK') and (coalesce(ie_permite_digitacao_int_w::text, '') = '') then

	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_texto(450182); /*Favor informar se permite digitação.*/
else
	if (ie_permite_digitacao_int_w <> 'N') and (ie_permite_digitacao_int_w <> 'S') then

		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_texto(450183);/*Favor informar se permite digitação corretamente (S para a situação Sim, N para a situação Não).*/
	end if;
end if;



/*IE_TIPO_LOCAL*/

if (ie_status_w = 'OK') and (coalesce(ie_tipo_local_int_w::text, '') = '') then

	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_texto(450185);/*Favor informar o tipo de local.*/
else
	if (ie_tipo_local_int_w not in (1,2,3,4,5,6,7,8,9,10,11,12,13)) then
		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_texto(450188);/*Favor informar um tipo de local válido.
							1               Farmácia
							2               Farmácia C. Cirúrgico
							3               Centro de Diagn. Imagens
							4               Almoxarifado
							5               Nutrição
							6               Setores
							7               Consignados
							8               Direto
							9               Segurança
							11              Dispensário eletrônico
							10              Empréstimo
							12              Carrinho cirúrgico
							13              CME*/
	end if;
end if;



/*IE_PONTO_PEDIDO*/

if (ie_status_w = 'OK') and (ie_ponto_pedido_int_w IS NOT NULL AND ie_ponto_pedido_int_w::text <> '') then

	if (ie_ponto_pedido_int_w <> 'S') and (ie_ponto_pedido_int_w <> 'N') then

		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_texto(450189);/*Favor informar um valor válido para ponto pedido (S para a situação Sim, e N para a situação Não).*/
	end if;
end if;



/*IE_REQ_AUTOMATICA*/

if (ie_status_w = 'OK') and (ie_req_automatica_int_w IS NOT NULL AND ie_req_automatica_int_w::text <> '') then

	if (ie_req_automatica_int_w <> 'S') and (ie_req_automatica_int_w <> 'N') then

		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_texto(450190);/*Favor informar um valor válido para requerimento automático (S para a situação Sim, e N para a situação Não).*/
	end if;
end if;




/*IE_PROPRIO*/

if (ie_status_w = 'OK') and (coalesce(ie_proprio_int_w::text, '') = '') then

	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_texto(450191);/*Favor informar se o local de estoque é próprio.*/
else
	if (ie_proprio_int_w <> 'S') and (ie_proprio_int_w <> 'N') then

		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_texto(450192);/*Favor informar um valor válido para se o local de estoque é próprio(S para a situação Sim, e N para a situação Não).*/
	end if;
end if;



/*IE_BAIXA_DISP*/

if (ie_status_w = 'OK') and (coalesce(ie_baixa_disp_int_w::text, '') = '') then

	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_texto(450193);/*Favor informar se a baixa está disponível.*/
else
	if (ie_baixa_disp_int_w <> 'S') and (ie_baixa_disp_int_w <> 'N') then

		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_texto(450194);/*Favor informar um valor válido para se a baixa está disponível(S para a situação Sim, e N para a situação Não).*/
	end if;
end if;



/*IE_REQ_MAT_ESTOQUE*/

if (ie_status_w = 'OK') and (coalesce(ie_req_mat_estoque_int_w::text, '') = '') THEN

	IE_STATUS_W	:= 'E';
	DS_ERRO_W	:= wheb_mensagem_pck.get_texto(450196);/*Favor informar o campo IE_REQ_MAT_ESTOQUE.*/
ELSE
	IF (ie_req_mat_estoque_int_w <> 'S') AND (ie_req_mat_estoque_int_w <> 'N') THEN

		IE_STATUS_W	:= 'E';
		DS_ERRO_W	:= wheb_mensagem_pck.get_texto(450197);/*Favor informar um valor válido para o campo IE_REQ_MAT_ESTOQUE (S para a situação Sim, e N para a situação Não).*/
	END IF;
END IF;



/*IE_CENTRO_INVENTARIO*/

IF (ie_status_w = 'OK') and (coalesce(IE_CENTRO_INVENTARIO_INT_W::text, '') = '') THEN

	IE_STATUS_W	:= 'E';
	DS_ERRO_W	:= wheb_mensagem_pck.get_texto(450199);/*Favor informar o campo IE_CENTRO_INVENTARIO_INT.*/
ELSE
	IF (IE_CENTRO_INVENTARIO_INT_W <> 'S') AND (IE_CENTRO_INVENTARIO_INT_W <> 'N') THEN

		IE_STATUS_W	:= 'E';
		DS_ERRO_W	:= wheb_mensagem_pck.get_texto(450201);/*Favor informar um valor válido para se é centro inventário(S para a situação Sim, e N para a situação Não).*/
	END IF;
END IF;



/*IE_PERMITE_ESTOQUE_NEGATIVO*/

IF (ie_status_w = 'OK') and (coalesce(ie_permite_estoque_neg_int_w::text, '') = '') THEN

	IE_STATUS_W	:= 'E';
	DS_ERRO_W	:= wheb_mensagem_pck.get_texto(450204);/*Favor informar o campo IE_PERMITE_ESTOQUE_NEGATIVO.*/
ELSE
	IF (ie_permite_estoque_neg_int_w not in ('N','L','S','EE')) THEN
		IE_STATUS_W	:= 'E';
		DS_ERRO_W	:= wheb_mensagem_pck.get_texto(450205);
		/*Favor informar um valor válido para o campo IE_PERMITE_ESTOQUE_NEGATIVO.(
				N               Não - Não permite estoque negativo
				L               Sim - Mas somente se o local de estoque tiver permissão
				S               Sim - Permite estoque negativo
				EE              Sim - Somente se tiver empréstimo recebido) */
	END IF;
END IF;



/*IE_CENTRO_CUSTO_ORDEM*/

IF (ie_status_w = 'OK') and (coalesce(IE_CENTRO_CUSTO_ORDEM_INT_W::text, '') = '') THEN

	IE_STATUS_W	:= 'E';
	DS_ERRO_W	:= wheb_mensagem_pck.get_texto(450209);/*Favor informar o tipo de centro custo ordem.*/
ELSE
	IF (IE_CENTRO_CUSTO_ORDEM_INT_W not in ('N','D','S')) THEN

		IE_STATUS_W	:= 'E';
		DS_ERRO_W	:= wheb_mensagem_pck.get_texto(450212);
				/*Favor informar um valor válido para o tipo de centro custo ordem.(
					D               Desconsiderar
					N               Nunca deve ter centro de custo na OC
					S               Sempre deve ter centro de custo na OC) */
	END IF;
END IF;



/*IE_LOCAL_ENTREGA_OC*/

IF (ie_status_w = 'OK') and (coalesce(IE_LOCAL_ENTREGA_OC_INT_W::text, '') = '') then

	IE_STATUS_W	:= 'E';
	DS_ERRO_W	:= wheb_mensagem_pck.get_texto(450214);/*Favor informar se é um local de entrega.*/
else
	IF (IE_LOCAL_ENTREGA_OC_INT_W not in ('N','S')) then

		IE_STATUS_W	:= 'E';
		DS_ERRO_W	:= wheb_mensagem_pck.get_texto(450215);/*Favor informar um valor válido para o campo IE_LOCAL_ENTREGA_OC. (S para a situação Sim, e N para a situação Não).*/
	end if;
end if;



/*IE_EXTERNO*/

if (ie_status_w = 'OK') and (coalesce(IE_EXTERNO_INT_W::text, '') = '') then

	IE_STATUS_W	:= 'E';
	DS_ERRO_W	:= wheb_mensagem_pck.get_texto(450216);/*Favor informar se é externo.*/
else
	IF (IE_EXTERNO_INT_W not in ('N','S')) then
		IE_STATUS_W	:= 'E';
		DS_ERRO_W	:= wheb_mensagem_pck.get_texto(450217);/*Favor informar um valor válido para o campo IE_EXTERNO. (S para a situação Sim, e N para a situação Não).*/
	end if;
end if;



/*IE_GERA_LOTE*/

if (ie_status_w = 'OK') and (IE_GERA_LOTE_INT_W IS NOT NULL AND IE_GERA_LOTE_INT_W::text <> '') then

	if (IE_GERA_LOTE_INT_W not in ('S','N')) then

		IE_STATUS_W	:= 'E';
		DS_ERRO_W	:= wheb_mensagem_pck.get_texto(450226);/*Favor informar um valor válido para o campo IE_GERA_LOTE. (S para a situação Sim, e N para a situação Não).*/
	end if;
end if;



/*IE_CONSIDERA_TRANSF_PADRAO*/

if (ie_status_w = 'OK') and (ie_cons_transf_padrao_int_w IS NOT NULL AND ie_cons_transf_padrao_int_w::text <> '') then

	if (ie_cons_transf_padrao_int_w not in ('S','N')) then
		IE_STATUS_W	:= 'E';
		DS_ERRO_W	:= wheb_mensagem_pck.get_texto(450227);/*Favor informar um valor válido para o campo IE_CONSIDERA_TRANSF_PADRAO. (S para a situação Sim, e N para a situação Não).*/
	end if;
end if;



/*IE_CENTRO_CUSTO_NF*/

if (ie_status_w = 'OK') and (coalesce(IE_CENTRO_CUSTO_NF_INT_W::text, '') = '') then

	IE_STATUS_W	:= 'E';
	DS_ERRO_W	:= wheb_mensagem_pck.get_texto(450238);/*Favor informar o campo IE_CENTRO_CUSTO_NF.*/
else
	IF (IE_CENTRO_CUSTO_NF_INT_W not in ('N','S')) then

		IE_STATUS_W	:= 'E';
		DS_ERRO_W	:= wheb_mensagem_pck.get_texto(450239);
				/*Favor informar um valor válido para o campo IE_CENTRO_CUSTO_NF
					N               Não permite informar local e centro de custo
					S               Sim, permite informar o local e o centro de custo.*/
	end if;
end if;



/*IE_PERMITE_EMPRESTIMO*/

if (ie_status_w = 'OK') and (IE_PERMITE_EMPRESTIMO_INT_W IS NOT NULL AND IE_PERMITE_EMPRESTIMO_INT_W::text <> '') then

	if (IE_PERMITE_EMPRESTIMO_INT_W not in ('S','N')) then

		IE_STATUS_W	:= 'E';
		DS_ERRO_W	:= wheb_mensagem_pck.get_texto(721319);/*Favor informar um valor válido para se permite empréstimo (S para a situação Sim, e N para a situação Não).*/
	end if;
end if;



/*IE_LIMPA_REQUISICAO*/

if (ie_status_w = 'OK') and (IE_LIMPA_REQUISICAO_INT_W IS NOT NULL AND IE_LIMPA_REQUISICAO_INT_W::text <> '') then

	if (IE_LIMPA_REQUISICAO_INT_W not in ('S','N')) then
		IE_STATUS_W	:= 'E';
		DS_ERRO_W	:= wheb_mensagem_pck.get_texto(450245);/*Favor informar um valor válido para se limpa requisição (S para a situação Sim, e N para a situação Não).*/
	end if;
end if;




/*IE_CONSISTE_SALDO_REP*/

if (ie_status_w = 'OK') and (IE_CONSISTE_SALDO_REP_INT_W IS NOT NULL AND IE_CONSISTE_SALDO_REP_INT_W::text <> '') then

	if (IE_CONSISTE_SALDO_REP_INT_W not in ('S','N')) then
		IE_STATUS_W	:= 'E';
		DS_ERRO_W	:= wheb_mensagem_pck.get_texto(450246);/*Favor informar um valor válido para se deve consistir saldo (S para a situação Sim, e N para a situação Não).*/
	end if;
end if;



/*IE_PERMITE_OC*/

if (ie_status_w = 'OK') and (IE_PERMITE_OC_INT_W IS NOT NULL AND IE_PERMITE_OC_INT_W::text <> '') then

	if (IE_PERMITE_OC_INT_W not in ('S','N')) then
		IE_STATUS_W	:= 'E';
		DS_ERRO_W	:= wheb_mensagem_pck.get_texto(450248);/*Favor informar um valor válido para o campo IE_PERMITE_OC. (S para a situação Sim, e N para a situação Não).*/
	end if;
end if;




if (ie_status_w = 'OK') then

	select	coalesce(max(cd_local_estoque),0)
	into STRICT	cd_local_estoque_ww
	from	local_estoque
	where	cd_estabelecimento = cd_estab_tasy_w
	and	upper(ds_local_estoque) = upper(ds_local_estoque_int_w);

	if (cd_local_estoque_ww = 0) then

		select	coalesce(max(cd_local_estoque),0) + 1
		into STRICT	cd_local_estoque_w
		from	local_estoque;

		insert into local_estoque(
			cd_local_estoque,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_local_estoque,
			cd_estabelecimento,
			cd_centro_custo,
			cd_comprador_consig,
			cd_pessoa_solic_consig,
			ds_complemento,
			ie_situacao,
			ie_permite_digitacao,
			ie_tipo_local,
			ie_ponto_pedido,
			ie_req_automatica,
			ie_proprio,
			ie_baixa_disp,
			ie_req_mat_estoque,
			ie_centro_inventario,
			ie_permite_estoque_negativo,
			ie_centro_custo_ordem,
			ie_local_entrega_oc,
			ie_externo,
			ie_gera_lote,
			ie_considera_transf_padrao,
			ie_centro_custo_nf,
			ie_permite_emprestimo,
			ie_limpa_requisicao,
			ie_consiste_saldo_rep,
			ie_permite_oc,
			qt_dia_ajuste_minimo,
			qt_dia_ajuste_maximo,
			qt_dia_consumo)
		values (	cd_local_estoque_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			ds_local_estoque_int_w,
			cd_estab_tasy_w,
			cd_centro_custo_tasy_w,
			cd_comprador_consig_int_ww,
			cd_pessoa_solic_consig_int_ww,
			ds_complemento_int_w,
			ie_situacao_int_w,
			ie_permite_digitacao_int_w,
			ie_tipo_local_int_w,
			ie_ponto_pedido_int_w,
			ie_req_automatica_int_w,
			ie_proprio_int_w,
			ie_baixa_disp_int_w,
			ie_req_mat_estoque_int_w,
			ie_centro_inventario_int_w,
			ie_permite_estoque_neg_int_w,
			ie_centro_custo_ordem_int_w,
			ie_local_entrega_oc_int_w,
			ie_externo_int_w,
			ie_gera_lote_int_w,
			ie_cons_transf_padrao_int_w,
			ie_centro_custo_nf_int_w,
			ie_permite_emprestimo_int_w,
			ie_limpa_requisicao_int_w,
			ie_consiste_saldo_rep_int_w,
			ie_permite_oc_int_w,
			qt_dia_ajuste_minimo_int_w,
			qt_dia_ajuste_maximo_int_w,
			qt_dia_consumo_int_w);
	else
		update	local_estoque
		set	dt_atualizacao = clock_timestamp(),
			nm_usuario = nm_usuario_p,
			ds_local_estoque = coalesce(ds_local_estoque_int_w,ds_local_estoque),
			cd_centro_custo = coalesce(cd_centro_custo_tasy_w,cd_centro_custo),
			cd_comprador_consig = coalesce(cd_comprador_consig_int_ww,cd_comprador_consig),
			cd_pessoa_solic_consig = coalesce(cd_pessoa_solic_consig_int_ww,cd_pessoa_solic_consig),
			ds_complemento = coalesce(ds_complemento_int_w,ds_complemento),
			ie_situacao = coalesce(ie_situacao_int_w,ie_situacao),
			ie_permite_digitacao = coalesce(ie_permite_digitacao_int_w,ie_permite_digitacao),
			ie_tipo_local = coalesce(ie_tipo_local_int_w,ie_tipo_local),
			ie_ponto_pedido = coalesce(ie_ponto_pedido_int_w,ie_ponto_pedido),
			ie_req_automatica = coalesce(ie_req_automatica_int_w,ie_req_automatica),
			ie_proprio = coalesce(ie_proprio_int_w,ie_proprio),
			ie_baixa_disp = coalesce(ie_baixa_disp_int_w,ie_baixa_disp),
			ie_req_mat_estoque = coalesce(ie_req_mat_estoque_int_w,ie_req_mat_estoque),
			ie_centro_inventario = coalesce(ie_centro_inventario_int_w,ie_centro_inventario),
			ie_permite_estoque_negativo = coalesce(ie_permite_estoque_neg_int_w,ie_permite_estoque_negativo),
			ie_centro_custo_ordem = coalesce(ie_centro_custo_ordem_int_w,ie_centro_custo_ordem),
			ie_local_entrega_oc = coalesce(ie_local_entrega_oc_int_w,ie_local_entrega_oc),
			ie_externo = coalesce(ie_externo_int_w,ie_externo),
			ie_gera_lote = coalesce(ie_gera_lote_int_w,ie_gera_lote),
			ie_considera_transf_padrao = coalesce(ie_cons_transf_padrao_int_w,ie_considera_transf_padrao),
			ie_centro_custo_nf = coalesce(ie_centro_custo_nf_int_w,ie_centro_custo_nf),
			ie_permite_emprestimo = coalesce(ie_permite_emprestimo_int_w,ie_permite_emprestimo),
			ie_limpa_requisicao = coalesce(ie_limpa_requisicao_int_w,ie_limpa_requisicao),
			ie_consiste_saldo_rep = coalesce(ie_consiste_saldo_rep_int_w,ie_consiste_saldo_rep),
			ie_permite_oc = coalesce(ie_permite_oc_int_w,ie_permite_oc),
			qt_dia_ajuste_minimo = coalesce(qt_dia_ajuste_minimo_int_w,qt_dia_ajuste_minimo),
			qt_dia_ajuste_maximo = coalesce(qt_dia_ajuste_maximo_int_w,qt_dia_ajuste_maximo),
			qt_dia_consumo = coalesce(qt_dia_consumo_int_w,qt_dia_consumo)
		where	cd_local_estoque = cd_local_estoque_ww;
	end if;
end if;

delete from w_int_local_estoque
where nr_sequencia = nr_seq_local_estoque_p;


commit;

ie_status_p		:= ie_status_w;
ds_erro_p		:= ds_erro_w;


END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_int_local_estoque ( nr_seq_local_estoque_p bigint, nm_usuario_p text, ie_status_p INOUT text, ds_erro_p INOUT text) FROM PUBLIC;

