-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dmed_incluir_titulos ( cd_estabelecimento_p bigint, nr_seq_dmed_mensal_p bigint, ds_titulo_p bigint, nm_usuario_p text, ie_prestadora_ops_p text, ie_inclusao_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionário [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------

Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_pessoa_responsavel_w		bigint;
cd_pessoa_beneficiario_w	bigint;
vl_documento_w			double precision;
dt_documento_w			timestamp;
nr_atendimento_w		bigint;		
nr_documento_w			bigint;
cd_tipo_recebimento_w		varchar(10);
ie_inclusao_w			varchar(1)	:= 'N';
cd_cgc_w			titulo_receber.cd_cgc%type;
nr_seq_mensalidade_w		titulo_receber.nr_seq_mensalidade%type;
nr_seq_mensalidade_seg_w	pls_mensalidade_segurado.nr_sequencia%type;
vl_mensalidade_w		pls_mensalidade.vl_mensalidade%type;
vl_recebido_w			titulo_receber_liq.vl_recebido%type;
vl_juros_w			titulo_receber_liq.vl_juros%type;
vl_multa_w			titulo_receber_liq.vl_multa%type;
ie_juros_multa_w		dmed_regra_geral.ie_juros_multa%type;
vl_item_w			pls_mensalidade_seg_item.vl_item%type;
ie_tipo_item_w			pls_mensalidade_seg_item.ie_tipo_item%type;
contador_w			bigint	:= 0;
cd_pessoa_fisica_benef_w	varchar(14);
cd_pessoa_fisica_responsavel_w	varchar(14);
cd_pessoa_fisica_pagador_w	varchar(14);
cd_pessoa_fisica_titular_w 	varchar(14);
nr_seq_titular_w		bigint;
dt_nascimento_pagador_w		timestamp;
nr_cpf_pagador_w		varchar(14);
ie_relacao_dependencia_w	varchar(2);
dt_liquidacao_w			timestamp;
nr_titulo_w			bigint;

C01 CURSOR FOR
	SELECT	coalesce(f.cd_pessoa_fisica, c.cd_pessoa_fisica) cd_pessoa_fisica,	-- busca o pagador ou o beneficiário (caso tenha cpf)
		coalesce(l.vl_recebido, 0) + coalesce(l.vl_rec_maior, 0) vl_recebido,
		coalesce(l.vl_juros, 0) vl_juros,
		coalesce(l.vl_multa, 0) vl_multa,
		m.vl_mensalidade,
		r.dt_liquidacao,
		r.nr_titulo,	
		a.cd_pessoa_fisica cd_pessoa_benef,
		e.nr_sequencia
	FROM pls_mensalidade m, pls_contrato_pagador f, pls_mensalidade_segurado e, pessoa_fisica c, pls_plano b, pls_segurado a, titulo_receber r
LEFT OUTER JOIN titulo_receber_liq l ON (r.nr_titulo = l.nr_titulo)
WHERE m.nr_sequencia		= e.nr_seq_mensalidade and f.nr_sequencia		= m.nr_seq_pagador and m.nr_sequencia		= r.nr_seq_mensalidade  and a.nr_sequencia		= e.nr_seq_segurado and a.cd_pessoa_fisica 	= c.cd_pessoa_fisica and b.nr_sequencia		= a.nr_seq_plano and ((b.ie_tipo_contratacao in ('I','CA')) or (b.ie_tipo_contratacao = 'CE' and (f.cd_pessoa_fisica IS NOT NULL AND f.cd_pessoa_fisica::text <> ''))) and coalesce(a.nr_seq_titular::text, '') = '' and m.vl_mensalidade > 0 and ((l.vl_recebido <> 0) or (l.vl_rec_maior <> 0)) and ((coalesce(a.ie_tipo_segurado,'B') in ('B','A')) or (coalesce(a.ie_tipo_segurado,'B') = 'R' and (a.nr_seq_contrato IS NOT NULL AND a.nr_seq_contrato::text <> ''))) and ((a.cd_estabelecimento = coalesce(cd_estabelecimento_p ,a.cd_estabelecimento)) or
	   	((coalesce(a.cd_estabelecimento::text, '') = '') and (coalesce(cd_estabelecimento_p::text, '') = ''))) and exists (SELECT	1
			from	dmed_regra_tipo_tit	w
			where	w.ie_tipo_receber = l.cd_tipo_recebimento
			and	coalesce(w.ie_prestadora_ops,'P')	= 'O') and exists (select	1
			from	dmed_regra_origem_tit	w
			where	w.ie_origem_titulo = r.ie_origem_titulo) and not exists (select	1
				from	dmed_titulos_mensal	x
				where	x.nr_documento		= r.nr_titulo
				and	x.nr_seq_dmed_mensal	= 1) and (r.ie_situacao not in ('3','5') or (r.ie_situacao = '5' and
		exists (select	1
			from	titulo_receber_liq k
			where	k.nr_titulo = r.nr_titulo
			and 	vl_recebido > 0	
			and 	not exists (select 1 from titulo_receber_liq x where x.nr_titulo = k.nr_titulo and x.nr_seq_liq_origem = k.nr_sequencia  LIMIT 1)))) and r.nr_seq_mensalidade = nr_seq_mensalidade_w order by r.nr_titulo;	

C02 CURSOR FOR
	SELECT	d.vl_item, 
		d.ie_tipo_item ie_tipo_item
	from 	pls_mensalidade_segurado	e,
		pls_mensalidade_seg_item	d,
		dmed_regra_tipo_item		t
	where 	e.nr_sequencia	= nr_seq_mensalidade_seg_w
	and	e.nr_sequencia	= d.nr_seq_mensalidade_seg
	and	d.ie_tipo_item	= t.ie_tipo_item;		
	
C03 CURSOR FOR
	SELECT	c.cd_pessoa_fisica cd_pessoa_fisica_benef,
		f.cd_pessoa_fisica cd_pessoa_fisica_pagador,
		(SELECT	s.cd_pessoa_fisica
		from	pls_segurado	s
		where	s.nr_sequencia	= a.nr_seq_titular) cd_pessoa_fisica_titular,
		a.nr_seq_titular,
		coalesce(l.vl_recebido, 0) + coalesce(l.vl_rec_maior, 0) vl_recebido,
		coalesce(l.vl_juros, 0) vl_juros,		
		coalesce(l.vl_multa, 0) vl_multa,		
		m.vl_mensalidade,
		(select	CASE WHEN max(g.ie_grau_parentesco)='4' THEN  '03' WHEN max(g.ie_grau_parentesco)='3' THEN  '04' WHEN max(g.ie_grau_parentesco)='5' THEN  '06' WHEN max(g.ie_grau_parentesco)='6' THEN  '06'  ELSE '04' END 
		from	grau_parentesco	g
		where	g.nr_sequencia	= a.nr_seq_parentesco) ie_relacao,
		r.dt_liquidacao,
		r.nr_titulo,
		e.nr_sequencia,
		m.nr_sequencia nr_seq_mensalidade
	FROM pls_plano p, pls_mensalidade m, pls_contrato_pagador f, pls_mensalidade_segurado e, pessoa_fisica c, pls_segurado a, titulo_receber r
LEFT OUTER JOIN titulo_receber_liq l ON (r.nr_titulo = l.nr_titulo)
WHERE m.nr_sequencia		= r.nr_seq_mensalidade and m.nr_sequencia		= e.nr_seq_mensalidade  and f.nr_sequencia		= m.nr_seq_pagador and a.cd_pessoa_fisica	= c.cd_pessoa_fisica and a.nr_sequencia		= e.nr_seq_segurado and p.nr_sequencia		= a.nr_seq_plano and ((p.ie_tipo_contratacao in ('I','CA')) or (p.ie_tipo_contratacao = 'CE' and (f.cd_pessoa_fisica IS NOT NULL AND f.cd_pessoa_fisica::text <> ''))) and (a.nr_seq_titular IS NOT NULL AND a.nr_seq_titular::text <> '') and ((l.vl_recebido <> 0) or (l.vl_rec_maior <> 0)) and ((coalesce(a.ie_tipo_segurado,'B') in ('B','A')) or (coalesce(a.ie_tipo_segurado,'B') = 'R' and (a.nr_seq_contrato IS NOT NULL AND a.nr_seq_contrato::text <> ''))) and ((r.vl_saldo_titulo < r.vl_titulo) or (r.ie_situacao = 2)) and ((a.cd_estabelecimento = coalesce(cd_estabelecimento_p ,a.cd_estabelecimento)) or
	   	((coalesce(a.cd_estabelecimento::text, '') = '') and (coalesce(cd_estabelecimento_p::text, '') = ''))) and exists (select	1
			from	dmed_regra_tipo_tit	w
			where	w.ie_tipo_receber		= l.cd_tipo_recebimento
			and	coalesce(w.ie_prestadora_ops,'P')	= 'O') and exists (select	1			
			from	dmed_regra_origem_tit	w
			where	w.ie_origem_titulo	= r.ie_origem_titulo) and not exists (select	1
				from	dmed_titulos_mensal	x
				where	x.nr_documento		= r.nr_titulo
				and	x.nr_seq_dmed_mensal	= 1) and (r.ie_situacao not in ('3','5') or (r.ie_situacao = '5' and 
		exists (select	1			
			from	titulo_receber_liq k
			where	k.nr_titulo = r.nr_titulo
			and 	vl_recebido > 0	
			and 	not exists (select 1 from titulo_receber_liq x where x.nr_titulo = k.nr_titulo and x.nr_seq_liq_origem = k.nr_sequencia  LIMIT 1)))) and r.nr_seq_mensalidade = nr_seq_mensalidade_w order by r.nr_titulo;

c_titulo CURSOR FOR	
	SELECT	r.nr_titulo nr_documento,
		substr(coalesce(obter_pessoa_titulo_data(r.nr_titulo,r.dt_emissao,'c'),r.cd_pessoa_fisica),1,10) 
		cd_pessoa_responsavel,
		substr(coalesce(a.cd_pessoa_fisica,obter_pessoa_titulo_data(r.nr_titulo,r.dt_emissao,'c')),1,10) cd_pessoa_beneficiario,
		coalesce(l.vl_recebido + l.vl_rec_maior,r.vl_titulo) vl_documento,
		coalesce(l.vl_juros, 0) vl_juros,		
		coalesce(l.vl_multa, 0) vl_multa,	
		r.dt_emissao dt_documento,
		a.nr_atendimento
	FROM titulo_receber r
LEFT OUTER JOIN atendimento_paciente a ON (r.nr_atendimento = a.nr_atendimento)
LEFT OUTER JOIN titulo_receber_liq l ON (r.nr_titulo = l.nr_titulo)
WHERE not exists (SELECT	1
				from	dmed_titulos_mensal	x
				where	x.nr_documento		= r.nr_titulo
				and	x.nr_seq_dmed_mensal	= nr_seq_dmed_mensal_p) and (r.ie_situacao not in ('3','5') or (r.ie_situacao = '5' and 
		exists (select	1			
			from	titulo_receber_liq k
			where	k.nr_titulo = r.nr_titulo
			and 	vl_recebido > 0	
			and 	not exists (select 1 from titulo_receber_liq x where x.nr_titulo = k.nr_titulo and x.nr_seq_liq_origem = k.nr_sequencia  LIMIT 1)))) and r.cd_estabelecimento	= cd_estabelecimento_p and r.nr_titulo		= ds_titulo_p;	
	

BEGIN

select 	coalesce(max(nr_seq_mensalidade),0)
into STRICT	nr_seq_mensalidade_w
from	titulo_receber
where	nr_titulo = ds_titulo_p;

select 	coalesce(max(ie_juros_multa), 'N')
into STRICT	ie_juros_multa_w
from	dmed_regra_geral;

if (nr_seq_mensalidade_w > 0) and (ie_prestadora_ops_p = 'O') then
	
	open c01;
	loop
	fetch c01 into	
		cd_pessoa_responsavel_w,
		vl_recebido_w,
		vl_juros_w,
		vl_multa_w,
		vl_mensalidade_w,
		dt_documento_w,
		nr_documento_w,
		cd_pessoa_beneficiario_w,
		nr_seq_mensalidade_seg_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		if ie_juros_multa_w = 'S' then
			vl_recebido_w := vl_recebido_w + vl_juros_w + vl_multa_w;
		end if;	

		if vl_mensalidade_w > 0 then
		
			open c02;
			loop
			fetch c02 into	
				vl_item_w,
				ie_tipo_item_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
				
				vl_documento_w	:= round(((vl_recebido_w / vl_mensalidade_w) * vl_item_w), 2);
				
				insert into dmed_titulos_mensal(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_dmed_mensal,
					nr_documento,
					ie_tipo_documento,
					cd_pessoa_titular,
					cd_pessoa_beneficiario,
					vl_pago,
					dt_liquidacao,
					ie_prestadora_ops)
				values (nextval('dmed_titulos_mensal_seq'),
					clock_timestamp(),
					'TasyM1',
					clock_timestamp(),
					'TasyM1',
					nr_seq_dmed_mensal_p,
					nr_documento_w,
					ie_tipo_item_w,
					cd_pessoa_responsavel_w,
					cd_pessoa_beneficiario_w,
					vl_documento_w,
					dt_documento_w,
					'O');
				
				contador_w	:= contador_w + 1;
				
				if (contador_w mod 100 = 0) then
					commit;
				end if;

				end;
			end loop;
			close c02;
		
		end if;
		
		end;
	end loop;
	close c01;	

	open C03;
	loop
	fetch C03 into	
		cd_pessoa_fisica_benef_w,	
		cd_pessoa_fisica_pagador_w,	
		cd_pessoa_fisica_titular_w,	
		nr_seq_titular_w,		
		vl_recebido_w,			
		vl_juros_w,			
		vl_multa_w,			
		vl_mensalidade_w,		
		ie_relacao_dependencia_w,	
		dt_liquidacao_w	,		
		nr_titulo_w,			
		nr_seq_mensalidade_seg_w,	
		nr_seq_mensalidade_w;	
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		cd_pessoa_fisica_responsavel_w	:= coalesce(cd_pessoa_fisica_pagador_w,cd_pessoa_fisica_titular_w);

		select	max(nr_cpf),
			max(dt_nascimento)
		into STRICT	nr_cpf_pagador_w,
			dt_nascimento_pagador_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_responsavel_w;
		
		if ie_juros_multa_w = 'S' then
			vl_recebido_w := vl_recebido_w + vl_juros_w + vl_multa_w;
		end if;	

		if vl_mensalidade_w > 0 then
		
			open C02;
			loop
			fetch C02 into	
				vl_item_w,
				ie_tipo_item_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				
				vl_documento_w	:= round(((vl_recebido_w / vl_mensalidade_w) * vl_item_w), 2);
				
				insert into dmed_titulos_mensal(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_dmed_mensal,
					nr_documento,
					ie_tipo_documento,
					cd_pessoa_titular,
					cd_pessoa_beneficiario,
					vl_pago,
					dt_liquidacao,
					ie_prestadora_ops)
				values (nextval('dmed_titulos_mensal_seq'),
					clock_timestamp(),
					'TasyM2',
					clock_timestamp(),
					'TasyM2',
					nr_seq_dmed_mensal_p,
					nr_titulo_w,
					ie_tipo_item_w,
					cd_pessoa_fisica_responsavel_w,
					cd_pessoa_fisica_benef_w,
					vl_documento_w,
					dt_liquidacao_w,
					'O');
				
				contador_w	:= contador_w + 1;
				
				if (contador_w mod 100 = 0) then
					commit;
				end if;

				end;
			end loop;
			close C02;
		
		end if;
		
		end;
	end loop;
	close C03;
end if;	

if contador_w = 0 then

	open c_titulo;
	loop
	fetch c_titulo into
		nr_documento_w,
		cd_pessoa_responsavel_w,
		cd_pessoa_beneficiario_w,
		vl_documento_w,
		vl_juros_w,
		vl_multa_w,
		dt_documento_w,
		nr_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on c_titulo */
		begin
		
		if ie_juros_multa_w = 'S' then
			vl_documento_w := vl_documento_w + vl_juros_w + vl_multa_w;
		end if;	
		
		select  coalesce(cd_cgc,'X')
		into STRICT	cd_cgc_w
		from	titulo_receber
		where	nr_titulo = nr_documento_w;
		
		if (cd_cgc_w <> 'X')then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(819063);
		end if;
		
		insert into dmed_titulos_mensal(nr_sequencia,
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			nr_seq_dmed_mensal, 
			nr_documento, 
			ie_tipo_documento, 
			cd_pessoa_titular, 
			cd_pessoa_beneficiario, 
			vl_pago, 
			dt_liquidacao,
			ie_prestadora_ops,
			nr_atendimento)
		values (nextval('dmed_titulos_mensal_seq'),
			clock_timestamp(),
			'TasyM3',
			clock_timestamp(),
			'TasyM3',
			nr_seq_dmed_mensal_p, 
			nr_documento_w,
			'TI',
			cd_pessoa_responsavel_w,
			cd_pessoa_beneficiario_w,
			vl_documento_w,
			dt_documento_w,
			coalesce(ie_prestadora_ops_p,'P'),
			nr_atendimento_w);
		
		ie_inclusao_w	:= 'S';
		end;
	end loop;
	close c_titulo;
end if;	

ie_inclusao_p	:= ie_inclusao_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dmed_incluir_titulos ( cd_estabelecimento_p bigint, nr_seq_dmed_mensal_p bigint, ds_titulo_p bigint, nm_usuario_p text, ie_prestadora_ops_p text, ie_inclusao_p INOUT text) FROM PUBLIC;

