-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_consulta_oft_agenda ( nr_seq_agenda_consulta_p bigint, nr_seq_agenda_pac_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

	
nr_atendimento_w	bigint;
dt_agenda_w		timestamp;
cd_medico_w		varchar(10);
nr_sequencia_w		bigint;
nr_seq_status_w		bigint;
ie_dt_consulta_oft	varchar(1) := 'N';
cd_pessoa_fisica_w	varchar(10);
nr_seq_classificacao_w	atendimento_paciente.nr_seq_classificacao%type;
nr_seq_tipo_consulta_w	classificacao_atendimento.nr_seq_tipo_consulta%type;
nr_seq_classif_agenda_w	bigint;
cd_tipo_agenda_w		bigint;
	

BEGIN

nr_seq_status_w := obter_param_usuario(3010, 18, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, nr_seq_status_w);
ie_dt_consulta_oft := obter_param_usuario(3010, 25, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_dt_consulta_oft);

if (nr_seq_agenda_consulta_p IS NOT NULL AND nr_seq_agenda_consulta_p::text <> '') then
	begin
	select	nr_atendimento,
		dt_agenda,
		substr(obter_medico_agecons(cd_agenda,'C'),1,10),
		cd_pessoa_fisica
	into STRICT	nr_atendimento_w,
		dt_agenda_w,
		cd_medico_w,
		cd_pessoa_fisica_w
	from	agenda_consulta
	where	nr_sequencia	=	nr_seq_agenda_consulta_p;
		
CALL consiste_geracao_oftalmologia(nr_atendimento_w,nm_usuario_p,cd_estabelecimento_p);	

if (nr_seq_agenda_consulta_p IS NOT NULL AND nr_seq_agenda_consulta_p::text <> '') and (nr_seq_agenda_consulta_p > 0) then
			select  	max(nr_seq_classificacao)
			into STRICT		nr_seq_classificacao_w
			from    	atendimento_paciente
			where   	nr_atendimento 		= nr_atendimento_w
			and		cd_estabelecimento 	= cd_estabelecimento_p;
			
			if (nr_seq_classificacao_w IS NOT NULL AND nr_seq_classificacao_w::text <> '') then
				select max(nr_seq_tipo_consulta)
				into STRICT   nr_seq_tipo_consulta_w
				from   classificacao_atendimento
				where  nr_sequencia = nr_seq_classificacao_w
				and    coalesce(cd_estabelecimento,cd_estabelecimento_p) = cd_estabelecimento_p
				and    coalesce(ie_situacao,'A') = 'A';
			end if;
		end if;
	
	select	nextval('oft_consulta_seq')
	into STRICT	nr_sequencia_w
	;

	insert into oft_consulta(
		nr_sequencia,
		dt_atualizacao,         
		nm_usuario,             
		dt_atualizacao_nrec,    
		nm_usuario_nrec,        
		nr_atendimento,         
		nr_atend_consultorio,   
		dt_consulta,            
		cd_medico,              
		dt_fim_consulta,
		nr_seq_status,
		nr_seq_tipo_consulta,
		cd_pessoa_fisica)
	values (
		nr_sequencia_w,
		clock_timestamp(),         
		nm_usuario_p,
		clock_timestamp(),    
		nm_usuario_p,
		nr_atendimento_w,
		null,
		CASE WHEN ie_dt_consulta_oft='S' THEN clock_timestamp()  ELSE dt_agenda_w END ,
		cd_medico_w,
		null,
		nr_seq_status_w,
		nr_seq_tipo_consulta_w,
		cd_pessoa_fisica_w);
	commit;
	
	update	agenda_consulta
	set	nr_seq_oftalmo	=	nr_sequencia_w
	where	nr_sequencia	=	nr_seq_agenda_consulta_p;		
	commit;
	
	update prescr_medica
	set    nr_seq_consulta_oft = nr_sequencia_w
	where  nr_seq_agecons  =  nr_seq_agenda_consulta_p;
	commit;
	
	end;
end if;

if (nr_seq_agenda_pac_p IS NOT NULL AND nr_seq_agenda_pac_p::text <> '') then
	begin
	select	nr_atendimento,
				hr_inicio,
				coalesce(cd_medico_exec,cd_medico),
				cd_pessoa_fisica,
				nr_seq_classif_agenda
	into STRICT		nr_atendimento_w,
				dt_agenda_w,
				cd_medico_w,
				cd_pessoa_fisica_w,
				nr_seq_classif_agenda_w
	from		agenda_paciente
	where		nr_sequencia	=	nr_seq_agenda_pac_p;
	
	CALL consiste_geracao_oftalmologia(nr_atendimento_w,nm_usuario_p,cd_estabelecimento_p);

	if (nr_seq_agenda_pac_p IS NOT NULL AND nr_seq_agenda_pac_p::text <> '') and (nr_seq_agenda_pac_p > 0) then
		if (nr_seq_classif_agenda_w IS NOT NULL AND nr_seq_classif_agenda_w::text <> '') then
			select	max(nr_seq_tipo_consulta)
			into STRICT		nr_seq_tipo_consulta_w
			from		agenda_paciente_classif
			where		nr_sequencia = nr_seq_classif_agenda_w;
		end if;
		
		if (coalesce(nr_seq_tipo_consulta_w::text, '') = '') then	
			select  	max(nr_seq_classificacao)
			into STRICT		nr_seq_classificacao_w
			from    	atendimento_paciente
			where   	nr_atendimento 		= nr_atendimento_w
			and		cd_estabelecimento 	= cd_estabelecimento_p;
			
			if (nr_seq_classificacao_w IS NOT NULL AND nr_seq_classificacao_w::text <> '') then
				select max(nr_seq_tipo_consulta)
				into STRICT   nr_seq_tipo_consulta_w	
				from   classificacao_atendimento
				where  nr_sequencia = nr_seq_classificacao_w
				and    coalesce(cd_estabelecimento,cd_estabelecimento_p) = cd_estabelecimento_p
				and    coalesce(ie_situacao,'A') = 'A';
			end if;
		end if;	
	end if;
	
	select	nextval('oft_consulta_seq')
	into STRICT	nr_sequencia_w
	;

	insert into oft_consulta(
		nr_sequencia,
		dt_atualizacao,         
		nm_usuario,             
		dt_atualizacao_nrec,    
		nm_usuario_nrec,        
		nr_atendimento,         
		nr_atend_consultorio,   
		dt_consulta,            
		cd_medico,              
		dt_fim_consulta,
		nr_seq_status,
		nr_seq_tipo_consulta,
		cd_pessoa_fisica)
	values (
		nr_sequencia_w,
		clock_timestamp(),         
		nm_usuario_p,
		clock_timestamp(),    
		nm_usuario_p,
		nr_atendimento_w,
		null,
		CASE WHEN ie_dt_consulta_oft='S' THEN clock_timestamp()  ELSE dt_agenda_w END ,
		cd_medico_w,
		null,
		nr_seq_status_w,
		nr_seq_tipo_consulta_w,
		cd_pessoa_fisica_w);
	commit;
	
	update	agenda_paciente
	set		nr_seq_oftalmo	=	nr_sequencia_w
	where		nr_sequencia	=	nr_seq_agenda_pac_p;		
	commit;
	
	select max(a.cd_tipo_agenda)
	into STRICT   cd_tipo_agenda_w
	from   agenda a,
		   agenda_paciente b
	where  a.cd_agenda = b.cd_agenda
	and    b.nr_sequencia  = nr_seq_agenda_pac_p;
	
	if (coalesce(cd_tipo_agenda_w,0) = 2) then
	
		update prescr_medica
		set    nr_seq_consulta_oft = nr_sequencia_w
		where  nr_seq_agenda  	   =  nr_seq_agenda_pac_p;
		commit;
	end if;
	
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_consulta_oft_agenda ( nr_seq_agenda_consulta_p bigint, nr_seq_agenda_pac_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

