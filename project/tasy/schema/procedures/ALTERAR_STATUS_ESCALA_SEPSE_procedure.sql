-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE alterar_status_escala_sepse ( nr_seq_escala_p bigint, ie_status_p text, nm_usuario_p text, ds_justificativa_p text default null, nr_atendimento_p bigint default 0, ie_opcao_p text default 'N', ie_tipo_descarte_p text default '', qt_horas_reaval_p bigint default null, nr_seq_status_p bigint default 0) AS $body$
DECLARE


nr_atendimento_w	    bigint;
ie_status_w			    varchar(3);
dt_status_ant_w         timestamp;
dt_status_atual_w       timestamp;
qt_intervalo_status_w   double precision;
nr_regras_atendidas_w   varchar(2000);
ie_tipo_sepse_w         varchar(1);
dt_liberacao_w          timestamp;
dt_liberacao_aval_w     timestamp;
dt_liberacao_reaval_w   timestamp;
jobno					bigint;
nr_seq_evento_w         bigint;
qt_reg_w                bigint;
dt_reaval_w				timestamp;
qt_horas_reaval_w		bigint;
qt_sep_evolucao_w		bigint;


BEGIN
if (nr_seq_escala_p > 0) then

	ie_status_w := ie_status_p;

	if (nr_atendimento_p > 0) then
			ie_tipo_sepse_w := obter_se_sepse_liberada(nr_atendimento_p);
	else
			ie_tipo_sepse_w := 'A';
	end if;
	
	if (ie_tipo_sepse_w = 'P') then --Pediatric
		begin
		if (ie_status_w = 'F') then -- Protocol Conclusion
			update escala_sepse_infantil
			set    dt_fim_protocolo = clock_timestamp(),
			       nm_usuario_fim = nm_usuario_p,
				   ds_justificativa_fim = ds_justificativa_p
			where  nr_sequencia = nr_seq_escala_p;		
		else
			if (ie_status_w = 'RA') and (nr_seq_status_p > 0) then
			
				--Verificar se ja foi feito a reavaliacao
				select count(1)
				into STRICT   qt_reg_w
				from escala_sepse_status
				where nr_seq_escala_ped = nr_seq_escala_p
				and   nr_sequencia > nr_seq_status_p;
				
				if (qt_reg_w > 1) then				
					goto Final;
				end if;
				
				--Verificar fim protocolo
				select count(1)
				into STRICT   qt_reg_w
				from escala_sepse_infantil
				where nr_sequencia = nr_seq_escala_p
				and (dt_fim_protocolo IS NOT NULL AND dt_fim_protocolo::text <> '');
				
				if (qt_reg_w > 0) then				
					goto Final;
				end if;
			end if;
			
			select max(dt_liberacao_status), max(nr_seq_evento)
			into STRICT   dt_liberacao_w, nr_seq_evento_w
			from   escala_sepse_infantil
			where  nr_sequencia = nr_seq_escala_p;
	
			qt_reg_w := 1;
			
			if (ie_status_w not in ('SE','SM','SA')) then
				select count(1)
				into STRICT   qt_reg_w
				from   escala_sepse_status
				where  nr_seq_escala_ped = nr_seq_escala_p
				and    ie_status_sepsis in ('SM','SA');
			end if;
			
			if (ie_opcao_p = 'DE') or (ie_opcao_p = 'D') then
				CALL alterar_status_escala_sepse(nr_seq_escala_p, 'F', nm_usuario_p, obter_desc_expressao(891996), nr_atendimento_p); -- Finalizar protocolo
			end if;
			if (coalesce(dt_liberacao_w::text, '') = '') and ((ie_status_w not in ('SE','SM','SA')) or (qt_reg_w = 0)) then
				dt_liberacao_w := clock_timestamp();
				if (ie_status_w not in ('D','RD')) and (coalesce(nr_seq_evento_w::text, '') = '') then
					nr_seq_evento_w := gerar_evento_sepse(nr_atendimento_p, nr_seq_evento_w, nr_seq_escala_p, nm_usuario_p);
				end if;
			end if;
			
			if (ie_status_w = 'F') then -- Update para descartada (Enfermeiro)
				update	escala_sepse_infantil
				set		ie_status_sepsis = 'D',
						nm_usuario_status = nm_usuario_p,
						dt_liberacao_status = dt_liberacao_w,
						ds_justif_status = ds_justificativa_p,
						nr_seq_evento = nr_seq_evento_w
				where	nr_sequencia = nr_seq_escala_p;	
				commit;			
			else
				update	escala_sepse_infantil
				set		ie_status_sepsis = ie_status_w,
						nm_usuario_status = nm_usuario_p,
						dt_liberacao_status = dt_liberacao_w,
						ds_justif_status = ds_justificativa_p,
						nr_seq_evento = nr_seq_evento_w
				where	nr_sequencia = nr_seq_escala_p;	
				commit;
			end if;
			
			dt_status_atual_w := clock_timestamp();			
			
			select  coalesce(max(x.dt_atualizacao),dt_status_atual_w)
			into STRICT    dt_status_ant_w
			from    escala_sepse_status x
			where   x.nr_seq_escala_ped = nr_seq_escala_p;
					
			qt_intervalo_status_w := round((dt_status_atual_w - dt_status_ant_w) *24*60, 2);
			
			insert into escala_sepse_status(	nr_sequencia,
												dt_atualizacao,
												nm_usuario,
												dt_atualizacao_nrec,
												nm_usuario_nrec,
												ie_status_sepsis,
												nr_seq_escala_ped,
												dt_avaliacao,
												ds_justif_status,
												qt_intervalo_status,
												qt_horas_reaval)
									values (		nextval('escala_sepse_status_seq'),
												dt_status_atual_w,
												nm_usuario_p,
												dt_status_atual_w,
												nm_usuario_p,
												ie_status_w,
												nr_seq_escala_p,
												dt_status_atual_w,
												ds_justificativa_p,
												qt_intervalo_status_w,
												qt_horas_reaval_p);

			commit;
			
			if (nr_atendimento_p > 0) then
				nr_regras_atendidas_w := gqa_liberacao_escala(nr_atendimento_p, nr_seq_escala_p, nm_usuario_p, 'ESCALA_SEPSE_INFANTIL', nr_regras_atendidas_w, ie_status_w);
				CALL gera_protocolo_assistencial(nr_atendimento_p, nm_usuario_p);			
			end if;	
			
			if (ie_opcao_p in ('A','AE')) then
				select max(dt_liberacao_aval), max(dt_liberacao_reaval)
				into STRICT   dt_liberacao_aval_w, dt_liberacao_reaval_w
				from   escala_sepse_infantil
				where  nr_sequencia = nr_seq_escala_p;
				if (coalesce(dt_liberacao_aval_w::text, '') = '') then
					update escala_sepse_infantil
					set    dt_liberacao_aval = clock_timestamp(),
						   nm_usuario_aval = nm_usuario_p
					where  nr_sequencia = nr_seq_escala_p;
					
					dbms_job.submit(jobno, 'gerar_choque_septico('''|| nr_atendimento_p || ''',''' || nm_usuario_p || ''',178,''RA'',' || nr_seq_escala_p||');', clock_timestamp()); --(sysdate + (3/24)));
					
				elsif (coalesce(dt_liberacao_reaval_w::text, '') = '') then
					update escala_sepse_infantil
					set    dt_liberacao_reaval = clock_timestamp(),
						   nm_usuario_reavaL = nm_usuario_p
					where  nr_sequencia = nr_seq_escala_p;
				end if;
			end if;
			
			if (ie_status_w = 'D' or ie_status_w = 'FV' or  ie_status_w = 'RD') then -- Protocol Conclusion
			update escala_sepse_infantil
			set    dt_fim_protocolo = clock_timestamp(),
			       nm_usuario_fim = nm_usuario_p,
				   ds_justificativa_fim = ds_justificativa_p
			where  nr_sequencia = nr_seq_escala_p;	
			commit;
			end if;
			
		end if;
		
		if (ie_opcao_p in ('AE', 'E', 'DE')) then -- Generate clinical notes
			CALL gerar_evolucao_sepse(nr_seq_escala_p, nm_usuario_p);
		end if;
	
		end;
		
		
	else -- Adult
		begin
		if (ie_status_p = 'SD') then
			
				ie_status_w := 'SN';
			
		end if;	
		
		update	escala_sepse
		set		ie_status_sepsis = ie_status_w,
				nm_usuario_status = nm_usuario_p
		where	nr_sequencia = nr_seq_escala_p;	
		
		commit;
		
		
		if (ie_status_p in ('RC','RF','RE','RD','SC','SN','D','CS'))then
		
			update	escala_sepse
			set		dt_liberacao_status = clock_timestamp(),
					ds_justif_status = ds_justificativa_p
			where	nr_sequencia = nr_seq_escala_p;	
			
			commit;
		
		end if;
		
		if (ie_tipo_descarte_p = 'FV') then
			update	escala_sepse
			set		ie_fim_vida = 'S'
			where	nr_sequencia = nr_seq_escala_p;	
		
			commit;
		end if;
			
		if (ie_tipo_descarte_p = 'DA') then
			update	escala_sepse
			set		ie_doencas_atipicas = 'S'
			where	nr_sequencia = nr_seq_escala_p;	
		
			commit;

		end if;
		
		dt_status_atual_w := clock_timestamp();
		
		select  coalesce(max(x.dt_atualizacao),dt_status_atual_w)
		into STRICT    dt_status_ant_w
		from    escala_sepse_status x
		where   x.nr_seq_escala = nr_seq_escala_p;
		
		qt_intervalo_status_w := round((dt_status_atual_w - dt_status_ant_w) *24*60, 2);

		insert into escala_sepse_status(	nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											dt_atualizacao_nrec,
											nm_usuario_nrec,
											ie_status_sepsis,
											nr_seq_escala,
											dt_avaliacao,
											ds_justif_status,
											qt_intervalo_status)
								values (		nextval('escala_sepse_status_seq'),
											dt_status_atual_w,
											nm_usuario_p,
											dt_status_atual_w,
											nm_usuario_p,
											ie_status_w,
											nr_seq_escala_p,
											dt_status_atual_w,
											ds_justificativa_p,
											qt_intervalo_status_w);
											
											
											
		commit;
		
		
		Select 	max(nr_atendimento)
		into STRICT	nr_atendimento_w
		from	escala_sepse
		where	nr_sequencia = nr_seq_escala_p;
		
		if (nr_atendimento_w > 0) then		
		
			nr_regras_atendidas_w := gqa_liberacao_escala(nr_atendimento_w, nr_seq_escala_p, nm_usuario_p, 'ESCALA_SEPSE', nr_regras_atendidas_w, ie_status_w);
			CALL gera_protocolo_assistencial(nr_atendimento_w, nm_usuario_p);
			
		end if;	
		end;
		
		select 	count(*)
		into STRICT	qt_sep_evolucao_w
		from 	TIPO_EVOLUCAO
		where 	ie_situacao = 'A'
		and 	cd_tipo_evolucao = 'SEP';
		
		if ((ie_status_p = 'RC' or ie_status_p = 'RE') and qt_sep_evolucao_w > 0) then
			CALL gerar_evolucao_sepse_ilas(nr_seq_escala_p, nm_usuario_p);
		end if;
	end if;
end if;
<<Final>>
qt_reg_w := 0;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE alterar_status_escala_sepse ( nr_seq_escala_p bigint, ie_status_p text, nm_usuario_p text, ds_justificativa_p text default null, nr_atendimento_p bigint default 0, ie_opcao_p text default 'N', ie_tipo_descarte_p text default '', qt_horas_reaval_p bigint default null, nr_seq_status_p bigint default 0) FROM PUBLIC;

