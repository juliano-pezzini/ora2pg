-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prescricao_pre_venda ( nr_atendimento_p bigint, dt_entrega_p timestamp, nm_usuario_p text, cd_setor_usuario_p bigint, ie_setor_p text) AS $body$
DECLARE


nr_sequencia_w     			bigint;
nr_seq_prevenda_item_w  	bigint;
nr_prescricao_w				bigint;
cd_setor_atendimento_w		integer := 0;
cd_procedimento_w			bigint	 := 0;
ie_origem_proced_w			bigint := 0;
ie_origem_inf_w				varchar(1);
ie_data_w					varchar(3);
dt_prescricao_w				timestamp;
cd_estabelecimento_w		smallint;
cd_setor_proced_w			integer;
ie_medico_prescr_w			varchar(15);
nr_seq_proc_interno_uni_w	bigint;
nr_seq_proc_interno_w		bigint;
cd_setor_entrega_w			bigint;
cd_setor_padrao_w			bigint;
hr_inicio_prescricao_w		timestamp;
ie_liberar_w				varchar(10) := 'N';
ie_medico_w					varchar(5);
cd_setor_usuario_w			usuario.cd_setor_atendimento%type;
cd_pessoa_fisica_w			pessoa_fisica.cd_pessoa_fisica%type;
cd_pf_usuario_w				pessoa_fisica.cd_pessoa_fisica%type;
ie_tipo_evol_w				usuario.ie_tipo_evolucao%type;
ds_erro_w					varchar(4000);
ie_tipo_atendimento_w		smallint;
cd_convenio_w				integer;
cd_categoria_w				varchar(10);
cd_intervalo_w				varchar(7);
nr_seq_interno_w			prescr_procedimento.nr_seq_interno%type;
qt_altura_cm_w				prescr_medica.qt_altura_cm%type;
qt_peso_w					prescr_medica.qt_peso%type;
cd_perfil_w					perfil.cd_perfil%type;
dt_prev_execucao_w			prescr_medica.dt_inicio_prescr%type;


c01 CURSOR FOR
SELECT	cd_setor_atendimento
from	procedimento_setor_atend
where	cd_procedimento		= cd_procedimento_w
and	ie_origem_proced		= ie_origem_proced_w
and	cd_estabelecimento		= cd_estabelecimento_w
order by ie_prioridade desc;

c02 CURSOR FOR
SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno
from	pre_venda_item
where	nr_atendimento = nr_atendimento_p
and coalesce(nr_prescricao::text, '') = '';


BEGIN
	
select	cd_estabelecimento,
	ie_tipo_atendimento
into STRICT	cd_estabelecimento_w,
	ie_tipo_atendimento_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_p;

select	coalesce(max(cd_convenio),0),
	coalesce(max(cd_categoria),0)
into STRICT	cd_convenio_w,
	cd_categoria_w
from 	atend_categoria_convenio
where	nr_atendimento = nr_atendimento_p;

/* Obter os valores dos parâmetros na função Entrada Única de Pacientes - EUP */

ie_data_w := Obter_Param_Usuario(916, 45, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_data_w);
ie_medico_prescr_w := Obter_Param_Usuario(916, 203, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_medico_prescr_w);
cd_setor_entrega_w  := Obter_Param_Usuario(916, 457, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, cd_setor_entrega_w );
ie_liberar_w := Obter_param_usuario(916, 519, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_liberar_w);
/* Parametros para Procedimentos */

cd_intervalo_w := Obter_Param_Usuario(916, 537, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, cd_intervalo_w);

cd_perfil_w := obter_perfil_ativo;



select 	max(a.cd_pessoa_fisica),
		max(a.ie_tipo_evolucao)
into STRICT	cd_pf_usuario_w,
		ie_tipo_evol_w	
from	usuario a
where	a.nm_usuario = nm_usuario_p;


if (cd_pf_usuario_w IS NOT NULL AND cd_pf_usuario_w::text <> '') then
	select	coalesce(max('1'),'3')
	into STRICT	ie_origem_inf_w
	from	medico
	where	cd_pessoa_fisica	= cd_pf_usuario_w
	and	coalesce(ie_situacao,'A') = 'A';
else
	ie_origem_inf_w	:= '3';
end if;	


if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
	qt_altura_cm_w		:= obter_sinal_vital(nr_atendimento_p, obter_desc_expressao(283402));--Altura
	qt_peso_w		:= obter_sinal_vital(nr_atendimento_p, obter_desc_expressao(295698));--Peso
else
	select	max(cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_w		
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;
	
	qt_altura_cm_w		:= obter_qt_altura_pf(cd_pessoa_fisica_w);
	qt_peso_w		:= obter_peso_pf(cd_pessoa_fisica_w);
end if;


select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_medico_w
from	medico
where	cd_pessoa_fisica = cd_pessoa_fisica_w
and	ie_situacao	= 'A';

cd_setor_padrao_w	:= NULL;

if (coalesce(cd_setor_entrega_w,0) > 0) then
	cd_setor_padrao_w	:= cd_setor_entrega_w;
end if;


open c02;
loop
fetch c02 into
	nr_seq_prevenda_item_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_proc_interno_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin

	    if (coalesce(nr_prescricao_w::text, '') = '') then

			if (ie_setor_p = 'Usuário') then 
				
				cd_setor_atendimento_w	:= cd_setor_usuario_p;
				
			elsif (ie_setor_p = 'Paciente') then
					
				select coalesce(max(cd_setor_atendimento),cd_setor_usuario_p)
				into STRICT cd_setor_atendimento_w
				from atend_paciente_unidade
				where nr_seq_interno	= obter_atepacu_paciente(nr_atendimento_p, 'A');
					
			elsif (ie_setor_p = 'Procedimento') then
				begin
					
					open	c01;
					loop
					fetch	c01 into cd_setor_proced_w;
					EXIT WHEN NOT FOUND; /* apply on c01 */
						begin
						cd_setor_atendimento_w	:= cd_setor_proced_w;
						end;
					end loop;
					close c01;
					
					if (cd_setor_atendimento_w = 0) then
						cd_setor_atendimento_w	:= cd_setor_usuario_p;
					end if;
					
				end;		
			elsif (ie_setor_p = 'Proc Interno') then
				begin
            
					select	coalesce(max(obter_setor_exec_proc_interno(nr_seq_proc_interno_w,null,ie_tipo_atendimento_w,cd_convenio_w,cd_categoria_w)),cd_setor_usuario_p)
					into STRICT	cd_setor_atendimento_w
					;

				end;
			end if;
                        
            
			if (cd_setor_atendimento_w	= 0) or (coalesce(cd_setor_atendimento_w::text, '') = '') then
				cd_setor_atendimento_w	:= cd_setor_usuario_p;
			end if;

            
			dt_prescricao_w	:= clock_timestamp();

			if (ie_data_w = 'E') then
				select	dt_entrada
				into STRICT	dt_prescricao_w
				from	atendimento_paciente
				where	nr_atendimento	= nr_atendimento_p;
			end if;
				
			if ((coalesce(cd_setor_padrao_w,cd_setor_atendimento_w) IS NOT NULL AND (coalesce(cd_setor_padrao_w,cd_setor_atendimento_w))::text <> '')) then
				hr_inicio_prescricao_w:= obter_prim_horario_prescricao(nr_atendimento_p, coalesce(cd_setor_padrao_w,cd_setor_atendimento_w),dt_prescricao_w,nm_usuario_p,'R');
			end if;

			select	nextval('prescr_medica_seq')
			into STRICT	nr_prescricao_w
			;

			insert into prescr_medica(
				nr_prescricao,
				cd_pessoa_fisica,
				nr_atendimento,
				cd_medico,
				dt_prescricao,
				dt_atualizacao,
				nm_usuario,
				nm_usuario_original,
				nr_horas_validade,
				dt_primeiro_horario, 
				dt_liberacao,
				cd_setor_atendimento,
				ie_recem_nato,
				ie_origem_inf,
				cd_estabelecimento,
				cd_prescritor,
				ie_funcao_prescritor,
				qt_altura_cm,
				qt_peso,
				cd_funcao_origem,
				cd_perfil_ativo,
				ds_observacao)
			SELECT 	nr_prescricao_w,
				a.cd_pessoa_fisica,
				nr_atendimento_p,
				CASE WHEN ie_medico_prescr_w='MR' THEN a.cd_medico_resp WHEN ie_medico_prescr_w='RE' THEN a.cd_medico_referido  ELSE null END ,
				dt_prescricao_w,
				clock_timestamp(),
				nm_usuario_p,
				nm_usuario_p,
				24,
				hr_inicio_prescricao_w,
				null,
				coalesce(cd_setor_padrao_w,cd_setor_atendimento_w),
				'N',
				ie_origem_inf_w,
				cd_estabelecimento_w,
				obter_dados_usuario_opcao(nm_usuario_p, 'C'),
				ie_tipo_evol_w,
				qt_altura_cm_w,
				qt_peso_w,
				916,
				cd_perfil_w,
				obter_desc_expressao(937954)
			from	atendimento_paciente a
			where	a.nr_atendimento	= nr_atendimento_p;

			commit;

            
			Select dt_inicio_prescr 
			into STRICT dt_prev_execucao_w
			from prescr_medica
			where nr_prescricao = nr_prescricao_w;
							
							  
		end if;
				
	  
	  
		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_sequencia_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_w;


		select	nextval('prescr_procedimento_seq')
		into STRICT	nr_seq_interno_w
		;
		
		
		insert into prescr_procedimento(
			nr_seq_interno,
			nr_prescricao,
			nr_sequencia,
			cd_procedimento,
			qt_procedimento,
			dt_atualizacao,
			nm_usuario,
			ie_origem_inf,
			ie_origem_proced,
			dt_prev_execucao,
			nr_seq_proc_interno,
			cd_setor_atendimento,
			ds_observacao)
		values (	nr_seq_interno_w,
			nr_prescricao_w,
			nr_sequencia_w,
			cd_procedimento_w,
			1,
			clock_timestamp(), 
			nm_usuario_p, 
			ie_origem_proced_w,
			ie_origem_proced_w,
			dt_prev_execucao_w,
			nr_seq_proc_interno_w,
			coalesce(cd_setor_padrao_w,cd_setor_atendimento_w),
			obter_desc_expressao(937954));
			
		
		update	pre_venda_item
		set	nr_prescricao = nr_prescricao_w,
			nr_seq_interno = nr_seq_interno_w
		where nr_sequencia = nr_seq_prevenda_item_w;
		
		commit;
		
		CALL intpd_enviar_atendimento(nr_atendimento_p, 'A', '0', nm_usuario_p);

	end;
end loop;
close c02;

if (ie_liberar_w	= 'S') then
	ds_erro_w := liberar_prescricao(nr_prescricao_w, nr_atendimento_p, ie_medico_w, obter_perfil_ativo, nm_usuario_p, 'N', ds_erro_w);
end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescricao_pre_venda ( nr_atendimento_p bigint, dt_entrega_p timestamp, nm_usuario_p text, cd_setor_usuario_p bigint, ie_setor_p text) FROM PUBLIC;

