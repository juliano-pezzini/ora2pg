-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_gerar_operacao_rvs ( nm_usuario_p text, nr_sequencia_p bigint, nr_atendimento_p bigint, ie_somente_nota_p text) AS $body$
DECLARE

 
dt_entrada_w		timestamp;
qt_insert_w		bigint;

/* ************************************************************************************************************* 
                                     PROCEDIMENTO DE ESTRANGEIROS 
  Valor dos procedimentos de todas as contas do paciente estrangeiro, para o atendimento passado por parâmetro, agrupado 
  pelo código NBS(Nomenclatura Brasileira de Serviço). 
   
  O código NBS fica em: 
  Cadastros gerais(Shift+F11) / Aplicação principal / Fiscal / Nomenclatura Brasileira de Serviço. 
   
  No cadastro de NBS fica a regra sobre de estrutura do procedimento que pertence à aquela NBS 
 
   ************************************************************************************************************* */
 
c01 CURSOR FOR 
	SELECT	sum(a.vl_procedimento) vl_procedimentos, 
		fis_obter_nbs_procedimento(b.cd_area_procedimento, b.cd_especialidade, b.cd_grupo_proc, b.cd_procedimento, 'S') nr_seq_nbs_proc, 
		coalesce(fis_obter_nbs_procedimento(b.cd_area_procedimento, b.cd_especialidade, b.cd_grupo_proc, b.cd_procedimento, 'S'),a.nr_sequencia) nr_seq_agrup 
	from	conta_paciente c, 
		estrutura_procedimento_v b, 
		procedimento_paciente a 
	where	a.cd_procedimento	= b.cd_procedimento 
	and	a.ie_origem_proced	= b.ie_origem_proced 
	and	a.nr_atendimento	= c.nr_atendimento 
	and	a.nr_interno_conta	= c.nr_interno_conta 
	and	coalesce(a.cd_motivo_exc_conta::text, '') = '' 
	and	(((ie_somente_nota_p = 'N') 
		and not exists (	SELECT	1 
				from	conta_paciente y, 
					nota_fiscal x 
				where	x.nr_interno_conta = y.nr_interno_conta)) 
		or exists (	select	1 
				from	pais w, 
					compl_pessoa_fisica z, 
					conta_paciente y, 
					nota_fiscal x 
				where	x.nr_interno_conta = c.nr_interno_conta 
				and	x.cd_pessoa_fisica = z.cd_pessoa_fisica 
				and	(x.dt_atualizacao_estoque IS NOT NULL AND x.dt_atualizacao_estoque::text <> '') 
				and	z.ie_tipo_complemento = 1 -- Complemento residencial 
				and	z.nr_seq_pais = w.nr_sequencia 
				and	somente_numero(w.cd_pais_siscoserv) <> 105 
				) 
		) 
	and	a.nr_atendimento	= nr_atendimento_p 
	group by 
		fis_obter_nbs_procedimento(b.cd_area_procedimento, b.cd_especialidade, b.cd_grupo_proc, b.cd_procedimento, 'S'), 
		coalesce(fis_obter_nbs_procedimento(b.cd_area_procedimento, b.cd_especialidade, b.cd_grupo_proc, b.cd_procedimento, 'S'),a.nr_sequencia) 
	order by 1;

c01_w		c01%rowtype;


BEGIN 
 
begin 
 
select	dt_entrada 
into STRICT	dt_entrada_w 
from	atendimento_paciente 
where	nr_atendimento = nr_atendimento_p;
 
exception 
when others then 
	/* 
	Pra não dar erro no insert abaixo 
	Caso não tiver data de atendimento coloca a data atual 
	*/
 
	dt_entrada_w := clock_timestamp();
end;
 
open c01;
loop 
fetch c01 into 
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
 
	insert into siscoserv_rvs_operacao( 
					nr_sequencia, 
					nm_usuario, 
					nm_usuario_nrec, 
					dt_atualizacao, 
					dt_atualizacao_nrec, 
					dt_inicial, 
					dt_final, 
					nr_seq_rvs, 
					nr_seq_nbs, 
					vl_operacao) 
	values ( 
					nextval('siscoserv_rvs_operacao_seq'), 
					nm_usuario_p, 
					nm_usuario_p, 
					clock_timestamp(), 
					clock_timestamp(), 
					dt_entrada_w, 
					null, 
					nr_sequencia_p, 
					c01_w.nr_seq_nbs_proc, 
					c01_w.vl_procedimentos 
					);
	 
	qt_insert_w := qt_insert_w + 1;
	if (qt_insert_w > 100) then 
		begin 
		commit;
		qt_insert_w := 0;
		end;
	end if;
 
	end;
 
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_gerar_operacao_rvs ( nm_usuario_p text, nr_sequencia_p bigint, nr_atendimento_p bigint, ie_somente_nota_p text) FROM PUBLIC;

