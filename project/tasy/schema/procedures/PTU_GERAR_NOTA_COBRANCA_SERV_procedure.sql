-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_nota_cobranca_serv ( nr_seq_servico_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ds_tipo_atendimento_w		varchar(255);
ds_motivo_saida_w		varchar(255);
nm_segurado_w			varchar(25);
cd_guia_w			varchar(20);
cd_usuario_plano_w		varchar(13);
cd_doenca_w			varchar(10);
ie_motivo_saida_w		varchar(2) := '1';
ie_tipo_atendimento_w		varchar(2) := '1';
cd_excecao_w			varchar(1);
nr_seq_conta_w			bigint;
nr_seq_cobranca_w		bigint;
nr_seq_protocolo_w		bigint;
nr_seq_saida_spsadt_w		bigint;
nr_lote_w			bigint;
nr_seq_tipo_atendimento_w	bigint;
cd_cooperativa_w		varchar(10);
nr_seq_outorgante_w		smallint;
cd_estabelecimento_w		smallint;
ie_carater_internacao_w		smallint;
dt_atendimento_referencia_w	timestamp;

 
C01 CURSOR FOR 
	SELECT	substr(pls_obter_dados_segurado(a.nr_seq_segurado,'C'),5,13), 
		substr(pls_obter_dados_segurado(a.nr_seq_segurado,'N'),1,25), 
		CASE WHEN a.ie_carater_internacao='E' THEN 0 WHEN a.ie_carater_internacao='U' THEN 1 WHEN a.ie_carater_internacao='' THEN 2 END , 
		coalesce(a.cd_guia_referencia,a.cd_guia), 
		coalesce(a.dt_atendimento_referencia,clock_timestamp()), 
		coalesce(a.cd_excecao,'0'), 
		a.nr_seq_tipo_atendimento, 
		a.nr_seq_saida_spsadt, 
		a.cd_cooperativa, 
		b.nr_sequencia, 
		a.nr_sequencia 
	from	pls_conta		a, 
		pls_protocolo_conta	b 
	where	a.nr_seq_protocolo	= b.nr_sequencia 
	and	pls_obter_se_internado(a.nr_sequencia,'X') = 'N' 
	and	a.nr_seq_serv_pre_pagto	= nr_seq_servico_p 
	and	coalesce(b.ie_tipo_protocolo,'C')	= 'C';

BEGIN
 
select	cd_estabelecimento 
into STRICT	cd_estabelecimento_w 
from	ptu_servico_pre_pagto 
where	nr_sequencia	= nr_seq_servico_p;
 
cd_cooperativa_w	:= pls_obter_unimed_estab(cd_estabelecimento_w);
 
open C01;
loop 
fetch C01 into 
	cd_usuario_plano_w, 
	nm_segurado_w, 
	ie_carater_internacao_w, 
	cd_guia_w, 
	dt_atendimento_referencia_w, 
	cd_excecao_w, 
	nr_seq_tipo_atendimento_w, 
	nr_seq_saida_spsadt_w, 
	nr_seq_outorgante_w, 
	nr_seq_protocolo_w, 
	nr_seq_conta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	begin 
	select	cd_doenca 
	into STRICT	cd_doenca_w 
	from	pls_diagnostico_conta 
	where	nr_seq_conta	= nr_seq_conta_w 
	and	ie_classificacao = 'P';
	exception 
	when others then 
		cd_doenca_w	:= '1';
	end;
	 
	begin 
	select	substr(cd_tiss,1,2) 
	into STRICT	ie_tipo_atendimento_w 
	from  pls_tipo_atendimento 
	where	nr_sequencia	= nr_seq_tipo_atendimento_w;
	exception 
	when others then 
		ie_tipo_atendimento_w	:= '1';
	end;
	 
	begin 
	select	substr(cd_tiss,1,2) 
	into STRICT	ie_motivo_saida_w 
	from	pls_motivo_saida_sadt 
	where	nr_sequencia	= nr_seq_saida_spsadt_w;
	exception 
	when others then 
		ie_motivo_saida_w	:= '1';
	end;
	 
	select	nextval('ptu_nota_cobranca_seq') 
	into STRICT	nr_seq_cobranca_w 
	;
	 
	nr_lote_w := nr_seq_conta_w+nr_seq_protocolo_w;
	 
	insert into ptu_nota_cobranca(nr_sequencia, dt_atualizacao, nm_usuario, 
		dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_serv_pre_pagto, 
		nr_lote, nr_nota, cd_unimed, 
		cd_usuario_plano, nm_beneficiario, dt_atendimento, 
		cd_excecao, ie_carater_atendimento, cd_cid, 
		ie_paciente, ie_tipo_saida_spdat, ie_tipo_atendimento, 
		nr_guia_principal) 
	values (nr_seq_cobranca_w, clock_timestamp(), nm_usuario_p, 
		clock_timestamp(), nm_usuario_p, nr_seq_servico_p, 
		nr_lote_w, nr_seq_conta_w, cd_cooperativa_w, 
		cd_usuario_plano_w, nm_segurado_w, dt_atendimento_referencia_w, 
		cd_excecao_w, ie_carater_internacao_w, cd_doenca_w, 
		'1', ' ', ie_tipo_atendimento_w, 
		cd_guia_w);
	 
	CALL ptu_gerar_nota_hospitalar_serv(nr_seq_cobranca_w, nm_usuario_p);
	 
	CALL ptu_gerar_nota_servico_serv(nr_seq_cobranca_w, nm_usuario_p);
	 
	CALL ptu_gerar_nota_compl_serv(nr_seq_cobranca_w, nm_usuario_p);
 
	CALL ptu_gerar_nota_fiscal_serv(nr_seq_cobranca_w, nm_usuario_p);
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_nota_cobranca_serv ( nr_seq_servico_p bigint, nm_usuario_p text) FROM PUBLIC;

