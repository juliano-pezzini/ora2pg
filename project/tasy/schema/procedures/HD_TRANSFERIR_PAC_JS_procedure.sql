-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_transferir_pac_js ( cd_pessoa_fisica_p text, ds_observacao_p text, nm_usuario_p text, nr_seq_unid_origem_p bigint, nr_seq_unid_destino_p bigint, ie_tipo_p text, nr_seq_escala_p bigint, nr_seq_turno_p bigint, dt_prov_volta_p timestamp, nm_pessoa_contato_p text, ds_dialisador_p text, cd_estabelecimento_p bigint, cd_motivo_alta_transf_p INOUT bigint, ds_erro_p INOUT text, DT_INTERNACAO_P timestamp DEFAULT clock_timestamp(), ds_hospital_p text DEFAULT NULL, ds_setor_p text DEFAULT NULL, ds_unid_basica_p text DEFAULT NULL, nr_seq_motivo_internacao_p bigint DEFAULT NULL, cd_doenca_cid_p text DEFAULT NULL, ie_exibe_alerta_p text DEFAULT NULL, ie_manter_escala_p text DEFAULT 'N') AS $body$
DECLARE

    cd_motivo_alta_transf_w smallint;
    ds_erro_w               varchar(255);
    ie_ativa_w              varchar(2);
    ie_externa_w            bigint;
    nr_seq_nternacao_ext    bigint;
				

BEGIN
select CASE WHEN ie_situacao='A' THEN 'S'  ELSE 'N' END
into STRICT	ie_ativa_w
from   HD_UNIDADE_DIALISE
where  nr_sequencia = nr_seq_unid_destino_p;

if (ie_ativa_w = 'N') then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(227061);
end if;	
	
    IF ie_tipo_p = 'IE' THEN
        -- transferencia externa        
        SELECT COUNT(1) INTO STRICT ie_externa_w FROM hd_unidade_dialise a WHERE a.ie_internacao_externa = 'S';

        IF ie_externa_w = 0 THEN
            CALL wheb_mensagem_pck.exibir_mensagem_abort(227061);
        END IF;

        SELECT nextval('hd_paciente_int_ext_seq') INTO STRICT nr_seq_nternacao_ext;

        INSERT INTO hd_paciente_int_ext(nr_sequencia,
             dt_atualizacao,
             nm_usuario,
             dt_atualizacao_nrec,
             nm_usuario_nrec,
             cd_pessoa_fisica,
             nr_seq_unidade_reserva,
             dt_internacao,
             dt_previsto_retorno,
             ds_hospital,
             ds_setor,
             ds_unid_basica_compl,
             nm_pessoa_contato,
             ds_observacao,
             nr_seq_unidade_int,
			 nr_seq_motivo_internacao,
       cd_doenca_cid,
       ie_exibe_alerta)
        VALUES (nr_seq_nternacao_ext,
             clock_timestamp(),
             nm_usuario_p,
             clock_timestamp(),
             nm_usuario_p,
             cd_pessoa_fisica_p,
             nr_seq_unid_origem_p,
             dt_internacao_p,
             dt_prov_volta_p,
             ds_hospital_p,
             ds_setor_p,
             ds_unid_basica_p,
             nm_pessoa_contato_p,
             ds_observacao_p,
             nr_seq_unid_destino_p,
			 nr_seq_motivo_internacao_p,
       cd_doenca_cid_p,
       ie_exibe_alerta_p);

        CALL hd_registrar_alt_transf(cd_pessoa_fisica_p,
                                ds_observacao_p,
                                nm_usuario_p,
                                nr_seq_unid_origem_p,
                                nr_seq_unid_destino_p);
    
	if (coalesce(ie_manter_escala_p,'N') <> 'S') then
	
        UPDATE 	hd_agenda_dialise
           SET 	dt_atualizacao_nrec = clock_timestamp(),
				nm_usuario_nrec     = nm_usuario_p,
				ie_situacao         = 'T'
         WHERE 	cd_pessoa_fisica = cd_pessoa_fisica_p
		 and	ie_situacao = 'A'
         AND 	dt_agenda >= dt_internacao_p
		 and	dt_agenda < coalesce(dt_prov_volta_p,clock_timestamp() + interval '30 days');
	
	end if;
		
    ELSE
        CALL hd_registrar_alt_transf(cd_pessoa_fisica_p,
                                ds_observacao_p,
                                nm_usuario_p,
                                nr_seq_unid_origem_p,
                                nr_seq_unid_destino_p);

ds_erro_p := hd_transferir_paciente( cd_pessoa_fisica_p, ie_tipo_p, nr_seq_unid_origem_p, nr_seq_unid_destino_p, nr_seq_escala_p, nr_seq_turno_p, dt_prov_volta_p, nm_pessoa_contato_p, nm_usuario_p, ds_dialisador_p, ds_erro_p);
			
    END IF;
    SELECT cd_motivo_alta_transf
      INTO STRICT cd_motivo_alta_transf_w
      FROM hd_parametro
     WHERE cd_estabelecimento = cd_estabelecimento_p;

cd_motivo_alta_transf_p	:= cd_motivo_alta_transf_w;
ds_erro_p		:= ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_transferir_pac_js ( cd_pessoa_fisica_p text, ds_observacao_p text, nm_usuario_p text, nr_seq_unid_origem_p bigint, nr_seq_unid_destino_p bigint, ie_tipo_p text, nr_seq_escala_p bigint, nr_seq_turno_p bigint, dt_prov_volta_p timestamp, nm_pessoa_contato_p text, ds_dialisador_p text, cd_estabelecimento_p bigint, cd_motivo_alta_transf_p INOUT bigint, ds_erro_p INOUT text, DT_INTERNACAO_P timestamp DEFAULT clock_timestamp(), ds_hospital_p text DEFAULT NULL, ds_setor_p text DEFAULT NULL, ds_unid_basica_p text DEFAULT NULL, nr_seq_motivo_internacao_p bigint DEFAULT NULL, cd_doenca_cid_p text DEFAULT NULL, ie_exibe_alerta_p text DEFAULT NULL, ie_manter_escala_p text DEFAULT 'N') FROM PUBLIC;

