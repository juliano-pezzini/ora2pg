-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicar_atendimento_ge (nr_atend_origem_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_prescricao_p bigint, ds_lista_seq_p text, ie_tipo_guia_p text, ie_tipo_atendimento_p text, ie_tipo_atend_tiss_p text, nr_forma_laudo_p text, nr_atend_novo_p INOUT bigint, nr_prescricao_novo_p INOUT bigint ) AS $body$
DECLARE

 
nr_atend_novo_w				bigint;
nr_seq_interno_W			bigint;
nr_seq_interno_unid_w		bigint;

nr_prescricao_w				bigint;

nr_sequencia_proc_w			integer;
cd_procedimento_proc_w		bigint;
qt_procedimento_proc_w		double precision;
dt_atualizacao_proc_w		timestamp;
ie_origem_inf_proc_w		varchar(1);
cd_setor_atendimento_proc_w	integer;
dt_prev_execucao_proc_w		timestamp;
cd_medico_exec_proc_w		varchar(10);
dt_baixa_proc_w				timestamp;
ds_dado_clinico_proc_w		timestamp;
dt_resultado_proc_w			timestamp;
ds_observacao_proc_w		varchar(2000);
ie_executar_leito_proc_w	varchar(1);
nr_doc_convenio_proc_w		varchar(20);
ie_origem_proced_w			bigint;
nr_seq_proc_interno_w		bigint;
ie_existe_atend_w			bigint;

ie_continua_w				varchar(1) := 'S';
		
	 
-- define cursor dos procedimentos da prescricao	 
c02 CURSOR FOR 
	SELECT	nr_sequencia, 
			cd_procedimento, 
			qt_procedimento, 
			ie_origem_inf, 
			cd_setor_atendimento, 
			dt_prev_execucao, 
			cd_medico_exec, 
			dt_baixa, 
			ds_dado_clinico, 
			dt_resultado, 
			ds_observacao, 
			ie_executar_leito, 
			nr_doc_convenio, 
			ie_origem_proced, 
			nr_seq_proc_interno	 
	from	prescr_procedimento 
	where	nr_prescricao = nr_prescricao_p 
	and 	obter_se_contido(nr_sequencia, ds_lista_seq_p) = 'S' 
	order 	by nr_sequencia;

 
	 

BEGIN 
 
select	nextval('atendimento_paciente_seq') 
into STRICT	nr_atend_novo_w
;
 
/* Gerar atendimento novo */
 
insert	into atendimento_paciente(NR_ATENDIMENTO, CD_PESSOA_FISICA, CD_ESTABELECIMENTO, CD_PROCEDENCIA, 
	DT_ENTRADA, IE_TIPO_ATENDIMENTO, DT_ATUALIZACAO, NM_USUARIO, 
	CD_MEDICO_RESP, CD_MOTIVO_ALTA, DS_SINTOMA_PACIENTE, DS_OBSERVACAO, 
	DT_ALTA, IE_CLINICA, NM_USUARIO_ATEND, IE_RESPONSAVEL, 
	DT_FIM_CONTA, IE_FIM_CONTA, NR_CAT, DS_CAUSA_EXTERNA, 
	CD_CGC_SEGURADORA, NR_BILHETE, NR_SERIE_BILHETE, IE_CARATER_INTER_SUS, 
	IE_VINCULO_SUS, IE_TIPO_CONVENIO, IE_TIPO_ATEND_BPA, IE_GRUPO_ATEND_BPA, 
	CD_MEDICO_ATENDIMENTO, DT_ALTA_INTERNO, NR_SEQ_UNID_ATUAL, NR_SEQ_UNID_INT, 
	NR_ATEND_ORIGINAL, QT_DIA_LONGA_PERM, DT_INICIO_ATENDIMENTO, IE_PERMITE_VISITA, 
	IE_STATUS_ATENDIMENTO, DT_PREVISTO_ALTA, NM_USUARIO_ALTA, CD_PESSOA_RESPONSAVEL, 
	DT_ATEND_MEDICO, DT_SAIDA_REAL, IE_CLINICA_ALTA, DT_FIM_CONSULTA, 
	DT_MEDICACAO, DT_LIB_MEDICO, NR_SEQ_REGRA_FUNCAO, NR_SEQ_LOCAL_PA, 
	NR_SEQ_TIPO_ACIDENTE, DT_OCORRENCIA, DS_PEND_AUTORIZACAO, NR_SEQ_CHECK_LIST, 
	DT_FIM_TRIAGEM, NR_RESERVA_LEITO, IE_PACIENTE_ISOLADO, IE_PERMITE_VISITA_REL,IE_TIPO_ATEND_TISS) 
SELECT	nr_atend_novo_w, cd_pessoa_fisica, cd_estabelecimento_p, cd_procedencia, 
	clock_timestamp(), coalesce(ie_tipo_atendimento_p,ie_tipo_atendimento), clock_timestamp(), nm_usuario_p, 
	cd_medico_resp, null, DS_SINTOMA_PACIENTE, DS_OBSERVACAO, 
	null, ie_clinica, nm_usuario_p, IE_RESPONSAVEL, 
	null, null, NR_CAT, DS_CAUSA_EXTERNA, 
	CD_CGC_SEGURADORA, NR_BILHETE, NR_SERIE_BILHETE, IE_CARATER_INTER_SUS, 
	IE_VINCULO_SUS, IE_TIPO_CONVENIO, IE_TIPO_ATEND_BPA, IE_GRUPO_ATEND_BPA, 
	CD_MEDICO_ATENDIMENTO, null, NR_SEQ_UNID_ATUAL, NR_SEQ_UNID_INT, 
	null, QT_DIA_LONGA_PERM, clock_timestamp(), IE_PERMITE_VISITA, 
	IE_STATUS_ATENDIMENTO, null, null, CD_PESSOA_RESPONSAVEL, 
	null, null, IE_CLINICA_ALTA, null, 
	null, null, NR_SEQ_REGRA_FUNCAO, NR_SEQ_LOCAL_PA, 
	NR_SEQ_TIPO_ACIDENTE, null, DS_PEND_AUTORIZACAO, NR_SEQ_CHECK_LIST, 
	null, NR_RESERVA_LEITO, coalesce(IE_PACIENTE_ISOLADO,'N'), IE_PERMITE_VISITA_REL,ie_tipo_atend_tiss_p 
from	atendimento_paciente 
where	nr_atendimento	= nr_atend_origem_p;
 
commit;
 
/* gerar atend_categoria_convenio novo */
 
select	max(nr_seq_interno) 
into STRICT	nr_seq_interno_w 
from	atend_categoria_convenio 
where	nr_atendimento	= nr_atend_origem_p;
 
begin 
insert	into Atend_Categoria_Convenio(nr_atendimento, cd_convenio, cd_categoria, dt_inicio_vigencia, 
	dt_final_vigencia, dt_atualizacao, nm_usuario, cd_usuario_convenio, 
	cd_empresa, nr_doc_convenio, cd_tipo_acomodacao, ie_tipo_guia, 
	nr_seq_interno,cd_plano_convenio,cd_municipio_convenio, qt_dia_internacao, 
	cd_senha, cd_convenio_glosa, dt_ultimo_pagto, cd_dependente, cd_categoria_glosa, 
	nr_seq_origem, cd_usuario_conv_glosa, nr_doc_conv_principal, nr_acompanhante,dt_validade_carteira) 
SELECT	nr_atend_novo_w, cd_convenio, cd_categoria, clock_timestamp(), 
	null, clock_timestamp(), nm_usuario_p, cd_usuario_convenio, 
	cd_empresa, nr_doc_convenio, cd_tipo_acomodacao, ie_tipo_guia_p, 
	nextval('atend_categoria_convenio_seq'), cd_plano_convenio, 
	cd_municipio_convenio, qt_dia_internacao, cd_senha, cd_convenio_glosa, 
	dt_ultimo_pagto, cd_dependente, cd_categoria_glosa, nr_seq_origem, 
	cd_usuario_conv_glosa, nr_doc_conv_principal, nr_acompanhante,dt_validade_carteira 
from	atend_categoria_convenio 
where	nr_seq_interno	= nr_seq_interno_w;
exception 
	when others then 
		ie_continua_w := 'S';
end;
 
 
select	nextval('prescr_medica_seq') 
into STRICT	nr_prescricao_w
;
 
begin 
insert into prescr_medica( 
				nr_prescricao, 
				cd_pessoa_fisica, 
				nr_atendimento, 
				cd_medico, 
				dt_prescricao, 
				dt_atualizacao, 
				nm_usuario, 
				dt_entrega, 
				ie_recem_nato, 
				dt_mestruacao, 
				qt_peso, 
				nr_seq_forma_laudo, 
				nr_doc_conv, 
				nr_prioridade, 
				ds_dado_clinico, 
				ds_observacao, 
				cd_setor_atendimento, 
				cd_estabelecimento 
				) 
			SELECT	nr_prescricao_w, 
					cd_pessoa_fisica, 
					nr_atend_novo_w, 
					cd_medico, 
					clock_timestamp(), 
					clock_timestamp(), 
					nm_usuario_p, 
					dt_entrega, 
					ie_recem_nato, 
					dt_mestruacao, 
					qt_peso, 
					coalesce(nr_forma_laudo_p,nr_seq_forma_laudo), 
					nr_doc_conv, 
					nr_prioridade, 
					ds_dado_clinico, 
					ds_observacao, 
					cd_setor_atendimento, 
					cd_estabelecimento_p 
			from	prescr_medica 
			where	nr_prescricao = nr_prescricao_p;
exception 
	when others then 
		ie_continua_w := 'N';
end;
 
begin 
 
if (ie_continua_w = 'S') then 
	 
	-- Procedimentos da prescrição 
	open c02;
	loop 
	fetch c02 into	 
		nr_sequencia_proc_w, 
		cd_procedimento_proc_w, 
		qt_procedimento_proc_w, 
		ie_origem_inf_proc_w, 
		cd_setor_atendimento_proc_w, 
		dt_prev_execucao_proc_w, 
		cd_medico_exec_proc_w, 
		dt_baixa_proc_w, 
		ds_dado_clinico_proc_w, 
		dt_resultado_proc_w, 
		ds_observacao_proc_w, 
		ie_executar_leito_proc_w, 
		nr_doc_convenio_proc_w, 
		ie_origem_proced_w, 
		nr_seq_proc_interno_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin	 
		insert into prescr_procedimento( 
					nr_prescricao, 
					nr_sequencia, 
					cd_procedimento, 
					qt_procedimento, 
					dt_atualizacao, 
					nm_usuario, 
					ie_origem_inf, 
					cd_setor_atendimento, 
					dt_prev_execucao, 
					cd_medico_exec, 
					dt_baixa, 
					ds_dado_clinico, 
					dt_resultado, 
					ds_observacao, 
					ie_executar_leito, 
					nr_doc_convenio, 
					ie_origem_proced, 
					nr_seq_proc_interno, 
					ie_suspenso 
					) 
					values ( 
					nr_prescricao_w, 
					nr_sequencia_proc_w, 
					cd_procedimento_proc_w, 
					qt_procedimento_proc_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					ie_origem_inf_proc_w, 
					cd_setor_atendimento_proc_w, 
					clock_timestamp(), 
					cd_medico_exec_proc_w, 
					dt_baixa_proc_w, 
					ds_dado_clinico_proc_w, 
					dt_resultado_proc_w, 
					ds_observacao_proc_w, 
					ie_executar_leito_proc_w, 
					nr_doc_convenio_proc_w, 
					ie_origem_proced_w, 
					nr_seq_proc_interno_w, 
					'N' 
					);
		 
		end;
	end loop;
	close c02;
 
end if;
 
exception 
	when others then 
		ie_continua_w := 'S';
end;
 
commit;
 
select	count(*) 
into STRICT	ie_existe_atend_w 
from	atendimento_paciente 
where  nr_atendimento = nr_atend_novo_w;
 
if (ie_existe_atend_w > 0) then 
	nr_atend_novo_p	:= nr_atend_novo_w;
else 
	nr_atend_novo_p	:= 0;
end if;	
 
if (ie_continua_w = 'N') then 
	nr_prescricao_novo_p := 0;
else 
	nr_prescricao_novo_p := nr_prescricao_w;	
end if;
 
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_atendimento_ge (nr_atend_origem_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_prescricao_p bigint, ds_lista_seq_p text, ie_tipo_guia_p text, ie_tipo_atendimento_p text, ie_tipo_atend_tiss_p text, nr_forma_laudo_p text, nr_atend_novo_p INOUT bigint, nr_prescricao_novo_p INOUT bigint ) FROM PUBLIC;

