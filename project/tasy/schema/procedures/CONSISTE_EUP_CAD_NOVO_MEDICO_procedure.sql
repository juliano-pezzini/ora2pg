-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_eup_cad_novo_medico (cd_estabelecimento_p bigint, cd_medico_p text, ie_clinica_p bigint, ie_consiste_medico_p INOUT bigint) AS $body$
DECLARE


ie_existe_medico_w	smallint;
ie_altera_fila_w		smallint;


BEGIN

SELECT coalesce(max(1), 0)
into STRICT ie_existe_medico_w
FROM eup_cad_plantao_medico
WHERE cd_medico = cd_medico_p
AND TRUNC(dt_entrada) = TRUNC(clock_timestamp())
AND coalesce(dt_saida::text, '') = ''  LIMIT 1;

if (ie_existe_medico_w = 0) then
	select coalesce(max(1), 0)
	into STRICT	ie_altera_fila_w
	from	eup_cad_plantao_medico a,
		TURNO_ATENDIMENTO c
	where 	1 = 1
	and 	a.cd_estabelecimento 	= cd_estabelecimento_p
	and 	a.ie_clinica 			= ie_clinica_p
	and 	trunc(a.dt_entrada) 	= trunc(clock_timestamp())
	and (coalesce(a.dt_saida::text, '') = ''    OR a.dt_saida > clock_timestamp())
	and     c.nr_sequencia 			= a.nr_seq_turno
	AND 	to_date(to_char(a.dt_entrada, 'hh24:mi:ss'), 'hh24:mi:ss') <= to_date(to_char(c.dt_final, 'hh24:mi:ss'), 'hh24:mi:ss')
	and	to_date(to_char(clock_timestamp(), 'hh24:mi:ss'), 'hh24:mi:ss') between to_date(to_char(c.dt_inicial, 'hh24:mi:ss'), 'hh24:mi:ss') and to_date(to_char(c.dt_final, 'hh24:mi:ss'), 'hh24:mi:ss')
	and	a.IE_NOVO_MEDICO = 'N';

	if (ie_altera_fila_w = 0) then
		update 	eup_cad_plantao_medico a
		set	ie_novo_medico = 'N'
		where 	1 = 1
		and 	a.cd_estabelecimento 		= cd_estabelecimento_p
		and 	a.ie_clinica 			= ie_clinica_p
		and 	trunc(a.dt_entrada) 	= trunc(clock_timestamp())
		and (coalesce(a.dt_saida::text, '') = ''    OR a.dt_saida > clock_timestamp())
		and exists (SELECT 1 from turno_atendimento c
			where c.nr_sequencia = a.nr_seq_turno
			AND 	to_date(to_char(a.dt_entrada, 'hh24:mi:ss'), 'hh24:mi:ss') <= to_date(to_char(c.dt_final, 'hh24:mi:ss'), 'hh24:mi:ss')
			and	to_date(to_char(clock_timestamp(), 'hh24:mi:ss'), 'hh24:mi:ss') between to_date(to_char(c.dt_inicial, 'hh24:mi:ss'), 'hh24:mi:ss') and to_date(to_char(c.dt_final, 'hh24:mi:ss'), 'hh24:mi:ss')  LIMIT 1)
		and (qt_atendimento IS NOT NULL AND qt_atendimento::text <> '');
	end if;

	select coalesce(max(1), 0)
	into STRICT	ie_altera_fila_w
	from	eup_cad_plantao_medico a,
		TURNO_ATENDIMENTO c
	where 	1 = 1
	and 	a.cd_estabelecimento 	= cd_estabelecimento_p
	and 	a.ie_clinica 			= ie_clinica_p
	and 	trunc(a.dt_entrada) 	= trunc(clock_timestamp())
	and (coalesce(a.dt_saida::text, '') = ''    OR a.dt_saida > clock_timestamp())
	and     c.nr_sequencia 			= a.nr_seq_turno
	AND 	to_date(to_char(a.dt_entrada, 'hh24:mi:ss'), 'hh24:mi:ss') <= to_date(to_char(c.dt_final, 'hh24:mi:ss'), 'hh24:mi:ss')
	and	to_date(to_char(clock_timestamp(), 'hh24:mi:ss'), 'hh24:mi:ss') between to_date(to_char(c.dt_inicial, 'hh24:mi:ss'), 'hh24:mi:ss') and to_date(to_char(c.dt_final, 'hh24:mi:ss'), 'hh24:mi:ss')
	and	a.ie_prioriza_particular = 'N';

	if (ie_altera_fila_w = 0) then
		update 	eup_cad_plantao_medico a
		set	ie_prioriza_particular = 'N'
		where 	1 = 1
		and 	a.cd_estabelecimento 		= cd_estabelecimento_p
		and 	a.ie_clinica 			= ie_clinica_p
		and 	trunc(a.dt_entrada) 	= trunc(clock_timestamp())
		and (coalesce(a.dt_saida::text, '') = ''    OR a.dt_saida > clock_timestamp())
		and exists (SELECT 1 from turno_atendimento c
			where c.nr_sequencia = a.nr_seq_turno
			AND 	to_date(to_char(a.dt_entrada, 'hh24:mi:ss'), 'hh24:mi:ss') <= to_date(to_char(c.dt_final, 'hh24:mi:ss'), 'hh24:mi:ss')
			and	to_date(to_char(clock_timestamp(), 'hh24:mi:ss'), 'hh24:mi:ss') between to_date(to_char(c.dt_inicial, 'hh24:mi:ss'), 'hh24:mi:ss') and to_date(to_char(c.dt_final, 'hh24:mi:ss'), 'hh24:mi:ss')  LIMIT 1)
		and (QT_PARTICULAR_CONTROLE IS NOT NULL AND QT_PARTICULAR_CONTROLE::text <> '');
	end if;
else
	ie_consiste_medico_p := ie_existe_medico_w;
end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_eup_cad_novo_medico (cd_estabelecimento_p bigint, cd_medico_p text, ie_clinica_p bigint, ie_consiste_medico_p INOUT bigint) FROM PUBLIC;

