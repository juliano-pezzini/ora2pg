-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_repasse_itens_pend ( nr_interno_conta_p bigint, nm_usuario_p text, dt_inicial_p timestamp, dt_final_p timestamp, cd_medico_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_tipo_procedimento_p bigint, cd_convenio_p bigint) AS $body$
DECLARE


nr_seq_procedimento_w  bigint;
nr_seq_partic_w    bigint;
nr_seq_material_w  bigint;
nr_interno_conta_w  conta_paciente.nr_interno_conta%type;

c_procedimento CURSOR( nr_interno_conta_pc  conta_paciente.nr_interno_conta%type,
                       dt_inicial_pc    timestamp,
                       dt_final_pc    timestamp,
                       cd_medico_pc    medico.cd_pessoa_fisica%type,
                       cd_procedimento_pc  procedimento_paciente.cd_procedimento%type,
                       ie_origem_proced_pc procedimento_paciente.ie_origem_proced%type,
                       cd_tipo_procedimento_pc procedimento.cd_tipo_procedimento%type,
                       cd_convenio_pc      procedimento_paciente.cd_convenio%type) FOR
  SELECT a.nr_sequencia,
         null nr_seq_partic,
         a.nr_interno_conta
    from procedimento_paciente a,
         procedimento b
   where a.nr_interno_conta  = nr_interno_conta_pc
     and a.cd_procedimento   = b.cd_procedimento
     and a.ie_origem_proced  = b.ie_origem_proced
     and (nr_interno_conta_pc IS NOT NULL AND nr_interno_conta_pc::text <> '')
     and a.dt_procedimento  between dt_inicial_pc and PKG_DATE_UTILS.END_OF(dt_final_pc, 'DAY')
     and (coalesce(cd_medico_pc::text, '') = '' or cd_medico_pc = a.cd_medico_executor)
     and not exists (SELECT 1
                      from procedimento_repasse x
                     where x.nr_seq_procedimento  = a.nr_sequencia)
                       and (coalesce(cd_procedimento_pc::text, '') = '' or cd_procedimento_pc = a.cd_procedimento)
                       and (coalesce(ie_origem_proced_pc::text, '') = '' or ie_origem_proced_pc = a.ie_origem_proced)
                       and (coalesce(cd_tipo_procedimento_pc::text, '') = '' or cd_tipo_procedimento_pc = b.cd_tipo_procedimento)
                       and (coalesce(cd_convenio_pc::text, '') = '' or cd_convenio_pc = a.cd_convenio)

union

  select b.nr_sequencia,
         b.nr_seq_partic,
         a.nr_interno_conta
    from procedimento_participante b,
         procedimento_paciente a,
         procedimento c
   where a.nr_interno_conta  = nr_interno_conta_pc
     and (nr_interno_conta_pc IS NOT NULL AND nr_interno_conta_pc::text <> '')
     and a.nr_sequencia    = b.nr_sequencia
     and a.cd_procedimento   = c.cd_procedimento
     and a.ie_origem_proced  = c.ie_origem_proced
     and a.dt_procedimento  between dt_inicial_pc and PKG_DATE_UTILS.END_OF(dt_final_pc, 'DAY')
     and (coalesce(cd_medico_pc::text, '') = '' or cd_medico_pc = b.cd_pessoa_fisica)
     and not exists (select 1
                      from procedimento_repasse x
                     where x.nr_seq_procedimento  = a.nr_sequencia
                       and x.nr_seq_partic    = b.nr_seq_partic)
                       and (coalesce(cd_procedimento_pc::text, '') = '' or cd_procedimento_pc = a.cd_procedimento)
                       and (coalesce(ie_origem_proced_pc::text, '') = '' or ie_origem_proced_pc = a.ie_origem_proced)
                       and (coalesce(cd_tipo_procedimento_pc::text, '') = '' or cd_tipo_procedimento_pc = c.cd_tipo_procedimento)
                       and (coalesce(cd_convenio_pc::text, '') = '' or cd_convenio_pc = a.cd_convenio);

c_procedimento_conta_null CURSOR( nr_interno_conta_pc  conta_paciente.nr_interno_conta%type,
                                  dt_inicial_pc    timestamp,
                                  dt_final_pc    timestamp,
                                  cd_medico_pc    medico.cd_pessoa_fisica%type,
                                  cd_procedimento_pc  procedimento_paciente.cd_procedimento%type,
                                  ie_origem_proced_pc procedimento_paciente.ie_origem_proced%type,
                                  cd_tipo_procedimento_pc procedimento.cd_tipo_procedimento%type,
                                  cd_convenio_pc      procedimento_paciente.cd_convenio%type) FOR
  SELECT a.nr_sequencia,
         null nr_seq_partic,
         a.nr_interno_conta
    from procedimento_paciente a,
         procedimento b
   where coalesce(nr_interno_conta_pc::text, '') = ''
     and a.cd_procedimento   = b.cd_procedimento
     and a.ie_origem_proced  = b.ie_origem_proced
     and a.dt_procedimento  between dt_inicial_pc and PKG_DATE_UTILS.END_OF(dt_final_pc, 'DAY')
     and (coalesce(cd_medico_pc::text, '') = '' or cd_medico_pc = a.cd_medico_executor)
     and not exists (SELECT 1
                      from procedimento_repasse x
                     where x.nr_seq_procedimento  = a.nr_sequencia)
                       and (coalesce(cd_procedimento_pc::text, '') = '' or cd_procedimento_pc = a.cd_procedimento)
                       and (coalesce(ie_origem_proced_pc::text, '') = '' or ie_origem_proced_pc = a.ie_origem_proced)
                       and (coalesce(cd_tipo_procedimento_pc::text, '') = '' or cd_tipo_procedimento_pc = b.cd_tipo_procedimento)
                       and (coalesce(cd_convenio_pc::text, '') = '' or cd_convenio_pc = a.cd_convenio)

union

  select b.nr_sequencia,
         b.nr_seq_partic,
         a.nr_interno_conta
    from procedimento_participante b,
         procedimento_paciente a,
         procedimento c
   where coalesce(nr_interno_conta_pc::text, '') = ''
     and  a.nr_sequencia    = b.nr_sequencia
     and a.cd_procedimento   = c.cd_procedimento
     and a.ie_origem_proced  = c.ie_origem_proced
     and a.dt_procedimento  between dt_inicial_pc and PKG_DATE_UTILS.END_OF(dt_final_pc, 'DAY')
     and (coalesce(cd_medico_pc::text, '') = '' or cd_medico_pc = b.cd_pessoa_fisica)
     and not exists (select 1
                      from procedimento_repasse x
                     where x.nr_seq_procedimento  = a.nr_sequencia
                       and x.nr_seq_partic    = b.nr_seq_partic)
                       and (coalesce(cd_procedimento_pc::text, '') = '' or cd_procedimento_pc = a.cd_procedimento)
                       and (coalesce(ie_origem_proced_pc::text, '') = '' or ie_origem_proced_pc = a.ie_origem_proced)
                       and (coalesce(cd_tipo_procedimento_pc::text, '') = '' or cd_tipo_procedimento_pc = c.cd_tipo_procedimento)
                       and (coalesce(cd_convenio_pc::text, '') = '' or cd_convenio_pc = a.cd_convenio);

c_material CURSOR( nr_interno_conta_pc  conta_paciente.nr_interno_conta%type,
                   dt_inicial_pc    timestamp,
                   dt_final_pc    timestamp,
                   cd_medico_pc    medico.cd_pessoa_fisica%type,
                   cd_convenio_pc      material_atend_paciente.cd_convenio%type) FOR
  SELECT a.nr_sequencia,
       a.nr_interno_conta
  from atendimento_paciente b,
       material_atend_paciente a
 where a.nr_atendimento  = b.nr_atendimento
   and a.nr_interno_conta  = nr_interno_conta_pc
   and (nr_interno_conta_pc IS NOT NULL AND nr_interno_conta_pc::text <> '')
   and a.dt_atendimento  between dt_inicial_pc and PKG_DATE_UTILS.END_OF(dt_final_pc, 'DAY')
   and (coalesce(cd_medico_pc::text, '') = '' or cd_medico_pc = b.cd_medico_resp)
   and not exists (SELECT 1
                    from material_repasse x
                   where x.nr_seq_material  = a.nr_sequencia)
   and (coalesce(cd_convenio_pc::text, '') = '' or cd_convenio_pc = a.cd_convenio);

c_material_conta_null CURSOR( nr_interno_conta_pc  conta_paciente.nr_interno_conta%type,
                   dt_inicial_pc    timestamp,
                   dt_final_pc    timestamp,
                   cd_medico_pc    medico.cd_pessoa_fisica%type,
                   cd_convenio_pc      material_atend_paciente.cd_convenio%type) FOR
  SELECT a.nr_sequencia,
         a.nr_interno_conta
    from atendimento_paciente b, material_atend_paciente a
   where a.nr_atendimento = b.nr_atendimento
     and coalesce(nr_interno_conta_pc::text, '') = ''
     and a.dt_atendimento between dt_inicial_pc and PKG_DATE_UTILS.END_OF(dt_final_pc, 'DAY')
     and (coalesce(cd_medico_pc::text, '') = '' or cd_medico_pc = b.cd_medico_resp)
     and not exists (SELECT 1
                     from material_repasse x
                    where x.nr_seq_material = a.nr_sequencia)
     and (coalesce(cd_convenio_pc::text, '') = '' or cd_convenio_pc = a.cd_convenio);

BEGIN

if (coalesce(nr_interno_conta_p::text, '') = '') then
  for  r_c_procedimento_conta_null in c_procedimento_conta_null(nr_interno_conta_p, dt_inicial_p, dt_final_p, cd_medico_p, cd_procedimento_p, ie_origem_proced_p, cd_tipo_procedimento_p, cd_convenio_p) loop
    CALL Recalcular_Conta_Repasse(r_c_procedimento_conta_null.nr_interno_conta,
          r_c_procedimento_conta_null.nr_sequencia,
          0,
          nm_usuario_p,
          r_c_procedimento_conta_null.nr_seq_partic);
  end loop;

  for  r_c_material_conta_null in c_material_conta_null(nr_interno_conta_p, dt_inicial_p, dt_final_p, cd_medico_p, cd_convenio_p) loop
    CALL Recalcular_Conta_Repasse(r_c_material_conta_null.nr_interno_conta,
          0,
          r_c_material_conta_null.nr_sequencia,
          nm_usuario_p,
          0);
  end loop;
else
  for  r_c_procedimento in c_procedimento(nr_interno_conta_p, dt_inicial_p, dt_final_p, cd_medico_p, cd_procedimento_p, ie_origem_proced_p, cd_tipo_procedimento_p, cd_convenio_p) loop
    CALL Recalcular_Conta_Repasse(r_c_procedimento.nr_interno_conta,
          r_c_procedimento.nr_sequencia,
          0,
          nm_usuario_p,
          r_c_procedimento.nr_seq_partic);
  end loop;

  for  r_c_material in c_material(nr_interno_conta_p, dt_inicial_p, dt_final_p, cd_medico_p, cd_convenio_p) loop
    CALL Recalcular_Conta_Repasse(r_c_material.nr_interno_conta,
          0,
          r_c_material.nr_sequencia,
          nm_usuario_p,
          0);
  end loop;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_repasse_itens_pend ( nr_interno_conta_p bigint, nm_usuario_p text, dt_inicial_p timestamp, dt_final_p timestamp, cd_medico_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_tipo_procedimento_p bigint, cd_convenio_p bigint) FROM PUBLIC;

