-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tasy_ajustar_base_fin ( nm_usuario_p text) AS $body$
DECLARE


dt_versao_atual_cliente_w 	timestamp;
qt_registro_w			bigint;
cd_empresa_w			smallint;
cd_banco_w			banco.cd_banco%type;
ds_banco_w			banco.ds_banco%type;
nr_seq_grupo_banco_w		banco_grupo_instrucao.nr_sequencia%type;
nm_tablespace_w			varchar(50);		

c01 CURSOR FOR
SELECT	distinct
	b.cd_banco,
	b.ds_banco
from	banco b
where	exists (SELECT	1
	from	banco_instrucao_boleto a
	where	coalesce(a.nr_seq_grupo::text, '') = ''
	and	a.cd_banco	= b.cd_banco);


BEGIN

CALL abortar_se_base_wheb();

dt_versao_atual_cliente_w := coalesce(to_date(to_char(obter_data_geracao_versao-1,'dd/mm/yyyy') ||' 23:59:59','dd/mm/yyyy hh24:mi:ss'),clock_timestamp() - interval '90 days');

/* Edgar - OS 227255 - 25/08/2010 */

if (dt_versao_atual_cliente_w < to_date('25/08/2010','dd/mm/yyyy')) then
	CALL BACA_ACERTO_EMPRESA_BANCO();
end if;

/* Edgar - OS 246472 - 21/09/2010 */

if (dt_versao_atual_cliente_w < to_date('21/09/2010','dd/mm/yyyy')) then
	CALL BACA_ACERTO_TRIB_CP();
	null;
end if;

if (dt_versao_atual_cliente_w < to_date('11/10/2010','dd/mm/yyyy')) then
	CALL Exec_sql_Dinamico('Edgar', ' alter table PROCEDIMENTO_AUTORIZADO drop constraint PROAUTO_UK2 ');
end if;

if (dt_versao_atual_cliente_w < to_date('13/01/2011','dd/mm/yyyy')) then
	CALL Exec_sql_Dinamico('Edgar', ' drop Index MATAUTO_PRESMAT_FK_I ');
	CALL Exec_sql_Dinamico('Edgar', ' Create Index MATAUTO_PRESMAT_FK_I on MATERIAL_AUTORIZADO( NR_PRESCRICAO, NR_SEQ_PRESCRICAO) ');
end if;

if (dt_versao_atual_cliente_w < to_date('15/01/2011','dd/mm/yyyy')) then
	CALL baca_acerto_nf_trib();
end if;

if (dt_versao_atual_cliente_w < to_date('23/02/2011','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'CHEQUES_ADIANTA_FK';
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', ' alter table cheque_cr drop constraint CHEQUES_ADIANTA_FK ');
	end if;
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'CHEQUES_ADIANTA_FK_I';
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', ' drop Index CHEQUES_ADIANTA_FK_I ');
	end if;
end if;

/* Diether - OS  297165 - Inserir na tabela REGRA_ACAO_PAG_DUPLIC */

if (dt_versao_atual_cliente_w < to_date('16/03/2011','dd/mm/yyyy')) then
	CALL baca_regra_acao_pag_duplic('Tasy');
end if;

/* Edgar 19/05/2011, excluir este domínio */

if (dt_versao_atual_cliente_w < to_date('19/05/2011','dd/mm/yyyy')) then
	delete from valor_dominio where cd_dominio = 3586 and vl_dominio = 'R';
	commit;
end if;


/* Edgar 23/05/2011, atualizar o namespace do TISS */

if (dt_versao_atual_cliente_w < to_date('23/05/2011','dd/mm/yyyy')) then
	update 	xml_elemento
	set	DS_CABECALHO 	= replace(DS_CABECALHO,':ans=',':@ns@=')
	where	nr_sequencia	= 10105;

	update	xml_elemento
	set	NM_ELEMENTO	= replace(NM_ELEMENTO, 'ans:', '@ns@:')
	where	nr_seq_projeto	= 100321;

	update	xml_atributo
	set	NM_ATRIBUTO_XML	= replace(NM_ATRIBUTO_XML, 'ans:', '@ns@:')
	where	NR_SEQ_ELEMENTO in (SELECT	nr_sequencia
					from	xml_elemento
					where	nr_seq_projeto	= 100321);

	update 	xml_elemento
	set	DS_CABECALHO 	= replace(DS_CABECALHO,':ans=',':@ns@=')
	where	nr_sequencia	= 10269;

	update	xml_elemento
	set	NM_ELEMENTO	= replace(NM_ELEMENTO, 'ans:', '@ns@:')
	where	nr_seq_projeto	= 100322;

	update	xml_atributo
	set	NM_ATRIBUTO_XML	= replace(NM_ATRIBUTO_XML, 'ans:', '@ns@:')
	where	NR_SEQ_ELEMENTO in (SELECT	nr_sequencia
					from	xml_elemento
					where	nr_seq_projeto	= 100322);
	commit;
end if;

/* Edgar/ahoffelder 25/05/2011, excluir este domínio */

if (dt_versao_atual_cliente_w < to_date('25/05/2011','dd/mm/yyyy')) then
	delete from valor_dominio where cd_dominio = 4230 and ie_situacao = 'I';
	delete from valor_dominio where cd_dominio = 4199 and ie_situacao = 'I';
	commit;
end if;


/* Edgar 01/06/2011 */

if (dt_versao_atual_cliente_w < to_date('01/06/2011','dd/mm/yyyy')) then
	update 	xml_elemento
	set	DS_CABECALHO 	= replace(DS_CABECALHO,':ans=',':@ns@=')
	where	nr_sequencia	= 10363;

	update	xml_elemento
	set	NM_ELEMENTO	= replace(NM_ELEMENTO, 'ans:', '@ns@:')
	where	nr_seq_projeto	= 100323;

	update	xml_atributo
	set	NM_ATRIBUTO_XML	= replace(NM_ATRIBUTO_XML, 'ans:', '@ns@:')
	where	NR_SEQ_ELEMENTO in (SELECT	nr_sequencia
				from	xml_elemento
				where	nr_seq_projeto	= 100323);

	commit;
end if;

/* Edgar/ahoffelder 09/06/2011, excluir este domínio */

if (dt_versao_atual_cliente_w < to_date('09/06/2011','dd/mm/yyyy')) then
	delete from valor_dominio where cd_dominio = 4230 and ie_situacao = 'I';
	delete from valor_dominio where cd_dominio = 4199 and ie_situacao = 'I';
	commit;
end if;

if (dt_versao_atual_cliente_w < to_date('19/09/2011','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'LOTE_AUDIT_HIST'
	and	column_name	= 'CD_CONVENIO';

	if (qt_registro_w > 0) then
		select	count(*)
		into STRICT	qt_registro_w
		from	tabela_atributo
		where	nm_tabela	= 'LOTE_AUDIT_HIST'
		and	nm_atributo	= 'CD_CONVENIO';
		if (qt_registro_w = 0) then
			CALL Exec_sql_Dinamico('Edgar', ' alter table LOTE_AUDIT_HIST drop column CD_CONVENIO ');
		end if;
	end if;
end if;

/*lhalves 23/11/2011*/

if (dt_versao_atual_cliente_w < to_date('23/11/2011','dd/mm/yyyy')) then
	update	TISS_LISTA_CAMPO
	set	NM_ATRIBUTO		= 'CD_INTERNO_EXEC'
	where	NM_ATRIBUTO		= 'CD_INTERNO_SOLIC'
	AND	IE_TISS_TIPO_GUIA	= '6';	
	commit;
end if;

/*Edgar 23/01/2012*/

if (dt_versao_atual_cliente_w < to_date('30/01/2012','dd/mm/yyyy')) then
	CALL BACA_PESSOA_COBR();
end if;

/*Edgar 26/01/2012*/

if (dt_versao_atual_cliente_w < to_date('30/01/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_triggers
	where	trigger_name = 'TITULO_PAGAR_AFINSERT';
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', 'drop trigger TITULO_PAGAR_AFINSERT ');
	end if;
end if;

/*Edgar 14/02/2012*/

if (dt_versao_atual_cliente_w < to_date('14/02/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'FUNCAO_TF_CAMPO'
	and	column_name	= 'NR_SEQ_FUNCAO_TF';
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', 'alter table FUNCAO_TF_CAMPO drop column NR_SEQ_FUNCAO_TF');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'FUTFCAM_FUNCATF_FK';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', 'alter table FUNCAO_TF_CAMPO drop constraint FUTFCAM_FUNCATF_FK');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'FUTFCAM_FUNCATF_FK_I';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', 'drop index FUTFCAM_FUNCATF_FK_I');
	end if;
end if;

/*Edgar 05/03/2012*/

if (dt_versao_atual_cliente_w < to_date('05/03/2012','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'FUNCAO_TF_REGRA_RECEB'
	and	column_name	= 'NR_SEQ_TIPO_REC_CAIXA';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', 'alter table FUNCAO_TF_REGRA_RECEB drop column NR_SEQ_TIPO_REC_CAIXA');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name	= 'TIPO_RECEBIMENTO_CAIXA';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', 'drop table TIPO_RECEBIMENTO_CAIXA');
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('05/04/2012','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'CHALTVE_CHEQUES_FK'
	and	status		= 'DISABLED';
	
	if (qt_registro_w > 0) then
		CALL BACA_CHEQUE_CR_ALT_VENC();
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'COBACOB_COBRANC_FK'
	and	status		= 'DISABLED';
	
	if (qt_registro_w > 0) then
		CALL BACA_COBRANCA_ALT_COBRADOR();
	end if;
	
		
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'TITRECH_TITRECE_FK'
	and	status		= 'DISABLED';
	
	if (qt_registro_w > 0) then
		CALL BACA_TITULO_RECEBER_HIST();
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'MOVBANPEN_MOVTRFI_FK'
	and	status		= 'DISABLED';
	
	if (qt_registro_w > 0) then
		CALL BACA_MOVTO_BANCO_PEND();
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'MOVBCOPBAI_TIRELIQ_FK'
	and	status		= 'DISABLED';
	
	if (qt_registro_w > 0) then
		CALL BACA_MOVTO_BANCO_PEND_BAIXA();
	end if;
	
end if;

if (dt_versao_atual_cliente_w < to_date('07/06/2012','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'TISS_SITUACAO_PROT_GUIA'
	and	constraint_name	= 'TISSSPG_CONPACI_FK';
	
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('lhalves', ' Alter Table TISS_SITUACAO_PROT_GUIA drop constraint TISSSPG_CONPACI_FK ');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	table_name	= 'TISS_SITUACAO_PROT_GUIA'
	and	index_name	= 'TISSSPG_CONPACI_FK_I';
	
	if (qt_registro_w > 0) then				
		CALL Exec_sql_Dinamico('lhalves', ' Drop Index TISSSPG_CONPACI_FK_I ');
	end if;	
end if;

if (dt_versao_atual_cliente_w < to_date('15/06/2012','dd/mm/yyyy')) then
	begin
	SELECT	COUNT(*)
	INTO STRICT	qt_registro_w
	FROM	FUNCAO_TF_REGRA_ATRIB;
	
	IF (qt_registro_w > 0) THEN
		update	FUNCAO_TF_REGRA_ATRIB
		set	nm_tabela = SUBSTR(NM_ATRIBUTO,1,position('.' in NM_ATRIBUTO)-1);
	END IF;
	end;
end if;

/*lhalves 20/06/2012 - Atualizar DT_ATENDA, CD_PESSOA_FISICA, e CD_ESTABELECIMENTO da AUTORIZACAO_CONVENIO */

if (dt_versao_atual_cliente_w < to_date('20/06/2012','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'AUTORIZACAO_CONVENIO'
	and	column_name	= 'DT_AGENDA';
	
	if (qt_registro_w > 0) then	
		CALL ATUALIZAR_CAMPOS_AUTORIZACAO_2();
	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('06/07/2012','dd/mm/yyyy')) then
	begin
	UPDATE	FIN_MES_REF
	SET	ie_status = CASE WHEN DT_FECHAMENTO = NULL THEN 'A'  ELSE 'F' END;
	end;
end if;

if (dt_versao_atual_cliente_w < to_date('15/08/2012','dd/mm/yyyy')) then
	begin
	SELECT	COUNT(*)
	into STRICT	qt_registro_w
	FROM	user_constraints
	WHERE	constraint_name = 'NUMDUPLRE_UK';
	
	if (qt_registro_w > 0) then	
		CALL Exec_sql_Dinamico('srcunha', 'alter table NUMERO_DUPLICATA_RECEBER drop constraint NUMDUPLRE_UK');
	end if;
	end;
end if;

if (dt_versao_atual_cliente_w < to_date('23/08/2012','dd/mm/yyyy')) then
	begin
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	column_name 	= 'IE_REGRA_CALCULO'
	and	table_name 	= 'REGRA_CALC_ITEM_REP_TRANS';
	
	if (coalesce(qt_registro_w,0) > 0) then
		CALL exec_sql_dinamico('Anderson', 'update REGRA_CALC_ITEM_REP_TRANS set IE_REGRA_CALCULO = ''S'' where IE_REGRA_CALCULO is null');
	end if;
	end;
end if;

if (dt_versao_atual_cliente_w < to_date('19/11/2012','dd/mm/yyyy')) then
	begin	
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'MATERIAL_AUTOR_CIRURGIA'
	and	column_name 	= 'VL_UNITARIO_MATERIAL'
	and	DATA_PRECISION 	= 15
	and	DATA_SCALE	= 2;
	
	if (coalesce(qt_registro_w,0) > 0) then	
		CALL exec_sql_dinamico('lhalves', 'alter table material_autor_cirurgia modify vl_unitario_material number(17,4)');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'MATERIAL_AUTORIZADO'
	and	column_name 	= 'VL_UNITARIO'
	and	DATA_PRECISION 	= 15
	and	DATA_SCALE	= 2;
	
	if (coalesce(qt_registro_w,0) > 0) then
		CALL exec_sql_dinamico('lhalves', 'alter table material_autorizado modify vl_unitario number(17,4)');
	end if;	
	
	end;
end if;

if (dt_versao_atual_cliente_w < to_date('20/11/2012','dd/mm/yyyy')) then
	begin
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'CHEQUE_CR_PERDA'
	and	column_name = 'IE_TIPO_PERDA';
	
	if (coalesce(qt_registro_w,0) > 0) then
		CALL exec_sql_dinamico('Sidnei', 'ALTER TABLE cheque_cr_perda MODIFY ie_tipo_perda VARCHAR2(1)');
	end if;
	end;
end if;
if (dt_versao_atual_cliente_w < to_date('22/11/2012','dd/mm/yyyy')) then
	begin
	CALL BACA_TIPO_CHEQUE_CR();
	end;
end if;

if (dt_versao_atual_cliente_w < to_date('06/12/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PROJ_VIGENCIA_DOC'
	and	column_name = 'DS_OBSERVAÇÃO';
	
	if (coalesce(qt_registro_w,0) > 0) then
		CALL exec_sql_dinamico('Bruno', 'ALTER TABLE PROJ_VIGENCIA_DOC DROP COLUMN DS_OBSERVAÇÃO');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PROJ_VIGENCIA_DOC'
	and	column_name = 'DT_FIM_VIGÊNCIA';
	
	if (coalesce(qt_registro_w,0) > 0) then
		CALL exec_sql_dinamico('Bruno', 'ALTER TABLE PROJ_VIGENCIA_DOC DROP COLUMN DT_FIM_VIGÊNCIA');
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('13/12/2012','dd/mm/yyyy')) then
	begin

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'MATERIAL_AUTOR_CIR_COT'
	and	column_name 	= 'VL_UNITARIO_COTADO'
	and	DATA_PRECISION 	= 15
	and	DATA_SCALE	= 2;
	
	if (coalesce(qt_registro_w,0) > 0) then
		CALL exec_sql_dinamico('Ronaldo', 'ALTER TABLE material_autor_cir_cot MODIFY vl_unitario_cotado number(17,4)');
	end if;
	end;
end if;

if (dt_versao_atual_cliente_w < to_date('12/02/2013','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'TISS_DEM_CONTA_PROC'
	and	constraint_name	= 'TISSDPR_PROCEDI_FK';
	
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('lhalves', ' Alter Table TISS_DEM_CONTA_PROC drop constraint TISSDPR_PROCEDI_FK ');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	table_name	= 'TISS_DEM_CONTA_PROC'
	and	index_name	= 'TISSDPR_PROCEDI_FK_I';
	
	if (qt_registro_w > 0) then				
		CALL Exec_sql_Dinamico('lhalves', ' Drop Index TISSDPR_PROCEDI_FK_I ');
	end if;	
end if;

if (dt_versao_atual_cliente_w < to_date('19/03/2013','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_objects	
	where	object_name = 'OBTER_FUNCAO_CAPA_FICHA_FINANC';
	
	if (qt_registro_w > 0) then				
		CALL Exec_sql_Dinamico('srcunha', ' Drop function OBTER_FUNCAO_CAPA_FICHA_FINANC '
);
	end if;	
end if;

if (dt_versao_atual_cliente_w < to_date('09/04/2013','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	table_name 	= 'MATERIAL_AUTORIZADO'
	and	index_name	= 'MATAUTO_UK2';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('lhalves', ' Drop Index MATAUTO_UK2 ');
	end if;		

end if;

if (dt_versao_atual_cliente_w < to_date('06/06/2013','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name	= 'BANCO_ESTABELECIMENTO_HIST';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('lhalves', 'drop table BANCO_ESTABELECIMENTO_HIST');
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('20/06/2013','dd/mm/yyyy')) then

	CALL Exec_sql_Dinamico('lhalves',' update bandeira_cartao_cr_regra a	set a.dt_inicio_vigencia = nvl(dt_atualizacao_nrec,dt_atualizacao)');

	CALL Exec_sql_Dinamico('lhalves',' update tabela_sistema a set a.nm_tabela_superior = null where nm_tabela = ' || chr(39) || 'BANDEIRA_CARTAO_CR_REGRA' || chr(39));

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'BANDEIRA_CARTAO_CR_REGRA'
	and	column_name	= 'DT_INICIO_VIGENCIA'
	and	nullable	= 'S';
	
	if (qt_registro_w > 0) then	
		CALL Exec_sql_Dinamico('lhalves', 'alter table bandeira_cartao_cr_regra modify dt_inicio_vigencia date not null');
	end if;
		
	insert	into bandeira_cartao_cr_regra(cd_estabelecimento,
		ds_regra,
		dt_atualizacao,
		dt_atualizacao_nrec,
		dt_inicio_vigencia,
		ie_ajustar_valor,
		nm_usuario,
		nm_usuario_nrec,
		nr_filial,
		nr_seq_grupo,
		nr_sequencia,
		vl_max_indevido,
		vl_min_indevido)
	SELECT	b.cd_estabelecimento,
		a.ds_regra,
		a.dt_atualizacao,
		a.dt_atualizacao_nrec,
		coalesce(a.dt_atualizacao_nrec,a.dt_atualizacao),
		a.ie_ajustar_valor,
		a.nm_usuario,
		a.nm_usuario_nrec,
		a.nr_filial,
		a.nr_seq_grupo,
		nextval('bandeira_cartao_cr_regra_seq'),
		a.vl_max_indevido,
		a.vl_min_indevido
	from	grupo_bandeira_cr b,
		grupo_band_cr_regra a
	where	a.nr_seq_grupo	= b.nr_sequencia;

	commit;

end if;

if (dt_versao_atual_cliente_w < to_date('02/10/2013','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'CLASSE_TITULO_PAGAR'
	and	column_name	= 'CD_ESTABELECIMENTO'
	and	nullable	= 'N';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder',' alter table classe_titulo_pagar modify cd_estabelecimento number(4) null ');

	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('04/10/2013','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'W_TITULO_ABATIMENTO'
	and	column_name	= 'NR_TITULO'
	and	nullable	= 'N';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder',' alter table w_titulo_abatimento modify nr_titulo number(10) null ');

	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('01/11/2013','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'REGRA_RECEB_ENC_CONTAS'
	and	column_name	= 'IE_JUROS';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder',' update regra_receb_enc_contas a set a.ie_juros = a.ie_juros_multa ');

	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'REGRA_RECEB_ENC_CONTAS'
	and	column_name	= 'IE_MULTA';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder',' update regra_receb_enc_contas a set a.ie_multa = a.ie_juros_multa ');

	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('05/11/2013','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'W_REL_TITULO_RECEBER'
	and	column_name	= 'CD_PROCEDIMENTO'
	and	nullable	= 'N';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder',' alter table w_rel_titulo_receber modify cd_procedimento number(15) null ');

	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'W_REL_TITULO_RECEBER'
	and	column_name	= 'IE_ORIGEM_PROCED'
	and	nullable	= 'N';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder',' alter table w_rel_titulo_receber modify ie_origem_proced number(10) null ');

	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('19/12/2013','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'CLASSE_TITULO_RECEB_REGRA'
	and	column_name	= 'IE_TIPO_PROTOCOLO'
	and	nullable	= 'N';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder',' alter table classe_titulo_receb_regra modify ie_tipo_protocolo number(2) null ');

	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('07/01/2014','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'W_INCONSISTENCIA_ESCRIT'
	and	column_name	= 'NR_SEQ_INCONSISTENCIA'
	and	nullable	= 'N';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder', 'alter table w_inconsistencia_escrit modify nr_seq_inconsistencia number(10) null');

	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('18/01/2014','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'CLASSE_TITULO_PAGAR'
	and	column_name	= 'CD_EMPRESA';

	if (coalesce(qt_registro_w,0)	> 0) then

		update	classe_titulo_pagar a
		set	a.cd_empresa	=
			(SELECT	max(x.cd_empresa)
			from	estabelecimento x
			where	x.cd_estabelecimento	= a.cd_estabelecimento)
		where	coalesce(a.cd_empresa::text, '') = '';

		select	min(a.cd_empresa)
		into STRICT	cd_empresa_w
		from	empresa a
		where	a.ie_situacao	= 'A';

		if (coalesce(cd_empresa_w::text, '') = '') then

			select	min(a.cd_empresa)
			into STRICT	cd_empresa_w
			from	empresa a;

		end if;

		if (cd_empresa_w IS NOT NULL AND cd_empresa_w::text <> '') then

			update	classe_titulo_pagar
			set	cd_empresa		= cd_empresa_w
			where	coalesce(cd_estabelecimento::text, '') = ''
			and	coalesce(cd_empresa::text, '') = '';

		end if;

	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('29/01/2014','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'FIN_MES_REF'
	and	column_name	= 'IE_STATUS'
	and	nullable	= 'N';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder', 'alter table fin_mes_ref modify ie_status varchar2(15) null');

	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('04/03/2014','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_source
	where	name	= 'PLS_GLOSA_EVENTO_DELETE';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder', 'drop trigger PLS_GLOSA_EVENTO_DELETE');

	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('06/03/2014','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name	= 'W_HSL_TITULO_RECEBER_ETAPA';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder', 'delete from w_hsl_titulo_receber_etapa');

		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'W_HSL_TITULO_RECEBER_ETAPA'
		and	column_name	= 'DT_PREVISACAO_COBRANCA';

		if (coalesce(qt_registro_w,0)	> 0) then

			CALL Exec_sql_Dinamico('ahoffelder', 'alter table w_hsl_titulo_receber_etapa drop column dt_previsacao_cobranca');

		end if;

		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'W_HSL_TITULO_RECEBER_ETAPA'
		and	column_name	= 'DT_PREVISAO_COBRANCA';

		if (coalesce(qt_registro_w,0)	= 0) then

			CALL Exec_sql_Dinamico('ahoffelder', 'alter table w_hsl_titulo_receber_etapa add dt_previsao_cobranca date');

		end if;

		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'W_HSL_TITULO_RECEBER_ETAPA'
		and	column_name	= 'CLA_PESS_ATEND';

		if (coalesce(qt_registro_w,0)	> 0) then

			CALL Exec_sql_Dinamico('ahoffelder', 'alter table w_hsl_titulo_receber_etapa drop column cla_pess_atend');

		end if;

		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'W_HSL_TITULO_RECEBER_ETAPA'
		and	column_name	= 'CLA_PESS_ATEN';

		if (coalesce(qt_registro_w,0)	= 0) then

			CALL Exec_sql_Dinamico('ahoffelder', 'alter table w_hsl_titulo_receber_etapa add cla_pess_aten varchar2(4000)');

		end if;

	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('12/03/2014','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'FLUXO_CAIXA_LOTE_FILTRO'
	and	column_name	= 'NR_SEQ_LOTE_FLUXO'
	and	nullable	= 'Y';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder', 'alter table fluxo_caixa_lote_filtro modify nr_seq_lote_fluxo number(10) not null');

	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'FLUXO_CAIXA_DATA'
	and	column_name	= 'NR_SEQ_LOTE_FLUXO'
	and	nullable	= 'Y';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder', 'alter table fluxo_caixa_data modify nr_seq_lote_fluxo number(10) not null');

	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'FLUXO_CAIXA_LOTE_FILTRO'
	and	column_name	= 'DT_REFERENCIA'
	and	nullable	= 'Y';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder', 'alter table fluxo_caixa_data modify dt_referencia date not null');

	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('08/04/2014','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'FLUXO_CAIXA_LOTE_HIST'
	and	column_name	= 'DT_HISTORICO'
	and	nullable	= 'Y';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder', 'alter table fluxo_caixa_lote_hist modify dt_historico not null');

	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'FLUXO_CAIXA_LOTE_HIST'
	and	column_name	= 'IE_ORIGEM'
	and	nullable	= 'Y';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder', 'alter table fluxo_caixa_lote_hist modify ie_origem not null');

	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'FLUXO_CAIXA_LOTE_HIST'
	and	column_name	= 'DS_HISTORICO'
	and	nullable	= 'Y';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder', 'alter table fluxo_caixa_lote_hist modify ds_historico not null');

	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'FLUXO_CAIXA_LOTE_HIST'
	and	column_name	= 'NR_SEQ_LOTE_FLUXO'
	and	nullable	= 'Y';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder', 'alter table fluxo_caixa_lote_hist modify nr_seq_lote_fluxo not null');

	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'FLUXO_CAIXA_DATA'
	and	column_name	= 'CD_CONTA_FINANC'
	and	nullable	= 'Y';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder', 'alter table fluxo_caixa_data modify cd_conta_financ not null');

	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'FLUXO_CAIXA_DATA'
	and	column_name	= 'VL_FLUXO'
	and	nullable	= 'Y';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder', 'alter table fluxo_caixa_data modify vl_fluxo not null');

	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'FLUXO_CAIXA_DATA'
	and	column_name	= 'IE_ORIGEM'
	and	nullable	= 'Y';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder', 'alter table fluxo_caixa_data modify ie_origem not null');

	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('12/04/2014','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'TITULO_RECEBER_MENSAGEM'
	and	column_name	= 'DS_MENSAGEM';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder', 'alter table titulo_receber_mensagem modify ds_mensagem varchar2(4000)');

	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('14/04/2014','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'REGRA_DIST_REC_CRITERIO'
	and	column_name	= 'NR_SEQ_CONTA_BANCO'
	and	nullable	= 'N';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder', 'alter table regra_dist_rec_criterio modify nr_seq_conta_banco null');

	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('07/05/2014','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'ES_NGTB_COBFATURATASY_COPI'
	and	column_name	= 'COPI_DS_COMPETENCIA'
	and	nullable	= 'N';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder', 'alter table ES_NGTB_COBFATURATASY_COPI modify COPI_DS_COMPETENCIA null');

	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('10/06/2014','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name	= 'BANCO_GRUPO_INSTRUCAO';

	if (coalesce(qt_registro_w,0)	> 0) then

		open	c01;
		loop
		fetch	c01 into
			cd_banco_w,
			ds_banco_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

			select	nextval('banco_grupo_instrucao_seq')
			into STRICT	nr_seq_grupo_banco_w
			;

			insert	into banco_grupo_instrucao(cd_banco,
				ds_grupo,
				dt_atualizacao,
				dt_atualizacao_nrec,
				ie_situacao,
				nm_usuario,
				nm_usuario_nrec,
				nr_sequencia)
			values (cd_banco_w,
				'Grupo de instruções ' || ds_banco_w,
				clock_timestamp(),
				clock_timestamp(),
				'A',
				'Tasy',
				'Tasy',
				nr_seq_grupo_banco_w);

			update	banco_instrucao_boleto
			set	nr_seq_grupo	= nr_seq_grupo_banco_w
			where	coalesce(nr_seq_grupo::text, '') = ''
			and	cd_banco	= cd_banco_w;

		end	loop;
		close	c01;

	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('14/06/2014','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'ES_NGTB_COBBAIXAFATURA_COBA'
	and	column_name	= 'COBA_DS_CNPJ'
	and	nullable	= 'N';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('ahoffelder', 'alter table ES_NGTB_COBBAIXAFATURA_COBA modify COBA_DS_CNPJ null');

	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('23/07/2014','dd/mm/yyyy')) then

	begin

		CALL baca_ajustar_taxas_repasse();

	exception
	when others then
		null;
	end;

end if;

if (dt_versao_atual_cliente_w < to_date('20/02/2015','dd/mm/yyyy')) then /*OS 845389*/
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'TITULO_RECEBER_TRIB'
	and	column_name	= 'TX_TRIBUTO'
	and	nullable	= 'N';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('aamfirmo', 'alter table TITULO_RECEBER_TRIB modify TX_TRIBUTO null');

	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('25/03/2015','dd/mm/yyyy')) then /*aamfirmo 25/03/2015 OS 786847*/
	begin
	
		select	Obter_Tablespace_Index(null)
		into STRICT	nm_tablespace_w
		;
		
		select	count(*)
		into STRICT	qt_registro_w
		from	user_constraints
		where	upper(table_name)		 	= 'ESPECIE_TITULOS_REMESSA'
		and		upper(constraint_name)		= 'ESTITRES_BANCO_FK';
		
		if (qt_registro_w > 0) then
			CALL Exec_sql_Dinamico('aamfirmo', 'Alter Table ESPECIE_TITULOS_REMESSA drop constraint ESTITRES_BANCO_FK');
		end if;
		
		select	count(*)
		into STRICT	qt_registro_w
		from	user_constraints
		where	upper(table_name)		 	= 'ESPECIE_TITULOS_REMESSA'
		and		upper(constraint_name)		= 'ESTITRES_PK';
		
		if (qt_registro_w > 0) then
			CALL Exec_sql_Dinamico('aamfirmo', 'Alter Table ESPECIE_TITULOS_REMESSA drop constraint ESTITRES_PK');
		end if;

		select	count(*)
		into STRICT	qt_registro_w
		from	user_indexes
		where	upper(table_name)		= 'ESPECIE_TITULOS_REMESSA'
		and		upper(index_name)		= 'ESTITRES_BANCO_FK_I';
		
		if (qt_registro_w > 0) then
			CALL Exec_sql_Dinamico('aamfirmo', 'drop index ESTITRES_BANCO_FK_I');
		end if;

		if ( coalesce(nm_tablespace_w,'X') <> 'X' ) then
		
			select	count(*)
			into STRICT	qt_registro_w
			from	user_constraints
			where	upper(table_name)		 	= 'ESPECIE_TITULOS_REMESSA'
			and		upper(constraint_name)		= 'ESPTITRE_PK';
			
			if (qt_registro_w = 0) then
				CALL Exec_sql_Dinamico('aamfirmo', 'Alter Table ESPECIE_TITULOS_REMESSA add ( Constraint ESPTITRE_PK Primary Key (CD_BANCO,IE_TIPO_TITULO) Using Index Tablespace ' || nm_tablespace_w || ' ) ' );
			end if;
			
			select	count(*)
			into STRICT	qt_registro_w
			from	user_indexes
			where	upper(table_name)		 	= 'ESPECIE_TITULOS_REMESSA'
			and		upper(index_name)		= 'ESPTITRE_BANCO_FK_I';
			
			if (qt_registro_w = 0) then
				CALL Exec_sql_Dinamico('aamfirmo', 'Create Index ESPTITRE_BANCO_FK_I on ESPECIE_TITULOS_REMESSA(CD_BANCO)');
			end if;
			
			select	count(*)
			into STRICT	qt_registro_w
			from	user_constraints
			where	upper(table_name)		 	= 'ESPECIE_TITULOS_REMESSA'
			and		upper(constraint_name)		= 'ESPTITRE_BANCO_FK';
			
			if (qt_registro_w = 0) then
				CALL Exec_sql_Dinamico('aamfirmo', 'Alter Table ESPECIE_TITULOS_REMESSA add (Constraint ESPTITRE_BANCO_FK Foreign Key (CD_BANCO) References BANCO (CD_BANCO))');
			end if;
		end if;
	
	exception
	when others then
		null;
	end;

end if;

if (dt_versao_atual_cliente_w < to_date('23/04/2015','dd/mm/yyyy')) then /*ljmartins 23/04/2015 OS 809902*/
begin
	-- Ajusta tabela REGRA_FATURA_PARC
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	upper(table_name)		= 'REGRA_FATURA_PARC'
	and		upper(index_name)		= 'REGFATP_CONPAGA_FK_I';
		
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('ljmartins', 'drop index REGFATP_CONPAGA_FK_I');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	upper(table_name)		= 'REGRA_FATURA_PARC'
	and		upper(index_name)		= 'REGFATP_CONPAGA_FK_I';
			
	if (qt_registro_w = 0) then
		CALL Exec_sql_Dinamico('ljmartins', 'Create Index REGFATP_CONPAGA_FK_I on REGRA_FATURA_PARC(CD_COND_PAGTO)');
	end if;	

	-- Ajusta tabela LOTE_ORGAO_COBRANCA
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	upper(table_name)		= 'LOTE_ORGAO_COBRANCA'
	and		upper(index_name)		= 'LOTORGCO_ORCOBINT_FK_I';
		
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('ljmartins', 'drop index LOTORGCO_ORCOBINT_FK_I');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	upper(table_name)		= 'LOTE_ORGAO_COBRANCA'
	and		upper(index_name)		= 'LOTORGCO_ORCOBINT_FK_I';
			
	if (qt_registro_w = 0) then
		CALL Exec_sql_Dinamico('ljmartins', 'Create Index LOTORGCO_ORCOBINT_FK_I on LOTE_ORGAO_COBRANCA(NR_SEQ_ORGAO_COBR,NR_SEQ_INTERFACE)');
	end if;		
	
exception
when others then
	null;
end;
end if;

if (dt_versao_atual_cliente_w < to_date('30/11/2015','dd/mm/yyyy')) then /*pmgoncalves 01/12/2015 OS 954566*/
begin
	-- Ajusta tabela MOTIVO_ALT_VALOR_TIT_REC
	select	count(*)
	into STRICT	qt_registro_w
	from	MOTIVO_ALT_VALOR_TIT_REC;
		
	if (qt_registro_w = 0) then
		INSERT	INTO MOTIVO_ALT_VALOR_TIT_REC(NR_SEQUENCIA,
			DT_ATUALIZACAO,
			NM_USUARIO,
			DS_MOTIVO,
			IE_SITUACAO)
		VALUES (1, clock_timestamp(), 'TasyFin', 'Desconto Concedido', 'A');
		INSERT	INTO MOTIVO_ALT_VALOR_TIT_REC(NR_SEQUENCIA,
			DT_ATUALIZACAO,
			NM_USUARIO,
			DS_MOTIVO,
			IE_SITUACAO)
		VALUES (2, clock_timestamp(), 'TasyFin', 'Aumento de Valor', 'A');
		INSERT	INTO MOTIVO_ALT_VALOR_TIT_REC(NR_SEQUENCIA,
			DT_ATUALIZACAO,
			NM_USUARIO,
			DS_MOTIVO,
			IE_SITUACAO)
		VALUES (3, clock_timestamp(), 'TasyFin', 'Cancelamento de Título', 'A');
	commit;
	end if;
	
	
exception
when others then
	null;
end;
end if;

if (dt_versao_atual_cliente_w < to_date('30/11/2015','dd/mm/yyyy')) then /*ljmartins 22/12/2015 OS 976552*/
begin

	delete from VALOR_DOMINIO where VL_DOMINIO = 7 AND CD_DOMINIO = 703;
	commit;
	
exception
when others then
	null;
end;
end if;

if (dt_versao_atual_cliente_w < to_date('18/02/2016','dd/mm/yyyy')) then /*ljmartins 18/02/2016 OS 1000808*/
begin

	update tabela_atributo set qt_decimais = 0 where nm_tabela = 'MOVTO_TRANS_DOC_MONETARIO' and nm_atributo = 'NR_SEQ_TRANS_CARTAO';
	commit;
	
exception
when others then
	null;
end;
end if;

if (dt_versao_atual_cliente_w < to_date('24/02/2016','dd/mm/yyyy')) then /*pmgoncalves 24/02/2016 OS 1010349*/
begin
	--Verifica se a tabela já está criada na base
	qt_registro_w := 0;
	select count(*)
	into STRICT qt_registro_w
	from user_tables
	where upper(table_name) = 'W_RELAT_ADIANT';
	
	if (qt_registro_w > 0 ) then
		begin
			--WRELANT_I1
			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from indice
			where nm_indice = 'WRELANT_I1';

			if (qt_registro_w = 0) then
				begin
				insert into INDICE(NM_INDICE,DS_INDICE,IE_TIPO,IE_CRIAR_ALTERAR,IE_SITUACAO,DT_CRIACAO,IE_IGNORADO_CLIENTE,IE_CLASSIFICACAO,DS_MENSAGEM,NM_TABELA,DT_ATUALIZACAO,NM_USUARIO)
				 values ('WRELANT_I1','Índice por pessoa física','I','M','A',TO_DATE('19/01/2016 16:45:01','dd/mm/yyyy hh24:mi:ss'),'','IS','','W_RELAT_ADIANT',TO_DATE('19/01/2016 16:45:33','dd/mm/yyyy hh24:mi:ss'),'pmgoncalves');
				end;
			end if;
			
			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from indice_atributo
			where nm_indice = 'WRELANT_I1';

			if (qt_registro_w = 0) then
				begin
				insert into INDICE_ATRIBUTO(NR_SEQUENCIA,NM_ATRIBUTO,DS_INDICE_FUNCTION,NM_TABELA,NM_INDICE,DT_ATUALIZACAO,NM_USUARIO)
				 values (1,'CD_PESSOA_FISICA','','W_RELAT_ADIANT','WRELANT_I1',TO_DATE('23/02/2016 16:56:28','dd/mm/yyyy hh24:mi:ss'),'pmgoncalves');
				end;
			end if;

			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from user_indexes
			where index_name = 'WRELANT_I1';

			if (qt_registro_w = 0) then
				begin
				CALL Exec_sql_dinamico('OS1003349','Create Index WRELANT_I1 on W_RELAT_ADIANT(CD_PESSOA_FISICA)');
				end;
			end if;
			
			--WRELANT_I2
			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from indice
			where nm_indice = 'WRELANT_I2';

			if (qt_registro_w = 0) then
				begin
				insert into INDICE(NM_INDICE,DS_INDICE,IE_TIPO,IE_CRIAR_ALTERAR,IE_SITUACAO,DT_CRIACAO,IE_IGNORADO_CLIENTE,IE_CLASSIFICACAO,DS_MENSAGEM,NM_TABELA,DT_ATUALIZACAO,NM_USUARIO)
				 values ('WRELANT_I2','Índice por número de atendimento','I','M','A',TO_DATE('19/01/2016 16:45:36','dd/mm/yyyy hh24:mi:ss'),'','IS','','W_RELAT_ADIANT',TO_DATE('19/01/2016 16:45:58','dd/mm/yyyy hh24:mi:ss'),'pmgoncalves');
				end;
			end if;
			
			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from indice_atributo
			where nm_indice = 'WRELANT_I2';

			if (qt_registro_w = 0) then
				begin
				insert into INDICE_ATRIBUTO(NR_SEQUENCIA,NM_ATRIBUTO,DS_INDICE_FUNCTION,NM_TABELA,NM_INDICE,DT_ATUALIZACAO,NM_USUARIO)
				values (1,'NR_ATENDIMENTO','','W_RELAT_ADIANT','WRELANT_I2',TO_DATE('23/02/2016 16:55:44','dd/mm/yyyy hh24:mi:ss'),'pmgoncalves');
				end;
			end if;

			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from user_indexes
			where index_name = 'WRELANT_I2';

			if (qt_registro_w = 0) then
				begin
				CALL Exec_sql_dinamico('OS1003349','Create Index WRELANT_I2 on W_RELAT_ADIANT(NR_ATENDIMENTO)');
				end;
			end if;

			--WRELANT_I3
			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from indice
			where nm_indice = 'WRELANT_I3';

			if (qt_registro_w = 0) then
				begin
				insert into INDICE(NM_INDICE,DS_INDICE,IE_TIPO,IE_CRIAR_ALTERAR,IE_SITUACAO,DT_CRIACAO,IE_IGNORADO_CLIENTE,IE_CLASSIFICACAO,DS_MENSAGEM,NM_TABELA,DT_ATUALIZACAO,NM_USUARIO)
				 values ('WRELANT_I3','Índice por  número de adiantamento','I','M','A',TO_DATE('19/01/2016 16:46:04','dd/mm/yyyy hh24:mi:ss'),'','IS','','W_RELAT_ADIANT',TO_DATE('19/01/2016 16:46:31','dd/mm/yyyy hh24:mi:ss'),'pmgoncalves');
				end;
			end if;
			
			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from indice_atributo
			where nm_indice = 'WRELANT_I3';

			if (qt_registro_w = 0) then
				begin
				insert into INDICE_ATRIBUTO(NR_SEQUENCIA,NM_ATRIBUTO,DS_INDICE_FUNCTION,NM_TABELA,NM_INDICE,DT_ATUALIZACAO,NM_USUARIO)
				 values (1,'NR_ADIANTAMENTO','','W_RELAT_ADIANT','WRELANT_I3',TO_DATE('23/02/2016 16:55:57','dd/mm/yyyy hh24:mi:ss'),'pmgoncalves');
				end;
			end if;

			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from user_indexes
			where index_name = 'WRELANT_I3';

			if (qt_registro_w = 0) then
				begin
				CALL Exec_sql_dinamico('OS1003349','Create Index WRELANT_I3 on W_RELAT_ADIANT(NR_ADIANTAMENTO)');
				end;
			end if;

			--WRELANT_I4
			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from indice
			where nm_indice = 'WRELANT_I4';

			if (qt_registro_w = 0) then
				begin
				insert into INDICE(NM_INDICE,DS_INDICE,IE_TIPO,IE_CRIAR_ALTERAR,IE_SITUACAO,DT_CRIACAO,IE_IGNORADO_CLIENTE,IE_CLASSIFICACAO,DS_MENSAGEM,NM_TABELA,DT_ATUALIZACAO,NM_USUARIO)
				 values ('WRELANT_I4','Índice por data de adiantamento','I','M','A',TO_DATE('19/01/2016 16:46:42','dd/mm/yyyy hh24:mi:ss'),'','IS','','W_RELAT_ADIANT',TO_DATE('19/01/2016 16:47:08','dd/mm/yyyy hh24:mi:ss'),'pmgoncalves');
				end;
			end if;
			
			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from indice_atributo
			where nm_indice = 'WRELANT_I4';

			if (qt_registro_w = 0) then
				begin
				insert into INDICE_ATRIBUTO(NR_SEQUENCIA,NM_ATRIBUTO,DS_INDICE_FUNCTION,NM_TABELA,NM_INDICE,DT_ATUALIZACAO,NM_USUARIO)
				 values (1,'DT_ADIANTAMENTO','','W_RELAT_ADIANT','WRELANT_I4',TO_DATE('23/02/2016 16:56:55','dd/mm/yyyy hh24:mi:ss'),'pmgoncalves');
				end;
			end if;

			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from user_indexes
			where index_name = 'WRELANT_I4';

			if (qt_registro_w = 0) then
				begin
				CALL Exec_sql_dinamico('OS1003349','Create Index RELANT_I4 on W_RELAT_ADIANT(DT_ADIANTAMENTO)');
				end;
			end if;

			--WRELANT_I5
			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from indice
			where nm_indice = 'WRELANT_I5';

			if (qt_registro_w = 0) then
				begin
				insert into INDICE(NM_INDICE,DS_INDICE,IE_TIPO,IE_CRIAR_ALTERAR,IE_SITUACAO,DT_CRIACAO,IE_IGNORADO_CLIENTE,IE_CLASSIFICACAO,DS_MENSAGEM,NM_TABELA,DT_ATUALIZACAO,NM_USUARIO)
				 values ('WRELANT_I5','Índice por CGC','I','M','A',TO_DATE('19/01/2016 16:47:16','dd/mm/yyyy hh24:mi:ss'),'','IS','','W_RELAT_ADIANT',TO_DATE('19/01/2016 16:47:55','dd/mm/yyyy hh24:mi:ss'),'pmgoncalves');
				end;
			end if;
			
			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from indice_atributo
			where nm_indice = 'WRELANT_I5';

			if (qt_registro_w = 0) then
				begin
				insert into INDICE_ATRIBUTO(NR_SEQUENCIA,NM_ATRIBUTO,DS_INDICE_FUNCTION,NM_TABELA,NM_INDICE,DT_ATUALIZACAO,NM_USUARIO)
				 values (1,'CD_CGC','','W_RELAT_ADIANT','WRELANT_I5',TO_DATE('23/02/2016 16:57:15','dd/mm/yyyy hh24:mi:ss'),'pmgoncalves');
				end;
			end if;

			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from user_indexes
			where index_name = 'WRELANT_I5';

			if (qt_registro_w = 0) then
				begin
				CALL Exec_sql_dinamico('OS1003349','Create Index WRELANT_I5 on W_RELAT_ADIANT(CD_CGC)');
				end;
			end if;
			
			--WRELANT_I6
			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from indice
			where nm_indice = 'WRELANT_I6';

			if (qt_registro_w = 0) then
				begin
				insert into INDICE(NM_INDICE,DS_INDICE,IE_TIPO,IE_CRIAR_ALTERAR,IE_SITUACAO,DT_CRIACAO,IE_IGNORADO_CLIENTE,IE_CLASSIFICACAO,DS_MENSAGEM,NM_TABELA,DT_ATUALIZACAO,NM_USUARIO)
				 values ('WRELANT_I6','Índice por data de baixa','I','M','A',TO_DATE('19/01/2016 16:48:02','dd/mm/yyyy hh24:mi:ss'),'','IS','','W_RELAT_ADIANT',TO_DATE('19/01/2016 16:48:34','dd/mm/yyyy hh24:mi:ss'),'pmgoncalves');
				end;
			end if;
			
			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from indice_atributo
			where nm_indice = 'WRELANT_I6';

			if (qt_registro_w = 0) then
				begin
				insert into INDICE_ATRIBUTO(NR_SEQUENCIA,NM_ATRIBUTO,DS_INDICE_FUNCTION,NM_TABELA,NM_INDICE,DT_ATUALIZACAO,NM_USUARIO)
				 values (1,'DT_BAIXA','','W_RELAT_ADIANT','WRELANT_I6',TO_DATE('23/02/2016 16:57:33','dd/mm/yyyy hh24:mi:ss'),'pmgoncalves');
				end;
			end if;

			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from user_indexes
			where index_name = 'WRELANT_I6';

			if (qt_registro_w = 0) then
				begin
				CALL Exec_sql_dinamico('OS1003349','Create Index WRELANT_I6 on W_RELAT_ADIANT(DT_BAIXA)');
				end;
			end if;
			
			--WRELANT_I7
			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from indice
			where nm_indice = 'WRELANT_I7';

			if (qt_registro_w = 0) then
				begin
				insert into INDICE(NM_INDICE,DS_INDICE,IE_TIPO,IE_CRIAR_ALTERAR,IE_SITUACAO,DT_CRIACAO,IE_IGNORADO_CLIENTE,IE_CLASSIFICACAO,DS_MENSAGEM,NM_TABELA,DT_ATUALIZACAO,NM_USUARIO)
				 values ('WRELANT_I7','Índice por nome de pessoa física','I','M','A',TO_DATE('19/01/2016 16:48:40','dd/mm/yyyy hh24:mi:ss'),'','IS','','W_RELAT_ADIANT',TO_DATE('19/01/2016 16:49:04','dd/mm/yyyy hh24:mi:ss'),'pmgoncalves');
				end;
			end if;
			
			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from indice_atributo
			where nm_indice = 'WRELANT_I7';

			if (qt_registro_w = 0) then
				begin
				insert into INDICE_ATRIBUTO(NR_SEQUENCIA,NM_ATRIBUTO,DS_INDICE_FUNCTION,NM_TABELA,NM_INDICE,DT_ATUALIZACAO,NM_USUARIO)
				 values (1,'NM_PESSOA_FISICA','','W_RELAT_ADIANT','WRELANT_I7',TO_DATE('23/02/2016 16:57:52','dd/mm/yyyy hh24:mi:ss'),'pmgoncalves');
				end;
			end if;

			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from user_indexes
			where index_name = 'WRELANT_I7';

			if (qt_registro_w = 0) then
				begin
				CALL Exec_sql_dinamico('OS1003349','Create Index WRELANT_I7 on W_RELAT_ADIANT(NM_PESSOA_FISICA)');
				end;
			end if;

			--WRELANT_I8
			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from indice
			where nm_indice = 'WRELANT_I8';

			if (qt_registro_w = 0) then
				begin
				insert into INDICE(NM_INDICE,DS_INDICE,IE_TIPO,IE_CRIAR_ALTERAR,IE_SITUACAO,DT_CRIACAO,IE_IGNORADO_CLIENTE,IE_CLASSIFICACAO,DS_MENSAGEM,NM_TABELA,DT_ATUALIZACAO,NM_USUARIO)
				 values ('WRELANT_I8','Índice por descrição da razão social','I','M','A',TO_DATE('19/01/2016 16:49:17','dd/mm/yyyy hh24:mi:ss'),'','IS','','W_RELAT_ADIANT',TO_DATE('19/01/2016 16:50:04','dd/mm/yyyy hh24:mi:ss'),'pmgoncalves');
				end;
			end if;
			
			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from indice_atributo
			where nm_indice = 'WRELANT_I8';

			if (qt_registro_w = 0) then
				begin
				insert into INDICE_ATRIBUTO(NR_SEQUENCIA,NM_ATRIBUTO,DS_INDICE_FUNCTION,NM_TABELA,NM_INDICE,DT_ATUALIZACAO,NM_USUARIO)
				 values (1,'DS_RAZAO_SOCIAL','','W_RELAT_ADIANT','WRELANT_I8',TO_DATE('23/02/2016 16:58:07','dd/mm/yyyy hh24:mi:ss'),'pmgoncalves');
				end;
			end if;

			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from user_indexes
			where index_name = 'WRELANT_I8';

			if (qt_registro_w = 0) then
				begin
				CALL Exec_sql_dinamico('OS1003349','Create Index WRELANT_I8 on W_RELAT_ADIANT(DS_RAZAO_SOCIAL)');
				end;
			end if;

			--WRELANT_I9
			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from indice
			where nm_indice = 'WRELANT_I9';

			if (qt_registro_w = 0) then
				begin
				insert into INDICE(NM_INDICE,DS_INDICE,IE_TIPO,IE_CRIAR_ALTERAR,IE_SITUACAO,DT_CRIACAO,IE_IGNORADO_CLIENTE,IE_CLASSIFICACAO,DS_MENSAGEM,NM_TABELA,DT_ATUALIZACAO,NM_USUARIO)
				 values ('WRELANT_I9','Índice por descrição do tipo de recebimento','I','M','A',TO_DATE('19/01/2016 16:50:21','dd/mm/yyyy hh24:mi:ss'),'','IS','','W_RELAT_ADIANT',TO_DATE('19/01/2016 16:51:00','dd/mm/yyyy hh24:mi:ss'),'pmgoncalves');
				end;
			end if;
			
			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from indice_atributo
			where nm_indice = 'WRELANT_I9';

			if (qt_registro_w = 0) then
				begin
				insert into INDICE_ATRIBUTO(NR_SEQUENCIA,NM_ATRIBUTO,DS_INDICE_FUNCTION,NM_TABELA,NM_INDICE,DT_ATUALIZACAO,NM_USUARIO)
				 values (1,'DS_TIPO_RECEBIMENTO','','W_RELAT_ADIANT','WRELANT_I9',TO_DATE('23/02/2016 16:59:38','dd/mm/yyyy hh24:mi:ss'),'pmgoncalves');
				end;
			end if;

			qt_registro_w := 0;
			select count(*)
			into STRICT qt_registro_w
			from user_indexes
			where index_name = 'WRELANT_I9';

			if (qt_registro_w = 0) then
				begin
				CALL Exec_sql_dinamico('OS1003349','Create Index WRELANT_I9 on W_RELAT_ADIANT(DS_TIPO_RECEBIMENTO)');
				end;
			end if;
		end;
	end if;
exception
when others then
	null;
end;
end if;

if (dt_versao_atual_cliente_w < to_date('07/04/2016','dd/mm/yyyy')) then /*ljmartins 07/04/2016 OS 1060800*/
begin

	update tabela_atributo set ie_obrigatorio = 'S' where nm_tabela = 'FLUXO_CAIXA' and nm_atributo in ('IE_INTEGRACAO','IE_PERIODO');
	update tabela_atributo set ie_obrigatorio = 'S' where nm_tabela in ('TITULO_PAGAR_BAIXA', 'TITULO_RECEBER_LIQ','ALTERACAO_VALOR') and nm_atributo = 'NR_SEQUENCIA';	
	commit;	
	
exception
when others then
	null;
end;
end if;

if (dt_versao_atual_cliente_w < to_date('18/10/2016','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'OBJSCHEV_UK';

	if (qt_registro_w > 0) then
		CALL Exec_sql_dinamico('Edgar',' alter table OBJ_SCHEMATIC_EVENTO drop constraint OBJSCHEV_UK ');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'OBJSCHEV_UK';

	if (qt_registro_w > 0) then
		CALL Exec_sql_dinamico('Edgar',' drop index OBJSCHEV_UK ');
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('10/11/2016','dd/mm/yyyy')) then
begin
	update tabela_atributo set ie_obrigatorio = 'N' where nm_tabela = 'EIS_CONTAS_PAGAR' and nm_atributo in ('DT_BAIXA');
	
	CALL exec_sql_dinamico('ljmartins',' alter table EIS_CONTAS_PAGAR modify dt_baixa date null ');
exception when others then
	null;
end;
end if;

if (dt_versao_atual_cliente_w < to_date('21/02/2017','dd/mm/yyyy')) then

	CALL exec_sql_dinamico('Eberns',' alter table apolice_classe modify PR_COPARTICIPACAO number(15,2) ');

end if;


if (dt_versao_atual_cliente_w < to_date('20/03/2017','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'FOJAPAL_FOJALIN_FK_I';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edgar',' drop index FOJAPAL_FOJALIN_FK_I ');
	end if;

	CALL exec_sql_dinamico('Edgar',' Create  Index FOJAPAL_FOJALIN_FK_I on FONTE_JAVA_PALAVRA( NR_SEQ_LINHA) ');

	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'FOJAPAL_FOJALIN_FK';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edgar',' alter table FONTE_JAVA_PALAVRA drop constraint FOJAPAL_FOJALIN_FK ');
	end if;

	CALL exec_sql_dinamico('Edgar','  Alter Table FONTE_JAVA_PALAVRA add ( Constraint FOJAPAL_FOJALIN_FK Foreign Key ( NR_SEQ_LINHA ) References FONTE_JAVA_LINHA ( NR_SEQUENCIA ) on delete cascade) ');

end if;

if (dt_versao_atual_cliente_w < to_date('29/03/2017','dd/mm/yyyy')) then
	CALL BACA_OBJ_SCHEM_REGRAS_UK();
end if;

if (dt_versao_atual_cliente_w < to_date('23/08/2017','dd/mm/yyyy')) then
	begin
	delete	from objeto_sistema where nm_objeto = 'ASSET_CTRL_IMPORT_GOODS';
	commit;
	exception
	when others then
		null;
	end;
end if;


if (dt_versao_atual_cliente_w >= to_date('13/07/2018','dd/mm/yyyy')) then
	-- versão 3.01.1727 OS 1751636
	qt_registro_w := 0;
	select	count(*)
	into STRICT	qt_registro_w
	from funcao_filtro
	where ds_filtro = 'tabela_atualizada_titulo_pagar';
	
	if ( qt_registro_w = 0) then
	
	begin
	delete	from funcao_filtro
	where cd_funcao = 851
	and (nr_seq_filtro = 344136 or nr_seq_filtro = 344713 or nr_seq_filtro = 344124);
	
		insert into FUNCAO_FILTRO(
			NR_SEQUENCIA,
			DT_ATUALIZACAO, 
			NM_USUARIO, 
			DS_FILTRO, 
			IE_TIPO_CAMPO, 
			DS_CAMPO, 
			CD_FUNCAO, 
			IE_TIPO_FILTRO,
			VL_CAMPO,
			DT_ATUALIZACAO_NREC,
			NM_USUARIO_NREC,
			NR_SEQ_FILTRO,
			CD_PERFIL,
			NM_FILTRO)
		values (
			nextval('funcao_filtro_seq'), 
			clock_timestamp(), 
			nm_usuario_p, 
			'tabela_atualizada_titulo_pagar', 
			'N', 
			'tabela_atualizada_titulo_pagar', 
			851, 
			'U',
			'tabela_atualizada_titulo_pagar',			
			clock_timestamp(), 
			nm_usuario_p,
			344136,
			null,
			'tabela_atualizada_titulo_pagar');
			commit;
	exception
	when others then
		null;
	end;
	end if;
end if;


if (dt_versao_atual_cliente_w >= to_date('06/09/2018','dd/mm/yyyy')) then
	-- versão 3.01.1731 OS 1751636
	qt_registro_w := 0;
	select	count(*)
	into STRICT	qt_registro_w
	from funcao_filtro
	where ds_filtro = 'tabela_atualizada_titulo_receber';
	
	if ( qt_registro_w = 0) then
	
	begin
	delete	from funcao_filtro
	where cd_funcao = 801
	and (nr_seq_filtro = 344136 or nr_seq_filtro = 344713 or nr_seq_filtro = 344124);
	
		insert into FUNCAO_FILTRO(
			NR_SEQUENCIA,
			DT_ATUALIZACAO, 
			NM_USUARIO, 
			DS_FILTRO, 
			IE_TIPO_CAMPO, 
			DS_CAMPO, 
			CD_FUNCAO, 
			IE_TIPO_FILTRO,
			VL_CAMPO,
			DT_ATUALIZACAO_NREC,
			NM_USUARIO_NREC,
			NR_SEQ_FILTRO,
			CD_PERFIL,
			NM_FILTRO)
		values (
			nextval('funcao_filtro_seq'), 
			clock_timestamp(), 
			nm_usuario_p, 
			'tabela_atualizada_titulo_receber', 
			'N', 
			'tabela_atualizada_titulo_receber', 
			801, 
			'U',
			'tabela_atualizada_titulo_receber',			
			clock_timestamp(), 
			nm_usuario_p,
			344136,
			null,
			'tabela_atualizada_titulo_receber');
			commit;
	exception
	when others then
		null;
	end;
	end if;	
end if;


if (dt_versao_atual_cliente_w >= to_date('05/04/2019','dd/mm/yyyy')) then
-- OS 1793729, campo novo criado, que deve ser por padrão Sim. Porem para registros já criados vai como Nulo, e neste caso será atualizado para Sim.
	begin
	select 	count(*)
	into STRICT	qt_registro_w
	from	parametro_contas_receber
	where	coalesce(ie_eis_cobranca::text, '') = '';
	exception when others then
		qt_registro_w := 0;
	end;
	
	begin
	if (qt_registro_w > 0) then
		
		update	parametro_contas_receber
		set		ie_eis_cobranca = 'S'
		where	coalesce(ie_eis_cobranca::text, '') = '';
		
		commit;
	
	end if;
	exception when others then
		null;
	end;

end if;

if (dt_versao_atual_cliente_w >= to_date('17/04/2019','dd/mm/yyyy')) then
	begin
	select 	count(*)
	into STRICT	qt_registro_w
	from	pls_pagador_historico
	where	ie_origem = 'FF'
			and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
	exception when others then
		qt_registro_w := 0;
	end;

	begin
	if (qt_registro_w = 0) then
		
		update	pls_pagador_historico
		set		dt_liberacao = dt_historico,
				nm_usuario_lib = nm_usuario
		where	ie_origem = 'FF'
				and coalesce(dt_liberacao::text, '') = '';
		
		commit;
	
	end if;
	exception when others then
		null;
	end;
end if;


if (dt_versao_atual_cliente_w >= to_date('17/04/2019','dd/mm/yyyy')) then --1747
	begin
	select  count(*)
	into STRICT	qt_registro_w
	from  	user_tab_columns
	where  table_name  		= 'REGRA_TIT_RECEBER_CLASSIF'
	and    column_name  	= 'CD_OPERACAO_NF'
	and    data_precision 	= 4
	and    data_scale     	= 2;
	
	if (qt_registro_w > 0) then
	
		qt_registro_w := 0;
		
		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'REGRA_TIT_RECEBER_CLASSIF'
		and		column_name	= 'CD_OPERACAO_NF2';
		
		if (qt_registro_w = 0) then
			/*Criar campo correto na tabela para gravar o valor atual*/

			CALL Exec_sql_dinamico('TASY',' alter table REGRA_TIT_RECEBER_CLASSIF ADD (CD_OPERACAO_NF2 NUMBER(4)) ');
		end if;
		
		/*Confirmar se criou o campo*/

		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'REGRA_TIT_RECEBER_CLASSIF'
		and		column_name	= 'CD_OPERACAO_NF2';
		/*Se criou, fazer os ajustes.*/

		if (qt_registro_w > 0) then
			/*Copiar o valor para esse novo campo*/

			CALL Exec_sql_Dinamico('TASY',' update REGRA_TIT_RECEBER_CLASSIF a set a.CD_OPERACAO_NF2 = CD_OPERACAO_NF where CD_OPERACAO_NF is not null ');
			/*Limpar  a coluna atual*/

			CALL Exec_sql_Dinamico('TASY',' update REGRA_TIT_RECEBER_CLASSIF a set a.CD_OPERACAO_NF = null where CD_OPERACAO_NF is not null and CD_OPERACAO_NF2 is not null ');
			/*Modificar a coluna atual para ser number 4*/

			CALL Exec_sql_dinamico('TASY',' alter table REGRA_TIT_RECEBER_CLASSIF MODIFY (CD_OPERACAO_NF NUMBER(4)) ');
			/*Copiar o valor da coluna de backup para a coluna original*/

			CALL Exec_sql_Dinamico('TASY',' update REGRA_TIT_RECEBER_CLASSIF a set a.CD_OPERACAO_NF = CD_OPERACAO_NF2 where CD_OPERACAO_NF2 is not null ');
		end if;
	end if;
	exception when others then
		null;
	end;
end if;

if (dt_versao_atual_cliente_w >= to_date('09/08/2019','dd/mm/yyyy')) then --1755 OS 1975171
	begin
	/*Atualizar no dicionario os atributos que estavam sendo referenciados errados para NR_TITULO e nao NR_TITULO_PAGAR*/

	update indice_atributo
	set    nm_atributo      = 'NR_TITULO_PAGAR'
	where  upper(nm_tabela) = 'W_ENVIO_BANCO'
	and    upper(nm_indice) = 'WENVBA_TITPAGA_FK_I';
	
	update  integridade_atributo
	set     nm_atributo      					= 'NR_TITULO_PAGAR'
	where   upper(nm_tabela) 					= 'W_ENVIO_BANCO'
	and    	upper(nm_integridade_referencial)	= 'WENVBA_TITPAGA_FK';
	
	commit;

	/*Ajustar inconsistencia caso existir para poder criar a FK posteriormente*/

	update 	w_envio_banco a
	set		nr_titulo_pagar  = NULL
	where 	not exists ( 	SELECT 1 
							from titulo_pagar b 
							where 1 = 1 
							and a.nr_titulo_pagar = b.nr_titulo
						)
	and (a.nr_titulo_pagar IS NOT NULL AND a.nr_titulo_pagar::text <> '');	
	
	/*Criar a FK e o Indice no banco cfme atualizado acima no dicionario*/

	CALL Exec_sql_dinamico('TASY',' Create Index WENVBA_TITPAGA_FK_I on W_ENVIO_BANCO(NR_TITULO_PAGAR) ');
	CALL Exec_sql_dinamico('TASY',' Alter Table W_ENVIO_BANCO add ( Constraint WENVBA_TITPAGA_FK Foreign Key ( NR_TITULO_PAGAR) References TITULO_PAGAR (NR_TITULO)) ');	
	exception when others then
		null;
	end;	

end if;

if (dt_versao_atual_cliente_w >= to_date('30/12/2019','dd/mm/yyyy')) then --1766 OS 2031358
	/* Como nesta OS 2031358 foi criado o campo NR_SEQUENCIA como PK na tabela W_QUERY_ARMAZENADO, se tiver registros na mesma pode ocorrer erro, e por isso precisa limpar a tabela pois é apenas usada dinamicamente*/

	begin
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where   upper(table_name) = 'W_QUERY_ARMAZENADO'
	and     upper(column_name) = 'NR_SEQUENCIA'
	and	upper(nullable) = 'Y';
	
	if (qt_registro_w > 0) then --Se o campo ainda permitir registros nulo, limpar a tabela e ajustar o campo
		delete from w_query_armazenado;
		CALL Exec_sql_dinamico('TASY',' alter table W_QUERY_ARMAZENADO MODIFY NR_SEQUENCIA not null ');	
	end if;
	exception when others then
		null;
	end;	

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasy_ajustar_base_fin ( nm_usuario_p text) FROM PUBLIC;

