-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_desf_lib_item_analise ( nr_seq_item_resumo_p bigint, nr_seq_analise_p bigint, cd_estabelecimento_p bigint, nr_seq_grupo_atual_p bigint, nm_usuario_p text, ie_comitar_p text ) AS $body$
DECLARE

 
/*PROCEDURE QUE IRA OBTER TODAS AS GLOSAS E OCORRÊNCIAS DO USUÁRIO NOS ITEN SELECIONADOS E DESFAZER A LIBERAÇÃO*/
 
 
nr_seq_conta_mat_w		bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_glosa_w			bigint;
nr_seq_ocorrencia_benef_w	bigint;
nr_seq_partic_proc_w		bigint;
nr_seq_item_w			bigint;
nr_seq_ocorrencia_w		bigint;
nr_seq_conta_ww			bigint;
nr_seq_conta_mat_ww		bigint;
nr_seq_conta_proc_ww		bigint;
nr_seq_partic_proc_ww		bigint;
nr_seq_motivo_liberacao_w	bigint;
qt_glosa_w			bigint;
vl_glosa_w			double precision;

ds_obsevacao_anterior_w		varchar(4000);
nm_usuario_liberacao_w		varchar(15);
ie_situacao_w			varchar(1);
ie_status_w			varchar(1);
ie_tipo_motivo_w		varchar(1);

dt_liberacao_anterior_w		timestamp;

/*Obter as glosas do item.*/
 
C01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.nr_seq_glosa, 
		a.nr_seq_ocorrencia, 
		a.nr_seq_conta, 
		a.nr_seq_conta_mat, 
		a.nr_seq_conta_proc, 
		a.nr_seq_proc_partic 
	from	pls_analise_conta_item a 
	where	(((a.nr_seq_conta = nr_seq_conta_w) and (coalesce(a.nr_seq_conta_proc,0) = 0) and (coalesce(a.nr_seq_conta_mat,0) = 0) and (coalesce(a.nr_seq_proc_partic,0) = 0)) 
	or	 ((a.nr_seq_conta = nr_seq_conta_w) and (a.nr_seq_conta_proc = nr_seq_conta_proc_w) or (a.nr_seq_conta_mat = nr_seq_conta_mat_w) or (a.nr_seq_proc_partic = nr_seq_partic_proc_w))) 
	and	a.ie_status 			in ('A', 'N', 'L') 
	and	coalesce(a.nr_seq_discussao::text, '') = '' 
	and	coalesce(a.nr_seq_conta_pos_estab::text, '') = '' 
	and	a.nr_seq_analise 		= nr_seq_analise_p 
	and	exists (	SELECT	b.nr_sequencia 
				from	pls_analise_conta_item_log b 
				where	b.nr_seq_analise_item = a.nr_sequencia	);
				
 

BEGIN 
 
select	a.nr_seq_conta_mat, 
	a.nr_seq_conta_proc, 
	a.nr_seq_conta, 
	a.nr_seq_partic_proc	 
into STRICT	nr_seq_conta_mat_w, 
	nr_seq_conta_proc_w, 
	nr_seq_conta_w, 
	nr_seq_partic_proc_w	 
from	w_pls_resumo_conta a 
where	a.nr_sequencia	 = nr_seq_item_resumo_p;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_item_w,	 
	nr_seq_glosa_w, 
	nr_seq_ocorrencia_benef_w, 
	nr_seq_conta_ww, 
	nr_seq_conta_mat_ww, 
	nr_seq_conta_proc_ww, 
	nr_seq_partic_proc_ww;	
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	delete	FROM pls_analise_parecer_item 
	where	nr_seq_item = nr_seq_item_w;
	 
	begin 
	select	a.ie_status, 
		a.ie_situacao, 
		a.nr_seq_motivo_liberacao, 
		a.ds_obsevacao_anterior, 
		a.nm_usuario_liberacao, 
		a.dt_liberacao_anterior, 
		a.vl_glosa, 
		a.qt_glosa, 
		'' 
	into STRICT	ie_status_w, 
		ie_situacao_w, 
		nr_seq_motivo_liberacao_w, 
		ds_obsevacao_anterior_w, 
		nm_usuario_liberacao_w, 
		dt_liberacao_anterior_w, 
		vl_glosa_w, 
		qt_glosa_w, 
		ie_tipo_motivo_w 
	from	pls_analise_conta_item_log a 
	where	a.nr_seq_analise_item = nr_seq_item_w 
	and	coalesce(ie_tipo_log,'L') = 'L';
 
	insert into pls_analise_parecer_item(	ds_parecer, dt_atualizacao, dt_atualizacao_nrec, 
			ie_tipo_motivo, nm_usuario, nm_usuario_nrec, 
			nr_seq_item, nr_seq_motivo, nr_sequencia	) 
	values (	ds_obsevacao_anterior_w, clock_timestamp(), dt_liberacao_anterior_w, 
			'', nm_usuario_p, nm_usuario_liberacao_w, 
			nr_seq_item_w, nr_seq_motivo_liberacao_w, nextval('pls_analise_parecer_item_seq')	);
	exception 
	when others then	 
		ie_status_w			:= null;
		ie_situacao_w			:= null;
		nr_seq_motivo_liberacao_w	:= null;
		ds_obsevacao_anterior_w		:= null;
		nm_usuario_liberacao_w		:= null;
		dt_liberacao_anterior_w		:= null;
		vl_glosa_w			:= null;
		qt_glosa_w			:= null;
		ie_tipo_motivo_w		:= null;
	end;	
	 
	/*Apagar o log anterior*/
 
	delete	FROM pls_analise_conta_item_log 
	where	nr_seq_analise_item = 	nr_seq_item_w 
	and	coalesce(ie_tipo_log,'L') = 'L';
	 
	/*Atualizado a glosa / ocorrencia*/
 
	update	pls_analise_conta_item 
	set	ie_status 	= coalesce(ie_status_w,'P'), 
		ie_situacao	= coalesce(ie_situacao_w,'A'), 
		nm_usuario	= nm_usuario_p, 
		dt_atualizacao 	= clock_timestamp(), 
		ie_consistencia = 'N', 
		vl_glosa	= vl_glosa_w, 
		qt_glosa	= qt_glosa_w 
	where	nr_sequencia	= nr_seq_item_w 
	and	ie_status	<> 'I';	
	 
	CALL pls_analise_status_item(	nr_seq_conta_ww, nr_seq_conta_mat_ww, nr_seq_conta_proc_ww, 
					nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p, 
					nr_seq_partic_proc_ww	);
					 
	CALL pls_analise_status_pgto(	nr_seq_conta_ww, nr_seq_conta_mat_ww, nr_seq_conta_proc_ww, 
					nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p, 
					nr_seq_partic_proc_ww, null, null, 
					null	);
	 
	end;		
end loop;
close C01;
 
update	w_pls_resumo_conta 
set	nm_usuario_liberacao 	= '' 
where	nr_sequencia	 	= nr_seq_item_resumo_p;
 
if (coalesce(ie_comitar_p,'S') = 'S') then 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_desf_lib_item_analise ( nr_seq_item_resumo_p bigint, nr_seq_analise_p bigint, cd_estabelecimento_p bigint, nr_seq_grupo_atual_p bigint, nm_usuario_p text, ie_comitar_p text ) FROM PUBLIC;

