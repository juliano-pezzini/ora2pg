-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE laudo_atualiza_status_synapse ( nr_acesso_dicom_p text, ie_status_execucao_p text, cd_perfil_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
ie_status_execucao_w		varchar(3);
ie_status_proc_execucao_w	varchar(3);
nr_prescricao_w			bigint;
nr_seq_prescricao_w		bigint;
dt_cancelamento_w		timestamp;

nr_seq_propaci_w		bigint;
nr_seq_proc_interno_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
qt_procedimento_w		bigint;
cd_setor_atendimento_w		bigint;
dt_prev_execucao_w		timestamp;
cd_medico_exec_w		varchar(10);
ie_lado_w			varchar(15);
						
						 
procedure Atualizar_Status(	nr_prescricao_p		bigint, 
				nr_seq_prescricao_p	bigint, 
				ie_status_p		text) is 
				
;
BEGIN
 
 
 
if (ie_status_p > ie_status_execucao_w) and 
	((ie_status_execucao_p = 2) or (ie_status_execucao_w >= 20)) then	 
		 
	if (ie_status_p = 20) then	 
		select	coalesce(max(nr_sequencia),0) 
		into STRICT	nr_seq_propaci_w 
		from	procedimento_paciente 
		where	nr_prescricao		= nr_prescricao_w 
		and	nr_sequencia_prescricao	= nr_seq_prescricao_w;
	 
		if (nr_seq_propaci_w = 0) then 
			begin 
			 
			CALL Gerar_Proc_Pac_item_Prescr(	nr_prescricao_w, 
							nr_seq_prescricao_w, 
							null, 
							null, 
							nr_seq_proc_interno_w, 
							cd_procedimento_w, 
							ie_origem_proced_w, 
							qt_procedimento_w, 
							cd_setor_atendimento_w, 
							9, 
							dt_prev_execucao_w, 
							'Synapse', 
							cd_medico_exec_w, 
							null, 
							ie_lado_w, 
							null);
			end;
		end if;
	end if;	
		 
	/* ***** Atualiza status execução na prescrição ***** */
 
	update	prescr_procedimento a 
	set	a.ie_status_execucao 	= ie_status_p, 
		a.nm_usuario 	= 'Synapse' 
	where	a.nr_prescricao = nr_prescricao_p 
	and	a.nr_sequencia in (	SELECT	b.nr_sequencia_prescricao 
					from	procedimento_paciente b 
					where	b.nr_prescricao 	= a.nr_prescricao 
					and	b.nr_sequencia_prescricao = a.nr_sequencia 
					and	b.nr_laudo 		= nr_seq_prescricao_p);
 
	select 	max(ie_status_execucao) 
	into STRICT	ie_status_proc_execucao_w 
	from	prescr_procedimento a 
	where	a.nr_prescricao = nr_prescricao_p 
	and	a.nr_sequencia = nr_seq_prescricao_p;
 
	if (ie_status_proc_execucao_w <> ie_status_p) then 
 
		update	prescr_procedimento a 
		set	a.ie_status_execucao = ie_status_p, 
			a.nm_usuario 	= 'Synapse' 
		where	a.nr_prescricao = nr_prescricao_p 
		and	a.nr_sequencia in (	SELECT	b.nr_sequencia_prescricao 
						from	procedimento_paciente b 
						where	b.nr_prescricao = a.nr_prescricao 
						and 	b.nr_prescricao = nr_prescricao_p 
						and	b.nr_sequencia_prescricao = a.nr_sequencia 
						and	b.nr_sequencia_prescricao = nr_seq_prescricao_p);	
	end if;
end if;
 
end;
 
procedure Atualizar_Status_synapse(	nr_prescricao_p		number, 
					nr_seq_prescricao_p	number, 
				ie_status_p		varchar2) is 
				 
begin 
 
insert into prescr_proc_status_synapse(    
			DT_ATUALIZACAO ,     
			NM_USUARIO,       
			NR_PRESCRICAO,      
			NR_SEQ_PRESCRICAO,    
			IE_STATUS_EXEC) values (clock_timestamp(), 
				'Synapse', 
				nr_prescricao_p, 
				nr_seq_prescricao_p, 
				ie_status_execucao_p);	
 
 
end;
						 
begin 
 
if (nr_acesso_dicom_p IS NOT NULL AND nr_acesso_dicom_p::text <> '') then 
	 
	select	max(a.nr_prescricao), 
		max(a.nr_sequencia), 
		max(a.ie_status_execucao), 
		max(a.dt_cancelamento), 
		max(nr_seq_proc_interno), 
		max(cd_procedimento), 
		max(ie_origem_proced), 
		max(qt_procedimento), 
		max(cd_setor_atendimento), 
		max(dt_prev_execucao), 
		max(cd_medico_exec), 
		max(coalesce(ie_lado,'A')) 
	into STRICT	nr_prescricao_w, 
		nr_seq_prescricao_w, 
		ie_status_execucao_w, 
		dt_cancelamento_w,		 
		nr_seq_proc_interno_w, 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		qt_procedimento_w, 
		cd_setor_atendimento_w, 
		dt_prev_execucao_w, 
		cd_medico_exec_w, 
		ie_lado_w		 
	from	prescr_procedimento a 
	where	a.nr_acesso_dicom = nr_acesso_dicom_p;
 
	if ( ie_status_execucao_p = 2) then	 
		Atualizar_Status(nr_prescricao_w, nr_seq_prescricao_w, 20);		
	elsif ( ie_status_execucao_p in (5,12,14)) then	 
		if (coalesce(dt_cancelamento_w::text, '') = '') then		 
			CALL gerar_cancelamento_exame(nr_prescricao_w, nr_seq_prescricao_w, '', 'C', nm_usuario_p);		
		end if;		
	elsif ( ie_status_execucao_p = 6) then 
		Atualizar_Status(nr_prescricao_w, nr_seq_prescricao_w, 26);		
	elsif ( ie_status_execucao_p = 9) then 
		Atualizar_Status(nr_prescricao_w, nr_seq_prescricao_w, 40);
	elsif ( ie_status_execucao_p = 17) then 
		Atualizar_Status(nr_prescricao_w, nr_seq_prescricao_w, 90);
	end if;
 
	begin 
	Atualizar_Status_synapse(nr_prescricao_w,nr_seq_prescricao_w,ie_status_execucao_p);
	exception 
	when others then 
		null;
	end;
	 
	 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE laudo_atualiza_status_synapse ( nr_acesso_dicom_p text, ie_status_execucao_p text, cd_perfil_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

