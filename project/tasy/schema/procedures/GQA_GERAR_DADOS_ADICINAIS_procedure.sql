-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gqa_gerar_dados_adicinais ( nr_atendimento_p bigint, nr_seq_reg_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
cd_doenca_w		varchar(255);
cd_doenca_princ_w	varchar(255);
cd_doenca_cursor_w	varchar(10);
cd_doenca_cursor2_w	varchar(10);
qt_reg_w		bigint;
dt_admissao_uti_w	timestamp;
dt_alta_uti_w		timestamp;
dt_alta_w		timestamp;
dt_entrada_w		timestamp;
ie_obito_setor_w	varchar(5);
ie_obito_w		varchar(5);

 
c01 CURSOR FOR 
	SELECT	cd_doenca 
	from	diagnostico_doenca 
	where	nr_atendimento = nr_atendimento_p 
	and	coalesce(dt_inativacao::text, '') = '' 
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
	and	ie_tipo_diagnostico = 1;
	
c02 CURSOR FOR 
	SELECT	cd_doenca 
	from	diagnostico_doenca 
	where	nr_atendimento = nr_atendimento_p 
	and	coalesce(dt_inativacao::text, '') = '' 
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
	and	ie_tipo_diagnostico = 2 
	and	ie_classificacao_doenca = 'P';


BEGIN 
if (coalesce(nr_seq_reg_p,0) > 0) then 
 
	/*   	DIAGNÓSTICO DE ADMISSÃO (CID 10) 
		TUDO QUE FOR DO ATENDIMENTO QUE SEJA PRELIMINARES OU O PRIMEIRO DEFINITIVO*/
 
	select	count(*) 
	into STRICT	qt_reg_w 
	from	diagnostico_doenca 
	where	nr_atendimento = nr_atendimento_p 
	and	coalesce(dt_inativacao::text, '') = '' 
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
	and	ie_tipo_diagnostico = 2;
	 
	if (qt_reg_w > 0) then 
 
		open C01;
		loop 
		fetch C01 into	 
			cd_doenca_cursor_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			 
			if (coalesce(trim(both cd_doenca_w)::text, '') = '') then 
				cd_doenca_w := cd_doenca_cursor_w;
			else 
				cd_doenca_w := substr(cd_doenca_w || ', ' || cd_doenca_cursor_w,1,255);
			end if;
			 
			end;
		end loop;
		close C01;
		 
	else 
 
		select	min(cd_doenca) 
		into STRICT	cd_doenca_w 
		from	diagnostico_doenca 
		where	nr_atendimento = nr_atendimento_p 
		and	coalesce(dt_inativacao::text, '') = '' 
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
		and	ie_tipo_diagnostico = 1;
		 
	end if;
 
	/*	FIM DIAGNÓSTICO  */
 
 
	--	Admissão no hospital (data) 
	select	max(dt_entrada) 
	into STRICT	dt_entrada_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_p;
 
	-- 	Admissão na UTI (data),	Alta da UTI (data) 
	select	max(a.dt_entrada_unidade), 
		max(a.dt_saida_unidade) 
	into STRICT	dt_admissao_uti_w, 
		dt_alta_uti_w 
	from	atend_paciente_unidade a, 
		setor_atendimento b 
	where	a.cd_setor_atendimento = b.cd_setor_atendimento 
	and	b.cd_classif_setor in (3,4) 	-- Classificação UTI 3: Unidades de internação 4: UTI 
	and	a.nr_atendimento = nr_atendimento_p;
 
	--	Desfecho na UTI (vivo ou morto),	Alta hospitalar (data),	Desfecho hospitalar (vivo ou morto) 
	select	max(dt_alta) 
	into STRICT	dt_alta_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_p;
 
	select	max(CASE WHEN coalesce(b.ie_obito,'N')='N' THEN obter_desc_expressao(301787)  ELSE 'Morto' END ) 
	into STRICT	ie_obito_w 
	from	atendimento_paciente a, 
		motivo_alta b 
	where	a.cd_motivo_alta = b.cd_motivo_alta 
	and	a.nr_atendimento = nr_atendimento_p;
 
	if (trunc(dt_alta_w) = trunc(dt_alta_uti_w)) then 
		select	max(CASE WHEN coalesce(b.ie_obito,'N')='N' THEN obter_desc_expressao(301787)  ELSE 'Morto' END ) 
		into STRICT	ie_obito_setor_w 
		from	atendimento_paciente a, 
			motivo_alta b 
		where	a.cd_motivo_alta = b.cd_motivo_alta 
		and	a.nr_atendimento = nr_atendimento_p;
	elsif ((trim(both dt_alta_uti_w) IS NOT NULL AND (trim(both dt_alta_uti_w))::text <> '')) and (coalesce(trim(both dt_alta_w)::text, '') = '') then 
		ie_obito_setor_w := 'Vivo';
	else 
		ie_obito_setor_w := ie_obito_w;
	end if;
 
	--	Diagnóstico na alta hospitalar (CID 10) Tudo que for do atendimento que seja definitivo e principal 
	open C02;
	loop 
	fetch C02 into	 
		cd_doenca_cursor2_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		if (coalesce(trim(both cd_doenca_princ_w)::text, '') = '') then 
			cd_doenca_princ_w := cd_doenca_cursor2_w;
		else 
			cd_doenca_princ_w := substr(cd_doenca_princ_w || ', ' || cd_doenca_cursor2_w,1,255);
		end if;
		 
		end;
	end loop;
	close C02;
 
	--	Diagnóstico de admissão (CID 10) 
	if ((trim(both cd_doenca_w) IS NOT NULL AND (trim(both cd_doenca_w))::text <> '')) then 
		update	w_gestao_sepsis_sofa 
		set	ds_cid_admissao = cd_doenca_w 
		where	nr_sequencia = nr_seq_reg_p;
		 
		commit;
	end if;
	 
	-- 	Admissão na UTI (data), 
	if ((trim(both dt_entrada_w) IS NOT NULL AND (trim(both dt_entrada_w))::text <> '')) then 
		update	w_gestao_sepsis_sofa 
		set	dt_admissao_hosp = dt_entrada_w 
		where	nr_sequencia = nr_seq_reg_p;
		 
		commit;
	end if;
	 
	--	Admissão na UTI (data) 
	if ((trim(both dt_admissao_uti_w) IS NOT NULL AND (trim(both dt_admissao_uti_w))::text <> '')) then 
		update	w_gestao_sepsis_sofa 
		set	dt_admissao_uti = dt_admissao_uti_w 
		where	nr_sequencia = nr_seq_reg_p;
		 
		commit;
	end if;
	 
	--	Alta da UTI (data) 
	if ((trim(both dt_alta_uti_w) IS NOT NULL AND (trim(both dt_alta_uti_w))::text <> '')) then 
		update	w_gestao_sepsis_sofa 
		set	dt_alta_uti = dt_alta_uti_w 
		where	nr_sequencia = nr_seq_reg_p;
		 
		commit;
	end if;
	 
	--	Desfecho na UTI (vivo ou morto) 
	if ((trim(both ie_obito_setor_w) IS NOT NULL AND (trim(both ie_obito_setor_w))::text <> '')) then 
		update	w_gestao_sepsis_sofa 
		set	ie_desfecho_uti = ie_obito_setor_w 
		where	nr_sequencia = nr_seq_reg_p;
		 
		commit;
	end if;
	 
	--	Alta hospitalar (data) 
	if ((trim(both dt_alta_w) IS NOT NULL AND (trim(both dt_alta_w))::text <> '')) then 
		update	w_gestao_sepsis_sofa 
		set	dt_alta_hosp = dt_alta_w 
		where	nr_sequencia = nr_seq_reg_p;
		 
		commit;
	end if;
	 
	--	Desfecho hospitalar (vivo ou morto) 
	if ((trim(both ie_obito_w) IS NOT NULL AND (trim(both ie_obito_w))::text <> '')) then 
		update	w_gestao_sepsis_sofa 
		set	ie_desfecho_hosp = ie_obito_w 
		where	nr_sequencia = nr_seq_reg_p;
		 
		commit;
	end if;
	 
	--	Diagnóstico na alta hospitalar (CID 10) 
	if ((trim(both cd_doenca_princ_w) IS NOT NULL AND (trim(both cd_doenca_princ_w))::text <> '')) then 
		update	w_gestao_sepsis_sofa 
		set	ds_cid_alta = cd_doenca_princ_w 
		where	nr_sequencia = nr_seq_reg_p;
		 
		commit;
	end if;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gqa_gerar_dados_adicinais ( nr_atendimento_p bigint, nr_seq_reg_p bigint, nm_usuario_p text) FROM PUBLIC;

