-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_vinculo_atend_agenda ( nr_seq_agenda_p bigint, nr_atendimento_p bigint, ds_questiona_isolamento_p INOUT text, ds_questiona_convenio_p INOUT text) AS $body$
DECLARE

															
cd_estabelecimento_w			integer;
cd_perfil_w						integer;
nm_usuario_w					varchar(15);
ie_vinc_atend_alta_w			varchar(15);
ie_tipo_atend_tiss_w			varchar(15);
ie_existe_w						varchar(15);
ie_possui_alta_w				varchar(15);
ie_permite_w					varchar(15);
ie_forma_vinc_atend_w		varchar(15);
ie_consiste_isolamento_w 	varchar(15);
ie_pac_isolamento_w			varchar(15);
ie_consiste_conv_agenda_w	varchar(15);
cd_convenio_atend_w			integer;
cd_convenio_agenda_w			integer;


BEGIN

cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;
cd_perfil_w				:= wheb_usuario_pck.get_cd_perfil;
nm_usuario_w			:= wheb_usuario_pck.get_nm_usuario;

ie_vinc_atend_alta_w := Obter_Param_Usuario(871, 37, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_vinc_atend_alta_w);
ie_forma_vinc_atend_w := Obter_Param_Usuario(871, 39, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_forma_vinc_atend_w);
ie_consiste_conv_agenda_w := Obter_Param_Usuario(871, 414, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_consiste_conv_agenda_w);
ie_consiste_isolamento_w := Obter_Param_Usuario(871, 458, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_consiste_isolamento_w);
ie_tipo_atend_tiss_w := Obter_Param_Usuario(871, 809, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_tipo_atend_tiss_w);

select	coalesce(max('S'),'N')
into STRICT		ie_existe_w
from    	agenda_paciente
where    (nr_atendimento IS NOT NULL AND nr_atendimento::text <> '')
and      nr_sequencia = nr_seq_agenda_p;

if (ie_existe_w = 'S') then
	CALL exibir_erro_abortar(Wheb_mensagem_pck.get_texto(718279),null);
end if;	

CALL consiste_se_vincula_atend(nr_seq_agenda_p,nr_atendimento_p);

select	max(cd_convenio)
into STRICT		cd_convenio_agenda_w
from		agenda_paciente
where		nr_sequencia = nr_seq_agenda_p;

if (ie_forma_vinc_atend_w <> 1) then
	select	coalesce(max('S'),'N')
	into STRICT		ie_existe_w
	from 		atendimento_paciente
	where 	nr_atendimento = nr_atendimento_p;

	if (ie_existe_w = 'N') then
		CALL exibir_erro_abortar(Wheb_mensagem_pck.get_texto(236933),null);
	end if;

	if (ie_vinc_atend_alta_w = 'N') then
		select	max(substr(obter_se_atendimento_alta(nr_atendimento_p),1,1))
		into STRICT		ie_possui_alta_w
		;
		
		if (ie_possui_alta_w = 'S') then
			CALL exibir_erro_abortar(Wheb_mensagem_pck.get_texto(84706),null);
		end if;
	end if;	

	if (ie_tipo_atend_tiss_w IS NOT NULL AND ie_tipo_atend_tiss_w::text <> '') then
		select	coalesce(max('S'),'N')
		into STRICT		ie_permite_w
		from		atendimento_paciente
		where		nr_atendimento = nr_atendimento_p
		and		obter_se_contido(ie_tipo_atend_tiss,ie_tipo_atend_tiss_w) = 'S';
		
		if (ie_permite_w = 'N') then
			CALL exibir_erro_abortar(Wheb_mensagem_pck.get_texto(288359),null);
		end if;
	end if;
else
	if (ie_consiste_isolamento_w = 'S') or (ie_consiste_isolamento_w = 'A') then
		select 	max(obter_se_pac_isolamento(nr_atendimento_p))
		into STRICT		ie_pac_isolamento_w
		;
		
		if (ie_pac_isolamento_w = 'S') then
			ds_questiona_isolamento_p	:= Wheb_mensagem_pck.get_texto(84838,null);
		end if;
	end if;
	
	if (ie_consiste_conv_agenda_w = 'S') then
		if (coalesce(pkg_i18n.get_user_locale,'pt_BR') in ('de_DE', 'de_AT')) then
			select	obter_convenio_menor_prio(nr_atendimento_p)
			into STRICT	cd_convenio_atend_w
			;
		else
			select	coalesce(max(Obter_Convenio_Atendimento(nr_atendimento_p)),0)
			into STRICT		cd_convenio_atend_w
			;
		end if;
		
		if (cd_convenio_atend_w IS NOT NULL AND cd_convenio_atend_w::text <> '') and (coalesce(cd_convenio_agenda_w::text, '') = '' or cd_convenio_atend_w <> cd_convenio_agenda_w) then
			ds_questiona_convenio_p := Wheb_mensagem_pck.get_texto(84860,null);
		end if;
	end if;	
end if;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_vinculo_atend_agenda ( nr_seq_agenda_p bigint, nr_atendimento_p bigint, ds_questiona_isolamento_p INOUT text, ds_questiona_convenio_p INOUT text) FROM PUBLIC;

