-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rep_copia_solucao ( nr_prescricao_orig_p bigint, nr_prescricao_p bigint, nr_seq_regra_p bigint, ie_copia_agora_p text, dt_prescricao_p timestamp, ie_nao_padronizado_p text, ie_copia_justificativa_p text, nr_seq_material_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_copia_pca_w						varchar(1);
ie_copia_se_necessario_w			varchar(1);
ie_copia_acm_w						varchar(1);
ie_copia_esquema_alternado_w		varchar(1);
ie_copiar_w							varchar(20);
cd_estabelecimento_w				smallint;
nr_seq_material_w					bigint;
QT_TEMSOL_W							double precision;
qt_itens_w							bigint;
nr_seq_solucao_filtro_w				bigint;
ie_via_aplicacao_w					varchar(5);
ie_tipo_dosagem_w					varchar(3);
ie_recalcular_hor_sol_w				varchar(3);
ie_acm_w							varchar(1);
ie_loop_w							varchar(1);
ie_esquema_alternado_w				varchar(1);
ie_calc_aut_w						varchar(1);
VarCalcularEtapaSolucao_w			varchar(10);
VarCalculaVolumeVelocidade_w		varchar(10);
qt_volume_componentes_ml_w			double precision;
VarCalculaTempoSolucao_w			varchar(10);
ie_hemodialise_w					varchar(1);
qt_velocidade_infusao_ml_w			double precision;
ds_erro_w							varchar(5000);
ie_tipo_solucao_w					varchar(15);
ds_horarios2_w						varchar(255);
ie_pos_dialisador_w					varchar(1);
ie_agora_w							varchar(1);
ie_arredondar_etapa_w				varchar(1);
ie_unid_vel_inf_w					varchar(3);
VarHorarioSolucao_w					varchar(3);
ie_etapa_especial_w					varchar(3);
ie_apap_w							varchar(15);
ie_solucao_pca_w					varchar(1);
ie_tipo_analgesia_w					varchar(15);
ie_pca_modo_prog_w					varchar(15);
ie_se_necessario_w					varchar(1);
cd_intervalo_w						varchar(7);
cd_unidade_medida_w					varchar(30);
ds_solucao_w						varchar(100);
ds_horarios_w						varchar(2000);
ds_orientacao_w						varchar(255);
qt_dosagem_w						double precision;
qt_solucao_total_w					double precision;
qt_tempo_aplicacao_w	 			double precision;
qt_volume_w							double precision;
qt_hora_fase_w						double precision;
qt_temp_solucao_w					real;
qt_dose_ataque_w					double precision;
qt_vol_infusao_pca_w				double precision;
qt_bolus_pca_w						double precision;
qt_intervalo_bloqueio_w				bigint;
qt_limite_quatro_hora_w				double precision;
qt_dose_inicial_pca_w				double precision;
nr_etapas_w							integer;
qt_operacao_orig_w					integer;
nr_agrupamento_w					bigint;
nr_seq_protocolo_w					bigint;
nr_seq_solucao_w					bigint;
qt_volsolu_w						double precision;
hr_prim_horario_w					varchar(5);
hr_prim_horario_orig_w				varchar(5);
ie_operacao_w						varchar(5);
qt_operacao_w						double precision;
dt_prescricao_www					timestamp;
dt_inicio_w							timestamp;
dt_final_w							timestamp;
ie_prim_horario_setor_w				varchar(10);
hr_setor_w							varchar(10);
cd_setor_atendimento_w				bigint;
nr_atendimento_w					bigint;
nr_sequencia_w						bigint;
ie_origem_inf_w						varchar(1);
cd_material_w						bigint;
qt_dose_w							double precision;
qt_unitaria_w						double precision;
qt_material_w						double precision;
ds_observacao_w						varchar(4000);
ds_observacao_enf_w					varchar(2000);
ie_cobra_paciente_w					varchar(1);
cd_motivo_baixa_w					bigint;
dt_baixa_w							timestamp;
ie_utiliza_kit_w					varchar(5);
cd_unidade_medida_dose_w		 	varchar(50);
qt_conversao_dose_w					double precision;
nr_ocorrencia_w						double precision;
qt_total_dispensar_w				double precision;
cd_fornec_consignado_w				varchar(255);
nr_sequencia_proc_w					bigint;
qt_solucao_w						double precision;
ds_dose_diferenciada_w				varchar(255);
ie_medicacao_paciente_w				varchar(2);
nr_sequencia_diluicao_w				bigint;
nr_sequencia_dieta_w				bigint;
ie_agrupador_w						smallint;
nr_dia_util_w						bigint;
ie_situacao_w						varchar(5);
qt_min_aplicacao_w					bigint;
ie_bomba_infusao_w					varchar(5);
ie_aplic_bolus_w					varchar(5);
ie_aplic_lenta_w					varchar(5);
ie_objetivo_w						varchar(5);
cd_topografia_cih_w					bigint;
ie_origem_infeccao_w				varchar(5);
cd_amostra_cih_w					bigint;
cd_microorganismo_cih_w				bigint;
nr_horas_validade_w					integer;
nr_horas_validade_orig_w			integer;
ie_uso_antimicrobiano_w				varchar(5);
cd_protocolo_w						bigint;
nr_seq_mat_protocolo_w				bigint;
qt_hora_aplicacao_w					bigint;
QT_VEL_INFUSAO_w					double precision;
ds_justificativa_w					varchar(2000);
ie_sem_aprazamento_w				varchar(5);
ie_indicacao_w						varchar(5);
dt_proxima_dose_w					timestamp;
qt_total_dias_lib_w					integer;
nr_seq_substituto_w					integer;
ie_lado_w							varchar(5);
dt_inicio_medic_w					timestamp;
qt_dia_prim_hor_w					bigint;
ie_regra_disp_w						varchar(5);
qt_vol_adic_reconst_w				double precision;
qt_hora_intervalo_w					smallint;
qt_min_intervalo_w					integer;
dt_inicio_prescr_w					timestamp;
nr_seq_anterior_w					bigint;
ie_copia_valid_igual_w				varchar(1);
dt_validade_origem_w				timestamp;
dt_validade_nova_w					timestamp;
nr_seq_disp_w						bigint;
nr_seq_regra_copia_w				bigint;
ie_recalc_total_w					varchar(5);
ie_horario_rep_ant_w				varchar(1);
ie_manter_intervalo_w				varchar(1);
ie_limpa_prim_hor_w					varchar(1);
ie_mesmo_zerado_w					varchar(1);
dt_validade_prescr_w				timestamp;
dt_prim_hor_sol_w					timestamp;
qt_volume_corrigido_w				double precision;
ds_observacao_far_w					varchar(2000);
VarIeGeracaoEtapaACM_w				varchar(1);
ie_prim_hor_sol_w					varchar(10);
ie_prim_hor_copia_w					varchar(1);
dt_primeiro_horario_w				timestamp;
dt_primeiro_horario_orig_w			prescr_medica.dt_primeiro_horario%type;
cd_intervalo_soluc_w				prescr_solucao.cd_intervalo%type;
dt_prim_hor_sol_ww					timestamp;

C01 CURSOR FOR
SELECT	nr_seq_solucao,
		nr_seq_solucao,
		ie_via_aplicacao,
		cd_intervalo,
		cd_unidade_medida,
		ie_tipo_dosagem,
		qt_dosagem,
		qt_solucao_total,
		qt_tempo_aplicacao,
		ds_solucao,
		CASE WHEN coalesce(ie_acm,'N')='S' THEN qt_volume  ELSE dividir(qt_solucao_total,nr_etapas) END ,
		nr_etapas,
		ds_horarios,
		ie_bomba_infusao,
		nr_agrupamento,
		ie_esquema_alternado,
		coalesce(ie_calc_aut,'N'),
		coalesce(ie_acm,'N'),
		hr_prim_horario,
		qt_hora_fase,
		ds_orientacao,
		ie_hemodialise,
		ie_tipo_solucao,
		ie_pos_dialisador,
		nr_seq_protocolo,
		ie_unid_vel_inf,
		qt_temp_solucao,
		ie_apap,
		qt_dose_ataque,
		ie_solucao_pca,
		ie_tipo_analgesia,
		ie_pca_modo_prog,
		qt_vol_infusao_pca,
		qt_bolus_pca,
		qt_intervalo_bloqueio,
		qt_limite_quatro_hora,
		qt_dose_inicial_pca,
		coalesce(ie_se_necessario,'N'),
		ie_urgencia,
		ie_etapa_especial
from	prescr_solucao
where	((ie_copia_agora_p = 'S') or (ie_urgencia = 'N'))
and		coalesce(ie_suspenso,'N') <> 'S'
and		coalesce(ie_hemodialise,'N') = 'N'
and		nr_prescricao = nr_prescricao_orig_p;

C02 CURSOR FOR
SELECT	coalesce(ie_copiar,'N'),
		coalesce(ie_horario_rep_ant,'N'),
		nr_sequencia,
		coalesce(ie_manter_intervalo, 'N'),
		coalesce(ie_limpa_prim_hor, 'N')
from	rep_regra_copia_crit
where	((coalesce(ie_esquema_alternado, 'S') = 'S') or (coalesce(ie_esquema_alternado_w, 'N') =  coalesce(ie_esquema_alternado, 'S')))
and		((coalesce(ie_pca, 'S') = 'S') or (coalesce(ie_solucao_pca_w, 'N') =  coalesce(ie_pca, 'S')))
and		((coalesce(ie_se_necessario, 'S') = 'S') or (coalesce(ie_se_necessario_w, 'N') =  coalesce(ie_se_necessario, 'S')))
and		((coalesce(ie_ACM, 'S') = 'S') or (coalesce(ie_acm_w, 'N') =  coalesce(ie_ACM, 'S')))
and		((coalesce(ie_agora,'S') = 'S') or (coalesce(ie_agora_w,'N') =  coalesce(ie_agora,'S')))
and		ie_tipo_item	= 'SOL'
and		nr_seq_regra	= nr_seq_regra_p
order by coalesce(nr_seq_apres, 99);

c03 CURSOR FOR
SELECT  a.nr_sequencia,
		a.ie_origem_inf,
		a.cd_material,
		a.cd_unidade_medida,
		a.qt_dose,
		a.qt_unitaria,
		a.qt_material,
		a.cd_intervalo,
		a.ds_horarios,
		a.ds_observacao,
		a.ds_observacao_enf,
		a.ie_via_aplicacao,
		a.nr_agrupamento,
		coalesce(a.ie_cobra_paciente,'S'),
		CASE WHEN coalesce(a.ie_regra_disp,'X')='D' THEN  a.cd_motivo_baixa  ELSE CASE WHEN coalesce(a.ie_cobra_paciente,'S')='S' THEN  0  ELSE a.cd_motivo_baixa END  END ,
		CASE WHEN coalesce(a.ie_regra_disp,'X')='D' THEN  clock_timestamp()  ELSE CASE WHEN coalesce(a.ie_cobra_paciente,'S')='S' THEN  null  ELSE clock_timestamp() END  END ,
		a.ie_utiliza_kit,
		a.cd_unidade_medida_dose,
		a.qt_conversao_dose,
		coalesce(nr_etapas_w,a.nr_ocorrencia),
		a.qt_total_dispensar,
		a.cd_fornec_consignado,
		CASE WHEN coalesce(a.nr_sequencia_proc::text, '') = '' THEN  null  ELSE a.nr_sequencia_proc END ,
		a.qt_solucao,
		a.ds_dose_diferenciada,
		a.ie_medicacao_paciente,
		CASE WHEN coalesce(a.nr_sequencia_diluicao::text, '') = '' THEN  null  ELSE a.nr_sequencia_diluicao END ,
		a.HR_PRIM_HORARIO,
		CASE WHEN coalesce(a.nr_sequencia_dieta::text, '') = '' THEN null  ELSE a.nr_sequencia_dieta END ,
		a.ie_agrupador,
		a.nr_dia_util,
		CASE WHEN b.ie_situacao='A' THEN  'N'  ELSE 'S' END ,
		a.ie_se_necessario,
		a.qt_min_aplicacao,
		a.ie_bomba_infusao,
		coalesce(a.IE_APLIC_BOLUS,'N'),
		coalesce(a.IE_APLIC_LENTA,'N'),
		coalesce(a.ie_acm,'N'),
		a.ie_objetivo,
		a.cd_topografia_cih,
		a.ie_origem_infeccao,
		a.cd_amostra_cih,
		a.cd_microorganismo_cih,
		coalesce(a.ie_uso_antimicrobiano,'N'),
		a.cd_protocolo,
		a.nr_seq_protocolo,
		a.nr_seq_mat_protocolo,
		a.qt_hora_aplicacao,
		A.QT_VEL_INFUSAO,
		CASE WHEN ie_copia_justificativa_p='S' THEN a.ds_justificativa  ELSE '' END ,
		a.ie_sem_aprazamento,
		a.ie_indicacao,
		a.dt_proxima_dose,
		a.qt_total_dias_lib,
		a.nr_seq_substituto,
		a.ie_lado,
		a.dt_inicio_medic,
		a.qt_dia_prim_hor,
		CASE WHEN coalesce(a.ie_regra_disp,'X')='D' THEN  a.ie_regra_disp  ELSE null END ,
		a.qt_vol_adic_reconst,
		a.qt_hora_intervalo,
		a.qt_min_intervalo,
		a.qt_volume_corrigido,
		a.ds_observacao_far
From	Material b,
		Prescr_Material a
where	coalesce(a.ie_suspenso,'N') 		<> 'S'
and		a.ie_origem_inf		<> 'K'
and		((a.nr_sequencia <> a.nr_sequencia_diluicao) or (coalesce(a.nr_sequencia_diluicao::text, '') = ''))
and		((coalesce(substr(obter_se_material_padronizado(cd_estabelecimento_w, b.cd_material),1,1) ,'S') = 'S') or (ie_nao_padronizado_p = 'S'))
and		((coalesce(a.NR_SEQUENCIA_DILUICAO::text, '') = '') or
		a.NR_SEQUENCIA_DILUICAO not in (
			SELECT	x.nr_sequencia
			from	material y,
					prescr_material x
			where	y.cd_material = x.cd_material
			and		((y.ie_situacao <> 'A') or
					 ((ie_nao_padronizado_p = 'N') and (coalesce(substr(obter_se_material_padronizado(cd_estabelecimento_w, y.cd_material),1,1) ,'S') = 'N')))
			and		x.nr_prescricao = nr_prescricao_orig_p))
and		not exists (	select	nr_prescricao
					from	prescr_dieta b
					where	b.ie_suspenso		= 'S'
					and		a.nr_sequencia_dieta = b.nr_sequencia
					and		a.nr_prescricao	= b.nr_prescricao)
and		not exists (	select	nr_prescricao
					from	prescr_solucao c
					where	c.ie_suspenso		= 'S'
					and		a.nr_sequencia_solucao = c.nr_seq_solucao
					and		a.nr_prescricao	= c.nr_prescricao)
and		not exists (	select	nr_prescricao
					from	prescr_procedimento d
					where	d.ie_suspenso		= 'S'
					and		a.nr_sequencia_proc	= d.nr_sequencia
					and		a.nr_prescricao	= d.nr_prescricao)
and		not exists (	select	nr_prescricao
					from	prescr_material e
					where	e.ie_suspenso		= 'S'
					and		a.nr_sequencia_diluicao = e.nr_sequencia
					and		a.nr_prescricao	= e.nr_prescricao)
and		b.ie_situacao		= 'A'
and		a.cd_material 	= b.cd_material
and		((ie_copia_agora_p = 'S') or (a.ie_urgencia = 'N'))
and		a.ie_agrupador not in (10,11)
and		a.ie_agrupador = 4
and		a.nr_sequencia_solucao = nr_seq_solucao_filtro_w
and		a.nr_prescricao 	= nr_prescricao_orig_p;


BEGIN

select	coalesce(max(cd_estabelecimento),1),
		max(cd_setor_atendimento),
		max(nr_atendimento),
		max(nr_horas_validade)
into STRICT	cd_estabelecimento_w,
		cd_setor_atendimento_w,
		nr_atendimento_w,
		nr_horas_validade_orig_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_orig_p;

select	max(dt_inicio_prescr),
		max(dt_validade_prescr),
		coalesce(max(nr_horas_validade),24)
into STRICT	dt_inicio_prescr_w,
		dt_validade_prescr_w,
		nr_horas_validade_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

ie_recalcular_hor_sol_w := Obter_Param_Usuario(8030, 64, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_recalcular_hor_sol_w);

VarIeGeracaoEtapaACM_w := Obter_Param_Usuario(924, 226, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, VarIeGeracaoEtapaACM_w);
VarHorarioSolucao_w := Obter_Param_Usuario(924, 284, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, VarHorarioSolucao_w);
ie_recalc_total_w := Obter_Param_Usuario(924, 322, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_recalc_total_w);
VarCalculaTempoSolucao_w := Obter_Param_Usuario(924, 394, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, VarCalculaTempoSolucao_w);
VarCalcularEtapaSolucao_w := Obter_Param_Usuario(924, 461, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, VarCalcularEtapaSolucao_w);
VarCalculaVolumeVelocidade_w := Obter_Param_Usuario(924, 636, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, VarCalculaVolumeVelocidade_w);
ie_arredondar_etapa_w := Obter_Param_Usuario(924, 742, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_arredondar_etapa_w);
ie_prim_hor_sol_w := Obter_Param_Usuario(924, 332, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_prim_hor_sol_w);
ie_prim_hor_copia_w := Obter_Param_Usuario(924, 790, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_prim_hor_copia_w);

open C01;
loop
fetch C01 into
	nr_seq_solucao_w,
	nr_seq_solucao_filtro_w,
	ie_via_aplicacao_w,
	cd_intervalo_w,
	cd_unidade_medida_w,
	ie_tipo_dosagem_w,
	qt_dosagem_w,
	qt_solucao_total_w,
	qt_tempo_aplicacao_w,
	ds_solucao_w,
	qt_volume_w,
	nr_etapas_w,
	ds_horarios_w,
	ie_bomba_infusao_w,
	nr_agrupamento_w,
	ie_esquema_alternado_w,
	ie_calc_aut_w,
	ie_acm_w,
	hr_prim_horario_w,
	qt_hora_fase_w,
	ds_orientacao_w,
	ie_hemodialise_w,
	ie_tipo_solucao_w,
	ie_pos_dialisador_w,
	nr_seq_protocolo_w,
	ie_unid_vel_inf_w,
	qt_temp_solucao_w,
	ie_apap_w,
	qt_dose_ataque_w,
	ie_solucao_pca_w,
	ie_tipo_analgesia_w,
	ie_pca_modo_prog_w,
	qt_vol_infusao_pca_w,
	qt_bolus_pca_W,
	qt_intervalo_bloqueio_w,
	qt_limite_quatro_hora_w,
	qt_dose_inicial_pca_w,
	ie_se_necessario_w,
	ie_agora_w,
	ie_etapa_especial_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_copiar_w := 'N';
	cd_intervalo_soluc_w := cd_intervalo_w;
	dt_prim_hor_sol_ww	 := null;

	open C02;
	loop
	fetch C02 into
		ie_copiar_w,
		ie_horario_rep_ant_w,
		nr_seq_regra_copia_w,
		ie_manter_intervalo_w,
		ie_limpa_prim_hor_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
	end loop;
	close C02;


	if (ie_copiar_w = 'S') then

		hr_prim_horario_orig_w	:= hr_prim_horario_w;
		qt_operacao_orig_w	:= null;

		if (ie_recalcular_hor_sol_w = 'S') and (ie_acm_w = 'N') then
			hr_prim_horario_w := to_char(dt_inicio_prescr_w,'hh24:mi');
		end if;

		if (coalesce(ie_manter_intervalo_w,'N') = 'S') then
			qt_operacao_orig_w	:= dividir(coalesce(qt_tempo_aplicacao_w, coalesce(nr_horas_validade_orig_w, 24)), coalesce(nr_etapas_w,0));
		end if;

		if (coalesce(ie_limpa_prim_hor_w, 'N') = 'S') then
			ie_manter_intervalo_w := 'N';
			ie_horario_rep_ant_w := 'N';
			hr_prim_horario_w := null;
			ds_horarios_w := null;
		end if;

		if (ie_recalc_total_w <> 'N') then
			qt_tempo_aplicacao_w	:= nr_horas_validade_w;
		end if;

		if (coalesce(ie_copiar_w,'N')	= 'S') then
			--Busca a próxima sequência
			ie_loop_w	:= 'S';
			nr_seq_solucao_w	:= 1;
			while(ie_loop_w = 'S') loop
				select	count(*)
				into STRICT	qt_itens_w
				from	prescr_solucao
				where	nr_prescricao	= nr_prescricao_p
				and	nr_seq_solucao	= nr_seq_solucao_w;
				if (qt_itens_w	= 0) then
					ie_loop_w	:= 'N';
				else
					nr_seq_solucao_w	:= nr_seq_solucao_w + 1;
				end if;
			end loop;

			--Busca o próximo agrupamento
			ie_loop_w	:= 'S';
			nr_agrupamento_w	:= 1;
			while(ie_loop_w = 'S') loop
				select	count(*)
				into STRICT	qt_itens_w
				from	prescr_solucao
				where	nr_prescricao	= nr_prescricao_p
				and	nr_agrupamento	= nr_agrupamento_w;
				if (qt_itens_w	= 0) then
					ie_loop_w	:= 'N';
				else
					nr_agrupamento_w	:= nr_agrupamento_w + 1;
				end if;
			end loop;
		end if;

		Insert into Prescr_Solucao(
				nr_prescricao,
				nr_seq_solucao,
				ie_via_aplicacao,
				cd_intervalo,
				dt_atualizacao,
				nm_usuario,
				cd_unidade_medida,
				ie_tipo_dosagem,
				qt_dosagem,
				qt_solucao_total,
				qt_tempo_aplicacao,
				ds_solucao,
				qt_volume,
				nr_etapas,
				ds_horarios,
				ie_bomba_infusao,
				ie_suspenso,
				nr_agrupamento,
				ie_esquema_alternado,
				ie_calc_aut,
				ie_acm,
				hr_prim_horario,
				qt_hora_fase,
				ie_urgencia,
				ds_orientacao,
				ie_hemodialise,
				ie_tipo_solucao,
				ie_pos_dialisador,
				nr_seq_protocolo,
				ie_unid_vel_inf,
				qt_temp_solucao,
				ie_apap,
				qt_dose_ataque,
				ie_solucao_pca,
				ie_tipo_analgesia,
				ie_pca_modo_prog,
				qt_vol_infusao_pca,
				qt_bolus_pca,
				qt_intervalo_bloqueio,
				qt_limite_quatro_hora,
				qt_dose_inicial_pca,
				ie_etapa_especial,
				ie_se_necessario,
				nr_seq_anterior,
				nr_prescricao_original,
				nr_prescricao_anterior,
				nr_sequencia_anterior)
			values (
				nr_prescricao_p,
				nr_seq_solucao_w,
				ie_via_aplicacao_w,
				cd_intervalo_w,
				dt_prescricao_p,
				nm_usuario_p,
				cd_unidade_medida_w,
				ie_tipo_dosagem_w,
				qt_dosagem_w,
				qt_solucao_total_w,
				qt_tempo_aplicacao_w,
				ds_solucao_w,
				qt_volume_w,
				nr_etapas_w,
				ds_horarios_w,
				ie_bomba_infusao_w,
				'N',
				nr_agrupamento_w,
				ie_esquema_alternado_w,
				ie_calc_aut_w,
				ie_acm_w,
				hr_prim_horario_w,
				qt_hora_fase_w,
				'N',
				ds_orientacao_w,
				ie_hemodialise_w,
				ie_tipo_solucao_w,
				ie_pos_dialisador_w,
				nr_seq_protocolo_w,
				ie_unid_vel_inf_w,
				qt_temp_solucao_w,
				ie_apap_w,
				qt_dose_ataque_w,
				ie_solucao_pca_w,
				ie_tipo_analgesia_w,
				ie_pca_modo_prog_w,
				qt_vol_infusao_pca_w,
				qt_bolus_pca_w,
				qt_intervalo_bloqueio_w,
				qt_limite_quatro_hora_w,
				qt_dose_inicial_pca_w,
				'N',
				ie_se_necessario_w,
				nr_seq_solucao_filtro_w,
				nr_prescricao_orig_p,
				nr_prescricao_orig_p,
				nr_seq_solucao_filtro_w);
			commit;

			if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
				dt_prim_hor_sol_ww := To_date(to_char(dt_inicio_prescr_w,'dd/mm/yyyy ')||hr_prim_horario_w, 'dd/mm/yyyy hh24:mi');
			else
				dt_prim_hor_sol_ww := null;
			end if;

			insert into prescr_solucao_esquema(
					nr_sequencia,
					nr_prescricao,
					nr_seq_solucao,
					dt_atualizacao,
					nm_usuario,
					qt_volume,
					qt_dosagem,
					ds_horario)
			SELECT	nextval('prescr_solucao_esquema_seq'),
					nr_prescricao_p,
					nr_seq_solucao_w,
					clock_timestamp(),
					nm_usuario_p,
					b.qt_volume,
					b.qt_dosagem,
					b.ds_horario
			from	prescr_solucao_esquema b,
					prescr_solucao a
			where	((ie_copia_agora_p = 'S') or (a.ie_urgencia = 'N'))
			and		coalesce(a.ie_suspenso,'N')	<> 'S'
			and		a.nr_seq_solucao = b.nr_seq_solucao
			and		a.nr_prescricao	= b.nr_prescricao
			and		a.nr_seq_solucao = nr_seq_solucao_w
			and		a.nr_prescricao = nr_prescricao_orig_p;

			commit;

			nr_seq_material_w	:= 1;


			if	((ie_manter_intervalo_w = 'S') and
				 ((cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') or (qt_operacao_orig_w IS NOT NULL AND qt_operacao_orig_w::text <> ''))) then
				ie_manter_intervalo_w	:=	'S';
			else
				ie_manter_intervalo_w	:= 'N';
			end if;

		if (ie_limpa_prim_hor_w = 'N') then
			if	((ie_horario_rep_ant_w = 'S') or (ie_manter_intervalo_w = 'S')) then

				select	max(ie_operacao),
						max(qt_operacao)
				into STRICT	ie_operacao_w,
						qt_operacao_w
				from	intervalo_prescricao
				where	cd_intervalo	= cd_intervalo_w;

				if (ie_operacao_w in ('F','V')) or (coalesce(hr_prim_horario_w::text, '') = '') then
					hr_prim_horario_w	:= obter_primeiro_horario(cd_intervalo_w,nr_prescricao_orig_p,0,null);
				end if;

				if (ie_horario_rep_ant_w = 'S') and (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
					dt_prim_hor_sol_w := To_date(to_char(dt_inicio_prescr_w,'dd/mm/yyyy ')||hr_prim_horario_w, 'dd/mm/yyyy hh24:mi');
					if (ie_recalcular_hor_sol_w = 'S') and (not(obter_se_lib_prescr_vig_disp(dt_inicio_prescr_w, dt_validade_prescr_w, to_date(to_char(clock_timestamp(), 'dd/mm/yyyy ')||hr_prim_horario_w, 'dd/mm/yyyy hh24:mi')) = 'S')) then
						dt_prim_hor_sol_w := dt_inicio_prescr_w;
					elsif (dt_prim_hor_sol_w < dt_inicio_prescr_w )then
						dt_prim_hor_sol_w := dt_prim_hor_sol_w +1;
					end if;
				end if;

				if (ie_manter_intervalo_w = 'S') then
					dt_inicio_w := dt_inicio_prescr_w - 5;
					dt_final_w := clock_timestamp() + interval '5 days';

					if (coalesce(cd_intervalo_w::text, '') = '') then
						qt_operacao_w	:= qt_operacao_orig_w;
					end if;

					if (ie_operacao_w	= 'X') then
						dt_prim_hor_sol_w := dt_inicio_prescr_w - qt_operacao_w / 1;
					else
						dt_prim_hor_sol_w := dt_inicio_prescr_w - qt_operacao_w / 24;
					end if;

					select	max(d.dt_horario)
					into STRICT	dt_prim_hor_sol_w
					from	prescr_mat_hor d,
							prescr_material c,
							prescr_solucao b,
							prescr_medica a
					where	coalesce(d.ie_situacao,'A') = 'A'
					and		coalesce(d.ie_dose_especial,'N') <> 'S'
					and		d.dt_horario >= dt_prim_hor_sol_w - 220/24
					and		d.nr_seq_material = c.nr_sequencia
					and		d.nr_prescricao = c.nr_prescricao
					and		coalesce(c.dt_suspensao::text, '') = ''
					and		c.ie_agrupador = 4
					and		coalesce(b.cd_intervalo,'XPTO') = coalesce(cd_intervalo_w, coalesce(b.cd_intervalo, 'XPTO'))
					--and		nvl(b.qt_dose,0) = nvl(c01_w.qt_dose, nvl(b.qt_dose,0))
					--and		b.cd_material = c01_w.cd_material
					and		c.nr_sequencia_solucao = b.nr_seq_solucao
					and		c.nr_prescricao = b.nr_prescricao
					and		coalesce(b.dt_suspensao::text, '') = ''
					and		b.nr_etapas = nr_etapas_w
					and		b.nr_prescricao = a.nr_prescricao
					and		coalesce(a.dt_suspensao::text, '') = ''
					and		(coalesce(a.dt_liberacao_medico, a.dt_liberacao) IS NOT NULL AND (coalesce(a.dt_liberacao_medico, a.dt_liberacao))::text <> '')
					--and		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
					and		a.dt_inicio_prescr between dt_inicio_w and dt_final_w
					and		a.nr_atendimento = nr_atendimento_w;

					if (coalesce(dt_prim_hor_sol_w::text, '') = '') and (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
						dt_prim_hor_sol_w	:= to_date(to_char(dt_inicio_prescr_w-1,'dd/mm/yyyy ') || hr_prim_horario_w, 'dd/mm/yyyy hh24:mi');
					end if;

					if (dt_prim_hor_sol_w IS NOT NULL AND dt_prim_hor_sol_w::text <> '') then
						if (ie_operacao_w	= 'X') then
							dt_prim_hor_sol_w := dt_prim_hor_sol_w + qt_operacao_w / 1;
						else
							dt_prim_hor_sol_w := dt_prim_hor_sol_w + qt_operacao_w / 24;
						end if;
					end if;

					dt_prim_hor_sol_w := coalesce(dt_prim_hor_sol_w,dt_inicio_prescr_w);

					if (coalesce(qt_operacao_w,0) > 0) and (dt_prim_hor_sol_w IS NOT NULL AND dt_prim_hor_sol_w::text <> '') then

						if (ie_operacao_w in ('H')) and (dt_prim_hor_sol_w not between dt_inicio_prescr_w and (dt_prim_hor_sol_w + qt_operacao_w)) then

							while(dt_prim_hor_sol_w not between dt_inicio_prescr_w and (dt_prim_hor_sol_w + qt_operacao_w)) loop
								dt_prim_hor_sol_w := dt_prim_hor_sol_w + qt_operacao_w/24;
							end loop;
						end if;
					end if;

					if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
						hr_prim_horario_w	:= to_char(dt_prim_hor_sol_w, 'hh24:mi');
					end if;
				end if;

				if (ie_se_necessario_w = 'S') then
					select	coalesce(max(b.qt_se_necessario),0),
							coalesce(max(b.ie_mesmo_zerado),'N')
					into STRICT	nr_ocorrencia_w,
							ie_mesmo_zerado_w
					from	intervalo_setor b,
							intervalo_prescricao a
					where	((b.cd_unidade_basica = coalesce(obter_unid_atend_setor_atual(nr_atendimento_w,cd_setor_atendimento_w,'UB'),b.cd_unidade_basica)) or (coalesce(b.cd_unidade_basica::text, '') = ''))
					and		((b.ie_via_aplicacao = coalesce(ie_via_aplicacao_w,b.ie_via_aplicacao)) or (coalesce(b.ie_via_aplicacao::text, '') = ''))
					and		((b.cd_material = cd_material_w) or (coalesce(b.cd_material::text, '') = ''))
					and		coalesce(b.cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w
					and		coalesce(b.cd_estab, cd_estabelecimento_w)			= cd_estabelecimento_w
					and		a.cd_intervalo 		= b.cd_intervalo
					and		a.cd_intervalo 		= cd_intervalo_w;

					if (coalesce(nr_ocorrencia_w,0) = 0) and (ie_mesmo_zerado_w = 'N') then
						select	coalesce(max(qt_se_necessario),1)
						into STRICT	nr_ocorrencia_w
						from	intervalo_prescricao
						where	cd_intervalo	= cd_intervalo_w;
					end if;

					ds_horarios_w	:= 'SN';

				elsif (ie_acm_w = 'S') then
					select	coalesce(max(b.qt_se_necessario),0),
							coalesce(max(b.ie_mesmo_zerado),'N')
					into STRICT	nr_ocorrencia_w,
							ie_mesmo_zerado_w
					from	intervalo_setor b,
							intervalo_prescricao a
					where	((b.cd_unidade_basica = coalesce(obter_unid_atend_setor_atual(nr_atendimento_w,cd_setor_atendimento_w,'UB'),b.cd_unidade_basica)) or (coalesce(b.cd_unidade_basica::text, '') = ''))
					and		((b.ie_via_aplicacao = coalesce(ie_via_aplicacao_w,b.ie_via_aplicacao)) or (coalesce(b.ie_via_aplicacao::text, '') = ''))
					and		((b.cd_material = cd_material_w) or (coalesce(b.cd_material::text, '') = ''))
					and		coalesce(b.cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w
					and		coalesce(b.cd_estab, cd_estabelecimento_w)			= cd_estabelecimento_w
					and		a.cd_intervalo 		= b.cd_intervalo
					and		a.cd_intervalo 		= cd_intervalo_w;

					if (coalesce(nr_ocorrencia_w,0) = 0) and (ie_mesmo_zerado_w = 'N') then

						select	coalesce(max(qt_se_necessario),1)
						into STRICT	nr_ocorrencia_w
						from	intervalo_prescricao
						where	cd_intervalo	= cd_intervalo_w;
					end if;

					ds_horarios_w	:= 'ACM';
				else
					SELECT * FROM Calcula_Horarios_Etapas(dt_prim_hor_sol_w, nr_etapas_w, dividir(qt_tempo_aplicacao_w,nr_etapas_w), nm_usuario_p, 'N', qt_tempo_aplicacao_w, ds_horarios_w, ds_horarios2_w, 'N', 'N') INTO STRICT ds_horarios_w, ds_horarios2_w;

					ds_horarios_w	:= ds_horarios_w || ds_horarios2_w;
				end if;

				if (ds_horarios_w <> 'ACM') and (ds_horarios_w <> 'SN') then
					update	prescr_solucao
					set		ds_horarios	= substr(ds_horarios_w,1,2000),
							hr_prim_horario	= to_char(dt_prim_hor_sol_w,'hh24:mi')
					where	nr_seq_solucao 	 = nr_seq_solucao_w
					and		nr_prescricao	 = nr_prescricao_p;

					dt_prim_hor_sol_ww := dt_prim_hor_sol_w;
				else
					update	prescr_solucao
					set		ds_horarios	= substr(ds_horarios_w,1,2000)
					where	nr_seq_solucao	= nr_seq_Solucao_w
					and		nr_prescricao	= nr_prescricao_p;
				end if;
				commit;

			elsif (ie_prim_hor_sol_w <> 'N') then
				if (ie_prim_hor_sol_w = 'P') then
					dt_primeiro_horario_w := dt_inicio_prescr_w;
					hr_prim_horario_w			:= Obter_prim_horario_solucao(to_char(dt_inicio_prescr_w,'dd/mm/yyyy hh24:mi:ss'));
					if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
						dt_primeiro_horario_w	:= to_date(to_char(dt_inicio_prescr_w,'dd/mm/yyyy ') || hr_prim_horario_w,'dd/mm/yyyy hh24:mi:ss');
					end if;
				end if;

				if (ie_prim_hor_sol_w <> 'C') and (ie_prim_hor_sol_w <> 'T') then

					if	(ie_prim_hor_sol_w = 'I' AND cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then

						select	to_date(to_char(dt_inicio_prescr,'dd/mm/yyyy')||' '||substr(Obter_primeiro_horario(cd_intervalo_w,nr_prescricao,null,null),1,20),'dd/mm/yyyy hh24:mi:ss')
						into STRICT	dt_primeiro_horario_w
						from	prescr_medica
						where	nr_prescricao = nr_prescricao_p;

					else
						select	max(dt_inicio_prescr)
						into STRICT	dt_primeiro_horario_w
						from	prescr_medica
						where	nr_prescricao = nr_prescricao_p;
					end if;

					hr_prim_horario_w := Obter_prim_horario_solucao(to_char(dt_primeiro_horario_w, 'dd/mm/yyyy hh24:mi:ss'));
					hr_prim_horario_w := to_char(dt_primeiro_horario_w, 'hh24:mi');
					SELECT * FROM Calcula_Horarios_Etapas(dt_primeiro_horario_w, nr_etapas_w, dividir(qt_tempo_aplicacao_w,nr_etapas_w), nm_usuario_p, 'N', qt_tempo_aplicacao_w, ds_horarios_w, ds_horarios2_w, 'N', 'N') INTO STRICT ds_horarios_w, ds_horarios2_w;

					if (coalesce(ie_limpa_prim_hor_w, 'N') = 'S') then
						ie_manter_intervalo_w := 'N';
						ie_horario_rep_ant_w := 'N';
						dt_primeiro_horario_w := null;
						ds_horarios_w := null;
					end if;

					update	prescr_solucao
					set	ds_horarios	= substr(ds_horarios_w,1,255),
						qt_tempo_aplicacao = qt_tempo_aplicacao_w,
						hr_prim_horario	= to_char(dt_primeiro_horario_w,'hh24:mi')
					where	nr_seq_solucao	= nr_seq_Solucao_w
					and	nr_prescricao	= nr_prescricao_p;

					dt_prim_hor_sol_ww := dt_primeiro_horario_w;
				end if;

			end if;
		else
			update	prescr_solucao
			set ds_horarios  = NULL,
				hr_prim_horario  = NULL
			where	nr_prescricao	= nr_prescricao_p
			and nr_seq_solucao	= nr_seq_solucao_w;
		end if;

			open C03;
			loop
			fetch C03 into
				nr_sequencia_w,
				ie_origem_inf_w,
				cd_material_w,
				cd_unidade_medida_w,
				qt_dose_w,
				qt_unitaria_w,
				qt_material_w,
				cd_intervalo_w,
				ds_horarios_w,
				ds_observacao_w,
				ds_observacao_enf_w,
				ie_via_aplicacao_w,
				nr_agrupamento_w,
				ie_cobra_paciente_w,
				cd_motivo_baixa_w,
				dt_baixa_w,
				ie_utiliza_kit_w,
				cd_unidade_medida_dose_w,
				qt_conversao_dose_w,
				nr_ocorrencia_w,
				qt_total_dispensar_w,
				cd_fornec_consignado_w,
				nr_sequencia_proc_w,
				qt_solucao_w,
				ds_dose_diferenciada_w,
				ie_medicacao_paciente_w,
				nr_sequencia_diluicao_w,
				HR_PRIM_HORARIO_w,
				nr_sequencia_dieta_w,
				ie_agrupador_w,
				nr_dia_util_w,
				ie_situacao_w,
				ie_se_necessario_w,
				qt_min_aplicacao_w,
				ie_bomba_infusao_w,
				IE_APLIC_BOLUS_w,
				IE_APLIC_LENTA_w,
				ie_acm_w,
				ie_objetivo_w,
				cd_topografia_cih_w,
				ie_origem_infeccao_w,
				cd_amostra_cih_w,
				cd_microorganismo_cih_w,
				ie_uso_antimicrobiano_w,
				cd_protocolo_w,
				nr_seq_protocolo_w,
				nr_seq_mat_protocolo_w,
				qt_hora_aplicacao_w,
				QT_VEL_INFUSAO_w,
				ds_justificativa_w,
				ie_sem_aprazamento_w,
				ie_indicacao_w,
				dt_proxima_dose_w,
				qt_total_dias_lib_w,
				nr_seq_substituto_w,
				ie_lado_w,
				dt_inicio_medic_w,
				qt_dia_prim_hor_w,
				ie_regra_disp_w,
				qt_vol_adic_reconst_w,
				qt_hora_intervalo_w,
				qt_min_intervalo_w,
				qt_volume_corrigido_w,
				ds_observacao_far_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */

				ie_loop_w	:= 'S';
				nr_agrupamento_w		:= 1;
				while(ie_loop_w = 'S') loop
					select	count(*)
					into STRICT	qt_itens_w
					from	prescr_solucao
					where	nr_agrupamento	= nr_agrupamento_w
					and		nr_prescricao	= nr_prescricao_p;
					if (qt_itens_w	= 0) then
						ie_loop_w	:= 'N';
					else
						nr_agrupamento_w	:= nr_agrupamento_w + 1;
					end if;
				end loop;

				ie_loop_w	:= 'S';
				while(ie_loop_w = 'S') loop
					select	count(*)
					into STRICT	qt_itens_w
					from	prescr_material
					where	nr_sequencia	= coalesce(nr_sequencia_w,0) + coalesce(nr_seq_material_w,0)
					and		nr_prescricao	= nr_prescricao_p;

					if (qt_itens_w	= 0) then
						ie_loop_w	:= 'N';
					else
						nr_seq_material_w	:= coalesce(nr_seq_material_w,0) + 1;
					end if;
				end loop;

				Insert  into Prescr_Material(
					nr_prescricao,
					nr_sequencia,
					ie_origem_inf,
					cd_material,
					cd_unidade_medida,
					qt_dose,
					qt_unitaria,
					qt_material,
					dt_atualizacao,
					nm_usuario,
					cd_intervalo,
					ds_horarios,
					ds_observacao,
					ds_observacao_enf,
					ie_via_aplicacao,
					nr_agrupamento,
					ie_cobra_paciente,
					cd_motivo_baixa,
					dt_baixa,
					ie_utiliza_kit,
					cd_unidade_medida_dose,
					qt_conversao_dose,
					ie_urgencia,
					nr_ocorrencia,
					qt_total_dispensar,
					cd_fornec_consignado,
					nr_sequencia_solucao,
					nr_sequencia_proc,
					qt_solucao,
					hr_dose_especial,
					qt_dose_especial,
					ds_dose_diferenciada,
					ie_medicacao_paciente,
					nr_sequencia_diluicao,
					hr_prim_horario,
					nr_sequencia_dieta,
					ie_agrupador,
					nr_dia_util,
					ie_suspenso,
					ie_se_necessario,
					qt_min_aplicacao,
					ie_bomba_infusao,
					ie_aplic_bolus,
					ie_aplic_lenta,
					ie_acm,
					ie_objetivo,
					cd_topografia_cih,
					ie_origem_infeccao,
					cd_amostra_cih,
					cd_microorganismo_cih,
					ie_uso_antimicrobiano,
					cd_protocolo,
					nr_seq_protocolo,
					nr_seq_mat_protocolo,
					qt_hora_aplicacao,
					ie_recons_diluente_fixo,
					qt_vel_infusao,
					ds_justificativa,
					ie_sem_aprazamento,
					ie_indicacao,
					dt_proxima_dose,
					qt_total_dias_lib,
					nr_seq_substituto,
					ie_lado,
					dt_inicio_medic,
					qt_dia_prim_hor,
					ie_regra_disp,
					qt_vol_adic_reconst,
					qt_hora_intervalo,
					qt_min_intervalo,
					nr_seq_anterior,
					nr_prescricao_original,
					qt_volume_corrigido,
					ds_observacao_far)
				values (nr_prescricao_p,
						coalesce(nr_sequencia_w,0) + coalesce(nr_seq_material_w,0),
					ie_origem_inf_w,
					cd_material_w,
					cd_unidade_medida_w,
					qt_dose_w,
					qt_unitaria_w,
					qt_material_w,
					dt_prescricao_p,
					nm_usuario_p,
					substr(cd_intervalo_w,1,7),
					substr(ds_horarios_w,1,2000),
					substr(ds_observacao_w,1,4000),
					substr(ds_observacao_enf_w,1,2000),
					ie_via_aplicacao_w,
					nr_agrupamento_w,
					ie_cobra_paciente_w,
					cd_motivo_baixa_w,
					dt_baixa_w,
					ie_utiliza_kit_w,
					cd_unidade_medida_dose_w,
					qt_conversao_dose_w,
					'N',
					nr_ocorrencia_w,
					qt_total_dispensar_w,
					cd_fornec_consignado_w,
					nr_seq_solucao_w,
					nr_sequencia_proc_w,
					qt_solucao_w,
					null,
					null,
					substr(ds_dose_diferenciada_w,1,255),
					ie_medicacao_paciente_w,
					null,
					hr_prim_horario_w,
					nr_sequencia_dieta_w,
					ie_agrupador_w,
					nr_dia_util_w,
					ie_situacao_w,
					ie_se_necessario_w,
					qt_min_aplicacao_w,
					ie_bomba_infusao_w,
					ie_aplic_bolus_w,
					ie_aplic_lenta_w,
					ie_acm_w,
					ie_objetivo_w,
					cd_topografia_cih_w,
					ie_origem_infeccao_w,
					cd_amostra_cih_w,
					cd_microorganismo_cih_w,
					ie_uso_antimicrobiano_w,
					cd_protocolo_w,
					nr_seq_protocolo_w,
					nr_seq_mat_protocolo_w,
					qt_hora_aplicacao_w,
					'N',
					QT_VEL_INFUSAO_w,
					substr(ds_justificativa_w,1,2000),
					ie_sem_aprazamento_w,
					ie_indicacao_w,
					dt_proxima_dose_w,
					qt_total_dias_lib_w,
					nr_seq_substituto_w,
					ie_lado_w,
					dt_inicio_medic_w,
					qt_dia_prim_hor_w,
					ie_regra_disp_w,
					qt_vol_adic_reconst_w,
					qt_hora_intervalo_w,
					qt_min_intervalo_w,
					nr_sequencia_w,
					nr_prescricao_orig_p,
					qt_volume_corrigido_w,
					ds_observacao_far_w);

				nr_seq_disp_w := coalesce(nr_sequencia_w,0) + coalesce(nr_seq_material_w,0);

				SELECT * FROM Obter_Quant_Dispensar(cd_estabelecimento_w, cd_material_w, nr_prescricao_p, nr_seq_disp_w, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, null, nr_ocorrencia_w, ds_dose_diferenciada_w, ie_origem_inf_w, cd_unidade_medida_dose_w, 1, qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w;


				update	prescr_material
				set 	nr_ocorrencia		= nr_ocorrencia_w,
						qt_total_dispensar	= qt_total_dispensar_w,
						qt_material		= coalesce(qt_material_w,1),
						ie_regra_disp		= CASE WHEN coalesce(ie_regra_disp,'X')='D' THEN  ie_regra_disp  ELSE ie_regra_disp_w END
				where	nr_sequencia		= nr_seq_disp_w
				and		nr_prescricao 		= nr_prescricao_p;
				commit;

		end loop;
		close C03;

		if (ie_recalc_total_w <> 'N') then
			if	((((ie_acm_w = 'S') or (ie_se_necessario_w = 'S')) and (VarIeGeracaoEtapaACM_w = 'S')) or
				 (ie_acm_w = 'N' AND ie_se_necessario_w = 'N')) then
				qt_tempo_aplicacao_w	:= nr_horas_validade_w;

				SELECT * FROM Calcular_Valores_Solucao(nr_prescricao_p, nr_seq_solucao_w, qt_dosagem_w, upper(ie_tipo_dosagem_w), VarCalcularEtapaSolucao_w, VarCalculaVolumeVelocidade_w, VarCalculaTempoSolucao_w, ie_arredondar_etapa_w, nm_usuario_p, qt_tempo_aplicacao_w, qt_volsolu_w, nr_etapas_w, qt_temsol_w, 'N') INTO STRICT qt_volsolu_w, nr_etapas_w, qt_temsol_w;

				if (coalesce(nr_etapas_w,0)	> 0) then
					qt_hora_fase_w	:= dividir(qt_tempo_aplicacao_w,nr_etapas_w);
				end if;

				if (cd_intervalo_soluc_w IS NOT NULL AND cd_intervalo_soluc_w::text <> '') then

					SELECT * FROM Calcular_etapas_interv_solucao(	cd_intervalo_soluc_w, qt_tempo_aplicacao_w, ie_arredondar_etapa_w, qt_hora_fase_w, nr_etapas_w) INTO STRICT qt_hora_fase_w, nr_etapas_w;
				end if;

				if (ie_limpa_prim_hor_w <> 'S') then
					SELECT * FROM calcula_horarios_etapas(coalesce(dt_prim_hor_sol_ww,dt_inicio_prescr_w), nr_etapas_w, qt_hora_fase_w, nm_usuario_p, VarHorarioSolucao_w, qt_tempo_aplicacao_w, ds_horarios_w, ds_horarios2_w, ie_etapa_especial_w, 'N') INTO STRICT ds_horarios_w, ds_horarios2_w;

					ds_horarios_w	:= ds_horarios_w || ds_horarios2_w;
				else
					ds_horarios_w := null;
				end if;

				select	sum(qt_solucao)
				into STRICT	qt_volume_componentes_ml_w
				from	prescr_material
				where	ie_agrupador		= 4
				and		nr_sequencia_solucao	= nr_seq_solucao_w
				and		nr_prescricao		= nr_prescricao_p;

				if (ie_tipo_dosagem_w = 'gtm') then
					qt_velocidade_infusao_ml_w	:= dividir(qt_dosagem_w * 60, 20);
				elsif (ie_tipo_dosagem_w = 'mgm') then
					qt_velocidade_infusao_ml_w	:= dividir(qt_dosagem_w * 60, 50);
				else
					qt_velocidade_infusao_ml_w	:= qt_dosagem_w;
				end if;

				if (VarCalculaVolumeVelocidade_w = 'T') or
					((VarCalculaVolumeVelocidade_w = 'S') and (coalesce(ie_bomba_infusao_w,'N') <> 'N')) then
					qt_volsolu_w	:= (qt_velocidade_infusao_ml_w * qt_tempo_aplicacao_w);
				else
					qt_volsolu_w	:= qt_volume_componentes_ml_w * nr_etapas_w;
				end if;

				update	prescr_solucao
				set		nr_etapas	= nr_etapas_w,
						ds_horarios	= ds_horarios_w,
						qt_hora_fase	= qt_hora_fase_w,
						qt_solucao_total = coalesce(qt_volsolu_w,qt_solucao_total)
				where	nr_seq_solucao	= nr_seq_solucao_w
				and		nr_prescricao	= nr_prescricao_p;
				commit;

			end if;
			CALL Ajustar_Prescr_Mat_Solucao(nr_prescricao_p, nr_seq_solucao_w);

		end if;

	end if;

	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rep_copia_solucao ( nr_prescricao_orig_p bigint, nr_prescricao_p bigint, nr_seq_regra_p bigint, ie_copia_agora_p text, dt_prescricao_p timestamp, ie_nao_padronizado_p text, ie_copia_justificativa_p text, nr_seq_material_p bigint, nm_usuario_p text) FROM PUBLIC;

