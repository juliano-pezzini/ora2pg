-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_fluxo_caixa_passado ( cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_final_p timestamp, nm_usuario_p text, cd_empresa_p bigint, ie_restringe_estab_p text, vl_saldo_anterior_p bigint, ie_periodo_p text, ie_dia_util_p text, ie_todas_contas_p text, ie_operacao_p text, ie_somente_ativa_p text, nr_seq_regra_p bigint default null, cd_moeda_p bigint default null) AS $body$
DECLARE


/*--------------------------------------------------------------- ATENCAO ----------------------------------------------------------------*/


/* Cuidado ao realizar alteracoes no fluxo de caixa. Toda e qualquer alteracao realizada em qualquer uma das       */


/* procedures do fluxo de caixa deve ser cuidadosamente verificada e realizada no fluxo de caixa em lote.           */


/* Devemos garantir que os dois fluxos de caixa tragam os mesmos valores no resultado, evitando assim que           */


/* existam diferencas entre os fluxos de caixa.                                                                                                                */


/*--------------- AO ALTERAR O FLUXO DE CAIXA ALTERAR TAMBEM O FLUXO DE CAIXA EM LOTE ---------------*/

qt_dia_fechado_w		integer;
dt_mes_fechamento_w		timestamp;
ie_fechamento_w			varchar(1);
cd_conta_financ_cpa_w		bigint;
cd_conta_financ_cre_w		bigint;
ie_classif_fluxo_w		varchar(1)	:= 'P';
ie_periodo_w			varchar(1)	:= 'D';
ie_origem_w			varchar(1)	:= 'I';
ie_integracao_w			varchar(10);
ie_entrada_saida_w		varchar(10);
dt_atualizacao_w		timestamp		:= clock_timestamp();
cd_conta_financ_w		bigint;
cd_moeda_atual_w		integer;
cd_moeda_padrao_w		integer;
cd_convenio_w			bigint;
vl_fluxo_w			double precision;
dt_referencia_w			timestamp;
vl_juros_w			double precision;
vl_multa_w			double precision;
vl_desconto_w			double precision;
vl_rec_maior_w			double precision;
vl_despesa_bancaria_w		double precision;
vl_outros_acrescimos_w		double precision;
vl_outras_despesas_w		double precision;
vl_glosa_w			double precision;
cd_conta_financ_jcp_w		bigint;
cd_conta_financ_jcr_w		bigint;
cd_conta_financ_mcp_w		bigint;
cd_conta_financ_mcr_w		bigint;
cd_conta_financ_dcp_w		bigint;
cd_conta_financ_dcr_w		bigint;
cd_conta_financ_vlm_w		bigint;
cd_conta_financ_ocp_w		bigint;
cd_conta_financ_odp_w		bigint;
cd_conta_financ_dbcr_w		bigint;
cd_conta_financ_glosa_w		bigint;
cd_centro_custo_w		integer;
ie_fim_semana_passado_w		varchar(255);
ie_adiant_receb_w		varchar(255);
ie_adiant_pago_w		varchar(255);
ie_convenio_receb_w		varchar(255);
ie_conv_receb_estorno_w		varchar(255);
ie_tit_rec_canc_w		varchar(255);
ie_classif_baixa_cp_w		varchar(255);
ie_cheque_cp_mes_w		varchar(255);
ie_tit_pagar_transf_w		varchar(255);
ie_cheque_pago_pend_w		varchar(255)	:= 'N';
ie_operacao_w			varchar(10);
ie_origem_titulo_w		varchar(10);
nr_seq_classe_tit_rec_w		bigint;
nr_seq_classe_tit_pag_w		bigint;
ie_data_tit_adiant_w		varchar(1);
ie_movto_bco_pend_w		varchar(2);
ie_data_tit_adiant_rec_w	varchar(1);
ie_cheque_devolvido_w		varchar(1);
ie_contrato_w			varchar(1);
ie_gera_saldo_banco_w		varchar(1);
ie_conta_finan_trans_w		varchar(1);
ie_conta_financ_ativa_w		varchar(1);
cd_cgc_w			varchar(14);
ie_trans_fin_conta_w		varchar(1);

dt_inicio_w			timestamp;
dt_final_w			timestamp;
ie_filtro_fluxo_w		varchar(1);
ie_filtro_fluxo_proj_w		varchar(1);
ie_filtro_banco_w		varchar(1);
dt_inicio_mes_w			timestamp;
dt_final_mes_w			timestamp;
dt_final_fim_mes_w		timestamp;

cd_moeda_padrao_cp_w		integer;
cd_moeda_padrao_cr_w		integer;
ie_tipo_titulo_cp_w		titulo_pagar.ie_tipo_titulo%type;
ie_tipo_titulo_cr_w		titulo_receber.ie_tipo_titulo%type;
ie_titulo_caixa_w		parametro_fluxo_caixa.ie_titulo_caixa%type;
ie_despesa_cartao_w		parametro_fluxo_caixa.ie_despesa_cartao%type;
ie_tit_pagar_desdob_w		parametro_fluxo_caixa.ie_tit_pagar_desdob%type;
ie_fluxo_especial_w		parametro_fluxo_caixa.ie_fluxo_especial%type;
/* Projeto Multimoeda - Variaveis */

cd_moeda_estrang_w		integer;
cd_moeda_empresa_w		integer;
vl_fluxo_estrang_w		double precision;
vl_fluxo_caixa_w		double precision;
ie_dt_credito_banco_cre_w	parametro_fluxo_caixa.ie_dt_credito_banco_cre%type;
qt_loop_w				bigint;
ds_log_w				varchar(4000);	


c010 CURSOR FOR
/* 1 */

SELECT	/*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */'CP' ie_integracao,
	dt_baixa,
	cd_conta_financ,
	round((vl_baixa + CASE WHEN cd_conta_financ_jcp=0 THEN vl_juros  ELSE 0 END  + CASE WHEN cd_conta_financ_mcp=0 THEN vl_multa  ELSE 0 END  - CASE WHEN cd_conta_financ_dcp=0 THEN vl_desconto  ELSE 0 END  + CASE WHEN cd_conta_financ_ocp=0 THEN vl_outros_acrescimos  ELSE 0 END   + CASE WHEN cd_conta_financ_odp=0 THEN VL_OUTRAS_DESPESAS  ELSE 0 END )::numeric,4),
	vl_baixa_estrang,
	cd_moeda,
	cd_moeda_padrao_cp_w cd_moeda_padrao,
	0 cd_convenio,
	vl_juros,
	vl_multa,
	vl_desconto,
	0 vl_rec_maior,
	vl_outros_acrescimos,
	VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	cd_conta_financ_jcp,
	cd_conta_financ_mcp,
	cd_conta_financ_dcp,
	cd_conta_financ_ocp,
	cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	nr_seq_classe nr_seq_classe_tit_pag,
	ie_contrato,
	ie_tipo_tit_pag,
	null ie_tipo_tit_rec
from	(SELECT	dt_baixa,
		cd_conta_financ,
		vl_baixa,
		vl_baixa_estrang,
		coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(estabelecimento_titulo),'JCP',cd_cgc,null,dt_baixa,estabelecimento_titulo),0) cd_conta_financ_jcp,
		coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(estabelecimento_titulo),'MCP',cd_cgc,null,dt_baixa,estabelecimento_titulo),0) cd_conta_financ_mcp,
		coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(estabelecimento_titulo),'DCP',cd_cgc,null,dt_baixa,estabelecimento_titulo),0) cd_conta_financ_dcp,
		coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(estabelecimento_titulo),'OCP',cd_cgc,null,dt_baixa,estabelecimento_titulo),0) cd_conta_financ_ocp,
		coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(estabelecimento_titulo),'ODP',cd_cgc,null,dt_baixa,estabelecimento_titulo),0) cd_conta_financ_odp,
		cd_moeda,
		vl_juros,
		vl_multa,
		vl_desconto,
		vl_outros_acrescimos,
		coalesce(VL_OUTRAS_DESPESAS,0) VL_OUTRAS_DESPESAS,
		nr_seq_classe,
		ie_contrato,
		ie_tipo_tit_pag
	from	(select	dt_baixa,
			coalesce(nr_seq_conta_financ,cd_conta_financ_cpa_w) cd_conta_financ,
			(dividir_sem_round(
				coalesce(
					CASE WHEN ie_tit_pagar_transf_w='S' THEN CASE WHEN ie_situacao='T' THEN vl_original  ELSE vl_titulo END   ELSE vl_titulo END ,
					CASE WHEN ie_tit_pagar_transf_w='S' THEN CASE WHEN ie_situacao='T' THEN vl_tit_transf  ELSE vl_titulo_alteracao END   ELSE vl_titulo_alteracao END ),
				CASE WHEN ie_tit_pagar_transf_w='S' THEN CASE WHEN ie_situacao='T' THEN vl_tit_transf  ELSE vl_titulo_alteracao END   ELSE vl_titulo_alteracao END ) *
			vl_baixa) vl_baixa,
			(dividir_sem_round(
				coalesce(
					CASE WHEN ie_tit_pagar_transf_w='S' THEN CASE WHEN ie_situacao='T' THEN vl_original  ELSE vl_titulo END   ELSE vl_titulo END ,
					CASE WHEN ie_tit_pagar_transf_w='S' THEN CASE WHEN ie_situacao='T' THEN vl_tit_transf  ELSE vl_titulo_alteracao END   ELSE vl_titulo_alteracao END ),
				CASE WHEN ie_tit_pagar_transf_w='S' THEN CASE WHEN ie_situacao='T' THEN vl_tit_transf  ELSE vl_titulo_alteracao END   ELSE vl_titulo_alteracao END ) *
			vl_baixa_estrang) vl_baixa_estrang,
			coalesce(cd_moeda,0) cd_moeda,
			(dividir_sem_round(coalesce(vl_titulo,vl_titulo_alteracao),vl_titulo_alteracao) * vl_juros) vl_juros,
			(dividir_sem_round(coalesce(vl_titulo,vl_titulo_alteracao),vl_titulo_alteracao) * vl_multa) vl_multa,
			(dividir_sem_round(coalesce(vl_titulo,vl_titulo_alteracao),vl_titulo_alteracao) * vl_descontos) vl_desconto,
			(dividir_sem_round(coalesce(vl_titulo,vl_titulo_alteracao),vl_titulo_alteracao) * vl_outros_acrescimos) vl_outros_acrescimos,
			(dividir_sem_round(coalesce(vl_titulo,vl_titulo_alteracao),vl_titulo_alteracao) * VL_OUTRAS_DESPESAS) VL_OUTRAS_DESPESAS,
			cd_cgc,
			nr_seq_classe,
			CASE WHEN coalesce(nr_seq_contrato::text, '') = '' THEN 'N'  ELSE 'S' END  ie_contrato,
			ie_tipo_tit_pag,
			estabelecimento_titulo
		from (/*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */select	pkg_date_utils.start_of(a.dt_baixa,'DD',0) dt_baixa,
				c.nr_seq_conta_financ,
				b.ie_situacao,
				c.vl_original,
				c.vl_titulo,
				(obter_valor_tit_transf(b.nr_titulo, a.dt_baixa, 'CP'))::numeric  vl_tit_transf,
				(obter_dados_tit_pagar(b.nr_titulo,'VT'))::numeric  vl_titulo_alteracao,
				a.vl_baixa,
				a.vl_baixa_estrang,
				b.cd_moeda,
				a.vl_juros,
				a.vl_multa,
				a.vl_descontos,
				a.vl_outros_acrescimos,
				coalesce(a.VL_OUTRAS_DESPESAS,0) VL_OUTRAS_DESPESAS,
				b.cd_cgc,
				b.nr_seq_classe,
				b.nr_seq_contrato,
				b.ie_tipo_titulo ie_tipo_tit_pag,
				b.cd_estabelecimento estabelecimento_titulo
			FROM estabelecimento k, tipo_baixa_cpa d, titulo_pagar b, titulo_pagar_baixa a
LEFT OUTER JOIN titulo_pagar_classif c ON (a.nr_titulo = c.nr_titulo)
LEFT OUTER JOIN movto_trans_financ f ON (a.nr_seq_movto_trans_fin = f.nr_sequencia)
WHERE (ie_restringe_estab_p = 'N' or substr(obter_se_conta_financ_estab(coalesce(c.nr_seq_conta_financ, cd_conta_financ_cpa_w), cd_estabelecimento_p,ie_restringe_estab_p),1,1) = 'S')  and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_estab(a.nr_seq_conta_banco, null, null, nm_usuario_p, f.nr_seq_caixa, cd_estabelecimento_p),1,1) = 'S')  and k.cd_empresa			= cd_empresa_p and b.cd_estabelecimento		= k.cd_estabelecimento and (ie_filtro_fluxo_proj_w = 'N' or substr(obter_se_proj_filtro_fluxo(b.nr_seq_proj_rec, nm_usuario_p),1,1) = 'S') and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p or b.cd_estab_financeiro = cd_estabelecimento_p))) and (b.ie_situacao <> 'T' or ie_tit_pagar_transf_w = 'S') and (b.ie_situacao <> 'D' or ie_tit_pagar_desdob_w = 'S') and b.ie_situacao			<> 'C' and coalesce(b.nr_titulo_transf::text, '') = '' and a.nr_titulo			= b.nr_titulo and coalesce(d.ie_fluxo_passado,'S')	= 'S' and a.cd_tipo_baixa			= d.cd_tipo_baixa and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and (ie_classif_baixa_cp_w = 'N' or
				not exists (select	1
				from	titulo_pagar_baixa_cc x
				where	x.nr_titulo	= a.nr_titulo
				and	x.nr_seq_baixa	= a.nr_sequencia)) and a.dt_baixa			between dt_inicio_w and dt_final_w ) alias70
		
union all

		select	dt_baixa,
			cd_conta_financ,
			vl_baixa,
			vl_baixa_estrang,
			cd_moeda,
			vl_juros,
			vl_multa,
			vl_desconto,
			vl_outros_acrescimos,
			VL_OUTRAS_DESPESAS,
			cd_cgc,
			nr_seq_classe,
			ie_contrato,
			ie_tipo_tit_pag,
			estabelecimento_titulo
		from (select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	pkg_date_utils.start_of(a.dt_baixa,'DD',0) dt_baixa,
				coalesce(e.cd_conta_financ, cd_conta_financ_cpa_w) cd_conta_financ,
				coalesce(e.vl_baixa,0) vl_baixa,
				coalesce(e.vl_baixa_estrang,0) vl_baixa_estrang,
				coalesce(b.cd_moeda,0) cd_moeda,
				coalesce(e.vl_juros,0) vl_juros,
				coalesce(e.vl_multa,0) vl_multa,
				coalesce(e.vl_desconto,0) vl_desconto,
				coalesce(e.vl_outros_acrescimos,0) vl_outros_acrescimos,
				coalesce(e.VL_OUTRAS_DESPESAS,0) VL_OUTRAS_DESPESAS,
				b.cd_cgc,
				b.nr_seq_classe,
				CASE WHEN coalesce(b.nr_seq_contrato::text, '') = '' THEN 'N'  ELSE 'S' END  ie_contrato,
				b.ie_tipo_titulo ie_tipo_tit_pag,
				b.cd_estabelecimento estabelecimento_titulo
			FROM estabelecimento k, titulo_pagar_baixa_cc e, tipo_baixa_cpa d, titulo_pagar b, titulo_pagar_baixa a
LEFT OUTER JOIN movto_trans_financ f ON (a.nr_seq_movto_trans_fin = f.nr_sequencia)
WHERE (ie_restringe_estab_p = 'N' or substr(obter_se_conta_financ_estab(coalesce(e.cd_conta_financ, cd_conta_financ_cpa_w), cd_estabelecimento_p,ie_restringe_estab_p),1,1) = 'S') and a.nr_titulo			= e.nr_titulo and a.nr_sequencia			= e.nr_seq_baixa and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_estab(a.nr_seq_conta_banco, null, null, nm_usuario_p, f.nr_seq_caixa, cd_estabelecimento_p),1,1) = 'S')  and k.cd_empresa			= cd_empresa_p and b.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p or b.cd_estab_financeiro = cd_estabelecimento_p))) and (ie_filtro_fluxo_proj_w = 'N' or substr(obter_se_proj_filtro_fluxo(b.nr_seq_proj_rec, nm_usuario_p),1,1) = 'S') and (b.ie_situacao <> 'T' or ie_tit_pagar_transf_w = 'S') and (b.ie_situacao <> 'D' or ie_tit_pagar_desdob_w = 'S') and b.ie_situacao			<> 'C' and coalesce(b.nr_titulo_transf::text, '') = '' and a.nr_titulo			= b.nr_titulo and coalesce(d.ie_fluxo_passado,'S')	= 'S' and a.cd_tipo_baixa			= d.cd_tipo_baixa and coalesce(e.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and a.dt_baixa			between dt_inicio_w and dt_final_w and ie_classif_baixa_cp_w		= 'S' ) alias102
		
union all

		select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	a.dt_baixa,
			coalesce(CASE WHEN 				ie_conta_finan_trans_w='S' THEN (select	x.cd_conta_financ				from	transacao_financeira x				where	x.nr_sequencia	= a.nr_seq_trans_fin)  ELSE a.nr_seq_conta_financ END ,
			cd_conta_financ_cpa_w) cd_conta_financ,
			coalesce((dividir_sem_round((coalesce(a.vl_titulo,a.vl_titulo_alteracao) - a.vl_desconto - a.vl_acrescimo),(a.vl_titulo_alteracao - a.vl_desconto - a.vl_acrescimo)) * a.vl_adiantamento),0) vl_baixa,
			coalesce((dividir_sem_round((coalesce(a.vl_titulo,a.vl_titulo_alteracao) - a.vl_desconto - a.vl_acrescimo),(a.vl_titulo_alteracao - a.vl_desconto - a.vl_acrescimo)) * a.vl_adto_estrang),0) vl_baixa_estrang,
			coalesce(a.cd_moeda,0) cd_moeda,
			0 vl_juros,
			0 vl_multa,
			0 vl_desconto,
			0 vl_outros_acrescimos,
			0 VL_OUTRAS_DESPESAS,
			a.cd_cgc,
			a.nr_seq_classe,
			CASE WHEN coalesce(a.nr_seq_contrato::text, '') = '' THEN 'N'  ELSE 'S' END  ie_contrato,
			ie_tipo_tit_pag,
			estabelecimento_titulo
		from (select	pkg_date_utils.start_of(CASE WHEN ie_data_tit_adiant_w='S' THEN d.dt_adiantamento  ELSE a.dt_atualizacao END ,'DD',0) dt_baixa,
				d.nr_seq_trans_fin,
				c.nr_seq_conta_financ,
				coalesce(c.vl_titulo,0) vl_titulo,
				coalesce((obter_dados_tit_pagar(b.nr_titulo,'VT'))::numeric ,0) vl_titulo_alteracao,
				coalesce(c.vl_desconto,0) vl_desconto,
				coalesce(c.vl_acrescimo,0) vl_acrescimo,
				coalesce(a.vl_adiantamento,0) vl_adiantamento,
				coalesce(a.vl_adto_estrang,0) vl_adto_estrang,
				b.cd_moeda,
				b.cd_cgc,
				b.nr_seq_classe,
				b.nr_seq_contrato,
				b.ie_tipo_titulo ie_tipo_tit_pag,
				b.cd_estabelecimento estabelecimento_titulo
			FROM estabelecimento k, adiantamento_pago d, titulo_pagar b, titulo_pagar_adiant a
LEFT OUTER JOIN titulo_pagar_classif c ON (a.nr_titulo = c.nr_titulo)
WHERE (ie_restringe_estab_p = 'N' or substr(obter_se_conta_financ_estab(coalesce(c.nr_seq_conta_financ, cd_conta_financ_cpa_w), cd_estabelecimento_p,ie_restringe_estab_p),1,1) = 'S')  and k.cd_empresa		= cd_empresa_p and b.cd_estabelecimento	= k.cd_estabelecimento and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p or b.cd_estab_financeiro = cd_estabelecimento_p))) and (ie_filtro_fluxo_proj_w = 'N' or substr(obter_se_proj_filtro_fluxo(b.nr_seq_proj_rec, nm_usuario_p),1,1) = 'S') and (b.ie_situacao <> 'T' or ie_tit_pagar_transf_w = 'S') and (b.ie_situacao <> 'D' or ie_tit_pagar_desdob_w = 'S') and b.ie_situacao		<> 'C' and coalesce(b.nr_titulo_transf::text, '') = '' and a.nr_titulo		= b.nr_titulo and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and CASE WHEN ie_data_tit_adiant_w='S' THEN d.dt_adiantamento  ELSE a.dt_atualizacao END 	between dt_inicio_w and dt_final_w and a.nr_adiantamento	= d.nr_adiantamento and not exists (select	1
				from	titulo_pagar x
				where	x.nr_adiant_pago	= a.nr_adiantamento) and a.vl_adiantamento	<> 0 and ie_adiant_pago_w	in ('A','TP','TC') and ie_filtro_fluxo_w	= 'N' ) a
		) alias147
	) alias148

union all

/* 2 */

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	ie_integracao,
	dt_baixa,
	cd_conta_financ,
	sum(vl_titulo),
	sum(vl_receb_estrang),
	cd_moeda,
	cd_moeda_padrao,
	cd_convenio,
	vl_juros,
	vl_multa,
	vl_desconto,
	vl_rec_maior,
	vl_outros_acrescimos,
	VL_OUTRAS_DESPESAS,
	vl_despesa_bancaria,
	cd_conta_financ_jcp,
	cd_conta_financ_mcp,
	cd_conta_financ_dcp,
	cd_conta_financ_ocp,
	cd_conta_financ_odp,
	cd_conta_financ_jcr,
	cd_conta_financ_mcr,
	cd_conta_financ_dcr,
	cd_conta_financ_vlm,
	cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	ie_origem_titulo,
	nr_seq_classe nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	ie_contrato,
	null ie_tipo_tit_pag,
	ie_tipo_tit_rec
from	(
  select	'CR' ie_integracao,
		dt_baixa,
		coalesce(cd_conta_financ,coalesce((select	max(cd_conta_financ) from transacao_financeira where	nr_sequencia = CASE WHEN ie_trans_fin_conta_w='M' THEN nr_seq_trans_financ  ELSE nr_seq_trans_fin END ),cd_conta_financ_cre_w)) cd_conta_financ,
		(dividir_sem_round(
			coalesce(
				CASE WHEN ie_tit_rec_canc_w='N' THEN vl_classificacao  ELSE CASE WHEN ie_situacao='3' THEN vl_original  ELSE vl_classificacao END  END ,
				vl_titulo_alteracao),
			vl_titulo_alteracao) *
		(vl_recebido + vl_titulo)) vl_titulo,
		(dividir_sem_round(
			coalesce(
				CASE WHEN ie_tit_rec_canc_w='N' THEN vl_classificacao  ELSE CASE WHEN ie_situacao='3' THEN vl_original  ELSE vl_classificacao END  END ,
				vl_titulo_alteracao),
			vl_titulo_alteracao) *
		vl_recebido_estrang) vl_receb_estrang,
		coalesce(cd_moeda,0) cd_moeda,
		cd_moeda_padrao_cr_w cd_moeda_padrao,
		0 cd_convenio,
		0 vl_juros,
		0 vl_multa,
		0 vl_desconto,
		0 vl_rec_maior,
		0 vl_outros_acrescimos,
		0 VL_OUTRAS_DESPESAS,
		0 vl_despesa_bancaria,
		0 cd_conta_financ_jcp,
		0 cd_conta_financ_mcp,
		0 cd_conta_financ_dcp,
		0 cd_conta_financ_ocp,
		0 cd_conta_financ_odp,
		0 cd_conta_financ_jcr,
		0 cd_conta_financ_mcr,
		0 cd_conta_financ_dcr,
		0 cd_conta_financ_vlm,
		0 cd_conta_financ_dbcr,
		ie_origem_titulo,
		nr_seq_classe,
		CASE WHEN coalesce(nr_seq_contrato::text, '') = '' THEN 'N'  ELSE 'S' END  ie_contrato,
		ie_tipo_tit_rec
	from (select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(a.dt_credito_banco,CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0) dt_baixa,
			obter_conta_financ_tit_rec(b.nr_titulo,a.nr_sequencia,c.cd_conta_financ) cd_conta_financ,
			f.nr_seq_trans_financ,
			a.nr_seq_trans_fin,
			c.vl_classificacao,
			b.ie_situacao,
			c.vl_original,
			/* Adicionado o decode para nao chamar a function quando nao houver vl_recurso para a baixa, pois a function retornaria o vl_recebido, evitando a execucao da consulta sem necessidade. Problema de performance. */

			a.vl_recebido,
			a.vl_recebido_estrang,
			(obter_dados_titulo_receber(b.nr_titulo,'V'))::numeric  vl_titulo_alteracao,
			CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento),'DCR',b.cd_cgc,coalesce(b.cd_convenio_conta,obter_convenio_tit_rec(b.nr_titulo)),pkg_date_utils.start_of(a.dt_recebimento,'DD',0),b.cd_estabelecimento) IS NULL THEN 0  ELSE a.vl_descontos END  + coalesce(a.vl_cambial_ativo,0) vl_titulo,
			a.cd_moeda,
			b.ie_origem_titulo,
			b.nr_seq_classe,
			b.nr_seq_contrato,
			b.ie_tipo_titulo ie_tipo_tit_rec 
		FROM estabelecimento k, tipo_recebimento d, titulo_receber b, titulo_receber_liq a
LEFT OUTER JOIN titulo_receber_classif c ON (a.nr_titulo = c.nr_titulo)
LEFT OUTER JOIN movto_trans_financ f ON (a.nr_seq_movto_trans_fin = f.nr_sequencia)
LEFT OUTER JOIN adiantamento e ON (a.nr_adiantamento = e.nr_adiantamento)
WHERE (ie_restringe_estab_p = 'N' or substr(obter_se_conta_financ_estab(coalesce(c.cd_conta_financ, cd_conta_financ_cre_w), cd_estabelecimento_p,ie_restringe_estab_p),1,1) = 'S')  and k.cd_empresa			= cd_empresa_p and b.cd_estabelecimento		= k.cd_estabelecimento and d.ie_fluxo_passado		= 'S' and a.cd_tipo_recebimento		= d.cd_tipo_recebimento and (ie_filtro_fluxo_proj_w = 'N' or substr(obter_se_proj_filtro_fluxo(b.nr_seq_proj_rec, nm_usuario_p),1,1) = 'S') and not exists (select	1
			from	fluxo_caixa_excecao x
			where	x.ie_integracao		= 'TR'
			and	x.ie_origem_titulo_rec	= b.ie_origem_titulo
			and	x.ie_tipo_fluxo		= 'P') and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (b.cd_estabelecimento	= cd_estabelecimento_p or b.cd_estab_financeiro = cd_estabelecimento_p))) and (b.ie_situacao <> '3' or ie_tit_rec_canc_w = 'S') and b.ie_situacao			<> '5' and a.nr_titulo			= b.nr_titulo and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_estab(coalesce(a.nr_seq_conta_banco,e.nr_seq_conta_banco), null, a.nr_seq_caixa_rec, nm_usuario_p, f.nr_seq_caixa, cd_estabelecimento_p),1,1) = 'S')  and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and (b.nr_titulo = a.nr_titulo and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(a.dt_credito_banco,CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END 	between dt_inicio_w and dt_final_w)  and (ie_movto_bco_pend_w in ('N','A','TP') or
			not exists (select	1
			from	movto_banco_pend_baixa x
			where	x.nr_titulo	= a.nr_titulo
			and	x.nr_seq_baixa	= a.nr_sequencia)) and not exists (select	1
			from	movto_trans_financ x
			where ((x.nr_seq_movto_cartao IS NOT NULL AND x.nr_seq_movto_cartao::text <> '') or (x.nr_seq_cheque IS NOT NULL AND x.nr_seq_cheque::text <> ''))
			and	coalesce(x.nr_seq_titulo_receber::text, '') = ''
			and	x.nr_sequencia		= a.nr_seq_movto_trans_fin) and (ie_adiant_receb_w in ('A','TR') or coalesce(a.nr_adiantamento::text, '') = '') /* Adicionado a condicao para nao chamar a function quando nao houver vl_recurso para a baixa, pois a function retornaria 0, evitando a execucao da consulta sem necessidade. Problema de performance. */

  and coalesce(a.nr_seq_retorno::text, '') = '' and coalesce(a.vl_recurso,0) = 0 and coalesce(a.ie_lib_caixa, 'S')	= 'S' and (coalesce(ie_titulo_caixa_w,'S') = 'S' or
			not exists (select	1
			from	caixa y,
				movto_trans_financ x
			where	x.vl_transacao	<> 0
			and	coalesce(x.nr_seq_titulo_receber::text, '') = ''
			and	coalesce(y.ie_movto_fluxo,'S') = 'S'
			and	x.nr_seq_caixa		= y.nr_sequencia
			and	x.nr_seq_caixa_rec	= a.nr_seq_caixa_rec)) ) alias219
	
union all

  select	'CR' ie_integracao,
		dt_baixa,
		coalesce(cd_conta_financ,coalesce((select	max(cd_conta_financ) from transacao_financeira where	nr_sequencia = CASE WHEN ie_trans_fin_conta_w='M' THEN nr_seq_trans_financ  ELSE nr_seq_trans_fin END ),cd_conta_financ_cre_w)) cd_conta_financ,
		(dividir_sem_round(
			coalesce(
				CASE WHEN ie_tit_rec_canc_w='N' THEN vl_classificacao  ELSE CASE WHEN ie_situacao='3' THEN vl_original  ELSE vl_classificacao END  END ,
				vl_titulo_alteracao),
			vl_titulo_alteracao) *
		(vl_recebido + vl_titulo)) vl_titulo,
		(dividir_sem_round(
			coalesce(
				CASE WHEN ie_tit_rec_canc_w='N' THEN vl_classificacao  ELSE CASE WHEN ie_situacao='3' THEN vl_original  ELSE vl_classificacao END  END ,
				vl_titulo_alteracao),
			vl_titulo_alteracao) *
		vl_recebido_estrang) vl_receb_estrang,
		coalesce(cd_moeda,0) cd_moeda,
		cd_moeda_padrao_cr_w cd_moeda_padrao,
		0 cd_convenio,
		0 vl_juros,
		0 vl_multa,
		0 vl_desconto,
		0 vl_rec_maior,
		0 vl_outros_acrescimos,
		0 VL_OUTRAS_DESPESAS,
		0 vl_despesa_bancaria,
		0 cd_conta_financ_jcp,
		0 cd_conta_financ_mcp,
		0 cd_conta_financ_dcp,
		0 cd_conta_financ_ocp,
		0 cd_conta_financ_odp,
		0 cd_conta_financ_jcr,
		0 cd_conta_financ_mcr,
		0 cd_conta_financ_dcr,
		0 cd_conta_financ_vlm,
		0 cd_conta_financ_dbcr,
		ie_origem_titulo,
		nr_seq_classe,
		CASE WHEN coalesce(nr_seq_contrato::text, '') = '' THEN 'N'  ELSE 'S' END  ie_contrato,
		ie_tipo_tit_rec
	from (select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(a.dt_credito_banco,CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0) dt_baixa,
			obter_conta_financ_tit_rec(b.nr_titulo,a.nr_sequencia,c.cd_conta_financ) cd_conta_financ,
			f.nr_seq_trans_financ,
			a.nr_seq_trans_fin,
			c.vl_classificacao,
			b.ie_situacao,
			c.vl_original,
			/* Adicionado o decode para nao chamar a function quando nao houver vl_recurso para a baixa, pois a function retornaria o vl_recebido, evitando a execucao da consulta sem necessidade. Problema de performance. */

			CASE WHEN coalesce(a.vl_recurso,0)=0 THEN a.vl_recebido  ELSE obter_vl_recurso_baixa(b.nr_titulo,a.nr_sequencia,a.vl_recebido,pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(a.dt_credito_banco,CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0)) END  vl_recebido,
			a.vl_recebido_estrang,
			(obter_dados_titulo_receber(b.nr_titulo,'V'))::numeric  vl_titulo_alteracao,
			CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento),'DCR',b.cd_cgc,coalesce(b.cd_convenio_conta,obter_convenio_tit_rec(b.nr_titulo)),pkg_date_utils.start_of(a.dt_recebimento,'DD',0),b.cd_estabelecimento) IS NULL THEN 0  ELSE a.vl_descontos END  + coalesce(a.vl_cambial_ativo,0) vl_titulo,
			a.cd_moeda,
			b.ie_origem_titulo,
			b.nr_seq_classe,
			b.nr_seq_contrato,
			b.ie_tipo_titulo ie_tipo_tit_rec 
		FROM estabelecimento k, tipo_recebimento d, titulo_receber b, titulo_receber_liq a
LEFT OUTER JOIN titulo_receber_classif c ON (a.nr_titulo = c.nr_titulo)
LEFT OUTER JOIN movto_trans_financ f ON (a.nr_seq_movto_trans_fin = f.nr_sequencia)
LEFT OUTER JOIN adiantamento e ON (a.nr_adiantamento = e.nr_adiantamento)
WHERE (ie_restringe_estab_p = 'N' or substr(obter_se_conta_financ_estab(coalesce(c.cd_conta_financ, cd_conta_financ_cre_w), cd_estabelecimento_p,ie_restringe_estab_p),1,1) = 'S')  and k.cd_empresa			= cd_empresa_p and b.cd_estabelecimento		= k.cd_estabelecimento and d.ie_fluxo_passado		= 'S' and a.cd_tipo_recebimento		= d.cd_tipo_recebimento and (ie_filtro_fluxo_proj_w = 'N' or substr(obter_se_proj_filtro_fluxo(b.nr_seq_proj_rec, nm_usuario_p),1,1) = 'S') and not exists (select	1
			from	fluxo_caixa_excecao x
			where	x.ie_integracao		= 'TR'
			and	x.ie_origem_titulo_rec	= b.ie_origem_titulo
			and	x.ie_tipo_fluxo		= 'P') and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (b.cd_estabelecimento	= cd_estabelecimento_p or b.cd_estab_financeiro = cd_estabelecimento_p))) and (b.ie_situacao <> '3' or ie_tit_rec_canc_w = 'S') and b.ie_situacao			<> '5' and a.nr_titulo			= b.nr_titulo and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_estab(coalesce(a.nr_seq_conta_banco,e.nr_seq_conta_banco), null, a.nr_seq_caixa_rec, nm_usuario_p, f.nr_seq_caixa, cd_estabelecimento_p),1,1) = 'S')  and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and (b.nr_titulo = a.nr_titulo and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(a.dt_credito_banco,CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END 	between dt_inicio_w and dt_final_w)  and (ie_movto_bco_pend_w in ('N','A','TP') or
			not exists (select	1
			from	movto_banco_pend_baixa x
			where	x.nr_titulo	= a.nr_titulo
			and	x.nr_seq_baixa	= a.nr_sequencia)) and not exists (select	1
			from	movto_trans_financ x
			where ((x.nr_seq_movto_cartao IS NOT NULL AND x.nr_seq_movto_cartao::text <> '') or (x.nr_seq_cheque IS NOT NULL AND x.nr_seq_cheque::text <> ''))
			and	coalesce(x.nr_seq_titulo_receber::text, '') = ''
			and	x.nr_sequencia		= a.nr_seq_movto_trans_fin) and (ie_adiant_receb_w in ('A','TR') or coalesce(a.nr_adiantamento::text, '') = '') /* Adicionado a condicao para nao chamar a function quando nao houver vl_recurso para a baixa, pois a function retornaria 0, evitando a execucao da consulta sem necessidade. Problema de performance. */

  and ((a.nr_seq_retorno IS NOT NULL AND a.nr_seq_retorno::text <> '') and f.CD_CONTA_FINANC = c.cd_conta_financ)  -- OS 2317864,2319849 ajuste para quando tiver vinculo com o convenio a transacao da baixa tem que ser igual a transacao da classificacao
  and (coalesce(a.vl_recurso,0) <> 0 
		and (b.nr_titulo = a.nr_titulo and obter_vl_recurso_baixa(b.nr_titulo,a.nr_sequencia,0,pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(a.dt_credito_banco,CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0)) > 0) or coalesce(a.vl_recurso,0) = 0) and coalesce(a.ie_lib_caixa, 'S')	= 'S' and (coalesce(ie_titulo_caixa_w,'S') = 'S' or
			not exists (select	1
			from	caixa y,
				movto_trans_financ x
			where	x.vl_transacao	<> 0
			and	coalesce(x.nr_seq_titulo_receber::text, '') = ''
			and	coalesce(y.ie_movto_fluxo,'S') = 'S'
			and	x.nr_seq_caixa		= y.nr_sequencia
			and	x.nr_seq_caixa_rec	= a.nr_seq_caixa_rec)) ) alias303
	
union all

	select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'CR' ie_integracao,
		dt_baixa,
		cd_conta_financ,
		vl_titulo,
		vl_receb_estrang,
		cd_moeda,
		cd_moeda_padrao_cr_w cd_moeda_padrao,
		0 cd_convenio,
		0 vl_juros,
		0 vl_multa,
		0 vl_desconto,
		0 vl_rec_maior,
		0 vl_outros_acrescimos,
		0 VL_OUTRAS_DESPESAS,
		0 vl_despesa_bancaria,
		0 cd_conta_financ_jcp,
		0 cd_conta_financ_mcp,
		0 cd_conta_financ_dcp,
		0 cd_conta_financ_ocp,
		0 cd_conta_financ_odp,
		0 cd_conta_financ_jcr,
		0 cd_conta_financ_mcr,
		0 cd_conta_financ_dcr,
		0 cd_conta_financ_vlm,
		0 cd_conta_financ_dbcr,
		ie_origem_titulo,
		nr_seq_classe,
		ie_contrato,
		ie_tipo_tit_rec
	from	(select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(a.dt_credito_banco,CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0) dt_baixa,
			obter_conta_financ_tit_rec(b.nr_titulo,a.nr_sequencia,coalesce(c.cd_conta_financ,coalesce((select	max(cd_conta_financ) from transacao_financeira where	nr_sequencia = CASE WHEN ie_trans_fin_conta_w='M' THEN f.nr_seq_trans_financ  ELSE a.nr_seq_trans_fin END ),cd_conta_financ_cre_w))) cd_conta_financ,
			dividir_sem_round(
				coalesce(c.vl_original,(obter_valor_tit_transf(b.nr_titulo, a.dt_recebimento, 'CR'))::numeric ),
				(obter_valor_tit_transf(b.nr_titulo, a.dt_recebimento, 'CR'))::numeric ) *
				/* Adicionado o decode para nao chamar a function quando nao houver vl_recurso para a baixa, pois a function retornaria o vl_recebido, evitando a execucao da consulta sem necessidade. Problema de performance. */

			a.vl_recebido vl_titulo,
			dividir_sem_round(
				coalesce(c.vl_original,(obter_valor_tit_transf(b.nr_titulo, a.dt_recebimento, 'CR'))::numeric ),
				(obter_valor_tit_transf(b.nr_titulo, a.dt_recebimento, 'CR'))::numeric ) * a.vl_recebido_estrang vl_receb_estrang,
			coalesce(a.cd_moeda,0) cd_moeda,
			b.ie_origem_titulo,
			b.nr_seq_classe,
			CASE WHEN coalesce(b.nr_seq_contrato::text, '') = '' THEN 'N'  ELSE 'S' END  ie_contrato,
			b.ie_tipo_titulo ie_tipo_tit_rec
		FROM estabelecimento k, tipo_recebimento d, titulo_receber b, titulo_receber_liq a
LEFT OUTER JOIN titulo_receber_classif c ON (a.nr_titulo = c.nr_titulo)
LEFT OUTER JOIN movto_trans_financ f ON (a.nr_seq_movto_trans_fin = f.nr_sequencia)
LEFT OUTER JOIN adiantamento e ON (a.nr_adiantamento = e.nr_adiantamento)
WHERE (ie_restringe_estab_p = 'N' or substr(obter_se_conta_financ_estab(coalesce(c.cd_conta_financ,cd_conta_financ_cre_w),cd_estabelecimento_p,ie_restringe_estab_p),1,1) = 'S')  and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_estab(coalesce(a.nr_seq_conta_banco,e.nr_seq_conta_banco),null,a.nr_seq_caixa_rec,nm_usuario_p,f.nr_seq_caixa, cd_estabelecimento_p),1,1) = 'S')  and k.cd_empresa			= cd_empresa_p and b.cd_estabelecimento		= k.cd_estabelecimento and (ie_filtro_fluxo_proj_w = 'N' or substr(obter_se_proj_filtro_fluxo(b.nr_seq_proj_rec,nm_usuario_p),1,1) = 'S') and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p or b.cd_estab_financeiro = cd_estabelecimento_p))) and b.ie_situacao			= '5' and not exists (select	1
			from	fluxo_caixa_excecao x
			where	x.ie_integracao		= 'TR'
			and	x.ie_origem_titulo_rec	= b.ie_origem_titulo
			and	x.ie_tipo_fluxo		= 'P') and a.nr_titulo			= b.nr_titulo and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and (b.nr_titulo = a.nr_titulo and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(a.dt_credito_banco,CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END 	between dt_inicio_w and dt_final_w)  and d.ie_fluxo_passado		= 'S' and a.cd_tipo_recebimento		= d.cd_tipo_recebimento and (ie_movto_bco_pend_w in ('N','A','TP') or
			not exists (select	1
			from	movto_banco_pend_baixa x
			where	x.nr_titulo	= a.nr_titulo
			and	x.nr_seq_baixa	= a.nr_sequencia)) and (ie_adiant_receb_w in ('A','TR') or coalesce(a.nr_adiantamento::text, '') = '') and not exists (select	1
			from	movto_trans_financ x
			where ((x.nr_seq_movto_cartao IS NOT NULL AND x.nr_seq_movto_cartao::text <> '') or (x.nr_seq_cheque IS NOT NULL AND x.nr_seq_cheque::text <> ''))
			and	coalesce(x.nr_seq_titulo_receber::text, '') = ''
			and	x.nr_sequencia		= a.nr_seq_movto_trans_fin) /* Adicionado a condicao para nao chamar a function quando nao houver vl_recurso para a baixa, pois a function retornaria 0, evitando a execucao da consulta sem necessidade. Problema de performance. */

  and coalesce(a.nr_seq_retorno::text, '') = '' and coalesce(a.vl_recurso,0) = 0 and coalesce(a.ie_lib_caixa, 'S')	= 'S' and ie_tit_pagar_transf_w		= 'S' and (coalesce(ie_titulo_caixa_w,'S') = 'S' or
			not exists (select	1
			from	caixa y,
				movto_trans_financ x
			where	x.vl_transacao	<> 0
			and	coalesce(x.nr_seq_titulo_receber::text, '') = ''
			and	coalesce(y.ie_movto_fluxo,'S') = 'S'
			and	x.nr_seq_caixa		= y.nr_sequencia
			and	x.nr_seq_caixa_rec	= a.nr_seq_caixa_rec)) ) alias368
    
union all

    select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'CR' ie_integracao,
      dt_baixa,
      cd_conta_financ,
      vl_titulo,
      vl_receb_estrang,
      cd_moeda,
      cd_moeda_padrao_cr_w cd_moeda_padrao,
      0 cd_convenio,
      0 vl_juros,
      0 vl_multa,
      0 vl_desconto,
      0 vl_rec_maior,
      0 vl_outros_acrescimos,
      0 VL_OUTRAS_DESPESAS,
      0 vl_despesa_bancaria,
      0 cd_conta_financ_jcp,
      0 cd_conta_financ_mcp,
      0 cd_conta_financ_dcp,
      0 cd_conta_financ_ocp,
      0 cd_conta_financ_odp,
      0 cd_conta_financ_jcr,
      0 cd_conta_financ_mcr,
      0 cd_conta_financ_dcr,
      0 cd_conta_financ_vlm,
      0 cd_conta_financ_dbcr,
      ie_origem_titulo,
      nr_seq_classe,
      ie_contrato,
      ie_tipo_tit_rec
    from	(select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(a.dt_credito_banco,CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0) dt_baixa,
        obter_conta_financ_tit_rec(b.nr_titulo,a.nr_sequencia,coalesce(c.cd_conta_financ,coalesce((select	max(cd_conta_financ) from transacao_financeira where	nr_sequencia = CASE WHEN ie_trans_fin_conta_w='M' THEN f.nr_seq_trans_financ  ELSE a.nr_seq_trans_fin END ),cd_conta_financ_cre_w))) cd_conta_financ,
        dividir_sem_round(
          coalesce(c.vl_original,(obter_valor_tit_transf(b.nr_titulo, a.dt_recebimento, 'CR'))::numeric ),
          (obter_valor_tit_transf(b.nr_titulo, a.dt_recebimento, 'CR'))::numeric ) *
          /* Adicionado o decode para nao chamar a function quando nao houver vl_recurso para a baixa, pois a function retornaria o vl_recebido, evitando a execucao da consulta sem necessidade. Problema de performance. */

        (CASE WHEN coalesce(a.vl_recurso,0)=0 THEN a.vl_recebido  ELSE obter_vl_recurso_baixa(b.nr_titulo,a.nr_sequencia,a.vl_recebido,pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(a.dt_credito_banco,CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0)) END  + CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento),'DCR',b.cd_cgc,coalesce(b.cd_convenio_conta,obter_convenio_tit_rec(b.nr_titulo)),pkg_date_utils.start_of(a.dt_recebimento,'DD',0),b.cd_estabelecimento) IS NULL THEN 0  ELSE a.vl_descontos END ) + coalesce(a.vl_cambial_ativo,0)  vl_titulo,
        dividir_sem_round(
          coalesce(c.vl_original,(obter_valor_tit_transf(b.nr_titulo, a.dt_recebimento, 'CR'))::numeric ),
          (obter_valor_tit_transf(b.nr_titulo, a.dt_recebimento, 'CR'))::numeric ) * a.vl_recebido_estrang vl_receb_estrang,
        coalesce(a.cd_moeda,0) cd_moeda,
        b.ie_origem_titulo,
        b.nr_seq_classe,
        CASE WHEN coalesce(b.nr_seq_contrato::text, '') = '' THEN 'N'  ELSE 'S' END  ie_contrato,
        b.ie_tipo_titulo ie_tipo_tit_rec
      FROM estabelecimento k, tipo_recebimento d, titulo_receber b, titulo_receber_liq a
LEFT OUTER JOIN titulo_receber_classif c ON (a.nr_titulo = c.nr_titulo)
LEFT OUTER JOIN movto_trans_financ f ON (a.nr_seq_movto_trans_fin = f.nr_sequencia)
LEFT OUTER JOIN adiantamento e ON (a.nr_adiantamento = e.nr_adiantamento)
WHERE (ie_restringe_estab_p = 'N' or substr(obter_se_conta_financ_estab(coalesce(c.cd_conta_financ,cd_conta_financ_cre_w),cd_estabelecimento_p,ie_restringe_estab_p),1,1) = 'S')  and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_estab(coalesce(a.nr_seq_conta_banco,e.nr_seq_conta_banco),null,a.nr_seq_caixa_rec,nm_usuario_p,f.nr_seq_caixa, cd_estabelecimento_p),1,1) = 'S')  and k.cd_empresa			= cd_empresa_p and b.cd_estabelecimento		= k.cd_estabelecimento and (ie_filtro_fluxo_proj_w = 'N' or substr(obter_se_proj_filtro_fluxo(b.nr_seq_proj_rec,nm_usuario_p),1,1) = 'S') and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p or b.cd_estab_financeiro = cd_estabelecimento_p))) and b.ie_situacao			= '5' and not exists (select	1
        from	fluxo_caixa_excecao x
        where	x.ie_integracao		= 'TR'
        and	x.ie_origem_titulo_rec	= b.ie_origem_titulo
        and	x.ie_tipo_fluxo		= 'P') and a.nr_titulo			= b.nr_titulo and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and (b.nr_titulo = a.nr_titulo and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(a.dt_credito_banco,CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END 	between dt_inicio_w and dt_final_w)  and d.ie_fluxo_passado		= 'S' and a.cd_tipo_recebimento		= d.cd_tipo_recebimento and (ie_movto_bco_pend_w in ('N','A','TP') or
        not exists (select	1
        from	movto_banco_pend_baixa x
        where	x.nr_titulo	= a.nr_titulo
        and	x.nr_seq_baixa	= a.nr_sequencia)) and (ie_adiant_receb_w in ('A','TR') or coalesce(a.nr_adiantamento::text, '') = '') and not exists (select	1
        from	movto_trans_financ x
        where ((x.nr_seq_movto_cartao IS NOT NULL AND x.nr_seq_movto_cartao::text <> '') or (x.nr_seq_cheque IS NOT NULL AND x.nr_seq_cheque::text <> ''))
        and	coalesce(x.nr_seq_titulo_receber::text, '') = ''
        and	x.nr_sequencia		= a.nr_seq_movto_trans_fin) /* Adicionado a condicao para nao chamar a function quando nao houver vl_recurso para a baixa, pois a function retornaria 0, evitando a execucao da consulta sem necessidade. Problema de performance. */

  and (a.nr_seq_retorno IS NOT NULL AND a.nr_seq_retorno::text <> '') and coalesce(a.vl_recurso,0) <> 0 and (b.nr_titulo = a.nr_titulo and obter_vl_recurso_baixa(b.nr_titulo,a.nr_sequencia,0,pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(a.dt_credito_banco,CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0)) > 0) and coalesce(a.ie_lib_caixa, 'S')	= 'S' and ie_tit_pagar_transf_w		= 'S' and (coalesce(ie_titulo_caixa_w,'S') = 'S' or
        not exists (select	1
        from	caixa y,
          movto_trans_financ x
        where	x.vl_transacao	<> 0
        and	coalesce(x.nr_seq_titulo_receber::text, '') = ''
        and	coalesce(y.ie_movto_fluxo,'S') = 'S'
        and	x.nr_seq_caixa		= y.nr_sequencia
        and	x.nr_seq_caixa_rec	= a.nr_seq_caixa_rec)) ) alias452	
	) alias453
group by	ie_integracao,
	dt_baixa,
	cd_conta_financ,
	cd_moeda,
	cd_moeda_padrao,
	cd_convenio,
	vl_juros,
	vl_multa,
	vl_desconto,
	vl_rec_maior,
	vl_outros_acrescimos,
	VL_OUTRAS_DESPESAS,
	vl_despesa_bancaria,
	cd_conta_financ_jcp,
	cd_conta_financ_mcp,
	cd_conta_financ_dcp,
	cd_conta_financ_ocp,
	cd_conta_financ_odp,
	cd_conta_financ_jcr,
	cd_conta_financ_mcr,
	cd_conta_financ_dcr,
	cd_conta_financ_vlm,
	cd_conta_financ_dbcr,
	ie_origem_titulo,
	nr_seq_classe,
	ie_contrato,
	ie_tipo_tit_rec 

union all

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'CR' ie_integracao,
	pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(a.dt_credito_banco,CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0) ,
	0 cd_conta_financ,
        0 vl_titulo,
	0 vl_titulo_estrang,
	coalesce(a.cd_moeda,0),
	cd_moeda_padrao_cr_w cd_moeda_padrao,
	0 cd_convenio,
        coalesce(sum(dividir_sem_round(coalesce(c.vl_classificacao, (obter_dados_titulo_receber(b.nr_titulo, 'V'))::numeric ),
			(obter_dados_titulo_receber(b.nr_titulo, 'V'))::numeric ) * a.vl_juros),0) vl_juros,
        coalesce(sum(dividir_sem_round(coalesce(c.vl_classificacao, (obter_dados_titulo_receber(b.nr_titulo, 'V'))::numeric ),
			(obter_dados_titulo_receber(b.nr_titulo, 'V'))::numeric ) * a.vl_multa),0) vl_multa,
        coalesce(sum(dividir_sem_round(coalesce(c.vl_classificacao, (obter_dados_titulo_receber(b.nr_titulo, 'V'))::numeric ),
			(obter_dados_titulo_receber(b.nr_titulo, 'V'))::numeric ) * a.vl_descontos),0) vl_desconto,		
		coalesce(sum(dividir_sem_round(coalesce(CASE WHEN ie_tit_rec_canc_w='N' THEN c.vl_classificacao  ELSE CASE WHEN b.ie_situacao='3' THEN c.vl_original  ELSE c.vl_classificacao END  END ,
			(obter_dados_titulo_receber(b.nr_titulo, 'V'))::numeric ),
				coalesce(CASE WHEN (obter_dados_titulo_receber(b.nr_titulo, 'V'))::numeric =0 THEN c.vl_original  ELSE (obter_dados_titulo_receber(b.nr_titulo, 'V'))::numeric  END ,0)) *	vl_rec_maior),0) vl_rec_maior,		
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	coalesce(sum(dividir_sem_round(coalesce(c.vl_classificacao, (obter_dados_titulo_receber(b.nr_titulo, 'V'))::numeric ),
			(obter_dados_titulo_receber(b.nr_titulo, 'V'))::numeric ) * a.vl_despesa_bancaria),0) vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'JCR', b.cd_cgc,coalesce(b.cd_convenio_conta, obter_convenio_tit_rec(b.nr_titulo)),
				pkg_date_utils.start_of(a.dt_recebimento,'DD',0),b.cd_estabelecimento),0) cd_conta_financ_jcr,
	coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'MCR', b.cd_cgc,coalesce(b.cd_convenio_conta, obter_convenio_tit_rec(b.nr_titulo)),
				pkg_date_utils.start_of(a.dt_recebimento,'DD',0),b.cd_estabelecimento),0) cd_conta_financ_mcr,
	coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'DCR', b.cd_cgc,coalesce(b.cd_convenio_conta, obter_convenio_tit_rec(b.nr_titulo)),
				pkg_date_utils.start_of(a.dt_recebimento,'DD',0),b.cd_estabelecimento),0) cd_conta_financ_dcr,
	coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'VLM', b.cd_cgc,coalesce(b.cd_convenio_conta, obter_convenio_tit_rec(b.nr_titulo)),
				pkg_date_utils.start_of(a.dt_recebimento,'DD',0),b.cd_estabelecimento),0) cd_conta_financ_vlm,
	coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'DBCR', b.cd_cgc,coalesce(b.cd_convenio_conta, obter_convenio_tit_rec(b.nr_titulo)),
				pkg_date_utils.start_of(a.dt_recebimento,'DD',0),b.cd_estabelecimento),0) cd_conta_financ_dbcr,
	coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'GLO', b.cd_cgc,coalesce(b.cd_convenio_conta, obter_convenio_tit_rec(b.nr_titulo)),
				pkg_date_utils.start_of(a.dt_recebimento,'DD',0),b.cd_estabelecimento),0) cd_conta_financ_glosa,
	coalesce(sum(dividir_sem_round(coalesce(c.vl_classificacao, (obter_dados_titulo_receber(b.nr_titulo, 'V'))::numeric ),
			(obter_dados_titulo_receber(b.nr_titulo, 'V'))::numeric ) * a.vl_glosa),0) vl_glosa,
	b.ie_origem_titulo,
	null nr_seq_classe_tit_pag,
	b.nr_seq_classe nr_seq_classe_tit_rec,
	CASE WHEN coalesce(b.nr_seq_contrato::text, '') = '' THEN 'N'  ELSE 'S' END  ie_contrato,
	null ie_tipo_tit_pag,
	b.ie_tipo_titulo ie_tipo_tit_rec
FROM estabelecimento k, tipo_recebimento d, titulo_receber b, titulo_receber_liq a
LEFT OUTER JOIN adiantamento e ON (a.nr_adiantamento = e.nr_adiantamento)
LEFT OUTER JOIN titulo_receber_classif c ON (a.nr_titulo = c.nr_titulo)
WHERE a.nr_titulo		= b.nr_titulo  and b.cd_estabelecimento	= k.cd_estabelecimento and k.cd_empresa		= cd_empresa_p and coalesce(a.ie_lib_caixa, 'S') = 'S' and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and (b.nr_titulo = a.nr_titulo and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(a.dt_credito_banco,CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END  between dt_inicio_w  and dt_final_w) and (((b.cd_estabelecimento	= cd_estabelecimento_p or b.cd_estab_financeiro = cd_estabelecimento_p) AND ie_restringe_estab_p = 'S')
	or (b.cd_estabelecimento	= cd_estabelecimento_p AND ie_restringe_estab_p = 'E')
	or (ie_restringe_estab_p = 'N')) and not exists /* ahoffelder - 06/09/2012 - os 442630 - ja entra no fluxo pela movto_trans_financ */
 (select	1
	from	movto_trans_financ x
	where ((x.nr_seq_movto_cartao IS NOT NULL AND x.nr_seq_movto_cartao::text <> '') or (x.nr_seq_cheque IS NOT NULL AND x.nr_seq_cheque::text <> ''))
	and	coalesce(x.nr_seq_titulo_receber::text, '') = ''
	and	x.nr_sequencia	= a.nr_seq_movto_trans_fin) and coalesce(a.nr_seq_retorno::text, '') = '' 			-- edgar 18/02/2006, os 25655, ja entrou no fluxo do convenio_recebeb
  and ((ie_restringe_estab_p = 'N') or (obter_se_conta_financ_estab(coalesce(c.cd_conta_financ, cd_conta_financ_cre_w), cd_estabelecimento_p,ie_restringe_estab_p) = 'S')) and a.cd_tipo_recebimento	= d.cd_tipo_recebimento and d.ie_fluxo_passado	= 'S' and (b.ie_situacao <> '3' or ie_tit_rec_canc_w = 'S') and ((ie_filtro_fluxo_w = 'N') or (obter_se_filtro_fluxo_estab(coalesce(a.nr_seq_conta_banco,e.nr_seq_conta_banco), null, a.nr_seq_caixa_rec, nm_usuario_p, null, cd_estabelecimento_p)	= 'S')) and ((ie_filtro_fluxo_proj_w = 'N') or (obter_se_proj_filtro_fluxo(b.nr_seq_proj_rec, nm_usuario_p)	= 'S')) and (ie_adiant_receb_w in ('A','TR') or coalesce(a.nr_adiantamento::text, '') = '') and (ie_movto_bco_pend_w in ('N','A','TP') or not exists (select	1
								from	movto_banco_pend_baixa x
								where	x.nr_titulo = a.nr_titulo
								and	x.nr_seq_baixa = a.nr_sequencia)) and not exists (	select	1
			from	fluxo_caixa_excecao x
			where	x.ie_integracao		= 'TR'
			and	x.ie_origem_titulo_rec	= b.ie_origem_titulo
			and	x.ie_tipo_fluxo		= 'P') and (coalesce(ie_titulo_caixa_w,'S') = 'S' or not exists (select	1
							from	caixa y,
								movto_trans_financ x
							where	x.vl_transacao	<> 0
							and	coalesce(x.nr_seq_titulo_receber::text, '') = ''
							and	coalesce(y.ie_movto_fluxo,'S') = 'S'
							and	x.nr_seq_caixa		= y.nr_sequencia
							and	x.nr_seq_caixa_rec	= a.nr_seq_caixa_rec)) group by
	pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(a.dt_credito_banco,CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0),
	coalesce(a.cd_moeda,0),
	obter_moeda_padrao(cd_estabelecimento_p, 'R'),
	coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'JCR', b.cd_cgc,coalesce(b.cd_convenio_conta, obter_convenio_tit_rec(b.nr_titulo)),
				pkg_date_utils.start_of(a.dt_recebimento,'DD',0),b.cd_estabelecimento),0),
	coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'MCR', b.cd_cgc,coalesce(b.cd_convenio_conta, obter_convenio_tit_rec(b.nr_titulo)),
				pkg_date_utils.start_of(a.dt_recebimento,'DD',0),b.cd_estabelecimento),0),
	coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'DCR', b.cd_cgc,coalesce(b.cd_convenio_conta, obter_convenio_tit_rec(b.nr_titulo)),
				pkg_date_utils.start_of(a.dt_recebimento,'DD',0),b.cd_estabelecimento),0),
	coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'VLM', b.cd_cgc,coalesce(b.cd_convenio_conta, obter_convenio_tit_rec(b.nr_titulo)),
				pkg_date_utils.start_of(a.dt_recebimento,'DD',0),b.cd_estabelecimento),0),
	coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'DBCR', b.cd_cgc,coalesce(b.cd_convenio_conta, obter_convenio_tit_rec(b.nr_titulo)),
				pkg_date_utils.start_of(a.dt_recebimento,'DD',0),b.cd_estabelecimento),0),
	coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'GLO', b.cd_cgc,coalesce(b.cd_convenio_conta, obter_convenio_tit_rec(b.nr_titulo)),
				pkg_date_utils.start_of(a.dt_recebimento,'DD',0),b.cd_estabelecimento),0),
	ie_origem_titulo,
	b.nr_seq_classe,
	CASE WHEN coalesce(b.nr_seq_contrato::text, '') = '' THEN 'N'  ELSE 'S' END ,
	b.ie_tipo_titulo

union all

select	/*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */'CR',					/* cheque a vista */
	pkg_date_utils.start_of(coalesce(a.dt_prev_desbloqueio, coalesce(a.dt_vencimento_atual, a.dt_vencimento)), 'DD',0),
	coalesce(b.cd_conta_avista, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 0, ie_restringe_estab_p)) cd_conta_financ,
	sum(coalesce(b.vl_classificacao, a.vl_cheque)),
	sum(coalesce(dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0),0)),
	0,
	0,
	0,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	'N' ie_contrato,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
FROM estabelecimento k, cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE (ie_cheque_devolvido_w = 'S' or obter_status_cheque(a.nr_seq_cheque) <> 6) and k.cd_empresa			= cd_empresa_p and a.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p))) and (coalesce(a.dt_vencimento_atual, a.dt_vencimento) IS NOT NULL AND (coalesce(a.dt_vencimento_atual, a.dt_vencimento))::text <> '') and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and coalesce(a.dt_prev_desbloqueio, coalesce(a.dt_vencimento_atual, a.dt_vencimento)) between dt_inicio_w and dt_final_w and obter_se_cheque_cr_avista(a.nr_seq_cheque)		= 'S' and coalesce(coalesce(b.cd_conta_avista, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 0, ie_restringe_estab_p)),0)	> 0  and ((ie_filtro_fluxo_w = 'N') or (obter_se_filtro_fluxo_estab(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, nm_usuario_p, null, cd_estabelecimento_p)	= 'S'))
group	by pkg_date_utils.start_of(coalesce(a.dt_prev_desbloqueio, coalesce(a.dt_vencimento_atual, a.dt_vencimento)), 'DD',0),
	coalesce(b.cd_conta_avista, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 0, ie_restringe_estab_p))
 
union all

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'CR',					/* cheque em custodia */
	pkg_date_utils.start_of(a.dt_custodia, 'DD',0),
	coalesce(b.cd_conta_custodia,obter_conta_financ_cheque_cr(a.nr_seq_cheque,11)) cd_conta_financ,
	sum(coalesce(b.vl_classificacao, a.vl_cheque)),
	sum(coalesce(dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0),0)),
	0,
	0,
	0,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	'N' ie_contrato,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
FROM estabelecimento k, cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE (ie_cheque_devolvido_w = 'S' or obter_status_cheque(a.nr_seq_cheque) <> 6) and k.cd_empresa			= cd_empresa_p and a.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p))) and (coalesce(a.dt_vencimento_atual, a.dt_vencimento) IS NOT NULL AND (coalesce(a.dt_vencimento_atual, a.dt_vencimento))::text <> '') and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and a.dt_custodia between dt_inicio_w and dt_final_w and coalesce(coalesce(b.cd_conta_custodia, obter_conta_financ_cheque_cr(a.nr_seq_cheque,11)),0)	> 0  and ((ie_filtro_fluxo_w = 'N') or (obter_se_filtro_fluxo_estab(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, nm_usuario_p, null, cd_estabelecimento_p)	= 'S'))
group	by pkg_date_utils.start_of(a.dt_custodia, 'DD',0),
	coalesce(b.cd_conta_custodia,obter_conta_financ_cheque_cr(a.nr_seq_cheque,11))
 
union all

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'CR',					/* deposito do cheque nao a vista*/
	pkg_date_utils.start_of(coalesce(a.dt_prev_desbloqueio, a.dt_deposito), 'DD',0),
	coalesce(b.cd_conta_dep, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 2, ie_restringe_estab_p)) cd_conta_financ,
	sum(coalesce(b.vl_classificacao, a.vl_cheque)),
	sum(coalesce(dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0),0)),
	0,
	0,
	0,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	'N' ie_contrato,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
FROM estabelecimento k, cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE (ie_cheque_devolvido_w = 'S' or obter_status_cheque(a.nr_seq_cheque) <> 6) and k.cd_empresa			= cd_empresa_p and a.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p))) and (a.dt_deposito IS NOT NULL AND a.dt_deposito::text <> '') and coalesce(a.dt_prev_desbloqueio, a.dt_deposito)	between dt_inicio_w and dt_final_w and obter_se_cheque_cr_avista(a.nr_seq_cheque)		= 'N' and coalesce(coalesce(b.cd_conta_dep, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 2, ie_restringe_estab_p)),0)	> 0 and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and ((ie_filtro_fluxo_w = 'N') or (obter_se_filtro_fluxo_estab(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, nm_usuario_p, null, cd_estabelecimento_p)	= 'S'))
group	by pkg_date_utils.start_of(coalesce(a.dt_prev_desbloqueio, a.dt_deposito), 'DD',0),
	coalesce(b.cd_conta_dep, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 2, ie_restringe_estab_p))
 
union all

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'CR',					/* primeira devolucao */
	pkg_date_utils.start_of(a.dt_devolucao_banco, 'DD',0),
	coalesce(b.cd_conta_dev,obter_conta_fin_cheque_estab(a.nr_seq_cheque, 3, ie_restringe_estab_p)) cd_conta_financ,
	sum(coalesce(b.vl_classificacao, a.vl_cheque)),
	sum(coalesce(dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0),0)),
	0,
	0,
	0,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	'N' ie_contrato,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
FROM estabelecimento k, cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE (ie_cheque_devolvido_w = 'S' or obter_status_cheque(a.nr_seq_cheque) <> 6) and k.cd_empresa			= cd_empresa_p and a.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p))) and (a.dt_devolucao_banco IS NOT NULL AND a.dt_devolucao_banco::text <> '') and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and a.dt_devolucao_banco between dt_inicio_w and dt_final_w and coalesce(coalesce(b.cd_conta_dev, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 3, ie_restringe_estab_p)),0)	> 0  and ((ie_filtro_fluxo_w = 'N') or (obter_se_filtro_fluxo_estab(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, nm_usuario_p, null, cd_estabelecimento_p)	= 'S'))
group	by pkg_date_utils.start_of(a.dt_devolucao_banco, 'DD',0),
	coalesce(b.cd_conta_dev,obter_conta_fin_cheque_estab(a.nr_seq_cheque, 3, ie_restringe_estab_p)) 
 
union all

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'CR',					/* reapresentacao do cheque */
	pkg_date_utils.start_of(coalesce(a.dt_prev_seg_desbloqueio, a.dt_reapresentacao), 'DD',0),
	coalesce(b.cd_conta_reap, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 4, ie_restringe_estab_p)) cd_conta_financ,
	sum(coalesce(b.vl_classificacao, a.vl_cheque)),
	sum(coalesce(dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0),0)),
	0,
	0,
	0,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	'N' ie_contrato,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
FROM estabelecimento k, cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque
group	by pkg_date_utils.start_of(coalesce(a.dt_prev_seg_desbloqueio, a.dt_reapresentacao), 'DD',0),
	coalesce(b.cd_conta_reap, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 4, ie_restringe_estab_p)))
WHERE (ie_cheque_devolvido_w = 'S' or obter_status_cheque(a.nr_seq_cheque) <> 6) and k.cd_empresa			= cd_empresa_p and a.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p))) and (a.dt_reapresentacao IS NOT NULL AND a.dt_reapresentacao::text <> '') and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and coalesce(a.dt_prev_seg_desbloqueio, a.dt_reapresentacao) between dt_inicio_w and dt_final_w and coalesce(coalesce(b.cd_conta_reap, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 4, ie_restringe_estab_p)),0)	> 0 and ((ie_filtro_fluxo_w = 'N') or (obter_se_filtro_fluxo_estab(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, nm_usuario_p, null, cd_estabelecimento_p)	= 'S'))  
union all

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'CR',					/* segunda devolucao */
	pkg_date_utils.start_of(a.dt_seg_devolucao, 'DD',0),
	coalesce(b.cd_conta_seg_dev, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 5, ie_restringe_estab_p)) cd_conta_financ,
	sum(coalesce(b.vl_classificacao, a.vl_cheque)),
	sum(coalesce(dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0),0)),
	0,
	0,
	0,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	'N' ie_contrato,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
FROM estabelecimento k, cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque
group	by pkg_date_utils.start_of(a.dt_seg_devolucao, 'DD',0),
	coalesce(b.cd_conta_seg_dev, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 5, ie_restringe_estab_p)))
WHERE (ie_cheque_devolvido_w = 'S' or obter_status_cheque(a.nr_seq_cheque) <> 6) and k.cd_empresa			= cd_empresa_p and a.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p))) and (a.dt_seg_devolucao IS NOT NULL AND a.dt_seg_devolucao::text <> '') and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and a.dt_seg_devolucao between dt_inicio_w and dt_final_w and coalesce(coalesce(b.cd_conta_seg_dev, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 5, ie_restringe_estab_p)),0)	> 0 and ((ie_filtro_fluxo_w = 'N') or (obter_se_filtro_fluxo_estab(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, nm_usuario_p, null, cd_estabelecimento_p)	= 'S'))  
union all

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'CR',					/* segunda reapresentaco do cheque */
	pkg_date_utils.start_of(coalesce(a.dt_prev_terc_desbloqueio, a.dt_seg_reapresentacao), 'DD',0),
	coalesce(b.cd_conta_seg_reap, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 9, ie_restringe_estab_p)) cd_conta_financ,
	sum(coalesce(b.vl_classificacao, a.vl_cheque)),
	sum(coalesce(dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0),0)),
	0,
	0,
	0,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	'N' ie_contrato,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
FROM estabelecimento k, cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE (ie_cheque_devolvido_w = 'S' or obter_status_cheque(a.nr_seq_cheque) <> 6) and k.cd_empresa			= cd_empresa_p and a.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p))) and (a.dt_seg_reapresentacao IS NOT NULL AND a.dt_seg_reapresentacao::text <> '') and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and coalesce(a.dt_prev_terc_desbloqueio, a.dt_seg_reapresentacao) between dt_inicio_w and dt_final_w and coalesce(coalesce(b.cd_conta_seg_reap, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 9, ie_restringe_estab_p)),0)	> 0  and ((ie_filtro_fluxo_w = 'N') or (obter_se_filtro_fluxo_estab(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, nm_usuario_p, null, cd_estabelecimento_p)	= 'S'))
group	by pkg_date_utils.start_of(coalesce(a.dt_prev_terc_desbloqueio, a.dt_seg_reapresentacao), 'DD',0),
	coalesce(b.cd_conta_seg_reap, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 9, ie_restringe_estab_p))
 
union all

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'CR',					/* terceira devolucao */
	pkg_date_utils.start_of(a.dt_terc_devolucao, 'DD',0),
	coalesce(b.cd_conta_terc_dev, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 10, ie_restringe_estab_p)) cd_conta_financ,
	sum(coalesce(b.vl_classificacao, a.vl_cheque)),
	sum(coalesce(dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0),0)),
	0,
	0,
	0,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	'N' ie_contrato,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
FROM estabelecimento k, cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque
group	by pkg_date_utils.start_of(a.dt_terc_devolucao, 'DD',0),
	coalesce(b.cd_conta_terc_dev, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 10, ie_restringe_estab_p)))
WHERE (ie_cheque_devolvido_w = 'S' or obter_status_cheque(a.nr_seq_cheque) <> 6) and k.cd_empresa			= cd_empresa_p and a.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p))) and (a.dt_terc_devolucao IS NOT NULL AND a.dt_terc_devolucao::text <> '') and a.dt_terc_devolucao between dt_inicio_w and dt_final_w and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and coalesce(coalesce(b.cd_conta_terc_dev, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 10, ie_restringe_estab_p)),0)	> 0 and ((ie_filtro_fluxo_w = 'N') or (obter_se_filtro_fluxo_estab(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, nm_usuario_p, null, cd_estabelecimento_p)	= 'S'))  
union all

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'CR',					/* devolucao paciente */
	pkg_date_utils.start_of(a.dt_devolucao, 'DD',0),
	coalesce(b.cd_conta_dev_pac, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 6, ie_restringe_estab_p)) cd_conta_financ,
	sum(coalesce(b.vl_classificacao, a.vl_cheque)),
	sum(coalesce(dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0),0)),
	0,
	0,
	0,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	'N' ie_contrato,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
FROM estabelecimento k, cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque
group	by pkg_date_utils.start_of(a.dt_devolucao, 'DD',0),
	coalesce(b.cd_conta_dev_pac, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 6, ie_restringe_estab_p)))
WHERE (ie_cheque_devolvido_w = 'S' or obter_status_cheque(a.nr_seq_cheque) <> 6) and k.cd_empresa			= cd_empresa_p and a.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p))) and (a.dt_devolucao IS NOT NULL AND a.dt_devolucao::text <> '') and a.dt_devolucao between dt_inicio_w and dt_final_w and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and coalesce(coalesce(b.cd_conta_dev_pac, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 6, ie_restringe_estab_p)),0)	> 0 and ((ie_filtro_fluxo_w = 'N') or (obter_se_filtro_fluxo_estab(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, nm_usuario_p, null, cd_estabelecimento_p)	= 'S'))  
union all

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'CR',
	pkg_date_utils.start_of(a.dt_baixa, 'DD',0),
	coalesce(c.cd_conta_financ,obter_conta_financ_cartao_cr(b.nr_sequencia)) cd_conta_financ,
	dividir_sem_round(coalesce(c.vl_classificacao, b.vl_transacao),b.vl_transacao) * CASE WHEN coalesce(ie_despesa_cartao_w,'N')='S' THEN coalesce(a.vl_baixa,0) + coalesce(a.vl_despesa,0)  ELSE a.vl_baixa END ,
	0 vl_baixa_estrang,
	0,
	0,
	0,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	'N' ie_contrato,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
FROM estabelecimento k, movto_cartao_cr_baixa a, movto_cartao_cr b
LEFT OUTER JOIN movto_cartao_cr_classif c ON (b.nr_sequencia = c.nr_seq_movto)
WHERE a.nr_seq_movto			= b.nr_sequencia and ((ie_filtro_fluxo_w = 'N') or (obter_se_filtro_fluxo_estab(a.nr_seq_conta_banco, null, null, nm_usuario_p, null, cd_estabelecimento_p)	= 'S'))  and k.cd_empresa			= cd_empresa_p and b.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(b.cd_estabelecimento) = cd_estabelecimento_p))) and a.dt_baixa between dt_inicio_w and dt_final_w and cd_moeda_empresa_w = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - So traz registro para moeda padrao
  and coalesce(c.cd_conta_financ,coalesce(obter_conta_financ_cartao_cr(b.nr_sequencia),0))	> 0 and coalesce(b.dt_cancelamento::text, '') = ''
 
union all

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'RC' ie_integracao,
	pkg_date_utils.start_of(coalesce(coalesce(a.dt_recebimento, a.dt_liberacao), a.dt_fluxo_caixa), 'DD',0),
	0,
	sum(CASE WHEN a.vl_deposito=0 THEN a.vl_recebimento  ELSE a.vl_deposito END ),
	sum(coalesce(a.vl_moeda_original,0)),
	0,
	0,
	a.cd_convenio,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	'N' ie_contrato,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
from	estabelecimento k,
	convenio_receb a
where	a.cd_estabelecimento	= k.cd_estabelecimento
and	k.cd_empresa		= cd_empresa_p
and (a.cd_estabelecimento	= cd_estabelecimento_p or ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p)))
and	((ie_filtro_fluxo_w = 'N') or (obter_se_filtro_fluxo_estab(a.nr_seq_conta_banco, null, null, nm_usuario_p, null, cd_estabelecimento_p)	= 'S'))
and	coalesce(coalesce(a.dt_recebimento, a.dt_liberacao), a.dt_fluxo_caixa) between dt_inicio_w and dt_final_w
and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
and	ie_convenio_receb_w				= 'S'
and	coalesce(ie_integrar_cb_fluxo,'S')			= 'S'
group 	by pkg_date_utils.start_of(coalesce(coalesce(a.dt_recebimento, a.dt_liberacao), a.dt_fluxo_caixa), 'DD',0),
	a.cd_convenio

union all

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'RC' ie_integracao,			-- edgar 
	pkg_date_utils.start_of(a.dt_estorno, 'DD',0),
	0,
	sum(a.vl_estorno) * -1,
	sum(coalesce(b.vl_moeda_original,0)) * -1,
	0,
	0,
	b.cd_convenio,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	'N' ie_contrato,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
from	estabelecimento k,
	convenio_receb b,
	convenio_receb_estorno a
where	b.cd_estabelecimento	= k.cd_estabelecimento
and	k.cd_empresa		= cd_empresa_p
and (b.cd_estabelecimento	= cd_estabelecimento_p or ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(b.cd_estabelecimento) = cd_estabelecimento_p)))
and	((ie_filtro_fluxo_w = 'N') or (obter_se_filtro_fluxo_estab(b.nr_seq_conta_banco, null, null, nm_usuario_p, null, cd_estabelecimento_p)	= 'S'))
and	a.dt_estorno between dt_inicio_w and dt_final_w
and	coalesce(b.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
and	a.nr_seq_receb					= b.nr_sequencia
and	coalesce(b.ie_integrar_cb_fluxo,'S')			= 'S'
and	ie_conv_receb_estorno_w				= 'S'
group 	by pkg_date_utils.start_of(a.dt_estorno, 'DD',0),
	b.cd_convenio

union all

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	CASE WHEN coalesce(a.nr_seq_caixa::text, '') = '' THEN  'CB'  ELSE 'T' END  ie_integracao,
	pkg_date_utils.start_of(a.dt_transacao,'DD',0),
	coalesce(a.cd_conta_financ, coalesce(d.cd_conta_financ, b.cd_conta_financ)),
	sum(coalesce(d.vl_transacao, a.vl_transacao)) -
		sum(CASE WHEN ie_adiant_pago_w='TC' THEN CASE WHEN b.ie_acao=13 THEN 0  ELSE (select	coalesce(sum(x.vl_adiantamento),0)								from	titulo_pagar_adiant x								where	x.nr_adiantamento	= a.nr_adiant_pago) END   ELSE 0 END ),
	sum(coalesce(d.vl_transacao_estrang, a.vl_transacao_estrang)) -
		sum(CASE WHEN ie_adiant_pago_w='TC' THEN CASE WHEN b.ie_acao=13 THEN 0  ELSE (select	coalesce(sum(x.vl_adto_estrang),0)								from	titulo_pagar_adiant x								where	x.nr_adiantamento	= a.nr_adiant_pago) END   ELSE 0 END ),
	0,
	obter_moeda_padrao(obter_estab_movto_trans_financ(a.nr_seq_caixa, a.nr_seq_banco), 'R') cd_moeda_padrao,
	0 cd_convenio,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	'N' ie_contrato,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
FROM transacao_financeira b, movto_trans_financ a
LEFT OUTER JOIN caixa c ON (a.nr_seq_caixa = c.nr_sequencia)
LEFT OUTER JOIN movto_trans_financ_cc d ON (a.nr_sequencia = d.nr_seq_movto_trans)
WHERE a.nr_seq_trans_financ 	= b.nr_sequencia and ((ie_filtro_fluxo_w = 'N') or (obter_se_filtro_fluxo_estab(a.nr_seq_banco, null, a.nr_seq_caixa_rec, nm_usuario_p, a.nr_seq_caixa, cd_estabelecimento_p)	= 'S'))   and a.dt_transacao between dt_inicio_w and dt_final_w and a.vl_transacao <> 0 and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and ( ( (ie_restringe_estab_p = 'E') and (obter_estab_movto_trans_financ(a.nr_seq_caixa, a.nr_seq_banco) = cd_estabelecimento_p) ) or 
      ( (ie_restringe_estab_p = 'S') and ( (obter_estab_movto_trans_financ(a.nr_seq_caixa, a.nr_seq_banco) = cd_estabelecimento_p) or (obter_estab_financeiro(obter_estab_movto_trans_financ(a.nr_seq_caixa, a.nr_seq_banco)) = cd_estabelecimento_p) ) ) or (ie_restringe_estab_p = 'N') ) and obter_empresa_estab(obter_estab_movto_trans_financ(a.nr_seq_caixa, a.nr_seq_banco))	= cd_empresa_p and ((ie_filtro_fluxo_proj_w = 'N') or (obter_se_proj_filtro_fluxo(a.nr_seq_proj_rec, nm_usuario_p)	= 'S')) and coalesce(a.nr_seq_titulo_pagar::text, '') = '' and coalesce(a.nr_seq_titulo_receber::text, '') = '' and (coalesce(a.nr_seq_conv_receb::text, '') = '' or
	 ie_convenio_receb_w	= 'N')  		-- edgar 19/07/2007, os 63280, caso o recebimento de con nao entre no fluxo entao mvto banco entra
  and (not exists 				-- edgar 16/03/2007, os 52569, trazer somente adintamentos que nao tenham sido baixados no titulo
	(select	1
	from	titulo_pagar_adiant x
	where	x.nr_adiantamento	= a.nr_adiant_pago) or ie_adiant_pago_w in ('CB','TC')) and (ie_adiant_pago_w in ('A','CB','TC') or coalesce(a.nr_adiant_pago::text, '') = '') and (not exists (select	1
	from	titulo_receber_liq x
	where	x.nr_adiantamento	= a.nr_adiantamento) or ie_adiant_receb_w = 'CB') and (ie_adiant_receb_w in ('A','CB') or coalesce(a.nr_adiantamento::text, '') = '') and (not exists (select	1
			from	movto_banco_pend x
			where	x.nr_seq_movto_trans_fin = a.nr_sequencia
			and	x.vl_saldo = 0
			and	ie_movto_bco_pend_w in ('A','TP'))
	or ie_movto_bco_pend_w in ('CB','N')) and coalesce(a.cd_conta_financ, coalesce(d.cd_conta_financ, b.cd_conta_financ))	is not null and coalesce(c.ie_movto_fluxo, 'S')	= 'S' and (ie_filtro_banco_w = 'S' or (coalesce(a.ie_origem_lancamento, CASE WHEN coalesce(a.nr_seq_caixa::text, '') = '' THEN  'C'  ELSE 'T' END ) = CASE WHEN coalesce(a.nr_seq_caixa::text, '') = '' THEN  'C'  ELSE 'T' END ))  -- ie_origem_lancamento -- edgar 31/03/2008, os 87684
  and ((ie_restringe_estab_p = 'N') or (obter_se_conta_financ_estab(coalesce(a.cd_conta_financ, coalesce(d.cd_conta_financ, b.cd_conta_financ)), cd_estabelecimento_p,ie_restringe_estab_p) = 'S'))
group 	by CASE WHEN coalesce(a.nr_seq_caixa::text, '') = '' THEN  'CB'  ELSE 'T' END ,
	pkg_date_utils.start_of(a.dt_transacao,'DD',0),
	coalesce(a.cd_conta_financ, coalesce(d.cd_conta_financ, b.cd_conta_financ)),
	obter_moeda_padrao(obter_estab_movto_trans_financ(a.nr_seq_caixa, a.nr_seq_banco), 'R'),
	a.cd_centro_custo
 
union all

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'CP',							/* cheques pagos a compensar */
	pkg_date_utils.start_of(a.dt_emissao,'DD',0),
	obter_conta_financ_cheque_cp(a.nr_sequencia, 1) cd_conta_financ,
	sum(a.vl_cheque),
	sum(coalesce(a.vl_cheque_estrang,0)),
	0,
	0,
	0,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	'N' ie_contrato,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
from	cheque a,
	estabelecimento k
where	k.cd_empresa			= cd_empresa_p
and	a.cd_estabelecimento		= k.cd_estabelecimento
and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p)))
and	((ie_filtro_fluxo_w = 'N') or (obter_se_filtro_fluxo_estab(a.nr_seq_conta_banco, null, null, nm_usuario_p, null, cd_estabelecimento_p)	= 'S'))
and	coalesce(a.dt_cancelamento::text, '') = ''
and	dt_emissao between dt_inicio_w and dt_final_w
and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
and	obter_conta_financ_cheque_cp(a.nr_sequencia, 1)		> 0
and	((ie_cheque_cp_mes_w = 'N') or (pkg_date_utils.start_of(dt_emissao, 'MONTH',0) <> PKG_DATE_UTILS.start_of(coalesce(a.dt_compensacao, PKG_DATE_UTILS.ADD_MONTH(a.dt_emissao, 1,0)), 'MONTH', 0)))
group	by pkg_date_utils.start_of(dt_emissao,'DD',0),
	obter_conta_financ_cheque_cp(a.nr_sequencia, 1)

union all

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'CP',							/* cheques pagos compensados */
	pkg_date_utils.start_of(a.dt_compensacao,'DD',0),
	obter_conta_financ_cheque_cp(a.nr_sequencia, 2) cd_conta_financ,
	sum(a.vl_cheque),
	sum(coalesce(a.vl_cheque_estrang,0)),
	0,
	0,
	0,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	'N' ie_contrato,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
from	cheque a,
	estabelecimento k
where	k.cd_empresa			= cd_empresa_p
and	a.cd_estabelecimento		= k.cd_estabelecimento
and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p)))
and	((ie_filtro_fluxo_w = 'N') or (obter_se_filtro_fluxo_estab(a.nr_seq_conta_banco, null, null, nm_usuario_p, null, cd_estabelecimento_p)	= 'S'))
and	coalesce(a.dt_cancelamento::text, '') = ''
and	a.dt_compensacao			between dt_inicio_w and dt_final_w
and	(a.dt_compensacao IS NOT NULL AND a.dt_compensacao::text <> '')
and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
and	obter_conta_financ_cheque_cp(a.nr_sequencia, 2)		> 0
and	((ie_cheque_cp_mes_w = 'N') or (pkg_date_utils.start_of(dt_emissao, 'MONTH',0) <> PKG_DATE_UTILS.start_of(coalesce(a.dt_compensacao, PKG_DATE_UTILS.ADD_MONTH(a.dt_emissao, 1,0)), 'MONTH', 0)))
group	by pkg_date_utils.start_of(a.dt_compensacao,'DD',0),
	obter_conta_financ_cheque_cp(a.nr_sequencia, 2)

union all

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'CP',							/* cheques pagos compensados pela conta do titulo */
	dt_baixa,
	cd_conta_financ,
	sum(vl_baixa) vl_baixa,
	sum(vl_baixa_estrang) vl_baixa_estrang,
	cd_moeda,
	cd_moeda_padrao_cp_w cd_moeda_padrao,
	0 cd_convenio,
	round((((sum(vl_baixa) * 100) / coalesce(max(vl_titulo),max(vl_alteracao)))/100) * sum(vl_juros),4) vl_juros, --OS 1649103, ratear o valor de juros
	--(dividir_sem_round(coalesce(sum(vl_titulo),sum(vl_alteracao)),sum(vl_alteracao)) * sum(vl_juros)) vl_juros,
	round((((sum(vl_baixa) * 100) / coalesce(max(vl_titulo),max(vl_alteracao)))/100) * sum(vl_multa),4) vl_multa, --OS 1649103, ratear o valor de multa
	--(dividir_sem_round(coalesce(sum(vl_titulo),sum(vl_alteracao)),sum(vl_alteracao)) * sum(vl_multa)) vl_multa,
	round((((sum(vl_baixa) * 100) / coalesce(max(vl_titulo),max(vl_alteracao)))/100) * sum(vl_juros),4) vl_desconto, --OS 1649103, ratear o valor de desconto
	--(dividir_sem_round(coalesce(sum(vl_titulo),sum(vl_alteracao)),sum(vl_alteracao)) * sum(vl_descontos)) vl_desconto,
	0 vl_rec_maior,
	(dividir_sem_round(coalesce(sum(vl_titulo),sum(vl_alteracao)),sum(vl_alteracao)) * sum(vl_outros_acrescimos)) vl_outros_acrescimos,
	(dividir_sem_round(coalesce(sum(vl_titulo),sum(vl_alteracao)),sum(vl_alteracao)) * sum(VL_OUTRAS_DESPESAS)) VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	cd_conta_financ_jcp,
	cd_conta_financ_mcp,
	cd_conta_financ_dcp,
	cd_conta_financ_ocp,
	cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	ie_contrato,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
from	(select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	pkg_date_utils.start_of(a.dt_compensacao,'DD',0) dt_baixa,
		d.nr_seq_conta_financ cd_conta_financ,
		c.vl_baixa * (d.vl_titulo/CASE WHEN (obter_dados_tit_pagar(e.nr_titulo, 'VT'))::numeric =0 THEN e.vl_titulo  ELSE (obter_dados_tit_pagar(e.nr_titulo, 'VT'))::numeric  END ) vl_baixa,
		c.vl_baixa_estrang * (d.vl_titulo/CASE WHEN (obter_dados_tit_pagar(e.nr_titulo, 'VT'))::numeric =0 THEN e.vl_titulo  ELSE (obter_dados_tit_pagar(e.nr_titulo, 'VT'))::numeric  END ) vl_baixa_estrang,
		e.cd_moeda,
		(obter_dados_tit_pagar(e.nr_titulo,'VT'))::numeric  vl_alteracao,
		coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(e.cd_estabelecimento),'JCP',e.cd_cgc,null,pkg_date_utils.start_of(a.dt_compensacao,'DD',0),e.cd_estabelecimento),0) cd_conta_financ_jcp,
		coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(e.cd_estabelecimento),'MCP',e.cd_cgc,null,pkg_date_utils.start_of(a.dt_compensacao,'DD',0),e.cd_estabelecimento),0) cd_conta_financ_mcp,
		coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(e.cd_estabelecimento),'DCP',e.cd_cgc,null,pkg_date_utils.start_of(a.dt_compensacao,'DD',0),e.cd_estabelecimento),0) cd_conta_financ_dcp,
		coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(e.cd_estabelecimento),'OCP',e.cd_cgc,null,pkg_date_utils.start_of(a.dt_compensacao,'DD',0),e.cd_estabelecimento),0) cd_conta_financ_ocp,
		coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(e.cd_estabelecimento),'ODP',e.cd_cgc,null,pkg_date_utils.start_of(a.dt_compensacao,'DD',0),e.cd_estabelecimento),0) cd_conta_financ_odp,
		CASE WHEN coalesce(e.nr_seq_contrato::text, '') = '' THEN 'N'  ELSE 'S' END  ie_contrato,
		c.vl_juros,
		c.vl_multa,
		c.vl_descontos,
		c.vl_outros_acrescimos,
		coalesce(c.VL_OUTRAS_DESPESAS,0) VL_OUTRAS_DESPESAS,
		e.vl_titulo,
		c.nr_sequencia, /*tive que colocar o nr_sequencua aqui pois como trata com union e os dados sao iguais, apresenta apenas uma linha. e colocando o nr_sequencia, vem sequencias diferentes e apresenta  aamfirmo OS 821371*/
		c.nr_titulo, /*tive que colocar o nr_titulo aqui pois como trata com union e os dados sao iguais, apresenta apenas uma linha. e colocando o nr_sequencia, vem sequencias diferentes e apresenta  aamfirmo OS 862729*/
		d.nr_sequencia /*tive que colocar o nr_titulo aqui pois como trata com union e os dados sao iguais, apresenta apenas uma linha. e colocando o nr_sequencia, vem sequencias diferentes e apresenta  aamfirmo OS 890049*/
	from	tipo_baixa_cpa f,
		titulo_pagar e,
		titulo_pagar_classif d,
		titulo_pagar_baixa c,
		cheque_bordero_titulo b,
		cheque a,
		estabelecimento k
	where	a.nr_sequencia		= b.nr_seq_cheque
	and	e.nr_titulo		= d.nr_titulo
	and	e.nr_titulo		= c.nr_titulo
	and	c.nr_bordero		= b.nr_bordero
	and	b.nr_titulo		= e.nr_titulo
	and	c.cd_tipo_baixa		= f.cd_tipo_baixa
	and	f.ie_fluxo_passado_cheque	= 'S'
	and	k.cd_empresa			= cd_empresa_p
	and	a.cd_estabelecimento		= k.cd_estabelecimento
	and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p)))
	and	((ie_filtro_fluxo_w = 'N') or (obter_se_filtro_fluxo_estab(a.nr_seq_conta_banco, null, null, nm_usuario_p, null, cd_estabelecimento_p)	= 'S'))
	and	coalesce(a.dt_cancelamento::text, '') = ''
	and	coalesce(obter_conta_financ_cheque_cp(a.nr_sequencia, 2)::text, '') = ''
	and	a.dt_compensacao			between dt_inicio_w and dt_final_w
	and	coalesce(c.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
	and	(a.dt_compensacao IS NOT NULL AND a.dt_compensacao::text <> '')
	and	(d.nr_seq_conta_financ IS NOT NULL AND d.nr_seq_conta_financ::text <> '')
	/*union
	select	pkg_date_utils.start_of(a.dt_compensacao,'DD',0) dt_baixa,
		d.nr_seq_conta_financ cd_conta_financ,
		c.vl_baixa * (d.vl_titulo/decode(to_number(obter_dados_tit_pagar(e.nr_titulo, 'VT')),0,e.vl_titulo,to_number(obter_dados_tit_pagar(e.nr_titulo, 'VT')))) vl_baixa,
		c.vl_baixa_estrang * (d.vl_titulo/decode(to_number(obter_dados_tit_pagar(e.nr_titulo, 'VT')),0,e.vl_titulo,to_number(obter_dados_tit_pagar(e.nr_titulo, 'VT')))) vl_baixa_estrang,
		e.cd_moeda,
		to_number(obter_dados_tit_pagar(e.nr_titulo,'VT')) vl_alteracao,
		coalesce(obter_conta_financ_regra_fc(cd_empresa_p,'JCP',e.cd_cgc,null,pkg_date_utils.start_of(a.dt_compensacao,'DD',0),cd_estabelecimento_p),0) cd_conta_financ_jcp,
		coalesce(obter_conta_financ_regra_fc(cd_empresa_p,'MCP',e.cd_cgc,null,pkg_date_utils.start_of(a.dt_compensacao,'DD',0),cd_estabelecimento_p),0) cd_conta_financ_mcp,
		coalesce(obter_conta_financ_regra_fc(cd_empresa_p,'DCP',e.cd_cgc,null,pkg_date_utils.start_of(a.dt_compensacao,'DD',0),cd_estabelecimento_p),0) cd_conta_financ_dcp,
		coalesce(obter_conta_financ_regra_fc(cd_empresa_p,'OCP',e.cd_cgc,null,pkg_date_utils.start_of(a.dt_compensacao,'DD',0),cd_estabelecimento_p),0) cd_conta_financ_ocp,
		coalesce(obter_conta_financ_regra_fc(cd_empresa_p,'ODP',e.cd_cgc,null,pkg_date_utils.start_of(a.dt_compensacao,'DD',0),cd_estabelecimento_p),0) cd_conta_financ_odp,
		decode(e.nr_seq_contrato,null,'N','S') ie_contrato,
		c.vl_juros,
		c.vl_multa,
		c.vl_descontos,
		c.vl_outros_acrescimos,
		coalesce(c.VL_OUTRAS_DESPESAS,0) VL_OUTRAS_DESPESAS,
		e.vl_titulo,
		c.nr_sequencia, --tive que colocar o nr_sequencua aqui pois como trata com union e os dados sao iguais, apresenta apenas uma linha. e colocando o nr_sequencia, vem sequencias diferentes e apresenta  aamfirmo OS 821371
		c.nr_titulo, --tive que colocar o nr_titulo aqui pois como trata com union e os dados sao iguais, apresenta apenas uma linha. e colocando o nr_sequencia, vem sequencias diferentes e apresenta  aamfirmo OS 862729
		d.nr_sequencia --tive que colocar o nr_titulo aqui pois como trata com union e os dados sao iguais, apresenta apenas uma linha. e colocando o nr_sequencia, vem sequencias diferentes e apresenta  aamfirmo OS 890049
	from	tipo_baixa_cpa f,
		titulo_pagar e,
		titulo_pagar_classif d,
		titulo_pagar_baixa c,
		cheque_bordero_titulo b,
		cheque a,
		estabelecimento k
	where	a.nr_sequencia		= b.nr_seq_cheque
	and	e.nr_titulo		= d.nr_titulo
	and	e.nr_titulo		= c.nr_titulo
	--and	c.nr_bordero		= b.nr_bordero Aqui obriga a baixa do gerada no titulo estar vinculada a um bordero, para baixas geradas com cheque, mas nao pelo bordero

	and	b.nr_titulo		= e.nr_titulo
	and	c.cd_tipo_baixa		= f.cd_tipo_baixa
	and	f.ie_fluxo_passado_cheque	= 'S'
	and	k.cd_empresa			= cd_empresa_p
	and	a.cd_estabelecimento		= k.cd_estabelecimento
	and	(ie_restringe_estab_p = 'N' or
		(ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or
		(ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p)))
	and	((ie_filtro_fluxo_w = 'N') or (obter_se_filtro_fluxo_estab(a.nr_seq_conta_banco, null, null, nm_usuario_p, null, cd_estabelecimento_p)	= 'S'))
	and	a.dt_cancelamento 			is null
	and	obter_conta_financ_cheque_cp(a.nr_sequencia, 2)		is null
	and	a.dt_compensacao			between dt_inicio_w and dt_final_w
	and	coalesce(c.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
	and	a.dt_compensacao			is not null
	and	d.nr_seq_conta_financ is not null*/
	) alias1220
group	by dt_baixa,
	cd_conta_financ,
	ie_contrato,
	cd_moeda,
	cd_conta_financ_jcp,
	cd_conta_financ_mcp,
	cd_conta_financ_dcp,
	cd_conta_financ_ocp,
	cd_conta_financ_odp

union all

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'CP',					/* acumular cheques pagos a compensar no primeiro dia do fluxo */
	dt_inicio_p,
	obter_conta_financ_cheque_cp(a.nr_sequencia, 1) cd_conta_financ,
	sum(a.vl_cheque),
	sum(coalesce(a.vl_cheque_estrang,0)),
	0,
	0,
	0,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	'N' ie_contrato,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
from	cheque a,
	estabelecimento k
where	k.cd_empresa			= cd_empresa_p
and	a.cd_estabelecimento		= k.cd_estabelecimento
and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p)))
and	((ie_filtro_fluxo_w = 'N') or (obter_se_filtro_fluxo_estab(a.nr_seq_conta_banco, null, null, nm_usuario_p, null, cd_estabelecimento_p)	= 'S'))
and	coalesce(a.dt_cancelamento::text, '') = ''
and	a.dt_emissao			< dt_inicio_w
and (coalesce(a.dt_compensacao::text, '') = '' or a.dt_compensacao > dt_final_p)
and	obter_conta_financ_cheque_cp(a.nr_sequencia, 1)	> 0
and	ie_cheque_pago_pend_w		= 'S'
and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
and	((ie_cheque_cp_mes_w = 'N') or (pkg_date_utils.start_of(dt_emissao, 'MONTH',0) <> PKG_DATE_UTILS.start_of(coalesce(a.dt_compensacao, PKG_DATE_UTILS.ADD_MONTH(a.dt_emissao, 1,0)), 'MONTH', 0)))
group	by obter_conta_financ_cheque_cp(a.nr_sequencia, 1)

union all
  -- dsantos, 15/06/2010 os 212074
select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'CP',
	pkg_date_utils.start_of(b.dt_emissao,'DD',0),
	c.cd_conta_financ cd_conta_financ,
	sum(a.vl_tributo),
	0,
	b.cd_moeda,
	cd_moeda_padrao_cp_w cd_moeda_padrao,
	0,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	b.ie_origem_titulo,
	b.nr_seq_classe nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	CASE WHEN coalesce(b.nr_seq_contrato::text, '') = '' THEN 'N'  ELSE 'S' END  ie_contrato,
	null ie_tipo_tit_pag,
	b.ie_tipo_titulo ie_tipo_tit_rec
from	tributo c,
	titulo_receber_trib a,
	titulo_receber b,
	estabelecimento k
where	c.cd_tributo			= a.cd_tributo
and	((ie_filtro_fluxo_w = 'N') or (obter_se_filtro_fluxo_estab(b.nr_seq_conta_banco, null, null, nm_usuario_p, null, cd_estabelecimento_p)	= 'S'))
and	a.nr_titulo				= b.nr_titulo
and	k.cd_empresa			= cd_empresa_p
and	b.cd_estabelecimento		= k.cd_estabelecimento
and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(b.cd_estabelecimento) = cd_estabelecimento_p)))
and	b.ie_situacao			<> '3'
and	(c.cd_conta_financ IS NOT NULL AND c.cd_conta_financ::text <> '')
and	a.ie_origem_tributo			= 'D'
and	b.dt_emissao			between dt_inicio_w and dt_final_w
and	cd_moeda_empresa_w = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - So traz registro para moeda nacional
and	((ie_filtro_fluxo_proj_w = 'N') or (obter_se_proj_filtro_fluxo(b.nr_seq_proj_rec, nm_usuario_p)	= 'S'))
group by	pkg_date_utils.start_of(b.dt_emissao,'DD',0),
	c.cd_conta_financ,
	b.ie_origem_titulo,
	b.nr_seq_classe,
	CASE WHEN coalesce(b.nr_seq_contrato::text, '') = '' THEN 'N'  ELSE 'S' END ,
	b.ie_tipo_titulo,
	b.cd_moeda

union all

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'PR',
	pkg_date_utils.start_of(a.dt_referencia,'DD',0),
	a.cd_conta_financ cd_conta_financ,
	sum(a.vl_movimento),
	0,
	0,
	0,
	0,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	'N' ie_contrato,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
from	projeto_recurso_fin a
where	(a.cd_conta_financ IS NOT NULL AND a.cd_conta_financ::text <> '')
and	a.dt_referencia		between dt_inicio_w and dt_final_w
and	cd_moeda_empresa_w = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - So traz registros para moeda nacional
and	((ie_filtro_fluxo_proj_w = 'N') or (obter_se_proj_filtro_fluxo(a.nr_seq_proj_rec, nm_usuario_p)	= 'S'))
group by	pkg_date_utils.start_of(a.dt_referencia,'DD',0),
	a.cd_conta_financ

union all

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'CB',
	pkg_date_utils.start_of(a.dt_transacao,'DD',0),
	a.cd_conta_financ_inf cd_conta_financ,
	sum(obter_saldo_banco_diario(nr_seq_saldo_banco,fim_dia(dt_transacao))) vl_saldo_final,
	sum(obter_saldo_banco_diario_estr(nr_seq_saldo_banco,fim_dia(dt_transacao))) vl_saldo_estrang,
	0,
	0,
	0,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	'N' ie_contrato,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
from (select	distinct
		pkg_date_utils.start_of(a.dt_transacao,'DD',0) dt_transacao,
		a.nr_seq_saldo_banco,
		a.nr_seq_banco,
		b.cd_conta_financ_inf
	from	movto_trans_financ a,
		banco_estabelecimento b
	where	a.nr_seq_banco	= b.nr_sequencia
	and	substr(obter_se_conta_financ_estab(b.cd_conta_financ_inf, cd_estabelecimento_p,ie_restringe_estab_p),1,1) = 'S'
	and	b.cd_empresa			= cd_empresa_p
	and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p)))
	and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
	and (ie_periodo_p = 'D' and a.dt_transacao	between dt_inicio_w and dt_final_w)) a
group by	pkg_date_utils.start_of(a.dt_transacao,'DD',0),
	a.cd_conta_financ_inf

union all

select /*+ opt_param('optimizer_index_cost_adj',100) opt_param('optimizer_index_caching',70) */	'CB',
	pkg_date_utils.start_of(a.dt_transacao,'MONTH',0),
	a.cd_conta_financ_inf cd_conta_financ,
	sum(obter_saldo_banco(nr_seq_banco,fim_dia(dt_transacao))) vl_saldo_final,
	sum(OBTER_SALDO_BANCO_ESTRANG(nr_seq_banco,fim_dia(dt_transacao))) vl_saldo_estrang,
	0,
	0,
	0,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	'N' ie_contrato,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
from (select	distinct
		pkg_date_utils.start_of(a.dt_transacao,'MONTH',0) dt_transacao,
		a.nr_seq_banco,
		b.cd_conta_financ_inf
	from	movto_trans_financ a,
		banco_estabelecimento b
	where	a.nr_seq_banco	= b.nr_sequencia
	and	substr(obter_se_conta_financ_estab(b.cd_conta_financ_inf, cd_estabelecimento_p,ie_restringe_estab_p),1,1) = 'S'
	and	b.cd_empresa			= cd_empresa_p
	and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p)))
	and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
	and (ie_periodo_p = 'M' and a.dt_transacao	between dt_inicio_w and dt_final_w)) a
group by	pkg_date_utils.start_of(a.dt_transacao,'MONTH',0),
	a.cd_conta_financ_inf;
	

c020 CURSOR FOR
	SELECT	cd_conta_financ
	from	conta_financeira
	where	CASE WHEN ie_somente_ativa_p='S' THEN ie_situacao  ELSE 'A' END  = 'A'
	and (cd_empresa		= cd_empresa_p or cd_estabelecimento = cd_estabelecimento_p)
	and	((ie_restringe_estab_p = 'N') or (obter_se_conta_financ_estab(cd_conta_financ, cd_estabelecimento_p,ie_restringe_estab_p) = 'S'))
	and	coalesce(ie_todas_contas_p,'N') = 'S';	


BEGIN

dt_inicio_w		:= pkg_date_utils.start_of(dt_inicio_p,'DD',0);
dt_final_w		:= fim_dia(dt_final_p);
dt_inicio_mes_w		:= pkg_date_utils.start_of(dt_inicio_p,'MONTH',0);
dt_final_mes_w		:= pkg_date_utils.start_of(dt_final_p,'MONTH',0);
dt_final_fim_mes_w	:= fim_mes(dt_final_p);

/* Projeto Multimoeda - Busca a moeda padrao da empresa e verifica o parametro cd_moeda passado na procedure. Ele sera a base da busca dos dados
		em moeda estrangeira. Caso o parametro seja nulo, devera ser considerada a moeda padrao da empresa nas consultas,
		caso contrario ira buscar somente os dados na moeda selecionada.*/
select obter_moeda_padrao_empresa(cd_estabelecimento_p,'E')
into STRICT cd_moeda_empresa_w
;
if (coalesce(cd_moeda_p::text, '') = '') then
	cd_moeda_estrang_w := cd_moeda_empresa_w;
else
	cd_moeda_estrang_w := cd_moeda_p;
end if;

select	coalesce(max('S'),'N')
into STRICT	ie_filtro_fluxo_w
from	w_filtro_fluxo
where	nm_usuario	= nm_usuario_p
and	coalesce(nr_seq_proj_rec::text, '') = '';

select	coalesce(max('S'),'N')
into STRICT	ie_filtro_fluxo_proj_w
from	w_filtro_fluxo
where	nm_usuario	= nm_usuario_p
and	(nr_seq_proj_rec IS NOT NULL AND nr_seq_proj_rec::text <> '');

select	coalesce(max('S'),'N')
into STRICT	ie_filtro_banco_w
from	w_filtro_fluxo
where	nm_usuario	= nm_usuario_p
and	(cd_banco IS NOT NULL AND cd_banco::text <> '')
and	coalesce(nr_seq_proj_rec::text, '') = '';

ie_fechamento_w := obter_param_usuario(830, 22, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_fechamento_w);
ie_gera_saldo_banco_w := obter_param_usuario(830, 26, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gera_saldo_banco_w);

if (ie_fechamento_w = 'N') then
	select	to_char(max(a.dt_referencia),'dd/mm/yyyy') dt_referencia,
		count(*) qt_dia_fechado
	into STRICT	dt_mes_fechamento_w,
		qt_dia_fechado_w
	from	fluxo_caixa_fechamento a
	where	dt_referencia		between dt_inicio_mes_w and dt_final_mes_w
	and	cd_empresa		= cd_empresa_p
	and	coalesce(ie_tipo_fluxo,'G')	= 'G'
	and	coalesce(coalesce(cd_estabelecimento, cd_estabelecimento_p), -1)	= coalesce(cd_estabelecimento_p, coalesce(cd_estabelecimento,-1));
else
	select	to_char(max(a.dt_referencia),'dd/mm/yyyy') dt_referencia,
		count(*) qt_dia_fechado
	into STRICT	dt_mes_fechamento_w,
		qt_dia_fechado_w
	from	fluxo_caixa_fechamento a
	where	dt_referencia		between dt_inicio_p and dt_final_w
	and	cd_empresa		= cd_empresa_p
	and	coalesce(ie_tipo_fluxo,'G')	= 'G'
	and	coalesce(coalesce(cd_estabelecimento, cd_estabelecimento_p), -1)	= coalesce(cd_estabelecimento_p, coalesce(cd_estabelecimento,-1));
end if;

if (qt_dia_fechado_w > 0) then
	/*nao e possivel gerar/alterar fluxo realizado para este periodo pois o dia/mes #@dt_referencia#@ ja foi fechado!
	verifique essa data na pasta fechamento.*/
	CALL wheb_mensagem_pck.exibir_mensagem_abort(206330,'DT_REFERENCIA='||dt_mes_fechamento_w);
end if;

select	coalesce(max(cd_conta_financ_cpa),1),
	coalesce(max(cd_conta_financ_cre),1),
	coalesce(max(ie_fim_semana_passado),'N'),
	coalesce(max(ie_adiant_receb),'A'),
	coalesce(max(ie_adiant_pago),'A'),
	coalesce(max(ie_convenio_receb), 'S'),
	coalesce(max(ie_conv_receb_estorno), 'N'),
	coalesce(max(ie_tit_rec_canc), 'N'),
	coalesce(max(ie_classif_baixa_cp), 'N'),
	coalesce(max(ie_cheque_pago_pend),'N'),
	coalesce(max(ie_tit_pagar_transf),'S'),
	coalesce(max(ie_cheque_cp_mes), 'N'),
	coalesce(max(ie_data_tit_adiant),'N'),
	coalesce(max(ie_movto_bco_pend),'N'),
	coalesce(max(ie_data_tit_adiant_rec),'N'),
	coalesce(max(ie_cheque_devolvido),'S'),
	coalesce(max(ie_conta_finan_trans),'N'),
	coalesce(max(ie_trans_fin_conta),'M'),
	coalesce(max(ie_titulo_caixa),'S'),
	coalesce(max(ie_despesa_cartao), 'N'),
	coalesce(max(ie_tit_pagar_desdob), 'S'),
	coalesce(max(ie_dt_credito_banco_cre), 'N'),
	coalesce(max(ie_fluxo_especial),'S')
into STRICT 	cd_conta_financ_cpa_w,
	cd_conta_financ_cre_w,
	ie_fim_semana_passado_w,
	ie_adiant_receb_w,
	ie_adiant_pago_w,
	ie_convenio_receb_w,
	ie_conv_receb_estorno_w,
	ie_tit_rec_canc_w,
	ie_classif_baixa_cp_w,
	ie_cheque_pago_pend_w,
	ie_tit_pagar_transf_w,
	ie_cheque_cp_mes_w,
	ie_data_tit_adiant_w,
	ie_movto_bco_pend_w,
	ie_data_tit_adiant_rec_w,
	ie_cheque_devolvido_w,
	ie_conta_finan_trans_w,
	ie_trans_fin_conta_w,
	ie_titulo_caixa_w,
	ie_despesa_cartao_w,
	ie_tit_pagar_desdob_w,
	ie_dt_credito_banco_cre_w,
	ie_fluxo_especial_w
from	parametro_fluxo_caixa
where	cd_estabelecimento	= cd_estabelecimento_p;

delete	from fluxo_caixa
where	dt_referencia 		between dt_inicio_p and dt_final_p
and	ie_classif_fluxo 	in ('P', 'V')
and	ie_origem 		<> 'D'
and	cd_empresa		= cd_empresa_p
and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(cd_estabelecimento) = cd_estabelecimento_p)));

commit;

select	obter_moeda_padrao(cd_estabelecimento_p,'P') cd_moeda_padrao_cp,
	obter_moeda_padrao(cd_estabelecimento_p,'R') cd_moeda_padrao_cr
into STRICT	cd_moeda_padrao_cp_w,
	cd_moeda_padrao_cr_w
;

/*Inicio 1895850*/

begin
ds_log_w := substr('Parametros Fluxo Caixa Realizado(gerar_fluxo_caixa_passado):'|| chr(13) ||
				   'dt_inicio_w: '|| dt_inicio_w ||chr(13)||
				   'dt_final_w: '||dt_final_w||chr(13)||
				   'dt_inicio_mes_w: '||dt_inicio_mes_w||chr(13)||
				   'dt_final_fim_mes_w: '||dt_final_fim_mes_w||chr(13)||
				   'dt_final_mes_w: '||dt_final_mes_w||chr(13)||
				   'cd_moeda_empresa_w: '||cd_moeda_empresa_w||chr(13)||
                   'cd_moeda_estrang_w: '||cd_moeda_estrang_w||chr(13)||
				   'cd_moeda_p: '||cd_moeda_p||chr(13)||
				   'cd_estabelecimento_p: '||cd_estabelecimento_p||chr(13)||
				   'ie_filtro_fluxo_w: '||ie_filtro_fluxo_w||chr(13)||
			       'nm_usuario_p: '||nm_usuario_p||chr(13)||
				   'ie_filtro_fluxo_proj_w: '||ie_filtro_fluxo_proj_w||chr(13)||
				   'ie_filtro_banco_w: '||ie_filtro_banco_w||chr(13)||
				   'ie_fechamento_w: '||ie_fechamento_w||chr(13)||
				   'dt_mes_fechamento_w: '||dt_mes_fechamento_w||chr(13)||
				   'qt_dia_fechado_w: '||qt_dia_fechado_w||chr(13)||
				   'cd_empresa_p: '||cd_empresa_p||chr(13)||
				   'ie_gera_saldo_banco_w: '||ie_gera_saldo_banco_w||chr(13)||
				   'cd_conta_financ_cpa_w: '||cd_conta_financ_cpa_w||chr(13)||
				   'cd_conta_financ_cre_w: '||cd_conta_financ_cre_w||chr(13)||
				   'ie_fim_semana_passado_w: '||ie_fim_semana_passado_w||chr(13)||
				   'ie_adiant_receb_w: '||ie_adiant_receb_w||chr(13)||
				   'ie_adiant_pago_w: '||ie_adiant_pago_w||chr(13)||
				   'ie_convenio_receb_w: '||ie_convenio_receb_w||chr(13)||
				   'ie_conv_receb_estorno_w: '||ie_conv_receb_estorno_w||chr(13)||
				   'ie_tit_rec_canc_w: '||ie_tit_rec_canc_w||chr(13)||
				   'ie_classif_baixa_cp_w: '||ie_classif_baixa_cp_w||chr(13)||
				   'ie_cheque_pago_pend_w: '||ie_cheque_pago_pend_w||chr(13)||
				   'ie_tit_pagar_transf_w: '||ie_tit_pagar_transf_w||chr(13)||
				   'ie_cheque_cp_mes_w: '||ie_cheque_cp_mes_w||chr(13)||
				   'ie_data_tit_adiant_w: '||ie_data_tit_adiant_w||chr(13)||
				   'ie_movto_bco_pend_w: '||ie_movto_bco_pend_w||chr(13)||
				   'ie_data_tit_adiant_rec_w: '||ie_data_tit_adiant_rec_w||chr(13)||
				   'ie_cheque_devolvido_w: '||ie_cheque_devolvido_w||chr(13)||
				   'ie_conta_finan_trans_w: '||ie_conta_finan_trans_w||chr(13)||
				   'ie_trans_fin_conta_w: '||ie_trans_fin_conta_w||chr(13)||
				   'ie_titulo_caixa_w: '||ie_titulo_caixa_w||chr(13)||
				   'ie_despesa_cartao_w: '||ie_despesa_cartao_w||chr(13)||
				   'ie_tit_pagar_desdob_w: '||ie_tit_pagar_desdob_w||chr(13)||
				   'ie_dt_credito_banco_cre_w: '||ie_dt_credito_banco_cre_w||chr(13)||
				   'ie_fluxo_especial_w: '||ie_fluxo_especial_w||chr(13)||
				   'ie_restringe_estab_p: '||ie_restringe_estab_p||chr(13)||
				   'cd_moeda_padrao_cp_w: '||cd_moeda_padrao_cp_w||
				   'cd_moeda_padrao_cr_w: '||cd_moeda_padrao_cr_w||chr(13)||
				   'vl_saldo_anterior_p: '||vl_saldo_anterior_p||chr(13)||
				   'ie_periodo_p: '||ie_periodo_p||chr(13)||
				   'ie_dia_util_p: '||ie_dia_util_p||chr(13)||
				   'ie_todas_contas_p: '||ie_todas_contas_p||chr(13)||
				   'ie_operacao_p: '||ie_operacao_p||chr(13)||
				   'ie_somente_ativa_p: '||ie_somente_ativa_p||chr(13)||
				   'nr_seq_regra_p: '||nr_seq_regra_p,1,4000);

/*forcar sair do loop em casa de algum problema*/
			
qt_loop_w := 1;	
while((ds_log_w IS NOT NULL AND ds_log_w::text <> '') and qt_loop_w < 3) loop
	insert into log_tasy( cd_log,
						   ds_log,
						   nm_usuario,
						   dt_atualizacao)
				values ( 96587,
						   substr(ds_log_w,1,2000),
						   nm_usuario_p,
						   clock_timestamp());

	ds_log_w := substr(ds_log_w,2001,length(ds_log_w));
	qt_loop_w := qt_loop_w + 1;						
end loop;	
exception when others then
	null;
end;
/*Fim 1895850*/

open c010;
loop
fetch c010 into
	ie_integracao_w,
	dt_referencia_w,
	cd_conta_financ_w,
	vl_fluxo_w,
	vl_fluxo_estrang_w,
	cd_moeda_atual_w,
	cd_moeda_padrao_w,
	cd_convenio_w,
	vl_juros_w,
	vl_multa_w,
	vl_desconto_w,
	vl_rec_maior_w,
	vl_outros_acrescimos_w,
	vl_outras_despesas_w,
	vl_despesa_bancaria_w,
	cd_conta_financ_jcp_w,
	cd_conta_financ_mcp_w,
	cd_conta_financ_dcp_w,
	cd_conta_financ_ocp_w,
	cd_conta_financ_odp_w,
	cd_conta_financ_jcr_w,
	cd_conta_financ_mcr_w,
	cd_conta_financ_dcr_w,
	cd_conta_financ_vlm_w,
	cd_conta_financ_dbcr_w,
	cd_conta_financ_glosa_w,
	vl_glosa_w,
	ie_origem_titulo_w,
	nr_seq_classe_tit_rec_w,
	nr_seq_classe_tit_pag_w,
	ie_contrato_w,
	ie_tipo_titulo_cp_w,
	ie_tipo_titulo_cr_w;
EXIT WHEN NOT FOUND; /* apply on c010 */

	if (cd_moeda_atual_w	<> 0) and (cd_moeda_padrao_w	<> cd_moeda_atual_w) then
		
		select	Obter_Valor_Moeda_strang(	cd_estabelecimento_p,
						vl_fluxo_estrang_w,
						cd_moeda_atual_w,
						dt_referencia_w)
		into STRICT	vl_fluxo_w
		;

	end if;
	
	if (ie_fim_semana_passado_w = 'S') or (ie_dia_util_p = 'S') then
		if (pkg_date_utils.start_of(dt_referencia_w,'MONTH',0) <>
			pkg_date_utils.start_of(obter_proximo_dia_util(cd_estabelecimento_p, dt_referencia_w),'MONTH',0)) then
			dt_referencia_w := obter_dia_anterior_util(cd_estabelecimento_p, dt_referencia_w);
		else
			dt_referencia_w	:= obter_proximo_dia_util(cd_estabelecimento_p, dt_referencia_w);
		end if;
	end if;
	

	if (cd_conta_financ_w = 0) and (vl_fluxo_w <> 0) then

		ie_entrada_saida_w		:= 'E';
		
		if (ie_integracao_w = 'CP') then
			ie_entrada_saida_w	:= 'S';
		end if;
		
		select	max(cd_cgc) /*aamfirmo 17/01/2013 os  536096 -  nao passava o cd_cgc para obter_conta_financeira e nunca buscava o tipo de pessoa desta pj.*/
		into STRICT 	cd_cgc_w
		from 	convenio
		where	cd_convenio	= cd_convenio_w;

		cd_conta_financ_w := obter_conta_financeira(	ie_entrada_saida_w, cd_estabelecimento_p, 0, 0, 0, 0, cd_convenio_w, cd_cgc_w, null, cd_conta_financ_w, null, null, null, null, null, null, null, null, ie_origem_titulo_w, null, nr_seq_classe_tit_rec_w, nr_seq_classe_tit_pag_w, null, null, null, null, ie_tipo_titulo_cp_w, ie_tipo_titulo_cr_w, cd_moeda_atual_w);
	end if;
	

	if (ie_integracao_w = 'CP') then
		/* Projeto Multimoeda - Os valores de multa, juros, desconto e outros acrescimos so devem ser gravados em moeda nacional,
				portanto as chamadas abaixo so ocorrerao quando o fluxo for gerado em moeda nacional. */
		if (cd_conta_financ_mcp_w > 0) and (vl_multa_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			select	max(ie_oper_fluxo)
			into STRICT	ie_operacao_w
			from	conta_financeira
			where	cd_conta_financ	= cd_conta_financ_mcp_w;

			if (ie_operacao_p = 'A') or (ie_operacao_p = 'D' and ie_operacao_w <> 'S') or (ie_operacao_p = 'S' and ie_operacao_w <> 'D') then
				
				CALL gerar_fluxo_caixa(cd_estabelecimento_p,
						dt_referencia_w,
						cd_conta_financ_mcp_w,
						ie_classif_fluxo_w,
						nm_usuario_p,
						vl_multa_w,
						ie_origem_w,
						ie_periodo_w,
						ie_integracao_w,
						cd_empresa_p,
						ie_contrato_w,
						ie_somente_ativa_p,
						cd_moeda_empresa_w);

			end if;
		end if;

		if (cd_conta_financ_jcp_w > 0) and (vl_juros_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			select	max(ie_oper_fluxo)
			into STRICT	ie_operacao_w
			from	conta_financeira
			where	cd_conta_financ	= cd_conta_financ_jcp_w;

			if (ie_operacao_p = 'A') or (ie_operacao_p = 'D' and ie_operacao_w <> 'S') or (ie_operacao_p = 'S' and ie_operacao_w <> 'D') then
				
				CALL gerar_fluxo_caixa(cd_estabelecimento_p,
						dt_referencia_w,
						cd_conta_financ_jcp_w,
						ie_classif_fluxo_w,
						nm_usuario_p,
						vl_juros_w,
						ie_origem_w,	
						ie_periodo_w,
						ie_integracao_w,
						cd_empresa_p,
						ie_contrato_w,
						ie_somente_ativa_p,
						cd_moeda_empresa_w);
			end if;
		end if;

		if (cd_conta_financ_dcp_w > 0) and (vl_desconto_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			select	max(ie_oper_fluxo)
			into STRICT	ie_operacao_w
			from	conta_financeira
			where	cd_conta_financ	= cd_conta_financ_dcp_w;

			if (ie_operacao_p = 'A') or (ie_operacao_p = 'D' and ie_operacao_w <> 'S') or (ie_operacao_p = 'S' and ie_operacao_w <> 'D') then
				
				CALL gerar_fluxo_caixa(cd_estabelecimento_p,
						dt_referencia_w,
						cd_conta_financ_dcp_w,
						ie_classif_fluxo_w,
						nm_usuario_p,
						vl_desconto_w,
						ie_origem_w,
						ie_periodo_w,
						ie_integracao_w,
						cd_empresa_p,
						ie_contrato_w,
						ie_somente_ativa_p,
						cd_moeda_empresa_w);
			end if;
		end if;
		
		if (cd_conta_financ_odp_w > 0) and (vl_outras_despesas_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then
			
			select	max(ie_oper_fluxo)
			into STRICT	ie_operacao_w
			from	conta_financeira
			where	cd_conta_financ	= cd_conta_financ_odp_w;

			if (ie_operacao_p = 'A') or (ie_operacao_p = 'D' and ie_operacao_w <> 'S') or (ie_operacao_p = 'S' and ie_operacao_w <> 'D') then
				
				CALL gerar_fluxo_caixa(cd_estabelecimento_p,
						dt_referencia_w,
						cd_conta_financ_odp_w,
						ie_classif_fluxo_w,
						nm_usuario_p,
						vl_outras_despesas_w,
						ie_origem_w,
						ie_periodo_w,
						ie_integracao_w,
						cd_empresa_p,
						ie_contrato_w,
						ie_somente_ativa_p,
						cd_moeda_empresa_w);
			end if;
		end if;		

		if (cd_conta_financ_ocp_w > 0) and (vl_outros_acrescimos_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			select	max(ie_oper_fluxo)
			into STRICT	ie_operacao_w
			from	conta_financeira
			where	cd_conta_financ	= cd_conta_financ_ocp_w;

			if (ie_operacao_p = 'A') or (ie_operacao_p = 'D' and ie_operacao_w <> 'S') or (ie_operacao_p = 'S' and ie_operacao_w <> 'D') then
				
				CALL gerar_fluxo_caixa(cd_estabelecimento_p,
						dt_referencia_w,
						cd_conta_financ_ocp_w,
						ie_classif_fluxo_w,
						nm_usuario_p,
						vl_outros_acrescimos_w,
						ie_origem_w,
						ie_periodo_w,
						ie_integracao_w,
						cd_empresa_p,
						ie_contrato_w,
						ie_somente_ativa_p,
						cd_moeda_empresa_w);
			end if;
		end if;
	end if;

	if (ie_integracao_w = 'CR') then
		/* Projeto Multimoeda - Os valores de multa, juros, desconto, recebimento a maior, despesa bancaria e glosa so devem ser gravados em moeda nacional,
				portanto as chamadas abaixo so ocorrerao quando o fluxo for gerado em moeda nacional. */
		if (cd_conta_financ_mcr_w > 0) and (vl_multa_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			select	max(ie_oper_fluxo)
			into STRICT	ie_operacao_w
			from	conta_financeira
			where	cd_conta_financ	= cd_conta_financ_mcr_w;

			if (ie_operacao_p = 'A') or (ie_operacao_p = 'D' and ie_operacao_w <> 'S') or (ie_operacao_p = 'S' and ie_operacao_w <> 'D') then
				
				CALL gerar_fluxo_caixa(cd_estabelecimento_p,
						dt_referencia_w,
						cd_conta_financ_mcr_w,
						ie_classif_fluxo_w,
						nm_usuario_p,
						vl_multa_w,
						ie_origem_w,
						ie_periodo_w,
						ie_integracao_w,
						cd_empresa_p,
						ie_contrato_w,
						ie_somente_ativa_p,
						cd_moeda_empresa_w);
			end if;
		end if;

		if (cd_conta_financ_jcr_w > 0) and (vl_juros_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			select	max(ie_oper_fluxo)
			into STRICT	ie_operacao_w
			from	conta_financeira
			where	cd_conta_financ	= cd_conta_financ_jcr_w;

			if (ie_operacao_p = 'A') or (ie_operacao_p = 'D' and ie_operacao_w <> 'S') or (ie_operacao_p = 'S' and ie_operacao_w <> 'D') then
				
				CALL gerar_fluxo_caixa(cd_estabelecimento_p,
						dt_referencia_w,
						cd_conta_financ_jcr_w,
						ie_classif_fluxo_w,
						nm_usuario_p,
						vl_juros_w,
						ie_origem_w,
						ie_periodo_w,
						ie_integracao_w,
						cd_empresa_p,
						ie_contrato_w,
						ie_somente_ativa_p,
						cd_moeda_empresa_w);
			end if;
		end if;

		if (cd_conta_financ_dcr_w > 0) and (vl_desconto_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			select	max(ie_oper_fluxo)
			into STRICT	ie_operacao_w
			from	conta_financeira
			where	cd_conta_financ	= cd_conta_financ_dcr_w;

			if (ie_operacao_p = 'A') or (ie_operacao_p = 'D' and ie_operacao_w <> 'S') or (ie_operacao_p = 'S' and ie_operacao_w <> 'D') then
				
				CALL gerar_fluxo_caixa(cd_estabelecimento_p,
						dt_referencia_w,
						cd_conta_financ_dcr_w,
						ie_classif_fluxo_w,
						nm_usuario_p,
						vl_desconto_w,
						ie_origem_w,
						ie_periodo_w,
						ie_integracao_w,
						cd_empresa_p,
						ie_contrato_w,
						ie_somente_ativa_p,
						cd_moeda_empresa_w);
			end if;

		end if;

		if (cd_conta_financ_vlm_w > 0) and (vl_rec_maior_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			select	max(ie_oper_fluxo)
			into STRICT	ie_operacao_w
			from	conta_financeira
			where	cd_conta_financ	= cd_conta_financ_vlm_w;

			if (ie_operacao_p = 'A') or (ie_operacao_p = 'D' and ie_operacao_w <> 'S') or (ie_operacao_p = 'S' and ie_operacao_w <> 'D') then
				
				CALL gerar_fluxo_caixa(cd_estabelecimento_p,
						dt_referencia_w,
						cd_conta_financ_vlm_w,
						ie_classif_fluxo_w,
						nm_usuario_p,
						vl_rec_maior_w,
						ie_origem_w,
						ie_periodo_w,
						ie_integracao_w,
						cd_empresa_p,
						ie_contrato_w,
						ie_somente_ativa_p,
						cd_moeda_empresa_w);
			end if;
		end if;

		if (cd_conta_financ_dbcr_w > 0) and (vl_despesa_bancaria_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			select	max(ie_oper_fluxo)
			into STRICT	ie_operacao_w
			from	conta_financeira
			where	cd_conta_financ	= cd_conta_financ_dbcr_w;

			if (ie_operacao_p = 'A') or (ie_operacao_p = 'D' and ie_operacao_w <> 'S') or (ie_operacao_p = 'S' and ie_operacao_w <> 'D') then
				
				CALL gerar_fluxo_caixa(cd_estabelecimento_p,
						dt_referencia_w,
						cd_conta_financ_dbcr_w,
						ie_classif_fluxo_w,
						nm_usuario_p,
						vl_despesa_bancaria_w,
						ie_origem_w,
						ie_periodo_w,
						ie_integracao_w,
						cd_empresa_p,
						ie_contrato_w,
						ie_somente_ativa_p,
						cd_moeda_empresa_w);
			end if;
		end if;

		if (cd_conta_financ_glosa_w > 0) and (vl_glosa_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			select	max(ie_oper_fluxo)
			into STRICT	ie_operacao_w
			from	conta_financeira
			where	cd_conta_financ	= cd_conta_financ_glosa_w;

			if (ie_operacao_p = 'A') or (ie_operacao_p = 'D' and ie_operacao_w <> 'S') or (ie_operacao_p = 'S' and ie_operacao_w <> 'D') then
				
				CALL gerar_fluxo_caixa(cd_estabelecimento_p,
						dt_referencia_w,
						cd_conta_financ_glosa_w,
						ie_classif_fluxo_w,
						nm_usuario_p,
						vl_glosa_w,
						ie_origem_w,
						ie_periodo_w,
						ie_integracao_w,
						cd_empresa_p,
						ie_contrato_w,
						ie_somente_ativa_p,
						cd_moeda_empresa_w);
			end if;
		end if;

	end if;
	
	/* francisco - os 64411 - 04/08/07 - fiz esse if para nem entrar aqui quando for juros/multa/a maior etc
	pois ja insere no fluxo nas procedures acima */
	if (cd_conta_financ_w <> 0) then
		
		select	max(ie_oper_fluxo),
			CASE WHEN ie_somente_ativa_p='S' THEN max(ie_situacao)  ELSE 'A' END
		into STRICT	ie_operacao_w,
			ie_conta_financ_ativa_w
		from	conta_financeira
		where	cd_conta_financ	= cd_conta_financ_w;
		
		/* Projeto Multimoeda - Determina o valor que sera gravado de acordo com a moeda.*/

		if (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then
			vl_fluxo_caixa_w := vl_fluxo_w;
		else
			vl_fluxo_caixa_w := vl_fluxo_estrang_w;
		end if;
		
		if (ie_operacao_p = 'A') or (ie_operacao_p = 'D' and ie_operacao_w <> 'S') or (ie_operacao_p = 'S' and ie_operacao_w <> 'D') then

			if (ie_conta_financ_ativa_w = 'A') then
				begin
				
				insert	into fluxo_caixa(cd_estabelecimento,
					dt_referencia,
					cd_conta_financ,
					ie_classif_fluxo,
					dt_atualizacao,
					nm_usuario, 
					vl_fluxo, 
					ie_origem, 
					ie_periodo,
					ie_integracao,
					cd_empresa,
					ie_contrato,
					cd_moeda)
				values (cd_estabelecimento_p,
					dt_referencia_w, 
					cd_conta_financ_w, 
					ie_classif_fluxo_w,
					dt_atualizacao_w, 
					nm_usuario_p, 
					coalesce(vl_fluxo_caixa_w,0), 
					ie_origem_w, 
					ie_periodo_w,
					ie_integracao_w,
					cd_empresa_p,
					ie_contrato_w,
					coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w));
				exception
					when unique_violation then
						update	fluxo_caixa
						set	vl_fluxo		= vl_fluxo + coalesce(vl_fluxo_caixa_w,0)
						where	cd_estabelecimento	= cd_estabelecimento_p
						and	cd_conta_financ		= cd_conta_financ_w
						and	dt_referencia		= dt_referencia_w
						and	ie_periodo		= ie_periodo_w
						and	ie_classif_fluxo	= ie_classif_fluxo_w
						and	ie_integracao		= ie_integracao_w
						and	cd_empresa		= cd_empresa_p
						and	coalesce(cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w);
					when others then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(176731,'CONTA_FINANC_W=' || cd_conta_financ_w || ';' ||
												'SQLERRM=' || sqlerrm);
				end;
				
			end if;
		end if;
	end if;
end loop;
close c010;

if (ie_gera_saldo_banco_w = 'S') then
	CALL gerar_fluxo_saldo_banco(	cd_estabelecimento_p,
					dt_inicio_p,
					dt_final_p,
					nm_usuario_p,
					'P',
					ie_periodo_p,
					cd_empresa_p,
					ie_somente_ativa_p,
					coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w),
					ie_restringe_estab_p );
end if;

/* Adicionada chamada para gerar fluxo com regra especial de saldo bancario + saldo da tesouraria. Sera chamado somente quando fluxo diario. */

if (ie_fluxo_especial_w = 'S' and ie_periodo_p = 'D') then
	CALL gerar_fluxo_caixa_esp(cd_estabelecimento_p,
				dt_inicio_p,
				dt_final_p,
				nm_usuario_p,
				cd_empresa_p,
				ie_restringe_estab_p,
				ie_operacao_p,
				ie_somente_ativa_p,
				'P',
				cd_moeda_p);
	commit;
end if;

/* acumular os valores diarios para o mes */

delete from fluxo_caixa
where 	dt_referencia		between dt_inicio_mes_w and dt_final_fim_mes_w
and 	ie_classif_fluxo 	= 'P'
and	cd_empresa		= cd_empresa_p
and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(cd_estabelecimento) = cd_estabelecimento_p)))
and	ie_origem 		<> 'D'
and	ie_periodo 		= 'M';

/* francisco - os 61295 - trazer todas contas financeiras */

open c020;
loop
fetch c020 into
	cd_conta_financ_w;
EXIT WHEN NOT FOUND; /* apply on c020 */

	insert into fluxo_caixa(cd_estabelecimento,
		dt_referencia,
		cd_conta_financ, 
		ie_classif_fluxo,
		dt_atualizacao, 
		nm_usuario, 
		vl_fluxo, 
		ie_origem, 
		ie_periodo, 
		ie_integracao,
		cd_empresa,
		cd_moeda)
	values (cd_estabelecimento_p, 
		dt_inicio_p, 
		cd_conta_financ_w, 
		'P',
		clock_timestamp(), 
		nm_usuario_p, 
		0, 
		'I', 
		ie_periodo_p,
		'X',
		cd_empresa_p,
		coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w));
end loop;
close c020;

commit;

begin
insert	into fluxo_caixa(
	cd_estabelecimento,
	dt_referencia,
	cd_conta_financ, 
	ie_classif_fluxo,
	dt_atualizacao, 
	nm_usuario, 
	vl_fluxo, 
	ie_origem, 
	ie_periodo, 
	ie_integracao,
	cd_empresa,
	ie_contrato,
	cd_moeda)
SELECT	w.cd_estabelecimento,
	w.dt_referencia,
	w.cd_conta_financ,
	'P',
	dt_atualizacao_w,
	nm_usuario_p,
	sum(w.vl_fluxo),
	'X',
	'M',
	w.ie_integracao,
	w.cd_empresa,
	max(w.ie_contrato),
	w.cd_moeda
from (SELECT	a.cd_estabelecimento,
		pkg_date_utils.start_of(pkg_date_utils.end_of(a.dt_referencia,'MONTH',0), 'dd', 0) dt_referencia,
		a.cd_conta_financ,
		a.vl_fluxo,
		a.ie_integracao,
		a.cd_empresa,
		a.ie_contrato,
		coalesce(a.cd_moeda,cd_moeda_empresa_w) cd_moeda
	from	fluxo_caixa a
	where	a.dt_referencia		between dt_inicio_mes_w and dt_final_fim_mes_w
	and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(cd_estabelecimento) = cd_estabelecimento_p)))
	and	a.cd_empresa		= cd_empresa_p
	and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)
	and (ie_operacao_p = 'A' or (ie_operacao_p = 'S' and obter_operacao_conta_financ(a.cd_conta_financ) <> 'D') or (ie_operacao_p = 'D' and obter_operacao_conta_financ(a.cd_conta_financ) <> 'S'))
	and	a.ie_classif_fluxo	= 'P'
	and (substr(obter_se_filtro_fluxo_estab(a.nr_seq_conta_banco,null,null,nm_usuario_p,null, cd_estabelecimento_p),1,1) = 'S' or ie_origem <> 'D')) w
where	not exists	/* ahoffelder - os 481697 - nao pode repetir essas informacoes, e pk (flucaix_pk) */
	(select	1
	from	fluxo_caixa x
	where	x.ie_integracao		= w.ie_integracao
	and	x.ie_periodo		= 'M'
	and	x.ie_classif_fluxo	= 'P'
	and	x.cd_conta_financ	= w.cd_conta_financ
	and	x.dt_referencia		= w.dt_referencia
	and	x.cd_estabelecimento	= w.cd_estabelecimento
	and	x.cd_empresa		= w.cd_empresa
	and	coalesce(x.cd_moeda,cd_moeda_empresa_w) = w.cd_moeda)
GROUP BY	w.cd_estabelecimento,
	w.dt_referencia,
	w.cd_conta_financ,
	w.cd_empresa,
	w.ie_integracao,
	w.cd_moeda;
exception
when unique_violation then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(176734,	'DT_INICIO_P=' || dt_inicio_p || ';' ||
							'DT_FINAL_P=' || dt_final_p || ';' ||
							'CD_ESTABELECIMENTO_P=' || cd_estabelecimento_p || ';' ||
							'CD_EMPRESA_P=' || cd_empresa_p);
end;

CALL calcular_fluxo_caixa(	cd_estabelecimento_p,
			vl_saldo_anterior_p,
			dt_inicio_p,
			dt_final_p,
			ie_periodo_p,
			'P',
			nm_usuario_p,
			cd_empresa_p,
			ie_restringe_estab_p,
			'N',
			ie_somente_ativa_p,
			nr_seq_regra_p,
			cd_moeda_estrang_w);

commit;

CALL gerar_fluxo_caixa_agrup(cd_estabelecimento_p,
			dt_inicio_p,
			dt_final_p,
			ie_periodo_p,
			'P',
			nm_usuario_p,
			cd_empresa_p,
			ie_operacao_p,
			ie_restringe_estab_p,
			ie_somente_ativa_p,
			coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w));

commit;

end; HAVING(sum(w.vl_fluxo)		<> 0
	or (coalesce(ie_todas_contas_p,'N') = 'S'))
;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_fluxo_caixa_passado ( cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_final_p timestamp, nm_usuario_p text, cd_empresa_p bigint, ie_restringe_estab_p text, vl_saldo_anterior_p bigint, ie_periodo_p text, ie_dia_util_p text, ie_todas_contas_p text, ie_operacao_p text, ie_somente_ativa_p text, nr_seq_regra_p bigint default null, cd_moeda_p bigint default null) FROM PUBLIC;

