-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_val_lote_prod ( nr_lote_producao_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_material_w			integer;
cd_subgrupo_mat_w		integer;
cd_grupo_mat_w		integer;
cd_classe_mat_w		integer;
cd_estabelecimento_w		smallint;
pr_aplicar_w			double precision;
qt_dia_max_w			bigint;
dt_validade_w			timestamp;
qt_dia_validade_w		bigint;
qt_dia_calc_w			bigint;
qt_dia_final_w		bigint;
dt_lote_prod_w		timestamp;

C01 CURSOR FOR
	SELECT	pr_aplicar,
		qt_dia_max
	from	regra_calculo_validade
	where	cd_estabelecimento				= cd_estabelecimento_w
	and	coalesce(cd_material,cd_material_w)		= cd_material_w
	and	coalesce(cd_grupo_mat,cd_grupo_mat_w)		= cd_grupo_mat_w
	and	coalesce(cd_subgrupo_mat,cd_subgrupo_mat_w)	= cd_subgrupo_mat_w
	and	coalesce(cd_classe_mat,cd_classe_mat_w)		= cd_classe_mat_w
	and	coalesce(ie_processo,'P') = 'P'
	order by cd_grupo_mat,
		cd_subgrupo_mat,
		cd_classe_mat,
		cd_material,
		pr_aplicar desc,
		qt_dia_max desc;


BEGIN

select	cd_material,
	cd_estabelecimento,
	coalesce(dt_final,dt_inicio)
into STRICT	cd_material_w,
	cd_estabelecimento_w,
	dt_lote_prod_w
from	lote_producao
where	nr_lote_producao	= nr_lote_producao_p;


select	cd_grupo_material,
	cd_subgrupo_material,
	cd_classe_material
into STRICT	cd_grupo_mat_w,
	cd_subgrupo_mat_w,
	cd_classe_mat_w
from	estrutura_material_v
where	cd_material	= cd_material_w;

OPEN C01;
LOOP
FETCH C01 into
	pr_aplicar_w,
	qt_dia_max_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	BEGIN
	pr_aplicar_w	:= pr_aplicar_w;
	qt_dia_max_w	:= qt_dia_max_w;
	END;
END LOOP;
CLOSE C01;

begin
select	min(dt_validade)
into STRICT	dt_validade_w
from	lote_producao_comp
where	nr_lote_producao	= nr_lote_producao_p;
exception
	when others then
		dt_validade_w := null;
end;

if (dt_validade_w IS NOT NULL AND dt_validade_w::text <> '') then
	qt_dia_validade_w	:= dt_validade_w - dt_lote_prod_w;
	qt_dia_calc_w		:= (qt_dia_validade_w * coalesce(pr_aplicar_w,0) / 100);
	qt_dia_calc_w		:= coalesce(qt_dia_calc_w,0);
	qt_dia_max_w		:= coalesce(qt_dia_max_w,0);

	if (qt_dia_calc_w = 0) then
		qt_dia_calc_w	:= 999999999;
	end if;
	if (qt_dia_max_w = 0) then
		qt_dia_max_w	:= 999999999;
	end if;


	if (qt_dia_max_w < qt_dia_calc_w) then
		qt_dia_final_w	:= qt_dia_max_w;
	else
		qt_dia_final_w	:= qt_dia_calc_w;
	end if;
	if (qt_dia_final_w > 0) and (qt_dia_final_w <= qt_dia_validade_w) then
		update	lote_producao
		set	dt_validade		= dt_lote_prod_w + qt_dia_final_w,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_lote_producao	= nr_lote_producao_p;
	end if;

end if;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_val_lote_prod ( nr_lote_producao_p bigint, nm_usuario_p text) FROM PUBLIC;

