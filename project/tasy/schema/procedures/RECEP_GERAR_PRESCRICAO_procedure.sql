-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE recep_gerar_prescricao ( nm_usuario_p text, cd_estabelecimento_p text, nr_atendimento_p bigint, nr_seq_ficha_pre_p bigint, nr_seq_ficha_agenda_p bigint, nr_seq_interno_p bigint, cd_pessoa_fisica_p text, ie_origem_inf_p text, cd_medico_resp_p text, cd_setor_usuario_p bigint, ie_origem_proced_p bigint, nr_seq_age_proc_p bigint) AS $body$
DECLARE

 
nr_prescricao_w		bigint;
nr_seq_age_proc_w 	bigint;
nr_seq_agenda_w 	bigint;
nr_seq_proc_interno_w	bigint;
qt_procedimento_w	integer;
cd_procedimento_w	bigint;
dt_prescricao_w		timestamp;
dt_primeiro_horario_w	timestamp;
cd_setor_atendimento_w	integer;
nr_doc_convenio_w 	varchar(20);
cd_senha_w		varchar(20);
nr_seq_prescr_proc_w 	integer;
cd_medico_exec_w	varchar(10);
cd_equipamento_w	bigint;
ie_existe_w		varchar(1) := 'N';

BEGIN
 
if (coalesce(nr_seq_ficha_agenda_p,0) > 0) then 
begin 
	SELECT 'S' 
	INTO STRICT	ie_existe_w 
	from	recep_ficha_pre_agenda 
	where	nr_sequencia = nr_seq_ficha_agenda_p  LIMIT 1;
exception 
when others then 
	ie_existe_w := 'N';
end;
	if (ie_existe_w = 'S') then 
		select	nr_seq_agenda, 
			nr_seq_age_proc 
		into STRICT	nr_seq_agenda_w, 
			nr_seq_age_proc_w 
		from	recep_ficha_pre_agenda 
		where	nr_sequencia = nr_seq_ficha_agenda_p;
	end if;
	 
	if (nr_seq_age_proc_w IS NOT NULL AND nr_seq_age_proc_w::text <> '') then 
		select	cd_procedimento, 
			qt_procedimento, 
			nr_seq_proc_interno, 
			cd_medico 
		into STRICT	cd_procedimento_w, 
			qt_procedimento_w, 
			nr_seq_proc_interno_w, 
			cd_medico_exec_w 
		from	agenda_paciente_proc 
		where	nr_seq_agenda = nr_seq_age_proc_w 
		and	nr_sequencia = nr_seq_age_proc_p;
	elsif (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then 
		select	cd_procedimento, 
				1, 
				nr_seq_proc_interno, 
				substr(cd_medico_exec,1,10) 
		into STRICT	cd_procedimento_w, 
				qt_procedimento_w, 
				nr_seq_proc_interno_w, 
				cd_medico_exec_w 
		from	agenda_paciente 
		where	nr_sequencia = nr_seq_agenda_w;
	elsif (nr_seq_ficha_agenda_p > 0) then 
		select	max(cd_procedimento), 
			max(1), 
			max(nr_seq_proc_interno), 
			max('')-- Não existe o campo médico na tablle 
		into STRICT	cd_procedimento_w, 
			qt_procedimento_w, 
			nr_seq_proc_interno_w, 
			cd_medico_exec_w 
		from	ageint_exame_lab 
		where	nr_sequencia = nr_seq_agenda_w;
	end if;
	 
	if (ie_existe_w = 'S') then 
		select	nr_doc_convenio, 
				ds_senha, 
				cd_setor_atendimento 
		into STRICT	nr_doc_convenio_w, 
				cd_senha_w, 
				cd_setor_atendimento_w 
		from	agenda_paciente 
		where	nr_sequencia = nr_seq_agenda_w;
	end if;
end if;
 
select	max(nr_prescricao) 
into STRICT	nr_prescricao_w 
from	prescr_medica 
where	nr_atendimento = nr_atendimento_p 
and (nr_doc_conv = nr_doc_convenio_w or coalesce(nr_doc_conv::text, '') = '') 
and		coalesce(dt_liberacao::text, '') = '' 
and	nr_seq_atecaco = nr_seq_interno_p;
 
if (coalesce(nr_prescricao_w::text, '') = '') then 
 
	dt_prescricao_w := clock_timestamp();
	dt_primeiro_horario_w := Obter_Prim_Horario_Prescricao(nr_atendimento_p, coalesce(cd_setor_atendimento_w,cd_setor_usuario_p),dt_prescricao_w,nm_usuario_p,'R');
	 
	select nextval('prescr_medica_seq') 
	into STRICT	nr_prescricao_w 
	;
	 
	insert into prescr_medica(nr_prescricao, 
						cd_pessoa_fisica, 
						dt_prescricao, 
						nr_atendimento, 
						dt_atualizacao, 
						nm_usuario, 
						nr_doc_conv, 
						nr_seq_atecaco, 
						cd_medico, 
						cd_senha, 
						cd_estabelecimento, 
						nr_horas_validade, 
						dt_entrega, 
						ie_origem_inf, 
						cd_setor_atendimento, 
						dt_primeiro_horario, 
						nm_usuario_original) 
					values (nr_prescricao_w, 
						cd_pessoa_fisica_p, 
						dt_prescricao_w, 
						nr_atendimento_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						nr_doc_convenio_w, 
						nr_seq_interno_p, 
						cd_medico_resp_p, 
						cd_senha_w, 
						cd_estabelecimento_p, 
						24, 
						clock_timestamp(), 
						ie_origem_inf_p, 
						coalesce(cd_setor_atendimento_w,cd_setor_usuario_p), 
						dt_primeiro_horario_w, 
						nm_usuario_p);
	commit;
end if;
	CALL recep_vinc_atend_agenda(nr_atendimento_p,nr_seq_agenda_w,nm_usuario_p);
	CALL recep_alterar_ficha_prim_exame(nr_seq_ficha_pre_p, clock_timestamp(), 2, nm_usuario_p, nr_atendimento_p, nr_prescricao_w, nr_seq_prescr_proc_w, nr_seq_agenda_w, nr_seq_proc_interno_w);
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE recep_gerar_prescricao ( nm_usuario_p text, cd_estabelecimento_p text, nr_atendimento_p bigint, nr_seq_ficha_pre_p bigint, nr_seq_ficha_agenda_p bigint, nr_seq_interno_p bigint, cd_pessoa_fisica_p text, ie_origem_inf_p text, cd_medico_resp_p text, cd_setor_usuario_p bigint, ie_origem_proced_p bigint, nr_seq_age_proc_p bigint) FROM PUBLIC;

