-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcula_horario_dieta_continua ( qt_hora_p timestamp, cd_intervalo_p text, qt_hora_aplicacao_p text, ds_horarios_p INOUT text) AS $body$
DECLARE


qt_operacao_w			bigint;
ds_hora_maior_w			varchar(100) := '';
ds_hora_menor_w			varchar(100) := '';
hr_referencia_dieta_w	varchar(5);
qt_hora_w				timestamp;
qt_hora_inc_w			double precision := 0;
qt_hora_rest_w			double precision := 0;
qt_hora_ww				timestamp;
ds_texto_w				varchar(255);
ie_continuo_w			varchar(1);


BEGIN

Select	max(coalesce(qt_hora_aplicacao_p,coalesce(qt_operacao,0))),
		max(hr_referencia_dieta),
		max(coalesce(ie_continuo,'N'))
into STRICT	qt_operacao_w,
		hr_referencia_dieta_w,
		ie_continuo_w
from	intervalo_prescricao
where	cd_intervalo	= cd_intervalo_p;

qt_hora_w	:= trunc(qt_hora_p,'mi') + (qt_operacao_w / 24);

ds_hora_maior_w	:= to_char(trunc(clock_timestamp(),'dd') + 1,'dd/mm/yyyy');

if (hr_referencia_dieta_w IS NOT NULL AND hr_referencia_dieta_w::text <> '') then
	ds_hora_maior_w	:= ds_hora_maior_w ||' '||hr_referencia_dieta_w ||':00';
end if;

ds_hora_menor_w	:= to_char(clock_timestamp(),'dd/mm/yyyy') ||' '||to_char(qt_hora_p,'hh24:mi:ss');


-- das #@NR_PRIM_HOR#@ Ã s
ds_texto_w	:= wheb_mensagem_pck.get_texto(307054);

if (qt_operacao_w = 24) then
	ds_horarios_p	:= replace(ds_texto_w, '#@NR_PRIM_HOR#@', to_char(qt_hora_p,'hh24:mi')) || ' ' ||to_char(qt_hora_w,'hh24:mi');

elsif (qt_operacao_w  < 24) then
	begin
	if	((trunc(qt_hora_p,'dd') = trunc(qt_hora_w,'dd')) or
		((coalesce(hr_referencia_dieta_w::text, '') = '') and (ie_continuo_w = 'S'))) then
		ds_horarios_p	:= replace(ds_texto_w, '#@NR_PRIM_HOR#@', to_char(qt_hora_p,'hh24:mi')) || ' ' || to_char(qt_hora_w,'hh24:mi');
	end if;

	if (trunc(qt_hora_p,'dd') < trunc(qt_hora_w,'dd')) and (hr_referencia_dieta_w IS NOT NULL AND hr_referencia_dieta_w::text <> '') then
		begin
		qt_hora_inc_w	:= (to_date(ds_hora_maior_w,'dd/mm/yyyy hh24:mi:ss') - to_date(ds_hora_menor_w,'dd/mm/yyyy hh24:mi:ss')) * 24;

		qt_hora_rest_w	:= (qt_operacao_w - qt_hora_inc_w);

		qt_hora_ww	:= trunc(qt_hora_p,'mi') - (qt_hora_rest_w / 24);

		if (to_char(qt_hora_p,'hh24:mi') = to_char(qt_hora_ww,'hh24:mi')) then
			ds_horarios_p	:= replace(ds_texto_w, '#@NR_PRIM_HOR#@', to_char(qt_hora_p,'hh24:mi')) || ' ' || hr_referencia_dieta_w;

		else
			ds_horarios_p :=	replace(ds_texto_w, '#@NR_PRIM_HOR#@', to_char(qt_hora_p,'hh24:mi')) || ' ' || hr_referencia_dieta_w ||
								'; ' ||
								replace(ds_texto_w, '#@NR_PRIM_HOR#@', to_char(trunc(qt_hora_p,'mi') - (qt_hora_rest_w / 24),'hh24:mi')) || ' ' || to_char(qt_hora_p,'hh24:mi');
		end if;
		end;
	end if;
	end;
end if;

ds_horarios_p	:= substr(ds_horarios_p,1,255);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcula_horario_dieta_continua ( qt_hora_p timestamp, cd_intervalo_p text, qt_hora_aplicacao_p text, ds_horarios_p INOUT text) FROM PUBLIC;

