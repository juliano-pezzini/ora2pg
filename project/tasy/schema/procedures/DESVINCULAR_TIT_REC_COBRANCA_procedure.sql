-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE desvincular_tit_rec_cobranca (nr_seq_cobranca_p bigint, nr_titulo_p bigint, nr_seq_motivo_exc_p bigint, ie_tipo_desvinc_p text) AS $body$
DECLARE


/* ie_tipo_desvinc_p:
	S = somente os títulos selecionados serão desvinculados
	T = todos os títulos serão desvinculados
*/
qt_titulo_w		bigint;
ie_remessa_retorno_w	varchar(1);
nm_usuario_w		varchar(15);
qt_titulo_comissao_w	bigint;
nr_seq_lote_repasse_w	bigint;
nr_seq_tit_cobr_w	bigint;
qt_reenvio_w		bigint;
nr_seq_lote_reenvio_w	bigint;
qt_cobr_esc_reenv_w	bigint;
nr_seq_loet_cobr_esc_reenv_w bigint;
nr_sequencia_w          bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	titulo_receber_cobr
	where	nr_seq_cobranca	= nr_seq_cobranca_p
	and	nr_titulo = nr_titulo_p;


BEGIN

begin

nm_usuario_w := substr(wheb_usuario_pck.get_nm_usuario,1,15);
exception
when others then
	nm_usuario_w := null;
end;

insert into titulo_receber_cobr_exc(
	cd_agencia_bancaria,
	cd_banco,
	cd_camara_compensacao,
	cd_centro_custo_desc,
	cd_cgc_r,
	cd_instrucao,
	cd_moeda,
	cd_ocorrencia,
	cd_pessoa_fisica_r,
	ds_estabelecimento_r,
	ds_inconsistencia,
	dt_atualizacao,
	dt_atualizacao_nrec,
	dt_liquidacao,
	dt_pagamento_real,
	ie_digito_conta,
	ie_verificacao,
	nm_pessoa_r,
	nm_usuario,
	nm_usuario_nrec,
	nr_conta,
	nr_documento_r,
	nr_seq_cobranca,
	nr_seq_mensalidade,
	nr_seq_motivo_desc,
	nr_seq_ocorrencia_ret,
	nr_seq_ocorr_motivo,
	nr_sequencia,
	nr_titulo,
	qt_dias_instrucao,
	vl_acrescimo,
	vl_cobranca,
	vl_desconto,
	vl_desc_previsto,
	vl_despesa_bancaria,
	vl_juros,
	vl_juros_calc,
	vl_liquidacao,
	vl_multa,
	vl_multa_calc,
	vl_saldo_inclusao,
	vl_titulo_r,
	nr_seq_motivo_exc)
SELECT	cd_agencia_bancaria,
	cd_banco,
	cd_camara_compensacao,
	cd_centro_custo_desc,
	cd_cgc_r,
	cd_instrucao,
	cd_moeda,
	cd_ocorrencia,
	cd_pessoa_fisica_r,
	ds_estabelecimento_r,
	ds_inconsistencia,
	clock_timestamp(),
	coalesce(dt_atualizacao_nrec, dt_atualizacao),
	dt_liquidacao,
	dt_pagamento_real,
	ie_digito_conta,
	ie_verificacao,
	nm_pessoa_r,
	nm_usuario_w,
	coalesce(nm_usuario_nrec, nm_usuario),
	nr_conta,
	nr_documento_r,
	nr_seq_cobranca,
	nr_seq_mensalidade,
	nr_seq_motivo_desc,
	nr_seq_ocorrencia_ret,
	nr_seq_ocorr_motivo,
	nr_sequencia,
	nr_titulo,
	qt_dias_instrucao,
	vl_acrescimo,
	vl_cobranca,
	vl_desconto,
	vl_desc_previsto,
	vl_despesa_bancaria,
	vl_juros,
	vl_juros_calc,
	vl_liquidacao,
	vl_multa,
	vl_multa_calc,
	vl_saldo_inclusao,
	vl_titulo_r,
	CASE WHEN nr_seq_motivo_exc_p=0 THEN  null  ELSE nr_seq_motivo_exc_p END
from	titulo_receber_cobr
where	nr_seq_cobranca	= nr_seq_cobranca_p
and	nr_titulo	= nr_titulo_p;

select	count(*),
	max(nr_seq_lote)
into STRICT	qt_titulo_comissao_w,
	nr_seq_lote_repasse_w
from	pls_desc_comissao	b,
	titulo_receber_cobr	a
where	a.nr_sequencia = b.nr_seq_titulo_cobr
and	a.nr_seq_cobranca = nr_seq_cobranca_p
and	a.nr_titulo = nr_titulo_p;

select	count(*),
	max(nr_seq_lote)
into STRICT	qt_reenvio_w,
	nr_seq_lote_reenvio_w
from	pls_desc_reenvio	b,
	titulo_receber_cobr	a
where	a.nr_sequencia = b.nr_titulo_cobr
and	a.nr_seq_cobranca = nr_seq_cobranca_p
and	a.nr_titulo = nr_titulo_p;

select	count(*),
	max(a.nr_seq_lote)
into STRICT	qt_cobr_esc_reenv_w,
	nr_seq_loet_cobr_esc_reenv_w
from	lote_cobr_esc_reenv_tit a,
	titulo_receber_cobr	b
where	a.nr_seq_tit_rec_cobr	= b.nr_sequencia
and	b.nr_titulo		= nr_titulo_p
and	b.nr_seq_cobranca	= nr_seq_cobranca_p;

if (coalesce(qt_titulo_comissao_w,0) <> 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(194965, 'NR_SEQ_LOTE_REPASSE=' || nr_seq_lote_repasse_w || ';NR_TITULO=' || nr_titulo_p);
elsif (coalesce(qt_reenvio_w,0) <> 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(195011, 'NR_TITULO=' || nr_titulo_p || ';NR_SEQ_LOTE=' || nr_seq_lote_reenvio_w);
elsif (coalesce(qt_cobr_esc_reenv_w,0) <> 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(224995, 'NR_TITULO=' || nr_titulo_p || ';NR_SEQ_LOTE=' || nr_seq_loet_cobr_esc_reenv_w);
else
	open C01;
	loop
	fetch C01 into
		nr_seq_tit_cobr_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		delete	from pls_desconto_folha_envio
		where	nr_titulo_cobr = nr_seq_tit_cobr_w;
		end;
	end loop;
	close C01;

if (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '' AND nr_titulo_p <> 0) then

	select	max(nr_sequencia)
		into STRICT  nr_sequencia_w
	from    titulo_receber_cobr
	where   nr_seq_cobranca = nr_seq_cobranca_p
	and     nr_titulo =  nr_titulo_p;

	delete from inconsistencia_tit_escrit  b
	where b.nr_seq_titulo_escrit = nr_sequencia_w;
end if;

	delete	from titulo_receber_cobr
	where	nr_seq_cobranca	= nr_seq_cobranca_p
	and	nr_titulo = nr_titulo_p;
end if;

if (coalesce(ie_tipo_desvinc_p,'S') = 'T') then
	delete	from pls_desc_inconsistencia
	where	nr_seq_cobranca = nr_seq_cobranca_p;
end if;

update	titulo_receber
set	nr_seq_empresa  = NULL
where	nr_titulo = nr_titulo_p;

select	max(ie_remessa_retorno)
into STRICT	ie_remessa_retorno_w
from	cobranca_escritural
where	nr_sequencia	= nr_seq_cobranca_p;

if (ie_remessa_retorno_w = 'T') then
	select	count(*)
	into STRICT	qt_titulo_w
	from	titulo_receber_cobr
	where	nr_seq_cobranca	= nr_seq_cobranca_p;

	if (coalesce(qt_titulo_w,0) = 0) then
		update	cobranca_escritural
		set	ds_arquivo	 = NULL
		where	nr_sequencia	= nr_seq_cobranca_p;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desvincular_tit_rec_cobranca (nr_seq_cobranca_p bigint, nr_titulo_p bigint, nr_seq_motivo_exc_p bigint, ie_tipo_desvinc_p text) FROM PUBLIC;

