-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_itens_exec_req_imp ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_guia_plano_imp_p pls_guia_plano_imp.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_lote_execucao_p INOUT pls_lote_execucao_req.nr_sequencia%type) AS $body$
DECLARE

					 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Executar o processo de geração de geração da guia e consistência 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
nr_seq_prest_solic_w		pls_prestador.nr_sequencia%type;
nr_seq_prest_exec_w		pls_prestador.nr_sequencia%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
nr_seq_lote_execucao_w		pls_lote_execucao_req.nr_sequencia%type;
cd_medico_exec_w		pessoa_fisica.cd_pessoa_fisica%type;

C01 CURSOR( 	nr_seq_requisicao_pc	pls_requisicao.nr_sequencia%type) FOR 
	SELECT	b.nr_sequencia nr_sequencia, 
		a.ie_tipo_guia, 
		'P' ie_tipo_item, 
		a.nr_sequencia nr_seq_requisicao, 
		a.dt_requisicao dt_requisicao, 
		b.cd_procedimento cd_proc_mat, 
		b.ie_origem_proced ie_origem_proced, 
		a.cd_medico_solicitante, 
		coalesce(b.qt_solicitado,0) qt_proc_mat_solic, 
		coalesce(b.qt_procedimento,0) qt_proc_mat_aprov, 
		coalesce(b.qt_proc_executado,0) qt_proc_mat_exec, 
		pls_quant_itens_pendentes_exec(b.qt_procedimento,b.qt_proc_executado) qt_pendente, 
		a.dt_validade_senha dt_validade_senha, 
		a.cd_especialidade, 
		a.ie_pcmso 
	from	pls_requisicao a, 
		pls_requisicao_proc b 
	where	a.nr_sequencia = b.nr_seq_requisicao 
	and	a.nr_sequencia 	= nr_seq_requisicao_pc 
	
union
 
	SELECT	b.nr_sequencia nr_sequencia, 
		a.ie_tipo_guia, 
		'M' ie_tipo_item, 
		a.nr_sequencia nr_seq_requisicao, 
		a.dt_requisicao dt_requisicao, 
		b.nr_seq_material cd_proc_mat, 
		0 ie_origem_proced, 
		a.cd_medico_solicitante, 
		coalesce(b.qt_solicitado,0) qt_proc_mat_solic, 
		coalesce(b.qt_material,0) qt_proc_mat_aprov, 
		coalesce(b.qt_mat_executado,0) qt_proc_mat_exec, 
		pls_quant_itens_pendentes_exec(b.qt_material,b.qt_mat_executado) qt_pendente, 
		a.dt_validade_senha dt_validade_senha, 
		a.cd_especialidade, 
		a.ie_pcmso 
	from	pls_requisicao a, 
		pls_requisicao_mat b 
	where	a.nr_sequencia = b.nr_seq_requisicao 
	and	a.nr_sequencia 	= nr_seq_requisicao_pc;

	 
BEGIN 
 
 
if (nr_seq_guia_plano_imp_p IS NOT NULL AND nr_seq_guia_plano_imp_p::text <> '') then 
	 
	--Se existir requisição pendente executa a mesma 
	if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
		 
		select	pls_obter_dados_segurado_imp(cd_usuario_plano, 'SS', 'G') nr_seq_segurado, 
			pls_obter_prestador_imp(cd_cgc_prest_solic, cd_cpf_prest_solic, cd_prestador_solic, '', '', '', 'G') nr_seq_prest_solic, 
			pls_obter_prestador_imp('', '', cd_prestador_exec, '', '', '', 'G') nr_seq_prest_exec, 
			pls_obter_dados_medico_imp(nr_conselho_prof_solic, pls_obter_sg_uf_tiss(cd_uf_conselho_prof_solic), cd_conselho_prof_solic, 'CP', 'G') cd_medico_solic 
		into STRICT	nr_seq_segurado_w, 
			nr_seq_prest_solic_w, 
			nr_seq_prest_exec_w, 
			cd_medico_exec_w 
		from	pls_guia_plano_imp 
		where	nr_sequencia = nr_seq_guia_plano_imp_p;	
	 
	 
		select	nextval('pls_lote_execucao_req_seq') 
		into STRICT	nr_seq_lote_execucao_w 
		;
		 
		insert into pls_lote_execucao_req( 
			nr_sequencia, nr_seq_segurado, dt_geracao_lote, 
			dt_atualizacao, nm_usuario, dt_atualizacao_nrec, 
			nm_usuario_nrec, nr_seq_usuario_web, nr_seq_prestador, 
			nr_seq_prest_usuario,nr_seq_perfil_web, nr_seq_local_atend, 
			ds_observacao, ie_origem_consulta) 
		values (	nr_seq_lote_execucao_w, nr_seq_segurado_w, clock_timestamp(), 
			clock_timestamp(), nm_usuario_p, clock_timestamp(), 
			nm_usuario_p, null, coalesce(nr_seq_prest_exec_w, nr_seq_prest_solic_w), 
			null, null, null, 
			'Execução gerada pelo WebService', 'P');
			 
		--Gerar itens execução 
		for C01_w in C01( nr_seq_requisicao_p ) loop 
			begin	 
				insert into pls_itens_lote_execucao( 
					nr_sequencia, nr_seq_lote_exec, ie_permite_execucao, 
					ie_executar, dt_atualizacao, nm_usuario, 
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_req_proc,					 
					nr_seq_req_mat, nr_seq_requisicao, qt_solicitado, 
					qt_aprovado, qt_executado, qt_pendente, 
					dt_requisicao, dt_validade_senha, cd_proc_mat, 
					ds_proc_mat, ds_tipo_guia, nm_medico, 
					cd_medico_solicitante, ie_tipo_item, ie_tipo_guia, 
					nr_seq_regra_prest_proc, qt_item_exec, cd_medico_executor) 
				values (	nextval('pls_itens_lote_execucao_seq'), nr_seq_lote_execucao_w, 'S', 
					'S', clock_timestamp(), nm_usuario_p, 
					clock_timestamp(), nm_usuario_p, CASE WHEN C01_w.ie_tipo_item='P' THEN  C01_w.nr_sequencia  ELSE null END , 
					CASE WHEN C01_w.ie_tipo_item='M' THEN  C01_w.nr_sequencia  ELSE null END , nr_seq_requisicao_p, C01_w.qt_proc_mat_solic, 
					C01_w.qt_proc_mat_aprov, C01_w.qt_proc_mat_exec, C01_w.qt_pendente, 
					to_char(C01_w.dt_requisicao,'dd/mm/yyyy'), to_char(C01_w.dt_validade_senha, 'dd/mm/yyyy'), C01_w.cd_proc_mat, 
					substr(obter_descricao_procedimento(C01_w.cd_proc_mat, C01_w.ie_origem_proced),1,255), substr(obter_valor_dominio(1746,C01_w.ie_tipo_guia),1,255), substr(obter_nome_medico(C01_w.cd_medico_solicitante,'N'),1,255), 
					C01_w.cd_medico_solicitante, C01_w.ie_tipo_item, C01_w.ie_tipo_guia, 
					null, C01_w.qt_pendente, cd_medico_exec_w);	
			end;
		end loop;
	end if;	
end if;
 
commit;
 
nr_seq_lote_execucao_p	:= nr_seq_lote_execucao_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_itens_exec_req_imp ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_guia_plano_imp_p pls_guia_plano_imp.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_lote_execucao_p INOUT pls_lote_execucao_req.nr_sequencia%type) FROM PUBLIC;

