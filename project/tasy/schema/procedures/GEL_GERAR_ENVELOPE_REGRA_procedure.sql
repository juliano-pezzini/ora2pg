-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gel_gerar_envelope_regra ( ds_lista_p text, nm_usuario_p text, cd_funcao_p bigint, ie_gerou_p INOUT text, ds_lista_evelope_p INOUT text) AS $body$
DECLARE

 
nr_seq_proc_interno_w			bigint;
ie_tipo_atendimento_w			smallint;
ie_mesmo_atendimento_w			varchar(1);
ie_mesma_data_exame_w			varchar(1);
cd_procedimento_w				bigint;
cd_setor_atendimento_w			integer;
ie_origem_proced_w				bigint;
cd_area_procedimento_w			bigint;
cd_especialidade_w				bigint;
cd_grupo_proc_w					bigint;
ds_lista_w						varchar(4000);
tam_lista_w						bigint;
ie_pos_virgula_w				smallint;
ie_pos_virgula2_w				smallint;
nr_prescr_lista_w				varchar(55);
nr_Seq_lista_w					varchar(55);
ds_prescricao_w					varchar(255);
qt_regra_w						bigint;
cd_pessoa_fisica_w				varchar(10);
nr_atendimento_w				bigint;
dt_prev_execucao_w				timestamp;
nr_seq_envelope_w				bigint;
nr_seq_regra_w					bigint;
nr_pos_envelope_w				bigint;

C01 CURSOR FOR 
	SELECT	nr_seq_proc_interno, 
		ie_tipo_atendimento, 
		coalesce(ie_mesmo_atendimento,'N'), 
		coalesce(ie_mesma_data_exame,'N'), 
		cd_procedimento, 
		cd_setor_atendimento, 
		ie_origem_proced, 
		cd_area_procedimento, 
		cd_especialidade, 
		cd_grupo_proc, 
		nr_sequencia 
	from	regra_geracao_envelope 
	order by cd_procedimento, 
		nr_seq_proc_interno, 
		cd_grupo_proc, 
		cd_especialidade, 
		cd_area_procedimento, 
		cd_setor_atendimento, 
		ie_tipo_atendimento;


BEGIN 
 
ie_gerou_p := 'N';
ds_lista_evelope_p := '';
 
open C01;
loop 
fetch C01 into 
	nr_seq_proc_interno_w, 
	ie_tipo_atendimento_w, 
	ie_mesmo_atendimento_w, 
	ie_mesma_data_exame_w, 
	cd_procedimento_w, 
	cd_setor_atendimento_w, 
	ie_origem_proced_w, 
	cd_area_procedimento_w, 
	cd_especialidade_w, 
	cd_grupo_proc_w, 
	nr_seq_regra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
 
	if (ds_lista_p IS NOT NULL AND ds_lista_p::text <> '') then 
	 
		ds_lista_w := ds_lista_p;
		while (ds_lista_w IS NOT NULL AND ds_lista_w::text <> '') loop 
		begin 
			tam_lista_w	:= length(ds_lista_w);
			ie_pos_virgula_w	:= position(';' in ds_lista_w);
			 
			if (ie_pos_virgula_w <> 0) then 
				ds_prescricao_w		:= substr(ds_lista_w,1,(ie_pos_virgula_w - 1));
				ie_pos_virgula2_w	:= position(',' in ds_prescricao_w);
				nr_prescr_lista_w	:= substr(ds_prescricao_w,1,(ie_pos_virgula2_w - 1));
				nr_seq_lista_w		:= substr(ds_prescricao_w,(ie_pos_virgula2_w + 1),255);
				ds_lista_w		:= substr(ds_lista_w,(ie_pos_virgula_w + 1),tam_lista_w);
 
				select	count(*) 
				into STRICT	qt_regra_w 
				from	prescr_procedimento a, 
					prescr_medica b, 
					atendimento_paciente c 
				where	a.nr_prescricao = b.nr_prescricao 
				and	b.nr_atendimento = c.nr_atendimento 
				and	a.nr_Sequencia = (nr_seq_lista_w)::numeric  
				and	a.nr_prescricao = (nr_prescr_lista_w)::numeric  
				and (obter_se_valor_nulo_igual(nr_seq_proc_interno_w, a.nr_seq_proc_interno) = 'S' and coalesce(cd_procedimento_w::text, '') = '' 
				   or (obter_se_valor_nulo_igual(cd_procedimento_w,a.cd_procedimento) = 'S' and obter_se_valor_nulo_igual(ie_origem_proced_w, a.ie_origem_proced)= 'S' and coalesce(nr_seq_proc_interno_w::text, '') = '') 
					 or (obter_se_valor_nulo_igual(cd_procedimento_w,a.cd_procedimento) = 'S' and obter_se_valor_nulo_igual(ie_origem_proced_w, a.ie_origem_proced)= 'S' and obter_se_valor_nulo_igual(nr_seq_proc_interno_w, a.nr_seq_proc_interno) = 'S'))		 
				and	 coalesce(ie_tipo_atendimento_w, c.ie_tipo_atendimento) = c.ie_tipo_atendimento 
				and coalesce(cd_setor_atendimento_w, coalesce(a.cd_setor_atendimento, -1)) = coalesce(a.cd_setor_atendimento, -1) 
				and coalesce(cd_area_procedimento_w, coalesce(obter_area_procedimento(a.cd_procedimento, a.ie_origem_proced), -1)) = coalesce(obter_area_procedimento(a.cd_procedimento, a.ie_origem_proced), -1) 
				and coalesce(cd_especialidade_w, coalesce(obter_especialidade_proced(a.cd_procedimento, a.ie_origem_proced), -1)) = coalesce(obter_especialidade_proced(a.cd_procedimento, a.ie_origem_proced), -1) 
				and coalesce(cd_grupo_proc_w, coalesce(obter_grupo_procedimento(a.cd_procedimento, a.ie_origem_proced,'C'), -1)) = coalesce(obter_grupo_procedimento(a.cd_procedimento, a.ie_origem_proced, 'C'), -1) 
				and	gel_obter_se_exame_envelope(a.nr_sequencia, a.nr_prescricao, a.nr_seq_exame) = 'N';
 
				if (qt_regra_w > 0) then 
					select	c.cd_pessoa_fisica, 
							c.nr_atendimento, 
							a.dt_prev_execucao 
					into STRICT	cd_pessoa_Fisica_w, 
							nr_atendimento_w, 
							dt_prev_execucao_w 
					from	prescr_procedimento a, 
							prescr_medica b, 
							atendimento_paciente c 
					where	a.nr_prescricao = b.nr_prescricao 
					and	b.nr_atendimento = c.nr_atendimento 
					and	a.nr_Sequencia = (nr_seq_lista_w)::numeric  
					and	a.nr_prescricao = (nr_prescr_lista_w)::numeric;
 
					select	coalesce(max(d.nr_seq_envelope),0) 
					into STRICT	nr_seq_envelope_w 
					from	prescr_procedimento a, 
							prescr_medica b, 
							atendimento_paciente c, 
							envelope_laudo_item d 
					where	a.nr_prescricao = b.nr_prescricao 
					and	b.nr_atendimento = c.nr_atendimento 
					and	a.nr_prescricao = d.nr_prescricao 
					and	a.nr_sequencia = d.nr_seq_prescr 
					and (obter_se_valor_nulo_igual(nr_seq_proc_interno_w, a.nr_seq_proc_interno) = 'S' and coalesce(cd_procedimento_w::text, '') = '' 
				   or (obter_se_valor_nulo_igual(cd_procedimento_w,a.cd_procedimento) = 'S' and obter_se_valor_nulo_igual(ie_origem_proced_w, a.ie_origem_proced)= 'S' and coalesce(nr_seq_proc_interno_w::text, '') = '') 
					 or (obter_se_valor_nulo_igual(cd_procedimento_w,a.cd_procedimento) = 'S' and obter_se_valor_nulo_igual(ie_origem_proced_w, a.ie_origem_proced)= 'S' and obter_se_valor_nulo_igual(nr_seq_proc_interno_w, a.nr_seq_proc_interno) = 'S')) 
					and	coalesce(ie_tipo_atendimento_w, c.ie_tipo_atendimento) = c.ie_tipo_atendimento 
					and coalesce(cd_setor_atendimento_w, coalesce(a.cd_setor_atendimento, -1)) = coalesce(a.cd_setor_atendimento, -1) 
					and coalesce(cd_area_procedimento_w, coalesce(obter_area_procedimento(a.cd_procedimento, a.ie_origem_proced), -1)) = coalesce(obter_area_procedimento(a.cd_procedimento, a.ie_origem_proced), -1) 
					and coalesce(cd_especialidade_w, coalesce(obter_especialidade_proced(a.cd_procedimento, a.ie_origem_proced), -1)) = coalesce(obter_especialidade_proced(a.cd_procedimento, a.ie_origem_proced), -1) 
					and coalesce(cd_grupo_proc_w, coalesce(obter_grupo_procedimento(a.cd_procedimento, a.ie_origem_proced,'C'), -1)) = coalesce(obter_grupo_procedimento(a.cd_procedimento, a.ie_origem_proced, 'C'), -1) 
					and	gel_obter_se_exame_envelope(a.nr_sequencia, a.nr_prescricao, a.nr_seq_exame) = 'S' 
					and	c.cd_pessoa_fisica = cd_pessoa_fisica_w 
					and	((c.nr_atendimento = nr_atendimento_w) or (ie_mesmo_atendimento_w = 'N')) 
					and	((trunc(a.dt_prev_execucao) = trunc(dt_prev_execucao_w)) or (ie_mesma_data_exame_w = 'N')) 
					and	position(a.nr_prescricao||','||a.nr_sequencia in ds_lista_p) > 0 
					and	gel_obter_regra_envelope(d.nr_seq_envelope) = nr_seq_regra_w;
 
					nr_seq_envelope_w := gel_gerar_envelope((cd_funcao_p)::numeric , (nr_seq_lista_w)::numeric , (nr_prescr_lista_w)::numeric , nr_seq_regra_w, nr_seq_envelope_w, nm_usuario_p);
					 
					if (nr_seq_envelope_w > 0) then 
						ie_gerou_p := 'S';
						 
						select 	position(';'|| nr_seq_envelope_w||';' in ds_lista_evelope_p||';') 
						into STRICT	nr_pos_envelope_w 
						;
					 
						if (nr_pos_envelope_w <= 0) then 
							ds_lista_evelope_p := ds_lista_evelope_p ||';'|| nr_seq_envelope_w;
						end if;
					end if;	
 
				end if;
 
			end if;
		end;
		end loop;
	end if;
 
	end;
end loop;
close C01;
 
ds_lista_evelope_p := ds_lista_evelope_p ||';';
 
--commit; 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gel_gerar_envelope_regra ( ds_lista_p text, nm_usuario_p text, cd_funcao_p bigint, ie_gerou_p INOUT text, ds_lista_evelope_p INOUT text) FROM PUBLIC;

