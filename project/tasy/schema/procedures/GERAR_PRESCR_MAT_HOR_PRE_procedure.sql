-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prescr_mat_hor_pre ( nr_prescricao_p bigint, cd_perfil_p bigint, nm_usuario_p text) AS $body$
DECLARE



ds_horarios_w		varchar(2000);
ds_horarios_padr_w	varchar(2000);
ds_hora_w		varchar(2000);
dt_liberacao_w		timestamp;
dt_horario_w		timestamp;	
k			integer;
y			integer;
nr_sequencia_w		bigint;
nr_seq_prescr_w		integer;
qt_dose_w		double precision;
qt_total_dispensar_w	double precision;
cd_material_w		integer;
dt_primeiro_horario_w	timestamp;
ie_agrupador_w		smallint;
cd_unidade_medida_w	varchar(30);
cd_unid_med_dose_w	varchar(30);
cd_intervalo_w		varchar(7);
ie_prescricao_dieta_w	varchar(1);
nr_ocorrencia_w		double precision;
ie_esquema_alternado_w	varchar(1);
nr_seq_solucao_w	integer;

ie_agrupador_dil_w	smallint;
nr_sequencia_dil_w	bigint;
qt_dose_dil_w		double precision;
qt_total_disp_dil_w	double precision;
nr_ocorrencia_dil_w	double precision;
cd_material_dil_w	integer;
hr_prim_horario_w	varchar(5);
ie_urgente_w		varchar(1);
qt_conversao_w		double precision;
qt_dose_especial_w	double precision;
hr_dose_especial_w	varchar(5);

/* Rafael em 12/09/06 Funcionalidades da Administracao da Prescricao (ATEPAC_PG) */

nr_seq_procedimento_w	integer;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_proc_interno_w	bigint;
nr_ocor_proc_w		double precision;
ie_proc_urgente_w	varchar(1);
dt_prev_execucao_w	timestamp;
ds_hora_proc_w		varchar(2000);
dt_horario_proc_w	timestamp;
ds_horarios_proc_w	varchar(2000);
ds_horarios_padr_r_w	varchar(2000);
ds_horarios_padrao_proc_w	varchar(2000);
cd_material_exame_w	varchar(20);

nr_seq_recomendacao_w		integer;
cd_recomendacao_w		bigint;
ds_hora_rec_w			varchar(2000);
dt_horario_rec_w		timestamp;
nr_seq_classif_rec_w		bigint;
ds_horarios_rec_w		varchar(2000);
ds_horarios_padrao_rec_w	varchar(2000);
/* Fim Rafael em 12/09/06 */



/* Rafael em 07/10/2006 Funcionalidades da Administracao da Prescricao -> Identificar horarios especiais (SN, ACM e sem Horario) */

ie_se_necessario_w		varchar(1);
ie_acm_w			varchar(1);
ie_horario_especial_w		varchar(1) := 'N';
qt_dieta_w			bigint;
cd_setor_atendimento_w		integer;
cd_estabelecimento_w		smallint;
dt_prescricao_w			timestamp;
dt_prescricao_ww		timestamp;
qT_dia_adic_w			bigint := 0;
qt_registro_w			bigint;
dt_inicio_prescr_w		timestamp;

nr_seq_procedimento_novo_w	integer;
nr_seq_exame_w			bigint;
ie_status_atend_w		smallint;
ie_status_execucao_w		varchar(3);
cd_setor_atendimento_proc_w	integer;
cd_setor_coleta_w		integer;
cd_setor_entrega_w        	integer;
cd_setor_exec_fim_w       	integer;
cd_setor_exec_inic_w      	integer;
nr_seq_lab_w			varchar(20);
ie_gerar_proc_intervalo_w	varchar(1);
ie_suspenso_w			varchar(1);
ds_observacao_w			varchar(2000);
ds_dado_clinico_w		varchar(2000);
ds_material_especial_w		varchar(255);
ie_controlado_w			varchar(1);

nr_seq_prescr_hor_w		integer;
dt_horario_proc_prev_w		timestamp;
ie_proc_atual_w			varchar(1);
qt_min_agora_w			bigint;
qt_min_especial_w		bigint;
ie_classif_urgente_w		varchar(3);
dt_limite_agora_w		timestamp;
dt_limite_especial_w		timestamp;
nr_seq_classif_w		bigint;
dt_liberacao_farmacia_w		timestamp;
ie_momento_lote_w		varchar(15) := 'E';
ajustar_disp_hor_farm_w		varchar(1) := 'N';
ie_padronizado_w		varchar(1);
ie_classif_nao_padrao_w		varchar(15);
ie_regra_disp_w			varchar(1);
ie_lib_farm_w			varchar(1);
nr_agrupamento_w		double precision;
cd_protocolo_w			bigint;

ie_usuario_medico_w		varchar(1);
ie_adep_w			varchar(15);
ie_rep_adep_w			varchar(1);

varPrescrNaoMedicaADEP_w	varchar(15);

C01 CURSOR FOR
SELECT	ie_agrupador,
	nr_sequencia,
	qt_dose,
	qt_total_dispensar,
	cd_unidade_medida,
	cd_unidade_medida_dose,
	nr_ocorrencia,
	cd_material,
	ds_horarios,
	--padroniza_horario_prescr(b.ds_horarios, decode(substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1),'N','01/01/2000 23:59:59', to_char(nvl(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss'))),
	padroniza_horario_prescr(b.ds_horarios, CASE WHEN coalesce(b.qt_dia_prim_hor,0)=0 THEN CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END   ELSE '01/01/2000 23:59:59' END ),
	hr_prim_horario,
	coalesce(ie_urgencia,'N'),
	qt_dose_especial,
	hr_dose_especial,
	coalesce(ie_se_necessario,'N'),
	coalesce(ie_acm,'N'),
	substr(Obter_se_medic_controlado(b.cd_material),1,1),
	substr(obter_se_material_padronizado(a.cd_estabelecimento,b.cd_material),1,1),
	CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
	b.nr_agrupamento,
	b.cd_protocolo
from	prescr_material b,
	prescr_medica a
where	a.nr_prescricao	= b.nr_prescricao
and	a.nr_prescricao	= nr_prescricao_p
and	ie_agrupador	= 1
and	coalesce(a.dt_suspensao::text, '') = ''
and	coalesce(b.ie_suspenso,'N') <> 'S';



BEGIN

delete	FROM prescr_horario_pre
where	nr_prescricao = nr_prescricao_p;

commit;

select	dt_liberacao,
	dt_primeiro_horario,
	cd_setor_atendimento,
	coalesce(cd_estabelecimento,1),
	trunc(dt_prescricao,'mi'),
	dt_inicio_prescr,
	dt_liberacao_farmacia,
	coalesce(ie_lib_farm,'N'),
	coalesce(ie_adep,obter_se_setor_adep(cd_setor_atendimento))
into STRICT	dt_liberacao_w,
	dt_primeiro_horario_w,
	cd_setor_atendimento_w,
	cd_estabelecimento_w,
	dt_prescricao_w,
	dt_inicio_prescr_w,
	dt_liberacao_farmacia_w,
	ie_lib_farm_w,
	ie_rep_adep_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;


if (1 = 1) then
	begin
	if (coalesce(dt_primeiro_horario_w::text, '') = '') then
		dt_primeiro_horario_w	:= dt_prescricao_w;
	end if;

	open C01;
	loop
		fetch C01 into
			ie_agrupador_w,
			nr_seq_prescr_w,
			qt_dose_w,
			qt_total_dispensar_w,
			cd_unidade_medida_w,
			cd_unid_med_dose_w,
			nr_ocorrencia_w,
			cd_material_w,
			ds_horarios_w,
			ds_horarios_padr_w,
			hr_prim_horario_w,
			ie_urgente_w,
			qt_dose_especial_w,
			hr_dose_especial_w,
			ie_se_necessario_w,
			ie_acm_w,
			ie_controlado_w,
			ie_padronizado_w,
			ie_regra_disp_w,
			nr_agrupamento_w,
			cd_protocolo_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
	
		qt_dia_adic_w	:= 0;

		dt_prescricao_ww	:= dt_prescricao_w;
		if (ie_urgente_w = 'N') then
			dt_prescricao_ww	:= dt_inicio_prescr_w;
		end if;
	
		if (qt_dose_especial_w IS NOT NULL AND qt_dose_especial_w::text <> '') then
			select	coalesce(max(qt_conversao),1)
			into STRICT	qt_conversao_w
			from	material_conversao_unidade
			where	cd_material		= cd_material_w
			and	cd_unidade_medida	= cd_unid_med_dose_w;
					
			qt_dose_especial_w	:= dividir(qt_dose_especial_w, qt_conversao_w);
			qt_total_dispensar_w	:= qt_total_dispensar_w - qt_dose_especial_w;
			if (hr_dose_especial_w = '  :  ') then
				hr_dose_especial_w	:= '00:00';
			end if;
			dt_horario_w		:= to_date(to_char(dt_prescricao_w,'dd/mm/yyyy')||' '||hr_dose_especial_w||':00','dd/mm/yyyy hh24:mi:ss');
	
			select	nextval('prescr_horario_pre_seq')
			into STRICT	nr_sequencia_w
			;
	
			hr_dose_especial_w	:= replace(hr_dose_especial_w,'A','');
			
			if (dt_horario_w < dt_prescricao_w) then
				dt_horario_w	:= dt_horario_w + 1;
			end if;
			
			insert into prescr_horario_pre(
				nr_sequencia,
				nm_usuario,
				nr_prescricao,
				nr_seq_material,
				dt_horario,
				cd_material)
			values (	nr_sequencia_w,
				nm_usuario_p,
				nr_prescricao_p,
				nr_seq_prescr_w,
				dt_horario_w,
				cd_material_w);
			
		end if;
	
		if (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then		
			while	(ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
				select	position(' ' in ds_horarios_padr_w)
				into STRICT	k
				;
	
				if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
					ds_hora_w		:= substr(ds_horarios_padr_w, 1, k-1);
					ds_hora_w		:= replace(ds_hora_w, ' ','');
					ds_horarios_padr_w	:= substr(ds_horarios_padr_w, k + 1, 2000);
				elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
					ds_hora_w 		:= replace(ds_horarios_padr_w,' ','');
					ds_horarios_padr_w	:= '';
				end if;
				
				if (position(':' in ds_hora_w) = 4) and (length(ds_hora_w) = 4) then
					ds_hora_w	:= ds_hora_w || '00';
				end if;
				
				if (position('A' in ds_hora_w) > 0) and (ie_urgente_w = 'N') and (qt_dia_adic_w = 0) then
					qt_dia_adic_w	:= 1;
				elsif (position('AA' in ds_hora_w) > 0) and (ie_urgente_w = 'N') then
					qt_dia_adic_w	:= qt_dia_adic_w + 1;
				end if;
	
				ds_hora_w	:= replace(ds_hora_w,'A','');
				ds_hora_w	:= replace(ds_hora_w,'A','');
				
				dt_horario_w	:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_prescricao_ww + qt_dia_adic_w, replace(ds_hora_w,'A',''));
				
				select	nextval('prescr_horario_pre_seq')
				into STRICT	nr_sequencia_w
				;
					
				if (dt_horario_w < dt_prescricao_ww) then
					dt_horario_w	:= dt_horario_w + 1;
				end if;
				
				insert into prescr_horario_pre(
					nr_sequencia,
					nm_usuario,
					nr_prescricao,
					nr_seq_material,
					dt_horario,
					cd_material)
				values (	nr_sequencia_w,
					nm_usuario_p,
					nr_prescricao_p,
					nr_seq_prescr_w,
					dt_horario_w,
					cd_material_w);
	
			end loop;
			
		else
			if (hr_prim_horario_w = '  :  ') then
				hr_prim_horario_w	:= null;
			end if;
			ds_hora_w	:= coalesce(hr_prim_horario_w, substr(to_char(dt_primeiro_horario_w,'dd/mm/yyyy hh24:mi:ss'),12,5));
			dt_horario_w	:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_prescricao_ww, ds_hora_w);
	
			select	nextval('prescr_horario_pre_seq')
			into STRICT	nr_sequencia_w
			;
	
			if (dt_horario_w < dt_prescricao_ww) then
				dt_horario_w	:= dt_horario_w + 1;
			end if;
			
			insert into prescr_horario_pre(
				nr_sequencia,
				nm_usuario,
				nr_prescricao,
				nr_seq_material,
				dt_horario,
				cd_material)
			values (	nr_sequencia_w,
				nm_usuario_p,
				nr_prescricao_p,
				nr_seq_prescr_w,
				dt_horario_w,
				cd_material_w);
		end if;
		
		
		
	end loop;
	close C01;
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescr_mat_hor_pre ( nr_prescricao_p bigint, cd_perfil_p bigint, nm_usuario_p text) FROM PUBLIC;

