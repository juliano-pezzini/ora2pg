-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lote_cobr_escrit_instr ( cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_cobranca_w		cobranca_escritural.nr_sequencia%type;	
nr_titulo_w				titulo_receber_instr.nr_titulo%type;
vl_cobranca_w			titulo_receber_instr.vl_cobranca%type;
vl_desconto_w			titulo_receber_instr.vl_desconto%type;
cd_ocorrencia_w			titulo_receber_instr.cd_ocorrencia%type;
nr_seq_carteira_cobr_w	titulo_receber.nr_seq_carteira_cobr%type;
nr_seq_conta_banco_w	titulo_receber.nr_seq_conta_banco%type;	
nr_remessa_cobr_w		banco_estabelecimento.nr_remessa_cobr%type;
nr_seq_tipo_cobranca_param_w	varchar(255);
nr_seq_tipo_cobranca_w		cobranca_escritural.nr_seq_tipo%type;				

/*Cursor que vai buscar as contas/carteiras dos titulos que devem ser enviados p instrucao para gerar os lotes de cobranças necessários.*/
										 
C01 CURSOR FOR
	SELECT	b.nr_seq_conta_banco,
			coalesce(b.nr_seq_carteira_cobr, -1)
	from	titulo_receber_instr a,
			titulo_receber b
	where	coalesce(a.ie_selecionado,'N')		= 'S' -- somente títulos selecionados
	and		coalesce(a.ie_instrucao_enviada,'N')	= 'N' -- somente títulos que ainda não foram enviados.
	and		a.nr_titulo = b.nr_titulo
	group by b.nr_seq_conta_banco,
		  	 coalesce(b.nr_seq_carteira_cobr, -1);
			
nr_sequencia_w			titulo_receber_instr.nr_sequencia%type;
vl_desc_previsto_w		titulo_receber_instr.vl_desc_previsto%type;
cd_agencia_bancaria_w	titulo_receber_instr.cd_agencia_bancaria%type;
nr_conta_w				titulo_receber_instr.nr_conta%type;
ie_digito_conta_w		titulo_receber_instr.ie_digito_conta%type;
vl_saldo_inclusao_w		titulo_receber_instr.vl_saldo_inclusao%type;	
cd_banco_w				titulo_receber_instr.cd_banco%type;			

/*Cursor para pegar os títulos da titulo_Receber_instr que vao ser vinculados no(s) lote(s) criado(s) pelo c01*/
					
C02 CURSOR FOR
	SELECT	a.nr_sequencia,
			a.nr_titulo,
			a.vl_cobranca,
			a.vl_desconto,
			a.vl_desc_previsto,
			a.cd_agencia_bancaria,
			a.nr_conta,
			a.ie_digito_conta,
			a.cd_ocorrencia,
			a.vl_saldo_inclusao,
			a.cd_banco
	from	titulo_receber_instr a
	where	coalesce(a.ie_selecionado,'N')		= 'S' 
	and		coalesce(a.ie_instrucao_enviada,'N')	= 'N'
	and		coalesce((SELECT max(x.nr_seq_conta_banco) from titulo_receber x where x.nr_titulo = a.nr_titulo),nr_seq_conta_banco_w) = nr_seq_conta_banco_w
	and		coalesce((select max(x.nr_seq_carteira_cobr) from titulo_receber x where x.nr_titulo = a.nr_titulo),nr_seq_carteira_cobr_w) = nr_seq_carteira_cobr_w;

nr_seq_tit_rec_cobr_w		titulo_receber_cobr.nr_sequencia%type;
										

BEGIN

open C01;
loop
fetch C01 into	
	nr_seq_conta_banco_w,
	nr_seq_carteira_cobr_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	if (coalesce(nr_seq_conta_banco_w::text, '') = '') then
		--Algun(ns) título(s) selecionados estão sem conta bancária! Não será possível gerar o lote de instrução.
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(853982);
	end if;
	
	select	max(cd_banco),
			max(nr_remessa_cobr)
	into STRICT	cd_banco_w,
			nr_remessa_cobr_w
	from	banco_estabelecimento
	where	nr_sequencia = nr_seq_conta_banco_w;
	
	nr_seq_cobranca_w := null;
	
	/*Verificar se já foi gerado lote para a conta em questao*/

	select	max(a.nr_sequencia)
	into STRICT	nr_seq_cobranca_w
	from	cobranca_escritural a
	where	a.nr_seq_conta_banco	= nr_seq_conta_banco_w
	and		a.cd_estabelecimento	= cd_estabelecimento_p
	and		CASE WHEN nr_seq_carteira_cobr_w=-1 THEN -1  ELSE a.nr_seq_carteira_cobr END   = CASE WHEN nr_seq_carteira_cobr_w=-1 THEN -1  ELSE nr_seq_carteira_cobr_w END
	and		a.ie_remessa_retorno	= 'I'
	and		coalesce(a.ds_arquivo::text, '') = '' -- Não pode ter gerado o arquivo ainda.
	and		trunc(a.dt_remessa_retorno) = trunc(clock_timestamp()); --Gerados hoje
	
	/*Caso não achar, gerar o lote*/

	if (coalesce(nr_seq_cobranca_w::text, '') = '') then
		
		begin
			nr_seq_tipo_cobranca_param_w := Obter_Param_Usuario(815, 49, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, nr_seq_tipo_cobranca_param_w);
			nr_seq_tipo_cobranca_w := (nr_seq_tipo_cobranca_param_w)::numeric;
		exception when others then
			nr_seq_tipo_cobranca_w := null;
		end;

		select	nextval('cobranca_escritural_seq')
		into STRICT	nr_seq_cobranca_w
		;
		
		insert into cobranca_escritural( 	nr_sequencia,
											cd_estabelecimento,
											cd_banco,
											ie_remessa_retorno,
											dt_remessa_retorno,
											dt_atualizacao,
											nm_usuario,
											nr_seq_conta_banco,
											ie_emissao_bloqueto,
											dt_atualizacao_nrec,
											nm_usuario_nrec,
											nr_seq_carteira_cobr,
											nr_seq_tipo)
							values (		nr_seq_cobranca_w,
											cd_estabelecimento_p,
											cd_banco_w,
											'I',
											clock_timestamp(),
											clock_timestamp(),
											nm_usuario_p,
											nr_seq_conta_banco_w,
											2,
											clock_timestamp(),
											nm_usuario_p,
											CASE WHEN nr_seq_carteira_cobr_w=-1 THEN null  ELSE nr_seq_carteira_cobr_w END ,
											nr_seq_tipo_cobranca_w);
		
		/*2016223 - Gerar nr remessa no lote de instrução de acordo com o que já faz no fonte, ou busca o NR do cadastro da conta. Não fiz isso antes do insert, pois a regra atual já existente no fonte faz no afterpost, para evitar algum possível problema.*/

		if (nr_remessa_cobr_w IS NOT NULL AND nr_remessa_cobr_w::text <> '') then -- Esse é quando foi informado uma sequencia de remessa no cadastro da conta, feito para o hTML.
			nr_remessa_cobr_w := nr_remessa_cobr_w + 1;

			update	banco_estabelecimento
			set		nr_remessa_cobr = nr_remessa_cobr_w
			where	nr_sequencia	= nr_seq_conta_banco_w;
			
		else

			select 	max(nr_remessa) --Esse é o que já faz no codigo fonte de todas as plataformas.
			into STRICT	nr_remessa_cobr_w
			from   	cobranca_escritural
			where  	nr_seq_conta_banco 	= nr_seq_conta_banco_w
			and (nr_seq_tipo 		= nr_seq_tipo_cobranca_w or coalesce(nr_seq_tipo::text, '') = '')
			and    	cd_estabelecimento 	= cd_estabelecimento_p
			and    	ie_remessa_retorno 	in ('R','I');
			
			if (nr_remessa_cobr_w IS NOT NULL AND nr_remessa_cobr_w::text <> '') then
				nr_remessa_cobr_w := nr_remessa_cobr_w + 1;
			end if;

		end if;	

		if (nr_remessa_cobr_w IS NOT NULL AND nr_remessa_cobr_w::text <> '') then
			update	cobranca_escritural
			set		nr_remessa		= nr_remessa_cobr_w
			where	nr_sequencia	= nr_seq_cobranca_w;
		end if;
	
	end if;
	
	/*Incluir os títulos nas remessas*/

	open C02;
	loop
	fetch C02 into	
		nr_sequencia_w,
		nr_titulo_w,
		vl_cobranca_w,
		vl_desconto_w,
		vl_desc_previsto_w,
		cd_agencia_bancaria_w,
		nr_conta_w,
		ie_digito_conta_w,
		cd_ocorrencia_w,	
		vl_saldo_inclusao_w,
		cd_banco_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		CALL vincular_titulo_rec_cobranca(	nr_seq_cobranca_w,
										nr_titulo_w,
										nm_usuario_p,
										cd_banco_w,
										0,
										vl_desconto_w,
										null,
										cd_ocorrencia_w);
							
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_tit_rec_cobr_w
		from	titulo_receber_cobr a
		where	a.nr_titulo 		= nr_titulo_w
		and		a.nr_seq_cobranca 	= nr_seq_cobranca_w;
		
		if (nr_seq_tit_rec_cobr_w IS NOT NULL AND nr_seq_tit_rec_cobr_w::text <> '') then
		
			update	titulo_receber_cobr
			set		vl_cobranca 		= coalesce(vl_cobranca_w, vl_cobranca),
					vl_desconto 		= coalesce(vl_desconto_w, vl_desconto),
					vl_desc_previsto 	= coalesce(vl_desc_previsto_w, vl_desc_previsto),
					vl_saldo_inclusao 	= coalesce(vl_saldo_inclusao_w, vl_saldo_inclusao),
					cd_agencia_bancaria = coalesce(cd_agencia_bancaria_w, cd_agencia_bancaria),
					nr_conta			= coalesce(nr_conta_w, nr_conta),
					ie_digito_conta		= coalesce(ie_digito_conta_w, ie_digito_conta)
			where	nr_sequencia 		= nr_seq_tit_rec_cobr_w
			and		nr_seq_cobranca 	= nr_seq_cobranca_w;
			
			/*Atualizar o titulo na INSTR para nao aparecer mais para gerar nos proximos lotes.*/

			update	titulo_receber_instr
			set		ie_instrucao_enviada = 'S'
			where	nr_sequencia	=	nr_sequencia_w
			and		nr_titulo		= 	nr_titulo_w;
				
		end if;
		
		end;
	end loop;
	close C02;
		
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lote_cobr_escrit_instr ( cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

