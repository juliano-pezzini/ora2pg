-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prim_hor_livre_agecons ( cd_agenda_p bigint, cd_especialidade_p bigint, VarAgendasUsuario_p text, dt_inicio_p timestamp, dt_final_p timestamp, ie_classif_agenda_p text, cd_turno_p text, cd_convenio_p text, nm_usuario_p text) AS $body$
DECLARE

 
cd_agenda_w			bigint;
ie_feriado_w			varchar(1);
ie_sobra_horario_w		varchar(1);
dt_agenda_w			timestamp;
cd_estabelecimento_w		smallint;
ds_retorno_w			varchar(255);
ie_gerar_w			varchar(1);
qt_livre_w			bigint;
ie_restringe_agenda_w		varchar(1);

C01 CURSOR FOR 
SELECT 	a.cd_agenda, 
	a.ie_feriado, 
	a.ie_gerar_sobra_horario, 
	a.cd_estabelecimento 
from	agenda a 
where	obter_se_contido(a.cd_agenda,VarAgendasUsuario_p) = 'S' 
and	((a.cd_agenda = cd_agenda_p) or (cd_agenda_p = 0)) 
and	((a.cd_especialidade = cd_especialidade_p) or (cd_especialidade_p = 0));

C02 CURSOR FOR 
SELECT 	a.cd_agenda, 
	a.ie_feriado, 
	a.ie_gerar_sobra_horario, 
	a.cd_estabelecimento 
from	agenda a 
where	a.cd_tipo_agenda = 3 
and	((a.cd_agenda = cd_agenda_p) or (cd_agenda_p = 0)) 
and	((a.cd_especialidade = cd_especialidade_p) or (cd_especialidade_p = 0));

 

BEGIN 
 
ie_restringe_agenda_w := Obter_Param_usuario(821, 437, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_restringe_agenda_w);
 
if (ie_restringe_agenda_w = 'N') then 
	open c01;
		loop 
		fetch c01 into	cd_agenda_w, 
				ie_feriado_w, 
				ie_sobra_horario_w, 
				cd_estabelecimento_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin 
 
			dt_agenda_w := dt_inicio_p;
 
			ie_gerar_w := 'S';
			 
			while(dt_agenda_w <= dt_final_p) loop 
				begin 
								 
				if (ie_gerar_w = 'S') then 
					begin 
					ds_retorno_w := horario_livre_consulta(cd_estabelecimento_w, cd_agenda_w, ie_feriado_w, dt_agenda_w, nm_usuario_p, 'S', ie_sobra_horario_w, 'S', 0, ds_retorno_w);
					end;
				end if;
				 
				select 	count(*) 
				into STRICT	qt_livre_w 
				from	agenda_consulta 
				where	trunc(dt_agenda) = trunc(dt_agenda_w) 
				and	cd_agenda = cd_agenda_w 
				and	ie_status_agenda = 'L' 
				and	((ie_classif_agenda = ie_classif_agenda_p) or (ie_classif_agenda_p = '')) 
				and	((cd_convenio = cd_convenio_p) or (coalesce(cd_convenio::text, '') = '')) 
				and	((cd_turno = cd_turno_p) or (cd_turno_p = '2'));
		 
				if (qt_livre_w > 0) then			 
					ie_gerar_w := 'N';
				end if;
						 
				dt_agenda_w := dt_agenda_w + 1;
				 
				end;
			end loop;
 
			 
			 
			end;
		end loop;
	close c01;
else 
	open c02;
		loop 
		fetch c02 into	cd_agenda_w, 
				ie_feriado_w, 
				ie_sobra_horario_w, 
				cd_estabelecimento_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin 
 
			dt_agenda_w := dt_inicio_p;
 
			ie_gerar_w := 'S';
			 
			while(dt_agenda_w <= dt_final_p) loop 
				begin 
								 
				if (ie_gerar_w = 'S') then 
					begin 
					ds_retorno_w := horario_livre_consulta(cd_estabelecimento_w, cd_agenda_w, ie_feriado_w, dt_agenda_w, nm_usuario_p, 'S', ie_sobra_horario_w, 'S', 0, ds_retorno_w);
					end;
				end if;
				 
				select 	count(*) 
				into STRICT	qt_livre_w 
				from	agenda_consulta 
				where	trunc(dt_agenda) = trunc(dt_agenda_w) 
				and	cd_agenda = cd_agenda_w 
				and	ie_status_agenda = 'L' 
				and	((ie_classif_agenda = ie_classif_agenda_p) or (ie_classif_agenda_p = '')) 
				and	((cd_convenio = cd_convenio_p) or (coalesce(cd_convenio::text, '') = '')) 
				and	((cd_turno = cd_turno_p) or (cd_turno_p = '2'));
		 
				if (qt_livre_w > 0) then 
					ie_gerar_w := 'N';
				end if;
						 
				dt_agenda_w := dt_agenda_w + 1;
				 
				end;
			end loop;
			end;
		end loop;
	close c02;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prim_hor_livre_agecons ( cd_agenda_p bigint, cd_especialidade_p bigint, VarAgendasUsuario_p text, dt_inicio_p timestamp, dt_final_p timestamp, ie_classif_agenda_p text, cd_turno_p text, cd_convenio_p text, nm_usuario_p text) FROM PUBLIC;

