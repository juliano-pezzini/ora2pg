-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_lote_aberto_web ( nr_seq_prestador_p bigint, cd_estabelecimento_p bigint, nr_seq_prestador_web_p bigint, nm_usuario_p text, nr_protocolo_prest_p text, ie_agrupa_lote_p text, nr_seq_lote_p INOUT bigint) AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Verificar se possui lote em aberto na importação de arquivo XML
----------------------------------------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatórios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------
Pontos de atenção:  ie_agrupa_lote_p = Utilizado para verificar se o sistema vai agrupar os lotes pelo número de protocolo do prestador.
Rotina Utilizada dentro da PCK da nova importação de contas médicas: PLS_IMP_XML_CTA_PCK
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/nr_seq_lote_w		bigint;
ie_agrupa_lote_w	varchar(2) := 'N';
nr_protocolo_prest_w	varchar(20);



BEGIN

nr_protocolo_prest_w := nr_protocolo_prest_p;

if (ie_agrupa_lote_p IS NOT NULL AND ie_agrupa_lote_p::text <> '') then
	ie_agrupa_lote_w := ie_agrupa_lote_p;
end if;

select	max(a.nr_sequencia)
into STRICT	nr_seq_lote_w
from	pls_lote_protocolo_conta a
where	a.cd_estabelecimento = cd_estabelecimento_p
and	a.nr_seq_prestador = nr_seq_prestador_p
and	a.nr_seq_prestador_web = nr_seq_prestador_web_p
and	a.ie_tipo_lote = 'P'
and	coalesce(a.dt_confirmacao::text, '') = ''
and	((ie_agrupa_lote_w = 'S' and 	coalesce(nr_protocolo_prestador, 'X') = nr_protocolo_prest_p)
or (ie_agrupa_lote_w = 'N'  and 	coalesce(nr_protocolo_prestador::text, '') = ''))
and 	not exists (SELECT  1
		   from    pls_xml_lote x
		   where   x.nr_seq_lote = a.nr_sequencia
		   and (x.ie_status = 'IMP'
		   or	   x.ie_status = 'VAL'));

/*
caso o parametro (parâmetro[28] - Agrupar os lotes pelo número do protocolo do prestador) não esteja setado para o sistema agrupar os lotes, o sistema não vai  salvar o NR_PROTOCOLO_PRESTADOR na PLS_LOTE_PROTOCOLO_CONTA,
pois caso o parâmetro seja  habilitado o sistema não vai agrupar corretamente os  lotes
*/
if (ie_agrupa_lote_w <> 'S') then
	nr_protocolo_prest_w := null;
end if;


if (coalesce(nr_seq_lote_w::text, '') = '') then
	nr_seq_lote_w := pls_gerar_lote_analise(nr_seq_prestador_p, null, nm_usuario_p, cd_estabelecimento_p, nr_seq_prestador_web_p, nr_seq_lote_w);

	update	pls_lote_protocolo_conta
	set	nr_protocolo_prestador = nr_protocolo_prest_w
	where	nr_sequencia = nr_seq_lote_w;

	commit;
end if;

nr_seq_lote_p := nr_seq_lote_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_lote_aberto_web ( nr_seq_prestador_p bigint, cd_estabelecimento_p bigint, nr_seq_prestador_web_p bigint, nm_usuario_p text, nr_protocolo_prest_p text, ie_agrupa_lote_p text, nr_seq_lote_p INOUT bigint) FROM PUBLIC;

