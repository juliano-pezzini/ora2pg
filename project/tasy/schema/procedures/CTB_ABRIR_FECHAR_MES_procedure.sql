-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_abrir_fechar_mes ( nr_sequencia_p bigint, ie_liberar_orc_p text, nm_usuario_p text) AS $body$
DECLARE


dt_referencia_w		timestamp;
dt_abertura_w		timestamp;
dt_fechamento_w		timestamp;
dt_inicio_ctb_w		timestamp;
dt_fim_ctb_w		timestamp;
qt_referencia_w		bigint;
nr_seq_lote_w		bigint;
cd_estabelecimento_w	smallint;
nr_seq_log_w		bigint := 0;
cd_empresa_w		bigint;
dt_liberacao_w		timestamp;
cd_ano_w		smallint;
cd_periodo_w		smallint;
ie_consiste_mes_w	varchar(1);
qt_registros_w		bigint;
ie_reabr_lote_custo_w	varchar(1) := 'S';
ie_consiste_mes_sup_w	varchar(1);
qt_consiste_mes_sup_w	bigint;
ie_permite_abrir_mes_w varchar(1);



BEGIN	

select	dt_referencia,
	dt_abertura,
	dt_fechamento
into STRICT	dt_referencia_w,
	dt_abertura_w,
	dt_fechamento_w
from	ctb_mes_ref
where	nr_sequencia	= nr_sequencia_p;

select 	b.cd_empresa,
	dt_inicio_ctb,
	dt_fim_ctb
into STRICT	cd_empresa_w,
	dt_inicio_ctb_w,
	dt_fim_ctb_w
from	empresa b, ctb_mes_ref a
where	a.nr_sequencia	= nr_sequencia_p
  and	a.cd_empresa		= b.cd_empresa;

begin
cd_ano_w		:= (to_char(dt_referencia_w,'yyyy'))::numeric;
cd_periodo_w		:= (to_char(dt_referencia_w,'mm'))::numeric;
cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;

select	max(dt_liberacao)
into STRICT	dt_liberacao_w
from	bsc_calculo
where	cd_periodo 	= cd_periodo_w
and	cd_ano		= cd_ano_w
and	cd_empresa	= cd_empresa_w;

ie_consiste_mes_w	:= coalesce(Obter_valor_param_usuario(923,85,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'N');
exception when others then
	ie_consiste_mes_w	:= 'N';
end;

ie_consiste_mes_sup_w	:= coalesce(obter_valor_param_usuario(923,104,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'N');
ie_reabr_lote_custo_w := obter_param_usuario(923, 100, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_reabr_lote_custo_w);

ie_permite_abrir_mes_w := coalesce(substr(obter_valor_param_usuario(923, 123, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),1,1), 'S');

if (ie_consiste_mes_w = 'S') and (dt_fechamento_w IS NOT NULL AND dt_fechamento_w::text <> '') and (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(202919);
end if;

if (coalesce(dt_abertura_w::text, '') = '') then
 	if (dt_referencia_w	>= dt_inicio_ctb_w) and (dt_referencia_w	<= dt_fim_ctb_w) then

		update ctb_mes_ref
		set	dt_abertura	= clock_timestamp(),
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p,
			nm_usuario_abertura	= nm_usuario_p
		where	nr_sequencia	= nr_sequencia_p;

		nr_seq_log_w := ctb_grava_log_mes(nr_seq_log_w, nm_usuario_p, nr_sequencia_p, '1', '');
	else
		CALL wheb_mensagem_pck.exibir_mensagem_abort(202920);
	end if;
elsif (coalesce(dt_fechamento_w::text, '') = '') then
	select	count(*),
		max(nr_lote_contabil),
		max(cd_estabelecimento)
	into STRICT	qt_referencia_w,
		nr_seq_lote_w,
		cd_estabelecimento_w
	from	lote_contabil
	where	nr_seq_mes_ref	= nr_sequencia_p
	and	coalesce(dt_atualizacao_saldo::text, '') = '';
	if (qt_referencia_w = 0) then
		update ctb_mes_ref
		set	dt_fechamento		= clock_timestamp(),
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			nm_usuario_fechamento	= nm_usuario_p
		where	nr_sequencia		= nr_sequencia_p;

		nr_seq_log_w := ctb_grava_log_mes(nr_seq_log_w, nm_usuario_p, nr_sequencia_p, '2', '');
		if (ie_liberar_orc_p = 'S') then
			CALL ctb_liberar_orcamento_mes(cd_empresa_w,null,nr_sequencia_p,'L',nm_usuario_p);
		end if;
	else
		CALL wheb_mensagem_pck.exibir_mensagem_abort(202923,'nr_seq_lote_w='|| nr_seq_lote_w ||';cd_estabelecimento_w='||cd_estabelecimento_w);
	end if;
else
	
	select	coalesce(count(*),0)
	into STRICT	qt_registros_w
	from	orcamento_custo_import
	where	nr_seq_mes_ref = nr_sequencia_p;
	
	if (qt_registros_w > 0) and (ie_reabr_lote_custo_w = 'N') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(202921);
	end if;
	
	select	coalesce(count(*),0)
	into STRICT	qt_consiste_mes_sup_w
	from	ctb_mes_ref r,
			lote_contabil l,
			ctb_movimento m
	where	l.nr_seq_mes_ref = r.nr_sequencia
	and		m.nr_lote_contabil = l.nr_lote_contabil
	and		(r.dt_fechamento IS NOT NULL AND r.dt_fechamento::text <> '')
	and		r.dt_referencia > dt_referencia_w;
	
	if (qt_consiste_mes_sup_w > 0) and (ie_consiste_mes_sup_w = 'S')then
		--O mês não pode ser aberto porque existem meses superiores que estão fechados.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(257042);		
	end if;
	
	if (dt_inicio_ctb_w > dt_referencia_w  and ie_permite_abrir_mes_w = 'N') then
		 CALL wheb_mensagem_pck.exibir_mensagem_abort(1065247);
	else
		update ctb_mes_ref
		set	dt_fechamento		 = NULL,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			nm_usuario_fechamento	 = NULL,
			dt_abertura = clock_timestamp()
		where	nr_sequencia		= nr_sequencia_p;		
	end if;
	nr_seq_log_w := ctb_grava_log_mes(nr_seq_log_w, nm_usuario_p, nr_sequencia_p, '1', '');
end if;	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_abrir_fechar_mes ( nr_sequencia_p bigint, ie_liberar_orc_p text, nm_usuario_p text) FROM PUBLIC;

