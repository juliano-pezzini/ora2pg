-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE nut_inserir_conduta_dietot (nr_seq_servico_p bigint, ds_lista_dieta_p text, ds_lista_suplemento_p text, ds_lista_enteral_p text, nm_usuario_p text, dt_inicio_p timestamp, dt_fim_p timestamp, ds_lista_servicos_p text, ds_mensagem_p INOUT text, nr_seq_dieta_p INOUT bigint ) AS $body$
DECLARE


lista_informacao_w		varchar(1000);
ie_contador_w			bigint	:= 0;
tam_lista_w			bigint;
ie_pos_virgula_w		smallint;
cd_dieta_w			bigint;
cd_setor_w			integer;
nr_atendimento_w		bigint;
nr_sequencia_w			bigint;
nr_seq_produto_w		bigint;
nr_seq_classif_serv_w		bigint;
nr_seq_classif_serv_dia_w	bigint;
nr_seq_dieta_w			bigint;
cd_material_w			integer;
ie_existe_classif_serv_w	varchar(1);
ds_mensagem_w			varchar(1000)	:= '';
nr_seq_dieta_anterior_w		bigint;
qt_serv_dieta_w			bigint;
ie_tipo_dieta_w			varchar(15);
nr_seq_leite_deriv_w		bigint;
qt_dose_produto_w		double precision;
cd_material_adic_w		integer;
cd_unidade_medida_adic_w	varchar(30);
qt_porcentagem_w		nut_atend_serv_dia_dieta.qt_porcentagem%type;
qt_dose_adic_w			double precision;
qt_dose_w			double precision;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		b.nr_seq_classif
	from	nut_atend_serv_dia a,
		nut_servico b
	where	a.nr_seq_servico = b.nr_sequencia
	and	a.nr_atendimento = nr_atendimento_w
	and	a.dt_servico between trunc(dt_inicio_p, 'dd') and fim_dia(dt_fim_p)
	and	a.cd_setor_atendimento = cd_setor_w
	and (Obter_Se_Contido_char(b.nr_sequencia, ds_lista_servicos_p) = 'S'
	or	ie_tipo_dieta_w <> 'O')
	and	Nut_Obter_Se_Conduta_Suspensa(a.nr_sequencia) = 'N';

C02 CURSOR FOR
	SELECT	nr_seq_dieta
	from	nut_atend_serv_dieta
	where	nr_seq_servico = nr_sequencia_w;

C03 CURSOR FOR
	SELECT	a.nr_seq_produto,
		b.cd_material,
		b.nr_seq_classif_serv
	from	w_produto_lactario a,
		nutricao_leite_deriv b,
		material c
	where	a.nr_seq_produto = b.nr_sequencia
	and	b.cd_material	= c.cd_material
	and	a.nr_prescricao	= 0
	and	a.nm_usuario	= nm_usuario_p
	and	a.nr_seq_adicional = 0;

c04 CURSOR FOR
	SELECT	b.cd_material,
		coalesce(b.cd_unidade_medida,c.cd_unidade_medida_consumo),
		CASE WHEN a.qt_porcentagem=0 THEN null  ELSE a.qt_porcentagem END ,
		CASE WHEN a.qt_dose=0 THEN null  ELSE a.qt_dose END
	from	w_produto_lactario a,
		nutricao_leite_deriv_adic b,
		material c
	where	a.nr_seq_adicional = b.nr_sequencia
	and	b.cd_material	= c.cd_material
	and	a.nr_seq_produto = nr_seq_leite_deriv_w
	and	a.nr_prescricao	= 0
	and	a.nm_usuario	= nm_usuario_p;


BEGIN

if (nr_seq_servico_p IS NOT NULL AND nr_seq_servico_p::text <> '') then

	select	cd_setor_atendimento,
		nr_atendimento
	into STRICT	cd_setor_w,
		nr_atendimento_w
	from	nut_atend_serv_dia
	where	nr_sequencia = nr_seq_servico_p;

	-- Deletar dietas orais
	if (ds_lista_dieta_p IS NOT NULL AND ds_lista_dieta_p::text <> '') then
		ie_tipo_dieta_w := 'O';
		open C01;
		loop
		fetch C01 into
			nr_sequencia_w,
			nr_seq_classif_serv_dia_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin

			delete 	FROM nut_atend_serv_dia_dieta
			where	nr_seq_servico = nr_sequencia_w
			and	coalesce(dt_liberacao::text, '') = '';

			open C02;
			loop
			fetch C02 into
				nr_seq_dieta_anterior_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin

				delete 	from nut_atend_serv_dieta a
				where	a.nr_seq_servico = nr_sequencia_w
				and	a.nr_seq_dieta = nr_seq_dieta_anterior_w
				and 	exists (SELECT	1
						from	nut_atend_serv_dia_dieta b
						where	b.nr_sequencia = a.nr_seq_dieta
						and	coalesce(b.dt_liberacao::text, '') = ''
						and 	exists (select	1
								from	dieta c
								where	c.cd_dieta = b.cd_dieta
								and	c.nr_seq_classif_serv = nr_seq_classif_serv_dia_w));

				select	count(*)
				into STRICT	qt_serv_dieta_w
				from	nut_atend_serv_dieta
				where	nr_seq_dieta = nr_seq_dieta_anterior_w;

				if (qt_serv_dieta_w = 0) then
					delete 	from nut_atend_serv_dia_dieta
					where	nr_sequencia = nr_seq_dieta_anterior_w
					and	coalesce(dt_liberacao::text, '') = '';
				end if;

				end;
			end loop;
			close C02;

			end;
		end loop;
		close C01;
	end if;

	-- Inserir dietas do tipo ORAL
	lista_informacao_w	:= ds_lista_dieta_p;
	while	(lista_informacao_w IS NOT NULL AND lista_informacao_w::text <> '') and
		ie_contador_w < 200 loop
		begin

		tam_lista_w			:= length(lista_informacao_w);
		ie_pos_virgula_w		:= position(',' in lista_informacao_w);

		/* Obter a sequência lida */

		if (ie_pos_virgula_w <> 0) then
			cd_dieta_w		:= substr(lista_informacao_w,1,(ie_pos_virgula_w - 1));
			lista_informacao_w	:= substr(lista_informacao_w,(ie_pos_virgula_w + 1),tam_lista_w);
		end if;

		select	max(nr_seq_classif_serv)
		into STRICT	nr_seq_classif_serv_w
		from	dieta
		where	cd_dieta = cd_dieta_w;

		begin
		select	'S'
		into STRICT	ie_existe_classif_serv_w
		from	nut_atend_serv_dia a,
			nut_servico b
		where	a.nr_seq_servico = b.nr_sequencia
		and	a.nr_atendimento = nr_atendimento_w
		and	a.dt_servico between trunc(dt_inicio_p, 'dd') and fim_dia(dt_fim_p)
		and	a.cd_setor_atendimento = cd_setor_w
		and	b.nr_seq_classif = nr_seq_classif_serv_w
		and	Nut_Obter_Se_Conduta_Suspensa(a.nr_sequencia) = 'N'  LIMIT 1;
		exception
		when others then
			ie_existe_classif_serv_w := 'N';
		end;

		if (ie_existe_classif_serv_w = 'S') then
			select	nextval('nut_atend_serv_dia_dieta_seq')
			into STRICT	nr_seq_dieta_w
			;

			insert into nut_atend_serv_dia_dieta(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_dieta,
				ie_tipo_nutricao
			) values (
				nr_seq_dieta_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_dieta_w,
				'O');

			ie_tipo_dieta_w := 'O';
			open C01;
			loop
			fetch C01 into
				nr_sequencia_w,
				nr_seq_classif_serv_dia_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				if (nr_seq_classif_serv_w = nr_seq_classif_serv_dia_w) then
					insert into nut_atend_serv_dieta(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_servico,
						nr_seq_dieta
					) values (
						nextval('nut_atend_serv_dieta_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_sequencia_w,
						nr_seq_dieta_w);
				end if;
				end;
			end loop;
			close C01;
		else
			ds_mensagem_w := OBTER_DESC_EXPRESSAO(347066);
		end if;

		ie_contador_w	:= ie_contador_w + 1;

		end;
	end loop;

	-- Inserir SUPLEMENTOS
	lista_informacao_w	:= ds_lista_suplemento_p;
	while	(lista_informacao_w IS NOT NULL AND lista_informacao_w::text <> '') and
		ie_contador_w < 200 loop
		begin

		tam_lista_w			:= length(lista_informacao_w);
		ie_pos_virgula_w		:= position(',' in lista_informacao_w);

		/* Obter a sequência lida */

		if (ie_pos_virgula_w <> 0) then
			nr_seq_produto_w	:= substr(lista_informacao_w,1,(ie_pos_virgula_w - 1));
			lista_informacao_w	:= substr(lista_informacao_w,(ie_pos_virgula_w + 1),tam_lista_w);
		end if;

		select	max(cd_material),
			max(nr_seq_classif_serv)
		into STRICT	cd_material_w,
			nr_seq_classif_serv_w
		from	nutricao_produto
		where	nr_sequencia = nr_seq_produto_w;

		begin
		select	'S'
		into STRICT	ie_existe_classif_serv_w
		from	nut_atend_serv_dia a,
			nut_servico b
		where	a.nr_seq_servico = b.nr_sequencia
		and	a.nr_atendimento = nr_atendimento_w
		and	a.dt_servico between trunc(dt_inicio_p, 'dd') and fim_dia(dt_fim_p)
		and	a.cd_setor_atendimento = cd_setor_w
		and	b.nr_seq_classif = nr_seq_classif_serv_w
		and	Nut_Obter_Se_Conduta_Suspensa(a.nr_sequencia) = 'N'  LIMIT 1;
		exception
		when others then
			ie_existe_classif_serv_w := 'N';
		end;

		if (ie_existe_classif_serv_w = 'S') then
			select	nextval('nut_atend_serv_dia_dieta_seq')
			into STRICT	nr_seq_dieta_w
			;

			insert into nut_atend_serv_dia_dieta(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_material,
				ie_tipo_nutricao,
				nr_seq_produto,
				hr_prim_horario
			) values (
				nr_seq_dieta_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_material_w,
				'SMP',
				nr_seq_produto_w,
				'00:00');

			ie_tipo_dieta_w := 'SMP';
			open C01;
			loop
			fetch C01 into
				nr_sequencia_w,
				nr_seq_classif_serv_dia_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				if (nr_seq_classif_serv_w = nr_seq_classif_serv_dia_w) then
					insert into nut_atend_serv_dieta(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_servico,
						nr_seq_dieta
					) values (
						nextval('nut_atend_serv_dieta_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_sequencia_w,
						nr_seq_dieta_w);
				end if;
				end;
			end loop;
			close C01;
		else
			ds_mensagem_w := OBTER_DESC_EXPRESSAO(347066);
		end if;

		ie_contador_w	:= ie_contador_w + 1;

		end;
	end loop;

	-- Inserir ENTERAIS
	lista_informacao_w	:= ds_lista_enteral_p;
	while	(lista_informacao_w IS NOT NULL AND lista_informacao_w::text <> '') and
		ie_contador_w < 200 loop
		begin

		tam_lista_w			:= length(lista_informacao_w);
		ie_pos_virgula_w		:= position(',' in lista_informacao_w);

		/* Obter a sequência lida */

		if (ie_pos_virgula_w <> 0) then
			nr_seq_produto_w	:= substr(lista_informacao_w,1,(ie_pos_virgula_w - 1));
			lista_informacao_w	:= substr(lista_informacao_w,(ie_pos_virgula_w + 1),tam_lista_w);
		end if;

		select	max(cd_material),
			max(nr_seq_classif_serv)
		into STRICT	cd_material_w,
			nr_seq_classif_serv_w
		from	nutricao_produto
		where	nr_sequencia = nr_seq_produto_w;

		begin
		select	'S'
		into STRICT	ie_existe_classif_serv_w
		from	nut_atend_serv_dia a,
			nut_servico b
		where	a.nr_seq_servico = b.nr_sequencia
		and	a.nr_atendimento = nr_atendimento_w
		and	a.dt_servico between trunc(dt_inicio_p, 'dd') and fim_dia(dt_fim_p)
		and	a.cd_setor_atendimento = cd_setor_w
		and	b.nr_seq_classif = nr_seq_classif_serv_w
		and	Nut_Obter_Se_Conduta_Suspensa(a.nr_sequencia) = 'N'  LIMIT 1;
		exception
		when others then
			ie_existe_classif_serv_w := 'N';
		end;

		if (ie_existe_classif_serv_w = 'S') then
			select	nextval('nut_atend_serv_dia_dieta_seq')
			into STRICT	nr_seq_dieta_w
			;

			insert into nut_atend_serv_dia_dieta(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_material,
				ie_tipo_nutricao,
				nr_seq_produto,
				hr_prim_horario
			) values (
				nr_seq_dieta_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_material_w,
				'SNE',
				nr_seq_produto_w,
				'00:00');

			ie_tipo_dieta_w := 'SNE';
			open C01;
			loop
			fetch C01 into
				nr_sequencia_w,
				nr_seq_classif_serv_dia_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				if (nr_seq_classif_serv_w = nr_seq_classif_serv_dia_w) then
					insert into nut_atend_serv_dieta(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_servico,
						nr_seq_dieta
					) values (
						nextval('nut_atend_serv_dieta_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_sequencia_w,
						nr_seq_dieta_w);
				end if;
				end;
			end loop;
			close C01;
		else
			ds_mensagem_w := OBTER_DESC_EXPRESSAO(347066);
		end if;

		ie_contador_w	:= ie_contador_w + 1;

		end;
	end loop;

	-- Inserir LEITES e DERIVADOS
	open C03;
	loop
	fetch C03 into
		nr_seq_leite_deriv_w,
		cd_material_w,
		nr_seq_classif_serv_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		begin
		select	'S'
		into STRICT	ie_existe_classif_serv_w
		from	nut_atend_serv_dia a,
			nut_servico b
		where	a.nr_seq_servico = b.nr_sequencia
		and	a.nr_atendimento = nr_atendimento_w
		and	a.dt_servico between trunc(dt_inicio_p, 'dd') and fim_dia(dt_fim_p)
		and	a.cd_setor_atendimento = cd_setor_w
		and	b.nr_seq_classif = nr_seq_classif_serv_w
		and	Nut_Obter_Se_Conduta_Suspensa(a.nr_sequencia) = 'N'  LIMIT 1;
		exception
		when others then
			ie_existe_classif_serv_w := 'N';
		end;

		if (ie_existe_classif_serv_w = 'S') then
			select	nextval('nut_atend_serv_dia_dieta_seq')
			into STRICT	nr_seq_dieta_w
			;

			insert into nut_atend_serv_dia_dieta(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_material,
				ie_tipo_nutricao,
				nr_seq_leite_deriv,
				hr_prim_horario
			) values (
				nr_seq_dieta_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_material_w,
				'L',
				nr_seq_leite_deriv_w,
				'00:00');

			ie_tipo_dieta_w := 'L';
			open C01;
			loop
			fetch C01 into
				nr_sequencia_w,
				nr_seq_classif_serv_dia_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				if (nr_seq_classif_serv_w = nr_seq_classif_serv_dia_w) then
					insert into nut_atend_serv_dieta(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_servico,
						nr_seq_dieta
					) values (
						nextval('nut_atend_serv_dieta_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_sequencia_w,
						nr_seq_dieta_w);
				end if;
				end;
			end loop;
			close C01;

			open C04;
			loop
			fetch C04 into
				cd_material_adic_w,
				cd_unidade_medida_adic_w,
				qt_porcentagem_w,
				qt_dose_adic_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin

				/*if	(qt_dose_adic_w	<> 0) then
					qt_dose_w		:= qt_dose_adic_w;
					qt_porcentagem_w	:= trunc(((qt_dose_w * 100) / qt_volume_total_w));
				else
					qt_dose_w		:= (nvl(qt_porcentagem_w,0) * qt_volume_total_w / 100);
				end if;*/
				insert into nut_atend_serv_dia_dieta(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_material,
					ie_tipo_nutricao,
					nr_sequencia_diluicao,
					hr_prim_horario,
					qt_dose,
					qt_porcentagem,
					cd_unidade_medida_dosa
				) values (
					nextval('nut_atend_serv_dia_dieta_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_material_adic_w,
					'L',
					nr_seq_dieta_w,
					'00:00',
					qt_dose_adic_w,
					qt_porcentagem_w,
					cd_unidade_medida_adic_w);

				end;
			end loop;
			close C04;

		else
			ds_mensagem_w := OBTER_DESC_EXPRESSAO(347066);
		end if;

		end;
	end loop;
	close C03;

	-- Limpa a tabela temporária
	CALL PLT_Gerar_w_produto(0,0,0,'L',nm_usuario_p,null,null,null,'');

end if;

commit;

ds_mensagem_p 	:= ds_mensagem_w;
nr_seq_dieta_p	:= nr_seq_dieta_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nut_inserir_conduta_dietot (nr_seq_servico_p bigint, ds_lista_dieta_p text, ds_lista_suplemento_p text, ds_lista_enteral_p text, nm_usuario_p text, dt_inicio_p timestamp, dt_fim_p timestamp, ds_lista_servicos_p text, ds_mensagem_p INOUT text, nr_seq_dieta_p INOUT bigint ) FROM PUBLIC;

