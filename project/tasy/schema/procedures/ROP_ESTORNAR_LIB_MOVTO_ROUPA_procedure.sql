-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rop_estornar_lib_movto_roupa ( nr_seq_lote_movto_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


ds_operacao_w   varchar(10);
nr_seq_local_orig_w rop_lote_movto.nr_seq_local%type;
nr_seq_local_dest_w rop_lote_movto.nr_seq_local_orig_dest%type;
nr_seq_roupa_movto_w  rop_movto_roupa.nr_seq_roupa%type;
nr_seq_lote_w   rop_movto_roupa.nr_seq_lote%type;
cd_barra_roupa_w  rop_roupa.cd_barra_roupa%type;
cd_material_w   rop_lote_roupa.cd_material%type;
qt_roupa_w    rop_movto_roupa.qt_roupa%type;
qt_saldo_local_orig_w rop_saldo_roupa.qt_saldo%type;
qt_saldo_local_dest_w rop_saldo_roupa.qt_saldo%type;
dt_liberacao_w    rop_lote_movto.dt_liberacao%type;
qt_saldo_w rop_saldo_roupa.qt_saldo%type;
nr_seq_operacao_w rop_lote_movto.nr_seq_operacao%type;
ie_entrada_saida_w rop_operacao.ie_entrada_saida%type;

c01 CURSOR FOR
  SELECT  nr_seq_roupa
  from  rop_movto_roupa
  where nr_seq_lote = nr_seq_lote_movto_p;


BEGIN

open c01;
loop
fetch c01 into
  nr_seq_roupa_movto_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
  begin
  select  a.nr_seq_lote,
    b.cd_barra_roupa,
    c.cd_material
  into STRICT  nr_seq_lote_w,
    cd_barra_roupa_w,
    cd_material_w
  from  rop_lote_movto d,
    rop_lote_roupa c,
    rop_roupa b,
    rop_movto_roupa a
  where b.nr_sequencia = a.nr_seq_roupa
  and c.nr_sequencia = b.nr_seq_lote_roupa
  and d.nr_sequencia = a.nr_seq_lote
  and a.nr_seq_roupa = nr_seq_roupa_movto_w
  and a.nr_seq_lote = (SELECT max(x.nr_seq_lote)
        from  rop_movto_roupa x
        where x.nr_seq_roupa = a.nr_seq_roupa);

  if (nr_seq_lote_w = nr_seq_lote_movto_p) then 
    begin
    select  a.qt_roupa,
      b.nr_seq_local,
      b.nr_seq_local_orig_dest,
      rop_obter_saldo_roupa(a.nr_seq_roupa,b.nr_seq_local,trunc(b.dt_liberacao,'mm')),
      rop_obter_saldo_roupa(a.nr_seq_roupa,b.nr_seq_local_orig_dest,trunc(b.dt_liberacao,'mm')),
      substr(rop_obter_dados_operacao(b.nr_seq_operacao,'T'),1,15),
      b.dt_liberacao,
      b.nr_seq_operacao
    into STRICT  qt_roupa_w,
      nr_seq_local_orig_w,
      nr_seq_local_dest_w,
      qt_saldo_local_orig_w,
      qt_saldo_local_dest_w,
      ds_operacao_w,
      dt_liberacao_w,
	  nr_seq_operacao_w
    from  rop_lote_movto b,
      rop_movto_roupa a
    where b.nr_sequencia = a.nr_seq_lote
    and a.nr_seq_roupa = nr_seq_roupa_movto_w
    and b.nr_sequencia = nr_seq_lote_movto_p;

	select ie_entrada_saida
	into STRICT ie_entrada_saida_w
	from rop_operacao
	where nr_sequencia = nr_seq_operacao_w;

	exception
	when no_data_found or too_many_rows then
		ie_entrada_saida_w := null;
		
    if (nr_seq_local_orig_w IS NOT NULL AND nr_seq_local_orig_w::text <> '') and (ie_entrada_saida_w = 'E') then
      select coalesce(qt_saldo_local_orig_w - qt_roupa_w, 0)
      into STRICT qt_saldo_w
;
      if (qt_saldo_w > 0) then
	update  rop_saldo_roupa
        set qt_saldo = qt_saldo_w
        where nr_seq_local = nr_seq_local_orig_w
        and dt_mesano_referencia = trunc(dt_liberacao_w,'mm')
        and nr_seq_roupa = nr_seq_roupa_movto_w;
      else
        update  rop_saldo_roupa
        set qt_saldo = 0
        where nr_seq_local = nr_seq_local_orig_w
        and dt_mesano_referencia = trunc(dt_liberacao_w,'mm')
        and nr_seq_roupa = nr_seq_roupa_movto_w;
      end if;
	  update  rop_saldo_roupa
      set qt_saldo = qt_saldo_local_dest_w + qt_roupa_w
      where nr_seq_local = nr_seq_local_dest_w
      and dt_mesano_referencia = trunc(dt_liberacao_w,'mm')
      and nr_seq_roupa = nr_seq_roupa_movto_w;
    elsif (ds_operacao_w = 'TS') and (nr_seq_local_orig_w IS NOT NULL AND nr_seq_local_orig_w::text <> '') and (nr_seq_local_dest_w IS NOT NULL AND nr_seq_local_dest_w::text <> '') and (ie_entrada_saida_w = 'S') then
      select coalesce(qt_saldo_local_dest_w - qt_roupa_w, 0)
      into STRICT qt_saldo_w
;
      if (qt_saldo_w > 0) then
        update  rop_saldo_roupa
        set qt_saldo = qt_saldo_w
        where nr_seq_local = nr_seq_local_dest_w
        and dt_mesano_referencia = trunc(dt_liberacao_w,'mm')
        and nr_seq_roupa = nr_seq_roupa_movto_w;
      else
        update  rop_saldo_roupa
        set qt_saldo = 0
        where nr_seq_local = nr_seq_local_dest_w
        and dt_mesano_referencia = trunc(dt_liberacao_w,'mm')
        and nr_seq_roupa = nr_seq_roupa_movto_w;
      end if;
      update  rop_saldo_roupa
      set qt_saldo = qt_saldo_local_orig_w + qt_roupa_w
      where nr_seq_local = nr_seq_local_orig_w
      and dt_mesano_referencia = trunc(dt_liberacao_w,'mm')
      and nr_seq_roupa = nr_seq_roupa_movto_w;
    end if;

    if (ds_operacao_w <> 'B') then
      update  rop_roupa
      set nm_usuario = nm_usuario_p,
        nr_seq_local = nr_seq_local_orig_w
      where nr_sequencia = nr_seq_roupa_movto_w;
    else
      update  rop_roupa
      set dt_baixa   = NULL,
        cd_motivo_baixa  = NULL,
        ie_situacao = 'A',
        dt_atualizacao  = clock_timestamp(),
        cd_local_baixa   = NULL
      where nr_sequencia  = nr_seq_roupa_movto_w;
    end if;
    end;
  else
    begin
    rollback;
    ds_erro_p := wheb_mensagem_pck.get_texto(1055721,'CD_MATERIAL=' || cd_material_w || ';CD_BARRAS_ROUPA=' || cd_barra_roupa_w);
    return;
    end;
  end if;
  end;
end loop;

update  rop_lote_movto
set nm_usuario  = nm_usuario_p,
  dt_liberacao   = NULL
where nr_sequencia  = nr_seq_lote_movto_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rop_estornar_lib_movto_roupa ( nr_seq_lote_movto_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

