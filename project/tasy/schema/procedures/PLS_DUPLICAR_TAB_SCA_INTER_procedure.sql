-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_duplicar_tab_sca_inter ( nr_seq_intercambio_p bigint, nr_seq_vinculo_p bigint, nr_seq_tabela_p bigint, ie_commit_p text, nm_usuario_p text) AS $body$
DECLARE


nm_tabela_w			varchar(255);
cd_codigo_ant_w			varchar(20);
ie_tabela_contrato_w		varchar(1);
ie_proposta_adesao_w		varchar(1);
ie_simulacao_preco_w		varchar(1);
ie_tabela_base_w		varchar(1);
vl_preco_atual_w		double precision;
vl_preco_nao_subsidiado_w	double precision;
vl_preco_inicial_w		double precision;
tx_acrescimo_w			double precision;
nr_seq_segurado_w		bigint;
nr_seq_sca_w			bigint;
nr_seq_contrato_w		bigint;
nr_contrato_principal_w		bigint;
nr_seq_nova_tabela_w		bigint;
nr_seq_tabela_origem_w		bigint;
nr_sequencia_w			bigint;
nr_seq_plano_w			bigint;
qt_idade_inicial_w		integer;
qt_idade_final_w		integer;
dt_fim_vigencia_w		timestamp;
dt_inicio_vigencia_w		timestamp;

C01 CURSOR FOR
	SELECT	qt_idade_inicial,
		qt_idade_final,
		vl_preco_atual,
		tx_acrescimo,
		vl_preco_nao_subsidiado,
		vl_preco_inicial
	from	pls_plano_preco
	where	nr_seq_tabela	= nr_seq_tabela_p
	order by qt_idade_inicial;


BEGIN

if (nr_seq_tabela_p <> 0) then

	select	'Tabela para o intercâmbio '||nr_sequencia||' - '||substr(obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc),1,200)
	into STRICT	nm_tabela_w
	from	pls_intercambio
	where	nr_sequencia = nr_seq_intercambio_p;

	select	nr_sequencia,
		dt_inicio_vigencia,
		ie_tabela_base,
		dt_fim_vigencia,
		nr_seq_plano,
		cd_codigo_ant,
		ie_tabela_contrato,
		nr_seq_tabela_origem,
		ie_proposta_adesao,
		ie_simulacao_preco
	into STRICT	nr_sequencia_w,
		dt_inicio_vigencia_w,
		ie_tabela_base_w,
		dt_fim_vigencia_w,
		nr_seq_plano_w,
		cd_codigo_ant_w,
		ie_tabela_contrato_w,
		nr_seq_tabela_origem_w,
		ie_proposta_adesao_w,
		ie_simulacao_preco_w
	from	pls_tabela_preco
	where	nr_sequencia =	nr_seq_tabela_p;

	select	nextval('pls_tabela_preco_seq')
	into STRICT	nr_seq_nova_tabela_w
	;

	select	nr_seq_segurado,
		nr_seq_contrato
	into STRICT	nr_seq_segurado_w,
		nr_seq_contrato_w
	from	pls_sca_vinculo
	where	nr_sequencia = nr_seq_vinculo_p;

	if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
		select	'Tabela para o beneficiário '||nr_seq_segurado_w||' - '||substr(obter_nome_pf(cd_pessoa_fisica),1,100)
		into STRICT	nm_tabela_w
		from	pls_segurado
		where	nr_sequencia = nr_seq_segurado_w;
	end if;

	insert	into pls_tabela_preco(	nr_sequencia, dt_inicio_vigencia, ie_tabela_base,
					dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
					nm_usuario_nrec, nm_tabela, dt_fim_vigencia,
					nr_seq_plano, cd_codigo_ant, nr_contrato,
					ie_tabela_contrato, nr_segurado, nr_seq_tabela_origem,
					ie_proposta_adesao, ie_simulacao_preco,dt_liberacao,
					nr_seq_sca_vinculo)
		values (		nr_seq_nova_tabela_w, dt_inicio_vigencia_w, ie_tabela_base_w,
					clock_timestamp(), nm_usuario_p, clock_timestamp(),
					nm_usuario_p, nm_tabela_w, dt_fim_vigencia_w,
					nr_seq_plano_w, cd_codigo_ant_w, nr_seq_contrato_w,
					ie_tabela_contrato_w, nr_seq_segurado_w, nr_sequencia_w,
					ie_proposta_adesao_w, ie_simulacao_preco_w,clock_timestamp(),
					nr_seq_vinculo_p);

	open C01;
	loop
	fetch C01 into	qt_idade_inicial_w,
			qt_idade_final_w,
			vl_preco_atual_w,
			tx_acrescimo_w,
			vl_preco_nao_subsidiado_w,
			vl_preco_inicial_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

		insert into pls_plano_preco(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_seq_tabela,
			qt_idade_inicial,
			qt_idade_final,
			vl_preco_inicial,
			vl_preco_atual,
			tx_acrescimo,
			vl_preco_nao_subsidiado)
		values (nextval('pls_plano_preco_seq'),
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_nova_tabela_w,
			qt_idade_inicial_w,
			qt_idade_final_w,
			vl_preco_inicial_w,
			vl_preco_atual_w,
			tx_acrescimo_w,
			vl_preco_nao_subsidiado_w);
	end loop;
	close C01;

	update	pls_sca_vinculo
	set	nr_seq_tabela 		= nr_seq_nova_tabela_w,
		nr_seq_tabela_origem	= nr_sequencia_w,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_sequencia		= nr_seq_vinculo_p;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_duplicar_tab_sca_inter ( nr_seq_intercambio_p bigint, nr_seq_vinculo_p bigint, nr_seq_tabela_p bigint, ie_commit_p text, nm_usuario_p text) FROM PUBLIC;

