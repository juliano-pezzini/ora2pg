-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE envia_email_req_aprov ( nr_requisicao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
/* Dados da regra */
 
nr_seq_regra_w			bigint;
ds_email_adicional_w		varchar(2000);
cd_perfil_dispara_w		integer;
ie_momento_envio_w		varchar(1);
ie_usuario_w			varchar(1);
nr_documento_w			bigint;
ie_origem_processo_w		varchar(10);
ie_envia_pessoa_deleg_w		varchar(1);
qt_registro_w			bigint;
ds_email_remetente_w		varchar(255);

/*Dados do aprovador*/
 
nr_seq_aprovacao_w		bigint;
ds_email_w			varchar(255);

/*Dados do e-mail*/
 
ds_assunto_w			varchar(255);
ds_mensagem_w			varchar(4000);
ds_destinatarios_w		varchar(4000);
nm_usuario_origem_w		varchar(255);
ds_email_origem_w		varchar(255);

/*Requisição Material*/
 
nr_requisicao_w			bigint;
nm_requisitante_w		varchar(255);
nm_solicitante_req_w		varchar(255);
ie_urgente_req_w		varchar(3);
ds_operacao_estoque_w		varchar(40);
ds_local_estoque_req_w		varchar(40);
ds_local_est_dest_w		varchar(40);
ds_centro_custo_req_w		varchar(80);
ds_material_req_w		varchar(255);
ds_material_req_ww		varchar(3000);
ds_mat_est_req_w		varchar(355);
ds_mat_est_req_ww		varchar(3000);

c01 CURSOR FOR 
SELECT	b.ds_email 
from	pessoas_processo_aprovacao_v a, 
	usuario b 
where	a.nm_usuario = b.nm_usuario 
and	a.nr_sequencia = nr_seq_aprovacao_w 
and	a.ie_aprov_reprov = 'P' 
and	(b.ds_email IS NOT NULL AND b.ds_email::text <> '') 
group by	ds_email;

c02 CURSOR FOR 
SELECT	ds_email 
from	(SELECT	b.ds_email 
	from	pessoas_processo_aprovacao_v a, 
		usuario b 
	where	a.nm_usuario = b.nm_usuario 
	and	a.nr_sequencia = nr_seq_aprovacao_w 
	and	a.ie_aprov_reprov = 'P' 
	and	not exists (select	1 
			from	pessoa_fisica_delegacao x 
			where	x.cd_pessoa_fisica = a.cd_pessoa_fisica 
			and	((coalesce(trunc(x.dt_inicio_limite),trunc(clock_timestamp())) <= trunc(clock_timestamp())) and (trunc(x.dt_limite) >= trunc(clock_timestamp())))) 
	
union all
 
	select	b.ds_email 
	from	usuario b, 
		pessoa_fisica_delegacao c, 
		pessoas_processo_aprovacao_v a 
	where	a.cd_pessoa_fisica = c.cd_pessoa_fisica 
	and	c.cd_pessoa_substituta = b.cd_pessoa_fisica 
	and	((coalesce(trunc(c.dt_inicio_limite),trunc(clock_timestamp())) <= trunc(clock_timestamp())) and (trunc(c.dt_limite) >= trunc(clock_timestamp()))) 
	and	a.nr_sequencia = nr_seq_aprovacao_w 
	and	a.ie_aprov_reprov = 'P') alias25 
where	(ds_email IS NOT NULL AND ds_email::text <> '') 
group by	ds_email;

c03 CURSOR FOR 
SELECT	distinct 
	nr_seq_aprovacao 
from	item_requisicao_material 
where	nr_requisicao = nr_requisicao_p 
and	(nr_seq_aprovacao IS NOT NULL AND nr_seq_aprovacao::text <> '');

c04 CURSOR FOR 
SELECT	substr(obter_desc_material(cd_material),1,255) ds_material, 
	substr(obter_desc_material(cd_material),1,255) || ' - ' || campo_mascara_virgula_casas(obter_saldo_estoque_solic_req(nr_requisicao, nr_sequencia),2) ds_material_estoque 
from item_requisicao_material 
where nr_requisicao = nr_requisicao_p;


BEGIN 
 
qt_registro_w := 0;
 
select	count(*) 
into STRICT	qt_registro_w 
from	pessoas_processo_aprovacao_v 
where	nr_sequencia in ( SELECT nr_seq_aprovacao from item_requisicao_material where nr_requisicao = nr_requisicao_p) 
and	ie_aprov_reprov = 'P';
 
 
select	coalesce(max(nr_sequencia),0), 
	max(replace(ds_email_adicional,',',';')), 
	max(cd_perfil_disparar), 
	coalesce(max(ie_momento_envio),'I'), 
	coalesce(max(ds_email_remetente),'X'), 
	coalesce(max(ie_envia_pessoa_deleg),'N') 
into STRICT	nr_seq_regra_w, 
	ds_email_adicional_w, 
	cd_perfil_dispara_w, 
	ie_momento_envio_w, 
	ds_email_remetente_w, 
	ie_envia_pessoa_deleg_w 
from	regra_envio_email_compra 
where	ie_tipo_mensagem = 72 
and	ie_situacao = 'A' 
and	cd_estabelecimento = cd_estabelecimento_p 
and	obter_se_envia_email_regra(nr_requisicao_p, 'RM', ie_tipo_mensagem, cd_estabelecimento) = 'S';
 
if (nr_seq_regra_w > 0) and 
	((coalesce(cd_perfil_dispara_w::text, '') = '') or 
	(cd_perfil_dispara_w IS NOT NULL AND cd_perfil_dispara_w::text <> '' AND cd_perfil_dispara_w = obter_perfil_ativo)) and (qt_registro_w > 0) then 
	begin 
 
	open c04;
	loop 
	fetch c04 into 
		ds_material_req_w, 
		ds_mat_est_req_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin 
		ds_material_req_ww	:= substr(ds_material_req_ww	|| ds_material_req_w	|| chr(13) || chr(10),1,3000);
		ds_mat_est_req_ww	:= substr(ds_mat_est_req_ww	|| ds_mat_est_req_w	|| chr(13) || chr(10),1,3000);
		end;
	end loop;
	close c04;
 
	select	nr_requisicao, 
		substr(obter_nome_pessoa_fisica(cd_pessoa_requisitante,null),1,255) nm_pessoa_requisitante, 
		substr(obter_nome_pf(cd_pessoa_solicitante),1,255) nm_pessoa_solicitante, 
		CASE WHEN ie_urgente='S' THEN wheb_mensagem_pck.get_texto(300026)  ELSE wheb_mensagem_pck.get_texto(300027) END , 
		substr(obter_desc_operacao_estoque(cd_operacao_estoque),1,40) ds_operacao_estoque, 
		substr(obter_desc_local_estoque(cd_local_estoque),1,40) ds_local_estoque, 
		substr(obter_desc_local_estoque(cd_local_estoque_destino),1,40) ds_local_est_dest, 
		substr(obter_desc_centro_custo(cd_centro_custo),1,80) ds_centro_custo 
	into STRICT	nr_requisicao_w, 
		nm_requisitante_w, 
		nm_solicitante_req_w, 
		ie_urgente_req_w, 
		ds_operacao_estoque_w, 
		ds_local_estoque_req_w, 
		ds_local_est_dest_w, 
		ds_centro_custo_req_w 
	from	requisicao_material 
	where	nr_requisicao = nr_requisicao_p;
 
	select	ds_assunto, 
		ds_mensagem_padrao 
	into STRICT	ds_assunto_w, 
		ds_mensagem_w 
	from	regra_envio_email_compra 
	where	nr_sequencia = nr_seq_regra_w;
 
	ds_assunto_w	:= substr(replace_macro(ds_assunto_w, '@nr_requisicao', nr_requisicao_w), 1, 4000);
	ds_assunto_w	:= substr(replace_macro(ds_assunto_w, '@nome_requisitante', nm_requisitante_w), 1, 4000);
	ds_assunto_w	:= substr(replace_macro(ds_assunto_w, '@nome_solicitante', nm_solicitante_req_w), 1, 4000);
	ds_assunto_w	:= substr(replace_macro(ds_assunto_w, '@data_liberacao_requisicao', clock_timestamp()), 1, 4000);
	ds_assunto_w	:= substr(replace_macro(ds_assunto_w, '@requisicao_urgente', ie_urgente_req_w), 1, 4000);
	ds_assunto_w	:= substr(replace_macro(ds_assunto_w, '@desc_operacao_estoque', ds_operacao_estoque_w), 1, 4000);
	ds_assunto_w	:= substr(replace_macro(ds_assunto_w, '@desc_local_estoque', ds_local_estoque_req_w), 1, 4000);
	ds_assunto_w	:= substr(replace_macro(ds_assunto_w, '@desc_local_estoque_destino', ds_local_est_dest_w), 1, 4000);
	ds_assunto_w	:= substr(replace_macro(ds_assunto_w, '@desc_centro_custo', ds_centro_custo_req_w), 1, 4000);
	ds_assunto_w	:= substr(replace_macro(ds_assunto_w, '@desc_materiais_requisicao', ds_material_req_ww), 1, 4000);
	ds_assunto_w	:= substr(replace_macro(ds_assunto_w, '@desc_materiais_qt_estoque', ds_mat_est_req_ww), 1, 4000);
	ds_assunto_w	:= substr(ds_assunto_w, 1, 255);
 
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@nr_requisicao', nr_requisicao_w), 1, 4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@nome_requisitante', nm_requisitante_w), 1, 4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@nome_solicitante', nm_solicitante_req_w), 1, 4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@data_liberacao_requisicao', clock_timestamp()), 1, 4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@requisicao_urgente', ie_urgente_req_w), 1, 4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@desc_operacao_estoque', ds_operacao_estoque_w), 1, 4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@desc_local_estoque', ds_local_estoque_req_w), 1, 4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@desc_local_estoque_destino', ds_local_est_dest_w), 1, 4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@desc_centro_custo', ds_centro_custo_req_w), 1, 4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@desc_materiais_requisicao', ds_material_req_ww), 1, 4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@desc_materiais_qt_estoque', ds_mat_est_req_ww), 1, 4000);
	ds_mensagem_w	:= substr(ds_mensagem_w, 1, 4000);
 
	select	coalesce(max(ie_usuario),'U') 
	into STRICT	ie_usuario_w 
	from	regra_envio_email_compra 
	where	nr_sequencia = nr_seq_regra_w;
 
	if (ie_usuario_w = 'U') then --Usuario 
		begin 
 
		select	ds_email, 
			nm_usuario 
		into STRICT	ds_email_origem_w, 
			nm_usuario_origem_w 
		from	usuario 
		where	nm_usuario = nm_usuario_p;
 
		end;
	elsif (ie_usuario_w = 'C') then --Setor compras 
		begin 
 
		select	ds_email 
		into STRICT	ds_email_origem_w 
		from	parametro_compras 
		where	cd_estabelecimento = cd_estabelecimento_p;
 
		select	coalesce(ds_fantasia,ds_razao_social) 
		into STRICT	nm_usuario_origem_w 
		from	estabelecimento_v 
		where	cd_estabelecimento = cd_estabelecimento_p;
 
		end;
	end if;
 
	if (ds_email_remetente_w <> 'X') then 
		ds_email_origem_w	:= ds_email_remetente_w;
	end if;
 
	open c03;
	loop 
	fetch c03 into	 
		nr_seq_aprovacao_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin 
 
		if (ie_envia_pessoa_deleg_w = 'S') then 
			begin 
			open c02;
			loop 
			fetch c02 into 
				ds_email_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin 
				ds_destinatarios_w	:= ds_destinatarios_w || ds_email_w || ';';		
				end;
			end loop;
			close c02;
			end;
		else 
			begin 
			open c01;
			loop 
			fetch c01 into 
				ds_email_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
				begin 
				ds_destinatarios_w	:= ds_destinatarios_w || ds_email_w || ';';		
				end;
			end loop;
			close c01;
			end;
		end if;	
		end;
	end loop;
	close c03;	
 
	if (ds_email_adicional_w IS NOT NULL AND ds_email_adicional_w::text <> '') then 
		ds_destinatarios_w	:= ds_destinatarios_w || ds_email_adicional_w;
	end if;
 
	if (ie_momento_envio_w = 'A') then 
		begin 
 
		CALL sup_grava_envio_email( 
			ie_origem_processo_w, 
			'72', 
			nr_documento_w, 
			nr_seq_aprovacao_w, 
			null, 
			ds_destinatarios_w, 
			nm_usuario_origem_w, 
			ds_email_origem_w, 
			ds_assunto_w, 
			ds_mensagem_w, 
			cd_estabelecimento_p, 
			nm_usuario_p);
 
		end;
	else 
		 
		begin 
		CALL enviar_email(ds_assunto_w,ds_mensagem_w,ds_email_origem_w,ds_destinatarios_w,nm_usuario_origem_w,'M');
		exception 
		when others then 
			null;
		end;
	end if;
 
	end;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE envia_email_req_aprov ( nr_requisicao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

