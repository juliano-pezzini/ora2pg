-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE registrar_subamostra_desig ( nr_seq_peca_p bigint, nr_seq_tipo_p bigint, ds_lista_produto_p text, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w		bigint;
nr_prescricao_w		bigint;
nr_seq_prescr_w		bigint;
cd_topografia_w		varchar(10);
cd_morfologia_w		varchar(10);
nr_seq_laudo_w		bigint;
nr_seq_tipo_w		bigint;
nr_controle_w		varchar(50);
cd_doenca_cid_w		varchar(10);
nr_revisao_w		varchar(15);
nr_fragmentos_w		double precision;
ie_contador_w		bigint;
ie_pos_virgula_w		bigint;
tam_lista_w		bigint;
lista_informacao_w		varchar(2000);
cd_item_w		varchar(255);
ie_situacao_w 		varchar(1);
NR_SEQ_MORF_DESC_ADIC_w bigint;


BEGIN

lista_informacao_w	:= ds_lista_produto_p;

if (coalesce(ds_lista_produto_p::text, '') = '') then

	--'É necessário informar os itens do tipo de amostra #@#@'
	CALL wheb_mensagem_pck.exibir_mensagem_abort(264051);

end if;

if (nr_seq_peca_p = 0) then
	--'É necessário informar a peça #@#@'
	CALL wheb_mensagem_pck.exibir_mensagem_abort(264052);

end if;

select	nr_prescricao,
	nr_seq_prescr,
	cd_topografia,
	cd_morfologia,
	nr_seq_laudo,
	cd_doenca_cid,
	nr_revisao,
	nr_fragmentos,
  	ie_situacao,
    NR_SEQ_MORF_DESC_ADIC
into STRICT	nr_prescricao_w,
	nr_seq_prescr_w,
	cd_topografia_w,
	cd_morfologia_w,
	nr_seq_laudo_w,
	cd_doenca_cid_w,
	nr_revisao_w,
	nr_fragmentos_w,
  	ie_situacao_w,
    NR_SEQ_MORF_DESC_ADIC_w
from	prescr_proc_peca
where	nr_sequencia	= nr_seq_peca_p;

while(lista_informacao_w IS NOT NULL AND lista_informacao_w::text <> '') or (ie_contador_w > 200) loop
	
	tam_lista_w		:= length(lista_informacao_w);
	ie_pos_virgula_w	:= position(',' in lista_informacao_w);

	if (ie_pos_virgula_w <> 0) then
		cd_item_w		:= substr(lista_informacao_w,1,(ie_pos_virgula_w - 1));
		lista_informacao_w	:= substr(lista_informacao_w,(ie_pos_virgula_w + 1),tam_lista_w);
	end if;

	select	max(Calcular_numero_controle_peca(nr_seq_tipo_p, nr_prescricao_w, nr_seq_prescr_w))
	into STRICT	nr_controle_w
	;

	select	nextval('prescr_proc_peca_seq')
	into STRICT	nr_sequencia_w
	;

	insert into prescr_proc_peca(nr_sequencia,
		nr_prescricao,
		nr_seq_prescr,
		cd_topografia,
		cd_morfologia,
		dt_atualizacao,
		nm_usuario,
		nr_seq_laudo,
		cd_doenca_cid,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_peca,
		nr_seq_tipo,
		nr_controle,
		nr_revisao,
		nr_fragmentos,
		ds_designacao,
    		ie_situacao,
        NR_SEQ_MORF_DESC_ADIC)
	values (nr_sequencia_w,
		nr_prescricao_w,
		nr_seq_prescr_w,
		cd_topografia_w,
		cd_morfologia_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_laudo_w,
		cd_doenca_cid_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_peca_p,
		nr_seq_tipo_p,
		nr_controle_w,
		nr_revisao_w,
		nr_fragmentos_w,
		cd_item_w,
    ie_situacao_w,
    NR_SEQ_MORF_DESC_ADIC_w);
	
	ie_contador_w	:= ie_contador_w + 1;
	
end loop;
	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE registrar_subamostra_desig ( nr_seq_peca_p bigint, nr_seq_tipo_p bigint, ds_lista_produto_p text, nm_usuario_p text) FROM PUBLIC;

