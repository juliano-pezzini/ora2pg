-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_faturamento_direto_mat ( nr_seq_material_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_atendimento_w		bigint;
cd_setor_atendimento_w		integer;
nr_seq_atepacu_w		bigint;
dt_entrada_unidade_w		timestamp;
cd_cgc_prestador_w		varchar(14);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
cd_estabelecimento_w		smallint;
cd_motivo_exc_conta_w		smallint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
tx_faturamento_w		bigint;
nr_seq_regra_fat_direto_w	bigint;
nr_seq_material_w		bigint;
vl_material_w			double precision	:= 0;
vl_fat_direto_w			double precision	:= 0;
vl_fat_direto_atual_w		double precision	:= 0;
nr_seq_procedimento_w		bigint;
nr_seq_proc_regra_w		bigint;
nr_interno_conta_w		bigint;
cd_motivo_exc_regra_w		smallint;
qt_regra_fat_direto_w		bigint;
vl_unitario_w			double precision;
ie_origem_fat_direto_w		varchar(3);
ie_acao_mat_conta_w		varchar(1);


BEGIN

if (coalesce(nr_seq_material_p,0) <> 0) then

	select	max(a.nr_atendimento),
		max(obter_setor_atendimento(a.nr_atendimento)),
		max(obter_atepacu_paciente(a.nr_atendimento,'A')),
		max(a.cd_convenio_parametro),
		max(a.cd_categoria_parametro),
		max(a.cd_estabelecimento),
		max(a.nr_interno_conta)
	into STRICT	nr_atendimento_w,
		cd_setor_atendimento_w,
		nr_seq_atepacu_w,
		cd_convenio_w,
		cd_categoria_w,
		cd_estabelecimento_w,
		nr_interno_conta_w
	from	conta_paciente a,
		material_atend_paciente b
	where	a.nr_interno_conta = b.nr_interno_conta
	and	b.nr_sequencia = nr_seq_material_p;

	select 	max(ie_origem_fat_direto)
	into STRICT 	ie_origem_fat_direto_w
	from	convenio_estabelecimento
	where	cd_estabelecimento	= cd_estabelecimento_w
	and		cd_convenio			= cd_convenio_w;

	select	count(*)
	into STRICT	qt_regra_fat_direto_w
	from	conv_taxa_fat_direto
	where	cd_convenio = cd_convenio_w
	and		coalesce(cd_estabelecimento, cd_estabelecimento_w) = coalesce(cd_estabelecimento_w,0)
	and		ie_situacao = 'A';

	if (coalesce(qt_regra_fat_direto_w,0) <> 0) then

		select	coalesce(sum(vl_material),0),
			round((dividir(coalesce(sum(vl_unitario),0), count(*)))::numeric,0)
		into STRICT	vl_material_w,
			vl_unitario_w
		from	(
			SELECT	CASE WHEN b.ie_reducao_acrescimo='R' THEN (coalesce(b.vl_unitario,0) * coalesce(b.qt_solicitada,0)) - ((coalesce(b.vl_unitario,0) * coalesce(b.qt_solicitada,0)) * coalesce(b.pr_adicional/100,0))  ELSE (coalesce(b.vl_unitario,0) * coalesce(b.qt_solicitada,0)) + ((coalesce(b.vl_unitario,0) * coalesce(b.qt_solicitada,0)) * coalesce(b.pr_adicional/100,0)) END  vl_material,
				coalesce(b.vl_unitario,0) vl_unitario
			from	material_atend_paciente a,
				material_autorizado b
			where	a.nr_seq_mat_autor = b.nr_sequencia
			and	a.nr_sequencia = nr_seq_material_p
			and	coalesce(a.ie_fat_direto,'N') = 'N'
			and	coalesce(b.ie_faturamento_direto,'N') = 'S'
			and	(a.nr_seq_mat_autor IS NOT NULL AND a.nr_seq_mat_autor::text <> '')
			and 	coalesce(ie_origem_fat_direto_w,'AC') = 'AC'
			
union all

			SELECT	CASE WHEN b.ie_reducao_acrescimo='R' THEN (coalesce(b.vl_unitario,0) * coalesce(b.qt_solicitada,0)) - ((coalesce(b.vl_unitario,0) * coalesce(b.qt_solicitada,0)) * coalesce(b.pr_adicional/100,0))  ELSE (coalesce(b.vl_unitario,0) * coalesce(b.qt_solicitada,0)) + ((coalesce(b.vl_unitario,0) * coalesce(b.qt_solicitada,0)) * coalesce(b.pr_adicional/100,0)) END  vl_material,
				coalesce(b.vl_unitario,0) vl_unitario
			from	material_atend_paciente a,
				material_autorizado b
			where	a.nr_prescricao = b.nr_prescricao
			and	a.nr_sequencia_prescricao = b.nr_seq_prescricao
			and	a.nr_sequencia = nr_seq_material_p
			and	coalesce(a.ie_fat_direto,'N') = 'N'
			and	coalesce(b.ie_faturamento_direto,'N') = 'S'
			and	coalesce(a.nr_seq_mat_autor::text, '') = ''
			and 	coalesce(ie_origem_fat_direto_w,'AC') = 'AC'
			
union all

			select	CASE WHEN c.ie_reducao_acrescimo='R' THEN (coalesce(c.vl_unitario_material,0) * coalesce(c.qt_solicitada,0)) - ((coalesce(c.vl_unitario_material,0) * coalesce(c.qt_solicitada,0)) * coalesce(c.pr_adicional/100,0))  ELSE (coalesce(c.vl_unitario_material,0) * coalesce(c.qt_solicitada,0)) + ((coalesce(c.vl_unitario_material,0) * coalesce(c.qt_solicitada,0)) * coalesce(c.pr_adicional/100,0)) END ,
				coalesce(c.vl_unitario_material,0) vl_unitario
			from	material_atend_paciente a,
				material_autor_cirurgia c,
				autorizacao_cirurgia d
			where	a.cd_material 			= c.cd_material
			and 	c.nr_seq_autorizacao 		= d.nr_sequencia
			and 	d.nr_atendimento 		= a.nr_atendimento
			and	a.nr_sequencia 			= nr_seq_material_p
			and	coalesce(a.ie_fat_direto,'N') 	= 'N'
			and	coalesce(c.ie_faturamento_direto,'N') = 'S'
			and 	(d.dt_autorizacao IS NOT NULL AND d.dt_autorizacao::text <> '')
			and 	(d.dt_liberacao IS NOT NULL AND d.dt_liberacao::text <> '')
			and	coalesce(d.dt_cancelamento::text, '') = ''
			and 	coalesce(ie_origem_fat_direto_w,'AC') = 'AME'
			order by	vl_unitario
			) alias75;

		select	a.nr_sequencia,
			a.ie_acao_mat_conta
		into STRICT	nr_seq_regra_fat_direto_w,
			ie_acao_mat_conta_w
		from	conv_taxa_fat_direto a
		where 	a.nr_sequencia = (SELECT max(x.nr_sequencia)
					from 	conv_taxa_fat_direto x
					where	x.cd_convenio = cd_convenio_w
					and	vl_unitario_w between coalesce(x.vl_inicial, vl_unitario_w) and coalesce(x.vl_final, vl_unitario_w)
					and	x.ie_situacao = 'A'
					and coalesce(x.cd_estabelecimento, cd_estabelecimento_w) = coalesce(cd_estabelecimento_w,0));

		if (coalesce(nr_seq_regra_fat_direto_w,0) <> 0) and (coalesce(vl_material_w,0) <> 0) then

			select	max(a.dt_entrada_unidade)
			into STRICT	dt_entrada_unidade_w
			from	atend_paciente_unidade a
			where	nr_seq_interno	= nr_seq_atepacu_w;

			select	a.cd_cgc
			into STRICT	cd_cgc_prestador_w
			from 	estabelecimento a,
				atendimento_paciente b
			where	a.cd_estabelecimento 	= b.cd_estabelecimento
			and	b.nr_atendimento 	= nr_atendimento_w;

			select	max(cd_motivo_exc_conta)
			into STRICT	cd_motivo_exc_conta_w
			from	parametro_faturamento
			where	cd_estabelecimento = cd_estabelecimento_w;

			select	max(cd_procedimento),
				max(ie_origem_proced),
				max(tx_faturamento),
				max(cd_motivo_exc_conta)
			into STRICT	cd_procedimento_w,
				ie_origem_proced_w,
				tx_faturamento_w,
				cd_motivo_exc_regra_w
			from	conv_taxa_fat_direto
			where	nr_sequencia = nr_seq_regra_fat_direto_w;

			select	max(nr_sequencia)
			into STRICT	nr_seq_proc_regra_w
			from	procedimento_paciente
			where	nr_interno_conta = nr_interno_conta_w
			and	cd_procedimento = cd_procedimento_w
			and	ie_origem_proced = ie_origem_proced_w;

			if (coalesce(nr_seq_proc_regra_w,0) > 0) then

				select	coalesce(sum(vl_procedimento),0)
				into STRICT	vl_fat_direto_atual_w
				from	procedimento_paciente
				where	nr_sequencia = nr_seq_proc_regra_w;

			end if;

			update	material_atend_paciente
			set	ie_fat_direto = 'S'
			where	nr_sequencia = nr_seq_material_p;

			if (ie_acao_mat_conta_w = 'E') then

				CALL excluir_matproc_conta_fat_dir(nr_seq_material_p, nr_interno_conta_w, coalesce(cd_motivo_exc_regra_w, cd_motivo_exc_conta_w), nm_usuario_p);

			else

				update	material_atend_paciente
				set	ie_valor_informado = 'S',
					vl_material = 0,
					vl_unitario = 0,
					ds_observacao = substr(ds_observacao || ' ' || wheb_mensagem_pck.get_texto(799219) ,1,255)
				where	nr_sequencia = nr_seq_material_w;

			end if;

			vl_fat_direto_w	:= round((vl_material_w * dividir(tx_faturamento_w,100))::numeric,2) + vl_fat_direto_atual_w;

			if (coalesce(nr_seq_proc_regra_w,0) > 0) then

				update	procedimento_paciente
				set	vl_procedimento = vl_fat_direto_w
				where	nr_sequencia = nr_seq_proc_regra_w;

				update	material_atend_paciente
				set	nr_seq_proc_princ = nr_seq_proc_regra_w
				where	nr_sequencia = nr_seq_material_p;

				CALL gravar_mat_atend_fat_direto(nr_seq_material_p, nr_seq_proc_regra_w, round((vl_material_w * dividir(tx_faturamento_w,100))::numeric,2), nm_usuario_p);

			else

				select	nextval('procedimento_paciente_seq')
				into STRICT	nr_seq_procedimento_w
				;

				insert into procedimento_paciente(
					nr_sequencia,
					nr_atendimento,
					dt_entrada_unidade,
					cd_procedimento,
					dt_procedimento,
					cd_convenio,
					cd_categoria,
					ie_auditoria,
					cd_cgc_prestador,
					ie_origem_proced,
					qt_procedimento,
					cd_setor_atendimento,
					nr_seq_atepacu,
					vl_procedimento,
					ie_proc_princ_atend,
					ie_video,
					tx_medico,
					tx_Anestesia,
					tx_procedimento,
					ie_valor_informado,
					cd_situacao_glosa,
					nm_usuario_original,
					ds_observacao,
					dt_atualizacao,
					nm_usuario)
				values (
					nr_seq_procedimento_w,
					nr_atendimento_w,
					dt_entrada_unidade_w,
					cd_procedimento_w,
					clock_timestamp(),
					cd_convenio_w,
					cd_categoria_w,
					'N',
					cd_cgc_prestador_w,
					ie_origem_proced_w,
					1,
					cd_setor_atendimento_w,
					nr_seq_atepacu_w,
					vl_fat_direto_w,
					'N',
					'N',
					100,
					100,
					100,
					'S',
					0,
					nm_usuario_p,
					Wheb_mensagem_pck.get_Texto(306339),
					clock_timestamp(),
					nm_usuario_p);

				CALL atualiza_preco_procedimento(nr_seq_procedimento_w, cd_convenio_w, nm_usuario_p);

				update	material_atend_paciente
				set	nr_seq_proc_princ = nr_seq_procedimento_w
				where	nr_sequencia = nr_seq_material_p;

				CALL gravar_mat_atend_fat_direto(nr_seq_material_p, nr_seq_procedimento_w, round((vl_material_w * dividir(tx_faturamento_w,100))::numeric,2), nm_usuario_p);

			end if;

		end if;

	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_faturamento_direto_mat ( nr_seq_material_p bigint, nm_usuario_p text) FROM PUBLIC;

