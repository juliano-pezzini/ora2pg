-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gqa_obter_ger_resumo_protocolo (( NR_SEQ_PROTOCOLO_P GQA_PROTOCOLO_PAC.NR_SEQUENCIA%type, IE_RTF text, RESPONSE out text) IS dummy text DEFAULT '') AS $body$
DECLARE


    desc_return_w varchar(1000);

  item RECORD;
  etapa RECORD;
  acao RECORD;

BEGIN
    BEGIN
      SELECT cpoe_obter_desc_info_material(c.cd_material
                                          ,c.cd_mat_comp1
                                          ,c.qt_dose_comp1
                                          ,c.cd_unid_med_dose_comp1
                                          ,c.cd_mat_comp2
                                          ,c.qt_dose_comp2
                                          ,c.cd_unid_med_dose_comp2
                                          ,c.cd_mat_comp3
                                          ,c.qt_dose_comp3
                                          ,c.cd_unid_med_dose_comp3
                                          ,c.cd_mat_dil
                                          ,c.qt_dose_dil
                                          ,c.cd_unid_med_dose_dil
                                          ,c.cd_mat_red
                                          ,c.qt_dose_red
                                          ,c.cd_unid_med_dose_red
                                          ,c.dt_liberacao
                                          ,c.qt_dose
                                          ,c.cd_unidade_medida
                                          ,c.ie_via_aplicacao
                                          ,c.cd_intervalo
                                          ,c.dt_lib_suspensao
                                          ,c.dt_suspensao
                                          ,c.ie_administracao
                                          ,c.nr_seq_ataque
                                          ,c.nr_seq_procedimento
                                          ,c.nr_seq_adicional
                                          ,c.nr_seq_hemoterapia
                                          ,c.ds_dose_diferenciada
                                          ,c.ds_dose_diferenciada_dil
                                          ,c.ds_dose_diferenciada_red
                                          ,c.ds_dose_diferenciada_comp1
                                          ,c.ds_dose_diferenciada_comp2
                                          ,c.ds_dose_diferenciada_comp3
                                          ,c.cd_mat_comp4
                                          ,c.qt_dose_comp4
                                          ,c.cd_unid_med_dose_comp4
                                          ,c.ds_dose_diferenciada_comp4
                                          ,c.cd_mat_comp5
                                          ,c.qt_dose_comp5
                                          ,c.cd_unid_med_dose_comp5
                                          ,c.ds_dose_diferenciada_comp5
                                          ,c.cd_mat_comp6
                                          ,c.qt_dose_comp6
                                          ,c.cd_unid_med_dose_comp6
                                          ,c.ds_dose_diferenciada_comp6
                                          ,c.dt_inicio
                                          ,c.dt_fim
                                          ,c.dt_fim_cih
                                          ,c.nr_dia_util
                                          ,c.ie_antibiotico
                                          ,c.ie_tipo_solucao
                                          ,c.cd_mat_comp7
                                          ,c.qt_dose_comp7
                                          ,c.cd_unid_med_dose_comp7
                                          ,c.ds_dose_diferenciada_comp7
                                          ,c.ie_oncologia
                                          ,c.cd_mat_recons
                                          ,c.qt_dose_recons
                                          ,c.cd_unid_med_dose_recons
                                          ,c.ds_dose_diferenciada_rec
                                          ,NULL
                                          ,c.ie_duracao
                                          ,c.ie_ref_calculo
                                          ,c.nr_etapas
                                          ,c.ie_controle_tempo
                                          ,c.qt_dias_solicitado
                                          ,c.qt_dias_liberado
                                          ,NULL
                                          ,c.ie_baixado_por_alta) ds_item
        INTO STRICT desc_return_w
        FROM cpoe_material c
       WHERE c.nr_sequencia = nr_seq_mat_cpoe_p;
    EXCEPTION
      WHEN no_data_found THEN
        desc_return_w := NULL;
    END;

    RETURN;
  END;

  FUNCTION obter_ds_proc(nr_sequencia_p NUMBER) RETURN;
  BEGIN
    BEGIN
      SELECT cpoe_obter_desc_grid_proc(substr(cpoe_obter_desc_proc_interno(c.nr_seq_proc_interno)
                                             ,1
                                             ,255)
                                      ,c.cd_intervalo
                                      ,c.qt_procedimento
                                      ,c.cd_mat_proc1
                                      ,c.qt_dose_mat1
                                      ,c.cd_unid_medida_dose_mat1
                                      ,c.ie_assoc_adep1
                                      ,c.cd_mat_proc2
                                      ,c.qt_dose_mat2
                                      ,c.cd_unid_medida_dose_mat2
                                      ,c.ie_assoc_adep2
                                      ,c.cd_mat_proc3
                                      ,c.qt_dose_mat3
                                      ,c.cd_unid_medida_dose_mat3
                                      ,c.ie_assoc_adep3
                                      ,c.cd_mat_proc4
                                      ,c.qt_dose_mat4
                                      ,c.cd_unid_medida_dose_mat4
                                      ,c.ie_assoc_adep4
                                      ,c.cd_mat_proc5
                                      ,c.qt_dose_mat5
                                      ,c.cd_unid_medida_dose_mat5
                                      ,c.ie_assoc_adep5
                                      ,c.dt_lib_suspensao
                                      ,c.dt_suspensao
                                      ,c.ie_administracao
                                      ,NULL
                                      ,NULL
                                      ,c.cd_mat_proc6
                                      ,c.qt_dose_mat6
                                      ,c.cd_unid_medida_dose_mat6
                                      ,c.ie_assoc_adep6
                                      ,c.cd_mat_proc7
                                      ,c.qt_dose_mat7
                                      ,c.cd_unid_medida_dose_mat7
                                      ,c.ie_assoc_adep7) ds_item
        INTO STRICT desc_return_w
        FROM cpoe_procedimento c
       WHERE c.nr_sequencia = nr_sequencia_p;
    EXCEPTION
      WHEN no_data_found THEN
        desc_return_w := NULL;
    END;

    RETURN;
  END;

  FUNCTION gqa_gerar_resumo_protocol_bold(text long) RETURN;
  elsif ((IE_RTF IS NOT NULL AND IE_RTF::text <> '') and IE_RTF = 'H') then
    return;
  elsif ((IE_RTF IS NOT NULL AND IE_RTF::text <> '') and IE_RTF = 'R') then
    return;
  else
    return;
  end if;
  END;

  FUNCTION gqa_gerar_resumo_protocol_lb(text long, space number, style varchar2 ) RETURN;
  BEGIN

  if ((IE_RTF IS NOT NULL AND IE_RTF::text <> '') and IE_RTF = 'S') then
    if ((space IS NOT NULL AND space::text <> '') and space > 0) then
      FOR aux IN 1..(space * 2) LOOP
         localtextfunction := localtextfunction || ' ';
      END LOOP;
    end if;

    return;
  elsif ((IE_RTF IS NOT NULL AND IE_RTF::text <> '') and IE_RTF = 'H') then
    if ((space IS NOT NULL AND space::text <> '') and space >= 0) then
      if (style IS NOT NULL AND style::text <> '') then
        localtextfunction := replace(' style="' || style || ' : @@em;"', '@@', space);
      else
        localtextfunction := replace(' style="text-indent : @@em;"', '@@', space);
      end if;
    else
      localtextfunction := '';
    end if;
    return;
  elsif ((IE_RTF IS NOT NULL AND IE_RTF::text <> '') and IE_RTF = 'R') then
    if ((space IS NOT NULL AND space::text <> '') and space > 0) then
      FOR aux IN 1..(space * 2) LOOP
         localtextfunction := localtextfunction || chr(38) || 'nbsp;';
      END LOOP;
    end if;
    return;
  else
    if ((space IS NOT NULL AND space::text <> '') and space > 0) then
      FOR aux IN 1..space LOOP
         localtextfunction := localtextfunction || ' ';
      END LOOP;
    end if;
    return;
  end if;

  END;

  FUNCTION gqa_gerar_resumo_protocol_canc RETURN; -- colocar underline e italic
  elsif (IE_RTF IS NOT NULL AND IE_RTF::text <> '' AND (IE_RTF = 'H' or IE_RTF = 'R')) then
    return;
  else
    return;
  end if;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_av(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN;
    localtextfunction2 varchar2(2000);
    responsefunction long := '';
    resposta varchar2(200);
  BEGIN
    responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(297781)) || ': ', 4);
    if (coalesce(etapa.DT_FIM::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293938), 6);
    else
      select ds_tipo into STRICT localtextfunction from med_tipo_avaliacao a where nr_sequencia = acao.NR_SEQ_AVALIACAO;
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(localtextfunction, 6);

      if (etapa.qt_resultado IS NOT NULL AND etapa.qt_resultado::text <> '') then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(296046)) || ': ' ||  etapa.qt_resultado, 6);
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(284510)) || ': ', 6);

        resposta := gqa_gerar_resumo_protocol_bold(obter_desc_expressao(297817));

        for item in (
            SELECT
                     x.DS_ITEM
                    ,x.IE_RESULTADO
                    ,c.QT_RESULTADO
                    ,c.DS_RESULTADO
            from MED_AVALIACAO_RESULT c,
                 MED_ITEM_AVALIAR x
            where c.NR_SEQ_AVALIACAO = etapa.NR_SEQ_AVALIACAO
              and c.NR_SEQ_ITEM = x.NR_SEQUENCIA
              and x.IE_RESULTADO not in (
               'L' -- Calculos
              ,'E' -- Resultado de Select
              ,'F' -- Resultado de Select Longo
              )
            order by x.NR_SEQ_APRESENT asc
        ) loop
          responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(item.DS_ITEM, 8);

          if (item.DS_RESULTADO IS NOT NULL AND item.DS_RESULTADO::text <> '') then
            responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('' || resposta || ': ' || item.DS_RESULTADO, 10);
          else
            if (item.IE_RESULTADO = 'B') then
              select CASE WHEN item.QT_RESULTADO=0 THEN  obter_desc_expressao(327114)  ELSE obter_desc_expressao(327113) END  into STRICT localtextfunction2;
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('' || resposta || ': ' || localtextfunction2, 10);
            else
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('' || resposta || ': ' || item.QT_RESULTADO, 10);
            end if;
          end if;
        end loop;
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293938), 8);
      end if;

    end if;
  return;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_dl(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN;
    responsefunction long := '';
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '' and coalesce(etapa.QT_RESULTADO::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(297781)) || ': ', 4);
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293938), 6);
    else
      if ((acao.QT_PONTO_NAO IS NOT NULL AND acao.QT_PONTO_NAO::text <> '') and acao.QT_PONTO_NAO = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(297781)) || ': ', 4);
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(327114), 6);
      elsif ((acao.QT_PONTO_SIM IS NOT NULL AND acao.QT_PONTO_SIM::text <> '') and acao.QT_PONTO_SIM = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(287694)) || ': ', 4);
        begin
            select t.cd_doenca
            into STRICT cd_doenca_w
            from gqa_acao t where t.nr_sequencia = etapa.nr_seq_acao  LIMIT 1;
        exception when no_data_found then
          cd_doenca_w := null;
        end;

        begin
          select zz.DS_DOENCA_CID into STRICT localtextfunction from CID_DOENCA zz where zz.CD_DOENCA_CID = cd_doenca_w;
        exception when no_data_found then
          localtextfunction := null;
        end;
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(cd_doenca_w || ' - ' || localtextfunction, 6);
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(297781)) || ': ', 4);
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(487395), 6);
      end if;
    end if;
  return;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_es(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN;
    localtextfunction2 varchar2(2000);
    resposta varchar2(200);
    responsefunction long := '';
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ', 4);
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293938), 6);
    else
      select  trim(both t.ds_escala) ds into STRICT localtextfunction from eif_escala_ii t where nr_sequencia = acao.NR_SEQ_SCORE_FLEX_II;
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(297781)) || ': ', 4);

      if (etapa.qt_resultado IS NOT NULL AND etapa.qt_resultado::text <> '') then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(localtextfunction, 6);
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(296046)) || ': ' ||  etapa.qt_resultado, 6);
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(284510)) || ': ', 6);

        resposta := gqa_gerar_resumo_protocol_bold(obter_desc_expressao(297817));

        for item in (
            SELECT
                    x.DS_ITEM
                    ,x.IE_RESULTADO
                    ,c.QT_RESULTADO
                    ,c.DS_RESULTADO
            from SCORE_AVALIACAO_RESULT c,
                 MED_ITEM_AVALIAR x
            where c.NR_SEQ_AVALIACAO = etapa.NR_SEQ_SCORE_FLEX_II
              and c.NR_SEQ_ITEM = x.NR_SEQUENCIA
              and x.IE_RESULTADO not in (
               'L' -- Calculos
              ,'E' -- Resultado de Select
              ,'F' -- Resultado de Select Longo
              )
            order by x.NR_SEQ_APRESENT asc
        ) loop
          responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(item.DS_ITEM, 8);

          if (item.DS_RESULTADO IS NOT NULL AND item.DS_RESULTADO::text <> '') then
            responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('' || resposta || ': ' || item.DS_RESULTADO, 10);
          else
            if (item.IE_RESULTADO = 'B') then
              select CASE WHEN item.QT_RESULTADO=0 THEN  obter_desc_expressao(327114)  ELSE obter_desc_expressao(327113) END  into STRICT localtextfunction2;
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('' || resposta || ': ' || localtextfunction2, 10);
            else
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('' || resposta || ': ' || item.QT_RESULTADO, 10);
            end if;
          end if;
        end loop;
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(localtextfunction || ' | ' || obter_desc_expressao(293938), 6);
      end if;
    end if;
  return;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_ep(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN;
    responsefunction long := null;
    nr_prescricao_w gqa_protocolo_etapa_pac.nr_prescricao%type;
    qtd number(10);
    qtd_w number(10) := 0;
    titulo varchar2(4000);
  begin

    if (acao.nr_seq_acao_protocolo IS NOT NULL AND acao.nr_seq_acao_protocolo::text <> '') then
      begin
        select a.nr_prescricao
        into STRICT nr_prescricao_w 
        from gqa_protocolo_etapa_pac a
        where a.nr_seq_prot_pac = etapa.nr_seq_prot_pac and a.nr_seq_etapa = acao.nr_seq_acao_protocolo  LIMIT 1;
      exception when no_data_found then
        nr_prescricao_w := null;
      end;

      -- Itens administrados
      responsefunction := responsefunction ||  gqa_gerar_resumo_protocol_lb('', null);
      responsefunction := responsefunction ||  gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(495029)), 6);
      responsefunction := responsefunction ||  gqa_gerar_resumo_protocol_lb('', null);

      if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then
        -- 341573 - Solucoes e Medicamentos
        -- 292949 - Materiais
        select count(1)
        into STRICT qtd
        from (
                SELECT c.*,
                      (
                        SELECT count(1) qtd
                        from prescr_mat_hor b
                        where b.nr_prescricao = nr_prescricao_w and b.cd_material = c.cd_material and (b.dt_fim_horario IS NOT NULL AND b.dt_fim_horario::text <> '')
                      ) qtd_finalizado
                from (
                        select a.cd_material, count(1) qtd_total
                        from prescr_mat_hor a 
                        where a.nr_prescricao = nr_prescricao_w
                        group by a.cd_material
                     ) c
        ) z where z.qtd_finalizado = z.qtd_total;
        qtd_w := qtd_w + qtd;
        if (qtd > 0) then
          titulo := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(292949) || ', ' || obter_desc_expressao(341573)), 8);
          responsefunction := responsefunction || replace(titulo, 'style="', 'style="background-color: #E6E6E6; padding: 8px 0px;');
          for item in (SELECT obter_descricao_mat_prescr(z.cd_material) ds, z.*
                         from (select c.*,
                                     (select count(1) qtd
                                        from prescr_mat_hor b
                                       where b.nr_prescricao = nr_prescricao_w and b.cd_material = c.cd_material
                                         and (b.dt_fim_horario IS NOT NULL AND b.dt_fim_horario::text <> '')) qtd_finalizado
                                 from (select a.cd_material
                                             ,nr_prescricao
                                             ,count(1) qtd_total
                                         from prescr_mat_hor a 
                                        where a.nr_prescricao = nr_prescricao_w
                                        group by a.cd_material
                                                ,nr_prescricao) c) z
                             ,prescr_material p
                        where z.qtd_finalizado = z.qtd_total
                          and z.nr_prescricao = p.nr_prescricao
                          and z.cd_material = p.cd_material
                          and p.ie_agrupador in (1,4)
                          and (p.nr_seq_mat_cpoe IS NOT NULL AND p.nr_seq_mat_cpoe::text <> ''))
          loop
            responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(item.ds, 10);
          end loop;
        end if;

        -- 294515 - Nutricao
        select count(1)
        into STRICT qtd
        from (
                SELECT c.*,
                      (
                        SELECT count(1)
                        from prescr_dieta b, prescr_dieta_hor a
                        where b.nr_prescricao = nr_prescricao_w
                        and a.nr_prescricao = b.nr_prescricao
                        and a.nr_seq_dieta = b.nr_sequencia
                        and (a.dt_fim_horario IS NOT NULL AND a.dt_fim_horario::text <> '')
                      ) qtd_finalizado
                from (
                    select
                          b.cd_dieta,
                          count(1) qtd_total
                    from prescr_dieta b, prescr_dieta_hor a
                    where b.nr_prescricao = nr_prescricao_w
                    and a.nr_prescricao = b.nr_prescricao
                    and a.nr_seq_dieta = b.nr_sequencia
                    group by b.cd_dieta
                     ) c
        ) z where z.qtd_finalizado = z.qtd_total;
        qtd_w := qtd_w + qtd;
        if (qtd > 0) then
          titulo := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(294515)), 8);
          responsefunction := responsefunction || replace(titulo, 'style="', 'style="background-color: #E6E6E6; padding: 8px 0px;');
          for item in (
                        SELECT obter_desc_dieta(z.cd_dieta) ds, z.*
                        from (
                                SELECT c.*,
                                      (
                                        select count(1)
                                        from prescr_dieta b, prescr_dieta_hor a
                                        where b.nr_prescricao = nr_prescricao_w
                                        and a.nr_prescricao = b.nr_prescricao
                                        and a.nr_seq_dieta = b.nr_sequencia
                                        and (a.dt_fim_horario IS NOT NULL AND a.dt_fim_horario::text <> '')
                                      ) qtd_finalizado
                                from (
                                    select
                                          b.cd_dieta,
                                          count(1) qtd_total
                                    from prescr_dieta b, prescr_dieta_hor a
                                    where b.nr_prescricao = nr_prescricao_w
                                    and a.nr_prescricao = b.nr_prescricao
                                    and a.nr_seq_dieta = b.nr_sequencia
                                    group by b.cd_dieta
                                     ) c
                        ) z where z.qtd_finalizado = z.qtd_total
          ) loop
            responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(item.ds, 10);
          end loop;
        end if;

        -- 614206 - Exames e Procedimentos
        -- 314898 - Exames de anatomia patologica
        select count(1)
        into STRICT qtd
        from (
                SELECT c.*,
                      (
                        SELECT count(1) qtd
                        from prescr_proc_hor b
                        where b.nr_prescricao = nr_prescricao_w
                        and b.cd_procedimento = c.cd_procedimento 
                        and b.nr_seq_proc_interno = c.nr_seq_proc_interno 
                        and (b.dt_fim_horario IS NOT NULL AND b.dt_fim_horario::text <> '')
                      ) qtd_finalizado
                from (
                        select a.cd_procedimento, a.nr_seq_proc_interno, count(1) qtd_total
                        from prescr_proc_hor a 
                        where a.nr_prescricao = nr_prescricao_w group by a.cd_procedimento, a.nr_seq_proc_interno
                     ) c
        ) z where z.qtd_finalizado = z.qtd_total;
        qtd_w := qtd_w + qtd;
        if (qtd > 0) then
          titulo := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(614206)), 8);
          responsefunction := responsefunction || replace(titulo, 'style="', 'style="background-color: #E6E6E6; padding: 8px 0px;');
          for item in (
                      SELECT
                              case when (nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '') then obter_desc_proc_interno(nr_seq_proc_interno)
                              when (cd_procedimento IS NOT NULL AND cd_procedimento::text <> '') then obter_descricao_procedimento(cd_procedimento, null)
                              else ''
                              end ds,
                              z.*
                      from (
                              SELECT c.*,
                                    (
                                      select count(1) qtd
                                      from prescr_proc_hor b
                                      where b.nr_prescricao = nr_prescricao_w 
                                      and b.cd_procedimento = c.cd_procedimento 
                                      and b.nr_seq_proc_interno = c.nr_seq_proc_interno 
                                      and (b.dt_fim_horario IS NOT NULL AND b.dt_fim_horario::text <> '')
                                    ) qtd_finalizado
                              from (
                                      select a.cd_procedimento, a.nr_seq_proc_interno, count(1) qtd_total
                                      from prescr_proc_hor a 
                                      where a.nr_prescricao = nr_prescricao_w group by a.cd_procedimento, a.nr_seq_proc_interno
                                   ) c
                      ) z where z.qtd_finalizado = z.qtd_total
          ) loop
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(item.ds, 10);
          end loop;
        end if;

        -- 784685 - Recomendacoes
        select count(1)
        into STRICT qtd
        from (
                SELECT c.*,
                      (
                        SELECT count(1) qtd
                        from prescr_rec_hor b
                        where b.nr_prescricao = nr_prescricao_w and b.cd_recomendacao = c.cd_recomendacao and (b.dt_fim_horario IS NOT NULL AND b.dt_fim_horario::text <> '')
                      ) qtd_finalizado
                from (
                        select a.cd_recomendacao, count(1) qtd_total
                        from prescr_rec_hor a
                        where a.nr_prescricao = nr_prescricao_w
                        group by a.cd_recomendacao
                     ) c
        ) z where z.qtd_finalizado = z.qtd_total;
        qtd_w := qtd_w + qtd;
        if (qtd > 0) then
          titulo := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(784685)), 8);
          responsefunction := responsefunction || replace(titulo, 'style="', 'style="background-color: #E6E6E6; padding: 8px 0px;');
          for item in (
                        SELECT obter_desc_recomendacao(z.cd_recomendacao) ds, z.*
                        from (
                                SELECT c.*,
                                      (
                                        select count(1) qtd
                                        from prescr_rec_hor b
                                        where b.nr_prescricao = nr_prescricao_w and b.cd_recomendacao = c.cd_recomendacao and (b.dt_fim_horario IS NOT NULL AND b.dt_fim_horario::text <> '')
                                      ) qtd_finalizado
                                from (
                                        select a.cd_recomendacao, count(1) qtd_total
                                        from prescr_rec_hor a
                                        where a.nr_prescricao = nr_prescricao_w
                                        group by a.cd_recomendacao
                                     ) c
                        ) z where z.qtd_finalizado = z.qtd_total
          ) loop
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(item.ds, 10);
          end loop;
        end if;

        -- 955855 - Hemoterapia
        -- 287725 - Dialise
        -- Nao possui
        -- 290567 - Gasoterapia
        select count(1)
        into STRICT qtd
        from (
                SELECT c.*,
                      (
                        SELECT count(1) qtd
                        from prescr_gasoterapia_hor a, prescr_gasoterapia b
                        where a.nr_prescricao = nr_prescricao_w 
                        and b.nr_sequencia = a.nr_seq_gasoterapia 
                        and b.ie_respiracao = c.ie_respiracao 
                        and b.nr_seq_gas = c.nr_seq_gas 
                        and (a.dt_fim_horario IS NOT NULL AND a.dt_fim_horario::text <> '')
                      ) qtd_finalizado
                from (
                        select b.ie_respiracao, b.nr_seq_gas, count(1) qtd_total
                        from prescr_gasoterapia_hor a, prescr_gasoterapia b 
                        where a.nr_prescricao = nr_prescricao_w 
                        and b.nr_sequencia = a.nr_seq_gasoterapia 
                        group by b.ie_respiracao, b.nr_seq_gas
                     ) c
        ) z where z.qtd_finalizado = z.qtd_total;
        qtd_w := qtd_w + qtd;
        if (qtd > 0) then
          titulo := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(290567)), 8);
          responsefunction := responsefunction || replace(titulo, 'style="', 'style="background-color: #E6E6E6; padding: 8px 0px;');
          for item in (
                      SELECT obter_valor_dominio(1299, z.ie_respiracao) || ': ' ||obter_desc_gas(z.nr_seq_gas) ds, z.*
                      from (
                              SELECT c.*,
                                    (
                                      select count(1) qtd
                                      from prescr_gasoterapia_hor a, PRESCR_GASOTERAPIA b
                                      where a.nr_prescricao = nr_prescricao_w 
                                      and b.NR_SEQUENCIA = a.NR_SEQ_GASOTERAPIA 
                                      and b.IE_RESPIRACAO = c.IE_RESPIRACAO 
                                      and b.NR_SEQ_GAS = c.NR_SEQ_GAS 
                                      and (a.dt_fim_horario IS NOT NULL AND a.dt_fim_horario::text <> '')
                                    ) qtd_finalizado
                              from (
                                      SELECT b.IE_RESPIRACAO, b.NR_SEQ_GAS, count(1) qtd_total
                                      FROM prescr_gasoterapia_hor a, PRESCR_GASOTERAPIA b 
                                      where a.nr_prescricao = nr_prescricao_w 
                                      and b.NR_SEQUENCIA = a.NR_SEQ_GASOTERAPIA 
                                      group by b.IE_RESPIRACAO, b.NR_SEQ_GAS
                                   ) c
                      ) z where z.qtd_finalizado = z.qtd_total
          ) loop
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(item.ds, 10);
          end loop;
        end if;

        if (qtd_w = 0) then
          responsefunction := null;
        end if;
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(297781)) || ': ' || obter_desc_expressao(487395), 4);
      end if;
    end if;
  return;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_me(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN;
    responsefunction long := '';
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(293938), 4);
    else
      if ((acao.QT_PONTO_CANCELAR IS NOT NULL AND acao.QT_PONTO_CANCELAR::text <> '') and acao.QT_PONTO_CANCELAR = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(299344)) || ': ', 4);
        responsefunction := responsefunction || '<div style="text-indent : 6em;">' || gqa_obter_acao_texto(acao.nr_sequencia) || '</div>';
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(297781)) || ': ' || obter_desc_expressao(331217), 4);
      elsif ((acao.QT_PONTO_CONFIRMA IS NOT NULL AND acao.QT_PONTO_CONFIRMA::text <> '') and acao.QT_PONTO_CONFIRMA = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(299344)) || ': ', 4);
        responsefunction := responsefunction || '<div style="text-indent : 6em;">' || gqa_obter_acao_texto(acao.nr_sequencia) || '</div>';
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(297781)) || ': ' || obter_desc_expressao(285693), 4);
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(297781)) || ': ' || obter_desc_expressao(487395), 4);
      end if;
      responsefunction := regexp_replace(responsefunction, '<html.*?>|</html>', '');
      responsefunction := regexp_replace(responsefunction, '<body.*?>', '<div>');
      responsefunction := regexp_replace(responsefunction, '</body>', '</div>');
    end if;
  return;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_nc(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN;
    responsefunction long := '';
    ds_evolucao varchar2(1000);
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293938), 6);
    else
      if ((acao.QT_PONTO_SIM IS NOT NULL AND acao.QT_PONTO_SIM::text <> '') and acao.QT_PONTO_SIM = etapa.QT_RESULTADO)then
        begin
          select DS_EVOLUCAO, Obter_desc_tipo_evolucao(IE_EVOLUCAO_CLINICA)
          into STRICT localtextfunction, ds_evolucao 
          from evolucao_paciente where cd_evolucao = etapa.nr_seq_evolucao;
        exception when no_data_found then
          localtextfunction := '';
        end;
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(792029)) || ': ' || ds_evolucao, 4);

        if (IE_RTF = 'H') then
          responsefunction := responsefunction || '<div style="text-indent : 6em;">' || localtextfunction || '</div>';
        else
          responsefunction := responsefunction || localtextfunction;
        end if;
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(792029)) || ': ' || obter_desc_expressao(487395), 4);
      end if;
    end if;
  return;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_pe(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN;
    responsefunction long := '';
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(293938), 4);
    else
      if ((acao.QT_PONTO_NAO IS NOT NULL AND acao.QT_PONTO_NAO::text <> '') and acao.QT_PONTO_NAO = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(299344)) || ': ', 4);
        responsefunction := responsefunction || '<div style="text-indent : 6em;">' || gqa_obter_acao_texto(acao.nr_sequencia) || '</div>';
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(297781)) || ': ' || obter_desc_expressao(327114), 4);
      elsif ((acao.QT_PONTO_SIM IS NOT NULL AND acao.QT_PONTO_SIM::text <> '') and acao.QT_PONTO_SIM = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(299344)) || ': ', 4);
        responsefunction := responsefunction || '<div style="text-indent : 6em;">' || gqa_obter_acao_texto(acao.nr_sequencia) || '</div>';
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(297781)) || ': ' || obter_desc_expressao(327113), 4);
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(297781)) || ': ' || obter_desc_expressao(487395), 4);
      end if;
      responsefunction := regexp_replace(responsefunction, '<html.*?>|</html>', '');
      responsefunction := regexp_replace(responsefunction, '<body.*?>', '<div>');
      responsefunction := regexp_replace(responsefunction, '</body>', '</div>');
    end if;
  return;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_pp(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN;
    responsefunction long := '';
    ds_resumo_c long := '';
    DS_RESUMO_W long;

    NR_SEQ_PROTOCOLO_P1 NUMBER;
    NR_SEQ_PEND_PAC_ACAO_P1 NUMBER;
    NM_USUARIO_P1 VARCHAR2(200);
    NM_MEDICACAO_P1 VARCHAR2(200);
    NM_PROTOCOLO_P1 VARCHAR2(200);
    NR_PRESCRICAO_P1 NUMBER;
    CD_PROTOCOLO_P1 NUMBER;
    NR_SEQUENCIA_P1 NUMBER;

    CD_PROTOCOLO_P2 NUMBER;
    NR_SEQ_MEDICACAO_P2 NUMBER;
    IE_RTF_HTML_P2 VARCHAR2(200);
    NM_USUARIO_P2 VARCHAR2(200);

    aux1 varchar2(100);
    qtd number(10);

    titulo varchar2(4000);
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(293938), 4);
    else

        if (acao.CD_PROTOCOLO IS NOT NULL AND acao.CD_PROTOCOLO::text <> '' AND acao.NR_SEQ_PROTOCOLO IS NOT NULL AND acao.NR_SEQ_PROTOCOLO::text <> '') then
          NR_SEQ_PROTOCOLO_P1 := acao.NR_SEQ_PROTOCOLO;
          NM_USUARIO_P1 := nm_usuario_w;

          SELECT * FROM OBTER_INFORM_PRESCR_PROTOCOLO(
             NR_SEQ_PROTOCOLO_P1, NR_SEQ_PEND_PAC_ACAO_P1, NM_USUARIO_P1, NM_MEDICACAO_P1, NM_PROTOCOLO_P1, NR_PRESCRICAO_P1, CD_PROTOCOLO_P1, NR_SEQUENCIA_P1
          ) INTO STRICT NM_MEDICACAO_P1, NM_PROTOCOLO_P1, NR_PRESCRICAO_P1, CD_PROTOCOLO_P1, NR_SEQUENCIA_P1
;

          responsefunction := responsefunction ||
                  gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(328907)) || ': ' || 
                  obter_desc_protocolo(acao.cd_protocolo) || ' | ' || obter_desc_subtipo_protocolo(acao.cd_protocolo, nr_sequencia_p1), 4);

          -- ============================================
          -- ============= SOLICITACAO CPOE =============
          -- ============================================
          responsefunction := responsefunction ||  gqa_gerar_resumo_protocol_lb('', null);
          responsefunction := responsefunction ||  case ie_rtf when 'H' then
                                                     '<table style="width : 100%;"><tr><td style="vertical-align: top;">' else null end;
          responsefunction := responsefunction ||  gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(308249)), 6);
          responsefunction := responsefunction ||  gqa_gerar_resumo_protocol_lb('', null);

          -- 341573 - Solucoes e Medicamentos
          -- 292949 - Materiais
          select count(1) into STRICT qtd from protocolo_medic_material where cd_protocolo = acao.cd_protocolo and nr_sequencia = nr_sequencia_p1;
          if (qtd > 0) then
            titulo := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(292949) || ', ' || obter_desc_expressao(341573)), 8);
            responsefunction := responsefunction || replace(titulo, 'style="', 'style="background-color: #E6E6E6; padding: 8px 0px;');
            for item in (
              SELECT t.cd_material
                    ,obter_descricao_mat_prescr(t.cd_material) ds_material
                    ,t.qt_dose
                    ,obter_desc_unid_med(t.cd_unidade_medida) ds_um
                    ,obter_via_aplicacao(t.ie_via_aplicacao, 'D') via
                    ,obter_desc_intervalo(t.cd_intervalo) ds_intervalo
                from protocolo_medic_material t
               where t.cd_protocolo = acao.cd_protocolo
                 and t.nr_sequencia = nr_sequencia_p1
               order by 2
            ) loop
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(
                item.ds_material) || ' ' || item.qt_dose || ' ' || item.ds_um || ' ' || item.via || ' ' || item.ds_intervalo, 10, 'margin-left');
            end loop;
          end if;

          -- 294515 - Nutricao
          select count(1)       into STRICT qtd from PROTOCOLO_MEDIC_DIETA    where cd_protocolo = acao.cd_protocolo and nr_sequencia = nr_sequencia_p1;
          select count(1) + qtd into STRICT qtd from PROTOCOLO_MEDIC_JEJUM    where cd_protocolo = acao.cd_protocolo and nr_sequencia = nr_sequencia_p1;
          select count(1) + qtd into STRICT qtd from PROTOCOLO_MEDIC_NPT      where cd_protocolo = acao.cd_protocolo and nr_sequencia = nr_sequencia_p1;
          select count(1) + qtd into STRICT qtd from PROTOCOLO_MEDIC_LEITE    where cd_protocolo = acao.cd_protocolo and nr_seq_protocolo = nr_sequencia_p1;
          if (qtd > 0) then
            titulo := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(294515)), 8);
            responsefunction := responsefunction || replace(titulo, 'style="', 'style="background-color: #E6E6E6; padding: 8px 0px;');

            --PROTOCOLO_MEDIC_DIETA
            select count(1) into STRICT qtd from protocolo_medic_dieta    where cd_protocolo = acao.cd_protocolo and nr_sequencia = nr_sequencia_p1;
            if (qtd > 0) then
                responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(287902)), 10);
              for item in (
                SELECT nm_dieta || ': ' || ds_dieta ds
                from protocolo_medic_dieta a, dieta b 
                where a.cd_protocolo = acao.cd_protocolo 
                  and a.nr_sequencia = nr_sequencia_p1
                  and a.cd_dieta = b.cd_dieta
              ) loop
                responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(item.ds, 12);
              end loop;
            end if;

            --PROTOCOLO_MEDIC_JEJUM
            select count(1) into STRICT qtd from protocolo_medic_jejum    where cd_protocolo = acao.cd_protocolo and nr_sequencia = nr_sequencia_p1;
            if (qtd > 0) then
                responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(304828)), 10);
              for item in (
                SELECT
                      obter_desc_obj_jejum(nr_seq_objetivo) || ': ' || obter_desc_tipo_jejum(nr_seq_tipo) ds
                from protocolo_medic_jejum
                where cd_protocolo = acao.cd_protocolo
                  and nr_sequencia = nr_sequencia_p1
              ) loop
                responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(item.ds, 12);
              end loop;
            end if;

            --PROTOCOLO_MEDIC_NPT
            select count(1) into STRICT qtd from protocolo_medic_npt      where cd_protocolo = acao.cd_protocolo and nr_sequencia = nr_sequencia_p1;
            if (qtd > 0) then
                responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(557091)), 10);
              for item in (
                    SELECT
                          obter_desc_fator_atividade(nr_seq_fator_ativ) || ': ' || obter_desc_fator_stress(nr_seq_fator_stress) ds
                    from protocolo_medic_npt
                    where cd_protocolo = acao.cd_protocolo
                      and nr_sequencia = nr_sequencia_p1
              ) loop
                responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(item.ds, 12);
              end loop;
            end if;

            --PROTOCOLO_MEDIC_LEITE
            select count(1) into STRICT qtd from protocolo_medic_leite    where cd_protocolo = acao.cd_protocolo and nr_seq_protocolo = nr_sequencia_p1;
            if (qtd > 0) then
                responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(314294)), 10);
              for item in (
                    SELECT ds_rotina
                    from protocolo_medic_leite
                    where cd_protocolo = acao.cd_protocolo
                      and nr_seq_protocolo = nr_sequencia_p1
              ) loop
                responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(item.ds_rotina, 12);
              end loop;
            end if;
          end if;

          -- 614206 - Exames e Procedimentos
          -- 314898 - Exames de anatomia patologica
          select count(1) into STRICT qtd from protocolo_medic_proc where cd_protocolo = acao.cd_protocolo and nr_sequencia = nr_sequencia_p1;
          if (qtd > 0) then
            titulo := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(614206)), 8);
            responsefunction := responsefunction || replace(titulo, 'style="', 'style="background-color: #E6E6E6; padding: 8px 0px;');
            for item in (
              SELECT
                      case when (nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '') then obter_desc_proc_interno(nr_seq_proc_interno)
                      when (cd_procedimento IS NOT NULL AND cd_procedimento::text <> '') then obter_descricao_procedimento(cd_procedimento, null)
                      else ''
                      end ds
                  ,obter_desc_intervalo(a.cd_intervalo) ds_intervalo
              from protocolo_medic_proc a 
              where cd_protocolo = acao.cd_protocolo
                and nr_sequencia = nr_sequencia_p1
              order by 1
            ) loop
                responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(
                  gqa_gerar_resumo_protocol_bold(item.ds) || ' ' || item.ds_intervalo, 10, 'margin-left');
            end loop;
          end if;

          -- 784685 - Recomendacoes
          select count(1) into STRICT qtd from protocolo_medic_rec where cd_protocolo = acao.cd_protocolo and nr_sequencia = nr_sequencia_p1;
          if (qtd > 0) then
            titulo := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(784685)), 8);
            responsefunction := responsefunction || replace(titulo, 'style="', 'style="background-color: #E6E6E6; padding: 8px 0px;');
            for item in (
              SELECT obter_desc_recomendacao(cd_recomendacao) ds1, ds_recomendacao ds2
              from protocolo_medic_rec
              where cd_protocolo = acao.cd_protocolo
                and nr_sequencia = nr_sequencia_p1
            ) loop
                responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(item.ds1, 10);
                if (item.ds2 IS NOT NULL AND item.ds2::text <> '') then
                  responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(item.ds2, 12);
                end if;
            end loop;
          end if;

          -- 955855 - Hemoterapia
          -- 287725 - Dialise
          select count(1) into STRICT qtd from PROTOCOLO_HD_PRESCRICAO where cd_protocolo = acao.cd_protocolo and nr_seq_protocolo = nr_sequencia_p1;
          if (qtd > 0) then
            titulo := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(955855)), 8);
            responsefunction := responsefunction || replace(titulo, 'style="', 'style="background-color: #E6E6E6; padding: 8px 0px;');
            for item in (
              SELECT obter_valor_dominio(1934, ie_tipo_hemodialise) ds
              from PROTOCOLO_HD_PRESCRICAO
              where cd_protocolo = acao.cd_protocolo
                and nr_seq_protocolo = nr_sequencia_p1
            ) loop
                responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(item.ds, 10);
            end loop;
          end if;

          -- 290567 - Gasoterapia
          select count(1) into STRICT qtd from protocolo_medic_gas where cd_protocolo = acao.cd_protocolo and nr_seq_protocolo = nr_sequencia_p1;
          if (qtd > 0) then
            titulo := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(290567)), 8);
            responsefunction := responsefunction || replace(titulo, 'style="', 'style="background-color: #E6E6E6; padding: 8px 0px;');
            for item in (
              SELECT obter_valor_dominio(1299, ie_respiracao) || ': ' ||obter_desc_gas(nr_seq_gas) ds
              from protocolo_medic_gas
              where cd_protocolo = acao.cd_protocolo 
                and nr_seq_protocolo = nr_sequencia_p1
            ) loop
                responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(item.ds, 10);
            end loop;
          end if;
          --====================
        end if;

        if (etapa.nr_prescricao IS NOT NULL AND etapa.nr_prescricao::text <> '') then
          -- =========================================
          -- ============= ENVIADO ADEPT =============
          -- =========================================
          responsefunction := responsefunction ||  gqa_gerar_resumo_protocol_lb('', null);
          responsefunction := responsefunction ||  case ie_rtf when 'H' then
                                                     '</td><td style="vertical-align: top; padding-left: 5px">' else null end;
          responsefunction := responsefunction ||  gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(315625)), 6);
          responsefunction := responsefunction ||  gqa_gerar_resumo_protocol_lb('', null);
          -- >> 341573 - Solucoes e Medicamentos
          -- >> 292949 - Materiais
          select count(1) into STRICT qtd from prescr_material where nr_prescricao = etapa.nr_prescricao;
          if (qtd > 0) then
            titulo := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(292949) || ', ' || obter_desc_expressao(341573)), 8);
            responsefunction := responsefunction || replace(titulo, 'style="', 'style="background-color: #E6E6E6; padding: 8px 0px;');
            if ie_rtf = 'H' then
              for item in (SELECT distinct nr_seq_mat_cpoe
                             from prescr_material where nr_prescricao = etapa.nr_prescricao and (nr_seq_mat_cpoe IS NOT NULL AND nr_seq_mat_cpoe::text <> '')) loop
                responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_ds_material(item.nr_seq_mat_cpoe), 10, 'margin-left');
              end loop;
            else
              for item in (SELECT cd_material from prescr_material where nr_prescricao = etapa.nr_prescricao) loop
                responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_descricao_mat_prescr(item.cd_material), 10);
              end loop;
            end if;
          end if;

          -- >> 294515 - Nutricao
          select count(1) into STRICT qtd from prescr_dieta where nr_prescricao = etapa.nr_prescricao;
          if (qtd > 0) then
            titulo := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(294515)), 8);
            responsefunction := responsefunction || replace(titulo, 'style="', 'style="background-color: #E6E6E6; padding: 8px 0px;');
            for item in (SELECT cd_dieta from prescr_dieta where  nr_prescricao = etapa.nr_prescricao) loop
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_dieta(item.cd_dieta), 10);
            end loop;
          end if;

          -- 614206 - Exames e Procedimentos
          -- 314898 - Exames de anatomia patologica
          select count(1) into STRICT qtd from prescr_procedimento where nr_prescricao = etapa.nr_prescricao;
          if (qtd > 0) then
            titulo := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(614206)), 8);
            responsefunction := responsefunction || replace(titulo, 'style="', 'style="background-color: #E6E6E6; padding: 8px 0px;');
            if ie_rtf = 'H' then
              for item in (SELECT distinct nr_seq_proc_cpoe from prescr_procedimento where nr_prescricao = etapa.nr_prescricao) loop
                responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_ds_proc(item.nr_seq_proc_cpoe), 10, 'margin-left');
              end loop;
            else
              for item in (SELECT nr_seq_proc_interno from prescr_procedimento where nr_prescricao = etapa.nr_prescricao) loop
                responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_proc_interno(item.nr_seq_proc_interno), 10);
              end loop;
            end if;
          end if;

          -- 784685 - Recomendacoes
          select count(1) into STRICT qtd from prescr_recomendacao where nr_prescricao = etapa.nr_prescricao;
          if (qtd > 0) then
            titulo := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(784685)), 8);
            responsefunction := responsefunction || replace(titulo, 'style="', 'style="background-color: #E6E6E6; padding: 8px 0px;');
            for item in (SELECT cd_recomendacao from prescr_recomendacao where nr_prescricao = etapa.nr_prescricao) loop
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_recomendacao(item.cd_recomendacao), 10);
            end loop;
          end if;

          -- 955855 - Hemoterapia
          select count(1) into STRICT qtd from prescr_solic_bco_sangue where nr_prescricao = etapa.nr_prescricao;
          if (qtd > 0) then
            titulo := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(955855)), 8);
            responsefunction := responsefunction || replace(titulo, 'style="', 'style="background-color: #E6E6E6; padding: 8px 0px;');
            for item in (
              SELECT b.nr_seq_derivado san_derivado
              from prescr_solic_bco_sangue a, cpoe_hemoterapia b
              where a.nr_prescricao = etapa.nr_prescricao and a.nr_seq_hemo_cpoe = b.nr_sequencia
            ) loop
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_hemocomponente(item.san_derivado), 10);
            end loop;
          end if;

          -- 287725 - Dialise
          select count(1) into STRICT qtd from hd_prescricao where nr_prescricao = etapa.nr_prescricao;
          if (qtd > 0) then
            titulo := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(287725)), 8);
            responsefunction := responsefunction || replace(titulo, 'style="', 'style="background-color: #E6E6E6; padding: 8px 0px;');
            for item in (
                  SELECT
                          obter_valor_dominio(1934, a.ie_tipo_hemodialise) ie_tipo_hemodialise, 
                          CASE WHEN b.ie_hemodialise='S' THEN  obter_desc_expressao(489925)  ELSE obter_desc_expressao(489926) END  ie_carater
                  from hd_prescricao a, cpoe_dialise b
                  where a.nr_prescricao = etapa.nr_prescricao and a.nr_seq_dialise_cpoe = b.nr_sequencia
            ) loop
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(item.ie_carater || ': ' || item.ie_tipo_hemodialise, 10);
            end loop;
          end if;

          -- 290567 - Gasoterapia
          select count(1) into STRICT qtd from prescr_gasoterapia where nr_prescricao = etapa.nr_prescricao;
          if (qtd > 0) then
            titulo := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(290567)), 8);
            responsefunction := responsefunction || replace(titulo, 'style="', 'style="background-color: #E6E6E6; padding: 8px 0px;');
            for item in (SELECT obter_valor_dominio(1299, ie_respiracao) ie_respiracao, obter_desc_gas(nr_seq_gas) gas from prescr_gasoterapia where  nr_prescricao = etapa.nr_prescricao) loop
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(item.ie_respiracao || ': ' || item.gas, 10);
            end loop;
          end if;

          responsefunction := responsefunction ||  case ie_rtf when 'H' then '</td></tr></table>' else null end; --|| gqa_gerar_resumo_protocol_lb('', null)
          --====================
        end if;
    end if;
  return;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_pg(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN;
    responsefunction long := '';
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '' and coalesce(etapa.QT_RESULTADO::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ', 4);
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293938), 6);
    else
      select DS_PENDENCIA into STRICT localtextfunction from GQA_PENDENCIA where nr_sequencia = acao.NR_SEQ_PROTOCOLO_GER;

      if ((acao.QT_PONTO_NAO IS NOT NULL AND acao.QT_PONTO_NAO::text <> '') and acao.QT_PONTO_NAO = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(297781)) || ': ' || obter_desc_expressao(327114), 4);
      elsif ((acao.QT_PONTO_SIM IS NOT NULL AND acao.QT_PONTO_SIM::text <> '') and acao.QT_PONTO_SIM = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(297781)) || ': ' || obter_desc_expressao(327113), 4);
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(localtextfunction, 6);
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(297781)) || ': ' || obter_desc_expressao(487395), 4);
      end if;
    end if;
  return;
  END;

begin
  /*PARAMETROS*/

  select obter_usuario_ativo into STRICT nm_usuario_w;
  cd_perfil_ativo_w := obter_perfil_ativo;
  ds_fonte_w := obter_param_usuario(281, 5, cd_perfil_ativo_w, nm_usuario_w, cd_perfil_ativo_w, ds_fonte_w);
  ds_tam_fonte_w := obter_param_usuario(281, 6, cd_perfil_ativo_w, nm_usuario_w, cd_perfil_ativo_w, ds_tam_fonte_w);
  nr_tam_fonte_w := somente_numero(ds_tam_fonte_w) * 2;
  /*PARAMETROS*/

  select * into STRICT protocolo from gqa_protocolo_pac where NR_SEQUENCIA = NR_SEQ_PROTOCOLO_P;

  dummy := dummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(761566) || ': ' || protocolo.DS_NOME_PROTOCOLO, 0); /*Nome do protocolo*/
  dummy := dummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(762976) || ': ' || obter_pf_usuario(protocolo.nm_usuario_liberacao, 'NOME') || ' (' || protocolo.nm_usuario_liberacao || '), ' || obter_desc_expressao(341615) || ' ' || to_char(protocolo.DT_LIBERACAO, 'dd/mon/yyyy hh24:mi:ss'), 0);

  if (protocolo.nm_usuario_termino IS NOT NULL AND protocolo.nm_usuario_termino::text <> '' AND protocolo.dt_termino IS NOT NULL AND protocolo.dt_termino::text <> '') then -- SE FOI FINALIZADO
    dummy := dummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(300994) || ': ' || obter_pf_usuario(protocolo.nm_usuario_termino, 'NOME') || ' (' || protocolo.nm_usuario_termino || '), ' || obter_desc_expressao(341615) || ' ' || to_char(protocolo.DT_TERMINO, 'dd/mon/yyyy hh24:mi:ss'), 0);
    begin
      select nm_justificativa into STRICT localtext from gqa_pend_justificativa where NR_SEQUENCIA = protocolo.nr_seq_motivo;
      dummy := dummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293478) || ': ' || localtext, 0);
    exception when no_data_found then
      null;
    end;

    if (protocolo.ds_justificativa IS NOT NULL AND protocolo.ds_justificativa::text <> '') then
      dummy := dummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(292337) || ': ' || protocolo.ds_justificativa, 0);
    end if;

  elsif (protocolo.nm_usuario_inativacao IS NOT NULL AND protocolo.nm_usuario_inativacao::text <> '' AND protocolo.nr_seq_motivo IS NOT NULL AND protocolo.nr_seq_motivo::text <> '') then --SE FOI INATIVADO
    dummy := dummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(343620) || ': ' || obter_pf_usuario(protocolo.nm_usuario_inativacao, 'NOME') || ' (' || protocolo.nm_usuario_inativacao || '), ' || obter_desc_expressao(341615) || ' ' || to_char(protocolo.dt_inativacao, 'dd/mon/yyyy hh24:mi:ss'), 0); /*Profissional que inativou o protocolo*/
    select nm_justificativa into STRICT localtext from gqa_pend_justificativa where NR_SEQUENCIA = protocolo.nr_seq_motivo;
    dummy := dummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293478) || ': ' || localtext, 0);
    dummy := dummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(292337) || ': ' || protocolo.ds_justificativa, 0);
  else
    dummy := dummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(298834) || ': ' || obter_desc_expressao(802158), 0); /*Status atual*/
  end if;

  dummy := dummy || gqa_gerar_resumo_protocol_lb('', null) || obter_desc_expressao(289637);

  for etapa in (
                  select a.* 
                  from GQA_PROTOCOLO_ETAPA_PAC a,
                       ( select 
                                 y.nr_sequencia, 
                                 y.nr_seq_etapa,
                                 obter_dependencia_etapa(protocolo.nr_seq_protocolo, y.nr_seq_etapa, 'O', y.nr_seq_etapa_dup_ant) hierarquia
                         from GQA_PROTOCOLO_ETAPA_PAC y
                         where y.NR_SEQ_PROT_PAC = NR_SEQ_PROTOCOLO_P
                       ) b
                  where a.NR_SEQ_PROT_PAC = NR_SEQ_PROTOCOLO_P
                  and a.nr_sequencia = b.nr_sequencia
                  order by b.hierarquia asc
               ) loop
  
    if (etapa.NR_SEQ_MOTIVO_CANCELAR IS NOT NULL AND etapa.NR_SEQ_MOTIVO_CANCELAR::text <> '') then
      SELECT t.nm_justificativa
      into STRICT localtext
      FROM gqa_pend_justificativa t
      WHERE nr_sequencia = etapa.NR_SEQ_MOTIVO_CANCELAR;

      localdummy := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(etapa.DS_NOME_ETAPA) || ' - ' || gqa_gerar_resumo_protocol_canc, 2);
      localdummy := localdummy || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(929133)) || ': ' || to_char(etapa.DT_CANCELAR_USUARIO, 'dd/mon/yyyy hh24:mi:ss'), 4);
      localdummy := localdummy || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(569370)) || ': ' || obter_pf_usuario(etapa.NM_USUARIO_CANCELAR, 'NOME') || ' (' || etapa.NM_USUARIO_CANCELAR || ')', 4);
      localdummy := localdummy || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(293478)) || ': ' || localtext, 4);
      localdummy := localdummy || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(292337)) || ': ' || etapa.DS_JUSTIFICATIVA_CANCELAR, 4);
      dummy := dummy || gqa_gerar_resumo_protocol_lb('', null) || localdummy;

      GOTO end_loop_continue;
    elsif (coalesce(etapa.DT_FIM::text, '') = '') then --regra informada por marcelo (se a etapa nao estiver finalizada, nao mostrar)
      -- se etapa for EP, e tiver algum item no ADEP ja realizado, nao eh necessario finalizar etapa para mostrar em resumo
      for acao in (SELECT ie_tipo_acao, nr_seq_acao_protocolo from gqa_acao where nr_sequencia = etapa.nr_seq_acao and (nr_seq_acao_protocolo IS NOT NULL AND nr_seq_acao_protocolo::text <> '')) loop
        if (acao.ie_tipo_acao = 'EP') then
          GOTO init_etapa;
        end if;
      end loop;

      -- Se nao for do tipo EP, nao deve mostrar nada (se DT_FIM is null). Entao vai para proxima etapa.
      GOTO end_loop_continue;
    end if;
    <<init_etapa>>
  
    localdummy := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(etapa.DS_NOME_ETAPA), 2);
    if (etapa.DT_INICIO IS NOT NULL AND etapa.DT_INICIO::text <> '' AND etapa.DT_FIM IS NOT NULL AND etapa.DT_FIM::text <> '') then
      localdummy := localdummy || gqa_gerar_resumo_protocol_lb(
                            gqa_gerar_resumo_protocol_bold(obter_desc_expressao(291978)) ||
                            ': ' || 
                            to_char(etapa.DT_INICIO, 'dd/mon/yyyy hh24:mi:ss') || 
                            ', ' || 
                            obter_desc_expressao(290101) || 
                            ': ' || 
                            to_char(etapa.DT_FIM, 'dd/mon/yyyy hh24:mi:ss')
                    , 4);
    elsif (etapa.DT_INICIO IS NOT NULL AND etapa.DT_INICIO::text <> '') then
      localdummy := localdummy || gqa_gerar_resumo_protocol_lb(
                            gqa_gerar_resumo_protocol_bold(obter_desc_expressao(291978)) ||
                            ': ' || 
                            to_char(etapa.DT_INICIO, 'dd/mon/yyyy hh24:mi:ss')
                    , 4);
    end if;

    if (etapa.nm_usuario_executor IS NOT NULL AND etapa.nm_usuario_executor::text <> '') then
      localdummy := localdummy || gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(obter_desc_expressao(289772)) || ': ' || obter_pf_usuario(etapa.nm_usuario_executor, 'NOME') || ' (' || etapa.nm_usuario_executor || ')', 4);
    end if;

    for acao in (SELECT ie_tipo_acao, nr_seq_acao_protocolo from gqa_acao where nr_sequencia = etapa.nr_seq_acao and (nr_seq_acao_protocolo IS NOT NULL AND nr_seq_acao_protocolo::text <> '')) loop
      if (acao.ie_tipo_acao = 'EP') then
        GOTO init_acao; --Nao inserir cabecalho se nao houver nenhum item executado no adep.
      end if;
    end loop;
    dummy := dummy || gqa_gerar_resumo_protocol_lb('', null) || localdummy;

    <<init_acao>>
    for acao in (SELECT * from GQA_ACAO where NR_SEQUENCIA = etapa.NR_SEQ_ACAO) loop
      if (acao.IE_TIPO_ACAO = 'AV') then
        dummy := dummy || gqa_gerar_resumo_protocolo_av(etapa, acao);
      elsif (acao.IE_TIPO_ACAO = 'DL') then
        dummy := dummy || gqa_gerar_resumo_protocolo_dl(etapa, acao);
      elsif (acao.IE_TIPO_ACAO = 'ES') then
        dummy := dummy || gqa_gerar_resumo_protocolo_es(etapa, acao);
      elsif (acao.IE_TIPO_ACAO = 'EP') then
        dummy_aux := gqa_gerar_resumo_protocolo_ep(etapa, acao);
        if (dummy_aux IS NOT NULL AND dummy_aux::text <> '') then -- Apenas mostrar cabecalho de EXECUCAO PRESCRICAO se algum item for executado no ADEP.
          dummy := dummy || gqa_gerar_resumo_protocol_lb('', null) || localdummy || dummy_aux;
        end if;
      elsif (acao.IE_TIPO_ACAO = 'ME') then
        dummy := dummy || gqa_gerar_resumo_protocolo_me(etapa, acao);
      elsif (acao.IE_TIPO_ACAO = 'NC') then
        dummy := dummy || gqa_gerar_resumo_protocolo_nc(etapa, acao);
      elsif (acao.IE_TIPO_ACAO = 'PE') then
        dummy := dummy || gqa_gerar_resumo_protocolo_pe(etapa, acao);
      elsif (acao.IE_TIPO_ACAO = 'PP') then
        dummy := dummy || gqa_gerar_resumo_protocolo_pp(etapa, acao);
      elsif (acao.IE_TIPO_ACAO = 'PG') then
        dummy := dummy || gqa_gerar_resumo_protocolo_pg(etapa, acao);
      end if;
    end loop;

   <<end_loop_continue>>
   NULL; -- evitar erro apos declaracao de label
  end loop;

  if ((IE_RTF IS NOT NULL AND IE_RTF::text <> '') and IE_RTF = 'S') then
    ds_cabecalho_w := '{\rtf1\ansi\ansicpg1252\deff0\deflang1046{\fonttbl{\f0\fswiss\fcharset0 '
      || ds_fonte_w
      || ';}}'
      || '{\*\generator msftedit 5.41.15.1507;}\viewkind4\uc1\pard\f0\fs'
      || nr_tam_fonte_w
      || ' ';

    ds_rodape_w := '}';
    dummy := ds_cabecalho_w
      || dummy
      || ds_rodape_w;
  elsif (IE_RTF IS NOT NULL AND IE_RTF::text <> '' AND (IE_RTF = 'H' or IE_RTF = 'R')) then
    dummy := regexp_replace(dummy, '<html.*?>|</html>', '');
    dummy := regexp_replace(dummy, '<body.*?>|</body>', '');
  end if;

response := dummy;
RAISE NOTICE '%', dummy;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gqa_obter_ger_resumo_protocolo (( NR_SEQ_PROTOCOLO_P GQA_PROTOCOLO_PAC.NR_SEQUENCIA%type, IE_RTF text, RESPONSE out text) IS dummy text DEFAULT '') FROM PUBLIC;

