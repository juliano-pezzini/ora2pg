-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_liberar_reembolso ( nr_seq_reembolso_p bigint, ie_opcao_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* ie_opcao_p
	'L' - Liberar
	'D' - Desfazer liberacao */
ie_tipo_segurado_w		varchar(3);
ie_mes_fechado_w		varchar(2);
ie_tipo_protocolo_w		varchar(2);
ie_titularidade_w		varchar(2)	:= null;
vl_liberado_w			double precision;
vl_coparticipacao_w		double precision;
vl_tot_liquido_proc_w		double precision;
vl_material_w			double precision;
nr_seq_conta_proc_w		bigint;
qt_titulos_gerados_w		bigint;
nr_titulo_w			bigint;
nr_seq_protocolo_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_plano_w			bigint	:= null;
nr_seq_contrato_w		bigint	:= null;
nr_seq_intercambio_w		bigint	:= null;
qt_idade_w			bigint	:= null;
nr_titulo_desdob_w		bigint;
dt_contratacao_w		timestamp		:= null;
nr_seq_mot_reembolso_w		bigint;
ie_desc_copartic_w		varchar(1);
ie_status_w			varchar(1);
nr_seq_regra_lib_w		bigint;
qt_glosa_fechar_conta_w		bigint;
ds_glosas_oc_w			varchar(255);
ie_apropriacao_copartic_w	varchar(3);
vl_total_copartic_w		double precision	:= 0;
nr_seq_regra_acao_reemb_w	bigint;
nr_seq_conta_mat_w		pls_conta_mat.nr_sequencia%type;
vl_tot_liquido_w		double precision;
vl_tot_liquido_mat_w		double precision;
ie_geracao_pos_estab_w		pls_parametros.ie_geracao_pos_estabelecido%type;
qt_pos_estab_w			smallint;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
ie_acao_w			pls_regra_reemb_acao.ie_acao%type;
ie_esquema_contabil_w		pls_parametro_contabil.ie_esquema_contabil%type;
nr_lote_reembolso_w		lote_contabil.nr_lote_contabil%type;
qt_conta_enviada_ans_w		bigint := 0;
ie_forma_contab_reembolso_w	pls_parametro_contabil.ie_forma_contab_reembolso%type;
dt_fechamento_w			pls_competencia.dt_fechamento%type;
ie_consist_comp_fechada_w	pls_parametros.ie_consist_comp_fechada%type;
dt_mes_competencia_w		pls_protocolo_conta.dt_mes_competencia%type;
nr_seq_lote_fat_w		pls_conta_pos_estabelecido.nr_seq_lote_fat%type;
ie_concil_contab_w		pls_visible_false.ie_concil_contab%type;
ie_origem_conta_w		pls_conta.ie_origem_conta%type;
ie_status_a500_w		ptu_fatura.ie_status%type;
nr_seq_fatura_w			ptu_fatura.nr_sequencia%type;
ie_tipo_congenere_w		pls_congenere.ie_tipo_congenere%type;
qt_movimento_w			bigint := 0;
nr_seq_atualizacao_w		pls_atualizacao_contabil.nr_sequencia%type := 0;
qt_reg_ctb_doc_w		smallint;
qt_reg_consist_ctb_doc_w	smallint;
ie_status_origem_lote_w		lote_contabil.ie_status_origem%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_regra_acao_reemb
	from	pls_conta_proc
	where	nr_seq_conta = nr_seq_reembolso_p
	and	ie_status in ('L','S');
	
C02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_regra_acao_reemb
	from	pls_conta_mat
	where	nr_seq_conta = nr_seq_reembolso_p
	and	ie_status in ('L','S');
	
C03 CURSOR FOR
	SELECT	b.nr_titulo
	from	pls_protocolo_conta	a,
		titulo_pagar 		b
	where	a.nr_sequencia		= b.nr_seq_reembolso
	and	a.nr_sequencia		= nr_seq_protocolo_w
	and	b.ie_situacao <> 'C';
	
C04 CURSOR(nr_seq_reembolso_pc		pls_conta.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_item,
		a.vl_procedimento_imp vl_apresentado,
		a.vl_liberado + a.vl_glosa vl_base,
		'P' ie_tipo_item
	from	pls_conta_proc a
	where	a.nr_seq_conta = nr_seq_reembolso_pc
	
union all

	SELECT	a.nr_sequencia nr_seq_item,
		a.vl_material_imp vl_apresentado,
		a.vl_liberado + a.vl_glosa vl_base,
		'M' ie_tipo_item
	from	pls_conta_mat a
	where	a.nr_seq_conta = nr_seq_reembolso_pc;
	
c_contas CURSOR FOR
	SELECT	CASE WHEN ie_forma_contab_reembolso_w='L' THEN  'VL_LIBERADO' WHEN ie_forma_contab_reembolso_w='C' THEN  'VL_CALC_MAT' END  nm_atributo,
		'PLS_CONTA_MAT' nm_tabela,
		CASE WHEN ie_forma_contab_reembolso_w='L' THEN  coalesce(c.vl_liberado,0) WHEN ie_forma_contab_reembolso_w='C' THEN  coalesce(c.vl_material_imp, 0) END  vl_item,
		trunc(clock_timestamp(),'dd') dt_competencia,
		23 nr_seq_info,
		a.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		c.nr_sequencia nr_doc_analitico
	from	pls_conta_mat 		c,
		pls_conta 		b,
		pls_protocolo_conta 	a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= nr_seq_reembolso_p
	and	ie_forma_contab_reembolso_w 	<> 'M'
	and	a.ie_tipo_protocolo 	= 'R'
	
union all

	SELECT	CASE WHEN ie_forma_contab_reembolso_w='L' THEN  'VL_LIBERADO' WHEN ie_forma_contab_reembolso_w='C' THEN  'VL_CALC_PROC' END  nm_atributo,
		'PLS_CONTA_PROC' nm_tabela,
		CASE WHEN ie_forma_contab_reembolso_w='L' THEN  coalesce(c.vl_liberado,0) WHEN ie_forma_contab_reembolso_w='C' THEN  coalesce(c.vl_procedimento_imp, 0) END  vl_item,
		trunc(clock_timestamp(),'dd') dt_competencia,
		23 nr_seq_info,
		a.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		c.nr_sequencia nr_doc_analitico
	from	pls_conta_proc 		c,
		pls_conta 		b,
		pls_protocolo_conta 	a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= nr_seq_reembolso_p
	and	ie_forma_contab_reembolso_w 	<> 'M'
	and	a.ie_tipo_protocolo 	= 'R'
	
union all
	
	select	'VL_GLOSA' nm_atributo,
		'PLS_CONTA_MAT' nm_tabela,
		coalesce(c.vl_glosa,0) vl_item,
		trunc(clock_timestamp(),'dd') dt_competencia,
		24 nr_seq_info,
		a.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,	
	        c.nr_sequencia nr_doc_analitico
	from	pls_conta_mat 		c,
		pls_conta 		b,
		pls_protocolo_conta 	a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= nr_seq_reembolso_p
	and	ie_forma_contab_reembolso_w 	= 'M'
	and 	coalesce(c.vl_glosa,0)	<> 0
	and	a.ie_tipo_protocolo	= 'R'
	
union all

	select	'VL_GLOSA' nm_atributo,
		'PLS_CONTA_PROC' nm_tabela,
		coalesce(c.vl_glosa,0) vl_item,
		trunc(clock_timestamp(),'dd') dt_competencia,
		24 nr_seq_info,
		a.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		c.nr_sequencia nr_doc_analitico
	from	pls_conta_proc 		c,
		pls_conta 		b,
		pls_protocolo_conta 	a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= nr_seq_reembolso_p
	and	ie_forma_contab_reembolso_w 	= 'M'
	and 	coalesce(c.vl_glosa,0)	<> 0
	and	a.ie_tipo_protocolo	= 'R';

c_contas_estorno CURSOR FOR
	SELECT	d.nm_atributo,
		d.nm_tabela,
		CASE WHEN ie_forma_contab_reembolso_w='L' THEN  coalesce(c.vl_liberado,0) WHEN ie_forma_contab_reembolso_w='C' THEN  coalesce(c.vl_material_imp, 0) END  vl_item,
		trunc(clock_timestamp(),'dd') dt_competencia,
		d.cd_tipo_lote_contabil,
		23 nr_seq_info,
		a.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		c.nr_sequencia nr_doc_analitico,
		count(case d.ie_situacao_ctb when 'P' then 1 end) qt_pendente
	from	ctb_documento		d,
		pls_conta_mat 		c,
		pls_conta 		b,
		pls_protocolo_conta 	a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= nr_seq_reembolso_p
	and	ie_forma_contab_reembolso_w 	<> 'M'
	and	a.ie_tipo_protocolo 	= 'R'
	and 	d.cd_tipo_lote_contabil = 23
	and 	d.nr_documento		= a.nr_sequencia
	and	d.nr_seq_doc_compl	= b.nr_sequencia
	and	d.nr_doc_analitico	= c.nr_sequencia
	and 	d.nm_tabela		= 'PLS_CONTA_MAT'
	and	d.nm_atributo 		in ('VL_CALC_MAT', 'VL_LIBERADO')
	group by d.nm_atributo,
		d.nm_tabela,
		c.vl_liberado,
		c.vl_material_imp,
		d.cd_tipo_lote_contabil,
		a.nr_sequencia,
		b.nr_sequencia,
		c.nr_sequencia
	
union all

	SELECT	d.nm_atributo,
		d.nm_tabela,
		CASE WHEN ie_forma_contab_reembolso_w='L' THEN  coalesce(c.vl_liberado,0) WHEN ie_forma_contab_reembolso_w='C' THEN  coalesce(c.vl_procedimento_imp, 0) END  vl_item,
		trunc(clock_timestamp(),'dd') dt_competencia,
		d.cd_tipo_lote_contabil,
		23 nr_seq_info,
		a.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		c.nr_sequencia nr_doc_analitico,
		count(case d.ie_situacao_ctb when 'P' then 1 end) qt_pendente
	from	ctb_documento		d,
		pls_conta_proc 		c,
		pls_conta 		b,
		pls_protocolo_conta 	a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= nr_seq_reembolso_p
	and	ie_forma_contab_reembolso_w 	<> 'M'
	and	a.ie_tipo_protocolo 	= 'R'
	and 	d.cd_tipo_lote_contabil = 23
	and 	d.nr_documento		= a.nr_sequencia
	and	d.nr_seq_doc_compl	= b.nr_sequencia
	and	d.nr_doc_analitico	= c.nr_sequencia
	and 	d.nm_tabela		= 'PLS_CONTA_PROC'
	and	d.nm_atributo 		in ('VL_CALC_PROC', 'VL_LIBERADO')
	group by d.nm_atributo,
		d.nm_tabela,
		c.vl_liberado,
		c.vl_procedimento_imp,
		d.cd_tipo_lote_contabil,
		a.nr_sequencia,
		b.nr_sequencia,
		c.nr_sequencia
	
union all
	
	select	d.nm_atributo,
		d.nm_tabela,
		coalesce(c.vl_glosa,0) vl_item,
		trunc(clock_timestamp(),'dd') dt_competencia,
		d.cd_tipo_lote_contabil,
		24 nr_seq_info,
		a.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,	
	        c.nr_sequencia nr_doc_analitico,
		count(case d.ie_situacao_ctb when 'P' then 1 end) qt_pendente
	from	ctb_documento 		d,
		pls_conta_mat 		c,
		pls_conta 		b,
		pls_protocolo_conta 	a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= nr_seq_reembolso_p
	and	ie_forma_contab_reembolso_w 	= 'M'
	and 	coalesce(c.vl_glosa,0)	<> 0
	and	a.ie_tipo_protocolo	= 'R'
	and 	d.cd_tipo_lote_contabil = 23
	and 	d.nr_documento		= a.nr_sequencia
	and	d.nr_seq_doc_compl	= b.nr_sequencia
	and	d.nr_doc_analitico	= c.nr_sequencia
	and 	d.nm_tabela		= 'PLS_CONTA_MAT'
	and	d.nm_atributo 		= 'VL_GLOSA'
	group by d.nm_atributo,
		d.nm_tabela,
		c.vl_glosa,
		d.cd_tipo_lote_contabil,
		a.nr_sequencia,
		b.nr_sequencia,
		c.nr_sequencia
	
union all

	select	d.nm_atributo,
		d.nm_tabela,
		coalesce(c.vl_glosa,0) vl_item,
		trunc(clock_timestamp(),'dd') dt_competencia,
		d.cd_tipo_lote_contabil,
		24 nr_seq_info,
		a.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		c.nr_sequencia nr_doc_analitico,
		count(case d.ie_situacao_ctb when 'P' then 1 end) qt_pendente
	from	ctb_documento		d,
		pls_conta_proc 		c,
		pls_conta 		b,
		pls_protocolo_conta 	a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= nr_seq_reembolso_p
	and	ie_forma_contab_reembolso_w 	= 'M'
	and 	coalesce(c.vl_glosa,0)	<> 0
	and	a.ie_tipo_protocolo	= 'R'
	and 	d.cd_tipo_lote_contabil = 23
	and 	d.nr_documento		= a.nr_sequencia
	and	d.nr_seq_doc_compl	= b.nr_sequencia
	and	d.nr_doc_analitico	= c.nr_sequencia
	and 	d.nm_tabela		= 'PLS_CONTA_PROC'
	and	d.nm_atributo 		= 'VL_GLOSA'
	group by d.nm_atributo,
		d.nm_tabela,
		c.vl_glosa,
		d.cd_tipo_lote_contabil,
		a.nr_sequencia,
		b.nr_sequencia,
		c.nr_sequencia;

vet_contas_estorno c_contas_estorno%rowtype;

/* Contabilidade Instantanea -  Cursor referente ao processo de desfazer consistir.
Quando o tipo de reembolso for 'M', e a conta for encerrada e em seguida desfeito o encerramente, e necessario gerar estorno
para o movimento criado quando foi realizada a consistencia da conta.
*/
c_contas_2 CURSOR FOR
	SELECT	d.nm_atributo,
		d.nm_tabela,
		coalesce(c.vl_procedimento_imp,0) vl_item,
		trunc(clock_timestamp(),'dd') dt_mes_competencia,
		d.cd_tipo_lote_contabil,
		23 nr_seq_info,
		a.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		c.nr_sequencia nr_doc_analitico,
		count(case d.ie_situacao_ctb when 'P' then 1 end) qt_pendente
	from	ctb_documento 		d,
		pls_conta_proc 		c,
		pls_conta 		b,
		pls_protocolo_conta 	a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= nr_seq_reembolso_p
	and	ie_forma_contab_reembolso_w = 'M'
	and	a.ie_tipo_protocolo 	= 'R'
	and 	d.cd_tipo_lote_contabil = 23
	and 	d.nr_documento		= a.nr_sequencia
	and	d.nr_seq_doc_compl	= b.nr_sequencia
	and	d.nr_doc_analitico	= c.nr_sequencia
	and 	d.nm_tabela		= 'PLS_CONTA_PROC'
	and	d.nm_atributo 		= 'VL_CALC_PROC'
	group by d.nm_atributo,
		d.nm_tabela,
		c.vl_procedimento_imp,
		d.cd_tipo_lote_contabil,
		a.nr_sequencia,
		b.nr_sequencia,
		c.nr_sequencia
	
union all

	SELECT	'VL_CALC_MAT' nm_atributo,
		'PLS_CONTA_MAT' nm_tabela,
		coalesce(c.vl_material_imp,0) vl_item,
		trunc(clock_timestamp(),'dd') dt_mes_competencia,
		d.cd_tipo_Lote_contabil,
		23 nr_seq_info,
		a.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		c.nr_sequencia nr_doc_analitico,
		count(case d.ie_situacao_ctb when 'P' then 1 end) qt_pendente
	from	ctb_documento		d,
		pls_conta_mat		c,
		pls_conta 		b,
		pls_protocolo_conta 	a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= nr_seq_reembolso_p
	and	ie_forma_contab_reembolso_w = 'M'
	and	a.ie_tipo_protocolo	= 'R'
	and 	d.cd_tipo_lote_contabil = 23
	and 	d.nr_documento		= a.nr_sequencia
	and	d.nr_seq_doc_compl	= b.nr_sequencia
	and	d.nr_doc_analitico	= c.nr_sequencia
	and 	d.nm_tabela		= 'PLS_CONTA_MAT'
	and	d.nm_atributo 		= 'VL_CALC_MAT'
	group by d.nm_atributo,
		d.nm_tabela,
		c.vl_material_imp,
		d.cd_tipo_lote_contabil,
		a.nr_sequencia,
		b.nr_sequencia,
		c.nr_sequencia;
	
vet_contas		c_contas%rowtype;
vet_contas_2		c_contas_2%rowtype;

BEGIN
select	coalesce(max(ie_esquema_contabil),'N')
into STRICT	ie_esquema_contabil_w
from	pls_parametro_contabil
where	cd_estabelecimento	= cd_estabelecimento_p;



begin
select	coalesce(ie_apropriacao_copartic,'N'),
	coalesce(ie_consist_comp_fechada,'N')
into STRICT	ie_apropriacao_copartic_w,
	ie_consist_comp_fechada_w
from	pls_parametros
where	cd_estabelecimento = cd_estabelecimento_p;
exception
when others then
	ie_apropriacao_copartic_w := 'N';
	ie_consist_comp_fechada_w := 'N';
end;

select	a.nr_seq_protocolo,
	pls_obter_se_mes_fechado(b.dt_mes_competencia,'T',cd_estabelecimento_p),
	pls_obter_dados_segurado(b.nr_seq_segurado,'TP') ie_tipo_segurado,
	b.nr_seq_segurado,
	b.ie_tipo_protocolo,
	b.nr_seq_mot_reembolso,
	a.nr_sequencia,
	a.ie_origem_conta,
	(	select	max(y.ie_tipo_congenere)
		from	pls_segurado	x,
			pls_congenere	y
		where	y.nr_sequencia	= x.nr_seq_congenere
		and	x.nr_sequencia	= a.nr_seq_segurado),
	trunc(b.dt_mes_competencia, 'mm')
into STRICT	nr_seq_protocolo_w,
	ie_mes_fechado_w,
	ie_tipo_segurado_w,
	nr_seq_segurado_w,
	ie_tipo_protocolo_w,
	nr_seq_mot_reembolso_w,
	nr_seq_conta_w,
	ie_origem_conta_w,
	ie_tipo_congenere_w,
	dt_mes_competencia_w
from	pls_protocolo_conta	b,
	pls_conta		a
where	a.nr_sequencia		= nr_seq_reembolso_p
and	a.nr_seq_protocolo	= b.nr_sequencia;

begin
	select	coalesce(ie_desconta_copartic,'S')
	into STRICT	ie_desc_copartic_w
	from	pls_motivo_reembolso
	where	nr_sequencia = nr_seq_mot_reembolso_w;
exception
when others then
	ie_desc_copartic_w := 'S';
end;

if (ie_opcao_p = 'L') then
	
	for r_C04_w in C04(nr_seq_reembolso_p) loop
		if (r_C04_w.vl_base <> r_C04_w.vl_apresentado) then
		
			if (r_C04_w.ie_tipo_item = 'P') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(194109,';NR_SEQ_ITEM='||r_C04_w .nr_seq_item|| ';NR_SEQ_CONTA=' ||nr_seq_reembolso_p);
			else
				CALL wheb_mensagem_pck.exibir_mensagem_abort(194110,';NR_SEQ_ITEM='||r_C04_w .nr_seq_item|| ';NR_SEQ_CONTA=' ||nr_seq_reembolso_p);
			end if;
		end if;
	end loop;

	if (ie_mes_fechado_w = 'S') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(191790);
	end if;
	
	/* Obter a quantidade de glosas que NAO permitem fechar a conta */

	select	count(1)
	into STRICT	qt_glosa_fechar_conta_w
	from	pls_glosa_conta_medica_v
	where	ie_fechar_conta	= 'N'
	and	nr_seq_conta	= nr_seq_reembolso_p
	and	coalesce(ie_situacao,'A')	= 'A';
	
	if (qt_glosa_fechar_conta_w > 0) then
		ds_glosas_oc_w := pls_obter_glosas_oc_fechar(nr_seq_reembolso_p, 'G');		
		CALL wheb_mensagem_pck.exibir_mensagem_abort(174329,';DS_GLOSAS=' ||ds_glosas_oc_w|| ';' || 'NR_SEQ_CONTA=' ||nr_seq_reembolso_p);
	end if;
	
	select	coalesce(max(ie_geracao_pos_estabelecido),'F')
	into STRICT	ie_geracao_pos_estab_w
	from	pls_parametros
	where	cd_estabelecimento = cd_estabelecimento_p;
	
	-- nao gera o pos se for de A500 e o congenere cooperativa
	if	not ((coalesce(ie_origem_conta_w, 'E') = 'A') and (coalesce(ie_tipo_congenere_w, 'X') = 'CO')) then
		--OS 720746
		CALL pls_gerar_valor_pos_estab(nr_seq_reembolso_p, nm_usuario_p, ie_geracao_pos_estab_w,null,null,'A');
	end if;
	
	select	count(1)
	into STRICT	qt_pos_estab_w
	from	pls_conta_pos_estabelecido
	where	nr_seq_conta 	= nr_seq_reembolso_p
	and	((ie_situacao	= 'A') or (coalesce(ie_situacao::text, '') = ''))  LIMIT 1;
	
	if (coalesce(qt_pos_estab_w,0) > 0) then
		update	pls_conta_pos_estabelecido
		set	ie_status_faturamento 	= 'L',
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_seq_conta 		= nr_seq_reembolso_p
		and	ie_status_faturamento 	= 'P'
		and	((ie_situacao	= 'A') or (coalesce(ie_situacao::text, '') = ''));
		
		/* Altera o status de faturamento para "Permite faturamento" */

		update	pls_conta
		set	ie_status_fat	= 'L'
		where	nr_sequencia	= nr_seq_reembolso_p;
	end if;
	
	CALL pls_atualiza_valor_conta(nr_seq_reembolso_p, nm_usuario_p);
	
	--tratamento incluido por dgkorz solicitacao rodrigo UNIMED litoral se da devido a necessidade de reembolsar beneficiarios de cooperativa
	open C01;
	loop
	fetch C01 into	
		nr_seq_conta_proc_w,
		nr_seq_regra_acao_reemb_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (coalesce(ie_apropriacao_copartic_w,'N') = 'N') and (coalesce(nr_seq_regra_acao_reemb_w::text, '') = '') then
			CALL pls_gerar_coparticipacao(nr_seq_conta_proc_w, nr_seq_segurado_w, nr_seq_reembolso_p,
						cd_estabelecimento_p, nm_usuario_p, 0,
						nr_seq_plano_w, nr_seq_contrato_w, nr_seq_intercambio_w,
						dt_contratacao_w, qt_idade_w, ie_titularidade_w, 
						null,null,null,
						null);
		elsif (coalesce(ie_apropriacao_copartic_w,'N') = 'S') and (nr_seq_regra_acao_reemb_w IS NOT NULL AND nr_seq_regra_acao_reemb_w::text <> '') then
			
			select	max(ie_acao)
			into STRICT	ie_acao_w
			from	pls_regra_reemb_acao
			where	nr_sequencia	= nr_seq_regra_acao_reemb_w;
			
			if (ie_acao_w = 'RC') then
				CALL pls_apropriacao_pck.pls_gerar_coparticipacao_aprop(nr_seq_conta_proc_w, null, nm_usuario_p);
			else
				CALL pls_gerenciar_reembolso_pck.pls_gerar_coparticipacao_aprop(nr_seq_conta_proc_w, null, nm_usuario_p);
			end if;
		end if;
		
		select	coalesce(vl_liberado,0),
			coalesce(vl_coparticipacao,0)
		into STRICT	vl_liberado_w,
			vl_coparticipacao_w
		from	pls_conta_proc
		where	nr_sequencia = nr_seq_conta_proc_w;
		
		vl_total_copartic_w	:= coalesce(vl_total_copartic_w,0) + vl_coparticipacao_w;
			
		if (coalesce(ie_desc_copartic_w,'S') = 'S') then
			vl_tot_liquido_proc_w	:= coalesce(vl_tot_liquido_proc_w,0) + (coalesce(vl_liberado_w,0) - coalesce(vl_coparticipacao_w,0));
			
				update	pls_conta_proc
				set	vl_liquido	= coalesce(vl_liberado_w,0) - coalesce(vl_coparticipacao_w,0)		
				where	nr_sequencia	= nr_seq_conta_proc_w;	
		else
			vl_tot_liquido_proc_w	:= coalesce(vl_tot_liquido_proc_w,0) + coalesce(vl_liberado_w,0);
			
				update	pls_conta_proc
				set	vl_liquido	= coalesce(vl_liberado_w,0)	
				where	nr_sequencia	= nr_seq_conta_proc_w;	
		end if;		
		
		end;						
	end loop;
	close C01;		

	open C02;
	loop
	fetch C02 into	
		nr_seq_conta_mat_w,
		nr_seq_regra_acao_reemb_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin	
		if (coalesce(ie_apropriacao_copartic_w,'N') = 'N') and (coalesce(nr_seq_regra_acao_reemb_w::text, '') = '') then
			
			CALL pls_gerar_coparticipacao( null, nr_seq_segurado_w, nr_seq_reembolso_p,
						cd_estabelecimento_p, nm_usuario_p, nr_seq_conta_mat_w,
						nr_seq_plano_w, nr_seq_contrato_w, nr_seq_intercambio_w,
						dt_contratacao_w, qt_idade_w, ie_titularidade_w, 
						null, null, null,
						null);
		elsif (coalesce(ie_apropriacao_copartic_w,'N') = 'S') and (nr_seq_regra_acao_reemb_w IS NOT NULL AND nr_seq_regra_acao_reemb_w::text <> '') then
			
			select	max(ie_acao)
			into STRICT	ie_acao_w
			from	pls_regra_reemb_acao
			where	nr_sequencia	= nr_seq_regra_acao_reemb_w;
			
			if (ie_acao_w = 'RC') then
				CALL pls_apropriacao_pck.pls_gerar_coparticipacao_aprop(null, nr_seq_conta_mat_w, nm_usuario_p);
			else
				CALL pls_gerenciar_reembolso_pck.pls_gerar_coparticipacao_aprop(null, nr_seq_conta_mat_w, nm_usuario_p);
			end if;
		end if;
		
		select	coalesce(vl_liberado,0),	
			coalesce(vl_participacao,0)
		into STRICT	vl_liberado_w,
			vl_coparticipacao_w
		from	pls_conta_mat
		where	nr_sequencia	= nr_seq_conta_mat_w;
		
		vl_total_copartic_w := coalesce(vl_total_copartic_w,0) + vl_coparticipacao_w;
			
		if (coalesce(ie_desc_copartic_w,'S') = 'S') then
			vl_tot_liquido_mat_w	:= coalesce(vl_tot_liquido_mat_w,0) + (coalesce(vl_liberado_w,0) - coalesce(vl_coparticipacao_w,0));
		else
			vl_tot_liquido_mat_w	:= coalesce(vl_tot_liquido_mat_w,0) + coalesce(vl_liberado_w,0);
		end if;
		
		end;						
	end loop;
	close C02;	
	
	vl_tot_liquido_w	:= coalesce(vl_tot_liquido_proc_w,0) + coalesce(vl_tot_liquido_mat_w,0);
	
	select	count(1)
	into STRICT	qt_conta_enviada_ans_w
	from	pls_monitor_tiss_alt_guia a,
		pls_monitor_tiss_alt b
	where	b.nr_sequencia = a.nr_seq_cta_alt
	and	b.nr_seq_conta = nr_seq_reembolso_p;
	
	if (qt_conta_enviada_ans_w > 0) then
		pls_util_pck.ie_executa_monitoramento_w := 'N';
	else
		delete	FROM pls_monitor_tiss_alt
		where	nr_seq_conta = nr_seq_reembolso_p;
	end if;

	update	pls_conta
	set	dt_atualizacao 		= clock_timestamp(),
		nm_usuario 		= nm_usuario_p,
		ie_status 		= 'F',
		vl_total		= vl_tot_liquido_w,
		vl_coparticipacao	= vl_total_copartic_w,
		dt_fechamento_conta	= clock_timestamp()
	where	nr_sequencia		= nr_seq_reembolso_p;
	
	pls_util_pck.ie_executa_monitoramento_w := 'S';

	if (ie_esquema_contabil_w = 'N') then
		CALL ctb_pls_atualizar_reemb(nr_seq_protocolo_w, nm_usuario_p, cd_estabelecimento_p);
	end if;
	
	CALL pls_altera_status_protocolo(nr_seq_protocolo_w, 'C', 'N', cd_estabelecimento_p, nm_usuario_p);
	
	CALL pls_atualiza_status_copartic(nr_seq_reembolso_p, 'FC', null, nm_usuario_p, cd_estabelecimento_p);
	
	CALL pls_gerar_comunic_reemb(2,'O reembolso ' ||nr_seq_reembolso_p|| ' esta fechado.', nr_seq_protocolo_w,
				nm_usuario_p,cd_estabelecimento_p);
				
	CALL pls_gerar_contab_val_adic(	nr_seq_reembolso_p, null, null,
					null,null,null,null, 'C','N', nm_usuario_p);
					
	
	select	coalesce(max(ie_concil_contab), 'N')
	into STRICT	ie_concil_contab_w
	from 	pls_visible_false;
	
	if (ie_concil_contab_w = 'S') then
		begin
		
		select	coalesce(max(ie_forma_contab_reembolso),'C')
		into STRICT	ie_forma_contab_reembolso_w
		from	pls_parametro_contabil
		where	cd_estabelecimento = cd_estabelecimento_p;

		if (ie_forma_contab_reembolso_w <> 'M') then
			nr_seq_atualizacao_w := pls_gerar_atualizacao_contabil(	dt_mes_competencia_w, nm_usuario_p, cd_estabelecimento_p, 23, 'G', qt_movimento_w, nr_seq_atualizacao_w);

			qt_movimento_w := ctb_pls_atualizar_reembolso_in(	null, nr_seq_reembolso_p, null, null, nr_seq_atualizacao_w, nm_usuario_p, cd_estabelecimento_p, qt_movimento_w);			
			
			nr_seq_atualizacao_w := pls_gerar_atualizacao_contabil(	dt_mes_competencia_w, nm_usuario_p, cd_estabelecimento_p, 23, 'A', qt_movimento_w, nr_seq_atualizacao_w);
		end if;
		
		open c_contas;
			loop
			fetch c_contas into	
				vet_contas;
			EXIT WHEN NOT FOUND; /* apply on c_contas */
				begin
				CALL ctb_concil_financeira_pck.ctb_gravar_documento(	cd_estabelecimento_p,
										vet_contas.dt_competencia,
										23,
										null, 
										vet_contas.nr_seq_info, 
										vet_contas.nr_seq_tab_orig,
										vet_contas.nr_seq_tab_compl,
										vet_contas.nr_doc_analitico,
										vet_contas.vl_item,
										vet_contas.nm_tabela,
										vet_contas.nm_atributo,
										nm_usuario_p,
										'P',
										ie_forma_contab_reembolso_w);
				end;
			end loop;
		close c_contas;
	
		end;
	end if;
				
elsif (ie_opcao_p = 'D') then

	select	coalesce(max(ie_concil_contab), 'N')
	into STRICT	ie_concil_contab_w
	from 	pls_visible_false;

	if (ie_concil_contab_w = 'S') then

		select	coalesce(max(ie_forma_contab_reembolso),'C')
		into STRICT	ie_forma_contab_reembolso_w
		from	pls_parametro_contabil
		where	cd_estabelecimento = cd_estabelecimento_p;

		open c_contas_estorno;
		loop
		fetch c_contas_estorno into	
			vet_contas_estorno;
		EXIT WHEN NOT FOUND; /* apply on c_contas_estorno */
			begin
			if (vet_contas_estorno.qt_pendente > 0) then
				delete 	FROM ctb_documento
				where	nr_documento = vet_contas_estorno.nr_seq_tab_orig
				and	nr_seq_doc_compl = vet_contas_estorno.nr_seq_tab_compl
				and	nr_doc_analitico = vet_contas_estorno.nr_doc_analitico
				and 	nm_tabela = vet_contas_estorno.nm_tabela
				and	nm_atributo = vet_contas_estorno.nm_atributo
				and	cd_tipo_lote_contabil = vet_contas_estorno.cd_tipo_lote_contabil
				and	ie_situacao_ctb = 'P'
				and	vl_movimento > 0;
			else
				CALL ctb_concil_financeira_pck.ctb_gravar_documento(	cd_estabelecimento_p,
										trunc(clock_timestamp(), 'dd'),
										23, 
										null, 
										vet_contas_estorno.nr_seq_info, 
										vet_contas_estorno.nr_seq_tab_orig,
										vet_contas_estorno.nr_seq_tab_compl,
										vet_contas_estorno.nr_doc_analitico,
										vet_contas_estorno.vl_item * -1, -- Inverte o valor pois a estorno
										vet_contas_estorno.nm_tabela,
										vet_contas_estorno.nm_atributo,
										nm_usuario_p,
										'P',
										ie_forma_contab_reembolso_w);
			end if;
			end;
		end loop;
		close c_contas_estorno;

		open c_contas_2;
		loop
		fetch c_contas_2 into	
			vet_contas_2;
		EXIT WHEN NOT FOUND; /* apply on c_contas_2 */
			begin
				if (vet_contas_2.qt_pendente > 0) then
					delete 	FROM ctb_documento
					where	nr_documento = vet_contas_2.nr_seq_tab_orig
					and	nr_seq_doc_compl = vet_contas_2.nr_seq_tab_compl
					and	nr_doc_analitico = vet_contas_2.nr_doc_analitico
					and 	nm_tabela = vet_contas_2.nm_tabela
					and	nm_atributo = vet_contas_2.nm_atributo
					and	cd_tipo_lote_contabil = vet_contas_2.cd_tipo_lote_contabil
					and	ie_situacao_ctb = 'P'
					and	vl_movimento > 0;
			else
				CALL ctb_concil_financeira_pck.ctb_gravar_documento(	cd_estabelecimento_p,
										trunc(clock_timestamp(), 'dd'),
										23, 
										null, 
										vet_contas_2.nr_seq_info, 
										vet_contas_2.nr_seq_tab_orig,
										vet_contas_2.nr_seq_tab_compl,
										vet_contas_2.nr_doc_analitico,
										vet_contas_2.vl_item * -1, -- Inverte o valor pois a estorno
										vet_contas_2.nm_tabela,
										vet_contas_2.nm_atributo,
										nm_usuario_p,
										'P',
										ie_forma_contab_reembolso_w);
			end if;
			end;
		end loop;
		close c_contas_2;
	end if;

	select	a.nr_seq_protocolo,
		b.ie_status,
		b.nr_lote_contabil,
		trunc(b.dt_mes_competencia, 'mm'),
		a.ie_origem_conta
	into STRICT	nr_seq_protocolo_w,
		ie_status_w,
		nr_lote_reembolso_w,
		dt_mes_competencia_w,
		ie_origem_conta_w
	from	pls_protocolo_conta	b,
		pls_conta		a
	where	a.nr_sequencia		= nr_seq_reembolso_p
	and	a.nr_seq_protocolo	= b.nr_sequencia;
	
	if (coalesce(nr_lote_reembolso_w,0) <> 0) then

		select 	coalesce(max(ie_status_origem), 'M')
		into STRICT	ie_status_origem_lote_w
		from	lote_contabil
		where	nr_lote_contabil = nr_lote_reembolso_w;

		if (ie_status_origem_lote_w <> 'SO') then
			--A acao nao pode ser completada pois o movimento esta vinculado ao lote contabil #@NR_LOTE_CONTABIL#@ do tipo #@DS_TIPO_LOTE_CONTABIL#@!
			CALL wheb_mensagem_pck.exibir_mensagem_abort(472015, 'NR_LOTE_CONTABIL=' || nr_lote_reembolso_w ||
									';DS_TIPO_LOTE_CONTABIL=' || ctb_obter_tipo_lote_contabil(nr_lote_reembolso_w,'D'));
		end if;
	end if;
	
	select 	max(nr_seq_lote_fat)
	into STRICT	nr_seq_lote_fat_w
	from	pls_conta_pos_estabelecido
	where 	nr_seq_conta = nr_seq_reembolso_p;
	
	--A acao nao pode ser realizada caso algum registro de pos esteja vinculado a um lote de faturamento. 
	if (nr_seq_lote_fat_w IS NOT NULL AND nr_seq_lote_fat_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 736187, 'NR_SEQ_ITEM_REF=' || nr_seq_reembolso_p);			
	end if;
	
	-- se a conta foi de origem de A500, verifica o status do A500.

	-- 	se o status for encerrado, nao permite desfazer.
	if (ie_origem_conta_w = 'A') then
	
		select	max(a.ie_status),
			max(a.nr_sequencia)
		into STRICT	ie_status_a500_w,
			nr_seq_fatura_w
		from	ptu_fatura		a,
			pls_protocolo_conta	b,
			pls_conta		c
		where	a.nr_seq_protocolo	= b.nr_sequencia
		and	b.nr_sequencia		= c.nr_seq_protocolo
		and	c.nr_sequencia		= nr_seq_reembolso_p;
		
		if	(ie_status_a500_w = 'E' AND nr_seq_fatura_w IS NOT NULL AND nr_seq_fatura_w::text <> '') then
		
			-- A fatura A500 #@NR_SEQ_FATURA#@ esta finalizada, impedindo desfazer o fechamento da conta #@NR_SEQ_CONTA#@
			CALL wheb_mensagem_pck.exibir_mensagem_abort( 1051213, 'NR_SEQ_FATURA='||to_char(nr_seq_fatura_w)||';NR_SEQ_CONTA='||to_char(nr_seq_reembolso_p)||';');			
		end if;
		
	end if;
	
	
	if (ie_consist_comp_fechada_w = 'S') then
	
		select	max(dt_fechamento)
		into STRICT	dt_fechamento_w
		from	pls_competencia
		where	dt_mes_competencia = dt_mes_competencia_w;
		
		if (dt_fechamento_w IS NOT NULL AND dt_fechamento_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(obter_desc_expressao_idioma(786797, null, null));
		end if;
	end if;
	
	select	count(1)
	into STRICT	qt_conta_enviada_ans_w
	from	pls_monitor_tiss_alt_guia a,
		pls_monitor_tiss_alt b
	where	b.nr_sequencia = a.nr_seq_cta_alt
	and	b.nr_seq_conta = nr_seq_reembolso_p;
	
	if (qt_conta_enviada_ans_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(690217,null, -20012);
	end if;

	if (ie_status_w in ('3','4','6')) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(208337,null, -20012);
	end if;
	
	select	count(1)
	into STRICT	qt_titulos_gerados_w
	from	pls_protocolo_conta	a,
		titulo_pagar 		b
	where	a.nr_sequencia	= b.nr_seq_reembolso
	and	a.nr_sequencia	= nr_seq_reembolso_p
	and	b.ie_situacao not in ('A','C');
	
	if (qt_titulos_gerados_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(191792);
	end if;
	
	open C03;
	loop
	fetch C03 into	
		nr_titulo_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		CALL pls_cancelar_tit_desdob_reemb(nr_titulo_w, cd_estabelecimento_p, nm_usuario_p);
		CALL cancelar_titulo_pagar(nr_titulo_w, nm_usuario_p, clock_timestamp());
		end;
	end loop;
	close C03;

	update	pls_conta
	set	dt_atualizacao		= clock_timestamp(),
		nm_usuario 		= nm_usuario_p,
		ie_status 		= 'U',
		vl_cobrado		 = NULL,
		vl_total		 = NULL,
		vl_coparticipacao	 = NULL
	where	nr_sequencia		= nr_seq_reembolso_p;
	
	update	pls_conta_proc
	set	ie_status		= 'U',
		vl_coparticipacao	 = NULL,
		vl_liquido		 = NULL			
	where	nr_seq_conta		= nr_seq_reembolso_p;
	
	update	pls_conta_mat
	set	ie_status		= 'U',
		vl_participacao		 = NULL			
	where	nr_seq_conta		= nr_seq_reembolso_p;

	CALL pls_gerenciar_reembolso_pck.pls_reemb_desfazer_aprop(nr_seq_reembolso_p, cd_estabelecimento_p, nm_usuario_p);
	
	CALL pls_deletar_coparticipacao(nr_seq_conta_w,null,'S', 'N', null, null, nm_usuario_p,cd_estabelecimento_p);
	
	delete	
	from	pls_conta_glosa
	where	nr_seq_conta = nr_seq_reembolso_p;
	
	delete	
	from	pls_ocorrencia_benef
	where	nr_seq_conta = nr_seq_reembolso_p;
		
	CALL pls_altera_status_protocolo(nr_seq_protocolo_w, 'L', 'N', cd_estabelecimento_p, nm_usuario_p);
		
end if;

commit;	
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_liberar_reembolso ( nr_seq_reembolso_p bigint, ie_opcao_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

