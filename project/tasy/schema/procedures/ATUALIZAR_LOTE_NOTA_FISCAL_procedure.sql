-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_lote_nota_fiscal ( nr_seq_inspecao_p bigint, nm_usuario_p text, ie_atualiza_cod_barra_nf text) AS $body$
DECLARE




ie_tipo_divergencia_w	inspecao_tipo_divergencia.ie_tipo_divergencia%type;
nr_seq_registro_w	inspecao_rec_contagem.nr_seq_registro%type;
nr_seq_inspecao_w	inspecao_divergencia.nr_seq_inspecao%type;
cd_lote_fabricacao_w	inspecao_rec_contagem.cd_lote_fabricacao%type;
dt_validade_w		inspecao_rec_contagem.dt_validade%type;
nr_seq_item_lote_nf_w	inspecao_rec_contagem.nr_seq_item_lote_nf%type;
cd_material_w		inspecao_rec_contagem.cd_material%type;
nr_seq_nota_fiscal_w	inspecao_rec_contagem.nr_seq_nota_fiscal%type;
nr_seq_item_nf_w	inspecao_rec_contagem.nr_seq_item_nf%type;
qt_material_w		inspecao_rec_contagem.qt_inspecao%type;
ie_indeterminada_w	inspecao_rec_contagem.ie_indeterminada%type;
cd_barra_material_w	inspecao_rec_contagem.cd_barra_material%type;
ds_barras_w		inspecao_rec_contagem.ds_barras%type;
qt_existe_w		integer := 0;
existe_divergencia_w		boolean := false;

C01 CURSOR FOR

	SELECT	substr(obter_desc_tipo_divergencia(max(nr_seq_tipo),'IE'),1,2),
		max(nr_seq_registro),
		max(nr_seq_inspecao),
		cd_material
	from	inspecao_divergencia
	where	substr(obter_desc_tipo_divergencia(nr_seq_tipo,'IE'),1,2) in ('DL','DT')
	and	ie_motivo_aceite = 'A'
	and	nr_seq_inspecao = nr_seq_inspecao_p
	group by cd_material;

C02 CURSOR FOR
	SELECT 	c.nr_seq_nota_fiscal,
		c.nr_seq_item_nf
	from	inspecao_registro a,
		inspecao_recebimento c
	where	a.nr_sequencia = c.nr_seq_registro
	and	a.nr_sequencia = nr_seq_registro_w
	and	c.nr_sequencia = nr_seq_inspecao_p
	and	c.cd_material = cd_material_w;

c03 CURSOR FOR
	SELECT 	b.cd_lote_fabricacao,
		b.dt_validade,
		b.nr_seq_item_lote_nf,
		b.qt_inspecao,
		b.ie_indeterminada,
		b.cd_barra_material,
		b.ds_barras
	from	inspecao_registro a,
		inspecao_rec_contagem b
	where	a.nr_sequencia = b.nr_seq_registro
	and	b.nr_seq_registro = nr_seq_registro_w
	and	b.cd_material = cd_material_w;

c04 CURSOR FOR
    SELECT 	c.nr_seq_nota_fiscal,
		c.nr_seq_item_nf, 
        c.nr_seq_registro,
        c.cd_material
	from	inspecao_recebimento c
	where	c.nr_sequencia = nr_seq_inspecao_p;

  i RECORD;

BEGIN

open C01;
loop
fetch C01 into
	ie_tipo_divergencia_w,
	nr_seq_registro_w,
	nr_seq_inspecao_w,
	cd_material_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	open C02;
	loop
	fetch C02 into
		nr_seq_nota_fiscal_w,
		nr_seq_item_nf_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

        existe_divergencia_w := true;

		delete from nota_fiscal_item_lote
		where nr_seq_nota = nr_seq_nota_fiscal_w
		and nr_item_nf = nr_seq_item_nf_w;

		open C03;
		loop
		fetch C03 into
			cd_lote_fabricacao_w,
			dt_validade_w,
			nr_seq_item_lote_nf_w,
			qt_material_w,
			ie_indeterminada_w,
			cd_barra_material_w,
			ds_barras_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin

			select 	count(*)
			into STRICT	qt_existe_w
			from	inspecao_registro a,
				inspecao_rec_contagem b
			where	a.nr_sequencia = b.nr_seq_registro
			and	b.nr_seq_registro = nr_seq_registro_w
			and	b.cd_material = cd_material_w;

			if (qt_existe_w = 1) then
			
				if	((ie_tipo_divergencia_w = 'DL') or (ie_tipo_divergencia_w = 'DT')) then
	
					update	nota_fiscal_item
					set	cd_lote_fabricacao = cd_lote_fabricacao_w,
						dt_validade = dt_validade_w,
						ie_indeterminado = ie_indeterminada_w,
						cd_barra_material = cd_barra_material_w,
						ds_barras = ds_barras_w,
						dt_atualizacao = clock_timestamp(),
						nm_usuario = nm_usuario_p
					where	nr_sequencia = nr_seq_nota_fiscal_w
					and	nr_item_nf = nr_seq_item_nf_w;
	
				end if;
			
			elsif (qt_existe_w > 1) then
			
				if	((ie_tipo_divergencia_w = 'DL') or (ie_tipo_divergencia_w = 'DT')) then
					
					insert into nota_fiscal_item_lote(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_nota,
						nr_item_nf,
						dt_validade,
						qt_material,
						cd_lote_fabricacao,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_lote_fornec,
						ie_indeterminado,
						cd_barra_material,
						ds_barras)
					values (	nextval('nota_fiscal_item_lote_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_nota_fiscal_w,
						nr_seq_item_nf_w,
						dt_validade_w,
						qt_material_w,
						cd_lote_fabricacao_w,
						clock_timestamp(),
						nm_usuario_p,
						null,
						ie_indeterminada_w,
						cd_barra_material_w,
						ds_barras_w);					

				end if;
	
			end if;

			end;
		end loop;
		close C03;

		end;
	end loop;
	close C02;

	end;
end loop;
close C01;

if (ie_atualiza_cod_barra_nf = 'S' and existe_divergencia_w = false) then

    open C04;
	loop
	fetch C04 into
		nr_seq_nota_fiscal_w,
		nr_seq_item_nf_w,
        nr_seq_registro_w,
        cd_material_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin

		delete from nota_fiscal_item_lote
		where nr_seq_nota = nr_seq_nota_fiscal_w
		and nr_item_nf = nr_seq_item_nf_w;

		open C03;
		loop
		fetch C03 into
			cd_lote_fabricacao_w,
			dt_validade_w,
			nr_seq_item_lote_nf_w,
			qt_material_w,
			ie_indeterminada_w,
			cd_barra_material_w,
			ds_barras_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin

			for i in (SELECT b.nr_sequencia
                                 from	inspecao_registro a,
                                        inspecao_rec_contagem b
                                 where	a.nr_sequencia = b.nr_seq_registro
                                 and	b.nr_seq_registro = nr_seq_registro_w
                                 and	b.cd_material = cd_material_w)
                        loop
                            qt_existe_w := qt_existe_w + 1;
                        end loop;

			if (qt_existe_w = 1) then
	
					update	nota_fiscal_item
					set	cd_lote_fabricacao = cd_lote_fabricacao_w,
						dt_validade = dt_validade_w,
						ie_indeterminado = ie_indeterminada_w,
						cd_barra_material = cd_barra_material_w,
						ds_barras = ds_barras_w,
						dt_atualizacao = clock_timestamp(),
						nm_usuario = nm_usuario_p
					where	nr_sequencia = nr_seq_nota_fiscal_w
					and	nr_item_nf = nr_seq_item_nf_w;
			
			elsif (qt_existe_w > 1) then
					
					insert into nota_fiscal_item_lote(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_nota,
						nr_item_nf,
						dt_validade,
						qt_material,
						cd_lote_fabricacao,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_lote_fornec,
						ie_indeterminado,
						cd_barra_material,
						ds_barras)
					values (	nextval('nota_fiscal_item_lote_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_nota_fiscal_w,
						nr_seq_item_nf_w,
						dt_validade_w,
						qt_material_w,
						cd_lote_fabricacao_w,
						clock_timestamp(),
						nm_usuario_p,
						null,
						ie_indeterminada_w,
						cd_barra_material_w,
						ds_barras_w);
	
			end if;

			end;
		end loop;
		close C03;

		end;
	end loop;
	close C04;
end if;

commit;

end;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_lote_nota_fiscal ( nr_seq_inspecao_p bigint, nm_usuario_p text, ie_atualiza_cod_barra_nf text) FROM PUBLIC;

