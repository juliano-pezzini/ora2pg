-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE devolver_comp_kit_estoque ( nr_seq_kit_estoque_p bigint, nr_atendimento_p bigint, nr_seq_atepacu_p bigint, ie_local_estoque_p text, nm_usuario_p text, cd_local_estoque_p bigint, cd_material_p bigint, qt_material_p bigint, nr_seq_lote_fornec_p bigint, ds_retorno_p INOUT text) AS $body$
DECLARE



nr_sequencia_w			bigint;
cd_local_estoque_w		smallint;
cd_material_w			integer;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
qt_material_w			double precision;
cd_unidade_medida_w		varchar(30);
ie_tipo_material_w			varchar(3);
dt_entrada_unidade_w		timestamp;
ie_via_aplicacao_w			varchar(5);
cd_setor_atendimento_w		integer;
cd_perfil_w			bigint;
ds_observacao_w			varchar(2000);
nr_doc_convenio_w		varchar(20);
ie_tipo_guia_w			varchar(2);
cd_senha_w			varchar(20);
nr_seq_lote_fornec_w		bigint;
cd_kit_material_w			integer;
cd_local_estoque_ww		smallint;
ds_erro_w			varchar(255) := null;
ie_local_estoque_w			varchar(255);
cd_setor_usuario_w			integer;
qt_existe_w			bigint;
dt_atendimento_w			timestamp;
dt_conta_w			timestamp;
nr_prescricao_w			bigint;
cd_cgc_fornecedor_w		material_atend_paciente.cd_cgc_fornecedor%type;
nr_seq_item_kit_w			kit_estoque_comp.nr_seq_item_kit%type;


BEGIN
cd_perfil_w	:= obter_perfil_ativo;

ds_observacao_w:= WHEB_MENSAGEM_PCK.get_texto(306004,'CD_PERFIL_W='|| CD_PERFIL_W ||';NR_SEQ_KIT_ESTOQUE_P='|| NR_SEQ_KIT_ESTOQUE_P);
		/*Perfil: #@CD_PERFIL_W#@ Kit de estoque: #@NR_SEQ_KIT_ESTOQUE_P#@*/

ie_local_estoque_w	:= elimina_acentuacao(upper(ie_local_estoque_p));
cd_setor_usuario_w	:= wheb_usuario_pck.get_cd_setor_atendimento;

if (coalesce(cd_setor_usuario_w,0)	<= 0) then
	cd_setor_usuario_w	:= null;
end if;

select 	dt_entrada_unidade,
	cd_setor_atendimento,
	obter_convenio_atendimento(nr_atendimento)
into STRICT	dt_entrada_unidade_w,
	cd_setor_atendimento_w,
	cd_convenio_w
from 	atend_paciente_unidade
where 	nr_atendimento = nr_atendimento_p
and 	nr_seq_interno = nr_seq_atepacu_p;

select	max(cd_categoria)
into STRICT	cd_categoria_w
from 	Atend_categoria_convenio a
where 	a.nr_atendimento	= nr_atendimento_p
and 	a.cd_convenio 		= cd_convenio_w
and 	a.dt_inicio_vigencia	= (	SELECT 	max(dt_inicio_vigencia)
					from 	Atend_categoria_convenio b
					where 	nr_atendimento = nr_atendimento_p
					and 	b.cd_convenio = cd_convenio_w);

begin
select 	nr_doc_convenio,
	ie_tipo_guia,
	cd_senha
into STRICT	nr_doc_convenio_w,
	ie_tipo_guia_w,
	cd_senha_w
from 	atend_categoria_convenio
where 	nr_atendimento = nr_atendimento_p
and 	dt_inicio_vigencia = 	(SELECT max(dt_inicio_vigencia)
				 from 	atend_categoria_convenio b
			         where 	nr_atendimento = nr_atendimento_p);
exception
when others then
	nr_doc_convenio_w	:= '';
	cd_senha_w		:= '';
	ie_tipo_guia_w		:= '';
end;

cd_local_estoque_w := cd_local_estoque_p;

if (coalesce(nr_seq_lote_fornec_p,0) > 0) then
	nr_seq_lote_fornec_w	:= nr_seq_lote_fornec_p;
end if;

if (coalesce(nr_seq_lote_fornec_w,0) > 0) and (obter_se_mat_consignado(cd_material_p) = '1')then
	select	cd_cgc_fornec
	into STRICT	cd_cgc_fornecedor_w
	from	material_lote_fornec
	where	nr_sequencia = nr_seq_lote_fornec_w;
end if;

select	max(dt_atendimento),
	max(dt_conta)
into STRICT	dt_atendimento_w,
	dt_conta_w
from	material_atend_paciente
where	nr_seq_kit_estoque = nr_seq_kit_estoque_p
and nr_atendimento = nr_atendimento_p;


begin
select	coalesce(max(nr_prescricao),0)
into STRICT	nr_prescricao_w
from	material_atend_paciente
where	nr_seq_kit_estoque = nr_seq_kit_estoque_p
and	nr_atendimento = nr_atendimento_p
having	sum(qt_material) > 0;
exception
	when others then
		nr_prescricao_w := 0;
end;

select	max(d.cd_unidade_medida_consumo),
	max(d.ie_via_aplicacao),
	max(d.ie_tipo_material),
	max(b.cd_kit_material),
	max(nr_seq_item_kit)
into STRICT	cd_unidade_medida_w,
	ie_via_aplicacao_w,		
	ie_tipo_material_w,
	cd_kit_material_w,
	nr_seq_item_kit_w
from	material d,
	kit_estoque b,
	kit_estoque_comp a
where 	b.nr_sequencia = a.nr_seq_kit_estoque
and 	a.cd_material = d.cd_material
and 	a.nr_seq_kit_estoque = nr_seq_kit_estoque_p
and	a.cd_material = cd_material_p;

select	nextval('material_atend_paciente_seq')
into STRICT	nr_sequencia_w
;

cd_local_estoque_ww := cd_local_estoque_w;

if (obter_se_matkit_baixa_estoque(cd_material_w, cd_kit_material_w, nr_seq_item_kit_w) = 'N') then
	cd_local_estoque_ww := null;
end if;	

begin
insert into material_atend_paciente(
	nr_sequencia,
	nr_atendimento,
	dt_entrada_unidade,
	cd_material,
	cd_material_exec,
	dt_conta,
	dt_atendimento,
	qt_material,
	qt_executada,
	dt_atualizacao,
	nm_usuario,
	cd_unidade_medida,
	cd_convenio,
	cd_categoria,
	cd_acao,
	cd_local_estoque,
	cd_setor_atendimento,
	ie_valor_informado,
	nm_usuario_original,
	cd_setor_receita,
	cd_situacao_glosa,
	nr_seq_atepacu,
	ie_auditoria,
	ie_via_aplicacao,
	ds_observacao,
	ie_guia_informada,
	ie_tipo_guia,
	nr_doc_convenio,
	nr_seq_lote_fornec,
	cd_senha,
	nr_seq_kit_estoque,
	nr_seq_cor_exec,
	nr_prescricao,
	cd_cgc_fornecedor)
values (
	nr_sequencia_w,
	nr_atendimento_p,
	dt_entrada_unidade_w,
	cd_material_p,
	cd_material_p,
	dt_conta_w,
	dt_atendimento_w,
	qt_material_p * (-1),
	qt_material_p * (-1),
	clock_timestamp(),
	nm_usuario_p,
	cd_unidade_medida_w,
	cd_convenio_w,
	cd_categoria_w,
	'1',
	cd_local_estoque_ww,
	cd_setor_atendimento_w,
	'N',
	nm_usuario_p,
	cd_setor_atendimento_w,
	0,
	nr_seq_atepacu_p,
	'N',
	ie_via_aplicacao_w,
	ds_observacao_w,
	'N',
	ie_tipo_guia_w,
	nr_doc_convenio_w,
	nr_seq_lote_fornec_w,
	cd_senha_w,
	nr_seq_kit_estoque_p,
	100,
	CASE WHEN nr_prescricao_w=0 THEN null  ELSE nr_prescricao_w END ,
	cd_cgc_fornecedor_w);
exception
	when 	others then
	begin
	ds_erro_w  := substr(sqlerrm,1,255);
	nr_sequencia_w := 0;
	end;
end;

if (nr_sequencia_w > 0) then
	begin
	update	material_atend_paciente /*apos inserir deve atualizar o campo 'Kit' para nao ocorrer problemas nas rotinas da conta*/
	set	cd_kit_material		= cd_kit_material_w
	where	nr_sequencia		= nr_sequencia_w;
	
	CALL atualiza_preco_material(nr_sequencia_w, nm_usuario_p);
	end;
end if;

CALL gerar_autor_regra(nr_atendimento_p, nr_sequencia_w, null, null, null, null, 'EP', nm_usuario_p, null, null, null, null, null, null,'','','');

/*Estorna o lancamento dos itens, caso o item nao tenha estoque, por exemplo*/

if (coalesce(ds_erro_w, 'X') <> 'X') then
	begin
	ds_retorno_p	:= ds_erro_w;
	rollback;
	end;
else
	begin
	ds_retorno_p := null;
	commit;
	end;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE devolver_comp_kit_estoque ( nr_seq_kit_estoque_p bigint, nr_atendimento_p bigint, nr_seq_atepacu_p bigint, ie_local_estoque_p text, nm_usuario_p text, cd_local_estoque_p bigint, cd_material_p bigint, qt_material_p bigint, nr_seq_lote_fornec_p bigint, ds_retorno_p INOUT text) FROM PUBLIC;

