-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicar_prescr_enf_inter ( nr_sequencia_p bigint, nr_atendimento_p bigint, cd_prescritor_p text, dt_sae_p timestamp, ie_agrupa_dia_p text, nm_usuario_p text) AS $body$
DECLARE

				
nr_sequencia_w			bigint;
nr_sequencia_ww			bigint;
nr_seq_w			bigint;
nr_seq_proc_w			bigint;
qt_pontuacao_w			bigint;
ds_origem_w			varchar(1);
nr_seq_apres_w			bigint;
cd_intervalo_w			varchar(7);
ds_horarios_w			varchar(2000);
ds_horarios_ww		varchar(2000);
qt_intervencao_w		integer;
hr_prim_horario_w		varchar(5);
nr_seq_topografia_w		bigint;
ie_se_necessario_w		varchar(1);
ds_observacao_w			varchar(2000);
ie_suspenso_w			varchar(1);
ie_adep_w			varchar(1);
nr_prescricao_ant_w		bigint;
nr_prescricao_w			bigint;
nr_seq_interv_ant_w		bigint;
nr_seq_inter_w			bigint;
cd_pessoa_fisica_w		varchar(10);
ie_lado_w				varchar(1);
nr_sae_origem_w			varchar(255);
Nr_seq_material_w		bigint;
ie_situacao_w			varchar(1);
ie_estender_w			varchar(10);
dt_primeiro_horario_w	timestamp;
cd_setor_atendimento_w	bigint;
qt_horas_validade_w		bigint;
dt_sae_w			timestamp;
vl_prim_hor_w			varchar(15);
ie_hr_interven_sae_w		varchar(1);
ie_hr_interven_sae_origem_w	varchar(1);
hr_prim_horario_ww		timestamp;
nr_intervalo_w			real;
ds_prim_horario_w		varchar(255);
ie_se_necessario_ww		varchar(1);
ie_faose_w			varchar(15);
IE_PROFISSIONAL_w		varchar(15);
ie_duplicar_w			varchar(3);
ie_horarios_sae_w		varchar(3);
classificacao_setor_w		varchar(15);
cd_setor_atend_atual_w		bigint;
ds_final_turno_w		varchar(255) := '';
dt_final_turno_w		timestamp;
nr_seq_prot_proc_w		bigint;

C00 CURSOR FOR
	
	SELECT	distinct
		nr_sequencia,
		nr_prescricao
	from	pe_prescricao
	where	nr_sequencia	<> nr_sequencia_w
	and	coalesce(dt_suspensao::text, '') = ''
	and	coalesce(ie_situacao,'A') = 'A'
	and	ie_agrupa_dia_p = 'N'
	and 	nr_sequencia = nr_sequencia_p
	
union

	SELECT	distinct
		nr_sequencia,
		nr_prescricao
	from	pe_prescricao
	where	nr_sequencia	<> nr_sequencia_w
	and	coalesce(dt_suspensao::text, '') = ''
	and	coalesce(ie_situacao,'A') = 'A'
	and	ie_agrupa_dia_p = 'S'
	and 	cd_pessoa_fisica = cd_pessoa_fisica_w 
	and 	dt_prescricao between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_sae_w) and ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(dt_sae_w)
	order by nr_prescricao,nr_sequencia;

C02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_proc,
		qt_pontuacao,
		ds_origem,
		nr_seq_apres,
		cd_intervalo,
		ds_horarios,
		qt_intervencao,
		hr_prim_horario,
		nr_seq_topografia,
		ie_se_necessario,
		ds_observacao,
		ie_suspenso,
		ie_adep,
		ie_lado,
		ie_faose,
		ie_profissional,
		nr_seq_prot_proc
	from	pe_prescr_proc a
	where	nr_seq_prescr	= nr_sequencia_ww
	and	coalesce(dt_suspensao::text, '') = ''
	and	not exists (	SELECT	1
					from	pe_prescr_proc	x
					where	x.nr_seq_prescr		= nr_sequencia_w
					and	x.nr_seq_proc		= a.nr_seq_proc);


BEGIN
vl_prim_hor_w := Obter_Param_Usuario(281, 325, obter_perfil_ativo, nm_usuario_p, coalesce(obter_estab_atend(nr_atendimento_p),0), vl_prim_hor_w);
ie_hr_interven_sae_w := Obter_Param_Usuario(281, 472, obter_perfil_ativo, nm_usuario_p, coalesce(obter_estab_atend(nr_atendimento_p),0), ie_hr_interven_sae_w);
ie_hr_interven_sae_origem_w := Obter_Param_Usuario(281, 940, obter_perfil_ativo, nm_usuario_p, coalesce(obter_estab_atend(nr_atendimento_p),0), ie_hr_interven_sae_origem_w);
ie_duplicar_w := Obter_Param_Usuario(281, 1026, obter_perfil_ativo, nm_usuario_p, coalesce(obter_estab_atend(nr_atendimento_p),0), ie_duplicar_w);
ie_horarios_sae_w := Obter_Param_Usuario(281, 1415, obter_perfil_ativo, nm_usuario_p, coalesce(obter_estab_atend(nr_atendimento_p),0), ie_horarios_sae_w);

select	dt_prescricao
into STRICT	dt_sae_w
from	pe_prescricao
where	nr_sequencia = nr_sequencia_p;


select	max(cd_pessoa_fisica),
		max(cd_setor_atendimento)
into STRICT	cd_pessoa_fisica_w,
		cd_setor_atendimento_w
from	pe_prescricao
where	nr_sequencia	= nr_sequencia_p;

cd_setor_atend_atual_w	:= obter_setor_atendimento(nr_atendimento_p);

if (ie_duplicar_w = 'C') and (cd_setor_atend_atual_w IS NOT NULL AND cd_setor_atend_atual_w::text <> '')then
		
	classificacao_setor_w := obter_dados_setor(cd_setor_atend_atual_w, 'CL');
	
	if ( obter_dados_setor(cd_setor_atendimento_w, 'CL') <> classificacao_setor_w ) then			
		--obter_texto_tasy(192766, wheb_usuario_pck.get_nr_seq_idioma),null);
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(192766);
	end if;
end if;	

CALL consiste_regra_sae(nr_atendimento_p, cd_setor_atendimento_w);

select	nextval('pe_prescricao_seq')
into STRICT	nr_sequencia_w
;

dt_primeiro_horario_w	:= OBTER_PRIM_HOR_SAE(dt_sae_p,cd_setor_atendimento_w,nm_usuario_p);

if (dt_primeiro_horario_w IS NOT NULL AND dt_primeiro_horario_w::text <> '') then
	ie_estender_w := Obter_Param_Usuario(281, 775, obter_perfil_ativo, nm_usuario_p, coalesce(obter_estab_atend(nr_atendimento_p),0), ie_estender_w);
	qt_horas_validade_w	:= obter_horas_validade_SAE(dt_primeiro_horario_w,nr_atendimento_p,'A',ie_estender_w,dt_sae_p,null);
end if;

if (vl_prim_hor_w = '4') then
	ds_final_turno_w := obter_data_equipe_leito('VA', null, ds_final_turno_w);
	if (ds_final_turno_w IS NOT NULL AND ds_final_turno_w::text <> '') then
		dt_final_turno_w := to_Date(ds_final_turno_w,'dd/mm/yyyy hh24:mi:ss');
	end if;
end if;

insert into pe_prescricao(
	nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	dt_prescricao,
	cd_prescritor,
	nr_atendimento,
	cd_pessoa_fisica,
	dt_liberacao,
	IE_RN,
	QT_HORAS_VALIDADE,
	dt_primeiro_horario,
	dt_validade_prescr,
	ds_observacao,
	nr_recem_nato,
	ie_tipo,
	ie_nivel_compl)
SELECT	nr_sequencia_w,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	dt_sae_p,
	cd_prescritor_p,
	coalesce(nr_atendimento_p,nr_atendimento),
	coalesce(obter_pessoa_atendimento(coalesce(nr_atendimento_p,nr_atendimento),'C'),cd_pessoa_fisica),	
	null,
	coalesce(IE_RN,'N'),
	coalesce(qt_horas_validade_w,QT_HORAS_VALIDADE),
	dt_primeiro_horario_w,
	dt_final_turno_w,
	ds_observacao,
	nr_recem_nato,
	coalesce(ie_tipo,'SAE'),
	ie_nivel_compl
from	pe_prescricao
where	nr_sequencia	= nr_sequencia_p
and	coalesce(ie_situacao,'A') = 'A';

select	coalesce(max(nr_sequencia),0)
into STRICT	nr_sequencia_w
from	pe_prescricao
where	nr_sequencia	= nr_sequencia_w;

if (nr_sequencia_w > 0) then

	open C00;
	loop
	fetch C00 into	
		nr_sequencia_ww,
		nr_prescricao_ant_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */

		if (coalesce(nr_sae_origem_w::text, '') = '') then
			nr_sae_origem_w	:= nr_sequencia_ww;
		else
			nr_sae_origem_w	:= nr_sae_origem_w ||','||nr_sequencia_ww;
		end if;

		if (nr_prescricao_ant_w > 0) and (coalesce(nr_prescricao_w,0)	= 0)then
			CALL gerar_prescricao_sae(nr_sequencia_w,nm_usuario_p);
		end if;

		select	coalesce(max(nr_prescricao),0)
		into STRICT	nr_prescricao_w
		from	pe_prescricao
		where	nr_sequencia	= nr_sequencia_w
		and	coalesce(ie_situacao,'A') = 'A';

		begin
		open C02;
		loop
		fetch C02 into	
			nr_seq_interv_ant_w,
			nr_seq_proc_w,
			qt_pontuacao_w,
			ds_origem_w,
			nr_seq_apres_w,
			cd_intervalo_w,
			ds_horarios_w,
			qt_intervencao_w,
			hr_prim_horario_w,
			nr_seq_topografia_w,
			ie_se_necessario_w,
			ds_observacao_w,
			ie_suspenso_w,
			ie_adep_w,
			ie_lado_w,
			ie_faose_w,
			ie_profissional_w,
			nr_seq_prot_proc_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			
			select 	ie_situacao,
					ds_horario_padrao
			into STRICT	ie_situacao_w,
					ds_horarios_ww
			from	pe_procedimento
			where	nr_sequencia = nr_seq_proc_w;
			
			if (ie_situacao_w <> 'I') then
				begin
				
				select	nextval('pe_prescr_proc_seq')
				into STRICT	nr_seq_inter_w
				;
				/*Ajuste realizado OS 286198, tratado igual procedure duplicar_prescricao_enfemagem*/

				
				if (ie_hr_interven_sae_origem_w	= 'S') then
					hr_prim_horario_ww	:= to_date(hr_prim_horario_w,'hh24:mi');
				else
				
					If (vl_prim_hor_w = '3') Then
							hr_prim_horario_ww := dt_sae_p;
						Else
							if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
								hr_prim_horario_ww := to_date(hr_prim_horario_w,'hh24:mi');
							else
								if (ie_hr_interven_sae_w = 'S') then
									hr_prim_horario_ww := dt_sae_p;
								else
									hr_prim_horario_ww := null;
								end if;
							end if;	
							
							if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') or (ie_hr_interven_sae_w = 'S') then
								if (vl_prim_hor_w = '1') and (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
                  							hr_prim_horario_ww := establishment_timezone_utils.dateattime(dt_sae_p, Obter_primeiro_horario_sae(coalesce(cd_intervalo_w,'00:00'), nr_sequencia_w));
								elsif (vl_prim_hor_w = '2') or (vl_prim_hor_w = '4')then
									hr_prim_horario_ww := trunc(dt_sae_p + (1/24),'hh24');
								end if;
							end if;
						End if;
						
				end if;
				if (hr_prim_horario_ww IS NOT NULL AND hr_prim_horario_ww::text <> '') and (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
					SELECT * FROM calcular_horario_intervencao(cd_intervalo_w, hr_prim_horario_ww, coalesce(qt_horas_validade_w,24), nr_intervalo_w, ds_horarios_w, ds_prim_horario_w, ie_se_necessario_ww, nr_sequencia_w) INTO STRICT nr_intervalo_w, ds_horarios_w, ds_prim_horario_w, ie_se_necessario_ww;
				end if;
				
				if (ie_horarios_sae_w = 'S') and (ds_horarios_ww IS NOT NULL AND ds_horarios_ww::text <> '') then
					ds_horarios_w	:= ds_horarios_ww;
				end if;
				
				if (obter_se_copia_hora_SAE(nr_sequencia_ww,nr_seq_interv_ant_w) = 'N') then
					ds_horarios_w := null;
				end if;
				
				insert into pe_prescr_proc(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_proc,
					nr_seq_prescr,
					qt_pontuacao,
					ds_origem,
					nr_seq_apres,
					cd_intervalo,
					ds_horarios,
					qt_intervencao,
					hr_prim_horario,
					nr_seq_topografia,
					ie_se_necessario,
					ds_observacao,
					ie_suspenso,
					ie_adep,
					ie_lado,
					ie_faose,
					ie_profissional,
					nr_seq_prot_proc)
				values (	nr_seq_inter_w,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_proc_w,
					nr_sequencia_w,
					qt_pontuacao_w,
					ds_origem_w,
					nr_seq_apres_w,
					cd_intervalo_w,
					ds_horarios_w,
					qt_intervencao_w,
					to_char(hr_prim_horario_ww,'hh24:mi'),
					nr_seq_topografia_w,
					ie_se_necessario_w,
					ds_observacao_w,
					ie_suspenso_w,
					ie_adep_w,
					ie_lado_w,
					ie_faose_w,
					ie_profissional_w,
					nr_seq_prot_proc_w);
					
				insert into pe_prescr_proc_atividade(	nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_seq_prescr_proc,
									nr_seq_atividade)
				SELECT	nextval('pe_prescr_proc_atividade_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_inter_w,
					nr_seq_atividade
				from	pe_prescr_proc_atividade
				where	NR_SEQ_PRESCR_PROC	= nr_seq_interv_ant_w;
				
				if (nr_prescricao_w > 0) then
					begin
					Nr_seq_material_w	:= 0;
					if (ie_agrupa_dia_p	= 'S') then
						select 	coalesce(max(nr_sequencia),0) + 1
						into STRICT	Nr_seq_material_w
						from	prescr_material
						where	nr_prescricao = nr_prescricao_w;
					end if;
					
					insert into prescr_material(
						nr_prescricao,
						nr_sequencia,
						ie_origem_inf,
						cd_material,
						cd_unidade_medida,
						qt_dose,
						qt_unitaria,
						qt_material,
						dt_atualizacao,
						nm_usuario,
						ie_via_aplicacao,
						cd_motivo_baixa,
						ie_utiliza_kit,
						cd_unidade_medida_dose,
						ie_urgencia,
						nr_ocorrencia,
						qt_total_dispensar,
						ie_medicacao_paciente,
						ie_agrupador,
						ie_suspenso,
						ie_se_necessario,
						ie_status_cirurgia,
						ie_bomba_infusao,
						ie_aplic_bolus,
						ie_aplic_lenta,
						ie_acm,
						qt_baixa_especial,
						ie_erro,
						ie_cultura_cih,
						ie_antibiograma,
						ie_uso_antimicrobiano,
						ie_recons_diluente_fixo,
						ie_sem_aprazamento,
						ie_cobra_paciente,
						ie_dose_espec_agora,
						ie_tipo_medic_hd,
						nr_seq_pe_proc,
						ie_intervalo_dif,
						ds_horarios,
						cd_intervalo)
					SELECT	nr_prescricao_w,
						nr_sequencia + Nr_seq_material_w,
						ie_origem_inf,
						cd_material,
						cd_unidade_medida,
						qt_dose,
						qt_unitaria,
						qt_material,
						clock_timestamp(),
						nm_usuario_p,
						ie_via_aplicacao,
						0,
						ie_utiliza_kit,
						cd_unidade_medida_dose,
						ie_urgencia,
						nr_ocorrencia,
						qt_total_dispensar,
						ie_medicacao_paciente,
						ie_agrupador,
						ie_suspenso,
						ie_se_necessario,
						ie_status_cirurgia,
						ie_bomba_infusao,
						ie_aplic_bolus,
						ie_aplic_lenta,
						ie_acm,
						qt_baixa_especial,
						ie_erro,
						ie_cultura_cih,
						ie_antibiograma,
						ie_uso_antimicrobiano,
						ie_recons_diluente_fixo,
						ie_sem_aprazamento,
						ie_cobra_paciente,
						ie_dose_espec_agora,
						ie_tipo_medic_hd,
						nr_seq_inter_w,
						ie_intervalo_dif,
						ds_horarios_w,
						cd_intervalo_w
					from	prescr_material a
					where	nr_prescricao	= nr_prescricao_ant_w
					and	nr_seq_pe_proc	= nr_seq_interv_ant_w
					and	coalesce(a.nr_seq_kit::text, '') = ''
					and	coalesce(a.IE_SUSPENSO,'N')	= 'N'
						and	not exists (	SELECT	1
										from	prescr_material	x
										where	x.nr_prescricao		= nr_prescricao_w
										and	x.cd_material		= a.cd_material
										and	x.nr_seq_pe_proc	= nr_seq_inter_w);
					end;
				end if;
				end;
			end if;
			end;
		end loop;
		close C02;
		end;
	end loop;
	close C00;

	if (nr_sae_origem_w IS NOT NULL AND nr_sae_origem_w::text <> '') then
		update	pe_prescricao
		set	nr_sae_origem	= nr_sae_origem_w
		where	nr_sequencia	= nr_sequencia_w;
			
	end if;

	commit;
else

-- O Registro de SAE esta inativo e por isso nao pode ser copiado
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(264627);
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_prescr_enf_inter ( nr_sequencia_p bigint, nr_atendimento_p bigint, cd_prescritor_p text, dt_sae_p timestamp, ie_agrupa_dia_p text, nm_usuario_p text) FROM PUBLIC;

