-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_conta_aceitar_valor ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, ie_opcao_p text, ie_tipo_valor_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_origem_p text, nm_usuario_p usuario.nm_usuario%type, nr_seq_analise_p bigint, nr_seq_grupo_atual_p bigint, ds_observacao_p text default null) AS $body$
DECLARE


/*	
ie_tipo_valor_p {
	A - Apresentado
	P - Processado
	M - Melhor valor
}
ie_origem_p {
	C - Conta
	A - Analise
}
*/
vl_unitario_imp_w		double precision;
vl_unitario_w			pls_conta_proc.vl_unitario%type;
vl_unit_lib_w			pls_conta_proc.vl_unitario%type;
vl_procedimento_imp_w		double precision;
qt_procedimento_imp_w	pls_conta_proc.qt_procedimento%type;
vl_material_imp_w		double precision;
vl_liberado_w			double precision;
vl_processado_w			double precision;
vl_total_procedimento_w		double precision;
vl_prestador_w			double precision;
qt_material_imp_w		pls_conta_mat.qt_material_imp%type;
qt_liberada_w			pls_conta_proc.qt_procedimento_imp%type;
qt_processada_w			pls_conta_proc.qt_procedimento%type;
ie_tipo_despesa_w		varchar(1);
nr_seq_conta_proc_w		pls_conta_proc.nr_sequencia%type;
nr_seq_conta_mat_w		pls_conta_mat.nr_sequencia%type;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
nr_seq_protocolo_w		pls_protocolo_conta.nr_sequencia%type;
vl_glosa_w			double precision;
vl_saldo_w			double precision;
ie_tipo_conta_w			varchar(10);
nr_seq_fatura_w			bigint;
ie_tipo_protocolo_w		varchar(3);
nr_seq_proc_partic_w		double precision;
vl_calculado_partic_w		double precision;
vl_liberado_partic_w		double precision;
vl_pag_medico_conta_w		double precision;
vl_unit_lib_partic_w		double precision;
ie_gerar_analise_audit_w	varchar(1)	:= 'N';
ie_analise_cm_nova_w		varchar(3)	:= 'N';
nr_seq_conta_glosa_w		bigint;
nr_seq_ocorrencia_benef_w	bigint;
vl_lib_hi_w			double precision;
vl_procedimento_ptu_imp_w	double precision;
vl_lib_material_w 		double precision;
vl_lib_co_w 			double precision;
vl_lib_taxa_hi_w 		double precision;
vl_lib_taxa_mat_w 		double precision;
vl_lib_taxa_co_w 		double precision;
vl_material_ptu_imp_w		double precision;
vl_co_ptu_imp_w			double precision;
vl_taxa_servico_imp_w		double precision;
vl_taxa_material_imp_w		double precision;
vl_taxa_co_imp_w		double precision;
ie_tipo_liberacao_w		varchar(1);
qt_fluxo_w			integer;
cd_tiss_motivo_glosa_w		varchar(10);
ie_status_w			varchar(1);
ie_situacao_w			varchar(1);
nr_seq_fluxo_w			bigint;
vl_calc_hi_util_w		double precision;
vl_calc_co_util_w		double precision;
vl_calc_mat_util_w		double precision;
vl_taxa_servico_w		double precision;
vl_taxa_material_w		double precision;
vl_taxa_co_w			double precision;
ie_origem_acao_w		varchar(2);
ie_altera_w			varchar(1) := 'N';
dados_intercambio_w		pls_cta_alt_valor_pck.dados_vl_tx_libe;
tx_intercambio_w		pls_conta_proc.tx_intercambio%type;
tx_intercambio_imp_w		pls_conta_proc.tx_intercambio_imp%type;

c01 CURSOR FOR
	SELECT	nr_sequencia,
		qt_procedimento_imp,
		vl_unitario_imp,
		vl_procedimento_imp,
		coalesce(vl_total_procedimento,0),
		coalesce(vl_prestador,0),
		coalesce(vl_procedimento,0),
		coalesce(qt_procedimento,0),
		coalesce(vl_unitario,0),
		ie_tipo_despesa,
		coalesce(vl_pag_medico_conta,0)
	from	pls_conta_proc
	where	nr_seq_conta		= nr_seq_conta_w
	and	((ie_status		= 'P') or (ie_origem_p		= 'A'))
	and	ie_tipo_despesa		= '1'
	and	coalesce(ie_glosa,'N') 	<> 'S'
	and	coalesce(ie_opcao_p,'N') = 'P'
	and	((ie_status <> 'D') or (coalesce(ie_status::text, '') = ''))
	
union

	SELECT	nr_sequencia,
		qt_procedimento_imp,
		vl_unitario_imp,
		vl_procedimento_imp,
		coalesce(vl_total_procedimento,0),
		coalesce(vl_prestador,0),
		coalesce(vl_procedimento,0),
		coalesce(qt_procedimento,0),
		coalesce(vl_unitario,0),
		ie_tipo_despesa,
		coalesce(vl_pag_medico_conta,0)
	from	pls_conta_proc
	where	nr_seq_conta		= nr_seq_conta_w
	and	((ie_status		= 'P') or (ie_origem_p		= 'A'))
	and	ie_tipo_despesa		= '2'
	and	coalesce(ie_glosa,'N')	<> 'S'
	and	coalesce(ie_opcao_p,'N')	= 'T'
	and	((ie_status <> 'D') or (coalesce(ie_status::text, '') = ''))
	
union

	select	nr_sequencia,
		qt_procedimento_imp,
		vl_unitario_imp,
		vl_procedimento_imp,
		coalesce(vl_total_procedimento,0),
		coalesce(vl_prestador,0),
		coalesce(vl_procedimento,0),
		coalesce(qt_procedimento,0),
		coalesce(vl_unitario,0),
		ie_tipo_despesa,
		coalesce(vl_pag_medico_conta,0)
	from	pls_conta_proc
	where	nr_seq_conta		= nr_seq_conta_w
	and	((ie_status		= 'P') or (ie_origem_p		= 'A'))
	and	ie_tipo_despesa		= '3'
	and	coalesce(ie_glosa,'N')	<> 'S'
	and	coalesce(ie_opcao_p,'N')	= 'D'
	and	((ie_status <> 'D') or (coalesce(ie_status::text, '') = ''))
	
union

	select	nr_sequencia,
		qt_procedimento_imp,
		vl_unitario_imp,
		vl_procedimento_imp,
		coalesce(vl_total_procedimento,0),
		coalesce(vl_prestador,0),
		coalesce(vl_procedimento,0),
		coalesce(qt_procedimento,0),
		coalesce(vl_unitario,0),
		ie_tipo_despesa,
		coalesce(vl_pag_medico_conta,0)
	from	pls_conta_proc
	where	nr_seq_conta		= nr_seq_conta_w
	and	((ie_status		= 'P') or (ie_origem_p		= 'A'))
	and	ie_tipo_despesa		= '4'
	and	coalesce(ie_glosa,'N')	<> 'S'
	and	coalesce(ie_opcao_p,'N')	= 'PCT'
	and	((ie_status <> 'D') or (coalesce(ie_status::text, '') = ''));

c02 CURSOR FOR
	SELECT	nr_sequencia,
		qt_material_imp,
		vl_unitario_imp,
		vl_material_imp,
		coalesce(vl_material,0),
		coalesce(qt_material,0),
		coalesce(vl_unitario,0),
		ie_tipo_despesa
	from	pls_conta_mat
	where	nr_seq_conta		= nr_seq_conta_w
	and	((ie_status		= 'P') or (ie_origem_p		= 'A'))
	and	ie_tipo_despesa		= '1'
	and	coalesce(ie_glosa,'N')	<> 'S'
	and	coalesce(ie_opcao_p,'N')	= 'GM'
	and	((ie_status <> 'D') or (coalesce(ie_status::text, '') = ''))
	
union

	SELECT	nr_sequencia,
		qt_material_imp,
		vl_unitario_imp,
		vl_material_imp,
		coalesce(vl_material,0),
		coalesce(qt_material,0),
		coalesce(vl_unitario,0),
		ie_tipo_despesa
	from	pls_conta_mat
	where	nr_seq_conta		= nr_seq_conta_w
	and	((ie_status		= 'P') or (ie_origem_p		= 'A'))
	and	ie_tipo_despesa		= '2'
	and	coalesce(ie_glosa,'N')	<> 'S'
	and	coalesce(ie_opcao_p,'N') = 'ME'
	and	((ie_status <> 'D') or (coalesce(ie_status::text, '') = ''))
	
union

	select	nr_sequencia,
		qt_material_imp,
		vl_unitario_imp,
		vl_material_imp,
		coalesce(vl_material,0),
		coalesce(qt_material,0),
		coalesce(vl_unitario,0),
		ie_tipo_despesa
	from	pls_conta_mat
	where	nr_seq_conta		= nr_seq_conta_w
	and	((ie_status		= 'P') or (ie_origem_p		= 'A'))
	and	ie_tipo_despesa		= '3'
	and	coalesce(ie_glosa,'N')	<> 'S'
	and	coalesce(ie_opcao_p,'N')	= 'M'
	and	((ie_status <> 'D') or (coalesce(ie_status::text, '') = ''))
	
union

	select	nr_sequencia,
		qt_material_imp,
		vl_unitario_imp,
		vl_material_imp,
		coalesce(vl_material,0),
		coalesce(qt_material,0),
		coalesce(vl_unitario,0),
		ie_tipo_despesa
	from	pls_conta_mat
	where	nr_seq_conta		= nr_seq_conta_w
	and	((ie_status		= 'P') or (ie_origem_p		= 'A'))
	and	ie_tipo_despesa		= '7'
	and	coalesce(ie_glosa,'N')	<> 'S'
	and	coalesce(ie_opcao_p,'N')	= 'O'
	and	((ie_status <> 'D') or (coalesce(ie_status::text, '') = ''));
	
C03 CURSOR FOR
	SELECT	nr_sequencia,
		vl_calculado
	from	pls_proc_participante
	where	nr_seq_conta_proc = nr_seq_conta_proc_w
	and	ie_status	<> 'C';

c05 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_ocorrencia_benef,
		b.cd_motivo_tiss,
		a.ie_situacao
	from	tiss_motivo_glosa b,
		pls_conta_glosa a
	where	a.nr_seq_motivo_glosa	= b.nr_sequencia
	and	a.nr_seq_conta_proc	= nr_seq_conta_proc_p
	and	(a.nr_seq_ocorrencia_benef IS NOT NULL AND a.nr_seq_ocorrencia_benef::text <> '')
	
union all

	SELECT	a.nr_sequencia,
		a.nr_seq_ocorrencia_benef,
		b.cd_motivo_tiss,
		a.ie_situacao
	from	tiss_motivo_glosa b,
		pls_conta_glosa a
	where	a.nr_seq_motivo_glosa	= b.nr_sequencia
	and	a.nr_seq_conta_mat	= nr_seq_conta_mat_p
	and	(a.nr_seq_ocorrencia_benef IS NOT NULL AND a.nr_seq_ocorrencia_benef::text <> '')
	
union all

	select	a.nr_seq_glosa,
		a.nr_sequencia,
		c.cd_motivo_tiss,
		a.ie_situacao
	FROM pls_ocorrencia_benef a, pls_ocorrencia b
LEFT OUTER JOIN tiss_motivo_glosa c ON (b.nr_seq_motivo_glosa = c.nr_sequencia)
WHERE a.nr_seq_ocorrencia = b.nr_sequencia  and a.nr_seq_conta_proc	= nr_seq_conta_proc_p
	
union all

	select	a.nr_seq_glosa,
		a.nr_sequencia,
		c.cd_motivo_tiss,
		a.ie_situacao
	FROM pls_ocorrencia_benef a, pls_ocorrencia b
LEFT OUTER JOIN tiss_motivo_glosa c ON (b.nr_seq_motivo_glosa = c.nr_sequencia)
WHERE a.nr_seq_ocorrencia = b.nr_sequencia  and a.nr_seq_conta_mat	= nr_seq_conta_mat_p;

BEGIN

begin
select	coalesce(a.ie_analise_cm_nova,'N')
into STRICT	ie_analise_cm_nova_w
from	pls_parametros a
where	a.cd_estabelecimento	= cd_estabelecimento_p;
exception
	when others then
	ie_analise_cm_nova_w	:= 'N';
end;

nr_seq_conta_w := coalesce(nr_seq_conta_p,0);

if (coalesce(nr_seq_conta_w,0) <> 0) 		 		and (coalesce(nr_seq_conta_proc_p,0) = 0)	and (coalesce(nr_seq_conta_mat_p,0) = 0)		then
	
	ie_gerar_analise_audit_w := pls_obter_conta_item_auditoria(nr_seq_conta_w);

	open c01;
	loop
	fetch c01 into	
		nr_seq_conta_proc_w,
		qt_procedimento_imp_w,
		vl_unitario_imp_w,
		vl_procedimento_imp_w,
		vl_total_procedimento_w,
		vl_prestador_w,
		vl_processado_w,
		qt_processada_w,
		vl_unitario_w,
		ie_tipo_despesa_w,
		vl_pag_medico_conta_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		if (ie_tipo_valor_p = 'A') then
			vl_liberado_w	:= vl_procedimento_imp_w;
			qt_liberada_w	:= qt_procedimento_imp_w;
			vl_unit_lib_w	:= vl_unitario_imp_w;
			vl_pag_medico_conta_w:=0;
		elsif (ie_tipo_valor_p = 'P') then

			CALL pls_delete_conta_medica_resumo(nr_seq_conta_w,nr_seq_conta_proc_w,null,nm_usuario_P);
			
			vl_liberado_w	:= vl_processado_w;
			qt_liberada_w	:= qt_procedimento_imp_w;
			vl_unit_lib_w	:= dividir_sem_round(vl_processado_w, qt_procedimento_imp_w);
		elsif (ie_tipo_valor_p = 'M') then
			if (vl_procedimento_imp_w > vl_processado_w) then
				vl_liberado_w	:= vl_processado_w;
				qt_liberada_w	:= qt_procedimento_imp_w;
				vl_unit_lib_w	:= dividir_sem_round(vl_processado_w, qt_procedimento_imp_w);
			else
				vl_liberado_w	:= vl_procedimento_imp_w;
				qt_liberada_w	:= qt_procedimento_imp_w;
				vl_unit_lib_w	:= vl_unitario_imp_w;
				vl_pag_medico_conta_w:=0;
			end if;
		end if;
		
		update	pls_conta_proc
		set	ie_tipo_liberacao 	= ie_tipo_valor_p
		where	nr_sequencia 	= nr_seq_conta_proc_w;
	
		vl_glosa_w := 0;
		vl_saldo_w := 0;
		if (vl_procedimento_imp_w > vl_liberado_w) then
			vl_glosa_w := vl_procedimento_imp_w - vl_liberado_w;
		else
			vl_saldo_w := vl_liberado_w - vl_procedimento_imp_w;
		end if;

		open C03;
		loop
		fetch C03 into	
			nr_seq_proc_partic_w,
			vl_calculado_partic_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			vl_liberado_partic_w := dividir((vl_liberado_w * vl_calculado_partic_w),vl_processado_w);
			vl_unit_lib_partic_w := dividir(vl_liberado_partic_w,qt_procedimento_imp_w);
			vl_liberado_partic_w := pls_atualiza_conta_item(nr_seq_proc_partic_w, 'R', null, vl_unit_lib_partic_w, vl_liberado_partic_w, 0, 0, 0, 1, '', coalesce(ie_origem_p,'C'), cd_estabelecimento_p, nm_usuario_p, 'N', 0, 'N', null, ie_gerar_analise_audit_w, null, null, null, null, null, null);
			end;
		end loop;
		close C03;
		
		vl_liberado_w := pls_atualiza_conta_item(nr_seq_conta_proc_w, 'P', null, vl_unit_lib_w, vl_liberado_w, vl_glosa_w, vl_saldo_w, vl_prestador_w, qt_liberada_w, '', coalesce(ie_origem_p,'C'), cd_estabelecimento_p, nm_usuario_p, 'N', vl_pag_medico_conta_w, 'N', null, ie_gerar_analise_audit_w, null, null, null, null, null, null);
		end;
		
		if (vl_liberado_w 	= 0)		and (vl_glosa_w	> 0) 		and (ie_analise_cm_nova_w = 'N') 	then
			update  pls_conta_proc
			set	ie_glosa = 'S'
			where	nr_sequencia = nr_seq_conta_proc_w;
		end if;
	end loop;
	close c01;

	open c02;
	loop
	fetch c02 into	
		nr_seq_conta_mat_w,
		qt_material_imp_w,
		vl_unitario_imp_w,
		vl_material_imp_w,
		vl_processado_w,
		qt_processada_w,
		vl_unitario_w,			
		ie_tipo_despesa_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		if (ie_tipo_valor_p = 'A') then
			vl_liberado_w	:= vl_material_imp_w;
			qt_liberada_w	:= qt_material_imp_w;
			vl_unit_lib_w	:= vl_unitario_imp_w;
		elsif (ie_tipo_valor_p = 'P') then
			vl_liberado_w	:= vl_processado_w;
			qt_liberada_w	:= qt_material_imp_w;
			vl_unit_lib_w	:= dividir_sem_round(vl_processado_w, qt_material_imp_w);
		elsif (ie_tipo_valor_p = 'M') then
			if (vl_material_imp_w > vl_processado_w) then
				vl_liberado_w	:= vl_processado_w;
				qt_liberada_w	:= qt_material_imp_w;
				vl_unit_lib_w	:= dividir_sem_round(vl_processado_w, qt_material_imp_w);
			else
				vl_liberado_w	:= vl_material_imp_w;
				qt_liberada_w	:= qt_material_imp_w;
				vl_unit_lib_w	:= vl_unitario_imp_w;
			end if;
		end if;

		vl_glosa_w := 0;
		vl_saldo_w := 0;
		
		if (vl_material_imp_w > vl_liberado_w) then
			vl_glosa_w := vl_material_imp_w - vl_liberado_w;
		else
			vl_saldo_w := vl_liberado_w - vl_material_imp_w;
		end if;

		vl_liberado_w := pls_atualiza_conta_item(nr_seq_conta_mat_w, 'M', null, vl_unit_lib_w, vl_liberado_w, vl_glosa_w, vl_saldo_w, null, qt_liberada_w, '', coalesce(ie_origem_p,'C'), cd_estabelecimento_p, nm_usuario_p, 'N', 0, 'N', null, ie_gerar_analise_audit_w, null, null, null, null, null, null);
		end;
		
		if (vl_liberado_w 	= 0)		and (vl_glosa_w	> 0) 		and (ie_analise_cm_nova_w = 'N') 	then
			update  pls_conta_mat
			set	ie_glosa = 'S'
			where	nr_sequencia = nr_seq_conta_mat_w;
		end if;
	end loop;
	close c02;
elsif (coalesce(nr_seq_conta_proc_p, 0) <> 0) then
	nr_seq_conta_proc_w := nr_seq_conta_proc_p;
	select	coalesce(vl_unitario_imp, 0),
		coalesce(vl_procedimento_imp, 0),
		coalesce(qt_procedimento_imp, 0),
		coalesce(vl_procedimento, 0),
		coalesce(qt_procedimento, 0),
		coalesce(vl_unitario, 0),
		nr_seq_conta,
		coalesce(vl_total_procedimento, 0),
		coalesce(vl_prestador, 0),
		coalesce(vl_medico_original, 0),
		coalesce(vl_procedimento_ptu_imp,0),
		coalesce(vl_material_ptu_imp,0),
		coalesce(vl_co_ptu_imp,0),
		coalesce(vl_taxa_servico_imp,0),
		coalesce(vl_taxa_material_imp,0),
		coalesce(vl_taxa_co_imp,0),
		coalesce(vl_calc_hi_util,0),
		coalesce(vl_calc_mat_util,0),
		coalesce(vl_calc_co_util,0),
		coalesce(vl_taxa_servico,0),
		coalesce(vl_taxa_material,0),
		coalesce(vl_taxa_co,0),
		tx_intercambio_imp,
		tx_intercambio
	into STRICT	vl_unitario_imp_w,
		vl_procedimento_imp_w,
		qt_procedimento_imp_w,
		vl_processado_w,
		qt_processada_w,
		vl_unitario_w,
		nr_seq_conta_w,
		vl_total_procedimento_w,
		vl_prestador_w,
		vl_pag_medico_conta_w,
		vl_procedimento_ptu_imp_w,
		vl_material_ptu_imp_w,
		vl_co_ptu_imp_w,
		vl_taxa_servico_imp_w,
		vl_taxa_material_imp_w,
		vl_taxa_co_imp_w,
		vl_calc_hi_util_w,
		vl_calc_mat_util_w,
		vl_calc_co_util_w,
		vl_taxa_servico_w,
		vl_taxa_material_w,
		vl_taxa_co_w,
		tx_intercambio_imp_w,
		tx_intercambio_w
	from	pls_conta_proc
	where	nr_sequencia	= nr_seq_conta_proc_p;
	
	begin
		select	ie_tipo_conta
		into STRICT	ie_tipo_conta_w
		from	pls_conta
		where	nr_sequencia = nr_seq_conta_w;
	exception
	when others then
		ie_tipo_conta_w := 'O';
	end;
	vl_lib_hi_w		:= null;
	vl_lib_material_w 	:= null;
	vl_lib_co_w 		:= null;
	vl_lib_taxa_hi_w 	:= null;
	vl_lib_taxa_mat_w 	:= null;
	vl_lib_taxa_co_w 	:= null;
		
	if (ie_tipo_valor_p = 'A') then
		vl_liberado_w		:= vl_procedimento_imp_w;
		qt_liberada_w		:= qt_procedimento_imp_w;
		vl_unit_lib_w		:= dividir_sem_round(vl_procedimento_imp_w, qt_liberada_w);
		vl_pag_medico_conta_w	:= 0;
		if (ie_tipo_conta_w = 'I') then
			vl_lib_hi_w		:= vl_procedimento_ptu_imp_w;
			vl_lib_material_w 	:= vl_material_ptu_imp_w;
			vl_lib_co_w 		:= vl_co_ptu_imp_w;
			vl_lib_taxa_hi_w 	:= vl_taxa_servico_imp_w;
			vl_lib_taxa_mat_w 	:= vl_taxa_material_imp_w;
			vl_lib_taxa_co_w 	:= vl_taxa_co_imp_w;
		end if;
		ie_tipo_liberacao_w	:= 'A';
	elsif (ie_tipo_valor_p = 'P') then

		CALL pls_delete_conta_medica_resumo(nr_seq_conta_w,nr_seq_conta_proc_w,null,nm_usuario_P);
		
		vl_liberado_w		:= vl_processado_w;
		qt_liberada_w		:= qt_procedimento_imp_w;
		vl_unit_lib_w		:= dividir_sem_round(vl_processado_w, qt_procedimento_imp_w);
		
		if (ie_tipo_conta_w = 'I') then
			
			dados_intercambio_w := pls_cta_alt_valor_pck.pls_calc_vl_lib_vl_calc( coalesce(vl_procedimento_ptu_imp_w,0), coalesce(vl_material_ptu_imp_w,0),
										coalesce(vl_co_ptu_imp_w,0), coalesce(vl_taxa_servico_imp_w,0), coalesce(vl_taxa_material_imp_w,0),
										coalesce(vl_taxa_co_imp_w,0), coalesce(vl_calc_hi_util_w,0), coalesce(vl_calc_mat_util_w,0),
										coalesce(vl_calc_co_util_w,0), coalesce(vl_taxa_servico_w,0), coalesce(vl_taxa_material_w,0),
										coalesce(vl_taxa_co_w,0), tx_intercambio_imp_w, tx_intercambio_w);
			-- calculo das glosas

			-- se der valor negativo, a glosa e sempre zero
			
			vl_lib_co_w		:= dados_intercambio_w.vl_liberado_co;
			vl_lib_hi_w		:= dados_intercambio_w.vl_liberado_hi;
			vl_lib_material_w	:= dados_intercambio_w.vl_liberado_mat;
			vl_lib_taxa_co_w	:= dados_intercambio_w.vl_lib_taxa_co;
			vl_lib_taxa_hi_w	:= dados_intercambio_w.vl_lib_taxa_hi;
			vl_lib_taxa_mat_w	:= dados_intercambio_w.vl_lib_taxa_mat;
			
			vl_liberado_w		:= coalesce(vl_lib_taxa_co_w,0) + coalesce(vl_lib_taxa_mat_w,0) + coalesce(vl_lib_taxa_hi_w,0) +
						   coalesce(vl_lib_co_w,0) + coalesce(vl_lib_hi_w,0) + coalesce(vl_lib_material_w,0);
			
			vl_unit_lib_w		:= dividir_sem_round(vl_liberado_w, qt_procedimento_imp_w);

		end if;

		ie_tipo_liberacao_w:= 'C';

	elsif (ie_tipo_valor_p = 'M') then
		if (vl_procedimento_imp_w > vl_processado_w) then
			vl_liberado_w		:= vl_processado_w;
			qt_liberada_w		:= qt_procedimento_imp_w;
			vl_unit_lib_w		:= dividir_sem_round(vl_processado_w, qt_procedimento_imp_w);
			
			if (ie_tipo_conta_w = 'I') then
				if (vl_calc_hi_util_w > vl_procedimento_ptu_imp_w ) then
					vl_lib_hi_w := vl_procedimento_ptu_imp_w;
					ie_altera_w := 'S';
				else
					vl_lib_hi_w		:= vl_calc_hi_util_w;
				end if;
				if (vl_calc_mat_util_w > vl_material_ptu_imp_w ) then
					vl_lib_material_w 	:= vl_material_ptu_imp_w;
					ie_altera_w := 'S';
				else
					vl_lib_material_w 	:= vl_calc_mat_util_w;
				end if;
				if (vl_calc_co_util_w > vl_co_ptu_imp_w ) then
					vl_lib_co_w := vl_co_ptu_imp_w;
					ie_altera_w := 'S';
				else
					vl_lib_co_w		:= vl_calc_co_util_w;
				end if;
				if (vl_taxa_servico_w > vl_taxa_servico_imp_w ) then
					vl_lib_taxa_hi_w := vl_taxa_servico_imp_w;
					ie_altera_w := 'S';
				else
					vl_lib_taxa_hi_w		:= vl_taxa_servico_w;
				end if;
				if (vl_taxa_material_w > vl_taxa_material_imp_w ) then
					vl_lib_taxa_mat_w 	:= vl_taxa_material_imp_w;
					ie_altera_w := 'S';
				else
					vl_lib_taxa_mat_w	:= vl_taxa_material_w;
				end if;
				if (vl_taxa_co_w > vl_taxa_co_imp_w ) then
					vl_lib_taxa_co_w 	:= vl_taxa_co_imp_w;
					ie_altera_w := 'S';
				else
					vl_lib_taxa_co_w	:= vl_taxa_co_w;
				end if;
				
				if (ie_altera_w = 'S') then
					vl_liberado_w		:= coalesce(vl_lib_taxa_co_w,0) + coalesce(vl_lib_taxa_mat_w,0) + coalesce(vl_lib_taxa_hi_w,0) +
								   coalesce(vl_lib_co_w,0) + coalesce(vl_lib_hi_w,0) + coalesce(vl_lib_material_w,0);
					vl_unit_lib_w		:= dividir_sem_round(vl_liberado_w, qt_procedimento_imp_w);
				end if;
			end if;
		
			ie_tipo_liberacao_w	:= 'C';
			
		else
			vl_liberado_w		:= vl_procedimento_imp_w;
			qt_liberada_w		:= qt_procedimento_imp_w;
			vl_unit_lib_w		:= vl_unitario_imp_w;
			vl_pag_medico_conta_w	:= 0;
			ie_tipo_liberacao_w	:= 'A';
		end if;
	end if;
	
	update	pls_conta_proc
	set	ie_tipo_liberacao 	= ie_tipo_valor_p
	where	nr_sequencia 		= nr_seq_conta_proc_p;
	
	vl_glosa_w	:= 0;
	vl_saldo_w	:= 0;
	
	if (vl_procedimento_imp_w > vl_liberado_w) then
		vl_glosa_w := vl_procedimento_imp_w - vl_liberado_w;
	else	
		vl_saldo_w := vl_liberado_w - vl_procedimento_imp_w;
	end if;
	
	open C03;
	loop
	fetch C03 into	
		nr_seq_proc_partic_w,
		vl_calculado_partic_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		vl_liberado_partic_w	:= dividir((vl_liberado_w * vl_calculado_partic_w), vl_processado_w);
		vl_unit_lib_partic_w	:= dividir(vl_liberado_partic_w, qt_procedimento_imp_w);
		
		vl_liberado_partic_w := pls_atualiza_conta_item(	nr_seq_proc_partic_w, 'R', null, vl_unit_lib_partic_w, vl_liberado_partic_w, 0, 0, 0, 1, '', coalesce(ie_origem_p,'C'), cd_estabelecimento_p, nm_usuario_p, 'N', 0, 'N', null, ie_gerar_analise_audit_w, null, null, null, null, null, null);
		end;
	end loop;
	close C03;
	
	
	vl_liberado_w := pls_atualiza_conta_item(	nr_seq_conta_proc_p, 'P', null, vl_unit_lib_w, vl_liberado_w, vl_glosa_w, vl_saldo_w, vl_prestador_w, qt_liberada_w, '', coalesce(ie_origem_p, 'C'), cd_estabelecimento_p, nm_usuario_p, 'N', vl_pag_medico_conta_w, 'N', ie_tipo_liberacao_w, ie_gerar_analise_audit_w, vl_lib_hi_w, vl_lib_material_w, vl_lib_co_w, vl_lib_taxa_hi_w, vl_lib_taxa_mat_w, vl_lib_taxa_co_w);
					
	if (vl_liberado_w 	= 0)		and (vl_glosa_w	> 0) 		and (ie_analise_cm_nova_w = 'N') 	then
		update  pls_conta_proc
		set	ie_glosa = 'S'
		where	nr_sequencia = nr_seq_conta_proc_p;
	end if;

					
elsif (coalesce(nr_seq_conta_mat_p,0) <> 0) then
	select	coalesce(vl_unitario_imp,0),
		coalesce(vl_material_imp,0),
		coalesce(qt_material_imp,0),
		coalesce(vl_material,0),
		coalesce(qt_material,0),
		coalesce(vl_unitario,0),
		nr_seq_conta,
		vl_taxa_material,
		vl_taxa_material_imp    
	into STRICT	vl_unitario_imp_w,
		vl_material_imp_w,
		qt_material_imp_w,
		vl_processado_w,
		qt_processada_w,
		vl_unitario_w,
		nr_seq_conta_w,
		vl_taxa_material_w,
		vl_taxa_material_imp_w
	from	pls_conta_mat
	where	nr_sequencia	= nr_seq_conta_mat_p;

	select	ie_tipo_conta
	into STRICT	ie_tipo_conta_w
	from	pls_conta
	where	nr_sequencia = nr_seq_conta_w;
		
	if (ie_tipo_valor_p = 'A') then
		vl_liberado_w	:= vl_material_imp_w;
		qt_liberada_w	:= qt_material_imp_w;
		vl_unit_lib_w	:= vl_unitario_imp_w;
		vl_lib_taxa_mat_w := vl_taxa_material_imp_w;
	elsif (ie_tipo_valor_p = 'P') then
		if (ie_tipo_conta_w	= 'I') and (vl_processado_w	> vl_material_imp_w) then
			vl_liberado_w	:= vl_material_imp_w;
			qt_liberada_w	:= qt_material_imp_w;
			vl_unit_lib_w	:= vl_unitario_imp_w;
			vl_lib_taxa_mat_w := vl_taxa_material_imp_w;
		else
			vl_liberado_w	:= vl_processado_w;
			qt_liberada_w	:= qt_material_imp_w;
			vl_unit_lib_w	:= dividir_sem_round(vl_processado_w, qt_material_imp_w);
			vl_lib_taxa_mat_w := vl_taxa_material_w;
		end if;
	elsif (ie_tipo_valor_p = 'M') then
		if (vl_material_imp_w > vl_processado_w) then
			vl_liberado_w	  := vl_processado_w;
			qt_liberada_w	  := qt_material_imp_w;
			vl_unit_lib_w	  := dividir_sem_round(vl_processado_w, qt_material_imp_w);
			vl_lib_taxa_mat_w := vl_taxa_material_w;
		else
			vl_liberado_w	  := vl_material_imp_w;
			qt_liberada_w	  := qt_material_imp_w;
			vl_unit_lib_w	  := vl_unitario_imp_w;
			vl_lib_taxa_mat_w := vl_taxa_material_imp_w;
		end if;
	end if;

	vl_glosa_w := 0;
	vl_saldo_w := 0;
	
	if (vl_material_imp_w > vl_liberado_w) then
		vl_glosa_w	:= vl_material_imp_w - vl_liberado_w;
	else
		vl_saldo_w	:= vl_liberado_w - vl_material_imp_w;
	end if;

	vl_liberado_w := pls_atualiza_conta_item(nr_seq_conta_mat_p, 'M', null, vl_unit_lib_w, vl_liberado_w, vl_glosa_w, vl_saldo_w, null, qt_liberada_w, '', coalesce(ie_origem_p,'C'), cd_estabelecimento_p, nm_usuario_p, 'N', 0, 'N', null, ie_gerar_analise_audit_w, null, null, null, null, vl_lib_taxa_mat_w, null);
		
	if (vl_liberado_w 	= 0)		and (vl_glosa_w	> 0) 		and (ie_analise_cm_nova_w = 'N') 	then
		update  pls_conta_mat
		set	ie_glosa = 'S'
		where	nr_sequencia = nr_seq_conta_mat_p;
	end if;
end if;

CALL pls_cta_consistir_pck.gerar_resumo_conta(null, null, null, nr_seq_conta_w,nm_usuario_p, cd_estabelecimento_p);
CALL pls_fechar_conta(nr_seq_conta_w, 'N','S','S', cd_estabelecimento_p, nm_usuario_p,null,null);

/*Robson da Silva OS - 289943 atualizar status de intercambio*/

if (coalesce(nr_seq_conta_p,0) <> 0) then
	select	nr_seq_protocolo,
		ie_tipo_conta,
		nr_seq_fatura
	into STRICT	nr_seq_protocolo_w,
		ie_tipo_conta_w,
		nr_seq_fatura_w
	from	pls_conta
	where	nr_sequencia	= nr_seq_conta_p;
elsif (coalesce(nr_seq_conta_proc_p,0) <> 0) then
	select	a.nr_seq_protocolo,
		a.ie_tipo_conta,
		a.nr_seq_fatura,
		b.vl_liberado
	into STRICT	nr_seq_protocolo_w,
		ie_tipo_conta_w,
		nr_seq_fatura_w,
		vl_liberado_w
	from	pls_conta	a,
		pls_conta_proc	b
	where	a.nr_sequencia	= b.nr_seq_conta
	and	b.nr_sequencia	= nr_seq_conta_proc_p;
	
	
elsif (coalesce(nr_seq_conta_mat_p,0) <> 0) then
	select	a.nr_seq_protocolo,
		a.ie_tipo_conta,
		a.nr_seq_fatura
	into STRICT	nr_seq_protocolo_w,
		ie_tipo_conta_w,
		nr_seq_fatura_w
	from	pls_conta	a,
		pls_conta_mat	b
	where	a.nr_sequencia	= b.nr_seq_conta
	and	b.nr_sequencia	= nr_seq_conta_mat_p;
end if;
select	ie_tipo_protocolo
into STRICT	ie_tipo_protocolo_w
from 	pls_protocolo_conta
where	nr_sequencia = nr_seq_protocolo_w;

if (nr_seq_analise_p IS NOT NULL AND nr_seq_analise_p::text <> '') then
	if (vl_glosa_w	> 0) then
		ie_status_w	:= 'G';
	else
		ie_status_w	:= 'L';
	end if;
	
	select	CASE WHEN ie_tipo_valor_p='A' THEN '5' WHEN ie_tipo_valor_p='P' THEN '4' WHEN ie_tipo_valor_p='M' THEN '6'  ELSE null END
	into STRICT	ie_origem_acao_w
	;

	nr_seq_fluxo_w := pls_gravar_fluxo_analise_item(	nr_seq_analise_p, nr_seq_conta_w, nr_seq_conta_proc_p, nr_seq_conta_mat_p, null, null, nr_seq_grupo_atual_p, ie_status_w, /* Liberado */
					null, ds_observacao_p, 'N', 'N', nm_usuario_p, 'N', null, ie_origem_acao_w, nr_seq_fluxo_w);
	
	if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
		CALL pls_conta_ac_valor_glosa(nr_seq_conta_proc_p,null,vl_glosa_w,
					ie_tipo_valor_p	,nm_usuario_p);
			

	elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
		
		CALL pls_conta_ac_valor_glosa(null,nr_seq_conta_mat_p,vl_glosa_w,
					ie_tipo_valor_p	,nm_usuario_p);
					
	end if;
			
	open c05;
	loop
	fetch c05 into	
		nr_seq_conta_glosa_w,
		nr_seq_ocorrencia_benef_w,
		cd_tiss_motivo_glosa_w,
		ie_situacao_w;
	EXIT WHEN NOT FOUND; /* apply on c05 */
		begin
		ie_status_w := 'L';
		
		-- Foi retirado do count a restricao do grupo de auditor, se houver algum fluxo pendente, somente aquele auditor podera liberar a ocorrencia drquadros 22/08/2013 627833		
		select	count(1)
		into STRICT	qt_fluxo_w
		from	pls_analise_glo_ocor_grupo x
		where	x.nr_seq_analise	= nr_seq_analise_p
		and	x.nr_seq_ocor_benef	= nr_seq_ocorrencia_benef_w;
				
		/* Francisco - 05/02/2013 - OS 548646 - So deve considerar como glosado para o grupo caso a glosa ainda esteja ativa */

		if (coalesce(cd_tiss_motivo_glosa_w,'0') in ('1705','1706','1707','9919') ) and
			((ie_situacao_w = 'A') or (vl_glosa_w > 0)) then
			ie_status_w := 'N';
		end if;
		
		if (qt_fluxo_w = 0) then
			
			insert into pls_analise_glo_ocor_grupo(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_analise,
				nr_seq_ocor_benef,
				nr_seq_grupo,
				nr_seq_fluxo,
				ie_fluxo_gerado,
				nm_usuario_analise,
				dt_analise,
				ie_status)
			values (nextval('pls_analise_glo_ocor_grupo_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_analise_p,
				nr_seq_ocorrencia_benef_w,
				nr_seq_grupo_atual_p,
				null,
				'S',
				nm_usuario_p,
				clock_timestamp(),
				ie_status_w);
		else	
			update	pls_analise_glo_ocor_grupo
			set	ie_status		= ie_status_w, /* Liberado */
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario_analise	= nm_usuario_p,
				dt_analise		= clock_timestamp()
			where	nr_seq_ocor_benef	= nr_seq_ocorrencia_benef_w
			and	nr_seq_grupo		= nr_seq_grupo_atual_p;
		end if;
		end;
	end loop;
	close c05;

end if;

if (ie_tipo_conta_w = 'I') and (ie_tipo_protocolo_w <> 'R') then
	CALL pls_atualizar_status_int_a500(nr_seq_protocolo_w, nr_seq_fatura_w, nm_usuario_p);
end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_conta_aceitar_valor ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, ie_opcao_p text, ie_tipo_valor_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_origem_p text, nm_usuario_p usuario.nm_usuario%type, nr_seq_analise_p bigint, nr_seq_grupo_atual_p bigint, ds_observacao_p text default null) FROM PUBLIC;

