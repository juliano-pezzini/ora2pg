-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_agendar_build ( cd_versao_p text, ie_aplicacao_p text, dt_agenda_p timestamp, nm_usuario_p text, ds_mensagem_p INOUT text) AS $body$
DECLARE


qt_registro_w			bigint;
nr_seq_calendario_w		bigint;
ds_aplicacao_w			varchar(100);
ds_versoes_w			varchar(200):='';
cd_versao_w				varchar(20);

C01 CURSOR FOR
	SELECT	CASE WHEN ie_aplicacao='J' THEN 'Java' WHEN ie_aplicacao='D' THEN 'Delphi' WHEN ie_aplicacao='W' THEN 'Web'  ELSE 'HTML5' END  ds_aplicacao,
			cd_versao
	from	man_versao_calendario x
	where	coalesce(x.cd_build::text, '') = ''
	and		trunc(x.dt_geracao) > trunc(clock_timestamp())
	and		trunc(x.dt_geracao)  = trunc(dt_agenda_p)
	and		ie_tipo_solicitacao = 'A';


BEGIN

/* Permitido apenas agendamento apenas para versões fora da extranet*/

if (coalesce(ds_mensagem_p::text, '') = '') then

	select	count(*)
	into STRICT	qt_registro_w
	from	aplicacao_tasy_versao
	where	cd_aplicacao_tasy = 'Tasy'
	and		coalesce(IE_VERSAO_OFICIAL, 'N') = 'S'
	and		trunc(dt_versao) between clock_timestamp() - interval '50 days' and clock_timestamp()
	and		cd_versao = cd_versao_p;

	if (qt_registro_w > 0) then
		ds_mensagem_p:= 'E';
	end if;

end if;

/* Agendamento apenas para as últimas 5 versões fora da Extranet*/

if (coalesce(ds_mensagem_p::text, '') = '') then

	select	count(*)
	into STRICT	qt_registro_w
	from	aplicacao_tasy_versao
	where	cd_aplicacao_tasy = 'Tasy'
	and		coalesce(IE_VERSAO_OFICIAL, 'N') = 'S'
	and		trunc(dt_versao) between clock_timestamp() - interval '125 days' and clock_timestamp()
	and		cd_versao = cd_versao_p;

	if (qt_registro_w = 0) then
		ds_mensagem_p:= 'T';
	end if;

end if;

/*  Agendamento para acima de 15 dias não é permitido*/

if (trunc(dt_agenda_p) > trunc(clock_timestamp() + interval '15 days')) then
	ds_mensagem_p:= 'D';
end if;

/*  Permitido apenas agendamento superior ao dia de hoje*/

if (trunc(dt_agenda_p) <= trunc(clock_timestamp())) then
	ds_mensagem_p:= 'S';
end if;

/*  Permitido apenas agendamento em dias úteis*/

if (pkg_date_utils.IS_BUSINESS_DAY(dt_agenda_p)  = 0) then -- pkg_date_utils.get_WeekDay(dt_agenda_p) in ('7','1')
	ds_mensagem_p:= 'U';
end if;

/*  Acima de 2 agentamentos no dia não é permitido*/

if (coalesce(ds_mensagem_p::text, '') = '') then

	select	count(*)
	into STRICT	qt_registro_w
	from	man_versao_calendario x
	where	coalesce(x.cd_build::text, '') = ''
	and		trunc(x.dt_geracao) > trunc(clock_timestamp())
	and		trunc(x.dt_geracao)  = trunc(dt_agenda_p)
	and		ie_tipo_solicitacao = 'A';
	if (qt_registro_w > 1) then


	open C01;
	loop
	fetch C01 into
		ds_aplicacao_w,
		cd_versao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
			ds_versoes_w:= ds_versoes_w|| ' ' ||ds_aplicacao_w || ' - ' || cd_versao_w;
		end;
	end loop;
	close C01;
		ds_mensagem_p:= '('||ds_versoes_w||')';
	end if;

end if;

/*  Este build já está agendado para uma data anterior. */

if (coalesce(ds_mensagem_p::text, '') = '') then

	select	count(*)
	into STRICT	qt_registro_w
	from	man_versao_calendario x
	where	coalesce(x.cd_build::text, '') = ''
	and		trunc(x.dt_geracao) > trunc(clock_timestamp())
	and		trunc(x.dt_geracao)  < trunc(dt_agenda_p)
	and		cd_versao = cd_versao_p
	and		ie_aplicacao = ie_aplicacao_p;

	if (qt_registro_w > 0) then
		ds_mensagem_p:= 'G';
	end if;

end if;


if (coalesce(ds_mensagem_p::text, '') = '') then

	select	count(*)
	into STRICT	qt_registro_w
	from	man_versao_calendario x
	where	coalesce(x.cd_build::text, '') = ''
	and		trunc(x.dt_geracao) > trunc(clock_timestamp())
	and		trunc(x.dt_geracao)  >= trunc(dt_agenda_p)
	and		ie_aplicacao = ie_aplicacao_p
	and		cd_versao = cd_versao_p
	and		ie_tipo_solicitacao = 'A';

	if (qt_registro_w > 0) then
		ds_mensagem_p:= 'Q';
	else

		select  max(nr_sequencia)+1
		into STRICT    nr_seq_calendario_w
		from    man_versao_calendario;

		insert into man_versao_calendario(nr_sequencia,
										 dt_atualizacao,
										 nm_usuario,
										 dt_atualizacao_nrec,
										 nm_usuario_nrec,
										 cd_build,
										 cd_versao,
										 dt_geracao,
										 ie_aplicacao,
										 ie_tipo_solicitacao)
						values (nr_seq_calendario_w,
										clock_timestamp(),
										'Tasy',
										clock_timestamp(),
										'Tasy',
										null,
										cd_versao_p,
										dt_agenda_p,
										ie_aplicacao_p,
										'A');

		commit;

	end if;

end if;

/*  Elimina duplicação*/

select	count(*)
into STRICT	qt_registro_w
from	man_versao_calendario x
where	coalesce(x.cd_build::text, '') = ''
and		trunc(x.dt_geracao) > trunc(clock_timestamp())
and		trunc(x.dt_geracao)  = trunc(dt_agenda_p)
and		cd_versao = cd_versao_p
and		ie_tipo_solicitacao = 'A';

if (qt_registro_w > 1) then

	delete 	FROM man_versao_calendario x
	where	coalesce(x.cd_build::text, '') = ''
	and		trunc(x.dt_geracao) > trunc(clock_timestamp())
	and		trunc(x.dt_geracao)  = trunc(dt_agenda_p)
	and		ie_aplicacao = ie_aplicacao_p
	and		cd_versao = cd_versao_p
	and		ie_tipo_solicitacao = 'A'  LIMIT 1;
	commit;

end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_agendar_build ( cd_versao_p text, ie_aplicacao_p text, dt_agenda_p timestamp, nm_usuario_p text, ds_mensagem_p INOUT text) FROM PUBLIC;

