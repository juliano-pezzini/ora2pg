-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageserv_consiste_perm_proced (cd_agenda_p bigint, nr_seq_exame_p bigint, nr_seq_proc_interno_p bigint, cd_procedimento_p bigint, ie_origem_proced_p text, ie_proced_adicional_p text, nm_usuario_p text, cd_estabelecimento_p bigint, dt_agenda_p timestamp, ds_mensagem_p INOUT text, ie_permissao_p INOUT text ) AS $body$
DECLARE

qt_agenda_proced_w	smallint;
ds_mensagem_w 		ageserv_proced_permissao.ds_mensagem%type;
ie_permissao_w 		ageserv_proced_permissao.ie_permissao%type;
nr_sequencia_w		bigint;
qt_regra_turno_w 	smallint;
qt_regra_turno_ww 	smallint;

	
c01 CURSOR FOR
	SELECT 	a.ds_mensagem,
		a.ie_permissao,
		a.nr_sequencia	
	from 	ageserv_proced_permissao a 
	where 	coalesce(a.cd_agenda,cd_agenda_p) = cd_agenda_p 
	and   	CASE WHEN a.ie_somente_proced_adic='N' THEN ie_proced_adicional_p WHEN a.ie_somente_proced_adic='S' THEN a.ie_somente_proced_adic END  = ie_proced_adicional_p	
	and   	coalesce(a.nr_seq_exame,coalesce(nr_seq_exame_p, 0)) = coalesce(nr_seq_exame_p, 0)
	and   	coalesce(a.nr_seq_proc_interno, coalesce(nr_seq_proc_interno_p, 0)) = coalesce(nr_seq_proc_interno_p, 0)
	and  	coalesce(a.cd_procedimento, coalesce(cd_procedimento_p ,0)) = coalesce(cd_procedimento_p ,0)
	and   	coalesce(a.ie_origem_proced, coalesce(ie_origem_proced_p ,0)) = coalesce(ie_origem_proced_p ,0)		
	and   	coalesce(a.ie_situacao, 'A') = 'A'
	order by 	coalesce(cd_agenda,0),
			coalesce(nr_seq_proc_interno,0), 
			coalesce(nr_Seq_exame,0), 
			coalesce(cd_procedimento,0), 
			ie_permissao;
	

BEGIN
	begin
		select	1
		into STRICT	qt_agenda_proced_w
		from	ageserv_proced_permissao  a	
		where	coalesce(a.cd_agenda,cd_agenda_p) = cd_agenda_p  LIMIT 1;
		exception
		when no_data_found then
			qt_agenda_proced_w := 0;
	end;
	if (qt_agenda_proced_w = 0) then
		ie_permissao_p := 'S';
		ds_mensagem_p := '';
	else
		open c01;
		loop
		fetch c01 into 	ds_mensagem_w,
				ie_permissao_w,
				nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		end loop;
		close c01;
		
		select 	count(1)
		into STRICT	qt_regra_turno_w
		from 	ageserv_proced_perm_turno 		
		where 	nr_seq_perm_exa = nr_sequencia_w;
		
		if (qt_regra_turno_w >0) then
			
			select 	count(1)
			into STRICT	qt_regra_turno_ww
			from 	ageserv_proced_perm_turno 		
			where 	nr_seq_perm_exa = nr_sequencia_w			
			and (obter_cod_dia_semana(dt_agenda_p) = dt_dia_semana or (dt_dia_semana = 9 AND (obter_cod_dia_semana(dt_agenda_p) NOT IN (1,7)))) 	 
			and	to_char(dt_agenda_p,'hh24:mi:ss')  between to_char(hr_inicial,'hh24:mi:ss') and to_char(hr_final,'hh24:mi:ss');
			
			
			if (qt_regra_turno_ww = 0) then
				ie_permissao_w := 'S';
				ds_mensagem_w := '';
			end if;
			
		end if;
			
		ie_permissao_p := ie_permissao_w;
		ds_mensagem_p := ds_mensagem_w;

	end if;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageserv_consiste_perm_proced (cd_agenda_p bigint, nr_seq_exame_p bigint, nr_seq_proc_interno_p bigint, cd_procedimento_p bigint, ie_origem_proced_p text, ie_proced_adicional_p text, nm_usuario_p text, cd_estabelecimento_p bigint, dt_agenda_p timestamp, ds_mensagem_p INOUT text, ie_permissao_p INOUT text ) FROM PUBLIC;

