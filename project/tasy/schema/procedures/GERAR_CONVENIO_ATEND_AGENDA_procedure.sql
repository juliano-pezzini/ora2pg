-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_convenio_atend_agenda ( nr_atendimento_p bigint, nr_seq_agenda_p bigint, cd_tipo_agenda_p bigint, nm_usuario_p text) AS $body$
DECLARE


	
	
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
cd_tipo_acomodacao_w		smallint;
cd_usuario_convenio_w		varchar(30);
cd_complemento_w			varchar(30)	:= null;
dt_validade_carteira_w		timestamp;
nr_doc_convenio_w		varchar(20);
cd_senha_w			varchar(20)	:= null;
qt_diaria_prev_w			smallint 	:= null;
nr_seq_interno_w			bigint;
cd_plano_w			varchar(10);
cd_doenca_cid_w			varchar(10);
ie_gerar_cid_w			varchar(01)	:= 'N';
ie_gerar_cid_nova_w		varchar(01)	:= 'N';
cd_estabelecimento_w		bigint;
cd_medico_w			varchar(10);
ie_gerar_senha_w			varchar(10);
dt_inicio_vigencia_w		timestamp;
ie_opcao_w			varchar(10);
cd_pessoa_fisica_w		varchar(10);
cd_empresa_w			bigint;
ie_tipo_atendimento_w		smallint;
ie_sugerir_acomodacao_w		varchar(2);
ie_salvar_observacao_w		varchar(1);
ds_observacao_w			varchar(4000);
ie_gerar_guia_w			varchar(03);
ie_tipo_retorno_w			varchar(2);
ie_classif_agenda_w		varchar(5);
nr_seq_classif_agenda_w		bigint;
cd_senha_aut_conv_w		varchar(20);
cd_autorizacao_conv_w		varchar(20);
ie_tipo_guia_w			varchar(2);
ie_tipo_guia_ww			varchar(2);
qt_existe_cid_w			bigint;
ie_dias_autorizados_w		varchar(10);
cd_senha_prov_autor_w		varchar(20);
cd_senha_provisoria_w		varchar(20);
nr_seq_atendimento_w		bigint;
nr_seq_paciente_w			bigint;
ie_gerar_empresa_w		varchar(1) := 'N';
cd_empresa_ref_w			bigint;
nr_seq_origem_w			bigint;
ie_guia_senha_quimio_autor_w	varchar(1);
qt_autorizacao_quimio_w		bigint;
cd_convenio_glosa_w		bigint := null;
cd_categoria_glosa_w		varchar(10) := null;
ie_gerar_glosa_w			varchar(1);
dt_fim_vigencia_autor_w		timestamp;
ie_vigencia_autor_w		varchar(5) := 'N';
dt_vigencia_final_w		timestamp;
ie_utiliza_regra_barras_w	varchar(1) := 'N';
ie_atualizar_tipo_conv_atend_w  varchar(1) := 'N';
ie_tipo_convenio_w		smallint := 2;
ie_regra_acomodacao_lib_w	varchar(1) := 'S';
nr_seq_diag_autor_w		bigint;
ie_import_dig_autor_w		varchar(1);
ie_acomodacao_autoriz_w	varchar(1);
cd_tipo_acomo_autoriz_w		smallint;
nr_ciclo_w smallint;


c01 CURSOR FOR
	SELECT	a.nr_sequencia, a.dt_atualizacao, a.nm_usuario, a.dt_atualizacao_nrec, a.nm_usuario_nrec, a.nr_sequencia_autor, a.dt_diagnostico, a.ie_tipo_diagnostico, a.cd_medico, a.ds_diagnostico
	from	autor_diag_medico a,
		autorizacao_convenio b
	where	a.nr_sequencia_autor = b.nr_sequencia
	and	b.nr_seq_agenda      = nr_seq_agenda_p
	and	not exists ( SELECT 1 from diagnostico_medico x where x.nr_atendimento = b.nr_atendimento and x.dt_diagnostico = a.dt_diagnostico);

c03 CURSOR FOR
	SELECT	nr_sequencia, dt_atualizacao_nrec, nm_usuario_nrec, dt_atualizacao, nm_usuario, nr_seq_autor_diag, cd_doenca, ds_diagnostico, ie_classificacao_doenca, ie_tipo_doenca, ie_unidade_tempo, qt_tempo
	from	autor_diag_doenca
	where	nr_seq_autor_diag = nr_seq_diag_autor_w;
	
c01_w				c01%rowtype;
c03_w				c03%rowtype;	
	

BEGIN

select	max(cd_pessoa_fisica)
into STRICT	cd_pessoa_fisica_w
from	atendimento_paciente
where	nr_atendimento	= nr_atendimento_p;

if (cd_tipo_agenda_p in (3,5)) then

	select	a.cd_convenio,
		a.cd_categoria,
		a.cd_tipo_acomodacao,
		a.cd_usuario_convenio,
		a.cd_complemento,
		a.dt_validade_carteira,
		a.nr_doc_convenio,
		a.cd_senha,
		b.cd_estabelecimento,
		a.cd_plano,
		a.ds_observacao
	into STRICT	cd_convenio_w,
		cd_categoria_w,
		cd_tipo_acomodacao_w,
		cd_usuario_convenio_w,
		cd_complemento_w,
		dt_validade_carteira_w,
		nr_doc_convenio_w,
		cd_senha_w,
		cd_estabelecimento_w,
		cd_plano_w,
		ds_observacao_w
	from	agenda b,
		agenda_consulta a
	where 	a.cd_agenda	= b.cd_agenda
	and	a.nr_sequencia	= nr_seq_agenda_p;
	
	select	ie_classif_agenda
	into STRICT	ie_classif_agenda_w
	from	agenda_consulta
	where	nr_sequencia = nr_seq_agenda_p;

	if (ie_classif_agenda_w IS NOT NULL AND ie_classif_agenda_w::text <> '') then

		select	max(ie_tipo_guia)
		into STRICT	ie_tipo_retorno_w
		from	agenda_classif
		where	cd_classificacao = ie_classif_agenda_w;
	end if;

elsif (cd_tipo_agenda_p = 11)	 then

	select	max(nr_seq_atendimento),
		max(cd_estabelecimento)
	into STRICT	nr_seq_atendimento_w,
		cd_estabelecimento_w
	from	agenda_quimio
	where	nr_sequencia = nr_seq_agenda_p;
	
	select	max(nr_seq_paciente)
	into STRICT	nr_seq_paciente_w
	from	paciente_atendimento
	where	nr_seq_atendimento = nr_seq_atendimento_w;
	
	select 	max(cd_convenio),
		max(cd_categoria),
		max(cd_plano),
		max(cd_usuario_convenio)
	into STRICT	cd_convenio_w,
		cd_categoria_w,
		cd_plano_w,
		cd_usuario_convenio_w
	from	paciente_setor_convenio
	where	nr_seq_paciente = nr_seq_paciente_w;
	
else
	select	a.cd_convenio,
		a.cd_categoria,
		a.cd_tipo_acomodacao,
		a.cd_usuario_convenio,
		a.dt_validade_carteira,
		a.nr_doc_convenio,
		a.cd_plano,
		a.ds_senha,
		a.qt_diaria_prev,
		a.cd_doenca_cid,
		a.cd_medico,
		b.cd_estabelecimento,
		a.ds_observacao,
		a.cd_empresa_ref,
		nr_seq_origem,
		a.ie_tipo_guia
	into STRICT	cd_convenio_w,
		cd_categoria_w,
		cd_tipo_acomodacao_w,
		cd_usuario_convenio_w,
		dt_validade_carteira_w,
		nr_doc_convenio_w,
		cd_plano_w,
		cd_senha_w,
		qt_diaria_prev_w,
		cd_doenca_cid_w,
		cd_medico_w,
		cd_estabelecimento_w,
		ds_observacao_w,
		cd_empresa_ref_w,
		nr_seq_origem_w,
		ie_tipo_guia_ww
	from	agenda b,
		agenda_paciente a
	where 	a.cd_agenda	= b.cd_agenda
	and	a.nr_sequencia	= nr_seq_agenda_p;
	
	/*Inicio regra de acomodacao por convenio/categoria.*/

	select 	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
	into STRICT	ie_regra_acomodacao_lib_w
	from 	tipo_acomodacao
	where	ie_situacao = 'A'
	and		obter_se_acomod_lib_estab(cd_convenio_w,cd_categoria_w, cd_tipo_acomodacao_w, cd_estabelecimento_w) = 'S'
	and 	obter_se_perfil_acomod_regra(obter_perfil_ativo,cd_tipo_acomodacao_w) = 'S';
	
	if (ie_regra_acomodacao_lib_w = 'N' AND cd_tipo_agenda_p = 2) then
		cd_tipo_acomodacao_w := 0;
	end if;
	/*Fim regra de acomodacao por convenio/categoria.*/

	
	
	select	nr_seq_classif_agenda
	into STRICT	nr_seq_classif_agenda_w
	from	agenda_paciente
	where	nr_sequencia = nr_seq_agenda_p;

	if (nr_seq_classif_agenda_w IS NOT NULL AND nr_seq_classif_agenda_w::text <> '') then

		select	max(ie_tipo_guia)
		into STRICT	ie_tipo_retorno_w
		from	agenda_paciente_classif
		where	nr_sequencia = nr_seq_classif_agenda_w;
	end if;	
end if;

select	coalesce(max(ie_atualizar_tipo_conv_atend),'S')
into STRICT	ie_atualizar_tipo_conv_atend_w
from	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_w;

ie_gerar_empresa_w := Obter_Param_Usuario(820, 293, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_empresa_w);
ie_gerar_glosa_w := Obter_Param_Usuario(916, 966, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_glosa_w);
ie_acomodacao_autoriz_w := Obter_Param_Usuario(916, 1161, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_acomodacao_autoriz_w);

if (coalesce(ie_gerar_empresa_w::text, '') = '') then
	ie_gerar_empresa_w := 'N';
end if;

select	obter_data_entrada(nr_atendimento_p)
into STRICT	dt_inicio_vigencia_w
;

ie_gerar_cid_w := Obter_Param_Usuario(39, 99, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_cid_w);
if (coalesce(ie_gerar_cid_w::text, '') = '') then
	ie_gerar_cid_w := 'N';
end if;

ie_gerar_cid_nova_w := Obter_Param_Usuario(871, 47, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_cid_nova_w);
if (coalesce(ie_gerar_cid_nova_w::text, '') = '') then
	ie_gerar_cid_nova_w := 'N';
end if;

ie_gerar_senha_w := Obter_Param_Usuario(916, 115, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_senha_w);
if (coalesce(ie_gerar_senha_w::text, '') = '') then
	ie_gerar_senha_w := 'N';
end if;

ie_sugerir_acomodacao_w := Obter_Param_Usuario(916, 112, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_sugerir_acomodacao_w);
if (coalesce(ie_sugerir_acomodacao_w::text, '') = '') then
	ie_sugerir_acomodacao_w := 'S';
end if;

ie_salvar_observacao_w := Obter_Param_Usuario(916, 246, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_salvar_observacao_w);
if (coalesce(ie_salvar_observacao_w::text, '') = '') then
	ie_salvar_observacao_w := 'N';
end if;

ie_gerar_guia_w := Obter_Param_Usuario(916, 292, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_guia_w);
if (coalesce(ie_gerar_guia_w::text, '') = '') then
	ie_gerar_guia_w := 'S';
end if;

ie_dias_autorizados_w := Obter_Param_Usuario(916, 616, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_dias_autorizados_w);
if (coalesce(ie_dias_autorizados_w::text, '') = '') then
	ie_dias_autorizados_w := 'N';
end if;

ie_vigencia_autor_w := Obter_Param_Usuario(916, 1042, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_vigencia_autor_w);
if (coalesce(ie_vigencia_autor_w::text, '') = '') then
	ie_vigencia_autor_w := 'N';
end if;

ie_opcao_w := Obter_Param_Usuario(916, 128, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_opcao_w);
ie_import_dig_autor_w := Obter_Param_Usuario(916, 1131, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_import_dig_autor_w);

if (ie_opcao_w <> '0') then
	begin
	select	obter_empresa_paciente(cd_pessoa_fisica_w,(ie_opcao_w)::numeric )
	into STRICT	cd_empresa_w
	;
	exception
	when others then
		cd_empresa_w	:= null;
	end;
end if;

if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') and (cd_categoria_w IS NOT NULL AND cd_categoria_w::text <> '') then
	begin

	select	ie_tipo_atendimento
	into STRICT	ie_tipo_atendimento_w
	from	atendimento_paciente
	where	nr_atendimento	=	nr_atendimento_p;		

	/* OS 97623 - Jerusa em 20/06/2008 */

	if	((ie_sugerir_acomodacao_w = 'S') and
		 ((coalesce(cd_tipo_acomodacao_w::text, '') = '') or (cd_tipo_acomodacao_w = 0))) then
		begin
		select	cd_tipo_acomodacao
		into STRICT	cd_tipo_acomodacao_w
		from	categoria_convenio
		where	cd_convenio  = cd_convenio_w
		and	cd_categoria = cd_categoria_w;
		end;
	end if;

	/* OS 94851 - Jerusa em 23/06/2008 */

	if (ie_salvar_observacao_w = 'S') and (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then
		ds_observacao_w	:= substr(ds_observacao_w,1,255);
	else
		ds_observacao_w	:= null;
	end if;
	
	
	If (cd_tipo_agenda_p = 11)	 then
		-- Tratar autorizacao da agenda da quimio	
		
		begin
			select	1
			into STRICT	qt_autorizacao_quimio_w
			from	autorizacao_convenio
			where	nr_seq_paciente = nr_seq_atendimento_w  LIMIT 1;
		exception
			when 	no_data_found then
				qt_autorizacao_quimio_w := 0;
		end;
		
		select	max(coalesce(ie_regra_cart_usuario,'N'))
		into STRICT	ie_utiliza_regra_barras_w
		from	convenio_estabelecimento
		where	cd_convenio = cd_convenio_w
		and 	cd_estabelecimento = cd_estabelecimento_w;
		
		select  MAX(nr_ciclo)
		into STRICT 	nr_ciclo_w
		from 	paciente_atendimento
		where   nr_seq_atendimento = nr_seq_atendimento_w;

		-- Se existir autorizacao para um dia especifico do ciclo, usa-la... 
		If (qt_autorizacao_quimio_w > 0) then
			select	max(cd_senha),
				max(cd_autorizacao),
				max(ie_tipo_guia),
				max(cd_senha_provisoria),
				max(dt_fim_vigencia),
				max(cd_tipo_acomodacao)
			into STRICT	cd_senha_aut_conv_w,
				cd_autorizacao_conv_w,
				ie_tipo_guia_w,
				cd_senha_prov_autor_w,
				dt_fim_vigencia_autor_w,
				cd_tipo_acomo_autoriz_w
			from	autorizacao_convenio
			where	nr_seq_paciente = nr_seq_atendimento_w;
		Else
		-- Senao, utilizar a autorizacao do ciclo em si
			select	max(cd_senha),
				max(cd_autorizacao),
				max(ie_tipo_guia),
				max(cd_senha_provisoria),
				max(dt_fim_vigencia),
				max(cd_tipo_acomodacao)
			into STRICT	cd_senha_aut_conv_w,
				cd_autorizacao_conv_w,
				ie_tipo_guia_w,
				cd_senha_prov_autor_w,
				dt_fim_vigencia_autor_w,
				cd_tipo_acomo_autoriz_w
			from	autorizacao_convenio
			where	nr_seq_paciente_setor = nr_seq_paciente_w
			and		nr_ciclo = nr_ciclo_w;
		End if;
	Else		
		if (cd_tipo_agenda_p in (3,5)) then		
			select	max(cd_senha),
				max(cd_autorizacao),
				max(ie_tipo_guia),
				max(cd_senha_provisoria),
				max(dt_fim_vigencia),
				max(cd_tipo_acomodacao)
			into STRICT	cd_senha_aut_conv_w,
				cd_autorizacao_conv_w,
				ie_tipo_guia_w,
				cd_senha_prov_autor_w,
				dt_fim_vigencia_autor_w,
				cd_tipo_acomo_autoriz_w
			from	autorizacao_convenio
			where	nr_seq_agenda_consulta	= nr_seq_agenda_p;
		

			if (ie_dias_autorizados_w = 'S') or (ie_dias_autorizados_w = 'T') then
				select 	coalesce(max(a.qt_dia_autorizado),qt_diaria_prev_w)
				into STRICT	qt_diaria_prev_w
				from 	estagio_autorizacao b,
					autorizacao_convenio a
				where	b.nr_sequencia		= a.nr_seq_estagio
				and	a.nr_seq_agenda_consulta = nr_seq_agenda_p
				and (a.ie_tipo_autorizacao	= '1' or ie_dias_autorizados_w = 'T')
				and 	b.ie_interno		= '10';
			end if;
		ELSE
			select	max(cd_senha),
				max(cd_autorizacao),
				max(ie_tipo_guia),
				max(cd_senha_provisoria),
				max(dt_fim_vigencia),
				max(cd_tipo_acomodacao)
			into STRICT	cd_senha_aut_conv_w,
				cd_autorizacao_conv_w,
				ie_tipo_guia_w,
				cd_senha_prov_autor_w,
				dt_fim_vigencia_autor_w,
				cd_tipo_acomo_autoriz_w
			from	autorizacao_convenio
			where	nr_seq_agenda	= nr_seq_agenda_p;
		

			if (ie_dias_autorizados_w = 'S') or (ie_dias_autorizados_w = 'T') then
				select 	coalesce(max(a.qt_dia_autorizado),qt_diaria_prev_w)
				into STRICT	qt_diaria_prev_w
				from 	estagio_autorizacao b,
					autorizacao_convenio a
				where	b.nr_sequencia		= a.nr_seq_estagio
				and	a.nr_seq_agenda		= nr_seq_agenda_p
				and (a.ie_tipo_autorizacao	= '1' or ie_dias_autorizados_w = 'T')
				and 	b.ie_interno		= '10';
			end if;
		END IF;
	End if;	
	
	if (ie_utiliza_regra_barras_w = 'S') and (cd_usuario_convenio_w IS NOT NULL AND cd_usuario_convenio_w::text <> '')then
		cd_usuario_convenio_w := null;
	end if;
	
	if (ie_gerar_guia_w	= 'N') then
		nr_doc_convenio_w	:= null;
	elsif (ie_gerar_guia_w	= 'A') then
		nr_doc_convenio_w	:= cd_autorizacao_conv_w;
	end if;
	
	if (coalesce(nr_doc_convenio_W::text, '') = '') then
		nr_doc_convenio_W := obter_guia_conv_atend(nr_atendimento_p, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estabelecimento_w, coalesce(ie_tipo_guia_w, ie_tipo_guia_ww), nr_doc_convenio_W);
	end if;
	
	if (ie_gerar_senha_w	= 'N') then
		cd_senha_w		:= null;
		cd_senha_provisoria_w	:= null;

	elsif (ie_gerar_senha_w	= 'A') then
		cd_senha_w		:= cd_senha_aut_conv_w;
		cd_senha_provisoria_w	:= cd_senha_prov_autor_w;

	end if;
	
	if (ie_gerar_empresa_w	= 'S') and (cd_tipo_agenda_p	= 2) and (cd_empresa_ref_w IS NOT NULL AND cd_empresa_ref_w::text <> '') then
		cd_empresa_w	:= cd_empresa_ref_w;
	end if;
	
	if (ie_vigencia_autor_w = 'S') then
		dt_vigencia_final_w := dt_fim_vigencia_autor_w;
	end if;
	
if ( ie_gerar_glosa_w = 'S' ) then

	begin
	select	max(coalesce(cd_categoria_glosa,''))
	into STRICT	cd_categoria_glosa_w
	from	regra_conv_categ_glosa
	where	cd_convenio = cd_convenio_w
	and	cd_categoria = cd_categoria_w
	and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w) = ie_tipo_atendimento_w;
	
	select	max(coalesce(cd_convenio_glosa,0))
	into STRICT	cd_convenio_glosa_w
	from	regra_conv_categ_glosa	
	where	cd_convenio = cd_convenio_w
	and	cd_categoria = cd_categoria_w
	and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w) = ie_tipo_atendimento_w;
	
	end;
end if;
	
if ( ie_acomodacao_autoriz_w = 'S') then

	cd_tipo_acomodacao_w	:= cd_tipo_acomo_autoriz_w;
		
end if;
	
	select	nextval('atend_categoria_convenio_seq')
	into STRICT	nr_seq_interno_w
	;
	
	
	if (dt_vigencia_final_w IS NOT NULL AND dt_vigencia_final_w::text <> '') and (dt_inicio_vigencia_w IS NOT NULL AND dt_inicio_vigencia_w::text <> '') and (dt_vigencia_final_w < dt_inicio_vigencia_w) then
		
		dt_vigencia_final_w := dt_inicio_vigencia_w;
		
	end if;
	
	insert	into 	atend_categoria_convenio(	nr_atendimento,
			cd_convenio,
			cd_categoria,
			dt_inicio_vigencia,
			dt_atualizacao,
			nm_usuario,
			cd_usuario_convenio,
			nr_doc_convenio,
			cd_tipo_acomodacao,
			dt_validade_carteira,
			cd_senha,
			qt_dia_internacao,
			cd_complemento,
			nr_seq_interno,
			cd_plano_convenio,
			cd_empresa,
			ds_observacao,
			ie_tipo_guia,
			cd_senha_provisoria,
			nr_seq_origem,
			cd_categoria_glosa,
			cd_convenio_glosa,
			dt_final_vigencia
		)
	values (
			nr_atendimento_p,
			cd_convenio_w,
			cd_categoria_w,
			dt_inicio_vigencia_w,
			clock_timestamp(), 
			nm_usuario_p,
			cd_usuario_convenio_w,
			nr_doc_convenio_w,
			CASE WHEN cd_tipo_acomodacao_w=0 THEN null  ELSE cd_tipo_acomodacao_w END ,
			dt_validade_carteira_w,
			cd_Senha_w,
			qt_diaria_prev_w,
			cd_complemento_w,
			nr_seq_interno_w,
			cd_plano_w,
			cd_empresa_w, 
			ds_observacao_w, 
			coalesce(ie_tipo_retorno_w, ie_tipo_guia_w),
			cd_senha_provisoria_w,
			nr_seq_origem_w,
			cd_categoria_glosa_w,
			cd_convenio_glosa_w,
			dt_vigencia_final_w
		);
	if (ie_atualizar_tipo_conv_atend_w = 'S') then
		begin
		
		select 	max(ie_tipo_convenio)
		into STRICT	ie_tipo_convenio_w
		from	convenio
		where	cd_convenio = cd_convenio_w;
		
		if (coalesce(ie_tipo_convenio_w,0) > 0) then
			update	atendimento_paciente
			set	ie_tipo_convenio = ie_tipo_convenio_w
			where	nr_atendimento 	 = nr_atendimento_p;
		end if;
		
		exception
			when others then
			ie_tipo_convenio_w := 2;
		end;
	end if;
	
	end;
end if;

select	count(*)
into STRICT	qt_existe_cid_w
from	Diagnostico_Medico
where	nr_atendimento	=	nr_atendimento_p;


if	((ie_gerar_cid_w  = 'S') or (ie_gerar_cid_nova_w = 'S')) and (cd_doenca_cid_w IS NOT NULL AND cd_doenca_cid_w::text <> '') and (qt_existe_cid_w = 0) and (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') then
	begin

	
	insert 	into Diagnostico_Medico(NR_ATENDIMENTO,
		DT_DIAGNOSTICO,
		IE_TIPO_DIAGNOSTICO,
		CD_MEDICO,
		DT_ATUALIZACAO,
		NM_USUARIO,
		DS_DIAGNOSTICO)
	values (nr_atendimento_p,
		clock_timestamp(),
		2,
		cd_medico_w,
		clock_timestamp(),
		nm_usuario_p,
		null);


	insert	into Diagnostico_Doenca(NR_ATENDIMENTO,
		DT_DIAGNOSTICO,
		CD_DOENCA,
		DT_ATUALIZACAO,
		NM_USUARIO,
		DS_DIAGNOSTICO,
		IE_CLASSIFICACAO_DOENCA)
	values (nr_atendimento_p,
		clock_timestamp(),
		cd_doenca_cid_w,
		clock_timestamp(),
		nm_usuario_p,
		null, 'P');		

	end;
end if;

commit;

select	count(*)
into STRICT	qt_existe_cid_w
from	Diagnostico_Medico
where	nr_atendimento	=	nr_atendimento_p;


if (ie_import_dig_autor_w = 'S') and (qt_existe_cid_w = 0) then
	open C01;
	loop
	fetch C01 into	
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		nr_seq_diag_autor_w	:= c01_w.nr_sequencia;
		
		insert 	into diagnostico_medico(nr_atendimento,
			dt_diagnostico,
			ie_tipo_diagnostico,
			cd_medico,
			dt_atualizacao,
			nm_usuario,
			ds_diagnostico)
		values (nr_atendimento_p,
			c01_w.dt_diagnostico,
			c01_w.ie_tipo_diagnostico,
			c01_w.cd_medico,
			clock_timestamp(),
			nm_usuario_p,
			c01_w.ds_diagnostico);		
		commit;
		
		open C03;
		loop
		fetch C03 into	
			c03_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			insert	into Diagnostico_Doenca(NR_ATENDIMENTO,
				DT_DIAGNOSTICO,
				CD_DOENCA,
				DT_ATUALIZACAO,
				NM_USUARIO,
				DS_DIAGNOSTICO,
				IE_CLASSIFICACAO_DOENCA)
			values (nr_atendimento_p,   /*Integridade  NR_ATENDIMENTO + DT_DIAGNOSTICO*/
				c01_w.dt_diagnostico,/*Integridade  NR_ATENDIMENTO + DT_DIAGNOSTICO*/
				c03_w.CD_DOENCA,
				clock_timestamp(),
				nm_usuario_p,
				c03_w.DS_DIAGNOSTICO,
				c03_w.IE_CLASSIFICACAO_DOENCA);			
			end;
		end loop;
		close C03;		
		
		end;
	end loop;
	close C01;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_convenio_atend_agenda ( nr_atendimento_p bigint, nr_seq_agenda_p bigint, cd_tipo_agenda_p bigint, nm_usuario_p text) FROM PUBLIC;

