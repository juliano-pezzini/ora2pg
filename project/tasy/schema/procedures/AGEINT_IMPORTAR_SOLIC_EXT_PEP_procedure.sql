-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_importar_solic_ext_pep ( nr_seq_ageint_p bigint, nr_seq_solicitacao_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_convenio_w			agenda_integrada. cd_convenio %type;
cd_categoria_w			agenda_integrada. cd_categoria %type;
cd_plano_w			agenda_integrada. cd_plano %type;
cd_pessoa_fisica_w		agenda_integrada. cd_pessoa_fisica %type;
nr_minuto_duracao_w		agenda_integrada_item. nr_minuto_duracao %type;
ie_exame_lab_w      		varchar(1);
ie_tempo_padrao_ageint_w	varchar(3);

C01 CURSOR FOR
    SELECT pee.nr_sequencia,
    	peei.cd_procedimento,
        peei.ie_origem_proced,
        peei.nr_proc_interno,
        peei.nr_seq_exame_lab nr_seq_exame,
        pee.cd_doenca cd_doenca_cid,
        coalesce(pee.nr_atendimento,0) nr_atendimento,
	peei.ie_lado
    from  pedido_exame_externo_item peei,
          pedido_exame_externo pee
    where  peei.nr_seq_pedido  = nr_seq_solicitacao_p
    and  pee.nr_sequencia = peei.nr_seq_pedido
    and  (peei.nr_proc_interno IS NOT NULL AND peei.nr_proc_interno::text <> '')
    and  (((peei.nr_seq_exame_lab IS NOT NULL AND peei.nr_seq_exame_lab::text <> '') and ie_exame_lab_w = 'S') or (coalesce(peei.nr_seq_exame_lab::text, '') = '' and ie_exame_lab_w = 'N') or (ie_exame_lab_w = 'A'));

BEGIN
ie_tempo_padrao_ageint_w := obter_param_usuario(869, 178, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_tempo_padrao_ageint_w);
ie_exame_lab_w := obter_param_usuario(869, 413, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_exame_lab_w);

if  ((coalesce(nr_seq_ageint_p,0) > 0) and (coalesce(nr_seq_solicitacao_p,0) > 0)) then
  select max(cd_convenio),
  	max(cd_categoria),
	max(cd_plano),
	max(cd_pessoa_fisica)
  into STRICT  cd_convenio_w,
  	cd_categoria_w,
	cd_plano_w,
	cd_pessoa_fisica_w
  from 	agenda_integrada
  where nr_sequencia = nr_seq_ageint_p;

  for c01_w in c01 loop
    IF (coalesce(c01_w.cd_doenca_cid::text, '') = '') and (c01_w.nr_atendimento IS NOT NULL AND c01_w.nr_atendimento::text <> '') THEN
        c01_w.cd_doenca_cid  := coalesce(Obter_Ultimo_Cid_Atend_Pac(c01_w.nr_atendimento,'P','C',0), Obter_Ultimo_Cid_Atend_Pac(c01_w.nr_atendimento,'S','C',0));
    END IF;

    if (ie_tempo_padrao_ageint_w = 'S') then
    	nr_minuto_duracao_w := Obter_Tempo_Padrao_Ageint(c01_w.nr_proc_interno, c01_w.cd_procedimento, c01_w.ie_origem_proced, null, null, cd_pessoa_fisica_w, nr_minuto_duracao_w, c01_w.ie_lado, cd_convenio_w, cd_categoria_w, cd_plano_w);
	if (nr_minuto_duracao_w = 0) then
		nr_minuto_duracao_w := null;
	end if;
    end if;

    insert into agenda_integrada_item(
      nr_sequencia,
      nr_seq_agenda_int,
      dt_atualizacao,
      nm_usuario,
      dt_atualizacao_nrec,
      nm_usuario_nrec,
      ie_tipo_agendamento,
      cd_procedimento,
      ie_origem_proced,
      nr_seq_proc_interno,
      cd_doenca_cid,
      ie_lado,
      nr_minuto_duracao,
      nr_seq_pedido_externo
    ) values (
      nextval('agenda_integrada_item_seq'),
      nr_seq_ageint_p,
      clock_timestamp(),
      nm_usuario_p,
      clock_timestamp(),
      nm_usuario_p,
      'E',
      c01_w.cd_procedimento,
      c01_w.ie_origem_proced,
      c01_w.nr_proc_interno,
      c01_w.cd_doenca_cid,
      c01_w.ie_lado,
      nr_minuto_duracao_w,
      c01_w.nr_sequencia
    );
  end loop;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_importar_solic_ext_pep ( nr_seq_ageint_p bigint, nr_seq_solicitacao_p bigint, nm_usuario_p text) FROM PUBLIC;

