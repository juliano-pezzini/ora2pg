-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixar_material_barras_lote ( nr_prescricao_p bigint, cd_material_p bigint, qt_material_p bigint, nr_seq_lote_fornec_p bigint, cd_estabelecimento_p bigint, cd_local_estoque_p bigint, dt_entrada_unidade_p timestamp, cd_tipo_baixa_p bigint, ie_prescrito_p text, nr_seq_lote_p bigint, nr_seq_material_p bigint, ie_acao_p text, nm_usuario_p text, ds_justificativa_p text default null, cd_funcao_p bigint default null, cd_material_exec_p bigint default null) AS $body$
DECLARE


nr_atendimento_w		bigint;
ie_atualiza_estoque_w		varchar(1);
ie_conta_paciente_w		varchar(1);
nr_sequencia_w			bigint;
cd_setor_atendimento_w		integer;
dt_prescricao_w			timestamp;
dt_atendimento_w		timestamp;
dt_alta_atendimento_w		timestamp;
nr_seq_atepacu_w		bigint;
cd_unidade_medida_w		varchar(30);
cd_senha_w			varchar(20);
nr_doc_convenio_w		varchar(20);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
cd_local_estoque_w		smallint;
cd_tipo_baixa_w			smallint;
cd_tipo_baixa_ww		smallint;
qt_total_dispensar_item_w	double precision;
qt_total_item_conta_w		double precision;
nr_seq_tipo_baixa_w		bigint;
cd_material_prescr_w		bigint;
ie_consignado_w			varchar(1);
cd_cgc_fornec_w			varchar(14);
ie_data_conta_lote_w		varchar(15);
ds_funcao_w			varchar(255);
nr_interno_conta_w		bigint;
nr_doc_convenio_regra_w		varchar(255);
ie_responsavel_credito_w	varchar(255);
ie_guia_w			varchar(255);
ie_local_estoque_w		varchar(1) := 'U';
ie_regra_lanc_auto_w		varchar(1);
ie_data_alta_w			varchar(1);
qt_regra_w			integer;
nr_seq_apres_w			integer;
qt_lote_regra_w			integer;
cd_kit_material_w		integer;
cd_componente_kit_w		integer;
ie_entra_conta_w		varchar(1);
ie_lanca_componente_kit_w	varchar(1);
qt_material_kit_w		double precision;
cd_unidade_medida_kit_w		varchar(30);
qt_lote_pend_w			integer;
flag_ok_conta_w			varchar(1) := 'S';
flag_ok_estoq_w			varchar(1) := 'S';
qt_existe_w			integer;
qt_existe_ww			integer;
qt_mat_kit_w			integer;
dt_horario_w			timestamp;
nr_seq_lote_fornec_w		bigint;
nr_seq_lote_fornec_ww		bigint;
nr_seq_kit_est_w		bigint;
ie_prescrito_w			varchar(1);
nr_seq_mat_hor_w		bigint;
cd_motivo_baixa_w		smallint;
dt_inicio_prescr_w		timestamp;
ie_acao_excesso_w		varchar(1);
qt_excedida_w			double precision := 0;
ds_mensagem_w			varchar(255);
cd_plano_w			varchar(20);
qt_material_w			double precision;
qt_material_ww			double precision;
qt_estoque_w			double precision;
nr_seq_mat_w			bigint;
nr_seq_regra_w			bigint;
ie_valor_informado_w		varchar(1) := 'N';
cd_motivo_exc_conta_w		smallint;
cd_motivo_exc_conta_ww		smallint;
ds_compl_motivo_excon_w		varchar(100);
ie_status_lote_w		varchar(3);
nr_prescricao_ww		bigint;
nr_seq_material_ww		integer;
nr_sequencia_ww			bigint;
cd_material_baixa_ww		integer;
nr_interno_conta_ww		bigint;
ie_consiste_regra_uso_w		varchar(2);
ie_gerar_transf_lote_w		parametros_farmacia.ie_gerar_transf_lote%type;
cd_local_estoque_ent_w		local_estoque.cd_local_estoque%type;
ie_via_aplicacao_w		via_aplicacao.ie_via_aplicacao%type;
ie_transf_atend_lote_w		setor_atendimento.ie_transf_atend_lote%type;
nr_seq_regra_adic_w		varchar(10);
cd_classe_material_w		integer;
cd_subgrupo_material_w		smallint;
cd_grupo_material_w		smallint;
qt_tot_material_w		double precision;
qt_dispensar_w			ap_lote_item.qt_dispensar%type;
nr_sequencia_nf_w		bigint;
cd_operacao_nf_w		smallint;
cd_operacao_estoque_w		smallint;
ie_op_consignado_w		varchar(10);
ie_tipo_saldo_w			varchar(1);
ds_erro_w				varchar(2000);
cd_convenio_uso_w		convenio.cd_convenio%type;
cd_categoria_uso_w		categoria_convenio.cd_categoria%type;
ie_saldo_kit_itens_w varchar(1) := 'N';
ie_saldo_kit_itens_ww varchar(1) := 'N';
ie_estoque_lote_w		material_estab.ie_estoque_lote%type;
cd_medico_w				varchar(20);
qt_lote_pendente_w 		bigint;
nr_lote_agrupamento_w	ap_lote.nr_lote_agrupamento%type;
cd_material_estoque_w	material.cd_material_estoque%type;
nr_seq_regra_saldo_w    parametro_estoque.IE_REGRA_SALDO_CONSIG%type;
nr_seq_lote_consig_w    fornecedor_mat_consig_lote.nr_seq_lote%type;
qt_saldo_estoque_w      double precision;


/* ie_acao_p
'B' - barras
'M' - manual
*/


-- Kit material lancado somente na conta
C01 CURSOR FOR
	SELECT	a.cd_material,
		a.qt_material,
		substr(obter_descricao_padrao('MATERIAL','CD_UNIDADE_MEDIDA_CONSUMO',a.cd_material),1,30) cd_unidade_medida_kit
	from	componente_kit a
	where	a.cd_kit_material = cd_kit_material_w
	and	a.ie_entra_conta = 'S'
	and	a.ie_situacao = 'A';

-- Kit estoque lancado na conta e estoque
C02 CURSOR FOR
	SELECT	a.cd_material,
		a.qt_material,
		substr(obter_descricao_padrao('MATERIAL','CD_UNIDADE_MEDIDA_CONSUMO',a.cd_material),1,30) cd_unidade_medida_kit,
		a.nr_seq_lote_fornec,
		b.cd_kit_material
	from	kit_estoque_comp a,
		kit_estoque b
	where	b.nr_sequencia = a.nr_seq_kit_estoque
	and	nr_seq_kit_estoque = nr_seq_kit_est_w;

C03 CURSOR FOR
	SELECT	b.nr_prescricao,
		b.nr_seq_material,
		c.nr_sequencia,
		e.cd_material_baixa
	from	ap_lote_item a,
		prescr_mat_hor b,
		material_atend_paciente c,
		prescr_material e
	where	a.nr_seq_lote = b.nr_seq_lote
	and	a.nr_seq_mat_hor = b.nr_sequencia
	and	c.nr_prescricao = b.nr_prescricao
	and	c.cd_material = b.cd_material
	and	c.nr_seq_lote_ap = b.nr_seq_lote
	and	c.nr_sequencia_prescricao = b.nr_seq_material
	and	e.nr_prescricao = b.nr_prescricao
	and	e.nr_sequencia = b.nr_seq_material
	and	a.nr_seq_lote = nr_seq_lote_p
	and	(a.dt_controle IS NOT NULL AND a.dt_controle::text <> '');


BEGIN

if (cd_funcao_p IS NOT NULL AND cd_funcao_p::text <> '') then
    CALL WHEB_USUARIO_PCK.set_cd_funcao(cd_funcao_p);
end if;

qt_material_w	:= qt_material_p;

ie_prescrito_w 		:= coalesce(ie_prescrito_p,'N');

nr_seq_regra_adic_w := obter_param_usuario(7029, 2, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, nr_seq_regra_adic_w);
ie_local_estoque_w := obter_param_usuario(7029, 20, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_local_estoque_w);
ie_lanca_componente_kit_w := obter_param_usuario(7029, 79, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_lanca_componente_kit_w);
ie_consiste_regra_uso_w := obter_param_usuario(7029, 105, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_regra_uso_w);
cd_local_estoque_ent_w := obter_param_usuario(7029, 108, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_local_estoque_ent_w);

select 	coalesce(max(nr_atendimento),0),
		max(cd_medico)
into STRICT	nr_atendimento_w,
		cd_medico_w
from 	prescr_medica
where 	nr_prescricao = nr_prescricao_p;

if (coalesce(ie_prescrito_w,'S') = 'S') then
		select	max(cd_material),
			max(ie_via_aplicacao)
		into STRICT	cd_material_prescr_w,
			ie_via_aplicacao_w
		from	prescr_material
		where	nr_prescricao 	= nr_prescricao_p
		and	nr_sequencia	= nr_seq_material_p;
end if;

select 	max(obter_convenio_atendimento(nr_atendimento_w)),
	max(substr(obter_dados_categ_conv(nr_atendimento_w,'CA'),1,10)),
	max(substr(obter_dados_categ_conv(nr_atendimento_w,'S'),1,20)),
	max(substr(obter_dados_categ_conv(nr_atendimento_w,'G'),1,20)),
	max(substr(obter_dados_categ_conv(nr_atendimento_w,'P'),1,20))
into STRICT	cd_convenio_w,
	cd_categoria_w,
	cd_senha_w,
	nr_doc_convenio_w,
	cd_plano_w
;

select	count(*)
into STRICT	qt_existe_w
from	categoria_convenio
where	cd_convenio = cd_convenio_w
and	cd_categoria = cd_categoria_w;

if (qt_existe_w = 0) then
	select	max(cd_categoria)
	into STRICT	cd_categoria_w
	from	atend_categoria_convenio
	where	nr_atendimento = nr_atendimento_w
	and	cd_convenio = cd_convenio_w;
end if;

-- Verifique se o material e um kit e nao lanca na conta nem estoque
select	count(*)
into STRICT	qt_mat_kit_w
from	material b,
	material_estab a
where	a.cd_material = b.cd_material
and	a.ie_material_estoque = 'N'
and	b.ie_cobra_paciente = 'N'
and	b.cd_material = cd_material_p
and	cd_estabelecimento = cd_estabelecimento_p;

select	count(*)
into STRICT	qt_existe_w
from	kit_estoque
where	nr_sequencia = nr_seq_lote_fornec_p
and		coalesce(dt_utilizacao::text, '') = '';

if (qt_existe_w > 0) and (qt_mat_kit_w > 0) then
	nr_seq_kit_est_w := nr_seq_lote_fornec_p;
	nr_seq_lote_fornec_ww := null;

else
	qt_mat_kit_w := 0;

	select	count(1)
	into STRICT	qt_existe_w
	from	material_lote_fornec
	where	nr_sequencia = nr_seq_lote_fornec_p;

	nr_seq_lote_fornec_ww := null;

	if (qt_existe_w > 0) then
		nr_seq_lote_fornec_ww := nr_seq_lote_fornec_p;
	end if;
end if;

select	substr(obter_dados_material(coalesce(cd_material_exec_p, cd_material_p),'UMC'),1,30)
into STRICT	cd_unidade_medida_w
;

select	max(cd_setor_atendimento),
	max(nr_seq_interno)
into STRICT	cd_setor_atendimento_w,
	nr_seq_atepacu_w
from 	atend_paciente_unidade
where 	nr_atendimento = nr_atendimento_w
and 	dt_entrada_unidade = dt_entrada_unidade_p;

select 	max(dt_prescricao),
	max(dt_inicio_prescr)
into STRICT	dt_prescricao_w,
	dt_inicio_prescr_w
from 	prescr_medica
where 	nr_prescricao = nr_prescricao_p;


/*para identificar a data que deve ser gerada na material_atend_paciente*/

select	coalesce(max(ie_data_conta_lote), 'P'),
	coalesce(max(ie_regra_lanc_auto), 'N'),
	coalesce(max(ie_gerar_transf_lote),'N')
into STRICT	ie_data_conta_lote_w,
	ie_regra_lanc_auto_w,
	ie_gerar_transf_lote_w
from	parametros_farmacia
where	cd_estabelecimento = cd_estabelecimento_p;

CALL grava_log_tasy(5152, substr('0-dt_entrada_unidade_p='|| to_char(dt_entrada_unidade_p, 'dd/mm/yyyy hh24:mi:ss') || ';cd_material_p=' || cd_material_p || ';cd_material_exec_p='|| cd_material_exec_p ||
' nm_usuario_p='|| nm_usuario_p || ';nr_prescricao_p='|| nr_prescricao_p || ';qt_material_p='||qt_material_p || ' nr_seq_lote_fornec_p= '|| nr_seq_lote_fornec_p ||
' cd_local_estoque_p=' || cd_local_estoque_p || ' cd_tipo_baixa_p=' || cd_tipo_baixa_p || ' nr_seq_material_p=' || nr_seq_material_p ||
' ie_acao_p=' || ie_acao_p || ' nr_seq_lote_p= ' || nr_seq_lote_p || ' ie_prescrito_p=' || ie_prescrito_p || ';CallStack..' || dbms_utility.format_call_stack,1,2000), nr_seq_lote_p);


if (ie_data_conta_lote_w = 'A') then

	dt_prescricao_w := clock_timestamp();

elsif (ie_data_conta_lote_w = 'I') then

	dt_prescricao_w	:= dt_inicio_prescr_w;

elsif (ie_data_conta_lote_w = 'D') then

	select	max(dt_horario)
	into STRICT	dt_horario_w
	from	prescr_mat_hor
	where	nr_seq_material = nr_seq_material_p
	and	nr_seq_lote = nr_seq_lote_p;

	dt_prescricao_w	:= dt_horario_w;

elsif (ie_data_conta_lote_w = 'C') then

	select	max(dt_horario)
	into STRICT	dt_horario_w
	from	prescr_mat_hor
	where	nr_seq_material = nr_seq_material_p
	and	nr_seq_lote = nr_seq_lote_p;

	if (pkg_date_utils.get_time(trunc(dt_horario_w), to_char(dt_horario_w, 'hh24:mi:ss'), 0) >= pkg_date_utils.get_time(trunc(dt_horario_w), to_char(obter_prim_horario_setor(cd_setor_atendimento_w), 'hh24:mi:ss'), 0)) then
		if (obter_data_internacao_dt(nr_atendimento_w) < pkg_date_utils.get_DateTime(dt_horario_w, obter_prim_horario_setor(cd_setor_atendimento_w))) then
			dt_horario_w := pkg_date_utils.get_DateTime(dt_horario_w, dt_horario_w);
		else
			dt_horario_w := pkg_date_utils.get_DateTime(dt_horario_w, obter_prim_horario_setor(cd_setor_atendimento_w));
		end if;
	else
		begin
		if (obter_data_internacao_dt(nr_atendimento_w) < pkg_date_utils.get_DateTime(dt_horario_w - 1, obter_prim_horario_setor(cd_setor_atendimento_w))) then
			if (obter_data_internacao_dt(nr_atendimento_w) < pkg_date_utils.get_DateTime(dt_horario_w, obter_prim_horario_setor(cd_setor_atendimento_w))) then
				dt_horario_w := pkg_date_utils.get_DateTime(dt_horario_w, dt_horario_w);
			else
				dt_horario_w := pkg_date_utils.get_DateTime(dt_horario_w, obter_prim_horario_setor(cd_setor_atendimento_w));
			end if;
		else
			dt_horario_w := pkg_date_utils.get_DateTime(dt_horario_w - 1, obter_prim_horario_setor(cd_setor_atendimento_w));
		end if;
		end;
	end if;

	dt_prescricao_w	:= dt_horario_w;

end if;

if (ie_acao_p = 'B') then

	select 	max(ie_atualiza_estoque),
		max(ie_conta_paciente),
		max(cd_tipo_baixa)
	into STRICT	ie_atualiza_estoque_w,
		ie_conta_paciente_w,
		cd_tipo_baixa_w
	from 	ap_lote
	where 	nr_sequencia = nr_seq_lote_p;

	if (coalesce(cd_tipo_baixa_w::text, '') = '') then

		select	coalesce(max(ie_atualiza_estoque),'S'),
			coalesce(max(ie_conta_paciente),'S')
		into STRICT	ie_atualiza_estoque_w,
			ie_conta_paciente_w
		from 	tipo_baixa_prescricao
		where	ie_prescricao_devolucao = 'P'
		and 	cd_tipo_baixa = cd_tipo_baixa_p
		and 	ie_situacao = 'A';

	end if;

elsif (ie_acao_p = 'M') then

	select	coalesce(max(ie_atualiza_estoque),'S'),
		coalesce(max(ie_conta_paciente),'S')
	into STRICT	ie_atualiza_estoque_w,
		ie_conta_paciente_w
	from 	tipo_baixa_prescricao
	where   ie_prescricao_devolucao = 'P'
	and 	cd_tipo_baixa = cd_tipo_baixa_p
	and 	ie_situacao = 'A';

	cd_tipo_baixa_w:= cd_tipo_baixa_p;

end if;

if (ie_atualiza_estoque_w = 'N') then
	cd_local_estoque_w	:= null;
elsif (ie_atualiza_estoque_w = 'S') then
	cd_local_estoque_w	:= cd_local_estoque_p;
end if;

select 	max(nr_sequencia)
into STRICT	nr_seq_tipo_baixa_w
from 	tipo_baixa_prescricao
where 	cd_tipo_baixa = coalesce(cd_tipo_baixa_w, cd_tipo_baixa_p)
and 	ie_prescricao_devolucao = 'P';

if (ie_prescrito_w = 'S') then

	select	coalesce(max(nr_seq_mat_hor),0)
	into STRICT	nr_seq_mat_hor_w
	from	ap_lote_item a,
		prescr_mat_hor b
	where	a.nr_seq_lote = nr_seq_lote_p
	and	b.nr_seq_material = nr_seq_material_p
	and	a.nr_seq_mat_hor = b.nr_sequencia;

	if (nr_seq_mat_hor_w = 0) then
		goto Final;
	end if;

end if;

select	coalesce(max(ie_transf_atend_lote),'N')
into STRICT	ie_transf_atend_lote_w
from	setor_atendimento
where	cd_setor_atendimento = cd_setor_atendimento_w;

select	max(a.ie_consignado),
		max(b.ie_estoque_lote),
		max(a.cd_material_estoque)
into STRICT	ie_consignado_w,
		ie_estoque_lote_w,
		cd_material_estoque_w
from	material a,
		material_estab b
where	a.cd_material = coalesce(cd_material_exec_p,cd_material_p)
and		b.cd_material = a.cd_material
and 	b.cd_estabelecimento = cd_estabelecimento_p;

select	coalesce(max(IE_REGRA_SALDO_CONSIG),0)
into STRICT	nr_seq_regra_saldo_w
from	parametro_estoque
where	cd_estabelecimento = cd_estabelecimento_p;

qt_material_ww := qt_material_w;

while(qt_material_ww > 0) loop
	begin

    if (ie_consignado_w = '1') then /* Consignado */
		begin
		if (coalesce(nr_seq_lote_fornec_p, 0) > 0) then
			select	max(cd_cgc_fornec)
			into STRICT	cd_cgc_fornec_w
			from	material_lote_fornec
			where	nr_sequencia = nr_seq_lote_fornec_p;
		else
			cd_cgc_fornec_w	:= obter_fornecedor_regra_consig(cd_estabelecimento_p, coalesce(cd_material_estoque_w, coalesce(cd_material_exec_p,cd_material_p)), '1',cd_local_estoque_p);
		end if;
		end;
    elsif (ie_consignado_w = '2') then

        if (ie_estoque_lote_w = 'S') then

            select coalesce(max(nr_seq_lote),0),
                max(cd_fornecedor)
            into STRICT nr_seq_lote_consig_w,
                cd_cgc_fornec_w
            from fornecedor_mat_consig_lote
            where cd_material = coalesce(cd_material_estoque_w, coalesce(cd_material_exec_p, cd_material_p))
            and nr_seq_lote  = nr_seq_lote_fornec_p
            and cd_estabelecimento = cd_estabelecimento_p
            and cd_local_estoque = cd_local_estoque_p
            and dt_mesano_referencia = PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0);

            if (nr_seq_lote_consig_w > 0) then
                qt_saldo_estoque_w := obter_saldo_disp_consig(wheb_usuario_pck.get_cd_estabelecimento,
                    cd_cgc_fornec_w, coalesce(cd_material_estoque_w, coalesce(cd_material_exec_p, cd_material_p)), cd_local_estoque_p, nr_seq_lote_consig_w);
                if (qt_saldo_estoque_w < obter_quantidade_convertida(cd_material_p, qt_material_p, cd_material_estoque_w, 'UME')) then
                    cd_cgc_fornec_w := null;
                end if;
            else
                cd_cgc_fornec_w := null;
            end if;
        end if;

		if (ie_estoque_lote_w = 'N') and (nr_seq_regra_saldo_w > 0) then
			SELECT * FROM obter_fornec_consig_ambos(cd_estabelecimento_p, coalesce(cd_material_estoque_w, coalesce(cd_material_exec_p,cd_material_p)), nr_seq_lote_fornec_ww, cd_local_estoque_p, ie_tipo_saldo_w, cd_cgc_fornec_w) INTO STRICT ie_tipo_saldo_w, cd_cgc_fornec_w;
			if (ie_tipo_saldo_w = 'C') then /* Encontrato saldo Consignado */
				begin
				qt_estoque_w := obter_saldo_estoque_consignado(cd_estabelecimento_p, cd_cgc_fornec_w, coalesce(cd_material_estoque_w, coalesce(cd_material_exec_p,cd_material_p)), cd_local_estoque_p, clock_timestamp(), qt_estoque_w);

				/*Verifica se a quantidade em estoque e o bastante para a baixa */

				if ((qt_estoque_w - qt_material_ww) < 0) then
					qt_material_w := qt_estoque_w;
				else
					qt_material_w := qt_material_ww;
				end if;

				end;
			elsif (ie_tipo_saldo_w = 'N') then /* Encontrado saldo Nao Consignado / Proprio / Normal */
				begin
				cd_cgc_fornec_w := null;
				qt_estoque_w := obter_saldo_disp_estoque(cd_estabelecimento_p, coalesce(cd_material_estoque_w, coalesce(cd_material_exec_p,cd_material_p)), cd_local_estoque_p, PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0));

				/*Verifica se a quantidade em estoque e o bastante para a baixa */

				if ((qt_estoque_w - qt_material_ww) < 0) then
					qt_material_w := qt_estoque_w;
				else
					qt_material_w := qt_material_ww;
				end if;

				end;
			else /* (ie_tipo_saldo_w = 'E')  >>> Sem saldo encontrado */
				begin
				cd_cgc_fornec_w := null;
				qt_material_w := 0;
				end;
			end if;

			if (qt_material_w = 0) then
				/* Nao ha saldo disponivel no local de estoque DS_LOCAL_ESTOQUE para realizar a baixa do material DS_MATERIAL */

				CALL Wheb_mensagem_pck.exibir_mensagem_abort(WHEB_MENSAGEM_PCK.get_texto(354949, 'DS_LOCAL_ESTOQUE='|| OBTER_DESC_LOCAL_ESTOQUE(cd_local_estoque_p) || ';' || 'DS_MATERIAL=' || obter_dados_material(cd_material_p, 'DR')));
			end if;
		end if;
    end if;


    /* Realiza processo de baixa */

	if (ie_gerar_transf_lote_w = 'S') and (coalesce(ie_conta_paciente_w, 'N') = 'N') and (coalesce(ie_atualiza_estoque_w, 'N') = 'S') and (coalesce(ie_transf_atend_lote_w, 'N') = 'S') then

		if (ie_local_estoque_w = 'R') then
			cd_local_estoque_w := obter_local_disp_prescr_item(nr_prescricao_p, nr_seq_material_p, obter_perfil_ativo, 'N', 'N', 'N', nm_usuario_p);
		end if;

		CALL gerar_transf_lote_prescricao(	nr_seq_lote_p, nr_prescricao_p, nr_seq_material_p, nr_atendimento_w, coalesce(cd_material_exec_p,cd_material_p), cd_setor_atendimento_w,
						dt_prescricao_w, cd_cgc_fornec_w, qt_material_w, nr_seq_lote_fornec_ww, cd_local_estoque_w,
						cd_local_estoque_ent_w, cd_estabelecimento_p, nm_usuario_p);

	else
		begin
		if (ie_conta_paciente_w = 'S') and (qt_material_w > 0) then

			--ds_funcao_w	:=  substr('Atendimento do Lote da Prescicao = '|| nr_seq_lote_p || ' ' || 'Prescrito = '|| ie_prescrito_w,1,255);
			ds_funcao_w	:=  substr(WHEB_MENSAGEM_PCK.get_texto(297907, 'NR_SEQ_LOTE='|| nr_seq_lote_p || ';' || 'IE_PRESCRITO=' || ie_prescrito_w),1,255);
			if	((obter_funcao_ativa) = 88) then
				--ds_funcao_w	:= substr('Palm Web - Atendimento do lote da prescricao = '|| nr_seq_lote_p || ' ' || 'Prescrito = '|| ie_prescrito_w,1,255);
				ds_funcao_w	:=substr(WHEB_MENSAGEM_PCK.get_texto(297911, 'NR_SEQ_LOTE='|| nr_seq_lote_p || ';' || 'IE_PRESCRITO=' || ie_prescrito_w),1,255);
			end if;

			if (ie_local_estoque_w = 'R') then
				cd_local_estoque_w := obter_local_disp_prescr_item(nr_prescricao_p, nr_seq_material_p, obter_perfil_ativo, 'N', 'N', 'N', nm_usuario_p);
			end if;

			ie_data_alta_w := obter_param_usuario(7029, 57, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_data_alta_w);

			dt_atendimento_w := clock_timestamp();
			if (ie_data_alta_w = 'S') then
				begin
				if (obter_se_atendimento_alta(nr_atendimento_w) = 'S') then
					dt_alta_atendimento_w := obter_data_alta_atendimento(nr_atendimento_w);

					if (dt_atendimento_w > dt_alta_atendimento_w) then
						dt_atendimento_w := dt_alta_atendimento_w;
					end if;
				end if;
				end;
			end if;

			if (nr_seq_regra_adic_w <> '') then

				select	count(1)
				into STRICT	qt_existe_w
				from	item_adic_cod_barra
				where	nr_seq_regra = nr_seq_regra_adic_w
				and	ie_regra = 'N';

				if (qt_existe_w > 0) then

					select	max(cd_classe_material),
						max(cd_subgrupo_material),
						max(cd_grupo_material)
					into STRICT	cd_classe_material_w,
						cd_subgrupo_material_w,
						cd_grupo_material_w
					from	estrutura_material_v
					where	cd_material = cd_material_p;

					select	count(1)
					into STRICT	qt_existe_w
					from	item_adic_cod_barra a
					where	a.nr_seq_regra = nr_seq_regra_adic_w
					and	a.ie_regra = 'N'
					and	coalesce(a.cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0)
					and	coalesce(a.cd_grupo_material, cd_grupo_material_w) = cd_grupo_material_w
					and	coalesce(a.cd_subgrupo_material, cd_subgrupo_material_w) = cd_subgrupo_material_w
					and	coalesce(a.cd_classe_material, cd_classe_material_w) = cd_classe_material_w
					and	coalesce(a.cd_material, cd_material_p) = cd_material_p;

					if (qt_existe_w > 0) then

						select	coalesce(sum(qt_material), 0)
						into STRICT	qt_tot_material_w
						from	material_atend_paciente
						where	coalesce(cd_motivo_exc_conta::text, '') = ''
						and	nr_seq_lote_ap = nr_seq_lote_p
						and	nr_sequencia_prescricao = nr_seq_material_p
						--and	cd_material = cd_material_p pegar pela seq material
						and	nr_prescricao = nr_prescricao_p
						and	nr_atendimento = nr_atendimento_w;

						select	coalesce(sum(a.qt_dispensar), 0)
						into STRICT	qt_dispensar_w
						from	prescr_mat_hor b,
							ap_lote_item a
						where	a.nr_seq_mat_hor = b.nr_sequencia
						and	coalesce(a.dt_supensao::text, '') = ''
						and	b.nr_seq_material = nr_seq_material_p
						and	a.nr_seq_lote = nr_seq_lote_p;

						if	((qt_material_w + qt_tot_material_w) > qt_dispensar_w) then
							ds_mensagem_w := wheb_mensagem_pck.get_texto(790855, 'CD_MATERIAL='||cd_material_p||';nr_seq_lote='|| nr_seq_lote_p);
							CALL grava_log_ap_lote_hist(nr_seq_lote_p, wheb_mensagem_pck.get_texto(790855), ds_mensagem_w, nm_usuario_p);
							CALL wheb_mensagem_pck.exibir_mensagem_abort(wheb_mensagem_pck.get_texto(192903));
						end if;
					end if;
				end if;
			end if;

			if (qt_mat_kit_w = 0) then
				begin

				select	count(*)
				into STRICT	qt_existe_w
				from	prescr_material
				where	nr_sequencia = nr_seq_material_p
				and	nr_prescricao = nr_prescricao_p;

				if (qt_existe_w = 0) then
					ie_prescrito_w := 'N';
				end if;

				if (ie_consiste_regra_uso_w = 'S') then
					SELECT * FROM obter_regra_uso_mat(nr_atendimento_w, cd_material_p, qt_material_w, cd_setor_atendimento_w, ie_acao_excesso_w, qt_excedida_w, nr_seq_regra_w, ds_mensagem_w, cd_categoria_w, cd_plano_w, cd_cgc_fornec_w, null, dt_atendimento_w, null) INTO STRICT ie_acao_excesso_w, qt_excedida_w, nr_seq_regra_w, ds_mensagem_w;

					if (ie_acao_excesso_w = 'P') then
						if (qt_excedida_w >= qt_material_w) then
							SELECT * FROM obter_convenio_particular_pf(cd_estabelecimento_p, cd_convenio_w, '', dt_atendimento_w, cd_convenio_uso_w, cd_categoria_uso_w) INTO STRICT cd_convenio_uso_w, cd_categoria_uso_w;
							cd_convenio_w := cd_convenio_uso_w;
							cd_categoria_w := cd_categoria_uso_w;
						else
							qt_material_w := (qt_material_w - qt_excedida_w);
							SELECT * FROM obter_convenio_particular_pf(cd_estabelecimento_p, cd_convenio_w, '', dt_atendimento_w, cd_convenio_uso_w, cd_categoria_uso_w) INTO STRICT cd_convenio_uso_w, cd_categoria_uso_w;
							nr_seq_mat_w := inserir_material_atend_pac(nr_atendimento_w, null, cd_material_p, dt_atendimento_w, cd_convenio_uso_w, cd_categoria_uso_w, nr_seq_atepacu_w, nm_usuario_p, qt_excedida_w, cd_local_estoque_w, 1, null, nr_seq_mat_w, null, null);
							CALL atualiza_preco_material(nr_seq_mat_w, nm_usuario_p);
						end if;
					elsif (ie_acao_excesso_w = 'Z') then
						if (qt_excedida_w >= qt_material_w) then
							ie_valor_informado_w := 'S';
						else
							SELECT * FROM obter_convenio_particular_pf(cd_estabelecimento_p, cd_convenio_w, '', dt_atendimento_w, cd_convenio_uso_w, cd_categoria_uso_w) INTO STRICT cd_convenio_uso_w, cd_categoria_uso_w;
							nr_seq_mat_w := inserir_material_atend_pac(nr_atendimento_w, null, cd_material_p, dt_atendimento_w, cd_convenio_w, cd_categoria_w, nr_seq_atepacu_w, nm_usuario_p, qt_excedida_w, cd_local_estoque_w, 1, 'S', nr_seq_mat_w, null, null);
							CALL atualiza_preco_material(nr_seq_mat_w, nm_usuario_p);

						end if;
					elsif (ie_acao_excesso_w = 'M') then
						--grava_log_ap_lote_hist(nr_seq_lote_p, 'Atendimento do Lote', ds_mensagem_w, nm_usuario_p);
						CALL grava_log_ap_lote_hist(nr_seq_lote_p, WHEB_MENSAGEM_PCK.get_texto(297912) , ds_mensagem_w, nm_usuario_p);
					elsif (ie_acao_excesso_w = 'J') then
						--grava_log_ap_lote_hist(nr_seq_lote_p, 'Atendimento do Lote - Necessario informar a Justificativa para o material na conta !', ds_mensagem_w, nm_usuario_p);
						CALL grava_log_ap_lote_hist(nr_seq_lote_p, WHEB_MENSAGEM_PCK.get_texto(297913), ds_mensagem_w, nm_usuario_p);
					elsif (ie_acao_excesso_w = 'E') then
						if (qt_excedida_w > 0) then
							qt_material_w := (qt_material_w - qt_excedida_w);

							if (qt_material_w <= 0) then
								qt_material_w := qt_excedida_w;

								select	max(cd_motivo_exc_conta)
								into STRICT	cd_motivo_exc_conta_w
								from	parametro_faturamento
								where	cd_estabelecimento = cd_estabelecimento_p;

								ds_compl_motivo_excon_w := WHEB_MENSAGEM_PCK.get_texto(297914);
							else
								nr_seq_mat_w := inserir_material_atend_pac(nr_atendimento_w, null, cd_material_p, dt_atendimento_w, cd_convenio_w, cd_categoria_w, nr_seq_atepacu_w, nm_usuario_p, qt_excedida_w, cd_local_estoque_w, 1, 'S', nr_seq_mat_w, null, null);
								CALL atualiza_preco_material(nr_seq_mat_w, nm_usuario_p);
								select	max(nr_interno_conta)
								into STRICT	nr_interno_conta_ww
								from	material_atend_paciente
								where	nr_sequencia = nr_seq_mat_w;

								select	max(cd_motivo_exc_conta)
								into STRICT	cd_motivo_exc_conta_ww
								from	parametro_faturamento
								where	cd_estabelecimento = cd_estabelecimento_p;

								CALL excluir_matproc_conta(nr_seq_mat_w, nr_interno_conta_ww, cd_motivo_exc_conta_ww, WHEB_MENSAGEM_PCK.get_texto(297914), 'M', nm_usuario_p);
							end if;

						end if;
					elsif (ie_acao_excesso_w = 'I') then
						/*grava_log_ap_lote_hist(nr_seq_lote_p, 'Atendimento do Lote - Bloqueado por causa da regra de uso do material(Cadastro de Convenios)',
							'Atendimento do Lote - Bloqueado por causa da regra de uso do material(Cadastro de Convenios).' || ds_mensagem_w, nm_usuario_p);*/
						CALL grava_log_ap_lote_hist(nr_seq_lote_p, WHEB_MENSAGEM_PCK.get_texto(297922), WHEB_MENSAGEM_PCK.get_texto(297922) || ds_mensagem_w, nm_usuario_p);
						--Wheb_mensagem_pck.exibir_mensagem_abort('Atendimento do Lote - Bloqueado por causa da regra de uso do material(Cadastro de Convenios).');
						CALL Wheb_mensagem_pck.exibir_mensagem_abort(WHEB_MENSAGEM_PCK.get_texto(297922));
					end if;
				end if;

				select	nextval('material_atend_paciente_seq')
				into STRICT	nr_sequencia_w
				;

				insert	into material_atend_paciente(nr_sequencia, 	nr_atendimento,  dt_entrada_unidade,  cd_material,  dt_atendimento,
					cd_unidade_medida,  qt_material,  dt_atualizacao,  nm_usuario,  dt_prescricao,
					cd_material_prescricao,  ds_observacao,   nr_prescricao, nr_sequencia_prescricao,  cd_local_estoque,
					dt_atualizacao_estoque,  cd_acao,   cd_setor_atendimento,  qt_executada,
					ie_valor_informado, nm_usuario_original,  cd_cgc_fornecedor, nr_seq_lote_fornec,  cd_material_exec,
					nr_seq_atepacu,  nr_seq_cor_exec,  dt_atualizacao_nrec,  nm_usuario_nrec,
					cd_senha, cd_convenio, cd_categoria, nr_seq_lote_ap, nr_seq_tipo_baixa, ie_auditoria,
					cd_motivo_exc_conta, ds_compl_motivo_excon, ie_via_aplicacao,ds_justificativa, cd_medico_prescritor)
				values (nr_sequencia_w,  nr_atendimento_w, dt_entrada_unidade_p,  cd_material_p,  dt_atendimento_w,
					cd_unidade_medida_w,  qt_material_w, clock_timestamp(),  	nm_usuario_p,  	dt_prescricao_w,
					cd_material_prescr_w, 	ds_funcao_w, nr_prescricao_p, CASE WHEN ie_prescrito_w='S' THEN nr_seq_material_p  ELSE null END , cd_local_estoque_w,  clock_timestamp(), 1,
					cd_setor_atendimento_w, qt_material_w,	ie_valor_informado_w,  nm_usuario_p,  cd_cgc_fornec_w, CASE WHEN nr_seq_lote_fornec_ww=0 THEN null  ELSE nr_seq_lote_fornec_ww END ,
					coalesce(cd_material_exec_p,cd_material_p), nr_seq_atepacu_w,  870,  clock_timestamp(), nm_usuario_p, cd_senha_w,
					cd_convenio_w, CASE WHEN coalesce(cd_categoria_w::text, '') = '' THEN null  ELSE cd_categoria_w END , nr_seq_lote_p, nr_seq_tipo_baixa_w, 'N',
					cd_motivo_exc_conta_w, ds_compl_motivo_excon_w, ie_via_aplicacao_w,substr(ds_justificativa_p,1,255), cd_medico_w);

				CALL atualiza_preco_material(nr_sequencia_w, nm_usuario_p);

				if (ie_regra_lanc_auto_w = 'S') then
					CALL gerar_lanc_automatico_mat(nr_atendimento_w,cd_local_estoque_w,132,nm_usuario_p, nr_sequencia_w,null,null);
				end if;

				select	max(a.nr_interno_conta),
					max(a.ie_responsavel_credito)
				into STRICT	nr_interno_conta_w,
					ie_responsavel_credito_w
				from	material_atend_paciente a
				where	a.nr_sequencia	 = nr_sequencia_w;

				SELECT * FROM tiss_obter_guia('7', nr_interno_conta_w, nr_doc_convenio_regra_w, 'N', null, null, ie_responsavel_credito_w, null, null, ie_guia_w, null, null, null, cd_setor_atendimento_w, null, null, null, dt_prescricao_w, null, nr_sequencia_w, null, nr_prescricao_p, '', null, null) INTO STRICT nr_doc_convenio_regra_w, ie_guia_w;

				update	material_atend_paciente
				set	nr_doc_convenio	= coalesce(nr_doc_convenio_regra_w,nr_doc_convenio_w)
				where	nr_sequencia	= nr_sequencia_w;

				CALL gerar_autor_regra(nr_atendimento_w,
						nr_sequencia_w,
						null,
						null,
						null,
						null,
						'EP',
						nm_usuario_p,
						null,
						null,
						null,
						null,
						null,
						null,
						'',
						'',
						'');

				-- Alterado para somar a quantidade a dispensar de todos os lotes que contem o item
				select	sum(b.qt_dispensar_hor)
				into STRICT	qt_total_dispensar_item_w
				from	prescr_mat_hor b
				where	b.nr_prescricao	= nr_prescricao_p
				and	b.nr_seq_material = nr_seq_material_p;
				--and	obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S';
				select 	coalesce(sum(qt_executada),sum(qt_material))
				into STRICT	qt_total_item_conta_w
				from 	material_atend_paciente
				where 	nr_atendimento	= nr_atendimento_w
				and 	nr_prescricao	= nr_prescricao_p
				and 	nr_sequencia_prescricao	= nr_seq_material_p
				and	coalesce(nr_seq_mat_glosa::text, '') = '';

				select	count(*)
				into STRICT	qt_existe_w
				from	prescr_medica
				where	nr_prescricao = nr_prescricao_p
				and	coalesce(dt_liberacao::text, '') = '';

				-- Baixa o item na prescricao quendo a quantidade da conta e maior ou igual a quantidade a ser dispensada.
				if (qt_existe_w = 0) and (qt_total_dispensar_item_w <= qt_total_item_conta_w) then

					update 	prescr_material
					set 	cd_motivo_baixa = coalesce(cd_tipo_baixa_w, cd_tipo_baixa_p),
						dt_baixa 	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
					where 	nr_prescricao 	= nr_prescricao_p
					and 	nr_sequencia	= nr_seq_material_p;
				end if;
				end;
			end if;

			select	coalesce(max(cd_kit_material),0)
			into STRICT	cd_kit_material_w
			from	material_estab
			where	cd_material = cd_material_p
			and	cd_estabelecimento = cd_estabelecimento_p
			and exists (SELECT 1 from kit_material where cd_kit_material = cd_kit_material);

			if (coalesce(ie_lanca_componente_kit_w,'N') = 'S') and (cd_kit_material_w > 0) then

				open C01;
				loop
				fetch C01 into
					cd_componente_kit_w,
					qt_material_kit_w,
					cd_unidade_medida_kit_w;
				EXIT WHEN NOT FOUND; /* apply on C01 */
					begin

					begin
					select	nextval('material_atend_paciente_seq')
					into STRICT	nr_sequencia_w
					;

					insert	into material_atend_paciente(nr_sequencia, 	nr_atendimento,  dt_entrada_unidade,  cd_material,  dt_atendimento,
						cd_unidade_medida,  qt_material,  dt_atualizacao,  nm_usuario,  dt_prescricao,
						cd_material_prescricao,  ds_observacao,   nr_prescricao, nr_sequencia_prescricao,  cd_local_estoque,
						dt_atualizacao_estoque,  cd_acao,   cd_setor_atendimento,  qt_executada, ie_valor_informado,
						nm_usuario_original,  cd_cgc_fornecedor, nr_seq_lote_fornec,  cd_material_exec, nr_seq_atepacu,
						nr_seq_cor_exec,  dt_atualizacao_nrec,  nm_usuario_nrec, cd_senha,
						cd_convenio, cd_categoria, nr_seq_lote_ap, nr_seq_tipo_baixa, ie_auditoria, cd_kit_material,ds_justificativa, cd_medico_prescritor)
					values (nr_sequencia_w,  nr_atendimento_w, dt_entrada_unidade_p,  cd_componente_kit_w,  dt_atendimento_w,
						cd_unidade_medida_kit_w,  (qt_material_kit_w * qt_material_w), clock_timestamp(),  	nm_usuario_p,  	dt_prescricao_w,
						cd_componente_kit_w, 	ds_funcao_w, nr_prescricao_p, null, cd_local_estoque_w,
						clock_timestamp(), 1, cd_setor_atendimento_w, (qt_material_kit_w * qt_material_w), 'N',
						nm_usuario_p,  cd_cgc_fornec_w, null, cd_componente_kit_w, nr_seq_atepacu_w,
						870,  clock_timestamp(), nm_usuario_p, cd_senha_w,
						cd_convenio_w, CASE WHEN coalesce(cd_categoria_w::text, '') = '' THEN null  ELSE cd_categoria_w END , nr_seq_lote_p, nr_seq_tipo_baixa_w, 'N',
						cd_kit_material_w,substr(ds_justificativa_p,1,255), cd_medico_w);

					CALL atualiza_preco_material(nr_sequencia_w, nm_usuario_p);

					if (ie_regra_lanc_auto_w = 'S') then
						CALL gerar_lanc_automatico_mat(nr_atendimento_w,cd_local_estoque_w,132,nm_usuario_p, nr_sequencia_w,null,null);
					end if;

					select	max(a.nr_interno_conta),
						max(a.ie_responsavel_credito)
					into STRICT	nr_interno_conta_w,
						ie_responsavel_credito_w
					from	material_atend_paciente a
					where	a.nr_sequencia	 = nr_sequencia_w;

					SELECT * FROM tiss_obter_guia('7', nr_interno_conta_w, nr_doc_convenio_regra_w, 'N', null, null, ie_responsavel_credito_w, null, null, ie_guia_w, null, null, null, cd_setor_atendimento_w, null, null, null, dt_prescricao_w, null, nr_sequencia_w, null, nr_prescricao_p, '', null, null) INTO STRICT nr_doc_convenio_regra_w, ie_guia_w;

					update	material_atend_paciente
					set	nr_doc_convenio	= coalesce(nr_doc_convenio_regra_w,nr_doc_convenio_w)
					where	nr_sequencia	= nr_sequencia_w;

					CALL gerar_autor_regra(nr_atendimento_w,
							nr_sequencia_w,
							null,
							null,
							null,
							null,
							'EP',
							nm_usuario_p,
							null,
							null,
							null,
							null,
							null,
							null,
							'',
							'',
							'');
					exception
						when others then
						flag_ok_conta_w := 'N';
					end;


					end;
				end loop;
				close C01;

			end if;

			if (qt_mat_kit_w > 0) then
				open C02;
				loop
				fetch C02 into
					cd_componente_kit_w,
					qt_material_kit_w,
					cd_unidade_medida_kit_w,
					nr_seq_lote_fornec_w,
					cd_kit_material_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin


				  ie_saldo_kit_itens_w := obter_disp_estoque(cd_componente_kit_w, (cd_local_estoque_p)::numeric , cd_estabelecimento_p, 0, qt_material_kit_w, '', ie_saldo_kit_itens_w);

					if (ie_saldo_kit_itens_w = 'S') then
						ie_saldo_kit_itens_ww := 'S';
					end if;


					select	coalesce(ie_consignado,'0')
					into STRICT	ie_consignado_w
					from	material
					where	cd_material = cd_componente_kit_w;

					if (ie_consignado_w <> '0') then
						begin

						if (coalesce(nr_seq_lote_fornec_w, 0) > 0) then
							select	cd_cgc_fornec
							into STRICT	cd_cgc_fornec_w
							from	material_lote_fornec
							where	nr_sequencia = nr_seq_lote_fornec_w;

							if (ie_consignado_w = '2') then
								begin
								select	coalesce(nr_sequencia_nf,0)
								into STRICT	nr_sequencia_nf_w
								from	material_lote_fornec
								where	nr_sequencia = nr_seq_lote_fornec_w;

								if (nr_sequencia_nf_w > 0) then
									select	cd_operacao_nf
									into STRICT	cd_operacao_nf_w
									from	nota_fiscal
									where	nr_sequencia = nr_sequencia_nf_w;

									select	coalesce(cd_operacao_estoque,0)
									into STRICT	cd_operacao_estoque_w
									from	operacao_nota
									where	cd_operacao_nf = cd_operacao_nf_w;

									select	coalesce(max(ie_consignado),'X')
									into STRICT	ie_op_consignado_w
									from	operacao_estoque
									where	cd_operacao_estoque = cd_operacao_estoque_w;

									if (ie_op_consignado_w = '0') then
										cd_cgc_fornec_w := null;
									end if;
								end if;
								exception
								when others then
									null;
								end;
							end if;
						else
							cd_cgc_fornec_w	:= obter_fornecedor_regra_consig(
										cd_estabelecimento_p,
										cd_componente_kit_w,
										'1',cd_local_estoque_p);
						end if;
						end;
					end if;

					begin
					select	nextval('material_atend_paciente_seq')
					into STRICT	nr_sequencia_w
					;

					insert	into material_atend_paciente(nr_sequencia, 	nr_atendimento,  dt_entrada_unidade,  cd_material,  dt_atendimento,
						cd_unidade_medida,  qt_material,  dt_atualizacao,  nm_usuario,  dt_prescricao,
						cd_material_prescricao,  ds_observacao,   nr_prescricao, nr_sequencia_prescricao,  cd_local_estoque,
						dt_atualizacao_estoque,  cd_acao,   cd_setor_atendimento,  qt_executada, ie_valor_informado,
						nm_usuario_original,  cd_cgc_fornecedor, nr_seq_lote_fornec,  cd_material_exec, nr_seq_atepacu,
						nr_seq_cor_exec,  dt_atualizacao_nrec,  nm_usuario_nrec, cd_senha,
						cd_convenio, cd_categoria, nr_seq_lote_ap, nr_seq_tipo_baixa, ie_auditoria, nr_seq_kit_estoque,ds_justificativa, cd_medico_prescritor)
					values (nr_sequencia_w,  nr_atendimento_w, dt_entrada_unidade_p,  cd_componente_kit_w,  dt_atendimento_w,
						cd_unidade_medida_kit_w,  qt_material_kit_w, clock_timestamp(),  	nm_usuario_p,  	dt_prescricao_w,
						cd_componente_kit_w, 	ds_funcao_w, nr_prescricao_p, null, cd_local_estoque_w,
						clock_timestamp(), 1, cd_setor_atendimento_w, qt_material_kit_w, 'N',
						nm_usuario_p,  cd_cgc_fornec_w, nr_seq_lote_fornec_w, cd_componente_kit_w, nr_seq_atepacu_w,
						870,  clock_timestamp(), nm_usuario_p, cd_senha_w,
						cd_convenio_w, cd_categoria_w, nr_seq_lote_p, nr_seq_tipo_baixa_w, 'N', nr_seq_kit_est_w,substr(ds_justificativa_p,1,255), cd_medico_w);

					CALL atualiza_preco_material(nr_sequencia_w, nm_usuario_p);

					if (ie_regra_lanc_auto_w = 'S') then
						CALL gerar_lanc_automatico_mat(nr_atendimento_w,cd_local_estoque_w,132,nm_usuario_p, nr_sequencia_w,null,null);
					end if;

					select	max(a.nr_interno_conta),
						max(a.ie_responsavel_credito)
					into STRICT	nr_interno_conta_w,
						ie_responsavel_credito_w
					from	material_atend_paciente a
					where	a.nr_sequencia	 = nr_sequencia_w;

					SELECT * FROM tiss_obter_guia('7', nr_interno_conta_w, nr_doc_convenio_regra_w, 'N', null, null, ie_responsavel_credito_w, null, null, ie_guia_w, null, null, null, cd_setor_atendimento_w, null, null, null, dt_prescricao_w, null, nr_sequencia_w, null, nr_prescricao_p, '', null, null) INTO STRICT nr_doc_convenio_regra_w, ie_guia_w;

					update	material_atend_paciente
					set	nr_doc_convenio	= coalesce(nr_doc_convenio_regra_w,nr_doc_convenio_w)
					where	nr_sequencia	= nr_sequencia_w;

					CALL gerar_autor_regra(nr_atendimento_w,
							nr_sequencia_w,
							null,
							null,
							null,
							null,
							'EP',
							nm_usuario_p,
							null,
							null,
							null,
							null,
							null,
							null,
							'',
							'',
							'');

					update	kit_estoque
					set	dt_utilizacao = clock_timestamp(),
						nr_atendimento = nr_atendimento_w,
						nr_prescricao = nr_prescricao_p
					where	nr_sequencia = nr_seq_kit_est_w;

					select 	max(cd_tipo_baixa)
					into STRICT	cd_tipo_baixa_ww
					from 	tipo_baixa_prescricao
					where	ie_prescricao_devolucao = 'P'
					and	ie_tipo_padrao = 'S'
					and	ie_atualiza_estoque = 'N'
					and	ie_conta_paciente = 'N';

					select	count(*)
					into STRICT	qt_existe_w
					from	prescr_mat_hor b,
						ap_lote a
					where	a.ie_status_lote = 'G'
					and	a.nr_sequencia <> nr_seq_lote_p
					and	a.nr_sequencia = b.nr_seq_lote
					and	b.nr_prescricao	= a.nr_prescricao
					and	b.nr_prescricao	= nr_prescricao_p
					and	b.nr_seq_material = nr_seq_material_p
					and	obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S';

					if (qt_existe_w = 0) then
						update 	prescr_material
						set 	cd_motivo_baixa = coalesce(cd_tipo_baixa_ww, cd_tipo_baixa_p),
							dt_baixa = clock_timestamp(),
							nm_usuario = 'BMBL004'
						where 	nr_prescricao = nr_prescricao_p
						and 	nr_sequencia = nr_seq_material_p;
					end if;

					exception
						when others then
						flag_ok_conta_w := 'N';
					end;

					end;
				end loop;
				close C02;
        if (ie_saldo_kit_itens_ww = 'N') then
          CALL Wheb_mensagem_pck.exibir_mensagem_abort(WHEB_MENSAGEM_PCK.GET_TEXTO(1107056) || '. '|| WHEB_MENSAGEM_PCK.GET_TEXTO(1107057) || ': ' || nr_seq_kit_est_w);
        end if;
			end if;
		elsif (ie_atualiza_estoque_w = 'S') and (qt_mat_kit_w = 0) then
			--begin
			CALL gerar_prescricao_estoque(
				cd_estabelecimento_p,
				nr_atendimento_w,
				dt_entrada_unidade_p,
				coalesce(cd_material_exec_p,cd_material_p),
				dt_prescricao_w,
				1,
				cd_local_estoque_w,
				qt_material_w,
				cd_setor_atendimento_w,
				cd_unidade_medida_w,
				nm_usuario_p, 'I',
				nr_prescricao_p,
				0,
				0,
				0,
				cd_cgc_fornec_w,
				null,
				nr_seq_lote_fornec_ww,
				0,
				null,
				nr_seq_lote_p,
				null,
				null,
				null);
			/*exception
				when others then
				flag_ok_estoq_w := 'N';
				ds_erro_w := 'cd_estabelecimento_p='|| cd_estabelecimento_p || ';nr_atendimento_w='|| nr_atendimento_w ||';dt_entrada_unidade_p='||to_char(dt_entrada_unidade_p, 'dd/mm/yyyy hh24:mi:ss') ||
				';cd_material_p=' || cd_material_p || ';dt_prescricao_w=' || to_char(dt_prescricao_w, 'dd/mm/yyyy hh24:mi:ss') || ';cd_local_estoque_w='||cd_local_estoque_w||';qt_material_w='||qt_material_w||';cd_setor_atendimento_w='||cd_setor_atendimento_w||
				';cd_unidade_medida_w='||cd_unidade_medida_w||';nm_usuario_p='||nm_usuario_p||';nr_prescricao_p='||nr_prescricao_p||';cd_cgc_fornec_w='||cd_cgc_fornec_w||';nr_seq_lote_fornec_ww='|| nr_seq_lote_fornec_ww||
				';nr_seq_lote_p='||nr_seq_lote_p;
				gravar_log_tasy(5134, substr(ds_erro_w || ';CallStack..'|| dbms_utility.format_call_stack,1,2000), nm_usuario_p);
			end;*/
		end if;

		if (ie_conta_paciente_w = 'N') and (ie_atualiza_estoque_w = 'N') then

			select	count(count(*))
			into STRICT	qt_lote_pend_w
			from	ap_lote a,
				prescr_mat_hor b
			where	a.nr_sequencia = b.nr_seq_lote
			and	a.nr_prescricao = nr_prescricao_p
			and	b.nr_seq_material = nr_seq_material_p
			and	a.nr_sequencia <> nr_seq_lote_p
			and	a.ie_status_lote = 'G'
			group by a.nr_sequencia;

			if (qt_lote_pend_w = 0) then

				update 	prescr_material
				set 	cd_motivo_baixa = coalesce(cd_tipo_baixa_w, cd_tipo_baixa_p),
					dt_baixa 	= clock_timestamp(),
					nm_usuario	= 'BMBL002'
				where 	nr_prescricao 	= nr_prescricao_p
				and 	nr_sequencia	= nr_seq_material_p;

			end if;

		end if;

		if (flag_ok_conta_w = 'S') or (flag_ok_estoq_w = 'S') then

			select	count(*)
			into STRICT	qt_existe_w
			from	ap_lote_item
			where	nr_seq_lote = nr_seq_lote_p
			and	coalesce(dt_controle::text, '') = ''
			and	cd_material = cd_material_p;

			if (qt_existe_w > 0) then
				update	ap_lote_item
				set	dt_controle = clock_timestamp(),
					dt_atualizacao = clock_timestamp(),
					nm_usuario = 'BMBL003'
				where	nr_seq_lote = nr_seq_lote_p
				and	cd_material = cd_material_p;
			end if;
		end if;



		select	count(*)
		into STRICT	qt_existe_w
		from	ap_lote_item
		where	nr_seq_lote = nr_seq_lote_p
		and	coalesce(dt_controle::text, '') = ''
		and	coalesce(dt_supensao::text, '') = ''
		and	qt_dispensar > 0
		and	ie_prescrito = 'S';

		if (qt_existe_w = 0) then
			update	ap_lote
			set		dt_atend_farmacia = clock_timestamp(),
					nm_usuario_atend = nm_usuario_p,
					ie_status_lote   = 'A'
			where 	nr_sequencia = nr_seq_lote_p;

			select	coalesce(max(nr_lote_agrupamento),0)
			into STRICT	nr_lote_agrupamento_w
			from 	ap_lote
			where 	nr_sequencia = nr_seq_lote_p;

			if (nr_lote_agrupamento_w > 0) then
				select	count(*)
				into STRICT	qt_lote_pendente_w
				from	ap_lote
				where 	nr_lote_agrupamento = nr_lote_agrupamento_w
				and 	ie_status_lote not in ('C','S','CA','A');

				if (qt_lote_pendente_w = 0) then
					update	ap_lote
					set		dt_atend_farmacia = clock_timestamp(),
							nm_usuario_atend = nm_usuario_p,
							ie_status_lote   = 'A'
					where	nr_sequencia = nr_lote_agrupamento_w;
				end if;
			end if;
		end if;

		if (ie_conta_paciente_w	= 'N') then
			update	ap_lote
			set	cd_tipo_baixa = cd_tipo_baixa_w
			where 	nr_sequencia = nr_seq_lote_p;
		end if;


		if (ie_prescrito_w = 'N') then

			insert into ap_lote_item(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_lote,
					nr_seq_mat_hor,
					ie_prescrito,
					qt_dispensar,
					cd_material,
					cd_unidade_medida,
					ie_urgente)
				values (nextval('ap_lote_item_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_lote_p,
					null,
					'N',
					qt_material_w,
					cd_material_p,
					cd_unidade_medida_w,
					'N');
		end if;

		select	count(*)
		into STRICT	qt_regra_w
		from	regra_controle_receb;

		select	count(*)
		into STRICT	qt_lote_regra_w
		from	ap_lote_controle_receb
		where	nr_seq_lote = nr_seq_lote_p;

		if (qt_regra_w > 0) and (qt_lote_regra_w <= 0) then

			select	coalesce(min(nr_sequencia),0)
			into STRICT	nr_seq_apres_w
			from	regra_controle_receb;

			select	nextval('ap_lote_controle_receb_seq')
			into STRICT	nr_sequencia_w
			;

			insert into ap_lote_controle_receb(
				nr_sequencia,
				nr_seq_lote,
				nr_seq_apres,
				nm_usuario_nrec,
				nm_usuario,
				dt_atualizacao_nrec,
				dt_atualizacao)
			values (	nr_sequencia_w,
				nr_seq_lote_p,
				nr_seq_apres_w,
				nm_usuario_p,
				nm_usuario_p,
				clock_timestamp(),
				clock_timestamp());

		end if;

		cd_motivo_baixa_w := Obter_Param_Usuario(7029, 54, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_motivo_baixa_w);
		if (cd_motivo_baixa_w > 0) and (nr_seq_mat_hor_w > 0) then
			update	prescr_mat_hor
			set	cd_motivo_baixa = cd_motivo_baixa_w
			where	nr_seq_lote = nr_seq_lote_p
			and	nr_sequencia = nr_seq_mat_hor_w;
		end if;

		end;
	end if;

	/* Fim processo baixa */

	qt_material_ww := qt_material_ww - (qt_material_w + qt_excedida_w);

	end;
end loop;

<<Final>>
qt_existe_w := 0;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixar_material_barras_lote ( nr_prescricao_p bigint, cd_material_p bigint, qt_material_p bigint, nr_seq_lote_fornec_p bigint, cd_estabelecimento_p bigint, cd_local_estoque_p bigint, dt_entrada_unidade_p timestamp, cd_tipo_baixa_p bigint, ie_prescrito_p text, nr_seq_lote_p bigint, nr_seq_material_p bigint, ie_acao_p text, nm_usuario_p text, ds_justificativa_p text default null, cd_funcao_p bigint default null, cd_material_exec_p bigint default null) FROM PUBLIC;

