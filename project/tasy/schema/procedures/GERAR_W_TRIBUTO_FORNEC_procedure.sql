-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_tributo_fornec ( cd_estabelecimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, cd_cgc_p text, cd_pessoa_fisica_p text, ie_tipo_pessoa_p text, cd_tipo_pessoa_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_origem_w		varchar(5);
nr_documento_w		numeric(20);
dt_referencia_w		timestamp;
dt_liquidacao_w		timestamp;
vl_documento_w		double precision;
vl_tributo_w		double precision;
ie_tipo_tributo_w		varchar(255);
cd_cgc_w		varchar(14);
cd_pessoa_fisica_w	varchar(10);
vl_ir_w			double precision;
vl_pis_w			double precision;
vl_inss_w			double precision;
vl_iss_w			double precision;
VL_PIS_COFINS_W	double precision;
cont_w			integer;
cd_tipo_pessoa_w		bigint;


c01 CURSOR FOR
SELECT	ie_origem,
	nr_documento,
	dt_referencia,
	dt_liquidacao,
	vl_documento,
	vl_tributo,
	ie_tipo_tributo,
	cd_cgc,
	cd_pessoa_fisica,
	cd_tipo_pessoa
from (
	SELECT	'T' ie_origem,
		a.nr_titulo nr_documento,
		a.dt_vencimento_atual dt_referencia,
		a.dt_liquidacao,
		a.vl_titulo vl_documento,
		b.vl_imposto vl_tributo,
		c.ie_tipo_tributo,
		a.cd_cgc,
		a.cd_pessoa_fisica,
		d.cd_tipo_pessoa
	FROM titulo_pagar a
LEFT OUTER JOIN titulo_pagar_imposto b ON (a.nr_titulo = b.nr_titulo)
LEFT OUTER JOIN pessoa_juridica d ON (a.cd_cgc = d.cd_cgc)
LEFT OUTER JOIN tributo c ON (b.cd_tributo = c.cd_tributo)
WHERE a.cd_estabelecimento	= cd_estabelecimento_p and a.ie_situacao		= 'L'  and (d.cd_tipo_pessoa		= cd_tipo_pessoa_p or coalesce(cd_tipo_pessoa_p::text, '') = '') and coalesce(a.nr_seq_nota_fiscal::text, '') = '' and coalesce(a.nr_repasse_terceiro::text, '') = ''
	
union all

	select	'R' ie_origem,
		b.nr_repasse_terceiro nr_documento,
		c.dt_vencimento dt_referencia,
		null dt_liquidacao,
		c.vl_vencimento vl_documento,
		d.vl_imposto vl_tributo,
		e.ie_tipo_tributo,
		a.cd_cgc,
		a.cd_pessoa_fisica,
		f.cd_tipo_pessoa
	FROM repasse_terceiro b, repasse_terceiro_venc c
LEFT OUTER JOIN repasse_terc_venc_trib d ON (c.nr_sequencia = d.nr_seq_rep_venc)
LEFT OUTER JOIN tributo e ON (d.cd_tributo = e.cd_tributo)
, terceiro a
LEFT OUTER JOIN pessoa_juridica f ON (a.cd_cgc = f.cd_cgc)
WHERE a.nr_sequencia		= b.nr_seq_terceiro and b.nr_repasse_terceiro	= c.nr_repasse_terceiro   and a.cd_estabelecimento	= cd_estabelecimento_p  and (f.cd_tipo_pessoa		= cd_tipo_pessoa_p  or coalesce(cd_tipo_pessoa_p::text, '') = '') and b.ie_status		= 'F'
	 
union all

	select	'NF' ie_origem,
		somente_numero(a.nr_nota_fiscal) nr_documento,
		a.dt_emissao  dt_referencia,
		null dt_liquidacao,
		a.vl_mercadoria vl_documento,
		b.vl_tributo,
		c.ie_tipo_tributo,
		a.cd_cgc,
		a.cd_pessoa_fisica,
		d.cd_tipo_pessoa
	FROM nota_fiscal a
LEFT OUTER JOIN nota_fiscal_trib b ON (a.nr_sequencia = b.nr_sequencia)
LEFT OUTER JOIN pessoa_juridica d ON (a.cd_cgc = d.cd_cgc)
LEFT OUTER JOIN tributo c ON (b.cd_tributo = c.cd_tributo)
WHERE a.ie_situacao		= '1' and (a.dt_atualizacao_estoque IS NOT NULL AND a.dt_atualizacao_estoque::text <> '')  and (d.cd_tipo_pessoa		= cd_tipo_pessoa_p or coalesce(cd_tipo_pessoa_p::text, '') = '') and a.cd_estabelecimento	= cd_estabelecimento_p ) alias10
where (cd_cgc				= cd_cgc_p or coalesce(cd_cgc_p::text, '') = '')
and (cd_pessoa_fisica			= cd_pessoa_fisica_p or coalesce(cd_pessoa_fisica_p::text, '') = '')
and	((ie_tipo_pessoa_p = 'A') or
	 (ie_tipo_pessoa_p = 'PF' AND cd_pessoa_fisica IS NOT NULL AND cd_pessoa_fisica::text <> '') or
	 (ie_tipo_pessoa_p = 'PJ' AND cd_cgc IS NOT NULL AND cd_cgc::text <> ''))
and (trunc(dt_referencia, 'dd') 	between dt_inicial_p and dt_final_p);


BEGIN

delete	FROM w_tributo_fornec
where	nm_usuario = nm_usuario_p
or	dt_atualizacao < clock_timestamp() - interval '1 days';

open c01;
loop
fetch c01 into
	ie_origem_w,
	nr_documento_w,
	dt_referencia_w,
	dt_liquidacao_w,
	vl_documento_w,
	vl_tributo_w,
	ie_tipo_tributo_w,
	cd_cgc_w,
	cd_pessoa_fisica_w,
	cd_tipo_pessoa_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	VL_IR_w			:= 0;
	VL_PIS_w		:= 0;
	VL_INSS_w		:= 0;
	VL_ISS_w		:= 0;
	VL_PIS_COFINS_W	:= 0;

	if (ie_tipo_tributo_w = 'IR') then
		VL_IR_w	:= vl_tributo_w;
	elsif (ie_tipo_tributo_w = 'PIS') then
		VL_PIS_w	:= vl_tributo_w;
	elsif (ie_tipo_tributo_w = 'INSS') then
		VL_INSS_w	:= vl_tributo_w;
	elsif (ie_tipo_tributo_w = 'ISS') then
		VL_ISS_w	:= vl_tributo_w;
	elsif (ie_tipo_tributo_w = 'PISCOFINSCSLL') then
		VL_PIS_COFINS_W	:= vl_tributo_w;
	end if;

	select	count(*)
	into STRICT	cont_w
	from	w_tributo_fornec
	where	nm_usuario	= nm_usuario_p
	and	ie_origem	= ie_origem_w
	and	nr_documento	= nr_documento_w
	and (cd_cgc	= cd_cgc_w or coalesce(cd_cgc_w::text, '') = '')
	and (cd_pessoa_fisica = cd_pessoa_fisica_w or coalesce(cd_pessoa_fisica_w::text, '') = '');

	if (cont_w = 0) then
		insert into w_tributo_fornec(NR_SEQUENCIA,
			DT_ATUALIZACAO,
			NM_USUARIO,
			IE_ORIGEM,
			NR_DOCUMENTO,
			CD_CGC,
			CD_PESSOA_FISICA,
			DT_REFERENCIA,
			DT_LIQUIDACAO,
			VL_DOCUMENTO,
			VL_IR,
			VL_PIS,
			VL_INSS,
			VL_ISS,
			CD_TIPO_PESSOA,
			VL_PIS_COFINS)
		values (nextval('w_tributo_fornec_seq'),
			clock_timestamp(),
			NM_USUARIO_p,
			IE_ORIGEM_w,
			NR_DOCUMENTO_w,
			CD_CGC_w,
			CD_PESSOA_FISICA_w,
			DT_REFERENCIA_w,
			DT_LIQUIDACAO_w,
			VL_DOCUMENTO_w,
			VL_IR_w,
			VL_PIS_w,
			VL_INSS_w,
			VL_ISS_w,
			CD_TIPO_PESSOA_W,
			VL_PIS_COFINS_W);
	else
		update	w_tributo_fornec
		set	VL_IR		= VL_IR + VL_IR_w,
			VL_PIS		= VL_PIS + VL_PIS_w,
			VL_INSS		= VL_INSS + VL_INSS_w,
			VL_ISS		= VL_ISS + VL_ISS_w,
			VL_PIS_COFINS	= VL_PIS_COFINS + VL_PIS_COFINS_w
		where	nm_usuario	= nm_usuario_p
		and	ie_origem	= ie_origem_w
		and	nr_documento	= nr_documento_w
		and (cd_cgc	= cd_cgc_w or coalesce(cd_cgc_w::text, '') = '')
		and (cd_pessoa_fisica = cd_pessoa_fisica_w or coalesce(cd_pessoa_fisica_w::text, '') = '');
	end if;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_tributo_fornec ( cd_estabelecimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, cd_cgc_p text, cd_pessoa_fisica_p text, ie_tipo_pessoa_p text, cd_tipo_pessoa_p bigint, nm_usuario_p text) FROM PUBLIC;

