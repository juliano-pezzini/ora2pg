-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE adep_terminar_hm_por_horario ( cd_estabelecimento_p bigint, nr_seq_horario_p bigint, dt_evento_p timestamp, ds_observacao_p text, ds_justificativa_p text, ie_opcao_p text, qt_vol_total_p bigint, ie_palm_p text default null, nm_usuario_p text DEFAULT NULL) AS $body$
DECLARE


/*
ie_opcao_p 
-S = Suspender
-T - Terminar
*/
					
					
nr_sequencia_w		bigint;		
qt_bolsa_horario_w	bigint;	
ie_status_w		varchar(3);
ie_alteracao_w		smallint;
ds_observacao_w		varchar(2000);
ds_justificativa_w	varchar(255);
ie_tipo_proc_bs_w	varchar(255);
nr_prescricao_w		bigint;
nr_seq_procedimento_w	bigint;
ie_atualiza_w		varchar(1);
ie_lancar_cta_sangue_w	varchar(10);
nr_atendimento_w	bigint;
ie_dispara_regra_aut_w	varchar(10);
cd_setor_atendimento_w	bigint;
nr_seq_proc_interno_w	bigint;
cd_procedimento_w	bigint;
nr_seq_w		bigint;
ie_origem_proced_w	bigint;
qt_procedimento_w	double precision;
cd_medico_exec_proc_w	varchar(10);
ie_lado_w		varchar(1);
nr_seq_exame_w		bigint;
ds_item_w		varchar(255);
ie_acao_w		varchar(1);
cd_evolucao_w		bigint;
ds_texto_aux_w		varchar(255);
					

BEGIN

ds_observacao_w		:= substr(ds_observacao_p,1,2000);

if (coalesce(ie_palm_p,'N') = 'S') then

	ds_texto_aux_w	:= wheb_mensagem_pck.get_texto(300560);

	if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') and (ds_observacao_w <> '') then
		ds_observacao_w := substr(ds_texto_aux_w||' - ' || ds_observacao_w,1,2000);
	else
		ds_observacao_w := ds_texto_aux_w;
	end if;
end if;

ds_justificativa_w	:= substr(ds_justificativa_p,1,255);

ie_lancar_cta_sangue_w := obter_param_usuario(1113, 164, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_lancar_cta_sangue_w);
ie_dispara_regra_aut_w := obter_param_usuario(1113, 321, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_dispara_regra_aut_w);

if (ie_opcao_p = 'T') then
	ie_alteracao_w	:= 33;
else
	ie_alteracao_w	:= 12;
end if;

select	max(nr_prescricao),
	max(nr_seq_procedimento),
	max(obter_tipo_proc_bs(nr_prescricao, nr_seq_procedimento))
into STRICT	nr_prescricao_w,
	nr_seq_procedimento_w,
	ie_tipo_proc_bs_w
from	prescr_proc_hor
where	nr_sequencia	= nr_seq_horario_p;	

select	nextval('prescr_solucao_evento_seq')
into STRICT	nr_sequencia_w
;

insert into prescr_solucao_evento(
	nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	nr_prescricao,
	nr_seq_procedimento,
	cd_pessoa_fisica,
	ie_alteracao,
	dt_alteracao,
	ie_evento_valido,
	ie_tipo_solucao,
	ds_observacao,
	ds_justificativa,
	qt_volume_fase)
values (
	nr_sequencia_w,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	nr_prescricao_w,
	nr_seq_procedimento_w,
	obter_dados_usuario_opcao(nm_usuario_p, 'C'),
	ie_alteracao_w,
	dt_evento_p,
	'S',
	3,
	ds_observacao_w,
	ds_justificativa_w,
	qt_vol_total_p);
		
select	substr(coalesce(coalesce(max(Obter_desc_san_derivado(b.nr_seq_derivado)),max(Obter_desc_san_exame(b.nr_seq_exame_sangue))),max(Obter_desc_prescr_proc(b.cd_procedimento,b.ie_origem_proced, b.nr_seq_proc_interno))),1,100),
	max(a.nr_atendimento)
into STRICT	ds_item_w,
	nr_atendimento_w
from	prescr_procedimento b,
	prescr_medica a
where	a.nr_prescricao	= b.nr_prescricao
and	a.nr_prescricao	= nr_prescricao_w
and	b.nr_sequencia	= nr_seq_procedimento_w;

if (ie_opcao_p = 'T') then
	cd_evolucao_w := Gerar_evolPaci_automa('H', nm_usuario_p, nr_atendimento_w, ds_item_w, nr_seq_horario_p, 'A', '', null, null, null, null, null, cd_evolucao_w);
elsif (ie_opcao_p = 'S') then
	cd_evolucao_w := Gerar_evolPaci_automa('H', nm_usuario_p, nr_atendimento_w, ds_item_w, nr_seq_horario_p, 'S', '', null, null, null, null, null, cd_evolucao_w);
end if;

if (ie_tipo_proc_bs_w = 'BSST') or (ie_tipo_proc_bs_w = 'BS') then
	
	if (ie_opcao_p = 'T') then
		update	prescr_proc_hor
		set	dt_inicio_horario	= clock_timestamp(),
			dt_interrupcao		= clock_timestamp(),
			dt_fim_horario		= clock_timestamp(),
			nm_usuario_adm		= nm_usuario_p
		where	nr_sequencia		= nr_seq_horario_p
		and (coalesce(ie_horario_especial,'N') = 'N');
	else
		update	prescr_proc_hor
		set	dt_suspensao		= clock_timestamp(),
			nm_usuario_susp		= nm_usuario_p
		where	nr_sequencia		= nr_seq_horario_p
		and (coalesce(ie_horario_especial,'N') = 'N');
	end if;

	select	coalesce(max('S'),'N')
	into STRICT	ie_atualiza_w
	from	prescr_proc_hor b
	where	b.nr_prescricao		= nr_prescricao_w
	and	b.nr_seq_procedimento	= nr_seq_procedimento_w
	and	(b.dt_fim_horario IS NOT NULL AND b.dt_fim_horario::text <> '')
	and	not exists (	SELECT	1
				from	prescr_proc_hor a
				where	a.nr_prescricao		= b.nr_prescricao
				and	a.nr_seq_procedimento	= b.nr_seq_procedimento						
				and	coalesce(a.dt_fim_horario::text, '') = ''
				and	coalesce(a.dt_suspensao::text, '') = '');

	if (ie_atualiza_w	= 'S') then

		update	prescr_procedimento
		set	ie_status	= 'T',
			dt_status	= coalesce(dt_status,clock_timestamp())
		where	nr_prescricao 	= nr_prescricao_w
		and	nr_sequencia 	= nr_seq_procedimento_w;
		
		if (ie_lancar_cta_sangue_w = 'S') then
			begin
			
			select	cd_procedimento,
				ie_origem_proced,
				qt_procedimento,
				cd_setor_atendimento,
				cd_medico_exec,
				ie_lado,
				nr_seq_exame,
				nr_seq_proc_interno
			into STRICT	cd_procedimento_w,
				ie_origem_proced_w,
				qt_procedimento_w,
				cd_setor_atendimento_w,
				cd_medico_exec_proc_w,
				ie_lado_w,
				nr_seq_exame_w,
				nr_seq_proc_interno_w
			from	prescr_procedimento
			where	nr_prescricao = nr_prescricao_w
			and	nr_sequencia = nr_seq_procedimento_w;

			if (coalesce(cd_setor_atendimento_w::text, '') = '') then
				begin
				select	cd_setor_atendimento
				into STRICT	cd_setor_atendimento_w
				from	prescr_medica
				where	nr_prescricao = nr_prescricao_w;
				end;
			end if;

			CALL Gerar_Proc_Pac_Item_Prescr(nr_prescricao_w, nr_seq_procedimento_w, nr_atendimento_w, null, nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, qt_procedimento_w, cd_setor_atendimento_w, 1, clock_timestamp(), nm_usuario_p, cd_medico_exec_proc_w, nr_seq_exame_w, ie_lado_w,null);

			update	prescr_procedimento
			set	ie_status_execucao = 20
			where	nr_prescricao = nr_prescricao_w
			and	nr_sequencia = nr_seq_procedimento_w;

			if (ie_dispara_regra_aut_w = 'S') then

				select	max(nr_sequencia)
				into STRICT	nr_seq_w
				from	procedimento_paciente
				where	nr_prescricao = nr_prescricao_w
				and	nr_sequencia_prescricao = nr_seq_procedimento_w;

				CALL gerar_lancamento_automatico(nr_atendimento_w,null,34,nm_usuario_p,nr_seq_w,null,null,null,null,null);
			end if;

			end;
		end if;

	end if;
	
elsif (ie_tipo_proc_bs_w = 'BSHE') then	

	select	count(*)
	into STRICT	qt_bolsa_horario_w
	from	prescr_procedimento a,
		prescr_proc_bolsa b,
		prescr_proc_hor c
	where	a.nr_prescricao		= b.nr_prescricao
	and	b.nr_seq_procedimento	= a.nr_sequencia
	and	a.nr_prescricao 	= c.nr_prescricao
	and	a.cd_procedimento 	= c.cd_procedimento
	and	coalesce(a.nr_seq_proc_interno,0)	= coalesce(c.nr_seq_proc_interno,0)
	--AND	((TRUNC(a.dt_status,'mi')    = TRUNC(c.dt_horario,'mi')) OR (TRUNC(a.dt_prev_execucao,'mi')    = TRUNC(c.dt_horario,'mi')))
	and	coalesce(b.ie_bipado,'N')	= 'N'
	and	c.nr_sequencia 		= nr_seq_horario_p;
	
	if (qt_bolsa_horario_w = 0) and (ie_opcao_p = 'T') then
		
		update  prescr_procedimento
		set 	ie_status = 'T'
		where	nr_prescricao = nr_prescricao_w
		and		nr_sequencia  = nr_seq_procedimento_w;

		commit;		
		
		update	prescr_proc_hor
		set	dt_interrupcao		= clock_timestamp(),
			dt_fim_horario		= clock_timestamp(),
			nm_usuario_adm		= nm_usuario_p
		where	nr_sequencia		= nr_seq_horario_p
		and 	coalesce(ie_horario_especial,'N') = 'N';
		
		if (ie_lancar_cta_sangue_w = 'S') then
			begin
			select	max(nr_atendimento)
			into STRICT	nr_atendimento_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_w;
			
			select	cd_procedimento,
				ie_origem_proced,
				qt_procedimento,
				cd_setor_atendimento,
				cd_medico_exec,
				ie_lado,
				nr_seq_exame,
				nr_seq_proc_interno
			into STRICT	cd_procedimento_w,
				ie_origem_proced_w,
				qt_procedimento_w,
				cd_setor_atendimento_w,
				cd_medico_exec_proc_w,
				ie_lado_w,
				nr_seq_exame_w,
				nr_seq_proc_interno_w
			from	prescr_procedimento
			where	nr_prescricao = nr_prescricao_w
			and	nr_sequencia = nr_seq_procedimento_w;

			if (coalesce(cd_setor_atendimento_w::text, '') = '') then
				begin
				select	cd_setor_atendimento
				into STRICT	cd_setor_atendimento_w
				from	prescr_medica
				where	nr_prescricao = nr_prescricao_w;
				end;
			end if;

			CALL Gerar_Proc_Pac_Item_Prescr(nr_prescricao_w, nr_seq_procedimento_w, nr_atendimento_w, null, nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, qt_procedimento_w, cd_setor_atendimento_w, 1, clock_timestamp(), nm_usuario_p, cd_medico_exec_proc_w, nr_seq_exame_w, ie_lado_w,null);

			update	prescr_procedimento
			set	ie_status_execucao = 20
			where	nr_prescricao = nr_prescricao_w
			and	nr_sequencia = nr_seq_procedimento_w;

			if (ie_dispara_regra_aut_w = 'S') then

				select	max(nr_sequencia)
				into STRICT	nr_seq_w
				from	procedimento_paciente
				where	nr_prescricao = nr_prescricao_w
				and	nr_sequencia_prescricao = nr_seq_procedimento_w;

				CALL gerar_lancamento_automatico(nr_atendimento_w,null,34,nm_usuario_p,nr_seq_w,null,null,null,null,null);
			end if;

			end;
		end if;
		
	elsif (qt_bolsa_horario_w >= 1) and (ie_opcao_p = 'T') then
		
		update	prescr_proc_hor
		set	dt_inicio_horario = clock_timestamp(),
			dt_interrupcao	  = clock_timestamp(),
			dt_fim_horario 	  = clock_timestamp()
		where	nr_sequencia	  = nr_seq_horario_p
		and 	coalesce(ie_horario_especial,'N') = 'N';
		
	elsif (ie_opcao_p = 'S') then
	
		update	prescr_proc_hor
		set	dt_suspensao		= clock_timestamp(),
			nm_usuario_susp		= nm_usuario_p
		where	nr_sequencia		= nr_seq_horario_p
		and (coalesce(ie_horario_especial,'N') = 'N');
	
	end if;	
	CALL atualizar_bolsa_bipada_hm(nr_seq_horario_p, nm_usuario_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adep_terminar_hm_por_horario ( cd_estabelecimento_p bigint, nr_seq_horario_p bigint, dt_evento_p timestamp, ds_observacao_p text, ds_justificativa_p text, ie_opcao_p text, qt_vol_total_p bigint, ie_palm_p text default null, nm_usuario_p text DEFAULT NULL) FROM PUBLIC;

