-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_enviar_email_grupo_relac ( nr_seq_grupo_p bigint, nr_sequencia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_lista_sequencias_arq_p text, cd_relatorio_p INOUT bigint, ds_consulta_p INOUT text, ds_texto_p INOUT text, ds_sem_email_p INOUT text, ds_nm_responsavel_p INOUT text) AS $body$
DECLARE

 
nm_responsavel_w		varchar(2000);
ds_nm_responsavel_w		varchar(4000);
nr_pos_virgula_w		bigint;
cd_relatorio_w			bigint;
nr_seq_historico_w		bigint;
ds_texto_w			varchar(4000);
ds_sem_email_w			varchar(2000);
ds_consulta_w			varchar(2000);
ds_lista_sequencias_arq_w	varchar(2000);
nr_pos_virgula_arq_w		bigint;
nr_seq_arquivo_w		bigint;
cd_controle_w			smallint := 0;
			
c01 CURSOR FOR 
SELECT	substr(obter_nome_pessoa_fisica(cd_pessoa_responsavel,''),1,255) 
from	pls_grupo_contrato_equipe 
where	nr_seq_grupo_contrato = nr_seq_grupo_p;
	
			 

BEGIN 
if (nr_seq_grupo_p IS NOT NULL AND nr_seq_grupo_p::text <> '') and (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') and (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
	begin	 
	open c01;
	loop 
	fetch c01 into nm_responsavel_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		ds_nm_responsavel_w := ds_nm_responsavel_w || nm_responsavel_w || ',';
		end;
	end loop;
	close c01;
	 
	ds_nm_responsavel_p := ds_nm_responsavel_w;
	 
	select	b.cd_relatorio 
	into STRICT	cd_relatorio_w 
	from	pls_parametros a, 
		relatorio b 
	where	a.nr_seq_relatorio = b.nr_sequencia 
	and	a.cd_estabelecimento = cd_estabelecimento_p;	
	 
	while(ds_nm_responsavel_w IS NOT NULL AND ds_nm_responsavel_w::text <> '') and (cd_controle_w < 99) loop 
		begin		 
		cd_controle_w		:= cd_controle_w + 1;
		 
		nm_responsavel_w	:= null;		
		nr_pos_virgula_w 	:= position(',' in ds_nm_responsavel_w);		
		 
		if (nr_pos_virgula_w > 0) then 
			begin 
			nm_responsavel_w	:= substr(ds_nm_responsavel_w, 1, nr_pos_virgula_w-1);
			ds_nm_responsavel_w	:= substr(ds_nm_responsavel_w, nr_pos_virgula_w+1, length(ds_nm_responsavel_w));
			end;
		else	 
			begin 
			nm_responsavel_w	:= ds_nm_responsavel_w;
			ds_nm_responsavel_w	:= null;
			end;
		end if;
		 
		if (nm_responsavel_w IS NOT NULL AND nm_responsavel_w::text <> '') then 
			begin 
			select	max(nr_sequencia) 
			into STRICT	nr_seq_historico_w 
			from	pls_grupo_contrato_hist 
			where	nr_seq_grupo_contrato = nr_sequencia_p;
			 
			if (nr_seq_historico_w IS NOT NULL AND nr_seq_historico_w::text <> '') then 
				begin				 
				ds_consulta_p := converte_rtf_html( 
					'select	ds_historico from pls_grupo_contrato_hist where	nr_sequencia = :nr_sequencia_p', nr_seq_historico_w, nm_usuario_p, ds_consulta_p);
				 
				if ((ds_consulta_p)::numeric  > 0) then 
					begin					 
					select	ds_texto 
					into STRICT	ds_texto_w 
					from	tasy_conversao_rtf 
					where	nr_sequencia = (ds_consulta_p)::numeric;											
					end;
				end if;					
				end;
			end if;
			end;
		/*else 
			begin 
			if	(nm_responsavel_w is not null) then 
				begin 
				ds_sem_email_w := ds_sem_email_w || nm_responsavel_w || ','; 
				end; 
			end if; 
			end;*/
 
		end if;		
		end;
	end loop;
	 
	cd_relatorio_p	:= cd_relatorio_w;
	ds_consulta_p	:= ds_consulta_w;
	ds_texto_p	:= ds_texto_w;
	ds_sem_email_p	:= ds_sem_email_w;	
	 
	if (ds_lista_sequencias_arq_p IS NOT NULL AND ds_lista_sequencias_arq_p::text <> '') then 
		begin		 
		ds_lista_sequencias_arq_w	:= ds_lista_sequencias_arq_p;
		cd_controle_w			:= 0;		
		 
		while(ds_lista_sequencias_arq_w IS NOT NULL AND ds_lista_sequencias_arq_w::text <> '') and (cd_controle_w < 99) loop 
			begin			 
			cd_controle_w 		:= cd_controle_w + 1;
			 
			nr_pos_virgula_arq_w	:= position(',' in ds_lista_sequencias_arq_w);
		 
			if (nr_pos_virgula_arq_w > 0) then 
				begin 
				nr_seq_arquivo_w		:= (substr(ds_lista_sequencias_arq_w, 1, nr_pos_virgula_arq_w-1))::numeric;
				ds_lista_sequencias_arq_w	:= substr(ds_lista_sequencias_arq_w, nr_pos_virgula_arq_w+1, length(ds_lista_sequencias_arq_w));			
				end;
			else 
				begin 
				nr_seq_arquivo_w		:= (ds_lista_sequencias_arq_w)::numeric;
				ds_lista_sequencias_arq_w	:= null;
				end;
			end if;
			 
			if (nr_seq_arquivo_w > 0) then 
				begin				 
				update	pls_grupo_contrato_anexo 
				set	ie_anexar_email = 'N', 
					dt_atualizacao = clock_timestamp(), 
					nm_usuario = nm_usuario_p 
				where	nr_sequencia = nr_seq_arquivo_w;
				end;
			end if;
			end;
		end loop;			
		end;
	end if;	
	end;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_enviar_email_grupo_relac ( nr_seq_grupo_p bigint, nr_sequencia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_lista_sequencias_arq_p text, cd_relatorio_p INOUT bigint, ds_consulta_p INOUT text, ds_texto_p INOUT text, ds_sem_email_p INOUT text, ds_nm_responsavel_p INOUT text) FROM PUBLIC;

