-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copia_preco_material ( cd_material_orig_p bigint, cd_material_copia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


vl_material_w                 	double precision;
dt_ult_vigencia_w              	timestamp;
cd_tab_preco_material_w		smallint;
ie_origem_preco_w              	smallint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
qt_insert_w			bigint;
nr_seq_bras_preco_w		bigint;
nr_seq_mat_bras_w		bigint;
nr_seq_conv_bras_w		bigint;
nr_seq_conv_simpro_w		bigint;
nr_seq_mat_simpro_w		bigint;
nr_seq_simpro_preco_w		bigint;
nr_seq_ajuste_mat_w		bigint;

C01 CURSOR FOR
	SELECT	cd_convenio
	from	convenio
	where	ie_situacao = 'A'
	order by cd_convenio;

C02 CURSOR FOR
	SELECT	cd_categoria
	from	categoria_convenio
	where	cd_convenio = cd_convenio_w
	order by cd_categoria;


BEGIN



open C01;
loop
fetch C01 into
	cd_convenio_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	open C02;
	loop
	fetch C02 into
		cd_categoria_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
			SELECT * FROM define_preco_material( cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, clock_timestamp(), cd_material_orig_p, 0, 0, 0, null, 0, 0, null, 0, 0, null, null, null, null, null, vl_material_w, dt_ult_vigencia_w, cd_tab_preco_material_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT vl_material_w, dt_ult_vigencia_w, cd_tab_preco_material_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;

		if ((coalesce(ie_origem_preco_w,0) = 2) and (coalesce(cd_tab_preco_material_w,0) > 0)) then


		select 	count(*)
		into STRICT	qt_insert_w
		from   	preco_material
		where	cd_material = cd_material_copia_p
		and	dt_inicio_vigencia 	= dt_ult_vigencia_w
		and	cd_tab_preco_mat	= cd_tab_preco_material_w;

			if (qt_insert_w = 0) then


			insert into preco_material(	cd_estabelecimento,
							cd_tab_preco_mat,
							cd_material,
							dt_inicio_vigencia,
							vl_preco_venda,
							cd_moeda,
							ie_brasindice,
							dt_atualizacao,
							nm_usuario,
							cd_unidade_medida,
							ie_situacao,
							nr_sequencia_nf,
							nr_item_nf,
							cd_cgc_fornecedor,
							qt_conversao,
							dt_atualizacao_nrec,
							nm_usuario_nrec)
			 (SELECT 	cd_estabelecimento,
					cd_tab_preco_mat,
					cd_material_copia_p,
					dt_inicio_vigencia,
					vl_preco_venda,
					cd_moeda,
					ie_brasindice,
					clock_timestamp(),
					nm_usuario_p,
					cd_unidade_medida,
					ie_situacao,
					nr_sequencia_nf,
					nr_item_nf,
					cd_cgc_fornecedor,
					qt_conversao,
					dt_atualizacao_nrec,
					nm_usuario_nrec
				from	preco_material
				where	cd_material 		= cd_material_orig_p
				and	dt_inicio_vigencia 	= dt_ult_vigencia_w
				and	cd_tab_preco_mat	= cd_tab_preco_material_w);

			end if;

		end if;



	end;
	end loop;
	close C02;


	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copia_preco_material ( cd_material_orig_p bigint, cd_material_copia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

