-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_tempo_cirurgico ( nr_cirurgia_p bigint, nm_usuario_p text, nr_seq_pepo_p bigint default null) AS $body$
DECLARE

cd_estabelecimento_w	bigint := wheb_usuario_pck.get_cd_estabelecimento;
nr_seq_evento_w			bigint;
nr_seq_evento_dif_w		bigint;	
dt_registro_w			timestamp;
dt_registro_fim_w		timestamp;
dt_registro_inicio_w timestamp;
nr_seq_tempo_w			bigint;
ie_permite_insert		varchar(1) := 'S';
ie_agrupador_w			bigint;


c01 CURSOR FOR
	SELECT	a.nr_sequencia,
            a.nr_seq_evento,
            a.nr_seq_evento_dif,
            a.ie_agrupador
	from	   tempo_cirurgico a
	where	   (a.nr_seq_evento IS NOT NULL AND a.nr_seq_evento::text <> '')
	and		(a.nr_seq_evento_dif IS NOT NULL AND a.nr_seq_evento_dif::text <> '')
	and		a.ie_situacao = 'A'
	and      ((a.cd_estabelecimento = cd_estabelecimento_w) or (coalesce(a.cd_estabelecimento::text, '') = ''))
	and not exists (	SELECT	1
                     from	   tempo_cirurgico_cirurgia x
                     where	   ((x.nr_cirurgia = nr_cirurgia_p) or (x.nr_seq_pepo = nr_seq_pepo_p))
                     and		x.nr_seq_tempo = a.nr_sequencia)
	and exists (	select 1
                  from   evento_cirurgia_paciente p
                  where  p.nr_seq_evento = a.nr_seq_evento
                  and	coalesce(p.ie_situacao,'A') = 'A'
                  and	   ((p.nr_cirurgia = nr_cirurgia_p) or (p.nr_seq_pepo = nr_seq_pepo_p)))						
	and	exists (	select 1
			from   evento_cirurgia_paciente c
			where  c.nr_seq_evento = a.nr_seq_evento_dif
			and	coalesce(c.ie_situacao,'A') = 'A'
			and	   ((c.nr_cirurgia = nr_cirurgia_p) or (c.nr_seq_pepo = nr_seq_pepo_p)))
	order by a.nr_seq_execucao;

c02 CURSOR FOR
      SELECT	dt_registro
      from	   evento_cirurgia_paciente
      where	   nr_seq_evento = nr_seq_evento_w
      and	   coalesce(ie_situacao,'A') = 'A'
      and	   ((nr_cirurgia = nr_cirurgia_p) or (nr_seq_pepo = nr_seq_pepo_p))
      order by dt_registro;

	

BEGIN

open C01;
loop
fetch C01 into
	nr_seq_tempo_w,
	nr_seq_evento_w,
	nr_seq_evento_dif_w,
	ie_agrupador_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
   open C02;
   loop
   fetch C02 into	
   	dt_registro_inicio_w;
   EXIT WHEN NOT FOUND; /* apply on C02 */
   	begin
      select	min(dt_registro)
      into STRICT	   dt_registro_fim_w
      from	   evento_cirurgia_paciente
      where	   nr_seq_evento = nr_seq_evento_dif_w
      and	   coalesce(ie_situacao,'A') = 'A'
      and	   ((nr_cirurgia = nr_cirurgia_p) or (nr_seq_pepo = nr_seq_pepo_p))
      and      dt_registro  > dt_registro_inicio_w;

      if (dt_registro_inicio_w IS NOT NULL AND dt_registro_inicio_w::text <> '') and (dt_registro_fim_w IS NOT NULL AND dt_registro_fim_w::text <> '') then
         select 	coalesce(max('N'),'S')
         into STRICT	   ie_permite_insert
         from 	   tempo_cirurgico b,
                  tempo_cirurgico_cirurgia a
         where 	b.nr_sequencia = a.nr_seq_tempo
         and (b.ie_agrupador = ie_agrupador_w) 
         and (ie_agrupador_w IS NOT NULL AND ie_agrupador_w::text <> '')
         and	   ((nr_cirurgia = nr_cirurgia_p) or (nr_seq_pepo = nr_seq_pepo_p));

         if (ie_permite_insert = 'S') then
            insert into tempo_cirurgico_cirurgia(
               nr_sequencia,           
               dt_atualizacao,
               nm_usuario,
               dt_atualizacao_nrec,
               nm_usuario_nrec,
               nr_cirurgia,
               nr_seq_tempo,
               dt_inicio,
               dt_fim,
               cd_profissional,
               ds_observacao,
               nr_seq_pepo)
            values (
               nextval('tempo_cirurgico_cirurgia_seq'), 
               clock_timestamp(),
               nm_usuario_p,
               clock_timestamp(),
               nm_usuario_p,
               CASE WHEN nr_cirurgia_p=0 THEN null  ELSE nr_cirurgia_p END ,
               nr_seq_tempo_w,
               dt_registro_inicio_w,
               dt_registro_fim_w,
               obter_dados_usuario_opcao(nm_usuario_p,'C'),
               null,
               nr_seq_pepo_p);	
         end if;
      end if;
   	
   	end;
   end loop;
   close C02;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_tempo_cirurgico ( nr_cirurgia_p bigint, nm_usuario_p text, nr_seq_pepo_p bigint default null) FROM PUBLIC;

