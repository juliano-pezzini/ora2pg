-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_titulo_lote ( nr_seq_lote_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_erro_w			varchar(4000);
ds_emp_retencao_w		varchar(255);
nm_prestador_w			varchar(255);
ds_irrelevante_w		varchar(255);
ie_periodicidade_w		varchar(255);
cd_conta_contabil_w		varchar(20);
cd_cgc_prestador_w		varchar(14);
cd_pf_prestador_w		varchar(10);
cd_variacao_w			varchar(2);
ie_acao_venc_nao_util_w		varchar(1)	:= 'M';
ie_gerar_cp_w			varchar(1)	:= 'N';
ie_vencimento_w			varchar(1);
tx_fracao_parcela_w		numeric(15,4)	:= 0;
tx_acrescimo_w			numeric(15,4)	:= 0;
vl_titulo_w			double precision	:= 0;
vl_tributo_w			double precision;
vl_base_calculo_w		double precision;
vl_liberado_w			double precision;
vl_lote_w			double precision;
vl_liquido_w			double precision;
vl_vencimento_w			double precision;
vl_ir_w				double precision;
vl_imposto_munic_w		double precision;
vl_nao_retido_w			double precision;
vl_base_nao_retido_w		double precision;
vl_trib_adic_w			double precision;
vl_base_adic_w			double precision;
nr_seq_prestador_w		bigint;
cd_condicao_pagamento_w		bigint;
nr_titulo_w			bigint;
qt_imposto_mes_w		bigint;
nr_seq_trans_fin_baixa_conta_w	bigint;
cd_conta_financ_w		bigint;
nr_seq_classif_w		bigint;
nr_seq_conta_w			bigint;
qt_regras_prestador_w		bigint;
nr_seq_lote_venc_w		bigint;
cd_cond_pg_w			bigint;
nr_seq_imposto_w		bigint;
cd_condicao_pagto_w		bigint;
nr_seq_trans_reg_w		bigint;
nr_seq_trans_baixa_w		bigint;
cd_empresa_w			bigint := null;
cd_conta_financ_trib_w		bigint;
cd_conta_financ_regra_w		bigint;
pr_imposto_w			double precision;
ie_forma_pagamento_w		integer;
cd_moeda_w			integer;
cd_estabelecimento_w		smallint;
cd_tributo_w			smallint;
qt_dia_vencimento_w		smallint;
dt_base_venc_w			timestamp;
dt_vencimento_w			timestamp;
dt_ref_tributo_w		timestamp;
dt_emissao_w			timestamp;
dt_imposto_w			timestamp;
dt_mes_competencia_w		timestamp;
ie_conta_contab_tit_trib_w	parametros_contas_pagar.ie_conta_contab_tit_trib%type;
cd_conta_cont_trib_w		conta_contabil.cd_conta_contabil%type;
nr_seq_trib_cp_w		bigint;
nr_seq_tipo_prestador_w		pls_tipo_prestador.nr_sequencia%type;
nr_seq_classificacao_w		pls_prestador.nr_seq_classificacao%type;
cd_beneficiario_w		tributo_conta_pagar.cd_beneficiario%type;
nr_titulo_imposto_w		titulo_pagar_imposto.nr_titulo%type;
nr_seq_lote_prot_venc_trib_w	pls_lote_prot_venc_trib.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	cd_conta_cred,
		sum(vl_liberado)
	from (SELECT	coalesce(cd_conta_cont_trib_w,e.cd_conta_cred) cd_conta_cred,
			e.vl_liberado
		from	pls_lote_protocolo a,
			pls_prot_conta_titulo  b,
			pls_protocolo_conta c,
			pls_conta d,
			pls_conta_proc e
		where	a.nr_sequencia	= b.nr_seq_lote
		and	c.nr_sequencia	= b.nr_seq_protocolo
		and	c.nr_sequencia	= d.nr_seq_protocolo
		and	d.nr_sequencia	= e.nr_seq_conta
		and	a.nr_sequencia	= nr_seq_lote_p
		
union	all

		select	coalesce(cd_conta_cont_trib_w,e.cd_conta_cred) cd_conta_cred,
			e.vl_liberado
		from	pls_lote_protocolo a,
			pls_prot_conta_titulo b,
			pls_protocolo_conta c,
			pls_conta d,
			pls_conta_mat e
		where	a.nr_sequencia	= b.nr_seq_lote
		and	c.nr_sequencia	= b.nr_seq_protocolo
		and	c.nr_sequencia	= d.nr_seq_protocolo
		and	d.nr_sequencia	= e.nr_seq_conta
		and	a.nr_sequencia	= nr_seq_lote_p) alias3
	group by
		cd_conta_cred;

C02 CURSOR FOR
	SELECT	tx_fracao_parcela, /* A Prazo   */
             	coalesce(tx_acrescimo,0),
		obter_data_vencimento(dt_base_venc_w, qt_dias_parcela, cd_estabelecimento_w,
				ie_corrido_util, ie_acao_venc_nao_util_w)
	from 	parcela
	where 	cd_condicao_pagamento 	= cd_condicao_pagamento_w
	and 	ie_forma_pagamento_w	not in (1,10)
	
union

	SELECT 	100, /* A Vista   */
		0,
		dt_base_venc_w
	
	where 	ie_forma_pagamento_w	= 1
	
union

	select	100, /* Conforme Vencimentos */
		0,
		to_date((to_char(qt_dia_vencimento_w) || '/' || to_char(add_months(dt_base_venc_w,1),'mm/yyyy')),'dd/mm/yyyy')
	
	where	ie_forma_pagamento_w	= 10;

C03 CURSOR FOR
	SELECT	nr_titulo
	from	titulo_pagar
	where	nr_seq_lote_res_pls	= nr_seq_lote_p;

c04 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.dt_vencimento,
		a.vl_vencimento,
		coalesce(vl_liquido, (vl_vencimento - coalesce(vl_ir,0) - coalesce(vl_imposto_munic,0))),
		a.vl_imposto_munic,
		a.vl_ir
	from	pls_lote_protocolo_venc a
	where	a.nr_seq_lote	= nr_seq_lote_p
	order by
		a.dt_vencimento;

C05 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_tributo,
		a.dt_imposto,
		sum(coalesce(vl_base_calculo,0)),
		sum(coalesce(a.vl_imposto,0)),
		dividir_sem_round(sum(coalesce(a.vl_imposto,0)), sum(coalesce(vl_base_calculo,0))) pr_imposto,
		b.ie_gerar_titulo_pagar,
		sum(coalesce(vl_nao_retido,0)),
		max(ie_vencimento) ie_vencimento,
		sum(coalesce(a.vl_base_nao_retido,0)),
		sum(coalesce(a.vl_trib_adic,0)),
		sum(coalesce(a.vl_base_adic,0)),
		a.nr_seq_trans_reg,
		a.nr_seq_trans_baixa
	from	tributo 		b,
		pls_lote_prot_venc_trib a
	where	nr_seq_lote_venc	= nr_seq_lote_venc_w
	and	a.cd_tributo		= b.cd_tributo
	and	a.ie_pago_prev		= 'V'
	and	b.ie_conta_pagar	= 'S'
	group	by
		a.nr_sequencia,
		a.cd_tributo,
		a.dt_imposto,
		b.ie_gerar_titulo_pagar,
		a.nr_seq_trans_reg,
		a.nr_seq_trans_baixa;

C09 CURSOR FOR
	SELECT	cd_cond_pagto
	from	Tributo_conta_pagar
	where	cd_tributo					= cd_tributo_w
	and (coalesce(cd_estabelecimento, cd_estabelecimento_w)	= cd_estabelecimento_w)
	and	cd_empresa					= cd_empresa_w
	and	((coalesce(cd_pessoa_juridica::text, '') = '') or (cd_pessoa_juridica = cd_cgc_prestador_w))
	and	((coalesce(cd_pessoa_fisica::text, '') = '') or (cd_pessoa_fisica = cd_pf_prestador_w));


BEGIN
select	nr_seq_prestador, /* Obter dados do lote */
	pls_obter_valor_lote_resumo(nr_sequencia),
	cd_estabelecimento,
	coalesce(dt_emissao,dt_mes_competencia),
	dt_emissao,
	DT_MES_COMPETENCIA
into STRICT	nr_seq_prestador_w,
	vl_lote_w,
	cd_estabelecimento_w,
	dt_base_venc_w,
	dt_emissao_w,
	DT_MES_COMPETENCIA_w
from	pls_lote_protocolo
where	nr_sequencia	= nr_seq_lote_p;

select	count(*)
into STRICT	qt_regras_prestador_w
from	pls_prestador_pagto a,
	pls_prestador b
where	b.nr_sequencia	= a.nr_seq_prestador
and	a.nr_seq_prestador	= nr_seq_prestador_w;

if (qt_regras_prestador_w = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(189395);
	--R aise_application_error(-20011,'Não foram cadastradas regras para a geração do título para o prestador selecionado. Verifique na função OPS - Prestadores.');
end if;

select	max(a.cd_condicao_pagamento),
	max(a.qt_dia_vencimento),
	substr(obter_nome_pf_pj(max(b.cd_pessoa_fisica), max(b.cd_cgc)),1,255),
	max(b.nr_seq_tipo_prestador),
	max(b.nr_seq_classificacao)
into STRICT	cd_condicao_pagamento_w,
	qt_dia_vencimento_w,
	nm_prestador_w,
	nr_seq_tipo_prestador_w,
	nr_seq_classificacao_w
from	pls_prestador_pagto a,
	pls_prestador b
where	b.nr_sequencia	= a.nr_seq_prestador
and	a.nr_seq_prestador	= nr_seq_prestador_w;

select 	coalesce(max(ie_forma_pagamento),3),
	coalesce(max(ie_acao_nao_util),'M')
into STRICT 	ie_forma_pagamento_w,
	ie_acao_venc_nao_util_w
from 	condicao_pagamento
where 	cd_condicao_pagamento	= cd_condicao_pagamento_w
and 	ie_situacao           	= 'A';

if (ie_forma_pagamento_w	= 10) and (coalesce(qt_dia_vencimento_w,0) = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(189396,'NM_PRESTADOR=' || nm_prestador_w);
	--R aise_application_error(-20011,'Não foi cadastrado o dia do vencimento para o prestador ' || nm_prestador_w || '. Verifique!#@#@');
end if;

select	obter_moeda_padrao(cd_estabelecimento_w,'P')
into STRICT	cd_moeda_w
;

select	cd_pessoa_fisica,
	cd_cgc
into STRICT	cd_pf_prestador_w,
	cd_cgc_prestador_w
from	pls_prestador
where	nr_sequencia	= nr_seq_prestador_w;

select	nr_seq_trans_fin_baixa_conta,
	cd_conta_financ_conta
into STRICT	nr_seq_trans_fin_baixa_conta_w,
	cd_conta_financ_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_w;

select	coalesce(ie_conta_contab_tit_trib,'T')
into STRICT	ie_conta_contab_tit_trib_w
from	parametros_contas_pagar
where	cd_estabelecimento	= cd_estabelecimento_w;

open C04; /* Francisco - 19/02/2010 - OS 195591 - Troquei o cursor porque os vencimentos serão gerados anteriormente */
loop
fetch C04 into
	nr_seq_lote_venc_w,
	dt_vencimento_w,
	vl_vencimento_w,
	vl_liquido_w,
	vl_imposto_munic_w,
	vl_ir_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin
	select	nextval('titulo_pagar_seq')
	into STRICT	nr_titulo_w
	;

	insert into titulo_pagar(nr_titulo, cd_estabelecimento, nm_usuario,
		dt_atualizacao, dt_emissao, dt_contabil, dt_vencimento_original,
		dt_vencimento_atual, vl_titulo, vl_saldo_titulo,
		vl_saldo_juros, vl_saldo_multa, nr_lote_contabil,
		cd_moeda, tx_juros, tx_multa,
		cd_tipo_taxa_juro, cd_tipo_taxa_multa, ie_situacao,
		ie_origem_titulo, ie_tipo_titulo, cd_cgc,
		cd_pessoa_fisica, ie_pls, nr_seq_lote_res_pls,vl_ir,vl_imposto_munic)
	values (nr_titulo_w, cd_estabelecimento_w, nm_usuario_p,
		clock_timestamp(), coalesce(dt_emissao_w,trunc(clock_timestamp(),'dd')), DT_MES_COMPETENCIA_w, dt_vencimento_w,
		dt_vencimento_w, vl_liquido_w, vl_liquido_w,
		0, 0, 0,
		cd_moeda_w, 0, 0,
		1, 1, 'A',
		'5', '1', cd_cgc_prestador_w,
		cd_pf_prestador_w, 'S', nr_seq_lote_p, vl_ir_w, vl_imposto_munic_w);
		
	CALL atualizar_inclusao_tit_pagar(nr_titulo_w, nm_usuario_p);
	
	update	pls_lote_protocolo_venc
	set	nr_titulo	= nr_titulo_w
	where	nr_sequencia	= nr_seq_lote_venc_w;
	
	cd_conta_financ_regra_w := pls_obter_conta_financ_regra(	'PP', null, cd_estabelecimento_w, null, null, null, null, nr_seq_prestador_w, null, null, null, null, null, null, null, null, null, cd_conta_financ_regra_w);
					
	if (coalesce(ie_conta_contab_tit_trib_w,'T')	= 'R') then
		cd_conta_cont_trib_w	:= substr(obter_conta_contabil_trib(cd_empresa_w,cd_tributo_w,cd_cgc_prestador_w,clock_timestamp()),1,20);
	end if;
	
	open C01;
	loop
	fetch C01 into
		cd_conta_contabil_w,
		vl_liberado_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (coalesce(vl_liberado_w,0) <> 0) then
			vl_liberado_w	:= vl_liberado_w * dividir_sem_round(vl_liquido_w,vl_vencimento_w) * dividir_sem_round(vl_vencimento_w,vl_lote_w);

			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_seq_classif_w
			from	titulo_pagar_classif
			where	nr_titulo	= nr_titulo_w;

			insert into titulo_pagar_classif(nr_titulo,
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_conta_financ,
				vl_acrescimo,
				vl_desconto,
				vl_original,
				vl_titulo,
				cd_conta_contabil)
			values (nr_titulo_w,
				nr_seq_classif_w,
				clock_timestamp(),
				nm_usuario_p,
				coalesce(cd_conta_financ_regra_w,cd_conta_financ_w),
				0,
				0,
				vl_liberado_w,
				vl_liberado_w,
				cd_conta_contabil_w);
		end if;
		end;
	end loop;
	close C01;

	select	count(1)
	into STRICT	qt_imposto_mes_w
	from	pls_prestador_tributo
	where	nr_seq_prestador		= nr_seq_prestador_w
	and	trunc(dt_referencia,'month')	= trunc(dt_base_venc_w, 'month');

	if (qt_imposto_mes_w > 0) then
		CALL pls_gerar_tributo_retido(nr_seq_lote_p, nr_titulo_w, nm_usuario_p);
	end if;

	open C05; /* Tributos do lote */
	loop
	fetch C05 into
		nr_seq_lote_prot_venc_trib_w,
		cd_tributo_w,
		dt_imposto_w,
		vl_base_calculo_w,
		vl_tributo_w,
		pr_imposto_w,
		ie_gerar_cp_w,
		vl_nao_retido_w,
		ie_vencimento_w,
		vl_base_nao_retido_w,
		vl_trib_adic_w,
		vl_base_adic_w,
		nr_seq_trans_reg_w,
		nr_seq_trans_baixa_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin
		SELECT * FROM obter_dados_trib_tit_pagar(	cd_tributo_w, cd_estabelecimento_w, cd_cgc_prestador_w, cd_pf_prestador_w, cd_beneficiario_w, ds_irrelevante_w, ds_irrelevante_w, cd_conta_financ_trib_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, dt_imposto_w, cd_variacao_w, ie_periodicidade_w, 'R', null, null, null, null, null, nr_seq_trib_cp_w, null, 0, ds_irrelevante_w, ds_irrelevante_w, vl_base_calculo_w, 'N', null, null, nr_seq_tipo_prestador_w, nr_seq_classificacao_w) INTO STRICT cd_beneficiario_w, ds_irrelevante_w, ds_irrelevante_w, cd_conta_financ_trib_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, cd_variacao_w, ie_periodicidade_w, nr_seq_trib_cp_w, ds_irrelevante_w, ds_irrelevante_w;
		select	max(cd_empresa)
		into STRICT	cd_empresa_w
		from	estabelecimento
		where	cd_estabelecimento		= cd_estabelecimento_w;

		open C09;
		loop
		fetch C09 into
			cd_cond_pg_w;
		EXIT WHEN NOT FOUND; /* apply on c09 */
			begin
			cd_condicao_pagto_w	:= cd_cond_pg_w;
			end;
		end loop;
		close C09;

		select	nextval('titulo_pagar_imposto_seq')
		into STRICT	nr_seq_imposto_w
		;

		insert into Titulo_Pagar_imposto(nr_sequencia, nr_titulo, cd_tributo,
			ie_pago_prev, dt_atualizacao, nm_usuario,
			dt_imposto, vl_base_calculo, vl_imposto,
			ds_emp_retencao, pr_imposto, cd_conta_financ,
			nr_seq_trans_reg, nr_seq_trans_baixa,
			cd_beneficiario, cd_cond_pagto, vl_nao_retido,
			ie_vencimento, vl_base_nao_retido, vl_trib_adic, vl_base_adic,
			nm_usuario_nrec,dt_atualizacao_nrec, cd_variacao, ie_periodicidade, nr_seq_trib_cp)
		values (nr_seq_imposto_w, nr_titulo_w, cd_tributo_w,
			'V', clock_timestamp(), nm_usuario_p,
			dt_imposto_w, vl_base_calculo_w, vl_tributo_w,
			null, pr_imposto_w, cd_conta_financ_trib_w,
			nr_seq_trans_reg_w, nr_seq_trans_baixa_w,
			cd_beneficiario_w, cd_condicao_pagto_w,	vl_nao_retido_w,
			ie_vencimento_w,vl_base_nao_retido_w,vl_trib_adic_w,vl_base_adic_w,
			nm_usuario_p,clock_timestamp(), cd_variacao_w, ie_periodicidade_w, nr_seq_trib_cp_w);
		
		if (ie_gerar_cp_w = 'S') and (coalesce(vl_tributo_w,0) > 0) then
			CALL gerar_titulo_tributo(nr_seq_imposto_w, nm_usuario_p);
		end if;
		
		select	max(nr_titulo)
		into STRICT	nr_titulo_imposto_w
		from	titulo_pagar
		where	nr_seq_tributo = nr_seq_imposto_w;
		
		if (nr_titulo_imposto_w IS NOT NULL AND nr_titulo_imposto_w::text <> '') then
			update	pls_lote_prot_venc_trib
			set	nr_titulo_pagar = nr_titulo_imposto_w
			where	nr_sequencia = nr_seq_lote_prot_venc_trib_w;
		end if;
		
		exception
		when others then
			ds_erro_w	:= substr(sqlerrm(SQLSTATE), 1, 4000);
			CALL wheb_mensagem_pck.exibir_mensagem_abort(189397,'DS_ERRO=' || ds_erro_w);
			--r aise_application_error(-20011,'Erro ao inserir imposto no título. ' || ds_erro_w);
		end;
	end loop;
	close C05;
	end;
end loop;
close C04;

open C03;
loop
fetch C03 into
	nr_titulo_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	update	titulo_pagar
	set	nr_seq_trans_fin_baixa	= nr_seq_trans_fin_baixa_conta_w
	where	nr_titulo 		= nr_titulo_w;
	end;
end loop;
close C03;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_titulo_lote ( nr_seq_lote_p bigint, nm_usuario_p text) FROM PUBLIC;

