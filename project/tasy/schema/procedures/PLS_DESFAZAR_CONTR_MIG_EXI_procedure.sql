-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_desfazar_contr_mig_exi ( nr_seq_proposta_p text, nm_usuario_p text) AS $body$
DECLARE


nr_seq_segurado_w		bigint;
nr_seq_segurado_ant_w		bigint;
nr_seq_segurado_mig_w		bigint;
nr_seq_contrato_w		bigint;
dt_liberacao_w			timestamp;
dt_rescisao_w			timestamp;
dt_migracao_w			timestamp;
dt_suspensao_seg_w		timestamp;
nm_pessoa_fisica_w		varchar(255);
nr_seq_motivo_canc_migracao_w	pls_proposta_adesao.nr_seq_motivo_cancel%type;
nr_seq_motivo_cancelamento_w	pls_segurado.nr_seq_motivo_cancelamento%type;
ie_rescisao_migracao_w		pls_segurado.ie_rescisao_migracao%type;
nr_seq_contrato_ant_w		pls_contrato.nr_sequencia%type;
ie_situacao_w			pls_contrato.ie_situacao%type;
nr_seq_status_exclusao_w	pls_segurado_status.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_segurado_ant,
		nr_seq_contrato,
		dt_liberacao,
		dt_migracao
	from	pls_segurado
	where	nr_proposta_adesao	= nr_seq_proposta_p
	and	ie_tipo_segurado	in ('A','B')
	order by CASE WHEN coalesce(nr_seq_titular::text, '') = '' THEN 1  ELSE -1 END;


BEGIN

select	max(nr_seq_motivo_cancel)
into STRICT	nr_seq_motivo_canc_migracao_w
from	pls_proposta_adesao
where	nr_sequencia	= nr_seq_proposta_p;

if (coalesce(nr_seq_motivo_canc_migracao_w::text, '') = '') then
	nr_seq_motivo_canc_migracao_w	:= obter_valor_param_usuario(1232, 20, Obter_Perfil_Ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
end if;

open C01;
loop
fetch C01 into
	nr_seq_segurado_w,
	nr_seq_segurado_ant_w,
	nr_seq_contrato_w,
	dt_liberacao_w,
	dt_migracao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	select	substr(obter_nome_pf(cd_pessoa_fisica),1,255)
	into STRICT	nm_pessoa_fisica_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
	
	--Verificar se o beneficário já está liberado
	if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(226177,'NM_BENEFICIARIO='||nm_pessoa_fisica_w);
	end if;	
	
	if (nr_seq_segurado_ant_w IS NOT NULL AND nr_seq_segurado_ant_w::text <> '') then
		select	max(nr_seq_segurado_mig),
			max(nr_seq_motivo_cancelamento)
		into STRICT	nr_seq_segurado_mig_w,
			nr_seq_motivo_cancelamento_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_segurado_ant_w;
		
		--Verificar se o beneficário que vai ser delatado é igual ao que foi migrado
		if (nr_seq_segurado_mig_w = nr_seq_segurado_w) then
			select	dt_rescisao,
				coalesce(ie_rescisao_migracao,'N'),
				nr_seq_contrato
			into STRICT	dt_rescisao_w,
				ie_rescisao_migracao_w,
				nr_seq_contrato_ant_w
			from	pls_segurado
			where	nr_sequencia	= nr_seq_segurado_ant_w;
			
			if (ie_rescisao_migracao_w = 'S') then
				dt_suspensao_seg_w := pls_obter_dt_suspensao_seg(nr_seq_segurado_ant_w);
				update	pls_segurado
				set	dt_rescisao			 = NULL,
					dt_limite_utilizacao		 = NULL,
					nr_seq_motivo_cancelamento	 = NULL,
					nr_seq_causa_rescisao		 = NULL,
					ie_tipo_rescisao		= '',
					dt_cancelamento			 = NULL,
					ie_situacao_atend		= CASE WHEN dt_suspensao_seg_w = NULL THEN CASE WHEN dt_liberacao = NULL THEN 'I'  ELSE 'A' END   ELSE 'S' END ,
					ie_rescisao_migracao		 = NULL
				where	nr_sequencia			= nr_seq_segurado_ant_w;
				
				select 	max(ie_situacao)
				into STRICT	ie_situacao_w
				from 	pls_contrato
				where	nr_sequencia = nr_seq_contrato_ant_w;
					
				if (coalesce(ie_situacao_w,1) = 3) then
					update	pls_contrato
					set	dt_rescisao_contrato	 = NULL,
						dt_limite_utilizacao	 = NULL,
						ie_situacao		= '2',
						nm_usuario		= nm_usuario_p,
						dt_atualizacao		= clock_timestamp(),
						dt_reativacao		= clock_timestamp(),
						dt_cancelamento		 = NULL,
						nr_seq_motivo_rescisao	 = NULL,
						nr_seq_causa_rescisao	 = NULL
					where	nr_sequencia		= nr_seq_contrato_ant_w;
					
					insert into pls_contrato_historico(
								nr_sequencia,
								cd_estabelecimento,
								nr_seq_contrato,
								dt_historico,
								ie_tipo_historico,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								ds_historico)
							values (	nextval('pls_contrato_historico_seq'),
								wheb_usuario_pck.get_cd_estabelecimento,
								nr_seq_contrato_ant_w,
								clock_timestamp(),
								'2',
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								'Reativação do contrato ao desfazer a contratação através da função OPS - Proposta de Adesão Eletrônica');
				end if;	
				
				/* Gerar histórico  de reativação do segurado anterior*/

				CALL pls_gerar_segurado_historico(	nr_seq_segurado_ant_w, '2', clock_timestamp(),'Reativação',
					'Desfeita a contratação do beneficiário através da função OPS - Proposta de Adesão', null, clock_timestamp(), null, 
					null, clock_timestamp(), null, null, 
					null, null, null, null, nm_usuario_p,
					'N');
				
				CALL pls_preco_beneficiario_pck.atualizar_preco_beneficiarios(null, nr_seq_contrato_ant_w, null, null, clock_timestamp(), null, 'N', nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);	
			end if;
			
			/*Retira informações do beneficiário, sobre a migração*/

			update	pls_segurado
			set	dt_migracao			 = NULL,
				nr_seq_segurado_mig		 = NULL,
				nr_contrato_migrado		 = NULL,
				nm_usuario			= nm_usuario_p,
				dt_atualizacao			= clock_timestamp()
			where	nr_sequencia			= nr_seq_segurado_ant_w;
		else
			goto final;
		end if;
	end if;
	
	update	pls_declaracao_segurado
	set	nr_seq_segurado  = NULL
	where	nr_seq_segurado = nr_seq_segurado_w;
	
	delete	FROM w_pls_carencia_abrang_ant
	where	nr_seq_segurado	= nr_seq_segurado_w;
		
	delete	FROM pls_segurado_compl
	where	nr_seq_segurado	= nr_seq_segurado_w;
	
	delete	FROM pls_carencia
	where	nr_seq_segurado	= nr_seq_segurado_w;
	
	delete	FROM sip_beneficiario_exposto
	where	nr_seq_segurado	= nr_seq_segurado_w;
	
	delete	FROM w_pls_benef_movto_mensal
	where	nr_seq_segurado	= nr_seq_segurado_w;
	
	delete	FROM w_pls_benef_movto_mes_sca
	where	nr_seq_segurado	= nr_seq_segurado_w;
	
	delete	FROM pls_segurado_repasse
	where	nr_seq_segurado	= nr_seq_segurado_w;
		
	delete	FROM pls_segurado_doc_arq
	where	nr_seq_segurado	= nr_seq_segurado_w;
	
	begin
	delete	FROM pls_bonificacao_vinculo
	where	nr_seq_segurado	= nr_seq_segurado_w;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(226178,'NM_BENEFICIARIO='||nm_pessoa_fisica_w||';'||'DS_ERRO='||sqlerrm(SQLSTATE));
	end;
	
	begin
	
	update	pls_segurado_preco_origem
	set	nr_seq_preco  = NULL
	where 	nr_seq_vinculo_sca	in (	SELECT 	nr_sequencia
						from 	pls_sca_vinculo
						where	nr_seq_segurado	= nr_seq_segurado_w);
	
	delete	FROM pls_plano_preco
	where 	nr_seq_tabela   in (	SELECT 	a.nr_seq_tabela
					from 	pls_sca_vinculo a
					where	a.nr_seq_segurado	= nr_seq_segurado_w
					and	not exists ( 	SELECT  1
								from 	pls_sca_vinculo b
								where 	b.nr_seq_tabela = a.nr_seq_tabela
								and	b.nr_sequencia <> a.nr_sequencia));
		
	delete  FROM pls_segurado_preco_origem
	where 	nr_seq_vinculo_sca	in (	SELECT 	nr_sequencia
						from 	pls_sca_vinculo
						where	nr_seq_segurado	= nr_seq_segurado_w);
						
	update	pls_tabela_preco
	set	nr_seq_sca  = NULL, nr_seq_sca_vinculo  = NULL
	where	nr_sequencia	in (	SELECT 	a.nr_seq_tabela
					from 	pls_sca_vinculo a
					where	a.nr_seq_segurado	= nr_seq_segurado_w
					and	not exists ( 	SELECT  1
								from 	pls_sca_vinculo b
								where 	b.nr_seq_tabela = a.nr_seq_tabela
								and	b.nr_sequencia <> a.nr_sequencia));
		
	update	pls_sca_vinculo
	set	nr_seq_tabela  = NULL
	where	nr_seq_segurado	= nr_seq_segurado_w;
	
	delete 	FROM pls_tabela_preco
	where	nr_sequencia	in (	SELECT 	a.nr_seq_tabela
					from 	pls_sca_vinculo a
					where	a.nr_seq_segurado	= nr_seq_segurado_w
					and	not exists ( 	SELECT  1
								from 	pls_sca_vinculo b
								where 	b.nr_seq_tabela = a.nr_seq_tabela
								and	b.nr_sequencia <> a.nr_sequencia));
	
	delete	FROM pls_sca_vinculo
	where	nr_seq_segurado	= nr_seq_segurado_w;
		
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(226178,'NM_BENEFICIARIO='||nm_pessoa_fisica_w||';'||'DS_ERRO='||sqlerrm(SQLSTATE));
	end;
	
	begin
	delete	FROM pls_segurado_historico
	where	nr_seq_segurado	= nr_seq_segurado_w;
	exception
		when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(226178,'NM_BENEFICIARIO='||nm_pessoa_fisica_w||';'||'DS_ERRO='||sqlerrm(SQLSTATE));
	end;
	
	begin
	delete	FROM pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
	exception
		when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(226178,'NM_BENEFICIARIO='||nm_pessoa_fisica_w||';'||'DS_ERRO='||sqlerrm(SQLSTATE));
	end;
	
	<<final>>
	nr_seq_segurado_w	:= nr_seq_segurado_w;
	
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_desfazar_contr_mig_exi ( nr_seq_proposta_p text, nm_usuario_p text) FROM PUBLIC;

