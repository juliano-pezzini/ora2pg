-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_prescr_proc_exame_comp ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE

						

qt_exame_w			bigint;
nr_seq_prescr_proc_peca_w	bigint;
ie_tipo_designacao_w		varchar(15);
nr_seq_pato_exame_w		bigint;
nr_seq_apresent_w		bigint;	
nr_seq_laudo_w			bigint;		
ie_executar_exame_compl_w	varchar(1);
nr_seq_peca_w			bigint;
						
C01 CURSOR FOR
	SELECT	*
	from	prescr_proc_peca
	where	nr_sequencia	= nr_seq_prescr_proc_peca_w;
	
	
c01_w c01%rowtype;
						
BEGIN

ie_executar_exame_compl_w	:= coalesce(obter_valor_param_usuario(945, 73, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');

select	qt_exame,
	nr_seq_prescr_proc_peca,
	nr_seq_pato_exame,
	ie_tipo_designacao
into STRICT	qt_exame_w,
	nr_seq_prescr_proc_peca_w,
	nr_seq_pato_exame_w,
	ie_tipo_designacao_w
from	prescr_proc_exame_compl
where	nr_sequencia	= nr_sequencia_p;


update	prescr_proc_peca
set	ie_status 	= 'P'
where	nr_sequencia 	= nr_seq_prescr_proc_peca_w;


open C01;
loop
fetch C01 into	
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		
	nr_seq_laudo_w	:= null;
	if (ie_executar_exame_compl_w = 'N') then
		nr_seq_laudo_w	:= c01_w.nr_seq_laudo;
	end if;

	for i in 1..qt_exame_w loop
		begin
		
		select coalesce(max(nr_seq_apresent),0)+1
		into STRICT	nr_seq_apresent_w
		from	prescr_proc_peca
		where	nr_prescricao = c01_w.nr_prescricao
		and	nr_seq_prescr = c01_w.nr_seq_prescr;
		
		select	nextval('prescr_proc_peca_seq')
		into STRICT	nr_seq_peca_w
		;
		
		insert into prescr_proc_peca(
			nr_sequencia, 			nr_prescricao, 		nr_seq_prescr, 
			cd_topografia, 			cd_morfologia, 		dt_atualizacao, 
			nm_usuario, 			nr_seq_laudo, 		cd_doenca_cid, 
			dt_atualizacao_nrec, 		nm_usuario_nrec, 	nr_seq_peca, 
			ie_status, 			nr_seq_tipo, 		nr_controle, 
			nr_revisao, 			nr_fragmentos, 		ds_designacao, 
			ds_observacao, 			nr_seq_apresent, 	ds_amostra_principal, 
			nr_seq_amostra_princ, 		ie_tipo_designacao, 	nr_seq_pato_exame, 
			nr_seq_exame_complementar, 	ie_exame_compl, 	nr_seq_designacao, ie_situacao, NR_SEQ_MORF_DESC_ADIC
			) 
		values ( 
			nr_seq_peca_w, 			c01_w.nr_prescricao, 	c01_w.nr_seq_prescr, 
			c01_w.cd_topografia, 		c01_w.cd_morfologia, 	c01_w.dt_atualizacao, 
			c01_w.nm_usuario, 		nr_seq_laudo_w, 	c01_w.cd_doenca_cid, 
			c01_w.dt_atualizacao_nrec, 	c01_w.nm_usuario_nrec, 	nr_seq_prescr_proc_peca_w, 
			'P', 				c01_w.nr_seq_tipo, 	c01_w.nr_controle, 
			c01_w.nr_revisao, 		c01_w.nr_fragmentos, 	c01_w.ds_designacao, 
			c01_w.ds_observacao, 		c01_w.nr_seq_apresent, 	c01_w.ds_amostra_principal, 
			c01_w.nr_seq_amostra_princ, 	ie_tipo_designacao_w, 	nr_seq_pato_exame_w, 
			nr_sequencia_p, 		'S', 			c01_w.nr_seq_designacao, 'A', c01_w.NR_SEQ_MORF_DESC_ADIC
			);
		
		if (ie_executar_exame_compl_w in ('S', 'R')) then
			update	prescr_proc_exame_compl
			set	nr_seq_peca_exame_compl = nr_seq_peca_w
			where	nr_sequencia = nr_sequencia_p;
		end if;
		
		end;
	end loop;
	
	end;
end loop;
close C01;

update	prescr_proc_exame_compl
set	dt_liberacao	= clock_timestamp(),
	nm_usuario_liberacao = nm_usuario_p
where	nr_sequencia	= nr_sequencia_p;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_prescr_proc_exame_comp ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

