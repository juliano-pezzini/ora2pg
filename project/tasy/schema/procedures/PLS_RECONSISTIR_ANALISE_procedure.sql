-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_reconsistir_analise ( nr_seq_analise_p bigint, nr_seq_grupo_atual_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) AS $body$
DECLARE

 
nr_seq_conta_w			bigint;				
ie_origem_analise_w		bigint;
ie_via_acesso_regra_w		varchar(1) := 'N';
ie_via_acesso_w			varchar(2);
tx_item_w			double precision;
ie_origem_conta_w		varchar(2);
ie_via_acesso_inf_w		varchar(1)	:= 'S';
nr_seq_conta_proc_w		bigint;
ie_via_acesso_imp_w		varchar(2);
nr_seq_regra_via_acesso_w	bigint;
ie_via_acesso_manual_w		pls_conta_proc.ie_via_acesso_manual%type;
qt_liberado_conta_w		pls_conta_proc.qt_procedimento%type;
qt_conta_pendente_w		integer;

C01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_conta 
	where	nr_seq_analise = nr_seq_analise_p 
	order by 1;
	
C02 CURSOR FOR 
	SELECT	nr_sequencia, 
		ie_via_acesso, 
		ie_via_acesso_imp, 
		nr_seq_regra_via_acesso, 
		ie_via_acesso_manual 
	from	pls_conta_proc 
	where	nr_seq_conta = nr_seq_conta_w 
	order by 1;
/*cursor criado para antes de iniciar o processo zerar todas as variáveis*/
C03 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_conta 
	where	nr_seq_analise = nr_seq_analise_p 
	order by 1;


BEGIN 
 
/*incluído a atualização da análise, para que os valores de participante sejam atualizados após a pls_análise_status_pgto Diogo*/
				 
select	max(ie_origem_analise) 
into STRICT	ie_origem_analise_w 
from	pls_analise_conta 
where	nr_sequencia = nr_seq_analise_p;
 
select	coalesce(ie_via_acesso_regra,'N') 
into STRICT	ie_via_acesso_regra_w 
from	pls_parametros 
where	cd_estabelecimento = cd_estabelecimento_p;
 
open C03;
loop 
fetch C03 into	 
	nr_seq_conta_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin 
	update pls_conta_proc 
	set   tx_medico             = NULL, 
		tx_custo_operacional       = NULL, 
		tx_material            = NULL, 
		nr_seq_regra_qtde_exec      = NULL, 
		ie_regra_qtde_execucao      = NULL 
	where  nr_seq_conta          = nr_seq_conta_w;
	end;
end loop;
close C03;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_conta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	CALL pls_delete_conta_medica_resumo(nr_seq_conta_w,null,null,nm_usuario_P);
 
	begin 
		select	ie_origem_conta 
		into STRICT	ie_origem_conta_w 
		from	pls_conta 
		where	nr_sequencia = nr_seq_conta_w;
	exception 
	when others then 
		ie_origem_conta_w := 'D';
	end;
	 
	open C02;
	loop 
	fetch C02 into	 
		nr_seq_conta_proc_w, 
		ie_via_acesso_w, 
		ie_via_acesso_imp_w, 
		nr_seq_regra_via_acesso_w, 
		ie_via_acesso_manual_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		ie_via_acesso_inf_w := 'S';
		if (coalesce(ie_origem_conta_w,'D') = 'E') and (ie_via_acesso_regra_w = 'S') then 
			if (coalesce(ie_via_acesso_w,'X') = coalesce(ie_via_acesso_imp_w,'X')) and (not ie_via_acesso_manual_w	= 'S')then 
				ie_via_acesso_inf_w	:= 'N';
			end if;
		end if;
		 
		if (ie_via_acesso_inf_w = 'N') or (coalesce(nr_seq_regra_via_acesso_w,0) > 0 )then 
			update	pls_conta_proc 
			set	ie_vl_apresentado_sistema	= 'N', 
				vl_liberado			= 0, 
				vl_unitario			= 0, 
				qt_procedimento			= 0, 
				vl_glosa			= 0, 
				ie_via_acesso			 = NULL, 
				tx_item				= 100, 
				nr_seq_exame_coleta		 = NULL, 
				nr_seq_prest_pgto_coleta	 = NULL, 
				vl_pag_medico_conta		= coalesce(vl_medico_original,0), 
				ie_status			= 'U', 
				vl_exame_coleta			= 0, 
				nr_seq_regra_via_acesso		 = NULL 
			where	nr_sequencia			= nr_seq_conta_proc_w 
			and	ie_status <> 'D';
		else 
			update	pls_conta_proc 
			set	ie_vl_apresentado_sistema	= 'N', 
				vl_liberado			= 0, 
				vl_unitario			= 0, 
				qt_procedimento			= 0, 
				vl_glosa			= 0, 
				nr_seq_exame_coleta		 = NULL, 
				nr_seq_prest_pgto_coleta	 = NULL, 
				ie_via_acesso			= ie_via_acesso, 
				tx_item				= tx_item, 
				vl_exame_coleta			= 0, 
				vl_pag_medico_conta		= coalesce(vl_medico_original,0), 
				ie_status			= 'U' 
			where	nr_sequencia 			= nr_seq_conta_proc_w 
			and	ie_status <> 'D';
		end if;
		end;
	end loop;
	close C02;
	 
	update	pls_conta_mat 
	set	ie_autorizado			= 'N' 
	where	nr_seq_conta 			= nr_seq_conta_w;
 
	CALL pls_reconsistir_glosas_oc(	nr_seq_conta_w,	null, null, 
					null, nr_seq_analise_p, nr_seq_grupo_atual_p, 
					cd_estabelecimento_p, nm_usuario_p	);
					 
					 
	if (ie_origem_analise_w = 3) then 
	 
		CALL pls_atualizar_pos_estab_ptu(	nr_seq_conta_w,	null, null, 
						nr_seq_analise_p, 'N', cd_estabelecimento_p, 
						nm_usuario_p	);
	else 
		CALL pls_atualizar_conta_pos_estab(	nr_seq_conta_w,	null, null, 
						nr_seq_analise_p, 'N', cd_estabelecimento_p, 
						nm_usuario_p	);
	end if;		
 
	if (ie_origem_analise_w = 3) then 
	 
		CALL pls_atual_w_resumo_conta_ptu(	nr_seq_conta_w, null, null, 
						null, nr_seq_analise_p, nm_usuario_p	);
 
	else 
		CALL pls_atualiza_w_resumo_conta(	nr_seq_conta_w, null, null, 
						null, nr_seq_analise_p, nm_usuario_p	);
	end if;	
	 
	CALL pls_analise_status_item(	nr_seq_conta_w,	null, null,				 
					nr_seq_analise_p, cd_estabelecimento_p,	nm_usuario_p, 
					null);	
				 
	CALL pls_analise_status_pgto(	nr_seq_conta_w,	null, null,				 
					nr_seq_analise_p, cd_estabelecimento_p,	nm_usuario_p, 
					null,'N',null,null);
					 
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_reconsistir_analise ( nr_seq_analise_p bigint, nr_seq_grupo_atual_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

