-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE schematic4test_clean () AS $body$
DECLARE

NR_SEQUENCIA_W bigint;
NR_SEQUENCIA_W2 bigint;
NR_SEQUENCIA_W3 bigint;
NR_SEQUENCIA_W4 bigint;
NR_SEQUENCIA_W5 bigint;
NR_SEQUENCIA_W6 bigint;
QTD_BEHDW bigint;
QTD_SYNCW bigint;
QTD_STACKW bigint;
QTD_SCHEDW bigint;
QTD_URLW bigint;
QTD_RESTOREW bigint;

--loop schedules
C01 CURSOR FOR
  SELECT NR_SEQUENCIA
     INTO STRICT NR_SEQUENCIA_W
  FROM SCHEM_TEST_SCHEDULE 
  WHERE IE_JOBS = '1';

--loop suites
C02 CURSOR FOR
  SELECT NR_SEQUENCIA
      INTO STRICT NR_SEQUENCIA_W2
  FROM SCHEM_TEST_SUITE 
  WHERE IE_JOBS = '1';

--loop schedules that not in package
C03 CURSOR FOR  
  SELECT NR_SEQUENCIA 
     INTO STRICT NR_SEQUENCIA_W3
  FROM SCHEM_TEST_SCHEDULE 
  WHERE coalesce(NR_SEQ_PACKAGE::text, '') = ''
  AND DT_ATUALIZACAO_NREC <= clock_timestamp() - interval '60 days';

--loop group status incomplete
C04 CURSOR FOR  
  SELECT NR_SEQUENCIA 
     INTO STRICT NR_SEQUENCIA_W4
  FROM SCHEM_TEST_PACKAGE_SCHED 
  WHERE IE_STATUS = '5';

C05 CURSOR FOR  
  SELECT NR_SEQUENCIA 
     INTO STRICT NR_SEQUENCIA_W5
  FROM SCHEM_TEST_PACKAGE_SCHED 
  WHERE NR_SEQ_PACKAGE NOT IN (SELECT NR_SEQUENCIA FROM SCHEM_TEST_PACKAGE);

C06 CURSOR FOR  
  SELECT NR_SEQUENCIA 
     INTO STRICT NR_SEQUENCIA_W6
  FROM SCHEM_TEST_SCHEDULE 
  WHERE coalesce(NR_SEQ_PACKAGE::text, '') = ''
  AND IE_STATUS = '5';


BEGIN
  --procedure that clean register
  OPEN C01;
  LOOP
  FETCH C01 INTO
    NR_SEQUENCIA_W;
  EXIT WHEN NOT FOUND; /* apply on C01 */
  BEGIN	
    CALL Schematic4Test_Script_Menu(NR_SEQUENCIA_W, '42', 'Auto Robot');
  END;
  END LOOP;
  CLOSE C01;

  OPEN C02;
  LOOP
  FETCH C02 INTO
    NR_SEQUENCIA_W2;
  EXIT WHEN NOT FOUND; /* apply on C02 */
  BEGIN	
    CALL Schematic4Test_Script_Menu(NR_SEQUENCIA_W2, '31', 'Auto Robot');
  END;
  END LOOP;
  CLOSE C02;

  OPEN C03;
  LOOP
  FETCH C03 INTO
    NR_SEQUENCIA_W3;
  EXIT WHEN NOT FOUND; /* apply on C03 */
  BEGIN	
    CALL Schematic4Test_Script_Menu(NR_SEQUENCIA_W3, '42', 'Auto Robot');
  END;
  END LOOP;
  CLOSE C03;

  OPEN C04;
  LOOP
  FETCH C04 INTO
    NR_SEQUENCIA_W4;
  EXIT WHEN NOT FOUND; /* apply on C04 */
  BEGIN	
    CALL Schematic4Test_Script_Menu(NR_SEQUENCIA_W4, '91', 'Auto Robot');
  END;
  END LOOP;
  CLOSE C04;

  OPEN C05;
  LOOP
  FETCH C05 INTO
    NR_SEQUENCIA_W5;
  EXIT WHEN NOT FOUND; /* apply on C05 */
  BEGIN	
    CALL Schematic4Test_Script_Menu(NR_SEQUENCIA_W5, '91', 'Auto Robot');
  END;
  END LOOP;
  CLOSE C05;

  OPEN C06;
  LOOP
  FETCH C06 INTO
    NR_SEQUENCIA_W6;
  EXIT WHEN NOT FOUND; /* apply on C06 */
  BEGIN	
    CALL Schematic4Test_Script_Menu(NR_SEQUENCIA_W6, '42', 'Auto Robot');
  END;
  END LOOP;
  CLOSE C06;

  SELECT COUNT(*) QTD_BEH
    INTO STRICT QTD_BEHDW
  FROM SCHEM_TEST_BEHOLDER
  WHERE DT_ATUALIZACAO_NREC <= clock_timestamp() - interval '60 days';

  IF (QTD_BEHDW > 0) THEN
    DELETE FROM SCHEM_TEST_BEHOLDER WHERE DT_ATUALIZACAO_NREC <= clock_timestamp() - interval '60 days';
    COMMIT;
  END IF;

  SELECT COUNT(*) QTD_SYNC
    INTO STRICT QTD_SYNCW
  FROM SCHEM_TEST_SYNC_LOG
  WHERE DT_ATUALIZACAO_NREC <= clock_timestamp() - interval '60 days';

  IF (QTD_SYNCW > 0) THEN
    DELETE FROM SCHEM_TEST_SYNC_LOG WHERE DT_ATUALIZACAO_NREC <= clock_timestamp() - interval '60 days';
    COMMIT;
  END IF;

  SELECT COUNT(*) QTD_STACK
    INTO STRICT QTD_STACKW
  FROM SCHEM_TEST_STACK
  WHERE DT_ATUALIZACAO_NREC <= clock_timestamp() - interval '60 days';

  IF (QTD_STACKW > 0) THEN
    DELETE FROM SCHEM_TEST_STACK WHERE DT_ATUALIZACAO_NREC <= clock_timestamp() - interval '60 days';
    COMMIT;
  END IF;

  SELECT COUNT(*) QTD_SCHED
    INTO STRICT QTD_SCHEDW
  FROM SCHEM_TEST_LOG
  WHERE coalesce(NR_SEQ_SCHEDULE::text, '') = '';

  IF (QTD_SCHEDW > 0) THEN
    DELETE FROM SCHEM_TEST_LOG WHERE coalesce(NR_SEQ_SCHEDULE::text, '') = '';
    COMMIT;
  END IF;

  SELECT COUNT(*) QTD_URL
    INTO STRICT QTD_URLW
  FROM SCHEM_TEST_URL
  WHERE IE_SITUACAO = 'I' AND NR_SEQUENCIA NOT IN (SELECT NR_SEQ_URL FROM SCHEM_TEST_PRESET) AND NR_SEQUENCIA NOT IN (SELECT NR_SEQ_URL FROM SCHEM_TEST_SCHEDULE);

  IF (QTD_URLW > 0) THEN
    DELETE FROM SCHEM_TEST_URL WHERE IE_SITUACAO = 'I' AND NR_SEQUENCIA NOT IN (SELECT NR_SEQ_URL FROM SCHEM_TEST_PRESET) AND NR_SEQUENCIA NOT IN (SELECT NR_SEQ_URL FROM SCHEM_TEST_SCHEDULE);
    COMMIT;
  END IF;

  SELECT COUNT(*) QTD_RESTORE
    INTO STRICT QTD_RESTOREW
  FROM SCHEM_TEST_SNAP_RESTORE
  WHERE IE_SITUACAO = 'I' AND DT_ATUALIZACAO_NREC <= clock_timestamp() - interval '60 days';

  IF (QTD_RESTOREW > 0) THEN
    DELETE FROM SCHEM_TEST_SNAP_RESTORE WHERE IE_SITUACAO = 'I' AND DT_ATUALIZACAO_NREC <= clock_timestamp() - interval '60 days';
    COMMIT;
  END IF;

  
  EXCEPTION
  WHEN no_data_found THEN
    RAISE NOTICE 'Erro: Data not found';
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE schematic4test_clean () FROM PUBLIC;

