-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_definir_geracao_lead_resc ( nr_seq_contrato_p bigint, nr_seq_intercambio_p bigint, nr_seq_segurado_p bigint, ie_tipo_rescisao_p text, ie_tipo_estipulante_p text, nr_seq_motivo_rescisao_p bigint, cd_perfil_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ie_geracao_lead_w		varchar(10);
cd_pessoa_fisica_w		varchar(10);
cd_cgc_estipulante_w		varchar(14);
nr_seq_solicitacao_w		bigint;
nm_pessoa_fisica_w		varchar(255);
dt_nascimento_w			timestamp;
nr_telefone_w			varchar(40);
ds_email_w			varchar(255);
nr_cpf_w			varchar(14);
nr_ddd_w			varchar(2);
nr_ddi_w			varchar(2);
sg_uf_w				compl_pessoa_fisica.sg_estado%type;
cd_municipio_ibge_w		varchar(7);
cd_nacionalidade_w		varchar(8);
nr_reg_geral_estrang_w		varchar(30);
nr_seq_agente_motivador_w	bigint;
nm_contato_w			varchar(50);
nr_telefone_celular_w		varchar(40);
ds_endereco_w			varchar(255);
nr_endereco_w			varchar(10);
ds_complemento_w		varchar(100);
ie_origem_solicitacao_w		varchar(5);
ds_observacao_w			varchar(255);
nr_seq_contrato_w		bigint;
qt_idade_w			bigint;
qt_dias_ativ_canal_com_w	bigint;
ds_motivo_rescisao_w		varchar(255);
ds_observacao_aux_w		varchar(2000);
ds_bairro_w			varchar(40);
cd_cep_w			varchar(40);
dt_rescisao_contrato_w		timestamp;
nr_seq_segurado_w		bigint;
ie_titularidade_w		varchar(10);
ie_gerou_estip_w		varchar(10);
ie_exigencia_contato_w		pls_regra_lead_rescisao.ie_exigencia_contato%type;
ie_gerar_lead_w			varchar(1);
cd_pessoa_fisica_benef_w	pessoa_fisica.cd_pessoa_fisica%type;
nr_seq_plano_w			pls_plano.nr_sequencia%type;
ie_tipo_contratacao_w		pls_plano.ie_tipo_contratacao%type;
qt_pessoas_duplic_w		bigint;
ds_erro_duplic_w		varchar(255);
ie_consistir_duplicidade_w	pls_regra_lead_rescisao.ie_consistir_duplicidade%type;

c01 CURSOR FOR 
	SELECT	nr_sequencia, 
		CASE WHEN coalesce(nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END , 
		cd_pessoa_fisica, 
		nr_seq_plano 
	from	pls_segurado 
	where	nr_seq_contrato		= nr_seq_contrato_p 
	and	dt_rescisao 		= dt_rescisao_contrato_w 
	and	ie_tipo_rescisao_p	= 'C' 
	
union
 
	SELECT	b.nr_sequencia, 
		CASE WHEN coalesce(b.nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END , 
		b.cd_pessoa_fisica, 
		b.nr_seq_plano 
	from	pls_segurado	b, 
		pls_contrato	a 
	where	b.nr_seq_contrato	= a.nr_sequencia 
	and	a.nr_contrato_principal	= nr_seq_contrato_p 
	and	dt_rescisao		= dt_rescisao_contrato_w 
	and	ie_tipo_rescisao_p	= 'C' 
	
union
 
	select	nr_sequencia, 
		CASE WHEN coalesce(nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END , 
		cd_pessoa_fisica, 
		nr_seq_plano 
	from	pls_segurado 
	where	nr_sequencia		= nr_seq_segurado_p 
	and	ie_tipo_rescisao_p	<> 'C';

c02 CURSOR FOR 
	SELECT	ie_geracao_lead, 
		coalesce(ie_exigencia_contato,'N'), 
		coalesce(ie_consistir_duplicidade,'N') 
	from	pls_regra_lead_rescisao 
	where	((ie_tipo_rescisao	= ie_tipo_rescisao_p) or (coalesce(ie_tipo_rescisao::text, '') = '')) 
	and	((cd_perfil		= cd_perfil_p) or (coalesce(cd_perfil::text, '') = '')) 
	and	((ie_tipo_estipulante	= ie_tipo_estipulante_p) or (ie_tipo_estipulante = 'A')) 
	and	((ie_titularidade	= ie_titularidade_w) or (ie_titularidade = 'A')) 
	and	ie_situacao		= 'A' 
	order by ie_tipo_rescisao, 
		cd_perfil, 
		CASE WHEN ie_tipo_estipulante='A' THEN 1  ELSE -1 END , 
		CASE WHEN ie_titularidade='A' THEN 1  ELSE -1 END;


BEGIN 
 
if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then 
	select	nr_seq_contrato 
	into STRICT	nr_seq_contrato_w 
	from	pls_segurado 
	where	nr_sequencia	= nr_seq_segurado_p;
end if;
 
if (ie_tipo_rescisao_p = 'C') then 
	select	max(dt_rescisao_contrato) 
	into STRICT	dt_rescisao_contrato_w 
	from	pls_contrato 
	where	nr_sequencia	= nr_seq_contrato_p;
end if;
 
ds_observacao_w	:= 'Gerado a partir do contrato ' || coalesce(nr_seq_contrato_p,nr_seq_contrato_w) || '.';
 
select	max(nr_seq_agente_motivador) 
into STRICT	nr_seq_agente_motivador_w 
from	pls_parametros 
where	cd_estabelecimento	= cd_estabelecimento_p;
 
if (coalesce(nr_seq_agente_motivador_w,0) = 0) then 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_agente_motivador_w 
	from	pls_agente_motivador 
	where	cd_estabelecimento	= cd_estabelecimento_p;
end if;
 
ie_gerou_estip_w	:= 'N';
 
open C01;
loop 
fetch C01 into 
	nr_seq_segurado_w, 
	ie_titularidade_w, 
	cd_pessoa_fisica_benef_w, 
	nr_seq_plano_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	ie_gerar_lead_w	:= 'N';
	 
	open C02;
	loop 
	fetch C02 into 
		ie_geracao_lead_w, 
		ie_exigencia_contato_w, 
		ie_consistir_duplicidade_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
	end loop;
	close C02;
	 
	/*Gerar lead para o estipulante*/
 
	if (ie_geracao_lead_w = 'E') then 
		if (ie_gerou_estip_w = 'S') then 
			goto final;
		end if;
		 
		select	cd_pf_estipulante, 
			cd_cgc_estipulante 
		into STRICT	cd_pessoa_fisica_w, 
			cd_cgc_estipulante_w 
		from	pls_contrato 
		where	nr_sequencia	= nr_seq_contrato_p;
		 
		select	nextval('pls_solicitacao_comercial_seq') 
		into STRICT	nr_seq_solicitacao_w 
		;
		 
		if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then 
			select	a.nm_pessoa_fisica, 
				a.dt_nascimento, 
				substr(obter_compl_pf(a.cd_pessoa_fisica,1,'T'),1,40), 
				substr(obter_compl_pf(a.cd_pessoa_fisica,1,'M'),1,255), 
				substr(obter_compl_pf(a.cd_pessoa_fisica,1,'C'),1,14), 
				coalesce(substr(obter_compl_pf(a.cd_pessoa_fisica,1,'DDT'),1,2),' '), 
				coalesce(substr(obter_compl_pf(a.cd_pessoa_fisica,1,'DIT'),1,2),' '), 
				substr(obter_compl_pf(a.cd_pessoa_fisica,1,'UF'),1,2), 
				substr(obter_compl_pf(a.cd_pessoa_fisica,1,'CDM'),1,7), 
				a.cd_nacionalidade, 
				a.nr_reg_geral_estrang, 
				substr(obter_primeiro_nome(a.nm_pessoa_fisica),1,50), 
				a.nr_telefone_celular, 
				substr(obter_compl_pf(a.cd_pessoa_fisica,1,'E'),1,40), 
				substr(obter_compl_pf(a.cd_pessoa_fisica,1,'NR'),1,10), 
				substr(obter_compl_pf(a.cd_pessoa_fisica,1,'CO'),1,100), 
				obter_idade(a.dt_nascimento, clock_timestamp(),'A'), 
				substr(obter_compl_pf(a.cd_pessoa_fisica,1,'B'),1,40), 
				substr(obter_compl_pf(a.cd_pessoa_fisica,1,'CEP'),1,40) 
			into STRICT	nm_pessoa_fisica_w, 
				dt_nascimento_w, 
				nr_telefone_w, 
				ds_email_w, 
				nr_cpf_w, 
				nr_ddd_w, 
				nr_ddi_w, 
				sg_uf_w, 
				cd_municipio_ibge_w, 
				cd_nacionalidade_w, 
				nr_reg_geral_estrang_w, 
				nm_contato_w, 
				nr_telefone_celular_w, 
				ds_endereco_w, 
				nr_endereco_w, 
				ds_complemento_w, 
				qt_idade_w, 
				ds_bairro_w, 
				cd_cep_w 
			from	pessoa_fisica a 
			where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w;
		elsif (cd_cgc_estipulante_w IS NOT NULL AND cd_cgc_estipulante_w::text <> '') then 
			select	ds_razao_social, 
				nr_telefone, 
				substr(pls_obter_email_pessoa(cd_estabelecimento_p,null,cd_cgc,nm_usuario_p),1,255), 
				nr_ddd_telefone, 
				nr_ddi_telefone, 
				sg_estado, 
				cd_municipio_ibge, 
				substr(obter_dados_pf_pj_estab(cd_estabelecimento_p,'',cd_cgc,'ENC'),1,255), 
				ds_endereco, 
				nr_endereco, 
				ds_complemento, 
				ds_bairro, 
				cd_cep 
			into STRICT	nm_pessoa_fisica_w, 
				nr_telefone_w, 
				ds_email_w, 
				nr_ddd_w, 
				nr_ddi_w, 
				sg_uf_w, 
				cd_municipio_ibge_w, 
				nm_contato_w, 
				ds_endereco_w, 
				nr_endereco_w, 
				ds_complemento_w, 
				ds_bairro_w, 
				cd_cep_w 
			from	pessoa_juridica 
			where	cd_cgc	= cd_cgc_estipulante_w;
			nr_telefone_celular_w	:= null;
		end if;
		 
		select	max(ie_tipo_contratacao) 
		into STRICT	ie_tipo_contratacao_w 
		from	pls_plano 
		where	nr_sequencia	= nr_seq_plano_w;
		 
		if	((ie_exigencia_contato_w = 'N') or 
			 ((ie_exigencia_contato_w = 'T') and ((nr_telefone_w IS NOT NULL AND nr_telefone_w::text <> '') or (nr_telefone_celular_w IS NOT NULL AND nr_telefone_celular_w::text <> ''))) or 
			 (ie_exigencia_contato_w = 'E' AND ds_email_w IS NOT NULL AND ds_email_w::text <> '') or 
			 ((ie_exigencia_contato_w = 'TE') and ((nr_telefone_w IS NOT NULL AND nr_telefone_w::text <> '') or (nr_telefone_celular_w IS NOT NULL AND nr_telefone_celular_w::text <> '') or (ds_email_w IS NOT NULL AND ds_email_w::text <> ''))))then 
			ie_gerar_lead_w	:= 'S';
		end if;
		 
		if (ie_gerar_lead_w = 'S') and (ie_consistir_duplicidade_w = 'S') then 
			SELECT * FROM pls_consistir_solicitacao_lead(	ie_tipo_contratacao_w, nr_seq_solicitacao_w, nr_telefone_w, nr_telefone_celular_w, null, nr_ddi_w, dt_nascimento_w, ds_email_w, cd_cgc_estipulante_w, nr_cpf_w, nm_usuario_p, cd_estabelecimento_p, qt_pessoas_duplic_w, ds_erro_duplic_w) INTO STRICT qt_pessoas_duplic_w, ds_erro_duplic_w;
			 
			if (qt_pessoas_duplic_w > 0) then 
				ie_gerar_lead_w	:= 'N';
			end if;
		end if;
		 
		if (ie_gerar_lead_w = 'S') then 
			ds_motivo_rescisao_w	:= '';
			if (nr_seq_motivo_rescisao_p IS NOT NULL AND nr_seq_motivo_rescisao_p::text <> '') then 
				ds_motivo_rescisao_w	:= 'Motivo de rescis√£o do contrato: ' || substr(pls_obter_desc_motivo_cancel(nr_seq_motivo_rescisao_p),1,100);
			end if;
			 
			ds_observacao_aux_w	:= ds_observacao_w||chr(13)||ds_motivo_rescisao_w;
			 
			insert into pls_solicitacao_comercial(	nr_sequencia, cd_estabelecimento, ie_status, nm_pessoa_fisica, dt_nascimento, 
				nr_telefone, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
				ds_email, dt_solicitacao, ie_origem_solicitacao, ie_tipo_contratacao, nr_cpf, 
				nr_ddi, nr_ddd, sg_uf_municipio, cd_municipio_ibge, cd_nacionalidade, 
				nr_reg_geral_estrang, nr_seq_agente_motivador, nm_contato, ie_etapa_solicitacao, nr_celular, 
				ds_endereco, nr_endereco, ds_complemento, ds_observacao, cd_cep, 
				nr_seq_contrato, qt_idade, ds_bairro, cd_cgc, 
				cd_cnpj_vinculado, cd_pf_vinculado) 
			values (	nr_seq_solicitacao_w, cd_estabelecimento_p, 'PE', nm_pessoa_fisica_w, dt_nascimento_w, 
				coalesce(nr_telefone_w,' '), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, 
				ds_email_w, clock_timestamp(), 'R', ie_tipo_contratacao_w, nr_cpf_w, 
				nr_ddi_w, nr_ddd_w, sg_uf_w, cd_municipio_ibge_w, cd_nacionalidade_w, 
				nr_reg_geral_estrang_w, nr_seq_agente_motivador_w, nm_contato_w, 'T', nr_telefone_celular_w, 
				ds_endereco_w, nr_endereco_w, ds_complemento_w, ds_observacao_aux_w, cd_cep_w, 
				nr_seq_contrato_p, qt_idade_w, ds_bairro_w, cd_cgc_estipulante_w, 
				cd_cgc_estipulante_w, cd_pessoa_fisica_w);
			 
			CALL pls_atualizar_atividades_canal(nr_seq_solicitacao_w,null,'N',nm_usuario_p);
			 
			CALL pls_inserir_vend_autom_solic(nr_seq_solicitacao_w,'',nm_usuario_p,cd_estabelecimento_p,'N');
			 
			ie_gerou_estip_w	:= 'S';
		end if;
	else 
		begin 
		select	substr(obter_compl_pf(cd_pessoa_fisica,1,'T'),1,40), 
			substr(obter_compl_pf(cd_pessoa_fisica,1,'M'),1,255), 
			nr_telefone_celular, 
			coalesce(substr(obter_compl_pf(cd_pessoa_fisica,1,'DIT'),1,2),' '), 
			dt_nascimento, 
			nr_cpf 
		into STRICT	nr_telefone_w, 
			ds_email_w, 
			nr_telefone_celular_w, 
			nr_ddi_w, 
			dt_nascimento_w, 
			nr_cpf_w 
		from	pessoa_fisica 
		where	cd_pessoa_fisica = cd_pessoa_fisica_benef_w;
		exception 
		when others then 
			nr_telefone_w		:= null;
			ds_email_w		:= null;
			nr_telefone_celular_w	:= null;
		end;
		 
		if	((ie_exigencia_contato_w = 'N') or 
			 ((ie_exigencia_contato_w = 'T') and ((nr_telefone_w IS NOT NULL AND nr_telefone_w::text <> '') or (nr_telefone_celular_w IS NOT NULL AND nr_telefone_celular_w::text <> ''))) or 
			 (ie_exigencia_contato_w = 'E' AND ds_email_w IS NOT NULL AND ds_email_w::text <> '') or 
			 ((ie_exigencia_contato_w = 'TE') and ((nr_telefone_w IS NOT NULL AND nr_telefone_w::text <> '') or (nr_telefone_celular_w IS NOT NULL AND nr_telefone_celular_w::text <> '') or (ds_email_w IS NOT NULL AND ds_email_w::text <> ''))))then 
			ie_gerar_lead_w	:= 'S';
		end if;
		 
		if (ie_gerar_lead_w = 'S') and (ie_consistir_duplicidade_w = 'S') then 
			SELECT * FROM pls_consistir_solicitacao_lead(	'I', 0, nr_telefone_w, nr_telefone_celular_w, null, nr_ddi_w, dt_nascimento_w, ds_email_w, null, nr_cpf_w, nm_usuario_p, cd_estabelecimento_p, qt_pessoas_duplic_w, ds_erro_duplic_w) INTO STRICT qt_pessoas_duplic_w, ds_erro_duplic_w;
			 
			if (qt_pessoas_duplic_w > 0) then 
				ie_gerar_lead_w	:= 'N';
			end if;
		end if;
		 
		if (ie_gerar_lead_w = 'S') then 
			/*Gerar lead somente para o benefici√°rio titular*/
 
			if (ie_geracao_lead_w = 'T') and (ie_titularidade_w = 'T') then 
				CALL pls_gerar_solicitacao_lead(null,null,'T','R',nm_usuario_p,cd_estabelecimento_p,nr_seq_segurado_w);
			/*Gerar lead para o benefici√°rio*/
 
			elsif (ie_geracao_lead_w = 'B') then 
				CALL pls_gerar_solicitacao_lead(null,null,'T','R',nm_usuario_p,cd_estabelecimento_p,nr_seq_segurado_w);
			end if;
		end if;
	end if;
	<<final>> 
	nr_seq_segurado_w	:= nr_seq_segurado_w;
	end;
end loop;
close C01;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_definir_geracao_lead_resc ( nr_seq_contrato_p bigint, nr_seq_intercambio_p bigint, nr_seq_segurado_p bigint, ie_tipo_rescisao_p text, ie_tipo_estipulante_p text, nr_seq_motivo_rescisao_p bigint, cd_perfil_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

