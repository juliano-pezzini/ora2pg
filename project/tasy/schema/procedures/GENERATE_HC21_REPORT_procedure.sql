-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE generate_hc21_report ( nr_atendimento_p bigint) AS $body$
DECLARE


  dt_admmission_w       timestamp;

  dt_separation_w       timestamp;

  dt_from_w             timestamp;

  dt_to_w               timestamp;

  cd_discharge_w        bigint;

  nr_days_claim_w       bigint;

  dt_admission_time_w   timestamp;

  dt_exit_time_w        timestamp;

  vl_amount_charged_w   numeric(20);

  cd_procedure_w        bigint;

  dt_service_w          timestamp;

  nr_service_w          bigint;

  cd_princ_proc_w       bigint;

  dt_princ_service_w    timestamp;

  vl_princ_proc_w       bigint;

  cd_other_service_w    bigint;

  dt_other_service_w    timestamp;

  vl_other_service_w    bigint;

  nm_familyname_w       varchar(60);

  nm_givenname_w        varchar(60);

  ds_salutation_w       varchar(10);

  nr_membership_w       varchar(30);

  ds_relationship_w     varchar(10);

  dt_birthdate_w        timestamp;

  nr_age_w              bigint;

  ds_insurance_w        varchar(30);

  ds_hospital_w         pessoa_juridica.ds_razao_social%type;

  nr_provider_w         varchar(20);

  nr_hospital_record_w  varchar(30);

  cd_relationship_w     varchar(15);

  ds_physician_w        varchar(60);

  ds_email_w            varchar(60);

  ds_address_w          varchar(255);

  cd_cep_w              bigint;

  nr_telephone_w        bigint;

  nr_telephone_home_w   bigint;

  nr_telephone_work_w   bigint;

  dt_start_time_w       varchar(10);

  dt_end_time_w         varchar(10);

  nr_seq_person_name_w  bigint;

  nm_family_name_w      varchar(60);

  nm_given_name_w       varchar(60);

  ds_rsalutation_w      varchar(30);

  cd_pessoa_fisica_w    bigint;

  nr_atendimento_w      bigint;

  cnt_principle_ser_w   bigint;

  cnt_principle_ser_n_w bigint;

  nr_seq_ohter_ser_w    bigint;

  /* cursor for accoodation details*/

  c01 CURSOR FOR

    SELECT a.dt_entrada_unidade,

      a.dt_saida_unidade,

      a.nr_seq_motivo_transf,

      (a.dt_saida_unidade - a.dt_entrada_unidade) nr_days_claimed

    FROM atend_paciente_unidade a

    WHERE a.nr_atendimento   = nr_atendimento_p

    AND a.dt_entrada_unidade =

      (SELECT MAX(a.dt_entrada_unidade)

      FROM atend_paciente_unidade a

      WHERE a.nr_atendimento = nr_atendimento_p

      );

  /*other services*/

  c02 CURSOR FOR

    SELECT c.vl_procedimento,

      c.cd_procedimento,

      c.dt_procedimento,

      c.nr_seq_proc_interno

    FROM procedimento_paciente c

    WHERE coalesce(c.nr_cirurgia::text, '') = ''

    AND c.nr_atendimento     = nr_atendimento_p

    AND c.dt_entrada_unidade =

      (SELECT MAX(a.dt_entrada_unidade)

      FROM procedimento_paciente a

      WHERE a.nr_atendimento = nr_atendimento_p

      );

  /* threatre/mbs- other procedures */

  c03 CURSOR FOR

    SELECT c.cd_procedimento,

      b.dt_inicio_real,

      c.vl_procedimento

    FROM cirurgia b,

      procedimento_paciente c

    WHERE b.cd_procedimento_princ <> c.cd_procedimento

    AND b.nr_atendimento           = c.nr_atendimento

    AND b.nr_cirurgia              = c.nr_cirurgia

    AND b.dt_inicio_real           = c.dt_entrada_unidade

    AND c.nr_atendimento           = nr_atendimento_p

    AND c.dt_entrada_unidade       =

      (SELECT MAX(c.dt_entrada_unidade)

      FROM cirurgia b,

        procedimento_paciente c

      WHERE b.cd_procedimento_princ <> c.cd_procedimento

      AND b.nr_atendimento           = c.nr_atendimento

      AND (c.nr_cirurgia IS NOT NULL AND c.nr_cirurgia::text <> '')

      AND b.nr_cirurgia              = c.nr_cirurgia

      AND b.dt_inicio_real           = c.dt_entrada_unidade

      AND c.nr_atendimento           = nr_atendimento_p

      );

  /*time in threatre*/

  c04 CURSOR FOR

  SELECT dt_inicio_real ,

    dt_termino,

    show_order from (SELECT *

  FROM (SELECT TO_CHAR(a.dt_inicio_real,'HH24:MI') dt_inicio_real ,

      TO_CHAR(a.dt_termino,'HH24:MI') dt_termino,

      1 show_order

    FROM cirurgia a

    WHERE a.nr_atendimento = nr_atendimento_p


UNION ALL


  SELECT NULL dt_inicio_real, NULL dt_termino,2 show_order 

  
UNION ALL


  SELECT NULL dt_inicio_real, NULL dt_termino,3 show_order 

  
UNION ALL


  SELECT NULL dt_inicio_real, NULL dt_termino,4 show_order 

    ) alias2

  order by show_order,dt_inicio_real desc ) alias3 LIMIT 3;



    time_in_w c04%ROWTYPE;

    TYPE time_in_typ is TABLE OF time_in_w%TYPE;

    time_in_type_v time_in_typ;


BEGIN

  DELETE FROM health_fund_member_details WHERE nr_atendimento = nr_atendimento_p;

  DELETE FROM accomodation_details_hc WHERE nr_atendimento = nr_atendimento_p;

  DELETE FROM day_patient_details_hc WHERE nr_atendimento = nr_atendimento_p;

  DELETE FROM threate_other_servies_hc WHERE nr_atendimento = nr_atendimento_p;

  IF (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') THEN

    /*patient details*/

    BEGIN

      SELECT (SELECT nm_pessoa_fisica

        FROM TABLE(search_names_dev(NULL, NULL, a.nr_seq_person_name, 'familyName', 'social,main'))

        ) nm_family_name,

        (SELECT nm_pessoa_fisica

        FROM TABLE(search_names_dev(NULL, NULL, a.nr_seq_person_name, 'givenName', 'social,main'))

        ) nm_given_name,

        get_salutation(a.ie_estado_civil,a.ie_sexo) ds_salutation,

        b.cd_usuario_convenio,

        a.dt_nascimento,

        SUBSTR(obter_idade(a.dt_nascimento, clock_timestamp(), 'A'), 1, 100) nr_age,

        get_insurance_holder_data(a.cd_pessoa_fisica, b.cd_convenio, 'L') ds_relationship,

        get_insurance_holder_data(a.cd_pessoa_fisica, b.cd_convenio, 'C') cd_relationship,

        obter_desc_convenio(b.cd_convenio) ds_insurance,

        e.ds_razao_social ds_hospital,

        e.cd_cnes nr_hospital_provider,

        e.cd_cgc nr_hospital_record,

        b.nm_medico ds_medical_practitioner,

        a.cd_pessoa_fisica

      INTO STRICT nm_familyname_w,

        nm_givenname_w,

        ds_salutation_w,

        nr_membership_w,

        dt_birthdate_w,

        nr_age_w,

        ds_relationship_w,

        cd_relationship_w,

        ds_insurance_w,

        ds_hospital_w,

        nr_provider_w,

        nr_hospital_record_w,

        ds_physician_w,

        cd_pessoa_fisica_w

      FROM pessoa_fisica a,

        atendimento_paciente_v b,

        pessoa_juridica e,

        estabelecimento f

      WHERE a.cd_pessoa_fisica = b.cd_pessoa_fisica

      AND e.cd_cgc             = f.cd_cgc

      AND f.cd_estabelecimento = b.cd_estabelecimento

      AND b.nr_atendimento     = nr_atendimento_p;

      /* check if the record for same encounter is present in the table */

      SELECT COUNT(nr_atendimento)

      INTO STRICT nr_atendimento_w

      FROM health_fund_member_details

      WHERE nr_atendimento = nr_atendimento_p;

      IF (nr_atendimento_w = 0) THEN

        --insert into the health_fund_member_details table
        INSERT

        INTO health_fund_member_details(

            nr_atendimento,

            cd_pessoa_fisica,

            ds_health_fund,

            ds_hospital,

            cd_hospital_provider,

            nr_hospital_record,

            nm_family_name,

            nm_given_name,

            ds_salutation,

            cd_membership_number,

            ds_relationship,

            cd_relationship,

            dt_birth,

            nr_age,

            nm_medical_prac,

            dt_atualizacao,

            nm_usuario,

            nr_sequencia

          )

          VALUES (

            nr_atendimento_p,

            cd_pessoa_fisica_w,

            ds_insurance_w,

            ds_hospital_w,

            nr_provider_w,

            nr_hospital_record_w,

            nm_familyname_w,

            nm_givenname_w,

            ds_salutation_w,

            nr_membership_w,

            ds_relationship_w,

            cd_relationship_w,

            dt_birthdate_w,

            nr_age_w,

            ds_physician_w,

            clock_timestamp(),

            wheb_usuario_pck.get_nm_usuario,

            nextval('health_fund_member_details_seq')

          );

      ELSE

        /* if the records already exist, update the table, record is already resent */

        UPDATE health_fund_member_details

        SET cd_pessoa_fisica   = cd_pessoa_fisica_w,

          ds_health_fund       = ds_insurance_w,

          ds_hospital          = ds_hospital_w,

          cd_hospital_provider = cd_hospital_provider,

          nr_hospital_record   = nr_hospital_record_w,

          nm_family_name       = nm_familyname_w,

          nm_given_name        = nm_givenname_w,

          ds_salutation        = ds_salutation_w,

          cd_membership_number = nr_membership_w,

          ds_relationship      = ds_relationship_w,

          cd_relationship      = cd_relationship_w,

          dt_birth             = dt_birthdate_w,

          nr_age               = nr_age_w,

          nm_medical_prac      = ds_physician_w

        WHERE nr_atendimento   = nr_atendimento_w;

      END IF;

    EXCEPTION

    WHEN OTHERS THEN

      NULL;

    END;

    BEGIN

      SELECT a.nr_seq_person_name,

        get_salutation(a.ie_estado_civil,a.ie_sexo) ds_salutation_r

      INTO STRICT nr_seq_person_name_w,

        ds_rsalutation_w

      FROM pessoa_fisica a

      WHERE a.cd_pessoa_fisica = cd_relationship_w;

      /*get member relation details */

      SELECT MAX((SELECT nm_pessoa_fisica

        FROM TABLE(search_names_dev(NULL, NULL, nr_seq_person_name_w, 'familyName', 'social,main'))

        )) nm_family_name_r,

        MAX((SELECT nm_pessoa_fisica

        FROM TABLE(search_names_dev(NULL, NULL, nr_seq_person_name_w, 'givenName', 'social,main'))

        )) nm_given_name_r,

        obter_compl_pf(cd_relationship_w,1,'M') ds_email,

        obter_compl_pf(cd_relationship_w,1,'CEP') cd_cep,

        obter_compl_pf(cd_relationship_w,1,'E') ds_member_address,

        obter_compl_pf(cd_relationship_w,1,'CEL') nr_telephone,

        obter_compl_pf(cd_relationship_w,1,'T') nr_telephone_home,

        obter_compl_pf(cd_relationship_w,2,'T') nr_telephone_work

      INTO STRICT nm_family_name_w,

        nm_given_name_w,

        ds_email_w,

        cd_cep_w,

        ds_address_w,

        nr_telephone_w,

        nr_telephone_home_w,

        nr_telephone_work_w

;

      --update patient relation details health_fund_member_details
      UPDATE health_fund_member_details

      SET nm_family_name_r  = nm_family_name_w,

        nm_given_name_r     = nm_given_name_w,

        ds_address          = ds_address_w,

        nr_telephone_mobile = nr_telephone_w,

        nr_telephone_home   = nr_telephone_home_w,

        nr_telephone_work   = nr_telephone_work_w,

        cd_postal           = cd_cep_w,

        ds_email            = ds_email_w,

        ds_salutation_r     = ds_rsalutation_w

      WHERE nr_atendimento  = nr_atendimento_p;

    EXCEPTION

    WHEN OTHERS THEN

      NULL;

    END;

    BEGIN

      /*admission date and separartion date*/

      SELECT a.dt_entrada,

        a.dt_alta

      INTO STRICT dt_admmission_w,

        dt_separation_w

      FROM atendimento_paciente a

      WHERE a.nr_atendimento = nr_atendimento_p;

      /* check if the record for same encounter is present in the table */

      SELECT COUNT(nr_atendimento)

      INTO STRICT nr_atendimento_w

      FROM accomodation_details_hc

      WHERE nr_atendimento = nr_atendimento_p;

      IF (nr_atendimento_w = 0) THEN

        --insert in table accomodation_details_hc
        INSERT

        INTO accomodation_details_hc(

            nr_atendimento,

            dt_admission,

            dt_exit,

            dt_atualizacao,

            nm_usuario,

            nr_sequencia

          )

          VALUES (

            nr_atendimento_p,

            dt_admmission_w,

            dt_separation_w,

            clock_timestamp(),

            wheb_usuario_pck.get_nm_usuario,

            nextval('accomodation_details_hc_seq')

          );

      ELSE

        UPDATE accomodation_details_hc

        SET dt_admission     = dt_admmission_w,

          dt_exit            = dt_separation_w

        WHERE nr_atendimento = nr_atendimento_p;

      END IF;

    EXCEPTION

    WHEN OTHERS THEN

      NULL;

    END;

    /* same day patients */

    IF (TRUNC(dt_admmission_w)-TRUNC(dt_separation_w) = 0 ) THEN

      BEGIN

        SELECT a.dt_entrada,

          a.dt_alta

        INTO STRICT dt_admission_time_w,

          dt_exit_time_w

        FROM atendimento_paciente a

        WHERE a.nr_atendimento = nr_atendimento_p;

        --insert into the tablet day_patient_details_hc
        INSERT

        INTO day_patient_details_hc(

            nr_atendimento,

            dt_admission_time,

            dt_exit_time,

            nr_sequencia,

            dt_atualizacao,

            nm_usuario

          )

          VALUES (

            nr_atendimento_p,

            dt_admission_time_w,

            dt_exit_time_w,

            nextval('day_patient_details_hc_seq'),

            clock_timestamp(),

            wheb_usuario_pck.get_nm_usuario

          );

        /*time in threatre*/

        OPEN c04;

        FETCH c04 BULK COLLECT INTO time_in_type_v;

        CLOSE c04;

          --update the table day_patient_details_hc
          UPDATE day_patient_details_hc

          SET nr_atendimento   = nr_atendimento_p,

            ds_time_in_theatre = 'From '||chr(9)||time_in_type_v[1].dt_inicio_real||chr(9)||'To '||chr(9)||time_in_type_v[1].dt_termino,

            ds_time_in_theatre1 = 'From '||chr(9)||time_in_type_v[2].dt_inicio_real||chr(9)||'To '||chr(9)||time_in_type_v[2].dt_termino,

            ds_time_in_theatre2 = 'From '||chr(9)||time_in_type_v[3].dt_inicio_real||chr(9)||'To '||chr(9)||time_in_type_v[3].dt_termino



       WHERE nr_atendimento = nr_atendimento_p;

    EXCEPTION

      WHEN OTHERS THEN

        NULL;

      END;

      ELSE

      --insert into the tablet day_patient_details_hc
        INSERT

        INTO day_patient_details_hc(

            nr_atendimento,

            dt_admission_time,

            dt_exit_time,

            nr_sequencia,

            dt_atualizacao,

            nm_usuario,

            ds_time_in_theatre,

            ds_time_in_theatre1,

            ds_time_in_theatre2

          )

          VALUES (

            nr_atendimento_p,

            null,

            null,

            nextval('day_patient_details_hc_seq'),

            clock_timestamp(),

            wheb_usuario_pck.get_nm_usuario,

            'From '||chr(9)||''||chr(9)||'To '||chr(9)||'',

            'From '||chr(9)||''||chr(9)||'To '||chr(9)||'',

            'From '||chr(9)||''||chr(9)||'To '||chr(9)||''

          );



    END IF;

    /* cursor for accoodation details*/

    OPEN c01;

    LOOP

      FETCH c01 INTO dt_from_w, dt_to_w, cd_discharge_w, nr_days_claim_w;

      EXIT WHEN NOT FOUND; /* apply on c01 */

      BEGIN

        --insert into table accomodation_details_hc
        UPDATE accomodation_details_hc

        SET dt_from          = dt_from_w,

          dt_to              = dt_to_w,

          cd_discharge       = cd_discharge_w,

          nr_days_claimed    = nr_days_claim_w

        WHERE nr_atendimento = nr_atendimento_p;

      EXCEPTION

      WHEN OTHERS THEN

        NULL;

      END;

    END LOOP;

    CLOSE c01;

    /*theatre/mbs - principal procedure*/

    BEGIN

      SELECT b.cd_procedimento_princ,

        b.dt_inicio_real,

        c.vl_procedimento

      INTO STRICT cd_princ_proc_w,

        dt_princ_service_w,

        vl_princ_proc_w

      FROM cirurgia b,

        procedimento_paciente c

      WHERE b.nr_atendimento      = c.nr_atendimento

      AND b.cd_procedimento_princ = c.cd_procedimento

      AND b.nr_cirurgia           = c.nr_cirurgia

      AND b.dt_inicio_real        = c.dt_entrada_unidade

      AND c.nr_atendimento        = nr_atendimento_p

      AND c.dt_entrada_unidade    =

        (SELECT MAX(c.dt_entrada_unidade)

        FROM cirurgia b,

          procedimento_paciente c

        WHERE b.nr_atendimento      = c.nr_atendimento

        AND b.cd_procedimento_princ = c.cd_procedimento

        AND b.nr_cirurgia           = c.nr_cirurgia

        AND b.dt_inicio_real        = c.dt_entrada_unidade

        AND c.nr_atendimento        = nr_atendimento_p

        );

      --insert into the table threate_other_servies_hc for principal mbs first)
      INSERT

      INTO threate_other_servies_hc(

          nr_atendimento,

          ie_princ_procedure,

          cd_procedure,

          dt_service,

          vl_amount_chanrged,

          dt_atualizacao,

          nm_usuario,

          nr_sequencia

        )

        VALUES (

          nr_atendimento_p,

          'Y',

          cd_princ_proc_w,

          dt_princ_service_w,

          vl_princ_proc_w,

          clock_timestamp(),

          wheb_usuario_pck.get_nm_usuario,

          nextval('threate_other_servies_hc_seq')

        );

    EXCEPTION

    WHEN OTHERS THEN

      NULL;

    END;

    /*threatre/mbs- other procedure*/

    OPEN c03;

    LOOP

      FETCH c03 INTO cd_procedure_w, dt_service_w, vl_amount_charged_w;

      EXIT WHEN NOT FOUND; /* apply on c03 */

      --insert into the table threate_other_servies_hc
      INSERT

      INTO threate_other_servies_hc(

          nr_atendimento,

          cd_procedure,

          dt_service,

          vl_amount_chanrged,

          ie_princ_procedure,

          dt_atualizacao,

          nm_usuario,

          nr_sequencia

        )

        VALUES (

          nr_atendimento_p,

          cd_procedure_w,

          dt_service_w,

          vl_amount_charged_w,

          'N',

          clock_timestamp(),

          wheb_usuario_pck.get_nm_usuario,

          nextval('threate_other_servies_hc_seq')

        );

    END LOOP;

    CLOSE c03;

    /*other services*/

    SELECT COUNT(nr_atendimento)

    INTO STRICT nr_atendimento_w

    FROM threate_other_servies_hc

    WHERE nr_atendimento = nr_atendimento_p;

    SELECT COUNT(1)

    INTO STRICT cnt_principle_ser_w

    FROM threate_other_servies_hc

    WHERE nr_atendimento   = nr_atendimento_p

    AND ie_princ_procedure = 'Y';

    SELECT COUNT(1)

    INTO STRICT cnt_principle_ser_n_w

    FROM threate_other_servies_hc

    WHERE nr_atendimento   = nr_atendimento_p

    AND ie_princ_procedure = 'N';

    OPEN c02;

    LOOP

      FETCH c02

      INTO vl_other_service_w,

        cd_other_service_w,

        dt_other_service_w,

        nr_service_w;

      EXIT WHEN NOT FOUND; /* apply on c02 */

      BEGIN

        IF (nr_atendimento_w = 0) THEN

          --insert the table threate_other_servies_hc
          INSERT

          INTO threate_other_servies_hc(

              nr_atendimento,

              cd_other_service,

              dt_other_service,

              nr_service,

              vl_other_srv_amount,

              dt_atualizacao,

              nm_usuario,

              nr_sequencia,

              ie_princ_procedure

            )

            VALUES (

              nr_atendimento_p,

              cd_other_service_w,

              dt_other_service_w,

              nr_service_w,

              vl_other_service_w,

              clock_timestamp(),

              wheb_usuario_pck.get_nm_usuario,

              nextval('threate_other_servies_hc_seq'),

              NULL

            );

        elsif (cnt_principle_ser_w > 0) THEN

          UPDATE threate_other_servies_hc

          SET cd_other_service       = cd_other_service_w,

            dt_other_service         = dt_other_service_w,

            nr_service               = nr_service_w,

            vl_other_srv_amount      = vl_other_srv_amount

          WHERE nr_atendimento       = nr_atendimento_p

          AND ie_princ_procedure     = 'Y';

          cnt_principle_ser_w       := 0;

        elsif (cnt_principle_ser_n_w > 0) THEN

          SELECT nr_sequencia

          INTO STRICT nr_seq_ohter_ser_w

          FROM threate_other_servies_hc

          WHERE ie_princ_procedure = 'N'

          AND coalesce(cd_other_service::text, '') = ''  LIMIT 1;

          IF (nr_seq_ohter_ser_w   >0) THEN

            UPDATE threate_other_servies_hc

            SET cd_other_service   = cd_other_service_w,

              dt_other_service     = dt_other_service_w,

              nr_service           = nr_service_w,

              vl_other_srv_amount  = vl_other_srv_amount

            WHERE nr_atendimento   = nr_atendimento_p

            AND ie_princ_procedure = 'N'

            AND nr_sequencia       = nr_seq_ohter_ser_w;

            cnt_principle_ser_n_w :=cnt_principle_ser_n_w-1;

          END IF;

        ELSE

          INSERT

          INTO threate_other_servies_hc(

              nr_atendimento,

              cd_other_service,

              dt_other_service,

              nr_service,

              vl_other_srv_amount,

              dt_atualizacao,

              nm_usuario,

              nr_sequencia,

              ie_princ_procedure

            )

            VALUES (

              nr_atendimento_p,

              cd_other_service_w,

              dt_other_service_w,

              nr_service_w,

              vl_other_service_w,

              clock_timestamp(),

              wheb_usuario_pck.get_nm_usuario,

              nextval('threate_other_servies_hc_seq'),

              NULL

            );

        END IF;

      EXCEPTION

      WHEN OTHERS THEN

        NULL;

      END;

    END LOOP;

    CLOSE c02;

  END IF;

  COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE generate_hc21_report ( nr_atendimento_p bigint) FROM PUBLIC;

