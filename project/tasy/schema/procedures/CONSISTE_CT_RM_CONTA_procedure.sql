-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_ct_rm_conta ( nr_interno_conta_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


ds_erro_w		varchar(255);
dt_procedimento_w	timestamp;
tx_procedimento_w	double precision;
cd_tipo_proced_w	smallint;

C01 CURSOR FOR
SELECT b.cd_tipo_procedimento,
	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_procedimento),
	tx_procedimento	
from	procedimento b,
	procedimento_paciente a
where	b.cd_tipo_procedimento between 3 and 4
and	a.cd_procedimento	= b.cd_procedimento
and	a.ie_origem_proced	= b.ie_origem_proced
and	a.ie_origem_proced	in (1,5)
and	a.tx_procedimento	= 100
and	a.nr_interno_conta	= nr_interno_conta_p
and 	coalesce(a.nr_seq_proc_pacote,0) <> a.nr_sequencia
group by
	b.cd_tipo_procedimento,
	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_procedimento),
	tx_procedimento
having count(*) > 1 and sum(a.qt_procedimento) > 0;

C02 CURSOR FOR
SELECT b.cd_tipo_procedimento,
	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_procedimento),
	tx_procedimento	
from	procedimento b,
	procedimento_paciente a
where	b.cd_tipo_procedimento between 3 and 4
and	a.cd_procedimento	= b.cd_procedimento
and	a.ie_origem_proced	= b.ie_origem_proced
and	a.ie_origem_proced	= 8
and	a.tx_procedimento	= 100
and	a.nr_interno_conta	= nr_interno_conta_p
and 	coalesce(a.nr_seq_proc_pacote,0) <> a.nr_sequencia
group by
	b.cd_tipo_procedimento,
	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_procedimento),
	tx_procedimento
having count(*) > 1 and sum(a.qt_procedimento) > 0;


BEGIN

ds_erro_w	:= '';

OPEN C01;
LOOP
FETCH C01 into	
		cd_tipo_proced_w,
		dt_procedimento_w,
		tx_procedimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	ds_erro_w	:= '31 ';
END LOOP;
CLOSE C01;

OPEN C02;
LOOP
FETCH C02 into	
		cd_tipo_proced_w,
		dt_procedimento_w,
		tx_procedimento_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	ds_erro_w	:= '3072 ';
END LOOP;
CLOSE C02;

ds_erro_p	:= ds_erro_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_ct_rm_conta ( nr_interno_conta_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

