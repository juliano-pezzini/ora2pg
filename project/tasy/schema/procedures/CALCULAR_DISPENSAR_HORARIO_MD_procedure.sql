-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_dispensar_horario_md ( cd_um_consumo_p text, cd_um_prescricao_p text, nr_seq_material_p bigint, nr_seq_material_ww_p bigint, qt_dose_total_farmacia_p bigint, ds_dose_diferenciada_p text, ie_trata_dose_dif_p text, qt_dose_prescricao_p bigint, qt_dose_consumo_p bigint, qt_unitaria_p bigint, ie_ajustar_disp_p text, qt_dose_disponivel_p INOUT bigint, qt_dose_total_disp_p INOUT bigint, qt_dispensar_p INOUT bigint, ie_cursor_p INOUT text, qt_dispensar_parcial_p INOUT bigint, ie_update_p INOUT text, qt_dispensar_update_p INOUT bigint ) AS $body$
BEGIN

	ie_update_p := 'N';
	qt_dispensar_update_p:= null;

	if (cd_um_consumo_p = cd_um_prescricao_p) then

		if (nr_seq_material_p <> nr_seq_material_ww_p) then
			qt_dose_disponivel_p := 0;
			qt_dose_total_disp_p := qt_dose_total_farmacia_p;
		end if;

		if (ds_dose_diferenciada_p IS NOT NULL AND ds_dose_diferenciada_p::text <> '') and (coalesce(ie_trata_dose_dif_p,'N') = 'S') then
			qt_dispensar_p := qt_dose_prescricao_p;
		else
			if (qt_dose_prescricao_p > qt_dose_consumo_p) and (qt_dose_disponivel_p < qt_unitaria_p) and (qt_dose_disponivel_p + qt_dose_consumo_p < qt_unitaria_p) then

				if (ie_ajustar_disp_p = 'C') then
					qt_dispensar_p := dividir_md(coalesce(qt_dose_prescricao_p, 0), coalesce(qt_dose_consumo_p, 0));

					if (trunc(qt_dispensar_p) <> qt_dispensar_p) then
						qt_dispensar_p := trunc(qt_dispensar_p) * coalesce(qt_dose_consumo_p, 0) + coalesce(qt_dose_consumo_p, 0);
					else
						qt_dispensar_p := coalesce(qt_dispensar_p, 0) * coalesce(qt_dose_consumo_p, 0);
					end if;
				else
					qt_dispensar_p:= coalesce(qt_dose_consumo_p, 0) + (trunc(dividir_md(coalesce(qt_dose_prescricao_p , 0), coalesce(qt_dose_consumo_p, 0))) * coalesce(qt_dose_consumo_p, 0));
				end if;

				ie_cursor_p := '1';

			elsif (qt_dose_disponivel_p >= qt_unitaria_p) then

				qt_dispensar_p := null;

				ie_cursor_p := '2';

			elsif (qt_dose_disponivel_p > 0 and qt_dose_disponivel_p < qt_unitaria_p) then

				qt_dispensar_p := qt_dose_consumo_p;

				qt_dose_disponivel_p := coalesce(qt_dose_disponivel_p, 0) + coalesce(qt_dose_consumo_p, 0);

			else
				qt_dispensar_p := qt_dose_consumo_p;

				ie_cursor_p := '3';

			end if;
		end if;

		ie_update_p := 'S';
		qt_dispensar_update_p:= qt_dispensar_p;

		if (qt_dose_disponivel_p = 0) then
			qt_dose_disponivel_p := coalesce(qt_dispensar_p,0);
		end if;

		qt_dose_disponivel_p := coalesce(qt_dose_disponivel_p, 0) - coalesce(qt_unitaria_p, 0);
		qt_dose_total_disp_p := coalesce(qt_dose_total_disp_p, 0) - coalesce(qt_dispensar_p, 0);

	else

		if (nr_seq_material_p <> nr_seq_material_ww_p) then
			qt_dose_disponivel_p := 0;
		end if;

		if (trunc(qt_unitaria_p) <> qt_unitaria_p) then
			qt_dispensar_p := trunc(qt_unitaria_p)+1;
		else
			qt_dispensar_p := trunc(qt_unitaria_p);
		end if;

		if (qt_dose_disponivel_p = 0) then
			ie_update_p := 'S';
			qt_dispensar_update_p:= qt_dispensar_p;

			qt_dose_disponivel_p := coalesce(qt_dispensar_p, 0) - coalesce(qt_unitaria_p, 0);

			ie_cursor_p := '1';

		elsif (qt_dose_disponivel_p >= qt_unitaria_p) then
			ie_update_p := 'S';
			qt_dispensar_update_p:= null;

			qt_dose_disponivel_p := coalesce(qt_dose_disponivel_p, 0) - coalesce(qt_unitaria_p, 0);

			ie_cursor_p := '2';

		elsif (qt_dose_disponivel_p > 0) and (qt_dose_disponivel_p < 1) and (floor(qt_unitaria_p) + qt_dose_disponivel_p > qt_unitaria_p) then

			qt_dispensar_parcial_p := floor(qt_unitaria_p);
			ie_update_p := 'S';
			qt_dispensar_update_p:= qt_dispensar_parcial_p;

			qt_dose_disponivel_p := coalesce(qt_dose_disponivel_p, 0) - (coalesce(qt_unitaria_p, 0) - floor(coalesce(qt_unitaria_p, 0)));

			ie_cursor_p := '5';

		elsif (qt_dose_disponivel_p >= 1) and (qt_dose_disponivel_p < qt_unitaria_p) then

			qt_dispensar_parcial_p  := coalesce(qt_dispensar_p, 0) - trunc(qt_dose_disponivel_p);
			ie_update_p := 'S';
			qt_dispensar_update_p:= qt_dispensar_parcial_p;

			qt_dose_disponivel_p  := coalesce(qt_dose_disponivel_p, 0) - trunc(qt_dose_disponivel_p) + coalesce(qt_dispensar_p, 0) - coalesce(qt_unitaria_p, 0);

			ie_cursor_p := '3';

		elsif (qt_dose_disponivel_p < qt_unitaria_p) then
			ie_update_p := 'S';
			qt_dispensar_update_p:= qt_dispensar_p;

			qt_dose_disponivel_p := coalesce(qt_dose_disponivel_p, 0) + coalesce(qt_dispensar_p, 0) - coalesce(qt_unitaria_p, 0);

			ie_cursor_p := '4';

		end if;
	end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_dispensar_horario_md ( cd_um_consumo_p text, cd_um_prescricao_p text, nr_seq_material_p bigint, nr_seq_material_ww_p bigint, qt_dose_total_farmacia_p bigint, ds_dose_diferenciada_p text, ie_trata_dose_dif_p text, qt_dose_prescricao_p bigint, qt_dose_consumo_p bigint, qt_unitaria_p bigint, ie_ajustar_disp_p text, qt_dose_disponivel_p INOUT bigint, qt_dose_total_disp_p INOUT bigint, qt_dispensar_p INOUT bigint, ie_cursor_p INOUT text, qt_dispensar_parcial_p INOUT bigint, ie_update_p INOUT text, qt_dispensar_update_p INOUT bigint ) FROM PUBLIC;

