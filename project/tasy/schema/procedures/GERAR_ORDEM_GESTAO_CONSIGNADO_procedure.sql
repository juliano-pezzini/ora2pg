-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_ordem_gestao_consignado ( nr_ordem_compra_gerada_p bigint, cd_fornecedor_consignado_p text, cd_material_p bigint, qt_compra_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, cd_local_estoque_p bigint, cd_pessoa_solic_padrao_p text, nr_nova_oc_gerada_p INOUT bigint) AS $body$
DECLARE


nr_item_oci_w				integer;
cd_comprador_padrao_w			varchar(10);
cd_moeda_padrao_w			bigint;
cd_condicao_pagamento_padrao_w  		bigint;
cd_local_estoque_setor_w			bigint;
cd_local_estoque_padrao_w			bigint;
cd_local_consig_w				bigint;
qt_dia_prazo_entrega_w			bigint;
cd_estabelecimento_w        			smallint    	:= 1;
qt_compra_w         	    			double precision 	:= 0;
qt_conv_compra_estoque_w    		double precision 	:= 0;
cd_unidade_medida_compra_w  		varchar(30)  	:= '';
qt_conv_estoque_consumo_w		double precision	:= 0;
nr_ordem_compra_w			bigint;
ds_observacao_w				varchar(2000)	:= '';
cd_local_entrega_w			integer	:= '';
cd_centro_custo_w				integer	:= '';
ds_compl_ordem_consig_w			varchar(255);
vl_unitario_material_w			double precision	:= 0;
dt_entrega_w				timestamp;
ie_aprova_auto_w				varchar(01);
ie_tipo_conta_w				integer;
cd_conta_contabil_w			varchar(20);
ie_agrupa_oc_consig_aprov_w		varchar(1);
ie_agrupa_oc_consig_atend_w		varchar(1);
nm_pessoa_contato_w			varchar(255);
tx_desc_ordem_w				double precision;
pr_desc_financeiro_w			double precision;
ie_agrupa_oc_novo_item_w			varchar(1);
qt_existe_w				bigint;


BEGIN

cd_estabelecimento_w	:= coalesce(cd_estabelecimento_p,1);

select	coalesce(cd_comprador_consig, cd_comprador_padrao),
      	cd_moeda_padrao,
      	cd_condicao_pagamento_padrao,
	ds_compl_ordem_consig,
	ie_aprova_ordem_consig,
	cd_local_entrega_consig,
	ie_agrupa_oc_consig_aprov,
	ie_agrupa_oc_consig_atend,
	coalesce(ie_agrupa_oc_novo_item,'n')
into STRICT  	cd_comprador_padrao_w,
      	cd_moeda_padrao_w,
      	cd_condicao_pagamento_padrao_w,
      	ds_compl_ordem_consig_w,
	ie_aprova_auto_w,
	cd_local_entrega_w,
	ie_agrupa_oc_consig_aprov_w,
	ie_agrupa_oc_consig_atend_w,
	ie_agrupa_oc_novo_item_w
from  	parametro_compras
where 	cd_estabelecimento = cd_estabelecimento_w;

if (coalesce(cd_pessoa_solic_padrao_p::text, '') = '') or (coalesce(cd_moeda_padrao_w::text, '') = '') or (coalesce(cd_local_estoque_p::text, '') = '') or (coalesce(cd_comprador_padrao_w::text, '') = '') then
	--(-20011,'Os parametros de compra estao incompletos');
	CALL WHEB_MENSAGEM_PCK.exibir_mensagem_abort(195703);
end if;
select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UMC'),1,30) cd_unidade_medida_compra,
	qt_conv_compra_estoque,
	qt_conv_estoque_consumo
into STRICT 	cd_unidade_medida_compra_w,
	qt_conv_compra_estoque_w,
	qt_conv_estoque_consumo_w
from 	material
where 	cd_material = coalesce(cd_material_p,0);

/* Converter qtde a comprar pela conversao compra/estoque */

qt_compra_w	:= (qt_compra_p / qt_conv_compra_estoque_w / qt_conv_estoque_consumo_w);

select	coalesce(obter_dados_pf_pj_estab(cd_estabelecimento_w, null, cd_fornecedor_consignado_p, 'EPE'),0),
	coalesce(obter_dados_pf_pj_estab(cd_estabelecimento_w, null, cd_fornecedor_consignado_p, 'ECP'), cd_condicao_pagamento_padrao_w)
into STRICT	qt_dia_prazo_entrega_w,
	cd_condicao_pagamento_padrao_w
;

dt_entrega_w	:= trunc(clock_timestamp(),'dd') + qt_dia_prazo_entrega_w;


/* centro de custo do local de estoque */

if (cd_local_estoque_p IS NOT NULL AND cd_local_estoque_p::text <> '') then
	select	max(cd_centro_custo)
	into STRICT	cd_centro_custo_w
	from	local_estoque
	where	cd_local_estoque = cd_local_estoque_p;
end if;

/* Permitir informar compradores e solicitantes diferentes por local de estoque */

if (cd_local_estoque_p IS NOT NULL AND cd_local_estoque_p::text <> '') then
	select	coalesce(cd_comprador_consig, cd_comprador_padrao_w)
	into STRICT	cd_comprador_padrao_w
	from	local_estoque
	where	cd_local_estoque	= cd_local_estoque_p;
end if;

nr_ordem_compra_w := coalesce(nr_ordem_compra_gerada_p,0);

if (nr_ordem_compra_gerada_p = 0) then
        begin
	select	nextval('ordem_compra_seq')
	into STRICT	nr_ordem_compra_w
	;

	select	substr(obter_dados_pf_pj_estab(cd_estabelecimento_w, null, cd_fornecedor_consignado_p, 'ENC'),1,255),
		obter_dados_pf_pj_estab(cd_estabelecimento_w, null, cd_fornecedor_consignado_p, 'TDO'),
		obter_dados_pf_pj_estab(cd_estabelecimento_w, null, cd_fornecedor_consignado_p, 'TDF')
	into STRICT	nm_pessoa_contato_w,
		tx_desc_ordem_w,
		pr_desc_financeiro_w
	;

	insert into ordem_compra(
		nr_ordem_compra,
		cd_estabelecimento,
		cd_cgc_fornecedor,
		cd_condicao_pagamento,
		cd_comprador,
		dt_ordem_compra,
		dt_atualizacao,
		nm_usuario,
		cd_moeda,
		ie_situacao,
		dt_inclusao,
		cd_pessoa_solicitante,
		cd_cgc_transportador,
		ie_frete,
		vl_frete,
		pr_multa_atraso,
		pr_desc_pgto_antec,
		pr_juros_negociado,
		dt_emissao,
		ds_observacao,
		cd_motivo_alteracao,
		cd_local_entrega,
		dt_entrega,
		dt_aprovacao,
		dt_baixa,
		ie_aviso_chegada,
		ie_emite_obs,
		ie_urgente,
		ie_somente_pagto,
		ie_tipo_ordem,
		ds_pessoa_contato,
		pr_desconto,
		pr_desc_financeiro)
	values ( nr_ordem_compra_w,
		cd_estabelecimento_w,
		cd_fornecedor_consignado_p,
		cd_condicao_pagamento_padrao_w,
		cd_comprador_padrao_w,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		cd_moeda_padrao_w,
		'A',
		clock_timestamp(),
		cd_pessoa_solic_padrao_p,
		null,
		'C',
		0,
		null,
		0,
		0,
		null,
		Wheb_mensagem_pck.get_Texto(301957), /*'Ordem gerada pela opcao "Gerar ordem consignado" na funcao Solicitacao de Compras -> Gestao de Consignados. ',*/
		null,
		cd_local_estoque_p,
		dt_entrega_w,
		null,
		null,
		'N',
		'S',
		'N',
		'N',
		'B',
		nm_pessoa_contato_w,
		tx_desc_ordem_w,
		pr_desc_financeiro_w);

		/*  Grava historico na ordem de compra  */

		CALL inserir_historico_ordem_compra(	nr_ordem_compra_w,
						'S',
						Wheb_mensagem_pck.get_Texto(301958), /*'Ressuprimento - Gestao de consignados',*/
						Wheb_mensagem_pck.get_Texto(301959), /* 'Ordem gerada para ressuprimento de consignados, o mesmo e gerado pela opcao "Gerar ordem consignado" na funcao Solicitacao de Compras -> Gestao de Consignados.',*/
						nm_usuario_p);
	end;
end if;

/* Informa a nova ordem de compra gerada, ou  a ordem passada no parametro ( nr_ordem_compra_gerada_p )  */

nr_nova_oc_gerada_p := nr_ordem_compra_w;

begin
select	coalesce(max(nr_item_oci),0) + 1
into STRICT	nr_item_oci_w
from	ordem_compra_item
where	nr_ordem_compra = nr_ordem_compra_w;
exception
	when others then
		nr_item_oci_w 	:= 1;
end;

if (ds_compl_ordem_consig_w IS NOT NULL AND ds_compl_ordem_consig_w::text <> '') then
	ds_observacao_w	:= ds_observacao_w || ' ' || ds_compl_ordem_consig_w;
end if;

/* Rotina para buscar o preco da ultima compra do fornecedor */

select	coalesce(max(dividir((a.vl_total_item_nf - a.vl_desconto -
	vl_desconto_rateio + vl_frete +
	a.vl_despesa_acessoria + a.vl_seguro),a.qt_item_estoque)),0)
into STRICT	vl_unitario_material_w
from 	nota_fiscal_item a
where 	a.cd_material  = cd_material_p
and 	a.nr_sequencia =
	(SELECT max(i.nr_sequencia)
	from	nota_fiscal_item i,
		nota_fiscal n,
		operacao_nota p
	where	i.nr_sequencia = n.nr_sequencia
	and	i.cd_material  = cd_material_p
	and 	coalesce(p.ie_ultima_compra,'S') = 'S'
	and	p.cd_operacao_nf = n.cd_operacao_nf
	and	n.cd_cgc = cd_fornecedor_consignado_p);

vl_unitario_material_w	:= (vl_unitario_material_w * qt_conv_compra_estoque_w);

ie_tipo_conta_w		:= 3;
if (coalesce(cd_centro_custo_w::text, '') = '') then
	ie_tipo_conta_w	:= 2;
end if;
SELECT * FROM define_conta_material(	cd_estabelecimento_w, cd_material_p, ie_tipo_conta_w, null, null, null, null, null, null, null, cd_local_estoque_p, Null, clock_timestamp(), cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;

insert into ordem_compra_item(
		nr_ordem_compra,
		nr_item_oci,
		cd_material,
		cd_unidade_medida_compra,
		vl_unitario_material,
		qt_material,
		qt_original,
		dt_atualizacao,
		nm_usuario,
		ie_situacao,
		cd_pessoa_solicitante,
		qt_material_entregue,
		pr_descontos,
		cd_local_estoque,
		ds_material_direto,
		ds_observacao,
		cd_motivo_alteracao,
		nr_cot_compra,
		nr_item_cot_compra,
		cd_centro_custo,
		cd_conta_contabil,
		vl_total_item,
		cd_sequencia_parametro)
 values ( 	nr_ordem_compra_w,
		nr_item_oci_w,
		cd_material_P,
		cd_unidade_medida_compra_w,
		vl_unitario_material_w,
		qt_compra_w,
		qt_compra_w,
		clock_timestamp(),
		nm_usuario_p,
		'A',
		cd_pessoa_solic_padrao_p,
		0,
		0,
		cd_local_estoque_p,
		null,
		Wheb_mensagem_pck.get_Texto(301960), /*'Item consignado, gerado pela Gestao de Consignados.',*/
		null,
		null,
		null,
		cd_centro_custo_w,
		cd_conta_contabil_w,
		round((qt_compra_w * vl_unitario_material_w)::numeric,4),
		philips_contabil_pck.get_parametro_conta_contabil);

insert into ordem_compra_item_entrega(
		nr_sequencia,
		nr_ordem_compra,
		nr_item_oci,
		dt_prevista_entrega,
		dt_real_entrega,
		dt_entrega_original,
		dt_entrega_limite,
		qt_prevista_entrega,
		qt_real_entrega,
		dt_atualizacao,
		nm_usuario,
		ds_observacao)
 values (	nextval('ordem_compra_item_entrega_seq'),
		nr_ordem_compra_w,
		nr_item_oci_w,
		dt_entrega_w,
		null,
		dt_entrega_w,
		dt_entrega_w,
		qt_compra_w,
		null,
		clock_timestamp(),
		nm_usuario_p,
		null);

Calcular_Liquido_Ordem_Compra(nr_ordem_compra_w, nm_usuario_p);

if (ie_aprova_auto_w = 'S') then
	begin
	select	count(*)
	into STRICT	qt_existe_w
	from	ordem_compra
	where	nr_ordem_compra	= nr_ordem_compra_w
	and	coalesce(dt_aprovacao::text, '') = '';
	/*Para verificar se a OC ja nao esta aprovada ou reprovada*/

	if (qt_existe_w > 0) then
		CALL Gerar_Aprov_Ordem_Compra(nr_ordem_compra_w, null, 'S', nm_usuario_p);
	end if;
	end;
end if;

CALL Gerar_Ordem_Compra_Venc(nr_ordem_compra_w, nm_usuario_p);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ordem_gestao_consignado ( nr_ordem_compra_gerada_p bigint, cd_fornecedor_consignado_p text, cd_material_p bigint, qt_compra_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, cd_local_estoque_p bigint, cd_pessoa_solic_padrao_p text, nr_nova_oc_gerada_p INOUT bigint) FROM PUBLIC;

