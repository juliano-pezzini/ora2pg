-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_retorno_pagto_brad_bx (nr_seq_banco_escrit_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
/* 	Rotina criada para o Layout Pag-For 
Estrutura: 
 
Header de arquivo 
Registros transação (títulos) 
Trailler de arquivo 
 
*/
 
 
ds_nr_titulo_w		varchar(15);
ds_vl_pagamento_w	varchar(15);
ds_ocorrencia_w		varchar(10);
nr_titulo_w		bigint;
cd_tipo_baixa_w		bigint;
nr_seq_trans_escrit_w	bigint;
nr_seq_conta_banco_w	bigint;
nr_sequencia_w		bigint;
vl_pagamento_w		double precision;
cd_estabelecimento_w	bigint;
qt_titulo_w		bigint;
dt_baixa_w		timestamp;
cd_banco_w		smallint;
cd_retorno_liq_w	varchar(3);
qt_retorno_liq_w	bigint;
vl_desconto_w		double precision;
ie_mes_banco_fechado_w	varchar(1);
qt_mes_fechado_w	bigint	:= 0;

/* registro transação */
 
c01 CURSOR FOR 
SELECT	substr(ds_conteudo,120,15) ds_nr_titulo, 
	substr(ds_conteudo,205,15) ds_vl_pagamento, 
	substr(ds_conteudo,279,10) ds_ocorrencia,	/* cada ocorrência possui dois dígitos, mas o registro pode possuir até 5 ocorrências */
 
	to_date(substr(ds_conteudo,266,8),'yyyy/mm/dd') dt_baixa 
from	w_interf_retorno_itau 
where	substr(ds_conteudo, 1, 1)	= '1' 
and	nr_seq_banco_escrit		= nr_seq_banco_escrit_p 
order	by nr_sequencia;


BEGIN 
 
select	max(a.cd_estabelecimento), 
	max(a.nr_seq_conta_banco), 
	max(a.nr_seq_trans_financ), 
	max(b.cd_banco) 
into STRICT	cd_estabelecimento_w, 
	nr_seq_conta_banco_w, 
	nr_seq_trans_escrit_w, 
	cd_banco_w 
FROM banco_escritural a
LEFT OUTER JOIN banco_estabelecimento b ON (a.nr_seq_conta_banco = b.nr_sequencia)
WHERE a.nr_sequencia		= nr_seq_banco_escrit_p;
 
ie_mes_banco_fechado_w := obter_param_usuario(857, 57, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_mes_banco_fechado_w);
 
select	max(a.cd_retorno_liq) 
into STRICT	cd_retorno_liq_w 
from	banco_retorno_cp a 
where	a.cd_banco	= cd_banco_w;
 
if (coalesce(nr_seq_trans_escrit_w::text, '') = '') then 
 
	select	max(nr_seq_trans_escrit) 
	into STRICT	nr_seq_trans_escrit_w 
	from	parametro_tesouraria 
	where	cd_estabelecimento	= cd_estabelecimento_w;
 
end if;
 
select	coalesce(max(cd_tipo_baixa_padrao),1) 
into STRICT	cd_tipo_baixa_w 
from	parametros_contas_pagar 
where	cd_estabelecimento	= cd_estabelecimento_w;
 
open c01;
loop 
fetch c01 into 
	ds_nr_titulo_w, 
	ds_vl_pagamento_w, 
	ds_ocorrencia_w, 
	dt_baixa_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
 
	begin 
 
	if (coalesce(ie_mes_banco_fechado_w,'N')	= 'S') then 
 
		select	count(*) qt_mes_fechado 
		into STRICT	qt_mes_fechado_w 
		from	banco_saldo a 
		where	(a.dt_fechamento IS NOT NULL AND a.dt_fechamento::text <> '') 
		and	trunc(a.dt_referencia,'month')	= trunc(coalesce(dt_baixa_w,clock_timestamp()),'month') 
		and	a.nr_seq_conta	= nr_seq_conta_banco_w;
 
		if (coalesce(qt_mes_fechado_w,0)	> 0) then 
 
			/* O mês dt_referencia já está fechado no banco! Parâmetro [57] */
 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(248277,'DT_REFERENCIA=' || to_char(coalesce(dt_baixa_w,clock_timestamp()),'month/yyyy'));
 
		end if;
 
	end if;
 
	select	max(a.nr_titulo) 
	into STRICT	nr_titulo_w 
	from	titulo_pagar a 
	where	a.nr_titulo	= (ds_nr_titulo_w)::numeric;
 
	if (coalesce(nr_titulo_w::text, '') = '') then 
		/* O título ds_nr_titulo_w não existe no sistema! */
 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(226797,'DS_NR_TITULO_W='||ds_nr_titulo_w);
	end if;
 
	vl_pagamento_w		:= (ds_vl_pagamento_w)::numeric;
	vl_pagamento_w		:= dividir_sem_round((vl_pagamento_w)::numeric,100);
 
	select	count(*) 
	into STRICT	qt_titulo_w 
	from	titulo_pagar_escrit a 
	where	a.nr_titulo	= nr_titulo_w 
	and	a.nr_seq_escrit	= nr_seq_banco_escrit_p;
 
	if (qt_titulo_w = 0) then 
		CALL Gerar_Titulo_Escritural(nr_titulo_w,nr_seq_banco_escrit_p,nm_usuario_p);
	end if;
 
	update	titulo_pagar_escrit 
	set	ds_erro			= ds_ocorrencia_w 
	where	nr_seq_escrit		= nr_seq_banco_escrit_p 
	and	nr_titulo		= nr_titulo_w;
 
	qt_retorno_liq_w	:= 0;
 
	/* se tiver alguma das ocorrências de liquidação, baixa o título */
 
	if (position('BW' in ds_ocorrencia_w) > 0) or (position(cd_retorno_liq_w in ds_ocorrencia_w) > 0) then 
 
		qt_retorno_liq_w	:= 1;
 
	else 
 
		select	count(*) 
		into STRICT	qt_retorno_liq_w 
		from	erro_escritural a 
		where	a.ie_rejeitado	= 'L' 
		and	position(a.cd_erro in ds_ocorrencia_w)	> 0 
		and	a.cd_banco	= cd_banco_w;
 
	end if;
 
	if (qt_retorno_liq_w	> 0) then 
 
		select	coalesce(max(a.vl_desconto),0) 
		into STRICT	vl_desconto_w 
		from	titulo_pagar_escrit a 
		where	a.nr_titulo	= nr_titulo_w 
		and	a.nr_seq_escrit	= nr_seq_banco_escrit_p;
 
		RAISE NOTICE 'nr_titulo_w = %', nr_titulo_w;
 
		CALL baixa_titulo_pagar(	cd_estabelecimento_w, 
					cd_tipo_baixa_w, 
					nr_titulo_w, 
					(vl_pagamento_w + vl_desconto_w), 
					nm_usuario_p, 
					nr_seq_trans_escrit_w, 
					null, 
					nr_seq_banco_escrit_p, 
					coalesce(dt_baixa_w,clock_timestamp()), 
					nr_seq_conta_banco_w);
 
		select	max(nr_sequencia) 
		into STRICT	nr_sequencia_w 
		from	titulo_pagar_baixa 
		where	nr_titulo	= nr_titulo_w;
 
		CALL gerar_movto_tit_baixa(	nr_titulo_w, 
					nr_sequencia_w, 
					'P', 
					nm_usuario_p, 
					'N');
 
		CALL atualizar_saldo_tit_pagar(nr_titulo_w, nm_usuario_p);
		CALL Gerar_W_Tit_Pag_imposto(nr_titulo_w, nm_usuario_p);
	end if;
 
	exception 
	when others then 
		rollback;
		delete	from w_interf_retorno_itau 
		where	nr_seq_banco_escrit	= nr_seq_banco_escrit_p;
		commit;
 
		if (coalesce(qt_mes_fechado_w,0)	> 0) then 
 
			/* O mês dt_referencia já está fechado no banco! Parâmetro [57] */
 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(248277,'DT_REFERENCIA=' || to_char(coalesce(dt_baixa_w,clock_timestamp()),'month/yyyy'));
 
		else 
 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(226798, 
								'SQL_ERRM=' || sqlerrm || 
								';NR_TITULO_W=' || nr_titulo_w || 
								';DS_NR_TITULO_W=' || ds_nr_titulo_w || 
								';DS_VL_PAGAMENTO_W=' || ds_vl_pagamento_w || 
								';DS_OCORRENCIA_W=' || ds_ocorrencia_w);
 
		end if;
	end;
end loop;
close c01;
 
delete	from w_interf_retorno_itau 
where	nr_seq_banco_escrit	= nr_seq_banco_escrit_p;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_retorno_pagto_brad_bx (nr_seq_banco_escrit_p bigint, nm_usuario_p text) FROM PUBLIC;

