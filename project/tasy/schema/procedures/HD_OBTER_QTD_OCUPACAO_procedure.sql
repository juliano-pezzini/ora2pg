-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_obter_qtd_ocupacao (nr_seq_turno_p bigint, dt_agenda_p timestamp, ie_dia_semana_p text, nr_seq_unid_p bigint, cd_estabelecimento_p bigint, nr_seq_ponto_acesso_p bigint, qt_vagas_p INOUT bigint, qt_ocupado_p INOUT bigint, qt_vagas_esp_p INOUT bigint, qt_ocupado_esp_p INOUT bigint) AS $body$
DECLARE


    qt_vagas_w     integer;
    qt_vagas_esp_w integer;

    qt_ocupado_w     integer;
    qt_ocupado_esp_w integer;
    dt_agenda_w      timestamp := trunc(dt_agenda_p);
    ie_tipo_ponto    varchar(1); -- Tipo de Ponto maquina ('E' - Especial / 'N' - Normal )
BEGIN
    SELECT coalesce(MAX(qt_vagas), 0),
           coalesce(MAX(qt_vagas_esp), 0)
      INTO STRICT qt_vagas_w,
           qt_vagas_esp_w
      FROM hd_regra_turno_vaga
     WHERE nr_seq_unidade = nr_seq_unid_p
       AND nr_seq_turno = nr_seq_turno_p
       AND ie_dia_semana = ie_dia_semana_p
       AND cd_estabelecimento = cd_estabelecimento_p;
    -- Verifica se tem  ponto de Acesso  e o tipo de ocupação (Especial / Normal) ---
    IF (nr_seq_ponto_acesso_p IS NOT NULL AND nr_seq_ponto_acesso_p::text <> '') THEN
        SELECT COUNT(*)
          INTO STRICT qt_ocupado_w
          FROM hd_agenda_dialise had
         WHERE had.dt_agenda = dt_agenda_w
           AND had.nr_seq_ponto_acesso = nr_seq_ponto_acesso_p
           AND had.nr_seq_turno = nr_seq_turno_p
           AND had.nr_seq_unidade = nr_seq_unid_p
           AND had.cd_estabelecimento = cd_estabelecimento_p
           AND had.ie_situacao = 'A';

        SELECT CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'E' END 
          INTO STRICT ie_tipo_ponto
          FROM hd_maquina_dialise   hmd,
               hd_maquina_sorologia hms
         WHERE hmd.nr_seq_ponto = nr_seq_ponto_acesso_p
           AND hmd.nr_seq_unid_dialise = nr_seq_unid_p
           AND hmd.cd_estabelecimento = cd_estabelecimento_p
           AND hms.nr_seq_maquina = hmd.nr_sequencia;

        IF ie_tipo_ponto = 'E' THEN
            qt_ocupado_esp_w := qt_ocupado_w;
            qt_ocupado_w     := 0;
           -- qt_vagas_w       := 0;
        ELSE
            qt_ocupado_esp_w := 0;
           -- qt_vagas_esp_w   := 0;
        END IF;
    END IF;

    qt_ocupado_esp_p := qt_ocupado_esp_w;
    qt_vagas_esp_p   := qt_vagas_esp_w;
    qt_ocupado_p     := qt_ocupado_w;
    qt_vagas_p       := qt_vagas_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_obter_qtd_ocupacao (nr_seq_turno_p bigint, dt_agenda_p timestamp, ie_dia_semana_p text, nr_seq_unid_p bigint, cd_estabelecimento_p bigint, nr_seq_ponto_acesso_p bigint, qt_vagas_p INOUT bigint, qt_ocupado_p INOUT bigint, qt_vagas_esp_p INOUT bigint, qt_ocupado_esp_p INOUT bigint) FROM PUBLIC;

