-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE valida_grava_nova_prescricao ( nr_atendimento_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, nr_prescricao_p INOUT bigint ) AS $body$
DECLARE

 
nr_prescricao_w		bigint;
cd_setor_atend_usuario_w	integer;
unidade_atendimento_w	integer;
nr_horas_validade_w	integer;
dt_primeiro_horario_w	timestamp;
dt_alta_medica_w		timestamp;
count_atend_w		integer;
qt_min_w			varchar(5);
obter_data_w		timestamp;
novo_alta_w		varchar(5);
min_presc_alta_w		timestamp;
qt_validade_w		integer;
nr_cirurgia_w		numeric(20);
sem_atendimento_w	varchar(1);
ie_medico_w		varchar(1);
cd_estabelecimento_w	smallint;
pac_usu_w		varchar(1);
setores_usuario_w		varchar(1);
calcula_validade_w		varchar(1);
setor_entrega_usuario_w	varchar(1);
nao_permite_apos_alta_w	varchar(1);
ie_adep_w		varchar(1);
cd_classificacao_w		integer;
prescr_sem_diagnositco_w	varchar(1);
qt_diag_atend_w		integer;
cd_setor_entrega_w	integer;
dt_alta_w			timestamp;
cd_medico_w		varchar(10);
ie_tipo_pessoa_w		smallint;
qt_peso_w		real;
qt_altura_cm_w		real;
ds_erro_w		varchar(60);

/* 
	Procedure para validar e gerar nova prescrição medica no rep.. 
	Maicon - 31/03/2008 
*/
 

BEGIN 
 
select	a.cd_setor_atendimento, 
	b.ie_tipo_pessoa, 
	a.cd_estabelecimento, 
	a.cd_pessoa_fisica 
into STRICT	cd_setor_atend_usuario_w, 
	ie_tipo_pessoa_w, 
	cd_estabelecimento_w, 
	cd_medico_w 
from	usuario a, 
	pessoa_fisica b 
where  a.cd_pessoa_fisica 	= 	b.cd_pessoa_fisica 
and	a.nm_usuario	=	nm_usuario_p;
 
if (nr_atendimento_p <> '0')	then 
select (coalesce(dt_alta, clock_timestamp())+qt_min_w/1440), 
	cd_estabelecimento, 
	dt_alta 
into STRICT	min_presc_alta_w, 
	cd_estabelecimento_w, 
	dt_alta_w 
from	atendimento_paciente 
where	nr_atendimento	=	nr_atendimento_p;
end if;
 
select	obter_valor_param_usuario(924,43,obter_perfil_ativo,nm_usuario_p, cd_estabelecimento_w)	 
into STRICT	qt_min_w
;
select	obter_valor_param_usuario(924,174,obter_perfil_ativo,nm_usuario_p, cd_estabelecimento_w)	 
into STRICT	nao_permite_apos_alta_w
;
 
select	clock_timestamp(), 
	obter_sinal_vital(nr_atendimento_p,obter_desc_expressao(295698)), 
	obter_sinal_vital(nr_atendimento_p,obter_desc_expressao(283402)), 
	nextval('prescr_medica_seq') 
into STRICT	obter_data_w, 
	qt_peso_w, 
	qt_altura_cm_w, 
	nr_prescricao_w
;
 
if ( qt_min_w <> '0' )	then 
	if ( nr_atendimento_p <> 0 and min_presc_alta_w < obter_data_w )	then 
		-- Você não tem permissão para fazer prescrições após a alta do paciente! 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort( 6363 );
	end if;
end if;
 
if ( nr_atendimento_p = 0 )	then 
	select	obter_valor_param_usuario(924,82,obter_perfil_ativo,nm_usuario_p, cd_estabelecimento_w) 
	into STRICT	sem_atendimento_w 
	;
	if ( sem_atendimento_w = 'N' )	then 
		-- Você não tem permissão para gerar prescrição sem atendimento. Parâmetro 82. 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort( 6457 );
	end if;
end if;
 
select	obter_valor_param_usuario(924,42,obter_perfil_ativo,nm_usuario_p, cd_estabelecimento_w) 
into STRICT	pac_usu_w
;
 
select	obter_valor_param_usuario(924,136,obter_perfil_ativo,nm_usuario_p, cd_estabelecimento_w) 
into STRICT	setores_usuario_w
;
 
if ( pac_usu_w = 'U' )	then 
	if ( setores_usuario_w = 'N' and nr_atendimento_p > 0 )	then 
		select	count(*) 
		into STRICT	count_atend_w 
		from	setor_atendimento a 
		where	a.cd_setor_atendimento in (	SELECT	b.cd_setor_atendimento 
							from	atend_paciente_unidade b 
							where	b.nr_atendimento	=	nr_atendimento_p 
							and	b.cd_setor_atendimento	=	cd_setor_atend_usuario_w);
		if ( count_atend_w <> 0 )	then 
			select	a.cd_setor_atendimento, 
				b.ie_tipo_pessoa 
			into STRICT	cd_setor_atend_usuario_w, 
				ie_tipo_pessoa_w 
			from	usuario a, 
				pessoa_fisica b 
			where  a.cd_pessoa_fisica = b.cd_pessoa_fisica 
			and	a.nm_usuario	= nm_usuario_p;
		end if;
	else 
		Select	coalesce(obter_unidade_atendimento(nr_atendimento_p,'IA','CS'),obter_unidade_atendimento(nr_atendimento_p,'A','CS')) 
		into STRICT	cd_setor_atend_usuario_w 
		;		
	end if;
end if;
 
-- Atualizar o primeiro horário da prescrição 
 
if (nr_atendimento_p <> '0')	then 
Select	cd_classif_setor 
into STRICT	cd_classificacao_w 
from	setor_atendimento 
where	cd_setor_atendimento	=	(SELECT	Obter_Unidade_Atendimento(nr_atendimento_p, 'A', 'CS') 
					 );
end if;
					 
if ( nr_atendimento_p > 0 and cd_classificacao_w = 1 )	then 
	dt_primeiro_horario_w := obter_data_w;
else 
	Select	Obter_Prim_Horario_Prescricao(nr_atendimento_p, cd_setor_atend_usuario_w, obter_data_w, nm_usuario_p,'R') 
	into STRICT	dt_primeiro_horario_w 
	;
end if;
 
select	obter_valor_param_usuario(924,90,obter_perfil_ativo,nm_usuario_p, cd_estabelecimento_w) 
into STRICT	prescr_sem_diagnositco_w
;
if ( prescr_sem_diagnositco_w = 'N' and nr_atendimento_p > 0 )	then 
	select	Obter_qt_diag_atend(nr_atendimento_p) 
	into STRICT	qt_diag_atend_w 
	;
 
	if ( qt_diag_atend_w = 0 )	then 
		-- Não é permitido fazer nova prescrição para paciente sem diagnóstico. Parâmetro 90. 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort( 23399 );
	end if;
end if;
 
select	obter_valor_param_usuario(924,98,obter_perfil_ativo,nm_usuario_p, cd_estabelecimento_w) 
into STRICT	calcula_validade_w
;
 
if (calcula_validade_w	= 'R') then 
	calcula_validade_w	:= obter_se_calcula_validade(cd_setor_atend_usuario_w);
end if;
 
if ( calcula_validade_w <> 'N' )	then 
	select	obter_horas_validade_prescr(dt_primeiro_horario_w, nr_atendimento_p, null, null, obter_data_w,null) 
	into STRICT	nr_horas_validade_w 
	;
end if;
 
select	obter_valor_param_usuario(924,165,obter_perfil_ativo,nm_usuario_p, cd_estabelecimento_w) 
into STRICT	setor_entrega_usuario_w
;
if ( setor_entrega_usuario_w = 'S' )	then 
	cd_setor_entrega_w := cd_setor_atend_usuario_w;
end if;	
 
select	ie_adep 
into STRICT	ie_adep_w 
from	setor_atendimento 
where	cd_setor_atendimento	=	cd_setor_atend_usuario_w;
 
if ( nao_permite_apos_alta_w = 'S' and (dt_alta_medica_w IS NOT NULL AND dt_alta_medica_w::text <> '') )	then 
	-- Este atendimento já teve alta médica, não é possível gerar nova prescrição. Parâmetro [174]. 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort( 6551 );
end if;
 
select	obter_valor_param_usuario(924,155,obter_perfil_ativo,nm_usuario_p, cd_estabelecimento_w) 
into STRICT	qt_validade_w
;
insert into prescr_medica(nr_horas_validade, 
			nr_prescricao, 
			cd_pessoa_fisica, 
			nr_atendimento, 
			nm_usuario_original, 
			cd_prescritor, 
			cd_setor_atendimento, 
			dt_primeiro_horario, 
			dt_prescricao, 
			dt_atualizacao, 
			nm_usuario, 
			cd_medico, 
			ie_origem_inf, 
			qt_peso, 
			qt_altura_cm) 
		values ( 
			qt_validade_w, 
			nr_prescricao_w, 
			cd_pessoa_fisica_p, 
			nr_atendimento_p, 
			nm_usuario_p, 
			cd_medico_w, 
			cd_setor_atend_usuario_w, 
			dt_primeiro_horario_w, 
			obter_data_w, 
			obter_data_w, 
			nm_usuario_p, 
			cd_medico_w, 
			ie_tipo_pessoa_w, 
			qt_peso_w, 
			qt_altura_cm_w 
			);
commit;
 
nr_prescricao_p := nr_prescricao_w;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE valida_grava_nova_prescricao ( nr_atendimento_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, nr_prescricao_p INOUT bigint ) FROM PUBLIC;

