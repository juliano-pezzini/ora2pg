-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_analise_pos_item ( nr_seq_conta_p bigint, nr_seq_analise_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*Esta procedure tem por finalidade copiar as glosas e ocorrencias da conta e inseri-las em uma tabela especifica de modo que possam ser utilizadas na analise de contas medicas.*/
    

ds_observacao_w			varchar(4000);
cd_codigo_w			varchar(15);
ie_tipo_motivo_w		varchar(1) := 'P';
ie_status_w			varchar(1);
ie_tipo_w			varchar(1);
ie_existe_grupo_glosa_w 	varchar(1);
ie_pre_analise_w		varchar(2);
ie_auditoria_w			varchar(2);
ie_auditoria_ww			varchar(2) := 'N';
ie_tipo_glosa_w			varchar(1);
ie_origem_conta_w		varchar(1);

vl_glosa_w			double precision;
nr_seq_item_w			bigint;
nr_seq_conta_mat_w		bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_oc_w			bigint;
nr_seq_motivo_padrao_w		bigint;
nr_seq_conta_item_w		bigint;
nr_seq_glosa_ref_w		bigint;
qt_glosa_w			bigint;
nr_seq_conta_pos_estab_w	bigint;
nr_seq_ocorrencia_w		bigint;
nr_seq_grupo_w			bigint;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		b.nr_sequencia,
		null
	from	pls_conta_proc b,
		pls_conta_pos_estabelecido a
	where	a.nr_seq_conta_proc = b.nr_sequencia
	and	b.nr_seq_conta 	    = nr_seq_conta_p
	and	((a.ie_situacao	= 'A') or (coalesce(a.ie_situacao::text, '') = ''))
	
union

	SELECT	a.nr_sequencia,
		null,
		b.nr_sequencia
	from	pls_conta_mat b,
		pls_conta_pos_estabelecido a
	where	a.nr_seq_conta_mat = b.nr_sequencia
	and	b.nr_seq_conta 	   = nr_seq_conta_p
	and	((a.ie_situacao	= 'A') or (coalesce(a.ie_situacao::text, '') = ''))
	order by 1;

/*Ocorrencias especificas da pos-estabelecido*/

C02 CURSOR FOR	
	SELECT	b.cd_ocorrencia cd_codigo,
		substr(b.ds_documentacao,1,4000) ds_observacao,
		'O' ie_tipo,		
		a.nr_sequencia,
		coalesce(a.nr_seq_glosa, (	SELECT	max(x.nr_sequencia)
					from	pls_conta_glosa x
					where	x.nr_seq_ocorrencia_benef = a.nr_sequencia ) ), -- Diego 28/04/2011 - Cria o vinculo com a glosa sera aquela gerada pela ocorrencia ou que gerou a ocorrencia
		a.qt_glosa,
		a.vl_glosa,
		coalesce(a.ie_pre_analise,'N'),
		coalesce(b.ie_auditoria_conta,'N'),
		a.nr_sequencia
	from	pls_ocorrencia_benef	a,
		pls_ocorrencia		b
	where	a.nr_seq_ocorrencia 	  = b.nr_sequencia
	and	coalesce(nr_seq_guia_plano::text, '') = ''
	and	coalesce(nr_seq_requisicao::text, '') = ''	
	and	a.nr_seq_conta_pos_estab  = nr_seq_conta_pos_estab_w	
	and	not exists (select	1
				 from	pls_analise_conta_item x
				 where	x.nr_seq_ocorrencia	= a.nr_sequencia
				 and	x.nr_seq_analise	= nr_seq_analise_p);
				
C03 CURSOR FOR
	SELECT	a.nr_seq_grupo
	from	pls_ocorrencia_grupo a,
		pls_ocorrencia_benef b,
		pls_ocorrencia c
	where	a.nr_seq_ocorrencia = c.nr_sequencia 
	and	b.nr_seq_ocorrencia = c.nr_sequencia
	and	coalesce(a.ie_origem_conta,ie_origem_conta_w) = ie_origem_conta_w
	and	coalesce(a.ie_conta_medica,'S') = 'S'
	and	a.ie_situacao	= 'A'
	and	b.nr_sequencia = nr_seq_ocorrencia_w
	and	not exists (SELECT	x.nr_sequencia
				 from	pls_analise_grupo_item x
				 where	x.nr_seq_item_analise	= nr_seq_item_w
				 and	x.nr_seq_grupo		= a.nr_seq_grupo);


BEGIN

select	max(ie_origem_conta)
into STRICT	ie_origem_conta_w
from	pls_conta
where	nr_sequencia = nr_seq_conta_p;

open C01;
loop
fetch C01 into	
	nr_seq_conta_pos_estab_w,
	nr_seq_conta_proc_w,
	nr_seq_conta_mat_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin	
	
	/*Inserir glosas e ocorrencias  da conta*/

	open C02;
	loop
	fetch C02 into	
		cd_codigo_w,
		ds_observacao_w,
		ie_tipo_w,		
		nr_seq_oc_w,
		nr_seq_glosa_ref_w,
		qt_glosa_w,
		vl_glosa_w,
		ie_pre_analise_w,
		ie_auditoria_w,
		nr_seq_ocorrencia_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin		
		
		if (ie_auditoria_w = 'S') then
			ie_auditoria_ww := 'S';
		end if;
		
		if (ie_auditoria_w = 'N') and (ie_tipo_w = 'O') then			
			ie_tipo_motivo_w := 'I'; /*Diego Os 342553 - Caso a ocorrencia nao seja de auditoria sera meramente informativa.*/
			qt_glosa_w := 0;
			vl_glosa_w := 0;			
		else				
			ie_tipo_motivo_w := 'P';
		end if;		
			
		select  nextval('pls_analise_conta_item_seq')
		into STRICT	nr_seq_item_w
		;
				
		insert into pls_analise_conta_item(cd_codigo, ds_obs_glosa_oc, dt_atualizacao,
			 dt_atualizacao_nrec, ie_situacao, ie_status_faturamento,
			 ie_tipo, nm_usuario, nm_usuario_nrec,
			 nr_seq_analise, nr_seq_conta, nr_seq_conta_mat,
			 nr_seq_conta_proc, nr_sequencia,
			 ie_fechar_conta, nr_seq_glosa_ref,
			 qt_glosa, vl_glosa, ie_pre_analise,			
			 nr_seq_ocorrencia, nr_seq_conta_pos_estab, nr_seq_glosa_oc,
			 ie_tipo_glosa)
		values (cd_codigo_w, ds_observacao_w, clock_timestamp(),
			 clock_timestamp(), 'A', ie_tipo_motivo_w,
			 ie_tipo_w, nm_usuario_p, nm_usuario_p,
			 nr_seq_analise_p, nr_seq_conta_p, nr_seq_conta_mat_w,
			 nr_seq_conta_proc_w, nr_seq_item_w,
			 pls_obter_glos_oco_permite(cd_codigo_w, ie_tipo_w), nr_seq_glosa_ref_w,
			 qt_glosa_w, vl_glosa_w, ie_pre_analise_w,
			 nr_seq_ocorrencia_w, nr_seq_conta_pos_estab_w, nr_seq_ocorrencia_w,
			 ie_tipo_glosa_w);
			
		if (coalesce(nr_seq_ocorrencia_w,0) > 0) then
		
			open C03;
			loop
			fetch C03 into	
				nr_seq_grupo_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				
				ie_auditoria_ww := 'S';			
				
				insert into pls_analise_grupo_item(nr_sequencia, cd_estabelecimento, dt_atualizacao,
					 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					 nr_seq_grupo, nr_seq_item_analise)
				values (nextval('pls_analise_grupo_item_seq'), cd_estabelecimento_p, clock_timestamp(),
					nm_usuario_p, clock_timestamp(), nm_usuario_p,
					nr_seq_grupo_w, nr_seq_item_w);
				
				end;
			end loop;
			close C03;

		end if;		
		
		end;
	end loop;
	close C02;
	
	end;
end loop;
close C01;

update	pls_analise_conta
set	ie_auditoria	= CASE WHEN ie_auditoria='S' THEN  'S' WHEN ie_auditoria='N' THEN  ie_auditoria_ww END ,
	ie_status	= CASE WHEN ie_status='S' THEN  CASE WHEN ie_auditoria_ww='S' THEN  'G' WHEN ie_auditoria_ww='N' THEN  'S' END   ELSE ie_status END
where	nr_sequencia	= nr_seq_analise_p;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_analise_pos_item ( nr_seq_conta_p bigint, nr_seq_analise_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

