-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hc_consistir_alterar_resp ( nr_seq_agenda_p bigint, nr_seq_equipe_p bigint, nr_seq_turno_p bigint, ds_seq_prof_hc_p text, ie_opcao_p text, dt_agenda_p timestamp, dt_agendamento_p timestamp) AS $body$
DECLARE


lista_responsaveis_w	dbms_sql.varchar2_table;
nr_seq_agenda_w		bigint;
dt_agenda_w		timestamp;
ds_observacao_prof_hc_w	varchar(255);
ie_retorno_func_hc_w	varchar(1);
nr_seq_incons_agen_w	bigint;
cd_pessoa_fisica_w	varchar(10);
ie_controle_w		integer;
nr_seq_prof_hc_w	bigint;
ie_escala_plantao_w	varchar(1);
nr_minuto_duracao_w	bigint;

c01 CURSOR FOR  -- Busca Equipe.
	SELECT	a.nr_seq_paciente_hc,
		a.dt_agenda,
		a.nr_minuto_duracao
	from	agenda_hc_paciente a,
		hc_agenda_prof b,
		hc_turno h
	where	b.nr_seq_agenda = a.nr_sequencia
	and	to_char(a.dt_agenda,'hh24:mi:ss')  between to_char(h.hr_inicial,'hh24:mi:ss') and to_char(h.hr_final,'hh24:mi:ss')
	and	a.dt_agenda 	between inicio_dia(dt_agenda_p) and fim_dia(dt_agenda_p)
	and	((b.nr_seq_equipe_hc = nr_seq_equipe_p) or (nr_seq_equipe_p = 0));

C02 CURSOR FOR
	SELECT	a.nr_seq_paciente_hc,
		a.dt_agenda,
		a.nr_minuto_duracao
	FROM hc_turno h, agenda_hc_paciente a
LEFT OUTER JOIN hc_agenda_prof b ON (a.nr_sequencia = b.nr_seq_agenda)
WHERE h.nr_sequencia = nr_seq_turno_p and to_char(a.dt_agenda,'hh24:mi:ss')  between to_char(h.hr_inicial,'hh24:mi:ss') and to_char(h.hr_final,'hh24:mi:ss') and a.dt_agenda 	between inicio_dia(dt_agenda_p) and fim_dia(dt_agenda_p) and a.nr_seq_agenda = nr_seq_agenda_p;

	procedure consistir_hr_profissional is
	;
BEGIN
		if (ie_escala_plantao_w = 'S') then

			select 	cd_pessoa_fisica
			into STRICT	cd_pessoa_fisica_w
			from	hc_profissional
			where	nr_sequencia = nr_seq_prof_hc_w;

			ie_retorno_func_hc_w := coalesce(hc_consistir_dispon_func(cd_pessoa_fisica_w,dt_agenda_w,nr_minuto_duracao_w),'N');
			if (ie_retorno_func_hc_w <> 'N') then
				if (ie_retorno_func_hc_w = 'E') then --Profissional fora da Escala
					ds_observacao_prof_hc_w := wheb_mensagem_pck.get_texto(302045);
				elsif (ie_retorno_func_hc_w = 'A') then --Profissional ausente
					ds_observacao_prof_hc_w := wheb_mensagem_pck.get_texto(302047);
				elsif (ie_retorno_func_hc_w = 'H') then --Profissional alocado em outro paciente
					ds_observacao_prof_hc_w := wheb_mensagem_pck.get_texto(302048);
				end if;

				select	nextval('hc_inconsistencia_agen_seq')
				into STRICT	nr_seq_incons_agen_w
				;

				insert into hc_inconsistencia_agen(
					nr_sequencia,
					nr_seq_hc_paciente,
					dt_agenda,
					ds_observacao,
					ie_tipo,
					cd_pessoa_fisica
					) values (
					nr_seq_incons_agen_w,
					nr_seq_agenda_w,
					dt_agenda_w,
					ds_observacao_prof_hc_w,
					ie_retorno_func_hc_w,
					cd_pessoa_fisica_w
				);
				commit;
			end if;
		end if;
	end;

begin

select 	coalesce(ie_utiliza_escala_plantao,'N')
into STRICT	ie_escala_plantao_w
from 	hc_parametro
where 	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

if (ds_seq_prof_hc_p IS NOT NULL AND ds_seq_prof_hc_p::text <> '') then
	begin
	lista_responsaveis_w	:= obter_lista_string(ds_seq_prof_hc_p, ',');

	if (ie_opcao_p = 'P') then --Por Paciente
		begin
		--Exclui todos os registros de inconsistencia da agenda.
		select 	nr_seq_paciente_hc
		into STRICT	nr_seq_agenda_w
		from 	agenda_hc_paciente
		where 	nr_sequencia = nr_seq_agenda_p;

		delete	from hc_inconsistencia_agen
		where	nr_seq_hc_paciente = nr_seq_agenda_w;

		commit;

		--Executa a validacao.
		for	i in lista_responsaveis_w.first..lista_responsaveis_w.last loop
			nr_seq_prof_hc_w	:= lista_responsaveis_w(i);

			dt_agenda_w := to_date(to_char(dt_agenda_p, 'dd/mm/yyyy') ||' '|| to_char(dt_agendamento_p, 'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');

			--busca tempo de duração da consulta.
			select	coalesce(nr_minuto_duracao,0)
			into STRICT 	nr_minuto_duracao_w
			from	agenda_hc_paciente
			where	nr_sequencia = nr_seq_agenda_p;

			consistir_hr_profissional;

		end loop;
		end;

	elsif (ie_opcao_p = 'E') or (ie_opcao_p = 'A') then --Por Equipe
		begin
		ie_controle_w	:= 1;
		for	y in lista_responsaveis_w.first..lista_responsaveis_w.last loop
			nr_seq_prof_hc_w	:= lista_responsaveis_w(y);

			if (ie_opcao_p = 'E') then --Por Equipe
				open c01;
				loop
				fetch c01 into
					nr_seq_agenda_w,
					dt_agenda_w,
					nr_minuto_duracao_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
					begin
					if (ie_controle_w = 1) then
						begin
						delete	from hc_inconsistencia_agen
						where	nr_seq_hc_paciente	in(	SELECT	a.nr_seq_paciente_hc
										from	agenda_hc_paciente a,
											hc_agenda_prof b
										where	b.nr_seq_agenda = a.nr_sequencia
										and	a.dt_agenda 	between inicio_dia(dt_agenda_p) and fim_dia(dt_agenda_p)
										and	((b.nr_seq_equipe_hc = nr_seq_equipe_p) or (nr_seq_equipe_p = 0)));
						commit;
						end;
					end if;
					end;

					consistir_hr_profissional;

					ie_controle_w := ie_controle_w + 1;
				end loop;
				close c01;
			end if;

			if (ie_opcao_p = 'A') then --Por Agenda
				open c02;
				loop
				fetch c02 into
					nr_seq_agenda_w,
					dt_agenda_w,
					nr_minuto_duracao_w;
				EXIT WHEN NOT FOUND; /* apply on c02 */
					begin
					if (ie_controle_w = 1) then
						begin
						delete	from hc_inconsistencia_agen
						where	nr_seq_hc_paciente	in (	SELECT	a.nr_seq_paciente_hc
										from	agenda_hc_paciente a,
											hc_agenda_prof b,
											hc_turno h
										where	b.nr_seq_agenda = a.nr_sequencia
										and	to_char(a.dt_agenda,'hh24:mi:ss')  between to_char(h.hr_inicial,'hh24:mi:ss') and to_char(h.hr_final,'hh24:mi:ss')
										and	h.nr_sequencia = nr_seq_turno_p
										and	a.dt_agenda 	between inicio_dia(dt_agenda_p) and fim_dia(dt_agenda_p)
										and	a.nr_seq_agenda = nr_seq_agenda_p);
						commit;
						end;
					end if;
					end;

					consistir_hr_profissional;

					ie_controle_w := ie_controle_w + 1;
				end loop;
				close c02;
			end if;
		end loop;
		end;

	end if;

	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hc_consistir_alterar_resp ( nr_seq_agenda_p bigint, nr_seq_equipe_p bigint, nr_seq_turno_p bigint, ds_seq_prof_hc_p text, ie_opcao_p text, dt_agenda_p timestamp, dt_agendamento_p timestamp) FROM PUBLIC;

