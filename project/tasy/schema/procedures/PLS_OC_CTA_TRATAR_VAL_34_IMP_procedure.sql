-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_34_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) AS $body$
DECLARE


_ora2pg_r RECORD;
nr_index_sel_w				integer;
ie_gerar_ocorrencia_w			varchar(1);
tb_seq_selecao_w			pls_util_cta_pck.t_number_table;
tb_valido_w				pls_util_cta_pck.t_varchar2_table_1;
tb_observacao_w				pls_util_cta_pck.t_varchar2_table_4000;

-- Informações da validação de não-utilização de item autorizado
C01 CURSOR(	nr_seq_oc_cta_comb_pc	pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	ie_val_medico_inativo
	from	pls_oc_cta_val_med_inativo
	where	nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_pc;

C02 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_imp.nr_id_transacao%type) FOR
	SELECT	sel.nr_sequencia		nr_seq_selecao,
		'S' 				ie_registro_valido,
		null 				ds_observacao,
		conta.cd_profissional_exec_conv	cd_profissional_conv,
		conta.dt_atendimento		dt_atendimento
	from	pls_oc_cta_selecao_imp	sel,
		pls_conta_proc_imp	proc,
		pls_conta_imp		conta
	where	sel.nr_id_transacao	= nr_id_transacao_pc
	and	sel.ie_valido		= 'S'
	and	sel.ie_tipo_registro	= 'P'
	and	proc.nr_sequencia	= sel.nr_seq_conta_proc
	and	not exists (	SELECT 1
				from	pls_conta_item_equipe_imp	equip
				where	equip.nr_seq_conta_proc		= proc.nr_sequencia)
	and	conta.nr_sequencia	= proc.nr_seq_conta
	
union all

	select	sel.nr_sequencia		nr_seq_selecao,
		'S' 				ie_registro_valido,
		null 				ds_observacao,
		equip.cd_profissional_conv	cd_profissional_conv,
		conta.dt_atendimento		dt_atendimento
	from	pls_oc_cta_selecao_imp		sel,
		pls_conta_proc_imp		proc,
		pls_conta_item_equipe_imp	equip,
		pls_conta_imp			conta
	where	sel.nr_id_transacao	= nr_id_transacao_pc
	and	sel.ie_valido		= 'S'
	and	sel.ie_tipo_registro	= 'P'
	and	proc.nr_sequencia	= sel.nr_seq_conta_proc
	and	equip.nr_seq_conta_proc = proc.nr_sequencia
	and	conta.nr_sequencia	= proc.nr_seq_conta;

C03 CURSOR(	cd_pessoa_fisica_pc	medico.cd_pessoa_fisica%type) FOR
	SELECT	ie_situacao,
		dt_desligamento
	from	medico
	where	cd_pessoa_fisica	= cd_pessoa_fisica_pc;
BEGIN

-- Deve exisitr informação da regra para executar a validação
if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '') and (nr_id_transacao_p IS NOT NULL AND nr_id_transacao_p::text <> '')  then
	for	r_C01_w in C01(nr_seq_combinada_p) loop
		-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
		CALL pls_ocor_imp_pck.atualiza_campo_auxiliar('V', 'N', nr_id_transacao_p, null);
		--limpa as variáveis
		SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
		nr_index_sel_w := 0;
		--Abre cursor com as contas selecionadas
		for	r_C02_w in C02(nr_id_transacao_p) loop

			ie_gerar_ocorrencia_w := 'N';
			--Abre cursor dos médicos participantes da conta
			for	r_C03_w	in C03(r_C02_w.cd_profissional_conv) loop
				--Verifica se é para validar se o médico está inátivo
				if (r_C01_w.ie_val_medico_inativo = 'S') then
					--Verifica se o mesmo não está ativo ou se a data de desligamento dele é superior a data de atendimento
					if (r_C03_w.ie_situacao <> 'A' or ((r_C03_w.dt_desligamento IS NOT NULL AND r_C03_w.dt_desligamento::text <> '') and r_C03_w.dt_desligamento < r_C02_w.dt_atendimento)) then
						ie_gerar_ocorrencia_w := 'S';
					end if;
				else
					ie_gerar_ocorrencia_w := 'S';
				end if;

			end loop; --C03
			if (ie_gerar_ocorrencia_w = 'S') then
				tb_seq_selecao_w(nr_index_sel_w) := r_C02_w.nr_seq_selecao;
				tb_valido_w(nr_index_sel_w) 	 := r_C02_w.ie_registro_valido;
				tb_observacao_w(nr_index_sel_w)  := r_C02_w.ds_observacao;

				if (nr_index_sel_w >= pls_cta_consistir_pck.qt_registro_transacao_w ) then

					--Grava o que restar nas variáveis na tabela
					CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w, tb_valido_w,
											tb_observacao_w, nr_id_transacao_p,
											'SEQ');
					--limpa as variáveis
					SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;

					nr_index_sel_w		:= 0;
				else
					nr_index_sel_w := nr_index_sel_w + 1;
				end if;
			end if;
		end loop; --C02
	end loop; -- C01
	--Grava o que restar nas variáveis na tabela
	CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w, tb_valido_w,
							tb_observacao_w, nr_id_transacao_p,
							'SEQ');
	-- seta os registros que serão válidos ou inválidos após o processamento
	CALL pls_ocor_imp_pck.atualiza_campo_valido('V', 'N',
						ie_regra_excecao_p, null,
						nr_id_transacao_p, null);
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_34_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) FROM PUBLIC;

