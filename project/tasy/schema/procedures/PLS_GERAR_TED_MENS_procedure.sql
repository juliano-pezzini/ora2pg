-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_ted_mens ( nr_seq_lote_p bigint, ie_gerar_desfazer_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_lote_w			pls_lote_mensalidade_ted.dt_lote%type;
nr_seq_regra_w			pls_regra_ted.nr_sequencia%type;
ie_incide_lote_w		varchar(1);
cd_cgc_estipulante_w		varchar(14);
qt_regra_w			integer;
qt_regra_excecao_w		integer;
ie_geracao_lote_w		varchar(255);
cd_cep_w			pls_mensalidade_ted.cd_cep%type;
nm_pagador_w			pls_mensalidade_ted.nm_pagador%type;
cd_cartao_benef_pagador_w	pls_mensalidade_ted.cd_cartao_benef_pagador%type;
ds_destino_correspondencia_w	pls_mensalidade_ted.ds_destino_correspondencia%type;

C01 CURSOR(	dt_lote_pc	timestamp) FOR
	SELECT	a.nr_sequencia nr_seq_mensalidade,
		a.nr_seq_pagador,
		b.nr_sequencia nr_seq_lote_mens,
		c.nr_seq_contrato,
		c.nr_seq_pagador_intercambio nr_seq_intercambio,
		c.ie_envia_cobranca,
		c.nr_seq_destino_corresp,
		pls_obter_compl_pagador(c.nr_sequencia,'IBGE') cd_municipio_ibge,
		pls_obter_compl_pagador(c.nr_sequencia,'CEP') cd_cep
	from	pls_mensalidade		a,
		pls_lote_mensalidade	b,
		pls_contrato_pagador	c
	where	b.nr_sequencia	= a.nr_seq_lote
	and	c.nr_sequencia	= a.nr_seq_pagador
	and	trunc(b.dt_mesano_referencia,'month')	= dt_lote_pc;

C02 CURSOR(	nr_seq_regra_pc		pls_regra_ted.nr_sequencia%type,
		nr_seq_pagador_pc	pls_contrato_pagador.nr_sequencia%type,
		cd_cgc_estipulante_pc	pessoa_juridica.cd_cgc%type,
		ie_envia_cobranca_pc	pls_contrato_pagador.ie_envia_cobranca%type,
		cd_municipio_ibge_pc	sus_municipio.cd_municipio_ibge%type) FOR
	SELECT	a.ie_incide_lote,
		a.cd_cep_inicial,
		a.cd_cep_final
	from	pls_ted_regra_mens_incid	a
	where	a.nr_seq_regra_ted	= nr_seq_regra_pc
	and	((a.ie_tipo_estipulante = 'A') or (a.ie_tipo_estipulante = 'PF' and coalesce(cd_cgc_estipulante_pc::text, '') = '') or (a.ie_tipo_estipulante = 'PJ' and (cd_cgc_estipulante_pc IS NOT NULL AND cd_cgc_estipulante_pc::text <> '')))
	and (a.cd_cgc_estipulante = cd_cgc_estipulante_pc or coalesce(a.cd_cgc_estipulante::text, '') = '')
	and (a.nr_seq_pagador = nr_seq_pagador_pc or coalesce(a.nr_seq_pagador::text, '') = '')
	and (a.ie_envia_cobranca = ie_envia_cobranca_pc or coalesce(a.ie_envia_cobranca::text, '') = '')
	and (a.cd_municipio_ibge = cd_municipio_ibge_pc or coalesce(a.cd_municipio_ibge::text, '') = '')
	order by
		coalesce(a.nr_seq_pagador,0),
		coalesce(a.cd_cgc_estipulante, ' '),
		coalesce(a.cd_cep_inicial, ' '),
		coalesce(a.cd_cep_final, ' '),
		coalesce(a.cd_municipio_ibge, ' '),
		coalesce(a.ie_envia_cobranca, ' ');

C03 CURSOR(	nr_seq_regra_pc			pls_regra_ted.nr_sequencia%type,
		nr_seq_pagador_pc		pls_contrato_pagador.nr_sequencia%type,
		cd_municipio_ibge_pc		sus_municipio.cd_municipio_ibge%type,
		nr_seq_destino_corresp_pc	pls_destino_corresp.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia,
		a.cd_cep_inicial,
		a.cd_cep_final
	from	pls_ted_regra_mens_excecao a
	where	a.nr_seq_regra_ted	= nr_seq_regra_pc
	and (a.nr_seq_pagador = nr_seq_pagador_pc or coalesce(a.nr_seq_pagador::text, '') = '')
	and (a.cd_municipio_ibge = cd_municipio_ibge_pc or coalesce(a.cd_municipio_ibge::text, '') = '')
	and (a.nr_seq_destino_corresp = nr_seq_destino_corresp_pc or coalesce(a.nr_seq_destino_corresp::text, '') = '')
	and (a.ie_sem_destino_corresp = 'N' or coalesce(nr_seq_destino_corresp_pc::text, '') = '');
BEGIN

if (ie_gerar_desfazer_p = 'G') then
	begin
	select	trunc(dt_lote,'month'),
		nr_seq_regra,
		ie_geracao_lote
	into STRICT	dt_lote_w,
		nr_seq_regra_w,
		ie_geracao_lote_w
	from	pls_lote_mensalidade_ted
	where	nr_sequencia	= nr_seq_lote_p;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(261346); --Lote inválido!
	end;

	if (ie_geracao_lote_w = 'Mensalidade') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(261347); --O lote selecionado foi gerado pela função OPS - Mensalidade, portanto não será possível alterar o mesmo
	end if;

	select	count(1)
	into STRICT	qt_regra_w
	from	pls_ted_regra_mens_incid
	where	nr_seq_regra_ted	= nr_seq_regra_w;

	select	count(1)
	into STRICT	qt_regra_excecao_w
	from	pls_ted_regra_mens_excecao
	where	nr_seq_regra_ted	= nr_seq_regra_w;

	for r_c01_w in C01(dt_lote_w) loop
		begin
		if (r_c01_w.nr_seq_contrato IS NOT NULL AND r_c01_w.nr_seq_contrato::text <> '') then
			select	max(cd_cgc_estipulante)
			into STRICT	cd_cgc_estipulante_w
			from	pls_contrato
			where	nr_sequencia	= r_c01_w.nr_seq_contrato;
		elsif (r_c01_w.nr_seq_intercambio IS NOT NULL AND r_c01_w.nr_seq_intercambio::text <> '') then
			select	max(cd_cgc)
			into STRICT	cd_cgc_estipulante_w
			from	pls_intercambio
			where	nr_sequencia	= r_c01_w.nr_seq_intercambio;
		end if;

		if (qt_regra_w = 0) then
			ie_incide_lote_w	:= 'S';
		else
			ie_incide_lote_w	:= 'N';
			for r_c02_w in C02(nr_seq_regra_w, r_c01_w.nr_seq_pagador, cd_cgc_estipulante_w, r_c01_w.ie_envia_cobranca, r_c01_w.cd_municipio_ibge) loop
				begin
				if (coalesce(r_c02_w.cd_cep_inicial::text, '') = '' and coalesce(r_c02_w.cd_cep_final::text, '') = '') or ((r_c01_w.cd_cep IS NOT NULL AND r_c01_w.cd_cep::text <> '') and (somente_numero(r_c01_w.cd_cep))::numeric  between (somente_numero(r_c02_w.cd_cep_inicial))::numeric  and (somente_numero(r_c02_w.cd_cep_final))::numeric ) then
					ie_incide_lote_w	:= r_c02_w.ie_incide_lote;
				end if;
				end;
			end loop;
		end if;

		if (qt_regra_excecao_w > 0) and (ie_incide_lote_w = 'S') then
			for r_c03_w in C03(nr_seq_regra_w, r_c01_w.nr_seq_pagador, r_c01_w.cd_municipio_ibge, r_c01_w.nr_seq_destino_corresp) loop
				begin
				if (coalesce(r_c03_w.cd_cep_inicial::text, '') = '' and coalesce(r_c03_w.cd_cep_final::text, '') = '') or ((r_c01_w.cd_cep IS NOT NULL AND r_c01_w.cd_cep::text <> '') and (somente_numero(r_c01_w.cd_cep))::numeric  between (somente_numero(r_c03_w.cd_cep_inicial))::numeric  and (somente_numero(r_c03_w.cd_cep_final))::numeric ) then
					ie_incide_lote_w	:= 'N';
				end if;
				end;
			end loop;
		end if;

		if (coalesce(ie_incide_lote_w,'N') = 'S') then
			cd_cep_w			:= substr(pls_obter_compl_pagador(r_c01_w.nr_seq_pagador,'CEP'),1,15);
			nm_pagador_w			:= substr(pls_obter_dados_pagador(r_c01_w.nr_seq_pagador,'N'),1,255);
			cd_cartao_benef_pagador_w	:= substr(pls_obter_cart_seq_pagador(r_c01_w.nr_seq_pagador,null),1,30);
			ds_destino_correspondencia_w	:= substr(pls_obter_destino_corresp_pag(r_c01_w.nr_seq_pagador),1,255);

			insert into pls_mensalidade_ted(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_lote_mens,
				nr_seq_lote_ted,
				nr_seq_mensalidade,
				cd_cep,
				nm_pagador,
				cd_cartao_benef_pagador,
				nr_seq_destino_corresp,
				ds_destino_correspondencia)
			values (nextval('pls_mensalidade_ted_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				r_c01_w.nr_seq_lote_mens,
				nr_seq_lote_p,
				r_c01_w.nr_seq_mensalidade,
				cd_cep_w,
				nm_pagador_w,
				cd_cartao_benef_pagador_w,
				r_c01_w.nr_seq_destino_corresp,
				ds_destino_correspondencia_w);
		end if;
		end;
	end loop; --C01
	CALL pls_ordernar_lote_ted(nr_seq_lote_p);

	update	pls_lote_mensalidade_ted
	set	dt_geracao_lote	= clock_timestamp()
	where	nr_sequencia	= nr_seq_lote_p;
elsif (ie_gerar_desfazer_p = 'D') then
	delete	from	pls_mensalidade_ted
	where	nr_seq_lote_ted	= nr_seq_lote_p;

	update	pls_lote_mensalidade_ted
	set	dt_geracao_lote	 = NULL
	where	nr_sequencia	= nr_seq_lote_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_ted_mens ( nr_seq_lote_p bigint, ie_gerar_desfazer_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

