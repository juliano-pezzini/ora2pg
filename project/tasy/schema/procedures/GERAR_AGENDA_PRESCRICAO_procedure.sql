-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_agenda_prescricao ( nr_prescricao_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_setor_atendimento_w	integer;
cd_area_proc_w		bigint;
cd_especialidade_proc_w	bigint;
cd_grupo_proc_w		bigint;
hr_agenda_w			varchar(5);
cd_agenda_w			bigint;
nr_seq_tipo_baixa_w		bigint;
qt_reg_w			bigint;
nr_minuto_Intervalo_w	bigint;
cd_estabelecimento_w		smallint;
nr_sequencia_w		bigint;
cd_pessoa_fisica_w		varchar(10);
qt_agenda_w			smallint;
hr_inicio_w			timestamp;
nr_atendimento_w		bigint;
cd_convenio_w			integer;
ds_observacao_w			varchar(1000);
dt_ultima_agenda_w		timestamp;
ds_dados_clinicos_w		varchar(255);
ds_observ_proc_w		varchar(255);
nr_seq_proc_interno_w               varchar(255);

C01 CURSOR FOR
	SELECT	b.cd_procedimento,
			b.ie_origem_proced,
			b.cd_setor_atendimento,
			substr(b.ds_dado_clinico,1,255),
			substr(b.ds_observacao,1,255),
			b.nr_seq_proc_interno
	from	prescr_procedimento b,
			prescr_medica a
	where	a.nr_prescricao		= nr_prescricao_p
	and	a.nr_prescricao		= b.nr_prescricao
	and	(b.cd_setor_atendimento IS NOT NULL AND b.cd_setor_atendimento::text <> '');

C02 CURSOR FOR
	SELECT	cd_agenda,
			hr_agenda,
			nr_seq_tipo_baixa
	from	regra_prescricao_agenda
	where	cd_estabelecimento					= cd_estabelecimento_w
	and	coalesce(cd_setor_atendimento, cd_setor_atendimento_w) 	= cd_setor_atendimento_w
	and	coalesce(cd_area_proc, cd_area_proc_w)			= cd_area_proc_w
	and	coalesce(cd_especialidade_proc, cd_especialidade_proc_w)	= cd_especialidade_proc_w
	and	coalesce(cd_grupo_proc, cd_grupo_proc_w)			= cd_grupo_proc_w
	and	coalesce(cd_procedimento, cd_procedimento_w)			= cd_procedimento_w
	and	coalesce(ie_origem_proced, ie_origem_proced_w)		= ie_origem_proced_w;


BEGIN

select	count(*)
into STRICT	qt_reg_w
from	regra_prescricao_agenda LIMIT 1;

select	max(cd_estabelecimento),
		max(cd_pessoa_fisica),
		max(nr_atendimento),
		obter_convenio_atendimento(max(nr_atendimento)),
		coalesce(substr(max(ds_observacao),1,255),'')
into STRICT	cd_estabelecimento_w,
		cd_pessoa_fisica_w,
		nr_atendimento_w,
		cd_convenio_w,
		ds_observacao_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

if (qt_reg_w > 0) then
	OPEN C01;
	LOOP
	FETCH C01 into
		cd_procedimento_w,
		ie_origem_proced_w,
		cd_setor_atendimento_w,
		ds_dados_clinicos_w,
		ds_observ_proc_w,
		nr_seq_proc_interno_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		ds_observacao_w	:= substr(ds_observacao_w || ds_observ_proc_w,1,1000);

		select	max(a.cd_grupo_proc),
				max(b.cd_especialidade),
				max(c.cd_area_procedimento)
		into STRICT	cd_grupo_proc_w,
				cd_especialidade_proc_w,
				cd_area_proc_w
		from	especialidade_proc c,
				grupo_proc b,
				procedimento a
		where	a.cd_procedimento	= cd_procedimento_w
		and	a.ie_origem_proced	= ie_origem_proced_w
		and	a.cd_grupo_proc		= b.cd_grupo_proc
		and	b.cd_especialidade	= c.cd_especialidade;

		OPEN C02;
		LOOP
		FETCH C02 into
			cd_agenda_w,
			hr_agenda_w,
			nr_seq_tipo_baixa_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

			select	nextval('agenda_paciente_seq')
			into STRICT	nr_sequencia_w
			;

			select	max(nr_minuto_intervalo)
			into STRICT	nr_minuto_Intervalo_w
			from	agenda
			where	cd_agenda = cd_agenda_w;

			select	ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(clock_timestamp(), coalesce(hr_agenda_w, '00:00'))
			into STRICT	hr_inicio_w
			;

			select	count(*)
			into STRICT	qt_agenda_w
			from	agenda_paciente where		cd_agenda	= cd_agenda_w
			and ( 
              clock_timestamp()  BETWEEN TIMEZONE_UTILS.startOfDay(dt_agenda, TIMEZONE_UTILS.getBaseLineTimeZone()) 
              and TIMEZONE_UTILS.endOfDay(dt_agenda, TIMEZONE_UTILS.getBaseLineTimeZone())
            )
			and		hr_inicio	= hr_inicio_w
			and		ie_status_agenda = 'N' LIMIT 1;

			if (qt_agenda_w > 0) then
				select	max(hr_inicio)
				into STRICT	dt_ultima_agenda_w
				from	agenda_paciente
				where	cd_agenda	= cd_agenda_w
				and ( 
              clock_timestamp()  BETWEEN TIMEZONE_UTILS.startOfDay(dt_agenda, TIMEZONE_UTILS.getBaseLineTimeZone()) 
              and TIMEZONE_UTILS.endOfDay(dt_agenda, TIMEZONE_UTILS.getBaseLineTimeZone())
              )
				and		ie_status_agenda = 'N';

				select	dt_ultima_agenda_w + 1440/1439 /*pend tec*/
				into STRICT	hr_inicio_w
				;
			end if;

			
	 		insert into agenda_paciente(
				cd_agenda, dt_agenda, hr_inicio, cd_pessoa_fisica, nm_paciente,
				dt_nascimento_pac, qt_idade_paciente, qt_peso, nr_telefone, qt_altura_cm,
				qt_idade_meses, dt_agendamento, nm_usuario_orig,
				cd_convenio, ds_observacao,
				cd_procedimento, ie_origem_proced,
				nr_minuto_duracao, nm_usuario, dt_atualizacao,
				ie_status_agenda, ie_ortese_protese, ie_cdi,
				ie_uti, ie_banco_sangue, ie_serv_especial,
				ie_leito, ie_anestesia, nr_sequencia,
				ie_equipamento, ie_autorizacao, ie_video,nr_seq_proc_interno)
			values (cd_agenda_w, ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp()), hr_inicio_w, cd_pessoa_fisica_w, 
				substr(obter_nome_pf(cd_pessoa_fisica_w),1,60),
				obter_dados_pf(cd_pessoa_fisica_w,'DN'), obter_dados_pf(cd_pessoa_fisica_w,'I') , obter_dados_pf(cd_pessoa_fisica_w,'KG'), obter_fone_pac_agenda(cd_pessoa_fisica_w), obter_dados_pf(cd_pessoa_fisica_w,'AL'), 
				substr(obter_idade(obter_dados_pf(cd_pessoa_fisica_w,'DN'),clock_timestamp(),'MM'),1,3), clock_timestamp(), nm_usuario_p,
				cd_convenio_w, 
				--substr('Prescricao: '|| nr_prescricao_p || ' Atendimento: '|| nr_atendimento_w || ' ' || ds_dados_clinicos_w || ' ' || ds_observacao_w ,1,2000),
				substr(WHEB_MENSAGEM_PCK.get_texto(457121,'nr_prescricao_p='|| nr_prescricao_p ||';nr_atendimento_w='|| nr_atendimento_w ||';ds_dados_clinicos_w='|| ds_dados_clinicos_w||';ds_observacao_w='|| ds_observacao_w),1,2000),
				cd_procedimento_w, ie_origem_proced_w,
				nr_minuto_Intervalo_w, nm_usuario_p, clock_timestamp(),
				'N', 'N', 'N', 'N', 'N', 'N', 'S', 'N',
				nr_sequencia_w, 'N', 'L', 'N',nr_seq_proc_interno_w);
				if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
			end;
		end loop;
		close c02;
		end;
	end loop;
	close c01;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_agenda_prescricao ( nr_prescricao_p bigint, nm_usuario_p text) FROM PUBLIC;

