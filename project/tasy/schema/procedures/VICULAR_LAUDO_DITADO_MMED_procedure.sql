-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE vicular_laudo_ditado_mmed (nm_usuario_p text, ds_lista_exames_p text, nm_arquivo_p text) AS $body$
DECLARE


ds_lista_w                 varchar(2000);
qt_existe_virgula_w        bigint;
tam_lista_w                bigint;
ie_pos_virgula_w           bigint;
nr_seq_proced_w            bigint;
nr_seq_interno_w           bigint;
nr_prescricao_w            bigint;
nr_sequencia_prescricao_w  bigint;
qt_existe_ditado_w         bigint;



BEGIN
  ds_lista_w := ds_lista_exames_p;

  SELECT position(',' in ds_lista_w)
  INTO STRICT   qt_existe_virgula_w
;

  IF (qt_existe_virgula_w = 0) THEN
    ds_lista_w := ds_lista_w || ',';
  END IF;

  IF (ds_lista_w IS NOT NULL AND ds_lista_w::text <> '') THEN
  BEGIN
    WHILE(ds_lista_w IS NOT NULL AND ds_lista_w::text <> '') LOOP
    BEGIN
      tam_lista_w      := LENGTH(ds_lista_w);
      ie_pos_virgula_w := position(',' in ds_lista_w);

      IF (ie_pos_virgula_w <> 0) THEN
        nr_seq_interno_w := (SUBSTR(ds_lista_w, 1, (ie_pos_virgula_w - 1)))::numeric;
        ds_lista_w       := SUBSTR(ds_lista_w, (ie_pos_virgula_w + 1), tam_lista_w);
      END IF;

      SELECT MAX(a.nr_prescricao),
             MAX(a.nr_sequencia)
      INTO STRICT   nr_prescricao_w,
             nr_sequencia_prescricao_w
      FROM   prescr_procedimento a
      WHERE  a.nr_seq_interno = nr_seq_interno_w;

      IF (nr_prescricao_w > 0)
        AND (nr_sequencia_prescricao_w > 0) THEN
        SELECT COUNT(*)
        INTO STRICT   qt_existe_ditado_w
        FROM   prescr_proc_ditado
        WHERE  nr_seq_prescr_proc  =  nr_seq_interno_w;

        IF (qt_existe_ditado_w = 0) THEN
          INSERT INTO prescr_proc_ditado(
              nr_sequencia,
              nr_seq_prescr_proc,
              dt_atualizacao,
              nm_usuario,
              ds_arquivo)
          VALUES (
              nextval('prescr_proc_ditado_seq'),
              nr_seq_interno_w,
              clock_timestamp(),
              nm_usuario_p,
              nm_arquivo_p);

          CALL gravar_auditoria_mmed(nr_prescricao_w, nr_sequencia_prescricao_w, nm_usuario_p, 1, NULL);

          UPDATE  prescr_procedimento
          SET     ie_status_execucao = '25',
                  dt_atualizacao = clock_timestamp(),
                  nm_usuario     = nm_usuario_p
          WHERE   nr_seq_interno   = nr_seq_interno_w
          AND     ie_status_execucao < '25';
        ELSE
          UPDATE prescr_proc_ditado
          SET    dt_atualizacao = clock_timestamp(),
                 nm_usuario = nm_usuario_p,
                 ds_arquivo = nm_arquivo_p
          WHERE nr_seq_prescr_proc = nr_seq_interno_w;

          CALL gravar_auditoria_mmed(nr_prescricao_w, nr_sequencia_prescricao_w, nm_usuario_p, 1, NULL);
        END IF;
      END IF;
    END;
  END LOOP;
  END;
  END IF;

  COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vicular_laudo_ditado_mmed (nm_usuario_p text, ds_lista_exames_p text, nm_arquivo_p text) FROM PUBLIC;

