-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE colunas AS (
        cd_material_w        integer,
        cd_unidade_medida_w  varchar(30),
        qt_dose_w            double precision,
        nr_seq_fabric_w      bigint,
        qt_frasco_disp_w     double precision,
        qt_perda_fornec_w    double precision
    );


CREATE OR REPLACE PROCEDURE rep_verificar_apresent_medic ( nr_prescricao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_justificativa_p text DEFAULT NULL) AS $body$
DECLARE


/* vetor */

    TYPE vetor IS
        TABLE OF colunas INDEX BY integer;
    vetor_w                      vetor;
    vetor_aux_w                  vetor;
    vetor_fornecedor_w           vetor;
    dt_atualizacao_w             timestamp := clock_timestamp();
    cd_material_w                integer;
    cd_material_regra_w          integer;
    cd_unid_med_prescr_w         varchar(30);
    qt_dose_prescricao_w         double precision;
    qt_unitaria_w                double precision;
    qt_total_dispensar_w         double precision;
    qt_conversao_dose_w          double precision;
    ds_orientacao_uso_w          varchar(255);
    ds_horarios_w                prescr_material.ds_horarios%TYPE;
    ds_recomendacao_w            varchar(4000);
    ie_via_aplicacao_w           varchar(5);
    ie_gerar_diluicao_w          varchar(5);
    ie_define_disp_w             varchar(5);
    nr_seq_material_w            bigint;
    nr_seq_diluicao_w            bigint;
    nr_seq_fabric_w              bigint;
    nr_agrupamento_w             double precision;
    cd_unid_med_consumo_w        varchar(30);
    cd_intervalo_w               varchar(7);
    qt_minimo_multiplo_solic_w   double precision;
    qt_min_aplicacao_w           smallint;
    qt_hora_aplicacao_w          smallint;
    ie_bomba_infusao_w           varchar(1);
    cd_intervalo_ww              varchar(7);
    nr_ocorrencia_w              double precision;
    ie_gerar_horarios            varchar(1);
    dt_prescricao_w              timestamp;
    qt_dias_util_w               smallint;
    qt_dias_util_ww              smallint;
    nr_seq_interno_w             bigint;
    ie_se_necessario_w           varchar(1);
    ie_urgencia_w                varchar(1);
    ie_aplic_bolus_w             varchar(1);
    ie_aplic_lenta_w             varchar(1);
    ds_observacao_w              prescr_material.ds_observacao%TYPE;
    ie_consignado_w              varchar(1);
    cd_fornecedor_w              varchar(14);
    ie_tipo_material_w           varchar(14);
    nr_seq_ficha_tecnica_w       bigint;
    qt_dose_total_prescr_w       double precision;
    qt_dose_regra_w              double precision;
    qt_dose_total_aux_w          double precision;
    qt_dose_total_aux_ww         double precision;
    cont_w                       bigint;
    qt_registros_vetor_w         bigint;
    qt_controle_w                bigint := 0;
    qt_controle_ww               bigint := 0;
    qt_controle_www              bigint := 0;
    qt_controle_wwww             bigint := 0;
    qt_perda_w                   double precision;
    qt_perda_2w                  double precision;
    qt_desconto_w                double precision;
    qt_a_lancar_w                double precision;
    qt_perda_final_w             double precision;
    qt_perda_final_2w            double precision;
    pr_desconto_w                double precision;
    qt_mat_vetor_w               double precision;
    x                            bigint := 0;
    i                            bigint := 0;
    k                            bigint := 0;
    y                            bigint := 0;
    cd_mat_vetor_w               bigint;
    ie_reg_w                     bigint;
    nr_seq_medic_w               bigint;
    cd_unidade_medida_consumo_w  varchar(30);
    nr_seq_via_acesso_w          bigint;
    ie_fabricante_w              varchar(5);
    nr_seq_fabric_melhor_w       bigint;
    qt_fornec_w                  bigint;
    qt_menor_perda_w             double precision;
    qt_menor_frasco_w            double precision;
    qt_frasco_perda_zero_w       double precision;
    qt_frasco_disp_w             bigint;
    ie_posicao_ultimo_w          bigint;
    ie_item_superior_w           varchar(10);
    cd_classe_w                  bigint;
    cd_subgrupo_w                bigint;
    qt_medic_w                   bigint;
    ie_pre_medicacao_w           varchar(10);
    ie_agrupador_oncologia_w     smallint;
    nr_seq_atendimento_w         bigint;
    ie_regra_disp_w              varchar(1);
    qt_dose_especial_w           double precision;
    qt_material_w                double precision;
    ds_dose_diferenciada_w       varchar(50);
    ie_origem_inf_w              varchar(1);
    ds_erro_w                    varchar(4000);
    ds_justificativa_w           varchar(4000);
    qt_dias_solicitado_w         smallint;
    ie_objetivo_w                varchar(1);
    cd_microorganismo_cih_w      bigint;
    cd_amostra_cih_w             bigint;
    ie_origem_infeccao_w         varchar(1);
    cd_topografia_cih_w          bigint;
    ie_indicacao_w               varchar(1);
    nr_seq_fabric_princ_w        bigint;
    cd_funcao_ativa_w            numeric(30);
    ie_acm_w                     varchar(1);
    nr_seq_cpoe_w                prescr_material.nr_seq_mat_cpoe%TYPE;
    hr_prim_horario_w            prescr_material.hr_prim_horario%TYPE;
    dt_inicio_medic_w            prescr_material.dt_inicio_medic%TYPE;
    sql_w                        varchar(600);
    qt_mat_vetor_aux_w           double precision;
    c01 CURSOR FOR
    SELECT
        a.cd_material,
        a.nr_sequencia,
        a.cd_unidade_medida_dose,
        a.qt_dose,
		--b.ds_orientacao_uso,
        a.ie_via_aplicacao,
        substr(obter_dados_material_estab(a.cd_material, cd_estabelecimento_p, 'UMS'), 1, 30) cd_unidade_medida_consumo,
        b.qt_minimo_multiplo_solic,
        a.nr_agrupamento,
        substr(a.ds_observacao, 1, 4000),
		--substr(a.ds_observacao,1,4000),
        a.qt_min_aplicacao,
        a.qt_hora_aplicacao,
        a.ie_bomba_infusao,
        coalesce(a.cd_intervalo, obter_interv_prescr_padrao(cd_estabelecimento_p)),
        a.qt_dias_util,
        a.nr_seq_interno,
        a.ie_se_necessario,
        a.ie_urgencia,
        a.ie_aplic_bolus,
        a.ie_aplic_lenta,
        b.ie_tipo_material,
        a.qt_dose,
        b.nr_seq_ficha_tecnica,
        a.nr_seq_via_acesso,
        a.ie_item_superior,
        b.cd_classe_material,
        coalesce(substr(obter_tipo_medic_soluc(a.nr_seq_atendimento, a.nr_sequencia_solucao), 1, 10), a.ie_pre_medicacao),
        a.ie_agrupador,
        a.nr_seq_atendimento,
        a.ds_horarios,
        a.nr_ocorrencia,
        a.ie_origem_inf,
        a.ds_justificativa,
        a.qt_dias_solicitado,
        a.ie_objetivo,
        a.cd_microorganismo_cih,
        a.cd_amostra_cih,
        a.ie_origem_infeccao,
        a.cd_topografia_cih,
        a.ie_indicacao,
        b.nr_seq_fabric,
        a.nr_seq_mat_cpoe,
        a.hr_prim_horario,
        a.dt_inicio_medic
    FROM
        material         b,
        prescr_material  a
    WHERE
            a.nr_prescricao = nr_prescricao_p
        AND b.ie_tipo_material = 6
        AND a.cd_material = b.cd_material
        AND a.ie_agrupador = 1
    ORDER BY
        nr_sequencia;

    c02 CURSOR FOR
    SELECT
        b.cd_material,
        obter_conversao_unid_med_onc(b.cd_material, cd_unid_med_prescr_w)                                  qt_dose,
        substr(obter_dados_material_estab(b.cd_material, cd_estabelecimento_p, 'UMS'), 1, 30)              cd_unidade_medida_consumo
    FROM
        material_estab       c,
        material             b,
        medic_ficha_tecnica  a
    WHERE
            b.nr_seq_ficha_tecnica = a.nr_sequencia
        AND c.cd_material = b.cd_material
        AND b.ie_tipo_material <> 6
        AND c.cd_estabelecimento = cd_estabelecimento_p
        AND a.nr_sequencia = nr_seq_ficha_tecnica_w
        AND obter_se_via_adm(b.cd_material, ie_via_aplicacao_w) = 'S'
        AND ( ( b.ie_tipo_material = 3  AND  ie_define_disp_w = 'G' )
              OR ( ie_define_disp_w <> 'G' ) )
        AND ( ( b.cd_material <> cd_material_w )
              OR ( ie_define_disp_w = 'S' ) )
        AND ( ( coalesce(ie_fabricante_w, 'N') = 'S' )
              OR ( b.nr_seq_fabric = nr_seq_fabric_w ) )
        AND coalesce(obter_conversao_unid_med_onc(b.cd_material, cd_unid_med_prescr_w), 0) > 0
        AND coalesce(b.ie_situacao, 'A') = 'A'
        AND coalesce(c.ie_prescricao, 'S') = 'S'
    ORDER BY
        qt_dose DESC;

    c03 CURSOR FOR
    SELECT DISTINCT
        b.nr_seq_fabric
    FROM
        material_estab       c,
        material             b,
        medic_ficha_tecnica  a
    WHERE
            b.nr_seq_ficha_tecnica = a.nr_sequencia
        AND c.cd_material = b.cd_material
        AND c.cd_estabelecimento = cd_estabelecimento_p
        AND a.nr_sequencia = nr_seq_ficha_tecnica_w
        AND obter_se_via_adm(b.cd_material, ie_via_aplicacao_w) = 'S'
        AND coalesce(obter_conversao_unid_med_onc(b.cd_material, cd_unid_med_prescr_w), 0) > 0
        AND (b.nr_seq_fabric IS NOT NULL AND b.nr_seq_fabric::text <> '')
        AND ( ( b.cd_material <> cd_material_w )
              OR ( ie_define_disp_w = 'S' ) )
        AND b.ie_situacao = 'A'
        AND c.ie_prescricao = 'S'
    ORDER BY
        b.nr_seq_fabric;

    c04 CURSOR FOR
    SELECT
        cd_material,
        nr_sequencia,
        cd_intervalo,
        ie_via_aplicacao,
        qt_unitaria,
        qt_dose_especial,
        nr_ocorrencia,
        ds_dose_diferenciada,
        ie_origem_inf,
        cd_unidade_medida_dose,
        qt_dias_util,
        qt_material,
        coalesce(ie_acm, 'N'),
        coalesce(ie_se_necessario, 'N')
    FROM
        prescr_material
    WHERE
            nr_prescricao = nr_prescricao_p
        AND ie_agrupador = 1
        AND (cd_mat_sem_apresent IS NOT NULL AND cd_mat_sem_apresent::text <> '')
    ORDER BY
        nr_sequencia;


BEGIN
    ie_define_disp_w := obter_param_usuario(924, 740, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_define_disp_w);
    cd_funcao_ativa_w := coalesce(obter_funcao_ativa, 0);
    OPEN c01;
    LOOP
        FETCH c01 INTO
            cd_material_w,
            nr_seq_material_w,
            cd_unid_med_prescr_w,
            qt_dose_prescricao_w,
	--ds_orientacao_uso_w,
            ie_via_aplicacao_w,
            cd_unid_med_consumo_w,
            qt_minimo_multiplo_solic_w,
            nr_agrupamento_w,
            ds_recomendacao_w,
	--ds_observacao_w,
            qt_min_aplicacao_w,
            qt_hora_aplicacao_w,
            ie_bomba_infusao_w,
            cd_intervalo_ww,
            qt_dias_util_w,
            nr_seq_interno_w,
            ie_se_necessario_w,
            ie_urgencia_w,
            ie_aplic_bolus_w,
            ie_aplic_lenta_w,
            ie_tipo_material_w,
            qt_dose_total_prescr_w,
            nr_seq_ficha_tecnica_w,
            nr_seq_via_acesso_w,
            ie_item_superior_w,
            cd_classe_w,
            ie_pre_medicacao_w,
            ie_agrupador_oncologia_w,
            nr_seq_atendimento_w,
            ds_horarios_w,
            nr_ocorrencia_w,
            ie_origem_inf_w,
            ds_justificativa_w,
            qt_dias_solicitado_w,
            ie_objetivo_w,
            cd_microorganismo_cih_w,
            cd_amostra_cih_w,
            ie_origem_infeccao_w,
            cd_topografia_cih_w,
            ie_indicacao_w,
            nr_seq_fabric_princ_w,
            nr_seq_cpoe_w,
            hr_prim_horario_w,
            dt_inicio_medic_w;

        EXIT WHEN NOT FOUND; /* apply on c01 */
        BEGIN
            IF ( ie_tipo_material_w = 6 ) THEN
                DELETE FROM prescr_material
                WHERE
                        ie_agrupador = 1
                    AND nr_sequencia = nr_seq_material_w
                    AND nr_prescricao = nr_prescricao_p;

            END IF;

            qt_dias_util_ww := qt_dias_util_w;
            IF ( coalesce(qt_dias_util_w::text, '') = '' ) OR ( qt_dias_util_w < 1 ) THEN
                qt_dias_util_ww := 1;
            END IF;

            IF ( cd_intervalo_ww = '' ) OR ( coalesce(cd_intervalo_ww::text, '') = '' ) THEN
                cd_intervalo_ww := cd_intervalo_w;
            END IF;

            SELECT
                coalesce(COUNT(*), 0)
            INTO STRICT cont_w
            FROM
                material b
            WHERE
                b.nr_seq_ficha_tecnica = nr_seq_ficha_tecnica_w;

            IF ( cont_w > 0 )
                AND ( ( ie_tipo_material_w = 6 ) OR ( ie_define_disp_w = 'S' ) )
            THEN
                SELECT
                    MAX(ie_fabricante_dist)
                INTO STRICT ie_fabricante_w
                FROM
                    material
                WHERE
                    cd_material = cd_material_w;

                SELECT
                    coalesce(MAX(pr_desconto), 0),
                    coalesce(coalesce(ie_fabricante_w, MAX(ie_fabricante)), 'N')
                INTO STRICT
                    pr_desconto_w,
                    ie_fabricante_w
                FROM
                    material_sem_apresentacao
                WHERE
                    cd_material = cd_material_w;

                IF ( coalesce(nr_seq_fabric_princ_w::text, '') = '' ) THEN
                    ie_fabricante_w := 'S';
                END IF;
                IF ( ie_fabricante_w = 'N' ) THEN
                    qt_fornec_w := 0;
                    ie_reg_w := 0;
                    OPEN c03;
                    LOOP
                        FETCH c03 INTO nr_seq_fabric_w;
                        EXIT WHEN NOT FOUND; /* apply on c03 */
                        cont_w := 0;
                        vetor_w.DELETE;
                        OPEN c02;
                        LOOP
                            FETCH c02 INTO
                                cd_material_regra_w,
                                qt_dose_regra_w,
                                cd_unidade_medida_consumo_w;
                            EXIT WHEN NOT FOUND; /* apply on c02 */
                            vetor_w[cont_w].cd_material_w := cd_material_regra_w;
                            vetor_w[cont_w].qt_dose_w := qt_dose_regra_w;
                            vetor_w[cont_w].cd_unidade_medida_w := cd_unidade_medida_consumo_w;
                            cont_w := cont_w + 1;
                        END LOOP;

                        CLOSE c02;
                        qt_dose_total_aux_w := qt_dose_total_prescr_w;
				--- Inicio MD1
                        BEGIN
                            sql_w := 'CALL calc_qt_desc_apresent_med_md(:1, :2) INTO :qt_desconto_w';
                            EXECUTE sql_w
                                USING IN pr_desconto_w, IN qt_dose_total_aux_w, OUT qt_desconto_w;
                        EXCEPTION
                            WHEN OTHERS THEN
                                qt_desconto_w := NULL;
                        END;
 				--- Fim MD1
                        qt_controle_w := 0;
                        WHILE( qt_dose_total_aux_w > 0 )
                            AND ( qt_controle_w < 1000 )
                        LOOP
                            qt_registros_vetor_w := vetor_w.count - 1;
                            qt_controle_ww := 0;
                            x := -1;
                            WHILE( x < qt_registros_vetor_w )
                                AND ( qt_dose_total_aux_w > 0 )
                                AND ( qt_controle_ww < 1000 )
                            LOOP
                                x := x + 1;
                                qt_controle_ww := qt_controle_ww + 1;
                                IF ( ( qt_dose_total_aux_w - vetor_w[x].qt_dose_w ) >= 0 ) THEN
                                    BEGIN
                                        sql_w := 'begin calc_dados_med_apresen_med_md (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12); end;';
                                        EXECUTE sql_w
                                            USING IN OUT qt_dose_total_aux_w, IN vetor_w[x].qt_dose_w, OUT vetor_aux_w(ie_reg_w).
                                            cd_material_w, IN vetor_w[x].cd_material_w, OUT vetor_aux_w[ie_reg_w].qt_dose_w, OUT vetor_aux_w[
                                            ie_reg_w].cd_unidade_medida_w, IN vetor_w[x].cd_unidade_medida_w, OUT vetor_aux_w(ie_reg_w).
                                            nr_seq_fabric_w, IN nr_seq_fabric_w, IN OUT ie_reg_w, IN OUT x, IN 1;

                                    EXCEPTION
                                        WHEN OTHERS THEN
                                            qt_dose_total_aux_w := NULL;
                                            ie_reg_w := NULL;
                                            x := NULL;
                                    END;
                                ELSIF ( qt_dose_total_aux_w <= qt_desconto_w ) THEN
                                    qt_dose_total_aux_w := 0;
                                ELSIF ( qt_registros_vetor_w = x ) THEN
                                    BEGIN
                                        sql_w := 'begin calc_dados_med_verific_med_md (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11); end;';
                                        EXECUTE sql_w
                                            USING IN OUT qt_dose_total_aux_w, IN vetor_w[x].qt_dose_w, OUT vetor_aux_w[ie_reg_w].cd_material_w,
                                            IN vetor_w[x].cd_material_w, OUT vetor_aux_w[ie_reg_w].qt_dose_w, OUT vetor_aux_w(ie_reg_w).
                                            cd_unidade_medida_w, IN vetor_w[x].cd_unidade_medida_w, OUT vetor_aux_w[ie_reg_w].nr_seq_fabric_w,
                                            IN nr_seq_fabric_w, IN OUT ie_reg_w, IN 1;

                                    EXCEPTION
                                        WHEN OTHERS THEN
                                            qt_dose_total_aux_w := NULL;
                                            ie_reg_w := NULL;
                                    END;
                                ELSIF ( ( qt_dose_total_aux_w - vetor_w[x].qt_dose_w ) < 0 ) THEN
                                    BEGIN
                                        sql_w := 'CALL calc_qt_perda_apresent_med_md(:1, :2) INTO :qt_perda_w';
                                        EXECUTE sql_w
                                            USING IN qt_dose_total_aux_w, IN vetor_w[x].qt_dose_w, OUT qt_perda_w;
                                    EXCEPTION
                                        WHEN OTHERS THEN
                                            qt_perda_w := NULL;
                                    END;

                                    qt_dose_total_aux_ww := qt_dose_total_aux_w;
                                    qt_perda_final_w := 0;
                                    qt_controle_wwww := 0;
                                    WHILE( qt_dose_total_aux_ww > 0 )
                                        AND ( qt_controle_wwww < 1000 )
                                    LOOP
                                        qt_controle_www := 0;
                                        i := -1;
                                        WHILE( i < qt_registros_vetor_w )
                                            AND ( qt_dose_total_aux_ww > 0 )
                                            AND ( qt_controle_www < 1000 )
                                        LOOP
                                            i := i + 1;
                                            qt_controle_www := qt_controle_www + 1;
                                            BEGIN
                                                sql_w := 'begin calc_qt_perda_fin_apr_med_md (:1, :2, :3, :4, :5); end;';
                                                EXECUTE sql_w
                                                    USING IN OUT qt_dose_total_aux_ww, IN vetor_w[i].qt_dose_w, OUT qt_perda_final_w,
                                                    IN qt_registros_vetor_w, IN OUT i;

                                            EXCEPTION
                                                WHEN OTHERS THEN
                                                    qt_dose_total_aux_ww := NULL;
                                                    qt_perda_final_w := NULL;
                                                    i := NULL;
                                            END;

                                        END LOOP;

                                        qt_controle_wwww := qt_controle_wwww + 1;
                                    END LOOP;

                                    BEGIN
                                        sql_w := 'CALL calc_qt_perda_apresent_med_md(:1, :2) INTO :qt_perda_2w';
                                        EXECUTE sql_w
                                            USING IN qt_dose_total_aux_w, IN vetor_w[x].qt_dose_w, OUT qt_perda_2w;
                                    EXCEPTION
                                        WHEN OTHERS THEN
                                            qt_perda_2w := NULL;
                                    END;

                                    qt_dose_total_aux_ww := qt_dose_total_aux_w;
                                    qt_perda_final_2w := 0;
                                    qt_controle_wwww := 0;
                                    WHILE( qt_dose_total_aux_ww > 0 )
                                        AND ( qt_controle_wwww < 1000 )
                                    LOOP
                                        qt_controle_www := 0;
                                        i := -1;
                                        WHILE( i < qt_registros_vetor_w )
                                            AND ( qt_dose_total_aux_ww > 0 )
                                            AND ( qt_controle_www < 1000 )
                                        LOOP
                                            i := i + 1;
                                            qt_controle_www := qt_controle_www + 1;
                                            BEGIN
                                                sql_w := 'begin calc_dose_tot_aux_apre_med_md (:1, :2, :3, :4); end;';
                                                EXECUTE sql_w
                                                    USING IN OUT qt_dose_total_aux_ww, IN vetor_w[i].qt_dose_w, OUT qt_perda_final_2w,
                                                    IN OUT i;

                                            EXCEPTION
                                                WHEN OTHERS THEN
                                                    qt_dose_total_aux_ww := NULL;
                                                    qt_perda_final_2w := NULL;
                                                    i := NULL;
                                            END;

                                        END LOOP;

                                        qt_controle_wwww := qt_controle_wwww + 1;
                                    END LOOP;

                                    IF ( qt_dose_total_aux_ww < qt_desconto_w ) THEN
                                        NULL;
                                    ELSIF ( qt_perda_w >= qt_perda_final_w ) THEN
                                        BEGIN
                                            sql_w := 'begin calc_med_apresent_medic_md (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11); end;';
                                            EXECUTE sql_w
                                                USING OUT vetor_aux_w[ie_reg_w].cd_material_w, IN vetor_w[x].cd_material_w, OUT vetor_aux_w[
                                                ie_reg_w].qt_dose_w, IN vetor_w[x].qt_dose_w, OUT vetor_aux_w[ie_reg_w].cd_unidade_medida_w,
                                                IN vetor_w[x].cd_unidade_medida_w, OUT vetor_aux_w[ie_reg_w].nr_seq_fabric_w, IN OUT
                                                nr_seq_fabric_w, OUT qt_dose_total_aux_w, IN OUT ie_reg_w, IN 1;

                                        EXCEPTION
                                            WHEN OTHERS THEN
                                               qt_dose_total_aux_w := NULL;
                                                nr_seq_fabric_w := NULL;
                                                ie_reg_w := NULL;
                                        END;
                                    END IF;

                                END IF;
						--- Fim MD2
                            END LOOP;

                            qt_controle_w := qt_controle_w + 1;
                        END LOOP;

				-- inserir os itens totais no vetor de fornecedores.
                        k := -1;
                        qt_mat_vetor_w := 0;
                        qt_frasco_disp_w := 0;
				--- Inicio MD3
                        WHILE( k < vetor_aux_w.count - 1 ) LOOP
                            k := k + 1;
                            BEGIN
                                sql_w := 'begin calc_qt_frasco_disp_medic_md (:1, :2, :3, :4, :5); end;';
                                EXECUTE sql_w
                                    USING IN vetor_aux_w[k].nr_seq_fabric_w, IN nr_seq_fabric_w, IN OUT qt_mat_vetor_w, IN vetor_aux_w[k].qt_dose_w,
                                    IN OUT qt_frasco_disp_w;

                            EXCEPTION
                                WHEN OTHERS THEN
                                    qt_mat_vetor_w := NULL;
                                    qt_frasco_disp_w := NULL;
                             END;

                        END LOOP;

                        BEGIN
                            sql_w := 'begin calc_dados_fornec_medic_md (:1, :2, :3, :4, :5, :6, :7, :8); end;';
                            EXECUTE sql_w
                                USING IN nr_seq_fabric_w, IN qt_frasco_disp_w, IN qt_dose_total_prescr_w, IN qt_mat_vetor_w, OUT vetor_fornecedor_w[
                                qt_fornec_w].nr_seq_fabric_w, OUT vetor_fornecedor_w[qt_fornec_w].qt_frasco_disp_w, OUT vetor_fornecedor_w[
                                qt_fornec_w].qt_perda_fornec_w, IN OUT qt_fornec_w;

                        EXCEPTION
                            WHEN OTHERS THEN
                                qt_fornec_w := NULL;
                        END;


  				--- Fim MD3
                    END LOOP;

                    CLOSE c03;

			-- descobrir qual fornecedor tem a menor perda e a menor quantidade de frasco dispensados.
                    k := -1;
                    qt_menor_frasco_w := 99999;
                    qt_menor_perda_w := -99999;
                    qt_frasco_perda_zero_w := 99999;
                    WHILE( k < vetor_fornecedor_w.count - 1 ) LOOP
                        k := k + 1;
                        IF ( vetor_fornecedor_w[k].qt_perda_fornec_w >= qt_menor_perda_w  AND  vetor_fornecedor_w[k].qt_frasco_disp_w <= qt_menor_frasco_w ) OR ( vetor_fornecedor_w[k].qt_perda_fornec_w <> 0  AND  vetor_fornecedor_w[k].qt_perda_fornec_w > qt_menor_perda_w ) OR ( vetor_fornecedor_w[k].qt_perda_fornec_w = 0  AND  vetor_fornecedor_w[k].qt_frasco_disp_w <= qt_frasco_perda_zero_w ) THEN
                            nr_seq_fabric_melhor_w := vetor_fornecedor_w[k].nr_seq_fabric_w;
                            qt_menor_perda_w := vetor_fornecedor_w[k].qt_perda_fornec_w;
                            qt_menor_frasco_w := vetor_fornecedor_w[k].qt_frasco_disp_w;
                            IF ( vetor_fornecedor_w[k].qt_perda_fornec_w = 0 ) THEN
                                qt_frasco_perda_zero_w := vetor_fornecedor_w[k].qt_frasco_disp_w;
                            END IF;

                        END IF;

                    END LOOP;

                    vetor_fornecedor_w.DELETE;
                    k := -1;
                    y := -1;
                    cd_mat_vetor_w := 0;
                    qt_mat_vetor_w := 0;
                    qt_a_lancar_w := qt_dose_total_prescr_w;
                    ie_gerar_diluicao_w := 'S';
                    ie_posicao_ultimo_w := 0;
                    WHILE( k < vetor_aux_w.count - 1 ) LOOP
                        k := k + 1;
				--inserir somente os itens do melhor fabricante.
                        IF ( vetor_aux_w[k].nr_seq_fabric_w = nr_seq_fabric_melhor_w ) THEN
                            IF
                                ( ( cd_mat_vetor_w = vetor_aux_w[k].cd_material_w ) OR ( cd_mat_vetor_w = 0 ) )
                                AND ( vetor_aux_w.count > 1 )
                            THEN
						--- Inicio MD4
                                BEGIN
                                    sql_w := 'CALL obter_mat_rep_apresent_med_md(:1, :2) INTO :qt_mat_vetor_aux_w';
                                    EXECUTE sql_w
                                        USING IN qt_mat_vetor_w, IN vetor_aux_w[k].qt_dose_w, OUT qt_mat_vetor_aux_w;
                                EXCEPTION
                                    WHEN OTHERS THEN
                                        qt_mat_vetor_aux_w := NULL;
                                END;

                                qt_mat_vetor_w := qt_mat_vetor_aux_w;
						--- Fim MD4
                                qt_unitaria_w := vetor_aux_w[k].qt_dose_w;
                                cd_mat_vetor_w := vetor_aux_w[k].cd_material_w;
                                qt_conversao_dose_w := vetor_aux_w[k].qt_dose_w;
                                cd_unidade_medida_consumo_w := vetor_aux_w[k].cd_unidade_medida_w;
                            ELSE
						--- Inicio MD5
                                BEGIN
                                    sql_w := 'begin calc_qt_unit_apresent_med_md (:1, :2, :3, :4, :5); end;';
                                    EXECUTE sql_w
                                        USING IN 1, IN OUT qt_a_lancar_w, IN OUT qt_mat_vetor_w, OUT qt_total_dispensar_w, IN OUT qt_unitaria_w;

                                EXCEPTION
                                    WHEN OTHERS THEN
                                        qt_a_lancar_w := NULL;
                                        qt_mat_vetor_w := NULL;
                                        qt_total_dispensar_w := NULL;
                                        qt_unitaria_w := NULL;
                                END;

  						--- Fim MD5
                                SELECT
                                    coalesce(MAX(nr_sequencia), 0) + 1
                                INTO STRICT nr_seq_medic_w
                                FROM
                                    prescr_material
                                WHERE
                                    nr_prescricao = nr_prescricao_p;

                                SELECT
                                    coalesce(MAX(ie_consignado), 'X')
                                INTO STRICT ie_consignado_w
                                FROM
                                    material
                                WHERE
                                    cd_material = cd_mat_vetor_w;

                                IF ( ie_consignado_w = '1' ) THEN
                                    SELECT
                                        coalesce(MAX(a.cd_fornecedor), 'X')
                                    INTO STRICT cd_fornecedor_w
                                    FROM
                                        fornecedor_mat_consignado  a,
                                        material                   m
                                    WHERE
                                            a.cd_material = m.cd_material_estoque
                                        AND m.cd_material = cd_mat_vetor_w
                                        AND m.ie_situacao = 'A'
                                        AND a.dt_mesano_referencia = trunc(dt_prescricao_w, 'mm')
                                        AND qt_estoque = (
                                            SELECT
                                                MAX(obter_saldo_estoque_consig(cd_estabelecimento_p, a.cd_fornecedor, a.cd_material,
                                                                               a.cd_local_estoque))
                                            FROM
                                                fornecedor_mat_consignado  a,
                                                material                   m
                                            WHERE
                                                    a.cd_material = m.cd_material_estoque
                                                AND m.cd_material = cd_mat_vetor_w
                                                AND m.ie_situacao = 'A'
                                                AND a.dt_mesano_referencia = trunc(dt_prescricao_w, 'mm')
                                        );

                                    IF ( cd_fornecedor_w = 'X' ) THEN
                                        cd_fornecedor_w := NULL;
                                    END IF;
                                END IF;

                                IF ( coalesce(cd_mat_vetor_w, 0) = '0' ) THEN
                                    cd_mat_vetor_w := vetor_aux_w[k].cd_material_w;
                                END IF;

                                IF ( coalesce(qt_mat_vetor_w, 0) > 0 ) THEN
                                    INSERT INTO prescr_material(
                                        nr_prescricao,
                                        nr_sequencia,
                                        ie_origem_inf,
                                        cd_material,
                                        cd_unidade_medida,
                                        qt_dose,
                                        qt_unitaria,
                                        qt_material,
                                        dt_atualizacao,
                                        nm_usuario,
                                        cd_intervalo,
                                        ds_observacao,
                                        ie_via_aplicacao,
                                        nr_agrupamento,
                                        cd_motivo_baixa,
                                        ie_utiliza_kit,
                                        cd_unidade_medida_dose,
                                        qt_conversao_dose,
                                        ie_urgencia,
                                        nr_ocorrencia,
                                        qt_total_dispensar,
                                        nr_sequencia_diluicao,
                                        ie_medicacao_paciente,
                                        ie_suspenso,
                                        ie_agrupador,
                                        ie_bomba_infusao,
                                        ie_se_necessario,
                                        ie_aplic_bolus,
                                        ie_aplic_lenta,
                                        ie_acm,
                                        qt_min_aplicacao,
                                        qt_hora_aplicacao,
                                        ie_recons_diluente_fixo,
                                        qt_dias_util,
                                        nr_seq_atend_medic,
                                        ie_sem_aprazamento,
                                        cd_fornec_consignado,
                                        nr_seq_material,
                                        nr_seq_atendimento,
                                        cd_mat_sem_apresent,
                                        ie_gerar_diluicao,
                                        nr_seq_via_acesso,
                                        ie_item_superior,
                                        ie_pre_medicacao,
                                        ds_observacao_enf,
                                        ie_agrupador_quimio,
                                        ds_horarios,
                                        nr_seq_mat_cpoe,
                                        hr_prim_horario,
                                        dt_inicio_medic
                                    ) VALUES (
                                        nr_prescricao_p,
                                        nr_seq_medic_w,
                                        ie_origem_inf_w,
                                        cd_mat_vetor_w,
                                        cd_unidade_medida_consumo_w,
                                        qt_mat_vetor_w,
                                        qt_unitaria_w,
                                        qt_unitaria_w,
                                        dt_atualizacao_w,
                                        nm_usuario_p,
                                        cd_intervalo_ww,
                                        ds_recomendacao_w,
                                        ie_via_aplicacao_w,
                                        nr_agrupamento_w,
                                        0,
                                        'N',
                                        cd_unid_med_prescr_w,
                                        qt_conversao_dose_w,
                                        coalesce(ie_urgencia_w, 'N'),
                                        coalesce(nr_ocorrencia_w, 1),
                                        qt_unitaria_w * nr_ocorrencia_w,
                                        nr_seq_diluicao_w,
                                        'N',
                                        'N',
                                        1,
                                        ie_bomba_infusao_w,
                                        coalesce(ie_se_necessario_w, 'N'),
                                        coalesce(ie_aplic_bolus_w, 'N'),
                                        coalesce(ie_aplic_lenta_w, 'N'),
                                        'N',
                                        qt_min_aplicacao_w,
                                        qt_hora_aplicacao_w,
                                        'N',
                                        qt_dias_util_w,
                                        nr_seq_interno_w,
                                        'N',
                                        cd_fornecedor_w,
                                        nr_seq_material_w,
                                        nr_seq_atendimento_w,
                                        cd_material_w,
                                        ie_gerar_diluicao_w,
                                        nr_seq_via_acesso_w,
                                        ie_item_superior_w,
                                        ie_pre_medicacao_w,
                                        ds_justificativa_p
                                        || CASE WHEN coalesce(ds_justificativa_p::text, '') = '' THEN  NULL  ELSE CHR(13)                                                                                  || obter_desc_expressao(728918)                                                                                  || obter_nome_pf(obter_dados_usuario_opcao(nm_usuario_p,                                                                                  'C')) END ,
                                        ie_agrupador_oncologia_w,
                                        ds_horarios_w,
                                        nr_seq_cpoe_w,
                                        hr_prim_horario_w,
                                        dt_inicio_medic_w
                                    );

                                    CALL gerar_reconst_diluicao(nr_prescricao_p, nr_seq_medic_w, 'A');
                                END IF;

                                ie_gerar_diluicao_w := 'N';
                                cd_mat_vetor_w := vetor_aux_w[k].cd_material_w;
                                qt_mat_vetor_w := vetor_aux_w[k].qt_dose_w;
                                qt_unitaria_w := vetor_aux_w[k].qt_dose_w;
                                qt_conversao_dose_w := vetor_aux_w[k].qt_dose_w;
                                cd_unidade_medida_consumo_w := vetor_aux_w[k].cd_unidade_medida_w;
                                COMMIT;
                            END IF;

                        END IF;

                    END LOOP;
			--- Inicio MD6 verificar se pode ser reaproveitado o tratamento do MD5
                    BEGIN
                        sql_w := 'begin calc_qt_unit_apresent_med_md (:1, :2, :3, :4, :5); end;';
                        EXECUTE sql_w
                            USING IN 2, IN OUT qt_a_lancar_w, IN OUT qt_mat_vetor_w, OUT qt_total_dispensar_w, IN OUT qt_unitaria_w;

                    EXCEPTION
                        WHEN OTHERS THEN
                            qt_a_lancar_w := NULL;
                            qt_mat_vetor_w := NULL;
                            qt_total_dispensar_w := NULL;
                            qt_unitaria_w := NULL;
                    END;

			--- Fim MD6
                    SELECT
                        coalesce(MAX(nr_sequencia), 0) + 1
                    INTO STRICT nr_seq_medic_w
                    FROM
                        prescr_material
                    WHERE
                        nr_prescricao = nr_prescricao_p;

                    SELECT
                        coalesce(MAX(ie_consignado), 'X')
                    INTO STRICT ie_consignado_w
                    FROM
                        material
                    WHERE
                        cd_material = cd_mat_vetor_w;

                    IF ( ie_consignado_w = '1' ) THEN
                        SELECT
                            coalesce(MAX(a.cd_fornecedor), 'X')
                        INTO STRICT cd_fornecedor_w
                        FROM
                            fornecedor_mat_consignado  a,
                            material                   m
                        WHERE
                                a.cd_material = m.cd_material_estoque
                            AND m.cd_material = cd_mat_vetor_w
                            AND m.ie_situacao = 'A'
                            AND a.dt_mesano_referencia = trunc(dt_prescricao_w, 'mm')
                            AND qt_estoque = (
                                SELECT
                                    MAX(obter_saldo_estoque_consig(cd_estabelecimento_p, a.cd_fornecedor, a.cd_material, a.cd_local_estoque))
                                FROM
                                    fornecedor_mat_consignado  a,
                                    material                   m
                                WHERE
                                        a.cd_material = m.cd_material_estoque
                                    AND m.cd_material = cd_mat_vetor_w
                                    AND m.ie_situacao = 'A'
                                    AND a.dt_mesano_referencia = trunc(dt_prescricao_w, 'mm')
                            );

                        IF ( cd_fornecedor_w = 'X' ) THEN
                            cd_fornecedor_w := NULL;
                        END IF;
                    END IF;

                    IF ( coalesce(cd_mat_vetor_w, 0) = 0 )
                        AND ( vetor_aux_w.count > 0 )
                    THEN
                        cd_mat_vetor_w := vetor_aux_w[k].cd_material_w;
                    END IF;

                    SELECT
                        coalesce(COUNT(*), 0)
                    INTO STRICT qt_medic_w
                    FROM
                        prescr_material a
                    WHERE
                            a.nr_prescricao = nr_prescricao_p
                        AND a.ie_item_superior = 'S'
                        AND a.nr_agrupamento = nr_agrupamento_w;

			--Se nao tiver nenhum superior deve-se gerar como superior.
                    IF ( qt_medic_w = 0 ) THEN
                        ie_item_superior_w := 'S';
                    END IF;
                    ie_gerar_diluicao_w := 'N';
                    IF ( ie_item_superior_w = 'S' ) THEN
                        ie_gerar_diluicao_w := 'S';
                    END IF;
                    IF ( cd_mat_vetor_w <> 0 ) THEN
                        INSERT INTO prescr_material(
                            nr_prescricao,
                            nr_sequencia,
                            ie_origem_inf,
                            cd_material,
                            cd_unidade_medida,
                            qt_dose,
                            qt_unitaria,
                            qt_material,
                            dt_atualizacao,
                            nm_usuario,
                            cd_intervalo,
                            ds_observacao,
                            ie_via_aplicacao,
                            nr_agrupamento,
                            cd_motivo_baixa,
                            ie_utiliza_kit,
                            cd_unidade_medida_dose,
                            qt_conversao_dose,
                            ie_urgencia,
                            nr_ocorrencia,
                            qt_total_dispensar,
                            nr_sequencia_diluicao,
                            ie_medicacao_paciente,
                            ie_suspenso,
                            ie_agrupador,
                            ie_bomba_infusao,
                            ie_se_necessario,
                            ie_aplic_bolus,
                            ie_aplic_lenta,
                            ie_acm,
                            qt_min_aplicacao,
                            qt_hora_aplicacao,
                            ie_recons_diluente_fixo,
                            qt_dias_util,
                            nr_seq_atend_medic,
                            ie_sem_aprazamento,
                            cd_fornec_consignado,
                            nr_seq_material,
                            nr_seq_atendimento,
                            cd_mat_sem_apresent,
                            ie_gerar_diluicao,
                            nr_seq_via_acesso,
                            ie_item_superior,
                            ie_pre_medicacao,
                            ds_observacao_enf,
                            ie_agrupador_quimio,
                            ds_horarios,
                            nr_seq_mat_cpoe,
                            hr_prim_horario,
                            dt_inicio_medic
                        ) VALUES (
                            nr_prescricao_p,
                            nr_seq_medic_w,
                            ie_origem_inf_w,
                            cd_mat_vetor_w,
                            cd_unidade_medida_consumo_w,
                            qt_mat_vetor_w,
                            qt_unitaria_w,
                            qt_unitaria_w,
                            dt_atualizacao_w,
                            nm_usuario_p,
                            cd_intervalo_ww,
                            ds_recomendacao_w,
                            ie_via_aplicacao_w,
                            nr_agrupamento_w,
                            0,
                            'N',
                            cd_unid_med_prescr_w,
                            qt_conversao_dose_w,
                            coalesce(ie_urgencia_w, 'N'),
                            coalesce(nr_ocorrencia_w, 1),
                            qt_unitaria_w * nr_ocorrencia_w,
                            nr_seq_diluicao_w,
                            'N',
                            'N',
                            1,
                            ie_bomba_infusao_w,
                            coalesce(ie_se_necessario_w, 'N'),
                            coalesce(ie_aplic_bolus_w, 'N'),
                            coalesce(ie_aplic_lenta_w, 'N'),
                            'N',
                            qt_min_aplicacao_w,
                            qt_hora_aplicacao_w,
                            'N',
                            qt_dias_util_w,
                            nr_seq_interno_w,
                            'N',
                            cd_fornecedor_w,
                            nr_seq_material_w,
                            nr_seq_atendimento_w,
                            cd_material_w,
                            ie_gerar_diluicao_w,
                            nr_seq_via_acesso_w,
                            ie_item_superior_w,
                            ie_pre_medicacao_w,
                            ds_justificativa_p
                            || CASE WHEN coalesce(ds_justificativa_p::text, '') = '' THEN  NULL  ELSE CHR(13)                                                                      || obter_desc_expressao(728918)                                                                      || obter_nome_pf(obter_dados_usuario_opcao(nm_usuario_p, 'C')) END ,
                            ie_agrupador_oncologia_w,
                            ds_horarios_w,
                            nr_seq_cpoe_w,
                            hr_prim_horario_w,
                            dt_inicio_medic_w
                        );

                        CALL gerar_reconst_diluicao(nr_prescricao_p, nr_seq_medic_w, 'A');
                    END IF;

                    vetor_aux_w.DELETE;
                ELSE
                    cont_w := 0;
                    vetor_w.DELETE;
                    OPEN c02;
                    LOOP
                        FETCH c02 INTO
                            cd_material_regra_w,
                            qt_dose_regra_w,
                            cd_unidade_medida_consumo_w;
                        EXIT WHEN NOT FOUND; /* apply on c02 */
                        vetor_w[cont_w].cd_material_w := cd_material_regra_w;
                        vetor_w[cont_w].qt_dose_w := qt_dose_regra_w;
                        vetor_w[cont_w].cd_unidade_medida_w := cd_unidade_medida_consumo_w;
                        cont_w := cont_w + 1;
                    END LOOP;

                    CLOSE c02;
			--- Inicio MD7
                    BEGIN
                        sql_w := 'begin calc_dose_tot_apresent_med_md (:1, :2, :3, :4, :5); end;';
                        EXECUTE sql_w
                            USING OUT qt_dose_total_aux_w, IN qt_dose_total_prescr_w, OUT qt_desconto_w, IN pr_desconto_w, OUT ie_reg_w;

                    EXCEPTION
                        WHEN OTHERS THEN
                            qt_dose_total_aux_w := NULL;
                            qt_desconto_w := NULL;
                            ie_reg_w := NULL;
                    END;

                    WHILE( qt_dose_total_aux_w > 0 )
                        AND ( qt_controle_w < 1000 )
                    LOOP
                        qt_registros_vetor_w := vetor_w.count - 1;
                        qt_controle_ww := 0;
                        x := -1;
                        WHILE( x < qt_registros_vetor_w )
                            AND ( qt_dose_total_aux_w > 0 )
                            AND ( qt_controle_ww < 1000 )
                        LOOP
                            x := x + 1;
                            qt_controle_ww := qt_controle_ww + 1;
					--- Inicio MD8   conferir se ha algo similar com o MD2
                            IF ( ( qt_dose_total_aux_w - vetor_w[x].qt_dose_w ) >= 0 ) THEN
                                BEGIN
                                    sql_w := 'begin calc_dados_med_apresen_med_md (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12); end;';
                                    EXECUTE sql_w
                                        USING IN OUT qt_dose_total_aux_w, IN vetor_w[x].qt_dose_w, OUT vetor_aux_w[ie_reg_w].cd_material_w,
                                        IN vetor_w[x].cd_material_w, OUT vetor_aux_w[ie_reg_w].qt_dose_w, OUT vetor_aux_w(ie_reg_w).
                                        cd_unidade_medida_w, IN vetor_w[x].cd_unidade_medida_w, OUT vetor_aux_w[ie_reg_w].nr_seq_fabric_w,
                                        IN nr_seq_fabric_w, IN OUT ie_reg_w, IN OUT x, IN 2;

                                EXCEPTION
                                    WHEN OTHERS THEN
                                        qt_dose_total_aux_w := NULL;
                                        ie_reg_w := NULL;
                                        x := NULL;
                                END;
                            ELSIF ( qt_dose_total_aux_w <= qt_desconto_w ) THEN
                                qt_dose_total_aux_w := 0;
                            ELSIF ( qt_registros_vetor_w = x ) THEN
                                BEGIN
                                    sql_w := 'begin calc_dados_med_verific_med_md (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11); end;';
                                    EXECUTE sql_w
                                        USING IN OUT qt_dose_total_aux_w, IN vetor_w[x].qt_dose_w, OUT vetor_aux_w[ie_reg_w].cd_material_w,
                                        IN vetor_w[x].cd_material_w, OUT vetor_aux_w[ie_reg_w].qt_dose_w, OUT vetor_aux_w(ie_reg_w).
                                        cd_unidade_medida_w, IN vetor_w[x].cd_unidade_medida_w, OUT vetor_aux_w[ie_reg_w].nr_seq_fabric_w,
                                        IN nr_seq_fabric_w, IN OUT ie_reg_w, IN 2;

                                EXCEPTION
                                    WHEN OTHERS THEN
                                        qt_dose_total_aux_w := NULL;
                                        ie_reg_w := NULL;
                                END;
                            ELSIF ( ( qt_dose_total_aux_w - vetor_w[x].qt_dose_w ) < 0 ) THEN
                                BEGIN
                                    sql_w := 'CALL calc_qt_perda_apresent_med_md(:1, :2) INTO :qt_perda_w';
                                    EXECUTE sql_w
                                        USING IN qt_dose_total_aux_w, IN vetor_w[x].qt_dose_w, OUT qt_perda_w;
                                EXCEPTION
                                    WHEN OTHERS THEN
                                        qt_perda_w := NULL;
                                END;

                                qt_dose_total_aux_ww := qt_dose_total_aux_w;
                                qt_perda_final_w := 0;
                                qt_controle_wwww := 0;
                                WHILE( qt_dose_total_aux_ww > 0 )
                                    AND ( qt_controle_wwww < 1000 )
                                LOOP
                                    qt_controle_www := 0;
                                    i := -1;
                                    WHILE( i < qt_registros_vetor_w )
                                        AND ( qt_dose_total_aux_ww > 0 )
                                        AND ( qt_controle_www < 1000 )
                                    LOOP
                                        i := i + 1;
                                        qt_controle_www := qt_controle_www + 1;
                                        BEGIN
                                            sql_w := 'begin calc_qt_perda_fin_apr_med_md (:1, :2, :3, :4, :5); end;';
                                            EXECUTE sql_w
                                                USING IN OUT qt_dose_total_aux_ww, IN vetor_w[i].qt_dose_w, OUT qt_perda_final_w,
                                                IN qt_registros_vetor_w, IN OUT i;

                                        EXCEPTION
                                            WHEN OTHERS THEN
                                                qt_dose_total_aux_ww := NULL;
                                                qt_perda_final_w := NULL;
                                                i := NULL;
                                        END;

                                    END LOOP;

                                    qt_controle_wwww := qt_controle_wwww + 1;
                                END LOOP;

                                BEGIN
                                    sql_w := 'CALL calc_qt_perda_apresent_med_md(:1, :2) INTO :qt_perda_2w';
                                    EXECUTE sql_w
                                        USING IN qt_dose_total_aux_w, IN vetor_w[x].qt_dose_w, OUT qt_perda_2w;
                                EXCEPTION
                                    WHEN OTHERS THEN
                                        qt_perda_2w := NULL;
                                END;

                                qt_dose_total_aux_ww := qt_dose_total_aux_w;
                                qt_perda_final_2w := 0;
                                qt_controle_wwww := 0;
                                WHILE( qt_dose_total_aux_ww > 0 )
                                    AND ( qt_controle_wwww < 1000 )
                                LOOP
                                    qt_controle_www := 0;
                                    i := -1;
                                    WHILE( i < qt_registros_vetor_w )
                                        AND ( qt_dose_total_aux_ww > 0 )
                                        AND ( qt_controle_www < 1000 )
                                    LOOP
                                        i := i + 1;
                                        qt_controle_www := qt_controle_www + 1;
                                        BEGIN
                                            sql_w := 'begin calc_dose_tot_aux_apre_med_md (:1, :2, :3, :4); end;';
                                            EXECUTE sql_w
                                                USING IN OUT qt_dose_total_aux_ww, IN vetor_w[i].qt_dose_w, OUT qt_perda_final_2w,
                                                IN OUT i;

                                        EXCEPTION
                                            WHEN OTHERS THEN
                                                qt_dose_total_aux_ww := NULL;
                                                qt_perda_final_2w := NULL;
                                                i := NULL;
                                        END;

                                    END LOOP;

                                    qt_controle_wwww := qt_controle_wwww + 1;
                                END LOOP;

                                IF ( qt_dose_total_aux_ww < qt_desconto_w ) THEN
                                    NULL;
                                ELSIF ( qt_perda_w >= qt_perda_final_w ) THEN
                                    BEGIN
                                        sql_w := 'begin calc_med_apresent_medic_md (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11); end;';
                                        EXECUTE sql_w
                                            USING OUT vetor_aux_w[ie_reg_w].cd_material_w, IN vetor_w[x].cd_material_w, OUT vetor_aux_w[
                                            ie_reg_w].qt_dose_w, IN vetor_w[x].qt_dose_w, OUT vetor_aux_w[ie_reg_w].cd_unidade_medida_w,
                                            IN vetor_w[x].cd_unidade_medida_w, OUT vetor_aux_w[ie_reg_w].nr_seq_fabric_w, IN OUT nr_seq_fabric_w,
                                            OUT qt_dose_total_aux_w, IN OUT ie_reg_w, IN 2;

                                    EXCEPTION
                                        WHEN OTHERS THEN

                                            qt_dose_total_aux_w := NULL;
                                            nr_seq_fabric_w := NULL;
                                            ie_reg_w := NULL;
                                    END;
                                END IF;

                            END IF;

  					--- Fim MD8
                        END LOOP;

                        qt_controle_w := qt_controle_w + 1;
                    END LOOP;

                    k := -1;
                    cd_mat_vetor_w := 0;
                    qt_mat_vetor_w := 0;
                    qt_a_lancar_w := qt_dose_total_prescr_w;
                    ie_gerar_diluicao_w := 'S';
                    WHILE( k < vetor_aux_w.count - 1 ) LOOP
                        k := k + 1;
                        IF
                            ( ( cd_mat_vetor_w = vetor_aux_w[k].cd_material_w ) OR ( cd_mat_vetor_w = 0 ) )
                            AND ( vetor_aux_w.count > 1 )
                        THEN
					--- Inicio MD9
                            BEGIN
                                sql_w := 'CALL obter_mat_rep_apresent_med_md(:1, :2) INTO :qt_mat_vetor_aux_w';
                                EXECUTE sql_w
                                    USING IN qt_mat_vetor_w, IN vetor_aux_w[k].qt_dose_w, OUT qt_mat_vetor_aux_w;
                            EXCEPTION
                                WHEN OTHERS THEN
                                    qt_mat_vetor_aux_w := NULL;
                            END;

                            qt_mat_vetor_w := qt_mat_vetor_aux_w;
					--- Fim MD9
                            qt_unitaria_w := vetor_aux_w[k].qt_dose_w;
                            cd_mat_vetor_w := vetor_aux_w[k].cd_material_w;
                            qt_conversao_dose_w := vetor_aux_w[k].qt_dose_w;
                            cd_unidade_medida_consumo_w := vetor_aux_w[k].cd_unidade_medida_w;
                        ELSE

					/*if	(vetor_aux_w.count = 1) or
						(k = (vetor_aux_w.count -1)) then
						cd_mat_vetor_w			:= vetor_aux_w(k).cd_material_w;
						qt_mat_vetor_w			:= qt_mat_vetor_w + vetor_aux_w(k).qt_dose_w;
						qt_unitaria_w			:= vetor_aux_w(k).qt_dose_w;
						qt_conversao_dose_w		:= vetor_aux_w(k).qt_dose_w;
						cd_unidade_medida_consumo_w 	:= vetor_aux_w(k).cd_unidade_medida_w;
					end if;*/

					---- Inicio MD10  verificar rotina do MD5 e MD6
                            BEGIN
                                sql_w := 'begin calc_qt_unit_apresent_med_md (:1, :2, :3, :4, :5); end;';
                                EXECUTE sql_w
                                    USING IN 1, IN OUT qt_a_lancar_w, IN OUT qt_mat_vetor_w, OUT qt_total_dispensar_w, IN OUT qt_unitaria_w;

                            EXCEPTION
                                WHEN OTHERS THEN
                                    qt_a_lancar_w := NULL;
                                    qt_mat_vetor_w := NULL;
                                    qt_total_dispensar_w := NULL;
                                    qt_unitaria_w := NULL;
                            END;

					--- Fim MD10
                            SELECT
                                coalesce(MAX(nr_sequencia), 0) + 1
                            INTO STRICT nr_seq_medic_w
                            FROM
                                prescr_material
                            WHERE
                                nr_prescricao = nr_prescricao_p;

                            SELECT
                                coalesce(MAX(ie_consignado), 'X')
                            INTO STRICT ie_consignado_w
                            FROM
                                material
                            WHERE
                                cd_material = cd_mat_vetor_w;

                            IF ( ie_consignado_w = '1' ) THEN
                                SELECT
                                    coalesce(MAX(a.cd_fornecedor), 'X')
                                INTO STRICT cd_fornecedor_w
                                FROM
                                    fornecedor_mat_consignado  a,
                                    material                   m
                                WHERE
                                        a.cd_material = m.cd_material_estoque
                                    AND m.cd_material = cd_mat_vetor_w
                                    AND m.ie_situacao = 'A'
                                    AND a.dt_mesano_referencia = trunc(dt_prescricao_w, 'mm')
                                    AND qt_estoque = (
                                        SELECT
                                            MAX(obter_saldo_estoque_consig(cd_estabelecimento_p, a.cd_fornecedor, a.cd_material, a.
                                            cd_local_estoque))
                                        FROM
                                            fornecedor_mat_consignado  a,
                                            material                   m
                                        WHERE
                                                a.cd_material = m.cd_material_estoque
                                            AND m.cd_material = cd_mat_vetor_w
                                            AND m.ie_situacao = 'A'
                                            AND a.dt_mesano_referencia = trunc(dt_prescricao_w, 'mm')
                                    );

                                IF ( cd_fornecedor_w = 'X' ) THEN
                                    cd_fornecedor_w := NULL;
                                END IF;
                            END IF;

                            IF ( coalesce(cd_mat_vetor_w, 0) = '0' ) THEN
                                cd_mat_vetor_w := vetor_aux_w[k].cd_material_w;
                            END IF;

                            IF ( qt_mat_vetor_w > 0 ) THEN
                                INSERT INTO prescr_material(
                                    nr_prescricao,
                                    nr_sequencia,
                                    ie_origem_inf,
                                    cd_material,
                                    cd_unidade_medida,
                                    qt_dose,
                                    qt_unitaria,
                                    qt_material,
                                    dt_atualizacao,
                                    nm_usuario,
                                    cd_intervalo,
                                    ds_observacao,
                                    ie_via_aplicacao,
                                    nr_agrupamento,
                                    cd_motivo_baixa,
                                    ie_utiliza_kit,
                                    cd_unidade_medida_dose,
                                    qt_conversao_dose,
                                    ie_urgencia,
                                    nr_ocorrencia,
                                    qt_total_dispensar,
                                    nr_sequencia_diluicao,
                                    ie_medicacao_paciente,
                                    ie_suspenso,
                                    ie_agrupador,
                                    ie_bomba_infusao,
                                    ie_se_necessario,
                                    ie_aplic_bolus,
                                    ie_aplic_lenta,
                                    ie_acm,
                                    qt_min_aplicacao,
                                    qt_hora_aplicacao,
                                    ie_recons_diluente_fixo,
                                    qt_dias_util,
                                    nr_seq_atend_medic,
                                    ie_sem_aprazamento,
                                    cd_fornec_consignado,
                                    nr_seq_material,
                                    nr_seq_atendimento,
                                    cd_mat_sem_apresent,
                                    ie_gerar_diluicao,
                                    nr_seq_via_acesso,
                                    ie_item_superior,
                                    ie_pre_medicacao,
                                    ds_observacao_enf,
                                    ie_agrupador_quimio,
                                    ds_horarios,
                                    nr_seq_mat_cpoe,
                                    hr_prim_horario,
                                    dt_inicio_medic
                                ) VALUES (
                                    nr_prescricao_p,
                                    nr_seq_medic_w,
                                    ie_origem_inf_w,
                                    cd_mat_vetor_w,
                                    cd_unidade_medida_consumo_w,
                                    qt_mat_vetor_w,
                                    qt_unitaria_w,
                                    qt_unitaria_w,
                                    dt_atualizacao_w,
                                    nm_usuario_p,
                                    cd_intervalo_ww,
                                    ds_recomendacao_w,
                                    ie_via_aplicacao_w,
                                    nr_agrupamento_w,
                                    0,
                                    'N',
                                    cd_unid_med_prescr_w,
                                    qt_conversao_dose_w,
                                    coalesce(ie_urgencia_w, 'N'),
                                    coalesce(nr_ocorrencia_w, 1),
                                    qt_unitaria_w * nr_ocorrencia_w,
                                    nr_seq_diluicao_w,
                                    'N',
                                    'N',
                                    1,
                                    ie_bomba_infusao_w,
                                    coalesce(ie_se_necessario_w, 'N'),
                                    coalesce(ie_aplic_bolus_w, 'N'),
                                    coalesce(ie_aplic_lenta_w, 'N'),
                                    'N',
                                    qt_min_aplicacao_w,
                                    qt_hora_aplicacao_w,
                                    'N',
                                    qt_dias_util_w,
                                    nr_seq_interno_w,
                                    'N',
                                    cd_fornecedor_w,
                                    nr_seq_material_w,
                                    nr_seq_atendimento_w,
                                    cd_material_w,
                                    ie_gerar_diluicao_w,
                                    nr_seq_via_acesso_w,
                                    ie_item_superior_w,
                                    ie_pre_medicacao_w,
                                    ds_justificativa_p
                                    || CASE WHEN coalesce(ds_justificativa_p::text, '') = '' THEN  NULL  ELSE CHR(13)                                                                              || obter_desc_expressao(728918)                                                                              || obter_nome_pf(obter_dados_usuario_opcao(nm_usuario_p,                                                                              'C')) END ,
                                    ie_agrupador_oncologia_w,
                                    ds_horarios_w,
                                    nr_seq_cpoe_w,
                                    hr_prim_horario_w,
                                    dt_inicio_medic_w
                                );

                                CALL gerar_reconst_diluicao(nr_prescricao_p, nr_seq_medic_w, 'A');
                            END IF;

                            ie_gerar_diluicao_w := 'N';
                            cd_mat_vetor_w := vetor_aux_w[k].cd_material_w;
                            qt_mat_vetor_w := vetor_aux_w[k].qt_dose_w;
                            qt_unitaria_w := vetor_aux_w[k].qt_dose_w;
                            qt_conversao_dose_w := vetor_aux_w[k].qt_dose_w;
                            cd_unidade_medida_consumo_w := vetor_aux_w[k].cd_unidade_medida_w;
                            COMMIT;
                        END IF;

                    END LOOP;

                    vetor_aux_w.DELETE;
                    IF ( coalesce(cd_mat_vetor_w, 0) <> '0' ) THEN
				--- Inicio MD11 verificar a rotina do MD5, MD6 e MD10
                        BEGIN
                            sql_w := 'begin calc_qt_unit_apresent_med_md (:1, :2, :3, :4, :5); end;';
                            EXECUTE sql_w
                                USING IN 1, IN OUT qt_a_lancar_w, IN OUT qt_mat_vetor_w, OUT qt_total_dispensar_w, IN OUT qt_unitaria_w;

                        EXCEPTION
                            WHEN OTHERS THEN
                                qt_a_lancar_w := NULL;
                                qt_mat_vetor_w := NULL;
                                qt_total_dispensar_w := NULL;
                                qt_unitaria_w := NULL;
                        END;

 				--- Fim MD11
                        SELECT
                            coalesce(MAX(nr_sequencia), 0) + 1
                        INTO STRICT nr_seq_medic_w
                        FROM
                            prescr_material
                        WHERE
                            nr_prescricao = nr_prescricao_p;

                        SELECT
                            coalesce(MAX(ie_consignado), 'X'),
                            MAX(substr(obter_dados_material_estab(cd_material, cd_estabelecimento_p, 'UMS'), 1, 30))
                        INTO STRICT
                            ie_consignado_w,
                            cd_unidade_medida_consumo_w
                        FROM
                            material
                        WHERE
                            cd_material = cd_mat_vetor_w;

                        IF ( ie_consignado_w = '1' ) THEN
                            SELECT
                                coalesce(MAX(a.cd_fornecedor), 'X')
                            INTO STRICT cd_fornecedor_w
                            FROM
                                fornecedor_mat_consignado  a,
                                material                   m
                            WHERE
                                    a.cd_material = m.cd_material_estoque
                                AND m.cd_material = cd_mat_vetor_w
                                AND m.ie_situacao = 'A'
                                AND a.dt_mesano_referencia = trunc(dt_prescricao_w, 'mm')
                                AND qt_estoque = (
                                    SELECT
                                        MAX(obter_saldo_estoque_consig(cd_estabelecimento_p, a.cd_fornecedor, a.cd_material, a.cd_local_estoque))
                                    FROM
                                        fornecedor_mat_consignado  a,
                                        material                   m
                                    WHERE
                                            a.cd_material = m.cd_material_estoque
                                        AND m.cd_material = cd_mat_vetor_w
                                        AND m.ie_situacao = 'A'
                                        AND a.dt_mesano_referencia = trunc(dt_prescricao_w, 'mm')
                                );

                            IF ( cd_fornecedor_w = 'X' ) THEN
                                cd_fornecedor_w := NULL;
                            END IF;
                        END IF;

                        SELECT
                            coalesce(COUNT(*), 0)
                        INTO STRICT qt_medic_w
                        FROM
                            prescr_material a
                        WHERE
                                a.nr_prescricao = nr_prescricao_p
                            AND a.ie_item_superior = 'S'
                            AND a.nr_agrupamento = nr_agrupamento_w;

				--Se nao tiver nenhum superior deve-se gerar como superior.
                        IF ( qt_medic_w = 0 ) THEN
                            ie_item_superior_w := 'S';
                        END IF;
                        ie_gerar_diluicao_w := 'N';
                        IF ( ie_item_superior_w = 'S' ) THEN
                            ie_gerar_diluicao_w := 'S';
                        END IF;
                        INSERT INTO prescr_material(
                            nr_prescricao,
                            nr_sequencia,
                            ie_origem_inf,
                            cd_material,
                            cd_unidade_medida,
                            qt_dose,
                            qt_unitaria,
                            qt_material,
                            dt_atualizacao,
                            nm_usuario,
                            cd_intervalo,
                            ds_observacao,
                            ie_via_aplicacao,
                            nr_agrupamento,
                            cd_motivo_baixa,
                            ie_utiliza_kit,
                            cd_unidade_medida_dose,
                            qt_conversao_dose,
                            ie_urgencia,
                            nr_ocorrencia,
                            qt_total_dispensar,
                            nr_sequencia_diluicao,
                            ie_medicacao_paciente,
                            ie_suspenso,
                            ie_agrupador,
                            ie_bomba_infusao,
                            ie_se_necessario,
                            ie_aplic_bolus,
                            ie_aplic_lenta,
                            ie_acm,
                            qt_min_aplicacao,
                            qt_hora_aplicacao,
                            ie_recons_diluente_fixo,
                            qt_dias_util,
                            nr_seq_atend_medic,
                            ie_sem_aprazamento,
                            cd_fornec_consignado,
                            nr_seq_material,
                            nr_seq_atendimento,
                            cd_mat_sem_apresent,
                            ie_gerar_diluicao,
                            nr_seq_via_acesso,
                            ie_item_superior,
                            ie_pre_medicacao,
                            ds_observacao_enf,
                            ie_agrupador_quimio,
                            ds_horarios,
                            nr_seq_mat_cpoe,
                            hr_prim_horario,
                            dt_inicio_medic
                        ) VALUES (
                            nr_prescricao_p,
                            nr_seq_medic_w,
                            ie_origem_inf_w,
                            cd_mat_vetor_w,
                            cd_unidade_medida_consumo_w,
                            qt_mat_vetor_w,
                            qt_unitaria_w,
                            qt_unitaria_w,
                            dt_atualizacao_w,
                            nm_usuario_p,
                            cd_intervalo_ww,
                            ds_recomendacao_w,
                            ie_via_aplicacao_w,
                            nr_agrupamento_w,
                            0,
                            'N',
                            cd_unid_med_prescr_w,
                            qt_conversao_dose_w,
                            coalesce(ie_urgencia_w, 'N'),
                            coalesce(nr_ocorrencia_w, 1),
                            qt_unitaria_w * nr_ocorrencia_w,
                            nr_seq_diluicao_w,
                            'N',
                            'N',
                            1,
                            ie_bomba_infusao_w,
                            coalesce(ie_se_necessario_w, 'N'),
                            coalesce(ie_aplic_bolus_w, 'N'),
                            coalesce(ie_aplic_lenta_w, 'N'),
                            'N',
                            qt_min_aplicacao_w,
                            qt_hora_aplicacao_w,
                            'N',
                            qt_dias_util_w,
                            nr_seq_interno_w,
                            'N',
                            cd_fornecedor_w,
                            nr_seq_material_w,
                            nr_seq_atendimento_w,
                            cd_material_w,
                            ie_gerar_diluicao_w,
                            nr_seq_via_acesso_w,
                            ie_item_superior_w,
                            ie_pre_medicacao_w,
                            ds_justificativa_p
                            || CASE WHEN coalesce(ds_justificativa_p::text, '') = '' THEN  NULL  ELSE CHR(13)                                                                      || obter_desc_expressao(728918)                                                                      || obter_nome_pf(obter_dados_usuario_opcao(nm_usuario_p, 'C')) END ,
                            ie_agrupador_oncologia_w,
                            ds_horarios_w,
                            nr_seq_cpoe_w,
                            hr_prim_horario_w,
                            dt_inicio_medic_w
                        );

                        CALL gerar_reconst_diluicao(nr_prescricao_p, nr_seq_medic_w, 'A');
                    END IF;

                END IF;

            ELSIF ( ie_tipo_material_w = '6' ) THEN
                IF ( cd_unid_med_consumo_w = cd_unid_med_prescr_w ) THEN
                    qt_conversao_dose_w := 1;
                ELSE
                    BEGIN
                        SELECT
                            qt_conversao
                        INTO STRICT qt_conversao_dose_w
                        FROM
                            material_conversao_unidade
                        WHERE
                                cd_material = cd_material_w
                            AND cd_unidade_medida = cd_unid_med_prescr_w;

                    EXCEPTION
                        WHEN OTHERS THEN
                            qt_conversao_dose_w := 1;
                    END;
                END IF;
		--- Inicio MD12
                BEGIN
                    sql_w := 'begin calc_tot_dis_apresent_med_md (:1, :2, :3, :4, :5); end;';
                    EXECUTE sql_w
                        USING IN OUT qt_unitaria_w, IN qt_dose_prescricao_w, IN qt_conversao_dose_w, OUT qt_total_dispensar_w, IN
                        qt_minimo_multiplo_solic_w;

                EXCEPTION
                    WHEN OTHERS THEN
                        qt_unitaria_w := NULL;
                        qt_total_dispensar_w := NULL;
                END;

		--- Fim MD12
                SELECT
                    coalesce(MAX(ie_consignado), 'X')
                INTO STRICT ie_consignado_w
                FROM
                    material
                WHERE
                    cd_material = cd_material_w;

                IF ( ie_consignado_w = '1' ) THEN
                    SELECT
                        coalesce(MAX(a.cd_fornecedor), 'X')
                    INTO STRICT cd_fornecedor_w
                    FROM
                        fornecedor_mat_consignado  a,
                        material                   m
                    WHERE
                            a.cd_material = m.cd_material_estoque
                        AND m.cd_material = cd_material_w
                        AND m.ie_situacao = 'A'
                        AND a.dt_mesano_referencia = trunc(dt_prescricao_w, 'mm')
                        AND qt_estoque = (
                            SELECT
                                MAX(obter_saldo_estoque_consig(cd_estabelecimento_p, a.cd_fornecedor, a.cd_material, a.cd_local_estoque))
                            FROM
                                fornecedor_mat_consignado  a,
                                material                   m
                            WHERE
                                    a.cd_material = m.cd_material_estoque
                                AND m.cd_material = cd_material_w
                                AND m.ie_situacao = 'A'
                                AND a.dt_mesano_referencia = trunc(dt_prescricao_w, 'mm')
                        );

                    IF ( cd_fornecedor_w = 'X' ) THEN
                        cd_fornecedor_w := NULL;
                    END IF;
                END IF;

                IF (nr_seq_diluicao_w IS NOT NULL AND nr_seq_diluicao_w::text <> '') THEN
                    SELECT
                        MAX(nr_sequencia)
                    INTO STRICT nr_seq_diluicao_w
                    FROM
                        prescr_material
                    WHERE
                            nr_prescricao = nr_prescricao_p
                        AND nr_seq_material = nr_seq_diluicao_w;

                END IF;

                SELECT
                    coalesce(MAX(nr_sequencia), 0) + 1
                INTO STRICT nr_seq_medic_w
                FROM
                    prescr_material
                WHERE
                    nr_prescricao = nr_prescricao_p;

                INSERT INTO prescr_material(
                    nr_prescricao,
                    nr_sequencia,
                    ie_origem_inf,
                    cd_material,
                    cd_unidade_medida,
                    qt_dose,
                    qt_unitaria,
                    qt_material,
                    dt_atualizacao,
                    nm_usuario,
                    cd_intervalo,
                    ds_observacao,
                    ie_via_aplicacao,
                    nr_agrupamento,
                    cd_motivo_baixa,
                    ie_utiliza_kit,
                    cd_unidade_medida_dose,
                    qt_conversao_dose,
                    ie_urgencia,
                    nr_ocorrencia,
                    qt_total_dispensar,
                    nr_sequencia_diluicao,
                    ie_medicacao_paciente,
                    ie_suspenso,
                    ie_agrupador,
                    ie_bomba_infusao,
                    ie_se_necessario,
                    ie_aplic_bolus,
                    ie_aplic_lenta,
                    ie_acm,
                    qt_min_aplicacao,
                    qt_hora_aplicacao,
                    ie_recons_diluente_fixo,
                    qt_dias_util,
                    nr_seq_atend_medic,
                    ie_sem_aprazamento,
                    cd_fornec_consignado,
                    nr_seq_material,
                    nr_seq_atendimento,
                    nr_seq_via_acesso,
                    ie_item_superior,
                    ie_pre_medicacao,
                    ds_observacao_enf,
                    ie_agrupador_quimio,
                    ds_horarios,
                    nr_seq_mat_cpoe,
                    hr_prim_horario,
                    dt_inicio_medic
                ) VALUES (
                    nr_prescricao_p,
                    nr_seq_medic_w,
                    ie_origem_inf_w,
                    cd_material_w,
                    cd_unid_med_consumo_w,
                    qt_dose_prescricao_w,
                    coalesce(qt_unitaria_w, 0),
                    ( coalesce(qt_unitaria_w, 0) * qt_dias_util_ww ),
                    dt_atualizacao_w,
                    nm_usuario_p,
                    cd_intervalo_ww,
                    ds_recomendacao_w,
                    ie_via_aplicacao_w,
                    nr_agrupamento_w,
                    0,
                    'N',
                    cd_unid_med_prescr_w,
                    qt_conversao_dose_w,
                    coalesce(ie_urgencia_w, 'N'),
                    coalesce(nr_ocorrencia_w, 1),
                    qt_total_dispensar_w * qt_dias_util_ww,
                    nr_seq_diluicao_w,
                    'N',
                    'N',
                    1,
                    ie_bomba_infusao_w,
                    coalesce(ie_se_necessario_w, 'N'),
                    coalesce(ie_aplic_bolus_w, 'N'),
                    coalesce(ie_aplic_lenta_w, 'N'),
                    'N',
                    qt_min_aplicacao_w,
                    qt_hora_aplicacao_w,
                    'N',
                    qt_dias_util_w,
                    nr_seq_interno_w,
                    'N',
                    cd_fornecedor_w,
                    nr_seq_material_w,
                    nr_seq_atendimento_w,
                    nr_seq_via_acesso_w,
                    ie_item_superior_w,
                    ie_pre_medicacao_w,
                    ds_justificativa_p
                    || CASE WHEN coalesce(ds_justificativa_p::text, '') = '' THEN  NULL  ELSE CHR(13)                                                              || obter_desc_expressao(728918)                                                              || obter_nome_pf(obter_dados_usuario_opcao(nm_usuario_p, 'C')) END ,
                    ie_agrupador_oncologia_w,
                    ds_horarios_w,
                    nr_seq_cpoe_w,
                    hr_prim_horario_w,
                    dt_inicio_medic_w
                );

                CALL gerar_reconst_diluicao(nr_prescricao_p, nr_seq_medic_w, 'A');
            END IF;

        END;

    END LOOP;

    CLOSE c01;

-- Ajustar valores da dispensacao
    OPEN c04;
    LOOP
        FETCH c04 INTO
            cd_material_w,
            nr_seq_medic_w,
            cd_intervalo_w,
            ie_via_aplicacao_w,
            qt_unitaria_w,
            qt_dose_especial_w,
            nr_ocorrencia_w,
            ds_dose_diferenciada_w,
            ie_origem_inf_w,
            cd_unid_med_prescr_w,
            qt_dias_util_w,
            qt_material_w,
            ie_se_necessario_w,
            ie_acm_w;

        EXIT WHEN NOT FOUND; /* apply on c04 */
        BEGIN
            SELECT * FROM obter_quant_dispensar(cd_estabelecimento_p, cd_material_w, nr_prescricao_p, nr_seq_medic_w, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, qt_dose_especial_w, nr_ocorrencia_w, ds_dose_diferenciada_w, ie_origem_inf_w, cd_unid_med_prescr_w, qt_dias_util_w, qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w;

            UPDATE prescr_material
            SET
                qt_material = qt_material_w,
                qt_total_dispensar = qt_total_dispensar_w,
                ie_regra_disp = CASE WHEN coalesce(ie_regra_disp, 'X')='D' THEN  ie_regra_disp  ELSE ie_regra_disp_w END
            WHERE
                    nr_prescricao = nr_prescricao_p
                AND nr_sequencia = nr_seq_medic_w;

            COMMIT;
        END;

    END LOOP;

    CLOSE c04;
    COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rep_verificar_apresent_medic ( nr_prescricao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_justificativa_p text DEFAULT NULL) FROM PUBLIC;

