-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_gerar_interf_laudo ( nr_seq_lote_p bigint, ie_tipo_lote_p text, nm_usuario_p text) AS $body$
DECLARE


/*
ie_tipo_lote_p
A - Ambulatorial
H - Hospitalar
*/
			

cd_cid_principal_w	varchar(4);
cd_carater_internacao_w	varchar(2);
ie_clinica_w		integer;
cd_procedimento_solic_w	bigint;
cd_medico_w		varchar(10);
nr_cpf_paciente_w	varchar(11);
nr_cns_paciente_w	varchar(15);
nm_paciente_w		varchar(60);
ie_sexo_w		varchar(1);
dt_nasc_paciente_w	timestamp;
nm_mae_paciente_w	varchar(60);
ds_logradouro_w		varchar(40);
nr_logradouro_w		varchar(11);
ds_compl_logradouro_w	varchar(25);
ds_bairro_w		varchar(30);
cd_cep_w		varchar(8);
cd_mun_ibge_w		varchar(8);
cd_cor_pele_w		varchar(2);
nm_resp_paciente_w	varchar(60);
nr_cns_solic_w		varchar(15);
nm_medico_solic_w	varchar(60);
nr_sequencia_w		bigint;
cd_estabelecimento_w	smallint;
cd_cnes_w		integer;
nr_seq_exportacao_w	bigint;
nr_seq_lote_w		bigint;
nr_cpf_solic_w		varchar(11);
dt_diag_cito_hist_w	timestamp;
nr_prontuario_w		bigint;
dt_emissao_w		timestamp;
ds_condicao_justifica_w	varchar(200);
cd_pessoa_fisica_w	varchar(10);
nr_seq_interno_w	bigint;
cd_etnia_w		varchar(4) := '0000';
nr_linha_w		smallint := 0;
nr_ordem_laudo_w	sus_laudo_paciente.nr_ordem_laudo%type;
ie_numerar_w		varchar(1);

C01 CURSOR FOR
	SELECT	coalesce(a.cd_cid_principal,'0000'),
		substr(coalesce(b.ie_carater_inter_sus,'01'),1,2),
		lpad(coalesce(obter_clinica_sus(b.ie_clinica),b.ie_clinica),2,0),
		lpad(a.cd_procedimento_solic,10,0),
		coalesce(a.cd_medico_requisitante,a.cd_profis_requisitante),
		substr(obter_dados_pf(b.cd_pessoa_fisica, 'CPF'),1,11) nr_cpf,
		substr(obter_dados_pf(b.cd_pessoa_fisica, 'CNS'),1,15) nr_cns,
		substr(obter_nome_pf(b.cd_pessoa_fisica),1,60) nm_paciente,
		CASE WHEN substr(obter_sexo_pf(b.cd_pessoa_fisica,'C'),1,1)='M' THEN  1 WHEN substr(obter_sexo_pf(b.cd_pessoa_fisica,'C'),1,1)='F' THEN  3 END  ie_Sexo,
		to_date(obter_dados_pf(b.cd_pessoa_fisica, 'DN'), 'dd/mm/yyyy') dt_nascimento,
		substr(obter_compl_pf(b.cd_pessoa_fisica, 5, 'N'),1,60) nm_mae,
		substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'EN'),1,40) ds_logradouro,
		substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'NR'),1,10) nr_logradouro,
		substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'CO'),1,25) ds_compl_logr,
		substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'B'),1,30) ds_bairro,
		substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'CEP'),1,15) cd_Cep,
		substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'CDM'),1,6) cd_mun_ibge,
		substr(Sus_Obter_Cor_Pele(b.cd_pessoa_fisica, 'C'),1,2) cd_cor_pele,	
		substr(obter_compl_pf(b.cd_pessoa_fisica, 3, 'N'),1,60) nm_responsavel,
		substr(obter_dados_pf(coalesce(a.cd_medico_requisitante,a.cd_profis_requisitante), 'CNS'),1,15) nr_cns_solic,
		substr(obter_nome_pf(coalesce(a.cd_medico_requisitante,a.cd_profis_requisitante)),1,60) nm_solicitante,
		b.cd_estabelecimento,
		substr(obter_dados_pf(coalesce(a.cd_medico_requisitante,a.cd_profis_requisitante), 'CPF'),1,11),
		a.dt_emissao,
		substr(obter_prontuario_paciente(b.cd_pessoa_fisica),1,10),
		a.dt_emissao,
		substr(a.ds_condicao_justifica,1,200),
		b.cd_pessoa_fisica,
		a.nr_seq_interno,
		lpad(substr(CASE WHEN Sus_Obter_Cor_Pele(b.cd_pessoa_fisica, 'C')='5' THEN sus_obter_etnia(b.cd_pessoa_fisica, 'C')  ELSE '0000' END ,1,4),4,'0') cd_etnia,
		a.nr_ordem_laudo
	from	atendimento_paciente b,
		sus_laudo_paciente a
	where	a.nr_seq_lote		= nr_seq_lote_p
	and	a.nr_atendimento	= b.nr_atendimento
	order by 8, a.nr_seq_interno, a.dt_emissao;
	

BEGIN

ie_numerar_w := obter_valor_param_usuario(1006, 13, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento);

nr_Seq_lote_w	:= nr_seq_lote_p;
delete FROM w_sus_interf_laudo where nr_seq_lote = nr_seq_lote_p;
open C01;
loop
fetch C01 into	
	cd_cid_principal_w,
	cd_carater_internacao_w,
	ie_clinica_w,
	cd_procedimento_solic_w,
	cd_medico_w,
	nr_cpf_paciente_w,
	nr_cns_paciente_w,
	nm_paciente_w,
	ie_sexo_w,
	dt_nasc_paciente_w,
	nm_mae_paciente_w,
	ds_logradouro_w,
	nr_logradouro_w,
	ds_compl_logradouro_w,
	ds_bairro_w,
	cd_cep_w,
	cd_mun_ibge_w,
	cd_cor_pele_w,
	nm_resp_paciente_w,
	nr_cns_solic_w,
	nm_medico_solic_w,
	cd_estabelecimento_w,
	nr_cpf_solic_w,
	dt_diag_cito_hist_w,
	nr_prontuario_w,
	dt_emissao_w,
	ds_condicao_justifica_w,
	cd_pessoa_fisica_w,
	nr_seq_interno_w,
	cd_etnia_w,
	nr_ordem_laudo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (ie_tipo_lote_p	= 'A') then
		begin
		select	substr(cd_cnes_hospital,1,7)
		into STRICT	cd_cnes_w
		from	sus_parametros_apac
		where	cd_estabelecimento	= cd_estabelecimento_w;
		end;
	else
		begin
		select	substr(cd_cnes_hospital,1,7)
		into STRICT	cd_cnes_w
		from	sus_parametros_aih
		where	cd_estabelecimento	= cd_estabelecimento_w;
		end;
	end if;
	
	select	nextval('w_sus_interf_laudo_seq')
	into STRICT	nr_sequencia_w
	;
	
	if (coalesce(ie_numerar_w,'N') = 'S') then
		nr_seq_exportacao_w := nr_ordem_laudo_w;
	else
		begin
		select	coalesce(max(nr_seq_exportacao),0) + 1
		into STRICT	nr_seq_exportacao_w
		from	w_sus_interf_laudo;
		end;
	end if;
	
	nr_linha_w := nr_linha_w + 1;
	
	insert into w_sus_interf_laudo(
		nr_sequencia,
		nr_seq_exportacao,
		cd_cid_principal,
		dt_laudo,
		nr_prontuario,
		ie_tipo_solic,
		cd_carater_internacao,
		ie_clinica,
		cd_procedimento_solic,
		cd_cnes,
		nr_cpf_solic,
		dt_solicitacao,
		ds_motivo_solic,
		nr_seq_paciente,
		qt_procedimento,
		nr_laudo,
		nr_cpf_paciente,
		nr_cns_paciente,
		nm_paciente,
		ie_sexo,
		dt_nasc_paciente,
		nm_mae_paciente,
		ds_logradouro,
		nr_logradouro,
		ds_compl_logradouro,
		ds_bairro,
		cd_cep,
		cd_mun_ibge,
		cd_cor_pele,
		nm_resp_paciente,
		nr_cns_solic,
		nm_medico_solic,
		nr_seq_lote,
		nm_usuario,
		dt_atualizacao,
		cd_etnia)
	values (
		nr_sequencia_w,
		nr_seq_exportacao_w,
		cd_cid_principal_w,
		dt_diag_cito_hist_w,
		nr_prontuario_w,
		ie_tipo_lote_p,
		cd_carater_internacao_w,
		ie_clinica_w,
		cd_procedimento_solic_w,
		cd_cnes_w,
		nr_cpf_solic_w,
		dt_emissao_w,
		ds_condicao_justifica_w,
		nr_linha_w,
		1,
		nr_seq_interno_w,
		nr_cpf_paciente_w,
		nr_cns_paciente_w,
		nm_paciente_w,
		ie_sexo_w,
		dt_nasc_paciente_w,
		nm_mae_paciente_w,
		ds_logradouro_w,
		nr_logradouro_w,
		ds_compl_logradouro_w,
		ds_bairro_w,
		cd_cep_w,
		cd_mun_ibge_w,
		cd_cor_pele_w,
		nm_resp_paciente_w,
		nr_cns_solic_w,
		nm_medico_solic_w,
		nr_seq_lote_w,
		nm_usuario_p,
		clock_timestamp(),
		cd_etnia_w);
		
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_gerar_interf_laudo ( nr_seq_lote_p bigint, ie_tipo_lote_p text, nm_usuario_p text) FROM PUBLIC;

