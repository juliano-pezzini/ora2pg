-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_12 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Aplicar validação quanto as restrições do material (tabela PLS_MATERIAL_RESTRICAO)
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
Para esta validação será  possível que exista mais de uma regra, sendo as mesmas implementadas
no formato OU.

Alterações:
-------------------------------------------------------------------------------------------------------------------
jjung OS 602010  21/06/2013 - Criação da rotina.
-------------------------------------------------------------------------------------------------------------------
 jjung 29/06/2013

Alteração:	Adicionado parâmetro nos métodos de atualização dos campos IE_VALIDO e IE_VALIDO_TEMP
	da PLS_TIPOS_OCOR_PCK

Motivo:	Se tornou necessário diferenciar os filtros das validações na hora de realizar esta operação
	para que os filtros de exceção funcionem corretamente.
------------------------------------------------------------------------------------------------------------------
dlehmkuhl OS 688483 - 14/04/2014 -

Alteração:	Modificada a forma de trabalho em relação a atualização dos campos de controle
	que basicamente decidem se a ocorrência será ou não gerada. Foi feita também a
	substituição da rotina obterX_seX_Xgera.

Motivo:	Necessário realizar essas alterações para corrigir bugs principalmente no que se
	refere a questão de aplicação de filtros (passo anterior ao da validação). Também
	tivemos um foco especial em performance, visto que a mesma precisou ser melhorada
	para não inviabilizar a nova solicitação que diz que a exceção deve verificar todo
	o atendimento.
------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_select_w		varchar(6000);
ds_restricao_regra_w	varchar(2000);
ds_restricao_geral_w	varchar(2000);
ds_restricao_benef_w	varchar(2000);
cursor_w		sql_pck.t_cursor;
valor_bind_w		sql_pck.t_dado_bind;

var_cur_w 		integer;
var_exec_w		integer;
var_retorno_w		integer;
qt_cnt_w		integer;

nr_seq_selecao_w	dbms_sql.number_table;
ie_valido_w		dbms_sql.varchar2_table;
ds_observacao_w		dbms_sql.varchar2_table;

ds_tabela_restricao_regra_w varchar(30) := '';
ds_campos_idade_regra_w	varchar(255) := '';
tb_seq_selecao_w	pls_util_cta_pck.t_number_table;
tb_ds_observacao_w	pls_util_cta_pck.t_varchar2_table_1;
tb_idade_minima_w	pls_util_cta_pck.t_number_table;
tb_idade_maxima_w	pls_util_cta_pck.t_number_table;
tb_consiste_idade_w 	pls_util_cta_pck.t_varchar2_table_1;
tb_idade_conta_anos_w	pls_util_cta_pck.t_number_table;
qt_reg_w		integer;

-- Informações da validação de restrição do material
C02 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia	nr_seq_validacao,
		a.ie_consiste_sexo,
		a.ie_consiste_idade,
		a.ie_consiste_qtd,
		a.ie_bloqueio_mat,
		a.ie_exige_nf
	from	pls_oc_cta_val_restr_mat a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;
BEGIN

if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '') then

	-- Obter o controle padrão para quantidade de registros que será enviada a cada vez para a tabela de seleção.
	qt_cnt_w := pls_cta_consistir_pck.qt_registro_transacao_w;

	-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
	CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);

	--Terá no máximo um registro retornado aqui,  se algum dia
	--for alterada essa limitação no cadastro da validação, tem
	--que ser tratado aqui para não dar merda
	for	r_C02_w in C02(dados_regra_p.nr_sequencia) loop

		ds_tabela_restricao_regra_w := '';
		ds_campos_idade_regra_w := ' null,'||pls_tipos_ocor_pck.enter_w||' null,';
		ds_restricao_regra_w := '';
		-- Se tiver algum campo que restrinja restrições do material, adiciona a restrição pela regra
		if (r_C02_w.ie_bloqueio_mat IS NOT NULL AND r_C02_w.ie_bloqueio_mat::text <> '') or (r_C02_w.ie_consiste_qtd = 'S') or (r_C02_w.ie_consiste_sexo = 'S') or (r_C02_w.ie_consiste_idade = 'S') or (r_C02_w.ie_exige_nf = 'S') then

			--Nesse caso adicionará a  tabela de restrição de materiais ao select, além de campos utilizados em consistências da regra
			ds_tabela_restricao_regra_w := 'pls_material_restricao regra, ';

			ds_campos_idade_regra_w := '	regra.qt_idade_minima, '|| pls_tipos_ocor_pck.enter_w ||
						   '	regra.qt_idade_maxima, ';

			ds_restricao_regra_w := ds_restricao_regra_w || pls_tipos_ocor_pck.enter_w ||
						'and	mat.nr_seq_material = regra.nr_seq_material ';

			-- A primeira restrição que será montada é a verificação das retrições do material vigentes na data do atendimento realizado.
			if (dados_regra_p.ie_evento = 'IMP') then	-- Importação
				ds_restricao_regra_w := ds_restricao_regra_w || pls_tipos_ocor_pck.enter_w ||
							'			and	((regra.dt_inicio_vigencia < mat.dt_atendimento_imp) and ' || pls_tipos_ocor_pck.enter_w ||
							'				(regra.dt_fim_vigencia is null or ' || pls_tipos_ocor_pck.enter_w ||
							'				regra.dt_fim_vigencia > mat.dt_atendimento_imp)) ';
			else
				ds_restricao_regra_w := ds_restricao_regra_w || pls_tipos_ocor_pck.enter_w ||
							'			and	((regra.dt_inicio_vigencia < mat.dt_atendimento) and ' || pls_tipos_ocor_pck.enter_w ||
							'				(regra.dt_fim_vigencia is null or ' || pls_tipos_ocor_pck.enter_w ||
							'				regra.dt_fim_vigencia > mat.dt_atendimento)) ';
			end if;

			-- Se for informado na regra que é para consistir quantidade.
			if (r_C02_w.ie_consiste_qtd = 'S') then
				-- Esta retrição irá encontrar os materiais da conta que não estão de acordo com as quantidades informadas na regra da pasta "Restrição".
				-- Sempre será verificada a quantidade apresentada (campos imp) do material.
				ds_restricao_regra_w := ds_restricao_regra_w || pls_tipos_ocor_pck.enter_w ||
							'			and	((mat.qt_material_imp < regra.qt_minima) or ' || pls_tipos_ocor_pck.enter_w ||
							'				(mat.qt_material_imp > regra.qt_maxima)) ';
			end if;

			-- Se for para consistir o sexo exclusivo do beneficiário.
			if (r_C02_w.ie_consiste_sexo = 'S') then
				-- Esta restrição verifica o sexo do beneficiário da conta.
				-- A restrição de material por sexo indica que somente pessoas daquele sexo  podem usar o determinado material.
				ds_restricao_regra_w := ds_restricao_regra_w || pls_tipos_ocor_pck.enter_w ||
							'			and	benef.ie_sexo <> regra.ie_sexo_exclusivo ';
			end if;

			-- Se for para consistir o bloqueio do material será montado a restrição conforme o bloqueio selecionado abaixo.
			if (r_C02_w.ie_bloqueio_mat IS NOT NULL AND r_C02_w.ie_bloqueio_mat::text <> '') then

				-- O bloqueio do material indica que beneficiário com certas  características contratuais não podem utilizar determinado material.
				-- Bloqueia uso contratos custo operacional
				if (r_C02_w.ie_bloqueio_mat = 'BCO') then
					-- Se é para verificar o bloqueio por custo operacional então  a ocorrência deve ser gerada quando o produto do beneficiário
					-- detém a formação de preço 3 - Pós estabelecido por custo operacional e a restrição do material indicar que o mesmo está
					-- bloqueado para o uso por este tipo de formação de preço.
					ds_restricao_regra_w := ds_restricao_regra_w || pls_tipos_ocor_pck.enter_w ||
					'			and	(benef.ie_preco = 3 and regra.ie_bloqueia_custo_op = ''S'') ';
				-- Bloqueia uso intercâmbio
				elsif (r_C02_w.ie_bloqueio_mat = 'BI') then
					-- Se é para verificar o bloquei para uso do contrato de intercâmbio então a ocorrência deve ser gerada quando o beneficiário
					-- tiver informação de contrato de intercâmbio e a restrição do material indicar que o uso por contratos de intercâmbio estiver bloqueada.
					ds_restricao_regra_w := ds_restricao_regra_w || pls_tipos_ocor_pck.enter_w ||
					'			and	(benef.nr_seq_intercambio is not null and regra.ie_bloqueia_intercambio = ''S'') ';
				-- Bloqueia uso plano não regulamentado
				elsif (r_C02_w.ie_bloqueio_mat = 'BNR') then
					-- Se é para verificar o bloqueio por produto não regulamentado então deve ser gerada a ocorrência quando o produto do beneficiário
					-- seja pré regulamentado e a restrição do material inidicar que o mesmo está bloqueado para uso por esses planos
					ds_restricao_regra_w := ds_restricao_regra_w || pls_tipos_ocor_pck.enter_w ||
					'			and	(benef.ie_regulamentacao = ''R'' and regra.ie_bloqueia_prod_nao_reg = ''S'') ';
				-- Bloqueia uso contratos pré-pagamento
				elsif (r_C02_w.ie_bloqueio_mat = 'BPP') then
					-- Se é para verificar o bloqueio de pré pagamento então a ocorrência deve ser gerada quando a formação de preço do produto
					-- do beneficiário for 1 - Pré-estabelecido e a restrição do material indicar que o uso do material para este tipo de produto
					-- está bloqueada.
					ds_restricao_regra_w := ds_restricao_regra_w || pls_tipos_ocor_pck.enter_w ||
					'			and	(benef.ie_preco = 1 and regra.ie_bloqueia_pre_pag = ''S'') ';
				elsif (r_C02_w.ie_bloqueio_mat = 'BR') then
					-- Se é para verificar o bloqueio por produto regulamentado então deve ser gerada a ocorrência quando o produto do beneficiário
					-- seja pós-regulamentado ou adaptado e a restrição do material inidicar que o mesmo está bloqueado para uso por esses planos
					ds_restricao_regra_w := ds_restricao_regra_w || pls_tipos_ocor_pck.enter_w ||
					'			and	(benef.ie_regulamentacao in(''P'', ''A'') and regra.ie_bloqueia_prod_reg = ''S'') ';
				end if;

			end if;
			-- Exigência de Nota Fiscal
			-- Depende do Cadastro
			if (r_C02_w.ie_exige_nf = 'S') then
				ds_restricao_regra_w := ds_restricao_regra_w || pls_tipos_ocor_pck.enter_w ||
					'			and	(mat.nr_nota_fiscal is null and regra.ie_nota_fiscal = ''S'') ';
			end if;

			ds_restricao_regra_w := ds_restricao_regra_w || pls_tipos_ocor_pck.enter_w;
		end if; -- Fim restricões regra
		ds_select_w := 	'select	sel.nr_sequencia nr_seq_selecao, ' 	  || pls_tipos_ocor_pck.enter_w ||
				'	null ds_observacao,		 '	  || pls_tipos_ocor_pck.enter_w ||
					ds_campos_idade_regra_w			  || pls_tipos_ocor_pck.enter_w||
				'  '''||r_C02_w.ie_consiste_idade ||' '' ie_consiste_idade, ' ||pls_tipos_ocor_pck.enter_w ||
				'	obter_idade(benef.dt_nascimento, conta.dt_atendimento, ''A'') qt_idade_conta_anos '|| pls_tipos_ocor_pck.enter_w ||
				'from	pls_oc_cta_selecao_ocor_v sel, 	 ' 	  || pls_tipos_ocor_pck.enter_w ||
				'	pls_conta_mat_ocor_v mat, 	 '	  || pls_tipos_ocor_pck.enter_w ||
					ds_tabela_restricao_regra_w 		  || pls_tipos_ocor_pck.enter_w||
				'	pls_conta_ocor_v conta, 	 '	  || pls_tipos_ocor_pck.enter_w ||
				'	pls_segurado_conta_v benef  ' 		  || pls_tipos_ocor_pck.enter_w ||
				'where	sel.nr_id_transacao = :nr_id_transacao '  || pls_tipos_ocor_pck.enter_w ||
				'and	sel.ie_valido = ''S'' 		 '	  || pls_tipos_ocor_pck.enter_w ||
				'and	conta.nr_sequencia = sel.nr_seq_conta '   || pls_tipos_ocor_pck.enter_w ||
				'and	mat.nr_sequencia = sel.nr_seq_conta_mat ';


		--No evento de consistência do reembolso, pega o segurado do protocolo
		if (dados_regra_p.ie_evento = 'RE') then
			ds_restricao_benef_w :=  pls_tipos_ocor_pck.enter_w || ' and	benef.nr_sequencia = conta.nr_seq_segurado_prot ' || pls_tipos_ocor_pck.enter_w;
		else --busca o segurado da conta
			ds_restricao_benef_w :=  pls_tipos_ocor_pck.enter_w || ' and	benef.nr_sequencia = conta.nr_seq_segurado ' || pls_tipos_ocor_pck.enter_w;
		end if;


		if (r_C02_w.ie_exige_nf = 'M') then
			ds_restricao_geral_w := ds_restricao_geral_w || pls_tipos_ocor_pck.enter_w || 'and	mat.nr_nota_fiscal is null ';
		end if;

		-- Montar o select utilizando as restrições informadas na regra.
		ds_select_w := ds_select_w|| ds_restricao_benef_w || ds_restricao_regra_w || ds_restricao_geral_w;

		valor_bind_w := sql_pck.bind_variable(	':nr_id_transacao', nr_id_transacao_p, valor_bind_w);
		valor_bind_w  := sql_pck.executa_sql_cursor(	ds_select_w, valor_bind_w );
		Begin
			loop
				fetch cursor_w bulk collect into	tb_seq_selecao_w, tb_ds_observacao_w, tb_idade_minima_w,
									tb_idade_maxima_w, tb_consiste_idade_w, tb_idade_conta_anos_w
				limit pls_util_pck.qt_registro_transacao_w;
				exit when tb_seq_selecao_w.count = 0;

					nr_seq_selecao_w.delete;
					ds_observacao_w.delete;
					qt_reg_w := 0;
					for i in tb_seq_selecao_w.first..tb_seq_selecao_w.last loop

						--Se não validar a idade, então o registro é valido e prosseguirá
						if (tb_consiste_idade_w(i) = 'S') then

							if (tb_idade_conta_anos_w(i) < tb_idade_minima_w(i) or
								 tb_idade_conta_anos_w(i) > tb_idade_maxima_w(i)) then

								nr_seq_selecao_w(qt_reg_w) := tb_seq_selecao_w(i);
								ds_observacao_w(qt_reg_w) := tb_seq_selecao_w(i);
								ie_valido_w(qt_reg_w) := 'S';
								qt_reg_w := qt_reg_w + 1;
							end if;
						else
							nr_seq_selecao_w(qt_reg_w) := tb_seq_selecao_w(i);
							ds_observacao_w(qt_reg_w) := tb_seq_selecao_w(i);
							ie_valido_w(qt_reg_w) := 'S';
							qt_reg_w := qt_reg_w + 1;
						end if;

					end loop; -- for
					CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	nr_seq_selecao_w, pls_util_cta_pck.clob_table_vazia_w,
											'SEQ', ds_observacao_w, ie_valido_w, nm_usuario_p);
			end loop;
			close cursor_w;

		exception
			when others then
			-- se deu algo e o cursor está aberto fecha ele
			if (cursor_w%isopen) then
				close cursor_w;
			end if;

			-- Tratar erro gerado no sql dinâmico, será inserido registro no log e abortado o processo exibindo mensagem de erro.
			CALL pls_tipos_ocor_pck.trata_erro_sql_dinamico(dados_regra_p, ds_select_w, nr_id_transacao_p, nm_usuario_p);
		end;

	end loop; -- C02
	-- seta os registros que serão válidos ou inválidos após o processamento
	CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_12 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

