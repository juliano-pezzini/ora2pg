-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_cco_sib_dinam ( nr_seq_lote_sib_p bigint, ie_gravar_cartao_sist_ant_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_cco_w			bigint;
ie_digito_cco_w			smallint;
nr_seq_segurado_w		bigint;
nr_seq_retorno_sib_w		bigint;
ie_tipo_reg_w			smallint;
nm_beneficiario_w		varchar(70);
cd_cco_w			pls_segurado.cd_cco%type;

C01 CURSOR FOR
	SELECT	1 ie_tipo_reg,
		a.nr_sequencia nr_seq_retorno,
		a.nr_cco,
		a.ie_digito_cco,
		c.nr_sequencia nr_seq_segurado,
		nm_beneficiario
	from	pls_retorno_sib a,
		pls_segurado_carteira b,
		pls_segurado c,
		pls_lote_retorno_sib	d
	where	b.nr_seq_segurado	= c.nr_sequencia
	and	a.nr_seq_lote_sib	= d.nr_sequencia
	and	d.nr_sequencia		= nr_seq_lote_sib_p
	and	b.cd_estabelecimento	= cd_estabelecimento_p
	and	a.cd_carteira_pesquisa	= b.cd_usuario_plano
	and	coalesce(c.nr_cco::text, '') = ''
	and	ie_gravar_cartao_sist_ant_p	= 'N'
	
UNION ALL

	SELECT	3 ie_tipo_reg,
		a.nr_sequencia nr_seq_retorno,
		a.nr_cco,
		a.ie_digito_cco,
		c.nr_sequencia nr_seq_segurado,
		nm_beneficiario
	from	pls_retorno_sib a,
		pls_segurado_carteira b,
		pls_segurado c,
		pls_lote_retorno_sib	d
	where	b.nr_seq_segurado	= c.nr_sequencia
	and	a.nr_seq_lote_sib	= d.nr_sequencia
	and	d.nr_sequencia		= nr_seq_lote_sib_p
	and	b.cd_estabelecimento	= cd_estabelecimento_p
	and	a.cd_carteira_pesquisa	= b.cd_usuario_plano
	and	(c.nr_cco IS NOT NULL AND c.nr_cco::text <> '')
	and	ie_gravar_cartao_sist_ant_p	= 'N'
	
UNION ALL

	select	1 ie_tipo_reg,
		a.nr_sequencia nr_seq_retorno,
		a.nr_cco,
		a.ie_digito_cco,
		c.nr_sequencia nr_seq_segurado,
		nm_beneficiario
	from	pls_retorno_sib a,
		pls_segurado_carteira b,
		pls_segurado c,
		pls_lote_retorno_sib	d
	where	b.nr_seq_segurado	= c.nr_sequencia
	and	a.nr_seq_lote_sib	= d.nr_sequencia
	and	d.nr_sequencia		= nr_seq_lote_sib_p
	and	b.cd_estabelecimento	= cd_estabelecimento_p
	and	c.cd_cartao_ident_ans_sist_ant	= a.cd_usuario_plano
	and	coalesce(c.nr_cco::text, '') = ''
	and	ie_gravar_cartao_sist_ant_p	= 'S'
	
UNION ALL

	select	3 ie_tipo_reg,
		a.nr_sequencia nr_seq_retorno,
		a.nr_cco,
		a.ie_digito_cco,
		c.nr_sequencia nr_seq_segurado,
		nm_beneficiario
	from	pls_retorno_sib a,
		pls_segurado_carteira b,
		pls_segurado c,
		pls_lote_retorno_sib	d
	where	b.nr_seq_segurado	= c.nr_sequencia
	and	a.nr_seq_lote_sib	= d.nr_sequencia
	and	d.nr_sequencia		= nr_seq_lote_sib_p
	and	b.cd_estabelecimento	= cd_estabelecimento_p
	and	c.cd_cartao_ident_ans_sist_ant	= a.cd_usuario_plano
	and	(c.nr_cco IS NOT NULL AND c.nr_cco::text <> '')
	and	ie_gravar_cartao_sist_ant_p	= 'S';

TYPE 		fetch_array IS TABLE OF c01%ROWTYPE;
s_array 	fetch_array;
i		integer := 1;
type Vetor is table of fetch_array index by integer;
Vetor_c01_w	Vetor;

BEGIN

CALL gravar_processo_longo('Comparando as carteiras dos beneficiÃ¡rios' ,'PLS_GERAR_CCO_SIB_DINAM',0);

open c01;
loop
FETCH C01 BULK COLLECT INTO s_array LIMIT 1000;
	Vetor_c01_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on C01 */
END LOOP;
CLOSE C01;

for i in 1..Vetor_c01_w.COUNT loop
	s_array := Vetor_c01_w(i);
	for z in 1..s_array.COUNT loop
	ie_tipo_reg_w		:= s_array[z].ie_tipo_reg;
	nr_seq_retorno_sib_w	:= s_array[z].nr_seq_retorno;
	nr_cco_w		:= s_array[z].nr_cco;
	ie_digito_cco_w		:= s_array[z].ie_digito_cco;
	nr_seq_segurado_w	:= s_array[z].nr_seq_segurado;
	nm_beneficiario_w	:= s_array[z].nm_beneficiario;

	begin
	CALL gravar_processo_longo(nm_beneficiario_w,'PLS_GERAR_CCO_SIB_DINAM',-1);

	if (ie_tipo_reg_w = 3) then
		update	pls_retorno_sib
		set	nr_seq_segurado_encontrado	= nr_seq_segurado_w,
			dt_atualizacao			= clock_timestamp(),
			nm_usuario			= nm_usuario_p
		where	nr_sequencia			= nr_seq_retorno_sib_w;
	elsif (coalesce(nr_seq_segurado_w,0) > 0) then
		cd_cco_w	:= lpad(nr_cco_w,10,0)||lpad(ie_digito_cco_w,2,0);
		update	pls_segurado
		set	nr_cco		= nr_cco_w,
			ie_digito_cco	= ie_digito_cco_w,
			cd_cco		= cd_cco_w,
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_sequencia	= nr_seq_segurado_w;

		update	pls_retorno_sib
		set	nr_seq_segurado	= nr_seq_segurado_w,
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_sequencia	= nr_seq_retorno_sib_w;
	end if;

	end;
	end loop;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_cco_sib_dinam ( nr_seq_lote_sib_p bigint, ie_gravar_cartao_sist_ant_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

