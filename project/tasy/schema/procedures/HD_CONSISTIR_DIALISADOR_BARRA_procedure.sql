-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_consistir_dialisador_barra ( cd_barras_p bigint, ie_tag_p bigint, cd_pessoa_fisica_dial_p text, cd_pessoa_fisica_p INOUT text, ds_mensagem_p INOUT text, cd_perfil_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
cd_pessoa_fisica_w		varchar(255);
cd_pessoa_fisica_origem_w	varchar(255);
ds_mensagem_w			varchar(255);

ie_existe_dializador_w		varchar(1)	:= 'N';

/*parametros*/
 
VarRestringeDialUnidAtual	varchar(1);
VarGerarMontarMesmoProcesso	varchar(1);
						

BEGIN 
 
if (cd_barras_p IS NOT NULL AND cd_barras_p::text <> '') then 
 
	VarRestringeDialUnidAtual	:= coalesce(Obter_valor_param_usuario(7009, 138, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p),'N');
	VarGerarMontarMesmoProcesso	:= coalesce(Obter_valor_param_usuario(7009, 130, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p),'N');
 
	if (ie_tag_p = 1) then 
	 
		begin 
		select	'S' 
		into STRICT	ie_existe_dializador_w 
		from	hd_dializador 
		where	nr_sequencia = cd_barras_p  LIMIT 1;
		exception 
		when others then 
			ie_existe_dializador_w	:= 'N';
		end;
	 
		select	max(cd_pessoa_fisica) 
		into STRICT 	cd_pessoa_fisica_w 
		from	hd_dializador           
		where	nr_sequencia = cd_barras_p 
		and 	coalesce(dt_descarte::text, '') = ''         
		and 	ie_status in ('O')        
		and 	((dt_prim_lavagem IS NOT NULL AND dt_prim_lavagem::text <> '') or (ie_tipo = 'M' )) 
		and	((VarRestringeDialUnidAtual = 'S' and 
			((VarGerarMontarMesmoProcesso = 'S' and ((hd_obter_unid_atual_dialisador(nr_sequencia, 'C') = hd_obter_dados_dialise(hd_obter_hemodialise_atual(cd_pessoa_fisica, 'U'), 'SU')) or (hd_obter_dados_dialise(hd_obter_hemodialise_atual(cd_pessoa_fisica, 'U'), 'SU') = 0)))	or (VarGerarMontarMesmoProcesso <> 'S' and hd_obter_unid_atual_dialisador(nr_sequencia, 'C') = hd_obter_dados_dialise(hd_obter_hemodialise_atual(cd_pessoa_fisica, 'U'), 'SU') and cd_estabelecimento = cd_estabelecimento_p))) or (VarRestringeDialUnidAtual <> 'S'));
				 
		if (ie_existe_dializador_w <> 'S') then 
			ds_mensagem_w	:= Obter_texto_tasy(85154, wheb_usuario_pck.get_nr_seq_idioma);		
		elsif (coalesce(cd_pessoa_fisica_w::text, '') = '') then --Verifica se o paciente possui dializador disponível 
			ds_mensagem_w	:= Obter_texto_tasy(85078, wheb_usuario_pck.get_nr_seq_idioma);
		elsif (substr(hd_obter_se_dial_liberado(cd_pessoa_fisica_w),1,1) <> 'S') then --verifica se o paciente possui dializador preparado 
			ds_mensagem_w	:= Obter_texto_tasy(85038, wheb_usuario_pck.get_nr_seq_idioma);
		end if;
		 
		if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then 
			ds_mensagem_p	:= ds_mensagem_w;
		elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then 
			cd_pessoa_fisica_p	:= cd_pessoa_fisica_w;
		end if;		
		 
	elsif (ie_tag_p = 2) then		 
	 
		begin 
		select	'S' 
		into STRICT	ie_existe_dializador_w 
		from	hd_dializador 
		where	nr_sequencia = cd_barras_p  LIMIT 1;
		exception 
		when others then 
			ie_existe_dializador_w	:= 'N';
		end;
	 
		select	max(cd_pessoa_fisica) 
		into STRICT	cd_pessoa_fisica_origem_w 
		from	hd_dializador 
		where	nr_sequencia = cd_barras_p;
				 
		 
		if (ie_existe_dializador_w <> 'S') then 
			ds_mensagem_w	:= Obter_texto_tasy(85154, wheb_usuario_pck.get_nr_seq_idioma);		
		elsif (cd_pessoa_fisica_origem_w <> cd_pessoa_fisica_dial_p) then 
			ds_mensagem_w	:= Obter_texto_tasy(85155, wheb_usuario_pck.get_nr_seq_idioma);
		elsif (coalesce(cd_pessoa_fisica_dial_p::text, '') = '') then --Verifica se o paciente possui dializador disponível 
			ds_mensagem_w	:= Obter_texto_tasy(85078, wheb_usuario_pck.get_nr_seq_idioma);
		elsif (substr(hd_obter_se_dial_liberado(cd_pessoa_fisica_dial_p),1,1) <> 'S') then --verifica se o paciente possui dializador preparado 
			ds_mensagem_w	:= Obter_texto_tasy(85038, wheb_usuario_pck.get_nr_seq_idioma);
		end if;
		 
		if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then 
			ds_mensagem_p	:= ds_mensagem_w;
		elsif (cd_pessoa_fisica_dial_p IS NOT NULL AND cd_pessoa_fisica_dial_p::text <> '') then 
			cd_pessoa_fisica_p	:= cd_pessoa_fisica_dial_p;
		end if;		
	end if;
end if;
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_consistir_dialisador_barra ( cd_barras_p bigint, ie_tag_p bigint, cd_pessoa_fisica_dial_p text, cd_pessoa_fisica_p INOUT text, ds_mensagem_p INOUT text, cd_perfil_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

