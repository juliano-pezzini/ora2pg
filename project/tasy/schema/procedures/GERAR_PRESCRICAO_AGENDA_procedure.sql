-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prescricao_agenda ( nr_seq_agenda_p bigint, nm_usuario_p text, nr_prescricao_p INOUT bigint, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_prescricao_w				bigint;
cd_intervalo_w             	integer   	:= 9;
cd_setor_atendimento_w		integer 	:= 0;
ie_origem_inf_w				varchar(1);
ie_adep_w		    varchar(10);
ie_utiliza_med_req_w	    varchar(1);
ie_forma_adep_w		    varchar(10);
ie_existe_regra_w		varchar(1);
cd_perfil_w				bigint;
ie_cirurgiao_prescritor_w	varchar(1);
dt_primeiro_horario_w	prescr_medica.dt_primeiro_horario%type;


BEGIN

select	coalesce(max(cd_setor_exclusivo),0)
into STRICT		cd_setor_atendimento_w
from		Agenda b,
		agenda_paciente a
where 	a.cd_agenda	= b.cd_agenda
  and	a.nr_sequencia	= nr_seq_agenda_p;

if (cd_setor_atendimento_w = 0) then
	select cd_setor_atendimento
	into STRICT	cd_setor_atendimento_w
	from usuario
	where nm_usuario = nm_usuario_p;
end if;

select	coalesce(max(a.nr_prescricao),0)
into STRICT	nr_prescricao_w
from	agenda_paciente b,
	cirurgia a
where	a.nr_cirurgia		= b.nr_cirurgia
and	b.nr_sequencia		= nr_seq_agenda_p;

if (nr_prescricao_w = 0) then
	select	coalesce(max(nr_prescricao),0)
	into STRICT	nr_prescricao_w
	from	prescr_medica
	where	nr_seq_agenda	=	nr_seq_agenda_p
	and		coalesce(ie_tipo_prescr_cirur::text, '') = '';
end if;

if (nr_prescricao_w = 0) then
	begin

	-- Obter ie_origem_inf se é médico ou não
	select 	coalesce(max('1'),'3')
	into STRICT	ie_origem_inf_w
	from	Medico b,
		Usuario a
	where 	a.nm_usuario		= nm_usuario_p
	  and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;

	Select 	nextval('prescr_medica_seq')
	into STRICT  	nr_prescricao_w
	;

	ie_utiliza_med_req_w := Obter_Param_Usuario(871, 174, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_utiliza_med_req_w);
	ie_forma_adep_w := Obter_Param_Usuario(924, 246, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_forma_adep_w);
	ie_cirurgiao_prescritor_w := Obter_Param_Usuario(871, 831, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_cirurgiao_prescritor_w);

	if (ie_forma_adep_w = 'DS') then
		select	coalesce(max(ie_adep),'N')
		into STRICT	ie_adep_w
		from	setor_atendimento
		where	cd_setor_atendimento = cd_setor_atendimento_w;
        elsif (ie_forma_adep_w = 'NV') then
		ie_adep_w   := 'N';
        elsif (ie_forma_adep_w = 'PV') then
		ie_adep_w := 'S';
        elsif (ie_forma_adep_w = 'PNV') then
		ie_adep_w := 'N';
	else
		ie_adep_w := 'S';
	end if;

	cd_perfil_w	:= coalesce(Obter_perfil_ativo,0);

	select	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
	into STRICT	ie_existe_regra_w
	from	prescr_horario_setor
	where	coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0)
	and	coalesce(nm_usuario_regra, coalesce(nm_usuario_p, 0))			= coalesce(nm_usuario_p, 0)
	and	coalesce(cd_estabelecimento, cd_estabelecimento_p)	= cd_estabelecimento_p
	and	coalesce(cd_perfil, cd_perfil_w)			= cd_perfil_w
	and	(('R'	= coalesce(ie_funcao,'A')) or (coalesce(ie_funcao,'A')	= 'A'));

	select	coalesce(Obter_Prim_Horario_Prescricao(a.nr_atendimento, cd_setor_atendimento_w, to_date(to_char(a.dt_agenda,'dd/mm/yyyy') || ' ' || to_char(hr_inicio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'), nm_usuario_p, 'R'),a.hr_inicio)
	into STRICT	dt_primeiro_horario_w
	from	agenda_paciente a
	where	a.nr_sequencia = nr_seq_agenda_p;

	insert into prescr_medica(
 		NR_PRESCRICAO            ,
	 	CD_PESSOA_FISICA         ,
		NR_ATENDIMENTO           ,
		CD_MEDICO                ,
		DT_PRESCRICAO            ,
		DT_ATUALIZACAO           ,
		NM_USUARIO               ,
		NM_USUARIO_ORIGINAL	 ,
		NR_HORAS_VALIDADE        ,
		DT_PRIMEIRO_HORARIO      ,
		DT_LIBERACAO             ,
		CD_SETOR_ATENDIMENTO,
		CD_SETOR_entrega,
		dt_entrega,
		IE_ORIGEM_INF,
		nr_seq_agenda,
		ie_recem_nato,
		cd_estabelecimento,
		cd_prescritor,
		ie_adep)
	SELECT 	nr_prescricao_w,
	      	a.cd_pessoa_fisica,
	      	a.nr_atendimento,
			CASE WHEN ie_utiliza_med_req_w='S' THEN coalesce(a.cd_medico_req, a.cd_medico)  ELSE a.cd_medico END ,
	      	to_date(to_char(a.dt_agenda,'dd/mm/yyyy') || ' ' ||
			to_char(hr_inicio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'),
	     	clock_timestamp(),
	      	nm_usuario_p,
	    	nm_usuario_p,
	      	24,
	      	CASE WHEN ie_existe_regra_w='S' THEN  dt_primeiro_horario_w  ELSE a.hr_inicio END ,
	      	null,
	      	cd_setor_atendimento_w,
	      	cd_setor_atendimento_w,
	      	null,
	      	ie_origem_inf_w,
	      	nr_seq_agenda_p,
		'N',
		cd_estabelecimento_p,
		CASE WHEN ie_cirurgiao_prescritor_w='S' THEN  a.cd_medico  ELSE obter_dados_usuario_opcao(nm_usuario_p, 'C') END ,
		ie_adep_w
	from	agenda_paciente a
	where	a.nr_sequencia = nr_seq_agenda_p;

	end;
else
	begin

	update	prescr_medica
	set	nr_seq_agenda	= nr_seq_agenda_p
	where	nr_prescricao	= nr_prescricao_w;

	end;
end if;

COMMIT;

nr_prescricao_p		:= nr_prescricao_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescricao_agenda ( nr_seq_agenda_p bigint, nm_usuario_p text, nr_prescricao_p INOUT bigint, cd_estabelecimento_p bigint) FROM PUBLIC;

