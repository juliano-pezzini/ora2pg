-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_laudo_pacs_carestream ( na_accessionnumber_p text, cd_medico_p text, ds_caminho_pdf_p text) AS $body$
DECLARE

 
nm_usuario_w    		varchar(15);
nr_prescricao_w    		bigint;
nr_seq_prescr_w    		integer;
nr_atendimento_w  		bigint;
cd_setor_atendimento_w   	integer;
dt_entrada_unidade_w  	timestamp;
nr_seq_propaci_w  		bigint;
nr_laudo_w    		bigint;
ds_titulo_laudo_w  		varchar(255) := wheb_mensagem_pck.get_texto(299648) || ' MultiMEDxPACS'; -- Integração 
ds_laudo_w    		text;
cd_protocolo_w    		bigint  := null;
ds_erro_w    		varchar(2000);
nr_seq_laudo_w			bigint	 := 0;
cd_medico_exec_w		varchar(10);
DT_BAIXA_w			timestamp;
DT_RESULTADO_w			timestamp;
cd_medico_solicitante_w		varchar(1);
nm_medico_solicitante_w		varchar(60);
ie_forma_geracao_w		varchar(2)	:=	'N';
cd_estabelecimento_w		integer;
ie_desc_proc_titulo_laudo_w	varchar(1)	:= 	'S';
nr_seq_proc_interno_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		integer;
qt_procedimento_w		bigint;
cd_setor_atend_prescr_w		bigint;
cd_medico_exec_prescr_w 	varchar(10);
nr_seq_exame_w			bigint;
ie_lado_w			varchar(1);
nr_doc_convenio_w 		varchar(20);
cd_senha_w			varchar(20);	
dt_laudo_w			timestamp;
ie_origem_inf_dt_laudo_w	varchar(10);
nr_sequencia_w			bigint;
ds_texto_w			varchar(255);


BEGIN 
  
if (na_accessionnumber_p IS NOT NULL AND na_accessionnumber_p::text <> '') and (cd_medico_p IS NOT NULL AND cd_medico_p::text <> '') and (ds_caminho_pdf_p IS NOT NULL AND ds_caminho_pdf_p::text <> '') then 
	 
	select 	max(coalesce(vl_parametro,vl_parametro_padrao)) 
	into STRICT	cd_medico_solicitante_w 
	from 	funcao_parametro 
	where 	cd_funcao = 28 
	and 	nr_sequencia = 78;
		 
	 
	select	coalesce(max(a.nr_prescricao),null), 
		CASE WHEN cd_medico_solicitante_w='S' THEN max(substr(obter_nome_pf(b.cd_medico),1,60))  ELSE null END , 
		coalesce(max(a.nr_sequencia),null), 
		coalesce(max(substr(obter_desc_prescr_proc(cd_procedimento, ie_origem_proced, nr_seq_proc_interno),1,255)), ds_titulo_laudo_w), 
		coalesce(max(a.cd_protocolo),null), 
		coalesce(max(b.nr_atendimento),null), 
		coalesce(max(b.dt_prescricao),null), 
		max(a.dt_baixa), 
		max(a.dt_resultado), 
		max(b.cd_estabelecimento), 
		max(a.nr_seq_proc_interno), 
		max(a.cd_procedimento), 
		max(a.ie_origem_proced), 
		max(a.qt_procedimento), 
		max(a.cd_setor_atendimento), 
		max(a.cd_medico_exec), 
		max(a.nr_seq_exame), 
		max(a.ie_lado), 
		max(a.nr_doc_convenio), 
		max(a.cd_senha) 
	into STRICT	nr_prescricao_w,		 
		nm_medico_solicitante_w, 
		nr_seq_prescr_w, 
		ds_titulo_laudo_w, 
		cd_protocolo_w, 
		nr_atendimento_w, 
		dt_entrada_unidade_w, 
		DT_BAIXA_w, 
		DT_RESULTADO_w, 
		cd_estabelecimento_w, 
		nr_seq_proc_interno_w, 
		cd_procedimento_w,	 
		ie_origem_proced_w, 
		qt_procedimento_w,	 
		cd_setor_atend_prescr_w, 
		cd_medico_exec_prescr_w, 
		nr_seq_exame_w,		 
		ie_lado_w,		 
		nr_doc_convenio_w,	 
		cd_senha_w				 
	from 	prescr_medica b, 
		prescr_procedimento a 
	where 	a.nr_acesso_dicom = na_accessionnumber_p 
	 and	a.nr_prescricao = b.nr_prescricao;
	  
				 
	select	coalesce(obter_select_concatenado_bv('select nvl(max(ie_origem_inf_dt_laudo),''R'') from parametro_integracao_pacs where cd_estabelecimento = :cd_estabelecimento', 
						'cd_estabelecimento=' || cd_estabelecimento_w,','),'R') 
	into STRICT	ie_origem_inf_dt_laudo_w 
	;
 
	if (coalesce(dt_baixa_w::text, '') = '') then	 
		dt_baixa_w	:= clock_timestamp();		
		update	prescr_procedimento 
		set	cd_motivo_baixa = 1, 
			dt_baixa	= dt_baixa_w 
		where  nr_prescricao = nr_prescricao_w 
		and   nr_sequencia = nr_seq_prescr_w;
	end if;
 
	if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then	 
		select coalesce(max(nr_atendimento), nr_Atendimento_w), 
			coalesce(max(cd_setor_atendimento), null), 
			coalesce(max(dt_entrada_unidade), dt_entrada_unidade_w), 
			coalesce(max(nr_sequencia), null), 
			coalesce(max(nm_usuario), 'PACS'), 
			coalesce(max(cd_medico_executor), null) 
		into STRICT  nr_atendimento_w, 
			cd_setor_atendimento_w, 
			dt_entrada_unidade_w, 
			nr_seq_propaci_w, 
			nm_usuario_w, 
			cd_medico_exec_w 
		from  procedimento_paciente 
		where  nr_prescricao = nr_prescricao_w 
		and   nr_sequencia_prescricao = nr_seq_prescr_w;
		 
		if (coalesce(cd_setor_atendimento_w::text, '') = '') then 
			--gerar_proced_paciente_pendente (nr_prescricao_w, nr_seq_prescr_w, 'TEB', null, null, null, null, nr_seq_propaci_w ); 
			 
					 
			CALL gerar_proc_pac_item_prescr_up(nr_prescricao_w, nr_seq_prescr_w, null, null,nr_seq_proc_interno_w, 
				cd_procedimento_w, ie_origem_proced_w, 
				qt_procedimento_w, cd_setor_atend_prescr_w, 
				9, null, 
				'PACS', cd_medico_exec_prescr_w, nr_seq_exame_w, coalesce(ie_lado_w,'A'), null, null, null, null, null, null, 
				nr_doc_convenio_w, cd_senha_w);
			 
			 
			select coalesce(max(nr_atendimento), nr_Atendimento_w), 
				coalesce(max(cd_setor_atendimento), null), 
				coalesce(max(dt_entrada_unidade), dt_entrada_unidade_w), 
				coalesce(max(nr_sequencia), null), 
				coalesce(max(nm_usuario), 'PACS'), 
				coalesce(max(cd_medico_executor), null) 
			into STRICT  nr_atendimento_w, 
				cd_setor_atendimento_w, 
				dt_entrada_unidade_w, 
				nr_seq_propaci_w, 
				nm_usuario_w, 
				cd_medico_exec_w 
			from  procedimento_paciente 
			where  nr_prescricao = nr_prescricao_w 
			and   nr_sequencia_prescricao = nr_seq_prescr_w;
		 
		end if;
	end if;  	
	 
 
	select 	coalesce(max(nr_laudo),0) + 1 
	into STRICT	nr_laudo_w 
	from	laudo_paciente 
	where	nr_atendimento = nr_atendimento_w;
	 
	 
	select	coalesce(max(nr_sequencia),0) 
	into STRICT	nr_seq_laudo_w 
	from	laudo_paciente 
	where	nr_atendimento	= nr_atendimento_w 
	and	nr_seq_proc	= nr_seq_propaci_w;
 
	if (nr_seq_laudo_w > 0) then	 
		CALL gravar_auditoria_mmed(nr_prescricao_w,nr_seq_prescr_w,nm_usuario_w,19,null);		
	end if;
 
 
	if (nr_seq_laudo_w = 0) then 
	 
		if (dt_resultado_w	> clock_timestamp())then 
			dt_resultado_w	:= clock_timestamp();
		end if;
			 
		select 	nextval('laudo_paciente_seq') 
		into STRICT	nr_sequencia_w 
		;
		 
		if (coalesce(ie_origem_inf_dt_laudo_w,'R') = 'R') then		 
			dt_laudo_w := dt_resultado_w;			
		elsif (ie_origem_inf_dt_laudo_w = 'I') then 
			dt_laudo_w := clock_timestamp();
		end if;
		 
		ds_texto_w := substr(wheb_mensagem_pck.get_texto(299648),1,255);-- Integração 
	
		insert into laudo_paciente(	 
			nr_sequencia,     
			nr_atendimento, 
			dt_entrada_unidade,  		  
			nr_laudo, 
			nm_usuario,    			  
			dt_atualizacao, 
			cd_medico_resp,    		  
			ds_titulo_laudo, 
			dt_laudo,    			  
			ie_normal,    			  
			dt_exame, 
			nr_prescricao,    		  
			ds_laudo, 
			dt_aprovacao,    		  
			nm_usuario_aprovacao, 
			cd_protocolo,    		  
			nr_seq_proc,    		  
			nr_seq_prescricao, 
			dt_liberacao,  
			nm_usuario_liberacao, 
			cd_setor_atendimento,  	  
			dt_integracao,    		  
			nm_medico_solicitante, 
			ds_arquivo, 
			ie_formato, 
			qt_imagem) 
		values ( 
			nr_sequencia_w,  	  
			nr_atendimento_w, 
			dt_entrada_unidade_w,     	  
			nr_laudo_w, 
			nm_usuario_w,      	  
			clock_timestamp(), 
			CASE WHEN cd_medico_p='1' THEN '5081'  ELSE cd_medico_p END , 
			ds_titulo_laudo_w, 
			dt_laudo_w, 
			'S',        		  
			dt_baixa_w, 
			nr_prescricao_w,    	  
			ds_laudo_w, 
			clock_timestamp(),  			  
			nm_usuario_w, 
			cd_protocolo_w,      	  
			nr_seq_propaci_w,    	  
			nr_seq_prescr_w, 
			clock_timestamp(),  
			ds_texto_w, 
			cd_setor_atendimento_w,     
			clock_timestamp(),      		  
			nm_medico_solicitante_w, 
			ds_caminho_pdf_p, 
			3, 
			0);
			 
		update	prescr_procedimento 
		set	ie_status_execucao = '40' 
		where	nr_acesso_dicom = na_accessionnumber_p;
			 
		update	procedimento_paciente 
		set	nr_laudo 		= nr_sequencia_w 
		where	nr_sequencia		= nr_seq_propaci_w;	
		 
		CALL gravar_auditoria_mmed(nr_prescricao_w,nr_seq_prescr_w,nm_usuario_w,18,null);
			 
		CALL Atualizar_Propaci_Medico_Laudo(nr_sequencia_w, 'EX', nm_usuario_w);
		CALL Atualizar_Propaci_Medico_Laudo(nr_sequencia_w, 'EXC', nm_usuario_w);
		 
		if (coalesce(cd_medico_exec_w::text, '') = '') then 
 
			update	procedimento_paciente 
			set 	cd_medico = cd_medico_p	 
			where	nr_sequencia = nr_seq_propaci_w;
 
		end if;
		 
		 
	end if;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_laudo_pacs_carestream ( na_accessionnumber_p text, cd_medico_p text, ds_caminho_pdf_p text) FROM PUBLIC;

