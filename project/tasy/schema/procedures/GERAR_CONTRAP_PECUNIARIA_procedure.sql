-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_contrap_pecuniaria (nm_usuario_p text, nr_seq_periodo_p text) AS $body$
DECLARE


vl_vencido_w            	w_diops_contrap_pecun.vl_vencido%type;
vl_vencer_w             	w_diops_contrap_pecun.vl_vencer%type;
vl_recebido_w           	w_diops_contrap_pecun.vl_recebido%type;
cd_tipo_contratacao_w   	w_diops_contrap_pecun.cd_tipo_contratacao%type;
dt_inicio_periodo_w     	diops_periodo.dt_periodo_inicial%type;
dt_final_periodo_w      	diops_periodo.dt_periodo_final%type;
ie_periodo_cobertura_w  	w_diops_contrap_pecun.ie_periodo_cobertura%type;
ie_tipo_contratacao_w		pls_plano.ie_tipo_contratacao%type;
cd_estab_periodo_w		estabelecimento.cd_estabelecimento%type;
cd_empresa_w                    empresa.cd_empresa%type;
vl_emitido_w			diops_contrap_pecuniarias.vl_emitido%type;
vl_vencido_ww			diops_contrap_pecuniarias.vl_vencido%type;
vl_vencer_ww			diops_contrap_pecuniarias.vl_vencer%type;
vl_recebido_ww			diops_contrap_pecuniarias.vl_recebido%type;
nr_seq_mensalidade_w		pls_mensalidade.nr_sequencia%type;
dt_vencimento_w			titulo_receber.dt_vencimento%type;
vl_saldo_titulo_w		titulo_receber.vl_saldo_titulo%type;

nr_titulo_w			titulo_receber.nr_titulo%type;
cd_tipo_contratacao_ww   	diops_contrap_pecuniarias.cd_tipo_contratacao%type;
dt_inicio_cobertura_w		pls_mensalidade_segurado.dt_inicio_cobertura%type;
vl_mensalidade_w		pls_mensalidade.vl_mensalidade%type;
vl_itens_seg_w			pls_mensalidade_seg_item.vl_item%type;
vl_saldo_w			pls_mensalidade_seg_item.vl_item%type;
ie_periodo_cobertura_ww  	diops_contrap_pecuniarias.ie_periodo_cobertura%type;
vl_descontos_w			titulo_receber_liq.vl_descontos%type;
ie_data_quadro_w    		valor_dominio.vl_dominio%type;


c_w_contrap_pecuniarias CURSOR FOR
	SELECT	ie_periodo_cobertura,
		nr_seq_mensalidade,
		dt_vencimento,
		nr_titulo,
		dt_inicio_cobertura,
		vl_mensalidade,
		vl_itens_mens,
		ie_tipo_contratacao,
		vl_saldo_titulo
	from	(
		-- Iniciado em competencia anterior
		SELECT  '32' ie_periodo_cobertura,
			a.nr_sequencia nr_seq_mensalidade,
			t.dt_pagamento_previsto dt_vencimento,
			t.nr_titulo,
			c.dt_inicio_cobertura,
			coalesce((	select	sum(x.vl_item)
				from	pls_mensalidade_seg_item x,
					pls_mensalidade_segurado y
				where	x.nr_seq_mensalidade_seg = y.nr_sequencia
				and	y.nr_seq_mensalidade 	= a.nr_sequencia), 0) vl_mensalidade,
			coalesce((	select	sum(x.vl_item)
				from	pls_mensalidade_seg_item x
				where	x.nr_seq_mensalidade_seg = c.nr_sequencia
				and	x.ie_tipo_item in ('1','12','16','18','20','21','22','25','35','36','4','40','41','42','43','45','5')), 0) vl_itens_mens,
			pp.ie_tipo_contratacao ie_tipo_contratacao,
			coalesce(obter_saldo_titulo_receber(t.nr_titulo, dt_final_periodo_w),0) vl_saldo_titulo
		from    pls_mensalidade			a,
			pls_lote_mensalidade    	d,
			titulo_receber			t,
			pls_mensalidade_segurado	c,
			pls_contrato_pagador		p,
			pls_segurado			s,
			pls_plano			pp
		where	a.nr_seq_lote           	= d.nr_sequencia
		and	a.nr_sequencia			= t.nr_seq_mensalidade
		and	c.nr_seq_mensalidade		= a.nr_sequencia
		and	p.nr_sequencia 			= a.nr_seq_pagador
		and	s.nr_sequencia			= c.nr_seq_segurado
		and	pp.nr_sequencia			= s.nr_seq_plano
		and	c.dt_inicio_cobertura		< PKG_DATE_UTILS.start_of(dt_final_periodo_w,'MONTH',0)
		and	d.dt_mesano_referencia  	<= PKG_DATE_UTILS.end_of(dt_final_periodo_w,'MONTH')
		and	((t.dt_liquidacao		> dt_final_periodo_w) or (coalesce(t.dt_liquidacao::text, '') = ''))
		and	coalesce(a.ie_cancelamento,'X') = 'X'
		and	t.ie_situacao <> '3'
		
union all

		-- Competencia atual
		select  CASE WHEN ie_data_quadro_w='N' THEN  to_char(c.dt_inicio_cobertura, 'DD')  ELSE '1' END  ie_periodo_cobertura,
			a.nr_sequencia nr_seq_mensalidade,
			t.dt_pagamento_previsto dt_vencimento,
			t.nr_titulo,
			c.dt_inicio_cobertura,
			coalesce((	select	sum(x.vl_item)
				from	pls_mensalidade_seg_item x,
					pls_mensalidade_segurado y
				where	x.nr_seq_mensalidade_seg = y.nr_sequencia
				and	y.nr_seq_mensalidade 	= a.nr_sequencia), 0) vl_mensalidade,
			coalesce((	select	sum(x.vl_item)
				from	pls_mensalidade_seg_item x
				where	x.nr_seq_mensalidade_seg = c.nr_sequencia
				and	x.ie_tipo_item in ('1','12','16','18','20','21','22','25','35','36','4','40','41','42','43','45','5')), 0) vl_itens_mens,
			pp.ie_tipo_contratacao ie_tipo_contratacao,
			coalesce(obter_saldo_titulo_receber(t.nr_titulo, dt_final_periodo_w),0) vl_saldo_titulo
		from    pls_mensalidade			a,
			pls_lote_mensalidade    	d,
			titulo_receber			t,
			pls_mensalidade_segurado	c,
			pls_contrato_pagador		p,
			pls_segurado			s,
			pls_plano			pp
		where	a.nr_seq_lote           	= d.nr_sequencia
		and	a.nr_sequencia			= t.nr_seq_mensalidade
		and	c.nr_seq_mensalidade		= a.nr_sequencia
		and	p.nr_sequencia 			= a.nr_seq_pagador
		and	s.nr_sequencia			= c.nr_seq_segurado
		and	pp.nr_sequencia			= s.nr_seq_plano
		and	c.dt_inicio_cobertura    between PKG_DATE_UTILS.start_of(dt_final_periodo_w,'MONTH',0) and PKG_DATE_UTILS.end_of(dt_final_periodo_w,'MONTH')
		and	d.dt_mesano_referencia  <= PKG_DATE_UTILS.end_of(dt_final_periodo_w,'MONTH')
		and	coalesce(a.ie_cancelamento,'X') = 'X'
		and	t.ie_situacao <> '3'
		
union all

		-- A iniciar
		select	'0'	ie_periodo_cobertura,            
			a.nr_sequencia nr_seq_mensalidade,
			t.dt_pagamento_previsto dt_vencimento,
			t.nr_titulo,
			c.dt_inicio_cobertura,
			coalesce((	select	sum(x.vl_item)
				from	pls_mensalidade_seg_item x,
					pls_mensalidade_segurado y
				where	x.nr_seq_mensalidade_seg = y.nr_sequencia
				and	y.nr_seq_mensalidade 	= a.nr_sequencia), 0) vl_mensalidade,
			coalesce((	select	sum(x.vl_item)
				from	pls_mensalidade_seg_item x
				where	x.nr_seq_mensalidade_seg = c.nr_sequencia
				and	x.ie_tipo_item in ('1','12','16','18','20','21','22','25','35','36','4','40','41','42','43','45','5')), 0) vl_itens_mens,
			pp.ie_tipo_contratacao ie_tipo_contratacao,
			coalesce(obter_saldo_titulo_receber(t.nr_titulo, dt_final_periodo_w),0) vl_saldo_titulo
		from    pls_mensalidade			a,
			pls_lote_mensalidade    	d,
			titulo_receber			t,
			pls_mensalidade_segurado	c,
			pls_contrato_pagador		p,
			pls_segurado			s,
			pls_plano			pp
		where	a.nr_seq_lote           	= d.nr_sequencia
		and	a.nr_sequencia			= t.nr_seq_mensalidade
		and	c.nr_seq_mensalidade		= a.nr_sequencia
		and	p.nr_sequencia 			= a.nr_seq_pagador
		and	s.nr_sequencia			= c.nr_seq_segurado
		and	pp.nr_sequencia			= s.nr_seq_plano
		and	d.dt_mesano_referencia  <= PKG_DATE_UTILS.end_of(dt_final_periodo_w,'MONTH')
		and	c.dt_inicio_cobertura   > PKG_DATE_UTILS.end_of(dt_final_periodo_w,'MONTH')
		and	coalesce(a.ie_cancelamento,'X') = 'X'
		and	t.ie_situacao <> '3'
		) alias42;
		
c_contrap_pecuniarias CURSOR FOR
	SELECT	cd_tipo_contratacao,
		ie_periodo_cobertura,
		coalesce(sum(vl_emitido),0),
		coalesce(sum(vl_recebido),0),
		coalesce(sum(vl_vencer),0),
		coalesce(sum(vl_vencido),0)
	from	w_diops_contrap_pecun
	where	nr_seq_periodo = nr_seq_periodo_p
	group by ie_periodo_cobertura,
		cd_tipo_contratacao
	order by cd_tipo_contratacao,
		ie_periodo_cobertura;

BEGIN

select 	max(cd_estabelecimento)
into STRICT 	cd_estab_periodo_w
from 	diops_periodo
where	nr_sequencia = nr_seq_periodo_p;

ie_data_quadro_w	:= coalesce(obter_valor_param_usuario(1227,11,obter_perfil_ativo,nm_usuario_p,cd_estab_periodo_w), 'N');

select	pkg_date_utils.start_of(dt_periodo_final,'MONTH',0),
	coalesce(dt_periodo_final,'')
into STRICT	dt_inicio_periodo_w,
	dt_final_periodo_w
from	diops_periodo
where	nr_sequencia = nr_seq_periodo_p;

/* Insere os valores zerados na tabela w_diops_contrap_pecun, para que o quadro sempre tenha todos os campos, mesmo que nao haja valores para os mesmos
Segundo loop vai de 84 a 116 pois sao os valores considerados no XML da ANS, no momento de exibicao em tela eles sao convertidos
*/
for cd_tipo_contratacao in 1..2 loop
  for ie_periodo_cobertura in 84..116 loop

		insert into w_diops_contrap_pecun(
			nr_sequencia,
			cd_tipo_contratacao,
			dt_atualizacao,
			dt_atualizacao_nrec,
			ie_periodo_cobertura,
			nm_usuario,
			nm_usuario_nrec,
			nr_seq_periodo,
			vl_emitido,
			vl_recebido,
			vl_vencer,
			vl_vencido
		) values (
			nextval('w_diops_contrap_pecun_seq'),
			cd_tipo_contratacao,
			clock_timestamp(),
			clock_timestamp(),
			ie_periodo_cobertura,
			nm_usuario_p,
			nm_usuario_p,
			nr_seq_periodo_p,
			0,
			0,
			0,
			0
		);
  end loop;
end loop;

vl_itens_seg_w    := 0;
vl_recebido_w   := 0;

open c_w_contrap_pecuniarias;
loop

	fetch c_w_contrap_pecuniarias into
		ie_periodo_cobertura_w,
		nr_seq_mensalidade_w,
		dt_vencimento_w,
		nr_titulo_w,
		dt_inicio_cobertura_w,
		vl_mensalidade_w,
		vl_itens_seg_w,
		ie_tipo_contratacao_w,
		vl_saldo_titulo_w;
	EXIT WHEN NOT FOUND; /* apply on c_w_contrap_pecuniarias */
	
	vl_vencer_w     := 0;
	vl_vencido_w    := 0;
	vl_recebido_w	:= 0;

	select	coalesce(sum(coalesce(l.vl_recebido, 0)),0),
		coalesce(sum(coalesce(l.vl_descontos,0) + coalesce(l.vl_perdas,0)), 0)
	into STRICT	vl_recebido_w,
		vl_descontos_w
	from	titulo_receber_liq l
	where	l.nr_titulo = nr_titulo_w
	and	l.dt_recebimento <= PKG_DATE_UTILS.end_of(dt_final_periodo_w,'MONTH');


	-- Valor recebido ja proporcional por segurado
	vl_recebido_w := dividir(vl_recebido_w * vl_itens_seg_w, vl_mensalidade_w);

	vl_itens_seg_w := vl_itens_seg_w - coalesce(dividir(vl_descontos_w * vl_itens_seg_w, vl_mensalidade_w),0);

	if (vl_itens_seg_w > vl_recebido_w  and coalesce(vl_saldo_titulo_w, 0) = 0) then
		vl_itens_seg_w := vl_recebido_w;
	end if;

	vl_saldo_w := vl_itens_seg_w - vl_recebido_w;
	
	if (dt_vencimento_w < PKG_DATE_UTILS.start_of(dt_final_periodo_w,'DAY',0)) then
		vl_vencido_w	:= vl_saldo_w;
	elsif (dt_vencimento_w >= PKG_DATE_UTILS.start_of(dt_final_periodo_w,'DAY',0)) then
		vl_vencer_w	:= vl_saldo_w;
	end if;
	
	if (ie_tipo_contratacao_w = 'I') then
		cd_tipo_contratacao_w := 1;
	else
		cd_tipo_contratacao_w := 2;
	end if;

	-- Iniciado em competencias anteriores nao pode ter valor emitido e valor recebido
	if (coalesce(ie_periodo_cobertura_w, '32') = '32') then
		vl_itens_seg_w := 0;
		vl_recebido_w := 0;
	end if;
	
	/* OS 1816269 / 1867884 - O campo ie_periodo_cobertura vai de 84 a 116 no XML Financeiro do DIOPS. Conforme alinhado com o Marcio, foi optado por ja realizar o insert com esses valores, e tratar a exibicao em tela atraves de um campo function
	0 = A iniciar
	1 a 31 = Dias do mes
	32 = Iniciados em meses anteriores
	*/
	ie_periodo_cobertura_w := ie_periodo_cobertura_w + 84;
	
	if (ie_periodo_cobertura_w IS NOT NULL AND ie_periodo_cobertura_w::text <> '') then
	
		insert into w_diops_contrap_pecun(
			nr_sequencia,
			cd_tipo_contratacao,
			dt_atualizacao,
			dt_atualizacao_nrec,
			ie_periodo_cobertura,
			nm_usuario,
			nm_usuario_nrec,
			nr_seq_periodo,
			vl_emitido,
			vl_recebido,
			vl_vencer,
			vl_vencido
		) values (
			nextval('w_diops_contrap_pecun_seq'),
			cd_tipo_contratacao_w,
			clock_timestamp(),
			clock_timestamp(),
			ie_periodo_cobertura_w,
			nm_usuario_p,
			nm_usuario_p,
			nr_seq_periodo_p,
			vl_itens_seg_w,
			vl_recebido_w,
			vl_vencer_w,
			vl_vencido_w
		);
	end if;
end loop;

	vl_emitido_w	:= 0;
	vl_recebido_ww	:= 0;
	vl_vencer_ww	:= 0;
	vl_vencido_ww	:= 0;
	
	open c_contrap_pecuniarias;
	loop
	
	fetch c_contrap_pecuniarias into
		cd_tipo_contratacao_ww,
		ie_periodo_cobertura_ww,
		vl_emitido_w,
		vl_recebido_ww,
		vl_vencer_ww,
		vl_vencido_ww;
	EXIT WHEN NOT FOUND; /* apply on c_contrap_pecuniarias */
	
	insert into diops_contrap_pecuniarias(
		nr_sequencia,
		cd_tipo_contratacao,
		dt_atualizacao,
		dt_atualizacao_nrec,
		ie_periodo_cobertura,
		nm_usuario,
		nm_usuario_nrec,
		nr_seq_periodo,
		vl_emitido,
		vl_recebido,
		vl_vencer,
		vl_vencido
	) values (
		nextval('diops_contrap_pecuniarias_seq'),
		cd_tipo_contratacao_ww,
		clock_timestamp(),
		clock_timestamp(),
		ie_periodo_cobertura_ww,
		nm_usuario_p,
		nm_usuario_p,
		nr_seq_periodo_p,
		vl_emitido_w,
		vl_recebido_ww,
		vl_vencer_ww,
		vl_vencido_ww
	);
	end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_contrap_pecuniaria (nm_usuario_p text, nr_seq_periodo_p text) FROM PUBLIC;

