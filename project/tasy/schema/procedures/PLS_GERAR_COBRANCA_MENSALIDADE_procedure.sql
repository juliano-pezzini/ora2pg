-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_cobranca_mensalidade ( nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
 
nr_seq_cobranca_w		cobranca_escritural.nr_sequencia%type;
nr_remessa_w			cobranca_escritural.nr_remessa%type;
ds_remessa_cobr_w		varchar(255);
nr_seq_forma_cobranca_w		varchar(2);
ie_gerar_remessa_w		varchar(1);
nr_seq_conta_banco_w		bigint;
nr_titulo_w			titulo_receber.nr_titulo%type;
nr_seq_mensalidade_w		pls_mensalidade.nr_sequencia%type;
nr_seq_conta_banco_param_w	bigint;
nr_seq_conta_banco_reg_w	bigint;
nr_seq_cobranca_reg_w		bigint	:= null;
cd_interface_w			integer;
cd_banco_w			smallint;
cd_banco_reg_w			smallint;
ie_conta_bancaria_w		pls_regra_rem_cobr_adic.ie_conta_bancaria%type;
nr_seq_pagador_w		pls_contrato_pagador.nr_sequencia%type;
qt_registros_w			integer;
qt_titulo_cobranca_w		integer;
nr_seq_carteira_cobr_w		pls_contrato_pagador_fin.nr_seq_carteira_cobr%type;
dt_sysdate_dd_w			timestamp := trunc(clock_timestamp(),'dd');
aux_w bigint;

C01 CURSOR FOR 
	SELECT	coalesce(coalesce(d.nr_seq_conta_banco,a.nr_seq_conta_banco),nr_seq_conta_banco_param_w), 
		c.nr_seq_forma_cobranca, 
		c.nr_seq_carteira_cobr 
	from	pls_contrato_pagador_fin	c, 
		titulo_receber			d, 
		pls_mensalidade			a 
	where	a.nr_sequencia	= d.nr_seq_mensalidade 
	and	c.nr_sequencia	= a.nr_seq_pagador_fin 
	and	coalesce(a.ie_cancelamento::text, '') = '' 
	and	coalesce(d.dt_liquidacao::text, '') = '' 
	and	c.nr_seq_forma_cobranca not in (4,2) 
	and	coalesce(a.ie_gerar_cobr_escrit, 'S') = 'S' 
	and	a.nr_seq_lote	= nr_seq_lote_p 
	group by coalesce(coalesce(d.nr_seq_conta_banco,a.nr_seq_conta_banco),nr_seq_conta_banco_param_w), 
		c.nr_seq_forma_cobranca, 
		c.nr_seq_carteira_cobr 
	
union
 
	SELECT	coalesce(coalesce(a.nr_seq_conta_banco_deb_aut,a.nr_seq_conta_banco),nr_seq_conta_banco_param_w), 
		c.nr_seq_forma_cobranca, 
		c.nr_seq_carteira_cobr 
	from	pls_contrato_pagador_fin	c, 
		titulo_receber			d, 
		pls_mensalidade			a 
	where	a.nr_sequencia	= d.nr_seq_mensalidade 
	and	c.nr_sequencia	= a.nr_seq_pagador_fin 
	and	coalesce(a.ie_cancelamento::text, '') = '' 
	and	coalesce(d.dt_liquidacao::text, '') = '' 
	and	c.nr_seq_forma_cobranca = 2 
	and	coalesce(a.ie_gerar_cobr_escrit, 'S') = 'S' 
	and	a.nr_seq_lote	= nr_seq_lote_p 
	group by coalesce(coalesce(a.nr_seq_conta_banco_deb_aut,a.nr_seq_conta_banco),nr_seq_conta_banco_param_w), 
		c.nr_seq_forma_cobranca, 
		c.nr_seq_carteira_cobr;

C02 CURSOR FOR 
	SELECT	a.nr_titulo, 
		b.nr_sequencia, 
		d.nr_seq_carteira_cobr 
	from	pls_contrato_pagador_fin	d, 
		titulo_receber			a, 
		pls_mensalidade			b 
	where	a.nr_seq_mensalidade	= b.nr_sequencia 
	and	b.nr_seq_pagador_fin	= d.nr_sequencia 
	and	coalesce(b.ie_cancelamento::text, '') = '' 
	and	coalesce(a.dt_liquidacao::text, '') = '' 
	and	d.nr_seq_forma_cobranca <> 4 
	and	coalesce(b.ie_gerar_cobr_escrit, 'S') = 'S'	 
	and	coalesce(coalesce(b.nr_seq_conta_banco_deb_aut,b.nr_seq_conta_banco),nr_seq_conta_banco_param_w) = nr_seq_conta_banco_w 
	and	nr_seq_forma_cobranca_w = 2 
	and	d.nr_seq_forma_cobranca	= nr_seq_forma_cobranca_w 
	and	b.nr_seq_lote		= nr_seq_lote_p 
	
union
 
	SELECT	a.nr_titulo, 
		b.nr_sequencia, 
		d.nr_seq_carteira_cobr 
	from	pls_contrato_pagador_fin	d, 
		titulo_receber			a, 
		pls_mensalidade			b 
	where	a.nr_seq_mensalidade	= b.nr_sequencia 
	and	b.nr_seq_pagador_fin	= d.nr_sequencia 
	and	coalesce(b.ie_cancelamento::text, '') = '' 
	and	coalesce(a.dt_liquidacao::text, '') = '' 
	and	d.nr_seq_forma_cobranca not in (4,2) 
	and	coalesce(b.ie_gerar_cobr_escrit, 'S') = 'S'	 
	and	coalesce(coalesce(a.nr_seq_conta_banco,b.nr_seq_conta_banco),nr_seq_conta_banco_param_w) = nr_seq_conta_banco_w 
	and	nr_seq_forma_cobranca_w <> 2 
	and	d.nr_seq_forma_cobranca	= nr_seq_forma_cobranca_w 
	and	b.nr_seq_lote		= nr_seq_lote_p;
	
C03 CURSOR FOR 
	SELECT	c.nr_seq_pagador, 
		c.nr_seq_carteira_cobr 
	from	pls_contrato_pagador_fin	c, 
		titulo_receber			d, 
		pls_mensalidade			a 
	where	a.nr_sequencia	= d.nr_seq_mensalidade 
	and	c.nr_sequencia	= a.nr_seq_pagador_fin 
	and	coalesce(a.ie_cancelamento::text, '') = '' 
	and	coalesce(d.dt_liquidacao::text, '') = '' 
	and	c.nr_seq_forma_cobranca not in (4,2) 
	and	coalesce(a.ie_gerar_cobr_escrit, 'S') = 'S' 
	and	a.nr_sequencia = nr_seq_mensalidade_w 
	and	coalesce(coalesce(d.nr_seq_conta_banco,a.nr_seq_conta_banco),nr_seq_conta_banco_param_w) = nr_seq_conta_banco_w 
	and	c.nr_seq_forma_cobranca	= nr_seq_forma_cobranca_w	 
	
union
 
	SELECT	c.nr_seq_pagador, 
		c.nr_seq_carteira_cobr 
	from	pls_contrato_pagador_fin	c, 
		titulo_receber			d, 
		pls_mensalidade			a 
	where	a.nr_sequencia	= d.nr_seq_mensalidade 
	and	c.nr_sequencia	= a.nr_seq_pagador_fin 
	and	coalesce(a.ie_cancelamento::text, '') = '' 
	and	coalesce(d.dt_liquidacao::text, '') = '' 
	and	c.nr_seq_forma_cobranca = 2 
	and	coalesce(a.ie_gerar_cobr_escrit, 'S') = 'S' 
	and	a.nr_sequencia = nr_seq_mensalidade_w 
	and	coalesce(coalesce(a.nr_seq_conta_banco_deb_aut,a.nr_seq_conta_banco),nr_seq_conta_banco_param_w) = nr_seq_conta_banco_w 
	and	c.nr_seq_forma_cobranca = nr_seq_forma_cobranca_w;
		
C04 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_conta_banco, 
		nr_seq_forma_cobranca, 
		cd_banco 
	from	cobranca_escritural 
	where	nr_seq_lote_mensalidade = nr_seq_lote_p;

TYPE 		fetch_array IS TABLE OF C03%ROWTYPE;
s_array 	fetch_array;
i		integer := 1;
type Vetor is table of fetch_array index by integer;
Vetor_c03_w			Vetor;

		 
BEGIN 
select	max(nr_seq_conta_banco) 
into STRICT	nr_seq_conta_banco_param_w 
from	pls_parametros 
where	cd_estabelecimento	= cd_estabelecimento_p;
 
if (coalesce(nr_seq_conta_banco_param_w, 0) = 0) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(204643, null);
end if;
 
open C01;
loop 
fetch C01 into 
	nr_seq_conta_banco_w, 
	nr_seq_forma_cobranca_w, 
	nr_seq_carteira_cobr_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	begin 
	select	a.cd_banco 
	into STRICT	cd_banco_w 
	from	banco_estabelecimento	a 
	where	a.nr_sequencia	= nr_seq_conta_banco_w;
	exception 
	when others then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(204646, null);
	end;
 
	nr_seq_cobranca_w := null;
	 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_cobranca_w 
	from	cobranca_escritural 
	where	nr_seq_conta_banco	= nr_seq_conta_banco_w 
	and	nr_seq_forma_cobranca	= nr_seq_forma_cobranca_w 
	and	nr_seq_lote_mensalidade	= nr_seq_lote_p 
	and	cd_estabelecimento	= cd_estabelecimento_p 
	and	ie_emissao_bloqueto	= 2 
	and	ie_remessa_retorno	= 'R';
	 
	if (coalesce(nr_seq_cobranca_w::text, '') = '') then 
		select	nextval('cobranca_escritural_seq') 
		into STRICT	nr_seq_cobranca_w 
		;
		 
		select	a.ds_remessa_cobr 
		into STRICT	ds_remessa_cobr_w 
		from	banco_estabelecimento	a 
		where	a.nr_sequencia	= nr_seq_conta_banco_w;
		 
		if (ds_remessa_cobr_w IS NOT NULL AND ds_remessa_cobr_w::text <> '') then 
			ds_remessa_cobr_w	:= replace(ds_remessa_cobr_w,'%NR_SEQUENCIA%',nr_seq_cobranca_w);
			 
			ds_remessa_cobr_w	:= replace(ds_remessa_cobr_w,'%DT_REMESSA%',to_char(clock_timestamp(),'dd') || '_' || 
							to_char(clock_timestamp(),'mm') || '_' || to_char(clock_timestamp(),'yyyy'));
			 
			ds_remessa_cobr_w	:= replace(ds_remessa_cobr_w,'%DT_ATUAL%',to_char(clock_timestamp(),'dd') || '_' || 
							to_char(clock_timestamp(),'mm') || '_' || to_char(clock_timestamp(),'yyyy'));
		end if;
		 
		select	max(nr_remessa) 
		into STRICT	nr_remessa_w 
		from	cobranca_escritural 
		where	nr_seq_conta_banco = nr_seq_conta_banco_w 
		and	coalesce(nr_seq_tipo::text, '') = '' 
		and	cd_estabelecimento = cd_estabelecimento_p 
		and	ie_remessa_retorno = 'R';
		nr_remessa_w	:= coalesce(nr_remessa_w,0) + 1;
		 
		insert into cobranca_escritural(nr_sequencia, 
			cd_estabelecimento, 
			cd_banco, 
			ie_remessa_retorno, 
			dt_remessa_retorno, 
			dt_atualizacao, 
			nm_usuario, 
			nr_seq_conta_banco, 
			ie_emissao_bloqueto, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			ds_arquivo, 
			nr_seq_forma_cobranca, 
			nr_seq_lote_mensalidade, 
			nr_remessa, 
			nr_seq_carteira_cobr) 
		values (nr_seq_cobranca_w, 
			cd_estabelecimento_p, 
			cd_banco_w, 
			'R', 
			clock_timestamp(), 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_conta_banco_w, 
			2, 
			clock_timestamp(), 
			nm_usuario_p, 
			ds_remessa_cobr_w, 
			nr_seq_forma_cobranca_w, 
			nr_seq_lote_p, 
			nr_remessa_w, 
			nr_seq_carteira_cobr_w);
	end if;	
	end;
end loop;
close C01;
 
open C04;
loop 
fetch C04 into 
	nr_seq_cobranca_w, 
	nr_seq_conta_banco_w, 
	nr_seq_forma_cobranca_w, 
	cd_banco_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin 
	 
	/*if	(nr_seq_forma_cobranca_w = 1) then 
		nr_seq_forma_cobranca_w := 2; 
	elsif	(nr_seq_forma_cobranca_w = 2) then 
		nr_seq_forma_cobranca_w := 1; 
	end if;*/
	 
	 
	/* Verificação se vai gerar um segundo lote com */
 
	SELECT * FROM pls_obter_regra_rem_banco_adic(	nr_seq_forma_cobranca_w, cd_banco_w, clock_timestamp(), ie_gerar_remessa_w, nr_seq_conta_banco_reg_w, cd_interface_w, ie_conta_bancaria_w) INTO STRICT ie_gerar_remessa_w, nr_seq_conta_banco_reg_w, cd_interface_w, ie_conta_bancaria_w;	
	 
	open C02;
	loop 
	fetch C02 into 
		nr_titulo_w, 
		nr_seq_mensalidade_w, 
		nr_seq_carteira_cobr_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin			 
		nr_seq_cobranca_reg_w	:= null;
 
		select	count(1) 
		into STRICT	qt_titulo_cobranca_w 
		from	titulo_receber_cobr 
		where	nr_seq_cobranca = nr_seq_cobranca_w 
		and	nr_titulo = nr_titulo_w;
		 
		if (qt_titulo_cobranca_w = 0) then 
			CALL vincular_titulo_rec_cobranca(	nr_seq_cobranca_w, 
							nr_titulo_w, 
							nm_usuario_p, 
							null, 
							null, 
							null, 
							null, 
							null);
			 
			update	pls_mensalidade 
			set	nr_seq_cobranca	= nr_seq_cobranca_w 
			where	nr_sequencia	= nr_seq_mensalidade_w;
			 
			/* Gravar histórico da mensalidade referente a geração do lote de desconto em folha */
 
			CALL pls_gravar_historico_mens(	nr_seq_mensalidade_w, 
							'CE', 
							'N', 
							cd_estabelecimento_p, 
							nm_usuario_p);
		end if;
	 
		if ((ie_conta_bancaria_w IS NOT NULL AND ie_conta_bancaria_w::text <> '') and ie_conta_bancaria_w = 'M') then 
			 
			if (coalesce(ie_gerar_remessa_w,'N') = 'A') then 
				select	max(a.nr_sequencia) 
				into STRICT	nr_seq_cobranca_reg_w 
				from	cobranca_escritural	a 
				where	a.nr_seq_conta_banco		= nr_seq_conta_banco_reg_w 
				and	a.nr_seq_forma_cobranca		= '1' -- boleto 
				and	a.ie_emissao_bloqueto		= 2 
				and	a.ie_remessa_retorno		= 'R' 
				and	a.nr_seq_lote_mensalidade	= nr_seq_lote_p 
				and	a.cd_estabelecimento		= cd_estabelecimento_p;
			end if;
	 
			if (nr_seq_conta_banco_reg_w IS NOT NULL AND nr_seq_conta_banco_reg_w::text <> '') and 
				((coalesce(ie_gerar_remessa_w,'N') = 'S') or (coalesce(ie_gerar_remessa_w,'N') = 'A' and coalesce(nr_seq_cobranca_reg_w::text, '') = '')) then 
				select	nextval('cobranca_escritural_seq') 
				into STRICT	nr_seq_cobranca_reg_w 
				;
				 
				select	max(a.ds_remessa_cobr) 
				into STRICT	ds_remessa_cobr_w 
				from	banco_estabelecimento	a 
				where	a.nr_sequencia	= nr_seq_conta_banco_reg_w;
				 
				select	cd_banco 
				into STRICT	cd_banco_reg_w 
				from	banco_estabelecimento	a 
				where	a.nr_sequencia	= nr_seq_conta_banco_reg_w;
				 
				select	max(nr_remessa) 
				into STRICT	nr_remessa_w 
				from	cobranca_escritural 
				where	nr_seq_conta_banco = nr_seq_conta_banco_reg_w 
				and	coalesce(nr_seq_tipo::text, '') = '' 
				and	cd_estabelecimento = cd_estabelecimento_p 
				and	ie_remessa_retorno = 'R';
				nr_remessa_w	:= coalesce(nr_remessa_w,0) + 1;
			 
				insert into cobranca_escritural(nr_sequencia, 
					cd_estabelecimento, 
					cd_banco, 
					ie_remessa_retorno, 
					dt_remessa_retorno, 
					dt_atualizacao, 
					nm_usuario, 
					nr_seq_conta_banco, 
					ie_emissao_bloqueto, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					ds_arquivo, 
					nr_seq_forma_cobranca, 
					nr_seq_lote_mensalidade, 
					nr_seq_carteira_cobr) 
				values (nr_seq_cobranca_reg_w, 
					cd_estabelecimento_p, 
					cd_banco_reg_w, 
					'R', 
					clock_timestamp(), 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_conta_banco_reg_w, 
					2, 
					clock_timestamp(), 
					nm_usuario_p, 
					ds_remessa_cobr_w, 
					'1',/* Boleto*/
 
					nr_seq_lote_p, 
					nr_seq_carteira_cobr_w);
			end if;
		elsif ((ie_conta_bancaria_w IS NOT NULL AND ie_conta_bancaria_w::text <> '') and ie_conta_bancaria_w in ('PB','PD')) then			 
			open c03;
			loop 
			fetch C03 bulk collect into s_array limit 1000;
				Vetor_c03_w(i) := s_array;
				i := i + 1;
			EXIT WHEN NOT FOUND; /* apply on C03 */
			end loop;
			close C03;
			 
			for i in 1..Vetor_c03_w.count loop 
			s_array := Vetor_c03_w(i);
				for z in 1..s_array.count loop 
				 
					if (coalesce(ie_conta_bancaria_w, 'M') = 'PB') then 
						select	coalesce(max(nr_seq_conta_banco), nr_seq_conta_banco_w) 
						into STRICT	nr_seq_conta_banco_reg_w 
						from	pls_contrato_pagador_fin a 
						where	a.nr_seq_pagador 				= s_array[z].nr_seq_pagador 
						and	coalesce(dt_inicio_vigencia, dt_sysdate_dd_w) 	<= dt_sysdate_dd_w 
						and	coalesce(dt_fim_vigencia,dt_sysdate_dd_w) 		>= dt_sysdate_dd_w;
					elsif (coalesce(ie_conta_bancaria_w, 'M') = 'PD') then 
						select	max(nr_seq_conta_banco_deb_aut)				 
						into STRICT	nr_seq_conta_banco_reg_w 
						from	pls_contrato_pagador_fin 	a 
						where	a.nr_seq_pagador 				= s_array[z].nr_seq_pagador				 
						and	coalesce(dt_inicio_vigencia, dt_sysdate_dd_w) 	<= dt_sysdate_dd_w 
						and	coalesce(dt_fim_vigencia, dt_sysdate_dd_w) 		>= dt_sysdate_dd_w;
					end if;			
					nr_seq_cobranca_reg_w	:= null;
			 
					if (coalesce(ie_gerar_remessa_w,'N') = 'A') then 
						select	max(a.nr_sequencia) 
						into STRICT	nr_seq_cobranca_reg_w 
						from	cobranca_escritural	a 
						where	a.nr_seq_conta_banco		= nr_seq_conta_banco_reg_w 
						and	a.nr_seq_forma_cobranca		= '1' -- boleto 
						and	a.ie_emissao_bloqueto		= 2 
						and	a.ie_remessa_retorno		= 'R' 
						and	a.nr_seq_lote_mensalidade	= nr_seq_lote_p 
						and	a.cd_estabelecimento		= cd_estabelecimento_p;
					end if;
					 
					if (nr_seq_conta_banco_reg_w IS NOT NULL AND nr_seq_conta_banco_reg_w::text <> '') and 
						((coalesce(ie_gerar_remessa_w,'N') = 'S') or (coalesce(ie_gerar_remessa_w,'N') = 'A' and coalesce(nr_seq_cobranca_reg_w::text, '') = '')) then 
						select	nextval('cobranca_escritural_seq') 
						into STRICT	nr_seq_cobranca_reg_w 
						;
						 
						select	max(a.ds_remessa_cobr) 
						into STRICT	ds_remessa_cobr_w 
						from	banco_estabelecimento	a 
						where	a.nr_sequencia	= nr_seq_conta_banco_reg_w;
						 
						select	cd_banco 
						into STRICT	cd_banco_reg_w 
						from	banco_estabelecimento	a 
						where	a.nr_sequencia	= nr_seq_conta_banco_reg_w;
						 
						select	max(nr_remessa) 
						into STRICT	nr_remessa_w 
						from	cobranca_escritural 
						where	nr_seq_conta_banco = nr_seq_conta_banco_reg_w 
						and	coalesce(nr_seq_tipo::text, '') = '' 
						and	cd_estabelecimento = cd_estabelecimento_p 
						and	ie_remessa_retorno = 'R';
						 
						nr_remessa_w	:= coalesce(nr_remessa_w,0) + 1;
						nr_seq_carteira_cobr_w := s_array[z].nr_seq_carteira_cobr;
						 
						insert into cobranca_escritural(nr_sequencia, 
							cd_estabelecimento, 
							cd_banco, 
							ie_remessa_retorno, 
							dt_remessa_retorno, 
							dt_atualizacao, 
							nm_usuario, 
							nr_seq_conta_banco, 
							ie_emissao_bloqueto, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							ds_arquivo, 
							nr_seq_forma_cobranca, 
							nr_seq_lote_mensalidade, 
							nr_seq_carteira_cobr) 
						values (nr_seq_cobranca_reg_w, 
							cd_estabelecimento_p, 
							cd_banco_reg_w, 
							'R', 
							clock_timestamp(), 
							clock_timestamp(), 
							nm_usuario_p, 
							nr_seq_conta_banco_reg_w, 
							2, 
							clock_timestamp(), 
							nm_usuario_p, 
							ds_remessa_cobr_w, 
							'1',/* Boleto*/
 
							nr_seq_lote_p, 
							nr_seq_carteira_cobr_w);
					end if;					
				end loop;
			end loop;
		end if;
		if (nr_seq_cobranca_reg_w IS NOT NULL AND nr_seq_cobranca_reg_w::text <> '') then 
			CALL vincular_titulo_rec_cobranca(	nr_seq_cobranca_reg_w, 
							nr_titulo_w, 
							nm_usuario_p, 
							null, 
							null, 
							null, 
							null, 
							null);
		end if;
		end;
	end loop;
	close C02;
	 
	select	count(1) 
	into STRICT	qt_registros_w 
	from	titulo_receber_cobr	a 
	where	a.nr_seq_cobranca	= nr_seq_cobranca_reg_w  LIMIT 1;
	 
	if (qt_registros_w = 0) then	 
		delete	from cobranca_escritural 
		where	nr_sequencia	= nr_seq_cobranca_reg_w;
	end if;
	end;
end loop;
close C04;
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_cobranca_mensalidade ( nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

