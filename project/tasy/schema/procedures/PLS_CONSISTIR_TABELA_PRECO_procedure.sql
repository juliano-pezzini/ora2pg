-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_tabela_preco ( nr_seq_reajuste_p bigint, ds_inconsistencia_p INOUT text, ds_erro_p INOUT text) AS $body$
DECLARE


nr_seq_tabela_w			bigint;
nr_seq_plano_w			bigint;
nr_seq_preco_w			bigint;
nr_seq_reajuste_w		bigint;
dt_reajuste_w			timestamp;
dt_reajuste_atual_w		timestamp;
ds_inconsistencia_w		varchar(4000)	:= '';
ds_erro_w			varchar(4000)	:= '';

c01 CURSOR FOR
	SELECT	a.nr_seq_tabela,
		a.nr_seq_plano,
		b.dt_reajuste
	from	pls_reajuste_tabela	a,
		pls_reajuste		b
	where	a.nr_seq_reajuste	= b.nr_sequencia
	and	b.nr_sequencia		= nr_seq_reajuste_p;


BEGIN

ds_erro_p		:= '';
ds_inconsistencia_p	:= '';

open c01;
loop
fetch c01 into
	nr_seq_tabela_w,
	nr_seq_plano_w,
	dt_reajuste_atual_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	select	max(a.nr_sequencia)
	into STRICT	nr_seq_preco_w
	from	pls_plano_preco 	a,
		pls_tabela_preco	b
	where	a.nr_seq_tabela	= b.nr_sequencia
	and	b.nr_sequencia	= nr_seq_tabela_w;

	if (coalesce(nr_seq_preco_w,0) <> 0) then
		select	max(nr_sequencia),
			max(dt_reajuste)
		into STRICT	nr_seq_reajuste_w,
			dt_reajuste_w
		from	pls_reajuste_preco
		where	nr_seq_preco	= nr_seq_preco_w
		and	coalesce(dt_liberacao::text, '') = '';

		if (coalesce(nr_seq_reajuste_w,0) <> 0) and (length(ds_erro_w) < 3900) then
			ds_erro_w	:= ds_erro_w || to_char(nr_seq_tabela_w) || ', ';
		end if;

		if	(dt_reajuste_w > (dt_reajuste_atual_w - 180)) and (length(ds_inconsistencia_w) < 3900) then
			ds_inconsistencia_w	:= ds_inconsistencia_w || to_char(nr_seq_tabela_w) || ', ';
		end if;
	end if;
	end;
end loop;
close c01;

if (coalesce(length(ds_erro_w),0) > 2) then
	ds_erro_w	:= substr(ds_erro_w, 1, length(ds_erro_w) - 2);
end if;

if (coalesce(length(ds_inconsistencia_w),0) > 0) then
	ds_inconsistencia_w	:= substr(ds_inconsistencia_w, 1, length(ds_inconsistencia_w) - 2);
end if;

ds_inconsistencia_p	:= substr(ds_inconsistencia_w,1,255);
ds_erro_p		:= substr(ds_erro_w,1,255);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_tabela_preco ( nr_seq_reajuste_p bigint, ds_inconsistencia_p INOUT text, ds_erro_p INOUT text) FROM PUBLIC;

