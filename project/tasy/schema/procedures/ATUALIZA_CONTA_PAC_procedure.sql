-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_conta_pac ( nr_seq_mat_proc_p bigint, ie_proc_mat_p text, cd_estabelecimento_p bigint, cd_material_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_tipo_atendimento_p bigint, cd_setor_atendimento_p bigint, ie_clinica_p bigint, ie_classif_convenio_p bigint, cd_convenio_p bigint, cd_categoria_convenio_p text, cd_conta_contab_orig_p text, nr_seq_grupo_rec_orig_p bigint, ie_atual_conta_contab_p text, ie_atual_grupo_rec_p text, nm_usuario_p text, ie_atualizou_p INOUT text) AS $body$
DECLARE



ie_atualizou_w			varchar(01)	:= 'N';
nr_seq_grupo_rec_w		bigint;
cd_conta_contabil_w		varchar(20);
cd_centro_custo_w			integer;
cd_local_estoque_w		smallint;
dt_atendimento_w			timestamp;
dt_procedimento_w			timestamp;
nr_atendimento_w			bigint;
cd_plano_w			varchar(10);
ie_tipo_convenio_w			smallint;
ie_regra_pacote_w			varchar(1);
nr_seq_proc_interno_w	procedimento_paciente.nr_seq_proc_interno%type;
cd_sequencia_parametro_w	procedimento_paciente.cd_sequencia_parametro%type;
cd_sequencia_parametro_ww	procedimento_paciente.cd_sequencia_parametro%type;


BEGIN

if (ie_atual_grupo_rec_p = 'S') then
	begin

	select	obter_grupo_receita(
			cd_estabelecimento_p,
			cd_material_p,
			cd_procedimento_p,
			ie_origem_proced_p,
			ie_tipo_atendimento_p,
			cd_setor_atendimento_p)
	into STRICT	nr_seq_grupo_rec_w
	;


	if (nr_seq_grupo_rec_w <> coalesce(nr_seq_grupo_rec_orig_p,0)) then
		begin
		if (ie_proc_mat_p = 'P') then
			update	procedimento_paciente
			set	nr_seq_grupo_rec	= nr_seq_grupo_rec_w,
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_seq_mat_proc_p;
		elsif (ie_proc_mat_p = 'M') then
			update	material_atend_paciente
			set	nr_seq_grupo_rec	= nr_seq_grupo_rec_w,
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_seq_mat_proc_p;
		end if;

		ie_atualizou_w	:= 'S';

		/*insert into logxxxx_tasy 
			(dt_atualizacao, nm_usuario, cd_log, ds_log)
		values	(sysdate, nm_usuario_p, 77777,
			'Item: ' || nr_seq_mat_proc_p || ' Proc/Mat: ' || ie_proc_mat_p|| 
			' Grupo Orig: ' || nr_seq_grupo_rec_orig_p || ' Grupo Atual: ' || nr_seq_grupo_rec_w);*/
		end;
	end if;

	end;
end if;


if (ie_atual_conta_contab_p = 'S') then
	begin

	if (coalesce(cd_convenio_p,0) <> 0) then
		
		select	ie_tipo_convenio
		into STRICT	ie_tipo_convenio_w
		from	convenio
		where	cd_convenio	= cd_convenio_p;
		
	end if;
	
	if (ie_proc_mat_p = 'P') then
		begin
					
		select	dt_procedimento,
			nr_atendimento,
			substr(CASE WHEN coalesce(nr_seq_proc_pacote,0)=0 THEN 'N'  ELSE 'S' END ,1,1) ie_regra_pacote,
			nr_seq_proc_interno
		into STRICT	dt_procedimento_w,
			nr_atendimento_w,
			ie_regra_pacote_w,
			nr_seq_proc_interno_w
		from	procedimento_paciente
		where	nr_sequencia		= nr_seq_mat_proc_p;

		select	max(cd_plano_convenio)
		into STRICT	cd_plano_w
		from	atend_categoria_convenio
		where	obter_atecaco_atendimento(nr_atendimento_w) = nr_seq_interno;

		cd_sequencia_parametro_w := null;

		SELECT * FROM define_conta_procedimento(
			cd_estabelecimento_p, cd_procedimento_p, ie_origem_proced_p, 1, ie_clinica_p, cd_setor_atendimento_p, ie_classif_convenio_p, ie_tipo_atendimento_p, ie_tipo_convenio_w, cd_convenio_p, cd_categoria_convenio_p, dt_procedimento_w, cd_conta_contabil_w, cd_centro_custo_w, cd_plano_w, ie_regra_pacote_w, null, null, null, null, null, null, null, nr_seq_proc_interno_w) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
			
		cd_sequencia_parametro_w := philips_contabil_pck.get_parametro_conta_contabil();	
		
		if (cd_conta_contabil_w <> coalesce(cd_conta_contab_orig_p,'0')) then
			begin

			update	procedimento_paciente
			set	cd_conta_contabil	= cd_conta_contabil_w,
				cd_centro_custo_receita	= cd_centro_custo_w,
				nm_usuario		= nm_usuario_p,
				cd_sequencia_parametro = cd_sequencia_parametro_w
			where	nr_sequencia		= nr_seq_mat_proc_p;


			ie_atualizou_w	:= 'S';
	
			/*insert into logxxxx_tasy 
				(dt_atualizacao, nm_usuario, cd_log, ds_log)
			values	(sysdate, nm_usuario_p, 77777,
				'Item: ' || nr_seq_mat_proc_p || ' Proc/Mat: ' || ie_proc_mat_p|| 
				' Conta Orig: ' || cd_conta_contab_orig_p || ' Conta Atual: ' || cd_conta_contabil_w);*/
			end;
		end if;

		end;
	end if;

	if (ie_proc_mat_p = 'M') then
		begin

		select	dt_atendimento,
			nr_atendimento,
			substr(CASE WHEN coalesce(nr_seq_proc_pacote,0)=0 THEN 'N'  ELSE 'S' END ,1,1) ie_regra_pacote
		into STRICT	dt_atendimento_w,
			nr_atendimento_w,
			ie_regra_pacote_w
		from	material_atend_paciente
		where	nr_sequencia		= nr_seq_mat_proc_p;

		select	max(cd_plano_convenio)
		into STRICT	cd_plano_w
		from	atend_categoria_convenio
		where	obter_atecaco_atendimento(nr_atendimento_w) = nr_seq_interno;
		
		cd_sequencia_parametro_ww := null;

		SELECT * FROM define_conta_material(
			cd_estabelecimento_p, cd_material_p, 1, ie_clinica_p, cd_setor_atendimento_p, ie_classif_convenio_p, ie_tipo_atendimento_p, ie_tipo_convenio_w, cd_convenio_p, cd_categoria_convenio_p, cd_local_estoque_w, Null, dt_atendimento_w, cd_conta_contabil_w, cd_centro_custo_w, cd_plano_w, ie_regra_pacote_w) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;	

			cd_sequencia_parametro_ww := philips_contabil_pck.get_parametro_conta_contabil();

		if (cd_conta_contabil_w <> coalesce(cd_conta_contab_orig_p,'0')) then
			begin

			update	material_atend_paciente
			set	cd_conta_contabil	= cd_conta_contabil_w,
				nm_usuario		= nm_usuario_p,
				cd_sequencia_parametro = cd_sequencia_parametro_ww
			where	nr_sequencia		= nr_seq_mat_proc_p;


			ie_atualizou_w	:= 'S';
	
			/*insert into logxxxxx_tasy 
				(dt_atualizacao, nm_usuario, cd_log, ds_log)
			values	(sysdate, nm_usuario_p, 77777,
				'Item: ' || nr_seq_mat_proc_p || ' Proc/Mat: ' || ie_proc_mat_p|| 
				' Conta Orig: ' || cd_conta_contab_orig_p || ' Conta Atual: ' || cd_conta_contabil_w);*/
			end;
		end if;

		end;
	end if;

	end;
end if;

ie_atualizou_p	:= ie_atualizou_w;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_conta_pac ( nr_seq_mat_proc_p bigint, ie_proc_mat_p text, cd_estabelecimento_p bigint, cd_material_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_tipo_atendimento_p bigint, cd_setor_atendimento_p bigint, ie_clinica_p bigint, ie_classif_convenio_p bigint, cd_convenio_p bigint, cd_categoria_convenio_p text, cd_conta_contab_orig_p text, nr_seq_grupo_rec_orig_p bigint, ie_atual_conta_contab_p text, ie_atual_grupo_rec_p text, nm_usuario_p text, ie_atualizou_p INOUT text) FROM PUBLIC;

