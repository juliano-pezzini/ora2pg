-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_alt_valid_cart_lote_venc ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, ie_commit_p text, nm_usuario_p text) AS $body$
DECLARE


nr_seq_segurado_w		bigint;
nr_seq_contrato_w		bigint;
nr_seq_intercambio_w		bigint;
nr_seq_seg_carteira_w		bigint;
dt_inicio_vigencia_w		timestamp;
cd_usuario_plano_w		varchar(30);
dt_validade_carteira_w		timestamp;
dt_validade_cart_nova_w		timestamp;
nr_seq_carteira_w		bigint;
nr_via_solicitacao_w		bigint;
ds_trilha1_w			pls_segurado_carteira.ds_trilha1%type;
ds_trilha2_w			pls_segurado_carteira.ds_trilha2%type;
ds_trilha3_w			pls_segurado_carteira.ds_trilha3%type;
ds_trilha_qr_code_w		pls_segurado_carteira.ds_trilha_qr_code%type;
nr_seq_motivo_via_w		bigint;
nr_seq_seg_cart_ant_w		bigint;
ie_retorna_primeira_via_w	varchar(10);
ie_dependente_venc_titular_w	varchar(10);
ie_titularidade_w		varchar(10);
nr_seq_titular_w		bigint;
ie_tipo_contrato_w		varchar(10);
dt_validade_titular_w		timestamp;
nr_seq_plano_w			pls_plano.nr_sequencia%type;
nr_seq_regra_via_w		pls_regra_segurado_cart.nr_sequencia%type;
vl_via_adicional_w		pls_regra_segurado_cart.vl_via_adicional%type;
tx_via_adicional_w		pls_regra_segurado_cart.tx_via_adicional%type;
vl_preco_pre_w			double precision;

C01 CURSOR FOR
	SELECT	b.nr_seq_segurado,
		a.nr_seq_seg_carteira,
		a.dt_validade_prorrogada,
		c.nr_seq_contrato,
		c.nr_seq_intercambio,
		CASE WHEN coalesce(c.nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END ,
		c.nr_seq_titular,
		c.nr_seq_plano
	from	pls_segurado_carteira	b,
		pls_segurado		c,
		pls_carteira_vencimento a
	where	b.nr_seq_segurado	= c.nr_sequencia
	and	a.nr_seq_seg_carteira	= b.nr_sequencia
	and	nr_seq_lote		= nr_seq_lote_p
	order by CASE WHEN coalesce(c.nr_seq_titular::text, '') = '' THEN -1  ELSE 1 END;

C02 CURSOR FOR
	SELECT	ie_dependente_venc_titular
	from	pls_param_regra_carteira
	where	coalesce(ie_tipo_renovacao,'R')	= 'R'
	and	((ie_tipo_contrato = ie_tipo_contrato_w) or (ie_tipo_contrato = 'A'))
	and	((coalesce(ie_titularidade,'A')		= ie_titularidade_w) or (coalesce(ie_titularidade,'A') = 'A'))
	order by ie_tipo_contrato;


BEGIN

ie_retorna_primeira_via_w	:= coalesce(obter_valor_param_usuario(1226, 5, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p), 'S');

open C01;
loop
fetch C01 into
	nr_seq_segurado_w,
	nr_seq_seg_carteira_w,
	dt_validade_cart_nova_w,
	nr_seq_contrato_w,
	nr_seq_intercambio_w,
	ie_titularidade_w,
	nr_seq_titular_w,
	nr_seq_plano_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	ie_dependente_venc_titular_w	:= 'N';
	dt_validade_titular_w		:= null;
	
	if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
		select	max(ie_dependente_venc_titular)
		into STRICT	ie_dependente_venc_titular_w
		from	pls_carteira_renovacao
		where	nr_seq_contrato			= nr_seq_contrato_w
		and	coalesce(ie_tipo_renovacao,'R')	= 'R'
		and	((coalesce(ie_titularidade,'A')	= ie_titularidade_w) or (coalesce(ie_titularidade,'A') = 'A'));
		
		select	CASE WHEN coalesce(cd_cgc_estipulante::text, '') = '' THEN 'PF'  ELSE 'PJ' END
		into STRICT	ie_tipo_contrato_w
		from	pls_contrato
		where	nr_sequencia	= nr_seq_contrato_w;
	end if;
	
	ie_dependente_venc_titular_w	:= coalesce(ie_dependente_venc_titular_w,'N');
	
	if (ie_dependente_venc_titular_w = 'N') then
		open C02;
		loop
		fetch C02 into
			ie_dependente_venc_titular_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
		end loop;
		close C02;
	end if;
	
	if (ie_dependente_venc_titular_w = 'S') then
		begin
		select	max(dt_validade_carteira)
		into STRICT	dt_validade_titular_w
		from	pls_segurado_carteira
		where	nr_seq_segurado		= nr_seq_titular_w;
		exception
		when others then
			dt_validade_titular_w	:= null;
		end;
		
		if (dt_validade_titular_w IS NOT NULL AND dt_validade_titular_w::text <> '') then
			dt_validade_cart_nova_w	:= dt_validade_titular_w;
		end if;
	end if;
	
	select	nextval('pls_segurado_cart_ant_seq')
	into STRICT	nr_seq_seg_cart_ant_w
	;
	
	insert into pls_segurado_cart_ant(	nr_sequencia,
						nm_usuario,
						dt_atualizacao,
						cd_usuario_ant,
						dt_validade,
						dt_inicio_vigencia,
						nr_seq_segurado,
						dt_alteracao,
						ds_observacao,
						ie_status_carteira,
						nm_usuario_solicitacao,
						dt_solicitacao,
						nr_via_anterior,
						ds_trilha1,
						ds_trilha2,
						ds_trilha3,
						ds_trilha_qr_code,
						dt_desbloqueio,
						nm_usuario_desbloqueio,
						ie_tipo_desbloqueio)
					SELECT	nr_seq_seg_cart_ant_w,
						nm_usuario_p,
						clock_timestamp(),
						cd_usuario_plano,
						dt_validade_carteira,
						dt_inicio_vigencia,
						nr_seq_segurado,
						clock_timestamp(),
						ds_observacao,
						'P',
						nm_usuario_solicitante,
						dt_solicitacao,
						nr_via_solicitacao,
						ds_trilha1,
						ds_trilha2,
						ds_trilha3,
						ds_trilha_qr_code,
						dt_desbloqueio,
						nm_usuario_desbloqueio,
						ie_tipo_desbloqueio
					from	pls_segurado_carteira
					where	nr_sequencia	= nr_seq_seg_carteira_w;
	
	select	dt_inicio_vigencia,
		cd_usuario_plano,
		dt_validade_carteira
	into STRICT	dt_inicio_vigencia_w,
		cd_usuario_plano_w,
		dt_validade_carteira_w
	from	pls_segurado_carteira
	where	nr_sequencia	= nr_seq_seg_carteira_w;

	select	max(nr_sequencia)
	into STRICT	nr_seq_motivo_via_w
	from	pls_motivo_via_adicional
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	ie_situacao		= 'A';
	
	select	coalesce(max(nr_via_solicitacao),0) + 1
	into STRICT	nr_via_solicitacao_w
	from	pls_segurado_carteira
	where	nr_sequencia = nr_seq_seg_carteira_w;
	
	if (ie_retorna_primeira_via_w = 'S') then
		nr_via_solicitacao_w	:= 1;
		nr_seq_motivo_via_w	:= null;
	end if;
	
	SELECT * FROM pls_obter_regra_via_adic(nr_seq_contrato_w, nr_seq_intercambio_w, nr_seq_plano_w, nr_via_solicitacao_w, 'S', nm_usuario_p, cd_estabelecimento_p, clock_timestamp(), nr_seq_regra_via_w, vl_via_adicional_w, tx_via_adicional_w) INTO STRICT nr_seq_regra_via_w, vl_via_adicional_w, tx_via_adicional_w;
	
	if (coalesce(tx_via_adicional_w,0) <> 0) then
		vl_preco_pre_w	:= pls_obter_valor_segurado(nr_seq_segurado_w,'VCD');
		vl_via_adicional_w	:= (tx_via_adicional_w * vl_preco_pre_w) / 100;
	end if;
	
	update	pls_segurado_carteira
	set	dt_validade_carteira	= dt_validade_cart_nova_w,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p,
		ds_observacao		= wheb_mensagem_pck.get_texto(1127391),
		nm_usuario_solicitante	= nm_usuario_p,
		dt_solicitacao		= clock_timestamp(),
		nr_via_solicitacao	= nr_via_solicitacao_w,
		nr_seq_motivo_via 	= nr_seq_motivo_via_w,
		nr_seq_mensalidade_seg	 = NULL,
		vl_via_adicional 	= vl_via_adicional_w,
		nr_seq_regra_via 	= nr_seq_regra_via_w,
		dt_desbloqueio		 = NULL,
		nm_usuario_desbloqueio	 = NULL,
		ie_tipo_desbloqueio	 = NULL
	where	nr_sequencia		= nr_seq_seg_carteira_w;
	
	--Alterar o estagio da carteira
	CALL pls_alterar_estagios_cartao(nr_seq_seg_carteira_w,clock_timestamp(),1,cd_estabelecimento_p,nm_usuario_p);

	CALL pls_desbloquear_auto_cartao(nr_seq_segurado_w, 'R', nm_usuario_p, cd_estabelecimento_p);
	
	--As trilhas devem ser alteradas logo depois de alterar a via da carteira
	SELECT * FROM pls_obter_trilhas_cartao(nr_seq_segurado_w, ds_trilha1_w, ds_trilha2_w, ds_trilha3_w, ds_trilha_qr_code_w, nm_usuario_p) INTO STRICT ds_trilha1_w, ds_trilha2_w, ds_trilha3_w, ds_trilha_qr_code_w;
	
	update	pls_segurado_carteira
	set	ds_trilha1		= ds_trilha1_w,
		ds_trilha2		= ds_trilha2_w,
		ds_trilha3		= ds_trilha3_w,
		ds_trilha_qr_code	= ds_trilha_qr_code_w
	where	nr_sequencia 		= nr_seq_seg_carteira_w;
	end;
end loop;
close C01;

if (ie_commit_p = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_alt_valid_cart_lote_venc ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, ie_commit_p text, nm_usuario_p text) FROM PUBLIC;

