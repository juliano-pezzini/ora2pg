-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicar_med_avaliacao ( nr_sequencia_p bigint, nr_atendimento_p bigint, nm_usuario_p text, nr_seq_destino_p INOUT bigint) AS $body$
DECLARE


nr_seq_avaliacao_w	bigint;
dt_avaliacao_w		timestamp := clock_timestamp();
VarGerarDtAvalAtend_w	varchar(1);
ds_arquivo_w		varchar(80);
ds_titulo_w		varchar(60);
cd_perfil_ativo_w	bigint := null;

qt_resultado_w		double precision;
nr_seq_item_w		bigint;
ds_resultado_w		varchar(4000);

qt_max_reg_w            integer;
qt_med_avaliacao_pac_w  integer;
nr_seq_tipo_avaliacao_w integer;
ie_resultado_w		varchar(2);
nr_seq_atend_cons_pepa_w	bigint;

C01 CURSOR FOR
	SELECT 	ds_arquivo,
		ds_titulo
	from   	med_avaliacao_pac_imagem
	where  	nr_seq_aval_pac = nr_sequencia_p
	order by ds_titulo;
	
C02 CURSOR FOR
	SELECT	a.nr_seq_item,
			a.qt_resultado,
			a.ds_resultado,
			b.IE_RESULTADO
	from	med_avaliacao_result a,
			med_item_avaliar b
where	a.nr_seq_avaliacao = nr_sequencia_p
and	a.nr_seq_item = b.nr_sequencia
and	coalesce(b.ie_copiar,'S') = 'S'
order by a.nr_seq_item;


BEGIN

if (wheb_usuario_pck.get_cd_funcao = 381) then
	select	nr_seq_atend_cons_pepa
	into STRICT	nr_seq_atend_cons_pepa_w
	from 	med_avaliacao_paciente
	where	nr_sequencia	=	nr_sequencia_p;
end if;	


if (nr_atendimento_p > 0) then

	select 	coalesce(max(nr_seq_tipo_avaliacao), 0)
	into STRICT    nr_seq_tipo_avaliacao_w 
	from 	med_avaliacao_paciente 
	where 	nr_sequencia = nr_sequencia_p;

	select	coalesce(max(qt_max_reg),0)
	into STRICT    qt_max_reg_w
	from	med_tipo_avaliacao
	where	nr_sequencia = nr_seq_tipo_avaliacao_w;
	
	select	count(*) 
	into STRICT    qt_med_avaliacao_pac_w		
	from	med_avaliacao_paciente 
	where	nr_atendimento = nr_atendimento_p
	and	nr_seq_tipo_avaliacao = nr_seq_tipo_avaliacao_w 
   and   coalesce(ie_situacao,'A') = 'A'
	and	nr_sequencia <> nr_sequencia_p;

	if (qt_max_reg_w > 0) and (qt_med_avaliacao_pac_w >= qt_max_reg_w) then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(substr(obter_texto_tasy(154071, wheb_usuario_pck.get_nr_seq_idioma),1,255) || ' ' || qt_max_reg_w);
	end if;
end if;

if (obter_funcao_ativa	= 281) then
	VarGerarDtAvalAtend_w := coalesce(Obter_Valor_Param_Usuario(281,214,Obter_perfil_Ativo,wheb_usuario_pck.get_nm_usuario,0),'S');

	if (VarGerarDtAvalAtend_w = 'S') then
		dt_avaliacao_w := obter_data_entrada(nr_atendimento_p);
	end if;
end if;

if (Obter_perfil_Ativo 	> 0) then
	cd_perfil_ativo_w	:= Obter_perfil_Ativo;
end if;

/* Pegar o próximo número de sequencia para a med_avaliacao_paciente */

select	nextval('med_avaliacao_paciente_seq')
into STRICT	nr_seq_avaliacao_w
;

nr_seq_destino_p := nr_seq_avaliacao_w;

/* Inservação dos dados na tabela med_avaliacao_paciente */

insert	into med_avaliacao_paciente(
	nr_sequencia,
	cd_pessoa_fisica,
	cd_medico,
	dt_avaliacao,
	dt_atualizacao,
	nm_usuario,
	ds_observacao,
	nr_seq_tipo_avaliacao,
	ie_avaliacao_parcial,
	nr_atendimento,
	nr_prescricao,
	nr_seq_aval_compl,
	nr_seq_ageint,
	cd_perfil_ativo,
	nr_seq_consulta,
	ie_situacao,
	nr_cirurgia,
	nr_seq_pepo,
	ie_apresentar_web,
	CD_ESTABELECIMENTO,
	NM_USUARIO_NREC,
	NR_SEQ_HEM_ETAPA,
	nr_seq_atend_cons_pepa)
SELECT	nr_seq_avaliacao_w,
	cd_pessoa_fisica,
	(obter_pessoa_fisica_usuario(nm_usuario_p,'C'))::numeric ,
	coalesce(dt_avaliacao_w,clock_timestamp()),
	clock_timestamp(),
	nm_usuario_p,
	ds_observacao,
	nr_seq_tipo_avaliacao,
	ie_avaliacao_parcial,
	nr_atendimento_p,
	null,
	nr_seq_aval_compl,
	nr_seq_ageint,
	cd_perfil_ativo_w,
	nr_seq_consulta,
	'A',
	nr_cirurgia,
	nr_seq_pepo,
	ie_apresentar_web,
	OBTER_ESTABELECIMENTO_ATIVO,
	OBTER_USUARIO_ATIVO,
	NR_SEQ_HEM_ETAPA,
	nr_seq_atend_cons_pepa_w
from	med_avaliacao_paciente
where	nr_sequencia = nr_sequencia_p;

commit;

/* Inserção dos dados na tabela med_avaliacao_result */

open C02;
loop
fetch C02 into	
	nr_seq_item_w,
	qt_resultado_w,	
	ds_resultado_w,
	ie_resultado_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	
	
		insert	into med_avaliacao_result(
					 nr_seq_avaliacao,
					nr_seq_item,
					dt_atualizacao,
					nm_usuario,
					qt_resultado,
					ds_resultado)
		values (	nr_seq_avaliacao_w,
					nr_seq_item_w,
					clock_timestamp(),
					nm_usuario_p,
					qt_resultado_w,
					ds_resultado_w);
			
		commit;

		if (ie_resultado_w = 'P') then
			begin
			copia_campo_long_de_para_Java( 'MED_AVALIACAO_RESULT',
					'DS_RESULT_LONG',
					'where NR_SEQ_AVALIACAO = :nr_seq_avaliacao_p
					and nr_seq_item = :nr_seq_item_old_w',
					'nr_seq_avaliacao_p='||nr_sequencia_p||
					';nr_seq_item_old_w='||nr_seq_item_w,
					'MED_AVALIACAO_RESULT',
					'DS_RESULT_LONG',
					'where NR_SEQ_AVALIACAO = :nr_seq_avaliacao_dest_p
					 and nr_seq_item = :nr_seq_item_w',
					'nr_seq_avaliacao_dest_p='||nr_seq_avaliacao_w||
					';nr_seq_item_w='||nr_seq_item_w,
						'L');
			commit;
							
			exception
				when others then
				CALL copia_campo_long_de_para(	'MED_AVALIACAO_RESULT',
					'DS_RESULT_LONG',
					'where NR_SEQ_AVALIACAO = :nr_seq_avaliacao_p
					and nr_seq_item = :nr_seq_item_old_w',
					'nr_seq_avaliacao_p='||nr_sequencia_p||
					';nr_seq_item_old_w='||nr_seq_item_w,
					'MED_AVALIACAO_RESULT',
					'DS_RESULT_LONG',
					'where NR_SEQ_AVALIACAO = :nr_seq_avaliacao_dest_p
					 and nr_seq_item = :nr_seq_item_w',
					'nr_seq_avaliacao_dest_p='||nr_seq_avaliacao_w||
					';nr_seq_item_w='||nr_seq_item_w);
			end;
		end if;
	commit;
	
	end;
end loop;
close C02;


open C01;
loop
fetch C01 into
	ds_arquivo_w,
	ds_titulo_w;	
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	insert into med_avaliacao_pac_imagem(	nr_sequencia,
						nr_seq_aval_pac,
						ds_titulo,
						ds_arquivo,
						dt_atualizacao,
						nm_usuario)
					values (	
						nextval('med_avaliacao_pac_imagem_seq'),
						nr_seq_avaliacao_w,
						ds_titulo_w,
						ds_arquivo_w,
						clock_timestamp(),
						nm_usuario_p);
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_med_avaliacao ( nr_sequencia_p bigint, nr_atendimento_p bigint, nm_usuario_p text, nr_seq_destino_p INOUT bigint) FROM PUBLIC;

