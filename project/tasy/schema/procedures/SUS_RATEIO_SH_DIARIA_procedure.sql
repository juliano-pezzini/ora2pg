-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_rateio_sh_diaria ( nr_interno_conta_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
/* Essa rotina lê a SUS_PARAMETROS para verificar se é para gerar diárias na conta_paciente_resumo ou na procedimento_paciente. 
Se for na conta_paciente_resumo a rotina não faz nada, caso contrário faz o mesmo processo da atualizar_resumo_conta, só que gravando 
na procedimento_paciente */
 
 
 
cd_estabelecimento_w		smallint;
ie_tipo_convenio_w			smallint;
ie_tipo_atendimento_w		smallint;
ie_diaria_sus_w			varchar(1);
nr_sequencia_w			bigint;
nr_atendimento_w			bigint;
cd_setor_atendimento_w		integer;
qt_procedimento_w			double precision;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
dt_referencia_w			timestamp;
nr_seq_atepacu_w			bigint;
dt_entrada_unidade_w		timestamp;
dt_acerto_conta_w			timestamp;
qt_proc_diaria_w			integer	:= 0;
dt_entrada_w			timestamp;
dt_alta_w				timestamp;
dt_parametro_w			timestamp;
cd_proc_diaria_w			bigint;
ie_origem_diaria_sh_w		bigint;
ie_regra_tipo_atend_w		varchar(1):= 'A';

/*e ler sus_parametros na atualizar_resumo_conta para nao gravar */
 
 

BEGIN 
 
BEGIN 
select	b.ie_tipo_convenio, 
	c.ie_tipo_atendimento, 
	c.cd_estabelecimento, 
	a.nr_atendimento, 
	coalesce(c.dt_entrada, dt_inicial), 
	coalesce(c.dt_alta, dt_final), 
	coalesce(e.cd_proc_diaria_sh,99080012), 
	coalesce(e.ie_origem_diaria_sh, 2) 
into STRICT	ie_tipo_convenio_w, 
	ie_tipo_atendimento_w, 
	cd_estabelecimento_w, 
	nr_atendimento_w, 
	dt_entrada_w, 
	dt_alta_w, 
	cd_proc_diaria_w, 
	ie_origem_diaria_sh_w 
from	sus_parametros		e, 
	sus_aih			d, 
	atendimento_Paciente	c, 
	convenio 		b, 
	conta_paciente 		a 
where	a.cd_convenio_parametro	= b.cd_convenio 
and 	a.nr_atendimento 	= C.nr_atendimento 
and	a.nr_interno_conta	= d.nr_interno_conta 
and	c.cd_estabelecimento	= e.cd_estabelecimento 
and 	a.nr_interno_conta 	= nr_interno_conta_p;
exception 
	when others then 
	ie_tipo_atendimento_w	:= 999;
end;
 
/*Obter parâmetros de Faturamento*/
 
select	coalesce(max(ie_regra_tipo_atend),'A') 
into STRICT	ie_regra_tipo_atend_w 
from	parametro_faturamento 
where	cd_estabelecimento = cd_estabelecimento_w;
 
if (coalesce(ie_regra_tipo_atend_w,'A') = 'C') then 
	begin 
	select	coalesce(max(ie_tipo_atend_conta),ie_tipo_atendimento_w) 
	into STRICT	ie_tipo_atendimento_w 
	from 	conta_paciente 
	where 	nr_interno_conta = nr_interno_conta_p;
	exception 
		when others then 
		ie_tipo_atendimento_w:= ie_tipo_atendimento_w;
	end;
end if;
 
select	coalesce(max(ie_diaria_sus),'R') 
into STRICT	ie_diaria_sus_w 
from	sus_parametros 
where	cd_estabelecimento	= cd_estabelecimento_w;
 
if (ie_diaria_sus_w	= 'C') THEN 
	dt_parametro_w	:= dt_entrada_w;
 
	update	procedimento_paciente 
	set	qt_procedimento		= 0 
	where	cd_procedimento		= cd_proc_diaria_w 
	and	ie_origem_proced	= ie_origem_diaria_sh_w 
	and	nr_atendimento		= nr_atendimento_w 
	and	nr_interno_conta	= nr_interno_conta_p;	
 
	while(trunc(dt_parametro_w)	< trunc(dt_alta_w)) LOOP 
		begin 
		begin 
 
		select	c.cd_setor_atendimento, 
			b.cd_convenio_parametro, 
			b.cd_categoria_parametro, 
			TRUNC(b.dt_mesano_referencia,'month'), 
			c.nr_seq_interno, 
			c.dt_entrada_unidade, 
			b.dt_acerto_conta 
		into STRICT	cd_setor_atendimento_w, 
			cd_convenio_w, 
			cd_categoria_w, 
			dt_referencia_w, 
			nr_seq_atepacu_w, 
			dt_entrada_unidade_w, 
			dt_acerto_conta_w 
		from 	Sus_Aih			d, 
			Atend_paciente_Unidade	c, 
			Atendimento_paciente 	A, 
			Conta_Paciente 		b 
		where	b.nr_interno_conta	= nr_interno_conta_p 
		and	A.nr_atendimento	= b.nr_atendimento 
		and	A.nr_atendimento	= c.nr_atendimento 
		and	b.nr_interno_conta	= d.nr_interno_conta 
		and	c.dt_entrada_unidade	= 
			(SELECT	max(y.dt_entrada_unidade) 
			from	setor_atendimento x, 
				atend_paciente_unidade y 
			where	c.nr_atendimento 	= y.nr_atendimento 
			and	x.cd_setor_atendimento	= y.cd_setor_atendimento 
			and	x.cd_classif_setor IN (3,4,8) 
			and	trunc(coalesce(y.dt_saida_unidade,TO_DATE('2999','yyyy'))) > trunc(dt_parametro_w - 1) 
			and	trunc(y.dt_entrada_unidade)	<= trunc(dt_parametro_w)) 
		and	TRUNC(dt_parametro_w) between trunc(coalesce(d.dt_inicial,A.dt_entrada)) and trunc(coalesce(d.dt_final,A.dt_alta)) 
		and	ie_tipo_convenio_w	= 3 
		and	ie_tipo_atendimento_w	= 1;
		exception 
			when others then 
			cd_setor_atendimento_w	:= 0;
		end;
 
		if (cd_setor_atendimento_w	> 0) then 
 
			select	count(*) 
			into STRICT	qt_proc_diaria_w 
			from	procedimento_paciente 
			where	cd_procedimento		= cd_proc_diaria_w 
			and	ie_origem_proced	= ie_origem_diaria_sh_w 
			and	nr_interno_conta	= nr_interno_conta_p 
			and	cd_setor_atendimento	= cd_setor_atendimento_w;
 
			if (qt_proc_diaria_w	= 0) then 
				select 	nextval('procedimento_paciente_seq') 
				into STRICT	nr_sequencia_w 
				;
 
				INSERT	INTO procedimento_paciente( 
					NR_ATENDIMENTO,DT_ENTRADA_UNIDADE,CD_PROCEDIMENTO,DT_PROCEDIMENTO,QT_PROCEDIMENTO, 
					DT_ATUALIZACAO,NM_USUARIO,CD_MEDICO,CD_CONVENIO,CD_CATEGORIA, 
					CD_PESSOA_FISICA,DT_PRESCRICAO,DS_OBSERVACAO,VL_PROCEDIMENTO,VL_MEDICO, 
					VL_ANESTESISTA,VL_MATERIAIS,CD_EDICAO_AMB,CD_TABELA_SERVICO,DT_VIGENCIA_PRECO, 
					CD_PROCEDIMENTO_PRINC,DT_PROCEDIMENTO_PRINC,DT_ACERTO_CONTA,DT_ACERTO_CONVENIO,DT_ACERTO_MEDICO, 
					VL_AUXILIARES,VL_CUSTO_OPERACIONAL,TX_MEDICO,TX_ANESTESIA,NR_PRESCRICAO, 
					NR_SEQUENCIA_PRESCRICAO,CD_MOTIVO_EXC_CONTA,DS_COMPL_MOTIVO_EXCON,CD_ACAO,QT_DEVOLVIDA, 
					CD_MOTIVO_DEVOLUCAO,NR_CIRURGIA,NR_DOC_CONVENIO,CD_MEDICO_EXECUTOR,IE_COBRA_PF_PJ, 
					NR_LAUDO,DT_CONTA,CD_SETOR_ATENDIMENTO,CD_CONTA_CONTABIL,CD_PROCEDIMENTO_AIH, 
					IE_ORIGEM_PROCED,NR_AIH,IE_RESPONSAVEL_CREDITO,TX_PROCEDIMENTO,CD_EQUIPAMENTO, 
					IE_VALOR_INFORMADO,CD_ESTABELECIMENTO_CUSTO,CD_TABELA_CUSTO,CD_SITUACAO_GLOSA,NR_LOTE_CONTABIL, 
					CD_PROCEDIMENTO_CONVENIO,NR_SEQ_AUTORIZACAO,IE_TIPO_SERVICO_SUS,IE_TIPO_ATO_SUS,CD_CGC_PRESTADOR, 
					NR_NF_PRESTADOR,CD_ATIVIDADE_PROF_BPA,NR_INTERNO_CONTA,NR_SEQUENCIA,NR_SEQ_PROC_PRINC, 
					IE_GUIA_INFORMADA,DT_INICIO_PROCEDIMENTO,IE_EMITE_CONTA,IE_FUNCAO_MEDICO,IE_CLASSIF_SUS, 
					CD_ESPECIALIDADE,NM_USUARIO_ORIGINAL,NR_SEQ_PROC_PACOTE,IE_TIPO_PROC_SUS,CD_SETOR_RECEITA, 
					VL_ADIC_PLANT,QT_PORTE_ANESTESICO,TX_HORA_EXTRA,IE_EMITE_CONTA_HONOR,NR_SEQ_ATEPACU, 
					IE_PROC_PRINC_ATEND,CD_MEDICO_REQ,IE_TIPO_GUIA,IE_VIDEO,NR_DOC_INTERNO, 
					IE_AUDITORIA,NR_SEQ_GRUPO_REC,CD_MEDICO_CONVENIO,CD_MOTIVO_AJUSTE,IE_VIA_ACESSO, 
					NR_SEQ_EXAME,NR_SEQ_COR_EXEC,IE_INTERCORRENCIA,NR_SEQ_ORIGEM,IE_DISPERSAO, 
					CD_SETOR_PACIENTE,NR_SEQ_CONTA_ORIGEM,NR_SEQ_PARCIAL,NR_SEQ_PROC_INTERNO,CD_SENHA, 
					NR_SEQ_AIH,NR_DOC_HONOR_CONV,DT_CONFERENCIA,IE_TIPO_ATEND_BPA,IE_GRUPO_ATEND_BPA, 
					CD_CGC_PRESTADOR_CONTA,CD_MEDICO_EXEC_CONTA,NR_SEQ_PQ_PROC) 
				VALUES (nr_atendimento_w,dt_entrada_unidade_w,cd_proc_diaria_w,dt_entrada_unidade_w,1, 
					clock_timestamp(),nm_usuario_p,NULL,cd_convenio_w,cd_categoria_w, 
					NULL,NULL,NULL,0,0, 
					0,0,NULL,NULL,NULL, 
					NULL,NULL,dt_acerto_conta_w,NULL,NULL, 
					0,NULL,NULL,NULL,NULL, 
					NULL,NULL,NULL,'1',0, 
					NULL,NULL,NULL,NULL,NULL, 
					NULL,NULL,cd_setor_atendimento_w,NULL,NULL, 
					ie_origem_diaria_sh_w,NULL,NULL,100,NULL, 
					'S',NULL,NULL,NULL,NULL, 
					NULL,NULL,NULL,NULL,NULL, 
					NULL,NULL,nr_interno_conta_p,nr_sequencia_w,NULL, 
					NULL,NULL,NULL,NULL,NULL, 
					NULL,nm_usuario_p,NULL,NULL,cd_setor_atendimento_w, 
					NULL,NULL,NULL,NULL,nr_seq_atepacu_w, 
					NULL,NULL,NULL,NULL,NULL, 
					NULL,NULL,NULL,NULL,NULL, 
					NULL,NULL,NULL,NULL,NULL, 
					NULL,NULL,NULL,NULL,NULL, 
					NULL,NULL,NULL,NULL,NULL, 
					NULL,NULL,NULL);
			elsif (qt_proc_diaria_w	> 0) THEN 
 
				update	procedimento_paciente 
				set	qt_procedimento		= qt_procedimento + 1 
				where	nr_interno_conta	= nr_interno_conta_p 
				and	cd_setor_atendimento	= cd_setor_atendimento_w 
				and	cd_procedimento		= cd_proc_diaria_w 
				and	ie_origem_proced	= ie_origem_diaria_sh_w;			
			end if;
		end if;
	 
		commit;
		 
		dt_parametro_w	:= dt_parametro_w + 1;
		END;
  	END LOOP;
 
END IF;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_rateio_sh_diaria ( nr_interno_conta_p bigint, nm_usuario_p text) FROM PUBLIC;

