-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_recalculo ( nr_seq_lote_p pls_lote_recalculo.nr_sequencia%type, ie_apenas_fins_contabeis_p text, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


ds_contas_w			varchar(2000) := '';
ds_item_w			varchar(255);
cd_cgc_w			pls_prestador.cd_cgc%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_medico_executor_w		varchar(10);
ie_status_w			varchar(10);
ie_origem_conta_w		varchar(10);
ie_estrut_mat_w			varchar(10);
ie_tipo_data_periodo_w		varchar(10);
ie_grupo_prestador_w		varchar(1) := 'S';
ie_estrutura_w			varchar(1);
ie_regra_fixo_w			varchar(1);
vl_liberado_w			double precision;
vl_total_conta_w		double precision := 0;
cd_procedimento_w		bigint;
cd_grupo_proc_w			bigint;
cd_especialidade_w		bigint;
cd_area_procedimento_w		bigint;
cd_item_w			bigint;
nr_seq_regra_w			pls_criterio_recalculo.nr_seq_regra%type;
ie_tipo_regra_w			bigint;
ie_origem_proced_w		procedimento.ie_origem_proced%type;
nr_seq_criterio_w		bigint;
nr_seq_criterio_ww		bigint;
nr_seq_item_w			bigint;
nr_seq_procedimento_w		pls_conta_proc.nr_sequencia%type;
nr_seq_material_w		pls_conta_mat.nr_sequencia%type;
nr_seq_cod_material_w		bigint;
nr_seq_prestador_exec_w		bigint;
nr_seq_grupo_prestador_w	bigint;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
nr_seq_conta_recalculo_w	bigint;
nr_seq_protocolo_w		bigint;
qt_prot_conta_titulo_w		integer := 0;
qt_conta_resumo_w		integer := 0;
nr_seq_classificacao_w		bigint;
nr_seq_regra_fixo_w		bigint;
nr_seq_prest_exec_lote_w	bigint;
nr_seq_estrut_mat_w		bigint;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
nr_seq_contrato_w		pls_segurado.nr_seq_contrato%type;
nr_seq_congenere_w		pls_segurado.nr_seq_congenere%type;
nr_seq_prestador_prot_w		pls_prestador.nr_sequencia%type;
nr_seq_tipo_prestador_w		pls_prestador.nr_seq_tipo_prestador%type;
nr_seq_grupo_rec_w		procedimento.nr_seq_grupo_rec%type;
nr_seq_intercambio_w		pls_segurado.nr_seq_intercambio%type;
aux_w				integer;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
dt_mes_competencia_w		timestamp;
dt_inicio_periodo_w		timestamp;
dt_fim_periodo_w		timestamp;
ie_tipo_item_w			varchar(1);
ie_exclui_ajuste_valor_w	pls_criterio_recalculo.ie_exclui_ajuste_valor%type;
ie_tipo_liberacao_w		pls_conta_proc.ie_tipo_liberacao%type;
ie_recalcular_pos_w		varchar(10);
ie_recalcular_copartic_w	varchar(10);
ie_recalculo_item_w		varchar(10);
nr_seq_prestador_pgto_w		pls_prestador.nr_sequencia%type;
qt_prestador_pag_w		integer;
ie_estrutura_ww			varchar(3);
ie_status_protocolo_w		varchar(1);
dt_atendimento_w		timestamp;
ie_cooperado_w			pls_criterio_recalculo.ie_cooperado%type;
qt_registos_partic		integer;
nr_seq_prestador_partic_w	pls_proc_participante.nr_seq_prestador%type;
ie_regra_fixo_partic_w		varchar(1);
nr_seq_regra_fixo_partic_w	bigint;
nr_seq_regra_fixo_pgto_w	bigint;
nr_lote_contabil_w		lote_contabil.nr_lote_contabil%type;
ie_status_prov_pagto_w		pls_parametro_contabil.ie_status_prov_pagto%type;
nr_lote_contabilizado_w		lote_contabil.nr_lote_contabil%type;
ie_selecionar_protocolo_w	pls_lote_recalculo.ie_protocolo%type;
ie_tipo_despesa_proc_w		pls_conta_proc.ie_tipo_despesa%type;
ie_tipo_despesa_mat_w		pls_conta_proc.ie_tipo_despesa%type;
vl_desconto_rec_proprias_w	pls_lote_recalculo.vl_desc_proprio%type;
vl_base_w			pls_conta_recalculo.vl_base%type;
vl_base_com_desconto_w		pls_conta_recalculo.vl_base_orig%type;
nr_lote_gerado_w		pls_lote_recalculo.nr_sequencia%type := 0;
dt_mes_ano_w			varchar(8);
nr_seq_conta_resumo_w		pls_conta_medica_resumo.nr_sequencia%type;
ie_regra_fixo_pgto_w		varchar(1);
dt_mes_competencia_prot_w	pls_protocolo_conta.dt_mes_competencia%type;
ie_gerou_recalculo_w		varchar(1) := 'N';
ie_tipo_conta_w			pls_criterio_recalculo.ie_tipo_conta%type;
t_prest_rec_proprio_w		pls_util_cta_pck.t_number_table; -- prestadores onde o rec pr_prio j_ foi calculado
t_val_rec_proprio_w		pls_util_cta_pck.t_number_table; -- valores do recurso pr_prio
index_w				integer := 0;
ie_grupo_contrato_w		varchar(1);
ie_tipo_valor_base_w		pls_lote_recalculo.ie_tipo_valor_base%type;
ie_valido_w				varchar(1)  := 'S';
qt_res_em_pagto_w		integer := 0;
nr_seq_prestador_pag_crit_w	pls_criterio_recalculo.nr_seq_prestador_pag%type;
ie_tipo_protocolo_w				pls_protocolo_conta.ie_tipo_protocolo%type;
ie_preco_w						pls_plano.ie_preco%type;
ie_carater_internacao_w         pls_conta.ie_carater_internacao%type;
nr_seq_tipo_atendimento_w       pls_conta.nr_seq_tipo_atendimento%type;
ie_carater_internacao_princ_w   pls_conta.ie_carater_internacao%type;
nr_tipo_atendimento_princ_w  	pls_conta.nr_seq_tipo_atendimento%type;
ie_tipo_guia_princ_w	       	pls_conta.ie_tipo_guia%type;	
ie_tipo_guia_w    				pls_conta.ie_tipo_guia%type;
ie_excecao_w 					varchar(1);
vl_fixo_regra_w					pls_criterio_recalculo_val.vl_fixo_regra%type := 0;
ie_regime_atendimento_w			pls_criterio_recalculo_exc.ie_regime_atendimento%type;
ie_regime_atendimento_princ_w	pls_criterio_recalculo_exc.ie_regime_atendimento_princ%type;
ie_saude_ocupacional_w			pls_criterio_recalculo_exc.ie_saude_ocupacional%type;
	

/* Felipe - 21/06/2011 - OS 332913 - Coloquei a restri__o nvl(a.vl_liberado,0) > 0 */


/* Felipe - 26/07/2011 - OS 338180 - Alterei para buscar os protocolos com status 5 - Analisado e aguardando libera__o para o pagamento */


/* Felipe - 19/08/2011 - OS 354157 - Solicitado para voltar a ser status 3 */

C01 CURSOR FOR
	SELECT	'P',
		a.cd_procedimento,
		a.ie_origem_proced,
		null nr_seq_material,
		a.nr_sequencia,
		a.nr_seq_conta,
		a.vl_liberado,
	--Altera__o realizada em decorr_ncia do TISS 3.02.00, ondes as informa__es estar_o contidas no participante e n_o mais na conta dgkorz OS 779578
		(	SELECT 	max(par.nr_seq_prestador)
			from 	pls_proc_participante par
			where 	par.nr_seq_conta_proc = a.nr_sequencia
			and (coalesce(par.ie_status::text, '') = '' or par.ie_status != 'C')) nr_seq_prestador_partic,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		b.nr_seq_protocolo,
		b.vl_total,
		coalesce((	select 	max(par.cd_medico)
			from 	pls_proc_participante par
			where 	par.nr_seq_conta_proc = a.nr_sequencia
			and (coalesce(par.ie_status::text, '') = '' or par.ie_status != 'C')), b.cd_medico_executor) cd_medico_executor,
		b.nr_seq_segurado,
		b.ie_status,
		b.ie_origem_conta,
		c.nr_seq_prestador,
		c.ie_status,
		a.dt_procedimento dt_atendimento,
		coalesce(coalesce(a.nr_lote_contabil,a.nr_lote_contabil_prov),0) nr_lote_contabil,
		a.ie_tipo_despesa ie_tipo_despesa_proc,
		null ie_tipo_despesa_mat, -- N_o trazer o tipo despesa de procedimento, se for informado na regra, apenas devem ser retornardos materiais.
		c.dt_mes_competencia,
		b.ie_tipo_conta,
		c.ie_tipo_protocolo,
		( select max(x.ie_preco)
		  from   pls_plano x,
				 pls_segurado y
		  where  x.nr_sequencia = y.nr_seq_plano
		  and    y.nr_sequencia = b.nr_seq_segurado
		) ie_preco,
		b.ie_carater_internacao,
		b.nr_seq_tipo_atendimento,
		(	select 	max(ie_carater_internacao) 
			from 	pls_conta 
			where 	nr_sequencia = b.nr_seq_conta_princ ) ie_carater_internacao_princ,
		(	select max(nr_seq_tipo_atendimento)
			from	pls_conta
			where 	nr_sequencia = b.nr_seq_conta_princ) nr_tipo_atendimento_princ,
		(	select max(ie_tipo_guia)
			from	pls_conta where nr_sequencia = b.nr_Seq_conta_princ) ie_tipo_guia_princ,
		b.ie_tipo_guia,
		b.ie_regime_atendimento,
		b.ie_saude_ocupacional,
		(	select max(x.ie_regime_atendimento)
				from	pls_conta x
				where 	x.nr_sequencia = b.nr_seq_conta_princ) ie_regime_atendimento_princ 		
	from	pls_protocolo_conta	c,
		pls_conta		b,
		pls_conta_proc		a
	where	a.nr_seq_conta		= b.nr_sequencia
	and	b.nr_seq_protocolo	= c.nr_sequencia
	and	c.dt_mes_competencia  between trunc(dt_mes_competencia_w,'month') and fim_mes(dt_mes_competencia_w)
	and	a.ie_status	!= 'D'
	and	((ie_tipo_data_periodo_w = 'A'
	and	(b.dt_atendimento_referencia IS NOT NULL AND b.dt_atendimento_referencia::text <> '')
	and (trunc(b.dt_atendimento_referencia) between trunc(dt_inicio_periodo_w) and coalesce(dt_fim_periodo_w,b.dt_atendimento_referencia+1))
	or (ie_tipo_data_periodo_w = 'E'
	and	(a.dt_procedimento IS NOT NULL AND a.dt_procedimento::text <> '')
	and	trunc(a.dt_procedimento) between trunc(dt_inicio_periodo_w) and coalesce(dt_fim_periodo_w,a.dt_procedimento+1))
	or (ie_tipo_data_periodo_w = 'R'
	and	(c.dt_recebimento IS NOT NULL AND c.dt_recebimento::text <> '')
	and	trunc(c.dt_recebimento) between trunc(dt_inicio_periodo_w) and coalesce(dt_fim_periodo_w,c.dt_recebimento+1)))
	or	coalesce(dt_inicio_periodo_w::text, '') = '')
	and	b.ie_status not in ('U','C')
	and not exists (	select	1
			from	pls_conta_proc_plant	x,
				pls_lote_plantonista	y
			where	y.nr_sequencia		= x.nr_seq_lote_plant
			and	a.nr_sequencia		= x.nr_seq_conta_proc
			and	(x.nr_seq_prestador_novo IS NOT NULL AND x.nr_seq_prestador_novo::text <> '')
			and	(y.dt_fechamento IS NOT NULL AND y.dt_fechamento::text <> ''))
	and	((b.nr_seq_prestador_exec = nr_seq_prest_exec_lote_w) or (nr_seq_prest_exec_lote_w = 0))
	and     ((not exists (	select 	1
				from	pls_conta_medica_resumo x,
					pls_lote_pagamento y
				where	x.nr_seq_conta = b.nr_sequencia
				and	x.nr_seq_conta_proc = a.nr_sequencia
				and	x.ie_situacao = 'A'
				and	y.nr_sequencia = x.nr_seq_lote_pgto
				
union all

				select	1
				from	pls_conta_medica_resumo x,
					pls_pp_lote y
				where	x.nr_seq_conta = b.nr_sequencia
				and	x.nr_seq_conta_proc = a.nr_sequencia
				and	x.ie_situacao = 'A'
				and	y.nr_sequencia = x.nr_seq_pp_lote)) or
		(ie_tipo_regra_w = '4' AND ie_recalculo_item_w = 'N')or (ie_tipo_regra_w = '1'))  --Aplicar ajuste de recurso pr_prio apenas para fins cont_beis(nesse caso n_o precisa verificar se esta em lote de pagamento)
	/*Inclu_da as origens abaixo devido a necessidade de recalcular as contas com origem a500 e a700 OS 613647*/

	and	((c.ie_tipo_protocolo	in ('C','I')) or (c.ie_tipo_protocolo = 'F' and (ie_recalcular_pos_w = 'S' or ie_recalcular_copartic_w = 'S')))-- protocolo de contas m_dicas
	and	((ie_recalcular_pos_w = 'N') or
		 ((ie_recalcular_pos_w = 'S') and exists (	select 	1
								from	pls_conta_pos_estabelecido x
								where	x.nr_seq_conta_proc = a.nr_sequencia
								and	coalesce(x.nr_seq_mensalidade_seg::text, '') = ''
								and	coalesce(x.nr_seq_lote_fat::text, '') = ''
								and	((x.ie_situacao	= 'A') or (coalesce(x.ie_situacao::text, '') = '')))
						and not exists (select 1
								from 	PLS_MENSALIDADE_SEG_ITEM x
								where	x.nr_seq_conta = a.nr_seq_conta)
						and not exists (select 1
								from	pls_fatura_proc x
								where	x.nr_seq_conta_proc = a.nr_sequencia)
						and not exists (select 	1
								from	pls_conta_pos_estabelecido x
								where	x.nr_seq_conta_proc  = a.nr_sequencia
								and	((x.ie_situacao	= 'A') or (coalesce(x.ie_situacao::text, '') = ''))
								and	x.vl_beneficiario < 0)))
	and	((ie_recalcular_copartic_w = 'N') or
		 ((ie_recalcular_copartic_w = 'S') and exists (	select 	1
								from	pls_conta_coparticipacao y
								where	y.nr_seq_conta_proc = a.nr_sequencia
								and	coalesce(y.nr_seq_mensalidade_seg::text, '') = '')
						and not exists (select 1
								from 	PLS_MENSALIDADE_SEG_ITEM x
								where	x.nr_seq_conta = a.nr_seq_conta)
						and not exists (select 	1
								from	pls_conta_coparticipacao y
								where	y.nr_seq_conta_proc = a.nr_sequencia
								and	y.vl_coparticipacao < 0)))
	and	((exists	(select 1
				 from	pls_conta_medica_resumo y
				 where	y.nr_seq_conta_proc 	= a.nr_sequencia
				 and	y.nr_seq_conta		= a.nr_seq_conta
				 and	y.nr_seq_prestador_pgto = nr_seq_prestador_pgto_w
				 and	((coalesce(y.ie_situacao::text, '') = '') or (y.ie_situacao != 'I')))) or (coalesce(nr_seq_prestador_pgto_w::text, '') = ''))
	and (exists (select 1
			from	pls_prot_lote_recalc y
			where	y.nr_seq_protocolo = c.nr_sequencia
			and	y.nr_seq_lote = nr_seq_lote_p) or (ie_selecionar_protocolo_w = 'N') or (coalesce(ie_selecionar_protocolo_w::text, '') = ''))
	
union all

	select	'M',
		null cd_procedimento,
		null ie_origem_proced,
		a.nr_seq_material,
		a.nr_sequencia,
		a.nr_seq_conta,
		a.vl_liberado,
		null nr_seq_prestador_partic,
		b.nr_seq_prestador_exec,
		b.nr_seq_protocolo,
		b.vl_total,
		b.cd_medico_executor,
		b.nr_seq_segurado,
		b.ie_status,
		b.ie_origem_conta,
		c.nr_seq_prestador,
		c.ie_status,
		a.dt_atendimento dt_atendimento,
		coalesce(coalesce(a.nr_lote_contabil,a.nr_lote_contabil_prov),0) nr_lote_contabil,
		null ie_tipo_despesa_proc, -- N_o trazer o tipo despesa de material, se for informado na regra, apenas devem ser retornardos procedimentos.
		a.ie_tipo_despesa ie_tipo_despesa_mat,
		c.dt_mes_competencia,
		b.ie_tipo_conta,
		c.ie_tipo_protocolo,
		( select max(x.ie_preco)
		  from   pls_plano x,
				 pls_segurado y
		  where  x.nr_sequencia = y.nr_seq_plano
		  and    y.nr_sequencia = b.nr_seq_segurado
		  ) ie_preco,
		b.ie_carater_internacao,
		b.nr_seq_tipo_atendimento,
		(	select 	max(ie_carater_internacao) 
			from 	pls_conta 
			where 	nr_sequencia = b.nr_seq_conta_princ ) ie_carater_internacao_princ,
		(	select max(nr_seq_tipo_atendimento)
			from	pls_conta
			where 	nr_sequencia = b.nr_seq_conta_princ) nr_tipo_atendimento_princ,
		(	select max(ie_tipo_guia)
			from	pls_conta where nr_sequencia = b.nr_Seq_conta_princ) ie_tipo_guia_princ,
		b.ie_tipo_guia,
		b.ie_regime_atendimento,
		b.ie_saude_ocupacional,
		(	select max(x.ie_regime_atendimento)
				from	pls_conta x
				where 	x.nr_sequencia = b.nr_seq_conta_princ) ie_regime_atendimento_princ		
	from	pls_protocolo_conta 	c ,
		pls_conta		b,
		pls_conta_mat		a
	where	a.nr_seq_conta		= b.nr_sequencia
	and	b.nr_seq_protocolo	= c.nr_sequencia
	and	c.dt_mes_competencia  between trunc(dt_mes_competencia_w,'month') and fim_mes(dt_mes_competencia_w)
	and	a.ie_status	!= 'D'
	and	((ie_tipo_data_periodo_w = 'A'
	and	(b.dt_atendimento_referencia IS NOT NULL AND b.dt_atendimento_referencia::text <> '')
	and (trunc(b.dt_atendimento_referencia) between trunc(dt_inicio_periodo_w) and coalesce(dt_fim_periodo_w,b.dt_atendimento_referencia+1))
	or (ie_tipo_data_periodo_w = 'E'
	and	(a.dt_atendimento IS NOT NULL AND a.dt_atendimento::text <> '')
	and	trunc(a.dt_atendimento) between trunc(dt_inicio_periodo_w) and coalesce(dt_fim_periodo_w,a.dt_atendimento+1))
	or (ie_tipo_data_periodo_w = 'R'
	and	(c.dt_recebimento IS NOT NULL AND c.dt_recebimento::text <> '')
	and	trunc(c.dt_recebimento) between trunc(dt_inicio_periodo_w) and coalesce(dt_fim_periodo_w,c.dt_recebimento+1)))
	or	coalesce(dt_inicio_periodo_w::text, '') = '')
	and	b.ie_status	not in ('U','C')
	and	((b.nr_seq_prestador_exec = nr_seq_prest_exec_lote_w) or (nr_seq_prest_exec_lote_w = 0))
	/*Inclu_da as origens abaixo devido a necessidade de recalcular as contas com origem a500 e a700 OS 613647*/

	and	((c.ie_tipo_protocolo	in ('C','I')) or (c.ie_tipo_protocolo = 'F' and (ie_recalcular_pos_w = 'S' or ie_recalcular_copartic_w = 'S')))-- protocolo de contas m_dicas
	and ((not exists (	select 	1
				from	pls_conta_medica_resumo x,
					pls_lote_pagamento y
				where	x.nr_seq_conta = b.nr_sequencia
				and	x.nr_seq_conta_mat = a.nr_sequencia
				and	x.ie_situacao = 'A'
				and	y.nr_sequencia = x.nr_seq_lote_pgto
				
union all

				select	1
				from	pls_conta_medica_resumo x,
					pls_pp_lote y
				where	x.nr_seq_conta = b.nr_sequencia
				and	x.nr_seq_conta_mat = a.nr_sequencia
				and	x.ie_situacao = 'A'
				and	y.nr_sequencia = x.nr_seq_pp_lote)) or
		(ie_tipo_regra_w = '4' AND ie_recalculo_item_w = 'N')or
		(ie_apenas_fins_contabeis_p = 'S' AND ie_tipo_regra_w = '1'))
	and	((ie_recalcular_pos_w = 'N') or
		 ((ie_recalcular_pos_w = 'S') and exists (	select 	1
								from	pls_conta_pos_estabelecido x
								where	x.nr_seq_conta_mat = a.nr_sequencia
								and	coalesce(x.nr_seq_mensalidade_seg::text, '') = ''
								and	coalesce(x.nr_seq_lote_fat::text, '') = ''
								and	((x.ie_situacao	= 'A') or (coalesce(x.ie_situacao::text, '') = '')))
						and not exists (select 1
								from 	PLS_MENSALIDADE_SEG_ITEM x
								where	x.nr_seq_conta = a.nr_seq_conta)
						and not exists (select 1
								from	pls_fatura_mat x
								where	x.nr_seq_conta_mat = a.nr_sequencia)
						and not exists (select 	1
								from	pls_conta_pos_estabelecido x
								where	x.nr_seq_conta_mat  = a.nr_sequencia
								and	((x.ie_situacao	= 'A') or (coalesce(x.ie_situacao::text, '') = ''))
								and	x.vl_beneficiario < 0)))
	and	((ie_recalcular_copartic_w = 'N') or
		 ((ie_recalcular_copartic_w = 'S') and exists (	select 	1
								from	pls_conta_coparticipacao y
								where	y.nr_seq_conta_mat = a.nr_sequencia
								and	coalesce(y.nr_seq_mensalidade_seg::text, '') = '')
						and not exists (select 1
								from 	PLS_MENSALIDADE_SEG_ITEM x
								where	x.nr_seq_conta = a.nr_seq_conta)
						and not exists (select 	1
								from	pls_conta_coparticipacao y
								where	y.nr_seq_conta_mat = a.nr_sequencia
								and	y.vl_coparticipacao < 0)))
	and (exists (select 1
			from	pls_prot_lote_recalc y
			where	y.nr_seq_protocolo = c.nr_sequencia
			and	y.nr_seq_lote = nr_seq_lote_p) or (ie_selecionar_protocolo_w = 'N') or (coalesce(ie_selecionar_protocolo_w::text, '') = ''));

C02 CURSOR FOR
	SELECT	/* +USE_CONCAT */
		a.nr_sequencia,
		a.nr_seq_grupo_prestador,
		coalesce(ie_estrutura,'S') ie_estrutura,
		a.nr_seq_estrut_mat,
		a.nr_seq_prestador_pag,
		a.nr_seq_prestador_partic,
		a.nr_seq_prestador,
		a.ie_exclui_ajuste_valor,
		a.nr_seq_grupo_contrato
	from	pls_criterio_recalculo	a
	where	a.nr_seq_regra	= nr_seq_regra_w
	and 	((coalesce(a.ie_cooperado::text, '') = ''  or a.ie_cooperado = 'A') or ( a.ie_cooperado = ie_cooperado_w))
	and	((coalesce(a.cd_procedimento::text, '') = '') or (a.cd_procedimento		= cd_procedimento_w and ie_origem_proced	= ie_origem_proced_w))
	and	((coalesce(a.cd_grupo_proc::text, '') = '') or (a.cd_grupo_proc		= cd_grupo_proc_w))
	and	((coalesce(a.cd_especialidade::text, '') = '') or (a.cd_especialidade		= cd_especialidade_w))
	and	((coalesce(a.nr_seq_material::text, '') = '') or (a.nr_seq_material 		= nr_seq_cod_material_w))
	and	((coalesce(a.nr_seq_prestador::text, '') = '') or (a.nr_seq_prestador 	= nr_seq_prestador_exec_w))
	and	((coalesce(a.nr_seq_contrato::text, '') = '') or (a.nr_seq_contrato 		= nr_seq_contrato_w))
	and	((coalesce(a.nr_seq_congenere::text, '') = '') or (a.nr_seq_congenere 	= nr_seq_congenere_w))
	and	((coalesce(a.ie_status::text, '') = '') or (a.ie_status 		= ie_status_w))
	and	((coalesce(a.nr_seq_grupo_rec::text, '') = '') or (a.nr_seq_grupo_rec 	= nr_seq_grupo_rec_w))
	and	((coalesce(a.ie_origem_conta::text, '') = '') or (a.ie_origem_conta 		= ie_origem_conta_w))
	and	((coalesce(a.nr_seq_intercambio::text, '') = '') or (a.nr_seq_intercambio  	= nr_seq_intercambio_w))
	and	((coalesce(a.ie_status_protocolo::text, '') = '') or (a.ie_status_protocolo 	= ie_status_protocolo_w))
	and	((coalesce(a.cd_area_procedimento::text, '') = '')or (a.cd_area_procedimento	= cd_area_procedimento_w))
	and	((coalesce(a.nr_seq_prestador_prot::text, '') = '') or (a.nr_seq_prestador_prot 	= nr_seq_prestador_prot_w))
	and	((coalesce(a.nr_seq_tipo_prestador::text, '') = '') or (a.nr_seq_tipo_prestador 	= nr_seq_tipo_prestador_w))
	and	((coalesce(a.nr_seq_prestador_partic::text, '') = '') or (a.nr_seq_prestador_partic	= nr_seq_prestador_partic_w))
	and	((coalesce(a.ie_tipo_despesa_proc::text, '') = '') or (a.ie_tipo_despesa_proc 	= ie_tipo_despesa_proc_w))
	and 	((coalesce(a.ie_tipo_despesa_mat::text, '') = '') or (a.ie_tipo_despesa_mat 	= ie_tipo_despesa_mat_w))
	and	((coalesce(a.ie_tipo_conta::text, '') = '' or a.ie_tipo_conta = 'T') or (a.ie_tipo_conta		= ie_tipo_conta_w))
	and	((coalesce(a.nr_seq_grupo_servico::text, '') = '') or ((a.nr_seq_grupo_servico IS NOT NULL AND a.nr_seq_grupo_servico::text <> '') and (pls_se_grupo_preco_servico(a.nr_seq_grupo_servico, cd_procedimento_w, ie_origem_proced_w) = 'S')))
	and ((coalesce(a.ie_preco::text, '') = '') or (a.ie_preco = ie_preco_w))
	and ((coalesce(a.ie_tipo_protocolo::text, '') = '') or (a.ie_tipo_protocolo = ie_tipo_protocolo_w))
	order by
		coalesce(a.cd_procedimento,0),
		coalesce(a.ie_origem_proced,0),
		coalesce(a.cd_grupo_proc,0),
		coalesce(a.cd_especialidade,0),
		coalesce(a.cd_area_procedimento,0),
		coalesce(a.nr_seq_grupo_rec,0),
		coalesce(a.nr_seq_material,0),
		coalesce(a.nr_seq_prestador,0),
		coalesce(a.nr_seq_prestador_pag,0),
		coalesce(a.nr_seq_tipo_prestador,0),
		coalesce(a.nr_seq_prestador_prot,0),
		coalesce(a.nr_seq_prestador_partic,0),
		coalesce(a.ie_status,' '),
		coalesce(a.ie_origem_conta,' '),
		coalesce(a.nr_seq_contrato,0),
		coalesce(a.nr_seq_intercambio,0),
		coalesce(a.nr_seq_congenere,0),
		coalesce(a.ie_status_protocolo,'A'),
		coalesce(a.ie_tipo_despesa_proc,' '),
		coalesce(a.ie_tipo_despesa_mat,' '),
		coalesce(a.ie_tipo_conta,'T'),
		coalesce(a.nr_seq_grupo_servico, 0),
		coalesce(a.ie_tipo_protocolo, 'A'),
		coalesce(a.ie_preco, 0);

procedure atualiza_vl_base_total( nr_seq_regra_p pls_criterio_recalculo.nr_seq_regra%type) is

valor_base_w		pls_conta_recalculo.vl_base%type := 0;
vl_prestador_w		pls_conta_recalculo.vl_base%type := 0;
ie_ja_calculou_w	varchar(1);

cprest_criterios CURSOR FOR
	SELECT 	distinct nr_seq_prestador_pag
	from	pls_criterio_recalculo
	where	nr_seq_regra = nr_seq_regra_p
	and	(nr_seq_prestador_pag IS NOT NULL AND nr_seq_prestador_pag::text <> '');

BEGIN
	if (t_val_rec_proprio_w.count > 0) then
		for i in t_val_rec_proprio_w.first .. t_val_rec_proprio_w.last loop

			valor_base_w := valor_base_w + t_val_rec_proprio_w(i);

		end loop;
	end if;

	--Ap_s somar os valores que tinham sido obtidos anteriormente para o valor base do recurso pr_prio, precisa verificar se falta calcular

	--de algum prestador de pagto informado nos crit_rios que n_o tenha entrado no rec_lculo, pois at_ aqui, o valor _ obtido apenas dos prestadores

	--das contas que entraram.
	for r_c01_w in cprest_criterios loop

		ie_ja_calculou_w := 'N';
		vl_prestador_w 	 := 0;
		if (t_prest_rec_proprio_w.count > 0) then
			for i in t_prest_rec_proprio_w.first .. t_prest_rec_proprio_w.last loop

				if (t_prest_rec_proprio_w(i) = r_c01_w.nr_seq_prestador_pag) then
					ie_ja_calculou_w := 'S';
				end if;
			end loop;
		end if;

		--Se esse prestador n_o havia sido calculado durante o levantamento das contas na gera__o do lote, quer dizer que est_ em um crit_rio por_m n_o

		--tem contas v_lidas para a compet_ncia atual, por_m o seu valor dever_ ser levado em considera__o na formula__o do valor_base
		if (ie_ja_calculou_w = 'N') then
			vl_prestador_w := pls_obter_valor_rec_proprio(r_c01_w.nr_seq_prestador_pag, dt_mes_competencia_w);
			valor_base_w   := valor_base_w + vl_prestador_w;
		end if;

	end loop;

	if (vl_desconto_rec_proprias_w > valor_base_w) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(335051);
	end if;

	if ( valor_base_w > 0) then
		update	pls_conta_recalculo
		set 	vl_base 	= valor_base_w - vl_desconto_rec_proprias_w,
			vl_base_orig 	= valor_base_w
		where	nr_seq_lote 	= nr_seq_lote_p;
	end if;

end;

function recuperar_val_recurso_proprio( nr_seq_prestador_p	pls_prestador.nr_sequencia%type)return;

begin

if (t_prest_rec_proprio_w.count > 0) then
	for i in t_prest_rec_proprio_w.first .. t_prest_rec_proprio_w.last loop

		if (t_prest_rec_proprio_w(i) = nr_seq_prestador_p) then
			valor_base_w := t_val_rec_proprio_w(i);
		end if;

	end loop;
end if;

if (valor_base_w = 0) then
	valor_base_w := pls_obter_valor_rec_proprio(nr_seq_prestador_p, dt_mes_competencia_w);
	t_prest_rec_proprio_w(index_w) := nr_seq_prestador_p;
	t_val_rec_proprio_w(index_w) := valor_base_w;
	index_w := index_w + 1;
end if;

return;

end;

begin
t_prest_rec_proprio_w.delete;

/* Obter dados do lote */

select	nr_seq_regra,
	trunc(dt_mes_competencia, 'month'),
	coalesce(nr_seq_prestador_exec,0),
	coalesce(ie_tipo_data_periodo,'A'),
	dt_inicio_periodo,
	dt_fim_periodo,
	cd_estabelecimento,
	coalesce(ie_recalcular_pos,'N'),
	coalesce(ie_recalcular_copartic,'N'),
	coalesce(ie_recalcular_item,'N'),
	coalesce(ie_protocolo,'N'),
	coalesce(vl_desc_proprio, 0),
	to_char(dt_mes_competencia,'mm/yyyy'),
	coalesce(ie_tipo_valor_base, 'I')
into STRICT	nr_seq_regra_w,
	dt_mes_competencia_w,
	nr_seq_prest_exec_lote_w,
	ie_tipo_data_periodo_w,
	dt_inicio_periodo_w,
	dt_fim_periodo_w,
	cd_estabelecimento_w,
	ie_recalcular_pos_w,
	ie_recalcular_copartic_w,
	ie_recalculo_item_w,
	ie_selecionar_protocolo_w,
	vl_desconto_rec_proprias_w,
	dt_mes_ano_w,
	ie_tipo_valor_base_w
from	pls_lote_recalculo
where	nr_sequencia = nr_seq_lote_p;

select	coalesce(ie_status_prov_pagto,'NC')
into STRICT	ie_status_prov_pagto_w
from	pls_parametro_contabil
where	cd_estabelecimento = cd_estabelecimento_w;

select 	max(nr_sequencia)
into STRICT	nr_lote_gerado_w
from	pls_lote_recalculo
where	to_char(dt_mes_competencia, 'mm/yyyy') = dt_mes_ano_w
and	nr_seq_regra = nr_seq_regra_w
and	(dt_geracao_lote IS NOT NULL AND dt_geracao_lote::text <> '');

if (coalesce(nr_lote_gerado_w,0) > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(335019, 'NR_LOTE=' || nr_lote_gerado_w);
	--N_o foi poss_vel gerar o recalculo do lote, j_ existe o lote #@NR_LOTE#@ cadastrado neste per_odo com a mesma regra.
end if;

/* Obter dados da regra */


/* ie_tipo_regra_w - Dom 3606 -
	1 - Rateio proporcional do recurso pr_prio
	2 - Altera__o de _ndices/moedas
	3 - Pagamento proporcional pelo valor fixo
	4 - Recalculo das regras existentes
*/
select	max(ie_tipo_regra)
into STRICT	ie_tipo_regra_w
from	pls_regra_lote_recalculo
where	nr_sequencia = nr_seq_regra_w;

if (ie_tipo_regra_w = 1 and ie_apenas_fins_contabeis_p = 'S') then
	CALL pls_gerar_recalculo_rec_prop(nr_seq_lote_p, ie_apenas_fins_contabeis_p, nm_usuario_p);
	
else

	open C01;
	loop
	fetch C01 into
		ie_tipo_item_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_cod_material_w,
		nr_seq_item_w,
		nr_seq_conta_w,
		vl_liberado_w,
		nr_seq_prestador_partic_w,
		nr_seq_prestador_exec_w,
		nr_seq_protocolo_w,
		vl_total_conta_w,
		cd_medico_executor_w,
		nr_seq_segurado_w,
		ie_status_w,
		ie_origem_conta_w,
		nr_seq_prestador_prot_w,
		ie_status_protocolo_w,
		dt_atendimento_w,
		nr_lote_contabil_w,
		ie_tipo_despesa_proc_w,
		ie_tipo_despesa_mat_w,
		dt_mes_competencia_prot_w,
		ie_tipo_conta_w,
		ie_tipo_protocolo_w,
		ie_preco_w,
		ie_carater_internacao_w,
		nr_seq_tipo_atendimento_w,       
		ie_carater_internacao_princ_w,   
		nr_tipo_atendimento_princ_w,  	
		ie_tipo_guia_princ_w,	       	
		ie_tipo_guia_w, 
		ie_regime_atendimento_w,
		ie_saude_ocupacional_w,
		ie_regime_atendimento_princ_w;		
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		/*
			Realizada uma altera__o para que quando um procedimento tenha um registro de pagamento(resumo)
			vinculado a um lote de pagamento, por_m existam outros registros de pagamento que n_o
			tenham v_nculo com lote de pagamento, deve deixar ajustar o valor, pois existem casos onde
			exista regra para recalculo de recurso pr_prio e tamb_m existam registros de pagamento para
			prestadores, na qual n_o devem ser ajustados.

		*/
		ie_valido_w := 'S';
		if (ie_tipo_regra_w <> '1') then

			/*
				Se for recalculo de regras existentes e op__o de recalcular item,
				pode manter os registros no lote, mesmo que exista alguma linha do
				resumo desse item, vinculada a um lote de pagamento.
			*/
			if (not(ie_tipo_regra_w = '4') and (ie_recalculo_item_w = 'N')) then
				select 	CASE WHEN count(1)=0 THEN  'S'  ELSE 'N' END
				into STRICT	ie_valido_w
				from	pls_conta_medica_resumo x
				where	x.nr_seq_conta = nr_seq_conta_w
				and	x.nr_seq_conta_proc = nr_seq_item_w
				and	(x.nr_seq_lote_pgto IS NOT NULL AND x.nr_seq_lote_pgto::text <> '')
				and	((coalesce(x.ie_situacao::text, '') = '') or (x.ie_situacao != 'I'));
			end if;

			--Isso aqui est_ sendo feito pois foi removida do cursor a restri__o para apenas entrarem itens com vl_liberado > 0, pois para recalculo de recurso pr_prio dever_o entrar(esses registros n_o ser_o recalculados, apenas ficar_o presentes no lote). J_ para

			--os outros tipos de regra, esses registros zerados dever_o ser desconsiderados.
			if (vl_liberado_w = 0) then
				ie_valido_w := 'N';
			end if;

		end if;
		
		
		if (ie_tipo_regra_w = 3) then
		
			--Para verifica__o de vig_ncia dos valores utiliza o m_s compet_ncia truncado mesmo, estando esse dentro do per_odo de datas da regra de valor a mesma _ valida. Se tiver

			--duas datas dentro da vig_ncia, pega o valor da regra com maior sequ_ncia.
			select 	max(vl_fixo_regra)
			into STRICT	vl_fixo_regra_w
			from	pls_criterio_recalculo_val
			where 	nr_sequencia in (	SELECT max(nr_sequencia)
						from	pls_criterio_recalculo_val
						where 	nr_seq_regra_recalculo = nr_seq_regra_w
						and 	dt_mes_competencia_w between dt_ini_vigencia and dt_fim_vigencia);
		
		
		end if;
		
		if (ie_valido_w = 'S') then

			if (ie_status_prov_pagto_w = 'F') then
				select	max(coalesce(r.nr_lote_contabil_prov,0)) nr_lote_contabil
				into STRICT	nr_lote_contabilizado_w
				from	pls_conta_medica_resumo		r
				where	r.nr_seq_conta = nr_seq_conta_w
				and	exists (SELECT	1
						from	pls_criterio_recalculo	c
						where	c.nr_seq_regra		= nr_seq_regra_w
						and	c.nr_seq_prestador_pag	= r.nr_seq_prestador_pgto)
				and	coalesce(r.nr_lote_contabil_prov,0) <> 0;

				if ( coalesce( nr_lote_contabilizado_w, 0 ) = 0 ) and (ie_recalcular_copartic_w	= 'S') then
					select	coalesce(max(b.nr_lote_contabil_prov),0) nr_lote_contabil
					into STRICT	nr_lote_contabilizado_w
					from	pls_conta_coparticipacao	c,
						pls_conta_copartic_contab	b
					where	c.nr_sequencia	= b.nr_seq_conta_copartic
					and	c.nr_seq_conta 	= nr_seq_conta_w
					and	exists (SELECT	1
							from	pls_criterio_recalculo	c
							where	c.nr_seq_regra		= nr_seq_regra_w
							and	c.nr_seq_prestador_pag	= b.nr_seq_prestador_pgto)
					and	coalesce(b.nr_lote_contabil_prov,0) <> 0;
				end if;
			end if;

			if (coalesce(nr_lote_contabilizado_w, 0) > 0 and ie_tipo_regra_w <> 1) then
				if (coalesce(ds_contas_w,'X') = 'X') then
					ds_contas_w := nr_seq_conta_w;
				else
					ds_contas_w := substr(ds_contas_w || ', ' || nr_seq_conta_w,1,2000);
				end if;
			else
				begin
				nr_seq_procedimento_w	:= '';
				nr_seq_material_w	:= '';

				if (ie_tipo_item_w = 'P') then
					nr_seq_procedimento_w	:= nr_seq_item_w;

					select	max(nr_seq_grupo_rec)
					into STRICT	nr_seq_grupo_rec_w
					from	procedimento
					where	cd_procedimento		= cd_procedimento_w
					and	ie_origem_proced	= ie_origem_proced_w;

				else
					nr_seq_material_w	:= nr_seq_item_w;
				end if;

				/*A regra de crit_rio  _ zerada para que ao entrar em um novo procedimento que n_o entra ne curosr 2 o novo procedimento n_o pegue a _ltima regra utilizada.
				Assim cada procedimento s_ recebe  a regra destinada a ele .
				Diego OPS - 08/10/2010 */
				nr_seq_criterio_w  := 0;

				select	count(1)
				into STRICT	qt_prot_conta_titulo_w
				from	pls_prot_conta_titulo
				where	nr_seq_protocolo	= nr_seq_protocolo_w
				and	(nr_seq_lote IS NOT NULL AND nr_seq_lote::text <> '');

				/*	Se for rateio proporcional do recurso pr_prio, ignora
					se j_ existam registros de pagto vinculados a lote de pagamento, pois
					ir_ processar _quele que n_o tiverem v_nculo
				*/
				if (ie_tipo_regra_w <> 1) then

					select	sum(qt)
					into STRICT	qt_conta_resumo_w
					from (
								SELECT	count(1) qt
								from	pls_conta_medica_resumo a,
									pls_lote_pagamento b
								where	a.nr_seq_item = nr_seq_item_w
								and	a.ie_proc_mat = ie_tipo_item_w
								and	a.ie_situacao = 'A'
								and	b.nr_sequencia = a.nr_seq_lote_pgto
								
union all

								SELECT	count(1) qt
								from	pls_conta_medica_resumo a,
									pls_pp_lote b
								where	a.nr_seq_item = nr_seq_item_w
								and	a.ie_proc_mat = ie_tipo_item_w
								and	a.ie_situacao = 'A'
								and	b.nr_sequencia = a.nr_seq_pp_lote
							) alias4;
				end if;

				/* Verificar se existe regra de valor fixo para o prestador/profissional, se n_o existir, nem inserir na tabela */

				ie_regra_fixo_w	:= 'S';
				ie_regra_fixo_partic_w	:= 'S';
				/* Verificar se a conta n_o est_ em protocolo de pagamento */

				if	((((qt_prot_conta_titulo_w = 0) and (qt_conta_resumo_w = 0) and
					((ie_regra_fixo_w = 'S') or (ie_regra_fixo_partic_w = 'S'))) or ie_apenas_fins_contabeis_p = 'S') or
					((ie_tipo_regra_w = 4) and
					 ((ie_recalcular_pos_w = 'S') or (ie_recalcular_copartic_w = 'S')) and (ie_recalculo_item_w = 'N'))) then
					if (coalesce(cd_procedimento_w,0) > 0) then
						SELECT * FROM pls_obter_estrut_proc(cd_procedimento_w, ie_origem_proced_w, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w;
						nr_seq_estrut_mat_w := 0; -- tratamento realizado par alimpar a variavel ou _ material ou _ procedimento
					elsif (coalesce(nr_seq_cod_material_w,0) > 0) then
						-- tratamento realizado par alimpar a variavel ou _ material ou _ procedimento
						cd_area_procedimento_w	:= 0;
						cd_especialidade_w	:= 0;
						cd_grupo_proc_w		:= 0;
					end if;

					ie_regra_fixo_w	:= 'S';
					ie_regra_fixo_partic_w	:= 'S';

					if (ie_tipo_regra_w = 3) then

						nr_seq_regra_fixo_w:= pls_obter_regra_recalculo_fixo(dt_mes_competencia_w, cd_medico_executor_w, nr_seq_prestador_exec_w);

						if (coalesce(nr_seq_regra_fixo_w,0) = 0) then
							ie_regra_fixo_w	:= 'N';
						end if;

						nr_seq_regra_fixo_partic_w	:= pls_obter_regra_recalculo_fixo(dt_mes_competencia_w, cd_medico_executor_w, nr_seq_prestador_partic_w);

						if (coalesce(nr_seq_regra_fixo_partic_w,0) = 0) then
							ie_regra_fixo_partic_w	:= 'N';
						end if;
					end if;

					/* Obter dados do benefici_rio */

					select	max(a.nr_seq_contrato),
						max(a.nr_seq_congenere),
						max(a.nr_seq_intercambio)
					into STRICT	nr_seq_contrato_w,
						nr_seq_congenere_w,
						nr_seq_intercambio_w
					from	pls_segurado a
					where	a.nr_sequencia = nr_seq_segurado_w;

					/* Obter dados do prestador */

					if (nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') then
						select	max(nr_seq_tipo_prestador),
							max(nr_seq_classificacao),
							max(cd_cgc),
							max(cd_pessoa_fisica)
						into STRICT	nr_seq_tipo_prestador_w,
							nr_seq_classificacao_w,
							cd_cgc_w,
							cd_pessoa_fisica_w
						from	pls_prestador
						where	nr_sequencia = nr_seq_prestador_exec_w;
					else
						nr_seq_tipo_prestador_w	:= null;
					end if;

					ie_cooperado_w := pls_obter_se_cooperado_ativo(cd_medico_executor_w, dt_atendimento_w, null );

					/* Se for N verifica ainda por participante */

					if (ie_cooperado_w = 'N' and ie_tipo_item_w = 'P') then
						select	count(1)
						into STRICT	qt_registos_partic
						from	pls_proc_participante a
						where	a.nr_seq_conta_proc = nr_seq_procedimento_w
						and	pls_obter_se_cooperado_ativo(a.cd_medico, dt_atendimento_w, null ) = 'S';

						if (qt_registos_partic > 0) then
							ie_cooperado_w := 'S';
						end if;
					end if;

					for r_c02_w in C02 loop
											
						ie_excecao_w := pls_obter_se_crit_valor_exc(r_c02_w.nr_sequencia, ie_carater_internacao_w, ie_carater_internacao_princ_w,
																	ie_origem_conta_w, ie_tipo_guia_w, ie_tipo_guia_princ_w,
																	nr_seq_tipo_atendimento_w, nr_tipo_atendimento_princ_w, nr_seq_prestador_exec_w,
																	nr_seq_classificacao_w, ie_regime_atendimento_w, ie_regime_atendimento_princ_w,
																	ie_saude_ocupacional_w, nr_seq_contrato_w, nr_seq_intercambio_w);
					
						if ( ie_excecao_w = 'N') then

							nr_seq_criterio_ww	 		:= r_c02_w.nr_sequencia;
							nr_seq_grupo_prestador_w 	:= r_c02_w.nr_seq_grupo_prestador;
							ie_estrutura_ww		 		:= r_c02_w.ie_estrutura;
							nr_seq_estrut_mat_w	 		:= r_c02_w.nr_seq_estrut_mat;
							nr_seq_prestador_pgto_w	 	:= r_c02_w.nr_seq_prestador_pag;
							ie_exclui_ajuste_valor_w 	:= r_c02_w.ie_exclui_ajuste_valor;
							nr_seq_regra_fixo_pgto_w 	:= null;
							ie_estrut_mat_w				:= 'S';
							ie_grupo_prestador_w 		:= 'S';
							qt_prestador_pag_w 			:= 0;
							ie_regra_fixo_pgto_w		:= 'N';
							ie_grupo_contrato_w 		:= 'S';

							if (nr_seq_estrut_mat_w IS NOT NULL AND nr_seq_estrut_mat_w::text <> '') then

								ie_estrut_mat_w	:= pls_obter_se_estruturas_mat(	nr_seq_estrut_mat_w,nr_seq_material_w);
							end if;

							/* Grupo de prestadores */

							if (coalesce(nr_seq_grupo_prestador_w,0) > 0) and (ie_estrut_mat_w = 'S') then

								ie_grupo_prestador_w := pls_se_grupo_preco_prestador(	nr_seq_grupo_prestador_w, nr_seq_prestador_exec_w, nr_seq_classificacao_w);
							end if;



							if (r_c02_w.nr_seq_grupo_contrato IS NOT NULL AND r_c02_w.nr_seq_grupo_contrato::text <> '') then

								ie_grupo_contrato_w := pls_se_grupo_preco_contrato(	r_c02_w.nr_seq_grupo_contrato, nr_seq_contrato_w, nr_seq_intercambio_w);
							end if;

							if (nr_seq_prestador_pgto_w IS NOT NULL AND nr_seq_prestador_pgto_w::text <> '') and (ie_grupo_prestador_w = 'S') and (ie_estrut_mat_w = 'S') and (ie_grupo_contrato_w = 'S') then

								if (ie_tipo_item_w	= 'M') then

									select	count(1)
									into STRICT	qt_prestador_pag_w
									from	pls_conta_medica_resumo
									where	nr_seq_conta_mat	= nr_seq_item_w
									and	nr_seq_conta		= nr_seq_conta_w
									and	nr_seq_prestador_pgto 	= nr_seq_prestador_pgto_w
									and	ie_situacao 		= 'A'
									and	ie_tipo_item		!= 'I';

								elsif (ie_tipo_item_w	= 'P') then

									select	count(1)
									into STRICT	qt_prestador_pag_w
									from	pls_conta_medica_resumo
									where	nr_seq_conta_proc	= nr_seq_item_w
									and	nr_seq_conta		= nr_seq_conta_w
									and	nr_seq_prestador_pgto 	= nr_seq_prestador_pgto_w
									and	ie_situacao 		= 'A'
									and	ie_tipo_item		!= 'I';
								end if;

								if (ie_tipo_regra_w = 3) and (qt_prestador_pag_w > 0) then

									ie_regra_fixo_pgto_w := 'S';
									nr_seq_regra_fixo_pgto_w := pls_obter_regra_recalculo_fixo(dt_mes_competencia_w, cd_medico_executor_w, nr_seq_prestador_pgto_w);

									if (coalesce(nr_seq_regra_fixo_pgto_w,0) = 0) then

										ie_regra_fixo_pgto_w	:= 'N';
									end if;
								end if;
							end if;

							if (r_c02_w.nr_seq_prestador_partic IS NOT NULL AND r_c02_w.nr_seq_prestador_partic::text <> '') and (nr_seq_regra_fixo_partic_w > 0) then

								nr_seq_regra_fixo_w := nr_seq_regra_fixo_partic_w;

							elsif (nr_seq_regra_fixo_pgto_w IS NOT NULL AND nr_seq_regra_fixo_pgto_w::text <> '') then

								nr_seq_regra_fixo_w := nr_seq_regra_fixo_pgto_w;
							end if;

							if (ie_grupo_prestador_w	= 'S') and
								((coalesce(nr_seq_prestador_pgto_w::text, '') = '')or
								(nr_seq_prestador_pgto_w IS NOT NULL AND nr_seq_prestador_pgto_w::text <> '' AND qt_prestador_pag_w > 0 )) and (ie_estrut_mat_w	= 'S') and
								((ie_tipo_regra_w	!= '3') or
								((ie_tipo_regra_w	= '3') and
								((ie_regra_fixo_pgto_w	= 'S') or (ie_regra_fixo_partic_w	= 'S') or (ie_regra_fixo_w	= 'S') or (vl_fixo_regra_w > 0)))) and (ie_grupo_contrato_w = 'S') then
								nr_seq_criterio_w	:= nr_seq_criterio_ww;
								ie_estrutura_w		:= ie_estrutura_ww;
							end if;

							if (ie_exclui_ajuste_valor_w = 'S') and (nr_seq_procedimento_w IS NOT NULL AND nr_seq_procedimento_w::text <> '') then
								select	max(ie_tipo_liberacao)
								into STRICT	ie_tipo_liberacao_w
								from	pls_conta_proc
								where	nr_sequencia = nr_seq_item_w;

								if (ie_tipo_liberacao_w = 'AV') then
									nr_seq_criterio_w := null;
								end if;
							end if;
							
						end if;
							
					end loop;

					if (ie_estrutura_w = 'N') then
						nr_seq_criterio_w := null;
					end if;

					if (ie_tipo_regra_w = '3') and (coalesce(nr_seq_regra_fixo_w,0) = 0 ) and (vl_fixo_regra_w = 0) then
						nr_seq_criterio_w := null;
					end if;
					
					if (nr_seq_criterio_w IS NOT NULL AND nr_seq_criterio_w::text <> '') then
						if (ie_apenas_fins_contabeis_p = 'N' AND ie_tipo_regra_w = '1') then
							
							qt_res_em_pagto_w := 0;
							select 	max(nr_seq_prestador_pag)
							into STRICT	nr_seq_prestador_pag_crit_w
							from 	pls_criterio_recalculo
							where  	nr_sequencia = nr_seq_criterio_w;
													
							--Se o crit_rio for por prestador de pagamento, precisa verificar se tem item no resumo vinculado a lote de pagamento e que seja desse prestador de pagamento
							if ((nr_seq_prestador_pag_crit_w IS NOT NULL AND nr_seq_prestador_pag_crit_w::text <> '') and ie_tipo_item_w = 'P') then
								select 	count(1)
								into STRICT	qt_res_em_pagto_w
								from	pls_conta_medica_resumo x,
										pls_lote_pagamento y
								where	x.nr_seq_conta = nr_seq_conta_w
								and		x.nr_seq_conta_proc = nr_seq_item_w
								and		x.ie_situacao = 'A'
								and		y.nr_sequencia = x.nr_seq_lote_pgto
								and  exists (SELECT 1 from pls_criterio_recalculo where  nr_sequencia = nr_seq_criterio_w and nr_seq_prestador_pag = x.nr_seq_prestador_pgto);						
								
								if (qt_res_em_pagto_w = 0) then
									
									select	count(1)
									into STRICT	qt_res_em_pagto_w
									from	pls_conta_medica_resumo x,
											pls_pp_lote y
									where	x.nr_seq_conta = nr_seq_conta_w
									and		x.nr_seq_conta_proc = nr_seq_item_w
									and		x.ie_situacao = 'A'
									and		y.nr_sequencia = x.nr_seq_pp_lote
									and  exists (SELECT 1 from pls_criterio_recalculo where  nr_sequencia = nr_seq_criterio_w and nr_seq_prestador_pag = x.nr_seq_prestador_pgto);
									
								end if;
							else
								--Se o crit_rio n_o for por prestador de pagamento ou for um material, ent_o se tiver um resumo vinculado a lote de pagamento desse item, j_ torna inv_lida o mesmo para entrar no rec_lculo
								if (ie_tipo_item_w = 'P') then
									select 	count(1)
									into STRICT	qt_res_em_pagto_w
									from	pls_conta_medica_resumo x,
											pls_lote_pagamento y
									where	x.nr_seq_conta = nr_seq_conta_w
									and		x.nr_seq_conta_proc = nr_seq_item_w
									and		x.ie_situacao = 'A'
									and		y.nr_sequencia = x.nr_seq_lote_pgto;						
									
									if (qt_res_em_pagto_w = 0) then
										
										select	count(1)
										into STRICT	qt_res_em_pagto_w
										from	pls_conta_medica_resumo x,
												pls_pp_lote y
										where	x.nr_seq_conta = nr_seq_conta_w
										and		x.nr_seq_conta_proc = nr_seq_item_w
										and		x.ie_situacao = 'A'
										and		y.nr_sequencia = x.nr_seq_pp_lote;
									end if;
								else
									select 	count(1)
									into STRICT	qt_res_em_pagto_w
									from	pls_conta_medica_resumo x,
											pls_lote_pagamento y
									where	x.nr_seq_conta = nr_seq_conta_w
									and		x.nr_seq_conta_mat = nr_seq_item_w
									and		x.ie_situacao = 'A'
									and		y.nr_sequencia = x.nr_seq_lote_pgto;						
									
									if (qt_res_em_pagto_w = 0) then
										
										select	count(1)
										into STRICT	qt_res_em_pagto_w
										from	pls_conta_medica_resumo x,
												pls_pp_lote y
										where	x.nr_seq_conta = nr_seq_conta_w
										and		x.nr_seq_conta_mat = nr_seq_item_w
										and		x.ie_situacao = 'A'
										and		y.nr_sequencia = x.nr_seq_pp_lote;
									end if;
								end if;
							
							end if;
														
							if (qt_res_em_pagto_w > 0) then
							
								nr_seq_criterio_w := 0;
							
							end if;
							
						end if;
					end if;

					if (coalesce(nr_seq_criterio_w, 0) > 0) then

						select	max(nr_seq_prestador_pag)
						into STRICT	nr_seq_prestador_pgto_w
						from	pls_criterio_recalculo
						where	nr_sequencia	= nr_seq_criterio_w;

					   if (ie_tipo_item_w = 'P') then
						select	max(nr_sequencia)
							into STRICT	nr_seq_conta_resumo_w
							from	pls_conta_medica_resumo
							where	nr_seq_conta_proc	= nr_seq_item_w
							and	nr_seq_conta		= nr_seq_conta_w
							and	ie_tipo_item		!= 'I'
							and	ie_situacao		= 'A';
						else
										select	max(nr_sequencia)
							into STRICT	nr_seq_conta_resumo_w
							from	pls_conta_medica_resumo
							where	nr_seq_conta_mat	= nr_seq_item_w
							and	nr_seq_conta		= nr_seq_conta_w
							and	ie_tipo_item		!= 'I'
							and	ie_situacao		= 'A';
						end if;

						if (nr_seq_prestador_pgto_w IS NOT NULL AND nr_seq_prestador_pgto_w::text <> '') then
							if (ie_tipo_item_w	= 'M') then
								select	sum(vl_lib_original)
								into STRICT	vl_liberado_w
								from	pls_conta_medica_resumo
								where	nr_seq_conta_mat	= nr_seq_item_w
								and	nr_seq_conta		= nr_seq_conta_w
								and	nr_seq_prestador_pgto 	= nr_seq_prestador_pgto_w
								and	ie_tipo_item 		<> 'I'
								and	vl_lib_original 	> 0
								and	ie_situacao 		= 'A';
							elsif (ie_tipo_item_w	= 'P') then
								select	sum(vl_lib_original)
								into STRICT	vl_liberado_w
								from	pls_conta_medica_resumo
								where	nr_seq_conta_proc	= nr_seq_item_w
								and	nr_seq_conta		= nr_seq_conta_w
								and	nr_seq_prestador_pgto 	= nr_seq_prestador_pgto_w
								and	ie_tipo_item 		<> 'I'
								and	vl_lib_original 	> 0
								and	ie_situacao 		= 'A';
							end if;

							if (ie_tipo_item_w = 'P') then
												select	max(nr_sequencia)
								into STRICT	nr_seq_conta_resumo_w
								from	pls_conta_medica_resumo
								where	nr_seq_conta_proc	= nr_seq_item_w
								and	nr_seq_conta		= nr_seq_conta_w
								and	nr_seq_prestador_pgto	= nr_seq_prestador_pgto_w
								and	ie_tipo_item		!= 'I'
								and	ie_situacao		= 'A';
							else
												select	max(nr_sequencia)
								into STRICT	nr_seq_conta_resumo_w
								from	pls_conta_medica_resumo
								where	nr_seq_conta_mat	= nr_seq_item_w
								and	nr_seq_conta		= nr_seq_conta_w
								and	nr_seq_prestador_pgto	= nr_seq_prestador_pgto_w
								and	ie_tipo_item		!= 'I'
								and	ie_situacao		= 'A';
							end if;
						end if;

						select	count(1)
						into STRICT	aux_w
						from	sip_nv_dados a
						where	a.ie_conta_enviada_ans = 'S'
						and	a.nr_seq_conta = nr_seq_conta_w
						and	exists (	SELECT	1
								from	pls_lote_sip b
								where	b.nr_sequencia = a.nr_seq_lote_sip
								and	(b.dt_envio IS NOT NULL AND b.dt_envio::text <> ''));

						if (aux_w > 0) then
							CALL wheb_mensagem_pck.exibir_mensagem_abort(338028);
						end if;

						select	max(nr_sequencia)
						into STRICT	nr_seq_conta_recalculo_w
						from	pls_conta_recalculo
						where	nr_seq_conta	= nr_seq_conta_w
						and	nr_seq_lote	= nr_seq_lote_p;

						if (coalesce(nr_seq_conta_recalculo_w,0) = 0) then
							select	nextval('pls_conta_recalculo_seq')
							into STRICT	nr_seq_conta_recalculo_w
							;

							if (ie_tipo_regra_w = 1) then
								vl_base_w := recuperar_val_recurso_proprio(coalesce(nr_seq_prestador_pgto_w,nr_seq_prestador_exec_w));
								vl_base_com_desconto_w 	:= vl_base_w - vl_desconto_rec_proprias_w;

								if	((vl_desconto_rec_proprias_w > vl_base_w) and (coalesce(ie_tipo_valor_base_w, 'I') <> 'C')) then
									CALL wheb_mensagem_pck.exibir_mensagem_abort(335051);

								end if;

							elsif (ie_tipo_regra_w = 3) then
								select	max(coalesce(vl_fixo,0)) /* Obter o valor fixo */
								into STRICT	vl_base_w
								from	pls_prestador_pgto_fixo
								where	nr_sequencia	= nr_seq_regra_fixo_w;

								vl_base_com_desconto_w := vl_base_w;
							end if;

							ie_gerou_recalculo_w := 'S';
							insert into pls_conta_recalculo(nr_sequencia, nr_seq_lote, nr_seq_conta,
								dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
								nm_usuario_nrec, vl_conta_atual, vl_conta,
								nr_seq_prestador, nr_seq_protocolo, cd_pessoa_fisica,
								cd_cgc, cd_medico_executor, vl_base, vl_base_orig,
								nr_seq_regra_fixo, dt_mes_competencia)
							values (	nr_seq_conta_recalculo_w, nr_seq_lote_p, nr_seq_conta_w,
								clock_timestamp(), nm_usuario_p, clock_timestamp(),
								nm_usuario_p, vl_total_conta_w, 0,
								coalesce(nr_seq_prestador_pgto_w,nr_seq_prestador_exec_w), nr_seq_protocolo_w, cd_pessoa_fisica_w,
								cd_cgc_w, cd_medico_executor_w, vl_base_com_desconto_w, vl_base_w,
								nr_seq_regra_fixo_w, dt_mes_competencia_prot_w);
						end if;

						if (coalesce(nr_seq_procedimento_w,0) > 0) then
							cd_item_w	:= cd_procedimento_w;
							ds_item_w	:= substr(obter_descricao_procedimento(cd_procedimento_w, ie_origem_proced_w),1,255);
							ie_tipo_item_w	:= 'P';
						elsif (coalesce(nr_seq_material_w,0) > 0) then
							cd_item_w	:= nr_seq_cod_material_w;
							ds_item_w	:= substr(pls_obter_desc_material(nr_seq_cod_material_w),1,255);
							ie_tipo_item_w	:= 'M';
						end if;

						insert into pls_item_recalculo(nr_sequencia, nr_seq_conta, dt_atualizacao,
							nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							nr_seq_procedimento, nr_seq_material, vl_item_atual,
							vl_item, cd_item, ds_item,
							ie_tipo_item, nr_regra_recalculo, nr_seq_cta_conta,
							nr_seq_conta_resumo)
						values (	nextval('pls_item_recalculo_seq'), nr_seq_conta_recalculo_w, clock_timestamp(),
							nm_usuario_p, clock_timestamp(), nm_usuario_p,
							nr_seq_procedimento_w, nr_seq_material_w, vl_liberado_w,
							0, cd_item_w, ds_item_w,
							ie_tipo_item_w, nr_seq_criterio_w, nr_seq_conta_w,
							nr_seq_conta_resumo_w);
					end if;
				end if;
				end;
			end if;
		end if;
		end;
	end loop;
	close C01;
end if;

--Se for valor base total e tipo da regra utilizada for Rateio proporcional do recurso pr_prio, ent_o atualiza a informa__o
if	( ie_tipo_valor_base_w = 'C' AND  ie_tipo_regra_w = 1) then
	atualiza_vl_base_total(nr_seq_regra_w);
end if;


--Para emitir uma mensagem de que nenhuma conta caiu no lote de rec_lculo
if (ie_gerou_recalculo_w = 'N' and ie_apenas_fins_contabeis_p = 'N') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(452043);
end if;

	/* 1 - Rateio proporcional do recurso pr_prio */

if (ie_tipo_regra_w	= 1) then
	CALL pls_gerar_recalculo_proprio(nr_seq_lote_p, nm_usuario_p);
elsif (ie_tipo_regra_w	= 3) then
	/* 3 - Pagamento proporcional pelo valor fixo */

	CALL pls_gerar_recalculo_valor_fixo(nr_seq_lote_p, nm_usuario_p);
elsif (ie_tipo_regra_w	= 4) then
	/* 4 - Recalculo das regras existentes
	Para esse tipo de regra, apenas _ gerada as contas no Calculo do lote, e na aplica__o do mesmo _ gerada a nova valoriza__o
	Isso porque a rotina que calcula os pre_os, j_ atualiza diretamente os valores na conta */
	ie_tipo_regra_w	:= 4;
end if;

update	pls_lote_recalculo
set	dt_geracao_lote	= clock_timestamp(),
	nm_usuario	= nm_usuario_p,
	dt_atualizacao	= clock_timestamp()
where	nr_sequencia	= nr_seq_lote_p;

commit;

if (coalesce(ds_contas_w,'X') <> 'X') then
	/* As seguintes contas n_o foram recalculadas porque j_ foram contabilizadas: #@DS_CONTAS#@ */

	CALL wheb_mensagem_pck.exibir_mensagem_abort(324878, 'DS_CONTAS=' || ds_contas_w);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_recalculo ( nr_seq_lote_p pls_lote_recalculo.nr_sequencia%type, ie_apenas_fins_contabeis_p text, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

