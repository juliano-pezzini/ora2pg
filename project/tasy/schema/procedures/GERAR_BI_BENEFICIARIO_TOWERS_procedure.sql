-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_bi_beneficiario_towers ( nr_seq_arq_informacao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


ds_sql_w			varchar(4000);
ds_filtros_w			varchar(4000);
var_cur_w			integer;
var_exec_w			integer;
var_retorno_w			integer;
arquivos_bi_filtros_w		pls_arquivos_bi_filtros%rowtype;
arquivos_bi_inf_w		pls_arquivos_bi_inf%rowtype;
nr_seq_segurado_w		bigint;
dt_rescisao_w			timestamp;
dt_contratacao_w		timestamp;
dt_mes_aux_w			timestamp;
dt_fim_mes_atual_w		timestamp;
dt_ultimo_hist_reativacao_w	timestamp;
dt_ultimo_hist_inativo_w	timestamp;
ie_tipo_historico_w		varchar(10);
nm_id_sid_w			pls_arquivos_bi_inf.nm_id_sid%type;
nm_id_serial_w			pls_arquivos_bi_inf.nm_id_serial%type;
arq_texto_w			utl_file.file_type;
ds_local_w			varchar(255) := null;
ds_erro_w			varchar(255);
qt_registros_w			bigint;
ds_log_w    			varchar(4000);
ds_linha_w			varchar(10000);
------------------------------------------------------------------------------------------------------------------------------
cd_usuario_plano_w		pls_segurado_carteira.cd_usuario_plano%type;
cd_usuario_plano_ww		pls_segurado_carteira.cd_usuario_plano%type;
ds_tipo_contratacao_w		varchar(60);
ds_plano_w			varchar(255);
ie_sexo_w			pessoa_fisica.ie_sexo%type;
dt_inclusao_operadora_w		timestamp;
dt_nascimento_w			timestamp;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
ds_uf_w				varchar(255);
ds_regiao_w			pls_regiao_arq_bi.ds_regiao%type;
ds_segmentacao_w		valor_dominio.ds_valor_dominio%type;
cd_cgc_estipulante_w		pls_contrato.cd_cgc_estipulante%type;
ie_preco_w			varchar(60);
nr_seq_titular_w		pls_segurado.nr_seq_titular%type;
ie_situacao_trabalhista_w	varchar(60);
nr_cpf_w			pessoa_fisica.nr_cpf%type;
ds_titular_w			varchar(60);
ds_parentesco_w			varchar(60);
nr_seq_plano_w			pls_plano.nr_sequencia%type;
nr_seq_preco_produto_w		pls_preco_produto.nr_sequencia%type;
cd_subgrupo_produto_w		pls_preco_produto.cd_subgrupo_produto%type;
bind_w				sql_pck.t_dado_bind;
cursor_w			sql_pck.t_cursor;


procedure grava_log_erro(	ds_erro_p	text,
				ds_stack_p    	text) is

;
BEGIN

-- Obter o log a ser gravado
ds_log_w  := substr('Erro: ' || ds_erro_p || pls_util_pck.enter_w ||
		    'Stack: ' || ds_stack_p, 1, 4000);

-- coloca com status de processado com erros.
update	pls_arquivos_bi_inf
set	ie_status		= 'E',
	nm_usuario		= nm_usuario_p,
	dt_atualizacao		= clock_timestamp(),
	DT_FIM_GERACAO		= clock_timestamp(),
	ds_erro			= ds_log_w
where	nr_sequencia 		= nr_seq_arq_informacao_p;

commit;

CALL wheb_mensagem_pck.exibir_mensagem_abort(306247);

end;

begin

select	sid,
	serial#
into STRICT	nm_id_sid_w,
	nm_id_serial_w
from	v$session
where 	audsid = userenv('SESSIONID');

-- coloca com status em processamento.
update	pls_arquivos_bi_inf
set	ie_status		= 'P',
	nm_id_sid		= nm_id_sid_w,
	nm_id_serial		= nm_id_serial_w,
	nm_usuario		= nm_usuario_p,
	dt_atualizacao		= clock_timestamp(),
	DT_INICIO_GERACAO	= clock_timestamp()
where	nr_sequencia 		= nr_seq_arq_informacao_p;
commit;

select	*
into STRICT	arquivos_bi_inf_w
from	pls_arquivos_bi_inf
where	nr_sequencia	= nr_seq_arq_informacao_p;

select	*
into STRICT	arquivos_bi_filtros_w
from	pls_arquivos_bi_filtros
where	nr_sequencia	= arquivos_bi_inf_w.nr_seq_arq_filtros;

dt_fim_mes_atual_w	:= last_day(arquivos_bi_filtros_w.dt_mes_referencia);
dt_mes_aux_w		:= trunc(arquivos_bi_filtros_w.dt_mes_referencia,'Month');

begin
SELECT * FROM obter_evento_utl_file(8, null, ds_local_w, ds_erro_w) INTO STRICT ds_local_w, ds_erro_w;
exception
when others then
	ds_local_w := null;
end;

if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
	CALL grava_log_erro(ds_erro_w,dbms_utility.format_error_backtrace);
end if;

begin
arq_texto_w := utl_file.fopen(ds_local_w,arquivos_bi_inf_w.nm_arquivo,'w');
exception
when others then
	ds_erro_w := obter_erro_utl_open(SQLSTATE);

	CALL grava_log_erro(ds_erro_w,dbms_utility.format_error_backtrace);
end;

if (arquivos_bi_filtros_w.dt_inicial IS NOT NULL AND arquivos_bi_filtros_w.dt_inicial::text <> '') then
	ds_filtros_w := ds_filtros_w || 'and b.dt_contrato >= :dt_inicio ';
end if;

if (arquivos_bi_filtros_w.dt_final IS NOT NULL AND arquivos_bi_filtros_w.dt_final::text <> '') then
	ds_filtros_w := ds_filtros_w || 'and b.dt_contrato <= :dt_fim ';
end if;

if (arquivos_bi_filtros_w.nr_seq_segurado IS NOT NULL AND arquivos_bi_filtros_w.nr_seq_segurado::text <> '') then
	ds_filtros_w := ds_filtros_w || 'and a.nr_sequencia = :nr_seq_segurado ';
end if;

if (arquivos_bi_filtros_w.nr_seq_plano IS NOT NULL AND arquivos_bi_filtros_w.nr_seq_plano::text <> '') then
	ds_filtros_w	:= ds_filtros_w||' and a.nr_seq_plano = :nr_seq_plano ';
end if;

if (arquivos_bi_filtros_w.nr_seq_grupo_produto IS NOT NULL AND arquivos_bi_filtros_w.nr_seq_grupo_produto::text <> '') then
	ds_filtros_w	:= ds_filtros_w||'  and substr(pls_se_grupo_preco_produto(:nr_seq_grupo_produto,a.nr_seq_plano),1,255) = ''S''';
end if;

if (arquivos_bi_filtros_w.nr_seq_contrato IS NOT NULL AND arquivos_bi_filtros_w.nr_seq_contrato::text <> '') then
	ds_filtros_w	:= ds_filtros_w||' and a.nr_seq_contrato = :nr_seq_contrato ';
end if;

if (arquivos_bi_filtros_w.nr_seq_grupo_contrato IS NOT NULL AND arquivos_bi_filtros_w.nr_seq_grupo_contrato::text <> '') then
	ds_filtros_w	:= ds_filtros_w||' and exists (	select 1
						from	PLS_CONTRATO_GRUPO x
						where	x.nr_seq_contrato 	= b.nr_sequencia
						and	x.nr_seq_grupo		= :nr_seq_grupo)';
end if;

ds_sql_w	:= 	'	select	a.nr_sequencia,			' ||
			'		a.dt_rescisao,  		' ||
			'		a.dt_contratacao, 		' ||
			'		c.cd_usuario_plano, 		' ||
			'		b.cd_cgc_estipulante 		' ||
			'	from	pls_segurado 		a,	' ||
			'		pls_contrato		b,	' ||
			'		pls_segurado_carteira	c	' ||
			'	where	a.nr_seq_contrato	= b.nr_sequencia ' ||
			'	and	c.nr_seq_segurado	= a.nr_sequencia ' ||
			'	and	a.dt_liberacao is not null 	' ||
			'	and	a.dt_cancelamento is null  	' ||
			'	and	a.dt_contratacao	<= :dt_fim_mes_atual ' || ds_filtros_w;

begin

	utl_file.put_line(arq_texto_w,  'SEGMENTO;TIPO DE PLANO;CODIGO DO PLANO;CNPJ DA EMPRESA;TIPO DE CONTRATO;NUMERO IDENTIFICACAO TITULAR;'||
					'NUMERO IDENTIFICACAO USUARIO;CPF;TITULARIDADE;TIPO DE BENEFICIARIO;TIPO DE USUARIO;'||
					'SEXO;UF REGIAO DO USUARIO;DATA DE NASCIMENTO DO USUARIO;INICIO DE VIGENCIA DO PLANO;FIM DE VIGENCIA DO PLANO;'||
					'ENTRADA DO USUARIO NO PLANO;SAIDA DO USUARIO NO PLANO;DATA_TERMINO' || chr(13));
	utl_file.fflush(arq_texto_w);
	bind_w.delete;
	bind_w := sql_pck.bind_variable(':dt_fim_mes_atual', dt_fim_mes_atual_w, bind_w);


	if (arquivos_bi_filtros_w.dt_inicial IS NOT NULL AND arquivos_bi_filtros_w.dt_inicial::text <> '') then
		bind_w := sql_pck.bind_variable(':dt_inicio', arquivos_bi_filtros_w.dt_inicial, bind_w);
	end if;

	if (arquivos_bi_filtros_w.dt_final IS NOT NULL AND arquivos_bi_filtros_w.dt_final::text <> '') then
		bind_w := sql_pck.bind_variable(':dt_fim', arquivos_bi_filtros_w.dt_final, bind_w);
	end if;

	if (arquivos_bi_filtros_w.nr_seq_plano IS NOT NULL AND arquivos_bi_filtros_w.nr_seq_plano::text <> '') then
		bind_w := sql_pck.bind_variable(':nr_seq_plano', arquivos_bi_filtros_w.nr_seq_plano, bind_w);
	end if;

	if (arquivos_bi_filtros_w.nr_seq_segurado IS NOT NULL AND arquivos_bi_filtros_w.nr_seq_segurado::text <> '') then
		bind_w := sql_pck.bind_variable(':nr_seq_segurado', arquivos_bi_filtros_w.nr_seq_segurado, bind_w);
	end if;

	if (arquivos_bi_filtros_w.nr_seq_grupo_produto IS NOT NULL AND arquivos_bi_filtros_w.nr_seq_grupo_produto::text <> '') then
		bind_w := sql_pck.bind_variable(':nr_seq_grupo_produto', arquivos_bi_filtros_w.nr_seq_grupo_produto, bind_w);
	end if;

	if (arquivos_bi_filtros_w.nr_seq_contrato IS NOT NULL AND arquivos_bi_filtros_w.nr_seq_contrato::text <> '') then
		bind_w := sql_pck.bind_variable(':nr_seq_contrato', arquivos_bi_filtros_w.nr_seq_contrato, bind_w);
	end if;

	if (arquivos_bi_filtros_w.nr_seq_grupo_contrato IS NOT NULL AND arquivos_bi_filtros_w.nr_seq_grupo_contrato::text <> '') then
		bind_w := sql_pck.bind_variable(':nr_seq_grupo', arquivos_bi_filtros_w.nr_seq_grupo_contrato, bind_w);
	end if;

	bind_w := sql_pck.executa_sql_cursor(ds_sql_w, bind_w);

	loop
		fetch cursor_w into nr_seq_segurado_w, dt_rescisao_w, dt_contratacao_w, cd_usuario_plano_w, cd_cgc_estipulante_w;
		EXIT WHEN NOT FOUND; /* apply on cursor_w */

		if	((trunc(dt_rescisao_w,'Month') >= dt_mes_aux_w) or (coalesce(dt_rescisao_w::text, '') = '')) then

			select	obter_valor_dominio(1666,d.ie_tipo_contratacao),
				CASE WHEN coalesce(d.nr_sequencia::text, '') = '' THEN d.ds_plano  ELSE d.nr_sequencia||'-'||d.nm_fantasia END ,
				c.ie_sexo,
				b.dt_inclusao_operadora,
				c.dt_nascimento,
				CASE WHEN coalesce(b.nr_seq_titular::text, '') = '' THEN b.cd_pessoa_fisica  ELSE (	select max(x.cd_pessoa_fisica)											from	pls_segurado x											where	x.nr_sequencia = b.nr_seq_titular) END ,
				obter_valor_dominio(1665,d.ie_segmentacao),
				b.nr_seq_titular,
				c.nr_cpf,
				coalesce(obter_valor_dominio(3840,b.ie_situacao_atend),'Ativo'),
				CASE WHEN coalesce(b.nr_seq_titular::text, '') = '' THEN 'Titular'  ELSE 'Dependente' END ,
				CASE WHEN coalesce(b.nr_seq_titular::text, '') = '' THEN 'Titular'  ELSE a.ds_parentesco END ,
				d.nr_sequencia,
				obter_valor_dominio(1669,d.ie_preco)
			into STRICT	ds_tipo_contratacao_w,
				ds_plano_w,
				ie_sexo_w,
				dt_inclusao_operadora_w,
				dt_nascimento_w,
				cd_pessoa_fisica_w,
				ds_segmentacao_w,
				nr_seq_titular_w,
				nr_cpf_w,
				ie_situacao_trabalhista_w,
				ds_titular_w,
				ds_parentesco_w,
				nr_seq_plano_w,
				ie_preco_w
			FROM pls_plano d, pessoa_fisica c, pls_segurado b
LEFT OUTER JOIN grau_parentesco a ON (b.nr_seq_parentesco = a.nr_sequencia)
WHERE b.cd_pessoa_fisica	= c.cd_pessoa_fisica and b.nr_seq_plano		= d.nr_sequencia  and b.nr_sequencia		= nr_seq_segurado_w;

			select	max(nr_sequencia)
			into STRICT	nr_seq_preco_produto_w
			from	pls_preco_produto
			where	nr_seq_plano = nr_seq_plano_w;

			select	max(cd_subgrupo_produto)
			into STRICT	cd_subgrupo_produto_w
			from 	pls_preco_produto
			where	nr_sequencia = nr_seq_preco_produto_w;

			if (cd_subgrupo_produto_w IS NOT NULL AND cd_subgrupo_produto_w::text <> '') then
				ds_plano_w := cd_subgrupo_produto_w ||' '|| ds_plano_w;
			end if;


			if (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then
				select	max(cd_usuario_plano)
				into STRICT	cd_usuario_plano_ww
				from 	pls_segurado_carteira
				where	nr_seq_segurado = nr_seq_titular_w;
			else
				cd_usuario_plano_ww := cd_usuario_plano_w;
			end if;

			begin
			select	sg_estado
			into STRICT	ds_uf_w
			from	compl_pessoa_fisica
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	ie_tipo_complemento	= 1;
			exception
			when others then
				ds_uf_w			:= '';
			end;

			ds_linha_w	:= ds_tipo_contratacao_w||';'||ds_segmentacao_w||';'||ds_plano_w||';'||cd_cgc_estipulante_w||';'||ie_preco_w||';'||cd_usuario_plano_ww||';'||
					cd_usuario_plano_w||';'||nr_cpf_w||';'||ds_titular_w||';'||ds_parentesco_w||';'||ie_situacao_trabalhista_w||';'||
					ie_sexo_w||';'||ds_uf_w||';'||to_char(dt_nascimento_w,'dd/mm/yyyy')||';'||to_char(dt_inclusao_operadora_w,'dd/mm/yyyy')||';'||to_char(dt_rescisao_w,'dd/mm/yyyy')||';'||
					to_char(dt_contratacao_w,'dd/mm/yyyy')||';'||to_char(dt_rescisao_w,'dd/mm/yyyy')||';'||to_char(dt_rescisao_w,'dd/mm/yyyy')||';';

			utl_file.put_line(arq_texto_w, ds_linha_w || chr(13));
			utl_file.fflush(arq_texto_w);
		end if;

		<<final>>
		nr_seq_segurado_w	:= nr_seq_segurado_w;

	end loop;
	close cursor_w;

	update	pls_arquivos_bi_inf
	set	ie_status		= 'C',
		DT_FIM_GERACAO		= clock_timestamp()
	where	nr_sequencia 		= nr_seq_arq_informacao_p;

exception
when others then
	CALL grava_log_erro(sqlerrm,dbms_utility.format_error_backtrace);
end;
if (cursor_w%isopen) then
	close cursor_w;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_bi_beneficiario_towers ( nr_seq_arq_informacao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

