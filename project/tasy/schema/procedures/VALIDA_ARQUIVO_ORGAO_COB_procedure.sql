-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE valida_arquivo_orgao_cob ( nr_seq_lote_p text, nm_usuario_p text) AS $body$
DECLARE


ds_erro_w varchar(4000);

c01 CURSOR FOR
	SELECT substr(obter_nome_pf_pj(a.cd_pessoa_fisica,null),1,255) ds_pessoa_fisica,
		substr(obter_nome_pf_pj(null,a.cd_cgc),1,255) ds_cgc,
		f.nr_cpf nr_documento,
		substr(obter_dados_pf_pj(a.cd_pessoa_fisica,null,'UF'),1,2) ds_uf,
		substr(obter_dados_pf_pj(a.cd_pessoa_fisica,null,'E'),1,45) ds_end_completo,
		substr(obter_dados_pf_pj(a.cd_pessoa_fisica,null,'B'),1,20) ds_bairro,
		substr(obter_dados_pf_pj(a.cd_pessoa_fisica,null,'CI'),1,25) ds_municipio,
		to_char(a.vl_cheque,'999,999,999,990.00') vl_documento,
		substr(obter_dados_pf_pj(a.cd_pessoa_fisica,null,'CEP'),1,25) ds_cep
	from	cheque_cr_orgao_cobr a,
		pessoa_fisica f,
		cheque_cr c
	where 	a.nr_seq_lote = nr_seq_lote_p
	and 	a.cd_pessoa_fisica = f.cd_pessoa_fisica
	and		a.nr_seq_cheque = c.nr_seq_cheque
	
union

	SELECT	substr(obter_nome_pf_pj(a.cd_pessoa_fisica,null),1,255) ds_pessoa_fisica,
		substr(obter_nome_pf_pj(null,a.cd_cgc),1,255) ds_cgc,
		a.cd_cgc nr_documento,
		substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'UF'),1,2) ds_uf,
		substr(obter_dados_pf_pj(null,a.cd_cgc,'E'),1,45) ds_end_completo,
		substr(obter_dados_pf_pj(null,a.cd_cgc,'B'),1,20) ds_bairro,
		substr(obter_dados_pf_pj(null,a.cd_cgc,'CI'),1,25) ds_municipio,
		to_char(a.vl_cheque,'999,999,999,990.00') vl_documento,
		substr(obter_dados_pf_pj(null,a.cd_cgc,'CEP'),1,25) ds_complemento
	from	cheque_cr_orgao_cobr a,
		pessoa_juridica j,
		cheque_cr c
	where 	a.nr_seq_lote = nr_seq_lote_p
	and 	a.cd_cgc = j.cd_cgc
	and 	a.nr_seq_cheque = c.nr_seq_cheque
	
union all

	select	substr(obter_nome_pf_pj(b.cd_pessoa_fisica,null),1,255) ds_pessoa_fisica,
		substr(obter_nome_pf_pj(null,b.cd_cgc),1,255) ds_cgc,
		f.nr_cpf nr_documento,
		substr(obter_dados_pf_pj(b.cd_pessoa_fisica,null,'UF'),1,2) ds_uf,
		substr(obter_dados_pf_pj(b.cd_pessoa_fisica,null,'E'),1,45) ds_end_completo,
		substr(obter_dados_pf_pj(b.cd_pessoa_fisica,null,'B'),1,20) ds_bairro,
		substr(obter_dados_pf_pj(b.cd_pessoa_fisica,null,'CI'),1,25) ds_municipio,
		to_char(b.vl_titulo,'999,999,999,990.00') vl_documento,
		substr(obter_dados_pf_pj(b.cd_pessoa_fisica,null,'CEP'),1,25) ds_complemento
	from 	titulo_receber_orgao_cobr b,
		pessoa_fisica f,
		titulo_receber t
	where 	b.nr_seq_lote = nr_seq_lote_p
	and 	b.cd_pessoa_fisica = f.cd_pessoa_fisica
	and		b.nr_titulo = t.nr_titulo
	
union

	select	substr(obter_nome_pf_pj(b.cd_pessoa_fisica,null),1,255) ds_pessoa_fisica,
		substr(obter_nome_pf_pj(null,b.cd_cgc),1,255) ds_cgc,
		b.cd_cgc nr_documento,
		substr(obter_dados_pf_pj(b.cd_pessoa_fisica,b.cd_cgc,'UF'),1,2) ds_uf,
		substr(obter_dados_pf_pj(null,b.cd_cgc,'E'),1,45) ds_end_completo,
		substr(obter_dados_pf_pj(null,b.cd_cgc,'B'),1,20) ds_bairro,
		substr(obter_dados_pf_pj(null,b.cd_cgc,'CI'),1,25) ds_municipio,
		to_char(b.vl_titulo,'999,999,999,990.00') vl_documento,
		substr(obter_dados_pf_pj(null,b.cd_cgc,'CEP'),1,25) ds_complemento
	from 	titulo_receber_orgao_cobr b,
		pessoa_juridica j,
		titulo_receber t
	where 	b.nr_seq_lote = nr_seq_lote_p
	and 	b.cd_cgc = j.cd_cgc
	and 	b.nr_titulo = t.nr_titulo;

vet01 c01%rowtype;


BEGIN

if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '')then

	open c01;
	loop
	fetch c01 into
		vet01;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		ds_erro_w := null;

		if (coalesce(vet01.nr_documento::text, '') = '') or (coalesce(vet01.ds_cep::text, '') = '')
			or (coalesce(vet01.ds_bairro::text, '') = '') or (coalesce(vet01.ds_municipio::text, '') = '')
			or (coalesce(vet01.ds_uf::text, '') = '') or (vet01.vl_documento = '0') then
			ds_erro_w := chr(13) || chr(13) || Wheb_mensagem_pck.get_texto(675684) || ' ' || coalesce(vet01.ds_pessoa_fisica,vet01.ds_cgc);
		end if;

		if (coalesce(vet01.nr_documento::text, '') = '') then
			ds_erro_w := ds_erro_w || chr(13) || Wheb_mensagem_pck.get_texto(675683); --CPF/CNPJ não informado
		end if;

		if (coalesce(vet01.ds_cep::text, '') = '') then
			ds_erro_w := ds_erro_w || chr(13) || Wheb_mensagem_pck.get_texto(676142); --CEP não informado
		end if;

		if (coalesce(vet01.ds_bairro::text, '') = '') then
			ds_erro_w := ds_erro_w || chr(13) || Wheb_mensagem_pck.get_texto(676143); --Bairro não informado
		end if;

		if (coalesce(vet01.ds_municipio::text, '') = '') then
			ds_erro_w := ds_erro_w || chr(13) || Wheb_mensagem_pck.get_texto(676152); --Município não informado
		end if;

		if (coalesce(vet01.ds_uf::text, '') = '') then
			ds_erro_w := ds_erro_w || chr(13) || Wheb_mensagem_pck.get_texto(676153); --Estado (UF) não informado
		end if;

		if (vet01.vl_documento = '0') then
			ds_erro_w := ds_erro_w || chr(13) || Wheb_mensagem_pck.get_texto(676154); --Valor da cobrança não informado
		end if;

		/* Exibe mensagem */

		if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_erro_w);
		end if;

		end;
	end loop;
	close c01;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE valida_arquivo_orgao_cob ( nr_seq_lote_p text, nm_usuario_p text) FROM PUBLIC;

