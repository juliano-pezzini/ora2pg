-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE populate_hdr_table ( dt_exportar_de_p timestamp , dt_exportar_ate_p timestamp , nm_usuario_p text , returned_value_p INOUT bigint , other_exception_p INOUT text ) AS $body$
DECLARE

  dt_exportar_de_w  timestamp;
  dt_exportar_ate_w timestamp;
  returned_value_w  bigint;
  /*--HDR table columns*/

  cd_facility_number_w      varchar(5 );
  nr_cad_records_w          varchar(5 );
  nr_can_records_w          varchar(5 );
  nr_fan_records_w          varchar(5 );
  nr_cdx_records_w          varchar(5 );
  line_count_w              bigint:=0;
  downloaded_report_count_w bigint:=0;
  v_errm                    varchar(100 );
  exc_raised_in_hdr_tab		exception;
  								   														
  error_result text:=null;
  c01 CURSOR FOR
    SELECT (SELECT   coalesce( trim(both substr( coalesce( obter_dados_pf_pj( null , obter_cgc_estabelecimento( WHEB_USUARIO_PCK.get_cd_estabelecimento ) , 'RFC' ) , '00000' ) , 1 , 5 ) ) , trim(both to_char( coalesce(
            obter_cgc_estabelecimento( WHEB_USUARIO_PCK.get_cd_estabelecimento ) , '00000' ) , '00000' ) ) )

        ) ,
      (select   trim(both to_char( count( * ) , '00000' ) )
        from cancer_admission_details
        where dt_export_from=dt_exportar_de_w
        and dt_export_to    =dt_exportar_ate_w
        and coalesce(nr_report_sequence::text, '') = ''
      ) ,
      (select   trim(both to_char( count( * ) , '00000' ) )
        from cancer_details
        where dt_export_from=dt_exportar_de_w
        and dt_export_to    =dt_exportar_ate_w
        and coalesce(nr_report_sequence::text, '') = ''
      ) ,
      (select   trim(both to_char( count( * ) , '00000' ) )
        from patient_former_names
        where dt_export_from=dt_exportar_de_w
        and dt_export_to    =dt_exportar_ate_w
        and coalesce(nr_report_sequence::text, '') = ''
      ) ,
      (select   trim(both to_char( count( * ) , '00000' ) )
        from clinical_diagosis_detail
        where dt_export_from=dt_exportar_de_w
        and dt_export_to    =dt_exportar_ate_w
        and coalesce(nr_report_sequence::text, '') = ''
      )
;

BEGIN
  dt_exportar_de_w :=dt_exportar_de_p;
  dt_exportar_ate_w:=dt_exportar_ate_p;
  if (dt_exportar_de_w IS NOT NULL AND dt_exportar_de_w::text <> '' AND dt_exportar_ate_w IS NOT NULL AND dt_exportar_ate_w::text <> '') then
    open c01;
    loop
    begin
        line_count_w:=line_count_w+1;
        fetch c01
          into cd_facility_number_w ,
            nr_cad_records_w ,
            nr_can_records_w ,
            nr_fan_records_w ,
            nr_cdx_records_w;
        EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
			insert
			into header_detail(
              nr_sequencia ,
              dt_atualizacao ,
              nm_usuario ,
              dt_atualizacao_nrec ,
              nm_usuario_nrec ,
              cd_facility_number ,
              nr_cad_records ,
              nr_can_records ,
              nr_fan_records ,
              nr_cdx_records ,
              dt_export_from ,
              dt_export_to ,
              nr_report_sequence
            )
            values (
              nextval('header_detail_seq') ,
              clock_timestamp() ,
              nm_usuario_p ,
              clock_timestamp() ,
              nm_usuario_p ,
              cd_facility_number_w ,
              nr_cad_records_w ,
              nr_can_records_w ,
              nr_fan_records_w ,
              nr_cdx_records_w ,
              dt_exportar_de_w ,
              dt_exportar_ate_w ,
              null
            );
		exception when others then
			v_errm      := substr( sqlerrm , 1 , 100 );
			error_result:= error_result || ' '|| v_errm||' . error happened at line '||line_count_w||' for facility number '|| cd_facility_number_w ||chr( 13 )||chr( 10 );
		end;						
    exception
		when data_exception or unique_violation or invalid_cursor_state then
        v_errm      := substr( sqlerrm , 1 , 100 );
        error_result:= error_result || ' '|| v_errm||' . error happened at line '||line_count_w||chr( 13 )||chr( 10 );
    end;
    end loop;
    returned_value_w :=1;
    other_exception_p:=null;
    if (error_result IS NOT NULL AND error_result::text <> '')then
      returned_value_w :=0;
      other_exception_p:=error_result;
	  raise exc_raised_in_hdr_tab;					
    end if;
    close c01;
  end if;
  returned_value_p:=returned_value_w;
exception
when others then
  returned_value_p :=2;
  other_exception_p:=other_exception_p||wheb_mensagem_pck.get_texto( 1073278 , 'DS_ERROR='||'populate_hdr_table. Error:'|| sqlerrm );
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE populate_hdr_table ( dt_exportar_de_p timestamp , dt_exportar_ate_p timestamp , nm_usuario_p text , returned_value_p INOUT bigint , other_exception_p INOUT text ) FROM PUBLIC;

