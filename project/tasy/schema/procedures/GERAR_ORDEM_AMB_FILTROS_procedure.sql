-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_ordem_amb_filtros ( dt_referencia_inicio_p timestamp, dt_referencia_final_p timestamp, cd_estabelecimento_p bigint, cd_estab_filtros_p text, ie_gerar_ordem_pac_chegada_p text, ie_pre_medicacao_p text default null, ie_tipo_atend_p text default null, nr_prescricao_p bigint default null, nm_usuario_p text DEFAULT NULL) AS $body$
DECLARE

					
nr_seq_atendimento_w	bigint;
nr_seq_paciente_w	  	bigint;
nr_prescricao_w		  	bigint;
qt_superf_corporal_w	double precision;
dt_prevista_w		    	timestamp;
cd_estabelecimento_w	smallint;
ie_exige_liberacao_w	varchar(1);
cd_medico_resp_w	  	varchar(10);
ie_exibe_apto_w		  	varchar(1);
nr_sequencia_log_w		bigint;
ie_liberado_w		    	varchar(1);
ie_gerar_prescr_w	  	varchar(1);
ie_consiste_ordem_w		varchar(1);
nm_paciente_w		    	varchar(60);
cd_estabelecimento_ww	smallint;
ds_retorno_ww		    	varchar(255);
dt_chegada_w		    	timestamp;
nr_atendimento_w	  	bigint;

C01 CURSOR FOR
	SELECT	nr_seq_atendimento,
		nr_seq_paciente,
		nr_prescricao,
		qt_superf_corporal,
		coalesce(dt_real,dt_prevista),
		ie_exige_liberacao,
		cd_estabelecimento,
		dt_chegada,
		nr_atendimento
	from	paciente_atendimento
	where	coalesce(dt_real,dt_prevista) >= dt_referencia_inicio_p
	and 	coalesce(dt_real,dt_prevista) <= dt_referencia_final_p
	AND 	((obter_se_contido(cd_estabelecimento,cd_estab_filtros_p) = 'S') OR (coalesce(cd_estab_filtros_p::text, '') = ''))
	and	((dt_chegada IS NOT NULL AND dt_chegada::text <> '') or (ie_gerar_ordem_pac_chegada_p = 'N'))
	and 	((dt_apto IS NOT NULL AND dt_apto::text <> '') or (coalesce(ie_exibe_apto_w,'N') = 'N'))
	and	coalesce(dt_cancelamento::text, '') = ''
	and (obter_tipo_convenio_atend(nr_atendimento) = coalesce(ie_tipo_atend_p,obter_tipo_convenio_atend(nr_atendimento)) or (coalesce(obter_tipo_convenio_atend(nr_atendimento),0) = 0)) 	;


BEGIN

select nextval('log_gera_ordem_seq')
into STRICT	nr_sequencia_log_w
;


insert into log_gera_ordem(
	nr_sequencia,
	nm_usuario,
	dt_inicio)
values (nr_sequencia_log_w,
	wheb_usuario_pck.get_nm_usuario,
	clock_timestamp());

commit;

ie_liberado_w := 'N';

ie_consiste_ordem_w := Obter_Param_Usuario(3130, 169, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_ordem_w);
ie_gerar_prescr_w := Obter_Param_Usuario(3130, 55, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_prescr_w);
ie_exibe_apto_w := Obter_Param_Usuario(3130, 204, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_exibe_apto_w);

if (ie_consiste_ordem_w = 'S') then
	while(ie_liberado_w <> 'S')  loop
		begin
		select 	coalesce(max('N'),'S')
		into STRICT 	ie_liberado_w
		from 	log_gera_ordem
		where 	nr_sequencia < nr_sequencia_log_w
		and (dt_inicio +1/288) > clock_timestamp()
		and 	coalesce(dt_final::text, '') = '';
		end;
	end loop;
end if;

begin
	OPEN C01;
	LOOP
	FETCH C01 into
		nr_seq_atendimento_w,
		nr_seq_paciente_w,
		nr_prescricao_w,
		qt_superf_corporal_w,
		dt_prevista_w,
		ie_exige_liberacao_w,
		cd_estabelecimento_ww,
		dt_chegada_w,
		nr_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		select	cd_medico_resp,
			cd_estabelecimento,
			substr(obter_nome_pf(cd_pessoa_fisica),1,60)
		into STRICT	cd_medico_resp_w,
			cd_estabelecimento_w,
			nm_paciente_w
		from	paciente_setor
		where	nr_seq_paciente	= nr_seq_paciente_w;
		if (coalesce(cd_medico_resp_w::text, '') = '') then
			CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(184696, 'NM_PACIENTE_W='||sqlerrm);
		end if;

		if (coalesce(nr_prescricao_w::text, '') = '') and (ie_gerar_prescr_w = 'S') then
			ds_retorno_ww := Gerar_Prescricao_Paciente(nr_seq_atendimento_w, nm_usuario_p, cd_estabelecimento_w, null, null, 'N', ds_retorno_ww);
		end if;
		end;
	END LOOP;
	Close C01;

    CALL Gerar_ordem_amb_filtros_Impl(dt_referencia_inicio_p, dt_referencia_final_p, cd_estabelecimento_p, cd_estab_filtros_p, ie_gerar_ordem_pac_chegada_p, ie_pre_medicacao_p, ie_tipo_atend_p, nr_prescricao_p, nm_usuario_p);

	update  log_gera_ordem
	set 	dt_final = clock_timestamp()
	where 	nr_sequencia = nr_sequencia_log_w;
	commit;

exception
when others then
	update  log_gera_ordem
	set 	dt_final = clock_timestamp()
	where 	nr_sequencia = nr_sequencia_log_w;
	commit;

    CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(184695, 'ERRO='||sqlerrm);
end;			

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ordem_amb_filtros ( dt_referencia_inicio_p timestamp, dt_referencia_final_p timestamp, cd_estabelecimento_p bigint, cd_estab_filtros_p text, ie_gerar_ordem_pac_chegada_p text, ie_pre_medicacao_p text default null, ie_tipo_atend_p text default null, nr_prescricao_p bigint default null, nm_usuario_p text DEFAULT NULL) FROM PUBLIC;

