-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE verifica_comunicacao_interna ( nm_usuario_p text, ds_retorno_p INOUT bigint) AS $body$
DECLARE

 
qt_reg_w			integer;
ie_gerencial_w		varchar(1);
ie_liberadas_w		varchar(1);
ds_comando_w		varchar(2000);
ds_parametros_w		varchar(2000);
ds_sep_bv_w		varchar(20);
qt_dias_filtro_w		bigint;
ie_estab_lib_usuario_w	varchar(1);


BEGIN 
 
--ds_sep_bv_w	:= obter_separador_bv; 
 
ie_gerencial_w 	:= OBTER_VALOR_PARAM_USUARIO(87,6,0,nm_usuario_p,1);
ie_liberadas_w 	:= OBTER_VALOR_PARAM_USUARIO(87,9,0,nm_usuario_p,1);
qt_dias_filtro_w	:= coalesce(OBTER_VALOR_PARAM_USUARIO(87,1,0,nm_usuario_p,1),7);
ie_estab_lib_usuario_w	:= coalesce(OBTER_VALOR_PARAM_USUARIO(87,36,0,nm_usuario_p,1),'S');
 
/*ds_comando_w := ''|| 
	'select	count(*) ' || 
	'from	comunic_interna ' || 
	'where	obter_se_mostra_comunicacao(nr_sequencia, :nm_usuario, ''S'',:ie_gerencial,null,nm_usuario,substr(nm_usuario_destino,1,2000),substr(nm_usuario_destino,2001,2000),ie_geral,ie_gerencial,cd_perfil,nr_seq_classif,substr(ds_perfil_adicional,1,2000),substr(ds_perfil_adicional,2001,2000),ds_setor_adicional,cd_setor_destino,cd_estab_destino,ds_grupo,nm_usuario_oculto,substr(ds_grupo_perfil,1,2000),ds_usuarios_ocultos,:ie_estab_lib_usuario,ds_estab_adicional,cd_especialidade, cd_cargo, cd_perfil_origem, ie_envio_terceiro, ie_funcionario) = '||chr(39) ||'S'||chr(39) || ' ' || 
	'and 	dt_comunicado > (sysdate - ' || qt_dias_filtro_w || ')'; 
	 
ds_parametros_w := 'nm_usuario='||nm_usuario_p|| ds_sep_bv_w || 'ie_gerencial='||ie_gerencial_w || ds_sep_bv_w || 'ie_estab_lib_usuario=' || ie_estab_lib_usuario_w; 
 
if	( ie_liberadas_w = 'S') then 
	ds_comando_w := ds_comando_w || ' and ((dt_liberacao is not null) or (nm_usuario = :nm_usuario))'; 
	ds_parametros_w := ds_parametros_w || ds_sep_bv_w || 'nm_usuario='||nm_usuario_p; 
end if;*/
 
 
if (ie_liberadas_w = 'S') then 
	select	count(1) 
	into STRICT	qt_reg_w 
	from	comunic_interna 
	where	obter_se_mostra_comunicacao(	nr_sequencia, 
						nm_usuario_p, 
						'S', 
						ie_gerencial_w, 
						null, 
						nm_usuario, 
						substr(nm_usuario_destino,1,2000), 
						substr(nm_usuario_destino,2001,2000), 
						ie_geral, 
						ie_gerencial, 
						cd_perfil, 
						nr_seq_classif, 
						substr(ds_perfil_adicional,1,2000), 
						substr(ds_perfil_adicional,2001,2000), 
						ds_setor_adicional, 
						cd_setor_destino, 
						cd_estab_destino, 
						ds_grupo, 
						nm_usuario_oculto, 
						substr(ds_grupo_perfil,1,2000), 
						ds_usuarios_ocultos, 
						ie_estab_lib_usuario_w, 
						ds_estab_adicional, 
						cd_especialidade, 
						cd_cargo, 
						cd_perfil_origem, 
						ie_envio_terceiro, 
						ie_funcionario) = 'S' 
	and 	dt_comunicado > (clock_timestamp() - qt_dias_filtro_w ) 
	and	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or (nm_usuario = nm_usuario_p));
else 
	select	count(1) 
	into STRICT	qt_reg_w 
	from	comunic_interna 
	where	obter_se_mostra_comunicacao(	nr_sequencia, 
						nm_usuario_p, 
						'S', 
						ie_gerencial_w, 
						null, 
						nm_usuario, 
						substr(nm_usuario_destino,1,2000), 
						substr(nm_usuario_destino,2001,2000), 
						ie_geral, 
						ie_gerencial, 
						cd_perfil, 
						nr_seq_classif, 
						substr(ds_perfil_adicional,1,2000), 
						substr(ds_perfil_adicional,2001,2000), 
						ds_setor_adicional, 
						cd_setor_destino, 
						cd_estab_destino, 
						ds_grupo, 
						nm_usuario_oculto, 
						substr(ds_grupo_perfil,1,2000), 
						ds_usuarios_ocultos, 
						ie_estab_lib_usuario_w, 
						ds_estab_adicional, 
						cd_especialidade, 
						cd_cargo, 
						cd_perfil_origem, 
						ie_envio_terceiro, 
						ie_funcionario) = 'S' 
	and 	dt_comunicado > (clock_timestamp() - qt_dias_filtro_w );
end if;
 
--obter_valor_dinamico_bv(ds_comando_w,ds_parametros_w,qt_reg_w); 
 
ds_retorno_p	:= qt_reg_w;
 
end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE verifica_comunicacao_interna ( nm_usuario_p text, ds_retorno_p INOUT bigint) FROM PUBLIC;

