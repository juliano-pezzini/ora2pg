-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_consiste_laudo_sismama_pac ( nr_seq_laudo_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ds_detalhe_w			varchar(255)	:= '';
cd_estabelecimento_w 		smallint;
cd_profissional_w   		varchar(10);
dt_emissao_w     		timestamp;dt_liberacao_w    		timestamp;
nr_atendimento_w   		bigint;
nr_sequencia_w			bigint;
nr_cartao_nac_sus_w		varchar(20);
qt_idade_w			bigint;
nr_identidade_w			varchar(15);
ds_orgao_emissor_ci_w		pessoa_fisica.ds_orgao_emissor_ci%type;
sg_emissora_ci_w			varchar(2);
nr_numero_w			varchar(6);
cd_municipio_ibge_w	varchar(6);
cd_cep_w			varchar(15);
cd_cns_profissional_w		varchar(15);
cd_cpf_profissional_w		varchar(11);
nm_mae_w			varchar(50);
dt_nascimento_w			timestamp;


BEGIN 
 
/*Obter os dados do Laudo*/
 
begin 
select	a.nr_sequencia, 
	a.cd_estabelecimento, 
	a.cd_profissional, 
	a.dt_emissao, 
	a.nr_atendimento, 
	c.nr_cartao_nac_sus, 
	Obter_Idade_PF(c.cd_pessoa_fisica,clock_timestamp(),'A'), 
	nr_identidade, 
	ds_orgao_emissor_ci, 
	sg_emissora_ci, 
	substr(obter_dados_pf(a.cd_profissional,'CNS'),1,15), 
	substr(obter_dados_pf(a.cd_profissional,'CPF'),1,11), 
	substr(obter_compl_pf(c.cd_pessoa_fisica,5,'N'),1,50), 
	c.dt_nascimento, 
	substr(obter_compl_pf(c.cd_pessoa_fisica,1,'NR'),1,6) 
into STRICT	nr_sequencia_w, 
	cd_estabelecimento_w, 
	cd_profissional_w, 
	dt_emissao_w, 
	nr_atendimento_w, 
	nr_cartao_nac_sus_w, 
	qt_idade_w, 
	nr_identidade_w, 
	ds_orgao_emissor_ci_w, 
	sg_emissora_ci_w, 
	cd_cns_profissional_w, 
	cd_cpf_profissional_w, 
	nm_mae_w, 
	dt_nascimento_w, 
	nr_numero_w 
from	pessoa_fisica 		c, 
	atendimento_paciente 	b, 
	sismama_atendimento	a 
where	a.nr_sequencia 	 	= nr_seq_laudo_p 
and	a.nr_atendimento 	= b.nr_atendimento 
and	b.cd_pessoa_fisica	= c.cd_pessoa_fisica;
exception 
	when others then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(174941);
	/*'Problemas para obter as informações do atendimento ao consistir o laudo.'*/
 
	end;
 
if (sus_obter_incolaudo_ativa(41)) and 
	((coalesce(nr_cartao_nac_sus_w::text, '') = '') or (coalesce(nr_cartao_nac_sus_w,'0') = '0')) then 
	ds_detalhe_w	:= 'Atend.: ' || nr_atendimento_w || ', Laudo: ' || nr_sequencia_w;
	CALL Sus_Laudo_Gravar_Inco(nr_seq_laudo_p, 41, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;
 
if (sus_obter_incolaudo_ativa(43)) and (coalesce(nr_identidade_w,'0') <> '0') and (coalesce(ds_orgao_emissor_ci_w,'0') = '0') then 
	ds_detalhe_w	:= 'Atend.: ' || nr_atendimento_w || ', Laudo: ' || nr_sequencia_w;
	CALL Sus_Laudo_Gravar_Inco(nr_seq_laudo_p, 43, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;
 
if (sus_obter_incolaudo_ativa(44)) and (coalesce(nr_identidade_w,'0') <> '0') and (coalesce(sg_emissora_ci_w,'0') = '0') then 
	ds_detalhe_w	:= 'Atend.: ' || nr_atendimento_w || ', Laudo: ' || nr_sequencia_w;
	CALL Sus_Laudo_Gravar_Inco(nr_seq_laudo_p, 44, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;
 
if (sus_obter_incolaudo_ativa(53)) and 
	((coalesce(cd_cns_profissional_w,'0') = '0') or (coalesce(cd_cpf_profissional_w,'0') = '0'))	then 
	begin 
	ds_detalhe_w	:= 'Atend.: ' || nr_atendimento_w || ', Laudo: ' || nr_sequencia_w;
	CALL Sus_Laudo_Gravar_Inco(nr_seq_laudo_p, 53, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end;
end if;
 
if (sus_obter_incolaudo_ativa(54)) and (coalesce(nm_mae_w,'X') = 'X') then 
	begin 
	ds_detalhe_w	:= 'Atend.: ' || nr_atendimento_w || ', Laudo: ' || nr_sequencia_w;
	CALL Sus_Laudo_Gravar_Inco(nr_seq_laudo_p, 54, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end;
end if;
 
if (sus_obter_incolaudo_ativa(59)) and (coalesce(nr_numero_w,'0') = '0') then 
	ds_detalhe_w	:= 'Atend.: ' || nr_atendimento_w || ', Laudo: ' || nr_sequencia_w;
	CALL Sus_Laudo_Gravar_Inco(nr_seq_laudo_p, 59, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;
 
if (sus_obter_incolaudo_ativa(64)) then 
	begin 
 
	select	coalesce(max(c.cd_cep),'X') cd_cep, 
		coalesce(max(c.cd_municipio_ibge),'X') cd_municipio_ibge 
	into STRICT	cd_cep_w, 
		cd_municipio_ibge_w 
	from	compl_pessoa_fisica	c, 
		atendimento_paciente 	b, 
		sismama_atendimento	a 
	where	a.nr_sequencia 	 	= nr_seq_laudo_p 
	and	a.nr_atendimento 	= b.nr_atendimento 
	and	b.cd_pessoa_fisica	= c.cd_pessoa_fisica 
	and	c.ie_tipo_complemento = 1;
 
	if (cd_municipio_ibge_w = 'X') or (cd_cep_w = 'X') then 
		begin 
		ds_detalhe_w	:= 'Atend.: ' || nr_atendimento_w || ', Laudo: ' || nr_sequencia_w;
		CALL Sus_Laudo_Gravar_Inco(nr_seq_laudo_p, 64, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
 
	end if;
	end;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_consiste_laudo_sismama_pac ( nr_seq_laudo_p bigint, nm_usuario_p text) FROM PUBLIC;

