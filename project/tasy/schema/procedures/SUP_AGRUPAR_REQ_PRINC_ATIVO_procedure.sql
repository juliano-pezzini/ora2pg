-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE colunas AS (	cd_material_w		integer,
			nr_seq_ficha_tecnica_w	integer,
			cd_unidade_medida_w 	varchar(30),
			qt_material_w		double precision);


CREATE OR REPLACE PROCEDURE sup_agrupar_req_princ_ativo ( nr_requisicao_p bigint, nm_usuario_p text) AS $body$
DECLARE


type vetor is table of colunas index by integer;

vetor_w		vetor;
vetor_aux_w	vetor;

nr_seq_ficha_tecnica_w		bigint;
nr_sequencia_w			integer;
cd_material_w			integer;
cd_material_estoque_w		integer;
qt_existe_w			integer;
cd_estabelecimento_w		smallint;
cd_local_estoque_w		smallint;
cd_local_estoque_destino_w		smallint;
qt_material_consumo_w		double precision;
qt_material_requisitada_w		double precision;
qt_material_estoque_w		double precision;
qt_saldo_material_w		double precision;
qt_saldo_total_w			double precision;
qt_dose_w			double precision;
qt_dose_aux_w			double precision;
qt_total_dose_w			double precision;
qt_conversao_w			double precision;
qt_conversao_aux_w		double precision;
qt_conv_estoque_consumo_w	double precision;
cd_unidade_medida_w		varchar(30);
cd_unidade_medida_ficha_tec_w	varchar(30);
cd_unidade_medida_estoque_w	varchar(30);
cd_unidade_medida_consumo_w	varchar(30);
qt_aux_w				double precision;

x				bigint := 0;
i				bigint := 0;
k				bigint := 0;
cont_w				bigint := 0;

c01 CURSOR FOR
SELECT	a.cd_material,
	sum(obter_quantidade_convertida(a.cd_material, a.qt_material_requisitada, a.cd_unidade_medida, 'UMC'))
from	item_requisicao_material a,
	material b
where	a.cd_material = b.cd_material
and	a.nr_requisicao = nr_requisicao_p
and	coalesce(b.nr_seq_ficha_tecnica::text, '') = ''
group by a.cd_material
order by	a.cd_material;

c02 CURSOR FOR
SELECT	b.nr_seq_ficha_tecnica
from	item_requisicao_material a,
	material b
where	a.cd_material = b.cd_material
and	(b.nr_seq_ficha_tecnica IS NOT NULL AND b.nr_seq_ficha_tecnica::text <> '')
and	a.nr_requisicao = nr_requisicao_p
group by b.nr_seq_ficha_tecnica
order by	b.nr_seq_ficha_tecnica;

c03 CURSOR FOR
SELECT	a.cd_material,
	sum(obter_quantidade_convertida(a.cd_material, a.qt_material_requisitada, a.cd_unidade_medida, 'UMC'))
from	item_requisicao_material a,
	material b
where	a.cd_material = b.cd_material
and	a.nr_requisicao = nr_requisicao_p
and	(b.nr_seq_ficha_tecnica IS NOT NULL AND b.nr_seq_ficha_tecnica::text <> '')
and	b.nr_seq_ficha_tecnica = nr_seq_ficha_tecnica_w
group by a.cd_material
order by	a.cd_material;

c04 CURSOR FOR
SELECT	a.cd_material,
	coalesce(b.cd_unidade_medida_consumo, a.cd_unidade_medida_consumo) cd_unidade_medida_consumo,
	coalesce(obter_conversao_unid_med_onc(a.cd_material, vetor_aux_w[i].cd_unidade_medida_w),0) qt_conversao
from	material a,
	material_estab b
where	a.cd_material = b.cd_material
and	a.ie_tipo_material not in (6,8)
and	a.ie_situacao = 'A'
and	coalesce(b.ie_requisicao,'N') = 'S'
and	coalesce(b.ie_material_estoque,'N') = 'S'
and	b.cd_estabelecimento = cd_estabelecimento_w
and	a.nr_seq_ficha_tecnica = vetor_aux_w[i].nr_seq_ficha_tecnica_w
order by qt_conversao desc, a.qt_prioridade_coml desc;

c05 CURSOR FOR
SELECT	a.cd_material_estoque
from	material a,
	material_estab b
where	a.cd_material = b.cd_material
and	a.ie_tipo_material not in (6,8)
and	a.ie_situacao = 'A'
and	coalesce(b.ie_requisicao,'N') = 'S'
and	coalesce(b.ie_material_estoque,'N') = 'S'
and	b.cd_estabelecimento = cd_estabelecimento_w
and	a.nr_seq_ficha_tecnica = nr_seq_ficha_tecnica_w
group by a.cd_material_estoque;


BEGIN
select	cd_estabelecimento,
	cd_local_estoque,
	cd_local_estoque_destino
into STRICT	cd_estabelecimento_w,
	cd_local_estoque_w,
	cd_local_estoque_destino_w
from	requisicao_material
where	nr_requisicao = nr_requisicao_p;

cont_w	:= 0;

/*Busca os materiais da requisição que não possuem ficha técnica e realiza o agrupamento das quantidades pelo material*/

open c01;
loop
fetch c01 into
	cd_material_w,
	qt_material_requisitada_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	cd_unidade_medida_consumo_w := substr(obter_dados_material_estab(cd_material_w, cd_estabelecimento_w, 'UMS'),1,30);

	select	QT_CONV_ESTOQUE_CONSUMO,
		cd_material_estoque
	into STRICT	qt_conv_estoque_consumo_w,
		cd_material_estoque_w
	from	material
	where	cd_material = cd_material_w;

	qt_saldo_material_w := Obter_Saldo_Estoque(	cd_estabelecimento_w, cd_material_estoque_w, cd_local_estoque_destino_w, trunc(clock_timestamp(),'mm'), qt_saldo_material_w);

	qt_saldo_material_w		:= (qt_saldo_material_w * qt_conversao_w);
	qt_material_requisitada_w 	:= ceil(qt_material_requisitada_w - qt_saldo_material_w);

	if (qt_material_requisitada_w > 0) then
		begin
		vetor_aux_w[cont_w].cd_material_w		:= cd_material_w;
		vetor_aux_w[cont_w].nr_seq_ficha_tecnica_w	:= null;
		vetor_aux_w[cont_w].qt_material_w		:= qt_material_requisitada_w;
		vetor_aux_w[cont_w].cd_unidade_medida_w	:= cd_unidade_medida_consumo_w;
		cont_w := (cont_w + 1);
		end;
	end if;
	end;
end loop;
close c01;

/*Busca os materiais da requisição que possuem ficha técnica e realiza o agrupamento das quantidades (convertendo para dose). O agrupamento é realizado pela ficha técnica*/

open c02;
loop
fetch c02 into
	nr_seq_ficha_tecnica_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	qt_dose_w := 0;
	select	max(a.cd_unidade_medida_consumo)
	into STRICT	cd_unidade_medida_w
	from	material a
	where	a.ie_situacao = 'A'
	and	a.ie_tipo_material = 6
	and	a.nr_seq_ficha_tecnica = nr_seq_ficha_tecnica_w;

	if (coalesce(cd_unidade_medida_w::text, '') = '') then
		begin
		select	max(cd_unidade_medida)
		into STRICT	cd_unidade_medida_w
		from (SELECT	b.cd_unidade_medida
			from	material a,
				material_conversao_unidade b
			where	a.cd_material = b.cd_material
			and	a.ie_situacao = 'A'
			and	a.nr_seq_ficha_tecnica = nr_seq_ficha_tecnica_w
			group by b.cd_unidade_medida
			order by count(*) desc) alias4 LIMIT 1;
		end;
	end if;

	open c03;
	loop
	fetch c03 into
		cd_material_w,
		qt_material_consumo_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		qt_conversao_w := coalesce(obter_conversao_unid_med_onc(cd_material_w, cd_unidade_medida_w),0);

		if (qt_conversao_w > 0) then
			qt_dose_w := qt_dose_w + (qt_material_consumo_w * qt_conversao_w);
		else
			qt_dose_w := qt_dose_w + qt_material_consumo_w;
		end if;
		end;
	end loop;
	close c03;

	qt_saldo_total_w := 0;
	open C05;
	loop
	fetch C05 into
		cd_material_estoque_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin
		select	qt_conv_estoque_consumo
		into STRICT	qt_conv_estoque_consumo_w
		from	material
		where	cd_material = cd_material_estoque_w;

		qt_conversao_aux_w 	:= coalesce(obter_conversao_unid_med_onc(cd_material_estoque_w, cd_unidade_medida_w),0);
		qt_conversao_w		:= (qt_conversao_aux_w * qt_conv_estoque_consumo_w);

		qt_saldo_material_w := Obter_Saldo_Estoque(	cd_estabelecimento_w, cd_material_estoque_w, cd_local_estoque_destino_w, trunc(clock_timestamp(),'mm'), qt_saldo_material_w);

		qt_saldo_material_w	:= (qt_saldo_material_w * qt_conversao_w);
		qt_saldo_total_w	:= (qt_saldo_total_w + qt_saldo_material_w);
		end;
	end loop;
	close C05;

	qt_dose_w := (qt_dose_w - qt_saldo_total_w);

	if (qt_dose_w > 0) then
		begin
		vetor_aux_w[cont_w].cd_material_w		:= cd_material_w;
		vetor_aux_w[cont_w].nr_seq_ficha_tecnica_w	:= nr_seq_ficha_tecnica_w;
		vetor_aux_w[cont_w].qt_material_w		:= qt_dose_w;
		vetor_aux_w[cont_w].cd_unidade_medida_w		:= cd_unidade_medida_w;

		cont_w := (cont_w + 1);
		end;
	end if;
	end;
end loop;
close c02;

vetor_w.delete;
i := 0;
k := 0;

while(i < vetor_aux_w.count) loop
	begin
	/*Se possuir ficha técnica, desdobra os materiais que possuem a mesma ficha técnica*/

	if (vetor_aux_w[i](.nr_seq_ficha_tecnica_w IS NOT NULL AND .nr_seq_ficha_tecnica_w::text <> '')) then
		begin
		select	count(*)
		into STRICT	qt_existe_w
		from	material a,
			material_estab b
		where	a.cd_material = b.cd_material
		and	a.ie_tipo_material not in (6,8)
		and	coalesce(b.ie_requisicao,'N') = 'S'
		and	b.cd_estabelecimento = cd_estabelecimento_w
		and	a.nr_seq_ficha_tecnica = vetor_aux_w[i].nr_seq_ficha_tecnica_w;

		/*Se possuir algum material vinculado a fica técnica que o tipo não seja 'Sem apresentação', será dosdobrado a quantidade pelos materiais, de acordo com a conversão em ordem decrescente*/

		if (qt_existe_w > 0) then
			begin
			qt_total_dose_w := vetor_aux_w[i].qt_material_w;
			open c04;
			loop
			fetch c04 into
				cd_material_w,
				cd_unidade_medida_consumo_w,
				qt_conversao_w;
			exit when ((c04%notfound) or (qt_total_dose_w <= 0));
				begin
				qt_material_requisitada_w := 0;

				select	coalesce(MIN(obter_conversao_unid_med_onc(a.cd_material, vetor_aux_w[i].cd_unidade_medida_w)),0)
				into STRICT	qt_conversao_aux_w
				from	material a,
					material_estab b
				where	a.cd_material = b.cd_material
				and	a.ie_tipo_material not in (6,8)
				and	a.ie_situacao = 'A'
				and	coalesce(b.ie_requisicao,'N') = 'S'
				and	coalesce(b.ie_material_estoque,'N') = 'S'
				and	obter_conversao_unid_med_onc(a.cd_material, vetor_aux_w[i].cd_unidade_medida_w) > 0
				and	b.cd_estabelecimento = cd_estabelecimento_w
				and	a.cd_material <> cd_material_w
				and	a.nr_seq_ficha_tecnica = vetor_aux_w[i].nr_seq_ficha_tecnica_w;

				/*Se não possuir outro material com a mesma ficha técnica e com conversão menor que o material em questão, a quantidade restante será a do mesmo*/

				if (qt_conversao_aux_w = 0) or
					(((ceil(dividir(qt_total_dose_w, qt_conversao_w)) * qt_conversao_w) - qt_total_dose_w) <= qt_conversao_aux_w) then
					qt_material_requisitada_w	:= ceil(dividir(qt_total_dose_w, qt_conversao_w)); /*Neste caso não pode ser feito arredondamento, por exemplo, se ficar 0.2,deve solicitar 1*/
				elsif (qt_conversao_w <= qt_total_dose_w) then
					qt_material_requisitada_w	:= trunc(dividir(qt_total_dose_w, qt_conversao_w)) /*Neste caso se fosse para solicitar 1.6, será solicitado apenas 1, o 0.6 será gerado com a próxima conversão, que é menor que a do material atual*/
;
				end if;

				if (qt_material_requisitada_w > 0) then
					begin

					qt_dose_aux_w	:= (qt_material_requisitada_w * qt_conversao_w);
					qt_total_dose_w	:= (qt_total_dose_w - qt_dose_aux_w);

					vetor_w[k].cd_material_w 		:= cd_material_w;
					vetor_w[k].nr_seq_ficha_tecnica_w	:= vetor_aux_w[i].nr_seq_ficha_tecnica_w;
					vetor_w[k].cd_unidade_medida_w	:= cd_unidade_medida_consumo_w;
					vetor_w[k].qt_material_w		:= qt_material_requisitada_w;

					k := (k + 1);
					end;
				end if;
				end;
			end loop;
			close c04;
			end;
		else	/*Se não possuir nenhum material que o tipo não seja 'Sem apresentação' e que possua a ficha técnica em questão, será gerado o próprio material*/
			begin
			cd_unidade_medida_consumo_w	:= substr(obter_dados_material_estab(vetor_aux_w[i].cd_material_w, cd_estabelecimento_w, 'UMS'),1,30);
			qt_conversao_w			:= coalesce(obter_conversao_unid_med_onc(vetor_aux_w[i].cd_material_w, vetor_aux_w[i].cd_unidade_medida_w),0);
			qt_material_requisitada_w 		:= ceil(dividir(vetor_aux_w[i].qt_material_w, qt_conversao_w));

			vetor_w[k].cd_material_w 		:= vetor_aux_w[i].cd_material_w;
			vetor_w[k].nr_seq_ficha_tecnica_w	:= vetor_aux_w[i].nr_seq_ficha_tecnica_w;
			vetor_w[k].cd_unidade_medida_w	:= cd_unidade_medida_consumo_w;
			vetor_w[k].qt_material_w		:= qt_material_requisitada_w;

			k := (k + 1);
			end;
		end if;
		end;
	else	/*Se o material não possuir ficha técnica, será gerado ele mesmo*/
		begin
		vetor_w[k].cd_material_w 		:= vetor_aux_w[i].cd_material_w;
		vetor_w[k].nr_seq_ficha_tecnica_w	:= vetor_aux_w[i].nr_seq_ficha_tecnica_w;
		vetor_w[k].cd_unidade_medida_w		:= vetor_aux_w[i].cd_unidade_medida_w;
		vetor_w[k].qt_material_w		:= ceil(vetor_aux_w[i].qt_material_w);

		k := (k + 1);
		end;
	end if;

	i := (i + 1);
	end;
end loop;

delete	FROM item_requisicao_material
where	nr_requisicao = nr_requisicao_p;

i := 0;
while(i < vetor_w.count) loop
	begin
	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from	item_requisicao_material
	where	nr_requisicao = nr_requisicao_p;

	cd_unidade_medida_estoque_w	:= substr(obter_dados_material_estab(vetor_w[i].cd_material_w, cd_estabelecimento_w, 'UMS'),1,30);
	qt_material_estoque_w		:= obter_quantidade_convertida(vetor_w[i].cd_material_w, vetor_w[i].qt_material_w, vetor_w[i].cd_unidade_medida_w, 'UME');

	insert into item_requisicao_material(
		nr_requisicao,
		nr_sequencia,
		cd_material,
		qt_material_requisitada,
		vl_material,
		dt_atualizacao,
		nm_usuario,
		cd_estabelecimento,
		cd_unidade_medida,
		cd_unidade_medida_estoque,
		qt_estoque,
		qt_material_atendida,
		ie_acao,
		cd_motivo_baixa)
	values (	nr_requisicao_p,
		nr_sequencia_w,
		vetor_w[i].cd_material_w,
		vetor_w[i].qt_material_w,
		0,
		clock_timestamp(),
		nm_usuario_p,
		cd_estabelecimento_w,
		vetor_w[i].cd_unidade_medida_w,
		cd_unidade_medida_estoque_w,
		qt_material_estoque_w,
		0,
		'1',
		0);

	i := (i + 1);
	end;
end loop;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_agrupar_req_princ_ativo ( nr_requisicao_p bigint, nm_usuario_p text) FROM PUBLIC;

