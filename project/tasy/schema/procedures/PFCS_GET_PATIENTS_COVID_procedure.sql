-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_get_patients_covid ( cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_diagnostico_w		varchar(1) 	:= 'N';
qt_positivo_w			bigint 		:= 0;
qt_investigacao_w		bigint 		:= 0;
ie_positivo_w			varchar(2) 	:= 'N';
nr_seq_panel_pos_w		bigint;
nr_seq_panel_sus_w		bigint;
nr_seq_detail_w			bigint;
ds_symptoms_w			varchar(500) 	:= '';
qt_commit_w				bigint 		:= 0;
cd_patients_w  			varchar(500) 	:= ',';
ie_ignore_patient_w 	varchar(1) 	:= 'N';
nr_seq_operational_level_w		pfcs_operational_level.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	a.nr_atendimento,
		a.dt_entrada,
		a.cd_pessoa_fisica,
		substr(obter_sexo_pf(a.cd_pessoa_fisica,'D'),1,50) ds_sexo,
		substr(obter_leito_atual_pac(a.nr_atendimento),1,50) ds_leito,
		(SELECT max(x.ds_queixa) from queixa_paciente x where x.nr_sequencia = a.nr_seq_queixa) ds_queixa,
		(select max(y.nr_sequencia) from triagem_pronto_atend y where y.nr_atendimento = a.nr_atendimento) nr_seq_triagem,
		pfcs_get_age_range(obter_data_nascto_pf(p.cd_pessoa_fisica)) ds_age,
		obter_setor_pf(p.cd_pessoa_fisica) ds_setor,
		substr(obter_dados_atendimento(a.nr_atendimento,'NMR'),1,255) nm_medico_resp
	from	atendimento_paciente a,
		pessoa_fisica p
	where	a.cd_pessoa_fisica = p.cd_pessoa_fisica
		and	coalesce(a.dt_alta::text, '') = ''
		and coalesce(a.dt_cancelamento::text, '') = ''
		and	a.cd_estabelecimento = cd_estabelecimento_p
		and	a.dt_entrada > to_date('01/01/2020','DD/MM/YYYY')
	order by a.cd_pessoa_fisica, a.nr_atendimento DESC;

C02 CURSOR FOR
	SELECT	replace(a.CD_DOENCA,'.','') cd_doenca,
		substr(pfcs_obter_desc_cid(a.cd_doenca),1,300) ds_doenca,
		a.ie_positivo
	from	pfcs_diagnosis a;
BEGIN
nr_seq_operational_level_w := pfcs_get_structure_level(
    cd_establishment_p => cd_estabelecimento_p,
    ie_level_p => 'O',
    ie_info_p => 'C');

select nextval('pfcs_panel_seq')
into STRICT   nr_seq_panel_pos_w
;

insert into pfcs_panel(
	nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	ie_situation,
	nr_seq_indicator,
	vl_indicator,
	nr_seq_operational_level)
values (
	nr_seq_panel_pos_w,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	'T',
	85,
	0,
	nr_seq_operational_level_w);

select nextval('pfcs_panel_seq')
into STRICT   nr_seq_panel_sus_w
;

insert into pfcs_panel(
	nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	ie_situation,
	nr_seq_indicator,
	vl_indicator,
	nr_seq_operational_level)
values (
	nr_seq_panel_sus_w,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	'T',
	88,
	0,
	nr_seq_operational_level_w);

commit;

for reg_atendimentos in C01 loop
	begin
	ie_diagnostico_w := 'N';
	ie_positivo_w := 'N';
	ds_symptoms_w := '';
	ie_ignore_patient_w := 'N';

--	DIAGNOSTICOS
	for reg_cadastro in C02 loop
		begin
--		IE_POSITIVO
		if (coalesce(reg_cadastro.ie_positivo,'N') = 'S') then
			begin
			select	coalesce(max('S'),'N')
			into STRICT	ie_diagnostico_w
			from	diagnostico_doenca a
			where	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
				and	coalesce(a.ie_situacao,'A') = 'A'
				and	coalesce(a.dt_inativacao::text, '') = ''
				and	a.nr_atendimento = reg_atendimentos.nr_atendimento
				and	replace(a.cd_doenca,'.','') = reg_cadastro.cd_doenca;

			if (ie_diagnostico_w = 'S') then
				begin
				ie_positivo_w := 'S';
				ds_symptoms_w := substr(ds_symptoms_w || ', ' || reg_cadastro.cd_doenca || ' - ' || reg_cadastro.ds_doenca,1,500);
				end;
			end if;
			end;
		end if;
		end;
	end loop;

--	EXAMES
--	Positivo
	if (coalesce(ie_positivo_w,'N') = 'N') then
		select	coalesce(pfcs_obter_result_posit_covid(reg_atendimentos.nr_atendimento), 'N')
		into STRICT	ie_positivo_w
		;
	end if;

--	CONTABILIZAR
	if (coalesce(ie_positivo_w,'N') in ('S', 'ND')) then
		begin
		qt_commit_w := qt_commit_w + 1;

		if (position(',' || reg_atendimentos.cd_pessoa_fisica || ',' in cd_patients_w) = 0) then
			cd_patients_w := SUBSTR(cd_patients_w,0,480);
			cd_patients_w :=  ',' || reg_atendimentos.cd_pessoa_fisica || cd_patients_w;
		else
			ie_ignore_patient_w := 'S';
		end if;

		if (ie_ignore_patient_w = 'N') then

			if (coalesce(ie_positivo_w,'N') = 'S') then
				qt_positivo_w := qt_positivo_w + 1;
			elsif (coalesce(ie_positivo_w,'N') = 'ND') then
				qt_investigacao_w := qt_investigacao_w + 1;
			end if;

			select	substr(CASE WHEN substr(ds_symptoms_w,1,2)=', ' THEN substr(ds_symptoms_w,3)  ELSE ds_symptoms_w END ,1,500)
			into STRICT	ds_symptoms_w
			;

			select	nextval('pfcs_panel_detail_seq')
			into STRICT	nr_seq_detail_w
			;

			insert into pfcs_panel_detail(
				nr_sequencia,
				dt_atualizacao,
				dt_atualizacao_nrec,
				nm_usuario,
				nm_usuario_nrec,
				ie_situation,
				nr_seq_panel,
				nr_seq_indicator,
				nr_seq_operational_level)
			values (
				nr_seq_detail_w,
				clock_timestamp(),
				clock_timestamp(),
				nm_usuario_p,
				nm_usuario_p,
				'T',
				CASE WHEN coalesce(ie_positivo_w,'N')='S' THEN nr_seq_panel_pos_w WHEN coalesce(ie_positivo_w,'N')='ND' THEN nr_seq_panel_sus_w END ,
				CASE WHEN coalesce(ie_positivo_w,'N')='S' THEN 85 WHEN coalesce(ie_positivo_w,'N')='ND' THEN 88 END ,
				nr_seq_operational_level_w);

			insert into pfcs_detail_patient(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				id_patient,
				nr_encounter,
				ds_gender,
				ds_current_location,
				ds_bed_assigned,
				ds_age_range,
				nr_seq_detail,
				ds_symptoms,
				dt_entrance)
			values (
				nextval('pfcs_detail_patient_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				reg_atendimentos.cd_pessoa_fisica,
				reg_atendimentos.nr_atendimento,
				reg_atendimentos.ds_sexo,
				reg_atendimentos.ds_setor,
				reg_atendimentos.ds_leito,
				reg_atendimentos.ds_age,
				nr_seq_detail_w,
				ds_symptoms_w,
				reg_atendimentos.dt_entrada);

			if (qt_commit_w > 500) then
				begin
				qt_commit_w := 0;
				commit;
				end;
			end if;

		end if;
		end;
	end if;
	end;
end loop;

update	pfcs_panel
set	vl_indicator = qt_positivo_w
where	nr_sequencia = nr_seq_panel_pos_w;

update	pfcs_panel
set	vl_indicator = qt_investigacao_w
where	nr_sequencia = nr_seq_panel_sus_w;

commit;

CALL pfcs_pck.pfcs_activate_records(
	nr_seq_indicator_p => 85,
	nr_seq_operational_level_p => nr_seq_operational_level_w,
	nm_usuario_p => nm_usuario_p);

CALL pfcs_pck.pfcs_activate_records(
	nr_seq_indicator_p => 88,
	nr_seq_operational_level_p => nr_seq_operational_level_w,
	nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_get_patients_covid ( cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

