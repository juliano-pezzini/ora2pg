-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_mat_proc_conta_web ( ie_tipo_p text, ie_acao_p text, nr_seq_item_p bigint, qt_item_p bigint, nr_seq_conta_p bigint, cd_item_p bigint, ie_origem_proc_p bigint, nm_usuario_p text, dt_realizacao_p timestamp, dt_inicial_p text, dt_final_p text, cd_estabelecimento_p bigint, ie_via_acesso_p text, vl_procedimento_p bigint, vl_material_p bigint, ie_tecnica_utilizada_p text, vl_unitario_p bigint, cd_medico_p text, nr_seq_grau_partic_p bigint, ie_gerar_partic_aut_p text, cd_dente_p pls_conta_proc.cd_dente%type, cd_face_dente_p pls_conta_proc.cd_face_dente%type, cd_regiao_boca_p pls_conta_proc.cd_regiao_boca%type, nr_seq_item_tiss_vinc_p bigint) AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Editar ou inserir itens na conta
----------------------------------------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatórios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

	ie_tipo_p:   'P'  = procedimentos
	ie_tipo_p:   'M' = mat/med

	ie_acao_p:  'E' = editar
	ie_acao_p:  'I' = inserir
*/dt_emissao_w			pls_conta_proc.dt_procedimento%type;
dt_atendimento_referencia_w	pls_conta.dt_atendimento_referencia%type;
ie_tipo_guia_w			pls_conta.ie_tipo_guia%type;
nr_seq_proc_w			pls_conta_proc.nr_sequencia%type;
ie_classificacao_proc_w		procedimento.ie_classificacao%type;
cd_faces_w			pls_conta_proc.cd_face_dente%type;
cd_face_dente_w			pls_conta_proc.cd_face_dente%type;
nr_seq_mat_w			pls_conta_mat.nr_sequencia%type;

BEGIN

CALL pls_desfazer_consistir_conta(nr_seq_conta_p, cd_estabelecimento_p, nm_usuario_p);

if (ie_tipo_p = 'P') then
	begin
		select	dt_atendimento_referencia,
			ie_tipo_guia
		into STRICT	dt_atendimento_referencia_w,
			ie_tipo_guia_w
		from	pls_conta
		where	nr_sequencia = nr_seq_conta_p;
	exception
	when others then
		dt_emissao_w := null;
		ie_tipo_guia_w := null;
	end;

	dt_emissao_w := dt_realizacao_p;

	--se for guia de consulta
	if (ie_tipo_guia_w = '3' and coalesce(dt_emissao_w::text, '') = '') then
		dt_emissao_w := dt_atendimento_referencia_w;
	end if;
end if;

if (ie_acao_p = 'I') then
	if (ie_tipo_p = 'P') then
		/* ie_situacao */

		select	nextval('pls_conta_proc_seq')
		into STRICT	nr_seq_proc_w
		;		
		
		insert into 	pls_conta_proc(nr_sequencia, nr_seq_conta, cd_procedimento,
				dt_atualizacao, nm_usuario,ie_status,
				ie_situacao,  qt_procedimento_imp,ie_origem_proced,
				vl_unitario_imp, vl_procedimento_imp, ie_valor_informado,
				dt_procedimento, dt_inicio_proc, dt_fim_proc,
				ie_via_acesso, ie_tecnica_utilizada, cd_dente,
				cd_face_dente, cd_regiao_boca)
		values (nr_seq_proc_w, nr_seq_conta_p, cd_item_p,
				clock_timestamp(), nm_usuario_p,'U',
				'D', qt_item_p, ie_origem_proc_p,
				vl_unitario_p, vl_procedimento_p, 'N',
				dt_emissao_w, to_date(dt_inicial_p ,'hh24:mi:ss'),to_date(dt_final_p ,'hh24:mi:ss'),
				ie_via_acesso_p, ie_tecnica_utilizada_p, cd_dente_p,
				cd_face_dente_p, cd_regiao_boca_p);
		
		CALL pls_cta_proc_mat_regra_pck.cria_registro_regra_proc(nr_seq_proc_w, nm_usuario_p);
		CALL pls_cta_proc_mat_regra_pck.atualiza_seq_tiss_proc(nr_seq_proc_w, nr_seq_item_tiss_vinc_p, null, nm_usuario_p);
		
	elsif (ie_tipo_p = 'M') then
		insert into 	pls_conta_mat(nr_sequencia, nr_seq_conta, nr_seq_material,
				dt_atualizacao, nm_usuario, ie_status,
				ie_situacao, qt_material_imp, vl_unitario_imp,
				dt_atendimento, dt_inicio_atend, dt_fim_atend,
				vl_material_imp)
		values (nextval('pls_conta_mat_seq'), nr_seq_conta_p, cd_item_p,
				clock_timestamp(), nm_usuario_p, 'U',
				'D', qt_item_p, vl_unitario_p,
				dt_realizacao_p, to_date(dt_inicial_p ,'hh24:mi:ss'),to_date(dt_final_p ,'hh24:mi:ss'),
				vl_material_p) returning nr_sequencia into nr_seq_mat_w;
		
		CALL pls_cta_proc_mat_regra_pck.cria_registro_regra_mat(nr_seq_mat_w, nm_usuario_p);
		CALL pls_cta_proc_mat_regra_pck.atualiza_seq_tiss_mat(nr_seq_mat_w, nr_seq_item_tiss_vinc_p, null, nm_usuario_p);
	end if;	
	
elsif (ie_acao_p = 'E') then
	if (ie_tipo_p = 'P') then
		update	pls_conta_proc
		set	dt_procedimento	= dt_emissao_w,
			dt_inicio_proc	= to_date(dt_inicial_p ,'hh24:mi:ss'),
			dt_fim_proc	=  to_date(dt_final_p ,'hh24:mi:ss'),
			dt_atualizacao	= clock_timestamp(),
			nm_usuario 	= nm_usuario_p,
			qt_procedimento_imp	= qt_item_p,
			ie_via_acesso 		= ie_via_acesso_p,
			vl_procedimento_imp	= vl_procedimento_p,
			ie_tecnica_utilizada	= ie_tecnica_utilizada_p,
			vl_unitario_imp 	= vl_unitario_p,
			cd_dente		= cd_dente_p,
			cd_face_dente		= cd_face_dente_p,
			cd_regiao_boca		= cd_regiao_boca_p
		where 	nr_sequencia	 	= nr_seq_item_p;
		
	elsif (ie_tipo_p = 'M') then
		update	pls_conta_mat
		set	dt_atendimento 	= dt_realizacao_p,
			dt_inicio_atend	= to_date(dt_inicial_p ,'hh24:mi:ss'),
			dt_fim_atend	= to_date(dt_final_p ,'hh24:mi:ss'), 		
			dt_atualizacao	= clock_timestamp(),
			nm_usuario 	= nm_usuario_p,
			qt_material_imp = qt_item_p,
			vl_material_imp = vl_material_p,
			vl_unitario_imp = vl_unitario_p
		where 	nr_sequencia 	= nr_seq_item_p;
	end if;
end if;

if (ie_tipo_p = 'P') then
	nr_seq_proc_w	:= coalesce(nr_seq_proc_w, nr_seq_item_p);		
		
	delete	FROM pls_conta_proc_face_dente
	where	nr_seq_conta_proc	= nr_seq_proc_w;
	
	if (cd_face_dente_p IS NOT NULL AND cd_face_dente_p::text <> '') then
		cd_faces_w	:= cd_face_dente_p;
		
		while(cd_faces_w IS NOT NULL AND cd_faces_w::text <> '') loop
			cd_face_dente_w	:= substr(cd_faces_w,1,1);
			
			insert into pls_conta_proc_face_dente(	nr_sequencia, nm_usuario, dt_atualizacao,
								nm_usuario_nrec, dt_atualizacao_nrec, nr_seq_conta_proc,
								cd_face_dente)
							values (	nextval('pls_conta_proc_face_dente_seq'), nm_usuario_p, clock_timestamp(),
								nm_usuario_p, clock_timestamp(), nr_seq_proc_w,
								cd_face_dente_w);	
			cd_faces_w	:= substr(cd_faces_w,3,length(cd_faces_w));
		end loop;	
	else
		delete	FROM pls_conta_proc_face_dente
		where	nr_seq_conta_proc	= nr_seq_proc_w;
	end if;
end if;

/* ie_gerar_partic_aut_p - Se refere ao parâmetro [22] - Permitir lançar o participante informado no filtro automaticamente ao lançar os itens*/

if (ie_gerar_partic_aut_p = 'S') and (ie_acao_p = 'I' and ie_tipo_p = 'P') then
	begin
		select	ie_classificacao
		into STRICT	ie_classificacao_proc_w
		from	procedimento
		where	cd_procedimento		= cd_item_p
		and	ie_origem_proced 	= ie_origem_proc_p;
	exception
	when others then
		ie_classificacao_proc_w	:= null;
	end;
	
	if (ie_classificacao_proc_w = '1') then		
	CALL pls_gerar_proc_partic_aut_web(nr_seq_proc_w, cd_medico_p , nr_seq_grau_partic_p, nm_usuario_p);		
	end if;	
end if;

/*pls_consistir_conta_web(null, nr_seq_conta_p, nm_usuario_p, cd_estabelecimento_p);*/



-- update realizado para disparar a trigger pls_conta_atual.
update	pls_conta
set	dt_atualizacao = dt_atualizacao
where 	nr_sequencia = nr_seq_conta_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_mat_proc_conta_web ( ie_tipo_p text, ie_acao_p text, nr_seq_item_p bigint, qt_item_p bigint, nr_seq_conta_p bigint, cd_item_p bigint, ie_origem_proc_p bigint, nm_usuario_p text, dt_realizacao_p timestamp, dt_inicial_p text, dt_final_p text, cd_estabelecimento_p bigint, ie_via_acesso_p text, vl_procedimento_p bigint, vl_material_p bigint, ie_tecnica_utilizada_p text, vl_unitario_p bigint, cd_medico_p text, nr_seq_grau_partic_p bigint, ie_gerar_partic_aut_p text, cd_dente_p pls_conta_proc.cd_dente%type, cd_face_dente_p pls_conta_proc.cd_face_dente%type, cd_regiao_boca_p pls_conta_proc.cd_regiao_boca%type, nr_seq_item_tiss_vinc_p bigint) FROM PUBLIC;

