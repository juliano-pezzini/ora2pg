-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function gerar_higienizacao_leito_unid as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE gerar_higienizacao_leito_unid ( dt_servico_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_evento_p text, nr_seq_interno_p bigint, nr_seq_serv_sup_p bigint, nr_seq_regra_p bigint default null) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL gerar_higienizacao_leito_unid_atx ( ' || quote_nullable(dt_servico_p) || ',' || quote_nullable(nm_usuario_p) || ',' || quote_nullable(cd_estabelecimento_p) || ',' || quote_nullable(ie_evento_p) || ',' || quote_nullable(nr_seq_interno_p) || ',' || quote_nullable(nr_seq_serv_sup_p) || ',' || quote_nullable(nr_seq_regra_p) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE gerar_higienizacao_leito_unid_atx ( dt_servico_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_evento_p text, nr_seq_interno_p bigint, nr_seq_serv_sup_p bigint, nr_seq_regra_p bigint default null) AS $body$
DECLARE



nr_seq_servico_w		bigint;
ie_dia_semana_w			smallint;
dt_prevista_w			timestamp;
nr_seq_unidade_w		bigint;
cd_setor_atendimento_w		integer;
ie_status_unidade_w		varchar(3);
ie_executor_w			varchar(15);
ie_cancela_alta_w		varchar(1);
qt_minuto_adic_w		bigint;
cd_estabelecimento_w		bigint;
dt_interdicao_w			timestamp;
ie_atualizar_data_iterd_w	varchar(3);
ie_status_serv_w		varchar(15);
qt_horas_novo_servico_w		smallint;
ie_gerar_servico_w		varchar(1);
nr_seq_regra_servico_w		bigint;
nr_sequencia_w			bigint;
cd_classif_setor_w		varchar(2);
ie_status_leito_destino_w	varchar(15);
ie_gerou_novo_reg_w		varchar(1);
ie_possui_servico_w		bigint;
cd_tipo_acomodacao_w		smallint;
cd_tipo_acomod_atend_w		smallint;
nr_prioridade_w			smallint;
ie_higienizacao_w		varchar(1);
ie_tipo_acomod_w		varchar(1);
cd_unidade_basica_w		varchar(10);
cd_unidade_compl_w		varchar(10);
nr_atendimento_w	unidade_atendimento.nr_atendimento%type;
ie_somente_ativo_w			varchar(1);

c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_servico,
		ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_servico_p, coalesce(a.dt_prevista, clock_timestamp())),
		coalesce(qt_minuto_adic,0),
		a.ie_atualizar_data_iterd,
		coalesce(qt_horas_novo_servico,0),
		coalesce(a.ie_status_leito_destino,'XPTO')
	from	sl_servico b,
			sl_regra_servico a
	where	((a.nr_seq_unidade		=	nr_seq_unidade_w) 	or (coalesce(a.nr_seq_unidade::text, '') = ''))
	and 	obter_se_unid_regra(a.nr_sequencia, nr_seq_unidade_w) = 'S'
	and	((a.cd_setor_atendimento	=	cd_setor_atendimento_w) or (coalesce(a.cd_setor_atendimento::text, '') = ''))
	and	((a.cd_tipo_acomodacao = cd_tipo_acomodacao_w) or (coalesce(cd_tipo_acomodacao::text, '') = ''))
	and	((a.cd_classif_setor		=	cd_classif_setor_w)	or (coalesce(a.cd_classif_setor::text, '') = ''))
	and	((a.ie_status_leito		=	ie_status_unidade_w) 	or (coalesce(a.ie_status_leito::text, '') = ''))
	and	((a.ie_dia_semana		=	ie_dia_semana_w) or
		(a.ie_dia_semana = 9 AND ie_dia_semana_w between 2 and 6) or (coalesce(a.ie_dia_semana::text, '') = ''))
	and	((a.nr_dia_mes			=	campo_numerico(to_char(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_servico_p),'dd'))) or (coalesce(a.nr_dia_mes::text, '') = ''))
	and	((ie_higienizacao_w <> 'N') or (coalesce(a.ie_considera_estrutura, 'N') = 'N'))
	and	a.ie_evento			=	ie_evento_p
	and	a.cd_estabelecimento		=	cd_estabelecimento_w
	and	a.nr_seq_servico		=	b.nr_sequencia
	and	obter_se_gerar_regra_serv(a.dt_inicio_frequencia, a.ie_frequencia, dt_servico_p) = 'S'
	and	b.ie_situacao			=	'A'
	and	((a.nr_seq_servico_superior	= 	nr_seq_serv_sup_p) or (a.ie_evento <> 'TS'))
	and	((a.nr_sequencia	= nr_seq_regra_p)	or (coalesce(nr_seq_regra_p::text, '') = ''))
	and	coalesce(a.nr_prioridade_regra,0) = nr_prioridade_w
	and	((a.ie_evento in ('EMO','RSS','IS')) or  ((ie_status_unidade_w <> 'P') or (Verifica_estadia_higienizacao(nr_atendimento_w, nr_seq_unidade_w, a.qt_estadia_leito) = 'S')))
	and not exists (SELECT   1 
	                        from     sl_regra_servico_excecao x 
		        where  x.cd_setor_atendimento = cd_setor_atendimento_w
		        and     x.nr_seq_sl_regra_servico = a.nr_sequencia);
BEGIN

if (coalesce(cd_estabelecimento_p::text, '') = '') then
	select	max(cd_estabelecimento_base)
	into STRICT	cd_estabelecimento_w
	from 	setor_atendimento a,
		unidade_atendimento b
	where	b.nr_seq_interno	= nr_seq_interno_p
	and	a.cd_setor_atendimento	= b.cd_setor_atendimento;	
else
	cd_estabelecimento_w		:= cd_estabelecimento_p;
end if;

if (ie_evento_p = 'IL') then
	ie_Status_serv_w := 'IT';
else
	ie_Status_serv_w := 'P';
end if;

ie_tipo_acomod_w := Obter_param_Usuario(75, 104, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_tipo_acomod_w);
ie_somente_ativo_w := Obter_param_Usuario(75, 115, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_somente_ativo_w);

begin


select	max(e.nr_seq_interno),
	max(e.cd_setor_atendimento),
	max(e.ie_status_unidade),
	max(c.cd_classif_setor),
	max(e.cd_tipo_acomodacao),
	max(e.ie_higienizacao),
	max(e.cd_unidade_basica),
	max(e.cd_unidade_compl),
	max(e.nr_atendimento)
into STRICT	nr_seq_unidade_w,
	cd_setor_atendimento_w,
	ie_status_unidade_w,
	cd_classif_setor_w,
	cd_tipo_acomodacao_w,
	ie_higienizacao_w,
	cd_unidade_basica_w,
	cd_unidade_compl_w,
	nr_atendimento_w
from	unidade_atendimento e,
	setor_atendimento c
where	e.nr_seq_interno	= nr_seq_interno_p
and	e.cd_setor_atendimento  = c.cd_setor_atendimento
and (coalesce(ie_somente_ativo_w,'N') = 'N' or (c.ie_situacao = 'A' and e.ie_situacao = 'A'));
exception
	when others then
		nr_seq_unidade_w := null;	
end;

if (ie_tipo_acomod_w = 'S') then
	cd_tipo_acomod_atend_w	:= obter_tipo_acomodacao_atend(obter_ult_atend_unidade(cd_setor_atendimento_w, cd_unidade_basica_w, cd_unidade_compl_w),'C');
	if (cd_tipo_acomod_atend_w IS NOT NULL AND cd_tipo_acomod_atend_w::text <> '') then
		cd_tipo_acomodacao_w	:= cd_tipo_acomod_atend_w;
	end if;
end if;

insert into log_mov(nm_usuario,
		dt_atualizacao,
		cd_log,
		ds_log)
values (nm_usuario_p,
		clock_timestamp(),
		8805,
		substr('1 - nr_seq_serv_sup_p: ' || nr_seq_serv_sup_p || chr(13) ||
				'nr_seq_unidade_w: ' || nr_seq_unidade_w || chr(13) ||
				'cd_setor_atendimento_w: ' || cd_setor_atendimento_w || chr(13) ||
				'dt_servico_p: ' || dt_servico_p || chr(13) ||
				'nr_seq_regra_p:' || nr_seq_regra_p || chr(13) ||
				'ie_evento_p: ' || ie_evento_p,1,2000));

select PKG_DATE_UTILS.get_WeekDay(dt_servico_p)
into STRICT	ie_dia_semana_w
;

if (nr_seq_unidade_w IS NOT NULL AND nr_seq_unidade_w::text <> '') then

	select	coalesce(max(a.nr_prioridade_regra),0)
	into STRICT	nr_prioridade_w
	from	sl_servico b,
		sl_regra_servico a
	where	((a.nr_seq_unidade		=	nr_seq_unidade_w) 	or (coalesce(a.nr_seq_unidade::text, '') = ''))
	and 	obter_se_unid_regra(a.nr_sequencia, nr_seq_unidade_w) = 'S'
	and	((a.cd_setor_atendimento	=	cd_setor_atendimento_w) or (coalesce(a.cd_setor_atendimento::text, '') = ''))
	and	((a.cd_tipo_acomodacao = cd_tipo_acomodacao_w) or (coalesce(cd_tipo_acomodacao::text, '') = ''))
	and	((a.cd_classif_setor		=	cd_classif_setor_w)	or (coalesce(a.cd_classif_setor::text, '') = ''))
	and	((a.ie_status_leito		=	ie_status_unidade_w) 	or (coalesce(a.ie_status_leito::text, '') = ''))
	and	((a.ie_dia_semana		=	ie_dia_semana_w) or
		(a.ie_dia_semana = 9 AND ie_dia_semana_w between 2 and 6) or (coalesce(a.ie_dia_semana::text, '') = ''))
	and	((a.nr_dia_mes			=	campo_numerico(to_char(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_servico_p),'dd'))) or (coalesce(a.nr_dia_mes::text, '') = ''))
	and	a.ie_evento			=	ie_evento_p
	and	a.cd_estabelecimento		=	cd_estabelecimento_w
	and	a.nr_seq_servico		=	b.nr_sequencia
	and	obter_se_gerar_regra_serv(a.dt_inicio_frequencia, a.ie_frequencia, dt_servico_p) = 'S'
	and	b.ie_situacao			=	'A'
	and	((a.nr_seq_servico_superior	= 	nr_seq_serv_sup_p) or (a.ie_evento <> 'TS'))
	and	((a.nr_sequencia	= nr_seq_regra_p)	or (coalesce(nr_seq_regra_p::text, '') = ''))
	and not exists (SELECT  1 
	                        from    sl_regra_servico_excecao x 
		        where  x.cd_setor_atendimento = cd_setor_atendimento_w
		        and     x.nr_seq_sl_regra_servico = a.nr_sequencia);
	
	open c01;
	loop
	fetch c01 into
		nr_seq_regra_servico_w,
		nr_seq_servico_w,
		dt_prevista_w,
		qt_minuto_adic_w,
		ie_atualizar_data_iterd_w,
		qt_horas_novo_servico_w,
		ie_status_leito_destino_w;		
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
	
			
		select	ie_executor,
			ie_cancela_alta
		into STRICT	ie_executor_w,
			ie_cancela_alta_w
		from	sl_servico
		where	nr_sequencia		= nr_seq_servico_w;

		if (ie_cancela_alta_w = 'S') and (ie_evento_p = 'AP' or ie_evento_p = 'AR') then
			delete	from sl_unid_atend
			where	nr_seq_unidade	= nr_seq_unidade_w
			and	nr_seq_servico	= nr_seq_servico_w
			and	dt_prevista > dt_prevista_w;		
		end if;

		ie_gerar_servico_w	:= 'S';
	
		if (qt_horas_novo_servico_w > 0) then		
			
			select 	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
			into STRICT	ie_gerar_servico_w
			from	sl_unid_atend
			where	nr_seq_unidade	= nr_seq_unidade_w
			and	nr_seq_servico	= nr_seq_servico_w
			and	dt_prevista > (dt_prevista_w - (qt_horas_novo_servico_w/24))
			and	coalesce(dt_inicio::text, '') = '';		
			
		end if;
	
		
		if (ie_atualizar_data_iterd_w = 'S') then
			dt_interdicao_w := clock_timestamp();
		else
			dt_interdicao_w := null;	
		end if;
		
		ie_gerou_novo_reg_w := 'N';
		
		
		
		if (ie_gerar_servico_w = 'S') then
			
			
			select	nextval('sl_unid_atend_seq')
			into STRICT	nr_sequencia_w
			;
		
			select  count(*)
			into STRICT	ie_possui_servico_w
			from	sl_unid_atend
			where	ie_status_serv = ie_status_serv_w
			and		nr_seq_unidade = nr_seq_unidade_w
			and		nr_seq_servico = nr_seq_servico_w
			and	dt_prevista between ((dt_prevista_w + (qt_minuto_adic_w / 1440)) - (15/86400)) and ((dt_prevista_w + (qt_minuto_adic_w / 1440)));
			
					
			if (ie_possui_servico_w = 0) then
			
				insert into sl_unid_atend(
					nr_sequencia,
					cd_estabelecimento,
					nr_seq_unidade,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ie_status_serv,
					nr_seq_servico,
					dt_prevista,
					ie_executor,
					dt_interdicao,
					nm_usuario_interd,
					ie_evento,
					cd_setor_higienizacao,
					ie_status_unid_ant)
				values(
					nr_sequencia_w,
					cd_estabelecimento_w,
					nr_seq_unidade_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					ie_status_serv_w,
					nr_seq_servico_w,
					dt_prevista_w + (qt_minuto_adic_w / 1440),
					ie_executor_w,
					dt_interdicao_w,
					CASE WHEN ie_evento_p='IL' THEN  nm_usuario_p  ELSE null END ,
					ie_evento_p,
					cd_setor_atendimento_w,
					ie_status_unidade_w);
					
				if (ie_evento_p = 'EMO') and (obter_regra_voice_hcs('SDL') = 'S')then
			
					insert into integra_voice_hcs(NR_SEQUENCIA,
						DT_ATUALIZACAO,
						NM_USUARIO,
						DT_ATUALIZACAO_NREC,
						NM_USUARIO_NREC,
						NR_ATENDIMENTO,
						CD_SETOR_ATEND_ANT,
						CD_UNID_BASIC_ANT,
						CD_UNID_COMPL_ANT,
						CD_SETOR_ATENDIMENTO,
						CD_UNIDADE_BASICA,
						CD_UNIDADE_COMPL,
						IE_STATUS_UNIDADE,
						IE_EVENTO,
						DS_MENSAGEM)
					values (
						nextval('integra_voice_hcs_seq'),
						clock_timestamp(),
						nm_usuario_p,		
						clock_timestamp(),	
						nm_usuario_p,		
						nr_atendimento_w,
						null,
						null,
						null,
						cd_setor_atendimento_w,
						cd_unidade_basica_w,
						cd_unidade_compl_w,
						'SDL',
						'RS',
						null);

				end if;
			
				if	((ie_evento_p = 'EMO') or (ie_evento_p = 'TS') or (ie_evento_p = 'RA') or (ie_evento_p = 'FC')) and (ie_status_leito_destino_w <> 'XPTO') then
					begin
					
					update	unidade_atendimento
					set	ie_status_unidade 	=	ie_status_leito_destino_w
					where	nr_seq_interno	= 	nr_seq_interno_p
					and	ie_status_unidade <> 'P';
					end;
					
				
				end if;
				ie_gerou_novo_reg_w := 'S';
			
				CALL gravar_historico_higienizacao(nm_usuario_p,ie_evento_p,nr_seq_regra_servico_w,nr_seq_servico_w,clock_timestamp(),cd_setor_atendimento_w,nr_sequencia_w);
			end if;
		end if;
		
		if (ie_gerou_novo_reg_w = 'N') then

			insert into log_mov(nm_usuario,
					dt_atualizacao,
					cd_log,
					ds_log)
			values (nm_usuario_p,
					clock_timestamp(),
					8805,
					substr('2 - nr_seq_serv_sup_p: ' || nr_seq_serv_sup_p || chr(13) ||
							'nr_seq_unidade_w: ' || nr_seq_unidade_w || chr(13) ||
							'cd_setor_atendimento_w: ' || cd_setor_atendimento_w || chr(13) ||
							'dt_servico_p: ' || dt_servico_p || chr(13) ||
							'nr_seq_regra_p:' || nr_seq_regra_p || chr(13) ||
							'ie_evento_p: ' || ie_evento_p,1,2000));
			
		end if;
		
		end;
	end loop;
	close c01;
					
end if;
commit;	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_higienizacao_leito_unid ( dt_servico_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_evento_p text, nr_seq_interno_p bigint, nr_seq_serv_sup_p bigint, nr_seq_regra_p bigint default null) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE gerar_higienizacao_leito_unid_atx ( dt_servico_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_evento_p text, nr_seq_interno_p bigint, nr_seq_serv_sup_p bigint, nr_seq_regra_p bigint default null) FROM PUBLIC;

