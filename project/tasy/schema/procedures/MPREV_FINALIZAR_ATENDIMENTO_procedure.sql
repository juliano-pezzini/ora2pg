-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE mprev_finalizar_atendimento ( nr_seq_atendimento_p mprev_atendimento.nr_sequencia%type, dt_fim_p timestamp, qt_km_final_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_atendimento_w			ATENDIMENTO_PACIENTE.nr_atendimento%type;
nr_seq_status_paciente_w	bigint;
nr_seq_tele_repasse_w		bigint;
nr_seq_eif_escala_w			escala_eif_ii.nr_sequencia%type;
ie_forma_atendimento_w		mprev_atendimento.ie_forma_atendimento%type;
ie_tipo_atend_agenda_w		mprev_agendamento.ie_tipo_atendimento%type;
nr_seq_part_ciclo_item_w	bigint;
cd_motivo_alta_w			motivo_alta.cd_motivo_alta%type;

c01 CURSOR FOR
	SELECT	nr_atendimento
	from	mprev_atend_paciente a
	where  	a.nr_seq_atendimento = nr_seq_atendimento_p;
	
C02 CURSOR FOR
	SELECT	nr_sequencia
	from	escala_eif_ii
	where	nr_atendimento	= nr_atendimento_w;
					

BEGIN

select	ie_forma_atendimento
into STRICT	ie_forma_atendimento_w
from	mprev_atendimento a
where	a.nr_sequencia	= nr_seq_atendimento_p;

select	max(cd_motivo_alta)
into STRICT	cd_motivo_alta_w
from	motivo_alta
where	ie_motivo_atend_hdm = 'S';

select	max(ie_tipo_atendimento)
into STRICT	ie_tipo_atend_agenda_w
from	mprev_agendamento a
where	a.nr_seq_mprev_atend = nr_seq_atendimento_p;

select	max(d.nr_sequencia)
into STRICT	nr_seq_tele_repasse_w
from	mprev_atend_paciente a,
	mprev_participante b,
	mprev_partic_ciclo_item_v c,
	mprev_tele_repasse d
where	a.nr_seq_participante = b.nr_sequencia
and	b.cd_pessoa_fisica = c.cd_pessoa_fisica
and	c.nr_sequencia = d.nr_seq_part_ciclo_item
and	a.nr_seq_atendimento = nr_seq_atendimento_p;

select	max(a.nr_seq_mprev_part_ciclo_item)
into STRICT	nr_seq_part_ciclo_item_w
from 	pls_atendimento a, mprev_atendimento b
where 	b.nr_seq_pls_atend = a.nr_sequencia
and	b.nr_sequencia = nr_seq_atendimento_p;

if (nr_seq_part_ciclo_item_w IS NOT NULL AND nr_seq_part_ciclo_item_w::text <> '') then
	update	mprev_partic_ciclo_item
	set	ie_status = 'R',
		nm_usuario = nm_usuario_p,
		dt_atualizacao = clock_timestamp()
	where	nr_sequencia = nr_seq_part_ciclo_item_w;
end if;

if (nr_seq_tele_repasse_w IS NOT NULL AND nr_seq_tele_repasse_w::text <> '') then
	update	mprev_tele_repasse
	set		dt_conclusao = clock_timestamp()
	where	nr_sequencia = nr_seq_tele_repasse_w;
end if;

update	mprev_atendimento
set	dt_termino = dt_fim_p,
	dt_atualizacao = clock_timestamp(),
	nm_usuario = nm_usuario_p
where	nr_sequencia = nr_seq_atendimento_p;

update	mprev_atendimento_evento
set 	dt_fim_evento 	= dt_fim_p,
	dt_atualizacao	= clock_timestamp(),
	nm_usuario 	= nm_usuario_p
where	nr_seq_atendimento = nr_seq_atendimento_p;

open c01;
loop
fetch c01 into	
	nr_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	update	atendimento_paciente
	set 	dt_saida_real 	= dt_fim_p,
		dt_alta			= dt_fim_p,
		dt_atualizacao 	= clock_timestamp(),
		nm_usuario 		= nm_usuario_p,
		cd_motivo_alta  = cd_motivo_alta_w
	where	nr_atendimento 	= nr_atendimento_w;
	
	update 	atend_paciente_unidade
	set 	dt_saida_unidade = clock_timestamp()
	where	coalesce(dt_saida_unidade::text, '') = ''
	and	nr_atendimento 	= nr_atendimento_w;
	
	/*aaschlote 12/05/2014 OS 726984*/

	/* Somente fazer esse processo se o atendimento nao for de captacao, pois dai ja vai ter inserido o participante */

	
	if (coalesce(ie_tipo_atend_agenda_w,'X') <> 'C') then
		open c02;
		loop
		fetch c02 into	
			nr_seq_eif_escala_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			CALL mprev_alterar_mod_escala(nr_seq_eif_escala_w,nm_usuario_p);
			end;
		end loop;
		close c02;
	end if;
	end;
end loop;
close c01;

if ('D' = ie_forma_atendimento_w) then
	update	mprev_atend_domicilio
	set		qt_km_final 	= qt_km_final_p,
			dt_fim_viagem 	= dt_fim_p,
			dt_atualizacao 	= clock_timestamp(),
			nm_usuario 		= nm_usuario_p,
			qt_km_percorrido 	= (qt_km_final_p - qt_km_inicial)
	where	nr_seq_atendimento = nr_seq_atendimento_p;
end if;

nr_seq_status_paciente_w := mprev_obter_status_pac_ag('FA',dt_fim_p);

if (nr_seq_status_paciente_w IS NOT NULL AND nr_seq_status_paciente_w::text <> '')then
	update	mprev_agendamento
	set	nr_seq_status_pac	 = nr_seq_status_paciente_w
	where	nr_seq_mprev_atend = nr_seq_atendimento_p;
end if;

commit;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_finalizar_atendimento ( nr_seq_atendimento_p mprev_atendimento.nr_sequencia%type, dt_fim_p timestamp, qt_km_final_p bigint, nm_usuario_p text) FROM PUBLIC;

