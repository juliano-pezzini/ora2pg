-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_total_nota_fiscal ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Atualizar o valor da nota fiscal
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
-------------------------------------------------------------------------------------------------------------------

Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_consig_w			varchar(1);
ie_consignado_w			varchar(1);
ie_permite_desconto_w		varchar(1);
vl_conv_moeda_w			double precision;
vl_tributo_venc_w			double precision;
vl_documento_ref_moeda_w		double precision;
vl_despesa_doc_w			double precision	:= 0;
vl_ipi_w				double precision;
vl_frete_w			double precision;
vl_seguro_w			double precision;
vl_seguro_OC_w			double precision;
vl_tributo_w			double precision;
vl_sub_trib_w			double precision;
vl_descontos_w			double precision;
vl_liquido_w			double precision;
vl_mercadoria_w			double precision;
vl_total_nota_w			double precision;
vl_despesa_acessoria_w		double precision;
vl_despesa_aces_OC_w		double precision;
vl_icms_st_w			double precision;
nr_ordem_compra_w		bigint;
nr_ordem_compra_ww		bigint;
nr_cot_compra_w			bigint;
cd_operacao_estoque_w		smallint;
cd_estabelecimento_w		smallint;
vl_tributo_item_w			double precision;
vl_total_item_nf_w			nota_fiscal_item.vl_total_item_nf%type;
vl_desconto_item_w		nota_fiscal_item.vl_desconto%type;
vl_iva_frete_w			double precision;
ds_erro_w			varchar(1000);
vl_descontos_condicional_w 	nota_fiscal.vl_descontos_condicional%type;

ie_tipo_nota_w			nota_fiscal.ie_tipo_nota%type;

c01 CURSOR FOR
	SELECT	distinct
		nr_ordem_compra
	from	nota_fiscal_item
	where	nr_sequencia	= nr_sequencia_p
	and	(nr_ordem_compra IS NOT NULL AND nr_ordem_compra::text <> '');

c02 CURSOR FOR
	SELECT	distinct
		nr_cot_compra
	from	ordem_compra_item
	where	nr_ordem_compra	= nr_ordem_compra_w
	and	(nr_cot_compra IS NOT NULL AND nr_cot_compra::text <> '');
	



BEGIN

if (nr_sequencia_p > 0) then

	select	a.vl_despesa_acessoria,
		obter_valor_icmsst_nf(a.nr_sequencia) vl_icms_st,
		coalesce(a.vl_seguro, 0),
		a.vl_frete,
		a.vl_descontos,
		a.vl_descontos_condicional,
		a.cd_operacao_nf,
		coalesce(vl_conv_moeda,0),
		coalesce(a.nr_ordem_compra,0),
		ie_tipo_nota
	into STRICT	vl_despesa_acessoria_w,
		vl_icms_st_w,
		vl_seguro_w,
		vl_frete_w,
		vl_descontos_w,
		vl_descontos_condicional_w,
		cd_operacao_estoque_w,
		vl_conv_moeda_w,
		nr_ordem_compra_ww,
		ie_tipo_nota_w
	from 	nota_fiscal a
	where	a.nr_sequencia 		= nr_sequencia_p;
	
	

	select  coalesce(sum(vl_despesa_acessoria),0)
	into STRICT    vl_despesa_aces_OC_w
	from    ordem_compra
	where   nr_ordem_compra in ( SELECT distinct nr_ordem_compra
				     from nota_fiscal_item where
				     nr_sequencia = nr_sequencia_p);


	if (vl_conv_moeda_w <> 0) and (nr_ordem_compra_ww IS NOT NULL AND nr_ordem_compra_ww::text <> '') and (nr_ordem_compra_ww > 0) then
		select	coalesce(max(a.vl_seguro),0)
		into STRICT	vl_seguro_OC_w
		from	ordem_compra a
		where	nr_ordem_compra	= nr_ordem_compra_ww;
		
		

		if (vl_despesa_aces_OC_w > 0) and (vl_despesa_acessoria_w <> 0) then
			vl_despesa_acessoria_w	:= (vl_despesa_aces_OC_w * vl_conv_moeda_w);
		else
			vl_despesa_acessoria_w	:= (vl_despesa_acessoria_w * vl_conv_moeda_w);
		end if;
		

		if (vl_seguro_OC_w > 0) then
			vl_seguro_w	:= (vl_seguro_OC_w * vl_conv_moeda_w);
		else
			vl_seguro_w	:= (vl_seguro_w * vl_conv_moeda_w);
		end if;
	end if;
	
	if (vl_conv_moeda_w = 0 and vl_despesa_aces_OC_w <> 0) and (vl_despesa_acessoria_w <> 0) then
		vl_despesa_acessoria_w := vl_despesa_aces_OC_w;
	
	end if;
	
	

	select	cd_estabelecimento
	into STRICT	cd_estabelecimento_w
	from	nota_fiscal
	where	nr_sequencia	= nr_sequencia_p;

	ie_permite_desconto_w  := obter_param_usuario(-80, 102, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_permite_desconto_w );

	select	coalesce(sum(vl_liquido),0),
		coalesce(sum(vl_desconto),0)
	into STRICT	vl_liquido_w,
		vl_desconto_item_w
	from	nota_fiscal_item
	where	nr_sequencia = nr_sequencia_p;

	open C01;
	loop
	fetch C01 into
		nr_ordem_compra_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		open C02;
		loop
		fetch C02 into
			nr_cot_compra_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			select	coalesce(sum(vl_documento_ref_moeda), 0)
			into STRICT	vl_documento_ref_moeda_w
			from	cot_doc_importacao
			where	nr_cot_compra = nr_cot_compra_w
			and	coalesce(obter_dados_tit_pagar(nr_titulo_pagar,'S'),'X') <> 'C';

			vl_despesa_doc_w	:= vl_despesa_doc_w + vl_documento_ref_moeda_w;
			end;
		end loop;
		close C02;

		end;
	end loop;
	close C01;

	select	coalesce(max(b.ie_consignado),'0')
	into STRICT	ie_consignado_w
	from	operacao_estoque b,
		operacao_nota a
	where	a.cd_operacao_estoque	= b.cd_operacao_estoque
	and	a.cd_operacao_nf 	= cd_operacao_estoque_w;

	ie_consig_w	:= 'N';

	if (ie_consignado_w in (1,2,3,5,8)) and (vl_mercadoria_w = 0) then
		ie_consig_w		:= 'S';
	end if;

	select	coalesce(sum(a.vl_tributo),0)
	into STRICT	vl_sub_trib_w
	from	tributo b,
		nota_fiscal_item_trib a
	where	a.nr_sequencia		= nr_sequencia_p
	and	a.cd_tributo		= b.cd_tributo
	and	b.ie_tipo_tributo   	= 'STI';

	select	coalesce(sum(a.vl_tributo),0)
	into STRICT	vl_ipi_w
	from	nota_fiscal_item_trib a,
		tributo b
	where	a.cd_tributo 		= b.cd_tributo
	and	a.nr_sequencia		= nr_sequencia_p
	and	b.ie_tipo_tributo	= 'IPI';

	select	coalesce(sum(CASE WHEN coalesce(b.ie_retencao,a.ie_soma_diminui)='D' THEN (coalesce(b.vl_tributo,0) * - 1) WHEN coalesce(b.ie_retencao,a.ie_soma_diminui)='S' THEN  coalesce(b.vl_tributo,0)  ELSE 0 END ),0)
	into STRICT	vl_tributo_w
	from	tributo a,
		nota_fiscal_trib b
	where	a.cd_tributo		= b.cd_tributo
	and	b.nr_sequencia 		= nr_sequencia_p;

	select	coalesce(sum(CASE WHEN a.ie_soma_diminui='D' THEN (coalesce(b.vl_tributo,0) * - 1) WHEN a.ie_soma_diminui='S' THEN  coalesce(b.vl_tributo,0)  ELSE 0 END ),0)
	into STRICT	vl_tributo_venc_w
	from	tributo a,
		nota_fiscal_venc_trib b
	where	a.cd_tributo		= b.cd_tributo
	and	b.nr_sequencia 		= nr_sequencia_p;
	
	SELECT	coalesce(SUM(vl_total_item_nf),0)
	INTO STRICT	vl_total_item_nf_w
	FROM	nota_fiscal_item
	WHERE	nr_sequencia = nr_sequencia_p;
	
	if (ie_tipo_nota_w in ('SD','SE','SF','ST')) then
							
		select	coalesce(sum(CASE WHEN coalesce(obter_operacao_tributo(b.nr_seq_regra_trib, a.cd_tributo), a.ie_soma_diminui)='D' THEN (coalesce(b.vl_tributo,0) * - 1) WHEN coalesce(obter_operacao_tributo(b.nr_seq_regra_trib, a.cd_tributo), a.ie_soma_diminui)='S' THEN  coalesce(b.vl_tributo,0)  ELSE 0 END ),0)
		into STRICT	vl_tributo_item_w
		from	tributo a,
			nota_fiscal_item_trib b
		where	a.cd_tributo		= b.cd_tributo
		and	b.nr_sequencia 		= nr_sequencia_p
		and	a.ie_tipo_tributo not in ('IPI','ICMSST')
		and	b.ie_rateio = 'N';
		
	else
		select	coalesce(sum(CASE WHEN a.ie_soma_diminui='D' THEN (coalesce(b.vl_tributo,0) * - 1) WHEN a.ie_soma_diminui='S' THEN  coalesce(b.vl_tributo,0)  ELSE 0 END ),0)
		into STRICT	vl_tributo_item_w
		from	tributo a,
			nota_fiscal_item_trib b
		where	a.cd_tributo		= b.cd_tributo
		and	b.nr_sequencia 		= nr_sequencia_p
		and	a.ie_tipo_tributo not in ('IPI','ICMSST')
		and	b.ie_rateio = 'N';
	end if;
	
	begin
		vl_mercadoria_w	:= coalesce(vl_liquido_w,0) + coalesce(vl_sub_trib_w,0);
		if (philips_param_pck.get_cd_pais = 2)  then
		
			if (vl_desconto_item_w > 0)then
				update	nota_fiscal --OS 1122706 -- Validada pelo Everton, e feito exclusivo para o San Javier. Ira realizar um update, pois o mexico utiliza para fazer o total da nota o valor total do item, e nao o valor liquido, logo
				set	vl_descontos  = vl_desconto_item_w -- Nao era considerado o valor de desconto do item, pois o valor liquido ja vem com os descontos.
				where	nr_sequencia = nr_sequencia_p;
			end if;
			
			if (vl_frete_w <> 0) then
				vl_iva_frete_w := (vl_frete_w * (4/100)); --Retencao de 4% do IVA no valor do frete
			end if;
			
			vl_total_nota_w	:= coalesce(vl_total_item_nf_w,0) + coalesce(vl_despesa_acessoria_w,0) + coalesce(vl_despesa_doc_w,0) + coalesce(vl_seguro_w,0) + coalesce(vl_sub_trib_w,0) +
						coalesce(vl_frete_w,0) + coalesce(vl_icms_st_w,0) + coalesce(vl_ipi_w,0) - coalesce(vl_descontos_w,0) +
						coalesce(vl_tributo_w,0) + coalesce(vl_tributo_venc_w,0) + coalesce(vl_tributo_item_w,0) - coalesce(vl_iva_frete_w,0);
						
		else
			vl_total_nota_w	:= coalesce(vl_liquido_w,0) + coalesce(vl_despesa_acessoria_w,0) + coalesce(vl_despesa_doc_w,0) + coalesce(vl_seguro_w,0) + coalesce(vl_sub_trib_w,0) +
							coalesce(vl_frete_w,0) + coalesce(vl_icms_st_w,0) + coalesce(vl_ipi_w,0) - coalesce(vl_descontos_w,0) +
							coalesce(vl_tributo_w,0) + coalesce(vl_tributo_venc_w,0) + coalesce(vl_tributo_item_w,0) - coalesce(vl_descontos_condicional_w,0);
		end if;
		/* Nao deve ser feito aqui, a aplicacao do valor do desconto deve ser na rotina de geracao da NF do lote de protocolo
		if(	nvl(ie_permite_desconto_w,'N')	= 'S') then
			vl_mercadoria_w := vl_mercadoria_w - vl_descontos_w;
		end if;*/
	exception when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(380102);
	end;
	
	update	nota_fiscal
	set	vl_mercadoria		= vl_mercadoria_w,
		vl_ipi			= vl_ipi_w,
		vl_total_nota		= CASE WHEN ie_consig_w='N' THEN  vl_total_nota_w  ELSE vl_total_nota END ,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		vl_despesa_acessoria	= vl_despesa_acessoria_w,
		vl_seguro		= vl_seguro_w
	where	nr_sequencia		= nr_sequencia_p;

end if;
--commit; /* Francisco - OS 219805 - 02/06/2010 - Nao pode dar commit nesta procedure pois e chamada por outras */
begin
	CALL fis_atualiza_conta_contabil_nf(nr_sequencia_p, nm_usuario_p);	
exception when others then
	ds_erro_w := substr(sqlerrm(SQLSTATE),1,1000);
	CALL gravar_log_tasy(6789,'Erro ao atualizar a conta contabil da nota fiscal (fis_atualiza_conta_contabil_nf): ' || ds_erro_w, 'Tasy');
end;
		
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_total_nota_fiscal ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

