-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_itens_transf_estoque ( cd_local_estoque_p bigint, nr_ordem_compra_p bigint, cd_material_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_estabelecimento_w		smallint;
cd_material_w			bigint;
qt_minimo_w			double precision	:= 0;
qt_maximo_w			double precision	:= 0;
cd_unidade_medida_estoque_w	varchar(30)  	:= '';
qt_estoque_w           		double precision 	:= 0;
qt_item_w	           		double precision 	:= 0;
nr_item_oci_w			integer 	:= 0;
dt_entrega_w			timestamp;
qt_pendentes_transf_w		double precision;

qt_existe_w			smallint;

c01 CURSOR FOR
SELECT	a.cd_material,
	obter_regra_padrao_local(a.cd_material,a.cd_local_estoque,a.cd_estabelecimento,'qt_min') qt_minimo,
	obter_regra_padrao_local(a.cd_material,a.cd_local_estoque,a.cd_estabelecimento,'qt_max') qt_maximo,
	substr(obter_dados_material_estab(c.cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque
from	material c,
	padrao_estoque_local a
where (a.cd_material		= c.cd_material)
and (a.cd_estabelecimento	= cd_estabelecimento_w)
and (a.cd_local_estoque		= cd_local_estoque_p)
and (c.cd_material 			= coalesce(cd_material_p, c.cd_material))
and (a.ie_situacao			= 'A')
and (c.ie_situacao			= 'A')
order by c.cd_material;


BEGIN
select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from 	local_estoque
where	cd_local_estoque = cd_local_estoque_p;

select	dt_entrega
into STRICT	dt_entrega_w
from	ordem_compra
where	nr_ordem_compra	= nr_ordem_compra_p;

open C01;
loop
fetch C01 into
	cd_material_w,
	qt_minimo_w,
	qt_maximo_w,
	cd_unidade_medida_estoque_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	qt_estoque_w := obter_saldo_estoque(cd_estabelecimento_w, cd_material_w, cd_local_estoque_p, null, qt_estoque_w);
	qt_pendentes_transf_w := obter_qt_pendente_transf_etq(null, cd_material_w, cd_local_estoque_p);

	if	((coalesce(qt_estoque_w,0) + coalesce(qt_pendentes_transf_w,0)) < qt_minimo_w) then
		begin
		qt_item_w := round(qt_maximo_w - (coalesce(qt_estoque_w,0) + coalesce(qt_pendentes_transf_w,0)),0);

		if (qt_item_w > 0) then
			begin
			select 	count(*)
			into STRICT	qt_existe_w
			from	ordem_compra_item
			where	nr_ordem_compra = nr_ordem_compra_p
			and	cd_material = cd_material_w
			and	cd_local_estoque = cd_local_estoque_p;

			if (qt_existe_w > 0) then
				begin
				select max(nr_item_oci)
				into STRICT	nr_item_oci_w
				from	ordem_compra_item
				where	nr_ordem_compra = nr_ordem_compra_p
				and	cd_material = cd_material_w
				and	cd_local_estoque = cd_local_estoque_p;

				update	ordem_compra_item
				set	qt_material = qt_item_w,
					cd_unidade_medida_compra = cd_unidade_medida_estoque_w,
					nm_usuario = nm_usuario_p,
					dt_atualizacao = clock_timestamp(),
					vl_total_item = round(( qt_item_w * vl_unitario_material)::numeric,4)
				where	nr_ordem_compra = nr_ordem_compra_p
				and	nr_item_oci = nr_item_oci_w;
				end;
			else
				begin

				select coalesce(max(nr_item_oci),0)
				into STRICT	nr_item_oci_w
				from	ordem_compra_item
				where	nr_ordem_compra = nr_ordem_compra_p;

				nr_item_oci_w := nr_item_oci_w + 1;

				insert into ordem_compra_item(
					nr_ordem_compra,
					nr_item_oci,
					cd_material,
					qt_material,
					qt_original,
					dt_atualizacao,
					nm_usuario,
					cd_unidade_medida_compra,
					cd_local_estoque,
					ie_situacao)
				values (
					nr_ordem_compra_p,
					nr_item_oci_w,
					cd_material_w,
					qt_item_w,
					qt_item_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_unidade_medida_estoque_w,
					cd_local_estoque_p,
					'A');

				insert into ordem_compra_item_entrega(
					nr_ordem_compra,
					nr_item_oci,
					dt_prevista_entrega,
					qt_prevista_entrega,
					dt_atualizacao,
					nm_usuario,
					nr_sequencia)
				values (
					nr_ordem_compra_p,
					nr_item_oci_w,
					dt_entrega_w,
					qt_item_w,
					clock_timestamp(),
					nm_usuario_p,
					nextval('ordem_compra_item_entrega_seq'));
				end;
			end if;
			end;
		end if;
		end;
	end if;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_itens_transf_estoque ( cd_local_estoque_p bigint, nr_ordem_compra_p bigint, cd_material_p bigint, nm_usuario_p text) FROM PUBLIC;

