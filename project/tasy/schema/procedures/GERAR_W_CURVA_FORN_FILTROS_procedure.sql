-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_curva_forn_filtros ( dt_inicio_p timestamp, dt_final_p timestamp, cd_local_estoque_p bigint, cd_grupo_material_p bigint, cd_subgrupo_material_p bigint, cd_classe_material_p bigint, cd_estabelecimento_p bigint, vl_curva_a_p bigint, vl_curva_b_p bigint, vl_curva_c_p bigint, nm_usuario_p text, ie_data_p text) AS $body$
DECLARE


cd_cnpj_w			varchar(14);
vl_total_nota_w			double precision := 0;
nr_sequencia_w			bigint;
vl_acumulado_w			double precision := 0;
vl_total_gerar_notas_w		double precision;
pr_valor_w			double precision := 0;
pr_acumulado_w			double precision := 0;
vl_curva_a_w	smallint;
vl_curva_b_w	smallint;

ie_curva_w	varchar(1);
dt_final_w	timestamp;


c01 CURSOR FOR
SELECT	a.cd_cgc_emitente,
	sum(b.vl_liquido) vl_total
from	nota_fiscal a,
	nota_fiscal_item b,
	estrutura_material_v e
where	a.nr_sequencia = b.nr_sequencia
and	b.cd_material = e.cd_material
and	CASE WHEN ie_data_p='ES' THEN a.dt_entrada_saida  ELSE a.dt_emissao END  between dt_inicio_p and dt_final_w
and	a.cd_estabelecimento = cd_estabelecimento_p
and (b.cd_local_estoque = cd_local_estoque_p or coalesce(cd_local_estoque_p,0) = 0)
and (e.cd_grupo_material = cd_grupo_material_p or coalesce(cd_grupo_material_p,0) = 0)
and (e.cd_subgrupo_material = cd_subgrupo_material_p or coalesce(cd_subgrupo_material_p,0) = 0)
and (e.cd_classe_material = cd_classe_material_p or coalesce(cd_classe_material_p,0) = 0)
and	a.ie_situacao = '1'
and	a.ie_tipo_nota = 'EN'
group by a.cd_cgc_emitente
order by vl_total desc;


BEGIN
vl_curva_a_w	:= coalesce(vl_curva_a_p,70);
vl_curva_b_w	:= vl_curva_a_w + coalesce(vl_curva_b_p,20);
dt_final_w	:= (trunc(coalesce(dt_final_p,clock_timestamp()),'dd') + 86399/86400);

delete from w_gerar_curva_fornecedor where nm_usuario = nm_usuario_p;

select	sum(b.vl_liquido) vl_total
into STRICT	vl_total_gerar_notas_w
from	nota_fiscal a,
	nota_fiscal_item b,
	estrutura_material_v e
where	a.nr_sequencia = b.nr_sequencia
and	b.cd_material = e.cd_material
and	CASE WHEN ie_data_p='ES' THEN a.dt_entrada_saida  ELSE a.dt_emissao END  between dt_inicio_p and dt_final_w
and	a.cd_estabelecimento = cd_estabelecimento_p
and (b.cd_local_estoque = cd_local_estoque_p or coalesce(cd_local_estoque_p,0) = 0)
and (e.cd_grupo_material = cd_grupo_material_p or coalesce(cd_grupo_material_p,0) = 0)
and (e.cd_subgrupo_material = cd_subgrupo_material_p or coalesce(cd_subgrupo_material_p,0) = 0)
and (e.cd_classe_material = cd_classe_material_p or coalesce(cd_classe_material_p,0) = 0)
and	a.ie_situacao = '1'
and	a.ie_tipo_nota = 'EN';

open C01;
loop
fetch C01 into
	cd_cnpj_w,
	vl_total_nota_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	vl_acumulado_w		:= vl_acumulado_w + vl_total_nota_w;
	pr_valor_w			:= dividir((vl_total_nota_w * 100),vl_total_gerar_notas_w);
	pr_acumulado_w		:= dividir((vl_acumulado_w * 100),vl_total_gerar_notas_w);

	if (coalesce(pr_acumulado_w,0) < vl_curva_a_w) then
		ie_curva_w := 'A';
	elsif (pr_acumulado_w < vl_curva_b_w) then
		ie_curva_w := 'B';
	else
		ie_curva_w := 'C';
	end if;

	insert into w_gerar_curva_fornecedor(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_cnpj,
		vl_total_nota,
		vl_acumulado,
		pr_valor,
		pr_acumulado,
		ie_curva,
		cd_estabelecimento)
	values (	nextval('w_gerar_curva_fornecedor_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_cnpj_w,
		vl_total_nota_w,
		vl_acumulado_w,
		pr_valor_w,
		pr_acumulado_w,
		ie_curva_w,
		cd_estabelecimento_p);
	end;
end loop;
close C01;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_curva_forn_filtros ( dt_inicio_p timestamp, dt_final_p timestamp, cd_local_estoque_p bigint, cd_grupo_material_p bigint, cd_subgrupo_material_p bigint, cd_classe_material_p bigint, cd_estabelecimento_p bigint, vl_curva_a_p bigint, vl_curva_b_p bigint, vl_curva_c_p bigint, nm_usuario_p text, ie_data_p text) FROM PUBLIC;

