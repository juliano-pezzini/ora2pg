-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE w_pls_relat_ficha_sintetica ( nr_seq_grupo_p bigint, dt_reajuste_p bigint, ie_regulamentacao_p text, ie_preco_p text, dt_inicial_p timestamp, dt_final_p timestamp, qt_usuarios_inicial_p bigint, qt_usuarios_final_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

			 
nr_seq_grupo_w			bigint;
nr_seq_contrato_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_conta_w			bigint;
ds_grupo_w			varchar(255);

qt_exames_benef_w		bigint;
qt_internacao_benef_w		bigint;
qt_consultas_benef_w		bigint;
vl_servicos_benef_w		double precision;
vl_despesa_w			double precision;
vl_diversos_benef_w		double precision;

qt_exames_contr_w		bigint;
qt_internacao_contr_w		bigint;
qt_consultas_contr_w		bigint;
vl_servicos_contr_w		double precision;
vl_diversos_contr_w		double precision;
vl_mensalidade_contr_w		double precision;
vl_coparticipacao_contr_w	double precision;

vl_mensalidade_tot_w		double precision;
vl_coparticipacao_tot_w		double precision;
vl_total_custo_w		double precision;
tx_resultado_w			double precision;

ie_tipo_conta_w			varchar(10);
ie_tipo_guia_w			varchar(10);
cd_tiss_w			varchar(10);

qt_total_contas_w		bigint;
tx_consultas_w			double precision;
tx_exames_w			double precision;
tx_internacao_w			double precision;

vl_mensalidade_w		double precision;
vl_coparticipacao_w		double precision;
qt_beneficiarios_w		bigint;

dt_inicial_w			timestamp;
dt_final_w			timestamp;

tx_administrativa_w		double precision;

ie_regulamentacao_plano_w	pls_plano.ie_regulamentacao%type;
ie_preco_plano_w		pls_plano.ie_preco%type;

 
C01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.ds_grupo 
	from	pls_grupo_contrato	a 
	where	((a.nr_sequencia	= nr_seq_grupo_p and (nr_seq_grupo_p IS NOT NULL AND nr_seq_grupo_p::text <> '')) or (coalesce(nr_seq_grupo_p::text, '') = '')) 
	AND	((dt_reajuste_p 	= to_char(a.dt_reajuste,'mm')) or (coalesce(dt_reajuste_p::text, '') = '')) 
	and	ie_situacao		= 'A';
	
C02 CURSOR FOR 
	SELECT	b.nr_sequencia 
	from	pls_segurado		b, 
		pls_contrato		a, 
		pls_contrato_grupo	c 
	where	b.nr_seq_contrato	= a.nr_sequencia 
	and	c.nr_seq_contrato	= a.nr_sequencia 
	and	c.nr_seq_grupo		= nr_seq_grupo_w 
	and	coalesce(b.dt_rescisao::text, '') = '' 
	and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '');
	
C04 CURSOR FOR 
	SELECT	b.nr_sequencia, 
		b.ie_tipo_guia, 
		c.cd_tiss, 
		B.VL_TOTAL 
	FROM pls_segurado a, pls_tipo_atendimento c
LEFT OUTER JOIN pls_conta b ON (c.nr_sequencia = b.nr_seq_tipo_atendimento)
WHERE b.nr_seq_segurado		= a.nr_sequencia  and a.nr_sequencia			= nr_seq_segurado_w and b.ie_status			= 'F' and b.dt_atendimento_referencia between dt_inicial_w and dt_final_w and b.ie_tipo_guia	in ('3','5','4');
			

BEGIN 
 
delete	FROM W_PLS_RELAT_RELACIONAMENTO 
where	ie_tipo_relatorio	= 'FS';
 
dt_inicial_w	:= trunc(dt_inicial_p,'Month');
dt_final_w	:= last_day(dt_final_p);
 
select	max(tx_administrativa) 
into STRICT	tx_administrativa_w 
from	pls_competencia 
where	cd_estabelecimento = cd_estabelecimento_p 
and	dt_mes_competencia = trunc(clock_timestamp(),'Month');
 
if (coalesce(tx_administrativa_w::text, '') = '') or (tx_administrativa_w = 0) then 
	tx_administrativa_w	:= 1;
end if;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_grupo_w, 
	ds_grupo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	qt_beneficiarios_w	:= pls_obter_dados_grupo_contrato(nr_seq_grupo_w,'QV');
	 
	vl_mensalidade_tot_w		:= 0;
	vl_coparticipacao_tot_w		:= 0;
	 
	qt_exames_contr_w		:= 0;
	qt_internacao_contr_w		:= 0;
	qt_consultas_contr_w		:= 0;
	vl_servicos_contr_w		:= 0;
	vl_mensalidade_contr_w		:= 0;
	vl_coparticipacao_contr_w	:= 0;
	vl_diversos_contr_w		:= 0;
	 
	ie_regulamentacao_plano_w	:= '';
	ie_preco_plano_w		:= '';
	 
	select	max(nr_seq_contrato) 
	into STRICT	nr_seq_contrato_w 
	from	pls_contrato_grupo 
	where	nr_seq_grupo = nr_seq_grupo_w;
		 
	if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then 
		select	max(a.IE_REGULAMENTACAO), 
			max(a.IE_PRECO) 
		into STRICT	ie_regulamentacao_plano_w, 
			ie_preco_plano_w 
		from	pls_contrato_plano	b, 
			pls_plano		a 
		where	b.nr_seq_plano		= a.nr_sequencia 
		and	b.nr_seq_contrato	= nr_seq_contrato_w 
		and	b.ie_situacao		= 'A';
	else 
		select	max(nr_seq_intercambio) 
		into STRICT	nr_seq_contrato_w 
		from	pls_contrato_grupo 
		where	nr_seq_grupo = nr_seq_grupo_w;
		 
		if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then 
			select	max(a.IE_REGULAMENTACAO), 
				max(a.IE_PRECO) 
			into STRICT	ie_regulamentacao_plano_w, 
				ie_preco_plano_w 
			from	pls_intercambio_plano	b, 
				pls_plano		a 
			where	b.nr_seq_plano		= a.nr_sequencia 
			and	b.nr_seq_intercambio	= nr_seq_contrato_w 
			and	b.ie_situacao		= 'A';
		end if;
	end if;
	 
	if	(((qt_beneficiarios_w between qt_usuarios_inicial_p and qt_usuarios_final_p) and (qt_usuarios_final_p IS NOT NULL AND qt_usuarios_final_p::text <> '') and (qt_usuarios_inicial_p IS NOT NULL AND qt_usuarios_inicial_p::text <> '')) or (coalesce(qt_usuarios_inicial_p::text, '') = '') and (coalesce(qt_usuarios_final_p::text, '') = '')) and 
		 
		(((ie_regulamentacao_p = 'T') or (ie_regulamentacao_p = 'S') and (ie_regulamentacao_plano_w in ('A','P'))) or (ie_regulamentacao_p = 'N') and (ie_regulamentacao_plano_w = 'R')) and 
		 
		(((ie_preco_p = 'T') or (ie_preco_p = 'P') and (ie_preco_plano_w = '1')) or (ie_preco_p = 'C') and (ie_preco_plano_w in ('2','3'))) then 
			 
		open C02;
		loop 
		fetch C02 into	 
			nr_seq_segurado_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			 
			qt_consultas_benef_w		:= 0;
			qt_internacao_benef_w		:= 0;
			qt_exames_benef_w		:= 0;
			vl_servicos_benef_w		:= 0;
			vl_diversos_benef_w		:= 0;
			 
			open C04;
			loop 
			fetch C04 into	 
				nr_seq_conta_w, 
				ie_tipo_guia_w, 
				cd_tiss_w, 
				vl_despesa_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin 
				 
				if (ie_tipo_guia_w	= '3') then 
					ie_tipo_conta_w	:= 'C';
				elsif (ie_tipo_guia_w	= '5') then 
					ie_tipo_conta_w	:= 'I';
				else 
					if (cd_tiss_w	= '04') then 
						ie_tipo_conta_w	:= 'C';
					elsif (cd_tiss_w	= '07') then 
						ie_tipo_conta_w	:= 'I';
					else 
						ie_tipo_conta_w	:= 'E';
					end if;
				end if;
				 
				if (ie_tipo_conta_w	= 'C') then 
					qt_consultas_benef_w	:= qt_consultas_benef_w + 1;
				elsif (ie_tipo_conta_w	= 'I') then 
					qt_internacao_benef_w	:= qt_internacao_benef_w + 1;
				elsif (ie_tipo_conta_w	= 'E') then 
					qt_exames_benef_w	:= qt_exames_benef_w + 1;
				end if;
				 
				vl_servicos_benef_w	:= vl_servicos_benef_w + coalesce(vl_despesa_w,0);
				 
				end;
			end loop;
			close C04;
				 
			select	sum(a.vl_mensalidade), 
				sum(coalesce(a.vl_coparticipacao,0)) 
			into STRICT	vl_mensalidade_w, 
				vl_coparticipacao_w 
			from	pls_segurado			c, 
				pls_mensalidade			b, 
				pls_mensalidade_segurado	a 
			where	a.nr_seq_mensalidade		= b.nr_sequencia 
			and	a.nr_seq_segurado		= c.nr_sequencia 
			and	c.nr_sequencia			= nr_seq_segurado_w 
			and	a.dt_mesano_referencia between dt_inicial_w and dt_final_w 
			and	coalesce(b.dt_cancelamento::text, '') = '';
			 
			select	sum(coalesce(b.vl_mensalidade_cobrado,0)) 
			into STRICT	vl_diversos_benef_w 
			from	ptu_fatura_pre_cobranca	b, 
				ptu_fatura_pre		a 
			where	b.nr_seq_fatura		= a.nr_sequencia 
			and	b.nr_seq_segurado	= nr_seq_segurado_w 
			and	a.ie_envio_recebimento	= 'R' 
			and	a.dt_competencia between dt_inicial_w and dt_final_w;
				 
			qt_exames_contr_w	:= qt_exames_contr_w + qt_exames_benef_w;
			qt_internacao_contr_w	:= qt_internacao_contr_w + qt_internacao_benef_w;
			qt_consultas_contr_w	:= qt_consultas_contr_w + qt_consultas_benef_w;
			 
			vl_servicos_contr_w	:= vl_servicos_contr_w + vl_servicos_benef_w;
			vl_diversos_contr_w	:= vl_diversos_contr_w + coalesce(vl_diversos_benef_w,0);
			 
			vl_mensalidade_contr_w	:= vl_mensalidade_contr_w + coalesce(vl_mensalidade_w,0);
			vl_coparticipacao_contr_w := vl_coparticipacao_contr_w + coalesce(vl_coparticipacao_w,0);
			 
			end;
		end loop;
		close C02;
		 
		/*Custo*/
 
		vl_servicos_contr_w	:= vl_servicos_contr_w + (vl_servicos_contr_w *(tx_administrativa_w/100));
		vl_diversos_contr_w	:= vl_diversos_contr_w + (vl_diversos_contr_w *(tx_administrativa_w/100));
		vl_total_custo_w	:= vl_servicos_contr_w + vl_diversos_contr_w;
		 
		/*Receita*/
 
		vl_mensalidade_tot_w	:= vl_mensalidade_contr_w - coalesce(vl_coparticipacao_contr_w,0);
		vl_coparticipacao_tot_w	:= vl_coparticipacao_contr_w;
		 
		/*%Itens de conta*/
 
		qt_total_contas_w	:= qt_exames_contr_w + qt_internacao_contr_w + qt_consultas_contr_w;
		tx_consultas_w		:= dividir((qt_consultas_contr_w*100),qt_total_contas_w);
		tx_exames_w		:= dividir((qt_exames_contr_w*100),qt_total_contas_w);
		tx_internacao_w		:= dividir((qt_internacao_contr_w*100),qt_total_contas_w);
		 
		/*Resultado*/
 
		if (vl_total_custo_w = 0) then 
			tx_resultado_w	:= 100;
		else 
			tx_resultado_w	:= trunc((DIVIDIR_SEM_ROUND(vl_total_custo_w,vl_mensalidade_tot_w) -1) * 100,2);
			 
			tx_resultado_w	:= tx_resultado_w * -1;
		end if;
		 
		 
		insert into w_pls_relat_relacionamento(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec, 
				nr_seq_grupo,ds_grupo_contrato,tx_consultas,tx_exames,tx_internacao, 
				vl_custo_total,vl_custo_servico,vl_custo_diversos,vl_receita_total,vl_fator_moderador, 
				qt_beneficiarios,VL_LUCRO_PREJUIZO,ie_tipo_relatorio) 
		values (	nextval('w_pls_relat_relacionamento_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p, 
				nr_seq_grupo_w,ds_grupo_w,tx_consultas_w,tx_exames_w,tx_internacao_w, 
				vl_total_custo_w,vl_servicos_contr_w,vl_diversos_contr_w,vl_mensalidade_tot_w,vl_coparticipacao_tot_w, 
				qt_beneficiarios_w,tx_resultado_w,'FS');
	end if;
			 
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE w_pls_relat_ficha_sintetica ( nr_seq_grupo_p bigint, dt_reajuste_p bigint, ie_regulamentacao_p text, ie_preco_p text, dt_inicial_p timestamp, dt_final_p timestamp, qt_usuarios_inicial_p bigint, qt_usuarios_final_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

