-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_inativar_exame_oft ( nm_tabela_p text, ie_opcao_p text, nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE

/* 
  "L" - Libera 
  "I" - Inativa	 
*/
 
ie_gerar_lista_esp_exame_w		varchar(1);

BEGIN
ie_gerar_lista_esp_exame_w := obter_param_usuario(281, 1201, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_gerar_lista_esp_exame_w);
if (ie_opcao_p = 'L') then 
	if (nm_tabela_p = 'OFT_CORRECAO_ATUAL') then 
		update	oft_correcao_atual 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_AUTO_REFRACAO') then 
		update	oft_auto_refracao 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_MOTILIDADE_OCULAR') then 
		update	oft_motilidade_ocular 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_TONOMETRIA') then 
		update	oft_tonometria 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_DNP') then 
		update	oft_dnp 		 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_ACUIDADE_VISUAL') then 
		update	oft_acuidade_visual 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_REFRACAO') then 
		update	oft_refracao 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_CERATOMETRIA') then 
		update	oft_ceratometria 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_EXAME_EXTERNO') then 
		update	oft_exame_externo 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_FUNDOSCOPIA') then 
		update	oft_fundoscopia 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_BIOMICROSCOPIA') then 
		update	oft_biomicroscopia 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_TONOMETRIA') then 
		update	oft_tonometria 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_CURVA_TENCIONAL') then 
		update	oft_curva_tencional 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_ANGIO_RETINO') then 
		update	oft_angio_retino 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_GONIOSCOPIA') then 
		update	oft_gonioscopia 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_BIOMETRIA') then 
		update	oft_biometria 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_MICROSCOPIA_ESPECULAR') then 
		update	OFT_MICROSCOPIA_ESPECULAR 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_PUPILOMETRIA') then 
		update	oft_pupilometria 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_PAQUIMETRIA') then 
		update	OFT_PAQUIMETRIA 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	 
	elsif (nm_tabela_p = 'PEP_ORIENTACAO_GERAL') then 
		update	PEP_ORIENTACAO_GERAL 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'ANAMNESE_PACIENTE') then 
		update	ANAMNESE_PACIENTE 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'DIAGNOSTICO_DOENCA') then 
		update	DIAGNOSTICO_DOENCA 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_seq_interno 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'DIAG_DOENCA_INF_ADIC') then 
		update	DIAG_DOENCA_INF_ADIC 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'EVOLUCAO_PACIENTE') then 
		CALL liberar_evolucao(nr_sequencia_p,nm_usuario_p);
	elsif (nm_tabela_p = 'PRESCR_PROCED_INF_ADIC') then 
		update	PRESCR_PROCED_INF_ADIC 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_ANAMNESE') then 
		update	OFT_ANAMNESE 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_CONDUTA') then 
		update	OFT_CONDUTA 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_CONSULTA_LENTE') then 
		update	OFT_CONSULTA_LENTE 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_OCULOS') then 
		update	OFT_OCULOS 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'MED_RECEITA') then 
		update	MED_RECEITA 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'PEDIDO_EXAME_EXTERNO') then 
		update	PEDIDO_EXAME_EXTERNO 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
		if (ie_gerar_lista_esp_exame_w = 'S') then 
			CALL gerar_lista_espera_exame(nr_sequencia_p,nm_usuario_p);
		end if;
	elsif (nm_tabela_p = 'PEP_PAC_CI') then 
		update	PEP_PAC_CI 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_DIAGNOSTICO') then 
		update	OFT_DIAGNOSTICO 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_TOPOGRAFIA_CORNEANA') then 
		update	OFT_TOPOGRAFIA_CORNEANA 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_CAMPIMETRIA') then 
		update	OFT_CAMPIMETRIA 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_TOMOGRAFIA_OLHO') then 
		update	OFT_TOMOGRAFIA_OLHO 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_CERASTOCOPIA') then 
		update	OFT_CERASTOCOPIA 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_OCT') then 
		update	OFT_OCT 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'MED_AVALIACAO_PACIENTE') then 
		/* 
		update	MED_AVALIACAO_PACIENTE 
		set 	dt_liberacao 	= sysdate, 
			nm_usuario 	= nm_usuario_p 
		where 	nr_sequencia = nr_sequencia_p; 
		commit; 
		*/
 
		CALL Liberar_avaliacao(nr_sequencia_p,nm_usuario_p);
	elsif (nm_tabela_p = 'PACIENTE_ALERGIA') then 
		update	PACIENTE_ALERGIA 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario_liberacao = nm_usuario_p 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'PACIENTE_ANTEC_CLINICO') then 
		update	PACIENTE_ANTEC_CLINICO 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario_liberacao = nm_usuario_p 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'PACIENTE_MEDIC_USO') then 
		update	PACIENTE_MEDIC_USO 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario_liberacao = nm_usuario_p 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'PACIENTE_HABITO_VICIO') then 
		update	PACIENTE_HABITO_VICIO 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario_liberacao = nm_usuario_p 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'HISTORICO_SAUDE_CIRURGIA') then 
		update	HISTORICO_SAUDE_CIRURGIA 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario_liberacao = nm_usuario_p 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'HISTORICO_SAUDE_INTERNACAO') then 
		update	HISTORICO_SAUDE_INTERNACAO 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario 	= nm_usuario_p 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'PACIENTE_REP_PRESCRICAO') then 
		update	PACIENTE_REP_PRESCRICAO 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario 	= nm_usuario_p 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'PACIENTE_ANTEC_CLINICO') then 
		update	PACIENTE_ANTEC_CLINICO 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario_liberacao = nm_usuario_p 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'PACIENTE_ACESSORIO') then 
		update	PACIENTE_ACESSORIO 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario 	= nm_usuario_p 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'PACIENTE_TRANSFUSAO') then 
		update	PACIENTE_TRANSFUSAO 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario_liberacao = nm_usuario_p 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_CONSULTA_PADRAO') then 
		update	OFT_CONSULTA_PADRAO 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario 	= nm_usuario_p 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_POTENCIAL_ACUIDADE') then 
		update	OFT_POTENCIAL_ACUIDADE 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_ANEXO') then 
		update	oft_anexo 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_ESCOLHA_LENTE') then 
		update	OFT_ESCOLHA_LENTE 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_IRIDECTOMIA') then 
		update	OFT_IRIDECTOMIA 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_OLHO_SECO') then 
		update	OFT_OLHO_SECO 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;	
	elsif (nm_tabela_p = 'OFT_IMAGEM_EXAME') then 
		update	OFT_IMAGEM_EXAME 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;			
	elsif (nm_tabela_p = 'OFT_CIRURGIA_REFRATIVA') then 
		update	OFT_CIRURGIA_REFRATIVA 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;	
	elsif (nm_tabela_p = 'OFT_FOTOCOAGULACAO_LASER') then 
		update	OFT_FOTOCOAGULACAO_LASER 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;		
	elsif (nm_tabela_p = 'OFT_CAPSULOTOMIA') then 
		update	OFT_CAPSULOTOMIA 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_DALTONISMO') then 
		update	OFT_DALTONISMO 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;	
	elsif (nm_tabela_p = 'OFT_SOBRECARGA_HIDRICA') then 
		update	OFT_SOBRECARGA_HIDRICA 
		set 	dt_liberacao 	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_ULTRASSONOGRAFIA') then 
		update	OFT_ULTRASSONOGRAFIA 
		set 	dt_liberacao 		= clock_timestamp(), 
				nm_usuario			= nm_usuario_p 
		where 	nr_sequencia 	= nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_MAPEAMENTO_RETINA') then 
		update	OFT_MAPEAMENTO_RETINA 
		set 	dt_liberacao 	= clock_timestamp(), 
				nm_usuario		= nm_usuario_p 
		where nr_sequencia 	= nr_sequencia_p;
		commit;		
	end if;
elsif (ie_opcao_p = 'I') then 
	if (nm_tabela_p = 'OFT_CORRECAO_ATUAL') then 
		update	oft_correcao_atual 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_AUTO_REFRACAO') then 
		update	oft_auto_refracao 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_MOTILIDADE_OCULAR') then 
		update	oft_motilidade_ocular 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_TONOMETRIA') then 
		update	oft_tonometria 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_DNP') then 
		update	oft_dnp 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_ACUIDADE_VISUAL') then 
		update	oft_acuidade_visual 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_REFRACAO') then 
		update	oft_refracao 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_CERATOMETRIA') then 
		update	oft_ceratometria 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_EXAME_EXTERNO') then 
		update	oft_exame_externo 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_FUNDOSCOPIA') then 
		update	oft_fundoscopia 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_BIOMICROSCOPIA') then 
		update	oft_biomicroscopia 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_TONOMETRIA') then 
		update	oft_tonometria 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_CURVA_TENCIONAL') then 
		update	oft_curva_tencional 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_ANGIO_RETINO') then 
		update	oft_angio_retino 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit; 	
	elsif (nm_tabela_p = 'OFT_GONIOSCOPIA') then 
		update	oft_gonioscopia 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_BIOMETRIA') then 
		update	oft_biometria 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_MICROSCOPIA_ESPECULAR') then 
		update	OFT_MICROSCOPIA_ESPECULAR 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_PUPILOMETRIA') then 
		update	OFT_PUPILOMETRIA 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_PAQUIMETRIA') then 
		update	OFT_PAQUIMETRIA 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'PEP_ORIENTACAO_GERAL') then 
		update	PEP_ORIENTACAO_GERAL 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
		 
	elsif (nm_tabela_p = 'ANAMNESE_PACIENTE') then 
		update	ANAMNESE_PACIENTE 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
		 
	elsif (nm_tabela_p = 'DIAGNOSTICO_DOENCA') then 
		update	DIAGNOSTICO_DOENCA 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_seq_interno = nr_sequencia_p;
		commit;
		 
	elsif (nm_tabela_p = 'DIAG_DOENCA_INF_ADIC') then 
		update	DIAG_DOENCA_INF_ADIC 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'EVOLUCAO_PACIENTE') then 
		update	EVOLUCAO_PACIENTE 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	cd_evolucao = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'PRESCR_PROCED_INF_ADIC') then 
		update	PRESCR_PROCED_INF_ADIC 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_ANAMNESE') then 
		update	OFT_ANAMNESE 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_CONDUTA') then 
		update	OFT_CONDUTA 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_CONSULTA_LENTE') then 
		update	OFT_CONSULTA_LENTE 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_OCULOS') then 
		update	OFT_OCULOS 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'MED_RECEITA') then 
		update	MED_RECEITA 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'PEDIDO_EXAME_EXTERNO') then 
		update	PEDIDO_EXAME_EXTERNO 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'PEP_PAC_CI') then 
		update	PEP_PAC_CI 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_DIAGNOSTICO') then 
		update	OFT_DIAGNOSTICO 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_TOPOGRAFIA_CORNEANA') then 
		update	OFT_TOPOGRAFIA_CORNEANA 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_CAMPIMETRIA') then 
		update	OFT_CAMPIMETRIA 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_TOMOGRAFIA_OLHO') then 
		update	OFT_TOMOGRAFIA_OLHO 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_CERASTOCOPIA') then 
		update	OFT_CERASTOCOPIA 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_OCT') then 
		update	OFT_OCT 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'MED_AVALIACAO_PACIENTE') then 
		update	MED_AVALIACAO_PACIENTE 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'PACIENTE_ALERGIA') then 
		update	PACIENTE_ALERGIA 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'PACIENTE_ANTEC_CLINICO') then 
		update	PACIENTE_ANTEC_CLINICO 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'PACIENTE_MEDIC_USO') then 
		update	PACIENTE_MEDIC_USO 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'PACIENTE_HABITO_VICIO') then 
		update	PACIENTE_HABITO_VICIO 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'HISTORICO_SAUDE_CIRURGIA') then 
		update	HISTORICO_SAUDE_CIRURGIA 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'HISTORICO_SAUDE_INTERNACAO') then 
		update	HISTORICO_SAUDE_INTERNACAO 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'PACIENTE_REP_PRESCRICAO') then 
		update	PACIENTE_REP_PRESCRICAO 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'PACIENTE_ANTEC_CLINICO') then 
		update	PACIENTE_ANTEC_CLINICO 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'PACIENTE_ACESSORIO') then 
		update	PACIENTE_ACESSORIO 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'PACIENTE_TRANSFUSAO') then 
		update	PACIENTE_TRANSFUSAO 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_CONSULTA_PADRAO') then 
		update	OFT_CONSULTA_PADRAO 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;	
	elsif (nm_tabela_p = 'ATESTADO_PACIENTE') then 
		update	ATESTADO_PACIENTE 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;	
	elsif (nm_tabela_p = 'OFT_POTENCIAL_ACUIDADE') then 
		update	OFT_POTENCIAL_ACUIDADE 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p, 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
		commit;
	elsif (nm_tabela_p = 'OFT_ANEXO') then 
		update 	oft_anexo 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p,	 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
	elsif (nm_tabela_p = 'OFT_ESCOLHA_LENTE') then 
		update 	OFT_ESCOLHA_LENTE 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p,	 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
	elsif (nm_tabela_p = 'OFT_IRIDECTOMIA') then 
		update 	OFT_IRIDECTOMIA 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p,	 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
	elsif (nm_tabela_p = 'OFT_OLHO_SECO') then 
		update 	OFT_OLHO_SECO 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p,	 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
	elsif (nm_tabela_p = 'OFT_IMAGEM_EXAME') then 
		update 	OFT_IMAGEM_EXAME 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p,	 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;		
	elsif (nm_tabela_p = 'OFT_CIRURGIA_REFRATIVA') then 
		update 	OFT_CIRURGIA_REFRATIVA 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p,	 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;				
	elsif (nm_tabela_p = 'OFT_FOTOCOAGULACAO_LASER') then 
		update 	OFT_FOTOCOAGULACAO_LASER 
		set 	dt_inativacao 		= clock_timestamp(), 
			nm_usuario_inativacao 	= nm_usuario_p,	 
			ie_situacao 		= 'I' 
		where 	nr_sequencia 		= nr_sequencia_p;		
	elsif (nm_tabela_p = 'OFT_DALTONISMO') then 
		update 	OFT_DALTONISMO 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p,	 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;		
	elsif (nm_tabela_p = 'OFT_CAPSULOTOMIA') then 
		update 	OFT_CAPSULOTOMIA 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p,	 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;		
	elsif (nm_tabela_p = 'OFT_SOBRECARGA_HIDRICA') then 
		update 	OFT_SOBRECARGA_HIDRICA 
		set 	dt_inativacao = clock_timestamp(), 
			nm_usuario_inativacao = nm_usuario_p,	 
			ie_situacao = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
	elsif (nm_tabela_p = 'OFT_ULTRASSONOGRAFIA') then 
		update 	OFT_ULTRASSONOGRAFIA 
		set 	dt_inativacao 			 = clock_timestamp(), 
				nm_usuario_inativacao = nm_usuario_p,	 
				ie_situacao 			 = 'I' 
		where 	nr_sequencia = nr_sequencia_p;
	elsif (nm_tabela_p = 'OFT_MAPEAMENTO_RETINA') then 
		update 	OFT_MAPEAMENTO_RETINA 
		set 	dt_inativacao 				= clock_timestamp(), 
				nm_usuario_inativacao	= nm_usuario_p,	 
				ie_situacao 				= 'I' 
		where nr_sequencia = nr_sequencia_p;		
	end if;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_inativar_exame_oft ( nm_tabela_p text, ie_opcao_p text, nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

