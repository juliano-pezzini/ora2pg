-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ger_carga_excluir_itens ( NR_SEQUENCIA_P GER_CARGA_INICIAL.NR_SEQUENCIA%type, NM_USUARIO_P GER_CARGA_INICIAL.NM_USUARIO%type) AS $body$
DECLARE


ds_chave_tasy_w		varchar(255);
nr_sequencia_w		bigint;
nr_atendimento_w	bigint;
nr_seq_tipo_carga_w	bigint;
nr_linha_w		bigint;
nr_seq_carga_arq_w	bigint;	
nr_seq_regra_conv_w	bigint;
ds_erro_w		varchar(4000);	
cd_chave_w		bigint;
nr_seq_proc_interno_w	proc_interno.nr_sequencia%type;
cd_procedimento_w	procedimento.cd_procedimento%type;
ie_origem_proced_w	procedimento.ie_origem_proced%type;
nr_interno_conta_w	conta_paciente.nr_interno_conta%type;
lnric_w			impnicp.lnric%type;
qt_erro_w		bigint;
nr_seq_atepacu_w	bigint;

c01 CURSOR FOR			
SELECT	nr_sequencia,
	ds_chave_tasy,
	nr_linha,
	nr_seq_carga_arq
from	impnfal
where	nr_seq_carga	= NR_SEQUENCIA_P
and	ie_status	= 'I'
and	substr(ds_chave_tasy,1,1) <> 'S'
and	(ds_chave_tasy IS NOT NULL AND ds_chave_tasy::text <> '');

c02 CURSOR FOR
SELECT	nr_atendimento
from	atendimento_paciente
where	nr_seq_episodio	= ds_chave_tasy_w;

c03 CURSOR FOR
SELECT	nr_sequencia,
	ds_chave_tasy,
	nr_linha,
	nr_seq_carga_arq
from	impncir
where	nr_seq_carga	= NR_SEQUENCIA_P
and	ie_status	= 'I'
and	substr(ds_chave_tasy,1,1) <> 'S'
and	(ds_chave_tasy IS NOT NULL AND ds_chave_tasy::text <> '');

c04 CURSOR FOR
SELECT	nr_sequencia,
	ds_chave_tasy,
	nr_linha,
	nr_seq_carga_arq
from	impnpat
where	nr_seq_carga	= NR_SEQUENCIA_P
and	ie_status	= 'I'
and	substr(ds_chave_tasy,1,1) <> 'S'
and	(ds_chave_tasy IS NOT NULL AND ds_chave_tasy::text <> '');			

c05 CURSOR FOR
SELECT	nr_sequencia,
	ds_chave_tasy,
	nr_linha,
	nr_seq_carga_arq
from	impngpa
where	nr_seq_carga	= NR_SEQUENCIA_P
and	ie_status	= 'I'
and	substr(ds_chave_tasy,1,1) <> 'S'
and	(ds_chave_tasy IS NOT NULL AND ds_chave_tasy::text <> '');

c06 CURSOR FOR
SELECT	nr_sequencia,
	ds_chave_tasy,
	nr_linha,
	nr_seq_carga_arq
from	impnktr
where	nr_seq_carga	= NR_SEQUENCIA_P
and	ie_status	= 'I'
and	substr(ds_chave_tasy,1,1) <> 'S'
and	(ds_chave_tasy IS NOT NULL AND ds_chave_tasy::text <> '');	

c07 CURSOR FOR
SELECT	nr_sequencia,
	ds_chave_tasy,
	nr_linha,
	nr_seq_carga_arq
from	cid_doenca_gm
where	nr_seq_carga	= NR_SEQUENCIA_P
and	ie_status	= 'I'
and	substr(ds_chave_tasy,1,1) <> 'S'
and	(ds_chave_tasy IS NOT NULL AND ds_chave_tasy::text <> '');	

c08 CURSOR FOR
SELECT	nr_sequencia,
	ds_chave_tasy,
	nr_linha,
	nr_seq_carga_arq
from	cid_categoria_gm
where	nr_seq_carga	= NR_SEQUENCIA_P
and	ie_status	= 'I'
and	substr(ds_chave_tasy,1,1) <> 'S'
and	(ds_chave_tasy IS NOT NULL AND ds_chave_tasy::text <> '');

c09 CURSOR FOR
SELECT	nr_sequencia,
	ds_chave_tasy,
	nr_linha,
	nr_seq_carga_arq
from	cid_especialidade_gm
where	nr_seq_carga	= NR_SEQUENCIA_P
and	ie_status	= 'I'
and	substr(ds_chave_tasy,1,1) <> 'S'
and	(ds_chave_tasy IS NOT NULL AND ds_chave_tasy::text <> '');

c10 CURSOR FOR
SELECT	nr_sequencia,
	ds_chave_tasy,
	nr_linha,
	nr_seq_carga_arq
from	impndia
where	nr_seq_carga	= NR_SEQUENCIA_P
and	ie_status	= 'I'
and	substr(ds_chave_tasy,1,1) <> 'S'
and	(ds_chave_tasy IS NOT NULL AND ds_chave_tasy::text <> '');

c11 CURSOR FOR
SELECT	nr_sequencia,
	ds_chave_tasy,
	nr_linha,
	nr_seq_carga_arq
from	imp_drg_hauptabteilungen
where	nr_seq_carga	= NR_SEQUENCIA_P
and	ie_status	= 'I'
and	substr(ds_chave_tasy,1,1) <> 'S'
and	(ds_chave_tasy IS NOT NULL AND ds_chave_tasy::text <> '');

c12 CURSOR FOR
SELECT	nr_sequencia,
	ds_chave_tasy,
	nr_linha,
	nr_seq_carga_arq,
	lnric
from	impnicp
where	nr_seq_carga	= NR_SEQUENCIA_P
and	ie_status	= 'I'
and	substr(ds_chave_tasy,1,1) <> 'S'
and	(ds_chave_tasy IS NOT NULL AND ds_chave_tasy::text <> '');

c13 CURSOR FOR
SELECT	nr_sequencia,
	ds_chave_tasy,
	nr_linha,
	nr_seq_carga_arq	
from	imp_procedimento_ger
where	nr_seq_carga	= NR_SEQUENCIA_P
and	ie_status	= 'I'
and	substr(ds_chave_tasy,1,1) <> 'S'
and	(ds_chave_tasy IS NOT NULL AND ds_chave_tasy::text <> '');

c14 CURSOR FOR
SELECT	nr_sequencia,
	ds_chave_tasy,
	nr_linha,
	nr_seq_carga_arq	
from	imp_grupo_proc_ger
where	nr_seq_carga	= NR_SEQUENCIA_P
and	ie_status	= 'I'
and	substr(ds_chave_tasy,1,1) <> 'S'
and	(ds_chave_tasy IS NOT NULL AND ds_chave_tasy::text <> '');

c15 CURSOR FOR
SELECT	nr_sequencia,
	ds_chave_tasy,
	nr_linha,
	nr_seq_carga_arq	
from	imp_especialidade_proc_ger
where	nr_seq_carga	= NR_SEQUENCIA_P
and	ie_status	= 'I'
and	substr(ds_chave_tasy,1,1) <> 'S'
and	(ds_chave_tasy IS NOT NULL AND ds_chave_tasy::text <> '');

c16 CURSOR FOR
SELECT	nr_sequencia,
	ds_chave_tasy,
	nr_linha,
	nr_seq_carga_arq	
from	imp_area_proc_ger
where	nr_seq_carga	= NR_SEQUENCIA_P
and	ie_status	= 'I'
and	substr(ds_chave_tasy,1,1) <> 'S'
and	(ds_chave_tasy IS NOT NULL AND ds_chave_tasy::text <> '');

c17 CURSOR FOR
SELECT	nr_sequencia,
	ds_chave_tasy,
	nr_linha,
	nr_seq_carga_arq	
from	imp_procedimento_preco_ger
where	nr_seq_carga	= NR_SEQUENCIA_P
and	ie_status	= 'I'
and	substr(ds_chave_tasy,1,1) <> 'S'
and	(ds_chave_tasy IS NOT NULL AND ds_chave_tasy::text <> '');

c18 CURSOR FOR
SELECT	nr_seq_interno
from	atend_paciente_unidade
where	nr_atendimento	= nr_atendimento_w;

c19 CURSOR FOR
SELECT	nr_sequencia,
	ds_chave_tasy,
	nr_linha,
	nr_seq_carga_arq
from	impnffz
where	nr_seq_carga	= NR_SEQUENCIA_P
and	ie_status	= 'I'
and	substr(ds_chave_tasy,1,1) <> 'S'
and	(ds_chave_tasy IS NOT NULL AND ds_chave_tasy::text <> '');


BEGIN

CALL wheb_usuario_pck.set_nm_usuario(NM_USUARIO_P);
CALL philips_param_pck.set_nr_seq_idioma(obter_nr_seq_idioma(NM_USUARIO_P));

CALL gerar_int_padrao.set_executando_recebimento('S');

select	max(nr_seq_tipo_carga),
	max(nr_seq_regra_conv)
into STRICT	nr_seq_tipo_carga_w,
	nr_seq_regra_conv_w
from	ger_carga_inicial
where	nr_sequencia	= nr_sequencia_p;

if (nr_seq_tipo_carga_w = 16) then --Pacientes
	open C04;
	loop
	fetch C04 into
		nr_sequencia_w,
		ds_chave_tasy_w,
		nr_linha_w,
		nr_seq_carga_arq_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
	
		begin		
		
		delete  FROM same_cpi_prontuario
		where   cd_pessoa_fisica = ds_chave_tasy_w;
		
		delete	from pessoa_classif
		where	cd_pessoa_fisica	= ds_chave_tasy_w;
		
		delete	from pf_codigo_externo
		where	cd_pessoa_fisica	= ds_chave_tasy_w;
		
		delete	from pessoa_fisica_idioma
		where	cd_pessoa_fisica	= ds_chave_tasy_w;
	
		delete	from compl_pessoa_fisica
		where	cd_pessoa_fisica	= ds_chave_tasy_w;
	
		delete	from pessoa_fisica
		where	cd_pessoa_fisica	= ds_chave_tasy_w;
		
		update	impnpat
		set	ie_status 	= 'D' --Deleted
		where	nr_sequencia 	= nr_sequencia_w;
		
		commit;
		
		exception
		when others then
			rollback;
			ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
			CALL gerar_ger_carga_log_import(nm_usuario_p, NR_SEQUENCIA_P, '13',
							wheb_mensagem_pck.get_texto(1073644,
									'NM_TABELA=' || 'PESSOA_FISICA' ||
									';NM_CHAVE=' || 'CD_PESSOA_FISICA' ||
									';DS_VALOR=' || ds_chave_tasy_w ||
									';DS_ERRO=' || ds_erro_w ),	
							nr_linha_w, nr_seq_carga_arq_w, nr_seq_tipo_carga_w, nr_sequencia_w);
			
		end;
	
	end loop;
	close C04;

elsif (nr_seq_tipo_carga_w = 17) then --Physicians
	open C05;
	loop
	fetch C05 into
		nr_sequencia_w,
		ds_chave_tasy_w,
		nr_linha_w,
		nr_seq_carga_arq_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
	
		begin
		delete from PESSOA_FISICA_ALTERACAO
		where cd_pessoa_fisica 		= ds_chave_tasy_w;
	
		delete 	from medico_espec_bsnr
		where	cd_pessoa_fisica	= ds_chave_tasy_w;

		delete 	from medico_especialidade
		where	cd_pessoa_fisica 	= ds_chave_tasy_w;
		
		delete 	from medico_estabelecimento
		where	cd_pessoa_fisica 	= ds_chave_tasy_w;
		
		delete 	from medico_vinculo
		where	cd_medico 		= ds_chave_tasy_w;
		
		delete 	from medico
		where	cd_pessoa_fisica 	= ds_chave_tasy_w;
	
		delete	from pessoa_classif
		where	cd_pessoa_fisica	= ds_chave_tasy_w;
		
		delete	from pf_codigo_externo
		where	cd_pessoa_fisica	= ds_chave_tasy_w;
		
		delete	from pessoa_fisica_idioma
		where	cd_pessoa_fisica	= ds_chave_tasy_w;
	
		delete	from compl_pessoa_fisica
		where	cd_pessoa_fisica	= ds_chave_tasy_w;
	
		delete	from pessoa_fisica
		where	cd_pessoa_fisica	= ds_chave_tasy_w;
		
		update	impngpa
		set	ie_status 	= 'D' --Deleted
		where	nr_sequencia 	= nr_sequencia_w;
		
		commit;
		
		exception
		when others then
			rollback;
			ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
			CALL gerar_ger_carga_log_import(nm_usuario_p, NR_SEQUENCIA_P, '13',
							wheb_mensagem_pck.get_texto(1073644,
									'NM_TABELA=' || 'MEDICO' ||
									';NM_CHAVE=' || 'CD_PESSOA_FISICA' ||
									';DS_VALOR=' || ds_chave_tasy_w ||
									';DS_ERRO=' || ds_erro_w ),	
							nr_linha_w, nr_seq_carga_arq_w, nr_seq_tipo_carga_w, nr_sequencia_w);
		end;
	
	end loop;
	close C05;
	
elsif (nr_seq_tipo_carga_w in (18)) then --Insurance
	open C06;
	loop
	fetch C06 into
		nr_sequencia_w,
		ds_chave_tasy_w,
		nr_linha_w,
		nr_seq_carga_arq_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
	
		begin
		
		delete	from convenio_classif
		where	cd_convenio	= ds_chave_tasy_w;		
		
		CALL exec_sql_dinamico(nm_usuario_p, 'alter trigger CATEGORIA_CONVENIO_DELETE disable');
		
		delete from categoria_plano
		where	cd_convenio	= ds_chave_tasy_w;
		
		delete from Categoria_convenio
		where 	cd_convenio	= ds_chave_tasy_w;
			
		delete from convenio
		where	cd_convenio	= ds_chave_tasy_w;
				
		update	impnktr
		set	ie_status 	= 'D' --Deleted
		where	nr_sequencia 	= nr_sequencia_w;
		
		delete from conversao_meio_externo
		where	nr_seq_regra	= nr_seq_regra_conv_w
		and	nm_tabela	= 'CONVENIO'
		and	nm_atributo	= 'CD_CONVENIO'
		and	cd_interno	= ds_chave_tasy_w;
		
		CALL exec_sql_dinamico(nm_usuario_p, 'alter trigger CATEGORIA_CONVENIO_DELETE enable');
		
		commit;
		
		exception
		when others then
			rollback;
			CALL exec_sql_dinamico(nm_usuario_p, 'alter trigger CATEGORIA_CONVENIO_DELETE enable');
			
			ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
			CALL gerar_ger_carga_log_import(nm_usuario_p, NR_SEQUENCIA_P, '13',
							wheb_mensagem_pck.get_texto(1073644,
									'NM_TABELA=' || 'CONVENIO' ||
									';NM_CHAVE=' || 'CD_CONVENIO' ||
									';DS_VALOR=' || ds_chave_tasy_w ||
									';DS_ERRO=' || ds_erro_w ),	
							nr_linha_w, nr_seq_carga_arq_w, nr_seq_tipo_carga_w, nr_sequencia_w);
		end;
	
	end loop;
	close C06;

	open C05;
	loop
	fetch C05 into
		nr_sequencia_w,
		ds_chave_tasy_w,
		nr_linha_w,
		nr_seq_carga_arq_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
	
		begin
		delete 	from pessoa_juridica
		where	cd_cgc 		= ds_chave_tasy_w;
				
		update	impngpa
		set	ie_status 	= 'D' --Deleted
		where	nr_sequencia 	= nr_sequencia_w;
		
		commit;
		
		exception
		when others then
			rollback;
			ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
			CALL gerar_ger_carga_log_import(nm_usuario_p, NR_SEQUENCIA_P, '13',
							wheb_mensagem_pck.get_texto(1073644,
									'NM_TABELA=' || 'PESSOA_JURIDICA' ||
									';NM_CHAVE=' || 'CD_CGC' ||
									';DS_VALOR=' || ds_chave_tasy_w ||
									';DS_ERRO=' || ds_erro_w ),	
							nr_linha_w, nr_seq_carga_arq_w, nr_seq_tipo_carga_w, nr_sequencia_w);
		end;
	
	end loop;
	close C05;		

elsif (nr_seq_tipo_carga_w in (19)) then --Legal entity
	open C05;
	loop
	fetch C05 into
		nr_sequencia_w,
		ds_chave_tasy_w,
		nr_linha_w,
		nr_seq_carga_arq_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		
		begin	
		delete 	from pessoa_juridica
		where	cd_cgc 		= ds_chave_tasy_w;
				
		update	impngpa
		set	ie_status 	= 'D' --Deleted
		where	nr_sequencia 	= nr_sequencia_w;
		
		commit;
		
		exception
		when others then
			rollback;
			ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
			CALL gerar_ger_carga_log_import(nm_usuario_p, NR_SEQUENCIA_P, '13',
							wheb_mensagem_pck.get_texto(1073644,
									'NM_TABELA=' || 'PESSOA_JURIDICA' ||
									';NM_CHAVE=' || 'CD_CGC' ||
									';DS_VALOR=' || ds_chave_tasy_w ||
									';DS_ERRO=' || ds_erro_w ),	
							nr_linha_w, nr_seq_carga_arq_w, nr_seq_tipo_carga_w, nr_sequencia_w);
		end;
	
	end loop;
	close C05;	

elsif (nr_seq_tipo_carga_w = 20) then --Cases
	open C01;
	loop
	fetch C01 into
		nr_sequencia_w,
		ds_chave_tasy_w,
		nr_linha_w,
		nr_seq_carga_arq_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

		begin
		
		qt_erro_w	:= 0;
		
		open C02;
		loop
		fetch C02 into
			nr_atendimento_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
		
			begin	
		
			delete from DANKIA_DISP_ATEND_PACIENTE
			where 	nr_atendimento = nr_atendimento_w;
			
			delete from CTA_PENDENCIA
			where 	nr_atendimento = nr_atendimento_w;
			
			delete from W_PAN_INFO_ADICIONAL
			where 	nr_atendimento = nr_atendimento_w;
			
			open C18;
			loop
			fetch C18 into
				nr_seq_atepacu_w;
			EXIT WHEN NOT FOUND; /* apply on C18 */
			
				delete from conversao_meio_externo
				where	nr_seq_regra	= nr_seq_regra_conv_w
				and	nm_tabela	= 'ATEND_PACIENTE_UNIDADE'
				and	nm_atributo	= 'NR_SEQ_INTERNO'
				and	cd_interno	= to_char(nr_seq_atepacu_w);
				
			end loop;
			close C18;
			
			update 	unidade_atendimento
			set 	nr_atendimento  = NULL 
			where 	nr_atendimento = nr_atendimento_w;
		
			ds_erro_w := excluir_atendimento(nr_atendimento_w, 'N', NM_USUARIO_P, null);

			if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(obter_desc_expressao(783146)||':'||ds_chave_tasy_w||' '||obter_desc_expressao(722643)||':'||chr(10) || chr(13)|| ds_erro_w);				
			end if;
			
			exception
			when others then
				qt_erro_w := 1;
				rollback;
				ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
				CALL gerar_ger_carga_log_import(nm_usuario_p, NR_SEQUENCIA_P, '13',
								wheb_mensagem_pck.get_texto(1073644,
										'NM_TABELA=' || 'EPISODIO_PACIENTE' ||
										';NM_CHAVE=' || 'NR_SEQUENCIA' ||
										';DS_VALOR=' || ds_chave_tasy_w ||
										';DS_ERRO=' || ds_erro_w ),	
								nr_linha_w, nr_seq_carga_arq_w, nr_seq_tipo_carga_w, nr_sequencia_w);
			end;
		
		end loop;
		close C02;
		
		if (qt_erro_w = 0) then
		
			delete	from episodio_paciente
			where 	nr_sequencia	= ds_chave_tasy_w;		
				
			update	impnfal
			set	ie_status 	= 'D' --Deleted
			where	nr_sequencia 	= nr_sequencia_w;
			
			commit;
		end if;
		
		exception
		when others then
			rollback;
			ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
			CALL gerar_ger_carga_log_import(nm_usuario_p, NR_SEQUENCIA_P, '13',
							wheb_mensagem_pck.get_texto(1073644,
									'NM_TABELA=' || 'EPISODIO_PACIENTE' ||
									';NM_CHAVE=' || 'NR_SEQUENCIA' ||
									';DS_VALOR=' || ds_chave_tasy_w ||
									';DS_ERRO=' || ds_erro_w ),	
							nr_linha_w, nr_seq_carga_arq_w, nr_seq_tipo_carga_w, nr_sequencia_w);
		end;

	end loop;
	close C01;
	
elsif (nr_seq_tipo_carga_w = 21) then --Convênios do case
	open C03;
	loop
	fetch C03 into
		nr_sequencia_w,
		ds_chave_tasy_w,
		nr_linha_w,
		nr_seq_carga_arq_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
	
		begin
		delete	from atend_categoria_convenio
		where	nr_seq_interno	= ds_chave_tasy_w;
		
		update	impncir
		set	ie_status 	= 'D' --Deleted
		where	nr_sequencia 	= nr_sequencia_w;
		
		delete 	from conversao_meio_externo
		where	nr_seq_regra	= nr_seq_regra_conv_w
		and	nm_tabela	= 'ATEND_CATEGORIA_CONVENIO'
		and	nm_atributo	= 'NR_SEQ_INTERNO'
		and	cd_interno	= ds_chave_tasy_w;
		
		commit;
		
		exception
		when others then
			rollback;
			ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
			CALL gerar_ger_carga_log_import(nm_usuario_p, NR_SEQUENCIA_P, '13',
							wheb_mensagem_pck.get_texto(1073644,
									'NM_TABELA=' || 'ATEND_CATEGORIA_CONVENIO' ||
									';NM_CHAVE=' || 'NR_SEQ_INTERNO' ||
									';DS_VALOR=' || ds_chave_tasy_w ||
									';DS_ERRO=' || ds_erro_w ),	
							nr_linha_w, nr_seq_carga_arq_w, nr_seq_tipo_carga_w, nr_sequencia_w);
		end;
	
	end loop;
	close C03;
	
elsif (nr_seq_tipo_carga_w in (23)) then --Case diagnosis
	open C10;
	loop
	fetch C10 into
		nr_sequencia_w,
		ds_chave_tasy_w,
		nr_linha_w,
		nr_seq_carga_arq_w;
	EXIT WHEN NOT FOUND; /* apply on C10 */
	
		begin
		delete	from diagnostico_doenca
		where	nr_seq_interno	= ds_chave_tasy_w;
		
		update	impndia
		set	ie_status 	= 'D' --Deleted
		where	nr_sequencia 	= nr_sequencia_w;
		
		delete 	from conversao_meio_externo
		where	nr_seq_regra	= nr_seq_regra_conv_w
		and	nm_tabela	= 'DIAGNOSTICO_DOENCA'
		and	nm_atributo	= 'NR_SEQ_INTERNO'
		and	cd_interno	= ds_chave_tasy_w;
		
		commit;
		
		exception
		when others then
			rollback;
			ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
			CALL gerar_ger_carga_log_import(nm_usuario_p, NR_SEQUENCIA_P, '13',
							wheb_mensagem_pck.get_texto(1073644,
									'NM_TABELA=' || 'DIAGNOSTICO_DOENCA' ||
									';NM_CHAVE=' || 'NR_SEQ_INTERNO' ||
									';DS_VALOR=' || ds_chave_tasy_w ||
									';DS_ERRO=' || ds_erro_w ),	
							nr_linha_w, nr_seq_carga_arq_w, nr_seq_tipo_carga_w, nr_sequencia_w);
		end;
	
	end loop;
	close C10;
	
elsif (nr_seq_tipo_carga_w in (24)) then --Case Procedures
	open C12;
	loop
	fetch C12 into
		nr_sequencia_w,
		ds_chave_tasy_w,
		nr_linha_w,
		nr_seq_carga_arq_w,
		lnric_w;
	EXIT WHEN NOT FOUND; /* apply on C12 */
	
		begin
		
		select	max(nr_interno_conta)
		into STRICT	nr_interno_conta_w
		from	procedimento_paciente
		where	nr_sequencia	= ds_chave_tasy_w;
		
		delete	from procedimento_paciente
		where	nr_sequencia	= ds_chave_tasy_w;
		
		delete	from conta_paciente a
		where	a.nr_interno_conta	= nr_interno_conta_w
		and	a.ie_status_acerto 	= 1
		and	not exists (SELECT	1
			from	procedimento_paciente x
			where	x.nr_interno_conta	= a.nr_interno_conta
			
union

			SELECT	1
			from	material_atend_paciente x
			where	x.nr_interno_conta	= a.nr_interno_conta);
			
		delete	from procedimento_pac_medico
		where	nr_seq_propaci	= ds_chave_tasy_w;

		update	impnicp
		set	ie_status 	= 'D' --Deleted
		where	nr_sequencia 	= nr_sequencia_w;
		
		delete 	from conversao_meio_externo
		where	nr_seq_regra	= nr_seq_regra_conv_w
		and	nm_tabela	= 'PROCEDIMENTO_PACIENTE'
		and	nm_atributo	= 'NR_SEQUENCIA'
		and	cd_interno	= substr('PROC¬'|| lnric_w ,1,40);
		
		commit;
		
		exception
		when others then
			rollback;
			ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
			CALL gerar_ger_carga_log_import(nm_usuario_p, NR_SEQUENCIA_P, '13',
							wheb_mensagem_pck.get_texto(1073644,
									'NM_TABELA=' || 'PROCEDIMENTO_PAC_MEDICO' ||
									';NM_CHAVE=' || 'NR_SEQ_PROPACI' ||
									';DS_VALOR=' || ds_chave_tasy_w ||
									';DS_ERRO=' || ds_erro_w ),	
							nr_linha_w, nr_seq_carga_arq_w, nr_seq_tipo_carga_w, nr_sequencia_w);
		end;
	
	end loop;
	close C12;	

elsif (nr_seq_tipo_carga_w in (25)) then --ICD catalog
	open C07;
	loop
	fetch C07 into
		nr_sequencia_w,
		ds_chave_tasy_w,
		nr_linha_w,
		nr_seq_carga_arq_w;
	EXIT WHEN NOT FOUND; /* apply on C07 */
		begin
		delete 	from cid_doenca
		where	cd_doenca_cid	= ds_chave_tasy_w;
				
		update	cid_doenca_gm
		set	ie_status 	= 'D' --Deleted
		where	nr_sequencia 	= nr_sequencia_w;
		
		commit;
		
		exception
		when others then
			rollback;
			ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
			CALL gerar_ger_carga_log_import(nm_usuario_p, NR_SEQUENCIA_P, '13',
							wheb_mensagem_pck.get_texto(1073644,
									'NM_TABELA=' || 'CID_DOENCA' ||
									';NM_CHAVE=' || 'CD_DOENCA_CID' ||
									';DS_VALOR=' || ds_chave_tasy_w ||
									';DS_ERRO=' || ds_erro_w ),	
							nr_linha_w, nr_seq_carga_arq_w, nr_seq_tipo_carga_w, nr_sequencia_w);
		end;
	
	end loop;
	close C07;
	
	open C08;
	loop
	fetch C08 into
		nr_sequencia_w,
		ds_chave_tasy_w,
		nr_linha_w,
		nr_seq_carga_arq_w;
	EXIT WHEN NOT FOUND; /* apply on C08 */
	
		begin
		delete 	from cid_categoria
		where	cd_categoria_cid	= ds_chave_tasy_w;
				
		update	cid_categoria_gm
		set	ie_status 		= 'D' --Deleted
		where	nr_sequencia 		= nr_sequencia_w;
		
		commit;
		
		exception
		when others then
			rollback;
			ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
			CALL gerar_ger_carga_log_import(nm_usuario_p, NR_SEQUENCIA_P, '13',
							wheb_mensagem_pck.get_texto(1073644,
									'NM_TABELA=' || 'CID_CATEGORIA' ||
									';NM_CHAVE=' || 'CD_CATEGORIA_CID' ||
									';DS_VALOR=' || ds_chave_tasy_w ||
									';DS_ERRO=' || ds_erro_w ),	
							nr_linha_w, nr_seq_carga_arq_w, nr_seq_tipo_carga_w, nr_sequencia_w);
		end;
	
	end loop;
	close C08;
	
	open C09;
	loop
	fetch C09 into
		nr_sequencia_w,
		ds_chave_tasy_w,
		nr_linha_w,
		nr_seq_carga_arq_w;
	EXIT WHEN NOT FOUND; /* apply on C09 */
	
		begin	
	
		delete 	from cid_especialidade
		where	cd_especialidade_cid	= ds_chave_tasy_w;
				
		update	cid_especialidade_gm
		set	ie_status 		= 'D' --Deleted
		where	nr_sequencia 		= nr_sequencia_w;
		
		commit;
		
		exception
		when others then
			rollback;
			ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
			CALL gerar_ger_carga_log_import(nm_usuario_p, NR_SEQUENCIA_P, '13',
							wheb_mensagem_pck.get_texto(1073644,
									'NM_TABELA=' || 'CID_ESPECIALIDADE' ||
									';NM_CHAVE=' || 'CD_ESPECIALIDADE_CID' ||
									';DS_VALOR=' || ds_chave_tasy_w ||
									';DS_ERRO=' || ds_erro_w ),	
							nr_linha_w, nr_seq_carga_arq_w, nr_seq_tipo_carga_w, nr_sequencia_w);
		end;
	
	end loop;
	close C09;
	
elsif (nr_seq_tipo_carga_w in (26)) then --DRG catalog	
	open C11;
	loop
	fetch C11 into
		nr_sequencia_w,
		ds_chave_tasy_w,
		nr_linha_w,
		nr_seq_carga_arq_w;
	EXIT WHEN NOT FOUND; /* apply on C11 */
		begin
		
		select	cd_procedimento,
			ie_origem_proced
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w
		from	drg_procedimento
		where	nr_sequencia		= ds_chave_tasy_w;		
		
		delete	from procedimento
		where	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w
		and	nm_usuario		= 'LOAD_TASY';
		
		delete 	from drg_procedimento
		where	nr_sequencia		= ds_chave_tasy_w
		and	nm_usuario_nrec		= 'LOAD_TASY';
				
		update	imp_drg_hauptabteilungen
		set	ie_status 		= 'D' --Deleted
		where	nr_sequencia 		= nr_sequencia_w;
		
		commit;
		
		exception
		when others then
			rollback;
			ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
			CALL gerar_ger_carga_log_import(nm_usuario_p, NR_SEQUENCIA_P, '13',
							wheb_mensagem_pck.get_texto(1073644,
									'NM_TABELA=' || 'DRG_PROCEDIMENTO' ||
									';NM_CHAVE=' || 'NR_SEQUENCIA' ||
									';DS_VALOR=' || ds_chave_tasy_w ||
									';DS_ERRO=' || ds_erro_w ),	
							nr_linha_w, nr_seq_carga_arq_w, nr_seq_tipo_carga_w, nr_sequencia_w);
		end;
	
	end loop;
	close C11;	

elsif (nr_seq_tipo_carga_w in (29)) then --Procedures - Catalog
	open C13;
	loop
	fetch C13 into
		nr_sequencia_w,
		ds_chave_tasy_w,
		nr_linha_w,
		nr_seq_carga_arq_w;
	EXIT WHEN NOT FOUND; /* apply on C13 */
		begin
	
		cd_chave_w		:= obter_valor_campo_separador(ds_chave_tasy_w,1,';');
		ie_origem_proced_w	:= obter_valor_campo_separador(ds_chave_tasy_w,2,';');
		nr_seq_proc_interno_w	:= obter_valor_campo_separador(ds_chave_tasy_w,3,';');
		
		if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
			
			delete	from proc_interno
			where	nr_sequencia	= nr_seq_proc_interno_w;
		end if;
		
		if (cd_chave_w IS NOT NULL AND cd_chave_w::text <> '') and (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then
			
			delete	from procedimento
			where	cd_procedimento		= cd_chave_w
			and	ie_origem_proced	= ie_origem_proced_w;
			
		end if;
		
		update	imp_procedimento_ger
		set	ie_status 		= 'D' --Deleted
		where	nr_sequencia 		= nr_sequencia_w;
		
		commit;
		
		exception
		when others then
			rollback;
			ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
			CALL gerar_ger_carga_log_import(nm_usuario_p, NR_SEQUENCIA_P, '13',
							wheb_mensagem_pck.get_texto(1073644,
									'NM_TABELA=' || 'PROCEDIMENTO' ||
									';NM_CHAVE=' || 'CD_PROCEDIMENTO;IE_ORIGEM_PROCED;NR_SEQ_PROC_INTERNO' ||
									';DS_VALOR=' || ds_chave_tasy_w ||
									';DS_ERRO=' || ds_erro_w ),	
							nr_linha_w, nr_seq_carga_arq_w, nr_seq_tipo_carga_w, nr_sequencia_w);
		end;	
	end loop;
	close C13;
	
	open C14;
	loop
	fetch C14 into
		nr_sequencia_w,
		ds_chave_tasy_w,
		nr_linha_w,
		nr_seq_carga_arq_w;
	EXIT WHEN NOT FOUND; /* apply on C14 */
		begin
		
		cd_chave_w		:= obter_valor_campo_separador(ds_chave_tasy_w,1,';');
		ie_origem_proced_w	:= obter_valor_campo_separador(ds_chave_tasy_w,2,';');		
		
		delete	from grupo_proc
		where	cd_grupo_proc		= cd_chave_w
		and	ie_origem_proced	= ie_origem_proced_w;
		
		update	imp_grupo_proc_ger
		set	ie_status 		= 'D' --Deleted
		where	nr_sequencia 		= nr_sequencia_w;
		
		commit;
		
		exception
		when others then
			rollback;
			ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
			CALL gerar_ger_carga_log_import(nm_usuario_p, NR_SEQUENCIA_P, '13',
							wheb_mensagem_pck.get_texto(1073644,
									'NM_TABELA=' || 'GRUPO_PROC' ||
									';NM_CHAVE=' || 'CD_GRUPO_PROC;IE_ORIGEM_PROCED' ||
									';DS_VALOR=' || ds_chave_tasy_w ||
									';DS_ERRO=' || ds_erro_w ),	
							nr_linha_w, nr_seq_carga_arq_w, nr_seq_tipo_carga_w, nr_sequencia_w);
		end;		
	end loop;
	close C14;
	
	open C15;
	loop
	fetch C15 into
		nr_sequencia_w,
		ds_chave_tasy_w,
		nr_linha_w,
		nr_seq_carga_arq_w;
	EXIT WHEN NOT FOUND; /* apply on C15 */
		begin
		
		cd_chave_w		:= obter_valor_campo_separador(ds_chave_tasy_w,1,';');
		ie_origem_proced_w	:= obter_valor_campo_separador(ds_chave_tasy_w,2,';');	
		
		delete	from especialidade_proc
		where	cd_especialidade	= cd_chave_w
		and	ie_origem_proced	= ie_origem_proced_w;
		
		update	imp_especialidade_proc_ger
		set	ie_status 		= 'D' --Deleted
		where	nr_sequencia 		= nr_sequencia_w;
		
		commit;
		
		exception
		when others then
			rollback;
			ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
			CALL gerar_ger_carga_log_import(nm_usuario_p, NR_SEQUENCIA_P, '13',
							wheb_mensagem_pck.get_texto(1073644,
									'NM_TABELA=' || 'ESPECIALIDADE_PROC' ||
									';NM_CHAVE=' || 'CD_ESPECIALIDADE;IE_ORIGEM_PROCED' ||
									';DS_VALOR=' || ds_chave_tasy_w ||
									';DS_ERRO=' || ds_erro_w ),	
							nr_linha_w, nr_seq_carga_arq_w, nr_seq_tipo_carga_w, nr_sequencia_w);
		end;		
	end loop;
	close C15;
	
	open C16;
	loop
	fetch C16 into
		nr_sequencia_w,
		ds_chave_tasy_w,
		nr_linha_w,
		nr_seq_carga_arq_w;
	EXIT WHEN NOT FOUND; /* apply on C16 */
		begin
		
		cd_chave_w		:= obter_valor_campo_separador(ds_chave_tasy_w,1,';');
		ie_origem_proced_w	:= obter_valor_campo_separador(ds_chave_tasy_w,2,';');	
		
		delete	from area_procedimento
		where	cd_area_procedimento	= cd_chave_w
		and	ie_origem_proced	= ie_origem_proced_w;
		
		update	imp_area_proc_ger
		set	ie_status 		= 'D' --Deleted
		where	nr_sequencia 		= nr_sequencia_w;
		
		commit;
		
		exception
		when others then
			rollback;
			ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
			CALL gerar_ger_carga_log_import(nm_usuario_p, NR_SEQUENCIA_P, '13',
							wheb_mensagem_pck.get_texto(1073644,
									'NM_TABELA=' || 'AREA_PROCEDIMENTO' ||
									';NM_CHAVE=' || 'CD_AREA_PROCEDIMENTO;IE_ORIGEM_PROCED' ||
									';DS_VALOR=' || ds_chave_tasy_w ||'-'||obter_valor_campo_separador(ds_chave_tasy_w,1,';')||									
									';DS_ERRO=' || ds_erro_w ),	
							nr_linha_w, nr_seq_carga_arq_w, nr_seq_tipo_carga_w, nr_sequencia_w);
		end;		
	end loop;
	close C16;
	
elsif (nr_seq_tipo_carga_w in (31)) then --Procedures - Catalog
	open C17;
	loop
	fetch C17 into
		nr_sequencia_w,
		ds_chave_tasy_w,
		nr_linha_w,
		nr_seq_carga_arq_w;
	EXIT WHEN NOT FOUND; /* apply on C17 */
		begin
	
		cd_chave_w		:= obter_valor_campo_separador(ds_chave_tasy_w,1,';');
		cd_procedimento_w	:= obter_valor_campo_separador(ds_chave_tasy_w,2,';');
		ie_origem_proced_w	:= obter_valor_campo_separador(ds_chave_tasy_w,3,';');

		delete	from preco_amb
		where	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w
		and	cd_edicao_amb		= cd_chave_w;
		
		delete	from edicao_amb a
		where	a.cd_edicao_amb		= cd_chave_w
		and	not exists (SELECT	1
			from	preco_amb x
			where	x.cd_edicao_amb	= a.cd_edicao_amb);
		
		update	imp_procedimento_preco_ger
		set	ie_status 		= 'D' --Deleted
		where	nr_sequencia 		= nr_sequencia_w;
		
		commit;
		
		exception
		when others then
			rollback;
			ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
			CALL gerar_ger_carga_log_import(nm_usuario_p, NR_SEQUENCIA_P, '13',
							wheb_mensagem_pck.get_texto(1073644,
									'NM_TABELA=' || 'PRECO_AMB' ||
									';NM_CHAVE=' || 'CD_EDICAO_AMB;CD_PROCEDIMENTO;IE_ORIGEM_PROCED' ||
									';DS_VALOR=' || ds_chave_tasy_w ||
									';DS_ERRO=' || ds_erro_w ),	
							nr_linha_w, nr_seq_carga_arq_w, nr_seq_tipo_carga_w, nr_sequencia_w);
		end;	
	end loop;
	close C17;

elsif (nr_seq_tipo_carga_w in (35)) then --Case link
	open C19;
	loop
	fetch C19 into
		nr_sequencia_w,
		ds_chave_tasy_w,
		nr_linha_w,
		nr_seq_carga_arq_w;
	EXIT WHEN NOT FOUND; /* apply on C19 */
		
		begin	
		delete 	from atendimento_acompanhante
		where	nr_atendimento	= ds_chave_tasy_w;
				
		update	impnffz
		set	ie_status 	= 'D' --Deleted
		where	nr_sequencia 	= nr_sequencia_w;
		
		commit;
		
		exception
		when others then
			rollback;
			ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
			CALL gerar_ger_carga_log_import(nm_usuario_p, NR_SEQUENCIA_P, '13',
							wheb_mensagem_pck.get_texto(1073644,
									'NM_TABELA=' || 'ATENDIMENTO_ACOMPANHANTE' ||
									';NM_CHAVE=' || 'NR_ATENDIMENTO' ||
									';DS_VALOR=' || ds_chave_tasy_w ||
									';DS_ERRO=' || ds_erro_w ),	
							nr_linha_w, nr_seq_carga_arq_w, nr_seq_tipo_carga_w, nr_sequencia_w);
		end;
	
	end loop;
	close C19;	
	
end if;

update	ger_carga_inicial
set	nm_usuario_exc 	= nm_usuario_p,
	dt_exclusao	= clock_timestamp(),
	ie_acao		= 'DONE'
where	nr_sequencia	= NR_SEQUENCIA_P;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ger_carga_excluir_itens ( NR_SEQUENCIA_P GER_CARGA_INICIAL.NR_SEQUENCIA%type, NM_USUARIO_P GER_CARGA_INICIAL.NM_USUARIO%type) FROM PUBLIC;

