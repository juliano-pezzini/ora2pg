-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE vincular_adiant_receb_conv (nr_adiantamento_p bigint, nr_seq_receb_p bigint, ie_acao_p text, ie_commit_p text, nm_usuario_p text, vl_vinculado_p bigint, ds_retorno_p INOUT text) AS $body$
DECLARE


/*
V - Vincular
D - Desvincular
*/
ds_retorno_w		varchar(4000);
vl_saldo_adiant_w 	adiantamento.vl_saldo%type;
vl_vinculado_w		convenio_receb_adiant.vl_vinculado%type;
nr_adiantamento_w	convenio_receb.nr_adiantamento%type;
qt_vinc_w		convenio_receb_adiant.nr_sequencia%type;
vl_adiantamento_w	adiantamento.vl_adiantamento%type;
vl_saldo_a_vincular_w 	double precision;
vl_vincular_w		convenio_receb_adiant.vl_vinculado%type;
vl_recebimento_w  	convenio_receb.vl_recebimento%type;

c01 CURSOR FOR
SELECT	a.nr_adiantamento
from	convenio_receb_adiant a
where	a.nr_seq_receb	= nr_seq_receb_p;


BEGIN

ds_retorno_w	:= 'N';

if (ie_acao_p = 'V') then

	select	coalesce(max(a.vl_saldo),0),
		coalesce(max(a.vl_adiantamento),0)
	into STRICT	vl_saldo_adiant_w,
		vl_adiantamento_w
	from	adiantamento a
	where	a.nr_adiantamento	= nr_adiantamento_p;

   	select  coalesce(max(vl_recebimento), 0)
   	into STRICT  vl_recebimento_w
   	from  convenio_receb
   	where nr_sequencia = nr_seq_receb_p;
		
	select  coalesce(sum(a.vl_vinculado),0)
  	into STRICT  vl_vinculado_w
  	from  convenio_receb_adiant a
  	where a.nr_seq_receb   = nr_seq_receb_p;
	
	vl_saldo_a_vincular_w := (vl_recebimento_w - vl_vinculado_w);

	if (coalesce(vl_vinculado_p,0) <> 0) and (vl_vinculado_p <= vl_saldo_adiant_w) and (vl_saldo_a_vincular_w > 0) then
		
		select 	count(*)
		into STRICT	qt_vinc_w
		from	convenio_receb_adiant
		where	nr_seq_receb 	= nr_seq_receb_p
		and	nr_adiantamento = nr_adiantamento_p  LIMIT 1;
		
		if (qt_vinc_w > 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(414819);
		end if;

    		if (vl_saldo_a_vincular_w <= vl_vinculado_p) then
      			vl_vincular_w := vl_saldo_a_vincular_w;
   		 end if;

		insert	into convenio_receb_adiant(dt_atualizacao,
			nm_usuario,
			nr_adiantamento,
			nr_seq_receb,
			nr_sequencia,
			vl_vinculado)
		values (clock_timestamp(),
			nm_usuario_p,
			nr_adiantamento_p,
			nr_seq_receb_p,
			nextval('convenio_receb_adiant_seq'),
		     	coalesce(vl_vincular_w,vl_saldo_adiant_w));

		CALL ATUALIZAR_SALDO_ADIANTAMENTO(nr_adiantamento_p, nm_usuario_p, null);

		ds_retorno_w	:= 'S';
	end if;

elsif (ie_acao_p = 'D') then

	select	max(a.nr_adiantamento)
	into STRICT	nr_adiantamento_w
	from	convenio_receb a
	where	a.nr_sequencia	= nr_seq_receb_p;

	if (nr_adiantamento_w IS NOT NULL AND nr_adiantamento_w::text <> '') then

		update	convenio_receb
		set	nr_adiantamento	 = NULL
		where	nr_sequencia	= nr_seq_receb_p;

		CALL ATUALIZAR_SALDO_ADIANTAMENTO(nr_adiantamento_w, nm_usuario_p, null);

		ds_retorno_w	:= 'S';

	end if;

	open	c01;
	loop
	fetch	c01 into
		nr_adiantamento_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		delete	from convenio_receb_adiant
		where	nr_seq_receb	= nr_seq_receb_p
		and	nr_adiantamento	= coalesce(nr_adiantamento_w,nr_adiantamento);

		CALL ATUALIZAR_SALDO_ADIANTAMENTO(nr_adiantamento_w, nm_usuario_p, null);

		ds_retorno_w	:= 'S';

	end	loop;
	close	c01;

end if;

ds_retorno_p	:= coalesce(ds_retorno_w,'N');

if (ie_commit_p = 'S') and (ds_retorno_w = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vincular_adiant_receb_conv (nr_adiantamento_p bigint, nr_seq_receb_p bigint, ie_acao_p text, ie_commit_p text, nm_usuario_p text, vl_vinculado_p bigint, ds_retorno_p INOUT text) FROM PUBLIC;

