-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE bkp_objeto_ajuste_versao ( CD_VERSAO_P text , NR_RELEASE_P bigint , NM_OBJETO_P text , NM_USUARIO_P text ) AS $body$
DECLARE


IDX numeric(20) := 1;
I integer := 1;
NM_CABECALHO_W varchar(200) := 'CREATE OR REPLACE ';
SCRIPT DBMS_SQL.VARCHAR2A;
NM_LINHA_W USER_SOURCE.TEXT%TYPE;
NM_TYPE_W USER_SOURCE.TYPE%TYPE;
NM_STATUS_W USER_OBJECTS.STATUS%TYPE;
SCRIPT_CLOB_W text;
QTD_OBJECT_W bigint;
QTD_VIEW_W bigint;
LENGTH_VIEW_W bigint;

  CVIEW RECORD;
  CC RECORD;

BEGIN
  SCRIPT(IDX) := NM_CABECALHO_W;

  SELECT OBJECT_TYPE, STATUS INTO STRICT NM_TYPE_W, NM_STATUS_W
    FROM USER_OBJECTS UO
   WHERE UPPER(OBJECT_NAME) = UPPER(NM_OBJETO_P)
     AND (NOT OBJECT_TYPE IN ('TYPE BODY','PACKAGE BODY'))
   ORDER BY 1;

  IF (NM_TYPE_W = 'VIEW') THEN
    SELECT COUNT(DISTINCT VIEW_NAME) INTO STRICT QTD_VIEW_W FROM USER_VIEWS WHERE UPPER(VIEW_NAME) = UPPER(NM_OBJETO_P);
    IF (QTD_VIEW_W = 1) THEN
      FOR CVIEW IN (SELECT TEXT, TEXT_LENGTH FROM USER_VIEWS WHERE UPPER(VIEW_NAME) = UPPER(NM_OBJETO_P)) LOOP
        LENGTH_VIEW_W := LENGTH(NM_CABECALHO_W||NM_TYPE_W||' '||NM_OBJETO_P||' AS ')+ CVIEW.TEXT_LENGTH;

        DBMS_LOB.CREATETEMPORARY(SCRIPT_CLOB_W, TRUE);
        DBMS_LOB.WRITEAPPEND(SCRIPT_CLOB_W, LENGTH_VIEW_W, NM_CABECALHO_W||NM_TYPE_W||' '||NM_OBJETO_P||' AS '||CVIEW.TEXT);

        INSERT INTO OBJETO_RELEASE_BKP(
          NR_SEQUENCIA,
          NR_RELEASE,
          CD_VERSAO,
          NM_OBJETO,
          DT_ATUALIZACAO_NREC,
          NM_USUARIO_NREC,
          IE_STATUS,
          DS_SCRIPT_OBJETO)
        VALUES (
          nextval('objeto_release_bkp_seq'),
          NR_RELEASE_P,
          CD_VERSAO_P,
          NM_OBJETO_P,
          clock_timestamp(),
          NM_USUARIO_P,
          'B',
          SCRIPT_CLOB_W);
        COMMIT;
        DBMS_LOB.FREETEMPORARY(SCRIPT_CLOB_W);
      END LOOP;
    END IF;
  ELSE
    SELECT COUNT(DISTINCT NAME) INTO STRICT QTD_OBJECT_W FROM USER_SOURCE WHERE UPPER(NAME) = UPPER(NM_OBJETO_P);
    IF (QTD_OBJECT_W = 1) THEN
      FOR CC IN (SELECT TEXT FROM USER_SOURCE WHERE UPPER(NAME) = UPPER(NM_OBJETO_P) AND (NOT TYPE IN ('TYPE BODY','PACKAGE BODY'))) LOOP
        IDX := IDX + 1;
        SCRIPT(IDX) := CC.TEXT;
      END LOOP;

      DBMS_LOB.CREATETEMPORARY(SCRIPT_CLOB_W, TRUE);
      FOR I IN 1..SCRIPT.COUNT LOOP
        DBMS_LOB.WRITEAPPEND(SCRIPT_CLOB_W, LENGTH(SCRIPT(I)), SCRIPT(I));
      END LOOP;

      INSERT INTO OBJETO_RELEASE_BKP(
        NR_SEQUENCIA,
        NR_RELEASE,
        CD_VERSAO,
        NM_OBJETO,
        DT_ATUALIZACAO_NREC,
        NM_USUARIO_NREC,
        IE_STATUS,
        DS_SCRIPT_OBJETO)
      VALUES (
        nextval('objeto_release_bkp_seq'),
        NR_RELEASE_P,
        CD_VERSAO_P,
        NM_OBJETO_P,
        clock_timestamp(),
        NM_USUARIO_P,
        'B',
        SCRIPT_CLOB_W);
      COMMIT;
      DBMS_LOB.FREETEMPORARY(SCRIPT_CLOB_W);

      IF (NM_TYPE_W = 'PACKAGE') THEN
        SCRIPT.DELETE;
        IDX := 1;
        SCRIPT(IDX) := NM_CABECALHO_W;
        FOR CC IN (SELECT TEXT FROM USER_SOURCE WHERE UPPER(NAME) = UPPER(NM_OBJETO_P) AND TYPE = 'PACKAGE BODY') LOOP
          IDX := IDX + 1;
          SCRIPT(IDX) := CC.TEXT;
        END LOOP;

        DBMS_LOB.CREATETEMPORARY(SCRIPT_CLOB_W, TRUE);
        FOR I IN 1..SCRIPT.COUNT LOOP
          DBMS_LOB.WRITEAPPEND(SCRIPT_CLOB_W, LENGTH(SCRIPT(I)), SCRIPT(I));
        END LOOP;

        INSERT INTO OBJETO_RELEASE_BKP(
          NR_SEQUENCIA,
          NR_RELEASE,
          CD_VERSAO,
          NM_OBJETO,
          DT_ATUALIZACAO_NREC,
          NM_USUARIO_NREC,
          IE_STATUS,
          DS_SCRIPT_OBJETO)
        VALUES (
          nextval('objeto_release_bkp_seq'),
          NR_RELEASE_P,
          CD_VERSAO_P,
          NM_OBJETO_P,
          clock_timestamp(),
          NM_USUARIO_P,
          'B',
          SCRIPT_CLOB_W);
        COMMIT;
        DBMS_LOB.FREETEMPORARY(SCRIPT_CLOB_W);
      END IF;
    END IF;
  END IF;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE bkp_objeto_ajuste_versao ( CD_VERSAO_P text , NR_RELEASE_P bigint , NM_OBJETO_P text , NM_USUARIO_P text ) FROM PUBLIC;

