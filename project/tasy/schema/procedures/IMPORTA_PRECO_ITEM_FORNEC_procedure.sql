-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importa_preco_item_fornec ( cd_cgc_p bigint, cd_material_p bigint, vl_preco_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE




cd_cgc_w			varchar(14);
qt_existe_w			bigint;
qt_mesmo_preco_w		bigint;
qt_length_w			bigint;
nr_sequencia_w			bigint;
qt_existe_fornec_w		bigint;
qt_existe_mat_w		bigint;

c01 CURSOR FOR
SELECT	nr_sequencia
from	preco_pj
where	cd_cgc = cd_cgc_w
and	cd_material = cd_material_p
and	((coalesce(dt_vigencia::text, '') = '') or (trunc(dt_vigencia,'dd') <= trunc(clock_timestamp(),'dd')))
and	((coalesce(dt_vigencia_fim::text, '') = '') or (trunc(dt_vigencia_fim,'dd') >= trunc(clock_timestamp(),'dd')))
and	((coalesce(cd_estabelecimento::text, '') = '') or
	(cd_estabelecimento IS NOT NULL AND cd_estabelecimento::text <> '' AND cd_estabelecimento = cd_estabelecimento_p));



BEGIN

cd_cgc_w := cd_cgc_p;

select	length(cd_cgc_w)
into STRICT	qt_length_w
;

if (qt_length_w < 14) then

	select	lpad(cd_cgc_w,14,'0')
	into STRICT	cd_cgc_w
	;
end if;

select	count(*)
into STRICT	qt_existe_mat_w
from	material
where	cd_material = cd_material_p;

select	count(*)
into STRICT	qt_existe_fornec_w
from	pessoa_juridica
where	cd_cgc = cd_cgc_w;

if (qt_existe_mat_w > 0) and (qt_existe_fornec_w > 0) then

	select	count(*)
	into STRICT	qt_existe_w
	from	regra_cotacao_mat_fornec
	where	cd_cgc_fornecedor	= cd_cgc_w
	and	cd_material		= cd_material_p;

	if (qt_existe_w > 0) then

		select	count(*)
		into STRICT	qt_mesmo_preco_w
		from	regra_cotacao_mat_fornec
		where	cd_cgc_fornecedor	= cd_cgc_w
		and	cd_material		= cd_material_p
		and	vl_preco		= vl_preco_p;

		if (qt_mesmo_preco_w = 0) then
			update	regra_cotacao_mat_fornec
			set	vl_preco = vl_preco_p
			where	cd_cgc_fornecedor	= cd_cgc_w
			and	cd_material		= cd_material_p;
		end if;
	else
		insert into regra_cotacao_mat_fornec(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			cd_cgc_fornecedor,
			cd_grupo_material,
			cd_subgrupo_material,
			cd_classe_material,
			cd_material,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			vl_preco,
			ie_gerar)
		values (nextval('regra_cotacao_mat_fornec_seq'),
			clock_timestamp(),
			nm_usuario_p,
			cd_cgc_w,
			null,
			null,
			null,
			cd_material_p,
			clock_timestamp(),
			nm_usuario_p,
			vl_preco_p,
			'S');
	end if;

	select	count(*)
	into STRICT	qt_existe_w
	from	preco_pj
	where	cd_cgc = cd_cgc_w
	and	cd_material = cd_material_p
	and	((coalesce(dt_vigencia::text, '') = '') or (trunc(dt_vigencia,'dd') <= trunc(clock_timestamp(),'dd')))
	and	((coalesce(dt_vigencia_fim::text, '') = '') or (trunc(dt_vigencia_fim,'dd') >= trunc(clock_timestamp(),'dd')))
	and	((coalesce(cd_estabelecimento::text, '') = '') or
		(cd_estabelecimento IS NOT NULL AND cd_estabelecimento::text <> '' AND cd_estabelecimento = cd_estabelecimento_p));

	if (qt_existe_w > 0) then

		open C01;
		loop
		fetch C01 into
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			update	preco_pj
			set	vl_item = vl_preco_p,
				dt_vigencia = trunc(clock_timestamp(),'dd'),
				dt_vigencia_fim  = NULL
			where	nr_sequencia = nr_sequencia_w;
			end;
		end loop;
		close C01;

	else

		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_sequencia_w
		from	preco_pj;

		insert into preco_pj(
			nr_sequencia,
			cd_estabelecimento,
			cd_cgc,
			dt_atualizacao,
			nm_usuario,
			vl_item,
			cd_material,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_vigencia)
		values (	nr_sequencia_w,
			cd_estabelecimento_p,
			cd_cgc_w,
			clock_timestamp(),
			nm_usuario_p,
			vl_preco_p,
			cd_material_p,
			clock_timestamp(),
			nm_usuario_p,
			trunc(clock_timestamp(),'dd'));
	end if;
end if;

commit;

end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importa_preco_item_fornec ( cd_cgc_p bigint, cd_material_p bigint, vl_preco_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

