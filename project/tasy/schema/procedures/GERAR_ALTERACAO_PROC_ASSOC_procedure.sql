-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_alteracao_proc_assoc ( nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_interno_p bigint, dt_horario_p timestamp, ie_alteracao_p bigint, ie_tipo_item_p text, nm_usuario_p text, cd_perfil_p bigint, cd_medico_solic_p bigint, ds_observacao_p text, nr_seq_assinatura_p bigint, ie_acm_sn_p text, ie_inicia_proced_p text, cd_estabelecimento_p bigint, ie_palm_p text, nr_seq_prot_glic_p bigint) AS $body$
DECLARE


ora2pg_rowcount int;
dt_horario_w			timestamp;
ie_permite_exec_w		varchar(255);
ds_item_w			varchar(255);
ds_justificativa_w		varchar(255);
ds_obs_final_w			varchar(255);
ie_alteracao_w			bigint;
varie_conta_recomendacao_w	varchar(2);
varie_cobra_prim_hor_w		varchar(2);
ie_suspenso_adep_w		varchar(2);
ie_suspensao_w			varchar(2);
ie_impedir_w			varchar(2);
ie_inativar_sv_w		varchar(2);
varUpdate_w			varchar(2);
ie_status_sol_w			varchar(25);
ie_status_rec_w			varchar(25);
nr_prescricao_w			bigint;
nr_prescricao_susp_w		bigint;
cd_recomendacao_w		bigint;
nr_prescricao_w2		bigint;
nr_sequencia_w			bigint;
nr_seq_proc_w			bigint;
nr_seq_hor_w			bigint;
nr_seq_interno_w		bigint;
qt_solucao_w			double precision;
nr_seq_item_w			bigint;
nr_processo_desdobrado_w	bigint;
nr_seq_material_w		bigint;
nr_seq_w			bigint;
nr_seq_solucao_w		bigint;
nr_seq_proc_interno_w		bigint;
ie_status_novo_w		smallint;
nr_agrupamento_w		double precision;
nr_seq_horario_w		bigint;
nr_seq_alteracao_w		bigint;
nr_seq_lote_w			bigint;
cont_w				bigint;
cont_2w				bigint;
dt_atualizacao_w		timestamp := clock_timestamp();
dt_horario_adm_w		timestamp;
ds_param_proc_w			varchar(2000);
ie_regra_lanc_conta_w		varchar(1);
nr_seq_map_w			bigint;
dt_param_w			timestamp;
ie_consistir_pend_w		varchar(1);
ie_agrupa_servico_w		varchar(1);
ie_somente_com_baixa_w		varchar(1);
ie_cobrar_horario_w		varchar(1);
IE_COBRAR_HORARIOI_W		varchar(1);
ie_cobra_adep_w			varchar(1);
cd_um_dose_w			varchar(30);
qt_dose_w			double precision;
cd_motivo_baixa_w		double precision;
ie_consist_dose_adm_w		varchar(2);
ie_data_proc_w			varchar(15);
ie_data_lib_prescr_w		varchar(15);
ie_exibe_suspenso_w		varchar(15);
ie_status_atend_w		smallint;
ie_cig_w			varchar(2);
ie_proc_associados_w		varchar(1);
ie_altera_status_lab_w		varchar(1);
qt_registro_w			bigint;
nr_seq_exame_w			bigint;
nr_seq_item_w2			bigint;
ie_permite_adm_w		varchar(1);
qt_horas_adm_w			bigint;
ie_susp_gestao_exame_w		varchar(1);
ie_altera_status_pa_w		varchar(1);
var_desdobrar_processo_w	varchar(1);
ie_acm_w			varchar(1);
ie_sn_w				varchar(1);
ie_acm_sn_w			varchar(1);
ie_iniciar_proc_w		varchar(1);
cd_setor_atendimento_w		bigint;
cd_setor_exec_w			bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
qt_procedimento_w		double precision;
qt_procedimento_ww		double precision;
dt_inicio_proced_w		timestamp;
qt_dif_datas_w			bigint;
cd_dieta_w			integer;
qt_reg_suspensos_w		smallint;
cd_setor_pac_w			bigint;
ie_cobra_proc_hor_w		varchar(1);
nr_seq_processo_w		bigint;
ie_encerrar_ccg_w		varchar(1);
ie_encerrar_ivc_w		varchar(1);
ie_encerrar_ccg_auto_w		varchar(1);
ie_encerrar_ivc_auto_w		varchar(1);
dt_estalidade_max_w		timestamp;
ie_consiste_hr_estabilidade_w	varchar(1);
ie_medic_paciente_w		varchar(1);
cd_motivo_Exc_medic_pac_w	bigint;
count_w				bigint;
ie_selecionar_dieta_susp_w	varchar(1);
qt_min_rev_evento_w		bigint;		
nr_seq_bomba_w			bigint;
nr_prescr_bomba_w		bigint;
ie_mostra_adep_w		varchar(1);
ie_exibe_sem_lib_farm_w		varchar(1);
qt_itens_proc_pend_w		bigint;
ie_adm_processo_aut_w		varchar(1);
cd_material_w			integer;
qt_material_w			double precision;
cd_intervalo_w			varchar(7);
ie_susp_automatica_w		varchar(1);
ie_bomba_infusao_w		varchar(1);
dt_checagem_adep_w		timestamp;
ie_ctrl_glic_w			varchar(3);
ie_tipo_item_assoc_w		varchar(15);
ds_dieta_w			varchar(255);
ds_obs_dieta_w			varchar(255);
cd_prescritor_w			varchar(10);
ie_consiste_regra_conv_w	varchar(1);
ds_erro_w			varchar(4000);
ie_adm_liberada_w		varchar(1);
cd_pessoa_fisica_w              varchar(10);
ds_recomendacao_w		varchar(250);
ds_procedimento_w		procedimento.ds_procedimento%TYPE;
nr_prescr_log_w			bigint;
ie_atualizou_w			varchar(1);
nr_seq_prot_glic_w		bigint;
cd_evolucao_w			bigint;
ie_param716_w       varchar(1);
ie_susp_nurse_w varchar(2);
nr_seq_item_cpoe_w		bigint;
								
c01 CURSOR FOR
SELECT	a.nr_prescricao nr_prescricao, /* procedimentos e controles de glicemia */
		b.nr_sequencia nr_seq_item,
		c.nr_sequencia nr_seq_hor,
		obter_se_eh_cig(b.nr_seq_proc_interno),
		b.nr_seq_exame,
		c.cd_procedimento,
		c.ie_origem_proced,
		c.dt_inicio_proced,
		a.cd_setor_atendimento,
		b.qt_procedimento,
		b.cd_setor_atendimento,
		b.nr_seq_proc_interno,
		b.nr_seq_interno,
		obter_se_acm_sn(b.ie_acm, b.ie_se_necessario),
		a.cd_prescritor,
		c.dt_horario,
		substr(obter_desc_prescr_proc(b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno),1,255),
		b.nr_seq_prot_glic,
        b.NR_SEQ_PROC_CPOE
from		prescr_proc_hor c,
		prescr_procedimento b,
		prescr_medica a
where	c.nr_prescricao = b.nr_prescricao
and		c.nr_seq_procedimento = b.nr_sequencia	
and		b.nr_prescricao = a.nr_prescricao
and		coalesce(c.ie_situacao,'A') = 'A'
and		b.nr_seq_proc_princ = nr_seq_interno_p
and		a.nr_prescricao = nr_prescricao_p
and		c.dt_horario = dt_horario_p
and	((coalesce(nr_seq_prot_glic_p::text, '') = '') or (nr_seq_prot_glic_p = coalesce(b.nr_seq_prot_glic, nr_seq_prot_glic_p)))
and		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S';


BEGIN

ie_somente_com_baixa_w := obter_param_usuario(1113, 357, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_somente_com_baixa_w);
ie_consiste_regra_conv_w := obter_param_usuario(1113, 552, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_consiste_regra_conv_w);
ie_encerrar_ivc_auto_w := obter_param_usuario(1113, 559, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_encerrar_ivc_auto_w);
ie_encerrar_ccg_auto_w := obter_param_usuario(1113, 209, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_encerrar_ccg_auto_w);
ie_altera_status_lab_w := obter_param_usuario(1113, 166, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_altera_status_lab_w);
ie_altera_status_pa_w := obter_param_usuario(1113, 203, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_altera_status_pa_w);
ie_susp_gestao_exame_w := obter_param_usuario(1113, 201, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_susp_gestao_exame_w);
VarIe_Cobra_Prim_hor_w := obter_param_usuario(1113, 351, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, VarIe_Cobra_Prim_hor_w);
ie_cobra_proc_hor_w := obter_param_usuario(1113, 246, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_cobra_proc_hor_w);
ie_param716_w := obter_param_usuario(1113, 716, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_param716_w);

OPEN c01;
LOOP
FETCH c01 INTO
	nr_prescricao_w,
	nr_seq_item_w,
	nr_seq_horario_w,
	ie_cig_w,
	nr_seq_exame_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	dt_inicio_proced_w,
	cd_setor_atendimento_w,
	qt_procedimento_w,
	cd_setor_exec_w,
	nr_seq_proc_interno_w,
	nr_seq_interno_w,
	ie_acm_sn_w,
	cd_prescritor_w,
	dt_horario_w,
	ds_procedimento_w,
	nr_seq_prot_glic_w,
    nr_seq_item_cpoe_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	BEGIN
	select	count(*)
	into STRICT	cont_w
	from	prescr_mat_hor c,
		prescr_material b
	where	c.nr_prescricao 	= b.nr_prescricao
	AND	c.nr_seq_material	= b.nr_sequencia
	and	b.nr_prescricao		= nr_prescricao_w
	and	c.dt_horario		= dt_horario_w
	and	b.nr_sequencia_proc	= nr_seq_item_w
	and	coalesce(CASE WHEN c.cd_motivo_baixa=0 THEN  b.cd_motivo_baixa  ELSE c.cd_motivo_baixa END ,0) = 0;
	
	select	count(*)
	into STRICT	cont_2w
	from	prescr_mat_hor c,
		prescr_material b
	where	c.nr_prescricao 	= b.nr_prescricao
	AND	c.nr_seq_material	= b.nr_sequencia
	and	b.nr_prescricao		= nr_prescricao_w
	and	c.dt_horario		= dt_horario_w
	and	b.nr_sequencia_proc	= nr_seq_item_w;
	
	if (cont_2w	> 0) and (cont_w		= 0) and (ie_somente_com_baixa_w = 'S') then
		--So e possivel administrar uma medicacao apos o atendimento da mesma no atendimento da prescricao/lote! Parametro [357]
		CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173406);
	end if;
	
	if (ie_consiste_regra_conv_w = 'S') and (ie_alteracao_p in (3,8)) then
		ds_erro_w := Obter_se_uso_qtde_proc(nr_atendimento_p,cd_procedimento_w,ie_origem_proced_w,qt_procedimento_w,cd_prescritor_w,cd_setor_atendimento_w,dt_inicio_proced_w/*dt_prev_exec_w*/
,'3',nr_seq_item_w,null,null,nr_seq_proc_interno_w,substr(obter_categoria_atendimento(nr_atendimento_p),1,10),substr(obter_dados_categ_conv(nr_atendimento_p,'P'),1,10),nr_seq_exame_w);
		
		if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
			--#@DS_ERRO#@. Parametro [#@NR_PARAMETRO#@]
			CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173412,'DS_ERRO=' || ds_erro_w || ';NR_PARAMETRO=' || '552');
		end if;
	end if;
	
	IF (ie_inicia_proced_p = 'N') THEN
		BEGIN
		IF (ie_cig_w = 'S') THEN
			CALL consistir_interv_medicao_cig(nr_atendimento_p, clock_timestamp());
		END IF;
		
		IF (ie_alteracao_p IN (3,8)) THEN /* administracao do horario */
			
			cd_evolucao_w := Gerar_evolPaci_automa('P', nm_usuario_p, nr_atendimento_p, ds_procedimento_w, nr_seq_horario_w, 'A', '', null, null, null, null, null, cd_evolucao_w);	
			
			select	max(Obter_Se_permite_adm_item(ie_tipo_item_p, cd_perfil_p, cd_setor_exec_w, nm_usuario_p,'N',nr_seq_proc_interno_w, cd_procedimento_w,ie_origem_proced_w))
			into STRICT	ie_permite_exec_w
			;

			if (coalesce(ie_permite_exec_w,'S') = 'N') then
				--Nao e permitido realizar horario para este item!
				CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173413);
			end if;
			
			update	prescr_proc_hor
			set		dt_fim_horario	= dt_atualizacao_w,
					nm_usuario_adm	= nm_usuario_p
			where	nr_sequencia 	= nr_seq_horario_w
			and		coalesce(dt_fim_horario::text, '') = ''
			and		coalesce(dt_suspensao::text, '') = '';

			qt_registro_w := 0;

			GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


			IF ( ora2pg_rowcount > 0) THEN
				qt_registro_w := 1;
				
				if (ie_alteracao_p = 3) and (ie_tipo_item_p = 'G') and (ie_encerrar_ccg_auto_w = 'S') then
					ie_encerrar_ccg_w := 'S';
				end if;
				if (ie_alteracao_p = 3) and (ie_tipo_item_p = 'I') and (ie_encerrar_ivc_auto_w = 'S') then
					ie_encerrar_ivc_w := 'S';
				end if;	
				
				
			END IF;

			UPDATE	prescr_procedimento
			SET		dt_coleta = dt_atualizacao_w,
					ie_amostra = 'S',
					nm_usuario = nm_usuario_p
			WHERE	nr_prescricao = nr_prescricao_w
			AND		nr_sequencia = nr_seq_item_w;

			IF (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') AND (ie_altera_status_lab_w	= 'S') THEN
				UPDATE	prescr_procedimento
				SET		ie_status_atend	= ie_status_novo_w
				WHERE	nr_prescricao = nr_prescricao_w
				AND		nr_sequencia = nr_seq_item_w;
			END IF;
		

		ELSIF (ie_alteracao_p = 4) THEN /* reversao da realizacao do horario */
			UPDATE	prescr_proc_hor
			SET		dt_fim_horario	 = NULL,
					nm_usuario_adm	 = NULL,
					dt_inicio_proced  = NULL
			WHERE	nr_sequencia 	= nr_seq_horario_w
			AND		(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '');

			qt_registro_w := 0;

			GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


			IF ( ora2pg_rowcount > 0) THEN
				qt_registro_w := 1;
			END IF;

			UPDATE	prescr_procedimento
			SET		dt_coleta  = NULL,
					ie_amostra  = NULL,
					dt_integracao_coleta  = NULL
			WHERE	nr_prescricao = nr_prescricao_w
			AND		nr_sequencia = nr_seq_item_w;

			IF (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') THEN
				UPDATE	prescr_procedimento
				SET	ie_Status_atend	= ie_Status_atend_w
				WHERE	nr_prescricao	= nr_prescricao_w
				AND	nr_sequencia	= nr_seq_item_w;
			END IF;

			
			IF (ie_altera_status_pa_w = 'S') OR
				((ie_altera_status_pa_w = 'L') AND (coalesce(nr_seq_exame_w::text, '') = '')) THEN
				BEGIN
				select	coalesce(max(ie_cobra_adep),'S')
				into STRICT	ie_cobra_adep_w
				from	procedimento
				where	cd_procedimento		= cd_procedimento_w
				and	ie_origem_proced	= ie_origem_proced_w;

				if (ie_cobra_adep_w = 'S') then
					CALL Estornar_ProPaci_Prescr_Proc(nr_prescricao_w,nr_seq_item_w,nm_usuario_p);					
				end if;
				end;
			end if;
			
		ELSIF (ie_alteracao_p IN (5,9)) THEN /* suspensao do horario */
			UPDATE	prescr_proc_hor
			SET		dt_suspensao		= dt_atualizacao_w,
					nm_usuario_susp		= nm_usuario_p
			WHERE	nr_sequencia		= nr_seq_horario_w
			AND		coalesce(dt_suspensao::text, '') = ''
			AND		coalesce(dt_fim_horario::text, '') = '';

			cd_evolucao_w := Gerar_evolPaci_automa('P', nm_usuario_p, nr_atendimento_p, ds_item_w, nr_seq_horario_w, 'S', '', null, null, null, null, null, cd_evolucao_w);

			IF (ie_susp_gestao_exame_w = 'S') AND (ie_tipo_item_p IN ('C', 'P')) AND (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') THEN

				UPDATE	prescr_procedimento
				SET		dt_suspensao		= dt_atualizacao_w,
						ie_suspenso			= 'S',
						nm_usuario_susp		= nm_usuario_p
				WHERE	nr_prescricao	= nr_prescricao_w
				AND		nr_sequencia		= nr_seq_item_w
				AND		coalesce(dt_suspensao::text, '') = '';

			END IF;

		ELSIF (ie_alteracao_p = 6) THEN /* reversao da suspensao do horario */
			UPDATE	prescr_proc_hor
			SET		dt_suspensao		 = NULL,
					nm_usuario_susp		 = NULL
			WHERE	nr_sequencia		= nr_seq_horario_w
			AND		(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '')
			and		Obter_prescricao_suspenca(nr_prescricao) = 'N'
			and		obter_se_proc_suspenso(nr_prescricao, nr_seq_procedimento) = 'N';
		END IF;

		END;
	ELSIF (ie_inicia_proced_p = 'S') THEN
		BEGIN
		IF (ie_alteracao_p	= 26) THEN
			BEGIN
			UPDATE	prescr_proc_hor
			SET		dt_inicio_proced = dt_horario_adm_w
			WHERE	nr_sequencia 	= nr_seq_horario_w
			AND		coalesce(dt_fim_horario::text, '') = ''
			AND		coalesce(dt_suspensao::text, '') = ''
			AND		coalesce(dt_inicio_proced::text, '') = '';
			qt_registro_w := 0;

			GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


			IF ( ora2pg_rowcount > 0) THEN
				qt_registro_w := 1;
			END IF;
			END;
		ELSIF (ie_alteracao_p = 27) THEN
			BEGIN
			UPDATE	prescr_proc_hor
			SET		dt_fim_horario	= dt_horario_adm_w,
					nm_usuario_adm	= nm_usuario_p
			WHERE	nr_sequencia 	= nr_seq_horario_w
			AND		coalesce(dt_fim_horario::text, '') = ''
			AND		coalesce(dt_suspensao::text, '') = ''
			AND		(dt_inicio_proced IS NOT NULL AND dt_inicio_proced::text <> '');

			IF (dt_inicio_proced_w IS NOT NULL AND dt_inicio_proced_w::text <> '') THEN
				BEGIN

				SELECT	CEIL(obter_hora_entre_datas(dt_inicio_proced_w, dt_horario_adm_w))
				INTO STRICT		qt_dif_datas_w
				;

				IF (qt_dif_datas_w = 0) THEN
					qt_dif_datas_w := 1;
				END IF;
				qt_procedimento_ww := qt_procedimento_w * qt_dif_datas_w;
				

				select	coalesce(max(ie_cobra_adep),'S')
				into STRICT		ie_cobra_adep_w
				from		procedimento
				where	cd_procedimento		= cd_procedimento_w
				and		ie_origem_proced	= ie_origem_proced_w;

				if (ie_cobra_adep_w = 'S') then
					CALL Gerar_Proc_Pac_Item_Prescr(nr_prescricao_w, nr_seq_item_w, null,null, NULL, cd_procedimento_w, ie_origem_proced_w,
						qt_procedimento_ww, cd_setor_exec_w, 1, clock_timestamp(), nm_usuario_p, NULL, nr_seq_exame_w, NULL,null,null,null,null, nr_seq_interno_w);
				end if;

				END;
			END IF;
			qt_registro_w := 0;

			GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


			IF ( ora2pg_rowcount > 0) THEN
				qt_registro_w := 1;
			END IF;
			END;
		END IF;

		END;
	END IF;

	GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


	IF ( ora2pg_rowcount > 0) OR (qt_registro_w > 0) THEN					/*David em 23/07/2008 OS 100171 - Verifica se a ultima instrucao atualizou ao menos uma linha*/
			
		SELECT	nextval('prescr_mat_alteracao_seq')
		INTO STRICT		nr_seq_alteracao_w
		;

		INSERT	INTO	prescr_mat_alteracao(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_prescricao,
			nr_seq_procedimento,
			nr_seq_horario_proc,
			dt_alteracao,
			cd_pessoa_fisica,
			ie_alteracao,
			ds_justificativa,
			ie_tipo_item,
			dt_horario,
			nr_atendimento,
			cd_item,
			nr_seq_proc_interno,
			cd_medico_solic,
			ds_observacao,
			ie_mostra_adep,
			nr_seq_assinatura,
			nr_seq_lote,
			ie_acm_sn,
			nr_seq_prot_glic
			)
		VALUES (
			nr_seq_alteracao_w,
			dt_atualizacao_w,
			nm_usuario_p,
			dt_atualizacao_w,
			nm_usuario_p,
			nr_prescricao_w,
			nr_seq_item_w,
			nr_seq_horario_w,
			clock_timestamp(),
			obter_dados_usuario_opcao(nm_usuario_p,'C'),
			ie_alteracao_p,
			null,
			ie_tipo_item_p,
			dt_horario_w,
			nr_atendimento_p,
			cd_procedimento_w,
			nr_seq_proc_interno_w,
			cd_medico_solic_p,
			ds_observacao_p,
			ie_mostra_adep_w,
			nr_seq_assinatura_p,
			nr_seq_lote_w,
			ie_acm_sn_p,
			nr_seq_prot_glic_w
			);
		
		if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
		
		IF (ie_alteracao_p IN (3,8)) THEN				
			IF (ie_altera_status_pa_w = 'S') OR
				((ie_altera_status_pa_w = 'L') AND (coalesce(nr_seq_exame_w::text, '') = '')) THEN
				BEGIN
				select	coalesce(max(ie_cobra_adep),'S')
				into STRICT		ie_cobra_adep_w
				from		procedimento
				where	cd_procedimento		= cd_procedimento_w
				and		ie_origem_proced	= ie_origem_proced_w;
				
				cont_w	:= 0;
				
				select	coalesce(max(ie_cobrar_horario),'N')
				into STRICT		ie_cobrar_horario_w
				from		procedimento
				where	cd_procedimento		= cd_procedimento_w
				and		ie_origem_proced	= ie_origem_proced_w;

				select	coalesce(max(ie_cobrar_horario),'N')
				into STRICT		ie_cobrar_horarioI_w
				from		proc_interno
				where	nr_sequencia	= nr_seq_proc_interno_w;
				
								
				if (VarIe_Cobra_Prim_hor_w = 'S') or (ie_cobrar_horario_w = 'S') or (ie_cobrar_horarioI_w = 'S')  then
					select	count(*)
					into STRICT		cont_w
					from		prescr_proc_hor a
					where	nr_prescricao	= nr_prescricao_w
					and		nr_seq_procedimento = nr_seq_item_w
					and		nr_sequencia	<> nr_seq_horario_w
					and		ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_horario) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_horario_w)
					and		(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '')
					and		exists (
								SELECT	1
								from		procedimento_paciente
								where	nr_prescricao		= nr_prescricao_w
								and		nr_sequencia_prescricao	= nr_seq_item_w);
							
					if (cont_w = 0) then
						select	count(*)
						into STRICT		cont_w
						from		prescr_proc_hor a,
								prescr_medica b
						where	a.nr_prescricao		= b.nr_prescricao
						and		b.nr_atendimento	= nr_atendimento_p
						and		cd_procedimento		= cd_procedimento_w
						and		ie_origem_proced	= ie_origem_proced_w
						and		nr_sequencia		<> nr_seq_horario_w
						and		ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_horario) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_horario_w)
						and		(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '')
						and		exists (
								SELECT	1
								from		procedimento_paciente x
								where	x.nr_prescricao		= a.nr_prescricao
								and		x.nr_sequencia_prescricao = a.nr_seq_procedimento);
					end if;
					
					if (ie_cobrar_horario_w = 'N') and (coalesce(nr_seq_proc_interno_w,0) = 0) then
						cont_w := 0;
					elsif (coalesce(nr_seq_proc_interno_w,0) > 0) then								
						if (ie_cobrar_horarioI_w = 'N') then
							cont_w := 0;
						end if;
					end if;
				end if;
				if (ie_cobra_adep_w = 'S') and (cont_w = 0) then
					IF (ie_cobra_proc_hor_w = 'N') THEN
						CALL Gerar_Proc_Pac_Prescricao(nr_prescricao_w, nr_seq_item_w, cd_perfil_p, 1113, nm_usuario_p, '', '', '');
					ELSE
						CALL gerar_proc_pac_item_prescr(nr_prescricao_w, nr_seq_item_w,null,null,nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, qt_procedimento_w, cd_setor_exec_w,1, clock_timestamp(), nm_usuario_p, cd_medico_solic_p, nr_seq_exame_w, NULL,null,null,null,null, nr_seq_interno_w);
					END IF;
				END IF;				
				END;
			END IF;
			
			IF (ie_alteracao_p = 3) then
				-- Medicos auxiliares/participantes
				CALL Gerar_adep_proced_partic(nr_prescricao_w, nr_seq_item_w, nm_usuario_p);
			end if;
		END IF;

		select	CASE WHEN coalesce(max(ie_ctrl_glic),'NC')='NC' THEN 'AP'  ELSE max(ie_ctrl_glic) END
		into STRICT		ie_tipo_item_assoc_w
		from		proc_interno
		where	nr_sequencia	= nr_seq_proc_interno_w;
		
		if (coalesce(ie_palm_p,'N') <> 'S') then
			CALL gerar_alter_horario_item_assoc(nr_atendimento_p, ie_tipo_item_assoc_w, nr_prescricao_w, nr_seq_item_w, cd_procedimento_w, dt_horario_w, dt_horario_adm_w, ie_alteracao_p, nm_usuario_p);
		end if;
		
		if (ie_alteracao_p in (3,5)) then
			CALL definir_setor_exec_adep(nr_atendimento_p,ie_tipo_item_p,nr_prescricao_w,nr_seq_item_w,nr_seq_horario_w,null);
		end if;
	end if;	

        if (ie_param716_w <> 'N') then
            ie_susp_nurse_w := 'N';
            if (ie_alteracao_p = 4) then
                ie_susp_nurse_w := 'S';
            end if;
            CALL generate_nurse_ack(ie_susp_nurse_w, ie_tipo_item_p, nr_atendimento_p, nr_seq_item_cpoe_w, cd_procedimento_w);
        end if;
	end;
end loop;
close c01;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_alteracao_proc_assoc ( nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_interno_p bigint, dt_horario_p timestamp, ie_alteracao_p bigint, ie_tipo_item_p text, nm_usuario_p text, cd_perfil_p bigint, cd_medico_solic_p bigint, ds_observacao_p text, nr_seq_assinatura_p bigint, ie_acm_sn_p text, ie_inicia_proced_p text, cd_estabelecimento_p bigint, ie_palm_p text, nr_seq_prot_glic_p bigint) FROM PUBLIC;

