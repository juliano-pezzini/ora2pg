-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_obter_medicos_horario ( nr_Seq_Ageint_p bigint, nr_Seq_ageint_item_p bigint, cd_Agenda_p bigint, dt_agenda_p timestamp, nr_minuto_duracao_p bigint, ds_lista_medicos_p INOUT text, nm_usuario_p text, cd_estabelecimento_p bigint, dt_agenda_vig_p timestamp) AS $body$
DECLARE

									 
ds_lista_w					varchar(500)	:= '';
nr_seq_grupo_selec_w		bigint;
nr_seq_Area_selec_w			bigint;
cd_pessoa_fisica_w			varchar(10);
nr_seq_medico_regra_w		bigint;
ie_consiste_regra_lib_w		varchar(1);
qt_ageint_lib_w				bigint;
cd_estabelecimento_w		smallint;
nr_seq_proc_interno_w		bigint;
cd_procedimento_w			bigint;
ie_origem_proced_w			bigint;
ie_agenda_lib_w				varchar(2);
ie_apres_med_excl_w			varchar(1);
ie_regra_turno_medico_w		varchar(1);
qt_medico_selecionado_w		bigint;
cd_medico_w					varchar(10);
ie_regra_med_excl_w			varchar(1)	:= 'N';
ie_perm_med_excl_exame_w	varchar(1);
ie_prof_lib_w				varchar(1);
ie_lib_esp_w				varchar(1);
qt_min_w					bigint;
ie_hor_w					varchar(1);
ie_turno_medico_w			varchar(1);
ie_anestesia_w				varchar(1);
ie_Gera_hor_anest_w			varchar(1);
ie_apres_hr_medico_w		varchar(1);
ie_consiste_hor_medico_w	varchar(1);
qt_encaixe_w				bigint;
qt_marc_medico_w			bigint;

C01 CURSOR FOR 
	SELECT	distinct coalesce(CASE WHEN b.ie_situacao='A' THEN  b.cd_medico  ELSE NULL END , a.cd_pessoa_fisica),		 
		b.nr_seq_medico_regra	 
	FROM agenda a
LEFT OUTER JOIN agenda_medico b ON (a.cd_agenda = b.cd_agenda)
WHERE a.cd_agenda	= cd_agenda_p and (((ie_consiste_regra_lib_w = 'S') and (		exists (	SELECT	1 
						from	agenda_cons_regra_proc x 
						where 	x.nr_seq_grupo_ageint	= nr_Seq_grupo_selec_w 
						and 	x.cd_agenda = a.cd_agenda 
						and 	ie_permite = 'S' 
					) 
	or		not 	exists (	select	1 
						from	agenda_cons_regra_proc y 
						where 	(y.nr_seq_grupo_ageint IS NOT NULL AND y.nr_seq_grupo_ageint::text <> '') 
						and 	y.cd_agenda = a.cd_agenda 
					) 
		)) 
	or (ie_consiste_regra_lib_w = 'N') 
	or (coalesce(nr_seq_grupo_selec_w::text, '') = '') 
		) and (((ie_consiste_regra_lib_w = 'S') and (	exists (select	1 
				from 	agenda_cons_regra_proc x 
				where 	x.nr_seq_area_ageint = nr_seq_area_selec_w 
				and 	x.cd_agenda = a.cd_agenda 
				) 
	or	not	exists (select	1 
				from 	agenda_cons_regra_proc y 
				where 	(y.nr_seq_area_ageint IS NOT NULL AND y.nr_seq_area_ageint::text <> '') 
				and 	y.cd_agenda = a.cd_agenda 
				) 
		)) 
	or (ie_consiste_regra_lib_w = 'N') 
	or (coalesce(nr_seq_area_selec_w::text, '') = '') 
		);								
 

BEGIN 
ie_consiste_regra_lib_w	:= coalesce(Obter_Valor_Param_Usuario(869, 164, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p), 'N');
qt_min_w := Obter_Param_Usuario(869, 239, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, qt_min_w);
ie_apres_hr_medico_w := Obter_Param_Usuario(869, 157, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_apres_hr_medico_w);
ie_consiste_hor_medico_w := Obter_Param_Usuario(869, 158, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_hor_medico_w);
 
select	max(cd_Estabelecimento) 
into STRICT	cd_estabelecimento_w 
from	agenda_integrada 
where	nr_sequencia	= nr_seq_Ageint_p;
 
select	max(a.nr_seq_grupo_Selec), 
		max(b.nr_seq_area), 
		max(a.nr_seq_proc_interno), 
		max(a.cd_procedimento), 
		max(a.ie_origem_proced), 
		max(a.ie_anestesia) 
into STRICT	nr_seq_grupo_selec_w, 
		nr_seq_Area_selec_w, 
		nr_seq_proc_interno_w, 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		ie_anestesia_w 
FROM agenda_integrada_item a
LEFT OUTER JOIN agenda_int_grupo b ON (a.nr_seq_grupo_selec = b.nr_sequencia)
WHERE a.nr_sequencia			= nr_seq_ageint_item_p;
 
select	coalesce(max(ie_regra_medico_ageint),'N') 
into STRICT	ie_regra_turno_medico_w 
from	agenda 
where	cd_agenda	= cd_agenda_p;
 
open C01;
loop 
fetch C01 into	 
	cd_pessoa_fisica_w, 
	nr_seq_medico_regra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin					 
	ie_agenda_lib_w	:= coalesce(Obter_Se_Agenda_Integrada(cd_Agenda_p, nr_seq_ageint_p, cd_estabelecimento_w, nr_seq_ageint_item_p, cd_pessoa_fisica_w, dt_agenda_vig_p),'I');
 
	if (ie_apres_med_excl_w	= 'S') then 
		ie_regra_med_Excl_w	:= ageint_obter_se_regra_med_ex(cd_pessoa_Fisica_w, cd_Agenda_p, nr_seq_proc_interno_w, nr_seq_ageint_p, cd_procedimento_w, ie_origem_proced_w);
	end if;
	cd_medico_w	:= cd_pessoa_fisica_w;
	if (ie_regra_turno_medico_w	= 'N') or (ie_regra_med_Excl_w		= 'S') then 
		ie_prof_lib_w				:= Ageint_Obter_Se_Prof_Item(nr_seq_ageint_item_p,cd_pessoa_fisica_w);
	else 
		select	count(*) 
		into STRICT	qt_medico_selecionado_w 
		from	agenda_integrada_prof_item 
		where	nr_seq_agenda_item	= nr_seq_Ageint_item_p;
		 
		if (qt_medico_selecionado_w	= 0) then 
			--cd_pessoa_fisica_w	:= null; 
			ie_prof_lib_w	:= 'S';
		else 
			select	count(*) 
			into STRICT	qt_medico_selecionado_w 
			from	agenda_integrada_prof_item 
			where	nr_seq_agenda_item	= nr_seq_Ageint_item_p 
			and	cd_pessoa_fisica	= cd_pessoa_fisica_w;
			if (qt_medico_selecionado_w	= 0) then 
				ie_prof_lib_w	:= 'N';
			else 
				ie_prof_lib_w	:= 'S';
			end if;
		end if;
	end if;
	ie_perm_med_excl_exame_w	:= ageint_obter_regra_med_exame(cd_pessoa_fisica_w, cd_agenda_p, nr_seq_proc_interno_w, nr_seq_ageint_p, cd_procedimento_w, ie_origem_proced_w);
	 
	if	(ie_agenda_lib_w	= 'S' AND ie_prof_lib_w		= 'S' AND ie_perm_med_excl_exame_w	= 'S') OR (ie_lib_esp_w	= 'S') then 
		 
		if	(ie_regra_turno_medico_w	= 'S' AND ie_regra_med_Excl_w		= 'N') or 
			((ie_regra_turno_medico_w	= 'N') or (ie_regra_med_Excl_w		= 'S')) then 
			ie_hor_w	:= 'S';
			if (qt_min_w IS NOT NULL AND qt_min_w::text <> '') and 
				(dt_agenda_p <= (clock_timestamp() + coalesce(qt_min_w,0)/1440)) then 
				ie_hor_w	:= 'N';
			end if;
					 
			if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then 
				ie_turno_medico_w	:= Ageint_Obter_Se_Turno_Medico(cd_pessoa_fisica_w, dt_agenda_p, cd_agenda_p, nm_usuario_p, nr_seq_medico_regra_w, cd_estabelecimento_p);
			else 
				ie_turno_medico_w	:= 'S';
			end if;
 
			if (ie_anestesia_w	= 'S') then 
				ie_gera_hor_anest_w	:= Ageint_Obter_Se_Hor_Anest(cd_agenda_p, dt_agenda_p, nr_seq_proc_interno_w);
			else 
				ie_gera_hor_anest_w	:= 'S';
			end if;
 
			SELECT	COUNT(*) 
			INTO STRICT	qt_encaixe_w 
			FROM	ageint_marcacao_usuario 
			WHERE	cd_agenda			= cd_agenda_p 
			AND		hr_agenda			= dt_agenda_p 
			AND		nr_seq_ageint		= nr_seq_ageint_p 
			AND		coalesce(ie_gerado,'N') 	= 'N' 
			AND		coalesce(ie_encaixe,'N') = 'S';
 
			qt_marc_medico_w := 0;			
 
			IF (qt_encaixe_w	= 0) AND (ie_turno_medico_w	= 'S') and (ie_gera_hor_anest_w	= 'S') and (qt_marc_medico_w	= 0) and (ie_hor_w = 'S') THEN 
				if (ds_lista_w IS NOT NULL AND ds_lista_w::text <> '') then					 
					ds_lista_w	:= ds_lista_w || ',' || cd_pessoa_fisica_w;
				else 
					ds_lista_w	:= cd_pessoa_fisica_w;
				end if;
			end if;
			 
		end if;		
	end if;	
	cd_pessoa_fisica_w	:= cd_medico_w;								
	end;
end loop;
close C01;
ds_lista_medicos_p	:= ds_lista_w;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_obter_medicos_horario ( nr_Seq_Ageint_p bigint, nr_Seq_ageint_item_p bigint, cd_Agenda_p bigint, dt_agenda_p timestamp, nr_minuto_duracao_p bigint, ds_lista_medicos_p INOUT text, nm_usuario_p text, cd_estabelecimento_p bigint, dt_agenda_vig_p timestamp) FROM PUBLIC;

