-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_se_long_contem ( nm_tabela_p text, nm_coluna_p text, ds_restricao_where_p text, ds_parametros_sql_p text, ds_texto_busca_p text, ie_achou_p INOUT text) AS $body$
DECLARE



/*
nm_tabela_p -> Passar o nome da tabela onde deve ser realizada a consulta
nm_coluna_p-> Nome da columa que contem o conteudo LONG
ds_restricao_where_p - > Colocar a restrição WHERE para retornar 1 (um) registro da tabela
ds_parametros_sql_p -> Passar os parâmetros para a restrição WHERE
ds_texto_busca_p -> Texto a ser procedurado dentro do conteúdo LONG
ie_achou_p -> Retorna S se encontrou o texto e N caso não tenha encontrado.

*/
ds_param_w		varchar(2000);
ds_campo_clob_w		text;
ds_sql_w		varchar(2000);
nr_sequencia_w		bigint;
qt_registro_w		bigint;
c001			integer;
retorno_w		integer;
dt_aux_w		timestamp;
ds_texto_busca_w	varchar(2000);
ds_texto_busca_w2	varchar(2000);
ie_elimina_acentuacao_w	varchar(1);


BEGIN

ie_achou_p := 'N';

ds_texto_busca_w	:= upper(ds_texto_busca_p);
ds_texto_busca_w2	:= lower(ds_texto_busca_p);

if (ds_texto_busca_p <> elimina_acentuacao(ds_texto_busca_p)) then
	ie_elimina_acentuacao_w	:= 'S';
	ds_texto_busca_w := upper(converte_acentuacao_rtf(ds_texto_busca_w));
	ds_texto_busca_w2 := upper(converte_acentuacao_rtf(ds_texto_busca_w2));
else
	ie_elimina_acentuacao_w	:= 'N';
end	if;

--dbms_output.put_line(ds_texto_busca_w);
--dbms_output.put_line(ds_texto_busca_w2);
--raise_application_error(-20011,ds_texto_busca_w);
/*INICIO - VERIFICAR SE TABELA TEMPORÁRIO EXISTE SE NÃO EXISTIR CRIA*/

SELECT 	COUNT(*)
INTO STRICT	qt_registro_w
FROM	user_tables
WHERE	table_name = 'W_COPIA_CAMPO_LONG';

IF ( qt_registro_w = 0 ) THEN
	CALL Exec_Sql_Dinamico('','create table w_copia_campo_long (nr_sequencia number(10), ds_texto clob)');
END IF;
/*FIM - VERIFICAR SE TABELA TEMPORÁRIO EXISTE SE NÃO EXISTIR CRIA*/

/*INICIO - TRANSFERE CONTEUDO DO CAMPO LONG DA TABELA DE ORIGEM PARA O CAMPO CLOB DA TABELA TEMPORARIO*/

nr_sequencia_w := Obter_Valor_Dinamico('select	(nvl(max(nr_sequencia),0) + 1) from w_copia_campo_long', nr_sequencia_w);
ds_sql_w   := 'insert into w_copia_campo_long select :SEQUENCE, to_lob('|| nm_coluna_p || ') from ' || nm_tabela_p || ' ' || ds_restricao_where_p;
ds_param_w := 'SEQUENCE='|| TO_CHAR(NR_SEQUENCIA_W)||';' || ds_parametros_sql_p;
CALL Exec_Sql_Dinamico_Bv('',ds_sql_w,ds_param_w);

/*FIM - TRANSFERE CONTEUDO DO CAMPO LONG DA TABELA DE ORIGEM PARA O CAMPO CLOB DA TABELA TEMPORARIO*/

/*INICIO - RECUPERA O VALOR DO CAMPO CLOB PARA A VARIAVEL DA PROCEDURE*/

ds_sql_w	:= ' select ds_texto from w_copia_campo_long where nr_sequencia = :sequence ';

C001 := DBMS_SQL.OPEN_CURSOR;
DBMS_SQL.PARSE(C001, ds_sql_w, dbms_sql.Native);
DBMS_SQL.DEFINE_COLUMN(C001, 1, ds_campo_clob_w);
DBMS_SQL.BIND_VARIABLE(C001, 'SEQUENCE', nr_sequencia_w);
retorno_w := DBMS_SQL.EXECUTE(c001);
retorno_w := DBMS_SQL.FETCH_ROWS(c001);
DBMS_SQL.COLUMN_VALUE(C001, 1, ds_campo_clob_w );
DBMS_SQL.CLOSE_CURSOR(C001);
/*FIM - RECUPERA O VALOR DO CAMPO CLOB PARA A VARIAVEL DA PROCEDURE*/

/*INICIO - QUEBRA O VALOR DO CONTEUDO CLOB EM VARIOS VARCHAR PARA PODER INSERIR NA TABELA DE ORIGEM*/

ds_campo_clob_w := UPPER(ds_campo_clob_w);

--dbms_output.put_line(substr(ds_texto_busca_w,1,255));
--dbms_output.put_line(substr(ds_campo_clob_w,1,255));
if (ie_elimina_acentuacao_w = 'S') and
	((dbms_lob.INSTR(ds_campo_clob_w,ds_texto_busca_w,1,1) > 0) or (dbms_lob.INSTR(ds_campo_clob_w,ds_texto_busca_w2,1,1) > 0)) then
	ie_achou_p := 'S';
elsif (dbms_lob.INSTR(ds_campo_clob_w,ds_texto_busca_w,1,1) > 0 ) then
	ie_achou_p := 'S';
end	if;

/*ds_conteudo_1_w := dbms_lob.SUBSTR(ds_campo_clob_w,32764,1);
ds_conteudo_2_w := dbms_lob.SUBSTR(ds_campo_clob_w,32764,32765);*/
/*FIM QUEBRA O VALOR DO CONTEUDO CLOB EM VARIOS VARCHAR PARA PODER INSERIR NA TABELA DE ORIGEM*/

/*INICIO - DELETA O REGISTRO DA TABELA TEMPORÁRIA*/

ds_sql_w := 'delete from w_copia_campo_long where nr_sequencia = :nr_sequencia';
ds_param_w := 'NR_SEQUENCIA='|| TO_CHAR(nr_sequencia_w);
CALL Exec_Sql_Dinamico_Bv('',ds_sql_w,ds_param_w);
/*FIM - DELETA O REGISTRO DA TABELA TEMPORÁRIA*/

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_se_long_contem ( nm_tabela_p text, nm_coluna_p text, ds_restricao_where_p text, ds_parametros_sql_p text, ds_texto_busca_p text, ie_achou_p INOUT text) FROM PUBLIC;

