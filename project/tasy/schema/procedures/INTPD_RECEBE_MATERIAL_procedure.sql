-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intpd_recebe_material ( nr_sequencia_p bigint, xml_p xml) AS $body$
DECLARE


_ora2pg_r RECORD;
material_w			material%rowtype;
material_estab_w		material_estab%rowtype;
material_marca_w		material_marca%rowtype;
material_tuss_w			material_tuss%rowtype;
material_brasindice_w		material_brasindice%rowtype;
material_brasindice_atual_w	material_brasindice%rowtype;
material_simpro_w		material_simpro%rowtype;
material_simpro_atual_w		material_simpro%rowtype;
loc_estoque_estrut_materiais_w	loc_estoque_estrut_materiais%rowtype;
padrao_estoque_local_w		padrao_estoque_local%rowtype;

ie_conversao_w		intpd_eventos_sistema.ie_conversao%type;
nr_seq_projeto_xml_w	intpd_eventos_sistema.nr_seq_projeto_xml%type;
nr_seq_sistema_w		intpd_eventos_sistema.nr_seq_sistema%type;
ie_sistema_externo_w	varchar(15);
reg_integracao_w		gerar_int_padrao.reg_integracao_conv;
nr_seq_regra_w		conversao_meio_externo.nr_seq_regra%type;
ds_erro_w		varchar(4000);
ie_erro_w		varchar(1) := 'N';
ie_exception_w			varchar(1) := 'N';
i			integer;
ie_atualizou_w		varchar(1) := 'N';
nr_seq_tuss_mat_w			tuss_material.nr_sequencia%type;
nr_seq_tuss_mat_item_w		tuss_material_item.nr_sequencia%type;
qt_registros_w			bigint;
ie_inativado        varchar(1);
ie_ajustar_ins_upd_w	intpd_eventos_sistema.ie_ajustar_ins_upd%type;
ie_ajustar_upd_ins_w	intpd_eventos_sistema.ie_ajustar_upd_ins%type;
qt_itens_estoque_w bigint := 0;

/*'Efetua a consulta transformando o elemento XML num tipo de tabela'*/

c01 CURSOR FOR
SELECT	*
from	xmltable('/STRUCTURE/MATERIAL' passing xml_p columns
	ie_action				varchar(15)	path	'IE_ACTION',
	cd_classe_material			varchar(40)	path	'CD_MATERIAL_CLASS',
	cd_classif_fiscal			varchar(40)	path	'CD_TAX_CLASSIFICATION',
	cd_fabricante			varchar(40)	path	'CD_MANUFACTURER',
	cd_material			varchar(40)	path	'CD_MATERIAL',
	cd_material_estoque		varchar(40)	path	'CD_STOCK_MATERIAL',
	cd_material_generico		varchar(40)	path	'CD_GENERIC_MATERIAL',
	cd_unidade_medida_compra		varchar(40)	path	'CD_PURCHASE_UNIT_MEASURE',
	cd_unidade_medida_consumo	varchar(40)	path	'CD_CONSUMPTION_UNIT_MEASUREMENT',
	cd_unidade_medida_estoque		varchar(40)	path	'CD_STOCK_UNIT_MEASUREMENT',
	cd_unidade_medida_solic		varchar(40)	path	'CD_REQUEST_UNIT_MEASURE',
	ds_material			varchar(255)	path	'DS_MATERIAL',
	ds_reduzida			varchar(255)	path	'DS_SHORT',
	dt_atualizacao			varchar(40)	path	'DT_UPDATE',
	dt_cadastramento			varchar(40)	path	'DT_ENROLMENT',
	dt_validade_certificado_aprov		varchar(40)	path	'DT_EXPIRATION_APPROVAL_CERTIFICATE',
	ie_cobra_paciente			varchar(1)	path	'IE_CHARGES_PATIENT',
	ie_consignado			varchar(1)	path	'IE_CONSIGNED',
	ie_curva_abc			varchar(1)	path	'IE_ABC_CURVE',
	ie_disponivel_mercado		varchar(1)	path	'IE_MARKET_AVAILABILITY',
	ie_inf_ultima_compra		varchar(1)	path	'IE_LAST_PURCHASE_INFORMATION',
	ie_obrig_via_aplicacao		varchar(1)	path	'IE_REQUIRES_APPLICATION_METHOD',
	ie_preco_compra			varchar(1)	path	'IE_PURCHASE_PRICE',
	ie_receita				varchar(1)	path	'IE_NEEDS_PRESCRIPTION',
	ie_situacao			varchar(1)	path	'IE_STATUS',
	ie_tipo_material			varchar(40)	path	'IE_MATERIAL_TYPE',
	ie_via_aplicacao			varchar(40)	path	'IE_APPLICATION_METHOD',
	nm_usuario			varchar(40)	path	'NM_USER',
	nr_certificado_aprovacao		varchar(20)	path	'NR_APPROVAL_CERTIFICATE',
	nr_seq_fabric			varchar(40)	path	'NR_SEQ_MANUFACTURER',
	nr_seq_familia			varchar(40)	path	'NR_SEQ_FAMILY',
	nr_seq_grupo_rec			varchar(40)	path	'NR_SEQ_PRESCRIPTION_GROUP',
	nr_seq_localizacao			varchar(40)	path	'NR_SEQ_LOCATION',
	qt_conv_compra_estoque		double precision	path	'QT_PURCHASE_STOCK_CONV',
	qt_conv_estoque_consumo		double precision	path	'QT_STOCK_CONSUMPTION_CONV',
	qt_dias_validade			integer		path	'QT_VALIDITY_DAYS',
	qt_horas_util_pac			double precision	path	'QT_HOURS_PATIENT_USE',
	qt_max_prescricao			double precision	path	'QT_MAX_PRESCRIPTION',
	qt_minimo_multiplo_solic		double precision	path	'QT_MULTIPLE_MINIMUM_REQUEST',
	qt_prioridade_coml			integer		path	'QT_COMMERCIAL_PRIORITY',
	cd_sistema_ant			varchar(80)		path	'NR_EXTERNAL_DOCUMENT',
	/*'Transforma um subnivel da estrutura XML num xmltype, que sera utilizado posteriormente na consulta, transformando-o num tipo de tabela'*/

	xml_material_estab			xml		path	'MATERIAL_ESTABS',
	xml_material_marca			xml		path	'MATERIAL_BRANDS',
	xml_material_tuss			xml		path	'MATERIAL_TUSSS',
	xml_material_brasindice		xml		path	'MATERIAL_BRASINDICES',
	xml_material_simpro			xml		path	'MATERIAL_SIMPROS',
	xml_loc_estoque_estrut_mat		xml		path	'LOC_ESTOQUE_ESTRUT_MATERIAIS',
	xml_padrao_estoque_local			xml		path	'PADRAO_ESTOQUE_LOCAIS');

c01_w	c01%rowtype;

/*'Efetua a consulta transformando o elemento XML num tipo de tabela'*/

c02 CURSOR FOR
SELECT	*
from	xmltable('/MATERIAL_ESTABS/MATERIAL_ESTAB' passing c01_w.xml_material_estab columns
	ie_action				varchar(15)	path	'IE_ACTION',
	cd_estabelecimento			varchar(40)	path	'CD_ESTABLISHMENT',
	cd_kit_material			varchar(40)	path	'CD_MATERIAL_KIT',
	cd_material_conta			varchar(40)	path	'CD_ACCOUNT_MATERIAL',
	cd_unidade_medida_compra		varchar(40)	path	'CD_PURCHASE_MEASUREMENT_UNIT',
	cd_unidade_medida_consumo	varchar(40)	path	'CD_CONSUMPTION_MEASUREMENT_UNIT',
	cd_unidade_medida_estoque		varchar(40)	path	'CD_STOCK_MEASUREMENT_UNIT',
	dt_atual_consumo			varchar(40)	path	'DT_CONSUMPTION_UPDATE',
	dt_validade_reg_anvisa		varchar(40)	path	'DT_ANVISA_RECORD_VALIDITY',
	dt_atualizacao			varchar(40)	path	'DT_UPDATE',
	ie_baixa_estoq_pac			varchar(1)	path	'IE_PATIENT_STOCK_SETTLEMENT',
	ie_classif_custo			varchar(1)	path	'IE_COST_CLASSIFICATION',
	ie_controla_serie			varchar(1)	path	'IE_CONTROLS_SERIES',
	ie_curva_xyz			varchar(1)	path	'IE_CURVE_XYZ',
	ie_estoque_lote			varchar(1)	path	'IE_BATCH_STOCK',
	ie_material_estoque			varchar(1)	path	'IE_STOCK_MATERIAL',
	ie_padronizado			varchar(1)	path	'IE_STANDARDIZED',
	ie_prescricao			varchar(1)	path	'IE_PRESCRIPTION',
	ie_requisicao			varchar(1)	path	'IE_REQUISITION',
	ie_ressuprimento			varchar(1)	path	'IE_RESUPPLY',
	ie_unid_consumo_prescr		varchar(1)	path	'IE_CONSUMPTION_UNIT_PRESCRIPTION',
	nm_usuario			varchar(40)	path	'NM_USER',
	nr_minimo_cotacao			smallint		path	'NR_MINIMUM_QUOTES',
	nr_registro_anvisa			varchar(60)	path	'NR_ANVISA_REGISTRATION',
	qt_consumo_mensal		double precision	path	'QT_MONTHLY_CONSUMPTION',
	qt_conv_compra_estoque		double precision	path	'QT_PURCHASE_STOCK_CONV',
	qt_conv_estoque_consumo		double precision	path	'QT_STOCK_CONSUMPTION_CONV',
	qt_desvio_padrao_cons		double precision	path	'QT_CONSUPTION_STANDARD_DEVIATION',
	qt_dia_estoque_minimo		smallint		path	'QT_DAY_MINIMUM_STOCK',
	qt_dia_interv_ressup		smallint		path	'QT_DAY_RESUPPLY_INTERVAL',
	qt_dia_ressup_forn			smallint		path	'QT_DAY_SUPPLIER_RESUPPLY',
	qt_estoque_maximo			double precision	path	'QT_MAXIMUM_STOCK',
	qt_estoque_minimo			double precision	path	'QT_MINIMUM_STOCK',
	qt_mes_consumo			bigint	path	'QT_CONSUMPTION_MONTH',
	qt_peso_kg			double precision	path	'QT_WEIGHT_KG',
	qt_ponto_pedido			double precision	path	'QT_REQUEST_POINT');

c02_w	c02%rowtype;

/*'Efetua a consulta transformando o elemento XML num tipo de tabela'*/

c03 CURSOR FOR
SELECT	*
from	xmltable('/MATERIAL_BRANDS/MATERIAL_BRAND' passing c01_w.xml_material_estab columns
	ie_action				varchar(15)	path	'IE_ACTION',
	nr_sequencia			varchar(40)	path	'NR_BRANDS_SEQUENCE',
	ie_situacao			varchar(15)	path	'IE_STATUS',
	cd_cnpj				varchar(40)	path	'ID_LEGAL_ENTITY',
	cd_estabelecimento			varchar(40)	path	'CD_ESTABLISHMENT',
	cd_referencia			varchar(80)	path	'CD_REFERENCE',
	cd_unidade_medida		varchar(40)	path	'CD_UNIT_MEASUREMENT',
	ds_justificativa_padrao		varchar(4000)	path	'DS_STANDARD_JUSTIFICATION',
	ds_observacao			varchar(4000)	path	'DS_NOTE',
	dt_validade_certificado_aprov		varchar(20)	path	'DT_VALIDITY_APPROVAL_CERTIFICATE',
	dt_validade_reg_anvisa		varchar(20)	path	'DT_ANVISA_RECORD_VALIDITY',
	ie_padronizado			varchar(15)	path	'IE_STANDARDIZED',
	nr_certificado_aprovacao		varchar(20)	path	'NR_APPROVAL_CERTIFICATE',
	nr_registro_anvisa			varchar(60)	path	'NR_ANVISA_REGISTRATION',
	qt_conv_compra_est		double precision	path	'QT_PURCHASE_STOCK_CONVERSION',
	qt_prioridade			integer		path	'QT_PRIORITY');

c03_w	c03%rowtype;


/*'Efetua a consulta transformando o elemento XML num tipo de tabela'*/

c04 CURSOR FOR
SELECT	*
from	xmltable('/MATERIAL_TUSSS/MATERIAL_TUSS' passing c01_w.xml_material_tuss columns
	ie_action			varchar(15)	path	'IE_ACTION',
	cd_estabelecimento		varchar(20)	path	'CD_ESTABLISHMENT',
	cd_convenio		varchar(15)	path	'CD_INSURANCE',
	cd_categoria		varchar(40)	path	'CD_CATEGORY',
	ie_tipo_atendimento		varchar(15)	path	'IE_TYPE_ENCOUNTER',
	ie_origem_preco		varchar(40)	path	'IE_ORIGIN_PRICE',
	nr_seq_marca		varchar(20)	path	'NR_SEQ_BRAND',
	cd_cgc_fornecedor		varchar(40)	path	'CD_CGC_SUPPLIER',
	dt_vigencia_inicial		varchar(40)	path	'DT_VALIDITY_START_DATE',
	dt_vigencia_final		varchar(40)	path	'DT_VALIDITY_END_DATE',
	nr_seq_tuss_mat		varchar(20)	path	'NR_SEQ_TUSS_MAT',
	cd_material_tuss		varchar(25)	path	'CD_MATERIAL_TUSS',
	ie_situacao		varchar(20)	path	'IE_SITUATION',
	nr_sequencia		varchar(40)	path	'NR_TUSS_SEQUENCE');

c04_w	c04%rowtype;

/*'Efetua a consulta transformando o elemento XML num tipo de tabela'*/

c05 CURSOR FOR
SELECT	*
from	xmltable('/MATERIAL_BRASINDICES/MATERIAL_BRASINDICE' passing c01_w.xml_material_brasindice columns
	ie_action			varchar(15)	path	'IE_ACTION',
	cd_medicamento		varchar(20)	path	'CD_MEDICINE',
	cd_laboratorio		varchar(20)	path	'CD_LABORATORY',
	cd_apresentacao		varchar(20)	path	'CD_PRESENTATION',
	cd_convenio		varchar(40)	path	'CD_INSURANCE',
	cd_estabelecimento		varchar(20)	path	'CD_ESTABLISHMENT',
	nr_seq_marca		varchar(20)	path	'NR_SEQ_BRAND',
	qt_conversao		double precision	path	'QT_CONVERSION',
	ie_situacao		varchar(10)	path	'IE_SITUATION',
	dt_vigencia		varchar(40)	path	'DT_VALIDITY',
	nr_sequencia		varchar(20)	path	'NR_BRASINDICE_SEQUENCE',
	ie_tipo_convenio		varchar(20)	path	'IE_TYPE_INSURANCE',
	dt_final_vigencia		varchar(40)	path	'DT_END_VALIDITY');

c05_w	c05%rowtype;

/*'Efetua a consulta transformando o elemento XML num tipo de tabela'*/

c06 CURSOR FOR
SELECT	*
from	xmltable('/MATERIAL_SIMPROS/MATERIAL_SIMPRO' passing c01_w.xml_material_simpro columns
	ie_action			varchar(15)	path	'IE_ACTION',
	cd_simpro		varchar(20)	path	'CD_SIMPRO',
	ie_tipo_convenio		varchar(20)	path	'IE_INSURANCE_TYPE',
	cd_convenio		varchar(15)	path	'CD_INSURANCE',
	cd_estabelecimento		varchar(40)	path	'CD_ESTABLISHMENT',
	nr_seq_marca		varchar(20)	path	'NR_SEQ_BRAND',
	qt_conversao		double precision	path	'QT_CONVERSION',
	dt_vigencia		varchar(40)	path	'DT_VALIDITY',
	dt_final_vigencia		varchar(40)	path	'DT_END_VALIDITY',
	nr_sequencia		varchar(40)	path	'NR_SIMPRO_SEQUENCE',
	ie_situacao		varchar(40)	path	'IE_SITUATION');

c06_w	c06%rowtype;

c07 CURSOR FOR
SELECT	*
from	xmltable('/LOC_ESTOQUE_ESTRUT_MATERIAIS/LOC_ESTOQUE_ESTRUT_MATERIAL' passing c01_w.xml_loc_estoque_estrut_mat columns
	ie_action			varchar(15)	path	'IE_ACTION',
	cd_classe_material		varchar(40)	path	'CD_MATERIAL_CLASS',
	cd_grupo_material		varchar(40)	path	'CD_MATERIAL_GROUP',
	cd_local_estoque		varchar(40)	path	'CD_STOCK_LOCATION',
	cd_material		varchar(40)	path	'CD_MATERIAL',
	cd_subgrupo_material		varchar(40)	path	'CD_MATERIAL_SUBGROUP',
	dt_atualizacao		varchar(14)	path	'DT_UPDATE',
	ie_liberar		varchar(1)	path	'IE_RELEASE',
	ie_origem_documento		varchar(3)	path	'IE_DOCUMENT_SOURCE',
	nm_usuario		varchar(15)	path	'NM_USER',
	nr_seq_familia		varchar(40)	path	'NR_SEQ_FAMILY',
	nr_sequencia		varchar(40)	path	'NR_SEQUENCE');

c07_w	c07%rowtype;

c08 CURSOR FOR
SELECT	*
from	xmltable('/PADRAO_ESTOQUE_LOCAIS/PADRAO_ESTOQUE_LOCAL' passing c01_w.xml_padrao_estoque_local columns
	ie_action			varchar(15)	path	'IE_ACTION',
	cd_estabelecimento		varchar(40)	path	'CD_ESTABLISHMENT',
	cd_local_atende		varchar(40)	path	'CD_LOCATION_ATTEND',
	cd_local_estoque		varchar(40)	path	'CD_STOCK_LOCATION',
	cd_material		varchar(40)	path	'CD_MATERIAL',
	ds_localizacao		varchar(80)	path	'CD_LOCALIZATION',
	dt_atualizacao		varchar(14)	path	'DT_UPDATE',
	ie_atualiza_padrao_local		varchar(1)	path	'IE_UPDATE_DEFAULT_LOCATION',
	ie_situacao		varchar(1)	path	'IE_SITUATION',
	nm_usuario		varchar(15)	path	'NM_USER',
	nr_seq_contagem		integer	path	'NR_SEQ_COUNTING',
	nr_seq_estrut_mat		varchar(40)	path	'NR_SEQ_MAT_STRUCTURE',
	qt_consumo		double precision	path	'QT_CONSUME',
	qt_dia_ajuste_maximo		integer	path	'QT_MAX_ADJUSTMENT_DAY',
	qt_dia_ajuste_minimo		integer	path	'QT_MIN_ADJUSTMENT_DAY',
	qt_dia_consumo		integer	path	'QT_DAY_CONSUME',
	qt_estoque_maximo		double precision	path	'QT_MAX_STOCK',
	qt_estoque_minimo		double precision	path	'QT_MIN_STOCK',
	qt_minimo_ajuste		double precision	path	'QT_ADJUSTMENT_MIN');

c08_w	c08%rowtype;


BEGIN
/*'Atualiza o status da fila para Em processamento'*/

update	intpd_fila_transmissao
set	ie_status = 'R'
where	nr_sequencia = nr_sequencia_p;


/*'Realiza o commit para nao permite o status de processamento em casa de rollback por existir consistencia. Existe tratamento de excecao abaixo para colocar o status de erro em caso de falha'*/

commit;

/*'Inicio de controle de falha'*/

begin
/*'Busca os dados da regra do registro da fila que esta em processamento'*/

select	coalesce(b.ie_conversao,'I'),
	nr_seq_sistema,
	nr_seq_projeto_xml,
	nr_seq_regra_conv,
	coalesce(ie_ajustar_ins_upd,'S'),
	coalesce(ie_ajustar_upd_ins,'S')
into STRICT	ie_conversao_w,
	nr_seq_sistema_w,
	nr_seq_projeto_xml_w,
	nr_seq_regra_w,
	ie_ajustar_ins_upd_w,
	ie_ajustar_upd_ins_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia = nr_sequencia_p;

ie_sistema_externo_w	:=	nr_seq_sistema_w;

/*'Alimenta as informacoes iniciais de controle e consistencia de cada atributo do XML'*/

reg_integracao_w.nr_seq_fila_transmissao	:=	nr_sequencia_p;
reg_integracao_w.ie_envio_recebe		:=	'R';
reg_integracao_w.ie_sistema_externo		:=	ie_sistema_externo_w;
reg_integracao_w.ie_conversao		:=	ie_conversao_w;
reg_integracao_w.nr_seq_projeto_xml		:=	nr_seq_projeto_xml_w;
reg_integracao_w.nr_seq_regra_conversao	:=	nr_seq_regra_w;
reg_integracao_w.intpd_log_receb.delete;
reg_integracao_w.qt_reg_log			:=	0;

open c01;
loop
fetch c01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	ie_erro_w := 'N';

	/*'Alimenta as informacoes de controle e consistencia referente ao Elemento a ser processado no momento. E importante manter dentro do cursor e nao fora.'*/

	reg_integracao_w.nm_tabela	:=	'MATERIAL';
	reg_integracao_w.nm_elemento	:=	'MATERIAL';
	reg_integracao_w.nr_seq_visao	:=	26922;

	if (ie_conversao_w = 'I') and (nr_seq_regra_w > 0) then
		material_w.cd_material		:=	bkf_obter_conv_interna(null, 'MATERIAL', 'CD_MATERIAL', c01_w.cd_material, null, nr_seq_regra_w);
	else
		begin
		if (coalesce(material_w.cd_material,0) = 0) and (c01_w.cd_sistema_ant IS NOT NULL AND c01_w.cd_sistema_ant::text <> '') then
			begin

			material_w.cd_sistema_ant	:=	c01_w.cd_sistema_ant;

			select	count(*)
			into STRICT	qt_registros_w
			from	material
			where	cd_sistema_ant = material_w.cd_sistema_ant;

			if (qt_registros_w > 0) then

				select	max(cd_material)
				into STRICT	material_w.cd_material
				from	material
				where	cd_sistema_ant = material_w.cd_sistema_ant;
			end if;
			end;
		else
			material_w.cd_material		:=	c01_w.cd_material;
		end if;
		end;
	end if;

	if (material_w.cd_material IS NOT NULL AND material_w.cd_material::text <> '') then
		begin
		/*'Busca o registro atual do Tasy pela PK'*/

		select	*
		into STRICT	material_w
		from	material
		where	cd_material = material_w.cd_material;
		exception
		when others then
			material_w.cd_material	:=	null;
		end;
	end if;

	if (coalesce(c01_w.ie_action,'INSERT') = 'DELETE') then

		select 	count(*)
		into STRICT	qt_registros_w
		from 	material
		where 	cd_material = material_w.cd_material;

		if (qt_registros_w = 0) then
			/*Codigo do material invalido ou inexistente no Tasy*/

			intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_texto(1015358),'INTPDTASY','0004');
			ie_erro_w := 'S';
		end if;

		if (ie_erro_w = 'N') then

			begin
				delete	FROM material
				where	cd_material = material_w.cd_material;
			exception
				when others then
					update material
					set ie_situacao = 'I'
					where	cd_material = material_w.cd_material;

					ie_inativado := 'S';
			end;

			ie_atualizou_w	:= 'S';
		end if;

	elsif (coalesce(c01_w.ie_action,'INSERT') <> 'DELETE') then
		begin

		if (ie_ajustar_ins_upd_w = 'N') and /*Quando o sistema externo manda um INSERT mas o registro ja existe no Tasy. Neste caso se o campo IE_AJUSTAR_INS_UPD esta para N, retornaremos mensagem de erro para o sistema externo.*/
			(coalesce(c01_w.ie_action,'INSERT') = 'INSERT') and (material_w.cd_material IS NOT NULL AND material_w.cd_material::text <> '') then
			intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_texto(1048482),'INTPDTASY','0014');
			ie_erro_w := 'S';
			/*Ja ha material cadastrado com esses dados, portanto nao E possivel realizar a insercao. Favor enviar uma operacao de "Update" caso queira atualizar este registro no Tasy.*/

		end if;

		if (ie_ajustar_upd_ins_w = 'N') and /*Quando o sistema externo manda um UPDATE mas o registro nao existe no Tasy. Neste caso se o campo IE_AJUSTAR_UPD_INS_W esta para N, retornaremos mensagem de erro para o sistema externo.*/
			(coalesce(c01_w.ie_action,'INSERT') = 'UPDATE') and (coalesce(material_w.cd_material::text, '') = '') then
			intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_texto(1048484),'INTPDTASY','0013');
			ie_erro_w := 'S';
			/*nao ha no sistema material com este codigo, portanto nao E possivel realizar a alteracao. Favor enviar uma operacao de "Insert" caso queira adicionar este registro no Tasy.*/

		end if;

		if (c01_w.cd_unidade_medida_estoque <> material_w.cd_unidade_medida_estoque) or (c01_w.cd_unidade_medida_consumo <> material_w.cd_unidade_medida_consumo) or (c01_w.qt_conv_estoque_consumo <> material_w.qt_conv_estoque_consumo) then
			   if (c01_w.cd_unidade_medida_estoque <> material_w.cd_unidade_medida_estoque) or (c01_w.cd_unidade_medida_consumo <> material_w.cd_unidade_medida_consumo) then
				  begin
					  select  count(*)
					  into STRICT qt_itens_estoque_w
					  from movimento_estoque
					  where cd_material = c01_w.cd_material;							
					  if (qt_itens_estoque_w > 0) then                        
						 intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_texto(266245),'INTPDTASY','0015');
						 --'Existe movimento de estoque. ' || chr(10) ||

						 --' As unidades de consumo e estoque nao podem ser alteradas');                           
					  end if;
				  end;
			  end if;
		end if;

		if (ie_erro_w = 'N') then
			begin

			/*'Consiste cada atributo do XML'*/

			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CLASSE_MATERIAL', c01_w.cd_classe_material, 'S', material_w.cd_classe_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.cd_classe_material := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CLASSIF_FISCAL', c01_w.cd_classif_fiscal, 'S', material_w.cd_classif_fiscal) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.cd_classif_fiscal := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_FABRICANTE', c01_w.cd_fabricante, 'S', material_w.cd_fabricante) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.cd_fabricante := _ora2pg_r.ds_valor_retorno_p;
			if (c01_w.cd_material_estoque IS NOT NULL AND c01_w.cd_material_estoque::text <> '') then
				SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MATERIAL_ESTOQUE', c01_w.cd_material_estoque, 'S', material_w.cd_material_estoque) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.cd_material_estoque := _ora2pg_r.ds_valor_retorno_p;
			end if;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MATERIAL_GENERICO', c01_w.cd_material_generico, 'S', material_w.cd_material_generico) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.cd_material_generico := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_UNIDADE_MEDIDA_COMPRA', c01_w.cd_unidade_medida_compra, 'S', material_w.cd_unidade_medida_compra) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.cd_unidade_medida_compra := _ora2pg_r.ds_valor_retorno_p;
			if (qt_itens_estoque_w = 0) then            	
				SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_UNIDADE_MEDIDA_CONSUMO', c01_w.cd_unidade_medida_consumo, 'S', material_w.cd_unidade_medida_consumo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.cd_unidade_medida_consumo := _ora2pg_r.ds_valor_retorno_p;
				SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_UNIDADE_MEDIDA_ESTOQUE', c01_w.cd_unidade_medida_estoque, 'S', material_w.cd_unidade_medida_estoque) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.cd_unidade_medida_estoque := _ora2pg_r.ds_valor_retorno_p;
			end if;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_UNIDADE_MEDIDA_SOLIC', c01_w.cd_unidade_medida_solic, 'S', material_w.cd_unidade_medida_solic) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.cd_unidade_medida_solic := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_MATERIAL', c01_w.ds_material, 'N', material_w.ds_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ds_material := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_REDUZIDA', c01_w.ds_reduzida, 'N', material_w.ds_reduzida) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ds_reduzida := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', c01_w.dt_atualizacao, 'N', material_w.dt_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.dt_atualizacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_CADASTRAMENTO', c01_w.dt_cadastramento, 'N', material_w.dt_cadastramento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.dt_cadastramento := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_VALIDADE_CERTIFICADO_APROV', c01_w.dt_validade_certificado_aprov, 'N', material_w.dt_validade_certificado_aprov) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.dt_validade_certificado_aprov := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_ABRIGO_LUZ', null, 'N', material_w.ie_abrigo_luz) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_abrigo_luz := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_BAIXA_ESTOQ_PAC', null, 'N', material_w.ie_baixa_estoq_pac) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_baixa_estoq_pac := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_BAIXA_INTEIRA', null, 'N', material_w.ie_baixa_inteira) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_baixa_inteira := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_BOMBA_INFUSAO', null, 'N', material_w.ie_bomba_infusao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_bomba_infusao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_COBRA_PACIENTE', c01_w.ie_cobra_paciente, 'N', material_w.ie_cobra_paciente) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_cobra_paciente := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_CONSIGNADO', c01_w.ie_consignado, 'S', material_w.ie_consignado) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_consignado := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_CURVA_ABC', c01_w.ie_curva_abc, 'N', material_w.ie_curva_abc) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_curva_abc := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_CONTROLE_MEDICO', null, 'N', material_w.ie_controle_medico) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_controle_medico := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_DILUICAO', null, 'N', material_w.ie_diluicao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_diluicao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_DISPONIVEL_MERCADO', c01_w.ie_disponivel_mercado, 'N', material_w.ie_disponivel_mercado) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_disponivel_mercado := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_GRAVAR_OBS_PRESCR', null, 'N', material_w.ie_gravar_obs_prescr) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_gravar_obs_prescr := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_INF_ULTIMA_COMPRA', c01_w.ie_inf_ultima_compra, 'N', material_w.ie_inf_ultima_compra) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_inf_ultima_compra := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_MATERIAL_ESTOQUE', null, 'N', material_w.ie_material_estoque) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_material_estoque := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_MISTURA', null, 'N', material_w.ie_mistura) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_mistura := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_RECEITA', c01_w.ie_receita, 'N', material_w.ie_receita) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_receita := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_SITUACAO', c01_w.ie_situacao, 'N', material_w.ie_situacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_situacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_SOLUCAO', null, 'N', material_w.ie_solucao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_solucao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_TIPO_MATERIAL', c01_w.ie_tipo_material, 'S', material_w.ie_tipo_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_tipo_material := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_UMIDADE_CONTROLADA', null, 'N', material_w.ie_umidade_controlada) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_umidade_controlada := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_OBRIG_VIA_APLICACAO', c01_w.ie_obrig_via_aplicacao, 'N', material_w.ie_obrig_via_aplicacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_obrig_via_aplicacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_PRECO_COMPRA', c01_w.ie_preco_compra, 'N', material_w.ie_preco_compra) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_preco_compra := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_VIA_APLICACAO', c01_w.ie_via_aplicacao, 'N', material_w.ie_via_aplicacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.ie_via_aplicacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c01_w.nm_usuario, 'N', material_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_CERTIFICADO_APROVACAO', c01_w.nr_certificado_aprovacao, 'N', material_w.nr_certificado_aprovacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.nr_certificado_aprovacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_FABRIC', c01_w.nr_seq_fabric, 'S', material_w.nr_seq_fabric) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.nr_seq_fabric := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_FAMILIA', c01_w.nr_seq_familia, 'S', material_w.nr_seq_familia) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.nr_seq_familia := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_GRUPO_REC', c01_w.nr_seq_grupo_rec, 'S', material_w.nr_seq_grupo_rec) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.nr_seq_grupo_rec := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_LOCALIZACAO', c01_w.nr_seq_localizacao, 'S', material_w.nr_seq_localizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.nr_seq_localizacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_CONV_COMPRA_ESTOQUE', c01_w.qt_conv_compra_estoque, 'N', material_w.qt_conv_compra_estoque) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.qt_conv_compra_estoque := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_CONV_ESTOQUE_CONSUMO', c01_w.qt_conv_estoque_consumo, 'N', material_w.qt_conv_estoque_consumo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.qt_conv_estoque_consumo := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_DIAS_VALIDADE', c01_w.qt_dias_validade, 'N', material_w.qt_dias_validade) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.qt_dias_validade := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_HORAS_UTIL_PAC', c01_w.qt_horas_util_pac, 'N', material_w.qt_horas_util_pac) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.qt_horas_util_pac := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_MAX_PRESCRICAO', c01_w.qt_max_prescricao, 'N', material_w.qt_max_prescricao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.qt_max_prescricao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_MINIMO_MULTIPLO_SOLIC', c01_w.qt_minimo_multiplo_solic, 'N', material_w.qt_minimo_multiplo_solic) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.qt_minimo_multiplo_solic := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_PRIORIDADE_COML', c01_w.qt_prioridade_coml, 'N', material_w.qt_prioridade_coml) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_w.qt_prioridade_coml := _ora2pg_r.ds_valor_retorno_p;
			
			/*'Efetua a atualizacao caso nao possua consistencia '*/

			if (reg_integracao_w.qt_reg_log = 0) then
				begin
				if (material_w.cd_material IS NOT NULL AND material_w.cd_material::text <> '') then
					begin
					if (coalesce(material_w.cd_material_estoque::text, '') = '') then
						material_w.cd_material_estoque	:=	material_w.cd_material;
					end if;

					update	material
					set	row = material_w
					where	cd_material = material_w.cd_material;
					end;
				else
					begin
					select	nextval('material_seq')
					into STRICT	material_w.cd_material
					;

					if (coalesce(material_w.cd_material_estoque::text, '') = '') then
						material_w.cd_material_estoque	:=	material_w.cd_material;
					end if;

					insert into material values (material_w.*);

					/*'Registra a conversao que podera ser utilizada em outros pontos de integracao e para somente atualizar (update) num recebimento futuro do mesmo registro.'*/

					if (nr_seq_regra_w > 0) then
						CALL gerar_conv_meio_externo(null, 'MATERIAL', 'CD_MATERIAL', material_w.cd_material, c01_w.cd_sistema_ant, null, nr_seq_regra_w, 'A', material_w.nm_usuario);
					end if;
					end;
				end if;
				end;

				ie_atualizou_w	:= 'S';
			end if;

			open c02;
			loop
			fetch c02 into
				c02_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
				/*'Alimenta as informacoes de controle e consistencia referente ao Elemento a ser processado no momento. E importante manter dentro do cursor e nao fora.'*/

				reg_integracao_w.nm_tabela		:=	'MATERIAL_ESTAB';
				reg_integracao_w.nm_elemento	:=	'MATERIAL_ESTAB';
				reg_integracao_w.nr_seq_visao	:=	26923;
				material_estab_w.cd_material		:=	material_w.cd_material;

				SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_ESTABELECIMENTO', c02_w.cd_estabelecimento, 'S', material_estab_w.cd_estabelecimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.cd_estabelecimento := _ora2pg_r.ds_valor_retorno_p;


				begin
				/*'Busca o registro atual do Tasy pela UK'*/

				select	*
				into STRICT	material_estab_w
				from	material_estab
				where	cd_material = material_estab_w.cd_material
				and	cd_estabelecimento = material_estab_w.cd_estabelecimento;
				exception
				when others then
					material_estab_w.nr_sequencia	:=	null;
				end;

				if (coalesce(c02_w.ie_action,'INSERT') <> 'DELETE') then
					begin
					/*'Consiste cada atributo do XML'*/

					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_KIT_MATERIAL', c02_w.cd_kit_material, 'S', material_estab_w.cd_kit_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.cd_kit_material := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MATERIAL_CONTA', c02_w.cd_material_conta, 'S', material_estab_w.cd_material_conta) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.cd_material_conta := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_UNIDADE_MEDIDA_COMPRA', c02_w.cd_unidade_medida_compra, 'S', material_estab_w.cd_unidade_medida_compra) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.cd_unidade_medida_compra := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_UNIDADE_MEDIDA_CONSUMO', c02_w.cd_unidade_medida_consumo, 'S', material_estab_w.cd_unidade_medida_consumo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.cd_unidade_medida_consumo := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_UNIDADE_MEDIDA_ESTOQUE', c02_w.cd_unidade_medida_estoque, 'S', material_estab_w.cd_unidade_medida_estoque) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.cd_unidade_medida_estoque := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUAL_CONSUMO', c02_w.dt_atual_consumo, 'N', material_estab_w.dt_atual_consumo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.dt_atual_consumo := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_VALIDADE_REG_ANVISA', c02_w.dt_validade_reg_anvisa, 'N', material_estab_w.dt_validade_reg_anvisa) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.dt_validade_reg_anvisa := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', c02_w.dt_atualizacao, 'N', material_estab_w.dt_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.dt_atualizacao := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_BAIXA_ESTOQ_PAC', c02_w.ie_baixa_estoq_pac, 'N', material_estab_w.ie_baixa_estoq_pac) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.ie_baixa_estoq_pac := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_CLASSIF_CUSTO', c02_w.ie_classif_custo, 'N', material_estab_w.ie_classif_custo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.ie_classif_custo := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_CONTROLA_SERIE', c02_w.ie_controla_serie, 'N', material_estab_w.ie_controla_serie) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.ie_controla_serie := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_CURVA_XYZ', c02_w.ie_curva_xyz, 'N', material_estab_w.ie_curva_xyz) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.ie_curva_xyz := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_ESTOQUE_LOTE', c02_w.ie_estoque_lote, 'N', material_estab_w.ie_estoque_lote) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.ie_estoque_lote := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_MATERIAL_ESTOQUE', c02_w.ie_material_estoque, 'N', material_estab_w.ie_material_estoque) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.ie_material_estoque := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_PADRONIZADO', c02_w.ie_padronizado, 'N', material_estab_w.ie_padronizado) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.ie_padronizado := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_PRESCRICAO', c02_w.ie_prescricao, 'N', material_estab_w.ie_prescricao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.ie_prescricao := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_REQUISICAO', c02_w.ie_requisicao, 'N', material_estab_w.ie_requisicao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.ie_requisicao := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_RESSUPRIMENTO', c02_w.ie_ressuprimento, 'N', material_estab_w.ie_ressuprimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.ie_ressuprimento := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_UNID_CONSUMO_PRESCR', c02_w.ie_unid_consumo_prescr, 'N', material_estab_w.ie_unid_consumo_prescr) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.ie_unid_consumo_prescr := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c02_w.nm_usuario, 'N', material_estab_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_MINIMO_COTACAO', c02_w.nr_minimo_cotacao, 'N', material_estab_w.nr_minimo_cotacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.nr_minimo_cotacao := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_REGISTRO_ANVISA', c02_w.nr_registro_anvisa, 'N', material_estab_w.nr_registro_anvisa) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.nr_registro_anvisa := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_CONSUMO_MENSAL', c02_w.qt_consumo_mensal, 'N', material_estab_w.qt_consumo_mensal) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.qt_consumo_mensal := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_CONV_COMPRA_ESTOQUE', c02_w.qt_conv_compra_estoque, 'N', material_estab_w.qt_conv_compra_estoque) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.qt_conv_compra_estoque := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_CONV_ESTOQUE_CONSUMO', c02_w.qt_conv_estoque_consumo, 'N', material_estab_w.qt_conv_estoque_consumo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.qt_conv_estoque_consumo := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_DESVIO_PADRAO_CONS', c02_w.qt_desvio_padrao_cons, 'N', material_estab_w.qt_desvio_padrao_cons) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.qt_desvio_padrao_cons := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_DIA_ESTOQUE_MINIMO', c02_w.qt_dia_estoque_minimo, 'N', material_estab_w.qt_dia_estoque_minimo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.qt_dia_estoque_minimo := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_DIA_INTERV_RESSUP', c02_w.qt_dia_interv_ressup, 'N', material_estab_w.qt_dia_interv_ressup) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.qt_dia_interv_ressup := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_DIA_RESSUP_FORN', c02_w.qt_dia_ressup_forn, 'N', material_estab_w.qt_dia_ressup_forn) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.qt_dia_ressup_forn := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_ESTOQUE_MAXIMO', c02_w.qt_estoque_maximo, 'N', material_estab_w.qt_estoque_maximo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.qt_estoque_maximo := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_ESTOQUE_MINIMO', c02_w.qt_estoque_minimo, 'N', material_estab_w.qt_estoque_minimo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.qt_estoque_minimo := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_MES_CONSUMO', c02_w.qt_mes_consumo, 'N', material_estab_w.qt_mes_consumo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.qt_mes_consumo := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_PESO_KG', c02_w.qt_peso_kg, 'N', material_estab_w.qt_peso_kg) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.qt_peso_kg := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_PONTO_PEDIDO', c02_w.qt_ponto_pedido, 'N', material_estab_w.qt_ponto_pedido) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_estab_w.qt_ponto_pedido := _ora2pg_r.ds_valor_retorno_p;

					/*'Efetua a atualizacao caso nao possua consistencia '*/

					if (reg_integracao_w.qt_reg_log = 0) then
						begin
						update	material_estab
						set	row = material_estab_w
						where	cd_material = material_estab_w.cd_material
						and	cd_estabelecimento = material_estab_w.cd_estabelecimento;

						if (NOT FOUND) then
							begin
							select	nextval('material_estab_seq')
							into STRICT	material_estab_w.nr_sequencia
							;

							/* Inclusao do if wheb_usuario_pck.get_ie_executar_trigger devido ao grande volume de dados  do cliente RedeDor, ao dar dissable e ennable na  trigger , causava  extrema lentidao OS 1945059*/

							CALL wheb_usuario_pck.set_ie_executar_trigger('N');
							insert into material_estab values (material_estab_w.*);							
							CALL wheb_usuario_pck.set_ie_executar_trigger('S');
							end;
						end if;
						end;
					end if;
					end;
				else
					
					CALL wheb_usuario_pck.set_ie_executar_trigger('N');			
					delete	FROM material_estab
					where	cd_material = material_estab_w.cd_material
					and	cd_estabelecimento = material_estab_w.cd_estabelecimento;				
					CALL wheb_usuario_pck.set_ie_executar_trigger('S');
					
				end if;
				end;
			end loop;
			close c02;

			open c03;
			loop
			fetch c03 into
				c03_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				begin
				/*'Alimenta as informacoes de controle e consistencia referente ao Elemento a ser processado no momento. E importante manter dentro do cursor e nao fora.'*/

				reg_integracao_w.nm_tabela		:=	'MATERIAL_MARCA';
				reg_integracao_w.nm_elemento	:=	'MATERIAL_BRAND';
				reg_integracao_w.nr_seq_visao	:=	28429;
				material_marca_w.cd_material		:=	material_w.cd_material;

				SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQUENCIA', c03_w.nr_sequencia, 'S', material_marca_w.nr_sequencia) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_marca_w.nr_sequencia := _ora2pg_r.ds_valor_retorno_p;

				begin
				/*'Busca o registro atual do Tasy pela PK'*/

				select	*
				into STRICT	material_marca_w
				from	material_marca
				where	cd_material = material_marca_w.cd_material
				and	nr_sequencia = material_marca_w.nr_sequencia;
				exception
				when others then
					null;
				end;

				if (coalesce(c03_w.ie_action,'INSERT') <> 'DELETE') then
					begin
					/*'Consiste cada atributo do XML'*/

					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_SITUACAO', c03_w.ie_situacao, 'N', material_marca_w.ie_situacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_marca_w.ie_situacao := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CNPJ', c03_w.cd_cnpj, 'S', material_marca_w.cd_cnpj) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_marca_w.cd_cnpj := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_ESTABELECIMENTO', c03_w.cd_estabelecimento, 'S', material_marca_w.cd_estabelecimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_marca_w.cd_estabelecimento := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_REFERENCIA', c03_w.cd_referencia, 'N', material_marca_w.cd_referencia) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_marca_w.cd_referencia := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_UNIDADE_MEDIDA', c03_w.cd_unidade_medida, 'S', material_marca_w.cd_unidade_medida) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_marca_w.cd_unidade_medida := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_JUSTIFICATIVA_PADRAO', c03_w.ds_justificativa_padrao, 'N', material_marca_w.ds_justificativa_padrao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_marca_w.ds_justificativa_padrao := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_OBSERVACAO', c03_w.ds_observacao, 'N', material_marca_w.ds_observacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_marca_w.ds_observacao := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_VALIDADE_CERTIFICADO_APROV', c03_w.dt_validade_certificado_aprov, 'N', material_marca_w.dt_validade_certificado_aprov) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_marca_w.dt_validade_certificado_aprov := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_VALIDADE_REG_ANVISA', c03_w.dt_validade_reg_anvisa, 'N', material_marca_w.dt_validade_reg_anvisa) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_marca_w.dt_validade_reg_anvisa := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_PADRONIZADO', c03_w.ie_padronizado, 'N', material_marca_w.ie_padronizado) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_marca_w.ie_padronizado := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_CERTIFICADO_APROVACAO', c03_w.nr_certificado_aprovacao, 'N', material_marca_w.nr_certificado_aprovacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_marca_w.nr_certificado_aprovacao := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_REGISTRO_ANVISA', c03_w.nr_registro_anvisa, 'N', material_marca_w.nr_registro_anvisa) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_marca_w.nr_registro_anvisa := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_CONV_COMPRA_EST', c03_w.qt_conv_compra_est, 'N', material_marca_w.qt_conv_compra_est) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_marca_w.qt_conv_compra_est := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_PRIORIDADE', c03_w.qt_prioridade, 'N', material_marca_w.qt_prioridade) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_marca_w.qt_prioridade := _ora2pg_r.ds_valor_retorno_p;

					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', c01_w.nm_usuario, 'N', material_marca_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_marca_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c01_w.dt_atualizacao, 'N', material_marca_w.dt_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_marca_w.dt_atualizacao := _ora2pg_r.ds_valor_retorno_p;

					/*'Efetua a atualizacao caso nao possua consistencia '*/

					if (reg_integracao_w.qt_reg_log = 0) then
						begin
						update	material_marca
						set	row = material_marca_w
						where	cd_material = material_marca_w.cd_material
						and	nr_sequencia = material_marca_w.nr_sequencia;
			
						if (NOT FOUND) then
							insert into material_marca values (material_marca_w.*);
						end if;
						end;
					end if;
					end;
				else
					if ie_inativado = 'S' then
						update material_marca
						set ie_situacao = 'I'
						where	cd_material = material_marca_w.cd_material
						and	nr_sequencia = material_marca_w.nr_sequencia;
					else
						delete	FROM material_marca
						where	cd_material = material_marca_w.cd_material
						and	nr_sequencia = material_marca_w.nr_sequencia;
					end if;
				end if;
				end;
			end loop;
			close c03;

			open c04;
			loop
			fetch c04 into
				c04_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */
				begin
				/*'Alimenta as informacoes de controle e consistencia referente ao Elemento a ser processado no momento. E importante manter dentro do cursor e nao fora.'*/

				reg_integracao_w.nm_tabela		:=	'MATERIAL_TUSS';
				reg_integracao_w.nm_elemento	:=	'MATERIAL_TUSS';
				reg_integracao_w.nr_seq_visao	:=	20833;

				material_tuss_w.cd_material		:=	material_w.cd_material;
				SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQUENCIA', c04_w.nr_sequencia, 'S', material_tuss_w.nr_sequencia) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_tuss_w.nr_sequencia := _ora2pg_r.ds_valor_retorno_p;

				begin
				/*'Busca o registro atual do Tasy pela PK'*/

				select	*
				into STRICT	material_tuss_w
				from	material_tuss
				where	nr_sequencia = (SELECT max(nr_sequencia) from material_tuss where cd_material = material_tuss_w.cd_material);
				
				exception
				when others then
					null;
				end;

				if (coalesce(c04_w.ie_action,'INSERT') <> 'DELETE') then
					begin
					/*'Consiste cada atributo do XML'*/

					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_ESTABELECIMENTO', c04_w.cd_estabelecimento, 'S', material_tuss_w.cd_estabelecimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_tuss_w.cd_estabelecimento := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CONVENIO', c04_w.cd_convenio, 'N', material_tuss_w.cd_convenio) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_tuss_w.cd_convenio := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CATEGORIA', c04_w.cd_categoria, 'N', material_tuss_w.cd_categoria) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_tuss_w.cd_categoria := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_TIPO_ATENDIMENTO', c04_w.ie_tipo_atendimento, 'N', material_tuss_w.ie_tipo_atendimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_tuss_w.ie_tipo_atendimento := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_ORIGEM_PRECO', c04_w.ie_origem_preco, 'N', material_tuss_w.ie_origem_preco) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_tuss_w.ie_origem_preco := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_MARCA', c04_w.nr_seq_marca, 'N', material_tuss_w.nr_seq_marca) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_tuss_w.nr_seq_marca := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CGC_FORNECEDOR', c04_w.cd_cgc_fornecedor, 'N', material_tuss_w.cd_cgc_fornecedor) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_tuss_w.cd_cgc_fornecedor := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_VIGENCIA_INICIAL', c04_w.dt_vigencia_inicial, 'N', material_tuss_w.dt_vigencia_inicial) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_tuss_w.dt_vigencia_inicial := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_VIGENCIA_FINAL', c04_w.dt_vigencia_final, 'N', material_tuss_w.dt_vigencia_final) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_tuss_w.dt_vigencia_final := _ora2pg_r.ds_valor_retorno_p;

					if (coalesce(material_tuss_w.nr_seq_tuss_mat::text, '') = '') then -- OS 1481261
						select 	coalesce(max(a.nr_sequencia),0)
						into STRICT	nr_seq_tuss_mat_w
						from   	tuss_material a
						where  	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and 	exists (SELECT 	1
										from 	tuss_material_item b
										where 	b.nr_seq_carga_tuss = a.nr_sequencia
										and 	b.cd_material_tuss = c04_w.cd_material_tuss);

						select 	max(nr_sequencia)
						into STRICT	nr_seq_tuss_mat_item_w
						from 	tuss_material_item
						where 	nr_seq_carga_tuss = nr_seq_tuss_mat_w
						and 	cd_material_tuss = c04_w.cd_material_tuss;

						material_tuss_w.nr_seq_tuss_mat  		:= nr_seq_tuss_mat_w;
						material_tuss_w.nr_seq_tuss_mat_item	:= nr_seq_tuss_mat_item_w;

					end if;

					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MATERIAL_TUSS', c04_w.cd_material_tuss, 'N', material_tuss_w.cd_material_tuss) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_tuss_w.cd_material_tuss := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_SITUACAO', c04_w.ie_situacao, 'N', material_tuss_w.ie_situacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_tuss_w.ie_situacao := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c01_w.nm_usuario, 'N', material_tuss_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_tuss_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', c01_w.dt_atualizacao, 'N', material_tuss_w.dt_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_tuss_w.dt_atualizacao := _ora2pg_r.ds_valor_retorno_p;
					material_tuss_w.nm_usuario_nrec := material_tuss_w.nm_usuario;
					material_tuss_w.dt_atualizacao_nrec := material_tuss_w.dt_atualizacao;

					/*'Efetua a atualizacao caso nao possua consistencia '*/

					if (reg_integracao_w.qt_reg_log = 0) then
						begin
						
						if ((c04_w.cd_material_tuss)::numeric  = material_tuss_w.cd_material_tuss) and (coalesce(material_tuss_w.nr_sequencia,0) > 0) then
						
							update	material_tuss
							set	row = material_tuss_w
							where	cd_material = material_tuss_w.cd_material
							and	nr_sequencia = material_tuss_w.nr_sequencia;
							
						else
						
							select	nextval('material_tuss_seq')
							into STRICT	material_tuss_w.nr_sequencia
							;

							insert into material_tuss values (material_tuss_w.*);
	
						end if;
	
						end;
					end if;
					end;
				else
					if ie_inativado = 'S' then
						update material_tuss
						set ie_situacao = 'S'
						where	cd_material = material_tuss_w.cd_material
						and	nr_sequencia = material_tuss_w.nr_sequencia;
					else
						delete	FROM material_tuss
						where	cd_material = material_tuss_w.cd_material
						and	nr_sequencia = material_tuss_w.nr_sequencia;
					end if;
				end if;
				end;
			end loop;
			close c04;

			open c05;
			loop
			fetch c05 into
				c05_w;
			EXIT WHEN NOT FOUND; /* apply on c05 */
				begin
				/*'Alimenta as informacoes de controle e consistencia referente ao Elemento a ser processado no momento. E importante manter dentro do cursor e nao fora.'*/

				reg_integracao_w.nm_tabela		:=	'MATERIAL_BRASINDICE';
				reg_integracao_w.nm_elemento	:=	'MATERIAL_BRASINDICE';
				reg_integracao_w.nr_seq_visao	:=	16279;

				material_brasindice_w.cd_material	:=	material_w.cd_material;
				SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQUENCIA', c05_w.nr_sequencia, 'S', material_brasindice_w.nr_sequencia) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_brasindice_w.nr_sequencia := _ora2pg_r.ds_valor_retorno_p;

				begin
				/*'Busca o registro atual do Tasy pela PK'*/

				select  *
				into STRICT    material_brasindice_w
				from    material_brasindice
				where   nr_sequencia = (SELECT max(nr_sequencia) from material_brasindice where cd_material = material_brasindice_w.cd_material);
				
				select	*
				into STRICT    material_brasindice_atual_w
				from    material_brasindice
				where   nr_sequencia = (SELECT max(nr_sequencia) from material_brasindice where cd_material = material_brasindice_w.cd_material);
				
				exception
				when others then
					null;
				end;

				if (coalesce(c05_w.ie_action,'INSERT') <> 'DELETE') then
					begin
					/*'Consiste cada atributo do XML'*/

					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MATERIAL', material_w.cd_material, 'N', material_brasindice_w.cd_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_brasindice_w.cd_material := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_LABORATORIO', c05_w.cd_laboratorio, 'N', material_brasindice_w.cd_laboratorio) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_brasindice_w.cd_laboratorio := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MEDICAMENTO', c05_w.cd_medicamento, 'N', material_brasindice_w.cd_medicamento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_brasindice_w.cd_medicamento := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_APRESENTACAO', c05_w.cd_apresentacao, 'N', material_brasindice_w.cd_apresentacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_brasindice_w.cd_apresentacao := _ora2pg_r.ds_valor_retorno_p;
					/*'IE_PRIORIDADE' busca valor padrao da visao*/

					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_PRIORIDADE', null, 'N', material_brasindice_w.IE_PRIORIDADE) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_brasindice_w.IE_PRIORIDADE := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_SITUACAO', c05_w.ie_situacao, 'N', material_brasindice_w.ie_situacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_brasindice_w.ie_situacao := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_CONVERSAO', c05_w.qt_conversao, 'N', material_brasindice_w.qt_conversao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_brasindice_w.qt_conversao := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CONVENIO', c05_w.cd_convenio, 'N', material_brasindice_w.cd_convenio) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_brasindice_w.cd_convenio := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_ESTABELECIMENTO', c05_w.cd_estabelecimento, 'S', material_brasindice_w.cd_estabelecimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_brasindice_w.cd_estabelecimento := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_MARCA', c05_w.nr_seq_marca, 'N', material_brasindice_w.nr_seq_marca) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_brasindice_w.nr_seq_marca := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_VIGENCIA', c05_w.dt_vigencia, 'N', material_brasindice_w.dt_vigencia) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_brasindice_w.dt_vigencia := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_TIPO_CONVENIO', c05_w.ie_tipo_convenio, 'N', material_brasindice_w.ie_tipo_convenio) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_brasindice_w.ie_tipo_convenio := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_FINAL_VIGENCIA', c05_w.dt_final_vigencia, 'N', material_brasindice_w.dt_final_vigencia) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_brasindice_w.dt_final_vigencia := _ora2pg_r.ds_valor_retorno_p;

					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c01_w.nm_usuario, 'N', material_brasindice_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_brasindice_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', c01_w.dt_atualizacao, 'N', material_brasindice_w.dt_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_brasindice_w.dt_atualizacao := _ora2pg_r.ds_valor_retorno_p;
					material_brasindice_w.nm_usuario_nrec := material_brasindice_w.nm_usuario;
					material_brasindice_w.dt_atualizacao_nrec := material_brasindice_w.dt_atualizacao;

					/*'Efetua a atualizacao caso nao possua consistencia '*/

					if (reg_integracao_w.qt_reg_log = 0) then
						begin
						
						if (c05_w.cd_laboratorio = material_brasindice_atual_w.cd_laboratorio) and (c05_w.cd_medicamento = material_brasindice_atual_w.cd_medicamento) and (c05_w.cd_apresentacao = material_brasindice_atual_w.cd_apresentacao) and (coalesce(material_brasindice_atual_w.nr_sequencia,0) > 0) then
							
							update	material_brasindice
							set	row = material_brasindice_w
							where	cd_material = material_brasindice_w.cd_material
							and	nr_sequencia = material_brasindice_w.nr_sequencia;

						else

							select	nextval('material_brasindice_seq')
							into STRICT	material_brasindice_w.nr_sequencia
							;
							
							material_brasindice_w.qt_conversao := null;

							insert into material_brasindice values (material_brasindice_w.*);
							
						end if;
	
						end;
					end if;
					end;
				else
					if ie_inativado = 'S' then
						update material_brasindice
						set ie_situacao = 'S'
						where	cd_material = material_brasindice_w.cd_material
						and	nr_sequencia = material_brasindice_w.nr_sequencia;
					else
						delete	FROM material_brasindice
						where	cd_material = material_brasindice_w.cd_material
						and	nr_sequencia = material_brasindice_w.nr_sequencia;
					end if;
				end if;
				end;
			end loop;
			close c05;

			open c06;
			loop
			fetch c06 into
				c06_w;
			EXIT WHEN NOT FOUND; /* apply on c06 */
				begin
				/*'Alimenta as informacoes de controle e consistencia referente ao Elemento a ser processado no momento. E importante manter dentro do cursor e nao fora.'*/

				reg_integracao_w.nm_tabela		:=	'MATERIAL_SIMPRO';
				reg_integracao_w.nm_elemento	:=	'MATERIAL_SIMPRO';
				reg_integracao_w.nr_seq_visao	:=	16277;

				material_simpro_w.cd_material		:=	material_w.cd_material;
				SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQUENCIA', c06_w.nr_sequencia, 'S', material_simpro_w.nr_sequencia) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_simpro_w.nr_sequencia := _ora2pg_r.ds_valor_retorno_p;

				begin
				/*'Busca o registro atual do Tasy pela PK'*/

				select  *
				into STRICT    material_simpro_w
				from    material_simpro
				where   nr_sequencia = (SELECT max(nr_sequencia) from material_simpro where cd_material = material_simpro_w.cd_material);
				
				select  *
				into STRICT    material_simpro_atual_w
				from    material_simpro
				where   nr_sequencia = (SELECT max(nr_sequencia) from material_simpro where cd_material = material_simpro_w.cd_material);
				exception
				when others then
					null;
				end;

				if (coalesce(c06_w.ie_action,'INSERT') <> 'DELETE') then
					begin
					/*'Consiste cada atributo do XML'*/

					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MATERIAL', material_w.cd_material, 'N', material_simpro_w.cd_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_simpro_w.cd_material := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_SIMPRO', c06_w.cd_simpro, 'N', material_simpro_w.cd_simpro) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_simpro_w.cd_simpro := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_TIPO_CONVENIO', c06_w.ie_tipo_convenio, 'N', material_simpro_w.ie_tipo_convenio) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_simpro_w.ie_tipo_convenio := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CONVENIO', c06_w.cd_convenio, 'N', material_simpro_w.cd_convenio) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_simpro_w.cd_convenio := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_ESTABELECIMENTO', c06_w.cd_estabelecimento, 'S', material_simpro_w.cd_estabelecimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_simpro_w.cd_estabelecimento := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_MARCA', c06_w.nr_seq_marca, 'N', material_simpro_w.nr_seq_marca) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_simpro_w.nr_seq_marca := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_CONVERSAO', c06_w.qt_conversao, 'N', material_simpro_w.qt_conversao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_simpro_w.qt_conversao := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_VIGENCIA', c06_w.dt_vigencia, 'N', material_simpro_w.dt_vigencia) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_simpro_w.dt_vigencia := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_FINAL_VIGENCIA', c06_w.dt_final_vigencia, 'N', material_simpro_w.dt_final_vigencia) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_simpro_w.dt_final_vigencia := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_SITUACAO', c06_w.ie_situacao, 'N', material_simpro_w.ie_situacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_simpro_w.ie_situacao := _ora2pg_r.ds_valor_retorno_p;

					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c01_w.nm_usuario, 'N', material_simpro_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_simpro_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', c01_w.dt_atualizacao, 'N', material_simpro_w.dt_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; material_simpro_w.dt_atualizacao := _ora2pg_r.ds_valor_retorno_p;
					material_simpro_w.nm_usuario_nrec := material_simpro_w.nm_usuario;
					material_simpro_w.dt_atualizacao_nrec := material_simpro_w.dt_atualizacao;


					/*'Efetua a atualizacao caso nao possua consistencia '*/

					if (reg_integracao_w.qt_reg_log = 0) then
						begin
						
						if ((c06_w.cd_simpro)::numeric  = material_simpro_atual_w.cd_simpro) and (coalesce(material_simpro_w.nr_sequencia,0) > 0) then

							update	material_simpro
							set	row = material_simpro_w
							where	cd_material = material_simpro_w.cd_material
							and	nr_sequencia = material_simpro_w.nr_sequencia;

						else
						
							select	nextval('material_simpro_seq')
							into STRICT	material_simpro_w.nr_sequencia
							;
							
							material_simpro_w.qt_conversao := 1;
							
							insert into material_simpro values (material_simpro_w.*);
							
						end if;
						
						end;
					end if;
					end;
				else
					if ie_inativado = 'S' then
						update material_simpro
						set ie_situacao = 'I'
						where	cd_material = material_simpro_w.cd_material
						and	nr_sequencia = material_simpro_w.nr_sequencia;
					else
						delete	FROM material_simpro
						where	cd_material = material_simpro_w.cd_material
						and	nr_sequencia = material_simpro_w.nr_sequencia;
					end if;
				end if;
				end;
			end loop;
			close c06;

			/* LOC_ESTOQUE_ESTRUT_MATERIAL */

			open c07;
			loop
			fetch c07 into
				c07_w;
			EXIT WHEN NOT FOUND; /* apply on c07 */
				begin
				/*'Alimenta as informacoes de controle e consistencia referente ao Elemento a ser processado no momento. E importante manter dentro do cursor e nao fora.'*/

				reg_integracao_w.nm_tabela		:=	'LOC_ESTOQUE_ESTRUT_MATERIAIS';
				reg_integracao_w.nm_elemento	:=	'LOC_ESTOQUE_ESTRUT_MATERIAL';
				reg_integracao_w.nr_seq_visao	:=	28514;

				loc_estoque_estrut_materiais_w.cd_material		:=	material_w.cd_material;
				-- intpd_processar_atributo(reg_integracao_w, 'NR_SEQUENCIA', c07_w.nr_sequencia, 'S', loc_estoque_estrut_materiais_w.nr_sequencia);
				begin
				/*'Busca o registro atual do Tasy pela PK'*/

				select	*
				into STRICT	loc_estoque_estrut_materiais_w
				from	loc_estoque_estrut_materiais
				where	cd_material = c01_w.cd_material
				and	cd_local_estoque = c07_w.cd_local_estoque
				and coalesce(cd_grupo_material, 0) = coalesce(c07_w.cd_grupo_material, 0)
				and coalesce(cd_subgrupo_material, 0) = coalesce(c07_w.cd_subgrupo_material, 0)
				and coalesce(cd_classe_material, 0) = coalesce(c07_w.cd_classe_material, 0)
				and coalesce(ie_origem_documento, '0') = coalesce(c07_w.ie_origem_documento, '0')
				and coalesce(nr_seq_familia, 0) = coalesce(c07_w.nr_seq_familia, 0);

				exception
				when others then
					null;
				end;

				if (coalesce(c07_w.ie_action,'INSERT') <> 'DELETE') then
					begin
					/*'Consiste cada atributo do XML'*/

					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CLASSE_MATERIAL', c07_w.cd_classe_material, 'S', loc_estoque_estrut_materiais_w.cd_classe_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; loc_estoque_estrut_materiais_w.cd_classe_material := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_GRUPO_MATERIAL', c07_w.cd_grupo_material, 'S', loc_estoque_estrut_materiais_w.cd_grupo_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; loc_estoque_estrut_materiais_w.cd_grupo_material := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_LOCAL_ESTOQUE', c07_w.cd_local_estoque, 'S', loc_estoque_estrut_materiais_w.cd_local_estoque) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; loc_estoque_estrut_materiais_w.cd_local_estoque := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MATERIAL', c07_w.cd_material, 'S', loc_estoque_estrut_materiais_w.cd_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; loc_estoque_estrut_materiais_w.cd_material := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_SUBGRUPO_MATERIAL', c07_w.cd_subgrupo_material, 'S', loc_estoque_estrut_materiais_w.cd_subgrupo_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; loc_estoque_estrut_materiais_w.cd_subgrupo_material := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_LIBERAR', c07_w.ie_liberar, 'N', loc_estoque_estrut_materiais_w.ie_liberar) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; loc_estoque_estrut_materiais_w.ie_liberar := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_ORIGEM_DOCUMENTO', c07_w.ie_origem_documento, 'N', loc_estoque_estrut_materiais_w.ie_origem_documento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; loc_estoque_estrut_materiais_w.ie_origem_documento := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_FAMILIA', c07_w.nr_seq_familia, 'S', loc_estoque_estrut_materiais_w.nr_seq_familia) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; loc_estoque_estrut_materiais_w.nr_seq_familia := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c07_w.nm_usuario, 'N', loc_estoque_estrut_materiais_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; loc_estoque_estrut_materiais_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', c07_w.dt_atualizacao, 'N', loc_estoque_estrut_materiais_w.dt_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; loc_estoque_estrut_materiais_w.dt_atualizacao := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQUENCIA', c07_w.nr_sequencia, 'N', loc_estoque_estrut_materiais_w.nr_sequencia) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; loc_estoque_estrut_materiais_w.nr_sequencia := _ora2pg_r.ds_valor_retorno_p;


					/*'Efetua a atualizacao caso nao possua consistencia '*/

					if (reg_integracao_w.qt_reg_log = 0) then
						begin
						update	loc_estoque_estrut_materiais
						set	row = loc_estoque_estrut_materiais_w
						where	cd_material = loc_estoque_estrut_materiais_w.cd_material
						and	cd_local_estoque = loc_estoque_estrut_materiais_w.cd_local_estoque
						and	coalesce(cd_grupo_material, 0) = coalesce(loc_estoque_estrut_materiais_w.cd_grupo_material,0)
						and	coalesce(cd_subgrupo_material, 0) = coalesce(loc_estoque_estrut_materiais_w.cd_subgrupo_material,0)
						and	coalesce(cd_classe_material, 0) = coalesce(loc_estoque_estrut_materiais_w.cd_classe_material,0)
						and	coalesce(ie_origem_documento, '0') = coalesce(loc_estoque_estrut_materiais_w.ie_origem_documento,'0')
						and	coalesce(nr_seq_familia, 0) = coalesce(loc_estoque_estrut_materiais_w.nr_seq_familia,0);

						if (NOT FOUND) then
							select	coalesce(max(nr_sequencia) + 1, 1)
							into STRICT	loc_estoque_estrut_materiais_w.nr_sequencia
							from	loc_estoque_estrut_materiais;

							insert into loc_estoque_estrut_materiais values (loc_estoque_estrut_materiais_w.*);
						end if;
						end;
					end if;
					end;
				else
					delete	FROM loc_estoque_estrut_materiais
					where	cd_material = loc_estoque_estrut_materiais_w.cd_material
					and	cd_local_estoque = loc_estoque_estrut_materiais_w.cd_local_estoque
					and coalesce(cd_grupo_material, 0) = coalesce(loc_estoque_estrut_materiais_w.cd_grupo_material,0)
					and coalesce(cd_subgrupo_material, 0) = coalesce(loc_estoque_estrut_materiais_w.cd_subgrupo_material,0)
					and coalesce(cd_classe_material, 0) = coalesce(loc_estoque_estrut_materiais_w.cd_classe_material,0)
					and coalesce(ie_origem_documento, '0') = coalesce(loc_estoque_estrut_materiais_w.ie_origem_documento,'0')
					and coalesce(nr_seq_familia, 0) = coalesce(loc_estoque_estrut_materiais_w.nr_seq_familia,0);

				end if;
				end;
			end loop;
			close c07;

			/* PADRAO_ESTOQUE_LOCAL */

			open c08;
			loop
			fetch c08 into
				c08_w;
			EXIT WHEN NOT FOUND; /* apply on c08 */
				begin
				/*'Alimenta as informacoes de controle e consistencia referente ao Elemento a ser processado no momento. E importante manter dentro do cursor e nao fora.'*/

				reg_integracao_w.nm_tabela		:=	'PADRAO_ESTOQUE_LOCAL';
				reg_integracao_w.nm_elemento	:=	'PADRAO_ESTOQUE_LOCAL';
				reg_integracao_w.nr_seq_visao	:=	28298;

				padrao_estoque_local_w.cd_material		:=	material_w.cd_material;
				-- intpd_processar_atributo(reg_integracao_w, 'NR_SEQUENCIA', c06_w.nr_sequencia, 'S', material_simpro_w.nr_sequencia);
				begin
				/*'Busca o registro atual do Tasy pela PK'*/

				select	*
				into STRICT	padrao_estoque_local_w
				from	padrao_estoque_local
				where	cd_material = c01_w.cd_material
				and	cd_local_estoque = c08_w.cd_local_estoque;
				exception
				when others then
					null;
				end;

				if (coalesce(c08_w.ie_action,'INSERT') <> 'DELETE') then
					begin
					/*'Consiste cada atributo do XML'*/

					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_LOCAL_ESTOQUE', c08_w.cd_local_estoque, 'S', padrao_estoque_local_w.cd_local_estoque) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; padrao_estoque_local_w.cd_local_estoque := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MATERIAL', c08_w.cd_material, 'S', padrao_estoque_local_w.cd_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; padrao_estoque_local_w.cd_material := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_ESTOQUE_MAXIMO', c08_w.qt_estoque_maximo, 'N', padrao_estoque_local_w.qt_estoque_maximo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; padrao_estoque_local_w.qt_estoque_maximo := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_ESTOQUE_MINIMO', c08_w.qt_estoque_minimo, 'N', padrao_estoque_local_w.qt_estoque_minimo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; padrao_estoque_local_w.qt_estoque_minimo := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_LOCAL_ATENDE', c08_w.cd_local_atende, 'S', padrao_estoque_local_w.cd_local_atende) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; padrao_estoque_local_w.cd_local_atende := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_ESTABELECIMENTO', c08_w.cd_estabelecimento, 'S', padrao_estoque_local_w.cd_estabelecimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; padrao_estoque_local_w.cd_estabelecimento := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_SITUACAO', c08_w.ie_situacao, 'N', padrao_estoque_local_w.ie_situacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; padrao_estoque_local_w.ie_situacao := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_CONTAGEM', c08_w.nr_seq_contagem, 'N', padrao_estoque_local_w.nr_seq_contagem) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; padrao_estoque_local_w.nr_seq_contagem := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_LOCALIZACAO', c08_w.ds_localizacao, 'N', padrao_estoque_local_w.ds_localizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; padrao_estoque_local_w.ds_localizacao := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_ATUALIZA_PADRAO_LOCAL', c08_w.ie_atualiza_padrao_local, 'N', padrao_estoque_local_w.ie_atualiza_padrao_local) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; padrao_estoque_local_w.ie_atualiza_padrao_local := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_ESTRUT_MAT', c08_w.nr_seq_estrut_mat, 'S', padrao_estoque_local_w.nr_seq_estrut_mat) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; padrao_estoque_local_w.nr_seq_estrut_mat := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_CONSUMO', c08_w.qt_consumo, 'N', padrao_estoque_local_w.qt_consumo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; padrao_estoque_local_w.qt_consumo := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_DIA_AJUSTE_MINIMO', c08_w.qt_dia_ajuste_minimo, 'N', padrao_estoque_local_w.qt_dia_ajuste_minimo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; padrao_estoque_local_w.qt_dia_ajuste_minimo := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_DIA_AJUSTE_MAXIMO', c08_w.qt_dia_ajuste_maximo, 'N', padrao_estoque_local_w.qt_dia_ajuste_maximo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; padrao_estoque_local_w.qt_dia_ajuste_maximo := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_DIA_CONSUMO', c08_w.qt_dia_consumo, 'N', padrao_estoque_local_w.qt_dia_consumo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; padrao_estoque_local_w.qt_dia_consumo := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_MINIMO_AJUSTE', c08_w.qt_minimo_ajuste, 'N', padrao_estoque_local_w.qt_minimo_ajuste) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; padrao_estoque_local_w.qt_minimo_ajuste := _ora2pg_r.ds_valor_retorno_p;

					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c08_w.nm_usuario, 'N', padrao_estoque_local_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; padrao_estoque_local_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', c08_w.dt_atualizacao, 'N', padrao_estoque_local_w.dt_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; padrao_estoque_local_w.dt_atualizacao := _ora2pg_r.ds_valor_retorno_p;


					/*'Efetua a atualizacao caso nao possua consistencia '*/

					if (reg_integracao_w.qt_reg_log = 0) then
						begin
						update	padrao_estoque_local
						set	row = padrao_estoque_local_w
						where	cd_material = padrao_estoque_local_w.cd_material
						and	cd_local_estoque = padrao_estoque_local_w.cd_local_estoque;
						if (NOT FOUND) then
							insert into padrao_estoque_local values (padrao_estoque_local_w.*);
						end if;
						end;
					end if;
					end;
				else
					if ie_inativado = 'S' then
						update padrao_estoque_local
						set ie_situacao = 'I'
						where	cd_material = padrao_estoque_local_w.cd_material
						and	cd_local_estoque = padrao_estoque_local_w.cd_local_estoque;
					else
						delete	FROM padrao_estoque_local
						where	cd_material = padrao_estoque_local_w.cd_material
						and	cd_local_estoque = padrao_estoque_local_w.cd_local_estoque;
					end if;
				end if;
				end;
			end loop;
			close c08;
			end;
		end if;
		end;
	end if;

	if (ie_atualizou_w = 'S')	then
		update	intpd_fila_transmissao
		set	ie_status = 'S',
			cd_default_message = '0000',
			nr_seq_documento = material_w.cd_material
		where	nr_sequencia = nr_sequencia_p;
	end if;
	end;
end loop;
close c01;
exception
when others then
	begin
	CALL wheb_usuario_pck.set_ie_executar_trigger('S');
	/*'Em caso de qualquer falha o sistema captura a mensagem de erro, efetua o rollback, atualiza o status para Erro e registra a falha ocorrida'*/

	ds_erro_w 	:= substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
	rollback;
	update	intpd_fila_transmissao
	set	ie_status = 'E',
		cd_default_message 	= CASE WHEN ds_erro_w = NULL THEN null  ELSE '0005' END ,
		ds_log = ds_erro_w
	where	nr_sequencia = nr_sequencia_p;

	ie_exception_w := 'S';

	end;
end;

if (ie_exception_w = 'N') then

	if	((reg_integracao_w.qt_reg_log > 0) or (coalesce(ie_erro_w,'N') = 'S')) then

		begin
		/*'Em caso de qualquer consistencia o sistema efetua rollback, atualiza o status para Erro e registra todos os logs de consistencia'*/

		rollback;

		update	intpd_fila_transmissao
		set	ie_status = 'E',
			cd_default_message 	= CASE WHEN ds_erro_w = NULL THEN null  ELSE '0005' END ,
			ds_log = ds_erro_w,
			nr_doc_externo	= c01_w.cd_sistema_ant
		where	nr_sequencia = nr_sequencia_p;

		for i in 0..reg_integracao_w.qt_reg_log-1 loop
			intpd_gravar_log_recebimento(nr_sequencia_p,reg_integracao_w.intpd_log_receb[i].ds_log,'INTPDTASY',reg_integracao_w.intpd_log_receb[i].cd_default_message);
		end loop;
		end;
	else
		update	intpd_fila_transmissao
		set	ie_status		= 'S',
			cd_default_message 	= '0000',
			nr_seq_documento	= material_w.cd_material,
			nr_doc_externo		= c01_w.cd_sistema_ant
		where	nr_sequencia		= nr_sequencia_p;
	end if;
end if;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intpd_recebe_material ( nr_sequencia_p bigint, xml_p xml) FROM PUBLIC;

