-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_via_carteira ( nr_seq_carteira_p bigint, nr_seq_motivo_via_p bigint, nm_usuario_p text, cd_funcao_p bigint, ie_tipo_processo_p text, ie_commit_p text) AS $body$
DECLARE


nr_via_solicitacao_w		pls_segurado_carteira.nr_via_solicitacao%type;
ds_trilha1_w			pls_segurado_carteira.ds_trilha1%type;
ds_trilha2_w			pls_segurado_carteira.ds_trilha2%type;
ds_trilha3_w			pls_segurado_carteira.ds_trilha3%type;
ds_trilha_qr_code_w		pls_segurado_carteira.ds_trilha_qr_code%type;

ie_gerar_valor_w		pls_motivo_via_adicional.ie_gerar_valor%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
nr_seq_pagador_w		pls_contrato_pagador.nr_sequencia%type;
nm_beneficiario_w		pessoa_fisica.nm_pessoa_fisica%type;
nr_seq_intercambio_w		pls_intercambio.nr_sequencia%type;
nr_seq_plano_w			pls_plano.nr_sequencia%type;

qt_inadimplencia_w		integer;
vl_via_adicional_w		double precision := 0;
nr_seq_regra_via_w		bigint;
ie_inadimplencia_via_adic_w	varchar(1);
pr_via_adicional_w		double precision;
vl_preco_pre_w			double precision;
dt_sysdate_trunc_dd_w		timestamp;


BEGIN

if (coalesce(nr_seq_motivo_via_p,0) <> 0) then
	select	ie_gerar_valor,
		cd_estabelecimento
	into STRICT	ie_gerar_valor_w,
		cd_estabelecimento_w
	from	pls_motivo_via_adicional
	where	nr_sequencia	= nr_seq_motivo_via_p;
else /* Nao foi informado o motivo para geracao da via do cartao de identificacao. Favor verifique. */
	CALL wheb_mensagem_pck.exibir_mensagem_abort(308948);
end if;

if (coalesce(nr_seq_carteira_p,0) <> 0) then
	select	nr_seq_segurado
	into STRICT	nr_seq_segurado_w
	from	pls_segurado_carteira
	where	nr_sequencia = nr_seq_carteira_p;
else /* Nao foi informado/gerado cartao de identificacao para o beneficiario. Favor verifique. */
	CALL wheb_mensagem_pck.exibir_mensagem_abort(308947);
end if;

select	max(nr_seq_contrato),
	max(nr_seq_pagador),
	max(nr_seq_intercambio),
	max(nr_seq_plano)
into STRICT	nr_seq_contrato_w,
	nr_seq_pagador_w,
	nr_seq_intercambio_w,
	nr_seq_plano_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_w;

if (cd_funcao_p = 1273) then
	select	obter_valor_param_usuario(1273,5,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w)
	into STRICT	ie_inadimplencia_via_adic_w
	;
elsif (cd_funcao_p = 1202) then
	select	max(a.ie_inadimplencia_via_adic)
	into STRICT	ie_inadimplencia_via_adic_w
	from	pls_contrato_pagador	a,
		pls_segurado		b
	where	b.nr_seq_pagador	= a.nr_sequencia
	and	b.nr_sequencia		= nr_seq_segurado_w;
end if;

if (ie_inadimplencia_via_adic_w = 'S') then
	dt_sysdate_trunc_dd_w	:= trunc(clock_timestamp(),'dd');
	
	select	count(1)
	into STRICT	qt_inadimplencia_w
	FROM pls_contrato_pagador e, pls_contrato d, pls_segurado c, pls_mensalidade_segurado b, pls_mensalidade a
LEFT OUTER JOIN titulo_receber f ON (a.nr_sequencia = f.nr_seq_mensalidade)
WHERE a.nr_sequencia = b.nr_seq_mensalidade and c.nr_sequencia = b.nr_seq_segurado and d.nr_sequencia = c.nr_seq_contrato and e.nr_sequencia = a.nr_seq_pagador  and c.nr_seq_contrato = nr_seq_contrato_w and e.nr_sequencia	= nr_seq_pagador_w and f.dt_pagamento_previsto < dt_sysdate_trunc_dd_w and f.ie_situacao = '1';
	
	if (coalesce(qt_inadimplencia_w,0) > 0) then
		select	b.nm_pessoa_fisica
		into STRICT	nm_beneficiario_w
		from	pessoa_fisica	b,
			pls_segurado	a
		where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
		and	a.nr_sequencia = nr_seq_segurado_w;
		
		CALL wheb_mensagem_pck.exibir_mensagem_abort(190110, 'NM_BENEFICIARIO=' || nm_beneficiario_w);
	end if;
end if;

insert into pls_segurado_cart_ant(nr_sequencia, nm_usuario, dt_atualizacao,
	cd_usuario_ant, dt_validade, dt_inicio_vigencia,
	nr_seq_segurado, dt_alteracao, ds_observacao,
	ie_status_carteira, nr_via_anterior, ie_sistema_anterior,
	nr_seq_regra_via, vl_via_adicional, nr_seq_motivo_via,
	nm_usuario_solicitacao, dt_solicitacao, nr_seq_lote_emissao,
	ds_trilha1, ds_trilha2, ds_trilha3,
	nr_seq_mensalidade_seg, ds_trilha_qr_code, dt_desbloqueio,
	nm_usuario_desbloqueio, ie_tipo_desbloqueio)
SELECT	nextval('pls_segurado_cart_ant_seq'), nm_usuario_p, clock_timestamp(),
	cd_usuario_plano, dt_validade_carteira, dt_inicio_vigencia,
	nr_seq_segurado, clock_timestamp(), ds_observacao,
	'V', nr_via_solicitacao, 'N',
	nr_seq_regra_via, vl_via_adicional, nr_seq_motivo_via_p,
	nm_usuario_solicitante, dt_solicitacao, nr_seq_lote_emissao,
	ds_trilha1, ds_trilha2, ds_trilha3,
	nr_seq_mensalidade_seg, ds_trilha_qr_code, dt_desbloqueio, 
	nm_usuario_desbloqueio, ie_tipo_desbloqueio
from	pls_segurado_carteira
where	nr_sequencia	= nr_seq_carteira_p;

select	coalesce(max(nr_via_solicitacao),0) + 1
into STRICT	nr_via_solicitacao_w
from	pls_segurado_carteira
where	nr_sequencia = nr_seq_carteira_p;

if (ie_gerar_valor_w = 'S') then
	SELECT * FROM pls_obter_regra_via_adic(nr_seq_contrato_w, nr_seq_intercambio_w, nr_seq_plano_w, nr_via_solicitacao_w, 'N', nm_usuario_p, cd_estabelecimento_w, clock_timestamp(), nr_seq_regra_via_w, vl_via_adicional_w, pr_via_adicional_w) INTO STRICT nr_seq_regra_via_w, vl_via_adicional_w, pr_via_adicional_w;
end if;

delete	FROM pls_segurado_cart_estagio
where	nr_seq_cartao_seg	= nr_seq_carteira_p
and	ie_estagio_emissao	= '1';

if (coalesce(pr_via_adicional_w,0) <> 0) then
	vl_preco_pre_w	:= pls_obter_valor_segurado(nr_seq_segurado_w,'VCD');
	vl_via_adicional_w	:= (pr_via_adicional_w * vl_preco_pre_w) / 100;
end if;

update	pls_segurado_carteira
set	nr_via_solicitacao 	= nr_via_solicitacao_w,
	ie_situacao 		= 'P',
	nm_usuario 		= nm_usuario_p,
	dt_atualizacao 		= clock_timestamp(),
	vl_via_adicional 	= vl_via_adicional_w,
	nr_seq_regra_via 	= nr_seq_regra_via_w,
	nr_seq_motivo_via 	= nr_seq_motivo_via_p,
	nm_usuario_solicitante	= nm_usuario_p,
	dt_solicitacao		= clock_timestamp(),
	ds_observacao		= 'Via adicional',
	nr_seq_lote_emissao	 = NULL,
	ie_processo		= ie_tipo_processo_p,
	nr_seq_mensalidade_seg	 = NULL,
	nm_usuario_desbloqueio   = NULL,
	dt_desbloqueio		 = NULL,
	ie_tipo_desbloqueio	 = NULL
where	nr_sequencia 		= nr_seq_carteira_p;

CALL pls_alterar_estagios_cartao(nr_seq_carteira_p,clock_timestamp(),1,cd_estabelecimento_w,nm_usuario_p);

if (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
	CALL pls_gerar_renovacao_cart_inter(nr_seq_intercambio_w,nr_seq_segurado_w,'V',nm_usuario_p);
else
	CALL pls_gerar_renovacao_carteira(nr_seq_contrato_w,nr_seq_segurado_w,'V',nm_usuario_p);
end if;

SELECT * FROM pls_obter_trilhas_cartao(nr_seq_segurado_w, ds_trilha1_w, ds_trilha2_w, ds_trilha3_w, ds_trilha_qr_code_w, nm_usuario_p) INTO STRICT ds_trilha1_w, ds_trilha2_w, ds_trilha3_w, ds_trilha_qr_code_w;

CALL pls_desbloquear_auto_cartao(nr_seq_segurado_w, 'V', nm_usuario_p, cd_estabelecimento_w);

if (ie_tipo_processo_p	= 'W') then
	CALL pls_gerar_ci_solic_portal_web(5, null, null, nr_seq_segurado_w, null, null, nm_usuario_p);
end if;

/*As trilhas devem ser alteradas logo depois de alterar a via da carteira*/

update	pls_segurado_carteira
set	ds_trilha1		= ds_trilha1_w,
	ds_trilha2		= ds_trilha2_w,
	ds_trilha3		= ds_trilha3_w,
	ds_trilha_qr_code	= ds_trilha_qr_code_w
where	nr_sequencia 		= nr_seq_carteira_p;

if (ie_commit_p	= 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_via_carteira ( nr_seq_carteira_p bigint, nr_seq_motivo_via_p bigint, nm_usuario_p text, cd_funcao_p bigint, ie_tipo_processo_p text, ie_commit_p text) FROM PUBLIC;

