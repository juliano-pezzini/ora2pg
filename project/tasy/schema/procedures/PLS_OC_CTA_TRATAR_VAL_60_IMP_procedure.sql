-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_60_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) AS $body$
DECLARE


_ora2pg_r RECORD;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Aplicar a validação das datas do protocolo.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
i			integer;
ie_gera_ocorrencia_w	varchar(1);
tb_seq_selecao_w	pls_util_cta_pck.t_number_table;
tb_valido_w		pls_util_cta_pck.t_varchar2_table_1;
tb_observacao_w		pls_util_cta_pck.t_varchar2_table_4000;

--Dados da regra
C01 CURSOR(	nr_seq_oc_cta_comb_p	pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	a.ie_data_protocolo ie_data_protocolo
	from	pls_oc_cta_val_data_prot a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

--Dados das contas
C02 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_imp.nr_id_transacao%type) FOR
	SELECT 	b.dt_recebimento_conv dt_recebimento_prot,
		b.dt_transacao dt_protocolo,
		a.nr_sequencia nr_seq_conta,
		b.dt_mes_competencia_conv dt_mes_competencia
	from 	pls_conta_imp a,
		pls_protocolo_conta_imp b
	where   a.nr_seq_protocolo = b.nr_sequencia
	and	exists (	SELECT 1
				from   pls_oc_cta_selecao_imp x
				where  x.nr_id_transacao = nr_id_transacao_pc
				and    x.ie_valido = 'S'
				and    x.nr_seq_conta = a.nr_sequencia);
BEGIN
-- Deve ter a informação da regra para que seja aplicada a validação.
if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '')  then

	-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
	CALL pls_ocor_imp_pck.atualiza_campo_auxiliar(	'V',
							'N',
							nr_id_transacao_p,
							null);

	for	r_C01_w in C01( nr_seq_combinada_p) loop

		i := 0;
		--limpa as variáveis
		SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;

		if (r_C01_w.ie_data_protocolo IS NOT NULL AND r_C01_w.ie_data_protocolo::text <> '') then

			for	r_C02_w in C02( nr_id_transacao_p) loop

				ie_gera_ocorrencia_w := 'N';
				case( r_C01_w.ie_data_protocolo)
					/*Data do recebimento menor que a data do protocolo(Se for maior ou igual, não gera ocorrência)*/

					when '1' then
						if ( trunc(r_C02_w.dt_recebimento_prot,'dd') < trunc(r_C02_w.dt_protocolo,'dd')) then

							ie_gera_ocorrencia_w := 'S';
						end if;
					when '2' then
						-- Comparação entre mes competencia do protocolo com o mes atual.
						-- Ambas as datas são convertidas para o primeiro dia do mes vigente, somente vão possuir diferença se a competencia não estiver compreendido no mes vigente
						if ( trunc(r_C02_w.dt_mes_competencia, 'MM') < trunc(clock_timestamp(), 'MM')) then
							ie_gera_ocorrencia_w := 'S';
						end if;
					else
						null;
				end case;

				if (ie_gera_ocorrencia_w = 'S') then

					--Passa nr_seq_conta ao invés do nr_seq_selecao, pois será feito validação a nível de conta
					tb_seq_selecao_w(i) 	:= r_C02_w.nr_seq_conta;
					tb_observacao_w(i) 	:= null;
					tb_valido_w(i) 		:= 'S';

					if (i >= pls_util_pck.qt_registro_transacao_w) then

						--Grava as informações na tabela de seleção
						CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
												tb_valido_w,
												tb_observacao_w,
												nr_id_transacao_p,
												'SEQ');

						SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
						i := 0;
					else
						i := i + 1;
					end if;
				end if;
			end loop; --C02
		end if;
	end loop; -- C01
	--Manda para o banco o que restou nas estruturas.
	CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
												tb_valido_w,
												tb_observacao_w,
												nr_id_transacao_p,
												'SEQ');

	-- seta os registros que serão válidos ou inválidos após o processamento
	CALL pls_ocor_imp_pck.atualiza_campo_valido('V',
						'N',
						ie_regra_excecao_p,
						null,
						nr_id_transacao_p,
						null);
end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_60_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) FROM PUBLIC;

