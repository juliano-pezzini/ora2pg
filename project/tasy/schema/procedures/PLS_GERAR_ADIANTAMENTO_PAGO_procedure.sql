-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_adiantamento_pago ( nr_seq_proposta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_adiantamento_p INOUT bigint) AS $body$
DECLARE


cd_moeda_w			pls_parametros.cd_moeda_adiantamento_pago%type;
nr_adiantamento_w		adiantamento_pago.nr_adiantamento%type;
nr_seq_tipo_adiant_pago_w	tipo_adiant_pago.nr_sequencia%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_cgc_w			pessoa_juridica.cd_cgc%type;
nr_seq_canal_venda_w		pls_vendedor.nr_sequencia%type;
vl_mensalidade_w		double precision;
nm_vendedor_w			varchar(255);
qt_adiantatamento_w		bigint;
dt_proposta_w			pls_proposta_adesao.dt_inicio_proposta%type;


BEGIN

select	count(1)
into STRICT	qt_adiantatamento_w
from	adiantamento_pago
where	nr_seq_proposta = nr_seq_proposta_p;

if (qt_adiantatamento_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort( 300645, null ); /* Não foi informado o canal de venda para a proposta de adesão. Favor verifique. */
else
	select	max(nr_seq_vendedor_canal),
		max(dt_inicio_proposta)
	into STRICT	nr_seq_canal_venda_w,
		dt_proposta_w
	from	pls_proposta_adesao
	where	nr_sequencia	= nr_seq_proposta_p;
	
	if (coalesce(nr_seq_canal_venda_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 271737, null ); /* Não foi informado o canal de venda para a proposta de adesão. Favor verifique. */
	else
		select	cd_pessoa_fisica,
			cd_cgc,
			obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc)
		into STRICT	cd_pessoa_fisica_w,
			cd_cgc_w,
			nm_vendedor_w
		from	pls_vendedor
		where	nr_sequencia	= nr_seq_canal_venda_w;
	end if;
	
	select	coalesce(sum(pls_obter_total_proposta_benef(a.nr_sequencia)),0)
	into STRICT	vl_mensalidade_w
	from	pls_proposta_beneficiario a
	where	a.nr_seq_proposta	= nr_seq_proposta_p
	and	coalesce(dt_cancelamento::text, '') = '';
	
	if (vl_mensalidade_w > 0) then
		select	cd_moeda_adiantamento_pago,
			nr_seq_tipo_adiant_pago
		into STRICT	cd_moeda_w,
			nr_seq_tipo_adiant_pago_w
		from	pls_parametros
		where	cd_estabelecimento = cd_estabelecimento_p;
		
		if (coalesce(cd_moeda_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort( 271808, null );
		elsif (coalesce(nr_seq_tipo_adiant_pago_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort( 271807, null );
		end if;
		
		select	nextval('adiantamento_pago_seq')
		into STRICT	nr_adiantamento_w
		;
		
		insert into adiantamento_pago(	nr_adiantamento,
						nr_seq_proposta,
						cd_estabelecimento,
						dt_atualizacao,
						nm_usuario,
						dt_adiantamento,
						vl_adiantamento,
						vl_saldo,
						cd_moeda,
						nr_seq_tipo,
						dt_liberacao,
						nm_usuario_lib,
						cd_pessoa_fisica,
						cd_cgc,
						nr_seq_canal_venda
						)
					values (	nr_adiantamento_w, -- nr_adiantamento
						nr_seq_proposta_p, -- nr_seq_proposta
						cd_estabelecimento_p, -- cd_estabelecimento
						clock_timestamp(), -- dt_atualizacao
						nm_usuario_p, -- nm_usuario
						coalesce(dt_proposta_w,clock_timestamp()), -- dt_adiantamento
						vl_mensalidade_w, -- vl_adiantamento
						vl_mensalidade_w, -- vl_saldo
						cd_moeda_w, -- cd_moeda
						nr_seq_tipo_adiant_pago_w, -- nr_seq_tipo
						clock_timestamp(), -- dt_liberacao
						nm_usuario_p, -- nm_usuario_lib
						cd_pessoa_fisica_w, -- cd_pessoa_fisica
						cd_cgc_w, -- cd_cgc
						nr_seq_canal_venda_w -- nr_seq_canal_venda
						);
		
		nr_seq_adiantamento_p	:= nr_adiantamento_w;
		
		/* Gravar histórico na proposta */

		insert	into	pls_proposta_historico(	nr_sequencia, nr_seq_proposta, dt_atualizacao,
				nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, dt_historico,
				ds_historico, 
				ie_origem_historico, dt_liberacao_historico, nm_usuario_liberacao)
			values (	nextval('pls_proposta_historico_seq'), nr_seq_proposta_p, clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p, clock_timestamp(), 
				wheb_mensagem_pck.get_texto(996484, 'NR_ADIANT=' || nr_adiantamento_w || ';NR_SEQ_VEND=' || nr_seq_canal_venda_w || ';NM_VENDEDOR=' || nm_vendedor_w || ';VL=' || vl_mensalidade_w),
				1, clock_timestamp(), nm_usuario_p);
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_adiantamento_pago ( nr_seq_proposta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_adiantamento_p INOUT bigint) FROM PUBLIC;

