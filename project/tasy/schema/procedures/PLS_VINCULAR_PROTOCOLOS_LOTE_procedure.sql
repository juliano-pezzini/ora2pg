-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_vincular_protocolos_lote ( ds_protocolo_p text, ie_consiste_valor_p text, ie_consiste_quantidade_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ie_separa_protocolos_p text, ds_lotes_p INOUT text, nr_lote_gerado_p INOUT text) AS $body$
DECLARE

 
ds_protocolo_w			varchar(32000);
nr_seq_protocolo_w		varchar(10);
nr_seq_prestador_w		bigint;
nr_seq_lote_w			bigint;
qt_protocolo_w			integer;
qt_conta_w			integer	:= 0;
ds_historico_w			pls_prot_conta_hist.ds_historico%type;
nr_seq_lote_old_w		pls_lote_protocolo_conta.nr_sequencia%type;
i				integer := 0;
tb_nr_seq_lote_w		pls_util_cta_pck.t_number_table;
ie_agrupamento_lote_w		pls_parametros.ie_agrupamento_lote%type;

BEGIN 
 
select	coalesce(max(ie_agrupamento_lote),'N') 
into STRICT	ie_agrupamento_lote_w 
from	pls_parametros 
where	cd_estabelecimento = cd_estabelecimento_p;
 
--ds_protocolo_p pode ser nulo quando o parâmetro 15(Permitir enviar protocolo/lote para análise caso a guia física não tenha sido apresentada) for 'N' 
--e ie_guia_fisica da pls_protocolo_conta for 'N'. Estava ocorrendo problema mais adianta ao prosseguir nessa situação(OS 931470). 
if (ds_protocolo_p IS NOT NULL AND ds_protocolo_p::text <> '') then 
 
	ds_protocolo_w	:= ds_protocolo_p;
 
	while(position(';' in ds_protocolo_w) <> 0) loop 
		begin 
		--obtem-se o primeiro protocolo 
		nr_seq_protocolo_w	:= substr(ds_protocolo_w,1,position(';' in ds_protocolo_w)-1);
		--remove-se esse do conjunto 
		ds_protocolo_w		:= substr(ds_protocolo_w,position(';' in ds_protocolo_w)+1,31999);
		qt_protocolo_w		:= coalesce(qt_protocolo_w,0) +1;
		end;
	end loop;
 
	ds_protocolo_w		:= ds_protocolo_p;
	nr_seq_lote_old_w 	:= 0;
	i 			:= 0;
 
	while(position(';' in ds_protocolo_w) <> 0) loop 
		begin 
		--obtem-se o primeiro protocolo 
		nr_seq_protocolo_w	:= substr(ds_protocolo_w,1,position(';' in ds_protocolo_w)-1);
		--remove-se esse do conjunto 
		ds_protocolo_w		:= substr(ds_protocolo_w,position(';' in ds_protocolo_w)+1,31999);
		 
		if (qt_protocolo_w	> 1) then 
			select	count(1) 
			into STRICT	qt_conta_w 
			from	pls_conta 
			where	nr_seq_protocolo	= nr_seq_protocolo_w;
		end if;
 
		if (qt_conta_w > 0) or (qt_protocolo_w = 1) then 
			 
			ie_agrupamento_lote_w := pls_obter_regra_ger_lote_cta(nr_seq_protocolo_w, cd_estabelecimento_p);
			-- Agrupor protocolos por prestador 
			if (ie_agrupamento_lote_w = 'PP') then 
				select	max(nr_seq_prestador) 
				into STRICT	nr_seq_prestador_w 
				from	pls_protocolo_conta 
				where	nr_sequencia = nr_seq_protocolo_w;
			 
				select	max(a.nr_sequencia) 
				into STRICT	nr_seq_lote_w 
				from	pls_lote_protocolo_conta a, 
					pls_protocolo_conta b 
				where	a.nr_sequencia = b.nr_seq_lote_conta 
				and	a.ie_status = 'U' 
				and	b.nr_seq_prestador = nr_seq_prestador_w 
				and	b.nr_sequencia <> nr_seq_protocolo_w;
				 
				if (coalesce(nr_seq_lote_w::text, '') = '') then 
					insert into pls_lote_protocolo_conta(nr_sequencia, 
						dt_atualizacao, 
						dt_atualizacao_nrec, 
						nm_usuario, 
						nm_usuario_nrec, 
						dt_lote, 
						cd_estabelecimento, 
						ie_status) 
					values (nextval('pls_lote_protocolo_conta_seq'), 
						clock_timestamp(), 
						clock_timestamp(), 
						nm_usuario_p, 
						nm_usuario_p, 
						clock_timestamp(), 
						cd_estabelecimento_p, 
						'U') returning nr_sequencia into nr_seq_lote_w;
				end if;
				 
				update	pls_protocolo_conta 
				set	nr_seq_lote_conta	= nr_seq_lote_w, 
					nm_usuario		= nm_usuario_p, 
					dt_atualizacao		= clock_timestamp() 
				where	nr_sequencia		= nr_seq_protocolo_w;
				 
				if (nr_seq_lote_w <> nr_seq_lote_old_w) then 
					tb_nr_seq_lote_w(i) := nr_seq_lote_w;
					nr_seq_lote_old_w := nr_seq_lote_w;
					i := i + 1;
				end if;
				 
				ds_historico_w := 'Vinculado ao lote ' || nr_seq_lote_w;
 
				insert into pls_prot_conta_hist(nr_sequencia, 
					ds_historico, 
					dt_atualizacao, 
					dt_atualizacao_nrec, 
					dt_historico, 
					ie_tipo_historico, 
					nm_usuario, 
					nm_usuario_historico, 
					nm_usuario_nrec, 
					nr_seq_protocolo) 
				values (nextval('pls_prot_conta_hist_seq'), 
					ds_historico_w, 
					clock_timestamp(), 
					clock_timestamp(), 
					clock_timestamp(), 
					'17', 
					nm_usuario_p, 
					nm_usuario_p, 
					nm_usuario_p, 
					nr_seq_protocolo_w);
			-- Um lote para cada protocolo 
			elsif (ie_agrupamento_lote_w = 'PL') then 
				 
				insert into pls_lote_protocolo_conta(nr_sequencia, 
					dt_atualizacao, 
					dt_atualizacao_nrec, 
					nm_usuario, 
					nm_usuario_nrec, 
					dt_lote, 
					cd_estabelecimento, 
					ie_status) 
				values (nextval('pls_lote_protocolo_conta_seq'), 
					clock_timestamp(), 
					clock_timestamp(), 
					nm_usuario_p, 
					nm_usuario_p, 
					clock_timestamp(), 
					cd_estabelecimento_p, 
					'U') returning nr_sequencia into nr_seq_lote_w;
					 
				update	pls_protocolo_conta 
				set	nr_seq_lote_conta	= nr_seq_lote_w, 
					nm_usuario		= nm_usuario_p, 
					dt_atualizacao		= clock_timestamp() 
				where	nr_sequencia		= nr_seq_protocolo_w;
				 
				ds_historico_w := 'Vinculado ao lote ' || nr_seq_lote_w;
				 
				insert into pls_prot_conta_hist(nr_sequencia, 
					ds_historico, 
					dt_atualizacao, 
					dt_atualizacao_nrec, 
					dt_historico, 
					ie_tipo_historico, 
					nm_usuario, 
					nm_usuario_historico, 
					nm_usuario_nrec, 
					nr_seq_protocolo) 
				values (nextval('pls_prot_conta_hist_seq'), 
					ds_historico_w, 
					clock_timestamp(), 
					clock_timestamp(), 
					clock_timestamp(), 
					'17', 
					nm_usuario_p, 
					nm_usuario_p, 
					nm_usuario_p, 
					nr_seq_protocolo_w);
					 
				tb_nr_seq_lote_w(i) := nr_seq_lote_w;
				i := i + 1;
			-- Todos os protocolos no mesmo lote 
			else 
				if (coalesce(nr_seq_lote_w,0) = 0) then 
					select	nextval('pls_lote_protocolo_conta_seq') 
					into STRICT	nr_seq_lote_w 
					;
 
					insert into pls_lote_protocolo_conta(nr_sequencia, 
						dt_atualizacao, 
						dt_atualizacao_nrec, 
						nm_usuario, 
						nm_usuario_nrec, 
						dt_lote, 
						cd_estabelecimento, 
						ie_status) 
					values (nr_seq_lote_w, 
						clock_timestamp(), 
						clock_timestamp(), 
						nm_usuario_p, 
						nm_usuario_p, 
						clock_timestamp(), 
						cd_estabelecimento_p, 
						'U');
				end if;
 
				update	pls_protocolo_conta 
				set	nr_seq_lote_conta	= nr_seq_lote_w, 
					nm_usuario		= nm_usuario_p, 
					dt_atualizacao		= clock_timestamp() 
				where	nr_sequencia		= nr_seq_protocolo_w;
			end if;
		end if;
 
		end;
	end loop;
 
	if (tb_nr_seq_lote_w.count > 0) then 
		for j in tb_nr_seq_lote_w.first .. tb_nr_seq_lote_w.last loop 
		 
			CALL pls_gerar_analise_lote(tb_nr_seq_lote_w(j),ie_consiste_valor_p, ie_consiste_quantidade_p, cd_estabelecimento_p,nm_usuario_p,null,null,'');
			commit;
			 
			if (qt_protocolo_w = 1) then 
				nr_lote_gerado_p := tb_nr_seq_lote_w(j);
			end if;
			 
		end loop;
	else 
		CALL pls_gerar_analise_lote(nr_seq_lote_w,ie_consiste_valor_p, ie_consiste_quantidade_p, cd_estabelecimento_p,nm_usuario_p,null,null,'');
		 
		nr_lote_gerado_p := nr_seq_lote_w;
		 
		ds_historico_w := 'Vinculado ao lote '||nr_lote_gerado_p;
	 
		insert into pls_prot_conta_hist(nr_sequencia, 
			ds_historico, 
			dt_atualizacao, 
			dt_atualizacao_nrec, 
			dt_historico, 
			ie_tipo_historico, 
			nm_usuario, 
			nm_usuario_historico, 
			nm_usuario_nrec, 
			nr_seq_protocolo) 
		values (nextval('pls_prot_conta_hist_seq'), 
			ds_historico_w, 
			clock_timestamp(), 
			clock_timestamp(), 
			clock_timestamp(), 
			'17', 
			nm_usuario_p, 
			nm_usuario_p, 
			nm_usuario_p, 
			nr_seq_protocolo_w);
	end if;
else 
	--Os protocolos não tiveram análise gerada por não possuirem guia física. 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(354298);
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_vincular_protocolos_lote ( ds_protocolo_p text, ie_consiste_valor_p text, ie_consiste_quantidade_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ie_separa_protocolos_p text, ds_lotes_p INOUT text, nr_lote_gerado_p INOUT text) FROM PUBLIC;

