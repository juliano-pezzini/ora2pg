-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_liberar_cobranca_prev_req ( nr_seq_requisicao_p bigint, nr_seq_req_proc_p bigint, nr_seq_req_mat_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_requisicao_w		pls_requisicao.nr_sequencia%type;
cd_procedimento_w		pls_requisicao_proc.cd_procedimento%type;
nr_seq_material_w		pls_requisicao_mat.nr_seq_material%type;
cd_material_w			varchar(255);
ie_permite_lib_cob_prev_w	varchar(1);


BEGIN 
 
if (coalesce(nr_seq_req_proc_p,0) <> 0) then 
	select	nr_seq_requisicao, 
		cd_procedimento 
	into STRICT	nr_seq_requisicao_w, 
		cd_procedimento_w 
	from	pls_requisicao_proc 
	where	nr_sequencia	= nr_seq_req_proc_p;
 
elsif (coalesce(nr_seq_req_mat_p,0) <> 0) then 
	select	nr_seq_requisicao, 
		substr(pls_obter_seq_codigo_material(nr_seq_material,''),1,255), 
		nr_seq_material 
	into STRICT	nr_seq_requisicao_w, 
		cd_material_w, 
		nr_seq_material_w 
	from	pls_requisicao_mat 
	where	nr_sequencia	= nr_seq_req_mat_p;
end if;
 
ie_permite_lib_cob_prev_w	:= pls_obter_se_proc_mat_cob_prev(null, null, null, null, nr_seq_req_proc_p, nr_seq_req_mat_p);
 
if (ie_permite_lib_cob_prev_w	= 'S') then 
 
	if (coalesce(nr_seq_req_proc_p,0) <> 0) then 
 
		update	pls_requisicao_proc 
		set	ie_cobranca_prevista	= 'S', 
			ie_status		= 'P', 
			dt_atualizacao		= clock_timestamp(), 
			nm_usuario		= nm_usuario_p, 
			qt_procedimento		= qt_solicitado 
		where	nr_sequencia		= nr_seq_req_proc_p;
 
		CALL pls_requisicao_gravar_hist( 	nr_seq_requisicao_w, 'L', 'O usuário ' || nm_usuario_p || ' liberou o procedimento ' || cd_procedimento_w || ' com cobrança prevista', 
						null, nm_usuario_p);
 
	elsif (coalesce(nr_seq_req_mat_p,0) <> 0) then 
 
		update	pls_requisicao_mat 
		set	ie_cobranca_prevista	= 'S', 
			ie_status		= 'P', 
			dt_atualizacao		= clock_timestamp(), 
			nm_usuario		= nm_usuario_p, 
			qt_material		= qt_solicitado 
		where	nr_sequencia		= nr_seq_req_mat_p;
 
		CALL pls_requisicao_gravar_hist( 	nr_seq_requisicao_w, 'L', 'O usuário ' || nm_usuario_p || ' liberou o material ' || coalesce(cd_material_w,nr_seq_material_w) || ' com cobrança prevista', 
						null, nm_usuario_p);
	end if;
	CALL pls_atualiza_estagio_req(nr_seq_requisicao_p, nm_usuario_p);
elsif (ie_permite_lib_cob_prev_w = 'N') then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(348155);
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_liberar_cobranca_prev_req ( nr_seq_requisicao_p bigint, nr_seq_req_proc_p bigint, nr_seq_req_mat_p bigint, nm_usuario_p text) FROM PUBLIC;

