-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE suspender_item_prescricao ( nr_prescricao_p bigint, nr_sequencia_p bigint, cd_motivo_p bigint, ds_motivo_p text, nm_tabela_p text, nm_usuario_p text, ie_gerar_evento_p text default 'S', cd_funcao_p bigint default 924, nr_seq_assinatura_p bigint default null, ie_substituicao_p text default 'N') AS $body$
DECLARE


ie_agrupador_w					smallint;
nr_agrupamento_w				double precision;
nr_sequencia_w					integer;
nr_sequencia_autor_w			bigint;
nr_seq_autor_destino_w			bigint;
nr_seq_item_autor_w				bigint;
qt_solicitada_w					bigint;
cd_procedimento_w				bigint;
nr_seq_alteracao_w				bigint;
nr_prescricao_w					bigint;
ie_origem_proced_w				bigint;
nr_seq_estagio_w				bigint;
cd_material_w					bigint;
nr_seq_gas_w					bigint;
nr_seq_dieta_hor_w				bigint;
ie_cancelar_autor_prescr_w		varchar(1) := 'N';
cd_estabelecimento_w			smallint;
cd_item_w						varchar(255);
nr_atendimento_w				bigint;
nr_prescr_orig_fut_w			bigint;
ie_ctrl_glic_w					varchar(15);
nr_seq_solic_sangue_w			bigint;
nr_seq_derivado_w				bigint;
ie_se_necessario_w				varchar(1);
cd_intervalo_w					varchar(7);
qt_dose_w						double precision;
ie_inconsistencia_w				varchar(10);
ds_inconsistentes_w				varchar(10);
cd_funcao_w						bigint;
dt_primeiro_horario_w			timestamp;
ie_acm_w						varchar(2);
cd_refeicao_w					varchar(20);
nr_horas_validade_w				integer;
cd_dieta_w						integer;
ie_ds_w							varchar(1);
ie_susp_futuro_w				varchar(1);
ie_alteracao_w					smallint:= 13;
ie_alteracao_gas_w				varchar(15):= 'S';
ie_alteracao_sol_w				smallint:= 10;
cd_motivo_susp_w				bigint;
ie_cancelar_laudo_suspensao_w	varchar(10);
ie_modificado_w					varchar(1);
ie_tipo_item_w					varchar(20);
nr_seq_ordem_w					bigint;
ds_observacao_w					varchar(255) := '';
ie_susp_ordem_medic_w			varchar(1);
ie_desfazer_conduta_w			varchar(1);
ds_erro_w						varchar(1);
ie_sol_dialise_w				varchar(1);
ds_mensagem_w					varchar(255);
nr_prescricao_anterior_w		bigint;
nr_sequencia_anterior_w			bigint;
cd_funcao_origem_w				bigint;
ie_paciente_isolado_w			varchar(1) := 'N';
ie_procedimento_isolado_w		varchar(1) := 'N';
nr_seq_precaucao_w				bigint;
ie_suspende_isolamento_w		varchar(1)  := 'N';
ie_limpar_data_integracao_w		varchar(1)	:=	'N';
cd_pessoa_fisica_w				varchar(10);
qt_laudo_w						bigint;
ie_bloquear_susp_com_laudo_w	varchar(1);
cd_evolucao_w					bigint;
nr_seq_atendimento_w			paciente_atendimento.nr_seq_atendimento%type;
ie_gera_pendencia_w				varchar(1) := 'N';
ie_tipo_solucao_w				smallint;
ie_npt_adulta_w					varchar(1);
nr_seq_item_cpoe_w				numeric(30);
nr_seq_solic_sangue_cpoe_w		prescr_procedimento.nr_seq_solic_sangue%type;
nr_seq_dialise_cpoe_w			numeric(30);
ie_hemodialise_w				prescr_solucao.ie_hemodialise%type;
nr_seq_cpoe_vinculo_w			cpoe_dieta.NR_SEQ_CPOE_VINCULO%type;
ie_tipo_proced_w				prescr_procedimento.ie_tipo_proced%type;
nr_seq_npt_cpoe_w				nut_pac.nr_seq_npt_cpoe%type;
nr_agrup_proc_w					prescr_procedimento.nr_agrupamento%type;
ie_lado_proc_w					prescr_procedimento.ie_lado%type;
nr_seq_proc_interno_w			prescr_procedimento.nr_seq_proc_interno%type;
cont_w							smallint;
nr_seq_interno_ww				prescr_material.nr_seq_interno%type;
reg_integracao_w				gerar_int_padrao.reg_integracao;
cd_material_ww					prescr_material.cd_material%type;
nr_seq_exame_w					prescr_procedimento.nr_seq_exame%type;
cd_procedimento_ww				prescr_procedimento.cd_procedimento%type;
nr_seq_substituto_w				prescr_material.nr_seq_substituto%type;
nr_seq_item_w					prescr_material.nr_seq_substituto%type;
ds_msg_w						varchar(255);
nr_seq_interno_w				prescr_procedimento.nr_seq_interno%type;
ie_gera_sem_certificado_w		varchar(1);
ie_agrupada_w					pre_venda.ie_agrupada%type;
qt_registros_w					bigint;
nr_seq_lote_w					ap_lote.nr_sequencia%type;
nr_seq_lote_ant_w				ap_lote.nr_sequencia%type := 0;
reg_integracao_p				gerar_int_padrao.reg_integracao;
cd_local_estoque_w				local_estoque.cd_local_estoque%type;
cd_setor_atendimento_w			setor_atendimento.cd_setor_atendimento%type;
dt_inicio_prescr_w				prescr_medica.dt_inicio_prescr%type;
dt_validade_prescr_w			prescr_medica.dt_validade_prescr%type;														

c00 CURSOR FOR
SELECT	nr_prescricao,
		nr_atendimento,
		dt_inicio_prescr,
		dt_validade_prescr				   
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p

union

SELECT	nr_prescricao,
		nr_atendimento,
		dt_inicio_prescr,
		dt_validade_prescr				   
from	prescr_medica
where	nr_prescricao		> nr_prescricao_p
and		(nr_prescr_orig_fut IS NOT NULL AND nr_prescr_orig_fut::text <> '')
and		coalesce(ie_susp_futuro_w,'N')	= 'S'
and		nr_prescr_orig_fut	= nr_prescr_orig_fut_w
order by 1;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
		coalesce(a.cd_refeicao,to_char(b.cd_dieta)),
		b.cd_dieta,
		b.cd_intervalo
from	prescr_dieta b,
		prescr_dieta_hor a
where	a.nr_prescricao = b.nr_prescricao
and		a.nr_seq_dieta = b.nr_sequencia
and		coalesce(a.dt_suspensao::text, '') = ''
and		a.nr_prescricao	= nr_prescricao_w
and		a.nr_seq_dieta	= nr_sequencia_p
and		Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S';

C02 CURSOR FOR
SELECT	nr_sequencia,
		cd_material
from	prescr_material
where	nr_prescricao	= nr_prescricao_w
and		ie_agrupador	= 1
and		nr_agrupamento	= nr_agrupamento_w
and		nr_sequencia 	<> nr_sequencia_p;

C03 CURSOR FOR
SELECT	a.nr_sequencia,
		c.ie_suspensao
from	ordem_medica c,
		prescr_medica_ordem b,
		prescr_ordem_hor a
where	a.nr_seq_ordem	 = b.nr_sequencia
and		b.nr_seq_ordem   = c.nr_sequencia
and 	b.nr_prescricao	 = nr_prescricao_p
and 	b.nr_seq_solucao = nr_sequencia_p;

C04 CURSOR FOR
	SELECT	nr_sequencia
	from	prescr_material
	where	nr_prescricao	= nr_prescricao_w
	and		nr_sequencia_solucao = nr_sequencia_p
	and 	coalesce(ie_kit_gerado,'N') = 'S';
	
C05 CURSOR FOR
SELECT	nr_seq_interno,
	cd_material
from 	prescr_material
where 	nr_prescricao = nr_prescricao_w
and		ie_agrupador = 1
and		(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '');

C06 CURSOR FOR
SELECT	nr_seq_interno,
		cd_procedimento,
		nr_seq_exame
from 	prescr_procedimento
where 	nr_prescricao = nr_prescricao_w
and		(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '');

C07 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_local_estoque,
		a.cd_setor_atendimento
	from	ap_lote a,
		prescr_mat_hor b
	where	a.nr_prescricao = b.nr_prescricao
	and	a.nr_prescricao = nr_prescricao_p
	and	b.nr_seq_material = nr_sequencia_p
	and	coalesce(b.dt_suspensao::text, '') = ''
	and	a.ie_status_lote = 'G'
	and	Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S'
	order by 1;


BEGIN
ie_desfazer_conduta_w := coalesce(obter_valor_param_usuario(924, 867, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');

ie_gera_sem_certificado_w	:= 'N';

if (wheb_assist_pck.get_gerar_sem_certificado = 'S') then
	ie_gera_sem_certificado_w := adep_obter_se_assin_perfil(50573, obter_perfil_ativo); --ADEP - Alteracao do item (suspensao/reversao/aprazamento)
end if;

if ((wheb_assist_pck.get_cd_certificado IS NOT NULL AND wheb_assist_pck.get_cd_certificado::text <> '') or (ie_gera_sem_certificado_w = 'S')) then
	 ie_gera_pendencia_w := 'S';
end if;

select	coalesce(max(ie_limpar_data_integracao),'N')
into STRICT	ie_limpar_data_integracao_w
from	parametro_integracao_pacs
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

select	max(nr_prescr_orig_fut),
		coalesce(max(cd_funcao_origem),924),
		max(cd_pessoa_fisica)
into STRICT	nr_prescr_orig_fut_w,
		cd_funcao_origem_w,
		cd_pessoa_fisica_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

cd_funcao_w	:= cd_funcao_p;

if (cd_funcao_w = 7010) then
	ie_alteracao_w := 28;
	ie_alteracao_sol_w := 24;
	ie_alteracao_gas_w := 'SS';
	ds_observacao_w	:= wheb_mensagem_pck.get_texto(307010, null); -- Suspensao do item por substituicao em intervencao farmaceutica.
end if;	

cd_motivo_susp_w := cd_motivo_p;

if (cd_motivo_susp_w = 0) then
	cd_motivo_susp_w := null;
end if;

select	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

ie_ds_w := obter_param_usuario(1113, 148, Obter_perfil_Ativo, nm_usuario_p, cd_estabelecimento_w, ie_ds_w);
ie_susp_futuro_w := obter_param_usuario(924, 676, Obter_perfil_Ativo, nm_usuario_p, cd_estabelecimento_w, ie_susp_futuro_w);
ie_suspende_isolamento_w := obter_param_usuario(924, 1093, Obter_perfil_Ativo, nm_usuario_p, cd_estabelecimento_w, ie_suspende_isolamento_w);
ie_bloquear_susp_com_laudo_w := obter_param_usuario(916, 851, Obter_perfil_Ativo, nm_usuario_p, cd_estabelecimento_w, ie_bloquear_susp_com_laudo_w);

if (ie_bloquear_susp_com_laudo_w = 'I') then
	select 	count(*)
	into STRICT 	qt_laudo_w
	from 	laudo_paciente a
	where	coalesce(a.dt_cancelamento::text, '') = ''
	and	a.nr_prescricao = nr_prescricao_p
	and	a.nr_seq_prescricao = nr_sequencia_p;
	if (qt_laudo_w > 0) then
		begin
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(240227);
		end;
	end if;
else
	select 	count(*)
	into STRICT 	qt_laudo_w 
	from 	laudo_paciente a
	where	coalesce(a.dt_cancelamento::text, '') = '' 
	and		a.nr_prescricao = nr_prescricao_p LIMIT 1;

	if	(qt_laudo_w > 0 and ((coalesce(ie_bloquear_susp_com_laudo_w,'N') in ('A','P')) or (ie_bloquear_susp_com_laudo_w = 'E' AND obter_funcao_ativa = 916))) then
		begin
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(240227);
		end;
	end if;
end if;

select 	count(*)
into STRICT 	qt_laudo_w
from 	laudo_paciente a
where	coalesce(a.dt_cancelamento::text, '') = '' 
and		a.nr_prescricao = nr_prescricao_p LIMIT 1;

if (qt_laudo_w > 0) then
	if	((coalesce(ie_bloquear_susp_com_laudo_w,'N') in ('A','P')) or (ie_bloquear_susp_com_laudo_w = 'E' AND obter_funcao_ativa = 916)) then
		begin
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(240227);
		end;
	end if;
end if;

if (consiste_hora_suspensao(nr_prescricao_p,nm_usuario_p,null,nr_sequencia_p,'I') = 'S') then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(186765);
end if;

open C07;
loop
fetch C07 into	
	nr_seq_lote_w,
	cd_local_estoque_w,
	cd_setor_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on C07 */
	begin
	if (nr_seq_lote_w <> nr_seq_lote_ant_w) then
		reg_integracao_p.cd_estab_documento	:= wheb_usuario_pck.get_cd_estabelecimento;
		reg_integracao_p.cd_local_estoque	:= cd_local_estoque_w;
		reg_integracao_p.nr_seq_agrupador	:= nr_seq_lote_w;
		reg_integracao_p.cd_setor_atendimento	:= cd_setor_atendimento_w;
		reg_integracao_p := gerar_int_padrao.gravar_integracao('275', nr_seq_lote_w, nm_usuario_p, reg_integracao_p);
	end if;	
	nr_seq_lote_ant_w := nr_seq_lote_w;
	end;
end loop;
close C07;
	
open C00;
loop
fetch C00 into	
	nr_prescricao_w,
	nr_atendimento_w,
	dt_inicio_prescr_w,
	dt_validade_prescr_w;					
EXIT WHEN NOT FOUND; /* apply on C00 */
	/* Rafael em 06/07/2007 OS61944 - Gerar evento ADEP */
	
	select	coalesce(max(ie_cancelar_autor_prescr),'N')
	into STRICT	ie_cancelar_autor_prescr_w
	from	parametro_faturamento
	where	cd_estabelecimento	= cd_estabelecimento_w;

	select	max(ie_cancelar_laudo_suspensao)
	into STRICT	ie_cancelar_laudo_suspensao_w
	from	parametro_medico
	where	cd_estabelecimento	= cd_estabelecimento_w;

	if (upper(nm_tabela_p) = 'PRESCR_DIETA') then

        select	max(a.nr_prescricao_original),
				max(a.nr_seq_anterior)
		into STRICT	nr_prescricao_anterior_w,
				nr_sequencia_anterior_w
		from	prescr_dieta a
		where	a.nr_prescricao	= nr_prescricao_w
		and		a.nr_sequencia	= nr_sequencia_p;

		update	prescr_dieta
		set		ie_suspenso	= 'S',
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp(),
				dt_suspensao	= clock_timestamp(),
				nm_usuario_susp	= nm_usuario_p,
				ds_motivo_susp  = ds_motivo_p,    
				nr_seq_motivo_susp = CASE WHEN cd_motivo_p=0 THEN  null  ELSE cd_motivo_p END 
		where	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia	= nr_sequencia_p;
		
		-- Check if there is CPOE record to suspend
		select	max(nr_seq_dieta_cpoe)
		into STRICT	nr_seq_item_cpoe_w
		from	prescr_dieta
		where	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia	= nr_sequencia_p;
		
		if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
			update	cpoe_dieta
			set		dt_suspensao = coalesce(dt_suspensao,clock_timestamp()),
					dt_lib_suspensao = clock_timestamp(),
					nm_usuario_susp = nm_usuario_p
			where	nr_sequencia = nr_seq_item_cpoe_w;
		end if;

		update	prescr_material
		set		ie_suspenso	= 'S',
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp(),
				dt_suspensao	= clock_timestamp(),
				nm_usuario_susp	= nm_usuario_p,
				ds_motivo_susp  = ds_motivo_p,
				nr_seq_motivo_susp = CASE WHEN cd_motivo_p=0 THEN  null  ELSE cd_motivo_p END 
		where	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia_dieta = nr_sequencia_p;
		
		select	max(nr_horas_validade)
		into STRICT	nr_horas_validade_w
		from	prescr_medica
		where	nr_prescricao	= nr_prescricao_w;
		
		open c01;
		loop
		fetch c01 into
			nr_seq_dieta_hor_w,
			cd_refeicao_w,
			cd_dieta_w,
			cd_intervalo_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			if (ie_ds_w = 'S') then
				begin
				SELECT * FROM gerar_alteracao_horario_prescr(cd_estabelecimento_w, nr_atendimento_w, 'D', cd_refeicao_w, cd_intervalo_w, null, nr_horas_validade_w, null, nr_seq_dieta_hor_w, null, nr_prescricao_w, nr_prescricao_w, null, 'N', 5, null, null, null, null, null, ds_observacao_w, nm_usuario_p, 'N', null, null, null, 'N', null, 'N', null, 'N', obter_perfil_ativo, null, 'N', null, null, null, null, null, 'N', null, null, null, null, '', '', cd_evolucao_w, null, null, ds_msg_w) INTO STRICT cd_evolucao_w, ds_msg_w;
				end;
			else
				begin
				SELECT * FROM gerar_alteracao_horario_prescr(cd_estabelecimento_w, nr_atendimento_w, 'DS', cd_dieta_w, cd_intervalo_w, null, nr_horas_validade_w, null, nr_seq_dieta_hor_w, null, nr_prescricao_w, nr_prescricao_w, null, 'N', 5, null, null, null, null, null, ds_observacao_w, nm_usuario_p, 'N', null, null, null, 'N', null, 'N', null, 'N', obter_perfil_ativo, null, 'N', null, null, null, null, null, 'N', null, null, null, null, '', '', cd_evolucao_w, null, null, ds_msg_w) INTO STRICT cd_evolucao_w, ds_msg_w;
				end;
			end if;
		
		end loop;
		close c01;
		if (coalesce(nr_seq_assinatura_p,0) = 0) and (ie_gera_pendencia_w = 'S') then
			CALL Gerar_registro_pendente_PEP('REP',nr_prescricao_w, cd_pessoa_fisica_w, nr_atendimento_w,nm_usuario_p, 'A',null,null,null,null,nr_sequencia_p,null,null,null,null,null,null,null,null,cd_funcao_origem_w);
		end if;		

        if (cd_funcao_origem_w		= 950) and (nr_prescricao_anterior_w IS NOT NULL AND nr_prescricao_anterior_w::text <> '') and (nr_sequencia_anterior_w IS NOT NULL AND nr_sequencia_anterior_w::text <> '') then
				CALL plt_ajustar_extensao(nr_prescricao_p => nr_prescricao_anterior_w,
									 nr_sequencia_p => nr_sequencia_anterior_w,
									 nm_tabela_p => nm_tabela_p,
									 nm_usuario_p => nm_usuario_p);
		end if;

	elsif (upper(nm_tabela_p) = 'REP_JEJUM') then
		update	rep_jejum
		set		ie_suspenso	= 'S',
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp()
		where	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia	= nr_sequencia_p;
		
		-- Check if there is CPOE record to suspend
		select	max(nr_seq_dieta_cpoe)
		into STRICT	nr_seq_item_cpoe_w
		from	rep_jejum
		where	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia	= nr_sequencia_p;
		
		if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
			update	cpoe_dieta
			set		dt_suspensao = coalesce(dt_suspensao,clock_timestamp()),
					dt_lib_suspensao = clock_timestamp(),
					nm_usuario_susp = nm_usuario_p
			where	nr_sequencia = nr_seq_item_cpoe_w;
		end if;
		
		select	to_char(coalesce(c.dt_inicio, dt_inicio_prescr_w), 'dd/mm/yyyy hh24:mi:ss') || '-' ||
					to_char(CASE WHEN to_char(coalesce(c.dt_fim, dt_validade_prescr_w), 'mi')='00' THEN  coalesce(c.dt_fim, dt_validade_prescr_w) - 1/86400  ELSE coalesce(c.dt_fim, dt_validade_prescr_w) END , 'dd/mm/yyyy hh24:mi:ss')
		into STRICT	cd_item_w
		from	rep_jejum c
		where	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia	= nr_sequencia_p;
		
		SELECT	nextval('prescr_mat_alteracao_seq')
		INTO STRICT	nr_seq_alteracao_w
		;
		
		INSERT	INTO	prescr_mat_alteracao(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_prescricao,
			nr_seq_prescricao,
			nr_seq_horario,
			dt_alteracao,
			cd_pessoa_fisica,
			ie_alteracao,
			ds_justificativa,
			ie_tipo_item,
			dt_horario,
			nr_atendimento,
			cd_item,
			qt_dose_adm,
			cd_um_dose_adm,
			qt_dose_original,
			nr_agrupamento,
			ie_acm_sn,
			cd_medico_solic,
			ds_observacao,
			nr_seq_motivo_susp,
			ie_mostra_adep,
			nr_seq_assinatura,
			nr_seq_lote
			)
		VALUES (
			nr_seq_alteracao_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_prescricao_w,
			null,
			null,
			clock_timestamp(),
			obter_dados_usuario_opcao(nm_usuario_p,'C'),
			13,
			ds_motivo_p,
			'J',
			clock_timestamp(),
			nr_atendimento_w,
			cd_item_w,
			null,
			null,
			null,
			null,
			'N',
			null,
			null,
			cd_motivo_susp_w,
			'S',
			null,
			null
			);
		
	elsif (upper(nm_tabela_p) = 'NUT_PAC') then
		
		select	coalesce(max(nr_seq_npt_cpoe),0)
		into STRICT    nr_seq_npt_cpoe_w
		from 	nut_pac
		where	nr_sequencia  = nr_sequencia_p
		and 	nr_prescricao = nr_prescricao_p;		

		if (nr_seq_npt_cpoe_w > 0 ) then
			update	cpoe_dieta
			set		dt_suspensao 	 = coalesce(dt_suspensao,clock_timestamp()),
					dt_lib_suspensao = clock_timestamp(),
					nm_usuario_susp  = nm_usuario_p,
					ie_duracao 		 = 'P'
			where	nr_sequencia = nr_seq_npt_cpoe_w;		
		end if;	
		
		update	nut_pac
		set		ie_suspenso	= 'S',
				dt_suspensao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp()
		where	nr_sequencia	= nr_sequencia_p;
				

		select	max(nr_sequencia_anterior),
				max(ie_npt_adulta)
		into STRICT	nr_sequencia_anterior_w,
				ie_npt_adulta_w
		from	nut_pac
		where	nr_sequencia	= nr_sequencia_p;
		
		ie_tipo_solucao_w := 5;

		if	coalesce(ie_npt_adulta_w, 'N') = 'S' then
			ie_tipo_solucao_w	:= 6;
		end if;

		CALL gerar_alter_sol_prescr_adep(ie_tipo_solucao_w, nr_prescricao_w,nr_sequencia_p,ie_alteracao_sol_w, ds_observacao_w, nm_usuario_p,null);

		if (cd_funcao_origem_w		= 950) and (nr_sequencia_anterior_w IS NOT NULL AND nr_sequencia_anterior_w::text <> '') then
			select	max(nr_prescricao)
			into STRICT	nr_prescricao_anterior_w
			from	nut_pac
			where	nr_sequencia	= nr_sequencia_anterior_w;
			CALL plt_ajustar_extensao(nr_prescricao_anterior_w,nr_sequencia_anterior_w,nm_tabela_p,nm_usuario_p);
		end if;	
		
		update	nut_paciente_hor
		set		dt_suspensao	= clock_timestamp(),
				nm_usuario_susp	= nm_usuario_p
		where	nr_seq_nut_protocolo = nr_sequencia_p
		and		coalesce(dt_suspensao::text, '') = ''
		and		coalesce(dt_fim_horario::text, '') = '';
		
		if (coalesce(nr_seq_assinatura_p,0) = 0) and (ie_gera_pendencia_w = 'S') then
			CALL Gerar_registro_pendente_PEP('REP',nr_prescricao_w, cd_pessoa_fisica_w, nr_atendimento_w,nm_usuario_p, 'A',null,null,null,null,null,null,null,nr_sequencia_p,null,null,null,null,null,cd_funcao_origem_w);
		end if;		
		
	elsif (upper(nm_tabela_p) = 'NUT_PACIENTE') then	
		update	nut_paciente
		set		ie_suspenso	= 'S',
				dt_suspensao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp()
		where	nr_sequencia	= nr_sequencia_p;
		
		update	nut_paciente_hor
		set		dt_suspensao	= clock_timestamp(),
				nm_usuario_susp	= nm_usuario_p
		where	nr_seq_nut_pac = nr_sequencia_p
		and		coalesce(dt_suspensao::text, '') = ''
		and		coalesce(dt_fim_horario::text, '') = '';
		
		if (coalesce(nr_seq_assinatura_p,0) = 0) and (ie_gera_pendencia_w = 'S') then
			CALL Gerar_registro_pendente_PEP('REP',nr_prescricao_w, cd_pessoa_fisica_w, nr_atendimento_w,nm_usuario_p, 'A',null,null,null,null,null,null,nr_sequencia_p,null,null,null,null,null,null,cd_funcao_origem_w);
		end if;				
		
	elsif (upper(nm_tabela_p) = 'PRESCR_SOLUCAO') then
	
		update	prescr_solucao
		set		ie_suspenso	= 'S',
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp(),
				dt_suspensao	= clock_timestamp(),
				nm_usuario_susp	= nm_usuario_p,
				ds_motivo_susp  = ds_motivo_p,
				nr_seq_motivo_susp = CASE WHEN cd_motivo_p=0 THEN  null  ELSE cd_motivo_p END 
		where	nr_prescricao	= nr_prescricao_w
		and		nr_seq_solucao	= nr_sequencia_p;

		update	prescr_material
		set		ie_suspenso	= 'S',
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp(),
				dt_suspensao	= clock_timestamp(),
				nm_usuario_susp	= nm_usuario_p,
				ds_motivo_susp  = ds_motivo_p,
				nr_seq_motivo_susp = CASE WHEN cd_motivo_p=0 THEN  null  ELSE cd_motivo_p END 
		where	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia_solucao = nr_sequencia_p;
		
		open C04;
		loop
		fetch C04 into	
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
				update	prescr_material
				set		ie_suspenso	= 'S',
						nm_usuario	= nm_usuario_p,
						dt_atualizacao	= clock_timestamp(),
						dt_suspensao	= clock_timestamp(),
						nm_usuario_susp	= nm_usuario_p,
						ds_motivo_susp  = ds_motivo_p,
						nr_seq_motivo_susp = CASE WHEN cd_motivo_p=0 THEN  null  ELSE cd_motivo_p END 
				where	nr_prescricao	= nr_prescricao_w
				and		nr_seq_kit = nr_sequencia_w
				and 	coalesce(nr_seq_recomendacao::text, '') = '';
			end;
		end loop;
		close C04;

		select	max(nr_seq_atendimento)
		into STRICT	nr_seq_atendimento_w
		from	paciente_atendimento
		where	nr_prescricao = nr_prescricao_w;
		
		update	paciente_atend_medic
		set		ie_cancelada = 'S'
		where	nr_seq_atendimento = nr_seq_atendimento_w
		and (cd_material = cd_item_w
		or 	cd_material  in (SELECT	cd_material
							 from	material
							 where	nr_seq_ficha_tecnica = cd_item_w));		
		if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
		
		-- Check if there is CPOE record to suspend
		select 	max(nr_seq_dialise_cpoe)
		into STRICT	nr_seq_dialise_cpoe_w
		from	prescr_solucao b
		where	b.nr_seq_solucao = nr_sequencia_p
		and  	nr_prescricao = nr_prescricao_w;
		
		if (nr_seq_dialise_cpoe_w > 0 and (nr_seq_dialise_cpoe_w IS NOT NULL AND nr_seq_dialise_cpoe_w::text <> '')) then			
			update	cpoe_dialise
			set		dt_suspensao = coalesce(dt_suspensao,clock_timestamp()),
					dt_lib_suspensao = clock_timestamp(),
					nm_usuario_susp = nm_usuario_p
			where	nr_sequencia = nr_seq_dialise_cpoe_w;			
		end if;	
		
		select	max(nr_seq_mat_cpoe)
		into STRICT	nr_seq_item_cpoe_w
		from	prescr_material
		where	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia_solucao = nr_sequencia_p;
			
		if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
				update	cpoe_material
				set		dt_suspensao = coalesce(dt_suspensao,clock_timestamp()),
						dt_lib_suspensao = clock_timestamp(),
						nm_usuario_susp = nm_usuario_p
				where	nr_sequencia = nr_seq_item_cpoe_w;	
		end if;
	
		select	coalesce(max('S'),'N')
		into STRICT	ie_sol_dialise_w
		from	prescr_solucao
		where	nr_prescricao	= nr_prescricao_w
		and		nr_seq_solucao	= nr_sequencia_p
		and		(nr_seq_dialise IS NOT NULL AND nr_seq_dialise::text <> '');
			
		if (ie_sol_dialise_w = 'S') then
			insert into hd_prescricao_evento(
				nr_sequencia,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_atualizacao,
				nm_usuario,
				nr_prescricao,
				nr_seq_solucao,
				nr_etapa_evento,
				ie_evento,
				dt_evento,
				cd_pessoa_evento,
				dt_ciclo)
			values (
				nextval('hd_prescricao_evento_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_prescricao_p,
				nr_sequencia_p,
				null,
				'SI',
				clock_timestamp(),
				substr(obter_dados_usuario_opcao(nm_usuario_p,'C'),1,10),
				null);
		end if;
		
		/* Rafael em 06/07/2007 OS61944 - Gerar evento ADEP */

		CALL gerar_alter_sol_prescr_adep(1, nr_prescricao_w, nr_sequencia_p, ie_alteracao_sol_w, ds_observacao_w, nm_usuario_p, ds_motivo_p);
		open C03;
		loop
		fetch C03 into	
			nr_seq_ordem_w,
			ie_susp_ordem_medic_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			if (coalesce(ie_susp_ordem_medic_w,'N') = 'N') then
				begin
				update	prescr_ordem_hor
				set		dt_suspensao = clock_timestamp(),
						dt_atualizacao = clock_timestamp(),
						nm_usuario_susp	= nm_usuario_p,
						nm_usuario	= nm_usuario_p
				where	nr_sequencia	= nr_seq_ordem_w
				and 		coalesce(dt_fim_horario::text, '') = ''
				and 		coalesce(dt_suspensao::text, '') = '';
				end;
			else
				begin
				update	prescr_ordem_hor
				set		dt_fim_horario = clock_timestamp(),
						dt_atualizacao = clock_timestamp(),
						nm_usuario_susp	= nm_usuario_p,
						nm_usuario	= nm_usuario_p
				where	nr_sequencia	= nr_seq_ordem_w
				and 		coalesce(dt_fim_horario::text, '') = ''
				and 		coalesce(dt_suspensao::text, '') = '';
				end;
			end if;	
			end;
		end loop;
		close C03;
		
		if (coalesce(nr_seq_assinatura_p,0) = 0) and (ie_gera_pendencia_w = 'S') then
			CALL Gerar_registro_pendente_PEP('REP',nr_prescricao_w, cd_pessoa_fisica_w, nr_atendimento_w,nm_usuario_p, 'A',null,null,null,null,null,null,null,null,nr_sequencia_p,null,null,null,null,cd_funcao_origem_w);
		end if;	

	elsif (upper(nm_tabela_p) = 'PRESCR_GASOTERAPIA') then
		update	prescr_gasoterapia
		set		ie_suspenso		= 'S',
				dt_suspensao	= clock_timestamp(),
				nm_usuario		= nm_usuario_p,
				dt_atualizacao	= clock_timestamp(),
				ds_motivo_susp  	= ds_motivo_p,
				nr_seq_motivo_susp	= CASE WHEN cd_motivo_p=0 THEN  null  ELSE cd_motivo_p END 
		where	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia		= nr_sequencia_p;

		-- Check if there is CPOE record to suspend
		select	max(nr_seq_gas_cpoe)
		into STRICT	nr_seq_item_cpoe_w
		from	prescr_gasoterapia
		where	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia		= nr_sequencia_p;
		
		if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
			update	cpoe_gasoterapia
			set		dt_suspensao = coalesce(dt_suspensao,clock_timestamp()),
					dt_lib_suspensao = clock_timestamp(),
					nm_usuario_susp = nm_usuario_p
			where	nr_sequencia = nr_seq_item_cpoe_w;
		end if;

		select	max(nr_seq_gas)
		into STRICT	nr_seq_gas_w
		from	prescr_gasoterapia
		where	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia	= nr_sequencia_p;
		
		ds_mensagem_w := Gerar_Alteracao_Gasoterapia(nr_sequencia_p, ie_alteracao_gas_w, null, null, clock_timestamp(), nr_prescricao_w, null, null, nm_usuario_p, ds_observacao_w, null, null, null, ds_mensagem_w);
		CALL Gerar_cobranca_gasoterapia(nr_seq_gas_w, nr_prescricao_w, nr_sequencia_p,clock_timestamp(),clock_timestamp(),nm_usuario_p,'P','S');
		
		if (coalesce(nr_seq_assinatura_p,0) = 0) and (ie_gera_pendencia_w = 'S') then
			CALL Gerar_registro_pendente_PEP('REP',nr_prescricao_w, cd_pessoa_fisica_w, nr_atendimento_w,nm_usuario_p, 'A',null,null,null,null,null,null,null,null,null,nr_sequencia_p,null,null,null,cd_funcao_origem_w);
		end if;
	
	elsif (upper(nm_tabela_p) = 'PRESCR_PROCEDIMENTO') then
	
		select	max(cd_procedimento),
				max(coalesce(obter_ctrl_glic_proc(nr_seq_proc_interno),'NC')),
				max(coalesce(nr_seq_solic_sangue,0)),
				max(coalesce(nr_seq_derivado,0)),
				max(CASE WHEN obter_se_proc_ivc(nr_seq_proc_interno)='S' THEN 'I'  ELSE 'P' END ),
				max(coalesce(ie_tipo_proced,'XPTO')),
				max(nr_seq_proc_cpoe),
				max(coalesce(nr_seq_solic_sangue,0)),
				max(nr_seq_proc_interno),
				max(nr_seq_interno)
		into STRICT	cd_item_w,
				ie_ctrl_glic_w,
				nr_seq_solic_sangue_w,
				nr_seq_derivado_w,
				ie_tipo_item_w,
				ie_tipo_proced_w,
				nr_seq_item_cpoe_w,
				nr_seq_solic_sangue_cpoe_w,
				nr_seq_proc_interno_w,
				nr_seq_interno_w
		from	prescr_procedimento
		where	nr_prescricao = nr_prescricao_w
		and		nr_sequencia = nr_sequencia_p;
		
		select	max(nr_agrupamento)
		into STRICT	nr_agrup_proc_w
		from 	prescr_procedimento
		where	nr_prescricao = nr_prescricao_w
		and 	nr_sequencia = nr_sequencia_p;
		
		select	max(ie_lado)
		into STRICT	ie_lado_proc_w
		from 	prescr_procedimento
		where	nr_prescricao = nr_prescricao_w
		and 	nr_sequencia = nr_sequencia_p;
		
		update	prescr_procedimento
		set		ie_suspenso		= 'S',
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				dt_suspensao		= clock_timestamp(),
				ds_motivo_susp  	= ds_motivo_p,
				cd_motivo_suspensao	= CASE WHEN cd_motivo_p=0 THEN  null  ELSE cd_motivo_p END ,
				nm_usuario_susp		= nm_usuario_p,
				dt_integracao		= CASE WHEN ie_limpar_data_integracao_w='S' THEN null  ELSE dt_integracao END ,
                ie_status_execucao = 910
		where	nr_prescricao		= nr_prescricao_w
		and		((nr_sequencia		= nr_sequencia_p) or
				 ((coalesce(nr_agrup_proc_w, 0) > 0) and (nr_agrup_proc_w = nr_agrupamento) and
				  (((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '') and (cd_item_w IS NOT NULL AND cd_item_w::text <> '') and (cd_procedimento = cd_item_w)) or
				   ((nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '') and (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') and (nr_seq_proc_interno = nr_seq_proc_interno_w))) and (ie_lado IS NOT NULL AND ie_lado::text <> '') and (ie_lado_proc_w IS NOT NULL AND ie_lado_proc_w::text <> '') and (ie_lado <> ie_lado_proc_w) and (ie_lado in ('D', 'E')) and (ie_lado_proc_w in ('D', 'E'))) or (nr_seq_proc_excl	= nr_seq_interno_w));

		update	prescr_procedimento
		set		ie_suspenso		= 'S',
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				dt_suspensao		= clock_timestamp(),
				ds_motivo_susp  	= ds_motivo_p,
				cd_motivo_suspensao	= CASE WHEN cd_motivo_p=0 THEN  null  ELSE cd_motivo_p END ,
				nm_usuario_susp		= nm_usuario_p,
				dt_integracao	 = NULL
		where	nr_prescricao		= nr_prescricao_w
		and		nr_seq_origem		= nr_sequencia_p
		and		(nr_seq_origem IS NOT NULL AND nr_seq_origem::text <> '');
		
		-- Check if there is CPOE record to suspend		
		if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
			if (nr_seq_solic_sangue_cpoe_w > 0) then
				update	cpoe_hemoterapia
				set		dt_suspensao = coalesce(dt_suspensao,clock_timestamp()),
						dt_lib_suspensao = clock_timestamp(),
						nm_usuario_susp = nm_usuario_p
				where	nr_sequencia = nr_seq_item_cpoe_w;
			else			
				if (ie_tipo_proced_w in ('AP','APH','APC')) then						
					update	cpoe_anatomia_patologica
					set		dt_suspensao = coalesce(dt_suspensao,clock_timestamp()),
							dt_lib_suspensao = clock_timestamp(),
							nm_usuario_susp = nm_usuario_p
					where	nr_sequencia = nr_seq_item_cpoe_w;			
				else
					update	cpoe_procedimento
					set		dt_suspensao = coalesce(dt_suspensao,clock_timestamp()),
							dt_lib_suspensao = clock_timestamp(),
							nm_usuario_susp = nm_usuario_p
					where	nr_sequencia = nr_seq_item_cpoe_w;
				end if;
				
			end if;
		end if;
		
		update	prescr_material
		set		ie_suspenso	= 'S',
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp(),
				dt_suspensao	= clock_timestamp(),
				nm_usuario_susp	= nm_usuario_p,
				ds_motivo_susp  = ds_motivo_p,
				nr_seq_motivo_susp = CASE WHEN cd_motivo_p=0 THEN  null  ELSE cd_motivo_p END 
		where	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia_proc = nr_sequencia_p;

		if (ie_cancelar_laudo_suspensao_w	= 'S') then
			update	laudo_paciente
			set		dt_cancelamento	= clock_timestamp()
			where	nr_prescricao	= nr_prescricao_w
			and		nr_seq_prescricao = nr_sequencia_p;
		end if;
		
		select	coalesce(max(ie_modificado),'N')
		into STRICT	ie_modificado_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia	= nr_sequencia_p;

		if (ie_cancelar_autor_prescr_w <> 'N') then
			/* Francisco - OS 79511 - 08/04/2008 - Troquei para tratar na procedure */

			if (ie_cancelar_autor_prescr_w <> 'N') and (ie_modificado_w <> 'S') then
				CALL suspender_autor_convenio(nr_prescricao_w,nr_sequencia_p,null,nm_usuario_p);
			end if;	
		end if;
		
		/* Rafael em 06/07/2007 OS61944 - Gerar evento ADEP */

		if (nr_seq_solic_sangue_w > 0) and
			((nr_seq_derivado_w > 0) or (ie_tipo_proced_w = 'BS')) then
			CALL gerar_alter_sol_prescr_adep(3, nr_prescricao_w, nr_sequencia_p, ie_alteracao_sol_w, ds_observacao_w, nm_usuario_p,null);
		elsif (ie_ctrl_glic_w = 'NC') and (coalesce(ie_gerar_evento_p,'S') = 'S') then
			CALL gerar_alter_item_prescr_adep(nr_atendimento_w, ie_tipo_item_w, cd_item_w, nr_prescricao_w, nr_sequencia_p, 13, null, nm_usuario_p, cd_motivo_susp_w, ds_observacao_w);
		elsif (ie_ctrl_glic_w = 'CIG') then
			begin
			
			/* OS167568*/

			update	atend_glicemia
			set		ie_status_glic	= 'S',
					dt_atualizacao	= clock_timestamp()
			where	nr_prescricao 	= nr_prescricao_w
			and		nr_seq_procedimento = nr_sequencia_p;
			
			CALL gerar_alter_item_prescr_adep(nr_atendimento_w, 'C', cd_item_w, nr_prescricao_w, nr_sequencia_p, 13, null, nm_usuario_p, cd_motivo_susp_w, ds_observacao_w);
			end;
		elsif (ie_ctrl_glic_w = 'CCG') then
			begin
			
			/* OS167568*/

			update	atend_glicemia
			set		ie_status_glic = 'S',
					dt_atualizacao	= clock_timestamp()			
			where	nr_prescricao = nr_prescricao_w
			and		nr_seq_procedimento = nr_sequencia_p;
			
			CALL gerar_alter_item_prescr_adep(nr_atendimento_w, 'G', cd_item_w, nr_prescricao_w, nr_sequencia_p, 13, null, nm_usuario_p, cd_motivo_susp_w, ds_observacao_w);
			end;
		end if;
				
		ie_paciente_isolado_w	  	:= obter_se_pac_isolamento(nr_atendimento_w);
		ie_procedimento_isolado_w 	:= obter_se_proced_isolamento(nr_prescricao_w,nr_sequencia_p);
		
		if (coalesce(ie_paciente_isolado_w,'N') = 'S') and (coalesce(ie_procedimento_isolado_w,'N') = 'S') and (ie_suspende_isolamento_w = 'S') then		
			nr_seq_precaucao_w	:= obter_atendimento_precaucao(nr_atendimento_w,'C');	
			CALL atualizar_pac_isolamento(coalesce(nr_seq_precaucao_w,0),nr_atendimento_w,nm_usuario_p);
		end if;
		
		if (coalesce(nr_seq_assinatura_p,0) = 0) and (ie_gera_pendencia_w = 'S') then
			CALL Gerar_registro_pendente_PEP('REP',nr_prescricao_w, cd_pessoa_fisica_w, nr_atendimento_w,nm_usuario_p, 'A',null,null,null,nr_sequencia_p,null,null,null,null,null,null,null,null,null,cd_funcao_origem_w);
		end if;		
	elsif (upper(nm_tabela_p) = 'PRESCR_RECOMENDACAO') then
		update	prescr_recomendacao
		set		ie_suspenso	= 'S',
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp(),
				dt_suspensao	= clock_timestamp(),
				nm_usuario_susp	= nm_usuario_p,
				ds_motivo_susp  = ds_motivo_p,
				nr_seq_motivo_susp = CASE WHEN cd_motivo_p=0 THEN  null  ELSE cd_motivo_p END 
		where	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia	= nr_sequencia_p;
		
		-- Check if there is CPOE record to suspend
		select	max(nr_seq_rec_cpoe)
		into STRICT	nr_seq_item_cpoe_w
		from	prescr_recomendacao
		where	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia	= nr_sequencia_p;
		
		if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
			update	cpoe_recomendacao
			set		dt_suspensao = coalesce(dt_suspensao,clock_timestamp()),
					dt_lib_suspensao = clock_timestamp(),
					nm_usuario_susp = nm_usuario_p
			where	nr_sequencia = nr_seq_item_cpoe_w;
		end if;
		
		update	prescr_material
		set		ie_suspenso	= 'S',
				dt_suspensao	= clock_timestamp(),
				nm_usuario_susp	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p,
				ds_motivo_susp  = ds_motivo_p,
				nr_seq_motivo_susp = CASE WHEN cd_motivo_p=0 THEN  null  ELSE cd_motivo_p END 
		where	nr_prescricao	= nr_prescricao_w
		and		nr_seq_recomendacao	= nr_sequencia_p;
		
		/* Rafael em 06/07/2007 OS61944 - Gerar evento ADEP */

		select	max(cd_recomendacao)
		into STRICT	cd_item_w
		from	prescr_recomendacao
		where	nr_prescricao = nr_prescricao_w
		and		nr_sequencia = nr_sequencia_p;

		/* Rafael em 06/07/2007 OS61944 - Gerar evento ADEP */

		CALL gerar_alter_item_prescr_adep(nr_atendimento_w, 'R', cd_item_w, nr_prescricao_w, nr_sequencia_p, 13, null, nm_usuario_p, cd_motivo_susp_w, ds_observacao_w);
		
		if (coalesce(nr_seq_assinatura_p,0) = 0) and (ie_gera_pendencia_w = 'S') then
			CALL Gerar_registro_pendente_PEP('REP', nr_prescricao_w, cd_pessoa_fisica_w, nr_atendimento_w,nm_usuario_p, 'A',null,null,null,null,null,null,null,null,null,null,nr_sequencia_p,null,null,cd_funcao_origem_w);
		end if;

	elsif (upper(nm_tabela_p) = 'PRESCR_MATERIAL') then
	
		select	coalesce(max(ie_se_necessario), 'N'),
				max(qt_dose),
				max(cd_intervalo),
				max(cd_material),
				coalesce(max(ie_acm),'N'),
				max(nr_prescricao_anterior),
				max(nr_sequencia_anterior),
				max(nr_agrupamento),
				max(ie_agrupador),
				coalesce(max(nr_seq_mat_cpoe),max(nr_seq_dieta_cpoe)),
				max(nr_seq_substituto)
		into STRICT	ie_se_necessario_w,
				qt_dose_w,
				cd_intervalo_w,
				cd_item_w,
				ie_acm_w,
				nr_prescricao_anterior_w,
				nr_sequencia_anterior_w,
				nr_agrupamento_w,
				ie_agrupador_w,
				nr_seq_item_cpoe_w,
				nr_seq_substituto_w
		from	prescr_material
		where	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia	= nr_sequencia_p;

		update	prescr_material
		set		ie_suspenso	= 'S',
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp(),
				dt_suspensao	= clock_timestamp(),
				nm_usuario_susp	= nm_usuario_p,
				ds_motivo_susp  = ds_motivo_p,
				nr_seq_motivo_susp = CASE WHEN cd_motivo_p=0 THEN  null  ELSE cd_motivo_p END 
		where	nr_prescricao	= nr_prescricao_w
		and		((nr_sequencia	= nr_sequencia_p) or (nr_sequencia_diluicao = nr_sequencia_p and ie_agrupador in (3,7,9)) or (coalesce(nr_seq_recomendacao::text, '') = '' and nr_seq_kit	= nr_sequencia_p) or (nr_seq_kit in (SELECT nr_sequencia
								 from 	prescr_material
								 where 	nr_prescricao = nr_prescricao_w
								 and 	nr_sequencia_diluicao = nr_sequencia_p
								 and 	ie_agrupador in (3,7,9))));
		
		CALL suspender_ciclo_cih(nr_prescricao_w, nr_sequencia_p);
		
		if (ie_se_necessario_w  = 'S') or (ie_acm_w = 'S') then
			select	coalesce(max(dt_inicio_prescr), clock_timestamp())
			into STRICT	dt_primeiro_horario_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_w;
						
			if (ie_substituicao_p = 'S') then			
				nr_seq_item_w	:=	nr_seq_substituto_w;
				
				select	max(qt_dose),
						max(cd_intervalo),
						max(cd_material)						
				into STRICT	qt_dose_w,
						cd_intervalo_w,
						cd_item_w						
				from	prescr_material
				where	nr_prescricao	= nr_prescricao_w
				and		nr_sequencia	= nr_seq_item_w;
				
			else
				nr_seq_item_w	:=	nr_sequencia_p;
			end if;
						
			SELECT * FROM aprazar_item_prescr('N', cd_estabelecimento_w, nr_atendimento_w, 'M', 0, cd_item_w, cd_intervalo_w, qt_dose_w, dt_primeiro_horario_w, to_char(nr_prescricao_w), nr_prescricao_w, nr_seq_item_w, 'N', null, null, nm_usuario_p, ie_inconsistencia_w, ds_inconsistentes_w, null, null, 'S', 'N', null, 'N', null, null, null, null, '', 3558, null) INTO STRICT ie_inconsistencia_w, ds_inconsistentes_w;
		end if;
		
		select	coalesce(max(ie_se_necessario), 'N'),
				max(qt_dose),
				max(cd_intervalo),
				max(cd_material),
				coalesce(max(ie_acm),'N'),
				max(nr_prescricao_anterior),
				max(nr_sequencia_anterior),
				max(nr_agrupamento),
				max(ie_agrupador),
				coalesce(max(nr_seq_mat_cpoe),max(nr_seq_dieta_cpoe)),
				max(nr_seq_substituto)
		into STRICT	ie_se_necessario_w,
				qt_dose_w,
				cd_intervalo_w,
				cd_item_w,
				ie_acm_w,
				nr_prescricao_anterior_w,
				nr_sequencia_anterior_w,
				nr_agrupamento_w,
				ie_agrupador_w,
				nr_seq_item_cpoe_w,
				nr_seq_substituto_w
		from	prescr_material
		where	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia	= nr_sequencia_p;
		
		-- Check if there is CPOE record to suspend
		if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
			if (ie_agrupador_w in (8,10,11,12,16,17)) then
			
				update	cpoe_dieta
				set		dt_suspensao = coalesce(dt_suspensao,clock_timestamp()),
						dt_lib_suspensao = clock_timestamp(),
						nm_usuario_susp = nm_usuario_p
				where	nr_sequencia = nr_seq_item_cpoe_w;
				
				SELECT coalesce(MAX(NR_SEQ_CPOE_VINCULO),0)
				into STRICT nr_seq_cpoe_vinculo_w
				FROM cpoe_dieta
				WHERE nr_sequencia = nr_seq_item_cpoe_w;
				
				if (nr_seq_cpoe_vinculo_w > 0) then
					
						update	cpoe_dieta
						set		dt_suspensao = coalesce(dt_suspensao,clock_timestamp()),
								dt_lib_suspensao = clock_timestamp(),
								nm_usuario_susp = nm_usuario_p
						where	nr_sequencia = nr_seq_cpoe_vinculo_w;
					
				end if;	
				
			else
				update	cpoe_material
				set		dt_suspensao = coalesce(dt_suspensao,clock_timestamp()),
						dt_lib_suspensao = clock_timestamp(),
						nm_usuario_susp = nm_usuario_p
				where	nr_sequencia = nr_seq_item_cpoe_w;
			end if;
		end if;

		select	max(nr_seq_atendimento)
		into STRICT	nr_seq_atendimento_w
		from	paciente_atendimento
		where	nr_prescricao = nr_prescricao_w;
					
		update	paciente_atend_medic
		set		ie_cancelada = 'S'
		where	nr_seq_atendimento = nr_seq_atendimento_w
		and (cd_material = cd_item_w
		or 	cd_material  in (SELECT	cd_material
							 from	material
							 where	nr_seq_ficha_tecnica = cd_item_w));		
		if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
		
		CALL lib_material_pac_susp_dose(cd_pessoa_Fisica_w, cd_material_w, nm_usuario_p);		
			
		if (ie_agrupador_w = 1) then
			select	min(nr_sequencia)
			into STRICT	nr_sequencia_w
			from	prescr_material
			where	nr_prescricao	= nr_prescricao_w
			and		nr_agrupamento	= nr_agrupamento_w
			and		ie_agrupador = 1;
			
			if (nr_sequencia_w = nr_sequencia_p and coalesce(ie_substituicao_p,'N') = 'N') then
				open C02;
				loop
				fetch C02 into	
					nr_sequencia_w,
					cd_item_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin
					update	prescr_material
					set		ie_suspenso	= 'S',
							nm_usuario	= nm_usuario_p,
							dt_atualizacao	= clock_timestamp(),
							dt_suspensao	= clock_timestamp(),
							nm_usuario_susp	= nm_usuario_p,
							ds_motivo_susp  = ds_motivo_p,
							nr_seq_motivo_susp = CASE WHEN cd_motivo_p=0 THEN  null  ELSE cd_motivo_p END 
					where	nr_prescricao	= nr_prescricao_w
					and		nr_sequencia	= nr_sequencia_w;
					
					CALL suspender_ciclo_cih(nr_prescricao_w, nr_sequencia_w);
					
					update	prescr_material
					set		ie_suspenso	= 'S',
							dt_suspensao	= clock_timestamp(),
							nm_usuario_susp	= nm_usuario_p,
							dt_atualizacao	= clock_timestamp(),
							nm_usuario	= nm_usuario_p,
							ds_motivo_susp  = ds_motivo_p,
							nr_seq_motivo_susp = CASE WHEN cd_motivo_p=0 THEN  null  ELSE cd_motivo_p END 
					where	nr_prescricao	= nr_prescricao_w
					and		nr_seq_kit	= nr_sequencia_w;
										
					if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
					
					CALL gerar_alter_item_prescr_adep(nr_atendimento_w, 'M', cd_item_w, nr_prescricao_w, nr_sequencia_w, ie_alteracao_w, ds_motivo_p, nm_usuario_p, cd_motivo_susp_w, ds_observacao_w);
					end;
				end loop;
				close C02;
			end if;
			
			if (cd_funcao_origem_w		= 950) and (nr_prescricao_anterior_w IS NOT NULL AND nr_prescricao_anterior_w::text <> '') and (nr_sequencia_anterior_w IS NOT NULL AND nr_sequencia_anterior_w::text <> '') then
				CALL plt_ajustar_extensao(nr_prescricao_anterior_w,nr_sequencia_anterior_w,nm_tabela_p,nm_usuario_p);
			end if;
		elsif (ie_agrupador_w = 16) then
			ds_erro_w := consistir_prod_leites_deriv(nr_prescricao_w, null, null, nm_usuario_p, obter_perfil_ativo, ds_erro_w);
		end if;
		
		update	can_ordem_prod a
		set		a.ie_cancelada	= 'S'
		where	coalesce(a.dt_inicio_preparo::text, '') = ''
		and		exists (	SELECT	1
						from		can_ordem_item_prescr b
						where	a.nr_sequencia		= b.nr_seq_ordem
						and		b.nr_prescricao		= nr_prescricao_w
						and		b.nr_seq_prescricao	= nr_sequencia_p);

		select	coalesce(max(ie_modificado),'N')
		into STRICT	ie_modificado_w
		from	prescr_material
		where	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia	= nr_sequencia_p;				
				
		if (ie_cancelar_autor_prescr_w <> 'N') then
			/* Francisco - OS 79511 - 08/04/2008 - Troquei para tratar na procedure */

			if (ie_cancelar_autor_prescr_w <> 'N') and (ie_modificado_w <> 'S') then
				CALL suspender_autor_convenio(nr_prescricao_w,null,nr_sequencia_p,nm_usuario_p);
			end if;	
		end if;
		
		/* Rafael em 06/07/2007 OS61944 - Gerar evento ADEP */

		select	max(cd_material),
				max(ie_agrupador)
		into STRICT	cd_item_w,
				ie_agrupador_w
		from	prescr_material
		where	nr_prescricao = nr_prescricao_w
		and		nr_sequencia = nr_sequencia_p;
		
		if (ie_agrupador_w = 1) then
			CALL Enviar_CI_Paciente_Medic(nr_prescricao_p,cd_estabelecimento_w,wheb_usuario_pck.get_cd_perfil,nm_usuario_p,nr_sequencia_p,'S');
		elsif (ie_agrupador_w = 12) then
			CALL Enviar_CI_Paciente_Medic(nr_prescricao_p,cd_estabelecimento_w,wheb_usuario_pck.get_cd_perfil,nm_usuario_p,nr_sequencia_p,'S');
		elsif (ie_agrupador_w = 8) then
			CALL Enviar_CI_Paciente_SNE(nr_prescricao_p,cd_estabelecimento_w,wheb_usuario_pck.get_cd_perfil,nm_usuario_p,nr_sequencia_p,'S');
		end if;
		
		/* Rafael em 06/07/2007 OS61944 - Gerar evento ADEP */

		if (coalesce(ie_gerar_evento_p,'S') = 'S') then
			if (ie_agrupador_w = 1) then
				CALL gerar_alter_item_prescr_adep(nr_atendimento_w, 'M', cd_item_w, nr_prescricao_w, nr_sequencia_p, ie_alteracao_w, ds_motivo_p, nm_usuario_p, cd_motivo_susp_w, ds_observacao_w);
			elsif (ie_agrupador_w = 2) then
				CALL gerar_alter_item_prescr_adep(nr_atendimento_w, 'MAT', cd_item_w, nr_prescricao_w, nr_sequencia_p, ie_alteracao_w, ds_motivo_p, nm_usuario_p, cd_motivo_susp_w, ds_observacao_w);
			elsif (ie_agrupador_w = 8) then
				CALL gerar_alter_sol_prescr_adep(2, nr_prescricao_w, nr_sequencia_p, ie_alteracao_sol_w, ds_observacao_w, nm_usuario_p,null);
			elsif (ie_agrupador_w = 12) then
				CALL gerar_alter_item_prescr_adep(nr_atendimento_w, 'S', cd_item_w, nr_prescricao_w, nr_sequencia_p, ie_alteracao_w, ds_motivo_p, nm_usuario_p, cd_motivo_susp_w, ds_observacao_w);
			elsif (ie_agrupador_w = 16) then
				CALL gerar_alter_item_prescr_adep(nr_atendimento_w, 'LD', cd_item_w, nr_prescricao_w, nr_sequencia_p, ie_alteracao_w, ds_motivo_p, nm_usuario_p, cd_motivo_susp_w, ds_observacao_w);
			end if;
		end if;
		if (coalesce(nr_seq_assinatura_p,0) = 0) and (ie_gera_pendencia_w = 'S') then
			CALL Gerar_registro_pendente_PEP('REP',nr_prescricao_w, cd_pessoa_fisica_w, nr_atendimento_w,nm_usuario_p, 'A',null,null,nr_sequencia_p,null,null,null,null,null,null,null,null,null,null,cd_funcao_origem_w);
		end if;
	end if;
	
	if (ie_desfazer_conduta_w = 'S') then
		CALL nut_desfazer_prescr_nut_susp(nr_prescricao_w, upper(nm_tabela_p), nr_sequencia_p, nm_usuario_p);
	end if;
	
	select	count(b.nr_sequencia)
	into STRICT	cont_w
	from	intpd_eventos a,
			intpd_eventos_sistema b
	where	a.nr_sequencia = b.nr_seq_evento
	and		a.ie_evento = 72
	and		a.ie_situacao = 'A'
	and		b.ie_situacao = 'A'  LIMIT 1;
	
	if (cont_w = 1) then
	
		select	count(nr_seq_interno)
		into STRICT	cont_w
		from 	prescr_material
		where 	nr_prescricao = nr_prescricao_w
		and		ie_agrupador = 1
		and		(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '')  LIMIT 1;
		
		if (cont_w = 1) then
			open C05;
			loop
			fetch C05 into	
				nr_seq_interno_ww,
				cd_material_ww;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin
					reg_integracao_w.cd_estab_documento := wheb_usuario_pck.get_cd_estabelecimento;
					select	max(cd_categoria),
							max(cd_convenio)
					into STRICT	reg_integracao_w.cd_convenio,
							reg_integracao_w.cd_categoria
					from	atend_categoria_convenio
					where	nr_seq_interno = obter_atecaco_atendimento(nr_atendimento_w);
					
					reg_integracao_w.ie_tipo_atendimento := obter_tipo_atendimento(nr_atendimento_w);
					
					reg_integracao_w.cd_material := cd_material_ww;
					reg_integracao_w := gerar_int_padrao.gravar_integracao('72', nr_seq_interno_ww, nm_usuario_p, reg_integracao_w);
				end;
			end loop;
			close C05;
		end if;
	end if;
	
	select	count(b.nr_sequencia)
	into STRICT	cont_w
	from	intpd_eventos a,
			intpd_eventos_sistema b
	where	a.nr_sequencia = b.nr_seq_evento
	and		a.ie_evento = 126
	and		a.ie_situacao = 'A'
	and		b.ie_situacao = 'A'  LIMIT 1;
	
	if (cont_w = 1) then
	
		select	count(nr_seq_interno)
		into STRICT	cont_w
		from 	prescr_procedimento
		where 	nr_prescricao = nr_prescricao_w
		and		(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '')  LIMIT 1;
		
		if (cont_w = 1) then
			open C06;
			loop
			fetch C06 into	
				nr_seq_interno_ww,
				cd_procedimento_ww,
				nr_seq_exame_w;
			EXIT WHEN NOT FOUND; /* apply on C06 */
				begin
					reg_integracao_w.cd_estab_documento := wheb_usuario_pck.get_cd_estabelecimento;
					select	max(cd_categoria),
							max(cd_convenio)
					into STRICT	reg_integracao_w.cd_convenio,
							reg_integracao_w.cd_categoria
					from	atend_categoria_convenio
					where	nr_seq_interno = obter_atecaco_atendimento(nr_atendimento_w);
					reg_integracao_w.cd_procedimento := cd_procedimento_ww;
					reg_integracao_w.nr_seq_exame := nr_seq_exame_w;					
					reg_integracao_w.ie_tipo_atendimento := obter_tipo_atendimento(nr_atendimento_w);
					
					reg_integracao_w := gerar_int_padrao.gravar_integracao('126', nr_seq_interno_ww, nm_usuario_p, reg_integracao_w);
				end;
			end loop;
			close C06;
		end if;
	end if;

	select	coalesce(max(a.ie_agrupada),'N')
	into STRICT	ie_agrupada_w
	from	pre_venda a,
			pre_venda_item b			
	where	a.nr_sequencia = b.nr_seq_pre_venda
	and		b.nr_prescricao = nr_prescricao_w;
	
	if (ie_agrupada_w = 'S') then
	
		select	count(*)
		into STRICT	qt_registros_w
		from	prescr_procedimento a,
				pre_venda_item b
		where	a.nr_seq_interno = b.nr_seq_interno
		and   	a.nr_prescricao = b.nr_prescricao
		and		b.nr_atendimento = nr_atendimento_w
		and		a.ie_suspenso = 'N';
		
		if (qt_registros_w = 0) then
				update	pre_venda_item
				set		nr_atendimento  = NULL,
						nr_prescricao  = NULL,
						nr_seq_interno  = NULL
				where	nr_atendimento = nr_atendimento_w;
		end if;
	else
		update	pre_venda_item
		set	nr_atendimento  = NULL,
			nr_prescricao  = NULL,
			nr_seq_interno  = NULL
		where	nr_seq_interno = nr_seq_interno_w;
	end if;
	
	
	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
end loop;
close C00;

CALL integracao_dispensario_pck.cubixx_suspender_item_prescr(nr_prescricao_p, nr_sequencia_p);

nr_seq_lote_ant_w := 0;

open C07;
loop
fetch C07 into	
	nr_seq_lote_w,
	cd_local_estoque_w,
	cd_setor_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on C07 */
	begin
	if (nr_seq_lote_w <> nr_seq_lote_ant_w) then
		reg_integracao_p.cd_estab_documento	:= wheb_usuario_pck.get_cd_estabelecimento;
		reg_integracao_p.cd_local_estoque	:= cd_local_estoque_w;
		reg_integracao_p.nr_seq_agrupador	:= nr_seq_lote_w;
		reg_integracao_p.cd_setor_atendimento	:= cd_setor_atendimento_w;
		reg_integracao_p := gerar_int_padrao.gravar_integracao('260', nr_seq_lote_w, nm_usuario_p, reg_integracao_p);
	end if;	
	nr_seq_lote_ant_w := nr_seq_lote_w;
	end;
end loop;
close C07;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE suspender_item_prescricao ( nr_prescricao_p bigint, nr_sequencia_p bigint, cd_motivo_p bigint, ds_motivo_p text, nm_tabela_p text, nm_usuario_p text, ie_gerar_evento_p text default 'S', cd_funcao_p bigint default 924, nr_seq_assinatura_p bigint default null, ie_substituicao_p text default 'N') FROM PUBLIC;

