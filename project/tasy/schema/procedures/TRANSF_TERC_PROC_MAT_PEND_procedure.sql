-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE transf_terc_proc_mat_pend (dt_inicial_p timestamp, dt_final_p timestamp) AS $body$
DECLARE


terceiro_nr_sequencia_w terceiro.nr_sequencia%type;
terceiro_nr_seq_terc_unific_w terceiro.nr_seq_terc_unific%type;
procedimento_nr_seq_w procedimento_repasse.nr_sequencia%type;
material_nr_seq_w material_repasse.nr_sequencia%type;

c01 CURSOR FOR
SELECT a.nr_sequencia,
       a.nr_seq_terc_unific
  from terceiro a
 where (a.nr_seq_terc_unific IS NOT NULL AND a.nr_seq_terc_unific::text <> '')
   and exists (select 1
                 from terceiro b
                where b.nr_sequencia = a.nr_seq_terc_unific
                  and b.ie_situacao = 'A'
                  and (trunc(dt_inicial_p, 'dd') between trunc((coalesce(b.dt_inicio_vigencia, dt_inicial_p)), 'dd') and trunc((coalesce(b.dt_fim_vigencia, dt_inicial_p)), 'dd') or
                       fim_dia(dt_final_p) between fim_dia(coalesce(b.dt_inicio_vigencia, dt_final_p)) and fim_dia(coalesce(b.dt_fim_vigencia, dt_final_p))));

c02 CURSOR FOR
SELECT a.nr_sequencia
  from procedimento_repasse a,
       procedimento_paciente b
 where a.nr_seq_procedimento = b.nr_sequencia
   and b.dt_procedimento between trunc(dt_inicial_p, 'dd') and fim_dia(dt_final_p)
   and coalesce(a.nr_repasse_terceiro::text, '') = ''
   and a.nr_seq_terceiro = terceiro_nr_sequencia_w;

c03 CURSOR FOR
SELECT a.nr_sequencia
  from material_repasse a,
       material_atend_paciente b
 where a.nr_seq_material = b.nr_sequencia
   and b.dt_atendimento between trunc(dt_inicial_p, 'dd') and fim_dia(dt_final_p)
   and coalesce(a.nr_repasse_terceiro::text, '') = ''
   and a.nr_seq_terceiro = terceiro_nr_sequencia_w;


BEGIN

open c01;
loop
fetch c01 into
    terceiro_nr_sequencia_w,
    terceiro_nr_seq_terc_unific_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

    open c02;
    loop
    fetch c02 into
        procedimento_nr_seq_w;
    EXIT WHEN NOT FOUND; /* apply on c02 */
        update procedimento_repasse
           set nr_seq_terceiro = terceiro_nr_seq_terc_unific_w
         where nr_sequencia = procedimento_nr_seq_w;
    end loop;
    close c02;

    open c03;
    loop
    fetch c03 into
        material_nr_seq_w;
    EXIT WHEN NOT FOUND; /* apply on c03 */
        update material_repasse
           set nr_seq_terceiro = terceiro_nr_seq_terc_unific_w
         where nr_sequencia = material_nr_seq_w;
    end loop;
    close c03;

end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE transf_terc_proc_mat_pend (dt_inicial_p timestamp, dt_final_p timestamp) FROM PUBLIC;

