-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (	nr_seq_old bigint, 
			nr_seq_new bigint, 
			nr_conta bigint);


CREATE OR REPLACE PROCEDURE duplicar_conta_paciente ( nr_interno_conta_p bigint, nm_usuario_p text) AS $body$
DECLARE

type Vetor is table of campos index by integer;

nr_interno_conta_w      		bigint;
nr_interno_conta_nova_w   		bigint;
nr_interno_conta_ler_w		bigint;
nr_sequencia_w			bigint;
nr_seq_nova_w			bigint;
nr_seq_desc_dest_w		bigint;
nr_seq_desc_origem_w		bigint;
cd_acao_w			varchar(1);
qt_adic_w			smallint;
qt_acao_w			smallint;
cont_w				integer;
cont_desc_w			integer;
nr_seq_apac_w			bigint;
CD_ESTRUTURA_w		integer;
vl_conta_w			double precision;
ie_calcula_w			varchar(1);
pr_desconto_w			real;
vl_desconto_w			double precision;
vl_liquido_w			double precision;
cd_setor_atendimento_w		integer;
cd_medico_w			varchar(10);

i				integer := 1;
Vetor_Proc_w			Vetor;
ie_desc_material_w			varchar(2);
nr_atendimento_w			bigint;
cd_convenio_parametro_w		bigint;
cd_categoria_parametro_w		varchar(20);
cd_estabelecimento_w		bigint;
ie_gerar_pacote_canc_nota_w	varchar(01);
nr_prescricao_proc_w		bigint;
nr_seq_prescr_proc_w		bigint;
nr_seq_etapa_w			bigint;

cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_w				bigint;
nr_seq_atend_pacote_w		bigint;
quebra_w				varchar(20) := chr(13)||chr(10);

c01 CURSOR FOR 
SELECT 	nr_sequencia, 
	cd_acao, 
	nr_interno_conta_nova_w, 2, 1 
from	procedimento_paciente 
where	nr_interno_conta	= nr_interno_conta_p 
and	coalesce(nr_seq_proc_pacote,0) <> nr_sequencia 
order by 1;

c02 CURSOR FOR 
SELECT	nr_sequencia, 
	cd_acao, 
	nr_interno_conta_nova_w, 2, 1 
from	Material_atend_paciente 
where	nr_interno_conta	= nr_interno_conta_p;

c03 CURSOR FOR 
SELECT	CD_ESTRUTURA, 
	VL_CONTA, 
	IE_CALCULA, 
	PR_DESCONTO, 
	VL_DESCONTO, 
	VL_LIQUIDO, 
	CD_SETOR_ATENDIMENTO, 
	CD_MEDICO, 
	ie_desc_material 
from	conta_paciente_desc_item 
where	nr_seq_desconto	= nr_seq_desc_origem_w;

C030 CURSOR FOR 
	SELECT	c.nr_prescricao, 
		c.nr_sequencia 
	from	prescr_procedimento c, 
		procedimento_paciente a 
	where	a.nr_prescricao			= c.nr_prescricao 
	and	a.nr_sequencia_prescricao	= c.nr_sequencia 
	and	coalesce(c.dt_baixa::text, '') = '' 
	and	a.nr_sequencia			= nr_sequencia_w 
	and	coalesce(a.nr_seq_exame::text, '') = '' 
	order by 1;
	
C10 CURSOR FOR 
	SELECT	* 
	from	conta_paciente_etapa 
	where	nr_interno_conta		= nr_interno_conta_p;
	
C20 CURSOR FOR 
	SELECT	* 
	from	conta_paciente_desconto 
	where	nr_interno_conta 	= nr_interno_conta_p;
	
c40 CURSOR FOR 
	SELECT 	a.* 
	from 	atendimento_pacote 	a, 
		procedimento_paciente	c, 
		conta_paciente 		b 
	where 	a.nr_atendimento = b.nr_atendimento 
	and 	b.nr_interno_conta = c.nr_interno_conta 
	and 	a.nr_seq_procedimento = c.nr_sequencia 
	and 	b.nr_interno_conta = nr_interno_conta_p;
	
c10_w	c10%rowtype;
c20_w	c20%rowtype;
c40_w	c40%rowtype;


BEGIN 
select	nextval('conta_paciente_seq') 
into STRICT	nr_interno_conta_nova_w
;
 
insert into Conta_Paciente( 
	nr_atendimento, 
	dt_acerto_conta, 
	ie_status_acerto, 
	dt_periodo_inicial, 
	dt_periodo_final, 
	dt_atualizacao, 
	nm_usuario, 
	cd_convenio_parametro, 
	nr_protocolo, 
	dt_mesano_referencia, 
	dt_mesano_contabil, 
	cd_convenio_calculo, 
	cd_categoria_calculo, 
	nr_interno_conta, 
	nr_seq_protocolo, 
	cd_categoria_parametro, 
	ds_inconsistencia, 
	dt_recalculo, 
	cd_estabelecimento, 
	vl_desconto, 
	vl_conta) 
SELECT	a.nr_atendimento, 
	a.dt_acerto_conta + (2/86400), 
	1, a.dt_periodo_inicial, 
	a.dt_periodo_final, 
	clock_timestamp(), 
	nm_usuario_p, 
	a.cd_convenio_parametro, 
	'0', 
	trunc(b.dt_ref_valida,'dd'), 
	a.dt_mesano_contabil, 
	a.cd_convenio_calculo, 
	a.cd_categoria_calculo, 
	nr_interno_conta_nova_w, 
	null, 
	a.cd_categoria_parametro, 
	a.ds_inconsistencia, 
	a.dt_recalculo, 
	a.cd_estabelecimento, 
	vl_desconto, 
	vl_conta 
from	Convenio b, 
	conta_paciente a 
where	nr_interno_conta	= nr_interno_conta_p 
and	b.cd_convenio		= a.cd_convenio_parametro;
 
OPEN C01;
LOOP 
FETCH C01 into 
	nr_sequencia_w, 
	cd_acao_w, 
	nr_interno_conta_ler_w, 
	qt_adic_w, 
	qt_acao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
 
	select nextval('procedimento_paciente_seq') 
	into STRICT nr_seq_nova_w 
	;
 
	insert into procedimento_paciente( 
		nr_sequencia, nr_atendimento, dt_entrada_unidade, cd_procedimento, nr_seq_proc_interno, 
		dt_procedimento, qt_procedimento, dt_atualizacao, nm_usuario, 
		cd_medico, cd_convenio, cd_categoria, cd_pessoa_fisica, dt_prescricao, 
		ds_observacao, vl_procedimento, vl_medico, vl_anestesista, vl_materiais, 
		cd_edicao_amb, cd_tabela_servico, dt_vigencia_preco, cd_procedimento_princ, 
		dt_procedimento_princ, dt_acerto_conta, dt_acerto_convenio, 
		dt_acerto_medico,	vl_auxiliares, vl_custo_operacional, 
		tx_medico, tx_anestesia, nr_prescricao, nr_sequencia_prescricao, 
		cd_motivo_exc_conta, ds_compl_motivo_excon, cd_acao, qt_devolvida, 
		cd_motivo_devolucao, nr_cirurgia, nr_doc_convenio, cd_medico_executor, 
		ie_cobra_pf_pj, nr_laudo, dt_conta, cd_setor_atendimento, 
		cd_conta_contabil, cd_procedimento_aih, ie_origem_proced, nr_aih,	 
		ie_responsavel_credito,	tx_procedimento, cd_equipamento,ie_valor_informado, 
		cd_estabelecimento_custo, cd_tabela_custo, cd_situacao_glosa, 
		nr_lote_contabil,	cd_procedimento_convenio, nr_seq_autorizacao, 
		ie_tipo_servico_sus, ie_tipo_ato_sus, cd_cgc_prestador, nr_nf_prestador, 
		cd_atividade_prof_bpa, nr_interno_conta, nr_seq_proc_princ,	ie_guia_informada, 
		dt_inicio_procedimento,	ie_emite_conta, ie_funcao_medico, ie_classif_sus, 
		cd_especialidade, nm_usuario_original, 
		ie_tipo_proc_sus,cd_setor_receita, vl_adic_plant, nr_seq_atepacu, ie_proc_princ_atend, 
		nr_seq_proc_pacote, cd_medico_req, ie_tipo_guia, ie_video, ie_auditoria, nr_seq_exame,nr_seq_aih, 
		ie_doc_executor,cd_cbo,nr_seq_regra_doc, nr_seq_proc_est) 
	SELECT 
		nr_seq_nova_w, nr_atendimento, dt_entrada_unidade, cd_procedimento, nr_seq_proc_interno, 
		dt_procedimento + (qt_adic_w / 86400), qt_procedimento * qt_acao_w, 
		clock_timestamp(), nm_usuario_p, cd_medico, cd_convenio, cd_categoria, 
		--cd_pessoa_fisica, dt_prescricao, substr(ds_observacao||quebra_w||'Duplicado por: '||nm_usuario_p,1,255), vl_procedimento * qt_acao_w, 
		cd_pessoa_fisica, dt_prescricao, substr(ds_observacao||quebra_w|| wheb_mensagem_pck.get_texto(304098,'NM_USUARIO=' || nm_usuario_p),1,255), vl_procedimento * qt_acao_w, 
		vl_medico * qt_acao_w, vl_anestesista * qt_acao_w, 
		vl_materiais * qt_acao_w, cd_edicao_amb, cd_tabela_servico, 
		dt_vigencia_preco, cd_procedimento_princ,	dt_procedimento_princ, 
		dt_acerto_conta + (qt_adic_w / 86400), dt_acerto_convenio, 
		dt_acerto_medico,	vl_auxiliares * qt_acao_w, vl_custo_operacional * qt_acao_w, 
		tx_medico, tx_anestesia, nr_prescricao, nr_sequencia_prescricao, 
		cd_motivo_exc_conta, ds_compl_motivo_excon, cd_acao_w, 
		qt_devolvida * qt_acao_w, cd_motivo_devolucao, nr_cirurgia, nr_doc_convenio, 
		cd_medico_executor, ie_cobra_pf_pj,	nr_laudo, dt_conta + (qt_adic_w / 86400), 
		cd_setor_atendimento, cd_conta_contabil, cd_procedimento_aih, 
		ie_origem_proced,	nr_aih, ie_responsavel_credito, tx_procedimento, 
		cd_equipamento, CASE WHEN qt_adic_w=1 THEN 'S'  ELSE ie_valor_informado END , 
		cd_estabelecimento_custo, cd_tabela_custo, cd_situacao_glosa, 0, 
		cd_procedimento_convenio, nr_seq_autorizacao, ie_tipo_servico_sus, 
		ie_tipo_ato_sus, cd_cgc_prestador, nr_nf_prestador, cd_atividade_prof_bpa, 
		nr_interno_conta_ler_w, nr_seq_proc_princ, ie_guia_informada, 
		dt_inicio_procedimento,	ie_emite_conta, ie_funcao_medico, ie_classif_sus, 
		cd_especialidade,	nm_usuario_original, ie_tipo_proc_sus, 
		cd_setor_receita, vl_adic_plant * qt_acao_w, nr_seq_atepacu, ie_proc_princ_atend, 
		CASE WHEN nr_interno_conta_ler_w=nr_interno_conta_w THEN  nr_seq_proc_pacote  ELSE null END , 
		cd_medico_req, ie_tipo_guia, ie_video, ie_auditoria, nr_seq_exame,nr_seq_aih, 
		ie_doc_executor,cd_cbo,nr_seq_regra_doc, nr_sequencia_w 
	from procedimento_paciente 
	where nr_sequencia = nr_sequencia_w;
	 
	insert into procedimento_participante( 
		nr_sequencia, nr_seq_partic, ie_funcao, dt_atualizacao, 
		nm_usuario,	cd_pessoa_fisica,	cd_cgc, ie_valor_informado, 
		ie_emite_conta, vl_participante, vl_conta, nr_lote_contabil, 
		nr_conta_medico, ie_tipo_servico_sus, ie_tipo_ato_sus, 
		qt_ponto_sus, vl_ponto_sus, vl_original, ie_responsavel_credito, 
		pr_procedimento,cd_cbo,ie_doc_executor,ie_participou_sus) 
	SELECT 
		nr_seq_nova_w, nr_seq_partic,ie_funcao, clock_timestamp(), 
		nm_usuario_p, cd_pessoa_fisica, cd_cgc, 
		CASE WHEN qt_adic_w=1 THEN 'S'  ELSE ie_valor_informado END ,ie_emite_conta, 
		vl_participante * qt_acao_w,	vl_conta * qt_acao_w, 
		0,	nr_conta_medico, ie_tipo_servico_sus, 
		ie_tipo_ato_sus, qt_ponto_sus * qt_acao_w, 
		vl_ponto_sus * qt_acao_w, vl_original * qt_acao_w, 
		ie_responsavel_credito,	pr_procedimento,cd_cbo, 
		ie_doc_executor,ie_participou_sus 
	from procedimento_participante 
	where nr_sequencia = nr_sequencia_w;
 
	delete	from proc_paciente_valor 
	where	nr_seq_procedimento	= nr_seq_nova_w;
	 
	 
	Insert into proc_paciente_valor( 
		nr_seq_procedimento, nr_sequencia, ie_tipo_valor, 
 		dt_atualizacao, nm_usuario, vl_procedimento, 
 		vl_medico, vl_anestesista, vl_materiais, vl_auxiliares, 
 		vl_custo_operacional, cd_convenio, cd_categoria, pr_valor) 
	SELECT 
		nr_seq_nova_w, nr_sequencia, ie_tipo_valor, 
 		clock_timestamp(), nm_usuario_p, vl_procedimento * qt_acao_w, 
 		vl_medico * qt_acao_w, vl_anestesista * qt_acao_w, 
 		vl_materiais * qt_acao_w, vl_auxiliares * qt_acao_w, 
 		vl_custo_operacional * qt_acao_w, cd_convenio, 
 		cd_categoria, pr_valor 
	from 	proc_paciente_valor 
	where nr_seq_procedimento = nr_sequencia_w;
 
	Vetor_Proc_w[i].nr_seq_old := nr_sequencia_w;
	Vetor_Proc_w[i].nr_seq_new := nr_seq_nova_w;
	Vetor_Proc_w[i].nr_conta := nr_interno_conta_ler_w;
	i := i + 1;
 
	end;
END LOOP;	
CLOSE C01;
 
 
	 
OPEN C02;
LOOP 
FETCH C02 into 
	nr_sequencia_w, 
	cd_acao_w, 
	nr_interno_conta_ler_w, 
	qt_adic_w, 
	qt_acao_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin 
	select nextval('material_atend_paciente_seq') 
	into STRICT nr_seq_nova_w 
	;
	insert into material_atend_paciente( 
		nr_sequencia, 
		nr_atendimento, dt_entrada_unidade,	cd_material, dt_atendimento, 
		cd_unidade_medida, qt_material, dt_atualizacao,	nm_usuario, 
		cd_convenio, cd_categoria, dt_prescricao,	cd_material_prescricao, 
		ie_via_aplicacao,	ds_observacao, vl_material, cd_tab_preco_material, 
		dt_vigencia_tabela, dt_acerto_conta, dt_acerto_convenio, nr_prescricao, 
		nr_sequencia_prescricao, cd_motivo_exc_conta, ds_compl_motivo_excon, 
		cd_local_estoque,	dt_atualizacao_estoque, cd_acao, cd_setor_atendimento, 
		qt_devolvida, cd_motivo_devolucao, nr_cirurgia, nr_doc_convenio, 
		qt_executada, dt_conta,	vl_unitario, cd_proced_referencia, cd_conta_contabil, 
		qt_ajuste_conta, nr_aih, ie_valor_informado, cd_estabelecimento_custo, 
		cd_tabela_custo, cd_situacao_glosa, nr_lote_contabil,	cd_material_convenio, 
		nr_seq_autorizacao, nr_interno_conta, nr_seq_proc_princ, ie_guia_informada, 
		cd_especialidade,	nm_usuario_original, vl_tabela_original, 
		ie_emite_conta, cd_setor_receita, cd_cgc_fornecedor, 
		nr_seq_lote_fornec, cd_material_exec, nr_seq_atepacu, 
		nr_seq_proc_pacote, ie_auditoria,nr_seq_aih, ie_estorno_conta, nr_seq_mat_est) 
	SELECT 
		nr_seq_nova_w, nr_atendimento, dt_entrada_unidade,	cd_material, 
		dt_atendimento + (qt_adic_w / 86400), 
		cd_unidade_medida, qt_material * qt_acao_w, clock_timestamp(),	nm_usuario_p, 
		cd_convenio, cd_categoria, dt_prescricao,	cd_material_prescricao, 
		--ie_via_aplicacao,	substr(ds_observacao||quebra_w||'Duplicado por: '||nm_usuario_p,1,255), vl_material * qt_acao_w, cd_tab_preco_material, 
		ie_via_aplicacao, substr(ds_observacao||quebra_w|| wheb_mensagem_pck.get_texto(304098,'NM_USUARIO=' || nm_usuario_p),1,255), vl_material * qt_acao_w, cd_tab_preco_material,		 
		dt_vigencia_tabela, dt_acerto_conta + (qt_adic_w / 86400), dt_acerto_convenio, 
		nr_prescricao, nr_sequencia_prescricao, cd_motivo_exc_conta, 
		ds_compl_motivo_excon, null,	null, 
		cd_acao_w, cd_setor_atendimento, qt_devolvida * qt_acao_w, cd_motivo_devolucao, 
		nr_cirurgia, nr_doc_convenio, qt_executada * qt_acao_w, dt_conta + (qt_adic_w / 86400),	vl_unitario, 
		cd_proced_referencia, cd_conta_contabil, qt_ajuste_conta * qt_acao_w, 
		nr_aih, CASE WHEN qt_adic_w=1 THEN 'S'  ELSE ie_valor_informado END , cd_estabelecimento_custo, 
		cd_tabela_custo, cd_situacao_glosa, 0, cd_material_convenio, 
		nr_seq_autorizacao, nr_interno_conta_ler_w, nr_seq_proc_princ, ie_guia_informada, 
		cd_especialidade,	nm_usuario_original,  
		vl_tabela_original * qt_acao_w,ie_emite_conta, cd_setor_receita, cd_cgc_fornecedor, 
		nr_seq_lote_fornec, cd_material_exec, nr_seq_atepacu, 
		CASE WHEN nr_interno_conta_ler_w=nr_interno_conta_w THEN  nr_seq_proc_pacote  ELSE null END , ie_auditoria,nr_seq_aih, 
		'S', nr_sequencia_w 
	from 	material_atend_paciente 
	where nr_sequencia = nr_sequencia_w;
 
	insert into mat_atend_paciente_valor( 
		nr_seq_material, nr_sequencia, ie_tipo_valor, dt_atualizacao, 
		nm_usuario,	vl_material, cd_convenio, cd_categoria, pr_valor) 
	SELECT 
		nr_seq_nova_w, nr_sequencia, ie_tipo_valor, 
		clock_timestamp(), nm_usuario_p,	vl_material * qt_acao_w, 
		cd_convenio, cd_categoria, pr_valor 
	from 	mat_atend_paciente_valor 
	where nr_seq_material = nr_sequencia_w;
	end;
END LOOP;
CLOSE C02;
 
 
for i in 1..Vetor_Proc_w.count loop 
	update procedimento_paciente 
	set nr_seq_proc_princ = Vetor_Proc_w[i].nr_seq_new 
	where nr_seq_proc_princ = Vetor_Proc_w[i].nr_seq_old 
	 and nr_interno_conta = Vetor_Proc_w[i].nr_conta;
 
	update procedimento_paciente 
	set nr_seq_proc_pacote = Vetor_Proc_w[i].nr_seq_new 
	where nr_seq_proc_pacote = Vetor_Proc_w[i].nr_seq_old 
	 and nr_interno_conta = Vetor_Proc_w[i].nr_conta;
 
	update material_atend_paciente 
	set nr_seq_proc_princ = Vetor_Proc_w[i].nr_seq_new 
	where nr_seq_proc_princ = Vetor_Proc_w[i].nr_seq_old 
	 and nr_interno_conta = Vetor_Proc_w[i].nr_conta;
 
	update material_atend_paciente 
	set nr_seq_proc_pacote = Vetor_Proc_w[i].nr_seq_new 
	where nr_seq_proc_pacote = Vetor_Proc_w[i].nr_seq_old 
	 and nr_interno_conta = Vetor_Proc_w[i].nr_conta;
 
 
end loop;
 
 
select	count(*) 
into STRICT	cont_desc_w 
from	conta_paciente_desconto 
where	nr_interno_conta = nr_interno_conta_p;
 
if (cont_desc_w > 0) then 
 
	open C20;
	loop 
	fetch C20 into	 
		c20_w;
	EXIT WHEN NOT FOUND; /* apply on C20 */
		begin 
		 
		select	nextval('conta_paciente_desconto_seq') 
		into STRICT	nr_seq_desc_dest_w 
		;
	 
		insert into conta_paciente_desconto(NR_SEQUENCIA, 
			NR_INTERNO_CONTA, 
			IE_TIPO_DESCONTO, 
			DT_ATUALIZACAO, 
			NM_USUARIO, 
			VL_CONTA, 
			PR_DESCONTO, 
			VL_DESCONTO, 
			VL_LIQUIDO, 
			DT_DESCONTO, 
			DT_CALCULO, 
			DT_ATUALIZACAO_NREC, 
			NM_USUARIO_NREC, 
			DS_OBSERVACAO, 
			CD_CENTRO_CUSTO, 
			NR_SEQ_MOTIVO_DESC, 
			CD_PESSOA_SOLICITANTE, 
			CD_CGC_SOLICITANTE, 
			IE_PACOTE, 
			IE_VALOR_INF) 
		values (nr_seq_desc_dest_w, 
			nr_interno_conta_nova_w, 
			c20_w.IE_TIPO_DESCONTO, 
			clock_timestamp(), 
			nm_usuario_p, 
			c20_w.VL_CONTA, 
			c20_w.PR_DESCONTO, 
			c20_w.VL_DESCONTO, 
			c20_w.VL_LIQUIDO, 
			c20_w.DT_DESCONTO, 
			c20_w.DT_CALCULO, 
			clock_timestamp(), 
			nm_usuario_p, 
			c20_w.DS_OBSERVACAO, 
			c20_w.CD_CENTRO_CUSTO, 
			c20_w.NR_SEQ_MOTIVO_DESC, 
			c20_w.CD_PESSOA_SOLICITANTE, 
			c20_w.CD_CGC_SOLICITANTE, 
			c20_w.IE_PACOTE, 
			c20_w.IE_VALOR_INF);
 
		select	nr_sequencia 
		into STRICT	nr_seq_desc_origem_w 
		from	conta_paciente_desconto 
		where	nr_interno_conta	= nr_interno_conta_p 
		and 	nr_sequencia		= c20_w.nr_sequencia;
 
		open	c03;
		loop 
		fetch 	c03 into 
			CD_ESTRUTURA_w, 
			VL_CONTA_w, 
			IE_CALCULA_w, 
			PR_DESCONTO_w, 
			VL_DESCONTO_w, 
			VL_LIQUIDO_w, 
			CD_SETOR_ATENDIMENTO_w, 
			CD_MEDICO_w, 
			ie_desc_material_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			insert into conta_paciente_desc_item(NR_SEQUENCIA, 
				NR_SEQ_DESCONTO, 
				CD_ESTRUTURA, 
				DT_ATUALIZACAO, 
				NM_USUARIO, 
				VL_CONTA, 
				IE_CALCULA, 
				PR_DESCONTO, 
				VL_DESCONTO, 
				VL_LIQUIDO, 
				CD_SETOR_ATENDIMENTO, 
				CD_MEDICO, 
				ie_desc_material) 
			values (nextval('conta_paciente_desc_item_seq'), 
				nr_seq_desc_dest_w, 
				CD_ESTRUTURA_w, 
				clock_timestamp(),	 
				nm_usuario_p, 
				vl_conta_w, 
				ie_calcula_w, 
				pr_desconto_w, 
				vl_desconto_w, 
				vl_liquido_w, 
				cd_setor_atendimento_w, 
				cd_medico_w, 
				ie_desc_material_w);
		end loop;
		close c03;
	 
		end;
	end loop;
	close C20;
end if;
 
 
 
select	count(*) 
into STRICT	cont_w 
from	atendimento_pacote a 
where	a.nr_seq_proc_origem in (SELECT x.nr_sequencia 
	from 	procedimento_paciente x 
	where 	x.nr_interno_conta = nr_interno_conta_p);
 
 
if (cont_w > 0) then 
 
	select	max(nr_atendimento), 
		max(cd_convenio_parametro), 
		max(cd_categoria_parametro), 
		max(cd_estabelecimento) 
	into STRICT	nr_atendimento_w, 
		cd_convenio_parametro_w, 
		cd_categoria_parametro_w, 
		cd_estabelecimento_w 
	from	conta_paciente 
	where	nr_interno_conta	= nr_interno_conta_p;
 
 
	select	max(ie_gerar_pacote_canc_nota) 
	into STRICT	ie_gerar_pacote_canc_nota_w 
	from 	parametro_faturamento 
	where	cd_estabelecimento	= cd_estabelecimento_w;
 
 
	if (ie_gerar_pacote_canc_nota_w	= 'S') then 
 
		if (cont_desc_w = 0) then 
			CALL calcular_pacote(nr_atendimento_w, 
				nr_interno_conta_nova_w, -- nr_interno_conta_p,   OS 117087 Fabrício em 26/11/2008 
				cd_convenio_parametro_w, 
				cd_categoria_parametro_w, 
				nm_usuario_p, 
				'S', 'N', 'N', 'N', 'N');
	 
				open C40;
				loop 
				fetch C40 into	 
					c40_w;
				EXIT WHEN NOT FOUND; /* apply on C40 */
					begin 
					 
					--Buscar o procedimento de origem do pacote 
					select 	coalesce(max(cd_procedimento),0), 
						coalesce(max(ie_origem_proced),1) 
					into STRICT	cd_procedimento_w, 
						ie_origem_proced_w 
					from 	procedimento_paciente 
					where 	nr_sequencia  = c40_w.nr_seq_proc_origem;
										 
					select 	coalesce(max(nr_sequencia),0) 
					into STRICT	nr_seq_w 
					from 	procedimento_paciente 
					where 	nr_atendimento = c40_w.nr_atendimento 
					and 	cd_procedimento = cd_procedimento_w 
					and 	ie_origem_proced = ie_origem_proced_w 
					and 	nr_seq_proc_pacote = nr_sequencia;
					 
					if (nr_seq_w > 0) then 
						 
						select 	coalesce(max(nr_sequencia),0) 
						into STRICT	nr_seq_atend_pacote_w 
						from 	atendimento_pacote 
						where 	nr_seq_procedimento = nr_seq_w 
						and 	nr_atendimento = c40_w.nr_atendimento;
						 
						update 	atendimento_pacote 
						set 	dt_inicio_pacote = c40_w.dt_inicio_pacote, 
							dt_final_pacote = c40_w.dt_final_pacote 
						where 	nr_sequencia = nr_seq_atend_pacote_w 
						and 	nr_atendimento = c40_w.nr_atendimento;
						 
					end if;					
					 
					end;
				end loop;
				close C40;
		end if;
 
		select	count(*) 
		into STRICT	cont_w 
		from	atendimento_pacote a 
		where	a.nr_seq_proc_origem in (SELECT x.nr_sequencia 
			from 	procedimento_paciente x 
			where 	x.nr_interno_conta = nr_interno_conta_nova_w);
 
		if (cont_w > 0) and (cont_desc_w = 0) then 
			CALL calcular_pacote(nr_atendimento_w, 
				nr_interno_conta_nova_w, -- nr_interno_conta_p,   OS 117087 Fabrício em 26/11/2008 
				cd_convenio_parametro_w, 
				cd_categoria_parametro_w, 
				nm_usuario_p, 
				'N', 'S', 'S', 'S', 'N');
 
		end if;
	end if;
end if;
 
 
open C10;
loop 
fetch C10 into	 
	c10_w;
EXIT WHEN NOT FOUND; /* apply on C10 */
	begin 
	 
	select	nextval('conta_paciente_etapa_seq') 
	into STRICT	nr_seq_etapa_w 
	;
 
	 
	insert	into conta_paciente_etapa(	 nr_sequencia, 
						 nr_interno_conta, 
						 dt_atualizacao, 
						 nm_usuario, 
						 dt_etapa, 
						 nr_seq_etapa, 
						 cd_setor_atendimento, 
						 cd_pessoa_fisica, 
						 nr_seq_motivo_dev, 
						 ds_observacao, 
						 dt_atualizacao_nrec, 
						 nm_usuario_nrec, 
						 dt_fim_etapa, 
						 dt_periodo_inicial, 
						 dt_periodo_final) 
			values (	nr_seq_etapa_w, 
						nr_interno_conta_nova_w, 
						clock_timestamp(), 
						nm_usuario_p, 
						c10_w.dt_etapa, 
						c10_w.nr_seq_etapa, 
						c10_w.cd_setor_atendimento, 
						c10_w.cd_pessoa_fisica, 
						c10_w.nr_seq_motivo_dev, 
						c10_w.ds_observacao, 
						clock_timestamp(), 
						nm_usuario_p, 
						c10_w.dt_fim_etapa, 
						c10_w.dt_periodo_inicial, 
						c10_w.dt_periodo_final);
 
	insert into conta_paciente_etapa_dev(	nr_sequencia, 
						nr_seq_etapa, 
						nr_seq_motivo, 
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						ds_observacao) 
			SELECT			nextval('conta_paciente_etapa_dev_seq'), 
						nr_seq_etapa_w, 
						a.nr_seq_motivo, 
						clock_timestamp(), 
						nm_usuario_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						a.ds_observacao 
			from	conta_paciente_etapa_dev a 
			where	a.nr_seq_etapa	= c10_w.nr_sequencia;
		 
	end;
end loop;
close C10;
CALL Gerar_conta_paciente_guia(nr_interno_conta_nova_w, 2);
CALL Atualizar_Resumo_Conta(nr_interno_conta_nova_w, 2);
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_conta_paciente ( nr_interno_conta_p bigint, nm_usuario_p text) FROM PUBLIC;

