-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_gerar_result_imp (nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text, qt_erro_p INOUT text, lista_prescricao_p INOUT text, lista_seq_prescr_p INOUT text, lista_usuario_aprov_p INOUT text) AS $body$
DECLARE

 
 
nr_prescricao_w			bigint;
nr_seq_prescr_w			integer;
nr_seq_resultado_w		bigint;
nr_seq_exame_w			bigint;
ie_sexo_w			varchar(5);
nr_anos_w			double precision;
nr_seq_material_w		bigint;
sigla_equip_w			varchar(10);
nr_seq_exame_atualizar_w	bigint;	
ie_formato_resultado_w		varchar(3);
ie_campo_calculo_w		varchar(1);
ie_formato_w			varchar(1);
ds_campo_w			varchar(60);

nr_sequencia_w			bigint;
nr_seq_exame_imp_w		bigint;
cd_tipo_registro_w		varchar(15);
cd_exame_w			varchar(10);
cd_material_w			varchar(15);
cd_parametro_w			varchar(15);
ds_lista_exame_w		varchar(2000);
nm_usuario_imp_w		varchar(15);
unidade_medida_w		varchar(255);
ds_referencia_w			varchar(255);
ds_observacao_w			varchar(255);
vl_resultado_w			varchar(2000);
nm_usuario_aprov_w		varchar(15);
sql_err_w			varchar(255);
ds_separador_dec_w		varchar(2);
ie_rest_estab_novo_inter_w	varchar(1);

C01 CURSOR FOR 
	SELECT	/*+ INDEX(a LABIMPE_I4) */ 
		distinct 
		a.nr_prescricao, 
		a.nr_seq_prescr, 
		b.nr_seq_exame, 
		a.ie_sexo, 
		a.nr_anos, 
		a.nr_seq_material, 
		a.sigla_equip, 
		nm_usuario_aprov 
	from	lab_importacao_exame a, 
		prescr_procedimento b 
	where	coalesce(a.dt_integracao::text, '') = '' 
	and	a.nr_prescricao = b.nr_prescricao 
	and	a.nr_seq_prescr = b.nr_sequencia 
	and	(a.nr_prescricao IS NOT NULL AND a.nr_prescricao::text <> '') 
	and	(a.nr_seq_prescr IS NOT NULL AND a.nr_seq_prescr::text <> '')	 
	and	(('N' = ie_rest_estab_novo_inter_w) or (a.cd_estabelecimento = cd_estabelecimento_p));

C02 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_exame, 
		cd_tipo_registro, 
		cd_exame, 
		cd_material, 
		cd_parametro, 
		ds_lista_exame, 
		nm_usuario_imp, 
		unidade_medida, 
		ds_referencia, 
		ds_observacao, 
		vl_resultado 
	from	lab_importacao_exame 
	where	nr_prescricao 	= nr_prescricao_w 
	and	nr_seq_prescr	= nr_seq_prescr_w 
	and	coalesce(dt_integracao::text, '') = '' 
	order by 1;
	

BEGIN 
qt_erro_p := 0;
 
select 	coalesce(MAX(ie_restringe_estab_novo_inter),'N') 
into STRICT 	ie_rest_estab_novo_inter_w 
from 	lab_parametro 
where 	cd_estabelecimento = cd_estabelecimento_p;
 
open C01;
loop 
fetch C01 into	 
	nr_prescricao_w, 
	nr_seq_prescr_w, 
	nr_seq_exame_w, 
	ie_sexo_w, 
	nr_anos_w, 
	nr_seq_material_w, 
	sigla_equip_w, 
	nm_usuario_aprov_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	begin	 
	CALL Gera_Exame_Result_Lab(nr_prescricao_w,nr_seq_prescr_w,'N','N','N', nm_usuario_p);
	exception 
	when others then 
 
		sql_err_w 		:= substr(SQLERRM, 1, 200);
 
		update	lab_importacao_exame 
		set 	dt_erro = clock_timestamp(), 
			ds_erro = WHEB_MENSAGEM_PCK.get_texto(277569,null) || sql_err_w 
		where	nr_seq_prescr = nr_seq_prescr_w 
		and	nr_prescricao = nr_prescricao_w;
 
		 
		 
		qt_erro_p := 1;
	end;
		 
	select 	coalesce(max(nr_seq_resultado),0) 
	into STRICT	nr_seq_resultado_w 
	from 	exame_lab_resultado 
	where 	nr_prescricao = nr_prescricao_w;
 
	if (nr_seq_resultado_w > 0) then 
	 
		begin 
			CALL Gera_Resultado_Lab_imp(nr_seq_resultado_w,nr_prescricao_w,nr_seq_prescr_w,nr_seq_exame_w,nr_seq_material_w,nr_anos_w,ie_sexo_w, nm_usuario_p);
		exception 
		when others then 
			sql_err_w 		:= substr(SQLERRM, 1, 200);
			 
			update	lab_importacao_exame 
			set 	dt_erro = clock_timestamp(), 
				ds_erro = WHEB_MENSAGEM_PCK.get_texto(277572,null) || sql_err_w 
			where	nr_seq_prescr = nr_seq_prescr_w 
			and	nr_prescricao = nr_prescricao_w;	
			 
			qt_erro_p := 1;
		end;
				 
		open C02;
		loop 
		fetch C02 into	 
			nr_sequencia_w, 
			nr_seq_exame_imp_w, 
			cd_tipo_registro_w, 
			cd_exame_w,			 
			cd_material_w, 
			cd_parametro_w, 
			ds_lista_exame_w, 
			nm_usuario_imp_w, 
			unidade_medida_w, 
			ds_referencia_w, 
			ds_observacao_w, 
			vl_resultado_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			 
			select 	coalesce(max(ds_separador_decimal),',') 
			into STRICT	ds_separador_dec_w 
			from 	equipamento_lab 
			where	ds_sigla = sigla_equip_w;
			 
			select 	max(ie_formato_resultado) 
			into STRICT	ie_formato_resultado_w 
			from	exame_laboratorio 
			where	nr_seq_exame = nr_seq_exame_imp_w;
			 
			 
			select 	max(a.nr_seq_exame)  
			into STRICT	nr_seq_exame_atualizar_w 
			from 	exame_laboratorio b, 
				exame_lab_result_item a 
			where 	b.nr_seq_exame = a.nr_seq_exame 
			and 	Obter_Equip_Exame_integracao(cd_parametro_w, sigla_equip_w, 1) = b.nr_seq_exame 
			and 	a.nr_seq_resultado = nr_seq_resultado_w 
			and 	a.nr_seq_prescr  = nr_seq_prescr_w;
 
			select 	max(obter_formato_result_exame(a.nr_seq_exame, nr_seq_material_w)) ie_formato_resultado 
			into STRICT 	ie_formato_resultado_w 
			from 	exame_laboratorio b, exame_lab_result_item a 
			where 	b.nr_seq_exame = a.nr_seq_exame 
			and 	Obter_Equip_Exame_integracao(cd_parametro_w, sigla_equip_w, 1) = b.nr_seq_exame 
			and 	a.nr_seq_resultado = nr_seq_resultado_w 
			and 	a.nr_seq_prescr  = nr_seq_prescr_w;
 
 
			select 	max(b.ie_campo_calculo) 
			into STRICT	ie_campo_calculo_w 
			from 	exame_laboratorio b, 
				exame_lab_result_item a 
			where 	b.nr_seq_exame = a.nr_seq_exame 
			and 	Obter_Equip_Exame_integracao(cd_parametro_w, sigla_equip_w, 1) = b.nr_seq_exame 
			and 	a.nr_seq_resultado = nr_seq_resultado_w 
			and 	a.nr_seq_prescr  = nr_seq_prescr_w;
 
			if (coalesce(nr_seq_exame_atualizar_w::text, '') = '') then 
				 
				select 	max(a.nr_seq_exame) 
				into STRICT	nr_seq_exame_atualizar_w 
				from 	exame_laboratorio b, exame_lab_result_item a  
				where 	b.nr_seq_exame = a.nr_seq_exame 
				and 	coalesce(b.cd_exame_integracao, b.cd_exame) = cd_parametro_w 
				and 	a.nr_seq_resultado = nr_seq_resultado_w 
				and 	a.nr_seq_prescr  = nr_seq_prescr_w;
 
				select 	max(obter_formato_result_exame(a.nr_seq_exame, nr_seq_material_w)) ie_formato_resultado 
				into STRICT 	ie_formato_resultado_w				 
				from 	exame_laboratorio b, exame_lab_result_item a  
				where 	b.nr_seq_exame = a.nr_seq_exame 
				and 	coalesce(b.cd_exame_integracao, b.cd_exame) = cd_parametro_w 
				and 	a.nr_seq_resultado = nr_seq_resultado_w 
				and 	a.nr_seq_prescr  = nr_seq_prescr_w;
 
				select 	max(b.ie_campo_calculo) 
				into STRICT	ie_campo_calculo_w				 
				from 	exame_laboratorio b, exame_lab_result_item a  
				where 	b.nr_seq_exame = a.nr_seq_exame 
				and 	coalesce(b.cd_exame_integracao, b.cd_exame) = cd_parametro_w 
				and 	a.nr_seq_resultado = nr_seq_resultado_w 
				and 	a.nr_seq_prescr  = nr_seq_prescr_w;
			 
			end if;
			 
			ds_campo_w    := 'ds_resultado';
			 
			if (nr_seq_exame_atualizar_w IS NOT NULL AND nr_seq_exame_atualizar_w::text <> '') then 
			 
				update	lab_importacao_exame 
				set 	dt_integracao = clock_timestamp() 
				where	nr_sequencia = nr_sequencia_w;
			     
				 ie_formato_w   := substr(ie_formato_resultado_w,1,1);
				 
				if (ie_formato_resultado_w = 'VP') then 
					if (ie_campo_calculo_w = 'P') then 
						ie_formato_w := 'V';
					elsif (ie_campo_calculo_w = 'V') then 
						ie_formato_w := 'P';
					end if;			
				end if;
				 
				if (ie_formato_resultado_w = 'DV') and (length(replace(replace(vl_resultado_w,',','.'),'.','')) = coalesce(length(obter_somente_numero(replace(replace(vl_resultado_w,',','.'),'.',''))),0)) then		 
					ie_formato_w := 'V';				
				end if;
 
				if (ie_formato_w = 'P') or (ie_formato_w = 'V') then 
					if (vl_resultado_w = '') then 
						vl_resultado_w := '0';
					end if;
					 
					if (ds_separador_dec_w = '.') then 
						vl_resultado_w  := replace(vl_resultado_w,',','');
					else 
						vl_resultado_w  := replace(vl_resultado_w,'.','');
					end if;
					 
				end if;
				 
				if (ie_formato_w = 'P') then 
					ds_campo_w  := 'pr_resultado';
				elsif (ie_formato_w = 'V') then 
					ds_campo_w := 'qt_resultado';
				else 
					vl_resultado_w := replace(vl_resultado_w,'&',chr(13)||chr(10));
				end if;
				 
				begin 
				if (ds_campo_w = 'ds_resultado') then 
					update 	exame_lab_result_item 
					set 	ds_resultado = vl_resultado_w 
					where 	nr_seq_resultado = nr_seq_resultado_w 
					and 	nr_seq_exame = nr_seq_exame_atualizar_w 
					and 	nr_seq_prescr = nr_seq_prescr_w;
				elsif (ds_campo_w = 'pr_resultado') then 
					update 	exame_lab_result_item 
					set 	pr_resultado = replace(vl_resultado_w,'.',',') 
					where 	nr_seq_resultado = nr_seq_resultado_w 
					and 	nr_seq_exame = nr_seq_exame_atualizar_w 
					and 	nr_seq_prescr = nr_seq_prescr_w;
				else 
					update 	exame_lab_result_item 
					set 	qt_resultado = replace(vl_resultado_w,'.',',') 
					where 	nr_seq_resultado = nr_seq_resultado_w 
					and 	nr_seq_exame = nr_seq_exame_atualizar_w 
					and 	nr_seq_prescr = nr_seq_prescr_w;					
				end if;				
				exception 
				when others then 
					sql_err_w 		:= substr(SQLERRM, 1, 200);					
					CALL gerar_lab_log_interf_imp(NR_PRESCRICAO_w,NR_SEQ_PRESCR_w,NR_SEQ_EXAME_w,NR_SEQ_MATERIAL_w,null,WHEB_MENSAGEM_PCK.get_texto(277573,null) || vl_resultado_w || ' ' || sql_err_w,null,NM_USUARIO_P,'N');
					qt_erro_p := 1;					
				end;
				 
				if (nm_usuario_imp_w IS NOT NULL AND nm_usuario_imp_w::text <> '') then 
				 
					update 	exame_lab_result_item 
					set 	nm_usuario = nm_usuario_imp_w, 
						ds_unidade_medida = CASE WHEN unidade_medida_w = NULL THEN  ds_unidade_medida   ELSE unidade_medida_w END , 
						ds_observacao = CASE WHEN ds_observacao_w = NULL THEN  ds_observacao   ELSE ds_observacao_w END , 
						ds_referencia = CASE WHEN ds_referencia_w = NULL THEN  ds_referencia   ELSE ds_referencia_w END  
					where 	nr_seq_resultado = nr_seq_resultado_w 
					and 	nr_seq_exame = nr_seq_exame_atualizar_w 
					and 	nr_seq_prescr = nr_seq_prescr_w;
					 
				else 
				 
					update	lab_importacao_exame 
					set 	ds_erro = WHEB_MENSAGEM_PCK.get_texto(295569,null) || cd_parametro_w 
					where	nr_sequencia = nr_sequencia_w;
					 
					qt_erro_p := 1;	
				 
				end if;
			else 
				update	lab_importacao_exame 
				set 	dt_integracao = clock_timestamp(), 
					ds_erro = WHEB_MENSAGEM_PCK.get_texto(277574,null) || cd_parametro_w 
				where	nr_sequencia = nr_sequencia_w;	
				qt_erro_p := 1;				
			end if;			
			 
			end;
		end loop;
		close C02;
		 
		begin 
			CALL LAB_Calcular_Aprovar_Exame(nr_seq_resultado_w,nr_prescricao_w,nr_seq_prescr_w,'I',coalesce(nm_usuario_aprov_w,nm_usuario_p));
		exception 
		when others then 
			CALL gerar_lab_log_interf_imp(NR_PRESCRICAO_w,NR_SEQ_PRESCR_w,NR_SEQ_EXAME_w,NR_SEQ_MATERIAL_w,null,WHEB_MENSAGEM_PCK.get_texto(277576,null),null,NM_USUARIO_P,'N');
			qt_erro_p := 1;
		end;
		 
	else 
		update	lab_importacao_exame 
		set 	dt_integracao = clock_timestamp(), 
			ds_erro = WHEB_MENSAGEM_PCK.get_texto(277577,null) 
		where	nr_seq_prescr = nr_seq_prescr_w 
		and	nr_prescricao = nr_prescricao_w;
		qt_erro_p := 1;		
	 
	end if;
	 
	end;
end loop;
close C01;
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_gerar_result_imp (nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text, qt_erro_p INOUT text, lista_prescricao_p INOUT text, lista_seq_prescr_p INOUT text, lista_usuario_aprov_p INOUT text) FROM PUBLIC;

