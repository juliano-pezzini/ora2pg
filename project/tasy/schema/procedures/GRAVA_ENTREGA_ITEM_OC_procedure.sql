-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE grava_entrega_item_oc ( nr_ordem_compra_p bigint, nr_item_oci_p bigint, nr_cot_compra_p bigint, nr_item_cot_compra_p bigint, nr_seq_fornecedor_p bigint, nm_usuario_p text, qt_material_p bigint, dt_entrega_p timestamp, ds_observacao_p text) AS $body$
DECLARE



qt_data_entrega_item_w	integer;
qt_data_cot_entr_item_w	integer;
qt_entrega_w		double precision;
dt_entrega_w		timestamp;
ds_observacao_w		varchar(255);
ie_gerado_bionexo_w	varchar(1);
dt_prevista_entrega_w	timestamp;
nr_seq_agrup_w		bigint;
qt_material_w		double precision;
qt_prevista_entrega_w	double precision;
qt_numero_entregas_w	bigint;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
ie_considera_somente_uteis_w	varchar(1);
qt_cot_compra_forn_item_en_w		bigint;


c01 CURSOR FOR
SELECT	a.dt_entrega,
	a.qt_entrega
from	cot_compra_forn_item_en a,
	cot_compra_forn_item b
where	b.nr_cot_compra 		= nr_cot_compra_p
and	b.nr_item_cot_compra  	= nr_item_cot_compra_p
and	a.nr_seq_cot_item_forn	= b.nr_sequencia
and	b.nr_item_cot_compra 	= a.nr_item_cot_compra
and	b.nr_cot_compra		= a.nr_cot_compra
and	b.nr_seq_cot_forn 		= nr_seq_fornecedor_p
and	ie_gerado_bionexo_w	in ('S','X')
and	qt_data_entrega_item_w 	> 0
and ((coalesce(nr_seq_agrup_w::text, '') = '') or ((nr_seq_agrup_w IS NOT NULL AND nr_seq_agrup_w::text <> '') and exists (
	SELECT	1
	from	cot_compra_solic_agrup x,
  cot_compra_solic_agrup_en y
	where	a.nr_cot_compra = x.nr_cot_compra
	and	a.nr_item_cot_compra = x.nr_item_cot_compra
  and y.nr_seq_agrup = x.nr_sequencia
  and y.dt_entrega = a.dt_entrega
  and y.nr_seq_agrup = nr_seq_agrup_w))
  )


union

select	d.dt_entrega,
	d.qt_entrega
from	cot_compra_forn_item b,
	cot_compra_solic_agrup c,
	cot_compra_solic_agrup_en d
where	b.nr_cot_compra = c.nr_cot_compra
and	b.nr_item_cot_compra = c.nr_item_cot_compra
and	d.nr_seq_agrup	= c.nr_sequencia
and	((c.nr_sequencia = nr_seq_agrup_w) or (coalesce(nr_seq_agrup_w::text, '') = ''))
and	c.nr_cot_compra		=nr_cot_compra_p
and	b.nr_seq_cot_forn	=nr_seq_fornecedor_p
and	b.nr_item_cot_compra  	= nr_item_cot_compra_p
and	ie_gerado_bionexo_w	in ('S','X')
and	not exists (select	1 --adicionado not para pegar preferencialmente da tabela cot_compra_forn_item_en
		from	cot_compra_forn_item_en x
		where	x.nr_cot_compra = b.nr_cot_compra
		and	x.nr_item_cot_compra = b.nr_item_cot_compra
		and	x.nr_seq_cot_item_forn	= b.nr_sequencia)

union

select 
d.dt_entrega_solicitada,
d.qt_entrega_solicitada
from	cot_compra_item_entrega a,
	cot_compra_solic_agrup b,
	ordem_compra_item c,
	solic_compra_item_entrega d
where	a.nr_cot_compra = nr_cot_compra_p
and	a.nr_item_cot_compra = nr_item_cot_compra_p 
and	a.nr_cot_compra = b.nr_cot_compra
and	a.nr_item_cot_compra = b.nr_item_cot_compra
and	c.nr_ordem_compra = nr_ordem_compra_p 
and	c.nr_item_oci = nr_item_oci_p 
and	c.nr_solic_compra = b.nr_solic_compra
and	c.nr_item_solic_compra = b.nr_item_solic_compra
and	d.nr_solic_compra = b.nr_solic_compra
and	d.nr_item_solic_compra = b.nr_item_solic_compra
and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(d.dt_entrega_solicitada) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_entrega)
and	(nr_seq_agrup_w IS NOT NULL AND nr_seq_agrup_w::text <> '')
and	not exists (select 1 from cot_compra_solic_agrup_en x where x.nr_seq_agrup = b.nr_sequencia)
and	ie_gerado_bionexo_w in ('X')
order by 1 desc
;

c02 CURSOR FOR
SELECT	a.dt_entrega,
	a.qt_entrega,
	a.ds_observacao
from	cot_compra_item_entrega a,
	cot_compra_item b
where	a.nr_cot_compra 		= b.nr_cot_compra
and	a.nr_item_cot_compra 	= b.nr_item_cot_compra
and	b.nr_cot_compra 		= nr_cot_compra_p
and	b.nr_item_cot_compra 	= nr_item_cot_compra_p
and	ie_gerado_bionexo_w	= 'N'
and	qt_data_cot_entr_item_w	> 0
and not exists (
	SELECT	1
	from	cot_compra_solic_agrup x
	where	b.nr_cot_compra = x.nr_cot_compra
	and	b.nr_item_cot_compra = x.nr_item_cot_compra)

union

select	d.dt_entrega,
	d.qt_entrega,
	a.ds_observacao
from	cot_compra_item_entrega a,
	cot_compra_item b,
	cot_compra_solic_agrup c,
	cot_compra_solic_agrup_en d
where	a.nr_cot_compra 	= b.nr_cot_compra
and	a.nr_item_cot_compra 	= b.nr_item_cot_compra
and	b.nr_cot_compra 	= c.nr_cot_compra
and	b.nr_item_cot_compra 	= c.nr_item_cot_compra
and	d.nr_seq_entrega	= a.nr_sequencia
and	d.nr_seq_agrup		= c.nr_sequencia
and	b.nr_cot_compra 	= nr_cot_compra_p
and	b.nr_item_cot_compra 	= nr_item_cot_compra_p
and	((c.nr_sequencia		= nr_seq_agrup_w) or (coalesce(nr_seq_agrup_w::text, '') = ''))
and	ie_gerado_bionexo_w	= 'N'
and	qt_data_cot_entr_item_w	> 0
order by 1 desc;


BEGIN


select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	ordem_compra
where	nr_ordem_compra = nr_ordem_compra_p;

ie_considera_somente_uteis_w := Obter_Param_Usuario(913, 14, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_considera_somente_uteis_w);
--Na solicitacao gera com a data de entega em dias NAO UTEIS,porem ao gerar a ordem a data prevista joga para o proxima dia util. Desta forma tratamos com este parametro da solicitacao de compras. OS 907808
select	count(*)
into STRICT	qt_data_entrega_item_w
from	cot_compra_forn_item_en a,
	cot_compra_forn_item b
where	b.nr_cot_compra 		= nr_cot_compra_p
and	b.nr_item_cot_compra  	= nr_item_cot_compra_p
and	a.nr_seq_cot_item_forn	= b.nr_sequencia
and	b.nr_item_cot_compra 	= a.nr_item_cot_compra
and	b.nr_cot_compra		= a.nr_cot_compra
and	b.nr_seq_cot_forn		= nr_seq_fornecedor_p;

select	coalesce(max(ie_gerado_bionexo),'N')
into STRICT	ie_gerado_bionexo_w
from	cot_compra_forn
where	nr_cot_compra	= nr_cot_compra_p
and	nr_sequencia 	= nr_seq_fornecedor_p;

select	count(*)
into STRICT	qt_data_cot_entr_item_w
from	cot_compra_item_entrega a,
	cot_compra_item b
where	a.nr_cot_compra 		= b.nr_cot_compra
and	a.nr_item_cot_compra 	= b.nr_item_cot_compra
and	b.nr_cot_compra 		= nr_cot_compra_p
and	b.nr_item_cot_compra	= nr_item_cot_compra_p
order by 1 desc;

if (qt_data_entrega_item_w  > 0) and (ie_gerado_bionexo_w in ('S','X')) then	/*Download com Programacao de entregas na interface*/
	begin

	select	nr_seq_agrup
	into STRICT	nr_seq_agrup_w
	from	ordem_compra_item
	where	nr_ordem_compra 	= nr_ordem_compra_p
	and	nr_item_oci		= nr_item_oci_p;

	open c01;
	loop
	fetch c01 into
		dt_entrega_w,
		qt_entrega_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin


		select	count(*)
		into STRICT	qt_data_entrega_item_w
		from	ordem_compra_item_entrega
		where	nr_ordem_compra 		= nr_ordem_compra_p
		and	nr_item_oci		= nr_item_oci_p
		and	dt_prevista_entrega 	= dt_entrega_w
		and	coalesce(dt_cancelamento::text, '') = '';

		if (qt_data_entrega_item_w = 0) then
			insert into ordem_compra_item_entrega(
				nr_sequencia,
				nr_ordem_compra,
				nr_item_oci,
				dt_prevista_entrega,
				dt_entrega_original,
				dt_real_entrega,
				dt_entrega_limite,
				qt_prevista_entrega,
				qt_real_entrega,
				dt_atualizacao,
				nm_usuario,
				ds_observacao)
			values (	nextval('ordem_compra_item_entrega_seq'),
				nr_ordem_compra_p,
				nr_item_oci_p,
				dt_entrega_w,
				dt_entrega_w,
				null,
				null,
				qt_entrega_w,
				null,
				clock_timestamp(),
				nm_usuario_p,
				null);
		else
			update	ordem_compra_item_entrega
			set	qt_prevista_entrega 	= qt_prevista_entrega + qt_entrega_w,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where	nr_ordem_compra 		= nr_ordem_compra_p
			and	nr_item_oci		= nr_item_oci_p
			and	dt_prevista_entrega 	= dt_entrega_w
			and	coalesce(dt_cancelamento::text, '') = '';
		end if;

		exception
		when others then
			/*(-20011,'Erro no cursor c01 ao gravar ordem_compra_item_entrega');*/

			CALL wheb_mensagem_pck.exibir_mensagem_abort(190324);
		end;
	end loop;
	close c01;
	end;

	select	count(*)
	into STRICT	qt_numero_entregas_w
	from	ordem_compra_item_entrega
	where	nr_ordem_compra 	= nr_ordem_compra_p
	and	nr_item_oci		= nr_item_oci_p;

	if (qt_numero_entregas_w = 1) then

		select	coalesce(sum(qt_prevista_entrega),0)
		into STRICT	qt_prevista_entrega_w
		from	ordem_compra_item_entrega
		where	nr_ordem_compra 	= nr_ordem_compra_p
		and	nr_item_oci		= nr_item_oci_p;

		select	coalesce(max(qt_material),0)
		into STRICT	qt_material_w
		from	ordem_compra_item
		where	nr_ordem_compra 	= nr_ordem_compra_p
		and	nr_item_oci		= nr_item_oci_p;

		select	count(*)
		into STRICT	qt_cot_compra_forn_item_en_w
		from	cot_compra_forn_item_en a,
				cot_compra_forn_item b
		where	b.nr_cot_compra 		= nr_cot_compra_p
		and		b.nr_item_cot_compra  	= nr_item_cot_compra_p
		and		a.nr_seq_cot_item_forn	= b.nr_sequencia
		and		b.nr_item_cot_compra 	= a.nr_item_cot_compra
		and		b.nr_cot_compra			= a.nr_cot_compra
		and		b.nr_seq_cot_forn 		= nr_seq_fornecedor_p
		and		ie_gerado_bionexo_w		in ('S','X');

		if (qt_prevista_entrega_w > 0) and (qt_prevista_entrega_w <> qt_material_w) and (qt_cot_compra_forn_item_en_w = 0) then

			update	ordem_compra_item_entrega
			set	qt_prevista_entrega 	= qt_material_w
			where	nr_ordem_compra 	= nr_ordem_compra_p
			and	nr_item_oci		= nr_item_oci_p;
		end if;
	end if;
elsif (qt_data_cot_entr_item_w > 1) and (ie_gerado_bionexo_w = 'N') then	/*Geracao de ordem pela cotacao com mais de uma entrega por item Parametro 22*/
	begin
	select	nr_seq_agrup
	into STRICT	nr_seq_agrup_w
	from	ordem_compra_item
	where	nr_ordem_compra 	= nr_ordem_compra_p
	and	nr_item_oci		= nr_item_oci_p;

	open c02;
	loop
	fetch c02 into
		dt_entrega_w,
		qt_entrega_w,
		ds_observacao_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		select	count(*)
		into STRICT	qt_data_entrega_item_w
		from	ordem_compra_item_entrega
		where	nr_ordem_compra 	= nr_ordem_compra_p
		and	nr_item_oci		= nr_item_oci_p
		and	dt_prevista_entrega 	= dt_entrega_w
		and	coalesce(dt_cancelamento::text, '') = '';

		if (qt_data_entrega_item_w = 0) then
			insert into ordem_compra_item_entrega(
				nr_sequencia,
				nr_ordem_compra,
				nr_item_oci,
				dt_prevista_entrega,
				dt_real_entrega,
				dt_entrega_original,
				qt_prevista_entrega,
				qt_real_entrega,
				dt_atualizacao,
				nm_usuario,
				ds_observacao)
			values (	nextval('ordem_compra_item_entrega_seq'),
				nr_ordem_compra_p,
				nr_item_oci_p,
				dt_entrega_w,
				null,
				dt_entrega_w,
				qt_entrega_w,
				null,
				clock_timestamp(),
				nm_usuario_p,
				ds_observacao_w);
		else
			update	ordem_compra_item_entrega
			set	qt_prevista_entrega 	= qt_prevista_entrega + qt_entrega_w,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where	nr_ordem_compra		= nr_ordem_compra_p
			and	nr_item_oci		= nr_item_oci_p
			and	dt_prevista_entrega 	= dt_entrega_w
			and	coalesce(dt_cancelamento::text, '') = '';
		end if;

		exception
		when others then
			/*(-20011,'Erro no cursor c02 ao gravar ordem_compra_item_entrega');*/

			CALL wheb_mensagem_pck.exibir_mensagem_abort(190325);
		end;
	end loop;
	close c02;
	end;
else
	begin

	insert into ordem_compra_item_entrega(
		nr_sequencia,
		nr_ordem_compra,
		nr_item_oci,
		dt_prevista_entrega,
		dt_real_entrega,
		dt_entrega_original,
		dt_entrega_limite,
		qt_prevista_entrega,
		qt_real_entrega,
		dt_atualizacao,
		nm_usuario,
		ds_observacao)
	values (nextval('ordem_compra_item_entrega_seq'),
		nr_ordem_compra_p,
		nr_item_oci_p,
		CASE WHEN ie_considera_somente_uteis_w='N' THEN dt_entrega_p  ELSE obter_proximo_dia_util(cd_estabelecimento_w, dt_entrega_p) END ,
		null,
		CASE WHEN ie_considera_somente_uteis_w='N' THEN dt_entrega_p  ELSE obter_proximo_dia_util(cd_estabelecimento_w, dt_entrega_p) END ,
		CASE WHEN ie_considera_somente_uteis_w='N' THEN dt_entrega_p  ELSE obter_proximo_dia_util(cd_estabelecimento_w, dt_entrega_p) END ,
		qt_material_p,
		null,
		clock_timestamp(),
		nm_usuario_p,
		ds_observacao_p);
	exception
	when others then
		/*(-20011,'erro ao gravar ordem_compra_item_entrega');*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(190326);
	end;

	select	min(dt_prevista_entrega)
	into STRICT	dt_prevista_entrega_w
	from	ordem_compra_item_entrega
	where	nr_ordem_compra = nr_ordem_compra_p;

	if (dt_prevista_entrega_w IS NOT NULL AND dt_prevista_entrega_w::text <> '') then
		update	ordem_compra
		set	dt_entrega = dt_prevista_entrega_w
		where	nr_ordem_compra = nr_ordem_compra_p;
	end if;


end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE grava_entrega_item_oc ( nr_ordem_compra_p bigint, nr_item_oci_p bigint, nr_cot_compra_p bigint, nr_item_cot_compra_p bigint, nr_seq_fornecedor_p bigint, nm_usuario_p text, qt_material_p bigint, dt_entrega_p timestamp, ds_observacao_p text) FROM PUBLIC;

