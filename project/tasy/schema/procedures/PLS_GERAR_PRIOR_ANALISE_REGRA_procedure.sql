-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_prior_analise_regra ( nm_usuario_p text, cd_estabelecimento_p text, qt_dias_p bigint, nr_seq_auditoria_p bigint default null) AS $body$
DECLARE


nr_idade_benef_w		smallint;
ie_benef_vip_w			varchar(1);
ie_prioridade_proc_w		varchar(1);
ie_prioridade_solic_w		varchar(1);
qt_proc_jud_benef_w		bigint := 0;
qt_bo_benef_w			bigint := 0;
nr_seq_prestador_w		pls_requisicao.nr_seq_prestador%type;
nr_seq_segurado_w		pls_requisicao.nr_seq_segurado%type;
ie_carater_atendimento_w	pls_requisicao.ie_carater_atendimento%type;
cd_medico_solicitante_w		pls_requisicao.cd_medico_solicitante%type;
dt_solicitacao_w		pls_requisicao.dt_solicitacao%type;
nr_seq_ranking_w		pls_prestador_ranking.nr_seq_ranking%type;
vl_total_proc_w			pls_requisicao_proc.vl_procedimento%type := 0;
qt_procedimento_w		pls_requisicao_proc.qt_procedimento%type := 0;
qt_proc_vl_apto_w		pls_requisicao_proc.qt_procedimento%type := 0;
qt_proc_risco_apto_w		pls_requisicao_proc.qt_procedimento%type := 0;
nr_seq_regra_w			pls_regra_prior_analise.nr_sequencia%type;
nr_seq_carac_benef_w		pls_contrato_caracterist.nr_seq_caracteristica%type;
nr_seq_carac_contrato_w		pls_seg_caracteristica.nr_seq_caracteristica%type;
ie_prioridade_regra_w		smallint;

C01 CURSOR FOR
	SELECT	nr_seq_requisicao,
		qt_dias_vencidos,
		nr_sequencia
	from	pls_auditoria
	where	ie_status not in ('C', 'F')
	and	(nr_seq_requisicao IS NOT NULL AND nr_seq_requisicao::text <> '')
	and	((pls_obter_se_controle_estab('RE') = 'S' and cd_estabelecimento = cd_estabelecimento_p) or (pls_obter_se_controle_estab('RE') = 'N'))
	and	trunc(dt_auditoria) >= clock_timestamp()-qt_dias_p
	and (nr_sequencia = nr_seq_auditoria_p)
	or (coalesce(nr_seq_auditoria_p, 0) = 0);

C02 CURSOR(qt_dias_vencido_pc	bigint) FOR
	SELECT	nr_sequencia,
		vl_procedimento_min,
		vl_procedimento_max,
		coalesce(ie_prioridade_proc,'N') ie_prioridade_proc,
		coalesce(ie_prioridade_solic,'N') ie_prioridade_solic,
		ie_prioridade
	from	pls_regra_prior_analise
	where (coalesce(ie_possui_proc_jud,'N') = 'N' or (coalesce(ie_possui_proc_jud,'N') = 'S' and qt_proc_jud_benef_w > 0))
	and (coalesce(ie_possui_bo,'N') = 'N' or (coalesce(ie_possui_bo,'N') = 'S' and qt_bo_benef_w > 0))
	and (coalesce(nr_seq_ranking::text, '') = '' or nr_seq_ranking = nr_seq_ranking_w)
	and (coalesce(ie_carater_atendimento::text, '') = '' or ie_carater_atendimento = ie_carater_atendimento_w)
	and (coalesce(ie_prioridade_solic,'N') = 'N' or (coalesce(ie_prioridade_solic,'N') = ie_prioridade_solic_w))
	and (coalesce(nr_idade_min::text, '') = '' or nr_idade_benef_w >= nr_idade_min)
	and (coalesce(nr_idade_max::text, '') = '' or nr_idade_benef_w <= nr_idade_max)
	and (coalesce(vl_total_proc_min::text, '') = '' or vl_total_proc_w >= vl_total_proc_min)
	and (coalesce(vl_total_proc_max::text, '') = '' or vl_total_proc_w <= vl_total_proc_max)
	and (coalesce(nr_seq_carac_benef::text, '') = '' or pls_obter_se_carac_benef(nr_seq_segurado_w, null, dt_solicitacao_w, nr_seq_carac_benef) = 'S')
	and (coalesce(nr_seq_carac_contrato::text, '') = '' or pls_obter_se_carac_benef(null, pls_obter_dados_segurado(nr_seq_segurado_w, 'NC'), dt_solicitacao_w, nr_seq_carac_contrato) = 'S')
	and (coalesce(ie_requisicao_vencida, 'N') = 'N' or (coalesce(ie_requisicao_vencida, 'N') = 'S' and qt_dias_vencido_pc > 0))
	and	((pls_obter_se_controle_estab('RE') = 'S' and cd_estabelecimento = cd_estabelecimento_p) or (pls_obter_se_controle_estab('RE') = 'N'))
	order by nr_sequencia desc;

C03 CURSOR(nr_seq_requisicao_pc	bigint) FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		vl_procedimento
	from	pls_requisicao_proc a
	where	nr_seq_requisicao = nr_seq_requisicao_pc;
	
BEGIN
for r_c01_w in C01 loop
	ie_prioridade_regra_w	:= null;
	nr_seq_regra_w		:= null;
	
	begin
		select	nr_seq_prestador,
			nr_seq_segurado,
			ie_carater_atendimento,
			cd_medico_solicitante,
			pls_obter_dados_segurado(nr_seq_segurado, 'ID'),
			clock_timestamp()
		into STRICT	nr_seq_prestador_w,
			nr_seq_segurado_w,
			ie_carater_atendimento_w,
			cd_medico_solicitante_w,
			nr_idade_benef_w,
			dt_solicitacao_w
		from	pls_requisicao
		where	nr_sequencia = r_c01_w.nr_seq_requisicao;
	exception
	when others then
		nr_seq_prestador_w		:= null;
		nr_seq_segurado_w		:= null;
		ie_carater_atendimento_w	:= null;
		cd_medico_solicitante_w		:= null;
		nr_seq_carac_benef_w		:= null;
		nr_seq_carac_contrato_w		:= null;
		nr_idade_benef_w		:= null;
		dt_solicitacao_w		:= null;
	end;
	
	begin
		select	ie_prioridade
		into STRICT	ie_prioridade_solic_w
		from	pls_prioridade_medico
		where	cd_pessoa_fisica = cd_medico_solicitante_w
		and	ie_situacao = 'A'
		order by nr_sequencia desc LIMIT 1;
	exception
	when others then
		ie_prioridade_solic_w := 'N';
	end;
	
	begin
		select	sum(vl_procedimento),
			count(1)
		into STRICT	vl_total_proc_w,
			qt_procedimento_w
		from	pls_requisicao_proc
		where	nr_seq_requisicao = r_c01_w.nr_seq_requisicao;
	exception
	when others then
		vl_total_proc_w	:= 0;
	end;
	
	select	count(1)
	into STRICT	qt_proc_jud_benef_w
	from	processo_judicial_liminar
	where	(((coalesce(ie_considera_codigo_pf, 'N') = 'N'	and nr_seq_segurado	= nr_seq_segurado_w)
	or (coalesce(ie_considera_codigo_pf, 'N') = 'S'		and pls_obter_dados_segurado(nr_seq_segurado, 'PF') = pls_obter_dados_segurado(nr_seq_segurado_w, 'PF')))
	or	nr_seq_contrato		= pls_obter_dados_segurado(nr_seq_segurado_w, 'NC'))
	and	ie_impacto_autorizacao	= 'S'
	and	ie_estagio		= 2
	and	dt_solicitacao_w between trunc(dt_inicio_validade) and fim_dia(coalesce(dt_fim_validade, dt_solicitacao_w));

	select	count(1)
	into STRICT	qt_bo_benef_w
	from	sac_boletim_ocorrencia
	where	cd_pessoa_fisica = pls_obter_dados_segurado(nr_seq_segurado_w, 'PF')
	and (coalesce(dt_cancelamento::text, '') = '' or dt_cancelamento <= clock_timestamp());

	begin
		select	nr_seq_ranking
		into STRICT	nr_seq_ranking_w
		from	pls_prestador_ranking
		where	nr_seq_prestador = nr_seq_prestador_w
		and	trunc(dt_solicitacao_w) between trunc(dt_inicio_vigencia) and trunc(coalesce(dt_fim_vigencia, dt_solicitacao_w))
		order by nr_sequencia desc LIMIT 1;
	exception
	when others then
		nr_seq_ranking_w := null;
	end;
	
	for r_c02_w in C02(r_c01_w.qt_dias_vencidos) loop
		qt_proc_vl_apto_w	:= 0;
		qt_proc_risco_apto_w	:= 0;

		for r_c03_w in C03(r_c01_w.nr_seq_requisicao) loop
			if 	(	(r_c02_w.vl_procedimento_min IS NOT NULL AND r_c02_w.vl_procedimento_min::text <> '' AND r_c02_w.vl_procedimento_max IS NOT NULL AND r_c02_w.vl_procedimento_max::text <> '' AND r_c03_w.vl_procedimento >= r_c02_w.vl_procedimento_min and r_c03_w.vl_procedimento <= r_c02_w.vl_procedimento_max) or
					((coalesce(r_c02_w.vl_procedimento_min::text, '') = '' and (r_c02_w.vl_procedimento_max IS NOT NULL AND r_c02_w.vl_procedimento_max::text <> '')) and (r_c03_w.vl_procedimento <= r_c02_w.vl_procedimento_max)) or
					(((r_c02_w.vl_procedimento_min IS NOT NULL AND r_c02_w.vl_procedimento_min::text <> '') and coalesce(r_c02_w.vl_procedimento_max::text, '') = '') and (r_c03_w.vl_procedimento >= r_c02_w.vl_procedimento_min)) or (coalesce(r_c02_w.vl_procedimento_min::text, '') = '' and coalesce(r_c02_w.vl_procedimento_max::text, '') = '')
				) then
					qt_proc_vl_apto_w	:= qt_proc_vl_apto_w + 1;
			else
					qt_proc_vl_apto_w	:= qt_proc_vl_apto_w;
			end if;
			
			begin
				select	ie_prioridade
				into STRICT	ie_prioridade_proc_w
				from	pls_prioridade_proced
				where	cd_procedimento = r_c03_w.cd_procedimento
				and	ie_origem_proced = r_c03_w.ie_origem_proced
				and	ie_situacao = 'A'
				order by nr_sequencia desc LIMIT 1;
			exception
			when others then
				ie_prioridade_proc_w := 'N';
			end;
			
			if ((r_c02_w.ie_prioridade_proc <> 'N' and ie_prioridade_proc_w = r_c02_w.ie_prioridade_proc) or (r_c02_w.ie_prioridade_proc = 'N')) then
				qt_proc_risco_apto_w := qt_proc_risco_apto_w + 1;
			end if;

			
		end loop;
		
		if (qt_proc_risco_apto_w > 0) and (qt_proc_vl_apto_w = qt_procedimento_w) then
			if (coalesce(ie_prioridade_regra_w, 10) >= r_c02_w.ie_prioridade) then
				ie_prioridade_regra_w	:= r_c02_w.ie_prioridade;
				nr_seq_regra_w		:= r_c02_w.nr_sequencia;
			end if;
		end if;
	end loop;
	
	
	if (ie_prioridade_regra_w >= 1) then
		update	pls_auditoria
		set	ie_prior_analise_regra = ie_prioridade_regra_w
		where	nr_sequencia = 	r_c01_w.nr_sequencia;
		
		CALL pls_requisicao_gravar_hist(r_c01_w.nr_seq_requisicao, 'L', wheb_mensagem_pck.get_texto(1156063,'NR_SEQ_REGRA='||nr_seq_regra_w||';'||'IE_PRIORIDADE_REGRA='||ie_prioridade_regra_w), null, nm_usuario_p);
		
		commit;
	end if;
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_prior_analise_regra ( nm_usuario_p text, cd_estabelecimento_p text, qt_dias_p bigint, nr_seq_auditoria_p bigint default null) FROM PUBLIC;

