-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_pre_fat_0150_efd (nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE

 
nr_seq_regra_efd_w		bigint;
nr_versao_efd_w			varchar(5);
tp_registro_w			varchar(4);
cd_municipio_ibge_w		varchar(7);
nr_linha_w			bigint 	:= qt_linha_p;
nr_seq_registro_w			bigint 	:= nr_sequencia_p;
ds_arquivo_w			varchar(4000);
ds_arquivo_compl_w		varchar(4000);
ds_linha_w			varchar(8000);
sep_w				varchar(1)	:= ds_separador_p;
ie_consistir_cpf_cnpj_w		varchar(1);

c01 CURSOR FOR 
SELECT	distinct '0150' tp_registro, 
	d.cd_cgc cd_participante, 
	substr(obter_nome_pf_pj('', d.cd_cgc), 1, 80) nm_participante, 
	1058 cd_pais, 
	d.cd_cgc nr_cnpj, 
	'' nr_cpf, 
	substr(CASE WHEN upper(d.nr_inscricao_estadual)='ISENTA' THEN  '' WHEN upper(d.nr_inscricao_estadual)='ISENTO' THEN  '' WHEN upper(d.nr_inscricao_estadual)='0' THEN  ''  ELSE elimina_caractere_especial(d.nr_inscricao_estadual) END , 1, 14) nr_inscricao_estadual, 
	substr(d.cd_municipio_ibge || substr(calcula_digito('MODULO10', d.cd_municipio_ibge),1,1),1,7) cd_municipio_ibge, 
	'' nr_suframa, 
	substr(obter_dados_pf_pj(null, d.cd_cgc, 'R'),1,255) ds_endereco, 
	substr(obter_dados_pf_pj(null, d.cd_cgc, 'NR'),1,255) nr_endereco, 
	substr(obter_dados_pf_pj(null, d.cd_cgc, 'CO'),1,255) ds_complemento, 
	substr(obter_dados_pf_pj(null, d.cd_cgc, 'B'),1,255) ds_bairro 
from	pessoa_juridica d, 
	convenio e 
where	e.cd_cgc = d.cd_cgc 
and	exists (	SELECT	1 
			from 	conta_paciente_status_v x, 
				convenio c 
			where 	c.cd_convenio = x.cd_convenio 
			and 	exists (select 1  where x.cd_estab_conta = 2) 
			and 	x.dt_mesano_referencia >= dt_inicio_p 
			and 	x.dt_mesano_referencia <= dt_fim_p);
--and	((d.cd_tipo_pessoa = 2) 
--or	(d.cd_tipo_pessoa = 1)); 
		
vet01	C01%RowType;


BEGIN 
 
select	ie_consistir_cpf_cnpj 
into STRICT	ie_consistir_cpf_cnpj_w 
from	fis_efd_controle 
where	nr_sequencia = nr_seq_controle_p;
 
open C01;
loop 
fetch C01 into	 
	vet01;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	cd_municipio_ibge_w	:= vet01.cd_municipio_ibge;
	 
	if (cd_municipio_ibge_w	= '0') then 
		cd_municipio_ibge_w	:= '';
	end if;
	 
	ds_linha_w	:= substr(	sep_w || vet01.tp_registro	 		|| 
					sep_w || vet01.cd_participante	|| 
					sep_w || vet01.nm_participante	|| 
					sep_w || vet01.cd_pais		|| 
					sep_w || vet01.nr_cnpj		|| 
					sep_w || vet01.nr_cpf		|| 
					sep_w || vet01.nr_inscricao_estadual	|| 
					sep_w || cd_municipio_ibge_w 	|| 
					sep_w || vet01.nr_suframa		|| 
					sep_w || vet01.ds_endereco		|| 
					sep_w || vet01.nr_endereco		|| 
					sep_w || vet01.ds_complemento	|| 
					sep_w || vet01.ds_bairro		|| sep_w,1,8000);
	 
	 
	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w		:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;
 
	insert into fis_efd_arquivo( 
		nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		nr_seq_controle_efd, 
		nr_linha, 
		cd_registro, 
		ds_arquivo, 
		ds_arquivo_compl) 
	values (	nr_seq_registro_w, 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nr_seq_controle_p, 
		nr_linha_w, 
		vet01.tp_registro, 
		ds_arquivo_w, 
		ds_arquivo_compl_w);
	end;
end loop;
close C01;
 
commit;
 
qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;	
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_pre_fat_0150_efd (nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

