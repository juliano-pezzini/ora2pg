-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE carrega_medic_controlados ( nm_usuario_p text) AS $body$
DECLARE



cd_dcb_w		varchar(20);
ds_dcb_w		varchar(255);
nr_cas_w		varchar(20);
nr_sequencia_w		bigint;
qt_existe_w		bigint;

c01 CURSOR FOR
SELECT	cd_dcb,
	ds_dcb,
	nr_cas
from	w_carga_dcb_medic_control;


BEGIN

select	count(*)
into STRICT	qt_existe_w
from	medic_controlado;

if (qt_existe_w > 0) then

	delete from medic_controlado where (nr_seq_dcb IS NOT NULL AND nr_seq_dcb::text <> '');

	CALL gravar_carga_dcb_historico(
		'Limpeza na tabela MEDIC_CONTROLADO',
		'A procedure CARREGA_MEDIC_CONTROLADOS limpou a tabela MEDIC_CONTROLADO.'
,
		nm_usuario_p);
end if;

select	count(*)
into STRICT	qt_existe_w
from	medic_ficha_tecnica
where	(nr_seq_dcb IS NOT NULL AND nr_seq_dcb::text <> '');

if (qt_existe_w > 0) then

	update medic_ficha_tecnica
	set nr_seq_dcb  = NULL
	where (nr_seq_dcb IS NOT NULL AND nr_seq_dcb::text <> '');

	CALL gravar_carga_dcb_historico(
		'Limpeza na tabela MEDIC_FICHA_TECNICA',
		'A procedure CARREGA_MEDIC_CONTROLADOS limpou o vínculo da tabela MEDIC_FICHA_TECNICA com a tabela DCB_MEDIC_CONTROLADO(NR_SEQ_DCB).'
,
		nm_usuario_p);
end if;

select	count(*)
into STRICT	qt_existe_w
from	paciente_alergia
where	(nr_seq_dcb IS NOT NULL AND nr_seq_dcb::text <> '');

if (qt_existe_w > 0) then

	update paciente_alergia
	set nr_seq_dcb  = NULL
	where (nr_seq_dcb IS NOT NULL AND nr_seq_dcb::text <> '');
	
	CALL gravar_carga_dcb_historico(
		'Limpeza na tabela PACIENTE_ALERGIA',
		'A procedure CARREGA_MEDIC_CONTROLADOS limpou o vínculo da tabela PACIENTE_ALERGIA com a tabela DCB_MEDIC_CONTROLADO(NR_SEQ_DCB).'
,
		nm_usuario_p);
end if;

select	count(*)
into STRICT	qt_existe_w
from	material_dcb;

if (qt_existe_w > 0) then

	delete from material_dcb where (nr_seq_dcb IS NOT NULL AND nr_seq_dcb::text <> '');
	
	CALL gravar_carga_dcb_historico(
		'Limpeza na tabela MATERIAL_DCB',
		'A procedure CARREGA_MEDIC_CONTROLADOS limpou a tabela MATERIAL_DCB.'
,
		nm_usuario_p);
end if;

select	count(*)
into STRICT	qt_existe_w
from	historico_saude
where	(nr_seq_dcb IS NOT NULL AND nr_seq_dcb::text <> '');

if (qt_existe_w > 0) then
	
	update historico_saude
	set nr_seq_dcb  = NULL
	where (nr_seq_dcb IS NOT NULL AND nr_seq_dcb::text <> '');
	
	CALL gravar_carga_dcb_historico(
		'Limpeza na tabela HISTORICO_SAUDE',
		'A procedure CARREGA_MEDIC_CONTROLADOS limpou o vínculo da tabela HISTORICO_SAUDE com a tabela DCB_MEDIC_CONTROLADO(NR_SEQ_DCB).'
,
		nm_usuario_p);
end if;

select	count(*)
into STRICT	qt_existe_w
from	dcb_medic_controlado;

if (qt_existe_w > 0) then	
	
	delete from dcb_medic_controlado;
	
	CALL gravar_carga_dcb_historico(
		'Limpeza na tabela DCB_MEDIC_CONTROLADO',
		'A procedure CARREGA_MEDIC_CONTROLADOS limpou a tabela DCB_MEDIC_CONTROLADO.'
,
		nm_usuario_p);
end if;

open C01;
loop
fetch C01 into	
	cd_dcb_w,
	ds_dcb_w,
	nr_cas_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	select	coalesce(max(nr_sequencia),0) +1
	into STRICT	nr_Sequencia_w
	from	dcb_medic_controlado;
	
	insert into dcb_medic_controlado(
		nr_sequencia,
		cd_dcb,
		ds_dcb,
		dt_atualizacao,
		nm_usuario,
		cd_cas,
		ie_situacao,
		dt_atualizacao_nrec,
		nm_usuario_nrec)
	values (	nr_Sequencia_w,
		cd_dcb_w,
		ds_dcb_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_cas_w,
		'A',
		clock_timestamp(),
		nm_usuario_p);
	end;
end loop;
close C01;

CALL gravar_carga_dcb_historico(
		'Gravação na tabela DCB_MEDIC_CONTROLADO',
		'A procedure CARREGA_MEDIC_CONTROLADOS carregou as informações na tabela DCB_MEDIC_CONTROLADO.'
,
		nm_usuario_p);

delete from w_carga_dcb_medic_control;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE carrega_medic_controlados ( nm_usuario_p text) FROM PUBLIC;

