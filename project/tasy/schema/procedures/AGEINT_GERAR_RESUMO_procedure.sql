-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_gerar_resumo (nr_seq_ageint_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) IS ie_tipo_resumo_w varchar(15) RETURNS bigint AS $body$
DECLARE

  return_w bigint := NULL;
  i RECORD;
BEGIN
  SELECT coalesce(MAX(qt_tempo_jejum), 0)
    INTO STRICT return_w
    FROM (SELECT qt_tempo_jejum
            FROM ageint_exame_adic_item eai,
                 proc_interno           pi
           WHERE eai.nr_seq_item = nr_seq_item_p
             AND pi.nr_sequencia = eai.nr_seq_proc_interno

UNION ALL

          SELECT pi.qt_tempo_jejum
            FROM agenda_integrada_item aii,
                 proc_interno          pi
           WHERE aii.nr_sequencia = nr_seq_item_p
             AND aii.nr_seq_proc_interno = pi.nr_sequencia) alias2;
  RETURN return_w;
END;

FUNCTION obter_tempo_jejum_ageint(nr_seq_agenda_int_p IN NUMBER, dt_agenda_p DATE) RETURN NUMBER IS
  return_w NUMBER := NULL;
BEGIN
SELECT coalesce(MAX(qt_tempo_jejum),0) qt_tempo_jejum
  INTO STRICT return_w
  FROM (SELECT pi.qt_tempo_jejum
          FROM proc_interno pi, agenda_integrada_item aii
LEFT OUTER JOIN ageint_exame_adic_item eai ON (aii.nr_sequencia = eai.nr_seq_item)
WHERE aii.nr_seq_agenda_int = nr_seq_agenda_int_p  AND (pi.nr_sequencia = eai.nr_seq_proc_interno OR
               pi.nr_sequencia = aii.nr_seq_proc_interno) and coalesce(trunc(obter_horario_item_ageint(aii.nr_seq_agenda_cons,
                                     aii.nr_seq_agenda_exame,
                                     aii.nr_sequencia)),dt_agenda_p) = dt_agenda_p ) alias6;

  RETURN return_w;
END;



FUNCTION obter_orient_preparo_ageint(nr_seq_agenda_int_p IN number,
                                     cd_estabelecimento_p IN number,
									 ds_separador_p IN varchar2,
									 ie_tipo_orient_p IN varchar2) RETURN CLOB IS
				
  return_w       CLOB := '';
  nr_row         NUMBER := 0;
  lista_orient_w VARCHAR2(4000) := '';
  --ds_separador_w VARCHAR2(3) := chr(13) || chr(10);
BEGIN

  FOR i IN (SELECT  ds_orientacao_preparo,
                    nr_sequencia AS nr_row,
					          nr_seq_item
              FROM (SELECT aop.nr_sequencia,
                           aopr.nr_seq_orient_preparo,
                           aop.ds_orientacao_preparo,
						               aii.nr_sequencia nr_seq_item,
                           aopr.nr_seq_apres
                      FROM ageint_orient_preparo    aop,
                           ageint_orient_prep_regra aopr,
                           agenda_integrada_item    aii,
                           agenda_integrada         ai
                     WHERE aop.nr_sequencia = aopr.nr_seq_orient_preparo
                       AND coalesce(aopr.nr_seq_proc_interno, aii.nr_seq_proc_interno) = aii.nr_seq_proc_interno
                       and 	((aopr.cd_categoria = cd_categoria_w) OR (coalesce(aopr.cd_categoria::text, '') = ''))
                       and 	((aopr.cd_plano = cd_plano_w) OR (coalesce(aopr.cd_plano::text, '') = ''))
                       and 	((aopr.cd_convenio = cd_convenio_w) OR (coalesce(aopr.cd_convenio::text, '') = ''))
                       AND coalesce(aopr.cd_estabelecimento, obter_estab_item_ageint(aii.nr_seq_agenda_cons, aii.nr_seq_agenda_exame)) =
                           coalesce(obter_estab_item_ageint(aii.nr_seq_agenda_cons, aii.nr_seq_agenda_exame),aopr.cd_estabelecimento)
                       AND aii.nr_seq_agenda_int = nr_seq_agenda_int_p
                       AND ai.nr_sequencia = aii.nr_seq_agenda_int
                       AND coalesce(aii.nr_seq_topografia,0) = coalesce(aopr.nr_seq_topografia,coalesce(aii.nr_seq_topografia,0))
                       AND coalesce(ai.ie_tipo_atendimento,0) = coalesce(aopr.ie_tipo_atendimento,coalesce(ai.ie_tipo_atendimento,0))
                       AND aop.ie_situacao = 'A'
                       AND ((aii.nr_seq_agenda_exame IS NOT NULL AND aii.nr_seq_agenda_exame::text <> '') OR (aii.nr_seq_agenda_cons IS NOT NULL AND aii.nr_seq_agenda_cons::text <> '') or aii.ie_tipo_agendamento = 'Q')
					   AND ((ie_tipo_orient_p = 'C' AND aop.ie_tipo_orient = 'C') OR ((ie_tipo_orient_p = 'P') AND ((aop.ie_tipo_orient = 'P') OR (coalesce(aop.ie_tipo_orient::text, '') = ''))))
                       AND NOT EXISTS (SELECT 1
                                       FROM agenda_consulta x
                                       WHERE x.nr_sequencia = aii.nr_seq_agenda_cons
                                       AND x.ie_status_agenda = 'C')
                       AND NOT EXISTS (SELECT 1
                                       FROM agenda_paciente y
                                       WHERE y.nr_sequencia = aii.nr_seq_agenda_exame
                                       AND y.ie_status_agenda = 'C')

UNION ALL

                    SELECT aop.nr_sequencia,
                           aopr.nr_seq_orient_preparo,
                           aop.ds_orientacao_preparo,
						               aii.nr_sequencia nr_seq_item,
                           aopr.nr_seq_apres
                      FROM ageint_orient_preparo    aop,
                           ageint_orient_prep_regra aopr,
                           agenda_integrada_item    aii,
                           agenda_integrada         ai,
                           ageint_exame_adic_item   aeai                           
                     WHERE aop.nr_sequencia = aopr.nr_seq_orient_preparo
                       AND coalesce(aopr.nr_seq_proc_interno, aeai.nr_seq_proc_interno) = aeai.nr_seq_proc_interno
                       and ((aopr.cd_categoria = cd_categoria_w) OR (coalesce(aopr.cd_categoria::text, '') = ''))
                       and ((aopr.cd_plano = cd_plano_w) OR (coalesce(aopr.cd_plano::text, '') = ''))
                       and ((aopr.cd_convenio = cd_convenio_w) OR (coalesce(aopr.cd_convenio::text, '') = ''))
                       AND coalesce(aopr.cd_estabelecimento, obter_estab_item_ageint(aii.nr_seq_agenda_cons, aii.nr_seq_agenda_exame)) =
                           coalesce(obter_estab_item_ageint(aii.nr_seq_agenda_cons, aii.nr_seq_agenda_exame),aopr.cd_estabelecimento)
                       AND aii.nr_seq_agenda_int = nr_seq_agenda_int_p
                       AND ai.nr_sequencia = aii.nr_seq_agenda_int
                       AND aii.nr_sequencia = aeai.nr_seq_item
                       AND coalesce(aeai.nr_seq_topografia,0) = coalesce(aopr.nr_seq_topografia,coalesce(aeai.nr_seq_topografia,0))
                       AND coalesce(ai.ie_tipo_atendimento,0) = coalesce(aopr.ie_tipo_atendimento,coalesce(ai.ie_tipo_atendimento,0))
                       AND aop.ie_situacao = 'A'
                       AND ((aii.nr_seq_agenda_exame IS NOT NULL AND aii.nr_seq_agenda_exame::text <> '') OR (aii.nr_seq_agenda_cons IS NOT NULL AND aii.nr_seq_agenda_cons::text <> '') or aii.ie_tipo_agendamento = 'Q')
					   AND ((ie_tipo_orient_p = 'C' AND aop.ie_tipo_orient = 'C') OR ((ie_tipo_orient_p = 'P') AND ((aop.ie_tipo_orient = 'P') OR (coalesce(aop.ie_tipo_orient::text, '') = ''))))
                       AND NOT EXISTS (SELECT 1
                                       FROM agenda_consulta x
                                       WHERE x.nr_sequencia = aii.nr_seq_agenda_cons
                                       AND x.ie_status_agenda = 'C')
                       AND NOT EXISTS (SELECT 1
                                       FROM agenda_paciente y
                                       WHERE y.nr_sequencia = aii.nr_seq_agenda_exame
                                       AND y.ie_status_agenda = 'C')) alias72
                                       ORDER BY coalesce(nr_seq_apres,999), nr_sequencia) LOOP
    
	IF (obter_se_contido(i.nr_row, lista_orient_w) = 'N') THEN
        return_w := return_w || obter_texto_macro_prep_ageint(i.nr_row, i.nr_seq_item, i.ds_orientacao_preparo, 'N') || ds_separador_p;
        nr_row := i.nr_row;
		
		lista_orient_w := lista_orient_w || ',' || i.nr_row;
    END IF;
  END LOOP;
  return_w := REPLACE(return_w, chr(10), ds_separador_w);
  if (coalesce(return_w::text, '') = '') then
	--O(s) exame(s) nao possui(em) preparo.
	return_w := Wheb_mensagem_pck.get_texto(1051484);
  end if;
  RETURN return_w;
  --RETURN return_w||' nr_seq_agenda_int_p:'||nr_seq_agenda_int_p||' cd_estabelecimento_p:'||cd_estabelecimento_p   ;
END;

FUNCTION obter_ori_pre_ageint_dia(nr_seq_agenda_int_p IN NUMBER,
                                     cd_estabelecimento_p IN NUMBER,
									 ds_separador_p IN varchar2,
									 ie_tipo_orient_p IN varchar2) RETURN CLOB IS
  return_w			CLOB := '';
  nr_row			NUMBER := 0;
  dt_agenda_w		DATE := Trunc(clock_timestamp() - interval '99999 days');
  dt_atual_w		DATE := Trunc(clock_timestamp() - interval '99999 days');
  lista_orient_w	VARCHAR2(4000) := '';

BEGIN

  FOR i IN (SELECT  ds_orientacao_preparo,
                    nr_sequencia AS nr_row,
                    Trunc(horario) dt_agenda,
                    CASE
                      WHEN Length(CONVERT_LONG_TO_VARCHAR2('ds_orientacao_preparo','ageint_orient_preparo','nr_sequencia = '||nr_sequencia)) < 3
                        THEN ''
                      ELSE wheb_mensagem_pck.get_texto(1060338,
                                                'HR_INICIAL='||PKG_DATE_FORMATERS.to_varchar(horario,'shortDate',
                                                                                              wheb_usuario_pck.get_cd_estabelecimento,wheb_usuario_pck.get_nm_usuario)||':') END ds_orientacao_preparo_dia,
					          nr_seq_item
              	FROM (SELECT aop.nr_sequencia,
                           aopr.nr_seq_orient_preparo,
                           ds_orientacao_preparo,
                           obter_horario_item_ageint(aii.nr_seq_agenda_cons,
                                     aii.nr_seq_agenda_exame,
                                     aii.nr_sequencia) AS horario,
             			         aii.nr_sequencia nr_seq_item,
                           aopr.nr_seq_apres
                      FROM ageint_orient_preparo    aop,
                           ageint_orient_prep_regra aopr,
                           agenda_integrada_item    aii,
			               agenda_integrada         ai
                     WHERE aop.nr_sequencia = aopr.nr_seq_orient_preparo
                       AND coalesce(aopr.nr_seq_proc_interno, aii.nr_seq_proc_interno) = aii.nr_seq_proc_interno
                       and ((aopr.cd_categoria = cd_categoria_w) OR (coalesce(aopr.cd_categoria::text, '') = ''))
                       and ((aopr.cd_plano = cd_plano_w) OR (coalesce(aopr.cd_plano::text, '') = ''))
                       and ((aopr.cd_convenio = cd_convenio_w) OR (coalesce(aopr.cd_convenio::text, '') = ''))
					             AND coalesce(aopr.cd_estabelecimento, obter_estab_item_ageint(aii.nr_seq_agenda_cons, aii.nr_seq_agenda_exame)) =
                           coalesce(obter_estab_item_ageint(aii.nr_seq_agenda_cons, aii.nr_seq_agenda_exame),aopr.cd_estabelecimento)
                       AND aii.nr_seq_agenda_int = nr_seq_agenda_int_p
                       AND ai.nr_sequencia = aii.nr_seq_agenda_int
                       AND coalesce(aii.nr_seq_topografia,0) = coalesce(aopr.nr_seq_topografia,coalesce(aii.nr_seq_topografia,0))
                       AND coalesce(ai.ie_tipo_atendimento,0) = coalesce(aopr.ie_tipo_atendimento,coalesce(ai.ie_tipo_atendimento,0))
                       AND aop.ie_situacao = 'A'
                       AND ((aii.nr_seq_agenda_exame IS NOT NULL AND aii.nr_seq_agenda_exame::text <> '') OR (aii.nr_seq_agenda_cons IS NOT NULL AND aii.nr_seq_agenda_cons::text <> '') or aii.ie_tipo_agendamento = 'Q')
					             AND ((ie_tipo_orient_p = 'C' AND aop.ie_tipo_orient = 'C') OR ((ie_tipo_orient_p = 'P') AND ((aop.ie_tipo_orient = 'P') OR (coalesce(aop.ie_tipo_orient::text, '') = ''))))
                       AND NOT EXISTS (SELECT 1
                                       FROM agenda_consulta x
                                       WHERE x.nr_sequencia = aii.nr_seq_agenda_cons
                                       AND x.ie_status_agenda = 'C')
                       AND NOT EXISTS (SELECT 1
                                       FROM agenda_paciente y
                                       WHERE y.nr_sequencia = aii.nr_seq_agenda_exame
                                       AND y.ie_status_agenda = 'C')
                      
UNION ALL

                      SELECT aop.nr_sequencia,
                             aopr.nr_seq_orient_preparo,
                             aop.ds_orientacao_preparo,
                             obter_horario_item_ageint(aii.nr_seq_agenda_cons,
                                     aii.nr_seq_agenda_exame,
                                     aii.nr_sequencia) AS horario,
				     aii.nr_sequencia nr_seq_item,
                             aopr.nr_seq_apres
                      FROM ageint_orient_preparo    aop,
                           ageint_orient_prep_regra aopr,
                           agenda_integrada_item    aii,
                           agenda_integrada         ai,
                           ageint_exame_adic_item   aeai
                     WHERE aop.nr_sequencia = aopr.nr_seq_orient_preparo
                       AND coalesce(aopr.nr_seq_proc_interno, aeai.nr_seq_proc_interno) = aeai.nr_seq_proc_interno
                       and ((aopr.cd_categoria = cd_categoria_w) OR (coalesce(aopr.cd_categoria::text, '') = ''))
                       and ((aopr.cd_plano = cd_plano_w) OR (coalesce(aopr.cd_plano::text, '') = ''))
                       and ((aopr.cd_convenio = cd_convenio_w) OR (coalesce(aopr.cd_convenio::text, '') = ''))
                       AND coalesce(aopr.cd_estabelecimento, obter_estab_item_ageint(aii.nr_seq_agenda_cons, aii.nr_seq_agenda_exame)) =
                           coalesce(obter_estab_item_ageint(aii.nr_seq_agenda_cons, aii.nr_seq_agenda_exame),aopr.cd_estabelecimento)
                       AND aii.nr_seq_agenda_int = nr_seq_agenda_int_p
                       AND ai.nr_sequencia = aii.nr_seq_agenda_int
                       AND aii.nr_sequencia = aeai.nr_seq_item
                       AND coalesce(aeai.nr_seq_topografia,0) = coalesce(aopr.nr_seq_topografia,coalesce(aeai.nr_seq_topografia,0))
                       AND coalesce(ai.ie_tipo_atendimento,0) = coalesce(aopr.ie_tipo_atendimento,coalesce(ai.ie_tipo_atendimento,0))
                       AND aop.ie_situacao = 'A'
					   AND ((ie_tipo_orient_p = 'C' AND aop.ie_tipo_orient = 'C') OR ((ie_tipo_orient_p = 'P') AND ((aop.ie_tipo_orient = 'P') OR (coalesce(aop.ie_tipo_orient::text, '') = ''))))
                       AND NOT EXISTS (SELECT 1
                                       FROM agenda_consulta x
                                       WHERE x.nr_sequencia = aii.nr_seq_agenda_cons
                                       AND x.ie_status_agenda = 'C')
                       AND NOT EXISTS (SELECT 1
                                       FROM agenda_paciente y
                                       WHERE y.nr_sequencia = aii.nr_seq_agenda_exame
                                       AND y.ie_status_agenda = 'C')) alias76
                     ORDER BY horario, coalesce(nr_seq_apres,999), nr_sequencia) LOOP

	if (dt_atual_w <> i.dt_agenda) then
		dt_atual_w := i.dt_agenda;
		lista_orient_w := '';
	end if;

	IF (obter_se_contido(i.nr_row, lista_orient_w) = 'N') THEN
        IF i.dt_agenda <> dt_agenda_w THEN
          IF return_w <> '' THEN
            return_w := return_w || i.ds_orientacao_preparo_dia || ds_separador_w || ds_separador_w;
          ELSE
            return_w := return_w || ds_separador_w || i.ds_orientacao_preparo_dia || ds_separador_w;
          END IF;
          dt_agenda_w := i.dt_agenda;
        END IF;
        return_w := return_w || obter_texto_macro_prep_ageint(i.nr_row, i.nr_seq_item, i.ds_orientacao_preparo) || ds_separador_p;
        nr_row := i.nr_row;

		lista_orient_w := lista_orient_w || ',' || i.nr_row;
    END IF;
  END LOOP;
  return_w := REPLACE(return_w, chr(10), ds_separador_w);
  if (coalesce(return_w::text, '') = '') then
	--O(s) exame(s) nao possui(em) preparo.
	return_w := Wheb_mensagem_pck.get_texto(1051484);
  end if;
  RETURN return_w;

END;

FUNCTION obter_orient_preparo_item(nr_seq_proc_interno_p IN NUMBER,
                                   cd_estabelecimento_p  IN NUMBER,
                   ds_separador_p  in varchar2,
		   nr_seq_topografia_p IN NUMBER ,
		   ie_tipo_atendimento_p IN NUMBER ,
		   nr_seq_item_p	in number ) RETURN CLOB IS
  return_w       CLOB := '';
  nr_row         NUMBER :=0;
  --ds_separador_w VARCHAR2(3) := chr(13) || chr(10);
BEGIN

  FOR i IN (SELECT  ds_orientacao_preparo,
                    nr_sequencia AS nr_row
              FROM (SELECT aop.nr_sequencia,
                           aopr.nr_seq_orient_preparo,
                           aop.ds_orientacao_preparo,
                           aopr.nr_seq_apres
                      FROM ageint_orient_preparo    aop,
                           ageint_orient_prep_regra aopr
                     WHERE aop.nr_sequencia = aopr.nr_seq_orient_preparo
                       AND coalesce(aopr.nr_seq_proc_interno, nr_seq_proc_interno_p) = nr_seq_proc_interno_p
                       and ((aopr.cd_categoria = cd_categoria_w) OR (coalesce(aopr.cd_categoria::text, '') = ''))
                       and ((aopr.cd_plano = cd_plano_w) OR (coalesce(aopr.cd_plano::text, '') = ''))
                       and ((aopr.cd_convenio = cd_convenio_w) OR (coalesce(aopr.cd_convenio::text, '') = ''))
                       AND coalesce(aopr.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
		                   AND coalesce(aopr.nr_seq_topografia,coalesce(nr_seq_topografia_p,0)) = coalesce(nr_seq_topografia_p,0)
		                   AND coalesce(aopr.ie_tipo_atendimento,coalesce(ie_tipo_atendimento_p,0)) = coalesce(ie_tipo_atendimento_p,0)
                       AND aop.ie_situacao = 'A'

UNION ALL

                     SELECT aop.nr_sequencia,
                           aopr.nr_seq_orient_preparo,
                           aop.ds_orientacao_preparo,
                           aopr.nr_seq_apres
                     FROM ageint_orient_preparo    aop,
                          ageint_orient_prep_regra aopr,
                          agenda_integrada_item    aii,                          
                          ageint_exame_adic_item   aeai
                     WHERE aop.nr_sequencia = aopr.nr_seq_orient_preparo                      
                      AND aii.nr_sequencia = nr_seq_item_p                      
                      AND aii.nr_sequencia = aeai.nr_seq_item
                      AND coalesce(aopr.nr_seq_proc_interno, aeai.nr_seq_proc_interno) = aeai.nr_seq_proc_interno
                      and ((aopr.cd_categoria = cd_categoria_w) OR (coalesce(aopr.cd_categoria::text, '') = ''))
                      and ((aopr.cd_plano = cd_plano_w) OR (coalesce(aopr.cd_plano::text, '') = ''))
                      and ((aopr.cd_convenio = cd_convenio_w) OR (coalesce(aopr.cd_convenio::text, '') = ''))
                      AND coalesce(aopr.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p                      
                      AND coalesce(aeai.nr_seq_topografia,0) = coalesce(aopr.nr_seq_topografia,coalesce(aeai.nr_seq_topografia,0))
                      AND coalesce(aopr.ie_tipo_atendimento,coalesce(ie_tipo_atendimento_p,0)) = coalesce(ie_tipo_atendimento_p,0)
                      AND aop.ie_situacao = 'A'
                      AND ((aii.nr_seq_agenda_exame IS NOT NULL AND aii.nr_seq_agenda_exame::text <> '') OR (aii.nr_seq_agenda_cons IS NOT NULL AND aii.nr_seq_agenda_cons::text <> '') or aii.ie_tipo_agendamento = 'Q')
                     ) alias43 
                     ORDER BY coalesce(nr_seq_apres,999), nr_sequencia) LOOP

    IF nr_row  <> i.nr_row THEN
        return_w := return_w || obter_texto_macro_prep_ageint(i.nr_row, nr_seq_item_p, i.ds_orientacao_preparo) || ds_separador_p;
        nr_row := i.nr_row;
    END IF;
  END LOOP;
  if (coalesce(return_w::text, '') = '') then
	--O(s) exame(s) nao possui(em) preparo.
	return_w := Wheb_mensagem_pck.get_texto(1051484);
  end if;
  RETURN return_w;
  --RETURN return_w||' nr_seq_proc_interno_p:'||nr_seq_proc_interno_p||' cd_estabelecimento_p:'||cd_estabelecimento_p   ;
END;

function substituir_macro_cab_rod(ds_texto_p in varchar2, ie_local_chamada_p in varchar2) return varchar2 is

ds_texto_replace_w varchar2(32000);

begin
  ds_texto_replace_w := ds_texto_p;

  if ie_local_chamada_p in ('C', 'T') then
  
    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@orientlab',           ds_orient_lab_macro_w);
    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@maiorjejum',          ds_tempo_max_jejum_w);
    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@ds_end_estab_logado', ds_end_estab_logado_w);
    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@ds_estab_logado',     ds_estab_logado_w);
	ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@valorexamelab', vl_total_exames_w);
    if (ie_orientacao_ageint_item_w = 'S') then
      ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientacaoPreparoAgeintResumido', obter_orient_preparo_ageint(nr_seq_ageint_p, cd_estabelecimento_p, ds_separador_w, 'P'));
      ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientConvResumido', obter_ori_pre_ageint_dia(nr_seq_ageint_p, cd_estabelecimento_p, ds_separador_w, 'C'));
    else
      ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientacaoPreparoAgeintResumido', null);
      ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientConvResumido', null);
    end if;
    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientAgeIntResumoDia', obter_ori_pre_ageint_dia(nr_seq_ageint_p, cd_estabelecimento_p, ds_separador_w, 'P'));
    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientConvResumido', obter_ori_pre_ageint_dia(nr_seq_ageint_p, cd_estabelecimento_p, ds_separador_w, 'C'));
    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@prontuario', nr_prontuario_w);
    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@menordtchegada', to_char(dt_menor_agendamento_w,'dd/mm/yyyy hh24:mi'));

  end if;

  if ie_local_chamada_p in ('R', 'T') then

    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@maiorjejum',          ds_tempo_max_jejum_w);
    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@orientlab',           ds_orient_lab_macro_w);
    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@ds_end_estab_logado', ds_end_estab_logado_w);
    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@ds_estab_logado',     ds_estab_logado_w);
    if (ie_orientacao_ageint_item_w = 'S') then
      ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientacaoPreparoAgeintResumido', obter_orient_preparo_ageint(nr_seq_ageint_p, cd_estabelecimento_p, ds_separador_w, 'P'));
      ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientConvResumido', obter_ori_pre_ageint_dia(nr_seq_ageint_p, cd_estabelecimento_p, ds_separador_w, 'C'));
    else
      ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientacaoPreparoAgeintResumido', null);
      ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientConvResumido', null);
    end if;
    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientAgeIntResumoDia', obter_ori_pre_ageint_dia(nr_seq_ageint_p, cd_estabelecimento_p, ds_separador_w, 'P'));
    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientConvResumido', obter_ori_pre_ageint_dia(nr_seq_ageint_p, cd_estabelecimento_p, ds_separador_w, 'C'));
    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@menordtchegada', to_char(dt_menor_agendamento_w,'dd/mm/yyyy hh24:mi'));
    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@valorexamelab', vl_total_exames_w);
  end if;

  ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@textopadraosetor', null);
  ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@paciente',         nm_paciente_w);
  ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@convenio',         ds_convenio_w);
  ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@nascimento',       to_char(dt_nascimento_w, 'dd/mm/yyyy'));
  ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@categoria',        ds_categoria_w);
  ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@plano',            ds_plano_w);
  ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@telefone',         nr_telefone_w);
  ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@quebra',           chr(10));
  ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@observacao',       ds_observacao_w);
  ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@checklist',        ds_item_checklist_w);
  ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@usuario',          cd_pessoa_fisica_w);
  ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@senha',            ds_senha_w);
  ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@dtentrega',        dt_entrega_prevista_w);
  ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@formaentrega',     ds_forma_entrega_laudo_w);
  ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@inicioAgendamento',  dt_inicio_agendamento_w);

  return ds_texto_replace_w;

end;

BEGIN

  ie_utiliza_formatacao_w := obter_param_usuario(869, 91, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_utiliza_formatacao_w);

  ds_msg_encaixe_w := obter_param_usuario(869, 130, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ds_msg_encaixe_w);

  ie_resumo_w := obter_param_usuario(869, 277, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_resumo_w);

  IF (ie_utiliza_formatacao_w = 'S') THEN
    ds_separador_w := '\par ';
  ELSE
    ds_separador_w := chr(10);
  END IF;

  IF (nr_seq_ageint_p IS NOT NULL AND nr_seq_ageint_p::text <> '') AND (ie_utiliza_formatacao_w = 'N') THEN
    DELETE FROM agenda_integrada_resumo WHERE nr_seq_ageint = nr_seq_ageint_p;

    BEGIN
      SELECT a.nm_paciente,
             substr(obter_nome_convenio(a.cd_convenio), 1, 255),
             a.dt_nascimento,
             substr(obter_categoria_convenio(a.cd_convenio, a.cd_categoria), 1, 80),
             substr(obter_desc_plano(a.cd_convenio, a.cd_plano), 1, 80),
             a.nr_telefone,
             a.cd_convenio,
             ageint_obter_data_chegada(a.nr_sequencia),
             substr(a.ds_observacao, 1, 255),
             substr(ageint_obter_checklist(a.nr_sequencia, ds_separador_w), 1, 32000),
             a.cd_categoria,
             a.cd_plano,
             b.cd_pessoa_fisica,
             b.ds_senha,
             substr(obter_ds_forma_entrega_ageint(nr_seq_ageint_p), 1, 255),
             ageint_obter_dt_entrega_item(nr_sequencia),
             pkg_date_formaters.to_varchar(a.dt_inicio_agendamento,'short', cd_estabelecimento_p, nm_usuario_p)
        INTO STRICT nm_paciente_w,
             ds_convenio_w,
             dt_nascimento_w,
             ds_categoria_w,
             ds_plano_w,
             nr_telefone_w,
             cd_convenio_w,
             dt_chegada_w,
             ds_observacao_w,
             ds_item_checklist_w,
             cd_categoria_w,
             cd_plano_w,
             cd_pessoa_fisica_w,
             ds_senha_w,
             ds_forma_entrega_laudo_w,
             dt_entrega_item_w,
             dt_inicio_agendamento_w
        FROM agenda_integrada a
LEFT OUTER JOIN pessoa_fisica b ON (a.cd_pessoa_fisica = b.cd_pessoa_fisica)
WHERE nr_sequencia = nr_seq_ageint_p;

    EXCEPTION
      WHEN OTHERS THEN
        --Ra1ise_ap1plication_error(-20011,'Nao foi possivel gerar o resumo do agendamento. Sequencia do agendamento '||nr_seq_ageint_p||' #@#@');
        CALL wheb_mensagem_pck.exibir_mensagem_abort(206696, 'NR_AGENDAMENTO=' || to_char(nr_seq_ageint_p));
    END;
	
	select 	coalesce(max('S'),'N')
	into STRICT	ie_classificacao_tele_w
	from 	agenda_integrada_item a,
			agenda_classif b
	where 	nr_seq_agenda_int = nr_seq_ageint_p
	and   	b.cd_classificacao = a.ie_classif_agenda
	and   	coalesce(b.IE_UTILIZA_TELEMEDICINA,'N') = 'S';

    for c_01 in c01 loop
      BEGIN
        ie_tipo_resumo_w := c_01.ie_tipo_resumo;
        ds_resumo_w := c_01.ds_resumo;
        ie_tipo_agendamento_regra_w := c_01.ie_tipo_agendamento;

        ie_primeiro_exame_w := 'S';
        IF (ie_tipo_resumo_w = 'C') THEN
          ds_cabecalho_w := ds_resumo_w;
        ELSIF (ie_tipo_resumo_w = 'R') THEN
          ds_rodape_w := ds_resumo_w;
        ELSIF (ie_tipo_resumo_w = 'I') THEN
          OPEN c02;
          LOOP
            FETCH c02
              INTO nr_seq_item_w,
                   dt_agendamento_w,
                   ds_item_ageint_w,
                   --ds_orient_proc_w,
                   ds_orient_pac_w,
                   nr_seq_agenda_cons_w,
                   nr_seq_agenda_exame_w,
                   vl_item_w,
                   ds_regra_w,
                   ds_glosa_w,
                   dt_entrega_prevista_w,
                   nr_min_chegada_prev_w,
                   nr_seq_proc_interno_w,
                   cd_procedimento_w,
                   ie_origem_proced_w,
                   ie_tipo_agendamento_w,
                   ds_orient_anest_w,
                   nr_seq_grupo_selec_w,
                   ds_orient_prep_proc_w,
                   nm_medico_requisitante_w,
                   cd_medico_req_w,
                   nm_medico_externo_w,
                   nr_seq_pend_quimio_w,
                   ie_lado_w,
                   dt_agenda_w,
                   cd_medico_w,
                   ds_tipo_agenda_w,
                   nr_seq_item_selec_w,
                   ds_forma_entrega_laudo_w,
		               nr_seq_topografia_w,
		               ie_tipo_atendimento_w,
				           cd_estab_item_w;
            EXIT WHEN NOT FOUND; /* apply on c02 */
            BEGIN
              ds_resumo_w := c_01.ds_resumo;
              qt_registros_area_w := null;

              select max(a.nr_sequencia),
                     max(a.nr_seq_area)
              into STRICT nr_seq_resumo_w,
                   nr_seq_area_w
              from ageint_regra_resumo a
              where coalesce(a.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
              and a.nr_seq_area = (SELECT b.nr_seq_area
                                  from agenda_int_grupo b
                                  where b.nr_sequencia = nr_seq_grupo_selec_w);

              if (nr_seq_resumo_w IS NOT NULL AND nr_seq_resumo_w::text <> '') then

                select coalesce(max(ds_resumo), ds_resumo_w),
                     coalesce(max(ie_resumo_unico), 'N')
                into STRICT ds_resumo_w,
                     ie_resumo_unico_w
                from ageint_regra_resumo
                where nr_sequencia = nr_seq_resumo_w;

                

                if ie_resumo_unico_w = 'S' then
                  
                  select max(nr_seq_area)
                  into STRICT qt_registros_area_w
                  from (WITH RECURSIVE cte AS (
SELECT regexp_substr(ds_lista_areas_w,'[^,]+', 1, level) nr_seq_area  (regexp_substr(ds_lista_areas_w, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(ds_lista_areas_w, '[^,]+', 1, level))::text <> '')  UNION ALL
SELECT regexp_substr(ds_lista_areas_w,'[^,]+', 1, level) nr_seq_area  (regexp_substr(ds_lista_areas_w, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(ds_lista_areas_w, '[^,]+', 1, level))::text <> '') JOIN cte c ON ()

) SELECT * FROM cte;
) alias6
                  where nr_seq_area = nr_seq_area_w;

                  if coalesce(qt_registros_area_w::text, '') = '' then
                    ds_resumo_w := substituir_macro_cab_rod(ds_resumo_w, 'T');
                    ds_lista_areas_w := ds_lista_areas_w || nr_seq_area_w || ',';
                    ds_item_w := ds_item_w || chr(10) || ds_resumo_w;
                    qt_registros_area_w := 1;
                  end if;

                end if;
			  ELSE
				ds_resumo_w := substituir_macro_cab_rod(ds_resumo_w, 'T');
              END IF;

              if coalesce(qt_registros_area_w::text, '') = '' and (coalesce(ie_tipo_agendamento_regra_w, ie_tipo_agendamento_w) =  ie_tipo_agendamento_w)  then --if final cursor
                dt_agenda_trunc_w := trunc(dt_agenda_w);

                ie_dia_semana_w := obter_cod_dia_semana(dt_agenda_trunc_w);

                SELECT MAX(ds_valor_dominio)
                  INTO STRICT ds_dia_semana_w
                  FROM valor_dominio_v
                 WHERE cd_dominio = 35
                   AND vl_dominio = ie_dia_semana_w;

                ds_exame_adic_ww     := '';
                ds_texto_pri_exame_w := '';
                ds_orient_exame_adic_ww := '';
                  ds_orient_com_exame_ww := '';
                if (coalesce(cd_estab_item_w, 0) = 0) then
                  cd_estab_item_w := obter_estabelecimento_ativo;
                end if;

                SELECT   MAX(Obter_Prontuario_Paciente(a.cd_pessoa_fisica))
                INTO STRICT     nr_prontuario_w
                FROM   agenda_integrada a,
                    agenda_integrada_item b
                WHERE   a.nr_sequencia = b.nr_seq_agenda_int
                AND   b.nr_sequencia = nr_seq_item_w;

                IF (coalesce(nr_seq_pend_quimio_w::text, '') = '') THEN

                  IF (cd_medico_externo_w = cd_medico_req_w) THEN
                    nm_medico_req_w := nm_medico_externo_w;
                  ELSE
                    nm_medico_req_w := nm_medico_requisitante_w;
                  END IF;

                  IF (nr_seq_agenda_exame_w IS NOT NULL AND nr_seq_agenda_exame_w::text <> '') THEN
                    SELECT a.ds_agenda,
                           substr(obter_nome_pf(b.cd_medico_exec), 1, 60),
                           a.ds_observacao,
                           a.cd_setor_exclusivo,
                           b.nr_reserva,
                           coalesce(ie_encaixe, 'N'),
                           b.cd_medico_exec,
                           coalesce(obter_desc_sala_consulta(b.nr_seq_sala),
                               wheb_mensagem_pck.get_texto(307457) /*'Nao informada'*/
),
                           a.cd_estabelecimento,
                           a.ds_orientacao,
                           a.ds_endereco_agenda
                      INTO STRICT ds_agenda_w,
                           nm_medico_exec_w,
                           ds_obs_agenda_w,
                           cd_setor_exclusivo_w,
                           nr_reserva_w,
                           ie_encaixe_w,
                           cd_medico_exec_w,
                           ds_sala_consulta_w,
                           cd_estabelecimento_w,
                           ds_orientagenda_w,
                           ds_endagenda_w
                      FROM agenda          a,
                           agenda_paciente b
                     WHERE a.cd_agenda = b.cd_agenda
                       AND b.nr_sequencia = nr_seq_agenda_exame_w;

                    SELECT obter_dados_pf_pj(NULL, cd_cgc, 'ECM'),
                           obter_dados_pf_pj(NULL, cd_cgc, 'F')
                      INTO STRICT ds_end_estab_agenda_w,
                           ds_estab_agenda_w
                      FROM estabelecimento
                     WHERE cd_estabelecimento = cd_estabelecimento_w;

                  ELSIF (nr_seq_agenda_cons_w IS NOT NULL AND nr_seq_agenda_cons_w::text <> '') THEN
                    SELECT substr(ageint_obter_desc_agenda(a.cd_agenda), 1, 255),
                           a.ds_observacao,
                           a.cd_setor_exclusivo,
                           a.cd_setor_agenda,
                           b.nr_reserva,
                           coalesce(ie_encaixe, 'N'),
                           b.cd_medico_req,
                           coalesce(obter_desc_sala_consulta(b.nr_seq_sala),
                               wheb_mensagem_pck.get_texto(307457) /*'Nao informada'*/
),
                           a.cd_estabelecimento,
                           coalesce(obter_nome_pf(b.cd_medico_req),
                               obter_nome_pf(a.cd_pessoa_fisica)),
                           a.ds_orientacao,
                           a.ds_endereco_agenda
                      INTO STRICT ds_agenda_w,
                           ds_obs_agenda_w,
                           cd_setor_exclusivo_w,
                           cd_setor_agenda_w,
                           nr_reserva_w,
                           ie_encaixe_w,
                           cd_medico_exec_w,
                           ds_sala_consulta_w,
                           cd_estabelecimento_w,
                           nm_medico_exec_w,
                           ds_orientagenda_w,
                           ds_endagenda_w
                      FROM agenda          a,
                           agenda_consulta b
                     WHERE a.cd_agenda = b.cd_agenda
                       AND b.nr_sequencia = nr_seq_agenda_cons_w;

		    select max(ds_url_telemedicina), max(ds_url_tele_terc)
		    into STRICT ds_url_telemedicina_w, ds_url_tele_terc_w
		    from agenda_consulta_adic
		    where nr_seq_agenda = nr_seq_agenda_cons_w;
		
                    SELECT obter_dados_pf_pj(NULL, cd_cgc, 'ECM'),
                           obter_dados_pf_pj(NULL, cd_cgc, 'F')
                      INTO STRICT ds_end_estab_agenda_w,
                           ds_estab_agenda_w
                      FROM estabelecimento
                     WHERE cd_estabelecimento = cd_estabelecimento_w;

                  END IF;

                  SELECT MAX(ds_texto),
                         coalesce(MAX(ie_rodape), 'N')
                    INTO STRICT ds_texto_padrao_setor_w,
                         ie_rodape_w
                    FROM ageint_texto_padrao_setor
                   WHERE cd_setor_atendimento =
                         coalesce(cd_setor_exclusivo_w, cd_setor_agenda_w)
                     AND coalesce(cd_estabelecimento, cd_estabelecimento_p) =
                         cd_estabelecimento_p;

                  IF (ie_rodape_w = 'S') THEN
                    ie_rodape_setor_w       := 'S';
                    ds_texto_setor_w        := ds_texto_padrao_setor_w;
                    ds_texto_padrao_setor_w := '';
                  END IF;

                  IF (ie_tipo_agendamento_w <> 'C') THEN
                    IF (dt_ant_w = dt_agenda_trunc_w) THEN
                      ie_primeiro_exame_w := 'N';
                    END IF;
                    dt_ant_w := dt_agenda_trunc_w;
                  END IF;

                  --if  (ie_tipo_agendamento_w <> 'C') then
                  IF (ie_primeiro_exame_w = 'S') THEN
                    ds_texto_retorno_w := obter_texto_padrao_resumo(nr_seq_proc_interno_w,
                                                                    cd_procedimento_w,
                                                                    ie_origem_proced_w,
                                                                    cd_estab_item_w,
                                                                    nm_usuario_p,
                                                                    'S',
                                                                    cd_convenio_w,
                                                                    cd_convenio_w,
                                                                    cd_convenio_w,
                                                                    nr_seq_grupo_selec_w,
                                                                    nr_seq_item_selec_w,
                                                                    'S',
                                                                    'N',
                                                                    nr_seq_ageint_p,
                                                                    cd_medico_exec_w,
                                                                    ie_tipo_agendamento_w);

                    ds_texto_pri_exame_w := ds_texto_retorno_w;
                  END IF;

                  ds_texto_retorno_w      := obter_texto_padrao_resumo(nr_seq_proc_interno_w,
                                                                       cd_procedimento_w,
                                                                       ie_origem_proced_w,
                                                                       cd_estab_item_w,
                                                                       nm_usuario_p,
                                                                       'N',
                                                                       cd_convenio_w,
                                                                       cd_convenio_w,
                                                                       cd_convenio_w,
                                                                       nr_seq_grupo_selec_w,
                                                                       nr_seq_item_selec_w,
                                                                       'S',
                                                                       'N',
                                                                       nr_seq_ageint_p,
                                                                       cd_medico_exec_w,
                                                                       ie_tipo_agendamento_w);
                  ds_texto_padrao_exame_w := ds_texto_retorno_w;
                  /*else
                    ds_texto_padrao_exame_w   := '';
                  end if;*/
                  SELECT coalesce(COUNT(*), 0)
                    INTO STRICT qt_exames_adic_w
                    FROM ageint_exame_adic_item
                   WHERE nr_seq_item = nr_seq_item_w;

                  IF (qt_exames_adic_w > 0) THEN

                    OPEN c05;
                    LOOP
                      FETCH c05
                        INTO nr_min_cheg_prev_adic_w;
                      EXIT WHEN NOT FOUND; /* apply on c05 */
                      BEGIN
                        IF (nr_min_cheg_prev_adic_w > 0) THEN

                          IF (nr_min_cheg_prev_adic_w > nr_min_chegada_prev_w) THEN
                            nr_min_chegada_prev_w := nr_min_cheg_prev_adic_w;
                          END IF;

                        END IF;

                      END;
                    END LOOP;
                    CLOSE c05;

                  END IF;

                  SELECT coalesce(COUNT(*), 0)
                    INTO STRICT qt_exames_lab_w
                    FROM ageint_exame_lab
                   WHERE nr_seq_ageint = nr_seq_ageint_p
                     AND (dt_prevista IS NOT NULL AND dt_prevista::text <> '');

                  /*Inicio da geraCao da orientaCao do procedimento*/

                  CALL ageint_gerar_orient_proc(0,
                                           0,
                                           cd_convenio_w,
                                           nr_seq_proc_interno_w,
                                           NULL,
                                           0,
                                           cd_pessoa_fisica_w,
                                           nm_usuario_p,
                                           cd_estabelecimento_p,
                                           nr_seq_item_w,
                                           ie_resumo_w);
                  BEGIN
                    SELECT ds_texto
                      INTO STRICT ds_orient_proc_w
                      FROM agenda_int_resumo_long
                     WHERE nr_seq_apres = 9
                       AND nr_seq_ageint = nr_seq_item_w;

                    DELETE FROM agenda_int_resumo_long
                     WHERE nr_seq_apres = 9
                       AND nr_seq_ageint = nr_seq_item_w;

                    COMMIT;
                  EXCEPTION
                    WHEN OTHERS THEN
                      ds_orient_proc_w := NULL;
                  END;
                  /*Fim da geraCao da orientaCao do procedimento*/

                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@agenda', ds_agenda_w);
                  IF (ie_tipo_agendamento_w = 'C') THEN
                    ds_resumo_w := replace_macro_clob(ds_resumo_w, '@telefone', nr_telefone_w);
                  ELSE
                    ds_resumo_w := replace_macro_clob(ds_resumo_w, '@telefone', null);
                  END IF;
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@horario', dt_agendamento_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@dtagenda', to_char(dt_agenda_w, 'dd/mm/yyyy'));
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@horagenda', to_char(dt_agenda_w, 'hh24:mi'));
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@diasemana', ds_dia_semana_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@orientpac', ds_orient_pac_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@orientexame', ds_orient_proc_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@orientanestesia', ds_orient_anest_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@medico', nm_medico_exec_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@item', ds_item_ageint_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@valor', vl_item_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@regra', ds_regra_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@glosa', ds_glosa_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@dtprevista', dt_entrega_prevista_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@obsagenda', ds_obs_agenda_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@textopadraosetor', ds_texto_padrao_setor_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@textopadraoexame', ds_texto_padrao_exame_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@dtchegada', to_char(to_date(dt_agendamento_w, 'dd/mm/yyyy hh24:mi:ss') - nr_min_chegada_prev_w / 1440, 'dd/mm/yyyy hh24:mi:ss'));
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@reserva', nr_reserva_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@protocoloagenda', nr_seq_ageint_p);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@orientpreparo', ds_orient_prep_proc_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@medreq', nm_medico_req_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@quimio', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@onc_item', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@lado', ie_lado_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@sala', ds_sala_consulta_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@tipoagenda', ds_tipo_agenda_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@procinterno', nr_seq_proc_interno_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@ds_estab_agenda', ds_estab_agenda_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@ds_end_estab_agenda', ds_end_estab_agenda_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@OrientacaoPreparoAgeintItem',    obter_orient_preparo_item(nr_seq_proc_interno_w, cd_estabelecimento_w, ds_separador_w, nr_seq_topografia_w, ie_tipo_atendimento_w, nr_seq_item_w));

                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@OrientAgenda',    ds_orientagenda_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@EndAgenda',       ds_endagenda_w);


					select 	max(ds)
					into STRICT  	ds_setor_executor_w
					from (  SELECT  obter_desc_setor_atend(cd_setor_atendimento) ds
						from 	proc_interno_setor
						where  	nr_seq_proc_interno  = nr_seq_proc_interno_w
						and 	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
						order by   	nr_prioridade,
									nr_sequencia desc) alias3 LIMIT 1;
				
				  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@setor_executor',   ds_setor_executor_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@prontuario',   nr_prontuario_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@TempoJejumProc',   obter_tempo_jejum_item(nr_seq_item_w));
				  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@MaiorTempoJejumProc',    obter_tempo_jejum_ageint(nr_seq_ageint_p, trunc(dt_agenda_w)));
                  IF (ie_encaixe_w = 'S') THEN
                    ds_resumo_w := replace_macro_clob(ds_resumo_w, '@msgencaixe', ds_msg_encaixe_w);
                  ELSE
                    ds_resumo_w := replace_macro_clob(ds_resumo_w, '@msgencaixe', null);
                  END IF;
                  ds_resumo_w := replace_macro_clob(ds_resumo_w,
                                             '@textopriexame',
                                             ds_texto_pri_exame_w);

                ELSE

                  ds_resumo_w := ds_resumo_w;

                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@agenda', ds_agenda_w);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@telefone', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@horario', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@dtagenda', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@horagenda', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@medreq', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@medico', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@orientpac', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@orientexame', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@orientanestesia', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@item', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@valor', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@regra', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@glosa', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@dtprevista', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@obsagenda', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@textopadraosetor', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@textopadraoexame', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@dtchegada', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@reserva', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@protocoloagenda', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@orientpreparo', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@msgencaixe', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@lado', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@sala', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@tipoagenda', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@procinterno', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@ds_estab_agenda', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@ds_end_estab_agenda', null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@setor_executor',   null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@prontuario',   null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@TempoJejumProc',   null);
            
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@OrientAgenda',    null);
                  ds_resumo_w := replace_macro_clob(ds_resumo_w, '@EndAgenda',       null);

                  OPEN c04;
                  LOOP
                    FETCH c04
                      INTO dt_agenda_quimio_w,
                           ds_dia_ciclo_w;
                    EXIT WHEN NOT FOUND; /* apply on c04 */
                    BEGIN

                      ds_resumo_w := replace_macro_clob(ds_resumo_w,
                                                 '@quimio',
                                                 ds_dia_ciclo_w || '  ' ||
                                                 dt_agenda_quimio_w);


            ds_resumo_w := replace_macro_clob(ds_resumo_w,
                                                 '@onc_item',
                                                 ds_dia_ciclo_w || '  ' ||
                                                 dt_agenda_quimio_w);
                    END;
                  END LOOP;
                  CLOSE c04;

                END IF;


            OPEN c03;
            LOOP
              FETCH c03
                INTO ds_exame_adic_w,
                     nr_seq_proc_exame_adic_w;
              EXIT WHEN NOT FOUND; /* apply on c03 */
              BEGIN

                SELECT ds_orientacao_usuario
                  INTO STRICT ds_orient_exame_adic_w
                  FROM proc_interno
                 WHERE nr_sequencia = nr_seq_proc_exame_adic_w;

                ds_orient_exame_adic_ww := ds_orient_exame_adic_ww ||
                                           ds_orient_exame_adic_w || ds_separador_w;
                ds_exame_adic_ww        := ds_exame_adic_ww || ds_exame_adic_w ||
                                           ds_separador_w;
                ds_orient_com_exame_ww  := ds_orient_com_exame_ww || ds_exame_adic_w ||
                                           ds_separador_w || ds_orient_exame_adic_w ||
                                           ds_separador_w;

              END;
            END LOOP;
            CLOSE c03;

            ds_resumo_w := replace_macro_clob(ds_resumo_w,
                                       '@orientacaoexameadic',
                                       REPLACE(ds_orient_exame_adic_ww,
                                                '
',
                                                ds_separador_w)); --NAO ALTERAR ESSE ESPACAMENTO
            ds_resumo_w := replace_macro_clob(ds_resumo_w,
                                       '@orientacaocomexameadic',
                                       REPLACE(ds_orient_com_exame_ww,
                                                '
',
                                                ds_separador_w)); --NAO ALTERAR ESSE ESPACAMENTO
            ds_resumo_w := replace_macro_clob(ds_resumo_w, '@exameadicional', ds_exame_adic_ww);
            ds_resumo_w := replace_macro_clob(ds_resumo_w, '@URL_TELEMEDICINA', ds_url_telemedicina_w);
            ds_resumo_w := replace_macro_clob(ds_resumo_w, '@urlTelemedicinaExterno', ds_url_tele_terc_w);
            ds_item_w := ds_item_w || chr(10) || ds_resumo_w;
            end if; --if final cursor
            END;
          END LOOP;
          CLOSE c02;

        END IF;

      END;
    END LOOP;

    IF (ie_rodape_setor_w = 'S') AND (ds_rodape_w LIKE '%@textopadraosetor%') THEN
      ds_rodape_w := ds_texto_setor_w;
    END IF;

	vl_total_exames_w := 0;
	OPEN c06;
    LOOP
      FETCH c06
        INTO ds_orient_lab_w,
             nm_exame_w,
			 vl_exame_lab_w;
      EXIT WHEN NOT FOUND; /* apply on c06 */
      BEGIN
		vl_total_exames_w := vl_total_exames_w + vl_exame_lab_w;

		ds_orient_lab_w := REPLACE(ds_orient_lab_w,
                                   '
',
                                   ds_separador_w);

        IF (ds_orient_lab_w IS NOT NULL AND ds_orient_lab_w::text <> '') THEN
          ds_orient_lab_ww := ds_orient_lab_ww || nm_exame_w || ds_separador_w ||
                              ds_orient_lab_w || ds_separador_w || ds_separador_w;
        END IF;

      END;
    END LOOP;
    CLOSE c06;
    ds_tempo_max_jejum_w   := '';
    ds_titulo_orient_lab_w := wheb_mensagem_pck.get_texto(307458) /*'Exames Laboratoriais'*/
                              || ds_separador_w || ds_separador_w;

    SELECT MAX(coalesce(obter_tempo_padrao_exame(nr_seq_exame), 0))
      INTO STRICT qt_tempo_max_jejum_w
      FROM ageint_exame_lab
     WHERE nr_seq_ageint = nr_seq_ageint_p
       AND (dt_prevista IS NOT NULL AND dt_prevista::text <> '');

    SELECT obter_dados_pf_pj(NULL, cd_cgc, 'ECM'),
           obter_dados_pf_pj(NULL, cd_cgc, 'F')
      INTO STRICT ds_end_estab_logado_w,
           ds_estab_logado_w
      FROM estabelecimento
     WHERE cd_estabelecimento = cd_estabelecimento_p;

    ds_tempo_max_jejum_w  := wheb_mensagem_pck.get_texto(307460) || ': ' /*'Jejum necessario: '*/
                             || qt_tempo_max_jejum_w || ' ' ||
                             lower(wheb_mensagem_pck.get_texto(307462)); --' horas';
    ds_orient_lab_macro_w := ds_titulo_orient_lab_w || ds_orient_lab_ww;
	
	SELECT  Min(Obter_Horario_item_Ageint(a.nr_seq_agenda_cons, a.nr_Seq_Agenda_exame, a.nr_Sequencia) -  coalesce(p.qt_min_preparo,0)/1440)    AS dia
	into STRICT 	dt_menor_agendamento_w
	FROM agenda_integrada ai, agenda_integrada_item a
LEFT OUTER JOIN proc_interno p ON (a.nr_seq_proc_interno = p.nr_sequencia)
WHERE a.nr_seq_Agenda_int  = nr_seq_ageint_p and ai.nr_sequencia = a.nr_seq_agenda_int  and ((a.nr_seq_agenda_exame IS NOT NULL AND a.nr_seq_agenda_exame::text <> '') or (a.nr_seq_agenda_cons IS NOT NULL AND a.nr_seq_agenda_cons::text <> '') or a.ie_tipo_agendamento = 'Q') and not exists (	SELECT  1
						from    agenda_consulta x
						where  x.nr_sequencia     = a.nr_seq_agenda_cons
						and    x.ie_status_agenda = 'C') AND not exists (	select  1
						from    agenda_paciente y
						where  y.nr_sequencia     = a.nr_seq_agenda_exame
						and    y.ie_status_agenda = 'C');

  SELECT   MAX(Obter_Prontuario_Paciente(a.cd_pessoa_fisica))
  INTO STRICT     nr_prontuario_w
  FROM   agenda_integrada a
  WHERE   a.nr_sequencia = nr_seq_ageint_p;

	select CASE WHEN coalesce(max(nr_seq_proc_interno)::text, '') = '' THEN  'N'  ELSE 'S' END
	into STRICT ie_orientacao_ageint_item_w
	from AGENDA_INTEGRADA_ITEM
	where nr_seq_agenda_int = nr_seq_ageint_p;
	
	if (ie_orientacao_ageint_item_w <> 'S') then
		select CASE WHEN coalesce(max(a.nr_seq_proc_interno)::text, '') = '' THEN  'N'  ELSE 'S' END
		into STRICT ie_orientacao_ageint_item_w
		from AGEINT_EXAME_ADIC_ITEM a,
		AGENDA_INTEGRADA_ITEM b
		where a.nr_seq_item = b.nr_sequencia
		and b.nr_seq_agenda_int = nr_seq_ageint_p;
	end if;

    ds_cabecalho_w := substituir_macro_cab_rod(ds_cabecalho_w, 'C');

    ds_rodape_w := substituir_macro_cab_rod(ds_rodape_w, 'R');
	
	ds_resumo_ageint_w := ds_cabecalho_w || ds_item_w || ds_rodape_w;	
	
    ds_resumo_ageint_w := replace_macro_clob(ds_resumo_ageint_w, '@protocoloagenda',  nr_seq_ageint_p);
    ds_resumo_ageint_w := replace_macro_clob(ds_resumo_ageint_w, '@lado',             ie_lado_w);
    ds_resumo_ageint_w := replace_macro_clob(ds_resumo_ageint_w, '@procinterno',      nr_seq_proc_interno_w);

    INSERT INTO agenda_integrada_resumo(nr_sequencia,
       dt_atualizacao,
       nm_usuario,
       dt_atualizacao_nrec,
       nm_usuario_nrec,
       nr_seq_ageint,
       ds_resumo_long)
    VALUES (nextval('agenda_integrada_resumo_seq'),
       clock_timestamp(),
       nm_usuario_p,
       clock_timestamp(),
       nm_usuario_p,
       nr_seq_ageint_p,
       ds_resumo_ageint_w);
  ELSIF (ie_utiliza_formatacao_w = 'S') then
    CALL ageint_gerar_resumo_long(nr_seq_ageint_p, nm_usuario_p, cd_estabelecimento_p);
  ELSIF (ie_utiliza_formatacao_w = 'E') then
    CALL ageint_gerar_resumo_clob(nr_seq_ageint_p, nm_usuario_p, cd_estabelecimento_p);
  END IF;
  COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_gerar_resumo (nr_seq_ageint_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) IS ie_tipo_resumo_w varchar(15) FROM PUBLIC;

