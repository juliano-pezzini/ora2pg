-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_cpt ( nr_seq_segurado_p bigint, nr_seq_guia_proc_p bigint, nr_seq_conta_proc_p bigint, nr_seq_reembolso_proc_p bigint, nr_seq_requisicao_proc_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_solicitacao_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_area_w			bigint;
cd_especialidade_w		bigint;
cd_grupo_w			bigint;
ie_origem_proced_w		bigint;
qt_dias_w			integer;
dt_inicio_vigencia_w		timestamp;
dt_carencia_w			timestamp;
dt_inclusao_operadora_w		timestamp;
nr_seq_carencia_proc_w		bigint;
ie_liberado_w			varchar(1) := 'N';
nr_seq_prestador_w		bigint;
nr_seq_guia_w			bigint;
ie_tipo_consistencia_w		varchar(2);
nr_seq_conta_w			bigint;
nr_seq_reembolso_w		bigint;
nr_seq_tipo_acomodacao_w	bigint;
ie_tipo_guia_w			varchar(1);
nr_seq_requisicao_w		bigint;
dt_solicitacao_w		timestamp;
nr_seq_grupo_servico_w		bigint;
ie_grupo_serv_lib_w		varchar(1);
ie_liberado_ant_w		varchar(1)	:= 'N';

c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_liberado,
		c.qt_dias,
		c.dt_inicio_vigencia,
		a.nr_seq_grupo_servico
	from	pls_carencia_proc a,
		pls_carencia c,
		pls_tipo_carencia b
	where	a.nr_seq_tipo_carencia					= b.nr_sequencia
	and	b.nr_sequencia						= c.nr_seq_tipo_carencia
	and	c.nr_seq_segurado					= nr_seq_segurado_p
	and	((a.cd_procedimento	= cd_procedimento_p ) or (coalesce(a.cd_procedimento::text, '') = ''))
	and	coalesce(a.ie_origem_proced,ie_origem_proced_w) 		= ie_origem_proced_w
	and	coalesce(a.cd_grupo_proc,cd_grupo_w)				= cd_grupo_w
	and	coalesce(a.cd_especialidade, cd_especialidade_w)		= cd_especialidade_w
	and	coalesce(a.cd_area_procedimento, cd_area_w) 			= cd_area_w
	and 	coalesce(a.nr_seq_tipo_acomodacao,nr_seq_tipo_acomodacao_w)	= nr_seq_tipo_acomodacao_w
	and 	coalesce(a.ie_tipo_guia,ie_tipo_guia_w)			= ie_tipo_guia_w
	and	b.ie_cpt						= 'S'
	and	b.ie_situacao						= 'A'
	and	coalesce(c.dt_inicio_vigencia,dt_inclusao_operadora_w)	<= dt_solicitacao_w
	and (dt_inclusao_operadora_w >= a.dt_inicio_vigencia or coalesce(a.dt_inicio_vigencia::text, '') = '')
	and (dt_inclusao_operadora_w <= a.dt_fim_vigencia or coalesce(a.dt_fim_vigencia::text, '') = '')
	and	(((nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '')
		and	((exists (	SELECT	1
					from	pls_diagnostico x
					where	trim(both x.cd_doenca)	= trim(both a.cd_doenca_cid)
					and	x.nr_seq_guia = nr_seq_guia_w)) or (coalesce(trim(both a.cd_doenca_cid)::text, '') = ''))
		and	((exists (	select	1
					from	pls_diagnostico x,
						CID_DOENCA	y
					where	x.cd_doenca	= y.cd_doenca_cid
					and	x.nr_seq_guia	= nr_seq_guia_w
					and	trim(both a.CD_CATEGORIA_CID) = y.CD_CATEGORIA_CID)) or (coalesce(trim(both a.CD_CATEGORIA_CID)::text, '') = ''))) /*aaschlote - Coloquei o trim pois colocava um espaco vazio no final*/
	or (coalesce(nr_seq_guia_w::text, '') = ''))
	and ((a.cd_procedimento IS NOT NULL AND a.cd_procedimento::text <> '')
		or (a.cd_grupo_proc IS NOT NULL AND a.cd_grupo_proc::text <> '')
		or (a.cd_especialidade IS NOT NULL AND a.cd_especialidade::text <> '')
		or (a.cd_area_procedimento IS NOT NULL AND a.cd_area_procedimento::text <> '')
		or (a.nr_seq_grupo_servico IS NOT NULL AND a.nr_seq_grupo_servico::text <> ''))					
	order by
		a.cd_area_procedimento,
		a.cd_especialidade,
		a.cd_grupo_proc,		
		a.cd_procedimento;


BEGIN

if (coalesce(nr_seq_guia_proc_p,0)		> 0) then
	ie_tipo_consistencia_w	:= 'G';
elsif (coalesce(nr_seq_conta_proc_p,0)		> 0) then
	ie_tipo_consistencia_w	:= 'C';
	
	if (nr_seq_reembolso_proc_p IS NOT NULL AND nr_seq_reembolso_proc_p::text <> '') then
		ie_tipo_consistencia_w := 'CR';
	end if;
	
elsif (coalesce(nr_seq_requisicao_proc_p,0)	> 0) then
	ie_tipo_consistencia_w	:= 'R';
end if;

SELECT * FROM pls_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w;
	
if (coalesce(dt_solicitacao_p::text, '') = '') then
	dt_solicitacao_w	:= clock_timestamp();
else
	dt_solicitacao_w	:= dt_solicitacao_p;
end if;

begin
select	trunc(dt_inclusao_operadora,'dd')
into STRICT	dt_inclusao_operadora_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_p;
exception
when others then
	dt_inclusao_operadora_w := '';
end;

if (ie_tipo_consistencia_w = 'G') then
	begin
	select 	nr_seq_guia
	into STRICT	nr_seq_guia_w
	from	pls_guia_plano_proc
	where	nr_sequencia = nr_seq_guia_proc_p;
	exception
		when others then
		nr_seq_guia_w	:= null;
	end;

	begin
	
	select	nr_seq_prestador,
		coalesce(nr_seq_tipo_acomodacao,0),
		coalesce(ie_tipo_guia,'')
	into STRICT	nr_seq_prestador_w,
		nr_seq_tipo_acomodacao_w,
		ie_tipo_guia_w
	from	pls_guia_plano
	where	nr_sequencia = nr_seq_guia_w;
	
	exception
	when others then
		nr_seq_prestador_w := null;
	end;
elsif (ie_tipo_consistencia_w in ('C','CR')) then
	select	nr_seq_conta
	into STRICT	nr_seq_conta_w
	from	pls_conta_proc
	where	nr_sequencia = nr_seq_conta_proc_p;
	
	begin
	select	a.nr_seq_prestador,
		coalesce(b.nr_seq_tipo_acomodacao,0)
	into STRICT	nr_seq_prestador_w,
		nr_seq_tipo_acomodacao_w
	from	pls_protocolo_conta a,
		pls_conta b
	where	a.nr_sequencia = b.nr_seq_protocolo
	and	b.nr_sequencia = nr_seq_conta_w;
	
	exception
	when others then
		nr_seq_prestador_w := null;
	end;
	
	
elsif (ie_tipo_consistencia_w = 'R') then
	select 	nr_seq_requisicao
	into STRICT	nr_seq_requisicao_w
	from	pls_requisicao_proc
	where	nr_sequencia	= nr_seq_requisicao_proc_p;

	begin
	
	select	nr_seq_prestador,
		coalesce(nr_seq_tipo_acomodacao,0),
		ie_tipo_guia
	into STRICT	nr_seq_prestador_w,
		nr_seq_tipo_acomodacao_w,
		ie_tipo_guia_w
	from	pls_requisicao
	where	nr_sequencia	= nr_seq_requisicao_w;
	
	exception
	when others then
		nr_seq_prestador_w 		:= null;
		nr_seq_tipo_acomodacao_w	:= 0;
		ie_tipo_guia_w			:= 'X';
	end;
end if;

open c01;
loop
fetch c01 into	
	nr_seq_carencia_proc_w,
	ie_liberado_w,
	qt_dias_w,
	dt_inicio_vigencia_w,
	nr_seq_grupo_servico_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	ie_grupo_serv_lib_w	:= 'S';
	if (nr_seq_grupo_servico_w IS NOT NULL AND nr_seq_grupo_servico_w::text <> '') then
		ie_grupo_serv_lib_w := pls_se_grupo_preco_servico_lib(nr_seq_grupo_servico_w,cd_procedimento_p,ie_origem_proced_p);
	end if;
	if (ie_grupo_serv_lib_w = 'S') then
		ie_liberado_w	:= ie_liberado_w;
	else
		ie_liberado_w	:= ie_liberado_ant_w;
	end if;
	ie_liberado_ant_w	:= ie_liberado_w;
	
end loop;
close c01;

if (ie_liberado_w	= 'S') then
	select (coalesce(dt_inicio_vigencia_w,dt_inclusao_operadora_w) + qt_dias_w)
	into STRICT	dt_carencia_w
	;

	if (coalesce(dt_solicitacao_p,clock_timestamp()) < dt_carencia_w) then
		if (ie_tipo_consistencia_w = 'G') then
			CALL pls_gravar_motivo_glosa(	'1421', null, nr_seq_guia_proc_p,
							null, 'CPT - Liberado a partir de ' || to_char(dt_carencia_w,'dd/mm/yyyy'), nm_usuario_p,
							'B', 'CG', nr_seq_prestador_w, null,
							null);
		elsif (ie_tipo_consistencia_w = 'C') then
			CALL pls_gravar_conta_glosa(	'1421',null, nr_seq_conta_proc_p,
						null,'N','CPT - Liberado a partir de '||to_char(dt_carencia_w,'dd/mm/yyyy'),
						nm_usuario_p,'A','CC',
						nr_seq_prestador_w, cd_estabelecimento_p, '', null);
		elsif (ie_tipo_consistencia_w = 'R') then
			CALL pls_gravar_requisicao_glosa(	'1421', null, nr_seq_requisicao_proc_p,
							null, 'CPT - Liberado a partir de '||to_char(dt_carencia_w,'dd/mm/yyyy'), nm_usuario_p,
							nr_seq_prestador_w, cd_estabelecimento_p, null,
							'');
							
		elsif (ie_tipo_consistencia_w = 'CR') then
			CALL pls_gravar_conta_glosa(	'1421',null, nr_seq_conta_proc_p,
						null,'N','CPT - Liberado a partir de '||to_char(dt_carencia_w,'dd/mm/yyyy'),
						nm_usuario_p,'A','CR',
						nr_seq_prestador_w, cd_estabelecimento_p, '', null);
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_cpt ( nr_seq_segurado_p bigint, nr_seq_guia_proc_p bigint, nr_seq_conta_proc_p bigint, nr_seq_reembolso_proc_p bigint, nr_seq_requisicao_proc_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_solicitacao_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

