-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE verifica_gerar_solic_urgente ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, ie_urgente_p INOUT text, ie_considera_ent_urgente_p INOUT text) AS $body$
DECLARE

 
cd_estabelecimento_w		integer;
ie_considera_ent_urgente_w		varchar(3);
ie_dia_util_ent_urgente_w		varchar(1);
qt_dia_entrega_urgente_w		integer;
qt_dias_util_w			integer;
dt_inicial_w			timestamp;
dt_final_w			timestamp;
qt_entrega_w			smallint := 0;
ie_retorno_w			varchar(1);
nr_item_solic_compra_w		integer;

c01 CURSOR FOR 
SELECT	nr_item_solic_compra 
from	solic_compra_item 
where	nr_solic_compra = nr_solic_compra_p;


BEGIN 
 
ie_retorno_w	:= 'N';
 
select	cd_estabelecimento 
into STRICT	cd_estabelecimento_w 
from	solic_compra 
where	nr_solic_compra = nr_solic_compra_p;
 
select	coalesce(max(ie_considera_ent_urgente),'N'), 
	coalesce(max(ie_dia_util_ent_urgente),'N'), 
	coalesce(max(qt_dia_entrega_urgente),0) 
into STRICT	ie_considera_ent_urgente_w, 
	ie_dia_util_ent_urgente_w, 
	qt_dia_entrega_urgente_w 
from	parametro_compras 
where	cd_estabelecimento = cd_estabelecimento_w;
 
if (ie_considera_ent_urgente_w in ('S','SC','SL','SB')) then 
	begin 
	if (qt_dia_entrega_urgente_w IS NOT NULL AND qt_dia_entrega_urgente_w::text <> '') then 
		begin 
		if (ie_dia_util_ent_urgente_w = 'S') then 
			dt_inicial_w	:= trunc(clock_timestamp(),'dd');
			dt_final_w	:= dt_inicial_w + qt_dia_entrega_urgente_w;
 
			select	obter_qt_dia_util_periodo(dt_inicial_w,dt_final_w,cd_estabelecimento_w) 
			into STRICT	qt_dias_util_w 
			;
 
			qt_dia_entrega_urgente_w	:= qt_dia_entrega_urgente_w + ((dt_final_w - dt_inicial_w) - qt_dias_util_w);
		end if;
 
		if (ie_considera_ent_urgente_w <> 'SB') then 
		 
			select	count(*) 
			into STRICT	qt_entrega_w 
			FROM solic_compra c, solic_compra_item a
LEFT OUTER JOIN solic_compra_item_entrega b ON (a.nr_solic_compra = b.nr_solic_compra AND a.nr_item_solic_compra = b.nr_item_solic_compra)
WHERE a.nr_solic_compra 		= c.nr_solic_compra   and a.nr_solic_compra		= nr_solic_compra_p and a.nr_item_solic_compra	= nr_item_solic_compra_p and ((b.dt_entrega_solicitada	<= trunc(clock_timestamp()) + qt_dia_entrega_urgente_w) or (a.dt_solic_item		<= trunc(clock_timestamp()) + qt_dia_entrega_urgente_w)) and ((ie_considera_ent_urgente_w	= 'S') or (ie_considera_ent_urgente_w	= 'SC' and (c.cd_centro_custo IS NOT NULL AND c.cd_centro_custo::text <> '')) or (ie_considera_ent_urgente_w	= 'SL' and (c.cd_local_estoque IS NOT NULL AND c.cd_local_estoque::text <> '')));
 
		elsif (ie_considera_ent_urgente_w = 'SB') then 
			 
			open C01;
			loop 
			fetch C01 into	 
				nr_item_solic_compra_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin 
				 
				if (qt_entrega_w = 0) then 
				 
					select	count(*) 
					into STRICT	qt_entrega_w 
					FROM solic_compra c, solic_compra_item a
LEFT OUTER JOIN solic_compra_item_entrega b ON (a.nr_solic_compra = b.nr_solic_compra AND a.nr_item_solic_compra = b.nr_item_solic_compra)
WHERE a.nr_solic_compra 		= c.nr_solic_compra   and a.nr_solic_compra		= nr_solic_compra_p and a.nr_item_solic_compra	= nr_item_solic_compra_w and ((b.dt_entrega_solicitada	<= trunc(clock_timestamp()) + qt_dia_entrega_urgente_w) or (a.dt_solic_item		<= trunc(clock_timestamp()) + qt_dia_entrega_urgente_w));
						 
				end if;
				end;
			end loop;
			close C01;			
		end if;
		 
		if (qt_entrega_w > 0) then 
			ie_retorno_w	:= 'S';
		end if;
	 
		end;
	end if;
	end;
end if;
 
ie_considera_ent_urgente_p	:= ie_considera_ent_urgente_w;
ie_urgente_p 		:= ie_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE verifica_gerar_solic_urgente ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, ie_urgente_p INOUT text, ie_considera_ent_urgente_p INOUT text) FROM PUBLIC;

