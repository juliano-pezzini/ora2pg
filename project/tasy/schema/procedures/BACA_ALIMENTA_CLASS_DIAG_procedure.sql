-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


procedure baca_alimenta_class_diag is 
 
tb_ie_classificacao_w	pls_util_cta_pck.t_varchar2_table_1; 
tb_rowid_w		pls_util_cta_pck.t_rowid; 
nr_indice_w		pls_integer; 
nr_seq_ultima_conta_w	pls_conta.nr_sequencia%type; 
ie_classificacao_w	pls_diagnostico_conta.ie_classificacao%type; 
 
cursor c01 is 
	select 	a.rowid, 
		a.ie_classificacao, 
		a.dt_atualizacao_nrec, 
		a.nr_seq_conta, 
		(select	count(1) 
		 from	pls_diagnostico_conta z 
		 where	z.nr_seq_conta = a.nr_seq_conta 
		 and	z.ie_classificacao = 'P') qtde_princ 
	from	pls_diagnostico_conta a	 
	where	cd_doenca is not null 
	and	ie_classificacao is null 
	order by nr_seq_conta, dt_atualizacao_nrec, nr_sequencia; 
	 



CREATE OR REPLACE PROCEDURE p_atualiza_class ( tb_rowid_p INOUT pls_util_cta_pck.t_rowid, tb_ie_classificacao_p INOUT pls_util_cta_pck.t_varchar2_table_1) AS $body$
DECLARE
_ora2pg_r RECORD;
BEGIN
 
-- se tiver algo para atualizar 
if (tb_rowid_p.count > 0) then 
 
	-- atualiza os dados no banco 
	forall i in tb_rowid_p.first..tb_rowid_p.last 
		update	pls_diagnostico_conta set 
			ie_classificacao = tb_ie_classificacao_p(i), 
			nm_usuario = 'bacaOPS', 
			dt_atualizacao = clock_timestamp() 
		where	rowid = tb_rowid_p(i);
		commit;
	 
	-- limpa as variáveis 
	tb_rowid_p.delete;
	tb_ie_classificacao_p.delete;
end if;
	 
end;
	 
begin 
 
nr_indice_w := 0;
tb_rowid_w.delete;
tb_ie_classificacao_w.delete;
 
for r_c01_w in c01 loop 
 
	if (coalesce(nr_seq_ultima_conta_w, -20) != r_c01_w.nr_seq_conta) then 
		 
		-- siginifica que tem uma classificação principal informada e sempre terá apenas as secundárias 
		if (r_c01_w.qtde_princ > 0) then 
			ie_classificacao_w := 'S';
		else 
			ie_classificacao_w := 'P';
		end if;
	else 
		ie_classificacao_w := 'S';
	end if;
 
	tb_rowid_w(nr_indice_w) := r_c01_w.rowid;
	tb_ie_classificacao_w(nr_indice_w) := ie_classificacao_w;
	 
	-- a cada 5000 registros envia para o banco 
	if (nr_indice_w >= 5000) then 
		SELECT * FROM p_atualiza_class(tb_rowid_w, tb_ie_classificacao_w) INTO STRICT _ora2pg_r;
 tb_rowid_w := _ora2pg_r.tb_rowid_p; tb_ie_classificacao_w := _ora2pg_r.tb_ie_classificacao_p;
		nr_indice_w := 0;
	end if;
	 
	nr_seq_ultima_conta_w := r_c01_w.nr_seq_conta;
	nr_indice_w := nr_indice_w + 1;
end loop;
-- se sobrou alguma coisa para enviar 
SELECT * FROM p_atualiza_class(tb_rowid_w, tb_ie_classificacao_w) INTO STRICT _ora2pg_r;
 tb_rowid_w := _ora2pg_r.tb_rowid_p; tb_ie_classificacao_w := _ora2pg_r.tb_ie_classificacao_p;
 
end;
$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE p_atualiza_class ( tb_rowid_p INOUT pls_util_cta_pck.t_rowid, tb_ie_classificacao_p INOUT pls_util_cta_pck.t_varchar2_table_1) FROM PUBLIC;

