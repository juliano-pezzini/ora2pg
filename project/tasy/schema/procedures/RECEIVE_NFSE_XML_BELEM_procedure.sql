-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE receive_nfse_xml_belem (ie_opcao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_natureza_operacao_p text, cd_condicao_pagamento_p text, cd_serie_nf_p text, nr_nota_fiscal_p text, nr_ordem_compra_p text, dt_emissao_p text, dt_entrada_saida_p text, ie_entrada_saida_p text, cd_cgc_emitente_p text, ds_razao_emit_p text, ds_fantasia_emit text, ds_logradouro_emit_p text, nr_endereco_emit_p text, ds_bairro_emit_p text, ds_municipio_emit_p text, ds_uf_emit_p text, cd_cep_emit_p text, ds_pais_emit_p text, nr_telefone_emit_p text, nr_inscr_estadual_emit_p text, cd_local_estoque_p bigint, cd_centro_custo_p bigint, nr_seq_lote_p bigint, cd_material_p text, qt_item_nf_p text, vl_unitario_item_nf_p text, cd_lote_fabricacao_p text, qt_material_lote_p text, dt_fabricacao_p text, dt_validade_p text, vl_base_calculo_icms_p text, vl_tributo_icms_p text, tx_tributo_icms_p text, vl_base_calculo_iss_p text, vl_tributo_iss_p text, tx_tributo_iss_p text, vl_base_calculo_pis_p text, vl_tributo_pis_p text, tx_tributo_pis_p text, tx_tributo_cofins_p text, vl_base_calculo_cofins_p text, vl_tributo_cofins_p text, vl_base_calculo_ipi_p text, vl_tributo_ipi_p text, tx_tributo_ipi_p text, cd_barra_material_p text, nr_danfe_p text, nr_seq_registro_insp_p bigint, nr_ordem_compra_insp_p bigint, nr_sequencia_p INOUT bigint, nr_item_nf_p INOUT bigint, ie_erro_p INOUT text, cd_serie_nf_padrao_p text, cd_cond_pagamento_padrao_p bigint, cd_nat_operacao_p bigint, cd_operacao_nf_p bigint default 0, nr_registro_anvisa_p text default null, vl_base_calculo_icmsst_p text default null, vl_tributo_icmsst_p text default null, tx_tributo_icmsst_p text default null, vl_icms_deson_p text default '0', cst_icms40_p text default '0', ds_ad_item_p text default null, cd_verificacao_p text DEFAULT NULL, vl_servico_p bigint DEFAULT NULL) AS $body$
DECLARE

					
/*ie_opcao_p
1 - Importa a parte do cabecalho da nota fiscal
2 - Importa os itens da nota fiscal
3 - Importa os tributos da nf
*/
nr_sequencia_w			bigint;
nr_sequencia_nf_w			bigint;
cd_cgc_emitente_w		varchar(14);
cd_tipo_pessoa_w			smallint;
cd_serie_nf_w			varchar(5);
cd_operacao_nf_w			bigint;
cd_oper_nota_imp_w		smallint;
cd_natureza_operacao_w		smallint;
cd_condicao_pagamento_w		bigint;
qt_existe_w			bigint;
cd_estabelecimento_w		smallint;
nm_usuario_dest_w			varchar(15);
nr_seq_classif_w			bigint;
nr_item_nf_w			integer;
vl_total_item_nf_w			double precision 	:= 0;
vl_liquido_w			double precision	:= 0;
qt_item_estoque_w			double precision;
cd_material_estoque_w		integer;
cd_unidade_medida_compra_w	varchar(30);
cd_unidade_medida_estoque_w	varchar(30);
qt_conv_compra_estoque_w		double precision;
cd_local_estoque_w		smallint;
cd_material_w			integer;
ie_tipo_conta_w			smallint;
cd_centro_custo_w			bigint;
cd_conta_contabil_w		varchar(20);
cd_operacao_estoque_w		bigint;
cd_tributo_w			smallint;
nr_nota_fiscal_w			varchar(255);
nr_item_oci_w			integer;
dt_entrega_w			timestamp;
ie_erro_w				varchar(1) := 'N';
cd_material_barra_w		integer;
nr_seq_inspecao_w			bigint;
ds_texto_padrao_w		constant	varchar(20) := WHEB_MENSAGEM_PCK.get_texto(306421);
qt_titulo_rec_w			bigint;
nr_seq_conta_financeira_w		bigint	:= null;
nr_seq_conta_financ_w		nota_fiscal_item.nr_seq_conta_financ%type := null;
nr_seq_proj_rec_w			ordem_compra_item.nr_seq_proj_rec%type := null;
ie_origem_titulo_w			titulo_receber.ie_origem_titulo%type := null;
nr_seq_classe_tit_rec_w		titulo_receber.nr_seq_classe%type := null;
ie_tipo_titulo_rec_w			titulo_receber.ie_tipo_titulo%type := null;
qt_material_lote_w			nota_fiscal_item_lote.qt_material%type;
ie_operacao_nf_w			varchar(20) := null;
nr_seq_material_estab_w		material_estab.nr_sequencia%type;

c01 CURSOR FOR
SELECT	cd_estabelecimento
from	estabelecimento
where	ie_situacao = 'A';


BEGIN
	
cd_centro_custo_w		:= cd_centro_custo_p;	
cd_local_estoque_w	:= cd_local_estoque_p;
nr_sequencia_w		:= nr_sequencia_p;
cd_cgc_emitente_w 	:= cd_cgc_emitente_p;

/*Quando o local de estoque e vazio ou o centro de custo nao e vazio, entao o local tem que ser direto*/

if	((cd_local_estoque_w = 0) or (cd_centro_custo_w <> 0)) then
	select	min(cd_local_estoque)
	into STRICT	cd_local_estoque_w
	from	local_estoque
	where	ie_tipo_local = 8
	and	cd_estabelecimento = cd_estabelecimento_p
	and	ie_situacao = 'A';
end if;

if (length(cd_cgc_emitente_p) <> '14') then
	ie_erro_w := 'S';
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(184844);
end if;

/*Importa o cabecalho da nota fiscal*/

if (ie_opcao_p = 1) then

	/*Se nao tem o cd_cgc_emitente cadastrado no sistema, cadastra automaticamente*/

	select	count(*)
	into STRICT	qt_existe_w
	from	pessoa_juridica
	where	cd_cgc = cd_cgc_emitente_w
	and	ie_situacao = 'A';	
	
	if (qt_existe_w = 0) then
		begin
		
		select	min(cd_tipo_pessoa)
		into STRICT	cd_tipo_pessoa_w
		from	tipo_pessoa_juridica
		where	ie_situacao = 'A'
		and	((cd_estabelecimento = cd_estabelecimento_p) or (coalesce(cd_estabelecimento::text, '') = ''));		
		
		insert into pessoa_juridica(
			cd_cgc,								ds_razao_social,
			nm_fantasia,							cd_cep,
			ds_endereco,							ds_bairro,
			ds_municipio,							sg_estado,
			dt_atualizacao,							nm_usuario,
			nr_telefone,							nr_endereco,
			nr_inscricao_estadual,						cd_tipo_pessoa,
			ie_prod_fabric,							ie_situacao,
			dt_atualizacao_nrec,						nm_usuario_nrec)
		values (	cd_cgc_emitente_w,						substr(coalesce(ds_razao_emit_p,ds_texto_padrao_w),1,80),
			substr(coalesce(ds_fantasia_emit,ds_texto_padrao_w),1,80),		substr(coalesce(cd_cep_emit_p,'0'),1,15),
			substr(coalesce(ds_logradouro_emit_p,ds_texto_padrao_w),1,40),	substr(ds_bairro_emit_p,1,40),
			substr(coalesce(ds_municipio_emit_p,ds_texto_padrao_w),1,40),	substr(coalesce(ds_uf_emit_p,'SP'),1,15),
			clock_timestamp(),							nm_usuario_p,
			substr(nr_telefone_emit_p,1,15),				substr(nr_endereco_emit_p,1,10),			
			substr(nr_inscr_estadual_emit_p,1,20),				cd_tipo_pessoa_w,
			'N',								'A',
			clock_timestamp(),							nm_usuario_p);
		
		open C01;
		loop
		fetch C01 into	
			cd_estabelecimento_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			insert into pessoa_juridica_estab(
				nr_sequencia,				cd_cgc,
				cd_estabelecimento,			dt_atualizacao,
				nm_usuario,				dt_atualizacao_nrec,
				nm_usuario_nrec,				ie_conta_dif_nf,
				ie_rateio_adiant,				ie_retem_iss)
			values (	nextval('pessoa_juridica_estab_seq'),		cd_cgc_emitente_w,
				cd_estabelecimento_w,			clock_timestamp(),
				nm_usuario_p,				clock_timestamp(),
				nm_usuario_p,				'N',
				'P',					'N');			
			end;
		end loop;
		close C01;		
		end;
		
		select	obter_usuario_pf(cd_comprador_padrao)
		into STRICT	nm_usuario_dest_w
		from	parametro_compras
		where	cd_estabelecimento = cd_estabelecimento_p;
		
		if (nm_usuario_dest_w IS NOT NULL AND nm_usuario_dest_w::text <> '') then
		
			select	max(obter_classif_comunic('F'))
			into STRICT	nr_seq_classif_w
			;
		
			CALL gerar_comunic_padrao(
				clock_timestamp(),
				WHEB_MENSAGEM_PCK.get_texto(306433),
				WHEB_MENSAGEM_PCK.get_texto(306434,'CD_CGC_EMITENTE_W='||cd_cgc_emitente_w),
				nm_usuario_p,
				'N',
				nm_usuario_dest_w,
				'N',         
				nr_seq_classif_w,
				'',
				cd_estabelecimento_p,
				'',
				clock_timestamp(),
				'',
				'');
		end if;
	commit;
	end if;
	/*Fim cadastro da pessoa juridica*/

	
	/*Busca a operacao da nota padrao dos parametros de compras*/

	if (cd_operacao_nf_p = 0) or (coalesce(cd_operacao_nf_p::text, '') = '') then
		begin
		
		select	cd_oper_nota_imp
		into STRICT	cd_oper_nota_imp_w
		from	parametro_compras
		where	cd_estabelecimento = cd_estabelecimento_p;
		if (coalesce(cd_oper_nota_imp_w::text, '') = '') then
			ie_erro_w := 'S';
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(184845);
		end if;	
	
		end;
	else
		begin
		cd_oper_nota_imp_w := cd_operacao_nf_p;
		end;
	end if;
	
	
	
	/*Busca conversao da Serie da Nota*/

	if (cd_serie_nf_padrao_p = '') or (coalesce(cd_serie_nf_padrao_p::text, '') = '') then
		select	obter_conversao_interna(cd_cgc_emitente_w,'SERIE_NOTA_FISCAL','CD_SERIE_NF',cd_serie_nf_p)
		into STRICT	cd_serie_nf_w
		;	
		if (coalesce(cd_serie_nf_w::text, '') = '') then
			ie_erro_w := 'S';
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(184846,'CD_SERIE='||cd_serie_nf_p||';CD_CGC_EMITENTE='||cd_cgc_emitente_p );
		end if;	
	else
		cd_serie_nf_w:= cd_serie_nf_padrao_p;
	end if;		
	
	/*Busca convsersao da natureza de Operacao*/
	
	if (cd_nat_operacao_p = 0) then
		select	obter_conversao_interna(cd_cgc_emitente_w,'NATUREZA_OPERACAO','CD_NATUREZA_OPERACAO',substr(ds_natureza_operacao_p,1,40))  /*  Ckroplin -- OS 364994   */
		into STRICT	cd_natureza_operacao_w
		;	
		if (coalesce(cd_natureza_operacao_w::text, '') = '') then
			ie_erro_w := 'S';
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(184848,'CD_NATUREZA_OPERACAO='|| ds_natureza_operacao_p||';CD_CGC_EMITENTE='||cd_cgc_emitente_p );
		end if;
	else
		cd_natureza_operacao_w:= cd_nat_operacao_p;		
	end if;
	
	select (coalesce(max(nr_sequencia_nf),0)+1)
	into STRICT 	nr_sequencia_nf_w
	from 	nota_fiscal
	where 	cd_estabelecimento = cd_estabelecimento_p
	and 	cd_cgc_emitente    = cd_cgc_emitente_w
	and 	nr_nota_fiscal     = nr_nota_fiscal_p
	and 	cd_serie_nf        = cd_serie_nf_w;	
	
	select	nextval('nota_fiscal_seq')
	into STRICT	nr_sequencia_w
	;

	if (coalesce(cd_operacao_nf_p,0) <> 0) then
		select max(ie_operacao_fiscal)
		into STRICT 	ie_operacao_nf_w
		from 	operacao_nota
		where cd_operacao_nf = cd_operacao_nf_p;
	end if;
	
	if (ie_operacao_nf_w = 'S') then
		ie_operacao_nf_w := 'SD';
	else
		ie_operacao_nf_w := 'EN';
	end if;

	insert into nota_fiscal(
		nr_sequencia,
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_sequencia_nf,
		cd_operacao_nf,
		dt_emissao,
		dt_entrada_saida,
		ie_acao_nf,
		ie_emissao_nf,
		ie_tipo_frete,
		vl_mercadoria,
		vl_total_nota,
		qt_peso_bruto,
		qt_peso_liquido,
		dt_atualizacao,
		nm_usuario,
		cd_condicao_pagamento,
		cd_cgc,
		vl_ipi,
		vl_descontos,
		vl_frete,
		vl_seguro,
		vl_despesa_acessoria,
		vl_desconto_rateio,
		cd_natureza_operacao,
		ie_situacao,
		nr_lote_contabil,
		ie_entregue_bloqueto,
		ie_tipo_nota,
		nr_nota_fiscal,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_ordem_compra,
		nr_danfe,
    cd_verificacao_nfse)
	values (	nr_sequencia_w,
		cd_estabelecimento_p,
		cd_cgc_emitente_w,
		cd_serie_nf_w,		
		nr_sequencia_nf_w,	
		cd_oper_nota_imp_w,
		to_date(substr(dt_emissao_p,9,2) || '/' || substr(dt_emissao_p,6,2) || '/' || substr(dt_emissao_p,1,4),'dd/mm/yyyy'),
		CASE WHEN coalesce(dt_entrada_saida_p::text, '') = '' THEN trunc(clock_timestamp(),'dd')  ELSE to_date(substr(dt_entrada_saida_p,9,2) || '/' || substr(dt_entrada_saida_p,6,2) || '/' || substr(dt_entrada_saida_p,1,4),'dd/mm/yyyy') END ,
		'1',
		'0',
		'0',
		vl_servico_p,
		0,
		0,
		0,
		clock_timestamp(),
		nm_usuario_p,
		null,
		cd_cgc_emitente_w,
		vl_tributo_ipi_p,
		0,
		0,
		0,
		0,
		0,
		cd_natureza_operacao_w,		
		'1',
		0,
		'N',
		coalesce(ie_operacao_nf_w,'EN'),
		nr_nota_fiscal_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_ordem_compra_p,
		nr_danfe_p,
    cd_verificacao_p);
end if;

/*Importa os itens*/

if (ie_opcao_p = 2) then

	/*Busca conversao da natureza de Operacao*/

	select	max(cd_material)
	into STRICT	cd_material_barra_w
	from	material_cod_barra
	where	cd_barra_material = cd_barra_material_p;

	if (coalesce(cd_material_barra_w::text, '') = '') then
	
		select	obter_conversao_interna(cd_cgc_emitente_w,'MATERIAL','CD_MATERIAL',cd_material_p)
		into STRICT	cd_material_w
		;	
	
		if (coalesce(cd_material_w::text, '') = '') then
			delete from nota_fiscal
			where nr_sequencia = nr_sequencia_w;
			ie_erro_w := 'S';
			commit;
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(184849,'CD_MATERIAL='||cd_material_p||';CD_CGC_EMITENTE='||cd_cgc_emitente_p );
		end if;
	
	else
		cd_material_w 	:= cd_material_barra_w;
	end if;

	select	cd_material_estoque,
		substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UMC'),1,30) cd_unidade_medida_compra,
		substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UME'),1,30) cd_unidade_medida_estoque,
		qt_conv_compra_estoque
	into STRICT	cd_material_estoque_w,
		cd_unidade_medida_compra_w,
		cd_unidade_medida_estoque_w,
		qt_conv_compra_estoque_w
	from	material
	where	cd_material = cd_material_w;	
	
	/*Converte para unidade de estoque*/

	qt_item_estoque_w := qt_item_nf_p;
	if (cd_unidade_medida_compra_w <> cd_unidade_medida_estoque_w) then
		qt_item_estoque_w := qt_item_nf_p * qt_conv_compra_estoque_w;
	end if;
	
	vl_total_item_nf_w	:= round((qt_item_nf_p * vl_unitario_item_nf_p)::numeric,2);
	vl_liquido_w		:= vl_total_item_nf_w;	
	
	ie_tipo_conta_w	:= 3;
	if (cd_centro_custo_w = 0) then
		ie_tipo_conta_w	:= 2;
	end if;
	
	select	cd_serie_nf,
		cd_cgc_emitente,
		nr_sequencia_nf,
		cd_natureza_operacao,
		cd_operacao_nf,
		nr_nota_fiscal
	into STRICT	cd_serie_nf_w,
		cd_cgc_emitente_w,
		nr_sequencia_nf_w,
		cd_natureza_operacao_w,
		cd_oper_nota_imp_w,
		nr_nota_fiscal_w
	from	nota_fiscal
	where	nr_sequencia = nr_sequencia_w;
	
	if (cd_oper_nota_imp_w IS NOT NULL AND cd_oper_nota_imp_w::text <> '') then
		select	coalesce(max(cd_operacao_estoque),0)
		into STRICT	cd_operacao_estoque_w
		from	operacao_nota
		where	cd_operacao_nf = cd_oper_nota_imp_w;
	end if;
	
	SELECT * FROM define_conta_material(
		cd_estabelecimento_p, cd_material_w, ie_tipo_conta_w, 0, 0, 0, 0, 0, 0, 0, cd_local_estoque_w, cd_operacao_estoque_w, trunc(clock_timestamp()), cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
		
	select	coalesce(max(nr_item_nf),0) +1
	into STRICT	nr_item_nf_w
	from	nota_fiscal_item
	where	nr_sequencia = nr_sequencia_w;
	
	if (nr_ordem_compra_p > 0) then	
		
		select	dt_entrega
		into STRICT	dt_entrega_w
		from	ordem_compra
		where	nr_ordem_compra = nr_ordem_compra_p;
		
		select	coalesce(max(nr_item_oci),0),
			max(cd_local_estoque),
			max(cd_centro_custo),
			max(nr_seq_proj_rec)
		into STRICT	nr_item_oci_w,
			cd_local_estoque_w,
			cd_centro_custo_w,
			nr_seq_proj_rec_w
		from	ordem_compra_item
		where	nr_ordem_compra = nr_ordem_compra_p
		and	cd_material = cd_material_w;
	end if;	
	
	select	count(nr_titulo)
	into STRICT	qt_titulo_rec_w
	from	titulo_receber a
	where	a.nr_seq_nf_saida	= nr_sequencia_w;
	
	if (qt_titulo_rec_w > 0) then
		begin
				
		select	max(a.ie_origem_titulo),
			max(a.nr_seq_classe),
			max(a.ie_tipo_titulo)
		into STRICT	ie_origem_titulo_w,
			nr_seq_classe_tit_rec_w,
			ie_tipo_titulo_rec_w
		from	titulo_receber a
		where	a.nr_seq_nf_saida	= nr_sequencia_w;
	
		end;
	end if;

	nr_seq_conta_financeira_w := obter_conta_financeira(	'S', cd_estabelecimento_p, cd_material_w, null, null, null, null, cd_cgc_emitente_w, cd_centro_custo_w, nr_seq_conta_financeira_w, null, cd_oper_nota_imp_w, null, null, null, nr_seq_proj_rec_w, null, null, ie_origem_titulo_w, null, nr_seq_classe_tit_rec_w, null, cd_local_estoque_w, null, null, null, null, ie_tipo_titulo_rec_w, null);

	
	if (nr_seq_conta_financeira_w = 0) then
		nr_seq_conta_financeira_w := null;
	end if;
			
	insert into nota_fiscal_item(
		nr_sequencia,
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_sequencia_nf,
		nr_item_nf,
		cd_natureza_operacao,
		qt_item_nf,
		vl_unitario_item_nf,
		vl_total_item_nf,
		dt_atualizacao,
		nm_usuario,
		vl_frete,
		vl_desconto,
		vl_despesa_acessoria,
		cd_material,
		cd_local_estoque,
		cd_unidade_medida_compra,
		qt_item_estoque,
		cd_unidade_medida_estoque,
		cd_conta_contabil,
		vl_desconto_rateio,
		vl_seguro,
		cd_centro_custo,
		cd_material_estoque,
		vl_liquido,
		pr_desconto,
		pr_desc_financ,
		vl_desc_financ,
		nr_nota_fiscal,
		ie_indeterminado,
		nr_ordem_compra,
		nr_item_oci,
		dt_entrega_ordem,
		nr_seq_conta_financ,
		cd_sequencia_parametro)
	values (	nr_sequencia_w,
		cd_estabelecimento_p,
		cd_cgc_emitente_w,
		cd_serie_nf_w,
		nr_sequencia_nf_w,
		nr_item_nf_w,
		cd_natureza_operacao_w,
		qt_item_nf_p,
		vl_unitario_item_nf_p,
		vl_total_item_nf_w,
		clock_timestamp(),
		nm_usuario_p,
		0,
		0,
		0,
		cd_material_w,
		CASE WHEN cd_local_estoque_w=0 THEN null  ELSE cd_local_estoque_w END ,
		cd_unidade_medida_compra_w,
		qt_item_estoque_w,
		cd_unidade_medida_estoque_w,
		cd_conta_contabil_w,
		0,
		0,
		CASE WHEN cd_centro_custo_w=0 THEN null  ELSE cd_centro_custo_w END ,
		cd_material_estoque_w,
		vl_liquido_w,
		0,
		0,
		0,
		nr_nota_fiscal_w,
		'N',
		nr_ordem_compra_p,
		CASE WHEN nr_item_oci_w=0 THEN null  ELSE nr_item_oci_w END ,
		dt_entrega_w,
		nr_seq_conta_financeira_w,
		philips_contabil_pck.get_parametro_conta_contabil);
		
	if (nr_seq_registro_insp_p > 0) then
		
		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_inspecao_w
		from	inspecao_recebimento
		where	nr_seq_registro = nr_seq_registro_insp_p
		and	cd_material = cd_material_w;
		
		if (nr_seq_inspecao_w > 0) then
		
			update	inspecao_recebimento
			set	nr_nota_fiscal 	   = nr_nota_fiscal_w,
				nr_seq_nota_fiscal = nr_sequencia_w,
				nr_seq_item_nf	   = nr_item_nf_w
			where	nr_sequencia 	   = nr_seq_inspecao_w;

			update	inspecao_registro
			set	nr_seq_nf 	= nr_sequencia_w
			where	nr_sequencia	= nr_seq_registro_insp_p;		
		
			update	nota_fiscal_item
			set	nr_seq_inspecao = nr_seq_inspecao_w
			where	nr_sequencia	= nr_sequencia_w
			and	nr_item_nf	= nr_item_nf_w;
		end if;
	
	end if;
		
	if (nr_ordem_compra_insp_p > 0) then
		
		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_inspecao_w
		from	inspecao_recebimento
		where	nr_ordem_compra = nr_ordem_compra_insp_p
		and	cd_material = cd_material_w;
		
		if (nr_seq_inspecao_w > 0) then
		
			update	inspecao_recebimento
			set	nr_nota_fiscal 	   = nr_nota_fiscal_w,
				nr_seq_nota_fiscal = nr_sequencia_w,
				nr_seq_item_nf	   = nr_item_nf_w
			where	nr_sequencia 	   = nr_seq_inspecao_w;

			update	nota_fiscal_item
			set	nr_seq_inspecao = nr_seq_inspecao_w
			where	nr_sequencia	= nr_sequencia_w
			and	nr_item_nf	= nr_item_nf_w;
		end if;		
	end if;	
		
end if;

/*Importa os tributos da nf*/

if (ie_opcao_p = 3) then
	
	select	cd_serie_nf,
		cd_cgc_emitente,
		nr_sequencia_nf,
		nr_nota_fiscal
	into STRICT	cd_serie_nf_w,
		cd_cgc_emitente_w,
		nr_sequencia_nf_w,
		nr_nota_fiscal_w
	from	nota_fiscal
	where	nr_sequencia = nr_sequencia_w;
	
  /*Importa ISS*/

	if (tx_tributo_iss_p > 0) then	
		
		select	coalesce(max(cd_tributo),0)
		into STRICT	cd_tributo_w
		from	tributo
		where	ie_situacao = 'A'
		and	ie_corpo_item = 'I'
		and	ie_tipo_tributo = 'ISS';
	
		if (cd_tributo_w > 0) then

      insert into nota_fiscal_trib(cd_tributo,
					dt_atualizacao,
					nm_usuario,
					nr_seq_interno,
					nr_sequencia,
					vl_base_adic,
					vl_base_nao_retido,
					vl_trib_adic,
					vl_trib_nao_retido,
					tx_tributo,
					vl_tributo,
					vl_base_calculo)
			values ( cd_tributo_w,
					clock_timestamp(),
					nm_usuario_p,
					nextval('nota_fiscal_trib_seq'),
					nr_sequencia_w,
					0,0,0,0,
					tx_tributo_iss_p,
					vl_tributo_iss_p,
					vl_base_calculo_iss_p);
		end if;
	end if;
end if;

if (ie_opcao_p = 5) and (coalesce(nr_registro_anvisa_p, 'XX') <> 'XX') then

/*Busca conversao da natureza de Operacao*/

select	max(cd_material)
into STRICT	cd_material_barra_w
from	material_cod_barra
where	cd_barra_material = cd_barra_material_p;

if (coalesce(cd_material_barra_w::text, '') = '') then

	select	obter_conversao_interna(cd_cgc_emitente_w,'MATERIAL','CD_MATERIAL',cd_material_p)
	into STRICT	cd_material_w
	;	

    if (coalesce(cd_material_w::text, '') = '') then
      delete from nota_fiscal
      where nr_sequencia = nr_sequencia_w;
      ie_erro_w := 'S';
      commit;
      CALL Wheb_mensagem_pck.exibir_mensagem_abort(184849,'CD_MATERIAL='||cd_material_p||';CD_CGC_EMITENTE='||cd_cgc_emitente_p );
    end if;
  else
	  cd_material_w 	:= cd_material_barra_w;
  end if;
	
  begin

  select	max(nr_sequencia)
  into STRICT	nr_seq_material_estab_w
  from	material_estab
  where	cd_material 		= cd_material_w
  and	cd_estabelecimento 	= cd_estabelecimento_p;

  exception
  when others then
    nr_seq_material_estab_w:= null;
  end;

  if (coalesce(nr_seq_material_estab_w,0) <> 0) then
    begin

    update	material_estab
    set	nr_registro_anvisa 	= nr_registro_anvisa_p
    where	cd_material 		= cd_material_w
    and	cd_estabelecimento 	= cd_estabelecimento_p;
    
    end;
  else
    begin

    update	material
    set	nr_registro_anvisa 	= nr_registro_anvisa_p
    where	cd_material 		= cd_material_w;
    
    end;
  end if;
end if;

if (ie_erro_w = 'N') then
	update	nota_fiscal
	set	nr_seq_importada	= nr_seq_lote_p
	where	nr_sequencia 	= nr_sequencia_w;
end if;
	
nr_item_nf_p	:= nr_item_nf_w;
nr_sequencia_p	:= nr_sequencia_w;
ie_erro_p	:= ie_erro_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE receive_nfse_xml_belem (ie_opcao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_natureza_operacao_p text, cd_condicao_pagamento_p text, cd_serie_nf_p text, nr_nota_fiscal_p text, nr_ordem_compra_p text, dt_emissao_p text, dt_entrada_saida_p text, ie_entrada_saida_p text, cd_cgc_emitente_p text, ds_razao_emit_p text, ds_fantasia_emit text, ds_logradouro_emit_p text, nr_endereco_emit_p text, ds_bairro_emit_p text, ds_municipio_emit_p text, ds_uf_emit_p text, cd_cep_emit_p text, ds_pais_emit_p text, nr_telefone_emit_p text, nr_inscr_estadual_emit_p text, cd_local_estoque_p bigint, cd_centro_custo_p bigint, nr_seq_lote_p bigint, cd_material_p text, qt_item_nf_p text, vl_unitario_item_nf_p text, cd_lote_fabricacao_p text, qt_material_lote_p text, dt_fabricacao_p text, dt_validade_p text, vl_base_calculo_icms_p text, vl_tributo_icms_p text, tx_tributo_icms_p text, vl_base_calculo_iss_p text, vl_tributo_iss_p text, tx_tributo_iss_p text, vl_base_calculo_pis_p text, vl_tributo_pis_p text, tx_tributo_pis_p text, tx_tributo_cofins_p text, vl_base_calculo_cofins_p text, vl_tributo_cofins_p text, vl_base_calculo_ipi_p text, vl_tributo_ipi_p text, tx_tributo_ipi_p text, cd_barra_material_p text, nr_danfe_p text, nr_seq_registro_insp_p bigint, nr_ordem_compra_insp_p bigint, nr_sequencia_p INOUT bigint, nr_item_nf_p INOUT bigint, ie_erro_p INOUT text, cd_serie_nf_padrao_p text, cd_cond_pagamento_padrao_p bigint, cd_nat_operacao_p bigint, cd_operacao_nf_p bigint default 0, nr_registro_anvisa_p text default null, vl_base_calculo_icmsst_p text default null, vl_tributo_icmsst_p text default null, tx_tributo_icmsst_p text default null, vl_icms_deson_p text default '0', cst_icms40_p text default '0', ds_ad_item_p text default null, cd_verificacao_p text DEFAULT NULL, vl_servico_p bigint DEFAULT NULL) FROM PUBLIC;

