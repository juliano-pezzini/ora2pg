-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_interface_desconto_folha ( nr_seq_cobranca_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*
ie_tipo_alteracao_w
	A = Alteração de valor
	I = Inclusão de valor
	E = Exclusão de valor
	O = Outros (Alterou a informação financeira)
*/
cd_matricula_w			varchar(20);
vl_incluir_w			double precision;
vl_excluir_w			double precision;
nr_seq_pagador_w		bigint;
dt_mens_atual_w			timestamp;
nr_seq_lote_mens_atual_w	bigint;
nr_seq_lote_mens_ant_w		bigint;
nr_seq_empresa_w		bigint;
vl_mens_ant_w			double precision;
vl_mens_atual_w			double precision;
ie_gravar_registro_w		varchar(1);
dt_referencia_w			timestamp;
dt_mens_ant_w			timestamp;
dt_geracao_w			timestamp;
cd_profissao_w			bigint;
nr_seq_pagador_fin_ant_w	bigint;
nr_seq_pagador_fin_atual_w	bigint;
ie_tipo_alteracao_w		varchar(1);
nr_seq_reajuste_atual_w		bigint;
nr_seq_reajuste_ant_w		bigint;
nr_seq_reaj_exclusao_w		bigint;
tx_reajuste_w			double precision;
vl_excluir_ww			double precision;
ie_tipo_movimentacao_w		varchar(3);
nr_seq_mensalidade_w		pls_mensalidade.nr_sequencia%type;

C01 CURSOR FOR /* Comparar a mensalidade atual com a do mês anterior para verificar a diferença */
	SELECT	nr_seq_pagador,
		vl_mensalidade,
		dt_referencia,
		nr_sequencia
	from	pls_mensalidade
	where	nr_seq_lote = nr_seq_lote_mens_ant_w
	and	coalesce(ie_cancelamento::text, '') = '';

C02 CURSOR FOR /* Lote novo, incluir todas as mensalidades */
	SELECT	nr_seq_pagador,
		vl_mensalidade,
		dt_referencia,
		nr_sequencia
	from	pls_mensalidade
	where	nr_seq_lote = nr_seq_lote_mens_atual_w
	and	coalesce(ie_cancelamento::text, '') = '';

C03 CURSOR FOR /* Mensalidades à incluir, que não estão na mensalidade anteriror */
	SELECT	nr_seq_pagador,
		vl_mensalidade,
		dt_referencia,
		nr_sequencia
	from	pls_mensalidade
	where	nr_seq_lote = nr_seq_lote_mens_atual_w
	and	coalesce(ie_cancelamento::text, '') = ''
	and	nr_seq_pagador not in (	SELECT	nr_seq_pagador
					from	pls_mensalidade
					where	nr_seq_lote = nr_seq_lote_mens_ant_w
					and	coalesce(ie_cancelamento::text, '') = '');


BEGIN

delete from w_pls_desconto_folha; /* Deletar todos os registros da tabela temporária */
begin
select	trunc(b.dt_mesano_referencia,'month'),
	b.nr_sequencia,
	a.nr_seq_empresa,
	a.dt_remessa_retorno
into STRICT	dt_mens_atual_w,
	nr_seq_lote_mens_atual_w,
	nr_seq_empresa_w,
	dt_geracao_w
from	cobranca_escritural	a,
	pls_lote_mensalidade	b
where	a.nr_seq_lote_mensalidade = b.nr_sequencia
and	a.nr_sequencia	= nr_seq_cobranca_p;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort( 239640, null);
end;

select	max(nr_seq_lote_mensalidade)
into STRICT	nr_seq_lote_mens_ant_w
from	cobranca_escritural
where	nr_seq_empresa	= nr_seq_empresa_w
and	nr_sequencia	< nr_seq_cobranca_p;

if (coalesce(nr_seq_lote_mens_ant_w,0) <> 0) then
	open C01;
	loop
	fetch C01 into
		nr_seq_pagador_w,
		vl_mens_ant_w,
		dt_mens_ant_w,
		nr_seq_mensalidade_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ie_gravar_registro_w	:= 'N';

		begin
		select	max(d.nr_seq_reajuste)
		into STRICT	nr_seq_reajuste_ant_w
		from	pls_reajuste_preco d,
			pls_mensalidade_segurado c,
			pls_mensalidade b,
			pls_lote_mensalidade a
		where	c.nr_seq_mensalidade	= b.nr_sequencia
		and	b.nr_seq_lote		= a.nr_sequencia
		and	c.nr_seq_reajuste	= d.nr_sequencia
		and	a.nr_sequencia		= nr_seq_lote_mens_ant_w
		and	b.nr_seq_pagador	= nr_seq_pagador_w;
		exception
		when others then
			nr_seq_reajuste_ant_w	:= -1;
		end;

		begin
		select	max(d.nr_seq_reajuste)
		into STRICT	nr_seq_reajuste_atual_w
		from	pls_reajuste_preco d,
			pls_mensalidade_segurado c,
			pls_mensalidade b,
			pls_lote_mensalidade a
		where	c.nr_seq_mensalidade	= b.nr_sequencia
		and	b.nr_seq_lote		= a.nr_sequencia
		and	c.nr_seq_reajuste	= d.nr_sequencia
		and	a.nr_sequencia		= nr_seq_lote_mens_atual_w
		and	b.nr_seq_pagador	= nr_seq_pagador_w;
		exception
		when others then
			nr_seq_reajuste_atual_w	:= -1;
		end;

		select	max(vl_mensalidade),
			max(dt_referencia)
		into STRICT	vl_mens_atual_w,
			dt_referencia_w
		from	pls_mensalidade
		where	nr_seq_pagador	= nr_seq_pagador_w
		and	nr_seq_lote	= nr_seq_lote_mens_atual_w
		and	coalesce(ie_cancelamento::text, '') = '';

		if (coalesce(vl_mens_ant_w,0)	> 0) and (coalesce(vl_mens_atual_w,0)	= 0) then
			ie_tipo_movimentacao_w	:= 'CAC';
		else
			ie_tipo_movimentacao_w	:= 'CCD';
		end if;

		if	((coalesce(vl_mens_ant_w,0) <> 0) and (coalesce(vl_mens_atual_w,0) = 0)) then
			ie_tipo_alteracao_w	:= 'E'; /* Exclusão */
		elsif	((coalesce(vl_mens_ant_w,0) <> 0) and (coalesce(vl_mens_atual_w,0) <> 0)) then
			ie_tipo_alteracao_w	:= 'A'; /* Alteração */
		elsif	((coalesce(vl_mens_ant_w,0) = 0) and (coalesce(vl_mens_atual_w,0) <> 0)) then
			ie_tipo_alteracao_w	:= 'I'; /* Inclusão */
		end if;

		if (coalesce(vl_mens_atual_w,0) = coalesce(vl_mens_ant_w,0)) then

			ie_gravar_registro_w	:= 'N';
			ie_tipo_alteracao_w	:= 'O';

			select	max(nr_sequencia)
			into STRICT	nr_seq_pagador_fin_ant_w
			from	pls_contrato_pagador_fin
			where	nr_seq_pagador	= nr_seq_pagador_w
			and	trunc(dt_mens_ant_w, 'mm') between coalesce(dt_inicio_vigencia,dt_mens_ant_w) and coalesce(dt_fim_vigencia,dt_mens_ant_w);

			select	max(nr_sequencia)
			into STRICT	nr_seq_pagador_fin_atual_w
			from	pls_contrato_pagador_fin
			where	nr_seq_pagador	= nr_seq_pagador_w
			and	trunc(dt_mens_atual_w, 'mm') between coalesce(dt_inicio_vigencia,dt_mens_atual_w) and coalesce(dt_fim_vigencia,dt_mens_atual_w);

			if (coalesce(nr_seq_pagador_fin_ant_w,0) <> coalesce(nr_seq_pagador_fin_atual_w,0)) then
				if (coalesce(vl_mens_ant_w,0) <> 0) then
					select	max(cd_matricula)
					into STRICT	cd_matricula_w
					from	pls_contrato_pagador_fin
					where	nr_sequencia	= nr_seq_pagador_fin_ant_w;

					insert	into	w_pls_desconto_folha(nr_sequencia, dt_atualizacao, nm_usuario,
							dt_atualizacao_nrec, nm_usuario_nrec, cd_matricula,
							vl_incluir, vl_excluir, nr_seq_cobranca,
							nr_seq_pagador, dt_competencia, ie_tipo_alteracao,
							ie_tipo_movimentacao,nr_seq_mensalidade)
						values (nextval('w_pls_desconto_folha_seq'), clock_timestamp(), nm_usuario_p,
							clock_timestamp(), nm_usuario_p, cd_matricula_w,
							0, vl_mens_ant_w, nr_seq_cobranca_p,
							nr_seq_pagador_w, dt_referencia_w, ie_tipo_alteracao_w,
							ie_tipo_movimentacao_w,nr_seq_mensalidade_w);
				end if;

				if (coalesce(vl_mens_atual_w,0) <> 0) then
					select	max(cd_matricula)
					into STRICT	cd_matricula_w
					from	pls_contrato_pagador_fin
					where	nr_sequencia	= nr_seq_pagador_fin_atual_w;

					insert	into	w_pls_desconto_folha(nr_sequencia, dt_atualizacao, nm_usuario,
							dt_atualizacao_nrec, nm_usuario_nrec, cd_matricula,
							vl_incluir, vl_excluir, nr_seq_cobranca,
							nr_seq_pagador, dt_competencia, ie_tipo_alteracao,
							ie_tipo_movimentacao,nr_seq_mensalidade)
						values (nextval('w_pls_desconto_folha_seq'), clock_timestamp(), nm_usuario_p,
							clock_timestamp(), nm_usuario_p, cd_matricula_w,
							vl_mens_atual_w, 0, nr_seq_cobranca_p,
							nr_seq_pagador_w, dt_referencia_w, ie_tipo_alteracao_w,
							ie_tipo_movimentacao_w,nr_seq_mensalidade_w);
				end if;
			end if;
		elsif	((coalesce(vl_mens_ant_w,0)	= 0) and (coalesce(vl_mens_atual_w,0)	> 0)) or (coalesce(vl_mens_atual_w,0) > coalesce(vl_mens_ant_w,0))  then

			/*if	(nvl(vl_mens_ant_w,0) <> 0) and
				(nvl(nr_seq_reajuste_atual_w,0) <> nvl(nr_seq_reajuste_ant_w,0)) then
				begin
				select	tx_reajuste
				into	tx_reajuste_w
				from	pls_reajuste
				where	nr_sequencia	= nr_seq_reajuste_atual_w;
				exception
				when others then
					tx_reajuste_w	:= 0;
				end;

				--if	(tx_reajuste_w > 0) then
				--	vl_mens_ant_w	:= vl_mens_ant_w + trunc((vl_mens_ant_w * (tx_reajuste_w/100)),2);
				--end if;
				--comentado por tratamento da OS 377942
			end if;*/
			if (coalesce(vl_mens_atual_w,0) <> coalesce(vl_mens_ant_w,0)) then
				vl_incluir_w	:= coalesce(vl_mens_atual_w,0) - coalesce(vl_mens_ant_w,0);
				ie_gravar_registro_w	:= 'S';
				vl_excluir_w	:= 0;
			else
				ie_gravar_registro_w	:= 'N';
			end if;
		elsif	((coalesce(vl_mens_ant_w,0)	<> 0) and (coalesce(vl_mens_atual_w,0)	= 0)) or (coalesce(vl_mens_atual_w,0) < coalesce(vl_mens_ant_w,0)) then
			ie_gravar_registro_w	:= 'S';
			vl_incluir_w	:= 0;

			/* Se estiver excluindo um pagador, deve-se verificar se no mês que for mandar a exclusão tem um reajuste de valor, se tiver deve-se mandar a exclusão do valor reajustado */

			if (coalesce(vl_mens_ant_w,0)	> 0) and (coalesce(vl_mens_atual_w,0)	= 0) then
				begin
				select	max(a.nr_sequencia)
				into STRICT	nr_seq_reaj_exclusao_w
				from	pls_reajuste a,
					pls_contrato b,
					pls_contrato_pagador c
				where	a.nr_seq_contrato	= b.nr_sequencia
				and	b.nr_sequencia		= c.nr_seq_contrato
				and	c.nr_sequencia		= nr_seq_pagador_w
				and	a.ie_status		= '2'
				and	a.dt_reajuste = (SELECT	max(x.dt_reajuste)
							from	pls_reajuste x,
								pls_contrato y,
								pls_contrato_pagador z
							where	x.nr_seq_contrato	= y.nr_sequencia
							and	y.nr_sequencia		= z.nr_seq_contrato
							and	x.ie_status		= '2'
							and	z.nr_sequencia		= nr_seq_pagador_w
							and	x.dt_reajuste		< dt_mens_atual_w);
				exception
				when others then
					nr_seq_reaj_exclusao_w	:= -1;
				end;

				/* Se for excluir o pagador, tem que excluir com o valor reajustado */

				/*if	(nr_seq_reaj_exclusao_w > -1) and
					(nr_seq_reaj_exclusao_w <> nvl(nr_seq_reajuste_ant_w,0)) then
					select	tx_reajuste
					into	tx_reajuste_w
					from	pls_reajuste
					where	nr_sequencia	= nr_seq_reaj_exclusao_w;

					if	(tx_reajuste_w > 0) then
						vl_excluir_ww	:= vl_mens_ant_w + trunc((vl_mens_ant_w * (tx_reajuste_w/100)),2);
					end if;
				else*/
					vl_excluir_ww	:= coalesce(vl_mens_ant_w,0);
				--end if;
			else
				vl_excluir_ww	:= coalesce(vl_mens_ant_w,0);

				/*if	(nr_seq_reaj_exclusao_w > -1) and
					(nr_seq_reaj_exclusao_w <> nvl(nr_seq_reajuste_ant_w,0)) then
					select	tx_reajuste
					into	tx_reajuste_w
					from	pls_reajuste
					where	nr_sequencia	= nr_seq_reaj_exclusao_w;

					if	(tx_reajuste_w > 0) then
						vl_excluir_ww	:= vl_mens_ant_w + trunc((vl_mens_ant_w * (tx_reajuste_w/100)),2);
					end if;
				else
					vl_excluir_ww	:= nvl(vl_mens_ant_w,0);
				end if;*/
			end if;
			vl_excluir_w	:= coalesce(vl_excluir_ww,0) - coalesce(vl_mens_atual_w,0);
		end if;

		select	max(cd_matricula),
			max(cd_profissao)
		into STRICT	cd_matricula_w,
			cd_profissao_w
		from	pls_contrato_pagador_fin
		where	nr_seq_pagador	= nr_seq_pagador_w
		and	trunc(dt_mens_atual_w,'month') between trunc(dt_inicio_vigencia,'dd') and fim_dia(coalesce(dt_fim_vigencia,dt_mens_atual_w));

		if (coalesce(cd_matricula_w::text, '') = '') then
			select	max(cd_matricula),
				max(cd_profissao)
			into STRICT	cd_matricula_w,
				cd_profissao_w
			from	pls_contrato_pagador_fin
			where	nr_seq_pagador	= nr_seq_pagador_w
			and	trunc(dt_mens_ant_w,'month') between trunc(dt_inicio_vigencia,'dd') and fim_dia(coalesce(dt_fim_vigencia,dt_mens_ant_w));
		end if;

		if (coalesce(dt_referencia_w::text, '') = '') then
			dt_referencia_w	:= dt_geracao_w;
		end if;

		if (ie_gravar_registro_w = 'S') then
			insert	into	w_pls_desconto_folha(nr_sequencia, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, cd_matricula,
					vl_incluir, vl_excluir, nr_seq_cobranca,
					nr_seq_pagador, dt_competencia, ie_contrato_novo,
					dt_geracao, cd_profissao, ie_tipo_alteracao,
					ie_tipo_movimentacao,nr_seq_mensalidade)
				values (nextval('w_pls_desconto_folha_seq'), clock_timestamp(), nm_usuario_p,
					clock_timestamp(), nm_usuario_p, cd_matricula_w,
					vl_incluir_w, vl_excluir_w, nr_seq_cobranca_p,
					nr_seq_pagador_w, dt_referencia_w, 'N',
					dt_geracao_w, cd_profissao_w, ie_tipo_alteracao_w,
					ie_tipo_movimentacao_w,nr_seq_mensalidade_w);
		end if;
		end;
	end loop;
	close C01;

	open C03;
	loop
	fetch C03 into
		nr_seq_pagador_w,
		vl_mens_atual_w,
		dt_referencia_w,
		nr_seq_mensalidade_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		vl_incluir_w	:= vl_mens_atual_w;
		vl_excluir_w	:= 0;
		ie_tipo_alteracao_w	:= 'I';
		ie_tipo_movimentacao_w	:= 'CCD';

		select	max(cd_matricula),
			max(cd_profissao)
		into STRICT	cd_matricula_w,
			cd_profissao_w
		from	pls_contrato_pagador_fin
		where	nr_seq_pagador	= nr_seq_pagador_w
		and	dt_mens_atual_w between coalesce(dt_inicio_vigencia,dt_mens_atual_w) and coalesce(dt_fim_vigencia,dt_mens_atual_w);

		insert	into	w_pls_desconto_folha(nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, cd_matricula,
				vl_incluir, vl_excluir, nr_seq_cobranca,
				nr_seq_pagador, dt_competencia, ie_contrato_novo,
				dt_geracao, cd_profissao, ie_tipo_alteracao,
				ie_tipo_movimentacao,nr_seq_mensalidade)
			values (nextval('w_pls_desconto_folha_seq'), clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, cd_matricula_w,
				vl_incluir_w, vl_excluir_w, nr_seq_cobranca_p,
				nr_seq_pagador_w, dt_referencia_w, 'S',
				dt_geracao_w, cd_profissao_w, ie_tipo_alteracao_w,
				ie_tipo_movimentacao_w,nr_seq_mensalidade_w);
		end;
	end loop;
	close C03;
elsif (coalesce(nr_seq_lote_mens_ant_w,0) = 0) then	/* Lote novo, incluir todas as mensalidades */
	ie_tipo_alteracao_w	:= 'I';
	open C02;
	loop
	fetch C02 into
		nr_seq_pagador_w,
		vl_mens_atual_w,
		dt_referencia_w,
		nr_seq_mensalidade_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		vl_incluir_w	:= vl_mens_atual_w;
		vl_excluir_w	:= 0;
		ie_tipo_movimentacao_w	:= 'CCD';

		select	max(cd_matricula),
			max(cd_profissao)
		into STRICT	cd_matricula_w,
			cd_profissao_w
		from	pls_contrato_pagador_fin
		where	nr_seq_pagador	= nr_seq_pagador_w
		and	dt_mens_atual_w between coalesce(dt_inicio_vigencia,dt_mens_atual_w) and coalesce(dt_fim_vigencia,dt_mens_atual_w);

		insert	into	w_pls_desconto_folha(nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, cd_matricula,
				vl_incluir, vl_excluir, nr_seq_cobranca,
				nr_seq_pagador, dt_competencia, ie_contrato_novo,
				dt_geracao, cd_profissao, ie_tipo_alteracao,
				ie_tipo_movimentacao,nr_seq_mensalidade)
			values (nextval('w_pls_desconto_folha_seq'), clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, cd_matricula_w,
				vl_incluir_w, vl_excluir_w, nr_seq_cobranca_p,
				nr_seq_pagador_w, dt_referencia_w, 'S',
				dt_geracao_w, cd_profissao_w, ie_tipo_alteracao_w,
				ie_tipo_movimentacao_w,nr_seq_mensalidade_w);
		end;
	end loop;
	close C02;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_interface_desconto_folha ( nr_seq_cobranca_p bigint, nm_usuario_p text) FROM PUBLIC;

