-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_duplica_regra_exame (nr_sequencia_p bigint, nm_usuario_p text, ie_dia_semana_p text, ie_dia_trabalho_p text, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, dt_inicial_vigencia_p timestamp, dt_final_vigencia_p timestamp, hr_inicial_p timestamp, hr_final_p timestamp, ds_observacao_p text, ie_consiste_marcacao_p text) AS $body$
DECLARE

  /*********************************************************
  Objeto: 71951
  Duplica Registro de Regra e Turno
  ***********************************************************/
  nr_seq_proc_interno_w bigint;
  nr_seq_grupo_ageint_w bigint;
  cd_agenda_w           bigint;
  ie_dia_semana_w       varchar(8) := 'NNNNNNN';
  ie_existe_w           bigint;

BEGIN
  SELECT nr_seq_proc_interno,
         nr_seq_grupo_ageint,
         cd_agenda
    INTO STRICT nr_seq_proc_interno_w,
         nr_seq_grupo_ageint_w,
         cd_agenda_w
    FROM agenda_regra
   WHERE nr_sequencia = nr_sequencia_p;

  IF ie_dia_trabalho_p = 'S' THEN
    ie_dia_semana_w := ie_dia_semana_w || 'S';
  ELSE
    ie_dia_semana_w := substr(rpad(ie_dia_semana_p, 7, 'N'), 1, 7) || 'N';
  END IF;

  FOR dt_dia_f IN 1 .. 8 LOOP
    ie_existe_w := 1;
	
	IF SUBSTR(ie_dia_semana_w, dt_dia_f, 1) = 'S' THEN
		SELECT	COUNT(*)
		INTO STRICT	ie_existe_w
		FROM	ageint_turno_exame a
		WHERE	a.cd_agenda = cd_agenda_w
		AND		coalesce(cd_pessoa_fisica, 'xpto')		= coalesce(cd_pessoa_fisica_p, 'xpto')
		AND		a.dt_dia_semana						= CASE WHEN dt_dia_f=8 THEN  9  ELSE dt_dia_f END
		AND (coalesce(a.nr_seq_proc_interno, -1)		= coalesce(nr_seq_proc_interno_w, -1) AND coalesce(a.nr_seq_grupo_ageint, -1) = coalesce(nr_seq_grupo_ageint_w, -1))
		AND (coalesce(dt_inicial_vigencia, clock_timestamp())	BETWEEN PKG_DATE_UTILS.start_of(coalesce(dt_inicial_vigencia_p, clock_timestamp()), 'DAY', 0)	
													AND 	PKG_DATE_UTILS.end_of(coalesce(dt_inicial_vigencia_p, clock_timestamp()), 'DAY', 0))
		AND (coalesce(dt_final_vigencia, clock_timestamp())	BETWEEN PKG_DATE_UTILS.start_of(coalesce(dt_final_vigencia_p, clock_timestamp()), 'DAY', 0)		
													AND 	PKG_DATE_UTILS.end_of(coalesce(dt_final_vigencia_p, clock_timestamp()), 'DAY', 0))
		AND (pkg_date_utils.get_time(pkg_date_utils.extract_field('HOUR', hr_inicial),		pkg_date_utils.extract_field('MINUTE', hr_inicial)) 							
				= pkg_date_utils.get_time(pkg_date_utils.extract_field('HOUR', hr_inicial_p),	pkg_date_utils.extract_field('MINUTE', hr_inicial_p)))
		AND (pkg_date_utils.get_time(pkg_date_utils.extract_field('HOUR', hr_final),		pkg_date_utils.extract_field('MINUTE', hr_final)) 							
				= pkg_date_utils.get_time(pkg_date_utils.extract_field('HOUR', hr_final_p),		pkg_date_utils.extract_field('MINUTE', hr_final_p)));
	END IF;	
	
    RAISE NOTICE 'Dia: %  - %', dt_dia_f, substr(ie_dia_semana_w, dt_dia_f, 1);
    RAISE NOTICE 'Ex: %', ie_existe_w;

    IF ie_existe_w = 0 THEN
      INSERT INTO ageint_turno_exame(nr_sequencia,
         nr_seq_proc_interno,
         nr_seq_grupo_ageint,
         cd_agenda,
         dt_atualizacao,
         nm_usuario,
         dt_atualizacao_nrec,
         nm_usuario_nrec,
         cd_estabelecimento,
         dt_dia_semana,
         cd_pessoa_fisica,
         dt_inicial_vigencia,
         dt_final_vigencia,
         hr_inicial,
         hr_final,
         ds_observacao,
         ie_consiste_marcacao)
      VALUES (nextval('ageint_turno_exame_seq'),
         nr_seq_proc_interno_w,
         nr_seq_grupo_ageint_w,
         cd_agenda_w,
         clock_timestamp(),
         nm_usuario_p,
         clock_timestamp(),
         nm_usuario_p,
         cd_estabelecimento_p,
         CASE WHEN dt_dia_f=8 THEN  9  ELSE dt_dia_f END ,
         cd_pessoa_fisica_p,
         trunc(dt_inicial_vigencia_p),
         trunc(dt_final_vigencia_p),
         hr_inicial_p,
         hr_final_p,
         ds_observacao_p,
         ie_consiste_marcacao_p);
    END IF;
  END LOOP;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_duplica_regra_exame (nr_sequencia_p bigint, nm_usuario_p text, ie_dia_semana_p text, ie_dia_trabalho_p text, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, dt_inicial_vigencia_p timestamp, dt_final_vigencia_p timestamp, hr_inicial_p timestamp, hr_final_p timestamp, ds_observacao_p text, ie_consiste_marcacao_p text) FROM PUBLIC;

