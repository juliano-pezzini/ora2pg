-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_conta_pos_pac_fat ( nr_seq_pls_fatura_p pls_fatura.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, ie_commit_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar os itens de agrupamento da regra de pacote do faturamento
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[ ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_conta_w			pls_conta.nr_sequencia%type;
nr_seq_conta_proc_w		pls_conta_proc.nr_sequencia%type;
nr_seq_conta_mat_w		pls_conta_mat.nr_sequencia%type;
nr_seq_regra_agrup_w		pls_pacote_agrup_fat.nr_sequencia%type;
nr_seq_prestador_exec_w		pls_prestador.nr_sequencia%type;
nr_seq_pacote_w			pls_pacote.nr_sequencia%type;
nr_seq_preco_pacote_w		pls_pacote_tipo_acomodacao.nr_sequencia%type;
ie_tipo_guia_w			pls_conta.ie_tipo_guia%type;
nr_seq_composicao_w		pls_pacote_composicao.nr_sequencia%type;
cd_procedimento_w		procedimento.cd_procedimento%type;
ie_origem_proced_w		procedimento.ie_origem_proced%type;
ie_tipo_tabela_w		pls_conta_pos_pac_fat.ie_tipo_tabela%type;
nr_registro_anvisa_w		pls_material.nr_registro_anvisa%type;
cd_material_a900_w		pls_material_unimed.cd_material%type;
nr_seq_material_unimed_w	pls_material_unimed.nr_sequencia%type;
ie_gerar_a500_w			pls_pacote_procedimento.ie_gerar_a500%type;
ie_classificacao_w		procedimento.ie_classificacao%type;
ie_tipo_despesa_pac_w		pls_material.ie_tipo_despesa%type;
nr_seq_material_w		pls_material.nr_sequencia%type;
nr_seq_conta_pos_pac_fat_w	pls_conta_pos_pac_fat.nr_sequencia%type;
nr_seq_conta_pac_fat_a500_w	pls_conta_pos_pac_fat.nr_sequencia%type;
vl_procedimento_w		pls_conta_pos_pac_fat.vl_procedimento%type;
vl_adic_procedimento_w		pls_conta_pos_pac_fat.vl_adic_procedimento%type;
qt_procedimento_w		pls_conta_pos_pac_fat.qt_procedimento%type;
tx_administracao_w		pls_conta_pos_estabelecido.tx_administracao%type;
vl_negociado_w			pls_pacote_procedimento.vl_negociado%type;
qt_item_w			pls_conta_pos_estabelecido.qt_item%type;
qt_item_ww			pls_conta_pos_estabelecido.qt_item%type;
vl_administracao_w		pls_conta_pos_estabelecido.vl_administracao%type;
vl_servico_w			pls_conta_pos_estabelecido.vl_beneficiario%type;
cd_servico_w			pls_conta_pos_pac_fat.cd_servico%type;
ds_servico_w			pls_conta_pos_pac_fat.ds_servico%type;
cd_material_w			pls_material.cd_material_ops%type;
ds_material_w			pls_material.ds_material%type;
nm_material_w			pls_material_unimed.nm_material%type;
ie_insere_w			varchar(1);
pr_valor_pac_w			double precision;
ie_sem_regra_pacote_w		varchar(2);
ie_tipo_intercambio_w		varchar(1);
qt_registro_w			integer := 0;
qt_regra_w			integer := 0;
qt_regra_ptu_w			integer := 0;
dt_atual_w			timestamp;
ie_proc_pac_w			varchar(1);
ie_desc_pac_origem_w		pls_pacote_agrup_fat.ie_desc_pac_origem%type := 'N';
nr_seq_regra_pct_fat_w		pls_conta_proc.nr_seq_regra_pct_fat%type;
tx_item_w			pls_conta_proc.tx_item%type;
nr_seq_regra_conv_w		pls_conversao_proc.nr_sequencia%type;
ie_somente_codigo_w		pls_conversao_proc.ie_somente_codigo%type := null;
ie_tipo_tabela_conv_w		pls_conversao_mat.ie_tipo_tabela%type;
nr_seq_regra_conv_mat_w		pls_conversao_mat.nr_sequencia%type;
cd_proc_conv_w			pls_conversao_proc.cd_proc_conversao%type;
ie_origem_proced_conv_w		pls_conversao_proc.ie_origem_conversao%type;
cd_servico_conv_w		pls_conversao_mat.cd_material_envio%type;
nr_seq_material_conv_w		pls_material.nr_sequencia%type;
ds_servico_conv_w		pls_conta_pos_pac_fat.ds_servico%type;
ie_material_intercambio_w	pls_parametros.ie_material_intercambio%type;
qt_composicao_w			integer;
ie_data_conv_mat_unimed_w	pls_parametro_faturamento.ie_data_conv_mat_unimed%type;
dt_atendimento_w		pls_conta_mat.dt_atendimento%type;
ie_mat_a900_w			varchar(1) := 'N';
nr_seq_tipo_atendimento_w	pls_conta.nr_seq_tipo_atendimento%type;

qt_itens_w			integer;
vl_adic_co_w			pls_conta_pos_pac_fat.vl_adic_co%type;
vl_custo_operacional_w		pls_conta_pos_pac_fat.vl_custo_operacional%type;
vl_adic_filme_w			pls_conta_pos_pac_fat.vl_adic_filme%type;
vl_filme_w			pls_conta_pos_pac_fat.vl_filme%type;
vl_medico_w			pls_conta_pos_pac_fat.vl_procedimento%type;
vl_adic_procedimento_pct_w	pls_conta_pos_pac_fat.vl_adic_procedimento%type;
qt_procedimento_pct_w		pls_conta_pos_pac_fat.qt_procedimento%type;
cd_medico_w			pls_proc_participante.cd_medico%type;
nr_seq_grau_partic_w		pls_proc_participante.nr_seq_grau_partic%type;

dt_autorizacao_w        	pls_guia_plano.dt_autorizacao%type;
dt_ref_ptu_11_3_w       	pls_visible_false.dt_ref_ptu_11_3%type;
ie_versao_w             	bigint;
qt_pac                  	smallint;
dt_item_w			timestamp;
ie_abrir_pacote_fat_w		pls_pacote_tipo_acomodacao.ie_abrir_pacote_fat%type;

c01 CURSOR(	nr_seq_pls_fatura_pc	pls_fatura.nr_sequencia%type,
		nr_seq_conta_pc		pls_conta.nr_sequencia%type ) FOR
	SELECT	p.nr_seq_conta_pos_estab nr_seq_conta_pos,
		p.nr_seq_pos_proc,
		null nr_seq_pos_mat
	from	pls_fatura_proc		p,
		pls_fatura_conta	c,
		pls_fatura_evento	b
	where	b.nr_sequencia		= c.nr_seq_fatura_evento
	and	c.nr_sequencia		= p.nr_seq_fatura_conta
	and	b.nr_seq_fatura		= nr_seq_pls_fatura_pc
	
union

	SELECT	m.nr_seq_conta_pos_estab nr_seq_conta_pos,
		null nr_seq_pos_proc,
		m.nr_seq_pos_mat
	from	pls_fatura_mat		m,
		pls_fatura_conta	c,
		pls_fatura_evento	b
	where	b.nr_sequencia		= c.nr_seq_fatura_evento
	and	c.nr_sequencia		= m.nr_seq_fatura_conta
	and	b.nr_seq_fatura		= nr_seq_pls_fatura_pc
	
union

	select	nr_sequencia nr_seq_conta_pos,
		null nr_seq_pos_proc,
		null nr_seq_pos_mat
	from	pls_conta_pos_estabelecido
	where	ie_status_faturamento not in ('C','A')
	and	nr_seq_conta = nr_seq_conta_pc
	
union

	select	null nr_seq_conta_pos,
		nr_sequencia nr_seq_pos_proc,
		null nr_seq_pos_mat
	from	pls_conta_pos_proc
	where	ie_status_faturamento <> 'C'
	and	nr_seq_conta = nr_seq_conta_pc
	
union

	select	null nr_seq_conta_pos,
		null nr_seq_pos_proc,
		nr_sequencia nr_seq_pos_mat
	from	pls_conta_pos_mat
	where	ie_status_faturamento <> 'C'
	and	nr_seq_conta = nr_seq_conta_pc;

C00 CURSOR(	nr_seq_prestador_exec_pc	pls_prestador.nr_sequencia%type,
		ie_tipo_guia_pc			pls_conta.ie_tipo_guia%type,
		nr_seq_pacote_pc		pls_pacote.nr_sequencia%type,
		nr_seq_composicao_pc		pls_pacote_composicao.nr_sequencia%type,
		dt_atual_pc 			timestamp,
		nr_seq_regra_pct_fat_pc		pls_conta_proc.nr_seq_regra_pct_fat%type,
		cd_procedimento_pc		pls_conta_proc.cd_procedimento%type,
		ie_origem_proced_pc		pls_conta_proc.ie_origem_proced%type,
		nr_seq_material_pc		pls_conta_mat.nr_seq_material%type) FOR
	SELECT	'P' ie_tipo,
		x.nr_sequencia nr_seq_pacote_proc,
		null nr_seq_pacote_mat,
		x.cd_procedimento cd_procedimento_pac,
		x.ie_origem_proced ie_origem_proced_pac,
		null nr_seq_material,
		coalesce(x.ie_gerar_a500, 'N') ie_gerar_a500,
		qt_procedimento	qt_item
	from	pls_pacote_procedimento x
	where (x.ie_tipo_guia		= ie_tipo_guia_pc or coalesce(x.ie_tipo_guia::text, '') = '')
	and (x.nr_seq_prestador	= nr_seq_prestador_exec_pc or coalesce(x.nr_seq_prestador::text, '') = '')
	and	x.ie_situacao		= 'A'
	and (ie_sem_regra_pacote_w	= 'N' or ie_sem_regra_pacote_w = x.ie_gerar_a500)
	and	coalesce(nr_seq_regra_pct_fat_pc::text, '') = ''
	and (x.cd_medico		= cd_medico_w or coalesce(x.cd_medico::text, '') = '')
	and (x.nr_seq_grau_partic	= nr_seq_grau_partic_w or coalesce(x.nr_seq_grau_partic::text, '') = '')
	and	exists (SELECT	1
			from	pls_pacote_composicao a
			where	a.nr_sequencia = x.nr_seq_composicao
			and	a.nr_seq_pacote	= nr_seq_pacote_pc
			and (a.nr_sequencia = nr_seq_composicao_pc or coalesce(nr_seq_composicao_pc::text, '') = '')
			and	a.ie_situacao = 'A')
	
union all

	select	'M' ie_tipo,
		null nr_seq_pacote_proc,
		x.nr_sequencia nr_seq_pacote_mat,
		null cd_procedimento_pac,
		null ie_origem_proced_pac,
		x.nr_seq_material,
		coalesce(x.ie_gerar_a500, 'N') ie_gerar_a500,
		qt_material qt_item
	from	pls_pacote_material x
	where (x.ie_tipo_guia		= ie_tipo_guia_pc or coalesce(x.ie_tipo_guia::text, '') = '')
	and (x.nr_seq_prestador	= nr_seq_prestador_exec_pc or coalesce(x.nr_seq_prestador::text, '') = '')
	and	x.ie_situacao		= 'A'
	and (ie_sem_regra_pacote_w	= 'N' or ie_sem_regra_pacote_w = x.ie_gerar_a500)
	and	coalesce(nr_seq_regra_pct_fat_pc::text, '') = ''
	and	exists (select	1
			from	pls_pacote_composicao a
			where	a.nr_sequencia = x.nr_seq_composicao
			and	a.nr_seq_pacote	= nr_seq_pacote_pc
			and (a.nr_sequencia = nr_seq_composicao_pc or coalesce(nr_seq_composicao_pc::text, '') = '')
			and	a.ie_situacao = 'A')
	
union all

	select	'P' ie_tipo,
		x.nr_sequencia nr_seq_pacote_proc,
		null nr_seq_pacote_mat,
		x.cd_procedimento cd_procedimento_pac,
		x.ie_origem_proced ie_origem_proced_pac,
		null nr_seq_material,
		coalesce(x.ie_gerar_a500, 'N') ie_gerar_a500,
		qt_procedimento	qt_item
	from	pls_pacote_procedimento x
	where (x.ie_tipo_guia		= ie_tipo_guia_pc or coalesce(x.ie_tipo_guia::text, '') = '')
	and (x.nr_seq_prestador	= nr_seq_prestador_exec_pc or coalesce(x.nr_seq_prestador::text, '') = '')
	and	x.ie_situacao		= 'A'
	and (ie_sem_regra_pacote_w	= 'N' or ie_sem_regra_pacote_w = x.ie_gerar_a500)
	and	(nr_seq_regra_pct_fat_pc IS NOT NULL AND nr_seq_regra_pct_fat_pc::text <> '')
	and	cd_procedimento		= cd_procedimento_pc
	and	ie_origem_proced	= ie_origem_proced_pc
	and (x.cd_medico		= cd_medico_w or coalesce(x.cd_medico::text, '') = '')
	and (x.nr_seq_grau_partic	= nr_seq_grau_partic_w or coalesce(x.nr_seq_grau_partic::text, '') = '')
	and	exists (select	1
			from	pls_pacote_composicao a
			where	a.nr_sequencia = x.nr_seq_composicao
			and	a.nr_seq_pacote	= nr_seq_pacote_pc
			and (a.nr_sequencia = nr_seq_composicao_pc or coalesce(nr_seq_composicao_pc::text, '') = '')
			and	a.ie_situacao = 'A')
	
union 	all

	select	'M' ie_tipo,
		null nr_seq_pacote_proc,
		x.nr_sequencia nr_seq_pacote_mat,
		null cd_procedimento_pac,
		null ie_origem_proced_pac,
		x.nr_seq_material,
		coalesce(x.ie_gerar_a500, 'N') ie_gerar_a500,
		qt_material	qt_item
	from	pls_pacote_material x
	where (x.ie_tipo_guia		= ie_tipo_guia_pc or coalesce(x.ie_tipo_guia::text, '') = '')
	and (x.nr_seq_prestador	= nr_seq_prestador_exec_pc or coalesce(x.nr_seq_prestador::text, '') = '')
	and	x.ie_situacao		= 'A'
	and (ie_sem_regra_pacote_w	= 'N' or ie_sem_regra_pacote_w = x.ie_gerar_a500)
	and	(nr_seq_regra_pct_fat_pc IS NOT NULL AND nr_seq_regra_pct_fat_pc::text <> '')
	and	nr_seq_material		= nr_seq_material_pc
	and	exists (select	1
			from	pls_pacote_composicao a
			where	a.nr_sequencia = x.nr_seq_composicao
			and	a.nr_seq_pacote	= nr_seq_pacote_pc
			and (a.nr_sequencia = nr_seq_composicao_pc or coalesce(nr_seq_composicao_pc::text, '') = '')
			and	a.ie_situacao = 'A')
	order by 1 desc;

C02 CURSOR(	nr_seq_prestador_exec_pc 	pls_prestador.nr_sequencia%type,
		ie_tipo_guia_pc 		pls_conta.ie_tipo_guia%type,
		nr_seq_pacote_pc 		pls_pacote.nr_sequencia%type,
		nr_seq_composicao_pc 		pls_pacote_composicao.nr_sequencia%type,
		dt_atual_pc 			timestamp,
		nr_seq_regra_pct_fat_pc 	pls_conta_proc.nr_seq_regra_pct_fat%type,
		cd_procedimento_pc 		pls_conta_proc.cd_procedimento%type,
		ie_origem_proced_pc 		pls_conta_proc.ie_origem_proced%type,
		nr_seq_material_pc 		pls_conta_mat.nr_seq_material%type) FOR
	SELECT 	'P' ie_tipo,
		x.nr_sequencia nr_seq_pacote_proc,
		null nr_seq_pacote_mat,
		x.cd_procedimento cd_procedimento_pac,
		x.ie_origem_proced ie_origem_proced_pac,
		null nr_seq_material,
		qt_procedimento qt_item,
		coalesce(x.ie_contem_hm, 'N') ie_contem_hm
	from 	pls_pacote_procedimento x
	where (x.ie_tipo_guia = ie_tipo_guia_pc or coalesce(x.ie_tipo_guia::text, '') = '') and (x.nr_seq_prestador = nr_seq_prestador_exec_pc or coalesce(x.nr_seq_prestador::text, '') = '')
	and 	x.ie_situacao = 'A'
	and (x.cd_medico = cd_medico_w or coalesce(x.cd_medico::text, '') = '')
	and (x.nr_seq_grau_partic = nr_seq_grau_partic_w or	coalesce(x.nr_seq_grau_partic::text, '') = '')
	and 	exists (SELECT 	1
			from 	pls_pacote_composicao a
			where 	a.nr_sequencia = x.nr_seq_composicao
			and 	a.nr_seq_pacote = nr_seq_pacote_pc
			and (a.nr_sequencia = nr_seq_composicao_pc or coalesce(nr_seq_composicao_pc::text, '') = '')
			and 	a.ie_situacao = 'A')
	
union all

	select 	'M' ie_tipo,
		null nr_seq_pacote_proc,
		x.nr_sequencia nr_seq_pacote_mat,
		null cd_procedimento_pac,
		null ie_origem_proced_pac,
		x.nr_seq_material,
		qt_material qt_item,
		'N'
	from 	pls_pacote_material x
	where (x.ie_tipo_guia = ie_tipo_guia_pc or coalesce(x.ie_tipo_guia::text, '') = '')
	and (x.nr_seq_prestador = nr_seq_prestador_exec_pc or coalesce(x.nr_seq_prestador::text, '') = '')
	and 	x.ie_situacao = 'A'
	and 	exists (select 1
			from pls_pacote_composicao a
			where a.nr_sequencia = x.nr_seq_composicao
			and a.nr_seq_pacote = nr_seq_pacote_pc
			and (a.nr_sequencia = nr_seq_composicao_pc or coalesce(nr_seq_composicao_pc::text, '') = '')
			and a.ie_situacao = 'A')
	order by 1 desc;
	
BEGIN
select  coalesce(max(ie_material_intercambio), 'S')
into STRICT  	ie_material_intercambio_w
from   	pls_parametros
where   cd_estabelecimento  = cd_estabelecimento_p;

select 	coalesce(max(ie_data_conv_mat_unimed), 'DA') ie_data_conv_mat_unimed
into STRICT	ie_data_conv_mat_unimed_w
from	pls_parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_p;

for r_C01_w in C01( nr_seq_pls_fatura_p, nr_seq_conta_p ) loop

	-- Zera a quantidade de itens gerados por pacote do pos

	-- necessario ser zerado, pois dependendo da quantidade de itens gerados, sera atribuido os valores detalhados (ou nao)
	qt_itens_w := 0;

	-- busca a data de configuracao do PTU 11.3
	select coalesce(max(dt_ref_ptu_11_3), to_date('01/10/2020', 'dd/mm/yyyy'))
	into STRICT 	dt_ref_ptu_11_3_w
	from 	pls_visible_false
	where 	cd_estabelecimento = cd_estabelecimento_p;

	-- busca data de autorizacao da guia
	select max(trunc(pgp.dt_autorizacao)) dt_autorizacao
	into STRICT 	dt_autorizacao_w
	from 	pls_conta_pos_estabelecido pcpe,
		pls_conta                  pc,
		pls_guia_plano             pgp
	where 	pc.nr_sequencia = pcpe.nr_seq_conta
	and 	pcpe.nr_sequencia = r_c01_w.nr_seq_conta_pos
	and 	pcpe.ie_status_faturamento = 'L'
	and 	pgp.nr_sequencia = pc.nr_seq_guia;

	-- busca a versao informada no A500
	ie_versao_w := somente_numero(coalesce(ptu_obter_versao_dominio('A500',pls_obter_interf_ptu(cd_estabelecimento_p,null,clock_timestamp(),'A500')),''));
	
	if (r_C01_w.nr_seq_conta_pos IS NOT NULL AND r_C01_w.nr_seq_conta_pos::text <> '') then
		select	trunc(clock_timestamp()),
			nr_seq_conta,
			nr_seq_conta_proc,
			nr_seq_conta_mat,
			coalesce(vl_medico, 0) + coalesce(vl_custo_operacional, 0) + coalesce(vl_materiais, 0),
			coalesce(qt_item,1),
			coalesce(vl_administracao, 0),
			coalesce(tx_administracao, 0),
			coalesce(vl_lib_taxa_co, 0),
			coalesce(vl_custo_operacional, 0),
			coalesce(vl_lib_taxa_material, 0),
			coalesce(vl_materiais, 0),
			coalesce(vl_medico, 0),
			coalesce(vl_lib_taxa_servico, 0),
			coalesce(qt_item,0)
		into STRICT	dt_atual_w,
			nr_seq_conta_w,
			nr_seq_conta_proc_w,
			nr_seq_conta_mat_w,
			vl_servico_w,
			qt_item_w,
			vl_administracao_w,
			tx_administracao_w,
			vl_adic_co_w,
			vl_custo_operacional_w,
			vl_adic_filme_w,
			vl_filme_w,
			vl_medico_w,
			vl_adic_procedimento_pct_w,
			qt_procedimento_pct_w
		from	pls_conta_pos_estabelecido
		where	nr_sequencia = r_C01_w.nr_seq_conta_pos;
		
		select	max(pp.cd_medico),
			max(pp.nr_seq_grau_partic)
		into STRICT	cd_medico_w,
			nr_seq_grau_partic_w
		from	pls_proc_participante		pp,
			pls_conta_pos_estab_partic	pe
		where	pp.nr_sequencia	= pe.nr_seq_proc_partic
		and	pe.nr_sequencia	= (	SELECT	max(a.nr_sequencia)
						from	pls_conta_pos_estab_partic a
						where	a.nr_seq_conta_pos = r_C01_w.nr_seq_conta_pos);

	elsif (r_C01_w.nr_seq_pos_proc IS NOT NULL AND r_C01_w.nr_seq_pos_proc::text <> '') then
		select	trunc(clock_timestamp()),
			nr_seq_conta,
			nr_seq_conta_proc,
			coalesce(vl_medico, 0) + coalesce(vl_custo_operacional, 0) + coalesce(vl_materiais, 0),
			coalesce(qt_item,1),
			coalesce(vl_lib_taxa_co, 0) + coalesce(vl_lib_taxa_material, 0) + coalesce(vl_lib_taxa_servico, 0),
			coalesce(tx_administracao, 0),
			coalesce(vl_lib_taxa_co, 0),
			coalesce(vl_custo_operacional, 0),
			coalesce(vl_lib_taxa_material, 0),
			coalesce(vl_materiais, 0),
			coalesce(vl_medico, 0),
			coalesce(vl_lib_taxa_servico, 0),
			coalesce(qt_item,0)
		into STRICT	dt_atual_w,
			nr_seq_conta_w,
			nr_seq_conta_proc_w,
			vl_servico_w,
			qt_item_w,
			vl_administracao_w,
			tx_administracao_w,
			vl_adic_co_w,
			vl_custo_operacional_w,
			vl_adic_filme_w,
			vl_filme_w,
			vl_medico_w,
			vl_adic_procedimento_pct_w,
			qt_procedimento_pct_w
		from	pls_conta_pos_proc
		where	nr_sequencia = r_C01_w.nr_seq_pos_proc;
		
		select	max(pp.cd_medico),
			max(pp.nr_seq_grau_partic)
		into STRICT	cd_medico_w,
			nr_seq_grau_partic_w
		from	pls_proc_participante	pp,
			pls_conta_pos_proc_part	pe
		where	pp.nr_sequencia	= pe.nr_seq_proc_partic
		and	pe.nr_sequencia	= (	SELECT	max(a.nr_sequencia)
						from	pls_conta_pos_proc_part a
						where	a.nr_seq_conta_pos_proc = r_C01_w.nr_seq_pos_proc);

	elsif (r_C01_w.nr_seq_pos_mat IS NOT NULL AND r_C01_w.nr_seq_pos_mat::text <> '') then
		select	trunc(clock_timestamp()),
			nr_seq_conta,
			nr_seq_conta_mat,
			coalesce(vl_liberado_material_fat, 0),
			coalesce(qt_item, 1),
			coalesce(vl_lib_taxa_material, 0),
			coalesce(tx_administracao, 0),
			0 vl_lib_taxa_co,
			0 vl_custo_operacional,
			coalesce(vl_lib_taxa_material, 0),
			coalesce(vl_materiais, 0),
			0 vl_medico,
			0 vl_lib_taxa_servico,
			coalesce(qt_item,0)
		into STRICT	dt_atual_w,
			nr_seq_conta_w,
			nr_seq_conta_mat_w,
			vl_servico_w,
			qt_item_w,
			vl_administracao_w,
			tx_administracao_w,
			vl_adic_co_w,
			vl_custo_operacional_w,
			vl_adic_filme_w,
			vl_filme_w,
			vl_medico_w,
			vl_adic_procedimento_pct_w,
			qt_procedimento_pct_w
		from	pls_conta_pos_mat
		where	nr_sequencia = r_C01_w.nr_seq_pos_mat;
	end if;

	nr_seq_conta_pac_fat_a500_w := null;

	if (qt_item_w = 0) then
		qt_item_w := 1;
	end if;

	if (nr_seq_conta_w IS NOT NULL AND nr_seq_conta_w::text <> '') and
		((nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') or (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '')) then

		-------------------	APAGAR OS REGISTROS ANTIGOS
		if (r_C01_w.nr_seq_conta_pos IS NOT NULL AND r_C01_w.nr_seq_conta_pos::text <> '') then
			select	count(1)
			into STRICT	qt_registro_w
			from	pls_conta_pos_pac_fat
			where	nr_seq_conta_pos = r_C01_w.nr_seq_conta_pos;

			if (qt_registro_w > 0) then
				delete	FROM pls_conta_pos_pac_fat
				where	nr_seq_conta_pos = r_C01_w.nr_seq_conta_pos;
			end if;
		elsif (r_C01_w.nr_seq_pos_proc IS NOT NULL AND r_C01_w.nr_seq_pos_proc::text <> '') then
			select	count(1)
			into STRICT	qt_registro_w
			from	pls_conta_pos_pac_fat
			where	nr_seq_pos_proc = r_c01_w.nr_seq_pos_proc;

			if (qt_registro_w > 0) then
				delete	FROM pls_conta_pos_pac_fat
				where	nr_seq_pos_proc = r_c01_w.nr_seq_pos_proc;
			end if;
		elsif (r_C01_w.nr_seq_pos_mat IS NOT NULL AND r_C01_w.nr_seq_pos_mat::text <> '') then
			select	count(1)
			into STRICT	qt_registro_w
			from	pls_conta_pos_pac_fat
			where	nr_seq_pos_mat = r_c01_w.nr_seq_pos_mat;

			if (qt_registro_w > 0) then
				delete	FROM pls_conta_pos_pac_fat
				where	nr_seq_pos_mat = r_c01_w.nr_seq_pos_mat;
			end if;
		end if;

		-------------------	APAGAR OS REGISTROS ANTIGOS
		nr_seq_pacote_w		:= null;
		nr_seq_preco_pacote_w	:= null;
		nr_seq_prestador_exec_w	:= null;
		ie_tipo_guia_w		:= null;
		cd_procedimento_w	:= null;
		ie_origem_proced_w	:= null;
		nr_seq_regra_pct_fat_w	:= null;
		nr_registro_anvisa_w	:= null;
		nr_seq_material_w	:= null;

		if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
			select	max(x.nr_seq_pacote),
				max(x.nr_seq_preco_pacote),
				max(x.nr_seq_prestador_exec),
				max(x.ie_tipo_guia),
				max(x.cd_procedimento),
				max(x.ie_origem_proced),
				max(x.nr_seq_regra_pct_fat),
				max(x.tx_item),
				max(x.nr_seq_tipo_atendimento),
				max(x.dt_procedimento)
			into STRICT	nr_seq_pacote_w,
				nr_seq_preco_pacote_w,
				nr_seq_prestador_exec_w,
				ie_tipo_guia_w,
				cd_procedimento_w,
				ie_origem_proced_w,
				nr_seq_regra_pct_fat_w,
				tx_item_w,
				nr_seq_tipo_atendimento_w,
				dt_item_w
			from	pls_conta_proc_v x
			where	x.nr_sequencia = nr_seq_conta_proc_w
			and (x.ie_tipo_despesa = '4' or (x.nr_seq_regra_pct_fat IS NOT NULL AND x.nr_seq_regra_pct_fat::text <> ''));

		elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
			select	max(x.ie_tipo_guia),
				max(x.nr_seq_material),
				max(x.nr_seq_regra_pct_fat),
				max(x.dt_atendimento),
				max(x.nr_seq_tipo_atendimento),
				max(x.dt_atendimento)
			into STRICT	ie_tipo_guia_w,
				nr_seq_material_w,
				nr_seq_regra_pct_fat_w,
				dt_atendimento_w,
				nr_seq_tipo_atendimento_w,
				dt_item_w
			from	pls_conta_mat_v	x
			where	x.nr_sequencia = nr_seq_conta_mat_w
			and	(x.nr_seq_regra_pct_fat IS NOT NULL AND x.nr_seq_regra_pct_fat::text <> '');
		end if;

		-- Na Unimed Sao Jose do Rio Preto nao grava NR_SEQ_PACOTE na PLS_CONTA_PROC
		if (nr_seq_regra_pct_fat_w IS NOT NULL AND nr_seq_regra_pct_fat_w::text <> '') and (coalesce(nr_seq_pacote_w::text, '') = '') then
			nr_seq_preco_pacote_w := nr_seq_regra_pct_fat_w;

			select	max(nr_seq_pacote)
			into STRICT	nr_seq_pacote_w
			from	pls_pacote_tipo_acomodacao
			where	nr_sequencia	= nr_seq_preco_pacote_w;
		end if;

		ie_tipo_intercambio_w	:= ptu_obter_tipo_interc_a500(nr_seq_conta_w, cd_estabelecimento_p);

		ie_proc_pac_w := 'N';
		if (coalesce(nr_seq_pacote_w::text, '') = '') and (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_pacote_w
			from	pls_pacote
			where	cd_procedimento	= cd_procedimento_w
			and	ie_origem_proced= ie_origem_proced_w
			and	ie_situacao	= 'A';
		end if;

		if (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '') and (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
			
			select max(a.ie_abrir_pacote_fat)
			into STRICT 	ie_abrir_pacote_fat_w
			from 	pls_pacote_tipo_acomodacao a
			where 	nr_sequencia = nr_seq_regra_pct_fat_w;
			
			if coalesce(ie_abrir_pacote_fat_w,'N')  <> 'S' then
				ie_proc_pac_w := 'S';
			end if;
		end if;

		if (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '') and (coalesce(nr_seq_preco_pacote_w::text, '') = '') then
			
			if (nr_seq_regra_pct_fat_w IS NOT NULL AND nr_seq_regra_pct_fat_w::text <> '') then
				nr_seq_preco_pacote_w := nr_seq_regra_pct_fat_w;
			else
				select	max(nr_sequencia)
				into STRICT	nr_seq_preco_pacote_w
				from	pls_pacote_tipo_acomodacao
				where	nr_seq_pacote	= nr_seq_pacote_w
				and	ie_situacao	= 'A';
			end if;
		end if;

		if (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '') then
			select	max(nr_seq_composicao)
			into STRICT	nr_seq_composicao_w
			from	pls_pacote_tipo_acomodacao
			where	nr_sequencia = nr_seq_preco_pacote_w;

			select	sum(coalesce(vl_negociado, 0)) * qt_item_w
			into STRICT	vl_negociado_w
			from (SELECT	sum(coalesce(vl_negociado, 0)) vl_negociado
				from	pls_pacote_procedimento
				where	nr_seq_composicao	= nr_seq_composicao_w
				
union all

				SELECT	sum(coalesce(vl_negociado, 0)) vl_negociado
				from	pls_pacote_material
				where	nr_seq_composicao	= nr_seq_composicao_w) alias6;

			if (vl_negociado_w > 0) then
				pr_valor_pac_w	:= (vl_servico_w*100)/vl_negociado_w;

				if (pr_valor_pac_w > 100) then
					pr_valor_pac_w := 100;
				end if;
			else
				pr_valor_pac_w := 100;
			end if;

			select	sum(qt_regra)
			into STRICT	qt_regra_w
			from (SELECT	count(1) qt_regra
				from	pls_pacote_agrup_fat	b,
					pls_pac_agrup_fat_proc	a
				where	b.nr_sequencia	= a.nr_seq_pacote_agrup
				and	coalesce(b.ie_tipo_intercambio, 'A') = ie_tipo_intercambio_w
				and	dt_atual_w between trunc(coalesce(b.dt_inicio_vigencia,clock_timestamp())) and coalesce(b.dt_fim_vigencia,clock_timestamp())
				and	coalesce(nr_seq_regra_pct_fat_w::text, '') = ''
				
union

				SELECT	count(1) qt_regra
				from	pls_pacote_agrup_fat	b,
					pls_pac_agrup_fat_mat	a
				where	b.nr_sequencia	= a.nr_seq_pacote_agrup
				and	coalesce(b.ie_tipo_intercambio, 'A') = ie_tipo_intercambio_w
				and	dt_atual_w between trunc(coalesce(b.dt_inicio_vigencia,clock_timestamp())) and coalesce(b.dt_fim_vigencia,clock_timestamp())
				and	coalesce(nr_seq_regra_pct_fat_w::text, '') = '') alias17;

			ie_sem_regra_pacote_w := 'S';

			if (qt_regra_w > 0) then
				ie_sem_regra_pacote_w := 'N';
			end if;

			-- Se for do PTU 11.3, ou com data nula ou superior a  01/10/2020
			if ((coalesce(dt_autorizacao_w::text, '') = '') or (dt_autorizacao_w >= dt_ref_ptu_11_3_w)) and ie_versao_w >= 113 then


				qt_regra_w            := 0;
				ie_sem_regra_pacote_w := 'S';
			end if;

			
			-- se for anteior ao PTU 11.3  ou autorizacao antes de 01/10/2020 
			if ie_versao_w < 113 or (dt_autorizacao_w < dt_ref_ptu_11_3_w) then
				if (ie_proc_pac_w = 'S') and (qt_regra_w = 0) and (coalesce(nr_seq_regra_pct_fat_w::text, '') = '') then
					select	count(qt_comp)
					into STRICT	qt_regra_w
					from (SELECT	count(1) qt_comp
						from	pls_pacote_procedimento
						where	nr_seq_composicao	= nr_seq_composicao_w
						and	ie_gerar_a500		= 'N'
						
union all

						SELECT	count(1) qt_comp
						from	pls_pacote_material
						where	nr_seq_composicao	= nr_seq_composicao_w
						and	ie_gerar_a500		= 'N') alias8;
				end if;
			end if;

			qt_composicao_w := 1;
			if (nr_seq_regra_pct_fat_w IS NOT NULL AND nr_seq_regra_pct_fat_w::text <> '') and (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '') then
				if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
					select	count(1)
					into STRICT	qt_composicao_w
					from	pls_pacote_procedimento x
					where (x.ie_tipo_guia		= ie_tipo_guia_w or coalesce(x.ie_tipo_guia::text, '') = '')
					and (x.nr_seq_prestador	= nr_seq_prestador_exec_w or coalesce(x.nr_seq_prestador::text, '') = '')
					and	x.ie_situacao		= 'A'
					and (ie_sem_regra_pacote_w	= 'N' or ie_sem_regra_pacote_w = x.ie_gerar_a500)
					and	cd_procedimento		= cd_procedimento_w
					and	ie_origem_proced	= ie_origem_proced_w
					and	exists (SELECT	1
							from	pls_pacote_composicao a
							where	a.nr_sequencia = x.nr_seq_composicao
							and	a.nr_seq_pacote	= nr_seq_pacote_w
							and (a.nr_sequencia = nr_seq_composicao_w or coalesce(nr_seq_composicao_w::text, '') = '')
							and	a.ie_situacao = 'A');

				elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
					select	count(1)
					into STRICT	qt_composicao_w
					from	pls_pacote_material x
					where (x.ie_tipo_guia		= ie_tipo_guia_w or coalesce(x.ie_tipo_guia::text, '') = '')
					and (x.nr_seq_prestador	= nr_seq_prestador_exec_w or coalesce(x.nr_seq_prestador::text, '') = '')
					and	x.ie_situacao		= 'A'
					and (ie_sem_regra_pacote_w	= 'N' or ie_sem_regra_pacote_w = x.ie_gerar_a500)
					and	nr_seq_material		= nr_seq_material_w
					and	exists (SELECT	1
							from	pls_pacote_composicao a
							where	a.nr_sequencia = x.nr_seq_composicao
							and	a.nr_seq_pacote	= nr_seq_pacote_w
							and (a.nr_sequencia = nr_seq_composicao_w or coalesce(nr_seq_composicao_w::text, '') = '')
							and	a.ie_situacao = 'A');
				end if;
			end if;

			------------------- SE NAO TIVER REGRA DE AGRUPAMENTO, TEM QUE GERAR O REGITRO "PAI" NOS ITENS	- QUE SEMPRE E O PACOTE
			if	((qt_regra_w = 0) and (coalesce(nr_seq_regra_pct_fat_w::text, '') = ''))
				or (qt_composicao_w = 0) 
				or ( qt_composicao_w > 0 and (nr_seq_regra_pct_fat_w IS NOT NULL AND nr_seq_regra_pct_fat_w::text <> '') and coalesce(ie_proc_pac_w,'N') = 'S') then

				ie_tipo_tabela_w	:= 4; -- Servico com Custo Fechado / Pacote
				cd_servico_w		:= null;
				ds_servico_w		:= null;

				if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
					select	ie_classificacao,
						cd_procedimento,
						cd_procedimento,
						substr(obter_desc_procedimento(cd_procedimento,ie_origem_proced),1,80)
					into STRICT	ie_classificacao_w,
						cd_procedimento_w,
						cd_servico_w,
						ds_servico_w
					from	procedimento
					where	cd_procedimento = cd_procedimento_w
					and	ie_origem_proced = ie_origem_proced_w;

					if (nr_seq_regra_pct_fat_w IS NOT NULL AND nr_seq_regra_pct_fat_w::text <> '') then

						-- se nao for o proprio pacote
						if coalesce(ie_proc_pac_w,'N') = 'N' then
							ie_tipo_tabela_w := ptu_obter_tipo_tabela_int(ie_classificacao_w, 'P');
						end if;

					end if;

				elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') and (nr_seq_regra_pct_fat_w IS NOT NULL AND nr_seq_regra_pct_fat_w::text <> '') then
					select	max(ie_tipo_despesa),
						max(nr_seq_material_unimed),
						max(cd_material_ops),
						max(ds_material)
					into STRICT	ie_tipo_despesa_pac_w,
						nr_seq_material_unimed_w,
						cd_material_w,
						ds_material_w
					from	pls_material
					where	nr_sequencia = nr_seq_material_w;

					select 	max(dt_atendimento)
					into STRICT	dt_atendimento_w
					from	pls_conta_mat
					where	nr_sequencia = nr_seq_conta_mat_w;

					if (ie_data_conv_mat_unimed_w	= 'DA') then
						SELECT * FROM pls_obter_mat_a900_vigente( nr_seq_material_w, clock_timestamp(), cd_material_a900_w, null) INTO STRICT  nr_seq_material_w, cd_material_a900_w;
					else
						SELECT * FROM pls_obter_mat_a900_vigente( nr_seq_material_w, coalesce(dt_atendimento_w,clock_timestamp()), cd_material_a900_w, null) INTO STRICT  nr_seq_material_w, cd_material_a900_w;
					end if;

					if (nr_seq_material_unimed_w IS NOT NULL AND nr_seq_material_unimed_w::text <> '') then
						select	somente_numero(max(nr_registro_anvisa)),
							max(nm_material)
						into STRICT	nr_registro_anvisa_w,
							nm_material_w
						from	pls_material_unimed
						where	nr_sequencia = nr_seq_material_unimed_w;

					elsif (cd_material_a900_w IS NOT NULL AND cd_material_a900_w::text <> '') then
						select	somente_numero(max(nr_registro_anvisa)),
							max(nm_material)
						into STRICT	nr_registro_anvisa_w,
							nm_material_w
						from	pls_material_unimed
						where	cd_material = cd_material_a900_w;
					
					end if;

					cd_servico_w	:= obter_somente_numero(substr(coalesce(cd_material_a900_w,cd_material_w),1,15));
					ds_servico_w	:= substr(coalesce(nm_material_w,ds_material_w),1,80);

					if (coalesce(trim(both nr_registro_anvisa_w), 0) = 0) then
						nr_registro_anvisa_w	:= null;
					end if;

					ie_tipo_tabela_w := ptu_obter_tipo_tabela_int(ie_tipo_despesa_pac_w, 'M');
				end if;

				insert into pls_conta_pos_pac_fat(	nr_sequencia,				dt_atualizacao,		nm_usuario,
									dt_atualizacao_nrec, 			nm_usuario_nrec, 	nr_seq_conta_pos,
									nr_seq_pacote_agrup, 			cd_procedimento,	ie_origem_proced,
									ie_tipo_tabela, 			nr_registro_anvisa, 	vl_procedimento,
									vl_adic_procedimento, 			nr_seq_material, 	nr_seq_pacote_proc,
									nr_seq_pacote_mat, 			qt_procedimento, 	cd_servico,
									ds_servico, 				nr_seq_pacote,		nr_seq_pos_proc,
									nr_seq_pos_mat,				vl_adic_co,		vl_custo_operacional,
									vl_adic_filme,				vl_filme)
							values (	nextval('pls_conta_pos_pac_fat_seq'),	clock_timestamp(),		nm_usuario_p,
									clock_timestamp(), 				nm_usuario_p, 		r_C01_w.nr_seq_conta_pos,
									null, 					cd_procedimento_w, 	ie_origem_proced_w,
									ie_tipo_tabela_w, 			nr_registro_anvisa_w, 	0,
									0, 					nr_seq_material_w, 	null,
									null, 					0, 			cd_servico_w,
									ds_servico_w, 				nr_seq_pacote_w,	r_C01_w.nr_seq_pos_proc,
									r_C01_w.nr_seq_pos_mat,			0,			0,
									0,					0) returning nr_sequencia into nr_seq_conta_pac_fat_a500_w;
				-- contagem necessaria, para saber se vai utilizar os valores detalhados do item pos original
				qt_itens_w := qt_itens_w + 1;
			end if;

			------------------- SE NAO TIVER REGRA DE AGRUPAMENTO, TEM QUE GERAR O REGITRO "PAI" NOS ITENS
			ie_insere_w := 'N';
			
			
			-- se for versao  menor que PTU 11.3 ou data anterior a 01/10/2020
			if ie_versao_w < 113 or (dt_autorizacao_w < dt_ref_ptu_11_3_w) then
				------------------- ABRIR O PACOTE PARA GERAR OS ITENS
				for r_C00_w in C00( 	nr_seq_prestador_exec_w, ie_tipo_guia_w, nr_seq_pacote_w,
							nr_seq_composicao_w, dt_atual_w, nr_seq_regra_pct_fat_w,
							cd_procedimento_w, ie_origem_proced_w, nr_seq_material_w) loop

					nr_seq_regra_agrup_w		:= null;
					cd_procedimento_w		:= null;
					ie_origem_proced_w		:= null;
					ie_tipo_tabela_w		:= null;
					nr_registro_anvisa_w		:= null;
					nr_seq_material_w		:= null;
					qt_registro_w			:= 0;
					ie_gerar_a500_w			:= coalesce(r_C00_w.ie_gerar_a500, 'N');
					cd_material_w			:= null;
					cd_proc_conv_w			:= null;
					ie_origem_proced_conv_w		:= null;
					nr_seq_regra_conv_w		:= null;
					ie_somente_codigo_w		:= null;
					ie_tipo_tabela_conv_w		:= null;
					nr_seq_regra_conv_mat_w		:= null;
					cd_proc_conv_w			:= null;
					ie_origem_proced_conv_w		:= null;
					cd_servico_conv_w		:= null;
					nr_seq_material_conv_w		:= null;
					ds_servico_conv_w		:= null;
					cd_servico_w			:= null;
					ds_servico_w			:= null;
					nm_material_w			:= null;

					-- OS 854153 - VERIFICAR SE DEVE DESTACAR O ITEM DO PACOTE
					if (ie_gerar_a500_w = 'S') then
						if (r_C00_w.nr_seq_pacote_proc IS NOT NULL AND r_C00_w.nr_seq_pacote_proc::text <> '') then
							select	count(1)
							into STRICT	qt_regra_ptu_w
							from	pls_pacote_proc_regra_ptu
							where	nr_seq_pacote_proc	= r_C00_w.nr_seq_pacote_proc;

							if (qt_regra_ptu_w > 0) then
								select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
								into STRICT	ie_gerar_a500_w
								from	pls_pacote_proc_regra_ptu
								where	nr_seq_pacote_proc	= r_C00_w.nr_seq_pacote_proc
								and (ie_tipo_intercambio	= 'A'
								or	ie_tipo_intercambio	= ie_tipo_intercambio_w);
							end if;

						elsif (r_C00_w.nr_seq_pacote_mat IS NOT NULL AND r_C00_w.nr_seq_pacote_mat::text <> '') then
							select	count(1)
							into STRICT	qt_regra_ptu_w
							from	pls_pacote_mat_regra_ptu
							where	nr_seq_pacote_mat	= r_C00_w.nr_seq_pacote_mat;

							if (qt_regra_ptu_w > 0) then
								select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
								into STRICT	ie_gerar_a500_w
								from	pls_pacote_mat_regra_ptu
								where	nr_seq_pacote_mat	= r_C00_w.nr_seq_pacote_mat
								and (ie_tipo_intercambio	= 'A'
								or	ie_tipo_intercambio	= ie_tipo_intercambio_w);
							end if;
						end if;
					end if;

					if (ie_gerar_a500_w = 'N') then
						nr_seq_regra_agrup_w := pls_obter_regra_pacote_fatura(	nr_seq_conta_w, r_C00_w.cd_procedimento_pac, r_C00_w.ie_origem_proced_pac, r_C00_w.nr_seq_material, nr_seq_regra_agrup_w);
					end if;

					if (nr_seq_regra_agrup_w IS NOT NULL AND nr_seq_regra_agrup_w::text <> '') or (ie_gerar_a500_w = 'S') then

						if (nr_seq_regra_agrup_w IS NOT NULL AND nr_seq_regra_agrup_w::text <> '') then
							select	max(a.cd_procedimento),
								max(a.ie_origem_proced),
								max(ie_desc_pac_origem)
							into STRICT	cd_procedimento_w,
								ie_origem_proced_w,
								ie_desc_pac_origem_w
							from	pls_pacote_agrup_fat	a
							where	a.nr_sequencia	= nr_seq_regra_agrup_w;
						end if;

						if (r_C00_w.ie_tipo = 'P') then
							------------------- DIRETO DO PACOTE
							if (ie_gerar_a500_w = 'S') and (coalesce(nr_seq_regra_agrup_w::text, '') = '') then
								cd_procedimento_w	:= r_C00_w.cd_procedimento_pac;
								ie_origem_proced_w	:= r_C00_w.ie_origem_proced_pac;
							end if;
							------------------- DIRETO DO PACOTE
							select	ie_classificacao,
								cd_procedimento,
								substr(obter_desc_procedimento(cd_procedimento,ie_origem_proced),1,80)
							into STRICT	ie_classificacao_w,
								cd_servico_w,
								ds_servico_w
							from	procedimento
							where	cd_procedimento = cd_procedimento_w
							and	ie_origem_proced = ie_origem_proced_w;

							ie_tipo_tabela_w := ptu_obter_tipo_tabela_int(ie_classificacao_w, 'P');

						elsif (r_C00_w.ie_tipo = 'M') then
							select	max(ie_tipo_despesa),
								max(cd_material_a900),
								max(nr_seq_material_unimed),
								max(cd_material_ops),
								max(ds_material)
							into STRICT	ie_tipo_despesa_pac_w,
								cd_material_a900_w,
								nr_seq_material_unimed_w,
								cd_material_w,
								ds_material_w
							from	pls_material
							where	nr_sequencia = r_C00_w.nr_seq_material;

							if (nr_seq_material_unimed_w IS NOT NULL AND nr_seq_material_unimed_w::text <> '') then
								select	somente_numero(max(nr_registro_anvisa)),
									max(nm_material)
								into STRICT	nr_registro_anvisa_w,
									nm_material_w
								from	pls_material_unimed
								where	nr_sequencia = nr_seq_material_unimed_w;

							elsif (cd_material_a900_w IS NOT NULL AND cd_material_a900_w::text <> '') then
								select	somente_numero(max(nr_registro_anvisa)),
									max(nm_material)
								into STRICT	nr_registro_anvisa_w,
									nm_material_w
								from	pls_material_unimed
								where	cd_material = cd_material_a900_w;
							end if;

							------------------- DIRETO DO PACOTE
							if (ie_gerar_a500_w = 'S') and (coalesce(nr_seq_regra_agrup_w::text, '') = '') then
								nr_seq_material_w	:= r_C00_w.nr_seq_material;
								cd_servico_w		:= obter_somente_numero(substr(coalesce(cd_material_a900_w,cd_material_w),1,15));
								ds_servico_w		:= substr(coalesce(nm_material_w,ds_material_w),1,80);
							end if;
							------------------- DIRETO DO PACOTE
							if (coalesce(trim(both nr_registro_anvisa_w), 0) = 0) then
								nr_registro_anvisa_w	:= null;
							end if;

							ie_tipo_tabela_w := ptu_obter_tipo_tabela_int(ie_tipo_despesa_pac_w, 'M');

							if (ie_gerar_a500_w = 'N') and (nr_seq_regra_agrup_w IS NOT NULL AND nr_seq_regra_agrup_w::text <> '') then
								select	max(cd_procedimento),
									max(substr(obter_desc_procedimento(cd_procedimento,ie_origem_proced),1,80))
								into STRICT	cd_servico_w,
									ds_servico_w
								from	procedimento
								where	cd_procedimento = cd_procedimento_w
								and	ie_origem_proced = ie_origem_proced_w;
							end if;
						end if;

						-- verifica se tem regra e se e para utilizar a descricao do pacote original, ao inves da descricao do agrupamento
						if (nr_seq_regra_agrup_w IS NOT NULL AND nr_seq_regra_agrup_w::text <> '') and (ie_desc_pac_origem_w = 'S') and (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '') then

							select	max(substr(obter_desc_procedimento(a.cd_procedimento,a.ie_origem_proced),1,80))
							into STRICT	ds_servico_w
							from	pls_pacote	a
							where	a.nr_sequencia	= nr_seq_pacote_w;
						end if;

						if (r_C01_w.nr_seq_conta_pos IS NOT NULL AND r_C01_w.nr_seq_conta_pos::text <> '') then
							select	max(nr_sequencia)
							into STRICT	nr_seq_conta_pos_pac_fat_w
							from	pls_conta_pos_pac_fat
							where	nr_seq_pacote_agrup = nr_seq_regra_agrup_w
							and	nr_seq_conta_pos = r_C01_w.nr_seq_conta_pos;

						elsif (r_C01_w.nr_seq_pos_proc IS NOT NULL AND r_C01_w.nr_seq_pos_proc::text <> '') then
							select	max(nr_sequencia)
							into STRICT	nr_seq_conta_pos_pac_fat_w
							from	pls_conta_pos_pac_fat
							where	nr_seq_pacote_agrup = nr_seq_regra_agrup_w
							and	nr_seq_pos_proc = r_c01_w.nr_seq_pos_proc;

						elsif (r_C01_w.nr_seq_pos_mat IS NOT NULL AND r_C01_w.nr_seq_pos_mat::text <> '') then
							select	max(nr_sequencia)
							into STRICT	nr_seq_conta_pos_pac_fat_w
							from	pls_conta_pos_pac_fat
							where	nr_seq_pacote_agrup = nr_seq_regra_agrup_w
							and	nr_seq_pos_mat = r_c01_w.nr_seq_pos_mat;
						end if;

						if (ie_gerar_a500_w = 'S') or (coalesce(nr_seq_conta_pos_pac_fat_w::text, '') = '') then
							if (ie_gerar_a500_w = 'S') then
								if (r_C00_w.ie_tipo = 'P') then
									-- Define a descricao do servico com o codigo original do procedimento
									select	substr(max(ds_procedimento),1,80)
									into STRICT	ds_servico_w
									from	procedimento
									where	cd_procedimento	= cd_procedimento_w
									and	ie_origem_proced= ie_origem_proced_w;

									-- Busca regra de conversao de procedimento
									SELECT * FROM pls_obter_proced_conversao(	cd_procedimento_w, ie_origem_proced_w, null, cd_estabelecimento_p, 1, null, 5, 'E', null, null, null, null, ie_tipo_intercambio_w, cd_proc_conv_w, ie_origem_proced_conv_w, nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(), nr_seq_tipo_atendimento_w, null, null) INTO STRICT cd_proc_conv_w, ie_origem_proced_conv_w, nr_seq_regra_conv_w, ie_somente_codigo_w;

									-- Define o codigo do servico com o codigo de conversao, caso nao tenha encontrado continua com o valor original
									cd_servico_w := coalesce(cd_proc_conv_w,cd_servico_w);

									-- Se encontrou regra de conversao e esta setado para nao converter apenas o codigo entao pega a descricao do procedimento na regra
									if (nr_seq_regra_conv_w IS NOT NULL AND nr_seq_regra_conv_w::text <> '') and (coalesce(ie_somente_codigo_w, 'N') = 'N') then
										select	substr(ds_proc_envio,1,80)
										into STRICT	ds_servico_w
										from	pls_conversao_proc
										where	nr_sequencia = nr_seq_regra_conv_w;
									end if;
								elsif (r_C00_w.ie_tipo = 'M') then
									-- Busca regra de conversao de material
									SELECT * FROM pls_obter_mat_conversao(	cd_material_w, ie_tipo_despesa_pac_w, nm_usuario_p, 'E', null, null, nr_seq_prestador_exec_w, nr_seq_material_conv_w, cd_servico_conv_w, ds_servico_conv_w, ie_tipo_tabela_conv_w, nr_seq_regra_conv_mat_w, null) INTO STRICT nr_seq_material_conv_w, cd_servico_conv_w, ds_servico_conv_w, ie_tipo_tabela_conv_w, nr_seq_regra_conv_mat_w;
									ie_mat_a900_w := 'N';
									-- Se nao encontrou regra na tabela 'PLS_CONVERSAO_MAT' busca na tabela 'PLS_REGRA_CONV_MAT_INTERC'
									if (coalesce(nr_seq_regra_conv_mat_w::text, '') = '') then

										SELECT * FROM ptu_obter_material_conversao(	cd_material_w, ie_tipo_tabela_w, coalesce(dt_item_w,dt_atual_w), 'E', 'A', ie_tipo_despesa_pac_w, ie_tipo_intercambio_w, nr_seq_material_conv_w, cd_servico_conv_w, ie_somente_codigo_w) INTO STRICT nr_seq_material_conv_w, cd_servico_conv_w, ie_somente_codigo_w;

										-- Se encontrou regra de conversao na tabela 'PLS_REGRA_CONV_MAT_INTERC'
										if (nr_seq_material_conv_w IS NOT NULL AND nr_seq_material_conv_w::text <> '') then
											-- Obtem o codigo e a descricao
											select	cd_material,
												substr(coalesce(ds_material, nm_material), 1, 80)
											into STRICT	cd_servico_conv_w,
												ds_servico_conv_w
											from	pls_material_unimed
											where	nr_sequencia = nr_seq_material_conv_w;

											-- Indica que obteve uma regra pela 'PTU_OBTER_MATERIAL_CONVERSAO'
											ie_mat_a900_w := 'S';
										end if;

										-- Se a regra esta configurada para converter apenas o codigo, volta a descricao para a original antes de encontrar a regra de conversao
										if (coalesce(ie_somente_codigo_w, 'N') = 'S') then
											ds_servico_conv_w := substr(ds_servico_w, 1, 80);
										end if;
									end if;

									-- Se nao ha PLS_MATERIAL.CD_MATERIAL_A900 mas o sistema esta configurado para utilizar considerar o 'Cod. material Unimed A900', busca no material A900 vigente.
									if (coalesce(cd_material_a900_w::text, '') = '') and (coalesce(ie_material_intercambio_w, 'S') = 'CI') then
										if (ie_data_conv_mat_unimed_w = 'DA') then
											SELECT * FROM pls_obter_mat_a900_vigente(nr_seq_material_w, clock_timestamp(), cd_material_a900_w, null) INTO STRICT nr_seq_material_w, cd_material_a900_w;
										else
											SELECT * FROM pls_obter_mat_a900_vigente(nr_seq_material_w, coalesce(dt_atendimento_w, clock_timestamp()), cd_material_a900_w, null) INTO STRICT nr_seq_material_w, cd_material_a900_w;
										end if;

										-- Prioridades para selecionar o codigo do material, caso o parametro ie_material_intercambio for igual a 'CI'

										-- 1 - Conversao A900

										-- 2 - Conversao de cooperativa medica

										-- 3 - Codigo OPS do material

										-- Se encontrou material A900 vigente,
										if (cd_material_a900_w IS NOT NULL AND cd_material_a900_w::text <> '') then
											cd_servico_w 	:= obter_somente_numero(substr(cd_material_a900_w,1,15));
											ds_servico_w	:= substr(coalesce(nm_material_w, ds_material_w),1,80);

										-- Se encontrou regra de conversao entao define o codigo do servico e a descricao conforme a regra de conversao.
										elsif (nr_seq_regra_conv_mat_w IS NOT NULL AND nr_seq_regra_conv_mat_w::text <> '') or (ie_mat_a900_w = 'S') then
											cd_servico_w	:= coalesce(cd_servico_conv_w, cd_servico_w);
											ds_servico_w	:= substr(coalesce(ds_servico_conv_w, ds_servico_w), 1, 80);
										-- Se nao encontrou nenhuma conversao valida para A900 ou Cooperativa medica, utiliza o codigo do material
										elsif (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
											cd_servico_w 	:= obter_somente_numero(substr(cd_material_w,1,15));
											ds_servico_w	:= substr(ds_material_w,1,80);
										end if;
									-- Se encontrou regra de conversao entao define o codigo do servico e a descricao conforme a regra de conversao.
									elsif (nr_seq_regra_conv_mat_w IS NOT NULL AND nr_seq_regra_conv_mat_w::text <> '') or (ie_mat_a900_w = 'S') then
										cd_servico_w	:= coalesce(cd_servico_conv_w, cd_servico_w);
										ds_servico_w	:= substr(coalesce(ds_servico_conv_w, ds_servico_w), 1, 80);
									end if;
								end if;
							end if;

							-- OS 1366912 - jtonon - O decode abaixo realiza uma multiplicacao no caso do 'nr_seq_regra_agrup_w' estar nulo, porem, pelo que entendi do processo quando o 'ie_gerar_a500_w' vier como 'S' essa multiplicacao nao deve ser realizada

							-- decode(nvl(nr_seq_regra_agrup_w, 0), 0,(nvl(r_C00_w.qt_item,1) * qt_item_w),qt_item_w)

							-- Havia uma conta com 2 itens, onde no pos tambem foi gerado com quantidade 2, porem na 'pls_conta_pos_pac_fat' estava gerando com quantidade 4, visto que o sitema estava multiplicando a quantidade do pos com a quantidade definida na composicao do pacote

							-- Removido do if abaixo o and (ie_gerar_a500_w = 'N') , pois quando nao pegar regra de agrupamento, entende-se que deve gerar a quantidade baseada a composicao do pacote, e na qusntidade de pacotes. Alteracao feita na OS 1175617 da litoral
							if (coalesce(nr_seq_regra_agrup_w::text, '') = '') then
								qt_item_ww	:= coalesce(r_C00_w.qt_item, 1) * qt_item_w;
							else
								qt_item_ww	:= qt_item_w;
							end if;

							ie_insere_w := 'S';
							insert into pls_conta_pos_pac_fat(	nr_sequencia, 				dt_atualizacao, 		nm_usuario,
												dt_atualizacao_nrec, 			nm_usuario_nrec, 		nr_seq_conta_pos,
												nr_seq_pacote_agrup, 			cd_procedimento, 		ie_origem_proced,
												ie_tipo_tabela, 			nr_registro_anvisa, 		vl_procedimento,
												vl_adic_procedimento, 			nr_seq_material, 		nr_seq_pacote_proc,
												nr_seq_pacote_mat, 			cd_servico,			qt_procedimento,
												ds_servico, 				nr_seq_pacote,			nr_seq_pos_proc,
												nr_seq_pos_mat,				vl_adic_co,			vl_custo_operacional,
												vl_adic_filme,				vl_filme)
										values (	nextval('pls_conta_pos_pac_fat_seq'), 	clock_timestamp(), 			nm_usuario_p,
												clock_timestamp(), 				nm_usuario_p, 			r_C01_w.nr_seq_conta_pos,
												nr_seq_regra_agrup_w, 			cd_procedimento_w, 		ie_origem_proced_w,
												ie_tipo_tabela_w, 			nr_registro_anvisa_w, 		0,
												0, 					nr_seq_material_w,		r_C00_w.nr_seq_pacote_proc,
												r_C00_w.nr_seq_pacote_mat, 		substr(cd_servico_w,1,8),	qt_item_ww,
												substr(ds_servico_w, 1, 80),		nr_seq_pacote_w,		r_C01_w.nr_seq_pos_proc,
												r_c01_w.nr_seq_pos_mat,			0,				0,
												0,					0) returning nr_sequencia into nr_seq_conta_pos_pac_fat_w;
							-- contagem necessaria, para saber se vai utilizar os valores detalhados do item pos original
							qt_itens_w := qt_itens_w + 1;
						end if;

						------------------- OBTER VALOR DO ITEM
						if (nr_seq_conta_pos_pac_fat_w IS NOT NULL AND nr_seq_conta_pos_pac_fat_w::text <> '') then
							if (r_C00_w.nr_seq_pacote_proc IS NOT NULL AND r_C00_w.nr_seq_pacote_proc::text <> '') then
								select	coalesce(vl_negociado, 0),
									coalesce(qt_procedimento,1)
								into STRICT	vl_procedimento_w,
									qt_procedimento_w
								from	pls_pacote_procedimento
								where	nr_sequencia = r_C00_w.nr_seq_pacote_proc;

							elsif (r_C00_w.nr_seq_pacote_mat IS NOT NULL AND r_C00_w.nr_seq_pacote_mat::text <> '') then
								select	coalesce(vl_negociado, 0),
									coalesce(qt_material,1)
								into STRICT	vl_procedimento_w,
									qt_procedimento_w
								from	pls_pacote_material
								where	nr_sequencia = r_C00_w.nr_seq_pacote_mat;
							end if;
						end if;

						if (pr_valor_pac_w < 100) and (pr_valor_pac_w > 0) then
							vl_procedimento_w := (vl_procedimento_w*pr_valor_pac_w)/100;
						end if;

						if (vl_administracao_w > 0) then
							vl_adic_procedimento_w := (vl_procedimento_w * (tx_administracao_w/100)) * qt_item_w;
						else
							vl_adic_procedimento_w := 0;
						end if;

						-- jtonon - OS 858074 - 13/03/15 - O valor do procedimento deve ser multiplicado pela quantidade de itens da conta (qt_item_w)
						vl_procedimento_w := vl_procedimento_w * qt_item_w;

						update	pls_conta_pos_pac_fat
						set	vl_procedimento = vl_procedimento + coalesce(vl_procedimento_w, 0),
							vl_adic_procedimento = vl_adic_procedimento + coalesce(vl_adic_procedimento_w, 0)
						where	nr_sequencia = nr_seq_conta_pos_pac_fat_w;
					end if;
				end loop;

				------------------- SE NAO GERADO OS REGISTROS ATRAVES DA REGRA DE AGRUPAMENTO, GERA O VALOR DO PRIMEIRO ITEM
				if (nr_seq_conta_pac_fat_a500_w IS NOT NULL AND nr_seq_conta_pac_fat_a500_w::text <> '') then
					if (r_C01_w.nr_seq_conta_pos IS NOT NULL AND r_C01_w.nr_seq_conta_pos::text <> '') then
						select	sum(coalesce(vl_procedimento, 0)),
							sum(coalesce(vl_adic_procedimento, 0))
						into STRICT	vl_procedimento_w,
							vl_adic_procedimento_w
						from	pls_conta_pos_pac_fat
						where	nr_seq_conta_pos = r_C01_w.nr_seq_conta_pos;

					elsif (r_C01_w.nr_seq_pos_proc IS NOT NULL AND r_C01_w.nr_seq_pos_proc::text <> '') then
						select	sum(coalesce(vl_procedimento, 0)),
							sum(coalesce(vl_adic_procedimento, 0))
						into STRICT	vl_procedimento_w,
							vl_adic_procedimento_w
						from	pls_conta_pos_pac_fat
						where	nr_seq_pos_proc = r_c01_w.nr_seq_pos_proc;

					elsif (r_C01_w.nr_seq_pos_mat IS NOT NULL AND r_C01_w.nr_seq_pos_mat::text <> '') then
						select	sum(coalesce(vl_procedimento, 0)),
							sum(coalesce(vl_adic_procedimento, 0))
						into STRICT	vl_procedimento_w,
							vl_adic_procedimento_w
						from	pls_conta_pos_pac_fat
						where	nr_seq_pos_mat = r_c01_w.nr_seq_pos_mat;
					end if;

					update	pls_conta_pos_pac_fat
					set	vl_procedimento 	= vl_servico_w - vl_procedimento_w,
						vl_adic_procedimento 	= vl_administracao_w - vl_adic_procedimento_w,
						qt_procedimento 	= qt_item_w
					where	nr_sequencia 		= nr_seq_conta_pac_fat_a500_w;
				end if;

				------------------- ARREDONDAMENTOS
				if (ie_insere_w = 'S') then
					if (r_C01_w.nr_seq_conta_pos IS NOT NULL AND r_C01_w.nr_seq_conta_pos::text <> '') then
						select	sum(vl_procedimento),
							sum(vl_adic_procedimento)
						into STRICT	vl_procedimento_w,
							vl_adic_procedimento_w
						from	pls_conta_pos_pac_fat
						where	nr_seq_conta_pos = r_C01_w.nr_seq_conta_pos;

						select	max(nr_sequencia)
						into STRICT	nr_seq_conta_pos_pac_fat_w
						from	pls_conta_pos_pac_fat
						where	nr_seq_conta_pos = r_C01_w.nr_seq_conta_pos
						and	vl_procedimento = (	SELECT	max(vl_procedimento)
										from	pls_conta_pos_pac_fat
										where	nr_seq_conta_pos = r_C01_w.nr_seq_conta_pos);

					elsif (r_C01_w.nr_seq_pos_proc IS NOT NULL AND r_C01_w.nr_seq_pos_proc::text <> '') then
						select	sum(vl_procedimento),
							sum(vl_adic_procedimento)
						into STRICT	vl_procedimento_w,
							vl_adic_procedimento_w
						from	pls_conta_pos_pac_fat
						where	nr_seq_pos_proc = r_c01_w.nr_seq_pos_proc;

						select	max(nr_sequencia)
						into STRICT	nr_seq_conta_pos_pac_fat_w
						from	pls_conta_pos_pac_fat
						where	nr_seq_pos_proc = r_C01_w.nr_seq_pos_proc
						and	vl_procedimento = (	SELECT	max(vl_procedimento)
										from	pls_conta_pos_pac_fat
										where	nr_seq_pos_proc = r_C01_w.nr_seq_pos_proc);

					elsif (r_C01_w.nr_seq_pos_mat IS NOT NULL AND r_C01_w.nr_seq_pos_mat::text <> '') then
						select	sum(vl_procedimento),
							sum(vl_adic_procedimento)
						into STRICT	vl_procedimento_w,
							vl_adic_procedimento_w
						from	pls_conta_pos_pac_fat
						where	nr_seq_pos_mat = r_c01_w.nr_seq_pos_mat;

						select	max(nr_sequencia)
						into STRICT	nr_seq_conta_pos_pac_fat_w
						from	pls_conta_pos_pac_fat
						where	nr_seq_pos_mat = r_C01_w.nr_seq_pos_mat
						and	vl_procedimento = (	SELECT	max(vl_procedimento)
										from	pls_conta_pos_pac_fat
										where	nr_seq_pos_mat = r_C01_w.nr_seq_pos_mat);
					end if;

					------------------- VALOR DE SERVICO
					if (vl_procedimento_w <> vl_servico_w) then
						update	pls_conta_pos_pac_fat
						set	vl_procedimento	= vl_procedimento + (vl_servico_w - vl_procedimento_w)
						where	nr_sequencia	= nr_seq_conta_pos_pac_fat_w;
					end if;

					------------------- VALOR DE TAXA
					if (vl_adic_procedimento_w <> vl_administracao_w) then

						update	pls_conta_pos_pac_fat
						set	vl_adic_procedimento = vl_adic_procedimento + (vl_administracao_w - vl_adic_procedimento_w)
						where	nr_sequencia = nr_seq_conta_pos_pac_fat_w;
					end if;

				elsif (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '') and (coalesce(nr_seq_regra_pct_fat_w::text, '') = '') then

					ie_tipo_tabela_w := 4; -- Servico com Custo Fechado / Pacote
					cd_servico_w := null;
					ds_servico_w := null;

					if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
						-- quando for pacote, pode acontecer de cair no c00 e limpar as variaveis cd_procedimento_w  e ie_origem_proced_w
						select	max(a.cd_procedimento),
							max(a.ie_origem_proced),
							max(b.ie_classificacao),
							max(b.cd_procedimento),
							substr(obter_desc_procedimento(max(a.cd_procedimento),max(a.ie_origem_proced)),1,80)
						into STRICT	cd_procedimento_w,
							ie_origem_proced_w,
							ie_classificacao_w,
							cd_servico_w,
							ds_servico_w
						from	pls_conta_proc a,
							procedimento b
						where	a.nr_sequencia = nr_seq_conta_proc_w
						and	b.cd_procedimento = a.cd_procedimento
						and	b.ie_origem_proced = a.ie_origem_proced;

						if (nr_seq_regra_pct_fat_w IS NOT NULL AND nr_seq_regra_pct_fat_w::text <> '') then
							ie_tipo_tabela_w := ptu_obter_tipo_tabela_int(ie_classificacao_w, 'P');
						end if;
					elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') and (nr_seq_regra_pct_fat_w IS NOT NULL AND nr_seq_regra_pct_fat_w::text <> '') then

						select	max(a.nr_seq_material),
							max(b.ie_tipo_despesa),
							max(b.nr_seq_material_unimed),
							max(b.cd_material_ops),
							max(b.ds_material),
							max(dt_atendimento)
						into STRICT	nr_seq_material_w,
							ie_tipo_despesa_pac_w,
							nr_seq_material_unimed_w,
							cd_material_w,
							ds_material_w,
							dt_atendimento_w
						from	pls_conta_mat a,
							pls_material b
						where	a.nr_sequencia = nr_seq_conta_mat_w
						and	b.nr_sequencia = a.nr_seq_material;

						if (ie_data_conv_mat_unimed_w	= 'DA') then
							SELECT * FROM pls_obter_mat_a900_vigente( nr_seq_material_w, clock_timestamp(), cd_material_a900_w, null) INTO STRICT  nr_seq_material_w, cd_material_a900_w;
						else
							SELECT * FROM pls_obter_mat_a900_vigente( nr_seq_material_w, coalesce(dt_atendimento_w,clock_timestamp()), cd_material_a900_w, null) INTO STRICT  nr_seq_material_w, cd_material_a900_w;
						end if;

						if (nr_seq_material_unimed_w IS NOT NULL AND nr_seq_material_unimed_w::text <> '') then
							select	somente_numero(max(nr_registro_anvisa)),
								max(nm_material)
							into STRICT	nr_registro_anvisa_w,
								nm_material_w
							from	pls_material_unimed
							where	nr_sequencia = nr_seq_material_unimed_w;

						elsif (cd_material_a900_w IS NOT NULL AND cd_material_a900_w::text <> '') then
							select	somente_numero(max(nr_registro_anvisa)),
								max(nm_material)
							into STRICT	nr_registro_anvisa_w,
								nm_material_w
							from	pls_material_unimed
							where	cd_material = cd_material_a900_w;
						end if;

						cd_servico_w	:= obter_somente_numero(substr(coalesce(cd_material_a900_w,cd_material_w),1,15));
						ds_servico_w	:= substr(coalesce(nm_material_w,ds_material_w),1,80);

						if (coalesce(trim(both nr_registro_anvisa_w), 0) = 0) then
							nr_registro_anvisa_w := null;
						end if;

						ie_tipo_tabela_w := ptu_obter_tipo_tabela_int(ie_tipo_despesa_pac_w, 'M');
					end if;

					insert into pls_conta_pos_pac_fat(	nr_sequencia, 				dt_atualizacao, 	nm_usuario,
										dt_atualizacao_nrec, 			nm_usuario_nrec, 	nr_seq_conta_pos,
										nr_seq_pacote_agrup, 			cd_procedimento, 	ie_origem_proced,
										ie_tipo_tabela, 			nr_registro_anvisa, 	vl_procedimento,
										vl_adic_procedimento, 			nr_seq_material, 	nr_seq_pacote_proc,
										nr_seq_pacote_mat, 			qt_procedimento, 	cd_servico,
										ds_servico, 				nr_seq_pacote,		nr_seq_pos_proc,
										nr_seq_pos_mat,				vl_adic_co,		vl_custo_operacional,
										vl_adic_filme,				vl_filme)
								values (	nextval('pls_conta_pos_pac_fat_seq'), 	clock_timestamp(), 		nm_usuario_p,
										clock_timestamp(), 				nm_usuario_p, 		r_C01_w.nr_seq_conta_pos,
										null, 					cd_procedimento_w, 	ie_origem_proced_w,
										ie_tipo_tabela_w, 			nr_registro_anvisa_w, vl_servico_w,
										vl_administracao_w, 			nr_seq_material_w, 	null,
										null, 					qt_item_w, 		cd_servico_w,
										ds_servico_w, 				nr_seq_pacote_w,	r_C01_w.nr_seq_pos_proc,
										r_c01_w.nr_seq_pos_mat,			0,			0,
										0,					0) returning nr_sequencia into nr_seq_conta_pac_fat_a500_w;
					-- contagem necessaria, para saber se vai utilizar os valores detalhados do item pos original
					qt_itens_w := qt_itens_w + 1;
				end if;

				-- Caso tenha valores negativos
				qt_registro_w := 0;
				if (r_C01_w.nr_seq_conta_pos IS NOT NULL AND r_C01_w.nr_seq_conta_pos::text <> '') then
					select	count(1)
					into STRICT	qt_registro_w
					from	pls_conta_pos_pac_fat
					where	nr_seq_conta_pos	= r_C01_w.nr_seq_conta_pos
					and	vl_procedimento		< 0;

					if (qt_registro_w > 0) then
						select	sum(vl_procedimento),
							sum(vl_adic_procedimento),
							max(nr_sequencia)
						into STRICT	vl_servico_w,
							vl_administracao_w,
							nr_seq_conta_pac_fat_a500_w
						from	pls_conta_pos_pac_fat
						where	nr_seq_conta_pos	= r_C01_w.nr_seq_conta_pos;

						if (nr_seq_conta_pac_fat_a500_w IS NOT NULL AND nr_seq_conta_pac_fat_a500_w::text <> '') then
							delete	FROM pls_conta_pos_pac_fat
							where	nr_seq_conta_pos	= r_C01_w.nr_seq_conta_pos
							and	nr_sequencia		!= nr_seq_conta_pac_fat_a500_w;

							update	pls_conta_pos_pac_fat
							set	vl_procedimento		= vl_servico_w,
								vl_adic_procedimento	= vl_administracao_w
							where	nr_sequencia		= nr_seq_conta_pac_fat_a500_w;
						end if;
					end if;

				elsif (r_C01_w.nr_seq_pos_proc IS NOT NULL AND r_C01_w.nr_seq_pos_proc::text <> '') then
					select	count(1)
					into STRICT	qt_registro_w
					from	pls_conta_pos_pac_fat
					where	nr_seq_pos_proc	= r_C01_w.nr_seq_pos_proc
					and	vl_procedimento		< 0;

					if (qt_registro_w > 0) then
						select	sum(vl_procedimento),
							sum(vl_adic_procedimento),
							max(nr_sequencia)
						into STRICT	vl_servico_w,
							vl_administracao_w,
							nr_seq_conta_pac_fat_a500_w
						from	pls_conta_pos_pac_fat
						where	nr_seq_pos_proc	= r_C01_w.nr_seq_pos_proc;

						if (nr_seq_conta_pac_fat_a500_w IS NOT NULL AND nr_seq_conta_pac_fat_a500_w::text <> '') then
							delete	FROM pls_conta_pos_pac_fat
							where	nr_seq_pos_proc	= r_C01_w.nr_seq_pos_proc
							and	nr_sequencia	!= nr_seq_conta_pac_fat_a500_w;

							update	pls_conta_pos_pac_fat
							set	vl_procedimento		= vl_servico_w,
								vl_adic_procedimento	= vl_administracao_w
							where	nr_sequencia		= nr_seq_conta_pac_fat_a500_w;
						end if;
					end if;

				elsif (r_C01_w.nr_seq_pos_mat IS NOT NULL AND r_C01_w.nr_seq_pos_mat::text <> '') then
					select	count(1)
					into STRICT	qt_registro_w
					from	pls_conta_pos_pac_fat
					where	nr_seq_pos_mat	= r_C01_w.nr_seq_pos_mat
					and	vl_procedimento		< 0;

					if (qt_registro_w > 0) then
						select	sum(vl_procedimento),
							sum(vl_adic_procedimento),
							max(nr_sequencia)
						into STRICT	vl_servico_w,
							vl_administracao_w,
							nr_seq_conta_pac_fat_a500_w
						from	pls_conta_pos_pac_fat
						where	nr_seq_pos_mat	= r_C01_w.nr_seq_pos_mat;

						if (nr_seq_conta_pac_fat_a500_w IS NOT NULL AND nr_seq_conta_pac_fat_a500_w::text <> '') then
							delete	FROM pls_conta_pos_pac_fat
							where	nr_seq_pos_mat	= r_C01_w.nr_seq_pos_mat
							and	nr_sequencia	!= nr_seq_conta_pac_fat_a500_w;

							update	pls_conta_pos_pac_fat
							set	vl_procedimento		= vl_servico_w,
								vl_adic_procedimento	= vl_administracao_w
							where	nr_sequencia		= nr_seq_conta_pac_fat_a500_w;
						end if;
					end if;
				end if;
			end if;
		
			-- E verificado a quantidade de itens gerados para o item de pos

			-- Quando for considerado apenas 1 item, quer dizer que o item em si foi um pacote aberto e lancado os seus itens no pos

			-- neste caso, e mantido o detalhamento dos valores. Apenas quando possuir mais de um (ou nao ter gerado nenhum item), sera mantido o zero (ja tratado no insert)

			-- no detalhamento dos valores. 
			if (qt_itens_w = 1) then
			
				if (r_C01_w.nr_seq_conta_pos IS NOT NULL AND r_C01_w.nr_seq_conta_pos::text <> '') then
				
					update	pls_conta_pos_pac_fat
					set	vl_adic_co 		= vl_adic_co_w,
						vl_custo_operacional	= vl_custo_operacional_w,
						vl_adic_filme		= vl_adic_filme_w,
						vl_filme		= vl_filme_w,
						vl_procedimento		= vl_medico_w,
						vl_adic_procedimento	= vl_adic_procedimento_pct_w,
						qt_procedimento		= qt_procedimento_pct_w
					where	nr_seq_conta_pos	= r_C01_w.nr_seq_conta_pos;
					
				elsif (r_C01_w.nr_seq_pos_proc IS NOT NULL AND r_C01_w.nr_seq_pos_proc::text <> '') then
				
					update	pls_conta_pos_pac_fat
					set	vl_adic_co 		= vl_adic_co_w,
						vl_custo_operacional	= vl_custo_operacional_w,
						vl_adic_filme		= vl_adic_filme_w,
						vl_filme		= vl_filme_w,
						vl_procedimento		= vl_medico_w,
						vl_adic_procedimento	= vl_adic_procedimento_pct_w,
						qt_procedimento		= qt_procedimento_pct_w
					where	nr_seq_pos_proc		= r_c01_w.nr_seq_pos_proc;
					
				elsif (r_C01_w.nr_seq_pos_mat IS NOT NULL AND r_C01_w.nr_seq_pos_mat::text <> '') then
				
					update	pls_conta_pos_pac_fat
					set	vl_adic_co 		= vl_adic_co_w,
						vl_custo_operacional	= vl_custo_operacional_w,
						vl_adic_filme		= vl_adic_filme_w,
						vl_filme		= vl_filme_w,
						vl_procedimento		= vl_medico_w,
						vl_adic_procedimento	= vl_adic_procedimento_pct_w,
						qt_procedimento		= qt_procedimento_pct_w
					where	nr_seq_pos_mat		= r_c01_w.nr_seq_pos_mat;
				end if;
			end if;
		end if;		
		
		-- se data de autorizacao for nula ou posterior a 01/10/2020, versao for maior ou igual a PTU 11.3
		if ((coalesce(dt_autorizacao_w::text, '') = '') or (dt_autorizacao_w >= dt_ref_ptu_11_3_w)) and ie_versao_w >= 113 then
		
			-- devera inserir na tabela pls_conta_pos_pac_fat apenas se for OPME ou HM
			for r_C02_w in C02(	nr_seq_prestador_exec_w,
						ie_tipo_guia_w,
						nr_seq_pacote_w,
						nr_seq_composicao_w,
						dt_atual_w,
						nr_seq_regra_pct_fat_w,
						cd_procedimento_w,
						ie_origem_proced_w,
						nr_seq_material_w) loop

				nr_seq_regra_agrup_w  	:= null;
				cd_procedimento_w       := null;
				ie_origem_proced_w      := null;
				ie_tipo_tabela_w        := null;
				nr_registro_anvisa_w    := null;
				nr_seq_material_w       := null;
				qt_registro_w           := 0;
				ie_gerar_a500_w         := 'N';
				cd_material_w           := null;
				cd_proc_conv_w          := null;
				ie_origem_proced_conv_w := null;
				nr_seq_regra_conv_w     := null;
				ie_somente_codigo_w     := null;
				ie_tipo_tabela_conv_w   := null;
				nr_seq_regra_conv_mat_w := null;
				cd_proc_conv_w          := null;
				ie_origem_proced_conv_w := null;
				cd_servico_conv_w       := null;
				nr_seq_material_conv_w  := null;
				ds_servico_conv_w       := null;
				cd_servico_w            := null;
				ds_servico_w            := null;
				nm_material_w           := null;
				ie_tipo_despesa_pac_w	:= 0;

				if (r_C02_w.ie_tipo = 'P') then
					cd_procedimento_w  := r_C02_w.cd_procedimento_pac;
					ie_origem_proced_w := r_C02_w.ie_origem_proced_pac;

					select 	ie_classificacao,
						cd_procedimento,
						substr(obter_desc_procedimento(cd_procedimento,ie_origem_proced),1,80)
					into STRICT 	ie_classificacao_w,
						cd_servico_w, 
						ds_servico_w
					from 	procedimento
					where 	cd_procedimento = cd_procedimento_w
					and 	ie_origem_proced = ie_origem_proced_w;

					ie_tipo_tabela_w := ptu_obter_tipo_tabela_int(ie_classificacao_w,'P');

				elsif (r_C02_w.ie_tipo = 'M') then
					select 	max(ie_tipo_despesa),
						max(cd_material_a900),
						max(nr_seq_material_unimed),
						max(cd_material_ops),
						max(ds_material)
					into STRICT 	ie_tipo_despesa_pac_w,
						cd_material_a900_w,
						nr_seq_material_unimed_w,
						cd_material_w,
						ds_material_w
					from 	pls_material
					where 	nr_sequencia = r_C02_w.nr_seq_material;

					if (nr_seq_material_unimed_w IS NOT NULL AND nr_seq_material_unimed_w::text <> '') then
						select somente_numero(max(nr_registro_anvisa)),
							max(nm_material)
						into STRICT 	nr_registro_anvisa_w,
							nm_material_w
						from 	pls_material_unimed
						where 	nr_sequencia = nr_seq_material_unimed_w;

					elsif (cd_material_a900_w IS NOT NULL AND cd_material_a900_w::text <> '') then
						select 	somente_numero(max(nr_registro_anvisa)),
							max(nm_material)
						into STRICT 	nr_registro_anvisa_w,
							nm_material_w
						from 	pls_material_unimed
						where 	cd_material = cd_material_a900_w;
					end if;

					if (coalesce(trim(both nr_registro_anvisa_w), 0) = 0) then
						nr_registro_anvisa_w := null;
					end if;

					ie_tipo_tabela_w := ptu_obter_tipo_tabela_int(ie_tipo_despesa_pac_w,'M');

					if (ie_gerar_a500_w = 'N') and (nr_seq_regra_agrup_w IS NOT NULL AND nr_seq_regra_agrup_w::text <> '') then
						select 	max(cd_procedimento),
							max(substr(obter_desc_procedimento(cd_procedimento,ie_origem_proced),1,	80))
						into STRICT 	cd_servico_w,
							ds_servico_w
						from 	procedimento
						where 	cd_procedimento = cd_procedimento_w
						and 	ie_origem_proced = ie_origem_proced_w;
					end if;
				end if;

				-- verifica se tem regra e se e para utilizar a descricao do pacote original, ao inves da descricao do agrupamento
				if (nr_seq_regra_agrup_w IS NOT NULL AND nr_seq_regra_agrup_w::text <> '') and (ie_desc_pac_origem_w = 'S') and (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '') then
					select 	max(substr(obter_desc_procedimento(a.cd_procedimento,a.ie_origem_proced),1,80))
					into STRICT 	ds_servico_w
					from 	pls_pacote a
					where 	a.nr_sequencia = nr_seq_pacote_w;
				end if;

				if (r_C01_w.nr_seq_conta_pos IS NOT NULL AND r_C01_w.nr_seq_conta_pos::text <> '') then
					select 	max(nr_sequencia)
					into STRICT 	nr_seq_conta_pos_pac_fat_w
					from 	pls_conta_pos_pac_fat
					where 	nr_seq_pacote_agrup = nr_seq_regra_agrup_w
					and 	nr_seq_conta_pos = r_C01_w.nr_seq_conta_pos;

				elsif (r_C01_w.nr_seq_pos_proc IS NOT NULL AND r_C01_w.nr_seq_pos_proc::text <> '') then
					select 	max(nr_sequencia)
					into STRICT 	nr_seq_conta_pos_pac_fat_w
					from 	pls_conta_pos_pac_fat
					where 	nr_seq_pacote_agrup = nr_seq_regra_agrup_w
					and 	nr_seq_pos_proc = r_c01_w.nr_seq_pos_proc;

				elsif (r_C01_w.nr_seq_pos_mat IS NOT NULL AND r_C01_w.nr_seq_pos_mat::text <> '') then
					select 	max(nr_sequencia)
					into STRICT 	nr_seq_conta_pos_pac_fat_w
					from 	pls_conta_pos_pac_fat
					where 	nr_seq_pacote_agrup = nr_seq_regra_agrup_w
					and 	nr_seq_pos_mat = r_c01_w.nr_seq_pos_mat;
				end if;

				if (r_C02_w.ie_tipo = 'P') then
					-- Define a descricao do servico com o codigo original do procedimento
					select 	substr(max(ds_procedimento), 1, 80)
						into STRICT ds_servico_w
					from 	procedimento
					where 	cd_procedimento = cd_procedimento_w
					and 	ie_origem_proced = ie_origem_proced_w;

					-- Define o codigo do servico com o codigo de conversao, caso nao tenha encontrado continua com o valor original
					cd_servico_w := coalesce(cd_proc_conv_w, cd_servico_w);

					-- Se encontrou regra de conversao e esta setado para nao converter apenas o codigo entao pega a descricao do procedimento na regra
					if (nr_seq_regra_conv_w IS NOT NULL AND nr_seq_regra_conv_w::text <> '') and (coalesce(ie_somente_codigo_w, 'N') = 'N') then
						select 	substr(ds_proc_envio, 1, 80)
						into STRICT 	ds_servico_w
						from 	pls_conversao_proc
						where 	nr_sequencia = nr_seq_regra_conv_w;
					end if;
			
				elsif (r_C02_w.ie_tipo = 'M') then
					nr_seq_material_w := r_C02_w.Nr_Seq_Material;
					cd_servico_w      := cd_material_w;
					ds_servico_w      := substr(ds_material_w,1,80);
				end if;

				-- OS 1366912 - jtonon - O decode abaixo realiza uma multiplicacao no caso do 'nr_seq_regra_agrup_w' estar nulo, porem, pelo que entendi do processo quando o 'ie_gerar_a500_w' vier como 'S' essa multiplicacao nao deve ser realizada

				-- decode(nvl(nr_seq_regra_agrup_w, 0), 0,(nvl(r_C02_w.qt_item,1) * qt_item_w),qt_item_w)

				-- Havia uma conta com 2 itens, onde no pos tambem foi gerado com quantidade 2, porem na 'pls_conta_pos_pac_fat' estava gerando com quantidade 4, visto que o sitema estava multiplicando a quantidade do pos com a quantidade definida na composicao do pacote

				-- Removido do if abaixo o and (ie_gerar_a500_w = 'N') , pois quando nao pegar regra de agrupamento, entende-se que deve gerar a quantidade baseada a composicao do pacote, e na qusntidade de pacotes. Alteracao feita na OS 1175617 da litoral
				if (coalesce(nr_seq_regra_agrup_w::text, '') = '') then
					qt_item_ww := coalesce(r_C02_w.qt_item, 1) * qt_item_w;
				else
					qt_item_ww := qt_item_w;
				end if;

				ie_insere_w := 'S';
				-- se for item de HM, se for OPME ou se for o proprio pacote
				if r_C02_w.ie_contem_hm = 'S' or ie_tipo_despesa_pac_w = 7 then
					qt_pac := 0;
					select count(1)
					into STRICT 	qt_pac
					from 	pls_conta_pos_pac_fat pc
					where 	pc.cd_procedimento = cd_procedimento_w
					and 	nr_seq_conta_pos = r_C01_w.nr_seq_conta_pos;
					
					if qt_pac = 0 then
						insert into 	pls_conta_pos_pac_fat(nr_sequencia,	dt_atualizacao,	nm_usuario,	dt_atualizacao_nrec,	nm_usuario_nrec,
							nr_seq_conta_pos,	nr_seq_pacote_agrup,	cd_procedimento,	ie_origem_proced,
							ie_tipo_tabela,		nr_registro_anvisa,	vl_procedimento,	vl_adic_procedimento,
							nr_seq_material,	nr_seq_pacote_proc,	nr_seq_pacote_mat,	cd_servico,
							qt_procedimento,	ds_servico,		nr_seq_pacote,		nr_seq_pos_proc,
							nr_seq_pos_mat,		vl_adic_co,		vl_custo_operacional,	vl_adic_filme,
							vl_filme)
						values (nextval('pls_conta_pos_pac_fat_seq'),	clock_timestamp(),	nm_usuario_p,	clock_timestamp(),
							nm_usuario_p,	r_C01_w.nr_seq_conta_pos,	nr_seq_regra_agrup_w,	cd_procedimento_w,
							ie_origem_proced_w,	ie_tipo_tabela_w,	nr_registro_anvisa_w,	0,
							0,	nr_seq_material_w,	r_C02_w.nr_seq_pacote_proc,	r_C02_w.nr_seq_pacote_mat,	substr(cd_servico_w, 1, 8),
							qt_item_ww,	substr(ds_servico_w, 1, 80),	nr_seq_pacote_w,	r_C01_w.nr_seq_pos_proc,	r_c01_w.nr_seq_pos_mat,
							0,	0,	0,	0)
						
						returning nr_sequencia into nr_seq_conta_pos_pac_fat_w;
						-- contagem necessaria, para saber se vai utilizar os valores detalhados do item pos original
						qt_itens_w := qt_itens_w + 1;
					end if;
				end if;
			end loop;
		end if;
	end if;
end loop;

if (coalesce(ie_commit_p, 'N') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_conta_pos_pac_fat ( nr_seq_pls_fatura_p pls_fatura.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, ie_commit_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

