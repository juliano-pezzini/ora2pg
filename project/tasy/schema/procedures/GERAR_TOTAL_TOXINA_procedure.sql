-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE colunas AS (cd_material_w		integer,
			cd_unidade_medida_w 	varchar(30),
			qt_dose_w		double precision,
			nr_seq_fabric_w		bigint,
			qt_frasco_disp_w		double precision,
			qt_perda_fornec_w		double precision,
			qt_dispensar_w			double precision);


CREATE OR REPLACE PROCEDURE gerar_total_toxina ( nr_seq_atendimento_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE



/* vetor */

TYPE vetor IS TABLE OF colunas INDEX BY integer;


vetor_w			vetor;
vetor_aux_w		vetor;
vetor_Dispensar_w	vetor;
cd_convenio_w		bigint;
vetor_fornecedor_w		vetor;
dt_atualizacao_w    	   	timestamp := clock_timestamp();
dt_referencia_w		timestamp;
nr_prescricao_w		bigint;
nr_prescricao_ww		bigint;
cd_material_w              	integer;
cd_material_regra_w	integer;
ie_gerar_solucao_w		varchar(3);
ie_utiliza_intervalo_w		varchar(3);
ie_arredondar_etapas_w		varchar(3);
cd_unid_med_prescr_w       	varchar(30);
qt_dose_prescricao_w       	double precision;
qt_unitaria_w   		double precision;
qt_total_dispensar_w	double precision;
qt_conversao_dose_w	double precision;
ds_orientacao_uso_w        	varchar(255);
ds_recomendacao_w	varchar(4000);
ie_via_aplicacao_w         	varchar(5);
ie_vincula_atend_w		varchar(5);
ie_consiste_ciclo_w		varchar(5);
ie_gerar_diluicao_w		varchar(5);
ie_define_disp_w		varchar(5);
nr_seq_material_w		bigint;
nr_seq_diluicao_w		bigint;
nr_seq_material_rec_w	bigint;
nr_seq_fabric_w		bigint;
nr_agrupamento_w		double precision;
nr_agrupamento_ant_w	double precision := -1;
cd_unid_med_consumo_w	varchar(30);
cd_intervalo_w             	varchar(7);
qt_minimo_multiplo_solic_w	double precision;
ie_origem_inf_w		varchar(1);
qt_min_aplicacao_w	smallint;
qt_hora_aplicacao_w	smallint;
ie_bomba_infusao_w	varchar(1);
cd_intervalo_ww		varchar(7);
nr_ocorrencia_w		double precision;
nr_ocorrencia_ww	double precision;
ie_gerar_horarios   varchar(1);
ds_horarios_w		varchar(2000);
ds_horarios2_w		varchar(2000);
cd_protocolo_w		bigint;
nr_seq_medicacao_w	integer;

nr_seq_dieta_w		integer;
nr_seq_dieta_novo_w	integer;
nr_seq_dieta_prot_w	integer;
cd_dieta_w		bigint;
ie_destino_dieta_w		varchar(2);
ie_refeicao_w		varchar(3);
ds_horarios_dieta_w	varchar(2000);
ds_observacao_dieta_w	varchar(255);
dt_primeiro_horario_w	timestamp;
dt_prescricao_w		timestamp;
dt_inicio_prescr_w	timestamp;
dt_prescricao_ww		timestamp;
dt_entrada_w		timestamp;
ie_liberado_w		varchar(1);
ie_atendimento_w		varchar(1);
nr_atendimento_w		bigint;
nr_atendimento_ww		bigint;
cd_pessoa_fisica_w	varchar(10);
cd_pessoa_fisica_ww	varchar(10);
cd_pessoa_usuario_w	varchar(10);
qt_dias_util_w		smallint;
qt_dias_util_ww		smallint;
nr_seq_interno_w		bigint;
nr_sequencia_w		integer;
qt_material_w		double precision;
ds_dose_diferenciada_w	varchar(50);
cd_unidade_medida_dose_w	varchar(30);
ds_erro_w		varchar(255);
ie_se_necessario_w	varchar(1);
ie_urgencia_w            	varchar(1);
ie_aplic_bolus_w         	varchar(1);
ie_aplic_lenta_w         	varchar(1);
ie_regra_disp_w		varchar(1);/* rafael em 15/3/8 os86206 */
ds_observacao_w		varchar(255);
ie_gerar_prescricao_sem_data_w	varchar(1);
cd_fornec_consignado_w	varchar(14);
ie_consignado_w		varchar(1);
cd_fornecedor_w		varchar(14);
qt_estoque_consig_w	varchar(14);
ie_gerar_data_atual_w	varchar(1);
ie_gerar_lib_enf_w		varchar(1);
ie_tipo_material_w		varchar(14);
nr_seq_ficha_tecnica_w	bigint;
qt_dose_prescr_aux_w	double precision;
qt_dose_total_prescr_w	double precision;
qt_dose_regra_w		double precision;
qt_dose_total_aux_w	double precision;
qt_dose_total_aux_ww	double precision;
cont_w			bigint;
qt_registros_vetor_w	bigint;
qt_controle_w		bigint := 0;
qt_controle_ww		bigint := 0;
qt_controle_www		bigint := 0;
qt_controle_wwww		bigint := 0;
qt_perda_w		double precision;
qt_perda_2w		double precision;
qt_desconto_w		double precision;
qt_a_lancar_w		double precision;
qt_perda_final_w		double precision;
qt_perda_final_2w		double precision;
pr_desconto_w		double precision;
qt_mat_vetor_w		double precision;
x			bigint := 0;
i			bigint := 0;
k			bigint := 0;
y			bigint := 0;
cd_mat_vetor_w		bigint;
ie_reg_w			bigint;
nr_seq_medic_w		bigint;
nr_seq_proc_w		bigint;
cd_unidade_medida_consumo_w	varchar(30);
nr_seq_via_acesso_w	bigint;
ds_prim_horario_w		varchar(5);
ie_fabricante_w		varchar(5);
nr_seq_fabric_melhor_w	bigint;
qt_fornec_w		bigint;
qt_menor_perda_w		double precision;
qt_menor_frasco_w		double precision;
qt_frasco_perda_zero_w		double precision;
qt_frasco_disp_w		bigint;
ie_posicao_ultimo_w	bigint;
qt_minutos_adic_w		bigint;
cd_subgrupo_param_w	bigint;
ie_item_superior_w		varchar(10);
erro_w				varchar(2000);
cd_classe_w		bigint;
cd_subgrupo_w		bigint;
qt_medic_w		bigint;
qt_fornecedores_w	bigint;
qt_ab_w			bigint;
qt_minutos_prev_w	bigint;
dt_prevista_w		timestamp;
qt_minutos_real_w	bigint;
dt_real_w		timestamp;
nr_seq_paciente_w		bigint;
qt_reg_w		bigint;
ie_utliza_dt_atual_prescr_w	varchar(1);
ie_pre_medicacao_w		varchar(10);
ie_pre_medic_sol_w	varchar(10);
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_procedimento_ww	bigint;
ie_origem_proced_ww	bigint;
nr_seq_proc_interno_w	bigint;
qt_procedimento_w	double precision;
ie_lado_w		varchar(10);
nr_seq_procedimento_w	integer;
nr_seq_solucao_w	bigint;
nr_seq_solucao_ww	bigint;
ie_tipo_dosagem_w	varchar(3);
qt_dosagem_w		double precision;
qt_solucao_total_w 	double precision;
qt_tempo_aplicacao_w	double precision;
nr_etapas_w		smallint;
nr_etapas_ww		smallint;
--ie_bomba_infusao_w	varchar2(1);
ie_esquema_alternado_w	varchar(1);
ie_calc_aut_w 		varchar(1);
ie_acm_w		varchar(1);
qt_hora_fase_w		double precision;
ds_solucao_w		varchar(100);
ds_orientacao_w		varchar(255);
--ie_se_necessario_w	varchar2(1);
ie_solucao_pca_w	varchar(1);
ie_tipo_analgesia_w	varchar(15);
ie_pca_modo_prog_w 	varchar(15);
qt_dose_inicial_pca_w	double precision;
qt_vol_infusao_pca_w	double precision;
qt_bolus_pca_w		double precision;
qt_intervalo_bloqueio_w	double precision;
qt_limite_quatro_hora_w	double precision;
qt_dose_ataque_w 	double precision;
ie_tipo_sol_w		varchar(5);
ie_agrupamento_w	bigint;
ie_regra_prescr_onc_w		varchar(3);
ie_gerar_prescr_data_atual_w	varchar(1);
ie_gerar_prescr_data_atual_ww	varchar(1) := 'N';
nr_atendimento_atual_w		bigint;
ie_agrupador_oncologia_w	smallint;
ie_gerar_reconst_w		varchar(1);
ie_atualiza_data_real_w		varchar(1);
--QT_SOLUCAO_TOTAL_w		number(15,4);
dt_fim_conta_w		timestamp;
ie_medico_w		varchar(10);
ie_setor_atendimento_padrao_w integer;
ie_prescricao_w		varchar(1);
ie_regra_w		varchar(15);
cd_medicamento_w	integer;
nr_atendimento_www	bigint;
nr_seq_atendimento_w	bigint;
nr_seq_acesso_w		bigint;
ie_agrupador_w		bigint;
qt_conversao_w		double precision;
qt_dose_w		double precision;
nr_seq_presc_material_w bigint;
ie_gera_melhor_apres_w	varchar(1);
ie_gera_prescr_dia_ant_w 	varchar(1);
ie_qtdade_ciclo_ant_w	integer;
ds_dia_ciclo_w		varchar(5);
nr_ciclo_w		integer;
ie_achou_w		boolean;
nr_seq_atendimento_aux_w	bigint;
nr_prescricao_aux_w		bigint;
dt_prev_execucao_w		timestamp;
cd_recomendacao_w		bigint;
cd_kit_w			bigint;
nr_seq_classif_w		bigint;
ie_diluicao_solucao_w	varchar(10);
nr_seq_prot_med_w		bigint;
ds_rotina_w			varchar(100);
nr_seq_ordem_adep_w		bigint;
dt_obito_w			timestamp;
ie_liberar_para_agend_w		varchar(1);
NR_SEQ_TOXINA_W			bigint;
cont_disp_w				bigint	:=0;





C01 CURSOR FOR
	SELECT	nr_seq_toxina,
			sum(coalesce(QT_DOSE_PRESCR,QT_DOSE)) qt_dose,
			CD_UNIDADE_MEDIDA
	from	ATEND_TOXINA_ITEM
	where	nr_seq_atendimento	= nr_seq_atendimento_p
	group by CD_UNIDADE_MEDIDA,nr_seq_toxina;


c02 CURSOR FOR
	SELECT	a.cd_material,
			obter_conversao_unid_med(b.cd_material, cd_unid_med_prescr_w) qt_dose,
			substr(obter_dados_material_estab(b.cd_material,cd_estabelecimento_p,'UME'),1,30) cd_unidade_medida_consumo
	from	TOXINA_BOTULINICA_ITEM a,
			material b
	where	a.nr_seq_toxina	= nr_seq_toxina_w
	and		b.cd_material	= a.cd_material
	order by qt_dose desc;


BEGIN

cont_w	:= 0;
open C01;
loop
fetch C01 into
	nr_seq_toxina_w,
	qt_dose_total_prescr_w,
	cd_unid_med_prescr_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	RAISE NOTICE '% %%', obter_desc_expressao(754131), ': '/*' Unidade medida prescrito: '*/, cd_unid_med_prescr_w;
	RAISE NOTICE '% %%', obter_desc_expressao(288275), ': '/*' Dose total: '*/, qt_dose_total_prescr_w;

	open C02;
	loop
	fetch C02 into
		cd_material_regra_w,
		qt_dose_regra_w,
		cd_unidade_medida_consumo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		vetor_w[cont_w].cd_material_w	:= cd_material_regra_w;
		vetor_w[cont_w].qt_dose_w	:= qt_dose_regra_w;
		vetor_w[cont_w].cd_unidade_medida_w := cd_unidade_medida_consumo_w;
		RAISE NOTICE ' cd_unidade_medida_consumo_w: %', cd_unidade_medida_consumo_w;
		RAISE NOTICE ' qt_dose_regra_w: %', qt_dose_regra_w;

		cont_w := cont_w + 1;


		end;
	end loop;
	close C02;

	pr_desconto_w	:= 0;

	qt_dose_total_aux_w	:= qt_dose_total_prescr_w;
		qt_desconto_w		:= ((pr_desconto_w * qt_dose_total_aux_w) / 100);
		ie_reg_w		:= 0;

		WHILE(qt_dose_total_aux_w	> 0) AND (qt_controle_w		< 1000) LOOP

			qt_registros_vetor_w	:= vetor_w.COUNT - 1;
			qt_controle_ww		:= 0;
			x			:= -1;

			WHILE(x < qt_registros_vetor_w) AND (qt_dose_total_aux_w	> 0) AND (qt_controle_ww		< 1000) LOOP

				x := x + 1;
				qt_controle_ww	:= qt_controle_ww + 1;

				IF	((qt_dose_total_aux_w - vetor_w[x].qt_dose_w) >= 0) THEN

					qt_dose_total_aux_w	:= (qt_dose_total_aux_w - vetor_w[x].qt_dose_w);
					vetor_aux_w[ie_reg_w].cd_material_w	:= vetor_w[x].cd_material_w;
					vetor_aux_w[ie_reg_w].qt_dose_w		:= vetor_w[x].qt_dose_w;
					vetor_aux_w[ie_reg_w].cd_unidade_medida_w := vetor_w[x].cd_unidade_medida_w;
					ie_reg_w	:= ie_reg_w + 1;
					x := -1;

				ELSIF (qt_dose_total_aux_w <= qt_desconto_w) THEN
					qt_dose_total_aux_w	:= 0;
				ELSIF (qt_registros_vetor_w = x) THEN

					qt_dose_total_aux_w	:= (qt_dose_total_aux_w - vetor_w[x].qt_dose_w);
					vetor_aux_w[ie_reg_w].cd_material_w	:= vetor_w[x].cd_material_w;
					vetor_aux_w[ie_reg_w].qt_dose_w	:= vetor_w[x].qt_dose_w;
					vetor_aux_w[ie_reg_w].cd_unidade_medida_w := vetor_w[x].cd_unidade_medida_w;
					ie_reg_w	:= ie_reg_w + 1;

				ELSIF	((qt_dose_total_aux_w - vetor_w[x].qt_dose_w) < 0) THEN
					qt_perda_w		:= (qt_dose_total_aux_w - vetor_w[x].qt_dose_w);
					qt_dose_total_aux_ww	:= qt_dose_total_aux_w;
					qt_perda_final_w	:= 0;
					qt_controle_wwww	:= 0;
					WHILE(qt_dose_total_aux_ww	> 0) AND (qt_controle_wwww	< 1000) LOOP

						qt_controle_www := 0;
						i 		:= -1;
						WHILE(i < qt_registros_vetor_w) AND (qt_dose_total_aux_ww	> 0) AND (qt_controle_www	< 1000) LOOP

							i	:= i + 1;
							qt_controle_www	:= qt_controle_www + 1;
							IF	((qt_dose_total_aux_ww - vetor_w[i].qt_dose_w) >= 0) THEN
								qt_perda_final_w	:= (qt_dose_total_aux_ww - vetor_w[i].qt_dose_w);
								qt_dose_total_aux_ww	:= (qt_dose_total_aux_ww - vetor_w[i].qt_dose_w);
								i := -1;
							ELSIF (qt_registros_vetor_w = i) THEN
								qt_perda_final_w	:= (qt_dose_total_aux_ww - vetor_w[i].qt_dose_w);
								qt_dose_total_aux_ww	:= (qt_dose_total_aux_ww - vetor_w[i].qt_dose_w);
							END IF;
						END LOOP;

						qt_controle_wwww := qt_controle_wwww + 1;

					END LOOP;

					qt_perda_2w		:= (qt_dose_total_aux_w - vetor_w[x].qt_dose_w);
					qt_dose_total_aux_ww	:= qt_dose_total_aux_w;
					qt_perda_final_2w	:= 0;
					qt_controle_wwww	:= 0;
					WHILE(qt_dose_total_aux_ww	> 0) AND (qt_controle_wwww	< 1000) LOOP

						qt_controle_www := 0;
						i 		:= -1;
						WHILE(i < qt_registros_vetor_w) AND (qt_dose_total_aux_ww	> 0) AND (qt_controle_www	< 1000) LOOP

							i	:= i + 1;
							qt_controle_www	:= qt_controle_www + 1;
							IF	((qt_dose_total_aux_ww - vetor_w[i].qt_dose_w) >= 0) THEN
								qt_perda_final_2w	:= (qt_dose_total_aux_ww - vetor_w[i].qt_dose_w);
								qt_dose_total_aux_ww	:= (qt_dose_total_aux_ww - vetor_w[i].qt_dose_w);
								i := -1;
							END IF;
						END LOOP;
						qt_controle_wwww := qt_controle_wwww + 1;
					END LOOP;

					IF (qt_dose_total_aux_ww < qt_desconto_w) THEN
						NULL;
					ELSIF (qt_perda_w >= qt_perda_final_w) THEN
						vetor_aux_w[ie_reg_w].cd_material_w	:= vetor_w[x].cd_material_w;
						vetor_aux_w[ie_reg_w].qt_dose_w		:= vetor_w[x].qt_dose_w;
						vetor_aux_w[ie_reg_w].cd_unidade_medida_w := vetor_w[x].cd_unidade_medida_w;
						ie_reg_w		:= ie_reg_w + 1;
						qt_dose_total_aux_w	:= 0;
					END IF;
				END IF;
			END LOOP;

			qt_controle_w	:= qt_controle_w + 1;
		END LOOP;

		k		:= -1;
		cd_mat_vetor_w	:= 0;
		qt_mat_vetor_w	:= 0;
		qt_a_lancar_w	:= qt_dose_total_prescr_w;
		ie_gerar_diluicao_w := 'S';


		WHILE(k < vetor_aux_w.COUNT - 1) LOOP
			k	:= k + 1;

			IF	((cd_mat_vetor_w = vetor_aux_w[k].cd_material_w) OR (cd_mat_vetor_w = 0)) AND (vetor_aux_w.COUNT > 1) THEN
				--(k <> (vetor_aux_w.count -1)) then
				qt_mat_vetor_w			:= qt_mat_vetor_w + vetor_aux_w[k].qt_dose_w;
				qt_unitaria_w			:= vetor_aux_w[k].qt_dose_w;
				cd_mat_vetor_w			:= vetor_aux_w[k].cd_material_w;
				qt_conversao_dose_w		:= vetor_aux_w[k].qt_dose_w;
				cd_unidade_medida_consumo_w 	:= vetor_aux_w[k].cd_unidade_medida_w;
			ELSE


				qt_a_lancar_w	:= (qt_a_lancar_w - qt_mat_vetor_w);

				IF (qt_a_lancar_w >= 0) THEN
					qt_total_dispensar_w := qt_a_lancar_w;
				ELSE
					qt_mat_vetor_w := (qt_mat_vetor_w - ABS(qt_a_lancar_w));
				END IF;

				qt_unitaria_w	:= dividir(qt_mat_vetor_w, qt_unitaria_w);


				IF (coalesce(cd_mat_vetor_w,0) = '0') THEN
					cd_mat_vetor_w	:= vetor_aux_w[k].cd_material_w;
				END IF;

				IF (qt_mat_vetor_w > 0) THEN

					vetor_Dispensar_w[cont_disp_w].cd_material_w	:= cd_mat_vetor_w;
					vetor_Dispensar_w[cont_disp_w].qt_dispensar_w	:= qt_unitaria_w;
					vetor_Dispensar_w[i].cd_unidade_medida_w		:= vetor_aux_w[k].cd_unidade_medida_w;
					cont_disp_w	:= cont_disp_w+1;



					--gerar_reconst_diluicao(nr_prescricao_w, nr_seq_medic_w, 'A');Caldas mandou comentar essa linha por estar duplicando
				END IF;

				ie_gerar_diluicao_w		:= 'N';
				cd_mat_vetor_w			:= vetor_aux_w[k].cd_material_w;
				qt_mat_vetor_w			:= vetor_aux_w[k].qt_dose_w;
				qt_unitaria_w			:= vetor_aux_w[k].qt_dose_w;
				qt_conversao_dose_w		:= vetor_aux_w[k].qt_dose_w;
				cd_unidade_medida_consumo_w 	:= vetor_aux_w[k].cd_unidade_medida_w;
				COMMIT;
			END IF;
		END LOOP;

		vetor_aux_w.DELETE;


		IF (coalesce(cd_mat_vetor_w,0) <> '0') THEN

			qt_a_lancar_w	:= (qt_a_lancar_w - qt_mat_vetor_w);
			IF (qt_a_lancar_w >= 0) THEN
				qt_total_dispensar_w := qt_a_lancar_w;
			ELSE
				qt_mat_vetor_w := (qt_mat_vetor_w - ABS(qt_a_lancar_w));
			END IF;

			qt_unitaria_w	:= ceil(dividir(qt_mat_vetor_w, qt_unitaria_w));
			vetor_Dispensar_w[cont_disp_w].cd_material_w	:= cd_mat_vetor_w;
			vetor_Dispensar_w[cont_disp_w].qt_dispensar_w	:= qt_unitaria_w;
			vetor_Dispensar_w[cont_disp_w].cd_unidade_medida_w	:= cd_unidade_medida_consumo_w;
			cont_disp_w	:= cont_disp_w+1;
		END IF;


	end;
end loop;
close C01;


delete from ATEND_TOXINA_DISP
where	NR_SEQ_ATENDIMENTO = nr_seq_atendimento_p;

for i in 0..vetor_Dispensar_w.count - 1 loop
	begin

	if (vetor_Dispensar_w[i]coalesce(.cd_unidade_medida_w::text, '') = '') then
		select	max(CD_UNIDADE_MEDIDA_CONSUMO)
		into STRICT	vetor_Dispensar_w[i].cd_unidade_medida_w
		from	material
		where	cd_material	= vetor_Dispensar_w[i].cd_material_w;
	end if;


	insert into atend_toxina_disp(
				 nr_sequencia,
				 cd_unidade_medida,
				 dt_atualizacao,
				 nm_usuario,
				 dt_atualizacao_nrec,
				 nm_usuario_nrec,
				 cd_material,
				 nr_seq_atendimento,
				 qt_material)
		values ( nextval('atend_toxina_disp_seq'),
				 vetor_Dispensar_w[i].cd_unidade_medida_w,
				 clock_timestamp(),
				 nm_usuario_p,
				 clock_timestamp(),
				 nm_usuario_p,
				vetor_Dispensar_w[i].cd_material_w,
				 nr_seq_atendimento_p,
				vetor_Dispensar_w[i].qt_dispensar_w);


	end;
end loop;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_total_toxina ( nr_seq_atendimento_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

