-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_unidade_atendimento ( cd_setor_atendimento_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text) AS $body$
DECLARE


dt_atualizacao_w			timestamp := clock_timestamp();
ie_sexo_fixo_w			varchar(1);
ie_status_unidade_w		varchar(3);
nr_atendimento_w			bigint;
cd_paciente_reserva_w		varchar(10);
ie_classe_acomodacao_w		varchar(1);
ie_sexo_paciente_w		varchar(1);
ie_sexo_paciente_atual_w	varchar(1);
nr_pac_fem_w			smallint;
nr_pac_Masc_w			smallint;
nr_Ind_Ambos_w			smallint;
nr_ind_Fem_w			smallint;
nr_Ind_Masc_w			smallint;
nr_Unidades_w			integer;
cd_classif_setor_w		varchar(02);
qt_w				    bigint;


BEGIN

select	max(a.ie_status_unidade),
	max(a.nr_atendimento),
	max(a.cd_paciente_reserva),
	max(a.ie_classe_acomodacao),
	max(a.ie_sexo_paciente),
	max(a.ie_sexo_fixo),
	max(b.cd_classif_setor)
into STRICT	ie_status_unidade_w,
	nr_atendimento_w,
	cd_paciente_reserva_w,
	ie_classe_acomodacao_w,
	ie_sexo_paciente_w,
	ie_sexo_fixo_w,
	cd_classif_setor_w
from 	Setor_Atendimento b,
	unidade_atendimento a
where  	a.cd_setor_atendimento 	= cd_setor_atendimento_p
  and  	a.cd_setor_atendimento 	= b.cd_setor_atendimento
  and	a.cd_unidade_basica	= cd_unidade_basica_p
  and	a.cd_unidade_compl	= cd_unidade_compl_p;

if (coalesce(ie_sexo_fixo_w, 'S') <> 'S') and (cd_classif_Setor_w in (3,4,8)) then
	begin
	
	ie_sexo_paciente_atual_w	:= 'L';
	nr_pac_fem_w			:= 0;
	nr_pac_Masc_w			:= 0;
	nr_ind_fem_w			:= 0;
	nr_ind_Masc_w			:= 0;
	nr_ind_Ambos_w			:= 0;
	if (coalesce(nr_atendimento_w,0) > 0) then
		select 	max(b.ie_sexo)
		into STRICT	ie_sexo_paciente_atual_w
		from pessoa_fisica b, atendimento_paciente a
		where a.cd_pessoa_fisica	= b.cd_pessoa_fisica
		  and a.nr_atendimento 		= nr_atendimento_w;
	elsif (cd_paciente_reserva_w IS NOT NULL AND cd_paciente_reserva_w::text <> '') then
		select coalesce(max(b.ie_sexo),'F')
		into STRICT	ie_sexo_paciente_atual_w
		from pessoa_fisica b
		where b.cd_pessoa_fisica	= cd_paciente_reserva_w;
	end if;	
		
	update unidade_atendimento
	   set ie_sexo_paciente 		= ie_sexo_paciente_atual_w
	where  	cd_setor_atendimento 	= cd_setor_atendimento_p
	  and	cd_unidade_basica		= cd_unidade_basica_p
	  and	cd_unidade_compl		= cd_unidade_compl_p
	  and	ie_situacao = 'A';
	
	if (ie_classe_acomodacao_w = 'C') then
		begin
		select	sum(CASE WHEN ie_sexo_paciente='F' THEN  1  ELSE 0 END ),
			sum(CASE WHEN ie_sexo_paciente='M' THEN  1  ELSE 0 END ),
			sum(CASE WHEN ie_sexo_paciente='A' THEN  1  ELSE 0 END ),
			sum(CASE WHEN ie_sexo_paciente='f' THEN  1  ELSE 0 END ),
			sum(CASE WHEN ie_sexo_paciente='m' THEN  1  ELSE 0 END ),
			count(*)
		into STRICT	nr_pac_fem_w,
			nr_pac_masc_w,
			nr_ind_ambos_w,
			nr_ind_fem_w,
			nr_ind_masc_w,
			nr_unidades_w
		from unidade_atendimento
		where	cd_setor_atendimento 	= cd_setor_atendimento_p
		  and	cd_unidade_basica		= cd_unidade_basica_p
		  and	ie_sexo_fixo		= 'N';
		exception
		when others then
			begin
			nr_pac_fem_w		:= 0;
			nr_pac_masc_w		:= 0;
			nr_ind_ambos_w		:= 0;
			nr_ind_fem_w		:= 0;
			nr_ind_masc_w		:= 0;
			nr_unidades_w		:= 0;
			end;
		end;
		if (nr_unidades_w <> 0) then
			if  ((nr_pac_fem_w + nr_pac_Masc_w) = 0) then
				update unidade_atendimento
				   set ie_sexo_paciente 	= 'L'
				where  	cd_setor_atendimento 	= cd_setor_atendimento_p
				  and	cd_unidade_basica	= cd_unidade_basica_p
				  and	((cd_unidade_compl	<> cd_unidade_compl_p) or (coalesce(nr_atendimento_w::text, '') = ''))
				  and 	ie_sexo_fixo		= 'N'
				  and	ie_situacao = 'A';
			elsif (nr_pac_fem_w <> 0) and (nr_pac_Masc_w = 0) then
				update unidade_atendimento
				   set ie_sexo_paciente 	= 'f'
				where  	cd_setor_atendimento 	= cd_setor_atendimento_p
				  and	cd_unidade_basica	= cd_unidade_basica_p
				  and	((cd_unidade_compl	<> cd_unidade_compl_p) or (coalesce(nr_atendimento_w::text, '') = ''))
				  and 	ie_status_unidade not in ('P','M')
				  and 	ie_sexo_fixo		= 'N'
				  and	ie_situacao = 'A';
			elsif (nr_pac_fem_w = 0) and (nr_pac_Masc_w <> 0) then	
				update unidade_atendimento
				   set ie_sexo_paciente 	= 'm'
				where  	cd_setor_atendimento 	= cd_setor_atendimento_p
				  and	cd_unidade_basica	= cd_unidade_basica_p
				  and	((cd_unidade_compl	<> cd_unidade_compl_p) or (coalesce(nr_atendimento_w::text, '') = ''))
				  and 	ie_status_unidade not in ('P','M')
				  and 	ie_sexo_fixo		= 'N'
				  and	ie_situacao = 'A';
			else
				update unidade_atendimento 
				   set ie_sexo_paciente 	= 'A'
				where  	cd_setor_atendimento 	= cd_setor_atendimento_p
				  and	cd_unidade_basica	= cd_unidade_basica_p
				  and	((cd_unidade_compl	<> cd_unidade_compl_p) or (coalesce(nr_atendimento_w::text, '') = ''))
				  and 	ie_status_unidade not in ('P','M')
				  and 	ie_sexo_fixo		= 'N'
				  and	ie_situacao = 'A';
			end if;
		end if;		
	end if;

	end;
end if;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_unidade_atendimento ( cd_setor_atendimento_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text) FROM PUBLIC;

