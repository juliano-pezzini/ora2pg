-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_atualizar_envio_derivado (nr_sequencias_p san_envio_derivado_val.DS_OBSERVACAO%TYPE, nr_sangues_p san_envio_derivado_val.DS_OBSERVACAO%type, nr_seq_envio_derivado_p san_envio_derivado_val.nr_sequencia%type, cd_estabelecimento_p tabela_atrib_regra.cd_estabelecimento%type, nm_usuario_p san_envio_derivado_val.nm_usuario_nrec%type) AS $body$
DECLARE
 	

nr_seq_lista_w		san_envio_derivado_val.DS_OBSERVACAO%type;
nr_pos_virgula_w	san_envio_derivado_val.nr_sequencia%type;	
nr_sequencia_w		san_envio_derivado_val.nr_sequencia%type;

nr_sang_lista_w		san_envio_derivado_val.DS_OBSERVACAO%type;
nr_pos_sang_virgula_w	san_envio_derivado_val.nr_sequencia%type;	
nr_sangue_w		 san_envio_derivado_val.NR_SANGUE%type;

cd_perfil_p perfil.cd_perfil%TYPE;
cd_setor_p setor_atendimento.cd_setor_atendimento%TYPE;
cd_funcao_p	funcao.cd_funcao%type;

DT_VALIDADE_W san_envio_derivado_val.DT_VALIDADE%TYPE := null;
QT_INTENSIDADE_W san_envio_derivado_val.QT_INTENSIDADE%type := null;
QT_MINUTO_W san_envio_derivado_val.QT_MINUTO%type := null;
QT_SEGUNDO_W san_envio_derivado_val.QT_SEGUNDO%type := null;
ds_lista_atrib_w dbms_sql.varchar2_table;
vl_default_w	tabela_atrib_regra.vl_default%type;
ds_script_w		tabela_atrib_regra.ds_script%type;
default_script_w		tabela_atrib_regra.vl_default%type;
parameter_var1_w       varchar(50);
parameter_var2_w       varchar(50);
modified_script_w      tabela_atrib_regra.ds_script%type;




BEGIN

if (nr_seq_envio_derivado_p IS NOT NULL AND nr_seq_envio_derivado_p::text <> '') then
	begin	
	
	update 	san_envio_derivado
	set	ie_status 	= 'A'
	where	nr_sequencia	= nr_seq_envio_derivado_p;

  ds_lista_atrib_w := obter_lista_string('DT_VALIDADE,QT_INTENSIDADE,QT_MINUTO,QT_SEGUNDO', ',');
	cd_perfil_p := coalesce(obter_perfil_ativo,0);
	cd_setor_p := coalesce(obter_setor_ativo,0);
	cd_funcao_p := coalesce(obter_funcao_ativa,0);

  for i in ds_lista_atrib_w.first..ds_lista_atrib_w.last loop
		BEGIN
			vl_default_w := NULL;
			select	max(vl_default),
					MAX(ds_script)
			into STRICT	vl_default_w,
					ds_script_w
			from	tabela_atrib_regra
			where	nm_tabela = 'SAN_ENVIO_DERIVADO_VAL'
			and	nm_atributo	= ds_lista_atrib_w(i)
			and coalesce(cd_estabelecimento,cd_estabelecimento_p) = cd_estabelecimento_p
			and	coalesce(cd_perfil, cd_perfil_p) = cd_perfil_p
			and	coalesce(cd_setor_atendimento, cd_setor_p) = cd_setor_p
			and	coalesce(cd_funcao, cd_funcao_p) = cd_funcao_p
			and	coalesce(nm_usuario_param, nm_usuario_p) = nm_usuario_p;
		
      default_script_w := NULL;
			IF (vl_default_w IS NOT NULL AND vl_default_w::text <> '') and (DS_SCRIPT_W IS NOT NULL AND DS_SCRIPT_W::text <> '') then
        default_script_w := vl_default_w;
      end if;
      IF (vl_default_w IS NOT NULL AND vl_default_w::text <> '') and (coalesce(DS_SCRIPT_W::text, '') = '') then
        default_script_w := vl_default_w;
      end if;
      IF (coalesce(vl_default_w::text, '') = '') and (DS_SCRIPT_W IS NOT NULL AND DS_SCRIPT_W::text <> '') then
        default_script_w := DS_SCRIPT_W;
      end if;
	
			IF (default_script_w IS NOT NULL AND default_script_w::text <> '') THEN
				IF (ds_lista_atrib_w(i) = 'DT_VALIDADE') THEN
                                        begin
                                                parameter_var1_w   := substr(default_script_w, position(':' in default_script_w), length(default_script_w));
                                                parameter_var2_w  := substr(parameter_var1_w, position(':' in parameter_var1_w), position(')' in parameter_var1_w)-1);

                                                nr_seq_lista_w	:= nr_sequencias_p;
                                                WHILE(nr_seq_lista_w IS NOT NULL AND nr_seq_lista_w::text <> '') LOOP
                                                BEGIN
                                                        nr_pos_virgula_w	:= position(',' in nr_seq_lista_w);
                                                        IF (nr_pos_virgula_w > 0)	THEN
                                                                BEGIN
                                                                        nr_sequencia_w	:= (substr(nr_seq_lista_w,1,nr_pos_virgula_w-1))::numeric;
                                                                        nr_seq_lista_w	:= substr(nr_seq_lista_w,nr_pos_virgula_w+1,length(nr_seq_lista_w));

                                                                        IF (parameter_var2_w = UPPER(':NR_SEQ_PRODUCAO')) THEN
                                                                        SELECT  REPLACE(default_script_w, parameter_var2_w, nr_sequencia_w)
                                                                        INTO STRICT    modified_script_w
;

                                                                        EXECUTE 'select (' || modified_script_w || ') from dual' INTO STRICT DT_VALIDADE_W;
                                                                        END IF;
                                                                END;
                                                        END IF;
                                                END;
                                                END LOOP;
					exception
					when SQLSTATE '50011' then
						DT_VALIDADE_W := null;
					end;
				ELSIF (is_number(default_script_w) = 1 AND ds_lista_atrib_w(i) = 'QT_INTENSIDADE') THEN	
					QT_INTENSIDADE_W := (default_script_w)::numeric;
				ELSIF (is_number(default_script_w) = 1 AND ds_lista_atrib_w(i) = 'QT_MINUTO') THEN	
					QT_MINUTO_W := (default_script_w)::numeric;
				ELSIF (is_number(default_script_w) = 1 AND ds_lista_atrib_w(i) = 'QT_SEGUNDO') THEN	
					QT_SEGUNDO_W := (default_script_w)::numeric;
				END IF;
			END IF;
		END;
	end loop;
	
	nr_seq_lista_w	:= nr_sequencias_p;
	nr_sang_lista_w	:= nr_sangues_p;
	while(nr_seq_lista_w IS NOT NULL AND nr_seq_lista_w::text <> '') loop
		begin
		nr_pos_virgula_w	:= position(',' in nr_seq_lista_w);
		if (nr_pos_virgula_w > 0)	then
			begin
			nr_sequencia_w	:= (substr(nr_seq_lista_w,1,nr_pos_virgula_w-1))::numeric;
			nr_seq_lista_w	:= substr(nr_seq_lista_w,nr_pos_virgula_w+1,length(nr_seq_lista_w));

      nr_sangue_w := NULL;
			if (nr_sang_lista_w IS NOT NULL AND nr_sang_lista_w::text <> '')	then
				nr_pos_sang_virgula_w	:= position(',' in nr_sang_lista_w);
				if (nr_pos_sang_virgula_w > 0)	then
					nr_sangue_w	:= substr(nr_sang_lista_w,1,nr_pos_sang_virgula_w-1);
					nr_sang_lista_w	:= substr(nr_sang_lista_w,nr_pos_sang_virgula_w+1,length(nr_sang_lista_w));
				end if;
			end if;

			if (nr_sequencia_w > 0) then
				begin	
	
				insert into san_envio_derivado_val(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,             
					dt_atualizacao_nrec,
					nm_usuario_nrec,        
					nr_seq_producao,        
					nr_seq_envio,
					ie_status,
					dt_envio,
					nm_usuario_envio,
					nr_sangue)
				values ( nextval('san_envio_derivado_val_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_sequencia_w,
					nr_seq_envio_derivado_p,
					'A',
					null,
					null,
					nr_sangue_w			
				);

				end;
			end if;
			end;
		else
			nr_seq_lista_w := null;
		end if;
		end;
	end loop;
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_atualizar_envio_derivado (nr_sequencias_p san_envio_derivado_val.DS_OBSERVACAO%TYPE, nr_sangues_p san_envio_derivado_val.DS_OBSERVACAO%type, nr_seq_envio_derivado_p san_envio_derivado_val.nr_sequencia%type, cd_estabelecimento_p tabela_atrib_regra.cd_estabelecimento%type, nm_usuario_p san_envio_derivado_val.nm_usuario_nrec%type) FROM PUBLIC;

