-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_cancelar_comissao ( nr_seq_comissao_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_lote_contabil_w		lote_contabil.nr_lote_contabil%type;
ie_status_origem_w		lote_contabil.ie_status_origem%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
ie_concil_contab_w		pls_visible_false.ie_concil_contab%type;
			
-- Campos do cursor 1
nr_seq_comis_benef_w		pls_comissao_beneficiario.nr_sequencia%type;

-- Campos do cursor 2
nr_titulo_w			titulo_pagar.nr_titulo%type;

-- Campos do cursor 3
nr_seq_tit_adiant_w		titulo_pagar_adiant.nr_sequencia%type;
nr_adiantamento_w		titulo_pagar_adiant.nr_adiantamento%type;
vl_adiantamento_w		titulo_pagar_adiant.vl_adiantamento%type;

C01 CURSOR FOR
	SELECT	c.nr_sequencia
	from	pls_comissao_beneficiario	c,
		pls_comissao			b,
		pls_lote_comissao		a
	where	a.nr_sequencia 		= b.nr_seq_lote
	and	b.nr_sequencia 		= c.nr_seq_comissao
	and	b.nr_sequencia		= nr_seq_comissao_p
	and	a.ie_tipo_repasse	= 'L';

C02 CURSOR FOR
	SELECT	nr_titulo
	from	pls_comissao_titulo
	where	nr_seq_comissao	= nr_seq_comissao_p
	and	(nr_titulo IS NOT NULL AND nr_titulo::text <> '');

C03 CURSOR FOR
	SELECT	nr_sequencia,
		nr_adiantamento,
		vl_adiantamento
	from	titulo_pagar_adiant
	where	nr_titulo = nr_titulo_w;


BEGIN

select	coalesce(max(nr_lote_contabil),0)
into STRICT	nr_lote_contabil_w
from (SELECT	i.nr_lote_contabil
	from	pls_comissao_benef_item		i,
		pls_comissao_beneficiario	b,
		pls_comissao			c
	where	b.nr_sequencia	= i.nr_seq_comissao_benef
	and	c.nr_sequencia	= b.nr_seq_comissao
	and	c.nr_sequencia	= nr_seq_comissao_p
	
union

	SELECT	r.nr_lote_contabil
	from	pls_repasse_lanc	r,
		pls_comissao		c
	where	c.nr_sequencia	= r.nr_seq_comissao
	and	c.nr_sequencia	= nr_seq_comissao_p) alias2;

if (nr_lote_contabil_w <> 0) then
	select	coalesce(max(ie_status_origem), 'M')
	into STRICT	ie_status_origem_w
	from	lote_contabil
	where	nr_lote_contabil = nr_lote_contabil_w;
	
	if (ie_status_origem_w <> 'SO') then
		/* Não é possível concluir a ação executada pois o lote contábil #@NR_LOTE_CONTABIL#@ está vinculado ao repasse!*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(458997, 'NR_LOTE_CONTABIL=' || nr_lote_contabil_w);
	end if;
end if;

cd_estabelecimento_w 	:= Obter_estab_usuario(nm_usuario_p);

select	max(ie_concil_contab)
into STRICT 	ie_concil_contab_w
from	pls_visible_false
where	cd_estabelecimento = cd_estabelecimento_w;

if (ie_concil_contab_w = 'S') then
	CALL pls_ctb_onl_gravar_movto_pck.gravar_movto_cancelar_comissao(nr_seq_comissao_p, cd_estabelecimento_w, nm_usuario_p);
end if;

open C01;
loop
fetch C01 into
	nr_seq_comis_benef_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	update	pls_repasse_mens
	set	nr_seq_comissao_benef  = NULL
	where	nr_seq_comissao_benef = nr_seq_comis_benef_w;
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	nr_titulo_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	open C03;
	loop
	fetch C03 into
		nr_seq_tit_adiant_w,
		nr_adiantamento_w,
		vl_adiantamento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		CALL atualiza_adiantamento_pago(nr_titulo_w, nr_adiantamento_w, vl_adiantamento_w, nr_seq_tit_adiant_w, nm_usuario_p, 'E');
		end;
	end loop;
	close C03;
	
	CALL cancelar_titulo_pagar(nr_titulo_w,nm_usuario_p,clock_timestamp());
	end;
end loop;
close C02;

update	pls_comissao
set	ie_cancelado		= 'S',
	dt_cancelamento		= clock_timestamp(),
	nm_usuario_cancel	= nm_usuario_p
where	nr_sequencia = nr_seq_comissao_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cancelar_comissao ( nr_seq_comissao_p bigint, nm_usuario_p text) FROM PUBLIC;

