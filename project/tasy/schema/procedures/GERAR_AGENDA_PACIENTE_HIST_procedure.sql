-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_agenda_paciente_hist ( cd_agenda_p bigint, nr_seq_agenda_p bigint, ie_historico_p text, nm_usuario_hist_p text, ds_historico_p text, cd_pessoa_hist_p text, nm_paciente_hist_p text, dt_agenda_hist_p timestamp, cd_perfil_p bigint, cd_motivo_alteracao_p bigint default null, ds_observacao_alteracao_p text default null, dt_agendamento_p timestamp default null) AS $body$
DECLARE


nr_seq_hist_w           bigint;
cd_tipo_agenda_w        bigint;
nr_seq_ageint_w         bigint;
dt_origem_w		timestamp;
ie_mesmo_dia_w		varchar(1) := 'N';

cd_protocolo_w  ageint_protocolo_atend.cd_protocolo%TYPE;

expressao1_w	varchar(255) := obter_desc_expressao_idioma(327119, null, wheb_usuario_pck.get_nr_seq_idioma);--Nao informado
BEGIN
if (coalesce(cd_agenda_p,0) > 0) and (coalesce(nr_seq_agenda_p,0) > 0) and (ie_historico_p IS NOT NULL AND ie_historico_p::text <> '') and
        --(nm_usuario_hist_p is not null) and
        (ds_historico_p IS NOT NULL AND ds_historico_p::text <> '') and
        --((cd_pessoa_hist_p is not null) or

        -- (nm_paciente_hist_p is not null)) and
        (dt_agenda_hist_p IS NOT NULL AND dt_agenda_hist_p::text <> '') then

        /* obter sequence */

        select  nextval('agenda_paciente_hist_seq')
        into STRICT    nr_seq_hist_w
;

       	/* Obter protocolo */

		cd_protocolo_w := ageint_obter_protocolo_atend(nm_usuario_hist_p);

        select  max(cd_tipo_agenda)
        into STRICT    cd_tipo_Agenda_w
        from    agenda
        where   cd_agenda       = cd_agenda_p;

        select  max(nr_seq_Agenda_int)
        into STRICT    nr_Seq_ageint_w
        from    agenda_integrada_item
        where (nr_seq_agenda_exame    = nr_seq_agenda_p and cd_tipo_agenda_w  = 2)
        or (nr_seq_agenda_cons     = nr_seq_agenda_p and cd_tipo_agenda_w  in (3,4,5));
	
	if (ie_historico_p = 'T') then 		
		select	hr_inicio_origem
		into STRICT	dt_origem_w
		from	agenda_paciente
		where	nr_sequencia	= nr_seq_agenda_p;
	
		if (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_origem_w) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_hist_p)) then
			ie_mesmo_dia_w	:= 'S';
		end if;
	end if;
	
	if (cd_perfil_p = 0) then
	
		/* gerar historico */

		insert into agenda_paciente_hist(
							nr_sequencia,
							cd_agenda,
							nr_seq_agenda,
							ie_historico,
							dt_historico,
							nm_usuario_hist,
							ds_historico,
							cd_pessoa_hist,
							nm_paciente_hist,
							dt_agenda_hist,
							nr_seq_Agenda_int,
							ie_transf_mesmo_dia,
							cd_motivo_alteracao,
							ds_observacao_alteracao,
							dt_agendamento,
							ds_stack,
							cd_protocolo
							)
		values (
							nr_seq_hist_w,
							cd_agenda_p,
							nr_seq_agenda_p,
							ie_historico_p,
							clock_timestamp(),
							nm_usuario_hist_p,
							substr(ds_historico_p,1,2000),
							cd_pessoa_hist_p,
							coalesce(nm_paciente_hist_p,expressao1_w),
							dt_agenda_hist_p,
							nr_Seq_ageint_w,
							ie_mesmo_dia_w,
							cd_motivo_alteracao_p,
							ds_observacao_alteracao_p,
							dt_agendamento_p,
							substr(dbms_utility.format_call_stack,1,4000),
							cd_protocolo_w);
	else
		/* gerar historico */

		insert into agenda_paciente_hist(
							nr_sequencia,
							cd_agenda,
							nr_seq_agenda,
							ie_historico,
							dt_historico,
							nm_usuario_hist,
							ds_historico,
							cd_pessoa_hist,
							nm_paciente_hist,
							dt_agenda_hist,
							nr_seq_Agenda_int,
							cd_perfil,
							ie_transf_mesmo_dia,
							cd_motivo_alteracao,
							ds_observacao_alteracao,
							dt_agendamento,
							ds_stack,
							cd_protocolo
							)
		values (
							nr_seq_hist_w,
							cd_agenda_p,
							nr_seq_agenda_p,
							ie_historico_p,
							clock_timestamp(),
							nm_usuario_hist_p,
							substr(ds_historico_p,1,2000),
							cd_pessoa_hist_p,
							coalesce(nm_paciente_hist_p,expressao1_w),
							dt_agenda_hist_p,
							nr_Seq_ageint_w,
							cd_perfil_p,
							ie_mesmo_dia_w,
							cd_motivo_alteracao_p,
							ds_observacao_alteracao_p,
							dt_agendamento_p,
							substr(dbms_utility.format_call_stack,1,4000),
							cd_protocolo_w);
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_agenda_paciente_hist ( cd_agenda_p bigint, nr_seq_agenda_p bigint, ie_historico_p text, nm_usuario_hist_p text, ds_historico_p text, cd_pessoa_hist_p text, nm_paciente_hist_p text, dt_agenda_hist_p timestamp, cd_perfil_p bigint, cd_motivo_alteracao_p bigint default null, ds_observacao_alteracao_p text default null, dt_agendamento_p timestamp default null) FROM PUBLIC;

