-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hem_inserir_informacao_clinica (nr_seq_ativacao_p bigint, ie_tabela_informacao_p text, lista_informacao_p text, nm_usuario_p text) AS $body$
DECLARE


lista_informacao_w		varchar(400);
ie_contador_w			bigint	:= 0;
tam_lista_w			bigint;
ie_pos_virgula_w		smallint;
nr_seq_informacao_w		varchar(10);
nr_sequencia_w		bigint;



BEGIN

lista_informacao_w	:= lista_informacao_p;

while	(lista_informacao_w IS NOT NULL AND lista_informacao_w::text <> '') or
	ie_contador_w > 200 loop
	begin
	tam_lista_w		:= length(lista_informacao_w);
	ie_pos_virgula_w	:= position(',' in lista_informacao_w);

	if (ie_pos_virgula_w <> 0) then
		nr_seq_informacao_w	:= substr(lista_informacao_w,1,(ie_pos_virgula_w - 1));
		lista_informacao_w	:= substr(lista_informacao_w,(ie_pos_virgula_w + 1),tam_lista_w);
	end if;

	if (ie_tabela_informacao_p = 'I') then

		select	nextval('hem_proc_dado_clinico_seq')
		into STRICT	nr_sequencia_w
		;

		insert	into hem_proc_dado_clinico(
							nr_sequencia,
							nr_seq_dado_clinico,
							dt_atualizacao,
							nm_usuario,
							nr_seq_proc
							)
		values (
							nr_sequencia_w,
							nr_seq_informacao_w,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_ativacao_p
							);
		ie_contador_w	:= ie_contador_w + 1;
	elsif (ie_tabela_informacao_p = 'MUP') then

		select	nextval('hem_proc_medic_seq')
		into STRICT	nr_sequencia_w
		;

		insert	into hem_proc_medic(
							nr_sequencia,
							nr_seq_medic,
							dt_atualizacao,
							nm_usuario,
							nr_seq_proc,
							ie_uso_medic
							)
		values (
							nr_sequencia_w,
							nr_seq_informacao_w,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_ativacao_p,
							'P'
							);
		ie_contador_w	:= ie_contador_w + 1;
	elsif (ie_tabela_informacao_p = 'MUE') then

		select	nextval('hem_proc_medic_seq')
		into STRICT	nr_sequencia_w
		;

		insert	into hem_proc_medic(
							nr_sequencia,
							nr_seq_medic,
							dt_atualizacao,
							nm_usuario,
							nr_seq_proc,
							ie_uso_medic
							)
		values (
							nr_sequencia_w,
							nr_seq_informacao_w,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_ativacao_p,
							'E'
							);
		ie_contador_w	:= ie_contador_w + 1;
	elsif (ie_tabela_informacao_p = 'E') then

		select	nextval('hem_proc_exame_seq')
		into STRICT	nr_sequencia_w
		;

		insert	into hem_proc_exame(
							nr_sequencia,
							nr_seq_exame,
							dt_atualizacao,
							nm_usuario,
							nr_seq_proc
							)
		values (
							nr_sequencia_w,
							nr_seq_informacao_w,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_ativacao_p
							);
		ie_contador_w	:= ie_contador_w + 1;
	elsif (ie_tabela_informacao_p = 'R') then

		select	nextval('hem_usic_resultado_seq')
		into STRICT	nr_sequencia_w
		;

		insert	into hem_usic_resultado(
							nr_sequencia,
							nr_seq_frase_result,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_usic
							)
		values (
							nr_sequencia_w,
							nr_seq_informacao_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_ativacao_p
							);
		ie_contador_w	:= ie_contador_w + 1;
	end if;
	end;
end loop;
COMMIT;
END	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hem_inserir_informacao_clinica (nr_seq_ativacao_p bigint, ie_tabela_informacao_p text, lista_informacao_p text, nm_usuario_p text) FROM PUBLIC;

