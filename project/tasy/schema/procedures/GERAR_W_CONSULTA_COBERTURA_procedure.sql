-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos_regra_plano AS (	nr_seq_regra			regra_convenio_plano.nr_sequencia%type, 
					ie_regra_plano 			regra_convenio_plano.ie_regra%type,
					cd_categoria			regra_convenio_plano.cd_categoria%type,
					cd_plano				regra_convenio_plano.cd_plano%type,
					cd_classif_setor			regra_convenio_plano.cd_classif_setor%type,
					ie_tipo_atendimento		regra_convenio_plano.ie_tipo_atendimento%type,
					dt_inicio_vigencia 		regra_convenio_plano.dt_inicio_vigencia%type,
					dt_fim_vigencia 			regra_convenio_plano.dt_fim_vigencia%type,
					cd_setor_atendimento		regra_convenio_plano.cd_setor_atendimento%type,
					cd_estabelecimento 		regra_convenio_plano.cd_estabelecimento%type,
					nr_seq_classif_atend 		regra_convenio_plano.nr_seq_classif_atend%type,
					cd_empresa_conv 			regra_convenio_plano.cd_empresa_conv%type,
					cd_especialidade_medic		regra_convenio_plano.cd_especialidade_medic%type,
					cd_procedimento			regra_convenio_plano.cd_procedimento%type,
					ie_origem_proced			regra_convenio_plano.ie_origem_proced%type,
					nr_seq_proc_interno		regra_convenio_plano.nr_seq_proc_interno%type,
					cd_grupo_proc			regra_convenio_plano.cd_grupo_proc%type,
					cd_especialidade_proc		regra_convenio_plano.cd_especialidade_proc%type,
					cd_area_procedimento		regra_convenio_plano.cd_area_procedimento%type);


CREATE OR REPLACE PROCEDURE gerar_w_consulta_cobertura ( nm_usuario_p text, cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_plano_p text, ie_tipo_atendimento_p bigint, cd_tipo_acomodacao_p bigint, cd_setor_atendimento_p bigint, cd_especialidade_proc_p bigint, cd_area_procedimento_p bigint, cd_grupo_proc_p bigint, nr_seq_proc_interno_p bigint, cd_empresa_p bigint, ie_tipo_item_p bigint, cd_estab_filtro_p bigint, ie_regra_preco_p text default 'N', ie_considera_estrutura_p text default 'N', ie_vigencia_p text default 'N', cd_material_p bigint DEFAULT NULL, cd_grupo_mat_p bigint DEFAULT NULL, cd_subgrupo_mat_p bigint DEFAULT NULL, cd_classe_mat_p bigint DEFAULT NULL, cd_estabelecimento_atual_p bigint DEFAULT NULL, cd_categoria_p text DEFAULT NULL) AS $body$
DECLARE

					
/*
Descricao do campo: Tipo do Item
Atributo : ie_tipo_item_p
Valores:
	0 - Procedimentos
	1 - Materiais/Medicamentos
	2 - Planos
	3 -  Liberacao Atendimento
*/
ds_sql_w					varchar(4000);
ds_from_w				varchar(4000);
ds_where_w				varchar(4000);
ds_order_by_w				varchar(4000);
cd_area_proc_filtro_w			area_procedimento.cd_area_procedimento%type;
cd_espec_proc_filtro_w			especialidade_proc.cd_especialidade%type;
cd_grupo_proc_filtro_w			grupo_proc.cd_grupo_proc%type;
cursor_w      				integer;

/*campos*/

ie_regra_w				varchar(5);
nr_seq_regra_w				bigint;
ie_regra_plano_w				regra_convenio_plano.ie_regra%type;
ie_regra_glosa_w				regra_ajuste_proc.ie_glosa%type;
cd_categoria_w				categoria_convenio.cd_categoria%type;
cd_plano_w				convenio_plano.cd_plano%type;
cd_classif_setor_w			regra_Convenio_plano.cd_classif_setor%type;
ie_tipo_atendimento_w			regra_Convenio_plano.ie_tipo_atendimento%type;
dt_inicio_vigencia_w 			timestamp;
dt_fim_vigencia_w 			timestamp;
cd_setor_atendimento_w			SETOR_ATENDIMENTO.CD_SETOR_ATENDIMENTO%TYPE;
cd_estabelecimento_w			ESTABELECIMENTO.CD_ESTABELECIMENTO%TYPE;
nr_seq_classif_atend_w			REGRA_CONVENIO_PLANO.NR_SEQ_CLASSIF_ATEND%TYPE;
cd_empresa_conv_w				EMPRESA.CD_EMPRESA%TYPE;
cd_especialidade_medic_w			regra_convenio_plano.cd_especialidade_medic%type;
cd_procedimento_w				procedimento.cd_procedimento%type;
ie_origem_proced_w			procedimento.ie_origem_proced%type;
nr_seq_proc_interno_w			proc_interno.nr_sequencia%type;
cd_grupo_proc_w				grupo_proc.cd_grupo_proc%type;
cd_especialidade_proc_w			especialidade_proc.cd_especialidade%type;
cd_area_procedimento_w			area_procedimento.cd_area_procedimento%type;
vl_retorno_cursor_w  			double precision;
i					integer;
cd_proced_interno_w			procedimento.cd_procedimento%type;
ie_origem_proc_interno_w			procedimento.ie_origem_proced%type;
nr_seq_cobertura_w			conv_regra_atend_setor.nr_seq_cobertura%type;
ie_libera_bloqueia_w			conv_regra_atend_setor.ie_libera_bloqueia%type;
cd_material_w				double precision;
cd_classe_material_w			double precision;
cd_subgrupo_material_w			double precision;
cd_grupo_material_w			double precision;
ie_param_8				varchar(1) := 'S';
nr_seq_prioridade_w			bigint;
lista_categ_plano_w				varchar(255);
type campos_regra_plano_v is table of campos_regra_plano index by integer;
campos_regra_plano_w			campos_regra_plano_v;
ie_incluir_w				varchar(1) := 'N';
vl_material_min_w   	regra_convenio_plano_mat.vl_material_min%type;	
vl_material_max_w   	regra_convenio_plano_mat.vl_material_max%type;	
ie_valor_w          	varchar(1);	
ie_valor_dia_w      	regra_convenio_plano_mat.ie_valor_dia%type;	
ie_valor_unitario_w 	regra_convenio_plano_mat.ie_valor_unitario%type;

c_regra_plano CURSOR FOR
	SELECT	nr_seq_apresentacao
	from	w_consulta_cobertura
	where	ie_regra = 'P'
	and	nm_usuario = nm_usuario_p
	order by coalesce(nr_seq_proc_interno,0),
		 coalesce(cd_procedimento,0),
		 coalesce(cd_grupo_proc,0),
		 coalesce(cd_especialidade_proc,0),
		 coalesce(cd_area_proced,0);
		
c_regra_plano_w	 c_regra_plano%rowtype;	
		 
c_regra_ajuste CURSOR FOR
	SELECT	nr_seq_apresentacao
	from	w_consulta_cobertura
	where	ie_regra in ('PP','PPE')
	and	nm_usuario = nm_usuario_p
	order by coalesce(nr_seq_proc_interno,0),
		 coalesce(cd_procedimento,0),
		 coalesce(cd_grupo_proc,0),
		 coalesce(cd_especialidade_proc,0),
		 coalesce(cd_area_proced,0);	

c_regra_ajuste_w c_regra_ajuste%rowtype;


c_categoria_plano CURSOR FOR
	SELECT	cd_categoria
	from	categoria_plano
	where	cd_convenio	= cd_convenio_p
	and	cd_plano		= cd_plano_p
	and 	coalesce(cd_estabelecimento,cd_estabelecimento_atual_p) = cd_estabelecimento_atual_p
	and	ie_situacao	= 'A'
	and	clock_timestamp() between coalesce(dt_inicio_vigencia,clock_timestamp()) -1 and fim_dia(coalesce(DT_FINAL_VIGENCIA,clock_timestamp()));

c_categoria_plano_w c_categoria_plano%rowtype;


BEGIN
ie_param_8 := obter_param_usuario(1114, 8, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_atual_p, ie_param_8);

delete	
from	w_consulta_cobertura
where	nm_usuario = nm_usuario_p;

commit;

ds_sql_w 	:= '';
ds_where_w 	:= '';
ds_from_w	:= '';

if (ie_tipo_item_p = 0) then

	ds_sql_w	:=  	'''P'' ie_regra, 
				a.nr_sequencia nr_seq_regra, 
				a.ie_regra ie_regra_plano, 
				a.cd_categoria, 
				a.cd_plano, 
				a.cd_classif_setor, 
				a.ie_tipo_atendimento, 
				a.dt_inicio_vigencia, 
				a.dt_fim_vigencia, 
				a.cd_setor_atendimento, 
				a.cd_estabelecimento, 
				a.nr_seq_classif_atend, 
				a.cd_empresa_conv, 
				a.cd_especialidade_medic,
				a.cd_procedimento,
				a.ie_origem_proced,
				a.nr_seq_proc_interno,
				a.cd_grupo_proc,
				a.cd_especialidade_proc,
				a.cd_area_procedimento,	
				a.ie_valor';

	ds_from_w  := 	'from	regra_convenio_plano a';
	ds_where_w := 	'where	((a.cd_convenio = :cd_convenio) or (:cd_convenio = 0))
			and	nvl(a.ie_situacao,''A'') 	= ''A''';	

	if (cd_estab_filtro_p IS NOT NULL AND cd_estab_filtro_p::text <> '') then
		ds_where_w := ds_where_w || ' and ((a.cd_estabelecimento is null) or (a.cd_estabelecimento = :cd_estab_filtro))';
	end if;

    if ((obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento) IS NOT NULL AND (obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento))::text <> '')) then
		ds_where_w := ds_where_w || ' and nvl(a.cd_empresa, nvl(obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento),0)) = nvl(obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento),0)';
	end if;

	if (ie_vigencia_p = 'S') then
		ds_where_w := ds_where_w || ' and sysdate between nvl(a.dt_inicio_vigencia,sysdate) and fim_dia(nvl(a.dt_fim_vigencia,sysdate + 1))';
	end if;

	if (cd_plano_p IS NOT NULL AND cd_plano_p::text <> '') then
		lista_categ_plano_w := null;
		if (coalesce(cd_categoria_p::text, '') = '') then
			for c_categoria_plano_w in c_categoria_plano loop
				if (coalesce(lista_categ_plano_w::text, '') = '') then
					lista_categ_plano_w :=   c_categoria_plano_w.cd_categoria;
				else
					lista_categ_plano_w := lista_categ_plano_w|| ',' ||c_categoria_plano_w.cd_categoria;
				end if;
			end loop;

			if (lista_categ_plano_w IS NOT NULL AND lista_categ_plano_w::text <> '') then
				ds_where_w := ds_where_w || ' and ((a.cd_categoria is null) or (obter_se_contido(a.cd_categoria,:cd_categ_plano ) = ''S''))';
			end if;
		end if;
		ds_where_w := ds_where_w || ' and ((a.cd_plano is null) or (a.cd_plano = :cd_plano))';
	end if;

	if (ie_tipo_atendimento_p IS NOT NULL AND ie_tipo_atendimento_p::text <> '') then
		ds_where_w := ds_where_w || ' and ((a.ie_tipo_atendimento is null) or (a.ie_tipo_atendimento = :ie_tipo_atendimento))';
	end if;

	if (cd_tipo_acomodacao_p IS NOT NULL AND cd_tipo_acomodacao_p::text <> '') then
		ds_where_w := ds_where_w || ' and ((a.cd_tipo_acomodacao is null) or (a.cd_tipo_acomodacao = :cd_tipo_acomodacao))';
	end if;	

	if (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then
		ds_where_w := ds_where_w || ' and ((a.cd_setor_atendimento is null) or (a.cd_setor_atendimento = :cd_setor_atendimento))';	
	end if;	
	
	if (cd_categoria_p IS NOT NULL AND cd_categoria_p::text <> '') then
		ds_where_w := ds_where_w || ' and ((a.cd_categoria is null) or (a.cd_categoria = :cd_categoria))';
	end if;

	if (ie_considera_estrutura_p = 'S') and
		((cd_especialidade_proc_p IS NOT NULL AND cd_especialidade_proc_p::text <> '') or (cd_area_procedimento_p IS NOT NULL AND cd_area_procedimento_p::text <> '') or (cd_grupo_proc_p IS NOT NULL AND cd_grupo_proc_p::text <> '') or (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> ''))then
		ds_where_w := ds_where_w || ' and OBTER_SE_ESTRUTURA_PROC(:cd_area_procedimento,:cd_especialidade_proc,:cd_grupo_proc,:cd_procedimento,a.cd_area_procedimento,a.cd_especialidade_proc,a.cd_grupo_proc,a.cd_procedimento) = ''S''';
	end if;

	ds_order_by_w := ' ORDER BY 	decode(a.ie_prioridade,''S'',nvl(a.cd_plano,0),0),
					nvl(a.ds_mascara_carteira,''X''),
					nvl(a.cd_pessoa_fisica,''0''),
					nvl(a.nr_seq_exame,0),
					nvl(a.nr_seq_proc_interno,0),
					nvl(a.cd_procedimento,0),
					nvl(a.cd_grupo_proc,0),
					nvl(a.cd_especialidade_proc,0),
					nvl(a.cd_area_procedimento,0),
					nvl(a.cd_categoria,''0''),
					nvl(a.ie_tipo_atendimento,0),
					nvl(a.nr_seq_estagio,0),
					nvl(a.ie_carater_inter_sus,''X''),
					nvl(a.ie_clinica,0),
					nvl(a.cd_empresa_conv,0),
					nvl(a.cd_medico_executor,''X''),
					nvl(a.cd_edicao_amb,0),
					nvl(a.cd_perfil,0),
					nvl(a.ie_carater_cirurgia,''X''),
					nvl(a.nr_seq_cbhpm_edicao,0),
					nvl(a.nr_seq_classif_proc_int,0),
					nvl(a.qt_idade_min,0),
					nvl(a.qt_idade_max,999)';
					
	cursor_w := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(cursor_w, 'SELECT' || ' ' || ds_sql_w || ' ' || ds_from_w || ' ' || ds_where_w || ' ' || ds_order_by_w,DBMS_SQL.NATIVE);
	DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_convenio', cd_convenio_p);	

	if (ie_considera_estrutura_p = 'S') and
		((cd_especialidade_proc_p IS NOT NULL AND cd_especialidade_proc_p::text <> '') or (cd_area_procedimento_p IS NOT NULL AND cd_area_procedimento_p::text <> '') or (cd_grupo_proc_p IS NOT NULL AND cd_grupo_proc_p::text <> '') or (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> ''))then
	
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_area_procedimento', cd_area_procedimento_p);
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_especialidade_proc', cd_especialidade_proc_p);
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_grupo_proc', cd_grupo_proc_p);
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_procedimento', cd_procedimento_p);
	
	end if;
	
	if (cd_estab_filtro_p IS NOT NULL AND cd_estab_filtro_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_estab_filtro', cd_estab_filtro_p);
	end if;
	
	if (cd_plano_p IS NOT NULL AND cd_plano_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_plano', cd_plano_p);
	end if;
	
	if (ie_tipo_atendimento_p IS NOT NULL AND ie_tipo_atendimento_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'ie_tipo_atendimento', ie_tipo_atendimento_p);
	end if;

	if (cd_tipo_acomodacao_p IS NOT NULL AND cd_tipo_acomodacao_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_tipo_acomodacao', cd_tipo_acomodacao_p);
	end if;	
	
	if (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_setor_atendimento', cd_setor_atendimento_p);
	end if;	
	
	if (cd_categoria_p IS NOT NULL AND cd_categoria_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_categoria', cd_categoria_p);
	end if;
	
	if (lista_categ_plano_w IS NOT NULL AND lista_categ_plano_w::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_categ_plano', lista_categ_plano_w);		
	end if;

	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 1, ie_regra_w, 5);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 2, nr_seq_regra_w);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 3, ie_regra_plano_w,2);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 4, cd_categoria_w, 10);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 5, cd_plano_w, 10);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 6, cd_classif_setor_w,2);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 7, ie_tipo_atendimento_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 8, dt_inicio_vigencia_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 9, dt_fim_vigencia_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 10, cd_setor_atendimento_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 11, cd_estabelecimento_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 12, nr_seq_classif_atend_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 13, cd_empresa_conv_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 14, cd_especialidade_medic_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 15, cd_procedimento_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 16, ie_origem_proced_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 17, nr_seq_proc_interno_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 18, cd_grupo_proc_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 19, cd_especialidade_proc_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 20, cd_area_procedimento_w);		
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 21, ie_valor_w,1);
	i := 0;
	
	vl_retorno_cursor_w := DBMS_SQL.EXECUTE(cursor_w);
	   LOOP
	      vl_retorno_cursor_w := DBMS_SQL.FETCH_ROWS(cursor_w);
	      IF (vl_retorno_cursor_w = 0) THEN
	         EXIT;
	      END IF;
	
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 1, ie_regra_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 2, nr_seq_regra_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 3, ie_regra_plano_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 4, cd_categoria_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 5, cd_plano_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 6, cd_classif_setor_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 7, ie_tipo_atendimento_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 8, dt_inicio_vigencia_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 9, dt_fim_vigencia_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 10, cd_setor_atendimento_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 11, cd_estabelecimento_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 12, nr_seq_classif_atend_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 13, cd_empresa_conv_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 14, cd_especialidade_medic_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 15, cd_procedimento_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 16, ie_origem_proced_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 17, nr_seq_proc_interno_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 18, cd_grupo_proc_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 19, cd_especialidade_proc_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 20, cd_area_procedimento_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 21, ie_valor_w);
		i := i  + 1;
	
		ie_incluir_w := 'S';
		if	((ie_considera_estrutura_p = 'N') and
			((cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') or (nr_seq_proc_interno_p IS NOT NULL AND nr_seq_proc_interno_p::text <> '') or (cd_grupo_proc_p IS NOT NULL AND cd_grupo_proc_p::text <> '') or (cd_especialidade_proc_p IS NOT NULL AND cd_especialidade_proc_p::text <> '') or (cd_area_procedimento_p IS NOT NULL AND cd_area_procedimento_p::text <> '')))then
			
			ie_incluir_w := 'N';
			if (nr_seq_proc_interno_p > 0) then
				 SELECT * FROM Obter_Proc_Tab_Inter_Agenda(nr_seq_proc_interno_p, 0, cd_convenio_p, cd_categoria_p, cd_plano_p, cd_estabelecimento_atual_p, null, cd_tipo_acomodacao_p, null, null, null, ie_tipo_atendimento_p, null, null, null, cd_proced_interno_w, ie_origem_proc_interno_w) INTO STRICT cd_proced_interno_w, ie_origem_proc_interno_w;
	
				if (cd_proced_interno_w > 0 and ie_origem_proc_interno_w > 0)  and (coalesce(cd_procedimento_p::text, '') = '') then
	
					begin
					select	x.cd_area_procedimento,
						x.cd_especialidade,
						x.cd_grupo_proc
					into STRICT	cd_area_proc_filtro_w,
						cd_espec_proc_filtro_w,
						cd_grupo_proc_filtro_w
					from	estrutura_procedimento_v x
					where	x.cd_procedimento		= cd_proced_interno_w
					and	x.ie_origem_proced		= ie_origem_proc_interno_w;
					exception
					when others then
						cd_area_proc_filtro_w  := null;
						cd_espec_proc_filtro_w := null;
						cd_grupo_proc_filtro_w := null;
					end;
					
					if	((cd_proced_interno_w = cd_procedimento_w AND ie_origem_proc_interno_w = ie_origem_proced_w) or (nr_seq_proc_interno_p = nr_seq_proc_interno_w) or (cd_area_proc_filtro_w = cd_area_procedimento_w) or (cd_espec_proc_filtro_w = cd_especialidade_proc_w) or (cd_grupo_proc_filtro_w = cd_grupo_proc_w))then
						ie_incluir_w := 'S';
					end if;
	
				end if;
	
			end if;
	
	
			if (cd_area_procedimento_p IS NOT NULL AND cd_area_procedimento_p::text <> '') then
	
				if (cd_area_procedimento_p = cd_area_procedimento_w) then
					ie_incluir_w := 'S';
	
				elsif (cd_especialidade_proc_w IS NOT NULL AND cd_especialidade_proc_w::text <> '') then
	
					select CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
					into STRICT   ie_incluir_w
					from   especialidade_proc x
					where  x.cd_area_procedimento = cd_area_procedimento_p
					and    x.cd_especialidade = cd_especialidade_proc_w;	
	
				elsif (cd_grupo_proc_w IS NOT NULL AND cd_grupo_proc_w::text <> '') then
	
					select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
					into STRICT   	ie_incluir_w
					from 	grupo_proc w, especialidade_proc y 
					where 	y.cd_especialidade = w.cd_especialidade 
					and     y.cd_area_procedimento = cd_area_procedimento_p
					and	w.cd_grupo_proc = cd_grupo_proc_w;
	
				elsif (cd_procedimento_w > 0) then
	
					select CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
					into STRICT	ie_incluir_w
					from 	procedimento z, 
						grupo_proc gp, 
						especialidade_proc ep 
					where 	z.cd_grupo_proc = gp.cd_grupo_proc 
					and 	gp.cd_especialidade = ep.cd_especialidade 
					and 	ep.cd_area_procedimento = cd_area_procedimento_p
					and	z.cd_procedimento = cd_procedimento_w
					and	z.ie_origem_proced = ie_origem_proced_w;
	
				end if;
			elsif (cd_especialidade_proc_p IS NOT NULL AND cd_especialidade_proc_p::text <> '') then
	
				if (cd_especialidade_proc_p = cd_especialidade_proc_w) then
					ie_incluir_w := 'S';
	
				elsif (cd_grupo_proc_w IS NOT NULL AND cd_grupo_proc_w::text <> '') then
	
					select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
					into STRICT   	ie_incluir_w
					from 	grupo_proc w, especialidade_proc y 
					where 	y.cd_especialidade = w.cd_especialidade 
					and     y.cd_especialidade = cd_especialidade_proc_p
					and	w.cd_grupo_proc = cd_grupo_proc_w;

				elsif (cd_procedimento_w > 0) then
	
					select CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
					into STRICT	ie_incluir_w
					from 	procedimento z, 
						grupo_proc gp, 
						especialidade_proc ep 
					where 	z.cd_grupo_proc = gp.cd_grupo_proc 
					and 	gp.cd_especialidade = ep.cd_especialidade 
					and 	ep.cd_especialidade = cd_especialidade_proc_p
					and	z.cd_procedimento = cd_procedimento_w
					and	z.ie_origem_proced = ie_origem_proced_w;

				end if;
			elsif (cd_grupo_proc_p IS NOT NULL AND cd_grupo_proc_p::text <> '') then
				if (cd_grupo_proc_p = cd_grupo_proc_w) then
					ie_incluir_w := 'S';
				elsif (cd_procedimento_w > 0) then
	
					select CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
					into STRICT	ie_incluir_w
					from 	procedimento z, 
						grupo_proc gp
					where 	z.cd_grupo_proc = gp.cd_grupo_proc 
					and	gp.cd_grupo_proc = cd_grupo_proc_w
					and	z.cd_procedimento = cd_procedimento_w
					and	z.ie_origem_proced = ie_origem_proced_w;
	
				end if;
			end if;	
		end if;
		
		if (ie_valor_w not in ('N')) then	
			ie_incluir_w := regra_plano_proced_valor(nr_seq_regra_w, 	
					    coalesce(cd_estabelecimento_w, cd_estabelecimento_atual_p),
					    cd_convenio_p, 	
					    coalesce(cd_categoria_w, cd_categoria_p),	
					    coalesce(cd_procedimento_w, cd_procedimento_p),
					    coalesce(cd_tipo_acomodacao_p, 0),	
					    coalesce(ie_tipo_atendimento_w, ie_tipo_atendimento_p, 0),	
					    coalesce(cd_setor_atendimento_w, cd_setor_atendimento_p, 0),	
					    coalesce(cd_plano_w, cd_plano_p),	
					    ie_origem_proced_p);	
		end if;
	
		if ( ie_incluir_w = 'S')  then
			CALL insert_w_consulta_cobertura(cd_area_procedimento_w, cd_categoria_w, null, cd_classif_setor_w, cd_convenio_p, null, cd_empresa_conv_w, cd_especialidade_medic_w, cd_especialidade_proc_w, cd_estabelecimento_w, null, cd_grupo_proc_w, null, cd_plano_w, cd_procedimento_w, cd_setor_atendimento_w, null, dt_fim_vigencia_w, dt_inicio_vigencia_w, null, ie_origem_proced_w, trim(both ie_regra_w), null, ie_regra_plano_w, ie_tipo_atendimento_w, nm_usuario_p, i, nr_seq_classif_atend_w, null, nr_seq_proc_interno_w, nr_seq_regra_w, ie_tipo_item_p);
		end if;

	END LOOP;
	

	DBMS_SQL.close_cursor(cursor_w);
	COMMIT;
	
	if (ie_param_8 = 'R') then
	
		delete	
		from	w_consulta_cobertura
		where	nr_seq_apresentacao <> (SELECT 	max(x.nr_seq_apresentacao)
						from 	w_consulta_cobertura x 
						where 	x.nm_usuario = nm_usuario_p
						and	x.ie_regra = 'P')
		and	nm_usuario = nm_usuario_p
		and	ie_regra = 'P';
		commit;
	end if;
	

	cursor_w := 0;

	if (ie_regra_preco_p = 'S') then

		ds_sql_w	:=  	'a.nr_sequencia nr_seq_regra, 
					a.ie_glosa ie_regra_glosa, 
					a.cd_categoria, 
					a.cd_plano, 
					a.ie_tipo_atendimento, 
					a.dt_inicio_vigencia, 
					a.dt_final_vigencia, 
					a.cd_setor_atendimento, 
					a.cd_estabelecimento, 
					a.cd_especialidade_medica,
					a.cd_procedimento,
					a.ie_origem_proced,
					a.nr_seq_proc_interno,
					a.cd_grupo_proc,
					a.cd_especialidade,
					a.cd_area_procedimento';

		ds_from_w  := 	'from	regra_ajuste_proc a';
		ds_where_w := '  where	a.cd_convenio = :cd_convenio
				and	nvl(a.ie_situacao,''A'') 	= ''A'' 
				and	a.ie_glosa in (''L'',''G'')';

		
		if (cd_plano_p IS NOT NULL AND cd_plano_p::text <> '') then
			lista_categ_plano_w := null;
			if ( coalesce(cd_categoria_p::text, '') = '') then
				for c_categoria_plano_w in c_categoria_plano loop
					if (coalesce(lista_categ_plano_w::text, '') = '') then
						lista_categ_plano_w :=   c_categoria_plano_w.cd_categoria;
					else
						lista_categ_plano_w := lista_categ_plano_w|| ',' ||c_categoria_plano_w.cd_categoria;
					end if;
				end loop;
				
				if (lista_categ_plano_w IS NOT NULL AND lista_categ_plano_w::text <> '') then
					ds_where_w := ds_where_w || ' and ((a.cd_categoria is null) or (obter_se_contido(a.cd_categoria,:cd_categ_plano) = ''S''))';
				end if;
			end if;
			ds_where_w := ds_where_w || ' and ((a.cd_plano is null) or (a.cd_plano = :cd_plano))';
		end if;
		
		if (ie_tipo_atendimento_p IS NOT NULL AND ie_tipo_atendimento_p::text <> '') then
			ds_where_w := ds_where_w || ' and ((a.ie_tipo_atendimento is null) or (a.ie_tipo_atendimento = :ie_tipo_atendimento))';
		end if;

		if (cd_tipo_acomodacao_p IS NOT NULL AND cd_tipo_acomodacao_p::text <> '') then
			ds_where_w := ds_where_w || ' and ((a.cd_tipo_acomodacao is null) or (a.cd_tipo_acomodacao = :cd_tipo_acomodacao))';
		end if;	
		
		if (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then
			ds_where_w := ds_where_w || ' and ((a.cd_setor_atendimento is null) or (a.cd_setor_atendimento = :cd_setor_atendimento))';	
		end if;	
		
		if (cd_estab_filtro_p IS NOT NULL AND cd_estab_filtro_p::text <> '') then
			ds_where_w := ds_where_w || ' and ((a.cd_estabelecimento is null) or (a.cd_estabelecimento = :cd_estab_filtro))';
		end if;
		
		if (cd_categoria_p IS NOT NULL AND cd_categoria_p::text <> '') then
			ds_where_w := ds_where_w || ' and ((a.cd_categoria is null) or (a.cd_categoria = :cd_categoria))';
		end if;
		
		ds_order_By_w := 	' order by
					nvl(cd_medico,''0''),
					nvl(nr_seq_proc_interno,0),
					nvl(nr_seq_exame,0),
					nvl(cd_procedimento, 0),
					nvl(cd_grupo_proc, 0),
					nvl(cd_especialidade, 0),
					nvl(cd_area_procedimento, 0),
					nvl(nr_seq_grupo_lab,0),
					nvl(nr_seq_classif,0),
					nvl(cd_tipo_acomodacao, 0),
					nvl(ie_tipo_atendimento, 0),
					nvl(cd_setor_atendimento, 0),
					nvl(cd_empresa_ref,0),
					nvl(ie_clinica,''0''),
					nvl(cd_plano,'' ''),
					nvl(cd_usuario_convenio, 0),
					ie_credenciado,
					dt_inicio_vigencia,
					nvl(cd_proc_referencia,0),
					nvl(qt_idade_min,0),
					nvl(nr_seq_proc_interno,0),
					nvl(cd_categoria,''0''),
					nvl(cd_procedencia,0),
					nvl(cd_cgc_prestador,''0''),
					nvl(ie_vinculo_medico, 0),
					nvl(ie_utiliza_video,''N''),
					nvl(ie_spect,''N''),
					nvl(cd_equipamento,0),
					nvl(nr_seq_equipe,0),
					nvl(nr_seq_cobertura,0),
					nvl(cd_especialidade_medica,0),
					nvl(nr_seq_classificacao,0),
					nvl(nr_seq_grupo_int, 0),
					nvl(nr_seq_espec_int, 0),
					nvl(nr_seq_area_int, 0),
					nvl(cd_medico_resp, ''0''),
					nvl(cd_dependente, 0),
					nvl(nr_seq_grupo_rec,0),
					nvl(nr_seq_origem,0),
					nvl(nr_seq_classif_medico,0),
					nvl(ie_carater_inter_sus,0)';

		cursor_w := DBMS_SQL.OPEN_CURSOR;
		DBMS_SQL.PARSE(cursor_w,'SELECT' || ' ' || ds_sql_w || ' ' || ds_from_w || ' ' || ds_where_w || ' ' || ds_order_by_w,DBMS_SQL.NATIVE);
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_convenio', cd_convenio_p);
		
		if (cd_plano_p IS NOT NULL AND cd_plano_p::text <> '') then
			DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_plano', cd_plano_p);
		end if;
	
		if (ie_tipo_atendimento_p IS NOT NULL AND ie_tipo_atendimento_p::text <> '') then
			DBMS_SQL.BIND_VARIABLE(cursor_w, 'ie_tipo_atendimento', ie_tipo_atendimento_p);
		end if;

		if (cd_tipo_acomodacao_p IS NOT NULL AND cd_tipo_acomodacao_p::text <> '') then
			DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_tipo_acomodacao', cd_tipo_acomodacao_p);
		end if;
	
		if (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then
			DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_setor_atendimento', cd_setor_atendimento_p);
		end if;
		
		if (cd_categoria_p IS NOT NULL AND cd_categoria_p::text <> '') then
			DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_categoria', cd_categoria_p);
		end if;
		
		if (cd_estab_filtro_p IS NOT NULL AND cd_estab_filtro_p::text <> '') then
			DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_estab_filtro', cd_estab_filtro_p);
		end if;
		
		if (lista_categ_plano_w IS NOT NULL AND lista_categ_plano_w::text <> '') then
			DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_categ_plano', lista_categ_plano_w);		
		end if;

		DBMS_SQL.DEFINE_COLUMN(cursor_w, 1, nr_seq_regra_w);
		DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 2, ie_regra_glosa_w,1);
		DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 3, cd_categoria_w, 10);
		DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 4, cd_plano_w, 10);
		DBMS_SQL.DEFINE_COLUMN(cursor_w, 5, ie_tipo_atendimento_w);
		DBMS_SQL.DEFINE_COLUMN(cursor_w, 6, dt_inicio_vigencia_w);
		DBMS_SQL.DEFINE_COLUMN(cursor_w, 7, dt_fim_vigencia_w);
		DBMS_SQL.DEFINE_COLUMN(cursor_w, 8, cd_setor_atendimento_w);
		DBMS_SQL.DEFINE_COLUMN(cursor_w, 9, cd_estabelecimento_w);
		DBMS_SQL.DEFINE_COLUMN(cursor_w, 10, cd_especialidade_medic_w);
		DBMS_SQL.DEFINE_COLUMN(cursor_w, 11, cd_procedimento_w);
		DBMS_SQL.DEFINE_COLUMN(cursor_w, 12, ie_origem_proced_w);
		DBMS_SQL.DEFINE_COLUMN(cursor_w, 13, nr_seq_proc_interno_w);
		DBMS_SQL.DEFINE_COLUMN(cursor_w, 14, cd_grupo_proc_w);
		DBMS_SQL.DEFINE_COLUMN(cursor_w, 15, cd_especialidade_proc_w);
		DBMS_SQL.DEFINE_COLUMN(cursor_w, 16, cd_area_procedimento_w);

		vl_retorno_cursor_w := DBMS_SQL.EXECUTE(cursor_w);
		LOOP
		      vl_retorno_cursor_w := DBMS_SQL.FETCH_ROWS(cursor_w);
		      IF (vl_retorno_cursor_w = 0) THEN
			 EXIT;
		      END IF;
		      	ie_incluir_w :=  'S';
			i := i  + 1;
			DBMS_SQL.COLUMN_VALUE(cursor_w, 1, nr_seq_regra_w);
			DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 2, ie_regra_glosa_w);
			DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 3, cd_categoria_w);
			DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 4, cd_plano_w);
			DBMS_SQL.COLUMN_VALUE(cursor_w, 5, ie_tipo_atendimento_w);
			DBMS_SQL.COLUMN_VALUE(cursor_w, 6, dt_inicio_vigencia_w);
			DBMS_SQL.COLUMN_VALUE(cursor_w, 7, dt_fim_vigencia_w);
			DBMS_SQL.COLUMN_VALUE(cursor_w, 8, cd_setor_atendimento_w);
			DBMS_SQL.COLUMN_VALUE(cursor_w, 9, cd_estabelecimento_w);
			DBMS_SQL.COLUMN_VALUE(cursor_w, 10, cd_especialidade_medic_w);
			DBMS_SQL.COLUMN_VALUE(cursor_w, 11, cd_procedimento_w);
			DBMS_SQL.COLUMN_VALUE(cursor_w, 12, ie_origem_proced_w);
			DBMS_SQL.COLUMN_VALUE(cursor_w, 13, nr_seq_proc_interno_w);
			DBMS_SQL.COLUMN_VALUE(cursor_w, 14, cd_grupo_proc_w);
			DBMS_SQL.COLUMN_VALUE(cursor_w, 15, cd_especialidade_proc_w);
			DBMS_SQL.COLUMN_VALUE(cursor_w, 16, cd_area_procedimento_w);

			if (cd_procedimento_w > 0) or (nr_seq_proc_interno_w > 0) then
				ie_regra_w := 'PP';
			else
				ie_regra_w := 'PPE';
			end if;
			ie_incluir_w := 'S';
			if	((cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') or (nr_seq_proc_interno_p IS NOT NULL AND nr_seq_proc_interno_p::text <> '') or (cd_grupo_proc_p IS NOT NULL AND cd_grupo_proc_p::text <> '') or (cd_especialidade_proc_p IS NOT NULL AND cd_especialidade_proc_p::text <> '') or (cd_area_procedimento_p IS NOT NULL AND cd_area_procedimento_p::text <> ''))then
			
				ie_incluir_w := 'N';
				if (nr_seq_proc_interno_p > 0) then
					 SELECT * FROM Obter_Proc_Tab_Inter_Agenda(nr_seq_proc_interno_p, 0, cd_convenio_p, cd_categoria_p, cd_plano_p, cd_estabelecimento_atual_p, null, cd_tipo_acomodacao_p, null, null, null, ie_tipo_atendimento_p, null, null, null, cd_proced_interno_w, ie_origem_proc_interno_w) INTO STRICT cd_proced_interno_w, ie_origem_proc_interno_w;
	
					if (cd_proced_interno_w > 0 and ie_origem_proc_interno_w > 0)  and (coalesce(cd_procedimento_p::text, '') = '') then
	
						begin
						select	x.cd_area_procedimento,
							x.cd_especialidade,
							x.cd_grupo_proc
						into STRICT	cd_area_proc_filtro_w,
							cd_espec_proc_filtro_w,
							cd_grupo_proc_filtro_w
						from	estrutura_procedimento_v x
						where	x.cd_procedimento		= cd_proced_interno_w
						and	x.ie_origem_proced		= ie_origem_proc_interno_w;
						exception
						when others then
							cd_area_proc_filtro_w  := null;
							cd_espec_proc_filtro_w := null;
							cd_grupo_proc_filtro_w := null;
						end;						
						
						if	((cd_proced_interno_w = cd_procedimento_w AND ie_origem_proc_interno_w = ie_origem_proced_w) or (nr_seq_proc_interno_p = nr_seq_proc_interno_w) or (cd_area_proc_filtro_w = cd_area_procedimento_w) or (cd_espec_proc_filtro_w = cd_especialidade_proc_w) or (cd_grupo_proc_filtro_w = cd_grupo_proc_w))then
							ie_incluir_w := 'S';
						end if;
						
					end if;	
				end if;
	
				if (cd_area_procedimento_p IS NOT NULL AND cd_area_procedimento_p::text <> '') then
					if (cd_area_procedimento_p = cd_area_procedimento_w) then	
						ie_incluir_w := 'S';
	
					elsif (cd_especialidade_proc_w IS NOT NULL AND cd_especialidade_proc_w::text <> '') then	
						select CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
						into STRICT   ie_incluir_w
						from   especialidade_proc x
						where  x.cd_area_procedimento = cd_area_procedimento_p
						and    x.cd_especialidade = cd_especialidade_proc_w;		
						
					elsif (cd_grupo_proc_w IS NOT NULL AND cd_grupo_proc_w::text <> '') then	
						select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
						into STRICT   	ie_incluir_w
						from 	grupo_proc w, especialidade_proc y 
						where 	y.cd_especialidade = w.cd_especialidade 
						and     y.cd_area_procedimento = cd_area_procedimento_p
						and	w.cd_grupo_proc = cd_grupo_proc_w;
	
					elsif (cd_procedimento_w > 0) then
						select CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
						into STRICT	ie_incluir_w
						from 	procedimento z, 
							grupo_proc gp, 
							especialidade_proc ep 
						where 	z.cd_grupo_proc = gp.cd_grupo_proc 
						and 	gp.cd_especialidade = ep.cd_especialidade 
						and 	ep.cd_area_procedimento = cd_area_procedimento_p
						and	z.cd_procedimento = cd_procedimento_w
						and	z.ie_origem_proced = ie_origem_proced_w;
	
					end if;	
					
				elsif (cd_especialidade_proc_p IS NOT NULL AND cd_especialidade_proc_p::text <> '') then
					if (cd_especialidade_proc_p = cd_especialidade_proc_w) then
						ie_incluir_w := 'S';	
					elsif (cd_grupo_proc_w IS NOT NULL AND cd_grupo_proc_w::text <> '') then
						select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
						into STRICT   	ie_incluir_w
						from 	grupo_proc w, especialidade_proc y 
						where 	y.cd_especialidade = w.cd_especialidade 
						and     y.cd_especialidade = cd_especialidade_proc_p
						and	w.cd_grupo_proc = cd_grupo_proc_w;
						
					elsif (cd_procedimento_w > 0) then
	
						select CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
						into STRICT	ie_incluir_w
						from 	procedimento z, 
							grupo_proc gp, 
							especialidade_proc ep 
						where 	z.cd_grupo_proc = gp.cd_grupo_proc 
						and 	gp.cd_especialidade = ep.cd_especialidade 
						and 	ep.cd_especialidade = cd_especialidade_proc_p
						and	z.cd_procedimento = cd_procedimento_w
						and	z.ie_origem_proced = ie_origem_proced_w;

					end if;
				elsif (cd_grupo_proc_p IS NOT NULL AND cd_grupo_proc_p::text <> '') then
					if (cd_grupo_proc_p = cd_grupo_proc_w) then
						ie_incluir_w := 'S';
					elsif (cd_procedimento_w > 0) then	
						select CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
						into STRICT	ie_incluir_w
						from 	procedimento z, 
							grupo_proc gp
						where 	z.cd_grupo_proc = gp.cd_grupo_proc 
						and	gp.cd_grupo_proc = cd_grupo_proc_w
						and	z.cd_procedimento = cd_procedimento_w
						and	z.ie_origem_proced = ie_origem_proced_w;
					end if;
				end if;
			end if;

			if (ie_incluir_w = 'S') then
				CALL insert_w_consulta_cobertura(cd_area_procedimento_w, cd_categoria_w, null, null, cd_convenio_p, null, null, cd_especialidade_medic_w, cd_especialidade_proc_w, cd_estabelecimento_w, null, cd_grupo_proc_w, null, cd_plano_w, cd_procedimento_w, cd_setor_atendimento_w, null, dt_fim_vigencia_w, dt_inicio_vigencia_w, null, ie_origem_proced_w, trim(both ie_regra_w), ie_regra_glosa_w, null, ie_tipo_atendimento_w, nm_usuario_p, i, null, null, nr_seq_proc_interno_w, nr_seq_regra_w, ie_tipo_item_p);
			end if;

		END LOOP;		
		
		
		DBMS_SQL.close_cursor(cursor_w);
		COMMIT;
	end if;
	
	
	if (ie_param_8 = 'R') then
		delete	
		from	w_consulta_cobertura
		where	nr_seq_apresentacao <> (SELECT 	max(x.nr_seq_apresentacao)
						from 	w_consulta_cobertura x 
						where 	x.nm_usuario = nm_usuario_p
						and	x.ie_regra in ('PP','PPE'))
		and	nm_usuario = nm_usuario_p
		and	ie_regra in ('PP','PPE');
		commit;
	end if;
	
	
elsif (ie_tipo_item_p = 1) then

	ds_sql_w	:=  	'''M'' ie_regra, 
				a.nr_sequencia nr_seq_regra,
				a.ie_regra ie_regra_plano,
				a.cd_material,
				a.cd_classe_material,
				a.cd_subgrupo_material,
				a.cd_grupo_material,
				a.cd_plano,
				a.cd_classif_setor,
				a.ie_tipo_atendimento,
				a.dt_inicio_vigencia,
				a.dt_fim_vigencia,
				a.cd_setor_atendimento,
				a.cd_estabelecimento,
				a.cd_empresa_conv,
				a.cd_categoria,	
				a.ie_valor';

	ds_from_w  := 	'from	regra_convenio_plano_mat a';
	
	ds_where_w := 	'where	a.cd_convenio = :cd_convenio ';
	
	
	if (cd_categoria_p IS NOT NULL AND cd_categoria_p::text <> '') then
		ds_where_w := ds_where_w || ' and ((a.cd_categoria is null) or (a.cd_categoria = :cd_categoria))';
	end if;
	
	if (cd_plano_p IS NOT NULL AND cd_plano_p::text <> '') then
		lista_categ_plano_w := null;
		if (coalesce(cd_categoria_p::text, '') = '') then
				for c_categoria_plano_w in c_categoria_plano loop
					if (coalesce(lista_categ_plano_w::text, '') = '') then
						lista_categ_plano_w :=   c_categoria_plano_w.cd_categoria;
					else
						lista_categ_plano_w := lista_categ_plano_w|| ',' ||c_categoria_plano_w.cd_categoria;
					end if;
				end loop;
				
				if (lista_categ_plano_w IS NOT NULL AND lista_categ_plano_w::text <> '') then
					ds_where_w := ds_where_w || ' and ((a.cd_categoria is null) or (obter_se_contido(a.cd_categoria,:cd_categ_plano) = ''S''))';
				end if;
		end if;
		ds_where_w := ds_where_w || ' and ((a.cd_plano is null) or (a.cd_plano = :cd_plano))';
	end if;
	
	if (ie_tipo_atendimento_p IS NOT NULL AND ie_tipo_atendimento_p::text <> '') then
		ds_where_w := ds_where_w || ' and ((a.ie_tipo_atendimento is null) or (a.ie_tipo_atendimento = :ie_tipo_atendimento))';
	end if;
	
	if (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then
		ds_where_w := ds_where_w || ' and ((a.cd_setor_atendimento is null) or (a.cd_setor_atendimento = :cd_setor_atendimento))';	
	end if;	
	
	if (cd_tipo_acomodacao_p IS NOT NULL AND cd_tipo_acomodacao_p::text <> '') then
		ds_where_w := ds_where_w || ' and ((a.cd_tipo_acomodacao is null) or (a.cd_tipo_acomodacao = :cd_tipo_acomodacao))';
	end if;	
	
	if (cd_classe_mat_p IS NOT NULL AND cd_classe_mat_p::text <> '') then
		ds_where_w := ds_where_w || ' and a.cd_classe_material = :cd_classe_material';
	end if;
	
	if (cd_grupo_mat_p IS NOT NULL AND cd_grupo_mat_p::text <> '') then
		ds_where_w := ds_where_w || ' and a.cd_grupo_material = :cd_grupo_material';
	end if;
	
	if (cd_subgrupo_mat_p IS NOT NULL AND cd_subgrupo_mat_p::text <> '') then
		ds_where_w := ds_where_w || ' and a.cd_subgrupo_material = :cd_subgrupo_material';
	end if;

	if (cd_estab_filtro_p IS NOT NULL AND cd_estab_filtro_p::text <> '') then
		ds_where_w := ds_where_w || ' and ((a.cd_estabelecimento is null) or (a.cd_estabelecimento = :cd_estab_filtro))';
	end if;

    if ((obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento) IS NOT NULL AND (obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento))::text <> '')) then
		ds_where_w := ds_where_w || ' and nvl(a.cd_empresa, nvl(obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento),0)) = nvl(obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento),0)';
	end if;
	
	ds_order_by_w := ' ORDER BY 	nvl(a.ds_mascara_carteira,''X''),
					nvl(a.cd_categoria,''0''),
					nvl(a.ie_tipo_atendimento,0),
					nvl(a.ie_carater_inter_sus,''X''),
					nvl(a.ie_clinica,0),
					nvl(a.cd_empresa_conv,0),
					nvl(a.cd_perfil,0)';

	cursor_w := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(cursor_w, 'SELECT' || ' ' || ds_sql_w || ' ' || ds_from_w || ' ' || ds_where_w || ' ' || ds_order_by_w,DBMS_SQL.NATIVE);
	DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_convenio', cd_convenio_p);
	
	if (cd_categoria_p IS NOT NULL AND cd_categoria_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_categoria', cd_categoria_p);
	end if;
	
	if (cd_plano_p IS NOT NULL AND cd_plano_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_plano', cd_plano_p);
	end if;
	
	if (ie_tipo_atendimento_p IS NOT NULL AND ie_tipo_atendimento_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'ie_tipo_atendimento', ie_tipo_atendimento_p);
	end if;
	
	if (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_setor_atendimento', cd_setor_atendimento_p);
	end if;
	
	if (cd_tipo_acomodacao_p IS NOT NULL AND cd_tipo_acomodacao_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_tipo_acomodacao', cd_tipo_acomodacao_p);
	end if;	
	
	if (cd_classe_mat_p IS NOT NULL AND cd_classe_mat_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_classe_material', cd_classe_mat_p);
	end if;
	
	if (cd_grupo_mat_p IS NOT NULL AND cd_grupo_mat_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_grupo_material', cd_grupo_mat_p);
	end if;
	
	if (cd_subgrupo_mat_p IS NOT NULL AND cd_subgrupo_mat_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_subgrupo_material', cd_subgrupo_mat_p);
	end if;

	if (cd_estab_filtro_p IS NOT NULL AND cd_estab_filtro_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_estab_filtro', cd_estab_filtro_p);
	end if;

	if (lista_categ_plano_w IS NOT NULL AND lista_categ_plano_w::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_categ_plano', lista_categ_plano_w);		
	end if;
	
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 1, ie_regra_w, 5);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 2, nr_seq_regra_w);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 3, ie_regra_plano_w,2);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 4,cd_material_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 5, cd_classe_material_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 6, cd_subgrupo_material_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 7, cd_grupo_material_w);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 8, cd_plano_w, 10);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 9, cd_classif_setor_w, 2);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 10, ie_tipo_atendimento_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 11, dt_inicio_vigencia_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 12, dt_fim_vigencia_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 13, cd_setor_atendimento_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 14, cd_estabelecimento_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 15, cd_empresa_conv_w);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 16, cd_categoria_w, 10);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 17, ie_valor_w, 1);
	i := 0;
	
	vl_retorno_cursor_w := DBMS_SQL.EXECUTE(cursor_w);
	   LOOP
	      vl_retorno_cursor_w := DBMS_SQL.FETCH_ROWS(cursor_w);
	      IF (vl_retorno_cursor_w = 0) THEN
	         EXIT;
	      END IF;
	      	DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 1, ie_regra_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 2, nr_seq_regra_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 3, ie_regra_plano_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 4, cd_material_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 5, cd_classe_material_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 6, cd_subgrupo_material_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 7, cd_grupo_material_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 8,  cd_plano_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 9, cd_classif_setor_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 10, ie_tipo_atendimento_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 11, dt_inicio_vigencia_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 12, dt_fim_vigencia_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 13, cd_setor_atendimento_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 14, cd_estabelecimento_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 15, cd_empresa_conv_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 16, cd_categoria_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 17, ie_valor_w);
	      	i := i  + 1;
		ie_incluir_w := 'S';
		
		begin
			select CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT   ie_incluir_w
			from	estrutura_material_v x
			where	1 = 1
			and (	x.cd_material			= cd_material_w
				or	x.cd_classe_material	= cd_classe_material_w
				or	x.cd_grupo_material	= cd_grupo_material_w
				or	x.cd_subgrupo_material	= cd_subgrupo_material_w)
			and (	cd_material_p		= cd_material_w
				or (coalesce(Obter_estrutura_material(cd_material_w,'C'), 0)	= coalesce(cd_classe_mat_p,'0') or cd_classe_material_w = cd_classe_mat_p)
				or (coalesce(Obter_estrutura_material(cd_material_w,'S'), 0)	= coalesce(cd_subgrupo_mat_p,'0') or cd_subgrupo_material_w = cd_subgrupo_mat_p)
				or (coalesce(Obter_estrutura_material(cd_material_w,'G'), 0)	= coalesce(cd_grupo_mat_p,'0') or cd_grupo_material_w = cd_grupo_mat_p));			
		end;

		if	((ie_incluir_w = 'S')
			and ((cd_material_p IS NOT NULL AND cd_material_p::text <> '')
			  	or (cd_grupo_mat_p IS NOT NULL AND cd_grupo_mat_p::text <> '')
				or (cd_subgrupo_mat_p IS NOT NULL AND cd_subgrupo_mat_p::text <> '')
				or (cd_classe_mat_p IS NOT NULL AND cd_classe_mat_p::text <> '')))  then
				
			ie_incluir_w := 'N';
			
			if (cd_material_p IS NOT NULL AND cd_material_p::text <> '')then
				if (cd_material_p = cd_material_w)then
					ie_incluir_w := 'S';
					
				elsif (cd_grupo_material_w IS NOT NULL AND cd_grupo_material_w::text <> '')then
					
					select CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
					into STRICT   ie_incluir_w
					from	Grupo_material d,
						SubGrupo_Material c,
						Classe_material b,
						Material a
					where	a.cd_material 		= cd_material_p
					and   	a.cd_classe_material	= b.cd_classe_material
					and	b.cd_subgrupo_material	= c.cd_subgrupo_material
					and 	c.cd_grupo_material	= cd_grupo_material_w;
					
				elsif (cd_subgrupo_material_w IS NOT NULL AND cd_subgrupo_material_w::text <> '')then
					
					select CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
					into STRICT   ie_incluir_w
					from	Grupo_material d,
						SubGrupo_Material c,
						Classe_material b,
						Material a
					where	a.cd_material 		= cd_material_p
					and   	a.cd_classe_material	= b.cd_classe_material
					and	b.cd_subgrupo_material	= cd_subgrupo_material_w
					and 	c.cd_grupo_material	= d.cd_grupo_material;
				
				elsif (cd_classe_material_w IS NOT NULL AND cd_classe_material_w::text <> '')then
					
					select CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
					into STRICT   ie_incluir_w
					from	Grupo_material d,
						SubGrupo_Material c,
						Classe_material b,
						Material a
					where	a.cd_material 		= cd_material_p
					and   	a.cd_classe_material	= cd_classe_material_w
					and	b.cd_subgrupo_material	= c.cd_subgrupo_material
					and 	c.cd_grupo_material	= d.cd_grupo_material;
				end if;
			
			elsif (cd_grupo_mat_p IS NOT NULL AND cd_grupo_mat_p::text <> '')then

				if (cd_grupo_mat_p = cd_grupo_material_w)then
					ie_incluir_w := 'S';
					
				elsif (cd_subgrupo_material_w IS NOT NULL AND cd_subgrupo_material_w::text <> '')then
					
					select CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
					into STRICT   ie_incluir_w
					from   SubGrupo_Material x
					where  x.cd_grupo_material 	= cd_grupo_mat_p
					and    x.cd_subgrupo_material 	= cd_subgrupo_material_w;	
				
				elsif (cd_classe_material_w IS NOT NULL AND cd_classe_material_w::text <> '')then
					
					select CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
					into STRICT   ie_incluir_w
					from 	Classe_material x,
      						SubGrupo_Material c
					where  c.cd_grupo_material	= cd_grupo_mat_p
					and	   x.cd_subgrupo_material	= c.cd_subgrupo_material
					and    x.cd_classe_material 	= cd_classe_material_w;
				end if;

			elsif (cd_subgrupo_mat_p IS NOT NULL AND cd_subgrupo_mat_p::text <> '')then
				
				if (cd_subgrupo_mat_p = cd_subgrupo_material_w)then
					ie_incluir_w := 'S';

				elsif (cd_classe_material_w IS NOT NULL AND cd_classe_material_w::text <> '')then
					
					select CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
					into STRICT   ie_incluir_w
					from   Classe_material x
					where  x.cd_subgrupo_material 	= cd_subgrupo_mat_p
					and    x.cd_classe_material 	= cd_classe_material_w;
				end if;
					
			elsif (cd_classe_mat_p IS NOT NULL AND cd_classe_mat_p::text <> '')then

				if (cd_classe_mat_p  = cd_classe_material_w)then
					ie_incluir_w := 'S';
				end if;
			end if;
			
		if (ie_valor_w in ('S','F')) then	
			ie_incluir_w := regra_plano_material_valor(nr_seq_regra_w, 	
					    coalesce(cd_estabelecimento_w, cd_estabelecimento_atual_p),
					    cd_convenio_p, 	
					    coalesce(cd_categoria_w, cd_categoria_p),	
					    clock_timestamp(),	
					    coalesce(cd_material_w,cd_material_p),	
					    coalesce(cd_tipo_acomodacao_p, 0),	
					    coalesce(ie_tipo_atendimento_w, ie_tipo_atendimento_p, 0),
					    coalesce(cd_setor_atendimento_w, cd_setor_atendimento_p, 0),	
					    coalesce(cd_plano_w, cd_plano_p),	
					    null,0,'N','S','N'); 	
		end if;
	
		end if;
		
		if (ie_incluir_w = 'S') then
			CALL insert_w_consulta_cobertura(null, cd_categoria_w, cd_classe_material_w, cd_classif_setor_w,cd_convenio_p, null, cd_empresa_conv_w, null, null, cd_estabelecimento_w, cd_grupo_material_w, null, cd_material_w, cd_plano_w, null, cd_setor_atendimento_w, cd_subgrupo_material_w, dt_fim_vigencia_w, dt_inicio_vigencia_w, null, null, trim(both ie_regra_w), null, ie_regra_plano_w, ie_tipo_atendimento_w, nm_usuario_p, i, null, null, null, nr_seq_regra_w, ie_tipo_item_p);
		end if;
		
	    END LOOP;
	DBMS_SQL.close_cursor(cursor_w);
	COMMIT;

elsif (ie_tipo_item_p = 2) then

	ds_sql_w	:=  	'''M'' ie_regra, 
				a.nr_sequencia nr_seq_regra,
				a.ie_regra ie_regra_plano, 
				a.cd_plano,
				a.cd_classif_setor, 
				a.ie_tipo_atendimento,
				a.dt_inicio_vigencia,
				a.dt_fim_vigencia,
				a.cd_setor_atendimento,
				a.cd_estabelecimento, 
				a.cd_empresa_conv,
				a.cd_categoria';

	ds_from_w  := 	'from	regra_convenio_plano_mat a';
	
	ds_where_w := 	'where	a.cd_convenio = :cd_convenio
			 and	a.cd_grupo_material is null
			 and	a.cd_subgrupo_material is null
			 and	a.cd_classe_material is null
			 and	a.cd_material is null
			 and	a.cd_plano is not null ';
	
	if (cd_plano_p IS NOT NULL AND cd_plano_p::text <> '') then
		lista_categ_plano_w := null;
		if (coalesce(cd_categoria_p::text, '') = '') then
				for c_categoria_plano_w in c_categoria_plano loop
					if (coalesce(lista_categ_plano_w::text, '') = '') then
						lista_categ_plano_w :=   c_categoria_plano_w.cd_categoria;
					else
						lista_categ_plano_w := lista_categ_plano_w|| ',' ||c_categoria_plano_w.cd_categoria;
					end if;
				end loop;
				
				if (lista_categ_plano_w IS NOT NULL AND lista_categ_plano_w::text <> '') then
					ds_where_w := ds_where_w || ' and ((a.cd_categoria is null) or (obter_se_contido(a.cd_categoria,:cd_categ_plano) = ''S''))';
				end if;
		end if;
		ds_where_w := ds_where_w || ' and a.cd_plano = :cd_plano';
	end if;
	
	if (ie_tipo_atendimento_p IS NOT NULL AND ie_tipo_atendimento_p::text <> '') then
		ds_where_w := ds_where_w || ' and a.ie_tipo_atendimento = :ie_tipo_atendimento';
	end if;
	
	if (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then
		ds_where_w := ds_where_w || ' and a.cd_setor_atendimento = :cd_setor_atendimento';
	end if;
	
	if (cd_estab_filtro_p IS NOT NULL AND cd_estab_filtro_p::text <> '') then
		ds_where_w := ds_where_w || ' and a.cd_estabelecimento = :cd_estab_filtro';
	end if;

    if ((obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento) IS NOT NULL AND (obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento))::text <> '')) then
		ds_where_w := ds_where_w || ' and nvl(a.cd_empresa, nvl(obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento),0)) = nvl(obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento),0)';
	end if;
	
	ds_order_by_w := ' ORDER BY 	nvl(a.ds_mascara_carteira,''X''),
					nvl(a.cd_categoria,''0''),
					nvl(a.ie_tipo_atendimento,0),
					nvl(a.ie_carater_inter_sus,''X''),
					nvl(a.ie_clinica,0),
					nvl(a.cd_empresa_conv,0),
					nvl(a.cd_perfil,0)';

	cursor_w := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(cursor_w, 'SELECT' || ' ' || ds_sql_w || ' ' || ds_from_w || ' ' || ds_where_w || ' ' || ds_order_by_w,DBMS_SQL.NATIVE);
	DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_convenio', cd_convenio_p);	

	if (cd_plano_p IS NOT NULL AND cd_plano_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_plano', cd_plano_p);
	end if;
	
	if (ie_tipo_atendimento_p IS NOT NULL AND ie_tipo_atendimento_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'ie_tipo_atendimento', ie_tipo_atendimento_p);
	end if;
	
	if (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_setor_atendimento', cd_setor_atendimento_p);
	end if;
	
	if (cd_estab_filtro_p IS NOT NULL AND cd_estab_filtro_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_estab_filtro', cd_estab_filtro_p);	
	end if;
	
	if (lista_categ_plano_w IS NOT NULL AND lista_categ_plano_w::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_categ_plano', lista_categ_plano_w);		
	end if;
	
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 1, ie_regra_w, 5);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 2, nr_seq_regra_w);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 3, ie_regra_plano_w,2);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 4, cd_plano_w, 10);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 5, cd_classif_setor_w,2);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 6, ie_tipo_atendimento_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 7, dt_inicio_vigencia_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 8, dt_fim_vigencia_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 9, cd_setor_atendimento_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 10, cd_estabelecimento_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 11, cd_empresa_conv_w);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 12, cd_categoria_w, 10);
	i := 0;
	
	vl_retorno_cursor_w := DBMS_SQL.EXECUTE(cursor_w);
	   LOOP
	      vl_retorno_cursor_w := DBMS_SQL.FETCH_ROWS(cursor_w);
	      IF (vl_retorno_cursor_w = 0) THEN
	         EXIT;
	      END IF;
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 1, ie_regra_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 2, nr_seq_regra_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 3, ie_regra_plano_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 4, cd_plano_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 5, cd_classif_setor_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 6, ie_tipo_atendimento_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 7, dt_inicio_vigencia_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 8, dt_fim_vigencia_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 9, cd_setor_atendimento_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 10, cd_estabelecimento_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 11, cd_empresa_conv_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 12, cd_categoria_w);
		i := i  + 1;
		
		CALL insert_w_consulta_cobertura(null, cd_categoria_w, null, cd_classif_setor_w, cd_convenio_p, null, cd_empresa_conv_w, null, null, cd_estabelecimento_w, null, null, null, cd_plano_w, null, cd_setor_atendimento_w, null, dt_fim_vigencia_w, dt_inicio_vigencia_w, null, null, ie_regra_w, null, ie_regra_plano_w, ie_tipo_atendimento_w, nm_usuario_p, i, null, null, null, nr_seq_regra_w, ie_tipo_item_p);
	   END LOOP;
	
	   DBMS_SQL.close_cursor(cursor_w);
	   COMMIT;
	
	cursor_w := 0;
	ds_sql_w	:=  	'''P'' ie_regra, 
				a.nr_sequencia nr_seq_regra, 
				a.ie_regra ie_regra_plano, 
				a.cd_categoria, 
				a.cd_plano, 
				a.cd_classif_setor, 
				a.ie_tipo_atendimento, 
				a.dt_inicio_vigencia, 
				a.dt_fim_vigencia, 
				a.cd_setor_atendimento, 
				a.cd_estabelecimento, 
				a.nr_seq_classif_atend, 
				a.cd_empresa_conv';

	ds_from_w  := 	'from	regra_convenio_plano a';
	ds_where_w := 	'where	a.cd_convenio = :cd_convenio
			 and		a.cd_area_procedimento is null
			 and		a.cd_especialidade_proc is null
			 and		a.cd_grupo_proc is null
			 and		a.cd_procedimento	is null
			 and		a.nr_seq_proc_interno is null
			 and		a.nr_seq_exame is null
	 		 and  	 	a.cd_plano  is not null';
			
			 
	if (cd_categoria_p IS NOT NULL AND cd_categoria_p::text <> '') then
		ds_where_w := ds_where_w || ' and ((a.cd_categoria is null) or (a.cd_categoria = :cd_categoria))';
	end if;
	
	if (cd_plano_p IS NOT NULL AND cd_plano_p::text <> '') then
		lista_categ_plano_w := null;
		if (coalesce(cd_categoria_p::text, '') = '') then
				for c_categoria_plano_w in c_categoria_plano loop
					if (coalesce(lista_categ_plano_w::text, '') = '') then
						lista_categ_plano_w :=   c_categoria_plano_w.cd_categoria;
					else
						lista_categ_plano_w := lista_categ_plano_w|| ',' ||c_categoria_plano_w.cd_categoria;
					end if;
				end loop;
				
				if (lista_categ_plano_w IS NOT NULL AND lista_categ_plano_w::text <> '') then
					ds_where_w := ds_where_w || ' and ((a.cd_categoria is null) or (obter_se_contido(a.cd_categoria,:cd_categ_plano) = ''S''))';
				end if;
		end if;
		ds_where_w := ds_where_w || ' and ((a.cd_plano is null) or (a.cd_plano = :cd_plano))';
	end if;
	
	if (ie_tipo_atendimento_p IS NOT NULL AND ie_tipo_atendimento_p::text <> '') then
		ds_where_w := ds_where_w || ' and ((a.ie_tipo_atendimento is null) or (a.ie_tipo_atendimento = :ie_tipo_atendimento))';
	end if;
	
	if (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then
		ds_where_w := ds_where_w || ' and ((a.cd_setor_atendimento is null) or (a.cd_setor_atendimento = :cd_setor_atendimento))';	
	end if;	
	
	if (cd_tipo_acomodacao_p IS NOT NULL AND cd_tipo_acomodacao_p::text <> '') then
		ds_where_w := ds_where_w || ' and ((a.cd_tipo_acomodacao is null) or (a.cd_tipo_acomodacao = :cd_tipo_acomodacao))';
	end if;	

	if (cd_estab_filtro_p IS NOT NULL AND cd_estab_filtro_p::text <> '') then
		ds_where_w := ds_where_w || ' and ((a.cd_estabelecimento is null) or (a.cd_estabelecimento = :cd_estab_filtro))';
	end if;		

    if ((obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento) IS NOT NULL AND (obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento))::text <> '')) then
		ds_where_w := ds_where_w || ' and nvl(a.cd_empresa, nvl(obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento),0)) = nvl(obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento),0)';
	end if;

	ds_order_by_w := ' ORDER BY 	a.nr_sequencia,
					a.cd_plano';

	cursor_w := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(cursor_w, 'SELECT' || ' ' || ds_sql_w || ' ' || ds_from_w || ' ' || ds_where_w || ' ' || ds_order_by_w,DBMS_SQL.NATIVE);
	DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_convenio', cd_convenio_p);
	
	if (cd_plano_p IS NOT NULL AND cd_plano_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_plano', cd_plano_p);
	end if;
	
	if (ie_tipo_atendimento_p IS NOT NULL AND ie_tipo_atendimento_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'ie_tipo_atendimento', ie_tipo_atendimento_p);
	end if;
	
	if (cd_tipo_acomodacao_p IS NOT NULL AND cd_tipo_acomodacao_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_tipo_acomodacao', cd_tipo_acomodacao_p);
	end if;	
	
	if (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_setor_atendimento', cd_setor_atendimento_p);
	end if;
	
	if (cd_estab_filtro_p IS NOT NULL AND cd_estab_filtro_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_estab_filtro', cd_estab_filtro_p);	
	end if;
	
	if (lista_categ_plano_w IS NOT NULL AND lista_categ_plano_w::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_categ_plano', lista_categ_plano_w);		
	end if;
	
	if (cd_categoria_p IS NOT NULL AND cd_categoria_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_categoria', cd_categoria_p);
	end if;
	
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 1, ie_regra_w, 5);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 2, nr_seq_regra_w);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 3, ie_regra_plano_w,2);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 4, cd_categoria_w, 10);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 5, cd_plano_w, 10);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 6, cd_classif_setor_w,2);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 7, ie_tipo_atendimento_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 8, dt_inicio_vigencia_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 9, dt_fim_vigencia_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 10, cd_setor_atendimento_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 11, cd_estabelecimento_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 12, nr_seq_classif_atend_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 13, cd_empresa_conv_w);
	
	vl_retorno_cursor_w := DBMS_SQL.EXECUTE(cursor_w);
	 LOOP
	      vl_retorno_cursor_w := DBMS_SQL.FETCH_ROWS(cursor_w);
	      IF (vl_retorno_cursor_w = 0) THEN
	         EXIT;
	      END IF;
	
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 1, ie_regra_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 2, nr_seq_regra_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 3, ie_regra_plano_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 4, cd_categoria_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 5, cd_plano_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 6, cd_classif_setor_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 7, ie_tipo_atendimento_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 8, dt_inicio_vigencia_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 9, dt_fim_vigencia_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 10, cd_setor_atendimento_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 11, cd_estabelecimento_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 12, nr_seq_classif_atend_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 13, cd_empresa_conv_w);
		i := i  + 1;
		
		CALL insert_w_consulta_cobertura(null, cd_categoria_w, null, cd_classif_setor_w, cd_convenio_p, null, cd_empresa_conv_w, null, null, cd_estabelecimento_w, null, null, null, cd_plano_w, cd_procedimento_w, null, null, dt_fim_vigencia_w, dt_inicio_vigencia_w, null, null, ie_regra_w, null, ie_regra_plano_w, ie_tipo_atendimento_w, nm_usuario_p, i, nr_seq_classif_atend_w, null, null, nr_seq_regra_w, ie_tipo_item_p);
	 END LOOP;

	DBMS_SQL.close_cursor(cursor_w);
	COMMIT;
	
	cursor_w := 0;
	ds_sql_w	:=  	'''PR'' ie_regra, 
				a.cd_plano';
	ds_from_w  := 	'from	convenio_plano a';
	ds_where_w := 	'where	a.cd_convenio = :cd_convenio
			 and	a.ie_situacao = ''A''';
			
	if (cd_plano_p IS NOT NULL AND cd_plano_p::text <> '') then
		ds_where_w := ds_where_w || ' and a.cd_plano = :cd_plano';
	end if;
	
	ds_where_w := ds_where_w || ' and		not exists
						(select	1
						from	regra_convenio_plano b,
							regra_convenio_plano c
						where	b.cd_plano	= a.cd_plano
						and  	b.cd_plano	= c.cd_plano
						and	b.cd_convenio	= a.cd_convenio
						and 	b.cd_convenio	= c.cd_convenio)';
			
	ds_order_by_w := ' ORDER BY 	a.cd_plano';
	
	cursor_w := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(cursor_w, 'SELECT' || ' ' || ds_sql_w || ' ' || ds_from_w || ' ' || ds_where_w || ' ' || ds_order_by_w,DBMS_SQL.NATIVE);
	DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_convenio', cd_convenio_p);
	
	if (cd_plano_p IS NOT NULL AND cd_plano_p::text <> '') then	
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_plano', cd_plano_p);	
	end if;
	
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 1, ie_regra_w, 5);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 2, cd_plano_w, 10);
	
	vl_retorno_cursor_w := DBMS_SQL.EXECUTE(cursor_w);
	
	LOOP
	    vl_retorno_cursor_w := DBMS_SQL.FETCH_ROWS(cursor_w);
	    IF (vl_retorno_cursor_w = 0) THEN
		EXIT;
	    END IF;
	    	DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 1, ie_regra_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 2, cd_plano_w);
		i := i  + 1;
		
		CALL insert_w_consulta_cobertura(null, null, null, null, cd_convenio_p, null, null, null, null, null, null, null, null, cd_plano_w, null, null, null, null, null, null, null, null, null, null, null, nm_usuario_p, i, null, null, null, null, ie_tipo_item_p);
	END LOOP;

	DBMS_SQL.close_cursor(cursor_w);
	COMMIT;
	
elsif (ie_tipo_item_p = 3) then

	ds_sql_w	:=  	'''RL'' ie_regra, 
				a.nr_sequencia nr_seq_regra, 
				a.ie_libera_bloqueia,
				a.cd_categoria, 
				a.cd_plano, 
				a.ie_tipo_atendimento, 
				a.dt_inicio_vigencia, 
				a.dt_final_vigencia, 
				a.cd_setor_atendimento, 
				a.cd_estabelecimento,  
				a.cd_empresa, 
				a.nr_seq_classificacao,
				a.nr_seq_cobertura,
				a.cd_especialidade_medica';

	ds_from_w  := 'from	conv_regra_atend_setor a ';
	ds_where_w := '  where	a.cd_convenio = :cd_convenio ';
	
	if (cd_categoria_p IS NOT NULL AND cd_categoria_p::text <> '') then
		ds_where_w := ds_where_w || ' and ((a.cd_categoria is null) or (a.cd_categoria = :cd_categoria))';
	end if;
	
	if (cd_plano_p IS NOT NULL AND cd_plano_p::text <> '') then
		lista_categ_plano_w := null;
		if (coalesce(cd_categoria_p::text, '') = '') then
				for c_categoria_plano_w in c_categoria_plano loop
					if (coalesce(lista_categ_plano_w::text, '') = '') then
						lista_categ_plano_w :=   c_categoria_plano_w.cd_categoria;
					else
						lista_categ_plano_w := lista_categ_plano_w|| ',' ||c_categoria_plano_w.cd_categoria;
					end if;
				end loop;
				
				if (lista_categ_plano_w IS NOT NULL AND lista_categ_plano_w::text <> '') then
					ds_where_w := ds_where_w || ' and ((a.cd_categoria is null) or (obter_se_contido(a.cd_categoria,:cd_categ_plano) = ''S''))';
				end if;
		end if;
		ds_where_w := ds_where_w || ' and ((a.cd_plano is null) or (a.cd_plano = :cd_plano))';
	end if;
	
	if (ie_tipo_atendimento_p IS NOT NULL AND ie_tipo_atendimento_p::text <> '') then
		ds_where_w := ds_where_w || ' and ((a.ie_tipo_atendimento is null) or (a.ie_tipo_atendimento = :ie_tipo_atendimento))';
	end if;
	
	if (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then
		ds_where_w := ds_where_w || ' and ((a.cd_setor_atendimento is null) or (a.cd_setor_atendimento = :cd_setor_atendimento))';	
	end if;	
	
	if (cd_tipo_acomodacao_p IS NOT NULL AND cd_tipo_acomodacao_p::text <> '') then
		ds_where_w := ds_where_w || ' and ((a.cd_tipo_acomodacao is null) or (a.cd_tipo_acomodacao = :cd_tipo_acomodacao))';
	end if;	

	if (cd_estab_filtro_p IS NOT NULL AND cd_estab_filtro_p::text <> '') then
		ds_where_w := ds_where_w || ' and ((a.cd_estabelecimento is null) or (a.cd_estabelecimento = :cd_estab_filtro))';
	end if;	
	
	if (cd_empresa_p IS NOT NULL AND cd_empresa_p::text <> '') then
		ds_where_w := ds_where_w || ' and a.cd_empresa = :cd_empresa';
	end if;
	
	ds_order_by_w := ' ORDER BY 	a.cd_plano,
					a.nr_sequencia,
					nvl(a.cd_pessoa_fisica,''0''),
					nvl(a.cd_categoria,''0''),
					nvl(a.ie_tipo_atendimento,0),
					nvl(a.ie_clinica,0),
					nvl(a.qt_idade_min,0),
					nvl(a.qt_idade_max,999)';

	cursor_w := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(cursor_w, 'SELECT' || ' ' || ds_sql_w || ' ' || ds_from_w || ' ' || ds_where_w || ' ' || ds_order_by_w,DBMS_SQL.NATIVE);
	DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_convenio', cd_convenio_p);	

	if (cd_empresa_p IS NOT NULL AND cd_empresa_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_empresa', cd_empresa_p);	
	end if;
	
	if (ie_tipo_atendimento_p IS NOT NULL AND ie_tipo_atendimento_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'ie_tipo_atendimento', ie_tipo_atendimento_p);
	end if;
	
	if (cd_tipo_acomodacao_p IS NOT NULL AND cd_tipo_acomodacao_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_tipo_acomodacao', cd_tipo_acomodacao_p);
	end if;	
	
	if (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_setor_atendimento', cd_setor_atendimento_p);
	end if;	
	
	if (cd_plano_p IS NOT NULL AND cd_plano_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_plano', cd_plano_p);
	end if;
	
	if (cd_estab_filtro_p IS NOT NULL AND cd_estab_filtro_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_estab_filtro', cd_estab_filtro_p);	
	end if;
	
	if (lista_categ_plano_w IS NOT NULL AND lista_categ_plano_w::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_categ_plano', lista_categ_plano_w);		
	end if;
	
	if (cd_categoria_p IS NOT NULL AND cd_categoria_p::text <> '') then
		DBMS_SQL.BIND_VARIABLE(cursor_w, 'cd_categoria', cd_categoria_p);
	end if;
	
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 1, ie_regra_w, 5);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 2, nr_seq_regra_w);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 3, ie_libera_bloqueia_w,2);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 4, cd_categoria_w, 10);
	DBMS_SQL.DEFINE_COLUMN_CHAR(cursor_w, 5, cd_plano_w, 10);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 6, ie_tipo_atendimento_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 7, dt_inicio_vigencia_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 8, dt_fim_vigencia_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 9, cd_setor_atendimento_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 10, cd_estabelecimento_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 11, cd_empresa_conv_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 12, nr_seq_classif_atend_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 13, nr_seq_cobertura_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_w, 14, cd_especialidade_medic_w);	
	i := 0;
	
	vl_retorno_cursor_w := DBMS_SQL.EXECUTE(cursor_w);
	LOOP
	    vl_retorno_cursor_w := DBMS_SQL.FETCH_ROWS(cursor_w);
	    IF (vl_retorno_cursor_w = 0) THEN
		EXIT;
	    END IF;
	    	DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 1, ie_regra_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 2, nr_seq_regra_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 3, ie_libera_bloqueia_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 4, cd_categoria_w);
		DBMS_SQL.COLUMN_VALUE_CHAR(cursor_w, 5, cd_plano_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 6, ie_tipo_atendimento_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 7, dt_inicio_vigencia_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 8, dt_fim_vigencia_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 9, cd_setor_atendimento_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 10, cd_estabelecimento_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 11, cd_empresa_conv_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 12, nr_seq_classif_atend_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 13, nr_seq_cobertura_w);
		DBMS_SQL.COLUMN_VALUE(cursor_w, 14, cd_especialidade_medic_w);		
		i := i  + 1;
		
		CALL insert_w_consulta_cobertura(null, cd_categoria_w, null, cd_classif_setor_w, cd_convenio_p, null, cd_empresa_conv_w, cd_especialidade_medic_w, null, cd_estabelecimento_w, null, null, null, cd_plano_w, null, cd_setor_atendimento_w, null, dt_fim_vigencia_w, dt_inicio_vigencia_w, ie_libera_bloqueia_w, null, trim(both ie_regra_w), null, ie_regra_plano_w, ie_tipo_atendimento_w, nm_usuario_p, i, nr_seq_classif_atend_w, nr_seq_cobertura_w, null, nr_seq_regra_w, ie_tipo_item_p);
	END LOOP;
	DBMS_SQL.close_cursor(cursor_w);
	COMMIT;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_consulta_cobertura ( nm_usuario_p text, cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_plano_p text, ie_tipo_atendimento_p bigint, cd_tipo_acomodacao_p bigint, cd_setor_atendimento_p bigint, cd_especialidade_proc_p bigint, cd_area_procedimento_p bigint, cd_grupo_proc_p bigint, nr_seq_proc_interno_p bigint, cd_empresa_p bigint, ie_tipo_item_p bigint, cd_estab_filtro_p bigint, ie_regra_preco_p text default 'N', ie_considera_estrutura_p text default 'N', ie_vigencia_p text default 'N', cd_material_p bigint DEFAULT NULL, cd_grupo_mat_p bigint DEFAULT NULL, cd_subgrupo_mat_p bigint DEFAULT NULL, cd_classe_mat_p bigint DEFAULT NULL, cd_estabelecimento_atual_p bigint DEFAULT NULL, cd_categoria_p text DEFAULT NULL) FROM PUBLIC;

