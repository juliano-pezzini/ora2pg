-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_valida_primeiro_acesso_web ( ie_tipo_login_p text, ds_login_p text, ds_senha_md5_p text, ds_senha_limpa_p text, ds_senha_nova_p text, ie_validou_p INOUT text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Validar o primeiro acesso do usuario no portal e inserir  nova senha.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  x ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 

ie_validou_w				varchar(255) := 'OK';
ds_tec_w				pls_usuario_web.ds_tec%type;
ds_senha_sha256_w			pls_usuario_web.ds_senha%type;
nr_seq_usuario_w			pls_usuario_web.nr_sequencia%type;
dt_alteracao_senha_w			pls_usuario_web.dt_alteracao_senha%type;
ds_salt_w				varchar(255);
ie_exige_troca_senha_w			varchar(1);
vl_parametros_w					varchar(4000);
cd_estabelecimento_w			estabelecimento.cd_estabelecimento%type;
nm_usuario_web_w		varchar(15);
qt_senha_diferente_w	bigint := 0;


BEGIN
if ((cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and cd_estabelecimento_p > 0) then
	cd_estabelecimento_w	:= cd_estabelecimento_p;
end if;

if (ie_tipo_login_p = 'P') then
	begin	
		select 	max(ds_tec)
		into STRICT	ds_tec_w
		from	pls_usuario_web
		where   upper(nm_usuario_web) 	= upper(ds_login_p)
		and     ie_situacao 		= 'A'
		and (coalesce(cd_estabelecimento_w::text, '') = ''
		or	cd_estabelecimento	= cd_estabelecimento_w);		

		
		if (ds_tec_w IS NOT NULL AND ds_tec_w::text <> '') then		
			ds_senha_sha256_w	:= obter_sha2(upper(ds_senha_limpa_p) || ds_tec_w, 256);
		end if;		
		-- verifica se existe usuario com a senha digitada			
		select	a.nr_sequencia,
				a.dt_alteracao_senha,
				substr(nm_usuario_web,1,15)
		into STRICT	nr_seq_usuario_w,
				dt_alteracao_senha_w,
				nm_usuario_web_w
		from	pls_usuario_web a
		where	upper(a.nm_usuario_web) = upper(ds_login_p)
		and     a.ie_situacao	= 'A'
		and (a.ds_senha 		= ds_senha_sha256_w 
		or 	a.ds_senha		= ds_senha_md5_p
		or 	a.ds_senha 		= ds_senha_limpa_p)
		and (coalesce(cd_estabelecimento_w::text, '') = '' 
		or	a.cd_estabelecimento	= cd_estabelecimento_w);		
	
		--verifica o parametro [34] - Ao logar a primeira vez no portal exigir que o usuario troque a senha		
		vl_parametros_w := pls_obter_parametros_funcao(null, null, nr_seq_usuario_w, cd_estabelecimento_w, '1246', null, 'P', null, null, null, vl_parametros_w);
	
		ie_exige_troca_senha_w	:= pls_obter_valor_parametro(34, vl_parametros_w);
		
		if (ie_exige_troca_senha_w = 'S') then
			if (coalesce(dt_alteracao_senha_w::text, '') = '' or dt_alteracao_senha_w = '') then			
				if (ds_senha_nova_p IS NOT NULL AND ds_senha_nova_p::text <> '') then

					qt_senha_diferente_w := pls_gerencia_senha_web_pck.obter_regra_senha_diferente(cd_estabelecimento_w);
				
					SELECT * FROM pls_gerencia_senha_web_pck.pls_alterar_senha_usuario_web(ds_senha_nova_p, nr_seq_usuario_w, ie_tipo_login_p, qt_senha_diferente_w, nm_usuario_web_w, cd_estabelecimento_w, ds_senha_sha256_w, ds_salt_w) INTO STRICT ds_senha_sha256_w, ds_salt_w;				
					ie_validou_w	:= 'VALIDACAO_OK';
				else				
					ie_validou_w	:= 'NOVA_SENHA';
				end if;
			end if;
		end if;	
	exception
	when others then
		ie_validou_w	:= 'OK';	
	end;		
elsif (ie_tipo_login_p = 'E') then
	begin
		select 	max(ds_tec)
		into STRICT	ds_tec_w
		from	pls_estipulante_web
		where   upper(nm_usuario_web) 	= upper(ds_login_p)
		and     ie_situacao 	= 'A'
		and (coalesce(cd_estabelecimento_w::text, '') = ''
		or	cd_estabelecimento	= cd_estabelecimento_w);		
		
		if (ds_tec_w IS NOT NULL AND ds_tec_w::text <> '') then
			ds_senha_sha256_w	:= obter_sha2(upper(ds_senha_limpa_p) || ds_tec_w, 256);
		end if;		
					
		select	a.nr_sequencia,
				a.dt_alteracao_senha,
				substr(nm_usuario_web,1,15)
		into STRICT	nr_seq_usuario_w,
				dt_alteracao_senha_w,
				nm_usuario_web_w
		from	pls_estipulante_web a
		where	upper(a.nm_usuario_web) = upper(ds_login_p)
		and     a.ie_situacao	= 'A'
		and (a.ds_senha 		= ds_senha_sha256_w 
		or 	a.ds_senha		= ds_senha_md5_p
		or 	a.ds_senha 		= ds_senha_limpa_p)
		and (coalesce(cd_estabelecimento_w::text, '') = '' 
		or	a.cd_estabelecimento	= cd_estabelecimento_w);
		
		--verifica o parametro [34] - Ao logar a primeira vez no portal exigir que o usuario troque a senha		
		vl_parametros_w := pls_obter_parametros_funcao(null, nr_seq_usuario_w, null, cd_estabelecimento_w, '1246', null, 'E', null, null, null, vl_parametros_w);	
		ie_exige_troca_senha_w	:= pls_obter_valor_parametro(34, vl_parametros_w);
		
		if (ie_exige_troca_senha_w = 'S') then
			if (coalesce(dt_alteracao_senha_w::text, '') = '' or dt_alteracao_senha_w = '') then			
				if (ds_senha_nova_p IS NOT NULL AND ds_senha_nova_p::text <> '') then	
					qt_senha_diferente_w := pls_gerencia_senha_web_pck.obter_regra_senha_diferente(cd_estabelecimento_w);
				
					SELECT * FROM pls_gerencia_senha_web_pck.pls_alterar_senha_usuario_web(ds_senha_nova_p, nr_seq_usuario_w, ie_tipo_login_p, qt_senha_diferente_w, nm_usuario_web_w, cd_estabelecimento_w, ds_senha_sha256_w, ds_salt_w) INTO STRICT ds_senha_sha256_w, ds_salt_w;
					ie_validou_w	:= 'VALIDACAO_OK';
				else
					ie_validou_w	:= 'NOVA_SENHA';
				end if;
			end if;
		end if;	
	exception
	when others then
		ie_validou_w	:= 'OK';
	end;
elsif (ie_tipo_login_p = 'GC') then
	begin	
		select 	max(ds_tec)
		into STRICT	ds_tec_w
		from	pls_grupo_contrato_web
		where   upper(nm_usuario_web) 	= upper(ds_login_p)
		and     ie_situacao 		= 'A'
		and (coalesce(cd_estabelecimento_w::text, '') = ''
		or	cd_estabelecimento	= cd_estabelecimento_w);

		if (ds_tec_w IS NOT NULL AND ds_tec_w::text <> '') then		
			ds_senha_sha256_w	:= obter_sha2(upper(ds_senha_limpa_p) || ds_tec_w, 256);
		end if;		
		-- verifica se existe usuario com a senha digitada			
		select	a.nr_sequencia,
				a.dt_alteracao_senha,
				substr(nm_usuario_web,1,15)
		into STRICT	nr_seq_usuario_w,
				dt_alteracao_senha_w,
				nm_usuario_web_w
		from	pls_grupo_contrato_web a
		where	upper(a.nm_usuario_web) = upper(ds_login_p)
		and     a.ie_situacao	= 'A'
		and (a.ds_senha 		= ds_senha_sha256_w 
		or 	a.ds_senha		= ds_senha_md5_p
		or 	a.ds_senha 		= ds_senha_limpa_p)
		and (coalesce(cd_estabelecimento_w::text, '') = '' 
		or	a.cd_estabelecimento	= cd_estabelecimento_w);
		--verifica o parametro [34] - Ao logar a primeira vez no portal exigir que o usuario troque a senha		
		vl_parametros_w := pls_obter_parametros_funcao(null, null, null, cd_estabelecimento_w, '1246', null, 'GC', null, null, nr_seq_usuario_w, vl_parametros_w);
		
		ie_exige_troca_senha_w	:= pls_obter_valor_parametro(34, vl_parametros_w);
		
		if (ie_exige_troca_senha_w = 'S') then
			if (coalesce(dt_alteracao_senha_w::text, '') = '' or dt_alteracao_senha_w = '') then			
				if (ds_senha_nova_p IS NOT NULL AND ds_senha_nova_p::text <> '') then				
					qt_senha_diferente_w := pls_gerencia_senha_web_pck.obter_regra_senha_diferente(cd_estabelecimento_w);
				
					SELECT * FROM pls_gerencia_senha_web_pck.pls_alterar_senha_usuario_web(ds_senha_nova_p, nr_seq_usuario_w, ie_tipo_login_p, qt_senha_diferente_w, nm_usuario_web_w, cd_estabelecimento_w, ds_senha_sha256_w, ds_salt_w) INTO STRICT ds_senha_sha256_w, ds_salt_w;
					ie_validou_w	:= 'VALIDACAO_OK';
				else				
					ie_validou_w	:= 'NOVA_SENHA';
				end if;
			end if;
		end if;	
	exception
	when others then
		ie_validou_w	:= 'OK';
	end;
elsif (ie_tipo_login_p = 'CO') then
	begin	
		select 	max(ds_tec)
		into STRICT	ds_tec_w
		from	pls_cooperado_web
		where   upper(nm_usuario_web) 	= upper(ds_login_p)
		and     ie_situacao 		= 'A'
		and (coalesce(cd_estabelecimento_w::text, '') = ''
		or	cd_estabelecimento	= cd_estabelecimento_w);		

		
		if (ds_tec_w IS NOT NULL AND ds_tec_w::text <> '') then		
			ds_senha_sha256_w	:= obter_sha2(upper(ds_senha_limpa_p) || ds_tec_w, 256);
		end if;		
		-- verifica se existe usuario com a senha digitada			
		select	a.nr_sequencia,
			    a.dt_alteracao_senha,
				substr(nm_usuario_web,1,15)
		into STRICT	nr_seq_usuario_w,
				dt_alteracao_senha_w,
				nm_usuario_web_w
		from	pls_cooperado_web a
		where	upper(a.nm_usuario_web) = upper(ds_login_p)
		and     a.ie_situacao	= 'A'
		and (a.ds_senha 		= ds_senha_sha256_w 
		or 		a.ds_senha		= ds_senha_md5_p
		or 		a.ds_senha 		= ds_senha_limpa_p)
		and (coalesce(cd_estabelecimento_w::text, '') = '' 
		or		a.cd_estabelecimento	= cd_estabelecimento_w);		
	
		--verifica o parametro [34] - Ao logar a primeira vez no portal exigir que o usuario troque a senha		
		vl_parametros_w := pls_obter_parametros_funcao(null, null, null, cd_estabelecimento_w, '1246', null, 'CO', null, null, null, vl_parametros_w);
	
		ie_exige_troca_senha_w	:= pls_obter_valor_parametro(34, vl_parametros_w);
		
		if (ie_exige_troca_senha_w = 'S') then
			if (coalesce(dt_alteracao_senha_w::text, '') = '' or dt_alteracao_senha_w = '') then			
				if (ds_senha_nova_p IS NOT NULL AND ds_senha_nova_p::text <> '') then				
					qt_senha_diferente_w := pls_gerencia_senha_web_pck.obter_regra_senha_diferente(cd_estabelecimento_w);
				
					SELECT * FROM pls_gerencia_senha_web_pck.pls_alterar_senha_usuario_web(ds_senha_nova_p, nr_seq_usuario_w, ie_tipo_login_p, qt_senha_diferente_w, nm_usuario_web_w, cd_estabelecimento_w, ds_senha_sha256_w, ds_salt_w) INTO STRICT ds_senha_sha256_w, ds_salt_w;
					ie_validou_w	:= 'VALIDACAO_OK';
				else				
					ie_validou_w	:= 'NOVA_SENHA';
				end if;
			end if;
		end if;	
	exception
	when others then
		ie_validou_w	:= 'OK';	
	end;	
end if;

	ie_validou_p	:= ie_validou_w;
	
commit;	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_valida_primeiro_acesso_web ( ie_tipo_login_p text, ds_login_p text, ds_senha_md5_p text, ds_senha_limpa_p text, ds_senha_nova_p text, ie_validou_p INOUT text, cd_estabelecimento_p bigint) FROM PUBLIC;

