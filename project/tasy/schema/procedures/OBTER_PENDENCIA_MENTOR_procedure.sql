-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_pendencia_mentor ( cd_pessoa_fisica_p bigint, nr_atendimento_p bigint, nr_seq_curativo_p bigint, nr_seq_sinal_vital_p bigint, nr_seq_problema_p bigint, nr_seq_pend_regra_p bigint, qt_registros_w INOUT bigint, qt_registros_justify_w INOUT bigint) AS $body$
DECLARE


qt_registros bigint := 0;
qt_registros_justify bigint := 0;
ie_medico_w varchar(1) := 'N';
cd_pessoa_fisica_w pessoa_fisica.cd_pessoa_fisica%type;


BEGIN

cd_pessoa_fisica_w := to_char(cd_pessoa_fisica_p);

select OBTER_SE_PF_MEDICO(cd_pessoa_fisica_w)
into STRICT ie_medico_w
;

select count(1), sum(CASE WHEN pep_obter_info_pend_mentor(a.nr_seq_pend_pac_acao, 'J')='S' THEN 1  ELSE 0 END )
into STRICT qt_registros, qt_registros_justify
from    gqa_pend_pac_acao_dest a
where ((a.cd_pessoa_fisica = cd_pessoa_fisica_w and a.IE_PROFISSIONAL_MEDICO <> 'S') or ( ie_medico_w = 'S' and a.IE_PROFISSIONAL_MEDICO = 'S' and a.nr_seq_pend_pac_acao not in (SELECT p.nr_seq_pend_pac_acao
                                                                                          from GQA_PEND_PAC_ACAO_DEST p,
                                                                                          gqa_pendencia_pac m,
                                                                                          GQA_PEND_PAC_ACAO v
                                                                                          where   m.nr_sequencia = v.nr_seq_pend_pac
                                                                                          and     (p.dt_ciencia IS NOT NULL AND p.dt_ciencia::text <> '')
                                                                                          and     v.nr_sequencia = p.nr_seq_pend_pac_acao
                                                                                          and     m.nr_atendimento = nr_atendimento_p
                                                                                          and     p.cd_pessoa_fisica = cd_pessoa_fisica_w)))
and coalesce(a.dt_justificativa::text, '') = ''
and a.nr_sequencia in (
    SELECT    c.nr_sequencia
    from    pessoa_fisica d,
            gqa_pendencia_pac a,
            GQA_PEND_PAC_ACAO b,
            GQA_PEND_PAC_ACAO_DEST c
    where    a.nr_sequencia = b.nr_seq_pend_pac
    and        b.nr_sequencia = c.nr_seq_pend_pac_acao
    and        d.cd_pessoa_fisica = a.cd_pessoa_fisica
    and       ((c.cd_pessoa_fisica = cd_pessoa_fisica_w) or ( ie_medico_w = 'S' and c.IE_PROFISSIONAL_MEDICO = 'S'  ))
    and        coalesce(c.dt_encerramento::text, '') = ''
    and        coalesce(b.dt_encerramento::text, '') = ''
    and        ((nr_atendimento_p = 0)    or (  a.nr_atendimento    = nr_atendimento_p))
    and        ((((nr_seq_curativo_p = 0)    or ( a.nr_seq_curativo    = nr_seq_curativo_p))
    and        ((nr_seq_sinal_vital_p = 0) or ( a.nr_seq_sinal_vital = nr_seq_sinal_vital_p))
    and        ((nr_seq_problema_p = 0) or (a.nr_seq_ciap in (select nr_seq_registro
                            from lista_problema_pac_item
                            where nr_seq_problema = nr_seq_problema_p) or
        a.nr_seq_diag_doenca in (select nr_seq_registro
                                from lista_problema_pac_item
                                where nr_seq_problema = nr_seq_problema_p)))
    and        ((nr_seq_pend_regra_p = 0)  or ( a.nr_sequencia       = nr_seq_pend_regra_p))) or (coalesce(c.dt_ciencia::text, '') = '' and a.ie_assistencial = 'S'))     
    and        ((Wheb_assist_pck.obterParametroFuncao(355, 2) = 0) or (a.dt_atualizacao_nrec >= clock_timestamp() - (Wheb_assist_pck.obterParametroFuncao(355, 2)/24)))
    and        ((coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'ja_JP' 
                and (coalesce(nr_seq_pend_regra_p,0) > 0
                or not exists (
                  select 1 
                  from GQA_PENDENCIA gp,
                  gqa_pendencia_regra gpr
                  where gpr.nr_seq_pendencia = gp.nr_sequencia
                  and a.nr_seq_pend_regra = gpr.nr_sequencia
                  and gp.ie_tipo_pendencia = 12))
                ) or coalesce(pkg_i18n.get_user_locale, 'pt_BR') <> 'ja_JP')
    and        ((((b.nr_seq_proc IS NOT NULL AND b.nr_seq_proc::text <> '') or (b.nr_seq_proc_saps IS NOT NULL AND b.nr_seq_proc_saps::text <> ''))
    and not exists (
        select    1
        from    pe_prescricao e
        where    e.nr_seq_pend_pac_acao in (
                                select nr_sequencia
                                from   gqa_pend_pac_acao
                                where  nr_seq_pend_pac = a.nr_sequencia)))
        or ((b.nr_seq_protocolo IS NOT NULL AND b.nr_seq_protocolo::text <> '')      
        and not exists (
            select    1
            from    prescr_medica f
            where    f.nr_seq_pend_pac_acao = b.nr_sequencia))
        or ((b.nr_seq_mprev_programa IS NOT NULL AND b.nr_seq_mprev_programa::text <> '')      
        and not exists (
            select    1
            from    atend_programa_saude f
            where    f.nr_seq_pend_pac_acao = b.nr_sequencia))
        or ((b.nr_seq_protocolo_ger IS NOT NULL AND b.nr_seq_protocolo_ger::text <> '')      
        and not exists (
            select    1
            from    gqa_protocolo_pac f
            where    f.nr_seq_pend_pac_acao = b.nr_sequencia))
        or ((b.nr_seq_escala IS NOT NULL AND b.nr_seq_escala::text <> '')
        and not exists (
            select  1
            from    escala_pend_pac_acao f
                where    f.nr_seq_pend_pac_acao = b.nr_sequencia
        ))
        or ((b.nr_seq_meta IS NOT NULL AND b.nr_seq_meta::text <> '')
        and not exists (
            select  1
            from    tof_meta_atend f
                where    f.nr_seq_pend_pac_acao = b.nr_sequencia
        ))
        or (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'ja_JP' and (a.nr_seq_protocolo_int_pac_even IS NOT NULL AND a.nr_seq_protocolo_int_pac_even::text <> ''))  
    )
 );

qt_registros_w :=  qt_registros;
qt_registros_justify_w :=  qt_registros_justify;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_pendencia_mentor ( cd_pessoa_fisica_p bigint, nr_atendimento_p bigint, nr_seq_curativo_p bigint, nr_seq_sinal_vital_p bigint, nr_seq_problema_p bigint, nr_seq_pend_regra_p bigint, qt_registros_w INOUT bigint, qt_registros_justify_w INOUT bigint) FROM PUBLIC;

