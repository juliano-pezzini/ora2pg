-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_devolucao_lote_prescr ( nr_atendimento_p bigint, nr_seq_lote_p bigint, cd_estabelecimento_p bigint, cd_local_estoque_p bigint, nm_usuario_p text, nr_devolucao_p INOUT bigint, cd_funcao_p bigint) AS $body$
DECLARE


dt_entrada_unidade_w		timestamp;
dt_atendimento_w		timestamp;
cd_pessoa_fisica_devol_w	varchar(10) := '';
cd_unidade_medida_w		varchar(30);
cd_motivo_devolucao_w		varchar(3);
cd_setor_atendimento_w		integer;
cd_material_w			bigint;
cd_local_estoque_w		smallint;
nr_seq_lote_fornec_w		bigint;
nr_sequencia_prescricao_w	integer;
nr_sequencia_w			bigint;
nr_devolucao_w			bigint := 0;
nr_prescricao_w			bigint;
nr_seq_atendimento_w		bigint;
qt_mat_w			double precision;
qt_material_w			double precision;
cd_cgc_fornecedor_w varchar(14);

C01 CURSOR FOR
	SELECT	a.cd_material,
		a.dt_atendimento,
		a.cd_unidade_medida,
		a.nr_sequencia_prescricao,
		a.dt_entrada_unidade,
		a.nr_sequencia,
		a.cd_local_estoque,
		sum(a.qt_material)
	FROM material b, material_em_devolucao_v a
LEFT OUTER JOIN tipo_baixa_prescricao c ON (a.cd_motivo_baixa = c.cd_tipo_baixa AND a.ie_prescr_dev = c.ie_prescricao_devolucao)
WHERE a.cd_material = b.cd_material and a.nr_atendimento = nr_atendimento_p and a.nr_prescricao	= nr_prescricao_w and a.nr_seq_lote_ap = nr_seq_lote_p and not exists ( SELECT 1 from item_devolucao_material_pac where nr_seq_lote = nr_seq_lote_p)   and ((a.qt_material < 0) or (a.cd_local_estoque IS NOT NULL AND a.cd_local_estoque::text <> '') or (c.ie_atualiza_estoque = 'N' AND c.ie_conta_paciente = 'S'))
	having	sum(a.qt_material) > 0 group by
		a.cd_material,
		a.dt_atendimento,
		a.cd_unidade_medida,
		a.nr_sequencia_prescricao,
		a.dt_entrada_unidade,
		a.nr_sequencia,
		a.cd_local_estoque,
		a.nr_seq_lote_ap;


BEGIN
cd_motivo_devolucao_w		:= coalesce(obter_valor_param_usuario(42, 15, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'1');
cd_pessoa_fisica_devol_w	:= obter_pessoa_fisica_usuario(nm_usuario_p,'C');

/* Inserida data no select do cursor 01.
dt_entrada_unidade_w		:= to_date(obter_data_internacao(nr_atendimento_p),'dd/mm/yyyy hh24:mi:ss');*/
/*if	(dt_entrada_unidade_w is null) then
	-20011,'Paciente sem data de entrada no setor!');
end if;*/
	
select	coalesce(nr_prescricao,0),
	coalesce(cd_setor_atendimento,0)
into STRICT	nr_prescricao_w,
	cd_setor_atendimento_w
from	ap_lote
where	nr_sequencia = nr_seq_lote_p;

select	max(a.dt_entrada_unidade)
into STRICT	dt_entrada_unidade_w
from	atend_paciente_unidade a
where	a.nr_atendimento	= nr_atendimento_p;

if (nr_prescricao_w > 0) and (cd_setor_atendimento_w > 0) and (cd_motivo_devolucao_w <> '0') then

	if (coalesce(cd_funcao_p,0)	= 7030) then
		begin
		select	nextval('devolucao_material_pac_seq')
		into STRICT	nr_devolucao_w
		;
		
		if (coalesce(dt_entrada_unidade_w::text, '') = '') then
			--Paciente sem data de entrada no setor!
			CALL wheb_mensagem_pck.exibir_mensagem_abort(248667);
		end if;
		
		insert into devolucao_material_pac(
			nr_devolucao,
			nr_atendimento,
			dt_entrada_unidade,
			dt_devolucao,
			cd_pessoa_fisica_devol,
			cd_setor_atendimento,
			nm_usuario_devol,
			dt_atualizacao,
			nm_usuario_baixa,
			dt_liberacao_baixa,
			dt_baixa_total,
			nm_usuario,
			dt_impressao,
			dt_entrega_fisica)
		values (nr_devolucao_w,
			nr_atendimento_p,
			dt_entrada_unidade_w,
			clock_timestamp(),
			cd_pessoa_fisica_devol_w,
			cd_setor_atendimento_w,
			nm_usuario_p,
			clock_timestamp(),
			null,
			null,
			null,
			nm_usuario_p,
			null, 
			null);
		end;
	else
	
		select	nextval('devolucao_material_pac_seq')
		into STRICT	nr_devolucao_w
		;

		insert into devolucao_material_pac(
			nr_devolucao,
			nr_atendimento,
			dt_entrada_unidade,
			dt_devolucao,
			cd_pessoa_fisica_devol,
			cd_setor_atendimento,
			nm_usuario_devol,
			dt_atualizacao,
			nm_usuario_baixa,
			dt_liberacao_baixa,
			dt_baixa_total,
			nm_usuario,
			dt_impressao,
			dt_entrega_fisica)
		values (nr_devolucao_w,
			nr_atendimento_p,
			dt_entrada_unidade_w,
			clock_timestamp(),
			cd_pessoa_fisica_devol_w,
			cd_setor_atendimento_w,
			nm_usuario_p,
			clock_timestamp(),
			null,
			null,
			null,
			nm_usuario_p,
			null, 
			null);
		
		begin
		open C01;
		loop
		fetch C01 into
			cd_material_w,
			dt_atendimento_w,
			cd_unidade_medida_w,
			nr_sequencia_prescricao_w,
			dt_entrada_unidade_w,
			nr_seq_atendimento_w,
			cd_local_estoque_w,
			qt_material_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
		
			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_sequencia_w
			from	item_devolucao_material_pac
			where	nr_devolucao = nr_devolucao_w;
			
      select max(cd_cgc_fornecedor),
        max(nr_seq_lote_fornec_w)
      into STRICT cd_cgc_fornecedor_w,
      nr_seq_lote_fornec_w
      from material_atend_paciente
      where nr_sequencia = nr_seq_atendimento_w;

			insert into item_devolucao_material_pac(
				nr_devolucao,
				nr_sequencia,
				cd_material,
				dt_atendimento,
				cd_local_estoque,
				cd_unidade_medida,
				cd_motivo_devolucao,
				dt_atualizacao,
				nm_usuario_devol,
				qt_material,
				nr_prescricao,
				nr_sequencia_prescricao,
				ie_tipo_baixa_estoque,
				dt_entrada_unidade,
				nr_seq_atendimento,
				nr_seq_lote,
				nm_usuario,
        cd_cgc_fornec,
        nr_seq_lote_fornec)
			values (	nr_devolucao_w,
				nr_sequencia_w,
				cd_material_w,
				dt_atendimento_w,
				CASE WHEN cd_local_estoque_p=0 THEN  coalesce(cd_local_estoque_w,0)   ELSE cd_local_estoque_p END ,
				cd_unidade_medida_w,
				cd_motivo_devolucao_w,
				clock_timestamp(),
				nm_usuario_p,
				qt_material_w,
				nr_prescricao_w,
				nr_sequencia_prescricao_w,
				0,
				dt_entrada_unidade_w,
				nr_seq_atendimento_w,
				nr_seq_lote_p,
				nm_usuario_p,
        cd_cgc_fornecedor_w,
        nr_seq_lote_fornec_w);

			end;
		end loop;
		close C01;	
	
		if (coalesce(cd_material_w,0) > 0) then
		
			update	devolucao_material_pac
			set	dt_liberacao_baixa = clock_timestamp()
			where	nr_devolucao = nr_devolucao_w;
		end if;
		end;
	end if;	
end if;

nr_devolucao_p	:= nr_devolucao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_devolucao_lote_prescr ( nr_atendimento_p bigint, nr_seq_lote_p bigint, cd_estabelecimento_p bigint, cd_local_estoque_p bigint, nm_usuario_p text, nr_devolucao_p INOUT bigint, cd_funcao_p bigint) FROM PUBLIC;

