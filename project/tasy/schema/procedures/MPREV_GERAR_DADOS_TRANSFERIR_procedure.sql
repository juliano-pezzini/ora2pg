-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE mprev_gerar_dados_transferir (nr_sequencia_p bigint, ie_transf_programas_p text, ie_transf_atend_prev_p text, cd_profissional_origem_p text, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_prog_prof_orig_w     mprev_prog_partic_prof.nr_sequencia%type;
nr_seq_programa_partic_w    mprev_programa.nr_sequencia%type;
nr_seq_participante_w      mprev_participante.nr_sequencia%type;
nr_seq_partic_ciclo_item_w   mprev_partic_ciclo_item.nr_sequencia%type;
nr_seq_cic_item_resp_w     mprev_part_cic_item_resp.nr_sequencia%type;

c01 CURSOR FOR 
SELECT coalesce(a.nr_sequencia,''), 
    coalesce(b.nr_seq_programa,''), 
    coalesce(a.nr_seq_participante,'') 
from  mprev_prog_partic_prof a, 
    mprev_programa_partic b 
where  a.cd_profissional = cd_profissional_origem_p 
and   coalesce(a.dt_fim_acomp::text, '') = '' 
and	(a.nr_seq_participante IS NOT NULL AND a.nr_seq_participante::text <> '') 
and	a.nr_seq_programa_partic = b.nr_sequencia;

c02 CURSOR FOR 
    SELECT coalesce(b.nr_sequencia,''), 
        coalesce(b.nr_seq_partic_ciclo_item,''), 
        coalesce(a.nr_seq_participante,'') 
    from  mprev_partic_ciclo_item_v a, 
        mprev_part_cic_item_resp b 
    where  b.cd_profissional     = cd_profissional_origem_p 
    and   b.nr_seq_partic_ciclo_item = a.nr_sequencia 
    and   a.ie_status in ('P', 'A') 
    and 	(a.nr_seq_participante IS NOT NULL AND a.nr_seq_participante::text <> '');


BEGIN 
 
delete 
from  mprev_transf_resp_programa 
where  nr_seq_transf_resp = nr_sequencia_p;
 
delete 
from  mprev_transf_part_cic_item 
where  nr_seq_transf_resp = nr_sequencia_p;
 
if (ie_transf_programas_p = 'S')then 
    open c01;
    loop 
    fetch c01 into nr_seq_prog_prof_orig_w, 
            nr_seq_programa_partic_w, 
            nr_seq_participante_w;
     EXIT WHEN NOT FOUND; /* apply on c01 */
      begin 
 
      insert into mprev_transf_resp_programa(nr_seq_transf_resp, ie_status, nr_seq_prog_prof_orig, 
                        nr_seq_prog_prof_dest, nr_seq_programa, nr_seq_participante, 
                        nr_sequencia, dt_atualizacao, nm_usuario, 
                        dt_atualizacao_nrec, nm_usuario_nrec) 
      values (nr_sequencia_p, 'P', nr_seq_prog_prof_orig_w, 
        null, nr_seq_programa_partic_w, nr_seq_participante_w, 
        nextval('mprev_transf_resp_programa_seq'), clock_timestamp(), nm_usuario_p, 
        clock_timestamp(), nm_usuario_p);
 
      end;
    end loop;
    close c01;
 
end if;
 
if (ie_transf_atend_prev_p = 'S')then 
    open c02;
    loop 
    fetch c02 into nr_seq_cic_item_resp_w, 
            nr_seq_partic_ciclo_item_w, 
            nr_seq_participante_w;
     EXIT WHEN NOT FOUND; /* apply on c02 */
      begin 
 
      insert into mprev_transf_part_cic_item(nr_seq_transf_resp, ie_status, nr_seq_cic_item_resp, 
                        nr_seq_partic_ciclo_item, nr_seq_participante, nr_sequencia, 
                        dt_atualizacao, nm_usuario, dt_atualizacao_nrec, 
                        nm_usuario_nrec) 
      values (nr_sequencia_p, 'P', nr_seq_cic_item_resp_w, 
        nr_seq_partic_ciclo_item_w, nr_seq_participante_w, nextval('mprev_transf_part_cic_item_seq'), 
        clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p);
 
      end;
    end loop;
    close c02;
 
end if;
 
update MPREV_TRANSF_RESP 
set   dt_geracao_dados = clock_timestamp() 
where  nr_sequencia = nr_sequencia_p;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_gerar_dados_transferir (nr_sequencia_p bigint, ie_transf_programas_p text, ie_transf_atend_prev_p text, cd_profissional_origem_p text, nm_usuario_p text) FROM PUBLIC;

