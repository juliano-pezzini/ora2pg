-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE t_ptu_aviso AS (	nr_id	t_rowid);


CREATE OR REPLACE PROCEDURE ctb_pls_contab_aviso_cobr ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


nr_seq_regra_cc_w		bigint;
nr_seq_w_movto_cont_w		bigint;
qt_compl_hist_w			bigint;
ie_compl_hist_w			varchar(2);
nm_agrupador_w			varchar(255);
ds_compl_historico_w		varchar(255);
ds_compl_historico_ww		varchar(255);
nm_prestador_w			varchar(255);
ds_glosa_w			varchar(255);
ds_glosa_ww			varchar(255);
ds_conteudo_w			varchar(4000);
dt_referencia_w			timestamp;
dt_inicial_w			timestamp;
dt_final_w			timestamp;
nr_seq_agrupamento_w		w_movimento_contabil.nr_seq_agrupamento%type;
cd_centro_custo_deb_w		conta_contabil.cd_centro_custo%type;
cd_centro_custo_cred_w		conta_contabil.cd_centro_custo%type;
ie_centro_custo_deb_w		conta_contabil.ie_centro_custo%type;
cd_centro_custo_fixo_deb_w	conta_contabil.cd_centro_custo%type;
ie_centro_custo_cred_w		conta_contabil.ie_centro_custo%type;
cd_centro_custo_fixo_cred_w	conta_contabil.cd_centro_custo%type;
ie_regulamentacao_w		pls_plano.ie_regulamentacao%type;
nr_seq_protocolo_w		pls_protocolo_conta.nr_sequencia%type;
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;
cd_pessoa_fisica_w		pls_prestador.cd_pessoa_fisica%type;
cd_cgc_prestador_w		pls_prestador.cd_cgc%type;
cd_cpf_prestador_w		pessoa_fisica.nr_cpf%type;
nr_nota_fiscal_w		pls_prot_conta_titulo.nr_nota_fiscal%type;
cd_unimed_origem_w		ptu_aviso_arquivo.cd_unimed_origem%type;
cd_unimed_destino_w		ptu_aviso_arquivo.cd_unimed_destino%type;
nr_guia_principal_w		ptu_aviso_conta.nr_guia_principal%type;
nr_guia_operadora_w		ptu_aviso_conta.nr_guia_operadora%type;
nr_guia_prestador_w		ptu_aviso_conta.nr_guia_prestador%type;
cd_estabelecimento_w		lote_contabil.cd_estabelecimento%type;
cd_tipo_lote_contabil_w		lote_contabil.cd_tipo_lote_contabil%type;
ie_tipo_lote_w			lote_contabil_parametro.ds_valor_parametro%type;
ie_contab_glosa_w		lote_contabil_parametro.ds_valor_parametro%type;

type t_rowid is table of oid index by integer;
ptu_aviso_proc_item_w		t_ptu_aviso;
ptu_aviso_mat_item_w		t_ptu_aviso;
ptu_aviso_procedimento_w	t_ptu_aviso;
ptu_aviso_material_w		t_ptu_aviso;
ptu_nota_servico_w		t_ptu_aviso;

c_arquivo CURSOR FOR
	SELECT	'N' ie_tipo_movimento,
		'E' ie_tipo_lote,
		l.dt_mesano_referencia dt_movimento,
		l.nr_sequencia nr_seq_lote,
		null nr_seq_arquivo,
		g.cd_unimed_origem,
		g.cd_unimed_destino,
		l.nr_sequencia nr_seq_lote_fat,
		null nr_seq_ptu_fatura  --Apenas para recebimento
	from	pls_lote_faturamento		l,
		pls_fatura			f,
		ptu_fatura 			g
	where	l.nr_sequencia 		= f.nr_seq_lote
	and	f.nr_sequencia		= g.nr_seq_pls_fatura
	and	l.dt_mesano_referencia between dt_inicial_w and dt_final_w
	and	g.ie_tipo_cobranca_fatura 	= 'A'
	and	g.ie_operacao			= 'E'
	
union all

	SELECT	'N' ie_tipo_movimento,
		'R' ie_tipo_lote,
		g.dt_mes_competencia dt_movimento,
		g.nr_sequencia nr_seq_lote,
		null nr_seq_arquivo,
		g.cd_unimed_origem,
		g.cd_unimed_destino,
		null nr_seq_lote_fat, --Apenas para envio
		g.nr_sequencia
	from	ptu_fatura 			g
	where	g.dt_mes_competencia between dt_inicial_w and dt_final_w
	and	g.ie_tipo_cobranca_fatura 	= 'A'
	and	g.ie_operacao			= 'R'
	
union all

	select	'N' ie_tipo_movimento,
		l.ie_tipo_lote,
		a.dt_competencia dt_movimento,
		a.nr_seq_lote,
		a.nr_sequencia nr_seq_arquivo,
		a.cd_unimed_origem,
		a.cd_unimed_destino,
		null nr_seq_lote_fat, -- Apenas para envio A500
		null nr_seq_ptu_fatura  --Apenas para recebimento A500
	from	ptu_lote_aviso		l,
		ptu_aviso_arquivo	a
	where	l.nr_sequencia		= a.nr_seq_lote
	and (l.ie_tipo_lote		= ie_tipo_lote_w
	or	coalesce(ie_tipo_lote_w,'A')	= 'A')
	and	a.dt_competencia between dt_inicial_w and dt_final_w
	and	l.ie_tipo_lote		= 'E'
	
union all

	select	'G' ie_tipo_movimento,
		l.ie_tipo_lote,
		a.dt_competencia dt_movimento,
		a.nr_seq_lote,
		a.nr_sequencia nr_seq_arquivo,
		a.cd_unimed_origem,
		a.cd_unimed_destino,
		null nr_seq_lote_fat, -- Apenas para envio A500
		null nr_seq_ptu_fatura  --Apenas para recebimento A500
	from	ptu_lote_aviso		l,
		ptu_aviso_arquivo	a
	where	l.nr_sequencia		= a.nr_seq_lote
	and (l.ie_tipo_lote		= ie_tipo_lote_w
	or	coalesce(ie_tipo_lote_w,'A')	= 'A')
	and	a.dt_competencia between dt_inicial_w and dt_final_w
	and	exists (select	1
			from	ptu_aviso_glosa_bx		g,
				ptu_aviso_glosa_bx_dados	d
			where	g.nr_sequencia		= d.nr_seq_glosa_baixa
			and	g.nr_seq_arquivo	= a.nr_sequencia)
	and	l.ie_tipo_lote		= 'E'
	
union all

	select	'N' ie_tipo_movimento,
		l.ie_tipo_lote,
		a.dt_transacao dt_movimento,
		a.nr_seq_lote,
		a.nr_sequencia nr_seq_arquivo,
		a.cd_unimed_origem,
		a.cd_unimed_destino,
		null nr_seq_lote_fat, -- Apenas para envio A500
		null nr_seq_ptu_fatura  --Apenas para recebimento A500
	from	ptu_lote_aviso		l,
		ptu_aviso_arquivo	a
	where	l.nr_sequencia		= a.nr_seq_lote
	and (l.ie_tipo_lote		= ie_tipo_lote_w
	or	coalesce(ie_tipo_lote_w,'A')	= 'A')
	and	a.dt_transacao between dt_inicial_w and dt_final_w
	and	l.ie_tipo_lote		= 'R'
	
union all

	select	'G' ie_tipo_movimento,
		l.ie_tipo_lote,
		a.dt_transacao dt_movimento,
		a.nr_seq_lote,
		a.nr_sequencia nr_seq_arquivo,
		a.cd_unimed_origem,
		a.cd_unimed_destino,
		null nr_seq_lote_fat, -- Apenas para envio A500
		null nr_seq_ptu_fatura  --Apenas para recebimento A500
	from	ptu_lote_aviso		l,
		ptu_aviso_arquivo	a
	where	l.nr_sequencia		= a.nr_seq_lote
	and (l.ie_tipo_lote		= ie_tipo_lote_w
	or	coalesce(ie_tipo_lote_w,'A')	= 'A')
	and	a.dt_transacao between dt_inicial_w and dt_final_w
	and	exists (select	1
			from	ptu_aviso_glosa_bx		g,
				ptu_aviso_glosa_bx_dados	d
			where	g.nr_sequencia		= d.nr_seq_glosa_baixa
			and	g.nr_seq_arquivo	= a.nr_sequencia)
	and	l.ie_tipo_lote		= 'R';

c_arquivo_w	c_arquivo%rowtype;

c_itens CURSOR FOR
SELECT		'P' ie_proc_mat,
		null nr_id_proc_mat,
		i.oid nr_id_nota_serv,
		i.cd_conta_deb cd_conta_contabil_deb,
		i.cd_conta_cred cd_conta_contabil_cred,
		i.vl_procedimento vl_contabil,
		i.cd_historico cd_historico,
		'PTU_NOTA_SERVICO' nm_tabela,
		'VL_PROCEDIMENTO' nm_atributo,
		86 nr_seq_info_ctb,
		pp.nr_seq_conta,
		c.nr_seq_segurado,
		c.nr_seq_prot_conta,
		c.nr_seq_plano,
		null nr_guia_principal,
		null nr_guia_operadora,
		null nr_guia_prestador,
		c_arquivo_w.ie_tipo_movimento,
		c_arquivo_w.dt_movimento,
		c_arquivo_w.nr_seq_lote,
		c_arquivo_w.ie_tipo_lote,
		c_arquivo_w.cd_unimed_origem,
		c_arquivo_w.cd_unimed_destino,
		c_arquivo_w.nr_seq_lote nr_seq_tab_orig,
		g.nr_sequencia nr_seq_tab_compl,
		i.nr_sequencia nr_doc_analitico,
		c.nr_seq_prestador_exec nr_seq_prestador_exec,
		c.nr_seq_prestador nr_seq_prestador_solic,
		d.nr_seq_prestador nr_seq_prestador_atend
	from	pls_fatura		f,
		ptu_fatura 		g,
		ptu_nota_cobranca 	h,
		ptu_nota_servico	i,
		pls_conta_proc		pp,
		pls_conta		c,
		pls_protocolo_conta 	d
	where	f.nr_seq_lote		= c_arquivo_w.nr_seq_lote_fat
	and	g.nr_seq_pls_fatura	= f.nr_sequencia
	and	h.nr_seq_fatura		= g.nr_sequencia
	and	i.nr_seq_nota_cobr	= h.nr_sequencia
	and	pp.nr_sequencia		= i.nr_seq_conta_proc
	and	pp.nr_seq_conta		= c.nr_sequencia
	and	c.nr_seq_protocolo	= d.nr_sequencia
	and	c_arquivo_w.ie_tipo_lote	= 'E'
	and	coalesce(c_arquivo_w.nr_seq_arquivo::text, '') = ''
	and	coalesce(c_arquivo_w.nr_seq_ptu_fatura::text, '') = ''
	
union all

	SELECT	'M' ie_proc_mat,
		null nr_id_proc_mat,
		i.oid nr_id_nota_serv,
		i.cd_conta_deb cd_conta_contabil_deb,
		i.cd_conta_cred cd_conta_contabil_cred,
		i.vl_procedimento vl_contabil,
		i.cd_historico cd_historico,
		'PTU_NOTA_SERVICO' nm_tabela,
		'VL_MATERIAL' nm_atributo,
		86 nr_seq_info_ctb,
		mm.nr_seq_conta,
		c.nr_seq_segurado,
		c.nr_seq_prot_conta,
		c.nr_seq_plano,
		null nr_guia_principal,
		null nr_guia_operadora,
		null nr_guia_prestador,
		c_arquivo_w.ie_tipo_movimento,
		c_arquivo_w.dt_movimento,
		c_arquivo_w.nr_seq_lote,
		c_arquivo_w.ie_tipo_lote,
		c_arquivo_w.cd_unimed_origem,
		c_arquivo_w.cd_unimed_destino,
		c_arquivo_w.nr_seq_lote nr_seq_tab_orig,
		g.nr_sequencia nr_seq_tab_compl,
		i.nr_sequencia nr_doc_analitico,
		c.nr_seq_prestador_exec nr_seq_prestador_exec,
		c.nr_seq_prestador nr_seq_prestador_solic,
		d.nr_seq_prestador nr_seq_prestador_atend
	from	pls_fatura		f,
		ptu_fatura 		g,
		ptu_nota_cobranca 	h,
		ptu_nota_servico	i,
		pls_conta_mat		mm,
		pls_conta		c,
		pls_protocolo_conta 	d
	where	f.nr_seq_lote		= c_arquivo_w.nr_seq_lote_fat
	and	g.nr_seq_pls_fatura	= f.nr_sequencia
	and	h.nr_seq_fatura		= g.nr_sequencia
	and	i.nr_seq_nota_cobr	= h.nr_sequencia
	and	mm.nr_sequencia		= i.nr_seq_conta_mat
	and	mm.nr_seq_conta		= c.nr_sequencia
	and	c.nr_seq_protocolo	= d.nr_sequencia
	and	c_arquivo_w.ie_tipo_lote	= 'E'
	and	coalesce(c_arquivo_w.nr_seq_arquivo::text, '') = ''
	and	coalesce(c_arquivo_w.nr_seq_ptu_fatura::text, '') = ''
	
union all

	select	'M' ie_proc_mat,
		null nr_id_proc_mat,
		i.oid nr_id_nota_serv,
		i.cd_conta_deb cd_conta_contabil_deb,
		i.cd_conta_cred cd_conta_contabil_cred,
		i.vl_procedimento vl_contabil,
		i.cd_historico cd_historico,
		'PTU_NOTA_SERVICO' nm_tabela,
		'VL_PROCEDIMENTO' nm_atributo,
		86 nr_seq_info_ctb,
		null nr_seq_conta,
		null nr_seq_segurado,
		null nr_seq_prot_conta,
		null nr_seq_plano,
		null nr_guia_principal,
		null nr_guia_operadora,
		null nr_guia_prestador,
		c_arquivo_w.ie_tipo_movimento,
		c_arquivo_w.dt_movimento,
		c_arquivo_w.nr_seq_lote,
		c_arquivo_w.ie_tipo_lote,
		c_arquivo_w.cd_unimed_origem,
		c_arquivo_w.cd_unimed_destino,
		g.nr_sequencia nr_seq_tab_orig,
		h.nr_sequencia nr_seq_tab_compl,
		i.nr_sequencia nr_doc_analitico,
		null nr_seq_prestador_exec,
		null nr_seq_prestador_solic,
		null nr_seq_prestador_atend
	from	ptu_fatura 		g,
		ptu_nota_cobranca 	h,
		ptu_nota_servico	i
	where	c_arquivo_w.nr_seq_ptu_fatura	= g.nr_sequencia
	and	h.nr_seq_fatura			= g.nr_sequencia
	and	i.nr_seq_nota_cobr		= h.nr_sequencia
	and	c_arquivo_w.ie_tipo_lote	= 'R'
	and	coalesce(c_arquivo_w.nr_seq_arquivo::text, '') = ''
	and	coalesce(c_arquivo_w.nr_seq_lote_fat::text, '') = ''
	
union all

	select	x.ie_proc_mat,
		x.nr_id_proc_mat,
		null nr_id_nota_serv,
		x.cd_conta_debito cd_conta_contabil_deb,
		x.cd_conta_credito cd_conta_contabil_cred,
		CASE WHEN c_arquivo_w.ie_tipo_movimento='N' THEN x.vl_contabil  ELSE x.vl_contabil * -1 END  vl_contabil,
		x.cd_historico,
		x.nm_tabela,
		CASE WHEN c_arquivo_w.ie_tipo_movimento='N' THEN 'VL_TOTAL'  ELSE 'VL_GLOSA' END  nm_atributo,
		86 nr_seq_info_ctb,
		ac.nr_seq_conta,
		c.nr_seq_segurado,
		c.nr_seq_prot_conta,
		c.nr_seq_plano,
		ac.nr_guia_principal,
		ac.nr_guia_operadora,
		ac.nr_guia_prestador,
		c_arquivo_w.ie_tipo_movimento,
		c_arquivo_w.dt_movimento,
		c_arquivo_w.nr_seq_lote,
		c_arquivo_w.ie_tipo_lote,
		c_arquivo_w.cd_unimed_origem,
		c_arquivo_w.cd_unimed_destino,
		c_arquivo_w.nr_seq_lote nr_seq_tab_orig,
		c_arquivo_w.nr_seq_arquivo nr_seq_tab_compl,
		x.nr_doc_analitico,
		c.nr_seq_prestador_exec nr_seq_prestador_exec,
		c.nr_seq_prestador nr_seq_prestador_solic,
		d.nr_seq_prestador nr_seq_prestador_atend
	from (select	'P' ie_proc_mat,
			i.oid nr_id_proc_mat,
			i.cd_conta_debito,
			i.cd_conta_credito,
			i.vl_total vl_contabil,
			i.cd_historico,
			'PTU_AVISO_PROC_ITEM' nm_tabela,
			b.nr_seq_aviso_conta,
			i.nr_sequencia nr_doc_analitico
		from	ptu_aviso_procedimento	b,
			ptu_aviso_proc_item	i
		where	b.nr_sequencia		= i.nr_seq_aviso_procedimento
		and 	coalesce(i.nr_lote_contabil,0) = 0
		
union all

		select	'M' ie_proc_mat,
			i.oid nr_id_proc_mat,
			i.cd_conta_debito,
			i.cd_conta_credito,
			i.vl_total vl_contabil,
			i.cd_historico,
			'PTU_AVISO_MAT_ITEM' nm_tabela,
			b.nr_seq_aviso_conta,
			i.nr_sequencia nr_doc_analitico
		from	ptu_aviso_material	b,
			ptu_aviso_mat_item	i
		where	b.nr_sequencia		= i.nr_seq_aviso_material
		and 	coalesce(i.nr_lote_contabil,0) = 0) x,
		ptu_aviso_protocolo	ap,
		ptu_aviso_conta		ac,
		pls_conta		c,
		pls_protocolo_conta	d
	where	ap.nr_seq_arquivo		= c_arquivo_w.nr_seq_arquivo
	and	ap.nr_sequencia			= ac.nr_seq_aviso_protocolo
	and	ac.nr_sequencia			= x.nr_seq_aviso_conta
	and	c.nr_sequencia			= ac.nr_seq_conta
	and	d.nr_sequencia			= c.nr_seq_protocolo
	and	c_arquivo_w.ie_tipo_lote	= 'E'
	and	coalesce(c_arquivo_w.nr_seq_lote_fat::text, '') = ''
	and	coalesce(c_arquivo_w.nr_seq_ptu_fatura::text, '') = ''
	
union all

	select	x.ie_proc_mat,
		x.nr_id_proc_mat,
		null nr_id_nota_serv,
		x.cd_conta_debito cd_conta_contabil_deb,
		x.cd_conta_credito cd_conta_contabil_cred,
		CASE WHEN c_arquivo_w.ie_tipo_movimento='N' THEN x.vl_contabil  ELSE x.vl_contabil * -1 END  vl_contabil,
		x.cd_historico,
		x.nm_tabela,
		CASE WHEN c_arquivo_w.ie_tipo_movimento='N' THEN 'VL_TOTAL'  ELSE 'VL_GLOSA' END  nm_atributo,
		87 nr_seq_info_ctb,
		null nr_seq_conta,
		null nr_seq_segurado,
		null nr_seq_prot_conta,
		null nr_seq_plano,
		ac.nr_guia_principal,
		ac.nr_guia_operadora,
		ac.nr_guia_prestador,
		c_arquivo_w.ie_tipo_movimento,
		c_arquivo_w.dt_movimento,
		c_arquivo_w.nr_seq_lote,
		c_arquivo_w.ie_tipo_lote,
		c_arquivo_w.cd_unimed_origem,
		c_arquivo_w.cd_unimed_destino,
		c_arquivo_w.nr_seq_lote nr_seq_tab_orig,
		c_arquivo_w.nr_seq_arquivo nr_seq_tab_compl,
		x.nr_doc_analitico,
		null nr_seq_prestador_exec,
		null nr_seq_prestador_solic,
		null nr_seq_prestador_atend
	from (select	'P' ie_proc_mat,
			b.oid nr_id_proc_mat,
			b.cd_conta_debito,
			b.cd_conta_credito,
			b.vl_total vl_contabil,
			b.cd_historico,
			'PTU_AVISO_PROCEDIMENTO' nm_tabela,
			b.nr_seq_aviso_conta,
			b.nr_sequencia nr_doc_analitico
		from	ptu_aviso_procedimento	b
		where 	coalesce(b.nr_lote_contabil,0) = 0
		
union all

		select	'M' ie_proc_mat,
			b.oid nr_id_proc_mat,
			b.cd_conta_debito,
			b.cd_conta_credito,
			b.vl_total vl_contabil,
			b.cd_historico,
			'PTU_AVISO_MATERIAL' nm_tabela,
			b.nr_seq_aviso_conta,
			b.nr_sequencia nr_doc_analitico
		from	ptu_aviso_material	b
		where 	coalesce(b.nr_lote_contabil,0) = 0) x,
		ptu_aviso_protocolo	ap,
		ptu_aviso_conta		ac
	where	ap.nr_seq_arquivo		= c_arquivo_w.nr_seq_arquivo
	and	ap.nr_sequencia			= ac.nr_seq_aviso_protocolo
	and	ac.nr_sequencia			= x.nr_seq_aviso_conta
	and	c_arquivo_w.ie_tipo_lote	= 'R'
	and	coalesce(c_arquivo_w.nr_seq_lote_fat::text, '') = ''
	and	coalesce(c_arquivo_w.nr_seq_ptu_fatura::text, '') = '';

type		fetch_array is table of c_itens%ROWTYPE;
c_itens_w	fetch_array;

c_movimento_w CURSOR FOR
	SELECT	oid
	from	w_movimento_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;

-- Varaveis do c_movimento_w | cursor para limpar a tabela
type c_movimento_w_type is table of oid;
c_movimento_w_regs_w c_movimento_w_type;

c_movimento CURSOR FOR
	SELECT	oid
	from	movimento_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;

-- Variaveis do c_movimento | cursor para limpar a tabela
type c_movimento_type is table of oid;
c_movimento_regs_w c_movimento_type;

type t_movimento_contabil is table
	of w_movimento_contabil%rowtype index by integer;
movimento_contabil_w	t_movimento_contabil;
item_mov_contabil_w	w_movimento_contabil%rowtype;

BEGIN
/*Validacao para impedir a geracao em lotes incorretos */

if (ie_exclusao_p <> 'S') then
        select b.cd_tipo_lote_contabil
        into STRICT cd_tipo_lote_contabil_w
        from lote_contabil b
        where b.nr_lote_contabil = nr_lote_contabil_p;
        if (cd_tipo_lote_contabil_w <> 57) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
        end if;
end if;
if (ie_exclusao_p = 'S') then
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
		
	open c_movimento;
	loop
	fetch c_movimento bulk collect into c_movimento_regs_w limit 1000;

		-- Deletar em massa os registros da tabela temporaria
		forall i in c_movimento_regs_w.first .. c_movimento_regs_w.last
			delete	from movimento_contabil
			where	rowid = c_movimento_regs_w(i);

		commit;
	EXIT WHEN NOT FOUND; /* apply on c_movimento */
	end loop;
	close c_movimento;
	
	update	lote_contabil
	set	vl_credito 		= 0,
		vl_debito  		= 0,
		dt_geracao_lote		 = NULL
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	update	ptu_aviso_procedimento a
	set	a.nr_lote_contabil	 = NULL
	where	a.nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	update	ptu_aviso_material a
	set	a.nr_lote_contabil	 = NULL
	where	a.nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	update	ptu_aviso_proc_item a
	set	a.nr_lote_contabil	 = NULL
	where	a.nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	update	ptu_aviso_mat_item a
	set	a.nr_lote_contabil	 = NULL
	where	a.nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;

	update	ptu_nota_servico a
	set	a.nr_lote_contabil 	 = NULL
	where	a.nr_lote_contabil	= nr_lote_contabil_p;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
else

	CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
				1,
				wheb_mensagem_pck.get_texto(1097173),
				nm_usuario_p);
				
	select	trunc(dt_referencia,'month'),
		cd_estabelecimento,
		cd_tipo_lote_contabil
	into STRICT 	dt_referencia_w,
		cd_estabelecimento_w,
		cd_tipo_lote_contabil_w
	from 	lote_contabil
	where 	nr_lote_contabil 	= nr_lote_contabil_p;
	
	select	coalesce(max(x.ds_valor_parametro),'A')
	into STRICT	ie_tipo_lote_w
	from	lote_contabil_parametro	x
	where	x.nr_lote_contabil	= nr_lote_contabil_p
	and	x.nr_seq_parametro	= 5;
	
	select	coalesce(max(x.ds_valor_parametro),'S')
	into STRICT	ie_contab_glosa_w
	from	lote_contabil_parametro	x
	where	x.nr_lote_contabil	= nr_lote_contabil_p
	and	x.nr_seq_parametro	= 10;
	
	ds_glosa_w	:= wheb_mensagem_pck.get_texto(1044379);
	
	dt_inicial_w	:= trunc(dt_referencia_w,'dd');
	dt_final_w	:= fim_dia(fim_mes(dt_referencia_w));
	
	begin
	ie_compl_hist_w	:= obter_se_compl_tipo_lote(cd_estabelecimento_w, cd_tipo_lote_contabil_w);
	exception
	when others then
		ie_compl_hist_w	:= 'N';
	end;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	
	open c_movimento_w;
	loop
	fetch c_movimento_w bulk collect into c_movimento_w_regs_w limit 1000;

		-- Deletar em massa os registros da tabela temporaria
		forall i in c_movimento_w_regs_w.first .. c_movimento_w_regs_w.last
			delete	from w_movimento_contabil
			where	rowid = c_movimento_w_regs_w(i);

		commit;
	EXIT WHEN NOT FOUND; /* apply on c_movimento_w */
	end loop;
	close c_movimento_w;
	
	open c_arquivo;
	loop
	fetch c_arquivo into
		c_arquivo_w;
	EXIT WHEN NOT FOUND; /* apply on c_arquivo */
		begin
		open c_itens;
		loop
		fetch c_itens bulk collect into c_itens_w limit 1000;
			for z in 1..c_itens_w.count loop
				begin
				ds_glosa_ww	:= null;
				
				if (nm_agrupador_w = 'NR_SEQ_LOTE') then
					nr_seq_agrupamento_w	:= c_itens_w[z].nr_seq_lote;
				end if;
				
				if (coalesce(nr_seq_agrupamento_w,0) = 0) then
					nr_seq_agrupamento_w	:= c_itens_w[z].nr_seq_lote;
				end if;
				
				cd_centro_custo_deb_w	:= null;
				cd_centro_custo_cred_w	:= null;
				ds_compl_historico_w	:= null;
					
				if (coalesce(c_itens_w[z].cd_conta_contabil_deb,'X') <> 'X') and (coalesce(c_itens_w[z].cd_conta_contabil_cred,'X') <> 'X') then

					select	ie_centro_custo,
						cd_centro_custo
					into STRICT	ie_centro_custo_deb_w,
						cd_centro_custo_fixo_deb_w
					from	conta_contabil
					where	cd_conta_contabil	= c_itens_w[z].cd_conta_contabil_deb;
					
					select	ie_centro_custo,
						cd_centro_custo
					into STRICT	ie_centro_custo_cred_w,
						cd_centro_custo_fixo_cred_w
					from	conta_contabil
					where	cd_conta_contabil	= c_itens_w[z].cd_conta_contabil_cred;
					
					if (ie_centro_custo_deb_w = 'S') then
						if (cd_centro_custo_fixo_deb_w IS NOT NULL AND cd_centro_custo_fixo_deb_w::text <> '') then
							cd_centro_custo_deb_w	:= cd_centro_custo_fixo_deb_w;
						else
							if (c_itens_w[z]coalesce(.nr_seq_plano::text, '') = '') then
								begin
								select	b.ie_regulamentacao,
									b.nr_sequencia
								into STRICT	ie_regulamentacao_w,
									c_itens_w[z].nr_seq_plano
								from	pls_segurado a,
									pls_plano b
								where	b.nr_sequencia  = a.nr_seq_plano
								and	a.nr_sequencia	= c_itens_w[z].nr_seq_segurado;
								exception
								when others then
									ie_regulamentacao_w		:= null;
									c_itens_w[z].nr_seq_plano	:= null;
								end;
							else
								begin
								select	b.ie_regulamentacao
								into STRICT	ie_regulamentacao_w
								from	pls_plano b
								where	b.nr_sequencia  = c_itens_w[z].nr_seq_plano;
								exception
								when others then
									ie_regulamentacao_w	:= null;
								end;
							end if;
							
							SELECT * FROM pls_obter_centro_custo(	'D', c_itens_w[z].nr_seq_plano, cd_estabelecimento_w, '', '', ie_regulamentacao_w, c_itens_w[z].nr_seq_segurado, '', cd_centro_custo_deb_w, nr_seq_regra_cc_w, null, 				--nr_seq_tipo_lanc_p
										null, 				--nr_seq_bonificacao_p
										null, 				--nr_seq_sca_p
										null, 				--nr_seq_prestador_pag_p
										c_itens_w[z].nr_seq_prestador_exec, c_itens_w[z].nr_seq_prestador_atend, c_itens_w[z].nr_seq_prestador_solic, null				-- nr_seq_evento_p
										) INTO STRICT cd_centro_custo_deb_w, nr_seq_regra_cc_w;
						end if;
					end if;
					
					if (ie_centro_custo_cred_w = 'S') then
						if (cd_centro_custo_fixo_cred_w IS NOT NULL AND cd_centro_custo_fixo_cred_w::text <> '') then
							cd_centro_custo_cred_w	:= cd_centro_custo_fixo_cred_w;
						else
							if (c_itens_w[z]coalesce(.nr_seq_plano::text, '') = '') then
								begin
								select	ie_regulamentacao,
									b.nr_sequencia
								into STRICT	ie_regulamentacao_w,
									c_itens_w[z].nr_seq_plano
								from	pls_segurado a,
									pls_plano b
								where	b.nr_sequencia  = a.nr_seq_plano
								and	a.nr_sequencia	= c_itens_w[z].nr_seq_segurado;
								exception
								when others then
									ie_regulamentacao_w	:= null;
									c_itens_w[z].nr_seq_plano		:= null;
								end;
							else
								begin
								select	ie_regulamentacao
								into STRICT	ie_regulamentacao_w
								from	pls_plano b
								where	b.nr_sequencia  = c_itens_w[z].nr_seq_plano;
								exception
								when others then
									ie_regulamentacao_w	:= null;
								end;
							end if;
							
							SELECT * FROM pls_obter_centro_custo(	'D', c_itens_w[z].nr_seq_plano, cd_estabelecimento_w, '', '', ie_regulamentacao_w, c_itens_w[z].nr_seq_segurado, '', cd_centro_custo_cred_w, nr_seq_regra_cc_w, null, 				--nr_seq_tipo_lanc_p
										null, 				--nr_seq_bonificacao_p
										null, 				--nr_seq_sca_p
										null, 				--nr_seq_prestador_pag_p
										c_itens_w[z].nr_seq_prestador_exec, c_itens_w[z].nr_seq_prestador_atend, c_itens_w[z].nr_seq_prestador_solic, null				-- nr_seq_evento_p
										) INTO STRICT cd_centro_custo_cred_w, nr_seq_regra_cc_w;
						end if;
					end if;
					
					if (ie_compl_hist_w = 'S') then
						select	count(1)
						into STRICT	qt_compl_hist_w
						from	historico_padrao_atributo
						where	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w
						and	cd_historico		= c_itens_w[z].cd_historico  LIMIT 1;
						
						if (qt_compl_hist_w > 0) then
							select	max(a.nr_seq_protocolo),
								max(a.nr_seq_prestador_exec)
							into STRICT	nr_seq_protocolo_w,
								nr_seq_prestador_w
							from	pls_conta a
							where	nr_sequencia	= c_itens_w[z].nr_seq_conta;
							
							if (coalesce(nr_seq_prestador_w,0) > 0) then
								select	a.cd_pessoa_fisica,
									a.cd_cgc
								into STRICT	cd_pessoa_fisica_w,
									cd_cgc_prestador_w
								from	pls_prestador a
								where	a.nr_sequencia	= nr_seq_prestador_w;
								
								begin
								nm_prestador_w	:= substr(obter_nome_pf_pj(cd_pessoa_fisica_w, cd_cgc_prestador_w),1,255);
								exception
								when others then
									nm_prestador_w	:= null;
								end;
								
								select	max(nr_cpf)
								into STRICT	cd_cpf_prestador_w
								from	pessoa_fisica
								where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
							end if;
							
							select	max(nr_nota_fiscal)
							into STRICT	nr_nota_fiscal_w
							from	pls_prot_conta_titulo
							where	nr_sequencia	= c_itens_w[z].nr_seq_prot_conta;
							
							if (c_arquivo_w.ie_tipo_movimento = 'G') then
								ds_glosa_ww	:= ds_glosa_w;
							end if;
							
							ds_conteudo_w	:= substr(	cd_cgc_prestador_w		|| '#@' ||
											cd_cpf_prestador_w		|| '#@' ||
											nm_prestador_w 			|| '#@' ||
											nr_nota_fiscal_w		|| '#@' ||
											c_itens_w[z].nr_seq_conta	|| '#@' ||
											nr_seq_prestador_w		|| '#@' ||
											nr_seq_protocolo_w		|| '#@' ||
											c_itens_w[z].cd_unimed_destino	|| '#@' ||
											c_itens_w[z].nr_seq_lote	|| '#@' ||
											c_itens_w[z].cd_unimed_origem	|| '#@' ||
											c_itens_w[z].nr_guia_principal	|| '#@' ||
											c_itens_w[z].nr_guia_operadora	|| '#@' ||
											c_itens_w[z].nr_guia_prestador	|| '#@' ||
											ds_glosa_ww,1,4000);
							
							begin
							ds_compl_historico_ww	:= substr(obter_compl_historico(cd_tipo_lote_contabil_w, c_itens_w[z].cd_historico, ds_conteudo_w),1,255);
							exception
							when others then
								ds_compl_historico_ww	:= null;
							end;
							
							ds_compl_historico_w	:= substr(ds_compl_historico_ww,1,255);
						end if;
					end if;
					
					nr_seq_w_movto_cont_w			:= nr_seq_w_movto_cont_w + 1;
					
					item_mov_contabil_w.nr_lote_contabil	:= nr_lote_contabil_p;
					item_mov_contabil_w.nr_sequencia	:= nr_seq_w_movto_cont_w;
					item_mov_contabil_w.cd_conta_contabil	:= c_itens_w[z].cd_conta_contabil_deb;
					item_mov_contabil_w.ie_debito_credito	:= 'D';
					item_mov_contabil_w.cd_historico	:= c_itens_w[z].cd_historico;
					item_mov_contabil_w.dt_movimento	:= c_itens_w[z].dt_movimento;
					item_mov_contabil_w.vl_movimento	:= c_itens_w[z].vl_contabil;
					item_mov_contabil_w.cd_estabelecimento	:= cd_estabelecimento_w;
					item_mov_contabil_w.cd_centro_custo	:= cd_centro_custo_deb_w;
					item_mov_contabil_w.ds_compl_historico	:= ds_compl_historico_w;
					item_mov_contabil_w.nr_seq_agrupamento	:= nr_seq_agrupamento_w;
					item_mov_contabil_w.nr_seq_tab_orig	:= c_itens_w[z].nr_seq_tab_orig;
					item_mov_contabil_w.nr_seq_tab_compl	:= c_itens_w[z].nr_seq_tab_compl;
					item_mov_contabil_w.nr_doc_analitico	:= c_itens_w[z].nr_doc_analitico;
					item_mov_contabil_w.nr_seq_info		:= c_itens_w[z].nr_seq_info_ctb;
					item_mov_contabil_w.nm_tabela		:= c_itens_w[z].nm_tabela;
					item_mov_contabil_w.nm_atributo		:= c_itens_w[z].nm_atributo;
					
					movimento_contabil_w(movimento_contabil_w.count) := item_mov_contabil_w;
					
					nr_seq_w_movto_cont_w			:= nr_seq_w_movto_cont_w + 1;
					
					item_mov_contabil_w.nr_lote_contabil	:= nr_lote_contabil_p;
					item_mov_contabil_w.nr_sequencia	:= nr_seq_w_movto_cont_w;
					item_mov_contabil_w.cd_conta_contabil	:= c_itens_w[z].cd_conta_contabil_cred;
					item_mov_contabil_w.ie_debito_credito	:= 'C';
					item_mov_contabil_w.cd_historico	:= c_itens_w[z].cd_historico;
					item_mov_contabil_w.dt_movimento	:= c_itens_w[z].dt_movimento;
					item_mov_contabil_w.vl_movimento	:= c_itens_w[z].vl_contabil;
					item_mov_contabil_w.cd_estabelecimento	:= cd_estabelecimento_w;
					item_mov_contabil_w.cd_centro_custo	:= cd_centro_custo_cred_w;
					item_mov_contabil_w.ds_compl_historico	:= ds_compl_historico_w;
					item_mov_contabil_w.nr_seq_agrupamento	:= nr_seq_agrupamento_w;
					item_mov_contabil_w.nr_seq_tab_orig	:= c_itens_w[z].nr_seq_tab_orig;
					item_mov_contabil_w.nr_seq_tab_compl	:= c_itens_w[z].nr_seq_tab_compl;
					item_mov_contabil_w.nr_doc_analitico	:= c_itens_w[z].nr_doc_analitico;
					item_mov_contabil_w.nr_seq_info		:= c_itens_w[z].nr_seq_info_ctb;
					item_mov_contabil_w.nm_tabela		:= c_itens_w[z].nm_tabela;
					item_mov_contabil_w.nm_atributo		:= c_itens_w[z].nm_atributo;
					
					movimento_contabil_w(movimento_contabil_w.count) := item_mov_contabil_w;

					if (movimento_contabil_w.count >= 1000) then
						begin
						forall i in movimento_contabil_w.first .. movimento_contabil_w.last
							insert into w_movimento_contabil values movimento_contabil_w(i);
						commit;

						movimento_contabil_w.delete;
						end;
					end if;
				end if;

				if (c_itens_w[z](.nr_id_proc_mat IS NOT NULL AND .nr_id_proc_mat::text <> '')) then
					if (c_itens_w[z].ie_tipo_lote = 'E') then
						if (c_itens_w[z].ie_proc_mat = 'P') then
							ptu_aviso_proc_item_w.nr_id(ptu_aviso_proc_item_w.nr_id.count)		:= c_itens_w[z].nr_id_proc_mat;
						elsif (c_itens_w[z].ie_proc_mat = 'M') then
							ptu_aviso_mat_item_w.nr_id(ptu_aviso_mat_item_w.nr_id.count)		:= c_itens_w[z].nr_id_proc_mat;
						end if;
					elsif (c_itens_w[z].ie_tipo_lote = 'R') then
						if (c_itens_w[z].ie_proc_mat = 'P') then
							ptu_aviso_procedimento_w.nr_id(ptu_aviso_procedimento_w.nr_id.count)	:= c_itens_w[z].nr_id_proc_mat;
						elsif (c_itens_w[z].ie_proc_mat = 'M') then
							ptu_aviso_material_w.nr_id(ptu_aviso_material_w.nr_id.count)		:= c_itens_w[z].nr_id_proc_mat;
						end if;
					end if;
				else
					-- O mesmo campo para envio e recebimento
					ptu_nota_servico_w.nr_id(ptu_nota_servico_w.nr_id.count)			:= c_itens_w[z].nr_id_nota_serv;
				end if;
				
				CALL wheb_usuario_pck.set_ie_lote_contabil('S');
				
				if (ptu_aviso_proc_item_w.nr_id.count >= 1000) then
					begin
					forall i in ptu_aviso_proc_item_w.nr_id.first .. ptu_aviso_proc_item_w.nr_id.last
						update	ptu_aviso_proc_item	a
						set	a.nr_lote_contabil	= nr_lote_contabil_p
						where	rowid 			= ptu_aviso_proc_item_w.nr_id(i);
					commit;
					ptu_aviso_proc_item_w.nr_id.delete;
					end;
				end if;
				
				if (ptu_aviso_mat_item_w.nr_id.count >= 1000) then
					begin
					forall i in ptu_aviso_mat_item_w.nr_id.first .. ptu_aviso_mat_item_w.nr_id.last
						update	ptu_aviso_mat_item	a
						set	a.nr_lote_contabil	= nr_lote_contabil_p
						where	rowid 			= ptu_aviso_mat_item_w.nr_id(i);
					commit;
					ptu_aviso_mat_item_w.nr_id.delete;
					end;
				end if;
					
				if (ptu_aviso_proc_item_w.nr_id.count >= 1000) then
					begin
					forall i in ptu_aviso_procedimento_w.nr_id.first .. ptu_aviso_procedimento_w.nr_id.last
						update	ptu_aviso_procedimento	a
						set	a.nr_lote_contabil	= nr_lote_contabil_p
						where	rowid 			= ptu_aviso_procedimento_w.nr_id(i);
					commit;
					ptu_aviso_procedimento_w.nr_id.delete;
					end;
				end if;
				
				if (ptu_aviso_material_w.nr_id.count >= 1000) then
					begin
					forall i in ptu_aviso_material_w.nr_id.first .. ptu_aviso_material_w.nr_id.last
						update	ptu_aviso_material	a
						set	a.nr_lote_contabil	= nr_lote_contabil_p
						where	rowid 			= ptu_aviso_material_w.nr_id(i);
					commit;
					ptu_aviso_material_w.nr_id.delete;
					end;
				end if;

				if (ptu_nota_servico_w.nr_id.count >= 1000) then
					begin
					forall i in ptu_nota_servico_w.nr_id.first .. ptu_nota_servico_w.nr_id.last
						update	ptu_nota_servico	a
						set	a.nr_lote_contabil	= nr_lote_contabil_p
						where	rowid 			= ptu_nota_servico_w.nr_id(i);
					commit;
					ptu_nota_servico_w.nr_id.delete;
					end;
				end if;
				
				CALL wheb_usuario_pck.set_ie_lote_contabil('N');
				
				end;
			end loop;

		EXIT WHEN NOT FOUND; /* apply on c_itens */
		end loop;
		close c_itens;
		
		end;
	end loop;
	close c_arquivo;
	
	if (movimento_contabil_w.count > 0) then
		forall i in movimento_contabil_w.first .. movimento_contabil_w.last
			insert into w_movimento_contabil values movimento_contabil_w(i);
		commit;
		movimento_contabil_w.delete;
	end if;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
			
	if (ptu_aviso_proc_item_w.nr_id.count > 0) then
		begin
		forall i in ptu_aviso_proc_item_w.nr_id.first .. ptu_aviso_proc_item_w.nr_id.last
			update	ptu_aviso_proc_item	a
			set	a.nr_lote_contabil	= nr_lote_contabil_p
			where	rowid 			= ptu_aviso_proc_item_w.nr_id(i);
		commit;
		ptu_aviso_proc_item_w.nr_id.delete;
		end;
	end if;
	
	if (ptu_aviso_mat_item_w.nr_id.count > 0) then
		begin
		forall i in ptu_aviso_mat_item_w.nr_id.first .. ptu_aviso_mat_item_w.nr_id.last
			update	ptu_aviso_mat_item	a
			set	a.nr_lote_contabil	= nr_lote_contabil_p
			where	rowid 			= ptu_aviso_mat_item_w.nr_id(i);
		commit;
		ptu_aviso_mat_item_w.nr_id.delete;
		end;
	end if;
		
	if (ptu_aviso_proc_item_w.nr_id.count > 0) then
		begin
		forall i in ptu_aviso_procedimento_w.nr_id.first .. ptu_aviso_procedimento_w.nr_id.last
			update	ptu_aviso_procedimento	a
			set	a.nr_lote_contabil	= nr_lote_contabil_p
			where	rowid 			= ptu_aviso_procedimento_w.nr_id(i);
		commit;
		ptu_aviso_procedimento_w.nr_id.delete;
		end;
	end if;
	
	if (ptu_aviso_material_w.nr_id.count > 0) then
		begin
		forall i in ptu_aviso_material_w.nr_id.first .. ptu_aviso_material_w.nr_id.last
			update	ptu_aviso_material	a
			set	a.nr_lote_contabil	= nr_lote_contabil_p
			where	rowid 			= ptu_aviso_material_w.nr_id(i);
		commit;
		ptu_aviso_material_w.nr_id.delete;
		end;
	end if;

	if (ptu_nota_servico_w.nr_id.count > 0) then
		begin
		forall i in ptu_nota_servico_w.nr_id.first .. ptu_nota_servico_w.nr_id.last
			update	ptu_nota_servico	a
			set	a.nr_lote_contabil	= nr_lote_contabil_p
			where	rowid 			= ptu_nota_servico_w.nr_id(i);
		commit;
		ptu_nota_servico_w.nr_id.delete;
		end;
	end if;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	
	CALL agrupa_movimento_contabil(	nr_lote_contabil_p,
					nm_usuario_p);
end if;

if (coalesce(ds_retorno_p::text, '') = '') then
	update	lote_contabil
	set	ie_situacao 		= 'A',
		dt_geracao_lote		= CASE WHEN ie_exclusao_p='N' THEN clock_timestamp() WHEN ie_exclusao_p='S' THEN null END
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	if (ie_exclusao_p	= 'S') then
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165188);

		CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
					2,
					'',
					nm_usuario_p);
	else
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165187);

		CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
					1,
					wheb_mensagem_pck.get_texto(1097175),
					nm_usuario_p);
	end if;
	
	commit;
else
	rollback;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_contab_aviso_cobr ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

