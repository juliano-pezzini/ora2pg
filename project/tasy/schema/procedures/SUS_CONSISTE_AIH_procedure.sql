-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_consiste_aih ( nr_interno_conta_p bigint, nr_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE



ds_detalhe_w			varchar(255) := null;
cd_estabelecimento_w		smallint;
ie_aih_w				varchar(1)	:= 'S';
nr_aih_w				bigint;
nr_aih_anterior_w		bigint;
nr_aih_posterior_w			bigint;
nr_seq_aih_w			bigint;
nr_aih_consiste13_w		bigint;
ds_digito_aih13_w			varchar(1);
cd_procedimento_solic_w		bigint;
ie_origem_proc_solic_w		bigint;
cd_procedimento_real_w		bigint;
cd_proced_real_original_w		bigint;
ie_origem_proc_real_w		bigint;
ie_mudanca_proc_w		varchar(1);
ds_erro_w			varchar(255);
cd_cid_principal_w			varchar(4);
cd_cid_secundario_w		varchar(4);
cd_cid_causa_compl_w		varchar(4);
cd_cid_causa_morte_w		varchar(4);
cd_modalidade_w			smallint;
qt_nascido_vivo_w			smallint		:= 0;
qt_nascido_morto_w		smallint		:= 0;
dt_entrada_w			timestamp;
dt_alta_w				timestamp;
dt_inicial_w			timestamp;
dt_final_w			timestamp;
dt_final_aih_w			timestamp;
dt_emissao_w			timestamp;
qt_reg_civil_w			integer		:= 0;
qt_proc_regcivil_w			integer		:= 0;
qt_proc_laqvasec_w		integer		:= 0;
nr_seq_laqvasec_w			bigint;
qt_metodo_contracep_w		integer		:= 0;
qt_diarias_w			bigint	:= 0;
qt_diarias_proc_w			integer		:= 0;
cd_motivo_cobranca_w		smallint;
qt_reg_data_maior_w		integer		:= 0;
dt_emissao_rn_w			timestamp;
cd_proc_conta_w			bigint;
qt_proc_psiquiatrico_w		integer		:= 0;
qt_proc_vdrl_w			integer		:= 0;
qt_proc_hiv_w			integer		:= 0;
qt_proc_acop_w			integer		:= 0;
qt_proc_realizado_w		double precision	:= 0;

qt_proc_incentivo_w		integer		:= 0;
qt_proc_incentivo_ww		integer		:= 0;
nr_gestante_prenatal_w		bigint	:= 10;
qt_proc_incompativel_w		integer		:= 0;
qt_diarias_uti_w			integer		:= 0;
qt_permanencia_w			integer		:= 0;
qt_dias_perm_w			integer		:= 0;

qt_proc_parto_w			integer		:= 0;
cd_carater_internacao_w		varchar(2);
ie_carater_inter_sus_w		varchar(2);
nr_seq_parto_w			bigint;
qt_partic_parto_w			integer 	:= 0;
qt_motivo_alta_w			integer		:= 0;
qt_registro_civil_w			integer		:= 0;
qt_proc_principal_w			bigint	:= 0;
qt_diarias_uti_mes_w		bigint	:= 0;
qt_uti_perm_w			bigint	:= 0;
qt_proc_princ_w			integer		:= 0;
qt_mes_total_w			bigint	:= 0;
dt_inicio_cons_w			timestamp;
dt_fim_cons_w			timestamp;
qt_proc_mes_w			bigint	:= 0;
qt_proc_perm_w			bigint	:= 0;
ie_cons_113_w			varchar(1)	:= 'N';
ds_cons_113_w			varchar(255);
qt_diaria_uti_conta_w		bigint	:= 0;
cd_medico_responsavel_w		varchar(10);
cd_medico_solicitante_w		varchar(10);
cd_medico_autorizador_w		varchar(10);
cd_medico_atendimento_w		varchar(10);
ie_inconsistente_w			varchar(1)	:= 'N';
ie_codigo_autorizacao_w		smallint;
qt_proc_longa_perm_w		bigint	:= 0;
nr_meses_w			smallint;
nr_seq_conta_origem_w		bigint;
qt_laudo_aih_w			bigint	:= 0;
qt_proc_compat_w			integer;
ie_ignora_participou_sus_w		varchar(1)	:= 'N';
qt_registro_w			bigint;
cd_cid_indicacao_w		varchar(10);
qt_idade_w			varchar(50);
qt_registro_dn_w			bigint;
qt_dias_internado_w		bigint 	:= 0;
qt_procedimento_w			bigint	:= 0;
qt_regra_13_w			bigint	:= 0;
qt_regra_7_w			bigint	:= 0;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_proced_conta_w		bigint;
ie_orig_proc_w			bigint;
cd_proc_enteral_w			bigint 	:= 0;
cd_proc_parenteral_w		bigint 	:= 0;
nr_sequencia_w			bigint;
dt_procedimento_w			timestamp;
dt_proced_anter_w			timestamp;
qt_proc_comp_w			bigint;
cd_proced_anter_w			bigint;
cd_proc_secundario_w		bigint;
ie_origem_proc_sec_w		bigint;
nr_cns_resp_aih_w			varchar(20);
nr_cns_solic_aih_w			varchar(20);
nr_cns_autor_aih_w		varchar(20);
cd_estab_usuario_w		smallint;
ie_vincular_laudos_aih_w		varchar(1)	:= 'N';
qt_dados_aih_conta_w		bigint;
qt_proc_regra_2_w			bigint	:= 0;
ie_reinternacao_w			varchar(15)	:= 'N';
nr_seq_proc_neo_w		bigint;
qt_proc_neo_w			bigint;
dt_mesano_referencia_w		timestamp;
qt_proc_uti_Psiq_w			bigint;
qt_enferm_perm_w			bigint	:= 0;
qt_diaria_enferm_w			bigint	:= 0;
qt_total_diaria_enf_w		bigint	:= 0;
ds_justificativa_w			varchar(255);
qt_proc_princ_onc_w		bigint	:= 0;
qt_proc_w			bigint	:= 0;
nr_seq_interno_w			bigint	:= 0;
qt_saida_alta_w			smallint	:= 0;
qt_saida_obito_w			smallint	:= 0;
qt_saida_transferencia_w	smallint	:= 0;
nr_aih_anterior_ww		bigint;
qt_proced_w			bigint	:= 0;
cd_proc_incomp_w		bigint;
cd_grupo_proc_inco_w		sus_grupo.cd_grupo%type;
cont_w				bigint;
qt_proc_princ_uti_w		bigint;
qt_proc_diaria_uti_w		bigint;
qt_diar_uti_conta_w		bigint	:= 0;
qt_max_dia_tres_w		bigint	:= 0;
qt_max_dia_cinco_w		bigint	:= 0;
dt_periodo_final_w		conta_paciente.dt_periodo_final%type;
qt_comp_inicial_w 		bigint	:= 0;
qt_comp_final_w			bigint	:= 0;
qt_reg_comp_w			bigint	:= 0;
qt_dia_w				bigint	:= 0;
ie_w				varchar(15);
ie_valida_diaria_w		boolean  := false;


ds_texto_atend_w		varchar(100);
ds_texto_conta_w		varchar(100);
ds_texto_proc_w			varchar(100);
ds_texto_dt_alta_w		varchar(100);
ds_proc_real_w			varchar(100);
ds_texto_aih_w			varchar(100);
qt_proc_compativel_w		integer := 0;
cd_proc_aux_w			varchar(255);
ds_proc_vinc_sem_opme_w         varchar(255) := null;
nr_seq_proc_princ_w		procedimento_paciente.nr_seq_proc_princ%type;
cd_proc_principal_w		procedimento.cd_procedimento%type;
cd_pessoa_fisica_w		atendimento_paciente.cd_pessoa_fisica%type;

nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
nr_interno_conta_w		conta_paciente.nr_interno_conta%type;
cd_municopio_ibge_w		sus_parametros_aih.cd_municipio_ibge%type;
aih_inconsistente_w		boolean := false;
cd_proc_subcomp_w		bigint;
cd_erro_proc_real_w		bigint;

nr_aih_periodo_w		sus_aih_unif.nr_aih%type	:= 0;
qt_eleven_rule_w		integer;
qt_two_rule_w			integer;
qt_internacao_w			integer;

ds_texto_cid_w			varchar(100);
cd_cid_secundario2_w            sus_aih_unif.cd_cid_secundario2%type;
cd_cid_secundario3_w            sus_aih_unif.cd_cid_secundario3%type;
cd_cid_secundario4_w            sus_aih_unif.cd_cid_secundario4%type;
cd_cid_secundario5_w            sus_aih_unif.cd_cid_secundario5%type;
cd_cid_secundario6_w            sus_aih_unif.cd_cid_secundario6%type;
cd_cid_secundario7_w            sus_aih_unif.cd_cid_secundario7%type;
cd_cid_secundario8_w            sus_aih_unif.cd_cid_secundario8%type;
cd_cid_secundario9_w            sus_aih_unif.cd_cid_secundario9%type;
cd_texto_cid_w                  sus_aih_unif.cd_cid_secundario%type;


/*Cursor criado para a OS145209 Geliard*/

/*cursor c01 is
	select	qt_procedimento,
		cd_procedimento, 
		ie_origem_proced
	from	procedimento_paciente a,
		atendimento_paciente b
	where	a.nr_atendimento	= b.nr_atendimento
	and	b.ie_tipo_atendimento = 1
	and	b.ie_tipo_convenio	= 3
	and	a.ie_origem_proced	= 7
	and	a.nr_interno_conta	> 0
	and	cd_motivo_exc_conta is null
	and	dt_procedimento between ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(sysdate) and ESTABLISHMENT_TIMEZONE_UTILS.endOfMonth(sysdate); Removido para a OS 636808 */
c02 CURSOR FOR
	SELECT 	distinct a.cd_procedimento
	from	procedimento_paciente a,
		sus_valor_proc_paciente b
	where	a.nr_interno_conta	= nr_interno_conta_p
	and	a.nr_sequencia 		= b.nr_sequencia
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.ie_origem_proced	= 7
	and	coalesce(b.cd_registro_proc,sus_obter_tiporeg_proc(a.cd_procedimento,a.ie_origem_proced,'C',2)) in (3,4)
	order by cd_procedimento;

c_inco_108 CURSOR(nr_interno_conta_pp conta_paciente.nr_interno_conta%type) FOR
	SELECT	a.nr_sequencia,
		a.cd_procedimento,
		a.dt_procedimento
	from	procedimento_paciente a,
		sus_valor_proc_paciente b
	where	a.nr_interno_conta	= nr_interno_conta_pp
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.nr_sequencia 		= b.nr_sequencia
	and	a.ie_origem_proced	= 7
	and	coalesce(b.cd_registro_proc,sus_obter_tiporeg_proc(a.cd_procedimento,a.ie_origem_proced,'C',2)) = 3
	order by cd_procedimento;
	
c_inco_108_w	c_inco_108%rowtype;

cusrsor04 CURSOR(nr_interno_conta_pp	procedimento_paciente.nr_interno_conta%type,
		cd_proced_real_pp	procedimento_paciente.cd_procedimento%type,
		ie_orig_proc_real_pp	procedimento_paciente.ie_origem_proced%type) FOR
	SELECT	sum(a.qt_procedimento) qt_procedimento,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_proc_princ
	from	procedimento_paciente a
	where	a.nr_interno_conta	= nr_interno_conta_pp
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.cd_procedimento	<> cd_proced_real_pp
	and	a.ie_origem_proced	= 7
	and	exists (SELECT	1
			from	sus_proc_compativel b
			where	b.cd_proc_principal	= cd_proced_real_pp
			and	b.ie_origem_proc_princ	= ie_orig_proc_real_pp
			and	b.cd_proc_secundario	= a.cd_procedimento
			and	b.ie_origem_proc_sec	= a.ie_origem_proced
			and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1)
	group by a.nr_seq_proc_princ,
		a.cd_procedimento,
		a.ie_origem_proced;

cusrsor04_w	cusrsor04%rowtype;

C05 CURSOR FOR
	SELECT	b.cd_procedimento,
		b.ie_origem_proced
	from	sus_proc_compativel a,
		procedimento_paciente b
	where	a.cd_proc_secundario	= b.cd_procedimento
	and	a.ie_origem_proc_sec	= b.ie_origem_proced
	and	b.nr_interno_conta	= nr_interno_conta_p
	and	b.cd_procedimento	<> cd_procedimento_real_w
	and	b.ie_origem_proced	= 7
	group by b.cd_procedimento,
		b.ie_origem_proced;

type fetch_array is table of c05%rowtype;
s_array 	fetch_array;
i		integer := 1;
type vetor is table of fetch_array index by integer;
vetor_c05_w	vetor;
	
c06 CURSOR FOR
	SELECT	distinct cd_procedimento
	from	procedimento_paciente
	where	nr_interno_conta 		= nr_interno_conta_p
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and	ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_procedimento) 	= ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_inicial_w)
	and	sus_obter_se_detalhe_proc(cd_procedimento,ie_origem_proced,'10065',dt_procedimento) > 0
	and	ie_origem_proced		= 7
	and	qt_max_dia_tres_w		> 0
	
union

	SELECT	distinct cd_procedimento
	from	procedimento_paciente
	where	nr_interno_conta 		= nr_interno_conta_p
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and	ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_procedimento)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_final_w)
	and	sus_obter_se_detalhe_proc(cd_procedimento,ie_origem_proced,'10065',dt_procedimento) > 0
	and	ie_origem_proced		= 7
	and	qt_max_dia_tres_w		> 0
	
union

	select	distinct cd_procedimento
	from	procedimento_paciente
	where	nr_interno_conta 		= nr_interno_conta_p
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and	ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_procedimento)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_inicial_w)
	and	sus_obter_se_detalhe_proc(cd_procedimento,ie_origem_proced,'10066',dt_procedimento) > 0
	and	ie_origem_proced		= 7
	and	qt_max_dia_cinco_w		> 0
	order by cd_procedimento;

c06_w	c06%rowtype;

c07 CURSOR FOR
	SELECT  p.cd_procedimento
	from	procedimento_paciente p,
		conta_paciente c
	where	p.ie_origem_proced = 7
	and	(p.nr_seq_proc_princ IS NOT NULL AND p.nr_seq_proc_princ::text <> '')
	and	coalesce(p.cd_motivo_exc_conta::text, '') = ''
	and	p.nr_interno_conta 	= nr_interno_conta_p
	and 	c.nr_atendimento	= nr_atendimento_p
	and	p.nr_interno_conta 	= c.nr_interno_conta
	and	not exists (	SELECT	1
				from	sus_procedimento a,
					sus_forma_organizacao f,
					sus_subgrupo s,
					sus_grupo g
				where	a.nr_seq_forma_org = f.nr_sequencia
				and	f.nr_seq_subgrupo = s.nr_sequencia
				and	s.nr_seq_grupo = g.nr_sequencia
				and	g.cd_grupo = 7 
				and	a.cd_procedimento = p.cd_procedimento
				and	a.ie_origem_proced = p.ie_origem_proced);

cursor08 CURSOR(dt_mesano_referencia_pp	procedimento_paciente.dt_procedimento%type) FOR
	SELECT	a.qt_procedimento,
		a.cd_procedimento, 
		a.ie_origem_proced,
		a.dt_procedimento
	from	procedimento_paciente a,
		atendimento_paciente b,
		conta_paciente c
	where	a.nr_atendimento	= b.nr_atendimento
	and	a.nr_interno_conta	= c.nr_interno_conta
	and	b.ie_tipo_atendimento	= 1
	and	b.ie_tipo_convenio	= 3
	and	a.ie_origem_proced	= 7
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.dt_procedimento between ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_mesano_referencia_pp) and ESTABLISHMENT_TIMEZONE_UTILS.endOfMonth(dt_mesano_referencia_pp);

cursor08_w	cursor08%rowtype;

cursor09 CURSOR(dt_mesano_referencia_pp conta_paciente.dt_mesano_referencia%type) FOR
	SELECT	b.nr_atendimento,
		b.nr_interno_conta
	from	atendimento_paciente a,
		conta_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and	a.ie_tipo_atendimento	= 1
	and	a.ie_tipo_convenio	= 3
	and	coalesce(a.dt_cancelamento::text, '') = ''
	and	ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(b.dt_mesano_referencia) = ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_mesano_referencia_pp)
	group by b.nr_atendimento, b.nr_interno_conta;

cursor09_w	cursor09%rowtype;
BEGIN

ds_texto_atend_w		:= wheb_mensagem_pck.Get_texto(297915);
ds_texto_conta_w		:= wheb_mensagem_pck.Get_texto(280625);
ds_texto_proc_w			:= wheb_mensagem_pck.Get_texto(281195);
ds_texto_dt_alta_w		:= wheb_mensagem_pck.Get_texto(300053);
ds_proc_real_w			:= wheb_mensagem_pck.Get_texto(300066);
ds_texto_aih_w			:= wheb_mensagem_pck.Get_texto(278144);
ds_texto_cid_w			:= wheb_mensagem_pck.Get_texto(1150100);

begin
cd_estab_usuario_w := coalesce(wheb_usuario_pck.get_cd_estabelecimento,0);
exception
when others then
	cd_estab_usuario_w := 0;
end;
/* Obter dados da conta e do procedimento */

select	coalesce(max(cd_estabelecimento),1),
	coalesce(max(nr_seq_conta_origem),0),
	coalesce(max(obter_se_contido_char(ds_observacao,wheb_mensagem_pck.get_texto(298866))),'N'),
	max(dt_mesano_referencia),
	max(dt_periodo_final)
into STRICT	cd_estabelecimento_w,
	nr_seq_conta_origem_w,
	ie_reinternacao_w,
	dt_mesano_referencia_w,
	dt_periodo_final_w
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_p;

/*Obter dados do Atendimento*/

select	max(dt_entrada),
	coalesce(max(dt_alta),null),
	max(ie_carater_inter_sus)
into STRICT	dt_entrada_w,
	dt_alta_w,
	ie_carater_inter_sus_w
from	atendimento_paciente
where	nr_atendimento		= nr_atendimento_p;

select	coalesce(max(qt_max_diaria_uti),0),
	coalesce(max(qt_max_diaria_enferm),0),
	coalesce(max(ie_ignora_participou_sus),'N')
into STRICT	qt_uti_perm_w,
	qt_enferm_perm_w,
	ie_ignora_participou_sus_w
from	sus_parametros_aih
where	cd_estabelecimento	= cd_estabelecimento_w;

ie_vincular_laudos_aih_w 	:= coalesce(obter_valor_param_usuario(1123,180,obter_perfil_ativo, nm_usuario_p, cd_estab_usuario_w),'N');

/* Obter dados da AIH */

begin

select	nr_aih,
	nr_anterior_aih,
	nr_proxima_aih,
	nr_sequencia,
	cd_procedimento_solic,
	ie_origem_proc_solic,
	cd_procedimento_real,
	ie_origem_proc_real,
	ie_mudanca_proc,
	cd_cid_principal,
	cd_cid_secundario,
	cd_cid_causa_compl,
	cd_cid_causa_morte,
	cd_modalidade,
	qt_nascido_vivo,
	qt_nascido_morto,
	coalesce(dt_inicial,dt_entrada_w),
	coalesce(dt_final,dt_alta_w),
	dt_emissao,
	cd_motivo_cobranca,
	cd_carater_internacao,
	cd_medico_responsavel,
	cd_medico_autorizador,
	cd_medico_solic,  
	ie_codigo_autorizacao,
	nr_gestante_prenatal,
	ds_justificativa_cns,
	qt_saida_alta,
	qt_saida_obito,
	qt_saida_transferencia,
	somente_numero(Sus_Obter_Estrut_Proc(cd_procedimento_real,ie_origem_proc_real,'C','G')),
        cd_cid_secundario2,
        cd_cid_secundario3,
        cd_cid_secundario4,
        cd_cid_secundario5,
        cd_cid_secundario6,
        cd_cid_secundario7,
        cd_cid_secundario8,
        cd_cid_secundario9
into STRICT	nr_aih_w,
	nr_aih_anterior_w,
	nr_aih_posterior_w,
	nr_seq_aih_w,
	cd_procedimento_solic_w,
	ie_origem_proc_solic_w,
	cd_procedimento_real_w,
	ie_origem_proc_real_w,
	ie_mudanca_proc_w,
	cd_cid_principal_w,
	cd_cid_secundario_w,
	cd_cid_causa_compl_w,
	cd_cid_causa_morte_w,
	cd_modalidade_w,
	qt_nascido_vivo_w,
	qt_nascido_morto_w,
	dt_inicial_w,
	dt_final_w,
	dt_emissao_w,
	cd_motivo_cobranca_w,
	cd_carater_internacao_w,
	cd_medico_responsavel_w,
	cd_medico_autorizador_w,
	cd_medico_solicitante_w,
	ie_codigo_autorizacao_w,
	nr_gestante_prenatal_w,
	ds_justificativa_w,
	qt_saida_alta_w,
	qt_saida_obito_w,
	qt_saida_transferencia_w,
	cd_grupo_proc_inco_w,
        cd_cid_secundario2_w,
        cd_cid_secundario3_w,
        cd_cid_secundario4_w,
        cd_cid_secundario5_w,
        cd_cid_secundario6_w,
        cd_cid_secundario7_w,
        cd_cid_secundario8_w,
        cd_cid_secundario9_w
from	sus_aih_unif
where	nr_interno_conta	= nr_interno_conta_p
and	nr_atendimento		= nr_atendimento_p;
exception
	when others then
	ie_aih_w	:= 'N';
end;

if (ie_vincular_laudos_aih_w = 'S') and (ie_aih_w = 'N') then
	begin
	ie_aih_w := 'S';
	
	select	coalesce(max(x.nr_seq_interno),0)
	into STRICT	nr_seq_interno_w
	from	sus_laudo_paciente x
	where	x.nr_interno_conta	= nr_interno_conta_p
	and	x.nr_atendimento	= nr_atendimento_p
	and	x.ie_classificacao 	= 1
	and	x.ie_tipo_laudo_sus 	= 1;
	
	if (nr_seq_interno_w = 0) then
		begin
		select	coalesce(max(x.nr_seq_interno),0)
		into STRICT	nr_seq_interno_w
		from	sus_laudo_paciente x
		where	x.nr_interno_conta	= nr_interno_conta_p
		and	x.nr_atendimento	= nr_atendimento_p
		and	x.ie_classificacao 	= 1
		and	x.ie_tipo_laudo_sus 	= 0;
		end;
	end if;
	
	if (coalesce(nr_seq_interno_w,0) > 0) then
		begin
		
		/* Obter dados da AIH */

		begin
		select	null,
			null,
			null,
			null,
			cd_procedimento_solic,
			ie_origem_proced,
			cd_procedimento_solic,
			ie_origem_proced,
			CASE WHEN ie_tipo_laudo_sus=0 THEN 'N'  ELSE 'S' END ,
			cd_cid_principal,
			cd_cid_secundario,
			cd_cid_causa_assoc,
			null,
			null,
			0,
			0,
			dt_entrada_w,
			dt_alta_w,
			dt_emissao,
			null,
			null,
			cd_medico_responsavel,
			null,
			cd_medico_requisitante,
			0,
			0,
			0,
			0
		into STRICT	nr_aih_w,
			nr_aih_anterior_w,
			nr_aih_posterior_w,
			nr_seq_aih_w,
			cd_procedimento_solic_w,
			ie_origem_proc_solic_w,
			cd_procedimento_real_w,
			ie_origem_proc_real_w,
			ie_mudanca_proc_w,
			cd_cid_principal_w,
			cd_cid_secundario_w,
			cd_cid_causa_compl_w,
			cd_cid_causa_morte_w,
			cd_modalidade_w,
			qt_nascido_vivo_w,
			qt_nascido_morto_w,
			dt_inicial_w,
			dt_final_w,
			dt_emissao_w,
			cd_motivo_cobranca_w,
			cd_carater_internacao_w,
			cd_medico_responsavel_w,
			cd_medico_autorizador_w,
			cd_medico_solicitante_w,
			ie_codigo_autorizacao_w,
			qt_saida_alta_w,
			qt_saida_obito_w,
			qt_saida_transferencia_w
		from	sus_laudo_paciente
		where	nr_seq_interno = nr_seq_interno_w;
		exception
		when others then
			ie_aih_w	:= 'N';
		end;
		
		end;
	end if;	
	
	select	count(1)
	into STRICT	qt_dados_aih_conta_w
	from	sus_dados_aih_conta
	where	nr_interno_conta = nr_interno_conta_p  LIMIT 1;
	
	if (qt_dados_aih_conta_w > 0) then
		begin
		
		begin
		select	coalesce(max(ie_codigo_autorizacao),0),
			max(nr_gestante_prenatal),
			coalesce(max(qt_nascido_vivo),0),
			coalesce(max(qt_nascido_morto),0),
			coalesce(max(qt_saida_alta),0),
			coalesce(max(qt_saida_obito),0),
			coalesce(max(qt_saida_transferencia),0),
			max(CD_CID_CAUSA_MORTE),
			coalesce(max(cd_motivo_cobranca),0)
		into STRICT	ie_codigo_autorizacao_w,
			nr_gestante_prenatal_w,
			qt_nascido_vivo_w,
			qt_nascido_morto_w,
			qt_saida_alta_w,
			qt_saida_obito_w,
			qt_saida_transferencia_w,
			cd_cid_causa_morte_w,
			cd_motivo_cobranca_w
		from	sus_dados_aih_conta
		where	nr_interno_conta = nr_interno_conta_p;		
		exception
		when others then
			ie_codigo_autorizacao_w := 0;
			nr_gestante_prenatal_w	:= null;
			cd_motivo_cobranca_w	:= 0;
		end;
		
		end;
	end if;
	
	end;
end if;

qt_eleven_rule_w	:= coalesce(sus_validar_regra( nr_seq_regra_p => 11,cd_procedimento_p => cd_procedimento_real_w,ie_origem_proced_p => ie_origem_proc_real_w,dt_competencia_p => dt_inicial_w),0);
qt_two_rule_w		:= coalesce(sus_validar_regra( nr_seq_regra_p => 2,cd_procedimento_p => cd_procedimento_real_w,ie_origem_proced_p => ie_origem_proc_real_w,dt_competencia_p => dt_inicial_w),0);
/* 3 - Falta AIH para a conta, ou existe mais de uma AIH */

if (sus_obter_inco_ativa(3)) and (ie_aih_w = 'N') then
	CALL sus_gravar_inconsistencia(nr_interno_conta_p, 3, null, cd_estabelecimento_w, nm_usuario_p);
end if;

if (dt_inicial_w IS NOT NULL AND dt_inicial_w::text <> '') and (dt_final_w IS NOT NULL AND dt_final_w::text <> '') then
	qt_diarias_w	:= (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_final_w) - ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicial_w));
end if;

if (qt_diarias_w	= 0) then
	qt_diarias_w	:= 1;
end if;

/* Felipe - OS 85783 - Segundo o Divina, para os casos de obito, e contado o dia do obito como diaria ,
Geliard - OS 162880 - Segundo o Hospital Angelina Caron, o motivo 27 considera o ultimo dia como diaria.
Geliard - OS 162910 - Segundo a Fundacao Arnaldo Gavazza Filho, os motivos 21 e 22 consideram o ultimo dia como diaria.*/
if (cd_motivo_cobranca_w in (21,22,26,27,31,32,41,42,43)) then
	qt_diarias_w	:= qt_diarias_w + 1;
end if;

/* 53 -  Data anterior ao limite de 6 meses para apresentacao*/
      /*Portaria SAS ns 247 de 25  de  abril de 2008*/

if (ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_final_w)	<= ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(to_date('01/06/2008','dd/mm/yyyy'))) or (nr_seq_conta_origem_w 	> 0) then
	nr_meses_w			:= 7;
else
	nr_meses_w			:= 5;
end if;

if (sus_obter_inco_ativa(53)) and (dt_final_w < add_months(ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(clock_timestamp()), - nr_meses_w))  then
	ds_detalhe_w	:= substr(ds_texto_atend_w|| ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w ||' ' || nr_interno_conta_p || '; '|| ds_texto_proc_w ||' ' || cd_procedimento_solic_w,1,255);
	CALL sus_gravar_inconsistencia(nr_interno_conta_p, 53, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;

ds_detalhe_w	:= substr('AIH: ' || nr_aih_w || ' - ' || nr_seq_aih_w,1,255);

if (ie_aih_w	= 'S') then
	if (nr_aih_w IS NOT NULL AND nr_aih_w::text <> '') then
		begin
		ds_erro_w := sus_consiste_numero_aih(nr_interno_conta_p, nr_aih_w, nr_seq_aih_w, nm_usuario_p, 1, ds_erro_w);
		end;
	end if;
	
	ds_erro_w := sus_consiste_dados_aih(null, nr_aih_w, nr_seq_aih_w, cd_procedimento_real_w, ie_origem_proc_real_w, cd_cid_principal_w, cd_cid_secundario_w, cd_cid_causa_compl_w, cd_cid_causa_morte_w, cd_modalidade_w, nm_usuario_p, cd_estabelecimento_w, 1, ds_erro_w, nr_interno_conta_p);
	
	ds_erro_w := sus_consiste_procaih(nr_interno_conta_p, cd_procedimento_solic_w, ie_origem_proc_solic_w, cd_procedimento_real_w, ie_origem_proc_real_w, ie_mudanca_proc_w, nm_usuario_p, 1, ds_erro_w);	
	ds_erro_w := sus_consiste_profissional_aih(nr_interno_conta_p, null, nm_usuario_p, 1, ds_erro_w);

	if (sus_obter_inco_ativa(45)) and (qt_two_rule_w <> 0) and (qt_nascido_vivo_w	= 0) and (qt_nascido_morto_w	= 0) then
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p || '; '|| ds_texto_proc_w || ' ' || cd_procedimento_solic_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 45, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	/* 51 - Cartao Pre-Natal nao informado para procedimento de parto. */

	if (sus_obter_inco_ativa(51)) then
	
		if (qt_eleven_rule_w > 0) then
			begin
			select	count(1)
			into STRICT	qt_proc_regra_2_w
			from	procedimento_paciente
			where	nr_interno_conta = nr_interno_conta_p
			and	coalesce(cd_motivo_exc_conta::text, '') = ''
			and	sus_validar_regra(2,cd_procedimento,7,dt_procedimento) > 0;
			end;
		else
			qt_proc_regra_2_w		:= qt_two_rule_w;
		end if;
		
		if (qt_proc_regra_2_w > 0) and (coalesce(nr_gestante_prenatal_w::text, '') = '') then
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p || '; '|| ds_texto_proc_w || ' ' || cd_procedimento_real_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 51, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end if;
	end if;
	
	if (coalesce(nr_aih_w,0) > 0) then
		select	count(1)
		into STRICT	qt_reg_civil_w
		from	sus_registro_civil
		where	nr_aih		= nr_aih_w
		and	nr_seq_aih	= nr_seq_aih_w  LIMIT 1;
	else --lhalves OS 899605 em 27/07/2015 - Para os casos em que a AIH ainda nao tem conta (Santa Casa de POA)
		select	count(1)
		into STRICT	qt_reg_civil_w
		from	sus_registro_civil	
		where	nr_atendimento	= nr_atendimento_p;	
	end if;

	select	count(1)
	into STRICT	qt_proc_regcivil_w
	from	procedimento_paciente
	where	cd_procedimento		= 801010047
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and	nr_interno_conta	= nr_interno_conta_p  LIMIT 1;

	/*63 - Falta informacao do procedimento de incentivo civil para a conta */

	if (sus_obter_inco_ativa(63)) then
		begin
		if (qt_reg_civil_w		> 0) and (qt_proc_regcivil_w	= 0) then
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p || '; '|| ds_texto_proc_w || ' ' || cd_procedimento_real_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 63, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	select	count(1)
	into STRICT	qt_proc_laqvasec_w
	from	procedimento_paciente
	where	nr_atendimento		= nr_atendimento_p
	and	nr_interno_conta	= nr_interno_conta_p
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and	sus_validar_regra(6, cd_procedimento, ie_origem_proced,dt_procedimento) > 0  LIMIT 1;

	if (qt_proc_laqvasec_w	> 0) then
		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_laqvasec_w
		from	sus_laqueadura_vasectomia
		where	nr_aih		= nr_aih_w
		and	nr_seq_aih	= nr_seq_aih_w;

		/* 64 - Falta a informacao do registro de laqueadura ou vasectomia para a AIH */

		if (sus_obter_inco_ativa(64)) and (nr_seq_laqvasec_w = 0) and (nr_aih_w IS NOT NULL AND nr_aih_w::text <> '') then
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' ||  ds_texto_conta_w || ' ' || nr_interno_conta_p ||
					'; '|| wheb_mensagem_pck.get_texto(299642) || ' ' || nr_seq_laqvasec_w || '; AIH: ' || nr_aih_w || ' - ' || nr_seq_aih_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 64, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end if;

		/* 65 - Falta a informacao do metodo contraceptivo para a laqueadura ou vasectomia */

		if (sus_obter_inco_ativa(65)) and (nr_seq_laqvasec_w > 0) then
			
			select	count(1)
			into STRICT	qt_metodo_contracep_w
			from	sus_metodo_contraceptivo
			where	nr_seq_reg	= nr_seq_laqvasec_w  LIMIT 1;
			
			if (qt_metodo_contracep_w = 0) then
				ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p ||
					'; '|| wheb_mensagem_pck.get_texto(299699) || ': ' || nr_seq_laqvasec_w || '; ' || wheb_mensagem_pck.get_texto(299701) || ' ' || qt_metodo_contracep_w ||
					'; AIH.: ' || nr_aih_w || ' - ' || nr_seq_aih_w,1,255);
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 65, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end if;
		end if;
	end if;

	/* 68 - Diarias de UTI e/ou Acompanhante maior que diarias do paciente */

	if (sus_obter_inco_ativa(68)) then
		select	sum(coalesce(qt_procedimento,0))
		into STRICT	qt_diarias_proc_w
		from	procedimento_paciente
		where	nr_atendimento		= nr_atendimento_p
		and	nr_interno_conta	= nr_interno_conta_p
		and	coalesce(cd_motivo_exc_conta::text, '') = ''
		and	((sus_validar_regra(13, cd_procedimento, ie_origem_proced,dt_procedimento) > 0) or (sus_validar_regra(31, cd_procedimento, ie_origem_proced,dt_procedimento) > 0))
		and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicial_w) and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_final_w);

		if (qt_diarias_proc_w > qt_diarias_w) then
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p ||
					'; '||  wheb_mensagem_pck.get_texto(299724) || ' ' || qt_diarias_proc_w || '; ' || wheb_mensagem_pck.get_texto(299725) || ' ' || qt_diarias_w ||
					'; '|| wheb_mensagem_pck.get_texto(299727) || ' ' || dt_inicial_w || '; ' || wheb_mensagem_pck.get_texto(299728) || ' ' || dt_final_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 68, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end if;
	end if;

	/* 80 - AIH - Existem procedimentos com data de lancamento superior a data final da AIH */

	if (sus_obter_inco_ativa(80)) then
		begin
		
		dt_final_aih_w := coalesce(dt_final_w,dt_periodo_final_w);
		
		if (dt_final_aih_w IS NOT NULL AND dt_final_aih_w::text <> '') then
		
			select	count(1)
			into STRICT	qt_reg_data_maior_w
			from	procedimento_paciente
			where	nr_atendimento		= nr_atendimento_p
			and	nr_interno_conta	= nr_interno_conta_p
			and	coalesce(cd_motivo_exc_conta::text, '') = ''
			and	dt_final_aih_w < ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento)
			and	ie_origem_proced = 7  LIMIT 1;
	
			if (qt_reg_data_maior_w > 0) then
				ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p ||
						'; '|| wheb_mensagem_pck.get_texto(299728) || ' ' || dt_final_aih_w ||' ' || wheb_mensagem_pck.get_texto(280613) || ' ' || qt_reg_data_maior_w,1,255);
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 80, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end if;
		end if;
		
		end;
	end if;

	/* 81 - Data final da AIH maior que a data da alta do paciente */

	if (sus_obter_inco_ativa(81)) and (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') and (dt_final_w IS NOT NULL AND dt_final_w::text <> '') and (dt_final_w > dt_alta_w) and (coalesce(ie_reinternacao_w,'N') = 'N')then
		ds_detalhe_w	:= substr(ds_texto_atend_w ||' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p ||
					'; ' || ds_texto_dt_alta_w || ' ' || dt_alta_w || '; '|| wheb_mensagem_pck.get_texto(300057) || ' ' || dt_final_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 81, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;

	/* 85 - Data de emissao do registro civil superior a alta da paciente */

	if (sus_obter_inco_ativa(85)) then
		begin
		if (qt_reg_civil_w > 0) then
			begin
			select	max(coalesce(dt_emissao_rn, clock_timestamp()))
			into STRICT	dt_emissao_rn_w
			from	sus_registro_civil
			where	nr_aih		= nr_aih_w
			and	nr_seq_aih	= nr_seq_aih_w;

			if	not(coalesce(dt_alta_w::text, '') = '') and (dt_emissao_rn_w > dt_alta_w) then
				begin
				ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w ||' ' || nr_interno_conta_p ||
						'; '|| ds_texto_dt_alta_w || ' ' || dt_alta_w || '; ' || wheb_mensagem_pck.get_texto(300058) || ' ' || dt_emissao_rn_w,1,255);
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 85, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
				end;
			end if;
			end;
		end if;
		end;
	end if;

	/* 88 - Procedimento psiquiatrico realizado da AIH incompativel com procedimento informado na conta do paciente */

	if (sus_obter_inco_ativa(88)) then
		begin
		if (cd_procedimento_real_w = 0303170093) then
			begin
			cd_proc_conta_w	:= 0303170107;
			end;
		elsif (cd_procedimento_real_w	= 0303170107) then
			begin
			cd_proc_conta_w := 0303170093;
			end;
		end if;
		if (cd_procedimento_real_w in (0303170107, 0303170093)) then
			begin
			select	count(1)
			into STRICT	qt_proc_psiquiatrico_w
			from	procedimento_paciente
			where	cd_procedimento		= cd_proc_conta_w
			and	nr_interno_conta	= nr_interno_conta_p
			and	coalesce(cd_motivo_exc_conta::text, '') = ''  LIMIT 1;

			if (qt_proc_psiquiatrico_w > 0) then
				begin
				ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p || '; '|| ds_texto_proc_w || ' ' || cd_procedimento_real_w,1,255);
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 88, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
				end;
			end if;
			end;
		end if;
		end;
	end if;

	/* 89 - Procedimento de parto realizado da AIH exige exame para deteccao de sifilis */

	if (sus_obter_inco_ativa(89)) then
		begin
		if (qt_two_rule_w > 0) then
			begin
			select	count(1)
			into STRICT	qt_proc_vdrl_w
			from	procedimento_paciente
			where	nr_interno_conta	= nr_interno_conta_p
			and	coalesce(cd_motivo_exc_conta::text, '') = ''
			and	cd_procedimento		= 0202031179  LIMIT 1;

			if (qt_proc_vdrl_w = 0) then
				begin
				ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_Conta_w || ' ' || nr_interno_conta_p || '; ' || ds_texto_proc_w || ' ' || cd_procedimento_real_w,1,255);
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 89, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
				end;
			end if;
			end;
		end if;

		end;
	end if;

	/* 90 - Quantidade do Procedimento Realizado da AIH maior que 1 */

	if (sus_obter_inco_ativa(90)) and (sus_validar_regra(28, cd_procedimento_real_w, ie_origem_proc_real_w, dt_inicial_w) = 0) then

		select	coalesce(sum(qt_procedimento),0)
		into STRICT	qt_proc_realizado_w
		from	procedimento_paciente
		where	nr_interno_conta	= nr_interno_conta_p
		and	coalesce(cd_motivo_exc_conta::text, '') = ''
		and	cd_procedimento		= cd_procedimento_real_w
		and	ie_origem_proced	= 7;

		if (qt_proc_realizado_w > 1 ) then
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p || '; '|| ds_texto_proc_w || ' ' || cd_procedimento_real_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 90, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end if;

	end if;

	if (sus_obter_inco_ativa(91)) or (sus_obter_inco_ativa(92)) then
		begin
		select	count(1)
		into STRICT	qt_proc_incentivo_w
		from	procedimento_paciente
		where	nr_interno_conta	= nr_interno_conta_p
		and	cd_procedimento		= 0801010039
		and	coalesce(cd_motivo_exc_conta::text, '') = ''  LIMIT 1;

		if (sus_obter_inco_ativa(91)) and (coalesce(nr_gestante_prenatal_w::text, '') = '') and (qt_proc_incentivo_w > 0) and (qt_two_rule_w <> 0) then
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p || '; '|| ds_texto_proc_w || ' ' || cd_procedimento_real_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 91, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;

		select	count(1)
		into STRICT	qt_proc_incentivo_ww
		from	procedimento_paciente
		where	nr_interno_conta	= nr_interno_conta_p
		and	cd_procedimento		= 0801010047
		and	coalesce(cd_motivo_exc_conta::text, '') = ''  LIMIT 1;

		if (sus_obter_inco_ativa(92)) and (nr_gestante_prenatal_w IS NOT NULL AND nr_gestante_prenatal_w::text <> '') and (qt_proc_incentivo_w = 0) and (qt_proc_incentivo_ww = 0) and (qt_two_rule_w <>0) then
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p || '; '|| ds_texto_proc_w || ' ' || cd_procedimento_real_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 92, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	if (sus_obter_inco_ativa(93)) then
		begin
		
		cd_proced_real_original_w := cd_procedimento_real_w;
			
		if (qt_eleven_rule_w = 0) then
			begin

			select	max(a.qt_inco),
				max(a.cd_procedimento)
			into STRICT	qt_proc_incompativel_w,
				cd_procedimento_w
			from (	SELECT	count(*) qt_inco,
					max(a.cd_procedimento) cd_procedimento,
					max(a.ie_origem_proced) ie_origem_proced
				from	procedimento_paciente a
				where	a.nr_interno_conta	= nr_interno_conta_p
				and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
				and	a.cd_procedimento	<> cd_procedimento_real_w
				and	exists (	select	1
						from	sus_proc_compativel b
						where	b.cd_proc_principal	= cd_procedimento_real_w
						and	b.ie_origem_proc_princ	= ie_origem_proc_real_w
						and	b.cd_proc_secundario	= a.cd_procedimento
						and	b.ie_origem_proc_sec	= a.ie_origem_proced
						and	b.ie_tipo_compatibilidade = 2  LIMIT 1)
				
union

				SELECT	count(*) qt_inco,
					max(a.cd_procedimento) cd_procedimento,
					max(a.ie_origem_proced) ie_origem_proced
				from	procedimento_paciente a
				where	a.nr_interno_conta	= nr_interno_conta_p
				and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
				and	a.cd_procedimento  = 211020010
				and	not exists (	select	1
							from	sus_proc_compativel b
							where	b.cd_proc_principal	= cd_procedimento_real_w
							and	b.ie_origem_proc_princ	= ie_origem_proc_real_w
							and	b.cd_proc_secundario	= a.cd_procedimento
							and	b.ie_origem_proc_sec	= a.ie_origem_proced
							and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1)
				
union
 --OS 860653 -lhalves - 06/05/2015 - Verifica os itens so subgrupo 603, para que caso ele nao possua o proc real como compativel
				select	count(*) qt_inco,
					max(a.cd_procedimento) cd_procedimento,
					max(a.ie_origem_proced) ie_origem_proced
				from	procedimento_paciente a	
				where	a.nr_interno_conta	= nr_interno_conta_p
				and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
				and	Sus_Obter_Estrut_Proc(a.cd_procedimento, a.ie_origem_proced, 'C', 'S') = '603'
				and	not exists (	select	1
							from	sus_proc_compativel b
							where	b.cd_proc_principal	= cd_procedimento_real_w
							and	b.ie_origem_proc_princ	= ie_origem_proc_real_w
							and	b.cd_proc_secundario	= a.cd_procedimento
							and	b.ie_origem_proc_sec	= a.ie_origem_proced
							and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1)
				and	exists (	select	1
							from	sus_proc_compativel b
							where	b.cd_proc_secundario	= a.cd_procedimento
							and	b.ie_origem_proc_sec	= a.ie_origem_proced  LIMIT 1)
				
union
  -- OS 347498, Geliard, 12/09/2011
				select	count(*) qt_inco,
					max(a.cd_procedimento) cd_procedimento,
					max(a.ie_origem_proced) ie_origem_proced
				from	procedimento_paciente a
				where	a.nr_interno_conta	= nr_interno_conta_p
				and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
				and	a.cd_procedimento	<> cd_procedimento_real_w
				and	sus_validar_regra(4, cd_procedimento, ie_origem_proced, dt_procedimento) = 0
				and 	exists (	select	1
						from	sus_proc_compativel b
						where	b.cd_proc_principal	= cd_procedimento_real_w
						and	b.ie_origem_proc_princ	= ie_origem_proc_real_w  LIMIT 1)
				and 	exists (	select	1
						from	sus_proc_compativel b,
                                                        sus_valor_proc_paciente x
						where	b.cd_proc_secundario	= a.cd_procedimento
						and	b.ie_origem_proc_sec	= a.ie_origem_proced
                                                and	x.nr_sequencia		= b.nr_sequencia
						and	coalesce(x.cd_registro_proc,sus_obter_tiporeg_proc(b.cd_proc_principal, b.ie_origem_proc_princ, 'C', 2)) in (3,4,5)
						and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1)
				and	not exists (	select	1
							from	sus_proc_compativel b
							where	b.cd_proc_principal	= cd_procedimento_real_w
							and	b.ie_origem_proc_princ	= ie_origem_proc_real_w
							and	b.cd_proc_secundario	= a.cd_procedimento
							and	b.ie_origem_proc_sec	= a.ie_origem_proced
							and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1)) a
			where	not exists (	select	1
						from	sus_regra_proc_ncon_compat x
						where	x.cd_procedimento = a.cd_procedimento
						and	x.ie_origem_proced = a.ie_origem_proced
						and	x.ie_situacao = 'A');
			
			if (qt_proc_incompativel_w > 0) then
				begin
				ds_detalhe_w	:= substr(ds_texto_Atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p || '; '|| wheb_mensagem_pck.get_texto(300066) ||' ' || cd_procedimento_real_w || '; '|| ds_texto_proc_w || ' ' || cd_procedimento_w,1,255);
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 93, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
				end;
			end if;
			end;
		else
			begin			
			open c02;
			loop
			fetch c02 into
				cd_procedimento_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
				if (coalesce(cd_procedimento_w,0) <> 0) then
					begin

					cd_procedimento_real_w		:= cd_procedimento_w;

					select	max(a.qt_inco),
						max(a.cd_procedimento),
						max(a.ie)
					into STRICT	qt_proc_incompativel_w,
						cd_procedimento_w,
						ie_w
					from (	SELECT	count(*) qt_inco,
							max(a.cd_procedimento) cd_procedimento,
							max(a.ie_origem_proced) ie_origem_proced,
							max(1) ie
						from	procedimento_paciente a
						where	a.nr_interno_conta	= nr_interno_conta_p
						and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
						and	a.cd_procedimento	<> cd_procedimento_real_w
						and	exists (	select	1
								from	sus_proc_compativel b
								where	b.cd_proc_principal	= cd_procedimento_real_w
								and	b.ie_origem_proc_princ	= ie_origem_proc_real_w
								and	b.cd_proc_secundario	= a.cd_procedimento
								and	b.ie_origem_proc_sec	= a.ie_origem_proced
								and	b.ie_tipo_compatibilidade = 2  LIMIT 1)
						
union

						SELECT	count(*) qt_inco,
							max(a.cd_procedimento) cd_procedimento,
							max(a.ie_origem_proced) ie_origem_proced,
							max(2) ie
						from	procedimento_paciente a
						where	a.nr_interno_conta	= nr_interno_conta_p
						and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
						and	a.cd_procedimento = 211020010
						and	not exists (	select	1
									from	sus_proc_compativel b
									where	b.cd_proc_principal	= cd_procedimento_real_w
									and	b.ie_origem_proc_princ	= ie_origem_proc_real_w
									and	b.cd_proc_secundario	= a.cd_procedimento
									and	b.ie_origem_proc_sec	= a.ie_origem_proced
									and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1)
						and	not exists (select	1
									from	sus_proc_compativel b,
										procedimento_paciente c,
                                                                                sus_valor_proc_paciente x
									where	b.cd_proc_principal	= c.cd_procedimento
									and	b.ie_origem_proc_princ	= c.ie_origem_proced
									and	b.cd_proc_secundario	= a.cd_procedimento
									and	b.ie_origem_proc_sec	= a.ie_origem_proced
									and	c.nr_interno_conta	= nr_interno_conta_p
                                                                        and	x.nr_sequencia		= c.nr_sequencia
                                                                        and	coalesce(x.cd_registro_proc,sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced, 'C', 2)) = 3
									and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1)
						
union
 --OS 860653 - 06/05/2015 - Verifica os itens so subgrupo 603, para que caso ele nao possua o proc real como compativel
						select	count(*) qt_inco,
							max(a.cd_procedimento) cd_procedimento,
							max(a.ie_origem_proced) ie_origem_proced,
							max(3) ie
						from	procedimento_paciente a	
						where	a.nr_interno_conta	= nr_interno_conta_p
						and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
						and	Sus_Obter_Estrut_Proc(a.cd_procedimento, a.ie_origem_proced, 'C', 'S') = '603'
						and	not exists (	select	1
									from	sus_proc_compativel b
									where	b.cd_proc_principal	= cd_procedimento_real_w
									and	b.ie_origem_proc_princ	= ie_origem_proc_real_w
									and	b.cd_proc_secundario	= a.cd_procedimento
									and	b.ie_origem_proc_sec	= a.ie_origem_proced
									and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1)
						and	exists (	select	1
									from	sus_proc_compativel b
									where	b.cd_proc_secundario	= a.cd_procedimento
									and	b.ie_origem_proc_sec	= a.ie_origem_proced  LIMIT 1)
						and	not exists (select	1
									from	sus_proc_compativel b,
										procedimento_paciente c,
                                                                                sus_valor_proc_paciente x
									where	b.cd_proc_principal	= c.cd_procedimento
									and	b.ie_origem_proc_princ	= c.ie_origem_proced
									and	b.cd_proc_secundario	= a.cd_procedimento
									and	b.ie_origem_proc_sec	= a.ie_origem_proced
									and	c.nr_interno_conta	= nr_interno_conta_p
									and	x.nr_sequencia		= c.nr_sequencia
                                                                        and	coalesce(x.cd_registro_proc,sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced, 'C', 2)) = 3
									and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1)
						
union
  -- OS 347498, Geliard, 12/09/2011
						select	count(*) qt_inco,
							max(a.cd_procedimento) cd_procedimento,
							max(a.ie_origem_proced) ie_origem_proced,
							max(4) ie
						from	procedimento_paciente a
						where	a.nr_interno_conta	= nr_interno_conta_p
						and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
						and	a.cd_procedimento <> cd_procedimento_real_w
						and	a.cd_procedimento <> 211020010
						and	sus_validar_regra(4, cd_procedimento, ie_origem_proced,dt_procedimento) = 0
						and	coalesce(sus_obter_se_detalhe_proc(cd_procedimento,ie_origem_proced,'10043',a.dt_procedimento),0) = 0
						and 	exists (	select	1
								from	sus_proc_compativel b
								where	b.cd_proc_principal	= cd_procedimento_real_w
								and	b.ie_origem_proc_princ	= ie_origem_proc_real_w
								and	sus_validar_regra(4,cd_proc_secundario,ie_origem_proc_sec,null) = 0  LIMIT 1)
						and 	exists (	select	1
								from	sus_proc_compativel b,
                                                                        sus_valor_proc_paciente x
								where	b.cd_proc_secundario	= a.cd_procedimento
								and	b.ie_origem_proc_sec	= a.ie_origem_proced
								and	b.ie_tipo_compatibilidade in (1,4,5)
                                                                and	b.nr_sequencia		= x.nr_sequencia
								and	coalesce(x.cd_registro_proc,sus_obter_tiporeg_proc(b.cd_proc_principal, b.ie_origem_proc_princ, 'C', 2)) in (3,4,5)  LIMIT 1)
						and	not exists (	select	1
									from	sus_proc_compativel b
									where	b.cd_proc_principal	= cd_procedimento_real_w
									and	b.ie_origem_proc_princ	= ie_origem_proc_real_w
									and	b.cd_proc_secundario	= a.cd_procedimento
									and	b.ie_origem_proc_sec	= a.ie_origem_proced
									and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1)
						and	not exists (select	1
									from	sus_proc_compativel b,
										procedimento_paciente c,
                                                                                sus_valor_proc_paciente x
									where	b.cd_proc_principal	= c.cd_procedimento
									and	b.ie_origem_proc_princ	= c.ie_origem_proced
									and	b.cd_proc_secundario	= a.cd_procedimento
									and	b.ie_origem_proc_sec	= a.ie_origem_proced
									and	c.nr_interno_conta	= nr_interno_conta_p
                                                                        and	c.nr_sequencia		= x.nr_sequencia
									and	coalesce(x.cd_registro_proc,sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced, 'C', 2)) = 3
									and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1)
						
union
 --OS 1930317
                        select	count(*) qt_inco,
							max(a.cd_procedimento) cd_procedimento,
							max(a.ie_origem_proced) ie_origem_proced,
							max(1) ie
						from	procedimento_paciente a
						where	a.nr_interno_conta	= nr_interno_conta_p
						and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
						and	a.cd_procedimento	<> cd_proced_real_original_w
						and	exists (	select	1
								from	sus_proc_compativel b
								where	b.cd_proc_principal	= cd_proced_real_original_w
								and	b.ie_origem_proc_princ	= ie_origem_proc_real_w
								and	b.cd_proc_secundario	= a.cd_procedimento
								and	b.ie_origem_proc_sec	= a.ie_origem_proced
								and	b.ie_tipo_compatibilidade = 2  LIMIT 1)) a
						where	not exists (	select	1
									from	sus_regra_proc_ncon_compat x
									where	x.cd_procedimento = a.cd_procedimento
									and	x.ie_origem_proced = a.ie_origem_proced
									and	x.ie_situacao = 'A');

					if (qt_proc_incompativel_w > 0) then
						begin	

                        cd_erro_proc_real_w := cd_procedimento_real_w;
                        if (cd_procedimento_real_w = cd_procedimento_w) then
                            cd_erro_proc_real_w := cd_proced_real_original_w;
                        end if;

						ds_detalhe_w	:= substr(ds_texto_Atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p || '; '|| wheb_mensagem_pck.get_texto(300066) ||' ' || cd_erro_proc_real_w || '; ' || ds_texto_proc_w || ' ' || cd_procedimento_w,1,255);
						CALL sus_gravar_inconsistencia(nr_interno_conta_p, 93, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
						end;
					end if;
					end;
				end if;
				end;
			end loop;
			close c02;
			end;
		end if;
		cd_procedimento_real_w := cd_proced_real_original_w;
		end;
	end if;

	if (sus_obter_inco_ativa(94)) then
		begin
		select	coalesce(sum(qt_procedimento),0)
		into STRICT	qt_diarias_uti_w
		from	procedimento_paciente
		where	nr_atendimento		= nr_atendimento_p
		and	nr_interno_conta	= nr_interno_conta_p
		and	coalesce(cd_motivo_exc_conta::text, '') = ''
		and (sus_validar_regra(13, cd_procedimento, ie_origem_proced,dt_procedimento) > 0)
		and	dt_procedimento between dt_inicial_w and dt_final_w;

		select	coalesce(sum(qt_procedimento),0)
		into STRICT	qt_dias_perm_w
		from	procedimento_paciente
		where	nr_atendimento		= nr_atendimento_p
		and	nr_interno_conta	= nr_interno_conta_p
		and	coalesce(cd_motivo_exc_conta::text, '') = ''
		and	cd_procedimento		= 0802010199
		and	dt_procedimento between dt_inicial_w and dt_final_w;

		if (qt_diarias_w > 0) and (cd_procedimento_real_w IS NOT NULL AND cd_procedimento_real_w::text <> '') then
			begin
			select	coalesce(qt_dia_internacao_sus,0)
			into STRICT	qt_permanencia_w
			from	procedimento
			where	cd_procedimento		= cd_procedimento_real_w
			and	ie_origem_proced	= ie_origem_proc_real_w;
			exception
				when others then
				qt_permanencia_w	:= 0;
			end;
		end if;

		if (qt_dias_perm_w > 0) then
			begin
			if	((qt_diarias_w - (qt_permanencia_w * 2) - qt_diarias_uti_w) < qt_dias_perm_w) then
				begin
				ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_Conta_w || ' ' || nr_interno_conta_p || '; ' || ds_texto_proc_w ||' ' || cd_procedimento_real_w,1,255);
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 94, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
				end;
			end if;
			end;
		end if;
		end;
	end if;

	if (sus_obter_inco_ativa(95)) and (qt_two_rule_w > 0) then
		begin
		select  sum(coalesce(qt_procedimento,0))
		into STRICT    qt_proc_parto_w
		from    procedimento_paciente
		where   nr_atendimento          = nr_atendimento_p
		and     nr_interno_conta        = nr_interno_conta_p
		and     coalesce(cd_motivo_exc_conta::text, '') = ''
		and     coalesce(substr(sus_obter_estrut_proc(cd_procedimento, ie_origem_proced, 'C', 'F'),1,10),0) = 41701;

		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_parto_w
		from	procedimento_paciente
		where	nr_atendimento		= nr_atendimento_p
		and	nr_interno_conta	= nr_interno_conta_p
		and	cd_procedimento		= cd_procedimento_real_w
		and	ie_origem_proced	= ie_origem_proc_real_w;

		select	count(1)
		into STRICT	qt_partic_parto_w
		from	procedimento_participante
		where	nr_sequencia	= nr_seq_parto_w
		and	coalesce(sus_obter_indicador_equipe(ie_funcao),0)	= 6
		and	(((coalesce(ie_participou_sus,'S')	= 'S') and (ie_ignora_participou_sus_w = 'N')) or (ie_ignora_participou_sus_w = 'S'))  LIMIT 1;

		if      (qt_proc_parto_w > 0 AND qt_partic_parto_w > 0) or (qt_proc_parto_w > 1) then
			begin
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p || '; '|| ds_texto_proc_w || ' ' || cd_procedimento_real_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 95, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	if (sus_obter_inco_ativa(96)) then
	        begin
	        if (cd_carater_internacao_w <> ie_carater_inter_sus_w) then
	                begin
	                ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p || '; ' || ds_texto_proc_w || ' ' || cd_procedimento_real_w,1,255);
	                CALL sus_gravar_inconsistencia(nr_interno_conta_p, 96, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	                end;
	        end if;
	        end;
	end if;

	if (sus_obter_inco_ativa(97)) then
	        begin
		select	count(1)
		into STRICT	qt_motivo_alta_w
		from	motivo_alta
		where	cd_motivo_alta_sus	= cd_motivo_cobranca_w  LIMIT 1;

	        if (coalesce(cd_motivo_cobranca_w::text, '') = '') or (qt_motivo_alta_w = 0) then
	                begin
	                ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' ||ds_texto_conta_w || ' ' || nr_interno_conta_p || '; ' || ds_texto_proc_w || ' ' || cd_procedimento_real_w,1,255);
	                CALL sus_gravar_inconsistencia(nr_interno_conta_p, 97, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	                end;
	        end if;
	        end;
	end if;

	if (sus_obter_inco_ativa(105)) then
		begin
		select	count(1)
		into STRICT	qt_registro_civil_w
		from	sus_registro_civil
		where	nr_atendimento	= nr_atendimento_p
		and	coalesce(nr_aih::text, '') = ''
		and	coalesce(nr_seq_aih::text, '') = ''  LIMIT 1;

		if (qt_registro_civil_w > 0) then
			begin
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p || '; '|| ds_texto_proc_w || ' ' || cd_procedimento_real_w,1,255);
	                CALL sus_gravar_inconsistencia(nr_interno_conta_p, 105, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	/* 107 - Proc. realizado da AIH nao esta lancado na Conta Paciente.*/

	if (sus_obter_inco_ativa(107)) and (qt_eleven_rule_w = 0) then

		select	count(1)
		into STRICT	qt_proc_realizado_w
		from	procedimento_paciente
		where 	nr_interno_conta	= nr_interno_conta_p
		and	cd_procedimento		= cd_procedimento_real_w
		and	ie_origem_proced	= ie_origem_proc_real_w
		and	coalesce(cd_motivo_exc_conta::text, '') = ''  LIMIT 1;

		if (qt_proc_realizado_w	= 0) then
			ds_detalhe_w    := substr(ds_texto_atend_w ||' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p || '; ' || ds_texto_proc_w || ' ' || cd_procedimento_real_w,1,255);
	                CALL sus_gravar_inconsistencia(nr_interno_conta_p, 107, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end if;
	end if;

	if (sus_obter_inco_ativa(108)) and (qt_eleven_rule_w = 0)	then

		for  	c_inco_108_w in c_inco_108(nr_interno_conta_p) loop
			begin
			nr_sequencia_w		:= c_inco_108_w.nr_sequencia;
			cd_procedimento_w	:= c_inco_108_w.cd_procedimento;
			dt_procedimento_w	:= c_inco_108_w.dt_procedimento;
			
			qt_proc_principal_w := qt_proc_principal_w +1;
			if (sus_obter_estrut_proc(cd_procedimento_w,7,'C','F') = '30317') or (sus_obter_se_detalhe_proc(cd_procedimento_w,7,'007',dt_procedimento_w) > 0) then
				begin
				qt_proc_comp_w := 1;
				if (ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_procedimento_w) = ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_proced_anter_w)) then
					qt_proc_principal_w := qt_proc_comp_w + 1;
				elsif (sus_obter_estrut_proc(cd_proced_anter_w,7,'C','F') = '30317') or (sus_obter_se_detalhe_proc(cd_proced_anter_w,7,'007',dt_procedimento_w) > 0) then
					qt_proc_principal_w := 1;
				end if;
				dt_proced_anter_w := dt_procedimento_w;
				end;
			end if;
			cd_proced_anter_w := cd_procedimento_w;
			if (qt_proc_principal_w = 2) then
				exit;
			end if;
			end;
		end loop;		

		if (qt_proc_principal_w	> 1) then
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' ||ds_texto_conta_w ||' ' || nr_interno_conta_p || '; '|| ds_texto_proc_w || ' ' || cd_procedimento_real_w,1,255);
	                CALL sus_gravar_inconsistencia(nr_interno_conta_p, 108, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end if;
	end if;

	if (sus_obter_inco_ativa(109)) and (coalesce(cd_motivo_cobranca_w::text, '') = '') then
		ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||
				nr_interno_conta_p || '; ' || ds_texto_proc_w || ' ' || cd_procedimento_real_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 109, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;

	if (sus_obter_inco_ativa(112)) and (qt_uti_perm_w <> 0) then
		begin
		
		select	count(a.nr_sequencia)
		into STRICT	qt_diar_uti_conta_w
		from	procedimento_paciente a,
			atendimento_paciente b
		where	a.nr_atendimento        = b.nr_atendimento
		and	a.nr_interno_conta	= nr_interno_conta_p
		and	exists ( SELECT	1
				from	sus_regra_proc c
				where	c.nr_seq_regra in (7,13)
				and	a.cd_procedimento	= c.cd_procedimento
				and 	a.ie_origem_proced 	= c.ie_origem_proced  LIMIT 1)
		and	b.ie_tipo_atendimento 	= 1
		and	b.ie_tipo_convenio      = 3
		and	a.ie_origem_proced      = 7
		and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
		and	a.dt_procedimento between ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(clock_timestamp()) and ESTABLISHMENT_TIMEZONE_UTILS.endOfMonth(clock_timestamp())  LIMIT 1;
		
		if (qt_diar_uti_conta_w > 0) then
			begin
			/*Adicionado para a OS 636808-Geliard*/

			select	sum(a.qt_procedimento)
			into STRICT	qt_diarias_uti_mes_w
			from	procedimento_paciente a,
				atendimento_paciente b
			where	a.nr_atendimento        = b.nr_atendimento
			and	exists ( SELECT	1
				from	sus_regra_proc c
				where	c.nr_seq_regra in (7,13)
				and	a.cd_procedimento	= c.cd_procedimento
				and 	a.ie_origem_proced 	= c.ie_origem_proced  LIMIT 1)
			and	b.ie_tipo_atendimento 	= 1
			and	b.ie_tipo_convenio      = 3
			and	a.ie_origem_proced      = 7
			and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
			and	a.dt_procedimento between ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(clock_timestamp()) and ESTABLISHMENT_TIMEZONE_UTILS.endOfMonth(clock_timestamp());			
			end;
		else
			qt_diarias_uti_mes_w := 0;
		end if;		

		if (coalesce(qt_diarias_uti_mes_w,0) > qt_uti_perm_w) then
			begin
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p || '; ' ||
						ds_texto_proc_w || ' ' || cd_procedimento_real_w || '; ' ||
						wheb_mensagem_pck.get_texto(300314) || ' ' || qt_diarias_uti_mes_w || '; ' || wheb_mensagem_pck.get_texto(300315) || ' ' || qt_uti_perm_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 112, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	if (sus_obter_inco_ativa(113)) and (dt_inicial_w IS NOT NULL AND dt_inicial_w::text <> '') and (dt_final_w IS NOT NULL AND dt_final_w::text <> '') then
		begin
		
		dt_inicio_cons_w	:= dt_inicial_w;
		dt_fim_cons_w		:= dt_final_w;
		qt_mes_total_w		:= (trunc(to_char(dt_final_w,'mm')) - trunc(to_char(dt_inicial_w,'mm'))) + 1;
		qt_dia_w		:= 1;
		
		if (qt_mes_total_w > 0) then
			begin
			for i in 1..qt_mes_total_w loop
				if (ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_inicio_cons_w) = ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_final_w)) then
					begin					
					dt_fim_cons_w	:= dt_final_w;					
					if (cd_motivo_cobranca_w not in (21,22,23,24,25,26,27,28,31,32,41,42,43,65,66,67)) then
						qt_dia_w := 0;
					end if;					
					end;
				else
					dt_fim_cons_w	:= last_day(dt_inicio_cons_w);					
				end if;
				
				if (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_fim_cons_w) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_cons_w)) then
					qt_proc_perm_w	:= 1;
				else
					qt_proc_perm_w	:= ceil(trunc(dt_fim_cons_w) - trunc(dt_inicio_cons_w)) + qt_dia_w;
				end if;		

				select	coalesce(sum(qt_procedimento),0)
				into STRICT	qt_proc_mes_w
				from	procedimento_paciente
				where	nr_interno_conta = nr_interno_conta_p
				and	coalesce(cd_motivo_exc_conta::text, '') = ''
				and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_cons_w) and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_fim_cons_w)
				and	((sus_validar_regra(13, cd_procedimento, ie_origem_proced,dt_procedimento) > 0) or (sus_validar_regra(7, cd_procedimento, ie_origem_proced,dt_procedimento) > 0) or (sus_validar_regra(31, cd_procedimento, ie_origem_proced,dt_procedimento) > 0));
								
				if (qt_proc_mes_w > qt_proc_perm_w) then
					begin
					ie_cons_113_w	:= 'S';
					ds_cons_113_w 	:= substr(ds_cons_113_w|| wheb_mensagem_pck.get_texto(280613) || ' '|| qt_proc_mes_w || ' ' ||
								wheb_mensagem_pck.get_texto(280622) || ' ' || qt_proc_perm_w ||' ' || wheb_mensagem_pck.get_texto(280623) ||' ' ||to_char(dt_fim_cons_w,'mm/yyyy') ,1,255);
					end;
				end if;
				dt_inicio_cons_w	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(add_months(dt_inicio_cons_w,1));
			end loop;
			end;
		end if;
		
		if (ie_cons_113_w = 'S') then
			begin
			ds_detalhe_w    := substr('; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p || ds_cons_113_w ||'; ' || ds_texto_proc_w || ' ' || cd_procedimento_real_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 113, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	if (sus_obter_inco_ativa(115)) then
		begin
		select	count(1)
		into STRICT	qt_proc_princ_w
		from	procedimento_paciente a,
			sus_valor_proc_paciente b
		where	a.nr_interno_conta	= nr_interno_conta_p
		and	a.nr_sequencia 		= b.nr_sequencia
		and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
		and	a.nr_seq_proc_princ <> a.nr_sequencia
		and	coalesce(b.cd_registro_proc,sus_obter_tiporeg_proc(a.cd_procedimento,a.ie_origem_proced,'C',2)) = 3
		and (sus_validar_regra(9,cd_procedimento, ie_origem_proced,dt_procedimento) = 0 or
			sus_validar_regra(10,cd_procedimento, ie_origem_proced,dt_procedimento) = 0)  LIMIT 1;

		if (qt_proc_princ_w > 0) then
			begin
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_Conta_w || ' ' || nr_interno_conta_p || '; ' || ds_texto_proc_w || ' ' || cd_procedimento_real_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 115, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;

		end;
	end if;

	if (sus_obter_inco_ativa(122)) then
		begin
		select	coalesce(sum(qt_procedimento),0)
		into STRICT	qt_diaria_uti_conta_w
		from	procedimento_paciente
		where	nr_interno_conta	= nr_interno_conta_p
		and	coalesce(cd_motivo_exc_conta::text, '') = ''
		and	sus_validar_regra(13, cd_procedimento, ie_origem_proced,dt_procedimento) > 0;

		if (qt_diaria_uti_conta_w > 59) then
			begin
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 122, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	if (sus_obter_inco_ativa(123)) then
		begin

		select	coalesce(cd_medico_resp,'0')
		into STRICT	cd_medico_atendimento_w
		from	atendimento_paciente
		where	nr_atendimento	= nr_atendimento_p;

		if (cd_medico_responsavel_w <> cd_medico_atendimento_w) then
			begin
			ds_detalhe_w   :=  substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 123, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	if (sus_obter_inco_ativa(128)) then
		begin
		ie_inconsistente_w	:= substr(sus_consiste_regra_diaria_uti(nr_interno_conta_p),1,1);
		if (ie_inconsistente_w	= 'S') then
			begin
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 128, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	if (sus_obter_inco_ativa(129)) then
		begin
		select	count(1)
		into STRICT	qt_proc_longa_perm_w
		from	procedimento_paciente
		where	cd_procedimento		= 802010199
		and	ie_origem_proced	= 7
		and	coalesce(cd_motivo_exc_conta::text, '') = ''
		and	nr_interno_conta	= nr_interno_conta_p  LIMIT 1;

		if (coalesce(sus_verificar_codigo_autor(coalesce(ie_codigo_autorizacao_w,0),'PER'),'N') = 'N') and (qt_proc_longa_perm_w	> 0) then
			begin
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 129, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	if (sus_obter_inco_ativa(130)) then
		begin
		if (dt_inicial_w IS NOT NULL AND dt_inicial_w::text <> '') and ((to_char(dt_inicial_w,'yyyy'))::numeric  < 2007) then
			begin
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 130, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	if (sus_obter_inco_ativa(131)) then
		begin
		select	count(1)
		into STRICT	qt_laudo_aih_w
		from	sus_laudo_paciente
		where	nr_atendimento	= nr_atendimento_p
		and	nr_aih		= nr_aih_w  LIMIT 1;

		if (qt_laudo_aih_w = 0) then
			begin
			
			select	count(1)
			into STRICT	qt_laudo_aih_w
			from	sus_laudo_paciente
			where	nr_atendimento	= nr_atendimento_p
			and	nr_interno_conta = nr_interno_conta_p  LIMIT 1;			
			
			if (qt_laudo_aih_w = 0) then
				ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p,1,255);
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 131, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);			
			end if;			
			end;
		end if;
		end;
	end if;

	if	((sus_obter_inco_ativa(133)) and (qt_eleven_rule_w = 0)) then
		begin

                select	count(1)                
		into STRICT	qt_proc_compat_w
		from	sus_proc_compativel a
		where	a.cd_proc_principal 		= cd_procedimento_real_w
		and	a.ie_origem_proc_princ 		= ie_origem_proc_real_w
		and	a.ie_tipo_compatibilidade	= '1';

                if (qt_proc_compat_w > 0) then
                        begin
                        qt_proc_compat_w := 0;

                        select	count(1)
                        into STRICT	qt_proc_compat_w
                        from	sus_proc_compativel a
                        where	a.cd_proc_principal 		= cd_procedimento_real_w
                        and	a.ie_origem_proc_princ 		= ie_origem_proc_real_w
                        and	a.ie_tipo_compatibilidade	= '1'
                        and 	exists (	SELECT	1
                                                from	procedimento_paciente b
                                                where 	b.cd_procedimento 	= a.cd_proc_secundario
                                                and	coalesce(b.cd_motivo_exc_conta::text, '') = ''
                                                and 	b.nr_interno_conta 	= nr_interno_conta_p  LIMIT 1)  LIMIT 1;

                        if (qt_proc_compat_w = 0) then
                                begin
                                ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p,1,255);
                                CALL sus_gravar_inconsistencia(nr_interno_conta_p, 133, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
                                end;
                        end if;
                        end;
                end if;

		end;
	end if;

	if (sus_obter_inco_ativa(152)) and (sus_validar_regra(6,cd_procedimento_real_w,ie_origem_proc_real_w,dt_inicial_w) > 0) then
		
		begin
		select	max(cd_cid_indicacao)
		into STRICT	cd_cid_indicacao_w
		from	sus_laqueadura_vasectomia
		where	nr_aih = nr_aih_w
		and	nr_seq_aih = nr_seq_aih_w;
		exception
			when others then
			cd_cid_indicacao_w := null;
		end;

		if (cd_cid_indicacao_w <> 'Z302') and (cd_cid_indicacao_w IS NOT NULL AND cd_cid_indicacao_w::text <> '') then
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 152, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end if;
	end if;
	/*217 - Procedimentos lancados fora do periodo da AIH*/

	if (sus_obter_inco_ativa(217)) then
		begin
		qt_registro_w := 0;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	procedimento_paciente
		where	nr_interno_conta = nr_interno_conta_p
		and	coalesce(cd_motivo_exc_conta::text, '') = ''
		and	((ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) < ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicial_w))
				or (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) > ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_final_w)))  LIMIT 1;
		
		if (qt_registro_w > 0) then
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p || '; AIH: ' || nr_aih_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 217, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end if;
		
		end;
	end if;
	/*Quantidades de nascimentos incorreta nos dados do parto*/

	if (sus_obter_inco_ativa(246)) and (qt_two_rule_w <> 0) and
		((qt_nascido_vivo_w + qt_nascido_morto_w) <> (qt_saida_alta_w + qt_saida_obito_w + qt_saida_transferencia_w)) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p || '; AIH: ' || nr_aih_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 246, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
end if;

if (sus_obter_inco_ativa(141))  then
	select	count(1)
	into STRICT	qt_registro_w
	from	sus_carater_internacao
	where	cd_carater_internacao 	= cd_carater_internacao_w
	and	dt_inicial_w between dt_inicio_validade and dt_fim_validade  LIMIT 1;

	if (qt_registro_w	= 0) then
		ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p || ' ;'||' '||
					wheb_mensagem_pck.get_texto(300327) || ' ' ||cd_carater_internacao_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 141, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
end if;

if (sus_obter_inco_ativa(143))  and (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_emissao_w)	> ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicial_w)) then
	ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p || ' ;'||' '||
					wheb_mensagem_pck.get_texto(300327) || ' ' ||cd_carater_internacao_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 143, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;

if (sus_obter_inco_ativa(145)) and (nr_aih_anterior_w IS NOT NULL AND nr_aih_anterior_w::text <> '') then
	nr_aih_consiste13_w	:= trunc(nr_aih_anterior_w);

	ds_digito_aih13_w	:= consistir_digito('AIH',to_char(nr_aih_consiste13_w));

	if (ds_digito_aih13_w = 'N') then
		ds_detalhe_w    :=  substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p || ' ;'
		|| ' ' || wheb_mensagem_pck.get_texto(300330) || ' ' || nr_aih_anterior_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p,145, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
end if;

if (sus_obter_inco_ativa(146)) and (nr_aih_posterior_w IS NOT NULL AND nr_aih_posterior_w::text <> '') then
	nr_aih_consiste13_w	:= trunc(nr_aih_posterior_w);

	ds_digito_aih13_w	:= consistir_digito('AIH',to_char(nr_aih_consiste13_w));

	if (ds_digito_aih13_w = 'N') then
		ds_detalhe_w    :=  substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p || ' ;'
		|| ' ' || wheb_mensagem_pck.get_texto(300332) || ' ' || nr_aih_posterior_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p,146, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
end if;

if (sus_obter_inco_ativa(148)) and (cd_carater_internacao_w	= '02') then

	select	count(1)
	into STRICT	qt_registro_w
	from	sus_proced_incremento_origem
	where	cd_procedimento		= cd_procedimento_real_w
	and	ie_origem_proced	= ie_origem_proc_real_w
	and	cd_habilitacao in (2701,2702,2703)  LIMIT 1;

	if (qt_registro_w	= 0) then
		ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p,148, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
end if;

if (sus_obter_inco_ativa(155)) and (cd_procedimento_real_w in (	0505020041,0505020050,0505020068,0505020076,
					0505020092,0505020106,0505020114)) then
	select	count(1)
	into STRICT	qt_registro_w
	from	procedimento_paciente
	where	nr_interno_conta	= nr_interno_conta_p
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and	cd_procedimento		= 0503010030
	and	ie_origem_proced	= 7  LIMIT 1;

	if (qt_registro_w	= 0) then
		ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p||'; ' || wheb_mensagem_pck.get_texto(618468)|| ' '||cd_procedimento_real_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p,155, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
end if;

if (sus_obter_inco_ativa(157)) then
	begin

        qt_registro_w := 0;

        begin
        select  count(1)
	into STRICT	qt_registro_w
	from 	procedimento_paciente a,
		sus_estrutura_procedimento_v b
	where	a.cd_procedimento	= b.cd_procedimento
	and	a.ie_origem_proced	= b.ie_origem_proced
	and	b.cd_subgrupo in (302)
	and	a.nr_interno_conta	= nr_interno_conta_p
        group by a.cd_procedimento
        having  sum(a.qt_procedimento) > 20;
        exception
                when others then
                qt_registro_w := 0;
                end;

	if (qt_registro_w	> 0) then
		ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p||'; ' || wheb_mensagem_pck.get_texto(618468)|| ' '||cd_procedimento_real_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p,157, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	end;
end if;

if (sus_obter_inco_ativa(159)) then
		begin
		if (qt_two_rule_w > 0) then
			begin
			select	count(1)
			into STRICT	qt_proc_hiv_w
			from	procedimento_paciente
			where	nr_interno_conta	= nr_interno_conta_p
			and	coalesce(cd_motivo_exc_conta::text, '') = ''
			and	cd_procedimento		= 0214010040  LIMIT 1;

			if (qt_proc_hiv_w = 0) then
				begin
				ds_detalhe_w	:= substr(ds_texto_atend_w|| ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w ||' ' || nr_interno_conta_p || '; '|| ds_texto_proc_w ||' ' || cd_procedimento_real_w,1,255);
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 159, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
				end;
			end if;
			end;
		end if;

		end;
end if;

if (sus_obter_inco_ativa(160)) then
		begin
		begin
		select	substr(obter_idade_pf(cd_pessoa_fisica,clock_timestamp(),'A'),1,3)
		into STRICT	qt_idade_w
		from	atendimento_paciente
		where 	nr_atendimento = nr_atendimento_p;
		exception
			when others then
			qt_idade_w := '0';
		end;

		if	((qt_two_rule_w > 0) or ((qt_idade_w)::numeric  < 18) or ((qt_idade_w)::numeric  > 60)) then
			begin
			select	count(1)
			into STRICT	qt_proc_acop_w
			from	procedimento_paciente
			where	nr_interno_conta	= nr_interno_conta_p
			and		coalesce(cd_motivo_exc_conta::text, '') = ''
			and		sus_validar_regra(31,cd_procedimento,ie_origem_proced,dt_procedimento) > 0  LIMIT 1;

			if (qt_proc_acop_w = 0) then
				begin
				ds_detalhe_w	:= substr(ds_texto_atend_w|| ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w ||' ' || nr_interno_conta_p || '; '|| ds_texto_proc_w ||' ' || cd_procedimento_real_w,1,255);
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 160, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
				end;
			end if;
			end;
		end if;
		end;
end if;

if (sus_obter_inco_ativa(161)) and (qt_two_rule_w <> 0) then
	begin
	
	begin
	select 	count(a.nr_registro_dn)
	into STRICT	qt_registro_dn_w
	from 	sus_registro_civil a,
		sus_aih_unif b
	where	a.nr_seq_aih 		= b.nr_sequencia
	and	a.nr_aih		= b.nr_aih
	and	b.nr_interno_conta	= nr_interno_conta_p;
	exception
		when others then
		qt_registro_dn_w := 0;
	end;
	
	if (ie_vincular_laudos_aih_w = 'S') then
		begin
		
		begin
		select 	count(nr_registro_dn)
		into STRICT	qt_registro_dn_w
		from 	sus_registro_civil a
		where	a.nr_atendimento = nr_atendimento_p;
		exception
			when others then
			qt_registro_dn_w := 0;
		end;
		
		end;
	end if;

	select	count(1)
	into STRICT	qt_proc_incentivo_w
	from	procedimento_paciente
	where	nr_interno_conta	= nr_interno_conta_p
	and	cd_procedimento		= 0801010047
	and	coalesce(cd_motivo_exc_conta::text, '') = ''  LIMIT 1;

	if (qt_registro_dn_w = 0) and (qt_proc_incentivo_w > 0) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w|| ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w ||' ' || nr_interno_conta_p || '; '|| ds_texto_proc_w ||' ' || cd_procedimento_real_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p,161, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	end;
end if;

if (sus_obter_inco_ativa(162)) and (coalesce(cd_motivo_cobranca_w,0) not in (41,42,43,65,66,67)) then --lhalves OS 800555 em 09/10/2014 - Nao deve consistir permanencia para motivos de alta de obito.
	begin
	cd_proced_real_original_w := cd_procedimento_real_w;
	if (qt_eleven_rule_w > 0) then
		begin
		open c02;
		loop
		fetch c02 into
			cd_procedimento_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */

			if (coalesce(cd_procedimento_w,0)	<> 0) then
				begin

				cd_procedimento_real_w		:= cd_procedimento_w;

				begin
				select	coalesce(qt_dia_internacao_sus,0)
				into STRICT	qt_permanencia_w
				from	procedimento
				where	cd_procedimento		= cd_procedimento_real_w
				and	ie_origem_proced	= ie_origem_proc_real_w;
				exception
					when others then
					qt_permanencia_w	:= 0;
				end;

				begin
				select	obter_dias_internacao(nr_atendimento_p)
				into STRICT	qt_dias_internado_w
				;
				exception
					when others then
					qt_dias_internado_w	:= 0;
				end;

				if (sus_obter_inco_ativa(162)) and (coalesce(sus_verificar_codigo_autor(coalesce(ie_codigo_autorizacao_w,0),'PER'),'N') = 'N') and (qt_dias_internado_w < qt_permanencia_w) then
					begin
					ds_detalhe_w	:= substr(ds_texto_atend_w|| ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w ||' ' || nr_interno_conta_p || '; '|| ds_texto_proc_w ||' ' || cd_procedimento_real_w,1,255);
					CALL sus_gravar_inconsistencia(nr_interno_conta_p,162, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
					end;
				end if;

				end;
			end if;

		end loop;
		close c02;
		end;
	else
		begin
		select	coalesce(qt_dia_internacao_sus,0)
		into STRICT	qt_permanencia_w
		from	procedimento
		where	cd_procedimento		= cd_procedimento_real_w
		and	ie_origem_proced	= ie_origem_proc_real_w;
		exception
			when others then
			qt_permanencia_w	:= 0;
		end;

		begin
		select	obter_dias_internacao(nr_atendimento_p)
		into STRICT	qt_dias_internado_w
		;
		exception
			when others then
			qt_dias_internado_w	:= 0;
		end;

		if (sus_obter_inco_ativa(162)) and (coalesce(sus_verificar_codigo_autor(coalesce(ie_codigo_autorizacao_w,0),'PER'),'N') = 'N') and (qt_dias_internado_w < qt_permanencia_w) then
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w|| ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w ||' ' || nr_interno_conta_p || '; '|| ds_texto_proc_w ||' ' || cd_procedimento_real_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p,162, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
	end if;
	cd_procedimento_real_w := cd_proced_real_original_w;
	end;
end if;

if (sus_obter_inco_ativa(171)) then
	begin

	begin
	select	sum(coalesce(qt_procedimento,0))
	into STRICT	qt_registro_w
	from	procedimento_paciente
	where	nr_interno_conta = nr_interno_conta_p
	and	sus_validar_regra(68, cd_procedimento, ie_origem_proced,dt_procedimento) > 0;
	exception
		when others then
		qt_registro_w	:= 0;
	end;

	qt_dias_internado_w := (dt_final_w - dt_inicial_w) + 1;

	if (qt_dias_internado_w < qt_registro_w) then
		begin
		ds_detalhe_w    := substr(ds_texto_atend_w|| ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p|| '; ' || wheb_mensagem_pck.get_texto(295367) || ' ' ||(qt_registro_w - ceil(dt_final_w - dt_inicial_w)),1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p,171, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;

	end;
end if;

if (sus_obter_inco_ativa(174)) and (cd_motivo_cobranca_w = 51) and (coalesce(nr_aih_posterior_w::text, '') = '') then
	begin
	ds_detalhe_w    := substr(ds_texto_atend_w|| ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p,1,255);
	CALL sus_gravar_inconsistencia(nr_interno_conta_p,174, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end;
end if;

if (sus_obter_inco_ativa(176)) and (cd_procedimento_real_w = 303170107) and (cd_motivo_cobranca_w in (21,22,23,24,25,26,27,28)) then
	begin
	ds_detalhe_w    := substr(ds_texto_atend_w|| ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p,1,255);
	CALL sus_gravar_inconsistencia(nr_interno_conta_p,176, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end;
end if;

if (sus_obter_inco_ativa(180)) then
	begin
	select	coalesce(max(cd_procedimento),0)
	into STRICT	cd_proc_enteral_w
	from	procedimento_paciente
	where	nr_interno_conta = nr_interno_conta_p
	and	cd_procedimento	in (309010047,309010055,309010063);

	select	coalesce(max(cd_procedimento),0)
	into STRICT	cd_proc_parenteral_w
	from	procedimento_paciente
	where	nr_interno_conta = nr_interno_conta_p
	and	cd_procedimento	in (309010071,309010080,309010098);

	if (coalesce(cd_proc_enteral_w,0) <> 0)		and (coalesce(cd_proc_parenteral_w,0) <> 0) 	then
	ds_detalhe_w    := substr(ds_texto_atend_w|| ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p ||
				'; ' || wheb_mensagem_pck.get_texto(300333) || ' ' ||cd_proc_enteral_w||' e '|| cd_proc_parenteral_w,1,255);
	CALL sus_gravar_inconsistencia(nr_interno_conta_p,180, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	end;
end if;

if (sus_obter_inco_ativa(182)) and
	((cd_motivo_cobranca_w in (27,32,62,67)) or
	((cd_motivo_cobranca_w = 21) and (sus_obter_se_detalhe_proc(cd_procedimento_real_w,ie_origem_proc_real_w,'10024',dt_emissao_w) > 0)) or
	((cd_motivo_cobranca_w = 22) and (sus_obter_se_detalhe_proc(cd_procedimento_real_w,ie_origem_proc_real_w,'10025',dt_emissao_w) > 0))) and (coalesce(nr_aih_posterior_w::text, '') = '') then
	begin
	ds_detalhe_w    := substr(ds_texto_atend_w|| ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p,1,255);
	CALL sus_gravar_inconsistencia(nr_interno_conta_p,182, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end;
end if;

if (sus_obter_inco_ativa(185)) and (cd_motivo_cobranca_w = 19) then
	begin

	select	count(1)
	into STRICT	qt_registro_w
	
	where	cd_procedimento_real_w in (303170093,303170085)  LIMIT 1;

	if (qt_registro_w = 0) then
		ds_detalhe_w    := substr(ds_texto_atend_w|| ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p,185, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	end;
end if;

if (sus_obter_inco_ativa(187)) and (cd_motivo_cobranca_w in (65,66,67)) and (coalesce(cd_cid_causa_morte_w,'X') = 'X') then
	begin
	ds_detalhe_w    := substr(ds_texto_atend_w|| ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p || '; '||
				wheb_mensagem_pck.get_texto(300338) || ' '||cd_motivo_cobranca_w,1,255);
	CALL sus_gravar_inconsistencia(nr_interno_conta_p,187, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end;
end if;
/*193 - Ultrapassada a quantidade de procedimentos principais para AIH de cirurgias sequenciais*/

if (sus_obter_inco_ativa(193)) and (cd_procedimento_real_w = 415020034) then
	begin
	select	count(*)
	into STRICT	qt_procedimento_w
	from	procedimento_paciente a,
		sus_valor_proc_paciente b
	where	a.nr_interno_conta = nr_interno_conta_p
	and	a.nr_sequencia = b.nr_sequencia
	and	coalesce(b.cd_registro_proc,sus_obter_tiporeg_proc(a.cd_procedimento,a.ie_origem_proced,'C',13)) = 3;

	if (qt_procedimento_w > 3) then
		ds_detalhe_w    :=  substr(ds_texto_atend_w|| ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p || '; '||qt_procedimento_w|| ' ' || wheb_mensagem_pck.get_texto(300342),1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p,193, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	end;
End If;
/*197 - Paciente nao possui alta informada e o motivo de encerramento da AIH e alta */

if (sus_obter_inco_ativa(197)) and (cd_motivo_cobranca_w in (11,12,13,14,15,16,17,18,19)) And (coalesce(dt_alta_w::text, '') = '') then
	begin
	ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p || '; ' || wheb_mensagem_pck.get_texto(300338) || ' ' ||cd_motivo_cobranca_w,1,255);
	CALL sus_gravar_inconsistencia(nr_interno_conta_p,197, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end;
end if;
/*201 - Quantidade permitida para o procedimento compativel foi ultrapassada*/

if (sus_obter_inco_ativa(201)) then
	begin
	
	if (qt_eleven_rule_w = 0) then
		begin
		for cusrsor04_w in cusrsor04(nr_interno_conta_p,cd_procedimento_real_w,ie_origem_proc_real_w) loop
                        begin
			
			qt_procedimento_w	:= cusrsor04_w.qt_procedimento;
			cd_proc_secundario_w	:= cusrsor04_w.cd_procedimento;
			ie_origem_proc_sec_w	:= cusrsor04_w.ie_origem_proced;
			nr_seq_proc_princ_w	:= cusrsor04_w.nr_seq_proc_princ;
			
			begin
			select	cd_procedimento
			into STRICT	cd_proc_principal_w
			from	procedimento_paciente
			where	nr_sequencia = nr_seq_proc_princ_w;					
			exception
			when others then
				cd_proc_principal_w := 0;
			end;	
			
			begin
			select	max(qt_proc_permitida)
			into STRICT	qt_proc_compat_w
			from	sus_proc_compativel
			where	cd_proc_principal 	= cd_procedimento_real_w
			and	ie_origem_proc_princ	= ie_origem_proc_real_w
			and	cd_proc_secundario	= cd_proc_secundario_w
			and	ie_origem_proc_sec	= ie_origem_proc_sec_w
			and	ie_tipo_compatibilidade	= 1;			
			exception
			when others then
				qt_proc_compat_w := -1;
			end;

			if (qt_procedimento_w > qt_proc_compat_w) and (qt_proc_compat_w > 0) and
				((cd_proc_principal_w = 0) or (cd_proc_principal_w = cd_procedimento_real_w))then
				ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p || '; ' || ds_proc_real_w || ' ' || cd_procedimento_real_w || '; ' || ds_texto_proc_w || ' ' || cd_proc_secundario_w || '; Qtd: ' || qt_procedimento_w || '; Max: ' || qt_proc_compat_w,1,255);
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 201, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end if;
			
			end;
		end loop;
		end;
	else
		begin
		cd_proced_real_original_w := cd_procedimento_real_w;
		open c02;
		loop
		fetch c02 into
			cd_procedimento_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			if (coalesce(cd_procedimento_w,0) <> 0) then
				begin
				cd_procedimento_real_w := cd_procedimento_w;
				for cusrsor04_w in cusrsor04(nr_interno_conta_p,cd_procedimento_real_w,ie_origem_proc_real_w) loop
                                        begin
					
					qt_procedimento_w	:= cusrsor04_w.qt_procedimento;
					cd_proc_secundario_w	:= cusrsor04_w.cd_procedimento;
					ie_origem_proc_sec_w	:= cusrsor04_w.ie_origem_proced;
					nr_seq_proc_princ_w	:= cusrsor04_w.nr_seq_proc_princ;
					
					begin
					select	cd_procedimento
					into STRICT	cd_proc_principal_w
					from	procedimento_paciente
					where	nr_sequencia = nr_seq_proc_princ_w;					
					exception
					when others then
						cd_proc_principal_w := 0;
					end;					
					
					begin
					select	max(qt_proc_permitida)
					into STRICT	qt_proc_compat_w
					from	sus_proc_compativel
					where	cd_proc_principal 	= cd_procedimento_real_w
					and	ie_origem_proc_princ	= ie_origem_proc_real_w
					and	cd_proc_secundario	= cd_proc_secundario_w
					and	ie_origem_proc_sec	= ie_origem_proc_sec_w
					and	ie_tipo_compatibilidade	= 1;					
					exception
					when others then
						qt_proc_compat_w := -1;
					end;

					if (qt_procedimento_w > qt_proc_compat_w) and (qt_proc_compat_w > 0) and
						((cd_proc_principal_w = 0) or (cd_proc_principal_w = cd_procedimento_real_w))then
						ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w ||' ' || nr_interno_conta_p || '; ' || ds_proc_real_w || ' ' || cd_procedimento_real_w || '; ' || ds_texto_proc_w || ' ' || cd_proc_secundario_w || '; Qtd: ' || qt_procedimento_w || '; Max: ' || qt_proc_compat_w,1,255);
						CALL sus_gravar_inconsistencia(nr_interno_conta_p, 201, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
					end if;
					end;
				end loop;
				end;
			end if;
			end;
		end loop;
		close c02;
		cd_procedimento_real_w := cd_proced_real_original_w;
		end;
	end if;
	end;
end if;
/*211 - Medico solicitante da AIH sem CNS informado*/

if (sus_obter_inco_ativa(211)) and (coalesce(cd_medico_solicitante_w,'X') <> 'X')then
	begin
	
	select	coalesce(max(nr_cartao_nac_sus),'0')
	into STRICT	nr_cns_solic_aih_w
	from	pessoa_fisica
	where	cd_pessoa_fisica	= cd_medico_solicitante_w;
	
	if (nr_cns_solic_aih_w = '0') then
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' '  || nr_atendimento_p || '; AIH: ' || nr_aih_w || '; '|| wheb_mensagem_pck.get_texto(304146) || ': ' || cd_medico_solicitante_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 211, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	end;
end if;
/*212 - Medico responsavel pela AIH sem CNS informado*/

if (sus_obter_inco_ativa(212)) and (coalesce(cd_medico_responsavel_w,'X') <> 'X')then
	begin
	
	select	coalesce(max(nr_cartao_nac_sus),'0')
	into STRICT	nr_cns_resp_aih_w
	from	pessoa_fisica
	where	cd_pessoa_fisica	= cd_medico_responsavel_w;
	
	if (nr_cns_resp_aih_w = '0') then
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; AIH: ' || nr_aih_w || '; '|| wheb_mensagem_pck.get_texto(304147) || ' ' || cd_medico_responsavel_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 212, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	end;
end if;
/*213 - Autorizador da AIH sem CNS informado*/

if (sus_obter_inco_ativa(213)) and (coalesce(cd_medico_autorizador_w,'X') <> 'X')then
	begin
	
	select	coalesce(max(nr_cartao_nac_sus),'0')
	into STRICT	nr_cns_autor_aih_w
	from	pessoa_fisica
	where	cd_pessoa_fisica	= cd_medico_autorizador_w;
	
	if (nr_cns_autor_aih_w = '0') then
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; AIH: ' || nr_aih_w || '; ' || wheb_mensagem_pck.get_texto(304149) || ' ' || cd_medico_autorizador_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 213, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	end;
end if;	
/*224 - Encontrada dosagem de Troponina sem um procedimento compativel na conta*/

if (sus_obter_inco_ativa(224)) then
	begin
	begin
	select	count(1)
	into STRICT	qt_registro_w
	from	procedimento_paciente a
	where	a.nr_interno_conta = nr_interno_conta_p
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.cd_procedimento = 202031209
	and	not exists (	SELECT	1
				from	procedimento_paciente x
				where	x.nr_interno_conta = a.nr_interno_conta
				and	coalesce(x.cd_motivo_exc_conta::text, '') = ''
				and	sus_obter_se_proc_compativel(x.cd_procedimento,x.ie_origem_proced,a.cd_procedimento) = 'S'  LIMIT 1)  LIMIT 1;
	exception
	when others then
		qt_registro_w := 0;
	end;
	
	if (qt_registro_w > 0) then
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; AIH: ' || nr_aih_w || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 224, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;	
	end;
end if;

if (sus_obter_inco_ativa(230)) and (qt_eleven_rule_w > 0) then
	begin
	select 	count(1)
	into STRICT	qt_registro_w
	from  	procedimento_paciente a,
		sus_valor_proc_paciente b
	where  	a.nr_interno_conta  = nr_interno_conta_p
	and  	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and  	a.nr_sequencia = b.nr_sequencia
	and  	coalesce(b.cd_registro_proc,sus_obter_tiporeg_proc(a.cd_procedimento,a.ie_origem_proced,'C',13)) = 3
	--and 	nvl(sus_obter_se_detalhe_proc(a.cd_procedimento,a.ie_origem_proced,'10056',a.dt_procedimento),0) > 0
	and  	substr(Sus_Obter_Estrut_Proc(a.cd_procedimento, a.ie_origem_proced, 'C', 'G'),1,2) <> 7
	and  	a.cd_procedimento <> cd_procedimento_real_w  
	and	exists (SELECT	1
			from	sus_proc_compativel c
			where	c.cd_proc_principal	= a.cd_procedimento 
			--and		nvl(c.qt_proc_permitida,0) > 0
			and		c.ie_origem_proc_princ	= a.ie_origem_proced
			and	c.ie_tipo_compatibilidade in (1)  LIMIT 1)  LIMIT 1;
	
	if (qt_registro_w = 0) then
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; AIH: ' || nr_aih_w || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 230, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;	
	
	end;
end if;

if (sus_obter_inco_ativa(231)) then
	begin
	begin
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_proc_neo_w
	from	procedimento_paciente
	where	nr_interno_conta = nr_interno_conta_p
	and	sus_validar_regra(7, cd_procedimento, ie_origem_proced,dt_procedimento) > 0;
	exception
	when others then
	nr_seq_proc_neo_w := 0;
	end;
	
	if (nr_seq_proc_neo_w <> 0) then
		begin
		select	count(1)
		into STRICT	qt_proc_neo_w
		from	sus_aih_uti_neo
		where	nr_seq_procedimento = nr_seq_proc_neo_w  LIMIT 1;

		if (qt_proc_neo_w = 0) then
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; AIH: ' || nr_aih_w || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 231, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end if;

		end;
	end if;
	
	end;
end if;

if (sus_obter_inco_ativa(236)) then
	begin	
	if (qt_enferm_perm_w > 0) then
		begin
		
		qt_proc_uti_Psiq_w := 0;
		for cursor08_w in cursor08(dt_mesano_referencia_w) loop
			begin
			
			qt_procedimento_w	:= cursor08_w.qt_procedimento;
			cd_procedimento_w	:= cursor08_w.cd_procedimento;
			ie_origem_proced_w	:= cursor08_w.ie_origem_proced;
			dt_procedimento_w	:= cursor08_w.dt_procedimento;
			
			if (sus_validar_regra(19, cd_procedimento_w, ie_origem_proced_w,dt_procedimento_w) > 0) then
				qt_proc_uti_Psiq_w	:= qt_proc_uti_Psiq_w + qt_procedimento_w;
			end if;			
			if (sus_validar_regra(13, cd_procedimento_w, ie_origem_proced_w,dt_procedimento_w) > 0) then
				qt_proc_uti_Psiq_w	:= qt_proc_uti_Psiq_w + qt_procedimento_w;
			end if;
			if (sus_validar_regra(7, cd_procedimento_w, ie_origem_proced_w,dt_procedimento_w) > 0) then
				qt_proc_uti_Psiq_w	:= qt_proc_uti_Psiq_w + qt_procedimento_w;
			end if;		
			
			end;
		end loop;
		
		qt_diaria_enferm_w	:= 0;		
		for cursor09_w in cursor09(dt_mesano_referencia_w) loop
			begin
			nr_atendimento_w	:= cursor09_w.nr_atendimento;
			nr_interno_conta_w	:= cursor09_w.nr_interno_conta;
					
			qt_internacao_w 	:= coalesce(obter_Dias_Internacao_aih(nr_atendimento_w,nr_interno_conta_w),0);
			
			if (qt_internacao_w < 31) then
				qt_diaria_enferm_w := qt_diaria_enferm_w + qt_internacao_w;
			else
				qt_diaria_enferm_w := qt_diaria_enferm_w + 31;
			end if;
				
			end;
		end loop;
		
		qt_total_diaria_enf_w := qt_diaria_enferm_w - qt_proc_uti_Psiq_w;
		
		if (qt_total_diaria_enf_w > qt_enferm_perm_w) then
			begin
			ds_detalhe_w	:= substr(wheb_mensagem_pck.get_texto(304150) || ': ' || dt_mesano_referencia_w || '; ' || wheb_mensagem_pck.get_texto(277319) ||  ' ' || qt_total_diaria_enf_w || '; ' || wheb_mensagem_pck.get_texto(304151) || ' '|| qt_enferm_perm_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 236, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;	
		end;
	end if;	
	end;
end if;

if (sus_obter_inco_ativa(238)) and (coalesce(ds_justificativa_w,'X') <> 'X') and (sus_verificar_codigo_autor(ie_codigo_autorizacao_w,'CNS') = 'S')then
	begin	
	ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p ||'; AIH: ' || nr_aih_w,1,255);
	CALL sus_gravar_inconsistencia(nr_interno_conta_p, 238, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end;
end if;

if (sus_obter_inco_ativa(239)) and (cd_procedimento_real_w = 415020050) then
	begin	
	
	select 	count(*)
	into STRICT	qt_proc_princ_onc_w
	from	procedimento_paciente a,
		sus_valor_proc_paciente b
	where	a.nr_interno_conta	= nr_interno_conta_p
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.nr_sequencia = b.nr_sequencia
	and	coalesce(b.cd_registro_proc,sus_obter_tiporeg_proc(a.cd_procedimento,a.ie_origem_proced,'C',13)) = 3;
	
	if (qt_proc_princ_onc_w > 5) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p ||'; AIH: ' || nr_aih_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 239, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	
	end;
end if;
/*Foram encontrados procedimentos principais do grupo 2 na AIH sequencial*/

if (sus_obter_inco_ativa(241)) and (cd_procedimento_real_w = 415020034) then
	begin
	
	select 	count(1)
	into STRICT	qt_proc_w
	from	procedimento_paciente a,
		sus_valor_proc_paciente b
	where	a.nr_interno_conta = nr_interno_conta_p
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.nr_sequencia = b.nr_sequencia
	and	coalesce(b.cd_registro_proc,sus_obter_tiporeg_proc(a.cd_procedimento,a.ie_origem_proced,'C',13)) = 3
	and	Sus_Obter_Estrut_Proc(cd_procedimento,ie_origem_proced,'C','G') = 2  LIMIT 1;
	
	if (qt_proc_w > 0) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p ||'; AIH: ' || nr_aih_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 241, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	
	end;
end if;
/*Codigo de solicitacao incorreto*/

if (sus_obter_inco_ativa(242)) and (sus_consiste_cod_autor(cd_procedimento_real_w, ie_origem_proc_real_w, ie_codigo_autorizacao_w) = 'S') then
	begin
	ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p ||'; AIH: ' || nr_aih_w,1,255);
	CALL sus_gravar_inconsistencia(nr_interno_conta_p, 242, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end;
end if;	
/*247 - AIH anterior nao informada ou incorreta*/

if (sus_obter_inco_ativa(247)) then
	begin
	begin
	select	coalesce(nr_aih,0)
	into STRICT	nr_aih_anterior_ww
	from	sus_aih_unif
	where	nr_proxima_aih = nr_aih_w
	and	cd_motivo_cobranca = 62;
	exception
	when others then
		nr_aih_anterior_ww := 0;	
	end;
	end;
	
	if (nr_aih_anterior_ww <> 0) and
		((nr_aih_anterior_w <> nr_aih_anterior_ww) or (coalesce(nr_aih_anterior_w::text, '') = '')) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p ||'; AIH: ' || nr_aih_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 247, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
end if;	
/*248 -  nao permitir o lancamento de procedimentos do subgrupo 0416 */

if (sus_obter_inco_ativa(248)) and (cd_procedimento_real_w in (415020034,415010012)) then
	begin
	begin
	select	count(1)
	into STRICT	qt_proced_w
	from	procedimento_paciente
	where	nr_interno_conta = nr_interno_conta_p
	and	nr_atendimento = nr_atendimento_p
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and     coalesce(sus_obter_estrut_proc(cd_procedimento, ie_origem_proced, 'C', 'S'),0) = '416';	
	exception
	when others then
	qt_proced_w	 := 0;
	end;
	end;
	
	if (qt_proced_w > 0) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p ||'; AIH: ' || nr_aih_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 248, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;	
end if;

if (sus_obter_inco_ativa(252)) and (coalesce(cd_procedimento_real_w,0) > 0) then
	begin
	
	cd_proced_conta_w	:= 0;
	ie_orig_proc_w		:= 0;
	cd_proc_incomp_w	:= 0;
	
	open c05;
	loop
	fetch c05 bulk collect into s_array limit 100000;
		vetor_c05_w(i) := s_array;
		i := i + 1;
	EXIT WHEN NOT FOUND; /* apply on c05 */
	end loop;
	close c05;
		
	for i in 1..vetor_c05_w.count loop
		begin
		s_array := vetor_c05_w(i);
		for z in 1..s_array.count loop
			begin
			
			cd_proced_conta_w	:= s_array[z].cd_procedimento;
			ie_orig_proc_w		:= s_array[z].ie_origem_proced;
						
			select	sum(qt)
			into STRICT	qt_proc_compativel_w
			from (SELECT	count(1) qt
				from	sus_proc_compativel b
				where	b.cd_proc_principal	= cd_procedimento_real_w
				and	b.ie_origem_proc_princ	= 7
				and	b.cd_proc_secundario	= cd_proced_conta_w
				and	b.ie_origem_proc_sec	= ie_orig_proc_w
				
union

				SELECT	count(1) qt
				from	sus_proc_compativel b
				where	b.cd_proc_secundario	= cd_procedimento_real_w
				and	b.ie_origem_proc_sec	= 7
				and	b.cd_proc_principal	= cd_proced_conta_w
				and	b.ie_origem_proc_princ	= ie_orig_proc_w  LIMIT 1) alias3
			where	1 = 1;

			if (coalesce(qt_proc_compativel_w,0) > 0) then
			
				if (qt_eleven_rule_w = 0)  then
					begin				
						
					select	coalesce(max(a.cd_procedimento),0)
					into STRICT	cd_proc_incomp_w
					from	procedimento_paciente a,
						sus_proc_compativel c
					where	c.cd_proc_secundario 	= a.cd_procedimento
					and	ie_origem_proc_sec	= a.ie_origem_proced
					and	a.nr_interno_conta	= nr_interno_conta_p
					and	a.cd_procedimento	= cd_proced_conta_w
					and	a.ie_origem_proced	= ie_orig_proc_w
					and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
					and	a.cd_procedimento	<> cd_procedimento_real_w
					and	not exists (	SELECT	1
								from	sus_proc_compativel b
								where	b.cd_proc_principal	= cd_procedimento_real_w
								and	b.ie_origem_proc_princ	= 7
								and	b.cd_proc_secundario	= a.cd_procedimento
								and	b.ie_origem_proc_sec	= a.ie_origem_proced
								and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1)
					and	not exists (	select	1
								from	sus_proc_compativel b
								where	b.cd_proc_secundario	= cd_procedimento_real_w
								and	b.ie_origem_proc_sec	= 7
								and	b.cd_proc_principal	= a.cd_procedimento
								and	b.ie_origem_proc_princ	= a.ie_origem_proced
								and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1)
					and	exists (	select	1
								from	sus_proc_compativel b
								where	b.cd_proc_principal	<> cd_procedimento_real_w
								and	b.ie_origem_proc_princ	= 7
								and	b.cd_proc_secundario	= a.cd_procedimento
								and	b.ie_origem_proc_sec	= a.ie_origem_proced
								and	b.ie_tipo_compatibilidade in (1,4,5)
								and	sus_validar_regra(11, b.cd_proc_principal, ie_origem_proc_princ,null) = 0  LIMIT 1)
					and	not exists (	select	1
								from	sus_proc_compativel b,
									procedimento_paciente x
								where	b.cd_proc_principal	= x.cd_procedimento
								and	b.ie_origem_proc_princ	= x.ie_origem_proced
								and	x.nr_interno_conta	= a.nr_interno_conta
								and	b.cd_proc_secundario	= a.cd_procedimento
								and	b.ie_origem_proc_sec	= a.ie_origem_proced
								and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1);
											
					if (cd_proc_incomp_w = 0) then
						begin
						
						select	coalesce(max(a.cd_procedimento),0)
						into STRICT	cd_proc_incomp_w
						from	procedimento_paciente a,
							sus_proc_compativel c
						where	c.cd_proc_secundario 	= a.cd_procedimento
						and	ie_origem_proc_sec	= a.ie_origem_proced
						and	a.nr_interno_conta	= nr_interno_conta_p
						and	a.cd_procedimento	= cd_proced_conta_w
						and	a.ie_origem_proced	= ie_orig_proc_w
						and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
						and	exists (SELECT	1
								from	sus_proc_compativel b
								where	b.cd_proc_principal	= cd_procedimento_real_w
								and	b.ie_origem_proc_princ	= 7
								and	b.cd_proc_secundario	= a.cd_procedimento
								and	b.ie_origem_proc_sec	= a.ie_origem_proced
								and	b.ie_tipo_compatibilidade = 2  LIMIT 1)
						and	exists (select	1
								from	sus_proc_compativel b
								where	b.cd_proc_secundario	= cd_procedimento_real_w
								and	b.ie_origem_proc_sec	= 7
								and	b.cd_proc_principal	= a.cd_procedimento
								and	b.ie_origem_proc_princ	= a.ie_origem_proced
								and	b.ie_tipo_compatibilidade = 2  LIMIT 1);
						
						end;
					end if;
							
					end;
				else	
					begin				
										
					open C02;
					loop
					fetch C02 into	
						cd_procedimento_w;
					EXIT WHEN NOT FOUND; /* apply on C02 */
						begin
						
						ie_valida_diaria_w := coalesce((sus_obter_estrut_proc(cd_procedimento_w,7,'C','G') = 8),false);
						
						if (ie_valida_diaria_w) then
							begin
							
							select	count(1)
							into STRICT	qt_reg_comp_w
							from	sus_proc_compativel
							where	cd_proc_secundario 	= cd_procedimento_w
							and	ie_origem_proc_sec	= 7  LIMIT 1;						
							
							end;
						end if;
						
						if	((ie_valida_diaria_w AND qt_reg_comp_w > 0) or (not ie_valida_diaria_w)) then
							begin
							
							select	coalesce(max(a.cd_procedimento),0)
							into STRICT	cd_proc_incomp_w
							from	procedimento_paciente a,
								sus_proc_compativel c
							where	c.cd_proc_secundario 	= a.cd_procedimento
							and	ie_origem_proc_sec	= a.ie_origem_proced
							and	a.nr_interno_conta	= nr_interno_conta_p
							and	a.cd_procedimento	= cd_proced_conta_w
							and	a.ie_origem_proced	= ie_orig_proc_w
							and	coalesce(a.cd_motivo_exc_conta::text, '') = ''						
							and	a.cd_procedimento	<> cd_procedimento_w
							and	not exists (	SELECT	1
										from	sus_proc_compativel b
										where	b.cd_proc_principal	= cd_procedimento_w
										and	b.ie_origem_proc_princ	= 7
										and	b.cd_proc_secundario	= a.cd_procedimento
										and	b.ie_origem_proc_sec	= a.ie_origem_proced
										and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1)
							and	not exists (	select	1
										from	sus_proc_compativel b
										where	b.cd_proc_secundario	= cd_procedimento_w
										and	b.ie_origem_proc_sec	= 7
										and	b.cd_proc_principal	= a.cd_procedimento
										and	b.ie_origem_proc_princ	= a.ie_origem_proced
										and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1)
							and	exists (	select	1
										from	sus_proc_compativel b
										where	b.cd_proc_principal	<> cd_procedimento_real_w
										and	b.ie_origem_proc_princ	= 7
										and	b.cd_proc_secundario	= a.cd_procedimento
										and	b.ie_origem_proc_sec	= a.ie_origem_proced
										and	b.ie_tipo_compatibilidade in (1,4,5)
										and	sus_validar_regra(11, b.cd_proc_principal, ie_origem_proc_princ,null) = 0  LIMIT 1)
							and	not exists (	select	1
										from	sus_proc_compativel b,
											procedimento_paciente x
										where	b.cd_proc_principal	= x.cd_procedimento
										and	b.ie_origem_proc_princ	= x.ie_origem_proced
										and	x.nr_interno_conta	= a.nr_interno_conta
										and	b.cd_proc_secundario	= cd_procedimento_w
										and	b.ie_origem_proc_sec	= 7
										and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1);
													
							if (cd_proc_incomp_w = 0) then
								begin
								
								select	coalesce(max(a.cd_procedimento),0)
								into STRICT	cd_proc_incomp_w
								from	procedimento_paciente a,
									sus_proc_compativel c
								where	c.cd_proc_secundario 	= a.cd_procedimento
								and	ie_origem_proc_sec	= a.ie_origem_proced
								and	a.nr_interno_conta	= nr_interno_conta_p
								and	a.cd_procedimento	= cd_proced_conta_w
								and	a.ie_origem_proced	= ie_orig_proc_w
								and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
								and	a.cd_procedimento	<> cd_procedimento_w								
								and	exists (SELECT	1
										from	sus_proc_compativel b
										where	b.cd_proc_principal	= cd_procedimento_w
										and	b.ie_origem_proc_princ	= 7
										and	b.cd_proc_secundario	= a.cd_procedimento
										and	b.ie_origem_proc_sec	= a.ie_origem_proced
										and	b.ie_tipo_compatibilidade = 2  LIMIT 1)
								and	exists (select	1
										from	sus_proc_compativel b
										where	b.cd_proc_secundario	= cd_procedimento_w
										and	b.ie_origem_proc_sec	= 7
										and	b.cd_proc_principal	= a.cd_procedimento
										and	b.ie_origem_proc_princ	= a.ie_origem_proced
										and	b.ie_tipo_compatibilidade = 2  LIMIT 1);							
														
								end;
							end if;
							
							end;
						end if;
						
						
						end;
					end loop;
					close C02;
						
					end;
				end if;	
			end if;
									
			if (cd_proc_incomp_w > 0) then
				begin
				ds_detalhe_w	:= substr('Atend: ' || nr_atendimento_p || '; Conta: ' || nr_interno_conta_p ||'; Proced: ' || cd_procedimento_w ||'; Proced: ' || cd_proc_incomp_w ,1,255);
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 252, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
				end;
			end if;
		
			
			end;
		end loop;
		end;
	end loop;
	
	if (cd_procedimento_real_w in (503010014,503010026)) and (cd_proc_incomp_w = 0) then
		begin		
		
		select	coalesce(max(a.cd_procedimento),0)
		into STRICT	cd_proc_incomp_w
		from	procedimento_paciente a
		where	a.nr_interno_conta	= nr_interno_conta_p				
		and	a.ie_origem_proced	= 7
		and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
		and	a.cd_procedimento	<> cd_procedimento_real_w
		and	not exists (SELECT	1
				from	sus_proc_compativel b
				where	b.cd_proc_principal	= cd_procedimento_real_w
				and	b.ie_origem_proc_princ	= 7
				and	b.cd_proc_secundario	= a.cd_procedimento
				and	b.ie_origem_proc_sec	= a.ie_origem_proced
				and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1)
		and	not exists (select	1
				from	sus_proc_compativel b
				where	b.cd_proc_secundario	= cd_procedimento_real_w
				and	b.ie_origem_proc_sec	= 7
				and	b.cd_proc_principal	= a.cd_procedimento
				and	b.ie_origem_proc_princ	= a.ie_origem_proced
				and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1);	
		
		if (cd_proc_incomp_w > 0) then
			begin
			
			select	coalesce(max(a.cd_procedimento),0)
			into STRICT	cd_proc_subcomp_w
			from	procedimento_paciente a
			where	a.nr_interno_conta	= nr_interno_conta_p				
			and	a.ie_origem_proced	= 7
			and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
			and	a.cd_procedimento	<> cd_proc_incomp_w
			and (exists (SELECT	1
					from	sus_proc_compativel b
					where	b.cd_proc_principal	= cd_proc_incomp_w
					and	b.ie_origem_proc_princ	= 7
					and	b.cd_proc_secundario	= a.cd_procedimento
					and	b.ie_origem_proc_sec	= a.ie_origem_proced
					and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1) or
				exists (select	1
					from	sus_proc_compativel b
					where	b.cd_proc_secundario	= cd_proc_incomp_w
					and	b.ie_origem_proc_sec	= 7
					and	b.cd_proc_principal	= a.cd_procedimento
					and	b.ie_origem_proc_princ	= a.ie_origem_proced
					and	b.ie_tipo_compatibilidade in (1,4,5)  LIMIT 1));
			
			if (cd_proc_subcomp_w = 0) then
				begin
				
				ds_detalhe_w	:= substr('Atend: ' || nr_atendimento_p || '; Conta: ' || nr_interno_conta_p ||'; Proced: ' || cd_procedimento_real_w ||'; Proced: ' || cd_proc_incomp_w ,1,255);
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 252, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
				
				end;
			end if;
			end;
		end if;
		
		end;
	end if;
		
	end;
end if;
	
if (sus_obter_inco_ativa(256)) and (cd_grupo_proc_inco_w = 5) then
	begin
	
	select	count(1)
	into STRICT	cont_w
	from	procedimento_paciente a
	where	a.nr_interno_conta	= nr_interno_conta_p
	and	a.nr_atendimento	= nr_atendimento_p
	and	somente_numero(Sus_Obter_Estrut_Proc(a.cd_procedimento,a.ie_origem_proced,'C','G')) in (2,3)
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''  LIMIT 1;
	
	if (cont_w > 0) then
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p ||'; '|| ds_texto_proc_w || ' ' || cd_procedimento_real_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 256, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);	
	end if;
	
	end;
end if;

if (sus_obter_inco_ativa(257))	then
	begin
	select	count(1)
	into STRICT	qt_proc_princ_uti_w
	from	procedimento_paciente a,
		sus_valor_proc_paciente b
	where	a.nr_interno_conta = nr_interno_conta_p
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.nr_sequencia = b.nr_sequencia
	and	coalesce(b.cd_registro_proc,sus_obter_tiporeg_proc(a.cd_procedimento,a.ie_origem_proced,'C',13)) = 3
	and	coalesce(sus_obter_se_detalhe_proc(cd_procedimento,ie_origem_proced,'10041',dt_procedimento),0) > 0  LIMIT 1;
	
	if (qt_proc_princ_uti_w > 0)	then
		begin
		select	count(1)
		into STRICT	qt_proc_diaria_uti_w
		from	procedimento_paciente
		where	nr_interno_conta	= nr_interno_conta_p
		and	coalesce(cd_motivo_exc_conta::text, '') = ''
		and 	((sus_validar_regra(7, cd_procedimento, ie_origem_proced,dt_procedimento) > 0) or (sus_validar_regra(13, cd_procedimento, ie_origem_proced,dt_procedimento) > 0))  LIMIT 1;
		
		if (qt_proc_diaria_uti_w > 0) 	then
			ds_detalhe_w :=	substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p ||'; ' ||ds_texto_proc_w|| ' ' || cd_procedimento_real_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p,257,ds_detalhe_w,cd_estabelecimento_w, nm_usuario_p);
		end 	if;
		end;
	end 	if;
	end;
end	if;

if (sus_obter_inco_ativa(262)) and (coalesce(nr_aih_w,0) <> 0) and (coalesce(nr_aih_posterior_w,0) <> 0) and (coalesce(nr_aih_w,0) = coalesce(nr_aih_posterior_w,0))	then
	begin
	ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p ||'; AIH: ' || nr_aih_w ||
				'; ' || wheb_mensagem_pck.get_texto(304152) || ' '|| nr_aih_posterior_w,1,255);
	CALL sus_gravar_inconsistencia(nr_interno_conta_p,262,ds_detalhe_w,cd_estabelecimento_w, nm_usuario_p);
	end;
end	if;

if (sus_obter_inco_atv_conta(266,nr_interno_conta_p,null)) then
	begin
	
	begin
	select	count(*)
	into STRICT	qt_max_dia_tres_w
	from (SELECT	sum(qt_procedimento) qt_proc, cd_procedimento
		from	procedimento_paciente
		where	nr_interno_conta = nr_interno_conta_p
		and	coalesce(cd_motivo_exc_conta::text, '') = ''
		and	sus_obter_se_detalhe_proc(cd_procedimento,ie_origem_proced,'10065',dt_procedimento) > 0
        group by cd_procedimento) a
	where	((a.qt_proc / 3) > qt_diarias_w)  LIMIT 1;
	exception
	when others then
		qt_max_dia_tres_w := 0;
	end;
		
	begin
	select	count(*)
	into STRICT	qt_max_dia_cinco_w
	from (SELECT	sum(qt_procedimento) qt_proc, cd_procedimento
		from	procedimento_paciente
		where	nr_interno_conta = nr_interno_conta_p
		and	coalesce(cd_motivo_exc_conta::text, '') = ''
		and	sus_obter_se_detalhe_proc(cd_procedimento,ie_origem_proced,'10066',dt_procedimento) > 0
        group by cd_procedimento) a
	where	((a.qt_proc / 5) > qt_diarias_w)  LIMIT 1;	
	exception
	when others then
		qt_max_dia_cinco_w := 0;
	end;
	
	if	((qt_max_dia_tres_w > 0) or (qt_max_dia_cinco_w > 0)) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p ||'; ' || wheb_mensagem_pck.get_texto(277319) || ' ' || qt_diarias_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p,266,ds_detalhe_w,cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	
	end;
end if;

if (sus_obter_inco_atv_conta(271,nr_interno_conta_p,null)) and (coalesce(obter_se_alta_obito(nr_atendimento_p),'N') = 'S') and (coalesce(cd_motivo_cobranca_w,0) <> 0) and
	((dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') and (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_final_w) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_alta_w))) then
	begin
	
	if	not(cd_motivo_cobranca_w in (25,41,42,43,65,66,67)) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p || '; '|| wheb_mensagem_pck.get_texto(304154) || ' ' || cd_motivo_cobranca_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p,271,ds_detalhe_w,cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	
	end;
end if;

if (sus_obter_inco_atv_conta(273,nr_interno_conta_p,null)) and (ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_inicial_w) <> ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_final_w)) then
	begin
	qt_max_dia_tres_w	:= 0;
	qt_max_dia_cinco_w	:= 0;
	qt_comp_inicial_w 	:= (last_day(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicial_w)) - ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicial_w))+1;
	qt_comp_final_w		:= (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_final_w) - ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_final_w));
	
	if (cd_motivo_cobranca_w in (21,22,23,24,25,26,27,28,31,32,41,42,43,65,66,67)) then
		qt_comp_final_w := qt_comp_final_w + 1;
	end if;
	
	if	((coalesce(qt_comp_inicial_w,0) <> 0) or (coalesce(qt_comp_final_w,0) <> 0)) then
		begin

		begin
		select	count(1)
		into STRICT	qt_max_dia_tres_w
		from (SELECT	sum(qt_procedimento) qt_proc
			from	procedimento_paciente
			where	nr_interno_conta = nr_interno_conta_p
			and	coalesce(cd_motivo_exc_conta::text, '') = ''
			and	ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_inicial_w)
			and	sus_obter_se_detalhe_proc(cd_procedimento,ie_origem_proced,'10065',dt_procedimento) > 0) a
		where	((a.qt_proc / 3) > qt_comp_inicial_w)  LIMIT 1;
		exception
		when others then
			qt_max_dia_tres_w := 0;
		end;

		if (qt_max_dia_tres_w = 0) then
			begin
			
			begin
			select	count(1)
			into STRICT	qt_max_dia_tres_w
			from (SELECT	sum(qt_procedimento) qt_proc
				from	procedimento_paciente
				where	nr_interno_conta = nr_interno_conta_p
				and	coalesce(cd_motivo_exc_conta::text, '') = ''
				and	ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_final_w)
				and	sus_obter_se_detalhe_proc(cd_procedimento,ie_origem_proced,'10065',dt_procedimento) > 0) a
			where	((a.qt_proc / 3) > qt_comp_final_w)  LIMIT 1;
			exception
			when others then
				qt_max_dia_tres_w := 0;
			end;
			
			end;
		end if;
		
		begin
		select	count(1)
		into STRICT	qt_max_dia_cinco_w
		from (SELECT	sum(qt_procedimento) qt_proc
			from	procedimento_paciente
			where	nr_interno_conta = nr_interno_conta_p
			and	coalesce(cd_motivo_exc_conta::text, '') = ''
			and	ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_inicial_w)
			and	sus_obter_se_detalhe_proc(cd_procedimento,ie_origem_proced,'10066',dt_procedimento) > 0) a
		where	((a.qt_proc / 5) > qt_comp_inicial_w)  LIMIT 1;	
		exception
		when others then
			qt_max_dia_cinco_w := 0;
		end;
		
		if (qt_max_dia_cinco_w = 0) then
			begin
			
			begin
			select	count(1)
			into STRICT	qt_max_dia_cinco_w
			from (SELECT	sum(qt_procedimento) qt_proc
				from	procedimento_paciente
				where	nr_interno_conta = nr_interno_conta_p
				and	coalesce(cd_motivo_exc_conta::text, '') = ''
				and	ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_final_w)
				and	sus_obter_se_detalhe_proc(cd_procedimento,ie_origem_proced,'10066',dt_procedimento) > 0) a
			where	((a.qt_proc / 5) > qt_comp_final_w)  LIMIT 1;	
			exception
			when others then
				qt_max_dia_cinco_w := 0;
			end;
		
			end;
		end if;
	
		end;
	end if;

	if	((qt_max_dia_tres_w > 0) or (qt_max_dia_cinco_w > 0)) then
		begin
		
		--lhalves OS 757831 em 24/09/2014 - Apresentar o codigo do procedimento.
		cd_proc_aux_w	:= null;
		open C06;
		loop
		fetch C06 into	
			c06_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin
			if (coalesce(cd_proc_aux_w::text, '') = '') then
				cd_proc_aux_w	:= wheb_mensagem_pck.get_texto(317671);
			end if;			
			cd_proc_aux_w	:= cd_proc_aux_w ||' '||c06_w.cd_procedimento;
			end;
		end loop;
		close C06;		
		
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p ||'; ' || wheb_mensagem_pck.get_texto(304156) || ' '|| qt_comp_inicial_w ||
						'; ' || wheb_mensagem_pck.get_texto(304157) || ' ' || qt_comp_final_w ||' '|| cd_proc_aux_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p,273,ds_detalhe_w,cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;	
	
	end;
end if;

if (sus_obter_inco_ativa(281)) and (cd_procedimento_real_w = 415020069) then
	begin	
	
	select 	count(*)
	into STRICT	qt_proc_princ_onc_w
	from	procedimento_paciente a,
		sus_valor_proc_paciente b
	where	a.nr_interno_conta = nr_interno_conta_p
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.nr_sequencia = b.nr_sequencia
	and	coalesce(b.cd_registro_proc,sus_obter_tiporeg_proc(a.cd_procedimento,a.ie_origem_proced,'C',13)) = 3;
	
	if (qt_proc_princ_onc_w > 5) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p ||'; AIH: ' || nr_aih_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 281, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	
	end;
end if;
/*Forma de organizacao 40803 nao permitida para AIH de cirurgias sequenciais*/

if (sus_obter_inco_ativa(282)) and (cd_procedimento_real_w = 415020034) then
	begin
	begin
	select	count(1)
	into STRICT	qt_proced_w
	from	procedimento_paciente
	where	nr_interno_conta = nr_interno_conta_p
	and	nr_atendimento = nr_atendimento_p
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and     coalesce(sus_obter_estrut_proc(cd_procedimento, ie_origem_proced, 'C', 'F'),0) = '40803';	
	exception
	when others then
		qt_proced_w	 := 0;
	end;
	end;
	
	if (qt_proced_w > 0) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p ||'; AIH: ' || nr_aih_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 282, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;	
end if;

if (sus_obter_inco_ativa(283)) and (cd_procedimento_real_w = 415020077) then
	begin	
	
	select 	count(*)
	into STRICT	qt_proc_princ_onc_w
	from	procedimento_paciente a,
		sus_valor_proc_paciente b
	where	a.nr_interno_conta = nr_interno_conta_p
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.nr_sequencia = b.nr_sequencia
	and	coalesce(b.cd_registro_proc,sus_obter_tiporeg_proc(a.cd_procedimento,a.ie_origem_proced,'C',13)) = 3;
	
	if (qt_proc_princ_onc_w > 5) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p ||'; AIH: ' || nr_aih_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 283, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	
	end;
end if;

if (sus_obter_inco_ativa(285)) and (qt_eleven_rule_w > 0) and (sus_obter_se_detalhe_proc(cd_procedimento_real_w,ie_origem_proc_real_w,'10056', dt_emissao_w)= 0) then
	begin
	
	select 	count(distinct  a.cd_procedimento)
	into STRICT	qt_registro_w
	from	procedimento_paciente a,
		sus_valor_proc_paciente b
	where	a.nr_interno_conta = nr_interno_conta_p
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.nr_sequencia = b.nr_sequencia
	and	coalesce(b.cd_registro_proc,sus_obter_tiporeg_proc(a.cd_procedimento,a.ie_origem_proced,'C',13)) = 3;
	
	if (qt_registro_w < 2) then
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 285, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	end;
end if;	


/*288 Encontrado medicamento sem um procedimento compativel na conta.*/

if (sus_obter_inco_ativa(288)) then
	begin
	begin
	select	coalesce(a.cd_procedimento,0)
	into STRICT	cd_procedimento_w
	from	procedimento_paciente a
	where	a.nr_interno_conta = nr_interno_conta_p
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	--and	a.cd_procedimento = 603050107
	and	substr(sus_obter_estrut_proc(a.cd_procedimento, a.ie_origem_proced, 'C', 'S'),1,4) = 603
	and	not exists (	SELECT	1
				from	procedimento_paciente x
				where	x.nr_interno_conta = a.nr_interno_conta
				and	coalesce(x.cd_motivo_exc_conta::text, '') = ''
				and	sus_obter_se_proc_compativel(x.cd_procedimento,x.ie_origem_proced,a.cd_procedimento) = 'S'  LIMIT 1)
	and (	exists (select	1
				from	sus_proc_compativel x
				where	x.cd_proc_secundario = a.cd_procedimento
				and	x.ie_origem_proc_sec = a.ie_origem_proced  LIMIT 1)
		or	exists (select	1
			from	sus_proc_compativel x
			where	x.cd_proc_principal  = a.cd_procedimento
			and	x.cd_reg_proc_princ = a.ie_origem_proced  LIMIT 1))  LIMIT 1;
	exception
	when others then
		cd_procedimento_w := 0;
	end;	
	
	if (cd_procedimento_w > 0) then
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; AIH: ' || nr_aih_w || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p || '; '|| ds_texto_proc_w || ' ' || cd_procedimento_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 288, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;	
	end;
end if;


if (sus_obter_inco_ativa(294)) Then
	ds_proc_vinc_sem_opme_w := null;
	Begin
	For R7 In c07 Loop
		If (coalesce(ds_proc_vinc_sem_opme_w::text, '') = '') Then
			ds_proc_vinc_sem_opme_w:= R7.Cd_Procedimento;
		Else
			ds_proc_vinc_sem_opme_w:= Substr(ds_proc_vinc_sem_opme_w||','||R7.Cd_Procedimento,1,255);
		End If;
	End Loop;
		
	If (ds_proc_vinc_sem_opme_w IS NOT NULL AND ds_proc_vinc_sem_opme_w::text <> '') Then
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p ||'; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p,1,255);
		ds_detalhe_w	:= substr(ds_detalhe_w||'; '||ds_texto_proc_w||' '||ds_proc_vinc_sem_opme_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 294, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p); 		
		
	end if;
	Exception
		When Others Then
		ds_proc_vinc_sem_opme_w := null;
	End;
End If;

if (sus_obter_inco_ativa(297)) Then
	if (cd_cid_principal_w = cd_cid_secundario_w) then
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; AIH: ' || nr_aih_w || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p || '; '|| ds_texto_proc_w || ' ' || cd_procedimento_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 297, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;	
end if;

if (sus_obter_inco_ativa(302)) then
	begin
	
	qt_proced_w := 0;
	
	if	((cd_procedimento_real_w = 415020050) or (cd_procedimento_real_w = 415020077)) then
		begin
		qt_proced_w := 1;
		end;
	else
		begin
		
		begin
		select	count(1)
		into STRICT	qt_proced_w
		from	sus_procedimento a,
			sus_forma_organizacao b,
			sus_subgrupo c
		where	a.cd_procedimento	= cd_procedimento_real_w
		and 	a.ie_origem_proced	= ie_origem_proc_real_w
		and	a.nr_seq_forma_org	= b.nr_sequencia
		and	b.nr_seq_subgrupo	= c.nr_sequencia
		and	c.cd_subgrupo		= '403';		
		exception
		when others then
			qt_proced_w := 0;
		end;
		end;
	end if;	
	
	if (qt_proced_w > 0) then
		begin
		
		qt_proced_w := 0;
		
		select	coalesce(cd_pessoa_fisica,'X')
		into STRICT	cd_pessoa_fisica_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_p;
		
		begin
			select	c.nr_atendimento,
					b.nr_interno_conta,
					a.nr_aih
			into STRICT	nr_atendimento_w,
				nr_interno_conta_w,
				nr_aih_w
			from	sus_aih_unif a,
				conta_paciente b,
				atendimento_paciente c
			where	a.nr_interno_conta = b.nr_interno_conta
			and	b.nr_atendimento = c.nr_atendimento
			and	c.cd_pessoa_fisica = cd_pessoa_fisica_w
			and	b.ie_status_acerto = 2
			and	ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_mesano_referencia) = ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_mesano_referencia_w)
			and	((cd_procedimento_real = cd_procedimento_real_w) or (Sus_Obter_Estrut_Proc(a.cd_procedimento_real,a.ie_origem_proc_real,'C','S') = '403'))
			and	a.ie_origem_proc_real = ie_origem_proc_real_w
			and	b.nr_interno_conta <> nr_interno_conta_p  LIMIT 1;
		exception when others then
			nr_atendimento_w := null;
			nr_interno_conta_w := null;
			nr_aih_w := null;
		end;
		
		if (nr_aih_w IS NOT NULL AND nr_aih_w::text <> '') then
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_w || '; AIH: ' || nr_aih_w || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_w || '; '|| ds_texto_proc_w || ' ' || cd_procedimento_real_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 302, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end if;		

		end;
	end if;
	
	end;
end if;

if (sus_obter_inco_ativa(303))then

	begin
		select	cd_municipio_ibge
		into STRICT	cd_municopio_ibge_w
		from	sus_parametros_aih
		where cd_estabelecimento = cd_estabelecimento_w;
			exception
				when others then
					cd_municopio_ibge_w := '0';

	end;
	if (coalesce(cd_municopio_ibge_w, '0') <> '0')then
	
		if (substr(nr_aih_w, 1, 2) <> substr(cd_municopio_ibge_w, 1, 2)) then
			aih_inconsistente_w := true;
		
		elsif (substr(nr_aih_w, 3, 2) <> to_char(dt_mesano_referencia_w, 'yy'))then
			aih_inconsistente_w := true;
		
		elsif (substr(nr_aih_w, 5, 1) not between '1' and '5') then
			aih_inconsistente_w := true;
		
		elsif (substr(nr_aih_w, 6, 7) not between '0000001' and '9999999')then
			aih_inconsistente_w := true;
		
		elsif (calcula_digito('AIH', substr(nr_aih_w, 1, 12) || '0') <> substr(nr_aih_w, -1, 1)) then
			aih_inconsistente_w := true;
		
		end if;
		if (aih_inconsistente_w) then
		
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; AIH: ' || nr_aih_w || '; ' || ds_texto_conta_w || ' ' || nr_interno_conta_p,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 303, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			
		end if;
		
	end if;
end if;

if (sus_obter_inco_ativa(304))	then
	begin
	
	nr_atendimento_w	:= 0;
	
	select	coalesce(cd_pessoa_fisica,'X')
	into STRICT	cd_pessoa_fisica_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;
	
	select	max(a.nr_aih)
	into STRICT	nr_aih_periodo_w
	from	sus_aih_unif a,
		atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and	b.cd_pessoa_fisica = cd_pessoa_fisica_w
	and	a.dt_inicial between dt_inicial_w and dt_final_w
	and	a.nr_aih <> nr_aih_w;
	
	if (coalesce(nr_aih_periodo_w,0) = 0)	then
	
		select	max(a.nr_aih)
		into STRICT	nr_aih_periodo_w
		from	sus_aih_unif a,
			atendimento_paciente b
		where	a.nr_atendimento = b.nr_atendimento
		and	b.cd_pessoa_fisica = cd_pessoa_fisica_w
		and	a.dt_final between dt_inicial_w and dt_final_w
		and	a.nr_aih <> nr_aih_w;
	
	end if;
	
	if (coalesce(nr_aih_periodo_w,0) > 0)	then
	
		select	max(a.nr_atendimento)
		into STRICT	nr_atendimento_w
		from	sus_aih_unif a
		where	a.nr_aih = nr_aih_periodo_w;
	
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_w || '; ' || ds_texto_aih_w || nr_aih_periodo_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 304, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	
	end if;
	
	end;
end if;

if (sus_obter_inco_ativa(306)) then

        if (cd_cid_secundario_w in (cd_cid_secundario2_w, cd_cid_secundario3_w, cd_cid_secundario4_w, cd_cid_secundario5_w, cd_cid_secundario6_w, cd_cid_secundario7_w, cd_cid_secundario8_w, cd_cid_secundario9_w, cd_cid_principal_w)) then
                cd_texto_cid_w := cd_cid_secundario_w;
        elsif (cd_cid_secundario2_w in (cd_cid_secundario3_w, cd_cid_secundario4_w, cd_cid_secundario5_w, cd_cid_secundario6_w, cd_cid_secundario7_w, cd_cid_secundario8_w, cd_cid_secundario9_w, cd_cid_principal_w)) then
                cd_texto_cid_w := cd_cid_secundario2_w;
        elsif (cd_cid_secundario3_w in (cd_cid_secundario4_w, cd_cid_secundario5_w, cd_cid_secundario6_w, cd_cid_secundario7_w, cd_cid_secundario8_w, cd_cid_secundario9_w, cd_cid_principal_w)) then
                cd_texto_cid_w := cd_cid_secundario3_w;
        elsif (cd_cid_secundario4_w in (cd_cid_secundario5_w, cd_cid_secundario6_w, cd_cid_secundario7_w, cd_cid_secundario8_w, cd_cid_secundario9_w, cd_cid_principal_w)) then
                cd_texto_cid_w := cd_cid_secundario4_w;
        elsif (cd_cid_secundario5_w in (cd_cid_secundario6_w, cd_cid_secundario7_w, cd_cid_secundario8_w, cd_cid_secundario9_w, cd_cid_principal_w)) then
                cd_texto_cid_w := cd_cid_secundario5_w;
        elsif (cd_cid_secundario6_w in (cd_cid_secundario7_w, cd_cid_secundario8_w, cd_cid_secundario9_w, cd_cid_principal_w)) then
                cd_texto_cid_w := cd_cid_secundario6_w;
        elsif (cd_cid_secundario7_w in (cd_cid_secundario8_w, cd_cid_secundario9_w, cd_cid_principal_w)) then
                cd_texto_cid_w := cd_cid_secundario7_w;
        elsif (cd_cid_secundario8_w in (cd_cid_secundario9_w, cd_cid_principal_w)) then
                cd_texto_cid_w := cd_cid_secundario8_w;
        elsif (cd_cid_secundario9_w in (cd_cid_principal_w)) then
                cd_texto_cid_w := cd_cid_secundario9_w;
        else
                cd_texto_cid_w := null;
        end if;

        if (cd_texto_cid_w IS NOT NULL AND cd_texto_cid_w::text <> '') then
                begin
                ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; '|| ds_texto_conta_w || ' ' || nr_interno_conta_p || '; '|| ds_texto_aih_w || ' ' || nr_aih_w || '; '|| ds_texto_cid_w || ' ' || cd_texto_cid_w,1,255);
                CALL sus_gravar_inconsistencia(nr_interno_conta_p, 306, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
                end;
        end if;
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_consiste_aih ( nr_interno_conta_p bigint, nr_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

