-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_surgeries_done ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) AS $body$
DECLARE


	qt_total_w						bigint := 0;
	pfcs_panel_detail_seq_w			pfcs_panel_detail.nr_sequencia%type;
	pfcs_panel_seq_w				pfcs_panel.nr_sequencia%type;
	nr_seq_operational_level_w		pfcs_operational_level.nr_sequencia%type;
	ie_period_w                     pfcs_general_rule.ie_period_sc%type;

	c01 CURSOR FOR
    SELECT	cd_especialidade,
			ds_especialidade
    from	especialidade_medica;

	c02 CURSOR(cd_especialidade_p bigint) FOR
	SELECT	coalesce(get_formatted_person_name(c.cd_medico_cirurgiao,'list'), obter_nome_medico(c.cd_medico_cirurgiao,'N')) nm_medico,
			coalesce(get_formatted_person_name(a.cd_pessoa_fisica, 'list'),
            obter_nome_pf(a.cd_pessoa_fisica)) nm_patient,
			c.cd_medico_cirurgiao cd_medico,
			obter_especialidade_medico(c.cd_medico_cirurgiao, 'C') cd_especialidade_medico,
			obter_especialidade_medico(c.cd_medico_cirurgiao, 'D') ds_especialidade_medico,
			obter_desc_classif_pac(a.nr_seq_tipo_classif_pac) ds_classification,
			substr(obter_exame_agenda(a.cd_procedimento, a.ie_origem_proced, a.nr_seq_proc_interno), 1, 240) ds_procedure,
			substr(obter_sexo_pf(a.cd_pessoa_fisica, 'D'), 1, 60) ds_gender,
			substr(coalesce(obter_nome_sala_cirur(coalesce(a.nr_seq_sala_cir,b.nr_seq_sala_cir), ''),obter_unid_setor_cirurgia(c.nr_cirurgia,'U')), 1, 255) ds_room,
			c.dt_inicio_real dt_inicio_real,
			a.nr_atendimento nr_atendimento,
			a.ie_status_agenda ie_status_agenda,
			c.dt_termino dt_termino,
			a.cd_pessoa_fisica cd_pessoa_fisica,
			a.cd_procedimento cd_procedure,
			c.dt_termino_prevista dt_termino_prevista,
			c.dt_inicio_prevista dt_inicio_prevista,
			a.dt_nascimento_pac dt_nascimento_pac,
            obter_dados_pf(a.cd_pessoa_fisica, 'I') qt_idade_paciente
    from	agenda_paciente   a,
            agenda            b,
            cirurgia          c
    where   a.cd_agenda = b.cd_agenda
    and a.nr_cirurgia = c.nr_cirurgia
	and b.cd_estabelecimento = (cd_estabelecimento_p)::numeric 
    and (c.dt_termino IS NOT NULL AND c.dt_termino::text <> '')
    and (c.nr_atendimento IS NOT NULL AND c.nr_atendimento::text <> '')
    and CASE WHEN ie_period_w='M' THEN  pkg_date_utils.start_of(c.dt_inicio_real, 'MONTH', 0) WHEN ie_period_w='D' THEN trunc(c.dt_inicio_real) END = 
                CASE WHEN ie_period_w='M' THEN  pkg_date_utils.start_of(clock_timestamp(), 'MONTH', 0) WHEN ie_period_w='D' THEN trunc(clock_timestamp()) END  
    and CASE WHEN ie_period_w='M' THEN  pkg_date_utils.start_of(c.dt_termino, 'MONTH', 0) WHEN ie_period_w='D' THEN  trunc(c.dt_termino) END  = 
                CASE WHEN ie_period_w='M' THEN  pkg_date_utils.start_of(clock_timestamp(), 'MONTH', 0) WHEN ie_period_w='D' THEN  trunc(clock_timestamp()) END;


BEGIN
        nr_seq_operational_level_w := pfcs_get_structure_level(
				cd_establishment_p => cd_estabelecimento_p,
				ie_level_p => 'O',
				ie_info_p => 'C');

		for c01_w in c01 loop
			begin
                select	ie_period_sc
                into STRICT	ie_period_w
                from	pfcs_general_rule;

				for c02_w in c02(c01_w.cd_especialidade) loop
					begin
                        if c01_w.cd_especialidade = c02_w.cd_especialidade_medico then
                            qt_total_w := qt_total_w + 1;

                            select	nextval('pfcs_panel_detail_seq')
                            into STRICT	pfcs_panel_detail_seq_w
;

                           insert into pfcs_panel_detail(
                                nr_sequencia,
                                nm_usuario,
                                dt_atualizacao,
                                nm_usuario_nrec,
                                dt_atualizacao_nrec,
                                ie_situation,
                                nr_seq_indicator,
                                nr_seq_operational_level)
                            values (
                                pfcs_panel_detail_seq_w,
                                nm_usuario_p,
                                clock_timestamp(),
                                nm_usuario_p,
                                clock_timestamp(),
                                'T',
                                nr_seq_indicator_p,
                                nr_seq_operational_level_w);

                            insert into pfcs_detail_patient(
                                nr_sequencia,
                                nm_usuario,
                                dt_atualizacao,
                                nm_usuario_nrec,
                                dt_atualizacao_nrec,
                                nr_seq_detail,
                                nr_encounter,
                                id_patient,
                                nm_patient,
                                ds_gender,
                                ds_classification,
                                dt_birthdate,
                                ds_age_range,
                                ie_over_threshold)
                            values (
                                nextval('pfcs_detail_patient_seq'),
                                nm_usuario_p,
                                clock_timestamp(),
                                nm_usuario_p,
                                clock_timestamp(),
                                pfcs_panel_detail_seq_w,
                                c02_w.nr_atendimento,
                                c02_w.cd_pessoa_fisica,
                                c02_w.nm_patient,
                                c02_w.ds_gender,
                                c02_w.ds_classification,
                                c02_w.dt_nascimento_pac,
                                c02_w.qt_idade_paciente,
                                'S');

                            insert into pfcs_detail_schedule(
                                nr_sequencia,
                                nm_usuario,
                                dt_atualizacao,
                                nm_usuario_nrec,
                                dt_atualizacao_nrec,
                                nr_seq_detail,
								nm_physician,
                                cd_physician,
                                cd_procedure,
                                ds_procedure,
                                ds_room,
                                cd_specialty,
                                ds_specialty,
                                ie_status_schedule)
                            values (
                                nextval('pfcs_detail_schedule_seq'),
                                nm_usuario_p,
                                clock_timestamp(),
                                nm_usuario_p,
                                clock_timestamp(),
                                pfcs_panel_detail_seq_w,
								c02_w.nm_medico,
                                c02_w.cd_medico,
                                c02_w.cd_procedure,
                                c02_w.ds_procedure,
                                c02_w.ds_room,
                                c01_w.cd_especialidade,
                                c01_w.ds_especialidade,
                                c02_w.ie_status_agenda);

                            insert into pfcs_detail_surgery(
                                nr_sequencia,
                                nm_usuario,
                                dt_atualizacao,
                                nm_usuario_nrec,
                                dt_atualizacao_nrec,
                                nr_seq_detail,
                                cd_procedure,
                                ds_procedure,
                                dt_actual_start,
                                DT_ACTUAL_END,
                                dt_expected_final,
                                dt_expected_start)
                            values (
                                nextval('pfcs_detail_schedule_seq'),
                                nm_usuario_p,
                                clock_timestamp(),
                                nm_usuario_p,
                                clock_timestamp(),
                                pfcs_panel_detail_seq_w,
                                c02_w.cd_procedure,
                                c02_w.ds_procedure,
                                c02_w.dt_inicio_real,
                                c02_w.dt_termino,
                                c02_w.dt_termino_prevista,
                                c02_w.dt_inicio_prevista);
                        end if;
					end;
				end loop;

				commit;

				 := pfcs_pck.pfcs_generate_results(
						vl_indicator_p => qt_total_w, ds_reference_value_p => c01_w.ds_especialidade, cd_reference_value_p => c01_w.cd_especialidade, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => pfcs_panel_seq_w);

				CALL pfcs_pck.pfcs_update_detail(
						nr_seq_indicator_p => nr_seq_indicator_p,
						nr_seq_panel_p => pfcs_panel_seq_w,
						nr_seq_operational_level_p => nr_seq_operational_level_w,
						nm_usuario_p => nm_usuario_p);

				qt_total_w := 0;

			end;
		end loop;

		CALL pfcs_pck.pfcs_activate_records(
				nr_seq_indicator_p => nr_seq_indicator_p,
				nr_seq_operational_level_p => nr_seq_operational_level_w,
				nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_surgeries_done ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) FROM PUBLIC;

