-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_atualizar_saldo_projeto ( nr_lote_contabil_p bigint, ie_acumular_p text, nm_usuario_p text, ie_virada_p text, ds_erro_p INOUT text, ie_consistir_p text default 'S', nr_seq_proj_rec_p bigint  DEFAULT NULL) AS $body$
DECLARE



    nr_sequencia_w          ctb_saldo_projeto.nr_sequencia%type;
    nr_seq_movimento_w      ctb_movto_centro_custo.nr_seq_movimento%type;
    cd_conta_contabil_w     ctb_saldo_projeto.cd_conta_contabil%type;
    cd_centro_custo_w       ctb_saldo_projeto.cd_centro_custo%type;
    vl_movimento_w          ctb_movimento.vl_movimento%type;
    vl_encerramento_w       ctb_saldo_projeto.vl_encerramento%type;
    vl_enc_debito_w         ctb_saldo_projeto.vl_enc_debito%type;
    vl_enc_credito_w        ctb_saldo_projeto.vl_enc_credito%type;
    vl_debito_w         	ctb_saldo_projeto.vl_debito%type;
    vl_credito_w            ctb_saldo_projeto.vl_credito%type;
    vl_saldo_w          	ctb_saldo_projeto.vl_saldo%type;
    nr_seq_mes_ref_w        ctb_movimento.nr_seq_mes_ref%type;
    nr_seq_mes_ant_w        ctb_mes_ref.nr_sequencia%type;
    cd_estab_lote_w         lote_contabil.cd_estabelecimento%type;
    cd_estabelecimento_w    ctb_saldo.cd_estabelecimento%type;
    cd_empresa_w            ctb_mes_ref.cd_empresa%type;
    ie_debito_credito_w     ctb_grupo_conta.ie_debito_credito%type;
    dt_referencia_w         ctb_mes_ref.dt_referencia%type;
    dt_atualizacao_w        ctb_mes_ref.dt_atualizacao%type;
    dt_consistencia_w       lote_contabil.dt_consistencia%type;
    dt_abertura_w           ctb_mes_ref.dt_abertura%type;
    dt_processo_w           lote_contabil.dt_processo%type;
    dt_fechamento_w         ctb_mes_ref.dt_fechamento%type;
    cd_classificacao_w      conta_contabil_classif.cd_classificacao%type;
    cd_classif_sup_w        ctb_saldo_projeto.cd_classif_sup%type;
    nr_nivel_conta_w        ctb_saldo_projeto.nr_nivel_conta%type;
    ie_eliminacao_lancto_w 	ctb_movimento.ie_eliminacao_lancto%type;
    ie_centro_custo_w       Conta_contabil.ie_centro_custo%type;
    ie_encerramento_w       lote_contabil.ie_encerramento%type;
    qt_movto_cc_w           ctb_movto_centro_custo.nr_sequencia%type;
    ds_erro_w           	varchar(2000);
    ie_deb_cred_w           varchar(01);

    type t_estab is table of boolean index by integer;
    estab_w		t_estab;

    C01 CURSOR FOR
    SELECT
        a.nr_sequencia,
        a.vl_movimento,
        a.cd_conta_debito,
        'D',
        b.ie_centro_custo,
        c.ie_debito_credito,
        CASE WHEN ie_encerramento_w='N' THEN 0  ELSE a.vl_movimento END  vl_encerramento,
        coalesce(a.cd_estabelecimento, cd_estab_lote_w) cd_estabelecimento,
        a.cd_classif_debito cd_classificacao,
        a.ie_eliminacao_lancto
    from
        ctb_grupo_conta c,
        Conta_contabil b,
        ctb_movimento a
    where   
        a.nr_lote_contabil = nr_lote_contabil_p
    and
        a.cd_conta_debito = b.cd_conta_contabil
    and 	
        b.cd_grupo = c.cd_grupo
    and
        a.nr_seq_proj_rec  = nr_seq_proj_rec_p
    
union all

    SELECT
        a.nr_sequencia,
        a.vl_movimento,
        a.cd_conta_credito,
        'C',
        b.ie_centro_custo,
        c.ie_debito_credito,
        CASE WHEN ie_encerramento_w='N' THEN 0  ELSE a.vl_movimento END  vl_encerramento,
        coalesce(a.cd_estabelecimento, cd_estab_lote_w) cd_estabelecimento,
        a.cd_classif_credito cd_classificacao,
        a.ie_eliminacao_lancto
    from
        ctb_grupo_conta c,
        Conta_contabil b,
        ctb_movimento a
    where
        a.nr_lote_contabil  = nr_lote_contabil_p
    and
        a.cd_conta_credito  = b.cd_conta_contabil
    and
        b.cd_grupo          = c.cd_grupo
    and
        a.nr_seq_proj_rec   = nr_seq_proj_rec_p;

    C02 CURSOR FOR
    SELECT
        cd_centro_custo,
        vl_movimento,
        CASE WHEN ie_encerramento_w='N' THEN 0  ELSE vl_movimento END  vl_encerramento
    from    
        ctb_movto_centro_custo
    where   
        nr_seq_movimento    = nr_seq_movimento_w
    and
        ie_centro_custo_w   in ('S','O')
    
union all

    SELECT
        0,
        vl_movimento_w,
        vl_encerramento_w
    
    where
        ((ie_centro_custo_w = 'N') or (coalesce(qt_movto_cc_w::text, '') = ''));


BEGIN
        begin
            select 
                nr_seq_mes_ref,
                cd_estabelecimento,
                dt_atualizacao_saldo,
                dt_consistencia,
                dt_processo,
                coalesce(ie_encerramento,'N')
            into STRICT    
                nr_seq_mes_ref_w,
                cd_estab_lote_w,
                dt_atualizacao_w,
                dt_consistencia_w,
                dt_processo_w,
                ie_encerramento_w
            from    
                lote_contabil
            where   
                nr_lote_contabil    = nr_lote_contabil_p;
        exception
            when no_data_found then
                nr_seq_mes_ref_w := null;
                cd_estab_lote_w := null;
                dt_atualizacao_w := null;
                dt_consistencia_w := null;
                dt_processo_w := null;
                ie_encerramento_w := null;
            when too_many_rows then
                nr_seq_mes_ref_w := null;
                cd_estab_lote_w := null;
                dt_atualizacao_w := null;
                dt_consistencia_w := null;
                dt_processo_w := null;
                ie_encerramento_w := null;
        end;

        select 
            cd_empresa,
            dt_referencia,
            dt_abertura,
            dt_fechamento
        into STRICT
            cd_empresa_w,
            dt_referencia_w,
            dt_abertura_w,
            dt_fechamento_w
        from    
            ctb_mes_ref
        where 
            nr_sequencia    = nr_seq_mes_ref_w;


        select
            coalesce(max(nr_sequencia),0)
        into STRICT    
            nr_seq_mes_ant_w
        from    
            ctb_mes_ref
        where   
            cd_empresa  = cd_empresa_w
        and 
            dt_referencia   = PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_referencia_w,-1,0),'month',0);

        open    C01;
        loop
            fetch   C01 into
                nr_seq_movimento_w,
                vl_movimento_w,
                cd_conta_contabil_w,
                ie_deb_cred_w,
                ie_centro_custo_w,
                ie_debito_credito_w,
                vl_encerramento_w,
                cd_estabelecimento_w,
                cd_classificacao_w,
                ie_eliminacao_lancto_w;
            EXIT WHEN NOT FOUND; /* apply on C01 */
                -- Adiciona os estabelecimentos que serao percorridos posteriormente para chamar a acumula_saldo e virada_saldo
                if (not estab_w.exists(cd_estabelecimento_w)) then
                    begin
                        estab_w(cd_estabelecimento_w) := true;
                    end;
                end if;
                cd_classif_sup_w    := substr(ctb_obter_classif_conta_sup(cd_classificacao_w, dt_referencia_w, cd_empresa_w),1,40);
                nr_nivel_conta_w    := CTB_Obter_Nivel_Classif_Conta(cd_classificacao_w);
                vl_enc_debito_w     := 0;
                vl_enc_credito_w    := 0;

                select
                    max(nr_sequencia)
                into STRICT    
                    qt_movto_cc_w
                from    
                    ctb_movto_centro_custo
                where   nr_seq_movimento    = nr_seq_movimento_w;

                if (ie_encerramento_w = 'N') and (ie_centro_custo_w = 'O') and (coalesce(qt_movto_cc_w::text, '') = '') then
                    ie_centro_custo_w   := 'N';
                end if;

                open C02;
                loop
                    fetch   C02 into
                        cd_centro_custo_w,
                        vl_movimento_w,
                        vl_encerramento_w;
                    EXIT WHEN NOT FOUND; /* apply on C02 */
                        if (cd_centro_custo_w = 0) then
                            cd_centro_custo_w   := null;
                        end if;

                        select
                            coalesce(max(nr_sequencia),0)
                        into STRICT    
                            nr_sequencia_w
                        from    ctb_saldo_projeto
                        where   nr_seq_mes_ref      = nr_seq_mes_ref_w
                        and cd_estabelecimento      = cd_estabelecimento_w
                        and cd_conta_contabil       = cd_conta_contabil_w
                        and coalesce(cd_centro_custo,0)  = coalesce(cd_centro_custo_w,0)
                        and nr_seq_proj_rec         = nr_seq_proj_rec_p;

                        if (nr_sequencia_w = 0) then
                            vl_saldo_w      := 0;
                            select
                                nextval('ctb_saldo_projeto_seq')
                            into STRICT    
                                nr_sequencia_w
;
                            if (nr_seq_mes_ant_w > 0) then
                                select
                                    coalesce(max(vl_saldo),0)
                                into STRICT    
                                    vl_saldo_w
                                from    
                                    ctb_saldo_projeto
                                where   nr_seq_mes_ref      = nr_seq_mes_ant_w
                                and cd_estabelecimento      = cd_estabelecimento_w
                                and cd_conta_contabil       = cd_conta_contabil_w
                                and coalesce(cd_centro_custo,0)  = coalesce(cd_centro_custo_w,0)
                                and nr_seq_proj_rec         = nr_seq_proj_rec_p;
                            end if;
                            begin
                                insert into ctb_saldo_projeto(
                                    nr_sequencia, 		
                                    nr_seq_mes_ref,
                                    dt_atualizacao,		
                                    nm_usuario,
                                    cd_estabelecimento,	
                                    cd_conta_contabil,
                                    cd_centro_custo,	
                                    vl_debito,
                                    vl_encerramento,	
                                    vl_credito,
                                    vl_movimento,		
                                    vl_saldo,
                                    vl_enc_debito,		
                                    vl_enc_credito,
                                    vl_eliminacao,		
                                    cd_classificacao,
                                    cd_classif_sup,		
                                    nr_nivel_conta,
                                    nr_seq_proj_rec)
                                values (
                                    nr_sequencia_w,		
                                    nr_seq_mes_ref_w,
                                    clock_timestamp(),			
                                    nm_usuario_p,
                                    cd_estabelecimento_w,
                                    cd_conta_contabil_w,
                                    cd_centro_custo_w,	
                                    0,
                                    0,					
                                    0,
                                    0,					
                                    vl_saldo_w,
                                    0,					
                                    0,
                                    0,					
                                    cd_classificacao_w,
                                    cd_classif_sup_w,	
                                    nr_nivel_conta_w,
                                    nr_seq_proj_rec_p);
                                exception when others then
                                    ds_erro_w   := sqlerrm(SQLSTATE);
                                    --(-20011,'Erro ao Inserir Saldo: (1)' || chr(13) ||ds_erro_w || '#@#@');
                                    CALL wheb_mensagem_pck.exibir_mensagem_abort(269638,'DS_ERRO='||ds_erro_w);
                            end;
                        end if;

                        vl_debito_w		    := 0;
                        vl_credito_w	    := 0;
                        vl_enc_debito_w     := 0;
                        vl_enc_credito_w    := 0;

                        if (ie_deb_cred_w = 'D') then
                            vl_debito_w         := vl_movimento_w;
                            vl_enc_debito_w     := coalesce(vl_encerramento_w,0);
                        else
                            vl_credito_w            := vl_movimento_w;
                            vl_enc_credito_w        := coalesce(vl_encerramento_w,0);
                        end if;

                        if (ie_debito_credito_w <> ie_deb_cred_w) then
                            vl_movimento_w      := vl_movimento_w * -1;
                            vl_encerramento_w   := vl_encerramento_w * -1;
                        end if;

                        begin
                            update
                                ctb_saldo_projeto
                            set 
                                dt_atualizacao      = clock_timestamp(),
                                nm_usuario          = nm_usuario_p,
                                vl_debito           = vl_debito + vl_debito_w,
                                vl_credito          = vl_credito + vl_credito_w,
                                vl_saldo            = vl_saldo + vl_movimento_w,
                                vl_movimento        = vl_movimento + vl_movimento_w,
                                vl_encerramento     = vl_encerramento + vl_encerramento_w,
                                vl_enc_debito       = coalesce(vl_enc_debito,0) + vl_enc_debito_w,
                                vl_enc_credito      = coalesce(vl_enc_credito,0) + vl_enc_credito_w,
                                vl_eliminacao       = coalesce(vl_eliminacao,0) + CASE WHEN ie_eliminacao_lancto_w='S' THEN  vl_movimento_w  ELSE 0 END ,
                                cd_classificacao    = cd_classificacao_w,
                                cd_classif_sup      = cd_classif_sup_w,
                                nr_nivel_conta      = nr_nivel_conta_w,
                                nr_seq_proj_rec     = nr_seq_proj_rec_p
                            where   
                                nr_sequencia    = nr_sequencia_w;
                            exception when others then
                                ds_erro_w   := sqlerrm(SQLSTATE);
                                --(-20011,'Erro ao Inserir Saldo: (2)' || chr(13) ||ds_erro_w || '#@#@');
                                CALL wheb_mensagem_pck.exibir_mensagem_abort(269639,'DS_ERRO='||ds_erro_w);
                            end;
                        end loop;
                    close C02;
                end loop;
            close C01;

            cd_estabelecimento_w := estab_w.first;
            while (cd_estabelecimento_w IS NOT NULL AND cd_estabelecimento_w::text <> '') loop
                if (ie_acumular_p = 'S') then
                    ds_erro_w := CTB_Acumular_Saldo_projeto(nr_seq_mes_ref_w, cd_estabelecimento_w, nm_usuario_p, ds_erro_w, nr_seq_proj_rec_p);
                end if;

                if (ie_virada_p = 'S') then
                    CALL CTB_VIRADA_SALDO_PROJETO(nr_seq_mes_ref_w, cd_estabelecimento_w, nm_usuario_p, nr_seq_proj_rec_p);
                end if;
                cd_estabelecimento_w := estab_w.next(cd_estabelecimento_w);
            end loop;

            ds_erro_p := ds_erro_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_atualizar_saldo_projeto ( nr_lote_contabil_p bigint, ie_acumular_p text, nm_usuario_p text, ie_virada_p text, ds_erro_p INOUT text, ie_consistir_p text default 'S', nr_seq_proj_rec_p bigint  DEFAULT NULL) FROM PUBLIC;

