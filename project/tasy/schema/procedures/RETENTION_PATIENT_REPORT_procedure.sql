-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE retention_patient_report ( patient_id_p text, ds_tables_p text, nm_usuario_p text, qt_months_p bigint, ds_module_p text) AS $body$
DECLARE


ds_sql_ligacao_local_w 			patient_deletion_table.ds_sql_ligacao%type;
ds_comando_w 				varchar(4000);
qt_count_w   				bigint;
name_table_w 				patient_deletion_table.nm_tabela%type;
cd_exp_tabela_w 				tabela_sistema.cd_exp_tabela%type;
patient_from_cursor_c02_w			varchar(20);
dt_atualizacao_w        			varchar(20);
nm_pessoa_fisica_w      			varchar(200);
nr_seq_modulo_w				bigint;
ds_Sep_bv_w 	                                                varchar(50);
ds_param_w				varchar(4000);
dt_one_w					timestamp;


c01 CURSOR FOR
SELECT	distinct a.nm_tabela,
       	 a.ds_sql_ligacao,
        	b.cd_exp_tabela,
	b.nr_seq_modulo
from	  patient_deletion_table a,
        	patient_deletion_attribute x,
	tabela_sistema b
where	x.nr_seq_patient_deletion                 = a.nr_sequencia
and	b.nm_tabela                                 = a.nm_tabela
and 	((obter_se_contido_char(b.nm_tabela,ds_tables_p) = 'S') or (coalesce(ds_tables_p::text, '') = ''))
and	((obter_se_contido(b.nr_seq_modulo,ds_module_p) = 'S') or (coalesce(ds_module_p::text, '') = ''));

c02 CURSOR FOR
SELECT	distinct a.cd_pessoa_fisica,
        b.nm_pessoa_fisica
FROM	  atendimento_paciente a,
        pessoa_fisica b
where	dt_entrada < pkg_date_utils.add_month(clock_timestamp(),-qt_months_p,0)
and   a.cd_pessoa_fisica = b.cd_pessoa_fisica;

TYPE c02_type                   IS TABLE OF c02%ROWTYPE;
c02_regs_w                      c02_type;

TYPE c01_type                   IS TABLE OF c01%ROWTYPE;
c01_regs_w                      c01_type;
BEGIN

delete from data_retention_overview where nm_usuario = nm_usuario_p;


ds_sep_bv_w := obter_separador_bv;

if (patient_id_p IS NOT NULL AND patient_id_p::text <> '') then
    begin
    open c01;
    loop
    FETCH c01 bulk collect INTO c01_regs_w limit 5000;

		FOR i IN 1 .. c01_regs_w.COUNT

		LOOP

		name_table_w := c01_regs_w[i].nm_tabela;

		ds_sql_ligacao_local_w :=  c01_regs_w[i].ds_sql_ligacao;

		cd_exp_tabela_w :=  c01_regs_w[i].cd_exp_tabela;

		nr_seq_modulo_w :=  c01_regs_w[i].nr_seq_modulo;

    begin
  dt_one_w := pkg_date_utils.add_month(clock_timestamp(), -qt_months_p,0);

	ds_comando_w         	:= 'select count(*) from ' || name_table_w ||' where dt_atualizacao_nrec <  :dt_one_w and '|| ds_sql_ligacao_local_w;
  qt_count_w := obter_valor_dinamico_bv(ds_comando_w, ':dt_one_w='||dt_one_w||ds_sep_bv_w||':PATIENT_ID='||patient_id_p, qt_count_w);

	dt_atualizacao_w := clock_timestamp();

	select	nm_pessoa_fisica
	into STRICT	nm_pessoa_fisica_w
	from	pessoa_fisica
	where	cd_pessoa_fisica = patient_id_p;

	if (qt_count_w > 0) then

	insert into data_retention_overview(
									  nr_sequencia,
									  nm_usuario,
									  cd_pessoa_fisica,
									  nm_pessoa_fisica,
									  nm_tabela,
									  cd_exp_descricao,
									  qt_registro,
									  dt_ultimo_registro,
									  dt_atualizacao,
									  nr_seq_modulo)
								values (
										nextval('data_retention_overview_seq') ,
										nm_usuario_p,
										patient_id_p,
										nm_pessoa_fisica_w,
										name_table_w,
										cd_exp_tabela_w,
										qt_count_w,
										dt_atualizacao_w,
										clock_timestamp(),
										nr_seq_modulo_w);

	commit;

	end if;
	end;
   END LOOP;
   EXIT WHEN NOT FOUND; /* apply on c01 */
    end loop;
    close c01;
    end;
end if;

if (coalesce(patient_id_p::text, '') = '') then
	begin
	open c02;
	loop
	FETCH c02 bulk collect INTO c02_regs_w limit 5000;

			FOR i IN 1 .. c02_regs_w.COUNT

				LOOP

				patient_from_cursor_c02_w :=  c02_regs_w[i].cd_pessoa_fisica;

				nm_pessoa_fisica_w        :=  c02_regs_w[i].nm_pessoa_fisica;


		begin
		open c01;
		loop
			FETCH c01 bulk collect INTO c01_regs_w limit 5000;

          FOR i IN 1 .. c01_regs_w.COUNT

              LOOP
						  name_table_w := c01_regs_w[i].nm_tabela;

						  ds_sql_ligacao_local_w :=  c01_regs_w[i].ds_sql_ligacao;

						  cd_exp_tabela_w :=  c01_regs_w[i].cd_exp_tabela;

						  nr_seq_modulo_w :=  c01_regs_w[i].nr_seq_modulo;

			begin
      dt_one_w := pkg_date_utils.add_month(clock_timestamp(), -qt_months_p,0);
			ds_sql_ligacao_local_w := replace(ds_sql_ligacao_local_w,':PATIENT_ID',patient_from_cursor_c02_w);
			ds_comando_w         	:= 'select count(*) from ' || name_table_w ||' where dt_atualizacao_nrec <  :dt_one_w and '|| ds_sql_ligacao_local_w;
      qt_count_w := obter_valor_dinamico_bv(ds_comando_w, ':dt_one_w='||dt_one_w||ds_sep_bv_w||':PATIENT_ID='||patient_id_p, qt_count_w);

			dt_atualizacao_w	:= clock_timestamp();

			if (qt_count_w > 0) then

			insert
			into data_retention_overview(
									  nr_sequencia,
									  nm_usuario,
									  cd_pessoa_fisica,
									  nm_pessoa_fisica,
									  nm_tabela,
									  cd_exp_descricao,
									  qt_registro,
									  dt_ultimo_registro,
									  dt_atualizacao,
									  nr_seq_modulo)
									values (
									  nextval('data_retention_overview_seq') ,
									  nm_usuario_p,
									  patient_from_cursor_c02_w,
									  nm_pessoa_fisica_w,
									  name_table_w,
									  cd_exp_tabela_w,
									  qt_count_w,
									  dt_atualizacao_w,
									  clock_timestamp(),
									  nr_seq_modulo_w);
			commit;

			end if;
			end;
			end loop;
      EXIT WHEN NOT FOUND; /* apply on c01 */
      END LOOP;
			close c01;
			end;
      END LOOP;
      EXIT WHEN NOT FOUND; /* apply on c02 */
	end loop;
	close c02;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE retention_patient_report ( patient_id_p text, ds_tables_p text, nm_usuario_p text, qt_months_p bigint, ds_module_p text) FROM PUBLIC;

