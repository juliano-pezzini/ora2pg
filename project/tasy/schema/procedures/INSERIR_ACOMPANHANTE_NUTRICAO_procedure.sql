-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_acompanhante_nutricao (nr_seq_servico_p bigint, dt_inicio_p timestamp, nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_pessoa_fisica_p text, nm_pessoa_fisica_p text, nm_usuario_p text, nr_seq_Acompanhante_p INOUT bigint) AS $body$
DECLARE


nr_Sequencia_w		bigint;		
nr_seq_serv_dia_w	bigint;	
qt_servico_w		bigint;
dt_servico_w		timestamp;
cd_dieta_w		bigint;
qt_dieta_acomp_w	bigint;

C01 CURSOR FOR
	SELECT	cd_dieta
	from	dieta
	where	ie_situacao = 'A'
	and	ie_dieta_padrao_acomp = 'S'
	and	((cd_estabelecimento = obter_estabelecimento_ativo) or (coalesce(cd_estabelecimento::text, '') = ''));	
					

BEGIN

select	count(*)
into STRICT	qt_servico_w
from	nut_atend_serv_dia
where	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_servico) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_p)
and	nr_atendimento = nr_atendimento_p
and	nr_seq_servico = nr_seq_servico_p;

select	ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_inicio_p, obter_horario_servico(nr_seq_servico_p, cd_setor_atendimento_p))
into STRICT	dt_servico_w
;


if (qt_servico_w = 0) then

	select	nextval('nut_atend_serv_dia_seq')
	into STRICT	nr_seq_serv_dia_w
	;
	
	insert into nut_atend_serv_dia(	nr_sequencia,
					nr_seq_servico,
					nr_Atendimento,
					dt_servico,
					cd_setor_atendimento,
					nm_usuario,
					nm_usuario_nrec,
					dt_atualizacao,
					dt_atualizacao_nrec,
					ie_acompanhante)
			values (nr_seq_serv_dia_w,
					nr_seq_servico_p,
					nr_atendimento_p,
					dt_servico_w,
					cd_setor_atendimento_p,
					nm_usuario_p,
					nm_usuario_p,
					clock_timestamp(),
					clock_timestamp(),
					'S');
else
	select	max(nr_sequencia)
	into STRICT	nr_seq_serv_dia_w
	from	nut_atend_serv_dia
	where	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_servico) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_p)
	and	nr_atendimento = nr_atendimento_p
	and	nr_seq_servico = nr_seq_servico_p;
	
	update	nut_atend_serv_dia
	set	ie_acompanhante = 'S'
	where	nr_sequencia  = nr_seq_serv_dia_w;
end if;
					
					

select	nextval('nut_atend_acompanhante_seq')
into STRICT	nr_Sequencia_w
;

insert into nut_atend_acompanhante(	nr_Sequencia,
					cd_pessoa_fisica,
					nm_pessoa_fisica,
					NR_SEQ_ATEND_SERV_DIA,
					dt_atualizacao,
					dt_atualizacao_nrec,
					nm_usuario,
					nm_usuario_nrec)
		values (	nr_sequencia_w,
					cd_pessoa_fisica_p,
					nm_pessoa_fisica_p,
					nr_seq_serv_dia_w,
					clock_timestamp(),
					clock_timestamp(),
					nm_usuario_p,
					nm_usuario_p);
					
select	count(*)
into STRICT	qt_dieta_acomp_w
from	dieta
where	ie_situacao = 'A'
and	ie_dieta_padrao_acomp = 'S';

if (qt_dieta_acomp_w > 0) then
	open c01;
	loop
	fetch c01 into cd_dieta_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		insert into nut_atend_acomp_dieta(	nr_sequencia,
							cd_dieta,
							nr_seq_atend_acomp,
							dt_atualizacao,
							dt_atualizacao_nrec,
							nm_usuario,
							nm_usuario_nrec)
						values (nextval('nut_atend_acomp_dieta_seq'),
							cd_dieta_w,
							nr_sequencia_w,
							clock_timestamp(),
							clock_timestamp(),
							nm_usuario_p,
							nm_usuario_p);
		end;
	end loop;
	close c01;
end if;

nr_seq_Acompanhante_p := nr_Sequencia_w;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_acompanhante_nutricao (nr_seq_servico_p bigint, dt_inicio_p timestamp, nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_pessoa_fisica_p text, nm_pessoa_fisica_p text, nm_usuario_p text, nr_seq_Acompanhante_p INOUT bigint) FROM PUBLIC;

