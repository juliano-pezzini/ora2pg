-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_pls_procedimento ( nr_seq_conta_p bigint, nr_seq_cobranca_p bigint, nm_usuario_p text, cd_estabelecimento_p text) AS $body$
DECLARE


nm_prestador_w			varchar(230);
cd_prestador_w			varchar(20);
ie_tipo_participacao_w		varchar(10);
ie_tipo_guia_w			varchar(2);
ie_material_intercambio_w	varchar(2);
vl_adic_procedimento_w		double precision;
vl_adic_co_w			double precision;
vl_adic_filme_w			double precision;
vl_participante_w		double precision;
vl_procedimento_w		double precision;
vl_custo_operacional_w		double precision;
cd_procedimento_w		bigint;
cd_material_imp_w		bigint;
cd_procedimento_imp_w		bigint;
qt_servico_w			bigint;
nr_sequencia_w			bigint;
nr_seq_material_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_nota_servico_w		bigint;
qt_internacao_w			bigint;
nr_seq_prestador_w		bigint;
nr_seq_grau_participacao_w	bigint;
nr_seq_proc_participante_w	bigint;
nr_seq_conta_proc_nota_w	bigint;
qt_medico_w			bigint;
nr_seq_nota_servico_ww		bigint;
qt_material_w			bigint;
nr_seq_conta_mat_w		bigint;
nr_seq_conta_proc_w		bigint;
tx_procedimento_w		double precision;
qt_procedimento_w		pls_conta_proc_v.qt_procedimento%type;
ie_via_acesso_w			smallint;
ds_via_acesso_w			varchar(1);
ie_tipo_procedimento_w		smallint;
ie_tipo_despesa_w		smallint;
dt_procedimento_w		timestamp;
tx_intercambio_imp_w		double precision;
cd_servico_w			bigint;
nr_cgc_cpf_w			varchar(14);
nr_cgc_cpf_req_w		varchar(14);
ie_tipo_pessoa_prestador_w	varchar(1);
ie_proc_do_prestador_w		varchar(1);
vl_filme_w			double precision;
vl_proc_apresentado_ww		double precision;
vl_procedimento_uni_w		double precision;
dt_inicio_proc_w		timestamp;
ds_hora_procedimento_w		varchar(8);
cd_porte_anestesico_w		varchar(1);
vl_total_proc_w			double precision;
ds_servico_w			varchar(80);
ie_pacote_w			varchar(1);
ie_ato_cooperado_w		pls_conta_proc.ie_ato_cooperado%type;
ie_alto_custo_w			ptu_nota_servico.ie_alto_custo%type;
dt_fim_proc_w			timestamp;
hr_final_w			varchar(8);
cd_ref_material_fab_w		ptu_nota_servico.cd_ref_material_fab%type;
nr_seq_prest_inter_w		pls_proc_participante.nr_seq_prest_inter%type;
cd_cgc_prestador_w		varchar(14);
nr_cpf_prestador_w		varchar(11);
cd_munic_w			ptu_nota_servico.cd_munic%type;	
nr_seq_cong_prot_w		pls_protocolo_conta.nr_sequencia%type;
nr_seq_congenere_sup_w		pls_congenere.nr_seq_congenere%type;
nr_seq_guia_w			pls_conta_proc.nr_seq_guia%type;
nr_autorizacao_w		ptu_nota_servico.nr_autorizacao%type;
nr_seq_segurado_w		pls_conta.nr_seq_segurado%type;
nr_cbo_exec_w			ptu_nota_servico.nr_cbo_exec%type;
tp_rede_min_w			pls_conta_proc_regra.tp_rede_min%type;
tx_procedimento_regra_w		ptu_nota_servico.tx_procedimento%type;
ie_tx_procedimento_w		pls_parametros.ie_tx_procedimento%type;
cd_munic_cont_exec_w		ptu_nota_cobranca.cd_munic_cont_exec%type;
unidade_medida_w		ptu_nota_servico.unidade_medida%type;
cd_unidade_medida_w		tiss_unidade_medida.cd_unidade_medida%type;
nr_seq_medida_tiss_w		unidade_medida.nr_seq_medida_tiss%type;
tipo_rede_min_w			ptu_nota_cobranca.tipo_rede_min%type;
id_aviso_item_w			ptu_nota_servico.id_aviso_item%type;
ie_origem_conta_w		pls_conta.ie_origem_conta%type;
vl_apresentado_a500_w		pls_conta_proc.vl_procedimento_imp%type;
id_acres_urg_emer_w		ptu_nota_servico.id_acres_urg_emer%type;

ie_tipo_fatura_w       		ptu_fatura.ie_tipo_exportacao%type;
ie_tp_nota_w			ptu_nota_cobranca.tp_nota%type;
qt_part_equipe_w		integer;

/* Servios */

C01 CURSOR FOR
	SELECT	ie_tipo_tabela,
		cd_procedimento,
		ie_via_acesso,	--decode(ie_via_acesso,'D',2,'M',1,'U',0),
		dt_procedimento,
		qt_procedimento,
		coalesce(vl_adic_procedimento,0),
		coalesce(vl_custo_operacional,0),
		ie_origem_proced,
		coalesce(vl_procedimento,0),
		coalesce(vl_filme,0),
		coalesce(vl_adic_co,0),
		coalesce(vl_adic_filme,0),
		nr_seq_material,
		cd_servico,
		nr_sequencia,
		nr_cgc_cpf,
		nr_cgc_cpf_req,
		ie_tipo_pessoa_prestador,
		ie_tipo_participacao,
		coalesce(cd_cnes_prest, cd_prestador),
		coalesce(nm_profissional_prestador, nm_prestador),
		ds_hora_procedimento,
		cd_porte_anestesico,
		ds_servico,
		ie_pacote,
		cd_ato,
		coalesce(ie_alto_custo,'N'),
		hr_final,
		cd_ref_material_fab,
		cd_munic,
		nr_autorizacao,
		nr_cbo_exec,
		tipo_rede_min,
		tx_procedimento,
		unidade_medida,
		coalesce(id_aviso_item, 'N') id_aviso_item,
		coalesce(vl_procedimento,0) + coalesce(vl_custo_operacional,0) + coalesce(vl_filme,0) + coalesce(vl_adic_procedimento,0) + coalesce(vl_adic_co,0) + coalesce(vl_adic_filme,0) vl_apresentado_a500,
		id_acres_urg_emer
	from	ptu_nota_servico
	where	nr_seq_nota_cobr		= nr_seq_cobranca_p
	and coalesce(ie_pacote,'N') = 'N';--itens que vem marcados como pacote, devem 
C02 CURSOR FOR
	SELECT	a.ie_tipo_participacao_tiss,
		a.cd_prestador,
		a.nm_prestador,
		a.cd_cpf,
		a.nr_Conselho,
		a.sg_Conselho,
		a.uf_Conselho,
		a.nr_cbo,
		a.nr_sequencia,
		( 	SELECT 	max(x.cd_pessoa_fisica)
			from 	pessoa_fisica X,
				medico z
			where 	x.nr_cpf = a.cd_cpf
			and 	x.cd_pessoa_fisica = z.cd_pessoa_fisica) 	cd_pf,
		(select max(nr_sequencia) from cbo_saude where (cd_cbo_ptu)::numeric  = a.nr_cbo) nr_seq_cbo
	from	ptu_nota_servico_equipe a
	where	a.nr_seq_nota_servico = nr_seq_nota_servico_w;	
	
BEGIN

select 	coalesce(max(ie_material_intercambio),'S'),
	coalesce(max(ie_tx_procedimento), 'N')
into STRICT	ie_material_intercambio_w,
	ie_tx_procedimento_w
from 	pls_parametros
where 	cd_estabelecimento = cd_estabelecimento_p;	

ie_tipo_fatura_w := 'TXT';

select 	coalesce(max(pf.ie_tipo_exportacao),'TXT'),
	coalesce(max(pc.tp_nota),0)
  into STRICT 	ie_tipo_fatura_w,
	ie_tp_nota_w
  from ptu_nota_cobranca 	pc,
	ptu_fatura 		pf
 where 	pc.nr_sequencia 	= nr_seq_cobranca_p
   and 	pf.nr_sequencia 	= pc.nr_seq_fatura;

select	max(nr_seq_congenere_prot),
	max(nr_seq_segurado),
	max(ie_origem_conta)
into STRICT	nr_seq_cong_prot_w,
	nr_seq_segurado_w,
	ie_origem_conta_w
from	pls_conta_v
where	nr_sequencia = nr_seq_conta_p;

select	cd_munic_cont_exec,
	tipo_rede_min
into STRICT	cd_munic_cont_exec_w,
	tipo_rede_min_w
from	ptu_nota_cobranca
where	nr_sequencia = nr_seq_cobranca_p;

open C01;
loop
fetch C01 into
	ie_tipo_despesa_w,--ie_tipo_procedimento_w,
	cd_procedimento_w,
	ie_via_acesso_w,
	dt_procedimento_w,
	qt_procedimento_w,
	vl_adic_procedimento_w,
	vl_custo_operacional_w,
	ie_origem_proced_w,
	vl_procedimento_w,
	vl_filme_w,
	vl_adic_co_w,
	vl_adic_filme_w,
	nr_seq_material_w,
	cd_servico_w,
	nr_seq_nota_servico_w,
	nr_cgc_cpf_w,
	nr_cgc_cpf_req_w,
	ie_tipo_pessoa_prestador_w,
	ie_tipo_participacao_w,
	cd_prestador_w,
	nm_prestador_w,
	ds_hora_procedimento_w,
	cd_porte_anestesico_w,
	ds_servico_w,
	ie_pacote_w,
	ie_ato_cooperado_w,
	ie_alto_custo_w,
	hr_final_w,
	cd_ref_material_fab_w,
	cd_munic_w,
	nr_autorizacao_w,
	nr_cbo_exec_w,
	tp_rede_min_w,
	tx_procedimento_regra_w,
	unidade_medida_w,
	id_aviso_item_w,
	vl_apresentado_a500_w,
	id_acres_urg_emer_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	--Nao ficou claro se nas guias de honorario tera a tag de equipe   ou nao, entao eh feito uma verificacao adicional
	qt_part_equipe_w := 0;
	if ( ie_tp_nota_w = 4)    then

		select  count(1)
		into STRICT	qt_part_equipe_w
		from	ptu_nota_servico_equipe a
		where	a.nr_seq_nota_servico = nr_seq_nota_servico_w;

	end if;
	
	/* Efetua a soma dos valores - OS 416758 */

	vl_total_proc_w	:= coalesce(vl_procedimento_w,0) + coalesce(vl_filme_w,0) + coalesce(vl_custo_operacional_w,0);
		
	tx_intercambio_imp_w	:= dividir_sem_round(((vl_adic_procedimento_w + vl_adic_co_w + vl_adic_filme_w) * 100),vl_total_proc_w);
	
	/*Robson da Silva OS - 376887*/

	
	vl_proc_apresentado_ww 	:= vl_procedimento_w + vl_adic_procedimento_w + vl_custo_operacional_w + vl_adic_co_w + vl_filme_w + vl_adic_filme_w;
	
	vl_procedimento_uni_w	:= dividir_sem_round(vl_proc_apresentado_ww, qt_procedimento_w);
	
	
	if (ie_tx_procedimento_w = 'N') then
		tx_procedimento_regra_w := null;
	end if;
	
	if (coalesce(cd_munic_w::text, '') = '') then
		cd_munic_w := cd_munic_cont_exec_w;
	end if;
	
	begin
	dt_inicio_proc_w := to_date(to_char(dt_procedimento_w,'dd/mm/yyyy')||' '||ds_hora_procedimento_w, 'dd/mm/yyyy hh24:mi:ss');
	exception
	when others then
		dt_inicio_proc_w	:= null;
	end;
	
	begin
	dt_fim_proc_w	:= to_date(to_char(dt_procedimento_w,'dd/mm/yyyy')||' '||hr_final_w, 'dd/mm/yyyy hh24:mi:ss');
	exception
	when others then
		dt_fim_proc_w		:= null;
	end;
	
	nr_seq_guia_w	:= null;

	if (ie_tipo_despesa_w in (0,1,4)) or
		((coalesce(nr_seq_material_w::text, '') = '') and (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '')) then
		
		-- caso no encontre vai tentar buscar do PTU pelo numero da conta
		select	max(e.nr_seq_guia)
		into STRICT	nr_seq_guia_w
		from	ptu_nota_servico 		c,
			ptu_resposta_autorizacao	d,
			ptu_nota_cobranca		b,
			pls_execucao_requisicao 	e,
			ptu_fatura 			a
		where	c.nr_sequencia			= nr_seq_nota_servico_w
		and	d.nr_seq_origem			= c.nr_autorizacao
		and	b.nr_sequencia			= c.nr_seq_nota_cobr
		and	e.nr_seq_requisicao		= d.nr_seq_requisicao
		and	a.cd_unimed_origem		= d.cd_unimed_executora
		and	a.nr_sequencia			= b.nr_seq_fatura;
		
		-- se tiver a informao da congenere ento busca a guia pela senha.
		if ((nr_seq_cong_prot_w IS NOT NULL AND nr_seq_cong_prot_w::text <> '') and coalesce(nr_seq_guia_w::text, '') = '') then
		
			-- as senha interna ou externa da autorizao devem ser iguais a da conta.
			select	max(x.nr_sequencia)
			into STRICT	nr_seq_guia_w
			from (
				SELECT	a.nr_sequencia
				from	pls_guia_plano a
				where	a.nr_seq_segurado = nr_seq_segurado_w
				and	a.nr_seq_uni_exec = nr_seq_cong_prot_w
				and	a.cd_senha = to_char(nr_autorizacao_w)
				and	a.ie_status in ('1', '2')
				
union all

				SELECT	a.nr_sequencia
				from	pls_guia_plano a
				where	a.nr_seq_segurado = nr_seq_segurado_w
				and	a.nr_seq_uni_exec = nr_seq_cong_prot_w
				and	a.cd_senha_externa = to_char(nr_autorizacao_w)
				and	a.ie_status in ('1', '2')
				) x;
			
			-- Tratamento includo devido ao fato de a senha da autorizao, no ser igual ao nmero da resposta ptu
			if (coalesce(nr_seq_guia_w::text, '') = '') then
				select	max(guia.nr_sequencia)
				into STRICT	nr_seq_guia_w
				from	pls_guia_plano guia,
					ptu_resposta_autorizacao resposta
				where	guia.nr_seq_segurado = nr_seq_segurado_w
				and	guia.nr_seq_uni_exec = nr_seq_cong_prot_w
				and	guia.ie_status in ('1', '2')
				and	resposta.nr_seq_guia = guia.nr_sequencia
				and	resposta.nr_seq_origem = nr_autorizacao_w;

				-- Tratamento includo devido ao fato que a operadora do A500 no ser a mesma da guia do SCS
				if (coalesce(nr_seq_guia_w::text, '') = '') then
					
					select	max(resposta.nr_seq_guia)
					into STRICT	nr_seq_guia_w
					from	ptu_resposta_autorizacao resposta
					where	resposta.nr_seq_origem = nr_autorizacao_w
					and	exists (SELECT 1
							from   pls_guia_plano guia
							where  guia.nr_seq_segurado = nr_seq_segurado_w
							and    guia.ie_status in ('1', '2')
							and    guia.nr_sequencia = resposta.nr_seq_guia);
					
					-- Verifica se a operadora superior da guia  a mesma do protocolo do A500
					if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
					
						select	max(a.nr_seq_congenere)
						into STRICT	nr_seq_congenere_sup_w
						from	pls_guia_plano b,
							pls_congenere a
						where	b.nr_sequencia = nr_seq_guia_w
						and	a.nr_sequencia = b.nr_seq_uni_exec;

						if (nr_seq_congenere_sup_w <> nr_seq_cong_prot_w) then
							nr_seq_guia_w	:= null;
						end if;	
					end if;
				end if;
			end if;
		end if;
		
		select	CASE WHEN ie_via_acesso_w=2 THEN 'D' WHEN ie_via_acesso_w=1 THEN 'M' WHEN ie_via_acesso_w=0 THEN 'U' END
		into STRICT	ds_via_acesso_w
		;
		
		if (ds_via_acesso_w in ('D','M','U') ) then
			select 	obter_tx_proc_via_acesso(ds_via_acesso_w)
			into STRICT	tx_procedimento_w
			;
		else
			tx_procedimento_w := 100;
		end if;
		
		select	count(1)
		into STRICT	qt_servico_w
		from	procedimento
		where	cd_procedimento = cd_procedimento_w;
		
		if (ie_tipo_despesa_w not in (0,1,4)) then
			ie_tipo_despesa_w := null;
		end if;
		
		select	CASE WHEN ie_tipo_despesa_w=0 THEN 1 WHEN ie_tipo_despesa_w=1 THEN 2  ELSE ie_tipo_despesa_w END
		into STRICT	ie_tipo_despesa_w
		;
		
		cd_procedimento_imp_w		:= cd_procedimento_w;
		
		if (qt_servico_w = 0) then
			update	ptu_nota_servico
			set	cd_procedimento   = NULL,
				ie_origem_proced  = NULL
			where	nr_sequencia	 = nr_seq_nota_servico_w;
		
			cd_procedimento_w	:= null;
			ie_origem_proced_w	:= null;
		end if;
		

		insert into pls_conta_proc(nr_sequencia, nm_usuario, dt_atualizacao,
			nm_usuario_nrec, dt_atualizacao_nrec, cd_procedimento,
			ie_via_acesso, dt_procedimento, tx_item,
			qt_procedimento, ie_status,
			vl_procedimento_imp, ie_tipo_despesa, nr_seq_conta, 
			ie_situacao, vl_unitario_imp, qt_procedimento_imp, 
			ie_origem_proced, vl_adic_procedimento, vl_adic_co, 
			vl_adic_materiais, cd_procedimento_imp, tx_intercambio_imp,
			vl_taxa_co_imp, vl_taxa_servico_imp, vl_taxa_material_imp,
			vl_procedimento_ptu_imp, vl_co_ptu_imp, vl_material_ptu_imp,
			dt_inicio_proc,cd_porte_anestesico_imp,ds_procedimento_imp,
			ie_ato_cooperado, ie_pacote_ptu,qt_ptu_item, 
			vl_apresentado_xml, qt_procedimento_original, ie_alto_custo,
			dt_fim_proc,nr_seq_guia)
		values (nextval('pls_conta_proc_seq'), nm_usuario_p, clock_timestamp(),
			nm_usuario_p, clock_timestamp(), cd_procedimento_w,
			ds_via_acesso_w, dt_procedimento_w, tx_procedimento_w,
			qt_procedimento_w, 'U', 
			vl_proc_apresentado_ww, ie_tipo_despesa_w, nr_seq_conta_p, 
			'B', vl_procedimento_uni_w, qt_procedimento_w,
			ie_origem_proced_w, vl_adic_procedimento_w, vl_adic_co_w,
			vl_adic_filme_w, cd_servico_w, tx_intercambio_imp_w,
			vl_adic_co_w, vl_adic_procedimento_w, vl_adic_filme_w,
			vl_procedimento_w, vl_custo_operacional_w, vl_filme_w,
			dt_inicio_proc_w,cd_porte_anestesico_w,ds_servico_w,
			ie_ato_cooperado_w, ie_pacote_w,qt_procedimento_w,
			vl_proc_apresentado_ww, qt_procedimento_w, ie_alto_custo_w,
			dt_fim_proc_w,nr_seq_guia_w) returning nr_sequencia into nr_seq_conta_proc_w;
		
		update	ptu_nota_servico
		set	nr_seq_conta_proc = nr_seq_conta_proc_w
		where	nr_sequencia	  = nr_seq_nota_servico_w;
		
		insert into pls_conta_proc_regra(	nr_sequencia, dt_atualizacao, nm_usuario,
							tp_rede_min, tx_item, ie_a520,
							ie_acres_urg_emer)
					values (	nr_seq_conta_proc_w, clock_timestamp(), nm_usuario_p,
							coalesce(tp_rede_min_w,tipo_rede_min_w), tx_procedimento_regra_w, id_aviso_item_w,
							id_acres_urg_emer_w);
		
		--Se nao ha informacao de equipe, como por exemplo em guias de consulta, mantem geracao do participante da maneira antiga. Como para guias 

		--de honorario nao ficou se vira a tag equipe, entao eh feito um teste tambem // 2890224 alterado conforme solicitado pelo time de rede
		
		
		if (ie_tipo_fatura_w = 'TXT')  and ((ie_tp_nota_w = 1) or (ie_tp_nota_w = 4 and qt_part_equipe_w = 0))then
					
			select	max(nr_sequencia)
			into STRICT	nr_seq_grau_participacao_w
			from	pls_grau_participacao
			where	cd_ptu		= ie_tipo_participacao_w
			and	ie_situacao = 'A';

			if (coalesce(nr_seq_grau_participacao_w::text, '') = '') then
				select	max(nr_sequencia)
				into STRICT	nr_seq_grau_participacao_w
				from	pls_grau_participacao
				where	cd_ptu		= ie_tipo_participacao_w;
			end if;
			
			if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
				
				if (ie_tipo_pessoa_prestador_w = 'J') then
					cd_cgc_prestador_w		:= nr_cgc_cpf_w;
					nr_cpf_prestador_w		:= null;
				elsif (ie_tipo_pessoa_prestador_w = 'F') then
					cd_cgc_prestador_w    := null;
					nr_cpf_prestador_w    := substr(nr_cgc_cpf_w,4,11);									
				end if;
				
				SELECT * FROM pls_gerar_prest_intercambio(	nr_cpf_prestador_w, cd_cgc_prestador_w, nm_prestador_w, cd_prestador_w, cd_munic_w, nm_usuario_p, null, nr_cbo_exec_w, nr_seq_prest_inter_w, nr_seq_prestador_w) INTO STRICT nr_seq_prest_inter_w, nr_seq_prestador_w;
					
				insert	into pls_proc_participante(nr_sequencia,			dt_atualizacao,		nm_usuario,
					dt_atualizacao_nrec,		nm_usuario_nrec,	nr_seq_conta_proc,
					nr_seq_grau_partic,		vl_apresentado,		nm_medico_executor_imp,
					ie_status,			nr_seq_prest_inter)
				values (nextval('pls_proc_participante_seq'),	clock_timestamp(),		nm_usuario_p,
					clock_timestamp(),			nm_usuario_p,		nr_seq_conta_proc_w,
					nr_seq_grau_participacao_w,	vl_procedimento_w,	CASE WHEN coalesce(nm_prestador_w,'X')='X' THEN null  ELSE cd_prestador_w || ' - ' || nm_prestador_w END ,
					'U',				nr_seq_prest_inter_w) returning nr_sequencia into nr_seq_proc_participante_w;
				
				update	ptu_nota_servico
				set	nr_seq_proc_partic	= nr_seq_proc_participante_w
				where	nr_sequencia		= nr_seq_nota_servico_ww;					
			end if;
		--fim if tipo fatura txt 
		else --se for xml
			
			if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
						
				if (ie_tipo_pessoa_prestador_w = 'J') then
					cd_cgc_prestador_w		:= nr_cgc_cpf_w;
					nr_cpf_prestador_w		:= null;
				elsif (ie_tipo_pessoa_prestador_w = 'F') then
					cd_cgc_prestador_w    := null;
					nr_cpf_prestador_w    := trim(both nr_cgc_cpf_w);
				end if;
						
				SELECT * FROM pls_gerar_prest_intercambio(	nr_cpf_prestador_w, cd_cgc_prestador_w, nm_prestador_w, cd_prestador_w, cd_munic_w, nm_usuario_p, null, nr_cbo_exec_w, nr_seq_prest_inter_w, nr_seq_prestador_w) INTO STRICT nr_seq_prest_inter_w, nr_seq_prestador_w;
								
				for r_c02_w in C02 loop
			
					select	max(nr_sequencia)
					into STRICT	nr_seq_grau_participacao_w
					from	pls_grau_participacao
					where	cd_tiss		= r_c02_w.ie_tipo_participacao_tiss
					and	ie_situacao = 'A';

					if ( coalesce(nr_seq_grau_participacao_w::text, '') = '') then
						select	max(nr_sequencia)
						into STRICT	nr_seq_grau_participacao_w
						from	pls_grau_participacao
						where	cd_tiss		= r_c02_w.ie_tipo_participacao_tiss;
					end if;
			
					if ( coalesce(nr_seq_grau_participacao_w::text, '') = '') then
						select	max(nr_sequencia)
						into STRICT	nr_seq_grau_participacao_w
						from	pls_grau_participacao
						where	cd_ptu		= r_c02_w.ie_tipo_participacao_tiss
						and	ie_situacao = 'A';

						if (coalesce(nr_seq_grau_participacao_w::text, '') = '') then
							select	max(nr_sequencia)
							into STRICT	nr_seq_grau_participacao_w
							from	pls_grau_participacao
							where	cd_ptu		= r_c02_w.ie_tipo_participacao_tiss;
						end if;
					end if;
						
					insert	into pls_proc_participante(nr_sequencia,			dt_atualizacao,		nm_usuario,
						dt_atualizacao_nrec,		nm_usuario_nrec,	nr_seq_conta_proc,
						nr_seq_grau_partic,		vl_apresentado,		nm_medico_executor_imp,
						ie_status,			nr_seq_prest_inter, 	sg_conselho_imp,
						uf_conselho, uf_crm_imp,
						cd_medico_imp, cd_medico, nr_seq_cbo_saude )
					values (nextval('pls_proc_participante_seq'),	clock_timestamp(),		nm_usuario_p,
						clock_timestamp(),			nm_usuario_p,		nr_seq_conta_proc_w,
						nr_seq_grau_participacao_w,	0,	CASE WHEN coalesce(r_c02_w.nm_prestador,'X')='X' THEN null  ELSE r_c02_w.cd_prestador || ' - ' || r_c02_w.nm_prestador END ,
						'U',				nr_seq_prest_inter_w, r_c02_w.sg_conselho,
						r_c02_w.uf_conselho, r_c02_w.uf_conselho,
						r_c02_w.cd_pf, r_c02_w.cd_pf, r_c02_w.nr_seq_cbo)
						returning nr_sequencia into nr_seq_proc_participante_w;
																							
					update 	ptu_nota_servico_equipe
					set	nr_seq_proc_partic = nr_seq_proc_participante_w
					where 	nr_sequencia = r_c02_w.nr_sequencia;
													
				end loop;
							
			end if;
						
		end if;
		
		
	elsif (ie_tipo_despesa_w in (2,3,5,6)) then
		
		select	CASE WHEN ie_tipo_despesa_w=3 THEN 2 WHEN ie_tipo_despesa_w=2 THEN 3 WHEN ie_tipo_despesa_w=5 THEN 2 WHEN ie_tipo_despesa_w=6 THEN 3 END 
		into STRICT	ie_tipo_despesa_w
		;
		
		select	max(nr_seq_medida_tiss)
		into STRICT	nr_seq_medida_tiss_w
		from	unidade_medida
		where	nr_unidade_ptu = unidade_medida_w;
		
		cd_unidade_medida_w := null;
		
		if (nr_seq_medida_tiss_w IS NOT NULL AND nr_seq_medida_tiss_w::text <> '') then
			select	max(cd_unidade_medida)
			into STRICT	cd_unidade_medida_w
			from	tiss_unidade_medida
			where	nr_sequencia = nr_seq_medida_tiss_w;
		end if;
		
				
		
		insert into pls_conta_mat(nr_sequencia, nm_usuario, dt_atualizacao,
			nm_usuario_nrec, dt_atualizacao_nrec, nr_seq_material,
			dt_atendimento, tx_reducao_acrescimo, qt_material,
			vl_material_imp, ie_status, nr_seq_conta,
			ie_situacao, vl_unitario_imp, qt_material_imp,
			ie_tipo_despesa, vl_taxa_material_imp, cd_material_imp,
			dt_inicio_atend,ds_material_imp, ie_ato_cooperado,
			tx_intercambio_imp, ie_pacote_ptu, ie_alto_custo,
			dt_fim_atend, vl_material_imp_xml, cd_ref_fabricante,
			cd_unidade_medida)
		values (nextval('pls_conta_mat_seq'), nm_usuario_p, clock_timestamp(),
			nm_usuario_p, clock_timestamp(), nr_seq_material_w, 
			dt_procedimento_w, tx_procedimento_w, qt_procedimento_w, 
			vl_proc_apresentado_ww, 'U', nr_seq_conta_p,
			'I', vl_procedimento_uni_w, qt_procedimento_w,
			ie_tipo_despesa_w, vl_adic_procedimento_w, cd_servico_w,
			dt_inicio_proc_w,ds_servico_w, ie_ato_cooperado_w,
			tx_intercambio_imp_w, ie_pacote_w, ie_alto_custo_w,
			dt_fim_proc_w, vl_proc_apresentado_ww, cd_ref_material_fab_w,
			cd_unidade_medida_w) returning nr_sequencia into nr_seq_conta_mat_w;
		
		insert into pls_conta_mat_regra(	nr_sequencia, dt_atualizacao, nm_usuario,
							tp_rede_min, ie_a520, ie_acres_urg_emer)
					values (	nr_seq_conta_mat_w, clock_timestamp(), nm_usuario_p,
							coalesce(tp_rede_min_w,tipo_rede_min_w), id_aviso_item_w, id_acres_urg_emer_w);
							
		update	ptu_nota_servico
		set	nr_seq_conta_mat		= nr_seq_conta_mat_w
		where	nr_sequencia			= nr_seq_nota_servico_w;
		
	end if;

	end;
end loop;
close C01;

CALL pls_cta_proc_mat_regra_pck.gera_seq_tiss_conta_proc(nr_seq_conta_p, nm_usuario_p);
CALL pls_cta_proc_mat_regra_pck.gera_seq_tiss_conta_mat(nr_seq_conta_p, nm_usuario_p);


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_pls_procedimento ( nr_seq_conta_p bigint, nr_seq_cobranca_p bigint, nm_usuario_p text, cd_estabelecimento_p text) FROM PUBLIC;

