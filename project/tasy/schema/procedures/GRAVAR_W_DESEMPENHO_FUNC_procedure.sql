-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_w_desempenho_func ( cd_estabelecimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nr_seq_grupo_p bigint, nm_usuario_p text, nm_usuario_ref_p text) AS $body$
DECLARE

 
 
nr_sequencia_w			bigint;
nm_usuario_w			varchar(15);
ie_existe_w			varchar(15);
qt_os_trab_w			bigint;
qt_min_trab_w			bigint;
qt_os_sol_def_w			bigint;
qt_os_sol_def_dupla_w		bigint;
qt_min_trab_os_sol_def_w	bigint;

nr_seq_ordem_w			bigint;
qt_solucao_def_w		bigint;

qt_os_prev_w			bigint;
qt_min_prev_w			bigint;
nr_seq_grupo_w			bigint;
qt_min_trab_prev_w		bigint;

qt_ordem_rec_w			bigint;
qt_ordem_rec_prev_w		bigint;
qt_solucao_prev_w		bigint;

qt_ordem_pend_w			bigint;
qt_ordem_pend_prev_w		bigint;
qt_min_pend_prev_w		bigint;
qt_min_trab_pend_w		bigint;
cd_funcao_w			bigint;

ie_status_ordem_w		bigint;
dt_ordem_w			timestamp;
dt_entrada_des_w		timestamp;

nm_usuario_ref_ww		varchar(15);
qt_min_prev_ww			bigint;
qt_min_trab_ww			bigint;
QT_MIN_TRAB_REC_w		bigint;
qt_min_pend_prev_ww		bigint;

cont_w				bigint;

C01 CURSOR FOR 
SELECT	distinct 
	nr_sequencia, 
	dt_ordem_servico, 
	ie_status_ordem, 
	cd_funcao, 
	trunc(obter_data_estagio_os(nr_sequencia,'D'), 'dd') dt_entrada_ds, 
	nr_seq_grupo_des 
from	man_ordem_servico 
where	nr_sequencia in 
	( 
	SELECT	distinct nr_seq_ordem_serv nr_seq_ordem 
	from	man_ordem_serv_ativ a, 
		man_ordem_servico b 
	where	a.dt_atividade		between	dt_inicial_p and fim_dia(dt_final_p) 
	and	b.dt_ordem_servico	< dt_inicial_p 
	and	a.nr_seq_ordem_serv	= b.nr_sequencia 
	
union all
 
	select	distinct a.nr_seq_ordem 
	from	man_ordem_serv_estagio a, 
		man_ordem_servico b 
	where	trunc(a.dt_atualizacao, 'dd')	between dt_inicial_p and dt_final_p 
	and	a.nr_seq_ordem			= b.nr_sequencia 
	and	to_char(a.nr_seq_estagio) 	in ('4','731','732','131','261') 
	and	a.nr_sequencia	= 
		(select min(x.nr_sequencia) 
		from 	man_ordem_serv_estagio x 
		where 	x.nr_seq_ordem 			= a.nr_seq_ordem 
		and 	to_char(x.nr_seq_estagio) 	in ('4','731','732','131')) 
	
union all
 
	select	a.nr_sequencia 
	from	man_ordem_servico_v a 
	where	a.ie_status_ordem		in ('1','2') 
	and	to_char(a.nr_seq_estagio)    in ('4','731','732','131', '261') 
	and 	coalesce(a.nr_seq_meta_pe::text, '') = '' 
	and	a.nr_seq_trab 			in (1,2)) 
and	trunc(obter_data_estagio_os(nr_sequencia,'D'), 'dd') is not null 
and	(nr_seq_grupo_des IS NOT NULL AND nr_seq_grupo_des::text <> '') 
and (nr_seq_grupo_des	= coalesce(nr_seq_grupo_p, nr_seq_grupo_des)) 
and	((coalesce(nm_usuario_ref_p::text, '') = '') or (Obter_Se_Usuario_Exec(nr_sequencia, nm_usuario_ref_p, 2) = 'S'));

 
C02 CURSOR FOR 
SELECT	a.nm_usuario_prev, 
	sum(a.qt_min_prev), 
	sum(a.qt_min_trab) 
from	usuario_grupo_des b, 
	(SELECT	nm_usuario_prev, 
		coalesce(qt_min_prev,0) qt_min_prev, 
		0 qt_min_trab 
	from	man_ordem_ativ_prev 
	where	nr_seq_ordem_serv	= nr_seq_ordem_w 
	
union all
 
	select	nm_usuario_exec nm_usuario_prev, 
		0, 
		coalesce(qt_minuto,0) 
	from	man_ordem_serv_ativ 
	where	nr_seq_ordem_serv	= nr_seq_ordem_w 
	and	trunc(DT_ATIVIDADE, 'dd') between dt_inicial_p and dt_final_p) a 
where	(a.nm_usuario_prev IS NOT NULL AND a.nm_usuario_prev::text <> '') 
and	a.nm_usuario_prev = b.nm_usuario_grupo 
group	by a.nm_usuario_prev;

 

BEGIN 
 
delete	from w_desempenho_func 
where	nm_usuario			= nm_usuario_p or dt_atualizacao < clock_timestamp() - (12/24);
 
delete	from w_desempenho_equipe 
where	nm_usuario			= nm_usuario_p or dt_atualizacao < clock_timestamp() - (12/24);
 
commit;
 
open c01;
loop 
fetch c01 into 
	nr_seq_ordem_w, 
	dt_ordem_w, 
	ie_status_ordem_w, 
	cd_funcao_w, 
	dt_entrada_des_w, 
	nr_seq_grupo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
 
	-- OBTER INFORMAÇÃOES DAS OSs COM ATIVIDADES REALIZADAS 
 
	select	coalesce(sum(qt_minuto),0) 
	into STRICT	QT_MIN_TRAB_w 
	from	usuario_grupo_des c,
		man_ordem_serv_ativ a 
	where	a.dt_atividade		between	dt_inicial_p and fim_dia(dt_final_p) 
	and	a.nm_usuario_exec	= c.nm_usuario_grupo 
	and	a.nr_seq_ordem_serv	= nr_seq_ordem_w;
	/*and	c.nr_seq_grupo		= nr_seq_grupo_w Felipe - 18/09/2008 - Comentei a restrição pelo grupo, 
	pois o correto é conta de todos que fizeram a OS e não somente da pessoa cadastrada no grupo*/
 
 
	qt_min_prev_w			:= 0;
	qt_os_prev_w			:= 0;
	qt_os_trab_w			:= 0;
	qt_min_trab_prev_w		:= 0;
	if (qt_min_trab_w > 0) then 
 
		qt_os_trab_w		:= 1;
 
		select	coalesce(sum(qt_min_prev),0) 
		into STRICT	qt_min_prev_w 
		from	man_ordem_ativ_prev 
		where	nr_seq_ordem_serv	= nr_seq_ordem_w;
 
		if (qt_min_prev_w > 0) then 
			qt_os_prev_w		:= 1;
			qt_min_trab_prev_w	:= QT_MIN_TRAB_w;
		end if;
 
	end if;
 
	select	count(*) 
	into STRICT	qt_solucao_def_w 
	from	man_ordem_serv_estagio 
	where	nr_seq_ordem		= nr_seq_ordem_w 
	and	ie_nivel_solucao	= 'SD';
 
	qt_os_sol_def_w				:= 0;
	qt_os_sol_def_dupla_w			:= 0;
	qt_min_trab_os_sol_def_w			:= 0;
	if (qt_solucao_def_w > 0) then 
		qt_os_sol_def_w			:= 1;
		qt_min_trab_os_sol_def_w		:= QT_MIN_TRAB_w;
		if (qt_solucao_def_w > 1) then 
			qt_os_sol_def_dupla_w	:= 1;
		end if;	
	end if;
 
	-- OBTER INFORMAÇÃOES DAS OSs RECEBIDAS 
	qt_ordem_rec_prev_w		:= 0;
	qt_ordem_rec_w			:= 0;
	QT_MIN_TRAB_REC_w		:= 0;
	if (dt_entrada_des_w between dt_inicial_p and dt_final_p) then 
 
		QT_MIN_TRAB_REC_w	:= qt_min_trab_w;
		qt_ordem_rec_w		:= 1;
 
		select	count(*) 
		into STRICT	cont_w 
		from	man_ordem_ativ_prev 
		where	nr_seq_ordem_serv	= nr_seq_ordem_w;
 
		if (cont_w > 0) then 
			qt_ordem_rec_prev_w	:= 1;
		end if;
 
	end if;
 
 
	-- OBTER INFORMAÇÃOES DAS OSs PENDENTES 
	qt_ordem_pend_w			:= 0;
	qt_ordem_pend_prev_w		:= 0;
	qt_min_trab_pend_w		:= 0;
	qt_min_pend_prev_w		:= 0;
	if (ie_status_ordem_w in ('1','2')) then 
 
		select	count(*) 
		into STRICT	cont_w 
		from	man_ordem_servico_v a 
		where	a.ie_status_ordem		in ('1','2') 
		and	to_char(a.nr_seq_estagio)    in ('4','731','732','131', '261') 
		and 	coalesce(a.nr_seq_meta_pe::text, '') = '' 
		and	a.nr_seq_trab 			in (1,2) 
		and	a.nr_sequencia			= nr_seq_ordem_w;
 
		if (cont_w > 0) then 
			qt_ordem_pend_w		:= 1;
 
			select	coalesce(sum(qt_min_prev),0) 
			into STRICT	qt_min_pend_prev_w 
			from	man_ordem_ativ_prev 
			where	nr_seq_ordem_serv	= nr_seq_ordem_w;
 
			if (qt_min_pend_prev_w > 0) then 
				qt_ordem_pend_prev_w	:= 1;
			end if;
 
			qt_min_trab_pend_w		:= QT_MIN_TRAB_w;
 
		end if;
	end if;
 
	select	nextval('w_desempenho_func_seq') 
	into STRICT	nr_sequencia_w 
	;
 
	insert into w_desempenho_equipe( 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		nr_seq_grupo_des, 
		nr_ordem_serv, 
		qt_ordem_rec, 
		qt_ordem_rec_prev, 
		qt_ordem_pend, 
		qt_ordem_pend_prev, 
		qt_os_prev, 
		qt_min_prev, 
		qt_os_trab, 
		qt_min_trab, 
		qt_os_sol_def, 
		qt_os_sol_def_dupla, 
		qt_min_trab_prev, 
		qt_min_trab_pend, 
		cd_funcao, 
		qt_min_trab_os_sol_def, 
		QT_MIN_TRAB_REC, 
		qt_min_pend_prev) 
	values (	nr_sequencia_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_seq_grupo_w, 
		nr_seq_ordem_w, 
		qt_ordem_rec_w, 
		qt_ordem_rec_prev_w, 
		qt_ordem_pend_w, 
		qt_ordem_pend_prev_w, 
		qt_os_prev_w, 
		qt_min_prev_w, 
		qt_os_trab_w, 
		qt_min_trab_w, 
		qt_os_sol_def_w, 
		qt_os_sol_def_dupla_w, 
		qt_min_trab_prev_w, 
		qt_min_trab_pend_w, 
		cd_funcao_w, 
		qt_min_trab_os_sol_def_w, 
		QT_MIN_TRAB_REC_w, 
		qt_min_pend_prev_w);
 
	open c02;
	loop 
	fetch c02 into 
		nm_usuario_ref_ww, 
		qt_min_prev_ww, 
		qt_min_trab_ww;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		qt_min_pend_prev_ww		:= 0;
		if (qt_min_pend_prev_w <> 0) then 
			qt_min_pend_prev_ww	:= qt_min_prev_ww;
		end if;
		insert into w_desempenho_func(nr_sequencia, 
			nm_usuario_ref, 
			dt_atualizacao, 
			nm_usuario, 
			qt_min_trab, 
			qt_min_prev, 
			qt_min_pend_prev) 
		values (nr_sequencia_w, 
			nm_usuario_ref_ww, 
			clock_timestamp(), 
			nm_usuario_p, 
			qt_min_trab_ww, 
			qt_min_prev_ww, 
			qt_min_pend_prev_ww);
	end loop;
	close c02;
 
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_w_desempenho_func ( cd_estabelecimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nr_seq_grupo_p bigint, nm_usuario_p text, nm_usuario_ref_p text) FROM PUBLIC;

