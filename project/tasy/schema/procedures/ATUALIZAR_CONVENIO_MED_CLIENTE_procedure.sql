-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_convenio_med_cliente (NR_SEQ_CLIENTE_P bigint, CD_CONVENIO_P bigint, CD_USUARIO_CONVENIO_P text, IE_ATUALIZA_DATA_P text, NR_SEQ_PLANO_P bigint) AS $body$
DECLARE



CD_CONVENIO_W				integer;
CD_USUARIO_CONVENIO_W		varchar(30);
NR_SEQ_PLANO_W			bigint;
NR_ATENDIMENTO_W			bigint;
DT_VALIDADE_W				timestamp;
DT_PRIMEIRA_CONSULTA_W		timestamp	:= NULL;


BEGIN

SELECT	coalesce(MAX(NR_ATENDIMENTO),0)
INTO STRICT	NR_ATENDIMENTO_W
FROM	MED_ATENDIMENTO
WHERE	NR_SEQ_CLIENTE	= NR_SEQ_CLIENTE_P;


SELECT	DT_PRIMEIRA_CONSULTA
INTO STRICT	DT_PRIMEIRA_CONSULTA_W
FROM	MED_CLIENTE
WHERE	NR_SEQUENCIA	= NR_SEQ_CLIENTE_P;

BEGIN
SELECT	DT_VALIDADE_CARTEIRA
INTO STRICT	DT_VALIDADE_W
FROM	MED_ATENDIMENTO
WHERE	NR_ATENDIMENTO	= NR_ATENDIMENTO_W;
EXCEPTION
	when others then
	DT_VALIDADE_W	:= NULL;
END;

SELECT	coalesce(MAX(CD_CONVENIO),0),
	coalesce(MAX(CD_USUARIO_CONVENIO),'0'),
	coalesce(MAX(NR_SEQ_PLANO),0)
INTO STRICT	CD_CONVENIO_W,
	CD_USUARIO_CONVENIO_W,
	NR_SEQ_PLANO_W
FROM	MED_CLIENTE
WHERE	NR_SEQUENCIA		= NR_SEQ_CLIENTE_P;

IF (CD_CONVENIO_P IS NOT NULL AND CD_CONVENIO_P::text <> '') AND (CD_CONVENIO_W <> CD_CONVENIO_P) THEN
	BEGIN
	UPDATE	MED_CLIENTE
	SET	CD_CONVENIO		= CD_CONVENIO_P
	WHERE	NR_SEQUENCIA		= NR_SEQ_CLIENTE_P;
	END;
END IF;

IF (CD_USUARIO_CONVENIO_P IS NOT NULL AND CD_USUARIO_CONVENIO_P::text <> '') AND (CD_USUARIO_CONVENIO_W <> CD_USUARIO_CONVENIO_P) THEN
	BEGIN
	UPDATE	MED_CLIENTE
	SET	CD_USUARIO_CONVENIO	= CD_USUARIO_CONVENIO_P
	WHERE	NR_SEQUENCIA		= NR_SEQ_CLIENTE_P;
	END;
END IF;

IF (DT_VALIDADE_W IS NOT NULL AND DT_VALIDADE_W::text <> '') THEN
	BEGIN
	UPDATE	MED_CLIENTE
	SET	DT_VALIDADE_CARTEIRA	= DT_VALIDADE_W
	WHERE	NR_SEQUENCIA		= NR_SEQ_CLIENTE_P;
	END;
END IF;

IF (NR_SEQ_PLANO_P IS NOT NULL AND NR_SEQ_PLANO_P::text <> '') AND (NR_SEQ_PLANO_W <> NR_SEQ_PLANO_P) THEN
	BEGIN
	UPDATE	MED_CLIENTE
	SET	NR_SEQ_PLANO		= NR_SEQ_PLANO_P
	WHERE	NR_SEQUENCIA		= NR_SEQ_CLIENTE_P;
	END;
END IF;

IF (coalesce(DT_PRIMEIRA_CONSULTA_W::text, '') = '') THEN
	begin
	if (IE_ATUALIZA_DATA_P = 'S') then
		begin
		UPDATE	MED_CLIENTE
		SET	DT_PRIMEIRA_CONSULTA	= TRUNC(clock_timestamp()),
			DT_ULTIMA_CONSULTA	= TRUNC(clock_timestamp())
		WHERE	NR_SEQUENCIA		= NR_SEQ_CLIENTE_P;
		end;
		end if;
	end;
ELSE
	begin
	if (IE_ATUALIZA_DATA_P = 'S') then
		begin
		UPDATE	MED_CLIENTE
		SET		DT_ULTIMA_CONSULTA	= TRUNC(clock_timestamp())
		WHERE		NR_SEQUENCIA		= NR_SEQ_CLIENTE_P;
		end;
	end if;
	end;
END IF;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_convenio_med_cliente (NR_SEQ_CLIENTE_P bigint, CD_CONVENIO_P bigint, CD_USUARIO_CONVENIO_P text, IE_ATUALIZA_DATA_P text, NR_SEQ_PLANO_P bigint) FROM PUBLIC;

