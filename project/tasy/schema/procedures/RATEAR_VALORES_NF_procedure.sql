-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ratear_valores_nf ( nr_sequencia_p bigint, nm_usuario_p text, cd_moeda_p bigint default null, vl_cotacao_p bigint default null) AS $body$
DECLARE


nr_ultimo_item_nf_w			integer	:= 0;
nr_item_nf_w				integer	:= 0;
vl_mercadoria_w                         		double precision	:= 0;
vl_descontos_w  				double precision	:= 0;
vl_descontos_item_w  			double precision	:= 0;
vl_descontos_total_w  			double precision	:= 0;
vl_frete_w				double precision	:= 0;
vl_frete_item_w				double precision	:= 0;
vl_frete_total_w  			    	double precision	:= 0;
vl_seguro_w 				double precision	:= 0;
vl_seguro_item_w 			  	double precision	:= 0;
vl_seguro_total_w 			    	double precision	:= 0;
vl_Desp_Aces_w                   			double precision	:= 0;
vl_Desp_Aces_item_w              		double precision	:= 0;
vl_Desp_Aces_total_w             		double precision	:= 0;
vl_liquido_item_nf_w 			double precision	:= 0;
vl_liquido_item_w				double precision	:= 0;
vl_tributo_w				double precision	:= 0;
vl_desconto_rateio_w			double precision 	:= 0;
vl_tributo_nf_w				double precision 	:= 0;
vl_tributo_Item_w				double precision 	:= 0;
vl_tributo_Total_w				double precision 	:= 0;
cd_tributo_w				smallint	:= 0;
vl_documento_w				double precision	:= 0;
cd_estabelecimento_w			smallint;
ie_despesa_acessoria_w			varchar(1);
ie_rateio_desc_item_w			varchar(1);
vl_liquido_item_sem_desc_w 		double precision	:= 0;
ie_desp_doc_w				funcao_param_usuario.vl_parametro%type;
vl_desp_doc_w				nota_fiscal.vl_despesa_doc%type;
VL_DESP_DOC_ITEM_W			nota_fiscal_item.vl_despesa_doc%type;
vl_Desp_doc_total_w			nota_fiscal_item.vl_despesa_doc%type;
vl_total_item_nf_w			nota_fiscal_item.vl_total_item_nf%type;

c01 CURSOR FOR
SELECT	nr_item_nf,
	vl_total_item_nf - coalesce(vl_desconto,0)
from	nota_fiscal_item
where	nr_sequencia 	= nr_sequencia_p
and	coalesce(vl_total_item_nf,0)	<> 0;

c03 CURSOR FOR
SELECT nr_item_nf,
	vl_total_item_nf - (vl_desconto + vl_desconto_rateio) + (vl_frete + vl_seguro + vl_despesa_acessoria + coalesce(vl_despesa_doc,0)),
	vl_total_item_nf - (vl_desconto) + (vl_frete + vl_seguro + vl_despesa_acessoria + coalesce(vl_despesa_doc,0))
from 	nota_fiscal_item
where	nr_sequencia 		= nr_sequencia_p
and	coalesce(vl_total_item_nf,0)	<> 0;


BEGIN

/* Obter os Totais a Ratear */

select coalesce(vl_mercadoria,0),
	coalesce(vl_descontos,0),
	coalesce(vl_frete,0),
	coalesce(vl_seguro,0),
	coalesce(vl_despesa_Acessoria,0),
	coalesce(vl_despesa_doc, 0),
	cd_estabelecimento
into STRICT 	vl_mercadoria_w,
	vl_descontos_w,
	vl_frete_w,
	vl_seguro_w,
	vl_Desp_Aces_w,
	vl_desp_doc_w,
	cd_estabelecimento_w
from 	nota_fiscal
where	nr_sequencia 	= nr_sequencia_p;

select	coalesce(obter_valor_param_usuario(40,126,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'S'),
	coalesce(obter_valor_param_usuario(40,410,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'N'),
	coalesce(obter_valor_param_usuario(40,507,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'N')
into STRICT	ie_despesa_acessoria_w,
	ie_rateio_desc_item_w,
	ie_desp_doc_w
;

if (ie_despesa_acessoria_w = 'N') then
	vl_Desp_Aces_w := 0;
end if;

/* Fabio 05/07/2004 Para buscar os valores da despesa adicional*/

select	coalesce(sum(vl_documento),0)
into STRICT	vl_documento_w
from	nota_fiscal_desp_adic
where	nr_seq_nf = nr_sequencia_p
and	coalesce(ie_rateia_valor_itens,'S') = 'S';

vl_frete_w	:= vl_frete_w + vl_documento_w;

/* Ratear Fretes, Descontos, Seguros e Desp Acessorias */

OPEN C01;
LOOP
FETCH c01 into
	nr_item_nf_w,
	vl_liquido_item_nf_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
      begin
	nr_ultimo_item_nf_w 		:= nr_item_nf_w;
	vl_descontos_item_w 		:= (vl_descontos_w / vl_mercadoria_w * vl_liquido_item_nf_w);
	vl_descontos_total_w 		:= vl_descontos_total_w + vl_descontos_item_w;
	vl_frete_item_w			:= (vl_frete_w / vl_mercadoria_w * vl_liquido_item_nf_w);
	vl_frete_total_w			:= vl_frete_total_w + vl_frete_item_w;
	vl_seguro_item_w			:= (vl_seguro_w / vl_mercadoria_w * vl_liquido_item_nf_w);
	vl_seguro_total_w			:= vl_seguro_total_w + vl_seguro_item_w;
	vl_Desp_Aces_item_w		:= (vl_Desp_Aces_w / vl_mercadoria_w * vl_liquido_item_nf_w);
	vl_Desp_Aces_total_w		:= vl_Desp_Aces_total_w + vl_Desp_Aces_item_w;
	vl_Desp_doc_item_w		:= (vl_Desp_doc_w / vl_mercadoria_w * vl_liquido_item_nf_w);
	vl_Desp_doc_total_w		:= coalesce(vl_Desp_doc_total_w, 0) + vl_Desp_doc_item_w;
	
	if (philips_param_pck.get_cd_pais = 2) then
	
		update  nota_fiscal_item
		set    	vl_desconto		= coalesce(vl_desconto,0),
			vl_frete          		= vl_frete_item_w,
			vl_seguro         		= vl_seguro_item_w,
			vl_Despesa_Acessoria		= vl_Desp_Aces_item_w
		where	nr_sequencia		= nr_sequencia_p
		and	nr_item_nf		= nr_item_nf_w;
		
		
	else
		update  nota_fiscal_item
		set 	vl_desconto_rateio	= coalesce(vl_descontos_item_w,0),
			vl_desconto		= coalesce(vl_desconto,0),
			vl_frete          		= vl_frete_item_w,
			vl_seguro         		= vl_seguro_item_w,
			vl_Despesa_Acessoria		= vl_Desp_Aces_item_w
		where	nr_sequencia		= nr_sequencia_p
		and	nr_item_nf		= nr_item_nf_w;
		
		if (ie_desp_doc_w = 'S') then
			update  nota_fiscal_item
			set	vl_despesa_doc		= vl_Desp_doc_item_w
			where	nr_sequencia		= nr_sequencia_p
			and	nr_item_nf		= nr_item_nf_w;
		end if;
	
	
	end if;

	end;
END LOOP;
CLOSE C01;

/* Alocar a Diferenca de arredondamento no Ultimo item do Rateio */

if (nr_ultimo_item_nf_w <> 0) then

       if (philips_param_pck.get_cd_pais = 2) then
		update nota_fiscal_item
		set	vl_frete           		= vl_frete + (vl_frete_w - vl_frete_total_w),
			vl_seguro           		= vl_seguro + (vl_seguro_w - vl_seguro_total_w),
			vl_despesa_acessoria		= vl_Despesa_Acessoria + (vl_Desp_Aces_w - vl_Desp_Aces_total_w)
		where	nr_sequencia	 		= nr_sequencia_p
		and	nr_item_nf         		= nr_item_nf_w;
		
	else
		update  nota_fiscal_item
		set 	vl_desconto_rateio		= coalesce(vl_desconto_rateio + (vl_descontos_w - vl_descontos_total_w),0),
			vl_frete           		= vl_frete + (vl_frete_w - vl_frete_total_w),
			vl_seguro           		= vl_seguro + (vl_seguro_w - vl_seguro_total_w),
			vl_despesa_acessoria	= vl_Despesa_Acessoria + (vl_Desp_Aces_w - vl_Desp_Aces_total_w)
		where	nr_sequencia	 	= nr_sequencia_p
		and	nr_item_nf         		= nr_item_nf_w;

		if (ie_desp_doc_w = 'S') then
			update  nota_fiscal_item
			set 	vl_despesa_doc	= coalesce(vl_despesa_doc,0) + (vl_desp_doc_w - vl_Desp_doc_total_w)
			where	nr_sequencia	 	= nr_sequencia_p
			and	nr_item_nf         		= nr_item_nf_w;
		end if;
	end if;
end if;

/* Calcular o Valor Liquido */

OPEN C03;
LOOP
FETCH c03 into
	nr_item_nf_w,
	vl_liquido_item_nf_w,
	vl_liquido_item_sem_desc_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
      begin
	select	coalesce(sum(CASE WHEN b.ie_soma_diminui='S' THEN a.vl_tributo WHEN b.ie_soma_diminui='D' THEN a.vl_tributo * -1  ELSE 0 END ),0)
	into STRICT	vl_tributo_item_w
	from	Tributo b,
		nota_fiscal_item_trib a
	where	a.nr_sequencia		= nr_sequencia_p
	and	a.nr_item_nf		= nr_item_nf_w
	and	a.cd_tributo		= b.cd_tributo;

	if (philips_param_pck.get_cd_pais = 2)  then
	
		if (cd_moeda_p IS NOT NULL AND cd_moeda_p::text <> '') and (coalesce(vl_cotacao_p,0) > 0) then		
			update 	nota_fiscal_item
			set 	vl_liquido   		= vl_liquido_item_sem_desc_w + vl_tributo_item_w,
				vl_total_estrangeiro	= ((vl_liquido_item_sem_desc_w + vl_tributo_item_w) / vl_cotacao_p)
			where	nr_sequencia		= nr_sequencia_p
			and	nr_item_nf		= nr_item_nf_w;
		else
			update 	nota_fiscal_item
			set 	vl_liquido   		= vl_liquido_item_sem_desc_w + vl_tributo_item_w
			where	nr_sequencia		= nr_sequencia_p
			and	nr_item_nf		= nr_item_nf_w;
		end if;		
	else
		update nota_fiscal_item
		set 	vl_liquido   		= vl_liquido_item_nf_w + vl_tributo_item_w
		where	nr_sequencia		= nr_sequencia_p
		and	nr_item_nf		= nr_item_nf_w;
	end if;
	
	if (ie_rateio_desc_item_w = 'S') then
		begin
		
		if (philips_param_pck.get_cd_pais = 2)  then
			update nota_fiscal_item
			set 	vl_desconto		= vl_total_item_nf - vl_liquido_item_sem_desc_w
			where	nr_sequencia		= nr_sequencia_p
			and	nr_item_nf		= nr_item_nf_w;
		else
			select 	vl_total_item_nf
			into STRICT 	vl_total_item_nf_w
			from 	nota_fiscal_item
			where 	nr_sequencia = nr_sequencia_p
			and	nr_item_nf		= nr_item_nf_w;
			
			if (vl_liquido_item_nf_w < vl_total_item_nf_w) then
				update nota_fiscal_item
				set 	vl_desconto		= vl_total_item_nf - vl_liquido_item_nf_w
				where	nr_sequencia		= nr_sequencia_p
				and	nr_item_nf		= nr_item_nf_w;
			end if;
		end if;
		
		end;
	end if;
	
	end;
END LOOP;
CLOSE C03;

CALL ratear_Item_nf_Rateio(nr_sequencia_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ratear_valores_nf ( nr_sequencia_p bigint, nm_usuario_p text, cd_moeda_p bigint default null, vl_cotacao_p bigint default null) FROM PUBLIC;

