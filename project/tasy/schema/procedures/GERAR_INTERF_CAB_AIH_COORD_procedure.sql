-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_interf_cab_aih_coord ( dt_inicial_p timestamp , dt_final_p timestamp , cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w			bigint;
qt_aih_protocolo_w			integer		:= 0;
qt_aih_lote_w			smallint		:= 0;
dt_mesano_apres_w		timestamp;
nr_seq_aih_prot_w			smallint		:= 0;
nr_seq_lote_w			bigint	:= 1;
cd_orgao_emissor_w		varchar(10);
cd_orgao_emissor_aih_w		varchar(10);
cd_cnes_hospital_w		varchar(7);
cd_mun_ibge_hosp_w		varchar(6);
nr_aih_w				bigint;
ie_identificacao_aih_w		varchar(2);
cd_especialidade_aih_w		smallint;
nr_interno_conta_w			bigint;
nm_paciente_w			varchar(60);
qt_contador_pb_w			bigint;


/* Obter AIH's do período*/

c01 CURSOR FOR
	SELECT	b.nr_aih,
		b.ie_identificacao_aih,
		b.cd_especialidade_aih,
		max(a.nr_interno_conta),
		coalesce(cd_orgao_emissor_aih, cd_orgao_emissor_w),
		obter_pessoa_atendimento(a.nr_atendimento,'C')
	from	sus_aih_unif	b,
		conta_paciente	a
	where	a.nr_interno_conta	= b.nr_interno_conta
	and	a.ie_status_acerto	= 2
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and	b.dt_final between dt_inicial_p and dt_final_p
	group by	b.nr_aih,
		b.ie_identificacao_aih,
		b.cd_especialidade_aih,
		coalesce(cd_orgao_emissor_aih, cd_orgao_emissor_w),
		obter_pessoa_atendimento(a.nr_atendimento,'C');

c02 CURSOR FOR
	SELECT	a.nr_interno_conta
	from	sus_aih_unif	b,
		conta_paciente	a
	where	a.nr_interno_conta	= b.nr_interno_conta
	and	a.ie_status_acerto	= 2
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and	b.dt_final between dt_inicial_p and dt_final_p;


BEGIN
qt_contador_pb_w := 0;
--gravar_processo_longo('Exportar dados SUS Coord' ,'GERAR_INTERF_CAB_AIH_COORD',qt_contador_pb_w);
CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(306691) ,'GERAR_INTERF_CAB_AIH_COORD',qt_contador_pb_w);

open c02;
loop
fetch c02 into
	nr_interno_conta_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	/* Limpar tabelas transitórias */

	delete	from w_susaih_interf_cab_coord
	where	nr_interno_conta = nr_interno_conta_w;
	delete	from w_susaih_interf_cab
	where	nr_interno_conta = nr_interno_conta_w;
	delete	from w_susaih_interf_conta
	where 	nr_interno_conta = nr_interno_conta_w;
	delete	from w_susaih_interf_item
	where 	nr_interno_conta = nr_interno_conta_w;
	delete	from w_susaih_interf_regcivil
	where 	nr_interno_conta = nr_interno_conta_w;
	delete	from w_susaih_interf_opm
	where 	nr_interno_conta = nr_interno_conta_w;
	end;
end loop;
commit;
close c02;

/* Obter quantidade de contas do protocolo */

select	count(distinct b.nr_aih)
into STRICT	qt_aih_protocolo_w
from	sus_aih_unif	b,
	conta_paciente	a
where	a.nr_interno_conta	= b.nr_interno_conta
and	a.ie_status_acerto	= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	b.dt_final between dt_inicial_p and dt_final_p;

/* Dados do protocolo*/

select	PKG_DATE_UTILS.ADD_MONTH(dt_final_p,1,0)
into STRICT	dt_mesano_apres_w
;

/* Obter dados dos parametros da AIH*/

begin
if	((coalesce(sus_parametros_aih_pck.get_cd_estabelecimento,0) <> cd_estabelecimento_p) or (coalesce(sus_parametros_aih_pck.get_dt_atualizacao,clock_timestamp()) > coalesce(sus_parametros_aih_pck.get_dt_geracao,clock_timestamp()))) then
	begin
	CALL gerar_sus_parametros_aih_pck(cd_estabelecimento_p);

	cd_orgao_emissor_w	:= sus_parametros_aih_pck.get_cd_orgao_emissor_aih;
	cd_cnes_hospital_w	:= sus_parametros_aih_pck.get_cd_cnes_hospital;
	cd_mun_ibge_hosp_w	:= sus_parametros_aih_pck.get_cd_municipio_ibge;

	end;
else
	begin
	cd_orgao_emissor_w	:= sus_parametros_aih_pck.get_cd_orgao_emissor_aih;
	cd_cnes_hospital_w	:= sus_parametros_aih_pck.get_cd_cnes_hospital;
	cd_mun_ibge_hosp_w	:= sus_parametros_aih_pck.get_cd_municipio_ibge;
	end;
end if;
exception
when others then
	--r.aise_application_error(-20011,'Erro ao obter os parâmetros da AIH.'||'#@#@');
	CALL wheb_mensagem_pck.exibir_mensagem_abort(263366);
end;

/* Atualizar o Órgaão Emissor nas AIH's */

CALL baca_atualiza_org_em_aih_coord(dt_inicial_p,dt_final_p);

open c01;
loop
fetch c01 into
	nr_aih_w,
	ie_identificacao_aih_w,
	cd_especialidade_aih_w,
	nr_interno_conta_w,
	cd_orgao_emissor_aih_w,
	nm_paciente_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	qt_contador_pb_w	:= qt_contador_pb_w + 1;
	CALL gravar_processo_longo(nm_paciente_w ||' - '||nr_interno_conta_w,'GERAR_INTERF_CAB_AIH_COORD',qt_contador_pb_w);
	nr_seq_aih_prot_w	:= nr_seq_aih_prot_w + 1;
	/* qt_aih_lote_w		:= qt_aih_lote_w + 1; */

	/* Obter a sequence da tabela*/

	select	nextval('w_susaih_interf_cab_seq')
	into STRICT	nr_sequencia_w
	;

	insert into w_susaih_interf_cab(	nr_sequencia,
			cd_estabelecimento,
			nr_seq_protocolo,
			qt_aih_protocolo,
			dt_mesano_apres,
			nr_seq_aih_prot,
			cd_orgao_emissor_aih,
			cd_cnes_hospital,
			cd_mun_ibge_hosp,
			nr_aih,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ie_identificacao_aih,
			ie_especialidade_aih,
			nr_interno_conta,
			nr_seq_lote)
	values (	nr_sequencia_w,
			cd_estabelecimento_p,
			null,
			qt_aih_protocolo_w,
			dt_mesano_apres_w,
			nr_seq_aih_prot_w,
			cd_orgao_emissor_aih_w,
			cd_cnes_hospital_w,
			cd_mun_ibge_hosp_w,
			nr_aih_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			ie_identificacao_aih_w,
			cd_especialidade_aih_w,
			nr_interno_conta_w,
			nr_seq_lote_w);

	insert into w_susaih_interf_cab_coord(	nr_sequencia,
			nr_interno_conta,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_aih,
			dt_inicial,
			dt_final,
			dt_mesano_apres,
			dt_envio_coord,
			nm_usuario_envio)
	values (	nextval('w_susaih_interf_cab_coord_seq'),
			nr_interno_conta_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_aih_w,
			dt_inicial_p,
			dt_final_p,
			dt_mesano_apres_w,
			clock_timestamp(),
			nm_usuario_p);

	CALL gerar_interf_item_susaih(nr_interno_conta_w, nm_usuario_p);
	CALL gerar_interf_conta_susaih(nr_interno_conta_w, nm_usuario_p);
	CALL gerar_interf_regcivil_susaih(nr_interno_conta_w, nm_usuario_p);
	CALL gerar_interf_opm_susaih(nr_interno_conta_w, nm_usuario_p);

	end;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_interf_cab_aih_coord ( dt_inicial_p timestamp , dt_final_p timestamp , cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

