-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_paciente_uti ( dt_parametro_P timestamp, nm_usuario_p text) AS $body$
DECLARE



nr_sequencia_w		bigint;
nr_sequencia_log_w		bigint;
cd_estabelecimento_w		smallint     := 1;
cd_setor_atendimento_w	integer;
nr_atendimento_w		bigint;
ie_sexo_w			varchar(1);
qt_idade_w			smallint;		
qt_cirurgia_eletiva_w	smallint;
qt_cirurgia_Urgencia_w	smallint;
qt_obito_w			smallint;
dt_entrada_w			timestamp;
dt_saida_w			timestamp;
qt_min_perm_w			integer;
qt_apache_w			double precision;
pr_risco_w			double precision;

dt_parametro_w		timestamp;
dt_parametro_fim_w		timestamp;

C01 CURSOR FOR
SELECT  t.nr_atendimento,
	coalesce(p.ie_sexo,'I'),
	obter_idade(p.dt_nascimento, t.dt_alta,'A') qt_idade,
	CASE WHEN m.ie_obito='S' THEN 1  ELSE 0 END  qt_obito	
from	Pessoa_fisica p,
	motivo_alta m,
	Atendimento_paciente t
where	dt_alta_interno between dt_parametro_w and dt_parametro_fim_w
  and	t.cd_pessoa_fisica	= p.cd_pessoa_fisica
  and	t.cd_motivo_alta	= m.cd_motivo_alta
  and	exists (SELECT 1
	from    Setor_atendimento b,
		atend_paciente_unidade a
	where   a.nr_atendimento        = t.nr_atendimento
	  and   a.cd_setor_atendimento  = b.cd_setor_atendimento
	  and   b.cd_classif_setor = 4);

 
C02 CURSOR FOR
 	SELECT	dt_entrada_unidade,
		dt_saida_unidade,
		a.cd_setor_atendimento
         from	Setor_atendimento b,
		atend_paciente_unidade a
         where	a.nr_atendimento        = nr_atendimento_w
           and	a.cd_setor_atendimento  = b.cd_setor_atendimento
           and	b.cd_classif_setor = 4;



BEGIN
nr_sequencia_log_w := Gravar_Log_Indicador(51, wheb_mensagem_pck.get_texto(802112), clock_timestamp(), trunc(dt_parametro_p), nm_usuario_p, nr_sequencia_log_w);


Insert into log_mov(dt_atualizacao,nm_usuario,ds_log,cd_log) values (clock_timestamp(), 'Tasy', wheb_mensagem_pck.get_texto(802112), 601);
commit;

dt_parametro_w		:=  trunc(dt_parametro_p,'month');
dt_parametro_fim_w	:= last_day(Trunc(dt_parametro_p,'month')) + 86399/86400;

delete from eis_paciente_uti
where dt_referencia	= dt_parametro_w;
COMMIT;


OPEN C01;
LOOP
FETCH C01 into
	nr_atendimento_w,
	ie_sexo_w,
	qt_idade_w,
	qt_obito_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	max(qt_apache_ii),
		max(pr_risco)
	into STRICT	qt_apache_w,
		pr_risco_w
	from	apache
	where	nr_sequencia	=
		(SELECT min(nr_sequencia)
		from apache
		where nr_atendimento	= nr_atendimento_w);
	select	coalesce(sum(CASE WHEN coalesce(ie_carater_cirurgia,'E')='E' THEN 1  ELSE 0 END ),0),
		coalesce(sum(CASE WHEN coalesce(ie_carater_cirurgia,'E')='U' THEN 1  ELSE 0 END ),0)
	into STRICT	qt_cirurgia_eletiva_w,
		qt_cirurgia_urgencia_w
	from	cirurgia
	where	nr_atendimento	= nr_atendimento_w;

	OPEN C02;
	LOOP
	FETCH C02 into
			dt_entrada_w,
			dt_saida_w,
			cd_setor_atendimento_w;
 	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		select	nextval('eis_paciente_uti_seq')
		into STRICT	nr_sequencia_w
		;
		qt_min_perm_w	:= (dt_saida_w - dt_entrada_w) * 1440;
		insert into eis_paciente_uti(
			dt_referencia, nr_sequencia, cd_setor_atendimento,
			dt_atualizacao, nm_usuario, nr_atendimento,
			ie_sexo, qt_idade, qt_obito,
			qt_cirurgia_eletiva, qt_cirurgia_urgencia,
			dt_entrada, dt_saida, qt_min_perm,
			qt_apache, pr_risco)
		values (
			dt_parametro_w, nr_sequencia_w, cd_setor_atendimento_w,
			clock_timestamp(), nm_usuario_p, nr_atendimento_w,
			ie_sexo_w, qt_idade_w, qt_obito_w, 
			qt_cirurgia_eletiva_w, qt_cirurgia_urgencia_w,
			dt_entrada_w, dt_saida_w, qt_min_perm_w,
			qt_apache_w, pr_risco_w);
		end;
	END LOOP;
	CLOSE C02;
	end;
END LOOP;
CLOSE C01;

CALL Atualizar_Log_Indicador(clock_timestamp(), nr_sequencia_log_w);

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_paciente_uti ( dt_parametro_P timestamp, nm_usuario_p text) FROM PUBLIC;

