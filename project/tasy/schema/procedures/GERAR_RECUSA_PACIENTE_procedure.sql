-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_recusa_paciente (nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_horario_p bigint, cd_item_p bigint, nm_usuario_p text, ds_observacao_p text, ie_tipo_item_p text, nr_seq_processo_p bigint default null, nr_seq_assinatura_p bigint default null, nr_seq_motivo_p bigint default null, nr_seq_motivo_susp_p bigint default null, nr_seq_solucao_p bigint default 0, dt_evento_p timestamp default null) AS $body$
DECLARE

		
nr_prescricao_w			bigint;
nr_seq_horario_w		bigint;
nr_seq_processo_w		bigint;
nr_seq_material_w		bigint;
nr_seq_map_w			bigint;
dt_horario_w			timestamp;
ds_item_w				varchar(255);
qt_dose_w				double precision;
qt_itens_proc_pend_w	bigint;
nr_seq_horario_ww		bigint;
cd_material_w			bigint;
cd_intervalo_w			varchar(50);
cd_estabelecimento_w	integer;
ie_regra_lanc_conta_w	varchar(20);
cd_evolucao_w			bigint;
ie_tipo_motivo_w		varchar(1)	:= 'T';
nr_sequencia_w			bigint;
ie_acm_sn_w				varchar(1);
nr_seq_alteracao_w		prescr_mat_alteracao.nr_sequencia%type;
nr_seq_alteracao_comp_w prescr_mat_alteracao_comp.nr_sequencia%type;
dt_atual_w				timestamp;
ie_gerou_evento_w       varchar(1) := 'N';
ie_gerar_evolucao_emar_w varchar(1);
nr_seq_mat_compl_w bigint;

c01 CURSOR FOR
SELECT	a.nr_prescricao,
		a.nr_sequencia,
		a.nr_seq_material,
		obter_se_acm_sn(c.ie_acm, c.ie_se_necessario)
from	prescr_mat_hor a,
		prescr_material c,
		prescr_medica b
where	a.nr_prescricao	= c.nr_prescricao
and		c.nr_sequencia	= a.nr_seq_material
and		b.nr_prescricao	= c.nr_prescricao
and		b.nr_atendimento = nr_atendimento_p
and		a.nr_sequencia	<> nr_seq_horario_ww
and		a.cd_material	= cd_material_w
and		c.cd_intervalo	= cd_intervalo_w
and		c.qt_dose		= qt_dose_w
and		a.dt_horario	= dt_horario_w
and		coalesce(a.dt_suspensao::text, '') = ''
and		coalesce(a.dt_fim_horario::text, '') = ''
and		nr_seq_solucao_p = 0;

c02 CURSOR FOR
SELECT	a.nr_sequencia,
		a.nr_prescricao,
		obter_se_acm_sn(x.ie_acm, x.ie_se_necessario)
from	pe_prescr_proc x,
		pe_prescr_proc_hor c,
		pe_prescricao a
where	x.nr_seq_prescr		= c.nr_seq_pe_prescr
and		x.nr_sequencia		= c.nr_seq_pe_proc
and		x.nr_seq_prescr		= a.nr_sequencia
and		c.nr_seq_pe_prescr	= a.nr_sequencia
and		a.nr_atendimento 	= nr_atendimento_p
and		c.nr_sequencia 		<> nr_seq_horario_ww
and		x.nr_seq_proc		= cd_item_p
and		c.dt_horario		= dt_horario_w
and		x.cd_intervalo		= cd_intervalo_w
and		x.qt_intervencao	= qt_dose_w
and		coalesce(x.ie_suspenso,'N') = 'N'
and		coalesce(c.dt_fim_horario::text, '') = ''
and		coalesce(c.dt_suspensao::text, '') = '';

c03 CURSOR FOR
SELECT	a.nr_sequencia,
		a.cd_material,
		a.nr_prescricao,
		obter_se_acm_sn(b.ie_acm, b.ie_se_necessario)
from	prescr_mat_hor a,
		prescr_material b
where	a.nr_prescricao 	= b.nr_prescricao
and		a.nr_seq_material 	= b.nr_sequencia
and		coalesce(a.dt_suspensao::text, '') = ''
and		coalesce(a.dt_fim_horario::text, '') = ''
and		a.nr_seq_processo	= nr_seq_processo_p
and		nr_seq_processo_p	> 0

union

select	a.nr_sequencia,
		a.cd_material,
		a.nr_prescricao,
		obter_se_acm_sn(b.ie_acm, b.ie_se_necessario)
from	prescr_mat_hor a,
		prescr_material b
where	a.nr_prescricao		= b.nr_prescricao
and		a.nr_seq_material 	= b.nr_sequencia
and		coalesce(a.dt_suspensao::text, '') = ''
and		coalesce(a.dt_fim_horario::text, '') = ''
and		coalesce(nr_seq_processo_p,0) = 0
and		nr_seq_horario_p	> 0
and		a.nr_sequencia		= nr_seq_horario_p
and		coalesce(ie_tipo_item_p,'M') <> 'E'

union

select	c.nr_sequencia,
		cd_item_p,
		nr_prescricao_p,
		obter_se_acm_sn(a.ie_acm, a.ie_se_necessario)		
from	pe_prescr_proc_hor c,
		pe_prescr_proc a
where	a.nr_seq_prescr		= c.nr_seq_pe_prescr
and		a.nr_sequencia		= c.nr_seq_pe_proc
and		c.nr_sequencia = nr_seq_horario_p
and		coalesce(ie_tipo_item_p,'M') = 'E'
and		coalesce(nr_seq_processo_p,0) = 0
and		nr_seq_horario_p	> 0;

/*cursor c04 is
select 	nr_sequencia,
		cd_material,
		nr_seq_material
from 	prescr_mat_hor			
where 	nr_seq_superior 	= nr_seq_material_w
and 	nr_prescricao 	= nr_prescricao_w
and 	dt_horario 	= dt_horario_w
and 	ie_agrupador 	= 2;*/
BEGIN

dt_atual_w	:= clock_timestamp();

if	(nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '' AND nr_seq_horario_p IS NOT NULL AND nr_seq_horario_p::text <> '') or (nr_seq_processo_p > 0) then
	
	if ((coalesce(nr_seq_motivo_p, nr_seq_motivo_susp_p) IS NOT NULL AND (coalesce(nr_seq_motivo_p, nr_seq_motivo_susp_p))::text <> '')) then
		select	max(ie_opcao)
		into STRICT	ie_tipo_motivo_w
		from	motivo_suspensao_prescr
		where	nr_sequencia = coalesce(nr_seq_motivo_p, nr_seq_motivo_susp_p);
	end if;
	
	open C03;
	loop
	fetch C03 into	
		nr_seq_horario_ww,
		cd_material_w,
		nr_prescricao_w,
		ie_acm_sn_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
	
		if (coalesce(ie_tipo_item_p,'M') in ('IAH', 'M', 'S')) then
		
			select	max(cd_estabelecimento)
			into STRICT	cd_estabelecimento_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_w;
			
			if (ie_tipo_motivo_w <> 'N') then
				-- Caso nao tenha motivo de recusa ou o tipo do motivo nao for tipo for 'Recusa adm administrado'
				update	prescr_mat_hor
				set		dt_recusa 		= dt_atual_w,
						nm_usuario 		= nm_usuario_p,
						dt_atualizacao	= dt_atual_w
				where	nr_sequencia	= nr_seq_horario_ww;
			else
				-- Caso tenha motivo de recusa e o tipo for 'Recusa adm administrado'
				update	prescr_mat_hor
				set		dt_recusa 		= dt_atual_w,
						dt_fim_horario 	= dt_atual_w,
						nm_usuario 		= nm_usuario_p,
						dt_atualizacao	= dt_atual_w
				where	nr_sequencia	= nr_seq_horario_ww;			
			end if;
					
			if (coalesce(nr_seq_solucao_p, 0) > 0) then
				if (ie_gerou_evento_w = 'N') then
						
					select	nextval('prescr_solucao_evento_seq')
					into STRICT	nr_sequencia_w
					;

					insert into prescr_solucao_evento(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_prescricao,
						nr_seq_solucao,
						nr_seq_material,
						nr_seq_procedimento,
						nr_seq_nut,
						nr_seq_nut_neo,
						ie_forma_infusao,
						ie_tipo_dosagem,
						qt_dosagem,
						qt_vol_infundido,
						qt_vol_desprezado,
						cd_pessoa_fisica,
						ie_alteracao,
						dt_alteracao,
						ie_evento_valido,
						nr_seq_motivo,
						ds_observacao,
						ie_tipo_solucao,
						DT_APRAZAMENTO,
						nr_etapa_evento,
						nr_seq_lote,
						nr_seq_motivo_susp
						)
					values (
						nr_sequencia_w,
						dt_atual_w,
						nm_usuario_p,
						dt_atual_w,
						nm_usuario_p,
						nr_prescricao_p,
						nr_seq_solucao_p,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						obter_dados_usuario_opcao(nm_usuario_p, 'C'),
						52,
						dt_atual_w,
						'S',
						nr_seq_motivo_p,
						ds_observacao_p,
						1,
						null,
						null,
						null,
						nr_seq_motivo_susp_p);
						
						ie_gerou_evento_w := 'S';

				end if;
			else
			
				select	max(nr_seq_material)
				into STRICT	nr_seq_material_w					
				from	prescr_mat_hor
				where	nr_sequencia = nr_seq_horario_ww;
								
				SELECT	nextval('prescr_mat_alteracao_seq')
				INTO STRICT	nr_seq_alteracao_w
				;
				
				insert into prescr_mat_alteracao(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_prescricao,
					dt_alteracao,
					cd_pessoa_fisica,
					ie_alteracao,
					ds_justificativa,
					ie_tipo_item,
					nr_atendimento,
					cd_item,
					nr_seq_horario,
					ds_observacao,
					nr_seq_prescricao,
					nr_seq_assinatura,
					nr_seq_motivo_susp,
					ie_acm_sn)
				values (
					nr_seq_alteracao_w,
					dt_atual_w,
					nm_usuario_p,
					dt_atual_w,
					nm_usuario_p,
					nr_prescricao_w,
					dt_atual_w,
					obter_dados_usuario_opcao(nm_usuario_p,'C'),
					38,
					wheb_mensagem_pck.get_texto(519061), --'Recusa do paciente',
					coalesce(ie_tipo_item_p,'M'),
					nr_atendimento_p,
					cd_material_w,
					nr_seq_horario_ww,
					ds_observacao_p,
					nr_seq_material_w,
					nr_seq_assinatura_p,
					coalesce(nr_seq_motivo_p, nr_seq_motivo_susp_p),
					ie_acm_sn_w);
			
			end if;
				
			select	max(b.dt_horario),
					max(a.cd_intervalo),
					max(a.qt_dose)
			into STRICT	dt_horario_w,
					cd_intervalo_w,
					qt_dose_w
			from	prescr_mat_hor b,
					prescr_material a
			where	b.nr_sequencia	= nr_seq_horario_ww
			and		a.nr_prescricao = b.nr_prescricao
			and		a.nr_sequencia  = b.nr_seq_material;
	
			if (ie_tipo_motivo_w = 'N') then	
				nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_ww, null, 'G', coalesce(dt_evento_p,dt_atual_w), nm_usuario_p, nr_seq_map_w, null, null, null);	
			end if;
			
			/* Associados  */
			
			/*open C04;
			loop
			fetch C04 into
				nr_seq_horario_w,
				cd_material_w,
				nr_seq_material_w;			
			exit when C04%notfound;			
				insert into prescr_mat_alteracao(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_prescricao,
					dt_alteracao,
					cd_pessoa_fisica,
					ie_alteracao,
					ds_justificativa,
					ie_tipo_item,
					nr_atendimento,
					cd_item,
					nr_seq_horario,
					ds_observacao,
					nr_seq_prescricao,
					nr_seq_assinatura,
					nr_seq_motivo_susp)
				values	(
					prescr_mat_alteracao_seq.nextval,
					dt_atual_w,
					nm_usuario_p,
					dt_atual_w,
					nm_usuario_p,
					nr_prescricao_w,
					dt_atual_w,
					obter_dados_usuario_opcao(nm_usuario_p,'C'),
					38,
					'Recusa do paciente',
					'MAT',
					nr_atendimento_p,
					cd_material_w,
					nr_seq_horario_w,
					ds_observacao_p,
					nr_seq_material_w,
					nr_seq_assinatura_p,
					nr_seq_motivo_p);
					
				update 	prescr_mat_hor
				set 	dt_recusa 	= dt_atual_w						
				where 	nr_sequencia 	= nr_seq_horario_w;				
			end loop;
			close C04;*/
			update 	prescr_mat_hor
			set 	dt_recusa 	= dt_atual_w,
					nm_usuario 		= nm_usuario_p,
					dt_atualizacao	= dt_atual_w									
			where 	nr_seq_superior 	= nr_seq_material_w
			and 	nr_prescricao 	= nr_prescricao_w
			and 	dt_horario 	= dt_horario_w
			and 	ie_agrupador 	in (2,3,7,9);
			
			/* *************************************************** */

						
			open C01;
			loop
			fetch C01 into	
				nr_prescricao_w,
				nr_seq_horario_w,
				nr_seq_material_w,
				ie_acm_sn_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
			
				update	prescr_mat_hor
				set		dt_suspensao 	= dt_atual_w,
						nm_usuario_susp	= nm_usuario_p
				where	nr_sequencia	= nr_seq_horario_w;
				
				update 	prescr_mat_hor
				set 	dt_suspensao 	= dt_atual_w,
						nm_usuario_susp	= nm_usuario_p						
				where 	nr_seq_superior 	= nr_seq_material_w
				and 	nr_prescricao 	= nr_prescricao_w
				and 	dt_horario 	= dt_horario_w
				and 	ie_agrupador 	in (2,3,7,9);
				
				insert into prescr_mat_alteracao(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_prescricao,
					dt_alteracao,
					cd_pessoa_fisica,
					ie_alteracao,
					ds_justificativa,
					ie_tipo_item,
					nr_atendimento,
					cd_item,
					nr_seq_horario,
					ds_observacao,
					nr_seq_prescricao,
					nr_seq_assinatura,
					ie_acm_sn)
				values (
					nextval('prescr_mat_alteracao_seq'),
					dt_atual_w,
					nm_usuario_p,
					dt_atual_w,
					nm_usuario_p,
					nr_prescricao_w,
					dt_atual_w,
					obter_dados_usuario_opcao(nm_usuario_p,'C'),
					5,
					wheb_mensagem_pck.get_texto(519144), --'Suspensao do item por duplicidade a partir da recusa do paciente',
					coalesce(ie_tipo_item_p,'M'),
					nr_atendimento_p,
					cd_material_w,
					nr_seq_horario_w,
					ds_observacao_p,
					nr_seq_material_w,
					nr_seq_assinatura_p,
					ie_acm_sn_w);
			end loop;
			close C01;
			
			ie_regra_lanc_conta_w	:= obter_regra_lanc_conta_adep(cd_estabelecimento_w, Obter_perfil_ativo, nm_usuario_p, 'CG');
						
			if (ie_regra_lanc_conta_w <> 'N') then
				if (ie_regra_lanc_conta_w = 'S') then
					nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_w, null, 'G', coalesce(dt_evento_p,dt_atual_w), nm_usuario_p, nr_seq_map_w, null, null, null);					
				elsif (ie_regra_lanc_conta_w = 'L') and (obter_se_lote_hor_conta_pac(nr_seq_horario_w) = 'S') then
					nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_w, null, 'G', coalesce(dt_evento_p,dt_atual_w), nm_usuario_p, nr_seq_map_w, null, null, null);									
				elsif (ie_tipo_motivo_w = 'N') then	
					nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_w, null, 'G', coalesce(dt_evento_p,dt_atual_w), nm_usuario_p, nr_seq_map_w, null, null, null);				
				end if;
			elsif (ie_tipo_motivo_w = 'N') then	
				nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_w, null, 'G', coalesce(dt_evento_p,dt_atual_w), nm_usuario_p, nr_seq_map_w, null, null, null);				
			end if;
									
			select 	substr(max(obter_desc_material(cd_material_w)),1,250)
			into STRICT	ds_item_w
			;
				
			 := Gerar_evolPaci_automa(	ie_tipo_item_p => 'M', nm_usuario_p => nm_usuario_p, nr_atendimento_p => nr_atendimento_p, ds_item_p => ds_item_w, nr_seq_horario_p => nr_seq_horario_p, ie_opcao_p => 'R', ds_hint_p => '', nr_prescricao_p => nr_prescricao_p, qt_dose_p => qt_dose_w, cd_evolucao_p => cd_evolucao_w);
						
			if (nr_seq_alteracao_w <> 0) then
				SELECT	nextval('prescr_mat_alteracao_comp_seq')
				INTO STRICT	nr_seq_alteracao_comp_w
				;

				INSERT INTO prescr_mat_alteracao_comp(nr_sequencia,
							dt_atualizacao, 
							cd_intervalo, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							nr_sequencia_prescr,
							cd_evolucao)
				VALUES (
							nr_seq_alteracao_comp_w,
							dt_atual_w,
							cd_intervalo_w,
							nm_usuario_p,
							dt_atual_w,
							nm_usuario_p,
							nr_seq_alteracao_w,
							cd_evolucao_w);
			end if;
			
		elsif (coalesce(ie_tipo_item_p,'M') = 'E') then
				
			update	pe_prescr_proc_hor c
			set	dt_recusa 		= dt_atual_w,
				nm_usuario 		= nm_usuario_p,
				dt_atualizacao	= dt_atual_w
			where	c.nr_sequencia = nr_seq_horario_ww;
			
			select	max(c.dt_horario),
					max(x.cd_intervalo),
					max(x.qt_intervencao)
			into STRICT	dt_horario_w,
					cd_intervalo_w,
					qt_dose_w
			from	pe_prescr_proc x,
					pe_prescr_proc_hor c,
					pe_prescricao a
			where	x.nr_seq_prescr		= c.nr_seq_pe_prescr
			and		x.nr_sequencia		= c.nr_seq_pe_proc
			and		x.nr_seq_prescr		= a.nr_sequencia
			and		c.nr_seq_pe_prescr	= a.nr_sequencia
			and		((coalesce(a.nr_prescricao::text, '') = '') or (a.nr_prescricao = nr_prescricao_p))
			and		c.nr_sequencia		= nr_seq_horario_ww;		
							
			SELECT	nextval('prescr_mat_alteracao_seq')
			INTO STRICT	nr_seq_alteracao_w
			;
			
			insert into prescr_mat_alteracao(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_prescricao,
				dt_alteracao,
				cd_pessoa_fisica,
				ie_alteracao,
				ds_justificativa,
				ie_tipo_item,
				nr_atendimento,
				cd_item,
				ds_observacao,
				nr_seq_horario_sae,
				nr_seq_assinatura)
			values (
				nr_seq_alteracao_w,
				dt_atual_w,
				nm_usuario_p,
				dt_atual_w,
				nm_usuario_p,
				nr_prescricao_p,
				dt_atual_w,
				obter_dados_usuario_opcao(nm_usuario_p,'C'),
				38,
				wheb_mensagem_pck.get_texto(519061), --'Recusa do paciente',
				coalesce(ie_tipo_item_p,'M'),
				nr_atendimento_p,
				cd_item_p,
				ds_observacao_p,
				nr_seq_horario_ww,
				nr_seq_assinatura_p);

			open C02;
			loop
			fetch C02 into	
				nr_seq_horario_w,
				nr_prescricao_w,
				ie_acm_sn_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				
				update	pe_prescr_proc_hor c
				set		dt_suspensao 	= dt_atual_w,
						nm_usuario_susp	= nm_usuario_p
				where	c.nr_sequencia = nr_seq_horario_w;
				
				insert into prescr_mat_alteracao(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_prescricao,
					dt_alteracao,
					cd_pessoa_fisica,
					ie_alteracao,
					ds_justificativa,
					ie_tipo_item,
					nr_atendimento,
					cd_item,
					ds_observacao,
					nr_seq_horario_sae,
					nr_seq_assinatura,
					ie_acm_sn)
				values (
					nextval('prescr_mat_alteracao_seq'),
					dt_atual_w,
					nm_usuario_p,
					dt_atual_w,
					nm_usuario_p,
					nr_prescricao_w,
					dt_atual_w,
					obter_dados_usuario_opcao(nm_usuario_p,'C'),
					5,
					wheb_mensagem_pck.get_texto(519144), --'Suspensao do item por duplicidade a partir da recusa do paciente',
					coalesce(ie_tipo_item_p,'M'),
					nr_atendimento_p,
					cd_item_p,
					ds_observacao_p,
					nr_seq_horario_w,
					nr_seq_assinatura_p,
					ie_acm_sn_w);
			end loop;
			close C02;

			select 	substr(max(Obter_desc_intervencoes(cd_item_p)),1,250)
			into STRICT	ds_item_w
			;
				
			cd_evolucao_w := Gerar_evolPaci_automa(ie_tipo_item_p, nm_usuario_p, nr_atendimento_p, ds_item_w, nr_seq_horario_w, 'R', '', null, null, null, null, null, cd_evolucao_w);
			
			if (nr_seq_alteracao_w <> 0) then
				SELECT	nextval('prescr_mat_alteracao_comp_seq')
				INTO STRICT	nr_seq_alteracao_comp_w
				;

				INSERT INTO prescr_mat_alteracao_comp(nr_sequencia,
							dt_atualizacao, 
							cd_intervalo, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							nr_sequencia_prescr,
							cd_evolucao)
				VALUES (
							nr_seq_alteracao_comp_w,
							dt_atual_w,
							cd_intervalo_w,
							nm_usuario_p,
							dt_atual_w,
							nm_usuario_p,
							nr_seq_alteracao_w,
							cd_evolucao_w);
			end if;
				
		end if;
	end loop;
	close C03;
end if;

ie_gerar_evolucao_emar_w := obter_param_usuario(1113, 727, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_gerar_evolucao_emar_w);

if (ie_gerar_evolucao_emar_w = 'S') then
	if (ie_tipo_item_p = 'M') then
		cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_seq_alteracao_w, 'CPOE_ITEMS', 1, 'P', 2, cd_evolucao_w, ie_tipo_item_p);
		if (cd_evolucao_w IS NOT NULL AND cd_evolucao_w::text <> '') then
			select	nextval('prescr_mat_hor_compl_seq')
            into STRICT    nr_seq_mat_compl_w
;
			insert into prescr_mat_hor_compl(
                nr_sequencia,
                dt_atualizacao,
                nm_usuario,
                dt_atualizacao_nrec,
                nm_usuario_nrec,
				cd_evolucao
            ) values (
                nr_seq_mat_compl_w,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                cd_evolucao_w
            );
			update prescr_mat_hor
			set nr_seq_mat_compl = nr_seq_mat_compl_w
			where nr_sequencia	= nr_seq_horario_ww;
		end if;
	elsif (ie_tipo_item_p in ('R', 'E')) then
		cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_seq_alteracao_w, 'CPOE_ITEMS', 4, 'P', 2, cd_evolucao_w, ie_tipo_item_p);
		if (cd_evolucao_w IS NOT NULL AND cd_evolucao_w::text <> '') then
			update pe_prescr_proc_hor
			set cd_evolucao = cd_evolucao_w
			where nr_sequencia = nr_seq_horario_ww;
		end if;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_recusa_paciente (nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_horario_p bigint, cd_item_p bigint, nm_usuario_p text, ds_observacao_p text, ie_tipo_item_p text, nr_seq_processo_p bigint default null, nr_seq_assinatura_p bigint default null, nr_seq_motivo_p bigint default null, nr_seq_motivo_susp_p bigint default null, nr_seq_solucao_p bigint default 0, dt_evento_p timestamp default null) FROM PUBLIC;

