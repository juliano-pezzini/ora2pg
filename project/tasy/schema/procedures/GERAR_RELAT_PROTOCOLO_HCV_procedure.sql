-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_relat_protocolo_hcv (dt_inicial_p timestamp, dt_final_p timestamp, cd_setor_atendimento_p bigint, ie_relatorio_p text) AS $body$
DECLARE

 
/* 
Procedure criada para atender a OS33209. 
Gera o relatório CATE 4180 HCV - Relatório Anual de Faturamento por Convênio (novo) 
*/
 
 
/*variáveis*/
 
ds_convenio_w		varchar(255);
nm_paciente_w		varchar(60);
dt_conta_w		timestamp;
vl_janeiro_w		double precision	:= 0;
vl_fevereiro_w	double precision	:= 0;
vl_marco_w		double precision	:= 0;
vl_abril_w		double precision	:= 0;
vl_maio_w		double precision	:= 0;
vl_junho_w		double precision	:= 0;
vl_julho_w		double precision	:= 0;
vl_agosto_w		double precision	:= 0;
vl_setembro_w		double precision	:= 0;
vl_outubro_w		double precision	:= 0;
vl_novembro_w		double precision	:= 0;
vl_dezembro_w		double precision	:= 0;
vl_total_conv_w	double precision	:= 0;
vl_percentual_w	double precision	:= 0;
vl_total_geral_w	double precision	:= 0;

/*comando sql relatório sintético*/
 
C01 CURSOR FOR 
SELECT	ds_conv ds_convenio, 
	SUM(vl_jan) vl_janeiro, 
	SUM(vl_fev) vl_fevereiro, 
	SUM(vl_mar) vl_marco, 
	SUM(vl_abr) vl_abril, 
	SUM(vl_mai) vl_maio, 
	SUM(vl_jun) vl_junho, 
	SUM(vl_jul) vl_julho, 
	SUM(vl_ago) vl_agosto, 
	SUM(vl_set) vl_setembro, 
	SUM(vl_out) vl_outubro, 
	SUM(vl_nov) vl_novembro, 
	SUM(vl_dez) vl_dezembro, 
	SUM(vl_tot) vl_total_conv, 
	sum(vl_perc) vl_percentual 
FROM	( 
	SELECT	SUBSTR(obter_nome_convenio(v.cd_convenio),1,100) ds_conv, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=1 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_jan, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=2 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_fev, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=3 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_mar, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=4 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_abr, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=5 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_mai, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=6 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_jun, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=7 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_jul, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=8 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_ago, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=9 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_set, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=10 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_out, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=11 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_nov, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=12 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_dez, 
		SUM(coalesce(v.vl_procedimento,0)) vl_tot, 
		dividir((SUM(coalesce(v.vl_procedimento,0)) * 100), vl_total_geral_w) vl_perc 
	FROM	procedimento_paciente v, 
		protocolo_convenio p, 
		conta_paciente c 
	WHERE	p.ie_status_protocolo 	= 2 
	AND	p.nr_seq_protocolo		= c.nr_seq_protocolo 
	AND	coalesce(c.ie_cancelamento::text, '') = '' 
	AND	c.nr_interno_conta 		= v.nr_interno_conta 
	AND	(v.cd_convenio IS NOT NULL AND v.cd_convenio::text <> '') 
	AND	coalesce(v.cd_motivo_exc_conta::text, '') = '' 
	AND	c.dt_mesano_referencia 	BETWEEN dt_inicial_p and dt_final_p 
	/*AND	c.dt_mesano_referencia 	BETWEEN	TO_DATE('01/01'||nr_ano_p, 'dd/mm/yyyy') AND	 
								PKG_DATE_UTILS.ADD_MONTH(TO_DATE('01/01'||nr_ano_p, 'dd/mm/yyyy'),12,0)*/
 
	AND	((coalesce(cd_setor_atendimento_p::text, '') = '') OR (v.cd_setor_atendimento = cd_setor_atendimento_p)) 
	GROUP BY SUBSTR(obter_nome_convenio(v.cd_convenio),1,100) 
	
UNION
 
	SELECT	SUBSTR(obter_nome_convenio(v.cd_convenio),1,100) ds_conv, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=1 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_jan, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=2 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_fev, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=3 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_mar, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=4 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_abr, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=5 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_mai, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=6 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_jun, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=7 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_jul, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=8 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_ago, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=9 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_set, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=10 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_out, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=11 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_nov, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=12 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_dez, 
		SUM(coalesce(v.vl_material,0)) vl_tot, 
		dividir((SUM(coalesce(v.vl_material,0)) * 100), vl_total_geral_w) vl_perc 
	FROM	material_atend_paciente v, 
		protocolo_convenio p, 
		conta_paciente c 
	WHERE	p.ie_status_protocolo 	= 2 
	AND	p.nr_seq_protocolo		= c.nr_seq_protocolo 
	AND	coalesce(c.ie_cancelamento::text, '') = '' 
	AND	c.nr_interno_conta 		= v.nr_interno_conta 
	AND	(v.cd_convenio IS NOT NULL AND v.cd_convenio::text <> '') 
	AND	coalesce(v.cd_motivo_exc_conta::text, '') = '' 
	AND	c.dt_mesano_referencia 	BETWEEN dt_inicial_p and dt_final_p 
	/*AND	c.dt_mesano_referencia 	BETWEEN	TO_DATE('01/01'||nr_ano_p, 'dd/mm/yyyy') AND	 
								PKG_DATE_UTILS.ADD_MONTH(TO_DATE('01/01'||nr_ano_p, 'dd/mm/yyyy'),12,0)*/
 
	AND	((coalesce(cd_setor_atendimento_p::text, '') = '') OR (v.cd_setor_atendimento = cd_setor_atendimento_p)) 
	GROUP BY SUBSTR(obter_nome_convenio(v.cd_convenio),1,100) 
	ORDER BY ds_conv 
	) alias120 
group by	ds_conv 
order by	ds_convenio;

/*comando sql relatório analítico*/
 
C02 CURSOR FOR 
SELECT	ds_conv ds_convenio, 
	nm_pac nm_paciente, 
	dt_cta dt_conta, 
	SUM(vl_jan) vl_janeiro, 
	SUM(vl_fev) vl_fevereiro, 
	SUM(vl_mar) vl_marco, 
	SUM(vl_abr) vl_abril, 
	SUM(vl_mai) vl_maio, 
	SUM(vl_jun) vl_junho, 
	SUM(vl_jul) vl_julho, 
	SUM(vl_ago) vl_agosto, 
	SUM(vl_set) vl_setembro, 
	SUM(vl_out) vl_outubro, 
	SUM(vl_nov) vl_novembro, 
	SUM(vl_dez) vl_dezembro, 
	SUM(vl_tot) vl_total_conv, 
	sum(vl_perc) vl_percentual 
FROM	( 
	SELECT	SUBSTR(obter_nome_convenio(v.cd_convenio),1,40) ds_conv, 
		substr(obter_pessoa_atendimento(c.nr_atendimento,'N'),1,60) nm_pac, 
		c.dt_mesano_referencia dt_cta, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=1 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_jan, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=2 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_fev, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=3 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_mar, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=4 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_abr, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=5 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_mai, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=6 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_jun, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=7 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_jul, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=8 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_ago, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=9 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_set, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=10 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_out, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=11 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_nov, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=12 THEN  coalesce(v.vl_procedimento,0)  ELSE 0 END ) vl_dez, 
		SUM(coalesce(v.vl_procedimento,0)) vl_tot, 
		dividir((SUM(coalesce(v.vl_procedimento,0)) * 100), vl_total_geral_w) vl_perc 
	FROM	procedimento_paciente v, 
		protocolo_convenio p, 
		conta_paciente c 
	WHERE	p.ie_status_protocolo 	= 2 
	AND	p.nr_seq_protocolo		= c.nr_seq_protocolo 
	AND	coalesce(c.ie_cancelamento::text, '') = '' 
	AND	c.nr_interno_conta 		= v.nr_interno_conta 
	AND	(v.cd_convenio IS NOT NULL AND v.cd_convenio::text <> '') 
	AND	coalesce(v.cd_motivo_exc_conta::text, '') = '' 
	AND	c.dt_mesano_referencia 	BETWEEN dt_inicial_p and dt_final_p 
	/*AND	c.dt_mesano_referencia 	BETWEEN 	TO_DATE('01/01'||nr_ano_p, 'dd/mm/yyyy') AND 
								PKG_DATE_UTILS.ADD_MONTH(TO_DATE('01/01'||nr_ano_p, 'dd/mm/yyyy'),12,0)*/
 
	AND	((coalesce(cd_setor_atendimento_p::text, '') = '') OR (v.cd_setor_atendimento = cd_setor_atendimento_p)) 
	GROUP BY SUBSTR(obter_nome_convenio(v.cd_convenio),1,40), 
		 substr(obter_pessoa_atendimento(c.nr_atendimento,'N'),1,60), 
		 c.dt_mesano_referencia 
	
UNION
 
	SELECT	SUBSTR(obter_nome_convenio(v.cd_convenio),1,40) ds_conv, 
		substr(obter_pessoa_atendimento(c.nr_atendimento,'N'),1,60) nm_pac, 
		c.dt_mesano_referencia dt_cta, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=1 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_jan, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=2 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_fev, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=3 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_mar, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=4 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_abr, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=5 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_mai, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=6 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_jun, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=7 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_jul, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=8 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_ago, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=9 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_set, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=10 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_out, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=11 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_nov, 
		SUM(CASE WHEN pkg_date_utils.extract_field('MONTH',c.dt_mesano_referencia,0)=12 THEN  coalesce(v.vl_material,0)  ELSE 0 END ) vl_dez, 
		SUM(coalesce(v.vl_material,0)) vl_tot, 
		dividir((SUM(coalesce(v.vl_material,0)) * 100), vl_total_geral_w) vl_perc 
	FROM	material_atend_paciente v, 
		protocolo_convenio p, 
		conta_paciente c 
	WHERE	p.ie_status_protocolo 	= 2 
	AND	p.nr_seq_protocolo		= c.nr_seq_protocolo 
	AND	coalesce(c.ie_cancelamento::text, '') = '' 
	AND	c.nr_interno_conta 		= v.nr_interno_conta 
	AND	(v.cd_convenio IS NOT NULL AND v.cd_convenio::text <> '') 
	AND	coalesce(v.cd_motivo_exc_conta::text, '') = '' 
	AND	c.dt_mesano_referencia 	BETWEEN dt_inicial_p and dt_final_p 
	/*AND	c.dt_mesano_referencia 	BETWEEN	TO_DATE('01/01'||nr_ano_p, 'dd/mm/yyyy') AND 				 
								PKG_DATE_UTILS.ADD_MONTH(TO_DATE('01/01'||nr_ano_p, 'dd/mm/yyyy'),12,0)*/
 
	AND	((coalesce(cd_setor_atendimento_p::text, '') = '') OR (v.cd_setor_atendimento = cd_setor_atendimento_p)) 
	GROUP BY SUBSTR(obter_nome_convenio(v.cd_convenio),1,40), 
		 substr(obter_pessoa_atendimento(c.nr_atendimento,'N'),1,60), 
		 c.dt_mesano_referencia 
	ORDER BY ds_conv 
	) alias128 
group by	ds_conv, 
		nm_pac, 
		dt_cta 
order by	ds_convenio, 
		nm_paciente, 
		dt_conta;


BEGIN 
if (dt_inicial_p IS NOT NULL AND dt_inicial_p::text <> '') and (dt_final_p IS NOT NULL AND dt_final_p::text <> '') then 
 
	/*limpar tabela*/
 
	delete from w_relat_protocolo_hcv;
	commit;
 
	/*obter total geral para cálculo do percentual*/
 
	select	sum(vl_tot) vl_total_geral 
	into STRICT	vl_total_geral_w 
	from	( 
		SELECT	SUM(coalesce(v.vl_procedimento,0)) vl_tot 
		FROM	procedimento_paciente v, 
			protocolo_convenio p, 
			conta_paciente c 
		WHERE	p.ie_status_protocolo 	= 2 
		AND	p.nr_seq_protocolo		= c.nr_seq_protocolo 
		AND	coalesce(c.ie_cancelamento::text, '') = '' 
		AND	c.nr_interno_conta 		= v.nr_interno_conta 
		AND	(v.cd_convenio IS NOT NULL AND v.cd_convenio::text <> '') 
		AND	coalesce(v.cd_motivo_exc_conta::text, '') = '' 
		AND	c.dt_mesano_referencia 	BETWEEN dt_inicial_p and dt_final_p 
		/*AND	c.dt_mesano_referencia 	BETWEEN	TO_DATE('01/01'||nr_ano_p, 'dd/mm/yyyy') AND			 
									PKG_DATE_UTILS.ADD_MONTH(TO_DATE('01/01'||nr_ano_p, 'dd/mm/yyyy'),12,0)*/
 
		AND	((coalesce(cd_setor_atendimento_p::text, '') = '') OR (v.cd_setor_atendimento = cd_setor_atendimento_p)) 
		
union
 
		SELECT	SUM(coalesce(v.vl_material,0)) vl_tot 
		FROM	material_atend_paciente v, 
			protocolo_convenio p, 
			conta_paciente c 
		WHERE	p.ie_status_protocolo 	= 2 
		AND	p.nr_seq_protocolo		= c.nr_seq_protocolo 
		AND	coalesce(c.ie_cancelamento::text, '') = '' 
		AND	c.nr_interno_conta 		= v.nr_interno_conta 
		AND	(v.cd_convenio IS NOT NULL AND v.cd_convenio::text <> '') 
		AND	coalesce(v.cd_motivo_exc_conta::text, '') = '' 
		AND	c.dt_mesano_referencia 	BETWEEN dt_inicial_p and dt_final_p 
		/*AND	c.dt_mesano_referencia 	BETWEEN	TO_DATE('01/01'||nr_ano_p, 'dd/mm/yyyy') AND 
									PKG_DATE_UTILS.ADD_MONTH(TO_DATE('01/01'||nr_ano_p, 'dd/mm/yyyy'),12,0)*/
 
		AND	((coalesce(cd_setor_atendimento_p::text, '') = '') OR (v.cd_setor_atendimento = cd_setor_atendimento_p)) 
		) alias19;
 
	/*relatório sintético*/
 
	if (coalesce(ie_relatorio_p,'S') = 'S') then 
 
		Open C01;
		Loop 
		Fetch C01 into	ds_convenio_w, 
					vl_janeiro_w, 
					vl_fevereiro_w, 
					vl_marco_w, 
					vl_abril_w, 
					vl_maio_w, 
					vl_junho_w, 
					vl_julho_w, 
					vl_agosto_w, 
					vl_setembro_w, 
					vl_outubro_w, 
					vl_novembro_w, 
					vl_dezembro_w, 
					vl_total_conv_w, 
					vl_percentual_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
 
		/*inserir valores (relatório sintético) na tabela temporária*/
 
		insert	into	w_relat_protocolo_hcv( 
								ds_convenio, 
								vl_janeiro, 
								vl_fevereiro, 
								vl_marco, 
								vl_abril, 
								vl_maio, 
								vl_junho, 
								vl_julho, 
								vl_agosto, 
								vl_setembro, 
								vl_outubro, 
								vl_novembro, 
								vl_dezembro, 
								vl_total_convenio, 
								vl_percentual 
								) 
							values ( 
								ds_convenio_w, 
								vl_janeiro_w, 
								vl_fevereiro_w, 
								vl_marco_w, 
								vl_abril_w, 
								vl_maio_w, 
								vl_junho_w, 
								vl_julho_w, 
								vl_agosto_w, 
								vl_setembro_w, 
								vl_outubro_w, 
								vl_novembro_w, 
								vl_dezembro_w, 
								vl_total_conv_w, 
								vl_percentual_w 
								);
		End loop;
		Close C01;
 
	/*relatório analítico*/
 
	elsif (coalesce(ie_relatorio_p,'S') = 'A') then 
 
		Open C02;
		Loop 
		Fetch C02 into	ds_convenio_w, 
					nm_paciente_w, 
					dt_conta_w, 
					vl_janeiro_w, 
					vl_fevereiro_w, 
					vl_marco_w, 
					vl_abril_w, 
					vl_maio_w, 
					vl_junho_w, 
					vl_julho_w, 
					vl_agosto_w, 
					vl_setembro_w, 
					vl_outubro_w, 
					vl_novembro_w, 
					vl_dezembro_w, 
					vl_total_conv_w, 
					vl_percentual_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
 
		/*inserir valores (relatório analítico) na tabela temporária*/
 
		insert	into	w_relat_protocolo_hcv( 
								ds_convenio, 
								nm_paciente, 
								dt_conta, 
								vl_janeiro, 
								vl_fevereiro, 
								vl_marco, 
								vl_abril, 
								vl_maio, 
								vl_junho, 
								vl_julho, 
								vl_agosto, 
								vl_setembro, 
								vl_outubro, 
								vl_novembro, 
								vl_dezembro, 
								vl_total_convenio, 
								vl_percentual 
								) 
							values ( 
								ds_convenio_w, 
								nm_paciente_w, 
								dt_conta_w, 
								vl_janeiro_w, 
								vl_fevereiro_w, 
								vl_marco_w, 
								vl_abril_w, 
								vl_maio_w, 
								vl_junho_w, 
								vl_julho_w, 
								vl_agosto_w, 
								vl_setembro_w, 
								vl_outubro_w, 
								vl_novembro_w, 
								vl_dezembro_w, 
								vl_total_conv_w, 
								vl_percentual_w 
								);
		End loop;
		Close C02;
	end if;
end if;
commit;
END	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_relat_protocolo_hcv (dt_inicial_p timestamp, dt_final_p timestamp, cd_setor_atendimento_p bigint, ie_relatorio_p text) FROM PUBLIC;

