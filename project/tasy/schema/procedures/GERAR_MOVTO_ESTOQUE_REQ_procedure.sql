-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_movto_estoque_req ( nr_requisicao_p bigint, nr_sequencia_p bigint, cd_operacao_estoque_p bigint, qt_atendida_p bigint, dt_atendimento_p timestamp, cd_motivo_baixa_p bigint, ie_acao_p text, ie_baixa_sem_saldo_p text, nm_usuario_p text, cd_barras_p text, ds_erro_p INOUT text) AS $body$
DECLARE


nr_requisicao_w			item_requisicao_material.nr_requisicao%type;
dt_atualizacao_w          		timestamp := clock_timestamp();
nr_movimento_estoque_w    		bigint;
cd_operacao_estoque_w		smallint;
cd_operacao_correspondente_w	smallint := 0;
ie_entrada_saida_w			varchar(1);
ie_tipo_requisicao_w		varchar(3);
ie_saldo_disp_w			varchar(1)	:= 'S';
ie_bloqueio_inventario_w		varchar(1)	:= 'N';
cd_estabelecimento_w		smallint;
cd_cgc_fornecedor_w		varchar(14);
ie_consignado_Mat_w		varchar(01);
cd_local_estoque_w		smallint;
cd_local_estoque_destino_w		smallint;
cd_material_w			integer;
ds_erro_w			varchar(512);
ds_erro_ww			varchar(255);
qt_saldo_consignado_w		double precision;
ie_gera_ordem_w			varchar(01);
cd_material_estoque_w		integer;
ie_material_estoque_w		varchar(01);
dt_atendimento_w			timestamp;
ds_material_w			varchar(255);
ds_operacao_w			varchar(40);
cd_pessoa_atend_w		varchar(10);
cd_local_entrega_w		bigint;
cd_centro_custo_w			bigint;
pr_desconto_w			bigint;
nm_usuario_dest_w			varchar(255);
qt_baixa_estoque_w		double precision;
qt_mat_requisitado_w		double precision := 0;
qt_saldo_disp_w			double precision := 0;
qt_conv_estoque_consumo_w	double precision;
nr_seq_lote_fornec_w		bigint;
dt_validade_w			timestamp;
ds_lote_fornec_w			varchar(20);
qt_existe_w			smallint;
nr_seq_cor_w			bigint;
cd_pessoa_solicitante_w		varchar(10);
ie_consiste_oc_aprovada_w		varchar(1);
nr_ordem_compra_w		bigint;
nr_item_oci_w			integer;
qt_item_ordem_w			double precision;
dt_aprovacao_w			timestamp;
ie_disp_req_trans_w		varchar(1);
qt_requisicao_transf_w		double precision;
dt_mesano_referencia_w		timestamp;
dt_mesano_vigente_w		timestamp;
qt_estoque_w			double precision;
dt_recebimento_item_w		timestamp;
cd_perfil_comunic_w		varchar(10);
qt_atendida_w			double precision;
ie_atualiza_cabine_w		varchar(1);
vl_resultado_w			varchar(4000);
vl_coluna_w			varchar(4000);
ds_lock_w			varchar(4000);
c001				integer;
code				bigint;
ie_consiste_quant_w		varchar(2);
ie_consiste_material_w		varchar(2);
nr_seq_kit_estoque_w		item_requisicao_material.nr_seq_kit_estoque%type;
nr_seq_kit_novo_w		item_requisicao_material.nr_seq_kit_estoque%type;
ie_origem_requisicao_w		requisicao_material.ie_origem_requisicao%type;
qt_material_kit_comp_w		kit_estoque_comp.qt_material%type;
nr_seq_kit_estoque_comp_w	kit_estoque_comp.nr_sequencia%type;
qt_material_w			double precision;
dt_validade_minima_w		timestamp;
ds_comunicacao_w		varchar(2000);
lista_usuario_w			varchar(2000);
tam_lista_w			bigint;
ie_pos_virgula_w		bigint;
ds_email_usuario_w		varchar(255);
ds_lista_email_usuario_w	varchar(2000);
nm_usuario_w			varchar(2000);
ie_gera_oc_reposicao_w		varchar(1);
ie_tipo_saldo_w			varchar(1);
qt_diferenca_w			bigint := 0;
ie_continua		varchar(1)	:= 'S';
qt_estoque_proprio_w	double precision;
qt_atend_w			double precision;
nr_seq_w				bigint;
nr_sequencia_w			bigint;
qt_atendida_consignado_w bigint := 0;
ie_baixa_sem_saldo_w	varchar(1);
nr_seq_regra_w		bigint;
ie_consignado_w		varchar(3);
qt_controle_w		bigint := 0;
ie_estoque_lote_w   material_estab.ie_estoque_lote%type;
ds_historico_w		requisicao_mat_historico.ds_historico%type;

c01 CURSOR FOR
	SELECT	a.qt_material,
		nr_seq_item_kit
	from	kit_estoque_comp a
	where	nr_seq_kit_estoque = nr_seq_kit_estoque_w
	and 	ie_gerado_barras = 'N'
	and	cd_material = cd_material_w
	and	coalesce(nr_seq_lote_fornec,coalesce(nr_seq_lote_fornec_w,0)) = coalesce(nr_seq_lote_fornec_w,0)
	order	by nr_seq_lote_fornec;


BEGIN
qt_atend_w := qt_atendida_p;
nr_sequencia_w := nr_sequencia_p;

while(qt_diferenca_w > 0 or ie_continua = 'S') loop
	begin
	cd_operacao_estoque_w := cd_operacao_estoque_p;
	qt_material_w := qt_atend_w;
	ie_consiste_quant_w	:= obter_parametro_usuario_js(143,44);
	ie_consiste_material_w	:= obter_parametro_usuario_js(143,55);

	/*Lock do registro da ITEM_REQUISICAO_MATERIAL.
	Evita geracao de movimentos duplicados por conta de execucoes paralelas da procedure, quando a baixa da requisicao eh realizada simultaneamente por dois usuarios*/
	select	nr_requisicao
	into STRICT	nr_requisicao_w
	from	item_requisicao_material
	where	nr_requisicao = nr_requisicao_p
	and	nr_sequencia  = nr_sequencia_p
	for	update;

	select	cd_operacao_correspondente,
		ie_entrada_saida,
		ie_tipo_requisicao,
		ds_operacao,
		coalesce(ie_consignado,'0')
	into STRICT	cd_operacao_correspondente_w,
		ie_entrada_saida_w,
		ie_tipo_requisicao_w,
		ds_operacao_w,
		ie_consignado_w
	from	operacao_estoque
	where	cd_operacao_estoque  = cd_operacao_estoque_w;

	select	a.cd_estabelecimento,
		cd_local_estoque,
		coalesce(cd_local_estoque_destino, cd_local_estoque),
		CASE WHEN coalesce(b.cd_material_lido, 0)=0 THEN   b.cd_material  ELSE b.cd_material_lido END ,
		b.cd_cgc_fornecedor,
		b.dt_atendimento,
		b.nr_seq_lote_fornec,
		b.dt_recebimento,
		b.nr_seq_kit_estoque,
		a.ie_origem_requisicao
	into STRICT	cd_estabelecimento_w,
		cd_local_estoque_w,
		cd_local_estoque_destino_w,
		cd_material_w,
		cd_cgc_fornecedor_w,
		dt_atendimento_w,
		nr_seq_lote_fornec_w,
		dt_recebimento_item_w,
		nr_seq_kit_estoque_w,
		ie_origem_requisicao_w
	from	requisicao_material a,
		item_requisicao_material b
	where	a.nr_requisicao = b.nr_requisicao
	and	b.nr_requisicao = nr_requisicao_p
	and	b.nr_sequencia  = nr_sequencia_w;

	select	cd_estabelecimento
	into STRICT	cd_estabelecimento_w
	from	local_estoque
	where	cd_local_estoque = cd_local_estoque_w;

	ie_atualiza_cabine_w := coalesce(substr(obter_valor_param_usuario(109,82,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),1,1),'N');

	select	coalesce(max(IE_REGRA_SALDO_CONSIG),0)
	into STRICT	nr_seq_regra_w
	from	parametro_estoque
	where	cd_estabelecimento = cd_estabelecimento_w;

	if (ie_tipo_requisicao_w in (2,21)) and (cd_operacao_correspondente_w IS NOT NULL AND cd_operacao_correspondente_w::text <> '') then
		begin
		if (ie_entrada_saida_w = 'S') then
			begin
			select	cd_local_estoque,
				coalesce(cd_local_estoque_destino, cd_local_estoque)
			into STRICT	cd_local_estoque_w,
				cd_local_estoque_destino_w
			from	requisicao_material a,
				item_requisicao_material b
			where	a.nr_requisicao = b.nr_requisicao
			and	b.nr_requisicao = nr_requisicao_p
			and	b.nr_sequencia  = nr_sequencia_w;
			end;
		else
			begin
			cd_operacao_estoque_w		:= cd_operacao_correspondente_w;
			cd_operacao_correspondente_w	:= cd_operacao_estoque_p;

			select	coalesce(cd_local_estoque_destino, cd_local_estoque),
				cd_local_estoque
			into STRICT	cd_local_estoque_w,
				cd_local_estoque_destino_w
			from	requisicao_material a,
				item_requisicao_material b
			where	a.nr_requisicao = b.nr_requisicao
			and	b.nr_requisicao = nr_requisicao_p
			and	b.nr_sequencia  = nr_sequencia_w;
			end;
		end if;
		end;
	end if;

	select	coalesce(max(dt_mesano_vigente),trunc(clock_timestamp(),'mm')),
		coalesce(max(ie_disp_req_trans),'N')
	into STRICT	dt_mesano_vigente_w,
		ie_disp_req_trans_w
	from	parametro_estoque
	where	cd_estabelecimento = cd_estabelecimento_w;

	select	coalesce(max(a.ie_consignado),'0'),
		max(a.cd_material_estoque),
		max(b.ie_material_estoque),
		max(a.ds_material),
		coalesce(max(a.qt_conv_estoque_consumo),1),
        max(b.ie_estoque_lote)
	into STRICT	ie_consignado_mat_w,
		cd_material_estoque_w,
		ie_material_estoque_w,
		ds_material_w,
		qt_conv_estoque_consumo_w,
        ie_estoque_lote_w
	from	material a,
		material_Estab b
	where	a.cd_material = b.cd_material
	and	b.cd_estabelecimento = cd_estabelecimento_w
	and	a.cd_material	= cd_material_w;

	ie_consiste_oc_aprovada_w := Obter_Valor_Param_Usuario(109, 65, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w);

	if (nr_seq_lote_fornec_w IS NOT NULL AND nr_seq_lote_fornec_w::text <> '') then
		select	dt_validade,
			ds_lote_fornec
		into STRICT	dt_validade_w,
			ds_lote_fornec_w
		from	material_lote_fornec
		where	nr_sequencia = nr_seq_lote_fornec_w;
	end if;

	if (ie_acao_p = '2' and coalesce(dt_atendimento_w::text, '') = '' and coalesce(cd_cgc_fornecedor_w::text, '') = '' and ie_consignado_mat_w = '2' and nr_seq_regra_w > 0)then
	begin
		ie_tipo_saldo_w := 'N';
	end;
	elsif (ie_acao_p = '2' and (dt_atendimento_w IS NOT NULL AND dt_atendimento_w::text <> '') and (cd_cgc_fornecedor_w IS NOT NULL AND cd_cgc_fornecedor_w::text <> '') and ie_consignado_mat_w = '2' and nr_seq_regra_w > 0)then
	begin
		ie_tipo_saldo_w := 'C';
	end;
	elsif (ie_acao_p = '1' and coalesce(dt_atendimento_w::text, '') = '' and (cd_cgc_fornecedor_w IS NOT NULL AND cd_cgc_fornecedor_w::text <> '') and ie_consignado_mat_w = '2' and nr_seq_regra_w > 0 and (ie_consignado_w not in ('1', '2', '3', '4', '5', '6', '7', '8')))then
	begin
		cd_cgc_fornecedor_w := null;
	end;
	end if;

    select	coalesce(max(s.dt_mesano_referencia),trunc(clock_timestamp(), 'month'))
	into STRICT	dt_mesano_referencia_w
	from	saldo_estoque s
	where	s.cd_estabelecimento	= cd_estabelecimento_w
	and	s.cd_material		= cd_material_estoque_w
	and 	s.dt_mesano_referencia	>= dt_mesano_vigente_w
	and	s.cd_local_estoque	= cd_local_estoque_w;

	if	((ie_consignado_w in ('1', '2', '3', '4', '5', '6', '7', '8') and (cd_cgc_fornecedor_w IS NOT NULL AND cd_cgc_fornecedor_w::text <> '') and (ie_acao_p = '1')) or (ie_consignado_w = '0') or (ie_acao_p = '2')) then
		begin
		if	((ie_acao_p = '1') and (coalesce(dt_atendimento_w::text, '') = '')) or
			(ie_acao_p = '2' AND dt_atendimento_w IS NOT NULL AND dt_atendimento_w::text <> '') then
			begin

			if (ie_consignado_mat_w = '2' and coalesce(cd_cgc_fornecedor_w::text, '') = '' and nr_seq_regra_w > 0 and ie_estoque_lote_w = 'N') then
				begin
				if (ie_acao_p = '1') and (ie_entrada_saida_w = 'S' or ie_tipo_requisicao_w in (2,21)) then
					begin
					SELECT * FROM obter_fornec_consig_ambos(cd_estabelecimento_w, cd_material_estoque_w, nr_seq_lote_fornec_w, cd_local_estoque_w, ie_tipo_saldo_w, cd_cgc_fornecedor_w, 'REQ') INTO STRICT ie_tipo_saldo_w, cd_cgc_fornecedor_w;
					end;
				end if;



				if (ie_acao_p = '1' and ie_tipo_saldo_w = 'N')then
					begin
					qt_estoque_proprio_w :=	obter_saldo_disp_estoque(cd_estabelecimento_w,
																	cd_material_w,
																	cd_local_estoque_w,
																	PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0),
																	nr_seq_lote_fornec_w
																	) * qt_conv_estoque_consumo_w;

					end;
				elsif (cd_cgc_fornecedor_w IS NOT NULL AND cd_cgc_fornecedor_w::text <> '') then
					begin
					if (ie_tipo_requisicao_w in (2,21)) and (cd_operacao_correspondente_w IS NOT NULL AND cd_operacao_correspondente_w::text <> '') then
						begin
						if (ie_entrada_saida_w = 'S') then
							begin
							select	cd_operacao_transf_setor_consi
							into STRICT	cd_operacao_estoque_w
							from	parametro_estoque
							where	cd_estabelecimento = cd_estabelecimento_w;

							select	cd_operacao_correspondente
							into STRICT	cd_operacao_correspondente_w
							from	operacao_estoque
							where	cd_operacao_estoque  = cd_operacao_estoque_w;
							end;
						else
							begin
							select	cd_operacao_transf_setor_consi
							into STRICT	cd_operacao_correspondente_w
							from	parametro_estoque
							where	cd_estabelecimento = cd_estabelecimento_w;

							select	cd_operacao_correspondente
							into STRICT	cd_operacao_estoque_w
							from	operacao_estoque
							where	cd_operacao_estoque  = cd_operacao_correspondente_w;
							end;
						end if;
						end;
					else
						begin
							if (ie_consignado_w = 0) then
								select	cd_operacao_cons_consignado
								into STRICT	cd_operacao_estoque_w
								from	parametro_estoque
								where	cd_estabelecimento = cd_estabelecimento_w;
							else
								cd_operacao_estoque_w := cd_operacao_estoque_p;
							end if;
						end;
					end if;
					end;
				end if;
				end;
			elsif (ie_consignado_mat_w = '2') and ((cd_cgc_fornecedor_w IS NOT NULL AND cd_cgc_fornecedor_w::text <> '') and nr_seq_regra_w > 0 and ie_estoque_lote_w = 'N') then
				begin
				ie_tipo_saldo_w := 'C';

				if (cd_cgc_fornecedor_w IS NOT NULL AND cd_cgc_fornecedor_w::text <> '') then
					begin
					if (ie_tipo_requisicao_w in (2,21)) and (cd_operacao_correspondente_w IS NOT NULL AND cd_operacao_correspondente_w::text <> '') then
						begin
						if (ie_entrada_saida_w = 'S') then
							begin
							select	cd_operacao_transf_setor_consi
							into STRICT	cd_operacao_estoque_w
							from	parametro_estoque
							where	cd_estabelecimento = cd_estabelecimento_w;

							select	cd_operacao_correspondente
							into STRICT	cd_operacao_correspondente_w
							from	operacao_estoque
							where	cd_operacao_estoque  = cd_operacao_estoque_w;
							end;
						else
							begin
							select	cd_operacao_transf_setor_consi
							into STRICT	cd_operacao_correspondente_w
							from	parametro_estoque
							where	cd_estabelecimento = cd_estabelecimento_w;

							select	cd_operacao_correspondente
							into STRICT	cd_operacao_estoque_w
							from	operacao_estoque
							where	cd_operacao_estoque  = cd_operacao_correspondente_w;
							end;
						end if;
						end;
					else
						begin
							if (ie_consignado_w = 0) then
								select	cd_operacao_cons_consignado
								into STRICT	cd_operacao_estoque_w
								from	parametro_estoque
								where	cd_estabelecimento = cd_estabelecimento_w;
							else
								cd_operacao_estoque_w := cd_operacao_estoque_p;
							end if;
						end;
					end if;
					end;
				end if;
				end;
			elsif (ie_consignado_mat_w = '2') and (coalesce(cd_cgc_fornecedor_w::text, '') = '') and (ie_estoque_lote_w = 'N') then
				begin
				/*proprio sem regra*/

				ie_tipo_saldo_w := 0;

				end;
            elsif (ie_estoque_lote_w = 'S') then
                begin
                    select    coalesce(CASE WHEN 1=1 THEN 'N' END ,0)	
                    into STRICT ie_tipo_saldo_w
                    from    saldo_estoque_lote
                    where    cd_estabelecimento    = cd_estabelecimento_w
                    and    cd_material        = cd_material_estoque_w
                    and    dt_mesano_referencia    = dt_mesano_referencia_w
                    and    cd_local_estoque    = cd_local_estoque_w  
                    and    nr_seq_lote         = nr_seq_lote_fornec_w;
                exception when others then
                    ie_tipo_saldo_w := 'C';
                end;
			end if;

			if (ie_material_estoque_w	= 'S') then
				begin

				ie_baixa_sem_saldo_w := coalesce(ie_baixa_sem_saldo_p, 'S');

				if (ie_consignado_mat_w = '2' and  nr_seq_regra_w > 0 and ie_estoque_lote_w = 'N')then
				begin
					ie_baixa_sem_saldo_w := 'N';
				end;
				end if;

				if	((ie_entrada_saida_w = 'S') or (cd_local_estoque_w <> cd_local_estoque_destino_w)) and (ie_baixa_sem_saldo_w = 'N') and (ie_acao_p = '1')  then
					ie_saldo_disp_w		:= 'N';
					ie_bloqueio_inventario_w	:= 'N';
					qt_saldo_consignado_w 	:= null;

					if	((ie_consignado_mat_w = '0') or (coalesce(ie_tipo_saldo_w, 'C') <> 'C')) then
						begin
						ie_saldo_disp_w := 'S';

						if((ie_consignado_mat_w = '2') and (ie_tipo_saldo_w = 'N') and (nr_seq_regra_w > 0) and (ie_estoque_lote_w = 'N'))then
							begin
								/*proprio ambos com regra*/

								qt_estoque_w	:= obter_saldo_disp_estoque(
										cd_estabelecimento_w,
										cd_material_estoque_w,
										cd_local_estoque_w,
										PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0),
										nr_seq_lote_fornec_w);

								if (ie_disp_req_trans_w = 'S') and (ie_tipo_requisicao_w in ('2','21')) then
									begin
									/*Sidnei - 17/09/2011 - OS 353667
									Tratamento necessario, pois se for considerado a quantidade em requisicao no disponivel, esta quantidade sera diminuida na function obter_saldo_disp_estoque.
									O local tem estoque disponivel, mas foi diminuido para atender a requisicao*/
									select	sum(coalesce(a.qt_estoque, 0)) - sum(coalesce(a.qt_material_atendida, 0)) qt_material
									into STRICT	qt_requisicao_transf_w
									from	operacao_estoque o,
										requisicao_material b,
										item_requisicao_material a
									where	a.nr_requisicao		= b.nr_requisicao
									and	b.cd_operacao_estoque	= o.cd_operacao_estoque
									and	b.cd_estabelecimento	= cd_estabelecimento_w
									and	b.cd_local_estoque	= cd_local_estoque_w
									and	o.ie_tipo_requisicao	in ('2','21')
									and	obter_tipo_motivo_baixa_req(a.cd_motivo_baixa) = 0
									and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
									and	a.cd_material in (
										SELECT	x.cd_material
										from	material x
										where	x.cd_material_estoque = cd_material_estoque_w);

									qt_estoque_w := coalesce(qt_estoque_w,0) + coalesce(qt_requisicao_transf_w,0);

									qt_estoque_proprio_w := qt_estoque_w * qt_conv_estoque_consumo_w;

									end;
								end if;

								if (qt_atend_w <= qt_estoque_proprio_w)then
								begin
									qt_baixa_estoque_w := qt_atend_w;
									qt_estoque_w := qt_estoque_proprio_w;
								end;
								else
								begin
									qt_baixa_estoque_w := qt_estoque_proprio_w;
									qt_estoque_w := qt_estoque_proprio_w;
									qt_diferenca_w := qt_atend_w - qt_estoque_proprio_w;
									qt_atend_w := qt_estoque_proprio_w;
									
									if (qt_diferenca_w > 0) then						
										/* 1213561 - Item adicionado a requisicao por falta de saldo para atendimento.
										155087 - Item #@NR_SEQUENCIA#@ [#@CD_MATERIAL#@] - #@DS_MATERIAL#@.
										Quantidade atendida: #@QT_MATERIAL_ATENDIDA#@
										1213571 - Lote: #@NRLOTE#@
										1213572 - CNPJ: #@CD_CNPJ#@
										1213573 - Saldo proprio: #@QT_SALDO_PROPRIO#@
										1213574 - Quantidade faltante para atendimento: #@QT_FALTANTE#@ */
						
										ds_historico_w := substr(WHEB_MENSAGEM_PCK.get_texto(1213561) || chr(10)||chr(13)
															|| WHEB_MENSAGEM_PCK.get_texto(155087,	'NR_SEQUENCIA=' || nr_sequencia_w ||
																									';CD_MATERIAL=' || cd_material_estoque_w ||
																									';DS_MATERIAL=' || ds_material_w ||
																									';QT_MATERIAL_ATENDIDA=' || qt_atendida_p) || chr(10)||chr(13)
															|| WHEB_MENSAGEM_PCK.get_texto(1213571,	'NRLOTE=' || nr_seq_lote_fornec_w) || chr(10)||chr(13)
															|| WHEB_MENSAGEM_PCK.get_texto(1213572,	'CD_CNPJ=' || cd_cgc_fornecedor_w) || chr(10)||chr(13)
															|| WHEB_MENSAGEM_PCK.get_texto(1213573,	'QT_SALDO_PROPRIO=' || qt_estoque_proprio_w) || chr(10)||chr(13)
															|| WHEB_MENSAGEM_PCK.get_texto(1213574,	'QT_FALTANTE=' || qt_diferenca_w) || chr(10)||chr(13)
															|| chr(10)||chr(13)
															|| dbms_utility.format_call_stack,1,4000);
									end if;
								end;
								end if;
							end;
						else
							begin
							/*proprio ou ambos sem regra*/

							select	round((dividir(qt_atend_w, qt_conv_estoque_consumo))::numeric,4)
								into STRICT	qt_baixa_estoque_w
								from	material
								where	cd_material = cd_material_estoque_w;

							qt_estoque_w	:= obter_saldo_disp_estoque(
										cd_estabelecimento_w,
										cd_material_estoque_w,
										cd_local_estoque_w,
										dt_mesano_referencia_w,
										nr_seq_lote_fornec_w);

							if (ie_disp_req_trans_w = 'S') and (ie_tipo_requisicao_w in ('2','21')) then
								begin
								/*Sidnei - 17/09/2011 - OS 353667
								Tratamento necessario, pois se for considerado a quantidade em requisicao no disponivel, esta quantidade sera diminuida na function obter_saldo_disp_estoque.
								O local tem estoque disponivel, mas foi diminuido para atender a requisicao*/
								select	sum(coalesce(a.qt_estoque, 0)) - sum(coalesce(a.qt_material_atendida, 0)) qt_material
								into STRICT	qt_requisicao_transf_w
								from	operacao_estoque o,
									requisicao_material b,
									item_requisicao_material a
								where	a.nr_requisicao		= b.nr_requisicao
								and	b.cd_operacao_estoque	= o.cd_operacao_estoque
								and	b.cd_estabelecimento	= cd_estabelecimento_w
								and	b.cd_local_estoque	= cd_local_estoque_w
								and	o.ie_tipo_requisicao	in ('2','21')
								and	obter_tipo_motivo_baixa_req(a.cd_motivo_baixa)		= 0
								and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
								and	a.cd_material in (
									SELECT	x.cd_material
									from	material x
									where	x.cd_material_estoque = cd_material_estoque_w);

								qt_estoque_w := coalesce(qt_estoque_w,0) + coalesce(qt_requisicao_transf_w,0);

								end;
							end if;
							end;
						end if;

						if (qt_estoque_w < qt_baixa_estoque_w) then
							ie_saldo_disp_w := 'N';
							ie_continua := 'N';
						end if;


						/* Fabio 03/02/2004 - Tratar o bloqueio de inventario */

						select	coalesce(max(Obter_Se_Material_Bloqueio_Inv(cd_estabelecimento_w,
								cd_material_w,
								cd_local_estoque_w)), 'N')
						into STRICT	ie_bloqueio_inventario_w
						;

						end;
					else
						begin
						/*consignado*/

						select (coalesce(sum(qt_estoque),0) * qt_conv_estoque_consumo_w)
						into STRICT	qt_saldo_consignado_w
						from	fornecedor_mat_consignado a
						where	a.cd_estabelecimento	= cd_estabelecimento_w
						and	a.cd_local_estoque	= cd_local_estoque_w
						and	a.cd_material		= cd_material_estoque_w
						and	a.cd_fornecedor		= cd_cgc_fornecedor_w
						and	a.dt_mesano_referencia	=
							(SELECT max(dt_mesano_referencia)
							from	fornecedor_mat_consignado b,
								Parametro_estoque p
							where	p.cd_estabelecimento	= cd_estabelecimento_w
							and	b.cd_estabelecimento	= cd_estabelecimento_w
							and	b.cd_local_estoque		= cd_local_estoque_w
							and	b.cd_material		= cd_material_estoque_w
							and	b.cd_fornecedor		= cd_cgc_fornecedor_w
							and	b.dt_mesano_referencia	>= p.dt_mesano_vigente);

						/*Fabio OS23827 - 06/10/2005 - Nao estava fazendo a conversao para verificar o saldo*/

						select	round((dividir(qt_atend_w, qt_conv_estoque_consumo))::numeric,4)
						into STRICT	qt_baixa_estoque_w
						from	material
						where	cd_material = cd_material_estoque_w;

						if ( qt_atend_w > qt_saldo_consignado_w) then /*vai fazer a baixa parcial*/
						begin
							if (ie_consignado_mat_w = '2' and  nr_seq_regra_w > 0)then
							begin
								if (qt_saldo_consignado_w > 0)then
									begin
										qt_diferenca_w := qt_atend_w - qt_saldo_consignado_w;
										qt_atendida_consignado_w := qt_atendida_consignado_w + qt_saldo_consignado_w;
										qt_atend_w := qt_saldo_consignado_w;
										ie_saldo_disp_w		:= 'S';
										
										if (qt_diferenca_w > 0) then
											/* 1213561 - Item adicionado a requisicao por falta de saldo para atendimento.
											155087 - Item #@NR_SEQUENCIA#@ [#@CD_MATERIAL#@] - #@DS_MATERIAL#@.
											Quantidade atendida: #@QT_MATERIAL_ATENDIDA#@
											1213571 - Lote: #@NRLOTE#@
											1213572 - CNPJ: #@CD_CNPJ#@
											1213578 - Saldo consignado: #@QT_SALDO_CONSIGNADO#@
											1213574 - Quantidade faltante para atendimento: #@QT_FALTANTE#@ */
							
											ds_historico_w := substr(WHEB_MENSAGEM_PCK.get_texto(1213561) || chr(10)||chr(13)
																|| WHEB_MENSAGEM_PCK.get_texto(155087,	'NR_SEQUENCIA=' || nr_sequencia_w ||
																										';CD_MATERIAL=' || cd_material_estoque_w ||
																										';DS_MATERIAL=' || ds_material_w ||
																										';QT_MATERIAL_ATENDIDA=' || qt_atendida_p) || chr(10)||chr(13)
																|| WHEB_MENSAGEM_PCK.get_texto(1213571,	'NRLOTE=' || nr_seq_lote_fornec_w) || chr(10)||chr(13)
																|| WHEB_MENSAGEM_PCK.get_texto(1213572,	'CD_CNPJ=' || cd_cgc_fornecedor_w) || chr(10)||chr(13)
																|| WHEB_MENSAGEM_PCK.get_texto(1213578,	'QT_SALDO_CONSIGNADO=' || qt_saldo_consignado_w) || chr(10)||chr(13)
																|| WHEB_MENSAGEM_PCK.get_texto(1213574,	'QT_FALTANTE=' || qt_diferenca_w) || chr(10)||chr(13)
																|| chr(10)||chr(13)
																|| dbms_utility.format_call_stack,1,4000);
										end if;
									end;

								else
								begin
									ie_saldo_disp_w	:= 'N';
									ie_continua 	:= 'N';
								end;
								end if;
							end;
							else
							begin
								ie_saldo_disp_w	:= 'N';
								ie_continua 	:= 'N';
								qt_diferenca_w 	:= 0;
							end;
							end if;
						end;
						else
						begin
							if (ie_consignado_mat_w = '2' and  nr_seq_regra_w > 0)then /*vai baixar tudo*/
							begin
								qt_diferenca_w 				:= 0;
								qt_atendida_consignado_w 	:= qt_atendida_consignado_w + qt_atend_w;
								ie_saldo_disp_w				:= 'S';
								ie_continua 	 			:= 'N';
							end;
							else
							begin
								ie_saldo_disp_w	:= 'S';
								ie_continua 	:= 'N';
								qt_diferenca_w 	:= 0;
							end;
							end if;
						end;
						end if;
						end;
					end if;
				end if;
				end;
			end if;

			/* Fabio 03/02/2004 - Tratar o bloqueio de inventario (incluido o if do ie_bloqueio_inventario_w) */

			if (ie_saldo_disp_w = 'S') and (ie_bloqueio_inventario_w = 'N') then
				begin
				select nextval('movimento_estoque_seq')
				into STRICT nr_movimento_estoque_w
				;
				begin

				insert into movimento_estoque(
					nr_movimento_estoque,
					cd_estabelecimento,
					cd_local_estoque,
					dt_movimento_estoque,
					cd_operacao_estoque,
					cd_acao,
					cd_material,
					dt_mesano_referencia,
					qt_movimento,
					dt_atualizacao,
					nm_usuario,
					ie_origem_documento,
					nr_documento,
					nr_sequencia_item_docto,
					nr_sequencia_documento,
					vl_movimento,
					cd_unidade_medida_estoque,
					cd_setor_atendimento,
					qt_estoque,
					dt_processo,
					cd_local_estoque_destino,
					cd_centro_custo,
					cd_unidade_med_mov,
					cd_conta_contabil,
					cd_fornecedor,
					nr_seq_lote_fornec,
					dt_validade,
					cd_lote_fabricacao)
				SELECT	nr_movimento_estoque_w,
					c.cd_estabelecimento,
					cd_local_estoque_w,
					dt_atendimento_p,
					cd_operacao_estoque_w,
					ie_acao_p,
					cd_material_w,
					dt_atendimento_p,
					qt_atend_w,
					dt_atualizacao_w,
					nm_usuario_p,
					'2',
					a.nr_requisicao,
					b.nr_sequencia,
					0,
					0,
					b.cd_unidade_medida_estoque,
					a.cd_setor_atendimento,
					qt_atend_w,
					null,
					cd_local_estoque_destino_w,
					a.cd_centro_custo,
					b.cd_unidade_medida,
					b.cd_conta_contabil,
					CASE WHEN ie_acao_p='1' THEN cd_cgc_fornecedor_w  ELSE b.CD_CGC_FORNECEDOR END ,
					nr_seq_lote_fornec_w,
					dt_validade_w,
					ds_lote_fornec_w
				from	requisicao_material a,
					item_requisicao_material b,
					local_estoque c
				where	a.nr_requisicao = b.nr_requisicao
				and	a.cd_local_estoque = c.cd_local_estoque
				and	b.nr_requisicao = nr_requisicao_p
				and	b.nr_sequencia  = nr_sequencia_w;

				if (ie_atualiza_cabine_w = 'S') then
					begin
					if (ie_acao_p = 1) then
						qt_atendida_w := qt_atend_w * -1;
					elsif (ie_acao_p = 2) then
						qt_atendida_w := qt_atend_w;
					end if;

					begin
					CALL atualiza_item_cabine(	nm_usuario_p,cd_local_estoque_w,cd_material_w,
								qt_atendida_w,nr_seq_lote_fornec_w);
					exception
					when others then
						null;
					end;
					end;
				end if;

				exception
				when others then
					begin
					ds_erro_w	:= SQLERRM(SQLSTATE);
					/*(-20011,'Erro Incluir Movimento_estoque ' || chr(13) || chr(10) || DS_ERRO_W);*/

					CALL WHEB_MENSAGEM_PCK.exibir_mensagem_abort(196051,'DS_ERRO_W='||DS_ERRO_W);
					end;
				end;

				if (cd_operacao_correspondente_w IS NOT NULL AND cd_operacao_correspondente_w::text <> '') and
					((ie_tipo_requisicao_w <> 21) or ((ie_tipo_requisicao_w = 21) and (ie_acao_p = '2') and (dt_recebimento_item_w IS NOT NULL AND dt_recebimento_item_w::text <> ''))) then
						begin
						select nextval('movimento_estoque_seq')
					into STRICT nr_movimento_estoque_w
					;

						insert into movimento_estoque(
						nr_movimento_estoque,
						cd_estabelecimento,
						cd_local_estoque,
						dt_movimento_estoque,
						cd_operacao_estoque,
						cd_acao,
						cd_material,
						dt_mesano_referencia,
						qt_movimento,
						dt_atualizacao,
						nm_usuario,
						ie_origem_documento,
						nr_documento,
						nr_sequencia_item_docto,
						nr_sequencia_documento,
						vl_movimento,
						cd_unidade_medida_estoque,
						cd_setor_atendimento,
						qt_estoque,
						cd_local_estoque_destino,
						cd_centro_custo,
						cd_unidade_med_mov,
						cd_conta_contabil,
						cd_fornecedor,
						nr_seq_lote_fornec,
						dt_validade,
						cd_lote_fabricacao)
					SELECT	nr_movimento_estoque_w,
						a.cd_estabelecimento,
						cd_local_estoque_destino_w,
								dt_atendimento_p,
						cd_operacao_correspondente_w,
						ie_acao_p,
								cd_material_w,
						dt_atendimento_p,
						qt_atend_w,
						dt_atualizacao_w,
						nm_usuario_p,
						'2',
						a.nr_requisicao,
						b.nr_sequencia,
						0,
						0,
						b.cd_unidade_medida_estoque,
						a.cd_setor_atendimento,
						qt_atend_w,
						cd_local_estoque_w,
						a.cd_centro_custo,
						b.cd_unidade_medida,
						b.cd_conta_contabil,
						cd_cgc_fornecedor_w,
						nr_seq_lote_fornec_w,
						dt_validade_w,
						ds_lote_fornec_w
					from	requisicao_material a,
						item_requisicao_material b
					where	a.nr_requisicao = b.nr_requisicao
					and	b.nr_requisicao = nr_requisicao_p
					and	b.nr_sequencia  = nr_sequencia_w;

					if (ie_atualiza_cabine_w = 'S') then
						begin
						if (ie_acao_p = 1) then
							qt_atendida_w := qt_atend_w;
						elsif (ie_acao_p = 2) then
							qt_atendida_w := qt_atend_w * -1;
						end if;

						begin
						CALL atualiza_item_cabine(	nm_usuario_p, cd_local_estoque_destino_w, cd_material_w,
									qt_atendida_w, nr_seq_lote_fornec_w);
						exception
						when others then
							null;
						end;
						end;
					end if;

					end;
				end if;

				if (ie_acao_p = '1') then
					begin
					select	max(cd_pessoa_fisica)
					into STRICT	cd_pessoa_atend_w
					from	usuario
					where	nm_usuario = nm_usuario_p;

					begin
					update	item_requisicao_material
					set 	dt_atendimento 	= dt_atendimento_p,
						qt_material_atendida = qt_atend_w,
						cd_motivo_baixa	= cd_motivo_baixa_p,
						nm_usuario	= nm_usuario_p,
						dt_atualizacao	= clock_timestamp(),
						cd_pessoa_atende	= cd_pessoa_atend_w,
						qt_estoque	= dividir(qt_atend_w, qt_conv_estoque_consumo_w),
						cd_barras 	= cd_barras_p,
						cd_cgc_fornecedor = cd_cgc_fornecedor_w
					where	nr_requisicao	= nr_requisicao_p
					and	nr_sequencia	= nr_sequencia_w;
					exception
					when others then
						begin
						ds_lock_w := 	' select substr(''sid=''||b.session_id || ''#oracle_username='' || ' ||
								' substr(b.oracle_username,1,15) || ''#locked_mode=''|| ' ||
								' substr(decode (b.locked_mode, 0, ''NONE'', 1, ''NULL (NULL)'', 2, ''ROW-S (SS)'', 3, ''ROW-X (SX)'',' ||
								' 4, ''SHARE (S)'', 5, ''S/ROW-X (SSX)'', 6, ''EXCLUSIVE (X)'', b.locked_mode),1,15)||' ||
								'''#user_name=''||substr(b.os_user_name,1,15)||''#status=''||substr(c.status,1,15)||''#program=''||substr(c.program,1,15)||' ||
								'''#machine=''||substr(c.machine,1,15)||''#module=''||substr(c.MODULE,1,15)||'||
								'''#plsql=''||substr((select object_name from user_objects d where d.object_id = c.plsql_object_id),1,30),1,4000) ds_lock ' ||
								' from user_objects a, gv$locked_object b, gv$session c where a.object_id = b.object_id ' ||
								' and b.session_id = c.sid and rownum = 1 and a.object_name = ''ITEM_REQUISICAO_MATERIAL''';

						c001	:= dbms_sql.open_cursor;
						dbms_sql.parse(c001,ds_lock_w,dbms_sql.native);
						dbms_sql.define_column(c001, 1, vl_coluna_w, 4000);
						vl_resultado_w	:= dbms_sql.execute(c001);
						vl_resultado_w	:= dbms_sql.fetch_rows(c001);
						dbms_sql.column_value(c001,1,vl_coluna_w);
						dbms_sql.close_cursor(c001);
						ds_lock_w := coalesce(vl_coluna_w,'X');

						ds_erro_w	:=	substr(sqlerrm,1,500);
						code		:= 	SQLSTATE;

						ds_lock_w	:= 	substr(ds_lock_w ||  chr(13) || chr(10) || chr(13) || chr(10) ||
									ds_erro_w || chr(13) || chr(10) || chr(13) || chr(10) ||
									substr(dbms_utility.format_call_stack,1,1800),1,4000);
						rollback;

						CALL gerar_historico_requisicao(nr_requisicao_p, 'Deadlock', ds_lock_w, 'GM', nm_usuario_p);
						if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
							CALL wheb_mensagem_pck.exibir_mensagem_abort(267189,'DS_MENSAGEM='||ds_erro_w);
						end;
					end;

					select	count(*)
					into STRICT	qt_existe_w
					from	item_requisicao_material
					where	nr_requisicao	= nr_requisicao_p
					and	nr_sequencia	= nr_sequencia_w
					and	(cd_material_lido IS NOT NULL AND cd_material_lido::text <> '');

					nr_seq_cor_w	:= 102;

					if (qt_existe_w > 0) then
						nr_seq_cor_w	:= 103;
					end if;

					if (ie_tipo_requisicao_w = 21) then
						nr_seq_cor_w := 3414;
					end if;

					update 	item_requisicao_material
					set	nr_seq_cor_exec	= nr_seq_cor_w
					where	nr_requisicao	= nr_requisicao_p
					and	nr_sequencia	= nr_sequencia_w;
					end;
				else
					begin
					/* Ricardo 20/09/2004 - Alterei abaixo, ao voltar para pendente, coloquei o lote para null. OS 11396 - Rosane */

					update	item_requisicao_material
					set	dt_atendimento	 = NULL,
						qt_material_atendida	= 0,
						cd_motivo_baixa	= 0,
						nm_usuario	= nm_usuario_p,
						dt_atualizacao	= clock_timestamp(),
						cd_pessoa_atende	 = NULL,
						nr_seq_lote_fornec	 = NULL,
						cd_material_lido	 = NULL,
						nm_usuario_retirada	 = NULL,
						nr_seq_cor_exec	 = NULL,
						dt_recebimento	 = NULL,
						nm_usuario_receb	 = NULL
					where	nr_requisicao	= nr_requisicao_p
					and	nr_sequencia	= nr_sequencia_w;

					if (ie_consignado_mat_w = '2' and nr_seq_regra_w > 0) then
						update	item_requisicao_material
						set		cd_cgc_fornecedor  = NULL
						where	nr_requisicao	= nr_requisicao_p
						and	nr_sequencia	= nr_sequencia_w;
					end if;

					update item_requisicao_material
					set	nr_seq_cor_exec	= 103
					where	nr_requisicao	= nr_requisicao_p
					and	nr_sequencia	= nr_sequencia_w
					and	coalesce(nr_seq_cor_exec::text, '') = '';
					end;
				end if;

				/* Tratar consumo de consignados  */

				if (ie_acao_p = '2') and (ie_consignado_Mat_w = 1) or
					(cd_cgc_fornecedor_w IS NOT NULL AND cd_cgc_fornecedor_w::text <> '' AND ie_consignado_Mat_w = 2) then

					SELECT * FROM Obter_Regra_Ordem_Consignado(cd_estabelecimento_w, cd_local_estoque_w, cd_operacao_estoque_w, cd_material_w, cd_cgc_fornecedor_w, 0, 0, ie_gera_ordem_w, cd_local_entrega_w, cd_centro_custo_w, pr_desconto_w, nm_usuario_dest_w, cd_perfil_comunic_w, cd_pessoa_solicitante_w, ie_gera_oc_reposicao_w) INTO STRICT ie_gera_ordem_w, cd_local_entrega_w, cd_centro_custo_w, pr_desconto_w, nm_usuario_dest_w, cd_perfil_comunic_w, cd_pessoa_solicitante_w, ie_gera_oc_reposicao_w;

					if (ie_gera_ordem_w = 'S')  then
						select	coalesce(obter_ordem_atend_consignado(cd_estabelecimento_w, cd_cgc_fornecedor_w, cd_local_entrega_w, nr_requisicao_p, 0, 0,'G'),0)
						into STRICT	nr_ordem_compra_w
						;

						if (ie_consiste_oc_aprovada_w = 'S') and (ie_acao_p = '2') and (nr_ordem_compra_w > 0) then

							select	dt_aprovacao
							into STRICT	dt_aprovacao_w
							from	ordem_compra
							where	nr_ordem_compra = nr_ordem_compra_w;

							if (dt_aprovacao_w IS NOT NULL AND dt_aprovacao_w::text <> '') then
								CALL WHEB_MENSAGEM_PCK.exibir_mensagem_abort(196047,'NR_ORDEM_COMPRA_W='||NR_ORDEM_COMPRA_W);
								/*(-20011,'Nao eh possivel estornar a baixa deste item, pois a ordem de compra numero ' || NR_ORDEM_COMPRA_W ||' (que foi gerada no atendimento  deste  item) ' ||
												'ja esta aprovada. Verifique o parametro [65]. Para realizar essa acao, deve ser estornado a aprovacao da ordem');*/
							end if;
						end if;

						if (nr_ordem_compra_w > 0) then
							select	coalesce(min(b.nr_item_oci),0)
							into STRICT	nr_item_oci_w
							from	ordem_compra_item b
							where	b.nr_ordem_compra = nr_ordem_compra_w
							and	b.cd_material in (
								SELECT	x.cd_material
								from	material x
								where	x.cd_material_estoque = cd_material_w
								
union

								SELECT	x.cd_material
								from	material x
								where	x.cd_material	= cd_material_w)
							and	b.qt_material >= qt_atend_w;

							if (nr_item_oci_w > 0) then

								update	ordem_compra_item
								set	qt_material	= qt_material - qt_atend_w,
									vl_total_item = round(( (qt_material - qt_atend_w) * vl_unitario_material),4)
								where	nr_ordem_compra	= nr_ordem_compra_w
								and	nr_item_oci	= nr_item_oci_w;

								update	ordem_compra_item_entrega
								set	qt_prevista_entrega	= qt_prevista_entrega - qt_atend_w
								where	nr_ordem_compra	= nr_ordem_compra_w
								and	nr_item_oci	= nr_item_oci_w
								and	dt_prevista_entrega	=
									(SELECT max(dt_prevista_entrega)
									from	ordem_compra_item_entrega
									where	nr_ordem_compra	= nr_ordem_compra_w
									and	nr_item_oci	= nr_item_oci_w
									and	coalesce(dt_cancelamento::text, '') = '');

								select	coalesce(sum(qt_material),0)
								into STRICT	qt_item_ordem_w
								from	ordem_compra_item
								where	nr_ordem_compra	= nr_ordem_compra_w
								and	nr_item_oci	= nr_item_oci_w;

								if (qt_item_ordem_w = 0) then
									delete from	ordem_compra_item
									where	nr_ordem_compra	= nr_ordem_compra_w
									and	nr_item_oci	= nr_item_oci_w;
								end if;
							end if;
						end if;
					end if;
				end if;

				if (ie_acao_p = '1') and
					((ie_consignado_Mat_w = 1) or ((cd_cgc_fornecedor_w IS NOT NULL AND cd_cgc_fornecedor_w::text <> '') and ie_consignado_Mat_w = 2)) then
					begin

					SELECT * FROM Obter_Regra_Ordem_Consignado(cd_estabelecimento_w, cd_local_estoque_w, cd_operacao_estoque_w, cd_material_w, cd_cgc_fornecedor_w, 0, 0, ie_gera_ordem_w, cd_local_entrega_w, cd_centro_custo_w, pr_desconto_w, nm_usuario_dest_w, cd_perfil_comunic_w, cd_pessoa_solicitante_w, ie_gera_oc_reposicao_w) INTO STRICT ie_gera_ordem_w, cd_local_entrega_w, cd_centro_custo_w, pr_desconto_w, nm_usuario_dest_w, cd_perfil_comunic_w, cd_pessoa_solicitante_w, ie_gera_oc_reposicao_w;
					ds_comunicacao_w :=	WHEB_MENSAGEM_PCK.get_texto(280833) || cd_material_w || ' ' || ds_material_w || CHR(10) ||
								WHEB_MENSAGEM_PCK.get_texto(280834) || qt_atend_w || CHR(10) ||
								WHEB_MENSAGEM_PCK.get_texto(280837) || nr_requisicao_p || CHR(10) ||
								WHEB_MENSAGEM_PCK.get_texto(280838) || ds_operacao_w;

					if (ie_gera_ordem_w in ('S','A','O'))  then
						CALL gerar_ordem_compra_Req_consig(
							cd_estabelecimento_w,
							cd_cgc_fornecedor_w,
							cd_local_entrega_w,
							cd_material_w,
							qt_atend_w,
							nm_usuario_p,
							nr_requisicao_p,
							ie_acao_p,
							nr_sequencia_w);
						if (ie_gera_ordem_w = 'A') then
							CALL Gerar_comunic_consignado(nm_usuario_p,nm_usuario_dest_w,ds_comunicacao_w,cd_perfil_comunic_w);
						end if;

						if (ie_gera_ordem_w = 'O') then
							lista_usuario_w	:= substr(nm_usuario_dest_w,1,2000);

							while(lista_usuario_w IS NOT NULL AND lista_usuario_w::text <> '') and (trim(both lista_usuario_w) <> ',') loop
								tam_lista_w		:= length(lista_usuario_w);
								ie_pos_virgula_w	:= position(',' in lista_usuario_w);
								if (ie_pos_virgula_w <> 0) then
									nm_usuario_w	:= substr(lista_usuario_w,1,(ie_pos_virgula_w - 1));
									lista_usuario_w	:= substr(lista_usuario_w,(ie_pos_virgula_w + 2), tam_lista_w);

									select	trim(both max(ds_email))
									into STRICT	ds_email_usuario_w
									from	usuario
									where	nm_usuario = nm_usuario_w;

									if (coalesce(ds_email_usuario_w,'X') <> 'X') then
										begin
										ds_lista_email_usuario_w	:= substr(ds_lista_email_usuario_w||ds_email_usuario_w||',',1,2000);
										end;
									end if;
								else
									lista_usuario_w	:= null;
								end if;
							end loop;

							if (coalesce(ds_lista_email_usuario_w,'X') <> 'X') then
								begin
								CALL Enviar_Email(WHEB_MENSAGEM_PCK.get_texto(301563),ds_comunicacao_w, null, ds_lista_email_usuario_w, nm_usuario_p,'M');
								exception
								when others then
									null;
								end;
							end if;
						end if;
					elsif (ie_gera_ordem_w = 'C') then
						CALL Gerar_comunic_consignado(nm_usuario_p,nm_usuario_dest_w,ds_comunicacao_w,cd_perfil_comunic_w);
					elsif (ie_gera_ordem_w = 'E') then
						lista_usuario_w	:= substr(nm_usuario_dest_w,1,2000);

						while(lista_usuario_w IS NOT NULL AND lista_usuario_w::text <> '') and (trim(both lista_usuario_w) <> ',') loop
							tam_lista_w		:= length(lista_usuario_w);
							ie_pos_virgula_w	:= position(',' in lista_usuario_w);
							if (ie_pos_virgula_w <> 0) then
								nm_usuario_w	:= substr(lista_usuario_w,1,(ie_pos_virgula_w - 1));
								lista_usuario_w	:= substr(lista_usuario_w,(ie_pos_virgula_w + 2), tam_lista_w);

								select	trim(both max(ds_email))
								into STRICT	ds_email_usuario_w
								from	usuario
								where	nm_usuario = nm_usuario_w;

								if (coalesce(ds_email_usuario_w,'X') <> 'X') then
									begin
									ds_lista_email_usuario_w	:= substr(ds_lista_email_usuario_w||ds_email_usuario_w||',',1,2000);
									end;
								end if;
							else
								lista_usuario_w	:= null;
							end if;
						end loop;

						if (coalesce(ds_lista_email_usuario_w,'X') <> 'X') then
							begin
							CALL Enviar_Email(WHEB_MENSAGEM_PCK.get_texto(301563),ds_comunicacao_w, null, ds_lista_email_usuario_w, nm_usuario_p,'M');
							exception
							when others then
								null;
							end;
						end if;
					end if;
					end;
				end if;

				if (nr_seq_kit_estoque_w > 0) and (ie_origem_requisicao_w = 'RKT') and (ie_acao_p = '1') then

					select	max(nr_sequencia)
					into STRICT	nr_seq_kit_novo_w
					from	kit_estoque
					where	nr_seq_kit_origem = nr_seq_kit_estoque_w;

					if (coalesce(nr_seq_kit_novo_w::text, '') = '') then
						CALL sup_duplicar_montagem_kit(nr_seq_kit_estoque_w,1,nm_usuario_p);

						select	max(nr_sequencia)
						into STRICT	nr_seq_kit_novo_w
						from	kit_estoque
						where	nr_seq_kit_origem = nr_seq_kit_estoque_w;

						update	kit_estoque
						set	cd_setor_destino  = NULL
						where	nr_sequencia = nr_seq_kit_novo_w;
					end if;

					open c01;
					loop
					fetch c01 into
						qt_material_kit_comp_w,
						nr_seq_kit_estoque_comp_w;
					EXIT WHEN NOT FOUND; /* apply on c01 */
						begin
						if (qt_material_kit_comp_w > qt_material_w) then
							qt_material_kit_comp_w := qt_material_w;
						end if;

						ds_erro_w := consist_componente_kit_barra(cd_material_w, nr_seq_kit_novo_w, qt_material_kit_comp_w, nm_usuario_p, ie_consiste_quant_w, ie_consiste_material_w, nr_seq_lote_fornec_w, nr_seq_kit_estoque_comp_w, 'C', ds_erro_w);

						qt_material_w := qt_material_w - qt_material_kit_comp_w;
						if (qt_material_w <= 0) then
							exit;
						end if;

						end;
					end loop;
					close c01;

					select	min(b.dt_validade)
					into STRICT	dt_validade_minima_w
					from	kit_estoque_comp a,
						material_lote_fornec b
					where	a.nr_seq_lote_fornec = b.nr_sequencia
					and	a.nr_seq_kit_estoque = nr_seq_kit_novo_w;

					update	kit_estoque
					set	dt_validade = dt_validade_minima_w
					where	nr_sequencia = nr_seq_kit_novo_w;
				end if;

				end;
			else
				begin
				ie_continua := 'N';

				/* Fabio 03/02/2004 - Tratar o bloqueio de inventario (mensagem caso esteja bloqueado) */

				if (ie_bloqueio_inventario_w = 'S') then
					begin
					ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(280839) || cd_material_w || ' - ' || ds_material_w ||
					WHEB_MENSAGEM_PCK.get_texto(280840);

					CALL gravar_consistencia_requisicao(
						nr_requisicao_p,
						cd_material_w,
						1,
						-- O material #@DS_MATERIAL#@ esta bloqueado para inventario no local de estoque #@DS_LOCAL_ESTOQUE#@.
						WHEB_MENSAGEM_PCK.get_texto(354932, 'DS_MATERIAL=' || ds_material_w || ';DS_LOCAL_ESTOQUE=' || obter_desc_local_estoque(cd_local_estoque_w)),
						'',
						'',
						nm_usuario_p);
					end;
				elsif (ie_saldo_disp_w = 'N') then
					begin
					select	qt_material_requisitada
					into STRICT	qt_mat_requisitado_w
					from	item_requisicao_material
					where	nr_requisicao = nr_requisicao_p
					and	nr_sequencia  = nr_sequencia_w;

					if (qt_saldo_consignado_w IS NOT NULL AND qt_saldo_consignado_w::text <> '') then
						qt_saldo_disp_w := qt_saldo_consignado_w;
					else
						begin
						qt_saldo_disp_w := obter_saldo_disp_estoque(cd_estabelecimento_w, cd_material_w, cd_local_estoque_w, trunc(clock_timestamp(),'mm'), nr_seq_lote_fornec_w);

						if (ie_disp_req_trans_w = 'S') and (ie_tipo_requisicao_w in (2,21)) then
							begin
							/*Sidnei - 17/09/2011 - OS 353667
							Tratamento necessario, pois se for considerado a quantidade em requisicao no disponivel, esta quantidade sera diminuida na function obter_saldo_disp_estoque.
							O local tem estoque disponivel, mas foi diminuido para atender a requisicao*/
							select	sum(coalesce(a.qt_estoque, 0)) - sum(coalesce(a.qt_material_atendida, 0)) qt_material
							into STRICT	qt_requisicao_transf_w
							from	operacao_estoque o,
								requisicao_material b,
								item_requisicao_material a
							where	a.nr_requisicao		= b.nr_requisicao
							and	b.cd_operacao_estoque	= o.cd_operacao_estoque
							and	b.cd_estabelecimento	= cd_estabelecimento_w
							and	b.cd_local_estoque	= cd_local_estoque_w
							and	o.ie_tipo_requisicao	= '2'
							and	obter_tipo_motivo_baixa_req(a.cd_motivo_baixa)		= 0
							and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
							and	a.cd_material in (
								SELECT	x.cd_material
								from	material x
								where	x.cd_material_estoque = cd_material_w);

							qt_saldo_disp_w := qt_saldo_disp_w + qt_requisicao_transf_w;

							end;
						end if;
						end;
					end if;
					if	((ie_consignado_mat_w <> '2') or (ie_consignado_mat_w = '2' and coalesce(nr_seq_regra_w,0) = 0))then
						begin
							ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(280841) || cd_material_w || ' - ' || ds_material_w
									|| WHEB_MENSAGEM_PCK.get_texto(280842) || (qt_mat_requisitado_w/qt_conv_estoque_consumo_w) || WHEB_MENSAGEM_PCK.get_texto(280844) || qt_saldo_disp_w || ')'
									|| chr(13) || chr(10);

							CALL gravar_consistencia_requisicao(
								nr_requisicao_p,
								cd_material_w,
								1,
								-- Nao ha saldo disponivel no local de estoque #@DS_LOCAL_ESTOQUE#@ para realizar a baixa do material #@DS_MATERIAL#@.
								WHEB_MENSAGEM_PCK.get_texto(354949, 'DS_LOCAL_ESTOQUE=' || obter_desc_local_estoque(cd_local_estoque_w) || ';DS_MATERIAL=' || ds_material_w),
								'',
								'',
								nm_usuario_p);
						end;
						end if;
					end;
				end if;
				end;
			end if;
			end;
		else
			begin
				ie_continua := 'N';
				qt_diferenca_w := 0;
				CALL wheb_mensagem_pck.exibir_mensagem_abort(517114,'CD_MATERIAL=' || cd_material_w);
			end;
			end if;
		end;
	else
		begin
			ie_continua := 'N';
			qt_diferenca_w := 0;
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1109280,'CD_MATERIAL=' || cd_material_w);
		end;
	end if;

	if ((qt_diferenca_w > 0) and ((ie_acao_p = '1') and (coalesce(dt_atendimento_w::text, '') = '')) and ie_continua = 'S' and ie_consignado_mat_w = '2' and nr_seq_regra_w > 0)then
		begin
			select	max(nr_sequencia)
			into STRICT	nr_seq_w
			from	item_requisicao_material
			where	nr_requisicao	= nr_requisicao_p;

			update	item_requisicao_material
			set	QT_MATERIAL_REQUISITADA	= (SELECT qt_material_atendida from item_requisicao_material where nr_requisicao = nr_requisicao_p and nr_sequencia = nr_sequencia_w)
			where	nr_requisicao	= nr_requisicao_p
			and	nr_sequencia	= nr_sequencia_w;

			nr_sequencia_w := nr_seq_w +1;

			insert into item_requisicao_material(
			nr_requisicao,
			nr_sequencia,
			cd_estabelecimento,
			cd_material,
			qt_material_requisitada,
			qt_material_atendida,
			vl_material,
			dt_atualizacao,
			nm_usuario,
			cd_unidade_medida,
			cd_pessoa_recebe,
			cd_pessoa_atende,
			cd_motivo_baixa,
			qt_estoque,
			cd_unidade_medida_estoque,
			cd_conta_contabil,
			cd_material_req,
			ie_geracao,
			cd_cgc_fornecedor,
			cd_barras,
			nr_seq_kit_estoque)
			SELECT	nr_requisicao,
				nr_sequencia_w,
				cd_estabelecimento_w,
				cd_material_w,
				qt_diferenca_w,
				qt_diferenca_w,
				vl_material,
				clock_timestamp(),
				nm_usuario_p,
				cd_unidade_medida,
				cd_pessoa_recebe,
				cd_pessoa_atende,
				0,
				qt_diferenca_w,
				cd_unidade_medida_estoque,
				cd_conta_contabil,
				cd_material_req,
				'S',
				cd_cgc_fornecedor,
				cd_barras_p,
				nr_seq_kit_estoque
				from	item_requisicao_material
				where	nr_requisicao = nr_requisicao_p
				and	nr_sequencia  = nr_sequencia_p;

			insert into requisicao_mat_historico(
				nr_sequencia,
				nr_requisicao,
				dt_atualizacao,
				nm_usuario,
				dt_historico,
				ds_titulo,
				ds_historico,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_tipo,
				cd_evento,
				dt_liberacao,
				nm_usuario_lib)
			values (nextval('requisicao_mat_historico_seq'),
				nr_requisicao_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				WHEB_MENSAGEM_PCK.get_texto(355122),
				ds_historico_w,
				clock_timestamp(),
				nm_usuario_p,
				'S',
				'AR',
				clock_timestamp(),
				nm_usuario_p);
		end;
	elsif ((qt_diferenca_w > 0) and ((ie_acao_p = '1') and (coalesce(dt_atendimento_w::text, '') = '')) and ie_continua = 'N' and ie_consignado_mat_w = '2' and nr_seq_regra_w > 0)then
	begin
		update	item_requisicao_material
		set	qt_material_atendida	= 0, qt_estoque	= 0
		where	nr_requisicao	= nr_requisicao_p
		and	nr_sequencia	= nr_sequencia_w;

		update	item_requisicao_material
		set	qt_material_requisitada	= qt_material_atendida
		where	nr_requisicao	= nr_requisicao_p
		and	nr_sequencia	= nr_sequencia_w -1;
	end;
	end if;

	qt_controle_w := qt_controle_w +1;

	if (((qt_diferenca_w > 0) and (qt_atendida_p = (qt_atendida_consignado_w + qt_estoque_proprio_w))) or (qt_diferenca_w = 0) or (ie_continua = 'N') and (ie_consignado_mat_w = '2' AND nr_seq_regra_w > 0))then
	begin
		qt_diferenca_w := 0;
		ie_continua := 'N';
	end;
	elsif (ie_consignado_mat_w = '2' and nr_seq_regra_w > 0)then
	begin
		ie_continua := 'S';
		qt_atend_w := qt_diferenca_w;
	end;
	else
		ie_continua := 'N';
		qt_diferenca_w := 0;
	end if;
	end;

	if (qt_controle_w >= 500)then --deve sair pois entrou em loop
	begin	
		ie_continua := 'N';
		qt_diferenca_w := 0;
	end;
	end if;	
end loop;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_movto_estoque_req ( nr_requisicao_p bigint, nr_sequencia_p bigint, cd_operacao_estoque_p bigint, qt_atendida_p bigint, dt_atendimento_p timestamp, cd_motivo_baixa_p bigint, ie_acao_p text, ie_baixa_sem_saldo_p text, nm_usuario_p text, cd_barras_p text, ds_erro_p INOUT text) FROM PUBLIC;

