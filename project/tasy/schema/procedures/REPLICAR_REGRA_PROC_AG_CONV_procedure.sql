-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE replicar_regra_proc_ag_conv ( cd_agenda_copia_p bigint, cd_estabelecimento_p bigint, cd_tipo_agenda_p bigint, nm_usuario_p text, nr_sequencia_p bigint, cd_convenio_p bigint) AS $body$
DECLARE


/* globais */

cd_medico_w			varchar(10);

/* agendas */

cd_agenda_w			bigint;

/* regras exame x convenio */

nr_seq_regra_w			bigint;
cd_convenio_w			integer;
cd_area_proc_w			bigint;
cd_especialidade_w		bigint;
cd_grupo_proc_w			bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_proc_interno_w		bigint;
ie_permite_w			varchar(1);
nr_seq_regra_ww			bigint;
nr_seq_grupo_w			bigint;
nr_seq_subgrupo_w		bigint;
nr_seq_forma_org_w		bigint;
cd_plano_w			varchar(10);
cd_municipio_ibge_w		agenda_regra.cd_municipio_ibge%type;
qt_regra_w			agenda_regra.qt_regra%type;
ie_dia_semana_w			agenda_regra.ie_dia_semana%type;
dt_inicio_agenda_w		agenda_regra.dt_inicio_agenda%type;
dt_fim_agenda_w			agenda_regra.dt_fim_agenda%type;
dt_inicio_vigencia_w		agenda_regra.dt_inicio_vigencia%type;
dt_fim_vigencia_w		agenda_regra.dt_fim_vigencia%type;
ds_mensagem_w			agenda_regra.ds_mensagem%type;
hr_inicio_w			agenda_regra.hr_inicio%type;
hr_fim_w			agenda_regra.hr_fim%type;
qt_idade_min_w			agenda_regra.qt_idade_min%type;
qt_idade_max_w			agenda_regra.qt_idade_max%type;
ie_consiste_qtd_hora_w		agenda_regra.ie_consiste_qtd_hora%type;
ie_convenio_qtd_w		agenda_regra.ie_convenio_qtd%type;
ie_estrutura_qtd_w		agenda_regra.ie_estrutura_qtd%type;
cd_empresa_ref_w		agenda_regra.cd_empresa_ref%type;	
cd_perfil_w			agenda_regra.cd_perfil%type;	
ie_medico_w			agenda_regra.ie_medico%type;	
ie_forma_consistencia_w		agenda_regra.ie_forma_consistencia%type;
nr_seq_reg_qtd_w		agenda_regra_quantidade.nr_sequencia%type;
ie_forma_cons_reg_qtd_w		agenda_regra_quantidade.ie_forma_consistencia%type;
qt_regra_reg_qtd_w		agenda_regra_quantidade.qt_regra%type;
ie_situacao_reg_qtd_w		agenda_regra_quantidade.ie_situacao%type;
ds_mensagem_reg_qtd_w		agenda_regra_quantidade.ds_mensagem%type;
ie_validar_dias_semana_w	agenda_regra.ie_validar_dias_semana%type;
ie_agenda_w                 agenda_regra.ie_agenda%type;

/* obter regras exame x convenio */

c01 CURSOR FOR
	SELECT	cd_convenio,
		cd_area_proc,
		cd_especialidade,
		cd_grupo_proc,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno,
		cd_medico,
		ie_permite,
		nr_sequencia,
		nr_seq_grupo,
		nr_seq_subgrupo,
		nr_seq_forma_org,
		cd_plano_convenio,
		cd_municipio_ibge,
		qt_regra,
		ie_dia_semana,
		dt_inicio_agenda,
		dt_fim_agenda,
		dt_inicio_vigencia,
		dt_fim_vigencia,
		ds_mensagem,
		hr_inicio,
		hr_fim,
		qt_idade_min,
		qt_idade_max,
		ie_consiste_qtd_hora,
		ie_convenio_qtd,
		ie_estrutura_qtd,
		cd_empresa_ref,
		cd_perfil,
		ie_medico,
		ie_forma_consistencia,
		ie_validar_dias_semana,
		ie_agenda
	from	agenda_regra
	where	cd_agenda = cd_agenda_copia_p
	and	nr_sequencia = coalesce(nr_sequencia_p,nr_sequencia);

/* obter regras quantidade x forma consistencia */

C02 CURSOR FOR
	SELECT	ie_forma_consistencia,
			qt_regra,
			ie_situacao,
			ds_mensagem
	from	agenda_regra_quantidade
	where	nr_seq_regra = nr_seq_regra_ww
	order by nr_seq_regra;


BEGIN
if (cd_agenda_copia_p IS NOT NULL AND cd_agenda_copia_p::text <> '') and (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and (cd_tipo_agenda_p IS NOT NULL AND cd_tipo_agenda_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then

	
	/* gera regras */

	open c01;
	loop
	fetch c01 into	cd_convenio_w,
				cd_area_proc_w,
				cd_especialidade_w,
				cd_grupo_proc_w,
				cd_procedimento_w,
				ie_origem_proced_w,
				nr_seq_proc_interno_w,
				cd_medico_w,
				ie_permite_w,
				nr_seq_regra_ww,
				nr_seq_grupo_w,
				nr_seq_subgrupo_w,
				nr_seq_forma_org_w,
				cd_plano_w,
				cd_municipio_ibge_w,
				qt_regra_w,
				ie_dia_semana_w,
				dt_inicio_agenda_w,
				dt_fim_agenda_w,
				dt_inicio_vigencia_w,
				dt_fim_vigencia_w,
				ds_mensagem_w,
				hr_inicio_w,
				hr_fim_w,
				qt_idade_min_w,
				qt_idade_max_w,
				ie_consiste_qtd_hora_w,
				ie_convenio_qtd_w,
				ie_estrutura_qtd_w,
				cd_empresa_ref_w,
				cd_perfil_w,
				ie_medico_w,
				ie_forma_consistencia_w,
				ie_validar_dias_semana_w,
				ie_agenda_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		select	nextval('agenda_regra_seq')
		into STRICT	nr_seq_regra_w
		;

		/* gera regras  quantidade*/

		insert into agenda_regra(
						nr_sequencia,
						cd_estabelecimento,
						cd_agenda,
						dt_atualizacao,
						nm_usuario,
						ie_permite,
						cd_convenio,
						cd_area_proc,
						cd_especialidade,
						cd_grupo_proc,
						cd_procedimento,
						ie_origem_proced,
						cd_medico,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_proc_interno,
						nr_seq_regra,
						nr_seq_grupo,
						nr_seq_subgrupo,
						nr_seq_forma_org,
						cd_plano_convenio,
						cd_municipio_ibge,
						qt_regra,
						ie_dia_semana,
						dt_inicio_agenda,
						dt_fim_agenda,
						dt_inicio_vigencia,
						dt_fim_vigencia,
						ds_mensagem,
						hr_inicio,
						hr_fim,
						qt_idade_min,
						qt_idade_max,
						ie_consiste_qtd_hora,
						ie_convenio_qtd,
						ie_estrutura_qtd,
						cd_empresa_ref,
						cd_perfil,
						ie_medico,
						ie_forma_consistencia,
						ie_validar_dias_semana,
						ie_agenda
						)
					values (
						nr_seq_regra_w,
						cd_estabelecimento_p,
						cd_agenda_copia_p,
						clock_timestamp(),
						nm_usuario_p,
						ie_permite_w,
						cd_convenio_p,
						cd_area_proc_w,
						cd_especialidade_w,
						cd_grupo_proc_w,
						cd_procedimento_w,
						ie_origem_proced_w,
						cd_medico_w,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_proc_interno_w,
						nr_seq_regra_ww,
						nr_seq_grupo_w,
						nr_seq_subgrupo_w,
						nr_seq_forma_org_w,
						cd_plano_w,
						cd_municipio_ibge_w,
						qt_regra_w,
						ie_dia_semana_w,
						dt_inicio_agenda_w,
						dt_fim_agenda_w,
						dt_inicio_vigencia_w,
						dt_fim_vigencia_w,
						ds_mensagem_w,
						hr_inicio_w,
						hr_fim_w,
						qt_idade_min_w,
						qt_idade_max_w,
						ie_consiste_qtd_hora_w,
						ie_convenio_qtd_w,
						ie_estrutura_qtd_w,
						cd_empresa_ref_w,
						cd_perfil_w,
						ie_medico_w,
						ie_forma_consistencia_w,
						ie_validar_dias_semana_w,
						ie_agenda_w
						);
						
		if (nr_seq_regra_ww IS NOT NULL AND nr_seq_regra_ww::text <> '') and (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
			CALL ageint_gerar_info_tabela('AGENDA_REGRA_PROC', nr_seq_regra_ww, nr_seq_regra_w);
		end if;
						
		if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
			open C02;
			loop
			fetch C02 into	
				ie_forma_cons_reg_qtd_w,
				qt_regra_reg_qtd_w,
				ie_situacao_reg_qtd_w,
				ds_mensagem_reg_qtd_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				
				select	nextval('agenda_regra_quantidade_seq')
				into STRICT	nr_seq_reg_qtd_w
				;
				
				insert into agenda_regra_quantidade(
								nr_sequencia,
								ie_forma_consistencia,
								qt_regra,
								nr_seq_regra,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								ie_situacao,
								ds_mensagem
								)
							values (
								nr_seq_reg_qtd_w,
								ie_forma_cons_reg_qtd_w,
								qt_regra_reg_qtd_w,
								nr_seq_regra_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								ie_situacao_reg_qtd_w,
								ds_mensagem_reg_qtd_w
								);
													
				
				end;
			end loop;
			close C02;
		end if;
		end;
	end loop;
	close c01;	
		
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE replicar_regra_proc_ag_conv ( cd_agenda_copia_p bigint, cd_estabelecimento_p bigint, cd_tipo_agenda_p bigint, nm_usuario_p text, nr_sequencia_p bigint, cd_convenio_p bigint) FROM PUBLIC;

