-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_status_justifica ( nr_seq_aud_item_p bigint, ie_origem_p text, ds_historico_justific_p text, nm_usuario_p text) AS $body$
DECLARE

/*
  ie_origem
       'A' - Analise
       'I' - Itens da analise
*/
				

nr_seq_guia_w			bigint;
nr_seq_requisicao_w		bigint;
nr_seq_grupo_w			bigint;
nr_seq_aud_grupo_w		bigint;
ds_historico_w			varchar(4000);
nr_seq_material_w		pls_material.nr_sequencia%type;
cd_material_w			numeric(20);
ds_material_w			varchar(80);
cd_procedimento_w		integer;
ie_origem_proced_w		bigint;
ds_procedimento_w		varchar(80);
ds_itens_pendentes_w		varchar(4000);
ds_procedimentos_pendentes_w	varchar(4000);
ds_materiais_pendentes_w	varchar(4000);
ie_regulacao_w				varchar(1) := 'S';

C01 CURSOR FOR
	SELECT		cd_procedimento,
			ie_origem_proced,
			nr_seq_material
	from		pls_auditoria_item
	where		nr_seq_auditoria	= nr_seq_aud_item_p
	and		ie_status	= 'J'
	order by 	cd_procedimento,
			nr_seq_material;


BEGIN

if (ie_origem_p = 'A') then
	update	pls_auditoria
	set	ie_status	= 'AJ',
		dt_atualizacao	= clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where	nr_sequencia	= nr_seq_aud_item_p;
	
	begin
		select	coalesce(nr_seq_guia,0),
			coalesce(nr_seq_requisicao,0)
		into STRICT	nr_seq_guia_w,
			nr_seq_requisicao_w
		from	pls_auditoria
		where	nr_sequencia	= nr_seq_aud_item_p;
	exception
	when others then
		nr_seq_guia_w		:= 0;
		nr_seq_requisicao_w	:= 0;
	end;
	
	nr_seq_aud_grupo_w	:= pls_obter_grupo_analise_atual(nr_seq_aud_item_p);
	
	select	max(nr_seq_grupo)
	into STRICT	nr_seq_grupo_w
	from	pls_auditoria_grupo
	where	nr_sequencia	= nr_seq_aud_grupo_w;
	
	ds_historico_w := substr('O auditor '||obter_nome_usuario(nm_usuario_p)|| ' solicitou justificativa: '|| ds_historico_justific_p,1,4000);
	
	if (nr_seq_guia_w	<> 0) then
		insert	into pls_guia_plano_historico(nr_sequencia, nr_seq_guia, dt_historico,
			 dt_atualizacao, nm_usuario, ds_observacao,
			 ie_origem_historico, ie_tipo_historico, nr_seq_grupo)
		values (nextval('pls_guia_plano_historico_seq'), nr_seq_guia_w, clock_timestamp(),
			 clock_timestamp(), nm_usuario_p, ds_historico_w,
			 'M', 'J', nr_seq_grupo_w);
	elsif (nr_seq_requisicao_w	<> 0) then
		insert	into pls_requisicao_historico(nr_sequencia, nr_seq_requisicao, ie_tipo_historico,
			 ds_historico, dt_atualizacao, nm_usuario,
			 dt_historico, ie_origem_historico, nr_seq_grupo)
		values (nextval('pls_requisicao_historico_seq'), nr_seq_requisicao_w, 'J',
			 ds_historico_w, clock_timestamp(), nm_usuario_p,
			 clock_timestamp(), 'M', nr_seq_grupo_w);
			
		Begin	 
		
		CALL Alterar_status_regulacao(null,10,ds_historico_w,obter_nome_usuario(nm_usuario_p),null,null,nr_seq_requisicao_w,'N');
		
		exception		
		when others then
			ie_regulacao_w		:= 'N';
		end;	

		open C01;
		loop
		fetch C01 into	
			cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_material_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
				if	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
					ds_procedimento_w	:= substr(obter_descricao_procedimento(cd_procedimento_w, ie_origem_proced_w), 1,80);
					ds_procedimentos_pendentes_w	:= ds_procedimentos_pendentes_w || cd_procedimento_w || ' - ' || ds_procedimento_w || chr(13) || chr(10) || '';
				elsif	(nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
					cd_material_w	:= pls_obter_seq_codigo_material(nr_seq_material_w, '');
					ds_material_w	:= substr(pls_obter_desc_material(nr_seq_material_w), 1, 80);
					ds_materiais_pendentes_w	:= ds_materiais_pendentes_w || coalesce(cd_material_w, nr_seq_material_w) || ' - ' || ds_material_w || chr(13) || chr(10) || '';
				end if;
			end;
		end loop;
		close C01;
		
		if 	(ds_procedimentos_pendentes_w IS NOT NULL AND ds_procedimentos_pendentes_w::text <> '') then
			ds_itens_pendentes_w 	:= substr('Procedimentos:' || chr(13) || chr(10) || ds_procedimentos_pendentes_w || chr(13) || chr(10) || '', 1, 4000);
		end if;

		if 	(ds_materiais_pendentes_w IS NOT NULL AND ds_materiais_pendentes_w::text <> '') then
			ds_itens_pendentes_w	:= substr(ds_itens_pendentes_w || 'Materiais:' || chr(13) || chr(10) || ds_materiais_pendentes_w || chr(13) || chr(10) || '', 1, 4000);
		end if;
		
		if 	(ds_itens_pendentes_w IS NOT NULL AND ds_itens_pendentes_w::text <> '') then
			ds_historico_w := substr(expressao_pck.obter_desc_expressao(973839) || chr(13) || chr(10) || ds_itens_pendentes_w, 1, 4000);
			CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w, 'L', ds_historico_w, null, nm_usuario_p);
		end if;			
	end if;
	
elsif (ie_origem_p = 'I') then
	Begin
		select		nr_seq_material
		into STRICT 			nr_seq_material_w
		from		pls_auditoria_item
		where		nr_sequencia	= nr_seq_aud_item_p;
	exception		
	when others then
		nr_seq_material_w		:= null;
	end;	
	
	if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
		if length(pls_obter_seq_codigo_material(nr_seq_material_w, null)) > 10 then
			RAISE EXCEPTION '%', wheb_mensagem_pck.get_texto(1121995, 'CD_MATERIAL_INCORRETO=' || pls_obter_seq_codigo_material(nr_seq_material_w, '') || 
				';DS_MATERIAL_INCORRETO=' || substr(pls_obter_desc_material(nr_seq_material_w), 1, 80)) USING ERRCODE = '45011';		
		end if;
	end if;
	
	update	pls_auditoria_item
	set	ie_status	= 'J',
		dt_atualizacao	= clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where	nr_sequencia	= nr_seq_aud_item_p;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_status_justifica ( nr_seq_aud_item_p bigint, ie_origem_p text, ds_historico_justific_p text, nm_usuario_p text) FROM PUBLIC;

