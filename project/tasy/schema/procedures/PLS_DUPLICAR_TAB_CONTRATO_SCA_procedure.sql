-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_duplicar_tab_contrato_sca ( nr_seq_sca_contr_p bigint, nr_seq_tabela_nova_p INOUT bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nm_estipulante_w		varchar(80);
ie_tipo_contratacao_w		varchar(3);
ie_preco_w			varchar(2);
ie_grau_titularidade_w		varchar(2);
ie_tabela_contrato_w		varchar(1);
vl_preco_atual_w		double precision;
vl_preco_nao_subsidiado_w	double precision;
vl_minimo_w			double precision;
qt_registros_w			bigint;
nr_seq_contrato_tabela_w	bigint;
nr_contrato_w			bigint;
nr_seq_contrato_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_tabela_w			bigint;
nr_seq_tabela_ww		bigint;
tx_acrescimo_w			double precision;
qt_idade_inicial_w		integer;
qt_idade_final_w		integer;
dt_contrato_w			timestamp;

C01 CURSOR FOR 
	SELECT	qt_idade_inicial, 
		qt_idade_final, 
		vl_preco_atual, 
		tx_acrescimo, 
		vl_preco_nao_subsidiado, 
		vl_minimo, 
		ie_grau_titularidade 
	from	pls_plano_preco 
	where	nr_seq_tabela	= nr_seq_tabela_w 
	order by 
		qt_idade_inicial;


BEGIN 
select	nr_seq_contrato, 
	nr_seq_plano, 
	nr_seq_tabela 
into STRICT	nr_seq_contrato_w, 
	nr_seq_plano_w, 
	nr_seq_tabela_w 
from	pls_sca_regra_contrato 
where	nr_sequencia	= nr_seq_sca_contr_p;
 
if (coalesce(nr_seq_tabela_w::text, '') = '') then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(192483);
end if;
 
select	nr_contrato, 
	coalesce(dt_contrato, clock_timestamp()), 
	substr(obter_nome_pf_pj(cd_pf_estipulante, cd_cgc_estipulante), 1, 80) 
into STRICT	nr_contrato_w, 
	dt_contrato_w, 
	nm_estipulante_w 
from	pls_contrato 
where	nr_sequencia	= nr_seq_contrato_w;
 
if (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') and (nr_seq_tabela_w IS NOT NULL AND nr_seq_tabela_w::text <> '') then 
	select	nextval('pls_tabela_preco_seq') 
	into STRICT	nr_seq_tabela_ww 
	;
 
	insert into pls_tabela_preco(nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		nm_tabela, 
		dt_inicio_vigencia, 
		nr_seq_plano, 
		ie_tabela_base, 
		nr_contrato, 
		nr_seq_tabela_origem, 
		nr_seq_faixa_etaria) 
	SELECT	nr_seq_tabela_ww, 
		clock_timestamp(), 
		nm_usuario_p, 
		'Tabela para o contrato ' || to_char(nr_contrato_w) || ' - ' || nm_estipulante_w, 
		dt_contrato_w, 
		nr_seq_plano_w, 
		'N', 
		nr_seq_contrato_w, 
		nr_sequencia, 
		nr_seq_faixa_etaria 
	from	pls_tabela_preco 
	where	nr_sequencia	= nr_seq_tabela_w;
	 
	open C01;
	loop 
	fetch C01 into	 
		qt_idade_inicial_w, 
		qt_idade_final_w, 
		vl_preco_atual_w, 
		tx_acrescimo_w, 
		vl_preco_nao_subsidiado_w, 
		vl_minimo_w, 
		ie_grau_titularidade_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		insert into pls_plano_preco(nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			nr_seq_tabela, 
			qt_idade_inicial, 
			qt_idade_final, 
			vl_preco_inicial, 
			vl_preco_atual, 
			tx_acrescimo, 
			vl_preco_nao_subsidiado, 
			vl_minimo, 
			ie_grau_titularidade) 
		values (nextval('pls_plano_preco_seq'), 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_tabela_ww, 
			qt_idade_inicial_w, 
			qt_idade_final_w, 
			vl_preco_atual_w, 
			vl_preco_atual_w, 
			tx_acrescimo_w, 
			vl_preco_nao_subsidiado_w, 
			vl_minimo_w, 
			ie_grau_titularidade_w);
		end;
	end loop;
	close C01;
	 
	update	pls_sca_regra_contrato 
	set	nr_seq_tabela	= nr_seq_tabela_ww, 
		nm_usuario	= nm_usuario_p, 
		dt_atualizacao	= clock_timestamp() 
	where	nr_sequencia	= nr_seq_sca_contr_p;
	 
	insert into pls_contrato_historico(nr_sequencia, 
		cd_estabelecimento, 
		nr_seq_contrato, 
		dt_historico, 
		ie_tipo_historico, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		ds_historico) 
	values (nextval('pls_contrato_historico_seq'), 
		cd_estabelecimento_p, 
		nr_seq_contrato_w, 
		clock_timestamp(), 
		61, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		'Alteração de tabela de preço da programação do SCA');
	 
end if;
 
commit;
 
nr_seq_tabela_nova_p	:= nr_seq_tabela_ww;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_duplicar_tab_contrato_sca ( nr_seq_sca_contr_p bigint, nr_seq_tabela_nova_p INOUT bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

