-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_comunic_externo_web ( nr_seq_solicitacao_p bigint, ie_origem_rejeicao_p text, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
ie_tipo_rejeicao_p:
1 - Inclusão de individual de  beneficiário
2 - Alteração de produto
3 - Alteração de dados cadastrais
4 - Rescisão
5 - Reinclusão
6 - Solicitação 2ª via carteira
7 - Transferência de titularidade
8 - Solicitação de Rescisão
9 - Solicitação de Migração
10 - Movimentação por lote rejeitada

Ncessário inserir o ie_tipo_comunicado_w.
ie_tipo_comunicado_w :
0 - Todas
1 - Inclusão
2 - Exclusão
3 - Alteração	

Enviar uma comunicação web todas as vezes em que o estipulante solicitar uma inclusão, alteração de
produto, alteração de dados cadastrais do beneficiário ou solicitação de rescisão que foram rejeitados pela operadora.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionário [ x] Tasy (Delphi/Java) [   ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_titulo_w				varchar(255);
ds_texto_w				text;
ds_tipo_operacao_w			varchar(255);
ds_motivo_rejeicao_w			varchar(255);
ds_observacao_rejeicao_w		varchar(255);
cd_pessoa_fisica_w			pessoa_fisica.cd_pessoa_fisica%type;
nm_pessoa_fisica_w			pessoa_fisica.nm_pessoa_fisica%type;
nm_pessoa_fisica_aux_w			pessoa_fisica.nm_pessoa_fisica%type;
nr_seq_lote_inclusao_w 			pls_lote_inclusao_benef.nr_sequencia%type;
nr_seq_contrato_w			pls_contrato.nr_sequencia%type;	
nm_usuario_web_w			pls_estipulante_web.nm_usuario_web%type;
nm_usuarios_w				pls_comunic_externa_web.nm_usuario_prestador%type;
nm_usuario_solic_alt_pf_w		tasy_solic_alt_campo.nm_usuario_nrec%type;
ds_rtf_inicio_w				varchar(255);
ds_rtf_fim_w				varchar(255);
ds_observacao_w				varchar(255);
ie_enviar_comunic_rejeicao_w		varchar(1);
cd_estabelecimento_w			bigint;
ie_tipo_comunicado_w			pls_comunic_externa_web.ie_tipo_comunicado%type;
nr_protocolo_atendimento_w		bigint;
nr_seq_resc_benef_w			pls_solic_rescisao_benef.nr_sequencia%type;
nr_seq_solic_alt_w			tasy_solic_alteracao.nr_sequencia%type;
ds_observacao_rej_migracao_w		pls_migracao_beneficiario.ds_observacao%type;

C01 CURSOR FOR
	SELECT	nm_usuario_web
	from	pls_estipulante_web
	where (nr_seq_contrato = nr_seq_contrato_w or nr_seq_contrato_int = nr_seq_contrato_w)
	and 	ie_situacao	= 'A'
	
union all

	SELECT	a.nm_usuario_web
	from	pls_grupo_contrato_web a,
		pls_contrato_web b
	where	a.nr_sequencia = b.nr_seq_usuario_grupo
	and (b.nr_seq_contrato = nr_seq_contrato_w or b.nr_seq_intercambio = nr_seq_contrato_w)
	and	a.ie_situacao	= 'A'
	and 	b.ie_situacao	= 'A'
	
union all

	select	a.nm_usuario_web
	from	pls_grupo_contrato_web a,
		pls_contrato_grupo b
	where	a.nr_seq_grupo_contrato = b.nr_seq_grupo
	and (b.nr_seq_contrato = nr_seq_contrato_w or b.nr_seq_intercambio = nr_seq_contrato_w)
	and	a.ie_situacao	= 'A'	
	and	not exists (	select 	1
				from 	pls_contrato_web x 
				where 	x.nr_seq_usuario_grupo = a.nr_sequencia);

BEGIN

ie_enviar_comunic_rejeicao_w := obter_valor_param_usuario(1330,6,Obter_Perfil_Ativo,nm_usuario_p,obter_estabelecimento_ativo);

/* variáveis utilizadas para apresentar a mensagem com formatação RTF no Portal */

ds_rtf_inicio_w	:= '{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss\fcharset0 Arial;}}{\colortbl ;\red0\green0\blue128;}\viewkind4\uc1\pard\cf1\lang1046\f0\fs24 ';
ds_rtf_fim_w	:= ' \fs20 \par }';

if (ie_enviar_comunic_rejeicao_w = 'S') then
	begin
	
	if (ie_origem_rejeicao_p = '1' and (coalesce(nr_seq_solicitacao_p, 0) > 0)) then
		begin
			select	coalesce(nr_seq_lote_inclusao, 0),
				cd_pessoa_fisica,
				nm_pessoa_fisica,
				substr(pls_obter_motivo_rejeicao_incl(nr_seq_motivo_rejeicao),1,255) ds_motivo_rejeicao,
				coalesce(nr_seq_contrato, 0) nr_seq_contrato,
				substr(ds_observacao,1,255) ds_observacao,
				CASE WHEN ie_tipo_operacao='E' THEN  'exclusão'  ELSE 'inclusão' END
			into STRICT	nr_seq_lote_inclusao_w,
				cd_pessoa_fisica_w,
				nm_pessoa_fisica_w,
				ds_motivo_rejeicao_w,
				nr_seq_contrato_w,
				ds_observacao_w,
				ds_tipo_operacao_w
			from	pls_inclusao_beneficiario
			where	nr_sequencia	= nr_seq_solicitacao_p;
		exception
		when others then
			nr_seq_contrato_w	:= null;
		end;
			
		ds_titulo_w	:= 'Solicitação de '|| ds_tipo_operacao_w || ' rejeitada';
		ds_texto_w	:= 'Solicitação '|| nr_seq_solicitacao_p || ' de ' ||ds_tipo_operacao_w || ' do beneficiário '|| nm_pessoa_fisica_w;
		
		if (nr_seq_lote_inclusao_w > 0) then
			ds_texto_w	:= ds_texto_w|| ', lote nº '|| nr_seq_lote_inclusao_w;
		end if;
		
		ds_texto_w	:= ds_texto_w || ', foi rejeitada. \par' || chr(13) || chr(10)||
				'Motivo: ' || ds_motivo_rejeicao_w ||'. ';
		
		if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then
			ds_texto_w	:= ds_texto_w || ' \par' || chr(13) || chr(10)|| ds_observacao_w ||'. ';
		end if;
		ie_tipo_comunicado_w := '1';
	elsif (ie_origem_rejeicao_p = '2' and (coalesce(nr_seq_solicitacao_p, 0) > 0)) then
		begin
			select	pls_obter_dados_segurado(a.nr_seq_segurado, 'PF') cd_pessoa_fisica,
				pls_obter_dados_segurado(a.nr_seq_segurado, 'N') nm_pessoa_fisica,
				(select	x.nr_seq_contrato
				from	pls_segurado x
				where	x.nr_sequencia = a.nr_seq_segurado) nr_seq_contrato
			into STRICT	cd_pessoa_fisica_w,
				nm_pessoa_fisica_w,
				nr_seq_contrato_w
			from	pls_segurado_solic_alt a
			where 	a.nr_sequencia	= nr_seq_solicitacao_p
			and	a.ie_tipo_solicitacao	= '2'
			and	a.ie_origem_solicitacao	= 'P';
		exception
		when others then
			nr_seq_contrato_w	:= null;
		end;	
		
		ds_titulo_w	:= 'Alteração de Produto rejeitada';
		ds_texto_w	:= 'Solicitação '|| nr_seq_solicitacao_p ||' de alteração do produto do beneficiário '|| nm_pessoa_fisica_w || ' foi rejeitada.';
		ie_tipo_comunicado_w := '3';
	elsif (ie_origem_rejeicao_p = '3' and (coalesce(nr_seq_solicitacao_p, 0) > 0)) then
		begin				
			select 	b.nr_sequencia,
				a.ds_chave_simples cd_pessoa_fisica,
				(select	x.nm_pessoa_fisica
				from	pessoa_fisica x
				where	x.cd_pessoa_fisica = a.ds_chave_simples) nm_pessoa_fisica,
				substr(pls_obter_motivo_rejei_campo(a.nr_seq_motivo_rejeicao),1,255) ds_motivo_rejeicao,
				a.nm_usuario_nrec,
				substr(a.ds_observacao,1,255) ds_observacao
			into STRICT	nr_seq_solic_alt_w,
				cd_pessoa_fisica_w,
				nm_pessoa_fisica_w,
				ds_motivo_rejeicao_w,
				nm_usuario_solic_alt_pf_w,
				ds_observacao_w
			from	tasy_solic_alt_campo a,
				tasy_solic_alteracao b
			where	a.nr_seq_solicitacao	= b.nr_sequencia
			and	a.nr_sequencia 		= nr_seq_solicitacao_p
			and	a.ie_tipo_login_solic	= 'EP';
		exception
		when others then
			cd_pessoa_fisica_w	:= null;
		end;
		
		if (coalesce(nm_pessoa_fisica_w::text, '') = '') then
			begin	
				select	substr(a.ds_chave_composta,position('=' in a.ds_chave_composta)+1,position('#' in substr(a.ds_chave_composta,position('=' in a.ds_chave_composta)+1,length(a.ds_chave_composta)))-1)
				into STRICT	cd_pessoa_fisica_w
				from	tasy_solic_alt_campo a,
					tasy_solic_alteracao b
				where	a.nr_seq_solicitacao	= b.nr_sequencia
				and	a.nr_sequencia 		= nr_seq_solicitacao_p;
				
				nm_pessoa_fisica_w	:= obter_nome_pf(cd_pessoa_fisica_w);
			exception
			when others then
				cd_pessoa_fisica_w	:= null;
			end;
		end if;
		
		if (nm_usuario_solic_alt_pf_w IS NOT NULL AND nm_usuario_solic_alt_pf_w::text <> '') then
			begin
				select	coalesce(nr_seq_contrato, nr_seq_contrato_int)
				into STRICT	nr_seq_contrato_w
				from	pls_estipulante_web
				where	upper(nm_usuario_web) like upper(nm_usuario_solic_alt_pf_w);
			exception
			when others then
				nr_seq_contrato_w	:= null;
			end;
		end if;
		
		ds_titulo_w	:= 'Alteração de dados cadastrais rejeitada';
		ds_texto_w	:= 'Solicitação '|| nr_seq_solic_alt_w ||' de alteração dos dados cadastrais do beneficiário '|| nm_pessoa_fisica_w || ' foi rejeitada.\par' || chr(13) || chr(10)||
				'Motivo: ' || ds_motivo_rejeicao_w ||'. ';
		
		if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then
			ds_texto_w	:= ds_texto_w || ' \par' || chr(13) || chr(10)|| ds_observacao_w ||'. ';
		end if;
		ie_tipo_comunicado_w := '3';
	elsif (ie_origem_rejeicao_p = '4' and (coalesce(nr_seq_solicitacao_p, 0) > 0)) then
		begin
			select	pls_obter_dados_segurado(a.nr_seq_segurado, 'PF') cd_pessoa_fisica,
				pls_obter_dados_segurado(a.nr_seq_segurado, 'N') nm_pessoa_fisica,
				(select substr(x.ds_motivo_rejeicao,1,255)
				from 	pls_motivo_cancel_rescisao	x
				where	x.nr_sequencia	= a.nr_seq_motivo_rejeicao) ds_motivo_rejeicao,
				(select	coalesce(y.nr_seq_contrato, 0)
				from	pls_segurado y
				where	y.nr_sequencia	= a.nr_seq_segurado) nr_seq_contrato,
				a.ds_observacao_rejeicao
			into STRICT	cd_pessoa_fisica_w,
				nm_pessoa_fisica_w,
				ds_motivo_rejeicao_w,
				nr_seq_contrato_w,
				ds_observacao_w
			from	pls_rescisao_contrato a
			where	a.nr_sequencia	= nr_seq_solicitacao_p
			and	a.ie_tipo_solicitante	= 'W';
		exception
		when others then
			nr_seq_contrato_w	:= null;
		end;
		
		ds_titulo_w	:= 'Rescisão de beneficiário rejeitada';
		ds_texto_w	:= 'Solicitação '|| nr_seq_solicitacao_p ||' de rescisão do beneficiário '|| nm_pessoa_fisica_w || ' foi rejeitada.\par' || chr(13) || chr(10)||
				'Motivo: ' || ds_motivo_rejeicao_w ||'. ';
		
		if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then
			ds_texto_w	:= ds_texto_w || ' \par' || chr(13) || chr(10)|| ds_observacao_w ||'. ';
		end if;
		ie_tipo_comunicado_w := '2';
	elsif (ie_origem_rejeicao_p = '5' and (coalesce(nr_seq_solicitacao_p, 0) > 0)) then
		begin
			select	pls_obter_dados_segurado(a.nr_seq_segurado, 'PF') cd_pessoa_fisica,
				pls_obter_dados_segurado(a.nr_seq_segurado, 'N') nm_pessoa_fisica,
				a.nr_seq_contrato nr_seq_contrato,
				(select	ds_motivo
				 from	pls_mot_rejeicao_reinc
				 where	nr_sequencia = a.nr_seq_motivo_rejeicao) ds_motivo_rejeicao,
				ds_observacao_rejeicao
			into STRICT	cd_pessoa_fisica_w,
				nm_pessoa_fisica_w,
				nr_seq_contrato_w,
				ds_motivo_rejeicao_w,
				ds_observacao_w
			from	pls_reinclusao_benef a
			where	a.nr_sequencia	= nr_seq_solicitacao_p;
		exception
		when others then
			nr_seq_contrato_w	:= null;
		end;	
		
		ds_titulo_w	:= 'Reinclusão de beneficiário rejeitada';
		ds_texto_w	:= 'Solicitação '|| nr_seq_solicitacao_p ||' de reinclusão do beneficiário '|| nm_pessoa_fisica_w || ' foi rejeitada.\par'|| chr(13) || chr(10)||
		'Motivo: ' || ds_motivo_rejeicao_w ||'. ';
		if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then
			ds_texto_w	:= ds_texto_w || ' \par' || chr(13) || chr(10)|| ds_observacao_w ||'. ';
		end if;
		ie_tipo_comunicado_w := '1';
	elsif (ie_origem_rejeicao_p = '6' and (coalesce(nr_seq_solicitacao_p, 0) > 0)) then
		begin
			select	pls_obter_dados_segurado(b.nr_seq_segurado, 'N') nm_segurado,
				pls_obter_dados_segurado(b.nr_seq_segurado, 'NC') nr_seq_contrato,
				pls_obter_mot_rejeicao_cart(a.nr_seq_motivo_rejeicao, 'N') ds_motivo_rejeicao,
				substr(a.ds_observacao_rejeicao,1,255)
			into STRICT	nm_pessoa_fisica_w,
				nr_seq_contrato_w,
				ds_motivo_rejeicao_w,
				ds_observacao_w
			from	pls_solic_carteira_adic a,
				pls_segurado_carteira b
			where	a.nr_seq_carteira	= b.nr_sequencia
			and	a.nr_sequencia		= nr_seq_solicitacao_p;
		exception
		when others then
			nr_seq_contrato_w	:= null;
		end;
		
		ds_titulo_w	:= 'Solicitação de 2ª via de carteirinha rejeitada';
		ds_texto_w	:= 'Solicitação '|| nr_seq_solicitacao_p ||' de 2ª via da carteirinha do beneficiário '|| nm_pessoa_fisica_w || ' foi rejeitada.\par'|| chr(13) || chr(10)||
		'Motivo: ' || ds_motivo_rejeicao_w ||'. ';
		if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then
			ds_texto_w	:= ds_texto_w || ' \par' || chr(13) || chr(10)|| ds_observacao_w ||'. ';
		end if;
		ie_tipo_comunicado_w := '3';
	elsif (ie_origem_rejeicao_p = '7' and (coalesce(nr_seq_solicitacao_p, 0) > 0)) then
		begin
			select	pls_obter_dados_segurado(a.nr_seq_seg_atual, 'N'),
				pls_obter_dados_segurado(a.NR_SEQ_SEG_NOVO, 'N'),
				substr(a.ds_observacao_rejeicao,1,255),
				a.nr_seq_contrato
			into STRICT	nm_pessoa_fisica_w,
				nm_pessoa_fisica_aux_w,
				ds_observacao_w,
				nr_seq_contrato_w
			from	pls_solic_transf_titular a
			where	a.nr_sequencia		= nr_seq_solicitacao_p;	
		exception
		when others then
			nr_seq_contrato_w	:= null;
		end;
		
		ds_titulo_w	:= 'Solicitação de transferência de titularidade rejeitada';
		ds_texto_w	:= 'Solicitação '|| nr_seq_solicitacao_p ||' de transferência de titularidade do titular '|| nm_pessoa_fisica_w || ' para o beneficiário dependente '||nm_pessoa_fisica_aux_w||' foi rejeitada.\par'|| chr(13) || chr(10);		
		if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then
			ds_texto_w	:= ds_texto_w || ' \par' || chr(13) || chr(10)|| ds_observacao_w ||'. ';
		end if;
		ie_tipo_comunicado_w := '3';
	elsif (ie_origem_rejeicao_p = '8' and (coalesce(nr_seq_solicitacao_p, 0) > 0)) then
		begin
			select (select substr(x.ds_motivo,1,255)
				from 	pls_motivo_rejeicao_resc	x
				where	x.nr_sequencia	= a.nr_seq_motivo_rejeicao) ds_motivo_rejeicao,
				a.ds_observacao_rejeicao,
				a.nr_seq_contrato,
				substr(coalesce(pls_obter_nr_protocolo_atend(nr_seq_protocolo_atend,5),pls_obter_protocolo_atend(nr_seq_atendimento)),1,60) nr_protocolo_atendimento
			into STRICT	ds_motivo_rejeicao_w,
				ds_observacao_rejeicao_w,
				nr_seq_contrato_w,
				nr_protocolo_atendimento_w
			from	pls_solicitacao_rescisao a
			where	a.nr_sequencia	= nr_seq_solicitacao_p;
		exception
		when others then
			nr_seq_contrato_w	:= null;
		end;
		
		select	max(x.nr_sequencia)
		into STRICT	nr_seq_resc_benef_w
		from	pls_solic_rescisao_benef x,
			pls_segurado y
		where	y.nr_sequencia	= x.nr_seq_segurado
		and	x.nr_seq_solicitacao = nr_seq_solicitacao_p
		and	coalesce(y.nr_seq_titular::text, '') = '';
		
		if (coalesce(nr_seq_resc_benef_w::text, '') = '') then
			select	max(x.nr_sequencia)
			into STRICT	nr_seq_resc_benef_w
			from	pls_solic_rescisao_benef x,
				pls_segurado y
			where	y.nr_sequencia	= x.nr_seq_segurado
			and	x.nr_seq_solicitacao = nr_seq_solicitacao_p;
		end if;
		
		if (nr_seq_resc_benef_w IS NOT NULL AND nr_seq_resc_benef_w::text <> '') then
			select	pls_obter_dados_segurado(nr_seq_segurado,'PF') cd_pessoa_fisica,
				pls_obter_dados_segurado(nr_seq_segurado,'N') nm_pessoa_fisica
			into STRICT	cd_pessoa_fisica_w,
				nm_pessoa_fisica_w
			from	pls_solic_rescisao_benef
			where	nr_sequencia	= nr_seq_resc_benef_w;
			ds_titulo_w	:= 'Rescisão de beneficiário rejeitada';
			ds_texto_w	:= 'Solicitação de rescisão do beneficiário '|| nm_pessoa_fisica_w || ' foi rejeitada.\par' || chr(13) || chr(10)||
					'Protocolo: '|| nr_protocolo_atendimento_w ||'\par' || chr(13) || chr(10)||
					'Motivo: ' || ds_motivo_rejeicao_w ||'\par' || chr(13) || chr(10)||
					'Observação: ' || ds_observacao_rejeicao_w ||'. ';
			
			ie_tipo_comunicado_w := '2';
		else
			ds_titulo_w	:= null;
			ds_texto_w	:= null;
		end if;
	elsif 	((ie_origem_rejeicao_p = '9') and (coalesce(nr_seq_solicitacao_p, 0) > 0)) then
		select	pls_obter_nome_beneficiario(nr_seq_segurado),
			nr_seq_contrato_atual,
			ds_observacao,
			(select ds_motivo_reprovacao
			from	pls_inclusao_benef_reprov
			where	nr_sequencia = nr_seq_motivo_rejeicao) ds_motivo_rejeicao
		into STRICT	nm_pessoa_fisica_w,
			nr_seq_contrato_w,
			ds_observacao_rej_migracao_w,
			ds_motivo_rejeicao_w
		from	pls_migracao_beneficiario
		where	nr_sequencia = nr_seq_solicitacao_p;

		ds_titulo_w	:= wheb_mensagem_pck.get_texto(1039496); --Solicitação de migração rejeitada.
		ds_texto_w	:= 	substr(	wheb_mensagem_pck.get_texto(1039505, 'NR_SEQ_SOLICITACAO='||nr_seq_solicitacao_p||';'||'NM_PESSOA_FISICA='||nm_pessoa_fisica_w) || '\par' || chr(13) ||
						wheb_mensagem_pck.get_texto(1039504, 'DS_MOTIVO='||ds_motivo_rejeicao_w) || '\par' || chr(13) ||
						wheb_mensagem_pck.get_texto(1039506, 'DS_OBSERVACAO='||ds_observacao_rej_migracao_w),1,4000);

		ie_tipo_comunicado_w	:= '1';
	elsif 	((ie_origem_rejeicao_p = '10') and (coalesce(nr_seq_solicitacao_p, 0) > 0)) then
		select 	substr(pls_obter_motivo_rejeicao_incl(nr_seq_motivo_rejeicao),1,255) ds_motivo_rejeicao,
			nr_seq_contrato
		into STRICT	ds_motivo_rejeicao_w,
			nr_seq_contrato_w
		from 	pls_lote_inclusao_benef a
		where	nr_sequencia	= nr_seq_solicitacao_p;
	
	
		ds_titulo_w	:= wheb_mensagem_pck.get_texto(1039944); --Movimentação por lote rejeitada
		ds_texto_w	:= 	substr(	wheb_mensagem_pck.get_texto(1039909, 'NR_LOTE=' || nr_seq_solicitacao_p) || '\par' || chr(13) || --O lote de movimentação #@NR_LOTE#@ foi rejeitado.
						wheb_mensagem_pck.get_texto(1039504, 'DS_MOTIVO=' || ds_motivo_rejeicao_w),1,4000);

		ie_tipo_comunicado_w	:= '1';
	end if;
		
	if 	((((nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') and nr_seq_contrato_w > 0) and (ds_titulo_w IS NOT NULL AND ds_titulo_w::text <> '') and (ds_texto_w IS NOT NULL AND ds_texto_w::text <> '')))then
		open C01;
		loop
		fetch C01 into
			nm_usuario_web_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			if (coalesce(nm_usuarios_w::text, '') = '') then
				nm_usuarios_w	:= nm_usuario_web_w;
			else
				nm_usuarios_w	:= nm_usuarios_w ||','|| nm_usuario_web_w;
			end if;
			end;
		end loop;
		close C01;
		
		if (nm_usuarios_w IS NOT NULL AND nm_usuarios_w::text <> '') then
			ds_texto_w	:= ds_rtf_inicio_w || chr(13) || chr(10)||
					ds_texto_w || chr(13) || chr(10)||
					ds_rtf_fim_w;
			insert into	pls_comunic_externa_web(nr_sequencia, ie_situacao, ie_tipo_login,
						nm_usuario_nrec, dt_atualizacao_nrec, nm_usuario,
						dt_atualizacao, dt_criacao, ds_titulo,
						ds_texto, dt_liberacao, nm_usuario_prestador,ie_tipo_comunicado,
						ie_tipo_comunicado_web)
				values (nextval('pls_comunic_externa_web_seq'), 'A', 'E',
						nm_usuario_p, clock_timestamp(), nm_usuario_p,
						clock_timestamp(), clock_timestamp(), ds_titulo_w,
						ds_texto_w, clock_timestamp(), nm_usuarios_w,ie_tipo_comunicado_w,
						'M');
		end if;
	end if;
	
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_comunic_externo_web ( nr_seq_solicitacao_p bigint, ie_origem_rejeicao_p text, nm_usuario_p text) FROM PUBLIC;

