-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_classif_tit_rec_nf ( nr_sequencia_p text, nm_usuario_p text) AS $body$
DECLARE



cd_conta_contabil_w	varchar(20);
cd_centro_custo_w	integer;
cd_conta_financ_w	bigint;
vl_classif_w		double precision;
nr_titulo_w		bigint;
nr_seq_classif_w	integer;
cd_conta_financ_cre_w	bigint;
count_ww		integer;

/*esta procedure foi criada  para tratamento do parametro 97 da função Gerar Titulo a Receber, para buscar a classificacao da nota gerada na conta e informar no titulo, nao buscando a classificacao do resumo da conta paciente. */

/*cursor para buscar a classificação da nota*/

C01 CURSOR FOR
SELECT	a.cd_conta_contabil,
	a.cd_centro_custo,
	--nvl(a.nr_seq_conta_financ, cd_conta_financ_cre_w),
	sum(a.vl_liquido)
from 	nota_fiscal_item a
where	a.nr_sequencia		= nr_sequencia_p
and	not exists (select	1
			from	nota_fiscal_item_rateio b
			where	b.nr_seq_nota	= a.nr_sequencia)
group	by a.cd_conta_contabil,
	a.cd_centro_custo,
	--a.nr_seq_conta_financ,
	a.nr_contrato

union all

select	a.cd_conta_contabil,
	a.cd_centro_custo,
	--nvl(a.cd_conta_financ, nvl(b.nr_seq_conta_financ, cd_conta_financ_cre_w)),
	sum(a.vl_rateio)
from	nota_fiscal_item_rateio a,
	nota_fiscal_item b
where	b.nr_sequencia		= nr_sequencia_p
and	b.nr_sequencia		= a.nr_seq_nota
group	by
	a.cd_conta_contabil,
	a.cd_centro_custo,
	--a.cd_conta_financ,
	b.nr_seq_conta_financ,
	b.nr_contrato;

/*cursor para buscar titulos gerados na nota*/

C02 CURSOR FOR
SELECT	a.nr_titulo
from 	titulo_receber a
where	a.nr_seq_nf_saida = nr_sequencia_p;


BEGIN

/*buscar titulo que possui a nota em questão vinculada*/

/*select	nvl(a.nr_titulo,0)
into	nr_titulo_w
from 	titulo_receber a
where	a.nr_seq_nf_saida = nr_sequencia_p;*/
/*verificar se existe classificaao no titulo*/

/*if 	( nr_titulo_w <> 0) then
	select 	count(*)
	into	nr_seq_classif_w
	from	titulo_receber_classif
	where 	nr_titulo = nr_titulo_w;
end if;*/
select	coalesce(max(cd_conta_financ_cre),0)
into STRICT	cd_conta_financ_cre_w
from	parametro_fluxo_caixa
where	cd_estabelecimento = obter_estabelecimento_ativo;


open C02;
loop
fetch C02 into
	nr_titulo_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	if ( coalesce(nr_titulo_w,0) <> 0 ) then

		select 	count(*)
		into STRICT	nr_seq_classif_w
		from	titulo_receber_classif
		where 	nr_titulo = nr_titulo_w;


		open C01;
		loop
		fetch C01 into
			cd_conta_contabil_w,
			cd_centro_custo_w,
			--cd_conta_financ_w,
			vl_classif_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */

			nr_seq_classif_w	:= nr_seq_classif_w + 1;
			select	count(*)
			into STRICT	count_ww
			from	nota_fiscal_venc
			where 	NR_SEQUENCIA = nr_sequencia_p;

			if ( count_ww > 1 ) then
				select	vl_titulo
				into STRICT	vl_classif_w
				from	titulo_receber
				where	nr_titulo = nr_titulo_w;
			end if;

			insert into titulo_receber_classif(nr_titulo,
				nr_sequencia,
				vl_classificacao,
				dt_atualizacao,
				nm_usuario,
				--cd_conta_financ,
				cd_centro_custo,
				vl_desconto,
				vl_original,
				nr_seq_contrato,
				cd_conta_contabil)
			values ( nr_titulo_w,
				nr_seq_classif_w,
				vl_classif_w,
				clock_timestamp(),
				nm_usuario_p,
				--cd_conta_financ_w,
				cd_centro_custo_w,
				0,
				vl_classif_w,
				null,
				cd_conta_contabil_w );

		end loop;
		close C01;
	end if;
	end;

end loop;
close C02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_classif_tit_rec_nf ( nr_sequencia_p text, nm_usuario_p text) FROM PUBLIC;

