-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_agt_consistir_proced_prest ( nr_seq_lote_guia_aut_p pls_lote_anexo_guias_aut.nr_sequencia%type, nr_seq_lote_proc_aut_p pls_lote_anexo_proc_aut.nr_sequencia%type, nr_seq_guia_plano_p pls_guia_plano.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

						
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Consistir se o 'Credenciado nao e habilitado a realizar o procedimento'.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao: Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
					
ie_tipo_guia_w			varchar(2);
ie_carater_internacao_w		varchar(1);
ie_internacao_w			varchar(1);
ie_liberar_w			varchar(1)	:= 'N';
cd_procedimento_w		bigint;
nr_seq_prestador_exec_w		bigint	:= null;
nr_seq_tipo_atend_w		bigint	:= null;
ie_origem_proced_w		bigint;
nr_seq_prestador_w		bigint;
nr_seq_segurado_w		bigint;
dt_procedimento_w		timestamp;
ie_regime_atendimento_w		pls_guia_plano.ie_regime_atendimento%type;
ie_saude_ocupacional_w		pls_guia_plano.ie_saude_ocupacional%type;

C01 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		coalesce(dt_prev_realizacao, clock_timestamp())
	from	pls_lote_anexo_proc_aut
	where	nr_sequencia = nr_seq_lote_proc_aut_p;
	

BEGIN	
if	(nr_seq_guia_plano_p IS NOT NULL AND nr_seq_guia_plano_p::text <> '' AND nr_seq_guia_plano_p > 0) then
	select	max(a.nr_seq_prestador),
		max(a.ie_tipo_guia),
		max(a.ie_carater_internacao),
		max(a.nr_seq_segurado),
		max(a.ie_regime_atendimento),
		max(a.ie_saude_ocupacional)
	into STRICT	nr_seq_prestador_w,
		ie_tipo_guia_w,
		ie_carater_internacao_w,
		nr_seq_segurado_w,
		ie_regime_atendimento_w,
		ie_saude_ocupacional_w
	from	pls_guia_plano a
	where	a.nr_sequencia = nr_seq_guia_plano_p;
	
	ie_internacao_w := pls_obter_se_internado_guia(nr_seq_guia_plano_p);
	
	open C01;
	loop
	fetch C01 into	
		cd_procedimento_w,
		ie_origem_proced_w,
		dt_procedimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ie_liberar_w	:= pls_obter_se_proc_prestador(	nr_seq_prestador_w,
								nr_seq_prestador_exec_w,
								cd_procedimento_w,
								ie_origem_proced_w,
								ie_tipo_guia_w,
								coalesce(dt_procedimento_w, clock_timestamp()),
								null,
								ie_carater_internacao_w,
								nr_seq_tipo_atend_w,
								ie_internacao_w,
								nr_seq_guia_plano_p,
								ie_regime_atendimento_w,
								ie_saude_ocupacional_w);
								
		if (ie_liberar_w = 'N') then		
			CALL pls_inserir_glosa_anexo_guia('1214', nr_seq_lote_guia_aut_p, nr_seq_lote_proc_aut_p, null, nm_usuario_p);	
		end if;
		
		end;
	end loop;
	close C01;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_agt_consistir_proced_prest ( nr_seq_lote_guia_aut_p pls_lote_anexo_guias_aut.nr_sequencia%type, nr_seq_lote_proc_aut_p pls_lote_anexo_proc_aut.nr_sequencia%type, nr_seq_guia_plano_p pls_guia_plano.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

