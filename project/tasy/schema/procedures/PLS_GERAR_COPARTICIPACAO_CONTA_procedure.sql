-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_coparticipacao_conta ( nr_seq_conta_p bigint, param_1_p text, nm_usuario_p text) AS $body$
DECLARE


nr_seq_segurado_w		bigint;
ie_tipo_segurado_w		varchar(10);
cd_estabelecimento_w		bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_conta_mat_w		bigint;
nr_seq_plano_ww			bigint;
nr_seq_plano_w			bigint;
nr_seq_contrato_w		bigint;
nr_seq_intercambio_w		bigint;
dt_contratacao_w		timestamp;
qt_idade_w			bigint;
ie_titularidade_w		varchar(2);
qt_regra_w			bigint;
qt_alt_plano_w			bigint;
dt_item_w			timestamp;
dt_conta_w			timestamp;
ds_estabelecimento_w		pessoa_juridica.ds_razao_social%type;
ie_apropriacao_copartic_w	pls_parametros.ie_apropriacao_copartic%type;

/*Ordenar pela sequencia para que calcular o valor da coparticipacao corretamente, motivo: procedure pls_minimo_coparticipacao situacao do segundo select
or (a.nr_seq_conta = nr_seq_conta_w and a.nr_sequencia < nr_seq_conta_proc_p))*/
C01 CURSOR FOR
	SELECT	nr_sequencia,
		dt_procedimento
	from	pls_conta_proc
	where	nr_seq_conta	= nr_seq_conta_p
	and	coalesce(ie_status,'U')<> 'U'
	and	coalesce(ie_status,'U')<> 'D'
	order by nr_sequencia, ie_tipo_despesa desc;
	
C02 CURSOR FOR
	SELECT	nr_sequencia,
		dt_atendimento
	from	pls_conta_mat
	where	nr_seq_conta	= nr_seq_conta_p
	and	coalesce(ie_status,'U')<> 'U'
	and	coalesce(ie_status,'U')<> 'D';


BEGIN
/* Obter parametros da conta medica */

begin
select	nr_seq_segurado,
	ie_tipo_segurado,
	cd_estabelecimento,
	nr_seq_plano,
	coalesce(dt_atendimento_referencia,clock_timestamp())
into STRICT	nr_seq_segurado_w,
	ie_tipo_segurado_w,
	cd_estabelecimento_w,
	nr_seq_plano_ww,
	dt_conta_w
from	pls_conta
where	nr_sequencia	= nr_seq_conta_p;
exception
when others then
	ie_tipo_segurado_w	:= 'X';
end;

if (coalesce(ie_tipo_segurado_w::text, '') = '') then
	--max para tratar no data found
	select 	max(ie_tipo_segurado)
	into STRICT	ie_tipo_segurado_w
	from	pls_segurado
	where	nr_sequencia = nr_seq_segurado_w;
	
end if;

begin

--select	nr_seq_plano,
select	pls_obter_produto_benef(nr_sequencia,dt_conta_w),
	nr_seq_contrato,
	nr_seq_intercambio,
	dt_contratacao,
	obter_idade_pf(cd_pessoa_fisica,clock_timestamp(),'A'),
	CASE WHEN coalesce(nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END
into STRICT	nr_seq_plano_w,
	nr_seq_contrato_w,
	nr_seq_intercambio_w,
	dt_contratacao_w,
	qt_idade_w,
	ie_titularidade_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_w;
exception
when others then
	nr_seq_contrato_w	:= 0;
	nr_seq_intercambio_w	:= 0;
	nr_seq_plano_w		:= 0;
end;

if (nr_seq_plano_ww IS NOT NULL AND nr_seq_plano_ww::text <> '') and (nr_seq_plano_w <> nr_seq_plano_ww)then
	nr_seq_plano_w := nr_seq_plano_ww;
end if;

begin
	--Select para verificar se deve ser utilizada a nova ou antiga regra, valor padrao deve ser "N" pois a nova regra deve ser utilizada somente quando checada pelo usuario.
	select	coalesce(ie_apropriacao_copartic, 'N')
	into STRICT	ie_apropriacao_copartic_w
	from	pls_parametros
	where	cd_estabelecimento = cd_estabelecimento_w;
exception
	when no_data_found then
		select	ds_razao_social
		into STRICT	ds_estabelecimento_w
		from	pessoa_juridica
		where	cd_cgc = (	SELECT	cd_cgc
					from	estabelecimento
					where	cd_estabelecimento = cd_estabelecimento_w);
		CALL wheb_mensagem_pck.exibir_mensagem_abort(306179,'ESTABELECIMENTO=' || cd_estabelecimento_w || ' - ' ||  ds_estabelecimento_w);
end;

if (ie_apropriacao_copartic_w = 'N') then

	/*Verificar primeiro se tem regra para os dados da conta */

	select	count(1)
	into STRICT	qt_regra_w
	from	pls_regra_coparticipacao a
	where	a.nr_seq_contrato	= nr_seq_contrato_w;

	if (qt_regra_w = 0) then
		if (nr_seq_intercambio_w > 0) then
			select	count(1)
			into STRICT	qt_regra_w
			from	pls_regra_coparticipacao a
			where	a.nr_seq_intercambio = nr_seq_intercambio_w;
		end if;
	end if;

	if (qt_regra_w = 0) then
		select	count(1)
		into STRICT	qt_regra_w
		from	pls_regra_coparticipacao a
		where	a.nr_seq_plano = nr_seq_plano_w
		and	coalesce(a.nr_seq_contrato::text, '') = ''
		and	coalesce(a.nr_seq_proposta::text, '') = '';
	end if;
else
	select	count(1)
	into STRICT	qt_regra_w
	from	pls_regra_copartic a
	where	a.nr_seq_contrato = nr_seq_contrato_w;
	
	if (qt_regra_w = 0) then
		if (nr_seq_intercambio_w > 0) then
			select	count(1)
			into STRICT	qt_regra_w
			from	pls_regra_copartic a
			where	a.nr_seq_intercambio = nr_seq_intercambio_w;
		end if;
	end if;
	
	if (qt_regra_w = 0) then
		select	count(1)
		into STRICT	qt_regra_w
		from	pls_regra_copartic a
		where	a.nr_seq_plano = nr_seq_plano_w
		and	coalesce(a.nr_seq_contrato::text, '') = ''
		and	coalesce(a.nr_seq_proposta::text, '') = '';
	end if;
end if;	
	
select	count(1)
into STRICT	qt_alt_plano_w
from	pls_segurado_alt_plano
where	nr_seq_segurado = nr_seq_segurado_w
and	ie_situacao = 'A'  LIMIT 1;

if (ie_tipo_segurado_w in ('B','A','I','C','T','R','H')) and (qt_regra_w > 0) then
	open c01;
	loop
	fetch c01 into	
		nr_seq_conta_proc_w,
		dt_item_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	
		if (qt_alt_plano_w > 0) then
			begin
				select	max(pls_obter_produto_benef(nr_seq_segurado_w, dt_item_w))
				into STRICT	nr_seq_plano_ww
				;
			exception
			when others then
				nr_seq_plano_ww := nr_seq_plano_w;
			end;
			
			if (nr_seq_plano_ww IS NOT NULL AND nr_seq_plano_ww::text <> '') and (nr_seq_plano_w <> nr_seq_plano_ww)then
				nr_seq_plano_w := nr_seq_plano_ww;
			end if;
		end if;
		
		if (ie_apropriacao_copartic_w = 'N') then
			CALL pls_gerar_coparticipacao(nr_seq_conta_proc_w, nr_seq_segurado_w, nr_seq_conta_p,
						cd_estabelecimento_w, nm_usuario_p, 0,
						nr_seq_plano_w,	nr_seq_contrato_w, nr_seq_intercambio_w,
						dt_contratacao_w, qt_idade_w, ie_titularidade_w,
						param_1_p,null,null,
						null);
		elsif (ie_apropriacao_copartic_w = 'S') then
			CALL pls_apropriacao_pck.pls_gerar_coparticipacao_aprop(nr_seq_conta_proc_w, null, nm_usuario_p);
		end if;
	end loop;
	close c01;

	open C02;
	loop
	fetch C02 into	
		nr_seq_conta_mat_w,
		dt_item_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		
		if (qt_alt_plano_w > 0) then
			begin
				select	max(pls_obter_produto_benef(nr_seq_segurado_w, dt_item_w))
				into STRICT	nr_seq_plano_ww
				;
			exception
			when others then
				nr_seq_plano_ww := nr_seq_plano_w;
			end;
			
			if (nr_seq_plano_ww IS NOT NULL AND nr_seq_plano_ww::text <> '') and (nr_seq_plano_w <> nr_seq_plano_ww)then
				nr_seq_plano_w := nr_seq_plano_ww;
			end if;
		end if;
		
		if (ie_apropriacao_copartic_w = 'N') then
			CALL pls_gerar_coparticipacao(	null, nr_seq_segurado_w, nr_seq_conta_p,
							cd_estabelecimento_w, nm_usuario_p, nr_seq_conta_mat_w,
							nr_seq_plano_w,	nr_seq_contrato_w, nr_seq_intercambio_w,
							dt_contratacao_w, qt_idade_w, ie_titularidade_w,
							param_1_p,null,null,
							null);
		elsif (ie_apropriacao_copartic_w = 'S' ) then
			CALL pls_apropriacao_pck.pls_gerar_coparticipacao_aprop(null, nr_seq_conta_mat_w, nm_usuario_p);
		end if;
		
		end;
	end loop;
	close C02;
	CALL pls_gerar_contab_val_adic(	nr_seq_conta_p, null, null,
					null,null,null,null,'C','N', nm_usuario_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_coparticipacao_conta ( nr_seq_conta_p bigint, param_1_p text, nm_usuario_p text) FROM PUBLIC;

