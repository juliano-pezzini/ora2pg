-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importa_contrato_integracao ( nr_sequencia_p bigint, nm_usuario_p text, nm_usuario_conexao_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_contrato_w			bigint;
nr_contrato_bionexo_w		bigint;
cd_cnpj_fornecedor_w		varchar(14);
ds_titulo_w			varchar(255);
dt_vigencia_inicio_w		timestamp;
dt_vigencia_fim_w			timestamp;
qt_dias_rescisao_w			bigint;
nr_seq_tipo_contrato_w		bigint;
qt_registro_w			bigint;
cd_material_w			bigint;
qt_material_w			double precision;
vl_material_w			double precision;
ds_embalagem_w			varchar(255);
qt_embalagem_w			double precision;
nr_seq_item_w			bigint;
ie_status_w			w_bionexo_contrato.ie_status%type;

c01 CURSOR FOR
SELECT	cd_material,
	qt_material,
	vl_material,
	ds_embalagem,
	qt_embalagem
from	w_bionexo_contrato_item
where	nr_seq_contrato = nr_sequencia_p;


BEGIN

select	coalesce(max(nr_seq_tipo_contrato),0)
into STRICT	nr_seq_tipo_contrato_w
from	parametro_compras;

if (nr_seq_tipo_contrato_w = 0) then
	select	min(nr_sequencia)
	into STRICT	nr_seq_tipo_contrato_w
	from	tipo_contrato
	where	ie_situacao = 'A';
end if;

select	coalesce(max(id_contrato),0)
into STRICT	nr_contrato_bionexo_w
from	w_bionexo_contrato
where	nr_sequencia = nr_sequencia_p;

select	coalesce(max(nr_sequencia),0)
into STRICT	nr_seq_contrato_w
from	contrato
where	nr_documento_externo = nr_contrato_bionexo_w;

if (nr_sequencia_p > 0) then
	select	cd_cnpj_fornecedor,
		ds_titulo,
		dt_vigencia_inicio,
		dt_vigencia_fim,
		obter_dias_entre_datas(dt_vigencia_inicio_w, dt_vigencia_fim_w) qt_dias_rescisao,
		ie_status
	into STRICT	cd_cnpj_fornecedor_w,
		ds_titulo_w,
		dt_vigencia_inicio_w,
		dt_vigencia_fim_w,
		qt_dias_rescisao_w,
		ie_status_w
	from	w_bionexo_contrato
	where	nr_sequencia = nr_sequencia_p;
end if;

if (ie_status_w <> 'X') then
begin
	if (nr_seq_contrato_w = 0) then
	begin

	select	nextval('contrato_seq')
	into STRICT	nr_seq_contrato_w
	;

	insert into contrato(
		nr_sequencia,
		cd_cgc_contratado,
		nr_seq_tipo_contrato,
		ds_objeto_contrato,
		ie_renovacao,
		dt_atualizacao,
		nm_usuario,
		ie_situacao,
		dt_inicio,
		dt_fim,
		qt_dias_rescisao,
		cd_contrato,
		ie_prazo_contrato,
		cd_estabelecimento,
		ie_avisa_vencimento,
		ie_avisa_venc_setor,
		ie_classificacao,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ds_titulo_contrato,
		nr_documento_externo,
		ds_observacao,
		ie_periodo_nf)
	values (	nr_seq_contrato_w,
		cd_cnpj_fornecedor_w,
		nr_seq_tipo_contrato_w,
		ds_titulo_w,
		'A',
		clock_timestamp(),
		nm_usuario_p,
		'A',
		dt_vigencia_inicio_w,
		dt_vigencia_fim_w,
		qt_dias_rescisao_w,
		nr_seq_contrato_w,
		'D',
		cd_estabelecimento_p,
		'N',
		'S',
		'AT',
		clock_timestamp(),
		nm_usuario_p,
		ds_titulo_w,
		nr_contrato_bionexo_w,
		substr(wheb_mensagem_pck.get_texto(313420),1,255),
		'N');



	open C01;
	loop
	fetch C01 into
		cd_material_w,
		qt_material_w,
		vl_material_w,
		ds_embalagem_w,
		qt_embalagem_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select	count(*)
		into STRICT	qt_registro_w
		from	material
		where	cd_material = cd_material_w
		and	ie_situacao = 'A'  LIMIT 1;

		if (qt_registro_w > 0) then
			select	nextval('contrato_regra_nf_seq')
			into STRICT	nr_seq_item_w
			;

			insert into contrato_regra_nf(
				nr_sequencia,
				nr_seq_contrato,
				dt_atualizacao,
				nm_usuario,
				cd_material,
				vl_pagto,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_inicio_vigencia,
				dt_fim_vigencia,
				qt_material_fixa,
				ie_gera_sc_automatico)
			values (	nr_seq_item_w,
				nr_seq_contrato_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_material_w,
				vl_material_w,
				clock_timestamp(),
				nm_usuario_p,
				dt_vigencia_inicio_w,
				dt_vigencia_fim_w,
				qt_material_w,
				'N');
		end if;

		end;
	end loop;
	close C01;

	end;
	else

	qt_dias_rescisao_w	:= obter_dias_entre_datas(dt_vigencia_inicio_w, dt_vigencia_fim_w);

	update	contrato
	set	cd_cgc_contratado		= cd_cnpj_fornecedor_w,
		ds_objeto_contrato		= ds_titulo_w,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p,
		dt_inicio			= dt_vigencia_inicio_w,
		dt_fim			= dt_vigencia_fim_w,
		qt_dias_rescisao		= qt_dias_rescisao_w,
		ds_titulo_contrato		= ds_titulo_w
	where	nr_sequencia		= nr_seq_contrato_w;


	open C01;
	loop
	fetch C01 into
		cd_material_w,
		qt_material_w,
		vl_material_w,
		ds_embalagem_w,
		qt_embalagem_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select	count(*)
		into STRICT	qt_registro_w
		from	material
		where	cd_material = cd_material_w
		and	ie_situacao = 'A'  LIMIT 1;

		if (qt_registro_w > 0) then


			select	count(*)
			into STRICT	qt_registro_w
			from	contrato_regra_nf
			where	nr_seq_contrato = nr_seq_contrato_w
			and	cd_material = cd_material_w;

			if (qt_registro_w = 0) then

				select	nextval('contrato_regra_nf_seq')
				into STRICT	nr_seq_item_w
				;

				insert into contrato_regra_nf(
					nr_sequencia,
					nr_seq_contrato,
					dt_atualizacao,
					nm_usuario,
					cd_material,
					vl_pagto,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_inicio_vigencia,
					dt_fim_vigencia,
					qt_material_fixa,
					ie_gera_sc_automatico)
				values (	nr_seq_item_w,
					nr_seq_contrato_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_material_w,
					vl_material_w,
					clock_timestamp(),
					nm_usuario_p,
					dt_vigencia_inicio_w,
					dt_vigencia_fim_w,
					qt_material_w,
					'N');
			else

				update	contrato_regra_nf
				set	dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p,
					vl_pagto			= vl_material_w,
					dt_inicio_vigencia		= dt_vigencia_inicio_w,
					dt_fim_vigencia		= dt_vigencia_fim_w,
					qt_material_fixa		= qt_material_w
				where	nr_seq_contrato 		= nr_seq_contrato_w
				and	cd_material 		= cd_material_w;


			end if;
		end if;

		end;
	end loop;
	close C01;

	end if;
end;
end if;

delete from w_bionexo_contrato
where nr_Sequencia = nr_sequencia_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importa_contrato_integracao ( nr_sequencia_p bigint, nm_usuario_p text, nm_usuario_conexao_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

