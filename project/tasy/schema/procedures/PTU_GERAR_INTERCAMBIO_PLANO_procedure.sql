-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_intercambio_plano (( nr_seq_empresa_p ptu_intercambio_empresa.nr_sequencia%type, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_contrato_p bigint) is nr_seq_contrato_w bigint) RETURNS varchar AS $body$
DECLARE

ds_retorno_w	varchar(255);
C01 CURSOR FOR
	SELECT	cd_intercambio
	from	pls_interc_segmentacao
	where (ie_segmentacao = ie_segmentacao_p or (coalesce(ie_segmentacao::text, '') = '' and coalesce(ie_segmentacao::text, '') = ''))
	order by coalesce(ie_segmentacao,0);
BEGIN
ds_retorno_w	:= null;
for r_c01_w in C01 loop
	begin
	ds_retorno_w	:= r_c01_w.cd_intercambio;
	end;
end loop;
return	ds_retorno_w;
end;

begin

select	nr_seq_contrato,
	ie_tipo_contrato
into STRICT	nr_seq_contrato_w,
	ie_tipo_contrato_w
from	ptu_intercambio_empresa
where	nr_sequencia	= nr_seq_empresa_p;

if (nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '') then
	nr_seq_contrato_w := nr_seq_contrato_p;
end if;

select	max(a.cd_unimed_destino),
	max(a.nr_seq_lote_envio)
into STRICT	cd_unimed_origem_w,
	nr_seq_lote_envio_w
from	ptu_intercambio_empresa	b,
	ptu_intercambio		a
where	b.nr_seq_intercambio	= a.nr_sequencia
and	b.nr_sequencia		= nr_seq_empresa_p;

if (nr_seq_lote_envio_w IS NOT NULL AND nr_seq_lote_envio_w::text <> '') then
	select	max(ie_tipo_compartilhamento)
	into STRICT	ie_tipo_compartilhamento_w
	from	ptu_intercambio_lote_envio
	where	nr_sequencia = nr_seq_lote_envio_w;
else
	ie_tipo_compartilhamento_w	:= null;
end if;

select	max(nr_sequencia)
into STRICT	nr_seq_congenere_w
from	pls_congenere
where	cd_cooperativa	= cd_unimed_origem_w;

select	max(cd_ans)
into STRICT	cd_ope_ans_w
from	pls_outorgante
where	cd_estabelecimento	= cd_estabelecimento_p;

open C01;
loop
fetch C01 into
	nr_seq_plano_w,
	nr_seq_contrato_ww,
	nr_seq_intercambio_w,
	nm_estipulante_contrato_w,
	nm_estipulante_intercambio_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	cd_plano_intercambio,
		substr(ds_plano,1,40),
		coalesce(cd_scpa, nr_protocolo_ans),
		CASE WHEN ie_abrangencia='N' THEN 1 WHEN ie_abrangencia='GE' THEN 2 WHEN ie_abrangencia='E' THEN 3 WHEN ie_abrangencia='GM' THEN 4 WHEN ie_abrangencia='M' THEN 5  ELSE 0 END ,
		CASE WHEN ie_tipo_contratacao='I' THEN 2 WHEN ie_tipo_contratacao='CE' THEN 3 WHEN ie_tipo_contratacao='CA' THEN 4 WHEN ie_tipo_contratacao='I' THEN 5 END ,
		CASE WHEN ie_regulamentacao='R' THEN 1 WHEN ie_regulamentacao='A' THEN 2 WHEN ie_regulamentacao='P' THEN 3 END ,
		coalesce(dt_ativacao,dt_liberacao),
		ie_segmentacao
	into STRICT	cd_plano_intercambio_w,
		ds_plano_w,
		cd_prod_ans_w,
		ie_abrengancia_w,
		ie_tipo_contratacao_w,
		ie_regulamentacao_w,
		dt_ativacao_produto_w,
		ie_segmentacao_w
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_w;
	
	if (coalesce(cd_plano_intercambio_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 225459, 'DS_PLANO='||ds_plano_w||';NR_SEQ_PLANO='||nr_seq_plano_w );
		--'Falta informação do Código intercâmbio para o produto ' || ds_plano_w || ' (' || nr_seq_plano_w || ')'
	end if;
	
	if (coalesce(dt_ativacao_produto_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1060777,'DS_PLANO='||nr_seq_plano_w||' - '||ds_plano_w); --Produto #@DS_PLANO não possui data de ativação.
	end if;
	
	begin
	select	nr_sequencia,
		dt_suspensao,
		nm_fantasia
	into STRICT	nr_seq_plano_ww,
		dt_exclusao_w,
		nm_fantasia_w
	from	pls_plano
	where	nr_sequencia	= (	SELECT	max(nr_sequencia)
					from	pls_plano
					where	cd_plano_intercambio	= cd_plano_intercambio_w
					and	ie_tipo_operacao	= 'T');
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 1050656,	'CD_PLANO_INTERCAMBIO='||cd_plano_intercambio_w || chr(13) ||
									';PLANO='|| nr_seq_plano_w || ' - ' || ds_plano_w || chr(13) ||
									';CONTRATO='|| coalesce(nr_seq_contrato_ww, nr_seq_intercambio_w) || ' - ' ||
									coalesce(nm_estipulante_contrato_w, nm_estipulante_intercambio_w || ' (Intercâmbio)'));
		--A operadora não possui plano de intercâmbio com código #@CD_PLANO_INTERCAMBIO#@.

		--Produto origem: #@PLANO#@.

		--Contrato: #@CONTRATO#@
	end;
	
	select	count(*)
	into STRICT	qt_plano_intercambio_w
	from	ptu_intercambio_plano
	where	nr_seq_empresa		= nr_seq_empresa_p
	and	cd_plano_intercambio	= cd_plano_intercambio_w
	and	ie_abrangencia		= ie_abrengancia_w
	and	ie_natureza		= ie_tipo_contratacao_w;
	
	begin
	select	max(nr_sequencia),
		substr(max(ds_plano),1,40)
	into STRICT	cd_plano_origem_w,
		ds_plano_ww
	from	pls_plano
	where	cd_plano_intercambio	= cd_plano_intercambio_w
	and	ie_tipo_operacao	= 'T'
	and	((ie_tipo_contratacao	= CASE WHEN ie_tipo_contratacao_w=2 THEN 'I' WHEN ie_tipo_contratacao_w=3 THEN 'CE' WHEN ie_tipo_contratacao_w=4 THEN 'CA' WHEN ie_tipo_contratacao_w=5 THEN 'I' END  and (ie_tipo_contratacao IS NOT NULL AND ie_tipo_contratacao::text <> '')) or coalesce(ie_tipo_contratacao::text, '') = '')
	and	((ie_abrangencia	= CASE WHEN ie_abrengancia_w=1 THEN 'N' WHEN ie_abrengancia_w=2 THEN 'GE' WHEN ie_abrengancia_w=3 THEN 'E' WHEN ie_abrengancia_w=4 THEN 'GM' WHEN ie_abrengancia_w=5 THEN 'M' END  and (ie_abrangencia IS NOT NULL AND ie_abrangencia::text <> '')) or coalesce(ie_abrangencia::text, '') = '');
	exception
	when others then
		cd_plano_origem_w	:= null;
	end;
	
	if (coalesce(cd_plano_origem_w::text, '') = '') then
		select	CASE WHEN ie_tipo_contratacao_w=2 THEN 'Individual/Familiar' WHEN ie_tipo_contratacao_w=3 THEN 'Coletivo empresarial' WHEN ie_tipo_contratacao_w=4 THEN 'Coletivo adesão' WHEN ie_tipo_contratacao_w=5 THEN 'Individual/Familiar' END ,
			CASE WHEN ie_abrengancia_w=1 THEN 'Nacional' WHEN ie_abrengancia_w=2 THEN 'Grupos de Estados' WHEN ie_abrengancia_w=3 THEN 'Estadual' WHEN ie_abrengancia_w=4 THEN 'Grupos de municipios' WHEN ie_abrengancia_w=5 THEN 'Municipal' END
		into STRICT	ds_contratacao_w,
			ds_abrangencia_w
		;
		
		ds_erro_origem_w	:= 'Não existe um plano na operadora com o intercâmbio ' || cd_plano_intercambio_w ||', com os dados: '|| chr(10)||
					   'Abrangência: '|| ds_abrangencia_w || chr(10)||
					   'Tipo   contratação: '|| ds_contratacao_w;
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 225462, 'DS_ERRO_ORIGEM='||ds_erro_origem_w );
		exit;
	end if;
	
	if (qt_plano_intercambio_w = 0) then
		begin

		ds_plano_ww		:= Elimina_Acentuacao(ds_plano_ww);
		ds_plano_ww		:= elimina_caractere_especial(ds_plano_ww);
		cd_segmentacao_w	:= obter_cd_segmentacao(ie_segmentacao_w);
		
		insert	into	ptu_intercambio_plano(	nr_sequencia, nr_seq_empresa, cd_plano_origem,
				cd_plano_intercambio, dt_inclusao, ie_natureza,
				ie_abrangencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, ds_plano_origem,
				dt_exclusao, nr_ind_reembolso, nr_seq_plano,
				cd_ope_ans, cd_prod_ans, ie_plano,
				cd_segmentacao)
			values (	nextval('ptu_intercambio_plano_seq'), nr_seq_empresa_p, cd_plano_origem_w,
				substr(cd_plano_intercambio_w,1,3), dt_ativacao_produto_w, ie_tipo_contratacao_w,
				ie_abrengancia_w, clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, ds_plano_ww ,
				dt_exclusao_w, null, cd_plano_origem_w,
				cd_ope_ans_w, cd_prod_ans_w, ie_regulamentacao_w,
				cd_segmentacao_w);
		exception
		when others then
			CALL wheb_mensagem_pck.exibir_mensagem_abort( 225463, 'NM_FANTASIA='||nm_fantasia_w||';NR_SEQ_PLANO='||nr_seq_plano_ww||'-'||nr_seq_plano_w );
			--'Erro ao gerar o plano '||nm_fantasia_w || ' (' || nr_seq_plano_ww || ') no intercâmbio. Favor verifique seu cadastro'
		end;
	end if;
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	nr_seq_plano_w,
	nr_seq_segurado_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	
	if (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') then
		select	substr(ds_plano,1,40),
			coalesce(dt_ativacao,dt_liberacao),
			cd_plano_intercambio,
			dt_suspensao,
			nm_fantasia,
			ie_segmentacao
		into STRICT	ds_plano_w,
			dt_ativacao_produto_w,
			cd_plano_intercambio_w,
			dt_exclusao_w,
			nm_fantasia_w,
			ie_segmentacao_w
		from	pls_plano
		where	nr_sequencia	= nr_seq_plano_w;
		
		if (coalesce(dt_ativacao_produto_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1060777,'DS_PLANO='||nr_seq_plano_w||' - '||ds_plano_w); --Produto #@DS_PLANO não possui data de ativação.
		end if;
		
		if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
			select	max(nr_seq_plano)
			into STRICT	nr_seq_plano_ww
			from	pls_segurado
			where	nr_sequencia	= nr_seq_segurado_w;
			
			if (nr_seq_plano_ww IS NOT NULL AND nr_seq_plano_ww::text <> '') then
				select	CASE WHEN ie_abrangencia='N' THEN 1 WHEN ie_abrangencia='GE' THEN 2 WHEN ie_abrangencia='E' THEN 3 WHEN ie_abrangencia='GM' THEN 4 WHEN ie_abrangencia='M' THEN 5  ELSE 0 END ,
					CASE WHEN ie_tipo_contratacao='I' THEN 2 WHEN ie_tipo_contratacao='CE' THEN 3 WHEN ie_tipo_contratacao='CA' THEN 4 WHEN ie_tipo_contratacao='I' THEN 5 END ,
					CASE WHEN ie_regulamentacao='R' THEN 1 WHEN ie_regulamentacao='A' THEN 2 WHEN ie_regulamentacao='P' THEN 3 END
				into STRICT	ie_abrengancia_w,
					ie_tipo_contratacao_w,
					ie_regulamentacao_w
				from	pls_plano
				where	nr_sequencia	= nr_seq_plano_ww;
				
				if (ie_tipo_contrato_w	= 'P') then
					select	max(nr_protocolo_ans)
					into STRICT	cd_prod_ans_w
					from	pls_plano
					where	nr_sequencia = nr_seq_plano_ww;
				end if;
			end if;
		else
			cd_prod_ans_w		:= null;
			ie_abrengancia_w	:= 0;
			ie_tipo_contratacao_w	:= 2;
		end if;
		
		if (coalesce(cd_plano_intercambio_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort( 225464, 'NM_FANTASIA='||nm_fantasia_w||';NR_SEQ_PLANO='||nr_seq_plano_w );
			--'Falta informação do Código intercâmbio para o produto ' || nm_fantasia_w || ' (' || nr_seq_plano_w || ')'
		end if;
		
		select	count(*)
		into STRICT	qt_plano_intercambio_w
		from	ptu_intercambio_plano
		where	nr_seq_empresa		= nr_seq_empresa_p
		and	cd_plano_intercambio	= cd_plano_intercambio_w
		and	ie_abrangencia		= ie_abrengancia_w
		and	ie_natureza		= ie_tipo_contratacao_w;
		
		begin
		select	max(nr_sequencia)
		into STRICT	cd_plano_origem_w
		from	pls_plano
		where	cd_plano_intercambio	= cd_plano_intercambio_w
		and	ie_tipo_operacao	= 'T'
		and	((ie_tipo_contratacao	= CASE WHEN ie_tipo_contratacao_w=2 THEN 'I' WHEN ie_tipo_contratacao_w=3 THEN 'CE' WHEN ie_tipo_contratacao_w=4 THEN 'CA' WHEN ie_tipo_contratacao_w=5 THEN 'I' END  and (ie_tipo_contratacao IS NOT NULL AND ie_tipo_contratacao::text <> '')) or coalesce(ie_tipo_contratacao::text, '') = '')
		and	((ie_abrangencia	= CASE WHEN ie_abrengancia_w=1 THEN 'N' WHEN ie_abrengancia_w=2 THEN 'GE' WHEN ie_abrengancia_w=3 THEN 'E' WHEN ie_abrengancia_w=4 THEN 'GM' WHEN ie_abrengancia_w=5 THEN 'M' END  and (ie_abrangencia IS NOT NULL AND ie_abrangencia::text <> '')) or coalesce(ie_abrangencia::text, '') = '');
		exception
		when others then
			cd_plano_origem_w	:= null;
		end;
		
		if (coalesce(cd_plano_origem_w::text, '') = '') then
			select	CASE WHEN ie_tipo_contratacao_w=2 THEN 'Individual/Familiar' WHEN ie_tipo_contratacao_w=3 THEN 'Coletivo empresarial' WHEN ie_tipo_contratacao_w=4 THEN 'Coletivo adesão' WHEN ie_tipo_contratacao_w=5 THEN 'Individual/Familiar' END ,
				CASE WHEN ie_abrengancia_w=1 THEN 'Nacional' WHEN ie_abrengancia_w=2 THEN 'Grupos de Estados' WHEN ie_abrengancia_w=3 THEN 'Estadual' WHEN ie_abrengancia_w=4 THEN 'Grupos de municipios' WHEN ie_abrengancia_w=5 THEN 'Municipal' END
			into STRICT	ds_contratacao_w,
				ds_abrangencia_w
			;
			ds_erro_origem_w	:= 'Não existe um plano na operadora com o intercâmbio ' || cd_plano_intercambio_w ||', com os dados: '|| chr(10)||
							'Abrangência: '|| ds_abrangencia_w || chr(10)||
							'Tipo  contratação: ' || ds_contratacao_w;
			CALL wheb_mensagem_pck.exibir_mensagem_abort( 225462, 'DS_ERRO_ORIGEM='||ds_erro_origem_w );
			exit;
		end if;
		
		if (qt_plano_intercambio_w	= 0) then
			begin

			ds_plano_w		:= Elimina_Acentuacao(ds_plano_w);
			ds_plano_w		:= elimina_caractere_especial(ds_plano_w);
			cd_segmentacao_w	:= obter_cd_segmentacao(ie_segmentacao_w);
			
			insert	into	ptu_intercambio_plano(	nr_sequencia, nr_seq_empresa, cd_plano_origem,
					cd_plano_intercambio, dt_inclusao, ie_natureza,
					ie_abrangencia, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, ds_plano_origem,
					dt_exclusao, nr_ind_reembolso,nr_seq_plano,cd_ope_ans,cd_prod_ans,
					cd_segmentacao)
				values (	nextval('ptu_intercambio_plano_seq'), nr_seq_empresa_p, cd_plano_origem_w,
					cd_plano_intercambio_w, dt_ativacao_produto_w, ie_tipo_contratacao_w,
					ie_abrengancia_w, clock_timestamp(), nm_usuario_p,
					clock_timestamp(), nm_usuario_p, ds_plano_w,
					dt_exclusao_w, null,cd_plano_origem_w,cd_ope_ans_w,cd_prod_ans_w,
					cd_segmentacao_w);
			exception
			when others then
				CALL wheb_mensagem_pck.exibir_mensagem_abort( 225463, 'NM_FANTASIA='||nm_fantasia_w||';NR_SEQ_PLANO='||nr_seq_plano_w );
				--'Erro ao gerar o plano '||nm_fantasia_w || ' (' || nr_seq_plano_w || ') no intercâmbio. Favor verifique seu cadastro'
			end;
		end if;
	end if;	
	end;
end loop;
close C02;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_intercambio_plano (( nr_seq_empresa_p ptu_intercambio_empresa.nr_sequencia%type, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_contrato_p bigint) is nr_seq_contrato_w bigint) FROM PUBLIC;

