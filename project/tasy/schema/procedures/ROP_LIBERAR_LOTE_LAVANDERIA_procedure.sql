-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rop_liberar_lote_lavanderia ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_estabelecimento_w		smallint;
ie_consiste_local_saida_w		varchar(1);
ie_consiste_local_entrada_w		varchar(1);
ie_permite_saida_sem_itens_w	varchar(1);
ie_permite_entrada_sem_itens_w	varchar(1);
ie_exige_justif_diverg_w		varchar(1);
ie_evento_w			varchar(15);
qt_existe_w			bigint;
qt_peso_w			double precision;
nr_seq_motivo_dev_w		bigint;
ds_justificativa_dev_w		varchar(4000);
ie_exige_justif_w			varchar(1);
ie_permite_pecas_sem_qt_peso_w	varchar(1);
ie_exige_preenchimento_peso_w	varchar(1);
qt_existe_peso_w	bigint;


BEGIN

select	a.ie_evento,
	a.cd_estabelecimento,
	a.qt_peso,
	a.nr_seq_motivo_dev,
	a.ds_justificativa_dev
into STRICT	ie_evento_w,
	cd_estabelecimento_w,
	qt_peso_w,
	nr_seq_motivo_dev_w,
	ds_justificativa_dev_w
from	rop_lavanderia a
where	a.nr_sequencia = nr_sequencia_p;

select	substr(coalesce(obter_valor_param_usuario(1301, 11, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N'),1,1),
	substr(coalesce(obter_valor_param_usuario(1301, 12, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N'),1,1),
	substr(coalesce(obter_valor_param_usuario(1301, 30, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N'),1,1),
	substr(coalesce(obter_valor_param_usuario(1301, 60, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N'),1,1),
	substr(coalesce(obter_valor_param_usuario(1301, 31, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N'),1,1),
	substr(coalesce(obter_valor_param_usuario(1301, 62, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N'),1,1),
	substr(coalesce(obter_valor_param_usuario(1301, 96, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N'),1,1)
into STRICT	ie_consiste_local_saida_w,
	ie_consiste_local_entrada_w,
	ie_permite_saida_sem_itens_w,
	ie_permite_entrada_sem_itens_w,
	ie_exige_justif_diverg_w,
	ie_permite_pecas_sem_qt_peso_w,
	ie_exige_preenchimento_peso_w
;

if (ie_exige_preenchimento_peso_w = 'S') then

	select	count(*)
	into STRICT	qt_existe_w
	from	rop_lavanderia a
	where	a.nr_sequencia = nr_sequencia_p
	and	a.ie_evento = 'E'
	and	(a.nr_seq_saida_corresp IS NOT NULL AND a.nr_seq_saida_corresp::text <> '')
	and	coalesce(a.qt_peso,0) = 0;

	if (qt_existe_w = 0) then

		select	count(*)
		into STRICT	qt_existe_w
		FROM rop_lavanderia a
LEFT OUTER JOIN rop_lavanderia_inf_peso b ON (a.nr_sequencia = b.nr_seq_lavanderia)
WHERE a.ie_evento = 'E' and (a.nr_seq_saida_corresp IS NOT NULL AND a.nr_seq_saida_corresp::text <> '') and a.nr_sequencia = nr_sequencia_p and ((coalesce(b.qt_saida_real,0) = 0) or (coalesce(b.qt_peso_sujo_lav,0) = 0) or (coalesce(b.qt_peso_limpo_lav,0) = 0) or (coalesce(b.qt_peso_limpo_hosp,0) = 0));
	end if;

	if (qt_existe_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(260630);
		--Favor informar todos os campos relacionadas ao peso do registro antes de liberar!
	end if;
end if;

select	count(*)
into STRICT	qt_existe_w
from	rop_lavanderia_item
where	nr_seq_lavanderia = nr_sequencia_p;

if (qt_existe_w = 0) and
	((ie_evento_w = 'S' AND ie_permite_saida_sem_itens_w = 'N') or
	(ie_evento_w <> 'S' AND ie_permite_entrada_sem_itens_w = 'N')) then
	--Este registro não possui nenhum item.
	CALL wheb_mensagem_pck.exibir_mensagem_abort(260639);
end if;

if (qt_existe_w = 0) and (ie_evento_w = 'S') and (ie_permite_saida_sem_itens_w = 'S') and (coalesce(qt_peso_w,0) = 0) then
	--Quando não informar nenhum item, deve ser necessário informar o peso total que está sendo enviado a lavanderia.
	CALL wheb_mensagem_pck.exibir_mensagem_abort(260640);
end if;

if (qt_existe_w = 0) and (ie_evento_w <> 'S') and (ie_permite_entrada_sem_itens_w = 'S') and (coalesce(qt_peso_w,0) = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(260641);
	--Quando não informar nenhum item, deve ser necessário informar o peso total que está sendo recebido da lavanderia.
end if;

if (ie_permite_pecas_sem_qt_peso_w = 'N') and (qt_existe_w > 0) then

	select	count(*)
	into STRICT	qt_existe_w
	from	rop_lavanderia_item
	where	nr_seq_lavanderia = nr_sequencia_p
	and	coalesce(qt_peso,0) = 0
	and	coalesce(qt_roupa,0) = 0;

	/*Consiste caso tenha alguma peça sem peso ou sem quantidede*/

	if (qt_existe_w > 0) then
		--Deve ser informado o peso e/ou a quantidade para todas as peças.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(260643);
	end if;
end if;

/*Consiste para exigir a informação do motivo da devolução quando a operação for Entrada com Divergencia*/

if (ie_exige_justif_diverg_w = 'S') and (ie_evento_w = 'D') and (coalesce(nr_seq_motivo_dev_w::text, '') = '') then
	--Quando a operação for Entrada com divergência, é necessário informar o motivo da devolução. Verifique o parâmetro  [31].
	CALL wheb_mensagem_pck.exibir_mensagem_abort(260644);
end if;

/*Consiste se a justificativa estiver vazio sendo que para este motivo de devolução o sistema exige a justificativa*/

if (ie_evento_w = 'D') and (nr_seq_motivo_dev_w IS NOT NULL AND nr_seq_motivo_dev_w::text <> '') and (coalesce(ds_justificativa_dev_w::text, '') = '') then
	select	coalesce(ie_exige_justif,'N')
	into STRICT	ie_exige_justif_w
	from	rop_motivo_devolucao
	where	nr_sequencia = nr_seq_motivo_dev_w;

	if (ie_exige_justif_w = 'S') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(260646);
		--Para este motivo de devolução, o sistema exige a informação da justificativa.'
	end if;
end if;

select	count(*)
into STRICT	qt_existe_w
from	rop_lavanderia_item
where	nr_seq_lavanderia = nr_sequencia_p
and (rop_obter_se_peca_lav_interna(nr_seq_roupa) = 'N');

/*Consiste se num lote de saída para lavanderia externa, existe peças que o local atual não seje do tipo Lavanderia Interna*/

if (ie_evento_w = 'S') and (ie_consiste_local_saida_w = 'S') and (qt_existe_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(260647);
	/*Para enviar as peças para a Lavanderia Externa, o local atual destas peças tem que ser do tipo Lavanderia  Interna. ' ||
					'Neste registro existem peças cujo o local atual são de outro tipo. Favor verificar.'*/
end if;

select	count(*)
into STRICT	qt_existe_w
from	rop_lavanderia_item
where	nr_seq_lavanderia = nr_sequencia_p
and (rop_obter_se_peca_lav_externa(nr_seq_roupa) = 'N');

/*Consiste se num lote de entrada da lavanderia externa, existe peças que o local atual não seje do tipo Lavanderia Externa*/

if (ie_evento_w = 'E') and (ie_consiste_local_entrada_w = 'S') and (qt_existe_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(260649);
	/*'Para receber as peças da Lavanderia Externa, o local atual destas peças tem que ser do tipo Lavanderia  Externa. ' ||
					'Neste registro existem peças cujo o local atual são de outro tipo. Favor verificar.');*/
end if;

update	rop_lavanderia
set	dt_liberacao = clock_timestamp()
where	nr_sequencia = nr_sequencia_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rop_liberar_lote_lavanderia ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

