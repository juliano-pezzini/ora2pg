-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lic_importa_precos ( nr_seq_licitacao_p bigint, ie_opcao_material_p text, nm_usuario_p text) AS $body$
DECLARE


/*ie_opcao_material_p
0 = Código do Tasy
1 = Código do fornecedor, dai tem que utilizar a tabela preco_pj*/
cd_cgc_fornec_w				varchar(14);
cd_pessoa_fisica_w			varchar(10);
cd_estabelecimento_w			smallint;
nr_seq_lic_item_w				bigint;
nr_seq_lic_item_ww				bigint;
vl_item_w					double precision;
ds_marca_w				varchar(255);
nr_seq_marca_w				bigint;
cd_material_w				bigint;
nr_seq_lote_w				bigint;
nr_seq_fornec_w				bigint;
qt_item_w				double precision;
nr_seq_lic_item_fornec_w			bigint;
qt_existe_w				bigint;
nr_seq_item_fornec_w			bigint;
nr_lote_compra_w				varchar(80);
vl_original_w				double precision := 0;

c01 CURSOR FOR
SELECT	distinct
	a.cd_cgc_fornec,
	a.cd_pessoa_fisica
from	lic_w_importa_precos a
where	a.nr_seq_licitacao = nr_seq_licitacao_p
and	(a.cd_cgc_fornec IS NOT NULL AND a.cd_cgc_fornec::text <> '');

c02 CURSOR FOR
SELECT	distinct
	a.nr_seq_lic_item,
	a.vl_item,
	a.ds_marca,
	b.nr_seq_lote,
	b.nr_lote_compra
from	lic_w_importa_precos a,
	reg_lic_item b
where	a.nr_seq_lic_item	= b.nr_seq_lic_item
and	a.nr_seq_licitacao	= b.nr_seq_licitacao
and	a.nr_seq_licitacao	= nr_seq_licitacao_p
and	(a.cd_material IS NOT NULL AND a.cd_material::text <> '')
and	a.vl_item > 0
and	a.nr_seq_lic_item > 0;


BEGIN

open C01;
loop
fetch C01 into
	cd_cgc_fornec_w,
	cd_pessoa_fisica_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_fornec_w
	from	reg_lic_fornec
	where	nr_seq_licitacao = nr_seq_licitacao_p
	and	cd_cgc_fornec = cd_cgc_fornec_w;

	select	cd_estabelecimento
	into STRICT	cd_estabelecimento_w
	from	reg_licitacao
	where	nr_sequencia = nr_seq_licitacao_p;

	if (nr_seq_fornec_w = 0) then

		select	nextval('reg_lic_fornec_seq')
		into STRICT	nr_seq_fornec_w
		;

		insert into reg_lic_fornec(
			nr_sequencia,
			nr_seq_licitacao,
			dt_atualizacao,
			nm_usuario,
			cd_cgc_fornec,
			cd_pessoa_fisica,
			ie_situacao)
		values (	nr_seq_fornec_w,
			nr_seq_licitacao_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_cgc_fornec_w,
			cd_pessoa_fisica_w,
			'A');
	end if;

	open C02;
	loop
	fetch C02 into
		nr_seq_lic_item_w,
		vl_item_w,
		ds_marca_w,
		nr_seq_lote_w,
		nr_lote_compra_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		select	coalesce(max(cd_material),0)
		into STRICT	cd_material_w
		from	reg_lic_item
		where	nr_seq_licitacao = nr_seq_licitacao_p
		and	nr_seq_lic_item = nr_seq_lic_item_w;

		if (cd_material_w > 0) then

			if (ie_opcao_material_p = 1) then

				select	coalesce(max(cd_material),0)
				into STRICT	cd_material_w
				from	preco_pj
				where	cd_cgc	= cd_cgc_fornec_w
				and	cd_item	= cd_material_w
				and	cd_estabelecimento = cd_estabelecimento_w;

				if (cd_material_w = 0) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(266226,'CD_MATERIAL=' || cd_material_w);
					--'O material ' || cd_material_w || ' do arquivo, não foi encontrado no vínculado com o fornecedor. ' ||
					--'Verifique na função Pessoa Jurídica, pasta Regras, subpasta Preço fornecedor.');
				end if;
			end if;

			select	coalesce(max(nr_seq_lic_item),0)
			into STRICT	nr_seq_lic_item_ww
			from	reg_lic_item
			where	cd_material		= cd_material_w
			and	nr_seq_licitacao	= nr_seq_licitacao_p;

			if (nr_seq_lic_item_ww = 0) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(266228,'CD_MATERIAL=' || cd_material_w);
				--'O material com código ' || cd_material_w || ' não existe nesta licitação. Verifique na pasta Itens.');
			end if;


			if (ds_marca_w IS NOT NULL AND ds_marca_w::text <> '') then

				select	coalesce(max(nr_sequencia),0)
				into STRICT	nr_seq_marca_w
				from	marca
				where	elimina_acentuacao(upper(ds_marca)) = elimina_acentuacao(upper(ds_marca_w));

				if (nr_seq_marca_w = 0) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(266229,'DS_MARCA=' || ds_marca_w);
					--'Não existe nenhuma marca cadastrada no sistema com o nome ' || ds_marca_w || '.' || chr(13) || chr(10) ||
					--'Favor cadastra-la e em seguida importar novamente o arquivo.');
				else
					select	count(*)
					into STRICT	qt_existe_w
					from	material_marca
					where	cd_material = cd_material_w
					and	nr_sequencia = nr_seq_marca_w;

					if (qt_existe_w = 0) then

						insert into material_marca(
							cd_material,
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							qt_prioridade,
							ie_situacao)
						values (	cd_material_w,
							nr_seq_marca_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							1,
							'A');
					end if;
				end if;
			end if;

			qt_item_w	:= lic_obter_qt_item(nr_seq_licitacao_p, nr_seq_lic_item_w);

			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_lic_item_fornec_w
			from	reg_lic_item_fornec
			where	nr_seq_fornec	= nr_seq_fornec_w
			and	cd_material	= cd_material_w;

			if (coalesce(nr_seq_lote_w::text, '') = '') then
				begin
				if (nr_seq_lic_item_fornec_w = 0) then
					insert into reg_lic_item_fornec(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_fornec,
						nr_seq_lic_item,
						qt_item,
						ie_vencedor,
						vl_item,
						vl_original,
						cd_material,
						nr_seq_licitacao,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ie_qualificado,
						ie_qualif_lance_fornec,
						ds_marca)
					values (	nextval('reg_lic_item_fornec_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_fornec_w,
						nr_seq_lic_item_w,
						qt_item_w,
						'N',
						0,
						vl_item_w,
						cd_material_w,
						nr_seq_licitacao_p,
						clock_timestamp(),
						nm_usuario_p,
						'S',
						'S',
						ds_marca_w);
				else
					update	reg_lic_item_fornec
					set	vl_item = vl_item_w
					where	nr_seq_fornec		= nr_seq_fornec_w
					and	nr_seq_lic_item		= nr_seq_lic_item_w;
				end if;
				end;
			else
				begin

				nr_seq_item_fornec_w := 0;

				select	coalesce(max(nr_sequencia),0)
				into STRICT	nr_seq_item_fornec_w
				from	reg_lic_item_fornec
				where	nr_seq_fornec	= nr_seq_fornec_w
				and	nr_Seq_lic_item = nr_seq_lote_w;

				if (nr_seq_item_fornec_w = 0) then

					select	nextval('reg_lic_item_fornec_seq')
					into STRICT	nr_seq_item_fornec_w
					;

					insert into reg_lic_item_fornec(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_fornec,
						nr_seq_lic_item,
						qt_item,
						ie_vencedor,
						vl_item,
						vl_original,
						cd_material,
						nr_seq_licitacao,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ie_qualificado,
						ie_qualif_lance_fornec,
						ds_marca)
					values (	nr_seq_item_fornec_w,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_fornec_w,
						nr_seq_lote_w,
						qt_item_w,
						'N',
						0,
						vl_item_w,
						null,
						nr_seq_licitacao_p,
						clock_timestamp(),
						nm_usuario_p,
						'S',
						'S',
						ds_marca_w);
				else
					update	reg_lic_item_fornec
					set	qt_item		= qt_item + qt_item_w
					where	nr_sequencia	= nr_seq_item_fornec_w;
				end if;

				insert into reg_lic_item_fornec_lote(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_lic_item_fornec,
					nr_lote_compra,
					cd_material,
					qt_item,
					vl_item,
					nr_seq_licitacao,
					nr_seq_lic_item,
					ds_marca)
				values (	nextval('reg_lic_item_fornec_lote_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_item_fornec_w,
					nr_lote_compra_w,
					cd_material_w,
					qt_item_w,
					vl_item_w,
					nr_seq_licitacao_p,
					nr_seq_lic_item_w,
					ds_marca_w);

				select	sum(qt_item * vl_item)
				into STRICT	vl_original_w
				from	reg_lic_item_fornec_lote
				where	nr_seq_lic_item_fornec = nr_seq_item_fornec_w;

				update	reg_lic_item_fornec
				set	vl_original		= vl_original_w
				where	nr_sequencia	= nr_seq_item_fornec_w;

				end;
			end if;
		end if;
		end;
	end loop;
	close C02;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lic_importa_precos ( nr_seq_licitacao_p bigint, ie_opcao_material_p text, nm_usuario_p text) FROM PUBLIC;

