-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_evento_paciente (nr_seq_evento_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, nr_seq_laudo_p bigint, nm_usuario_p text, nr_repasse_terceiro_p bigint default null, ie_iso_precaucao_p text default null, ie_sincrono_p text default null, ds_mensagem_original_p text default null, cd_medico_resp_p text default null, cd_pessoa_parecer_p text default null, nr_seq_gv_p bigint default null, nr_parecer_p bigint default null, nr_titulo_p bigint default null, nr_seq_baixa_p bigint default null, ie_commit_p text default 'S', nr_seq_interno_p bigint default null, dt_referencia_p timestamp default clock_timestamp(), cd_evolucao_p bigint default null, cd_novo_setor_atendimento_p bigint default null, nr_seq_call_center_p bigint default null, gestao_vaga_r_p gestao_vaga default null, cd_especialidade_dest_p bigint default null, cd_especialidade_dest_prof_p bigint default null, nr_seq_tipo_parecer_p bigint default null, nr_seq_equipe_dest_p bigint default null, ie_trigger_parecer_p text default 'N', nr_seq_etapa_mentor_p bigint default null, nr_seq_evento_pj_p bigint default null, nr_prescricao_p bigint default null, nr_seq_item_presc_p text default null, ds_item_description_p text default null, nm_medico_presc_p text default null) AS $body$
DECLARE


ie_forma_ev_w					varchar(15);
ie_pessoa_destino_w				varchar(15);
cd_pf_destino_w					varchar(10);
cd_pf_destino_19_w				varchar(15);
ds_email_destino_19_w				varchar(255);
ds_mensagem_w					varchar(4000);
ds_titulo_w						varchar(4000);
cd_pessoa_destino_w				varchar(10);
nr_sequencia_w					bigint;
ds_maquina_w					varchar(80);
nm_paciente_w					varchar(60);
nm_paciente_abrev_w				varchar(60);
nm_paciente_abrev_total_w		varchar(60);
ds_unidade_w					varchar(60);
ds_setor_atendimento_w			varchar(60);
ie_usuario_aceite_w				varchar(1);
qt_corresp_w					integer;
cd_setor_atendimento_w			integer;
cd_perfil_w						integer;
cd_pessoa_regra_w				varchar(10);
nr_ramal_w						varchar(10);
nr_telefone_w					varchar(40);
cd_convenio_w					bigint;
cd_pessoa_terc_w				bigint;
nr_seq_terceiro_w				bigint;
nm_usuario_destino_w			varchar(15);
cd_setor_atend_pac_w			integer;
ds_cid_w						varchar(240);
cd_cid_w						varchar(10);
ds_dieta_w						varchar(4000);
dt_lib_precaucao_w				timestamp;
ds_precaucao_w					varchar(255);
ds_motivo_precaucao_w   		varchar(255);
nr_seq_precaucao				bigint;
nr_seq_motivo					bigint;
cd_status_w						varchar(2);
ds_convenio_w					varchar(255);
ds_setor_anterior_w				varchar(255);
ie_setor_ant_pa_w				varchar(5);
ds_observacao_w					varchar(4000);
ds_plano_conv_w					varchar(60);
ds_categoria_conv_w				varchar(60);
ds_tipo_atend_w					varchar(60);
ds_classif_pessoa_w				varchar(4000);
nm_paciente_gv_w				varchar(60);
nr_seq_interno_atual_w			bigint;
nr_seq_interno_anterior_w 		bigint;
cd_setor_anterior_w				bigint;
cd_unidade_basica_ant_w			varchar(10);
cd_unidade_compl_ant_w			varchar(10);
ds_setor_anterior_transf_w  	varchar(200);
ds_unid_basica_compl_ant_w		varchar(200);
nr_sequencia_cih_w				bigint;
ds_microorganismos_w			varchar(255);
ds_temp_w						varchar(255);
ds_topografia_w					varchar(255);
dt_registro_w					timestamp;
nm_medico_solic_w				varchar(60);
dt_inicio_w						timestamp;
ds_observacao_ww				varchar(2000);
cd_medico_parecer_w				varchar(10);
cd_especialidade_dest_w			integer;
cd_especialidade_dest_prof_w	integer;
nr_seq_equipe_w					bigint;
ie_equipe_w						varchar(10);
ds_usuario_w					varchar(255);
vl_baixa_w						double precision;
dt_baixa_w						timestamp;
dt_alta_anterior_w				timestamp;
ie_inserir_w					varchar(2);
dt_inicio_evento_w				timestamp;
dt_fim_evento_w					timestamp;
ie_dia_semana_w					varchar(1);
cd_setor_w						integer;
ds_unidade_setor_w				varchar(60);
dt_nascimento_w					varchar(70);
dt_prevista_w					timestamp;
dt_alta_prevista_w				timestamp;
ds_justificativa_evolucao_w		varchar(255);
ds_tipo_evolucao_w				varchar(200);
dt_evolucao_w					timestamp;
ds_evolucao_w					varchar(4000);
nr_seq_rtf_srtring_w			bigint;
ie_paciente_biobanco_w			varchar(100);
nm_prim_medico_w				varchar(255);
nr_parecer_w                    bigint;
nr_seq_tipo_parecer_w           varchar(255);
ie_assinou_termo_biobanco_w		varchar(1);
cd_perfil_origem_w				integer;
nr_seq_grupo_usuario_w			bigint;
nm_medico_w						varchar(255);
ds_servico_w					varchar(255);
dt_avaliacao_w					timestamp;
nm_avaliador_aval_w				varchar(255);
dt_base_vencto_w				repasse_terceiro.dt_base_vencto%type;
dt_periodo_inicial_w			repasse_terceiro.dt_periodo_inicial%type;
dt_periodo_final_w				repasse_terceiro.dt_periodo_final%type;
vl_repasse_w					double precision;
vl_liquido_repasse_w			double precision;
nr_adiant_pago_w				varchar(255);
vl_adiant_tit_pagar_w			varchar(255);
nm_fornec_adiant_pago_w			varchar(255);
nr_ordem_compra_adiant_w		varchar(255);
dt_alta_estorno_w				timestamp;
nm_usuario_estorno_w			varchar(15);
ie_tipo_convenio_w				smallint;
nr_atendimento_ant_w			bigint;
ds_motivo_isol_ant_w			varchar(255);
ds_novo_setor_atendimento_w		varchar(255);
ie_excecao_alerta_pessoa_w		varchar(1);
ds_estab_atend_w				varchar(255);
ds_email_fixo_w					varchar(100);
cd_pessoa_responsavel_w			varchar(10);
cd_setor_atend_n_pass_w			bigint;
ds_setor_ant_n_pass_transf_w		varchar(200);
nr_sequencia_interna_w			bigint;
nr_protocolo_atend_w			numeric(30);
dt_hora_atend_w					timestamp;
ds_motivo_alta_w				varchar(255);
ds_motivo_alta_medica_w			varchar(255);
ds_submotivo_alta_w				varchar(255);
ds_terceiro_w				varchar(255);
ds_tipo_repasse_w			varchar(255);
dt_mesano_referencia_w			timestamp;
vl_vencimento_w				repasse_terceiro_venc.vl_vencimento%type;
ds_periodicidade_w		        varchar(255);
ds_procedencia_w			varchar(255);
nm_profissional_w			varchar(255);
nr_seq_sinal_vital_w		numeric(20);
nm_medico_referido_w		varchar(255);
nr_pront_w					pessoa_fisica.nr_prontuario%type;
ds_sintoma_paciente_w		varchar(255);
ds_tag_w 					gqa_protocolo_etapa_pac.ds_tag%type;
ds_nome_etapa_w				gqa_protocolo_etapa_pac.ds_nome_etapa%type;
dt_fim_w					timestamp;
ds_profissional_etapa_w		varchar(255);
ds_nome_protocolo_w         gqa_protocolo_pac.ds_nome_protocolo%type;
dt_inclusao_w               timestamp;
ds_profissional_inclusao_w    varchar(255);
dt_termino_w                 timestamp;
ds_profissional_termino_w	varchar(255);
dt_inativacao_w				timestamp;
ds_profissional_inativo_w   timestamp;
ds_justificativa_w          gqa_protocolo_pac.ds_justificativa%type;
ds_protocolo_w protocolo_int_paciente.ds_tratamento%type;
ds_etapa_w  protocolo_int_pac_etapa.ds_etapa%type;
ds_evento_w  protocolo_int_pac_evento.ds_evento_plano%type;
dt_prevista_evento_w  protocolo_int_pac_evento.dt_prevista%type;
obs_serv_atend_w  atend_tipo_servico_ter.ds_observacao%type;

C01 CURSOR FOR
	SELECT	b.ie_forma_ev,
		b.ie_pessoa_destino,
		b.cd_pf_destino,
		coalesce(b.ie_usuario_aceite,'N'),
		b.cd_setor_atendimento,
		b.cd_perfil,
		b.nr_seq_grupo_usuario,
		b.ds_email_fixo
	from	ev_evento_regra_dest b
	where	b.nr_seq_evento	= nr_seq_evento_p
	and	((coalesce(cd_convenio, coalesce(cd_convenio_w,0))	= coalesce(cd_convenio_w,0)) or coalesce(ie_excecao,'N') = 'S')
	and	((coalesce(ie_tipo_convenio, coalesce(ie_tipo_convenio_w,0))	= coalesce(ie_tipo_convenio_w,0)) or coalesce(ie_excecao,'N') = 'S')
	and	((coalesce(cd_setor_atend_pac, coalesce(cd_setor_atend_pac_w,0)) = coalesce(cd_setor_atend_pac_w,0)) or coalesce(ie_excecao,'N') = 'S')
	and	((coalesce(b.cd_perfil_origem, coalesce(cd_perfil_origem_w,0)) = coalesce(cd_perfil_origem_w,0)) or (coalesce(ie_excecao,'N') = 'S'))
	and	((coalesce(b.ie_assinou_termo_biobanco,ie_assinou_termo_biobanco_w) = ie_assinou_termo_biobanco_w)  or coalesce(ie_excecao,'N') = 'S')
	and	(coalesce(b.ie_excecao,'N') = 'N'
	or	not exists (	SELECT	1
				from	ev_evento_regra_dest x
				where	x.nr_seq_evento	= nr_seq_evento_p
				and	((coalesce(x.cd_convenio, coalesce(cd_convenio_w,0))	= coalesce(cd_convenio_w,0)) or (coalesce(x.cd_convenio,0) = 0))
				and	((coalesce(x.cd_setor_atend_pac, coalesce(cd_setor_atend_pac_w,0)) = coalesce(cd_setor_atend_pac_w,0)) or (coalesce(x.cd_setor_atend_pac,0) = 0))
				and	((coalesce(b.cd_perfil_origem, coalesce(cd_perfil_origem_w,0)) = coalesce(cd_perfil_origem_w,0)) or (coalesce(b.cd_perfil_origem,0)=0))
				and (coalesce(x.ie_assinou_termo_biobanco,ie_assinou_termo_biobanco_w) = ie_assinou_termo_biobanco_w)
				and	coalesce(x.ie_excecao,'N') = 'S'))
	order by ie_forma_ev;

C02 CURSOR FOR
	SELECT	obter_dados_usuario_opcao(a.nm_usuario,'C')
	from	usuario_setor_v a,
		usuario b
	where	a.nm_usuario = b.nm_usuario
	and	b.ie_situacao = 'A'
	and	a.cd_setor_atendimento = cd_setor_atendimento_w
	and	ie_forma_ev_w in (2,3,8)
	and	(obter_dados_usuario_opcao(a.nm_usuario,'C') IS NOT NULL AND (obter_dados_usuario_opcao(a.nm_usuario,'C'))::text <> '');

C03 CURSOR FOR
	SELECT	obter_dados_usuario_opcao(a.nm_usuario,'C'),
			a.nm_usuario
	from	usuario_perfil a,
		usuario b
	where	a.nm_usuario = b.nm_usuario
	and	b.ie_situacao = 'A'
	and	a.cd_perfil = cd_perfil_w
	and	ie_forma_ev_w in (2,3,8)
	and	(obter_dados_usuario_opcao(a.nm_usuario,'C') IS NOT NULL AND (obter_dados_usuario_opcao(a.nm_usuario,'C'))::text <> '');

c04 CURSOR FOR
	SELECT	cd_pessoa_fisica
	from	terceiro
	where	(cd_pessoa_fisica IS NOT NULL AND cd_pessoa_fisica::text <> '')
	and	nr_sequencia	= nr_seq_terceiro_w
  and coalesce(ie_situacao,'A')  = 'A'
	
union all

	SELECT	cd_pessoa_fisica
	from	terceiro_pessoa_fisica
	where	nr_seq_terceiro = nr_seq_terceiro_w;


c05 CURSOR FOR
	SELECT	x.cd_medico
	from	prescr_medica x
	where	x.nr_atendimento	= nr_atendimento_p
	and	x.dt_prescricao  between clock_timestamp() - interval '36 days'/24 and clock_timestamp()
	
union

	SELECT	x.cd_medico
	from	evolucao_paciente x
	where	x.nr_atendimento	= nr_atendimento_p
	and	x.dt_evolucao  between clock_timestamp() - interval '36 days'/24 and clock_timestamp();

C06 CURSOR FOR
	SELECT	substr(obter_desc_microorganismo(cd_microorganismo),1,255)
	from	ATEND_PRECAUCAO_MICRO
	where	NR_SEQ_ATEND_PRECAUCAO = nr_sequencia_cih_w;

C07 CURSOR FOR
	SELECT	substr(obter_desc_topografia(cd_topografia),1,255)
	from	ATEND_PRECAUCAO_MICRO
	where	NR_SEQ_ATEND_PRECAUCAO = nr_sequencia_cih_w;

C08 CURSOR FOR
	SELECT	e.cd_pessoa_fisica
	from	medico_especialidade e,
    medico m
	where	e.cd_pessoa_fisica = m.cd_pessoa_fisica
	and (e.cd_pessoa_fisica IS NOT NULL AND e.cd_pessoa_fisica::text <> '')
  and coalesce(m.ie_situacao,'A')  = 'A'
  and obter_se_corpo_clinico(e.cd_pessoa_fisica) = 'S'
	and	coalesce(cd_medico_parecer_w::text, '') = ''
  and	    e.cd_especialidade = cd_especialidade_dest_w
	and	coalesce(cd_especialidade_dest_prof_w,0) = 0
	
union

	SELECT	cd_pessoa_fisica
	from	profissional_especialidade
	where	cd_especialidade_prof = cd_especialidade_dest_prof_w
	and	(cd_pessoa_fisica IS NOT NULL AND cd_pessoa_fisica::text <> '')
	and	coalesce(cd_medico_parecer_w::text, '') = ''
	and	coalesce(cd_especialidade_dest_w,0) = 0
	
union

	select	cd_medico_parecer_w
	
	where	(cd_medico_parecer_w IS NOT NULL AND cd_medico_parecer_w::text <> '')
	
union

	select  b.cd_pessoa_fisica
	from     pf_equipe_partic b,
		pf_equipe a
	where	a.nr_sequencia = b.nr_seq_equipe
	and	a.cd_pessoa_fisica	= cd_medico_parecer_w
	and	coalesce(a.ie_situacao,'A')  = 'A'
	and	(cd_medico_parecer_w IS NOT NULL AND cd_medico_parecer_w::text <> '')
	and	ie_equipe_w	= 'S'
	
union

	select  b.cd_pessoa_fisica
	from     pf_equipe_partic b,
		pf_equipe a
	where	a.nr_sequencia = b.nr_seq_equipe
	and	a.nr_sequencia	= nr_seq_equipe_w
	and	coalesce(a.ie_situacao,'A')  = 'A'
	and	(nr_seq_equipe_w IS NOT NULL AND nr_seq_equipe_w::text <> '')
	
union

	select  a.cd_pessoa_fisica
	from    pf_equipe a
	where	a.nr_sequencia	= nr_seq_equipe_w
	and	coalesce(a.ie_situacao,'A')  = 'A'
	and (a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')
	and	(nr_seq_equipe_w IS NOT NULL AND nr_seq_equipe_w::text <> '')
	
union

	select	b.cd_pessoa_fisica
	from	espec_regra_parecer a,
		medico_especialidade b
	where	a.cd_especialidade_dest = b.cd_especialidade
	and	a.cd_especialidade = cd_especialidade_dest_w
	and	(b.cd_pessoa_fisica IS NOT NULL AND b.cd_pessoa_fisica::text <> '')
	order by	1;

C09 CURSOR FOR
	SELECT	obter_dados_usuario_opcao(b.nm_usuario_grupo,'C')
	from	usuario_grupo b
	where	b.ie_situacao = 'A'
	and	ie_forma_ev_w in (2,3,8)
	and	(obter_dados_usuario_opcao(b.nm_usuario_grupo,'C') IS NOT NULL AND (obter_dados_usuario_opcao(b.nm_usuario_grupo,'C'))::text <> '')
	and	b.nr_seq_grupo = nr_seq_grupo_usuario_w;


BEGIN

cd_perfil_origem_w := Obter_perfil_Ativo;


select 	substr(max(obter_nome_estabelecimento(coalesce(cd_estabelecimento,1))),1,200),
		max(cd_pessoa_responsavel),
		substr(max(obter_desc_motivo_alta(cd_motivo_alta)),1,255),
		substr(max(obter_desc_motivo_alta(cd_motivo_alta_medica)),1,255),
		substr(max(obter_desc_submotivo_alta(nr_submotivo_alta)),1,255),
		substr(max(obter_desc_procedencia(cd_procedencia)),1,255),
		substr(max(obter_prof_atend_vig(nr_atendimento)),1,255),
    substr(max(ds_sintoma_paciente),1,255)
into STRICT	ds_estab_atend_w,
		cd_pessoa_responsavel_w,
		ds_motivo_alta_w,
		ds_motivo_alta_medica_w,
		ds_submotivo_alta_w,
		ds_procedencia_w,
		nm_profissional_w,
    ds_sintoma_paciente_w
from	atendimento_paciente
where 	nr_atendimento = nr_atendimento_p;


if (ie_sincrono_p = 'S') then
	begin
    cd_status_w := 'GS';
	end;
else
	begin
    cd_status_w := 'G';
	end;
end if;

select	substr(obter_inf_sessao(0),1,80)
into STRICT	ds_maquina_w
;

select	ds_titulo,
	ds_mensagem
into STRICT	ds_titulo_w,
	ds_mensagem_w
from	ev_evento
where	nr_sequencia	= nr_seq_evento_p;

if (nr_atendimento_p > 0) then
	select	coalesce(max(obter_convenio_atendimento(nr_atendimento_p)), 0),
		coalesce(max(Obter_Tipo_Convenio(obter_convenio_atendimento(nr_atendimento_p))), 0)
	into STRICT	cd_convenio_w,
		ie_tipo_convenio_w
	;
elsif (nr_Seq_gv_p IS NOT NULL AND nr_Seq_gv_p::text <> '') then
	select 	coalesce(max(cd_convenio),0),
		max(dt_prevista),
		substr(max(nm_paciente),1,60)
	into STRICT 	cd_convenio_w,
		dt_prevista_w,
		nm_paciente_gv_w
	from 	gestao_vaga
	where 	nr_sequencia = nr_seq_gv_p;

	if (coalesce(cd_convenio_w::text, '') = '' and coalesce(dt_prevista_w::text, '') = '' and coalesce(nm_paciente_gv_w::text, '') = '') then
		cd_convenio_w := gestao_vaga_r_p.cd_convenio;
		dt_prevista_w := gestao_vaga_r_p.dt_prevista;
		nm_paciente_gv_w := gestao_vaga_r_p.nm_paciente;
	end if;
elsif (coalesce(nr_repasse_terceiro_p,0) <> 0) then
	select	coalesce(max(a.cd_convenio),0)
	into STRICT	cd_convenio_w
	from	repasse_terceiro a
	where	a.nr_repasse_terceiro = nr_repasse_terceiro_p;
else
	cd_convenio_w	:= null;
end if;

if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') and (cd_convenio_w > 0) then
	begin
	ds_convenio_w	:= substr(obter_desc_convenio(cd_convenio_w),1,255);
	end;
end if;

select	CASE WHEN substr(obter_nome_pf(cd_pessoa_fisica_p),1,60)='' THEN nm_paciente_gv_w  ELSE substr(obter_nome_pf(cd_pessoa_fisica_p),1,60) END ,
	substr(abrevia_nome_pf(cd_pessoa_fisica_p,'M'),1,60),
	substr(obter_unidade_atendimento(nr_atendimento_p,'A','U'),1,60),
	substr(obter_unidade_atendimento(nr_atendimento_p,'A','RA'),1,60),
	substr(obter_unidade_atendimento(nr_atendimento_p,'A','TL'),1,60),
	substr(obter_unidade_atendimento(nr_atendimento_p,'A','S'),1,60),
	substr(obter_unidade_atendimento(nr_atendimento_p,'A','CS'),1,60),
	substr(obter_dados_pf(cd_pessoa_fisica_p, 'DN'),1,100),
	max(substr(obter_nome_tipo_atend(obter_tipo_atendimento(nr_atendimento_p)),1,60)),
	max(coalesce(obter_ultimo_atend_isolamento(cd_pessoa_fisica_p, nm_usuario_p),0)),
	max(substr(abrevia_nome_pf(cd_pessoa_fisica_p,'T'),1,60))
into STRICT	nm_paciente_w,
	nm_paciente_abrev_w,
	ds_unidade_w,
	nr_ramal_w,
	nr_telefone_w,
	ds_setor_atendimento_w,
	cd_setor_atend_pac_w,
	dt_nascimento_w,
	ds_tipo_atend_w,
	nr_atendimento_ant_w,
	nm_paciente_abrev_total_w
;

if (nr_seq_interno_p IS NOT NULL AND nr_seq_interno_p::text <> '') then

	select	obter_unidade_regra(nr_seq_interno_p)
	into STRICT	ds_unidade_w
	;

	select 	obter_setor_unidade(nr_seq_interno_p)
	into STRICT	cd_setor_w
	;

	if (coalesce(cd_setor_w,0) > 0) then

		select	substr(ds_setor_atendimento,1,60)
		into STRICT	ds_unidade_setor_w
		from	setor_atendimento
		where 	cd_setor_atendimento = cd_setor_w;


	end if;
end if;

if (nr_seq_etapa_mentor_p IS NOT NULL AND nr_seq_etapa_mentor_p::text <> '') then

	select  max(b.DS_TAG),
			max(b.DS_NOME_ETAPA),
			max(b.DT_INICIO) dt_inicio,
			max(b.dt_fim) dt_fim,
			max(Obter_dados_usuario_opcao(b.NM_USUARIO_EXECUTOR,'NP')) ds_profissional_etapa,
			max(a.DS_NOME_PROTOCOLO),
			max(a.DT_INCLUSAO) dt_inclusao,
			max(obter_nome_pf(a.CD_PROFISSIONAL)) ds_profissional_inclusao,
			max(a.DT_TERMINO) dt_termino,
			max(obter_dados_usuario_opcao(a.NM_USUARIO_TERMINO,'NP')) ds_profissional_termino,
			max(a.DT_INATIVACAO) dt_inativacao,
			max(obter_dados_usuario_opcao(a.NM_USUARIO_INATIVACAO,'NP')) ds_profissional_inativo,
			max(a.DS_JUSTIFICATIVA)
	into STRICT 	ds_tag_w,
			ds_nome_etapa_w,
			dt_inicio_w,
			dt_fim_w,
			ds_profissional_etapa_w,
			ds_nome_protocolo_w,
			dt_inclusao_w,
			ds_profissional_inclusao_w,
			dt_termino_w,
			ds_profissional_termino_w,
			dt_inativacao_w,
			ds_profissional_inativo_w,
			ds_justificativa_w
	from   gqa_protocolo_pac a,
		   gqa_protocolo_etapa_pac b
	where  b.NR_SEQ_PROT_PAC = a.nr_sequencia
	AND    B.NR_SEQUENCIA = nr_seq_etapa_mentor_p;

	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@PROTOCOLO_ETAPA_TAG',ds_tag_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@PROTOCOLO_ETAPA_NOME',ds_nome_etapa_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@PROTOCOLO_ETAPA_INICIO',PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_inicio_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@PROTOCOLO_ETAPA_FIM',PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_fim_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@PROTOCOLO_ETAPA_PROFISSIONAL',ds_profissional_etapa_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@PROTOCOLO_NOME',ds_nome_protocolo_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@PROTOCOLO_DATA_HORA',PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_inclusao_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@PROTOCOLO_PROFISSIONAL',ds_profissional_inclusao_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@PROTOCOLO_TERMINO',PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_termino_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@PROTOCOLO_PROF_TERMINO',ds_profissional_termino_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@PROTOCOLO_INATIVADO',PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_inativacao_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@PROTOCOLO_PROF_INATIVO',ds_profissional_inativo_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@PROTOCOLO_JUSTIFICATIVA',ds_justificativa_w),1,4000);

end if;

if (nr_seq_evento_pj_p IS NOT NULL AND nr_seq_evento_pj_p::text <> '') then

  SELECT pt.ds_tratamento,
         et.ds_etapa,
         ev.ds_evento_plano,
         ev.dt_prevista
    INTO STRICT ds_protocolo_w,
         ds_etapa_w, 
         ds_evento_w, 
         dt_prevista_evento_w
    FROM protocolo_int_pac_evento ev,
         protocolo_int_pac_etapa  et,
         protocolo_int_paciente   pt
   WHERE ev.nr_seq_prt_int_pac_etapa = et.nr_sequencia
     AND et.nr_seq_protocolo_int_pac = pt.nr_sequencia
     AND ev.nr_sequencia = nr_seq_evento_pj_p;

	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@LINHA_CUIDADO_NOME',ds_protocolo_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@LINHA_CUIDADO_ETAPA_NOME',ds_etapa_w),1,4000);
  ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@LINHA_CUIDADO_EVENTO_NOME',ds_evento_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@LINHA_CUIDADO_EVENTO_DT_PREVISTA',PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_prevista_evento_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,4000);

end if;

if (cd_evolucao_p IS NOT NULL AND cd_evolucao_p::text <> '') then

	select	ds_justificativa,
		substr(obter_descricao_padrao('TIPO_EVOLUCAO','DS_TIPO_EVOLUCAO', IE_EVOLUCAO_CLINICA),1,200),
		dt_evolucao
	into STRICT	ds_justificativa_evolucao_w,
		ds_tipo_evolucao_w,
		dt_evolucao_w
	from	evolucao_paciente
	where	cd_evolucao = cd_evolucao_p;

	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@justificativa_evolucao',ds_justificativa_evolucao_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@data_evolucao',PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_evolucao_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@tipo_evolucao',ds_tipo_evolucao_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@med_referido',nm_medico_referido_w),1,4000);

	if (position('@texto_evolucao' in ds_mensagem_w) > 0) then
		nr_seq_rtf_srtring_w := converte_rtf_string('select ds_evolucao from evolucao_paciente where cd_evolucao = :cd_evolucao', cd_evolucao_p, 'Tasy', nr_seq_rtf_srtring_w);

		select	substr(ds_texto_clob,4000,1)
		into STRICT	ds_evolucao_w
		from	tasy_conversao_rtf
		where	nr_sequencia = nr_seq_rtf_srtring_w;

		ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@texto_evolucao',ds_evolucao_w),1,4000);
	end if;

end if;

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
	select	coalesce(max(substr(obter_dados_categ_conv(nr_atendimento_p, 'DC'), 1, 60)),''),
			coalesce(max(substr(obter_dados_categ_conv(nr_atendimento_p, 'DC'), 1, 60)),''),
			coalesce(max(substr(Obter_Nome_Convenio(obter_convenio_atendimento(nr_atendimento_p)), 1, 60)),'')
	into STRICT	ds_plano_conv_w,
			ds_categoria_conv_w,
			ds_convenio_w
	from	atend_categoria_convenio
	where	nr_seq_interno	= obter_atecaco_atendimento(nr_atendimento_p);
end if;

select	substr(obter_cid_atendimento(nr_atendimento_p, 'P'),1,10),
	substr(obter_desc_cid_doenca(obter_cid_atendimento(nr_atendimento_p, 'P')),1,240)
into STRICT	cd_cid_w,
	ds_cid_w
;

if (ds_mensagem_original_p IS NOT NULL AND ds_mensagem_original_p::text <> '') then
  ds_mensagem_w := ds_mensagem_original_p || chr(13) || chr(10) || ds_mensagem_w;
end if;

ds_observacao_w 		:= obter_lista_dados_classif(cd_pessoa_fisica_p, 'O');
ds_classif_pessoa_w 	:= obter_lista_dados_classif(cd_pessoa_fisica_p, 'D');


select	max(b.ds_setor_atendimento),
	CASE WHEN substr(max(cd_classif_setor),1,60)=1 THEN '(PA)'  ELSE '' END
into STRICT	ds_setor_anterior_w,
	ie_setor_ant_pa_w
from	atend_paciente_unidade a,
	setor_atendimento b
where	a.cd_setor_atendimento = b.cd_setor_atendimento
and	a.nr_atendimento = nr_atendimento_p
and	a.nr_seq_interno = 	(SELECT	max(c.nr_seq_interno)
				from	atend_paciente_unidade c
				where	c.nr_atendimento = nr_atendimento_p
				and	c.nr_seq_interno < (	select	max(d.nr_seq_interno)
								from	atend_paciente_unidade d
								where	d.nr_atendimento = nr_atendimento_p));

--carla
select	max(ds_setor_atendimento)
into STRICT	ds_novo_setor_atendimento_w
from	setor_atendimento
where	cd_setor_atendimento = cd_novo_setor_atendimento_p;

select	obter_atepacu_paciente(nr_atendimento_p, 'UAA')
into STRICT	nr_seq_interno_anterior_w
;

if (nr_seq_interno_anterior_w > 0) then

	select  coalesce(cd_setor_atendimento,0),
		cd_unidade_basica,
		cd_unidade_compl
	into STRICT	cd_setor_anterior_w,
		cd_unidade_basica_ant_w,
		cd_unidade_compl_ant_w
	from    atend_paciente_unidade
	where   nr_atendimento = nr_atendimento_p
	and     nr_seq_interno = nr_seq_interno_anterior_w;

	ds_unid_basica_compl_ant_w := substr(cd_unidade_basica_ant_w || '  ' || cd_unidade_compl_ant_w,1,200);

	if (cd_setor_anterior_w > 0) then
		select	substr(obter_nome_setor(cd_setor_anterior_w),1,200)
		into STRICT	ds_setor_anterior_transf_w
		;
	end if;

	SELECT 	coalesce(max(NR_SEQ_INTERNO),0)
	into STRICT	nr_sequencia_interna_w
	FROM 	ATEND_PACIENTE_UNIDADE
	WHERE 	nr_Atendimento = nr_atendimento_p
	and		nr_seq_interno <> nr_seq_interno_atual_w
	AND 	ie_passagem_setor <> 'S';

	if (nr_sequencia_interna_w > 0) then

		select	max(cd_setor_atendimento)
		into STRICT 	cd_setor_atend_n_pass_w
		from 	ATEND_PACIENTE_UNIDADE
		where 	NR_SEQ_INTERNO = nr_sequencia_interna_w
		and 	nr_atendimento = nr_atendimento_p;

		select	substr(obter_nome_setor(cd_setor_atend_n_pass_w),1,200)
		into STRICT	ds_setor_ant_n_pass_transf_w
		;
	end if;
end if;

if (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') then
	select	max(dt_baixa),
		max(vl_baixa)
	into STRICT	dt_baixa_w,
		vl_baixa_w
	from	titulo_pagar_baixa
	where	nr_titulo	= nr_titulo_p
	and	nr_sequencia	= nr_seq_baixa_p;

	SELECT * FROM retorna_adiant_titulo_pagar(nr_titulo_p, nr_adiant_pago_w, vl_adiant_tit_pagar_w, nm_fornec_adiant_pago_w, nr_ordem_compra_adiant_w) INTO STRICT nr_adiant_pago_w, vl_adiant_tit_pagar_w, nm_fornec_adiant_pago_w, nr_ordem_compra_adiant_w;

end if;

if (position('@nomeusuario' in ds_mensagem_w) > 0 ) then

	select	substr(ds_usuario,1,40)
	into STRICT	ds_usuario_w
	from	usuario
	where	nm_usuario = nm_usuario_p;

	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@nomeusuario',ds_usuario_w),1,4000);

end if;

if (coalesce(nr_atendimento_ant_w,0) > 0) then

	ds_motivo_isol_ant_w	:= substr(obter_desc_motivo_isol_cih(nr_atendimento_ant_w),1,100);

	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_motivo_isol_ant',ds_motivo_isol_ant_w),1,4000); --Leva em consideracao o motivo de isolamento do atendimento anterior
end if;

select	substr(max(obter_nome_dieta(cd_dieta)),1,4000)
into STRICT 	ds_dieta_w
from	prescr_dieta
where	nr_prescricao = (	SELECT	max(nr_prescricao)
       				from	prescr_medica
       				where	nr_atendimento = nr_atendimento_p
       				and   (dt_liberacao IS NOT NULL AND dt_liberacao::text <> ''));

select	max(dt_alta)
into STRICT	dt_alta_anterior_w
from	atendimento_paciente
where	cd_pessoa_fisica = cd_pessoa_fisica_p
and	nr_atendimento < nr_atendimento_p;

select	max(dt_previsto_alta)
into STRICT	dt_alta_prevista_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_p;

select	CASE WHEN coalesce(max(ie_assinou_termo_biobanco), 'N')='S' THEN  wheb_mensagem_pck.get_texto(307529)  ELSE ' ' END , -- Paciente Biobanco: Sim
	coalesce(max(ie_assinou_termo_biobanco),'N')
into STRICT	ie_paciente_biobanco_w,
	ie_assinou_termo_biobanco_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_p;


select 	coalesce(substr(Obter_Primeiro_Nome(Obter_medico_resp_atend(max(nr_atendimento),'N')),1,255),'')
into STRICT	nm_prim_medico_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_p;

select 	coalesce(substr(OBTER_NOME_MEDICO(max(cd_medico_resp),'N'),1,255),''),
		coalesce(substr(OBTER_NOME_MEDICO(max(cd_medico_referido),'N'),1,255),'')
into STRICT	nm_medico_w,
		nm_medico_referido_w
from	atendimento_paciente
where	nr_atendimento =  nr_atendimento_p;

select	max(dt_alta_estorno),
	max(nm_usuario)
into STRICT	dt_alta_estorno_w,
	nm_usuario_estorno_w
from	atend_alta_hist
where	nr_atendimento = nr_atendimento_p
and	ie_alta_estorno = 'E'
and	dt_alta_estorno = (	SELECT	max(dt_alta_estorno)
				from	atend_alta_hist
				where	nr_atendimento = nr_atendimento_p
				and	ie_alta_estorno = 'E');

select	obter_select_concatenado_bv('select substr(obter_desc_serv_pac(nr_seq_servico),1,255)
				from  atend_pac_servico_conta
				where nr_atendimento = :nr_atendimento','nr_atendimento='||nr_atendimento_p,', ')
into STRICT 	ds_servico_w
;

if (ie_trigger_parecer_p = 'S') then

cd_especialidade_dest_w := cd_especialidade_dest_p;
cd_especialidade_dest_prof_w := cd_especialidade_dest_prof_p;
nr_seq_tipo_parecer_w := coalesce(substr(obter_descricao_padrao('TIPO_PARECER','DS_TIPO_PARECER',nr_seq_tipo_parecer_p),1,255),'');
nr_seq_equipe_w := nr_seq_equipe_dest_p;

else

select	coalesce(max(a.CD_ESPECIALIDADE_DEST),''),
        coalesce(max(a.CD_ESPECIALIDADE),''),
        coalesce(max(substr(obter_descricao_padrao('TIPO_PARECER','DS_TIPO_PARECER',a.nr_seq_tipo_parecer),1,255)),''),
        coalesce(max(nr_seq_equipe_dest),'')
into STRICT	cd_especialidade_dest_w,
        cd_especialidade_dest_prof_w,
        nr_seq_tipo_parecer_w,
	nr_seq_equipe_w
from	parecer_medico_req a
where	a.nr_parecer = (SELECT max(b.nr_parecer)
                        from   parecer_medico_req b
                        where  b.nr_atendimento = nr_atendimento_p);

end if;

select	max(substr(obter_nome_pessoa_fisica(cd_medico,null),1,200)),
		max(dt_avaliacao)
into STRICT	nm_avaliador_aval_w,
		dt_avaliacao_w
from	med_avaliacao_paciente
where	nr_atendimento = nr_atendimento_p;

if (nr_seq_call_center_p IS NOT NULL AND nr_seq_call_center_p::text <> '') then

	select	max(nr_protocolo_atendimento),
			max(dt_inicio)
	into STRICT	nr_protocolo_atend_w,
			dt_hora_atend_w
	from	pls_atendimento
	where	nr_sequencia = nr_seq_call_center_p;

end if;

select max(nr_sequencia)
into STRICT nr_seq_sinal_vital_w
from atendimento_sinal_vital
where nr_atendimento = nr_atendimento_p
and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

select 	max(s.ds_observacao)
into STRICT	obs_serv_atend_w
from 	atend_tipo_servico_ter s
where 	s.nr_atendimento = nr_atendimento_p
and 	coalesce(s.dt_inativacao::text, '') = ''
and 	s.dt_liberacao = ( SELECT max(t.dt_liberacao) from atend_tipo_servico_ter t
							where t.nr_atendimento = s.nr_atendimento
							and coalesce(t.dt_inativacao::text, '') = '' );

ds_periodicidade_w := Obter_periodicidade_agravo(Obter_cod_Diagnostico_atend(nr_atendimento_p));
nr_pront_w := obter_prontuario_atendimento(nr_atendimento_p);

ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@periodicidade_sinan',ds_periodicidade_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@protocolo_call_center',nr_protocolo_atend_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@dt_atend_call_center',dt_hora_atend_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@nascimento',dt_nascimento_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@paciente',nm_paciente_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@pac_abreviado',nm_paciente_abrev_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@pac_todo_abreviado',nm_paciente_abrev_total_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@quarto',ds_unidade_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@setor',ds_setor_atendimento_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@set_unidade',ds_unidade_setor_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@atendimento',nr_atendimento_p),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ramal',nr_ramal_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@telefone',nr_telefone_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@convenio',cd_convenio_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@data_atual',PKG_DATE_FORMATERS_TZ.TO_VARCHAR(clock_timestamp(), 'shortDate', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@data_hora_atual',PKG_DATE_FORMATERS_TZ.TO_VARCHAR(clock_timestamp(), 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@cd_cid',cd_cid_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_cid',ds_cid_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@usuario',nm_usuario_p),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_convenio',ds_convenio_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ie_setor_ant_pa',ie_setor_ant_pa_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_setor_anterior',ds_setor_anterior_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@obs_classif_pessoa',ds_observacao_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@classif_pf',ds_classif_pessoa_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@tipo_atendimento', ds_tipo_atend_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@categoria', ds_categoria_conv_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@plano', ds_plano_conv_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_setor_ant', ds_setor_anterior_transf_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_setor_n_ant_pass', ds_setor_ant_n_pass_transf_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@cd_unid_basica_compl_ant', ds_unid_basica_compl_ant_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@vl_baixa_tit_pagar', vl_baixa_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@dt_baixa_tit_pagar', dt_baixa_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@dieta', ds_dieta_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@dias_desde_alta', ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp()) - ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_alta_anterior_w)),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@dt_prevista', PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_prevista_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@dt_alta_prevista', PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_alta_prevista_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@pac_biobanco',ie_paciente_biobanco_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@med_atend_prim',nm_prim_medico_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@especialidade_dest',Obter_Desc_Espec_medica(cd_especialidade_dest_w)),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@especialidade_dest_prof',Obter_Desc_Espec_medica(cd_especialidade_dest_prof_w)),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@tipo_parecer',nr_seq_tipo_parecer_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@equipe_parecer',OBTER_DESC_PF_EQUIPE(nr_seq_equipe_w)),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@med_resp',nm_medico_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@servico_pac',ds_servico_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@nm_avaliador_aval',nm_avaliador_aval_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@dt_avaliacao',dt_avaliacao_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@nr_adiant_pago',nr_adiant_pago_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@vl_adiant_tit_pagar',vl_adiant_tit_pagar_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@nm_fornec_adiant_pago',nm_fornec_adiant_pago_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@nr_ordem_compra_adiant',nr_ordem_compra_adiant_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@usuario_estorno_alta',nm_usuario_estorno_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@dt_estorno_alta',dt_alta_estorno_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@novo_setor',ds_novo_setor_atendimento_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_estab_atend',ds_estab_atend_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_motivo_alta_medica',ds_motivo_alta_medica_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_motivo_alta',ds_motivo_alta_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@submotivo_alta',ds_submotivo_alta_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@procedencia',ds_procedencia_w),1,4000);
ds_mensagem_w 	:= substr(replace_macro(ds_mensagem_w,'@nm_profissional',nm_profissional_w),1, 4000);
ds_mensagem_w 	:= substr(replace_macro(ds_mensagem_w,'@nr_seq_sinal_vital',nr_seq_sinal_vital_w),1, 4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@med_referido',nm_medico_referido_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@Nr_Prontuario',nr_pront_w),1,4000);
ds_mensagem_w   := substr(replace_macro(ds_mensagem_w,'@ds_sintoma_paciente',ds_sintoma_paciente_w),1,4000);
ds_mensagem_w   := substr(replace_macro(ds_mensagem_w,'@nm_medico_requester',obter_nome_pf(cd_medico_resp_p)),1,4000);
ds_mensagem_w   := substr(replace_macro(ds_mensagem_w,'@nm_especialidade_requester',obter_ds_especialidade(cd_especialidade_dest_prof_p)),1,4000);
ds_mensagem_w   := substr(replace_macro(ds_mensagem_w,'@nm_medico_responser',obter_nome_pf(cd_pessoa_parecer_p)),1,4000);
ds_mensagem_w   := substr(replace_macro(ds_mensagem_w,'@nm_especialidade_responser',obter_ds_especialidade(cd_especialidade_dest_p)),1,4000);
ds_mensagem_w   := substr(replace_macro(ds_mensagem_w,'@obs_serv_atend', obs_serv_atend_w),1,4000);
ds_mensagem_w   := substr(replace_macro(ds_mensagem_w,'@prescricao', nr_prescricao_p),1,4000);
ds_mensagem_w   := substr(replace_macro(ds_mensagem_w,'@codigo_item_prescrito', nr_seq_item_presc_p),1,4000);
ds_mensagem_w   := substr(replace_macro(ds_mensagem_w,'@desc_item_prescrito', ds_item_description_p),1,4000);
ds_mensagem_w   := substr(replace_macro(ds_mensagem_w,'@medico_prescritor', nm_medico_presc_p),1,4000);

ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@periodicidade_sinan',ds_periodicidade_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@protocolo_call_center',nr_protocolo_atend_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@dt_atend_call_center',dt_hora_atend_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@paciente',nm_paciente_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@pac_abreviado',nm_paciente_abrev_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@pac_abreviado',nm_paciente_abrev_total_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@quarto',ds_unidade_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@setor',ds_setor_atendimento_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@set_unidade',ds_unidade_setor_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@atendimento',nr_atendimento_p),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@ramal',nr_ramal_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@telefone',nr_telefone_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@convenio',cd_convenio_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@data_atual',PKG_DATE_FORMATERS_TZ.TO_VARCHAR(clock_timestamp(), 'shortDate', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@data_hora_atual',PKG_DATE_FORMATERS_TZ.TO_VARCHAR(clock_timestamp(), 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@cd_cid',cd_cid_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@ds_cid',ds_cid_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@usuario',nm_usuario_p),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@ds_convenio',ds_convenio_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@ie_setor_ant_pa',ie_setor_ant_pa_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@ds_setor_anterior',ds_setor_anterior_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@classif_pf',ds_classif_pessoa_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@tipo_atendimento', ds_tipo_atend_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@categoria', ds_categoria_conv_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@plano', ds_plano_conv_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@ds_setor_ant', ds_setor_anterior_transf_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@ds_setor_n_ant_pass', ds_setor_ant_n_pass_transf_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@cd_unid_basica_compl_ant', ds_unid_basica_compl_ant_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@vl_baixa_tit_pagar', vl_baixa_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@dt_baixa_tit_pagar', dt_baixa_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@dt_prevista', PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_prevista_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@dt_alta_prevista', PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_alta_prevista_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@pac_biobanco',ie_paciente_biobanco_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@med_atend_prim',nm_prim_medico_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@tipo_parecer',nr_seq_tipo_parecer_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@med_resp',nm_medico_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@servico_pac',ds_servico_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@nm_avaliador_aval',nm_avaliador_aval_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@dt_avaliacao',dt_avaliacao_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@nr_adiant_pago',nr_adiant_pago_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@vl_adiant_tit_pagar',vl_adiant_tit_pagar_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@nm_fornec_adiant_pago',nm_fornec_adiant_pago_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@nr_ordem_compra_adiant',nr_ordem_compra_adiant_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@usuario_estorno_alta',nm_usuario_estorno_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@dt_estorno_alta',dt_alta_estorno_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@novo_setor',ds_novo_setor_atendimento_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@ds_estab_atend',ds_estab_atend_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@ds_motivo_alta_medica',ds_motivo_alta_medica_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@ds_motivo_alta',ds_motivo_alta_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@submotivo_alta',ds_submotivo_alta_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@procedencia',ds_procedencia_w),1,4000);
ds_titulo_w := substr(replace_macro(ds_titulo_w,'@nm_profissional',nm_profissional_w),1, 4000);
ds_titulo_w := substr(replace_macro(ds_titulo_w,'@nr_seq_sinal_vital',nr_seq_sinal_vital_w),1, 4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@med_referido',nm_medico_referido_w),1,4000);
ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@Nr_Prontuario',nr_pront_w),1,4000);
ds_titulo_w := substr(replace_macro(ds_titulo_w,'@prescricao', nr_prescricao_p),1,4000);
ds_titulo_w := substr(replace_macro(ds_titulo_w,'@codigo_item_prescrito', nr_seq_item_presc_p),1,4000);
ds_titulo_w := substr(replace_macro(ds_titulo_w,'@desc_item_prescrito', ds_item_description_p),1,4000);
ds_titulo_w := substr(replace_macro(ds_titulo_w,'@medico_prescritor', nm_medico_presc_p),1,4000);

--ds_titulo_w	:= substr(replace_macro(ds_titulo_w,'@PROTOCOLO_ETAPA_TAG',DS_TAG_w),1,4000);
if (ie_iso_precaucao_p = 'S') then
	select	max(x.nr_sequencia)
	into STRICT	nr_sequencia_cih_w
	from	atendimento_precaucao x
	where	x.nr_atendimento = nr_atendimento_p;

	select  max(dt_liberacao) dt_liberacao,
        max(NR_SEQ_MOTIVO_ISOL),
        max(nr_seq_precaucao),
        max(substr(obter_descricao_padrao('CIH_PRECAUCAO','DS_PRECAUCAO',NR_SEQ_precaucao),1,255)) ds_precaucao,
        max(substr(obter_descricao_padrao('MOTIVO_ISOLAMENTO','DS_MOTIVO',NR_SEQ_MOTIVO_ISOL),1,255)) ds_motivo_isol,
        max(substr(obter_cih_topografia(a.cd_topografia),1,255)),
        max(substr(obter_cih_microorganismo(cd_microorganismo),1,255)),
        max(a.dt_registro),
        max(substr(obter_nome_pf(a.cd_medico_solic),1,60)),
        max(a.dt_inicio),
        max(a.ds_observacao)
    into STRICT    dt_lib_precaucao_w,
        nr_seq_motivo,
        nr_seq_precaucao,
        ds_precaucao_w,
        ds_motivo_precaucao_w,
        ds_topografia_w,
        ds_microorganismos_w,
        dt_registro_w,
        nm_medico_solic_w,
        dt_inicio_w,
        ds_observacao_ww
    FROM cih_precaucao b, atendimento_precaucao a
LEFT OUTER JOIN motivo_isolamento c ON (a.nr_seq_motivo_isol = c.nr_sequencia)
WHERE nr_atendimento = nr_atendimento_p and a.nr_seq_precaucao = b.nr_sequencia  and a.dt_atualizacao    = (SELECT  max(x.dt_atualizacao)
                                from    atendimento_precaucao x
                                where   x.nr_atendimento = nr_atendimento_p) group by NR_SEQ_MOTIVO_ISOL, nr_seq_precaucao;

	open C06;
	loop
	fetch C06 into
		ds_temp_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		begin
		if (ds_microorganismos_w IS NOT NULL AND ds_microorganismos_w::text <> '') then
			ds_microorganismos_w	:= ds_microorganismos_w||', '||ds_temp_w;
		else
			ds_microorganismos_w	:= ds_temp_w;
		end if;
		end;
	end loop;
	close C06;

	open C07;
	loop
	fetch C07 into
		ds_temp_w;
	EXIT WHEN NOT FOUND; /* apply on C07 */
		begin
		if (ds_topografia_w IS NOT NULL AND ds_topografia_w::text <> '') then
			ds_topografia_w	:= ds_topografia_w||', '||ds_temp_w;
		else
			ds_topografia_w	:= ds_temp_w;
		end if;
		end;
	end loop;
	close C07;


	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@dt_lib_precaucao',PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_lib_precaucao_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_precaucao',ds_precaucao_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_motivo_isol',ds_motivo_precaucao_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_topografia',ds_topografia_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_microorganismos',ds_microorganismos_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@dt_registro',dt_registro_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@nm_medico_solic',nm_medico_solic_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@dt_inicio',dt_inicio_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_observacao',ds_observacao_ww),1,4000);
end if;

if (coalesce(nr_repasse_terceiro_p,0) <> 0) then
	select	dt_base_vencto,
		dt_periodo_inicial,
		dt_periodo_final,
		obter_valor_repasse(nr_repasse_terceiro_p,'R'),
		obter_valor_repasse(nr_repasse_terceiro_p,'I'),
		substr(obter_nome_terceiro(nr_seq_terceiro),1,255),
		substr(obter_tipo_repasse(nr_seq_tipo),1,255),
		dt_mesano_referencia,
		obter_valor_repasse(nr_repasse_terceiro_p,'VV')
	into STRICT	dt_base_vencto_w,
		dt_periodo_inicial_w,
		dt_periodo_final_w,
		vl_repasse_w,
		vl_liquido_repasse_w,
		ds_terceiro_w,
		ds_tipo_repasse_w,
		dt_mesano_referencia_w,
		vl_vencimento_w
	from	repasse_terceiro
	where	nr_repasse_terceiro	= nr_repasse_terceiro_p;

	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@dt_base_vencimento',PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_base_vencto_w, 'shortDate', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_convenio',ds_convenio_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@dt_inicial_repasse',PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_periodo_inicial_w, 'shortDate', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@dt_final_repasse',PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_periodo_final_w, 'shortDate', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@vl_repasse',vl_repasse_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@vl_liquido_repasse',vl_liquido_repasse_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_terceiro',ds_terceiro_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@tipo_repasse',ds_tipo_repasse_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@mes_ano_ref_repasse',PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_mesano_referencia_w, 'shortDate', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@vl_venc_repasse',vl_vencimento_w),1,4000);
end if;

select	to_date(to_char(dt_referencia_p,'dd/mm/yyyy') || ' ' || 	to_char(coalesce(hr_inicial,dt_referencia_p),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'),
	ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_referencia_p, coalesce(hr_final, dt_referencia_p)),
	ie_dia_semana
into STRICT	dt_inicio_evento_w,
	dt_fim_evento_w,
	ie_dia_semana_w
from 	ev_evento
where	nr_sequencia = nr_seq_evento_p;

select	CASE WHEN count(*)='0' THEN 'N'  ELSE 'S' END
into STRICT	ie_inserir_w
from	ev_evento a
where	dt_referencia_p between dt_inicio_evento_w and dt_fim_evento_w
and	a.nr_sequencia = nr_seq_evento_p
and	a.ie_situacao = 'A'
and	((coalesce(ie_dia_semana_w,Obter_Cod_Dia_Semana(dt_referencia_p)) = Obter_Cod_Dia_Semana(dt_referencia_p))
		or ((ie_dia_semana_w = '9') and (Obter_Cod_Dia_Semana(dt_referencia_p) between 2 and 6))
		or ((ie_dia_semana_w = '0') and (CASE WHEN obter_se_feriado(wheb_usuario_pck.get_cd_estabelecimento, dt_referencia_p)=0 THEN 'N'  ELSE 'S' END  = 'S')));

if (ie_inserir_w = 'S') then

	select	nextval('ev_evento_paciente_seq')
	into STRICT	nr_sequencia_w
	;

	insert into ev_evento_paciente(
		nr_sequencia,
		nr_seq_evento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_pessoa_fisica,
		nr_atendimento,
		ds_titulo,
		ds_mensagem,
		ie_status,
		ds_maquina,
		dt_evento,
		dt_liberacao,
		ie_situacao,
		nr_repasse_terceiro)
	values (	nr_sequencia_w,
		nr_seq_evento_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_pessoa_fisica_p,
		CASE WHEN nr_atendimento_p=0 THEN null  ELSE nr_atendimento_p END , /* nr_atendimento_p - afstringari */
		ds_titulo_w,
		ds_mensagem_w,
		cd_status_w,
		ds_maquina_w,
		clock_timestamp(),
		clock_timestamp(),
		'A',
		nr_repasse_terceiro_p);

	open C01;
	loop
	fetch C01 into
		ie_forma_ev_w,
		ie_pessoa_destino_w,
		cd_pf_destino_w,
		ie_usuario_aceite_w,
		cd_setor_atendimento_w,
		cd_perfil_w,
		nr_seq_grupo_usuario_w,
		ds_email_fixo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		qt_corresp_w	:= 1;
		cd_pessoa_destino_w	:= null;


		if (ie_pessoa_destino_w = '1') then /* Medico do atendimento */
			begin
			select	max(cd_medico_atendimento)
			into STRICT	cd_pessoa_destino_w
			from	atendimento_paciente
			where	nr_atendimento	= nr_atendimento_p;
			end;
		elsif (ie_pessoa_destino_w = '2') then /*Medico responsavel pelo paciente*/
			begin
			if (cd_medico_resp_p IS NOT NULL AND cd_medico_resp_p::text <> '') then
				cd_pessoa_destino_w	:= cd_medico_resp_p;
			else
				select	max(cd_medico_resp)
				into STRICT	cd_pessoa_destino_w
				from	atendimento_paciente
				where	nr_atendimento	= nr_atendimento_p;
			end if;
			end;
        elsif (ie_pessoa_destino_w = '31') then
            begin
            if (cd_medico_resp_p IS NOT NULL AND cd_medico_resp_p::text <> '') then
				cd_pessoa_destino_w	:= cd_medico_resp_p;
			else
                select max(cd_medico)
                into STRICT cd_pessoa_destino_w
                from parecer_medico_req
                where nr_parecer = nr_parecer_p;
            end if;
            end;
		elsif (ie_pessoa_destino_w = '3') then /*Medico laudante*/
			begin
			select	max(cd_medico_resp)
			into STRICT	cd_pessoa_destino_w
			from	laudo_paciente
			where	nr_sequencia	= nr_seq_laudo_p;
			end;
		elsif (ie_pessoa_destino_w = '4') then /*Medico referido*/
			begin
			select	max(cd_medico_referido)
			into STRICT	cd_pessoa_destino_w
			from	atendimento_paciente
			where	nr_atendimento	= nr_atendimento_p;
			end;
		elsif (ie_pessoa_destino_w	= '10') then
			cd_pessoa_destino_w	:= cd_pessoa_parecer_p;
		elsif (ie_pessoa_destino_w = '5') or (ie_pessoa_destino_w = '12') then /*Pessoa fixa ou Usuario fixo*/
			cd_pessoa_destino_w	:= cd_pf_destino_w;
		elsif (ie_pessoa_destino_w = '6') then /* Terceiro do repasse */
			select	max(nr_seq_terceiro)
			into STRICT	nr_seq_terceiro_w
			from	repasse_terceiro
			where	nr_repasse_terceiro	= nr_repasse_terceiro_p;

			if (nr_seq_terceiro_w IS NOT NULL AND nr_seq_terceiro_w::text <> '') then
				open c04;
				loop
				fetch c04 into
					cd_pessoa_terc_w;
				EXIT WHEN NOT FOUND; /* apply on c04 */

					qt_corresp_w	:= 1;

					if (ie_usuario_aceite_w = 'S') then
						select	count(*)
						into STRICT	qt_corresp_w
						from	pessoa_fisica_corresp
						where	cd_pessoa_fisica	= cd_pessoa_terc_w
						and	ie_tipo_corresp		= CASE WHEN ie_forma_ev_w='1' THEN 'MCel' WHEN ie_forma_ev_w='3' THEN 'CI' WHEN ie_forma_ev_w='4' THEN 'Email' END
						and	ie_tipo_doc		= 'AE';
					end if;


					if (qt_corresp_w > 0) then
						ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_terc_w, ie_forma_ev_w);

						--Nao possui excecao entao gravar normalmente o alerta (excecao = pessoa nao quer receber alerta)
						if (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') then
							insert into ev_evento_pac_destino(
								nr_sequencia,
								nr_seq_ev_pac,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								cd_pessoa_fisica,
								ie_forma_ev,
								ie_status,
								dt_ciencia,
								ie_pessoa_destino,
								dt_evento)
							values (	nextval('ev_evento_pac_destino_seq'),
								nr_sequencia_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								cd_pessoa_terc_w,
								ie_forma_ev_w,
								'G',
								null,
								ie_pessoa_destino_w,
								clock_timestamp());
						end if;

					end if;
				end loop;
				close c04;
			end if;
		elsif (ie_pessoa_destino_w	= '14') then
			begin
			open C05;
			loop
			fetch C05 into
				cd_pessoa_destino_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin
				qt_corresp_w	:= 1;

				if (ie_usuario_aceite_w = 'S') then
					select	count(*)
					into STRICT	qt_corresp_w
					from	pessoa_fisica_corresp
					where	cd_pessoa_fisica	= cd_pessoa_destino_w
					and	ie_tipo_corresp		= CASE WHEN ie_forma_ev_w='1' THEN 'MCel' WHEN ie_forma_ev_w='3' THEN 'CI' WHEN ie_forma_ev_w='4' THEN 'Email' END
					and	ie_tipo_doc		= 'AE';
				end if;


				if (qt_corresp_w > 0) then
					ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_destino_w, ie_forma_ev_w);
					--Nao possui excecao entao gravar normalmente o alerta (excecao = pessoa nao quer receber alerta)
					if (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') then
						insert into ev_evento_pac_destino(
							nr_sequencia,
							nr_seq_ev_pac,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							cd_pessoa_fisica,
							ie_forma_ev,
							ie_status,
							dt_ciencia,
							ie_pessoa_destino,
							dt_evento)
						values (	nextval('ev_evento_pac_destino_seq'),
							nr_sequencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							cd_pessoa_destino_w,
							ie_forma_ev_w,
							'G',
							null,
							ie_pessoa_destino_w,
							clock_timestamp());
						end if;
					end if;

				end;
			end loop;
			close C05;
			end;
			cd_pessoa_destino_w	:= null;
		elsif (ie_pessoa_destino_w	= '15') then
			begin
			select	coalesce(cd_especialidade_dest,0),
				coalesce(cd_especialidade_dest_prof,0),
				cd_pessoa_parecer,
				nr_seq_equipe_dest
			into STRICT	cd_especialidade_dest_w,
				cd_especialidade_dest_prof_w,
				cd_medico_parecer_w,
				nr_seq_equipe_w
			from	parecer_medico_req
			where	nr_parecer = nr_parecer_p;

			exception
				when others then
				null;
			end;

			open C08;
			loop
			fetch C08 into
				cd_pessoa_destino_w;
			EXIT WHEN NOT FOUND; /* apply on C08 */
				begin
				qt_corresp_w	:= 1;

				if (ie_usuario_aceite_w = 'S') then
					select	count(*)
					into STRICT	qt_corresp_w
					from	pessoa_fisica_corresp
					where	cd_pessoa_fisica	= cd_pessoa_destino_w
					and	ie_tipo_corresp		= CASE WHEN ie_forma_ev_w='1' THEN 'MCel' WHEN ie_forma_ev_w='3' THEN 'CI' WHEN ie_forma_ev_w='4' THEN 'Email' END
					and	ie_tipo_doc		= 'AE';
				end if;


				if (qt_corresp_w > 0) then
					ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_destino_w, ie_forma_ev_w);

					--Nao possui excecao entao gravar normalmente o alerta (excecao = pessoa nao quer receber alerta)
					if (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') then
						insert into ev_evento_pac_destino(
							nr_sequencia,
							nr_seq_ev_pac,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							cd_pessoa_fisica,
							ie_forma_ev,
							ie_status,
							dt_ciencia,
							ie_pessoa_destino,
							dt_evento)
						values (	nextval('ev_evento_pac_destino_seq'),
							nr_sequencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							cd_pessoa_destino_w,
							ie_forma_ev_w,
							'G',
							null,
							ie_pessoa_destino_w,
							clock_timestamp());
					end if;
				end if;
				end;
			end loop;
			close C08;

			cd_pessoa_destino_w := null;

		elsif (ie_pessoa_destino_w = '17') then
			select	max(cd_pessoa_fisica)
			into STRICT	cd_pf_destino_w
			from	titulo_pagar
			where	nr_titulo	= nr_titulo_p;

			if (cd_pf_destino_w IS NOT NULL AND cd_pf_destino_w::text <> '') then
				ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pf_destino_w, ie_forma_ev_w);

				--Nao possui excecao entao gravar normalmente o alerta (excecao = pessoa nao quer receber alerta)
				if (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') then
					insert into ev_evento_pac_destino(nr_sequencia,
						nr_seq_ev_pac,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_pessoa_fisica,
						ie_forma_ev,
						ie_status,
						dt_ciencia,
						ie_pessoa_destino,
						dt_evento)
					values (nextval('ev_evento_pac_destino_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_pf_destino_w,
						ie_forma_ev_w,
						'G',
						null,
						ie_pessoa_destino_w,
						clock_timestamp());
				end if;

			end if;

		elsif (ie_pessoa_destino_w = '21') then
			select	max(cd_medico_resp)
			into STRICT	cd_pf_destino_w
			from	atendimento_paciente
			where	nr_atendimento	= nr_atendimento_p
			and	cd_medico_resp = cd_pf_destino_w;

			if (cd_pf_destino_w IS NOT NULL AND cd_pf_destino_w::text <> '') then
				ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pf_destino_w, ie_forma_ev_w);
				--Nao possui excecao entao gravar normalmente o alerta (excecao = pessoa nao quer receber alerta)
				if (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') then
					insert into ev_evento_pac_destino(nr_sequencia,
						nr_seq_ev_pac,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_pessoa_fisica,
						ie_forma_ev,
						ie_status,
						dt_ciencia,
						ie_pessoa_destino,
						dt_evento)
					values (nextval('ev_evento_pac_destino_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_pf_destino_w,
						ie_forma_ev_w,
						'G',
						null,
						ie_pessoa_destino_w,
						clock_timestamp());
				end if;
			end if;

		elsif (ie_pessoa_destino_w = '22') then

			insert into ev_evento_pac_destino(
							nr_sequencia,                              --1
							nr_seq_ev_pac,                             --2
							dt_atualizacao,                            --3
							nm_usuario,                                --4
							dt_atualizacao_nrec,                       --5
							nm_usuario_nrec,                           --6
							cd_pessoa_fisica,                          --7
							ie_forma_ev,                               --8
							ie_status,                                 --9
							dt_ciencia,                                --10
							dt_evento,                                 --11
							ds_email_fixo,
							ie_pessoa_destino)                             --12
						values (
							nextval('ev_evento_pac_destino_seq'),     	   --1
							nr_sequencia_w,                            --2
							clock_timestamp(),                                   --3
							nm_usuario_p,                              --4
							clock_timestamp(),                                   --5
							nm_usuario_p,                              --6
							cd_pf_destino_w,                       --7
							ie_forma_ev_w,                             --8
							'G',                                       --9
							null,                                      --10
							clock_timestamp(),                                   --11
							ds_email_fixo_w,
							ie_pessoa_destino_w);                          --12
		elsif (ie_pessoa_destino_w = '23') then

			if (cd_pessoa_responsavel_w IS NOT NULL AND cd_pessoa_responsavel_w::text <> '') then
				ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_responsavel_w, ie_forma_ev_w);
				--Nao possui excecao entao gravar normalmente o alerta (excecao = pessoa nao quer receber alerta)
				if (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') then

					SELECT	MAX(obter_compl_pf(cd_pessoa_responsavel_w,1,'M'))
					INTO STRICT	ds_email_fixo_w
					;

					if (coalesce(ds_email_fixo_w::text, '') = '') then
						SELECT	MAX(obter_compl_pf(cd_pessoa_responsavel_w,2,'M'))
						INTO STRICT	ds_email_fixo_w
						;
					end if;

					insert into ev_evento_pac_destino(nr_sequencia,
						nr_seq_ev_pac,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_pessoa_fisica,
						ie_forma_ev,
						ie_status,
						dt_ciencia,
						ie_pessoa_destino,
						dt_evento,
						ds_email_fixo)
					values (nextval('ev_evento_pac_destino_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_pessoa_responsavel_w,
						ie_forma_ev_w,
						'G',
						null,
						ie_pessoa_destino_w,
						clock_timestamp(),
						ds_email_fixo_w);
				end if;
			end if;
		elsif (ie_pessoa_destino_w = '19') then

			if (coalesce(nr_seq_gv_p,0) = 0) then
				cd_pf_destino_19_w	:= obter_pessoa_atendimento(nr_atendimento_p,'C');
			elsif (coalesce(nr_seq_gv_p,0) > 0) then
				cd_pf_destino_19_w	:= cd_pessoa_fisica_p;
			end if;

			if (cd_pf_destino_19_w IS NOT NULL AND cd_pf_destino_19_w::text <> '') then
				ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pf_destino_19_w, ie_forma_ev_w);
				--Nao possui excecao entao gravar normalmente o alerta (excecao = pessoa nao quer receber alerta)
				if (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') then

					SELECT	MAX(obter_compl_pf(cd_pf_destino_19_w,1,'M'))
					INTO STRICT	ds_email_destino_19_w
					;

					if (coalesce(ds_email_destino_19_w::text, '') = '') then
						SELECT	MAX(obter_compl_pf(cd_pf_destino_19_w,2,'M'))
						INTO STRICT	ds_email_destino_19_w
						;
					end if;

					insert into ev_evento_pac_destino(nr_sequencia,
						nr_seq_ev_pac,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_pessoa_fisica,
						ie_forma_ev,
						ie_status,
						dt_ciencia,
						ie_pessoa_destino,
						dt_evento,
						ds_email_fixo)
					values (nextval('ev_evento_pac_destino_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_pf_destino_19_w,
						ie_forma_ev_w,
						'G',
						null,
						ie_pessoa_destino_w,
						clock_timestamp(),
						ds_email_destino_19_w);
				end if;
			end if;
		elsif (ie_pessoa_destino_w = '26') then

			select 	max(cd_pessoa_fisica)
			into STRICT	cd_pessoa_destino_w
			from 	pls_atendimento
			where 	nr_sequencia = nr_seq_call_center_p;
		elsif (ie_pessoa_destino_w = '28') then /*Usuario Logado*/
			cd_pessoa_destino_w	:= Obter_Pf_Usuario(nm_usuario_p,'C');
		end if;

		if (ie_usuario_aceite_w = 'S') and (cd_pessoa_destino_w IS NOT NULL AND cd_pessoa_destino_w::text <> '') and (ie_forma_ev_w = '1') then
			begin
			select	count(*)
			into STRICT	qt_corresp_w
			from	pessoa_fisica_corresp
			where	cd_pessoa_fisica	= cd_pessoa_destino_w
			and	ie_tipo_corresp		= 'MCel'
			and	ie_tipo_doc		= 'AE';
			end;
		elsif (ie_usuario_aceite_w = 'S') and (cd_pessoa_destino_w IS NOT NULL AND cd_pessoa_destino_w::text <> '') and (ie_forma_ev_w = '3') then
			begin
			select	count(*)
			into STRICT	qt_corresp_w
			from	pessoa_fisica_corresp
			where	cd_pessoa_fisica	= cd_pessoa_destino_w
			and	ie_tipo_corresp		= 'CI'
			and	ie_tipo_doc		= 'AE';
			end;
		elsif (ie_usuario_aceite_w = 'S') and (cd_pessoa_destino_w IS NOT NULL AND cd_pessoa_destino_w::text <> '') and (ie_forma_ev_w = '4') then
			begin
			select	count(*)
			into STRICT	qt_corresp_w
			from	pessoa_fisica_corresp
			where	cd_pessoa_fisica	= cd_pessoa_destino_w
			and	ie_tipo_corresp		= 'Email'
			and	ie_tipo_doc		= 'AE';
			end;
		end if;

		if (cd_pessoa_destino_w IS NOT NULL AND cd_pessoa_destino_w::text <> '') and (qt_corresp_w > 0) then
			begin
			ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_destino_w, ie_forma_ev_w);
			--Nao possui excecao entao gravar normalmente o alerta (excecao = pessoa nao quer receber alerta)
			if (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') then

				insert into ev_evento_pac_destino(
					nr_sequencia,
					nr_seq_ev_pac,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_pessoa_fisica,
					ie_forma_ev,
					ie_status,
					dt_ciencia,
					ie_pessoa_destino,
					dt_evento)
				values (	nextval('ev_evento_pac_destino_seq'),
					nr_sequencia_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_pessoa_destino_w,
					ie_forma_ev_w,
					'G',
					null,
					ie_pessoa_destino_w,
					clock_timestamp());
			end if;
			end;
		end if;

		if (cd_pf_destino_w IS NOT NULL AND cd_pf_destino_w::text <> '') and (coalesce(cd_perfil_w::text, '') = '') and (coalesce(cd_setor_atendimento_w::text, '') = '') and (ie_forma_ev_w = '2') then
			begin
			ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pf_destino_w, ie_forma_ev_w);
			--Nao possui excecao entao gravar normalmente o alerta (excecao = pessoa nao quer receber alerta)
			if (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') then

				insert into ev_evento_pac_destino(
					nr_sequencia,
					nr_seq_ev_pac,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_pessoa_fisica,
					ie_forma_ev,
					ie_status,
					dt_ciencia,
					ie_pessoa_destino,
					dt_evento)
				values (	nextval('ev_evento_pac_destino_seq'),
					nr_sequencia_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_pf_destino_w,
					ie_forma_ev_w,
					'G',
					null,
					ie_pessoa_destino_w,
					clock_timestamp());
			end if;

			end;
		end if;

		open C02;
		loop
		fetch C02 into
			cd_pessoa_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			if (cd_pessoa_regra_w IS NOT NULL AND cd_pessoa_regra_w::text <> '') then
				ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_regra_w, ie_forma_ev_w);
				--Nao possui excecao entao gravar normalmente o alerta (excecao = pessoa nao quer receber alerta)
				if (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') then
					insert into ev_evento_pac_destino(
						nr_sequencia,
						nr_seq_ev_pac,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_pessoa_fisica,
						ie_forma_ev,
						ie_status,
						dt_ciencia,
						ie_pessoa_destino,
						dt_evento)
					values (	nextval('ev_evento_pac_destino_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_pessoa_regra_w,
						ie_forma_ev_w,
						'G',
						null,
						ie_pessoa_destino_w,
						clock_timestamp());
				end if;
			end if;
			end;
		end loop;
		close C02;

		open C03;
		loop
		fetch C03 into
			cd_pessoa_regra_w,
			nm_usuario_destino_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			if (cd_pessoa_regra_w IS NOT NULL AND cd_pessoa_regra_w::text <> '') then
				ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_regra_w, ie_forma_ev_w);
				--Nao possui excecao entao gravar normalmente o alerta (excecao = pessoa nao quer receber alerta)
				if (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') then
					insert into ev_evento_pac_destino(
						nr_sequencia,
						nr_seq_ev_pac,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_pessoa_fisica,
						ie_forma_ev,
						ie_status,
						dt_ciencia,
						nm_usuario_dest,
						ie_pessoa_destino,
						dt_evento)
					values (	nextval('ev_evento_pac_destino_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_pessoa_regra_w,
						ie_forma_ev_w,
						'G',
						null,
						nm_usuario_destino_w,
						ie_pessoa_destino_w,
						clock_timestamp());
				end if;
			end if;
			end;
		end loop;
		close C03;

		open C09;
		loop
		fetch C09 into
			cd_pessoa_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C09 */
			begin
			if (cd_pessoa_regra_w IS NOT NULL AND cd_pessoa_regra_w::text <> '') then
				ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_regra_w, ie_forma_ev_w);
				--Nao possui excecao entao gravar normalmente o alerta (excecao = pessoa nao quer receber alerta)
				if (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') then

					insert into ev_evento_pac_destino(
						nr_sequencia,
						nr_seq_ev_pac,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_pessoa_fisica,
						ie_forma_ev,
						ie_status,
						dt_ciencia,
						ie_pessoa_destino,
						dt_evento)
					values (	nextval('ev_evento_pac_destino_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_pessoa_regra_w,
						ie_forma_ev_w,
						'G',
						null,
						ie_pessoa_destino_w,
						clock_timestamp());
				end if;
			end if;
			end;
		end loop;
		close C09;

		end;
	end loop;
	close C01;

	if (coalesce(ie_commit_p,'N') = 'S') then
		if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_evento_paciente (nr_seq_evento_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, nr_seq_laudo_p bigint, nm_usuario_p text, nr_repasse_terceiro_p bigint default null, ie_iso_precaucao_p text default null, ie_sincrono_p text default null, ds_mensagem_original_p text default null, cd_medico_resp_p text default null, cd_pessoa_parecer_p text default null, nr_seq_gv_p bigint default null, nr_parecer_p bigint default null, nr_titulo_p bigint default null, nr_seq_baixa_p bigint default null, ie_commit_p text default 'S', nr_seq_interno_p bigint default null, dt_referencia_p timestamp default clock_timestamp(), cd_evolucao_p bigint default null, cd_novo_setor_atendimento_p bigint default null, nr_seq_call_center_p bigint default null, gestao_vaga_r_p gestao_vaga default null, cd_especialidade_dest_p bigint default null, cd_especialidade_dest_prof_p bigint default null, nr_seq_tipo_parecer_p bigint default null, nr_seq_equipe_dest_p bigint default null, ie_trigger_parecer_p text default 'N', nr_seq_etapa_mentor_p bigint default null, nr_seq_evento_pj_p bigint default null, nr_prescricao_p bigint default null, nr_seq_item_presc_p text default null, ds_item_description_p text default null, nm_medico_presc_p text default null) FROM PUBLIC;

