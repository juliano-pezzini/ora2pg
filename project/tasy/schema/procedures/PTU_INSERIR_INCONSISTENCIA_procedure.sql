-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_inserir_inconsistencia ( nr_seq_intercambio_p bigint, nr_seq_inter_benef_p bigint, cd_incosistencia_p bigint, ds_observacao_p text, cd_estabelecimento_p bigint, nr_seq_transacao_p bigint, ie_tipo_transacao_p text, cd_transacao_p text, nr_seq_procedimento_p bigint, nr_seq_material_p bigint, parametro3_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*
IE_TIPO_TRANSACAO_P

G - Guia
R - Requisição
CB - Consulta dados beneficiário
CP - Consulta dados prestador
EI - Erro inesperado
CM - Contas médicas
OR - Ordem de serviço
RPA - Resposta de pedido de autorização

*/
/*
Djavan - Usado o parâmetro PARAMETRO3_P nas funções OPS - Gestão de Análise de Autorização, OPS - Requisições para Autorização e OPS - Autorização

1 - OPS - Gestão de Análise de Autorização
2 - OPS - Requisições para Autorização
3 - OPS - Autorização

Quando vier um destes valores será realizado COMMIT
*/
nr_seq_inconsistencia_w		bigint;
nr_seq_guia_w			bigint := null;
nr_seq_requisicao_w		bigint := null;
nr_seq_consulta_benef_w 	bigint := null;
nr_seq_consulta_prest_w  	bigint := null;
nr_seq_erro_inesperado_w 	bigint := null;
nr_seq_conta_w			bigint := null;
nr_seq_ordem_ser_w		bigint := null;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;


BEGIN

if (coalesce(cd_estabelecimento_p,0) > 0) then
	cd_estabelecimento_w := cd_estabelecimento_p;
else
	cd_estabelecimento_w := ptu_obter_estab_padrao;
end if;

begin
select	max(nr_sequencia)
into STRICT	nr_seq_inconsistencia_w
from	ptu_inconsistencia
where	cd_inconsistencia	= cd_incosistencia_p
and	ie_situacao		= 'A';
exception
when others then
	 CALL wheb_mensagem_pck.exibir_mensagem_abort(262492, 'CD_INCONSISTENCIA=' || cd_incosistencia_p);
	/* Mensagem: O código da inconsistência do PTU CD_INCONSISTENCIA não existe! Favor verificar. */

end;
if (coalesce(nr_seq_inconsistencia_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(262492, 'CD_INCONSISTENCIA=' || cd_incosistencia_p);
end if;
if (ie_tipo_transacao_p IS NOT NULL AND ie_tipo_transacao_p::text <> '') then
	if (ie_tipo_transacao_p = 'G') then
		nr_seq_guia_w 		:= nr_seq_transacao_p;
	elsif (ie_tipo_transacao_p = 'R') then
		nr_seq_requisicao_w	:= nr_seq_transacao_p;
	elsif (ie_tipo_transacao_p = 'CB') then
		nr_seq_consulta_benef_w	:= nr_seq_transacao_p;
	elsif (ie_tipo_transacao_p = 'CP') then
		nr_seq_consulta_prest_w	:= nr_seq_transacao_p;
	elsif (ie_tipo_transacao_p = 'EI' ) then
		nr_seq_erro_inesperado_w := nr_seq_transacao_p;
	elsif (ie_tipo_transacao_p = 'CM') then
		nr_seq_conta_w		:= nr_seq_transacao_p;
	elsif (ie_tipo_transacao_p = 'OR') then
		nr_seq_ordem_ser_w	:= nr_seq_transacao_p;
	elsif (ie_tipo_transacao_p = 'RPA') then
		nr_seq_erro_inesperado_w	:= nr_seq_transacao_p;
	end if;
end if;

if (nr_seq_inconsistencia_w IS NOT NULL AND nr_seq_inconsistencia_w::text <> '') then
	insert into ptu_intercambio_consist(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
			cd_estabelecimento,nr_seq_intercambio,nr_seq_inter_benef,nr_seq_inconsistencia,
			ds_observacao, nr_seq_guia, nr_seq_requisicao,
			cd_transacao, nr_seq_consulta_benef, nr_seq_consulta_prest,
			nr_seq_erro_inesperado, nr_seq_conta, nr_seq_procedimento,
			nr_seq_material, nr_seq_ordem_serv)
	values (	nextval('ptu_intercambio_consist_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
			cd_estabelecimento_w, nr_seq_intercambio_p, nr_seq_inter_benef_p, nr_seq_inconsistencia_w,
			ds_observacao_p, nr_seq_guia_w, nr_seq_requisicao_w,
			cd_transacao_p, nr_seq_consulta_benef_w, nr_seq_consulta_prest_w,
			nr_seq_erro_inesperado_w, nr_seq_conta_w, nr_seq_procedimento_p,
			nr_seq_material_p, nr_seq_ordem_ser_w);
end if;

if (parametro3_p	in (1,2,3)) then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_inserir_inconsistencia ( nr_seq_intercambio_p bigint, nr_seq_inter_benef_p bigint, cd_incosistencia_p bigint, ds_observacao_p text, cd_estabelecimento_p bigint, nr_seq_transacao_p bigint, ie_tipo_transacao_p text, cd_transacao_p text, nr_seq_procedimento_p bigint, nr_seq_material_p bigint, parametro3_p bigint, nm_usuario_p text) FROM PUBLIC;

