-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_drg_proc_pac_conta (nr_atendimento_p bigint, nr_seq_episodio_p bigint, nr_seq_pac_drg_p bigint, nr_interno_conta_p bigint, nm_usuario_p text, ie_value_entered_p text default 'S') AS $body$
DECLARE


nr_seq_atepacu_w	procedimento_paciente.nr_seq_atepacu%type;
nr_sequencia_w		procedimento_paciente.nr_sequencia%type;
cd_setor_atendimento_w	procedimento_paciente.cd_setor_atendimento%type;
cd_procedimento_w	procedimento.cd_procedimento%type;
ie_origem_proced_w	procedimento.ie_origem_proced%type;
episodio_paciente_drg_w	episodio_paciente_drg%rowtype;
procedimento_paciente_w	procedimento_paciente%rowtype;
nr_interno_conta_w	procedimento_paciente.nr_interno_conta%type;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
cd_motivo_exc_conta_w	parametro_faturamento.cd_motivo_exc_conta%type;
ie_status_acerto_w	conta_paciente.ie_status_acerto%type;
dt_entrada_unidade_w	timestamp;
vl_drg_w		double precision;
ie_surgery_available_w bigint := 0;

	

BEGIN

select	*
into STRICT	episodio_paciente_drg_w
from	episodio_paciente_drg
where	nr_sequencia	= nr_seq_pac_drg_p;

if (episodio_paciente_drg_w.ie_situacao = 'A') and (coalesce(episodio_paciente_drg_w.nr_seq_propaci::text, '') = '') then

	select count(*)
	into STRICT ie_surgery_available_w
	from cirurgia
	where nr_atendimento = nr_atendimento_p
	and (dt_entrada_unidade IS NOT NULL AND dt_entrada_unidade::text <> '');
	
	if (ie_surgery_available_w > 0 ) then

		select	max(a.dt_entrada_unidade),
				max(a.cd_setor_atendimento)
		into STRICT	dt_entrada_unidade_w,
				cd_setor_atendimento_w
		from cirurgia a
		where a.nr_atendimento = nr_atendimento_p;
		
		select nr_seq_interno
		into STRICT nr_seq_atepacu_w
		from atend_paciente_unidade
		where nr_atendimento = nr_atendimento_p
		and dt_entrada_unidade = dt_entrada_unidade_w;
	
	else
		nr_seq_atepacu_w	:= Obter_atepacu_paciente(nr_atendimento_p, 'A');
		
		select	max(a.dt_entrada_unidade),
				max(a.cd_setor_atendimento)
		into STRICT	dt_entrada_unidade_w,
				cd_setor_atendimento_w
		from	atend_paciente_unidade a
		where	nr_seq_interno	= nr_seq_atepacu_w;
	end if;		

	select	cd_procedimento,
		ie_origem_proced
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w
	from	drg_procedimento
	where	nr_sequencia	= episodio_paciente_drg_w.nr_seq_drg_proc;

	-- Obter a maxima sequencia da procedimento_paciente
	select	nextval('procedimento_paciente_seq')
	into STRICT	nr_sequencia_w
	;

	vl_drg_w := 0;
	if (episodio_paciente_drg_w.vl_desconto < 0) then
		vl_drg_w	:= episodio_paciente_drg_w.vl_liquido - (episodio_paciente_drg_w.vl_desconto * -1);
	else
		vl_drg_w	:= episodio_paciente_drg_w.vl_liquido;
	end if;

	SELECT * FROM Obter_Convenio_Execucao(nr_atendimento_p, clock_timestamp(), procedimento_paciente_w.cd_convenio, procedimento_paciente_w.cd_categoria, procedimento_paciente_w.nr_doc_convenio, procedimento_paciente_w.ie_tipo_guia, procedimento_paciente_w.cd_senha) INTO STRICT procedimento_paciente_w.cd_convenio, procedimento_paciente_w.cd_categoria, procedimento_paciente_w.nr_doc_convenio, procedimento_paciente_w.ie_tipo_guia, procedimento_paciente_w.cd_senha;
				
	update	episodio_paciente_drg
	set	nr_seq_propaci	= nr_sequencia_w
	where	nr_sequencia	= nr_seq_pac_drg_p;

	procedimento_paciente_w.nr_sequencia		:= nr_sequencia_w;
	procedimento_paciente_w.nr_atendimento		:= nr_atendimento_p;
	procedimento_paciente_w.dt_entrada_unidade	:= dt_entrada_unidade_w;
	procedimento_paciente_w.cd_procedimento		:= cd_procedimento_w;
	procedimento_paciente_w.ie_origem_proced	:= ie_origem_proced_w;
	procedimento_paciente_w.dt_procedimento		:= coalesce(obter_data_entrada(nr_atendimento_p),clock_timestamp());
	procedimento_paciente_w.ie_auditoria		:= 'N';
	procedimento_paciente_w.qt_procedimento		:= 1;
	procedimento_paciente_w.cd_setor_atendimento	:= cd_setor_atendimento_w;
	procedimento_paciente_w.nr_seq_atepacu		:= nr_seq_atepacu_w;
	procedimento_paciente_w.nr_seq_cor_exec		:= 96;
	procedimento_paciente_w.ie_valor_informado	:= ie_value_entered_p;
	procedimento_paciente_w.vl_procedimento		:= vl_drg_w;
	procedimento_paciente_w.tx_medico		:= 100;
	procedimento_paciente_w.tx_Anestesia		:= 100;
	procedimento_paciente_w.tx_procedimento		:= 100;
	procedimento_paciente_w.cd_situacao_glosa	:= 0;
	procedimento_paciente_w.nm_usuario_original	:= nm_usuario_p;
	procedimento_paciente_w.dt_atualizacao		:= clock_timestamp();
	procedimento_paciente_w.nm_usuario		:= nm_usuario_p;

	insert into procedimento_paciente values (procedimento_paciente_w.*);

	CALL atualiza_preco_procedimento(nr_sequencia_w, procedimento_paciente_w.cd_convenio, nm_usuario_p);
		
	select	max(nr_interno_conta)
	into STRICT	nr_interno_conta_w
		from	procedimento_paciente
	where	nr_sequencia	= procedimento_paciente_w.nr_sequencia;
	CALL gerar_lancamento_automatico(nr_atendimento_p,null,34,nm_usuario_p,procedimento_paciente_w.nr_sequencia, null, null, null, null, nr_interno_conta_w);
	
	update	episodio_paciente_drg
	set	ie_situacao 	= 'A'
	where	nr_sequencia	= nr_seq_pac_drg_p;
	
	----- ROUTINE to link DRG
    CALL link_unlink_drg('A',nr_interno_conta_w,nr_sequencia_w,nm_usuario_p);
	
	

elsif (episodio_paciente_drg_w.ie_situacao = 'I') and (episodio_paciente_drg_w.nr_seq_propaci IS NOT NULL AND episodio_paciente_drg_w.nr_seq_propaci::text <> '') then
	
	select	max(b.cd_estabelecimento),
		max(b.ie_status_acerto)
	into STRICT	cd_estabelecimento_w,
		ie_status_acerto_w
	from	conta_paciente b
	where	nr_interno_conta	= nr_interno_conta_p;

	select	max(cd_motivo_exc_conta)
	into STRICT	cd_motivo_exc_conta_w
	from	parametro_faturamento
	where	cd_estabelecimento	= cd_estabelecimento_w;
	
	if (ie_status_acerto_w = 1) and --somente se conta nao fechada
		(nr_interno_conta_p IS NOT NULL AND nr_interno_conta_p::text <> '') and (episodio_paciente_drg_w.nr_seq_propaci IS NOT NULL AND episodio_paciente_drg_w.nr_seq_propaci::text <> '') then
		
		--excluir_matproc_conta(episodio_paciente_drg_w.nr_seq_propaci, nr_interno_conta_p, cd_motivo_exc_conta_w, obter_desc_expressao(884850), 'P',nm_usuario_p,'S');  ------884850 - Item excluido pela inativacao da DRG
		update	procedimento_paciente
		set	cd_motivo_exc_conta	= cd_motivo_exc_conta_w,
			ds_compl_motivo_excon	= obter_desc_expressao(884850),
			dt_acerto_conta 	 = NULL,
			nr_interno_conta 	 = NULL,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			nr_seq_proc_autor	 = NULL
		where	nr_sequencia		= episodio_paciente_drg_w.nr_seq_propaci;
		begin
		delete	from auditoria_propaci
		where	nr_seq_propaci	= episodio_paciente_drg_w.nr_seq_propaci;
		exception
		when others then
			null;
		end;
		
		------ ROUTINE to Unlink DRG
		CALL link_unlink_drg('I',nr_interno_conta_p,episodio_paciente_drg_w.nr_seq_propaci,nm_usuario_p);
		
		
		--excluir_item_conta_rla(episodio_paciente_drg_w.nr_seq_propaci,wheb_usuario_pck.get_cd_estabelecimento,nm_usuario_p);
	end if;
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_drg_proc_pac_conta (nr_atendimento_p bigint, nr_seq_episodio_p bigint, nr_seq_pac_drg_p bigint, nr_interno_conta_p bigint, nm_usuario_p text, ie_value_entered_p text default 'S') FROM PUBLIC;

