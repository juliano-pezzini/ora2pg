-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE envia_ci_transf_opme (nr_seq_agenda_p bigint, cd_estabelecimento_p bigint, nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_regra_w			bigint;
nm_usuarios_adic_w		varchar(255);

nr_sequencia_w			agenda_paciente.nr_sequencia%type;
dt_agenda_w				timestamp;
hr_inicio_w				timestamp;
nr_minuto_duracao_w		bigint;
nm_paciente_w			varchar(60);
cd_convenio_w			integer;
cd_procedimento_w		double precision;
ds_procedimento_w		procedimento.ds_procedimento%TYPE;
nm_medico_w				varchar(100);
ds_titulo_w				varchar(80);
ds_comunicado_w			varchar(4000);
cd_perfil_w				varchar(10);
ie_ci_lida_w			varchar(1);
nm_usuario_destino_w	varchar(255);
nr_seq_classif_w		bigint;
nr_seq_comunic_w		bigint;

cd_setor_regra_usuario_w	integer;
cd_perfil_usuario_w		integer;
ds_setor_adicional_w	varchar(2000) := '';
ds_perfil_adicional_w	varchar(4000) := '';

ds_material_w			varchar(255);
qt_material_w			double precision;
ds_fornecedor_w			varchar(255);
ds_lista_material_w		varchar(4000);				

C01 CURSOR FOR
	SELECT	b.nr_sequencia,
		b.nm_usuarios_adic
	from	regra_envio_comunic_compra a,
		regra_envio_comunic_evento b
	where	a.nr_sequencia = b.nr_seq_regra
	and	a.cd_funcao = 871
	and	b.cd_evento = 75
	and	b.ie_situacao = 'A'
	and	cd_estabelecimento = cd_estabelecimento_p
	and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,nr_sequencia_p,'AF',obter_perfil_ativo,nm_usuario_p,null),1,1) = 'S';

C02 CURSOR FOR
	SELECT	coalesce(a.cd_setor_atendimento,0),
		coalesce(a.cd_perfil,0)
	from	regra_envio_comunic_usu a
	where	a.nr_seq_evento = nr_seq_regra_w;

C03 CURSOR FOR
	SELECT	substr(obter_desc_material(cd_material),1,255),
		qt_material,
		substr(obter_nome_pf_pj(null,cd_cgc),1,255)
	from	agenda_pac_opme
	where	nr_seq_agenda = nr_seq_agenda_p;


BEGIN

open C01;
loop
fetch C01 into	
	nr_seq_regra_w,
	nm_usuarios_adic_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		
	open C02;
	loop
	fetch C02 into
		cd_setor_regra_usuario_w,
		ds_perfil_adicional_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		if (cd_setor_regra_usuario_w <> 0) and (obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N') then
			ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
		end if;
		if (cd_perfil_usuario_w <> 0) and (obter_se_contido_char(cd_perfil_usuario_w, ds_perfil_adicional_w) = 'N') then
			ds_perfil_adicional_w := substr(ds_perfil_adicional_w || cd_perfil_usuario_w || ',',1,4000);
		end if;
		end;
	end loop;
	close C02;
		
	open C03;
	loop
	fetch C03 into	
		ds_material_w,
		qt_material_w,
		ds_fornecedor_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		
		ds_lista_material_w := substr(ds_lista_material_w || ds_material_w||' '||ds_fornecedor_w||' '||qt_material_w||' '|| chr(13) || chr(10),1,4000);	

		end;
	end loop;
	close C03;
	
	select	nr_sequencia,
		dt_agenda,
		hr_inicio,
		nr_minuto_duracao,
		nm_paciente,
		cd_convenio,
		cd_procedimento,
		substr(obter_exame_agenda(cd_procedimento, ie_origem_proced, nr_seq_proc_interno),1,255),
		substr(obter_nome_medico(cd_medico,'NCD'),1,100)
	into STRICT	nr_sequencia_w,
		dt_agenda_w,
		hr_inicio_w,
		nr_minuto_duracao_w,
		nm_paciente_w,
		cd_convenio_w,
		cd_procedimento_w,
		ds_procedimento_w,
		nm_medico_w
	from	agenda_paciente
	where	nr_sequencia = nr_seq_agenda_p;
		
	select	max(ds_titulo),
		max(ds_comunicacao),
		max(cd_perfil)
	into STRICT	ds_titulo_w,
		ds_comunicado_w,
		cd_perfil_w
	from	regra_envio_comunic_evento
	where	nr_sequencia = nr_seq_regra_w;
	
	ds_titulo_w := substr(ds_titulo_w, 1, 80);
	ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@agenda',nr_sequencia_w), 1, 4000);
	ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@data',dt_agenda_w||' '||obter_desc_expressao(291978)||' '||hr_inicio_w||' '||obter_desc_expressao(289003)||' '||nr_minuto_duracao_w ), 1, 4000);	
	ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@paciente',nm_paciente_w), 1, 4000);
	ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@convenio',cd_convenio_w), 1, 4000);	
	ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@procedimento',cd_procedimento_w||' - '||ds_procedimento_w), 1, 4000);
	ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@cirurgiao',nm_medico_w), 1, 4000);	
	ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@materiais',ds_lista_material_w), 1, 4000);
	
	select	coalesce(ie_ci_lida,'N')
	into STRICT	ie_ci_lida_w
	from 	regra_envio_comunic_evento
	where 	nr_sequencia = nr_seq_regra_w;
	
	nm_usuario_destino_w := nm_usuarios_adic_w;
	
	if (nm_usuario_destino_w IS NOT NULL AND nm_usuario_destino_w::text <> '') then
	
		select	obter_classif_comunic('F')
		into STRICT	nr_seq_classif_w
		;	
			
		select	nextval('comunic_interna_seq')
		into STRICT	nr_seq_comunic_w
		;
	
		if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then
			cd_perfil_w := cd_perfil_w ||',';
		end if;
			
		insert into comunic_interna(
			dt_comunicado,
			ds_titulo,
			ds_comunicado,
			nm_usuario,
			dt_atualizacao,
			ie_geral,
			nm_usuario_destino,
			nr_sequencia,
			ie_gerencial,
			nr_seq_classif,
			dt_liberacao,
			nr_seq_resultado,
			ds_perfil_adicional,
			ds_setor_adicional)
		values (	clock_timestamp(),
			ds_titulo_w,
			ds_comunicado_w,
			nm_usuario_p,
			clock_timestamp(),
			'N',
			nm_usuario_destino_w,
			nr_seq_comunic_w,
			'N',
			nr_seq_classif_w,
			clock_timestamp(),
			nr_sequencia_p,
			cd_perfil_w,
			ds_setor_adicional_w);

		if (ie_ci_lida_w = 'S') then
			insert into comunic_interna_lida(nr_sequencia,nm_usuario,dt_atualizacao)values (nr_seq_comunic_w,nm_usuario_p,clock_timestamp());
		end if;
	
	end if;	
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE envia_ci_transf_opme (nr_seq_agenda_p bigint, cd_estabelecimento_p bigint, nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

