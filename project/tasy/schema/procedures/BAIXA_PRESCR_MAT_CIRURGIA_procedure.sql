-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixa_prescr_mat_cirurgia ( nr_cirurgia_p bigint, nr_prescricao_p bigint, cd_local_estoque_p bigint, nr_seq_atepacu_p bigint, nm_usuario_p text, cd_perfil_p bigint, cd_setor_atendimento_p bigint, cd_funcao_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


ie_consiste_categoria_w    	varchar(1);
cd_baixa_incorreta_w		smallint;
cd_motivo_baixa_w			smallint;
cd_motivo_baixa_original_w	smallint;
ie_baixa_sem_estoque_w		varchar(1);
cd_setor_atendimento_w		integer;
cd_setor_atend_baixa_w		integer;
dt_entrada_unidade_w		timestamp;
nr_prescricao_w				bigint;
dt_prescricao_w				timestamp;
nr_atendimento_w			bigint;
cd_estab_w					bigint;
nr_seq_prescr_w				bigint;
cd_material_w				integer;
qt_material_w				double precision;
qt_dispensar_w				double precision;
qt_dias_solic_w				smallint;
qt_dias_lib_w				smallint;
ie_status_w					varchar(2);
ie_baixa_paciente_w			varchar(1) := 'S';
ie_via_aplicacao_w			varchar(5);
cd_unidade_medida_w			varchar(30);
cd_fornec_consignado_w		varchar(14);
nr_seq_lote_fornec_w		bigint;
ie_local_valido_w			varchar(1) := 'S';
ie_disp_estoque_w			varchar(1) := 'S';
ie_atualiza_estoque_w		varchar(1) := 'S';
cd_local_estoque_w			integer;
cd_local_estoque_mat_w		integer;
nr_sequencia_w				bigint;
cd_convenio_w				integer;
cd_categoria_w				varchar(10);
nr_doc_convenio_w			varchar(20);
ie_tipo_guia_w				varchar(2);
cd_funcao_w					bigint;
ie_somente_cb_w				varchar(01)	:= 'N';
ie_consiste_baixa_estoque_w		varchar(01) := 'N';
ie_material_estoque_w		varchar(01) := 'N';
ie_mat_estoque_mat_w		varchar(01) := 'N';
cd_convenio_ww				integer;
cd_categoria_ww				varchar(10);
cd_senha_w					varchar(20);
ie_receita_w				varchar(5) := 'N';
nr_receita_w				bigint;
ie_tipo_lancto_w			varchar(10) := '3';
ds_local_estoque_w			varchar(100);
ie_cons_baixa_estoque_nova_w 	varchar(01) := 'N';
dt_inicio_w					timestamp;
ie_inicio_cirurgia_w		varchar(1);
cd_estabelecimento_w		smallint;
nr_seq_kit_estoque_w		bigint;
ie_local_estoque_w			varchar(1)	:= 'P';
ie_consignado_w				varchar(1);
cd_material_estoque_w		integer;
ie_permitir_baixa_w			varchar(1);
ie_conta_fechada_w			varchar(1);
qt_estoque_w				double precision;
cd_kit_material_w			integer;
ie_baixa_estoque_w			varchar(1);
qt_conv_estoque_consumo_w	double precision;
cd_unidade_medida_estoque_w	varchar(30);
cd_unidade_medida_consumo_w	varchar(30);
ie_disp_ag_cirur_w			varchar(1);
ie_verifica_fornec_cons_w	varchar(1);
ie_possui_saldo_w			varchar(1) := 'S';
ie_local_esto_setor_w		varchar(1) := 'S';
ie_selecionar_local_estoque_w	varchar(1) := 'N';
ie_gerar_convenio_w			varchar(1);
ie_autor_atend_prescr_w		varchar(1) := 'N';
ds_erro_w					varchar(255):= null;
ds_erro_ww					varchar(255):= null;
ie_acao_excesso_w			varchar(10);
qt_excedida_w				double precision;
ds_erro_uso_w				varchar(255);
ie_regra_uso_w				varchar(1):= 'N';
nr_seq_excedido_w			bigint;
nr_conta_w					bigint;
nr_seq_regra_uso_w			bigint;
dt_item_w					timestamp;
cd_convenio_pf_w			integer;
cd_categoria_pf_w			varchar(10);
nr_seq_agenda_w				cirurgia.nr_seq_agenda%type;
ie_opme_integracao_w		varchar(1);
qt_material_externo_w		bigint;
ie_gerar_integracao_w		varchar(1);
nr_seq_interno_w			bigint;
ie_data_atual_w				varchar(1);
ie_tipo_entrada_w			varchar(255);
qt_consite_status_conta_w	bigint;
ie_consite_status_conta_w	varchar(1);
/*ie_cobra_pac_w			varchar2(01) := 'S';*/

ie_entra_conta_w			varchar(1) := 'S';
ie_consiste_se_cobra_pac_w	varchar(1) := 'S';
ds_observacao_w				varchar(255);
ds_historico_atend_presc_w	varchar(4000);
ie_data_termino_w			varchar(1) := 'N';
dt_termino_par_w			timestamp;
dt_termino_w				timestamp;
VarIeContaPaciente_w		varchar(1) := 'S';
cd_motivo_exc_conta_w		parametro_faturamento.cd_motivo_exc_conta%type;
ieLocalMaterialAdicCons_w	varchar(1);
qt_processo_w     			bigint;
nm_procedure_w    			varchar(100);
nr_prescricao_ww			varchar(100);
dt_conta_w					timestamp;
ie_tipo_saldo_w				varchar(1);
nr_seq_regra_w				bigint;
qt_diferenca_w				bigint := 0;
ie_continua					varchar(1)	:= 'S';
qt_baixado_proprio_w		double precision;
qt_baixado_consignado_w		double precision;
qt_material_baixar			double precision;
qt_saldo_total_w			double precision;
cd_motivo_baixa_ww			varchar(50);
cd_local_estoque_ww			integer;
qt_agenda_cirurgia_w		double precision := 0;
qt_esp_cirurgia_w			double precision := 0;
ie_disp_cirurgia_w			varchar(1);
ie_tipo_local_w				varchar(5);
ie_baixa_disp_w				varchar(1);
qt_cirurgia_w				double precision := 0;
ie_estoque_lote_w			material_estab.ie_estoque_lote%type;

C01 CURSOR FOR
SELECT	b.nr_prescricao,
	b.dt_prescricao,
	b.nr_atendimento,
	c.cd_estabelecimento
from  	atendimento_paciente c,
	prescr_medica b,
	cirurgia a
where 	b.nr_atendimento	= c.nr_atendimento
and 	a.nr_prescricao	= b.nr_prescricao
and 	a.nr_cirurgia 	= nr_cirurgia_p
and 	a.nr_prescricao 	= nr_prescricao_p
and 	coalesce(b.dt_baixa::text, '') = '';

C02 CURSOR FOR
SELECT	a.nr_sequencia,
	a.cd_material,
	a.qt_material,
	a.qt_total_dispensar,
	coalesce(a.qt_dias_solicitado,0),
	coalesce(a.qt_dias_liberado,0),
	a.ie_status_cirurgia,
	obter_se_baixa_estoque_pac(cd_setor_atendimento_w, a.cd_material,null,0),
	a.ie_via_aplicacao,
	a.cd_unidade_medida,
	a.cd_fornec_consignado,
	a.nr_seq_lote_fornec,
	a.cd_convenio,
	a.cd_categoria,
	coalesce(a.nr_receita,0),
	coalesce(a.nr_seq_kit_estoque,0),
	coalesce(a.cd_kit_material, 0),
	coalesce(a.cd_local_estoque,0),
	a.nr_seq_interno,
	substr(a.ds_observacao,1,255)
from	prescr_material a
where	a.nr_prescricao	= nr_prescricao_w
and	((ie_somente_cb_w = 'N')
	 or ((a.ie_status_cirurgia = 'CB')
	 or (a.ie_status_cirurgia = 'AD')))
and	a.cd_motivo_baixa	= 0
AND	((ie_consiste_se_cobra_pac_w = 'N') or (obter_se_mat_cobra_paciente(a.cd_material) = 'S'));


BEGIN
nr_prescricao_ww := to_char(nr_prescricao_p);
nm_procedure_w := substr('BAIXA_PRESCR_MAT_CIR' || nr_prescricao_ww,1,32);

select   count(1)
into STRICT     qt_processo_w
from     processo_longo_v
where    upper(nm_procedure) = nm_procedure_w;

if (qt_processo_w = 0) then
	begin
	CALL gravar_processo_longo('Execucao da baixa de materiais para cirurgia', nm_procedure_w, 1);

	cd_funcao_w	:= cd_funcao_p;

	select 	wheb_usuario_pck.get_cd_estabelecimento
	into STRICT	cd_estabelecimento_w
	;

	select	coalesce(max(IE_REGRA_SALDO_CONSIG),0)
	into STRICT	nr_seq_regra_w
	from	parametro_estoque
	where	cd_estabelecimento = cd_estabelecimento_w;

	select	coalesce(dt_inicio_real,dt_inicio_prevista),
		dt_termino
	into STRICT	dt_inicio_w,
		dt_termino_w
	from 	cirurgia
	where	nr_cirurgia = nr_cirurgia_p;

	ie_tipo_lancto_w := obter_param_usuario(901, 121, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_tipo_lancto_w);
	ie_receita_w := obter_param_usuario(901, 101, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_receita_w);
	if (ie_tipo_lancto_w <> 0) then
		ie_tipo_lancto_w := obter_param_usuario(900, 258, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_tipo_lancto_w);
		if (ie_tipo_lancto_w = 'S') then
			ie_tipo_lancto_w := '0';
		end if;
	end if;

	ie_consiste_baixa_estoque_w	:= 'N';

	cd_motivo_baixa_w := obter_param_usuario(36, 21, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, cd_motivo_baixa_w);
	ie_consiste_baixa_estoque_w := obter_param_usuario(901, 19, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_consiste_baixa_estoque_w);
	ie_cons_baixa_estoque_nova_w := obter_param_usuario(900, 36, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_cons_baixa_estoque_nova_w);
	ie_verifica_fornec_cons_w := obter_param_usuario(900, 111, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_verifica_fornec_cons_w);

	ie_inicio_cirurgia_w	:= 'N';
	ie_permitir_baixa_w	:= 'S';
	ie_data_atual_w		:= 'N';

	/* Cirurgia de pacientes */

	if (cd_funcao_w = 901) then
		cd_motivo_baixa_w := obter_param_usuario(901, 37, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, cd_motivo_baixa_w);
		ie_somente_cb_w := obter_param_usuario(901, 45, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_somente_cb_w);
		ie_inicio_cirurgia_w:= obter_valor_param_usuario(901, 134, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w);
		ie_local_estoque_w := obter_param_usuario(901, 137, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_local_estoque_w);
	end if;

	ie_permitir_baixa_w	:= obter_valor_param_usuario(901, 139, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w);
	/* Gestao de cirurgias */

	if (cd_funcao_w = 900) then
		ie_somente_cb_w := obter_param_usuario(900, 43, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_somente_cb_w);
		ie_local_estoque_w := obter_param_usuario(900, 73, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_local_estoque_w);
		ie_permitir_baixa_w := obter_param_usuario(900, 77, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_permitir_baixa_w);
		ie_inicio_cirurgia_w := obter_param_usuario(900, 134, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_inicio_cirurgia_w);
		ie_selecionar_local_estoque_w := obter_param_usuario(900, 217, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_selecionar_local_estoque_w);
		ie_autor_atend_prescr_w := obter_param_usuario(900, 224, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_autor_atend_prescr_w);
		ie_gerar_convenio_w := obter_param_usuario(900, 227, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_convenio_w);
		ie_consiste_categoria_w := obter_param_usuario(900, 355, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consiste_categoria_w);
		ie_gerar_integracao_w := obter_param_usuario(900, 383, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_integracao_w);
		ie_data_atual_w := obter_param_usuario(900, 397, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_data_atual_w);
		ie_consite_status_conta_w := obter_param_usuario(900, 410, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_consite_status_conta_w);
		ie_consiste_se_cobra_pac_w := obter_param_usuario(900, 493, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_consiste_se_cobra_pac_w);
		ie_data_termino_w := obter_param_usuario(900, 532, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_data_termino_w);
		ieLocalMaterialAdicCons_w := obter_param_usuario(900, 557, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ieLocalMaterialAdicCons_w);
		/*obter_param_usuario(900, 437, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_cobra_pac_w);*/

	end if;

	cd_motivo_baixa_original_w	:= cd_motivo_baixa_w;

	ie_baixa_sem_estoque_w := obter_param_usuario(36, 9, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_baixa_sem_estoque_w);
	cd_baixa_incorreta_w := obter_param_usuario(36, 22, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, cd_baixa_incorreta_w);

	select	cd_setor_atendimento,
		cd_setor_atendimento,
		dt_entrada_unidade
	into STRICT	cd_setor_atendimento_w,
		cd_setor_atend_baixa_w,
		dt_entrada_unidade_w
	from 	atend_paciente_unidade
	where 	nr_seq_interno = nr_seq_atepacu_p;

	select	coalesce(max(ie_atualiza_estoque),'N')
	into STRICT	ie_atualiza_estoque_w
	from	tipo_baixa_prescricao
	where	cd_tipo_baixa = cd_motivo_baixa_w
	and	ie_prescricao_devolucao = 'P';

	cd_local_estoque_w := cd_local_estoque_p;
	if (ie_local_estoque_w = 'U') then
		cd_setor_atendimento_w := cd_setor_atendimento_p;

	end if;

	select	coalesce(max(ie_disp_ag_cirur), 'N'),
			coalesce(max(ie_disp_cirurgia),'S')
	into STRICT	ie_disp_ag_cirur_w,
			ie_disp_cirurgia_w
	from	parametro_estoque
	where	cd_estabelecimento = cd_estabelecimento_w;

	dt_termino_par_w := null;
	if (ie_data_termino_w = 'S') then
		dt_termino_par_w := dt_termino_w;
	end if;


	open C01;
	loop
		fetch C01 into	nr_prescricao_w,
					dt_prescricao_w,
					nr_atendimento_w,
					cd_estab_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */

		if (ie_consite_status_conta_w = 'S') then
			select 	count(*)
			into STRICT	qt_consite_status_conta_w
			from 	conta_paciente
			where 	ie_status_acerto 	= 1
			and 	nr_atendimento 		= nr_atendimento_w;
			if (qt_consite_status_conta_w = 0) then
				 CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(190662);
			end if;
		end if;

		/* Verifica se o atendimento possui a conta fechada */

		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_conta_fechada_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_w
		and	ie_fim_conta = 'F'
		and	(dt_fim_conta IS NOT NULL AND dt_fim_conta::text <> '');


		if	((ie_permitir_baixa_w = 'S') or (ie_permitir_baixa_w = 'A') or
			 (ie_permitir_baixa_w = 'N' AND ie_conta_fechada_w = 'N') or
			 (ie_permitir_baixa_w = 'B' AND ie_conta_fechada_w = 'N')) then
			begin

			open C02;
			loop
				fetch c02 into		nr_seq_prescr_w,
							cd_material_w,
							qt_material_w,
							qt_dispensar_w,
							qt_dias_solic_w,
							qt_dias_lib_w,
							ie_status_w,
							ie_baixa_paciente_w,
							ie_via_aplicacao_w,
							cd_unidade_medida_w,
							cd_fornec_consignado_w,
							nr_seq_lote_fornec_w,
							cd_convenio_ww,
							cd_categoria_ww,
							nr_receita_w,
							nr_seq_kit_estoque_w,
							cd_kit_material_w,
							cd_local_estoque_mat_w,
							nr_seq_interno_w,
							ds_observacao_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
				qt_baixado_proprio_w 	:= 0;
				qt_baixado_consignado_w := 0;
				qt_material_baixar 		:= qt_material_w;
				qt_diferenca_w 	:= 0;
				ie_continua 	:= 'S';
				qt_cirurgia_w	:= 0;

				while(qt_diferenca_w > 0 or ie_continua = 'S')loop
					begin

					if (cd_kit_material_w = 0) and (nr_seq_kit_estoque_w > 0) then
						select	max(cd_kit_material)
						into STRICT	cd_kit_material_w
						from	kit_estoque
						where	nr_sequencia = nr_seq_kit_estoque_w;
					end if;

					ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'2';

					if (coalesce(ie_autor_atend_prescr_w,'N') = 'S') then
						CALL gerar_mat_esp_prescr_cirurgia(	nr_prescricao_p,
										nr_atendimento_w,
										cd_estabelecimento_w,
										nm_usuario_p);
					end if;

					if (ie_gerar_convenio_w = 'S') then
						select	max(cd_convenio),
							max(cd_categoria)
						into STRICT	cd_convenio_ww,
							cd_categoria_ww
						from	cirurgia
						where	nr_cirurgia	=	nr_cirurgia_p;
					end if;

					ie_disp_estoque_w	:= 'S';

					cd_local_estoque_w 	:= cd_local_estoque_p;

					if (ie_local_estoque_w = 'R') then
						cd_local_estoque_w:= coalesce(obter_local_disp_prescr(nr_prescricao_p, nr_seq_prescr_w, obter_perfil_ativo, nm_usuario_p),cd_local_estoque_w);
						ie_tipo_entrada_w  := ie_tipo_entrada_w || ',' ||'3';
					end if;

					if (ieLocalMaterialAdicCons_w = 'S' AND cd_local_estoque_mat_w <> 0) then
						cd_local_estoque_ww := cd_local_estoque_mat_w;
					else
						cd_local_estoque_ww := cd_local_estoque_p;
					end if;

					/* Consistencia - Jerusa OS 115151 */

					if (ie_atualiza_estoque_w <> 'S') or ((obter_se_mat_baixa_estoque_cir(cd_material_w,cd_local_estoque_ww, nr_cirurgia_p,cd_kit_material_w,nr_seq_kit_estoque_w,nr_seq_interno_w) IS NOT NULL AND (obter_se_mat_baixa_estoque_cir(cd_material_w,cd_local_estoque_ww, nr_cirurgia_p,cd_kit_material_w,nr_seq_kit_estoque_w,nr_seq_interno_w))::text <> '')) then
						cd_local_estoque_w := null;
						ie_tipo_entrada_w  := ie_tipo_entrada_w || ',' ||'4';
					elsif (nr_seq_kit_estoque_w = 0) and (cd_local_estoque_mat_w <> 0) and (ieLocalMaterialAdicCons_w = 'S') then
						cd_local_estoque_w	:= cd_local_estoque_mat_w;
					elsif	((nr_seq_kit_estoque_w = 0) or (cd_local_estoque_p = 0)) and (ie_local_estoque_w not in ('R','C')) and (ie_selecionar_local_estoque_w = 'N') then
						select cd_local_estoque
						into STRICT cd_local_estoque_w
						from setor_atendimento
						where cd_setor_atendimento = cd_setor_atendimento_w;

						if ((obter_se_mat_baixa_estoque_cir(cd_material_w,cd_local_estoque_ww, nr_cirurgia_p,cd_kit_material_w,nr_seq_kit_estoque_w,nr_seq_interno_w) IS NOT NULL AND (obter_se_mat_baixa_estoque_cir(cd_material_w,cd_local_estoque_ww, nr_cirurgia_p,cd_kit_material_w,nr_seq_kit_estoque_w,nr_seq_interno_w))::text <> '')) then
							cd_local_estoque_w	:= null;
							ie_tipo_entrada_w  := ie_tipo_entrada_w || ',' ||'5';
						end if;
					elsif (nr_seq_kit_estoque_w <> 0) and (cd_local_estoque_mat_w <> 0) then
						cd_local_estoque_w	:= cd_local_estoque_mat_w;
						ie_tipo_entrada_w  := ie_tipo_entrada_w || ',' ||'6';
					end if;

					ie_entra_conta_w := 'S';
					if (cd_kit_material_w > 0) then
						select	coalesce(max(ie_baixa_estoque), 'S'),
							coalesce(max(ie_entra_conta),'S')
						into STRICT	ie_baixa_estoque_w,
							ie_entra_conta_w
						from	componente_kit
										where	cd_kit_material	= cd_kit_material_w
										and	cd_material	= cd_material_w
						and	((coalesce(cd_estab_regra::text, '') = '') or (cd_estab_regra = cd_estabelecimento_w));

						if (ie_baixa_estoque_w = 'N') then
							cd_local_estoque_w	:= null;
							ie_tipo_entrada_w  := ie_tipo_entrada_w || ',' ||'7';
						elsif (ie_baixa_estoque_w = 'S') and (ie_entra_conta_w = 'N') and (ie_atualiza_estoque_w = 'S') then
							begin
							CALL Gerar_Prescricao_Estoque(  cd_estabelecimento_w,
													nr_atendimento_w,
													dt_entrada_unidade_w,
													cd_material_w,
													dt_prescricao_w,
													'1',
													cd_local_estoque_w,
													qt_material_w,
													cd_setor_atendimento_w,
													cd_unidade_medida_w,
													nm_usuario_p,
													'I',
													nr_prescricao_w,
													nr_seq_prescr_w,
													null,
													null,
													cd_fornec_consignado_w,
													null,
													nr_seq_lote_fornec_w,
													0,
													null,
													0,
													null,
													null,
													null);

							update	prescr_material
							set		dt_baixa 		= clock_timestamp(),
									cd_motivo_baixa = cd_motivo_baixa_w,
									dt_atualizacao	= clock_timestamp(),
									nm_usuario		= nm_usuario_p
							where	nr_prescricao		= nr_prescricao_w
							and	nr_sequencia		= nr_seq_prescr_w;

							exception
							when others then
								ds_erro_w 	:= substr(SQLERRM(SQLSTATE),1,255);
								ds_erro_ww 	:= ds_erro_w;
							end;
						end if;
					end if;

					select	max(ie_material_estoque)
					into STRICT	ie_mat_estoque_mat_w
					from	material
					where	cd_material		= cd_material_w;

					select	coalesce(max(ie_material_estoque), ie_mat_estoque_mat_w)
					into STRICT	ie_material_estoque_w
					from	material_estab
					where	cd_estabelecimento	= cd_estab_w
					and	cd_material		= cd_material_w;

					if (ie_entra_conta_w = 'S') then
						if (qt_material_w = 0) and (cd_baixa_incorreta_w <> 0) then

							update 	prescr_material
							set	dt_baixa	= clock_timestamp(),
								cd_motivo_baixa = cd_baixa_incorreta_w,
								dt_atualizacao	= clock_timestamp(),
								nm_usuario	= nm_usuario_p
							where	nr_prescricao	= nr_prescricao_w
							and	nr_sequencia 	= nr_seq_prescr_w;
							ie_tipo_entrada_w  := ie_tipo_entrada_w || ',' ||'8';

						/* elsif 	(qt_dispensar_w = qt_material_w) and  - Dalcastagne em 04/08/2009 OS 157957 */

						elsif (qt_dispensar_w > 0) and
							((qt_dias_solic_w = 0) or (qt_dias_lib_w > 0)) then

							qt_material_w	:=  qt_dispensar_w; /* Dalcastagne em 04/08/2009 OS 157957 */
							ie_local_valido_w := obter_local_valido(cd_estab_w, cd_local_estoque_w, cd_material_w, '', ie_local_valido_w);


							/* Dalcastagne em 17/10/2007 OS 70819 */

							if (ie_receita_w = 'S') and (nr_receita_w = 0) and (obter_se_medic_controlado(cd_material_w) = 'S') then
								CALL Wheb_mensagem_pck.exibir_mensagem_abort(190665,	'DS_MATERIAL='||substr(obter_desc_material(cd_material_w),1,100));
							elsif (ie_receita_w = 'M') and (nr_receita_w = 0) and (obter_se_medic_controlado(cd_material_w) = 'S') then
								if (coalesce(length(ds_erro_p),0) < 255) then
									ds_erro_p := substr(wheb_mensagem_pck.get_texto(278090, 'CD_MATERIAL_P=' || substr(obter_desc_material(cd_material_w),1,50)),1,255);
								end if;
							end if;


							select	coalesce(ie_consignado,'0'),
								cd_material_estoque,
								qt_conv_estoque_consumo,
								substr(obter_dados_material_estab(cd_material,cd_estab_w,'UME'),1,30) cd_unidade_medida_estoque,
								substr(obter_dados_material_estab(cd_material,cd_estab_w,'UMS'),1,30) cd_unidade_medida_consumo
							into STRICT	ie_consignado_w,
								cd_material_estoque_w,
								qt_conv_estoque_consumo_w,
								cd_unidade_medida_estoque_w,
								cd_unidade_medida_consumo_w
							from	material
							where	cd_material = cd_material_w;

							if (ie_consignado_w = 0)then
								ie_tipo_saldo_w := 'N';
							elsif (ie_consignado_w = 1)then
								ie_tipo_saldo_w := 'C';
							elsif (ie_consignado_w = 2)then
								ie_tipo_saldo_w := '';
							end if;

							if (ie_verifica_fornec_cons_w = 'S') and (ie_consignado_w = '1') and (coalesce(cd_fornec_consignado_w::text, '') = '') then
								CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(190668, 'CD_MATERIAL='||cd_material_w);

							end if;

							if (cd_local_estoque_w IS NOT NULL AND cd_local_estoque_w::text <> '') and (ie_local_valido_w = 'S')then
								begin

								select	ie_tipo_local,
									coalesce(ie_baixa_disp, 'N')
								into STRICT ie_tipo_local_w,
									ie_baixa_disp_w
								from 	local_estoque
								where	cd_local_estoque	= cd_local_estoque_w;
								
								ie_estoque_lote_w := obter_se_material_estoque_lote(cd_estab_w, cd_material_w);

								ie_possui_saldo_w	:= 'S';
								if	((ie_consignado_w = '2') and (nr_seq_regra_w > 0) and (coalesce(cd_fornec_consignado_w::text, '') = '') and (ie_estoque_lote_w <> 'S')) then
									cd_fornec_consignado_w := null;
									SELECT * FROM obter_fornec_consig_ambos(cd_estab_w, cd_material_estoque_w, nr_seq_lote_fornec_w, cd_local_estoque_w, ie_tipo_saldo_w, cd_fornec_consignado_w, 'CIR') INTO STRICT ie_tipo_saldo_w, cd_fornec_consignado_w;	

									if (coalesce(ie_tipo_saldo_w, 'C') <> 'C') then  /*proprio ambos com regra*/
										begin
											qt_estoque_w := obter_saldo_disp_estoque(cd_estab_w,cd_material_estoque_w,cd_local_estoque_w,trunc(clock_timestamp(),'mm'));

											if (cd_unidade_medida_estoque_w <> cd_unidade_medida_consumo_w) then
												qt_estoque_w := obter_quantidade_convertida(cd_material_w, qt_estoque_w, cd_unidade_medida_estoque_w, 'UMC');
											end if;

											if	(ie_disp_cirurgia_w = 'S' and ie_status_w in ('CB','AD') and ((ie_tipo_local_w = 2) or (ie_baixa_disp_w = 'S'))) then
												begin
												select
													coalesce(sum(qt_total_dispensar),0)
												into STRICT	qt_cirurgia_w
												from	setor_atendimento c,
													cirurgia b,
													material x,
													prescr_material a,
													prescr_medica m
												where	a.cd_motivo_baixa	= 0
													and	a.cd_material			= x.cd_material
													and	x.cd_material_estoque	= cd_material_w
													and	m.nr_prescricao			= b.nr_prescricao
													and	m.nr_prescricao			= a.nr_prescricao
													and	b.cd_setor_atendimento	= c.cd_setor_atendimento
													and	c.cd_local_estoque		= cd_local_estoque_w
													and	a.ie_status_cirurgia	in ('CB','AD')
													and	coalesce(a.ie_baixa_estoque_cir::text, '') = '';

												qt_estoque_w := qt_estoque_w + qt_cirurgia_w;
												end;
											elsif	(ie_disp_cirurgia_w = 'C' and ie_status_w in ('CB','AD') and ((ie_tipo_local_w = 2) or (ie_baixa_disp_w = 'S'))) then
												begin
												select
													coalesce(sum(qt_total_dispensar),0)
												into STRICT	qt_cirurgia_w
												from	setor_atendimento c,
													cirurgia b,
													material x,
													prescr_material a,
													prescr_medica m
												where	a.cd_motivo_baixa		= 0
													and	a.cd_material			= x.cd_material
													and	x.cd_material_estoque	= cd_material_w
													and	m.nr_prescricao			= b.nr_prescricao
													and	m.nr_prescricao			= a.nr_prescricao
													and	b.cd_setor_atendimento	= c.cd_setor_atendimento
													and	coalesce(a.cd_local_estoque, c.cd_local_estoque) = cd_local_estoque_w
													and	a.ie_status_cirurgia	in ('CB','AD')
													and	coalesce(a.ie_baixa_estoque_cir::text, '') = '';

												qt_estoque_w := qt_estoque_w + qt_cirurgia_w;
												end;
											end if;
										end;
									elsif (cd_fornec_consignado_w IS NOT NULL AND cd_fornec_consignado_w::text <> '') then /*consignado ambos com regra*/
										begin
										select	coalesce(sum(qt_estoque),0)
										into STRICT	qt_estoque_w
										from	fornecedor_mat_consignado
										where	cd_estabelecimento		= cd_estab_w
											and	cd_local_estoque		= cd_local_estoque_w
											and	cd_fornecedor			= cd_fornec_consignado_w
											and	cd_material				= cd_material_estoque_w
											and	dt_mesano_referencia	= trunc(clock_timestamp(),'mm');
										end;
									end if;

									if (coalesce(cd_local_estoque_w, 0) > 0) and (ie_baixa_paciente_w = 'S') and (ie_status_w not in ('CB','AD')) and (ie_baixa_sem_estoque_w <> 'S') then
										begin
										if (ie_tipo_saldo_w = 'N')then
											begin
											if (qt_estoque_w < qt_material_w) then
												begin
												qt_saldo_total_w := Obter_Saldo_Total_Consig(cd_estab_w,cd_material_estoque_w,cd_local_estoque_w);

												if (qt_saldo_total_w >= qt_material_w)then
													ie_possui_saldo_w 	:= 'S';
													qt_diferenca_w 		:= qt_material_w - qt_estoque_w;
													qt_material_w 		:= qt_estoque_w;
													qt_baixado_proprio_w := qt_baixado_proprio_w + qt_material_w;
												else
													ie_possui_saldo_w	:= 'N';
													qt_diferenca_w 		:= 0;
													ie_continua 		:= 'N';
													if (coalesce(length(ds_erro_p),0) < 255) then
														ds_erro_p := substr(ds_erro_p || chr(13) ||
														wheb_mensagem_pck.get_texto(278093, 	'CD_MATERIAL_P=' || to_char(cd_material_w) ||
																			';QT_ESTOQUE_P=' || to_char(qt_estoque_w) ||
																			';QT_MATERIAL_P=' || to_char(qt_material_w) ||
																			';CD_LOCAL_ESTOQUE_P=' || substr(OBTER_DESC_LOCAL_ESTOQUE(cd_local_estoque_w),1,100)),1,255);
													end if;
												end if;
												end;
											else
												begin
												qt_baixado_proprio_w := qt_material_w;
												qt_diferenca_w := 0;
												ie_continua := 'N';
												end;
											end if;
											end;
										elsif (ie_tipo_saldo_w = 'C')then
											begin
											if (qt_diferenca_w > 0)then
												qt_material_w := qt_diferenca_w;
											end if;

											if (qt_estoque_w < qt_material_w) then
												begin
												qt_saldo_total_w := Obter_Saldo_Total_Consig(cd_estab_w,cd_material_estoque_w,cd_local_estoque_w);

												if (qt_saldo_total_w >= qt_material_w)then
													ie_possui_saldo_w	:= 'S';
													qt_diferenca_w 		:= qt_material_w - qt_estoque_w;
													qt_material_w 		:= qt_estoque_w;
													qt_baixado_consignado_w := qt_baixado_consignado_w + qt_material_w;
												else
													ie_possui_saldo_w	:= 'N';
													qt_diferenca_w 		:= 0;
													ie_continua 		:= 'N';

													if (coalesce(length(ds_erro_p),0) < 255) then
														ds_erro_p := substr(ds_erro_p || chr(13) || wheb_mensagem_pck.get_texto(278099, 'CD_MATERIAL_P=' || cd_material_w ||
																								';CD_FORNEC_CONSIGNADO_P=' ||  cd_fornec_consignado_w),1,255);
													end if;
												end if;
												end;
											else
												begin
												if (qt_diferenca_w > 0)then
													qt_material_w := qt_diferenca_w;
												end if;

												qt_baixado_consignado_w := qt_material_w;
												qt_diferenca_w := 0;
												ie_continua := 'N';
												end;
											end if;
											end;
										else
											begin
											ie_continua := 'N';
											ie_possui_saldo_w	:= 'N';

											if (coalesce(length(ds_erro_p),0) < 255) then
												ds_erro_p := substr(ds_erro_p || chr(13) ||
												wheb_mensagem_pck.get_texto(278093, 	'CD_MATERIAL_P=' || to_char(cd_material_w) ||
																	';QT_ESTOQUE_P=' || to_char(qt_estoque_w) ||
																	';QT_MATERIAL_P=' || to_char(qt_material_w - (qt_baixado_proprio_w + qt_baixado_consignado_w)) ||
																	';CD_LOCAL_ESTOQUE_P=' || substr(OBTER_DESC_LOCAL_ESTOQUE(cd_local_estoque_w),1,100)),1,255);
												ds_erro_w := ds_erro_p;
											end if;

											end;
										end if;
										end;
									elsif (coalesce(cd_local_estoque_w, 0) > 0) and (ie_baixa_paciente_w = 'S') and (ie_status_w in ('CB','AD')) and (ie_baixa_sem_estoque_w <> 'S') then
										begin
										if (ie_tipo_saldo_w = 'N')then
											begin
											if (qt_estoque_w < qt_material_w) then
												begin
												qt_saldo_total_w := Obter_Saldo_Total_Consig(cd_estab_w,cd_material_estoque_w,cd_local_estoque_w);

												if (qt_saldo_total_w >= qt_material_w)then
													ie_possui_saldo_w 	:= 'S';
													qt_diferenca_w 		:= qt_material_w - qt_estoque_w;
													qt_material_w 		:= qt_estoque_w;
													qt_baixado_proprio_w 	:= qt_baixado_proprio_w + qt_material_w;
												else
													ie_possui_saldo_w	:= 'N';
													qt_diferenca_w 		:= 0;
													ie_continua 		:= 'N';
													if (coalesce(length(ds_erro_p),0) < 255) then
														ds_erro_p := substr(ds_erro_p || chr(13) ||
														wheb_mensagem_pck.get_texto(278093, 	'CD_MATERIAL_P=' || to_char(cd_material_w) ||
																			';QT_ESTOQUE_P=' || to_char(qt_estoque_w) ||
																			';QT_MATERIAL_P=' || to_char(qt_material_w) ||
																			';CD_LOCAL_ESTOQUE_P=' || substr(OBTER_DESC_LOCAL_ESTOQUE(cd_local_estoque_w),1,100)),1,255);
													end if;
												end if;
												end;
											else
												begin
												qt_baixado_proprio_w := qt_material_w;
												qt_diferenca_w := 0;
												ie_continua := 'N';
												end;
											end if;
											end;
										elsif (ie_tipo_saldo_w = 'C')then
											begin
											if (qt_diferenca_w > 0)then
												qt_material_w := qt_diferenca_w;
											end if;

											if (qt_estoque_w < qt_material_w) then
												begin
												qt_saldo_total_w := Obter_Saldo_Total_Consig(cd_estab_w,cd_material_estoque_w,cd_local_estoque_w);

												if (qt_saldo_total_w >= qt_material_w)then
													ie_possui_saldo_w	:= 'S';
													qt_diferenca_w 		:= qt_material_w - qt_estoque_w;
													qt_material_w 		:= qt_estoque_w;
													qt_baixado_consignado_w := qt_baixado_consignado_w + qt_material_w;
												else
													ie_possui_saldo_w	:= 'N';
													qt_diferenca_w 		:= 0;
													ie_continua 		:= 'N';

													if (coalesce(length(ds_erro_p),0) < 255) then
														ds_erro_p := substr(ds_erro_p || chr(13) || wheb_mensagem_pck.get_texto(278099, 'CD_MATERIAL_P=' || cd_material_w ||
																								';CD_FORNEC_CONSIGNADO_P=' ||  cd_fornec_consignado_w),1,255);
													end if;
												end if;
												end;
											else
												begin
												qt_baixado_consignado_w := qt_material_w;
												qt_diferenca_w := 0;
												ie_continua := 'N';
												end;
											end if;
											end;
										else
											begin
											ie_continua := 'N';
											ie_possui_saldo_w	:= 'N';

											if (coalesce(length(ds_erro_p),0) < 255) then
												ds_erro_p := substr(ds_erro_p || chr(13) ||
												wheb_mensagem_pck.get_texto(278093, 	'CD_MATERIAL_P=' || to_char(cd_material_w) ||
																	';QT_ESTOQUE_P=' || to_char(qt_estoque_w) ||
																	';QT_MATERIAL_P=' || to_char(qt_material_w - (qt_baixado_proprio_w + qt_baixado_consignado_w)) ||
																	';CD_LOCAL_ESTOQUE_P=' || substr(OBTER_DESC_LOCAL_ESTOQUE(cd_local_estoque_w),1,100)),1,255);
												ds_erro_w := ds_erro_p;
											end if;
											end;
										end if;
										end;
									end if;
								else
									begin
									qt_diferenca_w := 0;
									ie_continua := 'N';

									if (ie_consignado_w = '2') and (coalesce(cd_fornec_consignado_w::text, '') = '') then
										SELECT * FROM obter_fornec_consig_ambos(cd_estab_w, cd_material_estoque_w, nr_seq_lote_fornec_w, cd_local_estoque_w, ie_tipo_saldo_w, cd_fornec_consignado_w) INTO STRICT ie_tipo_saldo_w, cd_fornec_consignado_w;
									end if;

									if	((coalesce(cd_local_estoque_w, 0) > 0) and (ie_baixa_paciente_w = 'S') and (ie_status_w not in ('CB','AD'))) and (ie_baixa_sem_estoque_w <> 'S') then
										begin

										if (ie_consignado_w = '0') or (coalesce(ie_tipo_saldo_w, 'C') <> 'C') then
											qt_estoque_w	:= obter_saldo_disp_estoque(cd_estab_w,cd_material_estoque_w,cd_local_estoque_w,trunc(clock_timestamp(),'mm'));

											if (cd_unidade_medida_estoque_w <> cd_unidade_medida_consumo_w) then
												qt_estoque_w := obter_quantidade_convertida(cd_material_w, qt_estoque_w, cd_unidade_medida_estoque_w, 'UMC');
											end if;

											if	(ie_disp_cirurgia_w = 'S' and ie_status_w in ('CB','AD') and ((ie_tipo_local_w = 2) or (ie_baixa_disp_w = 'S'))) then
												begin
												select
													coalesce(sum(qt_total_dispensar),0)
												into STRICT	qt_cirurgia_w
												from	setor_atendimento c,
													cirurgia b,
													material x,
													prescr_material a,
													prescr_medica m
												where	a.cd_motivo_baixa	= 0
													and	a.cd_material			= x.cd_material
													and	x.cd_material_estoque	= cd_material_w
													and	m.nr_prescricao			= b.nr_prescricao
													and	m.nr_prescricao			= a.nr_prescricao
													and	b.cd_setor_atendimento	= c.cd_setor_atendimento
													and	c.cd_local_estoque		= cd_local_estoque_w
													and	a.ie_status_cirurgia	in ('CB','AD')
													and	coalesce(a.ie_baixa_estoque_cir::text, '') = '';

												qt_estoque_w := qt_estoque_w + qt_cirurgia_w;
												end;
											elsif	(ie_disp_cirurgia_w = 'C' and ie_status_w in ('CB','AD') and ((ie_tipo_local_w = 2) or (ie_baixa_disp_w = 'S'))) then
												begin
												select
													coalesce(sum(qt_total_dispensar),0)
												into STRICT	qt_cirurgia_w
												from	setor_atendimento c,
													cirurgia b,
													material x,
													prescr_material a,
													prescr_medica m
												where	a.cd_motivo_baixa		= 0
													and	a.cd_material			= x.cd_material
													and	x.cd_material_estoque	= cd_material_w
													and	m.nr_prescricao			= b.nr_prescricao
													and	m.nr_prescricao			= a.nr_prescricao
													and	b.cd_setor_atendimento	= c.cd_setor_atendimento
													and	coalesce(a.cd_local_estoque, c.cd_local_estoque) = cd_local_estoque_w
													and	a.ie_status_cirurgia	in ('CB','AD')
													and	coalesce(a.ie_baixa_estoque_cir::text, '') = '';

												qt_estoque_w := qt_estoque_w + qt_cirurgia_w;
												end;
											end if;

											if (qt_estoque_w < qt_material_w) then
												ie_possui_saldo_w	:= 'N';
												if (coalesce(length(ds_erro_p),0) < 255) then
													ds_erro_p := substr(ds_erro_p || chr(13) ||
													wheb_mensagem_pck.get_texto(278093, 	'CD_MATERIAL_P=' || to_char(cd_material_w) ||
																		';QT_ESTOQUE_P=' || to_char(qt_estoque_w) ||
																		';QT_MATERIAL_P=' || to_char(qt_material_w) ||
																		';CD_LOCAL_ESTOQUE_P=' || substr(OBTER_DESC_LOCAL_ESTOQUE(cd_local_estoque_w),1,100)),1,255);
												end if;
											end if;
										elsif (ie_consignado_w = '1') or
											(ie_consignado_w = '2' AND cd_fornec_consignado_w IS NOT NULL AND cd_fornec_consignado_w::text <> '') then

											select	coalesce(sum(qt_estoque),0)
											into STRICT	qt_estoque_w
											from	fornecedor_mat_consignado
											where	cd_estabelecimento	= cd_estab_w
											and	cd_local_estoque	= cd_local_estoque_w
											and	cd_fornecedor		= cd_fornec_consignado_w
											and	cd_material		= cd_material_estoque_w
											and	dt_mesano_referencia	= trunc(clock_timestamp(),'mm');
											
											if (cd_unidade_medida_estoque_w <> cd_unidade_medida_consumo_w) then
												qt_estoque_w := obter_quantidade_convertida(cd_material_w, qt_estoque_w, cd_unidade_medida_estoque_w, 'UMC');
											end if;

											if (qt_estoque_w < qt_material_w) then
												ie_possui_saldo_w	:= 'N';
												if (coalesce(length(ds_erro_p),0) < 255) then
													ds_erro_p := substr(ds_erro_p || chr(13) || wheb_mensagem_pck.get_texto(278099, 'CD_MATERIAL_P=' || cd_material_w ||
																							';CD_FORNEC_CONSIGNADO_P=' ||  cd_fornec_consignado_w),1,255);

												end if;
											end if;



										end if;
										end;
									end if;
									end;
								end if;
								end;
							end if;

							ds_local_estoque_w	:= substr(OBTER_DESC_LOCAL_ESTOQUE(cd_local_estoque_w),1,100);
							ie_local_esto_setor_w	:= 'S';
							if (ie_local_valido_w	= 'N') and (coalesce(cd_local_estoque_w, 0) > 0) and (ie_atualiza_estoque_w 	= 'S') then
								ie_local_esto_setor_w	:= 'N';
								if (coalesce(length(ds_erro_p),0) < 255) then
									ds_erro_p := substr(ds_erro_p || chr(13) || wheb_mensagem_pck.get_texto(200311, 'DS_LOCAL_ESTOQUE_W=' || ds_local_estoque_w ||
																			';CD_MATERIAL_W=' || cd_material_w),1,255);
								end if;
							end if;

							if (coalesce(ie_local_esto_setor_w,'S') = 'S') and (coalesce(ie_possui_saldo_w,'S') = 'S') and
								(((ie_local_valido_w = 'S') and (coalesce(cd_local_estoque_w, 0) > 0) or (ie_local_valido_w = 'N') and (coalesce(cd_local_estoque_w, 0) = 0))) then

								select nextval('material_atend_paciente_seq')
								into STRICT nr_sequencia_w
								;

								/* Dacastagne em 30/01/2007 OS 49215*/

								if (coalesce(cd_convenio_ww::text, '') = '') then
									SELECT * FROM obter_convenio_execucao(nr_atendimento_w, clock_timestamp(), cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;
								else
									cd_convenio_w	:= cd_convenio_ww;
									cd_categoria_w	:= cd_categoria_ww;
								end if;

								/* Dalcastagne 19/02/2007 OS 50875*/

								if (ie_atualiza_estoque_w = 'N') and (coalesce(cd_local_estoque_w, 0) > 0) then
									cd_local_estoque_w := null;
									ie_tipo_entrada_w  := ie_tipo_entrada_w || ',' ||'9';
								end if;

								ie_regra_uso_w := Obter_Param_Usuario(900, 359, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_regra_uso_w);

								if (ie_regra_uso_w = 'S') then

									select 	CASE WHEN ie_inicio_cirurgia_w='S' THEN  dt_inicio_w  ELSE clock_timestamp() END
									into STRICT	dt_item_w
									;

									SELECT * FROM Obter_regra_uso_mat(	nr_atendimento_w, cd_material_w, qt_material_w, cd_setor_atend_baixa_w, ie_acao_excesso_w, qt_excedida_w, nr_seq_regra_uso_w, ds_erro_uso_w, cd_categoria_w, null, cd_fornec_consignado_w, null, dt_item_w, null) INTO STRICT ie_acao_excesso_w, qt_excedida_w, nr_seq_regra_uso_w, ds_erro_uso_w;

									if (ie_acao_excesso_w = 'E') then
										if (qt_excedida_w   > 0) then
											ie_tipo_entrada_w  := ie_tipo_entrada_w || ',' ||'10';
											if 	((qt_material_w - qt_excedida_w) >= 0) then

												if (coalesce(cd_categoria_w::text, '') = '') and (ie_consiste_categoria_w = 'S') then
													CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(190663);
												end if;

												select	nextval('material_atend_paciente_seq')
												into STRICT	nr_seq_excedido_w
												;

												begin
												insert into material_atend_paciente(
													nr_sequencia,
													nr_atendimento,
													dt_entrada_unidade,
													cd_material,
													dt_atendimento,
													cd_unidade_medida,
													qt_material,
													dt_atualizacao,
													nm_usuario,
													cd_acao,
													cd_setor_atendimento,
													nr_seq_atepacu,
													cd_material_prescricao,
													cd_material_exec,
													ie_via_aplicacao,
													dt_prescricao,
													nr_prescricao,
													nr_sequencia_prescricao,
													cd_cgc_fornecedor,
													qt_executada,
													nr_cirurgia,
													cd_local_estoque,
													vl_unitario,
													qt_ajuste_conta,
													ie_valor_informado,
													ie_guia_informada,
													ie_auditoria,
													nm_usuario_original,
													cd_situacao_glosa,
													cd_convenio,
													cd_categoria,
													nr_doc_convenio,
													ie_tipo_guia,
													nr_seq_lote_fornec,
													cd_senha,
													dt_conta,
													nr_seq_kit_estoque,
													ds_observacao)
												values (
													nr_seq_excedido_w,
													nr_atendimento_w,
													dt_entrada_unidade_w,
													cd_material_w,
													CASE WHEN ie_inicio_cirurgia_w='S' THEN  dt_inicio_w  ELSE clock_timestamp() END ,
													cd_unidade_medida_w,
													qt_excedida_w,
													clock_timestamp(),
													nm_usuario_p,
													'1',
													cd_setor_atend_baixa_w,
													nr_seq_atepacu_p,
													cd_material_w,
													cd_material_w,
													ie_via_aplicacao_w,
													dt_prescricao_w,
													nr_prescricao_w,
													nr_seq_prescr_w,
													cd_fornec_consignado_w,
													qt_excedida_w,
													nr_cirurgia_p,
													cd_local_estoque_w,
													0,
													0,
													'N',
													'N',
													'N',
													nm_usuario_p,
													0,
													cd_convenio_w,
													cd_categoria_w,
													nr_doc_convenio_w,
													ie_tipo_guia_w,
													nr_seq_lote_fornec_w,
													cd_senha_w,
													CASE WHEN coalesce(dt_termino_par_w::text, '') = '' THEN CASE WHEN ie_data_atual_w='S' THEN dt_inicio_w  ELSE CASE WHEN ie_inicio_cirurgia_w='S' THEN  dt_inicio_w  ELSE clock_timestamp() END  END   ELSE dt_termino_par_w END ,
													nr_seq_kit_estoque_w,
													ds_observacao_w);
												exception
												when others then
													ds_erro_w 	:= substr(SQLERRM(SQLSTATE),1,255);
													ds_erro_ww 	:= ds_erro_w;
												end;

												CALL atualiza_preco_material(nr_seq_excedido_w, nm_usuario_p);

												select 	max(nr_interno_conta)
												into STRICT	nr_conta_w
												from 	material_atend_paciente
												where 	nr_sequencia = nr_seq_excedido_w;

												select	max(cd_motivo_exc_conta)
												into STRICT	cd_motivo_exc_conta_w
												from	parametro_faturamento
												where	cd_estabelecimento = cd_estabelecimento_w;

												CALL excluir_matproc_conta(
													nr_seq_excedido_w,
													nr_conta_w,
													coalesce(cd_motivo_exc_conta_w, 12),
													wheb_mensagem_pck.get_texto(278102, null), /*  Excluido pela regra de uso da funcao Cadastro de Convenios*/
													'M',
													nm_usuario_p);

											end if;

											qt_material_w := qt_material_w - qt_excedida_w;


										end if;

									elsif (ie_acao_excesso_w = 'P') then

										if (qt_excedida_w   >= qt_material_w) then
											ie_tipo_entrada_w  := ie_tipo_entrada_w || ',' ||'11';
											SELECT * FROM Obter_Convenio_Particular_PF(
												cd_estabelecimento_w, cd_convenio_w, null, dt_item_w, cd_convenio_pf_w, cd_categoria_pf_w) INTO STRICT cd_convenio_pf_w, cd_categoria_pf_w;

											cd_convenio_w	:= cd_convenio_pf_w;
											cd_categoria_w	:= cd_categoria_pf_w;

										else
											ie_tipo_entrada_w  := ie_tipo_entrada_w || ',' ||'12';
											qt_material_w	:= qt_material_w - qt_excedida_w;

											SELECT * FROM Obter_Convenio_Particular_PF(
												cd_estabelecimento_w, cd_convenio_w, null, dt_item_w, cd_convenio_pf_w, cd_categoria_pf_w) INTO STRICT cd_convenio_pf_w, cd_categoria_pf_w;

											select	nextval('material_atend_paciente_seq')
											into STRICT	nr_seq_excedido_w
											;

											begin

											if (coalesce(cd_categoria_w::text, '') = '') and (ie_consiste_categoria_w = 'S') then
												CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(190663);
											end if;

											insert into material_atend_paciente(
													nr_sequencia,
													nr_atendimento,
													dt_entrada_unidade,
													cd_material,
													dt_atendimento,
													cd_unidade_medida,
													qt_material,
													dt_atualizacao,
													nm_usuario,
													cd_acao,
													cd_setor_atendimento,
													nr_seq_atepacu,
													cd_material_prescricao,
													cd_material_exec,
													ie_via_aplicacao,
													dt_prescricao,
													nr_prescricao,
													nr_sequencia_prescricao,
													cd_cgc_fornecedor,
													qt_executada,
													nr_cirurgia,
													cd_local_estoque,
													vl_unitario,
													qt_ajuste_conta,
													ie_valor_informado,
													ie_guia_informada,
													ie_auditoria,
													nm_usuario_original,
													cd_situacao_glosa,
													cd_convenio,
													cd_categoria,
													nr_doc_convenio,
													ie_tipo_guia,
													nr_seq_lote_fornec,
													cd_senha,
													dt_conta,
													nr_seq_kit_estoque,
													ds_observacao)
												values (
													nr_seq_excedido_w,
													nr_atendimento_w,
													dt_entrada_unidade_w,
													cd_material_w,
													CASE WHEN ie_inicio_cirurgia_w='S' THEN  dt_inicio_w  ELSE clock_timestamp() END ,
													cd_unidade_medida_w,
													qt_excedida_w,
													clock_timestamp(),
													nm_usuario_p,
													'1',
													cd_setor_atend_baixa_w,
													nr_seq_atepacu_p,
													cd_material_w,
													cd_material_w,
													ie_via_aplicacao_w,
													dt_prescricao_w,
													nr_prescricao_w,
													nr_seq_prescr_w,
													cd_fornec_consignado_w,
													qt_excedida_w,
													nr_cirurgia_p,
													cd_local_estoque_w,
													0,
													0,
													'N',
													'N',
													'N',
													nm_usuario_p,
													0,
													cd_convenio_pf_w,
													cd_categoria_pf_w,
													nr_doc_convenio_w,
													ie_tipo_guia_w,
													nr_seq_lote_fornec_w,
													cd_senha_w,
													CASE WHEN coalesce(dt_termino_par_w::text, '') = '' THEN CASE WHEN ie_data_atual_w='S' THEN dt_inicio_w  ELSE CASE WHEN ie_inicio_cirurgia_w='S' THEN  dt_inicio_w  ELSE clock_timestamp() END  END   ELSE dt_termino_par_w END ,
													nr_seq_kit_estoque_w,
													ds_observacao_w);
											exception
											when others then
												ds_erro_w 	:= substr(SQLERRM(SQLSTATE),1,255);
												ds_erro_ww 	:= ds_erro_w;
											end;

											CALL atualiza_preco_material(nr_seq_excedido_w, nm_usuario_p);
											ds_erro_w := null;
										end if;
									end if;

									if (qt_material_w > 0) then
										begin
										ie_tipo_entrada_w  := ie_tipo_entrada_w || ',' ||'13';
										if (coalesce(cd_categoria_w::text, '') = '') and (ie_consiste_categoria_w = 'S') then
											CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(190663);
										end if;

										insert into material_atend_paciente(
													nr_sequencia,
													nr_atendimento,
													dt_entrada_unidade,
													cd_material,
													dt_atendimento,
													cd_unidade_medida,
													qt_material,
													dt_atualizacao,
													nm_usuario,
													cd_acao,
													cd_setor_atendimento,
													nr_seq_atepacu,
													cd_material_prescricao,
													cd_material_exec,
													ie_via_aplicacao,
													dt_prescricao,
													nr_prescricao,
													nr_sequencia_prescricao,
													cd_cgc_fornecedor,
													qt_executada,
													nr_cirurgia,
													cd_local_estoque,
													vl_unitario,
													qt_ajuste_conta,
													ie_valor_informado,
													ie_guia_informada,
													ie_auditoria,
													nm_usuario_original,
													cd_situacao_glosa,
													cd_convenio,
													cd_categoria,
													nr_doc_convenio,
													ie_tipo_guia,
													nr_seq_lote_fornec,
													cd_senha,
													dt_conta,
													nr_seq_kit_estoque,
													ds_observacao)
												values (
													nr_sequencia_w,
													nr_atendimento_w,
													dt_entrada_unidade_w,
													cd_material_w,
													CASE WHEN ie_inicio_cirurgia_w='S' THEN  dt_inicio_w  ELSE clock_timestamp() END ,
													cd_unidade_medida_w,
													qt_material_w,
													clock_timestamp(),
													nm_usuario_p,
													'1',
													cd_setor_atend_baixa_w,
													nr_seq_atepacu_p,
													cd_material_w,
													cd_material_w,
													ie_via_aplicacao_w,
													dt_prescricao_w,
													nr_prescricao_w,
													nr_seq_prescr_w,
													cd_fornec_consignado_w,
													qt_material_w,
													nr_cirurgia_p,
													cd_local_estoque_w,
													0,
													0,
													'N',
													'N',
													'N',
													nm_usuario_p,
													0,
													cd_convenio_w,
													cd_categoria_w,
													nr_doc_convenio_w,
													ie_tipo_guia_w,
													nr_seq_lote_fornec_w,
													cd_senha_w,
													CASE WHEN coalesce(dt_termino_par_w::text, '') = '' THEN CASE WHEN ie_data_atual_w='S' THEN dt_inicio_w  ELSE CASE WHEN ie_inicio_cirurgia_w='S' THEN  dt_inicio_w  ELSE clock_timestamp() END  END   ELSE dt_termino_par_w END ,
													nr_seq_kit_estoque_w,
													ds_observacao_w);
										exception
										when others then
											ds_erro_w 	:= substr(SQLERRM(SQLSTATE),1,255);
											ds_erro_ww 	:= ds_erro_w;
										end;

									end if;
								else
									begin
									ie_tipo_entrada_w  := ie_tipo_entrada_w || ',' ||'14';
									if (coalesce(cd_categoria_w::text, '') = '') and (ie_consiste_categoria_w = 'S') then
										CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(190663);
									end if;

									select coalesce(obter_se_mat_baixa_estoque_cir(cd_material_w, cd_local_estoque_ww, nr_cirurgia_p,cd_kit_material_w,nr_seq_kit_estoque_w,nr_seq_interno_w),'XPTO')
									into STRICT cd_motivo_baixa_ww
									;

									if (cd_motivo_baixa_ww <> 'XPTO') then
										ie_tipo_entrada_w  := ie_tipo_entrada_w || ',' ||'15';

										cd_motivo_baixa_w := cd_motivo_baixa_ww;
									else
										ie_tipo_entrada_w  := ie_tipo_entrada_w || ',' ||'16';
										cd_motivo_baixa_w := cd_motivo_baixa_original_w;
									end if;

									VarIeContaPaciente_w	:=	coalesce(Obter_se_motivo_baixa_conta(cd_motivo_baixa_w),'S');

									if (VarIeContaPaciente_w = 'S') then
										insert into material_atend_paciente(
													nr_sequencia,
													nr_atendimento,
													dt_entrada_unidade,
													cd_material,
													dt_atendimento,
													cd_unidade_medida,
													qt_material,
													dt_atualizacao,
													nm_usuario,
													cd_acao,
													cd_setor_atendimento,
													nr_seq_atepacu,
													cd_material_prescricao,
													cd_material_exec,
													ie_via_aplicacao,
													dt_prescricao,
													nr_prescricao,
													nr_sequencia_prescricao,
													cd_cgc_fornecedor,
													qt_executada,
													nr_cirurgia,
													cd_local_estoque,
													vl_unitario,
													qt_ajuste_conta,
													ie_valor_informado,
													ie_guia_informada,
													ie_auditoria,
													nm_usuario_original,
													cd_situacao_glosa,
													cd_convenio,
													cd_categoria,
													nr_doc_convenio,
													ie_tipo_guia,
													nr_seq_lote_fornec,
													cd_senha,
													dt_conta,
													nr_seq_kit_estoque,
													ds_observacao)
												values (
													nr_sequencia_w,
													nr_atendimento_w,
													dt_entrada_unidade_w,
													cd_material_w,
													CASE WHEN ie_inicio_cirurgia_w='S' THEN  dt_inicio_w  ELSE clock_timestamp() END ,
													cd_unidade_medida_w,
													qt_material_w,
													clock_timestamp(),
													nm_usuario_p,
													'1',
													cd_setor_atend_baixa_w,
													nr_seq_atepacu_p,
													cd_material_w,
													cd_material_w,
													ie_via_aplicacao_w,
													dt_prescricao_w,
													nr_prescricao_w,
													nr_seq_prescr_w,
													cd_fornec_consignado_w,
													qt_material_w,
													nr_cirurgia_p,
													cd_local_estoque_w,
													0,
													0,
													'N',
													'N',
													'N',
													nm_usuario_p,
													0,
													cd_convenio_w,
													cd_categoria_w,
													nr_doc_convenio_w,
													ie_tipo_guia_w,
													nr_seq_lote_fornec_w,
													cd_senha_w,
													CASE WHEN coalesce(dt_termino_par_w::text, '') = '' THEN CASE WHEN ie_data_atual_w='S' THEN dt_inicio_w  ELSE CASE WHEN ie_inicio_cirurgia_w='S' THEN  dt_inicio_w  ELSE clock_timestamp() END  END   ELSE dt_termino_par_w END ,
													nr_seq_kit_estoque_w,
													ds_observacao_w);
									end if;
									exception
									when others then
										ds_erro_w 	:= substr(SQLERRM(SQLSTATE),1,255);
										ds_erro_ww 	:= ds_erro_w;

									end;
								end if;

								if (coalesce(ds_erro_w::text, '') = '') then

									CALL atualiza_preco_material(nr_sequencia_w, nm_usuario_p);

									CALL gerar_autor_regra(	nr_atendimento_w,
												nr_sequencia_w,
												null,
												null,
												null,
												null,
												'PC',
												nm_usuario_p,
												null,
												null,
												null,
												null,
												null,
												null,
												'',
												'',
												'');

									CALL gerar_faturamento_direto_mat(nr_sequencia_w, nm_usuario_p);

									if (ie_tipo_lancto_w	= '0') then

										select	CASE WHEN coalesce(dt_termino_par_w::text, '') = '' THEN CASE WHEN ie_data_atual_w='S' THEN dt_inicio_w  ELSE CASE WHEN ie_inicio_cirurgia_w='S' THEN  dt_inicio_w  ELSE clock_timestamp() END  END   ELSE dt_termino_par_w END
										into STRICT	dt_conta_w
										;

										CALL Gerar_Lanc_Automatico_Mat(nr_atendimento_w,cd_local_estoque_w,132,nm_usuario_p,nr_sequencia_w,to_char(dt_conta_w, 'dd/mm/yyyy hh24:mi:ss'),null);
									end if;

									update	prescr_material
									set	dt_baixa 		= clock_timestamp(),
										cd_motivo_baixa 	= cd_motivo_baixa_w,
										dt_atualizacao		= clock_timestamp(),
										nm_usuario		= nm_usuario_p,
										cd_local_estoque	= cd_local_estoque_w
									where	nr_prescricao		= nr_prescricao_w
									and	nr_sequencia		= nr_seq_prescr_w;

								end if;

								ds_erro_w := null;
							elsif (coalesce(ie_possui_saldo_w,'S') = 'S') and (coalesce(ie_local_esto_setor_w,'S') = 'S') then
								ie_tipo_entrada_w  := ie_tipo_entrada_w || ',' ||'17';

								update	prescr_material
								set	dt_baixa 		= clock_timestamp(),
									cd_motivo_baixa 	= cd_motivo_baixa_w,
									dt_atualizacao 		= clock_timestamp(),
									nm_usuario 		= nm_usuario_p,
									cd_local_estoque 	= cd_local_estoque_w
								where 	nr_prescricao 		= nr_prescricao_w
								and 	nr_sequencia  		= nr_seq_prescr_w;
							end if;

							if (coalesce(ie_gerar_integracao_w,'N') = 'S') then

								select 	count(*)
								into STRICT	qt_material_externo_w
								from	material_sistema_externo
								where	cd_material = cd_material_w;

								if (obter_regra_int_opme_material(cd_material_w,'03') = 'S') and (coalesce(qt_material_externo_w,0) > 0 ) then
									begin
									select	nr_seq_agenda
									into STRICT	nr_seq_agenda_w
									from 	cirurgia
									where	nr_cirurgia = nr_cirurgia_p;

									if (coalesce(nr_seq_agenda_w,0) > 0) then

										select	ie_opme_integracao
										into STRICT	ie_opme_integracao_w
										from 	agenda_paciente
										where	nr_sequencia = nr_seq_agenda_w;

										if (coalesce(ie_opme_integracao_w,'N') = 'N') then
											CALL ajusta_status_agenda_int_opme(nr_seq_agenda_w,'0', '', nm_usuario_p);
										end if;

										CALL gravar_mat_int_opme(cd_material_w,qt_material_w,cd_fornec_consignado_w,nr_seq_agenda_w,nr_seq_prescr_w,cd_motivo_baixa_w,'1',nm_usuario_p);

									end if;

									end;
								end if;
							end if;
						end if;
					end if;

					ds_historico_atend_presc_w := 	substr(wheb_mensagem_pck.get_texto(307053, null) || ': '||cd_perfil_p|| chr(13) || chr(10) || /* Perfil*/
								wheb_mensagem_pck.get_texto(307051, null) || ': '||cd_funcao_w|| chr(13) || chr(10) || /* Funcao*/
								wheb_mensagem_pck.get_texto(51738, null) || ': '||nr_prescricao_p|| chr(13) || chr(10) || /* Prescricao*/
								wheb_mensagem_pck.get_texto(307048, null) || ': '||nr_seq_prescr_w|| chr(13) || chr(10) || /* Sequencia*/
								wheb_mensagem_pck.get_texto(307040, null) || ' ' || wheb_mensagem_pck.get_texto(307047, null) || ': '||cd_local_estoque_p|| chr(13) || chr(10) || /* Parametro Local de estoque*/
								wheb_mensagem_pck.get_texto(307046, null) || ': '||cd_local_estoque_w|| chr(13) || chr(10) || /* Local estoque*/
								wheb_mensagem_pck.get_texto(307045, null) || ': '||cd_motivo_baixa_w|| chr(13) || chr(10) || /* Motivo baixa*/
								wheb_mensagem_pck.get_texto(307044, null) || ': '||qt_material_w|| chr(13) || chr(10) || /* Quant. mat.*/
								wheb_mensagem_pck.get_texto(307043, null) || ': '||cd_setor_atendimento_w|| chr(13) || chr(10) || /* Setor atendimento*/
								'ie_local_esto_setor_w: '||ie_local_esto_setor_w|| chr(13) || chr(10) ||
								'ie_possui_saldo_w: '||ie_possui_saldo_w|| chr(13) || chr(10) ||
								'ie_local_valido_w: '||ie_local_valido_w|| chr(13) || chr(10) ||
								'ie_regra_uso_w: '||ie_regra_uso_w|| chr(13) || chr(10) ||
								'ie_acao_excesso_w: '||ie_acao_excesso_w|| chr(13) || chr(10) ||
								wheb_mensagem_pck.get_texto(307040, null) || ' [73]: '||ie_local_estoque_w|| chr(13) || chr(10) || /* Parametro*/
								'cd_convenio_w: '||cd_convenio_w|| chr(13) || chr(10) ||
								'cd_categoria_w: '||cd_categoria_w|| chr(13) || chr(10) ||
								'ie_consiste_categoria_w: '||ie_consiste_categoria_w|| chr(13) || chr(10) ||
								'ie_permitir_baixa_w: '||ie_permitir_baixa_w|| chr(13) || chr(10) ||
								'nr_seq_excedido_w: '||nr_seq_excedido_w|| chr(13) || chr(10) ||
								'nr_atendimento_w: '||nr_atendimento_w|| chr(13) || chr(10) ||
								'dt_entrada_unidade_w: '||dt_entrada_unidade_w|| chr(13) || chr(10) ||
								'cd_material_w: '||cd_material_w|| chr(13) || chr(10) ||
								'cd_unidade_medida_w: '||cd_unidade_medida_w|| chr(13) || chr(10) ||
								'qt_excedida_w: '||qt_excedida_w|| chr(13) || chr(10) ||
								'nr_seq_atepacu_p: '||nr_seq_atepacu_p|| chr(13) || chr(10) ||
								'ie_via_aplicacao_w: '||ie_via_aplicacao_w|| chr(13) || chr(10) ||
								'dt_prescricao_w: '||dt_prescricao_w|| chr(13) || chr(10) ||
								'nr_prescricao_w: '||nr_prescricao_w|| chr(13) || chr(10) ||
								'cd_fornec_consignado_w: '||cd_fornec_consignado_w|| chr(13) || chr(10) ||
								'cd_convenio_pf_w: '||cd_convenio_pf_w|| chr(13) || chr(10) ||
								'cd_categoria_pf_w: '||cd_categoria_pf_w|| chr(13) || chr(10) ||
								'nr_doc_convenio_w: '||nr_doc_convenio_w|| chr(13) || chr(10) ||
								'ie_tipo_guia_w: '||ie_tipo_guia_w|| chr(13) || chr(10) ||
								'nr_seq_lote_fornec_w: '||nr_seq_lote_fornec_w|| chr(13) || chr(10) ||
								'nr_seq_kit_estoque_w: '||nr_seq_kit_estoque_w|| chr(13) || chr(10) ||
								'ie_entra_conta_w: '||ie_entra_conta_w|| chr(13) || chr(10) ||
								wheb_mensagem_pck.get_texto(307039, null) || ': '||ie_tipo_entrada_w,1,3000);

					CALL gerar_cirurgia_hist(nr_cirurgia_p,'AQ',wheb_usuario_pck.get_nm_usuario,ds_historico_atend_presc_w);

					ie_tipo_entrada_w := null;

					commit;

					cd_fornec_consignado_w := null;

					if (((qt_diferenca_w > 0) and (qt_material_baixar = (qt_baixado_consignado_w + qt_baixado_proprio_w))) or ((qt_diferenca_w = 0) or (ie_continua = 'N')) and (ie_consignado_w = '2' AND nr_seq_regra_w > 0)) then
					begin
						qt_diferenca_w := 0;
						ie_continua := 'N';
					end;
					elsif ((ie_consignado_w = '2') and (nr_seq_regra_w > 0) and (qt_estoque_w > 0))then
					begin
						ie_continua := 'S';
						qt_material_w := qt_diferenca_w;
					end;
					else
						ie_continua := 'N';
						qt_diferenca_w := 0;
					end if;
				end;
				end loop;
			end loop;
			close C02;

			if (ie_permitir_baixa_w = 'A') and (ie_conta_fechada_w = 'S') and (coalesce(length(ds_erro_p),0) < 255) then
				ds_erro_p	:= wheb_mensagem_pck.get_texto(278109);
			end if;

			end;
		elsif	(ie_permitir_baixa_w = 'B' AND ie_conta_fechada_w = 'S') and (coalesce(length(ds_erro_p),0) < 255) then
			ds_erro_p	:= wheb_mensagem_pck.get_texto(190662);
		end if;

	end loop;
	close c01;

	if (coalesce(ds_erro_p::text, '') = '') and (ds_erro_ww IS NOT NULL AND ds_erro_ww::text <> '') then
		ds_erro_p	:= ds_erro_ww;
	end if;

	commit;

	CALL gravar_processo_longo('','','');

	exception
	when others then
		CALL gravar_processo_longo('','','');
		CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(184695, 'ERRO='||sqlerrm);
	end;
else
   begin
   CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(452389);
   end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixa_prescr_mat_cirurgia ( nr_cirurgia_p bigint, nr_prescricao_p bigint, cd_local_estoque_p bigint, nr_seq_atepacu_p bigint, nm_usuario_p text, cd_perfil_p bigint, cd_setor_atendimento_p bigint, cd_funcao_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

