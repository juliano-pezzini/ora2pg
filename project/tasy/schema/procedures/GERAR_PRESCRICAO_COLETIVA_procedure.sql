-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prescricao_coletiva ( nr_atendimento_p bigint, cd_protocolo_p bigint, nr_sequencia_p bigint, nr_seq_item_p bigint, dt_primeiro_horario_p text, dt_prescricao_p timestamp, nr_horas_validade_p bigint, cd_estabelecimento_p bigint, nr_prescricao_p INOUT bigint, nm_usuario_p text, ie_gerar_cpoe_p text default 'N') AS $body$
DECLARE

			 
qt_hora_w				bigint;
VarConsisteDataFutura_w			varchar(1);
cd_convenio_w				integer;
nr_prescricao_w				bigint;
ie_origem_inf_w				varchar(1);
ds_erro_w				varchar(255);
cd_pessoa_fisica_w			varchar(10);
qt_altura_cm_w				real;
qt_peso_w				real;
nr_seq_exame_w			bigint;
ie_adep_w				varchar(1);
var_pac_usu_w				varchar(2);
ie_lado_w				varchar(10);
ie_urgencia_w				varchar(10);
ie_cig_w				varchar(10);
cd_paciente_w				varchar(50);
ds_dado_clinico_w			varchar(4000);
ds_resumo_clinico_w			varchar(4000);
ds_exame_fis_achado_cirur_w		varchar(4000);
hr_prim_horario_w			varchar(5);
cd_setor_usuario_w			integer;
nr_horas_validade_w			bigint;
ie_tipo_convenio_w			integer;
cd_setor_atendimento_w			bigint;
cd_setor_atend_w			bigint;
nr_seq_prot_glic_w			bigint;
dt_inicio_prescr_w			timestamp;
dt_prim_horario_proced_w		timestamp;
ie_tipo_atendimento_w			integer;
cd_setor_prescr_w			integer := null;
qt_registro_w				bigint;
nr_seq_proc_interno_w			bigint;
cd_estab_w				bigint;
qt_fluxo_oxigenio_w			double precision;
qt_min_intervalo_w			double precision;
nr_seq_protocolo_w			bigint;
cd_protocolo_w				bigint;
cd_estabelecimento_w			bigint;
cd_mod_vent_w				varchar(15);
nr_sequencia_item_w			varchar(2000);
VarIdentPrescrADEP_w			varchar(15);
cd_medico_w				varchar(50);
ie_respiracao_w				varchar(50);
cd_categoria_w				varchar(50);
ie_gerar_setor_w			varchar(15);
ie_disp_resp_esp_w			varchar(15);
erro_w					varchar(2000);
nr_seq_proc_w		integer;
nr_agrupamento_proc_w	double precision;
nr_seq_proc_novo_w	integer;
nr_seq_proc_prot_w	integer;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
qt_procedimento_w		double precision;
ds_observacao_w		varchar(2000);
cd_intervalo_w		varchar(7);
cd_setor_exclusivo_w	integer;
cd_material_exame_w	varchar(20);
ie_se_necessario_w	varchar(1);
ie_acm_proced_w		varchar(1);
hr_prim_horario_proced_w	varchar(5);
ds_material_especial_w	varchar(45);
ie_agora_w		varchar(1);
cd_proced_aux_w		bigint;
ie_origem_aux_w		bigint;
ds_horarios_proced_w    	varchar(2000);
ds_horarios_proced2_w    	varchar(2000);
nr_ocorrencia_proced_w	double precision;
ie_objetivo_onco_w		varchar(15);
ie_executar_leito_w		varchar(1);
nr_seq_contraste_w		bigint;
dt_primeiro_horario_w		timestamp;
dt_prescricao_w			timestamp;
ie_mesmo_zerado_w	varchar(1);
nr_seq_proc_interno_aux_w	bigint;
cd_plano_convenio_w		varchar(10);

C01 CURSOR FOR 
	SELECT nr_seq_material 
	from protocolo_medic_material 
	where cd_protocolo = cd_protocolo_w 
	and nr_sequencia = nr_seq_protocolo_w 
	and coalesce(ie_medic_rotina,'N') = 'S';

C03 CURSOR FOR 
SELECT	a.nr_seq_proc + nr_seq_proc_w, 
	a.nr_seq_proc, 
	a.cd_procedimento, 
	CASE WHEN coalesce(a.ie_multiplicar_quant,'N')='S' THEN (1 * a.qt_procedimento)  ELSE a.qt_procedimento END , 
	a.ds_observacao, 
	a.ie_origem_proced, 
	a.cd_intervalo, 
	a.cd_setor_atendimento, 
	a.cd_material_exame, 
	a.nr_seq_exame, 
	coalesce(a.ie_se_necessario,'N'), 
	coalesce(a.ie_acm,'N'), 
	a.hr_prim_horario, 
	a.ds_material_especial, 
	a.ie_urgencia, 
	a.nr_seq_proc_interno, 
	a.ie_lado, 
	a.ie_respiracao, 
	a.cd_mod_vent, 
	a.ie_disp_resp_esp, 
	a.qt_fluxo_oxigenio, 
	coalesce(qt_min_intervalo,0), 
	a.nr_seq_prot_glic, 
	a.ds_dado_clinico, 
	ie_objetivo_onco, 
	coalesce(ie_executar_leito, 'N'), 
	nr_seq_contraste, 
	ds_exame_fis_achado_cirur, 
	a.ds_resumo_clinico 
FROM protocolo_medic_proc a
LEFT OUTER JOIN exame_laboratorio b ON (a.nr_seq_exame = b.nr_seq_exame)
WHERE ((b.ie_solicitacao = 'S') or (coalesce(a.nr_seq_exame::text, '') = '')) and a.cd_protocolo	 	= cd_protocolo_p and a.nr_sequencia		= nr_sequencia_p and a.nr_seq_proc		= nr_seq_item_p;


BEGIN 
 
cd_estabelecimento_w	:= cd_estabelecimento_p;
 
if (coalesce(nr_prescricao_p,0) = 0) then 
	var_pac_usu_w := Obter_Param_Usuario(924, 42, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, var_pac_usu_w);
	VarIdentPrescrADEP_w := obter_param_usuario(924, 246, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, VarIdentPrescrADEP_w);
	 
	if (var_pac_usu_w = 'U') then 
		begin 
		select	obter_setor_usuario(nm_usuario_p) 
		into STRICT	cd_setor_usuario_w 
		;
 
		select	count(*)  
		into STRICT	qt_registro_w 
		from	setor_atendimento a  
		where	a.cd_setor_atendimento in (	SELECT	b.cd_setor_atendimento   
							from	atend_paciente_unidade b   
							where	b.nr_atendimento	= nr_atendimento_p 
							and	b.cd_setor_atendimento	= cd_setor_usuario_w);
		exception 
		when others then 
			qt_registro_w	:= 0;
		end;
	end if;
	 
	if (var_pac_usu_w = 'U') and (nr_atendimento_p > 0) and (qt_registro_w > 0) then 
		cd_setor_prescr_w	:= cd_setor_usuario_w;	
	elsif (nr_atendimento_p > 0) then 
		Select	coalesce(obter_unidade_atendimento(nr_atendimento_p,'IA','CS'), obter_unidade_atendimento(nr_atendimento_p,'A','CS')) 
		into STRICT	cd_setor_prescr_w	 
		;
	end if;
	 
	if (var_pac_usu_w = 'R') then 
		cd_setor_prescr_w	:= Obter_setor_prescr_regra(obter_perfil_ativo);
	end if;
 
	select	Campo_Numerico(coalesce(vl_parametro, vl_parametro_padrao)) 
	into STRICT	qt_hora_w 
	from	funcao_parametro 
	where	cd_funcao = 924 
	and	nr_sequencia = 22;
 
	select	coalesce(vl_parametro, vl_parametro_padrao) 
	into STRICT	VarConsisteDataFutura_w 
	from	funcao_parametro 
	where	cd_funcao = 924 
	and	nr_sequencia = 44;
 
	if	((nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') or (VarConsisteDataFutura_w = 'S')) and 
		((clock_timestamp() + qt_hora_w / 24) < dt_prescricao_p) then 
		--A data da prescrição não pode ser superior a #@qt_hora#@ horas a partir deste momento! 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(178298,'QT_HORA='||qt_hora_w);
	end if;
	 
	-- Obter_Convênio do Atendimento 
	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then 
		begin 
		select	cd_convenio 
		into STRICT	cd_convenio_w 
		from	atend_categoria_convenio 
		where	nr_atendimento		= nr_atendimento_p 
		and	dt_inicio_vigencia	= 
				(SELECT	max(dt_inicio_vigencia) 
				from	atend_categoria_convenio 
				where	nr_atendimento = nr_atendimento_p);
		exception 
			when others then 
				cd_convenio_w := null;
		end;
	end if;
 
	-- Obter numero da proxima prescrição 
	select	nextval('prescr_medica_seq') 
	into STRICT	nr_prescricao_w 
	;
 
	-- Obter ie_origem_inf se é médico ou não 
	select 	coalesce(max('1'),'3') 
	into STRICT	ie_origem_inf_w 
	from	Medico b, 
		Usuario a 
	where 	a.nm_usuario		= nm_usuario_p 
	and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;
	 
	select 	max(a.cd_pessoa_fisica) 
	into STRICT	cd_medico_w 
	from	Medico b, 
		Usuario a 
	where 	a.nm_usuario		= nm_usuario_p 
	and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;
	 
 
	begin 
	dt_primeiro_horario_w	:= to_date(to_char(dt_prescricao_p,'dd/mm/yyyy ') || 
				substr(dt_Primeiro_horario_p,1,5),'dd/mm/yyyy hh24:mi');
	exception 
		when others then 
			dt_primeiro_horario_w	:= clock_timestamp();
	end;
	 
	begin 
	select	cd_pessoa_fisica 
	into STRICT	cd_pessoa_fisica_w 
	from	usuario 
	where	nm_usuario	= nm_usuario_p;
	exception 
		when others then 
			cd_pessoa_fisica_w	:= null;
	end;
 
	begin 
	select	obter_sinal_vital(nr_atendimento_P,obter_desc_expressao(283402)/*'Altura'*/
), 
		obter_sinal_vital(nr_atendimento_P,'Peso') 
	into STRICT	qt_altura_cm_w, 
		qt_peso_w 
	;
	exception 
		when others then 
			qt_altura_cm_w	:= null;
			qt_peso_w	:= null;
	end;
 
	if (cd_setor_prescr_w > 0) then 
		select	coalesce(max(ie_adep),ie_adep_w) 
		into STRICT	ie_adep_w 
		from	setor_atendimento 
		where	cd_setor_atendimento = cd_setor_prescr_w;
	end if;
	 
	/* Dalcastagne em 25/09/2008 OS 107843 */
 
	if (VarIdentPrescrADEP_w = 'NV') or (VarIdentPrescrADEP_w = 'PNV')then 
		ie_adep_w := 'N';
	elsif (VarIdentPrescrADEP_w = 'SV') then 
		ie_adep_w := 'S';
	end if;
	 
	select	max(cd_pessoa_fisica) 
	into STRICT	cd_paciente_w 
	from	atendimento_paciente 
	where	nr_atendimento	= nr_atendimento_p;
	 
	insert into prescr_medica( 
		nr_prescricao, 
		cd_pessoa_fisica, 
		nr_atendimento, 
		cd_medico, 
		dt_prescricao, 
		dt_atualizacao, 
		nm_usuario, 
		nr_horas_validade, 
		dt_primeiro_horario, 
		ie_origem_inf, 
		ie_recem_nato, 
		nm_usuario_original, 
		cd_protocolo, 
		nr_seq_protocolo, 
		cd_estabelecimento, 
		cd_prescritor, 
		qt_altura_cm, 
		qt_peso, 
		ie_adep, 
		ie_prescr_emergencia, 
		ie_prescricao_alta, 
		cd_setor_atendimento) 
	values (	somente_numero(nr_prescricao_w), 
		somente_numero(cd_paciente_w), 
		nr_atendimento_p, 
		somente_numero(cd_medico_w), 
		dt_prescricao_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		somente_numero(nr_horas_validade_p), 
		dt_primeiro_horario_w, 
		Somente_numero(ie_origem_inf_w), 
		'N', 
		nm_usuario_p, 
		Somente_numero(cd_protocolo_w), 
		nr_seq_protocolo_w, 
		cd_estabelecimento_w, 
		cd_pessoa_fisica_w, 
		qt_altura_cm_w, 
		qt_peso_w, 
		ie_adep_w, 
		'N', 
		'N', 
		cd_setor_prescr_w);
		 
		commit;
else 
	nr_prescricao_w	:= nr_prescricao_p;
end if;
 
 
select	max(dt_inicio_prescr) 
into STRICT	dt_primeiro_horario_w 
from	prescr_medica 
where	nr_prescricao	= nr_prescricao_w;
 
hr_prim_horario_w	:= to_char(dt_primeiro_horario_w, 'hh24:mi');
 
select	coalesce(max(nr_sequencia),0), 
	coalesce(max(nr_agrupamento),0) 
into STRICT	nr_seq_proc_w, 
	nr_agrupamento_proc_w 
from	prescr_procedimento 
where	nr_prescricao = nr_prescricao_w;
 
OPEN C03;
LOOP 
fetch C03 into 
	nr_seq_proc_novo_w, 
	nr_seq_proc_prot_w, 
	cd_procedimento_w, 
	qt_procedimento_w, 
	ds_observacao_w, 
	ie_origem_proced_w, 
	cd_intervalo_w, 
	cd_setor_exclusivo_w, 
	cd_material_exame_w, 
	nr_seq_exame_w, 
	ie_se_necessario_w, 
	ie_acm_proced_w, 
	hr_prim_horario_proced_w, 
	ds_material_especial_w, 
	ie_agora_w, 
	nr_seq_proc_interno_w, 
	ie_lado_w, 
	ie_respiracao_w, 
	cd_mod_vent_w, 
	ie_disp_resp_esp_w, 
	qt_fluxo_oxigenio_w, 
	qt_min_intervalo_w, 
	nr_seq_prot_glic_w, 
	ds_dado_clinico_w, 
	ie_objetivo_onco_w, 
	ie_executar_leito_w, 
	nr_seq_contraste_w, 
	ds_exame_fis_achado_cirur_w, 
	ds_resumo_clinico_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	--begin 
	 
	if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then 
		SELECT * FROM Obter_Proc_Tab_Interno(nr_seq_proc_interno_w, nr_prescricao_w, 0, 0, cd_procedimento_w, ie_origem_proced_w, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
	end if;
	 
	nr_horas_validade_w	:= nr_horas_validade_p;
	 
	if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then 
		begin 
		select	distinct 
			cd_procedimento, 
			ie_origem_proced 
		into STRICT	cd_proced_aux_w, 
			ie_origem_aux_w 
		from	exame_lab_convenio 
		where	nr_seq_exame	= nr_seq_exame_w 
		and	cd_convenio	= cd_convenio_w;
		exception 
			when others then 
				cd_proced_aux_w	:= null;
				ie_origem_aux_w	:= null;
		end;
 
		cd_procedimento_w	:= coalesce(cd_proced_aux_w,cd_procedimento_w);
		ie_origem_proced_w	:= coalesce(ie_origem_aux_w,ie_origem_proced_w);
	end if;
 
	if (coalesce(cd_procedimento_w::text, '') = '') then 
		select	a.ie_tipo_convenio, 
			b.cd_convenio, 
			b.cd_categoria, 
			a.cd_estabelecimento, 
			b.cd_plano_convenio 
		into STRICT	ie_tipo_convenio_w, 
			cd_convenio_w, 
			cd_categoria_w, 
			cd_estab_w, 
			cd_plano_convenio_w 
		from	atend_categoria_convenio b, 
			atendimento_paciente a 
		where	a.nr_atendimento	= nr_atendimento_p 
		and	b.nr_atendimento	= a.nr_atendimento 
		and	b.nr_seq_interno	= OBTER_ATECACO_ATENDIMENTO(A.NR_ATENDIMENTO);
 
		SELECT * FROM obter_exame_lab_convenio(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estab_w, ie_tipo_convenio_w, nr_seq_proc_interno_w, cd_material_exame_w, cd_plano_convenio_w, cd_setor_atend_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT cd_setor_atend_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;
 
	end if;
 
	begin 
	select	coalesce(cd_setor_exclusivo,cd_setor_exclusivo_w) 
	into STRICT	cd_setor_exclusivo_w 
	from	procedimento 
	where	cd_procedimento		= cd_procedimento_w 
	and	ie_origem_proced	= ie_origem_proced_w;
	exception 
		when others then 
			cd_setor_exclusivo_w := cd_setor_exclusivo_w;
	end;
 
	ie_gerar_setor_w := obter_se_gerar_setor_rotina(cd_estabelecimento_w, 924, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w, nr_seq_exame_w, cd_setor_prescr_w,nm_usuario_p);
	 
	/* Rafael em 28/2/8 OS81068 */
 
	if (coalesce(cd_setor_exclusivo_w::text, '') = '') and (ie_gerar_setor_w = 'S') then 
		select	obter_setor_atend_proc(cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, null, cd_setor_prescr_w, nm_usuario_p, nr_seq_proc_interno_w, nr_atendimento_p) 
		into STRICT	cd_setor_exclusivo_w 
		;
	end if;
	 
	if (coalesce(dt_primeiro_horario_w::text, '') = '') then 
		dt_primeiro_horario_w := dt_prescricao_p;
	end if;
	 
	dt_prim_horario_proced_w	:= null;
	 
	if (hr_prim_horario_proced_w IS NOT NULL AND hr_prim_horario_proced_w::text <> '') then 
		begin 
		dt_prim_horario_proced_w	:= to_date(to_char(dt_primeiro_horario_w,'dd/mm/yyyy ') || 
							substr(hr_prim_horario_proced_w,1,5),'dd/mm/yyyy hh24:mi');
		if (dt_inicio_prescr_w > dt_prim_horario_proced_w) then 
			begin 
			dt_prim_horario_proced_w := dt_prim_horario_proced_w + 1;
			end;
		end if;
		end;
	end if;
 
	if (coalesce(ie_urgencia_w,ie_agora_w) = 'S') then 
		dt_prim_horario_proced_w	:= clock_timestamp();
	end if;
 
	ds_horarios_proced_w 	:= '';
	nr_ocorrencia_proced_w 	:= 0;
 
	if (coalesce(ie_urgencia_w,ie_agora_w) = 'S') then 
		dt_primeiro_horario_w	:= clock_timestamp();
		select	coalesce(max(cd_intervalo),cd_intervalo_w) 
		into STRICT	cd_intervalo_w 
		from	intervalo_prescricao 
		where	ie_agora	= 'S';
	end if;
 
	SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_w, cd_intervalo_w, coalesce(dt_primeiro_horario_w,dt_prescricao_w), coalesce(dt_prim_horario_proced_w,dt_primeiro_horario_w), nr_horas_validade_w, cd_procedimento_w, 0, qt_min_intervalo_w, nr_ocorrencia_proced_w, ds_horarios_proced_w, ds_horarios_proced2_w, 'N', null) INTO STRICT nr_ocorrencia_proced_w, ds_horarios_proced_w, ds_horarios_proced2_w;
 
	ds_horarios_proced_w	:= ds_horarios_proced_w || ds_horarios_proced2_w;
	 
	select	max(obter_ctrl_glic_proc(nr_seq_proc_interno_w)) 
	into STRICT	ie_cig_w 
	;
	 
	if (ie_cig_w	= 'CIG') then 
		ds_horarios_proced_w 	:= to_char(coalesce(dt_prim_horario_proced_w,dt_primeiro_horario_w),'hh24:mi');
		nr_ocorrencia_proced_w	:= 1;
	end if;
 
	if (ie_se_necessario_w = 'S') then	 
		ds_horarios_proced_w := 'SN';
	elsif (ie_acm_proced_w = 'S') then 
		ds_horarios_proced_w := 'ACM';
	end if;
 
	if (ie_se_necessario_w = 'S') or (ie_acm_proced_w = 'S') then 
		select	max(cd_setor_atendimento), 
				max(cd_estabelecimento_w) 
		into STRICT		cd_setor_atendimento_w, 
				cd_estabelecimento_w 
		from		prescr_medica 
		where	nr_prescricao	= nr_prescricao_w;
		 
		select	coalesce(max(b.qt_se_necessario),0), 
				coalesce(max(b.ie_mesmo_zerado),'N') 
		into STRICT		nr_ocorrencia_proced_w, 
				ie_mesmo_zerado_w 
		from		intervalo_prescricao a, 
				intervalo_setor b 
		where	a.cd_intervalo 		= b.cd_intervalo 
		and		coalesce(b.cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w 
		and		coalesce(b.cd_estab, cd_estabelecimento_w)			= cd_estabelecimento_w 
		and		a.cd_intervalo 		= cd_intervalo_w 
		and		((b.cd_unidade_basica = coalesce(obter_unid_atend_setor_atual(nr_atendimento_p,cd_setor_atendimento_w,'UB'),b.cd_unidade_basica)) or (coalesce(b.cd_unidade_basica::text, '') = ''));
		 
		if (coalesce(nr_ocorrencia_proced_w,0) = 0) and (ie_mesmo_zerado_w = 'N') then		 
			Select	coalesce(max(qt_se_necessario),1) 
			into STRICT	nr_ocorrencia_proced_w 
			from	intervalo_prescricao 
			where	cd_intervalo = cd_intervalo_w;
		end if;
	end if;
 
	nr_agrupamento_proc_w	:= nr_agrupamento_proc_w + 1;
 
	insert into prescr_procedimento( 
		nr_prescricao, 
		nr_sequencia, 
		nr_agrupamento, 
		cd_procedimento, 
		qt_procedimento, 
		dt_atualizacao, 
		nm_usuario, 
		ds_observacao, 
		cd_motivo_baixa, 
		ie_origem_proced, 
		cd_intervalo, 
		ie_urgencia, 
		ie_suspenso, 
		cd_setor_atendimento, 
		dt_prev_execucao, 
		cd_material_exame, 
		nr_seq_exame, 
		ie_status_atend, 
		ie_amostra, 
		ie_origem_inf, 
		ie_se_necessario, 
		ie_acm, 
		ds_horarios, 
		nr_ocorrencia, 
		ds_material_especial, 
		nr_seq_interno, 
		nr_seq_proc_interno, 
		ds_dado_clinico, 
		ie_avisar_result, 
		cd_protocolo, 
		nr_seq_protocolo, 
		nr_seq_proc_protocolo, 
		ie_lado, 
		ie_respiracao, 
		cd_mod_vent, 
		ie_disp_resp_esp, 
		qt_fluxo_oxigenio, 
		qt_min_intervalo, 
		nr_seq_prot_glic, 
		ie_objetivo_onco, 
		ie_executar_leito, 
		nr_seq_contraste, 
		ds_exame_fis_achado_cirur, 
		ds_resumo_clinico) 
	Values ( 
		nr_prescricao_w, 
		nr_seq_proc_novo_w, 
		nr_agrupamento_proc_w, 
		cd_procedimento_w, 
		qt_procedimento_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		ds_observacao_w, 
		0, 
		ie_origem_proced_w, 
		cd_intervalo_w, 
		coalesce(ie_urgencia_w,ie_agora_w), 
		'N', 
		cd_setor_exclusivo_w, 
		coalesce(dt_prim_horario_proced_w,dt_primeiro_horario_w), 
		cd_material_exame_w, 
		nr_seq_exame_w, 
		5, 
		'N', 
		'1', 
		ie_se_necessario_w, 
		ie_acm_proced_w, 
		ds_horarios_proced_w, 
		nr_ocorrencia_proced_w, 
		ds_material_especial_w, 
		nextval('prescr_procedimento_seq'), 
		nr_seq_proc_interno_w, 
		ds_dado_clinico_w, 
		'N', 
		cd_protocolo_p, 
		nr_sequencia_p, 
		nr_seq_proc_prot_w, 
		ie_lado_w, 
		ie_respiracao_w, 
		cd_mod_vent_w, 
		ie_disp_resp_esp_w, 
		qt_fluxo_oxigenio_w, 
		CASE WHEN qt_min_intervalo_w=0 THEN null  ELSE qt_min_intervalo_w END , 
		nr_seq_prot_glic_w, 
		ie_objetivo_onco_w, 
		ie_executar_leito_w, 
		nr_seq_contraste_w, 
		ds_exame_fis_achado_cirur_w, 
		ds_resumo_clinico_w);
 
	CALL Gerar_Prescr_Proc_Glic(nr_prescricao_w, nr_seq_proc_novo_w, nr_seq_prot_glic_w, nm_usuario_p);
	CALL Gerar_prescr_proc_sem_dt_lib(nr_prescricao_w,nr_seq_proc_novo_w,obter_perfil_ativo,'N',nm_usuario_p);
	CALL Inserir_mat_prescr_prot(nr_prescricao_w, cd_protocolo_p, nr_sequencia_p,0, 
				5, 0, nr_seq_proc_prot_w, 0, null, 
				nr_seq_proc_novo_w, null, cd_intervalo_w, 1, nm_usuario_p, coalesce(ie_urgencia_w,'N'),0,hr_prim_horario_w,0,0, null,null,null,null,null,null,null,null,null,null,null,null,null,'S',null,null,null,null,null,null,null,null,null,null,null,null);
	ds_erro_w := consistir_prescr_procedimento(nr_prescricao_w, nr_seq_proc_novo_w, nm_usuario_p, 0, ds_erro_w);
 
END LOOP;
CLOSE C03;
 
commit;
 
update prescr_medica 
set cd_funcao_origem = -996 
where nr_prescricao = nr_prescricao_w;
commit;
 
if (coalesce(ie_gerar_cpoe_p,'N') = 'S') then 
	CALL cpoe_rep_gerar_procedimento(nr_prescricao_w, nr_atendimento_p, clock_timestamp(), clock_timestamp()+nr_horas_validade_p/24, null, nm_usuario_p, somente_numero(cd_paciente_w), -996, cd_setor_prescr_w);	
	CALL cpoe_delete_prescription(nr_prescricao_w, 'Prescrição ' || nr_prescricao_w || ' deletada. Item criado na CPOE na rotina Gerar_Prescricao_coletiva pendente liberação do médico.', 'N');	
else 
	nr_prescricao_p	:= nr_prescricao_w;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescricao_coletiva ( nr_atendimento_p bigint, cd_protocolo_p bigint, nr_sequencia_p bigint, nr_seq_item_p bigint, dt_primeiro_horario_p text, dt_prescricao_p timestamp, nr_horas_validade_p bigint, cd_estabelecimento_p bigint, nr_prescricao_p INOUT bigint, nm_usuario_p text, ie_gerar_cpoe_p text default 'N') FROM PUBLIC;

