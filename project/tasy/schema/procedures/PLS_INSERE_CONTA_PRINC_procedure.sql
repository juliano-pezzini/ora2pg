-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_insere_conta_princ ( nr_seq_lote_analise_p pls_protocolo_conta.nr_seq_lote_conta%type, nr_seq_analise_p pls_conta.nr_seq_analise%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type default null) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: 
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
-------------------------------------------------------------------------------------------------------------------


-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
tb_nr_seq_conta_princ_w		pls_util_cta_pck.t_number_table;
tb_ie_vinc_internado_w		pls_util_cta_pck.t_varchar2_table_2;
tb_nr_seq_conta_w		pls_util_cta_pck.t_number_table;

C01 CURSOR(	nr_seq_lote_analise_pc	pls_protocolo_conta.nr_seq_lote_conta%type,
		nr_seq_analise_pc	pls_conta.nr_seq_analise%type,
		nr_seq_conta_pc		pls_conta.nr_sequencia%type,
		nr_seq_protocolo_pc	pls_protocolo_conta.nr_sequencia%type) FOR
	SELECT	substr(pls_obter_conta_principal(p.cd_guia, c.nr_seq_analise, p.nr_seq_segurado, null),1,255) nr_seq_conta_princ,
			pls_obter_se_internado_alt(c.nr_sequencia, 'S', c.ie_tipo_guia, c.nr_seq_guia, c.nr_seq_segurado, c.cd_guia_ok, c.nr_seq_analise) ie_vinc_internado,
			c.nr_sequencia
	from	pls_conta		c,
			pls_analise_conta	p
	where	p.nr_seq_lote_protocolo = nr_seq_lote_analise_pc
	and		c.nr_seq_analise = p.nr_sequencia 
	
union all

	SELECT	substr(pls_obter_conta_principal(cd_guia, nr_seq_analise, nr_seq_segurado, null),1,255) nr_seq_conta_princ,
			pls_obter_se_internado_alt(nr_sequencia, 'S', ie_tipo_guia, nr_seq_guia, nr_seq_segurado, cd_guia_referencia, nr_seq_analise) ie_vinc_internado,
			nr_sequencia
	from	pls_conta_v
	where	nr_seq_protocolo = nr_seq_protocolo_pc
	
union all

	select	substr(pls_obter_conta_principal(p.cd_guia, c.nr_seq_analise, p.nr_seq_segurado, null),1,255) nr_seq_conta_princ,
			pls_obter_se_internado_alt(c.nr_sequencia, 'S', c.ie_tipo_guia, c.nr_seq_guia, c.nr_seq_segurado, c.cd_guia_ok, c.nr_seq_analise) ie_vinc_internado,
			c.nr_sequencia
	from	pls_conta		c,
			pls_analise_conta	p 
	where	c.nr_seq_analise = nr_seq_analise_pc
	and		c.nr_seq_analise = p.nr_sequencia
	
union all

	select	substr(pls_obter_conta_principal(cd_guia, nr_seq_analise, nr_seq_segurado, null),1,255) nr_seq_conta_princ,
			pls_obter_se_internado_alt(nr_sequencia, 'S', ie_tipo_guia, nr_seq_guia, nr_seq_segurado, cd_guia_ok, nr_seq_analise) ie_vinc_internado,
			nr_sequencia
	from	pls_conta
	where	nr_sequencia = nr_seq_conta_pc;
	

BEGIN

open C01(	nr_seq_lote_analise_p, nr_seq_analise_p, nr_seq_conta_p, nr_seq_protocolo_p);
loop
	fetch C01 bulk collect into	tb_nr_seq_conta_princ_w, tb_ie_vinc_internado_w, tb_nr_seq_conta_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_conta_w.count = 0;
	
	forall i in tb_nr_seq_conta_w.first..tb_nr_seq_conta_w.last
		update 	pls_conta
		set	nr_seq_conta_princ = coalesce(tb_nr_seq_conta_princ_w(i), nr_sequencia),
			ie_vinc_internacao = tb_ie_vinc_internado_w(i)			
		where	nr_sequencia = tb_nr_seq_conta_w(i);
	
	forall i in tb_nr_seq_conta_w.first..tb_nr_seq_conta_w.last	
		update 	pls_conta	a
		set	a.nr_seq_prestador_exec_princ = (SELECT max(x.nr_seq_prestador_exec) from pls_conta x where x.nr_sequencia = a.nr_seq_conta_princ)
		where	a.nr_sequencia = tb_nr_seq_conta_w(i);
		
	commit;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_insere_conta_princ ( nr_seq_lote_analise_p pls_protocolo_conta.nr_seq_lote_conta%type, nr_seq_analise_p pls_conta.nr_seq_analise%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type default null) FROM PUBLIC;

