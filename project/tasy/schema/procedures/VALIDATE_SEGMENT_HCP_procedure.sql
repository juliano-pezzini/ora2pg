-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE validate_segment_hcp (nr_seq_segment_p bigint, nr_seq_dataset_p bigint, ie_segmento_p text, nm_usuario_p text, nr_atendimento_p bigint) AS $body$
DECLARE

  nr_seq_estrut_arq_w bigint;
  vl_retorno_w        varchar(255);
  vl_resultado_w      varchar(255);
  ds_sql_w            varchar(500);
  c001                integer;
  ccampos CURSOR FOR
    SELECT nm_table, 
           nm_attribute, 
           ds_field 
    FROM   hcp_field_mapping 
    WHERE  nr_seq_segment = nr_seq_segment_p 
           AND ie_mandatory = 'S';
  ccampos_w           ccampos%ROWTYPE;

BEGIN

    OPEN ccampos;

    LOOP 
        FETCH ccampos INTO ccampos_w;

        EXIT WHEN NOT FOUND; /* apply on ccampos */

        ds_sql_w := ' select to_char(' 
                    || ccampos_w.nm_attribute 
                    ||') from ' 
                    ||ccampos_w.nm_table 
                    || ' where nr_seq_dataset = ' 
                    || nr_seq_dataset_p;

        c001 := dbms_sql.open_cursor;

        dbms_sql.Parse(c001, ds_sql_w, dbms_sql.native);

        dbms_sql.Define_column(c001, 1, vl_retorno_w, 255);

        vl_resultado_w := dbms_sql.EXECUTE(c001);

        vl_resultado_w := dbms_sql.Fetch_rows(c001);

        dbms_sql.Column_value(c001, 1, vl_retorno_w);

        dbms_sql.Close_cursor(c001);

        IF ( coalesce(trim(both vl_retorno_w)::text, '') = '' ) THEN 
          -- Field # @ DS_FIELD # @, was not informed for segment # @ IE_SEGMENT # @ of this dataset. 
          CALL Generate_hcp_ds_inconsistency(nr_seq_dataset_p, 'E', 
          wheb_mensagem_pck.Get_texto(996262, 'DS_CAMPO=' 
                                              ||ccampos_w.ds_field 
                                              ||';IE_SEGMENTO=' 
                                              ||ie_segmento_p 
                                              ||';'), nm_usuario_p, 
          ie_segmento_p, nr_atendimento_p);
        END IF;
    END LOOP;

    CLOSE ccampos;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE validate_segment_hcp (nr_seq_segment_p bigint, nr_seq_dataset_p bigint, ie_segmento_p text, nm_usuario_p text, nr_atendimento_p bigint) FROM PUBLIC;

