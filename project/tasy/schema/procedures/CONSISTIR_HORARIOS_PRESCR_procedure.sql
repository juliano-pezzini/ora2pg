-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_horarios_prescr ( nr_prescricao_p bigint) AS $body$
DECLARE



dt_inicio_prescr_w		timestamp;
dt_fim_prescricao_w		timestamp;
dt_primeiro_horario_w	timestamp;
dt_prim_horario_medic_w	timestamp;
dt_limite_w				timestamp;
hr_prim_horario_w		varchar(5);
cd_material_w			prescr_mat_hor.cd_material%type;
cd_intervalo_w			varchar(7);
qt_operacao_w			intervalo_prescricao.qt_operacao%type;
ie_operacao_w			varchar(1);
nr_Horas_intervalo_w	real;
nm_usuario_original_w	varchar(15);
nr_atendimento_w		prescr_medica.nr_atendimento%type;
qt_duplo_w				bigint;
ie_tipo_w				varchar(1);
ds_horarios_w			varchar(2000);
ie_acm_sn_w				varchar(1);
ie_apresenta_rep_ant_w	varchar(1) := 'N';
nm_usuario_w			varchar(15);
cd_estabelecimento_w	integer;

C01 CURSOR FOR
	SELECT	a.dt_inicio_prescr,
			a.dt_fim_prescricao,
			a.dt_primeiro_horario,
			b.hr_prim_horario,
			b.cd_material,
			b.cd_intervalo,
			a.nm_usuario_original,
			a.nr_atendimento,
			b.ds_horarios,
			substr(obter_se_acm_sn(b.ie_acm, b.ie_se_necessario),1,1)
	from	prescr_material b,
			prescr_medica a
	where	a.nr_prescricao	= b.nr_prescricao
	and	a.nr_prescricao	= nr_prescricao_p
	and	b.ie_agrupador	= 1;

C02 CURSOR FOR
	SELECT	distinct
			b.nr_prescricao,
			b.dt_horario,
			b.nr_sequencia,
			b.nr_seq_material
	from	ap_lote c,
			prescr_mat_hor b,
			prescr_material g,
			prescr_medica a
	where	a.nr_prescricao		= g.nr_prescricao
	and   	g.nr_prescricao   	= b.nr_prescricao
	and   	g.nr_sequencia    	= b.nr_seq_material
	and		a.nr_atendimento	= nr_atendimento_w
	and		b.cd_material		= cd_material_w
	and		b.dt_horario		> dt_limite_w
	and		a.nr_prescricao		<> nr_prescricao_p
	and		b.ie_agrupador		= 1
	and		coalesce(b.dt_suspensao::text, '') = ''
	and		Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S'
	and		b.nr_seq_lote		= c.nr_sequencia
	and		((coalesce(ie_apresenta_rep_ant_w,'N') = 'N') or
			 ((coalesce(c.ie_status_lote,'G') in ('G')) and (ie_apresenta_rep_ant_w = 'G') and
		   exists (	SELECT	1
					from	prescr_mat_hor d,
							prescr_material h,
							prescr_medica e
					where	a.nr_atendimento	= e.nr_atendimento
					and   	h.nr_prescricao   	= e.nr_prescricao
					and		e.nr_prescricao		= nr_prescricao_p
					and		d.cd_material		= b.cd_material
					and 	d.dt_horario 		= b.dt_horario
					and		coalesce(d.qt_dose,0)	= coalesce(b.qt_dose,0)
					and		d.ie_agrupador		= 1
					and		coalesce(d.dt_suspensao::text, '') = ''
					and		Obter_se_horario_liberado(d.dt_lib_horario, d.dt_horario) = 'S')))
	
union all

	select	distinct
			b.nr_prescricao,
			b.dt_horario,
			b.nr_sequencia,
			b.nr_seq_material
	from	prescr_mat_hor b,
			prescr_material g,
			prescr_medica a
	where	a.nr_prescricao		= g.nr_prescricao
	and   	g.nr_prescricao   	= b.nr_prescricao
	and   	g.nr_sequencia    	= b.nr_seq_material
	and		a.nr_atendimento	= nr_atendimento_w
	and		b.cd_material		= cd_material_w
	and		b.dt_horario		> dt_limite_w
	and		a.nr_prescricao		= nr_prescricao_p
	and		b.ie_agrupador		= 1
	and		coalesce(b.dt_suspensao::text, '') = ''
	and (coalesce(ie_apresenta_rep_ant_w,'N') <> 'N')
	and		exists (select	1
					from	ap_lote c,
							prescr_mat_hor d,
							prescr_material h,
							prescr_medica e
					where	e.nr_prescricao		= h.nr_prescricao
					and		e.nr_atendimento	= a.nr_atendimento
					and		h.nr_prescricao		= d.nr_prescricao
					and   	h.nr_sequencia    	= d.nr_seq_material
					and		d.cd_material		= b.cd_material
					and		d.dt_horario		> dt_limite_w
					and		b.dt_horario		= d.dt_horario
					and		e.nr_prescricao		<> a.nr_prescricao
					and		coalesce(b.qt_dose,0)	= coalesce(d.qt_dose,0)
					and		d.ie_agrupador		= 1
					and		coalesce(d.dt_suspensao::text, '') = ''
					and		Obter_se_horario_liberado(d.dt_lib_horario, d.dt_horario) = 'S'
					and		d.nr_seq_lote		= c.nr_sequencia
					and		((coalesce(c.ie_status_lote,'G') in ('A','R','D','E')) or
							 ((coalesce(c.ie_status_lote,'G') = 'G') and (ie_apresenta_rep_ant_w = 'G'))));

C03 CURSOR FOR
	SELECT	distinct
            b.nr_prescricao,
            b.dt_horario,
            b.nr_sequencia,
            b.nr_seq_material
    from	ap_lote c,
            prescr_mat_hor b,
            prescr_material g,
            prescr_medica a
    where	a.nr_prescricao		= g.nr_prescricao
    and   	g.nr_prescricao   	= b.nr_prescricao
    and   	g.nr_sequencia    	= b.nr_seq_material
    and		a.nr_atendimento	= nr_atendimento_w
    and		b.nr_seq_lote		= c.nr_sequencia
    and		b.cd_material		= cd_material_w
    and		b.dt_horario		> dt_limite_w
    and		a.nr_prescricao		<> nr_prescricao_p
    and		b.ie_agrupador		= 1
    and		coalesce(b.dt_suspensao::text, '') = ''
    and		Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S';
BEGIN

delete	FROM prescr_horario_pre
where	nr_prescricao	= nr_prescricao_p;
commit;

CALL Gerar_prescr_mat_hor_pre(nr_prescricao_p,0,'Tasy');

delete	FROM prescr_mat_hor_conflito
where	nr_prescricao	= nr_prescricao_p;

select	max(nm_usuario),
	max(cd_estabelecimento)
into STRICT	nm_usuario_w,
	cd_estabelecimento_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

ie_apresenta_rep_ant_w := Obter_Param_Usuario(924, 937, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_w, ie_apresenta_rep_ant_w);

commit;

open C01;
loop
fetch C01 into
	dt_inicio_prescr_w,
	dt_fim_prescricao_w,
	dt_primeiro_horario_w,
	hr_prim_horario_w,
	cd_material_w,
	cd_intervalo_w,
	nm_usuario_original_w,
	nr_atendimento_w,
	ds_horarios_w,
	ie_acm_sn_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		if (hr_prim_horario_w = '  :  ') then
			hr_prim_horario_w := null;
		end if;

		if (ie_acm_sn_w	<> 'S') and (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') and (coalesce(hr_prim_horario_w::text, '') = '') then
			if (substr(ds_horarios_w,3,1) = ':') then
				hr_prim_horario_w	:= substr(ds_horarios_w,1,5);
			else
				hr_prim_horario_w	:= substr(ds_horarios_w,1,2)||':00';
			end if;
		end if;

		begin
		if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') and (to_char(dt_inicio_prescr_w,'hh24:mi') > hr_prim_horario_w) then
			dt_prim_horario_medic_w	:= to_date(to_char(dt_inicio_prescr_w + 1,'dd/mm/yyyy ') ||hr_prim_horario_w ||':00','dd/mm/yyyy hh24:mi:ss');
		else
			if (coalesce(hr_prim_horario_w::text, '') = '') then
				hr_prim_horario_w	:= to_char(dt_inicio_prescr_w,'hh24:mi');
			end if;

			begin
			dt_prim_horario_medic_w	:= to_date(to_char(dt_inicio_prescr_w,'dd/mm/yyyy ') ||hr_prim_horario_w ||':00','dd/mm/yyyy hh24:mi:ss');
			exception when others then
			dt_prim_horario_medic_w	:= to_date(to_char(dt_inicio_prescr_w,'dd/mm/yyyy ') ||to_char(dt_inicio_prescr_w,'hh24:mi') ||':00','dd/mm/yyyy hh24:mi:ss');
			end;
		end if;

		exception when others then
			--Verifique se os horários informados estão corretos conforme padrão do sistema!
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(176522);
		end;

		select	coalesce(max(ie_operacao),''),
			coalesce(max(qt_operacao),1)
		into STRICT	ie_operacao_w,
			qt_operacao_w
		from	intervalo_prescricao
		where	cd_intervalo = cd_intervalo_w;

		if (ie_operacao_w = 'H') then
			nr_Horas_intervalo_w    := qt_operacao_w;
		elsif (ie_operacao_w = 'X') then
			nr_Horas_intervalo_w   	:= floor(24/qt_operacao_w);
		end if;

		dt_limite_w	:= dt_prim_horario_medic_w - (nr_Horas_intervalo_w/24);

	    if (coalesce(ie_apresenta_rep_ant_w, 'N') = 'N') then
	      for r_c03_w in C03
	      loop
	        ie_tipo_w	:= 'C';

	        select	count(*)
	        into STRICT	  qt_duplo_w
	        from	  prescr_horario_pre
	        where	  nr_prescricao	= nr_prescricao_p
	        and		  cd_material	  = cd_material_w
	        and		  dt_horario	  = r_c03_w.dt_horario;

	        if (qt_duplo_w > 0) then
	          ie_tipo_w	:= 'D';
	        end if;

	        insert into prescr_mat_hor_conflito(
	          nr_sequencia,
	          nr_prescricao,
	          dt_atualizacao,
	          nm_usuario,
	          dt_atualizacao_nrec,
	          nm_usuario_nrec,
	          nr_prescricao_conflito,
	          cd_material,
	          dt_horario,
	          ie_tipo,
	          nr_seq_mat_hor,
	          nr_seq_material)
	        values (	nextval('prescr_mat_hor_conflito_seq'),
	          nr_prescricao_p,
	          clock_timestamp(),
	          nm_usuario_original_w,
	          clock_timestamp(),
	          nm_usuario_original_w,
	          r_c03_w.nr_prescricao,
	          cd_material_w,
	          r_c03_w.dt_horario,
	          ie_tipo_w,
	          r_c03_w.nr_sequencia,
	          r_c03_w.nr_seq_material);
	      end loop;
	    else
	      for r_c02_w in C02
	      loop
	        ie_tipo_w	:= 'C';

	        select	count(*)
	        into STRICT	  qt_duplo_w
	        from	  prescr_horario_pre
	        where	  nr_prescricao	= nr_prescricao_p
	        and		  cd_material	  = cd_material_w
	        and		  dt_horario	  = r_c02_w.dt_horario;

	        if (qt_duplo_w > 0) then
	          ie_tipo_w	:= 'D';
	        end if;

	        insert into prescr_mat_hor_conflito(
	          nr_sequencia,
	          nr_prescricao,
	          dt_atualizacao,
	          nm_usuario,
	          dt_atualizacao_nrec,
	          nm_usuario_nrec,
	          nr_prescricao_conflito,
	          cd_material,
	          dt_horario,
	          ie_tipo,
	          nr_seq_mat_hor,
	          nr_seq_material)
	        values (	nextval('prescr_mat_hor_conflito_seq'),
	          nr_prescricao_p,
	          clock_timestamp(),
	          nm_usuario_original_w,
	          clock_timestamp(),
	          nm_usuario_original_w,
	          r_c02_w.nr_prescricao,
	          cd_material_w,
	          r_c02_w.dt_horario,
	          ie_tipo_w,
	          r_c02_w.nr_sequencia,
	          r_c02_w.nr_seq_material);
	      end loop;
	    end if;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_horarios_prescr ( nr_prescricao_p bigint) FROM PUBLIC;

