-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_espec_conta ( nr_interno_conta_p bigint) AS $body$
DECLARE


ie_forma_espec_conta_w		varchar(1);
ie_tipo_Atendimento_w		bigint;
cd_estabelecimento_w		integer;
cd_especialidade_w		integer;
nr_atendimento_w		bigint;
cd_medico_atend_w		varchar(10);
ie_origem_proced_w		bigint;
cd_convenio_w			integer;
ie_tipo_convenio_w		bigint;
cd_procedimento_w		bigint;
ie_funcao_medico_w		varchar(10);

BEGIN

select	cd_estabelecimento,
	cd_especialidade_conta,
	nr_atendimento,
	cd_convenio_parametro
into STRICT	cd_estabelecimento_w,
	cd_especialidade_w,
	nr_atendimento_w,
	cd_convenio_w
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_p;

select	cd_medico_resp,
	ie_tipo_atendimento,
	ie_tipo_convenio
into STRICT	cd_medico_atend_w,
	ie_tipo_atendimento_w,
	ie_tipo_convenio_w
from	atendimento_paciente
where	nr_atendimento	= nr_atendimento_w;

select	max(ie_forma_espec_conta)
into STRICT	ie_forma_espec_conta_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;

if (coalesce(cd_especialidade_w::text, '') = '') and (ie_forma_espec_conta_w IS NOT NULL AND ie_forma_espec_conta_w::text <> '') then

	if (ie_forma_espec_conta_w		= 'M') then

		cd_especialidade_w	:= obter_especialidade_medico(cd_medico_atend_w,'V');

	elsif (ie_forma_espec_conta_w		= 'P') then

		if (ie_tipo_convenio_w	= 3) then

			if (ie_tipo_Atendimento_w		= 1) then
				select	max(cd_procedimento_real),
					max(ie_origem_proc_real)
				into STRICT	cd_procedimento_w,
					ie_origem_proced_w
				from	sus_aih_unif
				where	nr_interno_conta	= nr_interno_conta_p;
			else
				select	max(cd_procedimento),
					max(ie_origem_proced)
				into STRICT	cd_procedimento_w,
					ie_origem_proced_w
				from	sus_apac_unif
				where	nr_interno_conta	= nr_interno_conta_p;

			end if;

		end if;

		if (coalesce(cd_procedimento_w::text, '') = '') then
			cd_procedimento_w	:= Obter_Proc_Principal(	nr_Atendimento_w,
										cd_convenio_w,
										ie_tipo_Atendimento_w,
										nr_interno_conta_p,
										'CP');

			ie_origem_proced_w	:= Obter_Proc_Principal(	nr_Atendimento_w,
										cd_convenio_w,
										ie_tipo_Atendimento_w,
										nr_interno_conta_p,
										'IP');
		end if;

		select 	max(cd_especialidade_medica)
		into STRICT	cd_especialidade_w
		from	estrutura_procedimento_v
		where	cd_procedimento 	= cd_procedimento_w
		and	ie_origem_proced 	= ie_origem_proced_w;

		if (coalesce(cd_especialidade_w::text, '') = '') then

			SELECT * FROM obter_proced_espec_medica(	cd_estabelecimento_w, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, null, null, null, null, null, cd_especialidade_w, ie_funcao_medico_w, null, null, ie_tipo_Atendimento_w) INTO STRICT cd_especialidade_w, ie_funcao_medico_w;
		end if;
	end if;

	if (coalesce(cd_especialidade_w,0)	> 0) then
		update	conta_paciente
		set	cd_especialidade_conta	= cd_especialidade_w
		where	nr_interno_conta	= nr_interno_conta_p;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_espec_conta ( nr_interno_conta_p bigint) FROM PUBLIC;

