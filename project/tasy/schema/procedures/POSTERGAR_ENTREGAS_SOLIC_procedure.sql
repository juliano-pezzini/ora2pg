-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE postergar_entregas_solic ( nr_solic_compra_p bigint, ie_utilizacao_p text, ie_commit_p text, nm_usuario_p text) AS $body$
DECLARE



/*ie_utilizacao_p
A	- Aprovação da solicitação de compras
M	- No momento de enviar manualmente a solicitação para a integração*/
cd_estabelecimento_w				bigint;
nr_item_solic_compra_w				bigint;
cd_material_w					integer;
nr_item_solic_compra_entr_w				bigint;
dt_referencia_w					timestamp;
qt_entrega_atrasada_w				double precision;
dt_entrega_solicitada_w				timestamp;
dt_entrega_solicitada_ww			timestamp;
ds_historico_w					varchar(2000);
ie_somente_dia_util_w				varchar(1);
qt_dias_postergar_w				integer;

c01 CURSOR FOR
SELECT	nr_item_solic_compra,
	cd_material
from	solic_compra_item
where	nr_solic_compra = nr_solic_compra_p
order by nr_item_solic_compra;

c02 CURSOR FOR
SELECT	dt_entrega_solicitada
from	solic_compra_item_entrega
where	nr_solic_compra = nr_solic_compra_p
and	nr_item_solic_compra = nr_item_solic_compra_w
and	trunc(dt_entrega_solicitada) < trunc(clock_timestamp());


BEGIN

select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	solic_compra
where	nr_solic_compra = nr_solic_compra_p;

open C01;
loop
fetch C01 into
	nr_item_solic_compra_w,
	cd_material_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	SELECT * FROM obter_qt_dias_post_sc(cd_estabelecimento_w, cd_material_w, nm_usuario_p, qt_dias_postergar_w, ie_somente_dia_util_w) INTO STRICT qt_dias_postergar_w, ie_somente_dia_util_w;

	if (ie_somente_dia_util_w = 'S') then
		dt_referencia_w		:= obter_proximo_dia_util(cd_estabelecimento_w, trunc(clock_timestamp(),'dd') + qt_dias_postergar_w);
	else
		dt_referencia_w		:= trunc(clock_timestamp(),'dd') + qt_dias_postergar_w;
	end if;

	select	coalesce(sum(qt_entrega_solicitada),0)
	into STRICT	qt_entrega_atrasada_w
	from	solic_compra_item_entrega
	where	nr_solic_compra = nr_solic_compra_p
	and	nr_item_solic_compra = nr_item_solic_compra_w
	and	trunc(dt_entrega_solicitada) < trunc(clock_timestamp());

	if (qt_entrega_atrasada_w > 0) then

		select	coalesce(max(nr_item_solic_compra_entr),0)
		into STRICT	nr_item_solic_compra_entr_w
		from	solic_compra_item_entrega
		where	nr_solic_compra = nr_solic_compra_p
		and	nr_item_solic_compra = nr_item_solic_compra_w
		and	trunc(dt_entrega_solicitada) = trunc(dt_referencia_w);

		if (nr_item_solic_compra_entr_w > 0) then

			update	solic_compra_item_entrega
			set	qt_entrega_solicitada = qt_entrega_solicitada + qt_entrega_atrasada_w
			where	nr_solic_compra = nr_solic_compra_p
			and	nr_item_solic_compra = nr_item_solic_compra_w
			and	nr_item_solic_compra_entr = nr_item_solic_compra_entr_w;
		else
			select	coalesce(max(nr_item_solic_compra_entr),0) + 1
			into STRICT	nr_item_solic_compra_entr_w
			from	solic_compra_item_entrega
			where	nr_solic_compra = nr_solic_compra_p
			and	nr_item_solic_compra = nr_item_solic_compra_w;

			insert into solic_compra_item_entrega(
				nr_solic_compra,
				nr_item_solic_compra,
				nr_item_solic_compra_entr,
				qt_entrega_solicitada,
				dt_entrega_solicitada,
				dt_atualizacao,
				nm_usuario)
			values (	nr_solic_compra_p,
				nr_item_solic_compra_w,
				nr_item_solic_compra_entr_w,
				qt_entrega_atrasada_w,
				dt_referencia_w,
				clock_timestamp(),
				nm_usuario_p);
		end if;

	open C02;
	loop
	fetch C02 into
		dt_entrega_solicitada_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		if (ie_utilizacao_p = 'A') then
			ds_historico_w	:= substr(	WHEB_MENSAGEM_PCK.get_texto(306514,'NR_ITEM_SOLIC_COMPRA_W=' || nr_item_solic_compra_w || ';' || 'DT_ENTREGA_SOLICITADA_W=' || to_char(dt_entrega_solicitada_w,'dd/mm/yyyy') || ';' ||
										'DT_ATUAL_W=' || to_char(dt_referencia_w,'dd/mm/yyyy') || ';' || 'DS_PROCEDURE_W=' || 'POSTERGAR_ENTREGAS_SOLIC' || ';' ||
										'NM_USUARIO_W=' || obter_nome_usuario(nm_usuario_p)),1,2000);
		elsif (ie_utilizacao_p = 'M') then
			ds_historico_w	:= substr(	WHEB_MENSAGEM_PCK.get_texto(306518,'NR_ITEM_SOLIC_COMPRA_W=' || nr_item_solic_compra_w || ';' || 'DT_ENTREGA_SOLICITADA_W=' || to_char(dt_entrega_solicitada_w,'dd/mm/yyyy')  || ';' ||
										'DT_REFERENCIA=' || to_char(dt_referencia_w,'dd/mm/yyyy') || ';' || 'DS_PROCEDURE_W=' || 'POSTERGAR_ENTREGAS_SOLIC' || ';' ||
										'NM_USUARIO_W=' || obter_nome_usuario(nm_usuario_p)),1,2000);
		end if;

		CALL gerar_hist_solic_sem_commit(
				nr_solic_compra_p,
				WHEB_MENSAGEM_PCK.get_texto(297039),
				ds_historico_w,
				'ADE',
				nm_usuario_p);

		end;
	end loop;
	close C02;

	delete	from solic_compra_item_entrega
	where	nr_solic_compra = nr_solic_compra_p
	and	nr_item_solic_compra = nr_item_solic_compra_w
	and	trunc(dt_entrega_solicitada) < trunc(clock_timestamp());

	select	min(dt_entrega_solicitada)
	into STRICT	dt_entrega_solicitada_ww
	from	solic_compra_item_entrega
	where	nr_solic_compra = nr_solic_compra_p
	and	nr_item_solic_compra = nr_item_solic_compra_w;

	if (dt_entrega_solicitada_ww IS NOT NULL AND dt_entrega_solicitada_ww::text <> '') then
		update	solic_compra_item
		set	dt_solic_item = dt_entrega_solicitada_ww
		where	nr_solic_compra = nr_solic_compra_p
		and	nr_item_solic_compra = nr_item_solic_compra_w;
	end if;

	end if;
	end;
end loop;
close C01;

if (ie_commit_p = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE postergar_entregas_solic ( nr_solic_compra_p bigint, ie_utilizacao_p text, ie_commit_p text, nm_usuario_p text) FROM PUBLIC;

