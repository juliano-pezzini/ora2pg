-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_duracao_proc ( cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_seq_agenda_p bigint, cd_procedimento_p text, ie_origem_proced_p text, nr_seq_proc_interno_p text, ie_lado_p text, cd_convenio_p text, cd_categoria_p text, cd_plano_p text, ie_ajustar_min_p INOUT text, ds_ajustar_min_p INOUT text, ie_acao_retorno_p INOUT text, cd_agenda_p bigint default null, cd_medico_exec_p text default null, cd_pessoa_fisica_p text default null, ie_is_insert_proc_adic_p text default 'N') AS $body$
DECLARE


/* variaveis */

cd_agenda_w		bigint;
dt_agenda_w		timestamp;
cd_medico_exec_w		varchar(10);
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_proc_interno_w	bigint;
nr_minuto_duracao_w	bigint;

ie_ajustar_min_w		varchar(1) 	:= 'N';
ds_ajustar_min_w		varchar(255)	:= null;
qt_min_proc_w		bigint 	:= 0;
qt_min_agenda_w		bigint 	:= 0;

ie_param_sobreposicao_w	varchar(1);
ie_sobreposicao_w		varchar(1);
ie_atualiza_dt_menor_w	varchar(1);
cd_pessoa_fisica_w	varchar(10);
ie_lado_w		varchar(1);
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_plano_w		varchar(10);
ie_acao_retorno_w		varchar(10) := 'ALERT';

/* obter exame agenda */

c01 CURSOR FOR
SELECT	cd_agenda,
	hr_inicio,
	cd_medico_exec,
	cd_procedimento,
	ie_origem_proced,
	nr_seq_proc_interno,
	nr_minuto_duracao,
	cd_pessoa_fisica,
	ie_lado,
	cd_convenio,
	cd_categoria,
	cd_plano
from	agenda_paciente
where	nr_sequencia = nr_seq_agenda_p;

/* obter exames adicionais */

c02 CURSOR FOR
SELECT	a.cd_procedimento,
	a.ie_origem_proced,
	a.nr_seq_proc_interno,
	a.ie_lado,
	b.cd_convenio,
	b.cd_categoria,
	b.cd_plano
from	agenda_paciente_proc a,
	agenda_paciente b
where	a.nr_sequencia = b.nr_sequencia
and	a.nr_sequencia = nr_seq_agenda_p;


BEGIN

if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then

	/* obter parametros */

	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_CONSISTE_DURACAO', 'N')
	into STRICT	ie_param_sobreposicao_w
	;

	ie_atualiza_dt_menor_w := obter_param_usuario(820, 129, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_atualiza_dt_menor_w);

	/* obter duracao exame agenda */

	open c01;
	loop
	fetch c01 into	cd_agenda_w,
			dt_agenda_w,
			cd_medico_exec_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_proc_interno_w,
			nr_minuto_duracao_w,
			cd_pessoa_fisica_w,
			ie_lado_w,
			cd_convenio_w,
			cd_categoria_w,
			cd_plano_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select	obter_tempo_duracao_proced(cd_agenda_w, cd_medico_exec_w, cd_procedimento_w, ie_origem_proced_w,cd_pessoa_fisica_w, nr_seq_proc_interno_w, ie_lado_w, cd_convenio_w, cd_categoria_w, cd_plano_w, nr_seq_agenda_p, null)
		into STRICT	qt_min_proc_w
		;

		qt_min_agenda_w	:= qt_min_agenda_w + qt_min_proc_w;

		end;
	end loop;
	close c01;

	/* obter duracao exames adicionais */

	open c02;
	loop
	fetch c02 into	cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_proc_interno_w,
			ie_lado_w,
			cd_convenio_w,
			cd_categoria_w,
			cd_plano_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		select	obter_tempo_duracao_proced(cd_agenda_w, cd_medico_exec_w, cd_procedimento_w, ie_origem_proced_w,cd_pessoa_fisica_w, nr_seq_proc_interno_w, ie_lado_w, cd_convenio_w, cd_categoria_w, cd_plano_w, nr_seq_agenda_p, null)
		into STRICT	qt_min_proc_w
		;

		qt_min_agenda_w	:= qt_min_agenda_w + qt_min_proc_w;

		end;
	end loop;
	close c02;

	/* considera o procedimento a ser adicionado */

	if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') or (nr_seq_proc_interno_p IS NOT NULL AND nr_seq_proc_interno_p::text <> '') then

		if (ie_is_insert_proc_adic_p = 'S') then
			select	obter_tempo_duracao_proced(cd_agenda_w, cd_medico_exec_p, cd_procedimento_p, ie_origem_proced_p, cd_pessoa_fisica_p, nr_seq_proc_interno_p, ie_lado_p, cd_convenio_p, cd_categoria_p, cd_plano_p, nr_seq_agenda_p, null)
			into STRICT	qt_min_proc_w
			;
		else
			qt_min_proc_w := 0;
		end if;

		qt_min_agenda_w	:= qt_min_agenda_w + qt_min_proc_w;

	end if;


	/* ajustar duracao agenda */

	if (qt_min_agenda_w > nr_minuto_duracao_w) or
		(ie_atualiza_dt_menor_w = 'S' AND qt_min_agenda_w > 0) then

		/* verificar sobreposicao */

		select	obter_se_sobreposicao_horario(cd_agenda_w, dt_agenda_w, qt_min_agenda_w)
		into STRICT	ie_sobreposicao_w
		;

		if (ie_param_sobreposicao_w = 'N') or (ie_sobreposicao_w = 'N') then

			ie_ajustar_min_w 		:= 'S';
			ds_ajustar_min_w		:= null;

			update	agenda_paciente
			set	nr_minuto_duracao	= qt_min_agenda_w,
				nm_usuario			= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where	nr_sequencia	= nr_seq_agenda_p;
			commit;

		elsif (ie_param_sobreposicao_w = 'A') and (ie_sobreposicao_w = 'S') then

			ie_ajustar_min_w 		:= 'S';
			ds_ajustar_min_w		:= wheb_mensagem_pck.get_texto(795429);

			update	agenda_paciente
			set	nr_minuto_duracao	= qt_min_agenda_w,
				nm_usuario			= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where	nr_sequencia	= nr_seq_agenda_p;
			commit;

		elsif (ie_param_sobreposicao_w = 'I') and (ie_sobreposicao_w = 'S') then

			ie_acao_retorno_w		:= 'ABORT';
			ie_ajustar_min_w 		:= 'N';
			ds_ajustar_min_w		:= wheb_mensagem_pck.get_texto(795428) || chr(10) || wheb_mensagem_pck.get_texto(795423);

		end if;

	end if;

end if;

ie_ajustar_min_p 	:= ie_ajustar_min_w;
ds_ajustar_min_p 	:= ds_ajustar_min_w;
ie_acao_retorno_p 	:= ie_acao_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_duracao_proc ( cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_seq_agenda_p bigint, cd_procedimento_p text, ie_origem_proced_p text, nr_seq_proc_interno_p text, ie_lado_p text, cd_convenio_p text, cd_categoria_p text, cd_plano_p text, ie_ajustar_min_p INOUT text, ds_ajustar_min_p INOUT text, ie_acao_retorno_p INOUT text, cd_agenda_p bigint default null, cd_medico_exec_p text default null, cd_pessoa_fisica_p text default null, ie_is_insert_proc_adic_p text default 'N') FROM PUBLIC;

