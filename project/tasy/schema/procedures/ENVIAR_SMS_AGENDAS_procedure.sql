-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_sms_agendas ( ds_lista_agendas_p text, ds_remetente_p text, ds_mensagem_p text, ie_confirmar_p text, nm_usuario_p text) AS $body$
DECLARE

	
ds_lista_agendas_w	varchar(2000);
nr_pos_virgula_w	bigint;
nr_seq_agenda_w		agenda_paciente.nr_sequencia%type;
cd_agenda_w		bigint;
nr_telefone_w		varchar(40);
ie_utiliza_DDD_w 	varchar(1);

	

BEGIN

ie_utiliza_DDD_w := obter_param_usuario(821, 324, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_utiliza_DDD_w);

if (ds_lista_agendas_p IS NOT NULL AND ds_lista_agendas_p::text <> '') and (ds_remetente_p IS NOT NULL AND ds_remetente_p::text <> '') and (ds_mensagem_p IS NOT NULL AND ds_mensagem_p::text <> '') then
	begin
	ds_lista_agendas_w	:= ds_lista_agendas_p;
	
	while(ds_lista_agendas_w IS NOT NULL AND ds_lista_agendas_w::text <> '') loop
		begin
		nr_pos_virgula_w	:= position(',' in ds_lista_agendas_w);
		if (nr_pos_virgula_w > 0) then
			begin
			nr_seq_agenda_w		:= substr(ds_lista_agendas_w,0,nr_pos_virgula_w-1);
			ds_lista_agendas_w	:= substr(ds_lista_agendas_w,nr_pos_virgula_w+1,length(ds_lista_agendas_w));			
			end;
		else
			begin
			nr_seq_agenda_w		:= (ds_lista_agendas_w)::numeric;
			ds_lista_agendas_w	:= null;
			end;
		end if;	
		
		if (coalesce(nr_seq_agenda_w,0) > 0) then
			begin
			
			select	coalesce(a.cd_agenda,0),
					substr(CASE WHEN ie_utiliza_DDD_w='S' THEN  obter_dados_pf(b.cd_pessoa_fisica,'TCD')  ELSE obter_dados_pf(b.cd_pessoa_Fisica,'TC') END ,1,15)
			into STRICT	cd_agenda_w,
					nr_telefone_w
			from	pessoa_fisica b,
					agenda_consulta a
			where	b.cd_pessoa_fisica = a.cd_pessoa_fisica
			and		a.nr_sequencia = nr_seq_agenda_w;
			
			if (coalesce(cd_agenda_w,0) > 0) and (nr_telefone_w IS NOT NULL AND nr_telefone_w::text <> '') then
				begin
				CALL enviar_sms_agenda(ds_remetente_p, nr_telefone_w, ds_mensagem_p, cd_agenda_w, nr_seq_agenda_w, nm_usuario_p);
				
				if (ie_confirmar_p = 'S') then
					begin
					update	agenda_consulta
					set	dt_confirmacao 		= clock_timestamp(),
						nm_usuario_confirm 	= nm_usuario_p
					where	nr_sequencia		= nr_seq_agenda_w;		
					end;
				end if;	
				
				CALL alterar_status_agecons(cd_agenda_w, nr_seq_agenda_w, 'AC', null, null, 'S', nm_usuario_p, null);
				end;
			end if;			
			end;
		end if;
		end;
	end loop;
	end;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_sms_agendas ( ds_lista_agendas_p text, ds_remetente_p text, ds_mensagem_p text, ie_confirmar_p text, nm_usuario_p text) FROM PUBLIC;

