-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE confirma_cid_rotina ( ie_insert_diag_med_p text, nr_atendimento_p bigint, ie_medico_p text, cd_pessoa_fisica_p text, nr_seq_lista_cid_p text, dt_diagnostico_p timestamp, nr_seq_reg_elemento_p bigint, nm_usuario_p text, ie_liberado_p text default 'N') AS $body$
DECLARE

 
cd_medico_resp_w		varchar(10);
cd_medico_w		varchar(10);
dt_alta_w			timestamp;
qt_existe_reg_w		bigint;
dt_diag_cid_w		timestamp;
nr_seq_lista_w		varchar(16000);
nr_pos_virgula_w		bigint;	
nr_sequencia_w		varchar(255);
cd_doenca_w		varchar(10);
nr_seq_mentor_w		bigint;
nr_seq_interno_w	bigint;


BEGIN 
 
if (coalesce(dt_diagnostico_p::text, '') = '') then 
 
	select	clock_timestamp() 
	into STRICT	dt_diag_cid_w 
	;
else	 
	dt_diag_cid_w	:= dt_diagnostico_p;
end if;
 
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (nr_atendimento_p <> 0) then 
	begin 
	 
	if (nr_seq_lista_cid_p IS NOT NULL AND nr_seq_lista_cid_p::text <> '') then 
		begin 
 
		nr_seq_lista_w	:= nr_seq_lista_cid_p;
 
		while(nr_seq_lista_w IS NOT NULL AND nr_seq_lista_w::text <> '') loop 
			begin 
 
			nr_pos_virgula_w	:= position(',' in nr_seq_lista_w);
 
			if (nr_pos_virgula_w > 0) then 
				begin 
 
				nr_sequencia_w	:= substr(nr_seq_lista_w,1,nr_pos_virgula_w-1);
				nr_seq_lista_w	:= substr(nr_seq_lista_w,nr_pos_virgula_w+1,length(nr_seq_lista_w));
 
				if ((nr_sequencia_w)::numeric  > 0) then 
					begin 
 
					if (ie_insert_diag_med_p = 'S') then 
						begin 
		 
						select	count(*) 
						into STRICT	qt_existe_reg_w 
						from	atendimento_paciente 
						where	nr_atendimento = nr_atendimento_p;						
			 
						if (qt_existe_reg_w > 0) then 
							begin 
 
							select	cd_medico_resp, 
								dt_alta 
							into STRICT	cd_medico_resp_w, 
								dt_alta_w 
							from	atendimento_paciente 
							where	nr_atendimento = nr_atendimento_p;
 
							dt_diag_cid_w	:= dt_diag_cid_w - (1/24/60/60);
 
							if (ie_medico_p = 'S') then 
								cd_medico_w	:= cd_pessoa_fisica_p;
							else 
								cd_medico_w	:= cd_medico_resp_w;
							end if;	
 
							CALL gerar_diagnostico_medico(nr_atendimento_p, dt_diag_cid_w, cd_medico_w, nm_usuario_p);
		 
							end;
						end if;
						end;
					end if;
 
					SELECT * FROM Gerar_diagnostico_rotina(nr_atendimento_p, dt_diag_cid_w, (nr_sequencia_w)::numeric , nm_usuario_p, ie_liberado_p, null, null, null, null, nr_seq_mentor_w, nr_seq_interno_w) INTO STRICT nr_seq_mentor_w, nr_seq_interno_w;
 
					if (nr_seq_reg_elemento_p <> 0) then 
						begin 
 
						select	cd_doenca 
						into STRICT	cd_doenca_w 
                        				from	cid_rotina 
			                        where	nr_sequencia = (nr_sequencia_w)::numeric;
 
						CALL Ehr_Vincular_Elemento_item(nr_seq_reg_elemento_p, nr_atendimento_p, cd_doenca_w, dt_diag_cid_w, nm_usuario_p);
 
						end;
					end if;
 
					end;
				end if;
				end;
			end if;
 
			end;
		end loop;
		end;
	end if;	
	end;
elsif (nr_atendimento_p = 0) then 
	begin 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(45322);
	end;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE confirma_cid_rotina ( ie_insert_diag_med_p text, nr_atendimento_p bigint, ie_medico_p text, cd_pessoa_fisica_p text, nr_seq_lista_cid_p text, dt_diagnostico_p timestamp, nr_seq_reg_elemento_p bigint, nm_usuario_p text, ie_liberado_p text default 'N') FROM PUBLIC;

