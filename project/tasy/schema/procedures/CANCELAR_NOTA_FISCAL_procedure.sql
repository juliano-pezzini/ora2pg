-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cancelar_nota_fiscal ( nr_sequencia_p bigint, nr_interno_conta_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_interno_conta_w      		bigint;
nr_interno_conta_nova_w   		bigint;
nr_interno_conta_ler_w			bigint;
nr_seq_nf_w				bigint;
nr_sequencia_w				bigint;
nr_seq_nova_w				bigint;
cd_acao_w				varchar(1);
qt_adic_w				smallint;
qt_acao_w				smallint;
vl_titulo_w				double precision;
vl_nf_w					double precision;
nr_titulo_w				bigint;
nr_seq_titulo_w				bigint;
cd_moeda_w				integer;
cd_tipo_recebimento_w			integer 	:= 4;
cd_estabelecimento_w			smallint;

c01 CURSOR FOR 
SELECT	nr_sequencia, 
	CASE WHEN cd_acao='1' THEN '2'  ELSE '1' END  cd_acao, 
	nr_interno_conta_w, 
	1, 
	-1 
from	procedimento_paciente 
where	nr_interno_conta	= nr_interno_conta_p 

union
 
SELECT	nr_sequencia, 
	cd_acao, 
	nr_interno_conta_nova_w, 
	2, 
	1 
from	procedimento_paciente 
where	nr_interno_conta	= nr_interno_conta_p;

c02 CURSOR FOR 
SELECT	nr_sequencia, 
	CASE WHEN cd_acao='1' THEN '2'  ELSE '1' END  cd_acao, 
	nr_interno_conta_w, 
	1, 
	-1 
from	Material_atend_paciente 
where	nr_interno_conta	= nr_interno_conta_p 

union
 
SELECT	nr_sequencia, 
	cd_acao, 
	nr_interno_conta_nova_w, 
	2, 
	1 
from	Material_atend_paciente 
where	nr_interno_conta	= nr_interno_conta_p;

c03 CURSOR FOR 
SELECT	nr_titulo, 
	vl_saldo_titulo, 
	cd_moeda 
from	Titulo_receber 
where	nr_interno_conta	= nr_interno_conta_p;


BEGIN 
 
begin 
select	nr_sequencia, 
	vl_total_nota, 
	cd_estabelecimento 
into STRICT	nr_seq_nf_w, 
	vl_nf_w, 
	cd_estabelecimento_w 
from 	nota_fiscal 
where	nr_sequencia		= nr_sequencia_p 
and	nr_interno_conta	= nr_interno_conta_p;
exception 
	when	others then 
	begin 
   	CALL wheb_mensagem_pck.exibir_mensagem_abort(265265,'');
		--Mensagem: Conta ou Nota Fiscal n√£o Encontradas! 
	end;
end;
 
select	coalesce(sum(vl_saldo_titulo),0) 
into STRICT	vl_titulo_w 
from	Titulo_receber 
where	nr_interno_conta	= nr_interno_conta_p;
 
/* Desativado em 28/05/2001 por marcus 
if	(vl_nf_w <> vl_titulo_w) then 
end if; 
*/
 
 
select	nextval('conta_paciente_seq') 
into STRICT	nr_interno_conta_w
;
 
insert	into Conta_Paciente(nr_atendimento, 
	dt_acerto_conta, 
	ie_status_acerto, 
	dt_periodo_inicial, 
	dt_periodo_final, 
	dt_atualizacao, 
	nm_usuario, 
	cd_convenio_parametro, 
	nr_protocolo, 
	dt_mesano_referencia, 
	dt_mesano_contabil, 
	cd_convenio_calculo, 
	cd_categoria_calculo, 
	nr_interno_conta, 
	nr_seq_protocolo, 
	cd_categoria_parametro, 
	ds_inconsistencia, 
	dt_recalculo, 
	cd_estabelecimento) 
SELECT	a.nr_atendimento, 
	a.dt_acerto_conta + (1/86400), 
	a.ie_status_acerto, 
	a.dt_periodo_inicial, 
	a.dt_periodo_final, 
	clock_timestamp(), 
	nm_usuario_p, 
	a.cd_convenio_parametro, 
	'0', 
	trunc(b.dt_ref_valida,'dd'), 
	a.dt_mesano_contabil, 
	a.cd_convenio_calculo, 
	a.cd_categoria_calculo, 
	nr_interno_conta_w, 
	null, 
	a.cd_categoria_parametro, 
	a.ds_inconsistencia, 
	a.dt_recalculo, 
	a.cd_estabelecimento 
from	Convenio b, 
	conta_paciente a 
where	nr_interno_conta	= nr_interno_conta_p 
and	b.cd_convenio		= a.cd_convenio_parametro;
 
select	nextval('conta_paciente_seq') 
into STRICT	nr_interno_conta_nova_w
;
 
insert	into Conta_Paciente(nr_atendimento, 
	dt_acerto_conta, 
	ie_status_acerto, 
	dt_periodo_inicial, 
	dt_periodo_final, 
	dt_atualizacao, 
	nm_usuario, 
	cd_convenio_parametro, 
	nr_protocolo, 
	dt_mesano_referencia, 
	dt_mesano_contabil, 
	cd_convenio_calculo, 
	cd_categoria_calculo, 
	nr_interno_conta, 
	nr_seq_protocolo, 
	cd_categoria_parametro, 
	ds_inconsistencia, 
	dt_recalculo, 
	cd_estabelecimento) 
SELECT	a.nr_atendimento, 
	a.dt_acerto_conta + (2/86400), 
	a.ie_status_acerto, 
	a.dt_periodo_inicial, 
	a.dt_periodo_final, 
	clock_timestamp(), 
	nm_usuario_p, 
	a.cd_convenio_parametro, 
	'0', 
	trunc(b.dt_ref_valida,'dd'), 
	a.dt_mesano_contabil, 
	a.cd_convenio_calculo, 
	a.cd_categoria_calculo, 
	nr_interno_conta_nova_w, 
	null, 
	a.cd_categoria_parametro, 
	a.ds_inconsistencia, 
	a.dt_recalculo, 
	a.cd_estabelecimento 
from	Convenio b, 
	conta_paciente a 
where	nr_interno_conta	= nr_interno_conta_p 
and	b.cd_convenio		= a.cd_convenio_parametro;
 
OPEN	C01;
LOOP 
FETCH	C01 into 
	nr_sequencia_w, 
	cd_acao_w, 
	nr_interno_conta_ler_w, 
	qt_adic_w, 
	qt_acao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
 
	select	nextval('procedimento_paciente_seq') 
	into STRICT	nr_seq_nova_w 
	;
 
	insert	into procedimento_paciente(nr_sequencia, 
		nr_atendimento, 
		dt_entrada_unidade, 
		cd_procedimento, 
		dt_procedimento, 
		qt_procedimento, 
		dt_atualizacao, 
		nm_usuario, 
		cd_medico, 
		cd_convenio, 
		cd_categoria, 
		cd_pessoa_fisica, 
		dt_prescricao, 
		ds_observacao, 
		vl_procedimento, 
		vl_medico, 
		vl_anestesista, 
		vl_materiais, 
		cd_edicao_amb, 
		cd_tabela_servico, 
		dt_vigencia_preco, 
		cd_procedimento_princ, 
		dt_procedimento_princ, 
		dt_acerto_conta, 
		dt_acerto_convenio, 
		dt_acerto_medico, 
		vl_auxiliares, 
		vl_custo_operacional, 
		tx_medico, 
		tx_anestesia, 
		nr_prescricao, 
		nr_sequencia_prescricao, 
		cd_motivo_exc_conta, 
		ds_compl_motivo_excon, 
		cd_acao, 
		qt_devolvida, 
		cd_motivo_devolucao, 
		nr_cirurgia, 
		nr_doc_convenio, 
		cd_medico_executor, 
		ie_cobra_pf_pj, 
		nr_laudo, 
		dt_conta, 
		cd_setor_atendimento, 
		cd_conta_contabil, 
		cd_procedimento_aih, 
		ie_origem_proced, 
		nr_aih, 
		ie_responsavel_credito, 
		tx_procedimento, 
		cd_equipamento, 
		ie_valor_informado, 
		cd_estabelecimento_custo, 
		cd_tabela_custo, 
		cd_situacao_glosa, 
		nr_lote_contabil, 
		cd_procedimento_convenio, 
		nr_seq_autorizacao, 
		ie_tipo_servico_sus, 
		ie_tipo_ato_sus, 
		cd_cgc_prestador, 
		nr_nf_prestador, 
		cd_atividade_prof_bpa, 
		nr_interno_conta, 
		nr_seq_proc_princ, 
		ie_guia_informada, 
		dt_inicio_procedimento, 
		ie_emite_conta, 
		ie_funcao_medico, 
		ie_classif_sus, 
		cd_especialidade, 
		nm_usuario_original, 
		nr_seq_proc_pacote, 
		ie_tipo_proc_sus, 
		cd_setor_receita, 
		vl_adic_plant, 
		nr_seq_atepacu, 
		ie_proc_princ_atend, 
		cd_medico_req, 
		ie_tipo_guia, 
		ie_video, 
		ie_auditoria, 
		nr_seq_aih) 
	SELECT	nr_seq_nova_w, 
		nr_atendimento, 
		dt_entrada_unidade, 
		cd_procedimento, 
		dt_procedimento + (qt_adic_w / 86400), 
		qt_procedimento * qt_acao_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		cd_medico, 
		cd_convenio, 
		cd_categoria, 
		cd_pessoa_fisica, 
		dt_prescricao, 
		ds_observacao, 
		vl_procedimento * qt_acao_w, 
		vl_medico * qt_acao_w, 
		vl_anestesista * qt_acao_w, 
		vl_materiais * qt_acao_w, 
		cd_edicao_amb, 
		cd_tabela_servico, 
		dt_vigencia_preco, 
		cd_procedimento_princ, 
		dt_procedimento_princ, 
		dt_acerto_conta + (qt_adic_w / 86400), 
		dt_acerto_convenio, 
		dt_acerto_medico, 
		vl_auxiliares * qt_acao_w, 
		vl_custo_operacional * qt_acao_w, 
		tx_medico, 
		tx_anestesia, 
		nr_prescricao, 
		nr_sequencia_prescricao, 
		cd_motivo_exc_conta, 
		ds_compl_motivo_excon, 
		cd_acao_w, 
		qt_devolvida * qt_acao_w, 
		cd_motivo_devolucao, 
		nr_cirurgia, 
		nr_doc_convenio, 
		cd_medico_executor, 
		ie_cobra_pf_pj, 
		nr_laudo, 
		dt_conta, 
		cd_setor_atendimento, 
		cd_conta_contabil, 
		cd_procedimento_aih, 
		ie_origem_proced, 
		nr_aih, 
		ie_responsavel_credito, 
		tx_procedimento, 
		cd_equipamento, 
		CASE WHEN qt_adic_w=1 THEN 'S'  ELSE ie_valor_informado END , 
		cd_estabelecimento_custo, 
		cd_tabela_custo, 
		cd_situacao_glosa, 
		0, 
		cd_procedimento_convenio, 
		nr_seq_autorizacao, 
		ie_tipo_servico_sus, 
		ie_tipo_ato_sus, 
		cd_cgc_prestador, 
		nr_nf_prestador, 
		cd_atividade_prof_bpa, 
		nr_interno_conta_ler_w, 
		nr_seq_proc_princ, 
		ie_guia_informada, 
		dt_inicio_procedimento, 
		ie_emite_conta, 
		ie_funcao_medico, 
		ie_classif_sus, 
		cd_especialidade, 
		nm_usuario_original, 
		nr_seq_proc_pacote, 
		ie_tipo_proc_sus, 
		cd_setor_receita, 
		vl_adic_plant * qt_acao_w, 
		nr_seq_atepacu, 
		ie_proc_princ_atend, 
		cd_medico_req, 
		ie_tipo_guia, 
		ie_video, 
		ie_auditoria, 
		nr_seq_aih 
	from	procedimento_paciente 
	where	nr_sequencia	= nr_sequencia_w;
 
	insert	into procedimento_participante(nr_sequencia, 
		nr_seq_partic, 
		ie_funcao, 
		dt_atualizacao, 
		nm_usuario, 
		cd_pessoa_fisica, 
		cd_cgc, 
		ie_valor_informado, 
		ie_emite_conta, 
		vl_participante, 
		vl_conta, 
		nr_lote_contabil, 
		nr_conta_medico, 
		ie_tipo_servico_sus, 
		ie_tipo_ato_sus, 
		qt_ponto_sus, 
		vl_ponto_sus, 
		vl_original, 
		ie_responsavel_credito, 
		pr_procedimento) 
	SELECT	nr_seq_nova_w, 
		nr_seq_partic, 
		ie_funcao, 
		clock_timestamp(), 
		nm_usuario_p, 
		cd_pessoa_fisica, 
		cd_cgc, 
		CASE WHEN qt_adic_w=1 THEN 'S'  ELSE ie_valor_informado END , 
		ie_emite_conta, 
		vl_participante * qt_acao_w, 
		vl_conta * qt_acao_w, 
		nr_lote_contabil, 
		nr_conta_medico, 
		ie_tipo_servico_sus, 
		ie_tipo_ato_sus, 
		qt_ponto_sus * qt_acao_w, 
		vl_ponto_sus * qt_acao_w, 
		vl_original * qt_acao_w, 
		ie_responsavel_credito, 
		pr_procedimento 
	from	procedimento_participante 
	where	nr_sequencia	= nr_sequencia_w;
 
	Insert	into proc_paciente_valor(nr_seq_procedimento, 
		nr_sequencia, 
		ie_tipo_valor, 
 		dt_atualizacao, 
		nm_usuario, 
		vl_procedimento, 
 		vl_medico, 
		vl_anestesista, 
		vl_materiais, 
		vl_auxiliares, 
 		vl_custo_operacional, 
		cd_convenio, 
		cd_categoria, 
		pr_valor) 
	SELECT	nr_seq_nova_w, 
		nr_sequencia, 
		ie_tipo_valor, 
 		clock_timestamp(), 
		nm_usuario_p, 
		vl_procedimento * qt_acao_w, 
 		vl_medico * qt_acao_w, 
		vl_anestesista * qt_acao_w, 
 		vl_materiais * qt_acao_w, 
		vl_auxiliares * qt_acao_w, 
 		vl_custo_operacional * qt_acao_w, 
		cd_convenio, 
 		cd_categoria, 
		pr_valor 
	from	proc_paciente_valor 
	where	nr_seq_procedimento	= nr_sequencia_w;
 
END	LOOP;
CLOSE	C01;
 
OPEN	C02;
LOOP 
FETCH	C02 into 
	nr_sequencia_w, 
	cd_acao_w, 
	nr_interno_conta_ler_w, 
	qt_adic_w, 
	qt_acao_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
 
	select	nextval('material_atend_paciente_seq') 
	into STRICT	nr_seq_nova_w 
	;
 
	insert	into material_atend_paciente(nr_sequencia, 
		nr_atendimento, 
		dt_entrada_unidade, 
		cd_material, 
		dt_atendimento, 
		cd_unidade_medida, 
		qt_material, 
		dt_atualizacao, 
		nm_usuario, 
		cd_convenio, 
		cd_categoria, 
		dt_prescricao, 
		cd_material_prescricao, 
		ie_via_aplicacao, 
		ds_observacao, 
		vl_material, 
		cd_tab_preco_material, 
		dt_vigencia_tabela, 
		dt_acerto_conta, 
		dt_acerto_convenio, 
		nr_prescricao, 
		nr_sequencia_prescricao, 
		cd_motivo_exc_conta, 
		ds_compl_motivo_excon, 
		cd_local_estoque, 
		dt_atualizacao_estoque, 
		cd_acao, 
		cd_setor_atendimento, 
		qt_devolvida, 
		cd_motivo_devolucao, 
		nr_cirurgia, 
		nr_doc_convenio, 
		qt_executada, 
		dt_conta, 
		vl_unitario, 
		cd_proced_referencia, 
		cd_conta_contabil, 
		qt_ajuste_conta, 
		nr_aih, 
		ie_valor_informado, 
		cd_estabelecimento_custo, 
		cd_tabela_custo, 
		cd_situacao_glosa, 
		nr_lote_contabil, 
		cd_material_convenio, 
		nr_seq_autorizacao, 
		nr_interno_conta, 
		nr_seq_proc_princ, 
		ie_guia_informada, 
		cd_especialidade, 
		nm_usuario_original, 
		nr_seq_proc_pacote, 
		vl_tabela_original, 
		ie_emite_conta, 
		cd_setor_receita, 
		cd_cgc_fornecedor, 
		nr_seq_lote_fornec, 
		cd_material_exec, 
		nr_seq_atepacu, 
		ie_auditoria, 
		nr_seq_aih) 
	SELECT	nr_seq_nova_w, 
		nr_atendimento, 
		dt_entrada_unidade, 
		cd_material, 
		dt_atendimento + (qt_adic_w / 86400), 
		cd_unidade_medida, 
		qt_material * qt_acao_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		cd_convenio, 
		cd_categoria, 
		dt_prescricao, 
		cd_material_prescricao, 
		ie_via_aplicacao, 
		ds_observacao, 
		vl_material * qt_acao_w, 
		cd_tab_preco_material, 
		dt_vigencia_tabela, 
		dt_acerto_conta + (qt_adic_w / 86400), 
		dt_acerto_convenio, 
		nr_prescricao, 
		nr_sequencia_prescricao, 
		cd_motivo_exc_conta, 
		ds_compl_motivo_excon, 
		null, 
		null, 
		cd_acao_w, 
		cd_setor_atendimento, 
		qt_devolvida * qt_acao_w, 
		cd_motivo_devolucao, 
		nr_cirurgia, 
		nr_doc_convenio, 
		qt_executada * qt_acao_w, 
		dt_conta, 
		vl_unitario, 
		cd_proced_referencia, 
		cd_conta_contabil, 
		qt_ajuste_conta * qt_acao_w, 
		nr_aih, 
		CASE WHEN qt_adic_w=1 THEN 'S'  ELSE ie_valor_informado END , 
		cd_estabelecimento_custo, 
		cd_tabela_custo, 
		cd_situacao_glosa, 
		nr_lote_contabil, 
		cd_material_convenio, 
		nr_seq_autorizacao, 
		nr_interno_conta_ler_w, 
		nr_seq_proc_princ, 
		ie_guia_informada, 
		cd_especialidade, 
		nm_usuario_original, 
		nr_seq_proc_pacote, 
		vl_tabela_original * qt_acao_w, 
		ie_emite_conta, 
		cd_setor_receita, 
		cd_cgc_fornecedor, 
		nr_seq_lote_fornec, 
		cd_material_exec, 
		nr_seq_atepacu, 
		ie_auditoria, 
		nr_seq_aih 
	from	material_atend_paciente 
	where	nr_sequencia	= nr_sequencia_w;
 
	insert	into mat_atend_paciente_valor(nr_seq_material, 
		nr_sequencia, 
		ie_tipo_valor, 
		dt_atualizacao, 
		nm_usuario, 
		vl_material, 
		cd_convenio, 
		cd_categoria, 
		pr_valor) 
	SELECT	nr_seq_nova_w, 
		nr_sequencia, 
		ie_tipo_valor, 
		clock_timestamp(), 
		nm_usuario_p, 
		vl_material * qt_acao_w, 
		cd_convenio, 
		cd_categoria, 
		pr_valor 
	from	mat_atend_paciente_valor 
	where	nr_seq_material	= nr_sequencia_w;
 
END	LOOP;
CLOSE	C02;
 
update	conta_paciente 
set	ie_cancelamento		= 'C' 
where	nr_interno_conta	= nr_interno_conta_p;
 
update	conta_paciente 
set	ie_cancelamento		= 'E' 
where	nr_interno_conta	= nr_interno_conta_w;
 
/* Estornar a nota fiscal original */
 
CALL estornar_nota_fiscal(nr_sequencia_p, nm_usuario_p);
 
/* Atualizar as tabelas resumo da conta de estorno */
 
CALL Gerar_conta_paciente_guia(nr_interno_conta_w, 2);
CALL Atualizar_Resumo_Conta(nr_interno_conta_w, 2);
 
/* Atualizar as tabelas resumo da conta de estorno */
 
CALL Gerar_conta_paciente_guia(nr_interno_conta_nova_w, 2);
CALL Atualizar_Resumo_Conta(nr_interno_conta_nova_w, 2);
 
/* Baixar os Titulos a Receber */
 
select	coalesce(min(cd_tipo_recebimento),4) 
into STRICT	cd_tipo_recebimento_w 
from	tipo_recebimento 
where	ie_tipo_consistencia	= 4 
and   ((cd_estabelecimento = cd_estabelecimento_w) or (coalesce(cd_estabelecimento::text, '') = ''));
 
OPEN	C03;
LOOP 
FETCH	C03 into 
	nr_titulo_w, 
	vl_titulo_w, 
	cd_moeda_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
 
	select	coalesce(max(nr_sequencia),0) + 1 
	into STRICT	nr_seq_titulo_w 
	from	titulo_receber_liq 
	where	nr_titulo	= nr_titulo_w;
 
	insert	into Titulo_Receber_liq(nr_titulo, 
		nr_sequencia, 
		dt_recebimento, 
		vl_recebido, 
		vl_descontos, 
		vl_juros, 
		vl_multa, 
		cd_moeda, 
		dt_atualizacao, 
		nm_usuario, 
 		cd_tipo_recebimento, 
		ie_acao, 
		vl_rec_maior, 
		ie_lib_caixa, 
		vl_glosa, 
		nr_lote_contab_antecip, 
		nr_lote_contab_pro_rata, 
		nr_lote_contabil) 
	values (nr_titulo_w, 
		nr_seq_titulo_w, 
		clock_timestamp(), 
		vl_titulo_w, 
		0, 
		0, 
		0, 
		cd_moeda_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		cd_tipo_recebimento_w, 
		'I', 
		0, 
		'S', 
		0, 
		0, 
		0, 
		0);
 
	update	titulo_receber 
	set	vl_saldo_titulo	= 0, 
		dt_liquidacao	= clock_timestamp(), 
		nm_usuario	= nm_usuario_p, 
		dt_atualizacao	= clock_timestamp(), 
		ie_situacao	= 3 
	where	nr_titulo	= nr_titulo_w;
 
END	LOOP;
CLOSE	C03;
 
CALL gravar_agend_integracao(352, 'NR_SEQ_NOTA_FISCAL=' || nr_sequencia_p || ';');
 
COMMIT;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cancelar_nota_fiscal ( nr_sequencia_p bigint, nr_interno_conta_p bigint, nm_usuario_p text) FROM PUBLIC;

