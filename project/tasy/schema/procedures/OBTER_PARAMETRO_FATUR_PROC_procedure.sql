-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_parametro_fatur_proc ( cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_interno_conta_p bigint, ie_acao_p text, ds_erro_p INOUT text, cd_estab_p bigint, nm_usuario_p text, vl_procedimento_p bigint, cd_setor_atendimento_p bigint) AS $body$
DECLARE

 
 
/* 
'1' - Incluir 
'2' - Alterar 
'3' - Excluir 
'4' - Utilizar valor informado 
*/
 
 
ie_incluir_conta_w	varchar(1);
ie_alterar_conta_w	varchar(1);
ie_excluir_conta_w	varchar(1);
ie_utilizar_conta_w	varchar(1);
ds_erro_w		varchar(255) := '';
cd_grupo_proc_w		bigint;
cd_area_proc_w		bigint;
cd_especialidade_w	bigint;
qt_existe_regra_w	varchar(1);
ie_tipo_atendimento_w	smallint;
nr_seq_etapa_w		bigint;

c01 CURSOR FOR 
	SELECT	coalesce(ie_incluir_conta,'N'), 
		coalesce(ie_alterar_conta,'N'), 
		coalesce(ie_excluir_conta,'N'), 
		coalesce(ie_utiliza_valor_inf,'N')       
	from	conv_regra_fatur_proc 
	where	ie_situacao = 'A' 
	and	coalesce(cd_convenio, coalesce(cd_convenio_p,0))		    = coalesce(cd_convenio_p,0) 
	and	coalesce(cd_perfil, coalesce(Obter_perfil_Ativo,0))		= coalesce(Obter_perfil_Ativo,0) 
	and	coalesce(cd_estabelecimento, coalesce(cd_estab_p,0))	    = coalesce(cd_estab_p,0) 
	and	coalesce(ie_tipo_atendimento, coalesce(ie_tipo_atendimento_w, 0)) = coalesce(ie_tipo_atendimento_w, 0) 
	and	coalesce(cd_area_procedimento, coalesce(cd_area_proc_w,0))	= coalesce(cd_area_proc_w,0) 
	and	coalesce(cd_grupo_proc, coalesce(cd_grupo_proc_w,0))       = coalesce(cd_grupo_proc_w,0) 
	and	coalesce(cd_especialidade, coalesce(cd_especialidade_w,0))    = coalesce(cd_especialidade_w,0) 
	and	coalesce(nr_seq_etapa_filtro, coalesce(nr_seq_etapa_w,0))     = coalesce(nr_seq_etapa_w,0) 
	and   ((coalesce(vl_procedimento_p,-1) = - 1) or (coalesce(vl_procedimento_p,0) between coalesce(vl_minimo,coalesce(vl_procedimento_p,0)) and coalesce(vl_maximo,coalesce(vl_procedimento_p,0)))) 
	and	coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_p,0)) = coalesce(cd_setor_atendimento_p,0) 
    and   coalesce(cd_procedimento,coalesce(cd_procedimento_p,0))  = coalesce(cd_procedimento_p,0) 
    and   coalesce(ie_origem_proced,coalesce(ie_origem_proced_p,0)) = coalesce(ie_origem_proced_p,0) 
	order by coalesce(cd_convenio,0), 
		coalesce(cd_estabelecimento, 1), 
		coalesce(cd_perfil,0), 
		coalesce(nr_seq_etapa_filtro, 0), 
		coalesce(ie_tipo_atendimento,0), 
        coalesce(cd_procedimento,0), 
		coalesce(cd_grupo_proc,0), 
		coalesce(cd_especialidade,0), 
		coalesce(cd_area_procedimento,0),         
		coalesce(cd_setor_atendimento,0);


BEGIN 
 
select	coalesce(max('S'),'N') 
into STRICT	qt_existe_regra_w 
from	conv_regra_fatur_proc 
where	cd_convenio = cd_convenio_p 
and	cd_estabelecimento = cd_estab_p;
 
if (qt_existe_regra_w = 'S') then 
 
	select	coalesce(cd_grupo_proc,0), 
		coalesce((obter_dados_estrut_proc(cd_procedimento,ie_origem_proced,'C','E'))::numeric ,0), 
		coalesce((obter_dados_estrut_proc(cd_procedimento,ie_origem_proced,'C','A'))::numeric ,0) 
	into STRICT	cd_grupo_proc_w, 
		cd_especialidade_w, 
		cd_area_proc_w 
	from	procedimento 
	where	cd_procedimento = cd_procedimento_p 
	and	ie_origem_proced = ie_origem_proced_p;
 
	select	coalesce(max(substr(obter_tipo_atendimento(nr_atendimento),1,3)),0) 
	into STRICT	ie_tipo_atendimento_w 
	from	conta_paciente 
	where	nr_interno_conta = nr_interno_conta_p;
 
	select	max(obter_conta_paciente_etapa(nr_interno_conta_p,'C')) 
	into STRICT	nr_seq_etapa_w 
	;
 
	open c01;
	loop 
	fetch c01 into 
		ie_incluir_conta_w, 
		ie_alterar_conta_w, 
		ie_excluir_conta_w, 
		ie_utilizar_conta_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
 
		ie_incluir_conta_w:= 	ie_incluir_conta_w;
		ie_alterar_conta_w:=	ie_alterar_conta_w;
		ie_excluir_conta_w:= 	ie_excluir_conta_w;
		ie_utilizar_conta_w:= 	ie_utilizar_conta_w;
    
		end;
	end loop;
	close c01;
 
	if (ie_acao_p = '1') and (ie_incluir_conta_w = 'N') then 
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279987);
		--goto final; 
	elsif (ie_acao_p = '2') and (ie_alterar_conta_w = 'N') then 
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279988);
		--goto final; 
	elsif (ie_acao_p = '3') and (ie_excluir_conta_w = 'N') then 
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279991);
		--goto final; 
	elsif (ie_acao_p = '4') and (ie_utilizar_conta_w = 'N') then 
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279992);
		--goto final; 
	end if;
 
end if;
 
<<final>> 
 
ds_erro_p := ds_erro_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_parametro_fatur_proc ( cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_interno_conta_p bigint, ie_acao_p text, ds_erro_p INOUT text, cd_estab_p bigint, nm_usuario_p text, vl_procedimento_p bigint, cd_setor_atendimento_p bigint) FROM PUBLIC;

