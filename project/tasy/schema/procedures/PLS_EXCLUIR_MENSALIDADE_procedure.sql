-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_excluir_mensalidade ( nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


qt_registro_w			bigint	:= 0;
nr_seq_lote_w			pls_lote_mensalidade.nr_sequencia%type;
qt_mensalidades_w		bigint	:= 0;
nr_seq_repasse_w		pls_repasse_mens.nr_seq_repasse%type;
qt_comissao_w			bigint;
nr_seq_lote_mov_w		bigint;
nr_seq_lote_mens_w		bigint;
nr_seq_lote_ame_w		pls_ame_lote_remessa.nr_sequencia%type;
qt_titulo_w			bigint;
qt_nota_fiscal_w		bigint;


BEGIN
select	a.nr_seq_lote,
	(	select	count(*)
		from	titulo_receber x
		where	x.nr_seq_mensalidade = a.nr_sequencia) qt_titulo,
	(	select	count(*)
		from	nota_fiscal x
		where	x.nr_seq_mensalidade = a.nr_sequencia) qt_nota_fiscal
into STRICT	nr_seq_lote_w,
	qt_titulo_w,
	qt_nota_fiscal_w
from	pls_mensalidade a
where	a.nr_sequencia = nr_seq_mensalidade_p;

if (qt_titulo_w > 0 or qt_nota_fiscal_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(274161); --Uma ou mais mensalidades selecionadas ja possuem nota ou titulo gerado
end if;

select	count(1)
into STRICT	qt_registro_w
from	pls_mensalidade a,
	pls_mensalidade_segurado b,
	pls_mensalidade_seg_adic c
where	a.nr_sequencia	= b.nr_seq_mensalidade
and	b.nr_sequencia	= c.nr_seq_mensalidade_seg
and	a.nr_sequencia	= nr_seq_mensalidade_p;

if (qt_registro_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(265928,'');
	--Existem itens adicionais nesta mensalidade. Verifique!
end if;

select	max(a.nr_seq_repasse)
into STRICT	nr_seq_repasse_w
from	pls_repasse_mens a,
	pls_mensalidade_segurado b
where	b.nr_sequencia		= a.nr_seq_mens_seg
and	b.nr_seq_mensalidade	= nr_seq_mensalidade_p
and	(a.nr_seq_repasse IS NOT NULL AND a.nr_seq_repasse::text <> '');

if (nr_seq_repasse_w IS NOT NULL AND nr_seq_repasse_w::text <> '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(738510,'NR_SEQ_REPASSE=' || nr_seq_repasse_w);
	--Existe comissao gerada no repasse #@NR_SEQ_REPASSE#@. Favor verifique.
end if;

select  count(1)
into STRICT	qt_comissao_w
from    pls_mensalidade_segurado a,
        pls_comissao_beneficiario b
where   a.nr_sequencia = b.nr_seq_segurado_mens
and     a.nr_seq_mensalidade  = nr_seq_mensalidade_p;

if (coalesce(qt_comissao_w,0) > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort( 762545, null);
	--Nao e possivel excluir a mensalidade pois existem comissoes geradas para os beneficiarios. Verifique!
end if;

select  max(c.nr_sequencia)
into STRICT	nr_seq_lote_mov_w
from    pls_mov_mens_benef_item a,
	pls_mov_mens_benef b,
	pls_mov_mens_lote c
where   c.nr_sequencia = b.nr_seq_lote
and	b.nr_sequencia = a.nr_seq_mov_benef
and     a.nr_seq_item_mens in (	SELECT	x.nr_sequencia
				from    pls_mensalidade_seg_item x,
					pls_mensalidade_Segurado y,
					pls_mensalidade w
				where   w.nr_sequencia = y.nr_seq_mensalidade
				and     y.nr_sequencia = x.nr_seq_mensalidade_seg
				and     w.nr_sequencia = nr_seq_mensalidade_p);
				
if (coalesce(nr_seq_lote_mov_w,0) > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1080588, 'NR_SEQ_LOTE='||nr_seq_lote_mov_w);
	--Nao e possivel desfazer a geracao do lote, pois existem itens de mensalidade no lote de movimentacao #@NR_SEQ_LOTE#@. Favor verificar.
end if;

select	max(b.nr_seq_lote)
into STRICT	nr_seq_lote_mens_w
from	pls_mensalidade b,
	pls_mensalidade_segurado c,
	pls_mensalidade_seg_item d
where  	coalesce(b.ie_cancelamento::text, '') = ''
and    	b.nr_sequencia = c.nr_seq_mensalidade
and	b.nr_sequencia <> nr_seq_mensalidade_p
and    	c.nr_sequencia = d.nr_seq_mensalidade_seg
and    	exists (SELECT	1
		from    pls_mensalidade_segurado y,
			pls_mensalidade w,
			pls_segurado_mensalidade x
		where   w.nr_sequencia = y.nr_seq_mensalidade
		and     y.nr_sequencia = x.nr_seq_mens_seg_gerado
		and     w.nr_sequencia = nr_seq_mensalidade_p
		and     x.nr_sequencia = d.nr_seq_segurado_mens);

if (coalesce(nr_seq_lote_mens_w,0) > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1080760, 'NR_SEQ_LOTE='|| nr_seq_lote_mens_w);
	--Nao e possivel desfazer a geracao do lote, pois existem lancamentos automaticos ja cobrados no lote de mensalidade #@NR_SEQ_LOTE#@.
end if;

select	max(c.nr_seq_lote_rem) nr_lote_ame
into STRICT	nr_seq_lote_ame_w
from	pls_ame_lote_rem_valor a,
	pls_ame_lote_rem_arquivo b,
	pls_ame_lote_rem_destino c,
	pls_mensalidade_segurado e
where	b.nr_sequencia       = a.nr_seq_lote_rem_arq
and	c.nr_sequencia       = b.nr_seq_lote_rem_dest
and	e.nr_sequencia       = a.nr_seq_mensalidade_seg
and	e.nr_seq_mensalidade = nr_seq_mensalidade_p;

if (coalesce(nr_seq_lote_ame_w,0) > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1142243, 'NR_SEQUENCIA=' || nr_seq_lote_ame_w);
	--Nao e possivel excluir a mensalidade(s) selecionada(s), pois existe o lote #@NR_SEQUENCIA#@ de arquivos de mensalidade empresarial gerado.
end if;

CALL pls_deletar_mensalidade(nr_seq_mensalidade_p, 'S', nm_usuario_p, 'N');

select	count(*)
into STRICT	qt_mensalidades_w
from	pls_mensalidade
where	nr_seq_lote	= nr_seq_lote_w;

if (qt_mensalidades_w = 0) then
	CALL pls_desfazer_lote_mensalidade(nr_seq_lote_w,cd_estabelecimento_p,nm_usuario_p);
else
	CALL pls_atualiza_valor_mensalidade(nr_seq_lote_w, nm_usuario_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_excluir_mensalidade ( nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

