-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cancelar_titulo_conta ( nr_interno_conta_p bigint, nr_seq_protocolo_p bigint, nm_usuario_p text, ie_excluir_baixa_p text) AS $body$
DECLARE

	 
vl_baixa_w				double precision;
vl_conta_w				double precision;
vl_saldo_w				double precision;
vl_titulo_w				double precision;
vl_recebido_w				double precision;
nr_titulo_w				bigint;
nr_interno_conta_w			bigint;
nr_seq_titulo_w				bigint;
cd_tipo_receb_canc_conta_w		bigint;
cd_moeda_w				integer;
cd_tipo_recebimento_w			integer;
cont_w					smallint;
nr_seq_baixa_w				bigint;
nr_adiantamento_w			bigint;
cd_estabelecimento_w			bigint;
nr_seq_trans_fin_w			bigint;
vl_trib_titulo_w			double precision;
ie_forma_canc_tit_conta_w		varchar(5);
ie_integracao_titulo_w			varchar(15);
ds_erro_w				varchar(2000);
ie_consiste_saldo_tit_guia_w		varchar(1) := 'S';
nr_sequencia_w             titulo_pagar.nr_seq_nota_fiscal%type;
nr_titulo_pagar_w            titulo_pagar.nr_titulo%type;
ie_tit_tributo_paciente_w	    varchar(1);

c01 CURSOR FOR 
SELECT	nr_titulo, 
	vl_saldo_titulo, 
	cd_moeda, 
	nr_interno_conta, 
	cd_estabelecimento	 
from	titulo_receber 
where	(nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') 
and	nr_seq_protocolo	= nr_seq_protocolo_p 
and	coalesce(nr_interno_conta::text, '') = '' 
and	ie_situacao <> '5'	--anderson/edgar 21/03/06 - os 27717 - nao buscar os titulos desdobrados. 
union
 
SELECT	nr_titulo, 
	vl_saldo_titulo, 
	cd_moeda, 
	nr_interno_conta, 
	cd_estabelecimento	 
from	titulo_receber 
where	(nr_interno_conta_p IS NOT NULL AND nr_interno_conta_p::text <> '') 
and	nr_interno_conta	= nr_interno_conta_p 
and	ie_situacao <> '5';

c02 CURSOR FOR 
SELECT	a.nr_titulo, 
	b.nr_sequencia, 
	b.nr_adiantamento 
from	titulo_receber_liq b, 
	titulo_receber a 
where	(nr_interno_conta_p IS NOT NULL AND nr_interno_conta_p::text <> '') 
and	a.nr_interno_conta	= nr_interno_conta_p 
and	a.nr_titulo		= b.nr_titulo 
and	coalesce(ie_lib_caixa, 'S') = 'S' 
and	ie_excluir_baixa_p	= 'S';

c03 CURSOR FOR 
SELECT tp.nr_titulo 
from  titulo_pagar tp 
where tp.nr_seq_nota_fiscal = nr_sequencia_w;


BEGIN 
 
select	count(*) 
into STRICT	cont_w 
from (SELECT	1 
from	titulo_receber 
where	(nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') 
and	nr_seq_protocolo = nr_seq_protocolo_p 
and	coalesce(nr_interno_conta::text, '') = '' 

union all
 
SELECT	1 
from	titulo_receber 
where	(nr_interno_conta_p IS NOT NULL AND nr_interno_conta_p::text <> '') 
and	nr_interno_conta = nr_interno_conta_p) alias4;
 
if (cont_w > 0) then			-- edgar 13/07/2006, os 37182, somente entrar na rotina se tiver título 
 
	select	coalesce(min(cd_tipo_recebimento),4) 
	into STRICT	cd_tipo_recebimento_w 
	from	tipo_recebimento 
	where	ie_tipo_consistencia = 4;
 
	select	max(nr_seq_trans_fin) 
	into STRICT	nr_seq_trans_fin_w 
	from	tipo_recebimento 
	where	cd_tipo_recebimento	= cd_tipo_recebimento_w;
 
	-- edgar 30/01/2006, os 27842, cancelar as baixas dos títulos 
	open c02;
	loop 
	fetch c02 into 
		nr_titulo_w, 
		nr_seq_baixa_w, 
		nr_adiantamento_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		/*francisco 02/08/2007, os 64391 - alterei para gravar todos dados da baixa, como numero do adiantamento*/
 
		CALL estornar_tit_receber_liq(nr_titulo_w,nr_seq_baixa_w,clock_timestamp(),nm_usuario_p,'N',null,'S');
 
		/*francisco 02/08/2007, os 64391 - desvincular os adiantamentos das contas canceladas*/
 
		if (nr_adiantamento_w IS NOT NULL AND nr_adiantamento_w::text <> '') then 
			delete	from	conta_paciente_adiant 
			where	nr_adiantamento		= nr_adiantamento_w 
			and	nr_interno_conta	= nr_interno_conta_p;	
		end if;
		 
		CALL atualizar_saldo_tit_rec(nr_titulo_w, nm_usuario_p);
	end loop;
	close c02;
 
	select	coalesce(sum(vl_guia),0) 
	into STRICT	vl_conta_w 
	from	conta_paciente_guia 
	where	nr_interno_conta = nr_interno_conta_p;
 
	/* edgar 22/03/2004 - os7074 coloquei um union all para trazer todos os títulos*/
 
	select	coalesce(sum(vl_saldo_titulo),0),max(cd_estabelecimento) 
	into STRICT	vl_titulo_w, 
		cd_estabelecimento_w 
	from (SELECT	vl_saldo_titulo, cd_estabelecimento 
	from	titulo_receber 
	where	(nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') 
	and	nr_seq_protocolo = nr_seq_protocolo_p 
	and	coalesce(nr_interno_conta::text, '') = '' 
	
union all
 
	SELECT	vl_saldo_titulo, cd_estabelecimento 
	from	titulo_receber 
	where	(nr_interno_conta_p IS NOT NULL AND nr_interno_conta_p::text <> '') 
	and	nr_interno_conta = nr_interno_conta_p) alias6;
	 
	 
	select 	coalesce(max(IE_CONSISTE_SALDO_TITULO_GUIA),'S') 
	into STRICT	ie_consiste_saldo_tit_guia_w 
	from	parametro_contas_receber 
	where	cd_estabelecimento = cd_estabelecimento_w;
 
	select	sum(vl_tributo) 
	into STRICT	vl_trib_titulo_w 
	from ( 
		SELECT	coalesce(sum(CASE WHEN a.ie_soma_diminui='D' THEN (coalesce(b.vl_tributo,0) * - 1) WHEN a.ie_soma_diminui='S' THEN  coalesce(b.vl_tributo,0)  ELSE 0 END ),0) vl_tributo 
		from	tributo a, 
			titulo_receber_trib b, 
			titulo_receber c 
		where	coalesce(a.ie_incide_conta,'N')	= 'S' 
		and	a.cd_tributo		= b.cd_tributo 
		and	c.nr_titulo		= b.nr_titulo 
		and	coalesce(c.nr_interno_conta::text, '') = '' 
		and	c.nr_seq_protocolo		= nr_seq_protocolo_p 
		and	(nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') 
		
union all
 
		SELECT	coalesce(sum(CASE WHEN a.ie_soma_diminui='D' THEN (coalesce(b.vl_tributo,0) * - 1) WHEN a.ie_soma_diminui='S' THEN  coalesce(b.vl_tributo,0)  ELSE 0 END ),0) vl_tributo 
		from	tributo a, 
			titulo_receber_trib b, 
			titulo_receber c 
		where	coalesce(a.ie_incide_conta,'N')	= 'S' 
		and	a.cd_tributo		= b.cd_tributo 
		and	c.nr_titulo		= b.nr_titulo 
		and	c.nr_interno_conta		= nr_interno_conta_p 
		and	(nr_interno_conta_p IS NOT NULL AND nr_interno_conta_p::text <> '')) alias16;
 
	vl_conta_w	:= coalesce(vl_conta_w,0) + coalesce(vl_trib_titulo_w,0);
 
	if (vl_titulo_w < vl_conta_w) and (ie_consiste_saldo_tit_guia_w = 'S')then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(231052);
	end if;
	 
	open c01;
	loop 
	fetch c01 into 
		nr_titulo_w, 
		vl_saldo_w, 
		cd_moeda_w, 
		nr_interno_conta_w, 
		cd_estabelecimento_w;		
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
 
		select	max(cd_tipo_receb_canc_conta), 
			max(ie_integracao_titulo) 
		into STRICT	cd_tipo_receb_canc_conta_w, 
			ie_integracao_titulo_w 
		from	parametro_contas_receber 
		where	cd_estabelecimento	= cd_estabelecimento_w;
 
		cd_tipo_recebimento_w	:= coalesce(cd_tipo_receb_canc_conta_w, cd_tipo_recebimento_w);
 
		vl_baixa_w := vl_conta_w;
		if (vl_saldo_w < vl_conta_w) then 
			vl_baixa_w := vl_saldo_w;
		end if;
		vl_conta_w := vl_conta_w - vl_baixa_w;
 
		if (coalesce(nr_interno_conta_w, 0) > 0) then	-- edgar 25/11/2009, os 181103, alteração para poder baixar título com juros 
			vl_baixa_w		:= vl_saldo_w;
		end if;
 
		select	coalesce(max(nr_sequencia),0) + 1 
		into STRICT	nr_seq_titulo_w 
		from	titulo_receber_liq 
		where	nr_titulo = nr_titulo_w;
 
		 
		select 	coalesce(max(ie_forma_canc_tit_conta),'B') 
		into STRICT	ie_forma_canc_tit_conta_w 
		from	parametro_contas_receber 
		where	cd_estabelecimento = cd_estabelecimento_w;
 
		/* douglas 24/03/2011 - os n° 300527 - adicionado if, para escolha da forma de cancelamento do título.*/
 
		if (coalesce(ie_forma_canc_tit_conta_w,'B') = 'B') then 
 
			insert	into titulo_receber_liq(nr_titulo, 
				nr_sequencia, 
				dt_recebimento, 
				vl_recebido, 
				vl_descontos, 
				vl_juros, 
				vl_multa, 
				cd_moeda, 
				dt_atualizacao, 
				nm_usuario, 
				cd_tipo_recebimento, 
				ie_acao, 
				vl_rec_maior, 
				vl_glosa, 
				ie_lib_caixa, 
				nr_seq_trans_fin, 
				nr_lote_contab_antecip, 
				nr_lote_contab_pro_rata, 
				nr_lote_contabil) 
			values (nr_titulo_w, 
				nr_seq_titulo_w, 
				clock_timestamp(), 
				vl_baixa_w, 
				0, 
				0, 
				0, 
				cd_moeda_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				cd_tipo_recebimento_w, 
				'I', 
				0, 
				0, 
				'S', 
				nr_seq_trans_fin_w, 
				0, 
				0, 
				0);
 
			CALL gerar_titulo_rec_liq_cc(cd_estabelecimento_w, null, nm_usuario_p, nr_titulo_w, nr_seq_titulo_w);
		else 
			CALL cancelar_titulo_receber(nr_titulo_w,nm_usuario_p,'N',clock_timestamp());
 
		end if;
--(1119,'Passou 11 '|| nr_titulo_w || ' ' || nm_usuario_p || ' ' || sysdate, ' Tasy');			 
           
		 
		if (ie_integracao_titulo_w = 'P') then 
	 
			delete from erros_integracao_piramide 
			where	cd_estabelecimento = cd_estabelecimento_w 
			and	nm_usuario = nm_usuario_p 
			and	ie_funcao in ('CTI');
				 
			CALL exec_sql_dinamico('Tasy','begin pir_cancela_titulo(' 
					|| nr_titulo_w || ',' 
					|| cd_estabelecimento_w || ',' 
					|| chr(39) || nm_usuario_p || chr(39) || '); end;');
 
			select	max(ds_erro) 
			into STRICT	ds_erro_w 
			from	erros_integracao_piramide 
			where	cd_estabelecimento = cd_estabelecimento_w 
			and	nm_usuario = nm_usuario_p 
			and	ie_funcao in ('CTI');
 
			if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then 
				CALL wheb_mensagem_pck.exibir_mensagem_abort(231053,'ERROR='||ds_erro_w);
			end if;
		end if;	
 
		CALL atualizar_saldo_tit_rec(nr_titulo_w, nm_usuario_p);
		 
		 
		update	titulo_receber 
		set 	ie_situacao		= '3' 
		where	nr_titulo		= nr_titulo_w 
		and	vl_saldo_titulo		= 0 
		and	ie_situacao		in ('2', '4') 
		and	(nr_interno_conta IS NOT NULL AND nr_interno_conta::text <> '');	-- edgar 12/04/2006 os 32743, só cancelar se o título for referente à conta 
								-- se não for ref à conta e for ref ao protocolo não deve ser cancelado, pois no prot existem 
	end;							-- mais contas 
	end loop;
	close c01;
	 
	 
	begin 
	 ie_tit_tributo_paciente_w := obter_param_usuario(-80, 111, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_tit_tributo_paciente_w);
     if (coalesce(ie_tit_tributo_paciente_w,'N') = 'S') then 
	    select 	max(nf.nr_sequencia) 
	    into STRICT 	nr_sequencia_w 
	    from 	nota_fiscal nf 
	    where 	nf.nr_nota_fiscal = obter_nf_conta(nr_interno_conta_p, 2) 
	    and 	nf.ie_situacao = 3;
CALL GRAVAR_LOG_TASY(1119,'parametro S ' , 'Tasy');
	    if (nr_sequencia_w > 0) Then 
		  open c03;
		  loop 
		  fetch c03 into 
			 nr_titulo_pagar_w;
		  EXIT WHEN NOT FOUND; /* apply on c03 */
			if (nr_titulo_pagar_w > 0) then 
			  CALL cancelar_titulo_pagar(nr_titulo_pagar_w, nm_usuario_p, clock_timestamp());
		      CALL atualizar_Saldo_Tit_Pagar(nr_titulo_pagar_w, nm_usuario_p);		
			end if;	
		  end loop;
		 close c03;
	    end if;
	 end if;
	exception when others then 
	 ds_erro_w := substr(sqlerrm(SQLSTATE),1,1000);
	 CALL gravar_log_tasy(6789,wheb_mensagem_pck.get_texto(794210,'DS_ERRO_W='||ds_erro_w), nm_usuario_p);
	end;
	 
	 
	 
		 
end if;
 
/*commit;*/
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cancelar_titulo_conta ( nr_interno_conta_p bigint, nr_seq_protocolo_p bigint, nm_usuario_p text, ie_excluir_baixa_p text) FROM PUBLIC;

