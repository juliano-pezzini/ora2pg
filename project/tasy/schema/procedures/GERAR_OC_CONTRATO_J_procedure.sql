-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_oc_contrato_j (cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_comprador_w         comprador.cd_pessoa_fisica%type;
ie_frete_w     	       pessoa_juridica_estab.ie_frete%type;
qt_dia_prazo_entrega_w pessoa_juridica_estab.qt_dia_prazo_entrega%type;
ie_aviso_chegada_w     parametro_compras.ie_aviso_chegada%type;
ie_emite_obs_w         funcao_parametro.vl_parametro%type;
ie_gerar_tributos_w    funcao_parametro.vl_parametro%type;
ds_erro_w			   contrato_historico.ds_historico%type;
nr_ordem_compra_w      ordem_compra.nr_ordem_compra%type;

c01 CURSOR FOR
SELECT nr_sequencia,
       qt_dias_oc_auto,
	   cd_moeda_estrangeira,
	   cd_estabelecimento,
	   cd_setor,
	   cd_pessoa_resp,
	   cd_pessoa_contratada,
	   cd_cgc_contratado,
	   dt_ult_geracao_oc
  from contrato
 where dt_inicio <= trunc(clock_timestamp())
   and coalesce(dt_fim,clock_timestamp()) >= clock_timestamp()
   and coalesce(qt_dias_oc_auto,0) > 0
   and cd_estabelecimento = cd_estabelecimento_p;

BEGIN

select	coalesce(Obter_Param_Funcao_Usu(1200, 155, null, nm_usuario_p, cd_estabelecimento_p, 1200),'N'),
		coalesce(Obter_Param_Funcao_Usu(1200, 150, null, nm_usuario_p, cd_estabelecimento_p, 1200),'N')
into STRICT	ie_emite_obs_w,
		ie_gerar_tributos_w
;

For r01 in c01 loop

	begin

		select cd_comprador_padrao,
			   ie_aviso_chegada
		  into STRICT cd_comprador_w,
			   ie_aviso_chegada_w
		  from parametro_compras
		 where cd_estabelecimento = r01.cd_estabelecimento;
		
		select ie_frete,
			   qt_dia_prazo_entrega
		  into STRICT ie_frete_w,
			   qt_dia_prazo_entrega_w
		  from pessoa_juridica_estab
		 where cd_cgc = r01.cd_cgc_contratado
		   and cd_estabelecimento = r01.cd_estabelecimento;
		
		if ((coalesce(r01.dt_ult_geracao_oc::text, '') = '' or r01.dt_ult_geracao_oc + r01.qt_dias_oc_auto < clock_timestamp()) and (r01.cd_pessoa_resp IS NOT NULL AND r01.cd_pessoa_resp::text <> '') and (ie_frete_w IS NOT NULL AND ie_frete_w::text <> '')) then
		
			 --dt_vencimento
							  nr_ordem_compra_w := gerar_oc_contrato(cd_comprador_w, clock_timestamp(),  --dt_ordem_p
							  clock_timestamp(),  --dt_inclusao_p
							  clock_timestamp() + coalesce(qt_dia_prazo_entrega_w,0),  --dt_entrega_P
							  r01.nr_sequencia, r01.cd_estabelecimento, r01.cd_setor, r01.cd_pessoa_resp,  --cd_pessoa_solicitante_p
							  r01.cd_pessoa_contratada, r01.cd_cgc_contratado, ie_frete_w, coalesce(r01.cd_moeda_estrangeira, obter_moeda_padrao_empresa(r01.cd_estabelecimento, 'E')), ie_aviso_chegada_w, ie_emite_obs_w, 'N',  --ie_urgente_p
							  nm_usuario_p, null,  --cd_local_estoque_p,
							  ie_gerar_tributos_w, 0, clock_timestamp(), 
							  nr_ordem_compra_w);	
				
				if (coalesce(nr_ordem_compra_w,0) > 0) then
				
					update contrato set dt_ult_geracao_oc = clock_timestamp()
					 where nr_sequencia = r01.nr_sequencia;
					
					commit;
				
				end if;
		end if;

	exception when others then
		begin
			
			ds_erro_w := substr(wheb_mensagem_pck.get_texto(1135051) || ' ' || sqlerrm, 1, 4000);
			
			insert into contrato_historico(nr_sequencia,
											nr_seq_contrato,
											dt_historico,
											ds_historico,
											dt_atualizacao,
											nm_usuario,
											ds_titulo,
											dt_liberacao,
											nm_usuario_lib)
										values (	nextval('contrato_historico_seq'),
											r01.nr_sequencia,
											clock_timestamp(),
											ds_erro_w,
											clock_timestamp(),
											nm_usuario_p,
											wheb_mensagem_pck.get_texto(1135050),
											clock_timestamp(),
											nm_usuario_p);
			commit;
		end;			
	end;
	
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_oc_contrato_j (cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

