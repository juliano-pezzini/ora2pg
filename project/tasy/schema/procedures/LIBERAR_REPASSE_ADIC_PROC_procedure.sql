-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_repasse_adic_proc ( nr_seq_retorno_p bigint, nr_seq_grg_p bigint, nr_seq_ret_glosa_p bigint, nm_usuario_p text) AS $body$
DECLARE


cont_w			bigint;
nr_seq_propaci_w		bigint;
nr_seq_matpaci_w		bigint;
vl_glosa_w		double precision;
vl_amaior_w		double precision;
cd_estabelecimento_w	bigint;
vl_cobrado_w		double precision;
ie_repasse_maior_w	varchar(255);
nr_seq_proc_rep_novo_w	bigint;
nr_seq_mat_rep_novo_w	bigint;
dt_retorno_w		timestamp;
nr_seq_convret_glosa_w	bigint;
pr_adicional_w		double precision;
nr_seq_repasse_w		bigint;
nr_seq_ret_item_w		bigint;
vl_repasse_w		double precision;
vl_adicional_w		double precision;
vl_procedimento_w		double precision;
nr_seq_proc_repasse_w	bigint;
ie_status_w		varchar(10);
ie_status_rep_novo_w	varchar(10);
cd_motivo_glosa_w	bigint;
nr_seq_regra_w		bigint;
ie_calculo_w		bigint;
nr_seq_criterio_w		bigint;
ie_proc_partic_w		varchar(10);
nr_seq_partic_w		bigint;
cd_procedimento_w	procedimento.cd_procedimento%type;
nr_seq_terceiro_w		bigint;
ie_origem_valor_w		varchar(50);
vl_calculo_adic_w		double precision;
tx_adicional_w		double precision;
nr_seq_lote_audit_hist_w	bigint;
vl_repasse_atual_w	double precision;
vl_original_w		double precision;
ie_partic_rep_w		varchar(255);
qt_partic_rep_w		bigint;
vl_cobrado_glosa_w	double precision;
vl_maior_aj_w		double precision;
ds_observacao_w		varchar(3980);
nr_seq_grg_proc_partic_w	grg_proc_partic.nr_sequencia%type;
nr_seq_lote_guia_w	bigint;
ie_repasse_partic_grg_w		parametro_faturamento.ie_repasse_partic_grg%type;
dt_baixa_w		timestamp;
dt_conv_ret_w		timestamp;
dt_fechamento_w		timestamp;
ie_data_lib_repasse_ret_w	parametro_faturamento.ie_data_lib_repasse_ret%type;
cd_autorizacao_w		varchar(20);
nr_seq_conv_ret_glosa_w		bigint;
nr_seq_lote_audit_hist_item_w		bigint;
nr_seq_regra_bloq_w		bigint;
ds_observacao_regra_bloq_w	varchar(255);

c01 CURSOR FOR
SELECT	b.nr_sequencia,
	a.nr_seq_propaci,
	a.vl_amaior,
	a.cd_motivo_glosa,
	a.nr_seq_partic ,
	null,
	null,
	null,
	b.cd_autorizacao,
	a.nr_sequencia,
	null
from	convenio_retorno_glosa a,
	convenio_retorno_item b
where	a.nr_seq_ret_item				= b.nr_sequencia
and	b.nr_seq_retorno				= nr_seq_retorno_p
and	coalesce(nr_seq_ret_glosa_p, a.nr_seq_propaci)	= a.nr_seq_propaci
and	(a.nr_seq_propaci IS NOT NULL AND a.nr_seq_propaci::text <> '')
and	a.vl_amaior				> 0

union all

SELECT	null,
	a.nr_seq_propaci,
	vl_adicional,
	a.cd_motivo_glosa,
	a.nr_seq_partic,
	a.nr_seq_lote,
	null,
	null,
	b.cd_autorizacao,
	null,
	a.nr_sequencia
from	lote_audit_hist_guia b,
	lote_audit_hist_item a	
where	a.nr_seq_guia			= b.nr_sequencia
and	b.nr_seq_lote_hist			= nr_seq_grg_p
and	(a.nr_seq_propaci IS NOT NULL AND a.nr_seq_propaci::text <> '')
and	vl_adicional			> 0
and	coalesce(ie_repasse_partic_grg_w,'N') = 'N'

union
			
select	null,
	c.nr_seq_proc,
	c.vl_adicional,
	a.cd_motivo_glosa,
	c.nr_seq_partic,
	a.nr_seq_lote,
	b.nr_sequencia,
	c.nr_sequencia,
	b.cd_autorizacao,
	null,
	a.nr_sequencia
from	grg_proc_partic c,
	lote_audit_hist_guia b,
	lote_audit_hist_item a
where	a.nr_seq_guia		= b.nr_sequencia
and	a.nr_sequencia		= c.nr_seq_hist_item
and	b.nr_seq_lote_hist	= nr_seq_grg_p
and	(a.nr_seq_propaci IS NOT NULL AND a.nr_seq_propaci::text <> '')
and	(c.nr_seq_proc IS NOT NULL AND c.nr_seq_proc::text <> '')
and	c.vl_adicional		> 0
and	coalesce(ie_repasse_partic_grg_w,'N') = 'S';

c02 CURSOR FOR
SELECT	a.nr_sequencia,
	a.vl_original_repasse,
	a.vl_repasse,
	a.ie_status,
	a.nr_seq_criterio,
	a.nr_seq_partic,
	b.cd_procedimento,
	a.nr_seq_terceiro
from	procedimento_paciente b,
	procedimento_repasse a
where	a.nr_seq_procedimento		= b.nr_sequencia
and	b.nr_sequencia			= nr_seq_propaci_w
and	((coalesce(a.nr_seq_lote_audit_hist, -1)	<> coalesce(nr_seq_lote_audit_hist_w,-1) and (nr_seq_lote_audit_hist_w IS NOT NULL AND nr_seq_lote_audit_hist_w::text <> ''))	or (coalesce(nr_seq_lote_audit_hist_w::text, '') = ''))
and	((coalesce(a.nr_seq_item_retorno, -1)	<> coalesce(nr_seq_ret_item_w,-1) and (nr_seq_ret_item_w IS NOT NULL AND nr_seq_ret_item_w::text <> '')) 	or (coalesce(nr_seq_ret_item_w::text, '') = ''))
and	coalesce(a.nr_seq_partic, -1)		= coalesce(nr_seq_partic_w, -1)
and	coalesce(b.nr_doc_convenio, coalesce(cd_autorizacao_w,WHEB_MENSAGEM_PCK.get_texto(1097738))) = coalesce(cd_autorizacao_w,WHEB_MENSAGEM_PCK.get_texto(1097738));


BEGIN

if (nr_seq_retorno_p IS NOT NULL AND nr_seq_retorno_p::text <> '') then

	select	max(coalesce(a.dt_baixa_cr, a.dt_fechamento)),
		max(a.dt_retorno),
		max(a.dt_fechamento),
		max(a.cd_estabelecimento)
	into STRICT	dt_baixa_w,
		dt_conv_ret_w,
		dt_fechamento_w,
		cd_estabelecimento_w
	from	convenio_retorno a
	where	a.nr_sequencia		= nr_seq_retorno_p;

else

	select	max(c.dt_fechamento),
		max(a.cd_estabelecimento)
	into STRICT	dt_retorno_w,
		cd_estabelecimento_w
	from	lote_auditoria a,
		lote_audit_hist c
	where	c.nr_sequencia		= nr_seq_grg_p
	and	a.nr_sequencia		= c.nr_seq_lote_audit;

end if;

select	max(a.ie_data_lib_repasse_ret),
	max(a.ie_repasse_partic_grg)
into STRICT	ie_data_lib_repasse_ret_w,
	ie_repasse_partic_grg_w
from	parametro_faturamento a
where	a.cd_estabelecimento	= cd_estabelecimento_w;

if (nr_seq_retorno_p IS NOT NULL AND nr_seq_retorno_p::text <> '') then

	if (ie_data_lib_repasse_ret_w	= 'F') then

		dt_retorno_w	:= dt_baixa_w;

	elsif (ie_data_lib_repasse_ret_w	= 'R') then

		dt_retorno_w	:= dt_conv_ret_w;

	elsif (ie_data_lib_repasse_ret_w	= 'E') then

		dt_retorno_w	:= dt_fechamento_w;

	end if;

end if;

open c01;
loop
fetch c01 into
	nr_seq_ret_item_w,
	nr_seq_propaci_w,
	vl_amaior_w,
	cd_motivo_glosa_w,
	nr_seq_partic_w,
	nr_seq_lote_audit_hist_w,
	nr_seq_lote_guia_w,
	nr_seq_grg_proc_partic_w,
	cd_autorizacao_w,
	nr_seq_conv_ret_glosa_w,
	nr_seq_lote_audit_hist_item_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	select	count(*)
	into STRICT	qt_partic_rep_w
	from	procedimento_repasse a
	where	a.nr_seq_procedimento	= nr_seq_propaci_w
	and	coalesce(a.nr_seq_partic, -1)	<> -1;

	select	max(vl_cobrado),
		max(vl_glosa)
	into STRICT	vl_cobrado_glosa_w,
	vl_maior_aj_w
	from (SELECT	CASE WHEN a.vl_cobrado=0 THEN a.vl_pago_digitado  ELSE a.vl_cobrado END  vl_cobrado,
			a.vl_glosa
		from	convenio_retorno_glosa a
		where	a.nr_seq_propaci	= nr_seq_propaci_w
		and	coalesce(a.nr_seq_partic,0)	= coalesce(nr_seq_partic_w,0)
		and	a.nr_seq_ret_item	= nr_seq_ret_item_w
		
union all

		SELECT	b.vl_procedimento vl_cobrado,
			a.vl_glosa
		from	procedimento_paciente b,
			lote_audit_hist_item a
		where	a.nr_seq_propaci	= b.nr_sequencia
		and	coalesce(a.nr_seq_partic,0)	= coalesce(nr_seq_partic_w,0)
		and	a.nr_seq_propaci	= nr_seq_propaci_w
		and	a.NR_SEQ_LOTE		= nr_seq_lote_audit_hist_w
		and	coalesce(ie_repasse_partic_grg_w,'N') = 'N'
		
union

		select	d.vl_saldo_orig vl_cobrado,
			d.vl_adicional
		from	grg_proc_partic d,
			procedimento_paciente b,
			lote_audit_hist_item a
		where	d.nr_seq_proc		= nr_seq_propaci_w
		and	d.nr_seq_hist_item	= a.nr_sequencia
		and	a.nr_seq_propaci	= b.nr_sequencia
		and	coalesce(d.nr_seq_partic,0)	= coalesce(nr_seq_partic_w,0)
		and	a.nr_seq_guia		= nr_seq_lote_guia_w
		and	d.nr_sequencia		= nr_seq_grg_proc_partic_w
		and	coalesce(ie_repasse_partic_grg_w,'N') = 'S') alias10;
	
	open c02;
	loop
	fetch c02 into
		nr_seq_proc_repasse_w,
		vl_repasse_w,
		vl_repasse_atual_w,
		ie_status_w,
		nr_seq_criterio_w,
		nr_seq_partic_w,
		cd_procedimento_w,
		nr_seq_terceiro_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		
		/* gabrielsants - 21/07/21 OS2520482*/

		if (coalesce(vl_cobrado_glosa_w::text, '') = '' or  vl_cobrado_glosa_w <= 0)then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(1185820,	'NR_SEQ_ITEM=' || nr_seq_ret_item_w ||
										';NR_SEQ_PROPACI=' || nr_seq_propaci_w ||
										';NR_SEQ_LOTE=' || nr_seq_lote_audit_hist_w ||
										';NR_SEQ_GUIA=' || nr_seq_lote_guia_w ||
										';NR_SEQ_GRG=' || nr_seq_grg_proc_partic_w);
		end if;

		select obter_bloq_repasse_amaior(cd_procedimento_w, null, nr_seq_terceiro_w, dt_retorno_w)
		into STRICT nr_seq_regra_bloq_w
		;
		
		if (nr_seq_regra_bloq_w IS NOT NULL AND nr_seq_regra_bloq_w::text <> '') then

			select WHEB_MENSAGEM_PCK.get_texto(1050568, 'NR_SEQ_REGRA='|| nr_seq_regra_bloq_w)
			into STRICT ds_observacao_regra_bloq_w
			;
	
			if (nr_seq_conv_ret_glosa_w IS NOT NULL AND nr_seq_conv_ret_glosa_w::text <> '') then

				update convenio_retorno_glosa
				set ds_observacao = ds_observacao_regra_bloq_w
				where nr_sequencia = nr_seq_conv_ret_glosa_w;

			elsif (nr_seq_lote_audit_hist_item_w IS NOT NULL AND nr_seq_lote_audit_hist_item_w::text <> '') then

				update lote_audit_hist_item
				set ds_observacao = ds_observacao_regra_bloq_w
				where nr_sequencia = nr_seq_lote_audit_hist_item_w;

			end if;

		else

			--apenas deve tratar repasses com status 'A' ou 'U' (Aguardando ...), a nao ser que exista regra
			if	((ie_status_w in ('A','U')) and
				(((coalesce(ie_proc_partic_w,'A') = 'ME') and (coalesce(nr_seq_partic_w::text, '') = '')) or ((coalesce(ie_proc_partic_w,'A') = 'PARTIC')
				and (nr_seq_partic_w IS NOT NULL AND nr_seq_partic_w::text <> '')) or (coalesce(ie_proc_partic_w,'A') = 'A'))) then

				if (coalesce(vl_repasse_w::text, '') = '') then

					--gravar o valor original do repasse na tabela procedimento_repasse, caso ainda nao tenha sido gravado.
					select	a.vl_repasse
					into STRICT	vl_repasse_w
					from	procedimento_repasse a
					where	a.nr_sequencia		= nr_seq_proc_repasse_w;

					update	procedimento_repasse
					set	vl_original_repasse		= vl_repasse_w
					where	nr_sequencia		= nr_seq_proc_repasse_w;

				end if;

				vl_original_w			:= vl_repasse_w;


				if (coalesce(ie_calculo_w,-1)	= 3) then

					--vem da regra Regra liberacao do repasse pelo retorno (nova). Se a forma de calculo for Valor total do repasse, libera na rotina abaixo
					CALL liberar_repasse_valor_fixo(nr_seq_proc_repasse_w, null, 'Tasy');

				else
					if (coalesce(ie_calculo_w, 1) = 2) then

						vl_amaior_w	:= vl_amaior_w * -1;

					end if;
					
					if (coalesce(vl_repasse_w,0) > 0) then
						
						begin
							vl_calculo_adic_w	:= (vl_repasse_w * (coalesce(vl_amaior_w,0) / vl_cobrado_glosa_w));
						exception
						when others then
							CALL WHEB_MENSAGEM_PCK.exibir_mensagem_abort(1072759,'NR_SEQ_ITEM_P='||nr_seq_ret_item_w||';NR_SEQUENCIA_P='||nr_seq_conv_ret_glosa_w);
						end;
						
						if (coalesce(ie_calculo_w,-1)	= 4) then
							if (coalesce(tx_adicional_w,0) > 0) then
								vl_calculo_adic_w	:= dividir_sem_round((vl_amaior_w * tx_adicional_w)::numeric, 100);
							else
								vl_calculo_adic_w	:= vl_amaior_w;
							end if;
						end if;
						
						if (coalesce(vl_calculo_adic_w::text, '') = '' or vl_calculo_adic_w <= 0)then
							CALL Wheb_mensagem_pck.exibir_mensagem_abort(1089881, 'NR_SEQ_GUIA_P='|| to_char(nr_seq_ret_item_w) || ';NR_SEQ_ITEM_P='|| to_char(nr_seq_conv_ret_glosa_w) );
						end if;

						SELECT * FROM desdobrar_procmat_repasse(nr_seq_proc_repasse_w, null, coalesce(ie_status_rep_novo_w, 'R'), vl_calculo_adic_w, nm_usuario_p, nr_seq_proc_rep_novo_w, nr_seq_mat_rep_novo_w) INTO STRICT nr_seq_proc_rep_novo_w, nr_seq_mat_rep_novo_w;
									
						ds_observacao_w := WHEB_MENSAGEM_PCK.get_texto(303666,
										'DS_PROC_P='|| 'LIBERAR_REPASSE_ADIC_PROC' ||
										';NR_SEQ_PROC_REP_NOVO_P='|| nr_seq_proc_rep_novo_w ||
										';VL_CALCULO_ADIC_P='|| vl_calculo_adic_w ||
										';IE_STATUS_REP_NOVO_P='|| coalesce(ie_status_rep_novo_w, 'R'));
									

						CALL GRAVAR_PROC_REPASSE_VALOR(	ds_observacao_w,						-- DS_OBSERVACAO_P
										nm_usuario_p,							-- NM_USUARIO_P
										ie_status_w, 							-- IE_STATUS_ANT_P
										ie_status_w,							-- IE_STATUS_ATUAL_P
										vl_repasse_atual_w,						-- VL_REPASSE_ANT_P
										vl_repasse_atual_w,						-- VL_REPASSE_ATUAL_P,
										nr_seq_retorno_p,						 	-- NR_SEQ_RETORNO_P,
										nr_seq_grg_p,							-- NR_SEQ_LOTE_AUDIT_HIST_P,
										nr_seq_proc_repasse_w,						-- NR_SEQ_PROC_REPASSE_P,
										nr_seq_regra_w);							-- NR_SEQ_REGRA_REP_RET_P
						if (nr_seq_grg_p IS NOT NULL AND nr_seq_grg_p::text <> '') then

							update	procedimento_repasse
							set	vl_liberado		= vl_repasse,
								nr_seq_lote_audit_hist	= nr_seq_lote_audit_hist_w,
								vl_original_repasse		= vl_original_w,
								dt_liberacao		= dt_retorno_w
							where	nr_sequencia		= nr_seq_proc_rep_novo_w;

						else

							update	procedimento_repasse
							set	vl_liberado		= vl_repasse,
								nr_seq_item_retorno	= nr_seq_ret_item_w,
								vl_original_repasse		= vl_original_w,
								dt_liberacao		= dt_retorno_w
							where	nr_sequencia		= nr_seq_proc_rep_novo_w;

						end if;
					end if;

				end if;

			end if;

		end if;

	end loop;
	close c02;

end loop;
close c01;

end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_repasse_adic_proc ( nr_seq_retorno_p bigint, nr_seq_grg_p bigint, nr_seq_ret_glosa_p bigint, nm_usuario_p text) FROM PUBLIC;

