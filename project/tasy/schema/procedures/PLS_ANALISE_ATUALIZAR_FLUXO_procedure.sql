-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_analise_atualizar_fluxo ( nr_seq_analise_p bigint, nr_seq_grupo_atual_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_grupo_w				bigint;
nr_seq_grupo_criado_w			bigint;
nr_seq_fluxo_ant_w			bigint;
nr_seq_ordem_w				bigint;
nr_seq_aud_conta_w			bigint;
nr_seq_ordem_grupo_atual_w		bigint;
ie_limpou_outro_grupo_w			boolean;

C01 CURSOR FOR
	SELECT	a.nr_seq_grupo,
		a.nr_seq_fluxo
	from	pls_ocorrencia_benef b,
		pls_analise_glo_ocor_grupo	a
	where	b.nr_sequencia = a.nr_seq_ocor_benef
	and	a.nr_seq_analise	= nr_seq_analise_p
	and	not exists (SELECT	1
				from	pls_auditoria_conta_grupo	x
				where	x.nr_seq_analise	= nr_seq_analise_p
				and	x.nr_seq_grupo		= a.nr_seq_grupo)
	group by
		a.nr_seq_grupo,
		nr_seq_fluxo;

-- Reabertura de grupos. Busca os grupos de auditoria que devem ser reabertos por conta das ocorrencias/glosas lnacadas.
cr_grupo_reabrir CURSOR(	nr_seq_analise_pc	pls_analise_glo_ocor_grupo.nr_seq_analise%type,
				nr_seq_grupo_atual_pc	pls_analise_glo_ocor_grupo.nr_seq_grupo%type,
				nr_ordem_atual_pc	pls_auditoria_conta_grupo.nr_seq_ordem%type) FOR
	SELECT	b.nr_sequencia
	from	pls_analise_glo_ocor_grupo	a,
		pls_auditoria_conta_grupo	b
	where	a.nr_seq_analise	= nr_seq_analise_pc
	and	a.ie_status		= 'P'
	and	((coalesce(a.nr_seq_grupo::text, '') = '') or (coalesce(nr_seq_grupo_atual_pc::text, '') = '') or (a.nr_seq_grupo <> nr_seq_grupo_atual_pc))
	and	b.nr_seq_analise	= a.nr_seq_analise
	and	b.nr_seq_grupo		= a.nr_seq_grupo
	and (coalesce(nr_ordem_atual_pc::text, '') = '' or b.nr_seq_ordem <= nr_ordem_atual_pc)
	and	exists (	SELECT	1
			from	pls_analise_glo_ocor_grupo	x
			where	x.nr_seq_analise	= nr_seq_analise_pc
			and	not exists (select	1
						from	pls_auditoria_conta_grupo	y
						where	y.nr_seq_analise	= nr_seq_analise_pc
						and	y.nr_seq_grupo		= x.nr_seq_grupo
						and	coalesce(y.dt_liberacao::text, '') = '')
			and	exists (	select 	1
						from	pls_ocorrencia_benef 	y
						where	y.nr_sequencia	= x.nr_seq_ocor_benef
						and (y.ie_auditoria	= 'S' or coalesce(y.ie_auditoria::text, '') = '')))
	and	exists (	select 	1
				from	pls_ocorrencia_benef 	y
				where	y.nr_sequencia	= a.nr_seq_ocor_benef
				and (y.ie_auditoria	= 'S' or coalesce(y.ie_auditoria::text, '') = ''))
	order by
		b.nr_seq_ordem desc;

BEGIN

if (nr_seq_grupo_atual_p IS NOT NULL AND nr_seq_grupo_atual_p::text <> '') then
	begin
	select	a.nr_seq_ordem
	into STRICT	nr_seq_ordem_grupo_atual_w
	from	pls_auditoria_conta_grupo a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	a.nr_seq_grupo		= nr_seq_grupo_atual_p;
	exception
		when others then
		nr_seq_ordem_grupo_atual_w	:= null;
	end;
else
	nr_seq_ordem_grupo_atual_w	:= null;
end if;

ie_limpou_outro_grupo_w := false;

-- Varrer os grupos que tenham de ser reabertos por conta de uma nova ocorrencia gerada.
for	rw_grupo_reabrir_w in cr_grupo_reabrir(nr_seq_analise_p, nr_seq_grupo_atual_p, nr_seq_ordem_grupo_atual_w) loop

	-- Desfaz a finalizacao do grupo para que a ocorrencia gerada seja revisada.
	CALL pls_desf_final_grupo_analise(nr_seq_analise_p, null, rw_grupo_reabrir_w.nr_sequencia, nm_usuario_p, cd_estabelecimento_p,'S');
	
	--  identificar que existe algum grupo que foi reaberto. 
	ie_limpou_outro_grupo_w := true;
	
end loop; -- cr_grupo_reabrir

-- Se algum grupo foi reaberto entao o grupo atual deve ser descvinculado.

--Retirei o tratamento pois o processo deve transcorrer ate a finalizacao da analise, quando entao sera realizada a auditoria pelo grupo de menor ordem
open C01;
loop
fetch C01 into	
	nr_seq_grupo_w,
	nr_seq_ordem_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (coalesce(nr_seq_ordem_w::text, '') = '') then
		select	max(nr_seq_fluxo)
		into STRICT	nr_seq_ordem_w
		from	pls_ocorrencia_grupo a
		where	a.nr_seq_grupo	= nr_seq_grupo_w
		and	a.ie_situacao	= 'A';
		
		if (coalesce(nr_seq_ordem_w::text, '') = '') then
			select	max(nr_seq_fluxo_padrao)
			into STRICT	nr_seq_ordem_w
			from	pls_grupo_auditor a
			where	a.nr_sequencia	= nr_seq_grupo_w;
		end if;
	end if;
	
	/* Colocado esse tratamento devido a PLS_INSERIR_GRUPO_AUD somar um ao fluxo */

	nr_seq_ordem_w	:= nr_seq_ordem_w - 1;
	
	nr_seq_grupo_criado_w := pls_inserir_grupo_aud(nr_seq_analise_p, nr_seq_grupo_w, nr_seq_ordem_w, 'Grupo inserido por geracao de glosa/ocorrencia durante a analise', nm_usuario_p, cd_estabelecimento_p, nr_seq_grupo_criado_w);

	/* Verificar se tem algum fluxo com ordem posterior a este grupo ja finalizado */

	select	max(nr_seq_ordem)
	into STRICT	nr_seq_fluxo_ant_w
	from	pls_auditoria_conta_grupo a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	a.nr_seq_ordem > nr_seq_ordem_w
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	nr_seq_grupo <> nr_seq_grupo_w;
	
	/* Se houver, tem que colocar como seguinte a este */

	if (nr_seq_fluxo_ant_w IS NOT NULL AND nr_seq_fluxo_ant_w::text <> '') then
		update	pls_auditoria_conta_grupo
		set	nr_seq_ordem	= nr_seq_fluxo_ant_w + 1,
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_seq_analise	= nr_seq_analise_p
		and	nr_sequencia	= nr_seq_grupo_criado_w;
	end if;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_analise_atualizar_fluxo ( nr_seq_analise_p bigint, nr_seq_grupo_atual_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

