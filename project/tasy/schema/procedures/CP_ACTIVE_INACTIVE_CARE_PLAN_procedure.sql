-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cp_active_inactive_care_plan ( nr_seq_care_plan_p bigint, nm_usuario_p text) AS $body$
DECLARE



qt_records_w			bigint;
qt_records_ww			bigint;
qt_records_www			bigint;
ds_unique_value_cp_w		care_plan.ds_unique_value%type;
	

/*---------------- REGISTROS VELHOS ------------------------*/
	
	
/*Care Plan antigo*/
	
c_care_plan_old CURSOR FOR
SELECT	nr_sequencia
from	care_plan
where	ds_unique_value = ds_unique_value_cp_w
and	ie_situacao = 'A';
c_care_plan_old_w	c_care_plan_old%rowtype;
	
/*Problemas vinculados com Care Plan antigo*/
	
c_possible_prob_old CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_problem
from	cp_possible_prob
where	nr_seq_care_plan = c_care_plan_old_w.nr_sequencia;
c_possible_prob_old_w	c_possible_prob_old%rowtype;

/*Metas vinculadas com o Care Plan antigo*/

c_cp_goals_old CURSOR FOR
SELECT	'C' ie_type_goal,
	nr_sequencia,
	nr_seq_goal
from	cp_problem_goal
where	nr_seq_possible_prob = c_possible_prob_old_w.nr_sequencia

union all

SELECT	'E' ie_type_goal,
	nr_sequencia,
	nr_seq_goal
from	cp_education
where	nr_seq_care_plan = c_care_plan_old_w.nr_sequencia;
c_cp_goals_old_w	c_cp_goals_old%rowtype;

/*Indicadores vinculados com o Care Plan antigo*/

c_cp_goal_indicator_old CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_indicator
from	cp_goal_indicator
where	nr_seq_goal = c_cp_goals_old_w.nr_seq_goal;
c_cp_goal_indicator_old_w	c_cp_goal_indicator_old%rowtype;

/*Mensurações vinculadas com o Care Plan antigo*/

c_cp_indicator_measure_old CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_measure
from	cp_indicator_measure
where	nr_seq_indicator = c_cp_goal_indicator_old_w.nr_seq_indicator;
c_cp_indicator_measure_old_w	c_cp_indicator_measure_old%rowtype;

/*Orientação das mensurações vinculadas com o Care Plan antigo*/

c_cp_indic_measure_guid_old CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_guidance
from	cp_indicator_measure_guid
where	nr_seq_indic_measure = c_cp_indicator_measure_old_w.nr_sequencia;
c_cp_indic_measure_guid_old_w	c_cp_indic_measure_guid_old%rowtype;


/*Termos clínicos vinculados com as Metas do Care Plan antigo*/

c_cp_goal_clin_term_old CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_clinical_term
from	cp_goal_clin_term
where	nr_seq_goal = c_cp_goals_old_w.nr_seq_goal;
c_cp_goal_clin_term_old_w	c_cp_goal_clin_term_old%rowtype;


/*Plano de intervenção vinculado com o Care Plan antigo*/

c_cp_interv_plan_old CURSOR FOR
SELECT	nr_sequencia
from	cp_interv_plan
where	nr_seq_possible_prob = c_possible_prob_old_w.nr_sequencia;
c_cp_interv_plan_old_w	c_cp_interv_plan_old%rowtype;

/*Intervenções vinculadas com o care plan antigo*/

c_cp_interv_plan_assoc_old CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_intervention
from	cp_interv_plan_assoc
where	nr_seq_interv_plan = c_cp_interv_plan_old_w.nr_sequencia;
c_cp_interv_plan_assoc_old_w	c_cp_interv_plan_assoc_old%rowtype;


/*Atividades vinculadas com as intervenções do care plan antigo*/

c_cp_interv_item_assoc_old CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_interv_item
from	cp_intervention_item_assoc
where	nr_seq_intervention = c_cp_interv_plan_assoc_old_w.nr_seq_intervention;
c_cp_interv_item_assoc_old_w	c_cp_interv_item_assoc_old%rowtype;


/*Termos clínicos vinculadas com as intervenções do care plan antigo*/

c_cp_interv_clin_term_old CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_clinical_term
from	cp_intervention_clin_term
where	nr_seq_intervention = c_cp_interv_plan_assoc_old_w.nr_seq_intervention;
c_cp_interv_clin_term_old_w	c_cp_interv_clin_term_old%rowtype;


/*Orientações vinculadas ao plano de intervenção do care plan antigo*/

c_cp_interv_plan_guid_old CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_guidance
from	cp_interv_plan_guid
where	nr_seq_interv_plan = c_cp_interv_plan_old_w.nr_sequencia;
c_cp_interv_plan_guid_old_w	c_cp_interv_plan_guid_old%rowtype;


/*Termos clínicos vinculados com Care Plan antigo*/
	
c_cp_clinical_term_assoc_old CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_clin_term
from	cp_clinical_term_assoc
where	nr_seq_care_plan = c_care_plan_old_w.nr_sequencia;
c_cp_clinical_term_assoc_old_w	c_cp_clinical_term_assoc_old%rowtype;




/* ------------------ REGISTROS NOVOS ------------------------*/



/*Problemas vinculados com Care Plan novo*/
	
c_possible_prob_new CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_problem	
from	cp_possible_prob
where	nr_seq_care_plan = nr_seq_care_plan_p;
c_possible_prob_new_w	c_possible_prob_new%rowtype;

/*Metas vincladas com Care Plan novo*/

c_cp_goals_new CURSOR FOR
SELECT	'C' ie_type_goal,
	nr_sequencia,
	nr_seq_goal
from	cp_problem_goal
where	nr_seq_possible_prob = c_possible_prob_new_w.nr_sequencia

union all

SELECT	'E' ie_type_goal,
	nr_sequencia,
	nr_seq_goal
from	cp_education
where	nr_seq_care_plan = nr_seq_care_plan_p;
c_cp_goals_new_w	c_cp_goals_new%rowtype;

/*Indicadores vinculados com Care Plan novo*/

c_cp_goal_indicator_new CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_indicator
from	cp_goal_indicator
where	nr_seq_goal = c_cp_goals_new_w.nr_seq_goal;
c_cp_goal_indicator_new_w	c_cp_goal_indicator_new%rowtype;


/*Mensurações vinculadas com Care Plan novo*/

c_cp_indicator_measure_new CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_measure
from	cp_indicator_measure
where	nr_seq_indicator = c_cp_goal_indicator_new_w.nr_seq_indicator;
c_cp_indicator_measure_new_w	c_cp_indicator_measure_new%rowtype;

/*Orientações da mensuração que estão vinculadas com o care olan novo*/

c_cp_indic_meas_guid_new CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_guidance
from	cp_indicator_measure_guid
where	nr_seq_indic_measure = c_cp_indicator_measure_new_w.nr_sequencia;
c_cp_indic_meas_guid_new_w	c_cp_indic_meas_guid_new%rowtype;
	
/*Termos clínicos vinculados com as Metas do Care Plan novo*/

c_cp_goal_clin_term_new CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_clinical_term
from	cp_goal_clin_term
where	nr_seq_goal = c_cp_goals_new_w.nr_seq_goal;
c_cp_goal_clin_term_new_w	c_cp_goal_clin_term_new%rowtype;

/*Plano de intervenção vinculado com o Care Plan novo*/

c_cp_interv_plan_new CURSOR FOR
SELECT	nr_sequencia
from	cp_interv_plan
where	nr_seq_possible_prob = c_possible_prob_new_w.nr_sequencia;
c_cp_interv_plan_new_w	c_cp_interv_plan_new%rowtype;	

/*Intervenções vinculadas com o care plan Novo*/

c_cp_interv_plan_assoc_new CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_intervention
from	cp_interv_plan_assoc
where	nr_seq_interv_plan = c_cp_interv_plan_new_w.nr_sequencia;
c_cp_interv_plan_assoc_new_w	c_cp_interv_plan_assoc_new%rowtype;

/*Atividades vinculadas com as intervenções do care plan novo*/

c_cp_interv_item_assoc_new CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_interv_item
from	cp_intervention_item_assoc
where	nr_seq_intervention = c_cp_interv_plan_assoc_new_w.nr_seq_intervention;
c_cp_interv_item_assoc_new_w	c_cp_interv_item_assoc_new%rowtype;


/*Termos clínicos vinculadas com as intervenções do care plan novo*/

c_cp_interv_clin_term_new CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_clinical_term
from	cp_intervention_clin_term
where	nr_seq_intervention = c_cp_interv_plan_assoc_new_w.nr_seq_intervention;
c_cp_interv_clin_term_new_w	c_cp_interv_clin_term_new%rowtype;

/*Orientações vinculadas com o plano de intervenção do care plan novo*/

c_cp_interv_plan_guid_new CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_guidance
from	cp_interv_plan_guid
where	nr_seq_interv_plan = c_cp_interv_plan_new_w.nr_sequencia;
c_cp_interv_plan_guid_new_w	c_cp_interv_plan_guid_new%rowtype;


/*Termos clínicos vinculados com Care Plan novo*/
	
c_cp_clinical_term_assoc_new CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_clin_term
from	cp_clinical_term_assoc
where	nr_seq_care_plan = nr_seq_care_plan_p;
c_cp_clinical_term_assoc_new_w	c_cp_clinical_term_assoc_new%rowtype;


			

BEGIN

/*ANTIGO*/



/*CARE_PLAN*/

select	max(ds_unique_value)
into STRICT	ds_unique_value_cp_w
from	care_plan
where	nr_sequencia = nr_seq_care_plan_p;

if (ds_unique_value_cp_w IS NOT NULL AND ds_unique_value_cp_w::text <> '') then
		
	open c_care_plan_old;
	loop
	fetch c_care_plan_old into	
		c_care_plan_old_w;
	EXIT WHEN NOT FOUND; /* apply on c_care_plan_old */
		begin
		
		/*Inativa CARE PLAN antigo*/

		update	care_plan
		set	ie_situacao = 'I',
			dt_atualizacao = clock_timestamp(),
			nm_usuario  = nm_usuario_p	
		where	nr_sequencia = c_care_plan_old_w.nr_sequencia;
		
		/*Inativa CP_POPULATION do care plan antigo*/

		update	CP_POPULATION
		set	ie_situacao = 'I',
			dt_atualizacao = clock_timestamp(),
			nm_usuario  = nm_usuario_p	
		where	nr_seq_care_plan = c_care_plan_old_w.nr_sequencia;
		
		/*Inativa CP_KEYWORD do care plan antigo*/

		update	CP_KEYWORD
		set	ie_situacao = 'I',
			dt_atualizacao = clock_timestamp(),
			nm_usuario  = nm_usuario_p	
		where	nr_seq_care_plan = c_care_plan_old_w.nr_sequencia;
			
		/*Inativa CP_PROBLEM quando eles não estão mais vinculados com nenhum care plan ativo*/

		open c_possible_prob_old;
		loop
		fetch c_possible_prob_old into	
			c_possible_prob_old_w;
		EXIT WHEN NOT FOUND; /* apply on c_possible_prob_old */
			begin
			
			update	cp_possible_prob
			set	ie_situacao = 'I',
				dt_atualizacao = clock_timestamp(),
				nm_usuario  = nm_usuario_p	
			where	nr_sequencia = c_possible_prob_old_w.nr_sequencia
			and	ie_situacao = 'A';
			
			select	count(*)
			into STRICT	qt_records_w
			from	care_plan a,
				cp_possible_prob b				
			where	a.nr_sequencia = b.nr_seq_care_plan
			and	a.ie_situacao = 'A'
			and	b.nr_seq_problem = c_possible_prob_old_w.nr_seq_problem;
			
			if (qt_records_w = 0) then
				update	cp_problem
				set	ie_situacao = 'I',
					dt_atualizacao = clock_timestamp(),
					nm_usuario  = nm_usuario_p	
				where	nr_sequencia = c_possible_prob_old_w.nr_seq_problem
				and	ie_situacao = 'A';
			end if;
			
			/*Inativa CP_GOAL quando elas não estão mais vinculadas com nenhum care plan ativo*/

			open c_cp_goals_old;
			loop
			fetch c_cp_goals_old into	
				c_cp_goals_old_w;
			EXIT WHEN NOT FOUND; /* apply on c_cp_goals_old */
				begin
				
				if (c_cp_goals_old_w.ie_type_goal = 'C') then
					update	cp_problem_goal
					set	ie_situacao = 'I',
						dt_atualizacao = clock_timestamp(),
						nm_usuario  = nm_usuario_p	
					where	nr_sequencia = c_cp_goals_old_w.nr_sequencia
					and	ie_situacao = 'A';
					
					select	count(*)
					into STRICT	qt_records_w
					from	care_plan a,
						cp_possible_prob b,
						cp_problem_goal c
					where	a.nr_sequencia = b.nr_seq_care_plan
					and	b.nr_sequencia = c.nr_seq_possible_prob
					and	a.ie_situacao = 'A'
					and	c.nr_seq_goal = c_cp_goals_old_w.nr_seq_goal;
				
					if (qt_records_w = 0) then
						update	cp_goal
						set	ie_situacao = 'I',
							dt_atualizacao = clock_timestamp(),
							nm_usuario  = nm_usuario_p	
						where	nr_sequencia = c_cp_goals_old_w.nr_seq_goal
						and	ie_situacao = 'A';					
					end if;
				elsif (c_cp_goals_old_w.ie_type_goal = 'E') then
				
					update	cp_education
					set	ie_situacao = 'I',
						dt_atualizacao = clock_timestamp(),
						nm_usuario  = nm_usuario_p	
					where	nr_sequencia = c_cp_goals_old_w.nr_sequencia
					and	ie_situacao = 'A';
					
					select	count(*)
					into STRICT	qt_records_w
					from	care_plan a,
						cp_education b
					where	a.nr_sequencia = b.nr_seq_care_plan
					and	a.ie_situacao = 'A'
					and	b.nr_seq_goal = c_cp_goals_old_w.nr_seq_goal;
				
					if (qt_records_w = 0) then
						update	cp_goal
						set	ie_situacao = 'I',
							dt_atualizacao = clock_timestamp(),
							nm_usuario  = nm_usuario_p	
						where	nr_sequencia = c_cp_goals_old_w.nr_seq_goal
						and	ie_situacao = 'A';					
					end if;
				end if;	
				
				/*Inativa CP_INDICATOR quando eles não estão mais vinculados com nenhum care plan ativo*/

				open c_cp_goal_indicator_old;
				loop
				fetch c_cp_goal_indicator_old into	
					c_cp_goal_indicator_old_w;
				EXIT WHEN NOT FOUND; /* apply on c_cp_goal_indicator_old */
					begin
					
					update	cp_goal_indicator
					set	ie_situacao = 'I',
						dt_atualizacao = clock_timestamp(),
						nm_usuario  = nm_usuario_p	
					where	nr_sequencia = c_cp_goal_indicator_old_w.nr_sequencia
					and	ie_situacao = 'A';
					
					select	count(*)
					into STRICT	qt_records_w
					from	care_plan a,
						cp_possible_prob b,
						cp_problem_goal c,
						cp_goal_indicator d
					where	a.nr_sequencia = b.nr_seq_care_plan
					and	b.nr_sequencia = c.nr_seq_possible_prob
					and	c.nr_sequencia = d.nr_seq_goal
					and	a.ie_situacao = 'A'
					and	d.nr_seq_indicator = c_cp_goal_indicator_old_w.nr_seq_indicator;
					
					if (qt_records_w = 0) then
						update	cp_indicator
						set	ie_situacao = 'I',
							dt_atualizacao = clock_timestamp(),
							nm_usuario  = nm_usuario_p	
						where	nr_sequencia = c_cp_goal_indicator_old_w.nr_seq_indicator
						and	ie_situacao = 'A';
					end if;
					
					
					/*Inativa CP_MEASURE quando eles não estão mais vinculados com nenhum care plan ativo*/

					open c_cp_indicator_measure_old;
					loop
					fetch c_cp_indicator_measure_old into	
						c_cp_indicator_measure_old_w;
					EXIT WHEN NOT FOUND; /* apply on c_cp_indicator_measure_old */
						begin
						
						update	cp_indicator_measure
						set	ie_situacao = 'I',
							dt_atualizacao = clock_timestamp(),
							nm_usuario  = nm_usuario_p	
						where	nr_sequencia = c_cp_indicator_measure_old_w.nr_sequencia
						and	ie_situacao = 'A';
						
						select	count(*)
						into STRICT	qt_records_w
						from	care_plan a,
							cp_possible_prob b,
							cp_problem_goal c,
							cp_goal_indicator d,
							cp_indicator e,
							cp_indicator_measure f
						where	a.nr_sequencia = b.nr_seq_care_plan
						and	b.nr_sequencia = c.nr_seq_possible_prob
						and	c.nr_sequencia = d.nr_seq_goal
						and	d.nr_seq_indicator = e.nr_sequencia
						and	e.nr_sequencia = f.nr_seq_indicator
						and	a.ie_situacao = 'A'
						and	f.nr_seq_measure = c_cp_indicator_measure_old_w.nr_seq_measure;
						
						if (qt_records_w = 0) then
							update	cp_measure
							set	ie_situacao = 'I',
								dt_atualizacao = clock_timestamp(),
								nm_usuario  = nm_usuario_p	
							where	nr_sequencia = c_cp_indicator_measure_old_w.nr_seq_measure
							and	ie_situacao = 'A';							
						end if;
						
						/*Inativa CP_GUIDANCE quando elas não estão mais vinculadas com nenhum care plan ativo*/

						open c_cp_indic_measure_guid_old;
						loop
						fetch c_cp_indic_measure_guid_old into	
							c_cp_indic_measure_guid_old_w;
						EXIT WHEN NOT FOUND; /* apply on c_cp_indic_measure_guid_old */
							begin
							
							update	cp_indicator_measure_guid
							set	ie_situacao = 'I',
								dt_atualizacao = clock_timestamp(),
								nm_usuario  = nm_usuario_p	
							where	nr_sequencia = c_cp_indic_measure_guid_old_w.nr_sequencia
							and	ie_situacao = 'A';	
							
							select	count(*)
							into STRICT	qt_records_w
							from	care_plan a,
								cp_possible_prob b,
								cp_problem_goal c,
								cp_goal_indicator d,
								cp_indicator e,
								cp_indicator_measure f,
								cp_indicator_measure_guid g
							where	a.nr_sequencia = b.nr_seq_care_plan
							and	b.nr_sequencia = c.nr_seq_possible_prob
							and	c.nr_sequencia = d.nr_seq_goal
							and	d.nr_seq_indicator = e.nr_sequencia
							and	e.nr_sequencia = f.nr_seq_indicator
							and	f.nr_sequencia = g.nr_seq_indic_measure
							and	a.ie_situacao = 'A'
							and	g.nr_seq_guidance = c_cp_indic_measure_guid_old_w.nr_seq_guidance;
							
							select	count(*)
							into STRICT	qt_records_ww
							from	care_plan a,
								cp_possible_prob b,
								cp_interv_plan c,
								cp_interv_plan_guid d
							where	a.nr_sequencia = b.nr_seq_care_plan
							and	b.nr_sequencia = c.nr_seq_possible_prob
							and	c.nr_sequencia = d.nr_seq_interv_plan
							and	a.ie_situacao = 'A'
							and	d.nr_seq_guidance = c_cp_indic_measure_guid_old_w.nr_seq_guidance;
							
							if (qt_records_w  = 0) and (qt_records_ww = 0) then
								update	cp_guidance
								set	ie_situacao = 'I',
									dt_atualizacao = clock_timestamp(),
									nm_usuario  = nm_usuario_p	
								where	nr_sequencia = c_cp_indic_measure_guid_old_w.nr_seq_guidance
								and	ie_situacao = 'A';
							end if;
							end;
						end loop;
						close c_cp_indic_measure_guid_old;
						end;
					end loop;
					close c_cp_indicator_measure_old;
					
					end;
				end loop;
				close c_cp_goal_indicator_old;
				
				/*Inativa CP_CLINICAL_TERM quando elas não estão mais vinculadas com nenhum care plan ativo*/

				open c_cp_goal_clin_term_old;
				loop
				fetch c_cp_goal_clin_term_old into	
					c_cp_goal_clin_term_old_w;
				EXIT WHEN NOT FOUND; /* apply on c_cp_goal_clin_term_old */
					begin
					
					update	cp_goal_clin_term
					set	ie_situacao = 'I',
						dt_atualizacao = clock_timestamp(),
						nm_usuario  = nm_usuario_p	
					where	nr_sequencia = c_cp_goal_clin_term_old_w.nr_sequencia
					and	ie_situacao = 'A';
					
					select	count(*)
					into STRICT	qt_records_w
					from	care_plan a,
						cp_possible_prob b,
						cp_problem_goal c,
						cp_goal_clin_term d
					where	a.nr_sequencia = b.nr_seq_care_plan
					and	b.nr_sequencia = c.nr_seq_possible_prob
					and	c.nr_sequencia = d.nr_seq_goal
					and	a.ie_situacao = 'A'
					and	d.nr_seq_clinical_term = c_cp_goal_clin_term_old_w.nr_seq_clinical_term;
					
					select	count(*)
					into STRICT	qt_records_ww
					from	care_plan a,
						cp_possible_prob b,
						cp_interv_plan c,
						cp_interv_plan_assoc d,
						cp_intervention e,
						cp_intervention_clin_term g
					where	a.nr_sequencia = b.nr_seq_care_plan
					and	b.nr_sequencia = c.nr_seq_possible_prob
					and	c.nr_sequencia = d.nr_seq_interv_plan
					and	e.nr_sequencia = d.nr_seq_intervention
					and	g.nr_seq_intervention = e.nr_sequencia					
					and	a.ie_situacao = 'A'
					and	g.nr_seq_clinical_term = c_cp_goal_clin_term_old_w.nr_seq_clinical_term;
					
					select	count(*)
					into STRICT	qt_records_www
					from	care_plan a,
						cp_clinical_term_assoc b
					where	a.nr_sequencia = b.nr_seq_care_plan
					and	a.ie_situacao = 'A'
					and	b.nr_seq_clin_term = c_cp_goal_clin_term_old_w.nr_seq_clinical_term;
					
					
					if (qt_records_w   = 0) and (qt_records_ww  = 0) and (qt_records_www = 0) then
						
						update	cp_clinical_term
						set	ie_situacao = 'I',
							dt_atualizacao = clock_timestamp(),
							nm_usuario  = nm_usuario_p	
						where	nr_sequencia = c_cp_goal_clin_term_old_w.nr_seq_clinical_term
						and	ie_situacao = 'A';
					end if;					
					
					end;
				end loop;
				close c_cp_goal_clin_term_old;
				
				end;
			end loop;
			close c_cp_goals_old;		
			
			
			open c_cp_interv_plan_old;
			loop
			fetch c_cp_interv_plan_old into	
				c_cp_interv_plan_old_w;
			EXIT WHEN NOT FOUND; /* apply on c_cp_interv_plan_old */
				begin
				
				/*Inativa CP_INTERV_PLAN do care plan inativo*/

				update	cp_interv_plan
				set	ie_situacao = 'I',
					dt_atualizacao = clock_timestamp(),
					nm_usuario  = nm_usuario_p	
				where	nr_sequencia = c_cp_interv_plan_old_w.nr_sequencia
				and	ie_situacao = 'A';
				
				
				open c_cp_interv_plan_assoc_old;
				loop
				fetch c_cp_interv_plan_assoc_old into	
					c_cp_interv_plan_assoc_old_w;
				EXIT WHEN NOT FOUND; /* apply on c_cp_interv_plan_assoc_old */
					begin
					
					update	cp_interv_plan_assoc
					set	ie_situacao = 'I',
						dt_atualizacao = clock_timestamp(),
						nm_usuario  = nm_usuario_p	
					where	nr_sequencia = c_cp_interv_plan_assoc_old_w.nr_sequencia
					and	ie_situacao = 'A';
					
					select	count(*)
					into STRICT	qt_records_w
					from	care_plan a,
						cp_possible_prob b,
						cp_interv_plan c,
						cp_interv_plan_assoc d
					where	a.nr_sequencia = b.nr_seq_care_plan
					and	b.nr_sequencia = c.nr_seq_possible_prob
					and	c.nr_sequencia = d.nr_seq_interv_plan
					and	a.ie_situacao = 'A'
					and	d.nr_seq_intervention = c_cp_interv_plan_assoc_old_w.nr_seq_intervention;
					
					if (qt_records_w = 0) then
						
						update	cp_intervention
						set	ie_situacao = 'I',
							dt_atualizacao = clock_timestamp(),
							nm_usuario  = nm_usuario_p	
						where	nr_sequencia = c_cp_interv_plan_assoc_old_w.nr_seq_intervention
						and	ie_situacao = 'A';					
					end if;
					
					/*Inativa CP_INTERVENTION_ITEM quando elas não estão mais vinculadas com nenhum care plan ativo*/

					open c_cp_interv_item_assoc_old;
					loop
					fetch c_cp_interv_item_assoc_old into	
						c_cp_interv_item_assoc_old_w;
					EXIT WHEN NOT FOUND; /* apply on c_cp_interv_item_assoc_old */
						begin
						
						update	cp_intervention_item_assoc
						set	ie_situacao = 'I',
							dt_atualizacao = clock_timestamp(),
							nm_usuario  = nm_usuario_p	
						where	nr_sequencia = c_cp_interv_item_assoc_old_w.nr_sequencia
						and	ie_situacao = 'A';

						select	count(*)
						into STRICT	qt_records_w
						from	care_plan a,
							cp_possible_prob b,
							cp_interv_plan c,
							cp_interv_plan_assoc d,
							cp_intervention e,
							cp_intervention_item_assoc f
						where	a.nr_sequencia = b.nr_seq_care_plan
						and	b.nr_sequencia = c.nr_seq_possible_prob
						and	c.nr_sequencia = d.nr_seq_interv_plan
						and	e.nr_sequencia = d.nr_seq_intervention
						and	e.nr_sequencia = f.nr_seq_intervention
						and	a.ie_situacao = 'A'
						and	f.nr_seq_interv_item = c_cp_interv_item_assoc_old_w.nr_seq_interv_item;
						
						if (qt_records_w = 0) then
						
							update	cp_intervention_item
							set	ie_situacao = 'I',
								dt_atualizacao = clock_timestamp(),
								nm_usuario  = nm_usuario_p	
							where	nr_sequencia = c_cp_interv_item_assoc_old_w.nr_seq_interv_item
							and	ie_situacao = 'A';					
						end if;
						
						end;
					end loop;
					close c_cp_interv_item_assoc_old;
					
					
					/*Inativa CP_CLINICAL_TERM quando elas não estão mais vinculadas com nenhum care plan ativo*/

					open c_cp_interv_clin_term_old;
					loop
					fetch c_cp_interv_clin_term_old into	
						c_cp_interv_clin_term_old_w;
					EXIT WHEN NOT FOUND; /* apply on c_cp_interv_clin_term_old */
						begin
						
						update	cp_intervention_clin_term
						set	ie_situacao = 'I',
							dt_atualizacao = clock_timestamp(),
							nm_usuario  = nm_usuario_p	
						where	nr_sequencia = c_cp_interv_clin_term_old_w.nr_sequencia
						and	ie_situacao = 'A';
						
						
						select	count(*)
						into STRICT	qt_records_w
						from	care_plan a,
							cp_possible_prob b,
							cp_problem_goal c,
							cp_goal_clin_term d
						where	a.nr_sequencia = b.nr_seq_care_plan
						and	b.nr_sequencia = c.nr_seq_possible_prob
						and	c.nr_sequencia = d.nr_seq_goal
						and	a.ie_situacao = 'A'
						and	d.nr_seq_clinical_term = c_cp_interv_clin_term_old_w.nr_seq_clinical_term;
						
						select	count(*)
						into STRICT	qt_records_ww
						from	care_plan a,
							cp_possible_prob b,
							cp_interv_plan c,
							cp_interv_plan_assoc d,
							cp_intervention e,
							cp_intervention_clin_term g
						where	a.nr_sequencia = b.nr_seq_care_plan
						and	b.nr_sequencia = c.nr_seq_possible_prob
						and	c.nr_sequencia = d.nr_seq_interv_plan
						and	e.nr_sequencia = d.nr_seq_intervention
						and	g.nr_seq_intervention = e.nr_sequencia					
						and	a.ie_situacao = 'A'
						and	g.nr_seq_clinical_term = c_cp_interv_clin_term_old_w.nr_seq_clinical_term;
						
						select	count(*)
						into STRICT	qt_records_www
						from	care_plan a,
							cp_clinical_term_assoc b
						where	a.nr_sequencia = b.nr_seq_care_plan
						and	a.ie_situacao = 'A'
						and	b.nr_seq_clin_term = c_cp_interv_clin_term_old_w.nr_seq_clinical_term;
						
						if (qt_records_w   = 0) and (qt_records_ww  = 0) and (qt_records_www = 0) then
							
							update	cp_clinical_term
							set	ie_situacao = 'I',
								dt_atualizacao = clock_timestamp(),
								nm_usuario  = nm_usuario_p	
							where	nr_sequencia = c_cp_interv_clin_term_old_w.nr_seq_clinical_term
							and	ie_situacao = 'A';
						end if;
						
						end;
					end loop;
					close c_cp_interv_clin_term_old;
					
					end;
				end loop;
				close c_cp_interv_plan_assoc_old;
				
				
				/*Inativa CP_GUIDANCE quando elas não estão mais vinculadas com nenhum care plan ativo*/

				open c_cp_interv_plan_guid_old;
				loop
				fetch c_cp_interv_plan_guid_old into	
					c_cp_interv_plan_guid_old_w;
				EXIT WHEN NOT FOUND; /* apply on c_cp_interv_plan_guid_old */
					begin
					
					update	cp_interv_plan_guid
					set	ie_situacao = 'I',
						dt_atualizacao = clock_timestamp(),
						nm_usuario  = nm_usuario_p	
					where	nr_sequencia = c_cp_interv_plan_guid_old_w.nr_sequencia
					and	ie_situacao = 'A';
					
					select	count(*)
					into STRICT	qt_records_w
					from	care_plan a,
						cp_possible_prob b,
						cp_problem_goal c,
						cp_goal_indicator d,
						cp_indicator e,
						cp_indicator_measure f,
						cp_indicator_measure_guid g
					where	a.nr_sequencia = b.nr_seq_care_plan
					and	b.nr_sequencia = c.nr_seq_possible_prob
					and	c.nr_sequencia = d.nr_seq_goal
					and	d.nr_seq_indicator = e.nr_sequencia
					and	e.nr_sequencia = f.nr_seq_indicator
					and	f.nr_sequencia = g.nr_seq_indic_measure
					and	a.ie_situacao = 'A'
					and	g.nr_seq_guidance = c_cp_interv_plan_guid_old_w.nr_seq_guidance;
					
					select	count(*)
					into STRICT	qt_records_ww
					from	care_plan a,
						cp_possible_prob b,
						cp_interv_plan c,
						cp_interv_plan_guid d
					where	a.nr_sequencia = b.nr_seq_care_plan
					and	b.nr_sequencia = c.nr_seq_possible_prob
					and	c.nr_sequencia = d.nr_seq_interv_plan
					and	a.ie_situacao = 'A'
					and	d.nr_seq_guidance = c_cp_interv_plan_guid_old_w.nr_seq_guidance;
					
					if (qt_records_w  = 0) and (qt_records_ww = 0) then
						update	cp_guidance
						set	ie_situacao = 'I',
							dt_atualizacao = clock_timestamp(),
							nm_usuario  = nm_usuario_p	
						where	nr_sequencia = c_cp_interv_plan_guid_old_w.nr_seq_guidance
						and	ie_situacao = 'A';
					end if;
					
					
					
					end;
				end loop;
				close c_cp_interv_plan_guid_old;
			
				end;
			end loop;
			close c_cp_interv_plan_old;
			
			end;
		end loop;
		close c_possible_prob_old;
		
		/*Inativa CP_CLINICAL_TERM quando elas não estão mais vinculadas com nenhum care plan ativo*/

		open c_cp_clinical_term_assoc_old;
		loop
		fetch c_cp_clinical_term_assoc_old into	
			c_cp_clinical_term_assoc_old_w;
		EXIT WHEN NOT FOUND; /* apply on c_cp_clinical_term_assoc_old */
			begin			
			
			update	cp_clinical_term_assoc
			set	ie_situacao = 'I',
				dt_atualizacao = clock_timestamp(),
				nm_usuario  = nm_usuario_p	
			where	nr_sequencia = c_cp_clinical_term_assoc_old_w.nr_sequencia
			and	ie_situacao = 'A';
			
			select	count(*)
			into STRICT	qt_records_w
			from	care_plan a,
				cp_possible_prob b,
				cp_problem_goal c,
				cp_goal_clin_term d
			where	a.nr_sequencia = b.nr_seq_care_plan
			and	b.nr_sequencia = c.nr_seq_possible_prob
			and	c.nr_sequencia = d.nr_seq_goal
			and	a.ie_situacao = 'A'
			and	d.nr_seq_clinical_term = c_cp_clinical_term_assoc_old_w.nr_seq_clin_term;
			
			select	count(*)
			into STRICT	qt_records_ww
			from	care_plan a,
				cp_possible_prob b,
				cp_interv_plan c,
				cp_interv_plan_assoc d,
				cp_intervention e,
				cp_intervention_clin_term g
			where	a.nr_sequencia = b.nr_seq_care_plan
			and	b.nr_sequencia = c.nr_seq_possible_prob
			and	c.nr_sequencia = d.nr_seq_interv_plan
			and	e.nr_sequencia = d.nr_seq_intervention
			and	g.nr_seq_intervention = e.nr_sequencia					
			and	a.ie_situacao = 'A'
			and	g.nr_seq_clinical_term = c_cp_clinical_term_assoc_old_w.nr_seq_clin_term;
			
			select	count(*)
			into STRICT	qt_records_www
			from	care_plan a,
				cp_clinical_term_assoc b
			where	a.nr_sequencia = b.nr_seq_care_plan
			and	a.ie_situacao = 'A'
			and	b.nr_seq_clin_term = c_cp_clinical_term_assoc_old_w.nr_seq_clin_term;
			
			if (qt_records_w   = 0) and (qt_records_ww  = 0) and (qt_records_www = 0) then
				
				update	cp_clinical_term
				set	ie_situacao = 'I',
					dt_atualizacao = clock_timestamp(),
					nm_usuario  = nm_usuario_p	
				where	nr_sequencia = c_cp_clinical_term_assoc_old_w.nr_seq_clin_term
				and	ie_situacao = 'A';
			end if;		
			
			
			
			end;
		end loop;
		close c_cp_clinical_term_assoc_old;
	
	
		
		
		end;
	end loop;
	close c_care_plan_old;
	
	
	
	
	
	
end if;


/*NOVO*/



/*Ativa CARE PLAN novo*/

update	care_plan
set	ie_situacao = 'A',
	dt_atualizacao = clock_timestamp(),
	nm_usuario  = nm_usuario_p	
where	nr_sequencia = nr_seq_care_plan_p;

/*Ativa CP_POPULATION do care plan antigo*/

update	cp_population
set	ie_situacao = 'A',
	dt_atualizacao = clock_timestamp(),
	nm_usuario  = nm_usuario_p	
where	nr_seq_care_plan = nr_seq_care_plan_p;

/*Ativa CP_KEYWORD do care plan antigo*/

update	cp_keyword
set	ie_situacao = 'A',
	dt_atualizacao = clock_timestamp(),
	nm_usuario  = nm_usuario_p	
where	nr_seq_care_plan = nr_seq_care_plan_p;

open c_possible_prob_new;
loop
fetch c_possible_prob_new into	
	c_possible_prob_new_w;
EXIT WHEN NOT FOUND; /* apply on c_possible_prob_new */
	begin
	
	/*Ativa os possíveis problemas do care plan novo*/

	update	cp_possible_prob
	set	ie_situacao = 'A',
		dt_atualizacao = clock_timestamp(),
		nm_usuario  = nm_usuario_p	
	where	nr_sequencia = c_possible_prob_new_w.nr_sequencia
	and	ie_situacao = 'I';
	
	
	/*Ativa o cadastro dos problemas que são usados no care plan novo*/

	update	cp_problem
	set	ie_situacao = 'A',
		dt_atualizacao = clock_timestamp(),
		nm_usuario  = nm_usuario_p	
	where	nr_sequencia = c_possible_prob_new_w.nr_seq_problem
	and	ie_situacao = 'I';
	
	open c_cp_goals_new;
	loop
	fetch c_cp_goals_new into	
		c_cp_goals_new_w;
	EXIT WHEN NOT FOUND; /* apply on c_cp_goals_new */
		begin
		
		if (c_cp_goals_new_w.ie_type_goal = 'C') then
			/*Ativa as metas de cuidado vinculadas com o care plan novo*/

			
			update	cp_problem_goal
			set	ie_situacao = 'A',
				dt_atualizacao = clock_timestamp(),
				nm_usuario  = nm_usuario_p	
			where	nr_sequencia = c_cp_goals_new_w.nr_sequencia
			and	ie_situacao = 'I';
			
		elsif (c_cp_goals_new_w.ie_type_goal = 'E') then
			/*Ativa as metas educacionais vinculadas com o care plan novo*/

			update	cp_education
			set	ie_situacao = 'A',
				dt_atualizacao = clock_timestamp(),
				nm_usuario  = nm_usuario_p	
			where	nr_sequencia = c_cp_goals_new_w.nr_sequencia
			and	ie_situacao = 'I';
		end if;
		
		/*Ativa o cadastro das metas de cuidado que são usados no care plan novo*/

		update	cp_goal
		set	ie_situacao = 'A',
			dt_atualizacao = clock_timestamp(),
			nm_usuario  = nm_usuario_p	
		where	nr_sequencia = c_cp_goals_new_w.nr_seq_goal
		and	ie_situacao = 'I';
		
		
		open c_cp_goal_indicator_new;
		loop
		fetch c_cp_goal_indicator_new into	
			c_cp_goal_indicator_new_w;
		EXIT WHEN NOT FOUND; /* apply on c_cp_goal_indicator_new */
			begin
			
			/*Ativa os indicadores das metas de cuidado do care plan novo*/

			update	cp_goal_indicator
			set	ie_situacao = 'A',
				dt_atualizacao = clock_timestamp(),
				nm_usuario  = nm_usuario_p				
			where	nr_sequencia = c_cp_goal_indicator_new_w.nr_sequencia
			and	ie_situacao = 'I';
			
			/*Ativa o cadastro dos indicadores que são usados no care plan novo*/

			update	cp_indicator
			set	ie_situacao = 'A',
				dt_atualizacao = clock_timestamp(),
				nm_usuario  = nm_usuario_p	
			where	nr_sequencia = c_cp_goal_indicator_new_w.nr_seq_indicator
			and	ie_situacao = 'I';
			
			
			open c_cp_indicator_measure_new;
			loop
			fetch c_cp_indicator_measure_new into	
				c_cp_indicator_measure_new_w;
			EXIT WHEN NOT FOUND; /* apply on c_cp_indicator_measure_new */
				begin
				
				/*Ativa o vinculo dos indicadores com as mensurações do care plan novo*/

				update	cp_indicator_measure
				set	ie_situacao = 'A',
					dt_atualizacao = clock_timestamp(),
					nm_usuario  = nm_usuario_p					
				where	nr_sequencia = c_cp_indicator_measure_new_w.nr_sequencia
				and	ie_situacao = 'I';
				
				/*Ativa o cadastro das mensurações que são usadas no care plan novo*/

				update	cp_measure
				set	ie_situacao = 'A',
					dt_atualizacao = clock_timestamp(),
					nm_usuario  = nm_usuario_p	
				where	nr_sequencia = c_cp_indicator_measure_new_w.nr_seq_measure
				and	ie_situacao = 'I';
				
				
				open c_cp_indic_meas_guid_new;
				loop
				fetch c_cp_indic_meas_guid_new into	
					c_cp_indic_meas_guid_new_w;
				EXIT WHEN NOT FOUND; /* apply on c_cp_indic_meas_guid_new */
					begin

					/*Ativa as orientações vinculadas com as mensurações do care plan novo*/

					update	cp_indicator_measure_guid
					set	ie_situacao = 'A',
						dt_atualizacao = clock_timestamp(),
						nm_usuario  = nm_usuario_p						
					where	nr_sequencia = c_cp_indic_meas_guid_new_w.nr_sequencia
					and	ie_situacao = 'I';
					
					/*Ativa o cadastro das orientações que são usadas no care plan novo*/

					update	cp_guidance
					set	ie_situacao = 'A',
						dt_atualizacao = clock_timestamp(),
						nm_usuario  = nm_usuario_p	
					where	nr_sequencia = c_cp_indic_meas_guid_new_w.nr_seq_guidance
					and	ie_situacao = 'I';
					
					end;
				end loop;
				close c_cp_indic_meas_guid_new;
				
				end;
			end loop;
			close c_cp_indicator_measure_new;
			
			end;
		end loop;
		close c_cp_goal_indicator_new;
		
		
		
		open c_cp_goal_clin_term_new;
		loop
		fetch c_cp_goal_clin_term_new into	
			c_cp_goal_clin_term_new_w;
		EXIT WHEN NOT FOUND; /* apply on c_cp_goal_clin_term_new */
			begin
			
			/*Ativa os termos clínicos vinculadas com as metas de cuidado do care plan novo*/

			update	cp_goal_clin_term
			set	ie_situacao = 'A',
				dt_atualizacao = clock_timestamp(),
				nm_usuario  = nm_usuario_p				
			where	nr_sequencia = c_cp_goal_clin_term_new_w.nr_sequencia
			and	ie_situacao = 'I';
			
			/*Ativa os cadastros dos termos clínicos que são usadas no care plan novo*/

			update	cp_clinical_term
			set	ie_situacao = 'A',
				dt_atualizacao = clock_timestamp(),
				nm_usuario  = nm_usuario_p	
			where	nr_sequencia = c_cp_goal_clin_term_new_w.nr_seq_clinical_term
			and	ie_situacao = 'I';
			
			end;
		end loop;
		close c_cp_goal_clin_term_new;		
		
		end;
	end loop;
	close c_cp_goals_new;
	
	
	open c_cp_interv_plan_new;
	loop
	fetch c_cp_interv_plan_new into	
		c_cp_interv_plan_new_w;
	EXIT WHEN NOT FOUND; /* apply on c_cp_interv_plan_new */
		begin
		
		/*Ativa os planos de intervenção do care plan novo*/

		update	cp_interv_plan
		set	ie_situacao = 'A',
			dt_atualizacao = clock_timestamp(),
			nm_usuario  = nm_usuario_p	
		where	nr_sequencia = c_cp_interv_plan_new_w.nr_sequencia
		and	ie_situacao = 'I';

		open c_cp_interv_plan_assoc_new;
		loop
		fetch c_cp_interv_plan_assoc_new into	
			c_cp_interv_plan_assoc_new_w;
		EXIT WHEN NOT FOUND; /* apply on c_cp_interv_plan_assoc_new */
			begin
			
			/*Ativa as intervenções vinculadas com o plano de interveção do care plan novo*/

			update	cp_interv_plan_assoc
			set	ie_situacao = 'A',
				dt_atualizacao = clock_timestamp(),
				nm_usuario  = nm_usuario_p	
			where	nr_sequencia = c_cp_interv_plan_assoc_new_w.nr_sequencia
			and	ie_situacao = 'I';
			
			/*Ativa o cadastro das intervenções usadas no care plan novo*/

			update	cp_intervention
			set	ie_situacao = 'A',
				dt_atualizacao = clock_timestamp(),
				nm_usuario  = nm_usuario_p	
			where	nr_sequencia = c_cp_interv_plan_assoc_new_w.nr_seq_intervention
			and	ie_situacao = 'I';
			
			open c_cp_interv_item_assoc_new;
			loop
			fetch c_cp_interv_item_assoc_new into	
				c_cp_interv_item_assoc_new_w;
			EXIT WHEN NOT FOUND; /* apply on c_cp_interv_item_assoc_new */
				begin
				
				/*Ativa as atividades vinculadas com as intervenções vinculadas com o plano de interveção do care plan novo*/

				update	cp_intervention_item_assoc
				set	ie_situacao = 'A',
					dt_atualizacao = clock_timestamp(),
					nm_usuario  = nm_usuario_p	
				where	nr_sequencia = c_cp_interv_item_assoc_new_w.nr_sequencia
				and	ie_situacao = 'I';
				
				/*Ativa o cadastro das atividades usadas no care plan novo*/

				update	cp_intervention_item
				set	ie_situacao = 'A',
					dt_atualizacao = clock_timestamp(),
					nm_usuario  = nm_usuario_p	
				where	nr_sequencia = c_cp_interv_item_assoc_new_w.nr_seq_interv_item
				and	ie_situacao = 'I';
				
				
				end;
			end loop;
			close c_cp_interv_item_assoc_new;
			
			
			open c_cp_interv_clin_term_new;
			loop
			fetch c_cp_interv_clin_term_new into	
				c_cp_interv_clin_term_new_w;
			EXIT WHEN NOT FOUND; /* apply on c_cp_interv_clin_term_new */
				begin
				
				/*Ativa os termos clínicos vinculados com as intervenções do care plan novo*/

				update	cp_intervention_clin_term
				set	ie_situacao = 'A',
					dt_atualizacao = clock_timestamp(),
					nm_usuario  = nm_usuario_p	
				where	nr_sequencia = c_cp_interv_clin_term_new_w.nr_sequencia
				and	ie_situacao = 'I';
				
				/*Ativa o cadastro dos termos clínicos vinculados com as intervenções do care plan novo*/

				update	cp_clinical_term
				set	ie_situacao = 'A',
					dt_atualizacao = clock_timestamp(),
					nm_usuario  = nm_usuario_p	
				where	nr_sequencia = c_cp_interv_clin_term_new_w.nr_seq_clinical_term
				and	ie_situacao = 'I';
				
				end;
			end loop;
			close c_cp_interv_clin_term_new;
			
			end;
		end loop;
		close c_cp_interv_plan_assoc_new;

		
		open c_cp_interv_plan_guid_new;
		loop
		fetch c_cp_interv_plan_guid_new into	
			c_cp_interv_plan_guid_new_w;
		EXIT WHEN NOT FOUND; /* apply on c_cp_interv_plan_guid_new */
			begin
			
			/*Ativa os orientações vinculados com o plano de intervenção do care plan novo*/

			update	cp_interv_plan_guid
			set	ie_situacao = 'A',
				dt_atualizacao = clock_timestamp(),
				nm_usuario  = nm_usuario_p	
			where	nr_sequencia = c_cp_interv_plan_guid_new_w.nr_sequencia
			and	ie_situacao = 'I';
			
			/*Ativa o cadastro das orientações usadas no care plan novo*/

			update	cp_guidance
			set	ie_situacao = 'A',
				dt_atualizacao = clock_timestamp(),
				nm_usuario  = nm_usuario_p	
			where	nr_sequencia = c_cp_interv_plan_guid_new_w.nr_seq_guidance
			and	ie_situacao = 'I';
			
			end;
		end loop;
		close c_cp_interv_plan_guid_new;
		
		
		end;
	end loop;
	close c_cp_interv_plan_new;
	
	end;
end loop;
close c_possible_prob_new;


open c_cp_clinical_term_assoc_new;
loop
fetch c_cp_clinical_term_assoc_new into	
	c_cp_clinical_term_assoc_new_w;
EXIT WHEN NOT FOUND; /* apply on c_cp_clinical_term_assoc_new */
	begin	
	
	/*Ativa os termos clínicos do care plan novo*/

	update	cp_clinical_term_assoc
	set	ie_situacao = 'A',
		dt_atualizacao = clock_timestamp(),
		nm_usuario  = nm_usuario_p	
	where	nr_sequencia = c_cp_clinical_term_assoc_new_w.nr_sequencia
	and	ie_situacao = 'I';
	
	/*Ativa o cadastro dos termos clínicos usados no care plan novo*/

	update	cp_clinical_term
	set	ie_situacao = 'A',
		dt_atualizacao = clock_timestamp(),
		nm_usuario  = nm_usuario_p	
	where	nr_sequencia = c_cp_clinical_term_assoc_new_w.nr_seq_clin_term
	and	ie_situacao = 'I';
	end;
end loop;
close c_cp_clinical_term_assoc_new;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cp_active_inactive_care_plan ( nr_seq_care_plan_p bigint, nm_usuario_p text) FROM PUBLIC;

