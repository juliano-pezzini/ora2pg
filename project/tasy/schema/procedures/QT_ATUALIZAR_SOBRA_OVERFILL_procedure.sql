-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE qt_atualizar_sobra_overfill ( qt_sobra_overfill_p bigint, cd_material_p bigint, cd_unid_medida_p text, nr_seq_lote_fornec_p bigint, dt_estabilidade_p timestamp, ie_tipo_p text, nr_seq_far_estoque_p bigint, nr_seq_cabine_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

  
ie_possui_registro_w  varchar(1);
nr_sequencia_w    bigint;
nr_movimento_estoque_w  bigint;
ie_estoque_w    varchar(1);
cd_local_estoque_w  bigint;
nr_sequencia_ww    bigint;
nr_seq_far_estoque_w  bigint;
nr_operacao_estoque_w  bigint;
qt_estoque_w    bigint;
dt_estabilidade_w  timestamp;
ie_calcula_estab_w  varchar(1);
cd_cgc_forncedor_w varchar(14);
ie_consignado_material_w bigint;
cd_operacao_estoque_regra_w smallint;
ds_lote_fornec_w      material_lote_fornec.ds_lote_fornec%type;
dt_validade_w         material_lote_fornec.dt_validade%type;
ie_valorizar_material_w operacao_estoque.ie_altera_custo%type;
cd_material_estoque_w   material.cd_material_estoque%type;
dt_mesano_referencia_w  movimento_estoque.dt_mesano_referencia%type;
ie_valorizar_w  varchar(1);

c01 CURSOR FOR
SELECT   r.cd_operacao_estoque
from     regra_oper_est_overfill r
where    r.ie_consignado = to_char(ie_consignado_material_w)
and (coalesce(r.cd_material::text, '') = '' or r.cd_material = cd_material_p)
order by coalesce(r.cd_material, 0);


BEGIN
dt_estabilidade_w := dt_estabilidade_p;

nr_operacao_estoque_w := Obter_Param_Usuario(3130, 386, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, nr_operacao_estoque_w);
ie_calcula_estab_w := Obter_Param_Usuario(3130, 399, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_calcula_estab_w);


if (ie_tipo_p = 'O') and (ie_calcula_estab_w = 'N')then
  dt_estabilidade_w :=  null;
end if;

select   coalesce(max('S'),'N')
into STRICT  ie_possui_registro_w
from   quimio_sobra_overfill
where   cd_material      =  cd_material_p
and    coalesce(nr_seq_lote_fornec,coalesce(nr_seq_lote_fornec_p,0))  =   coalesce(nr_seq_lote_fornec_p,0)
and    ie_tipo        =  ie_tipo_p
and   ((dt_estabilidade    =  dt_estabilidade_p) or (coalesce(dt_estabilidade_p::text, '') = ''))
and    cd_estabelecimento   =  cd_estabelecimento_p
and    cd_unidade_medida  =  cd_unid_medida_p
and    qt_saldo > 0;



select  coalesce(sum(a.qt_estoque),0)
into STRICT  qt_estoque_w
from    far_estoque_cabine a
where   a.cd_material    =  cd_material_p  
and  coalesce(nr_seq_lote_fornec,coalesce(nr_seq_lote_fornec_p,0))  =   coalesce(nr_seq_lote_fornec_p,0)
and  a.cd_estabelecimento   =  cd_estabelecimento_p
and  a.nr_sequencia    =   nr_seq_far_estoque_p;

if (ie_tipo_p = 'S') then
  update  far_estoque_cabine
  set  qt_estoque     = (qt_estoque - obter_conv_unid_med(cd_material_p,cd_unid_medida_p,qt_sobra_overfill_p,'UME'))
  where   cd_material    = cd_material_p  
  and  coalesce(nr_seq_lote_fornec,coalesce(nr_seq_lote_fornec_p,0))  =   coalesce(nr_seq_lote_fornec_p,0)
  and  cd_estabelecimento   = cd_estabelecimento_p
  and  nr_sequencia    = nr_seq_far_estoque_p;
end if;

if (ie_possui_registro_w = 'N') then
  
  select nextval('quimio_sobra_overfill_seq')
  into STRICT  nr_sequencia_w
;

  
  insert into quimio_sobra_overfill(          nr_sequencia,
                    cd_material,
                    qt_inicial, 
                    qt_saldo, 
                    cd_unidade_medida,
                    nr_seq_lote_fornec,
                    ie_tipo,
                    dt_estabilidade,
                    nr_seq_far_estoque_cab,
                    nr_seq_cabine,
                    cd_estabelecimento,
                    nm_usuario,
                    nm_usuario_nrec,
                    dt_atualizacao,
                    dt_atualizacao_nrec)
            values (    nr_sequencia_w,
                    cd_material_p,
                    qt_sobra_overfill_p,
                    qt_sobra_overfill_p,
                    cd_unid_medida_p,
                    CASE WHEN nr_seq_lote_fornec_p=0 THEN null  ELSE nr_seq_lote_fornec_p END ,
                    ie_tipo_p,
                    dt_estabilidade_w,
                    nr_seq_far_estoque_p,
                    nr_seq_cabine_p,
                    cd_estabelecimento_p,
                    nm_usuario_p,
                    nm_usuario_p,
                    clock_timestamp(),
                    clock_timestamp());


elsif (ie_possui_registro_w = 'S') then

  update  quimio_sobra_overfill
  set     qt_saldo       =   CASE WHEN ie_tipo_p='O' THEN CASE WHEN qt_sobra_overfill_p=0 THEN 0  ELSE qt_saldo + qt_sobra_overfill_p END   ELSE qt_sobra_overfill_p END ,
    dt_atualizacao      =  clock_timestamp()
  where   cd_material      =  cd_material_p  
  and  coalesce(nr_seq_lote_fornec,coalesce(nr_seq_lote_fornec_p,0))  =   coalesce(nr_seq_lote_fornec_p,0)
  and  ie_tipo        =  ie_tipo_p
  and  cd_estabelecimento     =  cd_estabelecimento_p
  and  cd_unidade_medida    =  cd_unid_medida_p
  and  qt_saldo > 0;

end if;

if (ie_tipo_p = 'O') then

  select  coalesce(max(ie_consignado), -1)
  into STRICT    ie_consignado_material_w
  from    material
  where   cd_material = cd_material_p;

  if (ie_consignado_material_w >= 0) then
    open c01;
    loop
      fetch c01 into cd_operacao_estoque_regra_w;
      EXIT WHEN NOT FOUND; /* apply on c01 */
    end loop;
    close c01;
  end if;

  if (coalesce(coalesce(cd_operacao_estoque_regra_w, nr_operacao_estoque_w),0) > 0) and (coalesce(qt_sobra_overfill_p,0) > 0) then

    select   nextval('movimento_estoque_seq')
    into STRICT  nr_movimento_estoque_w
;


    select  max(cd_local_estoque)
    into STRICT  cd_local_estoque_w
    from  far_cabine_seg_biol
    where  nr_sequencia  =  nr_seq_cabine_p;

  select max(CD_CGC_FORNEC)
    into STRICT cd_cgc_forncedor_w 
    from material_lote_fornec 
    where nr_sequencia =  nr_seq_lote_fornec_p;
	
	select ds_lote_fornec,
           dt_validade
    into STRICT   ds_lote_fornec_w,
           dt_validade_w
    from   material_lote_fornec
    where nr_sequencia = nr_seq_lote_fornec_p;

    dt_mesano_referencia_w := pkg_date_utils.start_of(clock_timestamp(),'MONTH',0);


    insert into movimento_estoque(  qt_estoque,
                    qt_movimento,
                    nr_movimento_estoque,
                    nm_usuario, 
                    ie_origem_documento, 
                    dt_movimento_estoque, 
                    dt_mesano_referencia, 
                    dt_atualizacao, 
                    cd_operacao_estoque, 
                    cd_material_estoque, 
                    cd_material, 
                    cd_local_estoque, 
                    cd_estabelecimento, 
                    cd_acao,
					CD_FORNECEDOR, 
                    nr_seq_lote_fornec,
                    cd_unidade_medida_estoque,
                    cd_unidade_med_mov,
					cd_lote_fabricacao,
					dt_validade)
        values (  obter_conv_unid_med(cd_material_p,cd_unid_medida_p,qt_sobra_overfill_p,'UME'),
                    qt_sobra_overfill_p, --obter_conv_unid_med(cd_material_p,cd_unid_medida_p,qt_sobra_overfill_p,'UME'),
                    nr_movimento_estoque_w,
                    nm_usuario_p,
                    7,
                    clock_timestamp(),
                    dt_mesano_referencia_w,
                    clock_timestamp(),
                    coalesce(cd_operacao_estoque_regra_w, nr_operacao_estoque_w),
                    null, -- OS 677141
                    cd_material_p,
                    cd_local_estoque_w,
                    cd_estabelecimento_p,
                    1,
					cd_cgc_forncedor_w,
                    CASE WHEN nr_seq_lote_fornec_p=0 THEN null  ELSE nr_seq_lote_fornec_p END ,
                    cd_unid_medida_p,
                    cd_unid_medida_p,
					ds_lote_fornec_w,
					dt_validade_w);

                    ie_valorizar_w := substr(coalesce(obter_valor_param_usuario(cd_funcao_p => 3130,
                                                                nr_sequencia_p => 512, 
                                                                cd_perfil_p => Obter_perfil_ativo, 
                                                                nm_usuario_p => nm_usuario_p, 
                                                                cd_estabelecimento_p => cd_estabelecimento_p),'N'),1,1);

                    if (ie_valorizar_w = 'S') then

                        begin
                        select	coalesce(CASE WHEN ie_altera_custo='S' THEN 'S'  ELSE 'N' END ,'N')
                        into STRICT	ie_valorizar_material_w
                        from	operacao_estoque
                        where	cd_operacao_estoque = coalesce(cd_operacao_estoque_regra_w, nr_operacao_estoque_w);
                        exception when no_data_found then
                            ie_valorizar_material_w := 'N';	
                        end;

                        begin
                        select cd_material_estoque
                        into STRICT cd_material_estoque_w
                        from material
                        where cd_material = cd_material_p;
                        exception when no_data_found then
                            cd_material_estoque_w := cd_material_p;
                        end;

                        if (ie_valorizar_material_w = 'S') and (cd_material_estoque_w > 0) then
                            begin
                                if (substr(sup_obter_metodo_valorizacao(dt_mesano_referencia_w, cd_estabelecimento_p),1,15) = 'MPM') then
                                    CALL val_estoque_media_ponderada.val_prod_mat(dt_mesano_referencia_w, cd_estabelecimento_p, cd_material_estoque_w, nm_usuario_p);
                                else
                                    CALL val_mensal_estoque.val_est_prod_mat(dt_mesano_referencia_w,cd_estabelecimento_p,cd_material_estoque_w,nm_usuario_p);
                                end if;
                                end;
                        end if;

                    end if;

    end if;

  select  coalesce(max('S'),'N') 
  into STRICT  ie_estoque_w
  from    far_estoque_cabine a
  where   a.cd_material      =  cd_material_p  
  and    coalesce(nr_seq_lote_fornec,coalesce(nr_seq_lote_fornec_p,0))  =   coalesce(nr_seq_lote_fornec_p,0)
  and    a.cd_estabelecimento   =  cd_estabelecimento_p
  and    a.nr_seq_cabine      =   nr_seq_cabine_p;


  if (ie_estoque_w = 'S') then

    select  max(nr_sequencia)
    into STRICT  nr_sequencia_ww
    from    far_estoque_cabine a
    where   a.cd_material      =  cd_material_p  
    and    coalesce(nr_seq_lote_fornec,coalesce(nr_seq_lote_fornec_p,0))  =   coalesce(nr_seq_lote_fornec_p,0)
    and    a.cd_estabelecimento   =  cd_estabelecimento_p
    and    a.nr_seq_cabine      =   nr_seq_cabine_p;

    /*update  far_estoque_cabine 
    set    qt_estoque = (qt_estoque + qt_sobra_overfill_p)
    where   cd_material        =  cd_material_p  
    and    nvl(nr_seq_lote_fornec,nr_seq_lote_fornec_p)  =   nr_seq_lote_fornec_p
    and    cd_estabelecimento     =  cd_estabelecimento_p
    and    nr_sequencia      = nr_sequencia_ww;*/
    
    update  quimio_sobra_overfill
    set    nr_seq_far_estoque_cab   = nr_sequencia_ww
    where   cd_material      =  cd_material_p  
    and    coalesce(nr_seq_lote_fornec,coalesce(nr_seq_lote_fornec_p,0))  =   coalesce(nr_seq_lote_fornec_p,0)
    and    cd_estabelecimento   =  cd_estabelecimento_p;

    /*select   far_estoque_cabine_seq.nextval
    into  nr_sequencia_w
    from  dual;

    insert into far_estoque_cabine (nr_sequencia, 
                  cd_estabelecimento,
                  nr_seq_cabine, 
                  dt_atualizacao, 
                  nm_usuario, 
                  cd_material, 
                  nr_seq_lote_fornec, 
                  qt_estoque, 
                  dt_atualizacao_nrec, 
                  nm_usuario_nrec)
        values        (nr_sequencia_w,
                  cd_estabelecimento_p,
                  nr_seq_cabine_p,
                  sysdate,
                  nm_usuario_p,
                  cd_material_p,
                  decode(nr_seq_lote_fornec_p,0,null,nr_seq_lote_fornec_p),
                  qt_sobra_overfill_p,
                  sysdate,
                  nm_usuario_p);*/
  end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qt_atualizar_sobra_overfill ( qt_sobra_overfill_p bigint, cd_material_p bigint, cd_unid_medida_p text, nr_seq_lote_fornec_p bigint, dt_estabilidade_p timestamp, ie_tipo_p text, nr_seq_far_estoque_p bigint, nr_seq_cabine_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

