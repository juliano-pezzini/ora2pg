-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE bt_gerar_alta_eup ( nr_atendimento_p bigint, cd_motivo_alta_p bigint, dt_alta_p timestamp, ds_msg_dnv_p INOUT text, ds_msg_cih_p INOUT text, ds_msg_cid_p INOUT text, ds_aviso_alta_p INOUT text, ds_msg_setor_obito_p INOUT text, ds_msg_alta_transf_p INOUT text, ds_texto_p INOUT text, ds_msg_gerar_alta_p INOUT text, ds_msg_proc_prev_p INOUT text, ds_msg_bloc_ger_alta_p INOUT text, ds_msg_conta_p INOUT text, ie_atendimento_disp_p INOUT text, ie_setor_atend_p INOUT text, ie_unidade_basica_p INOUT text, ie_unidade_compl_p INOUT text, nm_usuario_p text) AS $body$
DECLARE


ie_perm_alta_dnv_w			varchar(1);
ie_perm_alta_proccih_w		varchar(1);
ie_alerta_falta_cid_alta_w	varchar(1);
ie_obriga_setor_obito_w		varchar(1);
ie_alta_transf_inf_dest_w	varchar(1);
ie_alta_cond_baixa_w		varchar(1);
ie_perm_alta_proc_prev_w	varchar(1);
ie_tipo_atend_gerar_alta_w	varchar(10);
ie_bloc_ger_alta_24hr_w		varchar(1);
qt_nascimento_w				integer;
ie_tipo_atendimento_w		smallint;
qt_procedimento_w			bigint;
qt_diagnostico_w			bigint;
ie_transferencia_w			varchar(1);
ds_texto_w					varchar(255);
ie_gasto_pendente_w			varchar(1);
ie_gasto_proced_w			varchar(1);
ie_contido_w				varchar(1);
ds_msg_gerar_alta_w			varchar(255);
ie_se_prescr_w				varchar(1);
ds_msg_proc_prev_w			varchar(255);
ie_campo_internacao_w		varchar(1);
ds_msg_bloc_ger_alta_w		varchar(255);
ie_se_gera_w				varchar(1);
nr_interno_conta_w			bigint;
ie_cons_utiliza_disp_alta_w	varchar(1);
ie_alta_leito_hig_w			varchar(1);


BEGIN

ie_tipo_atend_gerar_alta_w := Obter_param_Usuario(916, 477, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_tipo_atend_gerar_alta_w);
ie_perm_alta_dnv_w := Obter_param_Usuario(916, 506, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_perm_alta_dnv_w);
ie_perm_alta_proccih_w := Obter_param_Usuario(916, 507, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_perm_alta_proccih_w);
ie_cons_utiliza_disp_alta_w := Obter_param_Usuario(916, 659, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_cons_utiliza_disp_alta_w);
ie_alerta_falta_cid_alta_w := Obter_param_Usuario(916, 710, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_alerta_falta_cid_alta_w);
ie_alta_leito_hig_w := Obter_param_Usuario(916, 934, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_alta_leito_hig_w);
ie_obriga_setor_obito_w := Obter_param_Usuario(916, 1023, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_obriga_setor_obito_w);

ie_alta_cond_baixa_w := Obter_param_Usuario(3111, 3, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_alta_cond_baixa_w);
ie_perm_alta_proc_prev_w := Obter_param_Usuario(3111, 15, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_perm_alta_proc_prev_w);
ie_alta_transf_inf_dest_w := Obter_param_Usuario(3111, 113, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_alta_transf_inf_dest_w);
ie_bloc_ger_alta_24hr_w := Obter_param_Usuario(3111, 170, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_bloc_ger_alta_24hr_w);

IF (ie_perm_alta_dnv_w <> 'S') THEN
	BEGIN
	SELECT  COUNT(*) qt_nascimento
	INTO STRICT	qt_nascimento_w
	FROM    nascimento a
	WHERE   a.nr_atendimento = nr_atendimento_p
	AND     coalesce(a.nr_dnv::text, '') = '';

	IF (qt_nascimento_w > 0) THEN
		ds_msg_dnv_p := wheb_mensagem_pck.get_texto(121168);
	END IF;
	END;
END IF;

SELECT 	MAX(ie_tipo_atendimento)
INTO STRICT	ie_tipo_atendimento_w
FROM   	atendimento_paciente
WHERE	obter_se_atend_rn(nr_atendimento) = 'N'
AND  	nr_atendimento = nr_atendimento_p;

IF (ie_perm_alta_proccih_w <> 'S') THEN
	BEGIN
	SELECT 	COUNT(*) qt_procedimento
	INTO STRICT	qt_procedimento_w
	FROM   	procedimento_paciente_cih
	WHERE  	nr_atendimento = nr_atendimento_p;

	IF (ie_tipo_atendimento_w = 1 AND
		qt_procedimento_w = 0) THEN
		ds_msg_cih_p := wheb_mensagem_pck.get_texto(121189);
	END IF;
	END;
END IF;

IF (ie_alerta_falta_cid_alta_w = 'S') THEN
	BEGIN
	SELECT 	COUNT(*) qt_diagnostico
	INTO STRICT	qt_diagnostico_w
	FROM   	diagnostico_doenca
	WHERE  	nr_atendimento = nr_atendimento_p;

	IF (qt_diagnostico_w = 0) THEN
		ds_msg_cid_p := wheb_mensagem_pck.get_texto(121197);
	END IF;
	END;
END IF;

SELECT 	obter_aviso_alta_paciente(nr_atendimento_p) ds_aviso_alta
INTO STRICT	ds_aviso_alta_p
;

IF (ie_obriga_setor_obito_w = 'S') THEN
	BEGIN
	ie_obriga_setor_obito_w := obter_se_motivo_alta_obito(cd_motivo_alta_p);
	IF (ie_obriga_setor_obito_w = 'S') THEN
		ds_msg_setor_obito_p := wheb_mensagem_pck.get_texto(224143);
	END IF;
	END;
END IF;

IF (ie_alta_transf_inf_dest_w = 'S') THEN
	BEGIN
	SELECT 	ie_transferencia
	INTO STRICT	ie_transferencia_w
	FROM 	motivo_alta
	WHERE 	cd_motivo_alta = cd_motivo_alta_p;
	IF (ie_transferencia_w = 'S') THEN
		ds_msg_alta_transf_p := wheb_mensagem_pck.get_texto(262997);
	END IF;
	END;
END IF;

IF (ie_alta_cond_baixa_w = 'S') THEN
	BEGIN
	SELECT 	obter_gasto_pendente(nr_atendimento_p) ie_gasto_pendente,
			obter_gasto_pendente_proced(nr_atendimento_p, ie_perm_alta_proc_prev_w, TO_DATE(dt_alta_p, 'dd/mm/yyyy hh24:mi:ss')) ie_gasto_proced,
			obter_texto_tasy(121231, null) ds_texto
	INTO STRICT	ie_gasto_pendente_w,
			ie_gasto_proced_w,
			ds_texto_w
	;

	IF (ie_gasto_pendente_w = 'S' AND
		ie_gasto_proced_w = 'S') THEN
		ds_texto_p := ds_texto_w;
	END IF;
	END;
END IF;

IF (ie_tipo_atend_gerar_alta_w IS NOT NULL AND ie_tipo_atend_gerar_alta_w::text <> '') THEN
	BEGIN
	
	SELECT 	MAX(ie_tipo_atendimento)
	INTO STRICT	ie_tipo_atendimento_w
	FROM   	atendimento_paciente
	WHERE	nr_atendimento = nr_atendimento_p;
	
	SELECT 	obter_se_contido(ie_tipo_atendimento_w,ie_tipo_atend_gerar_alta_w) ie_contido,
			obter_texto_tasy(121238, null) ds_texto
	INTO STRICT	ie_contido_w,
			ds_msg_gerar_alta_w
	;

	IF (ie_contido_w = 'N') THEN
		ds_msg_gerar_alta_p := ds_msg_gerar_alta_w;
	END IF;
	END;
END IF;

IF (ie_perm_alta_proc_prev_w <> 'S') THEN
	BEGIN
	SELECT  obter_se_prescr_prev(nr_atendimento_p, dt_alta_p) ie_se_prescr,
			obter_texto_tasy(121246, null) ds_texto
	INTO STRICT	ie_se_prescr_w,
			ds_msg_proc_prev_w
	;

	IF (ie_se_prescr_w = 'S') THEN
		ds_msg_proc_prev_p :=  ds_msg_proc_prev_w;
	END IF;
	END;
END IF;

IF (ie_bloc_ger_alta_24hr_w = 'S') THEN
	BEGIN
	SELECT 	verifica_tempo_internacao_ps(nr_atendimento_p, dt_alta_p) ie_campo_internacao,
			obter_texto_tasy(121250, null) ds_texto
	INTO STRICT	ie_campo_internacao_w,
			ds_msg_bloc_ger_alta_w
	;

	IF (ie_campo_internacao_w = 'S') THEN
		ds_msg_bloc_ger_alta_p := ds_msg_bloc_ger_alta_w;
	END IF;
	END;
END IF;

SELECT  coalesce(obter_se_gera_tit_rec(obter_convenio_atendimento(a.nr_atendimento), a.cd_estabelecimento, a.ie_tipo_atendimento), 'N') ie_se_gera
INTO STRICT	ie_se_gera_w
FROM    atendimento_paciente a
WHERE 	a.nr_atendimento = nr_atendimento_p;

IF (ie_se_gera_w = 'S') THEN
	BEGIN
	SELECT	MAX(a.nr_interno_conta) nr_interno_conta
	INTO STRICT	nr_interno_conta_w
	FROM	conta_paciente a
	WHERE	a.nr_atendimento  = nr_atendimento_p
	AND		a.ie_status_acerto = 2;

	IF (coalesce(nr_interno_conta_w,0) > 0) THEN
		ds_msg_conta_p := nr_interno_conta_w;
	END IF;
	END;
END IF;

IF (ie_cons_utiliza_disp_alta_w = 'S') THEN
	BEGIN
	SELECT 	obter_se_atendimento_disp(nr_atendimento_p) ie_atendimento_disp
	INTO STRICT	ie_atendimento_disp_p
	;
	END;
END IF;

IF (ie_alta_leito_hig_w <> 'N') THEN
	BEGIN
	SELECT	obter_unidade_atendimento(nr_atendimento_p,'A','CS') ie_setor_atend,
			obter_unidade_atendimento(nr_atendimento_p,'A','UB') ie_unidade_basica,
			obter_unidade_atendimento(nr_atendimento_p,'A','UC') ie_unidade_compl
	INTO STRICT	ie_setor_atend_p,
			ie_unidade_basica_p,
			ie_unidade_compl_p
	;
	END;
END IF;

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE bt_gerar_alta_eup ( nr_atendimento_p bigint, cd_motivo_alta_p bigint, dt_alta_p timestamp, ds_msg_dnv_p INOUT text, ds_msg_cih_p INOUT text, ds_msg_cid_p INOUT text, ds_aviso_alta_p INOUT text, ds_msg_setor_obito_p INOUT text, ds_msg_alta_transf_p INOUT text, ds_texto_p INOUT text, ds_msg_gerar_alta_p INOUT text, ds_msg_proc_prev_p INOUT text, ds_msg_bloc_ger_alta_p INOUT text, ds_msg_conta_p INOUT text, ie_atendimento_disp_p INOUT text, ie_setor_atend_p INOUT text, ie_unidade_basica_p INOUT text, ie_unidade_compl_p INOUT text, nm_usuario_p text) FROM PUBLIC;

