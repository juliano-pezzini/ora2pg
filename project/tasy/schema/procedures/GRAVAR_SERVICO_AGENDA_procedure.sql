-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_servico_agenda ( nr_seq_proc_servico_p bigint, nr_seq_agenda_p bigint, nm_usuario_p text, ds_observacao_p text default null, cd_pessoa_fisica_p text default null, cd_cgc_p text default null, ds_erro_p INOUT text DEFAULT NULL) AS $body$
DECLARE

 
ie_cons_idade_paciente_w	varchar(1);
ie_consiste_w		varchar(1);
cd_agenda_w		bigint;
cd_pessoa_fisica_w	varchar(10);
qt_idade_mes_w		integer;
qt_idade_meses_w		integer;
ds_erro_w		varchar(255):= '';
qt_idade_min_meses_w	integer;
qt_idade_max_meses_w	integer;


BEGIN 
 
ie_cons_idade_paciente_w := Obter_Param_Usuario(871, 233, obter_perfil_ativo, nm_usuario_p, 0, ie_cons_idade_paciente_w);
 
if (ie_cons_idade_paciente_w = 'S') then 
	select	qt_idade_min_meses, 
		qt_idade_max_meses 
	into STRICT	qt_idade_min_meses_w,		 
		qt_idade_max_meses_w 
	from	proc_interno 
	where	nr_sequencia = nr_seq_proc_servico_p;	
			 
	select	cd_agenda, 
		coalesce(cd_pessoa_fisica,0), 
		coalesce(qt_idade_mes,0) 
	into STRICT 
		cd_agenda_w, 
		cd_pessoa_fisica_w, 
		qt_idade_mes_w 
	from	agenda_paciente 
	where	nr_sequencia = nr_seq_agenda_p;	
			 
	if 	((cd_pessoa_fisica_w > 0) or (qt_idade_mes_w > 0)) then 
		if (cd_pessoa_fisica_w > 0) then 
			select 	Obter_Idade_PF(cd_pessoa_fisica_w,clock_timestamp(),'M') 
			into STRICT	qt_idade_meses_w 
			;
			if (qt_idade_meses_w = 0) then 
				qt_idade_meses_w := qt_idade_mes_w;
			end if;		
		else	 
			qt_idade_meses_w := qt_idade_mes_w;
		end if;	
	end if;	
 
	select 	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END  
	into STRICT	ie_consiste_w 
	from  	agenda 
	where 	cd_agenda = cd_agenda_w 
	and (qt_idade_meses_w between coalesce(qt_idade_min_meses_w,0) and coalesce(qt_idade_max_meses_w,9999));
	 
	if (ie_consiste_w = 'S') then 
		ds_erro_w := wheb_mensagem_pck.get_texto(278542);
	end if;
end if;		
 
 
insert into agenda_pac_servico( 
	nr_sequencia, 
	dt_atualizacao, 
	nm_usuario, 
	nr_seq_proc_servico, 
	nr_seq_agenda, 
	ie_origem_inf, 
	ie_status, 
	dt_atualizacao_nrec, 
	nm_usuario_nrec, 
	cd_pessoa_fisica, 
	ds_observacao, 
	cd_cgc) 
values ( 
	nextval('agenda_pac_servico_seq'), 
	clock_timestamp(), 
	nm_usuario_p, 
	nr_seq_proc_servico_p, 
	nr_seq_agenda_p, 
	'I', 
	'G', 
	clock_timestamp(), 
	nm_usuario_p, 
	cd_pessoa_fisica_p, 
	ds_observacao_p, 
	cd_cgc_p);
 
commit;
 
ds_erro_p := ds_erro_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_servico_agenda ( nr_seq_proc_servico_p bigint, nr_seq_agenda_p bigint, nm_usuario_p text, ds_observacao_p text default null, cd_pessoa_fisica_p text default null, cd_cgc_p text default null, ds_erro_p INOUT text DEFAULT NULL) FROM PUBLIC;

