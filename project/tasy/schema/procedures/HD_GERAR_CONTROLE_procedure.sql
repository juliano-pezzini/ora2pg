-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_gerar_controle (nm_usuario_p text, nr_seq_dialise_p bigint, dt_controle_p timestamp, qt_fluxo_sangue_p bigint, qt_fluxo_dialisado_p bigint, qt_pa_trans_menbrana_p bigint, qt_pa_venosa_p bigint, qt_pa_arterial_p bigint, qt_heparina_p bigint, qt_temperatura_axiliar_p bigint, qt_pulso_p bigint, qt_pa_sistolica_p bigint, qt_pa_diastolica_p bigint, qt_sangue_dial_p bigint, qt_clearence_p bigint, qt_ktv_p bigint, qt_soro_reposicao_p bigint, qt_soro_devolucao_p bigint, nr_seq_tipo_soro_p bigint, ds_erro_p INOUT text, qt_condutividade_p bigint, qt_dextro_p bigint, qt_insulina_p bigint, qt_glicose_p bigint, qt_volume_subst_p bigint default null, qt_volume_convectivo_p bigint default null, qt_taxa_subst_p bigint default null, qt_bolus_acumulado_p bigint default null, ds_mensagem_p INOUT text DEFAULT NULL) AS $body$
DECLARE


nr_seq_unid_dialise_w		bigint;
nr_atend_dextro_w		bigint;
ie_tipo_dialise_dextro_w	varchar(15);
nr_seq_hd_controle_w		hd_controle.nr_sequencia%type;

BEGIN


if ((consistir_inter_atrib_regra('HD_CONTROLE','QT_FLUXO_SANGUE',qt_fluxo_sangue_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_FLUXO_SANGUE',qt_fluxo_sangue_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_FLUXO_SANGUE',qt_fluxo_sangue_p);
elsif ((consistir_inter_atrib_regra('HD_CONTROLE','QT_FLUXO_DIALISADO',qt_fluxo_dialisado_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_FLUXO_DIALISADO',qt_fluxo_dialisado_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_FLUXO_DIALISADO',qt_fluxo_dialisado_p);
elsif ((consistir_inter_atrib_regra('HD_CONTROLE','QT_PA_TRANS_MENBRANA',qt_pa_trans_menbrana_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_PA_TRANS_MENBRANA',qt_pa_trans_menbrana_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_PA_TRANS_MENBRANA',qt_pa_trans_menbrana_p);
elsif ((consistir_inter_atrib_regra('HD_CONTROLE','QT_PA_VENOSA',qt_pa_venosa_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_PA_VENOSA',qt_pa_venosa_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_PA_VENOSA',qt_pa_venosa_p);
elsif ((consistir_inter_atrib_regra('HD_CONTROLE','QT_PA_ARTERIAL',qt_pa_arterial_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_PA_ARTERIAL',qt_pa_arterial_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_PA_ARTERIAL',qt_pa_arterial_p);
elsif ((consistir_inter_atrib_regra('HD_CONTROLE','QT_HEPARINA',qt_heparina_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_HEPARINA',qt_heparina_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_HEPARINA',qt_heparina_p);
elsif ((consistir_inter_atrib_regra('HD_CONTROLE','QT_TEMPERATURA_AXILIAR',qt_temperatura_axiliar_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_TEMPERATURA_AXILIAR',qt_temperatura_axiliar_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_TEMPERATURA_AXILIAR',qt_temperatura_axiliar_p);
elsif ((consistir_inter_atrib_regra('HD_CONTROLE','QT_PULSO',qt_pulso_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_PULSO',qt_pulso_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_PULSO',qt_pulso_p);
elsif ((consistir_inter_atrib_regra('HD_CONTROLE','QT_PA_SISTOLICA',qt_pa_sistolica_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_PA_SISTOLICA',qt_pa_sistolica_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_PA_SISTOLICA',qt_pa_sistolica_p);
elsif ((consistir_inter_atrib_regra('HD_CONTROLE','QT_PA_DIASTOLICA',qt_pa_diastolica_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_PA_DIASTOLICA',qt_pa_diastolica_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_PA_DIASTOLICA',qt_pa_diastolica_p);
elsif ((consistir_inter_atrib_regra('HD_CONTROLE','QT_SANGUE_DIAL',qt_sangue_dial_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_SANGUE_DIAL',qt_sangue_dial_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_SANGUE_DIAL',qt_sangue_dial_p);
elsif ((consistir_inter_atrib_regra('HD_CONTROLE','QT_CLEARENCE',qt_clearence_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_CLEARENCE',qt_clearence_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_CLEARENCE',qt_clearence_p);
elsif ((consistir_inter_atrib_regra('HD_CONTROLE','QT_KTV',qt_ktv_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_KTV',qt_ktv_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_KTV',qt_ktv_p);
elsif ((consistir_inter_atrib_regra('HD_CONTROLE','QT_CONDUTIVIDADE',qt_condutividade_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_CONDUTIVIDADE',qt_condutividade_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_CONDUTIVIDADE',qt_condutividade_p);
elsif ((consistir_inter_atrib_regra('HD_CONTROLE','QT_DEXTRO',qt_dextro_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_DEXTRO',qt_dextro_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_DEXTRO',qt_dextro_p);
elsif ((consistir_inter_atrib_regra('HD_CONTROLE','QT_INSULINA',qt_insulina_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_INSULINA',qt_insulina_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_INSULINA',qt_insulina_p);		
elsif ((consistir_inter_atrib_regra('HD_CONTROLE','QT_GLICOSE_ADM',qt_glicose_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_GLICOSE_ADM',qt_glicose_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_GLICOSE_ADM',qt_glicose_p);
elsif ((consistir_inter_atrib_regra('HD_CONTROLE','QT_VOLUME_SUBST',qt_volume_subst_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_VOLUME_SUBST',qt_volume_subst_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_VOLUME_SUBST',qt_volume_subst_p);
elsif ((consistir_inter_atrib_regra('HD_CONTROLE','QT_VOLUME_CONVECTIVO',qt_volume_convectivo_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_VOLUME_CONVECTIVO',qt_volume_convectivo_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_VOLUME_CONVECTIVO',qt_volume_convectivo_p);
elsif ((consistir_inter_atrib_regra('HD_CONTROLE','QT_TAXA_SUBST',qt_taxa_subst_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_TAXA_SUBST',qt_taxa_subst_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_TAXA_SUBST',qt_taxa_subst_p);
elsif ((consistir_inter_atrib_regra('HD_CONTROLE','QT_BOLUS_ACUMULADO',qt_bolus_acumulado_p) IS NOT NULL AND (consistir_inter_atrib_regra('HD_CONTROLE','QT_BOLUS_ACUMULADO',qt_bolus_acumulado_p))::text <> '')) THEN
	ds_erro_p	:= consistir_inter_atrib_regra('HD_CONTROLE','QT_BOLUS_ACUMULADO',qt_bolus_acumulado_p);	
else

	/* Selecionar a unidade de diÃ¡lise */

	select	nr_seq_unid_dialise
	into STRICT	nr_seq_unid_dialise_w
	from	hd_dialise
	where	nr_sequencia	= nr_seq_dialise_p;

	select	nextval('hd_controle_seq')
	into STRICT	nr_seq_hd_controle_w
	;
	
	/* Insere o registro */

	insert into hd_controle(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_dialise,
		dt_controle,
		qt_fluxo_sangue,
		qt_fluxo_dialisado,
		qt_pa_trans_menbrana,
		qt_pa_venosa,
		qt_pa_arterial,
		qt_heparina,
		qt_temperatura_axiliar,
		qt_pulso,
		qt_pa_sistolica,
		qt_pa_diastolica,
		qt_sangue_dial,
		nr_seq_unid_dialise,
		qt_clearence,
		qt_ktv,
		qt_soro_reposicao,
		qt_soro_devolucao,
		nr_seq_tipo_soro,
		qt_condutividade,
		qt_dextro,
		qt_insulina,
		qt_glicose_adm,
		qt_volume_subst,
		qt_volume_convectivo,
		qt_taxa_subst,
		qt_bolus_acumulado
	) values (
		nr_seq_hd_controle_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_dialise_p,
		dt_controle_p,
		qt_fluxo_sangue_p,
		qt_fluxo_dialisado_p,
		qt_pa_trans_menbrana_p,
		qt_pa_venosa_p,
		qt_pa_arterial_p,
		qt_heparina_p,
		qt_temperatura_axiliar_p,
		qt_pulso_p,
		qt_pa_sistolica_p,
		qt_pa_diastolica_p,
		qt_sangue_dial_p,
		nr_seq_unid_dialise_w,
		qt_clearence_p,
		qt_ktv_p,
		qt_soro_reposicao_p,
		qt_soro_devolucao_p,
		CASE WHEN nr_seq_tipo_soro_p=0 THEN null  ELSE nr_seq_tipo_soro_p END ,
		qt_condutividade_p,
		qt_dextro_p,
		qt_insulina_p,
		qt_glicose_p,
		qt_volume_subst_p,
		qt_volume_convectivo_p,
		qt_taxa_subst_p,
		qt_bolus_acumulado_p
	);	

	if (coalesce(qt_dextro_p,0) > 0) then
		
		select	max(a.nr_atendimento),
			max(ie_tipo_dialise)
		into STRICT	nr_atend_dextro_w,
			ie_tipo_dialise_dextro_w
		from	hd_dialise a
		where	a.nr_sequencia	= nr_seq_dialise_p;
		
		if (nr_atend_dextro_w > 0) then		
			CALL hd_inserir_proced_conta(nr_atend_dextro_w, 'C', nm_usuario_p, obter_setor_ativo, ie_tipo_dialise_dextro_w);
		else
			ds_mensagem_p := WHEB_MENSAGEM_PCK.get_texto(278190,null);
		end if;
	end if;	
	
	CALL hd_gerar_assinatura(null, null, nr_seq_dialise_p, null, nr_seq_hd_controle_w, null, null, null, null, 'NC', nm_usuario_p, 'N');

commit;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_gerar_controle (nm_usuario_p text, nr_seq_dialise_p bigint, dt_controle_p timestamp, qt_fluxo_sangue_p bigint, qt_fluxo_dialisado_p bigint, qt_pa_trans_menbrana_p bigint, qt_pa_venosa_p bigint, qt_pa_arterial_p bigint, qt_heparina_p bigint, qt_temperatura_axiliar_p bigint, qt_pulso_p bigint, qt_pa_sistolica_p bigint, qt_pa_diastolica_p bigint, qt_sangue_dial_p bigint, qt_clearence_p bigint, qt_ktv_p bigint, qt_soro_reposicao_p bigint, qt_soro_devolucao_p bigint, nr_seq_tipo_soro_p bigint, ds_erro_p INOUT text, qt_condutividade_p bigint, qt_dextro_p bigint, qt_insulina_p bigint, qt_glicose_p bigint, qt_volume_subst_p bigint default null, qt_volume_convectivo_p bigint default null, qt_taxa_subst_p bigint default null, qt_bolus_acumulado_p bigint default null, ds_mensagem_p INOUT text DEFAULT NULL) FROM PUBLIC;

