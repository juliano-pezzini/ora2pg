-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_regra_nivel_tit_pag ( nr_seq_nota_fiscal_p bigint, nr_seq_proj_rec_p bigint, dt_emissao_ini_p timestamp, dt_emissao_fim_p timestamp, cd_estabelecimento_p bigint, vl_titulo_p bigint, ie_tipo_pessoa_p text, cd_tipo_pessoa_p text, cd_cgc_p text, ie_tipo_titulo_p text, nr_seq_classe_p bigint, ie_origem_titulo_p text, cd_operacao_nf_p bigint, vl_nota_fiscal_p bigint, nr_ordem_compra_p bigint, nr_seq_regra_p INOUT bigint, ie_nivel_lib_p INOUT text) AS $body$
DECLARE


nr_seq_regra_w		regra_lib_tit_pagar.nr_sequencia%type;
ie_nivel_lib_w		regra_lib_tit_pagar.ie_nivel_lib%type;

/* verifica se o valor do t√≠tulo e o tipo de PJ se encaixam na regra */

C01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.ie_nivel_lib
from	regra_lib_tit_pagar a
where (coalesce(a.ie_ordem_compra, 'N') = 'N' or (nr_ordem_compra_p IS NOT NULL AND nr_ordem_compra_p::text <> ''))
and (coalesce(a.ie_projeto_recurso,'N') = 'N' or (nr_seq_proj_rec_p IS NOT NULL AND nr_seq_proj_rec_p::text <> ''))
and	dt_emissao_fim_p	>= coalesce(a.dt_inicio_vigencia,dt_emissao_fim_p)
and	dt_emissao_ini_p	<= coalesce(a.dt_fim_vigencia,dt_emissao_ini_p)
and	a.cd_estabelecimento	= cd_estabelecimento_p
and	((coalesce(a.ie_valor_nf,'N') = 'N' and vl_titulo_p between coalesce(a.vl_minimo,vl_titulo_p) and coalesce(a.vl_maximo,vl_titulo_p)) or (a.ie_valor_nf = 'S' and coalesce(vl_nota_fiscal_p,vl_titulo_p) between coalesce(a.vl_minimo,coalesce(vl_nota_fiscal_p,vl_titulo_p)) and coalesce(a.vl_maximo,coalesce(vl_nota_fiscal_p,vl_titulo_p))))
and (a.ie_tipo_pessoa = 'A' or a.ie_tipo_pessoa = ie_tipo_pessoa_p)
and	coalesce(a.cd_operacao_nf, coalesce(cd_operacao_nf_p, -1))= coalesce(cd_operacao_nf_p, -1)
and	coalesce(coalesce(a.cd_tipo_pj,cd_tipo_pessoa_p),0)	= coalesce(cd_tipo_pessoa_p,0)
and	coalesce(coalesce(a.cd_cgc,cd_cgc_p),0)			= coalesce(cd_cgc_p,0)
and	coalesce(coalesce(a.ie_tipo_titulo, ie_tipo_titulo_p), 0) = coalesce(ie_tipo_titulo_p,0)
and	coalesce(coalesce(a.nr_seq_classe,nr_seq_classe_p),0)	= coalesce(nr_seq_classe_p, 0)
and	coalesce(coalesce(a.ie_origem_titulo,ie_origem_titulo_p),0)	= coalesce(ie_origem_titulo_p, 0)
and	( (coalesce(a.ie_exige_nota_fiscal,'N') = 'N') or
      ( (coalesce(a.ie_exige_nota_fiscal,'N') = 'S') and (nr_seq_nota_fiscal_p IS NOT NULL AND nr_seq_nota_fiscal_p::text <> '') ) 
	)
order by   
      coalesce(a.cd_cgc, 0),  
      coalesce(a.cd_tipo_pj, 0),  
      coalesce(a.cd_operacao_nf, 0),
      coalesce(a.ie_valor_nf,0),
      coalesce(a.ie_projeto_recurso,0),
      coalesce(a.ie_ordem_compra,0),
      coalesce(a.ie_exige_nota_fiscal,0),
      coalesce(a.ie_tipo_titulo, 0),  
      coalesce(a.nr_seq_classe, 0),  
      coalesce(a.ie_origem_titulo, 0);


BEGIN

OPEN C01;
LOOP
	FETCH C01 into
		nr_seq_regra_w,
    ie_nivel_lib_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		nr_seq_regra_p	:= nr_seq_regra_w;
 		ie_nivel_lib_p	:= ie_nivel_lib_w;
END LOOP;
CLOSE C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_regra_nivel_tit_pag ( nr_seq_nota_fiscal_p bigint, nr_seq_proj_rec_p bigint, dt_emissao_ini_p timestamp, dt_emissao_fim_p timestamp, cd_estabelecimento_p bigint, vl_titulo_p bigint, ie_tipo_pessoa_p text, cd_tipo_pessoa_p text, cd_cgc_p text, ie_tipo_titulo_p text, nr_seq_classe_p bigint, ie_origem_titulo_p text, cd_operacao_nf_p bigint, vl_nota_fiscal_p bigint, nr_ordem_compra_p bigint, nr_seq_regra_p INOUT bigint, ie_nivel_lib_p INOUT text) FROM PUBLIC;

