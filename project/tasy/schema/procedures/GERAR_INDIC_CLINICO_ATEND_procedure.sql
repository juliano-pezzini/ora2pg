-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_indic_clinico_atend ( nr_atendimento_p bigint, nr_seq_indicador_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_indicador_w		bigint;
cd_empresa_w			bigint;
ie_regra_def_atend_w		varchar(15);
qt_cid_w			bigint;
qt_proc_w			bigint;
nr_sequencia_w		bigint;
ie_obito_w			varchar(10);
ie_contido_w			varchar(10);
cd_medico_atend_w		varchar(10);
cd_medico_proc_w		varchar(10);
cd_medico_cid_w		varchar(10);

/*	Regra definição atendimento
C               CID
P               Procedimento
CP              Cid e procedimento
N               Nenhum
*/
C01 CURSOR FOR
	SELECT	nr_sequencia,
		ie_regra_def_atend
	from	indicador_clinico
	where	cd_empresa		= cd_empresa_w
	and	ie_situacao		= 'A'
	and	ie_regra_def_atend	<> 'N'
	and	coalesce(nr_seq_indicador_p, nr_sequencia) = nr_sequencia;


BEGIN

delete from atend_indic_clinico
where	nr_atendimento	= nr_atendimento_p
and	coalesce(nr_seq_indicador_p,nr_seq_indicador)	= nr_seq_indicador;

select	b.cd_empresa,
	obter_se_alta_obito(nr_atendimento),
	cd_medico_resp
into STRICT	cd_empresa_w,
	ie_obito_w,
	cd_medico_atend_w
from	estabelecimento b,
	atendimento_paciente a
where	a.cd_estabelecimento		= b.cd_estabelecimento
and	a.nr_atendimento		= nr_atendimento_p;

OPEN C01;
LOOP
FETCH C01 into
	nr_seq_indicador_w,
	ie_regra_def_atend_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	qt_cid_w			:= 0;
	qt_proc_w			:= 0;
	cd_medico_proc_w		:= null;
	if (ie_regra_def_atend_w in ('C','CP')) then
		ie_contido_w		:= 'S';
		select	count(*),
			min(b.cd_medico)
		into STRICT	qt_cid_w,
			cd_medico_cid_w
		from	diagnostico_medico b,
			diagnostico_doenca a
		where	a.nr_atendimento	= nr_atendimento_p
		and	b.nr_atendimento	= nr_atendimento_p
		and	a.dt_diagnostico	= b.dt_diagnostico
		and	exists (
			SELECT 1
			from	indicador_clinico_cid x
			where	x.nr_seq_indicador	= nr_seq_indicador_w
			and	a.cd_doenca		= x.cd_doenca_cid);
	end if;
	if (ie_regra_def_atend_w in ('P','CP')) then
		ie_contido_w		:= 'S';
		select	count(*),
			min(cd_medico_executor)
		into STRICT	qt_proc_w,
			cd_medico_proc_w
		from	procedimento_paciente a
		where	nr_atendimento	= nr_atendimento_p
		and	exists (
			SELECT 1
			from	indicador_clinico_proc b
			where	b.nr_seq_indicador	= nr_seq_indicador_w
			and	a.cd_procedimento	= b.cd_procedimento
			and	a.ie_origem_proced	= b.ie_origem_proced);
		if (qt_proc_w = 0) then
			select	count(*),
				min(cd_medico_cirurgiao)
			into STRICT	qt_proc_w,
				cd_medico_proc_w
			from	cirurgia a
			where	nr_atendimento	= nr_atendimento_p
			and	exists (
				SELECT 1
				from	indicador_clinico_proc b
				where	b.nr_seq_indicador		= nr_seq_indicador_w
				and	a.cd_procedimento_princ	= b.cd_procedimento
				and	a.ie_origem_proced		= b.ie_origem_proced);
		end if;
	end if;

	if	((ie_regra_def_atend_w in ('C','CP')) and (qt_cid_w = 0))  then
		ie_contido_w		:= 'N';
	end if;
	if	((ie_regra_def_atend_w in ('P','CP')) and (qt_proc_w = 0))  then
		ie_contido_w		:= 'N';
	end if;

	if (ie_contido_w = 'S') then
		select	nextval('atend_indic_clinico_seq')
		into STRICT	nr_sequencia_w
		;
		insert into	atend_indic_clinico(
			nr_sequencia,
			nr_atendimento,
			dt_atualizacao,
			nm_usuario,
			nr_seq_indicador,
			ie_obito,
			cd_medico)
		values (
			nr_sequencia_w,
			nr_atendimento_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_indicador_w,
			ie_obito_w,
			coalesce(cd_medico_cid_w, coalesce(cd_medico_proc_w, cd_medico_atend_w)));
	end if;
	end;
END LOOP;
CLOSE C01;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_indic_clinico_atend ( nr_atendimento_p bigint, nr_seq_indicador_p bigint, nm_usuario_p text) FROM PUBLIC;

