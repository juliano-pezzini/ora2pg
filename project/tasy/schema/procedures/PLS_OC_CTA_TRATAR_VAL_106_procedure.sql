-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_106 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


qt_cnt_w		integer;
i			integer;
tb_seq_selecao_w	dbms_sql.number_table;
tb_observacao_w		dbms_sql.varchar2_table;
tb_valido_w		dbms_sql.varchar2_table;
ds_observacao_w		varchar(4000);

C01 CURSOR(nr_seq_oc_cta_comb_pc	pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	ie_valida_medico
	from	pls_oc_cta_val_aft_coop a
	where	a.nr_seq_oc_cta_comb = nr_seq_oc_cta_comb_pc;

C02 CURSOR(	nr_id_transacao_pc		pls_selecao_ocor_cta.nr_id_transacao%type,
		ie_valida_medico_pc		pls_oc_cta_val_aft_coop.ie_valida_medico%type) FOR
	SELECT	sel.nr_sequencia nr_seq_selecao,
		conta.cd_medico_executor cd_medico,
		null cd_procedimento,
		(SELECT	count(1)
		 from	pls_cooperado a,
			pls_cooperado_ausencia b
		 where	a.nr_sequencia = b.nr_seq_cooperado
		 and	a.cd_pessoa_fisica = conta.cd_medico_executor
		 and	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')
		 and	conta.dt_atendimento_referencia between b.dt_inicio and coalesce(b.dt_fim,conta.dt_atendimento_referencia)) qt_coop
	from	pls_selecao_ocor_cta sel,
		pls_conta conta
	where	sel.nr_seq_conta 	= conta.nr_sequencia
	and	sel.nr_id_transacao 	= nr_id_transacao_pc
	and	sel.ie_valido 		= 'S'
	and	ie_valida_medico_pc 	= 'ME'
	
union all

	select	sel.nr_sequencia nr_seq_selecao,
		conta.cd_medico_solicitante cd_medico,
		null cd_procedimento,
		(select	count(1)
		 from	pls_cooperado a,
			pls_cooperado_ausencia b
		 where	a.nr_sequencia = b.nr_seq_cooperado
		 and	a.cd_pessoa_fisica = conta.cd_medico_solicitante
		 and	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')
		 and	conta.dt_atendimento_referencia between b.dt_inicio and coalesce(b.dt_fim,conta.dt_atendimento_referencia)) qt_coop
	from	pls_selecao_ocor_cta sel,
		pls_conta conta
	where	sel.nr_seq_conta 	= conta.nr_sequencia
	and	sel.nr_id_transacao 	= nr_id_transacao_pc
	and	sel.ie_valido 		= 'S'
	and	ie_valida_medico_pc 	= 'MS'
	
union all

	select	sel.nr_sequencia nr_seq_selecao,
		partic.cd_medico,
		proc.cd_procedimento,
		(select	count(1)
		 from	pls_cooperado a,
			pls_cooperado_ausencia b
		 where	a.nr_sequencia = b.nr_seq_cooperado
		 and	a.cd_pessoa_fisica = partic.cd_medico
		 and	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')
		 and	proc.dt_procedimento_referencia between b.dt_inicio and coalesce(b.dt_fim,conta.dt_atendimento_referencia)) qt_coop
	from	pls_selecao_ocor_cta sel,
		pls_conta conta,
		pls_conta_proc proc,
		pls_proc_participante partic
	where	sel.nr_seq_conta	= conta.nr_sequencia
	and	proc.nr_seq_conta 	= conta.nr_sequencia
	and	proc.nr_sequencia 	= partic.nr_seq_conta_proc
	and	sel.nr_id_transacao 	= nr_id_transacao_pc
	and	sel.ie_valido 		= 'S'
	and	ie_valida_medico_pc 	= 'MP';
BEGIN
-- Somente valida se tiver regra cadastrada
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '') then

	-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
	CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);

	--Grava a quantidade de registro por transação
	qt_cnt_w := pls_cta_consistir_pck.qt_registro_transacao_w;

	-- Inicializa as variáveis
	tb_seq_selecao_w	:= pls_tipos_ocor_pck.num_table_vazia;
	tb_observacao_w		:= pls_tipos_ocor_pck.vchr2_table_vazia;
	tb_valido_w		:= pls_tipos_ocor_pck.vchr2_table_vazia;
	i			:= 0;

	for r_C01_w in C01(dados_regra_p.nr_sequencia) loop

		for r_C02_w in C02(nr_id_transacao_p, r_C01_w.ie_valida_medico) loop

			if (r_C02_w.qt_coop > 0) then

				ds_observacao_w := '';

				if (r_C01_w.ie_valida_medico = 'ME') then
					ds_observacao_w := 'Atendimento realizado durante período de afastamento do médico executor da conta. ' || pls_util_pck.enter_w ||
							   'Médico executor: ' || r_C02_w.cd_medico || '.';
				elsif (r_C01_w.ie_valida_medico = 'MS') then
					ds_observacao_w := 'Atendimento realizado durante período de afastamento do médico solicitante da conta. ' || pls_util_pck.enter_w ||
							   'Médico solicitante: ' || r_C02_w.cd_medico || '.';
				elsif (r_C01_w.ie_valida_medico = 'MP') then
					ds_observacao_w := 'Atendimento realizado durante período de afastamento do médico participante. ' || pls_util_pck.enter_w ||
							   'Procedimento: ' || r_C02_w.cd_procedimento || '.' || pls_util_pck.enter_w ||
							   'Médico participante: ' || r_C02_w.cd_medico || '.';
				end if;

				tb_seq_selecao_w(i) := r_C02_w.nr_seq_selecao;
				tb_observacao_w(i) := ds_observacao_w;
				tb_valido_w(i) := 'S';

				if (tb_seq_selecao_w.count > qt_cnt_w) then
					CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
											pls_tipos_ocor_pck.clob_table_vazia,
											'SEQ',
											tb_observacao_w,
											tb_valido_w,
											nm_usuario_p);

					tb_seq_selecao_w	:= pls_tipos_ocor_pck.num_table_vazia;
					tb_observacao_w		:= pls_tipos_ocor_pck.vchr2_table_vazia;
					tb_valido_w		:= pls_tipos_ocor_pck.vchr2_table_vazia;
					i			:= 0;
				else
					i := i + 1;
				end if;
			end if;
		end loop;

		if (tb_seq_selecao_w.count > 0) then
			CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
									pls_tipos_ocor_pck.clob_table_vazia,
									'SEQ',
									tb_observacao_w,
									tb_valido_w,
									nm_usuario_p);

			tb_seq_selecao_w	:= pls_tipos_ocor_pck.num_table_vazia;
			tb_observacao_w		:= pls_tipos_ocor_pck.vchr2_table_vazia;
			tb_valido_w		:= pls_tipos_ocor_pck.vchr2_table_vazia;
			i			:= 0;
		end if;
	end loop;

	-- seta os registros que serão válidos ou inválidos após o processamento
	CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_106 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

