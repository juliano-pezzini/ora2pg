-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function gerar_solicitacao_alt_regra as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE gerar_solicitacao_alt_regra ( vl_campo_old_p text, vl_campo_new_p text, nm_campo_p text, cd_pessoa_fisica_p text, nm_tabela_p text, cd_funcao_p bigint, ie_tipo_complemento_p bigint, ie_tipo_segurado_p text, ie_estipulante_p text, ie_pagador_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ie_alterou_p INOUT text) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'SELECT * FROM gerar_solicitacao_alt_regra_atx ( ' || quote_nullable(vl_campo_old_p) || ',' || quote_nullable(vl_campo_new_p) || ',' || quote_nullable(nm_campo_p) || ',' || quote_nullable(cd_pessoa_fisica_p) || ',' || quote_nullable(nm_tabela_p) || ',' || quote_nullable(cd_funcao_p) || ',' || quote_nullable(ie_tipo_complemento_p) || ',' || quote_nullable(ie_tipo_segurado_p) || ',' || quote_nullable(ie_estipulante_p) || ',' || quote_nullable(ie_pagador_p) || ',' || quote_nullable(cd_estabelecimento_p) || ',' || quote_nullable(nm_usuario_p) || ',' || quote_nullable(ie_alterou_p) || ' )';
	SELECT v_ret INTO ie_alterou_p FROM dblink(v_conn_str, v_query) AS p (v_ret text);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE gerar_solicitacao_alt_regra_atx ( vl_campo_old_p text, vl_campo_new_p text, nm_campo_p text, cd_pessoa_fisica_p text, nm_tabela_p text, cd_funcao_p bigint, ie_tipo_complemento_p bigint, ie_tipo_segurado_p text, ie_estipulante_p text, ie_pagador_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ie_alterou_p INOUT text) AS $body$
DECLARE


qt_registros_w		bigint;
dt_w			timestamp;
vl_campo_new_w		varchar(255);
cd_perfil_w		pls_regra_solic_alt_pf.cd_perfil%type;
BEGIN
vl_campo_new_w	:= vl_campo_new_p;

ie_alterou_p	:= 'N';

if (coalesce(vl_campo_old_p,'0') <> coalesce(vl_campo_new_w,'0')) then
	cd_perfil_w := wheb_usuario_pck.get_cd_perfil;

	select	count(1)
	into STRICT	qt_registros_w
	from	pls_regra_solic_alt_pf		b,
		pls_regra_solic_alt_atrib	a
	where	a.nr_seq_regra			= b.nr_sequencia
	and	b.nm_tabela			= nm_tabela_p
	and	coalesce(b.cd_funcao,cd_funcao_p)	= cd_funcao_p
	and	((coalesce(b.ie_tipo_complemento,ie_tipo_complemento_p) = ie_tipo_complemento_p) or (coalesce(ie_tipo_complemento_p::text, '') = ''))
	and	a.nm_atributo			= nm_campo_p
	and	((b.ie_beneficiario	= 'S' and (ie_tipo_segurado_p IS NOT NULL AND ie_tipo_segurado_p::text <> '')) or
		((b.ie_beneficiario	= 'P' and ie_pagador_p = 'S') or
		((b.ie_beneficiario	= 'E' and ie_estipulante_p = 'S') or
		((b.ie_beneficiario	= 'T' and
			((ie_tipo_segurado_p IS NOT NULL AND ie_tipo_segurado_p::text <> '') or
			((ie_pagador_p = 'S') or (ie_estipulante_p = 'S')))) or (b.ie_beneficiario = 'N')))))
	and	((b.ie_tipo_segurado = ie_tipo_segurado_p) or (coalesce(b.ie_tipo_segurado::text, '') = ''))
	and	b.ie_situacao = 'A'
	and	((coalesce(a.ie_informado,'N') = 'N') or (vl_campo_old_p IS NOT NULL AND vl_campo_old_p::text <> ''))
	and	cd_perfil_w = coalesce(b.cd_perfil,cd_perfil_w);

	if (qt_registros_w > 0) then
		if (substr(nm_campo_p,1,3) = 'DT_') then
			dt_w	:= to_date(vl_campo_new_p);
			vl_campo_new_w	:= to_char(dt_w,'dd/mm/yyyy');
		end if;

		ie_alterou_p	:= 'S';

		insert into pessoa_fisica_solic_alt(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				cd_estabelecimento,cd_pessoa_fisica,nm_campo,vl_campo_ant,vl_campo_novo)
		values (	nextval('pessoa_fisica_solic_alt_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				cd_estabelecimento_p,cd_pessoa_fisica_p,nm_campo_p,vl_campo_old_p,vl_campo_new_w);
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_solicitacao_alt_regra ( vl_campo_old_p text, vl_campo_new_p text, nm_campo_p text, cd_pessoa_fisica_p text, nm_tabela_p text, cd_funcao_p bigint, ie_tipo_complemento_p bigint, ie_tipo_segurado_p text, ie_estipulante_p text, ie_pagador_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ie_alterou_p INOUT text) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE gerar_solicitacao_alt_regra_atx ( vl_campo_old_p text, vl_campo_new_p text, nm_campo_p text, cd_pessoa_fisica_p text, nm_tabela_p text, cd_funcao_p bigint, ie_tipo_complemento_p bigint, ie_tipo_segurado_p text, ie_estipulante_p text, ie_pagador_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ie_alterou_p INOUT text) FROM PUBLIC;

