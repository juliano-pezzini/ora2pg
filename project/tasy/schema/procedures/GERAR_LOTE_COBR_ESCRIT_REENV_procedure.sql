-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lote_cobr_escrit_reenv ( nr_seq_lote_p bigint, ie_opcao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_status_w				varchar(2);
ie_tipo_titulo_w				varchar(2);
ie_novo_status_w				varchar(2)	:= null;
ie_tipo_lote_w				varchar(1);
vl_cobranca_w				double precision;
vl_lote_w					double precision	:= 0;
nr_seq_conta_banco_w			bigint;
nr_seq_tit_rec_cobr_w			bigint;
nr_titulo_w				bigint;
qt_registro_w				bigint;
dt_inicial_w				timestamp;
dt_final_w				timestamp;

/* IE_OPCAO_P
G - Gerar
D - Desfazer
M - Mudar para definitivo*/
C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.vl_cobranca,
		c.nr_titulo
	from	titulo_receber c,
		titulo_receber_cobr a,
		cobranca_escritural b
	where	a.nr_seq_cobranca	= b.nr_sequencia
	and	a.nr_titulo		= c.nr_titulo
	and	coalesce(c.dt_liquidacao::text, '') = ''
	and	b.ie_remessa_retorno	= ie_tipo_lote_w  --Somente lotes de retorno
	and	b.dt_remessa_retorno between trunc(coalesce(dt_inicial_w,b.dt_remessa_retorno),'dd') and fim_dia(coalesce(dt_final_w,b.dt_remessa_retorno))
	and	c.ie_tipo_titulo	= coalesce(ie_tipo_titulo_w,c.ie_tipo_titulo)
	and	coalesce(c.nr_seq_conta_banco,0)	= coalesce(nr_seq_conta_banco_w,coalesce(c.nr_seq_conta_banco,0))
	order by
		b.dt_remessa_retorno desc;


BEGIN
select	max(dt_inicial),
	max(dt_final),
	max(ie_status),
	max(ie_tipo_titulo),
	max(nr_seq_conta_banco)
into STRICT	dt_inicial_w,
	dt_final_w,
	ie_status_w,
	ie_tipo_titulo_w,
	nr_seq_conta_banco_w
from	lote_cobr_escrit_reenvio
where	nr_sequencia	= nr_seq_lote_p;

/* -------- GERAR--------- */

if (ie_opcao_p = 'G') then
	delete	from lote_cobr_esc_reenv_tit
	where	nr_seq_lote	= nr_seq_lote_p;

	ie_tipo_lote_w := Obter_Param_Usuario(815, 29, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_tipo_lote_w);

	open C01;
	loop
	fetch C01 into
		nr_seq_tit_rec_cobr_w,
		vl_cobranca_w,
		nr_titulo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		/* Verificar se o título ainda não está no lote */

		select	count(*)
		into STRICT	qt_registro_w
		from	titulo_receber_cobr b,
			lote_cobr_esc_reenv_tit a
		where	a.nr_seq_tit_rec_cobr	= b.nr_sequencia
		and	a.nr_seq_lote		= nr_seq_lote_p
		and	b.nr_titulo		= nr_titulo_w;

		if (qt_registro_w = 0) then
			vl_lote_w	:= vl_lote_w + vl_cobranca_w;

			insert into lote_cobr_esc_reenv_tit(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				dt_geracao_boleto,
				nm_usuario_boleto,
				nr_seq_lote,
				nr_seq_tit_rec_cobr)
			values (nextval('lote_cobr_esc_reenv_tit_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				null,
				null,
				nr_seq_lote_p,
				nr_seq_tit_rec_cobr_w);
		end if;
		end;
	end loop;
	close C01;
/* -------- DESFAZER --------- */

elsif (ie_opcao_p  	= 'D') and (ie_status_w	= 'G') then
	select	count(*)
	into STRICT	qt_registro_w
	from	lote_cobr_esc_reenv_tit b,
		cobr_esc_reenv_tit_hist a
	where	a.nr_seq_tit_reenvio	= b.nr_sequencia
	and	b.nr_seq_lote		= nr_seq_lote_p;

	if (qt_registro_w > 0) then
		/*Já foram incluídos históricos neste lote, o mesmo não pode ser desfeito!*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(238645);
	end if;

	delete from	lote_cobr_esc_reenv_tit
	where		nr_seq_lote	= nr_seq_lote_p;

	update	lote_cobr_escrit_reenvio
	set	vl_lote		= 0
	where	nr_sequencia	= nr_seq_lote_p;

/* -------- DEFINITIVO ------- */

elsif (ie_opcao_p = 'M') then
	ie_novo_status_w	:= 'D';

	select	sum(b.vl_cobranca)
	into STRICT	vl_lote_w
	from	titulo_receber_cobr	b,
		lote_cobr_esc_reenv_tit a
	where	a.nr_seq_tit_rec_cobr	= b.nr_sequencia
	and	a.nr_seq_lote		= nr_seq_lote_p;
end if;

update	lote_cobr_escrit_reenvio
set	vl_lote		= vl_lote_w,
	ie_status	= coalesce(ie_novo_status_w,CASE WHEN vl_lote_w=0 THEN 'P'  ELSE 'G' END )
where	nr_sequencia	= nr_seq_lote_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lote_cobr_escrit_reenv ( nr_seq_lote_p bigint, ie_opcao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

