-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicar_gestao_agenda_pac (nr_seq_origem_p bigint, nr_seq_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE



CD_PESSOA_FISICA_w		varchar(10);
DT_AGENDA_w			timestamp;
HR_INICIO_w			timestamp;
hr_inicio_destino_w		timestamp;
cd_agenda_destino_w		bigint;
CD_MEDICO_w					varchar(10);
CD_MEDICO_REQ_w			varchar(10);
NM_PESSOA_CONTATO_w		varchar(50);
CD_CONVENIO_w			integer;
QT_IDADE_PACIENTE_w		smallint;
CD_TIPO_ANESTESIA_w		varchar(02);
IE_STATUS_AGENDA_w		varchar(03);
NM_INSTRUMENTADOR_w		varchar(20);
NM_CIRCULANTE_w			varchar(20);
IE_ORTESE_PROTESE_w		varchar(01);
IE_CDI_w			varchar(01);
IE_UTI_w			varchar(01);
IE_BANCO_SANGUE_w		varchar(01);
IE_SERV_ESPECIAL_w		varchar(01);
CD_ANESTESISTA_w       		varchar(10);
CD_PEDIATRA_w          		varchar(10);
NM_PACIENTE_w          		varchar(60);
IE_ANESTESIA_w			varchar(01);
IE_CARATER_CIRURGIA_w   	varchar(01);
CD_USUARIO_CONVENIO_w    	varchar(30);
CD_PLANO_w               	varchar(10);
IE_LEITO_w               	varchar(01);
NR_TELEFONE_w            	varchar(255);
IE_EQUIPAMENTO_w         	varchar(01);
IE_VIDEO_w               	varchar(01);
NR_SEQ_CLASSIF_AGENDA_w		bigint;
IE_UC_w                  	varchar(01);
CD_PROCEDENCIA_w         	integer;
CD_CATEGORIA_w           	varchar(10);
CD_TIPO_ACOMODACAO_w     	smallint;
NR_DOC_CONVENIO_w        	varchar(20);
DT_VALIDADE_CARTEIRA_w   	timestamp;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
ds_procedimento_w		varchar(255);
cd_agenda_w			bigint;
cd_estabelecimento_w		bigint;
ie_tipo_atendimento_w		smallint;

cd_proc_w			bigint;
ie_origem_w			bigint;
nr_seq_proc_princ_w		bigint;
ie_lado_proc_w			varchar(01);
nr_seq_procedimento_w		bigint;
cd_funcao_w			smallint;
dt_confirmacao_w		timestamp;
nr_seq_classif_equip_w		bigint;
nr_seq_conjunto_w		bigint;
qt_conjunto_w			bigint;
ie_obrigatorio_w		varchar(1);

cd_material_w			bigint;
qt_material_w			double precision;
nr_seq_apres_w			bigint;
ds_observacao_w			varchar(4000);
ds_observacao_ww		varchar(255);
ie_autorizado_w			varchar(3);
ie_padrao_w			varchar(1);
nr_seq_tipo_caixa_opme_w	bigint;
nr_seq_proc_servico_w		bigint;
ds_historico_w			text;
dt_historico_w			timestamp;
ds_arquivo_w			varchar(255);
nr_seq_status_w			bigint;

ds_alteracao_w			varchar(2000);
ds_observacao_origem_w		varchar(4000);
nr_minuto_duracao_w		bigint;
cd_cgc_w			varchar(14);

ie_autorizacao_w		varchar(3);
ds_cirurgia_w			varchar(500);
ie_lado_w			varchar(1);
nr_seq_autor_cirurgia_w		bigint;
ie_manter_status_w		varchar(1)	:= 'N';
ie_passa_normal_w		varchar(05);
nr_seq_proc_interno_w		bigint;
nr_seq_anexo_w			bigint;
nr_seq_anexo_ww			bigint;
ie_integracao_w			varchar(1);
ie_duplica_autor_agenda_w	varchar(2);

dt_atualizacao_anexo_w 		timestamp;

ie_opme_int_status_w 		varchar(80);
ie_opme_integracao_w 		varchar(1);
dt_chegada_prev_w		timestamp;
ie_GeraRegraCalcInter_w		varchar(1);
ie_gravar_obs_w			varchar(1);
cd_doenca_cid_w			varchar(10);
ie_reserva_leito_w		varchar(3);
ds_senha_w			varchar(20);
nm_usuario_confirm_w		varchar(15);
qt_diaria_prev_w		smallint;
nr_seq_motivo_contato_w		bigint;
dt_nascimento_pac_w		timestamp;
qt_idade_mes_w			smallint;
cd_equipamento_w		bigint;
nr_seq_autor_convenio_w		bigint;
ie_statuts_autoriz_w		varchar(3);
ie_status_cancelada_w		varchar(3);
dt_cancelamento_w		timestamp;
ie_sexo_w			varchar(15);
qt_idade_w			bigint;
nr_seq_evento_w			bigint;
ie_consiste_disp_equip_w	varchar(1);
cd_motivo_cancel_w		varchar(15);
ie_status_copia_canc_w		varchar(1):=null;
CD_MEDICO_ww					varchar(15);
cd_setor_exclusivo_w		integer;
qt_procedimento_w		double precision;
nr_sequencia_ww			bigint;
nr_sequencia_w			bigint;
nr_seq_opme_w			bigint;
nr_seq_opme_new_w		bigint;

ds_material_w			varchar(255);
qt_quantidade_w 		double precision;
ds_fornecedor_w 		varchar(255);
ie_tipo_item_w			bigint;
ie_envio_comunic_w		varchar(1);
nr_guia_convenio_w		varchar(25);
ie_situacao_w			varchar(1);
ie_situacao_ww			varchar(1);
cd_material_convenio_w		varchar(25);
nr_seq_marca_w			bigint;
ie_permanente_w			varchar(1);
nm_usuario_hist_w		varchar(15);
ie_status_agenda_ww		varchar(3) := null;
qt_consig_hist_w		bigint;
ie_medico_req_copia_w varchar(1);
ie_campo_classif_copia_w		varchar(1);
ie_forma_cad_equipamento_w		varchar(2);
nr_seq_tipo_anexo_w				anexo_agenda.nr_seq_tipo_anexo%type;

expressao1_w	varchar(255) := obter_desc_expressao_idioma(344235, null, wheb_usuario_pck.get_nr_seq_idioma);--Obs.:
expressao2_w	varchar(255) := obter_desc_expressao_idioma(774033, null, wheb_usuario_pck.get_nr_seq_idioma);--Agenda Duplicada. Procedimento
expressao3_w	varchar(255) := obter_desc_expressao_idioma(619522, null, wheb_usuario_pck.get_nr_seq_idioma);--Dia:
expressao4_w	varchar(255) := obter_desc_expressao_idioma(325811, null, wheb_usuario_pck.get_nr_seq_idioma);--Paciente:
expressao5_w	varchar(255) := obter_desc_expressao_idioma(326269, null, wheb_usuario_pck.get_nr_seq_idioma);--status:
expressao6_w	varchar(255) := obter_desc_expressao_idioma(622367, null, wheb_usuario_pck.get_nr_seq_idioma);--médico:
expressao7_w	varchar(255) := obter_desc_expressao_idioma(622226, null, wheb_usuario_pck.get_nr_seq_idioma);--proced:
expressao8_w	varchar(255) := obter_desc_expressao_idioma(327633, null, wheb_usuario_pck.get_nr_seq_idioma);--origem:
expressao9_w	varchar(255) := obter_desc_expressao_idioma(697085, null, wheb_usuario_pck.get_nr_seq_idioma);--Interno
expressao10_w	varchar(255) := obter_desc_expressao_idioma(302532, null, wheb_usuario_pck.get_nr_seq_idioma);--agendamento
expressao11_w	varchar(255) := obter_desc_expressao_idioma(328225, null, wheb_usuario_pck.get_nr_seq_idioma);--usuário
expressao12_w	varchar(255) := obter_desc_expressao_idioma(330345, null, wheb_usuario_pck.get_nr_seq_idioma);--agenda:
expressao13_w	varchar(255) := obter_desc_expressao_idioma(774034, null, wheb_usuario_pck.get_nr_seq_idioma);--Seq destino:
expressao14_w	varchar(255) := obter_desc_expressao_idioma(774035, null, wheb_usuario_pck.get_nr_seq_idioma);--Dados da duplicação
c01 CURSOR FOR
	SELECT	nr_seq_agenda,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno,
		ie_lado,
		cd_convenio,
		cd_categoria,
		cd_medico,
		CD_PLANO,
		qt_procedimento
	from	agenda_paciente_proc
	where	nr_sequencia		= nr_seq_origem_p;

c02 CURSOR FOR
	SELECT	cd_profissional,
		cd_funcao
	from	profissional_agenda
	where	nr_seq_agenda		= nr_seq_origem_p;

c03 CURSOR FOR
	SELECT	a.dt_confirmacao,
		a.nr_seq_classif_equip,
		a.cd_equipamento
	from	agenda_pac_equip a
	where	a.nr_seq_agenda			= nr_seq_origem_p
	and 	a.ie_origem_inf			= 'I'
	and	ie_consiste_disp_equip_w	= 'N'
	and 	((exists (SELECT 	1
					from    equipamento x
					where 	a.cd_equipamento = x.cd_equipamento
					and 	coalesce(x.cd_setor_atendimento,cd_setor_exclusivo_w) = cd_setor_exclusivo_w)
	and		coalesce(ie_forma_cad_equipamento_w,'E') =  'E')
	or (coalesce(a.cd_equipamento,0) = 0
	and		coalesce(ie_forma_cad_equipamento_w,'E') =  'C'));



c04 CURSOR FOR
	SELECT	nr_seq_conjunto,
		qt_conjunto,
		ie_obrigatorio,
		nr_seq_proc_interno
	from	agenda_pac_cme
	where	nr_seq_agenda		= nr_seq_origem_p
	and 	ie_origem_inf		= 'I';

c05 CURSOR FOR
	SELECT	cd_material,
		qt_material,
		nr_seq_apres,
		ds_observacao,
		'P',
		ie_padrao,
		cd_cgc,
		ie_integracao,
		nr_sequencia
	from	agenda_pac_opme
	where	nr_seq_agenda		= nr_seq_origem_p
	and 	ie_origem_inf		= 'I';

c06 CURSOR FOR
	SELECT	nr_seq_tipo_caixa_opme,
		nr_seq_apres,
		ie_padrao,
		ds_observacao,
		ie_autorizado
	from	agenda_pac_caixa_opme
	where	nr_seq_agenda		= nr_seq_origem_p
	and 	ie_origem_inf		= 'I';

c07 CURSOR FOR
	SELECT	nr_seq_proc_servico
	from	agenda_pac_servico
	where	nr_seq_agenda		= nr_seq_origem_p
	and 	ie_origem_inf		= 'I';

c08 CURSOR FOR
	SELECT	dt_historico,
		cd_pessoa_fisica,
		nr_sequencia
	from	agenda_pac_hist
	where	nr_seq_agenda		= nr_seq_origem_p;

c09 CURSOR FOR
	SELECT	nr_sequencia,
		ds_arquivo,
		nr_seq_status,
		ds_observacao,
		dt_atualizacao,
		nr_seq_tipo_anexo,
		ie_situacao
	from	anexo_agenda
	where	nr_seq_agenda		= nr_seq_origem_p;

c10 CURSOR FOR
	SELECT	nr_sequencia
	from	autorizacao_cirurgia
	where	nr_seq_agenda		= nr_seq_origem_p;

c11 CURSOR FOR
	SELECT	nr_sequencia
	from	autorizacao_convenio
	where	nr_seq_agenda		= nr_seq_origem_p;

c12 CURSOR FOR
	SELECT	nr_seq_evento
	from	regra_envio_sms
	where	cd_estabelecimento		= cd_estabelecimento_w
	and	ie_evento_disp			= 'CAC'
	and	coalesce(qt_idade_w,0) between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999)
	and	coalesce(ie_sexo,coalesce(ie_sexo_w,'XPTO'))  = coalesce(ie_sexo_w,'XPTO')
	and	coalesce(cd_medico,coalesce(cd_medico_w,'0')) = coalesce(cd_medico_w,'0')
	and (obter_se_convenio_rec_alerta(cd_convenio_w,nr_sequencia) = 'S')
	and (obter_se_proc_rec_alerta(nr_seq_proc_interno_w,nr_sequencia,cd_procedimento_w,ie_origem_proced_w) = 'S')
	and	coalesce(nr_seq_classif,coalesce(obter_classificacao_pf(cd_pessoa_fisica_w),0)) = coalesce(obter_classificacao_pf(cd_pessoa_fisica_w),0)
	and (obter_regra_alerta_agenda(nr_sequencia,cd_agenda_destino_w,ie_status_agenda_ww) = 'S')
	and (obter_classif_regra(nr_sequencia,coalesce(obter_classificacao_pf(cd_pessoa_fisica_w),0)) = 'S')
	and	coalesce(ie_situacao,'A') = 'A';

c13 CURSOR FOR
	SELECT	nr_seq_evento
	from	regra_envio_sms
	where	cd_estabelecimento		= cd_estabelecimento_w
	and	ie_evento_disp			= 'CAN'
	and	coalesce(qt_idade_w,0) between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999)
	and	coalesce(ie_sexo,coalesce(ie_sexo_w,'XPTO'))  = coalesce(ie_sexo_w,'XPTO')
	and	coalesce(cd_medico,coalesce(cd_medico_w,'0')) = coalesce(cd_medico_w,'0')
	and (obter_se_convenio_rec_alerta(cd_convenio_w,nr_sequencia) = 'S')
	and (obter_se_proc_rec_alerta(nr_seq_proc_interno_w,nr_sequencia,cd_procedimento_w,ie_origem_proced_w) = 'S')
	and	coalesce(nr_seq_classif,coalesce(obter_classificacao_pf(cd_pessoa_fisica_w),0)) = coalesce(obter_classificacao_pf(cd_pessoa_fisica_w),0)
	and (obter_regra_alerta_agenda(nr_sequencia,cd_agenda_destino_w,ie_status_agenda_ww) = 'S')
	and (obter_classif_regra(nr_sequencia,coalesce(obter_classificacao_pf(cd_pessoa_fisica_w),0)) = 'S')
	and	coalesce(ie_situacao,'A') = 'A';

c14 CURSOR FOR
	SELECT	nextval('agenda_pac_consignado_seq'),
		nr_sequencia,
		ds_material,
		qt_quantidade,
		ds_fornecedor,
		ie_tipo_item,
		ie_autorizado,
		cd_cgc,
		nr_guia_convenio,
		ie_situacao,
		cd_material_convenio,
		nr_seq_marca,
		ds_observacao,
		ie_permanente,
		nm_usuario
	from	agenda_pac_consignado
	where	nr_seq_agenda = nr_seq_origem_p;


BEGIN

select	CD_PESSOA_FISICA       ,
	DT_AGENDA              ,
	HR_INICIO              ,
	CD_MEDICO              ,
	NM_PESSOA_CONTATO      ,
	CD_CONVENIO            ,
	QT_IDADE_PACIENTE      ,
	CD_TIPO_ANESTESIA      ,
	IE_STATUS_AGENDA       ,
	NM_INSTRUMENTADOR      ,
	NM_CIRCULANTE          ,
	IE_ORTESE_PROTESE      ,
	IE_CDI                 ,
	IE_UTI                 ,
	IE_BANCO_SANGUE        ,
	IE_SERV_ESPECIAL       ,
	CD_ANESTESISTA         ,
	CD_PEDIATRA            ,
	NM_PACIENTE            ,
	IE_ANESTESIA           ,
	IE_CARATER_CIRURGIA    ,
	CD_USUARIO_CONVENIO    ,
	CD_PLANO               ,
	IE_LEITO               ,
	NR_TELEFONE            ,
	IE_EQUIPAMENTO         ,
	IE_VIDEO               ,
	NR_SEQ_CLASSIF_AGENDA  ,
	IE_UC                  ,
	CD_PROCEDENCIA         ,
	CD_CATEGORIA           ,
	CD_TIPO_ACOMODACAO     ,
	NR_DOC_CONVENIO        ,
	DT_VALIDADE_CARTEIRA   ,
	cd_procedimento,
	nr_seq_proc_interno,
	ie_origem_proced,
	substr(obter_descricao_procedimento(cd_procedimento, ie_origem_proced),1,200),
	ds_observacao,
	nr_minuto_duracao,
	ie_autorizacao,
	ds_cirurgia,
	ie_lado,
	cd_agenda,
	ie_tipo_atendimento,
	ie_opme_int_status,
	ie_opme_integracao,
	dt_chegada_prev,
	cd_doenca_cid,
	ie_reserva_leito,
	ds_senha,
	dt_confirmacao,
	nm_usuario_confirm,
	qt_diaria_prev,
	nr_seq_motivo_contato,
	dt_nascimento_pac,
	qt_idade_mes,
	dt_cancelamento,
	cd_motivo_cancelamento,
	cd_medico_req
into STRICT	CD_PESSOA_FISICA_w              ,
	DT_AGENDA_w			,
	HR_INICIO_w			,
	CD_MEDICO_w                     ,
	NM_PESSOA_CONTATO_w             ,
	CD_CONVENIO_w                   ,
	QT_IDADE_PACIENTE_w             ,
	CD_TIPO_ANESTESIA_w             ,
	IE_STATUS_AGENDA_w              ,
	NM_INSTRUMENTADOR_w             ,
	NM_CIRCULANTE_w                 ,
	IE_ORTESE_PROTESE_w             ,
	IE_CDI_w			,
	IE_UTI_w                        ,
	IE_BANCO_SANGUE_w               ,
	IE_SERV_ESPECIAL_w              ,
	CD_ANESTESISTA_w                ,
	CD_PEDIATRA_w                   ,
	NM_PACIENTE_w                   ,
	IE_ANESTESIA_w                  ,
	IE_CARATER_CIRURGIA_w   	,
	CD_USUARIO_CONVENIO_w    	,
	CD_PLANO_w               	,
	IE_LEITO_w               	,
	NR_TELEFONE_w            	,
	IE_EQUIPAMENTO_w         	,
	IE_VIDEO_w               	,
	NR_SEQ_CLASSIF_AGENDA_w		,
	IE_UC_w                  	,
	CD_PROCEDENCIA_w         	,
	CD_CATEGORIA_w           	,
	CD_TIPO_ACOMODACAO_w     	,
	NR_DOC_CONVENIO_w        	,
	DT_VALIDADE_CARTEIRA_w		,
	cd_procedimento_w		,
	nr_seq_proc_interno_w		,
	ie_origem_proced_w		,
	ds_procedimento_w		,
	ds_observacao_origem_w		,
	nr_minuto_duracao_w,
	ie_autorizacao_w,
	ds_cirurgia_w,
	ie_lado_w,
	cd_agenda_w,
	ie_tipo_atendimento_w,
	ie_opme_int_status_w,
	ie_opme_integracao_w,
	dt_chegada_prev_w,
	cd_doenca_cid_w,
	ie_reserva_leito_w,
	ds_senha_w,
	dt_confirmacao_w,
	nm_usuario_confirm_w,
	qt_diaria_prev_w,
	nr_seq_motivo_contato_w,
	dt_nascimento_pac_w,
	qt_idade_mes_w,
	dt_cancelamento_w,
	cd_motivo_cancel_w,
	cd_medico_req_w
from	agenda_paciente
where	nr_sequencia	= nr_seq_origem_p;

select	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	agenda
where	cd_agenda	= cd_agenda_w;

ie_passa_normal_w	:= 'S';

ie_forma_cad_equipamento_w := Obter_Param_Usuario(871, 100, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_forma_cad_equipamento_w);
ie_manter_status_w := Obter_Param_Usuario(871, 132, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_manter_status_w);
ie_GeraRegraCalcInter_w := Obter_Param_Usuario(871, 239, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_GeraRegraCalcInter_w);
ie_gravar_obs_w := Obter_Param_Usuario(871, 295, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gravar_obs_w);
ie_statuts_autoriz_w := Obter_Param_Usuario(871, 464, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_statuts_autoriz_w);
ie_status_cancelada_w := Obter_Param_Usuario(871, 468, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_status_cancelada_w);
ie_consiste_disp_equip_w := Obter_Param_Usuario(871, 487, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consiste_disp_equip_w);

if (coalesce(ie_manter_status_w::text, '') = '') then
	ie_manter_status_w := 'N';
end if;

select	max(ie_dup_autor_agenda)
into STRICT	ie_duplica_autor_agenda_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;

if (ie_manter_status_w	= 'S') then
	ie_passa_normal_w	:= 'N';
else
	ie_passa_normal_w	:= 'S';
end if;

if (ie_status_cancelada_w IS NOT NULL AND ie_status_cancelada_w::text <> '') and (nr_seq_origem_p IS NOT NULL AND nr_seq_origem_p::text <> '') then
	select	max(ie_status_agenda)
	into STRICT	ie_status_agenda_w
	from	agenda_paciente
	where	nr_sequencia		= nr_seq_origem_p;

	if (ie_status_agenda_w = 'C') then
		ie_status_copia_canc_w := 'S';
	end if;
end if;

ie_campo_classif_copia_w := obter_parametro_agenda(cd_estabelecimento_w, 'IE_CLASSIF_ORIG_COPIA', 'N');

select 	max(ie_medico_req_copia)
into STRICT 		ie_medico_req_copia_w
from 		parametro_agenda
where 	cd_estabelecimento = cd_estabelecimento_w;

update	agenda_paciente
set	CD_PESSOA_FISICA        =  CD_PESSOA_FISICA_w   ,
	CD_MEDICO               =  CD_MEDICO_w          ,
	NM_PESSOA_CONTATO       =  NM_PESSOA_CONTATO_w  ,
	CD_CONVENIO             =  CD_CONVENIO_w        ,
	QT_IDADE_PACIENTE       =  QT_IDADE_PACIENTE_w  ,
	CD_TIPO_ANESTESIA       =  CD_TIPO_ANESTESIA_w  ,
	NM_INSTRUMENTADOR       =  NM_INSTRUMENTADOR_w  ,
	NM_CIRCULANTE           =  NM_CIRCULANTE_w      ,
	IE_ORTESE_PROTESE       =  IE_ORTESE_PROTESE_w  ,
	IE_CDI                  =  IE_CDI_w             ,
	IE_UTI                  =  IE_UTI_w             ,
	IE_BANCO_SANGUE         =  IE_BANCO_SANGUE_w    ,
	IE_SERV_ESPECIAL        =  IE_SERV_ESPECIAL_w   ,
	CD_ANESTESISTA          =  CD_ANESTESISTA_w     ,
	CD_PEDIATRA             =  CD_PEDIATRA_w        ,
	NM_PACIENTE             =  NM_PACIENTE_w        ,
	IE_ANESTESIA            =  IE_ANESTESIA_w       ,
	ie_carater_cirurgia	=  IE_CARATER_CIRURGIA_w ,
	IE_STATUS_AGENDA        =  CASE WHEN ie_status_copia_canc_w='S' THEN ie_status_cancelada_w  ELSE CASE WHEN coalesce(ie_passa_normal_w, 'N')='S' THEN  'N'  ELSE ie_status_agenda_w END  END ,
	CD_USUARIO_CONVENIO     =  CD_USUARIO_CONVENIO_w ,
	CD_PLANO                =  CD_PLANO_w            ,
	IE_LEITO                =  IE_LEITO_w            ,
	NR_TELEFONE             =  NR_TELEFONE_w         ,
	IE_EQUIPAMENTO          =  IE_EQUIPAMENTO_w      ,
	IE_VIDEO                =  IE_VIDEO_w            ,
	NR_SEQ_CLASSIF_AGENDA   =  CASE WHEN ie_campo_classif_copia_w='S' THEN  nr_seq_classif_agenda_w  ELSE nr_seq_classif_agenda END ,--NR_SEQ_CLASSIF_AGENDA_w ,
	IE_UC                   =  IE_UC_w                 ,
	CD_PROCEDENCIA          =  CD_PROCEDENCIA_w        ,
	CD_CATEGORIA            =  CD_CATEGORIA_w          ,
	CD_TIPO_ACOMODACAO      =  CD_TIPO_ACOMODACAO_w    ,
	NR_DOC_CONVENIO         =  NR_DOC_CONVENIO_w       ,
	NM_USUARIO_ORIG		= nm_usuario_p,
	DT_VALIDADE_CARTEIRA    =  DT_VALIDADE_CARTEIRA_w,
	cd_procedimento		= cd_procedimento_w,
	nr_seq_proc_interno	= nr_seq_proc_interno_w,
	ie_origem_proced	= ie_origem_proced_w,
	dt_agendamento		= clock_timestamp(),
	dt_chegada_prev		= dt_chegada_prev_w,
	ds_observacao		= substr(CASE WHEN(ie_gravar_obs_w)='S' THEN expressao1_w || ' ' || substr(ds_observacao_origem_w,1,3000) || ' - ' || expressao2_w || ' ' || (ds_procedimento_w) || ' ' || expressao3_w || ' ' || (to_char(hr_inicio_w, 'dd/mm/yyyy hh24:mi:ss'))  ELSE (ds_observacao_origem_w) END ,1,4000),
	dt_atualizacao		= clock_timestamp(),
	nm_usuario		= nm_usuario_p,
	nr_minuto_duracao	= nr_minuto_duracao_w,
	ie_autorizacao	= 	CASE WHEN ie_statuts_autoriz_w='' THEN ie_autorizacao_w  ELSE ie_statuts_autoriz_w END ,
	ds_cirurgia		= ds_cirurgia_w,
	ie_lado		= ie_lado_w,
	nr_seq_anterior = nr_seq_origem_p,
	ie_tipo_atendimento = ie_tipo_atendimento_w,
	ie_opme_int_status = ie_opme_int_status_w,
	ie_opme_integracao = ie_opme_integracao_w,
	cd_doenca_cid	  	= cd_doenca_cid_w,
	ie_reserva_leito	= ie_reserva_leito_w,
	ds_senha		= ds_senha_w,
	dt_confirmacao		= dt_confirmacao_w,
	nm_usuario_confirm	= nm_usuario_confirm_w,
	qt_diaria_prev		= qt_diaria_prev_w,
	dt_nascimento_pac	= dt_nascimento_pac_w,
	nr_seq_motivo_contato	= nr_seq_motivo_contato_w,
	qt_idade_mes		= qt_idade_mes_w,
	cd_medico_req		= CASE WHEN ie_medico_req_copia_w='S' THEN  cd_medico_req_w  ELSE null END
where	nr_sequencia		= nr_seq_destino_p;

if (ie_status_cancelada_w IS NOT NULL AND ie_status_cancelada_w::text <> '') and (nr_seq_origem_p IS NOT NULL AND nr_seq_origem_p::text <> '') then
	select	max(ie_status_agenda)
	into STRICT	ie_status_agenda_w
	from	agenda_paciente
	where	nr_sequencia		= nr_seq_origem_p;

	if (ie_status_agenda_w = 'C') then
		update	agenda_paciente
		set	IE_STATUS_AGENDA	= ie_status_cancelada_w
		where	nr_sequencia		= nr_seq_destino_p;
	end if;
end if;


if (dt_cancelamento_w IS NOT NULL AND dt_cancelamento_w::text <> '') then
	select	max(hr_inicio),
		max(cd_agenda),
		max(coalesce(obter_idade_pf(cd_pessoa_fisica,clock_timestamp(),'A'),coalesce(qt_idade_paciente,0))),
		max(Obter_Sexo_PF(cd_pessoa_fisica,'C')),
		max(ie_status_agenda),
		substr(max(ds_observacao),1,255)
	into STRICT	hr_inicio_destino_w,
		cd_agenda_destino_w,
		qt_idade_w,
		ie_sexo_w,
		ie_status_agenda_ww,
		ds_observacao_ww
	from	agenda_paciente
	where	nr_sequencia = nr_seq_destino_p;

	open c12;
	loop
	fetch c12 into
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on c12 */
		begin
		CALL gerar_evento_agenda_trigger(	nr_seq_evento_w,
						null,
						cd_pessoa_fisica_w,
						null,
						nm_usuario_p,
						cd_agenda_destino_w,
						hr_inicio_destino_w,
						cd_medico_w,
						cd_procedimento_w,
						ie_origem_proced_w,
						dt_cancelamento_w,
						null,
						null,
						null,
						cd_convenio_w,
						cd_motivo_cancel_w,
						'N',
						nr_seq_destino_p,
						null,
						null,
						null,
						null,
						ds_observacao_ww);
		end;
	end loop;
	close c12;

else
	select	max(hr_inicio),
		max(cd_agenda),
		max(coalesce(obter_idade_pf(cd_pessoa_fisica,clock_timestamp(),'A'),coalesce(qt_idade_paciente,0))),
		max(Obter_Sexo_PF(cd_pessoa_fisica,'C')),
		max(ie_status_agenda),
		substr(max(ds_observacao),1,255)
	into STRICT	hr_inicio_destino_w,
		cd_agenda_destino_w,
		qt_idade_w,
		ie_sexo_w,
		ie_status_agenda_ww,
		ds_observacao_ww
	from	agenda_paciente
	where	nr_sequencia = nr_seq_destino_p;

	open c13;
	loop
	fetch c13 into
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on c13 */
		begin
		CALL gerar_evento_agenda_trigger(	nr_seq_evento_w,
						null,
						cd_pessoa_fisica_w,
						null,
						nm_usuario_p,
						cd_agenda_destino_w,
						hr_inicio_destino_w,
						cd_medico_w,
						cd_procedimento_w,
						ie_origem_proced_w,
						dt_cancelamento_w,
						null,
						null,
						null,
						cd_convenio_w,
						cd_motivo_cancel_w,
						'N',
						nr_seq_destino_p,
						null,
						null,
						null,
						null,
						ds_observacao_ww);
		end;
	end loop;
	close c13;
end if;

open	c01;
loop
fetch	c01 into
	nr_seq_procedimento_w,
	cd_proc_w,
	ie_origem_w,
	nr_seq_proc_princ_w,
	ie_lado_proc_w,
	cd_convenio_w,
	cd_categoria_w,
	CD_MEDICO_ww,
	CD_PLANO_w,
	qt_procedimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	insert	into agenda_paciente_proc(nr_sequencia,
		nr_seq_agenda,
		dt_atualizacao,
		nm_usuario,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno,
		ie_lado,
		cd_convenio,
		cd_categoria,
		CD_MEDICO,
		CD_PLANO,
		qt_procedimento)
	values (nr_seq_destino_p,
		nr_seq_procedimento_w,
		clock_timestamp(),
		nm_usuario_p,
		cd_proc_w,
		ie_origem_w,
		nr_seq_proc_princ_w,
		ie_lado_proc_w,
		cd_convenio_w,
		cd_categoria_w,
		CD_MEDICO_ww,
		CD_PLANO_w,
		qt_procedimento_w);
	end;
end loop;
close c01;

open	c02;
loop
fetch	c02 into
	cd_pessoa_fisica_w,
	cd_funcao_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	insert	into profissional_agenda(
		nr_sequencia,
		cd_profissional,
		cd_funcao,
		nr_seq_agenda,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ie_indicacao)
	values (
		nextval('profissional_agenda_seq'),
		cd_pessoa_fisica_w,
		cd_funcao_w,
		nr_seq_destino_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		'N');
	end;
end loop;
close c02;

select 		coalesce(MAX(a.cd_setor_exclusivo),0)
into STRICT		cd_setor_exclusivo_w
from		agenda a,
		agenda_paciente b
where		a.cd_agenda 	= 	b.cd_agenda
and		b.nr_sequencia	= 	nr_seq_destino_p;

open	c03;
loop
fetch	c03 into
	dt_confirmacao_w,
	nr_seq_classif_equip_w,
	cd_equipamento_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	begin
	insert	into agenda_pac_equip(
		nr_sequencia,
		nr_seq_agenda,
		dt_atualizacao,
		nm_usuario,
		cd_equipamento,
		dt_confirmacao,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_classif_equip,
		ie_origem_inf,
		ie_obrigatorio
		)
	values (
		nextval('agenda_pac_equip_seq'),
		nr_seq_destino_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_equipamento_w,
		dt_confirmacao_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_classif_equip_w,
		'I',
		'S');
	end;
end loop;
close c03;

open	c04;
loop
fetch	c04 into
	nr_seq_conjunto_w,
	qt_conjunto_w,
	ie_obrigatorio_w,
	nr_seq_proc_interno_w;
EXIT WHEN NOT FOUND; /* apply on c04 */
	begin
	insert	into agenda_pac_cme(
		nr_sequencia,
		nr_seq_agenda,
		dt_atualizacao,
		nm_usuario,
		nr_seq_conjunto,
		qt_conjunto,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ie_origem_inf,
		ie_obrigatorio,
		nr_seq_proc_interno
		)
	values (
		nextval('agenda_pac_cme_seq'),
		nr_seq_destino_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_conjunto_w,
		qt_conjunto_w,
		clock_timestamp(),
		nm_usuario_p,
		'I',
		ie_obrigatorio_w,
		nr_seq_proc_interno_w);
	end;
end loop;
close c04;

open	c05;
loop
fetch	c05 into
	cd_material_w,
	qt_material_w,
	nr_seq_apres_w,
	ds_observacao_w,
	ie_autorizado_w,
	ie_padrao_w,
	cd_cgc_w,
	ie_integracao_w,
	nr_seq_opme_w;
EXIT WHEN NOT FOUND; /* apply on c05 */
	begin
	select	nextval('agenda_pac_opme_seq')
	into STRICT	nr_seq_opme_new_w
	;

	insert	into agenda_pac_opme(
		nr_sequencia,
		nr_seq_agenda,
		dt_atualizacao,
		nm_usuario,
		cd_material,
		qt_material,
		nr_seq_apres,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ie_origem_inf,
		ds_observacao,
		ie_autorizado,
		ie_padrao,
		cd_cgc,
		ie_integracao
		)
	values (
		nr_seq_opme_new_w,
		nr_seq_destino_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_material_w,
		qt_material_w,
		nr_seq_apres_w,
		clock_timestamp(),
		nm_usuario_p,
		'I',
		ds_observacao_w,
		ie_autorizado_w,
		ie_padrao_w,
		cd_cgc_w,
		ie_integracao_w);

	insert into agenda_pac_opme_fornec(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_opme,
		cd_cgc)
	SELECT	nextval('agenda_pac_opme_fornec_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_opme_new_w,
		cd_cgc
	from	agenda_pac_opme_fornec
	where	nr_seq_opme = nr_seq_opme_w;
	end;
end loop;
close c05;

open	c06;
loop
fetch	c06 into
	nr_seq_tipo_caixa_opme_w,
	nr_seq_apres_w,
	ie_padrao_w,
	ds_observacao_w,
	ie_autorizado_w;
EXIT WHEN NOT FOUND; /* apply on c06 */
	begin
	insert	into agenda_pac_caixa_opme(
		nr_sequencia,
		nr_seq_agenda,
		dt_atualizacao,
		nm_usuario,
		nr_seq_tipo_caixa_opme,
		ie_origem_inf,
		nr_seq_apres,
		ie_padrao,
		ds_observacao,
		ie_autorizado,
		dt_atualizacao_nrec,
		nm_usuario_nrec
		)
	values (
		nextval('agenda_pac_caixa_opme_seq'),
		nr_seq_destino_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_tipo_caixa_opme_w,
		'I',
		nr_seq_apres_w,
		ie_padrao_w,
		ds_observacao_w,
		ie_autorizado_w,
		clock_timestamp(),
		nm_usuario_p);
	end;
end loop;
close c06;

open	c07;
loop
fetch	c07 into
	nr_seq_proc_servico_w;
EXIT WHEN NOT FOUND; /* apply on c07 */
	begin
	insert	into agenda_pac_servico(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		nr_seq_proc_servico,
		nr_seq_agenda,
		ie_origem_inf,
		dt_atualizacao_nrec,
		nm_usuario_nrec
		)
	values (
		nextval('agenda_pac_servico_seq'),
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_proc_servico_w,
		nr_seq_destino_p,
		'I',
		clock_timestamp(),
		nm_usuario_p);
	end;
end loop;
close c07;

open	c08;
loop
fetch	c08 into
	dt_historico_w,
	cd_pessoa_fisica_w,
	nr_sequencia_ww;
EXIT WHEN NOT FOUND; /* apply on c08 */
	begin

	begin
		if (coalesce(nr_sequencia_ww,0) > 0) then
			select 	ds_historico
			into STRICT 	ds_historico_w
			from 	agenda_pac_hist
			where 	nr_sequencia  = nr_sequencia_ww;
		end if;
	exception
	when others then
		ds_historico_w := null;
	end;



	insert	into agenda_pac_hist(
		nr_sequencia,
		nr_seq_agenda,
		ds_historico,
		dt_atualizacao,
		nm_usuario,
		dt_historico,
		cd_pessoa_fisica,
		dt_atualizacao_nrec,
		nm_usuario_nrec
		)
	values (
		nextval('agenda_pac_hist_seq'),
		nr_seq_destino_p,
		ds_historico_w,
		clock_timestamp(),
		nm_usuario_p,
		dt_historico_w,
		cd_pessoa_fisica_w,
		clock_timestamp(),
		nm_usuario_p);
	end;
end loop;
close c08;

open	c09;
loop
fetch	c09 into
	nr_seq_anexo_w,
	ds_arquivo_w,
	nr_seq_status_w,
	ds_observacao_w,
	dt_atualizacao_anexo_w,
	nr_seq_tipo_anexo_w,
	ie_situacao_ww;
EXIT WHEN NOT FOUND; /* apply on c09 */
	begin

	Select	nextval('anexo_agenda_seq')
	into STRICT	nr_seq_anexo_ww
	;

	insert	into anexo_agenda(
		nr_sequencia,
		ds_arquivo,
		nr_seq_agenda,
		nr_seq_status,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ds_observacao,
		nr_seq_tipo_anexo,
		ie_situacao
		)
	values (
		nr_seq_anexo_ww,
		ds_arquivo_w,
		nr_seq_destino_p,
		nr_seq_status_w,
		dt_atualizacao_anexo_w,
		nm_usuario_p,
		dt_atualizacao_anexo_w,
		nm_usuario_p,
		ds_observacao_w,
		nr_seq_tipo_anexo_w,
		ie_situacao_ww
		);
		copia_campo_long_de_para_Java('ANEXO_AGENDA',
												'IM_DOCUMENTO',
												' where nr_sequencia = :nr_seq_anexo_w',
												'nr_seq_anexo_w='||nr_seq_anexo_w,
												'ANEXO_AGENDA',
												'IM_DOCUMENTO',
												' where nr_sequencia = :nr_seq_anexo_ww',
												'nr_seq_anexo_ww='||nr_seq_anexo_ww,
												'LR');
	insert into	anexo_agenda_hist(
			nr_sequencia,
			nr_seq_anexo,
			dt_atualizacao,
			nm_usuario,
			nr_seq_status_ant,
			nr_seq_status_atual,
			ds_observacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec)
		SELECT	nextval('anexo_agenda_hist_seq'),
			nr_seq_anexo_ww,
			dt_atualizacao,
			nm_usuario, /* Retirei nm_usuario_p OS 157400 */
			nr_seq_status_ant,
			nr_seq_status_atual,
			ds_observacao,
			coalesce(nm_usuario_nrec,nm_usuario),
			dt_atualizacao_nrec
		from	anexo_agenda_hist
		where	nr_seq_anexo = nr_seq_anexo_w;
		commit;
	end;
end loop;
close c09;

open c10;
loop
fetch c10 into
	nr_seq_autor_cirurgia_w;
EXIT WHEN NOT FOUND; /* apply on c10 */
	if (coalesce(ie_duplica_autor_agenda_w, 'N') = 'S') then
		CALL copiar_autor_cirurgia(nr_seq_autor_cirurgia_w,nr_seq_destino_p,nm_usuario_p);
	elsif (coalesce(ie_duplica_autor_agenda_w, 'N') = 'T') then
		update	autorizacao_cirurgia
		set	nr_seq_agenda	= nr_seq_destino_p
		where	nr_sequencia	= nr_seq_autor_cirurgia_w;
	end if;
end loop;
close c10;

open c11;
loop
fetch c11 into
	nr_seq_autor_convenio_w;
EXIT WHEN NOT FOUND; /* apply on c11 */
	if (coalesce(ie_duplica_autor_agenda_w, 'N') = 'S') then
		copiar_autorizacao_convenio(nr_seq_autor_convenio_w,nr_seq_destino_p,nm_usuario_p, 'S', 'S');
	elsif (coalesce(ie_duplica_autor_agenda_w, 'N') = 'T') then
		update	autorizacao_convenio
		set	nr_seq_agenda	= nr_seq_destino_p
		where	nr_sequencia	= nr_seq_autor_convenio_w;
	end if;
end loop;
close c11;


ds_alteracao_w	:= null;

/* obter dados destino */

select	' ' || expressao4_w || ' ' || coalesce(cd_pessoa_fisica,nm_paciente)	||
		' ' || expressao5_w || ' ' || ie_status_agenda					||
		' ' || expressao6_w || ' ' || cd_medico							||
		' ' || expressao7_w || ' ' || to_char(cd_procedimento)			||
		' ' || expressao8_w || ' ' || to_char(ie_origem_proced)			||
		' ' || expressao9_w || ' ' || to_char(nr_seq_proc_interno)		||
		' ' || expressao10_w || ' '|| to_char(dt_agendamento,'dd/mm/yyyy hh24:mi:ss')	||
		' ' || expressao11_w || '	'|| nm_usuario_orig						||
		' ' || expressao12_w || ' '|| to_char(cd_agenda)					||
		' ' || expressao13_w || '	'|| nr_seq_destino_p
into STRICT	ds_alteracao_w
from	agenda_paciente
where	nr_sequencia = nr_seq_destino_p;



insert into agenda_historico_acao(
					nr_sequencia,
					ie_agenda,
					cd_agenda,
					nr_seq_agenda,
					dt_agenda,
					ie_acao,
					dt_acao,
					ds_acao,
					ds_alteracao
					)
					SELECT	nextval('agenda_historico_acao_seq'),
						obter_tipo_agenda(cd_agenda),
						cd_agenda,
						nr_seq_origem_p,
						hr_inicio,
						'C',
						clock_timestamp(),
						' ' || expressao4_w || ' ' || coalesce(cd_pessoa_fisica,nm_paciente)		||
						' ' || expressao5_w || ' ' || ie_status_agenda						||
						' ' || expressao6_w || ' ' || cd_medico								||
						' ' || expressao7_w || ' ' || to_char(cd_procedimento)				||
						' ' || expressao8_w || ' ' || to_char(ie_origem_proced)				||
						' ' || expressao9_w || ' ' || to_char(nr_seq_proc_interno)			||
						' ' || expressao10_w || ' '|| to_char(dt_agendamento,'dd/mm/yyyy hh24:mi:ss')	||
						' ' || expressao11_w || '	'|| nm_usuario_orig,
						'<duplicar_agenda_paciente> ' || expressao14_w || ' = ' || ds_alteracao_w
					from	agenda_paciente
					where	nr_sequencia = nr_seq_origem_p;

commit;

if (ie_GeraRegraCalcInter_w = 'S') then
	CALL calcula_data_hora_chegada(nr_seq_destino_p);
end if;


open c14;
loop
fetch c14 into
	nr_sequencia_w,
	nr_sequencia_ww,
	ds_material_w,
	qt_quantidade_w,
	ds_fornecedor_w,
	ie_tipo_item_w,
	ie_autorizado_w,
	cd_cgc_w,
	nr_guia_convenio_w,
	ie_situacao_w,
	cd_material_convenio_w,
	nr_seq_marca_w,
	ds_observacao_w,
	ie_permanente_w,
	nm_usuario_hist_w;
EXIT WHEN NOT FOUND; /* apply on c14 */
	begin
	insert	into agenda_pac_consignado(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_agenda,
						ds_material,
						qt_quantidade,
						ds_fornecedor,
						ie_tipo_item,
						ie_autorizado,
						cd_cgc,
						ie_envio_comunic,
						nr_guia_convenio,
						ie_situacao,
						cd_material_convenio,
						nr_seq_marca,
						ds_observacao,
						ie_permanente,
						nr_seq_anterior)
	values (nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_hist_w,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_destino_p,
						ds_material_w,
						qt_quantidade_w,
						ds_fornecedor_w,
						ie_tipo_item_w,
						ie_autorizado_w,
						cd_cgc_w,
						'N',
						nr_guia_convenio_w,
						ie_situacao_w,
						cd_material_convenio_w,
						nr_seq_marca_w,
						ds_observacao_w,
						ie_permanente_w,
						nr_sequencia_w);
	commit;

	insert	into	agenda_pac_consig_inf(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_age_consig,
						ds_observacao,
						ie_dispensado,
						qt_material,
						ie_tipo_informacao,
						nr_seq_anterior)
	SELECT					nextval('agenda_pac_consig_inf_seq'),
						clock_timestamp(),
						nm_usuario,
						clock_timestamp(),
						nm_usuario_p,
						nr_sequencia_w,
						ds_observacao,
						ie_dispensado,
						qt_material,
						ie_tipo_informacao,
						nr_sequencia_w
					from	agenda_pac_consig_inf
					where	nr_seq_age_consig = nr_sequencia_ww;
	commit;



	end;
end loop;
close c14;


select  count(*)
into STRICT	qt_consig_hist_w
from	agenda_pac_consignado_hist
where	nr_seq_agenda = nr_seq_origem_p;

if (qt_consig_hist_w > 0) then

	insert	into	agenda_pac_consignado_hist(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_agenda,
							ie_alteracao,
							ds_historico)
	SELECT						nextval('agenda_pac_consignado_hist_seq'),
							dt_atualizacao,
							nm_usuario,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_destino_p,
							ie_alteracao,
							ds_historico
	from						agenda_pac_consignado_hist
	where						nr_seq_agenda = nr_seq_origem_p;

	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_gestao_agenda_pac (nr_seq_origem_p bigint, nr_seq_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

