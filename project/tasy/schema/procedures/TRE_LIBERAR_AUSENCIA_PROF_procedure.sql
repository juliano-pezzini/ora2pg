-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tre_liberar_ausencia_prof ( nr_seq_ausencia_p bigint, nm_usuario_p text) AS $body$
DECLARE



dt_periodo_inicial_w	timestamp;
dt_periodo_final_w	timestamp;
cd_pessoa_fisica_w	varchar(255);
nr_seq_agenda_w		bigint;
dt_alteracao_w		timestamp;
ds_observacao_w		varchar(255);
nr_seq_alteracao_dia_w	bigint;
ie_data_valida_w	varchar(1);

C01 CURSOR FOR
	SELECT	distinct a.nr_sequencia
	from	tre_agenda a,
		tre_evento b
	where	b.nr_seq_agenda = a.nr_sequencia
	and	b.CD_PALESTRANTE = cd_pessoa_fisica_w
	and	((dt_periodo_inicial_w >= inicio_dia(b.DT_INICIO)) and (dt_periodo_final_w <= fim_dia(DT_FIM)))
	and	coalesce(a.DT_CANCELAMENTO::text, '') = '';

BEGIN
select	max(dt_periodo_inicial),
	max(dt_periodo_final),
	max(cd_pessoa_fisica),
	max(ds_observacao)
into STRICT	dt_periodo_inicial_w,
	dt_periodo_final_w,
	cd_pessoa_fisica_w,
	ds_observacao_w
from	tre_ausencia
where	nr_sequencia = nr_seq_ausencia_p;

open C01;
loop
fetch C01 into
	nr_seq_agenda_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	dt_alteracao_w := trunc(dt_periodo_inicial_w);

	while(dt_alteracao_w <= dt_periodo_final_w) loop
		begin

		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_data_valida_w
		from	tre_inscrito b,
			tre_evento c,
			tre_agenda d
		where	b.nr_seq_evento = c.nr_sequencia
		and	d.nr_sequencia = c.nr_seq_agenda
		and	coalesce(b.dt_desistencia::text, '') = ''
		and	((tre_valida_se_dia_curso(c.nr_sequencia,fim_dia(dt_alteracao_w)) = 'S') or ((tre_obter_dados_pac_dia(b.nr_sequencia,dt_alteracao_w,'CA'))::numeric  > 0))
		and (substr(tre_obter_se_data_fim_valida(dt_alteracao_w,c.nr_sequencia,c.dt_fim_real,c.dt_fim),1,1) = 'S')
		and	fim_dia(dt_alteracao_w) >= c.dt_inicio
		and	d.nr_sequencia = nr_seq_agenda_w;


		if (ie_data_valida_w = 'S') then

			select	nextval('tre_alteracao_dia_aula_seq')
			into STRICT	nr_seq_alteracao_dia_w
			;

			insert into tre_alteracao_dia_aula(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_alteracao,
				ie_acao,
				ds_observacao,
				nr_seq_agenda,
				dt_atualizacao_nrec,
				nm_usuario_nrec)
			values (	nr_seq_alteracao_dia_w,
				clock_timestamp(),
				nm_usuario_p,
				dt_alteracao_w,
				'C',
				ds_observacao_w,
				nr_seq_agenda_w,
				clock_timestamp(),
				nm_usuario_p);

			CALL tre_lib_alteracao_dia(nr_seq_alteracao_dia_w,nm_usuario_p);

		end if;
		dt_alteracao_w := dt_alteracao_w + 1;
		end;
	end loop;

	end;
end loop;
close C01;

update	tre_ausencia
set	dt_liberacao = clock_timestamp(),
	nm_usuario_lib = nm_usuario_p
where	nr_sequencia = nr_seq_ausencia_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tre_liberar_ausencia_prof ( nr_seq_ausencia_p bigint, nm_usuario_p text) FROM PUBLIC;

