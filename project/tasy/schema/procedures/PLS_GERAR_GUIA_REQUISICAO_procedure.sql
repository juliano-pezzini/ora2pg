-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_guia_requisicao ( nr_seq_segurado_p bigint, nr_seq_prestador_p bigint, nr_seq_execucao_p text, nm_usuario_p text, ie_origem_p text, cd_estabelecimento_p bigint, nr_seq_usuario_web_p bigint, ie_validacao_digital_p bigint, nr_seq_maquina_p bigint, id_maquina_p text, nr_seq_retorno_p INOUT text) AS $body$
DECLARE


/*  ie_origem_p
 E - Execucao da requisicao
 A - Analise de autorizacao
 L - Liberacao de execucao negada  
 EP - Execucao pelo portal do Plano de Saude ( nao precisa consistir a execucao pois no portal existe guias executadas diretamente)
*/
cd_especialidade_w		integer;
cd_doenca_w			varchar(10);
cd_senha_w			varchar(20);
cd_senha_externa_w		varchar(50);
cd_medico_requisitante_w	bigint;
cd_procedimento_w		bigint;
cd_guia_principal_w		varchar(20);

ds_diagnostico_w		varchar(2000);
ds_indicacao_clinica_w		varchar(4000);
dt_nasc_recem_nascido_w		timestamp;
dt_validade_senha_w		timestamp;
dt_valid_senha_ext_w		timestamp;

ie_tipo_gat_w			varchar(1);
ie_regime_internacao_w		varchar(1);
ie_tipo_atendimento_w		varchar(2);
ie_tipo_doenca_w		varchar(1);
ie_indicacao_acidente_w		varchar(1);
ie_unidade_tempo_w		varchar(2);
ie_classificacao_w		varchar(1);	
ie_carater_internacao_w		varchar(1);
ie_tipo_saida_w			varchar(1);
ie_tipo_consulta_w		smallint;
ie_recem_nascido_w		varchar(1);
ie_tipo_processo_w		varchar(1);
ie_origem_proced_w		bigint;
ie_tipo_guia_w			varchar(1);
ie_origem_solic_w		varchar(2) := 'M';
ie_situacao_w			varchar(2);
nr_seq_plano_w			bigint;
nr_seq_material_w		bigint;
nr_seq_req_proc_w		bigint;
nr_seq_req_mat_w		bigint;
nr_seq_guia_w			bigint;
nr_seq_requisicao_w		bigint;
nr_seq_execucao_w		bigint;
nm_recem_nascido_w		varchar(60);
nr_seq_prestador_w		bigint;
nr_seq_clinica_w		bigint;
nr_seq_tipo_acomodacao_w	bigint;
nr_seq_exec_req_item_w		bigint;
nr_seq_exec_w			varchar(4000);
nr_seq_guia_principal_w		bigint;

qt_item_w			pls_execucao_req_item.qt_item%type;
qt_tempo_w			bigint;
cd_medico_executor_w		varchar(10);
ie_cobran_prev_serv_w		varchar(2);
ds_observacao_w			varchar(4000);
cd_matricula_estipulante_w	varchar(30);
ie_origem_execucao_w		pls_guia_plano.ie_origem_execucao%type;

ie_saude_ocupacional_w		pls_guia_plano.ie_saude_ocupacional%type;
ie_regime_atendimento_w		pls_guia_plano.ie_regime_atendimento%type;
ie_cobertura_especial_w		pls_guia_plano.ie_cobertura_especial%type;


C01 CURSOR FOR
	SELECT	a.ie_tipo_guia,
		a.cd_medico_requisitante,
		coalesce(a.ie_tipo_processo, 'M'),
		a.nr_seq_requisicao,
		a.nr_seq_execucao
	from	pls_execucao_req_item a
	where	coalesce(a.nr_seq_guia::text, '') = ''
	and	a.ie_situacao in ('S','P','C')	
	and	a.nr_seq_execucao = nr_seq_execucao_p
	group by a.nr_seq_requisicao,
		 a.nr_seq_execucao,
		 a.ie_tipo_guia,
		 a.cd_medico_requisitante,
		 a.ie_tipo_processo;

C02 CURSOR FOR
	SELECT	a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_material,
		a.qt_item,
		a.nr_seq_req_proc,
		a.nr_seq_req_mat,
		a.nr_sequencia,
		a.ie_situacao,
		a.cd_medico_executor
	from	pls_execucao_req_item a
	where	coalesce(a.nr_seq_guia::text, '') = ''
	and	a.ie_situacao in ('S','P','C')
	and	a.ie_tipo_guia 			= ie_tipo_guia_w
	and	a.nr_seq_requisicao 		= nr_seq_requisicao_w
	and (a.cd_medico_requisitante	= cd_medico_requisitante_w or coalesce(cd_medico_requisitante_w,0) = 0)
	and	a.nr_seq_execucao 		= nr_seq_execucao_p
	order by a.nr_sequencia;
	
C03 CURSOR FOR
	SELECT	cd_doenca,
		ie_tipo_doenca,
		ie_indicacao_acidente,
		ie_classificacao,
		ds_diagnostico,
		ie_unidade_tempo,
		qt_tempo
	from 	pls_requisicao_diagnostico
	where	nr_seq_requisicao = nr_seq_requisicao_w;	
	
C05 CURSOR FOR
	SELECT	nr_seq_processo
	from	pls_req_liminar_judicial
	where	nr_seq_requisicao = nr_seq_requisicao_w;
BEGIN

if (nr_seq_usuario_web_p IS NOT NULL AND nr_seq_usuario_web_p::text <> '') then
	ie_origem_solic_w := 'P';
end if;


open C01;
loop
fetch C01 into
	ie_tipo_guia_w,
	cd_medico_requisitante_w,
	ie_tipo_processo_w,
	nr_seq_requisicao_w,
	nr_seq_execucao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	nr_seq_plano_w := pls_obter_produto_benef(nr_seq_segurado_p, clock_timestamp());

	select	nextval('pls_guia_plano_seq')
	into STRICT	nr_seq_guia_w
	;
	
	begin
	select	cd_senha_externa,
		cd_senha,
		dt_valid_senha_ext,
		dt_validade_senha,
		ie_tipo_saida,
		ie_tipo_consulta,
		ie_recem_nascido,
		nm_recem_nascido,
		dt_nasc_recem_nascido,
		ie_carater_atendimento,
		ds_indicacao_clinica,
		nr_seq_prestador,
		cd_especialidade,
		ie_tipo_atendimento,
		nr_seq_clinica,
		ie_regime_internacao,
		nr_seq_tipo_acomodacao,
		coalesce(ie_tipo_gat,'N'),
		cd_guia_principal,
		nr_seq_guia_principal,
		ds_observacao,
		cd_matricula_estipulante,
		ie_saude_ocupacional,
		ie_regime_atendimento, 
		ie_cobertura_especial
		
	into STRICT	cd_senha_externa_w,
		cd_senha_w,
		dt_valid_senha_ext_w,
		dt_validade_senha_w,
		ie_tipo_saida_w,
		ie_tipo_consulta_w,
		ie_recem_nascido_w,
		nm_recem_nascido_w,
		dt_nasc_recem_nascido_w,
		ie_carater_internacao_w,
		ds_indicacao_clinica_w,
		nr_seq_prestador_w,
		cd_especialidade_w,
		ie_tipo_atendimento_w,
		nr_seq_clinica_w,
		ie_regime_internacao_w,
		nr_seq_tipo_acomodacao_w,
		ie_tipo_gat_w,
		cd_guia_principal_w,
		nr_seq_guia_principal_w,
		ds_observacao_w,
		cd_matricula_estipulante_w,
		ie_saude_ocupacional_w, 
		ie_regime_atendimento_w, 
		ie_cobertura_especial_w
    
	from	pls_requisicao
	where	nr_sequencia	= nr_seq_requisicao_w;
	exception
	when others then
		cd_senha_externa_w		:= null;
		cd_senha_w				:= null;
		dt_valid_senha_ext_w	:= null;
		dt_validade_senha_w		:= null;
		ie_tipo_saida_w			:= null;
		ie_tipo_consulta_w		:= null;
		ie_recem_nascido_w		:= null;
		nm_recem_nascido_w		:= null;
		dt_nasc_recem_nascido_w	:= null;
		ie_saude_ocupacional_w	:= null;
		ie_regime_atendimento_w := null;
		ie_cobertura_especial_w := null;

	end;

	select	CASE WHEN ie_origem_p='W' THEN  'W' WHEN ie_origem_p='EP' THEN  'P' WHEN ie_origem_p='A' THEN  'M' WHEN ie_origem_p='L' THEN  'M' WHEN ie_origem_p='E' THEN  'M'  ELSE 'M' END
	into STRICT	ie_origem_execucao_w
	;

	if (ie_origem_solic_w = 'P') then
		ie_origem_execucao_w := ie_origem_solic_w;
	end if;

	insert into pls_guia_plano(nr_sequencia, dt_atualizacao, nm_usuario,
		dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_segurado,
		ie_tipo_guia, ie_status, cd_estabelecimento,
		ie_tipo_processo, ie_situacao, cd_medico_solicitante,
		cd_guia, dt_solicitacao, nr_seq_plano,
		ie_estagio,nr_seq_prestador, nr_seq_prestador_web,
		cd_senha_externa, dt_valid_senha_ext, cd_senha,
		dt_validade_senha, ie_tipo_saida, ie_tipo_consulta,
		ie_recem_nascido, nm_recem_nascido, dt_nasc_recem_nascido,
		nm_usuario_atendimento, ie_carater_internacao, ds_indicacao_clinica,
		cd_especialidade, ie_tipo_atend_tiss, nr_seq_clinica,
		ie_regime_internacao, nr_seq_tipo_acomodacao, ie_tipo_gat,
		dt_autorizacao, nm_usuario_solic,ie_origem_solic,
		cd_guia_principal, ds_observacao, cd_matricula_estipulante,
		nr_seq_guia_principal, dt_emissao, ie_origem_execucao,
		ie_saude_ocupacional, ie_regime_atendimento, ie_cobertura_especial)
	values (nr_seq_guia_w ,clock_timestamp(),nm_usuario_p,
		clock_timestamp(),nm_usuario_p,nr_seq_segurado_p,
		ie_tipo_guia_w,	'1',cd_estabelecimento_p,
		ie_tipo_processo_w,'U',cd_medico_requisitante_w,
		nr_seq_guia_w, clock_timestamp(), nr_seq_plano_w,
		6,nr_seq_prestador_p, nr_seq_usuario_web_p,
		cd_senha_externa_w, dt_valid_senha_ext_w, cd_senha_w,
		dt_validade_senha_w, ie_tipo_saida_w, ie_tipo_consulta_w,
		ie_recem_nascido_w, nm_recem_nascido_w, dt_nasc_recem_nascido_w,
		nm_usuario_p, ie_carater_internacao_w, ds_indicacao_clinica_w,
		cd_especialidade_w, ie_tipo_atendimento_w, nr_seq_clinica_w,
		ie_regime_internacao_w,	nr_seq_tipo_acomodacao_w, ie_tipo_gat_w,
		clock_timestamp(), nm_usuario_p,ie_origem_solic_w,
		cd_guia_principal_w, ds_observacao_w, cd_matricula_estipulante_w,
		nr_seq_guia_principal_w, clock_timestamp(), ie_origem_execucao_w,
		ie_saude_ocupacional_w, ie_regime_atendimento_w, ie_cobertura_especial_w);
	end;

	update	pls_execucao_requisicao
	set	ie_situacao	= 1,
		nr_seq_guia	= nr_seq_guia_w,
		dt_execucao	= clock_timestamp(),
		nr_seq_maquina  = nr_seq_maquina_p,
		id_maquina      = id_maquina_p
	where	nr_sequencia	= nr_seq_execucao_w;
	
	for C05_w in C05 loop
		begin
			if (C05_w.nr_seq_processo IS NOT NULL AND C05_w.nr_seq_processo::text <> '') then
				CALL pls_inserir_liminar_requisicao(C05_w.nr_seq_processo, null, nr_seq_guia_w, nm_usuario_p);
			end if;
		end;
	end loop;
	
	open C02;
	loop
	fetch C02 into
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_material_w,
		qt_item_w,
		nr_seq_req_proc_w,
		nr_seq_req_mat_w,
		nr_seq_exec_req_item_w,
		ie_situacao_w,
		cd_medico_executor_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		if (nr_seq_req_proc_w IS NOT NULL AND nr_seq_req_proc_w::text <> '') then
			select	coalesce(ie_cobranca_previa_servico,'N')
			into STRICT	ie_cobran_prev_serv_w
			from	pls_requisicao_proc
			where	nr_sequencia	= nr_seq_req_proc_w;
		elsif (nr_seq_req_mat_w IS NOT NULL AND nr_seq_req_mat_w::text <> '') then
			select	coalesce(ie_cobranca_previa_servico,'N')
			into STRICT	ie_cobran_prev_serv_w
			from	pls_requisicao_mat
			where	nr_sequencia	= nr_seq_req_mat_w;
		end if;

		if (coalesce(cd_procedimento_w,0) <> 0) then
			
			if (ie_situacao_w	<> 'C') then
				insert into pls_guia_plano_proc(nr_sequencia, ie_status, cd_procedimento,
					ie_origem_proced, qt_solicitada, dt_atualizacao,
					nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					qt_autorizada, nr_seq_guia, dt_liberacao,
					nm_usuario_liberacao, cd_medico_executor, ie_cobranca_previa_servico)
				values (nextval('pls_guia_plano_proc_seq'), 'S', cd_procedimento_w,
					ie_origem_proced_w, qt_item_w, clock_timestamp(),
					nm_usuario_p, clock_timestamp(), nm_usuario_p,
					qt_item_w, nr_seq_guia_w, clock_timestamp(),
					nm_usuario_p, cd_medico_executor_w, ie_cobran_prev_serv_w);
			end if;
			
			update	pls_requisicao_proc
			set	nr_seq_guia		= nr_seq_guia_w,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				qt_proc_executado	= coalesce(qt_proc_executado,0) + qt_item_w
			where	nr_sequencia		= nr_seq_req_proc_w;
			
			update	pls_execucao_req_item
			set	nr_seq_guia	= nr_seq_guia_w
			where	nr_sequencia	= nr_seq_exec_req_item_w;
		elsif (coalesce(nr_seq_material_w,0) <> 0) then
			insert into pls_guia_plano_mat(nr_sequencia, ie_status, nr_seq_material,
				qt_solicitada, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, qt_autorizada,
				nr_seq_guia, dt_liberacao, nm_usuario_liberacao,
				cd_medico_executor, ie_cobranca_previa_servico)
			values (nextval('pls_guia_plano_mat_seq'), 'S', nr_seq_material_w,
				qt_item_w, clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, qt_item_w,
				nr_seq_guia_w, clock_timestamp(), nm_usuario_p,
				cd_medico_executor_w, ie_cobran_prev_serv_w);

			update	pls_requisicao_mat
			set	nr_seq_guia		= nr_seq_guia_w,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				qt_mat_executado	= coalesce(qt_mat_executado,0) + qt_item_w
			where	nr_sequencia		= nr_seq_req_mat_w;

			update	pls_execucao_req_item
			set	nr_seq_guia	= nr_seq_guia_w
			where	nr_sequencia	= nr_seq_exec_req_item_w;
		end if;

		end;
	end loop;
	close C02;
	
	open c03;
	loop
	fetch c03 into
		cd_doenca_w,
		ie_tipo_doenca_w,
		ie_indicacao_acidente_w,
		ie_classificacao_w,
		ds_diagnostico_w,
		ie_unidade_tempo_w,
		qt_tempo_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */

		insert into pls_diagnostico(nr_sequencia, cd_doenca, ie_tipo_doenca,
			 ie_indicacao_acidente, ie_classificacao, ds_diagnostico,
			 dt_atualizacao, nm_usuario, nr_seq_guia,
			 ie_unidade_tempo, qt_tempo)
		values (nextval('pls_diagnostico_seq'), cd_doenca_w, ie_tipo_doenca_w,
			 ie_indicacao_acidente_w, ie_classificacao_w, ds_diagnostico_w, 
			 clock_timestamp(), nm_usuario_p, nr_seq_guia_w,
			 ie_unidade_tempo_w, qt_tempo_w);			
	end loop;
	close c03;

	CALL pls_consiste_guia_complemento(nr_seq_guia_w, nr_seq_prestador_p, nr_seq_segurado_p, cd_estabelecimento_p, nm_usuario_p);
	CALL pls_gerar_cd_guia_regra(nr_seq_guia_w,nm_usuario_p);
	CALL pls_atualizar_conta_aut(nr_seq_guia_w, nm_usuario_p, cd_estabelecimento_p);
	
	--Tratamento realizado para a virada da Unimed Sao Jose do Rio Preto pois foi feito o cadastro de conversao errada, este update e feito pois na hora em que abre o pacote na execucao e inserido o nr_seq_requisicao no campo nr_seq_guia 
	update	pls_requisicao_proc
	set	nr_seq_guia		= nr_seq_guia_w,
		qt_proc_executado	= qt_procedimento
	where	nr_seq_guia		= nr_seq_requisicao_w;
end loop;
close C01;

nr_seq_retorno_p	:= nr_seq_exec_w;

if (nr_seq_usuario_web_p IS NOT NULL AND nr_seq_usuario_web_p::text <> '') then
	CALL pls_gravar_log_acesso_portal( null, null, nr_seq_usuario_web_p,
				      null, null, null,
				      null, null, '36',
				      wheb_mensagem_pck.get_texto(1107401,'USUARIO=' || nm_usuario_p), expressao_pck.obter_desc_expressao(496717), 'N');
end if;

/* Limpar lista dos itens utilizados na execucao da requisicao */

if (nr_seq_usuario_web_p IS NOT NULL AND nr_seq_usuario_web_p::text <> '') then
	CALL pls_delete_w_itens_execucao(null, nr_seq_segurado_p, 'LE');
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_guia_requisicao ( nr_seq_segurado_p bigint, nr_seq_prestador_p bigint, nr_seq_execucao_p text, nm_usuario_p text, ie_origem_p text, cd_estabelecimento_p bigint, nr_seq_usuario_web_p bigint, ie_validacao_digital_p bigint, nr_seq_maquina_p bigint, id_maquina_p text, nr_seq_retorno_p INOUT text) FROM PUBLIC;

