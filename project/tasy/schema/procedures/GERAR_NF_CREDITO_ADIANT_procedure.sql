-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nf_credito_adiant ( nr_interno_conta_p bigint, nr_sequencia_p bigint, cd_estabelecimento_p bigint, cd_serie_nf_p text, cd_operacao_nf_p text, cd_condicao_pagamento_p text, ie_uso_cfdi_p text, cd_centro_custo_p bigint, cd_conta_contabil_p bigint, cd_local_estoque_p bigint, cd_pessoa_fisica_p text, cd_cgc_p text, nm_usuario_p text, ds_observacao_p text, nr_seq_protocolo_p bigint) AS $body$
DECLARE



nr_adiantamento_w	adiantamento.nr_adiantamento%type;
nr_interno_conta_w      conta_paciente.nr_interno_conta%type;
nr_atendimento_w    	adiantamento.nr_atendimento%type;
cd_pessoa_fisica_w   	adiantamento.cd_pessoa_fisica%type;
cd_cgc_w        	adiantamento.cd_cgc%type;
vl_adiantamento_w    	adiantamento.vl_adiantamento%type;
vl_adiant_saldo_w	nota_fiscal_adiant_receb.vl_adiant_saldo%type;
cd_moeda_w       	adiantamento.cd_moeda%type;
ds_observacao_w		adiantamento.ds_observacao%type;
nr_sequencia_w     	nota_fiscal.nr_sequencia%type;
ie_tipo_nota_w     	nota_fiscal.ie_tipo_nota%type;
nr_sequencia_nf_w    	nota_fiscal.nr_sequencia_nf%type;
nr_nota_fiscal_w	nota_fiscal.nr_nota_fiscal%type;
cd_cgc_emitente_w	nota_fiscal.cd_cgc_emitente%type;
ie_tipo_nota_ww     	varchar(10);
vl_taxa_w		smallint := 16;
vl_valor_adiant_ajust_w	double precision;
vl_tributo_ww		nota_fiscal_item_trib.vl_tributo%type;
vl_diferencia_w		double precision;
vl_ajustado_iva_w	adiantamento.vl_adiantamento%type;
cd_natureza_operacao_w 	natureza_operacao.cd_natureza_operacao%type;
nf_credito_seq_w    	nf_credito.nr_sequencia%type;
nf_credito_item_seq_w   nf_credito_item.nr_sequencia%type;
nr_sequencia_ref_w	nota_fiscal.nr_sequencia%type;
ie_uso_cfdi_w		fis_uso_cfdi.cd_uso_cfdi%type := ie_uso_cfdi_p;

cd_pf_nf_w		adiantamento.cd_pessoa_fisica%type;
cd_pj_nf_w		adiantamento.cd_cgc%type;

c01 CURSOR FOR
SELECT	max(a.nr_adiantamento) nr_adiantamento
from	adiantamento a,
	conta_paciente_adiant b
where	b.nr_adiantamento	= a.nr_adiantamento
and	b.nr_interno_conta	= nr_interno_conta_p
group by a.cd_moeda
order by nr_adiantamento;

c02 CURSOR FOR
SELECT	max(x.nr_interno_conta)
from 	conta_paciente x,
		conta_paciente_adiant y
where 	x.nr_seq_protocolo = nr_seq_protocolo_p
and		x.nr_interno_conta = y.nr_interno_conta;

c03 CURSOR FOR
SELECT	max(a.nr_adiantamento) nr_adiantamento
from	adiantamento a,
	conta_paciente_adiant b
where	b.nr_adiantamento	= a.nr_adiantamento
and	b.nr_interno_conta	= nr_interno_conta_w
group by a.cd_moeda
order by nr_adiantamento;

---
c04 CURSOR FOR
SELECT 	a.nr_adiantamento
from	adiantamento a,
	nota_fiscal_adiant_receb b
where	b.nr_seq_adiantamento	= a.nr_adiantamento
and 	b.nr_seq_nota 		= nr_sequencia_p;

---
BEGIN

select 	cd_cgc
into STRICT 	cd_cgc_emitente_w
from 	estabelecimento
where 	cd_estabelecimento = cd_estabelecimento_p;

select	max(cd_natureza_operacao)
into STRICT	cd_natureza_operacao_w
from	operacao_nota
where	cd_operacao_nf = cd_operacao_nf_p;

if (coalesce(nr_interno_conta_p,0) > 0) then

open	c01;
loop
fetch 	c01 into
	nr_adiantamento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	select 	max(nr_atendimento),
		max(cd_pessoa_fisica),
		max(cd_cgc),
		max(cd_moeda),
		max(ds_observacao)
	into STRICT  	nr_atendimento_w,
		cd_pessoa_fisica_w,
		cd_cgc_w,
		cd_moeda_w,
		ds_observacao_w
	from  	adiantamento
	where  	nr_adiantamento = nr_adiantamento_w;
	
	select 	coalesce(max(cd_pessoa_fisica), cd_pessoa_fisica_w),
		coalesce(max(cd_cgc), cd_cgc_w)
	into STRICT  	cd_pessoa_fisica_w,
		cd_cgc_w
	from  	nota_fiscal
	where  	nr_sequencia = nr_sequencia_p;
	
	/*OS 2508367 - Ajuste, estava gerando NF da nota de credito com PF e PJ*/

	if (coalesce(cd_pessoa_fisica_p,'X') <> 'X') then --Se vier PF do parametro IN, indica que o cliente informou uma PF especifica na geracao, entao considerar essa PF informada
		cd_pf_nf_w := cd_pessoa_fisica_p;
		cd_pj_nf_w := null;
	elsif (coalesce(cd_cgc_p,'X') <> 'X') then --Se vier PJ do parametro IN, indica que o cliente informou uma PJ especifica na geracao, entao considerar essa PJ informada
		cd_pf_nf_w := null;
		cd_pj_nf_w := cd_cgc_p;
	elsif (coalesce(cd_pessoa_fisica_p,'X') = 'X') and (coalesce(cd_cgc_p,'X') = 'X') then --Se o cliente nao informou PF nem PJ na tela de geracao, considerar PF/PJ da nota da conta/adto,
		if (coalesce(cd_cgc_w,'X') <> 'X') then --Se tiver PJ na nota conta/adto, usar essa PJ
			cd_pj_nf_w := cd_cgc_w;
			cd_pf_nf_w := null;
		elsif (coalesce(cd_pessoa_fisica_w,'X') <> 'X') then --Se tiver PF na nota da conta/adto, usar essa PF.
			cd_pj_nf_w := null;
			cd_pf_nf_w := cd_pessoa_fisica_w;
		end if;
	end if;
	/*2508367 - Fim*/

		
	
	select 	sum(b.vl_adiantamento)
	into STRICT	vl_adiantamento_w
	from	adiantamento a,
		conta_paciente_adiant b
	where	b.nr_adiantamento	= a.nr_adiantamento
	and	b.nr_interno_conta	= nr_interno_conta_p
	and	a.cd_moeda		= cd_moeda_w;
	
	select 	nextval('nf_credito_seq')
	into STRICT  	nf_credito_seq_w
	;

	select	nextval('nota_fiscal_seq')
	into STRICT	nr_sequencia_w
	;

	select	nr_ultima_nf + 1
	into STRICT	nr_nota_fiscal_w
	from	serie_nota_fiscal
	where	cd_serie_nf 			= cd_serie_nf_p
	and	cd_estabelecimento 		= cd_estabelecimento_p;

	select 	coalesce(max(nr_sequencia_nf),0)+1
	into STRICT	nr_sequencia_nf_w
	from 	nota_fiscal
	where	nr_nota_fiscal 		= nr_nota_fiscal_w
	and	cd_estabelecimento 	= cd_estabelecimento_p
	and	cd_serie_nf 		= cd_serie_nf_p
	and	cd_cgc_emitente		= coalesce(cd_cgc_p,cd_cgc_w);

	insert 	into nf_credito(
		nr_sequencia,
		cd_estabelecimento,
		cd_operacao_nf,
		cd_serie_nf,
		dt_atualizacao,
		dt_atualizacao_nrec,
		dt_liberacao,
		ie_acao,
		ie_aplicacao_itens,
		ie_forma_aplicacao,
		ie_situacao,
		ie_tipo_relacao,
		ie_uso_cfdi,
		nm_usuario,
		nm_usuario_lib,
		nm_usuario_nrec,
		nr_nota_credito,
		nr_seq_nf_gerada,
		nr_seq_nf_orig)
	values (nf_credito_seq_w,
		cd_estabelecimento_p,
		cd_operacao_nf_p,
		cd_serie_nf_p,
		clock_timestamp(),
		clock_timestamp(),
		clock_timestamp(),
		'D',
		'T',
		'P',
		'1',
		'07',
		ie_uso_cfdi_p,
		nm_usuario_p,
		nm_usuario_p,
		nm_usuario_p,
		nr_nota_fiscal_w,
		nr_sequencia_w,
		nr_sequencia_p);

	select nextval('nf_credito_item_seq')
	into STRICT  nf_credito_item_seq_w
	;

	vl_valor_adiant_ajust_w := (vl_adiantamento_w / ((vl_taxa_w / 100) + 1));

	vl_valor_adiant_ajust_w := (trunc(vl_valor_adiant_ajust_w,4) + 0.0001);

	insert into nf_credito_item(
		cd_material,
		cd_procedimento,
		dt_atualizacao,
		dt_atualizacao_nrec,
		ie_origem_proced,
		nm_usuario,
		nm_usuario_nrec,
		nr_item_nf,
		nr_item_nf_orig,
		nr_seq_nf_credito,
		nr_seq_nf_orig,
		nr_sequencia,
		pr_aplicacao,
		qt_item_nf,
		vl_aplicacao,
		vl_imposto,
		vl_imposto_orig,
		vl_itens_imposto,
		vl_itens_imposto_orig,
		vl_itens_sem_imposto,
		vl_itens_sem_imposto_orig)
	values ( null,
		'301',
		clock_timestamp(),
		clock_timestamp(),
		null,
		nm_usuario_p,
		nm_usuario_p,
		1,
		1,
		nf_credito_seq_w,
		nr_sequencia_p,
		nf_credito_item_seq_w,
		0,
		1,
		0,
		0,
		0,
		vl_valor_adiant_ajust_w,
		vl_valor_adiant_ajust_w,
		0,
		0);
		
	if (cd_pf_nf_w IS NOT NULL AND cd_pf_nf_w::text <> '') then
	  ie_tipo_nota_w := 'SF';
	  ie_tipo_nota_ww := '2';
	else
	  ie_tipo_nota_w := 'SE';
	  ie_tipo_nota_ww := '0';
	end if;

	insert into nota_fiscal(
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_nota_fiscal,
		nr_sequencia_nf,
		cd_operacao_nf,
		dt_emissao,
		dt_entrada_saida,
		ie_acao_nf,
		ie_emissao_nf,
		ie_tipo_frete,
		vl_mercadoria,
		vl_total_nota,
		qt_peso_bruto,
		qt_peso_liquido,
		dt_atualizacao,
		nm_usuario,
		cd_condicao_pagamento,
		dt_contabil,
		cd_cgc,
		cd_pessoa_fisica,
		vl_ipi,
		vl_descontos,
		vl_frete,
		vl_seguro,
		vl_despesa_acessoria,
		vl_despesa_doc,
		ds_observacao,
		nr_nota_referencia,
		cd_serie_referencia,
		cd_natureza_operacao,
		dt_atualizacao_estoque,
		vl_desconto_rateio,
		ie_situacao,
		nr_ordem_compra,
		nr_lote_contabil,
		nr_sequencia,
		cd_moeda,
		vl_conv_moeda,
		ie_entregue_bloqueto,
		ie_tipo_nota,
		cd_setor_digitacao,
		nr_danfe,
		nr_seq_adiantamento,
		nr_sequencia_ref)
	values (	cd_estabelecimento_p,
		cd_cgc_emitente_w,
		cd_serie_nf_p,
		nr_nota_fiscal_w,
		nr_sequencia_nf_w,
		cd_operacao_nf_p,
		trunc(clock_timestamp()),
		clock_timestamp(),
		'1',
		'0',
		'0',
		0,
		0,
		0,
		0,
		clock_timestamp(),
		nm_usuario_p,
		cd_condicao_pagamento_p,
		null,
		cd_pj_nf_w,
		cd_pf_nf_w,
		0,
		0,
		null,
		0,
		0,
		0,
		coalesce(ds_observacao_p,ds_observacao_w),
		null,
		null,
		cd_natureza_operacao_w,
		null,
		0,
		'1',
		null,
		0,
		nr_sequencia_w,
		cd_moeda_w,
		null,
		'N',
		ie_tipo_nota_w,
		null,
		null,
		nr_adiantamento_w,
		nr_sequencia_p);

	insert	into nota_fiscal_item(
		cd_estabelecimento,
		cd_procedimento,
		cd_natureza_operacao,
		cd_serie_nf,
		dt_atualizacao,
		nm_usuario,
		nr_atendimento,
		nr_item_nf,
		nr_nota_fiscal,
		nr_sequencia,
		nr_sequencia_nf,
		qt_item_nf,
		qt_peso_bruto,
		qt_peso_liquido,
		vl_desconto,
		vl_desconto_rateio,
		vl_despesa_acessoria,
		vl_frete,
		vl_liquido,
		vl_seguro,
		vl_total_item_nf,
		vl_unitario_item_nf,
		cd_centro_custo,
		cd_conta_contabil,
		cd_local_estoque)
	values (	cd_estabelecimento_p,
		'301',
		cd_natureza_operacao_w,
		cd_serie_nf_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_atendimento_w,
		1,
		nr_nota_fiscal_w,
		nr_sequencia_w,
		nr_sequencia_nf_w,
		1,
		0,
		0,
		0,
		0,
		0,
		0,
		coalesce(vl_valor_adiant_ajust_w,0),
		0,
		coalesce(vl_valor_adiant_ajust_w,0),
		coalesce(vl_valor_adiant_ajust_w,0),
		cd_centro_custo_p,
		cd_conta_contabil_p,
		cd_local_estoque_p);


	insert into fis_tipo_relacao(nr_sequencia,
		nr_seq_nota,
		dt_atualizacao,
		nm_usuario,
		cd_tipo_relacao,
		cd_estabelecimento)
	values (	nextval('fis_tipo_relacao_seq'),
		nr_sequencia_w,
		clock_timestamp(),
		nm_usuario_p,
		'07',
		cd_estabelecimento_p);

		
	if (coalesce(ie_uso_cfdi_w::text, '') = '') then
		select 	coalesce(nr_sequencia_ref,0)
		into STRICT	nr_sequencia_ref_w
		from 	nota_fiscal
		where 	nr_sequencia = nr_sequencia_w;
		
		if (nr_sequencia_ref_w <> 0) then
			select  coalesce(cd_uso_cfdi,'X')
			into STRICT	ie_uso_cfdi_w
			from 	fis_uso_cfdi
			where 	nr_seq_nota  = nr_sequencia_ref_w;
		end if;
	end if;
			
	if (ie_uso_cfdi_w IS NOT NULL AND ie_uso_cfdi_w::text <> '') then

		insert	into fis_uso_cfdi(nr_sequencia,
				nr_seq_nota,
				dt_atualizacao,
				nm_usuario,
				cd_uso_cfdi,
				cd_estabelecimento)
		values (	nextval('fis_uso_cfdi_seq'),
				nr_sequencia_w,
				clock_timestamp(),
				nm_usuario_p,
				ie_uso_cfdi_w,
				cd_estabelecimento_p);


	end if;

	CALL Gerar_Imposto_Nf_Item(nr_sequencia_w, 1, nm_usuario_p, 0, 0, 'N');

	select 	sum(vl_tributo)
	into STRICT 	vl_tributo_ww
	from 	nota_fiscal_item_trib
	where  nr_sequencia = nr_sequencia_w;

	vl_ajustado_iva_w := (vl_valor_adiant_ajust_w + vl_tributo_ww);

	vl_diferencia_w := (vl_adiantamento_w - vl_ajustado_iva_w);

	if (vl_diferencia_w >= -0.02) and (vl_diferencia_w <= 0.02) then

		vl_tributo_ww := vl_tributo_ww + vl_diferencia_w;

		update nota_fiscal_item_trib set vl_tributo = vl_tributo_ww where nr_sequencia = nr_sequencia_w;
		CALL atualiza_total_nota_fiscal(nr_sequencia_w,nm_usuario_p);

	end if;

	CALL atualizar_nota_fiscal(nr_sequencia_w, 'I', nm_usuario_p, ie_tipo_nota_ww);

	update	serie_nota_fiscal --- HSJ 2018 -- Adicionado para que seja atualizado o n?mero da nota fiscal autom?ticamente.
	set	nr_ultima_nf = nr_nota_fiscal_w
	where	cd_serie_nf = cd_serie_nf_p
	and	cd_estabelecimento = cd_estabelecimento_p;

end;
end loop;
close c01;

elsif (coalesce(nr_seq_protocolo_p,0) > 0) then

open c02;
loop
fetch c02 into
    nr_interno_conta_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
begin
	open c03;
	loop
	fetch c03 into
		nr_adiantamento_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
	begin
	
	select 	max(nr_atendimento),
		max(cd_pessoa_fisica),
		max(cd_cgc),
		max(cd_moeda),
		max(ds_observacao)
	into STRICT  	nr_atendimento_w,
		cd_pessoa_fisica_w,
		cd_cgc_w,
		cd_moeda_w,
		ds_observacao_w
	from  	adiantamento
	where  	nr_adiantamento = nr_adiantamento_w;
	
	select 	coalesce(max(cd_pessoa_fisica), cd_pessoa_fisica_w),
		coalesce(max(cd_cgc), cd_cgc_w)
	into STRICT  	cd_pessoa_fisica_w,
		cd_cgc_w
	from  	nota_fiscal
	where  	nr_sequencia = nr_sequencia_p;
	
	/*OS 2508367 - Ajuste, estava gerando NF da nota de credito com PF e PJ*/

	if (coalesce(cd_pessoa_fisica_p,'X') <> 'X') then --Se vier PF do parametro IN, indica que o cliente informou uma PF especifica na geracao, entao considerar essa PF informada
		cd_pf_nf_w := cd_pessoa_fisica_p;
		cd_pj_nf_w := null;
	elsif (coalesce(cd_cgc_p,'X') <> 'X') then --Se vier PJ do parametro IN, indica que o cliente informou uma PJ especifica na geracao, entao considerar essa PJ informada
		cd_pf_nf_w := null;
		cd_pj_nf_w := cd_cgc_p;
	elsif (coalesce(cd_pessoa_fisica_p,'X') = 'X') and (coalesce(cd_cgc_p,'X') = 'X') then --Se o cliente nao informou PF nem PJ na tela de geracao, considerar PF/PJ da nota da conta/adto,
		if (coalesce(cd_cgc_w,'X') <> 'X') then --Se tiver PJ na nota conta/adto, usar essa PJ
			cd_pj_nf_w := cd_cgc_w;
			cd_pf_nf_w := null;
		elsif (coalesce(cd_pessoa_fisica_w,'X') <> 'X') then --Se tiver PF na nota da conta/adto, usar essa PF.
			cd_pj_nf_w := null;
			cd_pf_nf_w := cd_pessoa_fisica_w;
		end if;
	end if;
	/*2508367 - Fim*/

	
	select 	sum(b.vl_adiantamento)
	into STRICT	vl_adiantamento_w
	from	adiantamento a,
		conta_paciente_adiant b,
		conta_paciente c
	where	b.nr_adiantamento	= a.nr_adiantamento
	and	c.nr_interno_conta	= b.nr_interno_conta
	and	c.nr_seq_protocolo	= nr_seq_protocolo_p
	and	a.cd_moeda		= cd_moeda_w;
	
	select 	nextval('nf_credito_seq')
	into STRICT  	nf_credito_seq_w
	;

	select	nextval('nota_fiscal_seq')
	into STRICT	nr_sequencia_w
	;

	select	nr_ultima_nf + 1
	into STRICT	nr_nota_fiscal_w
	from	serie_nota_fiscal
	where	cd_serie_nf 			= cd_serie_nf_p
	and	cd_estabelecimento 		= cd_estabelecimento_p;

	select 	coalesce(max(nr_sequencia_nf),0)+1
	into STRICT	nr_sequencia_nf_w
	from 	nota_fiscal
	where	nr_nota_fiscal 		= nr_nota_fiscal_w
	and	cd_estabelecimento 	= cd_estabelecimento_p
	and	cd_serie_nf 		= cd_serie_nf_p
	and	cd_cgc_emitente		= coalesce(cd_cgc_p,cd_cgc_w);

	insert 	into nf_credito(
		nr_sequencia,
		cd_estabelecimento,
		cd_operacao_nf,
		cd_serie_nf,
		dt_atualizacao,
		dt_atualizacao_nrec,
		dt_liberacao,
		ie_acao,
		ie_aplicacao_itens,
		ie_forma_aplicacao,
		ie_situacao,
		ie_tipo_relacao,
		ie_uso_cfdi,
		nm_usuario,
		nm_usuario_lib,
		nm_usuario_nrec,
		nr_nota_credito,
		nr_seq_nf_gerada,
		nr_seq_nf_orig)
	values (nf_credito_seq_w,
		cd_estabelecimento_p,
		cd_operacao_nf_p,
		cd_serie_nf_p,
		clock_timestamp(),
		clock_timestamp(),
		clock_timestamp(),
		'D',
		'T',
		'P',
		'1',
		'07',
		ie_uso_cfdi_p,
		nm_usuario_p,
		nm_usuario_p,
		nm_usuario_p,
		nr_nota_fiscal_w,
		nr_sequencia_w,
		nr_sequencia_p);

	select 	nextval('nf_credito_item_seq')
	into STRICT	nf_credito_item_seq_w
	;

	vl_valor_adiant_ajust_w := (vl_adiantamento_w / ((vl_taxa_w / 100) + 1));

	vl_valor_adiant_ajust_w := (trunc(vl_valor_adiant_ajust_w,4) + 0.0001);

	insert into nf_credito_item(
		cd_material,
		cd_procedimento,
		dt_atualizacao,
		dt_atualizacao_nrec,
		ie_origem_proced,
		nm_usuario,
		nm_usuario_nrec,
		nr_item_nf,
		nr_item_nf_orig,
		nr_seq_nf_credito,
		nr_seq_nf_orig,
		nr_sequencia,
		pr_aplicacao,
		qt_item_nf,
		vl_aplicacao,
		vl_imposto,
		vl_imposto_orig,
		vl_itens_imposto,
		vl_itens_imposto_orig,
		vl_itens_sem_imposto,
		vl_itens_sem_imposto_orig)
	values ( null,
		'301',
		clock_timestamp(),
		clock_timestamp(),
		null,
		nm_usuario_p,
		nm_usuario_p,
		1,
		1,
		nf_credito_seq_w,
		nr_sequencia_p,
		nf_credito_item_seq_w,
		0,
		1,
		0,
		0,
		0,
		vl_valor_adiant_ajust_w,
		vl_valor_adiant_ajust_w,
		0,
		0);

	if (cd_pf_nf_w IS NOT NULL AND cd_pf_nf_w::text <> '') then
	  ie_tipo_nota_w := 'SF';
	  ie_tipo_nota_ww := '2';
	else
	  ie_tipo_nota_w := 'SE';
	  ie_tipo_nota_ww := '0';
	end if;

	insert into nota_fiscal(
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_nota_fiscal,
		nr_sequencia_nf,
		cd_operacao_nf,
		dt_emissao,
		dt_entrada_saida,
		ie_acao_nf,
		ie_emissao_nf,
		ie_tipo_frete,
		vl_mercadoria,
		vl_total_nota,
		qt_peso_bruto,
		qt_peso_liquido,
		dt_atualizacao,
		nm_usuario,
		cd_condicao_pagamento,
		dt_contabil,
		cd_cgc,
		cd_pessoa_fisica,
		vl_ipi,
		vl_descontos,
		vl_frete,
		vl_seguro,
		vl_despesa_acessoria,
		vl_despesa_doc,
		ds_observacao,
		nr_nota_referencia,
		cd_serie_referencia,
		cd_natureza_operacao,
		dt_atualizacao_estoque,
		vl_desconto_rateio,
		ie_situacao,
		nr_ordem_compra,
		nr_lote_contabil,
		nr_sequencia,
		cd_moeda,
		vl_conv_moeda,
		ie_entregue_bloqueto,
		ie_tipo_nota,
		cd_setor_digitacao,
		nr_danfe,
		nr_seq_adiantamento,
		nr_sequencia_ref)
	values (	cd_estabelecimento_p,
		cd_cgc_emitente_w,
		cd_serie_nf_p,
		nr_nota_fiscal_w,
		nr_sequencia_nf_w,
		cd_operacao_nf_p,
		trunc(clock_timestamp()),
		clock_timestamp(),
		'1',
		'0',
		'0',
		0,
		0,
		0,
		0,
		clock_timestamp(),
		nm_usuario_p,
		cd_condicao_pagamento_p,
		null,
		cd_pj_nf_w,
		cd_pf_nf_w,
		0,
		0,
		null,
		0,
		0,
		0,
		coalesce(ds_observacao_p,ds_observacao_w),
		null,
		null,
		cd_natureza_operacao_w,
		null,
		0,
		'1',
		null,
		0,
		nr_sequencia_w,
		cd_moeda_w,
		null,
		'N',
		ie_tipo_nota_w,
		null,
		null,
		nr_adiantamento_w,
		nr_sequencia_p);

	insert	into nota_fiscal_item(
		cd_estabelecimento,
		cd_procedimento,
		cd_natureza_operacao,
		cd_serie_nf,
		dt_atualizacao,
		nm_usuario,
		nr_atendimento,
		nr_item_nf,
		nr_nota_fiscal,
		nr_sequencia,
		nr_sequencia_nf,
		qt_item_nf,
		qt_peso_bruto,
		qt_peso_liquido,
		vl_desconto,
		vl_desconto_rateio,
		vl_despesa_acessoria,
		vl_frete,
		vl_liquido,
		vl_seguro,
		vl_total_item_nf,
		vl_unitario_item_nf,
		cd_centro_custo,
		cd_conta_contabil,
		cd_local_estoque)
	values (	cd_estabelecimento_p,
		'301',
		cd_natureza_operacao_w,
		cd_serie_nf_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_atendimento_w,
		1,
		nr_nota_fiscal_w,
		nr_sequencia_w,
		nr_sequencia_nf_w,
		1,
		0,
		0,
		0,
		0,
		0,
		0,
		coalesce(vl_valor_adiant_ajust_w,0),
		0,
		coalesce(vl_valor_adiant_ajust_w,0),
		coalesce(vl_valor_adiant_ajust_w,0),
		cd_centro_custo_p,
		cd_conta_contabil_p,
		cd_local_estoque_p);


	insert into fis_tipo_relacao(nr_sequencia,
		nr_seq_nota,
		dt_atualizacao,
		nm_usuario,
		cd_tipo_relacao,
		cd_estabelecimento)
	values (	nextval('fis_tipo_relacao_seq'),
		nr_sequencia_w,
		clock_timestamp(),
		nm_usuario_p,
		'07',
		cd_estabelecimento_p);

		
	if (coalesce(ie_uso_cfdi_w::text, '') = '') then
		select 	coalesce(nr_sequencia_ref,0)
		into STRICT	nr_sequencia_ref_w
		from 	nota_fiscal
		where 	nr_sequencia = nr_sequencia_w;
		
		if (nr_sequencia_ref_w <> 0) then
			select  coalesce(cd_uso_cfdi,'X')
			into STRICT	ie_uso_cfdi_w
			from 	fis_uso_cfdi
			where 	nr_seq_nota  = nr_sequencia_ref_w;
		end if;
	end if;
			
	if (ie_uso_cfdi_w IS NOT NULL AND ie_uso_cfdi_w::text <> '') then

		insert	into fis_uso_cfdi(nr_sequencia,
				nr_seq_nota,
				dt_atualizacao,
				nm_usuario,
				cd_uso_cfdi,
				cd_estabelecimento)
		values (	nextval('fis_uso_cfdi_seq'),
				nr_sequencia_w,
				clock_timestamp(),
				nm_usuario_p,
				ie_uso_cfdi_w,
				cd_estabelecimento_p);


	end if;

	CALL Gerar_Imposto_Nf_Item(nr_sequencia_w, 1, nm_usuario_p, 0, 0, 'N');

	select 	sum(vl_tributo)
	into STRICT 	vl_tributo_ww
	from 	nota_fiscal_item_trib
	where  nr_sequencia = nr_sequencia_w;

	vl_ajustado_iva_w := (vl_valor_adiant_ajust_w + vl_tributo_ww);

	vl_diferencia_w := (vl_adiantamento_w - vl_ajustado_iva_w);

	if (vl_diferencia_w >= -0.02) and (vl_diferencia_w <= 0.02) then

		vl_tributo_ww := vl_tributo_ww + vl_diferencia_w;

		update nota_fiscal_item_trib set vl_tributo = vl_tributo_ww where nr_sequencia = nr_sequencia_w;
		CALL atualiza_total_nota_fiscal(nr_sequencia_w,nm_usuario_p);

	end if;

	CALL atualizar_nota_fiscal(nr_sequencia_w, 'I', nm_usuario_p, ie_tipo_nota_ww);

	update	serie_nota_fiscal --- HSJ 2018 -- Adicionado para que seja atualizado o n?mero da nota fiscal autom?ticamente.
	set	nr_ultima_nf = nr_nota_fiscal_w
	where	cd_serie_nf = cd_serie_nf_p
	and	cd_estabelecimento = cd_estabelecimento_p;		
	
	end;
	end loop;
	close c03;
	
end;
end loop;
close c02;

elsif (coalesce(nr_sequencia_p,0) > 0) then
	
	open	c04;
	loop
	fetch 	c04 into
		nr_adiantamento_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
	begin	
		
		/*Obter valores para os inserts*/

		select	max(cd_pessoa_fisica),
			max(cd_cgc),
			max(cd_moeda),
			max(ds_observacao),
			max(nr_atendimento)
		into STRICT  	cd_pessoa_fisica_w,
			cd_cgc_w,
			cd_moeda_w,
			ds_observacao_w,
			nr_atendimento_w
		from  	adiantamento
		where  	nr_adiantamento = nr_adiantamento_w;

		select 	coalesce(max(cd_pessoa_fisica), cd_pessoa_fisica_w),
			coalesce(max(cd_cgc), cd_cgc_w)
		into STRICT  	cd_pessoa_fisica_w,
			cd_cgc_w		
		from  	nota_fiscal
		where  	nr_sequencia = nr_sequencia_p;
		
		/*OS 2508367 - Ajuste, estava gerando NF da nota de credito com PF e PJ*/

		if (coalesce(cd_pessoa_fisica_p,'X') <> 'X') then --Se vier PF do parametro IN, indica que o cliente informou uma PF especifica na geracao, entao considerar essa PF informada
			cd_pf_nf_w := cd_pessoa_fisica_p;
			cd_pj_nf_w := null;
		elsif (coalesce(cd_cgc_p,'X') <> 'X') then --Se vier PJ do parametro IN, indica que o cliente informou uma PJ especifica na geracao, entao considerar essa PJ informada
			cd_pf_nf_w := null;
			cd_pj_nf_w := cd_cgc_p;
		elsif (coalesce(cd_pessoa_fisica_p,'X') = 'X') and (coalesce(cd_cgc_p,'X') = 'X') then --Se o cliente nao informou PF nem PJ na tela de geracao, considerar PF/PJ da nota da conta/adto,
			if (coalesce(cd_cgc_w,'X') <> 'X') then --Se tiver PJ na nota conta/adto, usar essa PJ
				cd_pj_nf_w := cd_cgc_w;
				cd_pf_nf_w := null;
			elsif (coalesce(cd_pessoa_fisica_w,'X') <> 'X') then --Se tiver PF na nota da conta/adto, usar essa PF.
				cd_pj_nf_w := null;
				cd_pf_nf_w := cd_pessoa_fisica_w;
			end if;
		end if;
		/*2508367 - Fim*/

	
		select 	sum(b.vl_adiant_saldo)
		into STRICT 	vl_adiant_saldo_w
		from	adiantamento a,
			nota_fiscal_adiant_receb b
		where	b.nr_seq_adiantamento	= a.nr_adiantamento
		and 	b.nr_seq_nota 		= nr_sequencia_p
		and 	a.nr_adiantamento	= nr_adiantamento_w;
		
		vl_adiant_saldo_w := (vl_adiant_saldo_w / ((vl_taxa_w / 100) + 1));

		vl_adiant_saldo_w := (TRUNC(vl_adiant_saldo_w,4) + 0.0001);
	
		select 	nextval('nf_credito_seq')
		into STRICT  	nf_credito_seq_w
		;

		select	nextval('nota_fiscal_seq')
		into STRICT	nr_sequencia_w
		;
		
		select	nr_ultima_nf + 1
		into STRICT	nr_nota_fiscal_w
		from	serie_nota_fiscal
		where	cd_serie_nf 			= cd_serie_nf_p
		and	cd_estabelecimento 		= cd_estabelecimento_p;
	
		select 	coalesce(max(nr_sequencia_nf),0)+1
		into STRICT	nr_sequencia_nf_w
		from 	nota_fiscal
		where	nr_nota_fiscal 		= nr_nota_fiscal_w
		and	cd_estabelecimento 	= cd_estabelecimento_p
		and	cd_serie_nf 		= cd_serie_nf_p
		and	cd_cgc_emitente		= coalesce(cd_cgc_p,cd_cgc_w);

		/*geracao da nf de credito*/

		insert 	into nf_credito(
			nr_sequencia,
			cd_estabelecimento,
			cd_operacao_nf,
			cd_serie_nf,
			dt_atualizacao,
			dt_atualizacao_nrec,
			dt_liberacao,
			ie_acao,
			ie_aplicacao_itens,
			ie_forma_aplicacao,
			ie_situacao,
			ie_tipo_relacao,
			ie_uso_cfdi,
			nm_usuario,
			nm_usuario_lib,
			nm_usuario_nrec,
			nr_nota_credito,
			nr_seq_nf_gerada,
			nr_seq_nf_orig)
		values (nf_credito_seq_w,
			cd_estabelecimento_p,
			cd_operacao_nf_p,
			cd_serie_nf_p,
			clock_timestamp(),
			clock_timestamp(),
			clock_timestamp(),
			'D',
			'T',
			'P',
			'1',
			'07',
			ie_uso_cfdi_p,
			nm_usuario_p,
			nm_usuario_p,
			nm_usuario_p,
			nr_nota_fiscal_w,
			nr_sequencia_w,
			nr_sequencia_p);

		select 	nextval('nf_credito_item_seq')
		into STRICT  	nf_credito_item_seq_w
		;

		insert into nf_credito_item(
			cd_material,
			cd_procedimento,
			dt_atualizacao,
			dt_atualizacao_nrec,
			ie_origem_proced,
			nm_usuario,
			nm_usuario_nrec,
			nr_item_nf,
			nr_item_nf_orig,
			nr_seq_nf_credito,
			nr_seq_nf_orig,
			nr_sequencia,
			pr_aplicacao,
			qt_item_nf,
			vl_aplicacao,
			vl_imposto,
			vl_imposto_orig,
			vl_itens_imposto,
			vl_itens_imposto_orig,
			vl_itens_sem_imposto,
			vl_itens_sem_imposto_orig,
			vl_imposto_nao_retido,
			vl_imposto_nao_retido_orig)
		values ( null,
			'301',
			clock_timestamp(),
			clock_timestamp(),
			null,
			nm_usuario_p,
			nm_usuario_p,
			1,
			1,
			nf_credito_seq_w,
			nr_sequencia_p,
			nf_credito_item_seq_w,
			0,
			1,
			0,
			0,
			0,
			vl_adiant_saldo_w,
			vl_adiant_saldo_w,
			0,
			0,
			0,
			0);
	
		/*Geracao da Nf que sera vincula no adiantamento */

		
		if (cd_pf_nf_w IS NOT NULL AND cd_pf_nf_w::text <> '') then
			ie_tipo_nota_w := 'SF';
			ie_tipo_nota_ww := '2';
		else
			ie_tipo_nota_w := 'SE';
			ie_tipo_nota_ww := '0';
		end if;

		insert into nota_fiscal(
			cd_estabelecimento,
			cd_cgc_emitente,
			cd_serie_nf,
			nr_nota_fiscal,
			nr_sequencia_nf,
			cd_operacao_nf,
			dt_emissao,
			dt_entrada_saida,
			ie_acao_nf,
			ie_emissao_nf,
			ie_tipo_frete,
			vl_mercadoria,
			vl_total_nota,
			qt_peso_bruto,
			qt_peso_liquido,
			dt_atualizacao,
			nm_usuario,
			cd_condicao_pagamento,
			dt_contabil,
			cd_cgc,
			cd_pessoa_fisica,
			vl_ipi,
			vl_descontos,
			vl_frete,
			vl_seguro,
			vl_despesa_acessoria,
			vl_despesa_doc,
			ds_observacao,
			nr_nota_referencia,
			cd_serie_referencia,
			cd_natureza_operacao,
			dt_atualizacao_estoque,
			vl_desconto_rateio,
			ie_situacao,
			nr_ordem_compra,
			nr_lote_contabil,
			nr_sequencia,
			cd_moeda,
			vl_conv_moeda,
			ie_entregue_bloqueto,
			ie_tipo_nota,
			cd_setor_digitacao,
			nr_danfe,
			nr_seq_adiantamento,
			nr_sequencia_ref)
		values (	cd_estabelecimento_p,
			cd_cgc_emitente_w,
			cd_serie_nf_p,
			nr_nota_fiscal_w,
			nr_sequencia_nf_w,
			cd_operacao_nf_p,
			trunc(clock_timestamp()),
			clock_timestamp(),
			'1',
			'0',
			'0',
			0,
			0,
			0,
			0,
			clock_timestamp(),
			nm_usuario_p,
			cd_condicao_pagamento_p,
			null,
			cd_pj_nf_w,
			cd_pf_nf_w,
			0,
			0,
			null,
			0,
			0,
			0,
			coalesce(ds_observacao_p,ds_observacao_w) || ' ' || wheb_mensagem_pck.get_texto(1100036) || nr_adiantamento_w,
			null,
			null,
			cd_natureza_operacao_w,
			null,
			0,
			'1',
			null,
			0,
			nr_sequencia_w,
			cd_moeda_w,
			null,
			'N',
			ie_tipo_nota_w,
			null,
			null,
			nr_adiantamento_w,
			nr_sequencia_p);

		insert	into nota_fiscal_item(
			cd_estabelecimento,
			cd_procedimento,
			cd_natureza_operacao,
			cd_serie_nf,
			dt_atualizacao,
			nm_usuario,
			nr_atendimento,
			nr_item_nf,
			nr_nota_fiscal,
			nr_sequencia,
			nr_sequencia_nf,
			qt_item_nf,
			qt_peso_bruto,
			qt_peso_liquido,
			vl_desconto,
			vl_desconto_rateio,
			vl_despesa_acessoria,
			vl_frete,
			vl_liquido,
			vl_seguro,
			vl_total_item_nf,
			vl_unitario_item_nf,
			cd_centro_custo,
			cd_conta_contabil,
			cd_local_estoque)
		values (	cd_estabelecimento_p,
			'301',
			cd_natureza_operacao_w,
			cd_serie_nf_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_atendimento_w,
			1,
			nr_nota_fiscal_w,
			nr_sequencia_w,
			nr_sequencia_nf_w,
			1,
			0,
			0,
			0,
			0,
			0,
			0,
			coalesce(vl_adiant_saldo_w,0),
			0,
			coalesce(vl_adiant_saldo_w,0),
			coalesce(vl_adiant_saldo_w,0),
			cd_centro_custo_p,
			cd_conta_contabil_p,
			cd_local_estoque_p);
		
		insert into fis_tipo_relacao(nr_sequencia,
			nr_seq_nota,
			dt_atualizacao,
			nm_usuario,
			cd_tipo_relacao,
			cd_estabelecimento)
		values (	nextval('fis_tipo_relacao_seq'),
			nr_sequencia_w,
			clock_timestamp(),
			nm_usuario_p,
			'07',
			cd_estabelecimento_p);

		if (coalesce(ie_uso_cfdi_w::text, '') = '') then
			select 	coalesce(nr_sequencia_ref,0)
			into STRICT	nr_sequencia_ref_w
			from 	nota_fiscal
			where 	nr_sequencia = nr_sequencia_w;
			
			if (nr_sequencia_ref_w <> 0) then
				select  coalesce(cd_uso_cfdi,'X')
				into STRICT	ie_uso_cfdi_w
				from 	fis_uso_cfdi
				where 	nr_seq_nota  = nr_sequencia_ref_w;
			end if;
		end if;
				
		if (ie_uso_cfdi_w IS NOT NULL AND ie_uso_cfdi_w::text <> '') then

			insert	into fis_uso_cfdi(
				nr_sequencia,
				nr_seq_nota,
				dt_atualizacao,
				nm_usuario,
				cd_uso_cfdi,
				cd_estabelecimento)
			values (	nextval('fis_uso_cfdi_seq'),
				nr_sequencia_w,
				clock_timestamp(),
				nm_usuario_p,
				ie_uso_cfdi_w,
				cd_estabelecimento_p);

		end if;

		CALL Gerar_Imposto_Nf_Item(nr_sequencia_w, 1, nm_usuario_p, 0, 0, 'N');

		select	sum(vl_tributo)
		into STRICT	vl_tributo_ww
		from	nota_fiscal_item_trib
		where	nr_sequencia = 	nr_sequencia_w;

		vl_ajustado_iva_w := (vl_valor_adiant_ajust_w + vl_tributo_ww);

		vl_diferencia_w := (vl_adiant_saldo_w - vl_ajustado_iva_w);

		if (vl_diferencia_w >= -0.02) and (vl_diferencia_w <= 0.02) then

			vl_tributo_ww := vl_tributo_ww + vl_diferencia_w;

			update nota_fiscal_item_trib set vl_tributo = vl_tributo_ww where nr_sequencia = nr_sequencia_w;
			CALL atualiza_total_nota_fiscal(nr_sequencia_w,nm_usuario_p);

		end if;

		CALL atualizar_nota_fiscal(nr_sequencia_w, 'I', nm_usuario_p, ie_tipo_nota_ww);

		update	serie_nota_fiscal
		set	nr_ultima_nf = 		nr_nota_fiscal_w
		where	cd_serie_nf = 		cd_serie_nf_p
		and	cd_estabelecimento =	cd_estabelecimento_p;

	end;
	end loop;
	close c04;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nf_credito_adiant ( nr_interno_conta_p bigint, nr_sequencia_p bigint, cd_estabelecimento_p bigint, cd_serie_nf_p text, cd_operacao_nf_p text, cd_condicao_pagamento_p text, ie_uso_cfdi_p text, cd_centro_custo_p bigint, cd_conta_contabil_p bigint, cd_local_estoque_p bigint, cd_pessoa_fisica_p text, cd_cgc_p text, nm_usuario_p text, ds_observacao_p text, nr_seq_protocolo_p bigint) FROM PUBLIC;

