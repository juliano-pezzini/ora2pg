-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_duplicar_proposta_adesao ( nr_seq_proposta_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) AS $body$
DECLARE


nr_seq_proposta_nova_w		bigint;
nr_seq_proposta_pagador_w	bigint;
nr_seq_proposta_plano_w		bigint;
nr_seq_prop_beneficiario_w	bigint;
nr_seq_prop_benef_novo_w	bigint;
nr_seq_bonificacao_vinculo_w	bigint;
nr_seq_sca_vinculo_w		bigint;
nr_seq_carencia_w		bigint;
nr_seq_regra_inscricao_w	bigint;
nr_seq_indicacao_venda_w	bigint;
nr_seq_proposta_benef_agravo_w	bigint;
nr_seq_prop_canal_w		bigint;
nr_seq_proposta_benef_anexo_w	bigint;
nr_seq_comercial_empresa_w	bigint;
nr_seq_proposta_historico_w	bigint;
nr_seq_proposta_validacao_w	bigint;
nr_seq_validacao_nova_w		bigint;
nr_seq_proposta_check_list_w	bigint;
nr_seq_contrato_documento_w	bigint;
nr_seq_documento_novo_w		bigint;

/* Campos referentes a tabela PLS_CONTRATO_DOC_TEXTO (Cursor 20) */

cd_classificacao_w		varchar(20);
ds_dispositivo_w		varchar(255);
ds_tema_w			text;
ie_converte_macro_w		varchar(1);
ie_imprimir_titulo_w		varchar(1);
ie_quebra_pagina_w		varchar(1);
nr_seq_tipo_tema_w		pls_contrato_doc_texto.nr_seq_tipo_tema%type;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_proposta_pagador
	where	nr_seq_proposta = nr_seq_proposta_p;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_proposta_plano
	where	nr_seq_proposta = nr_seq_proposta_p;

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_proposta_beneficiario
	where	nr_seq_proposta = nr_seq_proposta_p;

C04 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_bonificacao_vinculo
	where	nr_seq_segurado_prop = nr_seq_prop_beneficiario_w;

C05 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_bonificacao_vinculo
	where	nr_seq_proposta = nr_seq_proposta_p;

C06 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_sca_vinculo
	where	nr_seq_benef_proposta = nr_seq_prop_beneficiario_w;

C07 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_carencia
	where	nr_seq_pessoa_proposta = nr_seq_prop_beneficiario_w;

C08 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_carencia
	where	nr_seq_proposta = nr_seq_proposta_p;

C09 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_inscricao
	where	nr_seq_proposta = nr_seq_proposta_p;

C10 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_indicacao_venda
	where	nr_seq_segurado_prop = nr_seq_prop_beneficiario_w;

C11 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_indicacao_venda
	where	nr_seq_proposta = nr_seq_proposta_p;

C12 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_proposta_benef_agravo
	where	nr_seq_proposta_benef = nr_seq_prop_beneficiario_w;

C13 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_benef_prop_canal_compl
	where	nr_seq_benef_proposta = nr_seq_prop_beneficiario_w;

C14 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_proposta_benef_anexo
	where	nr_seq_beneficiario = nr_seq_prop_beneficiario_w;

C15 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_comercial_empresa
	where	nr_seq_benef_proposta = nr_seq_prop_beneficiario_w;

C16 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_proposta_historico
	where	nr_seq_proposta = nr_seq_proposta_p;

C17 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_proposta_validacao
	where	nr_seq_proposta = nr_seq_proposta_p;

C18 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_proposta_check_list
	where	nr_seq_validacao = nr_seq_proposta_validacao_w;

C19 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_contrato_documento
	where	nr_seq_proposta = nr_seq_proposta_p;

C20 CURSOR FOR
	SELECT	cd_classificacao,
		ds_dispositivo,
		ds_tema,
		ie_converte_macro,
		ie_imprimir_titulo,
		ie_quebra_pagina,
		nr_seq_tipo_tema
	from	pls_contrato_doc_texto
	where	nr_seq_documento = nr_seq_contrato_documento_w;

C21 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_comercial_empresa
	where	nr_seq_proposta = nr_seq_proposta_p;

C22 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_benef_prop_canal_compl
	where	nr_seq_proposta = nr_seq_proposta_p
	and	coalesce(nr_seq_benef_proposta::text, '') = '';


BEGIN

select	nextval('pls_proposta_adesao_seq')
into STRICT	nr_seq_proposta_nova_w
;

insert into pls_proposta_adesao(  nr_sequencia, ie_tipo_contratacao, ie_tipo_beneficiario, nr_seq_contrato, cd_cgc_estipulante,
			cd_estipulante, ie_estipulante_pagador, dt_inicio_proposta, ie_tipo_processo,
			dt_contratacao, nr_seq_vendedor_canal, nr_seq_vendedor_pf, vl_proposta, ie_tipo_proposta,
			cd_motivo_reprovacao, nr_seq_cliente, nr_seq_contrato_mig, nr_seq_congenere, dt_limite_utilizacao,
			dt_reprovacao, nr_seq_proposta_ant, ie_estagio_proposta, ie_permite_tabela_dif, ie_presente_sede,
			nr_seq_simul_preco, pr_contribuicao, ie_inconsistencia, ie_rescindir_dependente, cd_estabelecimento,
			dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ie_status )
	      ( SELECT  nr_seq_proposta_nova_w, ie_tipo_contratacao, ie_tipo_beneficiario, nr_seq_contrato, cd_cgc_estipulante,
			cd_estipulante, ie_estipulante_pagador, dt_inicio_proposta, ie_tipo_processo,
			dt_contratacao, nr_seq_vendedor_canal, nr_seq_vendedor_pf, vl_proposta, ie_tipo_proposta,
			cd_motivo_reprovacao, nr_seq_cliente, nr_seq_contrato_mig, nr_seq_congenere, dt_limite_utilizacao,
			dt_reprovacao, nr_seq_proposta_ant, ie_estagio_proposta, ie_permite_tabela_dif, ie_presente_sede,
			nr_seq_simul_preco, pr_contribuicao, ie_inconsistencia, ie_rescindir_dependente, cd_estabelecimento,
			clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, 'U'
		from	pls_proposta_adesao
		where	nr_sequencia = nr_seq_proposta_p);
	
open C01;
loop
fetch C01 into
	nr_seq_proposta_pagador_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	
	insert into pls_proposta_pagador( nr_sequencia, nr_seq_proposta, cd_cgc_pagador, cd_pagador, cd_condicao_pagamento,
				ie_endereco_boleto, dt_dia_vencimento, nr_seq_forma_cobranca, cd_banco, cd_agencia_bancaria,
				ie_digito_agencia, cd_conta, ie_digito_conta, nr_seq_contrato_pagador, ie_envia_cobranca,
				nr_seq_pagador_ant, cd_tipo_portador, cd_portador, nr_seq_conta_banco, nr_seq_empresa,
				cd_profissao, nr_seq_vinculo_empresa, cd_matricula, dt_inicio_vigencia, dt_fim_vigencia,
				ie_mes_vencimento, nr_seq_compl_pf_tel_adic, nr_seq_dia_vencimento, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_tipo_compl_adic)
		      (	SELECT	nextval('pls_proposta_pagador_seq'), nr_seq_proposta_nova_w, cd_cgc_pagador, cd_pagador, cd_condicao_pagamento,
				ie_endereco_boleto, dt_dia_vencimento, nr_seq_forma_cobranca, cd_banco, cd_agencia_bancaria,
				ie_digito_agencia, cd_conta, ie_digito_conta, nr_seq_contrato_pagador, ie_envia_cobranca,
				nr_seq_pagador_ant, cd_tipo_portador, cd_portador, nr_seq_conta_banco, nr_seq_empresa,
				cd_profissao, nr_seq_vinculo_empresa, cd_matricula, dt_inicio_vigencia, dt_fim_vigencia,
				ie_mes_vencimento, nr_seq_compl_pf_tel_adic, nr_seq_dia_vencimento, clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p , nr_seq_tipo_compl_adic
			from	pls_proposta_pagador
			where	nr_sequencia = nr_seq_proposta_pagador_w );
	
end loop;
close C01;

open C02;
loop
fetch C02 into
	nr_seq_proposta_plano_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	
	insert into pls_proposta_plano(	nr_sequencia, nr_seq_proposta, nr_seq_plano, nr_seq_tabela, nr_seq_contrato_plano,
				ie_principal, nr_seq_contrato, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
				nm_usuario_nrec )
		      (	SELECT	nextval('pls_proposta_plano_seq'), nr_seq_proposta_nova_w, nr_seq_plano, nr_seq_tabela, nr_seq_contrato_plano,
				ie_principal, nr_seq_contrato, clock_timestamp(), nm_usuario_p, clock_timestamp(),
				nm_usuario_p
			from	pls_proposta_plano
			where	nr_sequencia = nr_seq_proposta_plano_w );
	
end loop;
close C02;

open C03;
loop
fetch C03 into
	nr_seq_prop_beneficiario_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	
	select	nextval('pls_proposta_beneficiario_seq')
	into STRICT	nr_seq_prop_benef_novo_w
	;
	
	insert into pls_proposta_beneficiario(	nr_sequencia, nr_seq_proposta, cd_beneficiario, nr_seq_pagador,
				nr_seq_plano, nr_seq_titular, nr_seq_parentesco, nr_seq_tabela, vl_mensalidade,
				nr_seq_regra_desconto, tx_desconto, nr_seq_titular_contrato, ie_nascido_plano, nr_seq_portabilidade,
				dt_admissao, cd_cbo, cd_matricula_est, nr_seq_vinculo_estip, nr_seq_subestipulante,
				nr_seq_beneficiario, nr_seq_inclusao_benef, nr_seq_benef_gerado, nr_seq_motivo_cancelamento,
				dt_cancelamento, vl_bonificacao, dt_contratacao, vl_sca, nr_seq_motivo_inclusao,
				ie_taxa_inscricao, nr_seq_benef_ant, nr_seq_simul_individ, cd_matricula_familia, nr_seq_tipo_comercial,
				dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ie_copiar_sca_plano, ie_tipo_parentesco,
				vl_inscricao, vl_via_carteira)
		      ( SELECT	nr_seq_prop_benef_novo_w, nr_seq_proposta_nova_w, cd_beneficiario, nr_seq_pagador,
				nr_seq_plano, nr_seq_titular, nr_seq_parentesco, nr_seq_tabela, vl_mensalidade,
				nr_seq_regra_desconto, tx_desconto, nr_seq_titular_contrato, ie_nascido_plano, nr_seq_portabilidade,
				dt_admissao, cd_cbo, cd_matricula_est, nr_seq_vinculo_estip, nr_seq_subestipulante,
				nr_seq_beneficiario, nr_seq_inclusao_benef, nr_seq_benef_gerado, nr_seq_motivo_cancelamento,
				dt_cancelamento, vl_bonificacao, dt_contratacao, vl_sca, nr_seq_motivo_inclusao,
				ie_taxa_inscricao, nr_seq_benef_ant, nr_seq_simul_individ, cd_matricula_familia, nr_seq_tipo_comercial,
				clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, ie_copiar_sca_plano, ie_tipo_parentesco,
				vl_inscricao, vl_via_carteira
			from	pls_proposta_beneficiario
			where	nr_sequencia = nr_seq_prop_beneficiario_w );
		
	open C04;
	loop
	fetch C04 into
		nr_seq_bonificacao_vinculo_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		
		insert into pls_bonificacao_vinculo( nr_sequencia, nr_seq_segurado_prop, nr_seq_bonificacao,
					nr_seq_pagador, nr_seq_contrato, nr_seq_segurado, tx_bonificacao, vl_bonificacao,
					nr_seq_sca, dt_inicio_vigencia, dt_fim_vigencia, nr_seq_cliente, nr_seq_plano,
					nr_seq_simulacao, ie_base_maior_valor, cd_sistema_anterior, nr_seq_segurado_simul,
					nr_seq_grupo_contrato, nr_seq_intercambio, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec )
			      ( SELECT	nextval('pls_bonificacao_vinculo_seq'), nr_seq_prop_benef_novo_w, nr_seq_bonificacao,
					nr_seq_pagador, nr_seq_contrato, nr_seq_segurado, tx_bonificacao, vl_bonificacao,
					nr_seq_sca, dt_inicio_vigencia, dt_fim_vigencia, nr_seq_cliente, nr_seq_plano,
					nr_seq_simulacao, ie_base_maior_valor, cd_sistema_anterior, nr_seq_segurado_simul,
					nr_seq_grupo_contrato, nr_seq_intercambio, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p
				from	pls_bonificacao_vinculo
				where	nr_sequencia = nr_seq_bonificacao_vinculo_w );
		
	end loop;
	close C04;
	
	open C06;
	loop
	fetch C06 into
		nr_seq_sca_vinculo_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		
		insert into pls_sca_vinculo(	nr_sequencia, nr_seq_benef_proposta, nr_seq_contrato, nr_seq_segurado,
					nr_seq_tabela, nr_seq_tabela_origem, ie_grau_dependencia, ie_dependente, dt_inicio_vigencia,
					dt_fim_vigencia, qt_idade_limite, nr_seq_plano, ds_observacao, ie_embutido_produto,
					dt_liberacao, nr_seq_plano_origem, nr_seq_simulacao, nr_parcela_inicial, nr_parcela_final,
					nr_seq_vendedor_canal, nr_seq_vendedor_pf, dt_reajuste, ie_geracao_valores, nr_seq_segurado_simul,
					nr_seq_pagador, ds_consistencia, ie_lancamento_mensalidade, dt_reativacao, dt_inclusao_benef,
					dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec )
			      ( SELECT	nextval('pls_sca_vinculo_seq'), nr_seq_prop_benef_novo_w, nr_seq_contrato, nr_seq_segurado,
					nr_seq_tabela, nr_seq_tabela_origem, ie_grau_dependencia, ie_dependente, dt_inicio_vigencia,
					dt_fim_vigencia, qt_idade_limite, nr_seq_plano, ds_observacao, ie_embutido_produto,
					dt_liberacao, nr_seq_plano_origem, nr_seq_simulacao, nr_parcela_inicial, nr_parcela_final,
					nr_seq_vendedor_canal, nr_seq_vendedor_pf, dt_reajuste, ie_geracao_valores, nr_seq_segurado_simul,
					nr_seq_pagador, ds_consistencia, ie_lancamento_mensalidade, dt_reativacao, dt_inclusao_benef,
					clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p
				from	pls_sca_vinculo
				where	nr_sequencia = nr_seq_sca_vinculo_w );
		
	end loop;
	close C06;
	
	open C07;
	loop
	fetch C07 into
		nr_seq_carencia_w;
	EXIT WHEN NOT FOUND; /* apply on C07 */
		
		insert into pls_carencia(	nr_sequencia, nr_seq_pessoa_proposta, nr_seq_plano, nr_seq_contrato,
					nr_seq_tipo_carencia, nr_seq_segurado, qt_dias, dt_inicio_vigencia, ds_observacao,
					nr_seq_regra_aut, nr_seq_sca, ie_mes_posterior, ie_carencia_anterior, nr_seq_analise_preexist,
					dt_fim_vigencia, cd_sistema_anterior, ie_isencao_carencia, nr_seq_regra_isencao,
					nr_seq_grupo_carencia, ie_cpt, ie_origem_carencia_benef, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec )
			      ( SELECT	nextval('pls_carencia_seq'), nr_seq_prop_benef_novo_w, nr_seq_plano, nr_seq_contrato,
					nr_seq_tipo_carencia, nr_seq_segurado, qt_dias, dt_inicio_vigencia, ds_observacao,
					nr_seq_regra_aut, nr_seq_sca, ie_mes_posterior, ie_carencia_anterior, nr_seq_analise_preexist,
					dt_fim_vigencia, cd_sistema_anterior, ie_isencao_carencia, nr_seq_regra_isencao,
					nr_seq_grupo_carencia, ie_cpt, ie_origem_carencia_benef, clock_timestamp(), nm_usuario_p,
					clock_timestamp(), nm_usuario_p
				from	pls_carencia
				where	nr_sequencia = nr_seq_carencia_w );
		
	end loop;
	close C07;
	
	open C10;
	loop
	fetch C10 into
		nr_seq_indicacao_venda_w;
	EXIT WHEN NOT FOUND; /* apply on C10 */
		
		insert into pls_indicacao_venda(	nr_sequencia, nr_seq_segurado_prop, nr_seq_segurado, cd_pessoa_fisica,
					nr_seq_bonificacao, nr_seq_lancamento, nr_seq_lote_comissao, qt_meses_bonificacao,
					qt_parcela_paga, cd_estabelecimento, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec )
			      ( SELECT	nextval('pls_indicacao_venda_seq'), nr_seq_prop_benef_novo_w, nr_seq_segurado, cd_pessoa_fisica,
					nr_seq_bonificacao, nr_seq_lancamento, nr_seq_lote_comissao, qt_meses_bonificacao,
					qt_parcela_paga, cd_estabelecimento_p, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p
				from	pls_indicacao_venda
				where	nr_sequencia = nr_seq_indicacao_venda_w );
		
	end loop;
	close C10;
	
	open C12;
	loop
	fetch C12 into
		nr_seq_proposta_benef_agravo_w;
	EXIT WHEN NOT FOUND; /* apply on C12 */
		
		insert into pls_proposta_benef_agravo(	nr_sequencia, nr_seq_proposta_benef, nr_seq_agravo, ie_tipo_agravo,
					vl_agravo, tx_agravo, qt_parcelas_agravo, nr_seq_analise_agravo,
					cd_estabelecimento, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec )
			      ( SELECT	nextval('pls_proposta_benef_agravo_seq'), nr_seq_prop_benef_novo_w, nr_seq_agravo, ie_tipo_agravo,
					vl_agravo, tx_agravo, qt_parcelas_agravo, nr_seq_analise_agravo,
					cd_estabelecimento_p, dt_atualizacao, nm_usuario_p, dt_atualizacao_nrec, nm_usuario_p
				from	pls_proposta_benef_agravo
				where	nr_sequencia = nr_seq_proposta_benef_agravo_w );
		
	end loop;
	close C12;
	
	insert into pls_proposta_benef_hist(	nr_sequencia, nr_seq_benef_proposta, dt_historico, ds_historico,
				ie_tipo_historico, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec )
			values ( nextval('pls_proposta_benef_hist_seq'), nr_seq_prop_benef_novo_w, clock_timestamp(), 'Proposta de adesão origem: ' || nr_seq_proposta_p,
				14, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p );
	
	open C13;
	loop
	fetch C13 into
		nr_seq_prop_canal_w;
	EXIT WHEN NOT FOUND; /* apply on C13 */
		
		insert into pls_benef_prop_canal_compl(	nr_sequencia, nr_seq_proposta, nr_seq_benef_proposta, nr_seq_vendedor_canal,
					nr_seq_vendedor_vinculado, cd_estabelecimento, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec )
			      ( SELECT	nextval('pls_benef_prop_canal_compl_seq'), nr_seq_proposta_nova_w, nr_seq_prop_benef_novo_w,
					nr_seq_vendedor_canal, nr_seq_vendedor_vinculado, cd_estabelecimento_p, clock_timestamp(), nm_usuario_p,
					clock_timestamp(), nm_usuario_p
				from	pls_benef_prop_canal_compl
				where	nr_sequencia = nr_seq_prop_canal_w );
		
	end loop;
	close C13;
	
	open C14;
	loop
	fetch C14 into
		nr_seq_proposta_benef_anexo_w;
	EXIT WHEN NOT FOUND; /* apply on C14 */
		
		insert into pls_proposta_benef_anexo(	nr_sequencia, nr_seq_beneficiario, dt_anexo, ds_anexo,
					dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec )
			      (	SELECT	nextval('pls_proposta_benef_anexo_seq'), nr_seq_prop_benef_novo_w, dt_anexo, ds_anexo,
					dt_atualizacao, nm_usuario_p, dt_atualizacao_nrec, nm_usuario_p
				from	pls_proposta_benef_anexo
				where	nr_sequencia = nr_seq_proposta_benef_anexo_w );
		
	end loop;
	close C14;
	
	open C15;
	loop
	fetch C15 into
		nr_seq_comercial_empresa_w;
	EXIT WHEN NOT FOUND; /* apply on C15 */
		
		insert into pls_comercial_empresa(	nr_sequencia, nr_seq_benef_proposta, nr_seq_solicitacao, nr_seq_cliente,
					nr_seq_empresa_serv, ds_observacao, cd_empresa_ref, nr_contrato,
					dt_inicio_vigencia, dt_fim_vigencia, nr_seq_segurado, ds_tipo_plano,
					dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec )
			      ( SELECT	nextval('pls_comercial_empresa_seq'), nr_seq_prop_benef_novo_w, nr_seq_solicitacao, nr_seq_cliente,
					nr_seq_empresa_serv, ds_observacao, cd_empresa_ref, nr_contrato,
					dt_inicio_vigencia, dt_fim_vigencia, nr_seq_segurado, ds_tipo_plano,
					clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p
				from	pls_comercial_empresa
				where	nr_sequencia = nr_seq_comercial_empresa_w );
		
	end loop;
	close C15;
end loop;
close C03;

open C05;
loop
fetch C05 into
	nr_seq_bonificacao_vinculo_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	
	insert into pls_bonificacao_vinculo( nr_sequencia, nr_seq_proposta, nr_seq_bonificacao,
				nr_seq_pagador, nr_seq_contrato, nr_seq_segurado, tx_bonificacao, vl_bonificacao,
				nr_seq_sca, dt_inicio_vigencia, dt_fim_vigencia, nr_seq_cliente, nr_seq_plano,
				nr_seq_simulacao, ie_base_maior_valor, cd_sistema_anterior, nr_seq_segurado_simul,
				nr_seq_grupo_contrato, nr_seq_intercambio, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec )
		      ( SELECT	nextval('pls_bonificacao_vinculo_seq'), nr_seq_proposta_nova_w, nr_seq_bonificacao,
				nr_seq_pagador, nr_seq_contrato, nr_seq_segurado, tx_bonificacao, vl_bonificacao,
				nr_seq_sca, dt_inicio_vigencia, dt_fim_vigencia, nr_seq_cliente, nr_seq_plano,
				nr_seq_simulacao, ie_base_maior_valor, cd_sistema_anterior, nr_seq_segurado_simul,
				nr_seq_grupo_contrato, nr_seq_intercambio, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p
			from	pls_bonificacao_vinculo
			where	nr_sequencia = nr_seq_bonificacao_vinculo_w );
	
end loop;
close C05;

open C08;
loop
fetch C08 into
	nr_seq_carencia_w;
EXIT WHEN NOT FOUND; /* apply on C08 */
	
	insert into pls_carencia(	nr_sequencia, nr_seq_proposta, nr_seq_plano, nr_seq_contrato,
				nr_seq_tipo_carencia, nr_seq_segurado, qt_dias, dt_inicio_vigencia, ds_observacao,
				nr_seq_regra_aut, nr_seq_sca, ie_mes_posterior, ie_carencia_anterior, nr_seq_analise_preexist,
				dt_fim_vigencia, cd_sistema_anterior, ie_isencao_carencia, nr_seq_regra_isencao,
				nr_seq_grupo_carencia, ie_cpt, ie_origem_carencia_benef, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec )
		      ( SELECT	nextval('pls_carencia_seq'), nr_seq_proposta_nova_w, nr_seq_plano, nr_seq_contrato,
				nr_seq_tipo_carencia, nr_seq_segurado, qt_dias, dt_inicio_vigencia, ds_observacao,
				nr_seq_regra_aut, nr_seq_sca, ie_mes_posterior, ie_carencia_anterior, nr_seq_analise_preexist,
				dt_fim_vigencia, cd_sistema_anterior, ie_isencao_carencia, nr_seq_regra_isencao,
				nr_seq_grupo_carencia, ie_cpt, ie_origem_carencia_benef, clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p
			from	pls_carencia
			where	nr_sequencia = nr_seq_carencia_w );
	
end loop;
close C08;

open C09;
loop
fetch C09 into
	nr_seq_regra_inscricao_w;
EXIT WHEN NOT FOUND; /* apply on C09 */
	
	insert into pls_regra_inscricao(	nr_sequencia, nr_seq_proposta, vl_inscricao, tx_inscricao, qt_parcela_inicial,
				qt_parcela_final, nr_seq_plano, nr_seq_contrato, dt_inicio_vigencia, dt_fim_vigencia,
				nr_seq_subestipulante, ie_acao_contrato, nr_seq_intercambio, ie_grau_dependencia, ie_tipo_contratacao,
				nr_seq_lote_reajuste, nr_seq_reajuste, nr_seq_regra_origem, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec )
		      ( SELECT	nextval('pls_regra_inscricao_seq'), nr_seq_proposta_nova_w, vl_inscricao, tx_inscricao, qt_parcela_inicial,
				qt_parcela_final, nr_seq_plano, nr_seq_contrato, dt_inicio_vigencia, dt_fim_vigencia,
				nr_seq_subestipulante, ie_acao_contrato, nr_seq_intercambio, ie_grau_dependencia,
				ie_tipo_contratacao, nr_seq_lote_reajuste, nr_seq_reajuste, nr_seq_regra_origem,
				clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p
			from	pls_regra_inscricao
			where	nr_sequencia = nr_seq_regra_inscricao_w );
	
end loop;
close C09;

open C11;
loop
fetch C11 into
	nr_seq_indicacao_venda_w;
EXIT WHEN NOT FOUND; /* apply on C11 */
	
	insert into pls_indicacao_venda(	nr_sequencia, nr_seq_proposta, nr_seq_segurado, cd_pessoa_fisica,
				nr_seq_bonificacao, nr_seq_lancamento, nr_seq_lote_comissao, qt_meses_bonificacao,
				qt_parcela_paga, cd_estabelecimento, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec )
		      ( SELECT	nextval('pls_indicacao_venda_seq'), nr_seq_proposta_nova_w, nr_seq_segurado, cd_pessoa_fisica,
				nr_seq_bonificacao, nr_seq_lancamento, nr_seq_lote_comissao, qt_meses_bonificacao,
				qt_parcela_paga, cd_estabelecimento_p, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p
			from	pls_indicacao_venda
			where	nr_sequencia = nr_seq_indicacao_venda_w );
	
end loop;
close C11;

open C16;
loop
fetch C16 into
	nr_seq_proposta_historico_w;
EXIT WHEN NOT FOUND; /* apply on C16 */
	
	insert into pls_proposta_historico(	nr_sequencia, nr_seq_proposta, dt_historico, ds_historico,
				ie_origem_historico, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec )
		      ( SELECT	nextval('pls_proposta_historico_seq'), nr_seq_proposta_nova_w, dt_historico, ds_historico,
				ie_origem_historico, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p
			from	pls_proposta_historico
			where	nr_sequencia = nr_seq_proposta_historico_w );
	
end loop;
close C16;

open C17;
loop
fetch C17 into
	nr_seq_proposta_validacao_w;
EXIT WHEN NOT FOUND; /* apply on C17 */
	
	select	nextval('pls_proposta_validacao_seq')
	into STRICT	nr_seq_validacao_nova_w
	;
	
	insert into pls_proposta_validacao(	nr_sequencia, nr_seq_proposta, nr_seq_inconsistencia, ie_consistido,
				dt_liberacao, nr_seq_segurado, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec )
			(SELECT	nr_seq_validacao_nova_w, nr_seq_proposta_nova_w, nr_seq_inconsistencia, ie_consistido,
				dt_liberacao, nr_seq_segurado, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p
			from	pls_proposta_validacao
			where	nr_sequencia = nr_seq_proposta_validacao_w );
	
	open C18;
	loop
	fetch C18 into
		nr_seq_proposta_check_list_w;
	EXIT WHEN NOT FOUND; /* apply on C18 */
		
		insert into pls_proposta_check_list(	nr_sequencia, nr_seq_validacao, dt_check_list, ds_check_list,
					ie_acao, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec )
			      ( SELECT	nextval('pls_proposta_check_list_seq'), nr_seq_validacao_nova_w, dt_check_list, ds_check_list,
					ie_acao, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p
				from	pls_proposta_check_list
				where	nr_sequencia = nr_seq_proposta_check_list_w );
		
	end loop;
	close C18;

end loop;
close C17;

open C19;
loop
fetch C19 into
	nr_seq_contrato_documento_w;
EXIT WHEN NOT FOUND; /* apply on C19 */
	
	select	nextval('pls_contrato_documento_seq')
	into STRICT	nr_seq_documento_novo_w
	;
	
	insert into pls_contrato_documento(	nr_sequencia, nr_seq_proposta, nr_seq_contrato, nr_seq_instrumento,
				ds_documento, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec )
			(SELECT	nr_seq_documento_novo_w, nr_seq_proposta_nova_w, nr_seq_contrato, nr_seq_instrumento,
				ds_documento, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p 
			from	pls_contrato_documento
			where	nr_sequencia = nr_seq_contrato_documento_w);
		
	open C20;
	loop
	fetch C20 into
		cd_classificacao_w,
		ds_dispositivo_w,
		ds_tema_w,
		ie_converte_macro_w,
		ie_imprimir_titulo_w,
		ie_quebra_pagina_w,
		nr_seq_tipo_tema_w;
	EXIT WHEN NOT FOUND; /* apply on C20 */
		
		insert into pls_contrato_doc_texto(	nr_sequencia, nr_seq_documento, cd_classificacao, ds_dispositivo,
					ds_tema, ie_converte_macro, ie_imprimir_titulo, ie_quebra_pagina,
					dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_tipo_tema )
				values ( nextval('pls_contrato_doc_texto_seq'), nr_seq_documento_novo_w, cd_classificacao_w, ds_dispositivo_w,
					ds_tema_w, ie_converte_macro_w, ie_imprimir_titulo_w, ie_quebra_pagina_w,
					clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, nr_seq_tipo_tema_w );
		
	end loop;
	close C20;

end loop;
close C19;

open C21;
loop
fetch C21 into
	nr_seq_comercial_empresa_w;
EXIT WHEN NOT FOUND; /* apply on C21 */
	
	insert into pls_comercial_empresa(	nr_sequencia, nr_seq_proposta, nr_seq_solicitacao, nr_seq_cliente,
				nr_seq_empresa_serv, ds_observacao, cd_empresa_ref, nr_contrato,
				dt_inicio_vigencia, dt_fim_vigencia, nr_seq_segurado, ds_tipo_plano,
				dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec )
		      ( SELECT	nextval('pls_comercial_empresa_seq'), nr_seq_proposta_nova_w, nr_seq_solicitacao, nr_seq_cliente,
				nr_seq_empresa_serv, ds_observacao, cd_empresa_ref, nr_contrato,
				dt_inicio_vigencia, dt_fim_vigencia, nr_seq_segurado, ds_tipo_plano,
				clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p
			from	pls_comercial_empresa
			where	nr_sequencia = nr_seq_comercial_empresa_w );
	
end loop;
close C21;

open C22;
loop
fetch C22 into
	nr_seq_prop_canal_w;
EXIT WHEN NOT FOUND; /* apply on C22 */
	begin
	insert into pls_benef_prop_canal_compl(	nr_sequencia, nr_seq_proposta, nr_seq_vendedor_canal,
				nr_seq_vendedor_vinculado, cd_estabelecimento, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec )
		      ( SELECT	nextval('pls_benef_prop_canal_compl_seq'), nr_seq_proposta_nova_w,
				nr_seq_vendedor_canal, nr_seq_vendedor_vinculado, cd_estabelecimento_p, clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p
			from	pls_benef_prop_canal_compl
			where	nr_sequencia = nr_seq_prop_canal_w );
	end;
end loop;
close C22;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_duplicar_proposta_adesao ( nr_seq_proposta_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

