-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dime_reg_resumo_creditos ( nr_seq_controle_p bigint, cd_estabelecimento_p text, nm_usuario_p text, dt_referencia_p timestamp, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------
Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_arquivo_w			varchar(4000);
ds_arquivo_compl_w		varchar(4000);
ds_linha_w			varchar(8000);
ds_quadro_w			varchar(2);
nr_linha_w			bigint	:= qt_linha_p;
nr_seq_registro_w		bigint 	:= nr_sequencia_p;
separador_w			varchar(1)	:= ds_separador_p;
tp_registro_w			varchar(2);
cd_cfop_w			bigint;
nr_item_resumo_w		varchar(03);
ds_item_resumo_w		varchar(255);
vl_resumo_w			double precision;
vl_contabil_entrada_w		double precision;
vl_base_calculo_entrada_w	double precision;
vl_imposto_cred_entrada_w	double precision;
vl_isenta_entrada_w		double precision;
vl_outras_entrada_w		double precision;
vl_contabil_saida_w		double precision;
vl_base_calculo_saida_w		double precision;
vl_imposto_cred_saida_w		double precision;
vl_isenta_saida_w		double precision;
vl_outras_saida_w		double precision;
ie_gera_w			varchar(255)	:= 'S';
dt_referencia_w			timestamp;

c01 CURSOR FOR
	SELECT	vl_dominio
	from	valor_dominio
	where	cd_dominio	= 6902
	order by nr_seq_apresent;


BEGIN
ds_quadro_w	:= '05';
tp_registro_w	:= '26';

/* Buscar dados saída */

select	coalesce(sum(a.vl_total_nota),0) vl_total_nota,
	coalesce(sum(obter_dados_trib_item_nf(a.nr_sequencia,'ICMS','BC')),0) vl_base_calculo,
	coalesce(sum(obter_dados_trib_item_nf(a.nr_sequencia,'ICMS','TR')),0) vl_tributo,
	coalesce(sum(obter_dados_trib_item_nf(a.nr_sequencia,'ICMS','O')),0) vl_outras
into STRICT	vl_contabil_saida_w,
	vl_base_calculo_saida_w,
	vl_imposto_cred_saida_w,
	vl_outras_saida_w
FROM natureza_operacao o, nota_fiscal a
LEFT OUTER JOIN modelo_nota_fiscal m ON (a.nr_seq_modelo = m.nr_sequencia)
WHERE a.cd_natureza_operacao	= o.cd_natureza_operacao  and exists (SELECT	1
		from	fis_lote_livro_fiscal	f,
			fis_lote_nota_fiscal	n,
			fis_lote		l
		where	n.nr_seq_lote	= f.nr_seq_lote
		and	a.nr_sequencia	= n.nr_seq_nota_fiscal
		and	l.nr_sequencia	= f.nr_seq_lote
		and	l.ie_tipo_lote	= 'E'
		and	dt_referencia_p between l.dt_inicial and l.dt_final) and substr(o.cd_cfop,1,1) in (1,2,3);

dt_referencia_w	:= trunc(trunc(dt_referencia_p, 'month'), 'dd');

open c01;
loop
fetch c01 into
	nr_item_resumo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	ie_gera_w	:= 'S';

	if (nr_item_resumo_w = '010') then
		vl_resumo_w	:= 0;
	elsif (nr_item_resumo_w = '020') then
		vl_resumo_w	:= vl_imposto_cred_saida_w;
	elsif (nr_item_resumo_w = '030') then
		vl_resumo_w	:= 0;
	elsif (nr_item_resumo_w = '040') then
		vl_resumo_w	:= 0;
	elsif (nr_item_resumo_w = '050') then
		vl_resumo_w	:= 0;
	elsif (nr_item_resumo_w = '060') then
		vl_resumo_w	:= 0;

		if (dt_referencia_w >= to_date('01/12/2007')) then
			ie_gera_w	:= 'N';
		end if;
	elsif (nr_item_resumo_w = '070') then
		vl_resumo_w	:= 0;

		if (dt_referencia_w >= to_date('01/09/2008')) then
			ie_gera_w	:= 'N';
		end if;
	elsif (nr_item_resumo_w = '080') then
		vl_resumo_w	:= 0;

		if (dt_referencia_w >= to_date('01/09/2008')) then
			ie_gera_w	:= 'N';
		end if;
	elsif (nr_item_resumo_w = '090') then
		vl_resumo_w	:= 0;

		if (dt_referencia_w >= to_date('01/04/2008')) then
			ie_gera_w	:= 'N';
		end if;
	elsif (nr_item_resumo_w = '100') then
		vl_resumo_w	:= 0;

		if (dt_referencia_w >= to_date('01/05/2009')) then
			ie_gera_w	:= 'N';
		end if;
	elsif (nr_item_resumo_w = '110') then
		vl_resumo_w	:= 0;

		if (dt_referencia_w >= to_date('01/05/2009')) then
			ie_gera_w	:= 'N';
		end if;
	elsif (nr_item_resumo_w = '120') then
		vl_resumo_w	:= 0;

		if (dt_referencia_w >= to_date('01/05/2009')) then
			ie_gera_w	:= 'N';
		end if;
	elsif (nr_item_resumo_w = '130') then
		vl_resumo_w	:= 0;

		if (dt_referencia_w >= to_date('01/05/2009')) then
			ie_gera_w	:= 'N';
		end if;
	elsif (nr_item_resumo_w = '140') then
		vl_resumo_w	:= 0;

		if (dt_referencia_w >= to_date('01/09/2008')) then
			ie_gera_w	:= 'N';
		end if;
	elsif (nr_item_resumo_w = '150') then
		vl_resumo_w	:= 0;

		if (dt_referencia_w >= to_date('01/03/2012')) then
			ie_gera_w	:= 'N';
		end if;
	elsif (nr_item_resumo_w = '160') then
		vl_resumo_w	:= 0;

		if (dt_referencia_w >= to_date('01/09/2008')) then
			ie_gera_w	:= 'N';
		end if;
	elsif (nr_item_resumo_w = '990') then
		vl_resumo_w	:= vl_imposto_cred_saida_w;
	end if;

	if (ie_gera_w = 'S') then

		/* Montar o arquivo */

		ds_linha_w	:= 	tp_registro_w								|| separador_w ||
					ds_quadro_w								|| separador_w ||
					substr(coalesce(nr_item_resumo_w,0),1,4)					|| separador_w ||
					lpad(replace(campo_mascara(coalesce(vl_resumo_w,0),2),'.',''),17,'0')	|| separador_w;

		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w	:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;

		-- insert na tabela do DIME
		insert into w_dime_arquivo(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_controle_dime,
			nr_linha,
			cd_registro,
			ds_arquivo)
		values (nextval('w_dime_arquivo_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_controle_p,
			nr_linha_w,
			tp_registro_w,
			ds_arquivo_w);

		commit;
	end if;

	end;
end loop;
close c01;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dime_reg_resumo_creditos ( nr_seq_controle_p bigint, cd_estabelecimento_p text, nm_usuario_p text, dt_referencia_p timestamp, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

