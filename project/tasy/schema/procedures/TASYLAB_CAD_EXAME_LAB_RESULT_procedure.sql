-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tasylab_cad_exame_lab_result ( nr_origem_p bigint, /*nm_pessoa_fisica_p				varchar2,
											dt_nascimento_p					date,
											ie_sexo_p						varchar2,
											nr_ddd_celular_p				varchar2,
											nr_telefone_celular_p			varchar2,
											nr_cpf_p						varchar2,
											nr_identidade_p					varchar2,
											ie_tipo_pessoa_p				varchar2,
											cd_cep_res_p					varchar2,
											ds_endereco_res_p				varchar2,
											nr_endereco_res_p				number,
											ds_bairro_res_p					varchar2,
											ds_complemento_res_p			varchar2,
											ds_municipio_res_p				varchar2,
											sg_estado_res_p					varchar2,
											ds_email_res_p					varchar2,
											nm_contato_mae_p				varchar2,*/
 dt_atualizacao_p timestamp, dt_liberacao_p timestamp, dt_resultado_p timestamp, nm_usuario_p text, nr_prescricao_p bigint, nr_seq_pedido_exam_ext_item_p bigint, nr_seq_pedido_externo_p bigint, nr_seq_protocolo_p bigint, nr_seq_reg_elemento_p bigint, cd_erro_p INOUT bigint, ds_erro_p INOUT text, nr_seq_resultado_p INOUT bigint) AS $body$
DECLARE


cd_medico_w			lab_tasylab_cliente.cd_medico%type;

nr_atendimento_w	prescr_medica.nr_atendimento%type;

nr_seq_resultado_w	exame_lab_resultado.nr_seq_resultado%type;


BEGIN

cd_erro_p	:= 0;

CALL tasy_atualizar_dados_sessao(nr_origem_p);

if (coalesce(dt_resultado_p::text, '') = '') then
	cd_erro_p	:= 23;
elsif (coalesce(nr_origem_p::text, '') = '') then
	cd_erro_p	:= 6;
else

	select	max(a.cd_medico)
	into STRICT	cd_medico_w
	from	lab_tasylab_cliente a
	where	a.nr_seq_externo = nr_origem_p;

	select	max(a.nr_atendimento)
	into STRICT	nr_atendimento_w
	from	prescr_medica a
	where	a.nr_prescricao = nr_prescricao_p;

	select	max(a.nr_seq_resultado)
	into STRICT	nr_seq_resultado_w
	from	exame_lab_resultado a
	where	a.nr_prescricao = nr_prescricao_p;

	if (coalesce(nr_seq_resultado_w::text, '') = '') then

		select	coalesce(max(nr_seq_resultado),0) + 1
		into STRICT	nr_seq_resultado_w
		from	exame_lab_resultado;

		begin
		insert into exame_lab_resultado(
										nr_seq_resultado,
										dt_resultado,
										dt_atualizacao,
										nm_usuario,
										nr_prescricao,
										nr_atendimento,
										cd_medico,
										nr_seq_protocolo,
										dt_liberacao,
										cd_pessoa_fisica,
										nr_seq_pedido_exam_ext_item,
										nr_seq_reg_elemento,
										nr_seq_pedido_externo)
								values (
										nr_seq_resultado_w,
										dt_resultado_p,
										dt_atualizacao_p,
										nm_usuario_p,
										nr_prescricao_p,
										nr_atendimento_w,
										cd_medico_w,
										nr_seq_protocolo_p,
										dt_liberacao_p,
										null,--cd_pessoa_fisica_w,
										nr_seq_pedido_exam_ext_item_p,
										nr_seq_reg_elemento_p,
										nr_seq_pedido_externo_p);

		--OS727249 - Ivan
		--commit;
		exception
		when others then
			cd_erro_p	:= 1;
			ds_erro_p	:= substr('Erro ao inserir o exame do resultado '||sqlerrm,1,2000);
		end;
	end if;


	nr_seq_resultado_p	:= nr_seq_resultado_w;


end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasylab_cad_exame_lab_result ( nr_origem_p bigint,  dt_atualizacao_p timestamp, dt_liberacao_p timestamp, dt_resultado_p timestamp, nm_usuario_p text, nr_prescricao_p bigint, nr_seq_pedido_exam_ext_item_p bigint, nr_seq_pedido_externo_p bigint, nr_seq_protocolo_p bigint, nr_seq_reg_elemento_p bigint, cd_erro_p INOUT bigint, ds_erro_p INOUT text, nr_seq_resultado_p INOUT bigint) FROM PUBLIC;

