-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_incluir_produto_contrato ( cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_contrato_p pls_contrato.nr_sequencia%type, nr_seq_plano_p pls_plano.nr_sequencia%type, nr_seq_tabela_p pls_tabela_preco.nr_sequencia%type, dt_inclusao_p timestamp, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


ie_permite_prod_dif_w		pls_contrato.ie_permite_prod_dif%type;
ie_tipo_operacao_w		pls_contrato.ie_tipo_operacao%type;
ie_copiar_regras_copart_w	varchar(1);
ie_copiar_regras_carencia_w	varchar(1);
ie_preco_w			pls_plano.ie_preco%type;
ds_erro_w			varchar(4000) := '';
qt_produtos_w			bigint;

c01 CURSOR FOR
	SELECT	nr_sequencia nr_seq_contrato_plano
	from	pls_contrato_plano
	where	nr_seq_contrato	= nr_seq_contrato_p;

BEGIN

ie_copiar_regras_copart_w	:= obter_valor_param_usuario(1202,124,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p);
ie_copiar_regras_carencia_w	:= obter_valor_param_usuario(1202,144,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p);

if (coalesce(nr_seq_plano_p::text, '') = '') or (coalesce(nr_seq_plano_p,0) = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(262371); --Mensagem: E necessario informar um produto!
end if;

select	ie_preco
into STRICT	ie_preco_w
from	pls_plano
where	nr_sequencia	= nr_seq_plano_p;

if (ie_preco_w in ('1','4')) and
	((coalesce(nr_seq_tabela_p::text, '') = '') or (coalesce(nr_seq_tabela_p,0) = 0)) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(262372); --Mensagem: Tabela nao informada para o produto!
end if;

select	ie_permite_prod_dif,
	ie_tipo_operacao
into STRICT	ie_permite_prod_dif_w,
	ie_tipo_operacao_w
from	pls_contrato
where	nr_sequencia	= nr_seq_contrato_p;

if (coalesce(nr_seq_contrato_p,0) > 0) then
	for c01_w in C01 loop
		begin
		ds_erro_w := pls_consiste_contrato_plano(nr_seq_contrato_p, nr_seq_plano_p, nr_seq_tabela_p, c01_w.nr_seq_contrato_plano, ds_erro_w);
		
		if (coalesce(ds_erro_w,'X') <> 'X') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(262375, 'DS_ERRO=' || ds_erro_w);
		end if;
		end;
	end loop; --C01
	
	if (ie_permite_prod_dif_w	= 'N') then
		select	count(1)
		into STRICT	qt_produtos_w
		from	pls_contrato_plano
		where	nr_seq_contrato	= nr_seq_contrato_p
		and	ie_situacao	= 'A';
		
		if (qt_produtos_w > 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(262381); -- Mensagem: Este contrato nao permite produtos diferentes!
		end if;
	end if;
	
	insert	into pls_contrato_plano(	nr_sequencia, dt_atualizacao, nm_usuario, nr_seq_plano,
			nr_seq_tabela, nr_seq_contrato, ie_situacao, ie_tipo_operacao,
			dt_inicio_vigencia)
	values (	nextval('pls_contrato_plano_seq'), clock_timestamp(), nm_usuario_p, nr_seq_plano_p,
			nr_seq_tabela_p, nr_seq_contrato_p, 'A', ie_tipo_operacao_w,
			coalesce(dt_inclusao_p, clock_timestamp()));
	
	if (ie_copiar_regras_copart_w = 'S') then
		CALL pls_carregar_regra_copar_contr(nr_seq_contrato_p, nr_seq_plano_p, cd_estabelecimento_p, nm_usuario_p);
	end if;
	
	if (ie_copiar_regras_carencia_w = 'S') then
		CALL pls_copiar_carencia_contrato(nr_seq_contrato_p, nr_seq_plano_p, nm_usuario_p);
	end if;
	
	if (ie_preco_w in ('1','4')) then
		CALL pls_gerar_tabela_contrato(nr_seq_contrato_p,nr_seq_plano_p,nr_seq_tabela_p,cd_estabelecimento_p,nm_usuario_p);
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_incluir_produto_contrato ( cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_contrato_p pls_contrato.nr_sequencia%type, nr_seq_plano_p pls_plano.nr_sequencia%type, nr_seq_tabela_p pls_tabela_preco.nr_sequencia%type, dt_inclusao_p timestamp, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

