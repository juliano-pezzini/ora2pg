-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE estornar_titulos_abatimento ( nr_tit_pagar_p bigint, nr_tit_receber_p bigint, nr_seq_baixa_p bigint, dt_baixa_p timestamp, nm_usuario_p text, ds_lista_titulo_p INOUT text) AS $body$
DECLARE

 
nr_titulo_w		bigint;
nr_seq_baixa_w		bigint;
nr_seq_baixa_gerada_w	bigint;
qt_titulo_w		bigint;
ds_observacao_w		varchar(255);
ds_mensagem_w		varchar(255);

c01 CURSOR FOR 
SELECT	b.nr_titulo, 
	b.nr_sequencia 
from	titulo_receber_liq b 
where	b.nr_tit_pagar		= nr_tit_pagar_p 
and	b.nr_seq_baixa_pagar	= nr_seq_baixa_p;

c02 CURSOR FOR 
SELECT	a.nr_titulo, 
	a.nr_sequencia 
from	titulo_pagar_baixa a 
where	a.nr_tit_receber		= nr_tit_receber_p 
and	a.nr_seq_baixa_rec	= nr_seq_baixa_p;


BEGIN 
 
if (nr_tit_pagar_p IS NOT NULL AND nr_tit_pagar_p::text <> '') then 
 
	select	count(*) 
	into STRICT	qt_titulo_w 
	from	titulo_receber_liq a 
	where	a.nr_tit_pagar		= nr_tit_pagar_p 
	and	a.nr_seq_baixa_pagar	= nr_seq_baixa_p;
 
	if (qt_titulo_w > 0) then	/* s√≥ permite estornar a partir da baixa que gerou o abatimento */
 
		CALL Estornar_tit_pagar_baixa(nr_tit_pagar_p, nr_seq_baixa_p, dt_baixa_p, nm_usuario_p,'S');
		 
		select	max(a.nr_sequencia) 
		into STRICT	nr_seq_baixa_gerada_w 
		from	titulo_pagar_baixa a 
		where	nr_titulo		= nr_tit_pagar_p;
		 
		ds_observacao_w	:= wheb_mensagem_pck.get_texto(302390,'nr_titulo_w=' || nr_titulo_w || ';nr_seq_baixa_w=' || nr_seq_baixa_w);
		 
		update	titulo_pagar_baixa 
		set	ds_observacao	= ds_observacao_w 
		where	nr_titulo		= nr_tit_pagar_p 
		and	nr_sequencia	= nr_seq_baixa_gerada_w;
		 
		open c01;
		loop 
		fetch c01 into 
			nr_titulo_w, 
			nr_seq_baixa_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			/* estorna todas as baixas geradas pelo abatimento */
 
			 
			ds_mensagem_w := wheb_mensagem_pck.get_texto(302396,'nr_tit_pagar_p=' || nr_tit_pagar_p || ';nr_seq_baixa_p=' || nr_seq_baixa_p);
			 
			CALL Estornar_tit_receber_liq(nr_titulo_w, nr_seq_baixa_w, dt_baixa_p, nm_usuario_p, 'S',ds_mensagem_w ,'P');
	 
			if (coalesce(ds_lista_titulo_p::text, '') = '') then 
				ds_lista_titulo_p		:= nr_titulo_w;
			else	 
				ds_lista_titulo_p		:= ds_lista_titulo_p || ', ' || nr_titulo_w;
			end if;
		 
		end loop;
		close c01;
	end if;
 
elsif (nr_tit_receber_p IS NOT NULL AND nr_tit_receber_p::text <> '') then 
 
	select	count(*) 
	into STRICT	qt_titulo_w 
	from	titulo_pagar_baixa a 
	where	a.nr_tit_receber		= nr_tit_receber_p 
	and	a.nr_seq_baixa_rec	= nr_seq_baixa_p;
	 
	ds_mensagem_w := wheb_mensagem_pck.get_texto(302398, 'nr_titulo_w=' || nr_titulo_w || ';nr_seq_baixa_w=' || nr_seq_baixa_w);
 
	if (qt_titulo_w > 0) then 
		CALL Estornar_tit_receber_liq(nr_tit_receber_p, nr_seq_baixa_p, dt_baixa_p, nm_usuario_p, 'S', ds_mensagem_w,'S');
 
		open c02;
		loop 
		fetch c02 into 
			nr_titulo_w, 
			nr_seq_baixa_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
 
			CALL Estornar_tit_pagar_baixa(nr_titulo_w, nr_seq_baixa_w, dt_baixa_p, nm_usuario_p,'S');
 
			if (coalesce(ds_lista_titulo_p::text, '') = '') then 
				ds_lista_titulo_p		:= nr_titulo_w;
			else	 
				ds_lista_titulo_p		:= ds_lista_titulo_p || ', ' || nr_titulo_w;
			end if;
 
		end loop;
		close c02;
 
	end if;
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE estornar_titulos_abatimento ( nr_tit_pagar_p bigint, nr_tit_receber_p bigint, nr_seq_baixa_p bigint, dt_baixa_p timestamp, nm_usuario_p text, ds_lista_titulo_p INOUT text) FROM PUBLIC;

