-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_gerar_os_story ( nr_sequencia_p INOUT bigint, nr_story_p bigint, nr_sprint_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_art_p bigint) AS $body$
DECLARE

 
nr_seq_localizacao_w	bigint;
nr_seq_equipamento_w	bigint;
nr_seq_cliente_w	bigint;
ds_dano_breve_w		man_ordem_servico.ds_dano_breve%type;
ds_dano_w		man_ordem_servico.ds_dano%type;
cd_solicitante_w	desenv_story.cd_pessoa_fisica%type;
nr_sequencia_w		bigint;
nm_usuario_exec_w	man_ordem_servico_exec.nm_usuario_exec%type;
ds_arquivo_w		desenv_story_anexo.ds_arquivo%type;
nm_usuario_w		desenv_story_anexo.nm_usuario%type;
qt_atividade_prevista_w	bigint;
nr_team_w		desenv_story.nr_team%type;
nr_membro_w		desenv_member.nr_sequencia%type;
cd_pessoa_fisica_w	pessoa_fisica.cd_pessoa_fisica%type;
cd_status_w		desenv_story_sprint.cd_status%type;
qt_atribuicao_w		bigint;
nr_seq_grupo_des_w	man_ordem_servico.nr_seq_grupo_des%type;
nr_feature_w		desenv_story.nr_feature%type;
cd_funcao_w		desenv_feature.cd_funcao%type;
nr_seq_tipo_ordem_w	desenv_tipo_story_os.nr_seq_tipo_ordem%type;
nr_grupo_planej_w	desenv_art.nr_grupo_planej%type;
qt_executor_w		bigint;
cd_tipo_w		desenv_story.cd_tipo%type;
nr_art_w		desenv_art.nr_sequencia%type;
qt_sprint_w		bigint;
ds_erro_w		varchar(2000);
QT_ESTIMATIVA_w		desenv_story.QT_ESTIMATIVA%type;

 
c01 CURSOR FOR 
	SELECT	obter_usuario_pessoa(b.cd_pessoa_fisica) 
	from	desenv_story_atribuicao a, 
		desenv_member b 
	where	a.nr_story = nr_story_p 
	and	a.nr_membro = b.nr_sequencia;

c02 CURSOR FOR 
	SELECT	ds_arquivo, 
		nm_usuario 
	from	desenv_story_anexo 
	where	nr_story = nr_story_p;


BEGIN 
 
select	max(nr_grupo_planej) 
into STRICT	nr_grupo_planej_w 
from	desenv_art 
where	nr_sequencia = nr_art_p;
 
select	count(*) 
into STRICT	qt_sprint_w 
from	desenv_story_sprint 
where	nr_story = nr_story_p;
 
if (qt_sprint_w = 0) then 
	ds_erro_w := man_atribuir_story_sprint(nr_story_p, null, null, nm_usuario_p, ds_erro_w);
end if;
 
select	max(a.nr_ordem_servico), 
	max(b.nr_team), 
	max(a.cd_status), 
	max(b.nr_feature), 
	coalesce(max(b.QT_ESTIMATIVA),60) 
into STRICT	nr_sequencia_p, 
	nr_team_w, 
	cd_status_w, 
	nr_feature_w, 
	QT_ESTIMATIVA_w 
from	desenv_story_sprint a, 
	desenv_story b 
where	a.nr_story = b.nr_sequencia 
and	a.nr_story = nr_story_p 
and	coalesce(a.nr_sprint,0) = coalesce(nr_sprint_p,0);
 
select	nr_seq_grupo_des 
into STRICT		nr_seq_grupo_des_w 
from		desenv_team 
where		nr_sequencia = nr_team_w;
 
select	count(*) 
into STRICT	qt_atividade_prevista_w 
from	man_ordem_ativ_prev 
where	trunc(dt_prevista,'dd') = trunc(clock_timestamp(),'dd') 
and	nm_usuario_prev = nm_usuario_p;
 
select	count(*) 
into STRICT	qt_executor_w 
from	man_ordem_servico_exec 
where	nm_usuario_exec = nm_usuario_p 
and	nr_seq_ordem = nr_sequencia_p;
 
if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') and (qt_atividade_prevista_w = 0) and (cd_status_w <> 0) and (qt_executor_w = 0) then 
	insert into man_ordem_servico_exec( 
		nr_sequencia, 
		nr_seq_ordem, 
		dt_atualizacao, 
		nm_usuario, 
		nm_usuario_exec, 
		dt_recebimento) 
	values (	nextval('man_ordem_servico_exec_seq'), 
		nr_sequencia_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		nm_usuario_p, 
		clock_timestamp() + interval '1 days');
 
	insert into man_ordem_ativ_prev( 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		nr_seq_ordem_serv, 
		dt_prevista, 
		qt_min_prev, 
		nm_usuario_prev, 
		ie_prioridade_desen, 
		nr_seq_ativ_exec) 
	values (	nextval('man_ordem_ativ_prev_seq'), 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_sequencia_p, 
		clock_timestamp(), 
		QT_ESTIMATIVA_w, 
		nm_usuario_p, 
		10, 
		10);
end if;
 
cd_pessoa_fisica_w := obter_pessoa_fisica_usuario(nm_usuario_p,'C');
 
select	max(nr_sequencia) 
into STRICT	nr_membro_w 
from	desenv_member 
where	nr_team = nr_team_w 
and	cd_pessoa_fisica = cd_pessoa_fisica_w;
 
select	count(*) 
into STRICT	qt_atribuicao_w 
from	desenv_story_atribuicao 
where	nr_story = nr_story_p 
and	nr_membro = nr_membro_w;
 
if (qt_atribuicao_w = 0) and (nr_membro_w IS NOT NULL AND nr_membro_w::text <> '') and (cd_status_w <> 0) then 
	insert into desenv_story_atribuicao( 
		nr_sequencia, 
		dt_atualizacao, 
		dt_atualizacao_nrec, 
		nm_usuario, 
		nm_usuario_nrec, 
		nr_membro, 
		nr_story) 
	values (	nextval('desenv_story_atribuicao_seq'), 
		clock_timestamp(), 
		clock_timestamp(), 
		nm_usuario_p, 
		nm_usuario_p, 
		nr_membro_w, 
		nr_story_p);
end if;
 
select	count(*) 
into STRICT	qt_executor_w 
from	man_ordem_servico_exec 
where	nm_usuario_exec = nm_usuario_p 
and	nr_seq_ordem = nr_sequencia_p;
 
if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') and (qt_executor_w = 0) then 
	insert into man_ordem_servico_exec( 
		nr_sequencia, 
		nr_seq_ordem, 
		dt_atualizacao, 
		nm_usuario, 
		nm_usuario_exec, 
		dt_recebimento, 
		nr_seq_funcao) 
	values (nextval('man_ordem_servico_exec_seq'), 
		coalesce(nr_sequencia_w,nr_sequencia_p), 
		clock_timestamp(), 
		nm_usuario_p, 
		nm_usuario_p, 
		clock_timestamp() + interval '1 days', 
		11);
end if;
 
if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then 
	return;
end if;
 
if (cd_estabelecimento_p = 1) then 
	nr_seq_localizacao_w := 1272;
	nr_seq_equipamento_w := 1395;
else 
	nr_seq_localizacao_w := 4604;
	nr_seq_equipamento_w := 4758;
end if;
 
select	substr(ds_descricao || chr(13) || chr(10) || ds_criterio_aceitacao,0,4000), 
	substr(ds_story,1,80), 
	cd_pessoa_fisica, 
	cd_tipo 
into STRICT	ds_dano_w, 
	ds_dano_breve_w, 
	cd_solicitante_w, 
	cd_tipo_w 
from	desenv_story 
where	nr_sequencia = nr_story_p;
 
select	max(nr_seq_tipo_ordem) 
into STRICT	nr_seq_tipo_ordem_w 
from	desenv_tipo_story_os 
where	nr_art = nr_art_w 
and	cd_tipo = cd_tipo_w;
 
select	max(cd_funcao) 
into STRICT	cd_funcao_w 
from	desenv_feature 
where	nr_sequencia = nr_feature_w;
 
select	nextval('man_ordem_servico_seq') 
into STRICT	nr_sequencia_w
;
 
nr_sequencia_p := nr_sequencia_w;
 
insert	into man_ordem_servico( 
	nr_sequencia, 
	cd_pessoa_solicitante, 
	dt_ordem_servico, 
	ie_prioridade, 
	ie_parado, 
	ds_dano_breve, 
	dt_atualizacao, 
	nm_usuario, 
	dt_inicio_desejado, 
	dt_conclusao_desejada, 
	ds_dano, 
	dt_inicio_previsto, 
	dt_inicio_real, 
	ie_tipo_ordem, 
	ie_status_ordem, 
	nm_usuario_exec, 
	nr_seq_estagio, 
	ie_classificacao, 
	ie_forma_receb, 
	nr_seq_complex, 
	nm_usuario_nrec, 
	nr_seq_classif, 
	nr_seq_nivel_valor, 
	ie_exclusiva, 
	ie_origem_os, 
	ie_resp_teste, 
	nr_grupo_trabalho, 
	nr_seq_localizacao, 
	nr_seq_equipamento, 
	ds_just_ret_news, 
	ie_obriga_news, 
	nr_seq_grupo_des, 
	cd_funcao, 
	nr_seq_tipo_ordem, 
	nr_grupo_planej, 
	NR_SEQ_ORIGEM) 
values(	nr_sequencia_w,			-- nr_sequencia, 
	cd_solicitante_w,		-- cd_pessoa_solicitante, 
	clock_timestamp(),			-- dt_ordem_servico, 
	'M',	     		-- ie_prioridade, 
	'N',				-- ie_parado, 
	substr(ds_dano_breve_w,1,80),	-- ds_dano_breve, 
	clock_timestamp(),			-- dt_atualizacao, 
	nm_usuario_p,			-- nm_usuario, 
	clock_timestamp(),			-- dt_inicio_desejado, 
	(clock_timestamp() + interval '15 days'),			-- dt_conclusao_desejada, 
	ds_dano_w,			-- ds_dano, 
	clock_timestamp(),			-- dt_inicio_previsto, 
	clock_timestamp(),			-- dt_inicio_real, 
	'4',				-- ie_tipo_ordem, 
	'1',				-- ie_status_ordem, 
	nm_usuario_p, 			-- nm_usuario_exec, 
	4, --1191,				-- nr_seq_estagio, 
	'S',				-- ie_classificacao, 
	'U',				-- ie_forma_receb, 
	2,				-- nr_seq_complex, 
	nm_usuario_p,			-- nm_usuario_nrec, 
	2,				-- nr_seq_classif, 
	1,				-- nr_seq_nivel_valor, 
	'P',				-- ie_exclusiva 
	'1',				--ie_origem 
	'P',				--ie_resp_teste 
	1, 
	nr_seq_localizacao_w, 
	nr_seq_equipamento_w, 
	'OS projeto HTML5.', 
	'N', 
	nr_seq_grupo_des_w, 
	cd_funcao_w, 
	nr_seq_tipo_ordem_w, 
	coalesce(nr_grupo_planej_w,1), 
	nr_story_p);				
 
update	desenv_story_sprint 
set	nr_ordem_servico = nr_sequencia_w 
where	nr_story = nr_story_p 
and	coalesce(nr_sprint,0) = coalesce(nr_sprint_p,0);
 
if (cd_status_w <> 0) then 
	open c01;
	loop 
	fetch c01 into 
		nm_usuario_exec_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
 
		select	count(*) 
		into STRICT	qt_executor_w 
		from	man_ordem_servico_exec 
		where	nm_usuario_exec = nm_usuario_exec_w 
		and	nr_seq_ordem = nr_sequencia_p;
		 
		if (qt_executor_w = 0) then 
			insert into man_ordem_servico_exec( 
				nr_sequencia, 
				nr_seq_ordem, 
				dt_atualizacao, 
				nm_usuario, 
				nm_usuario_exec, 
				dt_recebimento) 
			values (	nextval('man_ordem_servico_exec_seq'), 
				nr_sequencia_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				nm_usuario_exec_w, 
				clock_timestamp() + interval '1 days');
 
			insert into man_ordem_ativ_prev( 
				nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				nr_seq_ordem_serv, 
				dt_prevista, 
				qt_min_prev, 
				nm_usuario_prev, 
				ie_prioridade_desen, 
				nr_seq_ativ_exec) 
			values (	nextval('man_ordem_ativ_prev_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_sequencia_w, 
				clock_timestamp(), 
				QT_ESTIMATIVA_w, 
				nm_usuario_exec_w, 
				10, 
				10); --82 
		end if;
		end;
	end loop;
	close c01;
end if;
 
open c02;
loop 
fetch c02 into 
	ds_arquivo_w, 
	nm_usuario_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin 
 
	insert into man_ordem_serv_arq( 
		ds_arquivo, 
		dt_atualizacao, 
		dt_atualizacao_nrec, 
		nm_usuario, 
		nm_usuario_nrec, 
		nr_seq_ordem, 
		nr_sequencia, 
		ie_anexar_email) 
	values (	ds_arquivo_w, 
		clock_timestamp(), 
		clock_timestamp(), 
		nm_usuario_w, 
		nm_usuario_w, 
		nr_sequencia_p, 
		nextval('man_ordem_serv_arq_seq'), 
		'N');
 
	end;
end loop;
close c02;
 
select	count(*) 
into STRICT	qt_executor_w 
from	man_ordem_servico_exec 
where	nm_usuario_exec = nm_usuario_p 
and	nr_seq_ordem = nr_sequencia_p;
 
if (qt_executor_w = 0) then 
	insert into man_ordem_servico_exec( 
		nr_sequencia, 
		nr_seq_ordem, 
		dt_atualizacao, 
		nm_usuario, 
		nm_usuario_exec, 
		dt_recebimento, 
		nr_seq_funcao) 
	values (nextval('man_ordem_servico_exec_seq'), 
		nr_sequencia_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		nm_usuario_p, 
		clock_timestamp() + interval '1 days', 
		11);
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_gerar_os_story ( nr_sequencia_p INOUT bigint, nr_story_p bigint, nr_sprint_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_art_p bigint) FROM PUBLIC;

