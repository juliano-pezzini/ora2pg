-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_resp_credito_partic (nr_seq_procedimento_p bigint, nr_seq_participante_p bigint, cd_estabelecimento_p bigint, ie_responsavel_credito_p text, nm_usuario_p text) AS $body$
DECLARE

 
ie_valor_informado_w		varchar(01) 	:= 'N';
qt_pontos_w			preco_amb.qt_pontuacao%type;
IE_CONTA_HONORARIO_W		varchar(1);
IE_CALCULA_HONORARIO_W		varchar(1)	:= 'S';
ie_atualiza_valor_conta_w	varchar(1);

vl_medico_w			double precision;
vl_procedimento_w		double precision;
vl_custo_operacional_w		double precision;
vl_anestesista_w		double precision;
vl_auxiliares_w			double precision;
vl_materiais_w			double precision;
vl_medico_conta_w		double precision;

vl_pto_procedimento_w		double precision;
vl_pto_custo_operac_w		double precision;
vl_pto_anestesista_w		double precision;
vl_pto_medico_w			double precision;
vl_pto_auxiliares_w		double precision;
vl_pto_materiais_w		double precision;
qt_porte_anestesico_w		smallint;
cd_edicao_amb_w			integer;
ie_preco_informado_w		varchar(01);
nr_interno_conta_w		bigint;
cd_categoria_w			varchar(10);
dt_conta_w			timestamp;
cd_procedimento_w		bigint;
cd_setor_atendimento_w		integer;
nr_seq_exame_w			bigint;
nr_seq_proc_interno_w		bigint;
cd_medico_executor_w		varchar(10);
cd_convenio_w			bigint;
nr_atendimento_w		bigint;
ie_clinica_w			integer;
ie_tipo_atendimento_w		smallint;
cd_plano_convenio_w       varchar(10);
cd_tipo_acomodacao_w      smallint;
cd_usuario_convenio_w      varchar(30);
cd_estrutura_w			integer 		:= 0;
cd_estrutura_honor_w		integer 		:= 0;
ie_emite_conta_w      	varchar(3);
ie_emite_conta_honor_w     	varchar(3);

ie_origem_proced_w		bigint;
qt_procedimento_w		double precision;
vl_total_partic_w		double precision;
ie_valor_informado_ww		varchar(1) 	:= 'N';
vl_medico_ww				double precision;
vl_procedimento_ww			double precision;
vl_custo_operacional_ww		double precision;
vl_anestesista_ww			double precision;
vl_auxiliares_ww			double precision;
vl_materiais_ww				double precision;
vl_medico_conta_ww			double precision;
vl_participante_w		double precision;
vl_participante_conta_w		double precision;
vl_participante_conta_ww	double precision;
ie_video_w			varchar(1);
ie_emite_conta_pacote_w		varchar(1);
ds_retorno_w			varchar(4000);
ie_responsavel_credito_w	varchar(5);
nr_seq_cobertura_w		bigint;
nr_seq_classif_atend_w		bigint;	
nr_seq_crit_honorario_w		bigint;
ie_carater_inter_sus_w		varchar(2);
cd_convenio_item_w		bigint;
cd_categoria_item_w		varchar(10);
nr_atendimento_item_w		bigint;
nr_seq_grupo_rec_w		bigint;
nr_seq_ajuste_proc_w		bigint;
nr_seq_origem_w			bigint;
vl_medico_original_w		double precision;
ie_resp_credito_old_w	regra_honorario.cd_regra%type;
nr_seq_classif_medico_w		atendimento_paciente.nr_seq_classif_medico%type;


BEGIN 
 
select	coalesce(max(obter_valor_param_usuario(67, 112, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N'), 
	coalesce(max(obter_valor_param_usuario(67, 192, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N'), 
	coalesce(max(obter_valor_param_usuario(67, 371, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'S') 
into STRICT	ie_valor_informado_w, 
	ie_atualiza_valor_conta_w, 
	ie_emite_conta_pacote_w
;
 
select	max(IE_ENTRA_CONTA), 
	max(IE_CALCULA_VALOR) 
into STRICT	IE_CONTA_HONORARIO_W, 
	IE_CALCULA_HONORARIO_W 
from	regra_honorario 
where	cd_regra	= ie_responsavel_credito_p;
 
 
select 	nr_interno_conta, 
		coalesce(dt_conta,dt_procedimento), 
		cd_procedimento, 
		cd_setor_atendimento, 
		nr_seq_exame, 
		nr_seq_proc_interno, 
		cd_medico_executor, 
		ie_origem_proced, 
		qt_procedimento, 
		ie_valor_informado, 
		vl_medico , 
		vl_procedimento , 
		vl_custo_operacional , 
		vl_anestesista , 
		vl_auxiliares , 
		vl_materiais , 
		coalesce(ie_video,'N'), 
		cd_convenio, 
		cd_categoria, 
		nr_atendimento, 
		nr_seq_grupo_rec 
into STRICT	nr_interno_conta_w, 
		dt_conta_w, 
		cd_procedimento_w, 
		cd_setor_atendimento_w, 
		nr_seq_exame_w, 
		nr_seq_proc_interno_w, 
		cd_medico_executor_w, 
		ie_origem_proced_w, 
		qt_procedimento_w, 
		ie_valor_informado_ww, 
		vl_medico_ww, 
		vl_procedimento_ww, 
		vl_custo_operacional_ww, 
		vl_anestesista_ww, 
		vl_auxiliares_ww, 
		vl_materiais_ww, 
		ie_video_w, 
		cd_convenio_item_w, 
		cd_categoria_item_w, 
		nr_atendimento_item_w, 
		nr_seq_grupo_rec_w 
from 	procedimento_paciente 
where 	nr_Sequencia = nr_seq_procedimento_p;
 
begin 
select 	cd_convenio_parametro, 
	cd_categoria_parametro, 
	nr_atendimento 
into STRICT	cd_convenio_w, 
	cd_categoria_w, 
	nr_atendimento_w 
from 	conta_paciente 
where 	nr_interno_conta = nr_interno_conta_w;
exception 
when others then 
	cd_convenio_w	:= cd_convenio_item_w;
	cd_categoria_w 	:= cd_categoria_item_w;
	nr_atendimento_w:= nr_atendimento_item_w;
end;
	 
select	b.ie_tipo_atendimento, 
	b.ie_clinica, 
	a.cd_tipo_acomodacao, 
	a.cd_plano_convenio, 
	a.cd_usuario_convenio, 
	a.nr_seq_cobertura, 
	b.nr_seq_classificacao, 
	b.ie_carater_inter_sus, 
	a.nr_seq_origem, 
	b.nr_seq_classif_medico 
into STRICT	ie_tipo_atendimento_w, 
	ie_clinica_w, 
	cd_tipo_acomodacao_w, 
	cd_plano_convenio_w, 
	cd_usuario_convenio_w, 
	nr_seq_cobertura_w, 
	nr_seq_classif_atend_w, 
	ie_carater_inter_sus_w, 
	nr_seq_origem_w, 
	nr_seq_classif_medico_w 
from	atend_categoria_convenio a, 
	atendimento_paciente	 b 
where	a.nr_atendimento	=	nr_atendimento_w 
and 	a.nr_atendimento	=	b.nr_atendimento 
and	a.nr_seq_interno	=	obter_atecaco_atendimento(a.nr_atendimento);
 
 
SELECT * FROM define_preco_procedimento(cd_estabelecimento_P, cd_convenio_w, CD_CATEGORIA_w, dt_conta_w, cd_procedimento_w, coalesce(cd_tipo_acomodacao_w,0), coalesce(ie_tipo_atendimento_w,0), coalesce(cd_setor_atendimento_w,0), cd_medico_executor_w, 0, 0, coalesce(nr_seq_exame_w,0), coalesce(nr_seq_proc_interno_w,0), cd_usuario_convenio_w, cd_plano_convenio_w, coalesce(ie_clinica_w,0), 0, null, vl_procedimento_w, VL_CUSTO_OPERACIONAL_w, VL_ANESTESISTA_w, VL_MEDICO_w, VL_AUXILIARES_w, VL_MATERIAIS_w, VL_PTO_PROCEDIMENTO_w, VL_PTO_CUSTO_OPERAC_w, VL_PTO_ANESTESISTA_w, VL_PTO_MEDICO_w, VL_PTO_AUXILIARES_w, VL_PTO_MATERIAIS_w, QT_PORTE_ANESTESICO_w, qt_pontos_w, CD_EDICAO_AMB_w, ie_preco_informado_w, nr_seq_ajuste_proc_w, coalesce(nr_seq_procedimento_p,0), null, 0, ie_video_w, null, NULL, NULL, null, null, null, null, nr_seq_cobertura_w, nr_seq_classif_atend_w, ie_carater_inter_sus_w, null, nr_seq_grupo_rec_w, null, nr_seq_origem_w, nr_seq_classif_medico_w, null) INTO STRICT vl_procedimento_w, VL_CUSTO_OPERACIONAL_w, VL_ANESTESISTA_w, VL_MEDICO_w, VL_AUXILIARES_w, VL_MATERIAIS_w, VL_PTO_PROCEDIMENTO_w, VL_PTO_CUSTO_OPERAC_w, VL_PTO_ANESTESISTA_w, VL_PTO_MEDICO_w, VL_PTO_AUXILIARES_w, VL_PTO_MATERIAIS_w, QT_PORTE_ANESTESICO_w, qt_pontos_w, CD_EDICAO_AMB_w, ie_preco_informado_w, nr_seq_ajuste_proc_w;
		   
if (ie_atualiza_valor_conta_w	= 'S') then 
	if (ie_calcula_honorario_w 	= 'S')	then 
		ie_valor_informado_ww := 'N';
	end if;
end if;
 
vl_medico_original_w := coalesce(VL_MEDICO_w,0);
 
if (ie_valor_informado_ww	= 'N') then 
 
	vl_medico_w 			:= vl_medico_w 		* qt_procedimento_w;
	vl_procedimento_w		:= vl_procedimento_w 		* qt_procedimento_w;
	vl_custo_operacional_w		:= vl_custo_operacional_w 	* qt_procedimento_w;
	--vl_anestesista_w			:= vl_anestesista_w 		* qt_procedimento_w; 
	--vl_auxiliares_w			:= vl_auxiliares_w 		* qt_procedimento_w; 
	vl_materiais_w			:= vl_materiais_w 		* qt_procedimento_w;	
	vl_procedimento_w		:= vl_materiais_w + vl_custo_operacional_w+vl_medico_w;
else 
	vl_medico_w 			:= vl_medico_ww; 		
	vl_procedimento_w		:= vl_procedimento_ww; 		
	vl_custo_operacional_w		:= vl_custo_operacional_ww;
	vl_anestesista_w		:= vl_anestesista_ww;
	vl_auxiliares_w			:= vl_auxiliares_ww; 		
	vl_materiais_w			:= vl_materiais_ww;
 
 
end if;
 
if (ie_atualiza_valor_conta_w	= 'S') then 
	begin	 
 
	if (ie_calcula_honorario_w 	= 'N')	then 
		begin 
		vl_medico_w 			:= 0;
		vl_procedimento_w		:= 0;
		vl_custo_operacional_w		:= 0;
		vl_anestesista_w		:= 0;
		vl_auxiliares_w			:= 0;
		vl_materiais_w			:= 0;
		end;
	end if;
 
	/* ie_conta_honorario = ie_entra_conta da regra honorario */
 
	/* S-Entra na conta N-não entra na conta A-emite em anexo na conta nova */
 
	/* T-Todos os valores devem estar fora da conta (Calcula valor, porem não soma na conta) */
 
	vl_procedimento_w			:= 0;
	vl_medico_conta_w 			:= 0;
	if (ie_conta_honorario_w 		= 'S') 	then 
		vl_medico_conta_w 		:= vl_medico_w;
	end if;
	if (ie_conta_honorario_w 		= 'T') 	then 
		vl_procedimento_w		:= 0;
	elsif 	((vl_custo_operacional_w > 0)	or (vl_anestesista_w > 0) 		or (vl_medico_w > 0)		or (vl_auxiliares_w > 0) 		or (vl_materiais_w > 0)) 		then 
		vl_procedimento_w 		:= (vl_custo_operacional_w + vl_medico_conta_w + vl_materiais_w );
	end if;
 
	end;
end if;
 
cd_estrutura_w				:= 0;
cd_estrutura_honor_w			:= 0;
 
SELECT * FROM Obter_Estrut_Conta_Proc( 
			cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, cd_plano_convenio_w, cd_medico_executor_w, ie_responsavel_credito_p, nr_seq_procedimento_p, cd_setor_atendimento_w, ie_tipo_atendimento_w, cd_estabelecimento_p, 0, cd_categoria_w, dt_conta_w, '', cd_estrutura_w, cd_estrutura_honor_w) INTO STRICT cd_estrutura_w, cd_estrutura_honor_w;
 
ie_emite_conta_w			:= null;
ie_emite_conta_honor_w			:= null;
 
if (cd_estrutura_w	> 0) then 
	ie_emite_conta_w	:= cd_estrutura_w;
end if;
if (cd_estrutura_honor_w	> 0) then 
	ie_emite_conta_honor_w	:= cd_estrutura_honor_w;
end if;
 
if (nr_seq_participante_p <> 0) then 
 
	select	coalesce(vl_conta,0), 
		coalesce(vl_participante,0) 
	into STRICT	vl_participante_conta_ww, 
		vl_participante_w 
	from	procedimento_participante 
	where	nr_sequencia		= nr_seq_procedimento_p 
	and	nr_seq_partic		= nr_seq_participante_p;	
	 
	vl_participante_conta_w		:= 0;
	 
	if (ie_calcula_honorario_w = 'S') and (vl_participante_conta_ww = 0) then 
		begin 
		ie_responsavel_credito_w	:= ie_responsavel_credito_p;
		SELECT * FROM define_valor_participante(nr_seq_procedimento_p, nr_seq_participante_p, nm_usuario_p, vl_anestesista_w, vl_medico_w, vl_participante_w, ds_retorno_w, ds_retorno_w, ie_responsavel_credito_w, ds_retorno_w, vl_participante_conta_w, ds_retorno_w, ds_retorno_w, vl_auxiliares_w, ie_responsavel_credito_w, nr_seq_crit_honorario_w, vl_medico_original_w) INTO STRICT vl_participante_w, ds_retorno_w, ds_retorno_w, ie_responsavel_credito_w, ds_retorno_w, vl_participante_conta_w, ds_retorno_w, ds_retorno_w, nr_seq_crit_honorario_w;
		 
		end;
	end if;
	 
	if (ie_conta_honorario_w = 'S') then 
		vl_participante_conta_w		:= vl_participante_w;
	end if;
	 
	select	max(ie_responsavel_credito) 
	into STRICT	ie_resp_credito_old_w 
	from	procedimento_participante 
	where	nr_sequencia = nr_seq_procedimento_p 
	and	nr_seq_partic = nr_seq_participante_p;
	 
	update	procedimento_participante 
	set	ie_responsavel_credito	= ie_responsavel_credito_p, 
		dt_atualizacao		= clock_timestamp(), 
		nm_usuario		= nm_usuario_p, 
		ie_valor_informado	= ie_valor_informado_w, 
		vl_conta		= vl_participante_conta_w, 
		ie_emite_conta		= CASE WHEN ie_emite_conta_w = NULL THEN  ie_emite_conta  ELSE ie_emite_conta_w END , 
		vl_participante		= CASE WHEN IE_CALCULA_HONORARIO_W='N' THEN  0  ELSE vl_participante_conta_w END , 
		nr_seq_crit_honorario  = nr_seq_crit_honorario_w 
	where	nr_sequencia		= nr_seq_procedimento_p 
	and	nr_seq_partic		= nr_seq_participante_p;
	 
	insert into log_proc_resp_credito( 
		nr_sequencia, 
		nr_seq_propaci, 
		nr_seq_partic, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		ie_resp_credito_ant, 
		ie_resp_credito_atual, 
		nr_atendimento) 
	values (nextval('log_proc_resp_credito_seq'), 
		nr_seq_procedimento_p, 
		nr_seq_participante_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		ie_resp_credito_old_w, 
		ie_responsavel_credito_p, 
		nr_atendimento_w);
	 
	if (ie_conta_honorario_w		= 'N') and (vl_participante_w		<> 0) and (vl_participante_conta_w 	<> 0) then 
		 
		update 	procedimento_paciente 
		set	vl_procedimento		= 0, 
			ie_valor_informado	= ie_valor_informado_w 
		where	nr_sequencia		= nr_seq_procedimento_p;
		 
	end if;
	 
	if (ie_conta_honorario_w = 'S') then 
			 
		update 	procedimento_paciente 
		set	vl_procedimento		= vl_procedimento_w + vl_participante_conta_w 
		where	nr_sequencia		= nr_seq_procedimento_p;
	end if;
	 
else 
 
	if (ie_calcula_honorario_w 	= 'N')	then 
	 
		update	procedimento_paciente 
		set	vl_procedimento		= 0 
		where	nr_sequencia		= nr_seq_procedimento_p;
	 
	end if;
	 
	select	coalesce(sum(vl_conta),0) 
	into STRICT	vl_total_partic_w 
	from	procedimento_participante 
	where	nr_sequencia		= nr_seq_procedimento_p;
	 
	select	max(ie_responsavel_credito) 
	into STRICT	ie_resp_credito_old_w 
	from	procedimento_paciente 
	where	nr_sequencia = nr_seq_procedimento_p;	
	 
	update	procedimento_paciente 
	set	ie_responsavel_credito	= ie_responsavel_credito_p 
	where	nr_sequencia		= nr_seq_procedimento_p;
	 
	insert into log_proc_resp_credito( 
		nr_sequencia, 
		nr_seq_propaci, 
		nr_seq_partic, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		ie_resp_credito_ant, 
		ie_resp_credito_atual, 
		nr_atendimento) 
	values (nextval('log_proc_resp_credito_seq'), 
		nr_seq_procedimento_p, 
		null, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		ie_resp_credito_old_w, 
		ie_responsavel_credito_p, 
		nr_atendimento_w);	
 
end if;
if (ie_calcula_honorario_w 	= 'N')	then 
	 
	update	procedimento_paciente 
	set	vl_procedimento		= 0, 
	ie_valor_informado	= ie_valor_informado_w 
	where	nr_sequencia		= nr_seq_procedimento_p;
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_resp_credito_partic (nr_seq_procedimento_p bigint, nr_seq_participante_p bigint, cd_estabelecimento_p bigint, ie_responsavel_credito_p text, nm_usuario_p text) FROM PUBLIC;

