-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE register_udi_generated (( cd_version_p text, nr_service_pack_p bigint, nm_usuario_p text) is nr_sequencia_w tasy_eudamed.nr_sequencia%type) RETURNS TASY_VERSION_UDI.CD_UDI%TYPE AS $body$
DECLARE

		first_part_udi CONSTANT varchar(4) := '(01)';
		second_part_udi CONSTANT varchar(4) := '(10)';
		dot_character CONSTANT varchar(1) := '.';
		third_part_udi CONSTANT varchar(4) := '(11)';
		date_mask_udi CONSTANT varchar(6) := 'yymmdd';
		fill_service_pack CONSTANT varchar(1) := '0';
		qt_lpad_character integer;
	
  udi_record_w RECORD;

BEGIN
		if (nr_service_pack_p >= 0 and nr_service_pack_p < 10) then
			qt_lpad_character := 2;
		else
			qt_lpad_character := length(to_char(nr_service_pack_p));
		end if;
		return	first_part_udi ||
				cd_gtin_p || 
				second_part_udi || 
				cd_version_p || 
				dot_character || 
				lpad(nr_service_pack_p, qt_lpad_character, fill_service_pack) || 
				third_part_udi || 
				to_char(clock_timestamp(), date_mask_udi);
	end;

begin	
	begin
		select	count(nr_sequencia)
		into STRICT	qt_record_w
		from	tasy_version_udi
		where	cd_version = cd_version_p
		and		nr_service_pack = nr_service_pack_p;
		
		if (qt_record_w <= 0) then
	
			select	max(nr_sequencia)
			into STRICT	nr_sequencia_w
			from	tasy_version_udi
			where	cd_version = cd_version_p
			and		nr_service_pack = -1;
			
			if (nr_sequencia_w > 0) then
				for udi_record_w in (
					SELECT	nextval('tasy_version_udi_seq') nr_sequencia,
							cd_version_p cd_version,
							nr_service_pack_p nr_service_pack,
							tvu.ds_commercial,
							tvu.cd_prefix_version,
							tvu.cd_trade_item_id,
							tvu.nr_catalog,
							null cd_udi,
							tvu.cd_gtin,
							clock_timestamp() dt_atualizacao,
							coalesce(nm_usuario_p, nm_usuario_default_w) nm_usuario,
							clock_timestamp() dt_atualizacao_nrec,
							coalesce(nm_usuario_p, nm_usuario_default_w) nm_usuario_nrec
					from	tasy_version_udi tvu
					where	nr_sequencia = nr_sequencia_w
				)
				loop
					tasy_version_udi_row.nr_sequencia := udi_record_w.nr_sequencia;
					tasy_version_udi_row.cd_version := udi_record_w.cd_version;
					tasy_version_udi_row.nr_service_pack := udi_record_w.nr_service_pack;
					tasy_version_udi_row.ds_commercial := udi_record_w.ds_commercial;
					tasy_version_udi_row.cd_prefix_version := udi_record_w.cd_prefix_version;
					tasy_version_udi_row.cd_trade_item_id := udi_record_w.cd_trade_item_id;
					tasy_version_udi_row.nr_catalog := udi_record_w.nr_catalog;
					tasy_version_udi_row.cd_udi := generate_udi(udi_record_w.cd_gtin);
					tasy_version_udi_row.cd_gtin := udi_record_w.cd_gtin;
					tasy_version_udi_row.dt_atualizacao := udi_record_w.dt_atualizacao;
					tasy_version_udi_row.nm_usuario := udi_record_w.nm_usuario;
					tasy_version_udi_row.dt_atualizacao_nrec := udi_record_w.dt_atualizacao_nrec;
					tasy_version_udi_row.nm_usuario_nrec :=	udi_record_w.nm_usuario_nrec;
					insert	into tasy_version_udi values (tasy_version_udi_row.*);
				end loop udi_record_w;						
			else
				for udi_record_w in (
					SELECT	nextval('tasy_version_udi_seq') nr_sequencia,
							cd_version_p cd_version,
							nr_service_pack_p nr_service_pack,
							tedmd.ds_commercial,
							tedmd.cd_prefix_version,
							tedmd.cd_trade_item_id,
							tedmd.nr_catalog,
							null cd_udi,
							tedmd.cd_gtin,
							clock_timestamp() dt_atualizacao,
							coalesce(nm_usuario_p, nm_usuario_default_w) nm_usuario,
							clock_timestamp() dt_atualizacao_nrec,
							coalesce(nm_usuario_p, nm_usuario_default_w) nm_usuario_nrec
					from 	tasy_eudamed tedmd
					where	tedmd.ie_situacao = active_status_w
				)
				loop
					tasy_version_udi_row.nr_sequencia := udi_record_w.nr_sequencia;
					tasy_version_udi_row.cd_version := udi_record_w.cd_version;
					tasy_version_udi_row.nr_service_pack := udi_record_w.nr_service_pack;
					tasy_version_udi_row.ds_commercial := udi_record_w.ds_commercial;
					tasy_version_udi_row.cd_prefix_version := udi_record_w.cd_prefix_version;
					tasy_version_udi_row.cd_trade_item_id := udi_record_w.cd_trade_item_id;
					tasy_version_udi_row.nr_catalog := udi_record_w.nr_catalog;
					tasy_version_udi_row.cd_udi := generate_udi(udi_record_w.cd_gtin);
					tasy_version_udi_row.cd_gtin := udi_record_w.cd_gtin;
					tasy_version_udi_row.dt_atualizacao := udi_record_w.dt_atualizacao;
					tasy_version_udi_row.nm_usuario := udi_record_w.nm_usuario;
					tasy_version_udi_row.dt_atualizacao_nrec := udi_record_w.dt_atualizacao_nrec;
					tasy_version_udi_row.nm_usuario_nrec :=	udi_record_w.nm_usuario_nrec;
					insert	into tasy_version_udi values (tasy_version_udi_row.*);
				end loop udi_record_w;
			end if;

			commit;	
		end if;
	exception
		when others then
			CALL register_version_track_log(2, 'Version: ' || cd_version_p || '; Service Pack: ' || nr_service_pack_p || '; Exception: ' || SQLERRM, nm_usuario_p);
	end;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE register_udi_generated (( cd_version_p text, nr_service_pack_p bigint, nm_usuario_p text) is nr_sequencia_w tasy_eudamed.nr_sequencia%type) FROM PUBLIC;

