-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_se_limitacao_conta ( nr_seq_segurado_p bigint, nr_seq_tipo_limitacao_p bigint, qt_permitida_p bigint, qt_intervalo_p bigint, ie_periodo_p text, qt_solicitada_p bigint, nr_seq_conta_proc_p bigint, ie_retorno_p INOUT text, ie_tipo_periodo_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* 	ie_periodo_p
	CO - Ano contratual
	CA - Ano calendario
	A  -  Data adesao
	D  -  Data da primeira utilizacao*/
	
ie_limitacao_w			varchar(1);
dt_proc_w			timestamp;
nr_seq_titular_w		bigint;
nr_seq_contrato_w		bigint;
dt_contratacao_w		timestamp;
dt_atual_w			timestamp;
dt_inicio_w			timestamp;
dt_inicial_w			timestamp	:= null;
dt_final_w			timestamp;
ie_tipo_incidencia_w		varchar(1);
nr_seq_conta_w			bigint;
nr_seq_conta_proc_w		bigint;
qt_procedimento_w		pls_conta_proc.qt_procedimento%type;
qt_liberada_w			pls_conta_proc.qt_procedimento%type := 0;
qt_permitida_w			pls_guia_plano_proc.qt_autorizada%type;
cd_guia_w			varchar(20);
qt_autorizada_w			pls_guia_plano_proc.qt_autorizada%type;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
------------------------------------------------------------------------------------------
cd_procedimento_aux_w		bigint;
ie_origem_proced_aux_w		bigint;
------------------------------------------------------------------------------------------
qt_utilizado_w			double precision;	
dt_aux_w			timestamp;
	
C01 CURSOR FOR
	SELECT	c.nr_sequencia,
		coalesce(c.dt_procedimento,b.dt_emissao),
		case	when(c.ie_status in ('A','P','C')) then coalesce(c.qt_procedimento_imp,0)	--Diego 21/06/2011 -Tratamento para maximar a quantiadade liberada,			
			else coalesce(c.qt_procedimento,0)
		end,
		c.cd_procedimento,
		c.ie_origem_proced
	from	pls_conta_proc 	c,
		pls_conta	b,
		pls_segurado 	a		
	where	a.nr_sequencia	= b.nr_seq_segurado	
	and	c.nr_seq_conta	= b.nr_sequencia
	and	a.nr_sequencia	= nr_seq_segurado_p
	and	coalesce(c.ie_glosa,'N')	<> 'S'
	and 	coalesce(ie_tipo_incidencia_w,'B')	= 'B'
	and	coalesce(c.dt_procedimento,b.dt_emissao) between dt_inicial_w and dt_final_w
	/*and	nvl(c.ie_glosa,'N')	= 'N' --Diego OS 313903 - Historico 23/05/2011 13:14:43 - Para o caso do procedimento ter sido glosado.  -- DIEGO - 21/06/2011 - TRATAMENTO DESNECESSARIO GRACAS A CONDICAO DO SUM*/
	
	and	coalesce(c.ie_status,'U') <> 'D'
	and	((not exists ( SELECT	1
				  from		pls_conta_glosa x,
			  			tiss_motivo_glosa y
				  where		x.nr_seq_conta_proc	  = c.nr_sequencia
				  and		x.nr_seq_motivo_glosa 	  = y.nr_sequencia
				  and		y.cd_motivo_tiss	  = '1423')) or (c.ie_status in ('L', 'S'))) /*Diego 14/09/2011 - Tratamento para que nao seja considerado procedimentos que possuem a  glosa de limitacao ou se possuir para que ja esteja liberado Este tratamento existe para caso seja gerada a glosa e o usuario aceite a quantidade.*/
																	
	
union

	select	c.nr_sequencia,
		coalesce(c.dt_procedimento,b.dt_emissao),
		case	when(c.ie_status in ('A','P','C')) then coalesce(c.qt_procedimento_imp,0)	--Diego 21/06/2011 -Tratamento para maximizar a quantidade liberada,			
			else coalesce(c.qt_procedimento,0)
		end,
		c.cd_procedimento,
		c.ie_origem_proced
	from	pls_conta_proc 	c,
		pls_conta	b,
		pls_segurado 	a		
	where	a.nr_sequencia		= b.nr_seq_segurado
	and	c.nr_seq_conta		= b.nr_sequencia
	and	a.nr_seq_contrato	= nr_seq_contrato_w
	and	coalesce(b.ie_glosa,'N')	<> 'S'
	and 	coalesce(ie_tipo_incidencia_w,'B') = 'T'
	and	coalesce(c.ie_status,'U') <> 'D'
	and	( (coalesce(c.dt_procedimento,b.dt_emissao) >= dt_inicial_w) and (coalesce(c.dt_procedimento,b.dt_emissao) <= dt_final_w))
	and	((a.nr_sequencia = nr_seq_segurado_p ) or (a.nr_seq_titular = nr_seq_segurado_p and pls_obter_se_parente_legal(a.nr_sequencia) = 'S') or (a.nr_sequencia = nr_seq_titular_w) or (a.nr_seq_titular = nr_seq_titular_w and pls_obter_se_parente_legal(a.nr_sequencia) = 'S'))
	--and	nvl(c.ie_glosa,'N')	= 'N' --Diego OS 313903 - Historico 23/05/2011 13:14:43 - Para o caso do procedimento ter sido glosado.  -- DIEGO - 21/06/2011 - TRATAMENTO DESNECESSARIO GRACAS A CONDICAO DO SUM*/	
	and	((not exists ( select	1
				  from		pls_conta_glosa x,
			  			tiss_motivo_glosa y
				  where		x.nr_seq_conta_proc	  = c.nr_sequencia
				  and		x.nr_seq_motivo_glosa 	  = y.nr_sequencia
				  and		y.cd_motivo_tiss	  = '1423')) or (c.ie_status in ('L', 'S')));
	

BEGIN

ie_limitacao_w	:= 'N';
qt_permitida_w	:= coalesce(qt_permitida_p,0);

select	coalesce(coalesce(a.dt_procedimento,b.dt_emissao),clock_timestamp()),
	b.nr_sequencia,
	a.cd_procedimento,
	a.ie_origem_proced
into STRICT	dt_proc_w,
	nr_seq_conta_w,
	cd_procedimento_w,
	ie_origem_proced_w
from	pls_conta_proc a,
	pls_conta b
where	a.nr_sequencia	= nr_seq_conta_proc_p
and	b.nr_sequencia	= a.nr_seq_conta;

if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then
	select	nr_seq_titular,
		nr_seq_contrato
	into STRICT	nr_seq_titular_w,
		nr_seq_contrato_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_p;
	
	begin
		select	coalesce(cd_guia_referencia,cd_guia)
		into STRICT	cd_guia_w
		from	pls_conta
		where	nr_sequencia = nr_seq_conta_w;
	exception
	when others then
		cd_guia_w := null;
	end;
	
	if (cd_guia_w IS NOT NULL AND cd_guia_w::text <> '') then
		begin
			select 	coalesce(sum(QT_AUTORIZADA),0)
			into STRICT	qt_autorizada_w
			from	pls_guia_plano_proc
			where	nr_seq_guia in (	SELECT	nr_sequencia
							from	pls_guia_plano
							where	((cd_guia = cd_guia_w) or (cd_guia_principal = cd_guia_w))
							and	nr_seq_segurado = nr_seq_segurado_p)
			and	cd_procedimento	 = cd_procedimento_w
			and	ie_origem_proced = ie_origem_proced_w;
		exception
		when others then
			qt_autorizada_w := 0;
		end;
		
		begin
			select	coalesce(sum(qt_procedimento_imp),0)
			into STRICT	qt_utilizado_w
			from	pls_conta_proc
			where	nr_seq_conta in (	SELECT 	nr_sequencia
							from	pls_conta
							where	((cd_guia	= cd_guia_w ) or ( cd_guia_referencia = cd_guia_w))
							and	nr_seq_segurado	= nr_seq_segurado_p)
			and	cd_procedimento		= cd_procedimento_w
			and	ie_origem_proced	= ie_origem_proced_w
			and	((ie_status not in ('U','D','C'))or (nr_sequencia = nr_seq_conta_proc_p))
			and	coalesce(ie_glosa,'N') <> 'S';
		exception
		when others then
			qt_utilizado_w := 0;
		end;
	end if;
	
	if (ie_periodo_p = 'CO') then
		begin
		
		select	trunc(a.dt_contrato,'dd'),
			trunc(dt_proc_w)
		into STRICT	dt_contratacao_w,
			dt_atual_w
		from	pls_contrato a
		where	a.nr_sequencia	= nr_seq_contrato_w;
		exception
		when others then
			dt_contratacao_w	:= null;
			dt_atual_w		:= null;
		end;
		
		dt_inicio_w	:= dt_contratacao_w;
		
		if (ie_tipo_periodo_p = 'M') then
			while(dt_inicio_w < dt_atual_w) loop	
				select	add_months(dt_inicio_w,qt_intervalo_p)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	add_months(dt_inicio_w, -qt_intervalo_p),
				dt_inicio_w
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		elsif (ie_tipo_periodo_p = 'S') then
			while(dt_inicio_w < dt_atual_w) loop	
				select	dt_inicio_w + (qt_intervalo_p*7)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - (qt_intervalo_p*7),
				dt_inicio_w
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		elsif (ie_tipo_periodo_p = 'D') then
			while(dt_inicio_w < dt_atual_w) loop	
				select	dt_inicio_w + qt_intervalo_p
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - qt_intervalo_p,
				dt_inicio_w
			into STRICT	dt_inicial_w,
				dt_final_w
			;			
		end if;
	elsif (ie_periodo_p = 'CA') then
		dt_atual_w	:= trunc(dt_proc_w);
		dt_inicio_w	:= trunc(dt_proc_w,'year');
		if (ie_tipo_periodo_p = 'M') then
			if (qt_intervalo_p = 1) then
				dt_inicial_w	:= trunc(dt_proc_w,'month');
				dt_final_w	:= last_day(trunc(dt_proc_w,'month'));	
			elsif (qt_intervalo_p in (2,3,4,6)) then
				dt_inicio_w	:= trunc(dt_proc_w,'year');
				
				while(dt_inicio_w < dt_atual_w) loop
					begin
					select	add_months(dt_inicio_w,qt_intervalo_p)
					into STRICT	dt_inicio_w
					;
					end;
				end loop;
				
				select	add_months(dt_inicio_w,-qt_intervalo_p),
					dt_inicio_w
				into STRICT	dt_inicial_w,
					dt_final_w
				;
				
			elsif (qt_intervalo_p = 12) then
				dt_inicial_w	:= trunc(dt_proc_w,'year');
				dt_final_w	:= last_day(add_months(trunc(dt_proc_w,'year'),qt_intervalo_p));
			end if;
		elsif (ie_tipo_periodo_p = 'S') then
			while(dt_inicio_w < dt_atual_w) loop	
				select	dt_inicio_w + (qt_intervalo_p*7)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - (qt_intervalo_p*7),
				dt_inicio_w
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		elsif (ie_tipo_periodo_p = 'D') then
			while(dt_inicio_w < dt_atual_w) loop	
				select	dt_inicio_w + qt_intervalo_p
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - qt_intervalo_p,
				dt_inicio_w
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		end if;
		
	elsif (ie_periodo_p = 'A') then
	
		select	trunc(a.dt_contratacao)
		into STRICT	dt_inicio_w
		from	pls_segurado a
		where	a.nr_sequencia	= nr_seq_segurado_p;
		
		dt_atual_w := trunc(dt_proc_w);
		
		if (ie_tipo_periodo_p = 'M') then
		
			while(dt_inicio_w < dt_atual_w) loop	
				select	add_months(dt_inicio_w,qt_intervalo_p)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w
			into STRICT	dt_final_w
			;
			/*deve ser mantdo desta forma pois o processo nao estava diminuindo o periodo OS 482836 Diogo*/

			dt_aux_w := add_months(dt_inicio_w, -qt_intervalo_p);
			dt_inicial_w := dt_aux_w;
			
		elsif (ie_tipo_periodo_p = 'S') then
		
			while(dt_inicio_w < dt_atual_w) loop	
				select	dt_inicio_w + (qt_intervalo_p*7)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - (qt_intervalo_p*7),
				dt_inicio_w
			into STRICT	dt_inicial_w,
				dt_final_w
			;
			
		elsif (ie_tipo_periodo_p = 'D') then
		
			while(dt_inicio_w < dt_atual_w) loop	
				select	dt_inicio_w + qt_intervalo_p
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - qt_intervalo_p,
				dt_inicio_w
			into STRICT	dt_inicial_w,
				dt_final_w
			;			
		end if;
	elsif (ie_periodo_p = 'D') then
		
		select	trunc(min(a.dt_procedimento))
		into STRICT	dt_inicio_w
		from	pls_conta_proc 	a,
			pls_conta	b
		where	a.nr_seq_conta		= b.nr_sequencia
		and	b.nr_seq_segurado 	= nr_seq_segurado_p
		and	a.cd_procedimento	= cd_procedimento_w
		and	a.ie_origem_proced	= ie_origem_proced_w
		and	(a.dt_procedimento IS NOT NULL AND a.dt_procedimento::text <> '')
		and	((coalesce(a.ie_status,'U')	in ('P','C','S','L'))or (a.nr_sequencia 	= nr_seq_conta_proc_p))
		and	coalesce(a.ie_glosa,'N')	<> 'S';
		
		dt_atual_w := trunc(dt_proc_w);
		
		if (ie_tipo_periodo_p = 'M') then
		
			while(dt_inicio_w < dt_atual_w) loop	
				select	add_months(dt_inicio_w,qt_intervalo_p)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w
			into STRICT	dt_final_w
			;
			/*deve ser mantdo desta forma pois o processo nao estava diminuindo o periodo OS 482836 Diogo*/

			dt_aux_w := add_months(dt_inicio_w, -qt_intervalo_p);
			dt_inicial_w := dt_aux_w;
			
		elsif (ie_tipo_periodo_p = 'S') then
		
			while(dt_inicio_w < dt_atual_w) loop	
				select	dt_inicio_w + (qt_intervalo_p*7)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - (qt_intervalo_p*7),
				dt_inicio_w
			into STRICT	dt_inicial_w,
				dt_final_w
			;
			
		elsif (ie_tipo_periodo_p = 'D') then
		
			while(dt_inicio_w < dt_atual_w) loop	
				select	dt_inicio_w + qt_intervalo_p
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - qt_intervalo_p,
				dt_inicio_w
			into STRICT	dt_inicial_w,
				dt_final_w
			;			
		end if;
	end if;	
	
	select	ie_tipo_incidencia
	into STRICT	ie_tipo_incidencia_w
	from	pls_tipo_limitacao
	where	nr_sequencia	= nr_seq_tipo_limitacao_p;
	
	dt_final_w	:= fim_dia(dt_final_w);
	
	open c01;
	loop
	fetch c01 into	
		nr_seq_conta_proc_w,
		dt_aux_w,
		qt_procedimento_w,
		cd_procedimento_aux_w,
		ie_origem_proced_aux_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin	
		
		if (pls_obter_regra_limitacao(cd_procedimento_aux_w, null, ie_origem_proced_aux_w, nr_seq_segurado_p, null) = nr_seq_tipo_limitacao_p) then
			qt_liberada_w	:= coalesce(qt_liberada_w,0) + coalesce(qt_procedimento_w,0);					
		end if;
		
		end;
	end loop;
	close c01;	
	
	/* Alexandre OS 293195 - Foi documentado a soma do campo qt_solicitada_p, pois conforme a OS 276326 e data do historico 10/02/2011, no cursor 
	nao e tratado o status da conta, e por isso ja trazar , no cursor, a quantidade asolicitada do procediemnto da conta que esta sendo consisitida */
	
	--qt_liberada_w	:= qt_liberada_w + nvl(qt_solicitada_p,0);
	if	((qt_permitida_w < qt_liberada_w) and (not(qt_utilizado_w <= qt_autorizada_w )))then
		ie_limitacao_w	:= 'S';
	end if;
end if;

ie_retorno_p := ie_limitacao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_se_limitacao_conta ( nr_seq_segurado_p bigint, nr_seq_tipo_limitacao_p bigint, qt_permitida_p bigint, qt_intervalo_p bigint, ie_periodo_p text, qt_solicitada_p bigint, nr_seq_conta_proc_p bigint, ie_retorno_p INOUT text, ie_tipo_periodo_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

