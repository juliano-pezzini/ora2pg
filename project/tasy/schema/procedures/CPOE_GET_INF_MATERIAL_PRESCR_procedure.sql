-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_get_inf_material_prescr (nr_seq_material_prescr_p bigint, nr_atendimento_p bigint, cd_material_p bigint, cd_unidade_medida_p text, ie_tipo_consistencia_p text, ie_dose_out_p INOUT text, cd_unidade_medida_out_p INOUT text, qt_dose_out_p INOUT bigint, ds_mensagem_dose_out_p INOUT text, qt_dose_atend_prescr_out_p INOUT bigint, ie_justificativa_out_p INOUT text, ds_inf_cid_out_p INOUT text) AS $body$
DECLARE


c01 CURSOR FOR
SELECT	coalesce(qt_limite_pessoa,-1) qt_limite_pessoa,
		cd_unid_med_limite,
		coalesce(ie_dose_limite,'DOSE') ie_dose_limite,
		coalesce(ie_justificativa,'S') ie_justificativa,
		substr(obter_desc_unid_med(cd_unid_med_limite),1,255) ds_unid_med_limite,
		substr(obter_desc_unid_med(cd_um_minima),1,255) ds_unid_med_minima,
		substr(obter_valor_dominio(1851, coalesce(ie_dose_limite,'DOSE')),1,255) ds_dose_limite,
		cpoe_dose_limite_char(coalesce(qt_limite_pessoa,0)) ds_limite_pessoa,
		coalesce(qt_dose_min, 0) qt_dose_min,
		CASE WHEN coalesce(cd_doenca_cid::text, '') = '' THEN  null  ELSE wheb_mensagem_pck.get_texto(1028448,'DS_CID='||obter_desc_cid(cd_doenca_cid)) END  ds_inf_cid
from	material_prescr
where	nr_sequencia = nr_seq_material_prescr_p;

BEGIN

for rule_w in c01 loop
	ie_justificativa_out_p := rule_w.ie_justificativa;
	ds_inf_cid_out_p := rule_w.ds_inf_cid;

	if (ie_tipo_consistencia_p = 'MAX') then
		ds_mensagem_dose_out_p := substr(rule_w.ds_limite_pessoa || ' ' || rule_w.ds_unid_med_limite || '/' || rule_w.ds_dose_limite, 1, 255);
		ie_dose_out_p := rule_w.ie_dose_limite;
		cd_unidade_medida_out_p := rule_w.cd_unid_med_limite;
		qt_dose_out_p := rule_w.qt_limite_pessoa;

		select	coalesce(sum(x.dose_total),0)
		into STRICT	qt_dose_atend_prescr_out_p
		from (	SELECT	coalesce(sum(obter_dose_convertida(cd_material, qt_dose, cd_unidade_medida, cd_unidade_medida_p)),0) dose_total
				from cpoe_material_vig_v
				where	nr_atendimento	= nr_atendimento_p
				and	cd_material		= cd_material_p
				and ((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or (nm_usuario = wheb_usuario_pck.get_nm_usuario))
				and coalesce(dt_lib_suspensao::text, '') = ''
				and coalesce(dt_suspensao::text, '') = ''
				
union
	
				SELECT	coalesce(sum(obter_dose_convertida(b.cd_material, c.qt_dose, c.cd_unidade_medida, cd_unidade_medida_p)),0) dose_total
					from	prescr_mat_hor c,
						prescr_material b,
						prescr_medica a
				where	a.nr_prescricao		= b.nr_prescricao
				and		a.nr_atendimento	= nr_atendimento_p
				and		b.cd_material		= cd_material_p
				and		b.nr_prescricao		= c.nr_prescricao
				and		b.nr_sequencia		= c.nr_seq_material
				and		coalesce(a.dt_suspensao::text, '') = ''
				and		coalesce(b.ie_suspenso,'N')	= 'N'
				and		coalesce(c.dt_suspensao::text, '') = '') x;
	elsif (ie_tipo_consistencia_p = 'MIN') then
		ds_mensagem_dose_out_p := substr(rule_w.qt_dose_min || ' ' || rule_w.ds_unid_med_minima, 1, 255);
	end if;
end loop;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_get_inf_material_prescr (nr_seq_material_prescr_p bigint, nr_atendimento_p bigint, cd_material_p bigint, cd_unidade_medida_p text, ie_tipo_consistencia_p text, ie_dose_out_p INOUT text, cd_unidade_medida_out_p INOUT text, qt_dose_out_p INOUT bigint, ds_mensagem_dose_out_p INOUT text, qt_dose_atend_prescr_out_p INOUT bigint, ie_justificativa_out_p INOUT text, ds_inf_cid_out_p INOUT text) FROM PUBLIC;

