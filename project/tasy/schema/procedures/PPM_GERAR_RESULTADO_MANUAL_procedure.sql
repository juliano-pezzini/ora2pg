-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ppm_gerar_resultado_manual ( nr_seq_metrica_p bigint, dt_resultado_p timestamp, vl_resultado_p bigint, cd_pessoa_fisica_p text, nr_seq_grupo_p bigint, nr_seq_gerencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_ppm_metrica_w	bigint;
dt_resultado_w		timestamp;

c01 CURSOR FOR
SELECT	a.nr_sequencia
from	ppm_objetivo_metrica a,
	ppm_objetivo_meta b,
	ppm_objetivo c,
	usuario d
where	a.nr_seq_metrica	= nr_seq_metrica_p
and	a.nr_seq_meta		= b.nr_sequencia
and	b.nr_seq_objetivo	= c.nr_sequencia
and	c.cd_pessoa_fisica	= d.cd_pessoa_fisica
and	dt_resultado_w		between dt_inicio_vigencia and coalesce(dt_final_vigencia,dt_resultado_w)
and	exists (select	1
	from	usuario_grupo_des x
	where	x.nr_seq_grupo		= nr_seq_grupo_p
	and	x.nm_usuario_grupo	= d.nm_usuario);

c02 CURSOR FOR
SELECT	a.nr_sequencia
from	ppm_objetivo_metrica a,
	ppm_objetivo_meta b,
	ppm_objetivo c,
	usuario d
where	a.nr_seq_metrica	= nr_seq_metrica_p
and	a.nr_seq_meta		= b.nr_sequencia
and	b.nr_seq_objetivo	= c.nr_sequencia
and	c.cd_pessoa_fisica	= d.cd_pessoa_fisica
and	dt_resultado_w		between dt_inicio_vigencia and coalesce(dt_final_vigencia,dt_resultado_w)
and	exists (select	1
	from	usuario_grupo_des x,
		grupo_desenvolvimento y
	where	x.nr_seq_grupo		= y.nr_sequencia
	and	y.nr_seq_gerencia	= nr_seq_gerencia_p
	and	x.nm_usuario_grupo	= d.nm_usuario);

	procedure gravar_resultado(nr_seq_ppm_metrica_p	bigint) is
	nr_seq_result_w	bigint;
	
BEGIN

	select	max(nr_sequencia)
	into STRICT	nr_seq_result_w
	from	ppm_objetivo_result
	where	nr_seq_metrica = nr_seq_ppm_metrica_p
	and	PKG_DATE_UTILS.start_of(dt_referencia,'MONTH') = PKG_DATE_UTILS.start_of(dt_resultado_w,'MONTH');

	if (nr_seq_result_w IS NOT NULL AND nr_seq_result_w::text <> '') then

		update	ppm_objetivo_result
		set	vl_resultado_calc 	= vl_resultado_p,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_sequencia 		= nr_seq_result_w;
	else
		select	nextval('ppm_objetivo_result_seq')
		into STRICT	nr_seq_result_w
		;

		insert into ppm_objetivo_result(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_metrica,
			dt_referencia,
			vl_resultado_calc)
		values (nr_seq_result_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_ppm_metrica_p,
			dt_resultado_w,
			coalesce(vl_resultado_p,0));

		insert into ppm_objetivo_result_ind(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_result,
			nr_seq_metrica)
		values (nextval('ppm_objetivo_result_ind_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_result_w,
			nr_seq_ppm_metrica_p);

		insert into ppm_objetivo_result_gestor(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_result,
			nr_seq_metrica)
		values (nextval('ppm_objetivo_result_gestor_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_result_w,
			nr_seq_ppm_metrica_p);
	end if;

	end;

begin

dt_resultado_w	:= pkg_date_utils.start_of(dt_resultado_p,'MONTH');

if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then

	begin
	select	a.nr_sequencia
	into STRICT	nr_seq_ppm_metrica_w
	from	ppm_objetivo_metrica a,
		ppm_objetivo_meta b,
		ppm_objetivo c
	where	a.nr_seq_metrica	= nr_seq_metrica_p
	and	a.nr_seq_meta		= b.nr_sequencia
	and	b.nr_seq_objetivo	= c.nr_sequencia
	and	c.cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	dt_resultado_w		between dt_inicio_vigencia and coalesce(dt_final_vigencia,dt_resultado_w)  LIMIT 1;
	exception
	when others then
		nr_seq_ppm_metrica_w := null;
	end;

	if (nr_seq_ppm_metrica_w IS NOT NULL AND nr_seq_ppm_metrica_w::text <> '') then
		gravar_resultado(nr_seq_ppm_metrica_w);
	end if;

elsif (coalesce(nr_seq_grupo_p,0) > 0) then

	open C01;
	loop
	fetch C01 into
		nr_seq_ppm_metrica_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		gravar_resultado(nr_seq_ppm_metrica_w);
	end loop;
	close C01;

elsif (coalesce(nr_seq_gerencia_p,0) > 0) then

	open C02;
	loop
	fetch C02 into
		nr_seq_ppm_metrica_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		gravar_resultado(nr_seq_ppm_metrica_w);
	end loop;
	close C02;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ppm_gerar_resultado_manual ( nr_seq_metrica_p bigint, dt_resultado_p timestamp, vl_resultado_p bigint, cd_pessoa_fisica_p text, nr_seq_grupo_p bigint, nr_seq_gerencia_p bigint, nm_usuario_p text) FROM PUBLIC;

