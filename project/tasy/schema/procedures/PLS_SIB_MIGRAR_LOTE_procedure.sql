-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_sib_migrar_lote ( nr_seq_lote_p pls_sib_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


pls_lote_sib_w		pls_lote_sib%rowtype;
pls_interf_sib_w	pls_interf_sib%rowtype;
nr_seq_lote_novo_w	bigint;
qt_movimentacao_w	bigint;
nr_sequencia_w		bigint;
qt_inclusao_w		bigint;
qt_retificacao_w	bigint;
qt_mudanca_w		bigint;
qt_cancelamento_w	bigint;
qt_reativacao_w		bigint;

C01 CURSOR FOR
	SELECT	ie_tipo_reg,
		nr_seq_segurado
	from	pls_interf_sib
	where 	nr_seq_lote_sib = nr_seq_lote_p
	and 	ie_tipo_reg in (1,2,5,7,8);

C02 CURSOR(	ie_tipo_reg_pc		pls_interf_sib.ie_tipo_reg%type,
		nr_seq_segurado_pc	pls_interf_sib.nr_seq_segurado%type) FOR
	SELECT	*
	from	pls_interf_sib
	where 	nr_seq_lote_sib = nr_seq_lote_p
	and 	nr_seq_segurado = nr_seq_segurado_pc
	and 	ie_tipo_reg = ie_tipo_reg_pc;
BEGIN

select	*
into STRICT	pls_lote_sib_w
from	pls_lote_sib
where	nr_sequencia	= nr_seq_lote_p;

if (pls_lote_sib_w.ie_status = 'E') then
	begin
		select	count(*)
		into STRICT	qt_movimentacao_w
		from	pls_interf_sib
		where 	nr_seq_lote_sib = nr_seq_lote_p
		and 	ie_tipo_reg in (1,2,5,7,8);

		select	count(*)
		into STRICT	qt_inclusao_w
		from	pls_interf_sib
		where 	nr_seq_lote_sib = nr_seq_lote_p
		and 	ie_tipo_reg = 1;

		select	count(*)
		into STRICT	qt_retificacao_w
		from	pls_interf_sib
		where 	nr_seq_lote_sib = nr_seq_lote_p
		and 	ie_tipo_reg = 2;

		select	count(*)
		into STRICT	qt_mudanca_w
		from	pls_interf_sib
		where 	nr_seq_lote_sib = nr_seq_lote_p
		and 	ie_tipo_reg = 5;

		select	count(*)
		into STRICT	qt_cancelamento_w
		from	pls_interf_sib
		where 	nr_seq_lote_sib = nr_seq_lote_p
		and 	ie_tipo_reg = 7;

		select	count(*)
		into STRICT	qt_reativacao_w
		from	pls_interf_sib
		where 	nr_seq_lote_sib = nr_seq_lote_p
		and 	ie_tipo_reg = 8;

		select	nextval('pls_sib_lote_seq')
		into STRICT	nr_seq_lote_novo_w
		;

		insert into pls_sib_lote(
			nr_sequencia,
			ie_tipo_lote,
			ie_status,
			dt_referencia,
			dt_inicio_mov,
			dt_fim_mov,
			qt_movimentacao,
			qt_inclusao,
			qt_retificacao,
			qt_mudanca_contratual,
			qt_cancelamento,
			qt_reativacao,
			dt_atualizacao,
			nm_usuario,
			cd_estabelecimento)
		values (	nr_seq_lote_novo_w,
			'M',
			4,
			pls_lote_sib_w.dt_mesano_referencia,
			trunc(pls_lote_sib_w.dt_mes_competencia,'month'),
			last_day(pls_lote_sib_w.dt_mes_competencia),
			qt_movimentacao_w,
			qt_inclusao_w,
			qt_retificacao_w,
			qt_mudanca_w,
			qt_cancelamento_w,
			qt_reativacao_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_estabelecimento_p);
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort('Erro ao gerar lote: '||sqlerrm(SQLSTATE));
	end;

	begin
		for r_c01_w in C01 loop
			for	r_C02_w in C02(r_c01_w.ie_tipo_reg, r_c01_w.nr_seq_segurado) loop
				insert	into	pls_sib_movimento(	nr_sequencia, nr_seq_lote, nr_seq_segurado, ie_tipo_movimento,
						dt_atualizacao, dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
						cd_cco, nm_beneficiario, dt_cancelamento, cd_motivo_cancelamento,
						dt_reativacao, dt_nascimento, cd_sexo, nr_cpf,
						nr_pis_pasep, nm_mae, nr_dn, nr_cns,
						cd_beneficiario, cd_beneficiario_titular, dt_contratacao, nr_plano_ans,
						nr_plano_operadora, nr_plano_portabilidade, ie_cpt, ie_itens_excluidos_cobertura,
						nr_cnpj, nr_cei, cd_relacao_dependencia, ie_tipo_endereco,
						ds_logradouro, nr_logradouro, ds_complemento, ds_bairro,
						cd_municipio_ibge, cd_cep, ie_reside_exterior, cd_municipio_ibge_resid)
					values(	nextval('pls_sib_movimento_seq'), nr_seq_lote_novo_w, r_c02_w.nr_seq_segurado, CASE WHEN r_c02_w.ie_tipo_reg=1 THEN 1 WHEN r_c02_w.ie_tipo_reg=2 THEN 2 WHEN r_c02_w.ie_tipo_reg=5 THEN 3 WHEN r_c02_w.ie_tipo_reg=7 THEN 4 WHEN r_c02_w.ie_tipo_reg=8 THEN 5 END ,
						clock_timestamp(), clock_timestamp(), nm_usuario_p, nm_usuario_p,
						(lpad(r_c02_w.nr_cco,10,0) || lpad(r_c02_w.ie_digito_cco,2,0)), r_c02_w.nm_beficiario, r_c02_w.dt_cancelamento, r_c02_w.cd_motivo_cancelamento,
						r_c02_w.dt_reinclusao, r_c02_w.dt_nascimento, r_c02_w.ie_sexo, r_c02_w.nr_cpf,
						r_c02_w.nr_pis_pasep, r_c02_w.nm_mae_benef , r_c02_w.cd_declaracao_nasc_vivo, r_c02_w.cd_cns,
						r_c02_w.cd_usuario_plano, r_c02_w.cd_usuario_plano_sup , r_c02_w.dt_adesao_plano, r_c02_w.cd_plano_ans,
						r_c02_w.cd_plano_ans_pre, r_c02_w.nr_seq_plano_portab, r_c02_w.ie_carencia_temp, r_c02_w.ie_itens_excluid_cobertura,
						r_c02_w.cd_cgc, r_c02_w.cd_cei, r_c02_w.cd_vinculo_benef, r_c02_w.ie_tipo_logradouro,
						r_c02_w.logradouro, somente_numero(r_c02_w.ds_numero), r_c02_w.ds_complemento, r_c02_w.ds_bairro,
						CASE WHEN r_c02_w.cd_municipio_ibge_resid=0 THEN null END , r_c02_w.cep, CASE WHEN r_c02_w.ie_resid_brasil='S' THEN 0 WHEN r_c02_w.ie_resid_brasil='N' THEN 1 END , CASE WHEN r_c02_w.cd_municipio_ibge_resid=0 THEN null END );
			end loop;
		end loop;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort('Erro ao gerar movimentações: '||sqlerrm(SQLSTATE));
	end;

	commit;

	begin
		select	count(*)
		into STRICT	qt_movimentacao_w
		from	pls_sib_movimento
		where	nr_seq_lote = nr_seq_lote_novo_w;

		select	max(nr_sequencia)
		into STRICT	nr_sequencia_w
		from	pls_sib_arquivo
		where	nr_seq_lote = nr_seq_lote_novo_w;

		if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
			nr_sequencia_w := nr_sequencia_w + 1;
		else
			nr_sequencia_w := 1;
		end if;

		insert	into	pls_sib_arquivo(
						nr_sequencia,
						nr_seq_lote,
						qt_movimentacao,
						dt_geracao,
						nm_usuario_geracao,
						dt_envio,
						nm_usuario_envio,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						dt_atualizacao,
						nm_usuario)
				values (	nr_sequencia_w,
						nr_seq_lote_novo_w,
						qt_movimentacao_w,
						pls_lote_sib_w.dt_geracao_arquivo,
						nm_usuario_p,
						pls_lote_sib_w.dt_envio,
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p);
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort('Erro ao gerar registro de arquivo: '||sqlerrm(SQLSTATE));
	end;

	begin
		update	pls_sib_movimento
		set	nr_seq_arquivo		= nr_sequencia_w,
			nm_usuario_nrec		= nm_usuario_p,
			dt_atualizacao_nrec	= clock_timestamp()
		where	nr_seq_lote = nr_seq_lote_p;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort('Erro ao gerar registro de arquivo: '||sqlerrm(SQLSTATE));
	end;

else
	CALL wheb_mensagem_pck.exibir_mensagem_abort('Só é permitido migrar lote ja enviado!');
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_sib_migrar_lote ( nr_seq_lote_p pls_sib_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

