-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE item_row AS (
	nr_sequencia agenda_integrada_item.nr_sequencia%TYPE
);


CREATE OR REPLACE PROCEDURE ageint_valida_msg_carencia (nr_seq_ageint_p text, cd_estabelecimento_p text, ds_mensagem_p INOUT text) AS $body$
DECLARE

TYPE item_table IS TABLE OF item_row INDEX BY integer;
	
C01 CURSOR FOR
SELECT 	nr_sequencia,
		cd_especialidade,
		get_dias_exame_ans(nr_Seq_proc_interno, cd_procedimento, ie_origem_proced, ie_tipo_Agendamento) qt_dias_cons_ans
from 	agenda_integrada_item
where 	nr_seq_agenda_int = nr_seq_ageint_p;

nr_seq_ageint_item_w agenda_integrada_item.nr_sequencia%TYPE;
cd_especialidade_w   agenda_integrada_item.cd_especialidade%TYPE;
qt_dias_cons_ans_w   especialidade_medica.qt_dias_cons_ans%TYPE;
ds_proc_item_w       proc_interno.ds_proc_exame%TYPE;
dt_carencia_w        ageint_cobertura_item.dt_carencia%TYPE;

item_w item_table;
ie_dia_util_w varchar(1);
ds_msg_concat_w varchar(4000);

nr_itens_regra_w bigint := 0;
dt_inicial_w timestamp 	    := clock_timestamp();
nr_itens_w bigint 		:= 0;
dt_rn259_w	timestamp;
BEGIN
	
FOR c01_w IN C01 LOOP
		
	BEGIN
		
		nr_seq_ageint_item_w := c01_w.nr_sequencia;
		cd_especialidade_w := c01_w.cd_especialidade;
		qt_dias_cons_ans_w	:= c01_w.qt_dias_cons_ans;
	
		select max(dt_carencia)+1
		into STRICT   dt_carencia_w
		from ageint_cobertura_item
	 	where trunc(dt_referencia) = trunc(clock_timestamp())
	 	and   cd_estabelecimento = cd_estabelecimento_p
	 	and   nr_seq_ageint_item = nr_seq_ageint_item_w;
	
	 	IF (dt_carencia_w IS NOT NULL AND dt_carencia_w::text <> '') THEN
	
			ie_dia_util_w := obter_se_dia_util(dt_inicial_w, cd_estabelecimento_p);	
		
			WHILE(ie_dia_util_w = 'N') LOOP
				BEGIN
					dt_inicial_w := dt_inicial_w + 1;
					ie_dia_util_w := obter_se_dia_util(dt_inicial_w, cd_estabelecimento_p);
				END;
			END LOOP;
			
			IF (cd_especialidade_w IS NOT NULL AND cd_especialidade_w::text <> '') THEN
				SELECT max(qt_dias_cons_ans)
				INTO STRICT   qt_dias_cons_ans_w
				FROM especialidade_medica
				WHERE cd_especialidade = cd_especialidade_w;
			END IF;
			
			SELECT sugest_dias_futuros_uteis(dt_inicial_w, qt_dias_cons_ans_w, cd_estabelecimento_p)
			INTO STRICT dt_rn259_w
			;
			
			IF (dt_carencia_w > dt_rn259_w) AND (coalesce(qt_dias_cons_ans_w,0) > 0) THEN
				nr_itens_w := nr_itens_w + 1;
				item_w[nr_itens_w].nr_sequencia := nr_seq_ageint_item_w;
		 	END IF;
		END IF;
		IF (coalesce(qt_dias_cons_ans_w,0) > 0) THEN
			nr_itens_regra_w := nr_itens_regra_w + 1;
		END IF;
	END;
END LOOP;

IF (nr_itens_w <> 0) AND (nr_itens_regra_w <> 0) THEN

	IF (nr_itens_w = nr_itens_regra_w) THEN
		ds_mensagem_p := wheb_mensagem_pck.get_texto(1191095); --maior que todos itens
	ELSE
		FOR indx IN 1..item_w.count LOOP
		
			SELECT max(substr(Obter_Item_Grid_Ageint(nr_seq_proc_interno, cd_medico, cd_Especialidade,cd_estabelecimento_p,nr_seq_item_selec),1,255))
			INTO STRICT ds_proc_item_w
			FROM agenda_integrada_item
			WHERE nr_sequencia = item_w[indx].nr_sequencia;
		
			IF (coalesce(ds_msg_concat_w::text, '') = '') THEN
				ds_msg_concat_w := item_w[indx].nr_sequencia || ' - ' || ds_proc_item_w;
			ELSE
				ds_msg_concat_w := ds_msg_concat_w || ',' || item_w[indx].nr_sequencia || ' - ' || ds_proc_item_w;
			END IF;
		END LOOP;
		ds_mensagem_p := replace(wheb_mensagem_pck.get_texto(1191096), '#@DS_ITENS#@', ds_msg_concat_w); --maior que alguns itens
	END IF;
END IF;
	
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_valida_msg_carencia (nr_seq_ageint_p text, cd_estabelecimento_p text, ds_mensagem_p INOUT text) FROM PUBLIC;

