-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_fatura_corpo (nr_seq_fatura_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_linhas_w			varchar(74);
nr_linha_w			smallint;
nr_seq_evento_w			bigint;
nr_seq_pls_fatura_w		bigint;
vl_evento_w			double precision;
nr_seq_fat_corpo_w		bigint;
nr_sequencia_w			bigint;
vl_total_fatura_w		double precision := 0;
vl_total_corpo_w		double precision := 0;
vl_faturado_w			double precision := 0;
vl_faturado_ndc_w		double precision := 0;
nr_titulo_w			ptu_fatura.nr_fatura%type;
nr_titulo_ndc_w			bigint;
ie_documento_w			varchar(1) := null;

c01 CURSOR FOR
	SELECT	nr_seq_evento,
		sum(coalesce(vl_evento,0)),
		nr_sequencia
	from	pls_fatura_evento
	where	nr_seq_fatura  = nr_seq_pls_fatura_w
	group by nr_seq_evento,
		nr_sequencia;


BEGIN

select	max(nr_seq_pls_fatura),
	max(nr_fatura),
	(max(nr_nota_credito_debito))::numeric
into STRICT	nr_seq_pls_fatura_w,
	nr_titulo_w,
	nr_titulo_ndc_w
from	ptu_fatura
where	nr_sequencia = nr_seq_fatura_p;

if (nr_titulo_ndc_w IS NOT NULL AND nr_titulo_ndc_w::text <> '') and (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
	ie_documento_w := null;
elsif (nr_titulo_ndc_w IS NOT NULL AND nr_titulo_ndc_w::text <> '') then
	ie_documento_w := '1';
elsif (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
	ie_documento_w := '2';
end if;

open c01;
loop
fetch c01 into
	nr_seq_evento_w,
	vl_evento_w,
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	select 	substr(upper(elimina_acentos(ds_evento)),1,74)
	into STRICT	ds_linhas_w
	from	pls_evento_faturamento
	where	nr_sequencia = nr_seq_evento_w;

	select	sum(vl_faturado),
		sum(vl_faturado_ndc)
	into STRICT	vl_faturado_w,
		vl_faturado_ndc_w
	from	pls_fatura_conta
	where	nr_seq_fatura_evento = nr_sequencia_w;

	if (nr_titulo_ndc_w IS NOT NULL AND nr_titulo_ndc_w::text <> '') and (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
		if (vl_faturado_ndc_w > 0) then
			select	coalesce(max(nr_linha),0) + 1
			into STRICT	nr_linha_w
			from	ptu_fatura_corpo
			where	nr_seq_fatura = nr_seq_fatura_p;

			select	nextval('ptu_fatura_corpo_seq')
			into STRICT	nr_seq_fat_corpo_w
			;

			insert into ptu_fatura_corpo(nr_sequencia,
				nr_seq_fatura,
				nr_linha,
				ds_linha,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				vl_item,
				ie_documento)
			values (nr_seq_fat_corpo_w,
				nr_seq_fatura_p,
				nr_linha_w,
				ds_linhas_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				vl_faturado_ndc_w,
				coalesce(ie_documento_w,'1'));
		end if;

		if (vl_faturado_w > 0) then
			select	coalesce(max(nr_linha),0) + 1
			into STRICT	nr_linha_w
			from	ptu_fatura_corpo
			where	nr_seq_fatura = nr_seq_fatura_p;

			select	nextval('ptu_fatura_corpo_seq')
			into STRICT	nr_seq_fat_corpo_w
			;

			insert into ptu_fatura_corpo(nr_sequencia,
				nr_seq_fatura,
				nr_linha,
				ds_linha,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				vl_item,
				ie_documento)
			values (nr_seq_fat_corpo_w,
				nr_seq_fatura_p,
				nr_linha_w,
				ds_linhas_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				vl_faturado_w,
				coalesce(ie_documento_w,'2'));
		end if;
	else
		select	coalesce(max(nr_linha),0) + 1
		into STRICT	nr_linha_w
		from	ptu_fatura_corpo
		where	nr_seq_fatura = nr_seq_fatura_p;

		select	nextval('ptu_fatura_corpo_seq')
		into STRICT	nr_seq_fat_corpo_w
		;

		insert into ptu_fatura_corpo(nr_sequencia,
			nr_seq_fatura,
			nr_linha,
			ds_linha,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			vl_item,
			ie_documento)
		values (nr_seq_fat_corpo_w,
			nr_seq_fatura_p,
			nr_linha_w,
			ds_linhas_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			vl_faturado_ndc_w + vl_faturado_w,
			coalesce(ie_documento_w,'1'));
	end if;
	end;
end loop;
close C01;

if (nr_seq_fat_corpo_w IS NOT NULL AND nr_seq_fat_corpo_w::text <> '') then
	select	coalesce(sum(vl_fatura),0)
	into STRICT	vl_total_fatura_w
	from	pls_fatura
	where	nr_sequencia	= nr_seq_pls_fatura_w;

	select	coalesce(sum(vl_item),0)
	into STRICT	vl_total_corpo_w
	from	ptu_fatura_corpo
	where	nr_seq_fatura	= nr_seq_fatura_p;

	if (vl_total_fatura_w > vl_total_corpo_w) then
		ds_linhas_w := 'VALOR INTERCAMBIO';

		select	coalesce(max(nr_linha),0) + 1
		into STRICT	nr_linha_w
		from	ptu_fatura_corpo
		where	nr_seq_fatura = nr_seq_fatura_p;

		select	nextval('ptu_fatura_corpo_seq')
		into STRICT	nr_seq_fat_corpo_w
		;

		vl_evento_w := coalesce(vl_total_fatura_w,0) - coalesce(vl_total_corpo_w,0);

		insert into ptu_fatura_corpo(nr_sequencia,
			nr_seq_fatura,
			nr_linha,
			ds_linha,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			vl_item,
			ie_documento)
		values (nr_seq_fat_corpo_w,
			nr_seq_fatura_p,
			nr_linha_w,
			ds_linhas_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			vl_evento_w,
			coalesce(ie_documento_w,'2'));
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_fatura_corpo (nr_seq_fatura_p bigint, nm_usuario_p text) FROM PUBLIC;

