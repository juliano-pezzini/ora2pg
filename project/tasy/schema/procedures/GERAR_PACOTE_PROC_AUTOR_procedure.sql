-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_pacote_proc_autor (cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_autorizacao_p bigint, nr_seq_pacote_p bigint) AS $body$
DECLARE


cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_proc_interno_w	bigint;
nr_seq_autorizacao_w	bigint;
nr_seq_proc_autor_w	bigint;
cd_material_w		bigint;


c01 CURSOR FOR
SELECT	cd_procedimento,
	ie_origem_proced,
	nr_seq_proc_interno
from	pacote_procedimento
where	nr_seq_pacote	= nr_seq_pacote_p
and ((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '') or (nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> ''))
and	ie_inclui_exclui	= 'I';

c02 CURSOR FOR
SELECT	cd_material
from	pacote_material
where	nr_seq_pacote	= nr_seq_pacote_p
and	(cd_material IS NOT NULL AND cd_material::text <> '')
and	ie_inclui_exclui	= 'I';


BEGIN

select	max(nr_seq_autorizacao)
into STRICT	nr_seq_autorizacao_w
from	autorizacao_convenio
where	nr_sequencia	= nr_seq_autorizacao_p;

open c01;
loop
fetch c01 into
	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_proc_interno_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
		select 	max(cd_procedimento),
			max(ie_origem_proced)
		into STRICT 	cd_procedimento_w,
			ie_origem_proced_w
		from 	proc_interno
		where	nr_sequencia	= nr_seq_proc_interno_w;
	end if;

	if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then

		insert into procedimento_autorizado(nr_sequencia,
			nr_sequencia_autor,
			nr_seq_autorizacao,
			cd_procedimento,
			ie_origem_proced,
			nr_seq_proc_interno,
			qt_solicitada,
			qt_autorizada,
			dt_atualizacao,
			nm_usuario,
			ds_observacao)
		values (nextval('procedimento_autorizado_seq'),
			nr_seq_autorizacao_p,
			nr_seq_autorizacao_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_proc_interno_w,
			1,
			0,
			clock_timestamp(),
			nm_usuario_p,
			substr(wheb_mensagem_pck.get_texto(455595, 'NR_SEQ_PACOTE='||nr_seq_pacote_p),1,2000)); /* Procedimento gerado pelo pacote #@NR_SEQ_PACOTE#@ */
	end if;

end loop;
close c01;

open c02;
loop
fetch c02 into
	cd_material_w;
EXIT WHEN NOT FOUND; /* apply on c02 */

	insert into material_autorizado(nr_sequencia,
		nr_sequencia_autor,
		nr_seq_autorizacao,
		cd_material,
		qt_solicitada,
		qt_autorizada,
		dt_atualizacao,
		nm_usuario,
		ds_observacao)
	values (nextval('material_autorizado_seq'),
		nr_seq_autorizacao_p,
		nr_seq_autorizacao_w,
		cd_material_w,
		1,
		0,
		clock_timestamp(),
		nm_usuario_p,
		substr(wheb_mensagem_pck.get_texto(455597, 'NR_SEQ_PACOTE='||nr_seq_pacote_p),1,2000)); /* Material gerado pelo pacote #@NR_SEQ_PACOTE#@ */
end loop;
close c02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_pacote_proc_autor (cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_autorizacao_p bigint, nr_seq_pacote_p bigint) FROM PUBLIC;

