-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_gerar_reg_m600_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE

 
aliquota_cofins_w		double precision;
cd_modelo_w			varchar(2);
cd_tributo_cofins_w		smallint;
ds_arquivo_w			varchar(4000);
ds_arquivo_compl_w		varchar(4000);
ds_linha_w			varchar(8000);
ie_ind_incidencia_trib_w	integer;		
nr_seq_registro_w		bigint	:= nr_sequencia_p;
nr_seq_regra_efd_w		bigint;
nr_versao_efd_w			varchar(5);
nr_linha_w			bigint	:= qt_linha_p;
sep_w				varchar(1)	:= ds_separador_p;
tp_registro_w			varchar(4);
vl_material_incentivo_w		double precision	:= 0;
vl_base_calculo_tributo_w	double precision	:= 0;
vl_base_calculo_cumulativo_w	double precision	:= 0;
vl_base_calculo_nao_cum_w	double precision	:= 0;
vl_base_calculo_total_w		double precision	:= 0;
vl_contribuicao_cumulativo_w	double precision	:= 0;
vl_contribuicao_nao_cum_w	double precision	:= 0;
vl_retido_cumulativo_w		double precision	:= 0;
vl_retido_nao_cum_w		double precision	:= 0;
ie_local_gerar_sped_w		varchar(1);
qt_registros_w			bigint;
nr_seq_data_w			bigint;
cd_empresa_w			smallint;
vl_deducoes_w			double precision	:= 0;
ie_consistir_cpf_cnpj_w		varchar(1);
ie_nota_entrada_w		varchar(1);
ie_buscar_data_w		varchar(1);
ie_nota_cancelada_w		varchar(1);
vl_retido_cum_w			double precision	:= 0;
vl_deducoes_cum_w		double precision	:= 0;
vl_base_calculo_cum_w		double precision;
vl_contribuicao_cum_w		double precision;
vl_deducoes_nao_cum_w		double precision;
ie_somar_trib_sai_w		varchar(1);
vl_campo_02_w			double precision;
vl_campo_05_w			double precision;
vl_campo_06_w			double precision;
vl_campo_07_w			double precision;
vl_campo_08_w			double precision;
vl_campo_09_w			double precision;
vl_campo_10_w			double precision;
vl_campo_11_w			double precision;
vl_campo_12_w			double precision;
vl_campo_13_w			double precision;
nr_num_campo_w			varchar(2);
vl_debito_w			double precision;

c02 CURSOR FOR 
	SELECT	a.nr_nota_fiscal, 
		a.vl_total_nota vl_total_nota, 
		a.nr_sequencia 
	from	nota_fiscal a, 
		operacao_nota b 
	where	a.cd_operacao_nf = b.cd_operacao_nf 
	and	a.vl_total_nota > 0 
	and	a.cd_estabelecimento = cd_estabelecimento_p 
	and	b.ie_operacao_fiscal = 'S' 
	and	a.dt_emissao between dt_inicio_p and fim_dia(dt_fim_p) 
	and (b.ie_servico = 'S') 
	and	(a.dt_atualizacao_estoque IS NOT NULL AND a.dt_atualizacao_estoque::text <> '') 
	and	a.ie_situacao <> 3 
	and	(a.nr_nfe_imp IS NOT NULL AND a.nr_nfe_imp::text <> '');

vet02	C02%RowType;


BEGIN 
select	cd_empresa 
into STRICT	cd_empresa_w 
from	estabelecimento 
where	cd_estabelecimento	= cd_estabelecimento_p;
 
select	nr_seq_regra_efd 
into STRICT	nr_seq_regra_efd_w 
from	fis_efd_controle 
where	nr_sequencia	= nr_seq_controle_p;
 
select	coalesce(max(ie_somar_trib_sai),'N') 
into STRICT	ie_somar_trib_sai_w 
from	fis_regra_efd_a100 
where	nr_seq_regra_efd	= nr_seq_regra_efd_w;
 
select	ie_consistir_cpf_cnpj 
into STRICT	ie_consistir_cpf_cnpj_w 
from	fis_efd_controle 
where	nr_sequencia	= nr_seq_controle_p;
 
select	coalesce(max(ie_nota_entrada),'N'), 
	coalesce(max(ie_buscar_data),'N'), 
	coalesce(max(ie_nota_cancelada),'N') 
into STRICT	ie_nota_entrada_w, 
	ie_buscar_data_w, 
	ie_nota_cancelada_w 
from	fis_regra_efd_a100 
where	nr_seq_regra_efd	= nr_seq_regra_efd_w;
 
select	count(*) 
into STRICT	qt_registros_w 
from	ctb_mes_ref 
where	trunc(dt_referencia,'mm')	= trunc(dt_inicio_p,'mm') 
and	cd_empresa			= cd_empresa_w;
 
if (qt_registros_w = 1) then 
	select	nr_sequencia 
	into STRICT	nr_seq_data_w 
	from 	ctb_mes_ref 
	where 	trunc(dt_referencia,'mm')	= trunc(dt_inicio_p,'mm') 
	and	cd_empresa			= cd_empresa_w;
end if;
 
select	cd_tributo_cofins 
into STRICT	cd_tributo_cofins_w 
from	fis_regra_efd 
where	nr_sequencia	= nr_seq_regra_efd_w;
 
-- Buscar qual o número de sequência da regra do lote que está sendo gerado 
select	nr_seq_regra_efd 
into STRICT	nr_seq_regra_efd_w 
from	fis_efd_controle 
where	nr_sequencia	= nr_seq_controle_p;
 
-- Buscar qual o tributo COFINS cadastrado na tabela "FIS_REGRA_EFD" para identificar o tributo que deve ser considerado no cálculo do SPED e também qual o tipo de tributação (cumulativo, não cumulativo ou ambos) 
select	cd_tributo_cofins, 
	ie_ind_incidencia_trib 
into STRICT	cd_tributo_cofins_w, 
	ie_ind_incidencia_trib_w 
from	fis_regra_efd 
where	nr_sequencia	= nr_seq_regra_efd_w;
 
-- Buscar a alíquota do tributo COFINS que será usado no SPED 
select	max(pr_imposto) 
into STRICT	aliquota_cofins_w 
from	regra_calculo_imposto	r, 
	tributo			d 
where	exists (SELECT 1 
		from	fis_regra_efd	e, 
			tributo		d 
		where	d.cd_tributo	= e.cd_tributo_cofins 
		and	r.cd_tributo	= e.cd_tributo_cofins 
		and	e.nr_sequencia	= nr_seq_regra_efd_w 
		and	ie_tipo_tributo	= 'COFINS');
 
select	nr_seq_regra_efd 
into STRICT	nr_seq_regra_efd_w 
from	fis_efd_controle 
where	nr_sequencia	= nr_seq_controle_p;
 
select	ie_ind_incidencia_trib 
into STRICT	ie_ind_incidencia_trib_w 
from	fis_regra_efd 
where	nr_sequencia	= nr_seq_regra_efd_w;
 
 
ie_local_gerar_sped_w := obter_param_usuario(5500, 25, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_local_gerar_sped_w);
 
if	((ie_local_gerar_sped_w = 'N') or (ie_local_gerar_sped_w = 'A')) then 
	if	((ie_ind_incidencia_trib_w = 1) or (ie_ind_incidencia_trib_w = 3)) then --Apenas regime não-cumulativo, ou ambos 
		vl_retido_nao_cum_w		:= 0;
		vl_contribuicao_nao_cum_w	:= 0;
	end if;
 
	if	((ie_ind_incidencia_trib_w = 2) or (ie_ind_incidencia_trib_w = 3)) then --Apenas regime cumulativo, ou ambos 
		-- Calcular o valor da base de cálculo do COFINS (vl_base_calculo_w) e o valor total do COFINS que foi retido na fonte (vl_retido_w) com a alíquota básica (cadastrada nos cadastros gerais [shift + F11]) 
		select	sum(a.vl_base_calculo), 
			sum(vl_cofins_retido) 
		into STRICT	vl_base_calculo_cumulativo_w, 
			vl_retido_cumulativo_w 
		from	fis_efd_nota_arq	a 
		where	a.nm_usuario		= nm_usuario_p 
		and	a.nr_seq_controle	= nr_seq_controle_p;
		 
		-- Valor da contribuição cumulativa 
		vl_contribuicao_cumulativo_w	:= ((vl_base_calculo_cumulativo_w * aliquota_cofins_w) / 100);
 
		select	count(*) 
		into STRICT	qt_registros_w 
		from	fis_efd_conta_contabil	c, 
			fis_efd_regra_tipo_ct	r 
		where	r.nr_sequencia					= c.nr_seq_tipo_ct 
		and	coalesce(c.cd_estabelecimento, cd_estabelecimento_p)	= cd_estabelecimento_p 
		and	coalesce(c.cd_empresa, cd_empresa_p)			= cd_empresa_p 
		and	r.ie_tipo_ct					= 'DD';
		 
		if (qt_registros_w > 0) then 
			select	sum(round((CASE WHEN coalesce(c.ie_tipo_valor,'VM')='VM' THEN a.vl_movimento WHEN coalesce(c.ie_tipo_valor,'VM')='VC' THEN a.vl_credito WHEN coalesce(c.ie_tipo_valor,'VM')='VD' THEN a.vl_debito END )::numeric,2)) * aliquota_cofins_w/100 vl_cofins 
			into STRICT	vl_deducoes_w 
			from 	ctb_balancete_v		a, 
				fis_efd_conta_contabil	c, 
				fis_efd_regra_tipo_ct	r 
			where 	a.cd_conta_contabil				= c.cd_conta_contabil 
			and	r.nr_sequencia					= c.nr_seq_tipo_ct 
			and	r.ie_tipo_ct					= 'DD' 
			and	a.nr_seq_mes_ref				= nr_seq_data_w 
			and	obter_empresa_estab(a.cd_estabelecimento)	= coalesce(c.cd_empresa, cd_empresa_p) 
			and	a.ie_normal_encerramento			= 'N';
		 
			vl_base_calculo_cumulativo_w	:= vl_base_calculo_cumulativo_w - vl_deducoes_w;
		end if;
	end if;
 
	vl_campo_02_w	:= case when vl_contribuicao_nao_cum_w > 0 then vl_contribuicao_nao_cum_w else 0 end;
	vl_campo_05_w	:= vl_campo_02_w;
	vl_campo_06_w	:= case when vl_retido_nao_cum_w > 0 then vl_retido_nao_cum_w else 0 end;
	vl_campo_08_w	:= coalesce(vl_campo_02_w - vl_campo_06_w,0);
	vl_campo_08_w	:= case when vl_campo_08_w > 0 then vl_campo_08_w else 0 end;
	vl_campo_09_w	:= case when vl_contribuicao_cumulativo_w > 0 then vl_contribuicao_cumulativo_w else 0 end;
	vl_campo_10_w	:= case when vl_retido_cumulativo_w > 0 then vl_retido_cumulativo_w else 0 end;
	 
	if (vl_campo_10_w > vl_campo_09_w) then 
		vl_campo_10_w	:= vl_campo_09_w;
	end if;
	 
	vl_campo_11_w	:= case when vl_deducoes_w > 0 then vl_deducoes_w else 0 end;
	vl_campo_12_w	:= coalesce(vl_campo_09_w - vl_campo_10_w - vl_campo_11_w,0);
	vl_campo_12_w	:= case when vl_campo_12_w > 0 then vl_campo_12_w else 0 end;
	vl_campo_13_w	:= coalesce((vl_campo_02_w - vl_campo_06_w) + (vl_campo_09_w - vl_campo_10_w - vl_campo_11_w),0);
	vl_campo_13_w	:= case when vl_campo_13_w > 0 then vl_campo_13_w else 0 end;
	 
	 
	-- Montagem das linhas do arquivo 
	ds_linha_w	:=	sep_w || 'M600' 						|| -- Campo 01 - Registro 
				sep_w || replace(campo_mascara(coalesce(vl_campo_02_w,0),2),'.',',')	|| -- Campo 02 - Contribuição não cumulativa 
				sep_w || 0							|| -- Campo 03 - Crédito anterior período atual (não cumulativo) 
				sep_w || 0							|| -- Campo 04 - Crédito períodos anteriores (não cumulativo) 
				sep_w || replace(campo_mascara(coalesce(vl_campo_05_w,0),2),'.',',')	|| -- Campo 05 - Total Contribuição não cumulativa (Campo 2 - campo 3 - campo4) 
				sep_w || replace(campo_mascara(coalesce(vl_campo_06_w,0),2),'.',',')	|| -- Campo 06 - Valor retido na fonte (não cumulativo) 
				sep_w || 0							|| -- Campo 07 - Outras deduções (não cumulativo) 
				sep_w || replace(campo_mascara(coalesce(vl_campo_08_w,0),2),'.',',')	|| -- Campo 08 - Contribuição a recolher (Campo 6 - campo7 - campo8) (não cumulativo) 
				sep_w || replace(campo_mascara(coalesce(vl_campo_09_w,0),2),'.',',')	|| -- Campo 09 - Contribuição cumulativa 
				sep_w || replace(campo_mascara(coalesce(vl_campo_10_w,0),2),'.',',')	|| -- Campo 10 - Valor retido na fonte (cumulativo) 
				sep_w || replace(campo_mascara(coalesce(vl_campo_11_w,0),2),'.',',')	|| -- Campo 11 - Outras deduções (cumulativo) 
				sep_w || replace(campo_mascara(coalesce(vl_campo_12_w,0),2),'.',',')	|| -- Campo 12 - Contribuição cumulativa a pagar (Campo09 - campo10 - campo11 ) 
				sep_w || replace(campo_mascara(coalesce(vl_campo_13_w,0),2),'.',',')	|| -- Campo 13 - Contribuição a recolher (Campo08 + campo12) 
				sep_w;
				 
	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w	:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;
		 
	insert into fis_efd_arquivo(nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		nr_seq_controle_efd, 
		nr_linha, 
		ds_arquivo, 
		ds_arquivo_compl, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		cd_registro) 
	values (nr_seq_registro_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_seq_controle_p, 
		nr_linha_w, 
		ds_arquivo_w, 
		ds_arquivo_compl_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		'M600');
elsif (ie_local_gerar_sped_w = 'C') then 
	select sum(vl_base_tributo) 
	into STRICT	vl_base_calculo_cum_w 
	from	w_efd_dados_arq;
 
	select	sum(y.vl_operacao) * 7.6/100 
	into STRICT	vl_contribuicao_nao_cum_w 
	from (SELECT	a.vl_movimento 		vl_operacao 
		from 	ctb_balancete_v	a 
		where 	a.nr_seq_mes_ref		= nr_seq_data_w 
		and	a.cd_conta_contabil		= '2441' 
		and	a.cd_estabelecimento		= cd_estabelecimento_p 
		and	a.ie_normal_encerramento	= 'N') y;
 
	vl_base_calculo_tributo_w	:= vl_base_calculo_cum_w;		--Para passar como parâmetro para o M210 
	vl_base_calculo_nao_cum_w 	:= vl_contribuicao_nao_cum_w;			
	vl_contribuicao_cumulativo_w	:= (vl_base_calculo_tributo_w * aliquota_cofins_w)/100;
 
	select	round((sum(y.vl_cofins))::numeric,2) vl_pis 
	into STRICT	vl_retido_cum_w 
	from (SELECT	a.cd_cgc, 
			b.dt_recebimento, 
			sum(c.vl_adicional) vl_pis, 
			null vl_cofins, 
			null vl_base_pis 
		from 	convenio a, 
			convenio_receb b, 
			convenio_receb_adic c, 
			transacao_financeira d 
		where 	a.cd_convenio = b.cd_convenio 
		and 	b.nr_sequencia = c.nr_seq_receb 
		and 	c.nr_seq_trans_financ = d.nr_sequencia 
		and	d.nr_sequencia = 938 -- pis 
		and	b.dt_recebimento between dt_inicio_p and dt_fim_p 
		group by a.cd_cgc, b.dt_recebimento 
		
union
 
		SELECT	a.cd_cgc, 
			b.dt_recebimento, 
			null vl_pis, 
			sum(c.vl_adicional) vl_cofins, 
			null vl_base_pis 
		from 	convenio a, 
			convenio_receb b, 
			convenio_receb_adic c, 
			transacao_financeira d 
		where 	a.cd_convenio = b.cd_convenio 
		and 	b.nr_sequencia = c.nr_seq_receb 
		and 	c.nr_seq_trans_financ = d.nr_sequencia 
		and	d.nr_sequencia = 939 -- cofins 
		and	b.dt_recebimento between dt_inicio_p and dt_fim_p 
		group by a.cd_cgc, b.dt_recebimento 
		
union
 
		select	a.cd_cgc, 
			b.dt_recebimento, 
			null vl_pis, 
			null vl_cofins, 
			sum(b.vl_recebimento) vl_base_pis 
		from 	convenio a, 
			convenio_receb b, 
			convenio_receb_adic c, 
			transacao_financeira d 
		where 	a.cd_convenio = b.cd_convenio 
		and 	b.nr_sequencia = c.nr_seq_receb 
		and 	c.nr_seq_trans_financ = d.nr_sequencia 
		and	d.nr_sequencia = 938 -- pis 
		and	b.dt_recebimento between dt_inicio_p and dt_fim_p 
		group by a.cd_cgc, b.dt_recebimento) y;
 
		select	count(*) 
		into STRICT	qt_registros_w 
		from	fis_efd_conta_contabil c, 
			fis_efd_regra_tipo_ct r 
		where	r.nr_sequencia = c.nr_seq_tipo_ct 
		and	coalesce(c.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p 
		and	coalesce(c.cd_empresa, cd_empresa_p) = cd_empresa_p 
		and	r.ie_tipo_ct = 'DD';
		 
		if (qt_registros_w > 0) then 
			select	sum(round((CASE WHEN coalesce(c.ie_tipo_valor,'VM')='VM' THEN a.vl_movimento WHEN coalesce(c.ie_tipo_valor,'VM')='VC' THEN a.vl_credito WHEN coalesce(c.ie_tipo_valor,'VM')='VD' THEN a.vl_debito END )::numeric,2)) * aliquota_cofins_w/100 vl_cofins 
			into STRICT	vl_deducoes_cum_w 
			from 	ctb_balancete_v a, 
				fis_efd_conta_contabil c, 
				fis_efd_regra_tipo_ct r 
			where 	a.cd_conta_contabil				= c.cd_conta_contabil 
			and	r.nr_sequencia					= c.nr_seq_tipo_ct 
			and	r.ie_tipo_ct					= 'DD' 
			and	a.nr_seq_mes_ref				= nr_seq_data_w 
			and	obter_empresa_estab(a.cd_estabelecimento)	= coalesce(c.cd_empresa, cd_empresa_p) 
			and	a.ie_normal_encerramento			= 'N';
		end if;
 
	vl_retido_nao_cum_w	:= 0;
	vl_deducoes_nao_cum_w	:= 0;
 
	vl_campo_02_w	:= case when vl_contribuicao_nao_cum_w > 0 then vl_contribuicao_nao_cum_w else 0 end;
	vl_campo_05_w	:= vl_campo_02_w;
	vl_campo_06_w	:= vl_retido_nao_cum_w;
	vl_campo_07_w	:= vl_deducoes_nao_cum_w;
	vl_campo_08_w	:= coalesce(vl_campo_02_w - vl_retido_nao_cum_w - vl_deducoes_nao_cum_w,0);
	vl_campo_08_w	:= case when vl_campo_08_w > 0 then vl_campo_08_w else 0 end;
	vl_campo_09_w	:= case when vl_contribuicao_cumulativo_w > 0 then vl_contribuicao_cumulativo_w else 0 end;
	vl_campo_10_w	:= case when vl_retido_cum_w > 0 then vl_retido_cum_w else 0 end;
	 
	if (vl_campo_10_w > vl_campo_09_w) then 
		vl_campo_10_w	:= vl_campo_09_w;
	end if;
	 
	vl_campo_11_w	:= case when vl_deducoes_cum_w > 0 then vl_deducoes_cum_w else 0 end;
	vl_campo_12_w	:= coalesce(vl_campo_09_w - vl_campo_10_w - vl_campo_11_w,0);
	vl_campo_12_w	:= case when vl_campo_12_w > 0 then vl_campo_12_w else 0 end;
	vl_campo_13_w	:= coalesce((vl_campo_02_w - vl_retido_nao_cum_w - vl_deducoes_nao_cum_w) + (vl_campo_09_w - vl_campo_10_w - vl_campo_11_w),0);
	vl_campo_13_w	:= case when vl_campo_13_w > 0 then vl_campo_13_w else 0 end;
 
	-- Montagem das linhas do arquivo 
	ds_linha_w	:=	sep_w || 'M600' 						|| -- Campo 01 - Registro 
				sep_w || replace(campo_mascara(coalesce(vl_campo_02_w,0),2),'.',',')	|| -- Campo 02 - Contribuição não cumulativa 
				sep_w || 0							|| -- Campo 03 - Crédito anterior período atual (não cumulativo) 
				sep_w || 0							|| -- Campo 04 - Crédito períodos anteriores (não cumulativo) 
				sep_w || replace(campo_mascara(coalesce(vl_campo_05_w,0),2),'.',',')	|| -- Campo 05 - Total Contribuição não cumulativa (Campo 2 - campo 3 - campo4) 
				sep_w || replace(campo_mascara(coalesce(vl_campo_06_w,0),2),'.',',')	|| -- Campo 06 - Valor retido na fonte (não cumulativo) 
				sep_w || replace(campo_mascara(coalesce(vl_campo_07_w,0),2),'.',',')	|| -- Campo 07 - Outras deduções (não cumulativo) 
				sep_w || replace(campo_mascara(coalesce(vl_campo_08_w,0),2),'.',',')	|| -- Campo 08 - Contribuição a recolher (Campo 6 - campo7 - campo8) (não cumulativo) 
				sep_w || replace(campo_mascara(coalesce(vl_campo_09_w,0),2),'.',',')	|| -- Campo 09 - Contribuição cumulativa 
				sep_w || replace(campo_mascara(coalesce(vl_campo_10_w,0),2),'.',',')	|| -- Campo 10 - Valor retido na fonte (cumulativo) 
				sep_w || replace(campo_mascara(coalesce(vl_campo_11_w,0),2),'.',',')	|| -- Campo 11 - Outras deduções (cumulativo) 
				sep_w || replace(campo_mascara(coalesce(vl_campo_12_w,0),2),'.',',')	|| -- Campo 12 - Contribuição cumulativa a pagar (Campo09 - campo10 - campo11 ) 
				sep_w || replace(campo_mascara(coalesce(vl_campo_13_w,0),2),'.',',')	|| -- Campo 13 - Contribuição a recolher (Campo08 + campo12) 
				sep_w;
				 
	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w	:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;
 
	insert into fis_efd_arquivo(nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		nr_seq_controle_efd, 
		nr_linha, 
		ds_arquivo, 
		ds_arquivo_compl, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		cd_registro) 
	values (nr_seq_registro_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_seq_controle_p, 
		nr_linha_w, 
		ds_arquivo_w, 
		ds_arquivo_compl_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		'M600');
		 
	commit;
	 
	vl_base_calculo_tributo_w	:= 0;
end if;
 
commit;
 
qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;
 
if (trunc(dt_inicio_p,'month') >= to_date('01/04/2014','dd/mm/yyyy')) then 
	if (vl_campo_08_w > 0) then 
		vl_debito_w	:= vl_campo_08_w;
		nr_num_campo_w	:= '08';
		 
		SELECT * FROM fis_gerar_reg_m605_efd(	nr_seq_controle_p, nm_usuario_p, cd_estabelecimento_p, dt_inicio_p, dt_fim_p, cd_empresa_p, ds_separador_p, vl_debito_w, nr_num_campo_w, cd_tributo_cofins_w, qt_linha_p, nr_sequencia_p) INTO STRICT qt_linha_p, nr_sequencia_p;
	elsif (vl_campo_12_w > 0) then 
		vl_debito_w	:= vl_campo_12_w;
		nr_num_campo_w	:= '12';
		 
		SELECT * FROM fis_gerar_reg_m605_efd(	nr_seq_controle_p, nm_usuario_p, cd_estabelecimento_p, dt_inicio_p, dt_fim_p, cd_empresa_p, ds_separador_p, vl_debito_w, nr_num_campo_w, cd_tributo_cofins_w, qt_linha_p, nr_sequencia_p) INTO STRICT qt_linha_p, nr_sequencia_p;
	end if;
end if;
	 
vl_base_calculo_total_w	:= vl_base_calculo_cumulativo_w + vl_base_calculo_nao_cum_w;
 
SELECT * FROM fis_gerar_reg_m610_efd(	nr_seq_controle_p, nm_usuario_p, cd_estabelecimento_p, dt_inicio_p, dt_fim_p, cd_empresa_p, ds_separador_p, vl_base_calculo_total_w, qt_linha_p, nr_sequencia_p) INTO STRICT qt_linha_p, nr_sequencia_p;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_gerar_reg_m600_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

