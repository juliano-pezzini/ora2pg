-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_tit_pagar_comissao ( nr_seq_lote_comissao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_comissao_titulo_w	bigint;
nr_titulo_w			bigint;
cd_moeda_w			smallint;
cd_pessoa_fisica_w		varchar(10);
cd_cgc_w			varchar(14);
vl_vencimento_w			double precision;
dt_vencimento_w			timestamp;
nr_seq_trans_fin_baixa_vend_w	bigint;
cd_conta_financ_w		bigint;
nr_seq_classif_w		bigint;
ie_mes_fechado_w		varchar(2);
cd_conta_financ_regra_w		bigint	:= null;
nr_seq_comissao_w		bigint;
ie_gerou_titulo_w		varchar(1)	:= 'N';
ie_gerar_nota_fiscal_w		pls_vendedor.ie_gerar_nota_fiscal%type;
qt_sem_regra_parcelamento_w	integer;
ie_concil_contab_w		pls_visible_false.ie_concil_contab%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.dt_vencimento,
		a.vl_titulo,
		b.nr_sequencia
	from	pls_comissao_titulo	a,
		pls_comissao		b,
		pls_vendedor		c
	where	a.nr_seq_comissao	= b.nr_sequencia
	and	b.nr_seq_canal_venda	= c.nr_sequencia
	and	b.nr_seq_lote		= nr_seq_lote_comissao_p
	and	coalesce(c.ie_forma_pagamento,'T') = 'T';


BEGIN

select	count(1)
into STRICT	qt_sem_regra_parcelamento_w
from	pls_comissao
where	ie_regra_parcelamento = 'N'
and	nr_seq_lote = nr_seq_lote_comissao_p;

if (qt_sem_regra_parcelamento_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(339489);
	/* Mensagem: Para que as notas fiscais/títulos a pagar possam ser gerados, favor criar uma regra de parcelamento para as comissões em azul.
	                        Obs: criar as regras na função OPS - Gestão de Vendedores e Comissões > Canal de venda > Cadastros > Regra de parcelamento. */
end if;

select	pls_obter_se_mes_fechado(dt_referencia,'T',cd_estabelecimento_p)
into STRICT	ie_mes_fechado_w
from	pls_lote_comissao
where	nr_sequencia	= nr_seq_lote_comissao_p;

if (ie_mes_fechado_w	= 'S') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort( 267308, null );
end if;

select	max(nr_seq_trans_fin_baixa_vend),
	max(cd_conta_financ)
into STRICT	nr_seq_trans_fin_baixa_vend_w,
	cd_conta_financ_w
from	pls_parametros
where	cd_estabelecimento = cd_estabelecimento_p;

open C01;
loop
fetch C01 into
	nr_seq_comissao_titulo_w,
	dt_vencimento_w,
	vl_vencimento_w,
	nr_seq_comissao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	select	c.cd_pessoa_fisica,
		c.cd_cgc,
		c.ie_gerar_nota_fiscal
	into STRICT	cd_pessoa_fisica_w,
		cd_cgc_w,
		ie_gerar_nota_fiscal_w
	from	pls_comissao		a,
		pls_vendedor		c
	where	a.nr_seq_canal_venda	= c.nr_sequencia
	and	a.nr_sequencia		= nr_seq_comissao_w;
	
	cd_conta_financ_regra_w := pls_obter_conta_financ_regra(	'CV', null, cd_estabelecimento_p, null, null, null, null, null, null, null, null, null, null, nr_seq_comissao_w, null, null, null, cd_conta_financ_regra_w);
					
	cd_moeda_w := 1;
	
	select	nextval('titulo_pagar_seq')
	into STRICT	nr_titulo_w
	;
	
	insert into titulo_pagar(nr_titulo, cd_estabelecimento, dt_atualizacao,
		nm_usuario, dt_emissao, dt_vencimento_original,
		dt_vencimento_atual, vl_titulo, vl_saldo_titulo,
		vl_saldo_juros, vl_saldo_multa, cd_moeda,
		tx_juros, tx_multa, cd_tipo_taxa_juro,
		cd_tipo_taxa_multa, ie_situacao, ie_origem_titulo,
		ie_tipo_titulo, cd_pessoa_fisica, cd_cgc,
		nr_seq_trans_fin_baixa)
	values (	nr_titulo_w, cd_estabelecimento_p, clock_timestamp(),
		nm_usuario_p, clock_timestamp(), dt_vencimento_w,
		dt_vencimento_w, vl_vencimento_w, vl_vencimento_w,
		0, 0, cd_moeda_w,
		0, 0, 1,
		1, 'A', '8',
		10, cd_pessoa_fisica_w, cd_cgc_w,
		nr_seq_trans_fin_baixa_vend_w);
	
	CALL atualizar_inclusao_tit_pagar(nr_titulo_w,nm_usuario_p);
	
	if (coalesce(coalesce(cd_conta_financ_regra_w,cd_conta_financ_w),0) <> 0) then
		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_seq_classif_w
		from	titulo_pagar_classif
		where	nr_titulo	= nr_titulo_w;
		
		insert into titulo_pagar_classif(nr_titulo, nr_sequencia, vl_titulo,
			dt_atualizacao, nm_usuario, cd_conta_contabil,
			cd_centro_custo, nr_seq_conta_financ, nr_seq_trans_fin,
			nr_contrato, vl_desconto, vl_original,
			vl_acrescimo)
		values (	nr_titulo_w, nr_seq_classif_w, vl_vencimento_w,
			clock_timestamp(), nm_usuario_p, null,
			null, coalesce(cd_conta_financ_regra_w, cd_conta_financ_w), null,
			null, null, null,
			null);
	end if;
	
	CALL Gerar_Tributo_Titulo(nr_titulo_w, nm_usuario_p, 'N', null, null, null, null, null, cd_estabelecimento_p, null);
		
	update	pls_comissao_titulo
	set	nr_titulo	= nr_titulo_w
	where	nr_sequencia	= nr_seq_comissao_titulo_w;
	
	ie_gerou_titulo_w	:= 'S';	
	
	if (ie_gerar_nota_fiscal_w = 'S') then -- Gera NF
		CALL pls_gerar_nota_fisc_comissao(nr_seq_comissao_w, nr_seq_comissao_titulo_w, nr_titulo_w, dt_vencimento_w, cd_pessoa_fisica_w, cd_cgc_w, nm_usuario_p, cd_estabelecimento_p);	
	end if;
	
	CALL pls_baixar_adiant_pago_vend(nr_titulo_w, null, nr_seq_comissao_w, nm_usuario_p, cd_estabelecimento_p);
	end;
end loop;
close C01;

if (ie_gerou_titulo_w = 'S') then
	update	pls_lote_comissao
	set	dt_geracao_titulo = clock_timestamp(),
		ie_status = 'E' -- Encerrado
	where	nr_sequencia = nr_seq_lote_comissao_p;
end if;

select	coalesce(max(ie_concil_contab), 'N')
into STRICT	ie_concil_contab_w
from	pls_visible_false
where	cd_estabelecimento = cd_estabelecimento_p;

if (ie_concil_contab_w = 'S' and ie_gerou_titulo_w = 'S') then
	CALL pls_ctb_onl_gravar_movto_pck.gravar_movto_pagar_comissao(nr_seq_lote_comissao_p, cd_estabelecimento_p, nm_usuario_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_tit_pagar_comissao ( nr_seq_lote_comissao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

