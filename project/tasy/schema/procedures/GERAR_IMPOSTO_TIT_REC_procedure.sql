-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_imposto_tit_rec ( nr_titulo_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_vago_w			varchar(255);
ie_tipo_imposto_w		varchar(15);
ie_tipo_tributo_w		varchar(15);
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
ie_acumulativo_w		varchar(10);
ie_origem_titulo_w		varchar(10);
ie_tipo_titulo_w		varchar(2);
ie_saldo_tit_rec_w		varchar(2)	:= 'N';
ie_ato_cooperado_w		varchar(1)	:= 'N';
vl_titulo_w			double precision;
vl_minimo_tributo_w		double precision;
vl_minimo_base_calculo_w	double precision;
vl_tributo_w			double precision;
vl_trib_nao_retido_w		double precision;
vl_base_nao_retido_w		double precision;
vl_trib_adic_w			double precision;
vl_base_adic_w			double precision;
vl_soma_trib_nao_retido_w	double precision;
vl_soma_base_nao_retido_w	double precision;
vl_soma_trib_adic_w		double precision;
vl_soma_base_adic_w		double precision;
vl_tributo_a_reter_w		double precision;
vl_base_a_reter_w		double precision;
vl_minimo_base_w		double precision;
vl_teto_base_w			double precision;
vl_titulo_ww			double precision;
vl_desc_dependente_w		double precision;
vl_trib_anterior_w		double precision;
vl_total_base_w			double precision;
vl_reducao_w			double precision;
vl_proc_cooperado_w		double precision;
vl_titulo_orig_w		double precision;
cd_cgc_contr_w			bigint;
nr_seq_ptu_fatura_w		bigint	:= null;
nr_seq_mensalidade_w		bigint	:= null;
nr_interno_conta_w		bigint;
nr_seq_protocolo_w		bigint;
nr_seq_regra_w			bigint;
nr_seq_trans_prov_trib_rec_w	bigint;
nr_seq_eme_fatura_w		bigint;
nr_seq_mens_trib_w		bigint;
nr_seq_pls_fatura_w		bigint	:= null;
qt_regra_trib_pls_w		bigint	:= 0;
nr_seq_lote_prot_w		bigint;
pr_imposto_w			double precision;
cd_convenio_w			integer;
cd_estabelecimento_w		smallint;
cd_tributo_w			smallint;
dt_emissao_w			timestamp;
nr_seq_fatura_trib_w		pls_fatura_trib.nr_sequencia%type;
ie_origem_fatura_w		varchar(10);
nr_seq_regra_irpf_w		regra_calculo_irpf.nr_sequencia%type;
vl_fatura_w			pls_fatura.vl_fatura%type;
vl_total_ndc_w			pls_fatura.vl_total_ndc%type;
nr_titulo_fat_w			titulo_receber.nr_titulo%type;
nr_titulo_ndc_w			titulo_receber.nr_titulo%type;
ie_tit_fat_ndc_w		pls_fatura.ie_tit_fat_ndc%type;
qt_registro_w			integer := 0;
ie_nf_tit_rec_w			varchar(1);

cd_darf_w			regra_calculo_imposto.cd_darf%type;

/* Impostos do T?tulo a Receber */

C01 CURSOR FOR
	SELECT	b.cd_tributo
	from	tributo b
	where	b.ie_corpo_item	= 'C'
	and	b.ie_situacao	= 'A'
	and	b.ie_pf_pj in ('A',CASE WHEN coalesce(cd_pessoa_fisica_w::text, '') = '' THEN 'PJ'  ELSE 'PF' END )
	and	not exists (SELECT	1
				from	titulo_receber_trib x
				where	x.nr_titulo	= nr_titulo_p
				and	x.cd_tributo	= b.cd_tributo)
	and	((not exists (select	1
				from	pls_mensalidade_trib y
				where	y.nr_seq_mensalidade	= nr_seq_mensalidade_w
				and	y.cd_tributo		= b.cd_tributo)) or (coalesce(nr_seq_mensalidade_w::text, '') = ''))
	and	((not exists (select	1
				from	pls_fatura_trib y
				where	y.nr_seq_fatura	= nr_seq_pls_fatura_w)) or (coalesce(nr_seq_pls_fatura_w::text, '') = '')) -- 673949 --N?o gera tributo para fatura caso tiver sido gerado no faturamento
	and	(((ie_origem_titulo_w = '3') and (	not exists (	select	1
									from	pls_regra_base_trib_mens x
									where	x.cd_tributo = b.cd_tributo))) or (ie_origem_titulo_w <> '3'))
	and	ie_tipo_titulo_w <> '13'
	order 	by b.cd_tributo;

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_tributo
	from	pls_mensalidade_trib a
	where	a.nr_seq_mensalidade	= nr_seq_mensalidade_w
	and	not exists (SELECT	1
				from	titulo_receber_trib x
				where	x.cd_tributo	= a.cd_tributo
				and	x.nr_titulo	= nr_titulo_p
				and	(x.nr_seq_nota_fiscal IS NOT NULL AND x.nr_seq_nota_fiscal::text <> ''))
	and	ie_tipo_titulo_w <> '13';

C03 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_tributo
	from	pls_fatura_trib a
	where	a.nr_seq_fatura		= nr_seq_pls_fatura_w
	and	((a.ie_tipo_valor_fat	= ie_origem_fatura_w) or (a.ie_tipo_valor_fat = 'NDC+F') or (ie_tit_fat_ndc_w = 'N'))
	and	not exists (SELECT	1
				from	titulo_receber_trib x
				where	x.cd_tributo	= a.cd_tributo
				and	x.nr_titulo	= nr_titulo_p
				and	(x.nr_seq_nota_fiscal IS NOT NULL AND x.nr_seq_nota_fiscal::text <> ''))
	and	ie_tipo_titulo_w <> '13';


BEGIN
select	cd_estabelecimento,
	vl_titulo,
	dt_emissao,
	coalesce(nr_interno_conta,0),
	coalesce(nr_seq_protocolo,0),
	cd_cgc,
	cd_pessoa_fisica,
	nr_seq_ptu_fatura,
	nr_seq_mensalidade,
	coalesce(nr_seq_eme_fatura,0),
	ie_tipo_titulo,
	ie_origem_titulo,
	coalesce(nr_seq_lote_prot,0)
into STRICT	cd_estabelecimento_w,
	vl_titulo_w,
	dt_emissao_w,
	nr_interno_conta_w,
	nr_seq_protocolo_w,
	cd_cgc_w,
	cd_pessoa_fisica_w,
	nr_seq_ptu_fatura_w,
	nr_seq_mensalidade_w,
	nr_seq_eme_fatura_w,
	ie_tipo_titulo_w,
	ie_origem_titulo_w,
	nr_seq_lote_prot_w
from	titulo_receber
where	nr_titulo		= nr_titulo_p;

-- T?tulo da PLS_FATURA
if (ie_origem_titulo_w = '13') then
	begin
	select	max(a.nr_sequencia),
		'F',
		coalesce(max(a.vl_fatura),0),
		coalesce(max(a.vl_total_ndc),0),
		max(a.nr_titulo),
		max(a.nr_titulo_ndc),
		max(a.ie_tit_fat_ndc)
	into STRICT	nr_seq_pls_fatura_w,
		ie_origem_fatura_w,
		vl_fatura_w,
		vl_total_ndc_w,
		nr_titulo_fat_w,
		nr_titulo_ndc_w,
		ie_tit_fat_ndc_w
	from	pls_fatura	a
	where	a.nr_titulo	= nr_titulo_p;
	exception
	when others then
		nr_seq_pls_fatura_w	:= null;
		ie_origem_fatura_w	:= null;
		vl_fatura_w		:= 0;
		vl_total_ndc_w		:= 0;
		nr_titulo_fat_w		:= null;
		nr_titulo_ndc_w		:= null;
		ie_tit_fat_ndc_w	:= null;
	end;

	if (coalesce(nr_seq_pls_fatura_w::text, '') = '') then
		begin
		select	max(a.nr_sequencia),
			'NDC',
			coalesce(max(a.vl_fatura),0),
			coalesce(max(a.vl_total_ndc),0),
			max(a.nr_titulo),
			max(a.nr_titulo_ndc),
			max(a.ie_tit_fat_ndc)
		into STRICT	nr_seq_pls_fatura_w,
			ie_origem_fatura_w,
			vl_fatura_w,
			vl_total_ndc_w,
			nr_titulo_fat_w,
			nr_titulo_ndc_w,
			ie_tit_fat_ndc_w
		from	pls_fatura	a
		where	a.nr_titulo_ndc	= nr_titulo_p;
		exception
		when others then
			nr_seq_pls_fatura_w	:= null;
			ie_origem_fatura_w	:= null;
			vl_fatura_w		:= 0;
			vl_total_ndc_w		:= 0;
			nr_titulo_fat_w		:= null;
			nr_titulo_ndc_w		:= null;
			ie_tit_fat_ndc_w	:= null;
		end;
	end if;

	if (nr_seq_pls_fatura_w IS NOT NULL AND nr_seq_pls_fatura_w::text <> '') then
		if (nr_titulo_ndc_w IS NOT NULL AND nr_titulo_ndc_w::text <> '') or (vl_total_ndc_w > 0) then
			ie_origem_fatura_w := 'NDC';

		elsif (nr_titulo_fat_w IS NOT NULL AND nr_titulo_fat_w::text <> '') then
			ie_origem_fatura_w := 'F';
		end if;
	end if;
end if;

if (nr_interno_conta_w > 0) then
	select	max(cd_convenio_parametro)
	into STRICT	cd_convenio_w
	from	conta_Paciente
	where	nr_interno_conta	= nr_interno_conta_w;

elsif (nr_seq_protocolo_w > 0) then
	select	max(cd_convenio)
	into STRICT	cd_convenio_w
	from	protocolo_convenio
	where	nr_seq_protocolo	= nr_seq_protocolo_w;

elsif (nr_seq_eme_fatura_w > 0) then
	select	max(b.cd_convenio)
	into STRICT	cd_convenio_w
	from	eme_contrato b,
		eme_faturamento a
	where	b.nr_sequencia = a.nr_seq_contrato
	and	a.nr_sequencia = nr_seq_eme_fatura_w;

elsif (nr_seq_lote_prot_w > 0) then
	select	max(cd_convenio)
	into STRICT	cd_convenio_w
	from	lote_protocolo
	where	nr_sequencia	= nr_seq_lote_prot_w;
end if;

/* Diether OS - 298351  - tratar imposto sobre ato cooperado no A500*/

if (nr_seq_mensalidade_w IS NOT NULL AND nr_seq_mensalidade_w::text <> '') then
	begin
	select	max(d.cd_cgc_estipulante)
	into STRICT	cd_cgc_contr_w
	from	pls_contrato		d,
		pls_contrato_pagador	c,
		pls_mensalidade		b,
		titulo_receber		a
	where	a.nr_seq_mensalidade	= b.nr_sequencia
	and	b.nr_seq_pagador	= c.nr_sequencia
	and	c.nr_seq_contrato	= d.nr_sequencia
	and	a.nr_titulo		= nr_titulo_p;
	exception
	when others then
		cd_cgc_contr_w	:= null;
	end;
end if;

if (nr_seq_ptu_fatura_w IS NOT NULL AND nr_seq_ptu_fatura_w::text <> '') then
	begin
	select	max(d.cd_cgc_estipulante)
	into STRICT	cd_cgc_contr_w
	from	pls_segurado		f,
		pls_conta		e,
		pls_contrato		d,
		ptu_fatura		b,
		titulo_receber		a
	where	a.nr_seq_ptu_fatura	= b.nr_sequencia
	and	b.nr_sequencia		= e.nr_seq_fatura
	and	e.nr_seq_segurado	= f.nr_sequencia
	and	f.nr_seq_contrato	= d.nr_sequencia
	and	a.nr_titulo		= nr_titulo_p;
	exception
	when others then
		cd_cgc_contr_w	:= null;
	end;
end if;

vl_titulo_orig_w	:=	vl_titulo_w;

/* Francisco - OS 105416 - Troquei toda rotina pelo modo correto */

open	C01;
loop
fetch	C01 into
	cd_tributo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	ie_tipo_tributo,
		nr_seq_trans_prov_trib_rec
	into STRICT	ie_tipo_tributo_w,
		nr_seq_trans_prov_trib_rec_w
	from	tributo
	where	cd_tributo	= cd_tributo_w;

	vl_titulo_w		:= vl_titulo_orig_w;

	if (ie_tipo_tributo_w in ('IR','IRRF')) then
		if (cd_cgc_contr_w IS NOT NULL AND cd_cgc_contr_w::text <> '') then
			if (nr_seq_ptu_fatura_w IS NOT NULL AND nr_seq_ptu_fatura_w::text <> '') then
				select	coalesce(sum(f.vl_liberado),0)
				into STRICT	vl_proc_cooperado_w
				from	pls_cooperado			j,
					pls_cooperado			i,
					pls_prestador			h,
					pls_prestador			g, 
					pls_conta_proc			f,
					pls_conta			e,
					ptu_fatura			b,
					titulo_receber			a
				where	a.nr_seq_ptu_fatura		= b.nr_sequencia
				and	e.nr_seq_fatura			= b.nr_sequencia
				and	f.nr_seq_conta			= e.nr_sequencia
				and	f.nr_seq_prestador_pgto		= g.nr_sequencia
				and	e.nr_seq_prestador_exec		= h.nr_sequencia
				and	h.cd_pessoa_fisica		= i.cd_pessoa_fisica
				and	g.cd_pessoa_fisica		= j.cd_pessoa_fisica
				and	a.nr_titulo			= nr_titulo_p;

				if (vl_proc_cooperado_w = 0) then
					ie_ato_cooperado_w	:= 'N';
				else
					vl_titulo_w	:= vl_proc_cooperado_w;
					ie_ato_cooperado_w	:= 'S';
				end if;
			end if;
		end if;

		if (nr_seq_pls_fatura_w IS NOT NULL AND nr_seq_pls_fatura_w::text <> '') then
			select	coalesce(sum(x.vl_beneficiario),0)
			into STRICT	vl_proc_cooperado_w
			from	pls_conta_proc x
			where	x.nr_sequencia in (SELECT	f.nr_sequencia
				from	pls_cooperado			i,
					pls_prestador			h,
					pls_conta_proc			f,
					pls_conta			e,
					pls_fatura_conta		b,
					pls_fatura_evento         	k,
					pls_fatura                      l,
					titulo_receber			a
				where	a.nr_titulo                     = l.nr_titulo
				and     l.nr_sequencia                  = k.nr_seq_fatura
				and     k.nr_sequencia                  = b.nr_seq_fatura_evento
				and	f.nr_seq_conta			= e.nr_sequencia
				and     e.nr_sequencia                  = b.nr_seq_conta
				and	e.nr_seq_prestador_exec		= h.nr_sequencia
				and	h.cd_pessoa_fisica		= i.cd_pessoa_fisica
				and     f.nr_seq_evento_fat is  null
				and	f.ie_ato_cooperado	= '1'
				and	exists (select 1
						FROM e
LEFT OUTER JOIN pls_conta_medica_resumo m ON (e.nr_sequencia = m.nr_seq_conta)
LEFT OUTER JOIN pls_prestador g ON (m.nr_seq_prestador_pgto = g.nr_sequencia)
LEFT OUTER JOIN pls_cooperado j ON (g.cd_pessoa_fisica = j.cd_pessoa_fisica) )
				and	a.nr_titulo			= nr_titulo_p);

			if (vl_proc_cooperado_w = 0) then
				ie_ato_cooperado_w	:= 'N';
			else
				vl_titulo_w	:= vl_proc_cooperado_w;
				ie_ato_cooperado_w	:= 'S';
			end if;
		end if;
	end if;

	SELECT * FROM obter_dados_trib_tit_rec(cd_tributo_w, cd_estabelecimento_w, cd_convenio_w, dt_emissao_w, ie_ato_cooperado_w, pr_imposto_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_pessoa_fisica_w, cd_cgc_w, ie_vago_w, ie_origem_titulo_w, 0, nr_seq_regra_w, cd_darf_w) INTO STRICT pr_imposto_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, nr_seq_regra_w, cd_darf_w;

	select	coalesce(max(ie_saldo_tit_rec),'N')
	into STRICT	ie_saldo_tit_rec_w
	from	regra_calculo_imposto
	where	nr_sequencia	= nr_seq_regra_w;

	if (nr_seq_mensalidade_w IS NOT NULL AND nr_seq_mensalidade_w::text <> '') then
		select	count(1)
		into STRICT	qt_regra_trib_pls_w
		from	pls_regra_base_trib_mens	a
		where	a.cd_tributo		= cd_tributo_w
		and	not exists	(SELECT	1
					from	pls_mensalidade_seg_item	y,
						pls_mensalidade_segurado	w
					where	y.nr_seq_mensalidade_seg	= w.nr_sequencia
					and	((y.ie_tipo_item		= a.ie_tipo_item_mens) or (coalesce(a.ie_tipo_item_mens::text, '') = '' ))
					and	w.nr_seq_mensalidade		= nr_seq_mensalidade_w);
	end if;

	if (pr_imposto_w > 0) and (qt_regra_trib_pls_w = 0) then
		vl_titulo_ww	:= vl_titulo_w;

		SELECT * FROM obter_valores_tributo(	ie_acumulativo_w, pr_imposto_w, vl_minimo_base_w, vl_minimo_tributo_w, vl_soma_trib_nao_retido_w, vl_soma_trib_adic_w, vl_soma_base_nao_retido_w, vl_soma_base_adic_w, vl_titulo_ww, vl_tributo_w, vl_trib_nao_retido_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_base_adic_w, vl_teto_base_w, vl_trib_anterior_w, 'N', vl_total_base_w, vl_reducao_w, vl_desc_dependente_w, 0, 0, 0, null, 0, clock_timestamp(), nr_seq_regra_irpf_w) INTO STRICT pr_imposto_w, vl_titulo_ww, vl_tributo_w, vl_trib_nao_retido_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_base_adic_w, vl_reducao_w, vl_desc_dependente_w, nr_seq_regra_irpf_w;

		insert	into titulo_receber_trib(nr_sequencia,
			cd_tributo,
			tx_tributo,
			vl_tributo,
			vl_base_calculo,
			dt_atualizacao,
			nm_usuario,
			nr_titulo,
			vl_saldo,
			vl_trib_nao_retido,
			vl_base_nao_retido,
			vl_trib_adic,
			vl_base_adic,
			ie_origem_tributo,
			nr_seq_trans_financ,
			nr_lote_contabil)
		SELECT	nextval('titulo_receber_trib_seq'),
			cd_tributo_w,
			pr_imposto_w,
			vl_tributo_w,
			vl_titulo_ww,
			clock_timestamp(),
			nm_usuario_p,
			nr_titulo_p,
			vl_tributo_w,
			vl_trib_nao_retido_w,
			vl_base_nao_retido_w,
			vl_trib_adic_w,
			vl_base_adic_w,
			CASE WHEN ie_saldo_tit_rec_w='S' THEN 'CD'  ELSE 'C' END ,
			nr_seq_trans_prov_trib_rec_w,
			0
		;
	end if;

	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	nr_seq_mens_trib_w,
	cd_tributo_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	select	nr_seq_trans_prov_trib_rec
	into STRICT	nr_seq_trans_prov_trib_rec_w
	from	tributo
	where	cd_tributo	= cd_tributo_w;

	insert	into titulo_receber_trib(nr_sequencia,
		cd_tributo,
		tx_tributo,
		vl_tributo,
		vl_base_calculo,
		dt_atualizacao,
		nm_usuario,
		nr_titulo,
		nr_seq_mens_trib,
		vl_saldo,
		vl_trib_nao_retido,
		vl_base_nao_retido,
		vl_trib_adic,
		vl_base_adic,
		ie_origem_tributo,
		nr_seq_trans_financ,
		nr_lote_contabil)
	SELECT	nextval('titulo_receber_trib_seq'),
		cd_tributo,
		tx_tributo,
		vl_tributo,
		vl_base_calculo,
		clock_timestamp(),
		nm_usuario_p,
		nr_titulo_p,
		nr_seq_mens_trib_w,
		vl_tributo,
		vl_trib_nao_retido,
		vl_base_nao_retido,
		vl_trib_adic,
		vl_base_adic,
		ie_origem_tributo,
		nr_seq_trans_prov_trib_rec_w,
		0
	from	pls_mensalidade_trib
	where	nr_sequencia	= nr_seq_mens_trib_w;
	end;
end loop;
close C02;

open C03;
loop
fetch C03 into
	nr_seq_fatura_trib_w,
	cd_tributo_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	select	max(nr_seq_trans_prov_trib_rec),
		coalesce(max(ie_nf_tit_rec),'N')
	into STRICT	nr_seq_trans_prov_trib_rec_w,
		ie_nf_tit_rec_w
	from	tributo
	where	cd_tributo	= cd_tributo_w;

	insert	into titulo_receber_trib(	nr_sequencia,dt_atualizacao,nm_usuario,cd_tributo,tx_tributo,
			vl_tributo,vl_base_calculo,nr_titulo,vl_saldo,vl_trib_nao_retido,
			vl_base_nao_retido,vl_trib_adic,vl_base_adic,ie_origem_tributo,nr_seq_trans_financ,
			nr_lote_contabil,dt_tributo)
		SELECT	nextval('titulo_receber_trib_seq'),clock_timestamp(),nm_usuario_p,cd_tributo,tx_tributo,
			vl_tributo,vl_base_calculo,nr_titulo_p,vl_tributo,vl_trib_nao_retido,
			vl_base_nao_retido,vl_trib_adic,vl_base_adic,ie_origem_tributo,nr_seq_trans_prov_trib_rec_w,
			0,dt_tributo
		from	pls_fatura_trib
		where	nr_sequencia	= nr_seq_fatura_trib_w;
	end;
end loop;
close C03;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_imposto_tit_rec ( nr_titulo_p bigint, nm_usuario_p text) FROM PUBLIC;

