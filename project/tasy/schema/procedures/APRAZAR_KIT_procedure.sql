-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE aprazar_kit ( nr_prescricao_p prescr_medica.nr_prescricao%type, cd_setor_atendimento_p setor_atendimento.cd_setor_atendimento%type, nr_agrupamento_p bigint, nm_usuario_p usuario.nm_usuario%type, nr_seq_dialise_p bigint default null, nr_atendimento_p atendimento_paciente.nr_atendimento%type DEFAULT NULL, ie_gerar_disp_farm_p text DEFAULT NULL, dt_horario_aprazar_p timestamp DEFAULT NULL, ie_local_estoque_mat_hor_p text DEFAULT NULL, ie_local_estoque_p text DEFAULT NULL, dt_liberacao_p timestamp DEFAULT NULL, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type DEFAULT NULL, ie_gerar_necessidade_disp_p text DEFAULT NULL, nr_seq_classif_param_p bigint DEFAULT NULL, ie_gerar_classif_agora_p text DEFAULT NULL, dt_inicio_prescr_p prescr_medica.dt_inicio_prescr%type DEFAULT NULL, ie_horario_adep_p text DEFAULT NULL, ie_gera_integracao_p text DEFAULT NULL, ie_gerar_proc_gedipa_job_p text DEFAULT NULL, nr_seq_superior_p bigint DEFAULT NULL) AS $body$
DECLARE


cd_local_estoque_w		prescr_material.cd_local_estoque%type;
nr_seq_min_hor_w		prescr_mat_hor.nr_sequencia%type;
cd_setor_atendimento_w		setor_atendimento.cd_setor_atendimento%type;
qt_dose_w			prescr_material.qt_dose%type;
qt_dispensar_hor_w		prescr_mat_hor.qt_dispensar_hor%type;
cd_unidade_medida_w		prescr_material.cd_unidade_medida%type;
cd_unidade_medida_dose_w	prescr_material.cd_unidade_medida_dose%type;
nr_seq_horario_w		prescr_mat_hor.nr_sequencia%type;
ie_classif_urgente_w		varchar(3);
ie_padronizado_w		varchar(1);
ie_controlado_w			varchar(1);
nr_seq_classif_w		classif_lote_disp_far.nr_sequencia%type;
ie_classif_nao_padrao_w		parametros_farmacia.ie_classif_urgencia%type;
dt_limite_agora_w		timestamp;
dt_limite_especial_w		timestamp;
qt_min_agora_w			parametros_farmacia.qt_min_agora%type;
qt_min_especial_w		parametros_farmacia.qt_min_especial%type;
qt_dose_hor_w			double precision;
qt_horario_w			prescr_mat_hor.qt_horario%type;
cd_unid_med_dose_hor_w		varchar(30);
ie_liberado_w 			varchar(1);
ie_agora_impressao_w		parametros_farmacia.ie_forma_agora%type;
nr_seq_turno_hor_ag_w		bigint;
hr_turno_agora_w		varchar(15);
qt_min_antes_atend_w		regra_tempo_disp.qt_min_antes_atend%type;
dt_hora_atual_w			timestamp;
hr_final_turno_agora_w		varchar(15);
ie_define_agora_w		regra_tempo_disp.ie_define_agora%type;

C01 CURSOR FOR
SELECT	nr_sequencia,
        cd_material,
        ie_agrupador,
        cd_local_estoque,
        cd_unidade_medida_dose,
        qt_total_dispensar,
        qt_dose,
        cd_unidade_medida
from	prescr_material
where	nr_prescricao	= nr_prescricao_p
and     nr_seq_kit	= nr_seq_superior_p
and     coalesce(nr_seq_recomendacao::text, '') = ''
order by
        nr_sequencia;	

C02 CURSOR FOR
SELECT	nr_sequencia,
	ie_classif_urgente,
	ie_controlado,
	ie_padronizado
from	classif_lote_disp_far
where	cd_estabelecimento = cd_estabelecimento_p
and	ie_situacao = 'A'
order by
	ie_classif_urgente,
	ie_controlado desc,
	ie_padronizado desc;

BEGIN

    select	coalesce(max(qt_min_agora),0),
		coalesce(max(qt_min_especial),0),
		max(ie_classif_urgencia),
		coalesce(max(ie_forma_agora), 'N')
    into STRICT    	qt_min_agora_w,
		qt_min_especial_w,
		ie_classif_nao_padrao_w,
		ie_agora_impressao_w
    from	parametros_farmacia
    where	cd_estabelecimento = cd_estabelecimento_p;

    for c01_w in c01 loop
        begin

        cd_local_estoque_w          :=  c01_w.cd_local_estoque;
        cd_unidade_medida_dose_w    :=  c01_w.cd_unidade_medida_dose;
        qt_dose_w                   :=  c01_w.qt_dose;
        cd_unidade_medida_w         :=  c01_w.cd_unidade_medida;

        select	coalesce(min(nr_sequencia),0)
        into STRICT	nr_seq_min_hor_w
        from	prescr_mat_hor
        where	nr_prescricao 	= nr_prescricao_p
        and	nr_seq_material	= c01_w.nr_sequencia
        and	coalesce(ie_situacao,'A') 	= 'A'
        and	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

        if (nr_seq_min_hor_w > 0) then
            select	qt_dose,
                    qt_dispensar_hor,
                    cd_unidade_medida,
                    cd_unidade_medida_dose
            into STRICT	qt_dose_w,
                    qt_dispensar_hor_w,
                    cd_unidade_medida_w,
                    cd_unidade_medida_dose_w
            from	prescr_mat_hor
            where	nr_sequencia = nr_seq_min_hor_w
            and		Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

            qt_horario_w  := null;
            cd_unid_med_dose_hor_w := null;

            SELECT * FROM obter_dose_um_horario_pmh( cd_material_p               => c01_w.cd_material, qt_dose_prescr_p            => qt_dose_w, cd_unid_med_dose_prescr_p   => cd_unidade_medida_dose_w, qt_dose_hor_p               => qt_horario_w, cd_unid_med_dose_hor_p      => cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_p               => qt_horario_w, cd_unid_med_dose_hor_p      => cd_unid_med_dose_hor_w;


        else		
            cd_unid_med_dose_hor_w := null;
            qt_dose_hor_w	:= null;		

            SELECT * FROM obter_dose_um_horario_pmh( cd_material_p               => c01_w.cd_material, qt_dose_prescr_p            => qt_dose_w, cd_unid_med_dose_prescr_p   => cd_unidade_medida_dose_w, qt_dose_hor_p               => qt_dose_hor_w, cd_unid_med_dose_hor_p      => cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_p               => qt_dose_hor_w, cd_unid_med_dose_hor_p      => cd_unid_med_dose_hor_w;

        end if;		

        select	nextval('prescr_mat_hor_seq')
        into STRICT	nr_seq_horario_w
;		

        ie_controlado_w     :=  coalesce(substr(Obter_se_medic_controlado(c01_w.cd_material),1,1),'N');
        ie_padronizado_w    :=  coalesce(substr(obter_se_material_padronizado(cd_estabelecimento_p, c01_w.cd_material),1,1),'N');

        dt_limite_agora_w	:= dt_liberacao_p + qt_min_agora_w/1440;
        dt_limite_especial_w	:= dt_liberacao_p + qt_min_especial_w/1440;

        if (coalesce(ie_gerar_classif_agora_p,'N') = 'S') then
            dt_hora_atual_w := clock_timestamp();
            dt_limite_agora_w	:=  dt_hora_atual_w + qt_min_agora_w/1440; 			
        end if;


        if (ie_agora_impressao_w = 'S') then
            nr_seq_turno_hor_ag_w	:=  obter_turno_horario_prescr(cd_estabelecimento_p    =>  cd_estabelecimento_p,
                                                                    cd_setor_atendimento_p  =>  cd_setor_atendimento_p,
                                                                    ds_horario_p            =>  to_char(dt_horario_aprazar_p,'hh24:mi'),
																	cd_local_estoque_p     => c01_w.cd_local_estoque);

            select	max(to_char(b.hr_inicial,'hh24:mi')),
                    max(to_char(b.hr_final,'hh24:mi'))
            into STRICT	hr_turno_agora_w,
                    hr_final_turno_agora_w
            from	regra_turno_disp_param b,
                    regra_turno_disp a
            where	a.nr_sequencia		= b.nr_seq_turno
            and		a.cd_estabelecimento	= cd_estabelecimento_p
            and		a.nr_sequencia		= nr_seq_turno_hor_ag_w
            and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_p,0))	= coalesce(cd_setor_atendimento_p,0));

            select	coalesce(max(qt_min_antes_atend), 0),
                    coalesce(max(ie_define_agora), 'N')
            into STRICT	qt_min_antes_atend_w,
                    ie_define_agora_w
            from	regra_tempo_disp
            where	cd_estabelecimento	= cd_estabelecimento_p
            and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_p,0)) = coalesce(cd_setor_atendimento_p,0))
            and	nr_seq_turno = nr_seq_turno_hor_ag_w
            and	ie_situacao = 'A';

            if (hr_turno_agora_w > hr_final_turno_agora_w) then
               if (PKG_DATE_UTILS.start_of(dt_horario_aprazar_p, 'dd', 0) > PKG_DATE_UTILS.start_of(dt_inicio_prescr_p, 'dd', 0)) then
                    dt_limite_agora_w := PKG_DATE_UTILS.get_Time(dt_horario_aprazar_p - 1, hr_turno_agora_w) - (qt_min_antes_atend_w/1440);
                else
                    dt_limite_agora_w := PKG_DATE_UTILS.get_Time(dt_horario_aprazar_p, hr_turno_agora_w) - (qt_min_antes_atend_w/1440);
                end if;
            else
                dt_limite_agora_w := PKG_DATE_UTILS.get_Time(dt_horario_aprazar_p, hr_turno_agora_w) - (qt_min_antes_atend_w/1440);
            end if;
        end if;


        if (coalesce(ie_classif_nao_padrao_w::text, '') = '') or (ie_padronizado_w = 'S') then
            begin
            ie_classif_urgente_w	:= 'N';
            if (dt_horario_aprazar_p <= dt_limite_agora_w) then
                ie_classif_urgente_w	:= 'A';
            elsif	((dt_limite_agora_w <= clock_timestamp()) and (ie_agora_impressao_w = 'S') and (ie_define_agora_w = 'N')) then
                ie_classif_urgente_w	:= 'A';
            elsif (ie_agora_impressao_w = 'S' and ie_define_agora_w = 'S') and
                (dt_horario_aprazar_p <= (clock_timestamp() + (qt_min_antes_atend_w /1440))) then
                ie_classif_urgente_w	:= 'A';
            elsif (dt_horario_aprazar_p <= dt_limite_especial_w) then
                ie_classif_urgente_w	:= 'E';
            end if;
            end;
        else
            ie_classif_urgente_w	:= ie_classif_nao_padrao_w;
        end if;	

        cd_setor_atendimento_w := cd_setor_atendimento_p;

        if (ie_local_estoque_p = 'S') then
            CALL define_local_disp_prescr(nr_prescricao_p, c01_w.nr_sequencia, obter_perfil_ativo, nm_usuario_p);
            select	max(cd_local_estoque)
            into STRICT	cd_local_estoque_w
            from	prescr_material b
            where	nr_prescricao	= nr_prescricao_p
            and	nr_sequencia	= c01_w.nr_sequencia;

            cd_setor_atendimento_w		:= Obter_Setor_Atendimento(nr_atendimento_p);
        elsif (ie_local_estoque_p = 'R') then
            CALL define_local_disp_prescr(nr_prescricao_p, c01_w.nr_sequencia, obter_perfil_ativo, nm_usuario_p);
            select	max(cd_local_estoque)
            into STRICT	cd_local_estoque_w
            from	prescr_material b
            where	nr_prescricao	= nr_prescricao_p
            and	nr_sequencia	= c01_w.nr_sequencia;

            cd_setor_atendimento_w		:= Obter_Setor_Atendimento_lib(nr_atendimento_p);
        end if;

        ie_liberado_w := 'N';

        select	coalesce(max('S'),'N')
        into STRICT	ie_liberado_w
        from	prescr_mat_hor	
        where	nr_prescricao = nr_prescricao_p
        and	(dt_lib_horario IS NOT NULL AND dt_lib_horario::text <> '');		

        insert into prescr_mat_hor(
                    nr_sequencia,
                    nr_seq_digito,
                    nr_prescricao,
                    nr_seq_material,
                    ie_agrupador,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    cd_material,
                    qt_dose,
                    qt_dispensar_hor,
                    ds_horario,
                    dt_horario,
                    cd_unidade_medida,
                    cd_unidade_medida_dose,
                    ie_urgente,	
                    dt_emissao_farmacia,
                    dt_fim_horario,
                    dt_suspensao,
                    ie_horario_especial,
                    qt_hor_reaprazamento,
                    nm_usuario_reaprazamento,
                    nr_seq_turno,
                    dt_disp_farmacia,
                    ie_aprazado,
                    ie_padronizado,
                    ie_controlado,
                    ie_classif_urgente,
                    qt_horario,
                    cd_unid_med_hor,
                    qt_dispensar,
                    nr_seq_superior,
                    dt_lib_horario,
                    nr_seq_dialise,
                    nr_atendimento,
                    nr_agrupamento,
                    ie_horario_adep
                    )
        values (
                    nr_seq_horario_w,
                    calcula_digito('MODULO11',nr_seq_horario_w),
                    nr_prescricao_p,
                    c01_w.nr_sequencia,
                    c01_w.ie_agrupador,
                    clock_timestamp(),
                    nm_usuario_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    c01_w.cd_material,
                    qt_dose_w,
                    coalesce(qt_dispensar_hor_w,qt_dose_hor_w),
                    to_char(dt_horario_aprazar_p,'hh24:mi'),
                    dt_horario_aprazar_p,
                    cd_unidade_medida_w,
                    cd_unidade_medida_dose_w,
                    'N',
                    CASE WHEN ie_gerar_disp_farm_p='S' THEN null  ELSE clock_timestamp() END ,
                    null,
                    null,
                    'N',
                    null,
                    null,
                    obter_turno_horario_prescr(cd_estabelecimento_p,cd_setor_atendimento_w,to_char(dt_horario_aprazar_p,'hh24:mi'),cd_local_estoque_w),
                    clock_timestamp(),
                    'S',
                    ie_padronizado_w,
                    ie_controlado_w,
                    ie_classif_urgente_w,
                    coalesce(qt_horario_w,qt_dose_hor_w),
                    cd_unid_med_dose_hor_w,
                    c01_w.qt_total_dispensar,
                    nr_seq_superior_p,
                    clock_timestamp(),
                    nr_seq_dialise_p,
                    nr_atendimento_p,
                    nr_agrupamento_p,
                    ie_horario_adep_p);

        if (ie_gerar_proc_gedipa_job_p = 'N') then
            CALL Gedipa_Gerar_Proc_Instantaneo(	nr_prescricao_p		=>  nr_prescricao_p,
											nr_sequencia_p		=>  c01_w.nr_sequencia,
											nr_seq_solucao_p	=>  null,
											nr_seq_horario_p	=>  nr_seq_horario_w);
        end if;			

        CALL Gerar_gedi_medic_atend(	cd_estabelecimento_p	=>  cd_estabelecimento_p,
                                nr_prescricao_p			=>  nr_prescricao_p,
                                nr_seq_material_p		=>  c01_w.nr_sequencia,
                                nr_seq_horario_p		=>  nr_seq_horario_w,
                                nm_usuario_p			=>  nm_usuario_p);

        CALL calcular_dispensar_hor_kit( nr_prescricao_p 	=>  nr_prescricao_p,
                                    nr_seq_horario_p	=>  nr_seq_horario_w,
									qt_dose_p			=>  null,
									cd_unidade_medida_p	=>  null);

        if (coalesce(nr_seq_classif_param_p ,0) > 0)	then
            begin
            update	prescr_mat_hor
            set	nr_seq_classif		= nr_seq_classif_param_p
            where	nr_prescricao		= nr_prescricao_p	
            and	nr_sequencia		= nr_seq_horario_w;
            end;
        else				
            open C02;
            loop
            fetch C02 into	
                nr_seq_classif_w,
                ie_classif_urgente_w,
                ie_controlado_w,
                ie_padronizado_w;
            EXIT WHEN NOT FOUND; /* apply on C02 */
                begin

                if (ie_controlado_w = 'A') and (ie_padronizado_w = 'A') then
                    update	prescr_mat_hor
                    set	nr_seq_classif		= nr_seq_classif_w
                    where	nr_prescricao		= nr_prescricao_p	
                    and	nr_sequencia		= nr_seq_horario_w
                    and	ie_classif_urgente	= ie_classif_urgente_w;
                elsif (ie_controlado_w = 'A') and (ie_padronizado_w = 'S') then
                    update	prescr_mat_hor
                    set	nr_seq_classif		= nr_seq_classif_w
                    where	nr_prescricao		= nr_prescricao_p
                    and	ie_padronizado		= 'S'
                    and	nr_sequencia		= nr_seq_horario_w
                    and	ie_classif_urgente	= ie_classif_urgente_w;
                elsif (ie_controlado_w = 'A') and (ie_padronizado_w = 'N') then
                    update	prescr_mat_hor
                    set	nr_seq_classif		= nr_seq_classif_w
                    where	nr_prescricao		= nr_prescricao_p
                    and	ie_padronizado		= 'N'
                    and	nr_sequencia		= nr_seq_horario_w
                    and	ie_classif_urgente	= ie_classif_urgente_w;
                elsif (ie_controlado_w = 'N') and (ie_padronizado_w = 'A') then
                    update	prescr_mat_hor
                    set	nr_seq_classif		= nr_seq_classif_w
                    where	nr_prescricao		= nr_prescricao_p
                    and	ie_controlado		= 'N'
                    and	nr_sequencia		= nr_seq_horario_w
                    and	ie_classif_urgente	= ie_classif_urgente_w;
                elsif (ie_controlado_w = 'N') and (ie_padronizado_w = 'N') then
                    update	prescr_mat_hor
                    set	nr_seq_classif		= nr_seq_classif_w
                    where	nr_prescricao		= nr_prescricao_p
                    and	ie_controlado		= 'N'
                    and	ie_padronizado		= 'N'
                    and	nr_sequencia		= nr_seq_horario_w
                    and	ie_classif_urgente	= ie_classif_urgente_w;
                elsif (ie_controlado_w = 'N') and (ie_padronizado_w = 'S') then
                    update	prescr_mat_hor
                    set	nr_seq_classif		= nr_seq_classif_w
                    where	nr_prescricao		= nr_prescricao_p
                    and	ie_controlado		= 'N'
                    and	ie_padronizado		= 'S'
                    and	nr_sequencia		= nr_seq_horario_w
                    and	ie_classif_urgente	= ie_classif_urgente_w;
                elsif (ie_controlado_w = 'S') and (ie_padronizado_w = 'A') then
                    update	prescr_mat_hor
                    set	nr_seq_classif		= nr_seq_classif_w
                    where	nr_prescricao		= nr_prescricao_p
                    and	ie_controlado		= 'S'
                    and	nr_sequencia		= nr_seq_horario_w
                    and	ie_classif_urgente	= ie_classif_urgente_w;
                elsif (ie_controlado_w = 'S') and (ie_padronizado_w = 'N') then
                    update	prescr_mat_hor
                    set	nr_seq_classif		= nr_seq_classif_w
                    where	nr_prescricao		= nr_prescricao_p
                    and	ie_controlado		= 'S'
                    and	ie_padronizado		= 'N'						
                    and	nr_sequencia		= nr_seq_horario_w
                    and	ie_classif_urgente	= ie_classif_urgente_w;
                elsif (ie_controlado_w = 'S') and (ie_padronizado_w = 'S') then
                    update	prescr_mat_hor
                    set	nr_seq_classif		= nr_seq_classif_w
                    where	nr_prescricao		= nr_prescricao_p
                    and	ie_controlado		= 'S'
                    and	ie_padronizado		= 'S'						
                    and	nr_sequencia		= nr_seq_horario_w
                    and	ie_classif_urgente	= ie_classif_urgente_w;
                end if;

                end;
            end loop;
            close C02;
        end if;

        if (ie_local_estoque_mat_hor_p	= 'S') then
            CALL define_disp_prescr_mat_hor(	nr_seq_horario_p	    =>  nr_seq_horario_w,
                                        nr_prescricao_p		    =>  nr_prescricao_p,
                                        nr_seq_material_p	    =>  c01_w.nr_sequencia,
                                        cd_perfil_p		        =>  obter_perfil_ativo,
                                        nm_usuario_p 		    =>  nm_usuario_p);

            select	coalesce(max(cd_local_estoque),cd_local_estoque_w)
            into STRICT	cd_local_estoque_w
            from	prescr_mat_hor
            where	nr_sequencia	= nr_seq_horario_w;

            update	prescr_mat_hor
            set	nr_seq_turno	= coalesce(Obter_turno_horario_prescr(cd_estabelecimento_p, cd_setor_atendimento_w, to_char(dt_horario_aprazar_p,'hh24:mi'), cd_local_estoque_w),nr_seq_turno)
            where	nr_sequencia	= nr_seq_horario_w;
        end if;

        if (ie_gerar_necessidade_disp_p = 'S') then
            update	prescr_medica
            set	dt_emissao_farmacia	 = NULL,
                nm_usuario_imp_far	 = NULL
            where	nr_prescricao		= nr_prescricao_p;

            update	prescr_material
            set	cd_motivo_baixa	= 0,
                dt_baixa	 = NULL
            where	nr_prescricao	= nr_prescricao_p
            and	nr_sequencia	= c01_w.nr_sequencia;						
        end if;	

        if (ie_gera_integracao_p = 'S') then
            CALL disp_prescr_mat_hor(    nr_prescricao_p     =>	nr_prescricao_p,	
                                    nr_seq_horario_p    =>	nr_seq_horario_w,
                                    nm_usuario_p        =>	nm_usuario_p);
        end if;		
        end;
    end loop;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE aprazar_kit ( nr_prescricao_p prescr_medica.nr_prescricao%type, cd_setor_atendimento_p setor_atendimento.cd_setor_atendimento%type, nr_agrupamento_p bigint, nm_usuario_p usuario.nm_usuario%type, nr_seq_dialise_p bigint default null, nr_atendimento_p atendimento_paciente.nr_atendimento%type DEFAULT NULL, ie_gerar_disp_farm_p text DEFAULT NULL, dt_horario_aprazar_p timestamp DEFAULT NULL, ie_local_estoque_mat_hor_p text DEFAULT NULL, ie_local_estoque_p text DEFAULT NULL, dt_liberacao_p timestamp DEFAULT NULL, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type DEFAULT NULL, ie_gerar_necessidade_disp_p text DEFAULT NULL, nr_seq_classif_param_p bigint DEFAULT NULL, ie_gerar_classif_agora_p text DEFAULT NULL, dt_inicio_prescr_p prescr_medica.dt_inicio_prescr%type DEFAULT NULL, ie_horario_adep_p text DEFAULT NULL, ie_gera_integracao_p text DEFAULT NULL, ie_gerar_proc_gedipa_job_p text DEFAULT NULL, nr_seq_superior_p bigint DEFAULT NULL) FROM PUBLIC;

