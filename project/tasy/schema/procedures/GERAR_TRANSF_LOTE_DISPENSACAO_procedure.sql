-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_transf_lote_dispensacao ( nr_seq_lote_p ap_lote.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

 
nr_prescricao_w		prescr_medica.nr_prescricao%type;
nr_sequencia_w		prescr_material.nr_sequencia%type;
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
cd_material_w		material.cd_material%type;
cd_setor_atendimento_w	setor_atendimento.cd_setor_atendimento%type;
dt_prescricao_w		prescr_medica.dt_prescricao%type;
qt_dispensar_hor_w		prescr_mat_hor.qt_dispensar_hor%type;
nr_seq_lote_fornec_w	material_lote_fornec.nr_sequencia%type;
ie_consignado_w		material.ie_consignado%type;
cd_cgc_fornec_w		pessoa_juridica.cd_cgc%type;
ie_gerar_transf_lote_w	parametros_farmacia.ie_gerar_transf_lote%type;
cd_loc_estoque_saida_w	local_estoque.cd_local_estoque%type;
cd_local_estoque_w	varchar(20);
cd_material_ww		material.cd_material%type;

C01 CURSOR FOR 
	SELECT	a.nr_prescricao, 
		a.nr_seq_material, 
		a.nr_atendimento, 
		a.cd_material, 
		b.cd_setor_atendimento, 
		b.dt_prescricao, 
		a.qt_dispensar_hor, 
		a.nr_seq_lote_fornec 
	from	prescr_medica b, 
		prescr_mat_hor a 
	where	a.nr_prescricao = b.nr_prescricao 
	and	a.nr_seq_lote = nr_seq_lote_p;


BEGIN 
 
cd_local_estoque_w := obter_param_usuario(7030, 79, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_local_estoque_w);
 
select	max(cd_local_estoque) 
into STRICT	cd_loc_estoque_saida_w 
from	ap_lote 
where	nr_sequencia = nr_seq_lote_p;
 
if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then 
 
	open C01;
	loop 
	fetch C01 into	 
		nr_prescricao_w, 
		nr_sequencia_w, 
		nr_atendimento_w, 
		cd_material_w, 
		cd_setor_atendimento_w, 
		dt_prescricao_w, 
		qt_dispensar_hor_w, 
		nr_seq_lote_fornec_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		select	max(a.cd_material) 
		into STRICT	cd_material_ww 
		from	material m, 
			operacao_estoque e, 
			ap_lote b, 
			movimento_estoque a 
		where	a.cd_material = m.cd_material 
		and	a.nr_lote_ap = b.nr_sequencia 
		and	a.cd_operacao_estoque = e.cd_operacao_estoque 
		and	a.nr_prescricao = nr_prescricao_w 
		and	a.nr_lote_ap = nr_seq_lote_p 
		and	nr_sequencia_item_docto = nr_sequencia_w 
		and	e.ie_entrada_saida = 'S' 
		and	a.cd_acao = '1' 
		and	coalesce(a.nr_movimento_estoque_corresp::text, '') = '' 
		and	b.ie_status_lote <> 'G' 
		and	not exists ( 
			SELECT	1 
			from	movimento_estoque x 
			where	x.nr_prescricao = a.nr_prescricao 
			and	x.nr_movimento_estoque_corresp = a.nr_movimento_estoque);
	 
		CALL consiste_lote_prescr_disp(nr_seq_lote_p, nr_prescricao_w, coalesce(cd_material_ww, cd_material_w), qt_dispensar_hor_w, nr_seq_lote_fornec_w, 
			cd_loc_estoque_saida_w, dt_prescricao_w, cd_estabelecimento_p, cd_setor_atendimento_w, nm_usuario_p);
 
		end;
	end loop;
	close C01;
 
	open C01;
	loop 
	fetch C01 into	 
		nr_prescricao_w, 
		nr_sequencia_w, 
		nr_atendimento_w, 
		cd_material_w, 
		cd_setor_atendimento_w, 
		dt_prescricao_w, 
		qt_dispensar_hor_w, 
		nr_seq_lote_fornec_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		select	max(a.cd_material) 
		into STRICT	cd_material_ww 
		from	material m, 
			operacao_estoque e, 
			ap_lote b, 
			movimento_estoque a 
		where	a.cd_material = m.cd_material 
		and	a.nr_lote_ap = b.nr_sequencia 
		and	a.cd_operacao_estoque = e.cd_operacao_estoque 
		and	a.nr_prescricao = nr_prescricao_w 
		and	a.nr_lote_ap = nr_seq_lote_p 
		and	nr_sequencia_item_docto = nr_sequencia_w 
		and	e.ie_entrada_saida = 'S' 
		and	a.cd_acao = '1' 
		and	coalesce(a.nr_movimento_estoque_corresp::text, '') = '' 
		and	b.ie_status_lote <> 'G' 
		and	not exists ( 
			SELECT	1 
			from	movimento_estoque x 
			where	x.nr_prescricao = a.nr_prescricao 
			and	x.nr_movimento_estoque_corresp = a.nr_movimento_estoque);		
 
		select	coalesce(ie_consignado,'0') 
		into STRICT	ie_consignado_w 
		from	material 
		where	cd_material = cd_material_w;
 
		if (ie_consignado_w <> '0') then 
			begin 
			if (coalesce(nr_seq_lote_fornec_w, 0) > 0) then 
 
				select	cd_cgc_fornec 
				into STRICT	cd_cgc_fornec_w 
				from	material_lote_fornec 
				where	nr_sequencia = nr_seq_lote_fornec_w;
 
			else 
				cd_cgc_fornec_w	:= obter_fornecedor_regra_consig( 
							cd_estabelecimento_p, 
							cd_material_w, 
							'1');
			end if;
			end;
		end if;
		 
		select	coalesce(max(cd_local_estoque), cd_local_estoque_w) 
		into STRICT	cd_local_estoque_w 
		from	setor_local 
		where	ie_loca_estoque_pac = 'S' 
		and	cd_setor_atendimento = cd_setor_atendimento_w;
		 
		CALL gerar_transf_lote_prescricao(nr_seq_lote_p, nr_prescricao_w, nr_sequencia_w, nr_atendimento_w, coalesce(cd_material_ww, cd_material_w), 
			cd_setor_atendimento_w, dt_prescricao_w, cd_cgc_fornec_w, qt_dispensar_hor_w, nr_seq_lote_fornec_w, 
			cd_loc_estoque_saida_w, cd_local_estoque_w, cd_estabelecimento_p, nm_usuario_p);
 
		end;
	end loop;
	close C01;
	 
	if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then 
		update	ap_lote 
		set	cd_local_estoque = cd_local_estoque_w 
		where	nr_sequencia = nr_seq_lote_p;
	end if;
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_transf_lote_dispensacao ( nr_seq_lote_p ap_lote.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

