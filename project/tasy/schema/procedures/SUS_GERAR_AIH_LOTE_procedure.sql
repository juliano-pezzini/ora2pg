-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_gerar_aih_lote ( dt_retorno_secr_p timestamp, nr_aih_p bigint, cd_pessoa_fisica_p bigint, nr_seq_interno_p bigint, nm_usuario_p text) AS $body$
DECLARE



nr_seq_interno_w			bigint;
nr_atendimento_w			bigint;
cd_orgao_emissor_w		varchar(10);
cd_medico_resp_w			varchar(10);
cd_medico_resp_ww		varchar(10);
dt_emissao_w			timestamp;
dt_retorno_secr_w			timestamp;
cd_motivo_alta_w			smallint;
cd_cid_principal_w			varchar(10);
cd_cid_secundario_w		varchar(10);
ie_carater_inter_sus_w		varchar(2);
nr_sequencia_w			bigint;
ie_origem_proced_w		bigint;
cd_procedimento_solic_w		bigint;
ds_retorno_w			varchar(80);
cd_estabelecimento_w		bigint;
nr_interno_conta_w			bigint;
cd_medico_solic_w			varchar(15);
cd_modalidade_w			smallint;
cd_especialidade_aih_w		sus_aih_unif.cd_especialidade_aih%type;
cd_especialidade_aih_ww		sus_aih_unif.cd_especialidade_aih%type;
ie_mudanca_procedimento_w		varchar(1);
ie_medico_resp_w			varchar(5);
ie_vincular_conta_w		varchar(10);
cd_cid_secundario_laudo_w		varchar(10);
cd_cid_causa_assoc_laudo_w	varchar(10);
qt_aih_atend_w			bigint := 0;
ie_gerar_aih_laudo_w		varchar(15) := 'N';
ie_gerar_reg_aih_w		varchar(15) := 'N';
cd_estab_usuario_w		estabelecimento.cd_estabelecimento%type;
ie_gerar_motivo_alta_w		varchar(15) := 'N';
ie_gerar_dados_parto_w		varchar(15) := 'N';
qt_nascido_vivo_w 		sus_aih_unif.qt_nascido_vivo%type		:= 0;
qt_nascido_morto_w		sus_aih_unif.qt_nascido_morto%type	:= 0;
cd_pessoa_fisica_w		atendimento_paciente.cd_pessoa_fisica%type;



BEGIN

begin
cd_estab_usuario_w := wheb_usuario_pck.get_cd_estabelecimento;
exception
when others then
	cd_estab_usuario_w := null;
end;

ie_gerar_reg_aih_w	:= coalesce(Obter_Valor_Param_Usuario(1006,4,Obter_Perfil_Ativo,nm_usuario_p,coalesce(cd_estab_usuario_w,0)),'N');
ie_vincular_conta_w	:= coalesce(Obter_Valor_Param_Usuario(1006,9,Obter_Perfil_Ativo,nm_usuario_p,coalesce(cd_estab_usuario_w,0)),'N');
ie_medico_resp_w	:= Obter_Valor_Param_Usuario(1123,10,Obter_Perfil_Ativo,Nm_Usuario_p,coalesce(cd_estab_usuario_w,0));
ie_gerar_motivo_alta_w	:= coalesce(Obter_Valor_Param_Usuario(1123,116, Obter_Perfil_Ativo, Nm_Usuario_p, coalesce(cd_estab_usuario_w,0)),'N');
ie_gerar_aih_laudo_w	:= coalesce(obter_valor_param_usuario(1123,194, obter_perfil_ativo, nm_usuario_p, coalesce(cd_estab_usuario_w,0)),'N');
ie_gerar_dados_parto_w	:= coalesce(obter_valor_param_usuario(1123,244, obter_perfil_ativo, nm_usuario_p, coalesce(cd_estab_usuario_w,0)),'N');

select	p.nr_seq_interno,
	b.nr_atendimento,
	b.dt_entrada,
	b.ie_carater_inter_sus,
	p.dt_retorno_secr,
	cd_procedimento_solic,
	ie_origem_proced,
	p.nr_interno_conta,
	p.cd_medico_requisitante,
	b.cd_estabelecimento,
	CASE WHEN p.ie_tipo_laudo_sus=1 THEN 'S'  ELSE 'N' END ,
	p.cd_cid_secundario,
	p.cd_cid_causa_assoc,
	b.cd_pessoa_fisica
into STRICT	nr_seq_interno_w,
	nr_atendimento_w,
	dt_emissao_w,
	ie_carater_inter_sus_w,
	dt_retorno_secr_w,
	cd_procedimento_solic_w,
	ie_origem_proced_w,
	nr_interno_conta_w,
	cd_medico_solic_w,
	cd_estabelecimento_w,
	ie_mudanca_procedimento_w,
	cd_cid_secundario_laudo_w,
	cd_cid_causa_assoc_laudo_w,
	cd_pessoa_fisica_w
from	atendimento_paciente	b,
	sus_laudo_paciente 	p
where	b.nr_atendimento	=	p.nr_atendimento
and	b.cd_pessoa_fisica	=	cd_pessoa_fisica_p
and	p.nr_seq_interno	=	nr_seq_interno_p;

SELECT * FROM Atualizar_Orgao_Emissor_Aih(nr_atendimento_w, cd_orgao_emissor_w, cd_medico_resp_w) INTO STRICT cd_orgao_emissor_w, cd_medico_resp_w;
SELECT * FROM Sus_Buscar_Dados_Aih(nr_atendimento_w, cd_motivo_alta_w, cd_cid_principal_w, cd_cid_secundario_w) INTO STRICT cd_motivo_alta_w, cd_cid_principal_w, cd_cid_secundario_w;

if (ie_origem_proced_w	<> 7) then

	select	coalesce(max(nr_sequencia)+1,0)
	into STRICT	nr_sequencia_w
	from 	sus_aih
	where 	nr_aih	=	nr_aih_p;
	
	insert	into sus_aih(
			nr_aih,	
			nr_atendimento,	
			dt_emissao,	
			cd_orgao_emissor,
			ie_identificacao,
			cd_medico_responsavel,	
			cd_procedimento_solic,			
			ie_origem_proced,	
			dt_atualizacao,
			nm_usuario,	
			cd_motivo_alta,
			ie_carater_inter_sus,				
			cd_cid_principal,
			cd_cid_secundario,
			nr_sequencia,
			ie_gestacao_risco,
			ie_infeccao_hospitalar,
			qt_dia_uti_mes_alta,
			qt_nasc_sai_alta,
			qt_nasc_sai_trans,
			qt_nasc_sai_obito,
			qt_dia_acompanhante,
			qt_nascidos_mortos,
			qt_nascidos_vivos,
			qt_dia_uti_mes_ant,
			qt_dia_uti_mes_ini)
		values (	
			nr_aih_p,	
			nr_atendimento_w,
			dt_emissao_w,	
			cd_orgao_emissor_w,
			'1',
			cd_medico_resp_w,				
			cd_procedimento_solic_W,		
			ie_origem_proced_w,
			clock_timestamp(),
			nm_usuario_p,									
			cd_motivo_alta_w,
			ie_carater_inter_sus_w,
			cd_cid_principal_w,
			cd_cid_secundario_w,			
			nr_sequencia_w,
			'N',
			'N',
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0);

else
	begin
	
	if (ie_gerar_aih_laudo_w = 'S') then
		begin
		
		select	count(1)
		into STRICT	qt_aih_atend_w
		from	sus_aih_unif
		where	nr_aih = nr_Atendimento_w
		and	nr_Atendimento = nr_Atendimento_w
		and	cd_procedimento_real = cd_procedimento_solic_w  LIMIT 1;
		
		end;
	end if;	
	
	if (ie_gerar_reg_aih_w = 'S') and (qt_aih_atend_w = 0) then
		begin
		
		select	count(1)
		into STRICT	qt_aih_atend_w
		from	sus_aih_unif
		where	nr_aih = nr_aih_p
		and	nr_Atendimento = nr_Atendimento_w
		and	cd_procedimento_real = cd_procedimento_solic_w  LIMIT 1;
		
		end;
	end if;	
	
	if (qt_aih_atend_w = 0) then
		begin
		
		select	coalesce(max(nr_sequencia)+1,0)
		into STRICT	nr_sequencia_w
		from 	sus_aih_unif
		where 	nr_aih	=	nr_aih_p;

		begin
		select	max(cd_modalidade)
		into STRICT	cd_modalidade_w	
		from	sus_procedimento_modal
		where	cd_procedimento		= cd_procedimento_solic_w
		and	ie_origem_proced	= ie_origem_proced_w;		
		exception
		when others then
			cd_modalidade_w := null;
		end;
		
		select	coalesce(min(b.cd_espec_leito),1)
		into STRICT	cd_especialidade_aih_w
		from	sus_espec_leito         b,
                	sus_procedimento_leito  a
		where    a.nr_seq_espec_leito    = b.nr_sequencia
		and      a.cd_procedimento       = cd_procedimento_solic_w
		and      a.ie_origem_proced      = ie_origem_proced_w
		and		exists (	SELECT	1
							from	sus_especialidade x
							where	b.cd_espec_leito	= x.cd_especialidade);
							
		cd_especialidade_aih_ww := coalesce(sus_obter_especialidade_aih(cd_procedimento_solic_w, ie_origem_proced_w, cd_pessoa_fisica_w, cd_estabelecimento_w),'0');

		if (cd_especialidade_aih_ww <> '0') then
			begin
			cd_especialidade_aih_w := cd_especialidade_aih_ww;
			end;
		end if;							

		if (coalesce(cd_cid_principal_w::text, '') = '') then
			begin
			select	cd_cid_principal
			into STRICT	cd_cid_principal_w
			from	sus_laudo_paciente
			where	nr_seq_interno	= nr_seq_interno_p;			
			exception
			when others then
				cd_cid_principal_w := '';
			end;		
		end if;
		
		cd_motivo_alta_w := null;
		
		if (ie_gerar_motivo_alta_w = 'S') then
			begin
			begin
			select	max(b.cd_motivo_alta_sus)
			into STRICT	cd_motivo_alta_w
			from	atendimento_paciente a,
				motivo_alta b
			where	a.nr_atendimento = nr_Atendimento_w
			and	a.cd_motivo_alta = b.cd_motivo_alta;
			exception
				when others then
				cd_motivo_alta_w	:= null;
				end;
			end;
		end if;
		
		cd_medico_resp_ww	:= sus_obter_tipomedico_aih(nr_Atendimento_w,ie_medico_resp_w);
		
		if (ie_vincular_conta_w	= 'S') then
			
			select	max(nr_interno_conta)
			into STRICT	nr_interno_conta_w
			from	conta_paciente a
			where	nr_atendimento	= nr_atendimento_w
			and	ie_status_acerto = 1
			and	coalesce(ie_cancelamento::text, '') = ''
			and	((coalesce(ie_tipo_atend_conta::text, '') = '') or (ie_tipo_atend_conta = 1))
			and	not exists (	SELECT	1
							from	sus_aih_unif b
							where	b.nr_atendimento	= nr_atendimento_w
							and	b.nr_interno_conta	= a.nr_interno_conta);

                        if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then
                                begin
                                
                                update  sus_laudo_paciente
                                set     nr_interno_conta = nr_interno_conta_w,
                                        dt_atualizacao = clock_timestamp(),
                                        nm_usuario = nm_usuario_p
                                where   nr_seq_interno = nr_seq_interno_p
                                and     coalesce(nr_interno_conta::text, '') = '';
                                
                                end;
                        end if;
		end if;
		
		if (ie_gerar_dados_parto_w = 'S') and (coalesce(sus_validar_regra(2,cd_procedimento_solic_w,ie_origem_proced_w),0) > 0) then
			begin
			
			select	coalesce(count(1),0)
			into STRICT	qt_nascido_vivo_w
			from	nascimento n,
				atendimento_paciente a
			where	a.nr_atendimento = n.nr_atendimento
			and	a.nr_atendimento = nr_atendimento_w
			and	n.dt_nascimento > a.dt_entrada
			and	n.ie_unico_nasc_vivo = 'S';			
			
			select	coalesce(count(1),0)
			into STRICT	qt_nascido_morto_w
			from	nascimento n,
				atendimento_paciente a
			where	a.nr_atendimento = n.nr_atendimento
			and	a.nr_atendimento = nr_atendimento_w
			and	n.dt_nascimento > a.dt_entrada
			and	n.ie_unico_nasc_vivo = 'N';
			
			end;			
		end if;
		
		begin		
		insert into sus_aih_unif(	
				nr_aih,
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_estabelecimento,
				ie_identificacao_aih,
				nr_proxima_aih,
				nr_anterior_aih,
				dt_emissao,
				ie_mudanca_proc,
				cd_procedimento_solic,
				ie_origem_proc_solic,
				cd_procedimento_real,
				ie_origem_proc_real,
				cd_medico_solic,
				cd_cid_principal,
				cd_cid_secundario,
				cd_cid_causa_compl,
				cd_cid_causa_morte,
				nr_interno_conta,
				nr_atendimento,
				cd_medico_responsavel, 
				cd_modalidade,
				cd_motivo_cobranca,
				cd_especialidade_aih,
				ie_codigo_autorizacao,
				qt_nascido_vivo, 
				qt_nascido_morto,
				qt_saida_alta,
				qt_saida_transferencia,
				qt_saida_obito,
				nr_gestante_prenatal,
				cd_orgao_emissor_aih,
				cd_carater_internacao,
				dt_inicial, 
				dt_final,       
				nr_proc_interno_solic,
				nr_proc_interno_real)
		values (	nr_aih_p,
				nr_sequencia_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_estabelecimento_w,
				'01',
				null,
				null,
				dt_emissao_w,
				ie_mudanca_procedimento_w,
				cd_procedimento_solic_w,
				ie_origem_proced_w,
				cd_procedimento_solic_w,
				ie_origem_proced_w,
				coalesce(cd_medico_solic_w,coalesce(cd_medico_resp_ww,cd_medico_resp_w)),
				cd_cid_principal_w,
				cd_cid_secundario_laudo_w,
				cd_cid_causa_assoc_laudo_w,
				null,
				nr_interno_conta_w,
				nr_atendimento_w,
				coalesce(cd_medico_resp_ww,cd_medico_resp_w),
				cd_modalidade_w,
				cd_motivo_alta_w,
				cd_especialidade_aih_w,
				null,
				qt_nascido_vivo_w,
				qt_nascido_morto_w,
				0,
				0,
				0,
				null,
				cd_orgao_emissor_w,
				coalesce(ie_carater_inter_sus_w,'01'),
				null,
				null,
				null,
				null);
		exception
		when others then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(995735,'CD_PROC_P='||cd_procedimento_solic_w||';CD_CID_P='||cd_cid_principal_w);
			--Nao foi possivel gerar o registro da AIH por falta de informacoes obrigatorias. Procedimento realizado: #@CD_PROC_P#@, CID Principal: 
		end;
		end;
	else
		begin
	
		update 	sus_aih_unif
		set 	nr_aih 		= nr_aih_p,
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where 	nr_aih = nr_Atendimento_w
		and	nr_Atendimento = nr_Atendimento_w
		and	cd_procedimento_real = cd_procedimento_solic_w;
		
		end;
	end if;
	
	end;			
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_gerar_aih_lote ( dt_retorno_secr_p timestamp, nr_aih_p bigint, cd_pessoa_fisica_p bigint, nr_seq_interno_p bigint, nm_usuario_p text) FROM PUBLIC;

