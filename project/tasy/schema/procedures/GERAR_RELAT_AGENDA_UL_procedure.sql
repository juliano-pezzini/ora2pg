-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_relat_agenda_ul (dt_referencia_p timestamp) AS $body$
DECLARE

 
/* 
Procedure criada para atender a OS33184. 
Gera o relatório CATE 4213 UL - Aluguel Consultório (Agenda Consulta - Dias Trabalho). 
*/
 
 
/*variáveis*/
 
cd_profissional_w	varchar(10);
nm_profissional_w	varchar(60);
dt_dia_atual_w	smallint	:= '0';
dt_inicio_vigencia_w	timestamp;
dt_final_vigencia_w	timestamp;
dt_limite_inferior_w	timestamp;
dt_limite_superior_w	timestamp;
qt_duracao_w		double precision	:= 0;
qt_profissional_w	double precision	:= 0;
qt_atual_w		double precision	:= 0;
qt_dia01_w		double precision	:= 0;
qt_dia02_w		double precision	:= 0;
qt_dia03_w		double precision	:= 0;
qt_dia04_w		double precision	:= 0;
qt_dia05_w		double precision	:= 0;
qt_dia06_w		double precision	:= 0;
qt_dia07_w		double precision	:= 0;
qt_dia08_w		double precision	:= 0;
qt_dia09_w		double precision	:= 0;
qt_dia10_w		double precision	:= 0;
qt_dia11_w		double precision	:= 0;
qt_dia12_w		double precision	:= 0;
qt_dia13_w		double precision	:= 0;
qt_dia14_w		double precision	:= 0;
qt_dia15_w		double precision	:= 0;
qt_dia16_w		double precision	:= 0;
qt_dia17_w		double precision	:= 0;
qt_dia18_w		double precision	:= 0;
qt_dia19_w		double precision	:= 0;
qt_dia20_w		double precision	:= 0;
qt_dia21_w		double precision	:= 0;
qt_dia22_w		double precision	:= 0;
qt_dia23_w		double precision	:= 0;
qt_dia24_w		double precision	:= 0;
qt_dia25_w		double precision	:= 0;
qt_dia26_w		double precision	:= 0;
qt_dia27_w		double precision	:= 0;
qt_dia28_w		double precision	:= 0;
qt_dia29_w		double precision	:= 0;
qt_dia30_w		double precision	:= 0;
qt_dia31_w		double precision	:= 0;
qt_total_w		double precision	:= 0;

/*comando sql relatório*/
 
C01 CURSOR FOR 
SELECT		coalesce(a.cd_pessoa_fisica,0) cd_profissional, 
		substr(coalesce(obter_nome_pf(coalesce(a.cd_pessoa_fisica,0)),'Não informado'),1,60) nm_profissional, 
		t.dt_inicio_vigencia, 
		t.dt_final_vigencia, 
		SUM((t.hr_final - t.hr_inicial) * 24) qt_duracao 
from		agenda a, 
		agenda_turno t 
where		a.ie_situacao					= 'A' 
and		a.cd_agenda					= t.cd_agenda 
and		(t.dt_inicio_vigencia IS NOT NULL AND t.dt_inicio_vigencia::text <> '') 
and		(t.dt_final_vigencia IS NOT NULL AND t.dt_final_vigencia::text <> '') 
and (trunc(t.dt_inicio_vigencia, 'month')	= trunc(dt_referencia_p, 'month') or 
		trunc(t.dt_final_vigencia, 'month')	= trunc(dt_referencia_p, 'month')) 
group by	a.cd_pessoa_fisica, 
		t.dt_inicio_vigencia, 
		t.dt_final_vigencia 
order by	nm_profissional, 
		t.dt_inicio_vigencia, 
		t.dt_final_vigencia;


BEGIN 
if (dt_referencia_p IS NOT NULL AND dt_referencia_p::text <> '') then 
 
	/*limpar tabela*/
 
	delete from w_relat_agenda_ul;
	commit;
 
	Open C01;
	Loop 
	Fetch C01 into	cd_profissional_w, 
				nm_profissional_w, 
				dt_inicio_vigencia_w, 
				dt_final_vigencia_w, 
				qt_duracao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
 
	/*gerar somente um registro para cada profissional*/
 
	select	count(*) 
	into STRICT	qt_profissional_w 
	from	agenda a, 
		agenda_turno t 
	where	a.ie_situacao					= 'A' 
	and	a.cd_agenda					= t.cd_agenda 
	and	(t.dt_inicio_vigencia IS NOT NULL AND t.dt_inicio_vigencia::text <> '') 
	and	(t.dt_final_vigencia IS NOT NULL AND t.dt_final_vigencia::text <> '') 
	and (trunc(t.dt_inicio_vigencia, 'month')	= trunc(dt_referencia_p, 'month') or 
		trunc(t.dt_final_vigencia, 'month')	= trunc(dt_referencia_p, 'month')) 
	and	a.cd_pessoa_fisica				= cd_profissional_w;
 
	/*limitar a partir da data inicial de vigência ou a partir do primeiro dia do mês de término da vigência (para os 	 
 
	casos onde a mesma terminar no mês selecionado e houver iniciado em outro)*/
 
	if (trunc(dt_inicio_vigencia_w,'month') < trunc(dt_referencia_p,'month')) then 
		dt_limite_inferior_w	:= trunc(dt_referencia_p,'month');
	else 
		dt_limite_inferior_w	:= dt_inicio_vigencia_w;
	end if;
 
	/*limitar até data final de vigência ou até último dia do mês de inicio da vigência (para os casos onde a mesma 	 
 
	iniciar no mês selecionado e terminar somente em outro)*/
 
	if (dt_final_vigencia_w > last_day(dt_referencia_p)) then 
		dt_limite_superior_w	:= last_day(dt_referencia_p);
	else 
		dt_limite_superior_w	:= dt_final_vigencia_w;
	end if;
 
	dt_dia_atual_w	:= (to_char(dt_limite_inferior_w,'dd'))::numeric;
 
	if (qt_profissional_w <> qt_atual_w) then 
		qt_atual_w	:= qt_atual_w + 1;
	end if;
 
	while(dt_dia_atual_w <= (to_char(dt_limite_superior_w,'dd'))::numeric ) loop 
		begin 
		if (dt_dia_atual_w = 1) then 
			qt_dia01_w	:= qt_dia01_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 2) then 
			qt_dia02_w	:= qt_dia02_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 3) then 
			qt_dia03_w	:= qt_dia03_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 4) then 
			qt_dia04_w	:= qt_dia04_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 5) then 
			qt_dia05_w	:= qt_dia05_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 6) then 
			qt_dia06_w	:= qt_dia06_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 7) then 
			qt_dia07_w	:= qt_dia07_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 8) then 
			qt_dia08_w	:= qt_dia08_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 9) then 
			qt_dia09_w	:= qt_dia09_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 10) then 
			qt_dia10_w	:= qt_dia10_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 11) then 
			qt_dia11_w	:= qt_dia11_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 12) then 
			qt_dia12_w	:= qt_dia12_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 13) then 
			qt_dia13_w	:= qt_dia13_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 14) then 
			qt_dia14_w	:= qt_dia14_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 15) then 
			qt_dia15_w	:= qt_dia15_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 16) then 
			qt_dia16_w	:= qt_dia16_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 17) then 
			qt_dia17_w	:= qt_dia17_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 18) then 
			qt_dia18_w	:= qt_dia18_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 19) then 
			qt_dia19_w	:= qt_dia19_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 20) then 
			qt_dia20_w	:= qt_dia20_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 21) then 
			qt_dia21_w	:= qt_dia21_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 22) then 
			qt_dia22_w	:= qt_dia22_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 23) then 
			qt_dia23_w	:= qt_dia23_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 24) then 
			qt_dia24_w	:= qt_dia24_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 25) then 
			qt_dia25_w	:= qt_dia25_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 26) then 
			qt_dia26_w	:= qt_dia26_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 27) then 
			qt_dia27_w	:= qt_dia27_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 28) then 
			qt_dia28_w	:= qt_dia28_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 29) then 
			qt_dia29_w	:= qt_dia29_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 30) then 
			qt_dia30_w	:= qt_dia30_w + qt_duracao_w;
		elsif (dt_dia_atual_w = 31) then 
			qt_dia31_w	:= qt_dia31_w + qt_duracao_w;
		end if;
		dt_dia_atual_w	:= dt_dia_atual_w + 1;
		qt_total_w	:= qt_total_w + qt_duracao_w;
		end;
	end loop;
 
	/*inserir dados na tabela temporária*/
 
	if (qt_profissional_w = qt_atual_w) then 
		insert	into	w_relat_agenda_ul( 
							cd_profissional, 
							nm_profissional, 
							qt_dia01, 
							qt_dia02, 
							qt_dia03, 
							qt_dia04, 
							qt_dia05, 
							qt_dia06, 
							qt_dia07, 
							qt_dia08, 
							qt_dia09, 
							qt_dia10, 
							qt_dia11, 
							qt_dia12, 
							qt_dia13, 
							qt_dia14, 
							qt_dia15, 
							qt_dia16, 
							qt_dia17, 
							qt_dia18, 
							qt_dia19, 
							qt_dia20, 
							qt_dia21, 
							qt_dia22, 
							qt_dia23, 
							qt_dia24, 
							qt_dia25, 
							qt_dia26, 
							qt_dia27, 
							qt_dia28, 
							qt_dia29, 
							qt_dia30, 
							qt_dia31, 
							qt_total 
							) 
						values ( 
							cd_profissional_w, 
							nm_profissional_w, 
							qt_dia01_w, 
							qt_dia02_w, 
							qt_dia03_w, 
							qt_dia04_w, 
							qt_dia05_w, 
							qt_dia06_w, 
							qt_dia07_w, 
							qt_dia08_w, 
							qt_dia09_w, 
							qt_dia10_w, 
							qt_dia11_w, 
							qt_dia12_w, 
							qt_dia13_w, 
							qt_dia14_w, 
							qt_dia15_w, 
							qt_dia16_w, 
							qt_dia17_w, 
							qt_dia18_w, 
							qt_dia19_w, 
							qt_dia20_w, 
							qt_dia21_w, 
							qt_dia22_w, 
							qt_dia23_w, 
							qt_dia24_w, 
							qt_dia25_w, 
							qt_dia26_w, 
							qt_dia27_w, 
							qt_dia28_w, 
							qt_dia29_w, 
							qt_dia30_w, 
							qt_dia31_w, 
							qt_total_w 
							);
	/*zerar valores próximo profissional*/
 
	qt_atual_w	:= 0;
	qt_dia01_w	:= 0;
	qt_dia02_w	:= 0;
	qt_dia03_w	:= 0;
	qt_dia04_w	:= 0;
	qt_dia05_w	:= 0;
	qt_dia06_w	:= 0;
	qt_dia07_w	:= 0;
	qt_dia08_w	:= 0;
	qt_dia09_w	:= 0;
	qt_dia10_w	:= 0;
	qt_dia11_w	:= 0;
	qt_dia12_w	:= 0;
	qt_dia13_w	:= 0;
	qt_dia14_w	:= 0;
	qt_dia15_w	:= 0;
	qt_dia16_w	:= 0;
	qt_dia17_w	:= 0;
	qt_dia18_w	:= 0;
	qt_dia19_w	:= 0;
	qt_dia20_w	:= 0;
	qt_dia21_w	:= 0;
	qt_dia22_w	:= 0;
	qt_dia23_w	:= 0;
	qt_dia24_w	:= 0;
	qt_dia25_w	:= 0;
	qt_dia26_w	:= 0;
	qt_dia27_w	:= 0;
	qt_dia28_w	:= 0;
	qt_dia29_w	:= 0;
	qt_dia30_w	:= 0;
	qt_dia31_w	:= 0;
	qt_total_w	:= 0;
	end if;
	End loop;
	Close C01;
end if;
commit;
END	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_relat_agenda_ul (dt_referencia_p timestamp) FROM PUBLIC;

