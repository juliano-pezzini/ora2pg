-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hdm_atualizar_indicadores ( cd_estabelecimento_p bigint, ie_indicador_p bigint, dt_referencia_p timestamp, ie_tipo_referencia_p text, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Chamar a atualização de indicadores
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ X] Tasy (Delphi/Java) [ ] Portal [  ]  Relatórios [ X] Outros: Job
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
/*
IE_INDICADOR_P
	0 - Todos
	1  -  Sinais vitais
	2 -  Exames laboratoriais
	3 -  Hábitos e vícios
	4 -  Doenças prévias e atuais
	5 -  Medicamentos em uso
	6 - Internações e atendimentos de urgência
	7 - Vacinas
	8 - Procedimentos realizados
	9 - Custo e sinistralidade
	10 - Atendimentos realizados pela equipe
	11 - Agendamentos
	12 - Participantes
	13 - Permanência em programa e módulo
	14 - Plano de cuidado x atendimento efetuado
	15 - Grupo de atividades
	16 - Encaminhamentos (susp atend)
	17 - Ranking sinistralidade

DT_REFERENCIA_P
	Data que deve ser considerada para atualização

IE_TIPO_REFERENCIA_P
	'M' - Apenas o mês da data
	'A' - Apenas o ano da data
	'T' - Desde o princípio até a data

*/
ie_indicador_w	bigint;


BEGIN
if (ie_indicador_p = 0) then
	ie_indicador_w	:= 1;
else
	ie_indicador_w	:= ie_indicador_p;
end if;

--hdm_indic_pck.initialize_values(cd_estabelecimento_p,dt_referencia_p,ie_tipo_referencia_p,nm_usuario_p);
CALL hdm_indic_pck.populate_dimensions();

while(ie_indicador_w IS NOT NULL AND ie_indicador_w::text <> '') loop
	if (ie_indicador_w = 1) then
		CALL hdm_indic_pck.populate_ft_vital_signs();
	elsif (ie_indicador_w = 2) then
		CALL hdm_indic_pck.populate_ft_lab_exams();
	elsif (ie_indicador_w = 3) then
		CALL hdm_indic_pck.populate_ft_habits();
	elsif (ie_indicador_w = 4) then
		CALL hdm_indic_pck.populate_ft_disease();
	elsif (ie_indicador_w = 5) then
		CALL hdm_indic_pck.populate_ft_medications_use();
	elsif (ie_indicador_w = 6) then
		CALL hdm_indic_pck.populate_ft_urgency();
	elsif (ie_indicador_w = 7) then
		CALL hdm_indic_pck.populate_ft_vaccines();
	elsif (ie_indicador_w = 8) then
		CALL hdm_indic_pck.populate_ft_procedures();
	elsif (ie_indicador_w = 9) then
		CALL hdm_indic_pck.populate_ft_red_cost();
	elsif (ie_indicador_w = 10) then
		CALL hdm_indic_pck.populate_ft_team_episodes();
	elsif (ie_indicador_w = 11) then
		CALL hdm_indic_pck.populate_ft_appointment();
	elsif (ie_indicador_w = 12) then
		CALL hdm_indic_pck.populate_ft_participant();
	elsif (ie_indicador_w = 13) then
		CALL hdm_indic_pck.populate_ft_permanence();
	elsif (ie_indicador_w = 14) then
		CALL hdm_indic_pck.populate_ft_care_plan();
	elsif (ie_indicador_w = 15) then
		CALL hdm_indic_pck.populate_ft_activ_group();
	elsif (ie_indicador_w = 16) then
		CALL hdm_indic_pck.populate_ft_care_suspension();
	elsif (ie_indicador_w = 17) then
		CALL hdm_indic_pck.populate_ft_sinister_panel();
	end if;

	if (ie_indicador_p = 0) then
		ie_indicador_w	:= ie_indicador_w + 1;
	end if;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hdm_atualizar_indicadores ( cd_estabelecimento_p bigint, ie_indicador_p bigint, dt_referencia_p timestamp, ie_tipo_referencia_p text, nm_usuario_p text) FROM PUBLIC;

