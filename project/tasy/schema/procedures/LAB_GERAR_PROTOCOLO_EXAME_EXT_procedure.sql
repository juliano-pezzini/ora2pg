-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_gerar_protocolo_exame_ext ( nr_seq_resultado_p bigint, nm_usuario_p text, dt_result_item_p exame_lab_result_item.dt_result_item%type default null) AS $body$
DECLARE

nr_seq_exame_w            bigint;
nr_seq_protocolo_w        bigint;
nr_sequencia_w            bigint;
nr_seq_unid_medida_w      bigint;
nr_seq_metodo_w           bigint;
nr_seq_material_w         bigint;
ie_gera_analitos_exame_w  varchar(1) := 'N';
nr_seq_exame_princ_w      bigint;
nm_exame_princ_w          varchar(255);
nr_seq_apresent_w         bigint;
nr_seq_exame_analito_w    bigint;
nm_exame_analito_w        varchar(255);
nr_seq_apresent_ww        bigint;

c01 CURSOR FOR
		SELECT 	nr_seq_exame
	from	lab_protocolo_ext_item
	where	nr_seq_protocolo	= nr_seq_protocolo_w
	order by coalesce(NR_SEQ_APRESENT,9999);

C02 CURSOR FOR
	SELECT	distinct nr_seq_exame, nm_exame, nr_seq_apresent
	from	exame_laboratorio
	where	coalesce(ie_situacao,'A') = 'A'
	and	nr_seq_superior = nr_seq_exame_w
	order by 3;WITH RECURSIVE cte AS (


c03 CURSOR FOR
	SELECT	distinct nr_seq_exame,nm_exame,nr_seq_apresent
	from	exame_laboratorio WHERE nr_seq_superior = nr_seq_exame_w
  UNION ALL


c03 CURSOR FOR
	SELECT	distinct nr_seq_exame,nm_exame,nr_seq_apresent
	from	exame_laboratorio JOIN cte c ON (c.prior nr_seq_exame = nr_seq_superior)

) SELECT * FROM cte WHERE coalesce(ie_situacao,'A') = 'A'
	and	nr_seq_superior = nr_seq_exame_princ_w ORDER BY  3;
;	



BEGIN

select 	coalesce(max(nr_seq_protocolo),0)
into STRICT	nr_seq_protocolo_w
from  	exame_lab_resultado
where 	nr_seq_resultado = nr_seq_resultado_p;

select coalesce(max(nr_sequencia),0)
into STRICT nr_sequencia_w
from exame_lab_result_item
where nr_seq_resultado = nr_seq_resultado_p;

ie_gera_analitos_exame_w := obter_param_usuario(7012, 7, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_gera_analitos_exame_w);

if (nr_seq_protocolo_w > 0) then
	open c01;
	loop
	fetch c01 into
		nr_Seq_exame_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	
	nr_sequencia_w := nr_sequencia_w + 1;
	
	select 	coalesce(max(nr_sequencia),null)
	into STRICT	nr_seq_metodo_w
	from (	SELECT 	a.nr_sequencia
			from	metodo_exame_lab a,
					exame_lab_metodo b
			where 	a.nr_sequencia = b.nr_seq_metodo
			and 	b.nr_seq_exame = nr_seq_exame_w
			order by ie_prioridade) alias2 LIMIT 1;

	select	coalesce(max(nr_sequencia),null)
	into STRICT	nr_seq_material_w
	from (SELECT	a.nr_sequencia
			from	material_exame_lab a,
					exame_lab_material b
			where	a.nr_sequencia = b.nr_seq_material
			and		b.nr_seq_exame = nr_seq_exame_w
			order by ie_prioridade) alias2 LIMIT 1;

	select	coalesce(max(a.nr_sequencia),null)
	into STRICT	nr_seq_unid_medida_w
	from	lab_unidade_medida a,
			exame_laboratorio b
	where	a.nr_sequencia = b.nr_seq_unid_med
	and		b.nr_seq_exame = nr_seq_exame_w;

	insert into exame_lab_result_item(nr_seq_resultado,
				 nr_sequencia,
				 nr_seq_exame, 
				 dt_atualizacao,
				 nm_usuario, 
				 qt_resultado, 
				 ds_resultado, 
				 nr_seq_material, 
				 pr_resultado, 
				 ie_status, 
				 dt_aprovacao,
				 nm_usuario_aprovacao, 
				 ie_consiste,
				 nr_seq_metodo,
				 nr_seq_unid_med,
				 dt_result_item)
			values (nr_seq_resultado_p,
				nr_sequencia_w,
				nr_seq_exame_w,
				clock_timestamp(),
				nm_usuario_p,
				null,
				null, 
				nr_seq_material_w,
				null,
				'',
				null, 
				'',
				'S',
				nr_seq_metodo_w,
				nr_seq_unid_medida_w,
				dt_result_item_p);	
	
		if (ie_gera_analitos_exame_w = 'C') or (ie_gera_analitos_exame_w = 'A') then
			open c02;
			loop
			fetch c02 into
				nr_seq_exame_princ_w,
				nm_exame_princ_w,
				nr_seq_apresent_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
				nr_sequencia_w := nr_sequencia_w + 1;
				insert into exame_lab_result_item(nr_seq_resultado,
					nr_sequencia,
					nr_seq_exame,
					dt_atualizacao,
					nm_usuario,
					qt_resultado, 
					ds_resultado, 
					nr_seq_material,
					pr_resultado,
					ie_status, 
					dt_aprovacao,
					nm_usuario_aprovacao, 
					ie_consiste,
					nr_seq_metodo,
					nr_seq_unid_med,
					dt_result_item)
				values (nr_seq_resultado_p,
					nr_sequencia_w,
					nr_seq_exame_princ_w,
					clock_timestamp(),
					nm_usuario_p,
					null,
					null,
					null, 
					null,
					'',
					null,
					'',
					'S',
					null,
					null,
					dt_result_item_p);
				open c03;
				loop
				fetch c03 into
					nr_seq_exame_analito_w,
					nm_exame_analito_w,
					nr_seq_apresent_ww;
				EXIT WHEN NOT FOUND; /* apply on c03 */
						begin
						nr_sequencia_w := nr_sequencia_w + 1;
						insert into exame_lab_result_item(nr_seq_resultado,
								nr_sequencia,
								nr_seq_exame, 
								dt_atualizacao,
								nm_usuario, 
								qt_resultado, 
								ds_resultado, 
								nr_seq_material, 
								pr_resultado, 
								ie_status, 
								dt_aprovacao,
								nm_usuario_aprovacao, 
								ie_consiste,
								nr_seq_metodo,
								nr_seq_unid_med,
								dt_result_item)
							values (nr_seq_resultado_p,
								nr_sequencia_w,
								nr_seq_exame_analito_w,
								clock_timestamp(),
								nm_usuario_p,
								null,
								null,
								null, 
								null,
								'',
								null, 
								'',
								'S',
								null,
								null,
								dt_result_item_p);
						end;
				end loop;
				close c03;
				end;
			end loop;
			close c02;
		end if;
	end;
	end loop;
	close c01;
end if;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_gerar_protocolo_exame_ext ( nr_seq_resultado_p bigint, nm_usuario_p text, dt_result_item_p exame_lab_result_item.dt_result_item%type default null) FROM PUBLIC;

