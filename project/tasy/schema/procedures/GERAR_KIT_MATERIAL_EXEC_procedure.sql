-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_kit_material_exec (CD_KIT_MATERIAL_P bigint, DT_ATENDIMENTO_P timestamp, NR_PRESCRICAO_P bigint, IE_AUDITORIA_P text, CD_LOCAL_ESTOQUE_P text, NR_SEQ_PROC_PRINC_P text, NR_SEQ_ATEPACU_P bigint, IE_BAIXA_SEM_ESTOQUE_P text, NM_USUARIO_P text, QT_KIT_P bigint, DS_ERRO_P INOUT text, nr_doc_convenio_p bigint, nr_seq_regra_lanc_p bigint, cd_funcao_p bigint default obter_funcao_ativa, nr_seq_proc_pac_p bigint default null, IGNORAR_NR_PRESCRICAO char default 'S') AS $body$
DECLARE




DT_ENTRADA_UNIDADE_W		timestamp;
NR_SEQ_W			bigint;
CD_CONVENIO_W			bigint;
NR_ATENDIMENTO_W		bigint;
ie_estab_movto_w				varchar(10);
CD_SETOR_ATENDIMENTO_W		integer;
CD_MATERIAL_w			integer;
QT_MATERIAL_w			double precision;
CD_UNIDADE_MEDIDA_CONSUMO_w	varchar(30);
IE_VIA_APLICACAO_w		varchar(10);
CD_CATEGORIA_W			varchar(10);
NR_DOC_CONVENIO_W		varchar(20);
IE_TIPO_GUIA_W			varchar(2);
IE_ESTOQUE_DISP_w		varchar(1);
cd_estabelecimento_W		integer;
cd_senha_w			varchar(20);
ie_entra_conta_w			varchar(01);
cd_local_estoque_w		smallint;
ie_baixa_estoque_w		varchar(1);
qt_idade_w			smallint;
NR_SEQ_ATEPACU_w		bigint;
IE_DISPARA_REGRA_LANC_KIT_w	varchar(1):= 'N';
NR_DOC_CONVENIO_WW		varchar(30);
VinculaGuiaPrescricao_w		varchar(10);
ie_baixa_estoq_pac_w		varchar(1);
ds_erro_w			varchar(4000):= '';
msg_erro_padrao_w		varchar(4000):= WHEB_MENSAGEM_PCK.get_texto(281505)|| CHR(13);
ie_entrou_w			varchar(1):= 'N';
ie_sexo_w			varchar(1);
ie_recem_nato_w			varchar(1);
vincularDocConvenio_w		varchar(1);
nr_doc_interno_w		bigint;
ie_vincula_cirur_kit_mat_w	varchar(1);
nr_cirurgia_w			bigint := null;
nr_seq_regra_lanc_w		bigint:=null;
ie_regra_uso_w			varchar(1) := 'N';
ie_acao_excesso_w		varchar(10);
qt_excedida_w			double precision;
qt_lancamento_w			double precision:= null;
nr_seq_regra_uso_mat_w		bigint;
ds_erro_uso_w			varchar(255);
nr_conta_w			bigint;
nr_seq_excedido_w		bigint;
ie_tipo_convenio_w		smallint;
cd_motivo_exc_conta_w		parametro_faturamento.cd_motivo_exc_conta%type;
cd_estab_prescr_estoque_w			bigint;
cd_estabelecimento_logado_w		bigint;
nr_contador_w                 bigint;
nr_contador_prescr_w                 bigint;
nr_prescricao_w 	PRESCR_MEDICA.NR_PRESCRICAO%type;

C001 CURSOR FOR
	SELECT 	A.CD_MATERIAL,
		A.QT_MATERIAL,
		substr(obter_dados_material_estab(b.cd_material,cd_estabelecimento_w,'UMS'),1,30) CD_UNIDADE_MEDIDA_CONSUMO,
		B.IE_VIA_APLICACAO,
		a.ie_entra_conta,
		a.ie_baixa_estoque
	FROM	MATERIAL B,
		COMPONENTE_KIT A,
		kit_material c
	where 	A.CD_MATERIAL = B.CD_MATERIAL
	and	c.cd_kit_material = a.cd_kit_material
	AND 	A.CD_KIT_MATERIAL = CD_KIT_MATERIAL_P
	and	coalesce(a.cd_convenio, coalesce(cd_convenio_w,0))	= coalesce(cd_convenio_w,0)
	and	coalesce(a.ie_tipo_convenio, coalesce(ie_tipo_convenio_w,0))	= coalesce(ie_tipo_convenio_w,0)
	AND 	A.IE_SITUACAO = 'A'
	AND 	B.IE_SITUACAO = 'A'
	and 	c.ie_situacao = 'A'
	AND	qt_idade_w >= coalesce(a.qt_idade_minima,0)
	and	qt_idade_w <= coalesce(a.qt_idade_maxima,999)
	and	((a.ie_recem_nato =  coalesce(ie_recem_nato_w, 'A')) or (coalesce(a.ie_recem_nato, 'A') = 'A'))
	and	coalesce(a.ie_sexo, coalesce(ie_sexo_w,0))		= coalesce(ie_sexo_w,0)
	and	((coalesce(a.cd_estab_regra::text, '') = '') or (a.cd_estab_regra = cd_estabelecimento_w));


BEGIN


nr_prescricao_w := NR_PRESCRICAO_P;
cd_estabelecimento_logado_w             := wheb_usuario_pck.get_cd_estabelecimento;

select  max(IE_ESTAB_MOVIMENTO)
into STRICT    ie_estab_movto_w
from    parametro_estoque
where   cd_estabelecimento              = cd_estabelecimento_logado_w;

cd_estab_prescr_estoque_w       := null;

if (ie_estab_movto_w       = 'N') then
        cd_estab_prescr_estoque_w       := cd_estabelecimento_logado_w;
end if;

select	coalesce(max(ie_vincula_cirur_kit_mat),'N')
into STRICT	ie_vincula_cirur_kit_mat_w
from	parametro_faturamento
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

if (ie_vincula_cirur_kit_mat_w = 'S') then
	select	max(nr_cirurgia)
	into STRICT	nr_cirurgia_w
	from	cirurgia
	where	nr_prescricao = nr_prescricao_p;
	nr_seq_regra_lanc_w := nr_seq_regra_lanc_p;
end if;

NR_SEQ_ATEPACU_w	:= NR_SEQ_ATEPACU_p;

select	max(nr_atendimento),
	coalesce(max(ie_recem_nato), 'A')
into STRICT	nr_atendimento_w,
	ie_recem_nato_w
from	prescr_medica
where	nr_prescricao		= NR_PRESCRICAO_P;

if	((NR_SEQ_ATEPACU_P	= 0)or ( coalesce(NR_SEQ_ATEPACU_w::text, '') = '') or (NR_SEQ_ATEPACU_w = '')) then
	select	max(nr_seq_interno)
	into STRICT	NR_SEQ_ATEPACU_w	
	from	atend_paciente_unidade
	where	nr_atendimento		= nr_atendimento_w;
end if;

if (CD_LOCAL_ESTOQUE_P = '0') then
	cd_local_estoque_w:= (null)::numeric;
else
	cd_local_estoque_w:= (cd_local_estoque_p)::numeric;
end if;

DS_ERRO_P	:= '';

SELECT	a.DT_ENTRADA_UNIDADE,
	a.CD_SETOR_ATENDIMENTO,
	a.NR_ATENDIMENTO,
	b.cd_estabelecimento,
	coalesce((obter_idade_pf(b.cd_pessoa_fisica, clock_timestamp(), 'A'))::numeric ,0),
	substr(obter_sexo_pf(b.cd_pessoa_fisica, 'C'),1,1)
INTO STRICT	DT_ENTRADA_UNIDADE_W,
	CD_SETOR_ATENDIMENTO_W,
	NR_ATENDIMENTO_W,
	cd_estabelecimento_W,
	qt_idade_w,
	ie_sexo_w
from 	atend_paciente_unidade a,
	atendimento_paciente b	
WHERE	a.nr_atendimento = b.nr_atendimento
and	a.nr_seq_interno = nr_seq_atepacu_w;


ie_regra_uso_w:='N';

if (cd_funcao_p = 67) then
	ie_regra_uso_w:= coalesce(Obter_Valor_Param_Usuario(67,668,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_W),'N');
elsif (cd_funcao_p = 24) then
	ie_regra_uso_w:= coalesce(Obter_Valor_Param_Usuario(24,336,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_W),'N');
end if;
	
select	coalesce(max(IE_DISPARA_REGRA_LANC_KIT), 'N')
into STRICT	IE_DISPARA_REGRA_LANC_KIT_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;

SELECT * FROM OBTER_CONVENIO_EXECUCAO(NR_ATENDIMENTO_W, DT_ATENDIMENTO_P, CD_CONVENIO_W, CD_CATEGORIA_W, NR_DOC_CONVENIO_W, IE_TIPO_GUIA_W, cd_senha_w) INTO STRICT CD_CONVENIO_W, CD_CATEGORIA_W, NR_DOC_CONVENIO_W, IE_TIPO_GUIA_W, cd_senha_w;

if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') then
	select	ie_tipo_convenio
	into STRICT	ie_tipo_convenio_w
	from	convenio
	where	cd_convenio = cd_convenio_w;
end if;


if (cd_funcao_p	= 24) then

	if (NR_PRESCRICAO_P IS NOT NULL AND NR_PRESCRICAO_P::text <> '')	then
	
		VinculaGuiaPrescricao_w	:= coalesce(Obter_Valor_Param_Usuario(24,142,obter_perfil_ativo,nm_usuario_p,0),'N');

		select	max(nr_doc_conv)
		into STRICT	nr_doc_convenio_ww
		from	prescr_medica
		where	nr_prescricao	= NR_PRESCRICAO_P
		and 	VinculaGuiaPrescricao_w = 'S';
		
		if (coalesce(nr_doc_convenio_ww::text, '') = '') then
			select 	max(nr_doc_convenio)
			into STRICT	nr_doc_convenio_ww
			from 	prescr_procedimento 
			where	nr_prescricao	= NR_PRESCRICAO_P
			and 	VinculaGuiaPrescricao_w = 'P';
			
			if (coalesce(nr_doc_convenio_ww::text, '') = '') then
				select	max(a.nr_doc_convenio)
				into STRICT	nr_doc_convenio_ww
				from	procedimento_paciente a
				where	a.nr_sequencia = nr_seq_proc_pac_p
				and 	VinculaGuiaPrescricao_w = 'E';
			end if;
		end if;
		
		if (nr_doc_convenio_ww IS NOT NULL AND nr_doc_convenio_ww::text <> '') then
			NR_DOC_CONVENIO_W	:= nr_doc_convenio_ww;
		end if;
	end if;

	vincularDocConvenio_w	:= coalesce(Obter_Valor_Param_Usuario(24,62,obter_perfil_ativo,nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');

	if (vincularDocConvenio_w = 'S') and (coalesce(nr_doc_convenio_p,0) <> 0) then
		nr_doc_interno_w := nr_doc_convenio_p;
	end if;
end if;


OPEN C001;

  LOOP
    FETCH C001 INTO
      CD_MATERIAL_w,
      QT_MATERIAL_w,
      CD_UNIDADE_MEDIDA_CONSUMO_w,
      IE_VIA_APLICACAO_w,
      ie_entra_conta_w,
      ie_baixa_estoque_w;
    EXIT WHEN NOT FOUND; /* apply on c001 */

		select count(*)
			into STRICT nr_contador_prescr_w
		from  	material b,
		      	prescr_material  a
		where 	a.cd_material        = b.cd_material
		and 	a.nr_prescricao  = NR_PRESCRICAO_W
		AND coalesce(A.cd_motivo_baixa,0) = 0
		and 	coalesce(a.ie_medicacao_paciente,'N') <> 'S'
		and 	coalesce(a.ie_suspenso,'N') <> 'S'
		and 	a.cd_material = CD_MATERIAL_w
		and (coalesce(a.cd_local_estoque::text, '') = '' or a.cd_local_estoque = cd_local_estoque_w)
		and a.CD_KIT_MATERIAL = CD_KIT_MATERIAL_P;
		
		if (cd_funcao_p = 24) and (nr_contador_prescr_w = 0) and (IGNORAR_NR_PRESCRICAO = 'S') then
			NR_PRESCRICAO_W := null;
		end if;				
	
	    select count(1)
	    	into STRICT nr_contador_w
	    from material_atend_paciente
		where nr_atendimento = NR_ATENDIMENTO_W
        and nr_prescricao = NR_PRESCRICAO_W
        and cd_kit_material = CD_KIT_MATERIAL_P
        and cd_material = CD_MATERIAL_w;
		

    if (nr_contador_w = 0 or nr_contador_prescr_w > 0) then
	
      IE_ESTOQUE_DISP_w := 'N';
      qt_lancamento_w	  := null;

      
      if (cd_local_estoque_w IS NOT NULL AND cd_local_estoque_w::text <> '') then 
        IE_ESTOQUE_DISP_w := OBTER_DISP_ESTOQUE(CD_MATERIAL_W, (cd_local_estoque_w)::numeric , cd_estabelecimento_W, 0, QT_MATERIAL_w, '', IE_ESTOQUE_DISP_w);

      end if;    	
    	
    	
      if (IE_BAIXA_SEM_ESTOQUE_P = 'S') or (ie_baixa_estoque_w = 'N') OR (coalesce(cd_local_estoque_w::text, '') = '') or (IE_ESTOQUE_DISP_w = 'S') then

        begin
    		
        select obter_se_baixa_estoque_pac(cd_setor_atendimento_w, cd_material_w,null,0)
        into STRICT	ie_baixa_estoq_pac_w
;


        if (ie_entra_conta_w	= 'S') then
    		
    			
          if (coalesce(ie_regra_uso_w,'N') = 'S')  then
    			
            qt_lancamento_w:= QT_MATERIAL_W * QT_KIT_P;

    				
            SELECT * FROM Obter_regra_uso_mat(nr_atendimento_w, cd_material_w, qt_lancamento_w, cd_setor_atendimento_w, ie_acao_excesso_w, qt_excedida_w, nr_seq_regra_uso_mat_w, ds_erro_uso_w, cd_categoria_w, '0', null, null, DT_ATENDIMENTO_P, null) INTO STRICT ie_acao_excesso_w, qt_excedida_w, nr_seq_regra_uso_mat_w, ds_erro_uso_w;

    						   
            if (ie_acao_excesso_w = 'E') then
              if (qt_excedida_w   > 0) then
    					
                if 	((qt_lancamento_w - qt_excedida_w) >= 0) then
    							
                  nr_seq_excedido_w := Inserir_Material_Atend_Pac(nr_atendimento_w, null, cd_material_w, DT_ATENDIMENTO_P, cd_convenio_w, cd_categoria_w, nr_seq_atepacu_w, nm_usuario_p, qt_excedida_w, cd_local_estoque_w, '1', 'N', nr_seq_excedido_w, null, null);

            
                           
                  CALL atualiza_preco_material(nr_seq_excedido_w, nm_usuario_p);

                  select 	max(nr_interno_conta)
                  into STRICT	nr_conta_w
                  from 	material_atend_paciente
                  where 	nr_sequencia = nr_seq_excedido_w;	

                  select	max(cd_motivo_exc_conta)
                  into STRICT	cd_motivo_exc_conta_w
                  from	parametro_faturamento
                  where	cd_estabelecimento = cd_estabelecimento_w;							
    							
                  CALL excluir_matproc_conta(nr_seq_excedido_w, nr_conta_w, coalesce(cd_motivo_exc_conta_w, 12), WHEB_MENSAGEM_PCK.get_texto(281507), 'M', nm_usuario_p);				
    							
                  if ((qt_lancamento_w - qt_excedida_w) = 0) then
                    NR_SEQ_W := 0;
                    goto final_mat;
                  else
                    qt_lancamento_w := qt_lancamento_w - qt_excedida_w;
                  end if;
                end if;
              end if;
            end if;
    				
          end if;    		
    		
    							
          SELECT 	nextval('material_atend_paciente_seq')
          INTO STRICT	NR_SEQ_W
;

          INSERT INTO
          MATERIAL_ATEND_PACIENTE(NR_SEQUENCIA,
              NR_ATENDIMENTO,
              DT_ATENDIMENTO,
              CD_MATERIAL,
              CD_MATERIAL_PRESCRICAO,
              IE_VIA_APLICACAO,
              QT_MATERIAL,
              CD_UNIDADE_MEDIDA,
              NR_PRESCRICAO,
              NR_SEQ_PROC_PRINC,
              CD_SETOR_ATENDIMENTO,
              CD_LOCAL_ESTOQUE,
              QT_EXECUTADA,
              CD_ACAO,
              VL_UNITARIO,
              QT_AJUSTE_CONTA,
              IE_VALOR_INFORMADO,
              IE_GUIA_INFORMADA,
              IE_AUDITORIA,
              NM_USUARIO_ORIGINAL,
              CD_SITUACAO_GLOSA,
              DT_ENTRADA_UNIDADE,
              NR_SEQ_ATEPACU,
              DT_ATUALIZACAO,
              NM_USUARIO,
              CD_CONVENIO,
              CD_CATEGORIA,
              NR_DOC_CONVENIO,
              IE_TIPO_GUIA,
              cd_senha,
              CD_KIT_MATERIAL,
              dt_atualizacao_estoque,
              CD_MATERIAL_exec,
              nr_doc_interno,
              nr_cirurgia,
              nr_seq_regra_lanc)
          VALUES (NR_SEQ_W,
              NR_ATENDIMENTO_W,
              DT_ATENDIMENTO_P,
              CD_MATERIAL_W,
              CD_MATERIAL_W,
              IE_VIA_APLICACAO_W,
              coalesce(qt_lancamento_w, QT_MATERIAL_W * QT_KIT_P),
              CD_UNIDADE_MEDIDA_CONSUMO_w,
              NR_PRESCRICAO_W,
              (NR_SEQ_PROC_PRINC_P)::numeric ,
              CD_SETOR_ATENDIMENTO_W,
              cd_local_estoque_w,
              QT_MATERIAL_W,
              1,
              0,
              0,
              'N',
              'N',
              'N',
              NM_USUARIO_P,
              0,
              DT_ENTRADA_UNIDADE_W,
              NR_SEQ_ATEPACU_w,
              clock_timestamp(),
              NM_USUARIO_P,
              CD_CONVENIO_W,
              CD_CATEGORIA_w,
              NR_DOC_CONVENIO_W,
              IE_TIPO_GUIA_W,
              cd_senha_w,
              CD_KIT_MATERIAL_P,
              CASE WHEN ie_baixa_estoque_w='S' THEN  clock_timestamp()  ELSE null END ,
              CD_MATERIAL_W,
              nr_doc_interno_w,
              nr_cirurgia_w,
              nr_seq_regra_lanc_w);
    					
          --if (nvl(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
          if (NR_SEQ_W > 0) then
            CALL ATUALIZA_PRECO_MATERIAL(NR_SEQ_W, NM_USUARIO_P);			
          end if;

          if (coalesce(IE_DISPARA_REGRA_LANC_KIT_w,'N') = 'S') then
            CALL Gerar_Lanc_Automatico_Mat(nr_atendimento_w,cd_local_estoque_p,132,nm_usuario_p, NR_SEQ_W,null,null);
          end if;
    			
          CALL gerar_autor_regra(nr_atendimento_w, NR_SEQ_W, null, null, null, null, 'EP', nm_usuario_p, null, null, null, null, null, null,'','','');
    			

          if (ie_baixa_estoque_w	= 'S') and (ie_baixa_estoq_pac_w   = 'S') and (cd_local_estoque_w IS NOT NULL AND cd_local_estoque_w::text <> '') then
            CALL Gerar_Prescricao_Estoque(cd_estab_prescr_estoque_w,
              NR_ATENDIMENTO_W,
              DT_ENTRADA_UNIDADE_W,
              CD_MATERIAL_W,
              dt_atendimento_p,
              '1',
              (cd_local_estoque_w)::numeric ,
              coalesce(qt_lancamento_w, QT_MATERIAL_W * QT_KIT_P),
              CD_SETOR_ATENDIMENTO_W,
              CD_UNIDADE_MEDIDA_CONSUMO_w,
              NM_USUARIO_P,
              'I',
              NR_PRESCRICAO_P,
              null,
              NR_SEQ_PROC_PRINC_P,
              NR_SEQ_W,
              '',
              '',
              0,
              0,
              0,
              null, '','','');
          end if;
    			
          <<final_mat>>
    			
          if (coalesce(IE_AUDITORIA_P,'N') <> 'N') then
            update	material_atend_paciente
            set	ie_auditoria = IE_AUDITORIA_P
            where	nr_sequencia = NR_SEQ_W;
          end if;
        else
          if (ie_baixa_estoque_w	= 'S') and (ie_baixa_estoq_pac_w   = 'S') and (cd_local_estoque_w IS NOT NULL AND cd_local_estoque_w::text <> '') then
          CALL Gerar_Prescricao_Estoque(cd_estabelecimento_W,
              NR_ATENDIMENTO_W,
              DT_ENTRADA_UNIDADE_W,
              CD_MATERIAL_W,
              dt_atendimento_p,
              '1',
              (cd_local_estoque_w)::numeric ,
              (QT_MATERIAL_W * QT_KIT_P),
              CD_SETOR_ATENDIMENTO_W,
              CD_UNIDADE_MEDIDA_CONSUMO_w,
              NM_USUARIO_P,
              'I',
              NR_PRESCRICAO_P,
              null,
              NR_SEQ_PROC_PRINC_P,
              0,
              '',
              '',
              0,
              0,
              0,
              null, '','','');
          end if;


        end if;
        end;
      ELSE
        ie_entrou_w:= 'S';
        ds_erro_w :=  substr(ds_erro_w  || cd_material_w || CHR(13) || ' ',1,3500);
      END IF;
  end if;
  END LOOP;

  CLOSE C001;
if (ie_entrou_w = 'S') then
	ds_erro_w:= msg_erro_padrao_w || ds_erro_w;
end if;

/*SO2882223 Delphi limita o retorno para 255 datatype=ftString*/

ds_erro_p	:= substr(ds_erro_w,1,255);
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_kit_material_exec (CD_KIT_MATERIAL_P bigint, DT_ATENDIMENTO_P timestamp, NR_PRESCRICAO_P bigint, IE_AUDITORIA_P text, CD_LOCAL_ESTOQUE_P text, NR_SEQ_PROC_PRINC_P text, NR_SEQ_ATEPACU_P bigint, IE_BAIXA_SEM_ESTOQUE_P text, NM_USUARIO_P text, QT_KIT_P bigint, DS_ERRO_P INOUT text, nr_doc_convenio_p bigint, nr_seq_regra_lanc_p bigint, cd_funcao_p bigint default obter_funcao_ativa, nr_seq_proc_pac_p bigint default null, IGNORAR_NR_PRESCRICAO char default 'S') FROM PUBLIC;

