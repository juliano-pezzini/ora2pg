-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE qt_marcar_dias_trat_aut ((nr_seq_pendencia_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, nr_min_duracao_p bigint) is --,				ds_retorno_p	out	varchar2) is 
 dt_horario_w timestamp) AS $body$
DECLARE

	PERFORM	x.dt_horario,
		x.nr_seq_local
	from	w_agenda_quimio x,
		qt_local z
	where	z.nr_sequencia = x.nr_seq_local
	and	z.cd_estabelecimento = cd_estabelecimento_p
	and	x.nm_usuario = nm_usuario_p
	and	x.ie_status = 'L'
	and	not exists (	SELECT	1
				from	w_agenda_quimio y
				where	y.nr_seq_local = x.nr_seq_local
				--and	y.nm_usuario = nm_usuario_p
				and	y.ie_status <> 'L'
				and	y.dt_horario between x.dt_horario and x.dt_horario + qt_tempo_medic_w/1440)
	and	x.dt_horario > clock_timestamp()
	and	(to_char(x.dt_horario,'hh24:mi') > (select coalesce(max(to_char(hr_min_inicio,'hh24:mi')),'00:00') from parametro_agenda_quimio)
	and	((x.dt_horario > (clock_timestamp() + nr_horas_marcacao_w/24)) or (nr_horas_marcacao_w = 0)))
	--and	((((x.dt_horario > (sysdate + nr_horas_marcacao_w/24)) and trunc(x.dt_horario) = trunc(sysdate))) or trunc(x.dt_horario) <> trunc(sysdate) or nr_horas_marcacao_w = 0))
	and	Qt_Consitir_Classif_Dur(x.dt_horario, qt_tempo_medic_w, z.nr_sequencia, coalesce(cd_setor_atendimento_w, cd_setor_atendimento_ww)) = 'S'
	and Qt_Obter_Se_Hor_Prof(z.nr_sequencia,
			cd_codigo_profissional_w,
			x.dt_horario,
			cd_estabelecimento_p,
			nm_usuario_p,
			nr_seq_profissional_w) = 'S'
	order by dt_horario, nr_seq_local;

C02 CURSOR FOR
	SELECT 	dt_horario,
		nr_seq_local
	into STRICT	dt_horario_w,
		nr_seq_local_w
	FROM (	
		SELECT	x.dt_horario,
			x.nr_seq_local,
			ROW_NUMBER() OVER (ORDER BY coalesce(z.nr_seq_apres,1), dt_horario, z.nr_sequencia ) AS row_id_pagina
		from	w_agenda_quimio x,
			qt_local z
		where	z.nr_sequencia = x.nr_seq_local
		and	z.cd_estabelecimento = cd_estabelecimento_p
		and	x.nm_usuario = nm_usuario_p
		and	x.ie_status = 'L'
		and Qt_Obter_Se_Hor_Prof(z.nr_sequencia,
			cd_codigo_profissional_w,
			x.dt_horario,
			cd_estabelecimento_p,
			nm_usuario_p,
			nr_seq_profissional_w) = 'S'
		--AND	NR_sEQ_LOcal = NR_sEQ_LOCAL_P

		--and	nvl(z.nr_seq_grupo_quimio, nr_seq_grupo_quimio_w)	= nr_seq_grupo_quimio_w
		and	not exists (	SELECT	1
					from	w_agenda_quimio y 
					where	y.nr_seq_local = x.nr_seq_local
					and	y.ie_status <> 'L'
					and	y.dt_horario between x.dt_horario + 1/1440 and x.dt_horario + (qt_tempo_medic_w -1)/1440)
		and	x.dt_horario > clock_timestamp()
		and	(to_char(x.dt_horario,'hh24:mi') > (select coalesce(max(to_char(hr_min_inicio,'hh24:mi')),'00:00') from parametro_agenda_quimio)
		and	((x.dt_horario > (clock_timestamp() + coalesce(nr_horas_marcacao_w,0)/24)) or (coalesce(nr_horas_marcacao_w,0) = 0)))
		and	Qt_Consitir_Classif_Dur(x.dt_horario, qt_tempo_medic_w, z.nr_sequencia, coalesce(cd_setor_atendimento_w, cd_setor_atendimento_ww)) = 'S'
	      ) alias22
	WHERE row_id_pagina <= 1;
				
				

BEGIN

select	coalesce(max(Obter_Valor_Param_Usuario(865, 119, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)),0)
into STRICT	nr_horas_marcacao_w
;

ie_mesmo_local_w		:= coalesce(Obter_Valor_Param_Usuario(865, 230, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');

select	count(*)
into STRICT	qt_marcacao_w
from	agenda_quimio_marcacao
where	nr_seq_pend_agenda = nr_seq_pendencia_p
and	coalesce(ie_gerado,'N') = 'N';

cd_codigo_profissional_w := Obter_Pessoa_Fisica_Usuario(nm_usuario_p, 'C');

select 	max(nr_sequencia)
into STRICT 	nr_seq_profissional_w
from 	qt_profissional
where 	cd_pessoa_fisica = cd_codigo_profissional_w;

if (qt_marcacao_w = 0) then
	select	min(trunc(coalesce(b.dt_prevista_agenda,coalesce(b.dt_real, b.dt_prevista)))),
			max(a.cd_setor_atendimento)
	into STRICT	dt_prevista_w,
			cd_setor_atendimento_w
	from	paciente_setor a,
		paciente_atendimento b
	where	b.nr_seq_pend_agenda	= nr_seq_pendencia_p
	and	a.nr_seq_paciente	= b.nr_seq_paciente
	and	coalesce(b.dt_suspensao::text, '') = ''
	and	coalesce(b.dt_cancelamento::text, '') = '';

	select	max(qt_obter_dur_aplicacao(b.ds_dia_ciclo,a.nr_seq_medicacao,a.cd_protocolo,b.nr_seq_atendimento,coalesce(b.dt_real, b.dt_prevista),nr_seq_pendencia_p,nm_usuario_p,cd_estabelecimento_p)),
			max(a.cd_setor_atendimento)
	into STRICT	qt_tempo_medic_w,
			cd_setor_atendimento_ww
	from	paciente_setor a,
		paciente_atendimento b
	where	b.nr_seq_pend_agenda	= nr_seq_pendencia_p
	and	a.nr_seq_paciente	= b.nr_seq_paciente
	and	coalesce(b.dt_suspensao::text, '') = ''
	and	coalesce(b.dt_cancelamento::text, '') = ''
	and	trunc(coalesce(b.dt_prevista_agenda,coalesce(b.dt_real, b.dt_prevista)))	= trunc(dt_prevista_w);
	
	if (dt_prevista_w IS NOT NULL AND dt_prevista_w::text <> '') then
		CALL Qt_Gerar_Horario(nr_seq_pendencia_p, null, trunc(dt_prevista_w), nm_usuario_p, nr_min_duracao_p,
						cd_pessoa_fisica_p ,null, null, null, null,'');
		
	end if;	
	
	if (ie_mesmo_local_w = 'N') then
		open C01;
		loop
		fetch C01 into	
			dt_horario_w,
			nr_seq_local_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			dt_horario_w	:= dt_horario_w;
			nr_seq_local_w	:= nr_seq_local_w;
			exit;
			end;
		end loop;
		close C01;				
	else
		open C02;
		loop
		fetch C02 into	
			dt_horario_w,
			nr_seq_local_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			dt_horario_w	:= dt_horario_w;
			nr_seq_local_w	:= nr_seq_local_w;
			exit;
			end;
		end loop;
		close C02;				
	end if;
					
	if (dt_horario_w IS NOT NULL AND dt_horario_w::text <> '') and (nr_seq_local_w IS NOT NULL AND nr_seq_local_w::text <> '') then

		ds_retorno_w := qt_marcar_dias_trat(nr_seq_pendencia_p, 0, dt_horario_w, nm_usuario_p, nr_seq_local_w, cd_estabelecimento_p, cd_pessoa_fisica_p, nr_min_duracao_p, null, null, ds_retorno_w, 'N', qt_tempo_medic_w, nr_horas_marcacao_w);
	end if;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qt_marcar_dias_trat_aut ((nr_seq_pendencia_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, nr_min_duracao_p bigint) is  dt_horario_w timestamp) FROM PUBLIC;

