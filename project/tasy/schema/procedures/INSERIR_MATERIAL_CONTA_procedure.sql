-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_material_conta (cd_material_p bigint, qt_material_p bigint, dt_material_p timestamp, nr_interno_conta_p bigint, nr_atendimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, nr_seq_cor_exec_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_info_p INOUT text, ds_abort_p INOUT text) AS $body$
DECLARE

					
cd_setor_atendimento_w	material_atend_paciente.cd_setor_atendimento		%type;
dt_entrada_unidade_w	material_atend_paciente.dt_entrada_unidade		%type;
nr_seq_atepacu_w	material_atend_paciente.nr_seq_atepacu			%type;
ie_tipo_guia_w		material_atend_paciente.ie_tipo_guia			%type;
cd_plano_convenio_w	atend_categoria_convenio.cd_plano_convenio		%type;
qt_lancamento_w		material_atend_paciente.qt_material			%type := qt_material_p;
cd_convenio_w		material_atend_paciente.cd_convenio			%type := cd_convenio_p;
cd_categoria_w		material_atend_paciente.cd_categoria			%type := cd_categoria_p;
ie_acao_excesso_w								varchar(10);
qt_excedida_w									double precision;
nr_seq_regra_uso_mat_w								bigint;
ds_erro_uso_w									varchar(255);
nr_seq_excedido_w	material_atend_paciente.nr_sequencia			%type;
nr_conta_w		material_atend_paciente.nr_interno_conta		%type;
cd_motivo_exc_conta_w	parametro_faturamento.cd_motivo_exc_conta		%type;
ie_funcao_medico_w	parametro_faturamento.cd_funcao_medico			%type;
ds_texto_w									varchar(255);
cd_convenio_glosa_w	convenio.cd_convenio_glosa				%type;
cd_categoria_glosa_w	convenio.cd_categoria_glosa				%type;
nr_doc_convenio_w	atend_categoria_convenio.nr_doc_convenio		%type;
cd_cgc_prestador_w	material_atend_paciente.cd_cgc_prestador		%type;
nr_interno_conta_w	conta_paciente.nr_interno_conta				%type := nr_interno_conta_p;
nr_interno_conta_ww	conta_paciente.nr_interno_conta				%type;
cd_motivo_exc_conta_ww	material_atend_paciente.cd_motivo_exc_conta		%type;
nr_sequencia_w		material_atend_paciente.nr_sequencia			%type;
ie_regra_uso_mat_w								varchar(1);
ie_permite_incluir_w								varchar(1);
cd_tipo_baixa_w									varchar(255);
qt_existe_w									smallint;
ie_atualiza_estoque_w	tipo_baixa_prescricao.ie_atualiza_estoque		%type;
cd_local_estoque_w	material_atend_paciente.cd_local_estoque		%type;
ie_consiste_plano_convenio_w							varchar(1) := 'N';
ie_tipo_atendimento_w	atendimento_paciente.ie_tipo_atendimento		%type;
ds_retorno_w									varchar(255);
ie_bloqueia_agenda_w								varchar(1)	:= 'N';
ie_regra_w		regra_convenio_plano_mat.ie_regra			%type;
nr_seq_regra_w		regra_convenio_plano_mat.nr_sequencia			%type;
ie_valor_informado_w	material_atend_paciente.ie_valor_informado		%type := 'N';
ie_tipo_lanc_auto_w								varchar(3)	:= '0';


BEGIN

ie_permite_incluir_w 		:= obter_valor_param_usuario(67, 2, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);
cd_tipo_baixa_w			:= obter_valor_param_usuario(67, 24, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);
ie_tipo_lanc_auto_w	 	:= obter_valor_param_usuario(67, 117, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);
ie_consiste_plano_convenio_w 	:= obter_valor_param_usuario(67, 124, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);
ie_regra_uso_mat_w 		:= obter_valor_param_usuario(67, 143, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);

if (ie_permite_incluir_w = 'N') then
	ds_abort_p := wheb_mensagem_pck.get_texto(456812);
	goto final;
end if;

select	ie_tipo_atendimento,
	cd_setor_atendimento,
	dt_entrada_unidade,
	nr_seq_atepacu,
	ie_tipo_guia,
	cd_plano_convenio,
	CASE WHEN obter_valor_conv_estab(cd_convenio_w, cd_estabelecimento_p, 'IE_DOC_CONVENIO')='N' THEN  null WHEN obter_valor_conv_estab(cd_convenio_w, cd_estabelecimento_p, 'IE_DOC_CONVENIO')='S' THEN  coalesce(cd_senha, nr_doc_convenio)  ELSE nr_doc_convenio END
into STRICT	ie_tipo_atendimento_w,
	cd_setor_atendimento_w,
	dt_entrada_unidade_w,
	nr_seq_atepacu_w,
	ie_tipo_guia_w,
	cd_plano_convenio_w,
	nr_doc_convenio_w
from 	atendimento_paciente_v
where	nr_atendimento = nr_atendimento_p;

select 	max(cd_funcao_medico),
	max(cd_motivo_exc_conta)
into STRICT	ie_funcao_medico_w,
	cd_motivo_exc_conta_w
from	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_p;

select	a.cd_cgc
into STRICT	cd_cgc_prestador_w
from 	estabelecimento a,
	atendimento_paciente b
where	a.cd_estabelecimento = b.cd_estabelecimento
and	b.nr_atendimento = nr_atendimento_p;

begin
select	1 qt_existe
into STRICT	qt_existe_w
from	tipo_baixa_prescricao
where	ie_prescricao_devolucao = 'P'
and	cd_tipo_baixa = cd_tipo_baixa_w  LIMIT 1;
exception
when others then
	qt_existe_w := 0;
end;

if (qt_existe_w = 1) then
	select	ie_atualiza_estoque
	into STRICT	ie_atualiza_estoque_w
	from	tipo_baixa_prescricao
	where	ie_prescricao_devolucao = 'P'
	and	cd_tipo_baixa = cd_tipo_baixa_w
	order by	ds_tipo_baixa;
else
	select	ie_atualiza_estoque
	into STRICT	ie_atualiza_estoque_w
	from	tipo_baixa_prescricao
	where	ie_prescricao_devolucao = 'P'
	and	ie_tipo_padrao = 'S'
	order by	ds_tipo_baixa;
end if;

if (ie_atualiza_estoque_w = 'S') then

	select  a.cd_local_estoque
	into STRICT	cd_local_estoque_w
	from    local_estoque a,
		setor_atendimento b
	where   a.cd_local_estoque = b.cd_local_estoque
	and     b.cd_setor_atendimento = cd_setor_atendimento_w
	and     a.ie_situacao    = 'A';
	
end if;

if (ie_consiste_plano_convenio_w = 'M' or ie_consiste_plano_convenio_w = 'A') then

	SELECT * FROM consiste_mat_plano_convenio(cd_convenio_p, cd_plano_convenio_w, cd_material_p, nr_atendimento_p, cd_setor_atendimento_w, ds_retorno_w, ie_bloqueia_agenda_w, ie_regra_w, nr_seq_regra_w, qt_lancamento_w, dt_material_p, null, cd_estabelecimento_p, cd_categoria_w, ie_tipo_atendimento_w) INTO STRICT ds_retorno_w, ie_bloqueia_agenda_w, ie_regra_w, nr_seq_regra_w;
		
	if	((ie_regra_w = 1 or ie_regra_w = 2 or ie_regra_w = 8) AND ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') then
		
		ds_abort_p := wheb_mensagem_pck.get_texto(451967, 'CD_MAT=' || ds_retorno_w);
		goto final;
	
	end if;

end if;

if (ie_regra_uso_mat_w = 'S') then

	SELECT * FROM obter_regra_uso_mat(nr_atendimento_p, cd_material_p, qt_lancamento_w, cd_setor_atendimento_w, ie_acao_excesso_w, qt_excedida_w, nr_seq_regra_uso_mat_w, ds_erro_uso_w, cd_categoria_w, cd_plano_convenio_w, null, cd_cgc_prestador_w, dt_material_p, null, nr_interno_conta_w) INTO STRICT ie_acao_excesso_w, qt_excedida_w, nr_seq_regra_uso_mat_w, ds_erro_uso_w;

	if (ie_acao_excesso_w = 'E') then
		if (qt_excedida_w   > 0) then

			if 	((qt_lancamento_w - qt_excedida_w) >= 0) then

				nr_seq_excedido_w := inserir_material_atend_pac(nr_atendimento_p, null, cd_material_p, dt_material_p, cd_convenio_w, cd_categoria_w, nr_seq_atepacu_w, nm_usuario_p, qt_excedida_w, cd_local_estoque_w, '1', 'N', nr_seq_excedido_w, null, null);

				CALL atualiza_preco_material(nr_seq_excedido_w, nm_usuario_p);

				select 	max(nr_interno_conta)
				into STRICT	nr_conta_w
				from 	material_atend_paciente
				where 	nr_sequencia = nr_seq_excedido_w;
				--Excluido pela regra de uso da func?o Cadastro de Convenios
				ds_texto_w := substr(wheb_mensagem_pck.get_texto(306744),1,255);
				CALL excluir_matproc_conta(nr_seq_excedido_w, nr_conta_w, coalesce(cd_motivo_exc_conta_w, 12), ds_texto_w, 'M', nm_usuario_p);

				if ((qt_lancamento_w - qt_excedida_w) = 0) then
					ds_abort_p := wheb_mensagem_pck.get_texto(152722);
					goto final;
				else
					qt_lancamento_w := qt_lancamento_w - qt_excedida_w;
				end if;
			end if;
		end if;

	elsif (ie_acao_excesso_w = 'P') then
	
		SELECT * FROM obter_convenio_particular_pf(cd_estabelecimento_p, cd_convenio_w, '', dt_material_p, cd_convenio_glosa_w, cd_categoria_glosa_w) INTO STRICT cd_convenio_glosa_w, cd_categoria_glosa_w;

		if (qt_excedida_w   >= qt_lancamento_w) then
			nr_interno_conta_w	:= null;
			cd_convenio_w		:= cd_convenio_glosa_w;
			cd_categoria_w		:= cd_categoria_glosa_w;
		else
			qt_lancamento_w := qt_lancamento_w - qt_excedida_w;

			nr_seq_excedido_w := inserir_material_atend_pac(nr_atendimento_p, null, cd_material_p, dt_material_p, cd_convenio_glosa_w, cd_categoria_glosa_w, nr_seq_atepacu_w, nm_usuario_p, qt_excedida_w, cd_local_estoque_w, '1', 'N', nr_seq_excedido_w, null, null);

			CALL atualiza_preco_material(nr_seq_excedido_w, nm_usuario_p);
			CALL ajustar_conta_vazia(nr_atendimento_p, nm_usuario_p);
		end if;
		
	elsif (ie_acao_excesso_w = 'Z') then
	
		if (qt_excedida_w   >= qt_lancamento_w) then
			ie_valor_informado_w := 'S';
		else		
			qt_lancamento_w := qt_lancamento_w - qt_excedida_w;
			
			nr_seq_excedido_w := inserir_material_atend_pac(nr_atendimento_p, null, cd_material_p, dt_material_p, cd_convenio_w, cd_categoria_w, nr_seq_atepacu_w, nm_usuario_p, qt_excedida_w, cd_local_estoque_w, '1', 'S', nr_seq_excedido_w, null, null);
			
			CALL atualiza_preco_material(nr_seq_excedido_w, nm_usuario_p);
			CALL ajustar_conta_vazia(nr_atendimento_p, nm_usuario_p);			
		end if;
		
	elsif (ie_acao_excesso_w <> 'P' and (ds_erro_uso_w IS NOT NULL AND ds_erro_uso_w::text <> '')) then	
		ds_abort_p := ds_erro_uso_w;
		goto final;		
	end if;

end if;

select	nextval('material_atend_paciente_seq')
into STRICT	nr_sequencia_w
;

insert into material_atend_paciente(nr_sequencia,
	nr_atendimento,
	dt_entrada_unidade,
	cd_material,
	cd_material_exec,
	dt_conta,
	dt_atendimento,
	qt_material,
	qt_executada,
	dt_atualizacao,
	nm_usuario,
	cd_unidade_medida,
	cd_convenio,
	cd_categoria,
	cd_acao,
	cd_setor_atendimento,
	ie_valor_informado,
	nm_usuario_original,
	cd_setor_receita,
	cd_situacao_glosa,
	nr_doc_convenio,
	nr_seq_atepacu,
	ie_auditoria,
	ie_tipo_guia,
	nr_interno_conta,
	cd_cgc_prestador,
	cd_local_estoque,
	nr_seq_cor_exec
	)
values (nr_sequencia_w,
	nr_atendimento_p,
	dt_entrada_unidade_w,
	cd_material_p,
	cd_material_p,
	dt_material_p,
	dt_material_p,
	qt_lancamento_w,
	qt_lancamento_w,
	clock_timestamp(),
	nm_usuario_p,
	substr(obter_dados_material_estab(cd_material_p, cd_estabelecimento_p, 'UMS'), 1, 30),
	cd_convenio_w,
	cd_categoria_w,
	'1',
	cd_setor_atendimento_w,
	ie_valor_informado_w,
	nm_usuario_p,
	cd_setor_atendimento_w,
	0,
	nr_doc_convenio_w,
	nr_seq_atepacu_w,
	'N',
	ie_tipo_guia_w,
	nr_interno_conta_w,
	cd_cgc_prestador_w,
	cd_local_estoque_w,
	nr_seq_cor_exec_p
	);
	
CALL atualiza_preco_material(nr_sequencia_w, nm_usuario_p);

if (ie_tipo_lanc_auto_w = '0') then
	CALL gerar_lanc_automatico_mat(nr_atendimento_p, null, 132, nm_usuario_p, nr_sequencia_w, null, null);
end if;

CALL gerar_autor_regra(nr_atendimento_p, nr_sequencia_w, null, null, null, null, 'CP', nm_usuario_p, null, null, null, null, null, null, '', '', '');

select 	nr_interno_conta,
	cd_motivo_exc_conta
into STRICT	nr_interno_conta_ww,
	cd_motivo_exc_conta_ww
from 	material_atend_paciente
where 	nr_sequencia = nr_sequencia_w;

if (ds_erro_uso_w IS NOT NULL AND ds_erro_uso_w::text <> '') then
	ds_info_p	:= ds_erro_uso_w;
elsif (nr_interno_conta_ww <> coalesce(nr_interno_conta_w,0)) then
	ds_info_p	:= wheb_mensagem_pck.get_texto(150498);
elsif (cd_motivo_exc_conta_ww IS NOT NULL AND cd_motivo_exc_conta_ww::text <> '') then
	ds_info_p	:= wheb_mensagem_pck.get_texto(1091279);
elsif (coalesce(nr_interno_conta_ww::text, '') = '') then
	ds_info_p	:= wheb_mensagem_pck.get_texto(1091280);
end if;

<<final>>

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_material_conta (cd_material_p bigint, qt_material_p bigint, dt_material_p timestamp, nr_interno_conta_p bigint, nr_atendimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, nr_seq_cor_exec_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_info_p INOUT text, ds_abort_p INOUT text) FROM PUBLIC;

