-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE med_gerar_encaixe ( ie_classif_agenda_p text, ie_status_paciente_p text, dt_agenda_p timestamp, hr_encaixe_p text, nr_minuto_duracao_p bigint, cd_agenda_p bigint, nm_usuario_origem_p text, cd_pessoa_fisica_p text, nm_pessoa_fisica_p text, cd_convenio_p bigint, nr_seq_plano_p bigint, nm_usuario_p text) AS $body$
DECLARE

				 
nr_seq_agenda_w		bigint;
dt_encaixe_w		timestamp;
cd_turno_w		varchar(1);
ie_horario_livre_w	varchar(1);


BEGIN 
 
if (ie_classif_agenda_p IS NOT NULL AND ie_classif_agenda_p::text <> '') and (ie_status_paciente_p IS NOT NULL AND ie_status_paciente_p::text <> '') and (dt_agenda_p IS NOT NULL AND dt_agenda_p::text <> '') and (hr_encaixe_p IS NOT NULL AND hr_encaixe_p::text <> '') and (nr_minuto_duracao_p IS NOT NULL AND nr_minuto_duracao_p::text <> '') and (cd_agenda_p IS NOT NULL AND cd_agenda_p::text <> '') and (nm_usuario_origem_p IS NOT NULL AND nm_usuario_origem_p::text <> '') then 
	begin	 
	 
	/* obter horário agenda x encaixe */
 
	dt_encaixe_w := to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || hr_encaixe_p || ':00','dd/mm/yyyy hh24:mi:ss');
	 
	/* obter turno */
 
	select	obter_turno_horario_agenda(cd_agenda_p, dt_encaixe_w) 
	into STRICT	cd_turno_w 
	;
	 
	/* Na rotina do delphi existe uma consistência = verifica_horario_livre_agenda 
	Não foi feita pois como trata-se de um novo registro no caso, ficará difícil de 
	no mesmo horário está sendo ocupado no momento ! */
 
	 
	/* obter sequência */
 
	select	nextval('agenda_consulta_seq') 
	into STRICT	nr_seq_agenda_w 
	;
	 
	/*Verifica horário livre*/
 
	ie_horario_livre_w := coalesce(verifica_horario_livre_agenda(cd_agenda_p,dt_encaixe_w,nr_seq_agenda_w), 'S');	
	 
	if (ie_horario_livre_w <> 'S') then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(388462);
	end if;
	 
 
	/* gerar encaixe */
 
	insert into agenda_consulta( 
		nr_sequencia, 
		cd_agenda, 
		dt_agenda, 
		nr_minuto_duracao, 
		ie_status_paciente, 
		ie_status_agenda, 
		cd_turno, 
		cd_pessoa_fisica, 
		nm_paciente, 
		cd_convenio, 
		nr_seq_plano, 
		dt_agendamento, 
		nm_usuario_origem, 
		nm_usuario, 
		dt_atualizacao, 
		ie_encaixe, 
		ie_classif_agenda) 
	values (	nr_seq_agenda_w, 
		cd_agenda_p, 
		dt_encaixe_w, 
		nr_minuto_duracao_p, 
		ie_status_paciente_p, 
		'N', 
		cd_turno_w, 
		cd_pessoa_fisica_p, 
		substr(coalesce(obter_nome_pf(cd_pessoa_fisica_p), nm_pessoa_fisica_p),1,60), 
		cd_convenio_p, 
		nr_seq_plano_p,	 
		clock_timestamp(), 
		nm_usuario_p, 
		nm_usuario_p, 
		clock_timestamp(), 
		'S', 
		ie_classif_agenda_p);
	 
	end;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE med_gerar_encaixe ( ie_classif_agenda_p text, ie_status_paciente_p text, dt_agenda_p timestamp, hr_encaixe_p text, nr_minuto_duracao_p bigint, cd_agenda_p bigint, nm_usuario_origem_p text, cd_pessoa_fisica_p text, nm_pessoa_fisica_p text, cd_convenio_p bigint, nr_seq_plano_p bigint, nm_usuario_p text) FROM PUBLIC;

