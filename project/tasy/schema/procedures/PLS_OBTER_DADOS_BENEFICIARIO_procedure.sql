-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_dados_beneficiario ( nr_seq_segurado_p bigint, nr_carteira_p INOUT text, nr_seq_contrato_p INOUT text, nr_contrato_p INOUT text, ds_estipulante_p INOUT text, dt_adesao_p INOUT text, dt_liberacao_p INOUT text, dt_migracao_p INOUT text, dt_reativacao_p INOUT text, ds_pagador_p INOUT text, ds_vendedor_p INOUT text, ds_subestipulante_p INOUT text, ds_titular_p INOUT text, dt_inclusao_p INOUT text, dt_rescisao_p INOUT text, dt_limite_p INOUT text, ds_produto_p INOUT text, nm_fantasia_p INOUT text, nr_protocolo_ans_p INOUT text, ie_contratacao_p INOUT text, ds_seg_assist_p INOUT text, ds_formacao_preco_p INOUT text, ds_abrang_geo_p INOUT text, cd_anterior_p INOUT text, ie_regulamentacao_p INOUT text, ds_acomodacao_p INOUT text, ie_situacao_p INOUT text, ds_fator_p INOUT text, ds_origem_cob_p INOUT text, nr_seq_plano_p INOUT bigint, nr_seq_rol_p INOUT bigint, ds_origem_carencia_p INOUT text, ds_origem_limitacao_p INOUT text, ds_canal_venda_p INOUT text, dt_validade_carteira_p INOUT text, dt_suspensao_p INOUT text, ds_suspensao_p INOUT text, dt_devolucao_p INOUT text, ie_nascido_plano_p INOUT text, ds_parentesco_p INOUT text, cd_cartao_intercambio_p INOUT text, ds_tipo_segurado_p INOUT text, ie_situacao_trab_p INOUT text, dt_mes_reajuste_p INOUT text, ie_tipo_vinculo_operadora_p INOUT text, cd_cco_p INOUT text, ds_link_p INOUT text, cd_scpa_p INOUT text, dt_nascimento_p INOUT text, nr_cartao_nac_sus_p INOUT text, ds_classif_benef_p INOUT text, cd_operadora_empresa_p INOUT text) AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Obter dados do beneficiário
----------------------------------------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionário [ x ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatórios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------

Pontos de atenção: 	
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/nr_seq_plano_w			bigint;
nr_seq_contrato_w		bigint;
cont_w				bigint;
nr_seq_rol_w			bigint;
ie_regulamento_w		varchar(10);
--ie_tipo_segurado_w		varchar2(1);
dt_validade_carteira_w		timestamp;
dt_validade_aux_w		timestamp;
ds_tipo_repasse_w		varchar(255);
nr_via_solicitacao_w		bigint;

nr_seq_contrato_ww		bigint;
nr_seq_intercambio_ww		bigint;

cd_pf_estipulante_w		varchar(10);
cd_pf_estipulante_benef_w varchar(10);
cd_cgc_estipulante_w		varchar(14);
nr_seq_pagador_w		bigint;
nr_seq_subestipulante_w		bigint;
nr_seq_titular_w		bigint;
ie_situacao_atend_w		varchar(1);
nr_seq_parentesco_w		bigint;
ie_tipo_segurado_w		varchar(3);
ie_situacao_trabalhista_w	varchar(10);
ie_tipo_vinculo_operadora_w	varchar(2);
ie_tipo_contratacao_w		varchar(2);
ie_segmentacao_w		varchar(2);
ie_preco_w			varchar(2);
ie_abrangencia_w		varchar(3);
ie_tipo_repasse_w		varchar(1);
dt_inicio_vigencia_w		timestamp;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;



BEGIN
nr_seq_rol_w		:= 0;
ds_tipo_repasse_w	:= null;

begin
select	ie_tipo_segurado,
	nr_seq_contrato,
	nr_seq_intercambio,
	ie_tipo_vinculo_operadora,
	pls_obter_desc_classif_benef(nr_seq_classificacao)
into STRICT	ie_tipo_segurado_w,
	nr_seq_contrato_ww,
	nr_seq_intercambio_ww,
	ie_tipo_vinculo_operadora_w,
	ds_classif_benef_p
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_p;

ie_tipo_vinculo_operadora_p	:= substr(obter_valor_dominio(3652,ie_tipo_vinculo_operadora_w),1,255);

if (nr_seq_intercambio_ww IS NOT NULL AND nr_seq_intercambio_ww::text <> '') then
	select	to_char(b.nr_sequencia),
		to_char(b.nr_sequencia),
		to_char(a.dt_contratacao,'dd/mm/yyyy'),
		to_char(a.dt_liberacao,'dd/mm/yyyy'),
		to_char(a.dt_migracao,'dd/mm/yyyy'),
		to_char(a.dt_reativacao,'dd/mm/yyyy'),
		(	select	pf.nm_pessoa_fisica
			from	pessoa_fisica pf,
				pls_contrato_pagador cf
			where	cf.nr_sequencia = a.nr_seq_pagador
			and	cf.cd_pessoa_fisica = pf.cd_pessoa_fisica
			
union all

			select	pj.ds_razao_social
			from	pessoa_juridica pj,
				pls_contrato_pagador cj
			where	cj.nr_sequencia = a.nr_seq_pagador
			and	cj.cd_cgc = pj.cd_cgc),
		to_char(a.dt_inclusao_operadora,'dd/mm/yyyy'),
		to_char(a.dt_rescisao,'dd/mm/yyyy'),
		to_char(a.dt_limite_utilizacao,'dd/mm/yyyy'),
		pls_obter_produto_benef(a.nr_sequencia,clock_timestamp()),
		b.nr_sequencia,
		CASE WHEN a.ie_nascido_plano='S' THEN 'Sim' WHEN a.ie_nascido_plano='N' THEN 'Não'  ELSE '' END ,
		a.cd_cartao_intercambio,
		a.ie_tipo_repasse,
		a.nr_seq_subestipulante,
		a.nr_seq_titular,
		a.ie_situacao_atend,
		a.nr_seq_parentesco,
		a.ie_situacao_trabalhista,
		b.cd_pessoa_fisica,
		a.cd_pessoa_fisica,
		b.cd_cgc,
		a.cd_cco,
		pls_obter_link('B',a.nr_seq_contrato,null,a.cd_matricula_familia, (	select	max(x.cd_usuario_plano)
											from 	pls_segurado_carteira x 
											where 	x.nr_seq_segurado = a.nr_sequencia)),
		a.cd_operadora_empresa	
	into STRICT	nr_seq_contrato_p,
		nr_contrato_p,
		dt_adesao_p,
		dt_liberacao_p,
		dt_migracao_p,
		dt_reativacao_p,
		ds_pagador_p,
		dt_inclusao_p,
		dt_rescisao_p,
		dt_limite_p,
		nr_seq_plano_w,
		nr_seq_contrato_w,
		ie_nascido_plano_p,
		cd_cartao_intercambio_p,
		ie_tipo_repasse_w,
		nr_seq_subestipulante_w,
		nr_seq_titular_w,
		ie_situacao_atend_w,
		nr_seq_parentesco_w,
		ie_situacao_trabalhista_w,
		cd_pf_estipulante_w,
		cd_pf_estipulante_benef_w,
		cd_cgc_estipulante_w,
		cd_cco_p,
		ds_link_p,
		cd_operadora_empresa_p
	from	pls_segurado a,
		pls_intercambio b
	where	a.nr_seq_intercambio	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_segurado_p;
	
	dt_nascimento_p			:= obter_dados_pf(cd_pf_estipulante_benef_w, 'DN');
	nr_cartao_nac_sus_p		:= obter_dados_pf(cd_pf_estipulante_benef_w, 'CNS');
	
	if (ie_tipo_repasse_w IS NOT NULL AND ie_tipo_repasse_w::text <> '') then
		begin
		ds_tipo_repasse_w	:= substr(obter_valor_dominio(3384,ie_tipo_repasse_w),1,255);
		exception
		when others then
			ds_tipo_repasse_w	:= null;
		end;
	end if;
	
	begin
	nr_carteira_p		:= substr(pls_obter_carteira_segurado(nr_seq_segurado_p),1,255);
	exception
	when others then
		nr_carteira_p	:= null;
	end;
	
	if (cd_pf_estipulante_w IS NOT NULL AND cd_pf_estipulante_w::text <> '') or (cd_cgc_estipulante_w IS NOT NULL AND cd_cgc_estipulante_w::text <> '') then
		begin
		ds_estipulante_p	:= substr(obter_nome_pf_pj(cd_pf_estipulante_w,cd_cgc_estipulante_w),1,255);
		exception
		when others then
			ds_estipulante_p	:= null;
		end;
	end if;
	
	begin
	ds_canal_venda_p	:= substr(pls_obter_dados_segurado(nr_seq_segurado_p, 'NCV'),1,60);
	exception
	when others then
		ds_canal_venda_p	:= null;
	end;
	
	begin
	ds_vendedor_p		:= substr(pls_obter_dados_segurado(nr_seq_segurado_p, 'VPF'),1,60);
	exception
	when others then
		ds_vendedor_p	:= null;
	end;
	
	if (nr_seq_subestipulante_w IS NOT NULL AND nr_seq_subestipulante_w::text <> '') then
		begin
		ds_subestipulante_p	:= substr(pls_obter_desc_subestipulante(nr_seq_subestipulante_w),1,255);
		exception
		when others then
			ds_subestipulante_p	:= null;
		end;
	end if;
	
	if (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then
		begin
		ds_titular_p	:= substr(pls_obter_dados_segurado(nr_seq_titular_w,'N'),1,255);
		exception
		when others then
			ds_titular_p	:= null;
		end;
	end if;
	
	begin
	dt_suspensao_p		:= substr(pls_obter_dt_suspensao_seg(nr_seq_segurado_p),1,10);
	exception
	when others then
		dt_suspensao_p	:= null;
	end;
	
	begin
	ds_suspensao_p		:= substr(obter_valor_dominio(3238,ie_situacao_atend_w),1,255);
	exception
	when others then
		ds_suspensao_p	:= null;
	end;
	
	if (nr_seq_parentesco_w IS NOT NULL AND nr_seq_parentesco_w::text <> '') then
		begin
		ds_parentesco_p	:= substr(obter_desc_grau_parentesco(nr_seq_parentesco_w),1,255);
		exception
		when others then
			ds_parentesco_p	:= null;
		end;
	end if;
	
	if (ie_tipo_segurado_w IS NOT NULL AND ie_tipo_segurado_w::text <> '') then
		begin
		ds_tipo_segurado_p	:= substr(obter_valor_dominio(2406,ie_tipo_segurado_w),1,255);
		exception
		when others then
			ds_tipo_segurado_p	:= null;
		end;
	end if;
	
	if (ie_situacao_trabalhista_w IS NOT NULL AND ie_situacao_trabalhista_w::text <> '') then
		begin
		ie_situacao_trab_p	:= substr(obter_valor_dominio(3840,ie_situacao_trabalhista_w),1,255);
		exception
		when others then
			ie_situacao_trab_p	:= null;
		end;
	end if;
elsif (nr_seq_contrato_ww IS NOT NULL AND nr_seq_contrato_ww::text <> '') then
	select	to_char(b.nr_sequencia),
		coalesce(to_char(b.nr_contrato), to_char(b.nr_sequencia)),
		to_char(a.dt_contratacao,'dd/mm/yyyy'),
		to_char(a.dt_liberacao,'dd/mm/yyyy'),
		to_char(a.dt_migracao,'dd/mm/yyyy'),
		to_char(a.dt_reativacao,'dd/mm/yyyy'),
		to_char(a.dt_inclusao_operadora,'dd/mm/yyyy'),
		to_char(a.dt_rescisao,'dd/mm/yyyy'),
		to_char(a.dt_limite_utilizacao,'dd/mm/yyyy'),
		pls_obter_produto_benef(a.nr_sequencia,clock_timestamp()),
		b.nr_sequencia,
		CASE WHEN a.ie_nascido_plano='S' THEN 'Sim' WHEN a.ie_nascido_plano='N' THEN 'Não'  ELSE '' END ,
		a.cd_cartao_intercambio,
		b.cd_pf_estipulante,
		b.cd_cgc_estipulante,
		a.nr_seq_pagador,
		a.nr_seq_subestipulante,
		a.nr_seq_titular,
		a.cd_pessoa_fisica,
		a.ie_situacao_atend,
		a.nr_seq_parentesco,
		a.ie_situacao_trabalhista,
		a.cd_cco,
		pls_obter_link('B',a.nr_seq_contrato,null,a.cd_matricula_familia,(	select	max(x.cd_usuario_plano)
											from 	pls_segurado_carteira x 
											where 	x.nr_seq_segurado = a.nr_sequencia)),
		a.cd_operadora_empresa
	into STRICT	nr_seq_contrato_p,
		nr_contrato_p,
		dt_adesao_p,
		dt_liberacao_p,
		dt_migracao_p,
		dt_reativacao_p,
		dt_inclusao_p,
		dt_rescisao_p,
		dt_limite_p,
		nr_seq_plano_w,
		nr_seq_contrato_w,
		ie_nascido_plano_p,
		cd_cartao_intercambio_p,
		cd_pf_estipulante_w,
		cd_cgc_estipulante_w,
		nr_seq_pagador_w,
		nr_seq_subestipulante_w,
		nr_seq_titular_w,
		cd_pessoa_fisica_w,
		ie_situacao_atend_w,
		nr_seq_parentesco_w,
		ie_situacao_trabalhista_w,
		cd_cco_p,
		ds_link_p,
		cd_operadora_empresa_p
	from	pls_segurado a,
		pls_contrato b
	where	a.nr_seq_contrato	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_segurado_p;
	
	dt_nascimento_p			:= obter_dados_pf(cd_pessoa_fisica_w, 'DN');
	nr_cartao_nac_sus_p		:= obter_dados_pf(cd_pessoa_fisica_w, 'CNS');
	
	begin
	nr_carteira_p		:= substr(pls_obter_carteira_segurado(nr_seq_segurado_p),1,255);
	exception
	when others then
		nr_carteira_p	:= null;
	end;
	
	if (cd_pf_estipulante_w IS NOT NULL AND cd_pf_estipulante_w::text <> '') or (cd_cgc_estipulante_w IS NOT NULL AND cd_cgc_estipulante_w::text <> '') then
		begin
		ds_estipulante_p	:= substr(obter_nome_pf_pj(cd_pf_estipulante_w,cd_cgc_estipulante_w),1,255);
		exception
		when others then
			ds_estipulante_p	:= null;
		end;
	end if;
	
	begin
	ds_pagador_p		:= substr(pls_obter_dados_pagador(nr_seq_pagador_w,'N'),1,255);
	exception
	when others then
		ds_pagador_p	:= null;
	end;
	
	begin
	ds_canal_venda_p	:= substr(pls_obter_dados_segurado(nr_seq_segurado_p, 'NCV'),1,60);
	exception
	when others then
		ds_canal_venda_p	:= null;
	end;
	
	begin
	ds_vendedor_p		:= substr(pls_obter_dados_segurado(nr_seq_segurado_p, 'VPF'),1,60);
	exception
	when others then
		ds_vendedor_p	:= null;
	end;
	
	if (nr_seq_subestipulante_w IS NOT NULL AND nr_seq_subestipulante_w::text <> '') then
		begin
		ds_subestipulante_p	:= substr(pls_obter_desc_subestipulante(nr_seq_subestipulante_w),1,255);
		exception
		when others then
			ds_subestipulante_p	:= null;
		end;
	end if;
	
	if (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then
		begin
		ds_titular_p	:= substr(pls_obter_dados_segurado(nr_seq_titular_w,'N'),1,255);
		exception
		when others then
			ds_titular_p	:= null;
		end;
	end if;
	
	begin
	dt_suspensao_p		:= substr(pls_obter_dt_suspensao_seg(nr_seq_segurado_p),1,10);
	exception
	when others then
		dt_suspensao_p	:= null;
	end;
	
	begin
	ds_suspensao_p		:= substr(obter_valor_dominio(3238,ie_situacao_atend_w),1,255);
	exception
	when others then
		ds_suspensao_p	:= null;
	end;
	
	if (nr_seq_parentesco_w IS NOT NULL AND nr_seq_parentesco_w::text <> '') then
		begin
		ds_parentesco_p	:= substr(obter_desc_grau_parentesco(nr_seq_parentesco_w),1,255);
		exception
		when others then
			ds_parentesco_p	:= null;
		end;
	end if;
	
	if (ie_tipo_segurado_w IS NOT NULL AND ie_tipo_segurado_w::text <> '') then
		begin
		ds_tipo_segurado_p	:= substr(obter_valor_dominio(2406,ie_tipo_segurado_w),1,255);
		exception
		when others then
			ds_tipo_segurado_p	:= null;
		end;
	end if;
	
	if (ie_situacao_trabalhista_w IS NOT NULL AND ie_situacao_trabalhista_w::text <> '') then
		begin
		ie_situacao_trab_p	:= substr(obter_valor_dominio(3840,ie_situacao_trabalhista_w),1,255);
		exception
		when others then
			ie_situacao_trab_p	:= null;
		end;
	end if;
else
	select	'',
		'',
		'',
		to_char(a.dt_contratacao,'dd/mm/yyyy'),
		to_char(a.dt_liberacao,'dd/mm/yyyy'),
		to_char(a.dt_migracao,'dd/mm/yyyy'),
		to_char(a.dt_reativacao,'dd/mm/yyyy'),
		to_char(a.dt_inclusao_operadora,'dd/mm/yyyy'),
		to_char(a.dt_rescisao,'dd/mm/yyyy'),
		to_char(a.dt_limite_utilizacao,'dd/mm/yyyy'),
		pls_obter_produto_benef(a.nr_sequencia,clock_timestamp()),
		0,
		CASE WHEN a.ie_nascido_plano='S' THEN 'Sim' WHEN a.ie_nascido_plano='N' THEN 'Não'  ELSE '' END ,
		a.cd_cartao_intercambio,
		a.nr_seq_pagador,
		a.nr_seq_subestipulante,
		a.nr_seq_titular,
		a.ie_situacao_atend,
		a.nr_seq_parentesco,
		a.ie_situacao_trabalhista,
		a.cd_cco,
		pls_obter_link('B',a.nr_seq_contrato,null,a.cd_matricula_familia,(	select	max(x.cd_usuario_plano)
											from 	pls_segurado_carteira x 
											where 	x.nr_seq_segurado = a.nr_sequencia)),
		a.cd_operadora_empresa	
	into STRICT	nr_seq_contrato_p,
		nr_contrato_p,
		ds_estipulante_p,
		dt_adesao_p,
		dt_liberacao_p,
		dt_migracao_p,
		dt_reativacao_p,
		dt_inclusao_p,
		dt_rescisao_p,
		dt_limite_p,
		nr_seq_plano_w,
		nr_seq_contrato_w,
		ie_nascido_plano_p,
		cd_cartao_intercambio_p,
		nr_seq_pagador_w,
		nr_seq_subestipulante_w,
		nr_seq_titular_w,
		ie_situacao_atend_w,
		nr_seq_parentesco_w,
		ie_situacao_trabalhista_w,
		cd_cco_p,
		ds_link_p,
		cd_operadora_empresa_p
	from	pls_segurado a
	where	a.nr_sequencia	= nr_seq_segurado_p;
	
	begin
	nr_carteira_p		:= substr(pls_obter_carteira_segurado(nr_seq_segurado_p),1,255);
	exception
	when others then
		nr_carteira_p	:= null;
	end;
	
	begin
	ds_pagador_p		:= substr(pls_obter_dados_pagador(nr_seq_pagador_w,'N'),1,255);
	exception
	when others then
		ds_pagador_p	:= null;
	end;
	
	begin
	ds_canal_venda_p	:= substr(pls_obter_dados_segurado(nr_seq_segurado_p, 'NCV'),1,60);
	exception
	when others then
		ds_canal_venda_p	:= null;
	end;
	
	begin
	ds_vendedor_p		:= substr(pls_obter_dados_segurado(nr_seq_segurado_p, 'VPF'),1,60);
	exception
	when others then
		ds_vendedor_p	:= null;
	end;
	
	if (nr_seq_subestipulante_w IS NOT NULL AND nr_seq_subestipulante_w::text <> '') then
		begin
		ds_subestipulante_p	:= substr(pls_obter_desc_subestipulante(nr_seq_subestipulante_w),1,255);
		exception
		when others then
			ds_subestipulante_p	:= null;
		end;
	end if;
	
	if (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then
		begin
		ds_titular_p	:= substr(pls_obter_dados_segurado(nr_seq_titular_w,'N'),1,255);
		exception
		when others then
			ds_titular_p	:= null;
		end;
	end if;
	
	begin
	dt_suspensao_p		:= substr(pls_obter_dt_suspensao_seg(nr_seq_segurado_p),1,10);
	exception
	when others then
		dt_suspensao_p	:= null;
	end;
	
	begin
	ds_suspensao_p		:= substr(obter_valor_dominio(3238,ie_situacao_atend_w),1,255);
	exception
	when others then
		ds_suspensao_p	:= null;
	end;
	
	if (nr_seq_parentesco_w IS NOT NULL AND nr_seq_parentesco_w::text <> '') then
		begin
		ds_parentesco_p	:= substr(obter_desc_grau_parentesco(nr_seq_parentesco_w),1,255);
		exception
		when others then
			ds_parentesco_p	:= null;
		end;
	end if;
	
	if (ie_tipo_segurado_w IS NOT NULL AND ie_tipo_segurado_w::text <> '') then
		begin
		ds_tipo_segurado_p	:= substr(obter_valor_dominio(2406,ie_tipo_segurado_w),1,255);
		exception
		when others then
			ds_tipo_segurado_p	:= null;
		end;
	end if;
	
	if (ie_situacao_trabalhista_w IS NOT NULL AND ie_situacao_trabalhista_w::text <> '') then
		begin
		ie_situacao_trab_p	:= substr(obter_valor_dominio(3840,ie_situacao_trabalhista_w),1,255);
		exception
		when others then
			ie_situacao_trab_p	:= null;
		end;
	end if;
end if;
exception
when others then
	nr_seq_plano_w	:= 0;
end;

select  max(dt_validade_carteira),
	max(nr_via_solicitacao)
into STRICT	dt_validade_carteira_w,
	nr_via_solicitacao_w
from	pls_segurado_carteira
where	cd_usuario_plano	= nr_carteira_p
and	nr_seq_segurado		= nr_seq_segurado_p;

dt_validade_carteira_p	:= to_char(dt_validade_carteira_w,'dd/mm/yyyy');
dt_validade_aux_w	:= dt_validade_carteira_w;

if (nr_seq_plano_w <> 0) then
	select	ds_plano,
		nm_fantasia,
		nr_protocolo_ans,
		cd_codigo_ant,
		CASE WHEN ie_regulamentacao='P' THEN 'Pós' WHEN ie_regulamentacao='A' THEN 'Adaptado' WHEN ie_regulamentacao='R' THEN 'Pré' END ,
		CASE WHEN ie_acomodacao='I' THEN  'Individual'  WHEN ie_acomodacao='C' THEN 'Coletivo'  ELSE '' END ,
		CASE WHEN ie_situacao='A' THEN 'Ativo' WHEN ie_situacao='S' THEN 'Ativo com comercialização suspensa' WHEN ie_situacao='C' THEN 'Cancelados' END ,
		ie_regulamentacao,
		ie_tipo_contratacao,
		ie_segmentacao,
		ie_preco,
		ie_abrangencia,
		cd_scpa
	into STRICT	ds_produto_p,
		nm_fantasia_p,
		nr_protocolo_ans_p,
		cd_anterior_p,
		ie_regulamentacao_p,
		ds_acomodacao_p,
		ie_situacao_p,
		ie_regulamento_w,
		ie_tipo_contratacao_w,
		ie_segmentacao_w,
		ie_preco_w,
		ie_abrangencia_w,
		cd_scpa_p
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_w;
	
	ds_fator_p	:= pls_obter_origem_copartic(nr_seq_segurado_p);
	
	if (ie_tipo_contratacao_w IS NOT NULL AND ie_tipo_contratacao_w::text <> '') then
		ie_contratacao_p	:= obter_valor_dominio(1666, ie_tipo_contratacao_w);
	end if;
	
	if (ie_segmentacao_w IS NOT NULL AND ie_segmentacao_w::text <> '') then
		ds_seg_assist_p	:= obter_valor_dominio(1665, ie_segmentacao_w);
	end if;
	
	if (ie_preco_w IS NOT NULL AND ie_preco_w::text <> '') then
		ds_formacao_preco_p	:= coalesce(ds_tipo_repasse_w,obter_valor_dominio(1669, ie_preco_w));
	end if;
	
	if (ie_abrangencia_w IS NOT NULL AND ie_abrangencia_w::text <> '') then
		ds_abrang_geo_p	:= obter_valor_dominio(1667, ie_abrangencia_w);
	end if;
	
	if (ie_regulamento_w <> 'R') then
		begin
		select	max(x.dt_inicio_vigencia)
		into STRICT	dt_inicio_vigencia_w
		from	pls_rol x
		where	x.dt_inicio_vigencia <= clock_timestamp();
		
		select	max(nr_sequencia)
		into STRICT	nr_seq_rol_w
		from	pls_rol a
		where	a.dt_inicio_vigencia	= dt_inicio_vigencia_w;
		exception
		when others then
			nr_seq_rol_w	:= null;
		end;
	end if;
end if;

select	count(1)
into STRICT	cont_w
from	pls_cobertura
where	nr_seq_contrato	= nr_seq_contrato_w
and	((nr_seq_plano_contrato = nr_seq_plano_w) or (coalesce(nr_seq_plano_contrato::text, '') = ''))
and 	ie_situacao = 'A'
and 	clock_timestamp() between coalesce(dt_inicio_vigencia, clock_timestamp()) and coalesce(dt_fim_vigencia, clock_timestamp())  LIMIT 1;

ds_origem_cob_p			:= 'Sem cobertura';

if (cont_w > 0) then
	ds_origem_cob_p		:= 'Contrato';
else
	select	count(1)
	into STRICT	cont_w
	from	pls_cobertura
	where	nr_seq_plano	= nr_seq_plano_w
	and 	ie_situacao = 'A'
	and 	clock_timestamp() between coalesce(dt_inicio_vigencia, clock_timestamp()) and coalesce(dt_fim_vigencia, clock_timestamp())  LIMIT 1;
	
	if (cont_w > 0) then
		ds_origem_cob_p		:= 'Produto';
	end if;
end if;

nr_seq_plano_p		:= nr_seq_plano_w;
nr_seq_rol_p		:= nr_seq_rol_w;
ds_origem_carencia_p	:= 'Sem cobertura';

/* Obter origem da carência */

select	count(1)
into STRICT	cont_w
from	pls_carencia
where	nr_seq_segurado		= nr_seq_segurado_p
and	ie_cpt			= 'N'  LIMIT 1;

if (cont_w > 0) then
	ds_origem_carencia_p	:= 'Beneficiario';
else
	select	count(1)
	into STRICT	cont_w
	from	pls_carencia
	where	nr_seq_contrato		= nr_seq_contrato_w
	and	((nr_seq_plano_contrato = nr_seq_plano_w) or (coalesce(nr_seq_plano_contrato::text, '') = ''))  LIMIT 1;
	
	if (cont_w > 0) then
		ds_origem_carencia_p	:= 'Contrato';
	else
		select	count(1)
		into STRICT	cont_w
		from	pls_carencia
		where	nr_seq_plano	= nr_seq_plano_w  LIMIT 1;
		
		if (cont_w > 0) then
			ds_origem_carencia_p	:= 'Produto';
		end if;
	end if;
end if;

/* Obter origem da limitação */

ds_origem_limitacao_p	:= 'Sem limitação';

select	count(1)
into STRICT	cont_w
from	pls_limitacao
where	nr_seq_contrato	= nr_seq_contrato_w
and	((nr_seq_plano_contrato = nr_seq_plano_w) or (coalesce(nr_seq_plano_contrato::text, '') = ''))  LIMIT 1;

if (cont_w > 0) then
	ds_origem_limitacao_p	:= 'Contrato';
else
	select	count(1)
	into STRICT	cont_w
	from	pls_limitacao
	where	nr_seq_plano	= nr_seq_plano_w  LIMIT 1;
	
	if (cont_w > 0) then
		ds_origem_limitacao_p	:= 'Produto';
	end if;
end if;

dt_validade_aux_w	:= trunc(dt_validade_aux_w,'dd');

select	to_char(max(b.dt_devolucao),'dd/mm/yyyy')
into STRICT	dt_devolucao_p
from	pls_cart_lote_devolucao	b,
	pls_carteira_devolucao	a
where	a.nr_seq_lote							= b.nr_sequencia
and	a.cd_usuario_plano						= nr_carteira_p
and	((trunc(coalesce(dt_validade_carteira,dt_validade_aux_w),'dd')	= dt_validade_aux_w) or (coalesce(dt_validade_aux_w::text, '') = ''))
and	coalesce(nr_via,nr_via_solicitacao_w)				= nr_via_solicitacao_w;

dt_mes_reajuste_p	:= pls_obter_mes_reajuste_benef(nr_seq_segurado_p,'E');

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_dados_beneficiario ( nr_seq_segurado_p bigint, nr_carteira_p INOUT text, nr_seq_contrato_p INOUT text, nr_contrato_p INOUT text, ds_estipulante_p INOUT text, dt_adesao_p INOUT text, dt_liberacao_p INOUT text, dt_migracao_p INOUT text, dt_reativacao_p INOUT text, ds_pagador_p INOUT text, ds_vendedor_p INOUT text, ds_subestipulante_p INOUT text, ds_titular_p INOUT text, dt_inclusao_p INOUT text, dt_rescisao_p INOUT text, dt_limite_p INOUT text, ds_produto_p INOUT text, nm_fantasia_p INOUT text, nr_protocolo_ans_p INOUT text, ie_contratacao_p INOUT text, ds_seg_assist_p INOUT text, ds_formacao_preco_p INOUT text, ds_abrang_geo_p INOUT text, cd_anterior_p INOUT text, ie_regulamentacao_p INOUT text, ds_acomodacao_p INOUT text, ie_situacao_p INOUT text, ds_fator_p INOUT text, ds_origem_cob_p INOUT text, nr_seq_plano_p INOUT bigint, nr_seq_rol_p INOUT bigint, ds_origem_carencia_p INOUT text, ds_origem_limitacao_p INOUT text, ds_canal_venda_p INOUT text, dt_validade_carteira_p INOUT text, dt_suspensao_p INOUT text, ds_suspensao_p INOUT text, dt_devolucao_p INOUT text, ie_nascido_plano_p INOUT text, ds_parentesco_p INOUT text, cd_cartao_intercambio_p INOUT text, ds_tipo_segurado_p INOUT text, ie_situacao_trab_p INOUT text, dt_mes_reajuste_p INOUT text, ie_tipo_vinculo_operadora_p INOUT text, cd_cco_p INOUT text, ds_link_p INOUT text, cd_scpa_p INOUT text, dt_nascimento_p INOUT text, nr_cartao_nac_sus_p INOUT text, ds_classif_benef_p INOUT text, cd_operadora_empresa_p INOUT text) FROM PUBLIC;

