-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE estornar_tit_receber_liq ( nr_titulo_p bigint, nr_seq_baixa_p bigint, dt_baixa_p timestamp, nm_usuario_p text, ie_commit_p text, ds_observacao_p text, ie_vago_p text) AS $body$
DECLARE


/*Esse IE_VAGO recebe valor quando essa rotina e chamada no CorFin_CC. Nao alterar.*/

ie_acao_w				varchar(3);
ie_apropriar_w			varchar(1);
vl_nota_credito_w		double precision;
vl_juros_w				double precision;
vl_multa_w				double precision;
vl_baixa_cn_w			double precision;
nr_seq_cheque_w			bigint;
nr_seq_solic_desc_w		bigint;
nr_seq_movto_pend_w		bigint;
nr_seq_tipo_baixa_w		bigint;
nr_seq_cobranca_w		bigint;
nr_adiantamento_w		bigint;
nr_seq_regra_w			bigint;
nr_seq_baixa_w			integer;
cd_estabelecimento_w	smallint;
dt_recebimento_w		timestamp;
ie_estornar_baixa_w		varchar(2);
nr_lote_contabil_w		bigint;
ie_controle_perdas_w	varchar(1);
nr_seq_perda_w			bigint;
nr_tit_pagar_w			bigint;
nr_seq_movto_trans_fin_w	titulo_receber_liq.nr_seq_movto_trans_fin%type;
ie_conciliacao_w			movto_trans_financ.ie_conciliacao%type;
nr_seq_concil_w				movto_trans_financ.nr_seq_concil%type;
nr_sequencia_baixa_w		movto_banco_pend_baixa.nr_sequencia%type;
nr_bloqueto_w				titulo_receber.nr_bloqueto%type;
ie_liq_inadimplencia_w		titulo_receber.ie_liq_inadimplencia%type;
ie_tipo_consistencia_w		tipo_recebimento.ie_tipo_consistencia%type;
dt_recebimento_orig_w		titulo_receber_liq.dt_recebimento%type;
dt_contabil_liq_mens_w		pls_titulo_rec_liq_mens.dt_contabil%type;

/*Processo de cartas de compromisso de pagamento*/

ie_carta_compromisso_w 		parametro_contas_receber.ie_carta_compromisso%type;
nr_seq_carta_w 			carta_compromisso.nr_sequencia%type;
nr_titulo_gerado_w		titulo_receber.nr_titulo%type;
ie_situacao_titulo_w		titulo_receber.ie_situacao%type;

/* Projeto Multimoeda - Variaveis */

vl_baixa_estrang_w			double precision;
vl_cotacao_w				cotacao_moeda.vl_cotacao%type;
ie_estornar_concil_w		varchar(1);
ie_recalcula_nosso_num_w	varchar(1);

C01 CURSOR FOR
	SELECT	nr_sequencia	
	from	titulo_receber_liq_desc
	where	nr_titulo	= nr_titulo_p
	and	nr_seq_liq	= nr_seq_baixa_p;
	
c02 CURSOR FOR
SELECT	nr_sequencia
from	perda_contas_receber
where	nr_titulo = nr_titulo_p
and	nr_seq_baixa = nr_seq_baixa_p;	

c03 CURSOR FOR
	SELECT	cd_centro_custo,
			cd_conta_credito,
			cd_conta_debito,
			cd_historico,
			dt_adesao,
			dt_fim_cobertura,
			dt_inicio_cobertura,
			dt_ref_contab_final,
			dt_ref_contab_inicial,
			dt_ref_mens,
			ie_tipo_lancamento,
			nr_seq_item_mens,
			nr_seq_segurado,
			vl_lancamento*-1 vl_lancamento,
			dt_contabil
	from	pls_titulo_rec_liq_mens
	where	nr_titulo	= nr_titulo_p
	and		nr_seq_baixa	= nr_seq_baixa_p;

c03_w		c03%rowtype;


BEGIN
ie_estornar_baixa_w := obter_param_usuario(801, 164, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_estornar_baixa_w);
ie_estornar_concil_w := obter_param_usuario(814, 100, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_estornar_concil_w);
ie_recalcula_nosso_num_w := obter_param_usuario(801, 211, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_recalcula_nosso_num_w);

if (ie_estornar_baixa_w = 'N') then			

	select 	max(nr_lote_contabil)
	into STRICT	nr_lote_contabil_w
	from	titulo_receber
	where	nr_titulo = nr_titulo_p;
	
	if (nr_lote_contabil_w IS NOT NULL AND nr_lote_contabil_w::text <> '') and (nr_lote_contabil_w <> 0) then
		/*Nao e possivel realizar o estorno pois o titulo #@NR_TITULO#@ ja foi contabilizado no lote contabil #@NR_LOTE_CONTABIL#@.*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(310640, 'NR_TITULO=' || nr_titulo_p ||
								';NR_LOTE_CONTABIL=' || nr_lote_contabil_w);
	end if;
end if;

if (ie_estornar_baixa_w in ('N','B')) then

	select	max(nr_lote_contabil)
	into STRICT	nr_lote_contabil_w
	from	titulo_receber_liq
	where	nr_sequencia = nr_seq_baixa_p
	and	nr_titulo = nr_titulo_p;
		
	if (nr_lote_contabil_w IS NOT NULL AND nr_lote_contabil_w::text <> '') and (nr_lote_contabil_w <> 0) then
		/*Nao e possivel realizar o estorno pois a baixa #@NR_SEQ_BAIXA#@ do titulo #@NR_TITULO#@ ja foi contabilizada no lote contabil #@NR_LOTE_CONTABIL#@.*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(310641,	'NR_SEQ_BAIXA=' || nr_seq_baixa_p ||
								';NR_TITULO=' || nr_titulo_p ||
								';NR_LOTE_CONTABIL=' || nr_lote_contabil_w);
	end if;
end if;

select	coalesce(max(nr_tit_pagar),0),
	coalesce(max(nr_seq_movto_trans_fin),0)
into STRICT	nr_tit_pagar_w,
	nr_seq_movto_trans_fin_w
from	titulo_receber_liq
where	nr_titulo = nr_titulo_p
and	nr_sequencia = nr_seq_baixa_p;

if (nr_tit_pagar_w > 0) and (coalesce(ie_vago_p,'S') <> 'P') then -- AAMFIRMO OS 618966 15/07/2013. Inclui esse <> P, Sempre que o estorno for a partir da Estornar_titulos_abatimento,  esse parametro sera P. Se tiver titulo vinculado e nao for a partir do estorno do abatimento, deve consistir.
	--A baixa possui titulo a pagar vinculado, para a mesma deve ser realizado o estorno na funcao 'Titulo a Pagar'.

	--Tilulo: #@NR_TITULO_P#@.
	CALL wheb_mensagem_pck.exibir_mensagem_abort(239345,'NR_TITULO_P='||nr_tit_pagar_w);
end if;

if ( coalesce(nr_seq_movto_trans_fin_w,0) <> 0 ) then -- AAMFIRMO OS 667298 - Nao permitir estornar baixas que movimentaram o banco e que ja foram conciliados.
	select	a.ie_conciliacao,
		a.nr_seq_concil
	into STRICT	ie_conciliacao_w,
		nr_seq_concil_w
	from	movto_trans_financ a
	where	a.nr_sequencia		= nr_seq_movto_trans_fin_w;
	
	if	(( coalesce(ie_conciliacao_w,'N') = 'S' ) or (nr_seq_concil_w IS NOT NULL AND nr_seq_concil_w::text <> '')) and (coalesce(ie_estornar_concil_w,'S') = 'N') then
		/* O lancamento a ser estornado ja foi conciliado! Nao e possivel estorna-lo. */

		CALL wheb_mensagem_pck.exibir_mensagem_abort(238696);
	end if;

end if;

/*Processo de cartas de compromisso de pagamento, localizacao para a Republica Dominicana*/

select	max(ie_carta_compromisso)
into STRICT	ie_carta_compromisso_w
from	parametro_contas_receber
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
		
if (coalesce(ie_carta_compromisso_w, 'N') = 'S') then

	select 	max(nr_sequencia),
		max(nr_titulo_gerado),
		max(coalesce(obter_dados_titulo_receber(nr_titulo_gerado, 'SI'),1))
	into STRICT	nr_seq_carta_w,
		nr_titulo_gerado_w,
		ie_situacao_titulo_w
	from	carta_compromisso
	where	nr_seq_baixa = nr_seq_baixa_p				
	and	nr_titulo_baixa = nr_titulo_p;
	
	/*Dominio 710, situacao do titulo a receber. Valor 3 "Cancelado"*/

	if (ie_situacao_titulo_w <> 3) then
		--Expressao 948997: A baixa possui carta de compromisso vinculada, nao e possivel estorna-la! O titulo a receber gerado para a instituicao emissora da carta deve ser cancelado: #@NR_TITULO#@
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1086561, 'NR_TITULO=' || nr_titulo_gerado_w);

	end if;	
end if;


CALL projeto_recurso_pck.consistir_tit_pag_rec_proj_rec(nr_titulo_p, 'R');

select	coalesce(max(nr_sequencia),0) + 1
into STRICT	nr_seq_baixa_w
from	titulo_receber_liq
where	nr_titulo = nr_titulo_p;

insert into titulo_receber_liq(nr_titulo,
	nr_sequencia,           
	dt_recebimento,         
	vl_recebido,            
	vl_descontos,           
	vl_juros,               
	vl_multa,               
	cd_moeda,               
	dt_atualizacao,         
	nm_usuario,             
	cd_tipo_recebimento,    
	ie_acao,    
	cd_serie_nf_devol,      
	nr_nota_fiscal_devol,
	cd_banco,               
	cd_agencia_bancaria,    
	nr_documento,           
	nr_lote_banco,          
	cd_cgc_emp_cred,        
	nr_cartao_cred,         
	nr_adiantamento,        
	nr_lote_contabil,       
	nr_seq_trans_fin,       
	vl_rec_maior,           
	vl_glosa,               
	nr_seq_retorno,         
	vl_adequado,            
	nr_seq_ret_item,        
	nr_seq_conta_banco,     
	vl_despesa_bancaria,   
	ds_observacao,                
	ie_lib_caixa,           
	nr_seq_trans_caixa,     
	cd_centro_custo_desc,
	nr_seq_motivo_desc,     
	nr_bordero,
	vl_perdas,
	vl_outros_acrescimos,
	nr_tit_pagar,
	nr_seq_baixa_pagar,
	nr_seq_lote_hist_guia,
	vl_nota_credito,
	vl_cambial_passivo,
	vl_cambial_ativo,
	nr_lote_contab_antecip,
	nr_lote_contab_pro_rata,
	nr_seq_liq_origem,
	nr_seq_lote_enc_contas,
	vl_glosa_ato_coop_aux,
	vl_glosa_ato_coop_princ,
	vl_glosa_ato_nao_coop,
	nr_seq_pls_lote_camara,
	vl_recebido_estrang,
	vl_complemento,
	vl_cotacao,
	nr_seq_cobranca,
	ie_apropriar_juros_multa,
	dt_credito_banco,
	dt_real_recebimento)
SELECT	nr_titulo_p,              
	nr_seq_baixa_w,
	coalesce(dt_baixa_p,dt_recebimento),         
	vl_recebido * -1,            
	vl_descontos * -1,           
	vl_juros * -1,               
	vl_multa * -1,               
	cd_moeda,               
	clock_timestamp(),         
	nm_usuario_p,             
	cd_tipo_recebimento,    
	ie_acao,    
	cd_serie_nf_devol,      
	nr_nota_fiscal_devol,
	cd_banco,               
	cd_agencia_bancaria,    
	nr_documento,           
	nr_lote_banco,          
	cd_cgc_emp_cred,        
	nr_cartao_cred,         
	nr_adiantamento,        
	0,       
	nr_seq_trans_fin,       
	vl_rec_maior * -1,           
	vl_glosa * -1,               
	null,
	vl_adequado * -1,            
	null,
	nr_seq_conta_banco,     
	vl_despesa_bancaria * -1,   
	ds_observacao_p,                
	ie_lib_caixa,           
	nr_seq_trans_caixa,     
	cd_centro_custo_desc,
	nr_seq_motivo_desc,     
	nr_bordero,
	vl_perdas * -1,
	vl_outros_acrescimos * -1,
	nr_tit_pagar,
	nr_seq_baixa_pagar,
	nr_seq_lote_hist_guia,
	vl_nota_credito * -1,
	vl_cambial_passivo * -1,
	vl_cambial_ativo * -1,
	0,
	0,
	nr_sequencia,
	nr_seq_lote_enc_contas,
	vl_glosa_ato_coop_aux * -1,
	vl_glosa_ato_coop_princ  * -1,
	vl_glosa_ato_nao_coop  * -1,
	nr_seq_pls_lote_camara,
	CASE WHEN coalesce(vl_recebido_estrang::text, '') = '' THEN null  ELSE vl_recebido_estrang * -1 END , -- Projeto Multimoeda - inverte os valores quando moeda estrangeira
	CASE WHEN coalesce(vl_recebido_estrang::text, '') = '' THEN null  ELSE vl_complemento * -1 END ,
	CASE WHEN coalesce(vl_recebido_estrang::text, '') = '' THEN null  ELSE vl_cotacao END ,
	nr_seq_cobranca,
	ie_apropriar_juros_multa,
	dt_credito_banco,
	dt_real_recebimento
from	titulo_receber_liq
where	nr_titulo	= nr_titulo_p
and	nr_sequencia	= nr_seq_baixa_p;

/* ahoffelder - OS 208411 - 13/05/2010 - baixa com nota de credito */

select	max(a.vl_nota_credito),
	max(a.nr_seq_cobranca)
into STRICT	vl_nota_credito_w,
	nr_seq_cobranca_w
from	titulo_receber_liq a
where	a.nr_titulo	= nr_titulo_p
and	a.nr_sequencia	= nr_seq_baixa_p;

if (coalesce(vl_nota_credito_w,0) > 0) then /* Gera baixa so se tiver registro na titulo_receber_nc */
	CALL gerar_baixa_nota_credito(nr_seq_baixa_w,null,null,nr_titulo_p,nm_usuario_p,'E');
end if;

-- Inativar os lancamentos programados de juros e multa para mensalidade
update	pls_segurado_mensalidade
set	ie_situacao	= 'I'
where	nr_titulo	= nr_titulo_p
and	nr_seq_baixa	= nr_seq_baixa_p
and	ie_situacao	= 'A';

insert into titulo_rec_liq_cc(nr_sequencia,
	nr_titulo,
	nr_seq_baixa,
	dt_atualizacao,
	nm_usuario,
	cd_centro_custo,
	vl_baixa,
	vl_amaior,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	cd_cta_ctb_origem,
	cd_conta_contabil,
	vl_recebido,
	cd_conta_deb_pls,
	cd_conta_rec_pls,
	nr_seq_mens_seg_item,
	cd_historico_pls,
	nr_seq_conta_pls,
	nr_seq_produto,
	cd_conta_antec_pls,
	cd_historico_antec_pls,
	vl_antecipacao_mens,
	vl_pro_rata,
	ie_lote_pro_rata,
	vl_contab_pro_rata,
	cd_conta_rec_antecip,
	cd_conta_deb_antecip,
	cd_historico_rev_antec,
	ie_origem_classif,
	vl_perdas,
	vl_recebido_estrang,
	vl_complemento,
	vl_cotacao,
	cd_moeda,
	vl_desconto,
	vl_juros,
	vl_multa)
SELECT	nextval('titulo_rec_liq_cc_seq'),
	nr_titulo_p,
	nr_seq_baixa_w,
	clock_timestamp(),
	nm_usuario_p,
	cd_centro_custo,
	vl_baixa * -1,
	vl_amaior * -1,
	clock_timestamp(),
	nm_usuario_p,
	cd_cta_ctb_origem,
	cd_conta_contabil,
	vl_recebido * -1,
	cd_conta_deb_pls,
	cd_conta_rec_pls,
	nr_seq_mens_seg_item,
	cd_historico_pls,
	nr_seq_conta_pls,
	nr_seq_produto,
	cd_conta_antec_pls,
	cd_historico_antec_pls,
	vl_antecipacao_mens * - 1,
	vl_pro_rata * - 1,
	ie_lote_pro_rata,
	vl_contab_pro_rata * - 1,
	cd_conta_rec_antecip,
	cd_conta_deb_antecip,
	cd_historico_rev_antec,
	ie_origem_classif,
	CASE WHEN coalesce(vl_perdas::text, '') = '' THEN null  ELSE (vl_perdas*-1) END ,
	CASE WHEN coalesce(vl_recebido_estrang::text, '') = '' THEN null  ELSE vl_recebido_estrang * -1 END , -- Projeto Multimoeda - inverte os valores quando moeda estrangeira
	CASE WHEN coalesce(vl_recebido_estrang::text, '') = '' THEN null  ELSE vl_complemento * -1 END ,
	CASE WHEN coalesce(vl_recebido_estrang::text, '') = '' THEN null  ELSE vl_cotacao END ,
	cd_moeda,
	vl_desconto * -1,
	vl_juros * -1,
	vl_multa * -1
from	titulo_rec_liq_cc
where	nr_titulo	= nr_titulo_p
and	nr_seq_baixa	= nr_seq_baixa_p;

select	max(dt_recebimento)
into STRICT	dt_recebimento_orig_w
from	titulo_receber_liq
where	nr_titulo	= nr_titulo_p
and	nr_sequencia	= nr_seq_baixa_p;

select	max(dt_recebimento)
into STRICT	dt_recebimento_w
from	titulo_receber_liq
where	nr_titulo	= nr_titulo_p
and	nr_sequencia	= nr_seq_baixa_w;

open c03;
loop
fetch c03 into	
	c03_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	begin
	
	if	((pkg_date_utils.start_of(dt_recebimento_orig_w,'MONTH',0)) < pkg_date_utils.start_of(dt_recebimento_w,'MONTH',0)) then
		dt_contabil_liq_mens_w:= dt_recebimento_w;
	else
		if	((pkg_date_utils.start_of(dt_recebimento_orig_w,'MONTH',0)) = pkg_date_utils.start_of(dt_recebimento_w,'MONTH',0)) then
			begin
			
			if	((pkg_date_utils.start_of(c03_w.dt_contabil,'MONTH',0)) = pkg_date_utils.start_of(dt_recebimento_w,'MONTH',0)) then
				dt_contabil_liq_mens_w:= dt_recebimento_w;
			else	
				dt_contabil_liq_mens_w:= c03_w.dt_contabil;
			end if;
			
			end;
		end if;
	end if;
	
	insert into pls_titulo_rec_liq_mens(nr_sequencia,
				nr_titulo,
				nr_seq_baixa,
				dt_atualizacao,
				dt_atualizacao_nrec,
				nm_usuario,
				nm_usuario_nrec,
				cd_centro_custo,
				cd_conta_credito,
				cd_conta_debito,
				cd_historico,
				dt_adesao,
				dt_contabil,
				dt_fim_cobertura,
				dt_inicio_cobertura,
				dt_ref_contab_final,
				dt_ref_contab_inicial,
				dt_ref_mens,
				ie_tipo_lancamento,
				nr_lote_contabil,
				nr_seq_item_mens,
				nr_seq_segurado,
				vl_lancamento)
		values (nextval('pls_titulo_rec_liq_mens_seq'),
				nr_titulo_p,
				nr_seq_baixa_w,
				clock_timestamp(),
				clock_timestamp(),
				nm_usuario_p,
				nm_usuario_p,
				c03_w.cd_centro_custo,
				c03_w.cd_conta_credito,
				c03_w.cd_conta_debito,
				c03_w.cd_historico,
				c03_w.dt_adesao,
				dt_contabil_liq_mens_w,
				c03_w.dt_fim_cobertura,
				c03_w.dt_inicio_cobertura,
				c03_w.dt_ref_contab_final,
				c03_w.dt_ref_contab_inicial,
				c03_w.dt_ref_mens,
				c03_w.ie_tipo_lancamento,
				0,
				c03_w.nr_seq_item_mens,
				c03_w.nr_seq_segurado,
				c03_w.vl_lancamento);
	
	end;
end loop;
close c03;


update	titulo_receber_nc
set	nr_seq_liq	 = NULL
where	nr_titulo_rec	= nr_titulo_p
and	nr_seq_liq	= nr_seq_baixa_p;

if (coalesce(nr_seq_carta_w,0) > 0) then
	update 	carta_compromisso
	set	nr_titulo_baixa  = NULL,
		nr_seq_baixa  = NULL,
		nr_interno_conta  = NULL,
		nr_titulo_gerado  = NULL
	where	nr_sequencia = nr_seq_carta_w;
end if;

select	max(a.cd_estabelecimento),
	coalesce(max(nr_bloqueto),0)
into STRICT	cd_estabelecimento_w,
	nr_bloqueto_w
from	titulo_receber a
where	a.nr_titulo	= nr_titulo_p;

SELECT * FROM obter_regra_acao_pag_duplic(dt_recebimento_w, cd_estabelecimento_w, nm_usuario_p, nr_seq_regra_w, ie_acao_w) INTO STRICT nr_seq_regra_w, ie_acao_w;

/* Na cobranca escritural ja trata antes */

if (ie_acao_w in ('NC','NCM')) then
	ie_apropriar_w := tratar_baixa_duplicidade_tit(null, nr_titulo_p, nr_seq_baixa_p, 'E', dt_recebimento_w, nm_usuario_p, ie_apropriar_w);
end if;

/* Verifica se o titulo foi identificado como inadimplencia pela baixa */

select	a.ie_liq_inadimplencia
into STRICT	ie_liq_inadimplencia_w
from	titulo_receber a
where	a.nr_titulo	= nr_titulo_p;

/* So verificar caso esteja identificado como inadimplencia */

if (ie_liq_inadimplencia_w = 'S') then
	select	max(b.ie_tipo_consistencia)
	into STRICT	ie_tipo_consistencia_w
	from	tipo_recebimento b,
		titulo_receber_liq a
	where	a.cd_tipo_recebimento	= b.cd_tipo_recebimento
	and	coalesce(a.ie_lib_caixa,'S')	= 'S'
	and	a.nr_titulo		= nr_titulo_p
	and	a.nr_sequencia		= nr_seq_baixa_p;

	/* Desmarca a baixa por inadimplencia */

	if (ie_tipo_consistencia_w = 15) then
		update	titulo_receber
		set	ie_liq_inadimplencia	= 'N'
		where	nr_titulo		= nr_titulo_p;
	end if;
end if;

CALL atualizar_saldo_tit_rec(nr_titulo_p, nm_usuario_p);

/*AAMFIRMO OS 830247 em 13/05/2015*/

if (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') and (nr_seq_baixa_w IS NOT NULL AND nr_seq_baixa_w::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	CALL gerar_nf_parcial_tit_rec_liq( nr_titulo_p,
				      nr_seq_baixa_w,
				      nm_usuario_p,
				      'N',
				      'E');
end if;

/* Nao lancar movimentacao bancaria quando a baixa e pela Cobranca escritural, porque ja faz por la */

if (coalesce(nr_seq_cobranca_w::text, '') = '') then
	CALL gerar_movto_tit_baixa(	nr_titulo_p,
				nr_seq_baixa_w,
				'R',
				nm_usuario_p,'N');
end if;

open C01;
loop
fetch C01 into
	nr_seq_solic_desc_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	insert into titulo_receber_liq_desc(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_pessoa_fisica,
		cd_cgc,
		nr_titulo,
		nr_seq_liq,
		nr_seq_motivo_desc,
		cd_centro_custo)
	SELECT	nextval('titulo_receber_liq_desc_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_pessoa_fisica,
		cd_cgc,
		nr_titulo_p,
		nr_seq_baixa_w,
		nr_seq_motivo_desc,
		cd_centro_custo
	from	titulo_receber_liq_desc
	where	nr_sequencia	= nr_seq_solic_desc_w;
end loop;
close C01;

select	max(nr_adiantamento),
	max(vl_recebido_estrang),
	max(vl_cotacao)
into STRICT	nr_adiantamento_w,
	vl_baixa_estrang_w,
	vl_cotacao_w
from	titulo_receber_liq
where	nr_titulo	= nr_titulo_p
and	nr_sequencia	= nr_seq_baixa_p;

if (nr_adiantamento_w IS NOT NULL AND nr_adiantamento_w::text <> '') then -- Francisco - OS - 50524 - Atualizar o saldo do adiantamento
	/* Projeto Multimoeda - Verifica se a baixa e em moeda estrangeira, caso positivo passa a cotacao para atualizar o saldo do adiantamento tambem em moeda estrangeira.*/

	if (coalesce(vl_baixa_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
		CALL atualizar_saldo_adiantamento(nr_adiantamento_w,nm_usuario_p, null, vl_cotacao_w);
	else
		CALL atualizar_saldo_adiantamento(nr_adiantamento_w,nm_usuario_p, null);
	end if;
end if;

/* Francisco - 10/03/2010 - Lancar estorno da baixa de credito nao identificado */

select	max(a.nr_seq_movto_pend)
into STRICT	nr_seq_movto_pend_w
from	movto_banco_pend_baixa a
where	a.nr_titulo	= nr_titulo_p
and	a.nr_seq_baixa	= nr_seq_baixa_p;

select	max(a.nr_sequencia)
into STRICT	nr_seq_tipo_baixa_w
from	tipo_baixa_cni a
where	a.cd_estabelecimento	= cd_estabelecimento_w
and	a.ie_situacao		= 'A'
and	a.ie_tipo_baixa		= 1;

if (nr_seq_movto_pend_w IS NOT NULL AND nr_seq_movto_pend_w::text <> '') then
	select	coalesce(max(vl_juros),0) * -1,
		coalesce(max(vl_multa),0) * -1,
		coalesce(max(vl_baixa),0) * -1
	into STRICT	vl_juros_w,
		vl_multa_w,
		vl_baixa_cn_w
	from	movto_banco_pend_baixa
	where	nr_titulo	= nr_titulo_p
	and	nr_seq_baixa	= nr_seq_baixa_p;
	
	nr_sequencia_baixa_w := ie_vago_p;
	
	if (coalesce(vl_juros_w,0) <> 0) or (coalesce(vl_multa_w,0) <> 0) then
		insert into movto_banco_pend_baixa(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_movto_pend,
			nr_titulo,
			nr_seq_baixa,
			dt_baixa,
			vl_baixa,
			vl_juros,
			vl_multa,
			nr_seq_tipo_baixa,
			nr_seq_baixa_origem,
			vl_baixa_estrang,
			vl_complemento,
			vl_cotacao,
			cd_moeda)
		SELECT	nextval('movto_banco_pend_baixa_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_movto_pend_w,
			nr_titulo,
			nr_sequencia,
			dt_recebimento,
			coalesce(vl_recebido,0) + coalesce(vl_rec_maior,0),
			coalesce(vl_juros_w,0),
			coalesce(vl_multa_w,0),
			nr_seq_tipo_baixa_w,
			nr_sequencia_baixa_w,
			vl_recebido_estrang, -- Projeto Multimoeda - grava os valores em moeda estrangeira
			vl_complemento,
			vl_cotacao,
			cd_moeda
		from	titulo_receber_liq
		where	nr_titulo	= nr_titulo_p
		and	nr_sequencia	= nr_seq_baixa_w;				
	else
		insert into movto_banco_pend_baixa(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_movto_pend,
			nr_titulo,
			nr_seq_baixa,
			dt_baixa,
			vl_baixa,
			nr_seq_tipo_baixa,
			nr_seq_baixa_origem,
			vl_baixa_estrang,
			vl_complemento,
			vl_cotacao,
			cd_moeda)
		SELECT	nextval('movto_banco_pend_baixa_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_movto_pend_w,
			nr_titulo,
			nr_sequencia,
			dt_recebimento,
			coalesce(vl_recebido,0) + coalesce(vl_juros,0) + coalesce(vl_multa,0) + coalesce(vl_rec_maior,0),
			nr_seq_tipo_baixa_w,
			nr_sequencia_baixa_w,
			vl_recebido_estrang, -- Projeto Multimoeda - grava os valores em moeda estrangeira
			vl_complemento,
			vl_cotacao,
			cd_moeda
		from	titulo_receber_liq
		where	nr_titulo	= nr_titulo_p
		and	nr_sequencia	= nr_seq_baixa_w;
	end if;	
	
	CALL atualizar_saldo_movto_bco_pend(nr_seq_movto_pend_w,nm_usuario_p,'N');
end if;

if (coalesce(ie_apropriar_w,'S') = 'S') then
	CALL pls_apropriar_juros_multa_mens(nr_titulo_p,nr_seq_baixa_w,nm_usuario_p,cd_estabelecimento_w,'N','E');
end if;

CALL pls_estornar_amortizacao(nr_titulo_p,nr_seq_baixa_p,nr_seq_baixa_w,nm_usuario_p);

pls_fiscal_dados_dmed_pck.gerar_baixa_tit_rec(nr_titulo_p, nr_seq_baixa_w, 'N', cd_estabelecimento_w, nm_usuario_p);
	
select	coalesce(max(ie_controle_perdas),'N')
into STRICT	ie_controle_perdas_w
from	parametro_contas_receber
where	cd_estabelecimento = cd_estabelecimento_w;

if (ie_controle_perdas_w = 'S') then
	open c02;
	loop
	fetch c02 into
		nr_seq_perda_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		CALL fin_cancelar_perda(nr_seq_perda_w, nm_usuario_p);
	end loop;
	close c02;
end if;

if (ie_recalcula_nosso_num_w in ('E','A')) and (nr_bloqueto_w <> 0) then
	CALL gerar_bloqueto_tit_rec(nr_titulo_p, 'MTR', 'S');
end if;

if (ie_commit_p = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE estornar_tit_receber_liq ( nr_titulo_p bigint, nr_seq_baixa_p bigint, dt_baixa_p timestamp, nm_usuario_p text, ie_commit_p text, ds_observacao_p text, ie_vago_p text) FROM PUBLIC;

