-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE recebimento_voicehcs_tie (ds_lugar_uuid_p text, ds_lugar_nome_p text, ie_status_p text, ds_codigo_p text, dt_hora_ret_p INOUT text, ds_status_ret_p INOUT text, ds_descricao_ret_p INOUT text ) AS $body$
DECLARE

							   
ie_pac_leito_w			varchar(1) := 'N';
ds_erro_w varchar(255);

BEGIN

CALL wheb_usuario_pck.set_ie_executar_trigger('S');

ds_status_ret_p := 'Error';

if (ds_lugar_uuid_p IS NOT NULL AND ds_lugar_uuid_p::text <> '' AND ds_lugar_nome_p IS NOT NULL AND ds_lugar_nome_p::text <> '') then
	if (ie_status_p = '1') then
		if (ds_codigo_p = 'EMD' or ds_codigo_p = 'SUP' or ds_codigo_p = 'CA') then
				ds_erro_w := 'Codigo enviado'||ds_codigo_p||' invalido';
				dt_hora_ret_p := to_char(clock_timestamp(),'yyyy-mm-dd hh24:mi:ss');
				ds_status_ret_p := 'Error';
				ds_descricao_ret_p := ds_erro_w;	

		elsif (ds_codigo_p = 'EH') then

			begin
				select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_pac_leito_w
				from	unidade_atendimento
				where	((cd_unidade_basica		= ds_lugar_nome_p) or (cd_unidade_basica||'-' ||cd_unidade_compl = ds_lugar_nome_p))
				and		cd_setor_atendimento	= ds_lugar_uuid_p
				and	(nr_atendimento IS NOT NULL AND nr_atendimento::text <> '');

				if (ie_pac_leito_w = 'S') then
					 ds_descricao_ret_p := OBTER_EXPRESSAO_DIC_OBJETO(238384);
					ds_status_ret_p := 'Error';
				else
					ds_status_ret_p := 'Sucesso';
					ds_descricao_ret_p := null;	
				end if;

				Update	Unidade_atendimento
				set		nm_usuario_higienizacao	= 'VOICEHCS',
						dt_inicio_higienizacao	= clock_timestamp(),
						dt_higienizacao			 = NULL,
						ie_status_unidade		= 'H',
						nm_usuario				= 'VOICEHCS'
				where	((cd_unidade_basica		= ds_lugar_nome_p) or (cd_unidade_basica||'-' ||cd_unidade_compl = ds_lugar_nome_p))
				and		cd_setor_atendimento	= ds_lugar_uuid_p;

				dt_hora_ret_p := to_char(clock_timestamp(),'yyyy-mm-dd hh24:mi:ss');


			exception
			when no_data_found or too_many_rows then
				if (coalesce(ds_status_ret_p::text, '') = '') then
					ds_status_ret_p := DBMS_UTILITY.FORMAT_ERROR_STACK();
				end if;
				dt_hora_ret_p := to_char(clock_timestamp(),'yyyy-mm-dd hh24:mi:ss');
				ds_status_ret_p := 'Error';
				ds_descricao_ret_p := ds_codigo_p;		
			end;	

		elsif (ds_codigo_p = 'M') then

			begin
				Update	Unidade_atendimento
				set	ie_status_unidade	= 'E',
					nm_usuario		= 'VOICEHCS'
				where	((cd_unidade_basica		= ds_lugar_nome_p) or (cd_unidade_basica||'-' ||cd_unidade_compl = ds_lugar_nome_p))
				and		cd_setor_atendimento	= ds_lugar_uuid_p
				and	coalesce(nr_atendimento::text, '') = '';

				dt_hora_ret_p := to_char(clock_timestamp(),'yyyy-mm-dd hh24:mi:ss');
				ds_status_ret_p := 'Sucesso';
				ds_descricao_ret_p := null;	

			exception
			when no_data_found or too_many_rows then

				if (coalesce(ds_descricao_ret_p::text, '') = '') then
					ds_descricao_ret_p := DBMS_UTILITY.FORMAT_ERROR_STACK();
				end if;
				dt_hora_ret_p := to_char(clock_timestamp(),'yyyy-mm-dd hh24:mi:ss');
				ds_status_ret_p := 'Sucesso';	

			end;

		elsif (ds_codigo_p = 'C') then

			begin
				Update	Unidade_atendimento
				set	ie_status_unidade	= 'C',
					nm_usuario		= 'VOICEHCS'
				where	((cd_unidade_basica		= ds_lugar_nome_p) or (cd_unidade_basica||'-' ||cd_unidade_compl = ds_lugar_nome_p))
				and		cd_setor_atendimento	= ds_lugar_uuid_p
				and	coalesce(nr_atendimento::text, '') = '';

				dt_hora_ret_p := to_char(clock_timestamp(),'yyyy-mm-dd hh24:mi:ss');
				ds_status_ret_p := 'Sucesso';
				ds_descricao_ret_p := null;	

			exception
			when no_data_found or too_many_rows then

				if (coalesce(ds_descricao_ret_p::text, '') = '') then
					ds_descricao_ret_p := DBMS_UTILITY.FORMAT_ERROR_STACK();
				end if;
				dt_hora_ret_p := to_char(clock_timestamp(),'yyyy-mm-dd hh24:mi:ss');
				ds_status_ret_p := 'Error';

			end;

		elsif (ds_codigo_p = 'I') then

			begin
				Update	Unidade_atendimento
				set	ie_status_unidade	= 'I',
					nm_usuario		= 'VOICEHCS'
				where	((cd_unidade_basica		= ds_lugar_nome_p) or (cd_unidade_basica||'-' ||cd_unidade_compl = ds_lugar_nome_p))
				and		cd_setor_atendimento	= ds_lugar_uuid_p;

				dt_hora_ret_p := to_char(clock_timestamp(),'yyyy-mm-dd hh24:mi:ss');
				ds_status_ret_p := 'Sucesso';
				ds_descricao_ret_p := null;	

			exception
			when no_data_found or too_many_rows then

				if (coalesce(ds_descricao_ret_p::text, '') = '') then
					ds_descricao_ret_p := DBMS_UTILITY.FORMAT_ERROR_STACK();
				end if;

				dt_hora_ret_p := to_char(clock_timestamp(),'yyyy-mm-dd hh24:mi:ss');
				ds_status_ret_p := 'Error';

			end;

		elsif (ds_codigo_p = 'E') then

			begin
				Update	Unidade_atendimento
				set	ie_status_unidade	= 'E',
					nm_usuario		= 'VOICEHCS'
				where	((cd_unidade_basica		= ds_lugar_nome_p) or (cd_unidade_basica||'-' ||cd_unidade_compl = ds_lugar_nome_p))
				and		cd_setor_atendimento	= ds_lugar_uuid_p
				and	coalesce(nr_atendimento::text, '') = '';

				dt_hora_ret_p := to_char(clock_timestamp(),'yyyy-mm-dd hh24:mi:ss');
				ds_status_ret_p := 'Sucesso';
				ds_descricao_ret_p := null;	

			exception
			when no_data_found or too_many_rows then

				if (coalesce(ds_descricao_ret_p::text, '') = '') then
					ds_descricao_ret_p := DBMS_UTILITY.FORMAT_ERROR_STACK();
				end if;

				dt_hora_ret_p := to_char(clock_timestamp(),'yyyy-mm-dd hh24:mi:ss');
				ds_status_ret_p := 'Error';	

			end;

		elsif (ds_codigo_p = 'O') then

			begin
				Update	Unidade_atendimento
				set	ie_status_unidade	= 'O',
					nm_usuario		= 'VOICEHCS'
				where	((cd_unidade_basica		= ds_lugar_nome_p) or (cd_unidade_basica||'-' ||cd_unidade_compl = ds_lugar_nome_p))
				and		cd_setor_atendimento	= ds_lugar_uuid_p;

				dt_hora_ret_p := to_char(clock_timestamp(),'yyyy-mm-dd hh24:mi:ss');
				ds_status_ret_p := 'Sucesso';
				ds_descricao_ret_p := null;	

			exception
			when no_data_found or too_many_rows then

				if (coalesce(ds_descricao_ret_p::text, '') = '') then
					ds_descricao_ret_p := DBMS_UTILITY.FORMAT_ERROR_STACK();
				end if;
				dt_hora_ret_p := to_char(clock_timestamp(),'yyyy-mm-dd hh24:mi:ss');
				ds_status_ret_p := 'Error';
			end;

		end if;

	elsif (ie_status_p = '2') then
		begin
			Update	Unidade_atendimento
			set		ie_status_unidade		= 'G',
					nm_usuario				= 'VOICEHCS'
			where	((cd_unidade_basica		= ds_lugar_nome_p) or (cd_unidade_basica||'-' ||cd_unidade_compl = ds_lugar_nome_p))
			and		cd_setor_atendimento	= ds_lugar_uuid_p
			and		coalesce(nr_atendimento::text, '') = '';	

			dt_hora_ret_p := to_char(clock_timestamp(),'yyyy-mm-dd hh24:mi:ss');
			ds_status_ret_p := 'Sucesso';
			ds_descricao_ret_p := null;	

		exception
		when no_data_found or too_many_rows then
			if (coalesce(ds_descricao_ret_p::text, '') = '') then
				ds_descricao_ret_p := DBMS_UTILITY.FORMAT_ERROR_STACK();
			end if;

			dt_hora_ret_p := to_char(clock_timestamp(),'yyyy-mm-dd hh24:mi:ss');
			ds_status_ret_p := 'Error';
			ds_descricao_ret_p := null;	

		end;

	elsif (ie_status_p = '3') then
         begin
          Update	Unidade_atendimento
          set		dt_higienizacao = CASE WHEN dt_inicio_higienizacao = NULL THEN  dt_higienizacao  ELSE clock_timestamp() END ,
                ie_status_unidade = CASE WHEN coalesce(cd_paciente_reserva,nm_pac_reserva) = NULL THEN  'L'  ELSE 'R' END ,
                nm_usuario = 'VOICEHCS',
				nm_usuario_fim_higienizacao				= 'VOICEHCS'
          where	((cd_unidade_basica		= ds_lugar_nome_p) or (cd_unidade_basica||'-' ||cd_unidade_compl = ds_lugar_nome_p))
          and		cd_setor_atendimento	= ds_lugar_uuid_p
          and		coalesce(nr_atendimento::text, '') = '';

			dt_hora_ret_p := to_char(clock_timestamp(),'yyyy-mm-dd hh24:mi:ss');
			ds_status_ret_p := 'Sucesso';
			ds_descricao_ret_p := null;	

        exception
        when no_data_found or too_many_rows then
          if (coalesce(ds_descricao_ret_p::text, '') = '') then
            ds_descricao_ret_p := DBMS_UTILITY.FORMAT_ERROR_STACK();
          end if;
		  	dt_hora_ret_p := to_char(clock_timestamp(),'yyyy-mm-dd hh24:mi:ss');
			ds_status_ret_p := 'Error';

        end;

	else
			dt_hora_ret_p := to_char(clock_timestamp(),'yyyy-mm-dd hh24:mi:ss');
			ds_status_ret_p := 'Error';
			ds_descricao_ret_p := 'Nao foi possivel processar a requisicao com o JSON, status invalido';	

	end if;

end if;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE recebimento_voicehcs_tie (ds_lugar_uuid_p text, ds_lugar_nome_p text, ie_status_p text, ds_codigo_p text, dt_hora_ret_p INOUT text, ds_status_ret_p INOUT text, ds_descricao_ret_p INOUT text ) FROM PUBLIC;

