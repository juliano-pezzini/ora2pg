-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_itens_kit_requisicao ( nr_requisicao_p bigint, nm_usuario_p text) AS $body$
DECLARE



cd_estabelecimento_w		smallint;
cd_kit_material_w			bigint;
nr_sequencia_w			integer;
nr_sequencia_ww			integer;
cd_material_w			integer;
cd_material_ww			integer;
qt_material_requisitada_w	double precision;
qt_material_requisitada_ww	double precision;
cd_unidade_medida_consumo_w	varchar(30);
cd_unidade_medida_estoque_w	varchar(30);
qt_conv_estoque_consumo_w	double precision;
qt_material_w			double precision;
qt_estoque_w			double precision;
qt_estoque_ww			double precision;
nr_seq_aprovacao_w		bigint;
nr_seq_proc_aprov_w		bigint;
dt_aprovacao_w			timestamp;
nm_usuario_aprov_w		varchar(15);
dt_reprovacao_w			timestamp;
ie_qt_estoque_mult_w		varchar(1);

c00 CURSOR FOR
SELECT	a.cd_material,
	a.qt_material_requisitada,
	a.qt_estoque,
	a.nr_sequencia,
	a.nr_seq_aprovacao,
	a.nr_seq_proc_aprov,
	a.dt_aprovacao,
	a.nm_usuario_aprov,
	a.dt_reprovacao
from	item_requisicao_material a,
	material b
where	a.nr_requisicao	= nr_requisicao_p
and	a.cd_material = b.cd_material;

c01 CURSOR FOR
SELECT	b.cd_material,
	b.qt_material,
	substr(obter_dados_material_estab(c.cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo,
	substr(obter_dados_material_estab(c.cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque,
	qt_conv_estoque_consumo
from	componente_kit b,
	material c
where	b.cd_kit_material		= cd_kit_material_w
and	c.cd_material		= b.cd_material
and	(((coalesce(b.ie_duplica_req,'S') = 'S') and (b.cd_material = cd_material_w)) or (b.cd_material <> cd_material_w))
and	((coalesce(b.cd_estab_regra::text, '') = '') or (b.cd_estab_regra = cd_estabelecimento_w));


BEGIN

select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	requisicao_material
where	nr_requisicao = nr_requisicao_p;

ie_qt_estoque_mult_w := substr(coalesce(obter_valor_param_usuario(919, 119, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N'),1,1);

OPEN C00;
LOOP
FETCH C00 INTO
	cd_material_w,
	qt_material_requisitada_w,
	qt_estoque_ww,
	nr_sequencia_w,
	nr_seq_aprovacao_w,
	nr_seq_proc_aprov_w,
	dt_aprovacao_w,
	nm_usuario_aprov_w,
	dt_reprovacao_w;
EXIT WHEN NOT FOUND; /* apply on c00 */
	begin
	select coalesce(max(Obter_mat_estabelecimento(
				cd_estabelecimento_w,
				0,
				cd_material_w,
				'KT')), 0)
	into STRICT	cd_kit_material_w
	;

	if (cd_kit_material_w > 0) then
		begin
		OPEN C01;
		LOOP
		FETCH C01 INTO
			cd_material_ww,
			qt_material_w,
			cd_unidade_medida_consumo_w,
			cd_unidade_medida_estoque_w,
			qt_conv_estoque_consumo_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin

			select	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_sequencia_ww
			from	item_requisicao_material
			where	nr_requisicao = nr_requisicao_p;

			if (ie_qt_estoque_mult_w = 'S') then
				qt_material_requisitada_w := qt_estoque_ww;
			end if;

			qt_material_requisitada_ww	:= qt_material_w * qt_material_requisitada_w;
			qt_estoque_w			:= dividir(qt_material_requisitada_ww, qt_conv_estoque_consumo_w);

			insert into item_requisicao_material(
				nr_requisicao,
				nr_sequencia,
				cd_estabelecimento,
				cd_material,
				qt_material_requisitada,
				vl_material,
				dt_atualizacao,
				nm_usuario,
				cd_unidade_medida,
				cd_motivo_baixa,
				qt_estoque,
				cd_unidade_medida_estoque,
				cd_material_req,
				ie_geracao,
				cd_kit_material,
				nr_seq_aprovacao,
				nr_seq_proc_aprov,
				dt_aprovacao,
				nm_usuario_aprov,
				dt_reprovacao)
			values ( nr_requisicao_p,
				nr_sequencia_ww,
				cd_estabelecimento_w,
				cd_material_ww,
				qt_material_requisitada_ww,
				0,
				clock_timestamp(),
				nm_usuario_p,
				cd_unidade_medida_consumo_w,
				0,
				qt_estoque_w,
				cd_unidade_medida_estoque_w,
				cd_material_ww,
				'S',
				cd_kit_material_w,
				nr_seq_aprovacao_w,
				nr_seq_proc_aprov_w,
				dt_aprovacao_w,
				nm_usuario_aprov_w,
				dt_reprovacao_w);
			end;
		end loop;
		close c01;

		/*Identifica que o item é um KIT e já foi desdobrado na liberação da requisição*/

		update	item_requisicao_material
		set	ie_geracao = 'D'
		where	nr_requisicao = nr_requisicao_p
		and	nr_sequencia = nr_sequencia_w;

		end;
	end if;
	end;
end loop;
close c00;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_itens_kit_requisicao ( nr_requisicao_p bigint, nm_usuario_p text) FROM PUBLIC;

