-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE t_sinal_vital AS (t_sinal_vital smallint[4]);


CREATE OR REPLACE PROCEDURE p_integrar_admissao_bb (bb_integracao text default null, nr_atendimento_p ATEND_PACIENTE_UNIDADE.nr_atendimento%TYPE default null, nr_seq_interno_p ATEND_PACIENTE_UNIDADE.nr_seq_interno%TYPE default null, nr_seq_interno_anterior_p ATEND_PACIENTE_UNIDADE.nr_seq_interno%TYPE default null, nm_setor_bb_p text default null, nm_setor_anterior_bb_p text default null, cd_setor_atendimento_p ATEND_PACIENTE_UNIDADE.cd_setor_atendimento%TYPE default null, nr_seq_classif_p UNIDADE_ATENDIMENTO.nr_seq_classif%TYPE default null, cd_unidade_basica_p ATEND_PACIENTE_UNIDADE.cd_unidade_basica%TYPE default null, cd_unidade_compl_p ATEND_PACIENTE_UNIDADE.cd_unidade_compl%TYPE default null, cd_procedencia_p ATENDIMENTO_PACIENTE.cd_procedencia%TYPE default null, dt_entrada_p ATENDIMENTO_PACIENTE.dt_entrada%TYPE default null, dt_entrada_unidade_p ATEND_PACIENTE_UNIDADE.dt_entrada_unidade%TYPE default null, cd_pessoa_fisica_p PESSOA_FISICA.cd_pessoa_fisica%TYPE default null, dt_nascimento_p PESSOA_FISICA.dt_nascimento%TYPE default null, ie_sexo_p PESSOA_FISICA.ie_sexo%TYPE default null, qt_peso_p PESSOA_FISICA.qt_peso%TYPE default null, qt_altura_cm_p PESSOA_FISICA.qt_altura_cm%TYPE default null, cd_motivo_alta_p ATENDIMENTO_PACIENTE.cd_motivo_alta%TYPE default null, ie_readmitido text default null, ie_primeira_movimentacao text default null) AS $body$
DECLARE


  json_aux_bb               philips_json;
  json_limits               philips_json;
  clob_limits               text;
  envio_integracao_bb       text;
  bb_count_var_procedencia  bigint;
  bb_var_procedencia        varchar(32);
  bb_count_var_class_uni    bigint;
  bb_var_class_uni          varchar(32);
  bb_count_var_motivo_alta  bigint;
  bb_var_motivo_alta        varchar(32);
  bb_nr_seq_interno         ATEND_PACIENTE_UNIDADE.nr_seq_interno%TYPE;
  bb_cd_setor_atendimento   ATEND_PACIENTE_UNIDADE.cd_setor_atendimento%TYPE;
  bb_nr_seq_classif         UNIDADE_ATENDIMENTO.nr_seq_classif%TYPE;
  bb_cd_unidade_basica      ATEND_PACIENTE_UNIDADE.cd_unidade_basica%TYPE;
  bb_cd_unidade_compl       ATEND_PACIENTE_UNIDADE.cd_unidade_compl%TYPE;
  bb_movimentacoes          bigint;
  bb_integrar               boolean := true;
  jobno                     bigint;
  bb_sinais_vitais          t_sinal_vital;
  json_limit_sinal_vital    philips_json;
  is_found_rec              boolean;
  limites_c CURSOR(nr_seq_sinal_c bigint) FOR
    SELECT *
    FROM SMART_ALERT_REGRA_ATEND
    WHERE nr_seq_sinal = nr_seq_sinal_c
    AND nr_atendimento = nr_atendimento_p;
BEGIN

  json_aux_bb := philips_json();
  json_aux_bb.put('typeID', 'ADT');
  json_aux_bb.put('messageDateTime', TO_CHAR((CURRENT_TIMESTAMP AT TIME ZONE 'UTC'), 'YYYY-MM-DD HH24:MI:SS.SSSSS'));
  json_aux_bb.put('messageUsesUtcDateTimes', '1');
  json_aux_bb.put('patientHealthSystemStayID', LPAD(nr_atendimento_p, 32, 0));
  json_aux_bb.put('mostRecentWardStayID', LPAD(nr_seq_interno_p, 32, 0));

  IF (bb_integracao = 'A' OR bb_integracao = 'R') THEN
    json_aux_bb.put('bedID', LPAD(encode(cd_unidade_basica_p || '.' || cd_unidade_compl_p::bytea, 'hex')::bytea, 32, 0));
    json_aux_bb.put('healthSystemAdmitDate', TO_CHAR(f_extract_utc_bb(dt_entrada_p), 'YYYY-MM-DD'));
    json_aux_bb.put('healthSystemAdmitTime', TO_CHAR(f_extract_utc_bb(dt_entrada_p), 'HH24:MI'));
    json_aux_bb.put('wardDateAdmit', TO_CHAR(f_extract_utc_bb(dt_entrada_unidade_p), 'YYYY-MM-DD'));
    json_aux_bb.put('wardTimeAdmit', TO_CHAR(f_extract_utc_bb(dt_entrada_unidade_p), 'HH24:MI'));
    json_aux_bb.put('wardAdmitOffset', '0');
    json_aux_bb.put('dateOfBirth', TO_CHAR(dt_nascimento_p, 'YYYY-MM-DD'));

    CASE
      WHEN coalesce(ie_sexo_p::text, '') = '' THEN
        json_aux_bb.put('genderID', '597b391357864a4697eea517205a2cb4');
      WHEN ie_sexo_p = 'M' THEN
        json_aux_bb.put('genderID', '4408493246f84a72b83e523e1bcb60b4');
      WHEN ie_sexo_p = 'F' THEN
        json_aux_bb.put('genderID', '32ea83413b314be698359feea4c65297');
      WHEN ie_sexo_p = 'A' THEN
        json_aux_bb.put('genderID', '259a3c67bc20409b858729c96716e30c');
      ELSE
        json_aux_bb.put('genderID', '597b391357864a4697eea517205a2cb4');
    END CASE;

    json_aux_bb.put('admissionWeight', TO_CHAR(qt_peso_p));
    json_aux_bb.put('admissionHeight', TO_CHAR(qt_altura_cm_p));

    clob_limits := p_buscar_limites_bb(nr_atendimento_p, cd_setor_atendimento_p, cd_pessoa_fisica_p, nm_setor_bb_p, clob_limits);
    json_limits := philips_json(clob_limits);
    json_aux_bb.put('limits', json_limits);

    bb_sinais_vitais := t_sinal_vital(3,6,8,9);

    FOR idx IN bb_sinais_vitais.first..bb_sinais_vitais.last loop

      CASE bb_sinais_vitais(idx)
        WHEN 3 THEN
          json_limit_sinal_vital := philips_json(json_limits.get('respiratoryRate'));
        WHEN 6 THEN
          json_limit_sinal_vital := philips_json(json_limits.get('oxygenSaturation'));
        WHEN 8 THEN
          json_limit_sinal_vital := philips_json(json_limits.get('bloodPressure'));
        WHEN 9 THEN
          json_limit_sinal_vital := philips_json(json_limits.get('heartRate'));
      END CASE;

      is_found_rec := false;
      FOR limite IN limites_c(bb_sinais_vitais(idx)) LOOP
        is_found_rec := true;
        IF limite.IE_PADRAO = 'S' THEN
          UPDATE smart_alert_regra_atend
          SET dt_atualizacao_nrec = clock_timestamp(),
              nm_usuario_nrec = 'integration',
              nr_baixa_severa = json_limit_sinal_vital.get['severeLow'].get_number,
              nr_baixa_moderada = json_limit_sinal_vital.get['moderateLow'].get_number,
              nr_alta_moderada = json_limit_sinal_vital.get['moderateHigh'].get_number,
              nr_alta_severa = json_limit_sinal_vital.get['severeHigh'].get_number
          WHERE nr_sequencia = limite.nr_sequencia;
        END IF;
      END LOOP;

      IF NOT is_found_rec  THEN
        INSERT INTO smart_alert_regra_atend(nr_sequencia,
          nr_atendimento,
          dt_atualizacao,
          nm_usuario,
          nr_seq_sinal,
          nr_baixa_severa,
          nr_baixa_moderada,
          nr_alta_moderada,
          nr_alta_severa,
          ie_padrao)
        VALUES (nextval('smart_alert_regra_atend_seq'),
          nr_atendimento_p,
          clock_timestamp(),
          'integration',
          bb_sinais_vitais(idx),
          json_limit_sinal_vital.get['severeLow'].get_number,
          json_limit_sinal_vital.get['moderateLow'].get_number,
          json_limit_sinal_vital.get['moderateHigh'].get_number,
          json_limit_sinal_vital.get['severeHigh'].get_number,
          'S'
        );
      END IF;

    END LOOP;

  END IF;

  IF (bb_integracao = 'A') THEN
    json_aux_bb.put('wardID', LPAD(cd_setor_atendimento_p, 32, 0));

    CASE
      WHEN nm_setor_bb_p = 'ICU' THEN
        json_aux_bb.put('admitType', '587508685b784d7688cb8c1057f07527');
      WHEN nm_setor_bb_p = 'Stepdown' THEN
        json_aux_bb.put('admitType', 'ee275e09f6a24f1f96ee77b4aed053e2');
      WHEN nm_setor_bb_p = 'Acute' THEN
        json_aux_bb.put('admitType', '1bd1bd495ca140318d99d42ebca22c75');
      ELSE
        json_aux_bb.put('admitType', '');
    END CASE;

    IF (ie_primeira_movimentacao = 'S') THEN
      SELECT  count(*) 
      INTO STRICT    bb_count_var_procedencia
      FROM    ALGORITMOS_VAR_PROCEDENCIA 
      WHERE   cd_procedencia = cd_procedencia_p;

      IF (bb_count_var_procedencia > 0) THEN
        SELECT
          CASE
            WHEN coalesce(IE_VARIAVEL::text, '') = '' 
              THEN '4c6c6371b67b4cee82f920e0246fa52d'
            WHEN IE_VARIAVEL = 1
              THEN '352153299f1d4047a4ce56a28f3ffb25'
            WHEN IE_VARIAVEL = 2
              THEN '04c12db0258343f2a0ab19a1393acb5f'
            WHEN IE_VARIAVEL = 3
              THEN 'f4a11edbc4e341e389c50bfb98570839'
            WHEN IE_VARIAVEL = 4
              THEN 'f7cea65048444a6ebae8dca211fcdaf6'
            WHEN IE_VARIAVEL = 5
              THEN '67ae7f855c9842658db2a197245db8c4'
            WHEN IE_VARIAVEL = 6
              THEN 'dadf3268c526497a8c713110035f8041'
            WHEN IE_VARIAVEL = 7
              THEN 'c06f9eb0656b4d7a9b584127e4065962'
            WHEN IE_VARIAVEL = 8
              THEN 'afe5dfbf30ef41748adbcdd8a7e1cbb3'
            WHEN IE_VARIAVEL = 9
              THEN 'b228bba8d3ae45c9bb7a70963a989f11'
            WHEN IE_VARIAVEL = 10
              THEN '82687621b12e4aaca6b0dcd0662b993f'
            WHEN IE_VARIAVEL = 11
              THEN '54116f9bc1994cafbc0a987913770fcd'
            WHEN IE_VARIAVEL = 12
              THEN '7df00c53175e479c927506aa48e124e7'
            WHEN IE_VARIAVEL = 13
              THEN '8de9fc68c60e4d29b5c6c7576279a171'
            WHEN IE_VARIAVEL = 14
              THEN 'cd9cbd5e0a384f6cb82aea13c3467ef5'
            ELSE '34f655c16bd0496686dcffdd3e48e65a'
          END as wardAdmitSourceID 
        INTO STRICT    bb_var_procedencia
        FROM    ALGORITMOS_VAR_PROCEDENCIA 
        WHERE   cd_procedencia = cd_procedencia_p;

        json_aux_bb.put('wardAdmitSourceID', bb_var_procedencia);
      ELSE
        json_aux_bb.put('wardAdmitSourceID', '34f655c16bd0496686dcffdd3e48e65a');
      END IF;
    ELSE
      CASE
        WHEN nm_setor_anterior_bb_p = 'ICU' THEN
          json_aux_bb.put('wardAdmitSourceID', '7df00c53175e479c927506aa48e124e7');
        WHEN nm_setor_anterior_bb_p = 'Stepdown' THEN
          json_aux_bb.put('wardAdmitSourceID', '82687621b12e4aaca6b0dcd0662b993f');
        WHEN nm_setor_anterior_bb_p = 'Acute' THEN
          json_aux_bb.put('wardAdmitSourceID', '54116f9bc1994cafbc0a987913770fcd');
        ELSE
          json_aux_bb.put('wardAdmitSourceID', '34f655c16bd0496686dcffdd3e48e65a');
      END CASE;
    END IF;

  ELSIF (bb_integracao = 'T') THEN
    json_aux_bb.put('previousWardStayID', LPAD(nr_seq_interno_anterior_p, 32, 0));
    json_aux_bb.put('dateTransfer', TO_CHAR(f_extract_utc_bb(dt_entrada_unidade_p), 'YYYY-MM-DD'));
    json_aux_bb.put('timeTransfer', TO_CHAR(f_extract_utc_bb(dt_entrada_unidade_p), 'HH24:MI'));
    json_aux_bb.put('wardAdmitOffset', '0');
    json_aux_bb.put('wardID', LPAD(cd_setor_atendimento_p, 32, 0));
    json_aux_bb.put('bedID', LPAD(encode(cd_unidade_basica_p || '.' || cd_unidade_compl_p::bytea, 'hex')::bytea, 32, 0));

    CASE
      WHEN nm_setor_bb_p = 'ICU' THEN
        json_aux_bb.put('newWardStayTypeID', '4d238b3a1e514cc283f0d356b5636100');
      WHEN nm_setor_bb_p = 'Stepdown' THEN
        json_aux_bb.put('newWardStayTypeID', 'ee275e09f6a24f1f96ee77b4aed053e2');
      WHEN nm_setor_bb_p = 'Acute' THEN
        json_aux_bb.put('newWardStayTypeID', 'ed320e05b5dd481da7875fae21298410');
    END CASE;

  ELSIF (bb_integracao = 'R') THEN
    json_aux_bb.put('wardID', LPAD(cd_setor_atendimento_p, 32, 0));
    CASE
      WHEN nm_setor_bb_p = 'ICU' THEN
        json_aux_bb.put('newWardStayTypeID', '7011b24cb0654350af7119664ee060cd');
      WHEN nm_setor_bb_p = 'Stepdown' THEN
        json_aux_bb.put('newWardStayTypeID', 'ee275e09f6a24f1f96ee77b4aed053e2');
      WHEN nm_setor_bb_p = 'Acute' THEN
        json_aux_bb.put('newWardStayTypeID', 'bca9d6cb62ce490d83e5c319bdcf71df');
    END CASE;

    IF (ie_readmitido = 'S') THEN
      json_aux_bb.put('readmittedWithin24Hours', '2332b97076d04596b3f197477ef95379');
    ELSE
      json_aux_bb.put('readmittedWithin24Hours', '7fdb1e045e164eb7b03e5105342f4eb6');
    END if;

  ELSIF (bb_integracao = 'D') THEN

      json_aux_bb.put('bedStayDateDischarge', TO_CHAR(f_extract_utc_bb(dt_entrada_unidade_p), 'YYYY-MM-DD'));
      json_aux_bb.put('bedStayTimeDischarge', TO_CHAR(f_extract_utc_bb(dt_entrada_unidade_p), 'HH24:MI'));
      json_aux_bb.put('bedstayDischargeOffset', '0');

      IF (coalesce(cd_motivo_alta_p::text, '') = '') THEN
        json_aux_bb.put('wardStayDischargeLocationID', '62af5b4593c14c5dac8ee4a2f27a37e7');
      ELSE

        SELECT COUNT(*) INTO STRICT bb_movimentacoes FROM ATEND_PACIENTE_UNIDADE WHERE NR_ATENDIMENTO = NR_ATENDIMENTO_P;

        IF (bb_movimentacoes > 0) THEN
      
            SELECT  count(*) 
            INTO STRICT    bb_count_var_motivo_alta
            FROM    ALGORITMOS_VAR_MOTIVO_ALTA
            WHERE   cd_motivo_alta = cd_motivo_alta_p;

            IF (bb_count_var_motivo_alta > 0) THEN
              SELECT 
                CASE
                  WHEN coalesce(IE_VARIAVEL::text, '') = '' 
                    THEN '35711ecda2cb450f96fdda721c378eb6'
                  WHEN IE_VARIAVEL = 9
                    THEN '0f07eaffde3b48fda65181ff42834273'
                  WHEN IE_VARIAVEL = 10
                    THEN '023f0d93c3654528b6ebe2167f8b6655'
                  WHEN IE_VARIAVEL = 11
                    THEN '5341423c9a5c48a38f3984184ceb47d2'
                  WHEN IE_VARIAVEL = 12
                    THEN '600fdaef008a4e279ed32696fa465bf7'
                  WHEN IE_VARIAVEL = 13
                    THEN '4ff383b2dbd448e08fbba75bc8d29c7d'
                  WHEN IE_VARIAVEL = 14
                    THEN '9911b716a5094bcd92f3f7b11d93bc23'
                  WHEN IE_VARIAVEL = 15
                    THEN 'c968b2db0ab14785a4eadfca538046a8'
                  ELSE '35711ecda2cb450f96fdda721c378eb6'
                END as wardStayDischargeLocationID
              INTO STRICT    bb_var_motivo_alta
              FROM    ALGORITMOS_VAR_MOTIVO_ALTA
              WHERE   cd_motivo_alta = cd_motivo_alta_p;
              json_aux_bb.put('wardStayDischargeLocationID', bb_var_motivo_alta);
            ELSE
              json_aux_bb.put('wardStayDischargeLocationID', '35711ecda2cb450f96fdda721c378eb6');
            END IF;
        ELSE
            bb_integrar := false;
        END IF;
    END IF;

  ELSIF (bb_integracao = 'UD') THEN
    BEGIN
      SELECT  apu.nr_seq_interno,
              apu.cd_setor_atendimento, 
              ua.nr_seq_classif, 
              apu.cd_unidade_basica, 
              apu.cd_unidade_compl
      INTO STRICT    bb_nr_seq_interno, 
              bb_cd_setor_atendimento, 
              bb_nr_seq_classif, 
              bb_cd_unidade_basica, 
              bb_cd_unidade_compl
      FROM    ATEND_PACIENTE_UNIDADE apu, 
              UNIDADE_ATENDIMENTO ua
      WHERE   apu.nr_atendimento = nr_atendimento_p
      AND     ua.CD_SETOR_ATENDIMENTO = apu.CD_SETOR_ATENDIMENTO
      AND     ua.CD_UNIDADE_BASICA = apu.CD_UNIDADE_BASICA 
      AND     ua.CD_UNIDADE_COMPL = apu.CD_UNIDADE_COMPL
      AND     apu.dt_entrada_unidade = (
                SELECT MAX(dt_entrada_unidade)
                FROM ATEND_PACIENTE_UNIDADE
                WHERE nr_atendimento = nr_atendimento_p);

      json_aux_bb.put('mostRecentWardStayID', LPAD(bb_nr_seq_interno, 32, 0));
      json_aux_bb.put('wardID', LPAD(bb_cd_setor_atendimento, 32, 0));
      json_aux_bb.put('bedID', LPAD(encode(bb_cd_unidade_basica || '.' || bb_cd_unidade_compl::bytea, 'hex')::bytea, 32, 0));
      json_aux_bb.put('undoDischarge', '1');
    EXCEPTION
      WHEN no_data_found THEN
        bb_integrar := false;
    END;

  END IF;

  IF (bb_integracao = 'A' OR bb_integracao = 'R' OR bb_integracao = 'T' OR bb_integracao = 'UD') THEN
        
    IF (coalesce(bb_nr_seq_classif::text, '') = '') THEN
        bb_nr_seq_classif := nr_seq_classif_p;
    END IF;

    SELECT  count(*)
    INTO STRICT    bb_count_var_class_uni
    FROM    ALGORITMOS_VAR_CLASS_UNI 
    WHERE   nr_seq_classif_unidade = nr_seq_classif_p;

    IF (bb_count_var_class_uni > 0) THEN
      SELECT
        CASE
          WHEN coalesce(IE_VARIAVEL::text, '') = '' 
            THEN ''
          WHEN IE_VARIAVEL = 1
            THEN 'd82094f56eb848ce961364324f52d60f'
          WHEN IE_VARIAVEL = 2
            THEN '5b543c7526af4989a6fdb22e45c385e2'
          WHEN IE_VARIAVEL = 3
            THEN '424594341a7b42a0b2469d59cf27f185'
          WHEN IE_VARIAVEL = 4
            THEN '3a61350973294fbda0c0118e1d25db29'
          WHEN IE_VARIAVEL = 5
            THEN 'd986f422107b4cbdae525d3d441bd1a6'
          WHEN IE_VARIAVEL = 6
            THEN '934077e5cbfd470d9fa3decd7cecc5a9'
          WHEN IE_VARIAVEL = 7
            THEN '058bcb1bd1234dcca2185eff07052891'
          WHEN IE_VARIAVEL = 8
            THEN '0d8243f8556f457cae242f64e9e8c033'
          WHEN IE_VARIAVEL = 9
            THEN '633eb7911397418f9985bf8b2772a48f'
          WHEN IE_VARIAVEL = 10
            THEN '16f02b0b521b11d6850e0050dad0bb87'
          WHEN IE_VARIAVEL = 11
            THEN '618aa0d555e04a89804703c8a5510fd7'
          WHEN IE_VARIAVEL = 12
            THEN 'eae40f598d584de4805c5ea2bc6dd79c'
          WHEN IE_VARIAVEL = 13
            THEN '0ff404fd1cfa4432b5fad361eeb309cf'
          WHEN IE_VARIAVEL = 14
            THEN 'a5b7c0ba681649fa983fb19ef42e5879'
          WHEN IE_VARIAVEL = 15
            THEN 'e0915ab0ea1f4fc7b795eb34709a3874'
          WHEN IE_VARIAVEL = 16
            THEN '35045c6b335e42438556bc05b065d0c1'
          WHEN IE_VARIAVEL = 17
            THEN '8b11a8aeb2e84341b87bf708af2b9a36'
          WHEN IE_VARIAVEL = 18
            THEN '12204ac395bb439a98ac2a0b41299c71'
          WHEN IE_VARIAVEL = 19
            THEN 'aca09f9427ef4ece815c6f8d7e3732ec'
          WHEN IE_VARIAVEL = 20
            THEN '0991adeddf7f449d86c27b7b261afabd'
          WHEN IE_VARIAVEL = 21
            THEN '349b5ae13cfd46bf9d165d36a4383a61'
          WHEN IE_VARIAVEL = 22
            THEN '1bdc41db0cee47df9ff4640abf28b02f'
          WHEN IE_VARIAVEL = 23
            THEN 'c209e1d085eb49929fbc04c65e272456'
          WHEN IE_VARIAVEL = 24
            THEN '85c62e8a5bd1497688c49ec12527c865'
          WHEN IE_VARIAVEL = 25
            THEN '0eee5e1567434ab09b5928bd4615cd3d'
          WHEN IE_VARIAVEL = 26
            THEN '3b80f80f6cbc42bf962a7dca53c13405'
          WHEN IE_VARIAVEL = 27
            THEN 'bf81c773ecb84fbd8ed429c20cdd9dbd'
          WHEN IE_VARIAVEL = 28
            THEN '007930ef472743488e68ce4ccd09f9c2'
          WHEN IE_VARIAVEL = 29
            THEN '1072499e11d94e9695ac53c7ff9d4f67'
          WHEN IE_VARIAVEL = 30
            THEN '15e129d77a544115b4c3b626d1c0963a'
          WHEN IE_VARIAVEL = 31
            THEN '18595493707c4183804df8f351503f37'
          WHEN IE_VARIAVEL = 32
            THEN '22ac362d58234ab89a7b7aa6c69d8f7e'
          WHEN IE_VARIAVEL = 33
            THEN '2fd1c85ee2f6450290fbb7228b7b6b2a'
          WHEN IE_VARIAVEL = 34
            THEN '44fd879194274d3cad4f2653ae06d821'
          WHEN IE_VARIAVEL = 35
            THEN '6bf4090091714456b82d04d6fe2dfea8'
          WHEN IE_VARIAVEL = 36
            THEN '820d336686fc4a7da01be3e07add2980'
          WHEN IE_VARIAVEL = 37
            THEN '8374ed1e1c814ba7891f19a3de90438f'
          WHEN IE_VARIAVEL = 38
            THEN '8aaee4190d564e849fb462e0d41d0283'
          WHEN IE_VARIAVEL = 39
            THEN '8d05544ce09440fc92f39452c715d5cc'
          WHEN IE_VARIAVEL = 40
            THEN 'a01e27b6d6cf4feebb0d8a498bb3ebe4'
          WHEN IE_VARIAVEL = 41
            THEN 'cbf7276ee0e94e518f430c89cc853365'
          WHEN IE_VARIAVEL = 42
            THEN 'cdf5a36fab034e5e8b5e32cc8e5afb13'
          WHEN IE_VARIAVEL = 43
            THEN 'd4fe3053adb74bf8b80e581d7b308260'
          WHEN IE_VARIAVEL = 44
            THEN 'e9624a556d954106a5df3cec87afd58c'
          WHEN IE_VARIAVEL = 45
            THEN 'f03368d3c5044c769e0cc7acd65d2d7c'
          WHEN IE_VARIAVEL = 46
            THEN '4b54345ffd86462390d8e8a0855f17b1'
          WHEN IE_VARIAVEL = 47
            THEN '0f9b31d31abd42c68e890545a82ab1ec'
          WHEN IE_VARIAVEL = 48
            THEN '7797c01b4eb4441ab126a33380eec730'
          WHEN IE_VARIAVEL = 49
            THEN '7967decf7d2a444ea50ccbc8dbdcaebc'
          ELSE '' 
        END as wardTypeID
      INTO STRICT    bb_var_class_uni
      FROM    ALGORITMOS_VAR_CLASS_UNI 
      WHERE   nr_seq_classif_unidade = bb_nr_seq_classif;
      json_aux_bb.put('wardTypeID', bb_var_class_uni);
    ELSE
      json_aux_bb.put('wardTypeID', '');
    END IF;

  END IF;
  IF (bb_integrar) THEN
    dbms_lob.createtemporary(envio_integracao_bb, TRUE);
    json_aux_bb.(envio_integracao_bb);

    dbms_job.submit(jobno, 'declare results clob; begin results := bifrost.send_integration_content('''|| 'Blackboard_Patient_Admission' || ''', ''' || envio_integracao_bb || ''', ''' ||wheb_usuario_pck.get_nm_usuario|| ''', ''' || null || ''', ''' || null || '''); end;');

  END IF;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE p_integrar_admissao_bb (bb_integracao text default null, nr_atendimento_p ATEND_PACIENTE_UNIDADE.nr_atendimento%TYPE default null, nr_seq_interno_p ATEND_PACIENTE_UNIDADE.nr_seq_interno%TYPE default null, nr_seq_interno_anterior_p ATEND_PACIENTE_UNIDADE.nr_seq_interno%TYPE default null, nm_setor_bb_p text default null, nm_setor_anterior_bb_p text default null, cd_setor_atendimento_p ATEND_PACIENTE_UNIDADE.cd_setor_atendimento%TYPE default null, nr_seq_classif_p UNIDADE_ATENDIMENTO.nr_seq_classif%TYPE default null, cd_unidade_basica_p ATEND_PACIENTE_UNIDADE.cd_unidade_basica%TYPE default null, cd_unidade_compl_p ATEND_PACIENTE_UNIDADE.cd_unidade_compl%TYPE default null, cd_procedencia_p ATENDIMENTO_PACIENTE.cd_procedencia%TYPE default null, dt_entrada_p ATENDIMENTO_PACIENTE.dt_entrada%TYPE default null, dt_entrada_unidade_p ATEND_PACIENTE_UNIDADE.dt_entrada_unidade%TYPE default null, cd_pessoa_fisica_p PESSOA_FISICA.cd_pessoa_fisica%TYPE default null, dt_nascimento_p PESSOA_FISICA.dt_nascimento%TYPE default null, ie_sexo_p PESSOA_FISICA.ie_sexo%TYPE default null, qt_peso_p PESSOA_FISICA.qt_peso%TYPE default null, qt_altura_cm_p PESSOA_FISICA.qt_altura_cm%TYPE default null, cd_motivo_alta_p ATENDIMENTO_PACIENTE.cd_motivo_alta%TYPE default null, ie_readmitido text default null, ie_primeira_movimentacao text default null) FROM PUBLIC;

