-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_diverg_contrato_solic ( nr_solic_compra_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_item_solic_compra_w	bigint;
nr_item_solic_compra_ww	bigint;
qt_material_w		double precision;
vl_unit_prev_w		double precision;
vl_pagto_w		double precision;
nr_seq_regra_w		bigint;
nr_seq_contrato_w	bigint;
qt_existe_w		bigint;
ie_tipo_consistencia_w	varchar(15);
vl_minimo_w		double precision;
vl_maximo_w		double precision;
ie_justificativa_w	varchar(1);
vl_total_item_w		double precision;
cd_material_w		integer;
qt_contratos_w		integer;
cd_estabelecimento_w	smallint;
ie_forma_consit_w	varchar(1);

c00 CURSOR FOR
SELECT	nr_item_solic_compra,
	cd_material
from	solic_compra_item
where	coalesce(nr_seq_regra_contrato::text, '') = ''
and	coalesce(nr_contrato::text, '') = ''
and	nr_solic_compra = nr_solic_compra_p;

c01 CURSOR FOR
SELECT	i.nr_item_solic_compra,
	i.qt_material,
	i.vl_unit_previsto,
	x.vl_pagto,
	x.nr_sequencia,
	x.nr_seq_contrato
from	solic_compra_item i,
	contrato_regra_nf x
where	i.nr_solic_compra = nr_solic_compra_p
and	i.nr_seq_regra_contrato	= x.nr_sequencia;

c02 CURSOR FOR
SELECT	ie_tipo_consistencia,
	vl_minimo,
	vl_maximo,
	ie_justificativa
from	contrato_regra_nf_consist
where	nr_seq_regra_nf	= nr_seq_regra_w;


BEGIN

select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	solic_compra
where	nr_solic_compra = nr_solic_compra_p;

select	count(*)
into STRICT	qt_existe_w
from	contrato_regra_nf_consist a,
	solic_compra_item b
where	b.nr_solic_compra = nr_solic_compra_p
and	b.nr_seq_regra_contrato = a.nr_seq_regra_nf;

delete
from	diverg_contrato_item_doc
where	nr_documento = nr_solic_compra_p
and	ie_tipo_documento = 'SC';

ie_forma_consit_w := obter_param_usuario(913, 228, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_forma_consit_w);

if	((ie_forma_consit_w = 'T') or
	(ie_forma_consit_w = 'R' AND qt_existe_w > 0))then
	open c00;
	loop
	fetch c00 into	
		nr_item_solic_compra_ww,
		cd_material_w;
	EXIT WHEN NOT FOUND; /* apply on c00 */
		begin

		select	count(*)
		into STRICT	qt_contratos_w
		from	(SELECT	c.nr_sequencia nr_contrato,
				f.nr_sequencia nr_seq_regra
			from	contrato_regra_nf f,
				contrato c
			where	f.nr_seq_contrato = c.nr_sequencia
			and	coalesce(f.cd_material, cd_material_w) = cd_material_w
			and	substr(obter_dados_pf_pj(null,c.cd_cgc_contratado,'S'),1,1) = 'A'
			and	((coalesce(f.dt_inicio_vigencia::text, '') = '') or (trunc(f.dt_inicio_vigencia,'dd') <= trunc(clock_timestamp(),'dd')))
			and	((coalesce(f.dt_fim_vigencia::text, '') = '') or (trunc(f.dt_fim_vigencia,'dd') >= trunc(clock_timestamp(),'dd')))
            and (coalesce(f.ie_situacao::text, '') = '' or f.ie_situacao = 'A')
			and	coalesce(cd_pessoa_contratada::text, '') = ''
			and	coalesce(c.ie_situacao,'A') = 'A'
			
union all

			SELECT	c.nr_sequencia nr_contrato,
				f.nr_sequencia nr_seq_regra	
			from	contrato_regra_nf f,
				contrato c
			where	f.nr_seq_contrato = c.nr_sequencia
			and	coalesce(f.cd_material, cd_material_w) = cd_material_w
			and	((coalesce(f.dt_inicio_vigencia::text, '') = '') or (trunc(f.dt_inicio_vigencia,'dd') <= trunc(clock_timestamp(),'dd')))
			and	((coalesce(f.dt_fim_vigencia::text, '') = '') or (trunc(f.dt_fim_vigencia,'dd') >= trunc(clock_timestamp(),'dd')))
			and	(cd_pessoa_contratada IS NOT NULL AND cd_pessoa_contratada::text <> '')
			and	coalesce(c.ie_situacao,'A') = 'A') alias39;

		if (qt_contratos_w = 1) then

			select	nr_contrato,
				nr_seq_regra
			into STRICT	nr_seq_contrato_w,
				nr_seq_regra_w
			from	(SELECT	c.nr_sequencia nr_contrato,
					f.nr_sequencia nr_seq_regra
				from	contrato_regra_nf f,
					contrato c
				where	f.nr_seq_contrato = c.nr_sequencia
				and	coalesce(f.cd_material, cd_material_w) = cd_material_w
				and	substr(obter_dados_pf_pj(null,c.cd_cgc_contratado,'S'),1,1) = 'A'
				and	((coalesce(f.dt_inicio_vigencia::text, '') = '') or (trunc(f.dt_inicio_vigencia,'dd') <= trunc(clock_timestamp(),'dd')))
				and	((coalesce(f.dt_fim_vigencia::text, '') = '') or (trunc(f.dt_fim_vigencia,'dd') >= trunc(clock_timestamp(),'dd')))
                and (coalesce(f.ie_situacao::text, '') = '' or f.ie_situacao = 'A')
				and	coalesce(cd_pessoa_contratada::text, '') = ''
				and	coalesce(c.ie_situacao,'A') = 'A'
				
union all

				SELECT	c.nr_sequencia nr_contrato,
					f.nr_sequencia nr_seq_regra	
				from	contrato_regra_nf f,
					contrato c
				where	f.nr_seq_contrato = c.nr_sequencia
				and	coalesce(f.cd_material, cd_material_w) = cd_material_w
				and	((coalesce(f.dt_inicio_vigencia::text, '') = '') or (trunc(f.dt_inicio_vigencia,'dd') <= trunc(clock_timestamp(),'dd')))
				and	((coalesce(f.dt_fim_vigencia::text, '') = '') or (trunc(f.dt_fim_vigencia,'dd') >= trunc(clock_timestamp(),'dd')))
                and (coalesce(f.ie_situacao::text, '') = '' or f.ie_situacao = 'A')
				and	(cd_pessoa_contratada IS NOT NULL AND cd_pessoa_contratada::text <> '')
				and	coalesce(c.ie_situacao,'A') = 'A') alias41;

			CALL vincular_contrato_sol_item(	nr_solic_compra_p,
							nr_item_solic_compra_ww,
							nr_seq_contrato_w,
							nr_seq_regra_w,
							'N');
		elsif (qt_contratos_w > 1) then
			insert into diverg_contrato_item_doc(
				nr_documento,
				nr_item_documento,
				ie_tipo_documento,
				ie_tipo_consistencia,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_atualizacao,
				nm_usuario,
				nr_seq_regra_contrato,
				nr_seq_contrato,
				ds_observacao,
				ie_justificativa)
			values (nr_solic_compra_p,
				nr_item_solic_compra_ww,
				'SC',
				Wheb_mensagem_pck.get_Texto(301996), /*'Contrato',*/
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				null,
				null,
				Wheb_mensagem_pck.get_Texto(301995), /*'E necessario um contrato vinculado a este item!',*/
				'N');
		end if;
		end;
	end loop;
	close c00;
end if;

if (qt_existe_w > 0) then
	begin

	open c01;
	loop
	fetch c01 into
		nr_item_solic_compra_w,
		qt_material_w,
		vl_unit_prev_w,
		vl_pagto_w,
		nr_seq_regra_w,
		nr_seq_contrato_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		vl_total_item_w	:= (vl_unit_prev_w * qt_material_w);

		open c02;
		loop
		fetch c02 into
			ie_tipo_consistencia_w,
			vl_minimo_w,
			vl_maximo_w,
			ie_justificativa_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

			if (ie_tipo_consistencia_w = 'VL_TOTAL_IT_SC') and (vl_total_item_w <> vl_pagto_w) then
				begin
				
				if (vl_total_item_w < vl_minimo_w) or (vl_total_item_w > vl_maximo_w) then
					begin

					insert into diverg_contrato_item_doc(
						nr_documento,
						nr_item_documento,
						ie_tipo_documento,
						ie_tipo_consistencia,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						dt_atualizacao,
						nm_usuario,
						nr_seq_regra_contrato,
						nr_seq_contrato,
						ds_observacao,
						ie_justificativa) values (
							nr_solic_compra_p,
							nr_item_solic_compra_w,
							'SC',
							ie_tipo_consistencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_regra_w,
							nr_seq_contrato_w,
							Wheb_mensagem_pck.get_Texto(301997), /*'O valor total do item e menor ou maior que o permitido!',*/
							ie_justificativa_w);

					end;
				end if;

				end;
			end if; /*Fim Consistencia VL_TOTAL_IT_SC*/
			if (ie_tipo_consistencia_w = 'VL_UNIT_IT_SC') and
				((vl_unit_prev_w < vl_minimo_w) or (vl_unit_prev_w > vl_maximo_w)) then
				begin

				insert into diverg_contrato_item_doc(
					nr_documento,
					nr_item_documento,
					ie_tipo_documento,
					ie_tipo_consistencia,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_atualizacao,
					nm_usuario,
					nr_seq_regra_contrato,
					nr_seq_contrato,
					ds_observacao,
					ie_justificativa) values (
						nr_solic_compra_p,
						nr_item_solic_compra_w,
						'SC',
						ie_tipo_consistencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_regra_w,
						nr_seq_contrato_w,
						Wheb_mensagem_pck.get_Texto(301999), /*'O valor unitario do item e menor ou maior que o permitido!',*/
						ie_justificativa_w);

				end;
			end if; /*Fim Consistencia VL_UNIT_IT_SC*/
			if (ie_tipo_consistencia_w = 'QT_ITEM_SC') and
				((qt_material_w < vl_minimo_w) or (qt_material_w > vl_maximo_w)) then
				begin

				insert into diverg_contrato_item_doc(
					nr_documento,
					nr_item_documento,
					ie_tipo_documento,
					ie_tipo_consistencia,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_atualizacao,
					nm_usuario,
					nr_seq_regra_contrato,
					nr_seq_contrato,
					ds_observacao,
					ie_justificativa) values (
						nr_solic_compra_p,
						nr_item_solic_compra_w,
						'SC',
						ie_tipo_consistencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_regra_w,
						nr_seq_contrato_w,
						Wheb_mensagem_pck.get_Texto(302000), /*'A quantidade do item e menor ou maior que o permitido!',*/
						ie_justificativa_w);

				end;
			end if; /*Fim Consistencia QT_ITEM_SC*/
			end;
		end loop;
		close c02;		

		end;
	end loop;
	close c01;

	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_diverg_contrato_solic ( nr_solic_compra_p bigint, nm_usuario_p text) FROM PUBLIC;

