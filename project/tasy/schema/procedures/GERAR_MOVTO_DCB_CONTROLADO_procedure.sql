-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_movto_dcb_controlado ( ie_periodo_p bigint, dt_parametro_p timestamp, dt_inicio_p timestamp, dt_final_p timestamp, dt_movto_inic_p timestamp, dt_movto_fim_p timestamp, cd_classificacao_p text, cd_estabelecimento_p bigint, cd_local_estoque_p text, ie_sem_movimento_p text) AS $body$
DECLARE


qt_saldo_anterior_w		double precision;
qt_saldo_atual_w		double precision;
dt_mesano_referencia_w	timestamp;
cd_material_estoque_w	integer;
cd_dcb_w		varchar(20);
ds_dcb_w		varchar(80);
qt_transf_w		double precision;
qt_entrada_w		double precision;
qt_perda_w		double precision;
qt_saida_w		double precision;
cd_classificacao_w		varchar(40);
cd_local_estoque_w	integer;
qt_existe_w		bigint := 0;	
dt_inicial_w		timestamp;
dt_final_w		timestamp;
dt_movto_inic_w		timestamp;
dt_movto_fim_w		timestamp;
ie_ordem_w		smallint;

C01 CURSOR FOR
	SELECT	d.cd_material,
		c.cd_dcb,
		c.ds_dcb,
		b.cd_classificacao,
		d.cd_local_estoque,
		0 qt_entrada,
		0 qt_saida,
		0 qt_perda,
		0 qt_transf,
		coalesce(sum(d.qt_estoque),0) qt_estoque
	from	material a,
		medic_controlado b,
		dcb_medic_controlado c,
		saldo_estoque d
	where	d.cd_material = a.cd_material
	and	a.cd_material = b.cd_material
	and	b.nr_seq_dcb  = c.nr_sequencia
    AND coalesce(b.cd_estabelecimento,d.cd_estabelecimento) = d.cd_estabelecimento
	AND	d.cd_estabelecimento = cd_estabelecimento_p
	and	b.ie_situacao = 'A'
	and	dt_mesano_referencia = PKG_DATE_UTILS.ADD_MONTH(dt_inicial_w, -1,0)
	group by d.cd_material,
		 c.cd_dcb,
		 c.ds_dcb,
		 b.cd_classificacao,
		 d.cd_local_estoque
	
union all

	SELECT	e.cd_material_estoque cd_material,
		c.cd_dcb,
		c.ds_dcb,
		m.cd_classificacao,
		e.cd_local_estoque,
		sum(obter_qt_coluna_controlado(1, b.ie_entrada_saida, b.ie_tipo_requisicao, 
			b.ie_coluna_controlado, e.cd_acao, e.qt_estoque)) qt_entrada,
		sum(obter_qt_coluna_controlado(2, b.ie_entrada_saida, b.ie_tipo_requisicao, 
			b.ie_coluna_controlado, e.cd_acao, e.qt_estoque)) qt_saida,
		sum(obter_qt_coluna_controlado(3, b.ie_entrada_saida, b.ie_tipo_requisicao, 
			b.ie_coluna_controlado, e.cd_acao, e.qt_estoque)) qt_perda,
		sum(obter_qt_coluna_controlado(4, b.ie_entrada_saida, b.ie_tipo_requisicao, 
			b.ie_coluna_controlado, e.cd_acao, e.qt_estoque)) qt_transf,
		0
	from	operacao_estoque b,
		dcb_medic_controlado c,
		medic_controlado m,
		material d,
		movimento_estoque e
	where	b.cd_operacao_estoque = e.cd_operacao_estoque
	and	d.cd_material	= e.cd_material_estoque
	and	e.cd_material_estoque =  m.cd_material
	and	m.nr_seq_dcb = c.nr_sequencia
    AND coalesce(m.cd_estabelecimento,e.cd_estabelecimento) = e.cd_estabelecimento 
	and	e.cd_estabelecimento = cd_estabelecimento_p
	and	m.ie_situacao = 'A'
	and 	e.dt_mesano_referencia between dt_inicial_w and dt_final_w
	and	((coalesce(dt_movto_inic_p::text, '') = '') or (e.dt_movimento_estoque between dt_movto_inic_w and dt_movto_fim_w))
	and	(dt_processo IS NOT NULL AND dt_processo::text <> '')
	group by e.cd_material_estoque,c.cd_dcb, c.ds_dcb, m.cd_classificacao,e.cd_local_estoque
	
union

	select	distinct
		m.cd_material,
		c.cd_dcb,
		c.ds_dcb,
		m.cd_classificacao,
		null,
		0,
		0,
		0,
		0,
		0
	from	dcb_medic_controlado c,
		medic_controlado m
	where	m.nr_seq_dcb = c.nr_sequencia
	and (ie_sem_movimento_p = 'S')
	and	m.ie_situacao = 'A'
	and not exists(
		select	1
		from	movimento_estoque e
		where	e.cd_material_estoque = m.cd_material
        AND coalesce(m.cd_estabelecimento,e.cd_estabelecimento) = e.cd_estabelecimento 
		and	e.cd_estabelecimento = cd_estabelecimento_p
		and	e.dt_mesano_referencia between dt_inicial_w and dt_final_w
		and	((coalesce(dt_movto_inic_p::text, '') = '') or (e.dt_movimento_estoque between dt_movto_inic_w and dt_movto_fim_w))
		and	(e.dt_processo IS NOT NULL AND e.dt_processo::text <> ''))
	and not exists (
		select	1
		from	saldo_estoque e
		where	e.cd_material = m.cd_material
        AND coalesce(m.cd_estabelecimento,e.cd_estabelecimento) = e.cd_estabelecimento 
		and	e.cd_estabelecimento = cd_estabelecimento_p
		and	e.dt_mesano_referencia between dt_inicial_w and dt_final_w)
	
UNION ALL

	SELECT	d.cd_material,
		c.cd_dcb,
		c.ds_dcb,
		b.cd_classificacao,
		d.cd_local_estoque,
		0 qt_entrada,
		0 qt_saida,
		0 qt_perda,
		0 qt_transf,
		0 qt_estoque
	FROM	material a,
		medic_controlado b,
		dcb_medic_controlado c,
		saldo_estoque d
	WHERE	d.cd_material = a.cd_material
	AND	a.cd_material = b.cd_material
	AND	b.nr_seq_dcb  = c.nr_sequencia
    AND coalesce(b.cd_estabelecimento,d.cd_estabelecimento) = d.cd_estabelecimento 
	AND	d.cd_estabelecimento = cd_estabelecimento_p
	and	b.ie_situacao = 'A'
	AND	d.dt_mesano_referencia BETWEEN dt_inicial_w AND dt_final_w
	AND 	NOT EXISTS (	SELECT	1
				FROM 	saldo_estoque x
				WHERE	x.cd_material = a.cd_material
				AND	x.cd_estabelecimento = d.cd_estabelecimento
				and	x.cd_local_estoque = d.cd_local_estoque
				AND	x.dt_mesano_referencia = PKG_DATE_UTILS.ADD_MONTH(dt_inicial_w, -1,0))
	AND 	NOT EXISTS (	SELECT	1
				FROM	movimento_estoque e
				WHERE	d.cd_material	= e.cd_material_estoque
                AND coalesce(b.cd_estabelecimento,e.cd_estabelecimento) = e.cd_estabelecimento 
				AND	e.cd_estabelecimento	= cd_estabelecimento_p	
				and	e.cd_local_estoque = d.cd_local_estoque
				AND 	e.dt_mesano_referencia BETWEEN dt_inicial_w AND dt_final_w
				AND	e.dt_movimento_estoque BETWEEN dt_movto_inic_w AND dt_movto_fim_w
				AND	(dt_processo IS NOT NULL AND dt_processo::text <> ''))
	GROUP BY d.cd_material,
		c.cd_dcb,
		c.ds_dcb,
		b.cd_classificacao,
		d.cd_local_estoque
	order by 	1,10 desc;


BEGIN

delete FROM w_dcb_medic_controlado;
commit;
dt_inicial_w		:= pkg_date_utils.start_of(dt_parametro_p,'YEAR',0);
dt_final_w		:= pkg_date_utils.start_of(dt_parametro_p,'YEAR',0);
qt_perda_w		:= 0;
qt_transf_w		:= 0;
dt_movto_inic_w		:= pkg_date_utils.start_of(dt_movto_inic_p, 'DD',0);
dt_movto_fim_w		:= pkg_date_utils.start_of(dt_movto_fim_p, 'DD',0) + 86399 / 86400;

if (ie_periodo_p = 5) then
	dt_final_w	:= PKG_DATE_UTILS.ADD_MONTH(dt_final_w,11,0);
elsif (ie_periodo_p = 6) then
	dt_inicial_w	:= pkg_date_utils.start_of(dt_inicio_p,'MONTH',0);
	dt_final_w	:= pkg_date_utils.start_of(dt_final_p,'MONTH',0);
else
	dt_inicial_w	:= PKG_DATE_UTILS.ADD_MONTH(dt_inicial_w, 3 * (ie_periodo_p - 1),0);
	dt_final_w	:= PKG_DATE_UTILS.ADD_MONTH(dt_inicial_w, 2,0);
end if;

OPEN C01;
	LOOP
	FETCH C01 into
		cd_material_estoque_w,
		cd_dcb_w,
		ds_dcb_w,
		cd_classificacao_w,
		cd_local_estoque_w,
		qt_entrada_w,
		qt_saida_w,
		qt_perda_w,		
		qt_transf_w,
		qt_saldo_anterior_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (dt_movto_inic_p IS NOT NULL AND dt_movto_inic_p::text <> '') then
		begin
		if (pkg_date_utils.start_of(dt_movto_inic_w,'DD',0) = pkg_date_utils.start_of(dt_movto_inic_w,'MONTH',0)) then
			select	coalesce(sum(qt_estoque),0)
			into STRICT	qt_saldo_anterior_w
			from	saldo_estoque
			where	cd_estabelecimento	= cd_estabelecimento_p
			and	cd_material		= cd_material_estoque_w
			and (coalesce(cd_local_estoque_w,0) = 0 or cd_local_estoque = cd_local_estoque_w)
			and	dt_mesano_referencia	= PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_movto_inic_w,'MM',0),-1,0);
		else
			qt_saldo_anterior_w := Obter_saldo_Diario_medic(
						(dt_movto_inic_w - 1),
						cd_estabelecimento_p,
						cd_local_estoque_w,
						cd_material_estoque_w);
		end if;
		qt_saldo_atual_w :=	Obter_saldo_Diario_medic(
					dt_movto_fim_w,
					cd_estabelecimento_p,
					cd_local_estoque_w,
					cd_material_estoque_w);
		end;
	else
		begin
		select	coalesce(sum(qt_estoque),0)
		into STRICT	qt_saldo_atual_w
		from	saldo_estoque
		where	cd_estabelecimento	= cd_estabelecimento_p
		and	cd_material	= cd_material_estoque_w
		and	cd_local_estoque	= cd_local_estoque_w
		and	dt_mesano_referencia = dt_final_w;
		end;
	end if;

	select	count(*)
	into STRICT	qt_existe_w
	from	w_dcb_medic_controlado
	where	cd_material = cd_material_estoque_w
	and	cd_local_estoque = cd_local_estoque_w
	and	cd_classificacao = cd_classificacao_w
	and	cd_dcb = cd_dcb_w;

	if (qt_existe_w = 0) then
		insert into w_dcb_medic_controlado(
			cd_estabelecimento,
			cd_dcb,
			ds_dcb,
			cd_material,
			cd_classificacao,
			qt_estoque,
			qt_entrada,
			qt_saida,
			qt_perda,
			qt_transf,
			qt_estoque_fim,
			cd_local_estoque)
		values (cd_estabelecimento_p,
			cd_dcb_w,
			ds_dcb_w,
			cd_material_estoque_w,
			cd_classificacao_w,
			qt_saldo_anterior_w,
			qt_entrada_w,
			qt_saida_w,
			qt_perda_w,
			qt_transf_w,
			qt_saldo_atual_w,
			cd_local_estoque_w);
	else
		update	w_dcb_medic_controlado
		set	qt_entrada	= qt_entrada	+ qt_entrada_w,
			qt_saida		= qt_saida 	+ qt_saida_w,
			qt_perda		= qt_perda	+ qt_perda_w,
			qt_transf		= qt_transf	+ qt_transf_w
		where	cd_material = cd_material_estoque_w
		and	cd_local_estoque = cd_local_estoque_w
		and	cd_classificacao = cd_classificacao_w
		and	cd_dcb = cd_dcb_w;
	end if;
	end;
	END LOOP;
CLOSE C01;	
commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_movto_dcb_controlado ( ie_periodo_p bigint, dt_parametro_p timestamp, dt_inicio_p timestamp, dt_final_p timestamp, dt_movto_inic_p timestamp, dt_movto_fim_p timestamp, cd_classificacao_p text, cd_estabelecimento_p bigint, cd_local_estoque_p text, ie_sem_movimento_p text) FROM PUBLIC;

