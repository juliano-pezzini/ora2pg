-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_atualizar_medico_grupo ( nr_seq_grupo_p bigint, nr_seq_medico_regra_p bigint, cd_medico_p text, ie_acao_p text, ie_situacao_p text, hr_inicial_p timestamp, hr_final_p timestamp, nm_usuario_p text) AS $body$
DECLARE


cd_agenda_w		bigint;
qt_medico_gerado_w	bigint;
qt_medico_regra_w	bigint;

C01 CURSOR FOR
	SELECT	distinct cd_agenda
	into STRICT	qt_medico_gerado_w
	from	ageint_medico_regra a,
		agenda_medico b
	where	a.nr_sequencia	= b.nr_seq_medico_regra
	and	a.nr_seq_grupo	= nr_seq_grupo_p;


BEGIN

select	count(*)
into STRICT	qt_medico_gerado_w
from	ageint_medico_regra a,
	agenda_medico b
where	a.nr_sequencia	= b.nr_seq_medico_regra
and	a.nr_seq_grupo	= nr_seq_grupo_p;

if (qt_medico_gerado_w	>0) then
	if (ie_acao_p	= 'N') then--novo
		open C01;
		loop
		fetch C01 into
			cd_agenda_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			insert into agenda_medico(nr_sequencia,
				cd_agenda,
				cd_medico,
				dt_Atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_situacao,
				ie_permite,
				nr_seq_medico_regra,
				hr_inicial,
				hr_final)
			values (nextval('agenda_medico_seq'),
				cd_agenda_w,
				cd_medico_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				'A',
				'S',
				nr_seq_medico_regra_p,
				hr_inicial_p,
				hr_final_p);
				end;
		end loop;
		close C01;
	elsif (ie_acao_p	= 'A') then--alterado
		select	count(*)
		into STRICT	qt_medico_regra_w
		from	agenda_medico
		where	nr_seq_medico_regra	= nr_seq_medico_regra_p;

		if (qt_medico_regra_w	> 0) then
			update	agenda_medico
			set	ie_situacao		= ie_situacao_p,
				cd_medico		= cd_medico_p,
				hr_inicial		= hr_inicial_p,
				hr_final		= hr_final_p,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_seq_medico_regra	= nr_seq_medico_regra_p;
		else
			insert into agenda_medico(nr_sequencia,
				cd_agenda,
				cd_medico,
				dt_Atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_situacao,
				ie_permite,
				nr_seq_medico_regra,
				hr_inicial,
				hr_final)
			values (nextval('agenda_medico_seq'),
				cd_agenda_w,
				cd_medico_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				'A',
				'S',
				nr_seq_medico_regra_p,
				hr_inicial_p,
				hr_final_p);
		end if;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_atualizar_medico_grupo ( nr_seq_grupo_p bigint, nr_seq_medico_regra_p bigint, cd_medico_p text, ie_acao_p text, ie_situacao_p text, hr_inicial_p timestamp, hr_final_p timestamp, nm_usuario_p text) FROM PUBLIC;

