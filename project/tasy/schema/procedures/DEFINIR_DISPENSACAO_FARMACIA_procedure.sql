-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE definir_dispensacao_farmacia ((nr_prescricao_p bigint, nr_seq_item_p bigint, ie_regra_disp_p text, ds_motivo_disp_p text, nr_seq_motivo_disp_p bigint, nm_usuario_p text) is cd_estab_prescr_w smallint) RETURNS varchar AS $body$
BEGIN
	if (ie_regra_disp_p = 'S') then
		return wheb_mensagem_pck.get_texto(1114328);
	elsif (ie_regra_disp_p = 'N') then
		return wheb_mensagem_pck.get_texto(1114329);
	elsif (ie_regra_disp_p = 'U') then
		return wheb_mensagem_pck.get_texto(1114330);
	end if;
end;

begin
if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_item_p IS NOT NULL AND nr_seq_item_p::text <> '') and (ie_regra_disp_p IS NOT NULL AND ie_regra_disp_p::text <> '') then
	
	/* obter estabelecimento prescricao */

	select	cd_estabelecimento,
		nr_atendimento
	into STRICT	cd_estab_prescr_w,
		nr_atendimento_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;
	
	/* obter valor parametro REP */

	select	max(obter_valor_param_usuario(924, 194, obter_perfil_ativo, nm_usuario_p, cd_estab_prescr_w))
	into STRICT	cd_motivo_baixa_w
	;
		
	if (obter_funcao_ativa = 252) then
		ie_disp_manual_w := 'S';
		ie_atualiza_kit_w := 'S';
		ie_define_disp_kit_w := Obter_Param_Usuario(252, 30, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_define_disp_kit_w);
		VarCancelarLote_w	:= 'T';
	else
		
		ie_disp_manual_w := Obter_Param_Usuario(7010, 113, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_disp_manual_w);
		ie_atualiza_kit_w := Obter_Param_Usuario(7010, 119, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_atualiza_kit_w);
		ie_define_disp_kit_w := Obter_Param_Usuario(7015, 68, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_define_disp_kit_w);
		VarCancelarLote_w := Obter_Param_Usuario(7015, 83, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, VarCancelarLote_w);
	end if;

	nm_usuario_nao_disp_w	:= null;
	if (ie_regra_disp_p = 'U') or (ie_regra_disp_p = 'N') then
		nm_usuario_nao_disp_w	:= nm_usuario_p;
	end if;

	if (ie_regra_disp_p = 'U') or (ie_regra_disp_p = 'N') then
		ie_disp_manual_w := 'N';
	end if;	

	if (ie_define_disp_kit_w = 'S') then
		ie_necessita_disp_kit_ww := ie_regra_disp_p;
	end if;	
	
	select	coalesce(max(ie_regra_disp),'XPTO'),
			coalesce(max(nr_seq_mat_cpoe),0),
			coalesce(max(nr_seq_dieta_cpoe),0),
			max(ds_observacao)
	into STRICT	ie_regra_disp_old_w,
			nr_seq_mat_cpoe_w,
			nr_seq_dieta_cpoe_w,
			ds_observacao_w
	from	prescr_material
	where	nr_prescricao = nr_prescricao_p
	and		nr_sequencia = nr_seq_item_p;
	
	if (nr_seq_mat_cpoe_w > 0) then

		select	coalesce(max(ie_regra_disp), 'XPTO'),
				max(ds_observacao)
		into STRICT	ie_regra_disp_cpoe_w,
				ds_observacao_cpoe_w
		from	cpoe_material
		where	nr_sequencia = nr_seq_mat_cpoe_w;

	elsif (nr_seq_dieta_cpoe_w > 0) then

		select	coalesce(max(ie_regra_disp), 'XPTO'),
				max(ds_observacao)
		into STRICT	ie_regra_disp_cpoe_w,
				ds_observacao_cpoe_w
		from	cpoe_dieta
		where	nr_sequencia = nr_seq_dieta_cpoe_w;
	end if;
	
	ds_obs_dis_w := null;

	if (nr_seq_mat_cpoe_w > 0) or (nr_seq_dieta_cpoe_w > 0) then
		if (ie_regra_disp_old_w = 'XPTO') or (ie_regra_disp_cpoe_w = 'XPTO') then
			ds_obs_dis_w := substr(wheb_mensagem_pck.get_texto(1114325, 'IE_REGRA_DISP=' || dsRegraDisp(ie_regra_disp_p)), 1, 254);
		elsif (ie_regra_disp_cpoe_w <> ie_regra_disp_p) then
			ds_obs_dis_w := substr(wheb_mensagem_pck.get_texto(1114689, 'IE_ANT_REGRA_DISP=' || dsRegraDisp(ie_regra_disp_old_w) || ';IE_NOVA_REGRA_DISP=' || dsRegraDisp(ie_regra_disp_p)), 1, 254);
		end if;
	end if;

	ds_obs_dis_ww := ds_obs_dis_w;

	if (ds_observacao_cpoe_w IS NOT NULL AND ds_observacao_cpoe_w::text <> '') and (ds_obs_dis_w IS NOT NULL AND ds_obs_dis_w::text <> '') then
		ds_obs_dis_ww := substr(ds_observacao_cpoe_w || chr(13) || ds_obs_dis_w, 1, 2000);
	elsif (ds_observacao_cpoe_w IS NOT NULL AND ds_observacao_cpoe_w::text <> '') then
		ds_obs_dis_ww := substr(ds_observacao_cpoe_w, 1, 2000);
	end if;

	if (nr_seq_mat_cpoe_w > 0) then

		update	cpoe_material
		set		ie_regra_disp = ie_regra_disp_p,
				ds_observacao = substr(trim(both ds_obs_dis_ww), 1, 2000)
		where 	nr_sequencia = nr_seq_mat_cpoe_w;

	elsif (nr_seq_dieta_cpoe_w > 0) then

		update	cpoe_dieta
		set		ie_regra_disp = ie_regra_disp_p,
				ds_observacao = substr(trim(both ds_obs_dis_ww), 1, 2000)
		where	nr_sequencia = nr_seq_dieta_cpoe_w;

	else

		ds_obs_dis_ww := ds_observacao_w;

	end if;

	/* atualizar dispensacao item */

	update	prescr_material a
	set		a.ie_regra_disp = ie_regra_disp_p,
			a.dt_baixa = CASE WHEN ie_regra_disp_p='N' THEN  clock_timestamp()  ELSE null END ,
			a.cd_motivo_baixa = CASE WHEN ie_regra_disp_p='N' THEN  cd_motivo_baixa_w  ELSE 0 END ,
			a.ds_motivo_disp = ds_motivo_disp_p,
			a.nr_seq_motivo_disp = CASE WHEN nr_seq_motivo_disp_p=0 THEN  null  ELSE nr_seq_motivo_disp_p END ,
			a.nm_usuario_disp = CASE WHEN ie_disp_manual_w='S' THEN  nm_usuario_p  ELSE null END ,
			a.ie_necessita_disp_kit = coalesce(ie_necessita_disp_kit_ww, ie_necessita_disp_kit),
			a.nm_usuario_nao_disp = nm_usuario_nao_disp_w,
			a.ds_observacao = substr(trim(both ds_obs_dis_ww), 1, 2000)
	where	a.nr_prescricao = nr_prescricao_p
	and		a.nr_sequencia = nr_seq_item_p;

	if (ie_atualiza_kit_w = 'S') then
		select 	nr_seq_kit
		into STRICT	nr_seq_kit_w
		from 	prescr_material
		where 	nr_prescricao = nr_prescricao_p
		and	nr_sequencia  = nr_seq_item_p;
	
		if (nr_seq_kit_w > 0) then
			update	prescr_material
			set	ie_regra_disp		= ie_regra_disp_p,
				dt_baixa		= CASE WHEN ie_regra_disp_p='N' THEN  clock_timestamp()  ELSE null END ,
				cd_motivo_baixa		= CASE WHEN ie_regra_disp_p='N' THEN  cd_motivo_baixa_w  ELSE 0 END ,
				ds_motivo_disp		= ds_motivo_disp_p,
				nr_seq_motivo_disp	= CASE WHEN nr_seq_motivo_disp_p=0 THEN null  ELSE nr_seq_motivo_disp_p END ,
				ie_necessita_disp_kit	= CASE WHEN ie_regra_disp_p='N' THEN  'N'  ELSE null END ,
				nm_usuario_disp		= CASE WHEN ie_disp_manual_w='S' THEN nm_usuario_p  ELSE null END
			where	nr_prescricao		= nr_prescricao_p
			and	nr_sequencia		= nr_seq_kit_w;
			
			update	prescr_material
			set	ie_regra_disp		= ie_regra_disp_p,
				dt_baixa		= CASE WHEN ie_regra_disp_p='N' THEN  clock_timestamp()  ELSE null END ,
				cd_motivo_baixa		= CASE WHEN ie_regra_disp_p='N' THEN  cd_motivo_baixa_w  ELSE 0 END ,
				ds_motivo_disp		= ds_motivo_disp_p,
				nr_seq_motivo_disp	= CASE WHEN nr_seq_motivo_disp_p=0 THEN null  ELSE nr_seq_motivo_disp_p END ,
				ie_necessita_disp_kit	= CASE WHEN ie_regra_disp_p='N' THEN  'N'  ELSE null END ,
				nm_usuario_disp		= CASE WHEN ie_disp_manual_w='S' THEN nm_usuario_p  ELSE null END
			where	nr_prescricao		= nr_prescricao_p
			and	nr_seq_kit		= nr_seq_kit_w
			and	nr_sequencia  		<> nr_seq_item_p;		
	
			/* atualizar dispensacao diluentes */

			update	prescr_material
			set	ie_regra_disp		= ie_regra_disp_p,
				dt_baixa		= CASE WHEN ie_regra_disp_p='N' THEN  clock_timestamp()  ELSE null END ,
				cd_motivo_baixa		= CASE WHEN ie_regra_disp_p='N' THEN  cd_motivo_baixa_w  ELSE 0 END ,
				ds_motivo_disp		= ds_motivo_disp_p,
				nr_seq_motivo_disp	= CASE WHEN nr_seq_motivo_disp_p=0 THEN null  ELSE nr_seq_motivo_disp_p END ,
				nm_usuario_disp		= CASE WHEN ie_disp_manual_w='S' THEN nm_usuario_p  ELSE null END
			where	nr_prescricao		= nr_prescricao_p
			and	nr_sequencia_diluicao	= nr_seq_kit_w
			and	coalesce(ie_regra_disp,'X')	<> 'D';
		end if;	
	end if;	
		
	
	if (ie_regra_disp_p = 'N') then
		delete from gedi_medic_atend
		where	nr_atendimento	= nr_atendimento_w
		and	ie_status	= 'G';
	end if;
	
	if (ie_disp_manual_w = 'S') and (ie_regra_disp_p = 'S') then
		select	max(cd_material)
		into STRICT	cd_material_w
		from 	prescr_material
		where	nr_prescricao 	= nr_prescricao_p
		and	nr_sequencia	= nr_seq_item_p;
		
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_horario_w
		from   	prescr_mat_hor a,
			prescr_medica b
		where  	a.nr_prescricao = b.nr_prescricao
		and	b.nr_atendimento= nr_atendimento_w
		and	a.cd_material	= cd_material_w
		and	(a.dt_lib_horario IS NOT NULL AND a.dt_lib_horario::text <> '');
		
		select	max(nr_sequencia)
		into STRICT	nr_sequencia_ww
		from	gedi_medic_atend
		where	nr_atendimento	= nr_atendimento_w
		and	cd_material	= cd_material_w
		and	ie_status	<> 'E';
		
		insert into gedi_medic_atend(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_atendimento,
			cd_material,
			dt_inicio,
			cd_unidade_medida,
			qt_saldo,
			ie_status,
			nr_seq_horario,
			dt_fim_estabilidade)
		SELECT	nextval('gedi_medic_atend_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_atendimento,
			cd_material,
			clock_timestamp(),
			cd_unidade_medida,
			0,
			'A',
			nr_seq_horario_w,
			null
		from	gedi_medic_atend
		where	nr_sequencia	= nr_sequencia_ww;
	end if;	
	
	/* atualizar dispensacao dos itens compostos */

	update	prescr_material
	set	ie_regra_disp		= ie_regra_disp_p,
		dt_baixa		= CASE WHEN ie_regra_disp_p='N' THEN  clock_timestamp()  ELSE null END ,
		cd_motivo_baixa		= CASE WHEN ie_regra_disp_p='N' THEN  cd_motivo_baixa_w  ELSE 0 END ,
		ds_motivo_disp		= ds_motivo_disp_p,
		nr_seq_motivo_disp	= CASE WHEN nr_seq_motivo_disp_p=0 THEN null  ELSE nr_seq_motivo_disp_p END ,
		nm_usuario_disp		= CASE WHEN ie_disp_manual_w='S' THEN nm_usuario_p  ELSE null END
	where	nr_prescricao		= nr_prescricao_p
	and	nr_sequencia		<> nr_seq_item_p
	and	ie_agrupador		= 1
	and	nr_agrupamento		= nr_agrupamento_w;
	
	/* atualizar dispensacao diluentes */

	update	prescr_material
	set	ie_regra_disp		= ie_regra_disp_p,
		dt_baixa		= CASE WHEN ie_regra_disp_p='N' THEN  clock_timestamp()  ELSE null END ,
		cd_motivo_baixa		= CASE WHEN ie_regra_disp_p='N' THEN  cd_motivo_baixa_w  ELSE 0 END ,
		ds_motivo_disp		= ds_motivo_disp_p,
		nr_seq_motivo_disp	= CASE WHEN nr_seq_motivo_disp_p=0 THEN null  ELSE nr_seq_motivo_disp_p END ,
		nm_usuario_disp		= CASE WHEN ie_disp_manual_w='S' THEN nm_usuario_p  ELSE null END
	where	nr_prescricao		= nr_prescricao_p
	and	nr_sequencia_diluicao	= nr_seq_item_p
	and	coalesce(ie_regra_disp,'X')	<> 'D';
	
	/* atualizar dispensacao dos itens que foram gerados via kit */

	update	prescr_material
	set	ie_regra_disp		= ie_regra_disp_p,
		dt_baixa		= CASE WHEN ie_regra_disp_p='N' THEN  clock_timestamp()  ELSE null END ,
		cd_motivo_baixa		= CASE WHEN ie_regra_disp_p='N' THEN  cd_motivo_baixa_w  ELSE 0 END ,
		ds_motivo_disp		= ds_motivo_disp_p,
		nr_seq_motivo_disp	= CASE WHEN nr_seq_motivo_disp_p=0 THEN null  ELSE nr_seq_motivo_disp_p END ,
		ie_necessita_disp_kit	= CASE WHEN ie_regra_disp_p='N' THEN  'N'  ELSE null END ,
		nm_usuario_disp		= CASE WHEN ie_disp_manual_w='S' THEN nm_usuario_p  ELSE null END
	where	nr_prescricao		= nr_prescricao_p
	and	nr_seq_kit		= nr_seq_item_p;
	
	if (VarCancelarLote_w = 'S') or (VarCancelarLote_w = 'T') then
		
		if (ie_regra_disp_p = 'N') then
			for c01_w in c01 loop
				ie_desdobrar_w	:= 'N';
				if (VarCancelarLote_w = 'T') then
					if (c01_w.nr_seq_superior IS NOT NULL AND c01_w.nr_seq_superior::text <> '') then
						select	count(*)
						into STRICT	qt_w
						from	prescr_material a									
						where	a.nr_prescricao	= nr_prescricao_p
						and	a.nr_sequencia	<> nr_seq_item_p
						and	a.ie_regra_disp	not in (
							'K',	--Nao necessita dispensacao
							'N'		--Nao controla
						)
						and	a.nr_sequencia in (
							SELECT	b.nr_seq_material
							from	prescr_mat_hor b
							where a.nr_prescricao	= b.nr_prescricao
							and a.nr_sequencia	= b.nr_seq_material
							and	b.nr_seq_lote	= c01_w.nr_seq_lote
						);

						if (qt_w > 0) then
							ie_desdobrar_w	:= 'S';
						end if;
					else
						select	count(*)
						into STRICT	qt_w
						from	prescr_mat_hor a,
							ap_lote b
						where	a.nr_prescricao	= nr_prescricao_p
						and	a.nr_seq_lote	= b.nr_sequencia
						and	b.IE_STATUS_LOTE = 'G'
						and	a.nr_seq_lote	= c01_w.nr_seq_lote
						and	coalesce(a.nr_seq_superior::text, '') = ''
						and	coalesce(a.dt_suspensao::text, '') = '';

						if (qt_w > 1) then
							ie_desdobrar_w	:= 'S';
						end if;
					end if;
				end if;

				if (ie_desdobrar_w = 'N') then
          -- 728862 = Cancelado conforme parametro [83] da enfermagem 
					CALL cancelar_lote_prescr(c01_w.nr_seq_lote, null, nm_usuario_p, obter_desc_expressao(728862));
				else
					select	max(nr_sequencia),
						max(qt_dispensar)
					into STRICT	nr_seq_lote_item_w,
						qt_dispensar_lote_w
					from	ap_lote_item
					where	nr_seq_mat_hor = c01_w.nr_sequencia;

					CALL Gerar_w_ap_lote_desdob(c01_w.nr_seq_lote, nr_seq_lote_item_w, c01_w.nr_sequencia, qt_dispensar_lote_w, 0);
					nr_lote_novo_w := desdobrar_lote_prescricao(c01_w.nr_seq_lote, nm_usuario_p, 'D', null, null, 'N', nr_lote_novo_w);
           -- 728862 = Cancelado conforme parametro [83] da enfermagem 
					CALL cancelar_lote_prescr(nr_lote_novo_w, null, nm_usuario_p, obter_desc_expressao(728862));
				end if;
			end loop;
		elsif (ie_regra_disp_p = 'S') then
			open C02;
			loop
			fetch C02 into	
				nr_seq_lote_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */

				update	ap_lote_item
				set	dt_supensao	 = NULL,
					nm_usuario_susp	 = NULL
				where	nr_seq_lote	= nr_seq_lote_w;

				update	ap_lote
				set	ie_status_lote		= 'G',
					dt_cancelamento		 = NULL,
					cd_perfil_cancel	 = NULL,
					ds_maquina_cancelamento  = NULL,
					nm_usuario_cancelamento  = NULL,
					nr_seq_motivo_cancel	 = NULL
				where  	nr_sequencia		= nr_seq_lote_w; 	

			end loop;
			close C02;
		end if;	
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE definir_dispensacao_farmacia ((nr_prescricao_p bigint, nr_seq_item_p bigint, ie_regra_disp_p text, ds_motivo_disp_p text, nr_seq_motivo_disp_p bigint, nm_usuario_p text) is cd_estab_prescr_w smallint) FROM PUBLIC;

