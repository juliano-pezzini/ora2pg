-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE receber_fornecedor_integracao ( cd_cnpj_p text, ds_razao_social_p text, nm_fantasia_p text, nr_inscricao_estadual_p text, cd_cep_p text, ds_endereco_p text, nm_municipio_p text, ds_estado_p text, sg_estado_p text, ds_pais_p text, sg_pais_p text, nr_telefone_p text, nr_fax_p text, ds_contato_p text, ds_email_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_cnpj_w     varchar(14);
qt_registro_w     bigint;
nr_seq_pais_w     bigint;
cd_estabelecimento_w    bigint;
cd_tipo_pessoa_w      bigint;
cd_regra_w        smallint;

c01 CURSOR FOR
SELECT  cd_estabelecimento
from  estabelecimento
where ie_situacao = 'A';


BEGIN

select  coalesce(max(cd_tipo_pessoa_bionexo),0)
into STRICT  cd_tipo_pessoa_w
from  parametro_compras
where cd_estabelecimento = cd_estabelecimento_p;

if (cd_tipo_pessoa_w = 0) then
  select  min(cd_tipo_pessoa)
  into STRICT  cd_tipo_pessoa_w
  from  tipo_pessoa_juridica
  where ie_situacao = 'A';
end if;

cd_cnpj_w := substr(replace(replace(replace(cd_cnpj_p,'-',''),'/',''),'.',''),1,14);

if (length(cd_cnpj_w) = 14) then
  begin

  select  min(nr_sequencia)
  into STRICT  nr_seq_pais_w
  from  pais
  where elimina_acentuacao(upper(nm_pais)) = elimina_acentuacao(upper(ds_pais_p));

  select  count(*)
  into STRICT  qt_registro_w
  from  pessoa_juridica
  where cd_cgc = cd_cnpj_w;

  -- Verifica se ha regra de pre cadastro para o tipo de pessoa juridica
  select coalesce(max(cd_tipo_pessoa),0)
    into STRICT cd_regra_w
    from ( SELECT cd_tipo_pessoa
             from regra_pre_cad_pj
            where cd_tipo_pessoa = cd_tipo_pessoa_w
              and ie_exige_aprov_cadastro = 'S'

union

           SELECT cd_tipo_pessoa
             from regra_pre_cad_pj
            where coalesce(cd_tipo_pessoa::text, '') = ''
              and ie_exige_aprov_cadastro = 'S' ) alias3;

  if (qt_registro_w > 0) then
    begin
    update  pessoa_juridica
    set ds_razao_social   = substr(ds_razao_social_p,1,255),
      nm_fantasia   = substr(nm_fantasia_p,1,80),
      nr_inscricao_estadual = substr(nr_inscricao_estadual_p,1,20),
      cd_cep      = cd_cep_p,
      ds_endereco   = substr(ds_endereco_p,1,40),
      ds_municipio    = substr(nm_municipio_p,1,40),
      sg_estado   = substr(sg_estado,1,15),
      nr_seq_pais   = nr_seq_pais_w,
      nr_telefone   = substr(nr_telefone_p,1,15),
      nr_fax      = substr(nr_fax_p,1,15)
    where cd_cgc      = cd_cnpj_w;

    update  pessoa_juridica_estab
    set nm_pessoa_contato = substr(ds_contato_p,1,255),
      ds_email      = substr(ds_email_p,1,255)
    where cd_cgc      = cd_cnpj_w;

    end;
  else
    -- Se houver, insere na tabela PRE_PESSOA_JURIDICA
    if cd_regra_w <> 0 then
      begin
      insert into pre_pessoa_juridica(
        cd_cgc,
        ds_razao_social,
        nm_fantasia,
        cd_cep,
        ds_endereco,
        ds_municipio,
        sg_estado,
        dt_atualizacao,
        nm_usuario,
        nr_telefone,
        nr_fax,
        nr_inscricao_estadual,
        cd_tipo_pessoa,
        nr_seq_pais,
        ie_prod_fabric,
        ie_situacao,
        nm_usuario_lib,
        dt_liberacao,
        nr_sequencia)
      values ( cd_cnpj_w,
        substr(ds_razao_social_p,1,255),
        substr(nm_fantasia_p,1,80),
        cd_cep_p,
        substr(ds_endereco_p,1,40),
        substr(nm_municipio_p,1,40),
        substr(sg_estado_p,1,2),
        clock_timestamp(),
        nm_usuario_p,
        substr(nr_telefone_p,1,15),
        substr(nr_fax_p,1,15),
        substr(nr_inscricao_estadual_p,1,20),
        cd_tipo_pessoa_w,
        nr_seq_pais_w,
        'N',
        'A',
        nm_usuario_p,
        clock_timestamp(),
        nextval('pre_pessoa_juridica_seq'));

      open C01;
      loop
      fetch C01 into
        cd_estabelecimento_w;
      EXIT WHEN NOT FOUND; /* apply on C01 */
        begin
        insert into pre_pessoa_juridica_estab(
          nr_sequencia,
          cd_cgc,
          cd_estabelecimento,
          dt_atualizacao,
          nm_usuario,
          nm_pessoa_contato,
          ds_email,
          dt_atualizacao_nrec,
          nm_usuario_nrec,
          ie_conta_dif_nf,
          nr_seq_pre_pj)
        values (nextval('pre_pessoa_juridica_estab_seq'),
          cd_cnpj_w,
          cd_estabelecimento_w,
          clock_timestamp(),
          nm_usuario_p,
          substr(ds_contato_p,1,255),
          substr(ds_email_p,1,255),
          clock_timestamp(),
          nm_usuario_p,
          'N',
          currval('pre_pessoa_juridica_seq'));
        end;
      end loop;
      close C01;
      end;

    else
      begin
      insert into pessoa_juridica(
        cd_cgc,
        ds_razao_social,
        nm_fantasia,
        cd_cep,
        ds_endereco,
        ds_municipio,
        sg_estado,
        dt_atualizacao,
        nm_usuario,
        nr_telefone,
        nr_fax,
        nr_inscricao_estadual,
        cd_tipo_pessoa,
        nr_seq_pais,
        ie_prod_fabric,
        ie_situacao)
      values ( cd_cnpj_w,
        substr(ds_razao_social_p,1,255),
        substr(nm_fantasia_p,1,80),
        cd_cep_p,
        substr(ds_endereco_p,1,40),
        substr(nm_municipio_p,1,40),
        substr(sg_estado_p,1,2),
        clock_timestamp(),
        nm_usuario_p,
        substr(nr_telefone_p,1,15),
        substr(nr_fax_p,1,15),
        substr(nr_inscricao_estadual_p,1,20),
        cd_tipo_pessoa_w,
        nr_seq_pais_w,
        'N',
        'A');

      open C01;
      loop
      fetch C01 into
        cd_estabelecimento_w;
      EXIT WHEN NOT FOUND; /* apply on C01 */
        begin
        insert into pessoa_juridica_estab(
          nr_sequencia,
          cd_cgc,
          cd_estabelecimento,
          dt_atualizacao,
          nm_usuario,
          nm_pessoa_contato,
          ds_email,
          dt_atualizacao_nrec,
          nm_usuario_nrec,
          ie_conta_dif_nf)
        values ( nextval('pessoa_juridica_estab_seq'),
          cd_cnpj_w,
          cd_estabelecimento_w,
          clock_timestamp(),
          nm_usuario_p,
          substr(ds_contato_p,1,255),
          substr(ds_email_p,1,255),
          clock_timestamp(),
          nm_usuario_p,
          'N');
        end;
      end loop;
      close C01;
      end;
    end if;
  end if;
  end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE receber_fornecedor_integracao ( cd_cnpj_p text, ds_razao_social_p text, nm_fantasia_p text, nr_inscricao_estadual_p text, cd_cep_p text, ds_endereco_p text, nm_municipio_p text, ds_estado_p text, sg_estado_p text, ds_pais_p text, sg_pais_p text, nr_telefone_p text, nr_fax_p text, ds_contato_p text, ds_email_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

