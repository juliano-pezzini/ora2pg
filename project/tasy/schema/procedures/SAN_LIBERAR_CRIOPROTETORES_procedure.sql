-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_liberar_crioprotetores ( nr_seq_congelacao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Liberar o crioprotetor e movimentar o estoque
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------
Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_mov_estoq_w			movimento_estoque.nr_movimento_estoque%type;
cd_local_estoque_w		movimento_estoque.cd_local_estoque%type;
cd_centro_custo_w		movimento_estoque.cd_centro_custo%type;
cd_material_w			movimento_estoque.cd_material%type;
nr_seq_lote_w			san_dados_congelacao.nr_seq_lote%type;
cd_unidade_medida_w		san_dados_congelacao.cd_unidade_med%type;
cd_operacao_estoque_w		san_dados_congelacao.cd_operacao_estoque%type;
qt_material_w			san_dados_congelacao.qt_material%type;


BEGIN
if (nr_seq_congelacao_p IS NOT NULL AND nr_seq_congelacao_p::text <> '') then
	select	max(a.cd_material),
		max(a.nr_seq_lote),
		max(a.cd_unidade_med),
		max(a.cd_operacao_estoque),
		max(a.qt_material)
	into STRICT	cd_material_w,
		nr_seq_lote_w,
		cd_unidade_medida_w,
		cd_operacao_estoque_w,
		qt_material_w
	from	san_dados_congelacao	a
	where	a.nr_sequencia	= nr_seq_congelacao_p;

	update	san_dados_congelacao
	set	nm_usuario_lib	= nm_usuario_p,
		dt_liberacao	= clock_timestamp(),
		dt_atualizacao	= clock_timestamp()
	where	nr_sequencia	= nr_seq_congelacao_p;

		select	coalesce(max(x.cd_local_estoque),0)
		into STRICT    cd_local_estoque_w
		from    setor_atendimento x
		where   x.cd_setor_atendimento	= wheb_usuario_pck.get_cd_setor_atendimento
		and     x.cd_estabelecimento	= wheb_usuario_pck.get_cd_estabelecimento;

		select	coalesce(max(z.cd_centro_custo), 0)
		into STRICT	cd_centro_custo_w
		from	local_estoque z
		where	z.cd_local_estoque	= cd_local_estoque_w;

	if (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') and (coalesce(cd_operacao_estoque_w,0) > 0) and (coalesce(cd_local_estoque_w,0) > 0) then

		select	nextval('movimento_estoque_seq')
		into STRICT	cd_mov_estoq_w
		;

		insert into movimento_estoque(	nr_movimento_estoque,
				cd_estabelecimento,
				cd_local_estoque,
				cd_operacao_estoque,
				cd_acao,
				cd_material,
				cd_unidade_med_mov,
				cd_unidade_medida_estoque,
				cd_setor_atendimento,
				cd_centro_custo,
				qt_movimento,
				qt_estoque,
				ie_origem_documento,
				nm_usuario,
				dt_movimento_estoque,
				dt_mesano_referencia,
				dt_atualizacao,
				ds_observacao)
		values (	cd_mov_estoq_w,
				wheb_usuario_pck.get_cd_estabelecimento,
				cd_local_estoque_w,
				cd_operacao_estoque_w,
				'1',
				cd_material_w,
				cd_unidade_medida_w,
				cd_unidade_medida_w,
				wheb_usuario_pck.get_cd_setor_atendimento,
				cd_centro_custo_w,
				qt_material_w,
				qt_material_w,
				'10',
				nm_usuario_p,
				clock_timestamp(),
				clock_timestamp(),
				clock_timestamp(),
				'san_liberar_crioprotetores - ' || wheb_mensagem_pck.get_texto(795491) || ' ' || wheb_mensagem_pck.get_texto(795489) || ': ' || nr_seq_congelacao_p);

	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_liberar_crioprotetores ( nr_seq_congelacao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

