-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_leite_protocolo (nr_prescricao_p bigint, cd_protocolo_p bigint, nr_seq_protocolo_p bigint, nm_usuario_p text, cd_perfil_p bigint) AS $body$
DECLARE


cd_intervalo_w		varchar(7);
ie_se_necessario_w	varchar(1);
hr_prim_horario_w	varchar(5);
hr_prim_hor_prescr_w	varchar(5);
ie_via_aplicacao_w	varchar(15);
qt_volume_oral_w	integer;
qt_volume_sonda_w	integer;
nr_seq_disp_succao_w	bigint;
nr_seq_leite_deriv_w	bigint;
qt_volume_total_w	bigint;
ds_horarios_w		varchar(255);
ds_horarios_ww		varchar(255);
dt_prim_hor_prescr_w	timestamp;
dt_inicio_prescr_w	timestamp;
nr_horas_validade_w	integer;
nr_ocorrencia_w		bigint;
cd_material_w		bigint;
nr_seq_prot_leite_w	bigint;
nr_seq_prod_w		bigint;
nr_seq_prod_adic_w	bigint;
nr_agrupamento_w	double precision;
nr_sequencia_w		bigint;
nr_sequencia_dil_w	bigint;
cd_diluente_w		bigint;
qt_porcentagem_w	prescr_material.qt_porcentagem%type;
cd_unidade_medida_w	varchar(30);
cd_unidade_med_dil_w	varchar(30);
ds_erro_w		varchar(255);

c01 CURSOR FOR
SELECT	cd_intervalo,
	coalesce(ie_se_necessario,'N'),
	hr_prim_horario,
	ie_via_aplicacao,
	qt_volume_oral,
	qt_volume_sonda,
	nr_seq_disp_succao,
	nr_sequencia
from	protocolo_medic_leite
where	cd_protocolo		= cd_protocolo_p
and	nr_seq_protocolo	= nr_seq_protocolo_p;

c02 CURSOR FOR
SELECT	cd_material,
	nr_sequencia
from	protocolo_medic_produto
where	nr_seq_prot_leite	= nr_seq_prot_leite_w;

c03 CURSOR FOR
SELECT	cd_material,
	qt_porcentagem,
	cd_unidade_medida_dose
from	protocolo_medic_prod_adic
where	nr_seq_produto	=	nr_seq_prod_w;

c04 CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_leite_deriv
from	prescr_material
where	nr_prescricao	= nr_prescricao_p
and	ie_agrupador	= 16
and	nr_seq_protocolo = nr_seq_protocolo_p
and	cd_protocolo	= cd_protocolo_p;


BEGIN

select	dt_inicio_prescr,
	coalesce(nr_horas_validade,24),
	to_char(dt_primeiro_horario,'hh24:mi')
into STRICT	dt_inicio_prescr_w,
	nr_horas_validade_w,
	hr_prim_hor_prescr_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

open C01;
loop
fetch C01 into	
	cd_intervalo_w,
	ie_se_necessario_w,
	hr_prim_horario_w,
	ie_via_aplicacao_w,
	qt_volume_oral_w,
	qt_volume_sonda_w,
	nr_seq_disp_succao_w,
	nr_seq_prot_leite_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
		if (coalesce(hr_prim_horario_w,'  :  ') = '  :  ') then
			hr_prim_horario_w	:= null;
		end if;
	
		dt_prim_hor_prescr_w	:= trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_inicio_prescr_w, coalesce(hr_prim_horario_w, hr_prim_hor_prescr_w,'00:00')), 'mi');

		if (dt_inicio_prescr_w	> dt_prim_hor_prescr_w) then
			dt_prim_hor_prescr_w	:= dt_prim_hor_prescr_w + 1;
		end if;	
		
		qt_volume_total_w	:= coalesce(qt_volume_oral_w,0)	+ coalesce(qt_volume_sonda_w,0);

		SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, dt_prim_hor_prescr_w, dt_prim_hor_prescr_w, nr_horas_validade_w, null, 0, 0, nr_ocorrencia_w, ds_horarios_w, ds_horarios_ww, 'N', null, null, null, null, null) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios_ww;

		ds_horarios_w	:= eliminar_horarios_vigencia(ds_horarios_w, cd_intervalo_w, dt_prim_hor_prescr_w, dt_inicio_prescr_w, 0, 0, nr_prescricao_p);			
					    
		select	nextval('prescr_leite_deriv_seq')
		into STRICT	nr_seq_leite_deriv_w
		;
		
		insert into	prescr_leite_deriv(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_prescricao,
							cd_intervalo,
							ie_via_aplicacao,
							qt_volume_oral,
							qt_volume_sonda,
							qt_volume_total,
							nr_seq_disp_succao,
							ie_se_necessario,
							ds_horarios,
							hr_prim_horario)
		values (nr_seq_leite_deriv_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_prescricao_p,
			cd_intervalo_w,
			ie_via_aplicacao_w,
			qt_volume_oral_w,
			qt_volume_sonda_w,
			qt_volume_total_w,
			nr_seq_disp_succao_w,
			ie_se_necessario_w,
			ds_horarios_w,
			hr_prim_horario_w);					
		
		open C02;
		loop
		fetch C02 into	
			cd_material_w,
			nr_seq_prod_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			
			select	max(cd_unidade_medida_consumo)
			into STRICT	cd_unidade_medida_w
			from	material
			where	cd_material	= cd_material_w;
			
			select	coalesce(max(nr_agrupamento),0) + 1
			into STRICT	nr_agrupamento_w
			from	prescr_material
			where	nr_prescricao		= nr_prescricao_p
			and	nr_seq_leite_deriv	= nr_seq_leite_deriv_w
			and	ie_agrupador		= 16;
			
			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_sequencia_w
			from	prescr_material
			where	nr_prescricao	= nr_prescricao_p;
			
			insert	into prescr_material(nr_sequencia,
							nr_prescricao,
							cd_material,
							cd_unidade_medida_dose,
							cd_unidade_medida,
							dt_atualizacao,
							ie_origem_inf,
							nm_usuario,
							ie_agrupador,
							qt_material,
							qt_unitaria,
							nr_seq_leite_deriv,
							nr_agrupamento,
							nr_seq_protocolo,
							cd_protocolo,
							ie_via_leite)
					values (nr_sequencia_w,
							nr_prescricao_p,
							cd_material_w,
							cd_unidade_medida_w,
							cd_unidade_medida_w,					
							clock_timestamp(),
							'1',
							nm_usuario_p,
							16,
							0,
							0,
							nr_seq_leite_deriv_w,
							nr_agrupamento_w,
							nr_seq_protocolo_p,
							cd_protocolo_p,
							ie_via_aplicacao_w);
							
			open C03;
			loop
			fetch C03 into	
				cd_diluente_w,
				qt_porcentagem_w,
				cd_unidade_med_dil_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin

				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_sequencia_dil_w
				from	prescr_material
				where	nr_prescricao	= nr_prescricao_p;
				
				insert	into prescr_material(nr_sequencia,
								nr_prescricao,
								cd_material,
								cd_unidade_medida_dose,
								cd_unidade_medida,
								dt_atualizacao,
								ie_origem_inf,
								nm_usuario,
								ie_agrupador,
								qt_material,
								qt_unitaria,
								nr_seq_leite_deriv,
								nr_agrupamento,
								nr_sequencia_diluicao,
								nr_seq_protocolo,
								cd_protocolo,
								qt_porcentagem)
						values (nr_sequencia_dil_w,
								nr_prescricao_p,
								cd_diluente_w,
								cd_unidade_med_dil_w,
								cd_unidade_med_dil_w,
								clock_timestamp(),
								'1',
								nm_usuario_p,
								17,
								0,
								0,
								nr_seq_leite_deriv_w,
								nr_agrupamento_w,
								nr_sequencia_w,
								nr_seq_protocolo_p,
								cd_protocolo_p,
								qt_porcentagem_w);			
				
				end;
			end loop;
			close C03;				
			
			end;
		end loop;
		close C02;
		CALL atualiza_produto_lactario(nr_seq_leite_deriv_w, nm_usuario_p, cd_perfil_p);	
	end if;
	end;
end loop;
close C01;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

open C04;
loop
fetch C04 into	
	nr_sequencia_w,
	nr_seq_leite_deriv_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin
	ds_erro_w := consistir_prod_leites_deriv(nr_prescricao_p, nr_sequencia_w, nr_seq_leite_deriv_w, nm_usuario_p, cd_perfil_p, ds_erro_w);	
	end;
end loop;
close C04;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_leite_protocolo (nr_prescricao_p bigint, cd_protocolo_p bigint, nr_seq_protocolo_p bigint, nm_usuario_p text, cd_perfil_p bigint) FROM PUBLIC;

