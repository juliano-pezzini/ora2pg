-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_conta_paciente_guia ( nr_interno_conta_p bigint, ie_status_acerto_p bigint) AS $body$
DECLARE


dt_atualizacao_w          		timestamp       		:= clock_timestamp();
nr_doc_convenio_w		varchar(20)	:= 'X';
vl_total_conta_w       		double precision	:= 0;
vl_total_conta_sem_imp_w	double precision	:= 0;
ie_situacao_guia_w			varchar(1);
dt_acerto_conta_w			timestamp;
nr_atendimento_w			bigint;
ie_tipo_guia_w			varchar(2);
ie_tipo_convenio_w			bigint;
ie_doc_retorno_w			varchar(15);
cd_convenio_w			integer;
vl_participante_w			double precision;
qt_registro_w			bigint := 0;
nr_interno_conta_w		bigint;
cd_autorizacao_w		varchar(20);
ds_nls_territory_w		varchar(64);
cd_pais_w			bigint := philips_param_pck.get_cd_pais;
ie_mexico_w			varchar(2):= 'N';
ds_nao_informado_w		varchar(20);
c01 CURSOR FOR
	SELECT	z.nr_atendimento,
		min(z.dt_conta),
		z.nr_doc_convenio,
		max(z.ie_tipo_guia),
		coalesce(sum(z.vl_item),0) vl_item,
        max(z.vl_item_sem_imposto) vl_item_sem_imposto,
		sum(z.vl_participante) vl_participante
	from
	(
	SELECT 	x.nr_atendimento,
		min(coalesce(a.dt_acerto_conta,a.dt_conta)) dt_conta,
		nr_doc_convenio_w nr_doc_convenio,
		max(a.ie_tipo_guia) ie_tipo_guia,
		coalesce(sum(a.vl_item),0) vl_item,
        max((select get_guia_value_without_taxes(a.nr_atendimento, nr_interno_conta_p, ie_mexico_w, ie_tipo_convenio_w,
             nr_doc_convenio_w, 'N', ds_nao_informado_w, nr_doc_convenio_w) )) vl_item_sem_imposto,
		0 vl_participante
	from	conta_paciente_consiste_v a, 
		conta_paciente x
	where	a.nr_interno_conta	= nr_interno_conta_p
	and	x.nr_interno_conta	= nr_interno_conta_p
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	(((ie_mexico_w = 'S') and ((coalesce(nr_seq_proc_pacote::text, '') = '') or (a.ie_proc_mat = 1 AND nr_sequencia = nr_seq_proc_pacote))) or
		((ie_mexico_w = 'N') and ((coalesce(nr_seq_proc_pacote::text, '') = '') or (nr_sequencia <> nr_seq_proc_pacote))))
	and	((ie_tipo_convenio_w <> 3) or (a.ie_proc_mat = 1))
	and	nr_doc_convenio_w <> 'X'
	and	(coalesce(a.dt_acerto_conta,a.dt_conta) IS NOT NULL AND (coalesce(a.dt_acerto_conta,a.dt_conta))::text <> '')
	group 	by x.nr_atendimento, 
		nr_doc_convenio_w
	
union

	select 	x.nr_atendimento,
		min(coalesce(a.dt_acerto_conta,a.dt_conta)) dt_conta,
		coalesce(a.nr_doc_convenio,coalesce(to_char(x.nr_conta_convenio),substr(ds_nao_informado_w,1,255))) nr_doc_convenio,
		max(a.ie_tipo_guia) ie_tipo_guia,
		coalesce(sum(a.vl_item),0) vl_item,
        max((select get_guia_value_without_taxes(a.nr_atendimento, nr_interno_conta_p, ie_mexico_w, ie_tipo_convenio_w, 
        coalesce(a.nr_doc_convenio,to_char(x.nr_conta_convenio),substr(ds_nao_informado_w,1,255)),'N', ds_nao_informado_w) )) vl_item_sem_imposto,
		0 vl_participante 
	from	conta_paciente_consiste_v a, 
		conta_paciente x
	where	a.nr_interno_conta 	= nr_interno_conta_p
	and	x.nr_interno_conta 	= nr_interno_conta_p
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	(((ie_mexico_w = 'S') and ((coalesce(nr_seq_proc_pacote::text, '') = '') or (a.ie_proc_mat = 1 AND nr_sequencia = nr_seq_proc_pacote))) or
		((ie_mexico_w = 'N') and ((coalesce(nr_seq_proc_pacote::text, '') = '') or (nr_sequencia <> nr_seq_proc_pacote))))
	and	nr_doc_convenio_w 	= 'X'
	and	(coalesce(a.dt_acerto_conta,a.dt_conta) IS NOT NULL AND (coalesce(a.dt_acerto_conta,a.dt_conta))::text <> '')
	group 	by x.nr_atendimento, 
		coalesce(a.nr_doc_convenio,coalesce(to_char(x.nr_conta_convenio),substr(ds_nao_informado_w,1,255)))
	
union

	select	a.nr_atendimento,
		min(coalesce(b.dt_acerto_conta, b.dt_conta)) dt_conta,
		c.nr_doc_honor_conv nr_doc_convenio,
		max(b.ie_tipo_guia) ie_tipo_guia,
		0 vl_item,
        0 vl_item_sem_imposto,
		sum(c.vl_participante) vl_participante
	from	procedimento_participante c,
		procedimento_paciente b,
		conta_paciente a
	where	a.nr_interno_conta	= nr_interno_conta_p
	and	a.nr_interno_conta	= b.nr_interno_conta
	and	b.nr_sequencia		= c.nr_sequencia
	and	coalesce(b.cd_motivo_exc_conta::text, '') = ''
	and	(c.nr_doc_honor_conv IS NOT NULL AND c.nr_doc_honor_conv::text <> '')
	and	c.nr_doc_honor_conv	<> b.nr_doc_convenio
	and	((coalesce(b.nr_seq_proc_pacote::text, '') = '') or (b.nr_sequencia <> b.nr_seq_proc_pacote))
	group	by c.nr_doc_honor_conv,
		a.nr_atendimento) z
	group by z.nr_atendimento,
		z.nr_doc_convenio;
		
		
c03 CURSOR FOR
	SELECT 	cd_autorizacao,
		nr_interno_conta
	from 	conta_paciente_guia
	where 	nr_interno_conta = nr_interno_conta_p;



BEGIN


ds_nao_informado_w := substr(obter_desc_expressao(778770),1,20);



begin
	select	substr(value,1,64)
	into STRICT	ds_nls_territory_w
	from	v$nls_parameters
	where	parameter = 'NLS_TERRITORY';
exception
when others then
	ds_nls_territory_w:='BRAZIL';	
end;

if (ds_nls_territory_w = 'MEXICO') or (cd_pais_w = 2) then
	ie_mexico_w := 'S';
else	
	ie_mexico_w := 'N';
end if;
select	coalesce(max(ie_tipo_convenio),9),
	coalesce(max(obter_valor_conv_estab(b.cd_convenio, a.cd_estabelecimento, 'IE_DOC_RETORNO')),'GUIA'),
	coalesce(max(nr_atendimento),null),
	coalesce(max(b.cd_convenio),null)
into STRICT	ie_tipo_convenio_w,
	ie_doc_retorno_w,
	nr_atendimento_w,
	cd_convenio_w
from	convenio b,
	conta_paciente a
where	nr_interno_conta		= nr_interno_conta_p
and	a.cd_convenio_parametro 	= b.cd_convenio;

if (ie_doc_retorno_w = 'GUIAATEND') then
	select	coalesce(max(nr_doc_convenio),'X')
	into STRICT	nr_doc_convenio_w
	from	atend_categoria_convenio
	where	nr_atendimento	= nr_atendimento_w
	and	cd_convenio	= cd_convenio_w
	and	nr_seq_interno	= (SELECT	min(nr_seq_interno)
				   from 	atend_categoria_convenio
				   where 	nr_atendimento	= nr_atendimento_w
				   and 		cd_convenio	= cd_convenio_w);
end if;

if (coalesce(cd_pais_w::text, '') = '') then
	cd_pais_w := 1;
end if;

open C03;
loop
fetch C03 into	
	cd_autorizacao_w,
	nr_interno_conta_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	
	begin	
	delete 	from conta_paciente_guia
	where	cd_autorizacao = cd_autorizacao_w
	and 	nr_interno_conta = nr_interno_conta_w;
	exception
	when others then
		dt_atualizacao_w := dt_atualizacao_w;
	end;
		
end loop;
close C03;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

open c01;
loop
fetch c01 into
	nr_atendimento_w,
	dt_acerto_conta_w,
	nr_doc_convenio_w,
	ie_tipo_guia_w,
	vl_total_conta_w,
    vl_total_conta_sem_imp_w,
	vl_participante_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

    if (philips_param_pck.get_cd_pais = 15 or ds_nls_territory_w = 'BOLIVIA') then
        vl_total_conta_w := vl_total_conta_sem_imp_w;
    end if;

	if (ie_status_acerto_p <> 2) then
		vl_total_conta_w 	:= 0;
		vl_participante_w	:= 0;
	end if;
	if (ie_status_acerto_p = 2) then
		ie_situacao_guia_w := 'E';
	else
		ie_situacao_guia_w := 'P';
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from 	conta_paciente_guia
	where	nr_interno_conta 	= nr_interno_conta_p
	and	cd_autorizacao		= nr_doc_convenio_w; -- OS 269551
	
	if (qt_registro_w = 0) then

		insert into conta_paciente_guia(nr_atendimento,
				dt_acerto_conta,
				cd_autorizacao,
				nr_seq_envio,
				ie_situacao_guia,
				vl_guia,
				dt_atualizacao,
				nm_usuario,
				vl_convenio,
				dt_convenio,
				nm_usuario_glosa,
				nr_lote_contabil,
				nr_interno_conta,
				ie_tipo_guia,
				vl_participante)             
		values (nr_atendimento_w,
				dt_acerto_conta_w,
				nr_doc_convenio_w,
				0,
				ie_situacao_guia_w,
				vl_total_conta_w,
				dt_atualizacao_w,
				'Tasy',
				null,
				null,
				null,
				0,
				nr_interno_conta_p,
				ie_tipo_guia_w,
				vl_participante_w);
	end if;
	
end loop;
close c01;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_conta_paciente_guia ( nr_interno_conta_p bigint, ie_status_acerto_p bigint) FROM PUBLIC;

