-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_inserir_contas_comp ( nr_seq_competencia_p bigint, nr_sequencia_p bigint, ie_tipo_movimentacao_p text, ie_tipo_sequencia_p text) AS $body$
DECLARE


/*
	ie_tipo_sequencia_p can be ABI or AIH. Identify the level of the sequence informed, to get the information accordingly
*/
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
nm_usuario_w			usuario.nm_usuario%type;
ie_existe_registro_w		varchar(1);

c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		coalesce(a.vl_deferido, 0) vl_deferido,
		coalesce(a.vl_ressarcir,0) vl_ressarcir
	from	pls_processo_conta a
	where	a.nr_sequencia = nr_sequencia_p
	and	coalesce(ie_tipo_sequencia_p, 'AIH') = 'AIH'
	
union all

	SELECT	a.nr_sequencia,
		coalesce(a.vl_deferido, 0) vl_deferido,
		coalesce(a.vl_ressarcir,0) vl_ressarcir
	from	pls_processo_conta a,
		pls_processo b
	where	a.nr_seq_processo = b.nr_sequencia
	and	b.nr_sequencia = nr_sequencia_p
	and	coalesce(ie_tipo_sequencia_p, 'AIH') = 'ABI';

vet_c01 c01%rowtype;


BEGIN


nm_usuario_w		:= wheb_usuario_pck.get_nm_usuario;
cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;


open c01;
loop
fetch c01 into
	vet_c01;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
		select 	coalesce(max('S'), 'N')
		into STRICT	ie_existe_registro_w
		from	pls_processo_contas_comp
		where	nr_seq_competencia 	= nr_seq_competencia_p
		and	ie_tipo_movimentacao 	= ie_tipo_movimentacao_p
		and	nr_seq_conta 		= vet_c01.nr_sequencia;

		if (ie_existe_registro_w = 'N') then
			insert into pls_processo_contas_comp(	nr_sequencia,
								nm_usuario,
								nm_usuario_nrec,
								dt_atualizacao,
								dt_atualizacao_nrec,
								cd_estabelecimento,
								vl_ajuste,
								vl_deferido,
								vl_provisao,
								vl_ressarcir,
								ie_tipo_movimentacao,
								cd_conta_cred_ajuste, cd_classif_cred_ajuste,
								cd_conta_deb_ajuste, cd_classif_deb_ajuste,
								nr_seq_esquema_ajuste, cd_historico_ajuste,
								cd_conta_cred_prov, cd_classif_cred_prov,
								cd_conta_deb_prov, cd_classif_deb_prov,
								nr_seq_esquema_prov, cd_historico_prov,
								nr_seq_competencia,
								nr_seq_conta) 
							values (nextval('pls_processo_contas_comp_seq'),
								nm_usuario_w,
								nm_usuario_w,
								clock_timestamp(),
								clock_timestamp(),
								cd_estabelecimento_w,
								0,
								vet_c01.vl_deferido,
								0,
								vet_c01.vl_ressarcir,
								ie_tipo_movimentacao_p,
								null, null,
								null, null,
								null, null,
								null, null,
								null, null,
								null, null,
								nr_seq_competencia_p,
								vet_c01.nr_sequencia);
		elsif (ie_existe_registro_w = 'S' and coalesce(ie_tipo_sequencia_p, 'AIH') = 'AIH') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1096267);
		end if;
	end;
end loop;
close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_inserir_contas_comp ( nr_seq_competencia_p bigint, nr_sequencia_p bigint, ie_tipo_movimentacao_p text, ie_tipo_sequencia_p text) FROM PUBLIC;

