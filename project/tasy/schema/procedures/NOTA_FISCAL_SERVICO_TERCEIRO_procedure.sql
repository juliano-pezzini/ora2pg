-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE nota_fiscal_servico_terceiro (cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, nm_usuario_p text) AS $body$
DECLARE

 
contador_w			bigint := 0;
qt_registros_W			bigint;
ds_arquivo_ww			varchar(3000);
ds_registro_w			varchar(20);
nr_sequencia_w			varchar(10);	
cd_conta_analitica_w		varchar(28);
cd_participante_w		varchar(15);
ie_tipo_documento_w		varchar(3);
nr_nota_fiscal_w		varchar(255);
dt_emissao_documento_w		varchar(8);
vl_total_nota_w			varchar(17);
cd_item_servico_w		varchar(20);
ds_item_servico_w		varchar(45);
vl_total_item_nf_w		varchar(17);
vl_material_w			varchar(17);
vl_base_inss_w			varchar(17);
vl_valor_inss_w			varchar(17);
cd_estabelecimento_w		varchar(10);

c01 CURSOR FOR 
SELECT	n.nr_sequencia										nr_sequencia , 
	lpad(coalesce(to_char(i.cd_conta_contabil),' '),28,' ')										cd_conta_analitica, 
	lpad(coalesce(substr(CASE WHEN CASE WHEN n.ie_tipo_nota='EF' THEN 'E' WHEN n.ie_tipo_nota='EN' THEN 'E' WHEN n.ie_tipo_nota='EP' THEN 'E' WHEN n.ie_tipo_nota='SD' THEN 'S' WHEN n.ie_tipo_nota='SE' THEN 'S' WHEN n.ie_tipo_nota='SF' THEN 'S' WHEN n.ie_tipo_nota='ST' THEN 'S' END ='E' THEN  	n.cd_cgc_emitente WHEN CASE WHEN n.ie_tipo_nota='EF' THEN 'E' WHEN n.ie_tipo_nota='EN' THEN 'E' WHEN n.ie_tipo_nota='EP' THEN 'E' WHEN n.ie_tipo_nota='SD' THEN 'S' WHEN n.ie_tipo_nota='SE' THEN 'S' WHEN n.ie_tipo_nota='SF' THEN 'S' WHEN n.ie_tipo_nota='ST' THEN 'S' END ='S' THEN CASE WHEN coalesce(n.cd_cgc::text, '') = '' THEN obter_cpf_pessoa_fisica(n.cd_pessoa_fisica)  ELSE n.cd_cgc END  END ,1,14),' '),14,' ') cd_participante, 
	lpad('NF ',3,' ')										ie_tipo_documento, 
	lpad(n.nr_nota_fiscal,12,' ')									nr_nota_fiscal, 
	lpad(substr(to_char(n.dt_emissao,'ddmmyyyy'),1,8),8,' ')							dt_emissao_documento, 
	lpad(coalesce(replace(replace(replace(to_char(coalesce(n.vl_total_nota,0),'999,999,999,990.99'),',',''),'.',''),' ',''),' '),17,' ')	vl_total_nota, 
	lpad(coalesce(substr(CASE WHEN coalesce(i.cd_material::text, '') = '' THEN obter_dados_grupo_servico_item(obter_item_servico_proced(obter_procedimento_nfse(n.nr_sequencia,'P'),obter_procedimento_nfse(n.nr_sequencia,'O')),'CD')  ELSE i.cd_material END ,1,20),' '),20,' ') cd_item_servico, 
	rpad(coalesce(CASE WHEN coalesce(i.cd_material::text, '') = '' THEN obter_dados_grupo_servico_item(obter_item_servico_proced(obter_procedimento_nfse(n.nr_sequencia,'P'),obter_procedimento_nfse(n.nr_sequencia,'O')),'DS')  ELSE obter_desc_material(i.cd_material) END ,' '),45, ' ') ds_item_servico, 
	lpad(coalesce(replace(replace(replace(to_char(coalesce(i.vl_total_item_nf,0),'999,999,999,990.99'),',',''),'.',''),' ',''),' '),17,' ')	vl_unitario_item_nf, 
	lpad(coalesce(replace(replace(replace(to_char(0,'999,999,999,990.99'),',',''),'.',''),' ',''),' '),17,' ') vl_material,		 
	lpad(coalesce(replace(replace(replace(to_char(coalesce(obter_valor_tipo_tributo_nota(n.nr_sequencia, 'B', 'INSS'),0),'999,999,999,990.00'),',',''),'.',''),' ',''),' '),17,' ')vl_base_inss, 
	lpad(coalesce(replace(replace(replace(to_char(coalesce(obter_valor_tipo_tributo_nota(n.nr_sequencia, 'V', 'INSS'),0),'999,999,999,990.00'),',',''),'.',''),' ',''),' '),17,' ')vl_valor_inss, 
	n.cd_estabelecimento		cd_estabelecimento 
from	nota_fiscal n, 
	nota_fiscal_item i, 
	operacao_nota o 
where	i.nr_sequencia = n.nr_sequencia 
and	o.cd_operacao_nf = n.cd_operacao_nf 
and	o.ie_servico = 'S' 
and	n.ie_tipo_nota in ('EF','EN') 
and	n.ie_situacao not in ('3','2')	 
and	n.cd_estabelecimento = cd_estabelecimento_p 
and	n.dt_emissao between to_date(to_char(dt_inicio_p,'dd/mm/yyyy'),'dd/mm/yyyy') and fim_dia(to_date(to_char(dt_fim_p,'dd/mm/yyyy'),'dd/mm/yyyy')) 
order by n.nr_sequencia;


BEGIN 
 
open c01;
loop 
fetch c01 into 
	nr_sequencia_w, 
	cd_conta_analitica_w, 
	cd_participante_w, 
	ie_tipo_documento_w, 
	nr_nota_fiscal_w, 
	dt_emissao_documento_w, 
	vl_total_nota_w, 
	cd_item_servico_w, 
	ds_item_servico_w, 
	vl_total_item_nf_w, 
	vl_material_w, 
	vl_base_inss_w, 
	vl_valor_inss_w, 
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	 
	contador_w := contador_w + 1;
	 
	ds_arquivo_ww	:=	 
				cd_conta_analitica_w	|| 
				cd_participante_w	|| 
				ie_tipo_documento_w	|| 
				nr_nota_fiscal_w	|| 
				dt_emissao_documento_w	|| 
				vl_total_nota_w		|| 
				cd_item_servico_w	|| 
				ds_item_servico_w	|| 
				vl_total_item_nf_w	|| 
				vl_material_w		|| 
				vl_base_inss_w		|| 
				vl_valor_inss_w;				
		 
insert into w_inss_direp_arquivo( nr_sequencia, 
				cd_estabelecimento, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				ds_arquivo_w) 
		values (nextval('w_inss_direp_arquivo_seq'), 
				cd_estabelecimento_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				ds_arquivo_ww);
	 
	 
	if (mod(contador_w,100) = 0) then 
		commit;
	end if;			
 
	end;
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nota_fiscal_servico_terceiro (cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, nm_usuario_p text) FROM PUBLIC;

