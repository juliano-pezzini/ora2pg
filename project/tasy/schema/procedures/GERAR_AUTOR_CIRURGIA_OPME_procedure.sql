-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_autor_cirurgia_opme ( nr_seq_agenda_p bigint, cd_cgc_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ie_gerar_autor_cirurgia_p text) AS $body$
DECLARE

 
cd_material_w		bigint;
qt_material_w		double precision;
qt_registro_w		integer;
nr_seq_autor_cir_w		bigint;
nr_seq_mat_autor_cir_w 	bigint;
nr_atendimento_w		bigint;
qt_autor_agenda_w		bigint;
qt_reg_material_w		integer;
cd_cgc_w		varchar(14);
cd_cgc_fornec_opme_w 	varchar(14);
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
ie_gerar_proc_autor_w	varchar(1);
hr_inicio_w		timestamp;
ie_gerar_autorizacao_w	varchar(2);
ie_gerar_sem_opme_w	varchar(255);
ie_regra_w		varchar(2)	:= '';
cd_setor_atendimento_w	integer	:= null;
cd_convenio_w		integer	:= null;
cd_plano_w		varchar(10);
ds_retorno_w		varchar(255);
ie_bloqueio_agenda_w	varchar(1);
nr_seq_regra_retorno_w	bigint;
ds_observacao_w		varchar(4000);
ds_observacao_regra_w	varchar(4000);
pr_adicional_w		double precision;
ie_reducao_acrescimo_w	varchar(1);
cd_kit_material_w	bigint;
nr_seq_pac_opme_w	bigint;
ie_obter_preco_convenio_w	varchar(2);
ie_valor_conta_w		varchar(10);
ie_estagio_autor_w		varchar(2);
ie_autor_mat_conta_w	varchar(1);
cd_categoria_w		varchar(10);
cd_material_conta_w	bigint;
nr_seq_agrup_w		bigint;
ie_fornec_mat_autor_esp_w	parametro_faturamento.ie_fornec_mat_autor_esp%type;
nr_seq_marca_w		material_marca.nr_sequencia%type;
cd_pessoa_fisica_w	autorizacao_cirurgia.cd_pessoa_fisica%type;

 
c01 CURSOR FOR 
SELECT	a.nr_sequencia, 
	a.cd_material, 
	a.qt_material, 
	a.cd_cgc, 
	b.cd_setor_atendimento, 
	b.nr_atendimento, 
	b.cd_convenio, 
	b.cd_plano, 
	substr(a.ds_observacao,1,4000), 
	c.cd_kit_material, 
	b.cd_categoria, 
	a.nr_seq_agrup, 
	a.nr_seq_marca 
FROM	material_estab c, 
	agenda_paciente b, 
	agenda_pac_opme a 
WHERE	a.cd_material		= c.cd_material 
and	c.cd_estabelecimento	= cd_estabelecimento_p 
and	a.nr_seq_agenda		= nr_seq_agenda_p 
AND	b.nr_sequencia 		= a.nr_seq_agenda 
AND	coalesce(a.ie_origem_inf,'I')	= 'I' 
AND	(nr_seq_autor_cir_w IS NOT NULL AND nr_seq_autor_cir_w::text <> '') 
AND (a.cd_cgc = cd_cgc_p OR 
	 cd_cgc_p = '0');

c02 CURSOR FOR 
SELECT	a.cd_cgc 
from	agenda_pac_opme b, 
	agenda_pac_opme_fornec a 
where	a.nr_seq_opme			= b.nr_sequencia 
and	b.nr_seq_agenda			= nr_seq_agenda_p 
and	b.cd_material			= cd_material_w 
and 	(a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '') 

union all
 
SELECT	b.cd_cgc 
from 	agenda_pac_opme b 
where 	b.nr_seq_agenda			= nr_seq_agenda_p 
and 	b.cd_material			= cd_material_w 
and 	(b.cd_cgc IS NOT NULL AND b.cd_cgc::text <> '') 
group by cd_cgc;

c04 CURSOR FOR 
SELECT	a.cd_material, 
	a.qt_material 
from	componente_kit a 
where	a.cd_kit_material	= cd_kit_material_w 
and	(cd_kit_material_w IS NOT NULL AND cd_kit_material_w::text <> '') 

union all
 
SELECT	a.cd_material, 
	a.qt_material 
from	agenda_pac_opme a 
where	a.nr_sequencia	= nr_seq_pac_opme_w 
and	coalesce(cd_kit_material_w::text, '') = '';


BEGIN 
select	coalesce(max(Obter_Valor_Param_Usuario(871, 159, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N'), 
	coalesce(max(Obter_Valor_Param_Usuario(871, 267, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N') 
into STRICT	ie_gerar_proc_autor_w, 
	ie_gerar_sem_opme_w
;
 
select 	coalesce(max(ie_estagio_autor),'1'), 
	coalesce(max(ie_fornec_mat_autor_esp),'N') 
into STRICT 	ie_estagio_autor_w, 
	ie_fornec_mat_autor_esp_w 
from 	parametro_faturamento 
where 	cd_estabelecimento	= cd_estabelecimento_p;
 
select	count(*) 
into STRICT	qt_registro_w 
from	agenda_pac_opme a 
where	a.nr_seq_agenda		= nr_seq_agenda_p 
and	coalesce(cd_cgc_p, cd_cgc)	= cd_cgc_p 
and	not exists (SELECT	1 
			from	autorizacao_cirurgia y, 
				material_autor_cirurgia x 
			where	x.nr_seq_autorizacao	= y.nr_sequencia 
			and	y.nr_seq_agenda		= a.nr_seq_agenda 
			and	x.cd_material		= a.cd_material);
 
ie_obter_preco_convenio_w := Obter_Param_Usuario(3006, 14, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_obter_preco_convenio_w);
 
if (qt_registro_w > 0) or (ie_gerar_sem_opme_w = 'S') then 
 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_autor_cir_w 
	from	autorizacao_cirurgia 
	where	nr_seq_agenda	= nr_seq_agenda_p 
	and	coalesce(dt_liberacao::text, '') = '' 
	and	coalesce(dt_autorizacao::text, '') = '';
 
	if (coalesce(nr_seq_autor_cir_w::text, '') = '') then 
 
		select	max(nr_atendimento), 
			max(cd_procedimento), 
			max(ie_origem_proced), 
			max(hr_inicio), 
			max(cd_pessoa_fisica) 
		into STRICT	nr_atendimento_w, 
			cd_procedimento_w, 
			ie_origem_proced_w, 
			hr_inicio_w, 
			cd_pessoa_fisica_w 
		from	agenda_paciente 
		where	nr_sequencia	= nr_seq_agenda_p;
				 
		select	nextval('autorizacao_cirurgia_seq') 
		into STRICT	nr_seq_autor_cir_w 
		;
		 
		insert	into	autorizacao_cirurgia(nr_sequencia, 
			nm_usuario, 
			dt_atualizacao, 
			dt_pedido, 
			nm_usuario_pedido, 
			nr_seq_agenda, 
			nr_atendimento, 
			cd_estabelecimento, 
			cd_procedimento, 
			ie_estagio_autor, 
			ie_origem_proced, 
			dt_previsao, 
			cd_pessoa_fisica) 
		values (nr_seq_autor_cir_w, 
			nm_usuario_p, 
			clock_timestamp(), 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_agenda_p, 
			nr_atendimento_w, 
			cd_estabelecimento_p, 
			CASE WHEN ie_gerar_proc_autor_w='N' THEN null  ELSE cd_procedimento_w END , 
			ie_estagio_autor_w, 
			CASE WHEN ie_gerar_proc_autor_w='N' THEN null  ELSE ie_origem_proced_w END , 
			hr_inicio_w, 
			cd_pessoa_fisica_w);
	end if;
 
	open c01;
	loop 
	fetch c01 into 
		nr_Seq_pac_opme_w, 
		cd_material_w, 
		qt_material_w, 
		cd_cgc_w, 
		cd_setor_atendimento_w, 
		nr_atendimento_w, 
		cd_convenio_w, 
		cd_plano_w, 
		ds_observacao_w, 
		cd_kit_material_w, 
		cd_categoria_w, 
		nr_seq_agrup_w, 
		nr_seq_marca_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
 
		select 	coalesce(max(IE_VL_CONTA_AUTOR), 'N'), 
			coalesce(max(ie_autor_mat_conta),'N') 
		into STRICT 	ie_valor_conta_w, 
			ie_autor_mat_conta_w 
		from 	convenio_estabelecimento 
		where	cd_convenio 		= cd_convenio_w 
		and 	cd_estabelecimento	= cd_estabelecimento_p;
 
		open c04;
		loop 
		fetch c04 into 
			cd_material_w, 
			qt_material_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			 
			ie_gerar_autorizacao_w	:= 'S';
 
			if (ie_autor_mat_conta_w = 'S') and (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then 
				cd_material_conta_w	:= obter_material_conta(cd_estabelecimento_p, 
										cd_convenio_w, 
										(cd_categoria_w)::numeric , 
										cd_material_w, 
										cd_material_w, 
										cd_material_w, 
										cd_plano_w, 
										cd_setor_atendimento_w, 
										clock_timestamp(), 
										0, 
										0);
				if (cd_material_conta_w IS NOT NULL AND cd_material_conta_w::text <> '') then 
					cd_material_w	:= cd_material_conta_w;
				end if;
			end if;
 
			if (ie_gerar_autor_cirurgia_p = 'A') then 
			 
				ie_gerar_autorizacao_w := 'N';
			 
				SELECT * FROM consiste_mat_plano_convenio(cd_convenio_w, cd_plano_w, cd_material_w, nr_atendimento_w, cd_setor_atendimento_w, ds_retorno_w, ie_bloqueio_agenda_w, ie_regra_w, nr_seq_regra_retorno_w, qt_material_w, clock_timestamp(), nr_seq_agenda_p, cd_estabelecimento_p, null, null) INTO STRICT ds_retorno_w, ie_bloqueio_agenda_w, ie_regra_w, nr_seq_regra_retorno_w;
 
				if (ie_regra_w in ('3','8')) then 
					ie_gerar_autorizacao_w	:= 'S';
				end if;
 
				if (nr_seq_regra_retorno_w IS NOT NULL AND nr_seq_regra_retorno_w::text <> '') then 
					select	max(ds_observacao) 
					into STRICT	ds_observacao_regra_w 
					from 	regra_convenio_plano_mat 
					where	nr_sequencia	= nr_seq_regra_retorno_w;
 
					ds_observacao_w	:= substr(ds_observacao_w,1,1800) ||' - '|| substr(ds_observacao_regra_w,1,1800);
				end if;
			end if;
 
			select	count(*) 
			into STRICT	qt_reg_material_w 
			from	autorizacao_cirurgia b, 
				material_autor_cirurgia a 
			where	a.nr_seq_autorizacao	= b.nr_sequencia	 
			and	b.nr_seq_agenda		= nr_seq_agenda_p 
			and	a.cd_material		= cd_material_w 
			and	((coalesce(a.nr_seq_opme::text, '') = '') or (coalesce(nr_seq_agrup_w::text, '') = '') or 
				(nr_seq_agrup_w	= (	SELECT	max(x.nr_seq_agrup) 
							from	agenda_pac_opme x 
							where	x.nr_sequencia = a.nr_seq_opme)));
 
			if (qt_reg_material_w = 0) and (ie_gerar_autorizacao_w = 'S') then 
 
				--pr_adicional_w	:= obter_tx_comercializacao_conv(cd_convenio_w,cd_estabelecimento_p,sysdate,cd_material_w); 
				SELECT * FROM obter_tx_reducao_acresc_conv(cd_convenio_w, cd_estabelecimento_p, clock_timestamp(), cd_material_w, null, null, null, pr_adicional_w, ie_reducao_acrescimo_w) INTO STRICT pr_adicional_w, ie_reducao_acrescimo_w;
 
				select	nextval('material_autor_cirurgia_seq') 
				into STRICT	nr_seq_mat_autor_cir_w 
				;
 
				insert	into	material_autor_cirurgia(nr_sequencia, 
					nr_seq_autorizacao, 
					nm_usuario, 
					dt_atualizacao, 
					nm_usuario_nrec, 
					dt_atualizacao_nrec, 
					cd_material, 
					qt_solicitada, 
					qt_material, 
					vl_material, 
					ie_aprovacao, 
					vl_unitario_material, 
					cd_cgc_fornec, 
					ds_observacao, 
					pr_adicional, 
					ie_gerado_agenda, 
					ie_valor_conta, 
					nr_seq_opme, 
					nr_seq_regra_plano, 
					ie_reducao_acrescimo, 
					nr_seq_marca) 
				values (nr_seq_mat_autor_cir_w, 
					nr_seq_autor_cir_w, 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					cd_material_w, 
					qt_material_w, 
					0, 
					0, 
					'N', 
					0, 
					cd_cgc_w, 
					ds_observacao_w, 
					pr_adicional_w, 
					'S', 
					ie_valor_conta_w, 
					nr_Seq_pac_opme_w, 
					nr_seq_regra_retorno_w, 
					ie_reducao_acrescimo_w, 
					nr_seq_marca_w);
 
				if (coalesce(ie_obter_preco_convenio_w,'N') = 'S') then 
					ds_retorno_w := Atualizar_Preco_Mat_Aut_Conv(nr_seq_mat_autor_cir_w, null, cd_estabelecimento_p, nm_usuario_p, ds_retorno_w);
				end if;
 
					open c02;
 
					loop 
					fetch c02 into 
						cd_cgc_fornec_opme_w;
					EXIT WHEN NOT FOUND; /* apply on c02 */
 
						insert into material_autor_cir_cot(nr_sequencia, 
							cd_cgc, 
							dt_atualizacao, 
							nm_usuario, 
							vl_cotado, 
							vl_unitario_cotado, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							ie_aprovacao) 
						values (nr_seq_mat_autor_cir_w, 
								cd_cgc_fornec_opme_w, 
								clock_timestamp(), 
								nm_usuario_p, 
								0, 
								0, 
								clock_timestamp(), 
								nm_usuario_p, 
								' ');
					end loop;
					close c02;
					 
				if (coalesce(ie_fornec_mat_autor_esp_w,'N') = 'S') then 
					CALL gerar_mat_fornec_autor_cot(nr_seq_autor_cir_w,nm_usuario_p);
				end if;
 
			end if;
		end loop;
		close c04;
	end loop;
	close c01;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_autor_cirurgia_opme ( nr_seq_agenda_p bigint, cd_cgc_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ie_gerar_autor_cirurgia_p text) FROM PUBLIC;

