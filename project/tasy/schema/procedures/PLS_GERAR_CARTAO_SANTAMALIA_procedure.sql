-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE rc_titul AS (nr_seq_titul_w			bigint);


CREATE OR REPLACE PROCEDURE pls_gerar_cartao_santamalia ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


type 	tb_titul is table of rc_titul index by integer;

 
tb_titul_w	tb_titul;

 
nr_seq_segurado_w		bigint;
ds_header_w			varchar(4000);
cd_usuario_plano_w		varchar(30);
nm_beneficiario_w		varchar(250);
tp_contratacao_w		varchar(20);
dt_nascimento_w			varchar(20);
ds_produto_w			varchar(50);
ds_abrangencia_w		varchar(50);
ds_acomodacao_w			varchar(50);
nm_empresa_w			varchar(50);
tp_contrato_w			varchar(10);
ds_trilha_1_w			varchar(79);
ds_trilha_2_w			varchar(40);
nr_protocolo_ans_w		varchar(100);
dt_contratacao_w		varchar(20);
nm_titular_w			varchar(255);
ds_estipulante_w		varchar(255);
ie_segmentacao_w		varchar(10);
ds_segmentacao_w		varchar(255);
dt_validade_carteira_w		pls_segurado_carteira.dt_validade_carteira%type;
ds_carencia_ww			varchar(255);
ds_dt_carencia_ww		varchar(255);
nr_seq_beneficiario_w		varchar(255);
ds_carencia_w			varchar(4000);
ds_dt_carencia_w		varchar(4000);
ds_benefic_w			varchar(255);
nr_seq_plano_w			bigint;
nr_titul_count_w		bigint := 1;
nr_dependentes_w		bigint;
nr_seq_intercambio_w		bigint;
nr_seq_contrato_w		bigint;
nr_titulares_w			bigint:= 0;
nr_dependnetes_w		bigint:= 0;
nr_total_lote_w			bigint:= 0;

C01 CURSOR FOR 
	SELECT	b.nr_sequencia, -- Cursor para buscar todos os titulares do lote 
		pls_obter_dados_segurado(b.nr_sequencia, 'N') nm_segurado 
	from	pls_segurado_carteira	a, 
		pls_segurado		b, 
		pls_carteira_emissao	c, 
		pls_lote_carteira	d 
	where	a.nr_seq_segurado	= b.nr_sequencia 
	and	c.nr_seq_seg_carteira	= a.nr_sequencia 
	and	c.nr_seq_lote		= d.nr_sequencia 
	and ((b.nr_seq_contrato IS NOT NULL AND b.nr_seq_contrato::text <> '') 
	or	(nr_seq_intercambio IS NOT NULL AND nr_seq_intercambio::text <> '')) 
	and 	coalesce(b.nr_seq_titular::text, '') = '' 
	and	d.nr_sequencia		= nr_seq_lote_p 
	order by nm_segurado;
	
C02 CURSOR FOR 
	SELECT 	b.nr_sequencia, -- Cursor para buscar os dependentes dos titulares do lote 
		pls_obter_dados_segurado(b.nr_sequencia, 'N') nm_segurado 
	from	pls_segurado_carteira	a, 
		pls_segurado		b, 
		pls_carteira_emissao	c, 
		pls_lote_carteira	d 
	where	a.nr_seq_segurado	= b.nr_sequencia 
	and	c.nr_seq_seg_carteira	= a.nr_sequencia 
	and	c.nr_seq_lote		= d.nr_sequencia 
	and	d.nr_sequencia		= nr_seq_lote_p 
	and ((b.nr_seq_contrato IS NOT NULL AND b.nr_seq_contrato::text <> '') 
	or	(nr_seq_intercambio IS NOT NULL AND nr_seq_intercambio::text <> '')) 
	and 	b.nr_seq_titular 	= nr_seq_segurado_w 
	order by	nm_segurado;

C03 CURSOR FOR 
	SELECT	b.nr_sequencia, 
		pls_obter_dados_segurado(b.nr_sequencia, 'N') nm_segurado 
	from	pls_segurado_carteira	a, 
		pls_segurado		b, 
		pls_carteira_emissao	c, 
		pls_lote_carteira	d 
	where	a.nr_seq_segurado	= b.nr_sequencia 
	and	c.nr_seq_seg_carteira	= a.nr_sequencia 
	and	c.nr_seq_lote		= d.nr_sequencia 
	and ((b.nr_seq_contrato IS NOT NULL AND b.nr_seq_contrato::text <> '') 
	or	(nr_seq_intercambio IS NOT NULL AND nr_seq_intercambio::text <> '')) 
	and	d.nr_sequencia		= nr_seq_lote_p 
	and (nr_seq_titular IS NOT NULL AND nr_seq_titular::text <> '') 
	and not exists (SELECT 	1 
			from pls_segurado_carteira	z, 
				pls_segurado		y, 
				pls_carteira_emissao	g, 
				pls_lote_carteira	p 
			where	 z.nr_seq_segurado	  = y.nr_sequencia 
			and	  g.nr_seq_seg_carteira	= z.nr_sequencia 
			and	  g.nr_seq_lote		= p.nr_sequencia 
			and	 p.nr_sequencia		= nr_seq_lote_p 
			and  b.nr_seq_titular = y.nr_sequencia) 
	order by	nm_segurado;
BEGIN
 
DS_HEADER_W	:= 	'MATRICULA;BENEFICIARIO;TARJA_TRILHA_1_CODIGO_FORMATADO;TARJA_TRILHA_2_CODIGO_INTERNO;TARJA_TRILHA_3_VS_CARTEIRINHA;TITULAR;PLANO;EMPRESA;DATA_DE_NASCIMENTO;'|| 
			'DT_VALIDADE_CARTEIRA;CONTRATACAO;DATA_DE_INICIO;ABRANGENCIA;SEGMENTACAO;CODIGO_PRODUTO_ANS;' ||'CARENCIA1;CARENCIA2;CARENCIA3;CARENCIA4;CARENCIA5;CARENCIA6;'|| 
			'CARENCIA7;ACOMODACAO;DCAR1;DCAR2;DCAR3;DCAR4;DCAR5;DCAR6;DCAR7';
 
delete	FROM w_pls_interface_carteira 
where	nr_seq_lote	= nr_seq_lote_p;
 
insert	into	w_pls_interface_carteira(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
		nr_seq_lote, ds_header, ie_tipo_reg) 
values (	nextval('w_pls_interface_carteira_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, 
		nr_seq_lote_p, ds_header_w, 1);
 
open C01;
loop 
fetch C01 into 
	nr_seq_segurado_w, 
	ds_benefic_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	tb_titul_w[ nr_titul_count_w ].nr_seq_titul_w := nr_seq_segurado_w;
	nr_titul_count_w := nr_titul_count_w + 1;
	nr_titulares_w := nr_titulares_w +1;
	select 	count(*) 
	into STRICT 	nr_dependentes_w 
	from 	pls_segurado 
	where 	nr_seq_titular = nr_seq_segurado_w;
	 
	if (nr_dependentes_w > 0) then 
		open C02;
		loop 
		fetch C02 into 
			nr_seq_beneficiario_w, 
			ds_benefic_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			tb_titul_w[nr_titul_count_w].nr_seq_titul_w := nr_seq_beneficiario_w;
			nr_titul_count_w := nr_titul_count_w + 1;
			nr_dependnetes_w := nr_dependnetes_w + 1;
			end;
		end loop;
		close C02;
	end if;
	end;
end loop;
close C01;
select	 count(1) 
into STRICT	nr_total_lote_w 
from	pls_segurado_carteira	a, 
	pls_segurado		b, 
	pls_carteira_emissao	c, 
	pls_lote_carteira	d 
where	a.nr_seq_segurado	= b.nr_sequencia 
and	c.nr_seq_seg_carteira	= a.nr_sequencia 
and	c.nr_seq_lote		= d.nr_sequencia 
and ((b.nr_seq_contrato IS NOT NULL AND b.nr_seq_contrato::text <> '') 
or	(nr_seq_intercambio IS NOT NULL AND nr_seq_intercambio::text <> '')) 
and	d.nr_sequencia		= nr_seq_lote_p;
 
if 	(nr_total_lote_w > (nr_titulares_w + nr_dependnetes_w)) then 
	open C03;
	loop 
	fetch C03 into 
		nr_seq_segurado_w, 
		ds_benefic_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
	begin 
		tb_titul_w[nr_titul_count_w].nr_seq_titul_w := nr_seq_segurado_w;
				nr_titul_count_w := nr_titul_count_w + 1;
	end;
	end loop;
	close C03;
end if;
 
 
for x in 1..tb_titul_w.count loop 
	begin 
	select	c.cd_usuario_plano, 
		substr(a.nm_pessoa_fisica,1,60), 
		replace(replace(ds_trilha1,'%',''),'?',''), 
		replace(replace(ds_trilha2,';',''),'?',''), 
		CASE WHEN coalesce(b.nr_seq_titular::text, '') = '' THEN nm_pessoa_fisica  ELSE substr(pls_obter_dados_segurado(b.nr_sequencia,'NT'),1,255) END , 
		substr(d.nm_fantasia,1,17), 
		coalesce(b.nr_seq_intercambio,0), 
		coalesce(b.nr_seq_contrato,0), 
		to_char(a.dt_nascimento,'dd/mm/yyyy'), 
		CASE WHEN D.ie_tipo_contratacao='I' THEN 'INDIVIDUAL FAMILIAR' WHEN D.ie_tipo_contratacao='CA' THEN 'COLETIVO ADESÃO' WHEN D.ie_tipo_contratacao='CE' THEN 'COLETIVO EMPRESARIAL' END , 
		to_char(b.dt_contratacao,'dd/mm/yyyy'), 
		CASE WHEN D.ie_abrangencia='GM' THEN 'GRUPO DE MUNICÍPIOS' WHEN D.ie_abrangencia='E' THEN 'ESTADUAL' WHEN D.ie_abrangencia='GE' THEN 'GRUPO DE ESTADOS' WHEN D.ie_abrangencia='M' THEN 'MUNICIPAL' WHEN D.ie_abrangencia='N' THEN 'NACIONAL' END , 
		d.ie_segmentacao, 
		d.nr_protocolo_ans, 
		substr(coalesce(pls_obter_dados_cart_unimed(b.nr_sequencia,d.nr_sequencia,'DASJ',1),'NÃO SE APLICA'),1,50), 
		d.nr_sequencia, 
		c.dt_validade_carteira 
	into STRICT	cd_usuario_plano_w, 
		nm_beneficiario_w, 
		ds_trilha_1_w, 
		ds_trilha_2_w, 
		nm_titular_w, 
		ds_produto_w, 
		nr_seq_intercambio_w, 
		nr_seq_contrato_w, 
		dt_nascimento_w, 
		tp_contratacao_w, 
		dt_contratacao_w, 
		ds_abrangencia_w, 
		ie_segmentacao_w, 
		nr_protocolo_ans_w, 
		ds_acomodacao_w, 
		nr_seq_plano_w, 
		dt_validade_carteira_w 
	from	pls_plano		d, 
		pls_segurado_carteira	c, 
		pls_segurado		b, 
		pessoa_fisica		a 
	where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica 
	and	c.nr_seq_segurado	= b.nr_sequencia 
	and	b.nr_seq_plano		= d.nr_sequencia 
	and	b.nr_sequencia		= tb_titul_w[x].nr_seq_titul_w;	
	 
	if (nr_seq_intercambio_w <> 0 )then 
		select 	CASE WHEN coalesce(cd_cgc::text, '') = '' THEN '' WHEN cd_cgc='Santamália Saúde' THEN pls_obter_dados_contrato_inter(nr_seq_intercambio_w, null, 'E') END  
		into STRICT	ds_estipulante_w 
		from	pls_intercambio 
		where 	nr_sequencia 	= nr_seq_intercambio_w;
	elsif (nr_seq_contrato_w <> 0 )then 
		select 	CASE WHEN cd_cgc_estipulante='' THEN 'Santamália Saúde'  ELSE substr(obter_nome_pf_pj('',cd_cgc_estipulante),1,255) END  
			into STRICT	ds_estipulante_w 
			from 	pls_contrato 
			where 	nr_sequencia = nr_seq_contrato_w;
	end if;
	 
	ds_acomodacao_w		:= upper(ds_acomodacao_w);
	 
	ds_abrangencia_w	:= replace(ds_abrangencia_w,'Í','I');
	 
	if (ie_segmentacao_w = '1') then 
		ds_segmentacao_w	:= 'AMB';
	elsif (ie_segmentacao_w = '1') then 
		ds_segmentacao_w	:= 'HOSP+OBST';
	elsif (ie_segmentacao_w = '3') then 
		ds_segmentacao_w	:= 'HOSP';
	elsif (ie_segmentacao_w = '4') then 
		ds_segmentacao_w	:= 'ODONT';
	elsif (ie_segmentacao_w = '5') then 
		ds_segmentacao_w	:= 'REF+AMB+HOSP+OBST';
	elsif (ie_segmentacao_w = '6') then 
		ds_segmentacao_w	:= 'AMB+HOSP+OBST';
	elsif (ie_segmentacao_w = '7') then 
		ds_segmentacao_w	:= 'AMB+HOSP';
	elsif (ie_segmentacao_w = '8') then 
		ds_segmentacao_w	:= 'AMB+ODONT';
	elsif (ie_segmentacao_w = '9') then 
		ds_segmentacao_w	:= 'HOSP+OBST+ODONT';
	elsif (ie_segmentacao_w = '10') then 
		ds_segmentacao_w	:= 'HOSP+ODONT';
	elsif (ie_segmentacao_w = '11') then 
		ds_segmentacao_w	:= 'AMB+HOSP+OBST+ODONT';
	elsif (ie_segmentacao_w = '12') then 
		ds_segmentacao_w	:= 'AMB+HOSP+ODONT';
	end if;
	 
	ds_carencia_w		:= '';
	ds_dt_carencia_w	:= '';
	 
	for i in 1..7 loop 
		begin 
		ds_carencia_ww		:= substr(pls_obter_dados_cart_unimed(tb_titul_w[x].nr_seq_titul_w , nr_seq_plano_w,'CAM5',i),1,255);
		ds_dt_carencia_ww	:= substr(ds_carencia_ww,position(';' in ds_carencia_ww)+1,length(ds_carencia_ww));
		ds_carencia_ww		:= substr(ds_carencia_ww,1,position(';' in ds_carencia_ww)-1);
		 
		if (UPPER(ds_dt_carencia_ww) = 'IMEDIATO') THEN 
			ds_dt_carencia_ww	:= 'NÃO HÁ';
		end if;
		 
		if (i < 7) then 
			ds_carencia_w		:= ds_carencia_w ||ds_carencia_ww||';';
			ds_dt_carencia_w	:= ds_dt_carencia_w || ds_dt_carencia_ww||';';
		else 
			ds_carencia_w	:= ds_carencia_w ||ds_carencia_ww;
			ds_dt_carencia_w	:= ds_dt_carencia_w || ds_dt_carencia_ww;
		end if;
		end;
	end loop;
	 
	insert	into	w_pls_interface_carteira(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
			nr_seq_lote, ie_tipo_reg, cd_usuario_plano, nm_beneficiario, ds_trilha_1, 
			ds_trilha_2, nm_titular, nm_plano, ds_estipulante, dt_nascimento, 
			ds_tipo_contratacao, dt_adesao, ds_abrangencia, ds_segmentacao, nr_protocolo_ans, 
			ds_acomodacao, nr_seq_segurado, ds_carencia, ds_dt_carencia, dt_validade_carteira ) 
	values (	nextval('w_pls_interface_carteira_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, 
			nr_seq_lote_p, 2, cd_usuario_plano_w, nm_beneficiario_w, ds_trilha_1_w, 
			ds_trilha_2_w, nm_titular_w, ds_produto_w, ds_estipulante_w, dt_nascimento_w, 
			tp_contratacao_w, dt_contratacao_w, ds_abrangencia_w, ds_segmentacao_w, nr_protocolo_ans_w, 
			ds_acomodacao_w, tb_titul_w[x].nr_seq_titul_w , ds_carencia_w, ds_dt_carencia_w, dt_validade_carteira_w );
	end;
end loop;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_cartao_santamalia ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

