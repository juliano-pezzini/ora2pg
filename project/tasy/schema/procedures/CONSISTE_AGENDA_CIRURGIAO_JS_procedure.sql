-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_agenda_cirurgiao_js ( cd_agenda_p bigint, dt_agenda_p timestamp, hr_inicio_p timestamp, nr_minuto_duracao_p bigint, nr_seq_agenda_p bigint, cd_pessoa_fisica_p text, cd_convenio_p bigint, cd_categoria_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, cd_medico_p text, ie_medico_p text, cd_plano_p text, qt_tempo_p bigint, cd_estabelecimento_p bigint, ds_erro_p INOUT text, ie_equip_disp_p INOUT text ) AS $body$
DECLARE


ds_erro_w		      varchar(255);
ie_inconsistencia_w	varchar(255);			
cd_retorno_w		   bigint;
ie_consist_js_w		varchar(255) := '';
ie_anestesia_w		   varchar(1);
			

BEGIN

ds_erro_p := '';
ie_equip_disp_p := '';

select	max(coalesce(ie_anestesia,'N'))
into STRICT	   ie_anestesia_w
from	   agenda_paciente
where 	nr_sequencia = nr_seq_agenda_p;


ds_erro_w := Consistir_Duracao_Agenda_Pac(cd_agenda_p, dt_agenda_p, hr_inicio_p, nr_minuto_duracao_p, nr_seq_agenda_p, 0, ds_erro_w);

if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(219056,'DS_ERRO_W=' || ds_erro_w);
end if;


SELECT * FROM consistir_proc_conv_agenda(cd_estabelecimento_p, cd_pessoa_fisica_p, hr_inicio_p, cd_agenda_p, cd_convenio_p, cd_categoria_p, cd_procedimento_p, ie_origem_proced_p, nr_seq_proc_interno_p, cd_medico_p, ie_medico_p, cd_plano_p, null, null, nr_minuto_duracao_p, null, ie_anestesia_w, null, null) INTO STRICT ie_inconsistencia_w, ds_erro_w, cd_retorno_w, ie_consist_js_w;

if (ie_inconsistencia_w IS NOT NULL AND ie_inconsistencia_w::text <> '') then
      CALL Wheb_mensagem_pck.exibir_mensagem_abort(219057,'IE_INCONSISTENCIA_W=' || ie_inconsistencia_w);
end if;	

ds_erro_p := consiste_qtd_agend_permitidos(nr_seq_agenda_p, ds_erro_p);	

ie_equip_disp_p := obter_se_equip_disponivel(nr_seq_agenda_p, nr_seq_proc_interno_p, cd_medico_p, qt_tempo_p);

if (cd_medico_p IS NOT NULL AND cd_medico_p::text <> '') then
   CALL obter_se_medico_disponivel(nr_seq_agenda_p, cd_medico_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_agenda_cirurgiao_js ( cd_agenda_p bigint, dt_agenda_p timestamp, hr_inicio_p timestamp, nr_minuto_duracao_p bigint, nr_seq_agenda_p bigint, cd_pessoa_fisica_p text, cd_convenio_p bigint, cd_categoria_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, cd_medico_p text, ie_medico_p text, cd_plano_p text, qt_tempo_p bigint, cd_estabelecimento_p bigint, ds_erro_p INOUT text, ie_equip_disp_p INOUT text ) FROM PUBLIC;

