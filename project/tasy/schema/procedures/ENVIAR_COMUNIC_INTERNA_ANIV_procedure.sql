-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_comunic_interna_aniv ( cd_estabelecimento_p bigint, nm_usuario_p text, ie_tipo_prefixo_medico_p text default 'T') AS $body$
DECLARE


nr_seq_regra_w		bigint;
ie_tipo_publico_w		bigint;
ds_titulo_w		varchar(200);
ds_titulo_aniv_w		varchar(200);	
ds_texto_aniv_w		varchar(2000);	
ds_texto_comunic_w	varchar(500);
nr_seq_classif_w		bigint;
cd_pessoa_aniv_w		varchar(15);
cd_aniversariantes_w	varchar(2000);
nm_usuario_aniv_w		varchar(20);
nm_pessoas_aniv_w	varchar(2000);

nm_usuario_destino_w	varchar(70);
cd_perfil_destino_w		varchar(70);
cd_setor_destino_w		varchar(70);
ie_geral_destino_w		varchar(70);
ds_setor_usuario_w		varchar(80);

IE_SOMENTE_USUARIO_w	varchar(5);
nm_usuarios_destino_w	varchar(600);
cd_perfis_destino_w	varchar(4000);
cd_setores_destino_w	varchar(600);
ie_gerais_destino_w	varchar(600);

ie_medico_w		varchar(100);
ie_cargo_w		varchar(200);
nm_fantasia_estab_w	varchar(200);
ds_comunicado_w		text;
cd_estab_destino_w	bigint;
cd_pessoas_aniv_w	varchar(4000) := ',';
ie_listar_setor_medico_w	varchar(15);
ie_pf_medico_w		varchar(01);
cd_estab_regra_w		bigint;
nr_seq_comunic_w		bigint;
ie_email_w		varchar(15);
ie_enviar_todos_aniv_w	varchar(1);
ds_email_aniv_w		varchar(255);
ds_email_usuario_w		varchar(255);
tam_lista_w		bigint;
ie_pos_virgula_w		smallint;
ds_pessoa_aniv_w		varchar(2000);
ie_tipo_w			regra_comunic_aniv.ie_tipo%type;
ie_tipo_regra_w		regra_comunic_aniv.ie_tipo%type;
nm_pessoa_fisica_w	pessoa_fisica.nm_pessoa_fisica%type;
dt_admissao_hosp_w	varchar(10);
dt_primeira_admissao_w	varchar(10);
qt_tempo_servico_w	smallint;

/* Percorre regras */

C01 CURSOR FOR
SELECT	nr_sequencia,
	ie_tipo_publico,
	ds_titulo,
	ds_titulo_aniv,
	ds_texto_aniv,
	ds_texto_comunic,
	nr_seq_classif,
	ie_somente_usuario,
	ie_listar_setor_medico,
	cd_estabelecimento,
	ie_email,
	ie_enviar_todos_aniv,
	coalesce(ie_tipo,'A')
from 	regra_comunic_aniv
where	coalesce(cd_estabelecimento,cd_estabelecimento_p) = cd_estabelecimento_p
order by coalesce(ie_tipo,'A');

/* Seleciona aniversariantes do dia conforme regra */

C02 CURSOR FOR
SELECT	f.cd_pessoa_fisica,
	u.nm_usuario
from	pessoa_fisica f,
	usuario u
where	f.cd_pessoa_fisica	= u.cd_pessoa_fisica
and (obter_se_contido(f.cd_pessoa_fisica, cd_aniversariantes_w) = 'S')
and	u.ie_situacao	<> 'I'
and	IE_SOMENTE_USUARIO_w	= 'S'
and	coalesce(f.dt_obito::text, '') = ''
and	u.cd_estabelecimento = CASE WHEN ie_enviar_todos_aniv_w='S' THEN  u.cd_estabelecimento  ELSE coalesce(cd_estab_regra_w, u.cd_estabelecimento) END 
and	((ie_tipo_publico_w = 1 AND f.ie_funcionario = 'S') or 
	((ie_tipo_publico_w = 2)	and (exists (SELECT 1 
							  from	medico m
						   	  where	m.cd_pessoa_fisica = f.cd_pessoa_fisica
							  and	m.ie_situacao = 'A'))) or (ie_tipo_publico_w = 9))

union all

select	f.cd_pessoa_fisica,
	' ' nm_usuario
from	pessoa_fisica f
where (obter_se_contido(somente_numero(f.cd_pessoa_fisica), cd_aniversariantes_w) = 'S')
and	IE_SOMENTE_USUARIO_w	= 'N'
and	coalesce(f.dt_obito::text, '') = ''
and	((ie_tipo_publico_w = 1 AND f.ie_funcionario = 'S') or 
	((ie_tipo_publico_w = 2)	and (exists (select 1 
							  from	medico m
						   	  where	m.cd_pessoa_fisica = f.cd_pessoa_fisica
							  and	m.ie_situacao = 'A'))) or (ie_tipo_publico_w = 9));
	
/* Seleciona destinatários da mensagem conforme regra */

C03 CURSOR FOR
SELECT	nm_usuario_destino,
	cd_perfil,
	cd_setor_atendimento,
	ie_geral,
	cd_estabelecimento
from	comunic_aniv_destino
where	nr_seq_regra 	= nr_seq_regra_w
and	coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p;

C04 CURSOR FOR
SELECT	distinct a.ds_email
from	usuario a,
	comunic_interna b
where	a.ie_situacao = 'A'
and	(a.ds_email IS NOT NULL AND a.ds_email::text <> '')
and	substr(obter_se_email_valido(a.ds_email),1,1) = 'S'
and	substr(obter_se_mostra_comunicacao(b.nr_sequencia,a.nm_usuario,'N', 'N','',b.nm_usuario,substr(b.nm_usuario_destino,1,2000),
	substr(b.nm_usuario_destino,2001,2000),b.ie_geral,b.ie_gerencial,b.cd_perfil,b.nr_seq_classif,substr(b.ds_perfil_adicional,1,2000),
	substr(b.ds_perfil_adicional,2001,2000),b.ds_setor_adicional,b.cd_setor_destino,b.cd_estab_destino,b.ds_grupo,null,
	substr(b.ds_grupo_perfil,1,2000),null,'S',b.ds_estab_adicional,b.cd_especialidade, b.cd_cargo, b.cd_perfil_origem, b.ie_envio_terceiro, b.ie_funcionario),1,1) = 'S'
and	b.nr_sequencia = nr_seq_comunic_w;


BEGIN

open C01;
loop	
fetch C01 into
	nr_seq_regra_w,
	ie_tipo_publico_w,
	ds_titulo_w,
	ds_titulo_aniv_w,
	ds_texto_aniv_w,
	ds_texto_comunic_w,
	nr_seq_classif_w,
	ie_somente_usuario_w,
	ie_listar_setor_medico_w,
	cd_estab_regra_w,
	ie_email_w,
	ie_enviar_todos_aniv_w,
	ie_tipo_regra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (coalesce(ie_tipo_w,'0') <> ie_tipo_regra_w) then
		begin
		ie_tipo_w		:= ie_tipo_regra_w;
		cd_pessoas_aniv_w	:= ',';
		end;
	end if;

	ds_titulo_aniv_w	:= coalesce(ds_titulo_aniv_w,ds_titulo_w);
	nm_usuarios_destino_w	:= null;
	cd_perfis_destino_w	:= null;
	cd_setores_destino_w	:= null;
	ie_gerais_destino_w	:= 'N';

	if (ie_tipo_w	= 'A') then
		begin
		nm_pessoas_aniv_w := 'Aniversariantes de hoje:';
		if (ie_somente_usuario_w = 'S') then
			cd_aniversariantes_w	:= obter_usuarios_aniv(nr_seq_regra_w);
		else
			cd_aniversariantes_w	:= obter_pessoa_aniv(nr_seq_regra_w);
		end if;
		end;
	elsif (ie_tipo_w	= 'T') then
		begin
		nm_pessoas_aniv_w := 'Parabenizar o tempo de serviço:';
		if (ie_somente_usuario_w = 'S') then
			cd_aniversariantes_w	:= obter_usuarios_aniv_admissao(nr_seq_regra_w);
		else
			cd_aniversariantes_w	:= obter_pessoa_aniv_admissao(nr_seq_regra_w);
		end if;
		end;
	end if;	
	
	/* Envia comunicação para o USUÁRIO ANIVERSARIANTE */

	open C02;
	loop
	fetch C02 into
		cd_pessoa_aniv_w,
		nm_usuario_aniv_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		select	to_char(dt_admissao_hosp,'dd/mm/yyyy'),
			to_char(dt_primeira_admissao,'dd/mm/yyyy'),
			substr(obter_nome_pf(cd_pessoa_fisica),0,200),
			obter_idade(coalesce(dt_primeira_admissao,dt_admissao_hosp),clock_timestamp(), 'A')
		into STRICT	dt_admissao_hosp_w,
			dt_primeira_admissao_w,
			nm_pessoa_fisica_w,
			qt_tempo_servico_w
		from	pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_aniv_w;

		if (coalesce(nm_usuario_aniv_w,'X') <> 'X') then
			
			nm_usuario_aniv_w	:= nm_usuario_aniv_w || ',';
			ds_comunicado_w		:= ds_texto_aniv_w;
			ds_comunicado_w	:= substr(replace_macro(ds_comunicado_w,'@nm_pessoa_fisica',nm_pessoa_fisica_w),1,4000);
			ds_comunicado_w	:= substr(replace_macro(ds_comunicado_w,'@data_admissao',dt_admissao_hosp_w),1,4000);
			ds_comunicado_w	:= substr(replace_macro(ds_comunicado_w,'@primeira_admissao',dt_primeira_admissao_w),1,4000);
			ds_comunicado_w	:= substr(replace_macro(ds_comunicado_w,'@tempo_servico',qt_tempo_servico_w),1,4000);	
			
			INSERT  INTO comunic_interna(
				dt_comunicado,
				ds_titulo,
				ds_comunicado,
				nm_usuario,
				dt_atualizacao,
				ie_geral,
				nm_usuario_destino,
				nr_sequencia,
				ie_gerencial,
				nr_seq_classif,
				ds_perfil_adicional,
				cd_setor_destino,
				cd_estab_destino,
				ds_setor_adicional,
				dt_liberacao)
			VALUES (clock_timestamp(),
				ds_titulo_aniv_w,
				ds_comunicado_w,
				nm_usuario_p,
				clock_timestamp(),
				'N',
				nm_usuario_aniv_w,
				nextval('comunic_interna_seq'),
				'N',
				nr_seq_classif_w,
				null,
				null,
				cd_estabelecimento_p,
				null,
				clock_timestamp());
			
			/* jcaraujo 17/12/10 - OS247677 */

			if (coalesce(ie_email_w,'N') = 'S') then
				begin
				
				select	max(ds_email)
				into STRICT	ds_email_aniv_w
				from	usuario
				where	substr(obter_se_email_valido(ds_email),1,1) = 'S'
				and	nm_usuario = substr(nm_usuario_aniv_w,1,Length(nm_usuario_aniv_w)-1);
				
				if (coalesce(ds_email_aniv_w,'X') <> 'X') then
					CALL enviar_email(	ds_titulo_aniv_w,
							ds_comunicado_w,
							null,
							ds_email_aniv_w,
							nm_usuario_p,
							'M');
				end if;
				end;
			end if;
		end if;
		
		if (ie_tipo_prefixo_medico_p = 'T') then
			/* Francisco - 26/09/2008 - OS 108904 */

			select	max(CASE WHEN coalesce(b.cd_pessoa_fisica::text, '') = '' THEN null  ELSE CASE WHEN a.ie_sexo='M' THEN 'Dr. ' WHEN a.ie_sexo='F' THEN 'Dra. '  ELSE 'Dr(a).' END  END )
			into STRICT	ie_medico_w
			FROM pessoa_fisica a
LEFT OUTER JOIN medico b ON (a.cd_pessoa_fisica = b.cd_pessoa_fisica)
WHERE a.cd_pessoa_fisica	= cd_pessoa_aniv_w and b.ie_situacao		= 'A';	
		elsif (ie_tipo_prefixo_medico_p = 'CRM') then
			select max(CASE WHEN a.ie_sexo='M' THEN 'Dr. ' WHEN a.ie_sexo='F' THEN 'Dra. '  ELSE 'Dr(a).' END )
			into STRICT	ie_medico_w
			from	conselho_profissional c,
				medico b,
				pessoa_fisica a
			where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
			and	a.nr_seq_conselho	= c.nr_sequencia
			and	c.ie_conselho_prof_tiss	= 'CRM'
			and	a.cd_pessoa_fisica	= cd_pessoa_aniv_w
			and	b.ie_situacao		= 'A';
		end if;
		
		select	max(coalesce(substr(obter_especialidade_medico(cd_pessoa_fisica,'D'),1,100),substr(obter_desc_cargo(cd_cargo),1,200)))
		into STRICT	ie_cargo_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_aniv_w;

		if (ie_cargo_w IS NOT NULL AND ie_cargo_w::text <> '') then
			ie_cargo_w	:= ' (' || ie_cargo_w || ') ';
		end if;
	
		/* Fim Francisco - 26/09/2008 */


		
		-- afstringari OS165133 12/09/2009
		select	max(SUBSTR(obter_dados_pf_pj(null, b.cd_cgc, 'F'),1,80)),
			max(substr(obter_nome_setor(cd_setor_atendimento),1,80)) || ' -  '
		into STRICT	nm_fantasia_estab_w,
			ds_setor_usuario_w
		from	estabelecimento b,
			usuario a
		where	a.cd_estabelecimento	= b.cd_estabelecimento	
		and	a.cd_pessoa_fisica   	= cd_pessoa_aniv_w
		and	a.ie_situacao		<> 'I';

		select	substr(Obter_se_medico(cd_pessoa_aniv_w,'M'),1,1)
		into STRICT	ie_pf_medico_w
		;
		
		if (coalesce(ie_pf_medico_w,'N') = 'S') and (coalesce(ie_listar_setor_medico_w,'S') = 'N') then
			ds_pessoa_aniv_w	:= substr(obter_nome_pf(cd_pessoa_aniv_w),1,50) || ie_cargo_w || ' -  ' || nm_fantasia_estab_w;
		elsif (coalesce(ie_listar_setor_medico_w,'S') = 'X') then
			ds_pessoa_aniv_w	:= substr(obter_nome_pf(cd_pessoa_aniv_w),1,50);
		elsif (coalesce(ie_listar_setor_medico_w,'S') = 'E') then
			ds_pessoa_aniv_w	:= substr(obter_nome_pf(cd_pessoa_aniv_w),1,50) || ' -  ' || nm_fantasia_estab_w;
		else
			ds_pessoa_aniv_w	:= substr(obter_nome_pf(cd_pessoa_aniv_w),1,50) || ie_cargo_w || ' -  ' || ds_setor_usuario_w || nm_fantasia_estab_w;
		end if;
		
		/* ahoffelder - OS 197148 - 03/03/2010 - para não repetir a pessoa na lista de aniversariantes */

		if (position(',' || cd_pessoa_aniv_w || ',' in cd_pessoas_aniv_w) <= 0) then
			cd_pessoas_aniv_w := cd_pessoas_aniv_w || cd_pessoa_aniv_w || ',';
			nm_pessoas_aniv_w  := 	substr(nm_pessoas_aniv_w || chr(13) || chr(10) || chr(13) || chr(10) ||
						ie_medico_w || ds_pessoa_aniv_w,1,2000);
		end if;
		end;
	end loop;
	close C02;

	/* Comunicado geral */

	if	((ie_tipo_w = 'A' AND nm_pessoas_aniv_w <> 'Aniversariantes de hoje:') or
		(ie_tipo_w = 'T' AND nm_pessoas_aniv_w <> 'Parabenizar o tempo de serviço:')) then
		begin
		nm_pessoas_aniv_w 	:= substr(chr(13) || chr(10) || nm_pessoas_aniv_w || chr(13) || chr(10) || chr(13) || chr(10),1,2000);
		cd_estab_destino_w	:= cd_estabelecimento_p;
		
		open C03;
		loop
		fetch C03 into
			nm_usuario_destino_w,
			cd_perfil_destino_w,
			cd_setor_destino_w,
			ie_geral_destino_w,
			cd_estab_destino_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			if (nm_usuario_destino_w IS NOT NULL AND nm_usuario_destino_w::text <> '') then
				nm_usuarios_destino_w := nm_usuarios_destino_w || nm_usuario_destino_w || ',';
			end if;

			if (cd_perfil_destino_w IS NOT NULL AND cd_perfil_destino_w::text <> '') then
				cd_perfis_destino_w := cd_perfis_destino_w || cd_perfil_destino_w || ',';
			end if;

			if (cd_setor_destino_w IS NOT NULL AND cd_setor_destino_w::text <> '') then
				cd_setores_destino_w := cd_setores_destino_w || cd_setor_destino_w || ',';
			end if;

			if (ie_geral_destino_w = 'S') then
				ie_gerais_destino_w := 'S';
			end if;	
			end;
		end loop;
		close C03;
		
		/*Envia o comunicado GERAL com a RELAÇÂO de TODOS os ANIVERSARIANTES*/

		select	nextval('comunic_interna_seq')
		into STRICT	nr_seq_comunic_w
		;
		
		ds_comunicado_w	:= nm_pessoas_aniv_w || ds_texto_comunic_w;	
		
		INSERT INTO comunic_interna(
			dt_comunicado,
			ds_titulo,
			ds_comunicado,
			nm_usuario,
			dt_atualizacao,
			ie_geral,
			nm_usuario_destino,
			nr_sequencia,
			ie_gerencial,
			nr_seq_classif,
			ds_perfil_adicional,
			cd_setor_destino,
			cd_estab_destino,
			ds_setor_adicional,
			dt_liberacao)
		VALUES (clock_timestamp(),
			ds_titulo_w,
			ds_comunicado_w,
			nm_usuario_p,
			clock_timestamp(),
			ie_gerais_destino_w,
			nm_usuarios_destino_w,
			nr_seq_comunic_w,
			'N',
			nr_seq_classif_w,
			cd_perfis_destino_w,
			null,
			cd_estab_destino_w,
			cd_setores_destino_w,
			clock_timestamp());

		if (coalesce(ie_email_w,'N') = 'S') then
			open C04;
			loop
			fetch C04 into
				ds_email_usuario_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin
				CALL enviar_email(	ds_titulo_w,
						ds_comunicado_w,
						null,
						ds_email_usuario_w,
						nm_usuario_p,
						'M');
				exception
				when others then
					null;
				end;
			end loop;
			close C04;
		end if;
		end;
	end if;
	end;
end loop;
close C01;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_comunic_interna_aniv ( cd_estabelecimento_p bigint, nm_usuario_p text, ie_tipo_prefixo_medico_p text default 'T') FROM PUBLIC;

