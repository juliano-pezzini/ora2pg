-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_mens_item_nota_credito ( nr_seq_lote_p pls_lote_mensalidade.nr_sequencia%type, nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, nr_seq_pagador_p pls_contrato_pagador.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


qt_mens_benef_w			integer;
nr_seq_mens_arredondamento_w	pls_mensalidade_segurado.nr_sequencia%type;
vl_mensalidade_w		pls_mensalidade_seg_item.vl_item%type;
vl_baixar_nota_w		pls_mensalidade_seg_item.vl_item%type;
vl_rateio_w			pls_mensalidade_seg_item.vl_item%type;
vl_item_w			pls_mensalidade_seg_item.vl_item%type;

--Este cursor busca o valor de saldo das notas de crÃ©dito do pagador
C01 CURSOR(	nr_seq_pagador_pc	pls_contrato_pagador.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_nota,
		coalesce(a.vl_saldo,0) vl_nota
	from	nota_credito	a
	where	a.nr_seq_pagador_aprop	= nr_seq_pagador_pc
	and	a.ie_situacao		= 'A'
	and	a.vl_saldo	> 0;

C02 CURSOR(	nr_seq_mensalidade_pc	pls_mensalidade.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_mensalidade_seg
	from	pls_mensalidade_segurado 	a
	where	a.nr_seq_mensalidade	= nr_seq_mensalidade_pc
	and	(	coalesce( (	SELECT	sum(x.vl_item)
				from	pls_mensalidade_seg_item x
				where	a.nr_sequencia = x.nr_seq_mensalidade_seg),0) > 0);
BEGIN

for r_c01_w in C01(nr_seq_pagador_p) loop
	begin

	begin
	select	coalesce(sum(a.vl_item),0)
	into STRICT	vl_mensalidade_w
	from	pls_mensalidade_seg_item	a,
		pls_mensalidade_segurado	b,
		pls_mensalidade			c
	where	a.nr_seq_mensalidade_seg	= b.nr_sequencia
	and	b.nr_seq_mensalidade		= c.nr_sequencia
	and	c.nr_sequencia			= nr_seq_mensalidade_p;
	exception
	when others then
		vl_mensalidade_w	:= 0;
	end;

	if (vl_mensalidade_w > 0) then --Se tiver valor de mensalidade para descontar o valor da nota
		vl_baixar_nota_w	:= 0;
		if (r_c01_w.vl_nota <= vl_mensalidade_w) then --Se o valor do saldo da nota for menor ou igual que o valor da mensalidade - Baixar o total da nota
			vl_baixar_nota_w	:= r_c01_w.vl_nota;
		elsif (r_c01_w.vl_nota > vl_mensalidade_w) then --Se o valor do saldo da nota  for maior - Baixa o valor da mensalidade do saldo da nota
			vl_baixar_nota_w	:= vl_mensalidade_w;
		end if;

		if (vl_baixar_nota_w > 0) then
			select	count(1),
				max(a.nr_sequencia)
			into STRICT	qt_mens_benef_w,
				nr_seq_mens_arredondamento_w
			from	pls_mensalidade_segurado 	a
			where	a.nr_seq_mensalidade	= nr_seq_mensalidade_p
			and	(	coalesce( (	SELECT	sum(x.vl_item)
						from	pls_mensalidade_seg_item x
						where	a.nr_sequencia = x.nr_seq_mensalidade_seg),0) > 0);

			vl_rateio_w	:= dividir_sem_round(vl_baixar_nota_w, qt_mens_benef_w);

			for r_c02_w in C02(nr_seq_mensalidade_p) loop
				begin
				if (nr_seq_mens_arredondamento_w = r_c02_w.nr_seq_mensalidade_seg) then
					vl_item_w	:= vl_rateio_w + (vl_baixar_nota_w - (vl_rateio_w * qt_mens_benef_w));
				else
					vl_item_w	:= vl_rateio_w;
				end if;

				vl_item_w	:= vl_item_w*-1;

				insert	into	pls_mensalidade_seg_item(	nr_sequencia, nr_seq_mensalidade_seg, ie_tipo_item, vl_item, ie_tipo_mensalidade,
						nm_usuario, nm_usuario_nrec, dt_atualizacao, dt_atualizacao_nrec,
						nr_seq_nota_credito, nr_seq_lote)
				values (	nextval('pls_mensalidade_seg_item_seq'), r_c02_w.nr_seq_mensalidade_seg, '27', vl_item_w, 'P',
						nm_usuario_p, nm_usuario_p, clock_timestamp(), clock_timestamp(),
						r_c01_w.nr_seq_nota, nr_seq_lote_p);

				CALL atualizar_saldo_nota_credito(r_c01_w.nr_seq_nota, nm_usuario_p);

				end;
			end loop; --C02
		end if;
	end if;

	end;
end loop;--C01
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_mens_item_nota_credito ( nr_seq_lote_p pls_lote_mensalidade.nr_sequencia%type, nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, nr_seq_pagador_p pls_contrato_pagador.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

