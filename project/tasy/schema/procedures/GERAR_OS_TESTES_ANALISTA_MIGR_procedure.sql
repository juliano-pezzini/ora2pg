-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_os_testes_analista_migr ( nr_seq_projeto_p bigint, ie_prioridade_analise_p bigint, dt_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE


nr_seq_os_proj_migr_w	bigint;
cd_funcao_projeto_w	integer;
nr_seq_grupo_des_w	bigint;
nm_usuario_testes_w	varchar(15);
nr_seq_os_teste_w	bigint;
ds_dano_w		varchar(4000);


BEGIN
if (nr_seq_projeto_p IS NOT NULL AND nr_seq_projeto_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	begin
	select	nr_seq_ordem_serv,
		cd_funcao,
		nr_seq_grupo_des
	into STRICT	nr_seq_os_proj_migr_w,
		cd_funcao_projeto_w,
		nr_seq_grupo_des_w
	from	proj_projeto
	where	nr_sequencia = nr_seq_projeto_p;

	/*select	u.nm_usuario
	into	nm_usuario_testes_w
	from	usuario u,
		proj_equipe_papel ep
	where	u.cd_pessoa_fisica = ep.cd_pessoa_fisica
	and	ep.ie_funcao_rec_migr = 'T'
	and	exists (
			select	1
			from	proj_equipe e,
				proj_projeto p
			where	ep.nr_seq_equipe = e.nr_sequencia
			and	e.nr_seq_proj = p.nr_sequencia
			and	p.nr_seq_gerencia = 9
			and	p.nr_seq_classif = 14
			and	p.nr_sequencia = nr_seq_projeto_p);*/
	nm_usuario_testes_w := 'Jerusa';

	ds_dano_w	:= 'Migração: testes (internos) referente ao projeto: ' ||
			cd_funcao_projeto_w || ' - ' || obter_desc_funcao(cd_funcao_projeto_w) || ' (' || obter_form_funcao(cd_funcao_projeto_w) || ').' || chr(13) || chr(10) || chr(13) || chr(10);

	ds_dano_w	:= 'Realizar testes em relação ao projeto em questão para permitir a execução mais adequadada dos testes pelos analistas responsáveis pelo mesmo posteriormente. ' || chr(13) || chr(10) ||
			'Aspectos a serem considerados:' || chr(13) || chr(10) ||
			'- Solicitar a configuração de parâmetros do analista Delphi responsável pelo projeto a fim de garantir uma verificação mais adequada;' || chr(13) || chr(10) ||
			'- Compatibilidade entre os ambientes Delphi e Java: realizar a verificação/validação a fim de observar e garantir o funcionamento/utilização idêntico nos dois ambientes;' || chr(13) || chr(10) ||
			'- Utilização: realizar o processo básico a fim de verificar a existência de erros;' || chr(13) || chr(10) ||
			'- Performance;' || chr(13) || chr(10) ||
			'- Layout;' || chr(13) || chr(10) || chr(13) || chr(10) ||
			'Após a realização deste processo, documentar as possíveis situações identificadas em um histórico (se possível, incluindo anexos), e, encerrar esta Ordem de Serviço.';

	select	nextval('man_ordem_servico_seq')
	into STRICT	nr_seq_os_teste_w
	;

	insert into man_ordem_servico(
		nr_sequencia,
		dt_ordem_servico,
		cd_pessoa_solicitante,
		nr_seq_localizacao,
		nr_seq_equipamento,
		ds_dano_breve,
		ie_prioridade,
		ds_dano,
		cd_funcao,
		nr_seq_grupo_des,
		ie_classificacao,
		ie_tipo_ordem,
		ie_status_ordem,
		dt_inicio_previsto,
		dt_fim_previsto,
		dt_inicio_desejado,
		dt_conclusao_desejada,
		nr_seq_estagio,
		nr_grupo_trabalho,
		nr_grupo_planej,
		nm_usuario,
		dt_atualizacao,
		ie_parado,
		ie_obriga_news,
		ie_exclusiva,
		ie_origem_os,
		nr_seq_classif,
		nr_seq_nivel_valor,
		nr_seq_origem,
		ie_prioridade_desen)
	values (
		nr_seq_os_teste_w,
		coalesce(dt_referencia_p,clock_timestamp()),
		'4464',
		1272,
		41,
		'Migração: testes (internos) do projeto ' || obter_form_funcao(cd_funcao_projeto_w),
		'A',
		ds_dano_w,
		cd_funcao_projeto_w,
		nr_seq_grupo_des_w,
		'S',
		4,
		'2',
		coalesce(dt_referencia_p,clock_timestamp()),
		coalesce(dt_referencia_p,clock_timestamp()) + 1,
		coalesce(dt_referencia_p,clock_timestamp()),
		coalesce(dt_referencia_p,clock_timestamp()) + 1,
		1141,
		2,
		1,
		nm_usuario_p,
		coalesce(dt_referencia_p,clock_timestamp()),
		'N',
		'N',
		'P',
		'1',
		22,
		1,
		nr_seq_os_proj_migr_w,
		ie_prioridade_analise_p);

	delete
	from	man_ordem_servico_exec
	where	nr_seq_ordem = nr_seq_os_teste_w;

	delete
	from	man_ordem_ativ_prev
	where	nr_seq_ordem_serv = nr_seq_os_teste_w;

	/*insert into man_ordem_servico_exec (
		nr_sequencia,
		nr_seq_ordem,
		dt_atualizacao,
		nm_usuario,
		nm_usuario_exec,
		qt_min_prev,
		dt_ult_visao,
		nr_seq_funcao,
		dt_recebimento,
		nr_seq_tipo_exec)
	values (
		man_ordem_servico_exec_seq.nextval,
		nr_seq_os_teste_w,
		sysdate,
		nm_usuario_p,
		'Rafael',
		null,
		null,
		null,
		null,
		3);*/
	insert into man_ordem_servico_exec(
		nr_sequencia,
		nr_seq_ordem,
		dt_atualizacao,
		nm_usuario,
		nm_usuario_exec,
		qt_min_prev,
		dt_ult_visao,
		nr_seq_funcao,
		dt_recebimento,
		nr_seq_tipo_exec)
	values (
		nextval('man_ordem_servico_exec_seq'),
		nr_seq_os_teste_w,
		coalesce(dt_referencia_p,clock_timestamp()),
		nm_usuario_p,
		nm_usuario_testes_w,
		60,
		null,
		null,
		null,
		2);

	insert into proj_ordem_servico(
		nr_sequencia,
		nr_seq_proj,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_ordem,
		ie_tipo_ordem)
	values (
		nextval('proj_ordem_servico_seq'),
		nr_seq_projeto_p,
		coalesce(dt_referencia_p,clock_timestamp()),
		nm_usuario_p,
		coalesce(dt_referencia_p,clock_timestamp()),
		nm_usuario_p,
		nr_seq_os_teste_w,
		'TI');
	end;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_os_testes_analista_migr ( nr_seq_projeto_p bigint, ie_prioridade_analise_p bigint, dt_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

