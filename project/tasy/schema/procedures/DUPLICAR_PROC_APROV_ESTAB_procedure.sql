-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicar_proc_aprov_estab ( nr_sequencia_p bigint, cd_estab_p bigint, nm_usuario_p text ) AS $body$
DECLARE


processo_aprovacao_w 		bigint;
cd_processo_aprov_w 		bigint;
nr_sequencia_w			bigint;
process_w			processo_aprov_estrut%rowtype;
nr_sequencia_estrut_w		processo_aprov_estrut.nr_sequencia%type;

type t_processes is table of processo_aprov_estrut%rowtype index by integer;
processes_w t_processes;

c01 CURSOR FOR
SELECT	cd_grupo_material,
	cd_subgrupo_material, 
	cd_classe_material, 
	cd_material, 
	ie_consignado, 
	cd_perfil, 
	ie_padronizado, 
	ie_material_estoque, 
	ie_curva_abc, 
	ie_urgente, 
	vl_compra_mes, 
	cd_operacao_estoque,
	cd_setor_atendimento,
	ie_material_ressup,
	ie_cobra_paciente, 
	nr_seq_motivo_solic, 
	cd_pessoa_fisica, 
	cd_cgc, 
	cd_conta_contabil, 
	ie_receita, 
	ie_classif_custo, 
	ie_tipo_ordem, 
	cd_familia_material, 
	cd_mod_cotacao, 
	cd_intervalo_vl
from	processo_aprov_estrut 
where	cd_processo_aprov = cd_processo_aprov_w;

type t_c01 is table of c01%rowtype index by integer;
c01_w t_c01;

c02 CURSOR FOR
SELECT	ie_responsavel,
	ie_solicitacao_compra,           
	ie_ordem_compra,                                          
	cd_cargo,         
	vl_minimo,                  
	ie_ordem_compra_transf,                      
	vl_maximo,                    
	nm_usuario_regra,                    
	ie_requisicao,                   
	ie_cotacao,                  
	ie_desconsidera_req_transf,                 
	ie_solicitacao_pagto,               
	nr_nivel_aprovacao,               
	qt_minimo_aprovador,              
	ie_nota_fiscal,             
	ie_reg_licitacao
from 	processo_aprov_resp 
where 	cd_processo_aprov = cd_processo_aprov_w;

c02_w	c02%rowtype;

BEGIN

select	nextval('processo_aprovacao_seq')
into STRICT	processo_aprovacao_w 
;

cd_processo_aprov_w := nr_sequencia_p;

insert into processo_aprovacao( cd_processo_aprov,
		ds_processo_aprov,                        
		ie_situacao,                                      
		dt_atualizacao,                            
		nm_usuario,                                
		dt_atualizacao_nrec,                                
		nm_usuario_nrec,                                    
		cd_estabelecimento,                                
		qt_minimo_aprovador,                               
		ie_aprovacao_nivel )
	SELECT 	processo_aprovacao_w,                         
		ds_processo_aprov,                        
		ie_situacao,                                      
		clock_timestamp(),                            
		nm_usuario_p,                                
		clock_timestamp(),                                
		nm_usuario_p,                                    
		cd_estab_p,                                
		qt_minimo_aprovador,                              
		ie_aprovacao_nivel 
	from 	processo_aprovacao 
	where 	cd_processo_aprov = cd_processo_aprov_w;
	
select	coalesce(max(nr_sequencia),0)
into STRICT	nr_sequencia_estrut_w
from 	processo_aprov_estrut;

open c01;
loop
fetch c01 bulk collect into c01_w limit 1000;
exit when c01_w.count = 0;

	for i in 1..c01_w.count loop
		process_w.nr_sequencia := nr_sequencia_estrut_w + i;
        	process_w.cd_processo_aprov := processo_aprovacao_w;
		process_w.dt_atualizacao := clock_timestamp();
		process_w.nm_usuario := nm_usuario_p;
		process_w.cd_estabelecimento := cd_estab_p;
		process_w.cd_grupo_material := c01_w[i].cd_grupo_material;
		process_w.cd_subgrupo_material := c01_w[i].cd_subgrupo_material;
		process_w.cd_classe_material := c01_w[i].cd_classe_material;
		process_w.cd_material := c01_w[i].cd_material;
		process_w.ie_consignado := c01_w[i].ie_consignado;
		process_w.cd_perfil := c01_w[i].cd_perfil;
		process_w.ie_padronizado := c01_w[i].ie_padronizado;
		process_w.ie_material_estoque := c01_w[i].ie_material_estoque;
		process_w.dt_atualizacao_nrec := clock_timestamp();
		process_w.nm_usuario_nrec := nm_usuario_p;
		process_w.ie_curva_abc := c01_w[i].ie_curva_abc;
		process_w.ie_urgente := c01_w[i].ie_urgente;
		process_w.vl_compra_mes := c01_w[i].vl_compra_mes;
		process_w.cd_operacao_estoque := c01_w[i].cd_operacao_estoque;
		process_w.cd_setor_atendimento := c01_w[i].cd_setor_atendimento;
		process_w.ie_material_ressup := c01_w[i].ie_material_ressup;
		process_w.ie_cobra_paciente := c01_w[i].ie_cobra_paciente;
		process_w.nr_seq_motivo_solic := c01_w[i].nr_seq_motivo_solic;
		process_w.cd_pessoa_fisica := c01_w[i].cd_pessoa_fisica;
		process_w.cd_cgc := c01_w[i].cd_cgc;
		process_w.cd_conta_contabil := c01_w[i].cd_conta_contabil;
		process_w.ie_receita := c01_w[i].ie_receita;
		process_w.ie_classif_custo := c01_w[i].ie_classif_custo;
		process_w.ie_tipo_ordem := c01_w[i].ie_tipo_ordem;
		process_w.cd_familia_material := c01_w[i].cd_familia_material;
		process_w.cd_mod_cotacao := c01_w[i].cd_mod_cotacao;
		process_w.cd_intervalo_vl := c01_w[i].cd_intervalo_vl;
        	processes_w(processes_w.count + 1) := process_w;
    	end loop;
	
	forall j in processes_w.first .. processes_w.last
        insert into processo_aprov_estrut values processes_w(j);
   	commit;
	
	processes_w.delete;
	
end loop;
close c01;

for c02_w in c02
loop
begin

	select	coalesce(max(nr_sequencia),0)+ 1
	into STRICT	nr_sequencia_w
	from 	processo_aprov_resp;

	insert into processo_aprov_resp( cd_processo_aprov,
			nr_sequencia,                        
			ie_responsavel,                       
			ie_solicitacao_compra,                    
			ie_ordem_compra,                    
			dt_atualizacao,                   
			nm_usuario,                  
			cd_cargo,                          
			vl_minimo,                         
			dt_atualizacao_nrec,                        
			nm_usuario_nrec,                       
			ie_ordem_compra_transf,                      
			vl_maximo,                    
			nm_usuario_regra,                    
			ie_requisicao,                   
			ie_cotacao,                  
			ie_desconsidera_req_transf,                 
			ie_solicitacao_pagto,               
			nr_nivel_aprovacao,               
			qt_minimo_aprovador,              
			ie_nota_fiscal,             
			ie_reg_licitacao )
		values (	processo_aprovacao_w,        
			nr_sequencia_w,	
			c02_w.ie_responsavel,                       
			c02_w.ie_solicitacao_compra,                    
			c02_w.ie_ordem_compra,                    
			clock_timestamp(),                   
			nm_usuario_p,                  
			c02_w.cd_cargo,                          
			c02_w.vl_minimo,                         
			clock_timestamp(),                        
			nm_usuario_p,                       
			c02_w.ie_ordem_compra_transf,                      
			c02_w.vl_maximo,                    
			c02_w.nm_usuario_regra,                    
			c02_w.ie_requisicao,                   
			c02_w.ie_cotacao,                  
			c02_w.ie_desconsidera_req_transf,                 
			c02_w.ie_solicitacao_pagto,               
			c02_w.nr_nivel_aprovacao,               
			c02_w.qt_minimo_aprovador,              
			c02_w.ie_nota_fiscal,             
			c02_w.ie_reg_licitacao );

end;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_proc_aprov_estab ( nr_sequencia_p bigint, cd_estab_p bigint, nm_usuario_p text ) FROM PUBLIC;

