-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_excluir_lote_fornec ( nr_sequencia_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE



qt_existe_w		integer;
nr_movimento_estoque_w	bigint;
nr_sequencia_nf_w		bigint;
nr_item_nf_w		integer;
ie_commit_w		varchar(1) 	:= 'N';
ds_erro_w		varchar(255) 	:= '';
nr_lote_producao_w      material_lote_fornec.nr_lote_producao%type;

c01 CURSOR FOR
SELECT	nr_movimento_estoque
from	movimento_estoque
where	nr_seq_lote_fornec = nr_sequencia_p
and	ie_origem_documento = '1';


BEGIN


select	count(*)
into STRICT	qt_existe_w
from	lote_fornec_utilizado_v
where	nr_seq_lote_fornec = nr_sequencia_p;

if (qt_existe_w = 0) then	
    select	count(*)
	into STRICT	qt_existe_w
	from	saldo_estoque_lote
	where	nr_seq_lote = nr_sequencia_p;

    if (qt_existe_w > 0) then
        select coalesce(nr_lote_producao,0)
        into STRICT nr_lote_producao_w
        from material_lote_fornec
        where nr_sequencia = nr_sequencia_p;

        if (nr_lote_producao_w > 0) then
            select  count(*)
            into STRICT	qt_existe_w
            from    lote_producao
            where   nr_lote_producao = nr_lote_producao_w
            and (dt_confirmacao IS NOT NULL AND dt_confirmacao::text <> '');
        end if;
    end if;
end if;

if (qt_existe_w = 0) then
	select	count(*)
	into STRICT	qt_existe_w
	from	fornecedor_mat_consig_lote
	where	nr_seq_lote = nr_sequencia_p;
end if;

if (qt_existe_w = 0) then
	select	count(*)
	into STRICT	qt_existe_w
	from	item_requisicao_material
	where	nr_seq_lote_fornec = nr_sequencia_p;
end if;

if (qt_existe_w > 0) then
	ds_erro_w := substr(ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280350),1,255);
end if;

/*Se nao existir utilizaÃ§oes o lote pode ser excluido, porem deve ser desvinculado do movimento de estoque e da nota fiscal*/

if (qt_existe_w = 0) then
	begin
	select	count(*)
	into STRICT	qt_existe_w
	from	nota_fiscal_item
	where	nr_seq_lote_fornec = nr_sequencia_p;
	if (qt_existe_w > 0) then
		update	nota_fiscal_item
		set	nr_seq_lote_fornec  = NULL,
			ds_observacao = substr(ds_observacao || Wheb_mensagem_pck.get_Texto(298768) || nr_seq_lote_fornec,1,255)
		where	nr_seq_lote_fornec = nr_sequencia_p;
		ie_commit_w	:= 'S';
	end if;
	
	select	count(*)
	into STRICT	qt_existe_w
	from	nota_fiscal_item_lote
	where	nr_seq_lote_fornec = nr_sequencia_p;
	if (qt_existe_w > 0) then
		update	nota_fiscal_item_lote
		set	nr_seq_lote_fornec  = NULL
		where	nr_seq_nota = nr_sequencia_nf_w
		and	nr_item_nf = nr_item_nf_w;
		ie_commit_w	:= 'S';
	end if;

	open c01;
	loop
	fetch c01 into
		nr_movimento_estoque_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		update	movimento_estoque
		set	nr_seq_lote_fornec  = NULL,
			ds_observacao = substr(ds_observacao || Wheb_mensagem_pck.get_Texto(298768) || nr_seq_lote_fornec,1,255)
		where	nr_movimento_estoque = nr_movimento_estoque_w;
		ie_commit_w	:= 'S';
	end loop;
	close c01;
	end;
end if;

select	count(*)
into STRICT	qt_existe_w
from	movimento_Estoque
where	nr_seq_lote_fornec = nr_sequencia_p
and     ie_origem_documento <> '7'; -- 7 (Movimento de lote producao)
if (coalesce(ds_erro_w::text, '') = '') and (qt_existe_w > 0) then
	begin
	ds_erro_w := substr(ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280351),1,255);
	
	if (ie_commit_w = 'S') then
		begin
		ie_commit_w := 'N';
		rollback;
		end;
	end if;
	end;
end if;

if (ie_commit_w = 'S') then
	commit;
end if;

ds_erro_p := ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_excluir_lote_fornec ( nr_sequencia_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

