-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_cot_compra_liquida ( nr_cot_compra_p bigint, nm_usuario_p text) AS $body$
DECLARE


vl_total_w			double precision := 0;
vl_total_ww			double precision := 0;
vl_total_item_w			double precision := 0;
vl_rateio_frete_w		double precision := 0;
vl_frete_w			double precision := 0;
vl_desconto_forn_w		double precision := 0;
pr_desconto_forn_w		double precision := 0;
pr_desconto_antec_w		double precision := 0;
pr_juros_negociado_w		double precision := 0;
vl_rateio_desp_w		double precision := 0;
vl_rateio_desconto_w		double precision := 0;
vl_rateio_pr_desc_w		double precision := 0;
vl_rateio_pr_antec_w		double precision := 0;
vl_juros_negociado_w		double precision := 0;
vl_despesa_acessoria_w		double precision := 0;
vl_material_w			double precision := 0;
vl_liquido_w			double precision := 0;
vl_total_liquido_item_w		double precision := 0;
vl_tributo_w			double precision := 0;
pr_desconto_w			double precision := 0;
vl_desconto_w			double precision := 0;
ie_error			varchar(1)  := 'N';
cd_estabelecimento_w		smallint  := 0;
vl_presente_w			double precision := 0;
cd_condicao_pagamento_w		bigint := 0;
nr_seq_cot_forn_w		bigint;
nr_seq_compra_forn_item_w	bigint;
nr_item_cot_compra_w		integer;
ie_desdobra_mat_cotacao_w	varchar(1);
qt_controle_w			bigint := 0;
ds_lista_itens_w		varchar(2000);
nm_usuario_destino_w		varchar(255);
nr_seq_classif_w		bigint;
nr_seq_regra_w			bigint;
nm_comprador_w			comprador.nm_guerra%type;
ds_titulo_w			varchar(80);
ds_mensagem_w			varchar(2000);
ds_lista_itens_est_w		varchar(2000);
cd_material_w			integer;
cd_perfil_w			varchar(10);
vl_despesa_doc_w		double precision := 0;
vl_rateio_despesa_doc_w		double precision := 0;
/* Se tiver setor na regra, envia CI para os setores */

ds_setor_adicional_w            varchar(2000) := '';
/* Campos da regra Usuario da Regra */

cd_setor_regra_usuario_w	integer;
ds_fornecedor_w			pessoa_juridica.ds_razao_social%type;
ds_marca_w			varchar(80);
ie_tipo_status_w		varchar(1);
ds_material_w			varchar(255);
cd_material_ww			cot_compra_forn_item.cd_material%type;
nr_item_w			cot_compra_forn_item.nr_item_cot_compra%type := 0;
ie_frete_w			varchar(1);
nr_seq_item_trib_w		bigint;
vl_frete_rateio_w		cot_compra_forn_item.vl_frete_rateio%type;
ie_tipo_tributo_w		tributo.ie_tipo_tributo%type;
ie_param_190_w			varchar(15);
ie_atualizou_w			varchar(1) := 'N';
ie_forma_pagamento_w		condicao_pagamento.ie_forma_pagamento%type;
qt_parcelas_w           integer;
c01 CURSOR FOR
SELECT	f.nr_sequencia,
	coalesce(f.cd_condicao_pagamento,2),
	coalesce(f.vl_previsto_frete,0),
	coalesce(f.vl_despesa_acessoria,0),
	coalesce(f.vl_desconto,0),
	coalesce(f.pr_desconto,0),
	coalesce(f.pr_desconto_pgto_antec,0),
	coalesce(f.pr_juros_negociado,0),
	sum(coalesce(i.vl_unitario_material,0) * coalesce(i.qt_material,0)) vl_total,
	coalesce(f.vl_despesa_doc,0),
	coalesce(f.ie_frete,'C')
from	cot_compra_forn_item i,
	cot_compra_forn f
where	f.nr_sequencia = i.nr_seq_cot_forn
and	f.nr_cot_compra = nr_cot_compra_p
and (ie_desdobra_mat_cotacao_w = 'N')
group by
	f.nr_sequencia,
	f.cd_cgc_fornecedor,
	f.cd_condicao_pagamento,
	f.vl_previsto_frete,
	f.vl_despesa_acessoria,
	f.vl_desconto,
	f.pr_desconto,
	f.pr_desconto_pgto_antec,
	f.pr_juros_negociado,
	f.vl_despesa_doc,
	f.ie_frete

union all

SELECT	f.nr_sequencia,
	coalesce(f.cd_condicao_pagamento,2),
	coalesce(f.vl_previsto_frete,0),
	coalesce(f.vl_despesa_acessoria,0),
	coalesce(f.vl_desconto,0),
	coalesce(f.pr_desconto,0),
	coalesce(f.pr_desconto_pgto_antec,0),
	coalesce(f.pr_juros_negociado,0),
	0 vl_total,
	coalesce(f.vl_despesa_doc,0),
	coalesce(f.ie_frete,'C')
from	cot_compra_forn_item i,
	cot_compra_forn f
where	f.nr_sequencia = i.nr_seq_cot_forn
and	f.nr_cot_compra = nr_cot_compra_p
and (ie_desdobra_mat_cotacao_w <> 'N')
group by
	f.nr_sequencia,
	f.cd_cgc_fornecedor,
	f.cd_condicao_pagamento,
	f.vl_previsto_frete,
	f.vl_despesa_acessoria,
	f.vl_desconto,
	f.pr_desconto,
	f.pr_desconto_pgto_antec,
	f.pr_juros_negociado,
	f.vl_despesa_doc,
	f.ie_frete;

c02 CURSOR FOR
SELECT	i.nr_sequencia,
	coalesce(i.pr_desconto,0),
	(i.vl_unitario_material * i.qt_material),
	coalesce(i.vl_desconto,0)
from	cot_compra_forn_item i
where	i.nr_seq_cot_forn = nr_seq_cot_forn_w
and	i.nr_cot_compra = nr_cot_compra_p;

c03 CURSOR FOR	
SELECT	b.nr_sequencia,
	b.cd_perfil
from	regra_envio_comunic_compra a,
	regra_envio_comunic_evento b
where	a.nr_sequencia = b.nr_seq_regra
and	a.cd_funcao = 915
and	b.cd_evento = 20
and	b.ie_situacao = 'A'
and	a.cd_estabelecimento = 	cd_estabelecimento_w
and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,nr_cot_compra_p,'CC',obter_perfil_ativo,nm_usuario_p,null),1,1) = 'S';	

c04 CURSOR FOR
SELECT	distinct(a.cd_material)
from	cot_compra_forn_item a,
       	cot_compra_item b
where	a.nr_cot_compra		= b.nr_cot_compra
and	a.nr_item_cot_compra	= b.nr_item_cot_compra
and	b.nr_cot_compra		= nr_cot_compra_p
and not exists (
	SELECT	d.nr_cot_compra
	from	cot_compra_forn_item d
	where	d.nr_cot_compra		= a.nr_cot_compra
	and	d.nr_item_cot_compra	= a.nr_item_cot_compra
	and	d.vl_unitario_material	<> 0);

c05 CURSOR FOR	
SELECT	distinct(obter_controlador_estoque(a.cd_material))
from	cot_compra_forn_item a,
       	cot_compra_item b
where	a.nr_cot_compra		= b.nr_cot_compra
and	a.nr_item_cot_compra	= b.nr_item_cot_compra
and	b.nr_cot_compra		= nr_cot_compra_p
and not exists (
	SELECT	d.nr_cot_compra
	from	cot_compra_forn_item d
	where	d.nr_cot_compra		= a.nr_cot_compra
	and	d.nr_item_cot_compra	= a.nr_item_cot_compra
	and	d.vl_unitario_material	<> 0);

c06 CURSOR FOR
SELECT	coalesce(a.cd_setor_atendimento,0) cd_setor_atendimento
from	regra_envio_comunic_usu a
where	a.nr_seq_evento = nr_seq_regra_w;

c07 CURSOR FOR
SELECT	a.nr_sequencia
from	cot_compra_forn_item_tr a
where	a.nr_seq_cot_item_forn = nr_seq_compra_forn_item_w;



BEGIN
CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(297859),'CALCULAR_COT_COMPRA_LIQUIDA',0);

if (coalesce(nr_cot_compra_p::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(183078);
end if;

select	cd_estabelecimento,
	sup_obter_nome_comprador(cd_estabelecimento, cd_comprador)
into STRICT	cd_estabelecimento_w,
	nm_comprador_w
from	cot_compra
where	nr_cot_compra = nr_cot_compra_p;

ie_param_190_w := obter_param_usuario(915, 190, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, cd_estabelecimento_w, ie_param_190_w);

select	coalesce(max(ie_desdobra_mat_cotacao),'N')
into STRICT	ie_desdobra_mat_cotacao_w
from	parametro_compras
where	cd_estabelecimento = cd_estabelecimento_w;

select	coalesce(obter_valor_doc_cot_compra(nr_cot_compra_p),0)
into STRICT	vl_despesa_doc_w
;

update	cot_compra_forn
set	vl_despesa_doc = vl_despesa_doc_w
where	nr_cot_compra = nr_cot_compra_p;

if (ie_desdobra_mat_cotacao_w <> 'N') then
	vl_total_ww := coalesce(obter_valor_rateio_cotacao(nr_cot_compra_p),0);
end if;


--begin
open c01;
loop
fetch c01 into	
	nr_seq_cot_forn_w,
	cd_condicao_pagamento_w,
	vl_frete_w,
	vl_despesa_acessoria_w,
	vl_desconto_forn_w,
	pr_desconto_forn_w,
	pr_desconto_antec_w,
	pr_juros_negociado_w,
	vl_total_w,
	vl_despesa_doc_w,
	ie_frete_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
    begin
	
	if (ie_desdobra_mat_cotacao_w <> 'N') then
		vl_total_w := vl_total_ww;
	end if;

	if (cd_condicao_pagamento_w > 0) then
	
		select	ie_forma_pagamento
		into STRICT	ie_forma_pagamento_w
		from	condicao_pagamento
		where	cd_condicao_pagamento = cd_condicao_pagamento_w;
		
		if (ie_forma_pagamento_w <> 10) then
		
			select	count(*)
			into STRICT	qt_parcelas_w
			from	parcela
			where	cd_condicao_pagamento = cd_condicao_pagamento_w;
			
			if (qt_parcelas_w = 0)then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(711200,'_DS_CONDICAO_PAGAMENTO='|| obter_desc_cond_pagto(cd_condicao_pagamento_w));
			end if;
		end if;
	end if;
	
    	CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(297859),'CALCULAR_COT_COMPRA_LIQUIDA',-1);	
	open c02;
	loop
	fetch c02 into	
		nr_seq_compra_forn_item_w,
		pr_desconto_w,
		vl_material_w,
		vl_desconto_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		begin
		select	coalesce(sum(CASE WHEN a.ie_soma_diminui='D' THEN (coalesce(b.vl_tributo,0) * - 1) WHEN a.ie_soma_diminui='S' THEN  coalesce(b.vl_tributo,0)  ELSE 0 END ),0)
		into STRICT	vl_tributo_w
		from	cot_compra_forn_item_tr b,
			tributo a
		where	b.nr_cot_compra = nr_cot_compra_p
		and	b.nr_seq_cot_item_forn = nr_seq_compra_forn_item_w
		and	a.cd_tributo = b.cd_tributo;
		exception
		when others then
			vl_tributo_w := 0;
		end;
		
		if (coalesce(vl_total_w,0) > 0) and (ie_frete_w = 'F') then
			vl_rateio_frete_w	:= (vl_material_w / vl_total_w) * vl_frete_w;
		else
			vl_rateio_frete_w	:= 0;
		end if;
		
		if (coalesce(vl_total_w,0) > 0) then
			begin
			vl_rateio_desp_w	:= (vl_material_w / vl_total_w) * vl_despesa_acessoria_w;
			vl_rateio_despesa_doc_w	:= (vl_material_w / vl_total_w) * vl_despesa_doc_w;
			vl_rateio_desconto_w	:= (vl_material_w / vl_total_w) * vl_desconto_forn_w;
			vl_rateio_pr_desc_w	:= (vl_material_w / vl_total_w) * ((pr_desconto_forn_w / 100) * vl_total_w);
			vl_rateio_pr_antec_w	:= (vl_material_w / vl_total_w) * ((pr_desconto_antec_w / 100) * vl_total_w);
			vl_juros_negociado_w	:= (vl_material_w / vl_total_w) * ((pr_juros_negociado_w / 100) * vl_total_w);
			end;
		else
			begin
			vl_rateio_desp_w	:= 0;
			vl_rateio_desconto_w	:= 0;
			vl_rateio_pr_desc_w	:= 0;
			vl_rateio_despesa_doc_w	:= 0;
			vl_rateio_pr_antec_w	:= 0;
			vl_juros_negociado_w	:= 0;
			end;
		end if;
		
		select 	coalesce(obter_tipo_status_aval_marca(obter_dados_marca_material(i.ds_marca, i.cd_material,'C')),'A'),
			substr(obter_desc_material(i.cd_material),1,255),
			obter_dados_pf_pj('', i.cd_cgc_fornecedor, 'N'),
			i.ds_marca,
			i.cd_material,
			i.nr_item_cot_compra
		into STRICT	ie_tipo_status_w,
			ds_material_w,
			ds_fornecedor_w,
			ds_marca_w,
			cd_material_ww,
			nr_item_w
		from 	cot_compra_forn_item i
		where	nr_cot_compra		= nr_cot_compra_p
		and	nr_sequencia		= nr_seq_compra_forn_item_w;
		
		if (ie_tipo_status_w <> 'A') then
			begin
			CALL gerar_historico_cotacao(
				nr_cot_compra_p,
				WHEB_MENSAGEM_PCK.get_texto(297860),
				WHEB_MENSAGEM_PCK.get_texto(297864,'NR_ITEM_W='||nr_item_w||
							';CD_MATERIAL_WW='||cd_material_ww||
							';DS_MATERIAL_W='||ds_material_w||
							';DS_MARCA_W='||ds_marca_w||
							';DS_FORNECEDOR_W='||ds_fornecedor_w),
				'S',
				nm_usuario_p);		
			end;
		end if;
		end;
		
		select	coalesce(max(vl_frete_rateio),0),
			sum(coalesce(vl_unitario_material,0) * coalesce(qt_material,0))
		into STRICT	vl_frete_rateio_w,
			vl_total_item_w
		from	cot_compra_forn_item
		where	nr_sequencia = nr_seq_compra_forn_item_w;
		
		
		if (ie_param_190_w = 'S') then
			open C07;
			loop
			fetch C07 into	
				nr_seq_item_trib_w;
			EXIT WHEN NOT FOUND; /* apply on C07 */
				begin
				
				select	a.ie_tipo_tributo
				into STRICT	ie_tipo_tributo_w
				from	tributo a,
					cot_compra_forn_item_tr b
				where	a.cd_tributo = b.cd_tributo
				and	b.nr_sequencia = nr_seq_item_trib_w;
				
				select CASE WHEN vl_frete_w=0 THEN vl_frete_rateio_w  ELSE vl_rateio_frete_w END
				into STRICT vl_frete_rateio_w
				;
				
				if (vl_frete_rateio_w > 0) and (ie_tipo_tributo_w in ('IPI','ICMS','ICMSST')) then
					
					select dividir(pr_tributo , 100) * (vl_total_item_w+ vl_frete_rateio_w)
					into STRICT vl_tributo_w
					from cot_compra_forn_item_tr
					where nr_sequencia = nr_seq_item_trib_w;
					
					begin
					if (pr_desconto_w > 0) then
						vl_liquido_w := (vl_material_w - ((pr_desconto_w / 100) * vl_material_w) +
							vl_rateio_frete_w + vl_tributo_w + vl_rateio_desp_w + vl_rateio_despesa_doc_w -
							vl_rateio_desconto_w - vl_rateio_pr_desc_w - vl_rateio_pr_antec_w + vl_juros_negociado_w);
					else
						vl_liquido_w := (vl_material_w + vl_rateio_frete_w + vl_tributo_w + vl_rateio_desp_w +
							vl_rateio_despesa_doc_w - vl_rateio_desconto_w - vl_rateio_pr_desc_w - vl_rateio_pr_antec_w +
							vl_juros_negociado_w) - coalesce(vl_desconto_w,0);
					end if;
					exception
					when others then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(450809);
						/*O sistema nao conseguiu calcular a cotacao de compras porque ocorreu um erro. Verifique na pasta Cotacao fornecedor se tem algum item com valor ou com quantidade muito grande que esteja estourando as variaveis da procedure devido a multiplicacao do valor*/

					end;	
										
					/* calculo do item  da cotacao a valor presente */

					vl_presente_w := calcular_cot_vl_presente(cd_estabelecimento_w, vl_liquido_w, cd_condicao_pagamento_w, vl_presente_w);
					
					begin
					update	cot_compra_forn_item
					set	vl_frete_rateio		= vl_frete_rateio_w,
						vl_preco_liquido	= vl_liquido_w,
						vl_total_liquido_item	= vl_liquido_w,
						vl_presente		= vl_presente_w,
						vl_unid_fornec		= vl_rateio_desp_w,
						vl_unitario_liquido	= dividir(vl_presente_w, qt_material)
					where	nr_cot_compra		= nr_cot_compra_p
					and	nr_sequencia		= nr_seq_compra_forn_item_w;
					exception when others then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(183079);
					end;
					
					update	cot_compra_forn_item_tr
					set	vl_tributo = vl_tributo_w
					where	nr_sequencia = nr_seq_item_trib_w;	
					
					ie_atualizou_w := 'S';
					
				end if;
				end;
			end loop;
			close C07;
		end if;
		
		
		
		if (ie_atualizou_w = 'N') then
			begin
			
			if (pr_desconto_w > 0) then
				vl_liquido_w := (vl_material_w - ((pr_desconto_w / 100) * vl_material_w) +
					vl_rateio_frete_w + vl_tributo_w + vl_rateio_desp_w + vl_rateio_despesa_doc_w -
					vl_rateio_desconto_w - vl_rateio_pr_desc_w - vl_rateio_pr_antec_w + vl_juros_negociado_w);
			else
				vl_liquido_w := (vl_material_w + vl_rateio_frete_w + vl_tributo_w + vl_rateio_desp_w +
					vl_rateio_despesa_doc_w - vl_rateio_desconto_w - vl_rateio_pr_desc_w - vl_rateio_pr_antec_w +
					vl_juros_negociado_w) - coalesce(vl_desconto_w,0);
			end if;
			exception
			when others then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(450809);
				/*O sistema nao conseguiu calcular a cotacao de compras porque ocorreu um erro. Verifique na pasta Cotacao fornecedor se tem algum item com valor ou com quantidade muito grande que esteja estourando as variaveis da procedure devido a multiplicacao do valor*/

			end;
			
			/* calculo do item  da cotacao a valor presente */

			vl_presente_w := calcular_cot_vl_presente(cd_estabelecimento_w, vl_liquido_w, cd_condicao_pagamento_w, vl_presente_w);
			
			begin		
			update	cot_compra_forn_item
			set	vl_frete_rateio		= vl_frete_rateio_w,
				vl_preco_liquido	= vl_liquido_w,
				vl_total_liquido_item	= vl_liquido_w,
				vl_presente		= vl_presente_w,
				vl_unid_fornec		= vl_rateio_desp_w,
				vl_unitario_liquido	= dividir(vl_presente_w, qt_material)
			where	nr_cot_compra		= nr_cot_compra_p
			and	nr_sequencia		= nr_seq_compra_forn_item_w;
			exception when others then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(183079);
			end;
		end if;
		
	ie_atualizou_w := 'N';
	end loop;
	close c02;			
	end;
end loop;
close c01;
--exception

--when others then

	--wheb_mensagem_pck.exibir_mensagem_abort(450809);

	/*O sistema nao conseguiu calcular a cotacao de compras porque ocorreu um erro. Verifique na pasta Cotacao fornecedor se tem algum item com valor ou com quantidade muito grande que esteja estourando as variaveis da procedure devido a multiplicacao do valor*/


--end;
if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

open c03;
loop
fetch c03 into	
	nr_seq_regra_w,
	cd_perfil_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	begin

	open C06;
	loop
	fetch C06 into	
		cd_setor_regra_usuario_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		begin
		if (cd_setor_regra_usuario_w <> 0) and (obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N') then
			ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
		end if;
		end;
	end loop;
	close C06;

	open c04;
	loop
	fetch c04 into	
		cd_material_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin
		ds_lista_itens_w := substr(ds_lista_itens_w || cd_material_w || ' - ' || obter_desc_material(cd_material_w) || chr(13) || chr(10),1,2000);
		end;
	end loop;
	close c04;
	
	ds_lista_itens_w	:= substr(ds_lista_itens_w,1,length(ds_lista_itens_w)-2);

	if (coalesce(ds_lista_itens_w::text, '') = '') then
		ds_lista_itens_w := WHEB_MENSAGEM_PCK.get_texto(297865);
	end if;	
	
	open c05;
	loop
	fetch c05 into	
		cd_material_w;
	EXIT WHEN NOT FOUND; /* apply on c05 */
		begin
		ds_lista_itens_est_w := substr(ds_lista_itens_est_w || cd_material_w || ' - ' || obter_desc_material(cd_material_w) || chr(13) || chr(10),1,2000);
		end;
	end loop;
	close c05;
	
	ds_lista_itens_est_w	:= substr(ds_lista_itens_est_w,1,length(ds_lista_itens_est_w)-2);
		
	if (coalesce(ds_lista_itens_est_w::text, '') = '') then
		ds_lista_itens_est_w := WHEB_MENSAGEM_PCK.get_texto(297865);
	end if;	

	nm_usuario_destino_w := obter_usuarios_comunic_compras(nr_cot_compra_p,null,20,nr_seq_regra_w,null);
	
	select	max(b.ds_titulo),
		max(b.ds_comunicacao) ds_comunicacao
	into STRICT	ds_titulo_w,
		ds_mensagem_w
	from	regra_envio_comunic_compra a,
		regra_envio_comunic_evento b
	where	a.nr_sequencia = b.nr_seq_regra
	and	b.cd_evento = 20
	and	a.cd_estabelecimento = cd_estabelecimento_w
	and	b.nr_sequencia = nr_seq_regra_w;
	
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@nr_documento',nr_cot_compra_p),1,2000);
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@comprador',nm_comprador_w),1,2000);
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@itens_est_nao_cotados',ds_lista_itens_est_w),1,2000);
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@itens_nao_cotados',ds_lista_itens_w),1,2000);
	ds_mensagem_w := substr(ds_mensagem_w,1,2000);

	if (nm_usuario_destino_w IS NOT NULL AND nm_usuario_destino_w::text <> '') then
		begin
		select	max(obter_classif_comunic('F'))
		into STRICT	nr_seq_classif_w
		;
	
		if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then
			cd_perfil_w := cd_perfil_w ||',';
		end if;
		
		CALL gerar_comunic_padrao(
			clock_timestamp(),
			ds_titulo_w,
			ds_mensagem_w,
			nm_usuario_p,
			'N',
			nm_usuario_destino_w,
			'N',
			nr_seq_classif_w,
			cd_perfil_w,
			null,
			ds_setor_adicional_w,
			clock_timestamp(),
			null,
			null);
		end;
	end if;	
	end;
end loop;
close c03;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_cot_compra_liquida ( nr_cot_compra_p bigint, nm_usuario_p text) FROM PUBLIC;

