-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_data_subsequente ( nr_seq_cliente_p bigint, nm_usuario_p text) AS $body$
DECLARE


-- variáveis.
nr_seq_proposta_w		bigint;	-- Sequência da proposta do cliente.
nr_seq_item_w		bigint;	-- Sequência do Item da Proposta.
nr_seq_parcela_w		bigint;	-- Sequência da Parcela/forma de Pagamento
qt_carencia_w		bigint;	-- Quandidade Carência
qt_frequencia_w		bigint;	-- Quantidade Frequência
dt_revisao_prevista_w	timestamp;		-- Data prevista fechamento
dt_vencimento_novo_w	timestamp;		-- Nova data de vencimento das parcelas.
dt_vencimento_w		timestamp;		-- Antiga data de vencimento das parcelas.
ie_primeiro_mes_w		boolean;		-- Verifica se é a primeira parcela.
-- Proposta
c01 CURSOR FOR
SELECT	a.nr_sequencia
from	com_cliente_proposta a
where	a.nr_seq_cliente = nr_seq_cliente_p
and	coalesce(a.dt_aprovacao::text, '') = ''
and	coalesce(a.dt_cancelamento::text, '') = ''
order by	a.nr_sequencia;

-- Items
c02 CURSOR FOR
SELECT	b.nr_sequencia,
	coalesce(b.qt_carencia,1),
	1
from	com_cliente_prop_item b
where	b.nr_seq_proposta = nr_seq_proposta_w
and	coalesce(b.ie_orcam_coml_wheb,'N') = 'S'
order by	b.nr_sequencia;

-- Parcela/Forma de pagamento
c03 CURSOR FOR
SELECT	c.nr_sequencia
from	com_cliente_prop_parc c
where	c.nr_seq_prop_item = nr_seq_item_w
order by	c.dt_vencimento asc, c.nr_sequencia;


BEGIN
select	max(dt_revisao_prevista)
into STRICT	dt_revisao_prevista_w
from	com_cliente
where	nr_sequencia = nr_seq_cliente_p;

open C01;
loop
fetch C01 into
	nr_seq_proposta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	open C02;
	loop
	fetch C02 into
		nr_seq_item_w,
		qt_carencia_w,
		qt_frequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		ie_primeiro_mes_w := true;
		open C03;
		loop
		fetch C03 into
			nr_seq_parcela_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			if (ie_primeiro_mes_w) then
				begin
				dt_vencimento_novo_w	:= PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_revisao_prevista_w,qt_carencia_w,0), 'dd', 0);
				ie_primeiro_mes_w	:= false;
				end;
			else
				dt_vencimento_novo_w	:= PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_vencimento_w,qt_frequencia_w,0), 'dd', 0);
			end if;

			dt_vencimento_w := dt_vencimento_novo_w;

			update	com_cliente_prop_parc
			set	dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p,
				dt_vencimento		= PKG_DATE_UTILS.get_Date(PKG_DATE_UTILS.extract_field('YEAR', dt_vencimento_novo_w), PKG_DATE_UTILS.extract_field('MONTH', dt_vencimento_novo_w), 10)
							--to_date('10/'||to_char(dt_vencimento_novo_w,'mm/yyyy'),'dd/mm/yyyy')
			where	nr_seq_prop_item	= nr_seq_item_w
			and	nr_sequencia		= nr_seq_parcela_w;
			end;
		end loop;
		close C03;
		end;
	end loop;
	close C02;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_data_subsequente ( nr_seq_cliente_p bigint, nm_usuario_p text) FROM PUBLIC;

