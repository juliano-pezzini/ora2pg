-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_saldo_nota_credito (nr_seq_nota_credito_p bigint, nm_usuario_p text) AS $body$
DECLARE


-- Edgar 06/04/2010, não dar commit nesta procedure
vl_titulos_w		double precision;
vl_baixa_w		double precision;
vl_nc_tit_rec_w		double precision;
vl_bordero_nc_w		double precision;
ie_cancelado_w		varchar(1)	:= 'N';
vl_mensalidade_ops_w	double precision;
vl_item_mens_w		double precision;


BEGIN
					/* baixas da nota de crédito; se for de título a pagar, não precisa deduzir do saldo
					porque o borderô de NC, ou o próprio título já deduz */
select	coalesce(sum(vl_baixa),0)
into STRICT	vl_baixa_w
from	nota_credito_baixa
where	nr_seq_nota_credito	= nr_seq_nota_credito_p
and	coalesce(nr_seq_tit_pagar_baixa::text, '') = '';

select	coalesce(sum(a.vl_titulo),0)		/* títulos a pagar gerados a partir da nota de crédito */
into STRICT	vl_titulos_w
from	titulo_pagar a
where	a.nr_seq_nota_credito	= nr_seq_nota_credito_p
and	a.ie_situacao		<> 'C';

select	coalesce(sum(a.vl_nota_credito),0)		/* valor da nota de crédito que foi vinculado a um título a receber */
into STRICT	vl_nc_tit_rec_w
from	titulo_receber_nc a
where	a.nr_seq_nota_credito	= nr_seq_nota_credito_p
and	coalesce(a.nr_seq_liq::text, '') = '';

select	coalesce(sum(a.vl_nota_credito),0)		/* valor da nota de crédito que foi vinculado a um borderô de notas de crédito */
into STRICT	vl_bordero_nc_w
from	bordero_nc_nota_credito a
where	a.nr_seq_nota_credito	= nr_seq_nota_credito_p;

select	coalesce(sum(a.vl_item),0)
into STRICT	vl_mensalidade_ops_w
from	pls_segurado_mensalidade a
where	a.nr_seq_nota_credito	= nr_seq_nota_credito_p;

begin
select	coalesce(sum(a.vl_item),0)
into STRICT	vl_item_mens_w
from	pls_mensalidade_seg_item a
where	a.nr_seq_nota_credito	= nr_seq_nota_credito_p;
exception
when others then
	vl_item_mens_w	:= 0;
end;

update	nota_credito
set	vl_saldo	= (coalesce(vl_nota_credito,0) - coalesce(vl_titulos_w,0) - coalesce(vl_baixa_w,0) -
				coalesce(vl_nc_tit_rec_w,0) - coalesce(vl_bordero_nc_w,0) - coalesce(abs(vl_mensalidade_ops_w),0) -
				coalesce(abs(vl_item_mens_w),0))
where	nr_sequencia	= nr_seq_nota_credito_p;

select	coalesce(max(ie_cancelamento),'N')
into STRICT	ie_cancelado_w
from	nota_credito_baixa a
where	a.nr_seq_nota_credito	= nr_seq_nota_credito_p;

update	nota_credito
set	ie_situacao	= CASE WHEN vl_saldo=0 THEN CASE WHEN ie_cancelado_w='S' THEN 'C'  ELSE 'L' END   ELSE 'A' END ,
	dt_cancelamento = CASE WHEN vl_saldo=0 THEN CASE WHEN ie_cancelado_w='S' THEN coalesce(to_date(obter_dados_titulo_receber(NR_TITULO_RECEBER, 'L'),'dd/mm/yyyy hh24:mi:ss'),clock_timestamp())  ELSE null END   ELSE null END  /*AAMFIRMO OS 746571, incluir data do cancelamento quando for cancelada.*/
where	nr_sequencia	= nr_seq_nota_credito_p;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_saldo_nota_credito (nr_seq_nota_credito_p bigint, nm_usuario_p text) FROM PUBLIC;

