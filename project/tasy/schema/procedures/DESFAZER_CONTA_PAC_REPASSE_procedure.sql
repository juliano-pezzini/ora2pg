-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE desfazer_conta_pac_repasse ( nr_interno_conta_p bigint, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE


/*
ie_opcao_p
'M' - desfazer material repasse 
'P' - desfazer procedimento repasse
'T' - desfazer material e procedimento
*/
ie_proc_mat_w		varchar(1);
nr_sequencia_w		bigint;
nr_lote_contabil_w	bigint;
ie_status_w		varchar(10);
nr_seq_origem_w		bigint;
cont_rep_item_w		bigint;
cont_rep_item_vinc_w	bigint;
nr_sequencia_item_w	procedimento_repasse.nr_sequencia%type;

c01 CURSOR FOR
SELECT	'P' ie_proc_mat,
	b.nr_sequencia,
	a.nr_sequencia,
	b.nr_lote_contabil,
	coalesce(c.ie_status, 'A') ie_status,
	coalesce(b.nr_seq_origem,0)
FROM procedimento_paciente a, procedimento_repasse b
LEFT OUTER JOIN repasse_terceiro c ON (b.nr_repasse_terceiro = c.nr_repasse_terceiro)
WHERE b.nr_seq_procedimento	= a.nr_sequencia  and a.nr_interno_conta	= nr_interno_conta_p and (ie_opcao_p in ('T', 'P')) and coalesce(b.ie_bloq_laudo_liberado,'N') = 'N' /*and	b.nr_seq_origem		is null 	Bruna OS86841
and	not exists	(select	1
			from	Procedimento_Repasse x
			where	x.nr_seq_origem		= b.nr_sequencia)*/
union
	
SELECT	'M' ie_proc_mat,
	b.nr_sequencia,
	a.nr_sequencia,
	b.nr_lote_contabil,
	coalesce(c.ie_status, 'A') ie_status,
	coalesce(b.nr_seq_origem,0)
FROM material_atend_paciente a, material_repasse b
LEFT OUTER JOIN repasse_terceiro c ON (b.nr_repasse_terceiro = c.nr_repasse_terceiro)
WHERE b.nr_seq_material	= a.nr_sequencia  and a.nr_interno_conta	= nr_interno_conta_p and (ie_opcao_p in ('T', 'M')) /*and	b.nr_seq_origem		is null
and	not exists (	select	1
			from	material_repasse x
			where	x.nr_seq_origem		= b.nr_sequencia)*/
 order by 6 desc;


BEGIN

open c01;
loop
fetch c01 into
	ie_proc_mat_w,
	nr_sequencia_w,
	nr_sequencia_item_w,
	nr_lote_contabil_w,
	ie_status_w,
	nr_seq_origem_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	if (ie_proc_mat_w	= 'P') then
		if (coalesce(nr_lote_contabil_w,0) > 0) or (ie_status_w = 'F') then

			insert	into procedimento_repasse(NR_SEQUENCIA,
				NR_SEQ_PROCEDIMENTO,
				VL_REPASSE,
				DT_ATUALIZACAO,
				NM_USUARIO,
				NR_SEQ_TERCEIRO,
				NR_LOTE_CONTABIL,
				NR_REPASSE_TERCEIRO,
				CD_CONTA_CONTABIL,
				NR_SEQ_TRANS_FIN,
				VL_LIBERADO,
				NR_SEQ_ITEM_RETORNO,
				IE_STATUS,
				NR_SEQ_ORIGEM,
				CD_REGRA,
				DT_LIBERACAO,
				CD_MEDICO,
				DT_CONTABIL_TITULO,
				NR_SEQ_RET_GLOSA,
				DT_CONTABIL,
				VL_ORIGINAL_REPASSE)
			SELECT	nextval('procedimento_repasse_seq'),
				nr_seq_procedimento,
				vl_repasse  * -1,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_terceiro,
				0,
				CASE WHEN ie_status_w='A' THEN  nr_repasse_terceiro  ELSE null END ,
				cd_conta_contabil,
				nr_seq_trans_fin,
				vl_liberado * -1,
				nr_seq_item_retorno,
				'E',
				nr_sequencia,
				cd_regra,
				null,
				cd_medico,
				null,
				nr_seq_ret_glosa,
				null,
				vl_original_repasse
			from	Procedimento_repasse
			where	nr_sequencia	= nr_sequencia_w;

		else
			delete	from proc_mat_repasse_terc a
			where	nr_seq_proc_repasse	= nr_sequencia_w;
			
			delete	from procedimento_repasse a
			where	a.nr_seq_origem	= nr_sequencia_w;
			
			delete	from procedimento_repasse a
			where	a.nr_sequencia	= nr_sequencia_w;
			
			update 	procedimento_paciente
			set 	vl_repasse_calc 	= 0
			where	nr_sequencia	= nr_sequencia_item_w;
						
		end if;
	else
		if (coalesce(nr_lote_contabil_w,0) > 0) or (ie_status_w = 'F') then

			insert	into material_repasse(NR_SEQUENCIA,
				NR_SEQ_MATERIAL,
				VL_REPASSE,
				DT_ATUALIZACAO,
				NM_USUARIO,
				NR_SEQ_TERCEIRO,
				NR_LOTE_CONTABIL,
				NR_REPASSE_TERCEIRO,
				CD_CONTA_CONTABIL,
				NR_SEQ_TRANS_FIN,
				VL_LIBERADO,
				NR_SEQ_ITEM_RETORNO,
				IE_STATUS,
				NR_SEQ_ORIGEM,
				CD_REGRA,
				DT_LIBERACAO,
				CD_MEDICO,
				DT_CONTABIL_TITULO,
				NR_SEQ_RET_GLOSA,
				DT_CONTABIL,
				VL_ORIGINAL_REPASSE)
			SELECT	nextval('material_repasse_seq'),
				nr_seq_material,
				vl_repasse  * -1,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_terceiro,
				0,
				CASE WHEN ie_status_w='A' THEN  nr_repasse_terceiro  ELSE null END ,
				cd_conta_contabil,
				nr_seq_trans_fin,
				vl_liberado * -1,
				nr_seq_item_retorno,
				'E',
				nr_sequencia,
				cd_regra,
				null,
				cd_medico,
				null,
				nr_seq_ret_glosa,
				null,
				vl_original_repasse
			from	material_repasse
			where	nr_sequencia	= nr_sequencia_w;

		else
			delete	from material_repasse a
			where	a.nr_seq_origem	= nr_sequencia_w;
			
			delete	from material_repasse a
			where	a.nr_sequencia	= nr_sequencia_w;
			
			update	material_atend_paciente
			set	vl_repasse_calc	= 0
			where	nr_sequencia	= nr_sequencia_item_w;


		end if;
	end if;

end loop;
close c01;

select	count(*)
into STRICT	cont_rep_item_w
from	repasse_terceiro_item
where	nr_interno_conta	= nr_interno_conta_p
and	coalesce(nr_repasse_terceiro::text, '') = '';

select	count(*)
into STRICT	cont_rep_item_vinc_w
from	repasse_terceiro_item
where	nr_interno_conta	= nr_interno_conta_p
and	(nr_repasse_terceiro IS NOT NULL AND nr_repasse_terceiro::text <> '');

if (coalesce(cont_rep_item_vinc_w,0) <> 0) then
	CALL Gerar_Repasse_Conta_Estorno(nr_interno_conta_p,nm_usuario_p);
elsif (coalesce(cont_rep_item_w,0) <> 0) then
	delete	FROM repasse_terceiro_item
	where	nr_interno_conta	= nr_interno_conta_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desfazer_conta_pac_repasse ( nr_interno_conta_p bigint, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

