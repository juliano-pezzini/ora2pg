-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_dev_solic_unitarizacao ( nm_usuario_p text, cd_estabelecimento_p bigint, nr_sequencia_p bigint, qt_devolucao_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


nr_seq_lote_fornec_w		bigint;
cd_unidade_medida_w		varchar(30);
qt_material_w			double precision;
qt_material_estoque_w		double precision;
cd_local_estoque_origem_w	smallint;
cd_local_estoque_destino_w	smallint;
cd_material_w			integer;
dt_validade_w			timestamp;
ds_lote_fornec_w		varchar(30);
cd_unidade_medida_estoque_w	varchar(30);
cd_operacao_estoque_st_w	smallint;
cd_operacao_estoque_et_w	smallint;
cd_setor_atendimento_w		integer := OBTER_SETOR_ATIVO;


BEGIN
cd_local_estoque_origem_w := somente_numero(coalesce(obter_valor_param_usuario(143, 385, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'0'));

select	nr_seq_lote_fornec,
	cd_unidade_medida,
	coalesce(qt_material,0),
	CASE WHEN cd_local_estoque_origem_w=0 THEN  cd_local_estoque_origem  ELSE cd_local_estoque_origem_w END ,
	cd_local_estoque_destino
into STRICT	nr_seq_lote_fornec_w,
	cd_unidade_medida_w,
	qt_material_w,
	cd_local_estoque_origem_w,
	cd_local_estoque_destino_w
from	solic_unitarizacao
where	nr_sequencia = nr_sequencia_p;



if (qt_devolucao_p > obter_saldo_devolucao_unit(nr_sequencia_p)) then
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(280168);
end if;

if (nr_seq_lote_fornec_w IS NOT NULL AND nr_seq_lote_fornec_w::text <> '') then
	select	cd_material,
		dt_validade,
		ds_lote_fornec
	into STRICT	cd_material_w,
		dt_validade_w,
		ds_lote_fornec_w
	from	material_lote_fornec
	where	nr_sequencia = nr_seq_lote_fornec_w;
end if;

select	cd_unidade_medida_estoque
into STRICT	cd_unidade_medida_estoque_w
from	material
where	cd_material = cd_material_w;

qt_material_estoque_w := obter_quantidade_convertida(cd_material_w, qt_devolucao_p, cd_unidade_medida_w, 'UME');
cd_operacao_estoque_st_w := sup_obter_operacao_unit('STD');
cd_operacao_estoque_et_w := sup_obter_operacao_unit('ETD');

if (coalesce(cd_operacao_estoque_st_w::text, '') = '') then
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(280169);
end if;

if (coalesce(cd_operacao_estoque_et_w::text, '') = '') then
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(280170);
end if;

if (coalesce(ds_erro_p::text, '') = '') then
	begin
	if (cd_local_estoque_origem_w <> cd_local_estoque_destino_w) then
		--Gera o movimento de estoque de saída do local de destino da solicitação de unitarização.
		insert into movimento_estoque(
				nr_movimento_estoque,
				cd_estabelecimento,
				cd_local_estoque,
				dt_movimento_estoque,
				cd_operacao_estoque,
				cd_acao,
				cd_material,
				dt_mesano_referencia,
				qt_movimento,
				dt_atualizacao,
				nm_usuario,
				ie_origem_documento,
				nr_documento,
				nr_sequencia_item_docto,
				nr_sequencia_documento,
				vl_movimento,
				cd_unidade_medida_estoque,
				cd_setor_atendimento,
				qt_estoque,
				dt_processo,
				cd_local_estoque_destino,
				cd_centro_custo,
				cd_unidade_med_mov,
				cd_conta_contabil,
				cd_fornecedor,
				nr_seq_lote_fornec,
				dt_validade,
				cd_lote_fabricacao)
			values (	nextval('movimento_estoque_seq'),
				cd_estabelecimento_p,
				cd_local_estoque_destino_w,
				clock_timestamp(),
				cd_operacao_estoque_st_w,
				1,
				cd_material_w,
				trunc(clock_timestamp(),'mm'),
				qt_devolucao_p,
				clock_timestamp(),
				nm_usuario_p,
				'18',
				nr_sequencia_p,
				null,
				0,
				0,
				cd_unidade_medida_estoque_w,
				cd_setor_atendimento_w,
				qt_material_estoque_w,
				null,
				null,
				null,
				cd_unidade_medida_w,
				null,
				null,
				nr_seq_lote_fornec_w,
				dt_validade_w,
				ds_lote_fornec_w);

		--Gera o movimento de estoque de entrada no local de origem da solicitação de unitarização.
		insert into movimento_estoque(
				nr_movimento_estoque,
				cd_estabelecimento,
				cd_local_estoque,
				dt_movimento_estoque,
				cd_operacao_estoque,
				cd_acao,
				cd_material,
				dt_mesano_referencia,
				qt_movimento,
				dt_atualizacao,
				nm_usuario,
				ie_origem_documento,
				nr_documento,
				nr_sequencia_item_docto,
				nr_sequencia_documento,
				vl_movimento,
				cd_unidade_medida_estoque,
				cd_setor_atendimento,
				qt_estoque,
				dt_processo,
				cd_local_estoque_destino,
				cd_centro_custo,
				cd_unidade_med_mov,
				cd_conta_contabil,
				cd_fornecedor,
				nr_seq_lote_fornec,
				dt_validade,
				cd_lote_fabricacao)
			values (	nextval('movimento_estoque_seq'),
				cd_estabelecimento_p,
				cd_local_estoque_origem_w,
				clock_timestamp(),
				cd_operacao_estoque_et_w,
				1,
				cd_material_w,
				trunc(clock_timestamp(),'mm'),
				qt_devolucao_p,
				clock_timestamp(),
				nm_usuario_p,
				'18',
				nr_sequencia_p,
				null,
				0,
				0,
				cd_unidade_medida_estoque_w,
				cd_setor_atendimento_w,
				qt_material_estoque_w,
				null,
				null,
				null,
				cd_unidade_medida_w,
				null,
				null,
				nr_seq_lote_fornec_w,
				dt_validade_w,
				ds_lote_fornec_w);
	end if;

	insert into solic_unitarizacao_dev(
		nr_sequencia,
		nr_solic_unitarizacao,
		qt_devolucao,
		dt_atualizacao,
		dt_atualizacao_nrec,
		nm_usuario,
		nm_usuario_nrec)
	values (	nextval('solic_unitarizacao_dev_seq'),
		nr_sequencia_p,
		qt_devolucao_p,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		nm_usuario_p);
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_dev_solic_unitarizacao ( nm_usuario_p text, cd_estabelecimento_p bigint, nr_sequencia_p bigint, qt_devolucao_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

