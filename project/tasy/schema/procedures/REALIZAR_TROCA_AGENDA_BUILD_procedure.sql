-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE realizar_troca_agenda_build (nm_usuario_p text, NR_SEQUENCIA_P bigint, IE_OPCAO_P text) AS $body$
DECLARE

			
qt_registros_w	bigint;
dt_agendamento_w	timestamp;
ie_aplicacao_w	varchar(2);
ie_periodo_w	varchar(20);
qt_agenda_w		bigint;
nr_sequencia_troca_w	bigint;
dt_agendamento_new_w	timestamp;
ie_periodo_new_w	varchar(20);
ie_parar_w		varchar(2):= 'N';
qt_lacuna_w		bigint:= 0;

C01 CURSOR FOR
	SELECT	a.nr_sequencia
	from	agendamento_build a
	where	((TRUNC(a.dt_agendamento) > TRUNC(dt_agendamento_w)) OR
			((TRUNC(a.dt_agendamento) = TRUNC(dt_agendamento_w)) AND (a.ie_periodo IN ('B','V','M','A')) AND (ie_periodo_w = 'A')) OR
			((TRUNC(a.dt_agendamento) = TRUNC(dt_agendamento_w)) AND (a.ie_periodo IN ('B','V','M')) AND (ie_periodo_w = 'M')) OR
			((TRUNC(a.dt_agendamento) = TRUNC(dt_agendamento_w)) AND (a.ie_periodo IN ('B','V')) AND (ie_periodo_w = 'V')) OR
			((TRUNC(a.dt_agendamento) = TRUNC(dt_agendamento_w)) AND (a.ie_periodo = 'B') AND (ie_periodo_w = 'B')))
	and		ie_status = 'BA'
	and		a.ie_periodo in ('V','M','A','B')
	order by a.dt_agendamento, ie_periodo;


BEGIN

select	a.dt_agendamento,
	a.ie_aplicacao,
	a.ie_periodo
into STRICT	dt_agendamento_w,
	ie_aplicacao_w,
	ie_periodo_w
from	agendamento_build a
where	a.nr_sequencia = nr_sequencia_p;

if (ie_opcao_p = 'C') then

	update	agendamento_build a
	set	ie_status = 'C'
	where	trunc(a.dt_agendamento) = trunc(dt_agendamento_w)
	and	a.ie_periodo = ie_periodo_w
	and	ie_status = 'BA';
	commit;
	
elsif (ie_opcao_p = 'P') then

	select	count(*)
	into STRICT	qt_agenda_w
	from	agendamento_build a
	where	trunc(a.dt_agendamento) = trunc(dt_agendamento_w)
	and		a.ie_periodo = ie_periodo_w
	and		ie_status = 'BA';	
	
	if (qt_agenda_w > 0) then
	
		select	max(a.nr_sequencia)
		into STRICT	nr_sequencia_troca_w
		from	agendamento_build a
		where	trunc(a.dt_agendamento) = trunc(dt_agendamento_w)
		and		a.ie_periodo = ie_periodo_w
		and		ie_status = 'BA';

		SELECT * FROM agendar_prox_data_build(nr_sequencia_troca_w, nm_usuario_p, 'S', dt_agendamento_new_w, ie_periodo_new_w, ie_parar_w) INTO STRICT dt_agendamento_new_w, ie_periodo_new_w, ie_parar_w;

	end if;
	
elsif (ie_opcao_p = 'R') then
	
	open C01;
	loop
	fetch C01 into	
		nr_sequencia_troca_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
			
			if (qt_lacuna_w = 0) then			
				SELECT * FROM agendar_prox_data_build(nr_sequencia_troca_w, nm_usuario_p, 'N', dt_agendamento_new_w, ie_periodo_new_w, ie_parar_w) INTO STRICT dt_agendamento_new_w, ie_periodo_new_w, ie_parar_w;
			end if;
			
			if (ie_parar_w = 'S') then
				qt_lacuna_w:=qt_lacuna_w+1;
			end if;	
			
		end;
	end loop;
	close C01;
	
end if;

update agendamento_build
set ie_status = 'BA'
where nr_sequencia = nr_sequencia_p;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE realizar_troca_agenda_build (nm_usuario_p text, NR_SEQUENCIA_P bigint, IE_OPCAO_P text) FROM PUBLIC;

