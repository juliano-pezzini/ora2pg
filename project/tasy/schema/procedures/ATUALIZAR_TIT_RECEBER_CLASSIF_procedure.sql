-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_tit_receber_classif (nr_titulo_p bigint, ie_commit_p text, nm_usuario_p text) AS $body$
DECLARE


vl_original_tit_w	double precision;
vl_com_alteracao_w	double precision;

vl_total_classif_w	double precision;
vl_diferenca_w		double precision;

nr_seq_classif_w	bigint;
vl_original_classif_w	double precision;
vl_classificacao_w	double precision;
vl_desconto_w		double precision;
vl_recebido_w		double precision;
vl_desconto_classif_w	double precision;
ie_situacao_w		varchar(255);
vl_total_desconto_w	titulo_receber_classif.vl_desconto%type;


c01 CURSOR FOR
SELECT	nr_sequencia,
	coalesce(vl_original,0),
	vl_classificacao
from	titulo_receber_classif
where	nr_titulo	= nr_titulo_p;


BEGIN

select	vl_titulo,
	(obter_dados_titulo_receber(nr_titulo_p,'V'))::numeric ,
	ie_situacao
into STRICT	vl_original_tit_w,
	vl_com_alteracao_w,
	ie_situacao_w
from	titulo_receber
where	nr_titulo	= nr_titulo_p;

select	coalesce(sum(vl_descontos),0),
	coalesce(sum(vl_recebido),0)
into STRICT	vl_desconto_w,
	vl_recebido_w
from	titulo_receber_liq
where	nr_titulo		= nr_titulo_p
and	coalesce(ie_lib_caixa, 'S')	= 'S';

open c01;
loop
fetch c01 into
	nr_seq_classif_w,
	vl_original_classif_w,
	vl_classificacao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	if (vl_original_classif_w	= 0) then
		vl_original_classif_w	:= vl_classificacao_w;
	end if;

	vl_classificacao_w	:= dividir_sem_round(vl_com_alteracao_w,vl_original_tit_w) * vl_original_classif_w;

	if (vl_desconto_w <> 0) then
		/*13/10/16 AAMFIRMO OS 1253448  - Fiz igual foi feito na OS 64011 para a procedure ATUALIZAR_TIT_PAGAR_CLASSIF. Estava vl_baixa_w no lugar de vl_com_alteracao_w, onde gerava vl de desconto errado*/

		vl_desconto_classif_w	:= vl_classificacao_w * dividir_sem_round(vl_desconto_w,vl_com_alteracao_w);
	end if;

	update	titulo_receber_classif
	set	vl_original		= vl_original_classif_w,
		vl_classificacao	= vl_classificacao_w,
		vl_desconto		= vl_desconto_classif_w,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	nr_titulo		= nr_titulo_p
	and	nr_sequencia		= nr_seq_classif_w;
end loop;
close c01;

/* Verificar se deu diferenca de centavos */

select	sum(vl_classificacao),
		sum(vl_desconto)
into STRICT	vl_total_classif_w,
		vl_total_desconto_w
from	titulo_receber_classif
where	nr_titulo	= nr_titulo_p;

if (vl_total_classif_w > 0) then

	if (vl_com_alteracao_w <> vl_total_classif_w) then

		vl_diferenca_w	:= vl_com_alteracao_w - vl_total_classif_w;

		update	titulo_receber_classif
		set	vl_classificacao	= vl_classificacao + vl_diferenca_w
		where	nr_titulo		= nr_titulo_p
		and	nr_sequencia		= 1;
	end if;
end if;

/*Verificar se deu diferenÃ§a nos descontos e ajustar.*/

if (coalesce(vl_total_desconto_w,0) > 0) then

	vl_diferenca_w := 0;

	/*Buscar a sequencia de classif que possui maior valor de descontos para sofrer o arredondamento se necessario. Isso pois se pegar a sequencia 1, e o valor de ajuste for maior que o valor do desconto existente, pode ficar negativo*/

	select	max(a.nr_sequencia)
	into STRICT	nr_seq_classif_w
	from	titulo_receber_classif a
	where	a.vl_desconto = (SELECT max(x.vl_desconto) from titulo_receber_classif x where x.nr_titulo = nr_titulo_p)
	and		a.nr_titulo    = nr_titulo_p;

	if (vl_desconto_w > vl_total_desconto_w) then

		vl_diferenca_w := coalesce(vl_desconto_w,0) - coalesce(vl_total_desconto_w,0);

		update	titulo_receber_classif
		set		vl_desconto			= coalesce(vl_desconto,0) + coalesce(vl_diferenca_w,0)
		where	nr_titulo			= nr_titulo_p
		and		nr_sequencia		= nr_seq_classif_w;

	elsif (vl_desconto_w < vl_total_desconto_w) then

		vl_diferenca_w := coalesce(vl_total_desconto_w,0) - coalesce(vl_desconto_w,0);

		update	titulo_receber_classif
		set		vl_desconto			= coalesce(vl_desconto,0) - coalesce(vl_diferenca_w,0)
		where	nr_titulo			= nr_titulo_p
		and		nr_sequencia		= nr_seq_classif_w;

	end if;

end if;

if (ie_commit_p = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_tit_receber_classif (nr_titulo_p bigint, ie_commit_p text, nm_usuario_p text) FROM PUBLIC;

