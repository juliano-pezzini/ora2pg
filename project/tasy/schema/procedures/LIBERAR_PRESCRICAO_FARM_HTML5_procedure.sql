-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_prescricao_farm_html5 ( nr_prescricao_p prescr_medica.nr_prescricao%type, ie_libera_parcial_p text, ie_libera_inconsistente_p text, --59
 ie_inicio_analise_p text, --43
 ie_permite_lib_farm_p text, --31
 ie_lib_disp_indefinida_p text, --4
 ie_solic_nao_padrao_p text, --61
 ie_gerar_evolucao_p text, --163
 nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ds_msg_informativa_p INOUT text) AS $body$
DECLARE


cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
qt_inconsistente_w			bigint;
nm_usuario_analise_w		varchar(15);
cd_prescritor_w				varchar(10);
cd_pessoa_usuario_w			varchar(10);
nr_prescricao_original_w	bigint;
ie_evolucao_w				varchar(1);
nr_atendimento_w			bigint;
nr_seq_material_w			integer;
nr_seq_origem_medic_w		bigint;
qt_prescr_copia_w			bigint;
nr_prescricao_copia_w		prescr_medica.nr_prescricao%type := 0;

ie_rastre_prescr_libfarm_w	varchar(1);
ds_rastre_prescr_libfarm_w	varchar(1800);
ie_itens_incons_w			varchar(1) := 'N';
ds_erro_w					varchar(2000);
ie_param64_w				varchar(1) := 'N';
ds_observacao_copia_w		prescr_medica.ds_observacao_copia%type;
cd_pessoa_fisica_w			prescr_medica.cd_pessoa_fisica%type;
ds_log_w					varchar(4000);

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	b.nr_seq_origem_medic
from	prescR_medica c,
	cpoe_material b,
	prescr_material a
where	a.nr_prescricao		= c.nr_prescricao
and	a.nr_seq_mat_cpoe	= b.nr_sequencia
and	a.nr_prescricao		= nr_prescricao_p
and	b.nr_atendimento	= nr_atendimento_w
and	b.nr_atendimento	= c.nr_atendimento
and	a.ie_agrupador = 1
and	coalesce(a.nr_seq_origem_medic,0)	<> b.nr_seq_origem_medic;WITH RECURSIVE cte AS (


c02 CURSOR(ds_observacao_copia_pc		 prescr_medica.ds_observacao_copia%type) FOR
SELECT		regexp_substr(ds_observacao_copia_pc, '[A-Z]{1,2},[0-9]+;', 1, level) as ds_item_liberar_w

(regexp_substr(ds_observacao_copia_pc, '[A-Z]{1,2},[0-9]+;', 1, level) IS NOT NULL AND (regexp_substr(ds_observacao_copia_pc, '[A-Z]{1,2},[0-9]+;', 1, level))::text <> '')  UNION ALL


c02 CURSOR(ds_observacao_copia_pc		 prescr_medica.ds_observacao_copia%type) FOR
SELECT		regexp_substr(ds_observacao_copia_pc, '[A-Z]{1,2},[0-9]+;', 1, level) as ds_item_liberar_w

(regexp_substr(ds_observacao_copia_pc, '[A-Z]{1,2},[0-9]+;', 1, level) IS NOT NULL AND (regexp_substr(ds_observacao_copia_pc, '[A-Z]{1,2},[0-9]+;', 1, level))::text <> '') JOIN cte c ON ()

) SELECT * FROM cte;
;

c03 CURSOR(ds_item_liberar_pc		 prescr_medica.ds_observacao_copia%type) FOR
SELECT	a.nr_prescricao
from	prescr_medica a
where	a.nr_atendimento = nr_atendimento_w
and		(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
and 	coalesce(a.dt_liberacao_farmacia::text, '') = ''
and		(a.dt_inicio_analise_farm IS NOT NULL AND a.dt_inicio_analise_farm::text <> '')
and		a.nm_usuario_analise_farm = nm_usuario_p
and		a.nr_prescricao > nr_prescricao_p
and 	a.cd_funcao_origem not in (924,950)
and		coalesce(a.nr_seq_atend::text, '') = ''
and (coalesce(ie_lib_farm,'S') = 'S')
and		a.ds_observacao_copia like '%' || ds_item_liberar_pc || '%'
order by 1;

c04 CURSOR(ds_item_liberar_pc		 prescr_medica.ds_observacao_copia%type) FOR
SELECT	a.nr_prescricao
from	prescr_medica a
where	a.cd_pessoa_fisica = cd_pessoa_fisica_w
and		(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
and 	coalesce(a.dt_liberacao_farmacia::text, '') = ''
and		(a.dt_inicio_analise_farm IS NOT NULL AND a.dt_inicio_analise_farm::text <> '')
and		a.nm_usuario_analise_farm = nm_usuario_p
and		a.nr_prescricao > nr_prescricao_p
and 	a.cd_funcao_origem not in (924,950)
and		coalesce(a.nr_seq_atend::text, '') = ''
and (coalesce(ie_lib_farm,'S') = 'S')
and		a.ds_observacao_copia like '%' || ds_item_liberar_pc || '%'
order by 1;
BEGIN
ie_param64_w := obter_param_usuario(252, 64, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_param64_w);																							

select	coalesce(max(cd_estabelecimento),0),
		max(a.nm_usuario_analise_farm),
		max(a.cd_prescritor),
		max(a.nr_prescricao_original),
		max(a.nr_atendimento),
		max(a.ds_observacao_copia),
		max(a.cd_pessoa_fisica)
into STRICT	cd_estabelecimento_w,
		nm_usuario_analise_w,
		cd_prescritor_w,
		nr_prescricao_original_w,
		nr_atendimento_w,
		ds_observacao_copia_w,
		cd_pessoa_fisica_w
from	prescr_medica a
where	a.nr_prescricao	= nr_prescricao_p;
	
ie_rastre_prescr_libfarm_w := obter_se_info_rastre_prescr('LF', nm_usuario_p, obter_perfil_ativo, cd_estabelecimento_w);

if (ie_rastre_prescr_libfarm_w = 'S') then
	ds_rastre_prescr_libfarm_w := 'Rastreabilidade dos processos de prescricao / liberar_prescricao_farm_html5 ';
	ds_rastre_prescr_libfarm_w := substr(ds_rastre_prescr_libfarm_w
		|| '|nr_prescricao_p:' || nr_prescricao_p
		|| '|ie_libera_parcial_p:' || ie_libera_parcial_p
		|| '|ie_libera_inconsistente_p:' || ie_libera_inconsistente_p
		|| '|ie_inicio_analise_p:' || ie_inicio_analise_p
		|| '|ie_permite_lib_farm_p:' || ie_permite_lib_farm_p
		|| '|ie_lib_disp_indefinida_p:' || ie_lib_disp_indefinida_p
		|| '|ie_Solic_nao_padrao_p:' || ie_Solic_nao_padrao_p
		|| '|ie_Gerar_evolucao_p:' || ie_Gerar_evolucao_p
		|| '|nm_usuario_p:' || nm_usuario_p
		|| '|cd_estabelecimento_p:' || cd_estabelecimento_p || chr(10), 1, 1800);
end if;

select	max(cd_pessoa_fisica)
into STRICT	cd_pessoa_usuario_w
from	usuario
where	nm_usuario	= nm_usuario_p;

if (ie_libera_inconsistente_p = 'N') and (ie_libera_parcial_p	= 'N') then
	select	count(*)
	into STRICT	qt_inconsistente_w
	from	prescr_material a
	where	coalesce(a.ie_suspenso,'N') <> 'S'
	and	a.nr_prescricao = nr_prescricao_p
	and	((a.nr_seq_inconsistencia IS NOT NULL AND a.nr_seq_inconsistencia::text <> '') or (exists (	SELECT	1
				from     prescr_material_incon_farm y
				where	a.nr_prescricao = y.nr_prescricao
				and	y.nr_seq_material = a.nr_sequencia
				and	coalesce(y.ie_situacao,'A') = 'A')));
	if (qt_inconsistente_w	= 0) then
		select	count(*)
		into STRICT	qt_inconsistente_w
		from	prescr_solucao a
		where	coalesce(a.ie_suspenso,'N') <> 'S'
		and	a.nr_prescricao = nr_prescricao_p
		and	((a.nr_seq_inconsistencia IS NOT NULL AND a.nr_seq_inconsistencia::text <> '') or (exists (	SELECT	1
					from	prescr_material_incon_farm y
					where	a.nr_prescricao = y.nr_prescricao
					and	y.nr_seq_solucao = a.nr_seq_solucao
					and	coalesce(y.ie_situacao,'A') = 'A')));
	end if;
	
	if (qt_inconsistente_w	> 0) then
		--N?o ? poss?vel liberar a prescri??o com inconsist?ncias!
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(40128);		
	end if;
end if;

if (ie_inicio_analise_p = 'S') then
	if (coalesce(nm_usuario_analise_w::text, '') = '') then
		--Para liberar esta prescri??o deve ser iniciada a an?lise.
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(40129);
	elsif (nm_usuario_analise_w	<> nm_usuario_p) then
		--Esta prescri??o possui an?lise iniciada pelo usu?rio #@MENSAGEM#@. Somente este usu?rio poder? liberar esta prescri??o.
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(40170, 'MENSAGEM='||nm_usuario_analise_w);
	end if;
end if;

if (ie_permite_lib_farm_p	= 'N') and (cd_prescritor_w	= cd_pessoa_usuario_w) and (coalesce(nr_prescricao_original_w::text, '') = '') then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(40172);
end if;

if (ie_lib_disp_indefinida_p = 'N') then
	CALL Consistir_Dispensacao_Farmacia(nr_prescricao_p);
end if;

open C01;
loop
fetch C01 into	
	nr_seq_material_w,
	nr_seq_origem_medic_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	CALL Atualizar_origem_medicamento(nr_seq_origem_medic_w,nr_prescricao_p,nr_seq_material_w,'N','N','N',nm_usuario_p);
	end;
end loop;
close C01;

if (ie_param64_w = 'S') then
    ie_itens_incons_w := gpt_obter_itens_incons(nr_atendimento_w, cd_pessoa_fisica_w, nr_prescricao_p, null, nm_usuario_p);
    if (ie_itens_incons_w = 'S') then
        ds_erro_w := gerar_evolucao_farm_incon(nr_prescricao_p, nm_usuario_p, cd_estabelecimento_p, ds_erro_w);
        if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
            if (ie_rastre_prescr_libfarm_w = 'S') then
                ds_rastre_prescr_libfarm_w := substr(ds_rastre_prescr_libfarm_w || pls_util_pck.enter_w || $$plsql_unit || ':' || $$plsql_line
                || ds_erro_w || pls_util_pck.enter_w
                || dbms_utility.format_error_backtrace, 1, 4000);
            end if;

            CALL gerar_log_prescricao(
            nr_prescricao_p  => nr_prescricao_p,
            nr_seq_item_p    => null,
            ie_agrupador_p   => null,
            nr_seq_horario_p => null,
            ie_tipo_item_p   => null,
            ds_log_p         => ds_rastre_prescr_libfarm_w,
            nm_usuario_p     => wheb_usuario_pck.get_nm_usuario,
            nr_seq_objeto_p  => 6348,
            ie_commit_p      => 'N');
        end if;
    end if;
end if;

CALL liberar_prescricao_farmacia(nr_prescricao_p,0,nm_usuario_p,ie_libera_parcial_p);

if (ie_Solic_nao_padrao_p = 'S') then
	CALL gerar_solic_compra_prescricao(nr_prescricao_p,cd_estabelecimento_p,nm_usuario_p);
end if;

if (ie_libera_parcial_p = 'S') then
	CALL regra_alterar_status_farmacia(nr_prescricao_p,'2',nm_usuario_p);
else
	if (ie_Gerar_evolucao_p = 'S') then
	
		select	coalesce(max('S'),'N')
		into STRICT	ie_evolucao_w
		from	prescr_medica a,
			prescr_material b
		where	a.nr_prescricao = b.nr_prescricao
		and	a.nr_prescricao	= nr_prescricao_p
		and	(b.ds_observacao_far IS NOT NULL AND b.ds_observacao_far::text <> '')
		and	(a.dt_liberacao_farmacia IS NOT NULL AND a.dt_liberacao_farmacia::text <> '')
		and	coalesce(b.ie_suspenso,'N') = 'N';

		if (ie_evolucao_w = 'S') then
			ds_msg_informativa_p := gerar_evolucao_farmacia(nr_prescricao_p, nm_usuario_p, cd_estabelecimento_p, ds_msg_informativa_p);
		end if;
	end if;	
	CALL regra_alterar_status_farmacia(nr_prescricao_p,'1',nm_usuario_p);
end if;

	if (ds_observacao_copia_w IS NOT NULL AND ds_observacao_copia_w::text <> '') then
		for r_c02_w in c02(ds_observacao_copia_w)
		loop
			if (r_c02_w.ds_item_liberar_w IS NOT NULL AND r_c02_w.ds_item_liberar_w::text <> '') then
				
				ds_log_w := substr(obter_desc_expressao(942996) || ' / liberar_prescricao_farm_html5 = ' || chr(13)
									|| ' 01 - linha'
									|| ' nr_prescricao_p: '		|| nr_prescricao_p
									|| ' nr_atendimento_w: '	|| nr_atendimento_w
									|| ' ds_item_liberar_w: '	|| r_c02_w.ds_item_liberar_w
									|| ' cd_pessoa_fisica_w: '	|| cd_pessoa_fisica_w
									|| ' ie_libera_parcial_p: '	|| ie_libera_parcial_p, 1, 4000);

				CALL gerar_log_prescricao(	nr_prescricao_p => nr_prescricao_p,
										nr_seq_item_p => null,
										ie_agrupador_p => null,
										nr_seq_horario_p => null,
										ie_tipo_item_p => null,
										ds_log_p => ds_log_w,
										nm_usuario_p => nm_usuario_p,
										nr_seq_objeto_p => 58680,
										ie_commit_p => 'N');

				if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
					for r_c03_w in c03(r_c02_w.ds_item_liberar_w)
					loop
						CALL liberar_prescricao_farmacia(nr_prescricao_p => r_c03_w.nr_prescricao,
													nr_seq_item_p => 0,
													nm_usuario_p => nm_usuario_p,
													ie_lib_parc_p => ie_libera_parcial_p);
					end loop;
				else
					for r_c04_w in c04(r_c02_w.ds_item_liberar_w)
					loop
						CALL liberar_prescricao_farmacia(nr_prescricao_p => r_c04_w.nr_prescricao,
													nr_seq_item_p => 0,
													nm_usuario_p => nm_usuario_p,
													ie_lib_parc_p => ie_libera_parcial_p);
					end loop;
				end if;
			end if;
		end loop;
	end if;

if (ie_rastre_prescr_libfarm_w = 'S') then
	CALL gerar_log_prescr_mat(nr_prescricao_p, null, null, null, null, ds_rastre_prescr_libfarm_w, nm_usuario_p, 'N');
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_prescricao_farm_html5 ( nr_prescricao_p prescr_medica.nr_prescricao%type, ie_libera_parcial_p text, ie_libera_inconsistente_p text, ie_inicio_analise_p text, ie_permite_lib_farm_p text, ie_lib_disp_indefinida_p text, ie_solic_nao_padrao_p text, ie_gerar_evolucao_p text, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ds_msg_informativa_p INOUT text) FROM PUBLIC;

