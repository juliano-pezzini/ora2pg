-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_conta_contab_material ( nr_seq_mat_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_estabelecimento_w      	estabelecimento.cd_estabelecimento%type	:= 0;
cd_estab_conta_w		estabelecimento.cd_estabelecimento%type;
cd_estab_atend_w		estabelecimento.cd_estabelecimento%type := 0;
cd_estab_logado_w		estabelecimento.cd_estabelecimento%type;
cd_estab_terceiro_w		estabelecimento.cd_estabelecimento%type;

cd_material_w	  	  	material.cd_material%type;

ie_clinica_w			atendimento_paciente.ie_clinica%type;
ie_tipo_atendimento_w		atendimento_paciente.ie_tipo_atendimento%type	:= 0;
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
cd_procedencia_w		atendimento_paciente.cd_procedencia%type;

cd_setor_atendimento_w		setor_atendimento.cd_setor_atendimento%type	:= 0;

ie_classif_contabil_w		convenio.ie_classif_contabil%type;
ie_tipo_convenio_aux2_w		convenio.ie_tipo_convenio%type;
cd_convenio_w			convenio.cd_convenio%type	:= 0;

cd_plano_w			atend_categoria_convenio.cd_plano_convenio%type;

ie_complexidade_sus_w		sus_procedimento.ie_complexidade%type;
ie_tipo_financ_sus_w		sus_procedimento.ie_tipo_financiamento%type;

cd_categoria_w			material_atend_paciente.cd_categoria%type;
cd_local_estoque_w		material_atend_paciente.cd_local_estoque%type	:= null;
qt_material_w			material_atend_paciente.qt_material%type;
vl_material_orig_w		material_atend_paciente.vl_material%type := 0;
vl_unitario_orig_w		material_atend_paciente.vl_unitario%type := 0;
nr_lote_contabil_w		material_atend_paciente.nr_lote_contabil%type := 0;
ie_valor_informado_w		material_atend_paciente.ie_valor_informado%type;
cd_proced_referencia_w		material_atend_paciente.cd_proced_referencia%type := 0;
nr_seq_autorizacao_w		material_atend_paciente.nr_seq_autorizacao%type;
nr_doc_convenio_w		material_atend_paciente.nr_doc_convenio%type;
ie_guia_informada_w		material_atend_paciente.ie_guia_informada%type;
cd_acao_w			material_atend_paciente.cd_acao%type;
nr_prescricao_w			material_atend_paciente.nr_prescricao%type;
nr_sequencia_prescricao_w	material_atend_paciente.nr_sequencia_prescricao%type;
cd_material_prescricao_w	material_atend_paciente.cd_material_prescricao%type;
cd_material_exec_w		material_atend_paciente.cd_material_exec%type;
ie_emite_conta_w		material_atend_paciente.ie_emite_conta%type;
cd_convenio_orig_w		material_atend_paciente.cd_convenio%type := 0;
cd_categoria_orig_w		material_atend_paciente.cd_categoria%type;
cd_cgc_fornecedor_w		material_atend_paciente.cd_cgc_fornecedor%type := '';
cd_motivo_exc_conta_w		material_atend_paciente.cd_motivo_exc_conta%type;
nr_seq_cor_exec_w		material_atend_paciente.nr_seq_cor_exec%type;
cd_cgc_prestador_w		material_atend_paciente.cd_cgc_prestador%type;
nr_seq_proc_princ_w		material_atend_paciente.nr_seq_proc_princ%type;
ie_auditoria_w			material_atend_paciente.ie_auditoria%type;
cd_senha_w			material_atend_paciente.cd_senha%type;
tx_material_ww			material_atend_paciente.tx_material%type;
nr_seq_conta_origem_w		material_atend_paciente.nr_seq_conta_origem%type;
ie_responsavel_credito_w	material_atend_paciente.ie_responsavel_credito%type;
cd_funcao_w			material_atend_paciente.cd_funcao%type;
cd_setor_paciente_w		material_atend_paciente.cd_setor_paciente%type;
ie_trat_conta_rn_ww		material_atend_paciente.ie_trat_conta_rn%type;
ie_status_w			material_atend_paciente.ie_status_item_tabela%type;
nr_seq_mat_autor_ww		material_atend_paciente.nr_seq_mat_autor%type;
ie_valor_autorizado_w		material_atend_paciente.ie_valor_autorizado%type;
nr_seq_lote_fornec_w		material_atend_paciente.nr_seq_lote_fornec%type;
nr_seq_atepacu_w		material_atend_paciente.nr_seq_atepacu%type;

ie_autor_vl_conta_w		parametro_faturamento.ie_autor_vl_conta%type;
ie_valor_inf_mat_autor_w	parametro_faturamento.ie_valor_inf_mat_autor%type;
ie_tipo_setor_classif_rn_w	parametro_faturamento.ie_tipo_setor_classif_rn%type;
ie_estab_regra_honorario_w	parametro_faturamento.ie_estab_regra_honorario%type;
ie_estagio_vl_conta_autor_w	parametro_faturamento.ie_estagio_vl_conta_autor%type;
ie_aplica_tx_conv_preco_w	parametro_faturamento.ie_aplica_tx_conv_preco%type;
ie_atualiza_valor_conta_w	parametro_faturamento.ie_atualiza_valor_conta%type;
ie_gastos_rn_alta_w		parametro_faturamento.ie_gastos_rn_alta%type := 'N';
cd_classif_setor_rn_w		parametro_faturamento.cd_classif_setor_rn%type;
ie_regra_rn_item_w		parametro_faturamento.ie_regra_rn_item%type;
ie_estabelecimento_conta_w	parametro_faturamento.ie_estabelecimento_conta%type;
ie_gerar_conta_guia_dif_w	parametro_faturamento.ie_gerar_conta_guia_dif%type;
ie_calculo_taxa_regra_w		parametro_faturamento.ie_calculo_taxa_regra%type;
ie_calcular_mat_auditado_w	parametro_faturamento.ie_calcular_mat_auditado%type;
ie_valor_inf_desconto_w		parametro_faturamento.ie_valor_inf_desconto%type;
ie_glosa_mat_proc_princ_w	parametro_faturamento.ie_glosa_mat_proc_princ%type;
ie_valor_inf_pacote_w		parametro_faturamento.ie_valor_inf_pacote%type;
ie_convenio_conta_param_w	parametro_faturamento.ie_convenio_conta_param%type;
ie_regra_conta_terc_mat_w	parametro_faturamento.ie_regra_conta_terc_mat%type;
ie_regra_tipo_atend_w		parametro_faturamento.ie_regra_tipo_atend%type := 'A';

nr_seq_autor_conv_w		autorizacao_convenio.nr_sequencia%type;

cd_procedimento_w		procedimento_paciente.cd_procedimento%type;
ie_origem_proced_w		procedimento_paciente.ie_origem_proced%type;
nr_interno_conta_proc_w		procedimento_paciente.nr_interno_conta%type;
cd_convenio_proc_w		procedimento_paciente.cd_convenio%type;
cd_categoria_proc_w		procedimento_paciente.cd_categoria%type;
cd_situacao_glosa_proc_w	procedimento_paciente.cd_situacao_glosa%type;
nr_seq_proc_interno_w		procedimento_paciente.nr_seq_proc_interno%type;
nr_atendimento_proc_w		procedimento_paciente.nr_atendimento%type;

ie_status_acerto_w		conta_paciente.ie_status_acerto%type := 1;
nr_interno_conta_w		conta_paciente.nr_interno_conta%type;
ie_status_conta_proc_w		conta_paciente.ie_status_acerto%type;

cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;

cd_sequencia_parametro_w	procedimento_paciente.cd_sequencia_parametro%type;

ie_ordem_data_devolucao_w	bigint;
ie_data_conta_devolucao_w	varchar(01);
ie_transf_gasto_nr_w		varchar(1);
ie_dias_gastos_rn_w		varchar(1):= 'N';
ie_trat_conta_rn_w		varchar(15);
ie_classif_gastos_rn_w		varchar(1):= 'S';
nr_dias_gastos_rn_w		bigint:= 0;
qt_dia_fim_conta_w		bigint;
cd_classif_setor_w		varchar(2);
qt_conta_w			bigint;
dt_conta_dev_w			timestamp;
qt_saldo_dev_w		  	double precision;
dt_alta_w			timestamp;
dt_altap_w			timestamp;
qt_idade_w			smallint;
dt_medicacao_w			timestamp;
dt_alta_preco_w			timestamp;
dt_desdobramento_w		timestamp;
dt_material_w			timestamp;
ie_regra_pacote_w		varchar(1):= 'N';
dt_atendimento_w		timestamp;
dt_acerto_conta_w		timestamp;
dt_conta_w			timestamp	:= clock_timestamp();
ie_recalculo_conta_w		varchar(1);
qt_mat_w		  	bigint := 0;
cd_conta_receita_w		varchar(20);
cd_centro_custo_w		integer;
ie_altera_auditoria_w		varchar(01)	:= 'S';
dt_entrada_w			timestamp;
ie_altera_guia_w		varchar(1) := 'N';
cd_convenio_calculo_w     	integer;
cd_categoria_calculo_w    	varchar(10);
cd_grupo_material_w		smallint;
cd_subgrupo_material_w		smallint;
cd_classe_material_w		integer;
qt_reg_estab_terc_w      	bigint;
cd_tipo_acomodacao_w      	smallint;
dt_preco_w			timestamp;
ie_tipo_convenio_w		smallint    := 0;
cd_autorizacao_w		varchar(20);
qt_autorizada_w			double precision := 0;
nm_responsavel_w		varchar(40);
ie_glosa_w			varchar(1);
cd_situacao_glosa_w		smallint   := 0;
pr_glosa_w			double precision;
vl_glosa_w			double precision := 0;
cd_motivo_exc_conta_ww		bigint;
ie_autor_particular_w		varchar(1) := 'N';
cd_convenio_glosa_ww		integer := 0;
cd_categoria_glosa_ww		varchar(10):= ' ';
nr_seq_regra_ajuste_ww		bigint:= 0;
DS_MAE_W					varchar(10):= '';
ds_erro_w			varchar(255);

/*SO-2220426*/

c01 CURSOR FOR
SELECT	/*+ index (a matpaci_i1) */	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_conta),
	sum(a.qt_material)
from	material_atend_paciente a
where	a.nr_atendimento 	= nr_atendimento_w
and	a.cd_material	= cd_material_w
and	(a.dt_conta IS NOT NULL AND a.dt_conta::text <> '')
and	a.nr_sequencia	<> nr_seq_mat_p
group by ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_conta)
order by 1 asc;

c02 CURSOR FOR
SELECT /*+ index (a matpaci_i1) */	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_conta),
	sum(a.qt_material)
from	material_atend_paciente a
where	a.nr_atendimento 	= nr_atendimento_w
and	a.cd_material		= cd_material_w
and	(a.dt_conta IS NOT NULL AND a.dt_conta::text <> '')
and	a.nr_sequencia	<> nr_seq_mat_p
group by ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_conta)
order by 1 desc;



BEGIN

DS_MAE_W := obter_desc_expressao(962487);

select 	coalesce(Param_Recalculo_Conta_pck.get_recalcular_conta,'N')
into STRICT	ie_recalculo_conta_w
;

begin

select	count(*)
into STRICT	qt_mat_w
from	material_atend_paciente
where	nr_sequencia	= nr_seq_mat_p;


if (qt_mat_w = 0) then
	goto final;
end if;

select 	cd_convenio,
       	cd_categoria,
       	qt_material,
       	coalesce(dt_conta, coalesce(dt_prescricao, dt_atendimento)),
       	coalesce(vl_material,0),
       	coalesce(vl_unitario,0),
      	cd_setor_atendimento,
       	dt_acerto_conta,
	coalesce(nr_lote_contabil,0),
	coalesce(ie_valor_informado,'N'),
	coalesce(cd_proced_referencia,0),
	nr_seq_autorizacao,
	nr_interno_conta,
	nr_atendimento,
	cd_material,
	dt_atendimento,
	nr_doc_convenio,
	ie_guia_informada,
	cd_acao,
	nr_prescricao,
	nr_sequencia_prescricao,
	cd_material_prescricao,
	cd_material_exec,
	ie_emite_conta,
	cd_convenio,
	cd_categoria,
	cd_cgc_fornecedor,
	cd_motivo_exc_conta,
	cd_local_estoque,
	nr_seq_cor_exec,
	cd_cgc_prestador,
	nr_seq_proc_princ,
	ie_auditoria,
	cd_senha,
	tx_material,
	nr_seq_conta_origem,
	ie_responsavel_credito,
	dt_atendimento,
	CASE WHEN coalesce(nr_seq_proc_pacote,0)=0 THEN 'N'  ELSE 'S' END  ie_regra_pacote,
	coalesce(cd_funcao,0),
	cd_setor_paciente,
	ie_trat_conta_rn,
	ie_status_item_tabela,
	dt_desdobramento,
	nr_seq_mat_autor,
	ie_valor_autorizado,
	nr_seq_lote_fornec,
	nr_seq_atepacu
into STRICT  	cd_convenio_w,
      	cd_categoria_w,
      	qt_material_w,
      	dt_conta_w,
      	vl_material_orig_w,
      	vl_unitario_orig_w,
	cd_setor_atendimento_w,
      	dt_acerto_conta_w,
      	nr_lote_contabil_w,
	ie_valor_informado_w,
	cd_proced_referencia_w,
	nr_seq_autorizacao_w,
	nr_interno_conta_w,
	nr_atendimento_w,
	cd_material_w,
	dt_atendimento_w,
	nr_doc_convenio_w,
	ie_guia_informada_w,
	cd_acao_w,
	nr_prescricao_w,
	nr_sequencia_prescricao_w,
	cd_material_prescricao_w,
	cd_material_exec_w,
	ie_emite_conta_w,
	cd_convenio_orig_w,
	cd_categoria_orig_w,
	cd_cgc_fornecedor_w,
	cd_motivo_exc_conta_w,
	cd_local_estoque_w,
	nr_seq_cor_exec_w,
	cd_cgc_prestador_w,
	nr_seq_proc_princ_w,
	ie_auditoria_w,
	cd_senha_w,
	tx_material_ww,
	nr_seq_conta_origem_w,
	ie_responsavel_credito_w,
	dt_material_w,
	ie_regra_pacote_w,
	cd_funcao_w,
	cd_setor_paciente_w,
	ie_trat_conta_rn_ww,
	ie_status_w,
	dt_desdobramento_w,
	nr_seq_mat_autor_ww,
	ie_valor_autorizado_w,
	nr_seq_lote_fornec_w,
	nr_seq_atepacu_w
from	material_atend_paciente
where 	nr_sequencia     = nr_seq_mat_p;
exception when others then
	ds_erro_w	:= sqlerrm(SQLSTATE);
	/* PreMat01: Material_Atend_Paciente nao localizado
	#@ds_erro#@*/
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(184107,'DS_ERRO=' || ds_erro_w);
end;

select 	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from 	atendimento_paciente
where 	nr_atendimento 		= nr_atendimento_w;

begin
select	cd_estabelecimento
into STRICT	cd_estab_conta_w
from	conta_paciente
where 	nr_interno_conta	= nr_interno_conta_w;
exception
     	when others then
          	cd_estab_conta_w	:= cd_estabelecimento_w;
end;

if (ie_recalculo_conta_w = 'N') then
	begin
	select	coalesce(max(obter_valor_param_usuario(24, 99, obter_perfil_ativo, nm_usuario_p, 0)), '1')
	into STRICT	ie_ordem_data_devolucao_w
	;
	exception
	when others then
		ie_ordem_data_devolucao_w	:= 1;
	end;

	begin
	select	coalesce(max(obter_valor_param_usuario(24, 103, obter_perfil_ativo, nm_usuario_p, 0)), 'N')
	into STRICT	ie_data_conta_devolucao_w
	;
	exception
	when others then
		ie_data_conta_devolucao_w	:= 'N';
	end;
else
	ie_ordem_data_devolucao_w:= Param_Recalculo_Conta_pck.get_parametro(24,99, obter_perfil_ativo, nm_usuario_p, 0);
	ie_data_conta_devolucao_w:= Param_Recalculo_Conta_pck.get_parametro(24,103, obter_perfil_ativo, nm_usuario_p, 0);
end if;

select 	coalesce(max(ie_autor_vl_conta),'N'),
	coalesce(max(ie_valor_inf_mat_autor),'N'),
	coalesce(max(ie_tipo_setor_classif_rn),'I'),
	coalesce(max(ie_estab_regra_honorario), 'A'),
	coalesce(max(ie_estagio_vl_conta_autor),'N'),
	coalesce(max(ie_aplica_tx_conv_preco),'S'),
	coalesce(max(ie_atualiza_valor_conta),'N')
into STRICT	ie_autor_vl_conta_w,
	ie_valor_inf_mat_autor_w,
	ie_tipo_setor_classif_rn_w,
	ie_estab_regra_honorario_w,
	ie_estagio_vl_conta_autor_w,
	ie_aplica_tx_conv_preco_w,
	ie_atualiza_valor_conta_w
from 	parametro_faturamento
where 	cd_estabelecimento 	= cd_estabelecimento_w;

if (ie_autor_vl_conta_w = 'S') then

	select	max(a.nr_sequencia)
	into STRICT 	nr_seq_autor_conv_w
	from	material_autorizado b,
		autorizacao_convenio a,
		autorizacao_cirurgia c,
		estagio_autorizacao d
	where	b.ie_valor_conta			= 'S'
	and	a.nr_sequencia				= b.nr_sequencia_autor
	and	b.cd_material				= cd_material_w
	and	((a.cd_convenio				= cd_convenio_w) or (d.ie_interno = '90'))
	and	a.nr_atendimento			= nr_atendimento_w
	and	a.nr_seq_autor_cirurgia			= c.nr_sequencia
	and	to_char(c.dt_previsao,'dd/mm/yyyy')	= to_char(dt_conta_w,'dd/mm/yyyy')
	and 	a.nr_seq_estagio			= d.nr_sequencia
	and 	((coalesce(ie_estagio_vl_conta_autor_w,'N') 	= 'S') or (d.ie_interno = '10'))
	and	b.nr_sequencia				= coalesce(nr_seq_mat_autor_ww,b.nr_sequencia);
end if;

if (ie_autor_vl_conta_w = 'N') or (coalesce(nr_seq_autor_conv_w::text, '') = '') then

	select	max(a.nr_sequencia)
	into STRICT	nr_seq_autor_conv_w
	from	material_autorizado b,
		autorizacao_convenio a,
		estagio_autorizacao c
	where	b.ie_valor_conta	= 'S'
	and	a.nr_sequencia		= b.nr_sequencia_autor
	and	b.cd_material		= cd_material_w
	and	((a.cd_convenio		= cd_convenio_w) or (c.ie_interno = '90'))
	and	a.nr_atendimento	= nr_atendimento_w
	and 	a.nr_seq_estagio	= c.nr_sequencia
	and 	((coalesce(ie_estagio_vl_conta_autor_w,'N') = 'S') or (c.ie_interno = '10'))
	and	b.nr_sequencia				= coalesce(nr_seq_mat_autor_ww,b.nr_sequencia);	--lhalves 26/05/2010 OS219956 busca o valor da autorizacao apenas se a mesma estiver autorizada.
end if;


if (coalesce(nr_seq_autor_conv_w,0) > 0)	and
	((ie_valor_inf_mat_autor_w = 'N')	or
	(ie_valor_inf_mat_autor_w = 'S' AND ie_valor_informado_w = 'N')) 		then

	select 	max(cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from 	atendimento_paciente
	where 	nr_atendimento = nr_atendimento_w;

end if;

select	max(cd_procedimento),
	max(ie_origem_proced),
	max(nr_interno_conta),
	max(cd_convenio),
	max(cd_categoria),
	max(cd_situacao_glosa),
	max(nr_seq_proc_interno),
	max(nr_atendimento)
into STRICT	cd_procedimento_w,
	ie_origem_proced_w,
	nr_interno_conta_proc_w,
	cd_convenio_proc_w,
	cd_categoria_proc_w,
	cd_situacao_glosa_proc_w,
	nr_seq_proc_interno_w,
	nr_atendimento_proc_w
from	procedimento_paciente
where	nr_sequencia		= nr_seq_proc_princ_w;

begin
select 	a.cd_estabelecimento
into STRICT  	cd_estabelecimento_w
from 	pessoa_fisica b,
	atendimento_paciente a
where 	a.nr_atendimento     	= nr_atendimento_w
and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;
exception
    	when others then
      	cd_estabelecimento_w := 1;
end;

select 	coalesce(max(ie_gastos_rn_alta),'N'),
	coalesce(max(cd_classif_setor_rn),0),
	coalesce(max(ie_regra_rn_item),'S')
into STRICT	ie_gastos_rn_alta_w,
	cd_classif_setor_rn_w,
	ie_regra_rn_item_w
from 	parametro_faturamento
where 	cd_estabelecimento = cd_estabelecimento_w;

if (ie_recalculo_conta_w = 'N') then
	ie_transf_gasto_nr_w := coalesce(obter_valor_param_usuario(67, 500, obter_perfil_ativo, nm_usuario_p, cd_estab_conta_w),'N');
else
	ie_transf_gasto_nr_w:= Param_Recalculo_Conta_pck.get_parametro(67,500, obter_perfil_ativo, nm_usuario_p, cd_estab_conta_w);
end if;

select 	coalesce(max(nr_dias_gastos_rn),0),
	coalesce(max(qt_dia_fim_conta),0)
into STRICT 	nr_dias_gastos_rn_w,
	qt_dia_fim_conta_w
from	convenio_estabelecimento
where	cd_convenio		= cd_convenio_w
and	cd_estabelecimento	= cd_estabelecimento_w;

if (nr_dias_gastos_rn_w = 0 ) then

	select 	coalesce(max(nr_dias_gastos_rn),0)
	into STRICT	nr_dias_gastos_rn_w
	from 	parametro_faturamento
	where 	cd_estabelecimento = cd_estabelecimento_w;

end if;

select 	coalesce(max(cd_classif_setor),0)
into STRICT	cd_classif_setor_w
from 	setor_atendimento
where 	cd_setor_atendimento = cd_setor_atendimento_w;

if (ie_tipo_setor_classif_rn_w = 'P') then
	select 	coalesce(max(cd_classif_setor),0)
	into STRICT	cd_classif_setor_w
	from 	setor_atendimento
	where 	cd_setor_atendimento = cd_setor_paciente_w;
end if;

ie_classif_gastos_rn_w	:= 'S';
ie_dias_gastos_rn_w	:= 'N';

select 	max(dt_entrada),
	max(ie_trat_conta_rn)
into STRICT	dt_entrada_w,
	ie_trat_conta_rn_w
from 	atendimento_paciente
where	nr_atendimento = nr_atendimento_w;

if (coalesce(ie_trat_conta_rn_ww::text, '') = '') then
	ie_trat_conta_rn_ww := ie_trat_conta_rn_w;
end if;

if (nr_dias_gastos_rn_w > 0) and (ie_trat_conta_rn_w = DS_MAE_W) and
	((dt_atendimento_w - dt_entrada_w) > nr_dias_gastos_rn_w) then
	ie_dias_gastos_rn_w:= 'S';
end if;

if (cd_classif_setor_rn_w > 0) and (ie_trat_conta_rn_w = DS_MAE_W) then
	ie_classif_gastos_rn_w:= 'N';
	if (cd_classif_setor_rn_w = cd_classif_setor_w) then
		ie_classif_gastos_rn_w:= 'S';

	end if;
end if;

ie_status_acerto_w:= 1;
begin
select	coalesce(max(ie_status_acerto),1)
into STRICT	ie_status_acerto_w
from 	conta_paciente
where 	nr_interno_conta = nr_interno_conta_w;
exception
	when others then
	ie_status_acerto_w:= 1;
end;

if (coalesce(ie_regra_rn_item_w,'S') = 'S') then
	begin
	select	CASE WHEN ie_trat_conta_rn=DS_MAE_W THEN  coalesce(nr_atendimento_mae,nr_atendimento_w)  ELSE nr_atendimento_w END ,
		CASE WHEN ie_trat_conta_rn=DS_MAE_W THEN  null  ELSE CASE WHEN ie_transf_gasto_nr_w='M' THEN null  ELSE nr_interno_conta_w END  END
	into STRICT	nr_atendimento_w,
		nr_interno_conta_w
	from	atendimento_paciente
	where	nr_atendimento		= nr_atendimento_w
	and 	ie_dias_gastos_rn_w	= 'N'	-- parametro de dias para deixar os gastos no atend do RN
	and 	ie_classif_gastos_rn_w  = 'S'   -- parametro da classificacao do setor do RN
	and	(ie_trat_conta_rn IS NOT NULL AND ie_trat_conta_rn::text <> '')
	and	CASE WHEN ie_trat_conta_rn=DS_MAE_W THEN  obter_se_atendimento_fechado(nr_atendimento_mae)  ELSE 'N' END  = 'N'
	and 	ie_status_acerto_w	= 1
	and (obter_se_gastos_rn(cd_convenio_w, nr_atendimento_w, ie_trat_conta_rn, nr_seq_atepacu_w) = 'N') -- regra de setor para definicao dos gastos RN (OS  244366)
	and 	((ie_gastos_rn_alta_w = 'N') or
		((ie_gastos_rn_alta_w = 'S') and (ie_trat_conta_rn = DS_MAE_W) and (obter_se_atendimento_alta(nr_atendimento_mae) = 'N')) or
		((ie_gastos_rn_alta_w = 'D') and (ie_trat_conta_rn = DS_MAE_W) and (dt_atendimento_w <= coalesce(to_date(obter_dados_atendimento(nr_atendimento_mae,'DA'),'dd/mm/yyyy hh24:mi:ss'),dt_atendimento_w + 5))));
	exception
		 when others then
		if (ie_gastos_rn_alta_w = 'D') and (coalesce(nr_interno_conta_w,0) > 0) and (obter_atendimento_conta(nr_interno_conta_w) <> nr_atendimento_w) then
			begin
			select	CASE WHEN ie_trat_conta_rn=DS_MAE_W THEN  coalesce(nr_atendimento_mae,nr_atendimento_w)  ELSE obter_atendimento_conta(nr_interno_conta_w) END ,
				CASE WHEN ie_trat_conta_rn=DS_MAE_W THEN  null  ELSE CASE WHEN ie_transf_gasto_nr_w='M' THEN null  ELSE nr_interno_conta_w END  END
			into STRICT	nr_atendimento_w,
				nr_interno_conta_w
			from	atendimento_paciente
			where	nr_atendimento		= obter_atendimento_conta(nr_interno_conta_w)
			and 	ie_dias_gastos_rn_w	= 'N'	-- parametro de dias para deixar os gastos no atend do RN
			and 	ie_classif_gastos_rn_w  = 'S'   -- parametro da classificacao do setor do RN
			and	(ie_trat_conta_rn IS NOT NULL AND ie_trat_conta_rn::text <> '')
			and	CASE WHEN ie_trat_conta_rn=DS_MAE_W THEN  obter_se_atendimento_fechado(nr_atendimento_mae)  ELSE 'N' END  = 'N'
			and 	ie_status_acerto_w	= 1
			and (obter_se_gastos_rn(cd_convenio_w, nr_atendimento_w, ie_trat_conta_rn, nr_seq_atepacu_w) = 'N') -- regra de setor para definicao dos gastos RN (OS  244366)
			and 	((ie_gastos_rn_alta_w = 'N') or
				((ie_gastos_rn_alta_w = 'S') and (ie_trat_conta_rn = DS_MAE_W) and (obter_se_atendimento_alta(nr_atendimento_mae) = 'N')) or
				((ie_gastos_rn_alta_w = 'D') and (ie_trat_conta_rn = DS_MAE_W) and (dt_atendimento_w <= coalesce(to_date(obter_dados_atendimento(nr_atendimento_mae,'DA'),'dd/mm/yyyy hh24:mi:ss'),dt_atendimento_w + 5))));
			exception
			when others then
				nr_atendimento_w	:= nr_atendimento_w;

				if (ie_transf_gasto_nr_w = 'M') and (ie_status_acerto_w = 1) and (ie_trat_conta_rn_ww IS NOT NULL AND ie_trat_conta_rn_ww::text <> '') then
					nr_interno_conta_w	:= null;
				else
					nr_interno_conta_w  := nr_interno_conta_w;
				end if;
			end;
		else
			nr_atendimento_w	:= nr_atendimento_w;

			if (ie_transf_gasto_nr_w = 'M') and (ie_status_acerto_w = 1) and (ie_trat_conta_rn_ww IS NOT NULL AND ie_trat_conta_rn_ww::text <> '') then
				nr_interno_conta_w	:= null;
			else
				nr_interno_conta_w  := nr_interno_conta_w;
			end if;

		end if;
	end;
else
	begin
	select	count(*)
	into STRICT	qt_conta_w
	from	conta_paciente a,
		atendimento_paciente b
	where	a.nr_interno_conta 	= nr_interno_conta_w
	and	a.nr_atendimento	= b.nr_atendimento
	and	a.nr_atendimento	= nr_atendimento_w;
	
	select	CASE WHEN ie_trat_conta_rn_ww=DS_MAE_W THEN  coalesce(nr_atendimento_mae,nr_atendimento_w)  ELSE nr_atendimento_w END ,
		CASE WHEN ie_trat_conta_rn_ww=DS_MAE_W THEN  null  ELSE CASE WHEN qt_conta_w=1 THEN  nr_interno_conta_w  ELSE null END  END
	into STRICT	nr_atendimento_w,
		nr_interno_conta_w
	from	atendimento_paciente
	where	nr_atendimento		= nr_atendimento_w
	and	(ie_trat_conta_rn IS NOT NULL AND ie_trat_conta_rn::text <> '')
	and	CASE WHEN ie_trat_conta_rn=DS_MAE_W THEN  obter_se_atendimento_fechado(nr_atendimento_mae)  ELSE 'N' END  = 'N'
	and 	((ie_gastos_rn_alta_w = 'N') or
		((ie_gastos_rn_alta_w = 'S') and (ie_trat_conta_rn = DS_MAE_W) and (obter_se_atendimento_alta(nr_atendimento_mae) = 'N')) or
		((ie_gastos_rn_alta_w = 'D') and (ie_trat_conta_rn = DS_MAE_W) and (dt_atendimento_w <= coalesce(to_date(obter_dados_atendimento(nr_atendimento_mae,'DA'),'dd/mm/yyyy hh24:mi:ss'),dt_atendimento_w + 5))))
	and 	ie_status_acerto_w	= 1;
	exception
	when others then
			nr_atendimento_w	:= nr_atendimento_w;
			nr_interno_conta_w	:= nr_interno_conta_w;
	end;

end if;

begin

/* obter data da conta no caso de devolucao sem prescricao */


/* marcus 01/02/2001 -  */

if (cd_acao_w = 2) and (coalesce(nr_prescricao_w::text, '') = '') and (dt_conta_w = dt_atendimento_w) and (coalesce(nr_interno_conta_w::text, '') = '') and (ie_data_conta_devolucao_w = 'N') then
	begin
	if (ie_ordem_data_devolucao_w = 1) then
		open c01;
		loop
		fetch c01 into	dt_conta_dev_w,
				qt_saldo_dev_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			/* ricardo 03/09/2004 - alterei a rotina abaixo para que inclua a hora 23:59:59 */

			if	((qt_material_w * -1) <= qt_saldo_dev_w) then
				dt_conta_w		:= PKG_DATE_UTILS.END_OF(dt_conta_dev_w, 'DAY, 0');
			end if;
		end loop;
		close c01;
	else
		open c02;
		loop
		fetch c02 into	dt_conta_dev_w,
				qt_saldo_dev_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			/* ricardo 03/09/2004 - alterei a rotina abaixo para que inclua a hora 23:59:59 */

			if	((qt_material_w * -1) <= qt_saldo_dev_w) then
				dt_conta_w		:= PKG_DATE_UTILS.END_OF(dt_conta_dev_w, 'DAY, 0');
			end if;
		end loop;
		close c02;
	end if;
	end;
end if;
/* fim devolucao sem prescricao  */



/* obter o estabelecimento do atendimento */

select 		a.cd_estabelecimento,
	 	a.dt_entrada,
	 	coalesce(a.dt_alta,pkg_date_utils.get_dateTime(1900, 1, 1)),
	 	coalesce(a.dt_alta,clock_timestamp()),
	 	a.ie_tipo_atendimento,
		a.ie_clinica,
		coalesce(trunc((dt_entrada - coalesce(dt_nascimento, a.dt_entrada)) / 365),0),
		a.dt_medicacao,
		b.cd_pessoa_fisica,
		a.cd_estabelecimento,
		a.dt_alta
into STRICT  		cd_estabelecimento_w,
	 	dt_entrada_w,
	 	dt_alta_w,
	 	dt_altap_w,
	 	ie_tipo_atendimento_w,
		ie_clinica_w,
		qt_idade_w,
		dt_medicacao_w,
		cd_pessoa_fisica_w,
		cd_estab_atend_w,
		dt_alta_preco_w
from 		pessoa_fisica b,
		atendimento_paciente a
where		a.nr_atendimento	= nr_atendimento_w
  and		a.cd_pessoa_fisica	= b.cd_pessoa_fisica;
exception
     		when others then
          	cd_estabelecimento_w := 1;
end;

select 	wheb_usuario_pck.get_cd_estabelecimento
into STRICT	cd_estab_logado_w
;

select	coalesce(max(ie_estabelecimento_conta), 'A')
into STRICT	ie_estabelecimento_conta_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estab_logado_w;

if (ie_estabelecimento_conta_w = 'L') then
	cd_estabelecimento_w:= cd_estab_logado_w;
end if;

select	coalesce(max(ie_estabelecimento_conta), 'A'),
	coalesce(max(ie_gerar_conta_guia_dif), 'N'),
	coalesce(max(ie_calculo_taxa_regra), 'C'),
	coalesce(max(ie_calcular_mat_auditado), 'S'),
	coalesce(max(ie_valor_inf_desconto), 'N'),
	coalesce(max(ie_glosa_mat_proc_princ), 'N'),
	coalesce(max(ie_valor_inf_pacote), 'N'),
	coalesce(max(ie_convenio_conta_param),'N'),
	coalesce(max(ie_regra_conta_terc_mat),'N'),
	coalesce(max(ie_regra_tipo_atend),'A')
into STRICT	ie_estabelecimento_conta_w,
	ie_gerar_conta_guia_dif_w,
	ie_calculo_taxa_regra_w,
	ie_calcular_mat_auditado_w,
	ie_valor_inf_desconto_w,
	ie_glosa_mat_proc_princ_w,
	ie_valor_inf_pacote_w,
	ie_convenio_conta_param_w,
	ie_regra_conta_terc_mat_w,
	ie_regra_tipo_atend_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;

if (coalesce(ie_regra_tipo_atend_w,'A') = 'C') then
	begin
	select	coalesce(max(ie_tipo_atend_conta),ie_tipo_atendimento_w)
	into STRICT	ie_tipo_atendimento_w
	from 	conta_paciente
	where 	nr_interno_conta = nr_interno_conta_w;
	exception
		when others then
		ie_tipo_atendimento_w:= ie_tipo_atendimento_w;
	end;
end if;

if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') and (ie_convenio_conta_param_w	= 'S') then

	if (ie_recalculo_conta_w = 'N') then
		ie_altera_guia_w := coalesce(obter_valor_param_usuario(67, 370, obter_perfil_ativo, nm_usuario_p, cd_estab_conta_w),'N');
	else
		ie_altera_guia_w := Param_Recalculo_Conta_pck.get_parametro(67,370, obter_perfil_ativo, nm_usuario_p, cd_estab_conta_w);
	end if;

	select	coalesce(cd_convenio_calculo,cd_convenio_parametro),
		coalesce(cd_categoria_calculo,cd_categoria_parametro),
		coalesce(CASE WHEN ie_altera_guia_w='S' THEN  null  ELSE cd_autorizacao END ,nr_doc_convenio_w)
	into STRICT	cd_convenio_w,
		cd_categoria_w,
		nr_doc_convenio_w
	from	conta_paciente
	where	nr_interno_conta	= nr_interno_conta_w;

	cd_convenio_orig_w		:= cd_convenio_w;
	cd_categoria_orig_w		:= cd_categoria_w;
	cd_convenio_calculo_w		:= cd_convenio_w;
	cd_categoria_calculo_w		:= cd_categoria_w;
end if;

begin
select	coalesce(max(ie_status_acerto),2)
into STRICT	ie_status_conta_proc_w
from 	conta_paciente
where 	nr_interno_conta = nr_interno_conta_proc_w;
exception
	when others then
	ie_status_conta_proc_w:= 2;
end;

if (ie_glosa_mat_proc_princ_w	= 'S') and (ie_status_conta_proc_w = 1) and (nr_atendimento_proc_w	= nr_atendimento_w) and
	((cd_situacao_glosa_proc_w 	= 1) or (cd_convenio_w <> cd_convenio_proc_w)) then
	nr_interno_conta_w	:= nr_interno_conta_proc_w;
	cd_convenio_w		:= cd_convenio_proc_w;
	cd_categoria_w		:= cd_categoria_proc_w;
end if;

ie_altera_auditoria_w	:= 'S';

if (ie_calcular_mat_auditado_w = 'N') and (ie_auditoria_w = 'S') then
	ie_altera_auditoria_w	:= 'N';
end if;

if (ie_estabelecimento_conta_w = 'S') then
	begin

	select	max(cd_estabelecimento_base)
	into STRICT	cd_estabelecimento_w
	from	setor_atendimento
	where	cd_setor_atendimento	= cd_setor_atendimento_w;

	end;
end if;

begin
select 	 cd_grupo_material,
	 cd_subgrupo_material,
	 cd_classe_material
into STRICT	 cd_grupo_material_w,
	 cd_subgrupo_material_w,
	 cd_classe_material_w
from	 estrutura_material_v
where	 cd_material	= cd_material_w;
exception
     	 when others then
	 begin
	 cd_grupo_material_w	:= 0;
	 cd_subgrupo_material_w	:= 0;
	 cd_classe_material_w	:= 0;
	 end;
end;

select	count(*)
into STRICT	qt_reg_estab_terc_w
from	regra_conta_terceiro
where	cd_estabelecimento	= cd_estabelecimento_w
and	coalesce(cd_convenio,cd_convenio_w)	= cd_convenio_w
and	coalesce(ie_situacao, 'A')		= 'A';

select	cd_procedencia
into STRICT	cd_procedencia_w
from 	atendimento_paciente
where 	nr_atendimento 	= nr_atendimento_w;

if (qt_reg_estab_terc_w	> 0) and (ie_regra_conta_terc_mat_w = 'S') then
	begin

	select	obter_estab_conta_terceiro(
					cd_estabelecimento_w,
					cd_convenio_w,
					cd_categoria_w,
					ie_tipo_atendimento_w,
					cd_setor_atendimento_w,
					0, 0, 0, 0, 0,
					cd_grupo_material_w,
					cd_subgrupo_material_w,
					cd_classe_material_w,
					cd_material_w, '0',
					cd_procedencia_w,
					null,
					coalesce(dt_conta_w,dt_atendimento_w),
					ie_clinica_w,
					null)
	into STRICT	cd_estab_terceiro_w
	;

	if (cd_estab_terceiro_w	<> 0) then
		cd_estabelecimento_w	:= cd_estab_terceiro_w;
	end if;

	if (coalesce(cd_estab_terceiro_w,0) <> 0) and (coalesce(cd_estab_terceiro_w,0) <> coalesce(cd_estab_conta_w,0)) and (coalesce(cd_funcao_w,0) = 67) and (ie_status_acerto_w = 1) then
	   nr_interno_conta_w :=  null;
	end if;

	end;
end if;
/* rotina nova para gerar conta no estabelecimento do terceiro  - fim(fabricio  29-10-2008) */



/* obter o tipo de acomodacao do convenio */

begin
select	coalesce(cd_tipo_acomodacao,0),
	cd_plano_convenio
into STRICT	cd_tipo_acomodacao_w,
	cd_plano_w
from	atend_categoria_convenio_v
where	nr_atendimento		= nr_atendimento_w
and	cd_convenio		= cd_convenio_w
and	cd_categoria		= cd_categoria_w;
exception
     		when others then
          	cd_tipo_acomodacao_w	:= 0;
		cd_plano_w		:= null;
end;

/* obter glosa do material */

SELECT * FROM glosa_material(cd_estabelecimento_w, 	-- cd_estabelecimento_p
		nr_atendimento_w,        -- nr_atendimento_p
           	dt_preco_w,              -- dt_atendimento_p
           	cd_material_w,           -- cd_material_p
           	qt_material_w,           -- qt_material_p
		cd_tipo_acomodacao_w,    -- cd_tipo_acomodacao_p
		ie_tipo_atendimento_w,   -- ie_tipo_atendimento_p
		cd_setor_atendimento_w,  -- cd_setor_atendimento_p
		qt_idade_w,              -- qt_idade_p
		cd_procedimento_w,       -- cd_proc_referencia_p
		ie_origem_proced_w,      -- ie_origem_proced_p
		nr_seq_mat_p,            -- nr_sequencia_p
		nr_seq_proc_interno_w,   -- nr_seq_proc_interno_p
           	cd_convenio_w,           -- cd_convenio_p     	 in
           	cd_categoria_w,          -- cd_categoria_p    	 in
		ie_tipo_convenio_w,      -- ie_tipo_convenio_p	 out
		ie_classif_contabil_w,   -- ie_classif_convenio_p out
           	cd_autorizacao_w,        -- cd_autorizacao_p    	 out
		nr_seq_autorizacao_w,    -- nr_seq_autorizacao_p  out
           	qt_autorizada_w,         -- qt_autorizada_p    	 out
           	cd_senha_w,              -- cd_senha_p    	 out
           	nm_responsavel_w,        -- nm_responsavel_p    	 out
		ie_glosa_w,              -- ie_glosa_p		 out
		cd_situacao_glosa_w,     -- cd_situacao_glosa_p	 out
		pr_glosa_w,              -- pr_glosa_p		 out
		vl_glosa_w, 		-- vl_glosa_p		 out
		cd_motivo_exc_conta_ww,  -- cd_motivo_exc_conta_p out
		ie_autor_particular_w,   -- ie_autor_particular_p out
		cd_convenio_glosa_ww,    -- cd_convenio_glosa_p	 out
		cd_categoria_glosa_ww,   -- cd_categoria_glosa_p	 out
		nr_seq_regra_ajuste_ww,  -- nr_seq_regra_ajuste_p out
		0) INTO STRICT 
           	cd_convenio_w, 
           	cd_categoria_w, 
		ie_tipo_convenio_w, 
		ie_classif_contabil_w, 
           	cd_autorizacao_w, 
		nr_seq_autorizacao_w, 
           	qt_autorizada_w, 
           	cd_senha_w, 
           	nm_responsavel_w, 
		ie_glosa_w, 
		cd_situacao_glosa_w, 
		pr_glosa_w, 
		vl_glosa_w, 
		cd_motivo_exc_conta_ww, 
		ie_autor_particular_w, 
		cd_convenio_glosa_ww, 
		cd_categoria_glosa_ww, 
		nr_seq_regra_ajuste_ww;	                -- nr_seq_orcamento_p	 in
if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then
	
	SELECT * FROM sus_obter_complex_financ_aih(nr_interno_conta_w, ie_complexidade_sus_w, ie_tipo_financ_sus_w) INTO STRICT ie_complexidade_sus_w, ie_tipo_financ_sus_w;

end if;
		
select	coalesce(max(ie_tipo_convenio),0),
	max(ie_classif_contabil)
into STRICT	ie_tipo_convenio_aux2_w,
	ie_classif_contabil_w
from	convenio
where	cd_convenio	= cd_convenio_w;	

cd_sequencia_parametro_w := null;

SELECT * FROM define_conta_material(
	cd_estabelecimento_w, cd_material_w, 1, ie_clinica_w, cd_setor_atendimento_w, ie_classif_contabil_w, ie_tipo_atendimento_w, ie_tipo_convenio_aux2_w, cd_convenio_w, cd_categoria_w, cd_local_estoque_w, null, dt_entrada_w, cd_conta_receita_w, cd_centro_custo_w, cd_plano_w, ie_regra_pacote_w, null, ie_complexidade_sus_w, ie_tipo_financ_sus_w) INTO STRICT cd_conta_receita_w, cd_centro_custo_w;
	
	cd_sequencia_parametro_w := philips_contabil_pck.get_parametro_conta_contabil();

begin
     update 	material_atend_paciente
        set	cd_conta_contabil     	= cd_conta_receita_w,
		cd_centro_custo_receita	= CASE WHEN cd_centro_custo_w=0 THEN null  ELSE cd_centro_custo_w END ,
		nm_usuario 		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		cd_sequencia_parametro = cd_sequencia_parametro_w
     where  	nr_sequencia        	= nr_seq_mat_p
     and	ie_altera_auditoria_w	= 'S';
end;	
	
<<final>>

/* incluido o select abaixo para ter algo apos o goto (precisa ter alguma linha de programa apos ele) */

select	count(*)
into STRICT	qt_mat_w
from	material_atend_paciente
where	nr_sequencia	= nr_seq_mat_p;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_conta_contab_material ( nr_seq_mat_p bigint, nm_usuario_p text) FROM PUBLIC;

