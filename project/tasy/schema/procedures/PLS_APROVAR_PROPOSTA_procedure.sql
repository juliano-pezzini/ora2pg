-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_aprovar_proposta ( nr_seq_proposta_p bigint, ie_commit_p text, nm_usuario_p text) AS $body$
DECLARE


ie_aprovar_inconsistente_w	varchar(1)	:= 'N';
ie_aprovar_benef_analise_w	varchar(1)	:= 'S';
qt_inconsistente_w		bigint;
qt_benef_analise_w		bigint;
ie_consistir_sib_w		varchar(1)	:= 'N';
ie_liberar_sib_w		varchar(1)	:= 'N';
ds_mensagem_retorno_w		varchar(255);
nr_seq_beneficiario_w		bigint;
cd_estabelecimento_w		bigint;
ds_erro_w			varchar(255);
ie_aprovar_tab_manutencao_w	varchar(1)	:= 'S';
ie_aprovar_bonif_manual_w	varchar(1)	:= 'S';
ie_aprovar_carenc_manual_w	varchar(1)	:= 'S';
qt_tabela_manutencao_w		bigint;
qt_bonificacao_manual_w		bigint;
qt_carencia_manual_w		bigint;
qt_produtos_pre_w		bigint;
ie_tipo_proposta_w		bigint;
ie_aprovar_copartic_manut_w	varchar(1)	:= 'N';
qt_regra_copartic_w		bigint;
qt_dias_fut_aprovacao_w		bigint;
dt_proposta_w			pls_proposta_adesao.dt_inicio_proposta%type;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_proposta_beneficiario
	where	nr_seq_proposta	= nr_seq_proposta_p
	and	coalesce(dt_cancelamento::text, '') = '';
	

BEGIN

CALL pls_verificar_parecer_benef(nr_seq_proposta_p, nm_usuario_p);

cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;

/* Leitura do parametro 4 da OPS - Proposta de adesao eletronica */

ie_liberar_sib_w		:= coalesce(obter_valor_param_usuario(1232, 4, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w),'N');

/* Leitura do parametro 7 da OPS - Proposta de adesao eletronica */

ie_aprovar_inconsistente_w	:= coalesce(obter_valor_param_usuario(1232, 7, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w), 'N');

/* Parametro [16] - Permite aprovar proposta com beneficiarios em analise */

ie_aprovar_benef_analise_w	:= coalesce(obter_valor_param_usuario(1232, 16, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w), 'N');

/* Parametro [30] - Estagio para a realizacao da consistencia para o SIB */

ie_consistir_sib_w		:= coalesce(obter_valor_param_usuario(1232, 30, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w), 'C');

/* Parametro [74] - Permite aprovar proposta de adesao com tabelas de preco que sofreram manutencao de preco */

ie_aprovar_tab_manutencao_w	:= coalesce(obter_valor_param_usuario(1232, 74, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w), 'S');

/* Parametro [75] - Permite aprovar proposta com bonificacoes vinculadas manualmente */

ie_aprovar_bonif_manual_w	:= coalesce(obter_valor_param_usuario(1232, 75, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w), 'S');

/* Parametro [76] - Permite aprovar proposta com carencias vinculadas manualmente */

ie_aprovar_carenc_manual_w	:= coalesce(obter_valor_param_usuario(1232, 76, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w), 'S');

/* Parametro [88] - Permite aprovar proposta de adesao com manutencao de regra de coparticipacao */

ie_aprovar_copartic_manut_w	:= coalesce(obter_valor_param_usuario(1232, 88, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w), 'N');

--Parametro [109] - Quantidade de dias futuros para permitir aprovacao da proposta
qt_dias_fut_aprovacao_w		:= coalesce(obter_valor_param_usuario(1232, 109, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w), 0);

select	ie_tipo_proposta,
	dt_inicio_proposta
into STRICT	ie_tipo_proposta_w,
	dt_proposta_w
from	pls_proposta_adesao
where	nr_sequencia	= nr_seq_proposta_p;

if (qt_dias_fut_aprovacao_w > 0) and
	((dt_proposta_w-clock_timestamp()) > qt_dias_fut_aprovacao_w) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(361538);
end if;

if (ie_aprovar_tab_manutencao_w	= 'N') then
	select	count(1)
	into STRICT	qt_produtos_pre_w
	from	pls_plano		b,
		pls_proposta_plano	a
	where	a.nr_seq_plano		= b.nr_sequencia
	and	a.nr_seq_proposta	= nr_seq_proposta_p
	and	b.ie_preco		= '1';
	
	/*aaschlote 25/07/2012 - Apenas entrar na consistencia caso o produto da proposta seja pre-estabalecido*/

	if (qt_produtos_pre_w > 0) then
		select	count(*)
		into STRICT	qt_tabela_manutencao_w
		from	pls_tabela_preco		b,
			pls_proposta_plano		a
		where	a.nr_seq_tabela		= b.nr_sequencia
		and	(b.nr_seq_tabela_original IS NOT NULL AND b.nr_seq_tabela_original::text <> '')
		and	a.nr_seq_proposta	= nr_seq_proposta_p;
		
		if (qt_tabela_manutencao_w > 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(192714);
		end if;
	end if;
end if;

if (ie_aprovar_bonif_manual_w	= 'N') then
	select	sum(qt_bonificacao_manual)
	into STRICT	qt_bonificacao_manual_w
	from (	SELECT	count(*) qt_bonificacao_manual
		from	pls_bonificacao_vinculo		c,
			pls_proposta_beneficiario	b,
			pls_proposta_adesao		a
		where	a.nr_sequencia = b.nr_seq_proposta
		and	b.nr_sequencia = c.nr_seq_segurado_prop
		and	a.nr_sequencia = nr_seq_proposta_p
		and	coalesce(b.dt_cancelamento::text, '') = ''
		
union all

		SELECT	count(*) qt_bonificacao_manual
		from	pls_bonificacao_vinculo		b,
			pls_proposta_adesao		a
		where	a.nr_sequencia = b.nr_seq_proposta
		and	a.nr_sequencia = nr_seq_proposta_p) alias5;
	
	if (qt_bonificacao_manual_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(192715);
	end if;
end if;

if (ie_aprovar_carenc_manual_w	= 'N') then
	select	sum(qt_carencia_manual)
	into STRICT	qt_carencia_manual_w
	from (	SELECT	count(*) qt_carencia_manual
		from	pls_carencia			c,
			pls_proposta_beneficiario	b,
			pls_proposta_adesao		a
		where	a.nr_sequencia = b.nr_seq_proposta
		and	b.nr_sequencia = c.nr_seq_pessoa_proposta
		and	coalesce(c.ie_cpt,'N') = 'N'
		and	a.nr_sequencia = nr_seq_proposta_p
		and	coalesce(b.dt_cancelamento::text, '') = ''
		
union all

		SELECT	count(*) qt_carencia_manual
		from	pls_carencia		b,
			pls_proposta_adesao	a
		where	a.nr_sequencia = b.nr_seq_proposta
		and	coalesce(b.ie_cpt,'N') = 'N'
		and	a.nr_sequencia = nr_seq_proposta_p) alias7;
	
	if (qt_carencia_manual_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(192717);
	end if;
end if;

if (ie_aprovar_inconsistente_w	= 'N') then
	select	count(*)
	into STRICT	qt_inconsistente_w
	from	pls_proposta_validacao
	where	nr_seq_proposta	= nr_seq_proposta_p
	and	ie_consistido	= 'I';
	
	if (qt_inconsistente_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(192718);
	end if;
end if;

if (ie_aprovar_copartic_manut_w	= 'N') then
	select	count(*)
	into STRICT	qt_regra_copartic_w
	from	pls_regra_coparticipacao
	where	nr_seq_proposta = nr_seq_proposta_p;
	
	if (qt_regra_copartic_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(214964); /* Esta proposta de adesao possui regras de coparticipacao, por isto nao pode ser aprovada. (Parametro [88]) */
	end if;
end if;

/* Consistir o SIB */

if (ie_consistir_sib_w	= 'A') and (ie_liberar_sib_w	= 'N') then
	
	CALL pls_consistir_contrato_sib(null,nr_seq_proposta_p,null,null,'P','N',nm_usuario_p);
	
	Select	count(*)
	into STRICT	qt_inconsistente_w
	from	pls_lote_consistencia_sib
	where	nr_seq_proposta	= nr_seq_proposta_p;
	
	if (qt_inconsistente_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(192719);
	end if;
end if;

select	count(*)
into STRICT	qt_benef_analise_w
from	pls_analise_adesao
where	nr_seq_proposta	= nr_seq_proposta_p
and	ie_status	in ('A','B','C');

if (qt_benef_analise_w	> 0) and (ie_aprovar_benef_analise_w = 'N') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(192720);
end if;

/*aaschlote 08/12/2011 OS - 388129*/

if (ie_tipo_proposta_w not in (5,9)) then
	ds_erro_w := pls_consisite_exigencia_analis(nr_seq_proposta_p, cd_estabelecimento_w, nm_usuario_p, ds_erro_w);
	
	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(192721,'DS_ERRO='||ds_erro_w);
	end if;
end if;

update	pls_proposta_adesao
set	ie_status	= 'A',
	nm_usuario	= nm_usuario_p,
	dt_atualizacao	= clock_timestamp()
where	nr_sequencia	= nr_seq_proposta_p;

/*aaschlote 02/05/2011 OS - 314422 - Gerar historico para o beneficiario*/

open C01;
loop
fetch C01 into
	nr_seq_beneficiario_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	CALL pls_gravar_histor_prop_benef(nr_seq_beneficiario_w,clock_timestamp(),'5', wheb_mensagem_pck.get_texto(1168531), nm_usuario_p);
	end;
end loop;
close C01;

if (coalesce(ie_commit_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_aprovar_proposta ( nr_seq_proposta_p bigint, ie_commit_p text, nm_usuario_p text) FROM PUBLIC;

