-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_proc_conv_global (cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, dt_referencia_p timestamp, cd_agenda_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, cd_medico_p text, ie_medico_p text, cd_plano_p text, ie_consistencia_p INOUT text, ie_agenda_p INOUT text, nr_sequencia_p bigint default null, nr_seq_regra_p INOUT bigint DEFAULT NULL) AS $body$
DECLARE

 
cd_area_proced_w		integer;
cd_espec_proced_w	integer;
cd_grupo_proced_w	bigint;
qt_exclusivo_w		bigint;
nr_seq_regra_w		bigint;
ie_consistencia_w		varchar(255)	:= '';
ie_agenda_w		varchar(1)	:= 'S';
ie_forma_consistencia_w	varchar(1)	:= 'M';
cd_municipio_ibge_w	varchar(10);
qt_regra_w		bigint;
qt_agenda_w		bigint;
dt_referencia_w		timestamp;
nr_seq_forma_org_w	bigint;
nr_seq_grupo_w		bigint;
nr_seq_subgrupo_w	bigint;
cd_perfil_w			integer;
cd_medico_regra_w	varchar(10);
dia_da_semana_w		varchar(100);
ds_inicio_w		varchar(100);
ds_fim_w		varchar(100);
ds_hora_referencia_w	varchar(100);
cd_procedimento_global_w bigint;
ie_origem_proced_global_w bigint;
qt_horas_w		double precision;
nr_seq_classif_w	bigint:=0;
ds_mensagem_padrao_w	varchar(2000);
qt_regra_ag_qt_w		agenda_regra_quantidade.qt_regra%type;
ie_forma_consistencia_ag_qt_w 	agenda_regra_quantidade.ie_forma_consistencia%type;
ds_mensagem_ag_qt_w		agenda_regra_quantidade.ds_mensagem%type;

C01 CURSOR FOR 
	SELECT	coalesce(nr_sequencia,0) 
	from	agenda_regra 
	where	((cd_estabelecimento = cd_estabelecimento_p) or (coalesce(cd_estabelecimento::text, '') = '')) 
	and	coalesce(cd_agenda,cd_agenda_p) = cd_agenda_p 
	and	((cd_convenio = cd_convenio_p) or (coalesce(cd_convenio::text, '') = '')) 
	and	((cd_plano_convenio = cd_plano_p) or (coalesce(cd_plano_convenio::text, '') = ''))	 
	and	((cd_categoria = cd_categoria_p) or (coalesce(cd_categoria::text, '') = '')) 
	and	((cd_area_proc = cd_area_proced_w) or (coalesce(cd_area_proc::text, '') = '')) 
	and	((cd_especialidade = cd_espec_proced_w) or (coalesce(cd_especialidade::text, '') = '')) 
	and	((cd_grupo_proc = cd_grupo_proced_w) or (coalesce(cd_grupo_proc::text, '') = '')) 
	and	coalesce(nr_seq_forma_org, nr_seq_forma_org_w)	= nr_seq_forma_org_w 	 
	and   ((obter_se_medico_equipe(nr_seq_equipe,cd_medico_p) = 'S') or (coalesce(nr_seq_equipe::text, '') = '')) 
	and	coalesce(nr_seq_grupo, nr_seq_grupo_w)		= nr_seq_grupo_w 	 
	and	coalesce(nr_seq_subgrupo, nr_seq_subgrupo_w)		= nr_seq_subgrupo_w 
	and	((cd_procedimento = cd_procedimento_p) or (coalesce(cd_procedimento::text, '') = '')) 
	and	((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_p) or (coalesce(ie_origem_proced::text, '') = ''))) 
	and	((nr_seq_proc_interno = nr_seq_proc_interno_p) or (coalesce(nr_seq_proc_interno::text, '') = '')) 
	and	((cd_medico = cd_medico_p) or (coalesce(cd_medico::text, '') = '') or ((coalesce(cd_medico_p::text, '') = '') and (coalesce(cd_medico::text, '') = ''))) 
	and (coalesce(ie_medico, 'E') = ie_medico_p) 
	and	((cd_perfil = cd_perfil_w) or (coalesce(cd_perfil::text, '') = '')) 
	and	((nr_seq_classif = nr_seq_classif_w) or (coalesce(nr_seq_classif::text, '') = '')) 
	and	coalesce(cd_municipio_ibge::text, '') = '' 
	and	((coalesce(ie_dia_semana,dia_da_Semana_w) = dia_da_Semana_w) or ((coalesce(ie_dia_semana,dia_da_Semana_w) = 9) and (dia_da_Semana_w not in (7,1)))) 
	and	dt_referencia_p between to_date(to_char(dt_referencia_p,'dd/mm/yyyy') || ' ' || coalesce(to_char(HR_INICIO,'hh24:mi:ss'),'00:00:00'),'dd/mm/yyyy hh24:mi:ss') and 
					to_date(to_char(dt_referencia_p,'dd/mm/yyyy') || ' ' || coalesce(to_char(HR_FIM,'hh24:mi:ss'),'23:59:59'),'dd/mm/yyyy hh24:mi:ss') 
	and	dt_referencia_p	between coalesce(dt_inicio_vigencia,to_date('01/01/1900 00:00:01','dd/mm/yyyy hh24:mi:ss')) and coalesce(dt_fim_vigencia,to_date('01/01/2099 23:59:59','dd/mm/yyyy hh24:mi:ss')) 
	and	((coalesce(qt_horas_ant_agenda,0) = 0) or (qt_horas_w > qt_horas_ant_agenda)) 
	AND	((CD_AGENDA = CD_AGENDA_P) 
	OR (coalesce(CD_AGENDA::text, '') = '' 
		 AND (IE_AGENDA = CASE WHEN OBTER_TIPO_AGENDA(CD_AGENDA_P)=1 THEN  'CI' WHEN OBTER_TIPO_AGENDA(CD_AGENDA_P)=2 THEN  'E'  ELSE '' END  
			OR	IE_AGENDA = 'T'))) 
	order by coalesce(cd_convenio,0),		 
		coalesce(cd_procedimento,0), 
		coalesce(nr_seq_proc_interno,0), 
		coalesce(cd_grupo_proc,0), 
		coalesce(cd_especialidade,0), 
		coalesce(cd_area_proc,0), 
		coalesce(nr_seq_forma_org,0), 
		coalesce(nr_seq_subgrupo,0), 
		coalesce(nr_seq_grupo,0), 
		coalesce(cd_medico,'0'), 
		coalesce(cd_perfil,0), 
		coalesce(nr_seq_classif,0);

		 
C02 CURSOR FOR 
	SELECT	coalesce(nr_sequencia,0) 
	from	agenda_regra 
	where	((cd_estabelecimento = cd_estabelecimento_p) or (coalesce(cd_estabelecimento::text, '') = '')) 
	and	coalesce(cd_agenda,cd_agenda_p) = cd_agenda_p 
	and	((cd_convenio = cd_convenio_p) or (coalesce(cd_convenio::text, '') = '')) 
	and	((cd_plano_convenio = cd_plano_p) or (coalesce(cd_plano_convenio::text, '') = ''))	 
	and	((cd_categoria = cd_categoria_p) or (coalesce(cd_categoria::text, '') = '')) 
	and	((cd_area_proc = cd_area_proced_w) or (coalesce(cd_area_proc::text, '') = '')) 
	and	((cd_especialidade = cd_espec_proced_w) or (coalesce(cd_especialidade::text, '') = '')) 
	and	((cd_grupo_proc = cd_grupo_proced_w) or (coalesce(cd_grupo_proc::text, '') = '')) 
	and	coalesce(nr_seq_forma_org, nr_seq_forma_org_w)	= nr_seq_forma_org_w 	 
	and	coalesce(nr_seq_grupo, nr_seq_grupo_w)		= nr_seq_grupo_w 	 
	and   ((obter_se_medico_equipe(nr_seq_equipe,cd_medico_p) = 'S') or (coalesce(nr_seq_equipe::text, '') = '')) 
	and	coalesce(nr_seq_subgrupo, nr_seq_subgrupo_w)		= nr_seq_subgrupo_w 
	and	((cd_procedimento = cd_procedimento_p) or (coalesce(cd_procedimento::text, '') = '')) 
	and	((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_p) or (coalesce(ie_origem_proced::text, '') = ''))) 
	and	((nr_seq_proc_interno = nr_seq_proc_interno_p) or (coalesce(nr_seq_proc_interno::text, '') = '')) 
	and	((cd_medico = cd_medico_p) or (coalesce(cd_medico::text, '') = '') or ((coalesce(cd_medico_p::text, '') = '') and (coalesce(cd_medico::text, '') = ''))) 
	and (coalesce(ie_medico, 'E') = ie_medico_p) 
	and	((cd_perfil = cd_perfil_w) or (coalesce(cd_perfil::text, '') = '')) 
	and	((nr_seq_classif = nr_seq_classif_w) or (coalesce(nr_seq_classif::text, '') = '')) 
	and	coalesce(cd_municipio_ibge::text, '') = '' 
	and	dt_referencia_p between to_date(to_char(dt_referencia_p,'dd/mm/yyyy') || ' ' || coalesce(to_char(HR_INICIO,'hh24:mi:ss'),'00:00:00'),'dd/mm/yyyy hh24:mi:ss') and 
					to_date(to_char(dt_referencia_p,'dd/mm/yyyy') || ' ' || coalesce(to_char(HR_FIM,'hh24:mi:ss'),'23:59:59'),'dd/mm/yyyy hh24:mi:ss') 
	and	dt_referencia_p	between coalesce(dt_inicio_vigencia,to_date('01/01/1900 00:00:01','dd/mm/yyyy hh24:mi:ss')) and coalesce(dt_fim_vigencia,to_date('01/01/2099 23:59:59','dd/mm/yyyy hh24:mi:ss')) 
	and	((coalesce(qt_horas_ant_agenda,0) = 0) or (qt_horas_w > qt_horas_ant_agenda))				 
	AND	((CD_AGENDA = CD_AGENDA_P) 
	OR (coalesce(CD_AGENDA::text, '') = '' 
		 AND (IE_AGENDA = CASE WHEN OBTER_TIPO_AGENDA(CD_AGENDA_P)=1 THEN  'CI' WHEN OBTER_TIPO_AGENDA(CD_AGENDA_P)=2 THEN  'E'  ELSE '' END  
			OR	IE_AGENDA = 'T'))) 
	order by coalesce(cd_convenio,0),		 
		coalesce(cd_procedimento,0), 
		coalesce(nr_seq_proc_interno,0), 
		coalesce(cd_grupo_proc,0), 
		coalesce(cd_especialidade,0), 
		coalesce(cd_area_proc,0), 
		coalesce(nr_seq_forma_org,0), 
		coalesce(nr_seq_subgrupo,0), 
		coalesce(nr_seq_grupo,0), 
		coalesce(cd_medico,'0'), 
		coalesce(cd_perfil,0), 
		coalesce(nr_seq_classif,0);

c03 CURSOR FOR 
	SELECT	qt_regra, 
			ie_forma_consistencia, 
			ds_mensagem 
	from	agenda_regra_quantidade 
	where	ie_situacao = 'A' 
	and		nr_seq_regra = nr_seq_regra_w 
	order by qt_regra desc;
		

BEGIN 
 
dt_referencia_w		:= trunc(dt_referencia_p, 'month');
 
qt_horas_w		:= (dt_referencia_p - clock_timestamp()) * 24;
 
select Obter_Cod_Dia_Semana(dt_referencia_p), to_char(dt_referencia_p,'hh24:mi') 
into STRICT 	dia_da_semana_w, 
	ds_hora_referencia_w
;
 
cd_perfil_w			:= obter_perfil_ativo;
 
 
SELECT * FROM obter_proc_tab_interno_conv( 
					nr_seq_proc_interno_p, cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, cd_plano_p, null, cd_procedimento_global_w, ie_origem_proced_global_w, null, dt_referencia_p, null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_global_w, ie_origem_proced_global_w;
 
select	max(cd_municipio_ibge) 
into STRICT	cd_municipio_ibge_w 
from	compl_pessoa_fisica 
where	cd_pessoa_fisica	= cd_pessoa_fisica_p 
and	ie_tipo_complemento	= 1;
 
if (coalesce(nr_seq_proc_interno_p,0) > 0) then 
	select	coalesce(max(nr_seq_classif),0) 
	into STRICT	nr_seq_classif_w 
	from	proc_interno 
	where	nr_sequencia = nr_seq_proc_interno_p;
end if;	
 
 
if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') then 
	/* obter informação procedimento */
 
	select	coalesce(max(cd_area_procedimento),0), 
		coalesce(max(cd_especialidade),0), 
		coalesce(max(cd_grupo_proc),0), 
		coalesce(max(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento, ie_origem_proced, 'C', 'F'),'F'),1,10)),0), 
		coalesce(max(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento, ie_origem_proced, 'C', 'G'),'G'),1,10)),0), 
		coalesce(max(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento, ie_origem_proced, 'C', 'S'),'S'),1,10)),0) 
	into STRICT	cd_area_proced_w, 
		cd_espec_proced_w, 
		cd_grupo_proced_w, 
		nr_seq_forma_org_w, 
		nr_seq_grupo_w, 
		nr_seq_subgrupo_w 
	from	estrutura_procedimento_v 
	where	cd_procedimento = cd_procedimento_p 
	and	ie_origem_proced = ie_origem_proced_p;
 
	/* obter regra exclusiva */
 
	select	count(*) 
	into STRICT	qt_exclusivo_w 
	from	agenda_regra 
	where	((cd_estabelecimento = cd_estabelecimento_p) or (coalesce(cd_estabelecimento::text, '') = '')) 
	and	coalesce(cd_agenda,cd_agenda_p) = cd_agenda_p 
	and	((cd_perfil = cd_perfil_w) or (coalesce(cd_perfil::text, '') = '')) 
	and (coalesce(ie_medico, 'E') = ie_medico_p) 
	and	ie_permite = 'E' 
	and	((coalesce(ie_dia_semana,dia_da_Semana_w) = dia_da_Semana_w) or ((coalesce(ie_dia_semana,dia_da_Semana_w) = 9) and (dia_da_Semana_w not in (7,1)))) 
	and	dt_referencia_p between to_date(to_char(dt_referencia_p,'dd/mm/yyyy') || ' ' || coalesce(to_char(HR_INICIO,'hh24:mi:ss'),'00:00:00'),'dd/mm/yyyy hh24:mi:ss') and 
					to_date(to_char(dt_referencia_p,'dd/mm/yyyy') || ' ' || coalesce(to_char(HR_FIM,'hh24:mi:ss'),'23:59:59'),'dd/mm/yyyy hh24:mi:ss') 
	and	dt_referencia_p	between coalesce(dt_inicio_vigencia,to_date('01/01/1900 00:00:01','dd/mm/yyyy hh24:mi:ss')) and coalesce(dt_fim_vigencia,to_date('01/01/2099 23:59:59','dd/mm/yyyy hh24:mi:ss')) 
	and	((coalesce(qt_horas_ant_agenda,0) = 0) or (qt_horas_w > qt_horas_ant_agenda)) 
	AND	((CD_AGENDA = CD_AGENDA_P) 
	OR (coalesce(CD_AGENDA::text, '') = '' 
		 AND (IE_AGENDA = CASE WHEN OBTER_TIPO_AGENDA(CD_AGENDA_P)=1 THEN  'CI' WHEN OBTER_TIPO_AGENDA(CD_AGENDA_P)=2 THEN  'E'  ELSE '' END  
			OR	IE_AGENDA = 'T')));
		 
	if (qt_exclusivo_w > 0) then 
	 
		 
		select	coalesce(max(nr_sequencia),0) 
		into STRICT	nr_seq_regra_w 
		from	agenda_regra 
		where	((cd_estabelecimento = cd_estabelecimento_p) or (coalesce(cd_estabelecimento::text, '') = '')) 
		and	coalesce(cd_agenda,cd_agenda_p) = cd_agenda_p 
		and	((cd_area_proc = cd_area_proced_w) or (coalesce(cd_area_proc::text, '') = '')) 
		and	((cd_especialidade = cd_espec_proced_w) or (coalesce(cd_especialidade::text, '') = '')) 
		and	((cd_grupo_proc = cd_grupo_proced_w) or (coalesce(cd_grupo_proc::text, '') = '')) 
		and	coalesce(nr_seq_forma_org, nr_seq_forma_org_w)	= nr_seq_forma_org_w 	 
		and	coalesce(nr_seq_grupo, nr_seq_grupo_w)		= nr_seq_grupo_w 	 
		and	coalesce(nr_seq_subgrupo, nr_seq_subgrupo_w)		= nr_seq_subgrupo_w 
		and	((cd_procedimento = cd_procedimento_p) or (coalesce(cd_procedimento::text, '') = '')) 
		and	((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_p) or (coalesce(ie_origem_proced::text, '') = ''))) 
		and	((nr_seq_proc_interno = nr_seq_proc_interno_p) or (coalesce(nr_seq_proc_interno::text, '') = '')) 
		and	((cd_medico = cd_medico_p) or (coalesce(cd_medico::text, '') = '')) 
		and	((cd_convenio = cd_convenio_p) or (coalesce(cd_convenio::text, '') = ''))		 
		and	((cd_perfil = cd_perfil_w) or (coalesce(cd_perfil::text, '') = ''))		 
		and (coalesce(ie_medico, 'E') = ie_medico_p) 
		and	coalesce(nr_seq_classif,nr_seq_classif_w) = nr_seq_classif_w 
		and	ie_permite = 'E' 
		and   ((obter_se_medico_equipe(nr_seq_equipe,cd_medico_p) = 'S') or (coalesce(nr_seq_equipe::text, '') = '')) 
		and	((coalesce(ie_dia_semana,dia_da_Semana_w) = dia_da_Semana_w) or ((coalesce(ie_dia_semana,dia_da_Semana_w) = 9) and (dia_da_Semana_w not in (7,1)))) 
		and	dt_referencia_p between to_date(to_char(dt_referencia_p,'dd/mm/yyyy') || ' ' || coalesce(to_char(HR_INICIO,'hh24:mi:ss'),'00:00:00'),'dd/mm/yyyy hh24:mi:ss') and 
					to_date(to_char(dt_referencia_p,'dd/mm/yyyy') || ' ' || coalesce(to_char(HR_FIM,'hh24:mi:ss'),'23:59:59'),'dd/mm/yyyy hh24:mi:ss') 
		and	dt_referencia_p	between coalesce(dt_inicio_vigencia,to_date('01/01/1900 00:00:01','dd/mm/yyyy hh24:mi:ss')) and coalesce(dt_fim_vigencia,to_date('01/01/2099 23:59:59','dd/mm/yyyy hh24:mi:ss')) 
		and	((coalesce(qt_horas_ant_agenda,0) = 0) or (qt_horas_w > qt_horas_ant_agenda)) 
		AND	((CD_AGENDA = CD_AGENDA_P) 
		OR (coalesce(CD_AGENDA::text, '') = '' 
			 AND (IE_AGENDA = CASE WHEN OBTER_TIPO_AGENDA(CD_AGENDA_P)=1 THEN  'CI' WHEN OBTER_TIPO_AGENDA(CD_AGENDA_P)=2 THEN  'E'  ELSE '' END  
				OR	IE_AGENDA = 'T')));
 
		if (nr_seq_regra_w > 0) then 
			select	max(ds_mensagem) 
			into STRICT	ds_mensagem_padrao_w 
			from	agenda_regra 
			where	nr_sequencia = nr_seq_regra_w;
		end if;
		 
		if (nr_seq_regra_w = 0) then 
			ie_agenda_w := 'N';			
			if (ds_mensagem_padrao_w IS NOT NULL AND ds_mensagem_padrao_w::text <> '') then 
				ie_consistencia_w := substr(ds_mensagem_padrao_w,1,255);
			else 
				ie_consistencia_w :=	WHEB_MENSAGEM_PCK.get_texto(277897,null)||chr(10)||WHEB_MENSAGEM_PCK.get_texto(277902,null);
			end if;
			 
		end if;
	else	 
		 
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			nr_seq_regra_w := nr_seq_regra_w;
			end;
		end loop;
		close C01;
		 
			 
		if (nr_seq_regra_w <= 0) then 
			open C02;
			loop 
			fetch C02 into	 
				nr_seq_regra_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin 
				nr_seq_regra_w := nr_seq_regra_w;
				end;
			end loop;
			close C02;			
		end if;
			 
			 
		if (nr_seq_regra_w > 0) then 
		 
			select	coalesce(max(ie_permite),'S'), 
				max(ds_mensagem) 
			into STRICT	ie_agenda_w, 
				ds_mensagem_padrao_w 
			from	agenda_regra 
			where	nr_sequencia = nr_seq_regra_w;
			 
			 
			select 	TO_CHAR(dt_inicio_agenda,'hh24:mi'), 
				TO_CHAR(dt_fim_agenda,'hh24:mi') 
			into STRICT	ds_inicio_w, 
				ds_fim_w 
			from	agenda_regra 
			where	nr_sequencia 	= nr_seq_regra_w 
			and	((coalesce(ie_dia_semana,dia_da_Semana_w) = dia_da_Semana_w) or 
				 ((coalesce(ie_dia_semana,dia_da_Semana_w) = 9) and (dia_da_Semana_w between 2 and 6)));
						 
			if (ie_agenda_w = 'S') then 
				/*if 	((ds_inicio_w is not null) and (ds_fim_w is not null)) then 
				 
					if	(ds_hora_referencia_w < ds_inicio_w ) or 
						(ds_hora_referencia_w > ds_fim_w) then 
						ie_agenda_w := 'H';							 
						if	(ds_mensagem_padrao_w is not null) then 
							ie_consistencia_w := ds_mensagem_padrao_w; 
						else 
							ie_consistencia_w := 	'Não é permitido agendamento no horário selecionado.' || chr(10) || 
										'Favor ajustar os dados deste agendamento e/ou verificar as regras!'; 
						end if; 
						 
					end if; 
				end if;*/
 
				 
				select	coalesce(max(qt_regra),0), 
					coalesce(max(ie_forma_consistencia),'M'), 
					max(cd_medico) 
				into STRICT	qt_regra_w, 
					ie_forma_consistencia_w, 
					cd_medico_regra_w					 
				from	agenda_regra 
				where	nr_sequencia = nr_seq_regra_w;	
				 
				if (qt_regra_w	> 0) then 
					 
					select	count(*) 
					into STRICT	qt_agenda_w 
					from	agenda_paciente 
					where	cd_agenda			= cd_agenda_p 
					and	(((ie_forma_consistencia_w = 'M')	and (trunc(dt_agenda, 'month')	= dt_referencia_w)) or 
						 ((ie_forma_consistencia_w = 'D')	and (to_char(dt_agenda, 'dd/mm/yyyy')	= to_char(dt_referencia_p, 'dd/mm/yyyy'))) or 
						 ((ie_forma_consistencia_w = 'A')	and (trunc(dt_agenda, 'year')	= trunc(dt_referencia_w,'year')))) 
					and	ie_status_agenda		<> 'C' 
					and	(((((CD_MEDICO_EXEC = cd_medico_regra_w) or (coalesce(cd_medico_regra_w::text, '') = ''))) and (ie_medico_p = 'E')) or 
						((((CD_MEDICO_REQ = cd_medico_regra_w) or (coalesce(cd_medico_regra_w::text, '') = ''))) and (ie_medico_p = 'R')))					 
					and	((cd_procedimento = cd_procedimento_p) or (cd_procedimento = cd_procedimento_global_w)) 
					and	((ie_origem_proced = ie_origem_proced_p) or (ie_origem_proced = ie_origem_proced_global_w));	
					 
					if (qt_agenda_w >= qt_regra_w) then 
						ie_agenda_w	:= 'Q';
					end if;
					 
					if (ie_agenda_w <> 'Q' and qt_regra_w > 0) then 
						open C03;
						loop 
						fetch C03 into	 
							qt_regra_ag_qt_w, 
							ie_forma_consistencia_ag_qt_w, 
							ds_mensagem_ag_qt_w;
						EXIT WHEN NOT FOUND; /* apply on C03 */
							begin 
							 
							select	count(*) 
							into STRICT	qt_agenda_w 
							from	agenda_paciente 
							where	cd_agenda			= cd_agenda_p 
							and	(((ie_forma_consistencia_ag_qt_w = 'M')	and (trunc(dt_agenda, 'month')	= dt_referencia_w)) or 
								 ((ie_forma_consistencia_ag_qt_w = 'D')	and (to_char(dt_agenda, 'dd/mm/yyyy')	= to_char(dt_referencia_p, 'dd/mm/yyyy'))) or 
								 ((ie_forma_consistencia_ag_qt_w = 'A')	and (trunc(dt_agenda, 'year')	= trunc(dt_referencia_w,'year')))) 
							and	ie_status_agenda		<> 'C' 
							and	(((((CD_MEDICO_EXEC = cd_medico_regra_w) or (coalesce(cd_medico_regra_w::text, '') = ''))) and (ie_medico_p = 'E')) or 
								((((CD_MEDICO_REQ = cd_medico_regra_w) or (coalesce(cd_medico_regra_w::text, '') = ''))) and (ie_medico_p = 'R')))					 
							and	((cd_procedimento = cd_procedimento_p) or (cd_procedimento = cd_procedimento_global_w)) 
							and	((ie_origem_proced = ie_origem_proced_p) or (ie_origem_proced = ie_origem_proced_global_w));	
							 
							if (qt_agenda_w >= qt_regra_ag_qt_w) then 
								ie_agenda_w	:= 'Q';
								if (ds_mensagem_ag_qt_w IS NOT NULL AND ds_mensagem_ag_qt_w::text <> '') then 
									ds_mensagem_padrao_w := ds_mensagem_ag_qt_w;
								end if;
								EXIT;
							end if;
							 
							end;
						end loop;
						close C03;
					end if;
					 
				end if;
			end if;
 
			if (ie_agenda_w in ('N', 'Q')) then	 
				if (ds_mensagem_padrao_w IS NOT NULL AND ds_mensagem_padrao_w::text <> '') then 
					ie_consistencia_w := substr(ds_mensagem_padrao_w,1,255);
				else 
					ie_consistencia_w :=	WHEB_MENSAGEM_PCK.get_texto(277563,null);
				end if;						
			end if;
		end if;
	end if;
end if;
 
ie_consistencia_p := ie_consistencia_w;
nr_seq_regra_p	:= nr_seq_regra_w;
ie_agenda_p := ie_agenda_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_proc_conv_global (cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, dt_referencia_p timestamp, cd_agenda_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, cd_medico_p text, ie_medico_p text, cd_plano_p text, ie_consistencia_p INOUT text, ie_agenda_p INOUT text, nr_sequencia_p bigint default null, nr_seq_regra_p INOUT bigint DEFAULT NULL) FROM PUBLIC;

