-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_regra_nut_pac ( nr_prescricao_p bigint, nr_seq_nut_ele_mat_p bigint, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, ds_erro_p INOUT text, cd_perfil_aviso_p INOUT text, nm_usuario_aviso_p INOUT text) AS $body$
DECLARE


ie_gera_horarios_w				varchar(10);
nr_seq_erro_w					bigint;
ie_erro_liberar_prescr_w		varchar(255);
qt_erro_nao_lib_w				bigint;
qt_erro_lib_w					bigint;
ie_supera_limite_uso_w			varchar(1)	:= 'N';
ie_erro_dose_usual_w			varchar(255);
ie_erro_dose_maxima_w			varchar(255);
nr_seq_nut_ele_mat_w			nut_pac_elem_mat.nr_sequencia%type;
qt_count_diretiva_w     bigint;
qt_npt_w						bigint;


c00 REFCURSOR;


BEGIN

ie_gera_horarios_w := obter_param_usuario(924, 116, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_gera_horarios_w);

if (nr_seq_nut_ele_mat_p = 0) then
	delete	FROM prescr_medica_erro
	where	nr_prescricao	= nr_prescricao_p
	and		(nr_seq_npt_elem_mat IS NOT NULL AND nr_seq_npt_elem_mat::text <> '');

	open c00 for
	SELECT	c.nr_sequencia
	from	nut_paciente a,
			nut_paciente_elemento b,
			nut_pac_elem_mat c
	where	a.nr_sequencia = b.nr_seq_nut_pac
	and		b.nr_sequencia = c.nr_seq_nut_pac_ele
	and		a.nr_prescricao = nr_prescricao_p
	
union all

	SELECT	c.nr_sequencia
	from	nut_pac a,
			nut_pac_elem_mat c
	where	a.nr_sequencia = c.nr_seq_nut_pac
	and		a.nr_prescricao = nr_prescricao_p
	
union all

	select	c.nr_sequencia
	from	nut_pac a,
			nut_pac_elemento b,
			nut_pac_elem_mat c
	where	a.nr_sequencia = b.nr_seq_nut_pac
	and		b.nr_sequencia = c.nr_seq_pac_elem
	and		a.nr_prescricao = nr_prescricao_p;


elsif (nr_prescricao_p > 0) and (nr_seq_nut_ele_mat_p > 0) then

	delete	FROM prescr_medica_erro
	where	nr_prescricao	= nr_prescricao_p
	and		nr_seq_npt_elem_mat	= nr_seq_nut_ele_mat_p;

	open c00 for
	SELECT	c.nr_sequencia
	from	nut_paciente a,
			nut_paciente_elemento b,
			nut_pac_elem_mat c
	where	a.nr_sequencia = b.nr_seq_nut_pac
	and		b.nr_sequencia = c.nr_seq_nut_pac_ele
	and		a.nr_prescricao = nr_prescricao_p
	and		c.nr_sequencia = nr_seq_nut_ele_mat_p
	
union all

	SELECT	c.nr_sequencia
	from	nut_pac a,
			nut_pac_elem_mat c
	where	a.nr_sequencia = c.nr_seq_nut_pac
	and		a.nr_prescricao = nr_prescricao_p
	and		c.nr_sequencia = nr_seq_nut_ele_mat_p
	
union all

	select	c.nr_sequencia
	from	nut_pac a,
			nut_pac_elemento b,
			nut_pac_elem_mat c
	where	a.nr_sequencia = b.nr_seq_nut_pac
	and		b.nr_sequencia = c.nr_seq_pac_elem
	and		a.nr_prescricao = nr_prescricao_p
	and		c.nr_sequencia = nr_seq_nut_ele_mat_p;
end if;



loop
fetch c00 into	nr_seq_nut_ele_mat_w;
EXIT WHEN NOT FOUND; /* apply on c00 */

		SELECT * FROM verifica_dose_maxima_npt(nr_prescricao_p, nr_seq_nut_ele_mat_w, ie_gera_horarios_w, ie_erro_dose_usual_w, ie_erro_dose_maxima_w) INTO STRICT ie_erro_dose_usual_w, ie_erro_dose_maxima_w;

		if (ie_erro_dose_maxima_w IS NOT NULL AND ie_erro_dose_maxima_w::text <> '') and (wheb_assist_pck.Obter_Se_Consiste_REP(31,cd_perfil_p) = 'S') and (Obter_Funcao_Ativa in (924, 950)) then
			ie_supera_limite_uso_w		:= 'S';
			ie_erro_liberar_prescr_w	:= (obter_lib_erro_regra_rep(31, cd_perfil_p));
			nr_seq_erro_w := gerar_erro_nut_pac_elem(nr_prescricao_p, nr_seq_nut_ele_mat_w, 31, ie_erro_liberar_prescr_w, ie_erro_dose_maxima_w, cd_perfil_p, nm_usuario_p, nr_seq_erro_w);
		end if;

	ie_erro_liberar_prescr_w	:= '';

	select	count(*)
	into STRICT	qt_erro_nao_lib_w
	from	prescr_medica_erro
	where	nr_prescricao	= nr_prescricao_p
	and		nr_seq_npt_elem_mat	= nr_seq_nut_ele_mat_w
	and		ie_libera	= 'N'  LIMIT 1;

	if (qt_erro_nao_lib_w > 0) then

		update	nut_pac_elem_mat
		set		ie_erro					= 125,
				dt_atualizacao			= clock_timestamp(),
				ie_supera_limite_uso	= ie_supera_limite_uso_w,
				ds_cor_erro				= obter_cor_erro_prescr_mat(nr_prescricao_p, nr_seq_nut_ele_mat_w, 125, cd_estabelecimento_p, cd_perfil_p)
		where	nr_sequencia			= nr_seq_nut_ele_mat_w;

		ds_erro_p	:= '125';

	else
		select	count(*)
		into STRICT	qt_erro_lib_w
		from	prescr_medica_erro
		where	nr_prescricao	= nr_prescricao_p
		and		nr_seq_npt_elem_mat		= nr_seq_nut_ele_mat_w
		and		ie_libera	= 'S';

		if (qt_erro_lib_w > 0) then
			update	nut_pac_elem_mat
			set		ie_erro					= 124,
					dt_atualizacao			= clock_timestamp(),
					ie_supera_limite_uso	= ie_supera_limite_uso_w,
					ds_cor_erro				= obter_cor_erro_prescr_mat(nr_prescricao_p, nr_seq_nut_ele_mat_w, 124, cd_estabelecimento_p, cd_perfil_p)
			where	nr_sequencia			= nr_seq_nut_ele_mat_w;
		else
			update	nut_pac_elem_mat
			set		ie_erro					= 0,
					dt_atualizacao			= clock_timestamp(),
					ie_supera_limite_uso	= ie_supera_limite_uso_w,
					ds_cor_erro				 = NULL
			where	nr_sequencia			= nr_seq_nut_ele_mat_w;
		end if;
	end if;

end loop;
close c00;

select	count(*)
into STRICT	qt_npt_w
from	nut_pac
where	nr_prescricao	= nr_prescricao_p;

if (qt_npt_w	> 0) and (wheb_assist_pck.Obter_Se_Consiste_REP(290,cd_perfil_p) = 'S') then

	ie_erro_liberar_prescr_w	:= '';

	select count(1)		
	into STRICT	qt_count_diretiva_w
	from    DIRETRIZ_ATEND_PARAM_CONS a, 
			DIRETRIZ_ATENDIMENTO_PARAM b,
			PRESCR_MEDICA pm
	where	a.NR_SEQ_DIRETRIZ = b.NR_SEQUENCIA			  			  
	and		b.IE_DIRETRIZ = 'NP'	
	and		pm.CD_FUNCAO_ORIGEM = 2314
	and		pm.NR_PRESCRICAO = nr_prescricao_p        
	and		exists (
						SELECT	da.cd_pessoa_fisica
						from	DIRETRIZ_ATENDIMENTO da
						where	da.IE_DIRETRIZ = 'NP'
						and		da.IE_RESPOSTA = 'N'
						and		(da.DT_LIBERACAO IS NOT NULL AND da.DT_LIBERACAO::text <> '')
						and	 	coalesce(da.DT_INATIVACAO::text, '') = ''
						and		da.IE_STATUS = 'C'
						and 	da.cd_pessoa_fisica = pm.cd_pessoa_fisica);

					
	if (qt_count_diretiva_w > 0) then
	
        ie_erro_liberar_prescr_w	:= obter_lib_erro_regra_rep(290, cd_perfil_p);				
        nr_seq_erro_w := gerar_erro_nut_pac(nr_prescricao_p, null, 290, ie_erro_liberar_prescr_w, null, cd_perfil_p, nm_usuario_p, nr_seq_erro_w);
	end if;		

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_regra_nut_pac ( nr_prescricao_p bigint, nr_seq_nut_ele_mat_p bigint, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, ds_erro_p INOUT text, cd_perfil_aviso_p INOUT text, nm_usuario_aviso_p INOUT text) FROM PUBLIC;

