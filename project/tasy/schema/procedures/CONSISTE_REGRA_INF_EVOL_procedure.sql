-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_regra_inf_evol ( cd_estabelecimento_p bigint, nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_perfil_p bigint, nr_seq_item_p bigint, ie_momento_p text, ie_evolucao_clinica_p text, nr_seq_evento_p bigint, dt_prescricao_p timestamp, ds_mensagem_p INOUT text, ie_acao_p INOUT text, nr_item_posicionar_p INOUT bigint) AS $body$
DECLARE

 

ie_informacao_w			varchar(10);
ie_acao_w			varchar(10);
qt_registros_w			bigint;
ds_mensagem_w			varchar(4000);
quebra_w			varchar(10)	:= chr(13)||chr(10);
ie_inconsistente_w		boolean;
nr_seq_tipo_avaliacao_w		bigint;
ie_diagn_princ_w		varchar(1);
ie_evolucao_dia_w		varchar(1)	:= 'N';
cd_convenio_w			bigint;
nr_seq_item_pront_w		bigint;

ie_lib_anamnese_w      		varchar(1);
ie_lib_sinal_vital_w   		varchar(1);
ie_lib_evolucao_paciente_w  	varchar(1);
ie_lib_diag_medico_w   		varchar(1);
ie_lib_orientacao_alta_w 	varchar(1);
ie_lib_desfecho_w 		varchar(1);
ie_evolucao_clinica_w 	 	varchar(255);
ie_tipo_hist_saude_w		varchar(3);
cd_pessoa_fisica_w		varchar(10);
cd_pessoa_fisica_tabela_w	varchar(10);
cod_tipo_diagnostico_w		integer;
cd_especialidade_dest_w		integer;
cd_especialidade_dest_prof_w	integer;
ie_liberar_hist_saude_w		varchar(1);
ie_somente_data_prev_alta_w 	varchar(1);
ie_consiste_pf_w 		REGRA_CONSISTE_INF_EVO.IE_CONSISTE_PF%type;

C01 CURSOR FOR
	SELECT	ie_informacao, 
		max(ie_acao), 
		coalesce(nr_seq_tipo_avaliacao,0), 	 
		coalesce(nr_seq_item_pront,0), 
		ie_evolucao_clinica, 
		ie_tipo_hist_saude,
		cd_especialidade_dest,
		cd_especialidade_dest_prof,
		coalesce(ie_consiste_pf, 'N')
	from	regra_consiste_inf_evo 
	where	cd_estabelecimento										= cd_estabelecimento_p 
	and	coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_p,0))		= coalesce(cd_setor_atendimento_p,0) 
	and	coalesce(cd_perfil,coalesce(cd_perfil_p,0))							= coalesce(cd_perfil_p,0) 
	and	coalesce(cd_convenio,cd_convenio_w)								= cd_convenio_w 
	and	coalesce(ie_momento,'N')											= ie_momento_p 
	and	((nr_seq_item_p <> 5) or (coalesce(ie_evolucao_clinica,coalesce(ie_evolucao_clinica_p,'XPTO')) 	=  coalesce(ie_evolucao_clinica_p,'XPTO')))		  
	and	((nr_seq_item_p <> 273) or (coalesce(nr_seq_evento,coalesce(nr_seq_evento_p,0)) 	=  coalesce(nr_seq_evento_p,0)))		  
	and	coalesce(nr_seq_item,5)			= 	nr_seq_item_p 
	and	ie_situacao													= 'A' 
	group by 	ie_informacao, 
			coalesce(cd_convenio,0), 
			nr_seq_tipo_avaliacao, 
			nr_seq_item_pront, 
			ie_evolucao_clinica, 
			ie_tipo_hist_saude,
			cd_especialidade_dest,
			cd_especialidade_dest_prof,
			ie_consiste_pf;

BEGIN
ie_acao_p	:= 'A';
 
if (coalesce(nr_atendimento_p,0) > 0) then 
 
	select	coalesce(max(cd_convenio),0) 
	into STRICT	cd_convenio_w 
	from	resumo_atendimento_paciente_v 
	where	nr_atendimento	= nr_atendimento_p;
	 
	select 	max(cd_pessoa_fisica) 
	into STRICT	cd_pessoa_fisica_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_p;
	
	ie_somente_data_prev_alta_w := Obter_param_Usuario(281, 830, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo, ie_somente_data_prev_alta_w);

	open C01;
	loop 
	fetch C01 into 
		ie_informacao_w, 
		ie_acao_w, 
		nr_seq_tipo_avaliacao_w, 
		nr_seq_item_pront_w, 
		ie_evolucao_clinica_w, 
		ie_tipo_hist_saude_w,
		cd_especialidade_dest_w,
		cd_especialidade_dest_prof_w,
		ie_consiste_pf_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		ie_inconsistente_w	:= false;
		 
		SELECT  ie_lib_anamnese, 
        	        ie_lib_sinal_vital, 
	       	        ie_lib_evolucao_paciente, 
	      	        ie_lib_diag_medico, 
	       	        ie_lib_orientacao_alta,
					IE_LIBERAR_HIST_SAUDE,
					coalesce((ie_liberar_desfecho),'N')
		into STRICT    ie_lib_anamnese_w, 
	 		ie_lib_sinal_vital_w, 
	  		ie_lib_evolucao_paciente_w, 
          		ie_lib_diag_medico_w, 
           		ie_lib_orientacao_alta_w,
				ie_liberar_hist_saude_w,
				ie_lib_desfecho_w
		FROM   parametro_medico, 
       			(SELECT Max(coalesce(vl_parametro, vl_parametro_padrao)) 
             		   	ie_lib_evolucao_paciente 
	     	FROM   funcao_parametro 
	        WHERE (coalesce(vl_parametro, vl_parametro_padrao) = 'N') 
	               AND cd_funcao = 0 
	               AND nr_sequencia = 37) pr 
	        WHERE  cd_estabelecimento = cd_estabelecimento_p;
		 
		if (ie_informacao_w	= 'A') then 
			select	count(*) 
			into STRICT	qt_registros_w 
			from	anamnese_paciente 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica = coalesce(cd_pessoa_fisica_w, 0)))
			and	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or (ie_lib_anamnese_w = 'N')) 
			and	coalesce(dt_inativacao::text, '') = '';
 
			if (qt_registros_w	= '0') then 
				ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(290630) || '.' ||quebra_w;
				ie_inconsistente_w	:= true;
			end if;
		elsif (ie_informacao_w	= 'SV') then 
			select	count(*) 
			into STRICT	qt_registros_w 
			from	atendimento_sinal_vital 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_paciente = coalesce(cd_pessoa_fisica_w, 0)))
			and	coalesce(dt_inativacao::text, '') = '';
 
			if (qt_registros_w	= '0') then 
				ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(290637) || '.' ||quebra_w;
				ie_inconsistente_w	:= true;
			end if;
		elsif (ie_informacao_w	= 'E') then 
			select	count(*) 
			into STRICT	qt_registros_w 
			from	evolucao_paciente 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica = coalesce(cd_pessoa_fisica_w, 0)))
			and	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or (ie_lib_evolucao_paciente_w = 'N')) 
			and	coalesce(dt_inativacao::text, '') = '' 
			and	((ie_evolucao_dia_w = 'N') or (trunc(dt_evolucao,'dd') = trunc(dt_prescricao_p,'dd')));
 
			if (qt_registros_w	= '0') then 
				ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(290640) || '.' || quebra_w;
				ie_inconsistente_w	:= true;
			end if;
		elsif (ie_informacao_w	= 'E') then 
			select	count(*) 
			into STRICT	qt_registros_w 
			from	paciente_medic_uso 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica = coalesce(cd_pessoa_fisica_w, 0)))
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
 
			if (qt_registros_w	= '0') then 
				ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(290640) || '.' || quebra_w;
				ie_inconsistente_w	:= true;
			end if;
		elsif (ie_informacao_w	= 'D') then
		
			select	max(obter_pessoa_atendimento(nr_atendimento, 'C'))
			into STRICT 	cd_pessoa_fisica_tabela_w
			from	diagnostico_doenca
			where	nr_atendimento = nr_atendimento_p;
		
			select	count(*)
			into STRICT	qt_registros_w 
			from	diagnostico_doenca 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica_tabela_w = coalesce(cd_pessoa_fisica_w, 0)));
			--and	dt_liberacao is not null; 
			if (qt_registros_w	= '0') then 
				ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(230791) || quebra_w;
				ie_inconsistente_w	:= true;
			end if;
		elsif (ie_informacao_w	= 'DP') then
		
			select	max(obter_pessoa_atendimento(nr_atendimento, 'C'))
			into STRICT 	cd_pessoa_fisica_tabela_w
			from	diagnostico_doenca
			where	nr_atendimento = nr_atendimento_p;
			
			select	max(substr(obter_cod_tipo_diagnostico(nr_atendimento,dt_diagnostico),1,1))
			into STRICT 	cod_tipo_diagnostico_w
			from	diagnostico_doenca
			where	nr_atendimento = nr_atendimento_p;

			select	coalesce(max('S'),'N') 
			into STRICT	ie_diagn_princ_w 
			from	diagnostico_doenca 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica_tabela_w = coalesce(cd_pessoa_fisica_w, 0)))
			and	cod_tipo_diagnostico_w = '2';
 
			if (ie_diagn_princ_w = 'N') then 
				ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(290645) || '.' || quebra_w;
				ie_inconsistente_w	:= true;
			end if;
		elsif (ie_informacao_w	= 'B') then 
 
			select	count(*) 
			into STRICT	qt_registros_w 
			from	atend_escala_braden 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica = coalesce(cd_pessoa_fisica_w, 0)))
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
			and	coalesce(dt_inativacao::text, '') = '';
 
			if (qt_registros_w = '0') then 
				ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(290646) || '.' ||quebra_w;
				ie_inconsistente_w	:= true;
			end if;
		elsif (ie_informacao_w	= 'BD') then 
 
			select	count(*) 
			into STRICT	qt_registros_w 
			from	atend_escala_braden 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica = coalesce(cd_pessoa_fisica_w, 0)))
			and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
			and		coalesce(dt_inativacao::text, '') = '' 
			and		trunc(dt_avaliacao) = trunc(clock_timestamp());
 
			if (qt_registros_w = '0') then 
				ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(290647) || '.' ||quebra_w;
				ie_inconsistente_w	:= true;
			end if;
		elsif (ie_informacao_w 	= 'NA') then 
		
			select	max(obter_pessoa_atendimento(nr_atendimento, 'C'))
			into STRICT 	cd_pessoa_fisica_tabela_w
			from	ESCALA_NAS
			where	nr_atendimento = nr_atendimento_p;
		
			select	count(*) 
			into STRICT	qt_registros_w 
			from	ESCALA_NAS 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica_tabela_w = coalesce(cd_pessoa_fisica_w, 0)))
			and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
			and		coalesce(dt_inativacao::text, '') = '';
 
			if (qt_registros_w = '0') then 
				ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(291763) || '.' ||quebra_w;
				ie_inconsistente_w	:= true;
			end if;	
 
		elsif (ie_informacao_w 	= 'DN') then 
		
			select	max(obter_pessoa_atendimento(nr_atendimento, 'C'))
			into STRICT 	cd_pessoa_fisica_tabela_w
			from	ESCALA_NAS
			where	nr_atendimento = nr_atendimento_p;
		
			select	count(*) 
			into STRICT	qt_registros_w 
			from	ESCALA_NAS 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica_tabela_w = coalesce(cd_pessoa_fisica_w, 0)))
			and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
			and		coalesce(dt_inativacao::text, '') = '' 
			and		trunc(dt_avaliacao) = trunc(clock_timestamp());
 
			if (qt_registros_w = '0') then 
				ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(291762) || '.' ||quebra_w;
				ie_inconsistente_w	:= true;
			end if;				
			 
		elsif (ie_informacao_w	= 'NH') then 
		
			select	max(obter_pessoa_atendimento(nr_atendimento, 'C'))
			into STRICT 	cd_pessoa_fisica_tabela_w
			from	escala_earq
			where	nr_atendimento = nr_atendimento_p;

			select	count(*) 
			into STRICT	qt_registros_w 
			from	escala_earq 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica_tabela_w = coalesce(cd_pessoa_fisica_w, 0)))
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
			and	coalesce(dt_inativacao::text, '') = '';
 
			if (qt_registros_w = '0') then 
				ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(290648) || '.' ||quebra_w;
				ie_inconsistente_w	:= true;
			end if;
		elsif (ie_informacao_w	= 'ND') then 
		
			select	max(obter_pessoa_atendimento(nr_atendimento, 'C'))
			into STRICT 	cd_pessoa_fisica_tabela_w
			from	escala_earq
			where	nr_atendimento = nr_atendimento_p;

			select	count(*) 
			into STRICT	qt_registros_w 
			from	escala_earq 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica_tabela_w = coalesce(cd_pessoa_fisica_w, 0)))
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
			and	coalesce(dt_inativacao::text, '') = '' 
			and	trunc(dt_avaliacao) = trunc(clock_timestamp());
 
			if (qt_registros_w = '0') then 
				ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(290649) || '.' ||quebra_w;
				ie_inconsistente_w	:= true;
			end if;
		elsif (ie_informacao_w	= 'O') then 
		
			select	max(obter_pessoa_atendimento(nr_atendimento, 'C'))
			into STRICT 	cd_pessoa_fisica_tabela_w
			from	ATENDIMENTO_ALTA
			where	nr_atendimento = nr_atendimento_p;
		
			select	count(*)
			into STRICT	qt_registros_w 
			from	ATENDIMENTO_ALTA 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica_tabela_w = coalesce(cd_pessoa_fisica_w, 0)))
			and		((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
			or (ie_tipo_orientacao <> 'P' and ie_lib_orientacao_alta_w = 'N')
			or (ie_tipo_orientacao = 'P' and ie_lib_desfecho_w = 'N'));
 
			if (qt_registros_w	= '0') then 
				ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(290651) || '.' || quebra_w;
				ie_inconsistente_w	:= true;
			end if;
		elsif (ie_informacao_w	= 'AV') then 
 
			select	count(*) 
			into STRICT	qt_registros_w 
			from	med_avaliacao_paciente 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica = coalesce(cd_pessoa_fisica_w, 0)))
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
			and	coalesce(dt_inativacao::text, '') = '' 
			and	((coalesce(nr_seq_tipo_avaliacao_w::text, '') = '')or (nr_seq_tipo_avaliacao	= nr_seq_tipo_avaliacao_w));
			if (qt_registros_w	= '0') then 
				ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(290652) || '.' ||quebra_w;
				if (nr_seq_tipo_avaliacao_w IS NOT NULL AND nr_seq_tipo_avaliacao_w::text <> '') then 
					ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(277784, 'MED_TIPO_AVALIACAO_P=' ||  
						substr(obter_descricao_padrao('MED_TIPO_AVALIACAO','DS_TIPO', NR_SEQ_TIPO_AVALIACAO_w),1,100) || ';QUEBRA_P=' || quebra_w);
				end if;
				ie_inconsistente_w	:= true;
			end if;
		elsif (ie_informacao_w	= 'PA') then 
			select	count(*) 
			into STRICT	qt_registros_w 
			from	prescr_medica 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica = coalesce(cd_pessoa_fisica_w, 0)))
			and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
			and		coalesce(dt_suspensao::text, '') = '' 
			and		coalesce(ie_prescricao_alta,'N') = 'S';
 
			if (qt_registros_w	= '0') then 
				ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(290655) || '.' || quebra_w;
				ie_inconsistente_w	:= true;
			end if;
		elsif (ie_informacao_w	= 'HS') then 
		 
			if (coalesce(ie_tipo_hist_saude_w::text, '') = '') then 
				select  count(*) 
				into STRICT    qt_registros_w 
				from    alerta_v 
				where 	cd_pessoa_alerta	= cd_pessoa_fisica_w
				and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
 
				if (qt_registros_w	= '0') then 
					ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(290658) || '.' || quebra_w;
					ie_inconsistente_w	:= true;
				end if;
			else  
				begin 
				 
					if (ie_tipo_hist_saude_w = 'AC') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	paciente_acessorio 
						where	cd_pessoa_fisica = cd_pessoa_fisica_w 
						and	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or (ie_liberar_hist_saude_w = 'N')) 
						and coalesce(dt_inativacao::text, '') = ''
						and		((dt_fim >= clock_timestamp()) or (coalesce(dt_fim::text, '') = ''));						
					end if;
					 
					if (ie_tipo_hist_saude_w = 'AL') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	paciente_alergia 
						where	cd_pessoa_fisica	= cd_pessoa_fisica_w
						and	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or (ie_liberar_hist_saude_w = 'N'))
						and coalesce(dt_inativacao::text, '') = ''
						and		((dt_fim >= clock_timestamp()) or (coalesce(dt_fim::text, '') = ''));				
					end if;
					 
					if (ie_tipo_hist_saude_w = 'CI') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	HISTORICO_SAUDE_CIRURGIA 
						where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
						and	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or (ie_liberar_hist_saude_w = 'N')) 
						and coalesce(dt_inativacao::text, '') = ''
						and		((dt_fim >= clock_timestamp()) or (coalesce(dt_fim::text, '') = ''));			
					end if;							
					 
					if (ie_tipo_hist_saude_w = 'DE') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	PF_TIPO_DEFICIENCIA 
						where	cd_pessoa_fisica = cd_pessoa_fisica_w 
						and coalesce(dt_inativacao::text, '') = ''
						and	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or (ie_liberar_hist_saude_w = 'N'));			
					end if;		
 
					if (ie_tipo_hist_saude_w = 'DO') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	PACIENTE_ANTEC_CLINICO 
						where	cd_pessoa_fisica	= cd_pessoa_fisica_w  
						and		coalesce(ie_paciente,'S') = 'S' 
						and	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or (ie_liberar_hist_saude_w = 'N'))
						and coalesce(dt_inativacao::text, '') = ''
						and		((dt_fim >= clock_timestamp()) or (coalesce(dt_fim::text, '') = ''));				
					end if;		
					 
					if (ie_tipo_hist_saude_w = 'EX') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	PACIENTE_EXAME 
						where	cd_pessoa_fisica = cd_pessoa_fisica_w 
						and coalesce(dt_inativacao::text, '') = ''
						and	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or (ie_liberar_hist_saude_w = 'N'));			
					end if;							
					 
					if (ie_tipo_hist_saude_w = 'HA') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	PACIENTE_HABITO_VICIO 
						where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
						and coalesce(dt_inativacao::text, '') = ''
						and	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or (ie_liberar_hist_saude_w = 'N'));				
					end if;					
					 
					if (ie_tipo_hist_saude_w = 'HI') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	PACIENTE_ANTEC_CLINICO 
						where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
						and		coalesce(ie_paciente,'S') = 'N'		
						and coalesce(dt_inativacao::text, '') = ''						
						and	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or (ie_liberar_hist_saude_w = 'N'));				
					end if;			
 
					if (ie_tipo_hist_saude_w = 'IN') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	HISTORICO_SAUDE_INTERNACAO 
						where	cd_pessoa_fisica = cd_pessoa_fisica_w 
						and coalesce(dt_inativacao::text, '') = ''
						and	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or (ie_liberar_hist_saude_w = 'N'));				
					end if;						
					 
					if (ie_tipo_hist_saude_w = 'ME') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	PACIENTE_MEDIC_USO 
						where	cd_pessoa_fisica	= cd_pessoa_fisica_w
						and coalesce(dt_inativacao::text, '') = ''
						and	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or (ie_liberar_hist_saude_w = 'N'));				
					end if;			
 
					if (ie_tipo_hist_saude_w = 'OC') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	PACIENTE_OCORRENCIA 
						where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
						and coalesce(dt_inativacao::text, '') = ''
						and	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or (ie_liberar_hist_saude_w = 'N'));			
					end if;	
 
					if (ie_tipo_hist_saude_w = 'RE') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	PACIENTE_REP_PRESCRICAO 
						where	cd_pessoa_fisica = cd_pessoa_fisica_w
						and coalesce(dt_inativacao::text, '') = ''						
						and	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or (ie_liberar_hist_saude_w = 'N'));				
					end if;					
 
					if (ie_tipo_hist_saude_w = 'TR') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	HISTORICO_SAUDE_TRATAMENTO 
						where	cd_pessoa_fisica = cd_pessoa_fisica_w 
						and coalesce(dt_inativacao::text, '') = ''
						and	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or (ie_liberar_hist_saude_w = 'N'));			
						 
					end if;					
					 
					if (ie_tipo_hist_saude_w = 'VA') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	PACIENTE_VACINA 
						where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
						and coalesce(dt_inativacao::text, '') = ''
						and	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or (ie_liberar_hist_saude_w = 'N'));				
					end if;						
					 
				if (qt_registros_w	= '0') then 
					ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(290681, 'DS_TIPO_HISTORICO=' || substr(obter_valor_dominio(7039,ie_tipo_hist_saude_w),1,255)) || '.' || quebra_w;
					ie_inconsistente_w	:= true;
				end if;						
					 
				end;
			end if;	
			 
		elsif (ie_informacao_w	= 'IC') then 
			select  count(*) 
			into STRICT    qt_registros_w 
			from    atendimento_paciente 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica = coalesce(cd_pessoa_fisica_w, 0)))
			and	(dt_atend_medico IS NOT NULL AND dt_atend_medico::text <> '');
 
			if (qt_registros_w	= '0') then 
				ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(290660) || '.' || quebra_w;
				ie_inconsistente_w	:= true;
			end if;
		elsif (ie_informacao_w	= 'PR') then
		
			select	max(obter_pessoa_atendimento(nr_atendimento, 'C'))
			into STRICT 	cd_pessoa_fisica_tabela_w
			from	atend_previsao_alta
			where	nr_atendimento = nr_atendimento_p;
		
			if (ie_somente_data_prev_alta_w = 'S') then
			
				select  count(1)
				into STRICT    qt_registros_w 
				from    atend_previsao_alta 
				where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica_tabela_w = coalesce(cd_pessoa_fisica_w, 0)))
				and		pkg_date_utils.Get_DateTime(dt_previsto_alta, pkg_date_utils.get_Time(23,59,59)) > clock_timestamp()
				and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
				and		coalesce(dt_inativacao::text, '') = '';
				
				if (qt_registros_w	= 0) then
					select  count(1)
					into STRICT    qt_registros_w
					from    atendimento_paciente 
					where 	nr_atendimento	= nr_atendimento_p
					and		pkg_date_utils.Get_DateTime(dt_previsto_alta, pkg_date_utils.get_Time(23,59,59)) > clock_timestamp()
					and		(dt_previsto_alta IS NOT NULL AND dt_previsto_alta::text <> '');
				end if;
			
			else
			
				select  count(1)
				into STRICT    qt_registros_w 
				from    atend_previsao_alta 
				where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica_tabela_w = coalesce(cd_pessoa_fisica_w, 0)))
				and		dt_previsto_alta > clock_timestamp()
				and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
				and		coalesce(dt_inativacao::text, '') = '';
				
				if (qt_registros_w	= 0) then
					select  count(1)
					into STRICT    qt_registros_w
					from    atendimento_paciente 
					where 	nr_atendimento	= nr_atendimento_p
					and		dt_previsto_alta > clock_timestamp()
					and		(dt_previsto_alta IS NOT NULL AND dt_previsto_alta::text <> '');
				end if;
			
			end if;

			if (qt_registros_w	= 0) then
				ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(293859) || '.' || quebra_w;
				ie_inconsistente_w	:= true;
			end if;						
		elsif (ie_informacao_w	= 'EV') then 
			select	count(*) 
			into STRICT    qt_registros_w 
			from	evolucao_paciente 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica = coalesce(cd_pessoa_fisica_w, 0)))
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
			and	coalesce(dt_inativacao::text, '') = '' 
			and	((coalesce(ie_evolucao_clinica_w::text, '') = '') or (ie_evolucao_clinica = ie_evolucao_clinica_w));
			 
			if (qt_registros_w	= '0') then 
				ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(290632) || '.' || quebra_w;
				 
				if (ie_evolucao_clinica_w IS NOT NULL AND ie_evolucao_clinica_w::text <> '') then 
					ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(290662) || ': ' ||  
						substr(obter_descricao_padrao('TIPO_EVOLUCAO','DS_TIPO_EVOLUCAO',ie_evolucao_clinica_w),1,200) ||quebra_w;
				end if;
				ie_inconsistente_w	:= true;
			end if;
		elsif (ie_informacao_w	= 'ED') then 
			select	count(*) 
			into STRICT	qt_registros_w 
			from	evolucao_paciente 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica = coalesce(cd_pessoa_fisica_w, 0)))
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
			and	coalesce(dt_inativacao::text, '') = '' 
			and	trunc(dt_evolucao) = trunc(clock_timestamp()) 
			and	((coalesce(ie_evolucao_clinica_w::text, '') = '') or (ie_evolucao_clinica = ie_evolucao_clinica_w));
 
			if (qt_registros_w = '0') then 
				ds_mensagem_w := ds_mensagem_w || wheb_mensagem_pck.get_texto(290632) || '.' || quebra_w;
				 
				if (ie_evolucao_clinica_w IS NOT NULL AND ie_evolucao_clinica_w::text <> '') then 
					ds_mensagem_w := ds_mensagem_w|| wheb_mensagem_pck.get_texto(290662) || ': ' ||  
						substr(obter_descricao_padrao('TIPO_EVOLUCAO','DS_TIPO_EVOLUCAO',ie_evolucao_clinica_w),1,200) ||quebra_w;
				end if;
				ie_inconsistente_w	:= true;
			end if;	
		elsif (ie_informacao_w	= 'CU') then 
			select count(*) 
			into STRICT   qt_registros_w 
			from   triagem_pronto_atend a 
			where  1 = 1 
			and	   coalesce(a.nr_seq_classif::text, '') = '' 
			and	   ((ie_consiste_pf_w = 'N' and a.nr_atendimento = nr_atendimento_p) or (ie_consiste_pf_w = 'S' and a.cd_pessoa_fisica = coalesce(cd_pessoa_fisica_w, 0)))
			and	   a.nr_sequencia 	= (SELECT max(x.nr_sequencia) 
									   from triagem_pronto_atend x 
									   where x.nr_atendimento = nr_atendimento_p);						
			 
			if (qt_registros_w	> '0') then 
				ds_mensagem_w	:= ds_mensagem_w|| wheb_mensagem_pck.get_texto(290664) || '.' ||quebra_w;
				ie_inconsistente_w	:= true;
			end if;
		elsif (ie_informacao_w	= 'AS') then 
		
			select	max(obter_pessoa_atendimento(nr_atendimento, 'C'))
			into STRICT 	cd_pessoa_fisica_tabela_w
			from	escala_saps3
			where	nr_atendimento = nr_atendimento_p;
		
			select	count(*)
			into STRICT	qt_registros_w 
			from	escala_saps3 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica_tabela_w = coalesce(cd_pessoa_fisica_w, 0))) 
			and		coalesce(dt_inativacao::text, '') = '' 
			and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
 
			if (qt_registros_w = 0) then 
				ds_mensagem_w := ds_mensagem_w || wheb_mensagem_pck.get_texto(290665) || '.' ||quebra_w;
				ie_inconsistente_w := true;
			end if;
		elsif (ie_informacao_w	= 'PP') then 
			select	count(*) 
			into STRICT	qt_registros_w 
			from	parecer_medico_req 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica = coalesce(cd_pessoa_fisica_w, 0)))
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
			and	coalesce(dt_inativacao::text, '') = ''
			and	((coalesce(cd_especialidade_dest_w::text, '') = '') or (cd_especialidade_dest = cd_especialidade_dest_w))
			and	((coalesce(cd_especialidade_dest_prof_w::text, '') = '') or (cd_especialidade_dest_prof = cd_especialidade_dest_prof_w));
 
			if (qt_registros_w = '0') then 
				ds_mensagem_w := ds_mensagem_w || wheb_mensagem_pck.get_texto(316203) || '.' || quebra_w;
				ie_inconsistente_w	:= true;
			end if;		
		elsif (ie_informacao_w	= 'PD') then
			select	count(*) 
			into STRICT	qt_registros_w 
			from	parecer_medico_req 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica = coalesce(cd_pessoa_fisica_w, 0)))
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
			and	coalesce(dt_inativacao::text, '') = ''
			and	trunc(dt_atualizacao_nrec) = trunc(clock_timestamp())
			and	((coalesce(cd_especialidade_dest_w::text, '') = '') or (cd_especialidade_dest = cd_especialidade_dest_w))
			and	((coalesce(cd_especialidade_dest_prof_w::text, '') = '') or (cd_especialidade_dest_prof = cd_especialidade_dest_prof_w));
 
			if (qt_registros_w = '0') then 
				ds_mensagem_w := ds_mensagem_w || wheb_mensagem_pck.get_texto(316203) || '.' || quebra_w;
				ie_inconsistente_w	:= true;
			end if;				
		elsif (ie_informacao_w	= 'AP') then
		
			select	max(obter_pessoa_atendimento(nr_atendimento, 'C'))
			into STRICT 	cd_pessoa_fisica_tabela_w
			from	apache
			where	nr_atendimento = nr_atendimento_p;	
		
			select	count(*)
			into STRICT	qt_registros_w 
			from	apache 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica_tabela_w = coalesce(cd_pessoa_fisica_w, 0)))
			and		coalesce(dt_inativacao::text, '') = '' 
			and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
 
			if (qt_registros_w = 0) then 
				ds_mensagem_w := ds_mensagem_w || wheb_mensagem_pck.get_texto(290666) || '.' ||quebra_w;
				ie_inconsistente_w := true;
			end if;
		elsif (ie_informacao_w	= 'MF') then 
		
			select	max(obter_pessoa_atendimento(nr_atendimento, 'C'))
			into STRICT 	cd_pessoa_fisica_tabela_w
			from	escala_man_lf
			where	nr_atendimento = nr_atendimento_p;
		
			select	count(*)
			into STRICT	qt_registros_w 
			from	escala_man_lf 
			where	((ie_consiste_pf_w = 'N' and nr_atendimento	= nr_atendimento_p) or (ie_consiste_pf_w = 'S' and cd_pessoa_fisica_tabela_w = coalesce(cd_pessoa_fisica_w, 0)))
			and	coalesce(dt_inativacao::text, '') = '' 
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
 
			if (qt_registros_w = 0) then 
				ds_mensagem_w := ds_mensagem_w || wheb_mensagem_pck.get_texto(290667) || '.' || quebra_w;
				ie_inconsistente_w := true;
			end if;
		end if;
		if (ie_inconsistente_w) and (ie_acao_w	= 'I') then 
			ie_acao_p	:= ie_acao_w;
		end if;
		end;
	end loop;
	 
	close C01;
end if;
ds_mensagem_p		:= ds_mensagem_w;
nr_item_posicionar_p	:= nr_seq_item_pront_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_regra_inf_evol ( cd_estabelecimento_p bigint, nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_perfil_p bigint, nr_seq_item_p bigint, ie_momento_p text, ie_evolucao_clinica_p text, nr_seq_evento_p bigint, dt_prescricao_p timestamp, ds_mensagem_p INOUT text, ie_acao_p INOUT text, nr_item_posicionar_p INOUT bigint) FROM PUBLIC;

