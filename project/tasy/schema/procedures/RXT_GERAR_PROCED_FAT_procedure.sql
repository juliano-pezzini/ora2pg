-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rxt_gerar_proced_fat ( nr_seq_agenda_p bigint, nr_seq_campo_p bigint, ie_tipo_lancamento_p text, nm_usuario_p text) AS $body$
DECLARE

 
nr_atendimento_w	bigint;			
cd_convenio_w		integer;
nr_seq_proc_interno_w	bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_tratamento_w	bigint;
nr_seq_acessorio_w	bigint;
nr_seq_tumor_w		bigint;

C01 CURSOR FOR 
	SELECT	nr_seq_acessorio 
	from	rxt_acessorio_pac 
	where	nr_seq_tratamento	= nr_seq_tratamento_w 
	and	nr_seq_campo		= nr_seq_campo_p;
			

BEGIN 
 
select	max(nr_atendimento), 
	max(nr_seq_tratamento) 
into STRICT	nr_atendimento_w, 
	nr_seq_tratamento_w 
from	rxt_Agenda 
where	nr_sequencia	= nr_seq_agenda_p;
 
if (coalesce(nr_atendimento_w,0) = 0) then 
	 
	select	max(nr_seq_tumor) 
	into STRICT	nr_seq_tumor_w 
	from	rxt_tratamento b 
	where 	b.nr_sequencia	= nr_seq_tratamento_w;
	 
	select 	max(nr_atendimento) 
	into STRICT	nr_atendimento_w 
	from	rxt_tumor 
	where	nr_Sequencia = nr_seq_tumor_w;
 
end if;
 
if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then 
	cd_convenio_w	:= obter_convenio_atendimento(nr_atendimento_w);
	 
	SELECT * FROM Rxt_Obter_Proced_Fat(cd_convenio_w, ie_tipo_lancamento_p, nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, nm_usuario_p) INTO STRICT nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w;
	 
	if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') or 
		(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then 
		CALL rxt_inserir_proced_fat(nr_seq_tratamento_w, nm_usuario_p, nr_atendimento_w, obter_setor_usuario(nm_usuario_p), 
					obter_estab_atend(nr_atendimento_w), nr_seq_agenda_p, cd_procedimento_w, ie_origem_proceD_w, nr_seq_proc_interno_w, 
					ie_tipo_lancamento_p);
	end if;
	 
	if (ie_tipo_lancamento_p	= 'R') then 
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_acessorio_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			SELECT * FROM Rxt_Obter_Proced_Acess(cd_convenio_w, nr_seq_acessorio_w, nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, nm_usuario_p) INTO STRICT nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w;
			 
			if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') or 
				(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then 
				CALL rxt_inserir_proced_fat(nr_seq_tratamento_w, nm_usuario_p, nr_atendimento_w, obter_setor_usuario(nm_usuario_p), 
							obter_estab_atend(nr_atendimento_w), nr_seq_agenda_p, cd_procedimento_w, ie_origem_proceD_w, nr_seq_proc_interno_w, 
							ie_tipo_lancamento_p);
			end if;
			end;
		end loop;
		close C01;
	end if;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rxt_gerar_proced_fat ( nr_seq_agenda_p bigint, nr_seq_campo_p bigint, ie_tipo_lancamento_p text, nm_usuario_p text) FROM PUBLIC;

