-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_cancelar_lote_discussao ( nr_seq_lote_disc_p pls_lote_discussao.nr_sequencia%type, ie_commit_p text, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


nr_titulo_receber_w		titulo_receber.nr_titulo%type;
nr_titulo_receber_ndr_w		titulo_receber.nr_titulo%type;
nr_titulo_pagar_w		titulo_pagar.nr_titulo%type;
nr_titulo_pagar_ndr_w		titulo_pagar.nr_titulo%type;
nr_seq_lote_contest_w		pls_lote_contestacao.nr_sequencia%type;
nr_seq_cam_contest_w		ptu_camara_contestacao.nr_sequencia%type;
nr_seq_lote_conta_w		pls_lote_protocolo_conta.nr_sequencia%type;
nr_documento_w			titulo_pagar.nr_documento%type;
ie_situacao_w			titulo_pagar.ie_situacao%type;
ie_situacao_rec_w		titulo_receber.ie_situacao%type;
ie_concil_contab_w		pls_visible_false.ie_concil_contab%type;


BEGIN
select	max(nr_titulo_receber),
	max(nr_titulo_receber_ndr),
	max(nr_nota_credito_debito),
	max(nr_nota_credito_debito_ndr),
	max(nr_seq_lote_contest),
	max(nr_seq_lote_conta)
into STRICT	nr_titulo_receber_w,
	nr_titulo_receber_ndr_w,
	nr_titulo_pagar_w,
	nr_titulo_pagar_ndr_w,
	nr_seq_lote_contest_w,
	nr_seq_lote_conta_w
from	pls_lote_discussao
where	nr_sequencia = nr_seq_lote_disc_p;

if (nr_seq_lote_contest_w IS NOT NULL AND nr_seq_lote_contest_w::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_cam_contest_w
	from	ptu_camara_contestacao
	where	nr_seq_lote_contest = nr_seq_lote_contest_w;
end if;

if (nr_titulo_receber_w IS NOT NULL AND nr_titulo_receber_w::text <> '') or (nr_titulo_receber_ndr_w IS NOT NULL AND nr_titulo_receber_ndr_w::text <> '') then
	
	if (nr_titulo_receber_w IS NOT NULL AND nr_titulo_receber_w::text <> '') then
		
		-- como é feito a busca em uma PK, o max existe apenas para tratar no_data_found( mais performatico que exception)
		select	max(ie_situacao)
		into STRICT	ie_situacao_rec_w
		from	titulo_receber
		where	nr_titulo	= nr_titulo_receber_w;
		
		update	ptu_nota_debito
		set	ie_cancelamento = 'S'
		where	nr_sequencia in (SELECT	nr_seq_nota_debito
					from	ptu_nota_deb_conclusao
					where	nr_nota_debito	= nr_titulo_receber_w);
					
		-- grjunior - OS 1134184

		--   Se o titulo já estiver cancelado, não precisa mandar cancelar novamente.

		--   Caso ele já esteja em um lote contabil, mesmo cancelado, vai gerar erro, por isso esta validação		
		if (ie_situacao_rec_w <> 3) then
			CALL cancelar_titulo_receber( nr_titulo_receber_w, nm_usuario_p, 'N',clock_timestamp());
		end if;
	end if;
	
	if (nr_titulo_receber_ndr_w IS NOT NULL AND nr_titulo_receber_ndr_w::text <> '') then
	
		-- como é feito a busca em uma PK, o max existe apenas para tratar no_data_found( mais performatico que exception)
		select	max(ie_situacao)
		into STRICT	ie_situacao_rec_w
		from	titulo_receber
		where	nr_titulo	= nr_titulo_receber_ndr_w;
		
		update	ptu_nota_debito
		set	ie_cancelamento = 'S'
		where	nr_sequencia in (SELECT	nr_seq_nota_debito
					from	ptu_nota_deb_conclusao
					where	nr_nota_debito	= nr_titulo_receber_ndr_w);
					
		-- grjunior - OS 1134184

		--   Se o titulo já estiver cancelado, não precisa mandar cancelar novamente.

		--   Caso ele já esteja em um lote contabil, mesmo cancelado, vai gerar erro, por isso esta validação		
		if (ie_situacao_rec_w <> 3) then
			CALL cancelar_titulo_receber( nr_titulo_receber_ndr_w, nm_usuario_p, 'N',clock_timestamp());
		end if;
	end if;	
end if;
	
if (nr_titulo_pagar_w IS NOT NULL AND nr_titulo_pagar_w::text <> '') or (nr_titulo_pagar_ndr_w IS NOT NULL AND nr_titulo_pagar_ndr_w::text <> '') then
	
	if (nr_titulo_pagar_w IS NOT NULL AND nr_titulo_pagar_w::text <> '') then
	
		-- como é feito a busca em uma PK, o max existe apenas para tratar no_data_found( mais performatico que exception)
		select	max(nr_documento),
			max(ie_situacao)
		into STRICT	nr_documento_w,
			ie_situacao_w
		from	titulo_pagar
		where	nr_titulo = nr_titulo_pagar_w;
	
		update	ptu_nota_debito
		set	ie_cancelamento = 'S'
		where	nr_sequencia in (SELECT	nr_seq_nota_debito
					from	ptu_nota_deb_conclusao
					where	nr_nota_debito	= nr_documento_w);
					
		-- grjunior - OS 1134184

		--   Se o titulo já estiver cancelado, não precisa mandar cancelar novamente.

		--   Caso ele já esteja em um lote contabil, mesmo cancelado, vai gerar erro, por isso esta validação
		if (ie_situacao_w <> 'C') then
			CALL cancelar_titulo_pagar( nr_titulo_pagar_w, nm_usuario_p, clock_timestamp());
		end if;
	end if;

	if (nr_titulo_pagar_ndr_w IS NOT NULL AND nr_titulo_pagar_ndr_w::text <> '') then
		
		-- como é feito a busca em uma PK, o max existe apenas para tratar no_data_found( mais performatico que exception)
		select	max(nr_documento),
			max(ie_situacao)
		into STRICT	nr_documento_w,
			ie_situacao_w
		from	titulo_pagar
		where	nr_titulo = nr_titulo_pagar_ndr_w;
	
		update	ptu_nota_debito
		set	ie_cancelamento = 'S'
		where	nr_sequencia in (SELECT	nr_seq_nota_debito
					from	ptu_nota_deb_conclusao
					where	nr_nota_debito	= nr_documento_w);

		-- grjunior - OS 1134184

		--   Se o titulo já estiver cancelado, não precisa mandar cancelar novamente.

		--   Caso ele já esteja em um lote contabil, mesmo cancelado, vai gerar erro, por isso esta validação
		if (ie_situacao_w <> 'C') then
		
			CALL cancelar_titulo_pagar( nr_titulo_pagar_ndr_w, nm_usuario_p, clock_timestamp());
		end if;
	end if;	
end if;

update	pls_analise_conta
set	ie_status		= 'C'
where	nr_seq_lote_protocolo	= nr_seq_lote_conta_w;

update	pls_lote_discussao
set	ie_status		= 'C',
	nm_usuario_cancelamento	= nm_usuario_p,
	dt_cancelamento		= clock_timestamp()
where	nr_sequencia		= nr_seq_lote_disc_p;

CALL pls_atualizar_valores_contest(nr_seq_lote_contest_w,'N');

select	coalesce(max(ie_concil_contab), 'N')
into STRICT	ie_concil_contab_w
from	pls_visible_false
where	cd_estabelecimento = cd_estabelecimento_p;
if (ie_concil_contab_w = 'S') then
	CALL pls_ctb_onl_gravar_movto_pck.gravar_movto_cancel_lote_disc(nr_seq_lote_disc_p, cd_estabelecimento_p, nm_usuario_p);
end if;

if (coalesce(ie_commit_p,'N') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cancelar_lote_discussao ( nr_seq_lote_disc_p pls_lote_discussao.nr_sequencia%type, ie_commit_p text, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

