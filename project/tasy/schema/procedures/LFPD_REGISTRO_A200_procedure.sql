-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lfpd_registro_a200 ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_nota_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


contador_w		bigint	:= 0;
ds_arquivo_w		varchar(4000);
ds_arquivo_compl_w	varchar(4000);
ds_linha_w		varchar(8000);
nr_linha_w		bigint	:= qt_linha_p;
nr_seq_registro_w	bigint	:= nr_sequencia_p;
sep_w			varchar(1)	:= ds_separador_p;
pr_imposto_w		double precision;
cd_tributo_iss_w	smallint;
nr_seq_regra_w		bigint;
nr_seq_regra_tributo_w	bigint;

c01 CURSOR FOR
	SELECT	'A200' cd_registro,
		coalesce(b.nr_item_sequencial, b.nr_item_nf)	nr_seq_item,
		CASE WHEN coalesce(b.cd_procedimento::text, '') = '' THEN  'M' || to_char(b.cd_material)  ELSE 'P' || b.cd_procedimento || coalesce(to_char(b.ie_origem_proced),'1') END  cd_item,
		replace(campo_mascara(b.vl_unitario_item_nf,3),'.',',')			vl_unitario,
		replace(campo_mascara(lpad(b.qt_item_nf,3,'0'),3),'.',',')			qt_item,
		b.cd_unidade_medida_estoque		cd_unidade,
		replace(campo_mascara(b.vl_total_item_nf,2),'.',',') vl_total_item,
		replace(campo_mascara(b.vl_desconto,2),'.',',') vl_desconto_item,
		''					cd_ctiss,
		replace(campo_mascara(b.vl_total_item_nf,2),'.',',') vl_base_calculo,
		replace(campo_mascara(pr_imposto_w,2),'.',',') pr_aliquota_issqn,
		replace(campo_mascara((b.vl_total_item_nf * pr_imposto_w)/100,2),'.',',') vl_issqn
	FROM nota_fiscal_item b, nota_fiscal a
LEFT OUTER JOIN modelo_nota_fiscal c ON (a.nr_seq_modelo = c.nr_sequencia)
WHERE a.nr_sequencia  = b.nr_sequencia  and b.nr_sequencia = nr_seq_nota_p and ((b.cd_procedimento IS NOT NULL AND b.cd_procedimento::text <> '') or (b.cd_material IS NOT NULL AND b.cd_material::text <> '')) and to_char(a.dt_emissao,'dd/MM/yy') between to_date(dt_inicio_p,'dd/MM/yy') and to_date(dt_fim_p,'dd/MM/yy') and a.cd_estabelecimento = cd_estabelecimento_p and (c.cd_modelo_nf <> '3A' or coalesce(c.cd_modelo_nf::text, '') = '');

vet01	c01%RowType;


BEGIN

select	nr_seq_regra_lfpd
into STRICT	nr_seq_regra_w
from	fis_lfpd_controle
where	nr_sequencia = nr_seq_controle_p;

select	cd_tributo_iss
into STRICT	cd_tributo_iss_w
from	fis_lfpd_regra
where	nr_sequencia = nr_seq_regra_w;

select	max(nr_sequencia)
into STRICT	nr_seq_regra_tributo_w
from	regra_calculo_imposto
where	cd_tributo = cd_tributo_iss_w;

select	pr_imposto
into STRICT	pr_imposto_w
from	regra_calculo_imposto
where	nr_sequencia = nr_seq_regra_tributo_w;

open C01;
loop
fetch C01 into
	vet01;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	contador_w := contador_w + 1;

	ds_linha_w := substr(	sep_w	||	vet01.cd_registro	|| sep_w ||
						contador_w		|| sep_w ||
						vet01.cd_item		|| sep_w ||
						vet01.vl_unitario	|| sep_w ||
						vet01.qt_item		|| sep_w ||
						vet01.cd_unidade	|| sep_w ||
						vet01.vl_total_item	|| sep_w ||
						vet01.vl_desconto_item	|| sep_w ||
						vet01.cd_ctiss		|| sep_w ||
						vet01.vl_base_calculo	|| sep_w ||
						vet01.pr_aliquota_issqn	|| sep_w ||
						vet01.vl_issqn		|| sep_w, 1, 8000);

	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w	:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;

	insert into fis_lfpd_arquivo(	nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_linha,
						ds_arquivo,
						ds_arquivo_compl,
						cd_registro,
						nr_seq_controle_lfpd)
				values (	nextval('fis_lfpd_arquivo_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_linha_w,
						ds_arquivo_w,
						ds_arquivo_compl_w,
						vet01.cd_registro,
						nr_seq_controle_p);

	if (mod(contador_w,100) = 0) then
		commit;
	end if;

	end;
end loop;
close C01;

commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lfpd_registro_a200 ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_nota_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

