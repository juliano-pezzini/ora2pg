-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_imp_pedido_status_tran_v40 ( ds_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_origem_p INOUT bigint) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Importar pedido de status tran_v40 
 
rotina utilizada nas transações ptu via scs homologadas com a unimed brasil. 
quando for alterar, favor verificar com o análista responsável para a realização de testes. 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ X ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
Performance 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
cd_transacao_w			varchar(255);
ie_tipo_cliente_w		varchar(255);
cd_unimed_exec_w		varchar(255);
cd_unimed_benef_w		varchar(255);
nr_ident_exec_w			bigint;
nr_seq_pedido_w			bigint;
ds_conteudo_w			varchar(4000);
nr_seq_import_w			bigint;
nr_seq_pedido_aut_compl_w	bigint;
nr_seq_origem_w			bigint;
nr_seq_pedido_aut_w		bigint;
nr_seq_pedido_compl_w		bigint;
nr_seq_guia_w			bigint;
nr_seq_requisicao_w		bigint;

c01 CURSOR FOR 
	SELECT	nr_seq_importacao, 
		ds_valores 
	from	w_scs_importacao 
	where	nm_usuario	= nm_usuario_p 
	order by nr_seq_importacao;


BEGIN 
 
open C01;
loop 
fetch C01 into	 
	nr_seq_import_w, 
	ds_conteudo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	if (substr(ds_conteudo_w,1,4)	<> 'FIM$') then 
		if (nr_seq_import_w	= 1) then 
			cd_transacao_w			:= substr(ds_conteudo_w,1,5);
			ie_tipo_cliente_w		:= trim(both substr(ds_conteudo_w,6,15));
			cd_unimed_exec_w		:= trim(both substr(ds_conteudo_w,21,4));
			cd_unimed_benef_w		:= trim(both substr(ds_conteudo_w,25,4));
			nr_ident_exec_w			:= (substr(ds_conteudo_w,29,10))::numeric;
 
			begin 
				select	nr_sequencia 
				into STRICT	nr_seq_pedido_compl_w 
				from	ptu_pedido_compl_aut 
				where	nr_seq_execucao	= nr_ident_exec_w;
			exception 
			when others then 
				begin					 
					select	nr_sequencia 
					into STRICT	nr_seq_pedido_aut_w 
					from	ptu_pedido_autorizacao 
					where	nr_seq_execucao	= nr_ident_exec_w;
				exception 
				when others then 
					nr_seq_pedido_aut_w	:= null;
					nr_seq_pedido_compl_w	:= null;
				end;
			end;
 
			if (coalesce(nr_seq_pedido_aut_w,0)	<> 0) then 
				begin 
					select	nr_seq_guia, 
						nr_seq_requisicao 
					into STRICT	nr_seq_guia_w, 
						nr_seq_requisicao_w 
					from	ptu_pedido_autorizacao 
					where	nr_sequencia	= nr_seq_pedido_aut_w;
				exception 
				when others then 
					nr_seq_guia_w		:= null;
					nr_seq_requisicao_w	:= null;
				end;
			 
				nr_seq_pedido_aut_compl_w	:= nr_seq_pedido_aut_w;
			elsif (coalesce(nr_seq_pedido_compl_w,0)	<> 0) then 
				begin 
					select	nr_seq_guia, 
						nr_seq_requisicao 
					into STRICT	nr_seq_guia_w, 
						nr_seq_requisicao_w 
					from	ptu_pedido_compl_aut 
					where	nr_sequencia	= nr_seq_pedido_compl_w;
				exception 
				when others then 
					nr_seq_guia_w		:= null;
					nr_seq_requisicao_w	:= null;
				end;
				 
				nr_seq_pedido_aut_compl_w	:= nr_seq_pedido_compl_w;
			end if;
 
			if (ie_tipo_cliente_w	= 'UNIMED') then 
				ie_tipo_cliente_w	:= 'U';
			elsif (ie_tipo_cliente_w	= 'PORTAL') then 
				ie_tipo_cliente_w	:= 'P';
			elsif (ie_tipo_cliente_w	= 'PRESTADOR') then 
				ie_tipo_cliente_w	:= 'R';
			end if;
			 
			if (cd_transacao_w	= '00360') then 
				select	nextval('ptu_pedido_status_seq') 
				into STRICT	nr_seq_pedido_w 
				;
				 
				insert	into ptu_pedido_status(nr_sequencia, cd_transacao, cd_unimed_beneficiario, 
					 cd_unimed_executora, dt_atualizacao, dt_atualizacao_nrec, 
					 ie_tipo_cliente, nm_usuario, nm_usuario_nrec, 
					 nr_transacao_uni_exec, nr_seq_guia, nr_seq_requisicao) 
				values (nr_seq_pedido_w, '00360', cd_unimed_benef_w, 
					 cd_unimed_exec_w, clock_timestamp(), clock_timestamp(), 
					 ie_tipo_cliente_w, nm_usuario_p, nm_usuario_p, 
					 nr_ident_exec_w, nr_seq_guia_w, nr_seq_requisicao_w);
			end if;
		end if;
	end if;
	end;
end loop;
close C01;
 
nr_seq_origem_w := ptu_gestao_env_res_status_tran(nr_seq_pedido_aut_compl_w, nr_seq_pedido_w, cd_estabelecimento_p, nm_usuario_p, nr_seq_origem_w);
 
nr_seq_origem_p	:= nr_seq_origem_w;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_imp_pedido_status_tran_v40 ( ds_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_origem_p INOUT bigint) FROM PUBLIC;

