-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_sigiss_tipo2 ( dt_inicio_p timestamp, dt_fim_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ie_tp_registro_w		smallint;
ie_identificador_sistema_w	varchar(12);
ie_tipo_codificacao_w		varchar(1);
cd_item_servico_w		varchar(7);
ie_situacao_w			varchar(1);
vl_total_nota_w			varchar(15);
vl_bc_iss_w			varchar(15);
cd_cgc_cpf_tomador_w		varchar(15);
nr_incricao_municipal_tom_w	varchar(8);
nr_incricao_estadual_tom_w	varchar(8);
ds_tomador_w			varchar(100);
ds_rua_tomador_w		varchar(50);
nr_endereco_tomador_w		varchar(10);
ds_complemento_tomador_w	varchar(30);
ds_bairro_tomador_w		varchar(30);
ds_municipio_tomador_w		varchar(50);
ds_uf_tomador_w			varchar(2);
ds_cep_tomador_w		varchar(8);
ds_email_tomador_w		varchar(100);
cd_estabelecimento_w		smallint;
ds_servicos_w			varchar(1000);
ds_arquivo_ww			varchar(3000);

c01 CURSOR FOR 
SELECT '2' 							cd_registro, 
    lpad(' ','12',' ') 						ie_identificador_sistema, 
    1 ie_tipo_codificacao, 
    lpad(coalesce(substr(CASE WHEN coalesce(i.cd_material::text, '') = '' THEN obter_dados_grupo_servico_item(obter_item_servico_proced(obter_procedimento_nfse(n.nr_sequencia,'P'),obter_procedimento_nfse(n.nr_sequencia,'O')),'CD')  ELSE i.cd_material END ,1,20),' '),7,' ') cd_item_servico, 
    	CASE WHEN  n.ie_situacao=1 THEN  		CASE WHEN coalesce((	SELECT	count(*) 				from	nota_fiscal_trib a, 					tributo c 				where	a.cd_tributo 	 = c.cd_tributo 				and	c.ie_tipo_tributo	= 'ISS' 				and 	a.nr_sequencia 	= n.nr_sequencia),0)=0 THEN 'I'  ELSE 'T' END  WHEN  n.ie_situacao=3 THEN  CASE WHEN coalesce(n.ie_status_envio::text, '') = '' THEN  				CASE WHEN coalesce((	select	count(*) 					from	nota_fiscal_trib a, 						tributo c 					where	a.cd_tributo 	 = c.cd_tributo 					and	c.ie_tipo_tributo	= 'ISS' 					and 	a.nr_sequencia 	= n.nr_sequencia),0)=0 THEN 'I'  ELSE 'T' END   ELSE 'C' END   ELSE 'C' END  ie_situacao, 
	lpad(coalesce(elimina_caractere_especial(campo_mascara_virgula(n.vl_total_nota)),' '),'15','0') vl_total_nota, 
	lpad(coalesce(elimina_caractere_especial(campo_mascara_virgula(obter_valor_tipo_tributo_nota(n.nr_sequencia, 'B', 'ISS'))),'0'),'15','0') vl_bc_iss, 
	lpad(coalesce(CASE WHEN coalesce(n.cd_pessoa_fisica::text, '') = '' THEN n.cd_cgc  ELSE CASE WHEN obter_se_cpf_valido(obter_dados_pf(n.cd_pessoa_fisica,'CPF'))='S' THEN obter_dados_pf(n.cd_pessoa_fisica,'CPF')  ELSE 'PFNI' END  END ,'0'),'15',' ') cd_cgc_cpf_tomador, 
	lpad(coalesce(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'IM'),' '),'8',' ') nr_incricao_municipal_tom, 
	lpad(coalesce(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'IE'),' '),'8',' ') nr_incricao_estadual_tom, 
	rpad(coalesce(substr(CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN obter_dados_pf_pj(null,cd_cgc,'N')  ELSE obter_nome_pessoa_fisica(cd_pessoa_fisica,null) END ,1,100),' '),'100',' ') ds_tomador, 
	rpad(coalesce(substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'R'),1,50),' '),'50',' ') ds_rua_tomador, 
	lpad(coalesce(substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'NR'),1,10),' '),'10',' ') nr_endereco_tomador, 
	rpad(coalesce(substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CO'),1,30),' '),'30',' ') ds_complemento_tomador, 
	rpad(coalesce(substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'B'),1,30),' '),'30',' ') ds_bairro_tomador, 
	rpad(coalesce(substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CI'),1,50),' '),'50',' ') ds_municipio_tomador, 
	rpad(coalesce(substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'UF'),1,2),' '),'2',' ') ds_uf_tomador, 
	lpad(coalesce(substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CEP'),1,8),' '),'8',' ') ds_cep_tomador, 
	rpad(coalesce(substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'M'),1,100),' '),'100',' ') ds_email_tomador, 
	coalesce(substr(replace(obter_descricao_rps(n.cd_estabelecimento, n.nr_sequencia, 'DS_SERVICOS'),CHR(13),' '),1,1000),' ') ds_servicos, 
	n.cd_estabelecimento			cd_estabelecimento 
from  nota_fiscal n, 
	nota_fiscal_item i, 
	operacao_nota o 
where  i.nr_sequencia = n.nr_sequencia 
and	o.cd_operacao_nf = n.cd_operacao_nf 
and	o.ie_servico = 'S' 
and	n.cd_estabelecimento = cd_estabelecimento_p 
and	n.dt_emissao between dt_inicio_p and fim_dia(dt_fim_p);

BEGIN
 
open c01;
loop 
fetch c01 into 
	ie_tp_registro_w, 
	ie_identificador_sistema_w, 
	ie_tipo_codificacao_w, 
	cd_item_servico_w, 
	ie_situacao_w, 
	vl_total_nota_w, 
	vl_bc_iss_w, 
	cd_cgc_cpf_tomador_w, 
	nr_incricao_municipal_tom_w, 
	nr_incricao_estadual_tom_w, 
	ds_tomador_w, 
	ds_rua_tomador_w, 
	nr_endereco_tomador_w, 
	ds_complemento_tomador_w, 
	ds_bairro_tomador_w, 
	ds_municipio_tomador_w, 
	ds_uf_tomador_w, 
	ds_cep_tomador_w, 
	ds_email_tomador_w, 
	ds_servicos_w, 
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
 
	begin	 
	 
	ds_arquivo_ww	:=   	ie_tp_registro_w		||ie_identificador_sistema_w	|| 
				ie_tipo_codificacao_w		||cd_item_servico_w		|| 
				ie_situacao_w			||vl_total_nota_w		|| 
				vl_bc_iss_w			||cd_cgc_cpf_tomador_w		|| 
				nr_incricao_municipal_tom_w	||nr_incricao_estadual_tom_w	|| 
				ds_tomador_w			||ds_rua_tomador_w		|| 
				nr_endereco_tomador_w		||ds_complemento_tomador_w	|| 
				ds_bairro_tomador_w		||ds_municipio_tomador_w	|| 
				ds_uf_tomador_w			||ds_cep_tomador_w		|| 
				ds_email_tomador_w		||ds_servicos_w;
				 
insert into w_inss_direp_arquivo(nr_sequencia, 
				 cd_estabelecimento, 
				 dt_atualizacao, 
				 nm_usuario, 
				 dt_atualizacao_nrec, 
				 nm_usuario_nrec, 
				 ds_arquivo_w) 
			values (nextval('w_inss_direp_arquivo_seq'), 
				 cd_estabelecimento_w, 
				 clock_timestamp(), 
				 nm_usuario_p, 
				 clock_timestamp(), 
				 nm_usuario_p, 
				 ds_arquivo_ww );
 
	end;
 
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_sigiss_tipo2 ( dt_inicio_p timestamp, dt_fim_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

