-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (	nr_seq_old bigint, 
			nr_seq_new bigint, 
			nr_conta bigint);


CREATE OR REPLACE PROCEDURE baca_sus_atual_conta_estor_aih (nr_seq_protocolo_p bigint, nm_usuario_p text) AS $body$
DECLARE

type Vetor is table of campos index by integer;

nr_interno_conta_w		bigint;
nr_interno_conta_orig_w		bigint;
vl_conta_orig_w			double precision;
nr_sequencia_w			bigint;
nr_interno_conta_ler_w		bigint;
nr_seq_nova_w			bigint;
cd_acao_w			varchar(1);
qt_adic_w			smallint;
qt_acao_w			smallint;

 
i					integer := 1;
Vetor_Proc_w				Vetor;

c01 CURSOR FOR 
	SELECT	nr_interno_Conta, 
		nr_seq_conta_origem 
	from	conta_paciente 
	where	nr_seq_protocolo	= nr_seq_protocolo_p 
	and	ie_cancelamento		= 'E';

c02 CURSOR FOR 
SELECT 	nr_sequencia, 
	CASE WHEN cd_acao='1' THEN '2'  ELSE '1' END  cd_acao, 
	nr_interno_conta_w, 1, -1 
from	procedimento_paciente 
where	nr_interno_conta	= nr_interno_conta_orig_w;	
 
 
c03 CURSOR FOR 
SELECT 	nr_sequencia, 
	CASE WHEN cd_acao='1' THEN '2'  ELSE '1' END  cd_acao, 
	nr_interno_conta_w, 1, -1 
from	Material_atend_paciente 
where	nr_interno_conta	= nr_interno_conta_orig_w;	
 

BEGIN 
 
open	c01;
loop 
fetch	c01 into 
	nr_interno_conta_w, 
	nr_interno_conta_orig_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
 
	update	conta_paciente 
	set	vl_conta		= 0, 
		ie_status_acerto	= 1 
	where	nr_interno_conta	= nr_interno_conta_w;
 
 
	delete 	from procedimento_paciente 
	where	nr_interno_conta	= nr_interno_conta_w;
	 
	delete 	from material_atend_paciente 
	where	nr_interno_conta	= nr_interno_conta_w;
 
	open	c02;
	loop 
	fetch	c02 into 
		nr_sequencia_w, 
		cd_acao_w, 
		nr_interno_conta_ler_w, 
		qt_adic_w, 
		qt_acao_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
 
		select nextval('procedimento_paciente_seq') 
		into STRICT nr_seq_nova_w 
		;
		insert into procedimento_paciente( 
			nr_sequencia, nr_atendimento, dt_entrada_unidade, cd_procedimento, 
			dt_procedimento, qt_procedimento, dt_atualizacao, nm_usuario, 
			cd_medico, cd_convenio, cd_categoria, cd_pessoa_fisica, dt_prescricao, 
			ds_observacao, vl_procedimento, vl_medico, vl_anestesista, vl_materiais, 
			cd_edicao_amb, cd_tabela_servico, dt_vigencia_preco, cd_procedimento_princ, 
			dt_procedimento_princ, dt_acerto_conta, dt_acerto_convenio, 
			dt_acerto_medico,	vl_auxiliares, vl_custo_operacional, 
			tx_medico, tx_anestesia, nr_prescricao, nr_sequencia_prescricao, 
			cd_motivo_exc_conta, ds_compl_motivo_excon, cd_acao, qt_devolvida, 
			cd_motivo_devolucao, nr_cirurgia, nr_doc_convenio, cd_medico_executor, 
			ie_cobra_pf_pj, nr_laudo, dt_conta, cd_setor_atendimento, 
			cd_conta_contabil, cd_procedimento_aih, ie_origem_proced, nr_aih,	 
			ie_responsavel_credito,	tx_procedimento, cd_equipamento,ie_valor_informado, 
			cd_estabelecimento_custo, cd_tabela_custo, cd_situacao_glosa, 
			nr_lote_contabil,	cd_procedimento_convenio, nr_seq_autorizacao, 
			ie_tipo_servico_sus, ie_tipo_ato_sus, cd_cgc_prestador, nr_nf_prestador, 
			cd_atividade_prof_bpa, nr_interno_conta, nr_seq_proc_princ,	ie_guia_informada, 
			dt_inicio_procedimento,	ie_emite_conta, ie_funcao_medico, ie_classif_sus, 
			cd_especialidade, nm_usuario_original, 
			ie_tipo_proc_sus,cd_setor_receita, vl_adic_plant, nr_seq_atepacu, ie_proc_princ_atend, 
			nr_seq_proc_pacote, cd_medico_req, ie_tipo_guia, ie_video, ie_auditoria, nr_seq_exame) 
		SELECT 
			nr_seq_nova_w, nr_atendimento, dt_entrada_unidade, cd_procedimento, 
			dt_procedimento + (qt_adic_w / 86400), qt_procedimento * qt_acao_w, 
			clock_timestamp(), nm_usuario_p, cd_medico, cd_convenio, cd_categoria, 
			cd_pessoa_fisica, dt_prescricao, ds_observacao, vl_procedimento * qt_acao_w, 
			vl_medico * qt_acao_w, vl_anestesista * qt_acao_w, 
			vl_materiais * qt_acao_w, cd_edicao_amb, cd_tabela_servico, 
			dt_vigencia_preco, cd_procedimento_princ,	dt_procedimento_princ, 
			dt_acerto_conta + (qt_adic_w / 86400), dt_acerto_convenio, 
			dt_acerto_medico,	vl_auxiliares * qt_acao_w, vl_custo_operacional * qt_acao_w, 
			tx_medico, tx_anestesia, nr_prescricao, nr_sequencia_prescricao, 
			cd_motivo_exc_conta, ds_compl_motivo_excon, cd_acao_w, 
			qt_devolvida * qt_acao_w, cd_motivo_devolucao, nr_cirurgia, nr_doc_convenio, 
			cd_medico_executor, ie_cobra_pf_pj,	nr_laudo, dt_conta, 
			cd_setor_atendimento, cd_conta_contabil, cd_procedimento_aih, 
			ie_origem_proced,	nr_aih, ie_responsavel_credito, tx_procedimento, 
			cd_equipamento, CASE WHEN qt_adic_w=1 THEN 'S'  ELSE ie_valor_informado END , 
			cd_estabelecimento_custo, cd_tabela_custo, cd_situacao_glosa, 0, 
			cd_procedimento_convenio, nr_seq_autorizacao, ie_tipo_servico_sus, 
			ie_tipo_ato_sus, cd_cgc_prestador, nr_nf_prestador, cd_atividade_prof_bpa, 
			nr_interno_conta_ler_w, nr_seq_proc_princ, ie_guia_informada, 
			dt_inicio_procedimento,	ie_emite_conta, ie_funcao_medico, ie_classif_sus, 
			cd_especialidade,	nm_usuario_original, ie_tipo_proc_sus, 
			cd_setor_receita, vl_adic_plant * qt_acao_w, nr_seq_atepacu, ie_proc_princ_atend, 
			CASE WHEN nr_interno_conta_ler_w=nr_interno_conta_w THEN  nr_seq_proc_pacote  ELSE null END , 
			cd_medico_req, ie_tipo_guia, ie_video, ie_auditoria, nr_seq_exame 
		from procedimento_paciente 
		where nr_sequencia = nr_sequencia_w;
	 
		insert into procedimento_participante( 
			nr_sequencia, nr_seq_partic, ie_funcao, dt_atualizacao, 
			nm_usuario,	cd_pessoa_fisica,	cd_cgc, ie_valor_informado, 
			ie_emite_conta, vl_participante, vl_conta, nr_lote_contabil, 
			nr_conta_medico, ie_tipo_servico_sus, ie_tipo_ato_sus, 
			qt_ponto_sus, vl_ponto_sus, vl_original, ie_responsavel_credito, 
			pr_procedimento) 
		SELECT 
			nr_seq_nova_w, nr_seq_partic,ie_funcao, clock_timestamp(), 
			nm_usuario_p, cd_pessoa_fisica, cd_cgc, 
			CASE WHEN qt_adic_w=1 THEN 'S'  ELSE ie_valor_informado END ,ie_emite_conta, 
			vl_participante * qt_acao_w,	vl_conta * qt_acao_w, 
			0,	nr_conta_medico, ie_tipo_servico_sus, 
			ie_tipo_ato_sus, qt_ponto_sus * qt_acao_w, 
			vl_ponto_sus * qt_acao_w, vl_original * qt_acao_w, 
			ie_responsavel_credito,	pr_procedimento 
		from procedimento_participante 
		where nr_sequencia = nr_sequencia_w;
 
		Insert into proc_paciente_valor( 
			nr_seq_procedimento, nr_sequencia, ie_tipo_valor, 
	 		dt_atualizacao, nm_usuario, vl_procedimento, 
 			vl_medico, vl_anestesista, vl_materiais, vl_auxiliares, 
 			vl_custo_operacional, cd_convenio, cd_categoria, pr_valor) 
		SELECT 
			nr_seq_nova_w, nr_sequencia, ie_tipo_valor, 
	 		clock_timestamp(), nm_usuario_p, vl_procedimento * qt_acao_w, 
 			vl_medico * qt_acao_w, vl_anestesista * qt_acao_w, 
 			vl_materiais * qt_acao_w, vl_auxiliares * qt_acao_w, 
 			vl_custo_operacional * qt_acao_w, cd_convenio, 
	 		cd_categoria, pr_valor 
		from proc_paciente_valor 
		where nr_seq_procedimento = nr_sequencia_w;
 
 
		insert into sus_valor_proc_paciente( 
			nr_sequencia, dt_atualizacao, nm_usuario, dt_competencia, 
			qt_ato_medico, qt_ato_anestesista, vl_matmed, vl_diaria, vl_taxas, 
			vl_medico, vl_sadt, vl_contraste, vl_gesso, vl_quimioterapia, 
			vl_dialise, vl_tph, vl_filme_rx, vl_filme_ressonancia, vl_anestesia, 
			vl_sadt_rx, vl_sadt_pc, vl_outros, vl_ato_medico, vl_ato_anestesista, 
			cd_faixa_etaria, ie_tipo_atend_bpa, ie_grupo_atend_bpa, vl_ato_sadt, 
			vl_ponto_sp, vl_ponto_sadt, ie_versao, cd_porte_anestesico) 
		SELECT	nr_seq_nova_w, clock_timestamp(), nm_usuario_p, dt_competencia, 
			qt_ato_medico, qt_ato_anestesista, vl_matmed * qt_acao_w, vl_diaria * qt_acao_w, 
			vl_taxas * qt_acao_w, vl_medico * qt_acao_w, vl_sadt * qt_acao_w, vl_contraste * qt_acao_w, 
			vl_gesso * qt_acao_w, vl_quimioterapia * qt_acao_w, vl_dialise * qt_acao_w, vl_tph * qt_acao_w, 
			vl_filme_rx * qt_acao_w, vl_filme_ressonancia * qt_acao_w, vl_anestesia * qt_acao_w, 
			vl_sadt_rx * qt_acao_w, vl_sadt_pc * qt_acao_w, vl_outros * qt_acao_w, vl_ato_medico * qt_acao_w, 
			vl_ato_anestesista * qt_acao_w, 
			cd_faixa_etaria, ie_tipo_atend_bpa, ie_grupo_atend_bpa, vl_ato_sadt * qt_acao_w, 
			vl_ponto_sp * qt_acao_w, vl_ponto_sadt * qt_acao_w, ie_versao, cd_porte_anestesico 
		from	sus_valor_proc_paciente 
		where	nr_sequencia	= nr_sequencia_w;	
 
		Vetor_Proc_w[i].nr_seq_old := nr_sequencia_w;
		Vetor_Proc_w[i].nr_seq_new := nr_seq_nova_w;
		Vetor_Proc_w[i].nr_conta := nr_interno_conta_ler_w;
		i := i + 1;
 
 
		end;
	end loop;
	close	c02;
 
 
	OPEN 	C03;
	LOOP 
	FETCH 	C03 into 
		nr_sequencia_w, 
		cd_acao_w, 
		nr_interno_conta_ler_w, 
		qt_adic_w, 
		qt_acao_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin 
		select	nextval('material_atend_paciente_seq') 
		into STRICT	nr_seq_nova_w 
		;
 
		insert into material_atend_paciente( 
			nr_sequencia, 
			nr_atendimento, dt_entrada_unidade,	cd_material, dt_atendimento, 
			cd_unidade_medida, qt_material, dt_atualizacao,	nm_usuario, 
			cd_convenio, cd_categoria, dt_prescricao,	cd_material_prescricao, 
			ie_via_aplicacao,	ds_observacao, vl_material, cd_tab_preco_material, 
			dt_vigencia_tabela, dt_acerto_conta, dt_acerto_convenio, nr_prescricao, 
			nr_sequencia_prescricao, cd_motivo_exc_conta, ds_compl_motivo_excon, 
			cd_local_estoque,	dt_atualizacao_estoque, cd_acao, cd_setor_atendimento, 
			qt_devolvida, cd_motivo_devolucao, nr_cirurgia, nr_doc_convenio, 
			qt_executada, dt_conta,	vl_unitario, cd_proced_referencia, cd_conta_contabil, 
			qt_ajuste_conta, nr_aih, ie_valor_informado, cd_estabelecimento_custo, 
			cd_tabela_custo, cd_situacao_glosa, nr_lote_contabil,	cd_material_convenio, 
			nr_seq_autorizacao, nr_interno_conta, nr_seq_proc_princ, ie_guia_informada, 
			cd_especialidade,	nm_usuario_original, vl_tabela_original, 
			ie_emite_conta, cd_setor_receita, cd_cgc_fornecedor, 
			nr_seq_lote_fornec, cd_material_exec, nr_seq_atepacu, 
			nr_seq_proc_pacote, ie_auditoria) 
		SELECT 
			nr_seq_nova_w, nr_atendimento, dt_entrada_unidade,	cd_material, 
			dt_atendimento + (qt_adic_w / 86400), 
			cd_unidade_medida, qt_material * qt_acao_w, clock_timestamp(),	nm_usuario_p, 
			cd_convenio, cd_categoria, dt_prescricao,	cd_material_prescricao, 
			ie_via_aplicacao,	ds_observacao, vl_material * qt_acao_w, cd_tab_preco_material, 
			dt_vigencia_tabela, dt_acerto_conta + (qt_adic_w / 86400), dt_acerto_convenio, 
			nr_prescricao, nr_sequencia_prescricao, cd_motivo_exc_conta, 
			ds_compl_motivo_excon, null,	null, 
			cd_acao_w, cd_setor_atendimento, qt_devolvida * qt_acao_w, cd_motivo_devolucao, 
			nr_cirurgia, nr_doc_convenio, qt_executada * qt_acao_w, dt_conta,	vl_unitario, 
			cd_proced_referencia, cd_conta_contabil, qt_ajuste_conta * qt_acao_w, 
			nr_aih, CASE WHEN qt_adic_w=1 THEN 'S'  ELSE ie_valor_informado END , cd_estabelecimento_custo, 
			cd_tabela_custo, cd_situacao_glosa, 0, cd_material_convenio, 
			nr_seq_autorizacao, nr_interno_conta_ler_w, nr_seq_proc_princ, ie_guia_informada, 
			cd_especialidade,	nm_usuario_original,  
			vl_tabela_original * qt_acao_w,ie_emite_conta, cd_setor_receita, cd_cgc_fornecedor, 
			nr_seq_lote_fornec, cd_material_exec, nr_seq_atepacu, 
			CASE WHEN nr_interno_conta_ler_w=nr_interno_conta_w THEN  nr_seq_proc_pacote  ELSE null END , ie_auditoria 
		from 	material_atend_paciente 
		where nr_sequencia = nr_sequencia_w;
 
		insert into mat_atend_paciente_valor( 
			nr_seq_material, nr_sequencia, ie_tipo_valor, dt_atualizacao, 
			nm_usuario,	vl_material, cd_convenio, cd_categoria, pr_valor) 
		SELECT 
			nr_seq_nova_w, nr_sequencia, ie_tipo_valor, 
			clock_timestamp(), nm_usuario_p,	vl_material * qt_acao_w, 
			cd_convenio, cd_categoria, pr_valor 
		from 	mat_atend_paciente_valor 
		where nr_seq_material = nr_sequencia_w;
		end;
	END LOOP;
CLOSE C03;
 
 
 
	for i in 1..Vetor_Proc_w.count loop 
		update procedimento_paciente 
		set nr_seq_proc_princ = Vetor_Proc_w[i].nr_seq_new 
		where nr_seq_proc_princ = Vetor_Proc_w[i].nr_seq_old 
		 and nr_interno_conta = Vetor_Proc_w[i].nr_conta;
 
		update procedimento_paciente 
		set nr_seq_proc_pacote = Vetor_Proc_w[i].nr_seq_new 
		where nr_seq_proc_pacote = Vetor_Proc_w[i].nr_seq_old 
		 and nr_interno_conta = Vetor_Proc_w[i].nr_conta;
 
		update material_atend_paciente 
		set nr_seq_proc_princ = Vetor_Proc_w[i].nr_seq_new 
		where nr_seq_proc_princ = Vetor_Proc_w[i].nr_seq_old 
		 and nr_interno_conta = Vetor_Proc_w[i].nr_conta;
 
		update material_atend_paciente 
		set nr_seq_proc_pacote = Vetor_Proc_w[i].nr_seq_new 
		where nr_seq_proc_pacote = Vetor_Proc_w[i].nr_seq_old 
		 and nr_interno_conta = Vetor_Proc_w[i].nr_conta;
 
	end loop;
 
 
	select	vl_conta 
	into STRICT	vl_conta_orig_w 
	from	conta_paciente 
	where	nr_interno_conta	= nr_interno_conta_orig_w;
 
	update	conta_paciente 
	set	vl_conta		= vl_conta_orig_w * (-1), 
		ie_status_acerto	= 2 
	where	nr_interno_conta	= nr_interno_conta_w;
 
	CALL gerar_conta_paciente_repasse(nr_interno_conta_w, nm_usuario_p);
	CALL Gerar_conta_paciente_guia(nr_interno_conta_w, 2);
	CALL Atualizar_Resumo_Conta(nr_interno_conta_w, 2);
	end;
end loop;
close	c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_sus_atual_conta_estor_aih (nr_seq_protocolo_p bigint, nm_usuario_p text) FROM PUBLIC;

