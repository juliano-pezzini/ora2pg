-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_gerar_itens_ressup_ordem ( nr_requisicao_p bigint, nr_seq_ordem_p bigint, nm_usuario_p text) AS $body$
DECLARE


-- sequencia do item da requisição;
nr_sequencia_w			bigint;
nr_sequencia_ww			bigint;

-- campos do cursor c01;
cd_material_w                           	integer;
cd_material_ww                       	integer;
qt_dose_w			double precision;
cd_unid_med_consumo_w		varchar(30);

-- quantidade estoque do material;
qt_estoque_mat_w			double precision;
qt_material_estoque_w		double precision;
qt_material_estoque_ww		double precision;

qt_material_requisitada_ww		double precision;
cd_unidade_medida_consumo_ww	varchar(30);
cd_unidade_medida_estoque_ww	varchar(30);
cd_unidade_medida_estoque_w	varchar(30);


-- select da requisição;
cd_estab_w			integer;
cd_oper_estoque_w		smallint;
cd_setor_atend_w			integer;
cd_local_estoque_w		smallint;
dt_solicitacao_requisicao_w		timestamp;

-- campos do insert na tabela requisicao_ordem_prod;
nr_seq_req_prod_w                       	bigint;
cd_kit_material_w			bigint;

nr_prescricao_w			bigint;
nr_seq_prescricao_w		integer;
ie_gerou_kit_w			varchar(1);

c01 CURSOR FOR
	SELECT	b.cd_material,
		(b.qt_dose * coalesce(a.qt_dias_util,1)) qt_dose,
		b.cd_unidade_medida,
		b.nr_prescricao,
		b.nr_seq_prescricao
	from	can_ordem_prod a,
		can_ordem_item_prescr b
	where	a.nr_sequencia = b.nr_seq_ordem
	and	a.nr_sequencia = nr_seq_ordem_p;

c02 CURSOR FOR
	SELECT	a.cd_material,
		a.cd_unidade_medida,
		a.qt_material,
		a.cd_kit_material
	from	prescr_material a
	where	a.nr_prescricao = nr_prescricao_w
	and	a.nr_seq_kit = nr_seq_prescricao_w
	and	(a.cd_kit_material IS NOT NULL AND a.cd_kit_material::text <> '');


BEGIN

select	cd_estabelecimento,
	cd_operacao_estoque,
	cd_setor_atendimento,
	cd_local_estoque,
	dt_solicitacao_requisicao
into STRICT	cd_estab_w,
	cd_oper_estoque_w,
	cd_setor_atend_w,
	cd_local_estoque_w,
	dt_solicitacao_requisicao_w
from	requisicao_material
where	nr_requisicao = nr_requisicao_p;

open c01;
loop
fetch c01 into
	cd_material_w,
	qt_dose_w,
	cd_unid_med_consumo_w,
	nr_prescricao_w,
	nr_seq_prescricao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from	item_requisicao_material
	where	nr_requisicao = nr_requisicao_p;

	select	cd_unidade_medida_estoque
	into STRICT	cd_unidade_medida_estoque_w
	from	material
	where	cd_material = cd_material_w;

	qt_material_estoque_w := obter_quantidade_convertida(cd_material_w, qt_dose_w, cd_unid_med_consumo_w, 'UME');

	insert into item_requisicao_material(
		nr_requisicao,
		nr_sequencia,
		cd_estabelecimento,
		cd_material,
		qt_material_requisitada,
		vl_material,
		qt_material_atendida,
		cd_unidade_medida,
		cd_unidade_medida_estoque,
		dt_atualizacao,
		nm_usuario,
		dt_atendimento,
		cd_pessoa_recebe,
		cd_pessoa_atende,
		ie_acao,
		cd_motivo_baixa,
		qt_estoque,
		cd_material_req,
		ds_observacao,
		ie_geracao)
	values (	nr_requisicao_p,
		nr_sequencia_w,
		cd_estab_w,
		cd_material_w,
		qt_dose_w,
		0,
		0,
		cd_unid_med_consumo_w,
		cd_unidade_medida_estoque_w,
		clock_timestamp(),
		nm_usuario_p,
		null,
		null,
		null,
		'1',
		0,
		qt_material_estoque_w,
		cd_material_w,
		null,
		null);

	if (coalesce(nr_prescricao_w,0) > 0) then
		begin
		ie_gerou_kit_w := 'N';
		open c02;
		loop
		fetch c02 into
			cd_material_ww,
			cd_unidade_medida_consumo_ww,
			qt_material_requisitada_ww,
			cd_kit_material_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			select	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_sequencia_ww
			from	item_requisicao_material
			where	nr_requisicao = nr_requisicao_p;

			cd_unidade_medida_estoque_ww	:= substr(obter_dados_material_estab(cd_material_ww, cd_estab_w, 'UME'),1,30);
			qt_material_estoque_ww		:= obter_quantidade_convertida(cd_material_ww, qt_material_requisitada_ww, cd_unidade_medida_consumo_ww,'UME');

			insert into item_requisicao_material(
				nr_requisicao,
				nr_sequencia,
				cd_estabelecimento,
				cd_material,
				qt_material_requisitada,
				vl_material,
				dt_atualizacao,
				nm_usuario,
				cd_unidade_medida,
				cd_motivo_baixa,
				qt_estoque,
				cd_unidade_medida_estoque,
				cd_material_req,
				ie_geracao,
				cd_kit_material)
			values (	nr_requisicao_p,
				nr_sequencia_ww,
				cd_estab_w,
				cd_material_ww,
				qt_material_requisitada_ww,
				0,
				clock_timestamp(),
				nm_usuario_p,
				cd_unidade_medida_consumo_ww,
				0,
				qt_material_estoque_ww,
				cd_unidade_medida_estoque_ww,
				cd_material_ww,
				'S',
				cd_kit_material_w);

			ie_gerou_kit_w := 'S';
			end;
		end loop;
		close c02;

		if (ie_gerou_kit_w = 'S') then
			begin
			/*identifica que o item é um kit e já foi desdobrado na liberação da requisição*/

			update	item_requisicao_material
			set	ie_geracao	= 'D'
			where	nr_requisicao	= nr_requisicao_p
			and	nr_sequencia	= nr_sequencia_w;
			end;
		end if;
		end;
	end if;
	end;
end loop;
close c01;

select	nextval('requisicao_ordem_prod_seq')
into STRICT	nr_seq_req_prod_w
;

insert into requisicao_ordem_prod(
	nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	nr_requisicao,
	nr_seq_ordem_prod)
values (	nr_seq_req_prod_w,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	nr_requisicao_p,
	nr_seq_ordem_p);

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_gerar_itens_ressup_ordem ( nr_requisicao_p bigint, nr_seq_ordem_p bigint, nm_usuario_p text) FROM PUBLIC;

