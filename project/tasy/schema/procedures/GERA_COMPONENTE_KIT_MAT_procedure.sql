-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gera_componente_kit_mat ( cd_kit_material_P bigint, nr_seq_kit_estoque_p bigint, ie_baixa_estoque_p text, ie_desconsidera_param_81_p text, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE

			 
nr_sequencia_w		bigint;
nr_seq_item_kit_w		bigint;
cd_material_w		integer;
qt_material_w		double precision;
qt_diferenca_w		double precision;
qt_total_cadastro_w	double precision;
qt_mat_existente_w		double precision;
qt_estoque_w		double precision;
cd_medico_w		varchar(10);
cd_estabelecimento_w	smallint;
cd_local_estoque_w	integer;
cd_material_ssaldo_w	varchar(255);
ie_disp_comp_kit_estoque_w	varchar(1);
ie_sem_estoque_w		varchar(1);
ie_baixa_estoque_w	varchar(1);
ie_consistir_w		varchar(1);
ds_erro_w		varchar(255);
qt_existe_barras_w		bigint;
cd_convenio_w		integer;
ie_sexo_w		varchar(1);
ie_tipo_convenio_w	smallint;
cd_unidade_medida_estoque_w	unidade_medida.cd_unidade_medida%type;

/* Obriga a leitura de barras do medicamento */
 
ie_obriga_barras_w		varchar(1) := 'N';
cd_mat_obriga_barras_w	varchar(255);

qt_quebra_mensagem_w	integer  := 120;

C01 CURSOR FOR 
SELECT	cd_material, 
		qt_material, 
		ie_baixa_estoque, 
		nr_sequencia 
from	componente_kit 
where	cd_kit_material = cd_kit_material_p 
and		ie_situacao = 'A' 
and (coalesce(cd_medico_w,'X') = coalesce(cd_medico, coalesce(cd_medico_w,'X'))) 
and (coalesce(cd_convenio_w, 0) = coalesce(cd_convenio, coalesce(cd_convenio_w, 0))) 
and (coalesce(ie_tipo_convenio_w, 0) = coalesce(ie_tipo_convenio, coalesce(ie_tipo_convenio_w, 0))) 
and (coalesce(ie_sexo_w, 'X') = coalesce(ie_sexo, coalesce(ie_sexo, 'X'))) 
and (ie_baixa_estoque = ie_baixa_estoque_p or ie_baixa_estoque_p = 'A') 
and		((coalesce(cd_estab_regra::text, '') = '') or (cd_estab_regra = cd_estabelecimento_w)) 
and 	substr(obter_se_utiliza_comp_kit(cd_kit_material,nr_sequencia, CASE WHEN cd_medico_w='X' THEN null  ELSE cd_medico_w END , 0),1,1) = 'S';


BEGIN 
 
select	coalesce(max(cd_medico), 'X'), 
	coalesce(max(cd_estabelecimento),0), 
	coalesce(max(cd_local_estoque),0), 
	coalesce(max(cd_convenio), 0), 
	coalesce(max(ie_tipo_convenio), 0), 
	coalesce(max(ie_sexo), 'X') 
into STRICT	cd_medico_w, 
	cd_estabelecimento_w, 
	cd_local_estoque_w, 
	cd_convenio_w, 
	ie_tipo_convenio_w, 
	ie_sexo_w 
from	kit_estoque 
where	nr_sequencia = nr_seq_kit_estoque_p;
 
ie_disp_comp_kit_estoque_w		:= 'N';
 
if (cd_estabelecimento_w > 0) and (cd_local_estoque_w > 0) then 
	select	coalesce(max(ie_disp_comp_kit_estoque), 'N') 
	into STRICT	ie_disp_comp_kit_estoque_w 
	from	parametro_estoque 
	where	cd_estabelecimento = cd_estabelecimento_w;
end if;
 
if (ie_desconsidera_param_81_p <> 'S') then 
	ie_consistir_w := coalesce(Obter_Valor_Param_Usuario(143, 81, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w), 'N');
else 
	ie_consistir_w := 'N';
end if;
 
cd_material_ssaldo_w	:= '';
cd_mat_obriga_barras_w	:= '';
 
open C01;
loop 
fetch	C01 into 
	cd_material_w, 
	qt_material_w, 
	ie_baixa_estoque_w, 
	nr_seq_item_kit_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	ie_sem_estoque_w	:= 'N';
	ie_obriga_barras_w	:= 'N';
	 
	select	coalesce(sum(qt_material),0) 
	into STRICT	qt_mat_existente_w 
	from	kit_estoque_comp 
	where	nr_seq_kit_estoque = nr_seq_kit_estoque_p 
	and	nr_seq_item_kit	  = nr_seq_item_kit_w;
	--and	(cd_material	= cd_material_w);-- or verifica_material_similar(cd_material,cd_material_w) = 'S'); 
	 
	select	coalesce(sum(qt_material),0) 
	into STRICT	qt_total_cadastro_w 
	from	componente_kit 
	where	cd_kit_material = cd_kit_material_p 
	and	ie_situacao = 'A' 
	AND (coalesce(cd_medico_w,'X') = coalesce(cd_medico, coalesce(cd_medico_w,'X'))) 
	and (ie_baixa_estoque = ie_baixa_estoque_p or ie_baixa_estoque_p = 'A') 
	and	nr_sequencia	 = nr_seq_item_kit_w 
	and	((coalesce(cd_estab_regra::text, '') = '') or (cd_estab_regra = cd_estabelecimento_w));
	--and	(cd_material	= cd_material_w);-- or verifica_material_similar(cd_material,cd_material_w) = 'S'); 
	 
	 
	qt_diferenca_w := qt_total_cadastro_w - qt_mat_existente_w;
		 
	select	count(*) 
	into STRICT	qt_existe_barras_w 
	from	kit_estoque_comp 
	where	nr_seq_kit_estoque 	= nr_seq_kit_estoque_p 
--	and	(cd_material	= cd_material_w or verifica_material_similar(cd_material,cd_material_w) = 'S') 
	and	nr_seq_item_kit	 = nr_seq_item_kit_w 
	and	ie_gerado_barras	= 'S';
	 
	if (qt_diferenca_w > 0) then 
		begin 
		if (ie_consistir_w = 'S') and (ie_disp_comp_kit_estoque_w = 'S') and (ie_baixa_estoque_w = 'S') then 
			begin 
			cd_unidade_medida_estoque_w := substr(obter_dados_material_estab(cd_material_w, cd_estabelecimento_w, 'UME'),1,30);
 
			qt_estoque_w	:= obter_saldo_disp_estoque( 
						cd_estabelecimento_w, 
						cd_material_w, 
						cd_local_estoque_w, 
						trunc(clock_timestamp(),'mm'));
						 
			qt_estoque_w	:= obter_quantidade_convertida(cd_material_w, qt_estoque_w, cd_unidade_medida_estoque_w, 'UMC');
						 
			if (qt_estoque_w < qt_material_w) then 
				ie_sem_estoque_w	:= 'S';
				cd_material_ssaldo_w	:= substr(cd_material_ssaldo_w || cd_material_w || chr(13) || chr(10),1,255);
			end if;
			end;
		end if;
 
		/* Obriga a leitura do medicamento por barras conforme Regras de leitura do barras do material */
 
		select	substr(obter_se_leitura_barras(cd_estabelecimento_w, cd_material_w, 143),1,1) ie_obriga_barras 
		into STRICT	ie_obriga_barras_w 
		;
 
		if (ie_obriga_barras_w = 'S') then /* 143 - Função Administração de Estoques ( Montagem e Registro KIT ) */
 
			begin 
			/* Realiza a quebra da mensagem no MessageDLG, a cada 120 caracteres pula linha */
 
			if (coalesce(cd_mat_obriga_barras_w, 'X') <> 'X') and (length(cd_mat_obriga_barras_w) < qt_quebra_mensagem_w) then 
				cd_mat_obriga_barras_w := cd_mat_obriga_barras_w || ' - ';
 
			else if (coalesce(cd_mat_obriga_barras_w, 'X') <> 'X') and (length(cd_mat_obriga_barras_w) > qt_quebra_mensagem_w) then 
				qt_quebra_mensagem_w := qt_quebra_mensagem_w + 120;
				cd_mat_obriga_barras_w := cd_mat_obriga_barras_w || chr(13) || chr(10);
			   end if;
			end if;
 
			cd_mat_obriga_barras_w	:= cd_mat_obriga_barras_w || cd_material_w;
 
			end;
		end if;
 
		/*Se não houve nenhum item consistido/gerado por barras, gera todos os kits*/
 
		if (qt_existe_barras_w = 0) then 
			begin 
			if (qt_material_w > 0) and (ie_sem_estoque_w = 'N') and (ie_obriga_barras_w = 'N') then 
				begin 
				select	coalesce(max(nr_sequencia),0) + 1 
				into STRICT	nr_sequencia_w 
				from	kit_estoque_comp 
				where	nr_seq_kit_estoque = nr_seq_kit_estoque_p;
			 
				insert into kit_estoque_comp( 
					nr_seq_kit_estoque, 
					nr_sequencia, 
					cd_material, 
					dt_atualizacao, 
					nm_usuario, 
					qt_material, 
					ie_gerado_barras, 
					nr_seq_item_kit) 
				values (	nr_seq_kit_estoque_p, 
					nr_sequencia_w, 
					cd_material_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					qt_material_w, 
					'N', 
					nr_seq_item_kit_w);
				end;
			end if;
			end;
		else 
			begin 
			qt_material_w	:= abs(qt_total_cadastro_w - qt_mat_existente_w);
			if (qt_material_w > 0) and (ie_sem_estoque_w = 'N') and (ie_obriga_barras_w = 'N') then 
				begin 
				select	coalesce(max(nr_sequencia),0) + 1 
				into STRICT	nr_sequencia_w 
				from	kit_estoque_comp 
				where	nr_seq_kit_estoque = nr_seq_kit_estoque_p;
			 
				insert into kit_estoque_comp( 
					nr_seq_kit_estoque, 
					nr_sequencia, 
					cd_material, 
					dt_atualizacao, 
					nm_usuario, 
					qt_material, 
					ie_gerado_barras, 
					nr_seq_item_kit) 
				values (	nr_seq_kit_estoque_p, 
					nr_sequencia_w, 
					cd_material_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					qt_material_w, 
					'N', 
					nr_seq_item_kit_w);
				end;
			end if;
			end;
		end if;
		end;
	end if;
	end;
end loop;
close C01;
 
commit;
 
if	((coalesce(cd_material_ssaldo_w, 'X') <> 'X') or (coalesce(cd_mat_obriga_barras_w, 'X') <> 'X')) then 
	begin 
	if (coalesce(cd_mat_obriga_barras_w, 'X') <> 'X') then 
		ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(279622) || chr(13) || chr(10) || 
					cd_mat_obriga_barras_w || chr(13) || chr(10);
	end if;
	if (coalesce(cd_material_ssaldo_w, 'X') <> 'X') then 
		ds_erro_w := substr(ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(279625) || chr(13) || chr(10) || 
					cd_material_ssaldo_w || chr(13) || chr(10) ,1,255);
	end if;
 
	ds_erro_p	:= substr(ds_erro_w,1,255);
	end;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gera_componente_kit_mat ( cd_kit_material_P bigint, nr_seq_kit_estoque_p bigint, ie_baixa_estoque_p text, ie_desconsidera_param_81_p text, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

