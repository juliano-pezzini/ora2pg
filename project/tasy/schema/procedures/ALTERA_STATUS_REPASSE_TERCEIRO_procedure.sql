-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE altera_status_repasse_terceiro (nr_repasse_terceiro_p bigint, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE


ie_status_w		varchar(01);
ie_novo_status_w	varchar(01);
ie_titulo_w		smallint;
ie_calcular_item_w	varchar(1);
cd_estabelecimento_w	bigint;
vl_repasse_w		double precision;
vl_piso_repasse_w	double precision;
nr_sequencia_item_w	bigint;
cont_w			bigint;
nr_seq_terceiro_w	bigint;
nr_seq_tipo_w		bigint;
ie_item_repasse_w	varchar(1);
ds_tipo_repasse_w	varchar(255);
dt_mesano_referencia_w repasse_terceiro.dt_mesano_referencia%type;

vl_piso_rep_medico_w	terceiro_pessoa_fisica.vl_piso_rep_medico%type;
cd_medico_terc_pf_w	terceiro_pessoa_fisica.cd_pessoa_fisica%type;

vl_proc_rep_terc_w	double precision;
vl_mat_rep_terc_w	double precision;

ie_inseriu_w	varchar(1);

terceiro_pf CURSOR FOR
SELECT	cd_pessoa_fisica cd_medico,
	coalesce(vl_piso_rep_medico, 0) vl_piso_rep_medico
from	terceiro_pessoa_fisica
where	nr_seq_terceiro = nr_seq_terceiro_w
and (
	clock_timestamp() between dt_inicio_vigencia and dt_fim_vigencia
	or (coalesce(dt_fim_vigencia::text, '') = '' and clock_timestamp() >= dt_inicio_vigencia)
	or (coalesce(dt_inicio_vigencia::text, '') = '' and clock_timestamp() <= dt_fim_vigencia)
	or (coalesce(dt_inicio_vigencia::text, '') = '' and coalesce(dt_fim_vigencia::text, '') = '')
);

proc_rep_terceiro CURSOR FOR
SELECT	coalesce(vl_liberado, 0) 	vl_liberado
from	procedimento_repasse
where	cd_medico 		= cd_medico_terc_pf_w
and	nr_repasse_terceiro 	= nr_repasse_terceiro_p;

mat_rep_terceiro CURSOR FOR
SELECT	coalesce(vl_liberado, 0) 	vl_liberado
from	material_repasse
where	cd_medico 		= cd_medico_terc_pf_w
and	nr_repasse_terceiro 	= nr_repasse_terceiro_p;
BEGIN

select	ie_status,
	cd_estabelecimento,
	nr_seq_terceiro,
	nr_seq_tipo,
	dt_mesano_referencia
into STRICT	ie_status_w,
	cd_estabelecimento_w,
	nr_seq_terceiro_w,
	nr_seq_tipo_w,
	dt_mesano_referencia_w
from	repasse_terceiro
where	nr_repasse_terceiro	= nr_repasse_terceiro_p;

select	coalesce(max(a.ie_item_repasse),'S'),
	max(ds_tipo_repasse)
into STRICT	ie_item_repasse_w,
	ds_tipo_repasse_w
from	tipo_repasse a
where	a.nr_sequencia	= nr_seq_tipo_w;

if (ie_status_w		= 'A') then
	ie_novo_status_w	:= 'F';
else
	select count(*)
	into STRICT	ie_titulo_w
	from 	titulo_pagar
	where 	nr_repasse_terceiro = nr_repasse_terceiro_p;

	if (ie_titulo_w > 0) then
		/* 
			Existe titulo gerado para este repasse.Repasse nao pode ser aberto!
		*/
		CALL wheb_mensagem_pck.exibir_mensagem_abort(205618);
	end if;

	select	count(*)
	into STRICT	ie_titulo_w
	from	REPASSE_NOTA_FISCAL
	where	nr_repasse_terceiro = nr_repasse_terceiro_p;

	if (ie_titulo_w > 0) then
		/*
			Existe nota fiscal gerada para este repasse.Repasse nao pode ser aberto!
		*/
		CALL wheb_mensagem_pck.exibir_mensagem_abort(205619);
	end if;

	ie_novo_status_w	:= 'A';
end if;

update	repasse_terceiro
set	ie_status		= ie_novo_status_w,
	nm_usuario		= nm_usuario_p,
	dt_atualizacao		= clock_timestamp()
where	nr_repasse_terceiro	= nr_repasse_terceiro_p;

ie_calcular_item_w := obter_param_usuario(89, 57, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_calcular_item_w);

if (ie_novo_status_w = 'F') and (ie_calcular_item_w = 'F') and (coalesce(ie_item_repasse_w,'S') = 'S') then
	CALL Calcular_item_repasse(nr_repasse_terceiro_p, nm_usuario_p);
end if;

if (ie_status_w		= 'A') then
	CALL Gerar_Repasse_Producao_Periodo(nr_repasse_terceiro_p,nm_usuario_p);
end if;
--	dsantos em 11/01/11 OS 270260
select	coalesce(obter_valor_repasse(nr_repasse_terceiro_p, 'CVP'),0)
into STRICT	vl_repasse_w
;

select	coalesce(a.vl_piso_repasse,0)
into STRICT	vl_piso_repasse_w
from	terceiro a
where	a.nr_sequencia	= nr_seq_terceiro_w;

if coalesce(vl_piso_repasse_w, 0) = 0 then
  begin
    select  coalesce(t.vl_piso, 0)
    into STRICT    vl_piso_repasse_w
    from    terceiro_valor_piso t
    where   t.nr_seq_terceiro = nr_seq_terceiro_w
    and (
	    (dt_mesano_referencia_w between t.dt_vigencial_inicial and t.dt_vigencia_final)
	    or (coalesce(t.dt_vigencia_final::text, '') = '' and dt_mesano_referencia_w >= t.dt_vigencial_inicial)
	    or (coalesce(t.dt_vigencial_inicial::text, '') = '' and dt_mesano_referencia_w <= t.dt_vigencia_final)
	    or (coalesce(t.dt_vigencial_inicial::text, '') = '' and coalesce(t.dt_vigencia_final::text, '') = '')
    );
  exception
    when others then
      vl_piso_repasse_w := 0;
  end;
end if;

ie_inseriu_w	:= 'N';
if (vl_piso_repasse_w = 0) and (coalesce(ie_item_repasse_w,'S') = 'S') then
	
	for terceiro in terceiro_pf loop
	
		vl_piso_rep_medico_w 	:= terceiro.vl_piso_rep_medico;
		cd_medico_terc_pf_w	:= terceiro.cd_medico;
		
		if	(vl_piso_rep_medico_w IS NOT NULL AND vl_piso_rep_medico_w::text <> '') and vl_piso_rep_medico_w > 0 then
		
			vl_proc_rep_terc_w := 0;
			vl_mat_rep_terc_w := 0;
			
			for procedimento in proc_rep_terceiro loop
				vl_proc_rep_terc_w 	:= vl_proc_rep_terc_w + procedimento.vl_liberado;
			end loop;
			
			for material in mat_rep_terceiro loop
				vl_mat_rep_terc_w 	:= vl_mat_rep_terc_w + material.vl_liberado;
			end loop;
			
			if (vl_proc_rep_terc_w + vl_mat_rep_terc_w) < (vl_piso_rep_medico_w) then
				vl_repasse_w := vl_piso_rep_medico_w - (vl_proc_rep_terc_w + vl_mat_rep_terc_w);
						
				select	coalesce(max(nr_sequencia_item),0) + 1
				into STRICT	nr_sequencia_item_w
				from	repasse_terceiro_item
				where	nr_repasse_terceiro	= nr_repasse_terceiro_p;

				insert into repasse_terceiro_item(nr_repasse_terceiro,
					nr_sequencia_item,
					vl_repasse,
					dt_atualizacao,
					nm_usuario,
					nr_lote_contabil,
					ds_observacao,
					dt_lancamento,
					nr_seq_terceiro,
					nr_sequencia)
				SELECT	nr_repasse_terceiro_p,
					nr_sequencia_item_w,
					vl_repasse_w,
					clock_timestamp(),
					nm_usuario_p,
					0,
					substr(wheb_mensagem_pck.get_texto(304528,'VL_PISO_REPASSE=' || vl_piso_rep_medico_w),1,255),
					clock_timestamp(),
					nr_seq_terceiro_w,
					nextval('repasse_terceiro_item_seq')
				;
				
				ie_inseriu_w	:= 'S';
				
			end if;
		end if;
	
	end loop;
	
	select	count(*)
	into STRICT	cont_w
	from	repasse_terceiro_venc
	where	nr_repasse_terceiro	= nr_repasse_terceiro_p;

	if (cont_w > 0) and (ie_inseriu_w = 'S') then	
		CALL gerar_venc_repasse(nr_repasse_terceiro_p, 'S', nm_usuario_p,'N');
	end if;
	
elsif	((vl_repasse_w < vl_piso_repasse_w) and (vl_piso_repasse_w > 0) and (coalesce(ie_item_repasse_w,'S') = 'S')) then

	select	coalesce(max(nr_sequencia_item),0) + 1
	into STRICT	nr_sequencia_item_w
	from	repasse_terceiro_item
	where	nr_repasse_terceiro	= nr_repasse_terceiro_p;

	insert into repasse_terceiro_item(nr_repasse_terceiro,
		nr_sequencia_item,
		vl_repasse,
		dt_atualizacao,
		nm_usuario,
		nr_lote_contabil,
		ds_observacao,
		dt_lancamento,
		nr_seq_terceiro,
		nr_sequencia)
	SELECT	nr_repasse_terceiro_p,
		nr_sequencia_item_w,
		vl_piso_repasse_w - vl_repasse_w,
		clock_timestamp(),
		nm_usuario_p,
		0,
		substr(wheb_mensagem_pck.get_texto(304528,'VL_PISO_REPASSE=' || vl_piso_repasse_w),1,255),
		clock_timestamp(),
		nr_seq_terceiro_w,
		nextval('repasse_terceiro_item_seq')
	;
	
	select	count(*)
	into STRICT	cont_w
	from	repasse_terceiro_venc
	where	nr_repasse_terceiro	= nr_repasse_terceiro_p;

	if (cont_w > 0) then	
		CALL gerar_venc_repasse(nr_repasse_terceiro_p, 'S', nm_usuario_p,'N');
	end if;
	
	--	dsantos em 11/01/11 OS 270260 FIM
end if;

if (coalesce(ie_commit_p,'S') <> 'N') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE altera_status_repasse_terceiro (nr_repasse_terceiro_p bigint, nm_usuario_p text, ie_commit_p text) FROM PUBLIC;

