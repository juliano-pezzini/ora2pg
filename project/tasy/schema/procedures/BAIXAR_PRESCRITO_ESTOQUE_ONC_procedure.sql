-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixar_prescrito_estoque_onc (nr_sequencia_p can_ordem_item_prescr.nr_sequencia%type) AS $body$
DECLARE


dt_conta_w timestamp;
cd_local_estoque_w smallint;
nr_seq_cabine_w bigint;
cd_estabelecimento_w smallint;
dt_inicio_preparo_w	timestamp;
nr_seq_tipo_baixa_w	bigint;
cd_oper_perda_etq_w		smallint;
cd_oper_consumo_consig_w integer;
cd_operacao_estoque_w smallint;
ds_lote_fornec_w material_lote_fornec.ds_lote_fornec%type;
dt_mesano_w timestamp;
ie_consignado_w varchar(1);
cd_cgc_fornec_w varchar(14);
ie_lote_consignado_w varchar(1);
dt_validade_w material_lote_fornec.dt_validade%type;
material_atend_paciente_seq_w material_atend_paciente.nr_sequencia%type;
ie_estoque_w varchar(1);
ds_observacao_w varchar(255);
nr_seq_atepacu_w bigint;
dt_entrada_unidade_w timestamp;
ie_baixa_estoq_pac_w	varchar(1);
ie_atualiza_estoque_overfill_w varchar(1);
cd_baixa_overfill_w bigint;
cd_baixa_sobra_w bigint;

co_overfill constant varchar(1) := 'O';
co_sobra constant varchar(1) := 'S';
co_situacao_ativo varchar(1) := 'A';

itens_manipulados CURSOR FOR
SELECT      mat.cd_material,
            mat.cd_unidade_medida_real,
            mat.qt_dose_real,
            mat.nr_seq_ordem,
            prescricao.cd_setor_atendimento,
            coalesce(ordem.nr_atendimento, prescricao.nr_atendimento) nr_atendimento,
            prescricao.nr_prescricao,
            mat.nr_seq_lote_fornec,
            mat.ie_sobra_overfill,
            material.cd_material_estoque,
            item.nr_seq_prescricao
from        can_ordem_prod_mat mat
inner join  material on mat.cd_material = material.cd_material
inner join  can_ordem_prod ordem on mat.nr_seq_ordem = ordem.nr_sequencia
inner join  can_ordem_item_prescr item on mat.nr_seq_item_prescr = item.nr_sequencia
inner join  prescr_medica prescricao on prescricao.nr_prescricao = ordem.nr_prescricao
where (mat.nr_seq_item_prescr = nr_sequencia_p and coalesce(mat.nr_seq_kit::text, '') = '');


BEGIN
    cd_baixa_overfill_w := obter_param_usuario(3130, 395, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, cd_baixa_overfill_w);
    cd_baixa_sobra_w := obter_param_usuario(3130, 509, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, cd_baixa_sobra_w);

    select      max(cabine.cd_local_estoque),
                max(etapa.nr_seq_cabine),
                max(ordem.cd_estabelecimento),
                max(ordem.dt_inicio_preparo),
                max(cabine.nr_seq_tipo_baixa),
                max(cabine.cd_oper_perda_etq),
                max(cabine.cd_oper_consumo_consig)
    into STRICT	    cd_local_estoque_w,
                nr_seq_cabine_w,
                cd_estabelecimento_w,
                dt_inicio_preparo_w,
                nr_seq_tipo_baixa_w,
                cd_oper_perda_etq_w,
                cd_oper_consumo_consig_w
    from        can_ordem_item_prescr item
    inner join  can_ordem_prod ordem on item.nr_seq_ordem = ordem.nr_sequencia
    inner join  far_etapa_producao etapa on ordem.nr_seq_etapa_prod = etapa.nr_sequencia
    inner join  far_cabine_seg_biol cabine on etapa.nr_seq_cabine = cabine.nr_sequencia
    where       item.nr_sequencia = nr_sequencia_p;

    -- nota de transferencia
    select      coalesce(max(nota_item.cd_local_estoque), cd_local_estoque_w)
    into STRICT        cd_local_estoque_w
    from        can_ordem_item_prescr item
    inner join  can_ordem_prod ordem on item.nr_seq_ordem = ordem.nr_sequencia
    inner join  transf_ordem_prod transf on ordem.nr_sequencia = transf.nr_seq_ordem_prod
    inner join  nota_fiscal on transf.nr_ordem_compra = nota_fiscal.nr_ordem_compra
    inner join  nota_fiscal_item nota_item on transf.nr_sequencia = nota_item.nr_sequencia
    where       item.nr_sequencia = nr_sequencia_p
    and         obter_se_nota_entrada_saida(nota_fiscal.nr_sequencia) = 'E'
    and         nota_item.cd_material = item.cd_material;

    for material in itens_manipulados loop
        select  obter_se_baixa_estoque_pac(material.cd_setor_atendimento,
                    material.cd_material,
                    material.nr_seq_ordem,
                    nr_seq_cabine_w)
        into STRICT    ie_baixa_estoq_pac_w
;

        -- left and over validation
        ie_atualiza_estoque_overfill_w := 'S';
        if (material.ie_sobra_overfill in (co_overfill, co_sobra)) then
            begin
                select 	max(ie_atualiza_estoque)
                into STRICT   	ie_atualiza_estoque_overfill_w
                from   	tipo_baixa_prescricao
                where  	ie_prescricao_devolucao = 'P' -- (P) prescricao (D) devolucao
                and     ie_situacao = co_situacao_ativo
                and		((cd_tipo_baixa = cd_baixa_overfill_w and material.ie_sobra_overfill = co_overfill)
                        or (cd_tipo_baixa = cd_baixa_sobra_w and material.ie_sobra_overfill = co_sobra));
            exception when no_data_found then
                ie_atualiza_estoque_overfill_w := 'N';
            end;
        end if;

        if (ie_baixa_estoq_pac_w = 'S' and ie_atualiza_estoque_overfill_w = 'S') then
            -- Baixar item prescrito - ordem quimioterapia
            ds_observacao_w := substr(obter_texto_dic_objeto(1167202, wheb_usuario_pck.get_nr_seq_idioma, null) || material.nr_seq_ordem, 1, 255);
            if (coalesce(material.ie_sobra_overfill, 'N') = 'S') then
                -- Dispensacao gerada via Sobra
                ds_observacao_w := substr(ds_observacao_w || ' - ' || obter_texto_dic_objeto(290535, wheb_usuario_pck.get_nr_seq_idioma, null), 1, 255);
            elsif (coalesce(material.ie_sobra_overfill, 'N') = 'O') then
                -- Dispensacao gerada via Overfill
                ds_observacao_w := substr(ds_observacao_w || ' - ' || obter_texto_dic_objeto(290536, wheb_usuario_pck.get_nr_seq_idioma, null), 1, 255);
            end if;

            dt_mesano_w := trunc(clock_timestamp(), 'mm');

            select	coalesce(max(nr_seq_interno),0)
            into STRICT	nr_seq_atepacu_w
            from	atend_paciente_unidade
            where	nr_atendimento		    = material.nr_atendimento
            and	    cd_setor_atendimento	= material.cd_setor_atendimento;

            select	coalesce(max(dt_entrada_unidade), clock_timestamp())
            into STRICT	dt_entrada_unidade_w
            from 	atend_paciente_unidade
            where 	nr_seq_interno = nr_seq_atepacu_w;

            select	coalesce(max('S'), 'N')
            into STRICT	ie_lote_consignado_w
            from	fornecedor_mat_consig_lote
            where	cd_estabelecimento = cd_estabelecimento_w
            and	    cd_local_estoque = cd_local_estoque_w
            and	    cd_material = coalesce(material.cd_material_estoque, material.cd_material)
            and	    dt_mesano_referencia = dt_mesano_w
            and	    nr_seq_lote = material.nr_seq_lote_fornec;

            ie_consignado_w := obter_se_mat_consignado(material.cd_material);

            -- fornecedor
            cd_cgc_fornec_w := null;
            ds_lote_fornec_w := null;
            dt_validade_w := null;

            if (ie_consignado_w = '1') or
                (ie_consignado_w = '2' AND ie_lote_consignado_w = 'S') then
                select	cd_cgc_fornec,
                        ds_lote_fornec,
                        dt_validade
                into STRICT	cd_cgc_fornec_w,
                        ds_lote_fornec_w,
                        dt_validade_w
                from	material_lote_fornec
                where   nr_sequencia = material.nr_seq_lote_fornec;
            end if;

            cd_operacao_estoque_w := null;
            if (cd_cgc_fornec_w IS NOT NULL AND cd_cgc_fornec_w::text <> '') then
                cd_operacao_estoque_w := cd_oper_consumo_consig_w;
            else
                cd_operacao_estoque_w := cd_oper_perda_etq_w;
            end if;

            CALL gerar_prescricao_estoque(
                cd_estabelecimento_w,
                material.nr_atendimento,
                dt_entrada_unidade_w,
                material.cd_material,
                clock_timestamp(),
                '1',
                cd_local_estoque_w,
                material.qt_dose_real,
                material.cd_setor_atendimento,
                material.cd_unidade_medida_real,
                wheb_usuario_pck.get_nm_usuario, 'I',
                material.nr_prescricao,
                material.nr_seq_prescricao,
                null,
                null,
                cd_cgc_fornec_w,
                ds_observacao_w,
                material.nr_seq_lote_fornec,
                null,
                null,
                null,
                null,
                null,
                null);

            insert into dispensacao_item_prescrito(nr_sequencia, dt_atualizacao,
                nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
                nr_prescricao, nr_atendimento,
                nr_seq_ordem, nr_seq_item_prescr,
                cd_material, qt_movimento,
                cd_unidade_medida, dt_movimento,
                nr_seq_lote_fornec,
                ie_desfeito_dispensacao)
            values (nextval('dispensacao_item_prescrito_seq'), clock_timestamp(),
                wheb_usuario_pck.get_nm_usuario, null, null,
                material.nr_prescricao, material.nr_atendimento,
                material.nr_seq_ordem, nr_sequencia_p,
                material.cd_material, material.qt_dose_real,
                material.cd_unidade_medida_real, clock_timestamp(),
                material.nr_seq_lote_fornec,
                'N');
        end if;
    end loop;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixar_prescrito_estoque_onc (nr_sequencia_p can_ordem_item_prescr.nr_sequencia%type) FROM PUBLIC;

