-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_desdobrar_lote_mes ( nr_lote_contabil_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


ds_erro_w			varchar(2000);
nr_sequencia_w			bigint := 0;
dt_movimento_w			timestamp;
cd_estabelecimento_w		integer;
nr_seq_mes_ref_w			bigint;
nr_lote_contabil_w			bigint;
nr_lote_contabil_novo_w		bigint;
cd_empresa_w			integer;
cd_tipo_lote_contabil_w		bigint;
ie_tipo_lote_integrar_w		varchar(01);

c01 CURSOR FOR
SELECT	distinct trunc(dt_movimento,'month')
from	ctb_mes_ref b,
	ctb_movimento a
where	a.nr_lote_contabil 		= nr_lote_contabil_p
and	a.nr_seq_mes_ref		= b.nr_sequencia
and	trunc(a.dt_movimento,'month')	<> b.dt_referencia;


BEGIN

ds_erro_w	:= '';

select 	cd_estabelecimento,
	cd_tipo_lote_contabil
into STRICT	cd_estabelecimento_w,
	cd_tipo_lote_contabil_w
from	lote_contabil
where	nr_lote_contabil = nr_lote_contabil_p;

select	cd_empresa
into STRICT	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento = cd_estabelecimento_w;

select	coalesce(max(obter_valor_param_usuario(923, 47, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N')
into STRICT	ie_tipo_lote_integrar_w
;

/* identificar se existem lan√ßamentos com data diferente do mes de referencia */

select	min(dt_movimento)
into STRICT	dt_movimento_w
from	ctb_movimento a
where	nr_lote_contabil = nr_lote_contabil_p
and	not exists (
	SELECT	1
	from	ctb_mes_ref b
	where	b.dt_referencia = trunc(a.dt_movimento,'month')
	and	(b.dt_abertura IS NOT NULL AND b.dt_abertura::text <> '')
	and	coalesce(b.dt_fechamento::text, '') = ''
	and     b.cd_empresa = cd_empresa_w);


if (dt_movimento_w IS NOT NULL AND dt_movimento_w::text <> '')	then
	ds_erro_w := ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280171) || ' ' ||
		WHEB_MENSAGEM_PCK.get_texto(280172) || chr(13) || chr(10);
else
	open c01;
	loop
	fetch c01 into
		dt_movimento_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		select 	min(nr_sequencia)
		into STRICT	nr_seq_mes_ref_w
		from	ctb_mes_ref
		where	dt_referencia	= dt_movimento_w
		and	cd_empresa = cd_empresa_w;

		nr_lote_contabil_novo_w := ctb_gerar_lote_digitacao(nr_seq_mes_ref_w, cd_estabelecimento_w, nm_usuario_p, nr_lote_contabil_novo_w);

		nr_lote_contabil_w	:= nr_lote_contabil_novo_w;

		update	lote_contabil
		set	nr_lote_origem = nr_lote_contabil_p
		where	nr_lote_contabil = nr_lote_contabil_w;

		update	ctb_movimento
		set	nr_seq_mes_ref	= nr_seq_mes_ref_w,
			nr_lote_contabil	= nr_lote_contabil_w
		where	nr_lote_contabil	= nr_lote_contabil_p
		and	trunc(dt_movimento,'month') = dt_movimento_w;
	end loop;
	close c01;

	if (ie_tipo_lote_integrar_w = 'S') then
		update	lote_contabil
		set	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w,
			dt_integracao		= clock_timestamp()
		where	nr_lote_contabil		= nr_lote_contabil_w;
	end if;
	commit;
end if;

ds_erro_p	:= ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_desdobrar_lote_mes ( nr_lote_contabil_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

