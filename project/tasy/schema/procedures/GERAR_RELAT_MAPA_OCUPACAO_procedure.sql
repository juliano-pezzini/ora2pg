-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE leito AS (
		cd 	varchar(50),
		ds	varchar(10));


CREATE OR REPLACE PROCEDURE gerar_relat_mapa_ocupacao ( cd_estabelecimento_p bigint, nm_usuario_cor_p text, ie_todos_estab_p text ) AS $body$
DECLARE


cd_setor_atendimento_w bigint;
ds_ocup_hosp_w	 setor_atendimento.ds_ocup_hosp%type;
nr_sequencia_w	 bigint;
i	bigint;

cd_setor_atend_w varchar(50);
type leitos is table of leito index by integer;

lista_leitos_w leitos;

C01 CURSOR FOR
SELECT	cd_setor_atendimento cd,
	ds_ocup_hosp ds
from	ocupacao_setores_v
where	ie_ocup_hospitalar = 'S'
and	obter_se_exibe_estab( 		
		cd_estabelecimento_base,
		cd_estabelecimento_p,
		nm_usuario_cor_p,
		ie_todos_estab_p) = 'S'
order by	nr_seq_apresentacao,ds_ocup_hosp,cd_setor_atendimento;

/*Banda Setores*/

C02 CURSOR FOR
	SELECT cd
	from (
		SELECT	' ' || coalesce(a.ds_ocupacao, a.cd_unidade) cd
		from		ocupacao_unidade_v a
		where		a.cd_setor_atendimento = cd_setor_atendimento_w
		order by	a.nr_seq_apresent,a.cd_unidade_basica,a.cd_unidade_compl
		) alias1 LIMIT 32;

/*Banda outras INF*/

C03 CURSOR FOR
	SELECT cd
	from (
		SELECT		substr(' ' || substr(obter_status_leito(a.cd_setor_atendimento, a.cd_unidade_basica, a.cd_unidade_compl, cd_estabelecimento_p,'N'),1,10),1,10) cd
		from		ocupacao_unidade_v a
		where		a.cd_setor_atendimento = cd_setor_atendimento_w
		order by 	a.ds_ocupacao
		) alias3 LIMIT 32;
	

BEGIN

nr_sequencia_w := 1;

delete from w_relat_mapa_ocupacao;
commit;


open C01;
loop
fetch C01 into	
	cd_setor_atendimento_w,
	ds_ocup_hosp_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		i := 1;
		
		for i in 1..32 loop
			begin
			lista_leitos_w[i].cd := '';
			lista_leitos_w[i].ds := '';
			end;
		end loop;
		
		open C02;
		loop
		fetch C02 into	
			cd_setor_atend_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			lista_leitos_w[i].cd := cd_setor_atend_w;
			i := i + 1;
			end;
		end loop;
		close C02;
		
		i := 1;
		
		open C03;
		loop
		fetch C03 into	
			cd_setor_atend_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			lista_leitos_w[i].ds := cd_setor_atend_w;
			i := i + 1;
			end;
		end loop;
		close C03;
		
		insert into w_relat_mapa_ocupacao(
			nr_sequencia,
			nr_seq_banda,
			ds_ocup_hosp,
			vl_coluna_1,
			vl_coluna_2,
			vl_coluna_3,
			vl_coluna_4,
			vl_coluna_5,
			vl_coluna_6,
			vl_coluna_7,
			vl_coluna_8,
			vl_coluna_9,
			vl_coluna_10,
			vl_coluna_11,
			vl_coluna_12,
			vl_coluna_13,
			vl_coluna_14,
			vl_coluna_15,
			vl_coluna_16,
			vl_coluna_17,
			vl_coluna_18,
			vl_coluna_19,
			vl_coluna_20,
			vl_coluna_21,
			vl_coluna_22,
			vl_coluna_23,
			vl_coluna_24,
			vl_coluna_25,
			vl_coluna_26,
			vl_coluna_27,
			vl_coluna_28,
			vl_coluna_29,
			vl_coluna_30,
			vl_coluna_31,
			vl_coluna_32
		) values (
			nr_sequencia_w,
			1,
			ds_ocup_hosp_w,
			lista_leitos_w[1].cd,
			lista_leitos_w[2].cd,
			lista_leitos_w[3].cd,
			lista_leitos_w[4].cd,
			lista_leitos_w[5].cd,
			lista_leitos_w[6].cd,
			lista_leitos_w[7].cd,
			lista_leitos_w[8].cd,
			lista_leitos_w[9].cd,
			lista_leitos_w[10].cd,
			lista_leitos_w[11].cd,
			lista_leitos_w[12].cd,
			lista_leitos_w[13].cd,
			lista_leitos_w[14].cd,
			lista_leitos_w[15].cd,
			lista_leitos_w[16].cd,
			lista_leitos_w[17].cd,
			lista_leitos_w[18].cd,
			lista_leitos_w[19].cd,
			lista_leitos_w[20].cd,
			lista_leitos_w[21].cd,
			lista_leitos_w[22].cd,
			lista_leitos_w[23].cd,
			lista_leitos_w[24].cd,
			lista_leitos_w[25].cd,
			lista_leitos_w[26].cd,
			lista_leitos_w[27].cd,
			lista_leitos_w[28].cd,
			lista_leitos_w[29].cd,
			lista_leitos_w[30].cd,
			lista_leitos_w[31].cd,
			lista_leitos_w[32].cd
		);
		insert into w_relat_mapa_ocupacao(
			nr_sequencia,
			nr_seq_banda,
			ds_ocup_hosp,
			vl_coluna_1,
			vl_coluna_2,
			vl_coluna_3,
			vl_coluna_4,
			vl_coluna_5,
			vl_coluna_6,
			vl_coluna_7,
			vl_coluna_8,
			vl_coluna_9,
			vl_coluna_10,
			vl_coluna_11,
			vl_coluna_12,
			vl_coluna_13,
			vl_coluna_14,
			vl_coluna_15,
			vl_coluna_16,
			vl_coluna_17,
			vl_coluna_18,
			vl_coluna_19,
			vl_coluna_20,
			vl_coluna_21,
			vl_coluna_22,
			vl_coluna_23,
			vl_coluna_24,
			vl_coluna_25,
			vl_coluna_26,
			vl_coluna_27,
			vl_coluna_28,
			vl_coluna_29,
			vl_coluna_30,
			vl_coluna_31,
			vl_coluna_32
		) values (
			nr_sequencia_w,
			2,
			ds_ocup_hosp_w,
			lista_leitos_w[1].ds,
			lista_leitos_w[2].ds,
			lista_leitos_w[3].ds,
			lista_leitos_w[4].ds,
			lista_leitos_w[5].ds,
			lista_leitos_w[6].ds,
			lista_leitos_w[7].ds,
			lista_leitos_w[8].ds,
			lista_leitos_w[9].ds,
			lista_leitos_w[10].ds,
			lista_leitos_w[11].ds,
			lista_leitos_w[12].ds,
			lista_leitos_w[13].ds,
			lista_leitos_w[14].ds,
			lista_leitos_w[15].ds,
			lista_leitos_w[16].ds,
			lista_leitos_w[17].ds,
			lista_leitos_w[18].ds,
			lista_leitos_w[19].ds,
			lista_leitos_w[20].ds,
			lista_leitos_w[21].ds,
			lista_leitos_w[22].ds,
			lista_leitos_w[23].ds,
			lista_leitos_w[24].ds,
			lista_leitos_w[25].ds,
			lista_leitos_w[26].ds,
			lista_leitos_w[27].ds,
			lista_leitos_w[28].ds,
			lista_leitos_w[29].ds,
			lista_leitos_w[30].ds,
			lista_leitos_w[31].ds,
			lista_leitos_w[32].ds
		);
		
		nr_sequencia_w := nr_sequencia_w + 1;
		
	end;
end loop;
close C01;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_relat_mapa_ocupacao ( cd_estabelecimento_p bigint, nm_usuario_cor_p text, ie_todos_estab_p text ) FROM PUBLIC;

