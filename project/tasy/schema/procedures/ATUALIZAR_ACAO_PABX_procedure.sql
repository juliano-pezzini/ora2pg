-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_acao_pabx ( nr_ramal_p bigint, nr_seq_acao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
/* 
NR_SEQ_ACAO_P 
 
1  -  Iniciar higienização 
2  -  Finalizar higienização 
3  -  Chamado Manutenção 
4  -  Manutenção(Início Manutenção) 
5  -  Livre(Conclusão Manutenção) 
 
*/
 
	 
qt_unidade_w		integer;
nr_status_w		integer;
nr_seq_interno_w	bigint;
nr_atendimento_w	bigint;
ie_inconsistencia_w	varchar(5)	:= 'N';
ds_acao_w		varchar(255);
ds_status_atual_w	varchar(255);
dt_atual_w		varchar(30);
cd_paciente_reserva_w	varchar(20);
ie_status_unidade_w	varchar(5);
ie_fim_hig_antes_inicar_hig	varchar(1);
ie_passar_ag_higinizacao_W	varchar(1);

BEGIN
 
dt_atual_w	:= to_char(clock_timestamp(), 'dd/MM/yyyy hh24:mi:ss');
 
select	count(*) qt_unidade, 
	obter_valor_dominio(82, max(ie_status_unidade)) ds_status, 
	max(ie_status_unidade) ie_status_unidade, 
	max(cd_paciente_reserva) cd_paciente_reserva, 
	max(nr_seq_interno) nr_seq_interno, 
	max(nr_atendimento) nr_atendimento, 
	max(to_number(obter_status_leito_ocupacao( 
        (substr(Obter_Status_Isolamento_Ocup(cd_estabelecimento_p, o.nr_atendimento, o.ie_acompanhante, nm_usuario_p),1,1)), 
        substr(obter_classif_etaria(cd_estabelecimento_p,cd_pessoa_fisica,'C'),1,3), 
        ie_sexo, 
        ie_status_unidade, 
        ie_temporario, 
        o.dt_alta_medico, 
        'N', 
        o.nr_atend_alta, 
        o.ie_radiacao, 
        o.ie_interditado_radiacao, 
        null, 
        obter_se_alta_tesouraria2(o.nr_atendimento, o.cd_setor_atendimento, o.cd_unidade_basica, o.cd_unidade_compl), 
        'N'))) nr_status 
into STRICT	qt_unidade_w, 
	ds_status_atual_w, 
	ie_status_unidade_w, 
	cd_paciente_reserva_w, 
	nr_seq_interno_w, 
	nr_atendimento_w, 
	nr_status_w 
from  ocupacao_unidade_v o 
where  o.nr_ramal = nr_ramal_p 
and   ((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_p));
 
--Obter_param_Usuario(44, 294, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_fim_hig_antes_inicar_hig); 
ie_passar_ag_higinizacao_W := Obter_param_Usuario(44, 308, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_passar_ag_higinizacao_W);
ie_fim_hig_antes_inicar_hig := 'N';
 
 
if (qt_unidade_w = 0) then 
	ie_inconsistencia_w := 'S';
	CALL gravar_log_pabx_ger_tel(dt_atual_w, 
				'', 
				nr_ramal_p, 
				nr_seq_acao_p, 
				wheb_mensagem_pck.get_texto(796862) || ' ' || nr_ramal_p, 
				nm_usuario_p);
				 
elsif (qt_unidade_w > 1) then	 
	ie_inconsistencia_w := 'S';
	CALL gravar_log_pabx_ger_tel(dt_atual_w, 
				'', 
				nr_ramal_p, 
				nr_seq_acao_p, 
				wheb_mensagem_pck.get_texto(796863) || ' ' || nr_ramal_p, 
				nm_usuario_p);
				 
else	 
 
	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and (nr_seq_acao_p in (1,2)) then 
		ie_inconsistencia_w := 'S';
		CALL gravar_log_pabx_ger_tel(dt_atual_w, 
					'', 
					nr_ramal_p, 
					nr_seq_acao_p, 
					wheb_mensagem_pck.get_texto(796850), 
					nm_usuario_p);		
	end if;
 
	if (nr_seq_acao_p = 1) and (ie_status_unidade_w = 'H') then 
		ie_inconsistencia_w := 'S';
		 
		CALL gravar_log_pabx_ger_tel(dt_atual_w, 
					'', 
					nr_ramal_p, 
					nr_seq_acao_p, 
					wheb_mensagem_pck.get_texto(796849), 
					nm_usuario_p);		
	end if;
 
	if (nr_seq_acao_p = 2) and (ie_status_unidade_w in ('L','R')) then 
		ie_inconsistencia_w := 'S';
		 
		CALL gravar_log_pabx_ger_tel(dt_atual_w, 
					'', 
					nr_ramal_p, 
					nr_seq_acao_p, 
					wheb_mensagem_pck.get_texto(796851), 
					nm_usuario_p);	
	end if;
	 
	if (nr_seq_acao_p = 3) and (nr_status_w not in (5,6,10,23,1)) then 
		ie_inconsistencia_w := 'S';
		 
		CALL gravar_log_pabx_ger_tel(dt_atual_w, 
					'', 
					nr_ramal_p, 
					nr_seq_acao_p, 
					wheb_mensagem_pck.get_texto(796864) || ': ' || ds_status_atual_w, 
					nm_usuario_p);
	end if;
	 
	if (nr_seq_acao_p = 4) and (nr_status_w not in (5,6,10,25,23)) then	 
		ie_inconsistencia_w := 'S';
		 
		CALL gravar_log_pabx_ger_tel(dt_atual_w, 
					'', 
					nr_ramal_p, 
					nr_seq_acao_p, 
					wheb_mensagem_pck.get_texto(796865) || ': ' || ds_status_atual_w, 
					nm_usuario_p);		
	end if;
	 
	if (nr_seq_acao_p = 5) and (nr_status_w <> 24) then 
		ie_inconsistencia_w := 'S';
		 
		CALL gravar_log_pabx_ger_tel(dt_atual_w, 
					'', 
					nr_ramal_p, 
					nr_seq_acao_p, 
					wheb_mensagem_pck.get_texto(796866) || ': ' || ds_status_atual_w, 
					nm_usuario_p);		
	end if;
 
	if (coalesce(ie_fim_hig_antes_inicar_hig,'S') = 'N') and (nr_seq_acao_p = 2) and (ie_status_unidade_w <> 'H') then 
		ie_inconsistencia_w := 'S';
		 
		CALL gravar_log_pabx_ger_tel(dt_atual_w, 
					'', 
					nr_ramal_p, 
					nr_seq_acao_p, 
					wheb_mensagem_pck.get_texto(796867) || ': ' || ds_status_atual_w,					 
					nm_usuario_p);		
	end if;
	 
	 
	if (ie_inconsistencia_w = 'N') then 
	 
		-- 1  -  Iniciar higienização 
		if (nr_seq_acao_p = 1) then 
			update	unidade_atendimento 
			set	ie_status_unidade	= 'H', 
				dt_higienizacao		 = NULL, 
				dt_inicio_higienizacao	= clock_timestamp(), 
				nm_usuario		= nm_usuario_p 
			where	nr_seq_interno		= nr_seq_interno_w;
				 
				CALL gravar_log_pabx_ger_tel(dt_atual_w, 
					'', 
					nr_ramal_p, 
					nr_seq_acao_p, 
					wheb_mensagem_pck.get_texto(796852), 
					nm_usuario_p);		
		-- 2  -  Finalizar higienização	/	5  -  Livre(Conclusão Manutenção) 
		elsif (nr_seq_acao_p in (2,5)) then 
				if (nr_seq_acao_p = 2) then 
					CALL gravar_log_pabx_ger_tel(dt_atual_w, 
					'', 
					nr_ramal_p, 
					nr_seq_acao_p, 
					wheb_mensagem_pck.get_texto(796853), 
					nm_usuario_p);		
				 
					update	unidade_atendimento 
					set	ie_status_unidade	= CASE WHEN cd_paciente_reserva_w = NULL THEN  'L'  ELSE 'R' END , 
						dt_higienizacao		= clock_timestamp(), 
						dt_inicio_higienizacao	= coalesce(dt_inicio_higienizacao,clock_timestamp()), 
						nm_usuario		= nm_usuario_p 
					where	nr_seq_interno		= nr_seq_interno_w;					
				 
				else 
					gravar_log_pabx_ger_tel(dt_atual_w, 
					'', 
					nr_ramal_p, 
					nr_seq_acao_p, 
					wheb_mensagem_pck.get_texto(796868), 
					nm_usuario_p);		
					 
					update	unidade_atendimento 
					set	ie_status_unidade	= CASE WHEN ie_passar_ag_higinizacao_W='S' THEN  										'G'  ELSE CASE WHEN cd_paciente_reserva_w = NULL THEN  'L'  ELSE 'R' END  END , 
						dt_higienizacao		= clock_timestamp(), 
						dt_inicio_higienizacao	= coalesce(dt_inicio_higienizacao,clock_timestamp()), 
						nm_usuario		= nm_usuario_p 
					where	nr_seq_interno		= nr_seq_interno_w;
				 
				end if;
			 
		-- 3  -  Chamado Manutenção			 
		elsif (nr_seq_acao_p = 3) then 
				CALL gravar_log_pabx_ger_tel(dt_atual_w, 
					'', 
					nr_ramal_p, 
					nr_seq_acao_p, 
					wheb_mensagem_pck.get_texto(796854), 
					nm_usuario_p);
					 
			update	unidade_atendimento 
			set	ie_status_unidade  	= 'C', 
				nm_usuario      	= nm_usuario_p, 
				dt_atualizacao    	= clock_timestamp() 
			where	nr_seq_interno		= nr_seq_interno_w;
		 
		-- 4  -  Manutenção(Início Manutenção)		 
		elsif (nr_seq_acao_p = 4) then 
				CALL gravar_log_pabx_ger_tel(dt_atual_w, 
					'', 
					nr_ramal_p, 
					nr_seq_acao_p, 
					wheb_mensagem_pck.get_texto(796855), 
					nm_usuario_p);
			update	unidade_atendimento 
			set	ie_status_unidade	= 'E', 
				nm_usuario      	= nm_usuario_p, 
				dt_atualizacao    	= clock_timestamp()	 
			where	nr_seq_interno		= nr_seq_interno_w;	
		end if;
	end if;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_acao_pabx ( nr_ramal_p bigint, nr_seq_acao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

