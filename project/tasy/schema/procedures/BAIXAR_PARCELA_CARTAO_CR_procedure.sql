-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixar_parcela_cartao_cr ( nr_seq_parcela_p bigint, dt_baixa_p timestamp, nm_usuario_p text, ie_baixa_p text, ie_despesa_p text, ds_observacao_p text, ie_gerar_movto_banco_p text, ie_commit_p text, vl_conciliado_p bigint, nr_seq_lote_p bigint, nr_seq_conta_banco_p bigint default null) AS $body$
DECLARE

nr_seq_conta_banco_w	bigint;
nr_seq_trans_financ_w	bigint;
nr_sequencia_w		bigint;
nr_seq_movto_w		bigint;
nr_seq_trans_desp_w	bigint;
vl_despesa_w		double precision;
vl_desp_equip_w		double precision;
vl_total_lote_w		double precision;
vl_baixa_w		double precision;
ie_despesa_equip_w	varchar(15);
cd_estabelecimento_w	smallint;


BEGIN 
 
if (nr_seq_parcela_p IS NOT NULL AND nr_seq_parcela_p::text <> '') then 
	 
	if (ie_baixa_p = 'C') then 
		select	somente_numero(obter_valor_bandeira_estab(c.nr_sequencia,b.cd_estabelecimento,'NR_SEQ_CONTA_BANCO')), 
			somente_numero(obter_valor_bandeira_estab(c.nr_sequencia,b.cd_estabelecimento,'NR_SEQ_TRANS_FINANC')), 
			b.nr_sequencia, 
			somente_numero(obter_valor_bandeira_estab(c.nr_sequencia,b.cd_estabelecimento,'NR_SEQ_TRANS_FIN_DESP')), 
			b.cd_estabelecimento 
		into STRICT	nr_seq_conta_banco_w, 
			nr_seq_trans_financ_w, 
			nr_seq_movto_w, 
			nr_seq_trans_desp_w, 
			cd_estabelecimento_w 
		FROM movto_cartao_cr_parcela a, movto_cartao_cr b
LEFT OUTER JOIN bandeira_cartao_cr c ON (b.nr_seq_bandeira = c.nr_sequencia)
WHERE a.nr_seq_movto		= b.nr_sequencia  and a.nr_sequencia		= nr_seq_parcela_p;	
 
	else 
		select	coalesce(d.nr_seq_conta_banco,(obter_valor_bandeira_estab(c.nr_sequencia,b.cd_estabelecimento,'NR_SEQ_CONTA_BANCO'))::numeric ), 
			coalesce(d.nr_seq_trans_fin_baixa,(obter_valor_bandeira_estab(c.nr_sequencia,b.cd_estabelecimento,'NR_SEQ_TRANS_FINANC'))::numeric ), 
			b.nr_sequencia, 
			somente_numero(obter_valor_bandeira_estab(c.nr_sequencia,b.cd_estabelecimento,'NR_SEQ_TRANS_FIN_DESP')), 
			b.cd_estabelecimento 
		into STRICT	nr_seq_conta_banco_w, 
			nr_seq_trans_financ_w, 
			nr_seq_movto_w, 
			nr_seq_trans_desp_w, 
			cd_estabelecimento_w 
		FROM movto_cartao_cr b
LEFT OUTER JOIN bandeira_cartao_cr c ON (b.nr_seq_bandeira = c.nr_sequencia)
, movto_cartao_cr_parcela a
LEFT OUTER JOIN lote_baixa_cartao_cr d ON (a.nr_seq_lote = d.nr_sequencia)
WHERE a.nr_seq_movto		= b.nr_sequencia  and a.nr_sequencia		= nr_seq_parcela_p;
	end if;
 
	select	max(CASE WHEN ie_baixa_p='S' THEN a.vl_saldo_liquido WHEN ie_baixa_p='C' THEN vl_conciliado_p  ELSE 0 END ) 
	into STRICT	vl_baixa_w 
	from	movto_cartao_cr_parcela a 
	where	a.nr_sequencia	= nr_seq_parcela_p;
 
	ie_despesa_equip_w := obter_param_usuario(3020, 47, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_despesa_equip_w);
 
	if (coalesce(ie_despesa_equip_w,'N')	= 'S') then 
 
		if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then 
 
			select	max(a.vl_despesa) 
			into STRICT	vl_despesa_w 
			from	lote_baixa_cartao_cr a 
			where	a.nr_sequencia	= nr_seq_lote_p;
 
			if (coalesce(vl_despesa_w,0)	<> 0) then 
 
				select	sum(vl_lote) 
				into STRICT	vl_total_lote_w 
				from (SELECT	a.vl_saldo_liquido vl_lote 
					from	movto_cartao_cr_parcela a 
					where	a.nr_seq_lote	= nr_seq_lote_p 
					
union all
 
					SELECT	coalesce(a.vl_baixa,0) + coalesce(a.vl_desp_equip,0) vl_lote 
					from	movto_cartao_cr_baixa a 
					where	a.nr_seq_lote	= nr_seq_lote_p) alias5;
 
				vl_desp_equip_w	:= (coalesce(vl_despesa_w,0) * coalesce(vl_baixa_w,0)) / coalesce(vl_total_lote_w,0);
				vl_baixa_w	:= coalesce(vl_baixa_w,0) - coalesce(vl_desp_equip_w,0);
 
			end if;
 
		end if;
 
	end if;
 
	select	nextval('movto_cartao_cr_baixa_seq') 
	into STRICT	nr_sequencia_w 
	;
 
	insert	into movto_cartao_cr_baixa(nr_sequencia, 
		nr_seq_movto, 
		dt_baixa, 
		vl_baixa, 
		nr_seq_conta_banco, 
		nr_seq_trans_financ, 
		ds_observacao, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		nr_seq_parcela, 
		vl_despesa, 
		nr_seq_lote, 
		vl_desp_equip) 
	SELECT	nr_sequencia_w, 
		nr_seq_movto, 
		dt_baixa_p, 
		vl_baixa_w, 
		coalesce(nr_seq_conta_banco_p,nr_seq_conta_banco_w), 
		CASE WHEN ie_baixa_p='S' THEN nr_seq_trans_financ_w WHEN ie_baixa_p='C' THEN nr_seq_trans_financ_w  ELSE null END , 
		--substr('Referente parcela de ' || to_char(dt_parcela) || chr(13) || chr(10) || ds_observacao_p,1,4000), 
		substr(wheb_mensagem_pck.get_texto(303051,'DT_PARCELA='||to_char(dt_parcela)) || chr(13) || chr(10) || ds_observacao_p,1,4000), 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_seq_parcela_p, 
		CASE WHEN ie_despesa_p='S' THEN vl_despesa  ELSE 0 END , 
		nr_seq_lote, 
		vl_desp_equip_w 
	from	movto_cartao_cr_parcela 
	where	nr_sequencia	= nr_seq_parcela_p;
 
	CALL atualiza_repasse_cartao(nr_sequencia_w, nm_usuario_p);
	CALL atualizar_saldo_cartao_cr(nr_seq_movto_w, nm_usuario_p);
 
	if (coalesce(ie_gerar_movto_banco_p,'S') = 'S') then 
		CALL gerar_movto_baixa_cartao(nr_sequencia_w,nm_usuario_p, nr_seq_lote_p);
	end if;
		 
end if;
 
if (ie_commit_p = 'S') then 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixar_parcela_cartao_cr ( nr_seq_parcela_p bigint, dt_baixa_p timestamp, nm_usuario_p text, ie_baixa_p text, ie_despesa_p text, ds_observacao_p text, ie_gerar_movto_banco_p text, ie_commit_p text, vl_conciliado_p bigint, nr_seq_lote_p bigint, nr_seq_conta_banco_p bigint default null) FROM PUBLIC;

