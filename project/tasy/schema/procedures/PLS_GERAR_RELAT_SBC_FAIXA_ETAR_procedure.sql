-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE registro_beneficiarios AS (	nr_seq_segurado bigint, qt_idade bigint,
					nr_seq_titular bigint, cd_sib varchar(20));


CREATE OR REPLACE PROCEDURE pls_gerar_relat_sbc_faixa_etar ( nr_seq_faixa_etaria_p bigint, nr_seq_plano_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_plano_w			bigint;
qt_idade_inicial_w		bigint;
qt_idade_final_w		bigint;
nr_seq_segurado_w		bigint;
qt_idade_w			bigint;
nr_seq_titular_w		bigint;
dt_nascimento_w			timestamp;
nr_vetor_w			bigint;
cd_sib_w			varchar(20);
qt_beneficiarios_w		bigint;

------------------------------------------------------------------
qt_benef_titular_w		bigint;
qt_benef_conjugue_w		bigint;
qt_benef_filho_w		bigint;
qt_benef_entendeado_w		bigint;
qt_benef_pai_mae_w		bigint;
qt_benef_agregados_w		bigint;
qt_total_benef_produto_w	bigint;

type vetor is table of registro_beneficiarios index by integer;
vetor_w				vetor;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_plano
	where (nr_sequencia = nr_seq_plano_p or
		coalesce(nr_seq_plano_p,0) = 0)
	and	ie_tipo_operacao	= 'B'
	order by 	1;

C02 CURSOR FOR
	SELECT	b.qt_idade_inicial,
		b.qt_idade_final
	from	pls_faixa_etaria_item	b,
		pls_faixa_etaria	a
	where	a.nr_sequencia = b.nr_seq_faixa_etaria
	and	a.nr_sequencia = nr_seq_faixa_etaria_p;

C03 CURSOR FOR
	SELECT	b.nr_sequencia,
		c.dt_nascimento,
		b.nr_seq_titular,
		d.cd_sib
	FROM pessoa_fisica c, pls_plano a, pls_segurado b
LEFT OUTER JOIN grau_parentesco d ON (b.nr_seq_parentesco = d.nr_sequencia)
WHERE c.cd_pessoa_fisica	= b.cd_pessoa_fisica and a.nr_sequencia 		= b.nr_seq_plano  and a.nr_sequencia		= nr_seq_plano_w and b.cd_estabelecimento	= cd_estabelecimento_p and coalesce(b.dt_rescisao::text, '') = '' and coalesce(b.dt_cancelamento::text, '') = '';

BEGIN

CALL exec_sql_dinamico(nm_usuario_p,'truncate table w_relat_faixa_etaria');

open C01;
loop
fetch C01 into
	nr_seq_plano_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	vetor_w.delete;

	open c03;
	loop
	fetch c03 into
		nr_seq_segurado_w,
		dt_nascimento_w,
		nr_seq_titular_w,
		cd_sib_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin

		qt_idade_w	:= trunc(months_between(clock_timestamp(), trunc(add_months(dt_nascimento_w,1),'month')) / 12);

		nr_vetor_w	:= vetor_w.count+1;
		vetor_w[nr_vetor_w].nr_seq_segurado	:= nr_seq_segurado_w;
		vetor_w[nr_vetor_w].qt_idade		:= qt_idade_w;
		vetor_w[nr_vetor_w].nr_seq_titular	:= nr_seq_titular_w;
		vetor_w[nr_vetor_w].cd_sib		:= cd_sib_w;

		end;
	end loop;
	close c03;

	qt_benef_titular_w		:= 0;
	qt_benef_conjugue_w		:= 0;
	qt_benef_filho_w		:= 0;
	qt_benef_entendeado_w		:= 0;
	qt_benef_pai_mae_w		:= 0;
	qt_benef_agregados_w		:= 0;
	qt_total_benef_produto_w	:= 0;

	open c02;
	loop
	fetch c02 into
		qt_idade_inicial_w,
		qt_idade_final_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		qt_benef_titular_w		:= 0;
		qt_benef_conjugue_w		:= 0;
		qt_benef_filho_w		:= 0;
		qt_benef_entendeado_w		:= 0;
		qt_benef_pai_mae_w		:= 0;
		qt_benef_agregados_w		:= 0;
		qt_total_benef_produto_w	:= 0;

		for i in 1..vetor_w.count loop
			if (vetor_w[i].qt_idade >= qt_idade_inicial_w) and (vetor_w[i].qt_idade <= qt_idade_final_w) then


				if (vetor_w[i]coalesce(.nr_seq_titular::text, '') = '') then
					qt_benef_titular_w	:= qt_benef_titular_w + 1;
				else
					if (vetor_w[i].cd_sib = 3) then
						qt_benef_conjugue_w	:= qt_benef_conjugue_w + 1;
					elsif (vetor_w[i].cd_sib = 4) then
						qt_benef_filho_w	:= qt_benef_filho_w + 1;
					elsif (vetor_w[i].cd_sib = 6) then
						qt_benef_entendeado_w	:= qt_benef_entendeado_w + 1;
					elsif (vetor_w[i].cd_sib = 8) then
						qt_benef_pai_mae_w	:= qt_benef_pai_mae_w + 1;
					elsif (vetor_w[i].cd_sib = 10) then
						qt_benef_agregados_w	:= qt_benef_agregados_w + 1;
					end if;
				end if;
				qt_total_benef_produto_w	:= qt_total_benef_produto_w + 1;
			end if;
		end loop;

		/*T - Total de cada produto*/

		insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				qt_beneficiarios,nr_seq_plano,ie_tipo_informacao,qt_idade_inicial,qt_idade_final)
		values (	nextval('w_relat_faixa_etaria_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				qt_total_benef_produto_w,nr_seq_plano_w,'T',qt_idade_inicial_w,qt_idade_final_w);

		/*TI - Titular*/

		insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				qt_beneficiarios,nr_seq_plano,ie_tipo_informacao,qt_idade_inicial,qt_idade_final)
		values (	nextval('w_relat_faixa_etaria_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				qt_benef_titular_w,nr_seq_plano_w,'TI',qt_idade_inicial_w,qt_idade_final_w);

		/*C - Cônjuge/Companheiro(a)*/

		insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				qt_beneficiarios,nr_seq_plano,ie_tipo_informacao,qt_idade_inicial,qt_idade_final)
		values (	nextval('w_relat_faixa_etaria_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				qt_benef_conjugue_w,nr_seq_plano_w,'C',qt_idade_inicial_w,qt_idade_final_w);

		/*F - Filho (a)*/

		insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				qt_beneficiarios,nr_seq_plano,ie_tipo_informacao,qt_idade_inicial,qt_idade_final)
		values (	nextval('w_relat_faixa_etaria_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				qt_benef_filho_w,nr_seq_plano_w,'F',qt_idade_inicial_w,qt_idade_final_w);

		/*E - Enteado(a)*/

		insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				qt_beneficiarios,nr_seq_plano,ie_tipo_informacao,qt_idade_inicial,qt_idade_final)
		values (	nextval('w_relat_faixa_etaria_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				qt_benef_entendeado_w,nr_seq_plano_w,'E',qt_idade_inicial_w,qt_idade_final_w);

		/*PM - Pai/Mãe*/

		insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				qt_beneficiarios,nr_seq_plano,ie_tipo_informacao,qt_idade_inicial,qt_idade_final)
		values (	nextval('w_relat_faixa_etaria_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				qt_benef_pai_mae_w,nr_seq_plano_w,'PM',qt_idade_inicial_w,qt_idade_final_w);

		/*AO - Agregado/Outros*/

		insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				qt_beneficiarios,nr_seq_plano,ie_tipo_informacao,qt_idade_inicial,qt_idade_final)
		values (	nextval('w_relat_faixa_etaria_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				qt_benef_agregados_w,nr_seq_plano_w,'AO',qt_idade_inicial_w,qt_idade_final_w);

		end;
	end loop;
	close c02;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_relat_sbc_faixa_etar ( nr_seq_faixa_etaria_p bigint, nr_seq_plano_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

