-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE replicar_diag_autor_conv (nr_sequencia_autor_p bigint, nr_seq_autor_diag_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_atendimento_w		bigint;
nr_seq_agenda_w			    autorizacao_convenio.nr_seq_agenda%type;
nr_seq_agenda_integ_w		bigint;
nr_seq_agenda_consulta_w	autorizacao_convenio.nr_seq_agenda_consulta%type;
nr_seq_paciente_setor_w		bigint;
nr_seq_gestao_w			bigint;
nr_sequencia_autor_w		bigint;
nr_seq_diag_doenca_w		bigint;
nr_seq_autor_diag_w		bigint;

c01 CURSOR FOR
SELECT	a.nr_sequencia
from	autorizacao_convenio a
where	(nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '')
and	a.nr_atendimento		= nr_atendimento_w
and	not exists (SELECT	1
	from	autor_diag_medico x
	where	x.nr_sequencia_autor	= a.nr_sequencia)

union

select	a.nr_sequencia
from	autorizacao_convenio a
where	(nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '')
and	a.nr_seq_agenda			= nr_seq_agenda_w
and	not exists (select	1
	from	autor_diag_medico x
	where	x.nr_sequencia_autor	= a.nr_sequencia)

union

select	a.nr_sequencia
from	autorizacao_convenio a
where	(nr_seq_agenda_integ_w IS NOT NULL AND nr_seq_agenda_integ_w::text <> '')
and	a.nr_seq_age_integ		= nr_seq_agenda_integ_w
and	not exists (select	1
	from	autor_diag_medico x
	where	x.nr_sequencia_autor	= a.nr_sequencia)

union

select	a.nr_sequencia
from	autorizacao_convenio a
where	(nr_seq_agenda_consulta_w IS NOT NULL AND nr_seq_agenda_consulta_w::text <> '')
and	a.nr_seq_agenda_consulta	= nr_seq_agenda_consulta_w
and	not exists (select	1
	from	autor_diag_medico x
	where	x.nr_sequencia_autor	= a.nr_sequencia)

union

select	a.nr_sequencia
from	autorizacao_convenio a
where	(nr_seq_paciente_setor_w IS NOT NULL AND nr_seq_paciente_setor_w::text <> '')
and	a.nr_seq_paciente_setor		= nr_seq_paciente_setor_w
and	not exists (select	1
	from	autor_diag_medico x
	where	x.nr_sequencia_autor	= a.nr_sequencia)

union

select	a.nr_sequencia
from	autorizacao_convenio a
where	(nr_seq_gestao_w IS NOT NULL AND nr_seq_gestao_w::text <> '')
and	a.nr_seq_gestao			= nr_seq_gestao_w
and	not exists (select	1
	from	autor_diag_medico x
	where	x.nr_sequencia_autor	= a.nr_sequencia);

c02 CURSOR FOR
SELECT	nr_sequencia
from	autor_diag_doenca
where	nr_seq_autor_diag	= nr_seq_autor_diag_p;


BEGIN

select 	max(nr_atendimento),
	max(nr_seq_agenda),
	max(nr_seq_age_integ),
	max(nr_seq_agenda_consulta),
	max(nr_seq_paciente_setor),
	max(nr_seq_gestao)
into STRICT 	nr_atendimento_w,
	nr_seq_agenda_w,
	nr_seq_agenda_integ_w,
	nr_seq_agenda_consulta_w,
	nr_seq_paciente_setor_w,
	nr_seq_gestao_w
from 	autorizacao_convenio
where	nr_sequencia 	= nr_sequencia_autor_p;

open C01;
loop
fetch C01 into
	nr_sequencia_autor_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	nextval('autor_diag_medico_seq')
	into STRICT	nr_seq_autor_diag_w
	;

	insert into autor_diag_medico(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_sequencia_autor,
		dt_diagnostico,
		ie_tipo_diagnostico,
		cd_medico,
		ds_diagnostico)
	SELECT	nr_seq_autor_diag_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_autor_w,
		dt_diagnostico,
		ie_tipo_diagnostico,
		cd_medico,
		ds_diagnostico
	from	autor_diag_medico
	where	nr_sequencia_autor	= nr_sequencia_autor_p
	and	nr_sequencia		= nr_seq_autor_diag_p;

	open C02;
	loop
	fetch C02 into
		nr_seq_diag_doenca_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		insert into autor_diag_doenca(nr_sequencia,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_atualizacao,
			nm_usuario,
			nr_seq_autor_diag,
			cd_doenca,
			ds_diagnostico,
			ie_classificacao_doenca,
			ie_tipo_doenca,
			ie_unidade_tempo,
			qt_tempo)
		SELECT	nextval('autor_diag_doenca_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_autor_diag_w,
			cd_doenca,
			ds_diagnostico,
			ie_classificacao_doenca,
			ie_tipo_doenca,
			ie_unidade_tempo,
			qt_tempo
		from	autor_diag_doenca
		where	nr_sequencia	= nr_seq_diag_doenca_w;
		
		end;
	end loop;
	close C02;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE replicar_diag_autor_conv (nr_sequencia_autor_p bigint, nr_seq_autor_diag_p bigint, nm_usuario_p text) FROM PUBLIC;

