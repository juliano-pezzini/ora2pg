-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_dupla_digit_result_exame ( nr_seq_result_p bigint, nr_seq_prescr_p bigint, nr_seq_result_item_p bigint, nm_usuario_p text) AS $body$
DECLARE



ie_existe_prim_dig_w	varchar(1);
ie_exame_valido_w		varchar(1);
nm_usuario_prim_w 			varchar(255);
nm_usuario_seg_w 			varchar(255);
qt_resultado_pri_w		exame_lab_result_dig.qt_resultado%type;
ds_resultado_pri_w		exame_lab_result_dig.ds_resultado%type;
pr_resultado_pri_w		exame_lab_result_dig.pr_resultado%type;
qt_resultado_seg_w		exame_lab_result_item.qt_resultado%type;
ds_resultado_seg_w		exame_lab_result_item.ds_resultado%type;
pr_resultado_seg_w		exame_lab_result_item.pr_resultado%type;
cd_exame_w				exame_laboratorio.cd_exame%type;


BEGIN

SELECT 	CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'S' END
INTO STRICT	ie_exame_valido_w
FROM 	prescr_procedimento a,
		exame_lab_resultado b,
		exame_lab_result_item c
WHERE	a.nr_prescricao = b.nr_prescricao
AND		b.nr_seq_resultado = c.nr_seq_resultado
AND 	c.nr_seq_prescr = a.nr_sequencia
AND 	coalesce(a.nr_seq_lote_externo::text, '') = ''
AND		coalesce(a.dt_integracao::text, '') = ''
AND 	b.nr_seq_resultado = nr_seq_result_p
AND		c.nr_seq_prescr = nr_seq_prescr_p
AND		c.nr_sequencia = nr_seq_result_item_p;

IF ((nr_seq_result_p IS NOT NULL AND nr_seq_result_p::text <> '')
		AND ie_exame_valido_w = 'S') THEN

	SELECT 	CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'S' END
	INTO STRICT 	ie_existe_prim_dig_w
	FROM 	exame_lab_result_dig
	WHERE	nr_seq_resultado = nr_seq_result_p
	AND 	nr_seq_prescr = nr_seq_prescr_p
	AND		nr_seq_result_item = nr_seq_result_item_p;

	IF (ie_existe_prim_dig_w = 'N') THEN
		INSERT INTO	exame_lab_result_dig(
				nr_sequencia,
				nr_seq_resultado,
				nr_seq_exame,
				qt_resultado,
				ds_resultado,
				nr_seq_metodo,
				nr_seq_material,
				pr_resultado,
				nr_seq_prescr,
				pr_minimo,
				pr_maximo,
				qt_minima,
				qt_maxima,
				ds_observacao,
				ds_referencia,
				nr_seq_unid_med,
				qt_decimais,
				nr_seq_reagente,
				nr_seq_formato,
				cd_medico_resp,
				dt_digitacao,
				nm_usuario_prim_dig,
				nr_seq_result_item)
		SELECT 	nextval('exame_lab_result_dig_seq'),
				nr_seq_resultado,
				nr_seq_exame,
				qt_resultado,
				ds_resultado,
				nr_seq_metodo,
				nr_seq_material,
				pr_resultado,
				nr_seq_prescr,
				pr_minimo,
				pr_maximo,
				qt_minima,
				qt_maxima,
				ds_observacao,
				ds_referencia,
				nr_seq_unid_med,
				qt_decimais,
				nr_seq_reagente,
				nr_seq_formato,
				cd_medico_resp,
				dt_digitacao,
				coalesce(nm_usuario_p, nm_usuario_prim_dig),
				nr_sequencia
		FROM 	exame_lab_result_item
		WHERE 	nr_seq_resultado = nr_seq_result_p
		AND		nr_seq_prescr = nr_seq_prescr_p
		AND		nr_sequencia = nr_seq_result_item_p;
	ELSE
		SELECT 	nm_usuario_prim_dig,
				nm_usuario_seg_dig
		INTO STRICT	nm_usuario_prim_w,
				nm_usuario_seg_w
		FROM 	exame_lab_result_item
		WHERE	nr_seq_resultado = nr_seq_result_p
		AND 	nr_seq_prescr = nr_seq_prescr_p
		AND		nr_sequencia = nr_seq_result_item_p;

		IF (UPPER(nm_usuario_prim_w) = UPPER(nm_usuario_p)
			AND coalesce(nm_usuario_seg_w::text, '') = '') THEN

			MERGE INTO exame_lab_result_dig a
			USING(SELECT 	nr_sequencia,
							nr_seq_resultado,
							nr_seq_prescr,
							qt_resultado,
							ds_resultado,
							nr_seq_metodo,
							nr_seq_material,
							pr_resultado,
							pr_minimo,
							pr_maximo,
							qt_minima,
							qt_maxima,
							ds_observacao,
							ds_referencia,
							nr_seq_unid_med,
							qt_decimais,
							nr_seq_reagente,
							nr_seq_formato,
							dt_digitacao
					FROM 	exame_lab_result_item
					WHERE 	nr_seq_resultado = nr_seq_result_p
					AND		nr_seq_prescr = nr_seq_prescr_p
					AND		nr_sequencia = nr_seq_result_item_p) b
			ON (a.nr_seq_result_item = b.nr_sequencia
				AND a.nr_seq_resultado = b.nr_seq_resultado
				AND a.nr_seq_prescr = b.nr_seq_prescr)
			WHEN MATCHED THEN
				UPDATE SET 	a.qt_resultado = b.qt_resultado,
							a.ds_resultado = b.ds_resultado,
							a.nr_seq_metodo = b.nr_seq_metodo,
							a.nr_seq_material = b.nr_seq_material,
							a.pr_resultado = b.pr_resultado,
							a.pr_minimo = b.pr_minimo,
							a.pr_maximo = b.pr_maximo,
							a.qt_minima = b.qt_minima,
							a.qt_maxima = b.qt_maxima,
							a.ds_observacao = b.ds_observacao,
							a.ds_referencia = b.ds_referencia,
							a.nr_seq_unid_med = b.nr_seq_unid_med,
							a.qt_decimais = b.qt_decimais,
							a.nr_seq_reagente = b.nr_seq_reagente,
							a.nr_seq_formato = b.nr_seq_formato,
							a.dt_digitacao = b.dt_digitacao;
		ELSE
			IF (coalesce(nm_usuario_seg_w::text, '') = '') THEN
				UPDATE 	exame_lab_result_item
				SET 	nm_usuario_seg_dig = nm_usuario_p
				WHERE 	nr_seq_resultado = nr_seq_result_p
				AND		nr_seq_prescr = nr_seq_prescr_p
				AND		nr_sequencia = nr_seq_result_item_p;

				COMMIT;
			END IF;

			SELECT 	a.qt_resultado,
					a.ds_resultado,
					a.pr_resultado,
					b.qt_resultado,
					b.ds_resultado,
					b.pr_resultado,
					c.cd_exame
			INTO STRICT	qt_resultado_seg_w,
					ds_resultado_seg_w,
					pr_resultado_seg_w,
					qt_resultado_pri_w,
					ds_resultado_pri_w,
					pr_resultado_pri_w,
					cd_exame_w
			FROM	exame_lab_result_item a,
					exame_lab_result_dig b,
					exame_laboratorio c
			WHERE	a.nr_seq_resultado = b.nr_seq_resultado
			AND		a.nr_seq_prescr = b.nr_seq_prescr
			AND		a.nr_seq_exame = c.nr_seq_exame
			AND		a.nr_sequencia = b.nr_seq_result_item
			AND		a.nr_seq_resultado = nr_seq_result_p
			AND		a.nr_seq_prescr = nr_seq_prescr_p
			AND		a.nr_sequencia = nr_seq_result_item_p;


			IF ((qt_resultado_pri_w IS NOT NULL AND qt_resultado_pri_w::text <> '')
				AND qt_resultado_pri_w <> qt_resultado_seg_w) THEN
				CALL wheb_mensagem_pck.exibir_mensagem_abort(783626, 'CD_EXAME='||to_char(cd_exame_w)||';'||'DS_RESULTADO='||to_char(qt_resultado_pri_w));
			ELSIF ((ds_resultado_pri_w IS NOT NULL AND ds_resultado_pri_w::text <> '')
				AND UPPER(ELIMINA_ACENTUACAO(trim(both ds_resultado_pri_w))) <> UPPER(ELIMINA_ACENTUACAO(trim(both ds_resultado_seg_w)))) THEN

				CALL wheb_mensagem_pck.exibir_mensagem_abort(783626, 'CD_EXAME='||to_char(cd_exame_w)||';'||'DS_RESULTADO='||to_char(UPPER(ELIMINA_ACENTUACAO(trim(both ds_resultado_pri_w)))));
			ELSIF ((pr_resultado_pri_w IS NOT NULL AND pr_resultado_pri_w::text <> '')
				AND pr_resultado_pri_w <> pr_resultado_seg_w) THEN

				CALL wheb_mensagem_pck.exibir_mensagem_abort(783626, 'CD_EXAME='||to_char(cd_exame_w)||';'||'DS_RESULTADO='||to_char(pr_resultado_pri_w));
			END IF;
		END IF;
	END IF;

	COMMIT;
END IF;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_dupla_digit_result_exame ( nr_seq_result_p bigint, nr_seq_prescr_p bigint, nr_seq_result_item_p bigint, nm_usuario_p text) FROM PUBLIC;

