-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_importar_decurso_prazo_v50 ( ds_arquivo_p ptu_decurso_prazo.ds_arquivo_pedido%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_origem_p INOUT ptu_resposta_autorizacao.nr_seq_origem%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Importar a transação 00700 - Decurso de Prazo do PTU online

CASO FOR REALIZAR ALGUMA ALTERAÇÃO NESTA PROCEDURE FAVOR VERIFICAR COM OS ANÁLISTAS DO GRUPO OPS - ATENDIMENTO
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ x] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_transacao_w			ptu_decurso_prazo.cd_transacao%type;
ie_tipo_cliente_w		ptu_decurso_prazo.ie_tipo_cliente%type;
ds_tipo_cliente_w		varchar(15);
cd_unimed_executora_w		ptu_decurso_prazo.cd_unimed_executora%type;
cd_unimed_beneficiario_w	ptu_decurso_prazo.cd_unimed_beneficiario%type;
nr_seq_execucao_w		ptu_decurso_prazo.nr_seq_execucao%type;
nr_versao_w			ptu_decurso_prazo.nr_versao%type;
nr_seq_pedido_compl_w		ptu_pedido_compl_aut.nr_sequencia%type;
nr_seq_pedido_aut_w		ptu_pedido_autorizacao.nr_sequencia%type;
nr_seq_guia_w			pls_guia_plano.nr_sequencia%type;
nr_seq_requisicao_w		pls_requisicao.nr_sequencia%type;

c01 CURSOR FOR
	SELECT	nr_seq_importacao,
		ds_valores
	from	w_scs_importacao
	where	nm_usuario	= nm_usuario_p
	order by nr_seq_importacao;

BEGIN

for	r_c01_w	in c01	loop
	if (r_c01_w.ds_valores	<> '$FIM') then
		if (r_c01_w.nr_seq_importacao	= 1) then
			cd_transacao_w			:= substr(r_c01_w.ds_valores,1,5);
			ds_tipo_cliente_w		:= trim(both substr(r_c01_w.ds_valores,6,15));
			cd_unimed_executora_w		:= (coalesce(trim(both substr(r_c01_w.ds_valores,21,4)),0))::numeric;
			cd_unimed_beneficiario_w	:= (coalesce(trim(both substr(r_c01_w.ds_valores,25,4)),0))::numeric;
			nr_seq_execucao_w		:= (coalesce(trim(both substr(r_c01_w.ds_valores,29,10)),0))::numeric;
			nr_versao_w			:= trim(both substr(r_c01_w.ds_valores,39,3));

			begin
				select	nr_seq_origem
				into STRICT	nr_seq_origem_p
				from	ptu_resposta_autorizacao
				where	nr_seq_execucao		= nr_seq_execucao_w
				and	cd_unimed_executora	= cd_unimed_executora_w;
			exception
			when others then
				nr_seq_origem_p	:= null;
			end;

			if (nr_seq_origem_p IS NOT NULL AND nr_seq_origem_p::text <> '') then
				begin
					select	nr_seq_pedido_compl,
						nr_seq_pedido_aut
					into STRICT	nr_seq_pedido_compl_w,
						nr_seq_pedido_aut_w
					from	ptu_controle_execucao
					where	nr_sequencia	= nr_seq_origem_p;
				exception
				when others then
					nr_seq_pedido_compl_w	:= null;
					nr_seq_pedido_aut_w	:= null;
				end;

				if (nr_seq_pedido_compl_w IS NOT NULL AND nr_seq_pedido_compl_w::text <> '') then
					select	nr_seq_guia,
						nr_seq_requisicao
					into STRICT	nr_seq_guia_w,
						nr_seq_requisicao_w
					from	ptu_pedido_compl_aut
					where	nr_sequencia	= nr_seq_pedido_compl_w;
				elsif (nr_seq_pedido_aut_w IS NOT NULL AND nr_seq_pedido_aut_w::text <> '') then
					select	nr_seq_guia,
						nr_seq_requisicao
					into STRICT	nr_seq_guia_w,
						nr_seq_requisicao_w
					from	ptu_pedido_autorizacao
					where	nr_sequencia	= nr_seq_pedido_aut_w;
				end if;
			end if;

			if (ds_tipo_cliente_w	= 'UNIMED') then
				ie_tipo_cliente_w	:= 'U';
			elsif (ds_tipo_cliente_w	= 'PORTAL') then
				ie_tipo_cliente_w	:= 'P';
			elsif (ds_tipo_cliente_w	= 'PRESTADOR') then
				ie_tipo_cliente_w	:= 'R';
			end if;

			if (cd_transacao_w	= '00700') then
				insert	into ptu_decurso_prazo(nr_sequencia, cd_transacao, ie_tipo_cliente,
					 cd_unimed_executora, cd_unimed_beneficiario, nr_seq_execucao,
					 dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
					 nm_usuario_nrec, nr_versao, nr_seq_requisicao,
					 nr_seq_guia, nr_seq_origem, ds_arquivo_pedido)
				values (nextval('ptu_decurso_prazo_seq'), cd_transacao_w,ie_tipo_cliente_w,
					 cd_unimed_executora_w, cd_unimed_beneficiario_w, nr_seq_execucao_w,
					 clock_timestamp(), nm_usuario_p, clock_timestamp(),
					 nm_usuario_p, nr_versao_w, nr_seq_requisicao_w,
					 nr_seq_guia_w, nr_seq_origem_p, ds_arquivo_p);

			if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
				CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w,'L','Recebido o Decurso de Prazo da Unimed '|| cd_unimed_executora_w, '', nm_usuario_p );
			elsif (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
				CALL pls_guia_gravar_historico(nr_seq_guia_w,2,'Recebido o Decurso de Prazo da Unimed '|| cd_unimed_executora_w, '', nm_usuario_p );
			end if;

			end if;
		end if;
	end if;
end loop;

commit;

CALL ptu_gestao_envio_confirmacao(nr_seq_origem_p, cd_estabelecimento_p, 'DP', nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_importar_decurso_prazo_v50 ( ds_arquivo_p ptu_decurso_prazo.ds_arquivo_pedido%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_origem_p INOUT ptu_resposta_autorizacao.nr_seq_origem%type) FROM PUBLIC;

