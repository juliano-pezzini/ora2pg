-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_apresent_pos_estab ( nr_seq_lote_p bigint, nr_seq_mensalidade_p bigint, nr_seq_pagador_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
nr_seq_contrato_w		bigint;
ie_tipo_guia_w			varchar(2);
qt_maxima_guia_w		bigint;
nr_seq_conta_w			bigint;
qt_conta_w			bigint;
nr_seq_segurado_w		bigint;
ie_apresentacao_w		bigint	:= 1;
nr_seq_mensalidade_w		bigint;
nr_seq_mensalidade_seg_w	bigint;
dt_mesano_referencia_w		timestamp;
qt_idade_w			bigint;
nr_parcela_segurado_w		bigint;
nr_parcela_contrato_w		bigint;
nr_seq_plano_w			bigint;

C01 CURSOR FOR 
	SELECT	ie_tipo_guia, 
		qt_maxima_guia 
	from	pls_regra_pos_estab_fatura 
	where	nr_seq_contrato	= nr_seq_contrato_w 
	and	ie_situacao	= 'A';
	
C02 CURSOR FOR 
	SELECT	b.nr_sequencia, 
		c.nr_sequencia, 
		c.nr_seq_plano, 
		Obter_Idade(e.dt_nascimento,dt_mesano_referencia_w,'A'), 
		row_number() OVER () AS rownum 
	from	pessoa_fisica		e, 
		pls_contrato_pagador	d, 
		pls_segurado		c, 
		pls_conta		b, 
		pls_protocolo_conta	a 
	where	a.ie_status 		= '3' 
	and	a.nr_sequencia		= b.nr_seq_protocolo 
	and	b.nr_seq_segurado	= c.nr_sequencia 
	and	c.nr_seq_pagador	= d.nr_sequencia 
	and	c.cd_pessoa_fisica	= e.cd_pessoa_fisica 
	and	d.nr_sequencia		= nr_seq_pagador_p 
	and	coalesce(a.ie_tipo_protocolo,'C') = 'C' 
	and	b.ie_tipo_guia		= ie_tipo_guia_w;
	

BEGIN 
 
delete	from	w_pls_mens_limite_pos;
 
select	nr_seq_contrato 
into STRICT	nr_seq_contrato_w 
from	pls_contrato_pagador 
where	nr_sequencia	= nr_seq_pagador_p;
 
select	dt_referencia 
into STRICT	dt_mesano_referencia_w 
from	pls_mensalidade 
where	nr_sequencia	= nr_seq_mensalidade_p;
 
open C01;
loop 
fetch C01 into	 
	ie_tipo_guia_w, 
	qt_maxima_guia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	open C02;
	loop 
	fetch C02 into	 
		nr_seq_conta_w, 
		nr_seq_segurado_w, 
		nr_seq_plano_w, 
		qt_idade_w, 
		qt_conta_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		if (qt_conta_w > qt_maxima_guia_w) then 
			qt_maxima_guia_w	:= qt_maxima_guia_w + qt_maxima_guia_w;
			ie_apresentacao_w	:= ie_apresentacao_w + 1;
			 
			select	nextval('pls_mensalidade_seq') 
			into STRICT	nr_seq_mensalidade_w 
			;
			 
			insert into pls_mensalidade(nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					nr_seq_pagador, 
					dt_referencia, 
					nr_seq_lote, 
					dt_vencimento, 
					nr_seq_forma_cobranca, 
					cd_banco, 
					cd_agencia_bancaria, 
					ie_digito_agencia, 
					cd_conta, 
					ie_digito_conta, 
					ie_endereco_boleto, 
					nr_seq_conta_banco, 
					nr_seq_compl_pf_tel_adic, 
					nr_seq_pagador_fin, 
					ie_nota_titulo, 
					ie_tipo_formacao_preco, 
					ie_apresentacao, 
					vl_mensalidade, 
					nr_seq_compl_pj, 
					nr_seq_conta_banco_deb_aut) 
			(SELECT	nr_seq_mensalidade_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_pagador_p, 
				dt_referencia, 
				nr_seq_lote, 
				dt_vencimento, 
				nr_seq_forma_cobranca, 
				cd_banco, 
				cd_agencia_bancaria, 
				ie_digito_agencia, 
				cd_conta, 
				ie_digito_conta, 
				ie_endereco_boleto, 
				nr_seq_conta_banco, 
				nr_seq_compl_pf_tel_adic, 
				nr_seq_pagador_fin, 
				ie_nota_titulo, 
				ie_tipo_formacao_preco, 
				ie_apresentacao_w, 
				0, 
				nr_seq_compl_pj, 
				nr_seq_conta_banco_deb_aut 
			from	pls_mensalidade 
			where	nr_sequencia	= nr_seq_mensalidade_p);
		end if;
		 
		if (ie_apresentacao_w > 1) then 
			nr_parcela_segurado_w	:= pls_obter_parcela_segurado(nr_seq_segurado_w,dt_mesano_referencia_w,dt_mesano_referencia_w);
			nr_parcela_contrato_w	:= pls_obter_parcela_contrato(nr_seq_contrato_w,dt_mesano_referencia_w);
			 
			select	nextval('pls_mensalidade_segurado_seq') 
			into STRICT	nr_seq_mensalidade_seg_w 
			;
			 
			insert into pls_mensalidade_segurado(nr_sequencia, dt_atualizacao, nm_usuario, 
				nr_seq_segurado, vl_mensalidade, nr_seq_mensalidade, 
				qt_idade, dt_mesano_referencia, nr_parcela, 
				nr_seq_plano, nr_seq_contrato, nr_parcela_contrato) 
			values (nr_seq_mensalidade_seg_w, clock_timestamp(), nm_usuario_p, 
				nr_seq_segurado_w, 0, nr_seq_mensalidade_w, 
				qt_idade_w, dt_mesano_referencia_w, nr_parcela_segurado_w, 
				nr_seq_plano_w, nr_seq_contrato_w, nr_parcela_contrato_w);
			 
			CALL pls_gerar_mens_pos_estab(nr_seq_mensalidade_seg_w, nr_seq_conta_w, 'A', nm_usuario_p);
		/*else 
			insert	into	w_pls_mens_limite_pos 
				(	nr_sequencia, cd_estabelecimento, nm_usuario, 
					nm_usuario_nrec, dt_atualizacao, dt_atualizacao_nrec, 
					nr_seq_lote_mensalidade, nr_seq_conta, ie_apresentacao, 
					nr_seq_segurado, ie_tipo_guia) 
				values 
				(	w_pls_mens_limite_pos_seq.nextval, cd_estabelecimento_p, nm_usuario_p, 
					nm_usuario_p, sysdate, sysdate, 
					nr_seq_lote_p, nr_seq_conta_w, ie_apresentacao_w, 
					nr_seq_segurado_w, ie_tipo_guia_w);*/
 
		end if;
		end;
	end loop;
	close C02;
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_apresent_pos_estab ( nr_seq_lote_p bigint, nr_seq_mensalidade_p bigint, nr_seq_pagador_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

