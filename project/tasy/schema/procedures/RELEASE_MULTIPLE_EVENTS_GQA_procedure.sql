-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE release_multiple_events_gqa (nr_atendimento_p ATENDIMENTO_PACIENTE.NR_ATENDIMENTO%type, ie_is_batch_release_p text default 'N', nr_seq_prot_int_paciente_p PROTOCOLO_INT_PACIENTE.nr_sequencia%type DEFAULT NULL, dt_prevista_p PROTOCOLO_INT_PAC_EVENTO.dt_prevista%type DEFAULT NULL, nm_usuario_p usuario.nm_usuario%type DEFAULT NULL, ds_nr_seq_pend_pac_p INOUT text DEFAULT NULL) AS $body$
DECLARE


ds_nr_seq_pend_pac_w varchar(1000);
ds_nr_seq_pend_pac_aux_w varchar(1000);

c01 CURSOR FOR
SELECT distinct d.nr_sequencia nr_seq_evento
from
(
	SELECT 
	c.nr_sequencia, 
	f.nr_seq_regra_acao, 
	coalesce(CASE WHEN max(obter_informacoes_pendencia(f.nr_sequencia,'D')) IS NULL THEN 'N'  ELSE 'S' END ,'N') ie_has_executed
	from protocolo_int_paciente a
	inner join protocolo_int_pac_etapa b on b.nr_seq_protocolo_int_pac = a.nr_sequencia
	inner join protocolo_int_pac_evento c on c.nr_seq_prt_int_pac_etapa = b.nr_sequencia
	inner join gqa_pendencia_regra d on d.nr_sequencia = c.nr_seq_plano
	left join gqa_pendencia_pac e on e.nr_seq_protocolo_int_pac_even = c.nr_sequencia
	left join gqa_pend_pac_acao f on f.nr_seq_pend_pac = e.nr_sequencia
	where (
		(coalesce(ie_is_batch_release_p,'N') = 'N' AND trunc(c.dt_prevista) = trunc(dt_prevista_p))
		or coalesce(ie_is_batch_release_p,'N') = 'S'
	)
	and a.nr_sequencia = nr_seq_prot_int_paciente_p
	group by f.nr_seq_regra_acao,c.nr_sequencia
) a,
protocolo_int_paciente b
inner join protocolo_int_pac_etapa c on c.nr_seq_protocolo_int_pac = b.nr_sequencia
inner join protocolo_int_pac_evento d on d.nr_seq_prt_int_pac_etapa = c.nr_sequencia
inner join gqa_pendencia_regra e on e.nr_sequencia = d.nr_seq_plano
inner join gqa_acao f on f.nr_seq_pend_regra = e.nr_sequencia
where a.ie_has_executed = 'N'
and (f.nr_sequencia = a.nr_seq_regra_acao or coalesce(a.nr_seq_regra_acao::text, '') = '')
and (
	(coalesce(ie_is_batch_release_p,'N') = 'N' AND trunc(d.dt_prevista) = trunc(dt_prevista_p))
	or coalesce(ie_is_batch_release_p,'N') = 'S'
)
and d.nr_sequencia = a.nr_sequencia
and b.nr_sequencia = nr_seq_prot_int_paciente_p;

BEGIN

  ds_nr_seq_pend_pac_w := '';
  ds_nr_seq_pend_pac_aux_w := '';

  for c01_w in c01 loop
  begin

    ds_nr_seq_pend_pac_aux_w := GQA_LIBERACAO_PROT_INT_EVENTO(c01_w.nr_seq_evento, nm_usuario_p, nr_atendimento_p, ds_nr_seq_pend_pac_aux_w);

    ds_nr_seq_pend_pac_w := concat(ds_nr_seq_pend_pac_w,ds_nr_seq_pend_pac_aux_w || ',');

  end;
  end loop;
		
commit;

ds_nr_seq_pend_pac_p := rtrim(ds_nr_seq_pend_pac_w,',');

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE release_multiple_events_gqa (nr_atendimento_p ATENDIMENTO_PACIENTE.NR_ATENDIMENTO%type, ie_is_batch_release_p text default 'N', nr_seq_prot_int_paciente_p PROTOCOLO_INT_PACIENTE.nr_sequencia%type DEFAULT NULL, dt_prevista_p PROTOCOLO_INT_PAC_EVENTO.dt_prevista%type DEFAULT NULL, nm_usuario_p usuario.nm_usuario%type DEFAULT NULL, ds_nr_seq_pend_pac_p INOUT text DEFAULT NULL) FROM PUBLIC;

