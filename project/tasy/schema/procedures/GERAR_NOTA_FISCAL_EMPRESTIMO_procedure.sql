-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nota_fiscal_emprestimo ( nr_emprestimo_p bigint, nr_nota_fiscal_p text, cd_serie_nf_p text, dt_emissao_p timestamp, cd_operacao_nota_p bigint, cd_natureza_operacao_p bigint, nr_seq_modelo_p bigint, cd_condicao_pagamento_p bigint, cd_setor_digitacao_p bigint, ie_opcao_valor_p bigint, ie_devolucao_emprestimo_p text, cd_material_p bigint, nr_seq_lote_p bigint, nr_seq_item_emprestimo_p bigint, qt_devolver_p bigint, ie_tipo_nota_p text, nm_usuario_p text, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


cd_estabelecimento_w		smallint;
cd_local_estoque_w		integer;
cd_pessoa_fisica_w		varchar(10);
cd_pessoa_juridica_w		varchar(14);
cd_pessoa_juridica_ww		varchar(14);
cd_cgc_w			varchar(14);
cd_material_w			integer;
qt_emprestimo_w			double precision;
cd_unidade_medida_estoque_w	varchar(30);
nr_sequencia_w			bigint;
ie_tipo_w				varchar(1);
ie_entrada_saida_w			varchar(1);
ie_entrada_saida_ww		varchar(1);
ie_tipo_nota_w			varchar(2);
ie_tipo_conta_w			integer	:= 2;
cd_conta_contabil_w		varchar(20)	:= null;
cd_centro_custo_w			integer;
vl_unitario_item_w			double precision;
valor_total_item_w			double precision;
nr_item_nf_w			integer;
cd_material_estoque_w		integer;
nr_sequencia_nf_w			bigint;
cd_operacao_estoque_w		bigint;
nr_seq_item_dev_w			bigint;
qt_material_dev_w			double precision;
nr_seq_item_emprestimo_w		bigint;
dt_validade_material_w		timestamp;
ie_indeterminado_w			varchar(1);
nr_seq_conta_financeira_w		bigint;
cd_tipo_pessoa_w			smallint;
qt_existe_w			bigint;
qt_material_lote_w			double precision;
nr_seq_dev_w			integer;
ie_entrada_nota_w		varchar(1);	
nr_sequencia_ww			bigint;
qt_material_ww			double precision;
qt_emprestimo_ww		double precision;
qt_devolucao_w			double precision;
nr_seq_lote_w			material_lote_fornec.nr_sequencia%type;
vl_referencia_w			emprestimo_material.vl_referencia%type;
nr_seq_lote_fornec_w		emprestimo_material_lote.nr_seq_lote_fornec%type;
ie_tipo_pessoa_w		varchar(2);
nr_seq_marca_w			emprestimo_material.nr_seq_marca%type;
qt_serie_w				nota_fiscal.nr_sequencia%type;

/* Campos para informacao do lote fornecedor na nota fiscal */

dt_validade_w			timestamp;
ds_lote_fornec_w			varchar(20);

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.cd_material,
	a.qt_emprestimo,
	substr(obter_dados_material_estab(b.cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque,
	a.ds_lote_fornec,
	a.dt_validade_material,
	a.ie_indeterminado,
	a.nr_seq_lote,
	a.vl_referencia,
	a.nr_Seq_marca
from	emprestimo_material a,
	material b
where	a.cd_material = b.cd_material
and	nr_emprestimo = nr_emprestimo_p;

c02 CURSOR FOR
SELECT	b.ds_lote_fornec,
	b.dt_validade,
	b.ie_indeterminada,
	sum(b.qt_material),
	b.nr_seq_lote_fornec
from	emprestimo_material_lote b,
	emprestimo_material c
where	b.nr_emprestimo	= nr_emprestimo_p
and	c.nr_emprestimo = b.nr_emprestimo
and	b.nr_seq_item_emprest = c.nr_sequencia
and	c.cd_material = cd_material_p
and     c.NR_SEQUENCIA = coalesce(nr_seq_item_emprestimo_p,c.NR_SEQUENCIA)
group by b.nr_seq_lote_fornec,
	b.ds_lote_fornec,
	b.dt_validade,
	b.ie_indeterminada;

c03 CURSOR FOR
SELECT	nr_sequencia,
	qt_material
from	emprestimo_material
where	nr_emprestimo	= nr_emprestimo_p
and	cd_material	= cd_material_p
and	coalesce(nr_seq_lote, coalesce(nr_seq_lote_p,0)) = coalesce(nr_seq_lote_p,0)

union all

SELECT	nr_sequencia,
	qt_material
from	emprestimo_material
where	nr_emprestimo	= nr_emprestimo_p
and	obter_controlador_estoque(cd_material) = obter_controlador_estoque(cd_material_p);
	

BEGIN

select	a.cd_estabelecimento,
	a.cd_local_estoque,
	a.cd_pessoa_fisica,
	a.cd_pessoa_juridica,
	a.ie_tipo
into STRICT	cd_estabelecimento_w,
	cd_local_estoque_w,
	cd_pessoa_fisica_w,
	cd_pessoa_juridica_w,
	ie_tipo_w
from	emprestimo a
where	a.nr_emprestimo = nr_emprestimo_p;

cd_cgc_w	:= cd_pessoa_juridica_w;

if (ie_devolucao_emprestimo_p = 'N') then

	if (ie_tipo_w = 'S') then
		
		ie_entrada_saida_w	:= 'S';
		ie_tipo_nota_w 		:= 'SE'; /*Saida por emissao*/
		cd_pessoa_juridica_w	:= obter_cgc_estabelecimento(cd_estabelecimento_w);
		
		if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			ie_tipo_nota_w	:= 'SF'; /*Saida pessoa fisica*/
		end if;
	else
		ie_entrada_saida_w	:= 'E';
		ie_tipo_nota_w		:= ie_tipo_nota_p;
		cd_cgc_w		:= obter_cgc_estabelecimento(cd_estabelecimento_w);
		
		if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			ie_tipo_nota_w := 'EF'; /*Entrada pessoa fisica*/
		end if;
	
	end if;

	select (coalesce(max(nr_sequencia_nf),0) + 1)
	into STRICT	nr_sequencia_nf_w
	from	nota_fiscal
	where	cd_estabelecimento		= cd_estabelecimento_w
	and	cd_cgc_emitente		= cd_pessoa_juridica_w
	and	nr_nota_fiscal		= nr_nota_fiscal_p
	and	cd_serie_nf		= cd_serie_nf_p;
	
	select	nextval('nota_fiscal_seq')
	into STRICT	nr_sequencia_w
	;
	
	
	select	coalesce(max(nr_sequencia),0)
		into STRICT	qt_serie_w
		from	nota_fiscal
		where	cd_estabelecimento = cd_estabelecimento_w
		and (cd_cgc_emitente = cd_cgc_w
			or coalesce(cd_cgc_emitente::text, '') = '')
		and	cd_serie_nf = cd_serie_nf_p
		and	nr_nota_fiscal = nr_nota_fiscal_p
		and	ie_situacao = '1'
		and	nr_sequencia <> nr_sequencia_w;
			
		if (qt_serie_w > 0) then					
			CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(248040,'NR_SEQUENCIA_W='||qt_serie_w);
		end if;
	
	
	insert	into nota_fiscal(
		nr_sequencia,
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_cgc,
		cd_pessoa_fisica,
		cd_serie_nf,       
		nr_sequencia_nf,
		cd_operacao_nf,
		dt_emissao,
		dt_entrada_saida,
		ie_acao_nf,
		ie_emissao_nf,
		ie_tipo_frete,
		vl_mercadoria,
		vl_total_nota,
		qt_peso_bruto,
		qt_peso_liquido,
		vl_ipi,
		vl_descontos,
		vl_frete,
		vl_seguro,
		vl_despesa_acessoria,
		dt_atualizacao,
		nm_usuario,
		nr_nota_fiscal,
		cd_natureza_operacao,
		ie_situacao,
		ie_entregue_bloqueto,
		cd_setor_digitacao,
		ie_tipo_nota,
		cd_condicao_pagamento,
		nr_seq_modelo)
	values (	nr_sequencia_w,
		cd_estabelecimento_w,
		cd_pessoa_juridica_w,
		cd_cgc_w,
		cd_pessoa_fisica_w,
		cd_serie_nf_p,
		nr_sequencia_nf_w,
		cd_operacao_nota_p,
		dt_emissao_p,
		trunc(clock_timestamp(),'dd'),
		1,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		clock_timestamp(),
		nm_usuario_p,
		nr_nota_fiscal_p,
		cd_natureza_operacao_p,
		1,
		'N',
		cd_setor_digitacao_p,
		ie_tipo_nota_w,
		cd_condicao_pagamento_p,
		CASE WHEN nr_seq_modelo_p=0 THEN null  ELSE nr_seq_modelo_p END );

	select	coalesce(max(b.cd_operacao_estoque),0)
	into STRICT	cd_operacao_estoque_w
	from	operacao_estoque b,
		operacao_nota a
	where	a.cd_operacao_estoque	= b.cd_operacao_estoque
	and	a.cd_operacao_nf		= cd_operacao_nota_p;
	
	if (cd_pessoa_juridica_w IS NOT NULL AND cd_pessoa_juridica_w::text <> '') then
		select	cd_tipo_pessoa
		into STRICT	cd_tipo_pessoa_w
		from	pessoa_juridica
		where	cd_cgc = cd_pessoa_juridica_w;
	end if;

	open C01;
	loop
	fetch C01 into	
		nr_seq_item_emprestimo_w,
		cd_material_w,
		qt_emprestimo_w,
		cd_unidade_medida_estoque_w,
		ds_lote_fornec_w,
		dt_validade_material_w,
		ie_indeterminado_w,
		nr_seq_lote_w,
		vl_referencia_w,
		nr_seq_marca_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select (coalesce(max(nr_item_nf),0) + 1)
		into STRICT	nr_item_nf_w
		from	nota_fiscal_item
		where	nr_sequencia	= nr_sequencia_w;
		
		SELECT * FROM define_conta_material(
			cd_estabelecimento_w, cd_material_w, ie_tipo_conta_w, 0, 0, 0, 0, 0, 0, 0, cd_local_estoque_w, cd_operacao_estoque_w, trunc(clock_timestamp()), cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
		
		select	CASE WHEN ie_entrada_saida_w='S' THEN 'E'  ELSE 'S' END
		into STRICT	ie_entrada_saida_ww
		;
		
		if (ie_entrada_saida_ww = 'S') then
			cd_pessoa_juridica_ww := cd_pessoa_juridica_w;
		else
			cd_pessoa_juridica_ww := cd_cgc_w;
		end if;
		
		if (coalesce(cd_pessoa_fisica_w::text, '') = '') then
			ie_tipo_pessoa_w := 'PJ';
		else
			ie_tipo_pessoa_w := 'PF';
		end if;
		
		nr_seq_conta_financeira_w := obter_conta_financeira(
			ie_entrada_saida_ww, cd_estabelecimento_w, cd_material_w, null, null, null, null, cd_pessoa_juridica_ww, cd_centro_custo_w, nr_seq_conta_financeira_w, null, cd_operacao_nota_p, ie_tipo_pessoa_w, null, null, null, null, cd_pessoa_fisica_w, null, null, null, null, cd_local_estoque_w, null, null, null, null, null, null);
		
		if (nr_seq_conta_financeira_w = 0) then
			nr_seq_conta_financeira_w := null;
		end if;	
		
		vl_unitario_item_w := 0;		
		if (ie_opcao_valor_p = 0) then
			vl_unitario_item_w := obter_custo_medio_material(cd_estabelecimento_w, trunc(clock_timestamp(),'mm'), cd_material_w);
		elsif (ie_opcao_valor_p = 1) then
			vl_unitario_item_w := obter_valor_ultima_compra(cd_estabelecimento_w, 99999, cd_material_w, null, 'N');
		elsif (ie_opcao_valor_p = 2) then
			vl_unitario_item_w := vl_referencia_w;
		end if;
		
		valor_total_item_w	:= (qt_emprestimo_w * vl_unitario_item_w);
		vl_unitario_item_w	:= dividir(valor_total_item_w,qt_emprestimo_w);

		select	cd_material_estoque
		into STRICT	cd_material_estoque_w
		from	material
		where	cd_material = cd_material_w;
		
		insert into nota_fiscal_item(
			cd_estabelecimento,
			cd_cgc_emitente,
			cd_serie_nf,
			nr_nota_fiscal,
			nr_sequencia_nf,
			nr_item_nf,
			cd_natureza_operacao,
			qt_item_nf,
			qt_item_estoque,
			vl_unitario_item_nf,
			vl_total_item_nf,
			dt_atualizacao,
			nm_usuario,
			vl_frete,
			vl_desconto,
			vl_despesa_acessoria,
			cd_material,
			vl_desconto_rateio,
			vl_seguro,
			nr_sequencia,
			vl_liquido,
			cd_unidade_medida_compra,
			cd_unidade_medida_estoque,
			cd_material_estoque,
			cd_local_estoque,
			cd_conta_contabil,
			cd_centro_custo,
			nr_emprestimo,
			nr_seq_item_emprestimo,
			ie_forma_gerado_empres,
			cd_lote_fabricacao,
			dt_validade,
			ie_indeterminado,
			nr_seq_conta_financ,
			nr_seq_lote_fornec,
			nr_seq_marca,
			cd_sequencia_parametro)
		values (	cd_estabelecimento_w,
			cd_pessoa_juridica_w,
			cd_serie_nf_p,
			nr_nota_fiscal_p,
			nr_sequencia_nf_w,
			nr_item_nf_w,
			cd_natureza_operacao_p,
			qt_emprestimo_w,
			qt_emprestimo_w,
			vl_unitario_item_w,
			valor_total_item_w,
			clock_timestamp(),
			nm_usuario_p,
			0,
			0,
			0,
			cd_material_w,
			0,
			0,
			nr_sequencia_w,
			valor_total_item_w,
			cd_unidade_medida_estoque_w,
			cd_unidade_medida_estoque_w,
			cd_material_estoque_w,
			cd_local_estoque_w,
			cd_conta_contabil_w,
			cd_centro_custo_w,
			nr_emprestimo_p,
			nr_seq_item_emprestimo_w,
			'EM',
			ds_lote_fornec_w,
			dt_validade_material_w,
			ie_indeterminado_w,
			nr_seq_conta_financeira_w,
			nr_seq_lote_w,
			nr_seq_marca_w,
			philips_contabil_pck.get_parametro_conta_contabil);
		end;
	end loop;
	close C01;
elsif (ie_devolucao_emprestimo_p = 'S') then
	
	nr_sequencia_w	:= nr_sequencia_p;

	
	if (ie_tipo_w = 'S') then
			
		ie_entrada_saida_w	:= 'E';
		ie_tipo_nota_w		:= ie_tipo_nota_p;
		cd_cgc_w		:= cd_pessoa_juridica_w;
		
		if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			ie_tipo_nota_w := 'EF'; /*Entrada pessoa fisica*/
		end if;		
	else
		
		ie_entrada_saida_w	:= 'S';
		ie_tipo_nota_w		:= 'SE'; /*Saida por emissao*/
		cd_cgc_w		:= cd_pessoa_juridica_w;
		
		if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			ie_tipo_nota_w := 'SF'; /*Saida pessoa fisica*/
		end if;
	
	end if;
	
	if (nr_sequencia_w = 0) then	

		select (coalesce(max(nr_sequencia_nf),0) + 1)
		into STRICT	nr_sequencia_nf_w
		from	nota_fiscal
		where	cd_estabelecimento		= cd_estabelecimento_w
		and	cd_cgc_emitente		= cd_pessoa_juridica_w
		and	nr_nota_fiscal		= nr_nota_fiscal_p
		and	cd_serie_nf		= cd_serie_nf_p;
	
		select	nextval('nota_fiscal_seq')
		into STRICT	nr_sequencia_w
		;
		
	
		select	coalesce(max(nr_sequencia),0)
			into STRICT	qt_serie_w
			from	nota_fiscal
			where	cd_estabelecimento = cd_estabelecimento_w
			and (cd_cgc_emitente = cd_cgc_w
			or coalesce(cd_cgc_emitente::text, '') = '')
			and	cd_serie_nf = cd_serie_nf_p
			and	nr_nota_fiscal = nr_nota_fiscal_p
			and	ie_situacao = '1'
			and	nr_sequencia <> nr_sequencia_w;
			

		if (qt_serie_w > 0) then					
			CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(248040,'NR_SEQUENCIA_W='||qt_serie_w);
		end if;
	

		insert	into nota_fiscal(
			nr_sequencia,
			cd_estabelecimento,
			cd_cgc_emitente,
			cd_cgc,
			cd_pessoa_fisica,
			cd_serie_nf,       
			nr_sequencia_nf,
			cd_operacao_nf,
			dt_emissao,
			dt_entrada_saida,
			ie_acao_nf,
			ie_emissao_nf,
			ie_tipo_frete,
			vl_mercadoria,
			vl_total_nota,
			qt_peso_bruto,
			qt_peso_liquido,
			vl_ipi,
			vl_descontos,
			vl_frete,
			vl_seguro,
			vl_despesa_acessoria,
			dt_atualizacao,
			nm_usuario,
			nr_nota_fiscal,
			cd_natureza_operacao,
			ie_situacao,
			ie_entregue_bloqueto,
			cd_setor_digitacao,
			ie_tipo_nota,
			cd_condicao_pagamento,
			nr_seq_modelo)
		values (	nr_sequencia_w,
			cd_estabelecimento_w,
			cd_pessoa_juridica_w,
			cd_cgc_w,
			cd_pessoa_fisica_w,
			cd_serie_nf_p,
			nr_sequencia_nf_w,
			cd_operacao_nota_p,
			dt_emissao_p,
			trunc(clock_timestamp(),'dd'),
			1,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			clock_timestamp(),
			nm_usuario_p,
			nr_nota_fiscal_p,
			cd_natureza_operacao_p,
			1,
			'N',
			cd_setor_digitacao_p,
			ie_tipo_nota_w,
			cd_condicao_pagamento_p,
			CASE WHEN nr_seq_modelo_p=0 THEN null  ELSE nr_seq_modelo_p END );

		select	coalesce(max(b.cd_operacao_estoque),0)
		into STRICT	cd_operacao_estoque_w
		from	operacao_estoque b,
			operacao_nota a
		where	a.cd_operacao_estoque	= b.cd_operacao_estoque
		and	a.cd_operacao_nf	= cd_operacao_nota_p;
	end if;
	
	select (coalesce(max(nr_item_nf),0) + 1)
	into STRICT	nr_item_nf_w
	from	nota_fiscal_item
	where	nr_sequencia	= nr_sequencia_w;
	
	select	nr_sequencia_nf
	into STRICT	nr_sequencia_nf_w
	from	nota_fiscal
	where	nr_sequencia = nr_Sequencia_w;
	
	if (cd_pessoa_juridica_w IS NOT NULL AND cd_pessoa_juridica_w::text <> '') then
		select	cd_tipo_pessoa
		into STRICT	cd_tipo_pessoa_w
		from	pessoa_juridica
		where	cd_cgc = cd_pessoa_juridica_w;
	end if;
		
	SELECT * FROM define_conta_material(
		cd_estabelecimento_w, cd_material_p, ie_tipo_conta_w, 0, 0, 0, 0, 0, 0, 0, cd_local_estoque_w, cd_operacao_estoque_w, trunc(clock_timestamp()), cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;

	if (coalesce(cd_pessoa_fisica_w::text, '') = '') then
		ie_tipo_pessoa_w := 'PJ';
	else
		ie_tipo_pessoa_w := 'PF';
	end if;
	
	select	CASE WHEN ie_entrada_saida_w='S' THEN 'E'  ELSE 'S' END
	into STRICT	ie_entrada_saida_ww
	;
		
	nr_seq_conta_financeira_w := obter_conta_financeira(
		ie_entrada_saida_w,  --OS691209
		cd_estabelecimento_w, cd_material_p, null, null, null, null, cd_pessoa_juridica_w, cd_centro_custo_w, nr_seq_conta_financeira_w, null, cd_operacao_nota_p, ie_tipo_pessoa_w, null, null, null, null, cd_pessoa_fisica_w, null, null, null, null, cd_local_estoque_w, null, null, null, null, null, null);
		
	if (nr_seq_conta_financeira_w = 0) then
		nr_seq_conta_financeira_w := null;
	end if;				

	vl_unitario_item_w := 0;		
	if (ie_opcao_valor_p = 0) then
		vl_unitario_item_w := obter_custo_medio_material(cd_estabelecimento_w, trunc(clock_timestamp(),'mm'), cd_material_p);
	elsif (ie_opcao_valor_p = 1) then
		vl_unitario_item_w := obter_valor_ultima_compra(cd_estabelecimento_w, 99999, cd_material_p, null, 'N');
	elsif (ie_opcao_valor_p = 2) then
		select	vl_referencia
		into STRICT	vl_unitario_item_w
		from	emprestimo_material
		where	nr_emprestimo = nr_emprestimo_p
		and	nr_sequencia = nr_seq_item_emprestimo_p;
	end if;

	valor_total_item_w	:= (qt_devolver_p * vl_unitario_item_w);
	vl_unitario_item_w	:= dividir(valor_total_item_w,qt_devolver_p);
		
	select	cd_material_estoque,
		substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque
	into STRICT	cd_material_estoque_w,
		cd_unidade_medida_estoque_w
	from	material
	where	cd_material = cd_material_p;
	
	insert into nota_fiscal_item(
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_nota_fiscal,
		nr_sequencia_nf,
		nr_item_nf,
		cd_natureza_operacao,
		qt_item_nf,
		qt_item_estoque,
		vl_unitario_item_nf,
		vl_total_item_nf,
		dt_atualizacao,
		nm_usuario,
		vl_frete,
		vl_desconto,
		vl_despesa_acessoria,
		cd_material,
		vl_desconto_rateio,
		vl_seguro,
		nr_sequencia,
		vl_liquido,
		cd_unidade_medida_compra,
		cd_unidade_medida_estoque,
		cd_material_estoque,
		cd_local_estoque,
		cd_conta_contabil,
		cd_centro_custo,
		ie_indeterminado,
		nr_seq_conta_financ,
		nr_emprestimo,
		nr_seq_item_emprestimo,
		ie_forma_gerado_empres,
		cd_sequencia_parametro)
	values (	cd_estabelecimento_w,
		cd_pessoa_juridica_w,
		cd_serie_nf_p,
		nr_nota_fiscal_p,
		nr_sequencia_nf_w,
		nr_item_nf_w,
		cd_natureza_operacao_p,
		qt_devolver_p,
		qt_devolver_p,
		vl_unitario_item_w,
		valor_total_item_w,
		clock_timestamp(),
		nm_usuario_p,
		0,
		0,
		0,
		cd_material_p,
		0,
		0,
		nr_sequencia_w,
		valor_total_item_w,
		cd_unidade_medida_estoque_w,
		cd_unidade_medida_estoque_w,
		cd_material_estoque_w,
		cd_local_estoque_w,
		cd_conta_contabil_w,
		cd_centro_custo_w,		
		'N',
		nr_seq_conta_financeira_w,
		nr_emprestimo_p,
		nr_seq_item_emprestimo_p,
		'S',
		philips_contabil_pck.get_parametro_conta_contabil);
	
	select	count(*)
	into STRICT	qt_existe_w
	from	emprestimo_material_lote
	where	nr_emprestimo = nr_emprestimo_p
	and	nr_seq_item_emprest = nr_seq_item_emprestimo_p;
	
	if (qt_existe_w = 1) then
	
		select	max(a.ds_lote_fornec),
			max(a.dt_validade),
			coalesce(max(a.ie_indeterminada),'N')
		into STRICT	ds_lote_fornec_w,
			dt_validade_material_w,
			ie_indeterminado_w
		from	emprestimo_material_lote a
		where	nr_emprestimo = nr_emprestimo_p
		and	nr_seq_item_emprest = nr_seq_item_emprestimo_p;
		
		update	nota_fiscal_item
		set	cd_lote_fabricacao	= ds_lote_fornec_w,
			dt_validade		= dt_validade_material_w,
			ie_indeterminado	= ie_indeterminado_w
		where	nr_sequencia		= nr_sequencia_w
		and	nr_item_nf		= nr_item_nf_w;
	
	elsif (qt_existe_w > 1) then
		open C02;
		loop
		fetch C02 into	
			ds_lote_fornec_w,
			dt_validade_material_w,
			ie_indeterminado_w,
			qt_material_lote_w,
			nr_seq_lote_fornec_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
	
			insert into nota_fiscal_item_lote(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_nota,
				nr_item_nf,
				dt_validade,
				qt_material,
				cd_lote_fabricacao,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_indeterminado)
			values (	nextval('nota_fiscal_item_lote_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_Sequencia_w,
				nr_item_nf_w,
				dt_validade_material_w,
				qt_material_lote_w,
				ds_lote_fornec_w,
				clock_timestamp(),
				nm_usuario_p,
				ie_indeterminado_w);			
			end;
		end loop;
		close C02;	
	end if;
	
	if (ie_tipo_w <> 'S') then
		select	coalesce(max(nr_seq_dev),0) +1
		into STRICT	nr_seq_item_dev_w
		from	emprestimo_material_dev
		where	nr_emprestimo	= nr_emprestimo_p
		and	nr_sequencia	= nr_seq_item_emprestimo_p;
		
		insert into emprestimo_material_dev(
			nr_emprestimo,
			nr_sequencia,
			nr_seq_dev,
			cd_material,
			qt_material,
			dt_atualizacao,
			nm_usuario,
			nr_seq_nota,
			nr_seq_item_nota)
		values (	nr_emprestimo_p,
			nr_seq_item_emprestimo_p,		
			nr_seq_item_dev_w,
			cd_material_p,
			qt_devolver_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_sequencia_w,
			nr_item_nf_w);
			
		select	coalesce(sum(qt_material),0)
		into STRICT	qt_material_dev_w
		from	emprestimo_material_dev
		where	nr_emprestimo	= nr_emprestimo_p	
		and	nr_sequencia	= nr_seq_item_emprestimo_p;
			
		update	emprestimo_material
		set	qt_material	= qt_emprestimo - qt_material_dev_w
		where	nr_emprestimo	= nr_emprestimo_p	
		and	nr_sequencia	= nr_seq_item_emprestimo_p;
		
		select	coalesce(sum(qt_material),0)
		into STRICT	qt_material_dev_w
		from	emprestimo_material
		where	nr_emprestimo = nr_emprestimo_p;
		
		if (qt_material_dev_w = 0) then
			update	emprestimo
			set	ie_situacao = 'B'
			where nr_emprestimo = nr_emprestimo_p;
		end if;
	end if;
elsif (ie_devolucao_emprestimo_p = 'DB') then -- Gerar nota fiscal de devolucao por barras
	
	nr_sequencia_w	:= nr_sequencia_p;
	
	if (ie_tipo_w = 'S') then
			
		ie_entrada_saida_w	:= 'E';
		ie_tipo_nota_w		:= ie_tipo_nota_p;
		cd_cgc_w		:= obter_cgc_estabelecimento(cd_estabelecimento_w);
		
		if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			ie_tipo_nota_w := 'EF'; /*Entrada pessoa fisica*/
		end if;		
	else
		ie_entrada_saida_w	:= 'S';
		ie_tipo_nota_w		:= 'SE'; /*Saida por emissao*/
		cd_cgc_w		:= cd_pessoa_juridica_w;
		cd_pessoa_juridica_w := obter_cgc_estabelecimento(cd_estabelecimento_w);
		
		if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			ie_tipo_nota_w := 'SF'; /*Saida pessoa fisica*/
		end if;
	
	end if;

    select	CASE WHEN ie_entrada_saida_w='S' THEN 'E'  ELSE 'S' END 
	into STRICT	ie_entrada_saida_ww
;
	
	if (nr_sequencia_w = 0) then

		select (coalesce(max(nr_sequencia_nf),0) + 1)
		into STRICT	nr_sequencia_nf_w
		from	nota_fiscal
		where	cd_estabelecimento		= cd_estabelecimento_w
		and	cd_cgc_emitente		= cd_pessoa_juridica_w
		and	nr_nota_fiscal		= nr_nota_fiscal_p
		and	cd_serie_nf		= cd_serie_nf_p;
	
		select	nextval('nota_fiscal_seq')
		into STRICT	nr_sequencia_w
		;

		insert	into nota_fiscal(
			nr_sequencia,
			cd_estabelecimento,
			cd_cgc_emitente,
			cd_cgc,
			cd_pessoa_fisica,
			cd_serie_nf,       
			nr_sequencia_nf,
			cd_operacao_nf,
			dt_emissao,
			dt_entrada_saida,
			ie_acao_nf,
			ie_emissao_nf,
			ie_tipo_frete,
			vl_mercadoria,
			vl_total_nota,
			qt_peso_bruto,
			qt_peso_liquido,
			vl_ipi,
			vl_descontos,
			vl_frete,
			vl_seguro,
			vl_despesa_acessoria,
			dt_atualizacao,
			nm_usuario,
			nr_nota_fiscal,
			cd_natureza_operacao,
			ie_situacao,
			ie_entregue_bloqueto,
			cd_setor_digitacao,
			ie_tipo_nota,
			cd_condicao_pagamento,
			nr_seq_modelo)
		values (	nr_sequencia_w,
			cd_estabelecimento_w,
			cd_pessoa_juridica_w,
			cd_cgc_w,
			cd_pessoa_fisica_w,
			cd_serie_nf_p,
			nr_sequencia_nf_w,
			cd_operacao_nota_p,
			dt_emissao_p,
			trunc(clock_timestamp(),'dd'),
			1,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			clock_timestamp(),
			nm_usuario_p,
			nr_nota_fiscal_p,
			cd_natureza_operacao_p,
			1,
			'N',
			cd_setor_digitacao_p,
			ie_tipo_nota_w,
			cd_condicao_pagamento_p,
			CASE WHEN nr_seq_modelo_p=0 THEN null  ELSE nr_seq_modelo_p END );

		select	coalesce(max(b.cd_operacao_estoque),0)
		into STRICT	cd_operacao_estoque_w
		from	operacao_estoque b,
			operacao_nota a
		where	a.cd_operacao_estoque	= b.cd_operacao_estoque
		and	a.cd_operacao_nf	= cd_operacao_nota_p;
	end if;
	
	select (coalesce(max(nr_item_nf),0) + 1)
	into STRICT	nr_item_nf_w
	from	nota_fiscal_item
	where	nr_sequencia	= nr_sequencia_w;

	select	nr_sequencia_nf
	into STRICT	nr_sequencia_nf_w
	from	nota_fiscal
	where	nr_sequencia = nr_Sequencia_w;
	
	if (cd_pessoa_juridica_w IS NOT NULL AND cd_pessoa_juridica_w::text <> '') then
		select	cd_tipo_pessoa
		into STRICT	cd_tipo_pessoa_w
		from	pessoa_juridica
		where	cd_cgc = cd_pessoa_juridica_w;
	end if;
		
	SELECT * FROM define_conta_material(
		cd_estabelecimento_w, cd_material_p, ie_tipo_conta_w, 0, 0, 0, 0, 0, 0, 0, cd_local_estoque_w, cd_operacao_estoque_w, trunc(clock_timestamp()), cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
			
        select	CASE WHEN c.ie_entrada_saida='S' THEN 'E'  ELSE 'S' END
	into STRICT	ie_entrada_nota_w
	from	operacao_nota b, operacao_estoque c
	where	b.cd_operacao_estoque = c.cd_operacao_estoque
	and	b.cd_operacao_nf = cd_operacao_nota_p;		

	if (coalesce(cd_pessoa_fisica_w::text, '') = '') then
		ie_tipo_pessoa_w := 'PJ';
	else
		ie_tipo_pessoa_w := 'PF';
	end if;
	
	nr_seq_conta_financeira_w := obter_conta_financeira(
		ie_entrada_saida_ww, cd_estabelecimento_w, cd_material_p, null, null, null, null, cd_pessoa_juridica_w, cd_centro_custo_w, nr_seq_conta_financeira_w, null, cd_operacao_nota_p, ie_tipo_pessoa_w, null, null, null, null, cd_pessoa_fisica_w, null, null, null, null, cd_local_estoque_w, '', '', '', null, null, null);	
	
	if (nr_seq_conta_financeira_w = 0) then
		nr_seq_conta_financeira_w := null;
	end if;					
				
	vl_unitario_item_w := 0;		
	if (ie_opcao_valor_p = 0) then
		vl_unitario_item_w := obter_custo_medio_material(cd_estabelecimento_w, trunc(clock_timestamp(),'mm'), cd_material_p);
	elsif (ie_opcao_valor_p = 1) then
		vl_unitario_item_w := obter_valor_ultima_compra(cd_estabelecimento_w, 99999, cd_material_p, null, 'N');
	elsif (ie_opcao_valor_p = 2) then
		select	vl_referencia
		into STRICT	vl_unitario_item_w
		from	emprestimo_material
		where	nr_emprestimo = nr_emprestimo_p
		and	nr_sequencia = nr_seq_item_emprestimo_p;
	end if;
	
	valor_total_item_w	:= (qt_devolver_p * vl_unitario_item_w);
	vl_unitario_item_w	:= dividir(valor_total_item_w,qt_devolver_p);
		
	select	cd_material_estoque,
		substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque
	into STRICT	cd_material_estoque_w,
		cd_unidade_medida_estoque_w
	from	material
	where	cd_material = cd_material_p;

	if (coalesce(nr_seq_lote_p,0) > 0) then
		select	dt_validade,
			ds_lote_fornec
		into STRICT	dt_validade_w,
			ds_lote_fornec_w
		from	material_lote_fornec
		where	nr_sequencia = nr_seq_lote_p;
	end if;

	insert into nota_fiscal_item(
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_nota_fiscal,
		nr_sequencia_nf,
		nr_item_nf,
		cd_natureza_operacao,
		qt_item_nf,
		qt_item_estoque,
		vl_unitario_item_nf,
		vl_total_item_nf,
		dt_atualizacao,
		nm_usuario,
		vl_frete,
		vl_desconto,
		vl_despesa_acessoria,
		cd_material,
		vl_desconto_rateio,
		vl_seguro,
		nr_sequencia,
		vl_liquido,
		cd_unidade_medida_compra,
		cd_unidade_medida_estoque,
		cd_material_estoque,
		cd_local_estoque,
		cd_conta_contabil,
		cd_centro_custo,
		ie_indeterminado,
		nr_seq_lote_fornec,
		dt_validade,
		cd_lote_fabricacao,
		nr_seq_conta_financ,
		nr_emprestimo,
		nr_seq_item_emprestimo,
		ie_forma_gerado_empres,
		cd_sequencia_parametro)
	values (	cd_estabelecimento_w,
		cd_pessoa_juridica_w,
		cd_serie_nf_p,
		nr_nota_fiscal_p,
		nr_sequencia_nf_w,
		nr_item_nf_w,
		cd_natureza_operacao_p,
		qt_devolver_p,
		qt_devolver_p,
		vl_unitario_item_w,
		valor_total_item_w,
		clock_timestamp(),
		nm_usuario_p,
		0,
		0,
		0,
		cd_material_p,
		0,
		0,
		nr_sequencia_w,
		valor_total_item_w,
		cd_unidade_medida_estoque_w,
		cd_unidade_medida_estoque_w,
		cd_material_estoque_w,
		cd_local_estoque_w,
		cd_conta_contabil_w,
		cd_centro_custo_w,
		'N',
		CASE WHEN nr_seq_lote_p='0' THEN  ''  ELSE nr_seq_lote_p END ,
		dt_validade_w,
		ds_lote_fornec_w,
		nr_seq_conta_financeira_w,
		nr_emprestimo_p,
		nr_seq_item_emprestimo_p,
		'DN',
		philips_contabil_pck.get_parametro_conta_contabil);
		
	select	count(*)
	into STRICT	qt_existe_w
	from	emprestimo_material_lote b,
		emprestimo_material c
	where	b.nr_emprestimo	= nr_emprestimo_p
	and	c.nr_emprestimo = b.nr_emprestimo
	and	b.nr_seq_item_emprest = c.nr_sequencia
	and	c.cd_material = cd_material_p;
	
	if (qt_existe_w = 1) then
	
		select	max(a.ds_lote_fornec),
			max(a.dt_validade),
			coalesce(max(a.ie_indeterminada),'N'),
			max(nr_seq_lote_fornec)
		into STRICT	ds_lote_fornec_w,
			dt_validade_material_w,
			ie_indeterminado_w,
			nr_seq_lote_fornec_w
		from	emprestimo_material_lote a
		where	nr_emprestimo = nr_emprestimo_p
		and	nr_seq_item_emprest = nr_seq_item_emprestimo_p;
		
		update	nota_fiscal_item
		set	cd_lote_fabricacao	= ds_lote_fornec_w,
			dt_validade		= dt_validade_material_w,
			ie_indeterminado	= ie_indeterminado_w,
			nr_seq_lote_fornec	= nr_seq_lote_fornec_w
		where	nr_sequencia		= nr_sequencia_w
		and	nr_item_nf		= nr_item_nf_w;
	
	elsif (qt_existe_w > 1) then
		open C02;
		loop
		fetch C02 into	
			ds_lote_fornec_w,
			dt_validade_material_w,
			ie_indeterminado_w,
			qt_material_lote_w,
			nr_seq_lote_fornec_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
	
			insert into nota_fiscal_item_lote(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_nota,
				nr_item_nf,
				dt_validade,
				qt_material,
				cd_lote_fabricacao,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_indeterminado,
				nr_seq_lote_fornec)
			values (	nextval('nota_fiscal_item_lote_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_Sequencia_w,
				nr_item_nf_w,
				dt_validade_material_w,
				qt_material_lote_w,
				ds_lote_fornec_w,
				clock_timestamp(),
				nm_usuario_p,
				ie_indeterminado_w,
				nr_seq_lote_fornec_w);
			end;
		end loop;
		close C02;	
	end if;

	qt_emprestimo_ww := qt_devolver_p;
end if;

nr_sequencia_p 		 := nr_sequencia_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nota_fiscal_emprestimo ( nr_emprestimo_p bigint, nr_nota_fiscal_p text, cd_serie_nf_p text, dt_emissao_p timestamp, cd_operacao_nota_p bigint, cd_natureza_operacao_p bigint, nr_seq_modelo_p bigint, cd_condicao_pagamento_p bigint, cd_setor_digitacao_p bigint, ie_opcao_valor_p bigint, ie_devolucao_emprestimo_p text, cd_material_p bigint, nr_seq_lote_p bigint, nr_seq_item_emprestimo_p bigint, qt_devolver_p bigint, ie_tipo_nota_p text, nm_usuario_p text, nr_sequencia_p INOUT bigint) FROM PUBLIC;

