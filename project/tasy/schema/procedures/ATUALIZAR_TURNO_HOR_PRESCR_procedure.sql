-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_turno_hor_prescr ( nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

		
nr_prescricao_w			bigint;
nr_seq_horario_w		bigint;
cd_local_estoque_w		bigint;
ie_ajusta_proc_lote_w	varchar(1);
cd_estabelecimento_w	smallint;
nr_seq_item_w			bigint;
ie_local_horario_w		varchar(1) := 'N';
ie_gedipa_atual_w		varchar(1);
ie_gedipa_anterior_w	varchar(1);
nr_seq_lote_w			ap_lote.nr_sequencia%type;
dt_horario_w			prescr_mat_hor.dt_horario%type;
nr_lote_agrupamento_w	ap_lote.nr_lote_agrupamento%type;
nr_seq_turno_w			ap_lote.nr_seq_turno%type;
		
c01 CURSOR FOR
SELECT	a.nr_prescricao
from	prescr_medica a
where	a.nr_atendimento = nr_atendimento_p
and	coalesce(a.dt_baixa::text, '') = ''
and	exists (	SELECT	1
		from	prescr_material b
		where	a.nr_prescricao	= b.nr_prescricao
		and	b.cd_motivo_baixa	= 0)
and	not exists (	select	1
		from	cirurgia x
		where	x.nr_prescricao = a.nr_prescricao);
		
c02 CURSOR FOR
SELECT	coalesce(b.cd_local_estoque,a.cd_local_estoque),
	b.nr_sequencia,
	a.nr_sequencia
from	prescr_material a,
	prescr_mat_hor b
where	b.nr_prescricao = a.nr_prescricao
and	b.nr_seq_material = a.nr_sequencia
and	coalesce(a.dt_suspensao::text, '') = ''
and	coalesce(b.dt_suspensao::text, '') = ''
and	a.nr_prescricao = nr_prescricao_w;


BEGIN

open c01;
loop
fetch c01 into
	nr_prescricao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	CALL define_local_disp_prescr(nr_prescricao_w, NULL, obter_perfil_ativo, nm_usuario_p);
	open C02;
	loop
	fetch C02 into	
		cd_local_estoque_w,
		nr_seq_horario_w,
		nr_seq_item_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
	
		ie_local_horario_w := obter_param_usuario(924, 851, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_local_horario_w);
		if (ie_local_horario_w = 'S') then
			CALL define_disp_prescr_mat_hor(nr_seq_horario_w, nr_prescricao_w, nr_seq_item_w, obter_perfil_ativo, nm_usuario_p);
		end if;
		
		update	prescr_mat_hor
		set	nr_seq_turno	= Obter_turno_horario_prescr(cd_estabelecimento_p,cd_setor_atendimento_p,to_char(dt_horario,'hh24:mi'),cd_local_estoque_w)
		where	nr_sequencia	= nr_seq_horario_w;
		
	end loop;
	close C02;
	-- Niumar OS 861067

	--Gerar_Lote_Atend_Prescricao(nr_prescricao_w, 0, 0, 'N', nm_usuario_p, 'GPMH');
	
	open C02;
	loop
	fetch C02 into	
		cd_local_estoque_w,
		nr_seq_horario_w,
		nr_seq_item_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
	
		select	coalesce(max(nr_seq_lote), 0),
			max(dt_horario)
		into STRICT	nr_seq_lote_w,
			dt_horario_w
		from	prescr_mat_hor
		where	nr_sequencia = nr_seq_horario_w;
		
		select	coalesce(max(nr_lote_agrupamento),0)
		into STRICT	nr_lote_agrupamento_w
		from	ap_lote
		where 	nr_sequencia = nr_seq_lote_w;
		
		nr_seq_turno_w := Obter_turno_horario_prescr(cd_estabelecimento_p,cd_setor_atendimento_p,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
		
		if (nr_seq_lote_w > 0) then
			update	ap_lote
			set		nr_seq_turno = nr_seq_turno_w,
					dt_atualizacao = clock_timestamp(),
					nm_usuario = nm_usuario_p
			where	nr_sequencia = nr_seq_lote_w
			and		ie_status_lote = 'G';
		
		
			if (nr_lote_agrupamento_w > 0) then
				update	ap_lote
				set		nr_seq_turno = nr_seq_turno_w,
						dt_atualizacao = clock_timestamp(),
						nm_usuario = nm_usuario_p
				where	nr_sequencia = nr_lote_agrupamento_w
				and		ie_status_lote = 'G';
			end if;
		end if;
	end loop;
	close C02;
	
	end;
	
end loop;
close c01;
		
if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_turno_hor_prescr ( nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

