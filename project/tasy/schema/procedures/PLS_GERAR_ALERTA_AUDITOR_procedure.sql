-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_alerta_auditor ( ie_tipo_evento_p bigint, nr_seq_auditoria_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Enviar SMS/Email/CI para o grupo auditor que falta realizar análise.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------
Referências:

	IE_STATUS_ENVIO_P: 	E - Mensagem enviada
				A - Aguardando envio

	IE_FORMA_ENVIO_P:		EM - Email
				CI - Comunicação interna
				SMS - SMS

	PLS_GERAR_ALERTA_EVENTO
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_guia_w			pls_auditoria.cd_guia%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_pessoa_fisica_usuario_w	pessoa_fisica.cd_pessoa_fisica%type;
cd_procedimento_w		procedimento.cd_procedimento%type;
cd_usuario_plano_w		pls_segurado_carteira.cd_usuario_plano%type;
ds_atributo_w			varchar(4000)	:= '';
ds_destinatario_w		varchar(255);
ds_email_dest_w			usuario.ds_email%type;
ds_email_remetente_w		pls_alerta_evento_mensagem.ds_remetente_email%type;
ds_mensagem_regra_w		pls_alerta_evento_mensagem.ds_mensagem%type;
ds_remetente_w			pls_alerta_evento_mensagem.ds_remetente_sms%type;
ds_titulo_w			pls_alerta_evento_mensagem.ds_titulo%type;
dt_validade_senha_w		varchar(10)	:= null;
id_sms_w			pls_alerta_evento_cont_des.id_sms%type;
ie_forma_envio_w		pls_alerta_evento_destino.ie_forma_envio%type;
ie_origem_proced_w		procedimento.ie_origem_proced%type;
ie_tipo_auditoria_w		pls_grupo_auditor.ie_tipo_auditoria%type;
ie_tipo_envio_w			pls_alerta_evento_mensagem.ie_tipo_envio%type;
ie_tipo_pessoa_dest_w		pls_alerta_evento_destino.ie_tipo_pessoa_dest%type;
qt_macro_regra_w		integer	:= 0;
qt_tamanho_atributo_w		bigint;
nm_beneficiario_w		pessoa_fisica.nm_pessoa_fisica%type;
nm_usuario_destino_w		varchar(15);
nm_usuario_exec_w		usuario.nm_usuario%type;
nm_usuarios_lista_w		varchar(4000);
nr_pos_virgula_w		integer;
nr_seq_aud_grupo_w		pls_auditoria_grupo.nr_sequencia%type;
nr_seq_evento_controle_w	pls_alerta_evento_controle.nr_sequencia%type;
nr_seq_evento_dest_w		pls_alerta_evento_destino.nr_sequencia%type;
nr_seq_evento_mens_w  		pls_alerta_evento_mensagem.nr_sequencia%type;
nr_seq_grupo_w			pls_grupo_auditor.nr_sequencia%type;
nr_seq_guia_w			pls_guia_plano.nr_sequencia%type;
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;
nr_seq_regra_evento_w		pls_regra_geracao_evento.nr_sequencia%type;
nr_seq_requisicao_w		pls_requisicao.nr_sequencia%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
nr_seq_tipo_evento_w		pls_tipo_alerta_evento.nr_sequencia%type;
cd_lista_proc_w			varchar(510) := '';
ie_lista_orig_proc_w		varchar(255) := '';
ie_consiste_destinatario_sms	varchar(1);
ie_lista_status_proc_w		varchar(4000) := '';
ie_status_proc_w		varchar(255) := '';

C01 CURSOR FOR
	SELECT	nr_seq_evento_mens,
		nr_sequencia
	from	pls_regra_geracao_evento
	where	ie_situacao 		= 'A'
	and	ie_evento_disparo 	= ie_tipo_evento_p
	and	((ie_tipo_grupo_auditor = 'A')
	or (ie_tipo_grupo_auditor = 'I' and ie_tipo_auditoria_w = 1)
	or (ie_tipo_grupo_auditor = 'E' and ie_tipo_auditoria_w = 2));

C02 CURSOR FOR
	SELECT	nr_sequencia,
		ie_forma_envio,
		ie_tipo_pessoa_dest
	from	pls_alerta_evento_destino
	where	ie_situacao 		= 'A'
	and	nr_seq_evento_mens	= nr_seq_evento_mens_w;

C03 CURSOR FOR
	SELECT	nm_usuario_exec
	from	pls_membro_grupo_aud
	where	nr_seq_grupo	= nr_seq_grupo_w
	and	ie_situacao	= 'A'
	order by nr_sequencia;

C04 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		CASE WHEN ie_status='A' THEN 'Aprovado' WHEN ie_status='N' THEN 'Negado'  ELSE 'Pendente' END
	from	pls_auditoria_item
	where	nr_seq_auditoria = nr_seq_auditoria_p
	and	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '');


BEGIN

nr_seq_aud_grupo_w	:= pls_obter_grupo_analise_atual(nr_seq_auditoria_p);

begin
	select	nr_seq_grupo
	into STRICT	nr_seq_grupo_w
	from	pls_auditoria_grupo
	where	nr_sequencia		= nr_seq_aud_grupo_w;
exception
when others then
	nr_seq_grupo_w	:= '';
end;

begin
	select	ie_tipo_auditoria
	into STRICT	ie_tipo_auditoria_w
	from	pls_grupo_auditor
	where	nr_sequencia	= nr_seq_grupo_w;
exception
when others then
	ie_tipo_auditoria_w	:= '';
end;

select	nr_seq_guia,
	nr_seq_requisicao,
	cd_guia,
	nr_seq_prestador,
	nr_seq_segurado,
	pls_obter_dados_segurado(nr_seq_segurado, 'PF'),
	cd_estabelecimento
into STRICT	nr_seq_guia_w,
	nr_seq_requisicao_w,
	cd_guia_w,
	nr_seq_prestador_w,
	nr_seq_segurado_w,
	cd_pessoa_fisica_w,
	cd_estabelecimento_w
from	pls_auditoria
where	nr_sequencia = nr_seq_auditoria_p;

begin
ie_consiste_destinatario_sms := OBTER_VALOR_PARAM_USUARIO(0,214,0,wheb_usuario_pck.get_nm_usuario,wheb_usuario_pck.get_cd_estabelecimento);

nm_beneficiario_w	:= substr(pls_obter_dados_segurado(nr_seq_segurado_w, 'N'),1,70);
exception
when others then
	nm_beneficiario_w	:= null;
end;

begin
cd_usuario_plano_w	:= substr(pls_obter_dados_segurado(nr_seq_segurado_w,'CR'),1,20);
exception
when others then
	cd_usuario_plano_w	:= null;
end;

if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
	select	to_char(max(dt_validade_senha),'dd/mm/yyyy')
	into STRICT	dt_validade_senha_w
	from	pls_requisicao
	where	nr_sequencia	= nr_seq_requisicao_w;
end if;

open C01;
loop
fetch C01 into
	nr_seq_evento_mens_w,
	nr_seq_regra_evento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	ds_mensagem,
		ie_tipo_envio,
		ds_titulo,
		nr_seq_tipo_evento,
		ds_remetente_email,
		ds_remetente_sms
	into STRICT	ds_mensagem_regra_w,
		ie_tipo_envio_w,
		ds_titulo_w,
		nr_seq_tipo_evento_w,
		ds_email_remetente_w,
		ds_remetente_w
	from	pls_alerta_evento_mensagem
	where 	ie_situacao 		= 'A'
	and	nr_sequencia = nr_seq_evento_mens_w;

	open C02;
	loop
	fetch C02 into
		nr_seq_evento_dest_w,
		ie_forma_envio_w,
		ie_tipo_pessoa_dest_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */

		if (coalesce(nr_seq_evento_controle_w::text, '') = '') then

			select	nextval('pls_alerta_evento_controle_seq')
			into STRICT	nr_seq_evento_controle_w
			;

			insert into pls_alerta_evento_controle(
					nr_sequencia, dt_geracao_evento, ie_evento_disparo,
					nr_seq_tipo_evento, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, ds_mensagem,
					ds_titulo, ie_tipo_envio, nr_seq_auditoria)
				values (	nr_seq_evento_controle_w, clock_timestamp(), ie_tipo_evento_p,
					nr_seq_tipo_evento_w, clock_timestamp(), nm_usuario_p,
					clock_timestamp(), nm_usuario_p, ds_mensagem_regra_w,
					ds_titulo_w,ie_tipo_envio_w, nr_seq_auditoria_p);
		end if;

		select	count(1)
		into STRICT	qt_macro_regra_w
		
		where	ds_mensagem_regra_w like '%@%';

		if ( qt_macro_regra_w > 0) then
			open C04;
				loop
				fetch C04 into
					cd_procedimento_w,
					ie_origem_proced_w,
					ie_status_proc_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin
					cd_lista_proc_w  := substr(cd_lista_proc_w || cd_procedimento_w || ',',1,510);
					ie_lista_orig_proc_w := substr(ie_lista_orig_proc_w || ie_origem_proced_w || ',',1,255);
					ie_lista_status_proc_w := substr(ie_lista_status_proc_w || ie_status_proc_w || ',',1,4000);
					end;
				end loop;
			close C04;

			ds_mensagem_regra_w := substr(pls_substituir_macros(ds_mensagem_regra_w, null, nr_seq_auditoria_p, null, cd_lista_proc_w, ie_lista_orig_proc_w, ie_lista_status_proc_w),1,4000);
		end if;

		if (ie_forma_envio_w = 'EM') and (coalesce(ds_email_remetente_w,'X') <> 'X') then
			if (ie_tipo_pessoa_dest_w = 'AU') then
				open C03;
				loop
				fetch C03 into
					nm_usuario_exec_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin
					select	ds_email
					into STRICT	ds_email_dest_w
					from	usuario
					where	nm_usuario	= nm_usuario_exec_w;

					if (coalesce(ds_email_dest_w,'X') <> 'X') then
						CALL enviar_email(	ds_titulo_w, ds_mensagem_regra_w, ds_email_remetente_w,
								ds_email_dest_w, nm_usuario_p, 'M');
					end if;
					end;
				end loop;
				close C03;
			elsif (ie_tipo_pessoa_dest_w = 'BE') then
				ds_email_dest_w := pls_obter_dados_segurado(nr_seq_segurado_w,'E');

				if (coalesce(ds_email_dest_w,'X') <> 'X') then
					CALL enviar_email(	ds_titulo_w, ds_mensagem_regra_w, ds_email_remetente_w,
							ds_email_dest_w, nm_usuario_p, 'M');
				end if;
			elsif (ie_tipo_pessoa_dest_w = 'PR') then
				ds_email_dest_w := pls_obter_dados_prestador(nr_seq_prestador_w,'M');

				if (coalesce(ds_email_dest_w,'X') <> 'X') then
					CALL enviar_email(	ds_titulo_w, ds_mensagem_regra_w, ds_email_remetente_w,
							ds_email_dest_w, nm_usuario_p, 'M');
				end if;
			end if;
		end if;

		if (ie_forma_envio_w = 'CI') then
			open C03;
			loop
			fetch C03 into
				nm_usuario_exec_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
					if (nm_usuario_exec_w IS NOT NULL AND nm_usuario_exec_w::text <> '') and (ds_mensagem_regra_w IS NOT NULL AND ds_mensagem_regra_w::text <> '') then
						CALL gerar_comunic_padrao(	clock_timestamp(), ds_titulo_w, ds_mensagem_regra_w,
									nm_usuario_p, 'N', nm_usuario_exec_w,
									'N', null, null,
									cd_estabelecimento_w, null, clock_timestamp(),
									null, null);
					end if;

					nm_usuarios_lista_w	:= nm_usuario_exec_w || ',';

					while(nm_usuarios_lista_w IS NOT NULL AND nm_usuarios_lista_w::text <> '') loop
						begin
						nr_pos_virgula_w	:= position(',' in nm_usuarios_lista_w);
						if (nr_pos_virgula_w > 0) then
							nm_usuario_destino_w	:= substr(nm_usuarios_lista_w,1,nr_pos_virgula_w-1);
							nm_usuarios_lista_w	:= substr(nm_usuarios_lista_w,nr_pos_virgula_w+1,length(nm_usuarios_lista_w));

							if (nm_usuario_destino_w IS NOT NULL AND nm_usuario_destino_w::text <> '') and (ds_mensagem_regra_w IS NOT NULL AND ds_mensagem_regra_w::text <> '') and (coalesce(nr_seq_evento_controle_w, 0) > 0) then
								CALL pls_gerar_destino_evento(nr_seq_evento_controle_w,
											'E',
											ie_forma_envio_w,
											nm_usuario_p,
											cd_pessoa_fisica_w,
											nm_usuario_destino_w,
											ds_mensagem_regra_w,
											null,
											null);
							end if;
						end if;
						end;
					end loop;
				end;
			end loop;
			close C03;
		end if;

		if (ie_forma_envio_w = 'SMS') then
			open C03;
			loop
			fetch C03 into
				nm_usuario_exec_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
					if (nm_usuario_exec_w IS NOT NULL AND nm_usuario_exec_w::text <> '') then
					begin
						select	cd_pessoa_fisica
						into STRICT	cd_pessoa_fisica_usuario_w
						from	usuario
						where	nm_usuario = nm_usuario_exec_w;
					exception
					when others then
						cd_pessoa_fisica_usuario_w := null;
					end;

					if (cd_pessoa_fisica_usuario_w IS NOT NULL AND cd_pessoa_fisica_usuario_w::text <> '') then
						begin
							select	CASE WHEN ie_consiste_destinatario_sms='N' THEN nr_ddi_celular || nr_telefone_celular  ELSE nr_telefone_celular END
							into STRICT	ds_destinatario_w
							from	pessoa_fisica
							where	cd_pessoa_fisica = cd_pessoa_fisica_usuario_w;
						exception
						when others then
							ds_destinatario_w := null;
						end;
					end if;

					ds_remetente_w		:= substr(ds_remetente_w,0,40);
					ds_destinatario_w	:= substr(ds_destinatario_w,0,40);

					if (ds_remetente_w IS NOT NULL AND ds_remetente_w::text <> '') and (ds_destinatario_w IS NOT NULL AND ds_destinatario_w::text <> '') and (ds_mensagem_regra_w IS NOT NULL AND ds_mensagem_regra_w::text <> '') then

						ds_destinatario_w	:= replace(ds_destinatario_w,'(','');
						ds_destinatario_w	:= replace(ds_destinatario_w,')','');
						ds_destinatario_w	:= replace(ds_destinatario_w,'-','');

						id_sms_w := pls_enviar_sms_alerta_evento(	ds_remetente_w, ds_destinatario_w, substr(ds_mensagem_regra_w,1,150), nr_seq_tipo_evento_w, nm_usuario_p, id_sms_w);
						CALL pls_gerar_destino_evento(nr_seq_evento_controle_w, 'E', ie_forma_envio_w,
									nm_usuario_p, cd_pessoa_fisica_usuario_w, nm_usuario_destino_w,
									ds_mensagem_regra_w, id_sms_w, ds_destinatario_w);
						if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
							CALL pls_requisicao_gravar_hist(	nr_seq_requisicao_w,
											'AG',
											'Remetente: ' || ds_remetente_w || chr(13) || chr(10) ||
											'Destino: ' || ds_destinatario_w || chr(13) || chr(10) ||
											'Mensagem: ' || chr(13) || chr(10) ||
											substr(ds_mensagem_regra_w,1,150), null, nm_usuario_p);
						end if;
					end if;
					end if;
				end;
			end loop;
			close C03;
		end if;
	end loop;
	close C02;
	end;
end loop;
close C01;

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_alerta_auditor ( ie_tipo_evento_p bigint, nr_seq_auditoria_p bigint, nm_usuario_p text) FROM PUBLIC;

