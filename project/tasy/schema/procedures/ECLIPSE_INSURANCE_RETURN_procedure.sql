-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE eclipse_insurance_return ( ie_type_message_p text, nr_seq_transaction_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_dvr_w			dvr_response.nr_sequencia%type;
cd_provider_w   varchar(20);
cd_veteran_w varchar(20);
vl_paid_w			dvr_response.vl_paid%type;
cd_claim_w			dvr_response.cd_claim%type;
vl_charge_w			dvr_response.vl_charge%type;
nr_seq_request_w		dvr_response.nr_seq_request%type;
nr_seq_transaction_w		dvr_response.nr_seq_transaction%type;
nr_patient_account_w		dva_claim.nr_interno_conta%type;
nr_seq_return_w 		convenio_retorno.nr_sequencia%type;
nr_seq_ret_item_w		convenio_retorno_item.nr_sequencia%type;
vl_denied_w			convenio_retorno_item.vl_amenor%type;
vl_additional_w			convenio_retorno_item.vl_adicional%type;
cd_convenio_parametro_w		conta_paciente.cd_convenio_parametro%type;
vl_form_w			conta_paciente_guia.vl_guia%type;
cd_authorization_w		conta_paciente_guia.cd_autorizacao%type;
nr_seq_item_denied_w		convenio_retorno_glosa.nr_sequencia%type;
ds_notes_w			convenio_retorno_glosa.ds_observacao%type;
ds_code_w			eclipse_status_codes.ds_code%type;
ovs_cd_status_w  ovs_response.cd_status%type;

ovs_process_status_w  ovs_response.cd_process_status%type;
ovs_CD_CLM_ASSES_FUND_w ovs_response.CD_CLM_ASSES_FUND%type;
ovs_CD_FUND_EXPLANATION_w OVS_RESPONSE_EXP.CD_FUND_EXPLANATION%type;
ovs_DS_FUND_EXPLANATION_w OVS_RESPONSE_EXP.DS_FUND_EXPLANATION%type;
ovs_cd_fund_status_w  ovs_response.cd_fund_status%type;

nr_seq_claim_w  		ihc_response.nr_seq_claim%type;
qt_insurance_item_w		integer := 0;
cd_rsn_desc_w  varchar(4000);
ds_history_w varchar(4000);
nr_hist_seq_w bigint;

-- Expression constants.
form_not_informed_w		varchar(200) := wheb_mensagem_pck.get_texto(1097738);
vl_co_pay_w 			ihc_response.vl_co_pay%type;
vl_excess_amt_w			ihc_response.vl_excess_amt%type;
vl_charge_service_w 		ihc_service_response.vl_charge%type;
vl_paid_service_w 		ihc_service_response.vl_fund_benefit%type;
nr_return_count_w		bigint;
vl_chrg_w 			bigint;
vl_pai_w 			bigint;
nr_seq_ovs_w bigint;
nm_family_w  varchar(50);
nm_first_w varchar(50);
 cd_medicare_card_w varchar(10);
  nr_patient_ref_w varchar(1);
  ie_medicare_card_w varchar(1);
  ds_service_details_w varchar(4000);

cDVRVoucher CURSOR(nr_seq_dvr_w bigint) FOR
	SELECT	nr_sequencia,
		dt_atualizacao,
		ie_card,
		dt_service,
		nm_family,
		nm_first,
		cd_provider,
		cd_veteran,
		nr_voucher
	from	dvr_response_voucher
	where	nr_seq_response = nr_seq_dvr_w;

cDVRServices CURSOR(nr_seq_voucher_w bigint) FOR
	SELECT  a.cd_item,
		( SELECT max(g.cd_procedimento) from procedimento_paciente g,
                                        procedimento h,
                                        dva_claim d where
                                        g.nr_interno_conta 	= d.NR_INTERNO_CONTA
                                        and     d.nr_seq_transaction 	= c.nr_seq_transaction
                                        and     g.cd_procedimento 	= h.cd_procedimento
                                        and     g.ie_origem_proced 	= h.ie_origem_proced
                                        and     h.cd_procedimento_loc 	= (select max(f.cd_item) from dvr_response_service f where b.nr_sequencia 		= f.nr_seq_voucher )) cd_procedimento,
		( select max(g.ie_origem_proced) from procedimento_paciente g,
                                        procedimento h,
                                        dva_claim d where 
                                        g.nr_interno_conta 	= d.NR_INTERNO_CONTA
                                        and     d.nr_seq_transaction 	= c.nr_seq_transaction
                                        and     g.cd_procedimento 	= h.cd_procedimento
                                        and     g.ie_origem_proced 	= h.ie_origem_proced
                                        and     h.cd_procedimento_loc 	= (select max(f.cd_item) from dvr_response_service f where b.nr_sequencia 		= f.nr_seq_voucher )) ie_origem_proced,
		(select max(g.cd_setor_atendimento) from procedimento_paciente g,
                                        procedimento h,
                                        dva_claim d where 
                                        g.nr_interno_conta 	= d.NR_INTERNO_CONTA
                                        and     d.nr_seq_transaction 	= c.nr_seq_transaction
                                        and     g.cd_procedimento 	= h.cd_procedimento
                                        and     g.ie_origem_proced 	= h.ie_origem_proced
                                        and     h.cd_procedimento_loc 	= (select max(f.cd_item) from dvr_response_service f where b.nr_sequencia 		= f.nr_seq_voucher )) cd_setor_atendimento ,
		(select max(g.ie_emite_conta) from procedimento_paciente g,
                                        procedimento h,
                                        dva_claim d where 
                                       g.nr_interno_conta 	= d.NR_INTERNO_CONTA
                                        and     d.nr_seq_transaction 	= c.nr_seq_transaction
                                        and     g.cd_procedimento 	= h.cd_procedimento
                                        and     g.ie_origem_proced 	= h.ie_origem_proced
                                        and     h.cd_procedimento_loc 	= (select max(f.cd_item) from dvr_response_service f where b.nr_sequencia 		= f.nr_seq_voucher )) ie_emite_conta,
		(select max(g.qt_procedimento) from procedimento_paciente g,
                                        procedimento h,
                                        dva_claim d where 
                                        g.nr_interno_conta 	= d.NR_INTERNO_CONTA
                                        and     d.nr_seq_transaction 	= c.nr_seq_transaction
                                        and     g.cd_procedimento 	= h.cd_procedimento
                                        and     g.ie_origem_proced 	= h.ie_origem_proced
                                        and     h.cd_procedimento_loc 	= (select max(f.cd_item) from dvr_response_service f where b.nr_sequencia 		= f.nr_seq_voucher )) qt_procedimento,
		a.vl_charge,
		a.vl_service vl_paid,
		(Select max(g.cd_procedimento_convenio) from procedimento_paciente g,
                                        procedimento h,
                                        dva_claim d where 
                                        g.nr_interno_conta 	= d.NR_INTERNO_CONTA
                                        and     d.nr_seq_transaction 	= c.nr_seq_transaction
                                        and     g.cd_procedimento 	= h.cd_procedimento
                                        and     g.ie_origem_proced 	= h.ie_origem_proced
                                        and     h.cd_procedimento_loc 	= (select max(f.cd_item) from dvr_response_service f where b.nr_sequencia 		= f.nr_seq_voucher )) cd_procedimento_convenio,
		a.cd_explanation,
    (select max(ds_code) from eclipse_status_codes where cd_code = ''||a.cd_explanation) as ds_explanation,
     a.qt_patients,
    b.ie_card as ie_medicare_Card,
    (select e.dt_service 
       from  dva_claim d , dva_voucher e
       where d.nr_seq_transaction 	= c.nr_seq_transaction  
        and (e.nr_voucher)::numeric  = b.nr_voucher
       and d.nr_sequencia = e.nr_seq_claim)as dt_service,
    (select d.cd_provider  
       from  dva_claim d 
       where d.nr_seq_transaction 	= c.nr_seq_transaction) as cd_provider
    from    dvr_response_service a,
		dvr_response_voucher b,
		dvr_response c
	where   c.nr_sequencia 		= b.nr_seq_response
	and     b.nr_sequencia 		= a.nr_seq_voucher
  and     c.nr_sequencia	= (select max(x.nr_sequencia) from dvr_response x where x.nr_seq_transaction =  nr_seq_transaction_p );

  cDPRVoucher CURSOR(nr_seq_dvr_w bigint) FOR
		SELECT	b.nr_sequencia,
		b.dt_atualizacao,
		b.dt_service,
		b.nm_family,
		b.nm_first,
		b.CD_PROVIDER,
		b.nr_voucher,
		b.ie_medicare_Card
	from	dpr_response a,
        DPR_RESPONSE_VOUCHER b
      
	where	a.nr_sequencia = nr_seq_dvr_w
  and   b.NR_SEQ_RESPONSE = a.nr_sequencia;
  --and c.nr_seq_voucher = b.nr_sequencia;
cDPRServices CURSOR(nr_seq_voucher_w bigint) FOR
	SELECT  a.cd_item,
		 ( SELECT max(g.cd_procedimento) from procedimento_paciente g,
                                        procedimento h where
                                        g.nr_interno_conta 	= d.nr_seq_account
                                        and     g.cd_procedimento 	= h.cd_procedimento
                                        and     g.ie_origem_proced 	= h.ie_origem_proced
                                        and     h.cd_procedimento_loc 	= (select max(f.cd_item) from dbs_item f where e.nr_sequencia 		= f.nr_seq_voucher )) cd_proc,
		(select max(g.ie_origem_proced) from procedimento_paciente g,
                                        procedimento h where 
                                        g.nr_interno_conta 	= d.nr_seq_account
                                        and     g.cd_procedimento 	= h.cd_procedimento
                                        and     g.ie_origem_proced 	= h.ie_origem_proced
                                        and     h.cd_procedimento_loc 	= (select max(f.cd_item) from dbs_item f where e.nr_sequencia 		= f.nr_seq_voucher )) ie_origim,
		(select max(g.cd_setor_atendimento) from procedimento_paciente g,
                                        procedimento h where 
                                        g.nr_interno_conta 	= d.nr_seq_account
                                        and     g.cd_procedimento 	= h.cd_procedimento
                                        and     g.ie_origem_proced 	= h.ie_origem_proced
                                        and     h.cd_procedimento_loc 	= (select max(f.cd_item) from dbs_item f where e.nr_sequencia 		= f.nr_seq_voucher )) cd_setor,
		(select max(g.ie_emite_conta) from procedimento_paciente g,
                                        procedimento h where 
                                        g.nr_interno_conta 	= d.nr_seq_account
                                        and     g.cd_procedimento 	= h.cd_procedimento
                                        and     g.ie_origem_proced 	= h.ie_origem_proced
                                        and     h.cd_procedimento_loc 	= (select max(f.cd_item) from dbs_item f where e.nr_sequencia 		= f.nr_seq_voucher )) ie_emit,
		(select max(g.qt_procedimento) from procedimento_paciente g,
                                        procedimento h where 
                                        g.nr_interno_conta 	= d.nr_seq_account
                                        and     g.cd_procedimento 	= h.cd_procedimento
                                        and     g.ie_origem_proced 	= h.ie_origem_proced
                                        and     h.cd_procedimento_loc 	= (select max(f.cd_item) from dbs_item f where e.nr_sequencia 		= f.nr_seq_voucher )) qt_proc,
    (select max(g.cd_procedimento_convenio) from procedimento_paciente g,
                                        procedimento h where 
                                        g.nr_interno_conta 	= d.nr_seq_account
                                        and     g.cd_procedimento 	= h.cd_procedimento
                                        and     g.ie_origem_proced 	= h.ie_origem_proced
                                        and     h.cd_procedimento_loc 	= (select max(f.cd_item) from dbs_item f where e.nr_sequencia 		= f.nr_seq_voucher ) ) cd_proc_conve,
		a.vl_charge,
		a.vl_service vl_paid,
		(select max(g.cd_procedimento_convenio) from procedimento_paciente g,
                                        procedimento h where 
                                        g.nr_interno_conta 	= d.nr_seq_account
                                        and     g.cd_procedimento 	= h.cd_procedimento
                                        and     g.ie_origem_proced 	= h.ie_origem_proced
                                        and     h.cd_procedimento_loc 	= (select max(f.cd_item) from dbs_item f where e.nr_sequencia 		= f.nr_seq_voucher )),
          a.cd_explanation,
          a.cd_service,
          a.qt_patients qt_pat,
          a.vl_service vl_ser,
          a.vl_charge vl_chrg
	from    dpr_response_service a,
          dpr_response_voucher b,
          dpr_response c,
          dbs_claim d,
        dbs_voucher e
	where   c.nr_sequencia 		= b.nr_seq_response
	and     b.nr_sequencia 		= a.nr_seq_voucher
	and     d.nr_seq_transaction 	= c.cd_seq_transaction
	and     e.nr_seq_claim 		= d.nr_sequencia
	and	    b.nr_sequencia 		= nr_seq_voucher_w
	and     c.cd_seq_transaction	= nr_seq_transaction_p;




cIHCResponse CURSOR(nr_seq_claim_w bigint) FOR
	SELECT	nr_sequencia,
		dt_atualizacao,
		vl_co_pay,
    vl_charge,
		vl_excess_amt,
		vl_total_benefit,
		cd_clm_asses_fund,
		cd_status,
		cd_facility,
		cd_fund_brand,
		cd_fund_status,
		nr_account,
    cd_fund_ref
	from	ihc_response
	where	nr_seq_claim = nr_seq_claim_w;

cIHCResponseDetail CURSOR(nr_seq_response_w bigint) FOR
	SELECT ds_claim_exp,
          cd_claim_exp,
          ds_Element,
          ds_message
	from ihc_response_details
	where nr_seq_response = nr_seq_response_w;

cIHCServices CURSOR(nr_seq_response_w bigint) FOR
	SELECT
    a.nr_sequencia,
    a.cd_service,
		g.cd_procedimento,
		g.ie_origem_proced,
		g.cd_setor_atendimento,
		g.ie_emite_conta,
		g.qt_procedimento,
		a.vl_charge,
		a.vl_fund_benefit vl_paid,
		g.cd_procedimento_convenio,
		a.ds_service,
    a.qt_service,
    a.dt_from,
    a.dt_End,
    a.dt_Service
	--	a.cd_explanation
	from    ihc_service_response a,
		ihc_response c,
		ihc_claim d,
		procedimento_paciente g,
		procedimento h
	where   c.nr_sequencia		= nr_seq_response_w 
	and	  c.nr_seq_claim 		= d.nr_sequencia
	and     g.nr_interno_conta 	= d.nr_account
	and     g.cd_procedimento 	= h.cd_procedimento
	and     g.ie_origem_proced 	= h.ie_origem_proced
	and     h.cd_procedimento_loc 	= a.cd_service 
	and     c.cd_transaction	= nr_seq_transaction_p;

  cIHCServiceDetails CURSOR(nr_seq_service_p bigint) FOR
    SELECT cd_exp_row ,
            cd_service_exp,
            ds_Service_exp
    from ihc_service_details
      where nr_seq_service = nr_seq_service_p;

cIMCServices CURSOR FOR
	SELECT	c.cd_procedimento,
			c.ie_origem_proced,
			c.cd_setor_atendimento,
			c.ie_emite_conta,
			c.qt_procedimento,
			coalesce(b.vl_charge,0) / 100 vl_charge,
			coalesce(b.vl_fund_benefit, 0) / 100 vl_paid,
			c.cd_procedimento_convenio
	from	imc_response a,
			imc_service_response b,
			procedimento_paciente c
	where	a.nr_sequencia = b.nr_seq_response
	and		b.nr_seq_response = nr_seq_dvr_w
	and		c.nr_interno_conta = a.nr_account
	and		a.cd_transaction = nr_seq_transaction_p;
	
cOSVServices CURSOR FOR
	SELECT	c.cd_procedimento,
			c.ie_origem_proced,
			c.cd_setor_atendimento,
			c.ie_emite_conta,
			c.qt_procedimento,
			coalesce(b.vl_charge,0) / 100 vl_charge,
			coalesce(b.vl_fund_benefit, 0) / 100 vl_paid,
			c.cd_procedimento_convenio
	from		ovs_response a,
			ovs_service_response b,
			procedimento_paciente c
	where		a.nr_sequencia = b.nr_seq_response
	and		b.nr_seq_response = nr_seq_ovs_w
	and		c.nr_interno_conta = a.nr_account
	and		a.cd_transaction = nr_seq_transaction_p;

/*
ie_type_message_p
IHC -> IHC-RTV
DVA -> DVR
DBS -> DBR
IMC -> IMC-RTV
OVS -> OVS-RTV
*/
BEGIN
commit;
if (ie_type_message_p = 'DVR') then

	select	max(a.nr_sequencia),
			coalesce(max(a.vl_paid),0),
			max(a.cd_claim),
			coalesce(max(a.vl_charge),0),
			max(a.nr_seq_request),
			max(a.nr_seq_transaction),
			max(b.nr_interno_conta)
	into STRICT	nr_seq_dvr_w,
			vl_paid_w,
			cd_claim_w,
			vl_charge_w,
			nr_seq_request_w,
			nr_seq_transaction_w,
			nr_patient_account_w
	from	dvr_response a,
			dva_claim b
	where	a.nr_seq_transaction = b.nr_seq_transaction
	and		a.nr_seq_transaction = nr_seq_transaction_p;

elsif (ie_type_message_p = 'DPR') then

	select	max(a.nr_sequencia),
			coalesce(max(a.vl_paid),0),
			max(a.cd_claim),
			coalesce(max(a.vl_charge),0),
			max(a.nr_seq_request),
			max(a.cd_seq_transaction),
			max(b.nr_seq_account)
	into STRICT	nr_seq_dvr_w,
			vl_paid_w,
			cd_claim_w,
			vl_charge_w,
			nr_seq_request_w,
			nr_seq_transaction_w,
			nr_patient_account_w
	from	dpr_response a,
			dbs_claim b
	where	a.cd_seq_transaction = b.nr_seq_transaction
	and		a.cd_seq_transaction = nr_seq_transaction_p;

	select 	max(nr_seq_account)
	into STRICT 	nr_patient_account_w
	from 	dbs_claim
	where 	nr_seq_transaction = nr_seq_transaction_p;

elsif (ie_type_message_p = 'IHC-RTV') then

	select	max(a.nr_sequencia),
			coalesce(max(a.vl_total_benefit),0),
			max(a.nr_seq_claim),
			coalesce(max(a.vl_charge),0),
			max(a.cd_transaction)
	into STRICT 	nr_seq_dvr_w,
			vl_paid_w,
			nr_seq_claim_w,
			vl_charge_w,
			nr_seq_transaction_w
	from	ihc_response a
	where	a.cd_transaction = nr_seq_transaction_p;

	select 	max(nr_account)
	into STRICT 	nr_patient_account_w
	from 	ihc_claim
	where 	cd_transaction = nr_seq_transaction_p;

elsif (ie_type_message_p = 'OVS') then

	select	max(a.nr_sequencia),
		max(a.nr_account),
		max(a.nr_seq_claim),
		max(a.cd_transaction)
	
	into STRICT 	nr_seq_ovs_w,
		nr_patient_account_w,
		nr_seq_claim_w,
		nr_seq_transaction_w
	from	ovs_response a
	where	a.cd_transaction = nr_seq_transaction_p;

elsif (ie_type_message_p = 'IMC') then

	select	max(a.nr_sequencia),
			max(c.nr_seq_account),
			coalesce(sum(b.vl_charge), 0) / 100,
			coalesce(sum(b.vl_fund_benefit), 0) / 100,
			max(a.cd_transaction),
			max(a.nr_seq_claim)
	into STRICT	nr_seq_dvr_w,
			nr_patient_account_w,
			vl_charge_w,
			vl_paid_w,
			nr_seq_transaction_w,
			nr_seq_claim_w
	from	imc_response a,
			imc_service_response b,
      imc_claim c
	where a.cd_transaction = nr_seq_transaction_p
  and 	b.nr_seq_response = a.nr_sequencia
  and   c.nr_seq_transaction = a.cd_transaction;
end if;

select	max(cd_convenio_parametro)
into STRICT	cd_convenio_parametro_w
from	conta_paciente
where	nr_interno_conta = nr_patient_account_w;

select	coalesce(max(nr_sequencia),0)
into STRICT	nr_seq_return_w
from	convenio_retorno
where	cd_convenio = cd_convenio_parametro_w
and		ie_status_retorno = 'R' -- Received
and		clock_timestamp() between coalesce(dt_inicial,clock_timestamp()) and coalesce(dt_final,clock_timestamp());

select	max(b.vl_guia) vl_guia,
		max(coalesce(b.cd_autorizacao, form_not_informed_w)) cd_autorizacao
into STRICT	vl_form_w,
		cd_authorization_w
from	conta_paciente_guia b,
		conta_paciente a
where	a.nr_interno_conta = b.nr_interno_conta
and		a.nr_interno_conta = nr_patient_account_w
and		a.cd_convenio_parametro	= cd_convenio_parametro_w
and		a.ie_status_acerto = 2 -- Closed
and		coalesce(a.ie_cancelamento::text, '') = '';

if (nr_seq_return_w = 0) then -- Do not exist batch created opened
	select	nextval('convenio_retorno_seq')
	into STRICT	nr_seq_return_w
	;

	insert into convenio_retorno(
						nr_sequencia,
						cd_convenio,
						dt_retorno,
						ie_status_retorno,
						dt_atualizacao,
						nm_usuario,
						nm_usuario_retorno,
						nr_seq_protocolo,
						cd_estabelecimento,
						ds_lote_convenio,
						ie_tipo_glosa
					)
				values (
						nr_seq_return_w,
						cd_convenio_parametro_w,
						clock_timestamp(),
						'R', -- Received
						clock_timestamp(),
						nm_usuario_p,
						nm_usuario_p,
						null,
						cd_estabelecimento_p,
						ie_type_message_p || nr_seq_return_w,
						'N'
					);
end if;

if (ie_type_message_p = 'DVR') then
	begin
	vl_denied_w := vl_charge_w - vl_paid_w;
	vl_additional_w := 0;

	if (vl_denied_w < 0) then -- Identify the amount paid as additional
		vl_additional_w := vl_paid_w - vl_charge_w;
	end if;

	ds_notes_w := substr(	'Claim: ' || cd_claim_w || chr(13) || chr(10) ||
				'Transaction: ' || nr_seq_transaction_p,1,4000);

	select	count(*)
	into STRICT	nr_return_count_w
	from 	convenio_retorno_item
	where 	nr_interno_conta = nr_patient_account_w;

      select	
		max(b.nm_family),
		max(b.nm_first),
    max(b.cd_provider),
    max(b.cd_veteran)
into STRICT
  nm_family_w,
  nm_first_w,
  cd_provider_w,
  cd_veteran_w
	from	dVr_response a,
        DVR_RESPONSE_VOUCHER b,
        DVR_RESPONSE_SERVICE c
	where	a.nr_sequencia = nr_seq_dvr_w
  and   b.NR_SEQ_RESPONSE = a.nr_sequencia
  and c.nr_seq_voucher = b.nr_sequencia;		
		
		
			insert into convenio_retorno_hist(	nr_sequencia	,
			dt_historico 	,
			nm_usuario	,
			dt_liberacao	,
			ds_historico 	,
			nr_seq_retorno 	,
			dt_atualizacao	,
			ie_tipo_historico
		)
		values (	nextval('convenio_retorno_hist_seq'),
			clock_timestamp()		,
			nm_usuario_p	,
			clock_timestamp()		,
			'New record has been created in FORM tab for account number' || ' ' ||nr_patient_account_w || ' ' || 'with the following values' || CHR(13) ||
			'Additional value:' || ' ' || vl_additional_w || CHR(13) ||
			'Denied value:'     || ' ' || vl_denied_w     || CHR(13) ||
			'Amount Paid:'	    || ' ' || vl_paid_w       || CHR(13) ||
			'Claim Id:'         || ' ' || cd_claim_w       || CHR(13) ||
			
			'first name:'	    || ' ' || nm_first_w || CHR(13) ||
			'last name :'       || ' ' || nm_family_w || CHR(13) ||	
			'Provider Number:'	    || ' ' || cd_provider_w || CHR(13) ||
			'Veteran File number :'       || ' ' || cd_veteran_w || CHR(13)	,
			nr_seq_return_w ,
			clock_timestamp(),
			'U'
		);


	if (nr_return_count_w > 0) then
		delete	from 	convenio_retorno_glosa
		where 	nr_seq_ret_item in (SELECT	nr_sequencia
					    from  	convenio_retorno_item
					    where 	nr_interno_conta = nr_patient_account_w);
		update	convenio_retorno_item
		set	cd_autorizacao = cd_authorization_w,
			dt_atualizacao = clock_timestamp(),
			nm_usuario = nm_usuario_p,
			nr_seq_retorno = nr_seq_return_w,
			nr_interno_conta = nr_patient_account_w ,
			vl_adicional = vl_additional_w,
			vl_amenor = vl_denied_w,
			vl_pago = vl_paid_w,
			ds_observacao = ds_notes_w
		where 	nr_interno_conta = nr_patient_account_w;

		select 	max(nr_sequencia)
		into STRICT	nr_seq_ret_item_w
		from	convenio_retorno_item
		where 	nr_interno_conta = nr_patient_account_w;

	else

		select	nextval('convenio_retorno_item_seq')
		into STRICT	nr_seq_ret_item_w
		;

		insert into convenio_retorno_item(
							nr_sequencia,
							cd_autorizacao,
							dt_atualizacao,
							ie_analisada,
							ie_glosa,
							nm_usuario,
							nr_seq_retorno,
							nr_interno_conta,
							vl_adicional,
							vl_amenor,
							vl_glosado,
							vl_pago,
							ie_doc_retorno_origem,
							ds_observacao)
					values (
							nr_seq_ret_item_w,
							cd_authorization_w,
							clock_timestamp(),
							'N',
							'P',
							nm_usuario_p,
							nr_seq_return_w,
							nr_patient_account_w,
							vl_additional_w,	-- vl_adic_w
							vl_denied_w, 		-- vl_amenor_w
							0, 			-- vl_glosado
							vl_paid_w, 		-- vl_pago_w
							null,
							ds_notes_w);


	end if;


	for rDVRVoucher in cDVRVoucher(nr_seq_dvr_w) loop
		begin


		for rDVRServices in cDVRServices(rDVRVoucher.nr_sequencia) loop
			begin

--			select  nvl(max(ds_code), form_not_informed_w)
--			into	ds_code_w
--			from    eclipse_status_codes
--			where   cd_code = '' || rDVRServices.cd_explanation;
			ds_notes_w := '';

			vl_denied_w := rDVRServices.vl_charge - rDVRServices.vl_paid;

			select	nextval('convenio_retorno_glosa_seq')
			into STRICT	nr_seq_item_denied_w
			;

			insert	into convenio_retorno_glosa(
								nr_sequencia,
								nr_seq_ret_item,
								vl_glosa,
								dt_atualizacao,
								nm_usuario,
								cd_procedimento,
								ie_origem_proced,
								cd_setor_atendimento,
								ie_emite_conta,
								ie_atualizacao,
								vl_pago_digitado,
								qt_glosa,
								qt_cobrada,
								vl_cobrado,
								cd_item_convenio,
								cd_motivo_glosa,
								ds_observacao)
						values (
								nr_seq_item_denied_w,
								nr_seq_ret_item_w,
								vl_denied_w, 	-- vl_glosa_w
								clock_timestamp(),
								nm_usuario_p,
								rDVRServices.cd_procedimento,
								rDVRServices.ie_origem_proced,
								rDVRServices.cd_setor_atendimento,
								rDVRServices.ie_emite_conta,
								'N',
								rDVRServices.vl_paid,
								0, 		-- qt_glosa
								rDVRServices.qt_procedimento,
								rDVRServices.vl_charge,
								rDVRServices.cd_procedimento_convenio,
								null,		-- cd_motivo_glosa
								ds_notes_w ||  CHR(13)
								|| 'Voucher number:' || rDVRVoucher.nr_voucher
								|| 'Procedure :' || rDVRServices.cd_item || 
								CHR(13)|| 'Service date:'     || ' ' || rDVRServices.dt_service || CHR(13) ||
								'Provider Number:' || rDVRServices.cd_provider ||  CHR(13) ||
								CASE WHEN coalesce(rDVRServices.qt_patients::text, '') = '' THEN null  ELSE 'Total number of patients seen is: ' ||rDVRServices.qt_patients END  || CHR(13) ||
								CASE WHEN coalesce(rDVRServices.cd_explanation::text, '') = '' THEN  null  ELSE 'Explanation code :' || rDVRServices.cd_explanation || ' ' ||  rDVRServices.ds_explanation END  ||
								CASE WHEN rDVRServices.ie_medicare_Card ='I' THEN ' '''' I '''' - Patient Medicare issue number changed .Please update patient records with the provider information'  WHEN rDVRServices.ie_medicare_Card ='A' THEN ' '''' A '''' - Patient Medicare Number changed.Please update patient records with the provider information' END  || CHR(13) 
								
                );

			end;
		end loop; -- rDVRServices
		end;
	end loop; -- rDVRVoucher
	end;
end if;

if (ie_type_message_p = 'DPR') then
	
	
		begin
		vl_denied_w := vl_charge_w - vl_paid_w;

		vl_additional_w := 0;
		if (vl_denied_w < 0) then -- Identify the amount paid as additional
			vl_additional_w := vl_paid_w - vl_charge_w;
		end if;

		ds_notes_w := substr(	'Claim: ' || cd_claim_w || chr(13) || chr(10) ||
					'Transaction: ' || nr_seq_transaction_p,1,4000);
					
		select	count(*)
		into STRICT	nr_return_count_w
		from 	convenio_retorno_item
		where 	nr_interno_conta = nr_patient_account_w;

      select	
		max(b.nm_family),
		max(b.nm_first),
    max(cd_medicare_card),
  max(b.nr_patient_ref),
  max(ie_medicare_card)
into STRICT
  nm_family_w,
  nm_first_w,
  cd_medicare_card_w,
  nr_patient_ref_w,
  ie_medicare_card_w
	from	dpr_response a,
        DPR_RESPONSE_VOUCHER b,
        DPR_RESPONSE_SERVICE c
	where	a.nr_sequencia = nr_seq_dvr_w
  and   b.NR_SEQ_RESPONSE = a.nr_sequencia
  and c.nr_seq_voucher = b.nr_sequencia;
			
			insert into convenio_retorno_hist(	nr_sequencia	,
			dt_historico 	,
			nm_usuario	,
			dt_liberacao	,
			ds_historico 	,
			nr_seq_retorno 	,
			dt_atualizacao	,
			ie_tipo_historico
		)
		values	(	nextval('convenio_retorno_hist_seq'), 
			clock_timestamp()		,
			nm_usuario_p	,
			clock_timestamp()		,
			'New record has been created in FORM tab for account number' || ' ' ||nr_patient_account_w || ' ' || 'with the following values' || CHR(13) ||
			'Additional value:' || ' ' || vl_additional_w || CHR(13) ||
			'Denied value:'     || ' ' || (vl_denied_w)    || CHR(13) ||
			'Amount Paid:'	    || ' ' || (vl_paid_w)       || CHR(13) ||
			'Claim Id:'         || ' ' || cd_claim_w       || CHR(13) ||
			'Medicare card Number:'     || ' ' ||  cd_medicare_card_w|| CHR(13)||
      'Medicare card flag :'     || ' ' ||  ie_medicare_card_w|| CHR(13)||
      'IRN :'     || ' ' ||  nr_patient_ref_w|| CHR(13)||
			'first name:'	    || ' ' || nm_first_w || CHR(13) ||
			'last name :'       || ' ' || nm_family_w || CHR(13) ,
			
			nr_seq_return_w ,
			clock_timestamp(),
			'U'
		);
	
		
	
		
		if (nr_return_count_w > 0) then
		delete	from 	convenio_retorno_glosa
		where 	nr_seq_ret_item in (SELECT	nr_sequencia
					    from  	convenio_retorno_item
					    where 	nr_interno_conta = nr_patient_account_w);
		update	convenio_retorno_item
		set	cd_autorizacao = cd_authorization_w,
			dt_atualizacao = clock_timestamp(),
			nm_usuario = nm_usuario_p,
			nr_seq_retorno = nr_seq_return_w,
			nr_interno_conta = nr_patient_account_w ,
			vl_adicional = vl_additional_w,
			vl_amenor = vl_denied_w,
			vl_pago = vl_paid_w,
			ds_observacao = ds_notes_w
		where 	nr_interno_conta = nr_patient_account_w;

		select 	max(nr_sequencia)
		into STRICT	nr_seq_ret_item_w
		from	convenio_retorno_item
		where 	nr_interno_conta = nr_patient_account_w;

	else

		select	nextval('convenio_retorno_item_seq')
		into STRICT	nr_seq_ret_item_w
		;



		insert into convenio_retorno_item(
							nr_sequencia,
							cd_autorizacao,
							dt_atualizacao,
							ie_analisada,
							ie_glosa,
							nm_usuario,
							nr_seq_retorno,
							nr_interno_conta,
							vl_adicional,
							vl_amenor,
							vl_glosado,
							vl_pago,
							ie_doc_retorno_origem,
							ds_observacao)
					values (
							nr_seq_ret_item_w,
							cd_authorization_w,
							clock_timestamp(),
							'N',
							'P',
							nm_usuario_p,
							nr_seq_return_w,
							nr_patient_account_w,
							vl_additional_w,	-- vl_adic_w
							vl_denied_w, 		-- vl_amenor_w
							0, 			-- vl_glosado
							vl_paid_w, 		-- vl_pago_w
							null,
							ds_notes_w);


	end if;

	for rDPRVoucher in cDPRVoucher(nr_seq_dvr_w) loop
		begin
		for rDPRServices in cDPRServices(rDPRVoucher.nr_sequencia) loop
			begin

			select  coalesce(max(ds_code), form_not_informed_w)
			into STRICT	ds_code_w
			from    eclipse_status_codes
			where   cd_code = rDPRServices.cd_explanation;

			ds_notes_w := substr(ds_code_w,1,4000);

			vl_denied_w := rDPRServices.vl_charge - rDPRServices.vl_paid;

			select	nextval('convenio_retorno_glosa_seq')
			into STRICT	nr_seq_item_denied_w
			;

			insert	into convenio_retorno_glosa(
												nr_sequencia,
												nr_seq_ret_item,
												vl_glosa,
												dt_atualizacao,
												nm_usuario,
												cd_procedimento,
												ie_origem_proced,
												cd_setor_atendimento,
												ie_emite_conta,
												ie_atualizacao,
												vl_pago_digitado,
												qt_glosa,
												qt_cobrada,
												vl_cobrado,
												cd_item_convenio,
												cd_motivo_glosa,
												ds_observacao)
										values (
												nr_seq_item_denied_w,
												nr_seq_ret_item_w,
												vl_denied_w, 	-- vl_glosa_w
												clock_timestamp(),
												nm_usuario_p,
												rDPRServices.cd_proc,
												rDPRServices.ie_origim,
												rDPRServices.cd_setor,
												rDPRServices.ie_emit,
												'N',
												rDPRServices.vl_paid,
												0, 		-- qt_glosa
												rDPRServices.qt_proc,
												rDPRServices.vl_charge,
												rDPRServices.cd_proc_conve,
												null, 		-- cd_motivo_glosa
                          CHR(13)|| 'service date:'     || ' ' || rDPRVoucher.dt_service || CHR(13) ||
                        'Provider Number:' || rDPRVoucher.cd_provider ||  CHR(13) ||
                        'Service Id:' || rDPRServices.cd_service || CHR(13) ||
                        'Item Number:' || rDPRServices.cd_item || CHR(13) ||
                        CASE WHEN coalesce(rDPRServices.cd_explanation::text, '') = '' THEN null  ELSE 'Explanation code:' || rDPRServices.cd_explanation ||'-' || ds_notes_w END  ||CHR(13)||
                        CASE WHEN rDPRServices.qt_pat=0 THEN null  ELSE 'Total number of patients seen is: ' ||rDPRServices.qt_pat END  || CHR(13) ||
                        CASE WHEN rDPRVoucher.ie_medicare_Card ='I' THEN ' '''' I '''' - Patient Medicare issue number changed .Please update patient records with the provider information'  WHEN rDPRVoucher.ie_medicare_Card ='A' THEN ' '''' A '''' - Patient Medicare Number changed.Please update patient records with the provider information' END  || CHR(13)
												);

			end;
		end loop; -- rDPRServices
		end;
	end loop;

	end;
end if;


if (ie_type_message_p = 'IHC-RTV') then
	begin

	for rIHCResponse in cIHCResponse(nr_seq_claim_w) loop
		begin

		update 	ihc_claim
		set 	ie_status_tasy = 'C'
		where 	nr_sequencia = nr_seq_claim_w;

		select 	count(*)
		into STRICT 	qt_insurance_item_w
		from 	convenio_retorno_item
		where 	nr_interno_conta = nr_patient_account_w;
		
		ds_history_w := 'New record has been created in FORM tab for account number' || ' ' ||nr_patient_account_w || ' ' || 'with the following values' || CHR(13) ||
			'Fund Status Code:' || ' ' || rIHCResponse.cd_fund_status || CHR(13) ||
			'Facility Id:'     || ' ' || rIHCResponse.cd_facility     || CHR(13) ||
			'Fund Brand Id:'	    || ' ' || rIHCResponse.cd_fund_brand        || CHR(13) ||
			'Account Reference Id:'         || ' ' || rIHCResponse.nr_account       || CHR(13) ||
      'Claim Fund Assement Cde:'         || ' ' || rIHCResponse.cd_clm_asses_fund       || CHR(13) ||			
			'Fund Reference Id:'	    || ' ' || rIHCResponse.cd_fund_ref || CHR(13) ||
			'Total Charge Amount :'       || ' ' || rIHCResponse.vl_charge || CHR(13) ||	
			'Total Benefit Amount:'	    || ' ' || rIHCResponse.vl_total_benefit || CHR(13) ||
			'Excess amount :'       || ' ' || rIHCResponse.vl_excess_amt || CHR(13)	||
      'Co-payment Amount :'       || ' ' || rIHCResponse.vl_co_pay || CHR(13);
		
		select 	nextval('convenio_retorno_hist_seq')
		into STRICT	nr_hist_seq_w
		;
		
		insert into convenio_retorno_hist(	nr_sequencia	,
			dt_historico 	,
			nm_usuario	,
			dt_liberacao	,
			ds_historico 	,
			nr_seq_retorno 	,
			dt_atualizacao	,
			ie_tipo_historico
		)
		values (	nr_hist_seq_w,
			clock_timestamp()		,
			nm_usuario_p	,
			clock_timestamp()		,
				ds_history_w,
			nr_seq_return_w ,
			clock_timestamp(),
			'U'
		);

		
		
		

		if (qt_insurance_item_w > 0) then
			delete from convenio_retorno_glosa
			where nr_seq_ret_item in (	SELECT 	nr_sequencia
										from 	convenio_retorno_item
										where 	nr_interno_conta = nr_patient_account_w);

			delete from convenio_retorno_item
			where nr_interno_conta = nr_patient_account_w;
		end if;

		vl_denied_w := (vl_charge_w - vl_paid_w) / 100;

		vl_additional_w := 0;
		if (vl_denied_w < 0) then -- Identify the amount paid as additional
			vl_additional_w := (vl_paid_w - vl_charge_w) / 100;
			vl_denied_w := 0;
		end if;

		ds_notes_w := substr('Transaction: ' || nr_seq_transaction_p,1,4000);

		for rIHCResponseDetail in cIHCResponseDetail(rIHCResponse.nr_sequencia) loop
			begin
				ds_notes_w := ds_notes_w || chr(13) || chr(10) || rIHCResponseDetail.cd_claim_exp || ':' || rIHCResponseDetail.cd_claim_exp || chr(13) || chr(10) || 'Element Name:' || rIHCResponseDetail.ds_Element || chr(13) || chr(10) || 'Message Part Id' ||  chr(13) || chr(10)||  rIHCResponseDetail.ds_message;
        ds_history_w := ds_history_w || ds_notes_w;
        update convenio_retorno_hist set ds_historico = ds_history_w where nr_sequencia= nr_hist_seq_w;
			end;
		end loop;

		select	nextval('convenio_retorno_item_seq')
		into STRICT	nr_seq_ret_item_w
		;

		if (rIHCResponse.cd_clm_asses_fund = 'W') then
			ds_notes_w := obter_expressao_idioma(967458, 5) || chr(13) || chr(10) || ds_notes_w;
		elsif (rIHCResponse.cd_clm_asses_fund = 'R') then
			ds_notes_w := 'Claim rejected' || chr(13) || chr(10) || ds_notes_w;
		end if;

		vl_co_pay_w := rIHCResponse.vl_co_pay / 100;
		vl_excess_amt_w := rIHCResponse.vl_excess_amt / 100;
		vl_paid_w := vl_paid_w / 100;
		insert into convenio_retorno_item(
											nr_sequencia,
											cd_autorizacao,
											dt_atualizacao,
											ie_analisada,
											ie_glosa,
											nm_usuario,
											nr_seq_retorno,
											nr_interno_conta,
											vl_adicional,
											vl_amenor,
											vl_glosado,
											vl_pago,
											ie_doc_retorno_origem,
											ds_observacao,
											vl_coparticipacao,
											vl_sinistro)
									values (
											nr_seq_ret_item_w,
											cd_authorization_w,
											clock_timestamp(),
											'N',
											'P',
											nm_usuario_p,
											nr_seq_return_w,
											nr_patient_account_w,
											vl_additional_w,	-- vl_adic_w
											vl_denied_w, 		-- vl_amenor_w
											0, 			-- vl_glosado
											vl_paid_w, 		-- vl_pago_w
											null,
											ds_notes_w,
											vl_co_pay_w,
											vl_excess_amt_w
											);


		for rIHCServices in cIHCServices(rIHCResponse.nr_sequencia) loop
			begin

		

			vl_denied_w := (rIHCServices.vl_charge - rIHCServices.vl_paid) / 100;
			vl_charge_service_w := rIHCServices.vl_charge / 100;
			vl_paid_service_w := rIHCServices.vl_paid / 100;

			select	nextval('convenio_retorno_glosa_seq')
			into STRICT	nr_seq_item_denied_w
			;
       ds_service_details_w := 'Service Id:' || rIHCServices.cd_service|| chr(13) || chr(10) || 'Service Description:' || rIHCServices.ds_Service || chr(13) || chr(10)
                                ||  'Number of services:' || rIHCServices.qt_Service  || chr(13) || chr(10) 
                                ||  'Charge amount: ' || rIHCServices.vl_charge || chr(13) || chr(10) 
                                || 'Fund Benifit Amount: ' || rIHCServices.vl_paid || chr(13) || chr(10) 
                                || 'Service Date: ' || rIHCServices.dt_Service || chr(13) || chr(10)
                                || 'From Date: ' || rIHCServices.dt_from || chr(13) || chr(10)
                                || 'To Date: ' || rIHCServices.dt_End || chr(13) || chr(10);

            for rIHCServiceDetails in cIHCServiceDetails(rIHCResponse.nr_sequencia) loop
                ds_service_details_w := ds_service_details_w || 'Fund Explanation Code:' ||    rIHCServiceDetails.cd_service_exp || '' ||    rIHCServiceDetails.ds_Service_exp;
            end loop;

			insert	into convenio_retorno_glosa(
												nr_sequencia,
												nr_seq_ret_item,
												vl_glosa,
												dt_atualizacao,
												nm_usuario,
												cd_procedimento,
												cd_procedimento_loc,
												ie_origem_proced,
												cd_setor_atendimento,
												ie_emite_conta,
												ie_atualizacao,
												vl_pago_digitado,
												qt_glosa,
												qt_cobrada,
												vl_cobrado,
												cd_item_convenio,
												cd_motivo_glosa,
												ds_observacao)
										values (
												nr_seq_item_denied_w,
												nr_seq_ret_item_w,
												vl_denied_w, 	-- vl_glosa_w
												clock_timestamp(),
												nm_usuario_p,
												rIHCServices.cd_procedimento,
												rIHCServices.cd_service,
												rIHCServices.ie_origem_proced,
												rIHCServices.cd_setor_atendimento,
												rIHCServices.ie_emite_conta,
												'N',
												vl_paid_service_w,
												0, 		-- qt_glosa
												rIHCServices.qt_procedimento,
												vl_charge_service_w,
												rIHCServices.cd_procedimento_convenio,
												null, 		-- cd_motivo_glosa
												ds_service_details_w);

			end;

		end loop; -- rIHCServices
		end;
	end loop; -- rIHCResponse
	end;
end if;

if (ie_type_message_p = 'IMC') then

	begin

		vl_denied_w := vl_charge_w - vl_paid_w;

		vl_additional_w := 0;

		if (vl_denied_w < 0) then -- Identify the amount paid as additional
			vl_additional_w := vl_paid_w - vl_charge_w;

		end if;

		ds_notes_w := substr(	'Claim: ' || cd_claim_w || chr(13) || chr(10) || 'Transaction: ' || nr_seq_transaction_p,1,4000);

		select	nextval('convenio_retorno_item_seq')
		into STRICT	nr_seq_ret_item_w
		;

		insert into convenio_retorno_item(
											nr_sequencia,
											cd_autorizacao,
											dt_atualizacao,
											ie_analisada,
											ie_glosa,
											nm_usuario,
											nr_seq_retorno,
											nr_interno_conta,
											vl_adicional,
											vl_amenor,
											vl_glosado,
											vl_pago,
											ie_doc_retorno_origem,
											ds_observacao)
									values (
											nr_seq_ret_item_w,
											cd_authorization_w,
											clock_timestamp(),
											'N',
											'P',
											nm_usuario_p,
											nr_seq_return_w,
											nr_patient_account_w,
											vl_additional_w,	-- vl_adic_w
											vl_denied_w, 		-- vl_amenor_w
											0, 			-- vl_glosado
											vl_paid_w, 		-- vl_pago_w
											null,
											ds_notes_w);


		for rIMCServices in cIMCServices loop
			begin

				vl_denied_w := rIMCServices.vl_charge - rIMCServices.vl_paid;

				select	nextval('convenio_retorno_glosa_seq')
				into STRICT	nr_seq_item_denied_w
				;

				insert	into convenio_retorno_glosa(
													nr_sequencia,
													nr_seq_ret_item,
													vl_glosa,
													dt_atualizacao,
													nm_usuario,
													cd_procedimento,
													ie_origem_proced,
													cd_setor_atendimento,
													ie_emite_conta,
													ie_atualizacao,
													vl_pago_digitado,
													qt_glosa,
													qt_cobrada,
													vl_cobrado,
													cd_item_convenio,
													cd_motivo_glosa,
													ds_observacao)
										values (	nr_seq_item_denied_w,
													nr_seq_ret_item_w,
													vl_denied_w, 	-- vl_glosa_w
													clock_timestamp(),
													nm_usuario_p,
													rIMCServices.cd_procedimento,
													rIMCServices.ie_origem_proced,
													rIMCServices.cd_setor_atendimento,
													rIMCServices.ie_emite_conta,
													'N',
													rIMCServices.vl_paid,
													0, 		-- qt_glosa
													rIMCServices.qt_procedimento,
													rIMCServices.vl_charge,
													rIMCServices.cd_procedimento_convenio,
													null, 		-- cd_motivo_glosa
													null);

			end;
		end loop;
	end;
end if;

if (ie_type_message_p = 'OVS') then
commit;
	begin
		vl_chrg_w := 0;
		vl_pai_w := 0;

select	
		max(a.nm_family),
		max(a.nm_first),
    max(a.cd_status),
    max(a.cd_process_status),
    max(a.CD_CLM_ASSES_FUND),
    max((select max(x.CD_FUND_EXPLANATION) from OVS_RESPONSE_EXP x where x.NR_SEQ_RESPONSE = a.nr_sequencia )),
    max((select max(x.DS_FUND_EXPLANATION) from OVS_RESPONSE_EXP x where x.NR_SEQ_RESPONSE = a.nr_sequencia )),
    max(a.cd_fund_status)
into STRICT
  nm_family_w,
  nm_first_w,
  ovs_cd_status_w,  
  ovs_process_status_w,
  ovs_CD_CLM_ASSES_FUND_w,
  ovs_CD_FUND_EXPLANATION_w,
  ovs_DS_FUND_EXPLANATION_w,
  ovs_cd_fund_status_w
from	OVS_RESPONSE a
  where	a.nr_sequencia = nr_seq_ovs_w;
		
		for rOSVServices in cOSVServices loop
		vl_chrg_w := vl_chrg_w + rOSVServices.vl_charge;
		vl_pai_w  := vl_pai_w + rOSVServices.vl_paid;
		end loop;
		
		
		vl_denied_w := vl_chrg_w - vl_pai_w;

		vl_additional_w := 0;

		if (vl_denied_w < 0) then -- Identify the amount paid as additional
			vl_additional_w := vl_pai_w - vl_chrg_w;

		end if;

		ds_notes_w := substr(	'Claim: ' || cd_claim_w || chr(13) || chr(10) || 'Transaction: ' || nr_seq_transaction_p,1,4000);

		select	nextval('convenio_retorno_item_seq')
		into STRICT	nr_seq_ret_item_w
		;


		insert into convenio_retorno_item(
											nr_sequencia,
											cd_autorizacao,
											dt_atualizacao,
											ie_analisada,
											ie_glosa,
											nm_usuario,
											nr_seq_retorno,
											nr_interno_conta,
											vl_adicional,
											vl_amenor,
											vl_glosado,
											vl_pago,
											ie_doc_retorno_origem,
											ds_observacao)
									values (
											nr_seq_ret_item_w,
											cd_authorization_w,
											clock_timestamp(),
											'N',
											'P',
											nm_usuario_p,
											nr_seq_return_w,
											nr_patient_account_w,
											vl_additional_w,	-- vl_adic_w
											vl_denied_w, 		-- vl_amenor_w
											0, 			-- vl_glosado
											vl_pai_w, 		-- vl_pago_w
											null,
											ds_notes_w);

                      
                      	insert into convenio_retorno_hist(	nr_sequencia	,
			dt_historico 	,
			nm_usuario	,
			dt_liberacao	,
			ds_historico 	,
			nr_seq_retorno 	,
			dt_atualizacao	,
			ie_tipo_historico
		)
		values (	nextval('convenio_retorno_hist_seq'),
			clock_timestamp()		,
			nm_usuario_p	,
			clock_timestamp()		,
			'New record has been created in FORM tab for account number' || ' ' ||nr_patient_account_w || ' ' || 'with the following values' || CHR(13) ||
			'Additional value:' || ' ' || vl_additional_w || CHR(13) ||
			'Denied value:'     || ' ' || vl_denied_w     || CHR(13) ||
			'Amount Paid:'	    || ' ' || vl_pai_w       || CHR(13) ||
			'Claim Id:'         || ' ' || cd_claim_w       || CHR(13) ||
			'first name:'	    || ' ' || nm_first_w || CHR(13) ||
			'last name :'       || ' ' || nm_family_w || CHR(13) ||	
			'Status code :'	    || ' ' || ovs_cd_status_w || CHR(13) ||
			'Process_status code :'       || ' ' || ovs_process_status_w || CHR(13)	||
			'Fund status code :'	    || ' ' || ovs_cd_fund_status_w || CHR(13) ||
			'Claim Assessment code :'	    || ' ' || ovs_CD_CLM_ASSES_FUND_w || CHR(13) ||
			'Claim explanation description :'       || ' ' || ovs_DS_FUND_EXPLANATION_w || CHR(13),
			nr_seq_return_w ,
			clock_timestamp(),
			'U'
		);



		for rOSVServices in cOSVServices loop
			begin

				vl_denied_w := rOSVServices.vl_charge - rOSVServices.vl_paid;

				select	nextval('convenio_retorno_glosa_seq')
				into STRICT	nr_seq_item_denied_w
				;

				insert	into convenio_retorno_glosa(
													nr_sequencia,
													nr_seq_ret_item,
													vl_glosa,
													dt_atualizacao,
													nm_usuario,
													cd_procedimento,
													ie_origem_proced,
													cd_setor_atendimento,
													ie_emite_conta,
													ie_atualizacao,
													vl_pago_digitado,
													qt_glosa,
													qt_cobrada,
													vl_cobrado,
													cd_item_convenio,
													cd_motivo_glosa,
													ds_observacao)
										values (	nr_seq_item_denied_w,
													nr_seq_ret_item_w,
													vl_denied_w, 	-- vl_glosa_w
													clock_timestamp(),
													nm_usuario_p,
													rOSVServices.cd_procedimento,
													rOSVServices.ie_origem_proced, 
													rOSVServices.cd_setor_atendimento,
													rOSVServices.ie_emite_conta,
													'N',
													rOSVServices.vl_paid,
													0, 		-- qt_glosa
													rOSVServices.qt_procedimento,
													rOSVServices.vl_charge,
													rOSVServices.cd_procedimento_convenio, 
													null, 		-- cd_motivo_glosa
													null);

			end;
		end loop;
	end;
end if;


commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eclipse_insurance_return ( ie_type_message_p text, nr_seq_transaction_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

