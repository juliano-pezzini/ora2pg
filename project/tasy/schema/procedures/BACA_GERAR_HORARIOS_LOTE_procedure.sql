-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_gerar_horarios_lote () AS $body$
DECLARE

 
nr_prescricao_w		bigint;
nm_usuario_w		varchar(50);

c01 CURSOR FOR 
SELECT	a.nr_prescricao, 
	a.ie_adep 
from	prescr_medica a 
where	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
and	a.dt_liberacao > clock_timestamp() - interval '1 days' 
and	coalesce(a.dt_suspensao::text, '') = '' 
and	coalesce(a.ie_adep,'N') <> 'N' 
and	not exists (	SELECT	1 
			from	prescr_mat_hor x 
			where	x.nr_prescricao = a.nr_prescricao 
			
union all
 
			select	1 
			from	prescr_proc_hor x 
			where	x.nr_prescricao = a.nr_prescricao) 
and	exists (	select	1 
			from	prescr_material x 
			where	x.nr_prescricao = a.nr_prescricao 
			and	coalesce(x.dt_suspensao::text, '') = '' 
			and	coalesce(x.cd_motivo_baixa,0) = 0 
			and	((coalesce(x.dt_proxima_dose, a.dt_inicio_prescr) >= a.dt_inicio_prescr) or 
				 (('N' = 'S') and (x.dt_proxima_dose IS NOT NULL AND x.dt_proxima_dose::text <> '') and (x.dt_proxima_dose <= a.dt_inicio_prescr))) 
			and	coalesce(x.dt_proxima_dose, a.dt_inicio_prescr) < a.dt_validade_prescr 
			and	coalesce(x.ie_gerar_horario,'S') <> 'N' 
			
union all
 
			select	1 
			from	prescr_procedimento x 
			where	x.nr_prescricao = a.nr_prescricao 
			and	coalesce(x.dt_suspensao::text, '') = '');


BEGIN 
 
open C01;
loop 
fetch C01 into	 
	nr_prescricao_w, 
	nm_usuario_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	CALL Gerar_prescr_hor(nr_prescricao_w,1966,nm_usuario_w); /*Dieta, recomentações*/
	CALL gerar_prescr_proc_hor(nr_prescricao_w, 1966, nm_usuario_w); /* procedimentos */
	CALL Gerar_prescr_mat_hor(nr_prescricao_w,NULL,1966,nm_usuario_w,null,'N',null); /*Medicamentos, materiais*/
	CALL Gerar_Lanc_Auto_Prescricao(nr_prescricao_w, nm_usuario_w);
	CALL GERAR_AGENDA_PRESCRICAO(nr_prescricao_w, nm_usuario_w);
	CALL GERAR_LAUDO_SUS_LIB_PRESCR(nr_prescricao_w, nm_usuario_w);
	CALL ATUALIZAR_MATMED_ASSOC(nr_prescricao_w, nm_usuario_w);
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_gerar_horarios_lote () FROM PUBLIC;

