-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_aplicar_sca_beneficiarios ( nr_seq_contrato_p bigint, nr_seq_regra_sca_p bigint, dt_aplicacao_regra_p timestamp, nm_usuario_p text) AS $body$
DECLARE


ie_grau_parentesco_w		varchar(2);
ie_grau_dependencia_w		varchar(2);
ie_lancamento_mensalidade_w	varchar(2);
ie_erro_w			varchar(1)	:= 'N';
ie_geracao_valores_w		varchar(1);
nr_seq_segurado_w		bigint;
qt_sca_w			bigint;
nr_seq_plano_w			bigint;
nr_seq_tabela_w			bigint;
nr_seq_vinculo_sca_w		bigint;
nr_seq_vendedor_canal_w		bigint;
nr_seq_vendedor_pf_w		bigint;
cd_estabelecimento_w		bigint;
qt_dependete_w			bigint;
qt_liberada_w			bigint;
qt_idade_min_sca_w		bigint;
qt_idade_benef_w		integer;
qt_idade_sca_w			integer;
dt_reajuste_w			timestamp;
dt_adesao_w			timestamp;
dt_inicio_vigencia_w		timestamp;
dt_fim_vigencia_w		timestamp;
dt_fim_vigencia_tab_w		timestamp;
dt_rescisao_w			timestamp;
nr_seq_plano_benef_w		bigint;
nr_seq_plano_benef_regra_w	bigint;

NR_SEQ_SEGURADO_ANT_w		bigint;
ie_desconsiderar_idade_w	varchar(10);
ie_regulamentacao_ant_w		varchar(10);
ie_regulamentacao_nova_w	varchar(10);


C01 CURSOR FOR
	SELECT	nr_sequencia,
		dt_rescisao,
		NR_SEQ_SEGURADO_ANT,
		pls_obter_produto_benef(nr_sequencia,dt_aplicacao_regra_p) as nr_seq_plano
	from	pls_segurado
	where	nr_seq_contrato	= nr_seq_contrato_p
	and	((nr_seq_plano	= nr_seq_plano_benef_regra_w) or (coalesce(nr_seq_plano_benef_regra_w::text, '') = ''));


BEGIN
select	a.nr_seq_plano,
	a.nr_seq_tabela,
	coalesce(a.ie_geracao_valores, 'B'),
	nr_seq_vendedor_canal,
	nr_seq_vendedor_pf,
	b.cd_estabelecimento,
	a.dt_inicio_vigencia,
	a.dt_fim_vigencia,
	a.ie_lancamento_mensalidade,
	a.nr_seq_plano_benef
into STRICT	nr_seq_plano_w,
	nr_seq_tabela_w,	
	ie_geracao_valores_w,
	nr_seq_vendedor_canal_w,
	nr_seq_vendedor_pf_w,
	cd_estabelecimento_w,
	dt_inicio_vigencia_w,
	dt_fim_vigencia_w,
	ie_lancamento_mensalidade_w,
	nr_seq_plano_benef_regra_w
from	pls_sca_regra_contrato	a,
	pls_contrato		b
where	b.nr_sequencia	= a.nr_seq_contrato
and	a.nr_sequencia	= nr_seq_regra_sca_p;

select	coalesce(a.ie_grau_dependencia,'A')
into STRICT	ie_grau_dependencia_w
from	pls_plano	a
where	a.nr_sequencia	= nr_seq_plano_w;

open C01;
loop
fetch C01 into	
	nr_seq_segurado_w,
	dt_rescisao_w,
	nr_seq_segurado_ant_w,
	nr_seq_plano_benef_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	ie_desconsiderar_idade_w	:= 'N';
	
	if (coalesce(dt_rescisao_w::text, '') = '') or (dt_rescisao_w > dt_aplicacao_regra_p) then
		select	count(1)
		into STRICT	qt_sca_w
		from	pls_sca_vinculo	a
		where	a.nr_seq_plano	= nr_seq_plano_w
		and	a.nr_seq_segurado	= nr_seq_segurado_w  LIMIT 1;
		
		select	CASE WHEN coalesce(a.nr_seq_titular::text, '') = '' THEN  'T'  ELSE 'D' END ,
			a.dt_contratacao
		into STRICT	ie_grau_parentesco_w,
			dt_adesao_w
		from 	pls_segurado	a
		where	a.nr_sequencia	= nr_seq_segurado_w;
		
		select	max(a.dt_fim_vigencia)
		into STRICT	dt_fim_vigencia_tab_w
		from	pls_tabela_preco	a
		where	a.nr_sequencia	= nr_seq_tabela_w;
		
		if (qt_sca_w = 0) and (clock_timestamp() > coalesce(dt_fim_vigencia_tab_w + 1, clock_timestamp() - interval '1 days')) then
			ie_erro_w	:= 'S';
			
			qt_idade_benef_w	:= (substr(pls_obter_dados_segurado(nr_seq_segurado_w, 'ID'),1,5))::numeric;
			
			select	max(a.qt_idade_sca),
				      max(a.dt_reajuste),
			      	max(a.qt_idade_min_sca)
			into STRICT	qt_idade_sca_w,
				dt_reajuste_w,
				qt_idade_min_sca_w
			from	pls_plano	a
			where	a.nr_sequencia	= nr_seq_plano_w;
			
			if (NR_SEQ_SEGURADO_ANT_w IS NOT NULL AND NR_SEQ_SEGURADO_ANT_w::text <> '') and (nr_seq_plano_benef_w IS NOT NULL AND nr_seq_plano_benef_w::text <> '') then
				select	max(ie_regulamentacao)
				into STRICT	ie_regulamentacao_nova_w
				from	pls_plano
				where	nr_sequencia	= nr_seq_plano_benef_w;
				
				select	max(B.ie_regulamentacao)
				into STRICT	ie_regulamentacao_ant_w
				from	pls_plano	b,
					pls_segurado	a
				where	a.nr_seq_plano	= b.nr_sequencia
				and	a.nr_sequencia	= NR_SEQ_SEGURADO_ANT_w;
				
				ie_desconsiderar_idade_w	:= pls_obter_se_desc_idade_sca(nr_seq_plano_w,ie_regulamentacao_ant_w,ie_regulamentacao_nova_w,nr_seq_segurado_ant_w);
			end if;
			
			select	count(*)
			into STRICT	qt_dependete_w
			from	pls_segurado	a
			where	a.nr_sequencia	= nr_seq_segurado_w
			and	(a.nr_seq_titular IS NOT NULL AND a.nr_seq_titular::text <> '');
		
			if	(((qt_idade_benef_w <= coalesce(qt_idade_sca_w, qt_idade_benef_w)) and (qt_idade_benef_w >= coalesce(qt_idade_min_sca_w, qt_idade_benef_w))) or (ie_desconsiderar_idade_w = 'S')) and
				((ie_grau_dependencia_w = ie_grau_parentesco_w) or (ie_grau_dependencia_w = 'A')) and (dt_aplicacao_regra_p between coalesce(dt_inicio_vigencia_w, dt_aplicacao_regra_p) and
								fim_dia(coalesce(dt_fim_vigencia_w, dt_aplicacao_regra_p))) then
								
				
				
				select	nextval('pls_sca_vinculo_seq')
				into STRICT	nr_seq_vinculo_sca_w
				;
				
				insert into pls_sca_vinculo(nr_sequencia,
					nr_seq_plano,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_segurado,
					nr_seq_tabela,
					dt_inicio_vigencia,
					dt_reajuste,
					ie_geracao_valores,
					nr_seq_vendedor_canal,
					nr_seq_vendedor_pf,
					ie_lancamento_mensalidade,
					dt_fim_vigencia)
				values (nr_seq_vinculo_sca_w,
					nr_seq_plano_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_segurado_w,
					nr_seq_tabela_w,
					dt_aplicacao_regra_p,
					dt_reajuste_w,
					ie_geracao_valores_w,
					nr_seq_vendedor_canal_w, 
					nr_seq_vendedor_pf_w,
					ie_lancamento_mensalidade_w,
					dt_rescisao_w);						
				
				if (qt_dependete_w > 0) then
					CALL pls_consist_parent_sca_benef(	nr_seq_vinculo_sca_w,
									nr_seq_plano_w,
									nr_seq_segurado_w,
									nm_usuario_p);
				end if;
				
				update	pls_sca_vinculo
				set	dt_liberacao	= clock_timestamp()
				where	nr_sequencia	= nr_seq_vinculo_sca_w
				and	coalesce(ds_consistencia::text, '') = '';
				
				select	count(1)
				into STRICT	qt_liberada_w
				from	pls_sca_vinculo
				where	nr_sequencia	= nr_seq_vinculo_sca_w
				and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')  LIMIT 1;
				
				if (qt_liberada_w > 0) then
					CALL pls_duplicar_tabela_preco_sca(	nr_seq_contrato_p,
									nr_seq_vinculo_sca_w,
									nr_seq_tabela_w,
									'N',
									nm_usuario_p);
					
					CALL pls_gerar_valor_sca_segurado(	nr_seq_segurado_w,
									'C',
									null,
									nm_usuario_p,
									cd_estabelecimento_w);
				end if;	
			end if;
		end if;
	end if;
	end;
end loop;
close C01;

if (ie_erro_w = 'N') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(187350);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_aplicar_sca_beneficiarios ( nr_seq_contrato_p bigint, nr_seq_regra_sca_p bigint, dt_aplicacao_regra_p timestamp, nm_usuario_p text) FROM PUBLIC;

