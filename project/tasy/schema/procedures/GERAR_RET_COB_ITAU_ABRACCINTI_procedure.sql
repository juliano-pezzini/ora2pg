-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_ret_cob_itau_abraccinti (nr_seq_cobr_escrit_p bigint, nm_usuario_p text) AS $body$
DECLARE


-- Cobrança Bancária Itaú
-- Migração Unibanco/Itaú      Abraccinti
nr_titulo_w		bigint;
vl_juros_w		double precision;
vl_desconto_w		double precision;
vl_abatimento_w		double precision;
vl_liquido_w		double precision;
dt_liquidacao_w		timestamp;
nr_dt_liquidacao_w	bigint;
qt_registro_w		bigint;
ds_titulo_w		varchar(255);
vl_cobranca_w		double precision;
cd_ocorrencia_w		bigint;
nr_seq_ocorrencia_ret_w	bigint;
vl_tarifa_cobranca_w	double precision;
vl_saldo_titulo_w	double precision;
cd_banco_w		smallint;
cd_banco_cobr_w		integer;
cd_centro_custo_desc_w	integer;
nr_seq_motivo_desc_w	bigint;
nr_seq_tit_rec_cobr_w	bigint;
cd_pessoa_fisica_desc_w	varchar(10);
cd_cgc_desc_w		varchar(14);
cd_estabelecimento_w	smallint;


c01 CURSOR FOR
	SELECT	trim(both substr(ds_string,350,14)),
		(substr(ds_string,153,13))::numeric /100,
		(substr(ds_string,267,13))::numeric /100,
		(substr(ds_string,241,13))::numeric /100,
		(substr(ds_string,254,13))::numeric /100,
		(substr(ds_string,254,13))::numeric /100,
		(substr(ds_string,280,13))::numeric /100,
		coalesce(somente_numero(substr(ds_string,296,6)),0),
		substr(ds_string,109,2)
	from	w_retorno_banco
	where	nr_seq_cobr_escrit	= nr_seq_cobr_escrit_p
	and	substr(ds_string,1,1)	= '1';

BEGIN

select	max((substr(ds_string,77,3))::numeric )
into STRICT	cd_banco_w
from	w_retorno_banco
where	nr_seq_cobr_escrit	= nr_seq_cobr_escrit_p
and	substr(ds_string,1,1)	= '0';

select	max(a.cd_banco),
	max(a.cd_estabelecimento)
into STRICT	cd_banco_cobr_w,
	cd_estabelecimento_w
FROM cobranca_escritural a
LEFT OUTER JOIN banco_carteira b ON (a.nr_seq_carteira_cobr = b.nr_sequencia)
WHERE a.nr_sequencia		= nr_seq_cobr_escrit_p;

if (cd_banco_w <> cd_banco_cobr_w) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(256032);
end if;

open C01;
loop
fetch C01 into
	ds_titulo_w,
	vl_cobranca_w,
	vl_juros_w,
	vl_desconto_w,
	vl_abatimento_w,
	vl_liquido_w,
	vl_tarifa_cobranca_w,
	nr_dt_liquidacao_w,
	cd_ocorrencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	max(nr_titulo),
		coalesce(max(vl_saldo_titulo),0)
	into STRICT	nr_titulo_w,
		vl_saldo_titulo_w
	from	titulo_receber
	where	nr_titulo	= somente_numero(ds_titulo_w);

	/* Se encontrou o título importa, senão grava no log */

	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
		select 	max(a.nr_sequencia)
		into STRICT	nr_seq_ocorrencia_ret_w
		from	banco_ocorr_escrit_ret a
		where	a.cd_banco = cd_banco_cobr_w
		and	a.cd_ocorrencia = cd_ocorrencia_w;

		select	max(a.cd_centro_custo),
			max(a.nr_seq_motivo_desc),
			max(a.cd_pessoa_fisica),
			max(a.cd_cgc)
		into STRICT	cd_centro_custo_desc_w,
			nr_seq_motivo_desc_w,
			cd_pessoa_fisica_desc_w,
			cd_cgc_desc_w
		from	titulo_receber_liq_desc a
		where	a.nr_titulo	= nr_titulo_w
		and	coalesce(a.nr_bordero::text, '') = ''
		and	coalesce(a.nr_seq_liq::text, '') = '';

		if (coalesce(trim(both nr_dt_liquidacao_w),0) <> 0) then
			dt_liquidacao_w	:= to_date(to_char(nr_dt_liquidacao_w, '000000'),'ddmmyy');
		end if;

		select	count(*)
		into STRICT	qt_registro_w
		from	titulo_receber
		where	nr_titulo	= nr_titulo_w;

		if (qt_registro_w = 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(256033, 'NR_TITULO_W=' || NR_TITULO_W);
		end if;

		select	nextval('titulo_receber_cobr_seq')
		into STRICT	nr_seq_tit_rec_cobr_w
		;

		insert	into titulo_receber_cobr(	nr_sequencia,
							nr_titulo,
							cd_banco,
							vl_cobranca,
							vl_desconto,
							vl_acrescimo,
							vl_despesa_bancaria,
							vl_liquidacao,
							vl_juros,
							dt_liquidacao,
							dt_atualizacao,
							nm_usuario,
							nr_seq_cobranca,
							nr_seq_ocorrencia_ret,
							vl_saldo_inclusao,
							vl_multa,
							nr_seq_motivo_desc,
							cd_centro_custo_desc)
					values (	nr_seq_tit_rec_cobr_w,
							nr_titulo_w,
							cd_banco_cobr_w,
							coalesce(vl_cobranca_w,0),
							coalesce(vl_desconto_w,0) + coalesce(vl_abatimento_w,0),
							0,
							coalesce(vl_tarifa_cobranca_w,0),
							coalesce(vl_liquido_w,0),
							coalesce(vl_juros_W,0),
							coalesce(dt_liquidacao_w,clock_timestamp()),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_cobr_escrit_p,
							nr_seq_ocorrencia_ret_w,
							coalesce(vl_saldo_titulo_w,0),
							0,
							nr_seq_motivo_desc_w,
							cd_centro_custo_desc_w);

		insert	into titulo_rec_cobr_desc(cd_cgc,
			cd_pessoa_fisica,
			dt_atualizacao,
			nm_usuario,
			nr_seq_tit_rec_cobr,
			nr_sequencia)
		values (cd_cgc_desc_w,
			cd_pessoa_fisica_desc_w,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_tit_rec_cobr_w,
			nextval('titulo_rec_cobr_desc_seq'));

	/*else
		insert	into	log_xxtasy
			(nm_usuario,
			dt_atualizacao,
			cd_log,
			ds_log)
		values	(nm_usuario_p,
			sysdate,
			55760,
			'Não foi importado o título ' || ds_titulo_w || ', pois não foi encontrado no Tasy');
*/
	end if;

	end;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ret_cob_itau_abraccinti (nr_seq_cobr_escrit_p bigint, nm_usuario_p text) FROM PUBLIC;

