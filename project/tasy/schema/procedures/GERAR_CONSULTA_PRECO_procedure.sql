-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_consulta_preco (cd_estabelecimento_p bigint, cd_convenio_p bigint, dt_conta_p timestamp, cd_item_p bigint, ie_origem_proced_p bigint, ie_tipo_item_p bigint, cd_tipo_acomodacao_p bigint, ie_tipo_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_medico_p text, cd_funcao_medico_p bigint, qt_idade_p bigint, nr_seq_exame_lab_p bigint, nr_seq_proc_interno_p bigint, cd_usuario_convenio_p text, cd_plano_p text, ie_clinica_p bigint, cd_empresa_ref_p bigint, cd_cgc_fornecedor_p text, nr_sequencia_p bigint, nr_seq_pacote_p bigint, ds_conv_adic_p text, nm_usuario_p text, ie_carater_inter_sus_p text, ie_carater_cirurgia_p text, ie_video_p text, qt_dia_int_p bigint, ie_calcula_kit_p text, ie_calcula_lanc_auto_p text, ie_calc_adicional_horario_p text, ie_todos_p text, cd_categoria_p text, cd_procedencia_p bigint, nr_seq_marca_p bigint, ie_tipo_anestesia_p text, cd_cgc_prestador_p text, cd_classif_convenio_p bigint, ie_sexo_p text, cd_material_exame_p text default null) AS $body$
DECLARE




nr_seq_proc_interno_exame_w	exame_laboratorio.nr_seq_proc_interno%type;
nr_seq_proc_interno_aux_w	bigint;
cd_setor_exame_w		integer;
cd_procedimento_exame_w	bigint;
ie_origem_proced_exame_w	bigint;
dt_conta_exame_w		timestamp;
cd_plano_exame_w		bigint;


qt_pontos_w			preco_amb.qt_pontuacao%type;
nr_sequencia_w			bigint;
dt_consulta_w			timestamp;
vl_material_w			double precision;
dt_ult_vigencia_w		timestamp;
cd_tab_preco_mat_w		smallint;
ie_origem_preco_w		smallint;
vl_procedimento_w		double precision;
vl_procedimento_ww		double precision;
vl_aux_w			double precision;
vl_custo_operacional_w		double precision;
vl_anestesista_w		double precision;
vl_medico_w			double precision;
vl_auxiliares_w			double precision;
vl_materiais_w			double precision;
vl_pto_procedimento_w		double precision;
vl_pto_custo_operac_w		double precision;
vl_pto_anestesista_w		double precision;
vl_pto_medico_w			double precision;
vl_pto_auxiliares_w		double precision;
vl_pto_materiais_w		double precision;
qt_porte_anestesico_w		smallint;
cd_edicao_amb_w			integer;
cd_categoria_w			varchar(10);
ie_tipo_acomodacao_w		bigint;
cd_categoria_ww			varchar(10);
cd_convenio_w			bigint;
vl_preco_kit_w			double precision;
vl_lanc_autom_w			double precision;
vl_kit_w			double precision;
cd_tipo_acomodacao_w		bigint;
cd_proc_diaria_w		bigint;
ie_origem_proc_diaria_w		bigint;
vl_categoria_w			double precision;
vl_diferenca_w			double precision;
ie_calculo_diferenca_w		varchar(3);
vl_ch_honorarios_w		double precision;
vl_ch_custo_oper_w		double precision;
vl_filme_w               	double precision;
cd_unidade_medida_consumo_w	varchar(30);
ie_classificacao_w		varchar(01);
ie_preco_informado_w		varchar(01);
tx_adic_medico_w    		double precision		:= 1;
tx_adic_anestesista_w 		double precision		:= 1;
tx_adic_auxiliares_w 		double precision		:= 1;
tx_adic_custo_operacional_w	double precision		:= 1;
tx_adic_materiais_w 		double precision		:= 1;
tx_adic_procedimento_w		double precision		:= 1;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;

vl_honorarios_moeda_w		double precision;
vl_custo_oper_moeda_w		double precision;
vl_filme_conv_moeda_w		double precision;

cd_proced_calculo_horario_w	bigint;
ie_origem_proced_horario_w	bigint;
ie_tipo_convenio_w		integer;
vl_matmed_w			double precision;
vl_honorario_medico_w		double precision	:= 0;
vl_adic_proc_w			double precision		:= 0;
vl_adic_medico_w		double precision		:= 0;
nr_seq_adic_w			bigint;
ie_video_w			varchar(1);
ie_restringe_estab_w		varchar(1);
nr_seq_pac_acomod_w		bigint;
cd_moeda_w			smallint;

tx_retorno_number_w		double precision;
tx_retorno_varchar_w		varchar(255);
nr_seq_ajuste_proc_w		bigint;
ie_visualiza_tx_adm_desc_w	varchar(1):= 'N';
vl_tx_desconto_w		double precision;
vl_tx_adm_w			double precision;
tx_adm_w			double precision;
tx_desconto_w			double precision;
vl_serv_w			double precision;
vl_serv_orig_w			double precision;
tx_ajuste_w			double precision;
vl_proc_w			double precision;
vl_proc_orig_w			double precision;
ie_limpa_tabela_w		varchar(1) := 'N';
ie_geraprecoprocpacote_w 	varchar(1);
nr_seq_pacote_w			bigint;
ie_tipo_item_w			bigint;
ie_localiza_pacote_w		varchar(1):= 'N';
ds_observacao_w			varchar(255);
ie_visualiza_cod_convenio_w	varchar(1) := 'N';
cd_material_convenio_w		varchar(20);
nr_seq_material_conv_w		bigint := 0;
cd_grupo_conversao_w		varchar(10);
ie_tx_medico_co_w		varchar(1);
tx_ajuste_custo_oper_w		double precision;
tx_ajuste_medico_w 		double precision;
ie_ignora_ch_edicao_amb_w	varchar(1):='N';
nr_registro_anvisa_w		varchar(60);
cd_procedimento_convenio_w	varchar(20);
nr_seq_proc_conv_w		bigint;
qt_existe_w			bigint;
nr_seq_exame_dep_w		bigint;
nr_seq_interno_aux_w		bigint;
ds_erro_w			varchar(255);
cd_setor_w			integer;
nr_seq_bras_preco_w		bigint;
nr_seq_mat_bras_w		bigint;
nr_seq_conv_bras_w		bigint;
ie_versao_brasindice_w		bigint;
cd_versao_simpro_w		varchar(20);
cd_unidade_convenio_w		conversao_material_convenio.cd_unidade_convenio%type;--varchar2(5);
nr_seq_conv_simpro_w		bigint;
nr_seq_mat_simpro_w		bigint;
nr_seq_simpro_preco_w		bigint;
cd_tiss_brasindice_w		varchar(15);
cd_apresentacao_bras_w		varchar(6);
cd_laboratorio_bras_w		varchar(6);
cd_medicamento_bras_w		varchar(6);
nr_seq_ajuste_proc_def_w	bigint;
nr_seq_ajuste_mat_w		bigint;
ie_classif_acomod_w		tipo_acomodacao.ie_classificacao%type;
ie_insere_w			varchar(1);
cd_estabelecimento_w		smallint;
ie_consulta_preco_w		varchar(1);
cd_material_tuss_w		bigint;
nr_seq_tuss_mat_item_w		bigint;
ds_material_tuss_w		varchar(255);
cd_simpro_material_w				varchar(15) 	:= '0';
cd_procedimento_tuss_w		proc_interno.cd_procedimento_tuss%type;
nr_seq_proc_w				proc_interno.nr_sequencia%type;


c00 CURSOR FOR
	SELECT	a.cd_convenio,
		a.ie_tipo_convenio,
		cd_estabelecimento_p
	FROM convenio a
LEFT OUTER JOIN convenio_classif c ON (a.cd_convenio = c.cd_convenio)
WHERE ((ie_todos_p = 'S') or (a.cd_convenio	= cd_convenio_p)) and a.ie_situacao = 'A' and ie_restringe_estab_w ='N' and ie_consulta_preco_w = 'N'  and ((c.nr_seq_classificacao	= coalesce(cd_classif_convenio_p,0)) or (coalesce(cd_classif_convenio_p,0)=0)) --Tdpaula 804782
union

	SELECT	a.cd_convenio,
		a.ie_tipo_convenio,
		cd_estabelecimento_p
	FROM convenio_estabelecimento b, convenio a
LEFT OUTER JOIN convenio_classif c ON (a.cd_convenio = c.cd_convenio)
WHERE ((ie_todos_p = 'S') or (a.cd_convenio	= cd_convenio_p)) and a.cd_convenio = b.cd_convenio and b.cd_estabelecimento = cd_estabelecimento_p and a.ie_situacao = 'A' and ie_restringe_estab_w = 'S' and ie_consulta_preco_w = 'N'  and ((c.nr_seq_classificacao	= coalesce(cd_classif_convenio_p,0)) or (coalesce(cd_classif_convenio_p,0)=0)) --Tdpaula 804782
 
union

	select	a.cd_convenio,
		a.ie_tipo_convenio,
		b.cd_estabelecimento
	FROM convenio_estabelecimento b, convenio a
LEFT OUTER JOIN convenio_classif c ON (a.cd_convenio = c.cd_convenio)
WHERE ((ie_todos_p = 'S') or (a.cd_convenio	= cd_convenio_p)) and a.cd_convenio = b.cd_convenio and a.ie_situacao = 'A' and ((coalesce(cd_estabelecimento_p, 0) = 0) or (coalesce(b.cd_estabelecimento,cd_estabelecimento_p) = cd_estabelecimento_p)) and ie_consulta_preco_w = 'S'  and ((c.nr_seq_classificacao	= coalesce(cd_classif_convenio_p,0)) or (coalesce(cd_classif_convenio_p,0)=0)) --Tdpaula 804782
 
union

	select	cd_convenio,
		ie_tipo_convenio,
		cd_estabelecimento_p
	from	convenio
	where	obter_se_contido(cd_convenio, elimina_aspas(ds_conv_adic_p)) = 'S'
	and	(ds_conv_adic_p IS NOT NULL AND ds_conv_adic_p::text <> '')
	and 	ie_consulta_preco_w = 'N'
	and 	ie_todos_p = 'N'
	and 	ie_situacao = 'A';


c01 CURSOR FOR
	SELECT	a.cd_categoria
	from	categoria_convenio a
	where	a.cd_convenio	= cd_convenio_w
	and 	obter_se_categoria_lib_estab(cd_estabelecimento_w, a.cd_convenio, a.cd_categoria) = 'S'
	and	a.ie_situacao	= 'A'
	and (a.cd_categoria	= coalesce(cd_categoria_p,a.cd_categoria))
	and	exists (SELECT	1
		from	convenio_amb x
		where	x.cd_convenio		= a.cd_convenio
		and	x.cd_estabelecimento	= cd_estabelecimento_w
		and	x.cd_categoria		= a.cd_categoria
		
union 	all

		select	1
		from	convenio_preco_mat x
		where	x.cd_convenio		= a.cd_convenio
		and	x.cd_estabelecimento	= cd_estabelecimento_w
		and	x.cd_categoria		= a.cd_categoria
		
union 	all

		select	1
		from	convenio_servico x
		where	x.cd_convenio		= a.cd_convenio
		and	x.cd_estabelecimento	= cd_estabelecimento_w
		and	x.cd_categoria		= a.cd_categoria
		
union   all

		select	1
		from	categoria_convenio x
		where	x.cd_convenio		= a.cd_convenio
		and	x.cd_categoria		= a.cd_categoria
		and	x.ie_preco_custo	= 'S');

c02 CURSOR FOR
	SELECT	substr(vl_dominio,1,5)
	from	valor_dominio_v
	where	cd_dominio	= 56;

c03 CURSOR FOR
	SELECT  a.cd_tipo_acomodacao,
		b.cd_categoria
	from    tipo_acomodacao a,
		categoria_convenio b
	where   a.cd_tipo_acomodacao <> b.cd_tipo_acomodacao
	and 	b.cd_convenio = cd_convenio_w
	and  	a.cd_tipo_acomodacao <> 0
	and	b.cd_categoria	= coalesce(cd_categoria_p,b.cd_categoria);

c04 CURSOR FOR
	SELECT	nr_seq_pacote
	from 	pacote
	where 	cd_proced_pacote = cd_item_p
	and 	ie_origem_proced = ie_origem_proced_p
	and 	cd_convenio  	 = cd_convenio_p;

C05 CURSOR FOR
	SELECT	distinct nr_seq_exame_dep,
		cd_convenio,
		cd_categoria
	from	exame_lab_dependente
	where	nr_seq_exame = nr_seq_exame_lab_p;


BEGIN

select	max(ie_classificacao)
into STRICT	ie_classificacao_w
from	procedimento
where	cd_procedimento 	= cd_item_p
and	ie_origem_proced	= ie_origem_proced_p;

vl_preco_kit_w 	:= 0;
vl_lanc_autom_w	:= 0;
vl_kit_w	:= 0;

if (ie_tipo_item_p <> -1) and (ie_tipo_item_p <> -5) and (ie_tipo_item_p <> -6) then
	delete	from w_consulta_preco
	where	dt_consulta	< clock_timestamp()
	and	nm_usuario	= nm_usuario_p;

	delete	from w_consulta_preco
	where	dt_consulta	< clock_timestamp() - interval '8640 seconds';
end if;

ie_restringe_estab_w 			:= coalesce(obter_valor_param_usuario(1115,18,obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N'); --tdpaula 02/12/2009 - os 177290
ie_visualiza_tx_adm_desc_w		:= coalesce(obter_valor_param_usuario(1115,20,obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');
ie_geraprecoprocpacote_w		:= coalesce(obter_valor_param_usuario(1115,23,obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');
ie_visualiza_cod_convenio_w		:= coalesce(obter_valor_param_usuario(1115,29,obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');
ie_tx_medico_co_w			:= coalesce(obter_valor_param_usuario(1115,31,obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');
ie_consulta_preco_w  			:= coalesce(Grava_log_consulta_estab_pck.get_ie_consulta_estab_log,'N');

open	c00;
loop
fetch	c00 into
	cd_convenio_w,
	ie_tipo_convenio_w,
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on c00 */
	begin

open	c01;
        loop
        fetch	c01 into
		cd_categoria_w;
        EXIT WHEN NOT FOUND; /* apply on c01 */
            begin

		cd_procedimento_w	:= cd_item_p;

		if (coalesce(nr_seq_proc_interno_p,0) <> 0) then
			begin

			SELECT * FROM obter_proc_tab_inter_preco(coalesce(nr_seq_proc_interno_p,0), 0, cd_convenio_w, cd_categoria_w, cd_plano_p, cd_tipo_acomodacao_p, cd_estabelecimento_w, dt_conta_p, ie_tipo_atendimento_p, cd_procedimento_w, ie_origem_proced_w) INTO STRICT cd_procedimento_w, ie_origem_proced_w;

			end;
		end if;
		if (ie_tipo_item_p = 0) and (nr_seq_exame_lab_p > 0) then
						
						SELECT * FROM Obter_Exame_Lab_Convenio(	nr_seq_exame_lab_p, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_p, cd_estabelecimento_p, ie_tipo_convenio_w, nr_seq_proc_interno_p, cd_material_exame_p, cd_plano_exame_w, cd_setor_exame_w, cd_procedimento_exame_w, ie_origem_proced_exame_w, ds_erro_w, nr_seq_proc_interno_aux_w, dt_conta_exame_w) INTO STRICT cd_setor_exame_w, cd_procedimento_exame_w, ie_origem_proced_exame_w, ds_erro_w, nr_seq_proc_interno_aux_w;
		end if;

        if (ie_tipo_item_p	in (0,-1,-6)) or
		(ie_classificacao_w = 1 AND ie_tipo_item_p	= 4) then



		if (ie_tipo_convenio_w	= 3) then

			SELECT * FROM sus_define_preco_proced(	dt_conta_p, cd_procedimento_w, 7, cd_estabelecimento_w, coalesce(ie_tipo_atendimento_p,0), vl_aux_w, vl_materiais_w, vl_medico_w, vl_custo_operacional_w, vl_procedimento_w, vl_procedimento_ww, vl_pto_medico_w, vl_matmed_w, vl_honorario_medico_w, vl_anestesista_w, dt_ult_vigencia_w) INTO STRICT vl_aux_w, vl_materiais_w, vl_medico_w, vl_custo_operacional_w, vl_procedimento_w, vl_procedimento_ww, vl_pto_medico_w, vl_matmed_w, vl_honorario_medico_w, vl_anestesista_w, dt_ult_vigencia_w;


			if (vl_procedimento_w	= 0) and (vl_procedimento_ww	<> 0) then
				vl_custo_operacional_w		:= (vl_procedimento_ww - (vl_honorario_medico_w + vl_matmed_w));
				if (vl_custo_operacional_w < 0) then
					vl_custo_operacional_w	:= 0;
				end if;
				vl_medico_w			:= vl_honorario_medico_w;
				vl_materiais_w			:= vl_matmed_w;
				vl_procedimento_w		:= vl_procedimento_ww;
			end if;

		else

			select 	CASE WHEN coalesce(ie_video_p,'A')='A' THEN null  ELSE ie_video_p END
			into STRICT	ie_video_w
			;
			SELECT * FROM define_preco_procedimento(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, dt_conta_p, coalesce(cd_procedimento_exame_w,cd_procedimento_w), coalesce(cd_tipo_acomodacao_p,0), coalesce(ie_tipo_atendimento_p,0), coalesce(cd_setor_atendimento_p,0), cd_medico_p, coalesce(cd_funcao_medico_p,0), coalesce(qt_idade_p,0), coalesce(nr_seq_exame_lab_p,0), coalesce(nr_seq_proc_interno_aux_w,coalesce(nr_seq_proc_interno_p,0)), cd_usuario_convenio_p, cd_plano_p, coalesce(ie_clinica_p,0), coalesce(cd_empresa_ref_p,0), ie_sexo_p,  --ie_sexo_p
	                    vl_procedimento_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_pto_procedimento_w, vl_pto_custo_operac_w, vl_pto_anestesista_w, vl_pto_medico_w, vl_pto_auxiliares_w, vl_pto_materiais_w, qt_porte_anestesico_w, qt_pontos_w, cd_edicao_amb_w, ie_preco_informado_w, nr_seq_ajuste_proc_def_w, coalesce(nr_sequencia_p,0), null, 0, ie_video_w, null, null, coalesce(cd_cgc_prestador_p,'0'), null, null, null, cd_procedencia_p, null, null, ie_carater_inter_sus_p, null, null, coalesce(ie_origem_proced_exame_w,coalesce(ie_origem_proced_w,ie_origem_proced_p)), null, null, null) INTO STRICT 
	                    vl_procedimento_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_pto_procedimento_w, vl_pto_custo_operac_w, vl_pto_anestesista_w, vl_pto_medico_w, vl_pto_auxiliares_w, vl_pto_materiais_w, qt_porte_anestesico_w, qt_pontos_w, cd_edicao_amb_w, ie_preco_informado_w, nr_seq_ajuste_proc_def_w;


			 if (ie_visualiza_cod_convenio_w = 'S') then

				SELECT * FROM converte_proc_convenio(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, coalesce(ie_origem_proced_w,ie_origem_proced_p), null, cd_medico_p, coalesce(ie_tipo_atendimento_p,0), dt_conta_p, cd_procedimento_convenio_w, cd_grupo_conversao_w, nr_seq_proc_conv_w, coalesce(cd_setor_atendimento_p,0), coalesce(cd_tipo_acomodacao_p,0), coalesce(nr_seq_proc_interno_p,0), null, cd_plano_p, coalesce(ie_clinica_p,0), vl_procedimento_w, coalesce(cd_funcao_medico_p,0), null, coalesce(qt_idade_p,0), null, coalesce(cd_empresa_ref_p,0), ie_carater_inter_sus_p, null, coalesce(nr_seq_exame_lab_p,0), null, null) INTO STRICT cd_procedimento_convenio_w, cd_grupo_conversao_w, nr_seq_proc_conv_w;
			end if;

			  --os  231941 fabricio em 16/07/2010
			nr_seq_ajuste_proc_w	:= null;
			vl_tx_adm_w		:= null;
			vl_tx_desconto_w	:= null;
			if (coalesce(ie_visualiza_tx_adm_desc_w,'N') = 'S') or (coalesce(ie_tx_medico_co_w,'N') = 'S') then
				SELECT * FROM obter_regra_ajuste_proc(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, coalesce(ie_origem_proced_w,ie_origem_proced_p), ie_video_w, dt_conta_p, coalesce(cd_tipo_acomodacao_p,0), coalesce(ie_tipo_atendimento_p,0), coalesce(cd_setor_atendimento_p,0), cd_medico_p, coalesce(cd_funcao_medico_p,0), coalesce(qt_idade_p,0), coalesce(nr_seq_exame_lab_p,0), coalesce(nr_seq_proc_interno_p,0), cd_usuario_convenio_p, cd_plano_p, coalesce(ie_clinica_p,0), coalesce(cd_empresa_ref_p,0), ie_sexo_p,  --ie_sexo_p
                    tx_retorno_number_w, tx_ajuste_custo_oper_w, tx_ajuste_medico_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_varchar_w, tx_retorno_varchar_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_varchar_w, tx_retorno_number_w, tx_retorno_varchar_w, tx_retorno_number_w, tx_retorno_varchar_w, nr_seq_ajuste_proc_w, null, null, 'A', null, coalesce(cd_cgc_prestador_p,'0'), null, null, null, tx_retorno_number_w, null, null, null, null, ie_carater_inter_sus_p, null, null, null, null, null) INTO STRICT 
                    tx_retorno_number_w, tx_ajuste_custo_oper_w, tx_ajuste_medico_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_varchar_w, tx_retorno_varchar_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_varchar_w, tx_retorno_number_w, tx_retorno_varchar_w, nr_seq_ajuste_proc_w, tx_retorno_number_w;


				if (coalesce(nr_seq_ajuste_proc_w,0) > 0) and (coalesce(ie_tx_medico_co_w,'N') = 'S') then

					select  coalesce(max(ie_ignora_ch_edicao_amb),'N')
					into STRICT	ie_ignora_ch_edicao_amb_w
					from 	regra_ajuste_proc
					where 	nr_sequencia = nr_seq_ajuste_proc_w;

				end if;

				--atualizar os campos vl_tx_desconto e vl_tx_adm  (campos informativos)
				vl_tx_adm_w	:= null;
				vl_tx_desconto_w:= null;
				if (coalesce(nr_seq_ajuste_proc_w,0) > 0) and (coalesce(ie_visualiza_tx_adm_desc_w,'N') = 'S') then

					begin
					select 	coalesce(tx_adm,0),
						coalesce(tx_desconto,0),
						tx_ajuste
					into STRICT	tx_adm_w,
						tx_desconto_w,
						tx_ajuste_w
					from 	regra_ajuste_proc
					where 	nr_sequencia = nr_seq_ajuste_proc_w
					and 	ie_situacao = 'A'
					and 	ie_glosa = 'L';
					exception
						when others then
						tx_adm_w	:= 0;
						tx_desconto_w	:= 0;
						tx_ajuste_w	:= 1;
					end;

					vl_proc_w:= vl_procedimento_w;

					if	((tx_adm_w > 0) or (tx_desconto_w > 0)) then

						vl_proc_orig_w:= dividir(vl_proc_w,tx_ajuste_w);
						vl_tx_adm_w	:= vl_proc_orig_w * tx_adm_w / 100;
						vl_tx_desconto_w:= (vl_proc_orig_w + vl_tx_adm_w) * tx_desconto_w / 100;

					end if;
				end if;
			end if;

		end if;

		select	max(a.cd_moeda)
		into STRICT	cd_moeda_w
		from	preco_amb a
		where	a.cd_edicao_amb    = cd_edicao_amb_w
		and	a.cd_procedimento  = cd_procedimento_w
		and	coalesce(a.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')	=
		(	SELECT	max(coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days'))
			from  	preco_amb b
			where 	b.cd_edicao_amb	= cd_edicao_amb_w
			and	b.cd_procedimento	= cd_procedimento_w
			and	coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')	<= dt_conta_p);

		vl_kit_w := 0;
		vl_preco_kit_w := 0;

		if (ie_calcula_kit_p = 'S') then

			vl_preco_kit_w := calcular_preco_kit(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, dt_conta_p, cd_procedimento_w, coalesce(cd_tipo_acomodacao_p,0), coalesce(qt_idade_p,0), coalesce(nr_sequencia_p,0), coalesce(ie_tipo_atendimento_p,0), coalesce(cd_setor_atendimento_p,0), ie_tipo_item_p, cd_cgc_fornecedor_p, vl_preco_kit_w);
		end if;

		if (ie_calcula_lanc_auto_p = 'S') then

			SELECT * FROM calcular_lancamento_automatico(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, dt_conta_p, coalesce(cd_tipo_acomodacao_p,0), cd_procedimento_w, coalesce(ie_origem_proced_w,ie_origem_proced_p), cd_medico_p, coalesce(cd_funcao_medico_p,0), coalesce(qt_idade_p,0), coalesce(nr_sequencia_p,0), coalesce(nr_seq_exame_lab_p,0), coalesce(nr_seq_proc_interno_p,0), coalesce(ie_tipo_atendimento_p,0), coalesce(cd_setor_atendimento_p,0), cd_usuario_convenio_p, cd_plano_p, coalesce(ie_clinica_p,0), coalesce(cd_empresa_ref_p,0), ie_tipo_item_p, cd_cgc_fornecedor_p, cd_edicao_amb_w, 'S', vl_kit_w, vl_lanc_autom_w) INTO STRICT vl_kit_w, vl_lanc_autom_w;

				vl_preco_kit_w := (vl_preco_kit_w + vl_kit_w);
		end if;


	   	vl_ch_honorarios_w	:= 0;
	   	vl_ch_custo_oper_w	:= 0;
	   	vl_filme_w 		:= 0;

	   	if (cd_edicao_amb_w IS NOT NULL AND cd_edicao_amb_w::text <> '') and (cd_edicao_amb_w > 0) then
			select	max(vl_ch_honorarios),
				max(vl_ch_custo_oper),
		 		max(vl_filme)
			into STRICT	vl_ch_honorarios_w,
				vl_ch_custo_oper_w,
				vl_filme_w
			from	convenio_amb
			where	cd_estabelecimento	= cd_estabelecimento_w
			and	cd_convenio		= cd_convenio_w
			and	cd_categoria		= cd_categoria_w
			and 	cd_edicao_amb		= cd_edicao_amb_w
			and 	coalesce(ie_situacao,'A')	= 'A'
			and	dt_inicio_vigencia	=
					(SELECT	max(dt_inicio_vigencia)
					from	convenio_amb a
					where	a.cd_estabelecimento	= cd_estabelecimento_w
					and	a.cd_convenio		= cd_convenio_w
					and	a.cd_categoria		= cd_categoria_w
					and 	cd_edicao_amb		= cd_edicao_amb_w
	   				and 	coalesce(ie_situacao,'A')	= 'A'
					and	a.dt_inicio_vigencia 	<= dt_conta_p);
            	end if;


		SELECT * FROM obter_cotacao_moeda_convenio(
				cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, coalesce(ie_origem_proced_w,ie_origem_proced_p), dt_conta_p, 'P', coalesce(cd_setor_atendimento_p,0), coalesce(ie_tipo_atendimento_p,0), coalesce(cd_funcao_medico_p,0), cd_usuario_convenio_p, cd_plano_p, coalesce(ie_clinica_p,0), coalesce(cd_empresa_ref_p,0), cd_edicao_amb_w, nr_seq_proc_interno_p, nr_seq_exame_lab_p, cd_tipo_acomodacao_p, vl_honorarios_moeda_w, vl_custo_oper_moeda_w, vl_filme_conv_moeda_w) INTO STRICT vl_honorarios_moeda_w, vl_custo_oper_moeda_w, vl_filme_conv_moeda_w;



		if (ie_calc_adicional_horario_p = 'S') then

			SELECT * FROM define_adicional_horario(cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_p, cd_convenio_w, cd_categoria_w, coalesce(cd_setor_atendimento_p,0), coalesce(ie_tipo_atendimento_p,0), ie_carater_inter_sus_p, dt_conta_p, ie_carater_cirurgia_p, ie_video_p, null, null, cd_tipo_acomodacao_p, cd_medico_p, cd_plano_p, null, tx_adic_medico_w, tx_adic_anestesista_w, tx_adic_auxiliares_w, tx_adic_custo_operacional_w, tx_adic_materiais_w, tx_adic_procedimento_w, vl_adic_proc_w, vl_adic_medico_w, cd_proced_calculo_horario_w, ie_origem_proced_horario_w, nr_seq_adic_w, ie_clinica_p, somente_numero(cd_edicao_amb_w), nr_seq_proc_interno_p) INTO STRICT tx_adic_medico_w, tx_adic_anestesista_w, tx_adic_auxiliares_w, tx_adic_custo_operacional_w, tx_adic_materiais_w, tx_adic_procedimento_w, vl_adic_proc_w, vl_adic_medico_w, cd_proced_calculo_horario_w, ie_origem_proced_horario_w, nr_seq_adic_w;

			vl_custo_operacional_w 	:= (tx_adic_custo_operacional_w 	* vl_custo_operacional_w);
			vl_anestesista_w 	:= (tx_adic_anestesista_w 		* vl_anestesista_w);
			vl_medico_w 		:= (tx_adic_medico_w * (coalesce(vl_adic_medico_w,0) + vl_medico_w));
			vl_auxiliares_w 	:= (tx_adic_auxiliares_w 		* vl_auxiliares_w);
			vl_materiais_w 		:= (tx_adic_materiais_w 		* vl_materiais_w);
			vl_procedimento_w	:= (tx_adic_procedimento_w * (coalesce(vl_adic_proc_w,0) + vl_custo_operacional_w + vl_anestesista_w +
							vl_medico_w + vl_auxiliares_w + vl_materiais_w));


		end if;


        select	nextval('w_consulta_preco_seq')
        into STRICT	nr_sequencia_w
;

	select	max(cd_edicao_amb)
	into STRICT	cd_edicao_amb_w
	from	edicao_amb
	where	cd_edicao_amb	= cd_edicao_amb_w;

	if (coalesce(ie_tx_medico_co_w,'N') = 'S') and (coalesce(ie_ignora_ch_edicao_amb_w,'N') = 'S') then
		vl_ch_honorarios_w:= null;
		vl_ch_custo_oper_w:= null;
	elsif (coalesce(ie_tx_medico_co_w,'N') = 'S') and (coalesce(nr_seq_ajuste_proc_w,0) = 0) then
		tx_ajuste_medico_w    := null;
		tx_ajuste_custo_oper_w:= null;
	elsif (coalesce(ie_tx_medico_co_w,'N') = 'S') and (coalesce(nr_seq_ajuste_proc_w,0) > 0) and (coalesce(ie_ignora_ch_edicao_amb_w,'N') = 'N') then
		tx_ajuste_medico_w    := tx_ajuste_medico_w * vl_ch_honorarios_w;
		tx_ajuste_custo_oper_w:= tx_ajuste_custo_oper_w * vl_ch_custo_oper_w;
		vl_ch_honorarios_w:= null;
		vl_ch_custo_oper_w:= null;
	end if;

	if (ie_tipo_item_p = 0 and (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '')) then
  begin
	select cd_procedimento_tuss,
			nr_sequencia
	into STRICT cd_procedimento_tuss_w,
			nr_seq_proc_w
	from proc_interno
	where cd_procedimento = cd_procedimento_w
	and ie_origem_proced = ie_origem_proced_p;
	exception
  when others then
  cd_procedimento_tuss_w	:= null;
  nr_seq_proc_w	:= null;
  end;
	end if;



        insert	into w_consulta_preco(nr_sequencia,
                cd_estabelecimento,
                dt_consulta,
                cd_convenio,
                cd_categoria,
                cd_plano,
                dt_atualizacao,
                nm_usuario,
                dt_atualizacao_nrec,
                nm_usuario_nrec,
                vl_material,
                dt_ult_vigencia,
                cd_tab_preco_mat,
                ie_origem_preco,
                vl_procedimento,
                vl_custo_operacional,
                vl_anestesista,
                vl_medico,
                vl_auxiliares,
                vl_materiais,
                vl_pto_procedimento,
                vl_pto_custo_operac,
                vl_pto_anestesista,
                vl_pto_medico,
                vl_pto_auxiliares,
                vl_pto_materiais,
                qt_porte_anestesico,
                cd_edicao_amb,
                cd_material,
                cd_procedimento,
                ie_origem_proced,
		vl_preco_kit,
		vl_lanc_autom,
		vl_ch_honorarios,
		vl_ch_custo_oper,
		vl_filme,
		vl_ch_hon_moeda,
		vl_ch_custo_oper_moeda,
		vl_filme_moeda,
		cd_moeda,
		nr_seq_regra_ajuste,
		vl_tx_adm,
		vl_tx_desconto,
		ie_tipo_item,
		tx_ajuste_medico,
		tx_ajuste_custo_oper,
		ie_ignora_ch_edicao_amb,
		cd_item_conveno,
		nr_seq_exame,
		cd_procedimento_tuss,
		nr_seq_proc_interno)
        values (nr_sequencia_w,
                cd_estabelecimento_w,
                clock_timestamp(),
                cd_convenio_w,
                cd_categoria_w,
                cd_plano_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                null,
                null,
                null,
                null,
                vl_procedimento_w + vl_preco_kit_w + vl_lanc_autom_w,
                vl_custo_operacional_w,
                vl_anestesista_w,
                vl_medico_w,
                vl_auxiliares_w,
                vl_materiais_w,
                vl_pto_procedimento_w,
                vl_pto_custo_operac_w,
                vl_pto_anestesista_w,
                vl_pto_medico_w,
                vl_pto_auxiliares_w,
                vl_pto_materiais_w,
                qt_porte_anestesico_w,
                CASE WHEN cd_edicao_amb_w=0 THEN  null  ELSE cd_edicao_amb_w END ,
                null,
                cd_procedimento_w, CASE WHEN ie_tipo_item_p=0 THEN  ie_origem_proced_p  ELSE CASE WHEN ie_tipo_item_p=-1 THEN  ie_origem_proced_p  ELSE null END  END ,
		vl_preco_kit_w,
		vl_lanc_autom_w,
		vl_ch_honorarios_w,
		vl_ch_custo_oper_w,
		vl_filme_w,
		vl_honorarios_moeda_w,
		vl_custo_oper_moeda_w,
		vl_filme_conv_moeda_w,
		cd_moeda_w,
		CASE WHEN nr_seq_ajuste_proc_w=0 THEN null  ELSE nr_seq_ajuste_proc_w END ,
		vl_tx_adm_w,
		vl_tx_desconto_w,
		ie_tipo_item_p,
		tx_ajuste_medico_w,
		tx_ajuste_custo_oper_w,
		ie_ignora_ch_edicao_amb_w,
		cd_procedimento_convenio_w,
		nr_seq_exame_lab_p,
		cd_procedimento_tuss_w,
		nr_seq_proc_w);

        elsif (ie_tipo_item_p	= 1) or
		(ie_classificacao_w <> 1 AND ie_tipo_item_p	= 4) then


		SELECT * FROM define_preco_servico(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, dt_conta_p, cd_procedimento_w, coalesce(cd_setor_atendimento_p,0), coalesce(ie_tipo_atendimento_p,0), coalesce(cd_tipo_acomodacao_p,0), cd_usuario_convenio_p, cd_plano_p, coalesce(ie_clinica_p,0), coalesce(cd_empresa_ref_p,0), ie_sexo_p, vl_procedimento_w, nr_seq_ajuste_proc_def_w, null, 0, coalesce(qt_idade_p,0), nr_seq_proc_interno_p, null, coalesce(cd_cgc_prestador_p,'0'), ie_carater_inter_sus_p, null, null, null, null, null, null, cd_medico_p) INTO STRICT vl_procedimento_w, nr_seq_ajuste_proc_def_w;


		if (ie_visualiza_cod_convenio_w = 'S') then

			SELECT * FROM converte_proc_convenio(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, coalesce(ie_origem_proced_w,ie_origem_proced_p), null, cd_medico_p, coalesce(ie_tipo_atendimento_p,0), dt_conta_p, cd_procedimento_convenio_w, cd_grupo_conversao_w, nr_seq_proc_conv_w, coalesce(cd_setor_atendimento_p,0), coalesce(cd_tipo_acomodacao_p,0), coalesce(nr_seq_proc_interno_p,0), null, cd_plano_p, coalesce(ie_clinica_p,0), vl_procedimento_w, coalesce(cd_funcao_medico_p,0), null, coalesce(qt_idade_p,0), null, coalesce(cd_empresa_ref_p,0), ie_carater_inter_sus_p, null, coalesce(nr_seq_exame_lab_p,0), null, null) INTO STRICT cd_procedimento_convenio_w, cd_grupo_conversao_w, nr_seq_proc_conv_w;
		end if;

		--os  231941 fabricio em 16/07/2010
		nr_seq_ajuste_proc_w:= null;
		if (coalesce(ie_visualiza_tx_adm_desc_w,'N') = 'S') then
			SELECT * FROM obter_regra_ajuste_proc(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, ie_origem_proced_p, null, dt_conta_p, coalesce(cd_tipo_acomodacao_p,0), coalesce(ie_tipo_atendimento_p,0), coalesce(cd_setor_atendimento_p,0), null, null, null, null, null, cd_usuario_convenio_p, cd_plano_p, coalesce(ie_clinica_p,0), coalesce(cd_empresa_ref_p,0), ie_sexo_p,  --ie_sexo_p
                tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_varchar_w, tx_retorno_varchar_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_varchar_w, tx_retorno_number_w, tx_retorno_varchar_w, tx_retorno_number_w, tx_retorno_varchar_w, nr_seq_ajuste_proc_w, null, null, null, null, coalesce(cd_cgc_prestador_p,'0'), null, null, null, tx_retorno_number_w, null, null, null, null, ie_carater_inter_sus_p, null, null, null, null, null) INTO STRICT 
                tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_varchar_w, tx_retorno_varchar_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_number_w, tx_retorno_varchar_w, tx_retorno_number_w, tx_retorno_varchar_w, nr_seq_ajuste_proc_w, tx_retorno_number_w;
			--atualizar os campos vl_tx_desconto e vl_tx_adm  (campos informativos)
			vl_tx_adm_w	:= null;
			vl_tx_desconto_w:= null;
			if (coalesce(nr_seq_ajuste_proc_w,0) > 0) then

				begin
				select 	coalesce(tx_adm,0),
					coalesce(tx_desconto,0),
					tx_ajuste
				into STRICT	tx_adm_w,
					tx_desconto_w,
					tx_ajuste_w
				from 	regra_ajuste_proc
				where 	nr_sequencia = nr_seq_ajuste_proc_w
				and 	ie_situacao = 'A'
				and 	ie_glosa = 'L';
				exception
					when others then
					tx_adm_w	:= 0;
					tx_desconto_w	:= 0;
					tx_ajuste_w	:= 1;
				end;

				vl_serv_w:= vl_procedimento_w;

				if	((tx_adm_w > 0) or (tx_desconto_w > 0)) then

					vl_serv_orig_w:= dividir(vl_serv_w,tx_ajuste_w);
					vl_tx_adm_w	:= vl_serv_orig_w * tx_adm_w / 100;
					vl_tx_desconto_w:= (vl_serv_orig_w + vl_tx_adm_w) * tx_desconto_w / 100;


				end if;
			end if;
		end if;


		select	max(a.cd_moeda)
		into STRICT	cd_moeda_w
		from	preco_servico a,
			convenio_servico b
		where	a.cd_tabela_servico = b.cd_tabela_servico
		and	b.cd_convenio = cd_convenio_w
		and	b.cd_estabelecimento = cd_estabelecimento_w
		and	b.cd_categoria = cd_categoria_w
		--and	b.dt_liberacao_tabela <= dt_conta_p
		and	trunc(dt_conta_p,'dd')	between b.dt_liberacao_tabela and coalesce(b.dt_termino, dt_conta_p)
		and	a.cd_estabelecimento = cd_estabelecimento_w
		and	a.cd_procedimento = cd_procedimento_w
		and	dt_conta_p between a.dt_inicio_vigencia and coalesce(a.dt_vigencia_final, dt_conta_p)
		and 	coalesce(b.ie_situacao,'A')	= 'A'
		and (coalesce(a.dt_inativacao::text, '') = '' or a.dt_inativacao > dt_conta_p);

		if (ie_calcula_kit_p = 'S') then
			vl_preco_kit_w := calcular_preco_kit(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, dt_conta_p, cd_procedimento_w, coalesce(cd_tipo_acomodacao_p,0), coalesce(qt_idade_p,0), coalesce(nr_sequencia_p,0), coalesce(ie_tipo_atendimento_p,0), coalesce(cd_setor_atendimento_p,0), ie_tipo_item_p, cd_cgc_fornecedor_p, vl_preco_kit_w);
		end if;

		if (ie_calcula_lanc_auto_p = 'S') then
			SELECT * FROM calcular_lancamento_automatico(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, dt_conta_p, coalesce(cd_tipo_acomodacao_p,0), cd_procedimento_w, coalesce(ie_origem_proced_w,ie_origem_proced_p), cd_medico_p, coalesce(cd_funcao_medico_p,0), coalesce(qt_idade_p,0), coalesce(nr_sequencia_p,0), coalesce(nr_seq_exame_lab_p,0), coalesce(nr_seq_proc_interno_p,0), coalesce(ie_tipo_atendimento_p,0), coalesce(cd_setor_atendimento_p,0), cd_usuario_convenio_p, cd_plano_p, coalesce(ie_clinica_p,0), coalesce(cd_empresa_ref_p,0), ie_tipo_item_p, cd_cgc_fornecedor_p, null, 'S', vl_kit_w, vl_lanc_autom_w) INTO STRICT vl_kit_w, vl_lanc_autom_w;

		end if;


	   	vl_ch_honorarios_w	:= 0;
	   	vl_ch_custo_oper_w	:= 0;
	   	vl_filme_w 		:= 0;

	   	if (cd_edicao_amb_w IS NOT NULL AND cd_edicao_amb_w::text <> '') and (cd_edicao_amb_w > 0) then
			select	vl_ch_honorarios,
				vl_ch_custo_oper,
		 		vl_filme
			into STRICT	vl_ch_honorarios_w,
				vl_ch_custo_oper_w,
				vl_filme_w
			from	convenio_amb
			where	cd_estabelecimento	= cd_estabelecimento_w
			and	cd_convenio		= cd_convenio_w
			and	cd_categoria		= cd_categoria_w
			and 	cd_edicao_amb		= cd_edicao_amb_w
			and 	coalesce(ie_situacao,'A')	= 'A'
			and	dt_inicio_vigencia	=
					(SELECT	max(dt_inicio_vigencia)
					from	convenio_amb a
					where	a.cd_estabelecimento	= cd_estabelecimento_w
					and	a.cd_convenio		= cd_convenio_w
					and	a.cd_categoria		= cd_categoria_w
					and 	cd_edicao_amb		= cd_edicao_amb_w
	   				and 	coalesce(ie_situacao,'A')	= 'A'
					and	a.dt_inicio_vigencia 	<= dt_conta_p);
            	end if;

		if (ie_calc_adicional_horario_p = 'S') then

			SELECT * FROM define_adicional_horario(cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_p, cd_convenio_w, cd_categoria_w, coalesce(cd_setor_atendimento_p,0), coalesce(ie_tipo_atendimento_p,0), ie_carater_inter_sus_p, dt_conta_p, ie_carater_cirurgia_p, ie_video_p, null, null, cd_tipo_acomodacao_p, cd_medico_p, cd_plano_p, null, tx_adic_medico_w, tx_adic_anestesista_w, tx_adic_auxiliares_w, tx_adic_custo_operacional_w, tx_adic_materiais_w, tx_adic_procedimento_w, vl_adic_proc_w, vl_adic_medico_w, cd_proced_calculo_horario_w, ie_origem_proced_horario_w, nr_seq_adic_w, null, null, nr_seq_proc_interno_p) INTO STRICT tx_adic_medico_w, tx_adic_anestesista_w, tx_adic_auxiliares_w, tx_adic_custo_operacional_w, tx_adic_materiais_w, tx_adic_procedimento_w, vl_adic_proc_w, vl_adic_medico_w, cd_proced_calculo_horario_w, ie_origem_proced_horario_w, nr_seq_adic_w;

			vl_procedimento_w	:= (tx_adic_procedimento_w * (coalesce(vl_adic_medico_w,0) + vl_procedimento_w));

		end if;



            select	nextval('w_consulta_preco_seq')
            into STRICT	nr_sequencia_w
;

            insert	into w_consulta_preco(nr_sequencia,
                cd_estabelecimento,
                dt_consulta,
                cd_convenio,
                cd_categoria,
                cd_plano,
                dt_atualizacao,
                nm_usuario,
                dt_atualizacao_nrec,
                nm_usuario_nrec,
                vl_material,
                dt_ult_vigencia,
                cd_tab_preco_mat,
                ie_origem_preco,
                vl_procedimento,
                vl_custo_operacional,
                vl_anestesista,
                vl_medico,
                vl_auxiliares,
                vl_materiais,
                vl_pto_procedimento,
                vl_pto_custo_operac,
                vl_pto_anestesista,
                vl_pto_medico,
                vl_pto_auxiliares,
                vl_pto_materiais,
                qt_porte_anestesico,
                cd_edicao_amb,
                cd_material,
                cd_procedimento,
                ie_origem_proced,
		vl_preco_kit,
		vl_lanc_autom,
		vl_ch_honorarios,
		vl_ch_custo_oper,
		vl_filme,
		cd_moeda,
		nr_seq_regra_ajuste,
		vl_tx_adm,
		vl_tx_desconto,
		ie_tipo_item,
		cd_item_conveno,
		nr_seq_exame,
		cd_procedimento_tuss,
			nr_seq_proc_interno)
            values (nr_sequencia_w,
                cd_estabelecimento_w,
                clock_timestamp(),
                cd_convenio_w,
                cd_categoria_w,
                cd_plano_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                null,
                null,
                null,
                null,
                vl_procedimento_w + vl_preco_kit_w + vl_lanc_autom_w,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                cd_procedimento_w, null,
		vl_preco_kit_w,
		vl_lanc_autom_w,
		vl_ch_honorarios_w,
		vl_ch_custo_oper_w,
		vl_filme_w,
		cd_moeda_w,
		CASE WHEN nr_seq_ajuste_proc_w=0 THEN null  ELSE nr_seq_ajuste_proc_w END ,
		vl_tx_adm_w,
		vl_tx_desconto_w,
		ie_tipo_item_p,
		cd_procedimento_convenio_w,
		nr_seq_exame_lab_p,
		cd_procedimento_tuss_w,
		nr_seq_proc_w);

            elsif (ie_tipo_item_p	= 2) then


		select 	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo
		into STRICT	cd_unidade_medida_consumo_w
		from 	material
		where	cd_material = cd_item_p;

                SELECT * FROM define_preco_material(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, dt_conta_p, cd_item_p, coalesce(cd_tipo_acomodacao_p,0), coalesce(ie_tipo_atendimento_p,0), coalesce(cd_setor_atendimento_p,0), cd_cgc_fornecedor_p, coalesce(qt_idade_p,0), coalesce(nr_sequencia_p,0), cd_plano_p, null, null, nr_seq_marca_p, ie_clinica_p, null, null, null, vl_material_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT vl_material_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;

		ie_versao_brasindice_w	:= null;
		cd_tiss_brasindice_w	:= null;
		cd_apresentacao_bras_w	:= null;
		cd_laboratorio_bras_w	:= null;
		cd_medicamento_bras_w	:= null;

		if (coalesce(nr_seq_ajuste_mat_w,0)  <> 0 ) and (coalesce(dt_ult_vigencia_w::text, '') = '')then
			select 	dt_inicio_vigencia
			into STRICT 	dt_ult_vigencia_w
			from 	regra_ajuste_material
			where 	nr_sequencia = nr_seq_ajuste_mat_w;
		 end if;

		if (ie_origem_preco_w = 1) then
			select 	max(ie_versao_atual),
				max(cd_tiss),
				max(cd_apresentacao),
				max(cd_laboratorio),
				max(cd_medicamento)
			into STRICT	ie_versao_brasindice_w,
				cd_tiss_brasindice_w,
				cd_apresentacao_bras_w,
				cd_laboratorio_bras_w,
				cd_medicamento_bras_w
			from 	brasindice_preco
			where 	nr_sequencia = nr_seq_bras_preco_w;
		end if;

		cd_versao_simpro_w   := null;
		cd_simpro_material_w := null;

		if (ie_origem_preco_w = 4) then

			select 	Obter_Versao_Simpro(cd_item_p, cd_convenio_w, cd_estabelecimento_w, dt_conta_p)
			into STRICT	cd_versao_simpro_w
			;

			select 	lpad(max(cd_simpro),15,0)
			into STRICT	cd_simpro_material_w
			from	material_simpro
			where	nr_sequencia = nr_seq_mat_simpro_w;

		end if;



		if (ie_visualiza_cod_convenio_w = 'S') then

			SELECT * FROM converte_material_convenio(cd_convenio_w, cd_item_p, coalesce(cd_setor_atendimento_p,0), coalesce(cd_tipo_acomodacao_p,0), cd_cgc_fornecedor_p, cd_estabelecimento_w, dt_conta_p, cd_categoria_w, cd_material_convenio_w, cd_grupo_conversao_w, nr_seq_material_conv_w, ie_tipo_atendimento_p, ie_origem_preco_w, cd_empresa_ref_p, null, ie_carater_inter_sus_p, nr_seq_marca_p, null, ie_clinica_p, null) INTO STRICT cd_material_convenio_w, cd_grupo_conversao_w, nr_seq_material_conv_w;

			select 	max(cd_unidade_convenio)
			into STRICT	cd_unidade_convenio_w
			from 	conversao_material_convenio
			where 	nr_sequencia = nr_seq_material_conv_w;
		end if;


	    select 	max(nr_registro_anvisa)
	    into STRICT	nr_registro_anvisa_w
	    from 	material_estab
	    where 	cd_material = cd_item_p
	    and 	cd_estabelecimento = cd_estabelecimento_w;

	   SELECT * FROM Define_Material_TUSS( cd_estabelecimento_w, cd_item_p, cd_convenio_w, cd_categoria_w, coalesce(ie_tipo_atendimento_p,0), ie_origem_preco_w, dt_conta_p, nr_seq_simpro_preco_w, nr_seq_bras_preco_w, 0, nm_usuario_p, cd_material_tuss_w, nr_seq_tuss_mat_item_w, ds_material_tuss_w, cd_cgc_fornecedor_p) INTO STRICT cd_material_tuss_w, nr_seq_tuss_mat_item_w, ds_material_tuss_w;

            select	nextval('w_consulta_preco_seq')
            into STRICT	nr_sequencia_w
;

            insert	into w_consulta_preco(nr_sequencia,
                cd_estabelecimento,
                dt_consulta,
                cd_convenio,
                cd_categoria,
                cd_plano,
                dt_atualizacao,
                nm_usuario,
                dt_atualizacao_nrec,
                nm_usuario_nrec,
                vl_material,
                dt_ult_vigencia,
                cd_tab_preco_mat,
                ie_origem_preco,
                vl_procedimento,
                vl_custo_operacional,
                vl_anestesista,
                vl_medico,
                vl_auxiliares,
                vl_materiais,
                vl_pto_procedimento,
                vl_pto_custo_operac,
                vl_pto_anestesista,
                vl_pto_medico,
                vl_pto_auxiliares,
                vl_pto_materiais,
                qt_porte_anestesico,
                cd_edicao_amb,
                cd_material,
                cd_procedimento,
                ie_origem_proced,
		cd_unidade_medida_consumo,
		ie_tipo_item,
		cd_item_conveno,
		cd_grupo_conv,
		nr_registro_anvisa,
		nr_seq_exame,
		ie_versao_atual,
		cd_versao_simpro,
		cd_unidade_convenio,
		cd_tiss_brasindice,
		cd_apresentacao_bras,
		cd_laboratorio_bras,
		cd_medicamento_bras,
		cd_material_tuss,
		ds_material_tuss,
		cd_simpro_material)
            values (nr_sequencia_w,
                cd_estabelecimento_w,
                clock_timestamp(),
                cd_convenio_w,
                cd_categoria_w,
                cd_plano_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                vl_material_w,
                dt_ult_vigencia_w,
                CASE WHEN cd_tab_preco_mat_w=0 THEN null  ELSE cd_tab_preco_mat_w END ,
                ie_origem_preco_w,
                null,null,null,null,
                null,null,null,null,
                null,null,null,null,
                null,null,cd_item_p,
                null, null,cd_unidade_medida_consumo_w,ie_tipo_item_p,
		cd_material_convenio_w,
		cd_grupo_conversao_w,
		nr_registro_anvisa_w,
		nr_seq_exame_lab_p,
		ie_versao_brasindice_w,
		cd_versao_simpro_w,
		cd_unidade_convenio_w,
		cd_tiss_brasindice_w,
		cd_apresentacao_bras_w,
		cd_laboratorio_bras_w,
		cd_medicamento_bras_w,
		cd_material_tuss_w,
		ds_material_tuss_w,
		cd_simpro_material_w);

            end if;

            end;
        end loop;
        close c01;

	if (ie_tipo_item_p	= 3) then

		begin
		open	c03;
		loop
		fetch	c03 into
			cd_tipo_acomodacao_w,
			cd_categoria_ww;

		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin

			SELECT * FROM calcular_diferenca_diaria(
				cd_estabelecimento_w, cd_convenio_w, cd_categoria_ww, cd_plano_p, null, cd_tipo_acomodacao_w, dt_conta_p, qt_dia_int_p, 'A', cd_proc_diaria_w, ie_origem_proc_diaria_w, vl_categoria_w, vl_diferenca_w, ie_calculo_diferenca_w) INTO STRICT cd_proc_diaria_w, ie_origem_proc_diaria_w, vl_categoria_w, vl_diferenca_w, ie_calculo_diferenca_w;


			if (vl_diferenca_w <> 0) then

				select	nextval('w_consulta_preco_seq')
        	    		into STRICT	nr_sequencia_w
			    	;

			        insert	into w_consulta_preco(nr_sequencia,
                			cd_estabelecimento,
                			dt_consulta,
                			cd_convenio,
                			cd_categoria,
                			cd_plano,
                			dt_atualizacao,
                			nm_usuario,
                			dt_atualizacao_nrec,
                			nm_usuario_nrec,
                			vl_material,
                			dt_ult_vigencia,
                			cd_tab_preco_mat,
                			ie_origem_preco,
                			vl_procedimento,
                			vl_custo_operacional,
                			vl_anestesista,
                			vl_medico,
                			vl_auxiliares,
                			vl_materiais,
                			vl_pto_procedimento,
                			vl_pto_custo_operac,
                			vl_pto_anestesista,
                			vl_pto_medico,
                			vl_pto_auxiliares,
                			vl_pto_materiais,
                			qt_porte_anestesico,
                			cd_edicao_amb,
                			cd_material,
                			cd_procedimento,
                			ie_origem_proced,
					cd_proc_diaria,
					ie_origem_proc_diaria,
					ie_calculo_diferenca,
					vl_diferenca_diaria,
					cd_tipo_acomodacao,
					ie_tipo_item,
					nr_seq_exame)
            			values (nr_sequencia_w,
                			cd_estabelecimento_w,
                			clock_timestamp(),
                			cd_convenio_w,
                			cd_categoria_ww,
                			cd_plano_p,
                			clock_timestamp(),
                			nm_usuario_p,
                			clock_timestamp(),
                			nm_usuario_p,
                			null,
                			null,
                			null,
                			null,
                			vl_categoria_w,null,null,null,
                			null,null,null,null,null,null,
					null,null,null,null,null,null,
					null,cd_proc_diaria_w,ie_origem_proc_diaria_w,
					ie_calculo_diferenca_w, vl_diferenca_w,
					cd_tipo_acomodacao_w,
					ie_tipo_item_p,
					nr_seq_exame_lab_p);

			end if;
			end;
		end loop;
		close c03;
		end;
	end if;


	if (ie_tipo_item_p	= 5) then

		ie_localiza_pacote_w:= coalesce(obter_valor_param_usuario(1115,24, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');

		begin
		open 	c02;
		loop
		fetch	c02 into
			ie_tipo_acomodacao_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

			ie_insere_w:= 'S';

			if (cd_tipo_acomodacao_p IS NOT NULL AND cd_tipo_acomodacao_p::text <> '') then

				ie_insere_w:= 'N';

				select 	max(ie_classificacao)
				into STRICT	ie_classif_acomod_w
				from 	tipo_acomodacao
				where 	cd_tipo_acomodacao = cd_tipo_acomodacao_p;

				if (ie_classif_acomod_w IS NOT NULL AND ie_classif_acomod_w::text <> '') and (ie_tipo_acomodacao_w = ie_classif_acomod_w) then

					ie_insere_w:= 'S';

				end if;

			end if;

			if (ie_localiza_pacote_w = 'N') then
				SELECT * FROM consulta_valor_pacote(nr_seq_pacote_p, ie_tipo_acomodacao_w, nm_usuario_p, dt_conta_p, cd_categoria_p, cd_plano_p, qt_idade_p, ie_clinica_p, ie_tipo_anestesia_p, cd_setor_atendimento_p, vl_procedimento_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_materiais_w, nr_seq_pac_acomod_w) INTO STRICT vl_procedimento_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_materiais_w, nr_seq_pac_acomod_w;
			else
				SELECT * FROM consulta_valor_pacote_proc(nr_seq_pacote_p, ie_tipo_acomodacao_w, cd_item_p, nm_usuario_p, dt_conta_p, cd_categoria_p, cd_plano_p, qt_idade_p, ie_clinica_p, ie_tipo_anestesia_p, cd_setor_atendimento_p, vl_procedimento_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_materiais_w, nr_seq_pac_acomod_w) INTO STRICT vl_procedimento_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_materiais_w, nr_seq_pac_acomod_w;
			end if;

			if (ie_insere_w = 'S') then


				select	substr(max(ds_observacao),1,255)
				into STRICT	ds_observacao_w
				from 	pacote
				where 	nr_seq_pacote = nr_seq_pacote_p;

				select	nextval('w_consulta_preco_seq')
				into STRICT	nr_sequencia_w
				;

				insert	into w_consulta_preco(nr_sequencia,
					cd_estabelecimento,
					dt_consulta,
					cd_convenio,
					cd_categoria,
					cd_plano,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					vl_material,
					dt_ult_vigencia,
					cd_tab_preco_mat,
					ie_origem_preco,
					vl_procedimento,
					vl_custo_operacional,
					vl_anestesista,
					vl_medico,
					vl_auxiliares,
					vl_materiais,
					vl_pto_procedimento,
					vl_pto_custo_operac,
					vl_pto_anestesista,
					vl_pto_medico,
					vl_pto_auxiliares,
					vl_pto_materiais,
					qt_porte_anestesico,
					cd_edicao_amb,
					cd_material,
					cd_procedimento,
					ie_origem_proced,
					ie_tipo_acomodacao,
					nr_seq_pac_acomod,
					ie_tipo_item,
					ds_observacao,
					nr_seq_exame)
				values (nr_sequencia_w,
					cd_estabelecimento_w,
					clock_timestamp(),
					cd_convenio_w,
					null,
					cd_plano_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					null,
					null,
					null,
					null,
					coalesce(vl_procedimento_w, 0),
					null,coalesce(vl_anestesista_w,0),
					coalesce(vl_medico_w,0),
					coalesce(vl_auxiliares_w,0),coalesce(vl_materiais_w,0),null,null,
					null,null,null,null,
					null,null,null,
					null, null, ie_tipo_acomodacao_w,
					nr_seq_pac_acomod_w,
					ie_tipo_item_p,
					ds_observacao_w,
					nr_seq_exame_lab_p);

			end if;

			end;
		end loop;
		close c02;
		end;
	end if;

if (ie_tipo_item_p	= -5) then

		ie_localiza_pacote_w:= coalesce(obter_valor_param_usuario(1115,24, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');

		begin
		open 	c02;
		loop
		fetch	c02 into
			ie_tipo_acomodacao_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			open c04;
			loop
			fetch c04 into
				nr_seq_pacote_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */
				begin

				ie_insere_w:= 'S';

				if (cd_tipo_acomodacao_p IS NOT NULL AND cd_tipo_acomodacao_p::text <> '') then

					ie_insere_w:= 'N';

					select 	max(ie_classificacao)
					into STRICT	ie_classif_acomod_w
					from 	tipo_acomodacao
					where 	cd_tipo_acomodacao = cd_tipo_acomodacao_p;

					if (ie_classif_acomod_w IS NOT NULL AND ie_classif_acomod_w::text <> '') and (ie_tipo_acomodacao_w = ie_classif_acomod_w) then

						ie_insere_w:= 'S';

					end if;

				end if;

				if (ie_localiza_pacote_w = 'N') then
					SELECT * FROM consulta_valor_pacote(nr_seq_pacote_w, ie_tipo_acomodacao_w, nm_usuario_p, dt_conta_p, cd_categoria_p, cd_plano_p, qt_idade_p, ie_clinica_p, ie_tipo_anestesia_p, cd_setor_atendimento_p, vl_procedimento_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_materiais_w, nr_seq_pac_acomod_w) INTO STRICT vl_procedimento_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_materiais_w, nr_seq_pac_acomod_w;
				else
					SELECT * FROM consulta_valor_pacote_proc(nr_seq_pacote_w, ie_tipo_acomodacao_w, cd_item_p, nm_usuario_p, dt_conta_p, cd_categoria_p, cd_plano_p, qt_idade_p, ie_clinica_p, ie_tipo_anestesia_p, cd_setor_atendimento_p, vl_procedimento_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_materiais_w, nr_seq_pac_acomod_w) INTO STRICT vl_procedimento_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_materiais_w, nr_seq_pac_acomod_w;
				end if;

				if (ie_insere_w = 'S') then

					select	nextval('w_consulta_preco_seq')
					into STRICT	nr_sequencia_w
					;

					select	substr(max(ds_observacao),1,255)
					into STRICT	ds_observacao_w
					from 	pacote
					where 	nr_seq_pacote = nr_seq_pacote_w;

					insert	into w_consulta_preco(	nr_sequencia,
									cd_estabelecimento,
									dt_consulta,
									cd_convenio,
									cd_categoria,
									cd_plano,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									vl_material,
									dt_ult_vigencia,
									cd_tab_preco_mat,
									ie_origem_preco,
									vl_procedimento,
									vl_custo_operacional,
									vl_anestesista,
									vl_medico,
									vl_auxiliares,
									vl_materiais,
									vl_pto_procedimento,
									vl_pto_custo_operac,
									vl_pto_anestesista,
									vl_pto_medico,
									vl_pto_auxiliares,
									vl_pto_materiais,
									qt_porte_anestesico,
									cd_edicao_amb,
									cd_material,
									cd_procedimento,
									ie_origem_proced,
									ie_tipo_acomodacao,
									nr_seq_pac_acomod,
									ie_tipo_item,
									ds_observacao,
									nr_seq_exame)
								values (	nr_sequencia_w,
								cd_estabelecimento_w,
								clock_timestamp(),
								cd_convenio_w,
								null,
								cd_plano_p,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								null,
								null,
								null,
								null,
								coalesce(vl_procedimento_w, 0),
								null,coalesce(vl_anestesista_w,0),
								coalesce(vl_medico_w,0),
								coalesce(vl_auxiliares_w,0),coalesce(vl_materiais_w,0),null,null,
								null,null,null,null,
								null,null,null,
								null, null, ie_tipo_acomodacao_w,
								nr_seq_pac_acomod_w,
								ie_tipo_item_p,
								ds_observacao_w,
								nr_seq_exame_lab_p);
				end if;

				end;
			end loop;
			close c04;
			end;
		end loop;
		close c02;
		end;
	end if;

	end;
end loop;
close c00;

if (ie_geraprecoprocpacote_w = 'S') and (ie_tipo_item_p in (5,0)) then

	if (ie_tipo_item_p = 5) then
		ie_tipo_item_w := -1;
	else
		ie_tipo_item_w := -5;
	end if;

	CALL gerar_consulta_preco(	cd_estabelecimento_p,
				cd_convenio_p,
				dt_conta_p,
				cd_item_p,
				ie_origem_proced_p,
				ie_tipo_item_w,
				cd_tipo_acomodacao_p,
				ie_tipo_atendimento_p,
				cd_setor_atendimento_p,
				cd_medico_p,
				cd_funcao_medico_p,
				qt_idade_p,
				nr_seq_exame_lab_p,
				nr_seq_proc_interno_p,
				cd_usuario_convenio_p,
				cd_plano_p,
				ie_clinica_p,
				cd_empresa_ref_p,
				cd_cgc_fornecedor_p,
				nr_sequencia_p,
				nr_seq_pacote_p,
				ds_conv_adic_p,
				nm_usuario_p,
				ie_carater_inter_sus_p,
				ie_carater_cirurgia_p,
				ie_video_p,
				qt_dia_int_p,
				ie_calcula_kit_p,
				ie_calcula_lanc_auto_p,
				ie_calc_adicional_horario_p,
				ie_todos_p,
				cd_categoria_p,
				cd_procedencia_p,
				nr_seq_marca_p,
				ie_tipo_anestesia_p,
				cd_cgc_prestador_p,
				cd_classif_convenio_p,
                ie_sexo_p);
end if;

if (ie_tipo_item_p = 0) and (nr_seq_exame_lab_p > 0) then

	ie_tipo_item_w := -6;

	select	count(*)
	into STRICT	qt_existe_w
	from	exame_lab_dependente
	where	nr_seq_exame = nr_seq_exame_lab_p;

	open C05;
	loop
	fetch C05 into
		nr_seq_exame_dep_w,
		cd_convenio_w,
        cd_categoria_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin
		SELECT * FROM Obter_Exame_Lab_Convenio(nr_seq_exame_dep_w, cd_convenio_w, cd_categoria_w, 0, cd_estabelecimento_p, ie_tipo_convenio_w, nr_seq_proc_interno_p, null, null, cd_setor_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_interno_aux_w) INTO STRICT cd_setor_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_interno_aux_w;

		CALL gerar_consulta_preco(	cd_estabelecimento_p,
					cd_convenio_p,
					dt_conta_p,
					cd_procedimento_w,
					ie_origem_proced_w,
					ie_tipo_item_w,
					cd_tipo_acomodacao_p,
					ie_tipo_atendimento_p,
					cd_setor_atendimento_p,
					cd_medico_p,
					cd_funcao_medico_p,
					qt_idade_p,
					nr_seq_exame_dep_w,
					nr_seq_proc_interno_p,
					cd_usuario_convenio_p,
					cd_plano_p,
					ie_clinica_p,
					cd_empresa_ref_p,
					cd_cgc_fornecedor_p,
					nr_sequencia_p,
					nr_seq_pacote_p,
					ds_conv_adic_p,
					nm_usuario_p,
					ie_carater_inter_sus_p,
					ie_carater_cirurgia_p,
					ie_video_p,
					qt_dia_int_p,
					ie_calcula_kit_p,
					ie_calcula_lanc_auto_p,
					ie_calc_adicional_horario_p,
					ie_todos_p,
					cd_categoria_p,
					cd_procedencia_p,
					nr_seq_marca_p,
					ie_tipo_anestesia_p,
					cd_cgc_prestador_p,
					cd_classif_convenio_p,
                    ie_sexo_p);
		end;
	end loop;
	close C05;

end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_consulta_preco (cd_estabelecimento_p bigint, cd_convenio_p bigint, dt_conta_p timestamp, cd_item_p bigint, ie_origem_proced_p bigint, ie_tipo_item_p bigint, cd_tipo_acomodacao_p bigint, ie_tipo_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_medico_p text, cd_funcao_medico_p bigint, qt_idade_p bigint, nr_seq_exame_lab_p bigint, nr_seq_proc_interno_p bigint, cd_usuario_convenio_p text, cd_plano_p text, ie_clinica_p bigint, cd_empresa_ref_p bigint, cd_cgc_fornecedor_p text, nr_sequencia_p bigint, nr_seq_pacote_p bigint, ds_conv_adic_p text, nm_usuario_p text, ie_carater_inter_sus_p text, ie_carater_cirurgia_p text, ie_video_p text, qt_dia_int_p bigint, ie_calcula_kit_p text, ie_calcula_lanc_auto_p text, ie_calc_adicional_horario_p text, ie_todos_p text, cd_categoria_p text, cd_procedencia_p bigint, nr_seq_marca_p bigint, ie_tipo_anestesia_p text, cd_cgc_prestador_p text, cd_classif_convenio_p bigint, ie_sexo_p text, cd_material_exame_p text default null) FROM PUBLIC;

