-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_w_analise_pos_agr ( nr_seq_analise_p bigint, nr_seq_conta_p bigint, nr_seq_grupo_p bigint, ie_minha_analise_p text, ie_pendentes_p text, nm_usuario_p text, nr_id_transacao_p w_pls_analise_item.nr_id_transacao%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar os procedimentos agrupadores (que possuem participantes) e chamar rotina para
geração dos participantes do mesmo - Análise de Pós
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_item_w			varchar(255);
nm_prestador_w			varchar(255);
ds_via_acesso_w			varchar(255);
ds_tipo_guia_w			varchar(255);
nm_prestador_solic_w		varchar(255);
nm_prestador_exec_w		varchar(255);
nm_prestador_pag_w		varchar(255);
ds_fornecedor_w			varchar(255);
ds_setor_atend_w		varchar(255);
ds_item_importacao_w		varchar(255);
ds_espec_cbo_w			varchar(255);
ds_medico_executor_w		varchar(255);
ds_grau_partic_w		varchar(255);
ds_status_item_w		varchar(255);
nm_prestador_solic_honor_w	varchar(255);
nm_prestador_exec_honor_w	varchar(255);
ds_tipo_guia_honor_w		varchar(255);
ds_espec_cbo_honor_w		varchar(255);
ds_medico_executor_honor_w	varchar(255);
ie_glosa_w			varchar(255);
ds_procedimento_w		procedimento.ds_procedimento%TYPE;
ds_ident_nivel_1_w		varchar(60);
ds_ident_nivel_2_w		varchar(60);
ds_ident_nivel_3_w		varchar(60);
ds_identacao_w			varchar(30);
cd_guia_w			varchar(30);
cd_guia_conta_honor_w		varchar(30);
cd_guia_honor_w			varchar(30);
cd_prestador_exec_w		varchar(30);
cd_prestador_exec_honor_w	varchar(30);
ie_autorizado_w			varchar(20);
cd_medico_executor_honor_w	varchar(20);
ie_tipo_guia_conta_honor_w	varchar(20);
ie_autorizado_honor_w		varchar(20);
ie_tipo_linha_w			varchar(10);
ie_tipo_despesa_w		varchar(10);
ie_tipo_item_w			varchar(10);
cd_medico_w			varchar(10);
ie_via_acesso_w			varchar(10);
cd_porte_anestesico_w		varchar(10);
ie_status_analise_w		varchar(3)	:= 'S';/* Analisado pelo sistema */
ie_pagamento_w			varchar(3)	:= null;
ie_status_item_w		varchar(2);
ie_tipo_guia_w			varchar(2);
ie_status_faturamento_w		varchar(2);
ie_expandido_w			varchar(1)	:= null;
ie_pend_grupo_w			varchar(1)	:= null;
ie_minha_analise_w		varchar(1)	:= 'N';
ie_pendentes_w			varchar(1)	:= 'N';
ie_nao_finalizar_w		varchar(1)	:= null;
ie_item_nao_encontrado_w	varchar(1);
ie_proc_ref_w			varchar(1);
ie_selecionado_w		varchar(1)	:= 'N';
ie_sem_fluxo_w			varchar(1)	:= null;
ie_faturamento_w		varchar(1);
ie_partic_agrup_w		varchar(1);
vl_taxa_servico_imp_w		double precision;
vl_taxa_co_imp_w		double precision;
vl_taxa_material_imp_w		double precision;
vl_taxa_servico_w		double precision;
vl_taxa_co_w			double precision;
vl_taxa_material_w		double precision;
vl_procedimento_imp_w		double precision;
vl_proc_unitario_w		double precision;
vl_procedimento_w		double precision;
vl_unitario_imp_w		double precision;
vl_glosa_w			double precision;
vl_liberado_w			double precision;
vl_glosa_material_w		double precision;
vl_glosa_hi_w			double precision;
vl_glosa_co_w			double precision;
vl_custo_operacional_w		double precision;
vl_liberado_material_w		double precision;
vl_liberado_co_w		double precision;
vl_liberado_hi_w		double precision;
vl_calculado_material_w		double precision;
vl_calculado_co_w		double precision;
vl_calculado_hi_w		double precision;
vl_taxa_intercambio_w		double precision;
vl_taxa_intercambio_imp_w	double precision;
vl_unitario_apres_w		double precision;
vl_base_w			double precision;
vl_unitario_apres_ww		double precision	:= 0;
vl_taxa_intercambio_imp_ww	double precision	:= 0;
vl_taxa_intercambio_ww		double precision	:= 0;
vl_liberado_material_ww		double precision	:= 0;
vl_liberado_hi_ww		double precision	:= 0;
vl_liberado_co_ww		double precision	:= 0;
vl_liberado_ww			double precision	:= 0;
vl_glosa_material_ww		double precision	:= 0;
vl_glosa_hi_ww			double precision	:= 0;
vl_glosa_co_ww			double precision	:= 0;
vl_glosa_ww			double precision	:= 0;
vl_custo_operacional_ww		double precision	:= 0;
vl_proc_unitario_ww		double precision	:= 0;
vl_calculado_material_ww	double precision	:= 0;
vl_calculado_co_ww		double precision	:= 0;
vl_calculado_hi_ww		double precision	:= 0;
vl_procedimento_ww		double precision	:= 0;
vl_lib_taxa_co_w		double precision;
vl_lib_taxa_material_w		double precision;
vl_lib_taxa_servico_w		double precision;
vl_glosa_taxa_co_w		double precision;
vl_glosa_taxa_material_w	double precision;
vl_glosa_taxa_servico_w		double precision;
vl_lib_taxa_co_honor_w		double precision;
vl_lib_taxa_material_honor_w	double precision;
vl_lib_taxa_servico_honor_w	double precision;
vl_glosa_taxa_co_honor_w	double precision;
vl_glosa_taxa_material_honor_w	double precision;
vl_glosa_taxa_servico_honor_w	double precision;
vl_taxa_co_honor_w		double precision;
vl_taxa_co_imp_honor_w		double precision;
vl_taxa_material_honor_w	double precision;
vl_taxa_material_imp_honor_w	double precision;
vl_taxa_servico_honor_w		double precision;
vl_taxa_servico_imp_honor_w	double precision;
vl_calculado_fat_w		double precision;
vl_beneficiario_w		double precision;
vl_unitario_w			double precision;
vl_proc_pag_calc_w		double precision;
vl_proc_pag_apres_w		double precision;
vl_proc_pag_lib_w		double precision;
vl_proc_pag_glosa_w		double precision;
cd_procedimento_w		bigint;
qt_liberado_w			double precision;
qt_procedimento_imp_w		double precision;
qt_liberar_w			double precision;
qt_original_w			double precision;
qt_item_w			double precision;
qt_proc_pag_w			double precision;
qt_proc_pag_lib_w		double precision;
nr_seq_conta_proc_w		bigint;
nr_seq_conta_proc_ww		bigint;
nr_seq_proc_partic_w		bigint;
nr_seq_prestador_pgto_w		bigint;
nr_seq_proc_pai_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_guia_w			bigint;
nr_seq_guia_honor_w		bigint;
nr_seq_prestador_exec_w		bigint;
nr_seq_protocolo_w		bigint;
nr_seq_prest_fornec_w		bigint;
nr_seq_setor_atend_w		bigint;
nr_auxiliares_w			bigint;
nr_seq_grau_partic_w		bigint;
nr_sequencia_w			bigint	:= 0;
nr_sequencia_aux_w		bigint	:= 0;
qt_informativo_w		bigint;
nr_seq_proc_ref_w		bigint;
nr_seq_prestador_honor_w	bigint;
nr_seq_conta_w			bigint;
nr_seq_protocolo_honor_w	bigint;
nr_seq_prestador_solic_honor_w	bigint;
nr_seq_prestador_exec_honor_w	bigint;
nr_seq_cbo_saude_honor_w	bigint;
qt_selecao_w			bigint;
nr_seq_conta_pos_w		bigint;
nr_id_analise_w			bigint;
tx_item_w			double precision;
tx_reducao_acrescimo_w		double precision;
tx_intercambio_w		double precision;
tx_intercambio_imp_w		double precision;
qt_fluxo_analise_w		integer;
qt_partic_w			integer;
ie_valor_base_w			smallint;
nr_nivel_w			smallint	:= 1;
dt_procedimento_w		timestamp;
dt_emissao_conta_w		timestamp;
dt_atend_ref_conta_honor_w	timestamp;
vl_medico_calc_w		double precision;
vl_materiais_calc_w		double precision;
vl_custo_operacional_calc_w	double precision;
vl_co_ptu_imp_w			double precision;
vl_material_ptu_imp_w		double precision;
vl_procedimento_ptu_imp_w	double precision;
vl_medico_calc_ww		double precision;
vl_materiais_calc_ww		double precision;
vl_custo_operacional_calc_ww	double precision;
vl_co_ptu_imp_ww		double precision;
vl_material_ptu_imp_ww		double precision;
vl_procedimento_ptu_imp_ww	double precision;
vl_liberado_material_fat_w	double precision;
vl_liberado_co_fat_w		double precision;
vl_liberado_hi_fat_w		double precision;
vl_glosa_material_fat_w		double precision;
vl_glosa_hi_fat_w		double precision;
vl_glosa_co_fat_w		double precision;
vl_liberado_material_fat_ww	double precision;
vl_liberado_co_fat_ww		double precision;
vl_liberado_hi_fat_ww		double precision;
vl_glosa_material_fat_ww	double precision;
vl_glosa_hi_fat_ww		double precision;
vl_glosa_co_fat_ww		double precision;
ie_pacote_ptu_w			varchar(1);
vl_proc_pag_apres_ww		double precision;
vl_proc_pag_lib_ww		double precision;
vl_proc_pag_glosa_ww		double precision;
vl_glosa_fat_w			double precision;
vl_glosa_fat_ww			double precision;
qt_proc_pag_lib_ww		double precision;
vl_glosa_taxa_co_fat_w 		pls_conta_pos_estabelecido.vl_glosa_taxa_co%type;
vl_glosa_taxa_material_fat_w	pls_conta_pos_estabelecido.vl_glosa_taxa_material%type;
vl_glosa_taxa_servico_fat_w 	pls_conta_pos_estabelecido.vl_glosa_taxa_servico%type;
vl_lib_taxa_co_fat_w   		pls_conta_pos_estabelecido.vl_lib_taxa_co%type;
vl_lib_taxa_material_fat_w	pls_conta_pos_estabelecido.vl_lib_taxa_material%type;
vl_lib_taxa_servico_fat_w     	pls_conta_pos_estabelecido.vl_lib_taxa_servico%type;
vl_taxa_co_fat_w 		pls_conta_pos_estabelecido.vl_taxa_co%type;
vl_taxa_material_fat_w		pls_conta_pos_estabelecido.vl_taxa_material%type;
vl_taxa_servico_fat_w 		pls_conta_pos_estabelecido.vl_taxa_servico%type;
vl_glosa_taxa_co_fat_ww		pls_conta_pos_estabelecido.vl_glosa_taxa_co%type;
vl_glosa_taxa_material_fat_ww	pls_conta_pos_estabelecido.vl_glosa_taxa_material%type;
vl_glosa_taxa_servico_fat_ww 	pls_conta_pos_estabelecido.vl_glosa_taxa_servico%type;
vl_lib_taxa_co_fat_ww  		pls_conta_pos_estabelecido.vl_lib_taxa_co%type;
vl_lib_taxa_material_fat_ww	pls_conta_pos_estabelecido.vl_lib_taxa_material%type;
vl_lib_taxa_servico_fat_ww     	pls_conta_pos_estabelecido.vl_lib_taxa_servico%type;
vl_taxa_co_fat_ww 		pls_conta_pos_estabelecido.vl_taxa_co%type;
vl_taxa_material_fat_ww		pls_conta_pos_estabelecido.vl_taxa_material%type;
vl_taxa_servico_fat_ww 		pls_conta_pos_estabelecido.vl_taxa_servico%type;
nr_seq_lote_fat_w		pls_conta_pos_estabelecido.nr_seq_lote_fat%type;
nr_seq_evento_fat_w		pls_conta_pos_estabelecido.nr_seq_evento_fat%type;
nr_seq_disc_proc_w		pls_conta_pos_estabelecido.nr_seq_disc_proc%type;
qt_negada_w			pls_discussao_proc.qt_negada%type;
vl_negado_w			pls_discussao_proc.vl_negado%type;
tx_administracao_w		pls_conta_pos_estabelecido.tx_administracao%type;
ds_item_ptu_w			pls_conta_pos_estabelecido.ds_item_ptu%type;
ds_item_ptu_temp_w		pls_conta_pos_estabelecido.ds_item_ptu%type;
cd_procedimento_conv_w		pls_conta_pos_estabelecido.cd_item_convertido%type;
ds_procedimento_conv_w		pls_conta_pos_estabelecido.ds_item_convertido%type;
cd_procedimento_orig_w		procedimento.cd_procedimento%type;
ds_procedimento_orig_w		procedimento.ds_procedimento%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
ie_item_convertido_w		pls_parametros.ie_item_convertido%type;
qt_participante_w		integer;
nr_seq_grau_participante_w	pls_proc_participante.nr_seq_grau_partic%type;
ie_aviso_a520_proc_w		pls_conta_proc_regra.ie_a520%type;
ie_aviso_a520_part_w		pls_conta_proc_regra.ie_a520%type;
tx_item_proc_w			pls_conta_pos_estabelecido.tx_item%type;
						
C01 CURSOR FOR /* Procedimentos que existe NR_SEQ_PROC_REF e existe participante */
	SELECT	a.nr_sequencia,
		'A', /* Agrupador */
		'P', /* Procedimento */
		a.cd_procedimento,
		c.cd_item_convertido,
		a.dt_procedimento,
		b.ds_procedimento,
		c.ds_item_convertido,
		a.ie_tipo_despesa,
		a.qt_procedimento_imp,
		a.vl_procedimento_imp,
		a.vl_proc_unitario,
		c.vl_calculado,
		a.ie_origem_proced,
		a.ie_via_acesso,
		a.nr_auxiliares,
		a.cd_porte_anestesico,
		a.nr_seq_setor_atend,
		substr(a.cd_procedimento_imp || ' - ' || a.ds_procedimento_imp,1,255),
		a.vl_glosa_material,
		a.vl_glosa_hi,
		a.vl_glosa_co,
		a.vl_custo_operacional,
		a.vl_liberado_material,
		a.vl_liberado_co,
		a.vl_liberado_hi,
		a.vl_materiais,
		a.vl_custo_operacional,
		a.vl_total_partic,
		a.tx_intercambio,
		a.tx_intercambio_imp,
		c.qt_item,
		a.tx_item,
		a.vl_glosa,
		c.vl_beneficiario,
		a.vl_unitario_imp,
		a.ie_valor_base,
		a.vl_taxa_servico_imp,
		a.vl_taxa_co_imp,
		a.vl_taxa_material_imp,
		a.vl_taxa_servico,
		a.vl_taxa_co,
		a.vl_taxa_material,
		a.ie_status,
		CASE WHEN coalesce(b.cd_procedimento::text, '') = '' THEN 'S'  ELSE null END ,
		'S' ie_proc_ref,
		a.nr_seq_prestador_pgto,
		a.vl_lib_taxa_co,
		a.vl_lib_taxa_material,
		a.vl_lib_taxa_servico,
		a.vl_glosa_taxa_co,
		a.vl_glosa_taxa_material,
		a.vl_glosa_taxa_servico,
		a.vl_taxa_co,
		a.vl_taxa_co_imp,
		a.vl_taxa_material,
		a.vl_taxa_material_imp,
		a.vl_taxa_servico,
		a.vl_taxa_servico_imp,
		c.nr_sequencia,
		c.ie_status_faturamento,
		c.qt_original,
		c.qt_item,
		c.vl_calculado,
		c.vl_beneficiario,
		dividir_sem_round(c.vl_calculado, c.qt_original),
		a.qt_procedimento_imp,
		a.qt_procedimento,
		a.vl_procedimento,
		a.vl_procedimento_imp,
		a.vl_liberado,
		a.vl_glosa,
		a.ie_glosa,
		a.nr_id_analise,
		a.ie_status_pagamento,
		c.vl_medico_calc,
		c.vl_materiais_calc,
		c.vl_custo_operacional_calc,
		a.vl_co_ptu_imp,
		a.vl_material_ptu_imp,
		a.vl_procedimento_ptu_imp,
		c.vl_liberado_material_fat,
		c.vl_liberado_co_fat,             
		c.vl_liberado_hi_fat,             
		c.vl_glosa_material_fat,          
		c.vl_glosa_hi_fat,                
		c.vl_glosa_co_fat,
		a.ie_pacote_ptu,
		c.vl_calculado - c.vl_beneficiario,
		c.vl_glosa_taxa_co,
		c.vl_glosa_taxa_material,
		c.vl_glosa_taxa_servico,
		c.vl_lib_taxa_co,
		c.vl_lib_taxa_material,
		c.vl_lib_taxa_servico,
		c.vl_taxa_co,
		c.vl_taxa_material,
		c.vl_taxa_servico,
		c.nr_seq_lote_fat,
		c.nr_seq_evento_fat,
		c.nr_seq_disc_proc,
		c.tx_administracao,
		c.ds_item_ptu,
		(	SELECT	coalesce(max(x.ie_a520), 'N')
			from	pls_conta_proc_regra	x
			where	x.nr_sequencia		= a.nr_sequencia) ie_a520,
		coalesce(c.tx_item, 0)  tx_item_proc
	FROM pls_conta_pos_estabelecido c, pls_conta_proc a
LEFT OUTER JOIN procedimento b ON (a.cd_procedimento = b.cd_procedimento AND a.ie_origem_proced = b.ie_origem_proced)
WHERE c.nr_seq_conta_proc	= a.nr_sequencia   and c.nr_seq_conta		= nr_seq_conta_p and c.nr_seq_analise	= nr_seq_analise_p and (a.nr_seq_agrup_analise IS NOT NULL AND a.nr_seq_agrup_analise::text <> '') and ( select count(1) from pls_conta_pos_estabelecido where nr_seq_conta_proc = a.nr_seq_agrup_analise and nr_seq_analise = nr_seq_analise_p) = 0 and a.ie_status		!= 'D' and ((nr_nivel_w > 0) or (exists (select	1
						from	w_pls_analise_item_exp	x
						where	x.nr_seq_conta_proc	= a.nr_sequencia))) and (c.ie_situacao = 'A' or coalesce(c.ie_situacao::text, '') = '') and c.ie_status_faturamento	!= 'A' and c.ie_cobrar_mensalidade	!= 'A'
	 
union all

	select	a.nr_sequencia,
		'A', /* Agrupador */
		'P', /* Procedimento */
		a.cd_procedimento,
		c.cd_item_convertido,
		a.dt_procedimento,
		b.ds_procedimento,
		c.ds_item_convertido,
		a.ie_tipo_despesa,
		a.qt_procedimento_imp,
		a.vl_procedimento_imp,
		a.vl_proc_unitario,
		c.vl_calculado,
		a.ie_origem_proced,
		a.ie_via_acesso,
		a.nr_auxiliares,
		a.cd_porte_anestesico,
		a.nr_seq_setor_atend,
		substr(a.cd_procedimento_imp || ' - ' || a.ds_procedimento_imp,1,255),
		a.vl_glosa_material,
		a.vl_glosa_hi,
		a.vl_glosa_co,
		a.vl_custo_operacional,
		a.vl_liberado_material,
		a.vl_liberado_co,
		a.vl_liberado_hi,
		a.vl_materiais,
		a.vl_custo_operacional,
		a.vl_total_partic,
		a.tx_intercambio,
		a.tx_intercambio_imp,
		c.qt_item,
		a.tx_item,
		a.vl_glosa,
		c.vl_beneficiario,
		a.vl_unitario_imp,
		a.ie_valor_base,
		a.vl_taxa_servico_imp,
		a.vl_taxa_co_imp,
		a.vl_taxa_material_imp,
		a.vl_taxa_servico,
		a.vl_taxa_co,
		a.vl_taxa_material,
		a.ie_status,
		CASE WHEN coalesce(b.cd_procedimento::text, '') = '' THEN 'S'  ELSE null END ,
		'S' ie_proc_ref,
		a.nr_seq_prestador_pgto,
		a.vl_lib_taxa_co,
		a.vl_lib_taxa_material,
		a.vl_lib_taxa_servico,
		a.vl_glosa_taxa_co,
		a.vl_glosa_taxa_material,
		a.vl_glosa_taxa_servico,
		a.vl_taxa_co,
		a.vl_taxa_co_imp,
		a.vl_taxa_material,
		a.vl_taxa_material_imp,
		a.vl_taxa_servico,
		a.vl_taxa_servico_imp,
		c.nr_sequencia,
		c.ie_status_faturamento,
		c.qt_original,
		c.qt_item,
		c.vl_calculado,
		c.vl_beneficiario,
		dividir_sem_round(c.vl_calculado, c.qt_original),
		a.qt_procedimento_imp,
		a.qt_procedimento,
		a.vl_procedimento,
		a.vl_procedimento_imp,
		a.vl_liberado,
		a.vl_glosa,
		a.ie_glosa,
		a.nr_id_analise,
		a.ie_status_pagamento,
		c.vl_medico_calc,
		c.vl_materiais_calc,
		c.vl_custo_operacional_calc,
		a.vl_co_ptu_imp,
		a.vl_material_ptu_imp,
		a.vl_procedimento_ptu_imp,
		c.vl_liberado_material_fat,       
		c.vl_liberado_co_fat,             
		c.vl_liberado_hi_fat,             
		c.vl_glosa_material_fat,          
		c.vl_glosa_hi_fat,                
		c.vl_glosa_co_fat,
		a.ie_pacote_ptu,
		c.vl_calculado - c.vl_beneficiario,
		c.vl_glosa_taxa_co,
		c.vl_glosa_taxa_material,
		c.vl_glosa_taxa_servico,
		c.vl_lib_taxa_co,
		c.vl_lib_taxa_material,
		c.vl_lib_taxa_servico,
		c.vl_taxa_co,
		c.vl_taxa_material,
		c.vl_taxa_servico,
		c.nr_seq_lote_fat,
		c.nr_seq_evento_fat,
		c.nr_seq_disc_proc,
		c.tx_administracao,
		c.ds_item_ptu,
		(	select	coalesce(max(x.ie_a520), 'N')
			from	pls_conta_proc_regra	x
			where	x.nr_sequencia		= a.nr_sequencia) ie_a520,
		coalesce(c.tx_item, 0)  tx_item_proc
	FROM pls_conta_pos_estabelecido c, pls_conta_proc a
LEFT OUTER JOIN procedimento b ON (a.cd_procedimento = b.cd_procedimento AND a.ie_origem_proced = b.ie_origem_proced)
WHERE c.nr_seq_conta_proc	= a.nr_sequencia   and c.nr_seq_conta		= nr_seq_conta_p and c.nr_seq_analise	= nr_seq_analise_p and a.nr_seq_agrup_analise	= a.nr_sequencia and a.ie_status		!= 'D' and ((nr_nivel_w > 0) or (exists (select	1
						from	w_pls_analise_item_exp	x
						where	x.nr_seq_conta_proc	= a.nr_sequencia))) and (c.ie_situacao = 'A' or coalesce(c.ie_situacao::text, '') = '') and c.ie_status_faturamento	!= 'A' and c.ie_cobrar_mensalidade	!= 'A'
	 
union all

	select	a.nr_sequencia,
		'A', /* Agrupador */
		'P', /* Procedimento */
		a.cd_procedimento,
		c.cd_item_convertido,
		a.dt_procedimento,
		b.ds_procedimento,
		c.ds_item_convertido,
		a.ie_tipo_despesa,
		a.qt_procedimento_imp,
		a.vl_procedimento_imp,
		a.vl_proc_unitario,
		c.vl_calculado,
		a.ie_origem_proced,
		a.ie_via_acesso,
		a.nr_auxiliares,
		a.cd_porte_anestesico,
		a.nr_seq_setor_atend,
		substr(a.cd_procedimento_imp || ' - ' || a.ds_procedimento_imp,1,255),
		a.vl_glosa_material,
		a.vl_glosa_hi,
		a.vl_glosa_co,
		a.vl_custo_operacional,
		a.vl_liberado_material,
		a.vl_liberado_co,
		a.vl_liberado_hi,
		a.vl_materiais,
		a.vl_custo_operacional,
		a.vl_total_partic,
		a.tx_intercambio,
		a.tx_intercambio_imp,
		c.qt_item,
		a.tx_item,
		a.vl_glosa,
		c.vl_beneficiario,
		a.vl_unitario_imp,
		a.ie_valor_base,
		a.vl_taxa_servico_imp,
		a.vl_taxa_co_imp,
		a.vl_taxa_material_imp,
		a.vl_taxa_servico,
		a.vl_taxa_co,
		a.vl_taxa_material,
		a.ie_status,
		CASE WHEN coalesce(b.cd_procedimento::text, '') = '' THEN 'S'  ELSE null END ,
		'S' ie_proc_ref,
		a.nr_seq_prestador_pgto,
		a.vl_lib_taxa_co,
		a.vl_lib_taxa_material,
		a.vl_lib_taxa_servico,
		a.vl_glosa_taxa_co,
		a.vl_glosa_taxa_material,
		a.vl_glosa_taxa_servico,
		a.vl_taxa_co,
		a.vl_taxa_co_imp,
		a.vl_taxa_material,
		a.vl_taxa_material_imp,
		a.vl_taxa_servico,
		a.vl_taxa_servico_imp,
		c.nr_sequencia,
		c.ie_status_faturamento,
		c.qt_original,
		c.qt_item,
		c.vl_calculado,
		c.vl_beneficiario,
		dividir_sem_round(c.vl_calculado, c.qt_original),
		a.qt_procedimento_imp,
		a.qt_procedimento,
		a.vl_procedimento,
		a.vl_procedimento_imp,
		a.vl_liberado,
		a.vl_glosa,
		a.ie_glosa,
		a.nr_id_analise,
		a.ie_status_pagamento,
		c.vl_medico_calc,
		c.vl_materiais_calc,
		c.vl_custo_operacional_calc,
		a.vl_co_ptu_imp,
		a.vl_material_ptu_imp,
		a.vl_procedimento_ptu_imp,
		c.vl_liberado_material_fat,       
		c.vl_liberado_co_fat,             
		c.vl_liberado_hi_fat,             
		c.vl_glosa_material_fat,          
		c.vl_glosa_hi_fat,                
		c.vl_glosa_co_fat,
		a.ie_pacote_ptu,
		c.vl_calculado - c.vl_beneficiario,
		c.vl_glosa_taxa_co,
		c.vl_glosa_taxa_material,
		c.vl_glosa_taxa_servico,
		c.vl_lib_taxa_co,
		c.vl_lib_taxa_material,
		c.vl_lib_taxa_servico,
		c.vl_taxa_co,
		c.vl_taxa_material,
		c.vl_taxa_servico,
		c.nr_seq_lote_fat,
		c.nr_seq_evento_fat,
		c.nr_seq_disc_proc,
		c.tx_administracao,
		c.ds_item_ptu,
		(	select	coalesce(max(x.ie_a520), 'N')
			from	pls_conta_proc_regra	x
			where	x.nr_sequencia		= a.nr_sequencia) ie_a520,
		coalesce(c.tx_item, 0)  tx_item_proc
	FROM pls_conta_proc a
LEFT OUTER JOIN pls_conta_pos_estabelecido c ON (a.nr_sequencia = c.nr_seq_conta_proc)
LEFT OUTER JOIN procedimento b ON (a.cd_procedimento = b.cd_procedimento AND a.ie_origem_proced = b.ie_origem_proced)
WHERE a.nr_seq_conta		= nr_seq_conta_p and exists (select 1 
					from	pls_conta_pos_estabelecido 	cpos,
						pls_conta_proc			cproc
					where	cproc.nr_sequencia		= cpos.nr_seq_conta_proc
					and	cpos.nr_seq_analise		= nr_seq_analise_p
					and	cproc.nr_seq_agrup_analise	= a.nr_sequencia
					and	cpos.ie_status_faturamento	!= 'A'
					and	cpos.ie_cobrar_mensalidade	!= 'A') and a.nr_seq_agrup_analise	= a.nr_sequencia and a.ie_status		= 'D' and ((nr_nivel_w > 0) or (exists (select	1
						from	w_pls_analise_item_exp	x
						where	x.nr_seq_conta_proc	= a.nr_sequencia))) and (c.ie_situacao = 'A' or coalesce(c.ie_situacao::text, '') = '') and c.ie_status_faturamento	!= 'A' and c.ie_cobrar_mensalidade	!= 'A'
	 
union all

	select	a.nr_sequencia,
		'A', /* Agrupador */
		'P', /* Procedimento */
		a.cd_procedimento,
		c.cd_item_convertido,
		a.dt_procedimento,
		b.ds_procedimento,
		c.ds_item_convertido,
		a.ie_tipo_despesa,
		a.qt_procedimento_imp,
		a.vl_procedimento_imp,
		a.vl_proc_unitario,
		c.vl_calculado,
		a.ie_origem_proced,
		a.ie_via_acesso,
		a.nr_auxiliares,
		a.cd_porte_anestesico,
		a.nr_seq_setor_atend,
		substr(a.cd_procedimento_imp || ' - ' || a.ds_procedimento_imp,1,255),
		a.vl_glosa_material,
		a.vl_glosa_hi,
		a.vl_glosa_co,
		a.vl_custo_operacional,
		a.vl_liberado_material,
		a.vl_liberado_co,
		a.vl_liberado_hi,
		a.vl_materiais,
		a.vl_custo_operacional,
		a.vl_total_partic,
		a.tx_intercambio,
		a.tx_intercambio_imp,
		c.qt_item,
		a.tx_item,
		a.vl_glosa,
		c.vl_beneficiario,
		a.vl_unitario_imp,
		a.ie_valor_base,
		a.vl_taxa_servico_imp,
		a.vl_taxa_co_imp,
		a.vl_taxa_material_imp,
		a.vl_taxa_servico,
		a.vl_taxa_co,
		a.vl_taxa_material,
		a.ie_status,
		CASE WHEN coalesce(b.cd_procedimento::text, '') = '' THEN 'S'  ELSE null END ,
		'S' ie_proc_ref,
		a.nr_seq_prestador_pgto,
		a.vl_lib_taxa_co,
		a.vl_lib_taxa_material,
		a.vl_lib_taxa_servico,
		a.vl_glosa_taxa_co,
		a.vl_glosa_taxa_material,
		a.vl_glosa_taxa_servico,
		a.vl_taxa_co,
		a.vl_taxa_co_imp,
		a.vl_taxa_material,
		a.vl_taxa_material_imp,
		a.vl_taxa_servico,
		a.vl_taxa_servico_imp,
		c.nr_sequencia,
		c.ie_status_faturamento,
		c.qt_original,
		c.qt_item,
		c.vl_calculado,
		c.vl_beneficiario,
		dividir_sem_round(c.vl_calculado, c.qt_original),
		a.qt_procedimento_imp,
		a.qt_procedimento,
		a.vl_procedimento,
		a.vl_procedimento_imp,
		a.vl_liberado,
		a.vl_glosa,
		a.ie_glosa,
		a.nr_id_analise,
		a.ie_status_pagamento,
		c.vl_medico_calc,
		c.vl_materiais_calc,
		c.vl_custo_operacional_calc,
		a.vl_co_ptu_imp,
		a.vl_material_ptu_imp,
		a.vl_procedimento_ptu_imp,
		c.vl_liberado_material_fat,       
		c.vl_liberado_co_fat,             
		c.vl_liberado_hi_fat,             
		c.vl_glosa_material_fat,          
		c.vl_glosa_hi_fat,                
		c.vl_glosa_co_fat,
		a.ie_pacote_ptu,
		c.vl_calculado - c.vl_beneficiario,
		c.vl_glosa_taxa_co,
		c.vl_glosa_taxa_material,
		c.vl_glosa_taxa_servico,
		c.vl_lib_taxa_co,
		c.vl_lib_taxa_material,
		c.vl_lib_taxa_servico,
		c.vl_taxa_co,
		c.vl_taxa_material,
		c.vl_taxa_servico,
		c.nr_seq_lote_fat,
		c.nr_seq_evento_fat,
		c.nr_seq_disc_proc,
		c.tx_administracao,
		c.ds_item_ptu,
		(	select	coalesce(max(x.ie_a520), 'N')
			from	pls_conta_proc_regra	x
			where	x.nr_sequencia		= a.nr_sequencia) ie_a520,
		coalesce(c.tx_item, 0)  tx_item_proc
	FROM pls_conta_proc d, pls_conta_pos_estabelecido c, pls_conta_proc a
LEFT OUTER JOIN procedimento b ON (a.cd_procedimento = b.cd_procedimento AND a.ie_origem_proced = b.ie_origem_proced)
WHERE d.nr_sequencia		= c.nr_seq_conta_proc   and a.nr_seq_conta		= nr_seq_conta_p and c.nr_seq_analise	= nr_seq_analise_p and d.nr_seq_agrup_analise	= a.nr_sequencia and a.ie_status		= 'D' and ((nr_nivel_w > 0) or (exists (select	1
						from	w_pls_analise_item_exp	x
						where	x.nr_seq_conta_proc	= a.nr_sequencia))) and not exists (select 1 
					from	pls_conta_pos_estabelecido 	cpos,
						pls_conta_proc			cproc
					where	cproc.nr_sequencia		= cpos.nr_seq_conta_proc
					and	cpos.nr_seq_analise		= nr_seq_analise_p
					and	cproc.nr_seq_agrup_analise	= a.nr_sequencia
					and	cpos.ie_status_faturamento	!= 'A'
					and	cpos.ie_cobrar_mensalidade	!= 'A') and not exists (select	1
				from	pls_conta_pos_estabelecido	pos
				where	pos.nr_seq_conta	= a.nr_seq_conta) and (c.ie_situacao = 'A' or coalesce(c.ie_situacao::text, '') = '') and c.ie_status_faturamento	!= 'A' and c.ie_cobrar_mensalidade	!= 'A'
	 
union all
 /* Procedimentos que não existe NR_SEQ_PROC_REF e existe participante */
	select	a.nr_sequencia,
		'A', /* Agrupador */
		'P', /* Procedimento */
		a.cd_procedimento,
		c.cd_item_convertido,
		a.dt_procedimento,
		b.ds_procedimento,
		c.ds_item_convertido,
		a.ie_tipo_despesa,
		a.qt_procedimento_imp,
		a.vl_procedimento_imp,
		a.vl_proc_unitario,
		c.vl_calculado,
		a.ie_origem_proced,
		a.ie_via_acesso,
		a.nr_auxiliares,
		a.cd_porte_anestesico,
		a.nr_seq_setor_atend,
		substr(a.cd_procedimento_imp || ' - ' || a.ds_procedimento_imp,1,255),
		a.vl_glosa_material,
		a.vl_glosa_hi,
		a.vl_glosa_co,
		a.vl_custo_operacional,
		a.vl_liberado_material,
		a.vl_liberado_co,
		a.vl_liberado_hi,
		a.vl_materiais,
		a.vl_custo_operacional,
		a.vl_total_partic,
		a.tx_intercambio,
		a.tx_intercambio_imp,
		c.qt_item,
		a.tx_item,
		a.vl_glosa,
		c.vl_beneficiario,
		a.vl_unitario_imp,
		a.ie_valor_base,
		a.vl_taxa_servico_imp,
		a.vl_taxa_co_imp,
		a.vl_taxa_material_imp,
		a.vl_taxa_servico,
		a.vl_taxa_co,
		a.vl_taxa_material,
		a.ie_status,
		CASE WHEN coalesce(b.cd_procedimento::text, '') = '' THEN 'S'  ELSE null END ,
		'N' ie_proc_ref,
		a.nr_seq_prestador_pgto,
		a.vl_lib_taxa_co,
		a.vl_lib_taxa_material,
		a.vl_lib_taxa_servico,
		a.vl_glosa_taxa_co,
		a.vl_glosa_taxa_material,
		a.vl_glosa_taxa_servico,
		a.vl_taxa_co,
		a.vl_taxa_co_imp,
		a.vl_taxa_material,
		a.vl_taxa_material_imp,
		a.vl_taxa_servico,
		a.vl_taxa_servico_imp,
		c.nr_sequencia,
		c.ie_status_faturamento,
		c.qt_original,
		c.qt_item,
		c.vl_calculado,
		c.vl_beneficiario,
		dividir_sem_round(c.vl_calculado, c.qt_original),
		a.qt_procedimento_imp,
		a.qt_procedimento,
		a.vl_procedimento,
		a.vl_procedimento_imp,
		a.vl_liberado,
		a.vl_glosa,
		a.ie_glosa,
		a.nr_id_analise,
		a.ie_status_pagamento,
		c.vl_medico_calc,
		c.vl_materiais_calc,
		c.vl_custo_operacional_calc,
		a.vl_co_ptu_imp,
		a.vl_material_ptu_imp,
		a.vl_procedimento_ptu_imp,
		c.vl_liberado_material_fat,       
		c.vl_liberado_co_fat,             
		c.vl_liberado_hi_fat,             
		c.vl_glosa_material_fat,          
		c.vl_glosa_hi_fat,                
		c.vl_glosa_co_fat,
		a.ie_pacote_ptu,
		c.vl_calculado - c.vl_beneficiario,
		c.vl_glosa_taxa_co,
		c.vl_glosa_taxa_material,
		c.vl_glosa_taxa_servico,
		c.vl_lib_taxa_co,
		c.vl_lib_taxa_material,
		c.vl_lib_taxa_servico,
		c.vl_taxa_co,
		c.vl_taxa_material,
		c.vl_taxa_servico,
		c.nr_seq_lote_fat,
		c.nr_seq_evento_fat,
		c.nr_seq_disc_proc,
		c.tx_administracao,
		c.ds_item_ptu,
		(	select	coalesce(max(x.ie_a520), 'N')
			from	pls_conta_proc_regra	x
			where	x.nr_sequencia		= a.nr_sequencia) ie_a520,
		coalesce(c.tx_item, 0)  tx_item_proc
	FROM pls_conta_pos_estabelecido c, pls_conta_proc a
LEFT OUTER JOIN procedimento b ON (a.cd_procedimento = b.cd_procedimento AND a.ie_origem_proced = b.ie_origem_proced)
WHERE c.nr_seq_conta_proc	= a.nr_sequencia   and c.nr_seq_conta		= nr_seq_conta_p and c.nr_seq_analise	= nr_seq_analise_p and coalesce(a.nr_seq_agrup_analise::text, '') = '' and exists (select	1
			from	pls_proc_participante x
			where	x.nr_seq_conta_proc	= a.nr_sequencia) and ((nr_nivel_w > 0) or (exists (select	1
						from	w_pls_analise_item_exp	x
						where	x.nr_seq_conta_proc	= a.nr_sequencia))) and (c.ie_situacao = 'A' or coalesce(c.ie_situacao::text, '') = '') and c.ie_status_faturamento	!= 'A' and c.ie_cobrar_mensalidade	!= 'A' order by
		ie_proc_ref;

/* Participantes com conta de honorário gerada */

C02 CURSOR FOR
	SELECT	b.nr_sequencia,
		a.nr_sequencia,
		'IC', /* Item da conta */
		'P', /* Participante */
		a.ie_tipo_despesa,
		a.qt_procedimento_imp,
		a.vl_procedimento_imp,
		a.vl_proc_unitario,
		c.vl_calculado,
		a.nr_seq_prestador_pgto,
		a.nr_seq_agrup_analise,
		a.cd_procedimento,
		c.cd_item_convertido,
		a.ie_origem_proced,
		a.ie_via_acesso,
		a.nr_auxiliares,
		a.cd_porte_anestesico,
		a.nr_seq_setor_atend,
		substr(a.cd_procedimento_imp || ' - ' || a.ds_procedimento_imp,1,255),
		a.vl_glosa_material,
		a.vl_glosa_hi,
		a.vl_glosa_co,
		a.vl_custo_operacional,
		a.vl_liberado_material,
		a.vl_liberado_co,
		a.vl_liberado_hi,
		a.vl_materiais,
		a.vl_custo_operacional,
		a.vl_total_partic,
		a.tx_intercambio,
		a.tx_intercambio_imp,
		c.qt_item,
		a.tx_item,
		a.vl_glosa,
		c.vl_beneficiario,
		a.vl_unitario_imp,
		a.ie_valor_base,
		b.nr_seq_grau_partic,
		a.vl_taxa_servico_imp,
		a.vl_taxa_co_imp,
		a.vl_taxa_material_imp,
		a.vl_taxa_servico,
		a.vl_taxa_co,
		a.vl_taxa_material,
		a.ie_status,
		a.nr_seq_proc_ref,
		a.dt_procedimento,
		(SELECT	x.nr_seq_prestador_exec
		from	pls_conta x
		where	x.nr_sequencia	= a.nr_seq_conta) nr_seq_prest_exec,
		a.vl_lib_taxa_co,
		a.vl_lib_taxa_material,
		a.vl_lib_taxa_servico,
		a.vl_glosa_taxa_co,
		a.vl_glosa_taxa_material,
		a.vl_glosa_taxa_servico,
		a.vl_taxa_co,
		a.vl_taxa_co_imp,
		a.vl_taxa_material,
		a.vl_taxa_material_imp,
		a.vl_taxa_servico,
		a.vl_taxa_servico_imp,
		c.nr_sequencia,
		c.ie_status_faturamento,
		c.qt_original,
		c.qt_item,
		c.vl_calculado,
		c.vl_beneficiario,
		dividir_sem_round(c.vl_calculado, c.qt_original),
		a.qt_procedimento_imp,
		a.qt_procedimento,
		a.vl_procedimento,
		a.vl_procedimento_imp,
		a.vl_liberado,
		a.vl_glosa,
		a.ie_glosa,
		CASE WHEN coalesce(a.nr_seq_participante_hi::text, '') = '' THEN 'N'  ELSE 'S' END  ie_partic_agrup,
		1 qt_partic,
		a.nr_id_analise,
		a.ie_status_pagamento,
		c.vl_medico_calc,
		c.vl_materiais_calc,
		c.vl_custo_operacional_calc,
		a.vl_co_ptu_imp,
		a.vl_material_ptu_imp,
		a.vl_procedimento_ptu_imp,
		c.vl_liberado_material_fat,
		c.vl_liberado_co_fat,             
		c.vl_liberado_hi_fat,             
		c.vl_glosa_material_fat,          
		c.vl_glosa_hi_fat,                
		c.vl_glosa_co_fat,
		a.ie_pacote_ptu,
		c.vl_calculado - c.vl_beneficiario,
		c.vl_glosa_taxa_co,
		c.vl_glosa_taxa_material,
		c.vl_glosa_taxa_servico,
		c.vl_lib_taxa_co,
		c.vl_lib_taxa_material,
		c.vl_lib_taxa_servico,
		c.vl_taxa_co,
		c.vl_taxa_material,
		c.vl_taxa_servico,
		c.nr_seq_lote_fat,
		c.nr_seq_evento_fat,
		c.nr_seq_disc_proc,
		c.tx_administracao,
		(	select	coalesce(max(x.ie_a520), 'N')
			from	pls_conta_proc_regra	x
			where	x.nr_sequencia		= a.nr_sequencia) ie_a520,
		coalesce(c.tx_item, 0)  tx_item_proc
	from	pls_conta			b,
		pls_conta_pos_estabelecido 	c,
		pls_conta_proc			a
	where	a.nr_sequencia		= c.nr_seq_conta_proc
	and	a.nr_seq_conta		= b.nr_sequencia
	and (a.ie_status <> 'D' or coalesce(a.ie_status::text, '') = '')
	and	c.nr_seq_analise	= nr_seq_analise_p
	and	a.nr_seq_agrup_analise	= nr_seq_conta_proc_w
	--and c.nr_sequencia = nr_seq_conta_pos_w
	and	((coalesce(a.nr_seq_regra_canc_item_orig::text, '') = '') or (coalesce(nr_seq_proc_princ::text, '') = ''))
	and	((nr_nivel_w > 1) or (exists (select	1
						from	w_pls_analise_item_exp	x
						where	x.nr_seq_conta_proc	= a.nr_sequencia)))
	and (c.ie_situacao = 'A' or coalesce(c.ie_situacao::text, '') = '')
	and	c.ie_status_faturamento	!= 'A'
	and	c.ie_cobrar_mensalidade	!= 'A'
	
union all

	select	b.nr_sequencia,
		a.nr_sequencia,
		'IC', /* Item da conta */
		'P', /* Participante */
		a.ie_tipo_despesa,
		a.qt_procedimento_imp,
		a.vl_procedimento_imp,
		a.vl_proc_unitario,
		c.vl_calculado,
		a.nr_seq_prestador_pgto,
		a.nr_seq_agrup_analise,
		a.cd_procedimento,
		c.cd_item_convertido,
		a.ie_origem_proced,
		a.ie_via_acesso,
		a.nr_auxiliares,
		a.cd_porte_anestesico,
		a.nr_seq_setor_atend,
		substr(a.cd_procedimento_imp || ' - ' || a.ds_procedimento_imp,1,255),
		a.vl_glosa_material,
		a.vl_glosa_hi,
		a.vl_glosa_co,
		a.vl_custo_operacional,
		a.vl_liberado_material,
		a.vl_liberado_co,
		a.vl_liberado_hi,
		a.vl_materiais,
		a.vl_custo_operacional,
		a.vl_total_partic,
		a.tx_intercambio,
		a.tx_intercambio_imp,
		c.qt_item,
		a.tx_item,
		a.vl_glosa,
		c.vl_beneficiario,
		a.vl_unitario_imp,
		a.ie_valor_base,
		b.nr_seq_grau_partic,
		a.vl_taxa_servico_imp,
		a.vl_taxa_co_imp,
		a.vl_taxa_material_imp,
		a.vl_taxa_servico,
		a.vl_taxa_co,
		a.vl_taxa_material,
		a.ie_status,
		a.nr_seq_proc_ref,
		a.dt_procedimento,
		(select	x.nr_seq_prestador_exec
		from	pls_conta x
		where	x.nr_sequencia	= a.nr_seq_conta) nr_seq_prest_exec,
		a.vl_lib_taxa_co,
		a.vl_lib_taxa_material,
		a.vl_lib_taxa_servico,
		a.vl_glosa_taxa_co,
		a.vl_glosa_taxa_material,
		a.vl_glosa_taxa_servico,
		a.vl_taxa_co,
		a.vl_taxa_co_imp,
		a.vl_taxa_material,
		a.vl_taxa_material_imp,
		a.vl_taxa_servico,
		a.vl_taxa_servico_imp,
		c.nr_sequencia,
		c.ie_status_faturamento,
		c.qt_original,
		c.qt_item,
		c.vl_calculado,
		c.vl_beneficiario,
		dividir_sem_round(c.vl_calculado, c.qt_original),
		a.qt_procedimento_imp,
		a.qt_procedimento,
		a.vl_procedimento,
		a.vl_procedimento_imp,
		a.vl_liberado,
		a.vl_glosa,
		a.ie_glosa,
		CASE WHEN coalesce(a.nr_seq_participante_hi::text, '') = '' THEN 'N'  ELSE 'S' END  ie_partic_agrup,
		1 qt_partic,
		a.nr_id_analise,
		a.ie_status_pagamento,
		c.vl_medico_calc,
		c.vl_materiais_calc,
		c.vl_custo_operacional_calc,
		a.vl_co_ptu_imp,
		a.vl_material_ptu_imp,
		a.vl_procedimento_ptu_imp,
		c.vl_liberado_material_fat,       
		c.vl_liberado_co_fat,             
		c.vl_liberado_hi_fat,             
		c.vl_glosa_material_fat,          
		c.vl_glosa_hi_fat,                
		c.vl_glosa_co_fat,
		a.ie_pacote_ptu,
		c.vl_calculado - c.vl_beneficiario,
		c.vl_glosa_taxa_co,
		c.vl_glosa_taxa_material,
		c.vl_glosa_taxa_servico,
		c.vl_lib_taxa_co,
		c.vl_lib_taxa_material,
		c.vl_lib_taxa_servico,
		c.vl_taxa_co,
		c.vl_taxa_material,
		c.vl_taxa_servico,
		c.nr_seq_lote_fat,
		c.nr_seq_evento_fat,
		c.nr_seq_disc_proc,
		c.tx_administracao,
		(	select	coalesce(max(x.ie_a520), 'N')
			from	pls_conta_proc_regra	x
			where	x.nr_sequencia		= a.nr_sequencia) ie_a520,
		coalesce(c.tx_item, 0)  tx_item_proc
	from	pls_conta			b,
		pls_conta_pos_estabelecido 	c,
		pls_conta_proc			a
	where	a.nr_sequencia		= c.nr_seq_conta_proc
	and	a.nr_seq_conta		= b.nr_sequencia
	and (a.ie_status <> 'D' or coalesce(a.ie_status::text, '') = '')
	and	c.nr_seq_analise	= nr_seq_analise_p
	and	(a.nr_seq_agrup_analise IS NOT NULL AND a.nr_seq_agrup_analise::text <> '')
	and c.nr_sequencia = nr_seq_conta_pos_w
	and ( select count(1) from pls_conta_pos_estabelecido where nr_seq_conta_proc = a.nr_seq_agrup_analise and nr_seq_analise = nr_seq_analise_p) = 0 	
	and	((coalesce(a.nr_seq_regra_canc_item_orig::text, '') = '') or (coalesce(nr_seq_proc_princ::text, '') = ''))
	and	((nr_nivel_w > 1) or (exists (select	1
						from	w_pls_analise_item_exp	x
						where	x.nr_seq_conta_proc	= a.nr_sequencia)))
	and (c.ie_situacao = 'A' or coalesce(c.ie_situacao::text, '') = '')
	and	c.ie_status_faturamento	!= 'A'
	and	c.ie_cobrar_mensalidade	!= 'A';
	

BEGIN

ie_minha_analise_w	:= coalesce(ie_minha_analise_p,'N');
ie_pendentes_w		:= coalesce(ie_pendentes_p,'N');
ds_identacao_w	:= '       ';
ds_ident_nivel_1_w	:= ds_identacao_w;
ds_ident_nivel_2_w	:= ds_identacao_w || ds_identacao_w;
ds_ident_nivel_3_w	:= ds_identacao_w || ds_identacao_w || ds_identacao_w;

/* Obter dados da conta/guia */

nr_seq_guia_w		:= pls_consulta_analise_pos_pck.get_nr_seq_guia;
ie_autorizado_w		:= pls_consulta_analise_pos_pck.get_ie_autorizado;
cd_guia_w		:= pls_consulta_analise_pos_pck.get_cd_guia;
ds_tipo_guia_w		:= pls_consulta_analise_pos_pck.get_ds_tipo_guia;
nm_prestador_solic_w	:= pls_consulta_analise_pos_pck.get_nm_prestador_solic;
nm_prestador_exec_w	:= pls_consulta_analise_pos_pck.get_nm_prestador_exec;
nr_seq_prestador_exec_w	:= pls_consulta_analise_pos_pck.get_nr_seq_prestador_exec;
cd_prestador_exec_w	:= pls_consulta_analise_pos_pck.get_cd_prestador_exec;
dt_emissao_conta_w	:= pls_consulta_analise_pos_pck.get_dt_emissao_conta;
nr_seq_protocolo_w	:= pls_consulta_analise_pos_pck.get_nr_seq_protocolo;
ds_espec_cbo_w		:= pls_consulta_analise_pos_pck.get_ds_espec_cbo;
ds_medico_executor_w	:= pls_consulta_analise_pos_pck.get_ds_medico_executor;
nr_nivel_w		:= pls_consulta_analise_pos_pck.get_nr_nivel;
ie_tipo_guia_w		:= pls_consulta_analise_pos_pck.get_ie_tipo_guia;

cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;

select	coalesce(max(ie_item_convertido),'S')
into STRICT	ie_item_convertido_w
from	pls_parametros
where	cd_estabelecimento = cd_estabelecimento_w;

open C01;
loop
fetch C01 into
	nr_seq_conta_proc_w,
	ie_tipo_linha_w,
	ie_tipo_item_w,
	cd_procedimento_orig_w,
	cd_procedimento_conv_w,
	dt_procedimento_w,
	ds_procedimento_orig_w,
	ds_procedimento_conv_w,
	ie_tipo_despesa_w,
	qt_procedimento_imp_w,
	vl_procedimento_imp_w,
	vl_proc_unitario_w,
	vl_procedimento_w,
	ie_origem_proced_w,
	ie_via_acesso_w,
	nr_auxiliares_w,
	cd_porte_anestesico_w,
	nr_seq_setor_atend_w,
	ds_item_importacao_w,
	vl_glosa_material_w,
	vl_glosa_hi_w,
	vl_glosa_co_w,
	vl_custo_operacional_w,
	vl_liberado_material_w,
	vl_liberado_co_w,
	vl_liberado_hi_w,
	vl_calculado_material_w,
	vl_calculado_co_w,
	vl_calculado_hi_w,
	tx_intercambio_w,
	tx_intercambio_imp_w,
	qt_liberado_w,
	tx_item_w,
	vl_glosa_w,
	vl_liberado_w,
	vl_unitario_apres_w,
	ie_valor_base_w,
	vl_taxa_servico_imp_w,
	vl_taxa_co_imp_w,
	vl_taxa_material_imp_w,
	vl_taxa_servico_w,
	vl_taxa_co_w,
	vl_taxa_material_w,
	ie_status_item_w,
	ie_item_nao_encontrado_w,
	ie_proc_ref_w,
	nr_seq_prestador_pgto_w,
	vl_lib_taxa_co_w,
	vl_lib_taxa_material_w,
	vl_lib_taxa_servico_w,
	vl_glosa_taxa_co_w,
	vl_glosa_taxa_material_w,
	vl_glosa_taxa_servico_w,
	vl_taxa_co_w,
	vl_taxa_co_imp_w,
	vl_taxa_material_w,
	vl_taxa_material_imp_w,
	vl_taxa_servico_w,
	vl_taxa_servico_imp_w,
	nr_seq_conta_pos_w,
	ie_status_faturamento_w,
	qt_original_w,
	qt_item_w,
	vl_calculado_fat_w,
	vl_beneficiario_w,
	vl_unitario_w,
	qt_proc_pag_w,
	qt_proc_pag_lib_w,
	vl_proc_pag_calc_w,
	vl_proc_pag_apres_w,
	vl_proc_pag_lib_w,
	vl_proc_pag_glosa_w,
	ie_glosa_w,
	nr_id_analise_w,
	ie_pagamento_w,
	vl_medico_calc_w,
	vl_materiais_calc_w,
	vl_custo_operacional_calc_w,
	vl_co_ptu_imp_w,
	vl_material_ptu_imp_w,
	vl_procedimento_ptu_imp_w,
	vl_liberado_material_fat_w,
	vl_liberado_co_fat_w,             
	vl_liberado_hi_fat_w,             
	vl_glosa_material_fat_w,          
	vl_glosa_hi_fat_w,                
	vl_glosa_co_fat_w,
	ie_pacote_ptu_w,
	vl_glosa_fat_w,
	vl_glosa_taxa_co_fat_w,
	vl_glosa_taxa_material_fat_w,
	vl_glosa_taxa_servico_fat_w,
	vl_lib_taxa_co_fat_w,
	vl_lib_taxa_material_fat_w,
	vl_lib_taxa_servico_fat_w,
	vl_taxa_co_fat_w,
	vl_taxa_material_fat_w,
	vl_taxa_servico_fat_w,
	nr_seq_lote_fat_w,
	nr_seq_evento_fat_w,
	nr_seq_disc_proc_w,
	tx_administracao_w,
	ds_item_ptu_w,
	ie_aviso_a520_proc_w,
	tx_item_proc_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ds_via_acesso_w		:= null;
	ds_grau_partic_w	:= null;
	ie_pend_grupo_w		:= null;
	
	if (ie_item_convertido_w = 'N') then
		cd_procedimento_w := cd_procedimento_orig_w;
		ds_procedimento_w := ds_procedimento_orig_w;
	else
		cd_procedimento_w := coalesce(cd_procedimento_conv_w, cd_procedimento_orig_w);
		ds_procedimento_w := coalesce(ds_procedimento_conv_w, ds_procedimento_orig_w);
	end if;
	
	if (coalesce(ds_procedimento_w::text, '') = '') then
		ds_procedimento_w := 'Não encontrado';
	end if;
	
	if (nr_seq_conta_pos_w IS NOT NULL AND nr_seq_conta_pos_w::text <> '') then
		begin
		ie_pend_grupo_w		:= pls_obter_pend_grupo_ana_pos(nr_seq_analise_p,nr_seq_conta_pos_w,nr_seq_grupo_p,'N');
		end;
	end if;
		
	if	((ie_minha_analise_w = 'S' AND ie_pend_grupo_w IS NOT NULL AND ie_pend_grupo_w::text <> '') or (ie_minha_analise_w = 'N')) and
		((ie_pendentes_w = ie_pend_grupo_w) or (ie_pendentes_w = 'N')) then
		select	count(1)
		into STRICT	qt_informativo_w
		from	w_pls_analise_item a
		where	a.nr_seq_analise	= nr_seq_analise_p
		and	a.ie_status_analise	= 'I'
		and	a.nr_seq_conta_proc	= nr_seq_conta_proc_w
		and	a.nr_id_transacao	= nr_id_transacao_p;
		
		if (qt_informativo_w = 0) then
			nr_seq_proc_pai_w	:= null;
			
			--Se o item tiver cancelado, então verifico ainda se o mesmo trata-se de agrupamento, pois nesse caso, 

			--quer dizer que é um item que deu origem a outros na abertura de contas e é preciso buscar informação de 

			--pós de algum outro item. 
			if (ie_status_item_w = 'D') then
			
				select 	max(ds_item_ptu)
				into STRICT	ds_item_ptu_temp_w
				from	pls_conta_pos_estabelecido c
				where	nr_seq_conta_proc = (
								SELECT	max(nr_sequencia)
								from	pls_conta_proc
								where	nr_seq_agrup_analise = nr_seq_conta_proc_w
								and	nr_sequencia <> nr_seq_conta_proc_w
							    )
				and (c.ie_situacao = 'A' or coalesce(c.ie_situacao::text, '') = '')
				and	c.ie_status_faturamento	!= 'A'
				and	c.ie_cobrar_mensalidade	!= 'A';
				
				if (ds_item_ptu_temp_w IS NOT NULL AND ds_item_ptu_temp_w::text <> '') then
					ds_item_ptu_w := ds_item_ptu_temp_w;
				end if;
			
			end if;
			
			ds_item_w			:= ds_ident_nivel_1_w || coalesce(ds_item_ptu_w, ds_procedimento_w);
		else
			nm_prestador_w			:= pls_obter_dados_prestador(nr_seq_prestador_exec_w,'N');
			/*ds_item_w			:= pls_obter_desc_coluna_analise('HI','DS_ITEM',cd_prestador_exec_w,nm_prestador_w,null);*/

			ds_item_w			:= nm_prestador_w || ' (' || cd_prestador_exec_w || ')';
			ds_item_w			:= ds_ident_nivel_2_w || ds_item_w;
			nr_seq_proc_pai_w		:= nr_seq_conta_proc_w;
		end if;
		
		--ds_status_item_w		:= obter_valor_dominio(1870,ie_status_item_w);
		ds_setor_atend_w		:= pls_obter_ds_setor_atend(nr_seq_setor_atend_w);
		vl_taxa_intercambio_imp_w	:= coalesce(vl_taxa_servico_imp_w,0) + coalesce(vl_taxa_co_imp_w,0) + coalesce(vl_taxa_material_imp_w,0);
		vl_taxa_intercambio_w		:= coalesce(vl_taxa_servico_w,0) + coalesce(vl_taxa_co_w,0) + coalesce(vl_taxa_material_w,0);
		nm_prestador_pag_w		:= substr(pls_obter_dados_prestador(nr_seq_prestador_pgto_w,'N'),1,255);
		
		if (ie_status_item_w IS NOT NULL AND ie_status_item_w::text <> '') then
			select	ds_valor_dominio
			into STRICT	ds_status_item_w
			from	valor_dominio_v
			where	cd_dominio	= 1870
			and	vl_dominio	= ie_status_item_w;
		end if;
		
		if (ie_via_acesso_w IS NOT NULL AND ie_via_acesso_w::text <> '') then
			select	ds_valor_dominio
			into STRICT	ds_via_acesso_w
			from	valor_dominio_v
			where	cd_dominio	= 1268
			and	vl_dominio	= ie_via_acesso_w;
		end if;
		
		/* Obter status geral de análise do item */

		ie_status_analise_w	:= pls_obter_status_analise_pos(nr_seq_analise_p,nr_seq_conta_pos_w, ie_item_nao_encontrado_w);
		
		/* Obter se possui fluxo de análise */

		ie_sem_fluxo_w		:= pls_obter_se_item_sem_fluxo(nr_seq_analise_p,null, nr_seq_conta_proc_w, null,null);

		/* Verificar status de pagamento */

		if (coalesce(ie_pagamento_w::text, '') = '') and (coalesce(nr_seq_disc_proc_w::text, '') = '')then
			ie_pagamento_w	:= pls_analise_obter_status_pag(ie_status_item_w,qt_proc_pag_w,qt_proc_pag_lib_w,
							vl_proc_pag_apres_w,vl_proc_pag_calc_w,vl_proc_pag_lib_w,vl_proc_pag_glosa_w, ie_glosa_w);
		elsif (nr_seq_disc_proc_w IS NOT NULL AND nr_seq_disc_proc_w::text <> '') then
			select	max(qt_negada),
				max(vl_negado),
				max(qt_aceita),
				max(vl_aceito)
			into STRICT	qt_negada_w,
				vl_negado_w,
				qt_proc_pag_lib_w,
				vl_proc_pag_lib_w
			from	pls_discussao_proc
			where	nr_sequencia	= nr_seq_disc_proc_w;
			
			if (qt_negada_w	> 0) or (vl_negado_w 	> 0) then
				ie_pagamento_w	:= 'P';
			else
				ie_pagamento_w	:= 'L';
			end if;
		end if;
		
		ie_faturamento_w	:= pls_analise_obter_status_fat(ie_status_faturamento_w,qt_original_w,qt_item_w,vl_procedimento_w,vl_beneficiario_w);
		
		/* Tratar expansão do item */

		select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_expandido_w
		from	w_pls_analise_item_exp a
		where	a.nr_seq_analise	= nr_seq_analise_p
		and	a.nr_seq_conta_proc	= nr_seq_conta_proc_w;
		
		if (ie_expandido_w = 'N') and (nr_nivel_w = 3) then
			ie_expandido_w	:= 'S';
		end if;
		
		nr_sequencia_w		:= pls_consulta_analise_pos_pck.get_nr_seq_item;
		nr_sequencia_aux_w	:= 0;
		
		qt_liberar_w	:= null;
		
		select	count(1),
			max(qt_liberar)
		into STRICT	qt_selecao_w,
			qt_liberar_w
		from	w_pls_analise_selecao_item	a
		where	a.nr_seq_analise	= nr_seq_analise_p
		and	a.nr_seq_w_item		= nr_sequencia_w;
		
		if (qt_selecao_w > 0) then
			ie_selecionado_w	:= 'S';
		else
			ie_selecionado_w	:= 'N';
		end if;
		
		if (ie_proc_ref_w = 'S') then
			vl_unitario_apres_ww		:= 0;
			vl_taxa_intercambio_imp_w	:= 0;
			vl_taxa_intercambio_ww		:= 0;
			vl_liberado_material_ww		:= 0;
			vl_liberado_hi_ww		:= 0;
			vl_liberado_co_ww		:= 0;
			vl_liberado_ww			:= 0;
			vl_glosa_material_ww		:= 0;
			vl_glosa_hi_ww			:= 0;
			vl_glosa_co_ww			:= 0;
			vl_glosa_ww			:= 0;
			vl_custo_operacional_ww		:= 0;
			vl_proc_unitario_ww		:= 0;
			vl_calculado_material_ww	:= 0;
			vl_calculado_co_ww		:= 0;
			vl_calculado_hi_ww		:= 0;
			vl_procedimento_ww		:= 0;
			ie_status_analise_w		:= 'I';
			ie_faturamento_w		:= null;
			ie_pagamento_w			:= null;
			ie_pend_grupo_w			:= null;
			qt_procedimento_imp_w		:= null;
			qt_liberado_w			:= null;
			nr_sequencia_aux_w		:= nr_sequencia_w;
			vl_co_ptu_imp_ww		:= 0;
			vl_material_ptu_imp_ww		:= 0;
			vl_procedimento_ptu_imp_ww	:= 0;
			vl_medico_calc_ww		:= 0;
			vl_materiais_calc_ww		:= 0;
			vl_custo_operacional_calc_ww	:= 0;
			vl_liberado_material_fat_ww     := 0;
			vl_liberado_co_fat_ww           := 0;
			vl_liberado_hi_fat_ww           := 0;
			vl_glosa_material_fat_ww        := 0;
			vl_glosa_hi_fat_ww              := 0;
			vl_glosa_co_fat_ww		:= 0;
			vl_proc_pag_apres_ww		:= 0;
			vl_proc_pag_lib_ww		:= 0;
			vl_proc_pag_glosa_ww		:= 0;
			qt_proc_pag_lib_w		:= null;
			vl_lib_taxa_co_fat_ww  		:= 0;
			vl_lib_taxa_material_fat_ww	:= 0;
			vl_lib_taxa_servico_fat_ww     	:= 0;
			vl_taxa_co_fat_ww		:= 0;
			vl_taxa_material_fat_ww		:= 0;
			vl_taxa_servico_fat_ww 		:= 0;
			vl_glosa_taxa_co_fat_ww		:= 0;
			vl_glosa_taxa_material_fat_ww	:= 0;
			vl_glosa_taxa_servico_fat_ww 	:= 0;
			tx_administracao_w		:= 0;
		end if;

		if (tx_item_proc_w > 0) then
		
			tx_item_w := tx_item_proc_w;
		
		end if;
		
		insert into w_pls_analise_item(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_analise,
			nr_seq_conta,
			nr_seq_conta_proc,
			cd_item,
			dt_item,
			ds_item,
			ie_tipo_despesa,
			ie_tipo_linha,
			ie_tipo_item,
			qt_apresentada,
			vl_apresentado,
			vl_calculado_unitario,
			vl_calculado,
			cd_procedimento,
			ie_origem_proced,
			ie_via_acesso,
			ds_via_acesso,
			--nm_prestador_solic,

			--nr_auxiliares,

			--cd_porte_anestesico,

			--ds_tipo_guia,

			--nm_prestador_exec,

			--nm_prestador_pag,

			--ds_espec_cbo,
			nr_seq_protocolo,
			ie_autoriz_previa,
			--cd_guia,

			--ds_setor_atend,

			--ds_item_importacao,

			--ds_medico_executor,
			vl_glosa_material,
			vl_glosa_hi,
			vl_glosa_co,
			vl_custo_operacional,
			vl_liberado_material,
			vl_liberado_co,
			vl_liberado_hi,
			vl_calculado_material,
			vl_calculado_co,
			vl_calculado_hi,
			tx_intercambio,
			tx_intercambio_imp,
			vl_taxa_intercambio,
			vl_taxa_intercambio_imp,
			qt_liberado,
			tx_item,
			vl_unitario_apres,
			nr_seq_prestador_exec,
			nr_seq_guia,
			ie_status_analise,
			ie_pagamento,
			ie_valor_base,
			ie_expandido,
			--ds_grau_partic,
			ie_status_item,
			--ds_status_item,
			ie_pend_grupo,
			ie_item_nao_encontrado,
			nr_seq_proc_pai,
			ie_selecionado,
			qt_liberar,
			ie_sem_fluxo,
			ie_tipo_guia,
			vl_lib_taxa_co,
			vl_lib_taxa_material,
			vl_lib_taxa_servico,
			vl_glosa_taxa_co,
			vl_glosa_taxa_material,
			vl_glosa_taxa_servico,
			vl_taxa_co,
			vl_taxa_co_imp,
			vl_taxa_material,
			vl_taxa_material_imp,
			vl_taxa_servico,
			vl_taxa_servico_imp,
			nr_seq_conta_pos_estab,
			ie_faturamento,
			ie_status_faturamento,
			qt_faturada_orig,
			vl_faturado_orig,
			vl_unitario_faturado,
			nr_identificador,
			vl_co_ptu_imp,
			vl_material_ptu_imp,
			vl_procedimento_ptu_imp,
			vl_medico_calc_fat,
			vl_materiais_calc_fat,
			vl_custo_operacional_calc_fat,
			vl_liberado_material_fat,
			vl_liberado_co_fat,             
			vl_liberado_hi_fat,             
			vl_glosa_material_fat,          
			vl_glosa_hi_fat,                
			vl_glosa_co_fat,
			ie_pacote_ptu,
			vl_liberado_pag,
			vl_liberado,
			vl_glosa,
			qt_cobranca,          
			vl_lib_taxa_co_fat,      
			vl_lib_taxa_hm_fat,      
			vl_lib_taxa_material_fat,
			vl_taxa_co_fat,                  
			vl_taxa_hm_fat,
			vl_taxa_material_fat,
			vl_glosa_taxa_co_fat,            
			vl_glosa_taxa_hm_fat,            
			vl_glosa_taxa_material_fat,
			nr_seq_lote_fat,
			nr_seq_evento_fat,
			tx_administracao_pos,
			nr_id_transacao,
			ie_a520)
		values (nr_sequencia_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_analise_p,
			nr_seq_conta_p,
			nr_seq_conta_proc_w,
			CASE WHEN qt_informativo_w=0 THEN cd_procedimento_w  ELSE null END ,
			CASE WHEN qt_informativo_w=0 THEN dt_procedimento_w  ELSE null END ,
			ds_item_w,
			ie_tipo_despesa_w,
			ie_tipo_linha_w,
			ie_tipo_item_w,
			qt_procedimento_imp_w,
			vl_procedimento_imp_w,
			vl_proc_unitario_w,
			vl_procedimento_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			ie_via_acesso_w,
			ds_via_acesso_w,
			--nm_prestador_solic_w,

			--nr_auxiliares_w,

			--cd_porte_anestesico_w,

			--ds_tipo_guia_w,

			--nm_prestador_exec_w,

			--nm_prestador_pag_w,

			--ds_espec_cbo_w,
			nr_seq_protocolo_w,
			ie_autorizado_w,
			--cd_guia_w,

			--ds_setor_atend_w,

			--ds_item_importacao_w,

			--ds_medico_executor_w,
			vl_glosa_material_w,
			vl_glosa_hi_w,
			vl_glosa_co_w,
			vl_custo_operacional_w,
			vl_liberado_material_w,
			vl_liberado_co_w,
			vl_liberado_hi_w,
			vl_calculado_material_w,
			vl_calculado_co_w,
			vl_calculado_hi_w,
			tx_intercambio_w,
			tx_intercambio_imp_w,
			vl_taxa_intercambio_w,
			vl_taxa_intercambio_imp_w,
			qt_proc_pag_lib_w,
			tx_item_w,
			vl_unitario_apres_w,
			nr_seq_prestador_exec_w,
			nr_seq_guia_w,
			ie_status_analise_w,
			ie_pagamento_w,
			ie_valor_base_w,
			ie_expandido_w,
			--ds_grau_partic_w,
			ie_status_item_w,
			--ds_status_item_w,
			ie_pend_grupo_w,
			ie_item_nao_encontrado_w,
			nr_seq_proc_pai_w,
			ie_selecionado_w,
			qt_liberar_w,
			ie_sem_fluxo_w,
			ie_tipo_guia_w,
			vl_lib_taxa_co_w,
			vl_lib_taxa_material_w,
			vl_lib_taxa_servico_w,
			vl_glosa_taxa_co_w,
			vl_glosa_taxa_material_w,
			vl_glosa_taxa_servico_w,
			vl_taxa_co_w,
			vl_taxa_co_imp_w,
			vl_taxa_material_w,
			vl_taxa_material_imp_w,
			vl_taxa_servico_w,
			vl_taxa_servico_imp_w,
			nr_seq_conta_pos_w,
			ie_faturamento_w,
			ie_status_faturamento_w,
			qt_original_w,
			vl_calculado_fat_w,
			vl_unitario_w,
			CASE WHEN ie_proc_ref_w='N' THEN nr_id_analise_w  ELSE null END ,
			vl_co_ptu_imp_w,
			vl_material_ptu_imp_w,
			vl_procedimento_ptu_imp_w,
			vl_medico_calc_w,
			vl_materiais_calc_w,
			vl_custo_operacional_calc_w,
			vl_liberado_material_fat_w,       
			vl_liberado_co_fat_w,             
			vl_liberado_hi_fat_w,             
			vl_glosa_material_fat_w,          
			vl_glosa_hi_fat_w,                
			vl_glosa_co_fat_w,
			ie_pacote_ptu_w,
			vl_proc_pag_lib_w,
			vl_beneficiario_w,
			vl_glosa_fat_w,
			qt_liberado_w,
			vl_lib_taxa_co_fat_w,
			vl_lib_taxa_servico_fat_w,
			vl_lib_taxa_material_fat_w,
			vl_taxa_co_fat_w,
			vl_taxa_servico_fat_w,
			vl_taxa_material_fat_w,
			vl_glosa_taxa_co_fat_w,
			vl_glosa_taxa_servico_fat_w,
			vl_glosa_taxa_material_fat_w,
			nr_seq_lote_fat_w,
			nr_seq_evento_fat_w,
			tx_administracao_w,
			nr_id_transacao_p,
			ie_aviso_a520_proc_w);
			
		CALL pls_consulta_analise_pos_pck.set_nr_seq_item(nr_sequencia_w + 1);
		if (nr_sequencia_aux_w = 0) then
			CALL pls_consulta_analise_pos_pck.set_vl_apresentado(vl_procedimento_imp_w);
			CALL pls_consulta_analise_pos_pck.set_vl_liberado( coalesce(vl_proc_pag_lib_w,0));
			CALL pls_consulta_analise_pos_pck.set_vl_glosado(vl_glosa_w);
		end if;
		
		open C02;
		loop
		fetch C02 into
			nr_seq_conta_w,
			nr_seq_conta_proc_ww,
			ie_tipo_linha_w,
			ie_tipo_item_w,
			ie_tipo_despesa_w,
			qt_procedimento_imp_w,
			vl_procedimento_imp_w,
			vl_proc_unitario_w,
			vl_procedimento_w,
			nr_seq_prestador_pgto_w,
			nr_seq_proc_pai_w,
			cd_procedimento_orig_w,
			cd_procedimento_conv_w,
			ie_origem_proced_w,
			ie_via_acesso_w,
			nr_auxiliares_w,
			cd_porte_anestesico_w,
			nr_seq_setor_atend_w,
			ds_item_importacao_w,
			vl_glosa_material_w,
			vl_glosa_hi_w,
			vl_glosa_co_w,
			vl_custo_operacional_w,
			vl_liberado_material_w,
			vl_liberado_co_w,
			vl_liberado_hi_w,
			vl_calculado_material_w,
			vl_calculado_co_w,
			vl_calculado_hi_w,
			tx_intercambio_w,
			tx_intercambio_imp_w,
			qt_liberado_w,
			tx_item_w,
			vl_glosa_w,
			vl_liberado_w,
			vl_unitario_apres_w,
			ie_valor_base_w,
			nr_seq_grau_partic_w,
			vl_taxa_servico_imp_w,
			vl_taxa_co_imp_w,
			vl_taxa_material_imp_w,
			vl_taxa_servico_w,
			vl_taxa_co_w,
			vl_taxa_material_w,
			ie_status_item_w,
			nr_seq_proc_ref_w,
			dt_procedimento_w,
			nr_seq_prestador_honor_w,
			vl_lib_taxa_co_honor_w,
			vl_lib_taxa_material_honor_w,
			vl_lib_taxa_servico_honor_w,
			vl_glosa_taxa_co_honor_w,
			vl_glosa_taxa_material_honor_w,
			vl_glosa_taxa_servico_honor_w,
			vl_taxa_co_honor_w,
			vl_taxa_co_imp_honor_w,
			vl_taxa_material_honor_w,
			vl_taxa_material_imp_honor_w,
			vl_taxa_servico_honor_w,
			vl_taxa_servico_imp_honor_w,
			nr_seq_conta_pos_w,
			ie_status_faturamento_w,
			qt_original_w,
			qt_item_w,
			vl_calculado_fat_w,
			vl_beneficiario_w,
			vl_unitario_w,
			qt_proc_pag_w,
			qt_proc_pag_lib_w,
			vl_proc_pag_calc_w,
			vl_proc_pag_apres_w,
			vl_proc_pag_lib_w,
			vl_proc_pag_glosa_w,
			ie_glosa_w,
			ie_partic_agrup_w,
			qt_partic_w,
			nr_id_analise_w,
			ie_pagamento_w,
			vl_medico_calc_w,
			vl_materiais_calc_w,
			vl_custo_operacional_calc_w,
			vl_co_ptu_imp_w,
			vl_material_ptu_imp_w,
			vl_procedimento_ptu_imp_w,
			vl_liberado_material_fat_w,
			vl_liberado_co_fat_w,    
			vl_liberado_hi_fat_w,             
			vl_glosa_material_fat_w,          
			vl_glosa_hi_fat_w,                
			vl_glosa_co_fat_w,
			ie_pacote_ptu_w,
			vl_glosa_fat_w,
			vl_glosa_taxa_co_fat_w,
			vl_glosa_taxa_material_fat_w,
			vl_glosa_taxa_servico_fat_w,
			vl_lib_taxa_co_fat_w,
			vl_lib_taxa_material_fat_w,
			vl_lib_taxa_servico_fat_w,
			vl_taxa_co_fat_w,
			vl_taxa_material_fat_w,
			vl_taxa_servico_fat_w,
			nr_seq_lote_fat_w,
			nr_seq_evento_fat_w,
			nr_seq_disc_proc_w,
			tx_administracao_w,
			ie_aviso_a520_part_w,
			tx_item_proc_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			ds_via_acesso_w		:= null;
			ds_grau_partic_w	:= null;
			ie_pend_grupo_w		:= null;
			ie_pend_grupo_w		:= pls_obter_pend_grupo_ana_pos(nr_seq_analise_p,nr_seq_conta_pos_w,nr_seq_grupo_p,'N');
			
			if (ie_item_convertido_w = 'N') then
				cd_procedimento_w := cd_procedimento_orig_w;
			else
				cd_procedimento_w := cd_procedimento_conv_w;
			end if;
			
			--(nr_seq_analise_p,nr_seq_conta_p, nr_seq_conta_proc_ww, null, null, nr_seq_grupo_p, 'N');
			if	((ie_minha_analise_w = 'S' AND ie_pend_grupo_w IS NOT NULL AND ie_pend_grupo_w::text <> '') or (ie_minha_analise_w = 'N')) and
				((ie_pendentes_w = ie_pend_grupo_w) or (ie_pendentes_w = 'N')) then
				select	a.nr_seq_guia,
					a.nr_seq_protocolo,
					a.nr_seq_prestador,
					a.nr_seq_prestador_exec,
					a.dt_atendimento_referencia,
					a.nr_seq_cbo_saude,
					a.cd_medico_executor,
					a.cd_guia,
					a.ie_tipo_guia
				into STRICT	nr_seq_guia_honor_w,
					nr_seq_protocolo_honor_w,
					nr_seq_prestador_solic_honor_w,
					nr_seq_prestador_exec_honor_w,
					dt_atend_ref_conta_honor_w,
					nr_seq_cbo_saude_honor_w,
					cd_medico_executor_honor_w,
					cd_guia_conta_honor_w,
					ie_tipo_guia_conta_honor_w
				from	pls_conta a
				where	a.nr_sequencia	= nr_seq_conta_w;

				nm_prestador_solic_honor_w	:= substr(pls_obter_dados_prestador(nr_seq_prestador_solic_honor_w,'N'),1,255);
				nm_prestador_exec_honor_w	:= substr(pls_obter_dados_prestador(nr_seq_prestador_exec_honor_w,'N'),1,255);
				cd_prestador_exec_honor_w	:= substr(pls_obter_dados_prestador(nr_seq_prestador_exec_honor_w,'CD'),1,30);
				nm_prestador_pag_w		:= substr(pls_obter_dados_prestador(nr_seq_prestador_pgto_w,'N'),1,255);

				if (nr_seq_guia_honor_w IS NOT NULL AND nr_seq_guia_honor_w::text <> '') then
					select	obter_valor_dominio(1746,a.ie_tipo_guia),
						cd_guia,
						CASE WHEN ie_status=1 THEN  'S'  ELSE 'N' END
					into STRICT	ds_tipo_guia_honor_w,
						cd_guia_honor_w,
						ie_autorizado_honor_w
					from	pls_guia_plano a
					where	nr_sequencia = nr_seq_guia_honor_w;
					
					ds_tipo_guia_honor_w	:= obter_valor_dominio(1746,ie_tipo_guia_conta_honor_w);
				else
					cd_guia_honor_w		:= cd_guia_conta_honor_w;
					ds_tipo_guia_honor_w	:= obter_valor_dominio(1746,ie_tipo_guia_conta_honor_w);
				end if;

				if (nr_seq_cbo_saude_honor_w IS NOT NULL AND nr_seq_cbo_saude_honor_w::text <> '') then
					select	max(a.ds_cbo)
					into STRICT	ds_espec_cbo_honor_w
					from	cbo_saude	a
					where	a.nr_sequencia	= nr_seq_cbo_saude_honor_w;
				end if;

				if (cd_medico_executor_honor_w IS NOT NULL AND cd_medico_executor_honor_w::text <> '') then
					select	substr(nm_pessoa_fisica,1,255)
					into STRICT	ds_medico_executor_honor_w
					from	pessoa_fisica
					where	cd_pessoa_fisica	= cd_medico_executor_honor_w;
				end if;
				
				nm_prestador_w	:= pls_obter_dados_prestador(nr_seq_prestador_pgto_w,'N');

				nm_prestador_w			:= nm_prestador_exec_honor_w;
				/*ds_item_w			:= pls_obter_desc_coluna_analise('HI','DS_ITEM',cd_prestador_exec_honor_w,nm_prestador_exec_honor_w,null);*/

				ds_item_w			:= nm_prestador_w || ' (' || cd_prestador_exec_honor_w || ')';
				ds_item_w			:= ds_ident_nivel_2_w || ds_item_w;
				--ds_status_item_w		:= obter_valor_dominio(1870,ie_status_item_w);
				ds_setor_atend_w		:= pls_obter_ds_setor_atend(nr_seq_setor_atend_w);
				vl_taxa_intercambio_imp_w	:= coalesce(vl_taxa_servico_imp_w,0) + coalesce(vl_taxa_co_imp_w,0) + coalesce(vl_taxa_material_imp_w,0);
				vl_taxa_intercambio_w		:= coalesce(vl_taxa_servico_w,0) + coalesce(vl_taxa_co_w,0) + coalesce(vl_taxa_material_w,0);
				
				if (ie_status_item_w IS NOT NULL AND ie_status_item_w::text <> '') then
					select	ds_valor_dominio
					into STRICT	ds_status_item_w
					from	valor_dominio_v
					where	cd_dominio	= 1870
					and	vl_dominio	= ie_status_item_w;
				end if;
				
				if (ie_via_acesso_w IS NOT NULL AND ie_via_acesso_w::text <> '') then
					select	ds_valor_dominio
					into STRICT	ds_via_acesso_w
					from	valor_dominio_v
					where	cd_dominio	= 1268
					and	vl_dominio	= ie_via_acesso_w;
				end if;
				
				if (coalesce(nr_seq_grau_partic_w::text, '') = '') then
					select	count(1),
						max(nr_seq_grau_partic)
					into STRICT	qt_participante_w,
						nr_seq_grau_participante_w
					from	pls_proc_participante
					where 	nr_seq_conta_proc = nr_seq_conta_proc_ww;
					
					if (qt_participante_w = 1) then
						nr_seq_grau_partic_w := nr_seq_grau_participante_w;
					end if;
				end if;
				if (nr_seq_grau_partic_w IS NOT NULL AND nr_seq_grau_partic_w::text <> '') then
					select	substr(ds_grau_participacao,1,255)
					into STRICT	ds_grau_partic_w
					from	pls_grau_participacao
					where	nr_sequencia	= nr_seq_grau_partic_w;
				end if;

				/* Obter status geral de análise do item */

				ie_status_analise_w	:= pls_obter_status_analise_pos(nr_seq_analise_p,nr_seq_conta_pos_w, ie_item_nao_encontrado_w);
				
				/* Obter se possui fluxo de análise */

				ie_sem_fluxo_w		:= pls_obter_se_item_sem_fluxo(nr_seq_analise_p,null, nr_seq_conta_proc_ww, null,null);
				
				/* Verificar status de pagamento */

				if (coalesce(ie_pagamento_w::text, '') = '') and (coalesce(nr_seq_disc_proc_w::text, '') = '')then
					ie_pagamento_w	:= pls_analise_obter_status_pag(ie_status_item_w,qt_proc_pag_w,qt_proc_pag_lib_w,
							vl_proc_pag_apres_w,vl_proc_pag_calc_w,vl_proc_pag_lib_w,vl_proc_pag_glosa_w, ie_glosa_w);
				elsif (nr_seq_disc_proc_w IS NOT NULL AND nr_seq_disc_proc_w::text <> '') then
					select	max(qt_negada),
						max(vl_negado),
						max(qt_aceita),
						max(vl_aceito)
					into STRICT	qt_negada_w,
						vl_negado_w,
						qt_proc_pag_lib_w,
						vl_proc_pag_lib_w
					from	pls_discussao_proc
					where	nr_sequencia	= nr_seq_disc_proc_w;
					
					if (qt_negada_w	> 0) or (vl_negado_w 	> 0) then
						ie_pagamento_w	:= 'P';
					else
						ie_pagamento_w	:= 'L';
					end if;
				end if;
				ie_faturamento_w	:= pls_analise_obter_status_fat(ie_status_faturamento_w,qt_original_w,qt_item_w,vl_procedimento_w,vl_beneficiario_w);
					
				/* Tratar expansão do item */

				select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_expandido_w
				from	w_pls_analise_item_exp a
				where	a.nr_seq_analise	= nr_seq_analise_p
				and	a.nr_seq_conta_proc	= nr_seq_conta_proc_w;

				nr_sequencia_w	:= pls_consulta_analise_pos_pck.get_nr_seq_item;
				
				qt_liberar_w	:= null;
				
				select	count(1),
					max(qt_liberar)
				into STRICT	qt_selecao_w,
					qt_liberar_w
				from	w_pls_analise_selecao_item	a
				where	a.nr_seq_analise	= nr_seq_analise_p
				and	a.nr_seq_w_item		= nr_sequencia_w;
				
				if (qt_selecao_w > 0) then
					ie_selecionado_w	:= 'S';
				else
					ie_selecionado_w	:= 'N';
				end if;
				
				if (tx_item_proc_w > 0) then
		
					tx_item_w := tx_item_proc_w;
				
				end if;
				
				insert into w_pls_analise_item(nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_analise,
					nr_seq_conta,
					nr_seq_conta_proc,
					ds_item,
					ie_tipo_despesa,
					ie_tipo_linha,
					ie_tipo_item,
					qt_apresentada,
					vl_apresentado,
					vl_calculado_unitario,
					vl_calculado,
					nr_seq_proc_pai,
					cd_procedimento,
					ie_origem_proced,
					ie_via_acesso,
					ds_via_acesso,
					nm_prestador_solic,
					nr_auxiliares,
					cd_porte_anestesico,
					ds_tipo_guia,
					nm_prestador_exec,
					nm_prestador_pag,
					ds_espec_cbo,
					nr_seq_protocolo,
					ie_autoriz_previa,
					cd_guia,
					ds_setor_atend,
					ds_item_importacao,
					ds_medico_executor,
					vl_glosa_material,
					vl_glosa_hi,
					vl_glosa_co,
					vl_custo_operacional,
					vl_liberado_material,
					vl_liberado_co,
					vl_liberado_hi,
					vl_calculado_material,
					vl_calculado_co,
					vl_calculado_hi,
					tx_intercambio,
					tx_intercambio_imp,
					vl_taxa_intercambio,
					vl_taxa_intercambio_imp,
					qt_liberado,
					tx_item,
					vl_liberado,
					vl_unitario_apres,
					nr_seq_prestador_exec,
					nr_seq_guia,
					ie_status_analise,
					ie_pagamento,
					ie_valor_base,
					ds_grau_partic,
					ie_status_item,
					ds_status_item,
					ie_pend_grupo,
					ie_item_nao_encontrado,
					ie_selecionado,
					qt_liberar,
					ie_sem_fluxo,
					ie_tipo_guia,
					vl_lib_taxa_co,
					vl_lib_taxa_material,
					vl_lib_taxa_servico,
					vl_glosa_taxa_co,
					vl_glosa_taxa_material,
					vl_glosa_taxa_servico,
					vl_taxa_co,
					vl_taxa_co_imp,
					vl_taxa_material,
					vl_taxa_material_imp,
					vl_taxa_servico,
					vl_taxa_servico_imp,
					nr_seq_conta_pos_estab,
					ie_faturamento,
					ie_status_faturamento,
					qt_faturada_orig,
					vl_faturado_orig,
					vl_unitario_faturado,
					nr_identificador,
					vl_co_ptu_imp,
					vl_material_ptu_imp,
					vl_procedimento_ptu_imp,
					vl_medico_calc_fat,
					vl_materiais_calc_fat,
					vl_custo_operacional_calc_fat,
					vl_liberado_material_fat,
					vl_liberado_co_fat,             
					vl_liberado_hi_fat,             
					vl_glosa_material_fat,          
					vl_glosa_hi_fat,                
					vl_glosa_co_fat,
					ie_pacote_ptu,
					vl_liberado_pag,
					vl_glosa_pag,
					qt_cobranca,
					vl_glosa,          
					vl_lib_taxa_co_fat,      
					vl_lib_taxa_hm_fat,      
					vl_lib_taxa_material_fat,
					vl_taxa_co_fat,                  
					vl_taxa_hm_fat,
					vl_taxa_material_fat,
					vl_glosa_taxa_co_fat,            
					vl_glosa_taxa_hm_fat,            
					vl_glosa_taxa_material_fat,
					nr_seq_lote_fat,
					nr_seq_evento_fat,
					tx_administracao_pos,
					nr_id_transacao,
					ie_a520)
				values (nr_sequencia_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nr_seq_analise_p,
					nr_seq_conta_w,
					nr_seq_conta_proc_ww,
					ds_item_w,
					ie_tipo_despesa_w,
					ie_tipo_linha_w,
					ie_tipo_item_w,
					qt_procedimento_imp_w,
					vl_procedimento_imp_w,
					vl_proc_unitario_w,
					vl_procedimento_w,
					nr_seq_proc_pai_w,
					cd_procedimento_w,
					ie_origem_proced_w,
					ie_via_acesso_w,
					ds_via_acesso_w,
					nm_prestador_solic_honor_w,
					nr_auxiliares_w,
					cd_porte_anestesico_w,
					ds_tipo_guia_honor_w,
					nm_prestador_exec_honor_w,
					nm_prestador_pag_w,
					ds_espec_cbo_honor_w,
					nr_seq_protocolo_honor_w,
					ie_autorizado_honor_w,
					cd_guia_honor_w,
					ds_setor_atend_w,
					ds_item_importacao_w,
					ds_medico_executor_honor_w,
					vl_glosa_material_w,
					vl_glosa_hi_w,
					vl_glosa_co_w,
					vl_custo_operacional_w,
					vl_liberado_material_w,
					vl_liberado_co_w,
					vl_liberado_hi_w,
					vl_calculado_material_w,
					vl_calculado_co_w,
					vl_calculado_hi_w,
					tx_intercambio_w,
					tx_intercambio_imp_w,
					vl_taxa_intercambio_w,
					vl_taxa_intercambio_imp_w,
					qt_proc_pag_lib_w,
					tx_item_w,
					vl_beneficiario_w,
					vl_unitario_apres_w,
					nr_seq_prestador_exec_honor_w,
					nr_seq_guia_honor_w,
					ie_status_analise_w,
					ie_pagamento_w,
					ie_valor_base_w,
					ds_grau_partic_w,
					ie_status_item_w,
					ds_status_item_w,
					ie_pend_grupo_w,
					ie_item_nao_encontrado_w,
					ie_selecionado_w,
					qt_liberar_w,
					ie_sem_fluxo_w,
					ie_tipo_guia_conta_honor_w,
					vl_lib_taxa_co_honor_w,
					vl_lib_taxa_material_honor_w,
					vl_lib_taxa_servico_honor_w,
					vl_glosa_taxa_co_honor_w,
					vl_glosa_taxa_material_honor_w,
					vl_glosa_taxa_servico_honor_w,
					vl_taxa_co_w,
					vl_taxa_co_imp_w,
					vl_taxa_material_w,
					vl_taxa_material_imp_w,
					vl_taxa_servico_w,
					vl_taxa_servico_imp_w,
					nr_seq_conta_pos_w,
					ie_faturamento_w,
					ie_status_faturamento_w,
					qt_original_w,
					vl_calculado_fat_w,
					vl_unitario_w,
					nr_id_analise_w,
					vl_co_ptu_imp_w,
					vl_material_ptu_imp_w,
					vl_procedimento_ptu_imp_w,
					vl_medico_calc_w,
					vl_materiais_calc_w,
					vl_custo_operacional_calc_w,
					vl_liberado_material_fat_w,
					vl_liberado_co_fat_w,             
					vl_liberado_hi_fat_w,             
					vl_glosa_material_fat_w,          
					vl_glosa_hi_fat_w,                
					vl_glosa_co_fat_w,
					ie_pacote_ptu_w,
					vl_proc_pag_lib_w,
					vl_proc_pag_glosa_w,
					qt_liberado_w,
					vl_glosa_fat_w,
					vl_lib_taxa_co_fat_w,
					vl_lib_taxa_servico_fat_w,
					vl_lib_taxa_material_fat_w,
					vl_taxa_co_fat_w,
					vl_taxa_servico_fat_w,
					vl_taxa_material_fat_w,
					vl_glosa_taxa_co_fat_w,
					vl_glosa_taxa_servico_fat_w,
					vl_glosa_taxa_material_fat_w,
					nr_seq_lote_fat_w,
					nr_seq_evento_fat_w,
					tx_administracao_w,
					nr_id_transacao_p,
					ie_aviso_a520_part_w);
				
				if (nr_sequencia_aux_w <> 0) then
					CALL pls_consulta_analise_pos_pck.set_vl_apresentado(vl_procedimento_imp_w);
					CALL pls_consulta_analise_pos_pck.set_vl_liberado( coalesce(vl_proc_pag_lib_w,0));
					CALL pls_consulta_analise_pos_pck.set_vl_glosado(vl_glosa_w);
				end if;	
				
				CALL pls_consulta_analise_pos_pck.set_nr_seq_item(nr_sequencia_w + 1);
				
				vl_unitario_apres_ww		:= vl_unitario_apres_ww + vl_unitario_apres_w;
				vl_taxa_intercambio_imp_w	:= vl_taxa_intercambio_imp_w + vl_taxa_intercambio_imp_w;
				vl_taxa_intercambio_ww		:= vl_taxa_intercambio_ww + vl_taxa_intercambio_w;
				vl_liberado_material_ww		:= vl_liberado_material_ww + vl_liberado_material_w;
				vl_liberado_hi_ww		:= vl_liberado_hi_ww + vl_liberado_hi_w;
				vl_liberado_co_ww		:= vl_liberado_co_ww + vl_liberado_co_w;
				vl_liberado_ww			:= vl_liberado_ww + vl_liberado_w;
				vl_glosa_material_ww		:= vl_glosa_material_ww + vl_glosa_material_w;
				vl_glosa_hi_ww			:= vl_glosa_hi_ww + vl_glosa_hi_w;
				vl_glosa_co_ww			:= vl_glosa_co_ww + vl_glosa_co_w;
				vl_glosa_ww			:= vl_glosa_ww + vl_glosa_w;
				vl_custo_operacional_ww		:= vl_custo_operacional_ww + vl_custo_operacional_w;
				vl_proc_unitario_ww		:= vl_proc_unitario_ww + vl_proc_unitario_w;
				vl_calculado_material_ww	:= vl_calculado_material_ww + vl_calculado_material_w;
				vl_calculado_co_ww		:= vl_calculado_co_ww + vl_calculado_co_w;
				vl_calculado_hi_ww		:= vl_calculado_hi_ww + vl_calculado_hi_w;
				vl_procedimento_ww		:= vl_procedimento_ww + vl_procedimento_w;
				vl_co_ptu_imp_ww		:= vl_co_ptu_imp_ww + vl_co_ptu_imp_w;
				vl_material_ptu_imp_ww		:= vl_material_ptu_imp_ww +vl_material_ptu_imp_w;
				vl_procedimento_ptu_imp_ww	:= vl_procedimento_ptu_imp_ww + vl_procedimento_ptu_imp_w;
				vl_medico_calc_ww		:= vl_medico_calc_ww + vl_medico_calc_w;
				vl_materiais_calc_ww		:= vl_materiais_calc_ww + vl_materiais_calc_w;
				vl_custo_operacional_calc_ww	:= vl_custo_operacional_calc_ww + vl_custo_operacional_calc_w;
				vl_liberado_material_fat_ww     := vl_liberado_material_fat_ww + vl_liberado_material_fat_w;
				vl_liberado_co_fat_ww           := vl_liberado_co_fat_ww + vl_liberado_co_fat_w;
				vl_liberado_hi_fat_ww           := vl_liberado_hi_fat_ww + vl_liberado_hi_fat_w;
				vl_glosa_material_fat_ww        := vl_glosa_material_fat_ww + vl_glosa_material_fat_w;
				vl_glosa_hi_fat_ww              := vl_glosa_hi_fat_ww + vl_glosa_hi_fat_w;
				vl_glosa_co_fat_ww		:= vl_glosa_co_fat_ww + vl_glosa_co_fat_w;
				vl_proc_pag_apres_ww		:= vl_proc_pag_apres_ww + vl_proc_pag_apres_w;
				vl_proc_pag_lib_ww		:= vl_proc_pag_lib_ww + vl_proc_pag_lib_w;
				vl_proc_pag_glosa_ww		:= vl_proc_pag_glosa_ww + vl_proc_pag_glosa_w;
				vl_glosa_fat_ww			:= vl_glosa_fat_ww + vl_glosa_fat_w;
				vl_lib_taxa_co_fat_ww  		:= vl_lib_taxa_co_fat_ww + vl_lib_taxa_co_fat_w;
				vl_lib_taxa_material_fat_ww	:= vl_lib_taxa_material_fat_ww + vl_lib_taxa_material_fat_w;
				vl_lib_taxa_servico_fat_ww     	:= vl_lib_taxa_servico_fat_ww + vl_lib_taxa_servico_fat_w;
				vl_taxa_co_fat_ww		:= vl_taxa_co_fat_ww + vl_taxa_co_fat_w;
				vl_taxa_material_fat_ww		:= vl_taxa_material_fat_ww + vl_taxa_material_fat_w;
				vl_taxa_servico_fat_ww 		:= vl_taxa_servico_fat_ww + vl_taxa_servico_fat_w;
				vl_glosa_taxa_co_fat_ww		:= vl_glosa_taxa_co_fat_ww + vl_glosa_taxa_co_fat_w;
				vl_glosa_taxa_material_fat_ww	:= vl_glosa_taxa_material_fat_ww + vl_glosa_taxa_material_fat_w;
				vl_glosa_taxa_servico_fat_ww 	:= vl_glosa_taxa_servico_fat_ww + vl_glosa_taxa_servico_fat_w;
				if (ie_proc_ref_w = 'S') and (ie_partic_agrup_w = 'N' or qt_partic_w > 1) then
					CALL pls_gerar_w_analise_pos_part(nr_seq_analise_p, nr_seq_conta_proc_ww, nr_seq_grupo_p, ie_minha_analise_p, ie_pendentes_p, nm_usuario_p, nr_id_transacao_p);
				end if;
			end if;
			end;
		end loop;
		close C02;
		
		if (nr_sequencia_aux_w <> 0) then
		
			if ( coalesce(nr_id_transacao_p::text, '') = '') then
			
				update	w_pls_analise_item
				set	vl_unitario_apres		= vl_unitario_apres_ww,
					vl_taxa_intercambio_imp		= vl_taxa_intercambio_imp_w,
					vl_taxa_intercambio		= vl_taxa_intercambio_ww,
					vl_liberado_material		= vl_liberado_material_ww,
					vl_liberado_hi			= vl_liberado_hi_ww,
					vl_liberado_co			= vl_liberado_co_ww,
					vl_liberado			= vl_liberado_ww,
					vl_glosa_material		= vl_glosa_material_ww,
					vl_glosa_hi			= vl_glosa_hi_ww,
					vl_glosa_co			= vl_glosa_co_ww,
					vl_glosa			= vl_glosa_fat_ww,
					vl_custo_operacional		= vl_custo_operacional_ww,
					vl_calculado_unitario		= vl_proc_unitario_ww,
					vl_calculado_material		= vl_calculado_material_ww,
					vl_calculado_co			= vl_calculado_co_ww,
					vl_calculado_hi			= vl_calculado_hi_ww,
					vl_calculado			= vl_procedimento_ww,
					vl_co_ptu_imp			= vl_co_ptu_imp_ww,
					vl_material_ptu_imp		= vl_material_ptu_imp_ww,
					vl_procedimento_ptu_imp		= vl_procedimento_ptu_imp_ww,
					vl_medico_calc_fat		= vl_medico_calc_ww,
					vl_materiais_calc_fat		= vl_materiais_calc_ww,
					vl_custo_operacional_calc_fat	= vl_custo_operacional_calc_ww,
					vl_liberado_pag			= vl_proc_pag_lib_ww,
					vl_apresentado			= vl_proc_pag_apres_ww,
					vl_glosa_pag			= vl_proc_pag_glosa_ww,
					vl_lib_taxa_co_fat    		= vl_lib_taxa_co_fat_ww, 
					vl_lib_taxa_hm_fat    		= vl_lib_taxa_servico_fat_ww,  
					vl_lib_taxa_material_fat	= vl_lib_taxa_material_fat_ww,
					vl_taxa_co_fat			= vl_taxa_co_fat_ww,        
					vl_taxa_hm_fat			= vl_taxa_servico_fat_ww,
					vl_taxa_material_fat		= vl_taxa_material_fat_ww,
					vl_glosa_taxa_co_fat		= vl_glosa_taxa_co_fat_ww,            
					vl_glosa_taxa_hm_fat 		= vl_glosa_taxa_servico_fat_ww,          
					vl_glosa_taxa_material_fat	= vl_glosa_taxa_material_fat_ww,
					vl_liberado_material_fat	= vl_liberado_material_fat_ww,      
					vl_liberado_co_fat            	= vl_liberado_co_fat_ww,
					vl_liberado_hi_fat		= vl_liberado_hi_fat_ww
				where	nr_sequencia			= nr_sequencia_aux_w;
			
			else

				update	w_pls_analise_item
				set	vl_unitario_apres		= vl_unitario_apres_ww,
					vl_taxa_intercambio_imp		= vl_taxa_intercambio_imp_w,
					vl_taxa_intercambio		= vl_taxa_intercambio_ww,
					vl_liberado_material		= vl_liberado_material_ww,
					vl_liberado_hi			= vl_liberado_hi_ww,
					vl_liberado_co			= vl_liberado_co_ww,
					vl_liberado			= vl_liberado_ww,
					vl_glosa_material		= vl_glosa_material_ww,
					vl_glosa_hi			= vl_glosa_hi_ww,
					vl_glosa_co			= vl_glosa_co_ww,
					vl_glosa			= vl_glosa_fat_ww,
					vl_custo_operacional		= vl_custo_operacional_ww,
					vl_calculado_unitario		= vl_proc_unitario_ww,
					vl_calculado_material		= vl_calculado_material_ww,
					vl_calculado_co			= vl_calculado_co_ww,
					vl_calculado_hi			= vl_calculado_hi_ww,
					vl_calculado			= vl_procedimento_ww,
					vl_co_ptu_imp			= vl_co_ptu_imp_ww,
					vl_material_ptu_imp		= vl_material_ptu_imp_ww,
					vl_procedimento_ptu_imp		= vl_procedimento_ptu_imp_ww,
					vl_medico_calc_fat		= vl_medico_calc_ww,
					vl_materiais_calc_fat		= vl_materiais_calc_ww,
					vl_custo_operacional_calc_fat	= vl_custo_operacional_calc_ww,
					vl_liberado_pag			= vl_proc_pag_lib_ww,
					vl_apresentado			= vl_proc_pag_apres_ww,
					vl_glosa_pag			= vl_proc_pag_glosa_ww,
					vl_lib_taxa_co_fat    		= vl_lib_taxa_co_fat_ww, 
					vl_lib_taxa_hm_fat    		= vl_lib_taxa_servico_fat_ww,  
					vl_lib_taxa_material_fat	= vl_lib_taxa_material_fat_ww,
					vl_taxa_co_fat			= vl_taxa_co_fat_ww,        
					vl_taxa_hm_fat			= vl_taxa_servico_fat_ww,
					vl_taxa_material_fat		= vl_taxa_material_fat_ww,
					vl_glosa_taxa_co_fat		= vl_glosa_taxa_co_fat_ww,            
					vl_glosa_taxa_hm_fat 		= vl_glosa_taxa_servico_fat_ww,          
					vl_glosa_taxa_material_fat	= vl_glosa_taxa_material_fat_ww,
					vl_liberado_material_fat	= vl_liberado_material_fat_ww,      
					vl_liberado_co_fat            	= vl_liberado_co_fat_ww,
					vl_liberado_hi_fat		= vl_liberado_hi_fat_ww
				where nr_sequencia			= nr_sequencia_aux_w
				  and nr_seq_analise  = nr_seq_analise_p
				  and nm_usuario	= nm_usuario_p;		
			end if;
		end if;
		
		if (ie_proc_ref_w = 'N') then
			CALL pls_gerar_w_analise_pos_part(nr_seq_analise_p, nr_seq_conta_proc_w, nr_seq_grupo_p, ie_minha_analise_p, ie_pendentes_p, nm_usuario_p, nr_id_transacao_p);
		end if;
	end if;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_w_analise_pos_agr ( nr_seq_analise_p bigint, nr_seq_conta_p bigint, nr_seq_grupo_p bigint, ie_minha_analise_p text, ie_pendentes_p text, nm_usuario_p text, nr_id_transacao_p w_pls_analise_item.nr_id_transacao%type) FROM PUBLIC;

