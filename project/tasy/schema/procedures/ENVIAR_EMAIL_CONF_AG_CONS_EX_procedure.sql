-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_email_conf_ag_cons_ex () AS $body$
DECLARE

				
ds_mensagem_w		varchar(4000);
ds_mensagem_regra_w	varchar(4000);
nm_paciente_w		varchar(255);
dt_agenda_w		timestamp;
hr_agenda_w		timestamp;
nm_medico_w		varchar(255);
cd_pessoa_fisica_w	varchar(10);	
ds_email_destino_w		varchar(255);
ds_procedimento_w		varchar(255);
cd_agenda_w		bigint;
ie_erro_w			varchar(1);
nr_seq_agenda_w		agenda_consulta.nr_sequencia%type;
ds_orientacao_w		varchar(4000);
nr_seq_regra_w		bigint;
qt_dias_envio_w		smallint;
ds_titulo_w		varchar(255);
ds_remetente_w		varchar(255);
cd_tipo_agenda_w		bigint;

C01 CURSOR FOR   --  -- BUSCA OS DADOS DA REGRA
	SELECT 	cd_agenda,
		cd_tipo_agenda,
		qt_dias_envio,
		ds_titulo,
		ds_mensagem,
		ds_remetente
	from   	agenda_envio_email_confirm;
	
C02 CURSOR FOR   --  AGENDA DE EXAMES
	SELECT	b.nm_paciente,
		b.hr_inicio,
		substr(obter_nome_medico(cd_medico_exec,'N'),1,255) nm_medico,
		trunc(hr_inicio),
		b.cd_pessoa_fisica,
		substr(obter_exame_agenda(b.cd_procedimento, b.ie_origem_proced, b.nr_seq_proc_interno),1,240),
		a.cd_agenda
	from	agenda a,
		agenda_paciente b
	where	a.cd_agenda = b.cd_agenda
	and	b.cd_agenda = cd_agenda_w
	and	a.cd_tipo_agenda = 2
	and	coalesce(a.ie_enviar_email_confirmacao,'N') = 'S'
	and	(b.cd_pessoa_fisica IS NOT NULL AND b.cd_pessoa_fisica::text <> '')
	and	b.ie_status_agenda <> 'C'
	and	b.dt_agenda between 	trunc(clock_timestamp()+qt_dias_envio_w) and trunc(clock_timestamp()+qt_dias_envio_w) + 86399/86400;
	
C03 CURSOR FOR   --  AGENDA DE CONSULTAS	
SELECT 	substr(obter_nome_pf(b.cd_pessoa_fisica),1,255),
	b.dt_agenda,
	trunc(b.dt_agenda),
	b.cd_pessoa_fisica,
	a.cd_agenda,
	b.nr_sequencia,
	substr(obter_nome_medico(a.cd_pessoa_fisica,'N'),1,255),
	substr(Obter_Orientacao_Agenda(a.cd_agenda),1,4000)
from    	agenda_consulta_v2 b,
	agenda a,
	agenda_classif c
where   	a.cd_agenda = b.cd_agenda
and	b.cd_agenda = cd_agenda_w
and	b.ie_classif_agenda = c.cd_classificacao
and	(b.cd_pessoa_fisica IS NOT NULL AND b.cd_pessoa_fisica::text <> '')
and	a.cd_tipo_agenda in (3,4)
and	b.ie_status_agenda <> 'C'
and	coalesce(a.ie_enviar_email_confirmacao,'N') = 'S'
and	coalesce(c.ie_email_confirmacao,'S') = 'S'
and	b.dt_agenda between trunc(clock_timestamp()+qt_dias_envio_w) and trunc(clock_timestamp()+qt_dias_envio_w) + 86399/86400;	
		

BEGIN
	
open C01;
loop
fetch C01 into	
	cd_agenda_w,
	cd_tipo_agenda_w,
	qt_dias_envio_w,
	ds_titulo_w,
	ds_mensagem_w,
	ds_remetente_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ds_mensagem_regra_w := ds_mensagem_w;	
	if (cd_tipo_agenda_w = 2) then

		open C02;
		loop
		fetch C02 into	
			nm_paciente_w,
			hr_agenda_w,
			nm_medico_w,
			dt_agenda_w,
			cd_pessoa_fisica_w,
			ds_procedimento_w,
			cd_agenda_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			ds_mensagem_w	:= ds_mensagem_regra_w;
			ds_email_destino_w	:= '';	
			if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then	
				select	max(b.ds_email)
				into STRICT	ds_email_destino_w
				from	pessoa_fisica a,
					compl_pessoa_fisica b
				where	a.cd_pessoa_fisica 	= b.cd_pessoa_fisica
				and	b.ie_tipo_complemento 	= 1
				and	a.cd_pessoa_fisica	= cd_pessoa_fisica_w;
			end if;

			if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then
			
				ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@Medico', nm_medico_w),1,4000);
				ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@Procedimento', ds_procedimento_w),1,4000);
				ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@Paciente', nm_paciente_w),1,4000);
				ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@Dia', to_char(dt_agenda_w,'dd/mm/yyyy')),1,4000);
				ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@Hora', to_char(hr_agenda_w,'hh24:mi')),1,4000);
				
							
			end if;
			
			if (position('@' in ds_email_destino_w) > 0) and (ds_titulo_w IS NOT NULL AND ds_titulo_w::text <> '') and (ds_remetente_w IS NOT NULL AND ds_remetente_w::text <> '') and (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then
				
				begin
				CALL enviar_email(ds_titulo_w, ds_mensagem_w, ds_remetente_w, ds_email_destino_w, 'Tasy', 'A');
				exception
				when others then
				ie_erro_w	:= 'S';	
				end;
					
			end if;
			
			end;
		end loop;
		close C02;
		
	elsif (cd_tipo_agenda_w in (3,4)) then

		open C03;
		loop
		fetch C03 into	
			nm_paciente_w,
			hr_agenda_w,
			dt_agenda_w,
			cd_pessoa_fisica_w,
			cd_agenda_w,
			nr_seq_agenda_w,
			nm_medico_w,
			ds_orientacao_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			ds_mensagem_w	:= ds_mensagem_regra_w;
			ds_email_destino_w	:= '';	
			if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then	
				select	max(b.ds_email)
				into STRICT	ds_email_destino_w
				from	pessoa_fisica a,
					compl_pessoa_fisica b
				where	a.cd_pessoa_fisica 	= b.cd_pessoa_fisica
				and	b.ie_tipo_complemento 	= 1
				and	a.cd_pessoa_fisica	= cd_pessoa_fisica_w;
			end if;

			if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then
			
				ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@Paciente', nm_paciente_w),1,4000);
				ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@Dia', to_char(dt_agenda_w,'dd/mm/yyyy')),1,4000);
				ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@Hora', to_char(hr_agenda_w,'hh24:mi')),1,4000);
				ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@Medico', nm_medico_w),1,4000);
				ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@Orientacao', ds_orientacao_w),1,4000);
				
			
			end if;
			
			if (position('@' in ds_email_destino_w) > 0) and (ds_titulo_w IS NOT NULL AND ds_titulo_w::text <> '') and (ds_remetente_w IS NOT NULL AND ds_remetente_w::text <> '') and (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then
				
				begin
				CALL enviar_email(ds_titulo_w, ds_mensagem_w, ds_remetente_w, ds_email_destino_w, 'Tasy', 'A');
				CALL Inserir_historico_envio_email(cd_agenda_w, nr_seq_agenda_w, 'Tasy', cd_pessoa_fisica_w, nm_paciente_w, hr_agenda_w);
				exception
				when others then
				ie_erro_w	:= 'S';	
				end;
					
			end if;
			
			end;
		end loop;
		close C03;
		
	end if;
		
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_email_conf_ag_cons_ex () FROM PUBLIC;

