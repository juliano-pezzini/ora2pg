-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_recalc_pos_estab_fat (nr_seq_conta_pos_estab_p pls_conta_pos_estabelecido.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


vl_beneficiario_w		pls_conta_pos_estabelecido.vl_beneficiario%type;
vl_administracao_w		pls_conta_pos_estabelecido.vl_administracao%type;
vl_medico_w			pls_conta_pos_estabelecido.vl_medico%type;
vl_custo_operacional_w		pls_conta_pos_estabelecido.vl_custo_operacional%type;
vl_materiais_w			pls_conta_pos_estabelecido.vl_materiais%type;
vl_lib_taxa_servico_w		pls_conta_pos_estabelecido.vl_lib_taxa_servico%type;
vl_lib_taxa_co_w		pls_conta_pos_estabelecido.vl_lib_taxa_co%type;
vl_lib_taxa_material_w		pls_conta_pos_estabelecido.vl_lib_taxa_material%type;
nr_seq_conta_w			pls_conta_pos_estabelecido.nr_seq_conta%type;
nr_seq_conta_proc_w		pls_conta_pos_estabelecido.nr_seq_conta_proc%type;
nr_seq_conta_mat_w		pls_conta_pos_estabelecido.nr_seq_conta_mat%type;
nr_seq_analise_w		pls_conta_pos_estabelecido.nr_seq_analise%type;
qt_consistencias_w		bigint;
qt_registros_w			bigint;
vl_total_benef_w		double precision;
nr_seq_disc_proc_w		pls_conta_pos_estabelecido.nr_seq_disc_proc%type;
ie_acao_w			varchar(1);


BEGIN

begin
dbms_application_info.SET_ACTION('PLS_RECALC_POS_ESTAB_FAT');

select	max(vl_beneficiario),
	max(vl_administracao),
	max(vl_medico),
	max(vl_custo_operacional),
	max(vl_materiais),
	max(vl_lib_taxa_servico),
	max(vl_lib_taxa_co),
	max(vl_lib_taxa_material),
	max(nr_seq_conta),
	max(nr_seq_conta_proc),
	max(nr_seq_conta_mat),
	max(nr_seq_analise),
	max(nr_seq_disc_proc)
into STRICT	vl_beneficiario_w,
	vl_administracao_w,
	vl_medico_w,
	vl_custo_operacional_w,
	vl_materiais_w,
	vl_lib_taxa_servico_w,
	vl_lib_taxa_co_w,
	vl_lib_taxa_material_w,
	nr_seq_conta_w,
	nr_seq_conta_proc_w,
	nr_seq_conta_mat_w,
	nr_seq_analise_w,
	nr_seq_disc_proc_w
from	pls_conta_pos_estabelecido
where	nr_sequencia		= nr_seq_conta_pos_estab_p;

vl_total_benef_w := 	coalesce(vl_medico_w,0) + coalesce(vl_custo_operacional_w,0) + coalesce(vl_materiais_w,0) +
			coalesce(vl_lib_taxa_servico_w,0) + coalesce(vl_lib_taxa_co_w,0) + coalesce(vl_lib_taxa_material_w,0);

select	count(1)
into STRICT	qt_registros_w
from	pls_conta_pos_estab_partic
where	nr_seq_conta_pos = nr_seq_conta_pos_estab_p
and (vl_participante_pos < 0 or vl_administracao < 0);

if (qt_registros_w > 0) or (vl_beneficiario_w < 0) or (vl_administracao_w < 0) or (vl_beneficiario_w <> vl_total_benef_w) or (vl_beneficiario_w = 0) then
	if (nr_seq_disc_proc_w IS NOT NULL AND nr_seq_disc_proc_w::text <> '') then
		ie_acao_w	:= 'F';
	else
		ie_acao_w	:= 'A';
	end if;
	CALL pls_gerar_valor_pos_estab(nr_seq_conta_w, nm_usuario_p, 'F', nr_seq_conta_proc_w, nr_seq_conta_mat_w, ie_acao_w);
	CALL pls_liberar_automatic_pos(nr_seq_analise_w, cd_estabelecimento_p, nm_usuario_p, null);
end if;

select	count(*)
into STRICT	qt_consistencias_w
from	pls_conta_pos_fat_status
where	nr_seq_conta_pos_estab	= nr_seq_conta_pos_estab_p;

if (qt_consistencias_w = 0) then

	select	max(vl_beneficiario),
		max(vl_administracao),
		max(vl_medico),
		max(vl_custo_operacional),
		max(vl_materiais),
		max(vl_lib_taxa_servico),
		max(vl_lib_taxa_co),
		max(vl_lib_taxa_material)
	into STRICT	vl_beneficiario_w,
		vl_administracao_w,
		vl_medico_w,
		vl_custo_operacional_w,
		vl_materiais_w,
		vl_lib_taxa_servico_w,
		vl_lib_taxa_co_w,
		vl_lib_taxa_material_w
	from	pls_conta_pos_estabelecido
	where	nr_sequencia		= nr_seq_conta_pos_estab_p;

	vl_total_benef_w := 	coalesce(vl_medico_w,0) + coalesce(vl_custo_operacional_w,0) + coalesce(vl_materiais_w,0) +
				coalesce(vl_lib_taxa_servico_w,0) + coalesce(vl_lib_taxa_co_w,0) + coalesce(vl_lib_taxa_material_w,0);

	if (vl_beneficiario_w < 0) or (vl_administracao_w < 0) or (vl_beneficiario_w <> vl_total_benef_w) or
		(vl_beneficiario_w = 0 AND vl_administracao_w = 0) then

		insert into pls_conta_pos_fat_status(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_conta_pos_estab,
			ie_status_inclusao)
		SELECT	nextval('pls_conta_pos_fat_status_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_conta_pos_estab_p,
			'D'				-- diferença de valores
		;
	else
		insert into pls_conta_pos_fat_status(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_conta_pos_estab,
			ie_status_inclusao)
		SELECT	nextval('pls_conta_pos_fat_status_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_conta_pos_estab_p,
			'S'	-- Inclusão com sucesso (sem diferença de valores)
		;
	end if;

end if;

dbms_application_info.SET_ACTION('');
exception
when others then
	dbms_application_info.SET_ACTION('');
	CALL wheb_mensagem_pck.exibir_mensagem_abort(294672, 'DS_ERRO=' || sqlerrm);
end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_recalc_pos_estab_fat (nr_seq_conta_pos_estab_p pls_conta_pos_estabelecido.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

