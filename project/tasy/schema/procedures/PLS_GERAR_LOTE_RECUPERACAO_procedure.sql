-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lote_recuperacao ( nr_seq_lote_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_fim_protocolo_w		pls_lote_reemb_recuperacao.dt_fim_protocolo%type;
dt_inicio_protocolo_w		pls_lote_reemb_recuperacao.dt_inicio_protocolo%type;
ie_situacao_prot_w		pls_lote_reemb_recuperacao.ie_situacao_prot%type;
nr_seq_contrato_w		pls_lote_reemb_recuperacao.nr_seq_contrato%type;
nr_seq_contrato_principal_w	pls_lote_reemb_recuperacao.nr_seq_contrato_principal%type;
dt_geracao_lote_w		pls_lote_reemb_recuperacao.dt_geracao_lote%type;
vl_recuperar_w			pls_lote_reemb_rec_item.vl_recuperar%type;
vl_lote_w			pls_lote_reemb_recuperacao.vl_lote%type;

C01 CURSOR(dt_inicio_protocolo_p	pls_lote_reemb_recuperacao.dt_inicio_protocolo%type,
	dt_fim_protocolo_p		pls_lote_reemb_recuperacao.dt_fim_protocolo%type,
	ie_situacao_prot_p		pls_lote_reemb_recuperacao.ie_situacao_prot%type,
	nr_seq_contrato_p		pls_lote_reemb_recuperacao.nr_seq_contrato%type,
	nr_seq_contrato_principal_p	pls_lote_reemb_recuperacao.nr_seq_contrato_principal%type) FOR
	SELECT	a.nr_sequencia
	from	pls_protocolo_conta	a
	where	a.ie_tipo_protocolo	= 'R'
	and	(a.nr_seq_segurado IS NOT NULL AND a.nr_seq_segurado::text <> '')
	and (coalesce(dt_inicio_protocolo_p::text, '') = '' 	or a.dt_protocolo >= dt_inicio_protocolo_p)
	and (coalesce(dt_fim_protocolo_p::text, '') = '' 	or a.dt_protocolo <= dt_fim_protocolo_p)
	and (coalesce(ie_situacao_prot_p::text, '') = '' 	or a.ie_status = ie_situacao_prot_p)
	and (coalesce(nr_seq_contrato_p::text, '') = ''
		or exists (	SELECT 	1
				from 	pls_segurado x
				where	x.nr_sequencia		= a.nr_seq_segurado
				and	x.nr_seq_contrato	= nr_seq_contrato_p))
	and (coalesce(nr_seq_contrato_principal_p::text, '') = ''
		or exists (	select 	1
				from 	pls_segurado x,
					pls_contrato y
				where	x.nr_sequencia		= a.nr_seq_segurado
				and	x.nr_seq_contrato	= y.nr_sequencia
				and	y.nr_contrato_principal	= nr_seq_contrato_principal_p))
	and 	not exists ( 	select 	1
				from	pls_lote_reemb_rec_item x
				where	x.nr_seq_protocolo	= a.nr_sequencia);

BEGIN
if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then
	select 	trunc(a.dt_inicio_protocolo,'dd') dt_inicio_protocolo,
		trunc(a.dt_fim_protocolo,'dd') dt_fim_protocolo,
		a.ie_situacao_prot,
		a.nr_seq_contrato,
		a.nr_seq_contrato_principal,
		a.dt_geracao_lote
	into STRICT	dt_fim_protocolo_w,
		dt_inicio_protocolo_w,
		ie_situacao_prot_w,
		nr_seq_contrato_w,
		nr_seq_contrato_principal_w,
		dt_geracao_lote_w
	from	pls_lote_reemb_recuperacao a
	where	a.nr_sequencia	= nr_seq_lote_p;
	if (coalesce(dt_geracao_lote_w::text, '') = '') then
		vl_lote_w:= 0;
		for	r_C01_w in C01(	dt_fim_protocolo_w,
					dt_inicio_protocolo_w,
					ie_situacao_prot_w,
					nr_seq_contrato_w,
					nr_seq_contrato_principal_w) loop


			select 	coalesce(sum(vl_recuperar),0) vl_recuperar
			into STRICT	vl_recuperar_w
			from (SELECT	c.vl_apropriado vl_recuperar
				from	pls_conta a,
					pls_conta_proc b,
					pls_conta_proc_aprop c
				where	b.nr_seq_conta = a.nr_sequencia
				and	c.nr_seq_conta_proc = b.nr_sequencia
				and	c.ie_recuperar = 'S'
				and	a.nr_seq_protocolo = r_C01_w.nr_sequencia
				
union all

				SELECT	c.vl_apropriado  vl_recuperar
				from	pls_conta a,
					pls_conta_mat b,
					pls_conta_mat_aprop c
				where	b.nr_seq_conta = a.nr_sequencia
				and	c.nr_seq_conta_mat = b.nr_sequencia
				and	c.ie_recuperar = 'S'
				and	a.nr_seq_protocolo = r_C01_w.nr_sequencia) alias3;

			vl_lote_w:= vl_lote_w +	vl_recuperar_w;
			insert into pls_lote_reemb_rec_item( nr_sequencia, nr_seq_lote, nr_seq_protocolo,
				vl_recuperar, dt_atualizacao, dt_atualizacao_nrec,
				nm_usuario, nm_usuario_nrec)
			values ( nextval('pls_lote_reemb_rec_item_seq'), nr_seq_lote_p , r_C01_w.nr_sequencia,
				vl_recuperar_w, clock_timestamp(), clock_timestamp(),
				nm_usuario_p, nm_usuario_p);

		end loop;
		update	pls_lote_reemb_recuperacao
		set	dt_geracao_lote	= clock_timestamp(),
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			vl_lote		= vl_lote_w
		where	nr_sequencia	= nr_seq_lote_p;

		commit;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lote_recuperacao ( nr_seq_lote_p bigint, nm_usuario_p text) FROM PUBLIC;

