-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gera_sinal_vital_dixtal ( cd_pessoa_fisica_p text, nm_usuario_p text, dt_sinal_vital_p text, qt_freq_cardiaca_p bigint,     --HR 
 qt_freq_resp_p bigint,     --RR 
								--PULSE 
 qt_pa_sistolica_p bigint, 		--NBPs 
 qt_pa_diastolica_p bigint, 		--NBPd 
 qt_pam_p bigint, 			--NBPm 
 qt_art_pa_sistolica_p bigint, 	--ARTs 
 qt_art_pa_diastolica_p bigint, 	--ARTd 
 qt_art_pam_p bigint, 		--ARTm 
 qt_co2_p bigint, 			--etCO2 
 qt_saturacao_o2_p bigint, 		--SpO2 
								--PVC 
								--IC1(mean) 
 qt_pressao_intra_cranio_p bigint, 	--IC1(systolic) 
								--IC1(dialostic) 
								--PaO2 
 qt_temp_core_p bigint, 		--Tcore 
 qt_temp_skin_p bigint  		--Tskin 
 ) AS $body$
DECLARE

 
nr_atendimento_w 	bigint;
dt_sinal_vital_w 	timestamp;

ie_utiliza_pressao_inv_w varchar(1) := 'S';


BEGIN 
 
dt_sinal_vital_w := to_date(dt_sinal_vital_p, 'yyyymmddhh24miss');
 
select 	max(nr_atendimento) 
into STRICT 	nr_atendimento_w 
from 	atendimento_paciente 
where 	cd_pessoa_fisica = cd_pessoa_fisica_p;
 
if ((coalesce(qt_pa_sistolica_p::text, '') = '') and (coalesce(qt_pa_diastolica_p::text, '') = '') and (coalesce(qt_pam_p::text, '') = '')) then 
	ie_utiliza_pressao_inv_w := 'N';
end if;
 
 
insert into atendimento_sinal_vital( 
	nr_sequencia, 
	cd_pessoa_fisica, 
	nr_atendimento, 
	dt_liberacao, 
	dt_sinal_vital, 
	dt_atualizacao, 
	nm_usuario, 
	ie_pressao, 
	qt_freq_cardiaca, 
	qt_freq_resp, 
	ie_aparelho_pa, 
	qt_pa_sistolica, 
	qt_pa_diastolica, 
	qt_pam, 
	qt_saturacao_o2, 
	qt_pressao_intra_cranio, 
	ie_sitio, 
	qt_temp 
	) 
values ( 
	nextval('atendimento_sinal_vital_seq'), 
	cd_pessoa_fisica_p, 
	nr_atendimento_w, 
	dt_sinal_vital_w, 
	dt_sinal_vital_w, 
	clock_timestamp(), 
	nm_usuario_p, 
	'D', -- Dom -- Posição pressão arterial 
	qt_freq_cardiaca_p, 
	qt_freq_resp_p, 
	CASE WHEN ie_utiliza_pressao_inv_w='S' THEN 'A'  ELSE 'I' END , --Dom -- Tipo de aparelho pressão arterial 
	CASE WHEN ie_utiliza_pressao_inv_w='S' THEN  qt_pa_sistolica_p  ELSE qt_art_pa_sistolica_p END , 
	CASE WHEN ie_utiliza_pressao_inv_w='S' THEN  qt_pa_diastolica_p  ELSE qt_art_pa_diastolica_p END , 
	CASE WHEN ie_utiliza_pressao_inv_w='S' THEN  qt_pam_p  ELSE qt_art_pam_p END , 
	qt_saturacao_o2_p, 
	qt_pressao_intra_cranio_p, 
	CASE WHEN coalesce(qt_temp_core_p::text, '') = '' THEN  1  ELSE 2 END , -- Dom -- Locais para med de temperatura corporal (1- axilar / 2-esofágico) 
	CASE WHEN coalesce(qt_temp_core_p::text, '') = '' THEN  qt_temp_skin_p  ELSE qt_temp_core_p END  
	);
 
 
 
if ((ie_utiliza_pressao_inv_w = 'S') and ((qt_art_pa_sistolica_p IS NOT NULL AND qt_art_pa_sistolica_p::text <> '') or (qt_art_pa_diastolica_p IS NOT NULL AND qt_art_pa_diastolica_p::text <> '') or (qt_art_pam_p IS NOT NULL AND qt_art_pam_p::text <> ''))) or 
  (qt_temp_core_p IS NOT NULL AND qt_temp_core_p::text <> '' AND qt_temp_skin_p IS NOT NULL AND qt_temp_skin_p::text <> '')then 
 
	insert into atendimento_sinal_vital( 
		nr_sequencia, 
		cd_pessoa_fisica, 
		nr_atendimento, 
		dt_liberacao, 
		dt_sinal_vital, 
		dt_atualizacao, 
		nm_usuario, 
		ie_pressao, 
		ie_aparelho_pa, 
		qt_pa_sistolica, 
		qt_pa_diastolica, 
		qt_pam, 
		ie_sitio, 
		qt_temp 
		) 
	values ( 
		nextval('atendimento_sinal_vital_seq'), 
		cd_pessoa_fisica_p, 
		nr_atendimento_w, 
		dt_sinal_vital_w, 
		dt_sinal_vital_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		'D', -- Dom -- Posição pressão arterial 
		CASE WHEN ie_utiliza_pressao_inv_w='N' THEN  null  ELSE 'I' END , --Dom -- Tipo de aparelho pressão arterial 
		qt_art_pa_sistolica_p, 
		qt_art_pa_diastolica_p, 
		qt_art_pam_p, 
		CASE WHEN coalesce(qt_temp_skin_p::text, '') = '' THEN null  ELSE 1 END , -- Dom -- Locais para med de temperatura corporal 
		qt_temp_skin_p 
		);
 
end if;
 
 
if (qt_co2_p IS NOT NULL AND qt_co2_p::text <> '') then 
 
	insert into atendimento_monit_resp( 
		nr_sequencia, 
		nr_atendimento, 
		dt_monitorizacao, 
		dt_atualizacao, 
		dt_liberacao, 
		nm_usuario, 
		qt_saturacao_o2, 
		qt_co2 
		) 
		values ( 
		nextval('atendimento_monit_resp_seq'), 
		nr_atendimento_w, 
		dt_sinal_vital_w, 
		clock_timestamp(), 
		dt_sinal_vital_w, 
		nm_usuario_p, 
		qt_saturacao_o2_p, 
		qt_co2_p 
		);
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gera_sinal_vital_dixtal ( cd_pessoa_fisica_p text, nm_usuario_p text, dt_sinal_vital_p text, qt_freq_cardiaca_p bigint, qt_freq_resp_p bigint, qt_pa_sistolica_p bigint, qt_pa_diastolica_p bigint, qt_pam_p bigint, qt_art_pa_sistolica_p bigint, qt_art_pa_diastolica_p bigint, qt_art_pam_p bigint, qt_co2_p bigint, qt_saturacao_o2_p bigint, qt_pressao_intra_cranio_p bigint, qt_temp_core_p bigint, qt_temp_skin_p bigint  ) FROM PUBLIC;

