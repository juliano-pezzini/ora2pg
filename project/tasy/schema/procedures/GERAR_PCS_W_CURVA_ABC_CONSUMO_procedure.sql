-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_pcs_w_curva_abc_consumo ( cd_empresa_p bigint, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, vl_curva_a_p bigint default 70, vl_curva_b_p bigint default 20, vl_curva_c_p bigint default 10, nm_usuario_p text DEFAULT NULL, nr_seq_reclassif_curva_p bigint DEFAULT NULL) AS $body$
DECLARE



nr_sequencia_w			bigint;
nr_seq_reclassif_curva_item_w	bigint;
cd_estabelecimento_w	smallint;
vl_total_estoque_w		double precision;
cd_local_estoque_w		smallint;
cd_material_w			integer;
cd_mat_registro_w		integer;
qt_estoque_w			double precision;
vl_estoque_w			double precision;
vl_estoque_acum_w		double precision;
ie_curva_w				varchar(1);
pr_estoque_w			double precision;
pr_acumulado_w			double precision;
vl_curvaa_w				double precision;
vl_curvab_w				double precision;
vl_curvac_w				double precision;
cd_grupo_material_w		smallint;
qt_ano_inicial_w		bigint;
qt_ano_final_w			bigint;
qt_mes_inicial_w		bigint;
qt_mes_final_w			bigint;
qt_meses_w			bigint;
nr_seq_segmento_w		bigint;
ie_divergente_w			varchar(1) := 'N';
ie_curva_abc_orig_w		varchar(1);
nr_seq_classif_grup_w		bigint;
nr_seq_classif_grup_ww		bigint;

C00 CURSOR FOR
	SELECT	cd_material,
		c.nr_seq_segmento,
		b.nr_sequencia
	from	pcs_reclassif_curva a,
		pcs_reclassif_curva_grup b,
		pcs_reclassif_curva_item c
	where	a.nr_sequencia = b.nr_seq_reclassif
	and	b.nr_sequencia = c.nr_seq_classif_grup
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	a.nr_sequencia = nr_seq_reclassif_curva_p
	and	exists (SELECT	1
			from	pcs_segmento x,
				pcs_estrutura_segmento y
			where	x.nr_sequencia = y.nr_seq_segmento
			and	x.nr_sequencia = c.nr_seq_segmento
			and	y.cd_estabelecimento = cd_estabelecimento_p)
	order by cd_material;

c01 CURSOR FOR
	SELECT	cd_estabelecimento,
			cd_material,
			qt_estoque,
			vl_estoque,
			nr_seq_reclassif_curva_item
	from	pcs_w_curva_abc_estoque
	order by vl_estoque desc;


BEGIN

begin
select 	coalesce(vl_curva_a,0),
	coalesce(vl_curva_b,0),
	coalesce(vl_curva_c,0)
into STRICT	vl_curvaa_w,
	vl_curvab_w,
	vl_curvac_w
from	pcs_valor_curva_abc
where	cd_empresa = cd_empresa_p
and	(((cd_estab_regra = cd_estabelecimento_p) or (coalesce(cd_estab_regra::text, '') = '')) or
	((nr_seq_regional IS NOT NULL AND nr_seq_regional::text <> '') and substr(pcs_obter_se_estab_regional(cd_estabelecimento_p,nr_seq_regional),1,1) = 'S'));
exception
when others then
vl_curvaa_w := 0;
vl_curvab_w := 0;
vl_curvac_w := 0;
end;

if (vl_curvaa_w = 0) then
	vl_curvaa_w := vl_curva_a_p;
end if;

if (vl_curvab_w = 0) then
	vl_curvab_w := vl_curva_b_p;
end if;

if (vl_curvac_w = 0) then
	vl_curvac_w := vl_curva_c_p;
end if;

if	((vl_curvaa_w + vl_curvab_w + vl_curvac_w) <> 100)  then
	/*A soma das curvas deve totalizar 100%.*/

	CALL wheb_mensagem_pck.exibir_mensagem_abort(269470);
end if;

qt_ano_inicial_w	:= somente_numero(to_char(dt_inicio_p,'yyyy'));
qt_ano_final_w		:= somente_numero(to_char(dt_fim_p,'yyyy'));
qt_mes_inicial_w	:= somente_numero(to_char(dt_inicio_p,'mm'));
qt_mes_final_w		:= somente_numero(to_char(dt_fim_p,'mm'));
qt_meses_w		:= (qt_ano_final_w - qt_ano_inicial_w) * 12;
qt_meses_w		:= (qt_meses_w - qt_mes_inicial_w) + qt_mes_final_w + 1;

delete FROM pcs_w_curva_abc_estoque;

open C00;
loop
fetch C00 into
	cd_mat_registro_w,
	nr_seq_segmento_w,
	nr_seq_classif_grup_w;
EXIT WHEN NOT FOUND; /* apply on C00 */
	begin

	insert into pcs_w_curva_abc_estoque(
				cd_estabelecimento,
				cd_material,
				qt_estoque,
				vl_estoque,
				nr_seq_reclassif_curva_item)
				SELECT	cd_estabelecimento_p,
						a.cd_material,
						sum(CASE WHEN o.ie_consumo='A' THEN  a.qt_estoque WHEN o.ie_consumo='D' THEN  a.qt_estoque * -1  ELSE 0 END ) qt_estoque,
						sum(CASE WHEN o.ie_consumo='A' THEN  a.vl_estoque + a.vl_consignado WHEN o.ie_consumo='D' THEN (a.vl_estoque + a.vl_consignado) * -1  ELSE 0 END ) vl_estoque,
							nr_seq_classif_grup_w
				from	resumo_movto_estoque a,
						operacao_estoque o,
						material m,
						estrutura_material_v e
				where	a.cd_operacao_estoque   = o.cd_operacao_estoque
				and		a.cd_material = m.cd_material
				and		a.cd_material = e.cd_material
				and		coalesce(m.ie_curva_abc,'N') = 'S'
				and		a.ie_consignado = 'N'
				and		e.cd_material = cd_mat_registro_w
				and		a.cd_estabelecimento = cd_estabelecimento_p
				and		a.dt_mesano_referencia between dt_inicio_p and dt_fim_p
				group by a.cd_material;

	end;
end loop;
close C00;

update	pcs_w_curva_abc_estoque
set		vl_estoque = dividir(vl_estoque, qt_meses_w),
		qt_estoque = dividir(qt_estoque, qt_meses_w);

commit;

	vl_estoque_acum_w	:= 0;
	pr_estoque_w		:= 0;
	pr_acumulado_w		:= 0;

	select	sum(vl_estoque)
	into STRICT	vl_total_estoque_w
	from	pcs_w_curva_abc_estoque;


		open c01;
		loop
		fetch c01 into
			cd_estabelecimento_w,
			cd_material_w,
			qt_estoque_w,
			vl_estoque_w,
			nr_seq_classif_grup_ww;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			select	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_sequencia_w
			from	pcs_w_curva_abc_estoque;

			vl_estoque_acum_w	:= vl_estoque_acum_w + vl_estoque_w;
			pr_estoque_w		:= dividir((vl_estoque_w * 100), vl_total_estoque_w);
			pr_acumulado_w		:= pr_acumulado_w + pr_estoque_w;

			if (pr_acumulado_w <= vl_curvaa_w) then
				ie_curva_w	:= 'A';
			elsif (pr_acumulado_w <= vl_curvaa_w + vl_curvab_w) then
				ie_curva_w	:= 'B';
			else
				ie_curva_w	:= 'C';
			end if;

			update	pcs_w_curva_abc_estoque
			set	nr_sequencia		= nr_sequencia_w,
				vl_acumulado		= vl_estoque_acum_w,
				ie_curva		= ie_curva_w,
				pr_estoque		= pr_estoque_w,
				pr_acumulado		= pr_acumulado_w
			where	cd_material		= cd_material_w
			and	cd_estabelecimento	= cd_estabelecimento_w;

			select	ie_curva_abc_orig
			into STRICT	ie_curva_abc_orig_w
			from	pcs_reclassif_curva_item
			where	nr_seq_classif_grup = nr_seq_classif_grup_ww
			and	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estabelecimento_w;

			ie_divergente_w := 'N';

			if (ie_curva_abc_orig_w <> ie_curva_w) then
				ie_divergente_w := 'S';
			end if;

			update	pcs_reclassif_curva_item
			set		ie_curva_reclassif = ie_curva_w,
					ie_divergente = ie_divergente_w
			where	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estabelecimento_w;

			update	pcs_estrutura_segmento
			set		ie_curva_pcs = ie_curva_w,
					dt_atualizacao = clock_timestamp()
			where	cd_material = cd_material_w;

			end;
		end loop;
		close c01;

update	pcs_reclassif_curva
set 	dt_reclassificacao = clock_timestamp(),
	nm_usuario_reclassif = nm_usuario_p
where	nr_sequencia = nr_seq_reclassif_curva_p;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_pcs_w_curva_abc_consumo ( cd_empresa_p bigint, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, vl_curva_a_p bigint default 70, vl_curva_b_p bigint default 20, vl_curva_c_p bigint default 10, nm_usuario_p text DEFAULT NULL, nr_seq_reclassif_curva_p bigint DEFAULT NULL) FROM PUBLIC;

