-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_diagnostico (dt_parametro_P timestamp, NM_USUARIO_P text) AS $body$
DECLARE

 
dt_atualizacao_w		timestamp     := clock_timestamp();
dt_parametro_w			timestamp;
nr_atendimento_w		bigint;
cd_medico_w			varchar(10);
cd_procedencia_w		integer;
ie_clinica_w			integer;
cd_convenio_w			integer;
qt_Obito_w			integer	:= 0;
cd_estabelecimento_w		smallint  := 0;
ds_retorno_w			varchar(40);
ie_diagnostico_w		varchar(01);
cd_doenca_w			varchar(10);
cd_categoria_doenca_w		varchar(10);
ie_tipo_atendimento_w		smallint;
dt_diagnostico_w		timestamp;
dt_diag_w		timestamp;
cd_setor_atendimento_w		integer;
ie_tipo_diagnostico_w		bigint;
nm_usuario_w				varchar(30);
ie_profissional_w			varchar(255);
nr_sequencia_w				bigint;
qt_idade_w			varchar(10);	
ie_sexo_w			varchar(1);
ie_faixa_etaria_w		varchar(10);

C01 CURSOR FOR 
	SELECT 	a.nr_atendimento, 
		a.cd_estabelecimento, 
		a.cd_procedencia, 
    		a.ie_clinica, 
		a.ie_tipo_atendimento, 
       	a.cd_medico_resp, 
        	CASE WHEN b.ie_obito='S' THEN 1  ELSE 0 END , 
		obter_convenio_atendimento(nr_atendimento), 
		obter_setor_atendimento(a.nr_atendimento) 
	from	motivo_alta b, 
		atendimento_paciente a  
	where 	a.dt_alta_interno between	PKG_DATE_UTILS.start_of(dt_parametro_w,'month', 0) 
	and (PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_parametro_w, 'MONTH', 0),1,0) - 1/86400) 
	and	a.cd_motivo_alta	= b.cd_motivo_alta;

c02 CURSOR FOR 
   SELECT 	a.cd_doenca, 
		b.cd_categoria_cid, 
		coalesce(a.ie_classificacao_doenca,'N'), 
		PKG_DATE_UTILS.start_of(dt_diagnostico,'dd',0), 
		a.nm_usuario 
   from 	cid_doenca b, 
		diagnostico_doenca a  
   where 	a.nr_atendimento = nr_atendimento_w 
    and 	a.cd_doenca	 = b.cd_doenca_cid 
    and 	a.dt_diagnostico = dt_diagnostico_w 
		and		a.ie_situacao = 'A';

 

BEGIN 
 
 
 
commit;
dt_parametro_w		:= PKG_DATE_UTILS.start_of(dt_parametro_p,'month', 0);
 
nr_sequencia_w := Gravar_Log_Indicador(33, wheb_mensagem_pck.get_texto(794195), clock_timestamp(), dt_parametro_w, nm_usuario_p, nr_sequencia_w);
 
delete from eis_diagnostico 
where PKG_DATE_UTILS.start_of(dt_referencia,'month', 0) 	= dt_parametro_w;
 
OPEN C01;
LOOP 
FETCH C01 into 	nr_atendimento_w, 
		cd_estabelecimento_w, 
		cd_procedencia_w, 
        	ie_clinica_w, 
		ie_tipo_atendimento_w, 
		cd_medico_w, 
		qt_obito_w, 
		cd_convenio_w, 
		cd_setor_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	select	coalesce(max(dt_diagnostico),clock_timestamp()) 
	into STRICT	dt_diagnostico_w 
	from 	diagnostico_doenca 
	where	nr_atendimento	= nr_atendimento_w 
	and	PKG_DATE_UTILS.start_of(dt_diagnostico,'month', 0) = PKG_DATE_UTILS.start_of(dt_parametro_w,'month', 0);
 
   	select 	coalesce(max(d.cd_medico),'0') 
   	into STRICT 	cd_medico_w 
   	from 	diagnostico_medico d  
   	where 	d.nr_atendimento = nr_atendimento_w 
    and 	d.dt_diagnostico = dt_diagnostico_w;
 
	select 	max(ie_tipo_diagnostico) 
   	into STRICT 	ie_tipo_diagnostico_w 
   	from 	diagnostico_medico d  
   	where 	d.nr_atendimento = nr_atendimento_w;
	 
	select 	max(campo_numerico(obter_idade_pf(p.cd_pessoa_fisica,clock_timestamp(),'A'))), 
		max(p.ie_sexo) 
	into STRICT	qt_idade_w, 
		ie_sexo_w 
	from	pessoa_fisica p, 
		atendimento_paciente a 
	where	a.cd_pessoa_fisica = p.cd_pessoa_fisica 
	and	a.nr_atendimento = nr_atendimento_w;	
 
	open	c02;
	loop 
	fetch	c02 
		into	cd_doenca_w, 
			cd_categoria_doenca_w, 
			ie_diagnostico_w, 
			dt_diag_w, 
			nm_usuario_w;
	 
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin	 
		 
		select	max(ie_profissional) 
		into STRICT	ie_profissional_w 
		from	usuario 
		where	nm_usuario	= nm_usuario_w;
 
		insert into EIS_Diagnostico(cd_estabelecimento	, 
            dt_referencia  	, 
			ie_diagnostico		,  
			cd_procedencia		, 
            cd_medico		, 
			cd_doenca		, 
			cd_categoria_doenca	, 
			ie_clinica		, 
			cd_convenio		, 
   			qt_ocorrencia		, 
			qt_obito		, 
			dt_atualizacao		, 
			nm_usuario		, 
			ie_tipo_atendimento, 
			cd_setor_atendimento, 
			ie_tipo_diagnostico, 
			nr_atendimento, 
			ie_profissional, 
			ie_sexo, 
			qt_idade) 
		Values (cd_estabelecimento_w  , 
            dt_diag_w  	,  
			ie_diagnostico_w	, 
			cd_procedencia_w	, 
            cd_medico_w		, 
			cd_doenca_w		, 
			cd_categoria_doenca_w	, 
			ie_clinica_w		, 
			cd_convenio_w		, 
   			1			, 
			qt_obito_w		, 
			dt_atualizacao_w	, 
			nm_usuario_p		, 
			ie_tipo_atendimento_w	, 
			cd_setor_atendimento_w, 
			ie_tipo_diagnostico_w, 
			nr_atendimento_w, 
			ie_profissional_w, 
			ie_sexo_w, 
			qt_idade_w);
		end;
	end loop;
	close c02;
	end;
END LOOP;
CLOSE C01;
CALL Atualizar_Log_Indicador(clock_timestamp(), nr_sequencia_w);
COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_diagnostico (dt_parametro_P timestamp, NM_USUARIO_P text) FROM PUBLIC;

