-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_gerar_apac_laudo_colmeia ( nr_seq_interno_p bigint, nr_apac_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
cd_procedimento_w		sus_laudo_paciente.cd_procedimento_solic%type;
ie_origem_proced_w		sus_laudo_paciente.ie_origem_proced%type;
dt_emissao_w			sus_laudo_paciente.dt_emissao%type;
cd_estabelecimento_w		atendimento_paciente.cd_estabelecimento%type;
cd_medico_resp_w		atendimento_paciente.cd_medico_resp%type;
cd_pessoa_fisica_w		atendimento_paciente.cd_pessoa_fisica%type;
nr_sequencia_w			sus_apac_unif.nr_sequencia%type;
cd_motivo_cobranca_w		sus_apac_unif.cd_motivo_cobranca%type;
cd_setor_atendimento_w		setor_atendimento.cd_setor_atendimento%type;
dt_competencia_apac_w		sus_parametros_apac.dt_competencia_apac%type;
dt_inicio_val_apac_w		sus_laudo_paciente.dt_inicio_val_apac%type;
dt_fim_val_apac_w		sus_laudo_paciente.dt_fim_val_apac%type;
cd_medico_autorizador_w		sus_parametros_apac.cd_medico_autorizador%type;
cd_cid_principal_w		sus_laudo_paciente.cd_cid_principal%type;
cd_cid_secundario_w		sus_laudo_paciente.cd_cid_secundario%type;
cd_cid_causa_assoc_w		sus_laudo_paciente.cd_cid_causa_assoc%type;
dt_inicio_trat_solic_w		sus_laudo_paciente.dt_inicio_trat_solic%type;
dt_diagnostico_w		sus_laudo_paciente.dt_diagnostico%type;
dt_pri_tratamento_w		sus_laudo_paciente.dt_pri_tratamento%type;
dt_seg_tratamento_w		sus_laudo_paciente.dt_seg_tratamento%type;
dt_ter_tratamento_w		sus_laudo_paciente.dt_ter_tratamento%type;
ie_finalidade_w			sus_laudo_paciente.ie_finalidade%type;
ie_lifonodos_reg_inval_w 	sus_laudo_paciente.ie_lifonodos_reg_inval%type;
ie_tratamento_ant_w		sus_laudo_paciente.ie_tratamento_ant%type;
cd_grau_histopat_w		sus_laudo_paciente.cd_grau_histopat%type;
dt_diag_cito_hist_w		sus_laudo_paciente.dt_diag_cito_hist%type;
ie_carater_inter_sus_w		sus_laudo_paciente.ie_carater_inter_sus%type;
ds_sigla_esquema_w		sus_laudo_paciente.ds_sigla_esquema%type;
qt_meses_prev_w			sus_laudo_paciente.qt_meses_prev%type;
qt_meses_autorizado_w		sus_laudo_paciente.qt_meses_autorizado%type;
cd_estadio_w			sus_laudo_paciente.ds_estadio_uicc%type;
cd_cid_pri_radiacao_w		sus_laudo_area_irradiada.cd_doenca_cid%type;
cd_cid_seg_radiacao_w		sus_laudo_area_irradiada.cd_doenca_cid%type;
cd_cid_ter_radiacao_w		sus_laudo_area_irradiada.cd_doenca_cid%type;
nr_campos_pri_radi_w		sus_laudo_area_irradiada.qt_insercoes_area%type;
nr_campos_seg_radi_w		sus_laudo_area_irradiada.qt_insercoes_area%type;
nr_campos_ter_radi_w		sus_laudo_area_irradiada.qt_insercoes_area%type;
cd_doenca_cid_w			sus_laudo_area_irradiada.cd_doenca_cid%type;
qt_cursor_w			bigint := 1;
nr_seq_interno_w		sus_laudo_paciente.nr_seq_interno%type;
qt_insercoes_area_w		sus_laudo_area_irradiada.qt_insercoes_area%type;
cd_cid_topografia_w		sus_laudo_paciente.cd_cid_topografia%type;
cd_cid_prim_trat_w		sus_laudo_paciente.cd_cid_prim_trat%type;
cd_cid_seg_trat_w		sus_laudo_paciente.cd_cid_seg_trat%type;
cd_cid_terc_trat_w		sus_laudo_paciente.cd_cid_terc_trat%type;
dt_inicio_pri_radi_w		sus_laudo_area_irradiada.dt_inicio%type;
dt_inicio_seg_radi_w		sus_laudo_area_irradiada.dt_inicio%type;
dt_inicio_ter_radi_w		sus_laudo_area_irradiada.dt_inicio%type;
dt_fim_pri_radi_w		sus_laudo_area_irradiada.dt_termino%type;
dt_fim_seg_radi_w		sus_laudo_area_irradiada.dt_termino%type;
dt_fim_ter_radi_w		sus_laudo_area_irradiada.dt_termino%type;
dt_inicio_rad_w			sus_laudo_area_irradiada.dt_inicio%type;
dt_fim_rad_w			sus_laudo_area_irradiada.dt_inicio%type;
dt_ocorrencia_w			sus_laudo_paciente.dt_inicio_val_apac%type;
dt_pri_dialise_w		sus_laudo_paciente.dt_pri_dialise%type;
qt_altura_cm_w			sus_laudo_paciente.qt_altura_cm%type;
qt_peso_w			sus_laudo_paciente.qt_peso%type;
qt_diurese_w			sus_laudo_paciente.qt_diurese%type;
qt_glicose_w			sus_laudo_paciente.qt_glicose%type;
pr_albumina_w			sus_laudo_paciente.pr_albumina%type;
pr_hb_w				sus_laudo_paciente.pr_hb%type;
nr_tru_w			sus_laudo_paciente.nr_tru%type;
ie_acesso_vascular_w		sus_laudo_paciente.ie_acesso_vascular%type;
ie_hiv_w			sus_laudo_paciente.ie_hiv%type;
ie_hcv_w			sus_laudo_paciente.ie_hcv%type;
ie_hb_sangue_w			sus_laudo_paciente.ie_hb_sangue%type;
ie_ultra_abdomen_w		sus_laudo_paciente.ie_ultra_abdomen%type;
ie_inscrito_cncdo_w		sus_laudo_paciente.ie_inscrito_cncdo%type;
nr_seq_pri_trat_w		sus_laudo_paciente.nr_seq_pri_trat%type;
nr_seq_seg_trat_w		sus_laudo_paciente.nr_seq_seg_trat%type;
nr_seq_ter_trat_w		sus_laudo_paciente.nr_seq_ter_trat%type;
nr_interno_conta_w		conta_paciente.nr_interno_conta%type;
cd_medico_requisitante_w	sus_laudo_paciente.cd_medico_requisitante%type;
i				smallint;
nr_atendimento_w		sus_laudo_paciente.nr_atendimento%type;
ie_tipo_laudo_apac_w		sus_laudo_paciente.ie_tipo_laudo_apac%type;
ie_tipo_apac_w			sus_apac_unif.ie_tipo_apac%type := 0;
qt_reg_apac_w			bigint := 0;

 
c01 CURSOR FOR 
	SELECT	cd_doenca_cid, 
		qt_insercoes_area, 
		dt_inicio, 
		dt_termino 
	from	sus_laudo_area_irradiada 
	where	nr_seq_laudo	= nr_seq_interno_w  LIMIT 3;


BEGIN 
 
begin	--exception 
select	cd_procedimento_solic, 
	coalesce(ie_origem_proced,7), 
	dt_emissao, 
	coalesce(dt_inicio_val_apac,clock_timestamp()), 
	coalesce(dt_fim_val_apac,clock_timestamp()), 
	dt_inicio_trat_solic, 
	dt_diagnostico, 
	dt_pri_tratamento, 
	dt_seg_tratamento, 
	dt_ter_tratamento, 
	CASE WHEN ie_finalidade=2 THEN 4 WHEN ie_finalidade=3 THEN 5 WHEN ie_finalidade=5 THEN 2 WHEN ie_finalidade=6 THEN 6 WHEN ie_finalidade=7 THEN 3 WHEN ie_finalidade=9 THEN 1  ELSE 1 END , 
	ie_lifonodos_reg_inval, 
	ie_tratamento_ant, 
	cd_grau_histopat, 
	dt_diag_cito_hist, 
	ds_sigla_esquema, 
	qt_meses_prev, 
	qt_meses_autorizado, 
	cd_cid_principal, 
	nr_seq_interno, 
	replace(cd_cid_topografia,'.',''), 
	cd_cid_prim_trat, 
	cd_cid_seg_trat, 
	cd_cid_terc_trat, 
	cd_cid_secundario, 
	cd_cid_causa_assoc, 
	dt_pri_dialise, 
	qt_altura_cm, 
	qt_peso, 
	qt_diurese, 
	qt_glicose, 
	pr_albumina, 
	pr_hb, 
	nr_tru, 
	ie_acesso_vascular, 
	ie_hiv, 
	ie_hcv, 
	ie_hb_sangue, 
	ie_ultra_abdomen, 
	ie_inscrito_cncdo, 
	nr_seq_pri_trat, 
	nr_seq_seg_trat, 
	nr_seq_ter_trat, 
	cd_medico_requisitante, 
	nr_atendimento, 
	ie_tipo_laudo_apac 
into STRICT	cd_procedimento_w, 
	ie_origem_proced_w, 
	dt_emissao_w, 
	dt_inicio_val_apac_w, 
	dt_fim_val_apac_w, 
	dt_inicio_trat_solic_w, 
	dt_diagnostico_w, 
	dt_pri_tratamento_w, 
	dt_seg_tratamento_w, 
	dt_ter_tratamento_w, 
	ie_finalidade_w, 
	ie_lifonodos_reg_inval_w, 
	ie_tratamento_ant_w, 
	cd_grau_histopat_w, 
	dt_diag_cito_hist_w, 
	ds_sigla_esquema_w, 
	qt_meses_prev_w, 
	qt_meses_autorizado_w, 
	cd_cid_principal_w, 
	nr_seq_interno_w, 
	cd_cid_topografia_w, 
	cd_cid_prim_trat_w, 
	cd_cid_seg_trat_w, 
	cd_cid_terc_trat_w, 
	cd_cid_secundario_w, 
	cd_cid_causa_assoc_w, 
	dt_pri_dialise_w, 
	qt_altura_cm_w, 
	qt_peso_w, 
	qt_diurese_w, 
	qt_glicose_w, 
	pr_albumina_w, 
	pr_hb_w, 
	nr_tru_w, 
	ie_acesso_vascular_w, 
	ie_hiv_w, 
	ie_hcv_w, 
	ie_hb_sangue_w, 
	ie_ultra_abdomen_w, 
	ie_inscrito_cncdo_w, 
	nr_seq_pri_trat_w, 
	nr_seq_seg_trat_w, 
	nr_seq_ter_trat_w, 
	cd_medico_requisitante_w, 
	nr_atendimento_w, 
	ie_tipo_laudo_apac_w 
from	sus_laudo_paciente 
where	nr_seq_interno = nr_seq_interno_p;
exception 
	when others then 
 
	insert into sus_erro_imp_colmeia( 
		ds_erro, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		nr_atendimento, 
		nr_seq_interno, 
		nr_sequencia) 
	values (	Wheb_mensagem_pck.get_Texto(301932), /*'O sistema encontrou problemas para ler as informações do laudo!',*/
 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_atendimento_w, 
		nr_seq_interno_p, 
		nextval('sus_erro_imp_colmeia_seq'));
 
	goto Final;
	end;
 
begin 
select	max((ds_estadio_uicc)::numeric ) 
into STRICT	cd_estadio_w 
from	sus_laudo_paciente 
where	nr_seq_interno = nr_seq_interno_p;
exception 
when others then 
	select	max(CASE WHEN upper(ds_estadio_uicc)='I' THEN 1 WHEN upper(ds_estadio_uicc)='II' THEN 2 WHEN upper(ds_estadio_uicc)='III' THEN 3 WHEN upper(ds_estadio_uicc)='IV' THEN 4 END ) 
	into STRICT	cd_estadio_w 
	from	sus_laudo_paciente 
	where	nr_seq_interno = nr_seq_interno_p;
end;
 
/* Obter dados do atendimento */
 
begin 
select	cd_estabelecimento, 
	cd_medico_resp, 
	cd_pessoa_fisica, 
	ie_carater_inter_sus 
into STRICT	cd_estabelecimento_w, 
	cd_medico_resp_w, 
	cd_pessoa_fisica_w, 
	ie_carater_inter_sus_w 
from	atendimento_paciente 
where	nr_atendimento	= nr_atendimento_w;
exception 
when others then 
	ie_carater_inter_sus_w := null;
end;
 
if (coalesce(ie_carater_inter_sus_w::text, '') = '') then 
	begin 
	insert into sus_erro_imp_colmeia( 
		ds_erro, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		nr_atendimento, 
		nr_seq_interno, 
		nr_sequencia) 
	values (	Wheb_mensagem_pck.get_Texto(301933),/* 'Carater de internação não preenchido na Entrada Únida de Pacientes.',*/
 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_atendimento_w, 
		nr_seq_interno_p, 
		nextval('sus_erro_imp_colmeia_seq'));
 
	goto Final;
 
	end;
end if;
 
select	dt_competencia_apac, 
	cd_medico_autorizador 
into STRICT	dt_competencia_apac_w, 
	cd_medico_autorizador_w 
from	sus_parametros_apac 
where	cd_estabelecimento	= cd_estabelecimento_w;
 
cd_setor_atendimento_w := coalesce(obter_setor_atendimento(nr_atendimento_w),0);
 
if (cd_setor_atendimento_w = 0) then 
	begin 
	 
	insert into sus_erro_imp_colmeia( 
		ds_erro, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		nr_atendimento, 
		nr_seq_interno, 
		nr_sequencia) 
	values (	Wheb_mensagem_pck.get_Texto(301934),/* 'Atendimento sem registro de unidade/setor.',*/
 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_atendimento_w, 
		nr_seq_interno_p, 
		nextval('sus_erro_imp_colmeia_seq'));
 
	goto Final;
	 
	end;
end if;
 
open c01;
loop 
fetch c01 into 
	cd_doenca_cid_w, 
	qt_insercoes_area_w, 
	dt_inicio_rad_w, 
	dt_fim_rad_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	 
	if (qt_cursor_w	= 1) then 
		cd_cid_pri_radiacao_w	:= cd_doenca_cid_w;
		nr_campos_pri_radi_w	:= qt_insercoes_area_w;
		dt_inicio_pri_radi_w	:= dt_inicio_rad_w;
		dt_fim_pri_radi_w	:= dt_fim_rad_w;
	elsif (qt_cursor_w	= 2) then 
		cd_cid_seg_radiacao_w	:= cd_doenca_cid_w;
		nr_campos_seg_radi_w	:= qt_insercoes_area_w;
		dt_inicio_seg_radi_w	:= dt_inicio_rad_w;
		dt_fim_seg_radi_w	:= dt_fim_rad_w;
	elsif (qt_cursor_w	= 3) then 
		cd_cid_ter_radiacao_w	:= cd_doenca_cid_w;
		nr_campos_ter_radi_w	:= qt_insercoes_area_w;
		dt_inicio_ter_radi_w	:= dt_inicio_rad_w;
		dt_fim_ter_radi_w	:= dt_fim_rad_w;
	end if;
	 
	qt_cursor_w	:= qt_cursor_w + 1;
	 
	end;
end loop;
close c01;
 
cd_motivo_cobranca_w := coalesce(sus_obter_mot_enc_laudo(ie_tipo_laudo_apac_w),12);
 
select	count(1) 
into STRICT	qt_reg_apac_w 
from	sus_apac_unif 
where	nr_apac = nr_apac_p 
and	nr_atendimento = nr_atendimento_w  LIMIT 1;
 
if (qt_reg_apac_w = 0) then 
	ie_tipo_apac_w := 1;
else 
	ie_tipo_apac_w := 2;
end if;
 
if (sus_obter_se_detalhe_proc(cd_procedimento_w,ie_origem_proced_w,'014',dt_emissao_w) = 0) then 
	ie_tipo_apac_w		:= 3;
	dt_ocorrencia_w 	:= dt_inicio_val_apac_w;
	dt_fim_val_apac_w    := Trunc(last_day(dt_competencia_apac_w));
end if;
 
select	nextval('sus_apac_unif_seq') 
into STRICT	nr_sequencia_w
;
 
insert into sus_apac_unif( 
	nr_sequencia, 
	nr_apac, 
	cd_estabelecimento, 
	nr_atendimento, 
	cd_procedimento, 
	ie_origem_proced, 
	dt_competencia, 
	dt_inicio_validade, 
	dt_fim_validade, 
	dt_emissao, 
	dt_atualizacao, 
	nm_usuario, 
	dt_atualizacao_nrec, 
	nm_usuario_nrec, 
	ie_tipo_apac, 
	cd_motivo_cobranca, 
	cd_medico_responsavel, 
	dt_solicitacao, 
	cd_medico_autorizador, 
	dt_autorizacao, 
	nr_apac_anterior, 
	dt_ocorrencia, 
	cd_cid_principal, 
	cd_cid_secundario, 
	cd_cid_causa_assoc, 
	nr_interno_conta, 
	dt_inicio_tratamento, 
	dt_diagnostico, 
	dt_pri_tratamento, 
	dt_seg_tratamento, 
	dt_ter_tratamento, 
	ie_finalidade, 
	ie_linfonodos_reg_inv, 
	ie_tratamento_ant, 
	cd_grau_histopat, 
	dt_diag_cito_hist, 
	cd_carater_internacao, 
	ds_sigla_esquema, 
	qt_meses_planejados, 
	qt_meses_autorizados, 
	cd_estadio, 
	cd_cid_pri_radiacao, 
	cd_cid_seg_radiacao, 
	cd_cid_ter_radiacao, 
	nr_campos_pri_radi, 
	nr_campos_seg_radi, 
	nr_campos_ter_radi, 
	cd_cid_topografia, 
	cd_cid_primeiro_trat, 
	cd_cid_segundo_trat, 
	cd_cid_terceiro_trat, 
	dt_inicio_pri_radi, 
	dt_inicio_seg_radi, 
	dt_inicio_ter_radi, 
	dt_fim_pri_radi, 
	dt_fim_seg_radi, 
	dt_fim_ter_radi, 
	dt_pri_dialise, 
	qt_altura_cm, 
	qt_peso, 
	qt_diurese, 
	qt_glicose, 
	pr_albumina, 
	pr_hb, 
	nr_tru, 
	ie_acesso_vascular, 
	ie_hiv, 
	ie_hcv, 
	ie_hb_sangue, 
	ie_ultra_abdomen, 
	ie_inscrito_cncdo, 
	nr_seq_pri_trat, 
	nr_seq_seg_trat, 
	nr_seq_ter_trat) 
values (	nr_sequencia_w, 
	nr_apac_p, 
	cd_estabelecimento_w, 
	nr_atendimento_w, 
	cd_procedimento_w, 
	ie_origem_proced_w, 
	dt_competencia_apac_w, 
	dt_inicio_val_apac_w, 
	dt_fim_val_apac_w, 
	dt_emissao_w, 
	clock_timestamp(), 
	nm_usuario_p, 
	clock_timestamp(), 
	nm_usuario_p, 
	ie_tipo_apac_w, 
	cd_motivo_cobranca_w, 
	cd_medico_resp_w, 
	dt_emissao_w, 
	cd_medico_autorizador_w, 
	clock_timestamp(), 
	null, 
	dt_ocorrencia_w, 
	cd_cid_principal_w, 
	cd_cid_secundario_w, 
	cd_cid_causa_assoc_w, 
	null, 
	dt_inicio_trat_solic_w, 
	dt_diagnostico_w, 
	dt_pri_tratamento_w, 
	dt_seg_tratamento_w, 
	dt_ter_tratamento_w, 
	ie_finalidade_w, 
	ie_lifonodos_reg_inval_w, 
	ie_tratamento_ant_w, 
	cd_grau_histopat_w, 
	dt_diag_cito_hist_w, 
	ie_carater_inter_sus_w, 
	ds_sigla_esquema_w, 
	qt_meses_prev_w, 
	qt_meses_autorizado_w, 
	cd_estadio_w, 
	cd_cid_pri_radiacao_w, 
	cd_cid_seg_radiacao_w, 
	cd_cid_ter_radiacao_w, 
	nr_campos_pri_radi_w, 
	nr_campos_seg_radi_w, 
	nr_campos_ter_radi_w, 
	cd_cid_topografia_w, 
	cd_cid_prim_trat_w, 
	cd_cid_seg_trat_w, 
	cd_cid_terc_trat_w, 
	dt_inicio_pri_radi_w, 
	dt_inicio_seg_radi_w, 
	dt_inicio_ter_radi_w, 
	dt_fim_pri_radi_w, 
	dt_fim_seg_radi_w, 
	dt_fim_ter_radi_w, 
	dt_pri_dialise_w, 
	qt_altura_cm_w, 
	qt_peso_w, 
	qt_diurese_w, 
	qt_glicose_w, 
	pr_albumina_w, 
	pr_hb_w, 
	nr_tru_w, 
	ie_acesso_vascular_w, 
	ie_hiv_w, 
	ie_hcv_w, 
	ie_hb_sangue_w, 
	ie_ultra_abdomen_w, 
	ie_inscrito_cncdo_w, 
	nr_seq_pri_trat_w, 
	nr_seq_seg_trat_w, 
	nr_seq_ter_trat_w);
begin 
select	coalesce(max(x.nr_interno_conta),0) 
into STRICT	nr_interno_conta_w 
from ( 
	SELECT 	coalesce(max(a.nr_interno_conta),0) nr_interno_conta 
	from	conta_paciente a 
	where	a.nr_atendimento 	 = 	nr_atendimento_w 
	and	obter_status_conta(a.nr_interno_conta,'C') = 1 
	and	obter_tipo_convenio(a.cd_convenio_parametro) = 3 
	and	not exists (	SELECT	1 
				from	procedimento_paciente p 
				where	p.nr_interno_conta 	= a.nr_interno_conta 
				and	sus_obter_tiporeg_proc(cd_procedimento,ie_origem_proced,'C',0) in (6,7)) 
	and	not exists (	select	1 
				from	sus_apac_unif w 
				where	w.nr_interno_conta = a.nr_interno_conta) 
	
union
 
	select 	coalesce(max(a.nr_interno_conta),0) nr_interno_conta 
	from	conta_paciente a 
	where	a.nr_atendimento 	 = 	nr_atendimento_w 
	and	obter_status_conta(a.nr_interno_conta,'C') = 1 
	and	obter_tipo_convenio(a.cd_convenio_parametro) = 3 
	and	not exists (	select	1 
				from	procedimento_paciente p 
				where	p.nr_interno_conta 	= a.nr_interno_conta) 
	and	not exists (	select	1 
				from	sus_apac_unif w 
			where	w.nr_interno_conta = a.nr_interno_conta)) x;
exception 
	when others then 
	nr_interno_conta_w := 0;
end;
 
if (coalesce(nr_interno_conta_w,0) <> 0) then 
	begin 
	CALL sus_gerar_proced_apac_unif( 
			nr_sequencia_w, 
			nr_atendimento_w, 
			nr_interno_conta_w, 
			nr_seq_interno_w, 
			nm_usuario_p, 
			cd_estabelecimento_w, 
			cd_setor_atendimento_w, 
			ie_tipo_apac_w);
	end;
end if;
 
if (coalesce(nr_interno_conta_w,0) = 0) then 
	nr_interno_conta_w := sus_gerar_conta_apac_unif(	nr_atendimento_w, cd_estabelecimento_w, nm_usuario_p, nr_interno_conta_w, dt_inicio_val_apac_w, dt_fim_val_apac_w);
 
		CALL sus_gerar_proced_apac_unif( 
				nr_sequencia_w, 
				nr_atendimento_w, 
				nr_interno_conta_w, 
				nr_seq_interno_w, 
				nm_usuario_p, 
				cd_estabelecimento_w, 
				cd_setor_atendimento_w, 
				ie_tipo_apac_w);
end if;
 
CALL sus_definir_apac_conta_unif(	nr_sequencia_w, 
			nr_interno_conta_w, 
			nm_usuario_p);
 
<<Final>> 
 
if (1 = 2) then--Comando adicionado devido ao <<Final>> 
	nr_interno_conta_w := 0;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_gerar_apac_laudo_colmeia ( nr_seq_interno_p bigint, nr_apac_p bigint, nm_usuario_p text) FROM PUBLIC;

