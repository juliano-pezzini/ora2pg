-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_nota_debito_a560 ( nr_seq_lote_discussao_p bigint, nr_seq_camara_contest_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_titulo_receber_w		bigint;
nr_titulo_receber_ndr_w		bigint;
cd_unimed_destino_w		varchar(10);
cd_unimed_origem_w		varchar(10);
cd_unimed_destino_nota_w	varchar(10);
cd_unimed_origem_nota_w		varchar(10);
nr_fatura_w			ptu_camara_contestacao.nr_fatura%type;
nr_seq_lote_contest_w		bigint;
dt_vencimento_w			timestamp;
nr_seq_ptu_fatura_w		bigint;
nr_seq_pls_fatura_w		bigint;
qt_nota_a560_w			bigint := 0;
nr_nota_credito_debito_a500_w	varchar(30);
vl_total_ndc_a500_w		double precision;
ie_conclusao_ndc_w		smallint;
nr_bloqueto_w			varchar(44);
nr_seq_conta_banco_w		bigint;
nr_seq_carteira_cobr_w		bigint;
nr_nosso_numero_w		varchar(20);
vl_titulo_w			double precision;
dt_emissao_w			timestamp;
cd_banco_w			varchar(5);
cd_agencia_bancaria_w		varchar(8);
cd_carteira_w			varchar(10);
nr_seq_nota_debito_w		bigint;
nr_seq_nota_deb_bol_w		bigint;
tp_arquivo_w			varchar(1) := '1';
ie_tipo_arquivo_w		integer;
ie_classif_cobranca_a500_w	varchar(1);
cd_cgc_w			varchar(14);
nr_seq_congenere_w		bigint;
nr_seq_pagador_w		bigint;
vl_total_fatura_w		double precision;
nr_seq_nota_conclusao_w		bigint;
nr_nota_debito_w		bigint;
tp_arq_parcial_w		ptu_nota_debito.tp_arq_parcial%type;
qt_tipo_logradouro_w		bigint := 0;

-- PTU_NOTA_DEB_CREDOR_DEVED
tp_cred_dev_w			varchar(1) := '1';
nm_cred_dev_w			varchar(60);
ds_endereco_w			varchar(40);
ds_end_cpl_w			varchar(20);
nr_end_w			varchar(6);
ds_bairro_w			varchar(30);
nr_cep_w			varchar(8);
ds_cidade_w			varchar(30);
cd_uf_w				pessoa_juridica.sg_estado%type;
cd_cnpj_cpf_w			varchar(14);
nr_ddd_w			smallint;
nr_fone_w			integer;
nr_fax_w			integer;
cd_municipio_ibge_w		varchar(8);
cd_tipo_logradouro_w		varchar(3);
cd_ptu_w			varchar(3);

-- PTU_NOTA_DEB_DADOS
dt_emissao_ndc_w		timestamp;
dt_ven_ndc_w			timestamp;
nr_linha_w			smallint := 1;
ds_linha_w			varchar(74);
vl_ndc_w			double precision;
tp_doc_568_w			smallint;

-- PTU_NOTA_DEB_FAT_NDR
nr_fatura_orig_w		ptu_nota_deb_fat_ndr.nr_fatura%type;
nr_fatura_orig_ww		ptu_fatura.nr_fatura%type;
dt_emissao_fatura_w		timestamp;
vl_tot_fat_w			double precision;
nr_ndr_w			ptu_nota_deb_fat_ndr.nr_ndr%type;
dt_emissao_ndr_w		timestamp;
vl_tot_ndr_w			double precision;

-- Titulo receber
nr_titulo_rec_w			titulo_receber.nr_titulo%type;
nr_titulo_ndc_rec_w		titulo_receber.nr_titulo%type;

C01 CURSOR FOR
	SELECT	nr_titulo_receber,
		null
	from	pls_lote_discussao
	where	nr_sequencia = nr_seq_lote_discussao_p
	and	(nr_titulo_receber IS NOT NULL AND nr_titulo_receber::text <> '')
	
union

	SELECT	null,
		nr_titulo_receber_ndr
	from	pls_lote_discussao
	where	nr_sequencia = nr_seq_lote_discussao_p
	and	(nr_titulo_receber_ndr IS NOT NULL AND nr_titulo_receber_ndr::text <> '');
	

BEGIN
select	sum(qt_ndc)
into STRICT	qt_nota_a560_w
from (	SELECT	count(1) qt_ndc
		from	pls_lote_discussao x,
			titulo_receber a
		where	a.nr_titulo	= x.nr_titulo_receber
		and	x.nr_sequencia	= nr_seq_lote_discussao_p
		and	(a.nr_seq_nota_deb_conclusao IS NOT NULL AND a.nr_seq_nota_deb_conclusao::text <> '')
		
union

		SELECT	count(1) qt_ndc
		from	pls_lote_discussao x,
			titulo_receber a
		where	a.nr_titulo	= x.nr_titulo_receber_ndr
		and	x.nr_sequencia	= nr_seq_lote_discussao_p
		and	(a.nr_seq_nota_deb_conclusao IS NOT NULL AND a.nr_seq_nota_deb_conclusao::text <> '')) alias5;
		
select	max(nr_titulo_receber),
	max(nr_titulo_receber_ndr)
into STRICT	nr_titulo_receber_w,
	nr_titulo_receber_ndr_w
from	pls_lote_discussao
where	nr_sequencia = nr_seq_lote_discussao_p;

if (qt_nota_a560_w = 0) and
	((nr_titulo_receber_w IS NOT NULL AND nr_titulo_receber_w::text <> '') or (nr_titulo_receber_ndr_w IS NOT NULL AND nr_titulo_receber_ndr_w::text <> '')) and (nr_seq_camara_contest_p IS NOT NULL AND nr_seq_camara_contest_p::text <> '') then
	nr_titulo_receber_w := null;
	nr_titulo_receber_ndr_w := null;
	
	begin
	select	cd_unimed_destino,
		cd_unimed_origem,
		nr_fatura,
		nr_seq_lote_contest,
		nr_nota_credito_debito_a500,
		coalesce(vl_total_ndc_a500,0),
		coalesce(ie_classif_cobranca_a500,'1'),
		ie_tipo_arquivo,
		coalesce(vl_total_fatura,0),
		tp_arq_parcial
	into STRICT	cd_unimed_destino_w,
		cd_unimed_origem_w,
		nr_fatura_w,
		nr_seq_lote_contest_w,
		nr_nota_credito_debito_a500_w,
		vl_total_ndc_a500_w,
		ie_classif_cobranca_a500_w,
		ie_tipo_arquivo_w,
		vl_total_fatura_w,
		tp_arq_parcial_w
	from	ptu_camara_contestacao
	where	nr_sequencia	= nr_seq_camara_contest_p;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(229522);
	end;
	
	
	select	max(nr_seq_ptu_fatura),
		max(nr_seq_pls_fatura)
	into STRICT	nr_seq_ptu_fatura_w,
		nr_seq_pls_fatura_w
	from	pls_lote_contestacao
	where	nr_sequencia = nr_seq_lote_contest_w;
	
	if (nr_seq_ptu_fatura_w IS NOT NULL AND nr_seq_ptu_fatura_w::text <> '') then
		cd_unimed_destino_nota_w := cd_unimed_destino_w;
		cd_unimed_origem_nota_w := cd_unimed_origem_w;
	
	elsif (nr_seq_pls_fatura_w IS NOT NULL AND nr_seq_pls_fatura_w::text <> '') then
		cd_unimed_destino_nota_w := cd_unimed_origem_w;
		cd_unimed_origem_nota_w := cd_unimed_destino_w;
	end if;
	
	if (ie_tipo_arquivo_w in (3,4,9)) then
		tp_arquivo_w := '2';	-- Parcial
		
		if (coalesce(tp_arq_parcial_w,'0') = '0') then
			tp_arq_parcial_w := '1';
		end if;
				
	elsif (ie_tipo_arquivo_w in (7,8)) then
		tp_arquivo_w := '3';	-- Complementar
		tp_arq_parcial_w := null;
	else
		tp_arquivo_w := '1';	-- Integral
		tp_arq_parcial_w := null;
	end if;
	
	-- Se for Integral ou Complementar a contestacao esta concluida
	if (tp_arquivo_w in ('3')) and (nr_seq_lote_contest_w IS NOT NULL AND nr_seq_lote_contest_w::text <> '') then
		
		CALL pls_altera_status_contestacao(nr_seq_lote_contest_w, 'C', nm_usuario_p);
		
	end if;

	-- NOTA DE DEBITO
	select	nextval('ptu_nota_debito_seq')
	into STRICT	nr_seq_nota_debito_w
	;
	
	insert into ptu_nota_debito(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_unimed_origem,
		cd_unimed_destino,
		nr_fatura,
		vl_total_fatura,
		nr_seq_fatura,
		nr_seq_camara_contest,
		nr_nota_credito_debito_a500,
		vl_total_ndc_a500,
		ie_origem,
		tp_arquivo,
		tp_arq_parcial)
	values (nr_seq_nota_debito_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_unimed_origem_nota_w,
		cd_unimed_destino_nota_w,
		nr_fatura_w,
		vl_total_fatura_w,
		nr_seq_ptu_fatura_w,
		nr_seq_camara_contest_p,
		nr_nota_credito_debito_a500_w,
		vl_total_ndc_a500_w,
		'G',
		tp_arquivo_w,
		tp_arq_parcial_w);

	open C01;
	loop
	fetch C01 into	
		nr_titulo_receber_w,
		nr_titulo_receber_ndr_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		nr_nota_debito_w := coalesce(nr_titulo_receber_w,nr_titulo_receber_ndr_w);
		
		select	max(dt_pagamento_previsto),
			max(cd_cgc),
			max(nr_bloqueto),
			max(nr_seq_conta_banco),
			max(nr_seq_carteira_cobr),
			max(nr_nosso_numero),
			coalesce(max(vl_titulo),0),
			max(dt_emissao)
		into STRICT	dt_vencimento_w,
			cd_cgc_w,
			nr_bloqueto_w,
			nr_seq_conta_banco_w,
			nr_seq_carteira_cobr_w,
			nr_nosso_numero_w,
			vl_titulo_w,
			dt_emissao_w
		from	titulo_receber
		where	nr_titulo = nr_nota_debito_w;
		
		select	max(nr_sequencia)
		into STRICT	nr_seq_congenere_w
		from	pls_congenere
		where	cd_cgc = cd_cgc_w;
		
		if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_pagador_w
			from	pls_contrato_pagador
			where	nr_seq_congenere	= nr_seq_congenere_w;
		end if;
		
		if (nr_seq_conta_banco_w IS NOT NULL AND nr_seq_conta_banco_w::text <> '') then
			select	max(cd_banco),
				max(cd_agencia_bancaria),
				max(cd_carteira)
			into STRICT	cd_banco_w,
				cd_agencia_bancaria_w,
				cd_carteira_w
			from	banco_estabelecimento
			where	nr_sequencia = nr_seq_conta_banco_w;
			
			if (nr_seq_carteira_cobr_w IS NOT NULL AND nr_seq_carteira_cobr_w::text <> '') then
				select	substr(cd_carteira,1,10)
				into STRICT	cd_carteira_w
				from	banco_carteira
				where	nr_sequencia = nr_seq_carteira_cobr_w;
			end if;
		end if;
		
		if (nr_titulo_receber_ndr_w IS NOT NULL AND nr_titulo_receber_ndr_w::text <> '') then
			ie_conclusao_ndc_w := 1;
		else
			select	CASE WHEN ie_classif_cobranca_a500_w='1' THEN 1  ELSE 2 END
			into STRICT	ie_conclusao_ndc_w
			;
		end if;
		
		tp_doc_568_w := ie_conclusao_ndc_w;
		
		-- DADOS DA NDC
		select	nextval('ptu_nota_deb_conclusao_seq')
		into STRICT	nr_seq_nota_conclusao_w
		;
		
		insert into ptu_nota_deb_conclusao(	
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_nota_debito,
			dt_ven_nota,
			id_ndc_conclusao,
			nr_seq,
			tp_reg,
			nr_seq_nota_debito)
		values (	nr_seq_nota_conclusao_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_nota_debito_w,
			dt_vencimento_w,
			ie_conclusao_ndc_w,
			null,
			'562',
			nr_seq_nota_debito_w);
			
		update	titulo_receber
		set	nr_seq_nota_deb_conclusao	= nr_seq_nota_conclusao_w
		where	nr_titulo			= nr_nota_debito_w;
		
		if	(nr_bloqueto_w IS NOT NULL AND nr_bloqueto_w::text <> '' AND nr_seq_conta_banco_w IS NOT NULL AND nr_seq_conta_banco_w::text <> '') then		
			select	nextval('ptu_nota_deb_bol_seq')
			into STRICT	nr_seq_nota_deb_bol_w
			;
				
			-- BOLETO
			insert into ptu_nota_deb_bol(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq,
				tp_reg,
				nr_banco,
				agencia_cd_cedente,
				nosso_numero,
				uso_banco,
				ds_carteira,
				especie,
				vlr_documento,
				dt_documento,
				especie_doc,
				aceite,
				dt_proces,
				local_pagto,
				obs_local_pagto,
				tp_boleto,
				nr_seq_nota_debito,
				nr_seq_nota_deb_conclusao)
			values (nr_seq_nota_deb_bol_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				0,
				'563',
				cd_banco_w,
				cd_agencia_bancaria_w,
				coalesce(nr_nosso_numero_w,' '),
				null,
				cd_carteira_w,
				null,
				vl_titulo_w,
				dt_emissao_w,
				null,
				'N',
				dt_emissao_w,
				'Pago em qualquer banco ate a data do vencimento',
				'Sem observacao',
				1,
				nr_seq_nota_debito_w,
				nr_seq_nota_conclusao_w);
			
			-- INSTRUCOES
			insert into ptu_nota_deb_bol_inst(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq,
				tp_reg,
				ds_instrucao,
				nr_seq_nota_deb_bol)
			values (nextval('ptu_nota_deb_bol_inst_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				0,
				'564',
				'Sem instrucao',
				nr_seq_nota_deb_bol_w);
				
			-- OBSERVACOES
			insert into ptu_nota_deb_bol_obs(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq,
				tp_reg,
				ds_observacao,
				nr_seq_nota_deb_bol)
			values (nextval('ptu_nota_deb_bol_obs_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				0,
				'565',
				'Sem observacao',
				nr_seq_nota_deb_bol_w);
				
			if (nr_bloqueto_w IS NOT NULL AND nr_bloqueto_w::text <> '') then
				-- LINHA DIGITAVEL
				insert into ptu_nota_deb_bol_ld(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq,
					tp_reg,
					linha_digitavel,
					cd_barras,
					nr_seq_nota_deb_bol)
				values (nextval('ptu_nota_deb_bol_ld_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					0,
					'566',
					coalesce(substr(converte_codigo_bloqueto('Barra_Editado',nr_bloqueto_w),1,60),' '),
					coalesce(nr_bloqueto_w,' '),			
					nr_seq_nota_deb_bol_w);
			end if;
		end if;
		


		-- Dados do PAGADOR
		if (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') and (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then		
			select	pls_elimina_acent_e_caract_esp(substr(pls_obter_dados_pagador(nr_seq_pagador_w,'N'),1,60)),
				cd_cgc_w,
				pls_elimina_acent_e_caract_esp(substr(pls_obter_compl_pagador(nr_seq_pagador_w,'E'),1,40)),
				pls_elimina_acent_e_caract_esp(substr(pls_obter_compl_pagador(nr_seq_pagador_w,'CO'),1,20)),
				substr(pls_obter_compl_pagador(nr_seq_pagador_w,'NR'),1,6),
				pls_elimina_acent_e_caract_esp(substr(pls_obter_compl_pagador(nr_seq_pagador_w,'B'),1,30)),
				substr(pls_obter_compl_pagador(nr_seq_pagador_w,'CEP'),1,8),
				pls_elimina_acent_e_caract_esp(substr(pls_obter_compl_pagador(nr_seq_pagador_w,'CI'),1,30)),
				substr(pls_obter_compl_pagador(nr_seq_pagador_w,'UF'),1,2),
				obter_somente_numero(substr(pls_obter_compl_pagador(nr_seq_pagador_w,'T'),1,9)),
				obter_somente_numero(substr(pls_obter_compl_pagador(nr_seq_pagador_w,'FAX'),1,9)),
				'2',
				substr(pls_obter_compl_pagador(nr_seq_pagador_w,'IBGE'),1,8),
				substr(pls_obter_compl_pagador(nr_seq_pagador_w,'TL'),1,3)
			into STRICT	nm_cred_dev_w,
				cd_cnpj_cpf_w,
				ds_endereco_w,
				ds_end_cpl_w,
				nr_end_w,
				ds_bairro_w,
				nr_cep_w,
				ds_cidade_w,
				cd_uf_w,
				nr_fone_w,
				nr_fax_w,
				tp_cred_dev_w,
				cd_municipio_ibge_w,
				cd_tipo_logradouro_w
			;
			
			select	max(nr_ddd_telefone)
			into STRICT	nr_ddd_w
			from	pessoa_juridica
			where	cd_cgc = cd_cgc_w;
			
			select 	count(1)
			into STRICT	qt_tipo_logradouro_w
			from 	ptu_tipo_logradouro
			where  	cd_tipo_logradouro = cd_tipo_logradouro_w;
				
			if (qt_tipo_logradouro_w > 0) then			
				select 	coalesce(max(cd_ptu), '34')
				into STRICT	cd_ptu_w
				from 	ptu_tipo_logradouro
				where 	cd_tipo_logradouro = cd_tipo_logradouro_w;
			else
				cd_ptu_w := '34';
			end if;
			
			-- DADOS DA CREDORA E DA DEVEDORA PARA EMISSAO DA NOTA DE DEBITO
			insert into ptu_nota_deb_credor_deved(	
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_nota_debito,
				tp_cred_dev,
				nm_cred_dev,
				ds_endereco,
				ds_end_cpl,
				nr_end,
				ds_bairro,
				nr_cep,
				ds_cidade,
				cd_uf,
				cd_cnpj_cpf,
				nr_ddd,
				nr_fone,
				nr_fax,
				nr_seq,
				tp_reg,
				nr_seq_nota_deb_conclusao,
				cd_municipio_ibge,
				cd_tipo_logradouro,
				ie_tipo_fone)
			values (	nextval('ptu_nota_deb_credor_deved_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_nota_debito_w,
				tp_cred_dev_w,
				nm_cred_dev_w,
				ds_endereco_w,
				ds_end_cpl_w,
				nr_end_w,
				ds_bairro_w,
				nr_cep_w,
				ds_cidade_w,
				cd_uf_w,
				cd_cnpj_cpf_w,
				nr_ddd_w,
				nr_fone_w,
				nr_fax_w,
				0,
				'567',
				nr_seq_nota_conclusao_w,
				cd_municipio_ibge_w,       
				cd_ptu_w,
				'1');
				
			nm_cred_dev_w := null;
			ds_endereco_w := null;
			ds_end_cpl_w := null;
			nr_end_w := null;
			ds_bairro_w := null;
			nr_cep_w := null;
			ds_cidade_w := null;
			cd_uf_w := null;
			cd_cnpj_cpf_w := null;
			nr_ddd_w := null;
			nr_fone_w := null;
			nr_fax_w := null;			
			cd_municipio_ibge_w := null;
			cd_tipo_logradouro_w := null;
				
			select	max(cd_cgc_outorgante)
			into STRICT	cd_cgc_w
			from	pls_outorgante
			where	cd_estabelecimento = cd_estabelecimento_p;
			
			select	pls_elimina_acent_e_caract_esp(substr(a.ds_razao_social,1,60)),
				a.cd_cgc,
				pls_elimina_acent_e_caract_esp(substr(a.ds_endereco,1,40)),
				pls_elimina_acent_e_caract_esp(substr(a.ds_complemento,1,20)),
				substr(a.nr_endereco,1,6),
				pls_elimina_acent_e_caract_esp(substr(a.ds_bairro,1,30)),
				substr(a.cd_cep,1,8),
				pls_elimina_acent_e_caract_esp(substr(a.ds_municipio,1,30)),
				substr(a.sg_estado,1,2),
				obter_somente_numero(substr(a.nr_telefone,1,9)),
				obter_somente_numero(substr(a.nr_fax,1,9)),
				a.nr_ddd_telefone,
				'1',
				a.cd_municipio_ibge,
				substr(b.cd_tipo_logradouro,1,3)
			into STRICT	nm_cred_dev_w,
				cd_cnpj_cpf_w,
				ds_endereco_w,
				ds_end_cpl_w,
				nr_end_w,
				ds_bairro_w,
				nr_cep_w,
				ds_cidade_w,
				cd_uf_w,
				nr_fone_w,
				nr_fax_w,
				nr_ddd_w,
				tp_cred_dev_w,
				cd_municipio_ibge_w,
				cd_tipo_logradouro_w
			FROM pessoa_juridica a
LEFT OUTER JOIN cns_tipo_logradouro b ON (a.nr_seq_tipo_logradouro = b.nr_sequencia)
WHERE a.cd_cgc 			= cd_cgc_w;
			
			select 	count(1)
			into STRICT	qt_tipo_logradouro_w
			from 	ptu_tipo_logradouro
			where  	cd_tipo_logradouro = cd_tipo_logradouro_w;
				
			if (qt_tipo_logradouro_w > 0) then			
				select 	coalesce(max(cd_ptu), '34')
				into STRICT	cd_ptu_w
				from 	ptu_tipo_logradouro
				where 	cd_tipo_logradouro = cd_tipo_logradouro_w;
			else
				cd_ptu_w := '34';
			end if;
			
			-- DADOS DA CREDORA E DA DEVEDORA PARA EMISSAO DA NOTA DE DEBITO
			insert into ptu_nota_deb_credor_deved(	
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_nota_debito,
				tp_cred_dev,
				nm_cred_dev,
				ds_endereco,
				ds_end_cpl,
				nr_end,
				ds_bairro,
				nr_cep,
				ds_cidade,
				cd_uf,
				cd_cnpj_cpf,
				nr_ddd,
				nr_fone,
				nr_fax,
				nr_seq,
				tp_reg,
				nr_seq_nota_deb_conclusao,
				cd_municipio_ibge,
				cd_tipo_logradouro,
				ie_tipo_fone)
			values (	nextval('ptu_nota_deb_credor_deved_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_nota_debito_w,
				tp_cred_dev_w,
				nm_cred_dev_w,
				ds_endereco_w,
				ds_end_cpl_w,
				nr_end_w,
				ds_bairro_w,
				nr_cep_w,
				ds_cidade_w,
				cd_uf_w,
				cd_cnpj_cpf_w,
				nr_ddd_w,
				nr_fone_w,
				nr_fax_w,
				0,
				'567',
				nr_seq_nota_conclusao_w,
				cd_municipio_ibge_w,       
				cd_ptu_w,
				'1');
		end if;
		
		-- Informacoes do titulo (NDC)
		dt_emissao_ndc_w := dt_emissao_w;
		dt_ven_ndc_w := dt_vencimento_w;
		vl_ndc_w := coalesce(vl_titulo_w,0);
		ds_linha_w := 'Valor acordado no AJIUS.';

		-- DADOS DA NOTA DE DEBITO
		insert into ptu_nota_deb_dados(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_nota_debito,
			dt_emissao_ndc,
			dt_ven_ndc,
			nr_linha,
			ds_linha,
			vl_ndc,
			nr_seq,
			tp_reg,
			nr_seq_nota_deb_conclusao,
			tp_doc_568)
		values (	nextval('ptu_nota_deb_dados_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_nota_debito_w,
			dt_emissao_ndc_w,
			dt_ven_ndc_w,
			nr_linha_w,
			ds_linha_w,
			vl_ndc_w,
			0,
			'568',
			nr_seq_nota_conclusao_w,
			tp_doc_568_w);
			
		if (nr_seq_ptu_fatura_w IS NOT NULL AND nr_seq_ptu_fatura_w::text <> '') then
			select	max(nr_fatura),
				max(dt_emissao_fatura),
				coalesce(max(vl_total_fatura),0),
				max(nr_nota_credito_debito),
				max(dt_emissao_ndc),
				coalesce(max(vl_total_ndc),0)
			into STRICT	nr_fatura_orig_w,
				dt_emissao_fatura_w,
				vl_tot_fat_w,
				nr_ndr_w,
				dt_emissao_ndr_w,
				vl_tot_ndr_w
			from	ptu_fatura
			where	nr_sequencia = nr_seq_ptu_fatura_w;
			
			-- OS 1358289 - jtonon - Atribuimos ao nr_ndr_w a mesma informacao que esta no A550 (ptu_camara_contestacao)
			nr_ndr_w := nr_nota_credito_debito_a500_w;
		
		elsif (nr_seq_pls_fatura_w IS NOT NULL AND nr_seq_pls_fatura_w::text <> '') then
			select	coalesce(max(pt.nr_fatura),to_char(max(pf.nr_titulo))),
				coalesce(max(pf.vl_fatura),0),
				coalesce(max(pt.nr_nota_credito_debito),to_char(max(pf.nr_titulo_ndc))),
				coalesce(max(pf.vl_total_ndc),0),
				max(pf.nr_titulo),
				max(pf.nr_titulo_ndc)
			into STRICT	nr_fatura_orig_w,
				vl_tot_fat_w,
				nr_ndr_w,
				vl_tot_ndr_w,
				nr_titulo_rec_w,
				nr_titulo_ndc_rec_w
			FROM pls_fatura pf
LEFT OUTER JOIN ptu_fatura pt ON (pf.nr_sequencia = pt.nr_seq_pls_fatura)
WHERE pf.nr_sequencia = nr_seq_pls_fatura_w;

			select	coalesce(vl_total_ndc_a500,0),
				coalesce(vl_total_fatura,0)
			into STRICT	vl_tot_ndr_w,
				vl_tot_fat_w
			from	ptu_camara_contestacao
			where	nr_sequencia	= nr_seq_camara_contest_p;
			
			dt_emissao_fatura_w := null;
			dt_emissao_ndr_w := null;	
			
			if (coalesce(nr_titulo_rec_w,'0') <> '0') then
				select	dt_emissao
				into STRICT	dt_emissao_fatura_w
				from	titulo_receber
				where	nr_titulo = nr_titulo_rec_w;
			end if;
			
			if (coalesce(nr_titulo_ndc_rec_w,'0') <> '0') then
				select	dt_emissao
				into STRICT	dt_emissao_ndr_w
				from	titulo_receber
				where	nr_titulo = nr_titulo_ndc_rec_w;
			end if;
		end if;
		
		-- DADOS DA FATURA/NDR ORIGINAL (A500)
		insert into ptu_nota_deb_fat_ndr(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_nota_debito,
			nr_fatura,
			dt_emissao_fatura,
			vl_tot_fat,
			nr_ndr,
			dt_emissao_ndr,
			vl_tot_ndr,
			nr_seq,
			tp_reg,
			nr_seq_nota_deb_conclusao)
		values (	nextval('ptu_nota_deb_fat_ndr_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_nota_debito_w,
			nr_fatura_orig_w,
			dt_emissao_fatura_w,
			vl_tot_fat_w,
			nr_ndr_w,
			dt_emissao_ndr_w,
			vl_tot_ndr_w,
			0,
			'569',
			nr_seq_nota_conclusao_w);
		end;
	end loop;
	close C01;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_nota_debito_a560 ( nr_seq_lote_discussao_p bigint, nr_seq_camara_contest_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

