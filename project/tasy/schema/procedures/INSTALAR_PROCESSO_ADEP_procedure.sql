-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE instalar_processo_adep ( nr_seq_processo_p bigint, ie_administrar_p text, nm_usuario_p text, nr_seq_assinatura_p bigint) AS $body$
DECLARE

	
ora2pg_rowcount int;
nr_seq_evento_w		bigint;
nr_seq_solucao_w	bigint;
nr_prescricao_w		bigint;
nr_seq_map_w		bigint;
nr_seq_horario_w	bigint;
qt_vel_infusao_w	prescr_solucao.qt_dosagem%type;
dt_horario_w		timestamp;
nr_etapa_atual_w	bigint;
ie_regra_lanc_conta_w	varchar(1);
ie_agrupador_w			prescr_material.ie_agrupador%type;
nr_etapa_w				adep_processo.nr_etapa%type;
nr_seq_material_w		adep_processo.nr_seq_material%type;
ie_tipo_item_w			varchar(1);
ie_tipo_solucao_w		prescr_solucao.ie_tipo_solucao%type;
nr_seq_nut_pac_w		prescr_material.nr_seq_nut_pac%type;
cd_pessoa_fisica_w		prescr_medica.cd_pessoa_fisica%type;
ie_gerar_pend_w			boolean;
nr_atendimento_w		prescr_medica.nr_atendimento%type;
cd_material_w			prescr_mat_hor.cd_material%type;
nr_seq_lote_w			prescr_mat_hor.nr_seq_lote%type;
dt_atend_lote_w			ap_lote.dt_atend_farmacia%type;
dt_entrega_setor_w		ap_lote.dt_entrega_setor%type;
dt_recebimento_setor_w	ap_lote.dt_recebimento_setor%type;
ie_somente_com_baixa_w	varchar(1);
ie_impedir_w			varchar(1);
ie_gera_sem_certificado_w	varchar(1);
ie_dialise_w			varchar(1);
ie_atualizou_w			boolean;
nr_etapa_dialise_w		prescr_mat_hor.nr_etapa_sol%type;
qt_dose_etapa_sne_w		prescr_material.qt_dose%type;
nr_seq_ultimo_evento_pc_w	hd_prescricao_evento.nr_sequencia%type;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
		a.ie_agrupador,
		a.nr_seq_material,
		b.nr_seq_nut_pac,
		a.cd_material,
		a.nr_seq_lote
from	prescr_mat_hor a,
		prescr_material b
where	a.nr_seq_processo	= nr_seq_processo_p
and		a.nr_prescricao = b.nr_prescricao
and		b.nr_sequencia = a.nr_seq_material
and		coalesce(a.dt_inicio_horario::text, '') = ''
and		coalesce(a.nr_seq_dialise::text, '') = ''
and		coalesce(a.dt_suspensao::text, '') = ''
and		coalesce(a.dt_fim_horario::text, '') = '';

cDialise CURSOR FOR
SELECT	a.oid,
		a.nr_prescricao,
		a.nr_seq_solucao,
		a.nr_etapa_sol nr_seq_etapa,
		a.nr_sequencia nr_seq_horario
from	prescr_mat_hor a,
		prescr_solucao b
where	a.nr_seq_processo	= nr_seq_processo_p
and		a.nr_prescricao = b.nr_prescricao
and		b.nr_seq_solucao = a.nr_seq_solucao
and		coalesce(a.dt_inicio_horario::text, '') = ''
and		(b.nr_seq_dialise IS NOT NULL AND b.nr_seq_dialise::text <> '')
and		coalesce(a.dt_suspensao::text, '') = ''
and		coalesce(a.dt_fim_horario::text, '') = ''
and		coalesce(a.ie_situacao,'A') = 'A'
and		coalesce(a.ie_horario_especial,'N') <> 'S';
BEGIN

if (nr_seq_processo_p IS NOT NULL AND nr_seq_processo_p::text <> '') and (ie_administrar_p IS NOT NULL AND ie_administrar_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	
	ie_somente_com_baixa_w := obter_param_usuario(1113, 357, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_somente_com_baixa_w);
	ie_regra_lanc_conta_w	:= obter_regra_lanc_conta_adep(wheb_usuario_pck.get_cd_estabelecimento, obter_perfil_ativo, nm_usuario_p, 'AP');
	if (ie_regra_lanc_conta_w = 'N') then
		ie_regra_lanc_conta_w	:= obter_regra_lanc_conta_adep(wheb_usuario_pck.get_cd_estabelecimento, obter_perfil_ativo, nm_usuario_p, 'CG');
	end if;

	select	max(nr_prescricao),
			max(nr_seq_solucao),
			max(dt_horario_processo),
			max(nr_etapa),
			max(nr_seq_material),
			max(nr_atendimento)
	into STRICT	nr_prescricao_w,
			nr_seq_solucao_w,
			dt_horario_w,
			nr_etapa_w,
			nr_seq_material_w,
			nr_atendimento_w
	from	adep_processo
	where	nr_sequencia = nr_seq_processo_p;
		
	if (ie_administrar_p = 'S') then
		if (ie_somente_com_baixa_w <> 'N') then
			for c01_w in c01 loop
				begin
					ie_impedir_w	:= obter_se_impede_adm(c01_w.cd_material);
					if (ie_impedir_w = 'S') then
						if (ie_somente_com_baixa_w = 'S') then
							--So e possivel administrar uma medicacao apos o atendimento da mesma no atendimento da prescricao/lote! Parametro [357]
							CALL atualiza_status_processo_adep(nr_seq_processo_p,0,'A','RA',clock_timestamp(),nm_usuario_p);
							CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173406);
						elsif (ie_somente_com_baixa_w = 'L') and (c01_w.nr_seq_lote IS NOT NULL AND c01_w.nr_seq_lote::text <> '') then
							select	max(a.dt_atend_farmacia)
							into STRICT	dt_atend_lote_w
							from	ap_lote a
							where	a.nr_sequencia = c01_w.nr_seq_lote;
							if (coalesce(dt_atend_lote_w::text, '') = '') then
								--so e possivel administrar uma medicacao apos o atendimento da mesma no atendimento da prescricao/lote! parametro [357]
								CALL wheb_mensagem_pck.exibir_mensagem_abort(173406);
							end if;
						elsif (ie_somente_com_baixa_w = 'E') and (c01_w.nr_seq_lote IS NOT NULL AND c01_w.nr_seq_lote::text <> '') then
							select	max(a.dt_entrega_setor)
							into STRICT	dt_entrega_setor_w
							from	ap_lote a
							where	a.nr_sequencia = c01_w.nr_seq_lote;
							if (coalesce(dt_entrega_setor_w::text, '') = '') then
								--so e possivel administrar uma medicacao apos a entrega da mesma no atendimento da prescricao/lote! parametro [357]
								CALL wheb_mensagem_pck.exibir_mensagem_abort(472055);
							end if;
						elsif (ie_somente_com_baixa_w = 'R') and (c01_w.nr_seq_lote IS NOT NULL AND c01_w.nr_seq_lote::text <> '') then
							select	max(a.dt_recebimento_setor)
							into STRICT	dt_recebimento_setor_w
							from	ap_lote a
							where	a.nr_sequencia = c01_w.nr_seq_lote;
							if (coalesce(dt_recebimento_setor_w::text, '') = '') then
								--so e possivel administrar uma medicacao, apos o recebimento da mesma no atendimento da prescricao/lote!
								CALL wheb_mensagem_pck.exibir_mensagem_abort(819419);
							end if;
						end if;
					end if;
				end;
			end loop;
		end if;

		update	adep_processo
		set		dt_paciente		= clock_timestamp(),
				nm_usuario_paciente	= nm_usuario_p
		where	nr_sequencia		= nr_seq_processo_p
		and		coalesce(dt_paciente::text, '') = ''
		and		coalesce(nm_usuario_paciente::text, '') = '';
		
		CALL atualiza_status_processo_adep(nr_seq_processo_p, null, 'A', 'A', clock_timestamp(), nm_usuario_p);
		
		select 	coalesce(max('S'), 'N') ie_dialise
		into STRICT	ie_dialise_w
		from	prescr_mat_hor a,
				prescr_solucao b
		where	a.nr_prescricao = b.nr_prescricao
		and		a.nr_seq_solucao = b.nr_seq_solucao
		and		a.nr_seq_processo = nr_seq_processo_p
		and		(b.nr_seq_dialise IS NOT NULL AND b.nr_seq_dialise::text <> '');

		if (ie_dialise_w <> 'S') then
			-- Verificar se o processo e de um item NPT
			if	((coalesce(nr_seq_solucao_w,0) = 0) or (coalesce(nr_etapa_w,0) = 0) and (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '')) then
			
				select	obter_tipo_processo_adep(nr_seq_processo_p)
				into STRICT	ie_tipo_item_w
				;
				
			end if;
			
			if	((coalesce(nr_seq_solucao_w,0) > 0) or (coalesce(nr_etapa_w,0) > 0) or (ie_tipo_item_w = 'N')) then
				
				ie_gera_sem_certificado_w	:= 'N';
	
				if (wheb_assist_pck.get_gerar_sem_certificado = 'S') then
					ie_gera_sem_certificado_w := adep_obter_se_assin_perfil(50513, obter_perfil_ativo); --ADEP - ADI - Eventos da solucao
				end if;
		
				ie_gerar_pend_w	:= (((wheb_assist_pck.get_cd_certificado IS NOT NULL AND wheb_assist_pck.get_cd_certificado::text <> '') OR (ie_gera_sem_certificado_w = 'S')) AND (coalesce(obter_data_assinatura_digital(nr_seq_assinatura_p)::text, '') = ''));
											
				select	max(cd_pessoa_fisica)
				into STRICT	cd_pessoa_fisica_w
				from	atendimento_paciente
				where	nr_atendimento = nr_atendimento_w;
					
				select	coalesce(max(nr_etapa),0)
				into STRICT	nr_etapa_atual_w
				from	adep_processo
				where	nr_sequencia = nr_seq_processo_p;
				
				if (nr_etapa_atual_w = 0) then			
					nr_etapa_atual_w := Obter_etapa_atual(nr_prescricao_w, nr_seq_solucao_w) + 1;
				end if;
				
				select	coalesce(max(ie_agrupador),4)
				into STRICT	ie_agrupador_w
				from	prescr_mat_hor
				where	nr_seq_processo = nr_seq_processo_p;
						
				select	nextval('prescr_solucao_evento_seq')
				into STRICT	nr_seq_evento_w
				;
				
				select	coalesce(max(qt_dosagem),0)
				into STRICT	qt_vel_infusao_w
				from	prescr_solucao
				where	nr_prescricao = nr_prescricao_w
				and	nr_seq_solucao = nr_seq_solucao_w;
				
				insert into prescr_solucao_evento(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_prescricao,
					nr_seq_solucao,
					nr_seq_material,
					ie_forma_infusao,
					ie_tipo_dosagem,
					qt_dosagem,
					qt_vol_infundido,
					qt_vol_desprezado,
					cd_pessoa_fisica,
					ie_alteracao,
					dt_alteracao,
					dt_aprazamento,
					ie_evento_valido,
					nr_seq_motivo,
					ds_observacao,
					ie_tipo_solucao,
					nr_etapa_evento,
					nr_seq_assinatura)
				values (
					nr_seq_evento_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_prescricao_w,
					CASE WHEN ie_agrupador_w=4 THEN  nr_seq_solucao_w  ELSE null END ,
					nr_seq_material_w,
					null,
					null,
					qt_vel_infusao_w,
					null,
					null,
					obter_dados_usuario_opcao(nm_usuario_p, 'C'),
					35,
					clock_timestamp(),
					dt_horario_w,
					'S',
					null,
					'',
					CASE WHEN ie_agrupador_w=4 THEN  1  ELSE 2 END ,
					nr_etapa_atual_w,
					CASE WHEN coalesce(nr_seq_assinatura_p,0)=0 THEN  null  ELSE nr_seq_assinatura_p END );
						
					begin					
									
						if	((ie_gerar_pend_w) and coalesce(nr_seq_assinatura_p,0) = 0) then	
						
							if ((coalesce(ie_tipo_item_w, 'N') = 'N') and (coalesce(nr_seq_solucao_w,0) > 0)) then
								
								select	CASE WHEN ie_agrupador_w=4 THEN  1  ELSE 2 END
								into STRICT	ie_tipo_solucao_w
								;
		
								ie_tipo_item_w := obter_tipo_solucao_adep(ie_tipo_solucao_w);
							
							end if;
	
							if (ie_agrupador_w = 4) then				
								CALL Gerar_registro_pendente_PEP('ADEP',nr_prescricao_w, cd_pessoa_fisica_w, nr_atendimento_w, nm_usuario_p, 'A', null,ie_tipo_item_w,null,null,null,null,null,null,null,null,null,nr_seq_solucao_w,coalesce(nr_etapa_atual_w,0),null,null,null,nr_seq_evento_w);
							else
								CALL Gerar_registro_pendente_PEP('ADEP',nr_prescricao_w, cd_pessoa_fisica_w, nr_atendimento_w, nm_usuario_p, 'A', null,ie_tipo_item_w,null,null,null,null,null,null,null,null,null,null,coalesce(nr_etapa_atual_w,0),null,null,null,nr_seq_evento_w);
							end if;
						
						end if;		
	
					exception when others then
						null;
					end;				
									
					if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
					
				open C01;
				loop
				fetch C01 into	
					nr_seq_horario_w,
					ie_agrupador_w,
					nr_seq_material_w,
					nr_seq_nut_pac_w,
					cd_material_w,
					nr_seq_lote_w;
				EXIT WHEN NOT FOUND; /* apply on C01 */
					
					update	prescr_mat_hor
					set		dt_inicio_horario 		= clock_timestamp(),
							nm_usuario				= nm_usuario_p,
							dt_primeira_checagem	 = NULL
					where	nr_sequencia			= nr_seq_horario_w;
					
					if (ie_regra_lanc_conta_w = 'S') then
						nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_w, null, 'G', clock_timestamp(), nm_usuario_p, nr_seq_map_w, null, null, null);
					elsif (ie_regra_lanc_conta_w = 'L') and (obter_se_lote_hor_conta_pac(nr_seq_horario_w) = 'S') then					
						nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_w, null, 'G', clock_timestamp(), nm_usuario_p, nr_seq_map_w, null, null, null);
					end if;
					
				end loop;
				close C01;
							
				if (ie_agrupador_w = 4) then
				
					update	prescr_mat_hor
					set		dt_reinicio = CASE WHEN dt_reinicio = NULL THEN  CASE WHEN dt_interrupcao = NULL THEN  null  ELSE clock_timestamp() END   ELSE null END
					where	dt_horario = (	SELECT	max(dt_horario)
											from	prescr_mat_hor
											where	coalesce(ie_situacao,'A') = 'A'
											and		nr_etapa_sol < nr_etapa_atual_w
											and		coalesce(dt_suspensao::text, '') = ''
											and		nr_seq_solucao = nr_seq_solucao_w
											and		nr_prescricao = nr_prescricao_w)
					and		coalesce(ie_situacao,'A') = 'A'
					and		nr_etapa_sol < nr_etapa_atual_w
					and		coalesce(dt_suspensao::text, '') = ''
					and		nr_seq_solucao = nr_seq_solucao_w
					and		nr_prescricao = nr_prescricao_w;	
					
					update 	prescr_solucao
					set 	ie_status = 'I',
							dt_status = clock_timestamp()
					where 	nr_prescricao 	= nr_prescricao_w
					and		nr_seq_solucao 	= nr_seq_solucao_w
					and 	coalesce(ie_status, 'N') <> 'I';
				
				elsif (ie_agrupador_w = 11) then
						
					update	nut_pac
					set		ie_status = 'I',
							dt_status = clock_timestamp()
					where	nr_prescricao = nr_prescricao_w
					and		nr_sequencia = nr_seq_nut_pac_w
					and		coalesce(ie_status,'N') <> 'I';
				
					update	nut_paciente_hor
					set		ie_status = 'I'
					where	nr_seq_nut_protocolo	= nr_seq_nut_pac_w				
					and		coalesce(ie_horario_especial,'N')	= 'N'
					and		coalesce(ie_status,'N') <> 'I';
					
					update	prescr_solucao_evento
					set		nr_seq_nut_neo = nr_seq_nut_pac_w,
							ie_tipo_solucao = 6						
					where	nr_sequencia = nr_seq_evento_w;
				
				else
					update	prescr_mat_hor
					set		dt_fim_horario = clock_timestamp()
					where	dt_horario = (	SELECT	max(dt_horario)
											from	prescr_mat_hor
											where	coalesce(ie_situacao,'A') = 'A'
											and		nr_etapa_sol < nr_etapa_atual_w
											and		coalesce(dt_suspensao::text, '') = ''
											and		nr_seq_material = nr_seq_material_w
											and		nr_prescricao = nr_prescricao_w)
					and		coalesce(ie_situacao,'A') = 'A'
					and		nr_etapa_sol < nr_etapa_atual_w
					and		coalesce(dt_suspensao::text, '') = ''
					and		nr_seq_material = nr_seq_material_w
					and		nr_prescricao = nr_prescricao_w
					and		coalesce(dt_fim_horario::text, '') = ''
					and		coalesce(ie_horario_especial,'N') <> 'S';
					
					if (ie_agrupador_w = 8) then
						select obter_conversao_ml(a.cd_material,a.qt_dose,a.cd_unidade_medida_dose) qt_dose_etapa_sne
						into STRICT qt_dose_etapa_sne_w
						from prescr_material a
						where	a.nr_prescricao = nr_prescricao_w
						and		a.nr_sequencia 	= nr_seq_material_w
						and		a.ie_agrupador 	= 8;
						
						update	prescr_material	a
						set		a.ie_status 	= 'I',
								a.dt_status 	= clock_timestamp(),
								a.qt_volume_adep = qt_dose_etapa_sne_w
						where	a.nr_prescricao = nr_prescricao_w
						and		a.nr_sequencia 	= nr_seq_material_w
						and		a.ie_agrupador 	= 8;
					end if;
				end if;
				
			end if;
		else
			for cDialise_w in cDialise loop
				begin
					nr_seq_solucao_w := cDialise_w.nr_seq_solucao;
					nr_prescricao_w := cDialise_w.nr_prescricao;
					nr_etapa_dialise_w := cDialise_w.nr_seq_etapa;

					update	prescr_mat_hor a
					set		a.dt_inicio_horario = clock_timestamp(),
							a.dt_primeira_checagem	 = NULL
					where	a.rowid = cDialise_w.rowid;
					
					GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;

					
					ie_atualizou_w := ( ora2pg_rowcount > 0);
					
					if (coalesce(obter_se_proc_dupla_chec(nr_seq_processo_p),'N') = 'S') then
						select	coalesce(max(a.nr_sequencia),0)
						into STRICT	nr_seq_ultimo_evento_pc_w
						from	hd_prescricao_evento a
						where	a.nr_prescricao = nr_prescricao_w
						and		a.nr_seq_solucao = nr_seq_solucao_w
						and		a.nr_etapa_evento = nr_etapa_dialise_w
						and		a.ie_evento = 'PC'
						and		coalesce(a.ie_evento_valido,'S') = 'S';
						
						if (nr_seq_ultimo_evento_pc_w > 0) then
							update	hd_prescricao_evento a
							set		a.ie_evento_valido = 'N'
							where	a.nr_sequencia = nr_seq_ultimo_evento_pc_w;
						end if;
					end if;
					
					if (ie_regra_lanc_conta_w = 'S') then

						nr_seq_map_p 			=> nr_seq_map_w := gerar_estornar_adep_map(nr_seq_processo_p 		=> null, nr_seq_horario_p 		=> cDialise_w.nr_seq_horario, nr_seq_area_prep_p 		=> null, ie_gerar_estornar_p 	=> 'G', dt_gerar_estornar_p 	=> clock_timestamp(), nm_usuario_p 			=> nm_usuario_p, nr_seq_map_p 			=> nr_seq_map_w, ie_momento_p 			=> null, qt_material_p 			=> null, nr_seq_lote_fornec_p	=> null);

					elsif (ie_regra_lanc_conta_w = 'L') and (obter_se_lote_hor_conta_pac(cDialise_w.nr_seq_horario) = 'S') then

						nr_seq_map_p 			=> nr_seq_map_w := gerar_estornar_adep_map(nr_seq_processo_p 		=> null, nr_seq_horario_p 		=> cDialise_w.nr_seq_horario, nr_seq_area_prep_p 		=> null, ie_gerar_estornar_p 	=> 'G', dt_gerar_estornar_p 	=> clock_timestamp(), nm_usuario_p 			=> nm_usuario_p, nr_seq_map_p 			=> nr_seq_map_w, ie_momento_p 			=> null, qt_material_p 			=> null, nr_seq_lote_fornec_p	=> null);

					end if;
				end;
			end loop;

			if (ie_atualizou_w) then

				update	prescr_solucao
				set		ie_status		= 'II',
						dt_status 		= clock_timestamp()
				where	nr_seq_solucao 	= nr_seq_solucao_w
				and		nr_prescricao 	= nr_prescricao_w;

				INSERT INTO hd_prescricao_evento(
					nr_sequencia,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_atualizacao,
					nm_usuario,
					nr_prescricao,
					nr_seq_solucao,
					ie_evento,
					dt_evento,
					cd_pessoa_evento,
					nr_etapa_evento,
					nr_seq_assinatura)
				VALUES (
					nextval('hd_prescricao_evento_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_prescricao_w,
					nr_seq_solucao_w,
					'II',
					clock_timestamp(),
					SUBSTR(obter_dados_usuario_opcao(nm_usuario_p,'C'),1,10),
					nr_etapa_dialise_w,
					nr_seq_assinatura_p);				
			end if;
		end if;
	elsif (ie_administrar_p = 'N') then
		CALL atualiza_status_processo_adep(nr_seq_processo_p, null, 'A', 'RA', clock_timestamp(), nm_usuario_p);
	end if;
	
	update	adep_processo
	set		dt_primeira_checagem  = NULL
	where	nr_sequencia = nr_seq_processo_p
	and		(dt_paciente IS NOT NULL AND dt_paciente::text <> '')
	and		(dt_primeira_checagem IS NOT NULL AND dt_primeira_checagem::text <> '');

end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE instalar_processo_adep ( nr_seq_processo_p bigint, ie_administrar_p text, nm_usuario_p text, nr_seq_assinatura_p bigint) FROM PUBLIC;

