-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lote_deflator ( nr_seq_lote_ref_p bigint, nr_seq_reajuste_p bigint, tx_deflator_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_motivo_def_p bigint, ds_observacao_p text, ie_commit_p text, tx_reajuste_correto_p bigint, tx_reajuste_copart_p bigint, tx_reajuste_copart_max_p bigint, tx_deflator_copartic_p bigint, tx_deflator_copartic_max_p bigint, nr_seq_lote_novo_p INOUT bigint) AS $body$
DECLARE


nr_seq_reajuste_w		bigint;
nr_seq_motivo_def_w		bigint;
nr_seq_reaj_tab_w		bigint;
nr_seq_contrato_ww		bigint;
dt_reajuste_w			timestamp;
ds_observacao_w			varchar(2000);
nr_seq_lote_reaj_copart_w	bigint;
tx_reajuste_copartic_w		double precision;
tx_reajuste_copartic_max_w	double precision;
qt_regra_copartic_w		bigint;
ie_vinculo_coparticipacao_w	varchar(10);
ie_reajustar_copartic_w		varchar(10);
nr_seq_lote_reaj_inscricao_w	bigint;
tx_reajuste_inscricao_w		bigint;
qt_regra_inscricao_w		bigint;
ie_reajustar_inscricao_w	varchar(10);
tx_reajuste_inscricao_aux_w	double precision;
tx_reajuste_copartic_aux_w	double precision;
tx_reaj_copartic_max_aux_w	double precision;
ie_vinculo_copar_aux_w		varchar(10);
nr_seq_tipo_reajuste_w		pls_tipo_reajuste.nr_sequencia%type;
nr_seq_regra_gerada_w		pls_reajuste_copartic.nr_seq_regra_gerada%type;
nr_seq_regra_atual_w		pls_reajuste_copartic.nr_seq_regra_atual%type;
tx_reajuste_w 			double precision;
tx_reajuste_vl_maximo_w 	pls_lote_reaj_copartic.tx_reajuste_vl_maximo%type;
vl_maximo_w			pls_regra_coparticipacao.vl_maximo%type;
vl_maximo_atual_w		pls_regra_coparticipacao.vl_maximo%type;
vl_coparticipacao_w		pls_regra_coparticipacao.vl_coparticipacao%type;
vl_reajuste_w			double precision;
vl_reajuste_atual_w		double precision;
nr_seq_copartic_reajustada_w	pls_reajuste_copartic.nr_seq_copartic_reajustada%type;
nr_seq_copartic_ant_w		pls_reajuste_copartic.nr_seq_copartic_ant%type;
qt_processo_reaj_w		bigint;
tx_reajuste_processo_w		double precision;
nr_seq_processo_w		bigint;
tx_reajuste_lote_w		double precision;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_processo,
		tx_reajuste
	from	pls_reajuste_tabela
	where	nr_seq_reajuste	= nr_seq_reajuste_p;

c02 CURSOR FOR
	SELECT	tx_reajuste,
		tx_reajuste_vl_maximo,
		ie_vinculo_coparticipacao,
		nr_seq_contrato,
		nr_sequencia
	from	pls_lote_reaj_copartic
	where	nr_seq_reajuste = nr_seq_reajuste_p;

c03 CURSOR FOR
	SELECT	nr_seq_contrato,
		tx_reajuste
	from	pls_lote_reaj_inscricao
	where	nr_seq_reajuste = nr_seq_reajuste_p;


BEGIN

if (coalesce(tx_reajuste_correto_p,0) <> 0) then
	select	count(1)
	into STRICT	qt_processo_reaj_w
	from	pls_reajuste_tabela a,
		pls_reajuste b
	where	b.nr_sequencia = a.nr_seq_reajuste
	and	b.nr_sequencia = nr_seq_reajuste_p
	and	(a.nr_seq_processo IS NOT NULL AND a.nr_seq_processo::text <> '');

	if (qt_processo_reaj_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1029738);
	end if;
end if;

select	nextval('pls_reajuste_seq')
into STRICT	nr_seq_reajuste_w
;

if (coalesce(nr_seq_motivo_def_p,0) = 0) then
	nr_seq_motivo_def_w	:= null;
else
	nr_seq_motivo_def_w	:= nr_seq_motivo_def_p;
end if;

select	dt_reajuste,
	tx_reajuste_inscricao,
	tx_reajuste_copartic,
	tx_reajuste_copartic_max,
	ie_vinculo_coparticipacao,
	tx_reajuste
into STRICT	dt_reajuste_w,
	tx_reajuste_inscricao_aux_w,
	tx_reajuste_copartic_aux_w,
	tx_reaj_copartic_max_aux_w,
	ie_vinculo_copar_aux_w,
	tx_reajuste_lote_w
from	pls_reajuste
where	nr_sequencia	= nr_seq_reajuste_p;

ds_observacao_w := substr('Reajuste deflator referente ao lote ' || to_char(nr_seq_reajuste_p) || chr(10) || ds_observacao_p,1,2000);

select	max(nr_sequencia)
into STRICT	nr_seq_tipo_reajuste_w
from	pls_tipo_reajuste
where	ie_deflator = 'S';

insert	into	pls_reajuste(	nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_reajuste,
		tx_reajuste,
		ie_indice_reajuste,
		ds_oficio_ans,
		nr_protocolo_ans,
		ie_tipo_reajuste,
		ds_observacao,
		ie_status,
		nr_seq_contrato,
		cd_estabelecimento,
		ie_reajuste_tabela,
		dt_autorizacao_ans,
		tx_deflator,
		nr_seq_lote_referencia,
		nr_seq_motivo_deflator,
		nr_seq_intercambio,
		nr_contrato,
		ie_aplicacao_reajuste,
		nr_seq_plano,
		ie_tipo_contrato,
		dt_reajuste_aux,
		dt_aplicacao_reajuste,
		nr_seq_tipo_reajuste,
		tx_reajuste_correto,
		tx_reajuste_copart_correto,
		tx_reajuste_copart_max_correto,
		tx_deflator_copartic,
		tx_deflator_copartic_max)
	(SELECT	nr_seq_reajuste_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		dt_reajuste,
		0,
		ie_indice_reajuste,
		ds_oficio_ans,
		nr_protocolo_ans,
		ie_tipo_reajuste,
		ds_observacao_w,
		'1',
		nr_seq_contrato,
		cd_estabelecimento,
		ie_reajuste_tabela,
		dt_autorizacao_ans,
		tx_deflator_p,
		coalesce(nr_seq_lote_ref_p,nr_sequencia),
		nr_seq_motivo_def_w,
		nr_seq_intercambio,
		nr_contrato,
		ie_aplicacao_reajuste,
		nr_seq_plano,
		ie_tipo_contrato,
		to_char(dt_reajuste,'mm/yyyy'),
		dt_aplicacao_reajuste,
		nr_seq_tipo_reajuste_w,
		tx_reajuste_correto_p,
		tx_reajuste_copart_p,
		tx_reajuste_copart_max_p,
		tx_deflator_copartic_p,
		tx_deflator_copartic_max_p
	from	pls_reajuste
	where	nr_sequencia = nr_seq_reajuste_p);

/*pls_inserir_tabela_reajuste(nr_seq_reajuste_w,null,nm_usuario_p);
LEPINSKi - Comentada a linha acima e adicionado o cursor abaixo, para inserir no deflator todas as tabelas do reajuste */
open C01;
loop
fetch C01 into
	nr_seq_reaj_tab_w,
	nr_seq_processo_w,
	tx_reajuste_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if	(nr_seq_processo_w IS NOT NULL AND nr_seq_processo_w::text <> '' AND tx_reajuste_lote_w <> tx_reajuste_w) then
		tx_reajuste_processo_w	:= (((10 / (10 + ((10 * tx_reajuste_w) / 100))) - 1)* 100);
	else
		tx_reajuste_processo_w	:= null;
	end if;

	insert	into	pls_reajuste_tabela(	nr_sequencia,
			nr_seq_reajuste,
			nr_seq_tabela,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_plano,
			dt_inicio_vigencia,
			dt_contrato,
			nr_seq_contrato,
			ie_origem_tabela,
			nr_seq_processo,
			tx_reajuste)
	(	SELECT	nextval('pls_reajuste_tabela_seq'),
			nr_seq_reajuste_w,
			nr_seq_tabela,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_plano,
			dt_inicio_vigencia,
			dt_contrato,
			nr_seq_contrato,
			ie_origem_tabela,
			nr_seq_processo,
			tx_reajuste_processo_w
		from	pls_reajuste_tabela
		where	nr_sequencia	= nr_seq_reaj_tab_w);
	end;
end loop;
close C01;

ie_reajustar_copartic_w	:= 'N';

open C02;
loop
fetch C02 into
	tx_reajuste_copartic_w,
	tx_reajuste_copartic_max_w,
	ie_vinculo_coparticipacao_w,
	nr_seq_contrato_ww,
	nr_seq_lote_reaj_copart_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	vl_maximo_w := null;
	vl_reajuste_w := null;

	select	max(nr_seq_regra_gerada),
		max(nr_seq_copartic_reajustada)
	into STRICT	nr_seq_regra_gerada_w,
		nr_seq_copartic_reajustada_w
	from	pls_reajuste_copartic
	where	nr_seq_lote = nr_seq_lote_reaj_copart_w;

	if (nr_seq_regra_gerada_w IS NOT NULL AND nr_seq_regra_gerada_w::text <> '') then
		select	nr_seq_regra_gerada,
			nr_seq_regra_atual
		into STRICT	nr_seq_regra_gerada_w,
			nr_seq_regra_atual_w
		from	pls_reajuste_copartic
		where	nr_seq_lote = nr_seq_lote_reaj_copart_w
		and	(nr_seq_regra_gerada IS NOT NULL AND nr_seq_regra_gerada::text <> '')  LIMIT 1;

		select	max(vl_maximo),
			max(vl_coparticipacao)
		into STRICT	vl_maximo_w,
			vl_reajuste_w
		from	pls_regra_coparticipacao
		where	nr_sequencia = nr_seq_regra_gerada_w;

		select	max(vl_maximo),
			max(vl_coparticipacao)
		into STRICT	vl_maximo_atual_w,
			vl_reajuste_atual_w
		from	pls_regra_coparticipacao
		where	nr_sequencia = nr_seq_regra_atual_w;

		if (coalesce(vl_reajuste_w,0) <> 0) then
			tx_reajuste_copartic_w		:= (((vl_reajuste_w - vl_reajuste_atual_w) * 100) / vl_reajuste_w) * - 1;
		end if;

		if (coalesce(vl_maximo_w,0) <> 0) then
			tx_reajuste_copartic_max_w 	:= (((vl_maximo_w - vl_maximo_atual_w) * 100) / vl_maximo_w) * -1;
		else
			tx_reajuste_copartic_max_w 	:= tx_reajuste_copartic_w;
		end if;
	elsif (nr_seq_copartic_reajustada_w IS NOT NULL AND nr_seq_copartic_reajustada_w::text <> '') then
		select	nr_seq_copartic_reajustada,
			nr_seq_copartic_ant
		into STRICT	nr_seq_copartic_reajustada_w,
			nr_seq_copartic_ant_w
		from	pls_reajuste_copartic
		where	nr_seq_lote = nr_seq_lote_reaj_copart_w
		and	(nr_seq_copartic_reajustada IS NOT NULL AND nr_seq_copartic_reajustada::text <> '')  LIMIT 1;

		select	max(a.vl_apropriacao),
			max(b.vl_maximo_copartic)
		into STRICT	vl_reajuste_w,
			vl_maximo_w
		from	pls_regra_copartic_aprop a,
			pls_regra_copartic 	 b
		where	b.nr_sequencia = a.nr_seq_regra
		and	b.nr_sequencia = nr_seq_copartic_reajustada_w;

		select	max(a.vl_apropriacao),
			max(b.vl_maximo_copartic)
		into STRICT	vl_reajuste_atual_w,
			vl_maximo_atual_w
		from	pls_regra_copartic_aprop a,
			pls_regra_copartic 	 b
		where	b.nr_sequencia = a.nr_seq_regra
		and	b.nr_sequencia = nr_seq_copartic_ant_w;

		if (vl_reajuste_w IS NOT NULL AND vl_reajuste_w::text <> '') then
			tx_reajuste_copartic_w		:= (((vl_reajuste_w - vl_reajuste_atual_w) * 100) / vl_reajuste_w) * -1;
		end if;

		if (vl_maximo_w IS NOT NULL AND vl_maximo_w::text <> '') then
			tx_reajuste_copartic_max_w 	:= (((vl_maximo_w - vl_maximo_atual_w) * 100) / vl_maximo_w) * -1;
		else
			tx_reajuste_copartic_max_w := tx_reajuste_copartic_w;
		end if;
	end if;

	if (coalesce(vl_reajuste_w::text, '') = '') then

		select	max(pr_reajustado)
		into STRICT	tx_reajuste_copartic_w
		from	pls_reajuste_tabela	e,
			pls_tabela_preco	c,
			pls_reajuste		b,
			pls_plano_preco		f,
			pls_reajuste_preco	g
		where	e.nr_seq_tabela		= c.nr_sequencia
		and	e.nr_seq_reajuste	= b.nr_sequencia
		and	f.nr_seq_tabela 	= c.nr_sequencia
		and	g.nr_seq_tabela		= e.nr_sequencia
		and	g.nr_seq_preco		= f.nr_sequencia
		and	c.nr_contrato 		= nr_seq_contrato_ww
		and	b.nr_sequencia		= nr_seq_reajuste_w;

		tx_reajuste_copartic_max_w := tx_reajuste_copartic_w;
	end if;

	select	nextval('pls_lote_reaj_copartic_seq')
	into STRICT	nr_seq_lote_reaj_copart_w
	;

	insert	into	pls_lote_reaj_copartic(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
		cd_estabelecimento, nr_seq_contrato, dt_referencia,  tx_reajuste, tx_reajuste_vl_maximo,
		nr_seq_reajuste, ie_vinculo_coparticipacao)
	values (	nr_seq_lote_reaj_copart_w, clock_timestamp(), nm_usuario_p,clock_timestamp(), nm_usuario_p,
		cd_estabelecimento_p, nr_seq_contrato_ww,dt_reajuste_w, tx_reajuste_copartic_w,tx_reajuste_copartic_max_w,
		nr_seq_reajuste_w, ie_vinculo_coparticipacao_w);

	CALL pls_incluir_copartic_lote_reaj(nr_seq_lote_reaj_copart_w, cd_estabelecimento_p, 'N', nm_usuario_p);

	select	count(1)
	into STRICT	qt_regra_copartic_w
	from	pls_reajuste_copartic
	where	nr_seq_lote	= nr_seq_lote_reaj_copart_w;

	if (qt_regra_copartic_w = 0) then
		delete	FROM pls_lote_reaj_copartic
		where	nr_sequencia	= nr_seq_lote_reaj_copart_w;
	end if;

	ie_reajustar_copartic_w	:= 'S';
	end;
end loop;
close c02;

ie_reajustar_inscricao_w	:= 'N';

open C03;
loop
fetch C03 into
	nr_seq_contrato_ww,
	tx_reajuste_inscricao_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	if (coalesce(tx_reajuste_inscricao_w,0) <> 0) then
		tx_reajuste_inscricao_w	:= tx_reajuste_inscricao_w * -1;
	end if;

	select	nextval('pls_lote_reaj_inscricao_seq')
	into STRICT	nr_seq_lote_reaj_inscricao_w
	;

	insert	into	pls_lote_reaj_inscricao(	nr_sequencia, dt_atualizacao, nm_usuario,dt_atualizacao_nrec, nm_usuario_nrec,
			cd_estabelecimento,nr_seq_contrato, dt_referencia,  tx_reajuste, nr_seq_reajuste)
	values (	nr_seq_lote_reaj_inscricao_w, clock_timestamp(), nm_usuario_p,clock_timestamp(), nm_usuario_p,
			cd_estabelecimento_p, nr_seq_contrato_ww, dt_reajuste_w,  tx_reajuste_inscricao_w,nr_seq_reajuste_w);

	CALL pls_incluir_inscricao_reaj(nr_seq_lote_reaj_inscricao_w, cd_estabelecimento_p, nm_usuario_p);

	select	count(1)
	into STRICT	qt_regra_inscricao_w
	from	pls_reajuste_inscricao
	where	nr_seq_lote	= nr_seq_lote_reaj_inscricao_w;

	if (qt_regra_inscricao_w = 0) then
		delete	FROM pls_lote_reaj_inscricao
		where	nr_sequencia	= nr_seq_lote_reaj_inscricao_w;
	end if;

	ie_reajustar_inscricao_w	:= 'S';
	end;
end loop;
close C03;

update	pls_reajuste
set	nr_seq_lote_deflator	= nr_seq_reajuste_w
where	nr_sequencia		= nr_seq_reajuste_p;

update	pls_reajuste
set	ie_reajustar_inscricao		= ie_reajustar_inscricao_w,
	ie_reajustar_copartic		= ie_reajustar_copartic_w,
	tx_reajuste_inscricao		= tx_reajuste_inscricao_aux_w,
	tx_reajuste_copartic		= tx_reajuste_copartic_aux_w,
	tx_reajuste_copartic_max	= tx_reaj_copartic_max_aux_w,
	ie_vinculo_coparticipacao	= ie_vinculo_copar_aux_w
where	nr_sequencia			= nr_seq_reajuste_w;

CALL pls_gerar_reajuste_preco(nr_seq_reajuste_w, 'D', 'N', cd_estabelecimento_p, nm_usuario_p);

if (ie_commit_p = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lote_deflator ( nr_seq_lote_ref_p bigint, nr_seq_reajuste_p bigint, tx_deflator_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_motivo_def_p bigint, ds_observacao_p text, ie_commit_p text, tx_reajuste_correto_p bigint, tx_reajuste_copart_p bigint, tx_reajuste_copart_max_p bigint, tx_deflator_copartic_p bigint, tx_deflator_copartic_max_p bigint, nr_seq_lote_novo_p INOUT bigint) FROM PUBLIC;

