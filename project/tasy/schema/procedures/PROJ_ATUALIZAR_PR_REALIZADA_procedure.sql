-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE proj_atualizar_pr_realizada ( nr_seq_cronograma_p bigint, nr_sequencia_p bigint, pr_etapa_p bigint) AS $body$
DECLARE


ie_fase_w		varchar(1);
pr_calc_w		double precision;
pr_etapa_w		double precision;
pr_etapa_ww		double precision;
nr_seq_superior_w	bigint;
qt_hora_prev_w		double precision;
pai_qt_hora_prev_w	double precision;
pr_consultoria_w	double precision;
pr_consultoria_ww	double precision;

c01 CURSOR FOR
	SELECT	qt_hora_prev,
		pr_etapa,
		pr_consultoria
	from	proj_cron_etapa
	where	nr_seq_cronograma = nr_seq_cronograma_p
	and	nr_seq_superior = nr_seq_superior_w
	and	coalesce(qt_hora_prev,0) > 0
	and	coalesce(ie_situacao,'A') = 'A';


BEGIN

select	coalesce(max(nr_seq_superior),0)
into STRICT	nr_seq_superior_w
from	proj_cron_etapa
where	nr_seq_cronograma = nr_seq_cronograma_p
and	nr_sequencia = nr_sequencia_p;


if (nr_seq_superior_w > 0) then
	begin

	select	ie_fase,
		coalesce(qt_hora_prev,0)
	into STRICT	ie_fase_w,
		pai_qt_hora_prev_w
	from	proj_cron_etapa
	where	nr_seq_cronograma = nr_seq_cronograma_p
	and	nr_sequencia = nr_seq_superior_w;

	pr_etapa_w	:= 0;
	pr_consultoria_w := 0;
	OPEN C01;
	LOOP
	FETCH C01 INTO
		qt_hora_prev_w,
		pr_etapa_ww,
		pr_consultoria_ww;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		/*pr_calc_w	:= nvl(round((dividir(nvl(qt_hora_prev_w,0), nvl(pai_qt_hora_prev_w,0)) * 100),2),0);
		pr_etapa_ww	:= nvl(round(dividir((nvl(pr_etapa_ww,0) * nvl(pr_calc_w,0)), 100),2),0);
		pr_etapa_w	:= nvl(round(nvl(pr_etapa_w,0) + nvl(pr_etapa_ww,0),2),0);*/
		if (coalesce(qt_hora_prev_w,0) > 0) and (coalesce(pai_qt_hora_prev_w,0) > 0) then
			pr_calc_w:= coalesce(round((coalesce(qt_hora_prev_w,0)/coalesce(pai_qt_hora_prev_w,0) * 100),4),0);
		else
			pr_calc_w:= 1;
		end if;

		pr_etapa_ww	:= coalesce(round((coalesce(pr_etapa_ww,0) * coalesce(pr_calc_w,0))/ 100,4),0);
		pr_etapa_w	:= coalesce(round((coalesce(pr_etapa_w,0) + coalesce(pr_etapa_ww,0))::numeric,4),0);

		pr_consultoria_ww	:= coalesce(round((coalesce(pr_consultoria_ww,0) * coalesce(pr_calc_w,0))/ 100,4),0);
		pr_consultoria_w	:= coalesce(round((coalesce(pr_consultoria_w,0) + coalesce(pr_consultoria_ww,0))::numeric,4),0);

		end;
	end loop;
	close c01;

	if (pr_etapa_w > 100) then
		pr_etapa_w := 100;
	end if;

	if (pr_consultoria_w > 100) then
		pr_consultoria_w := 100;
	end if;

	if (ie_fase_w = 'S') then
		begin
		update	proj_cron_etapa
		set	pr_etapa = round((pr_etapa_w)::numeric,2),
			pr_consultoria = round((pr_consultoria_w)::numeric,2)
		where	nr_seq_cronograma = nr_seq_cronograma_p
		and	nr_sequencia = nr_seq_superior_w;
		end;
	end if;

	commit;
	CALL proj_atualizar_pr_realizada(nr_seq_cronograma_p,nr_seq_superior_w,pr_etapa_w);
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE proj_atualizar_pr_realizada ( nr_seq_cronograma_p bigint, nr_sequencia_p bigint, pr_etapa_p bigint) FROM PUBLIC;

