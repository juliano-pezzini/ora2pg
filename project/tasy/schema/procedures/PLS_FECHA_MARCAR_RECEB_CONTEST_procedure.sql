-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_fecha_marcar_receb_contest (nr_seq_lote_contest_p bigint, ie_estorno_p text, nm_usuario_p text) AS $body$
DECLARE

							 
ie_envio_recebimento_w		varchar(3);
nr_seq_lote_discussao_w		bigint;
vl_apresentado_w		double precision;
vl_total_contestado_w		double precision;
nr_seq_contestacao_w		bigint;
nr_seq_pls_fatura_w		bigint;
nr_seq_acao_w			bigint;
cd_estabelecimento_w		smallint;
		
C01 CURSOR FOR 
	SELECT	a.nr_sequencia 
	from	pls_contestacao a 
	where	a.nr_seq_lote	= nr_seq_lote_contest_p;


BEGIN 
 
-- Parâmetro [4] - Permite desfazer fechamento de lote de contestação 
if (coalesce(ie_estorno_p,'N') = 'N') then 
	if (nr_seq_lote_contest_p IS NOT NULL AND nr_seq_lote_contest_p::text <> '') then 
		select	max(ie_envio_recebimento), 
			max(vl_apresentado), 
			max(nr_seq_pls_fatura), 
			max(cd_estabelecimento) 
		into STRICT	ie_envio_recebimento_w, 
			vl_apresentado_w, 
			nr_seq_pls_fatura_w, 
			cd_estabelecimento_w 
		from	pls_lote_contestacao a 
		where	a.nr_sequencia	= nr_seq_lote_contest_p;
		 
		/* Atualizar os valores antes das consistencias */
 
		CALL pls_atualizar_valores_contest(nr_seq_lote_contest_p,'N');
		 
		select	sum(a.vl_original) 
		into STRICT	vl_total_contestado_w 
		from	pls_contestacao	a 
		where	a.nr_seq_lote	= nr_seq_lote_contest_p;
				 
		if (vl_total_contestado_w <> vl_apresentado_w) and (vl_apresentado_w IS NOT NULL AND vl_apresentado_w::text <> '') then				 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(175682, 'VL_CONTESTACAO=' || campo_mascara_virgula(vl_total_contestado_w)||';'|| 
									'VL_APRESENTADO=' || campo_mascara_virgula(vl_apresentado_w));
		end if;			
 
		update	pls_lote_contestacao 
		set 	dt_atualizacao	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p, 
			dt_fechamento	= clock_timestamp(), 
			ie_status	= 'E' 
		where	nr_sequencia 	= nr_seq_lote_contest_p;
		 
		/* Contestação recebida */
 
		if (ie_envio_recebimento_w = 'R') then 
			nr_seq_lote_discussao_w := pls_gerar_discussao_receb(nr_seq_lote_contest_p, nr_seq_lote_discussao_w, nm_usuario_p); /* Gerar discussão para a contestação */
		 
			CALL pls_gerar_lote_analise_disc(nr_seq_lote_discussao_w,nm_usuario_p); /* Gerar o lote de análise da discussão */
		end if;	
		 
		/* Faturamento */
 
		if (nr_seq_pls_fatura_w IS NOT NULL AND nr_seq_pls_fatura_w::text <> '') then 
			nr_seq_acao_w := pls_obter_acao_intercambio(	'9', /* Encaminhamento da discussão para análise */
 
							'2', /* Gerar título a pagar */
 
							null, nr_seq_pls_fatura_w, null, null, clock_timestamp(), 'A550', ie_estorno_p, nr_seq_acao_w);
							 
			if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') then	 
				/* Gerar título a pagar */
 
				CALL ptu_gerar_tit_pagar_contest(nr_seq_lote_contest_p,nr_seq_acao_w,cd_estabelecimento_w,nm_usuario_p);
			end if;
		end if;
		 
		commit;
	end if;
end if;
 
-- Estorno das ações que podem ocorrer durante o fechamento da contestação 
if (coalesce(ie_estorno_p,'N') = 'S') then 
	update	pls_lote_contestacao 
	set 	dt_atualizacao	= clock_timestamp(), 
		nm_usuario	= nm_usuario_p, 
		dt_fechamento	 = NULL, 
		ie_status	= 'A' 
	where	nr_sequencia 	= nr_seq_lote_contest_p;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_fecha_marcar_receb_contest (nr_seq_lote_contest_p bigint, ie_estorno_p text, nm_usuario_p text) FROM PUBLIC;

