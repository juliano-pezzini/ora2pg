-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_dicionario_delphi_swing ( cd_funcao_delphi_p bigint, cd_funcao_swing_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_grupo_w		bigint;
ds_grupo_w		varchar(80);
nr_seq_apresent_w	bigint;
nm_usuario_w		varchar(15);
dt_atualizacao_w	timestamp;
nr_seq_grupo_novo_w	bigint;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.ds_agrupamento,
	a.nr_seq_apres,
	a.nm_usuario_nrec,
	a.dt_atualizacao_nrec
from	funcao_grupo_param a
where	a.cd_funcao = cd_funcao_delphi_p
and	not exists (
		SELECT	1
		from	funcao_grupo_param x
		where	x.cd_funcao 		= cd_funcao_swing_p
		and	x.ds_agrupamento	= a.ds_agrupamento);


BEGIN
if (cd_funcao_delphi_p IS NOT NULL AND cd_funcao_delphi_p::text <> '') and (cd_funcao_swing_p IS NOT NULL AND cd_funcao_swing_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	begin
	/* Dicionário de objetos */

	update	dic_objeto
	set	cd_funcao 	= cd_funcao_swing_p,
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where	cd_funcao 	= cd_funcao_delphi_p;

	/* Grupos de parâmetros e Parâmetros vinculados aos respectivos grupos */

	open c01;
	loop
	fetch c01 into	nr_seq_grupo_w,
			ds_grupo_w,
			nr_seq_apresent_w,
			nm_usuario_w,
			dt_atualizacao_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		select	nextval('funcao_grupo_param_seq')
		into STRICT	nr_seq_grupo_novo_w
		;

		insert into funcao_grupo_param(
			cd_funcao,
			nr_sequencia,
			ds_agrupamento,
			nr_seq_apres,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec)
		values (
			cd_funcao_swing_p,
			nr_seq_grupo_novo_w,
			ds_grupo_w,
			nr_seq_apresent_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_w,
			dt_atualizacao_w);

		insert into funcao_parametro(
			cd_funcao,
			nr_sequencia,
			ds_parametro,
			ie_nivel_liberacao,
			nr_seq_apresentacao,
			nr_seq_agrup,
			dt_atualizacao,
			nm_usuario,
			cd_dominio,
			vl_parametro_padrao,
			vl_parametro,
			ds_sql,
			nr_seq_localizador,
			ds_dependencia,
			ds_observacao,
			ds_observacao_cliente)
		SELECT	cd_funcao_swing_p,
			a.nr_sequencia,
			a.ds_parametro,
			a.ie_nivel_liberacao,
			a.nr_seq_apresentacao,
			nr_seq_grupo_novo_w,
			clock_timestamp(),
			a.nm_usuario,
			a.cd_dominio,
			a.vl_parametro_padrao,
			a.vl_parametro,
			a.ds_sql,
			a.nr_seq_localizador,
			a.ds_dependencia,
			a.ds_observacao,
			a.ds_observacao_cliente
		from	funcao_parametro a
		where	a.cd_funcao 	= cd_funcao_delphi_p
		and	a.nr_seq_agrup	= nr_seq_grupo_w
		and	not exists (
				SELECT	1
				from	funcao_parametro x
				where	x.cd_funcao 	= cd_funcao_swing_p
				and	x.nr_sequencia	= a.nr_sequencia);

		end;
	end loop;
	close c01;

	/* Parâmetro não vinculados à grupos */

	insert into funcao_parametro(
		cd_funcao,
		nr_sequencia,
		ds_parametro,
		ie_nivel_liberacao,
		nr_seq_apresentacao,
		--nr_seq_agrup,
		dt_atualizacao,
		nm_usuario,
		cd_dominio,
		vl_parametro_padrao,
		vl_parametro,
		ds_sql,
		nr_seq_localizador,
		ds_dependencia,
		ds_observacao,
		ds_observacao_cliente)
	SELECT	cd_funcao_swing_p,
		a.nr_sequencia,
		a.ds_parametro,
		a.ie_nivel_liberacao,
		a.nr_seq_apresentacao,
		--nr_seq_grupo_novo_w,
		clock_timestamp(),
		a.nm_usuario,
		a.cd_dominio,
		a.vl_parametro_padrao,
		a.vl_parametro,
		a.ds_sql,
		a.nr_seq_localizador,
		a.ds_dependencia,
		a.ds_observacao,
		a.ds_observacao_cliente
	from	funcao_parametro a
	where	a.cd_funcao 	= cd_funcao_delphi_p
	and	coalesce(a.nr_seq_agrup::text, '') = ''
	and	not exists (
			SELECT	1
			from	funcao_parametro x
			where	x.cd_funcao 	= cd_funcao_swing_p
			and	x.nr_sequencia	= a.nr_sequencia);

	/* Histórico dos parâmetros */

	insert into funcao_param_hist(
		nr_sequencia,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_atualizacao,
		nm_usuario,
		cd_funcao,
		nr_seq_param,
		ds_objetivo,
		ds_tecnica)
	SELECT	nextval('funcao_param_hist_seq'),
		a.dt_atualizacao_nrec,
		a.nm_usuario_nrec,
		clock_timestamp(),
		nm_usuario_p,
		cd_funcao_swing_p,
		a.nr_seq_param,
		a.ds_objetivo,
		a.ds_tecnica
	from	funcao_param_hist a
	where	a.cd_funcao = cd_funcao_delphi_p
	and	not exists (
			SELECT	1
			from	funcao_param_hist x
			where	x.cd_funcao	= cd_funcao_swing_p
			and	x.nr_seq_param	= a.nr_seq_param);
	end;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_dicionario_delphi_swing ( cd_funcao_delphi_p bigint, cd_funcao_swing_p bigint, nm_usuario_p text) FROM PUBLIC;

