-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_plano_teste_os ( nr_sequencia_p bigint, nr_seq_caso_teste_p bigint, nr_seq_caso_tst_item_p bigint, nr_seq_caso_tst_it_acao_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w			bigint;
nr_seq_caso_teste_w		bigint;
nr_seq_item_w			bigint;
nr_seq_item_aux_w			bigint;
cd_responsavel_w			bigint;
nr_seq_ordem_serv_w		bigint;
nr_seq_item_acao_w		bigint;
nr_seq_it_acao_aux_w		bigint;
nr_seq_apres_w			integer;
cd_perfil_acao_w			integer;
nr_seq_aplicacao_w		bigint;
nr_seq_anexo_aux_w		bigint;
ds_caso_teste_w			varchar(255);
nm_usuario_exec_w		varchar(15);
ds_item_w			varchar(255);
ds_premissas_acao_w		varchar(2000);
ds_acao_w			varchar(2000);
ds_result_esp_acao_w		varchar(2000);
ds_obs_acao_w			varchar(2000);
ds_arq_anexo_acao_w		varchar(255);

c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ds_item,
		a.nr_seq_apres
	from	teste_caso_teste_item a
	where	a.nr_sequencia = coalesce(nr_seq_caso_tst_item_p,a.nr_sequencia)
	and	a.nr_seq_caso_teste = nr_seq_caso_teste_p;

c02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_apres,
		a.ds_premissas,
		a.ds_acao,
		a.ds_result_esperado,
		a.ds_observacao,
		a.cd_perfil
	from	teste_caso_teste_it_acao a
	where	a.nr_seq_item = nr_seq_item_aux_w
	and	a.nr_sequencia = coalesce(nr_seq_caso_tst_it_acao_p,a.nr_sequencia)
	and not exists (SELECT	1
			from	teste_caso_teste z,
				teste_caso_teste_item y,
				teste_caso_teste_it_acao x
			where	z.nr_sequencia = y.nr_seq_caso_teste
			and	y.nr_sequencia = x.nr_seq_item
			and	a.nr_sequencia = x.nr_seq_acao_ant
			and	z.nr_sequencia = nr_seq_caso_teste_w
			and	z.nr_seq_teste = nr_sequencia_p);

c04 CURSOR FOR
	SELECT	nr_sequencia,
		ds_arquivo
	from	teste_caso_tst_acao_anexo
	where	nr_seq_acao = nr_seq_it_acao_aux_w;


BEGIN

if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') and (nr_seq_caso_teste_p IS NOT NULL AND nr_seq_caso_teste_p::text <> '') then
	begin
	select	max(nr_sequencia)
	into STRICT	nr_seq_caso_teste_w
	from	teste_caso_teste
	where	nr_seq_caso_teste_ant = nr_seq_caso_teste_p
	and	nr_seq_teste = nr_sequencia_p;

	if (coalesce(nr_seq_caso_teste_w::text, '') = '') then
		begin
		select	nextval('teste_caso_teste_seq'),
			nr_seq_apres,
			ds_caso_teste,
			cd_responsavel,
			nr_seq_aplicacao,
			nr_seq_ordem_servico
		into STRICT	nr_seq_caso_teste_w,
			nr_seq_apres_w,
			ds_caso_teste_w,
			cd_responsavel_w,
			nr_seq_aplicacao_w,
			nr_seq_ordem_serv_w
		from	teste_caso_teste
		where	nr_sequencia = nr_seq_caso_teste_p;

		insert into teste_caso_teste(
				nr_sequencia,
				nr_seq_teste,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_responsavel,
				ds_caso_teste,
				nr_seq_caso_teste_ant,
				nr_seq_apres,
				nr_seq_ordem_servico,
				nr_seq_aplicacao)
			values (	nr_seq_caso_teste_w,
				nr_sequencia_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_responsavel_w,
				ds_caso_teste_w,
				nr_seq_caso_teste_p,
				nr_seq_apres_w,
				nr_seq_ordem_serv_w,
				nr_seq_aplicacao_w);
		end;
	end if;

	open c01;
	loop
	fetch c01 into
		nr_seq_item_aux_w,
		ds_item_w,
		nr_seq_apres_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_item_w
		from	teste_caso_teste b,
			teste_caso_teste_item a
		where	b.nr_sequencia = a.nr_seq_caso_teste
		and	a.nr_seq_item_ant = nr_seq_item_aux_w
		and	b.nr_sequencia = nr_seq_caso_teste_w
		and	b.nr_seq_teste = nr_sequencia_p;

		if (coalesce(nr_seq_item_w::text, '') = '') then
			begin
			select	nextval('teste_caso_teste_item_seq')
			into STRICT	nr_seq_item_w
			;

			insert into teste_caso_teste_item(
					nr_sequencia,
					nr_seq_caso_teste,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_apres,
					ds_item,
					nr_seq_item_ant)
				values (	nr_seq_item_w,
					nr_seq_caso_teste_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_apres_w,
					ds_item_w,
					nr_seq_item_aux_w);
			end;
		end if;

		open c02;
		loop
		fetch c02 into
			nr_seq_it_acao_aux_w,
			nr_seq_apres_w,
			ds_premissas_acao_w,
			ds_acao_w,
			ds_result_esp_acao_w,
			ds_obs_acao_w,
			cd_perfil_acao_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			select	nextval('teste_caso_teste_it_acao_seq')
			into STRICT	nr_seq_item_acao_w
			;

			insert into teste_caso_teste_it_acao(
					nr_sequencia,
					nr_seq_item,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_apres,
					ds_premissas,
					ds_acao,
					ds_result_esperado,
					ds_observacao,
					cd_perfil,
					nr_seq_acao_ant)
				values (	nr_seq_item_acao_w,
					nr_seq_item_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_apres_w,
					ds_premissas_acao_w,
					ds_acao_w,
					ds_result_esp_acao_w,
					ds_obs_acao_w,
					cd_perfil_acao_w,
					nr_seq_it_acao_aux_w);
			open c04;
			loop
			fetch c04 into
				nr_seq_anexo_aux_w,
				ds_arq_anexo_acao_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */
				begin
				insert into teste_caso_tst_acao_anexo(
						nr_sequencia,
						nr_seq_acao,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ds_arquivo,
						nr_seq_anexo_ant)
					values (	nextval('teste_caso_tst_acao_anexo_seq'),
						nr_seq_item_acao_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						ds_arq_anexo_acao_w,
						nr_seq_anexo_aux_w);
				end;
			end loop;
			close c04;
			end;
		end loop;
		close c02;
		end;
	end loop;
	close c01;
	commit;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_plano_teste_os ( nr_sequencia_p bigint, nr_seq_caso_teste_p bigint, nr_seq_caso_tst_item_p bigint, nr_seq_caso_tst_it_acao_p bigint, nm_usuario_p text) FROM PUBLIC;

