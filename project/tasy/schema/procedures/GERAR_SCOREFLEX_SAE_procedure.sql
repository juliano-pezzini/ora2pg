-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_scoreflex_sae ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_atendimento_w		bigint;
qt_reg_w			bigint;
cd_profissional_w		varchar(10);
nr_seq_gca_atend_w		bigint;
nr_seq_result_w			bigint;
nr_seq_item_w			bigint;
qt_pontuacao_w			bigint;
qt_pontuacao_total_w		bigint	:= 0;
NR_SEQ_SCORE_FLEX_w		bigint;
nr_sequencia_w			bigint;
cd_pessoa_fisica_w		varchar(10);
nr_seq_item_result_w			bigint;
IE_RESULTADO_SCORE_FLEX_w	varchar(20);


C01 CURSOR FOR
	SELECT	distinct c.NR_SEQ_SCORE_FLEX
	from	pe_prescricao a,
		pe_prescr_item_result b,
		pe_item_examinar c,
		pe_item_tipo_item d,
		pe_tipo_item e,
		pe_item_resultado f
	where	a.nr_sequencia	= b.nr_seq_prescr
	and	a.nr_sequencia	= nr_sequencia_p
	and	b.nr_seq_item	= c.nr_sequencia
	and	d.nr_seq_item	= c.nr_sequencia
	and	e.nr_sequencia	= d.nr_seq_tipo_item
	and	(c.NR_SEQ_SCORE_FLEX IS NOT NULL AND c.NR_SEQ_SCORE_FLEX::text <> '')
	and	(c.NR_SEQ_SCORE_FLEX_ITEM IS NOT NULL AND c.NR_SEQ_SCORE_FLEX_ITEM::text <> '')
	and	(f.IE_RESULTADO_SCORE_FLEX IS NOT NULL AND f.IE_RESULTADO_SCORE_FLEX::text <> '')
	and	f.nr_sequencia	= b.nr_seq_result;


C02 CURSOR FOR
	SELECT	nr_sequencia,
			nr_seq_item
	from	escala_eif_item
	where	nr_seq_escala = nr_sequencia_w;


BEGIN
select	max(a.cd_prescritor),
		max(a.nr_atendimento),
		max(a.cd_pessoa_fisica)
into STRICT	cd_profissional_w,
		nr_atendimento_w,
		cd_pessoa_fisica_w
from	pe_prescricao a,
	pe_prescr_item_result b
where	a.nr_sequencia = b.nr_seq_prescr
and	a.nr_sequencia = nr_sequencia_p;


select	count(*)
into STRICT	qt_reg_w
from	pe_prescricao a,
	pe_prescr_item_result b,
	pe_item_examinar c,
	pe_item_tipo_item d,
	pe_tipo_item e,
	pe_item_resultado f
where	a.nr_sequencia	= b.nr_seq_prescr
and	a.nr_sequencia	= nr_sequencia_p
and	b.nr_seq_item	= c.nr_sequencia
and	d.nr_seq_item	= c.nr_sequencia
and	e.nr_sequencia	= d.nr_seq_tipo_item
and	(c.NR_SEQ_SCORE_FLEX IS NOT NULL AND c.NR_SEQ_SCORE_FLEX::text <> '')
and	(c.NR_SEQ_SCORE_FLEX_ITEM IS NOT NULL AND c.NR_SEQ_SCORE_FLEX_ITEM::text <> '')
and	(f.IE_RESULTADO_SCORE_FLEX IS NOT NULL AND f.IE_RESULTADO_SCORE_FLEX::text <> '')
and	f.nr_sequencia	= b.nr_seq_result;

if (qt_reg_w	> 0) then

	open C01;
	loop
	fetch C01 into
		NR_SEQ_SCORE_FLEX_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select	nextval('escala_eif_seq')
		into STRICT	nr_sequencia_w
		;

		insert into ESCALA_EIF(
					 NR_SEQUENCIA,
					 DT_ATUALIZACAO,
					 NM_USUARIO,
					 DT_ATUALIZACAO_NREC,
					 NM_USUARIO_NREC,
					 NR_SEQ_ESCALA,
					 NR_ATENDIMENTO,
					 IE_SITUACAO,
					 DT_LIBERACAO,
					 DT_INATIVACAO,
					 NM_USUARIO_INATIVACAO,
					 DS_JUSTIFICATIVA,
					 CD_PROFISSIONAL,
					 QT_PONTOS,
					 DT_AVALIACAO,
					 NR_SEQ_RESULT,
					 CD_PESSOA_FISICA)
				values (
					 nr_sequencia_w,
					 clock_timestamp(),
					 nm_usuario_p,
					 clock_timestamp(),
					 nm_usuario_p,
					 NR_SEQ_SCORE_FLEX_w,
					 nr_atendimento_w,
					 'A',
					 clock_timestamp(),
					 null,
					 null,
					 null,
					 cd_profissional_w,
					 0,
					 clock_timestamp(),
					 null,
					 cd_pessoa_fisica_w);

					/*
					gerar_itens_escala_eif(	NR_SEQ_SCORE_FLEX_w,
											nr_sequencia_w,
											nm_usuario_p,
											'S');
					*/
					open C02;
					loop
					fetch C02 into
						nr_seq_item_result_w,
						nr_seq_item_w;
					EXIT WHEN NOT FOUND; /* apply on C02 */
						begin

						select	max(f.IE_RESULTADO_SCORE_FLEX)
						into STRICT	IE_RESULTADO_SCORE_FLEX_w
						from	pe_prescricao a,
							pe_prescr_item_result b,
							pe_item_examinar c,
							pe_item_tipo_item d,
							pe_tipo_item e,
							pe_item_resultado f
						where	a.nr_sequencia	= b.nr_seq_prescr
						and	a.nr_sequencia	= nr_sequencia_p
						and	b.nr_seq_item	= c.nr_sequencia
						and	d.nr_seq_item	= c.nr_sequencia
						and	e.nr_sequencia	= d.nr_seq_tipo_item
						and	(c.NR_SEQ_SCORE_FLEX IS NOT NULL AND c.NR_SEQ_SCORE_FLEX::text <> '')
						and	(c.NR_SEQ_SCORE_FLEX_ITEM IS NOT NULL AND c.NR_SEQ_SCORE_FLEX_ITEM::text <> '')
						and	c.NR_SEQ_SCORE_FLEX_ITEM = nr_seq_item_w
						and	(f.IE_RESULTADO_SCORE_FLEX IS NOT NULL AND f.IE_RESULTADO_SCORE_FLEX::text <> '')
						and	f.nr_sequencia	= b.nr_seq_result;

						if (IE_RESULTADO_SCORE_FLEX_w IS NOT NULL AND IE_RESULTADO_SCORE_FLEX_w::text <> '') then
							update	escala_eif_item
							set		IE_RESULTADO = IE_RESULTADO_SCORE_FLEX_w
							where	nr_sequencia = nr_seq_item_result_w;
						end if;


						end;
					end loop;
					close C02;

		CALL gerar_resultado_escala_eif(nr_sequencia_w);
		end;
	end loop;
	close C01;

end if;



if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_scoreflex_sae ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

