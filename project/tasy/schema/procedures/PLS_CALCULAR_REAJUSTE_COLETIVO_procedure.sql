-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_calcular_reajuste_coletivo ( nr_seq_reajuste_p bigint, ie_opcao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*
ie_opcao_p
	C = Calcular
	D = Desfazer cálculo
	L = Liberar Reajuste
	B = Aplicar reajuste beneficiário
	LB = Liberar todos os lote de reajuste beneficiários
*/
nr_seq_contrato_w	bigint;
nr_seq_contrato_ww	bigint;
nr_seq_reajuste_w	bigint;
ds_inconsistencia_w	varchar(255);
ds_erro_w		varchar(255);
dt_reajuste_ww		timestamp;
dt_reajuste_w		timestamp;
nr_seq_lote_reaj_seg_w	bigint;
nr_seq_intercambio_w	bigint;
nr_seq_intercambio_ww	bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_contrato,
		dt_reajuste,
		nr_seq_intercambio
	from	pls_reajuste
	where	nr_seq_lote_referencia	= nr_seq_reajuste_p;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_lote_reaj_segurado
	where	nr_seq_lote_referencia = nr_seq_reajuste_p
	and	ie_status		= '3';


BEGIN

select	max(nr_seq_contrato),
	max(dt_reajuste),
	max(nr_seq_intercambio)
into STRICT	nr_seq_contrato_w,
	dt_reajuste_w,
	nr_seq_intercambio_w
from	pls_reajuste
where	nr_sequencia	= nr_seq_reajuste_p;

if (ie_opcao_p = 'C') then
	if	((coalesce(nr_seq_contrato_w,0) <> 0) or (coalesce(nr_seq_intercambio_w,0) <> 0)) then
		/* Lepinski - Comentado, pois já chama a consistencia na rotina PLS_Gerar_reajuste_preco, chamada abaixo
		pls_consistir_tabela_preco(nr_seq_reajuste_p, ds_inconsistencia_w, ds_erro_w);

		if	(ds_erro_w is not null) then
			wheb_mensagem_pck.exibir_mensagem_abort( 186813, 'DS_TABELAS='||ds_erro_w);
			Tabelas já calculadas e não liberadas em outro reajuste. Verifique!'||chr(13)||'Tabela(s): '||ds_erro_w
		end if;*/
		CALL PLS_Gerar_reajuste_preco(nr_seq_reajuste_p, 'C', 'N', cd_estabelecimento_p, nm_usuario_p);
	elsif (coalesce(nr_seq_contrato_w,0) = 0) then
		open C01;
		loop
		fetch C01 into
			nr_seq_reajuste_w,
			nr_seq_contrato_ww,
			dt_reajuste_ww,
			nr_seq_intercambio_ww;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			/* Lepinski - Comentado, pois já chama a consistencia na rotina PLS_Gerar_reajuste_preco, chamada abaixo
			pls_consistir_tabela_preco(nr_seq_reajuste_w, ds_inconsistencia_w, ds_erro_w);

			if	(ds_erro_w is not null) then
				wheb_mensagem_pck.exibir_mensagem_abort( 186813, 'DS_TABELAS='||ds_erro_w);
				Tabelas já calculadas e não liberadas em outro reajuste. Verifique!'||chr(13)||'Tabela(s): '||ds_erro_w
			end if;*/
			CALL PLS_Gerar_reajuste_preco(nr_seq_reajuste_w, 'C', 'N', cd_estabelecimento_p, nm_usuario_p);
			end;
		end loop;
		close C01;
	end if;

	update	pls_reajuste
	set	ie_status = '3'
	where	nr_sequencia = nr_seq_reajuste_p;
elsif (ie_opcao_p = 'D') then
	if	((coalesce(nr_seq_contrato_w,0) <> 0) or (coalesce(nr_seq_intercambio_w,0) <> 0)) then
		CALL PLS_Desfazer_calculo_reajuste(nr_seq_reajuste_p,nm_usuario_p);
	elsif (coalesce(nr_seq_contrato_w,0) = 0) then
		open C01;
		loop
		fetch C01 into
			nr_seq_reajuste_w,
			nr_seq_contrato_ww,
			dt_reajuste_ww,
			nr_seq_intercambio_ww;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			CALL PLS_Desfazer_calculo_reajuste(nr_seq_reajuste_w,nm_usuario_p);
			end;
		end loop;
		close C01;
	end if;
	update	pls_reajuste
	set	ie_status = '1'
	where	nr_sequencia = nr_seq_reajuste_p;
elsif (ie_opcao_p = 'L') then
	if	((coalesce(nr_seq_contrato_w,0) <> 0) or (coalesce(nr_seq_intercambio_w,0) <> 0)) then
		CALL pls_aplicar_reajuste(nr_seq_reajuste_p, null, nr_seq_contrato_w, 'N', nm_usuario_p, cd_estabelecimento_p);
		/*pls_reajustar_co_participacao(nr_seq_reajuste_p, nr_seq_contrato_w, cd_estabelecimento_p, nm_usuario_p);	Lepinski - Comentado, pois a rotina é chamada na pls_aplicar_reajuste */

		/*pls_reajustar_via_carteira(nr_seq_reajuste_p, nr_seq_contrato_w, cd_estabelecimento_p, nm_usuario_p);	Lepinski - Comentado, pois a rotina é chamada na pls_aplicar_reajuste  */

	elsif (coalesce(nr_seq_contrato_w,0) = 0) then
		open C01;
		loop
		fetch C01 into
			nr_seq_reajuste_w,
			nr_seq_contrato_ww,
			dt_reajuste_ww,
			nr_seq_intercambio_ww;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			CALL pls_aplicar_reajuste(nr_seq_reajuste_w, null, nr_seq_contrato_ww, 'N', nm_usuario_p, cd_estabelecimento_p);
			/* pls_reajustar_co_participacao(nr_seq_reajuste_w, nr_seq_contrato_ww, cd_estabelecimento_p, nm_usuario_p); 		Lepinski - Comentado, pois a rotina é chamada na pls_aplicar_reajuste */

			/* pls_reajustar_via_carteira(nr_seq_reajuste_p, nr_seq_contrato_w, cd_estabelecimento_p, nm_usuario_p); 		Lepinski - Comentado, pois a rotina é chamada na pls_aplicar_reajuste  */

			end;
		end loop;
		close C01;

		update	pls_reajuste
		set	ie_status	= '2',
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	nr_sequencia	= nr_seq_reajuste_p;
	end if;
elsif (ie_opcao_p = 'B') then
	if	((coalesce(nr_seq_contrato_w,0) <> 0) or (coalesce(nr_seq_intercambio_w,0) <> 0)) then
		--pls_aplicar_reajuste_benef(nr_seq_reajuste_p, 'A', nm_usuario_p, cd_estabelecimento_p);
		CALL pls_aplicar_reajuste_segurado(nr_seq_contrato_w, nr_seq_intercambio_w, nr_seq_reajuste_p, trunc(dt_reajuste_w,'month'),'N', nm_usuario_p, cd_estabelecimento_p);
	elsif (coalesce(nr_seq_contrato_w,0) = 0) then
		open C01;
		loop
		fetch C01 into
			nr_seq_reajuste_w,
			nr_seq_contrato_ww,
			dt_reajuste_ww,
			nr_seq_intercambio_ww;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			CALL pls_aplicar_reajuste_segurado(nr_seq_contrato_ww, nr_seq_intercambio_ww, nr_seq_reajuste_w, trunc(dt_reajuste_ww,'month'),'N', nm_usuario_p, cd_estabelecimento_p);
			end;
		end loop;
		close C01;
	end if;
	update	pls_reajuste
	set	ie_status = '2'
	where	nr_sequencia = nr_seq_reajuste_p;
elsif (ie_opcao_p = 'LB') then
	open C02;
	loop
	fetch C02 into
		nr_seq_lote_reaj_seg_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		CALL pls_aplicar_reaj_benef(nr_seq_lote_reaj_seg_w, 'A', nm_usuario_p);
		end;
	end loop;
	close C02;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_calcular_reajuste_coletivo ( nr_seq_reajuste_p bigint, ie_opcao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

