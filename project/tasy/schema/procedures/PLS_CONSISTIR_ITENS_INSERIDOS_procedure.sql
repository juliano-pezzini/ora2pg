-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_itens_inseridos ( nr_seq_auditoria_p bigint, nr_seq_item_p bigint, nr_seq_requisicao_p bigint, nr_seq_guia_p bigint, ie_tipo_item_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_tipo_anexo_p text, nr_seq_proc_p INOUT bigint, nr_seq_mat_p INOUT bigint) AS $body$
DECLARE

/*
ie_tipo_item_p
P - Procediemnto
M - Material
*/
ie_status_w			varchar(4);
ie_tipo_processo_w		varchar(2);

nr_seq_proc_w			bigint;
nr_seq_mat_w			bigint;
nr_seq_ocorrencia_w		bigint;
nr_seq_grupo_w			bigint;
nr_seq_ordem_w			bigint;

qt_grupos_w			bigint;
qt_grupos_sem_auditar_w		bigint;

nr_seq_guia_w			bigint;
nr_seq_segurado_w		bigint;

ie_tipo_intercambio_w		varchar(10);

nr_seq_fluxo_w			bigint;
ie_tipo_inclusao_grupo_w	varchar(2);
nr_seq_ordem_atual_w		bigint;
nr_sequencia_auditoria_atual_w	bigint;	
nr_seq_grupo_novo_w		bigint;	

ie_inserir_grupo_item_w		pls_param_analise_aut.ie_inserir_grupo_item%type;

ie_status_atual_w		varchar(4);
ie_status_solicitacao_w		pls_auditoria_item.ie_status_solicitacao%type;
ie_status_analise_w		pls_auditoria_item.ie_status%type;

C01 CURSOR(nr_seq_proc_pc bigint, nr_seq_mat_pc bigint) FOR
	SELECT	nr_seq_ocorrencia
	from	pls_ocorrencia_benef
	where	nr_seq_proc	= nr_seq_proc_pc
	and	nr_seq_requisicao = nr_seq_requisicao_p
	
union

	SELECT	nr_seq_ocorrencia
	from	pls_ocorrencia_benef
	where	nr_seq_mat	= nr_seq_mat_pc
	and	nr_seq_requisicao = nr_seq_requisicao_p;

C02 CURSOR(nr_seq_proc_pc bigint, nr_seq_mat_pc bigint) FOR
	SELECT	nr_seq_ocorrencia
	from	pls_ocorrencia_benef
	where	nr_seq_proc	= nr_seq_proc_pc
	and	nr_seq_guia_plano = nr_seq_guia_p
	
union

	SELECT	nr_seq_ocorrencia
	from	pls_ocorrencia_benef
	where	nr_seq_mat	= nr_seq_mat_pc
	and	nr_seq_guia_plano = nr_seq_guia_p;

cMatAud CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_mat_origem
	from	pls_auditoria_item
	where	nr_seq_auditoria	= nr_seq_auditoria_p
	and	nr_sequencia		<> nr_seq_item_p
	and	coalesce(nr_seq_proc_origem::text, '') = ''
	and	(nr_seq_mat_origem IS NOT NULL AND nr_seq_mat_origem::text <> '')
	and	ie_status_solicitacao	in ('A','N');

cProcAud CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_proc_origem
	from	pls_auditoria_item
	where	nr_seq_auditoria	= nr_seq_auditoria_p
	and	nr_sequencia		<> nr_seq_item_p
	and	coalesce(nr_seq_mat_origem::text, '') = ''
	and	(nr_seq_proc_origem IS NOT NULL AND nr_seq_proc_origem::text <> '')
	and	ie_status_solicitacao	in ('A','N');

BEGIN

if (nr_seq_requisicao_p	<> 0) then
	begin
		select	ie_tipo_processo,
			ie_tipo_intercambio,
			nr_seq_segurado
		into STRICT	ie_tipo_processo_w,
			ie_tipo_intercambio_w,
			nr_seq_segurado_w
		from	pls_requisicao
		where	nr_sequencia	= nr_seq_requisicao_p;
	exception
	when others then
		nr_seq_segurado_w	:= null;
		ie_tipo_processo_w	:= null;
		ie_tipo_intercambio_w	:= 'X';
	end;
	if (ie_tipo_item_p	= 'P') then
		select	nextval('pls_requisicao_proc_seq')
		into STRICT	nr_seq_proc_w
		;

		insert into pls_requisicao_proc(nr_sequencia, ie_status, cd_procedimento,
			ie_origem_proced, dt_atualizacao,qt_solicitado,
			nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
			nr_seq_requisicao, ie_estagio, qt_proc_executado,
			ie_origem_inclusao, ie_tipo_anexo)
		(SELECT	nr_seq_proc_w, 'U', cd_procedimento,
			ie_origem_proced, clock_timestamp(), qt_ajuste,
			nm_usuario_p, clock_timestamp(), nm_usuario_p,
			nr_seq_requisicao_p, 'AE', 0,
			'T', ie_tipo_anexo_p
		from	pls_auditoria_item
		where	nr_seq_auditoria	= nr_seq_auditoria_p
		and	nr_sequencia		= nr_seq_item_p
		and	coalesce(nr_seq_proc_origem::text, '') = ''
		and	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> ''));

		if (coalesce(ie_tipo_anexo_p::text, '') = '') then
			CALL pls_consistir_requisicao_proc(	nr_seq_proc_w, cd_estabelecimento_p, nm_usuario_p);
			CALL pls_gerar_ocor_aut_combinada(	nr_seq_segurado_w, null, nr_seq_requisicao_p,
							null, null, null,
							null, null, null,
							nm_usuario_p, cd_estabelecimento_p);

			/*aaschlote 16/10/2013 656658 - Rotina genérica para a consistência da liminar júridica de ocorrência*/

			CALL pls_consist_lim_ocorr_req_guia(nr_seq_segurado_w,nr_seq_requisicao_p,null,ie_tipo_intercambio_w,cd_estabelecimento_p,nm_usuario_p);

			CALL pls_inserir_ocorr_cabeca_item(	nr_seq_requisicao_p, nr_seq_proc_w, null, nm_usuario_p);

			CALL pls_ger_ocor_glos_aud_req_item(	nr_seq_auditoria_p, nr_seq_item_p, nr_seq_proc_w, 0, nm_usuario_p);
		end if;	

		if (ie_tipo_processo_w	= 'I') then
			CALL pls_gerar_de_para_req_intercam(	nr_seq_proc_w, null, null,
							null, null, null,
							null, cd_estabelecimento_p, nm_usuario_p);
		end if;

		begin
		select	ie_status
		into STRICT	ie_status_w
		from	pls_requisicao_proc
		where	nr_sequencia	= nr_seq_proc_w;
		exception
		when others then
			ie_status_w	:= 'X';
		end;

		update	pls_auditoria_item
		set	ie_status		= CASE WHEN ie_status_w='A' THEN  'P' WHEN ie_status_w='S' THEN  'A' WHEN ie_status_w='I' THEN  'A'  ELSE 'P' END ,
			ie_status_solicitacao	= CASE WHEN ie_status_w='A' THEN  'P' WHEN ie_status_w='S' THEN  'A' WHEN ie_status_w='I' THEN  'A'  ELSE 'P' END ,
			nr_seq_proc_origem	= nr_seq_proc_w
		where	nr_sequencia		= nr_seq_item_p;
		
		nr_seq_proc_p	:= nr_seq_proc_w;
		
	elsif (ie_tipo_item_p	= 'M') then
		select	nextval('pls_requisicao_mat_seq')
		into STRICT	nr_seq_mat_w
		;

		insert into pls_requisicao_mat(nr_sequencia, ie_status, nr_seq_material,
			dt_atualizacao, nm_usuario, qt_solicitado,
			dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_requisicao,
			ie_estagio, vl_material, qt_mat_executado,
			ie_origem_inclusao, ie_tipo_anexo, cd_ref_fabricante_imp,
			nr_registro_anvisa)
		(SELECT	nr_seq_mat_w, 'U', nr_seq_material,
			clock_timestamp(), nm_usuario_p, qt_ajuste,
			clock_timestamp(), nm_usuario_p, nr_seq_requisicao_p,
			'AE', vl_item, 0,
			'T', ie_tipo_anexo_p, cd_ref_fabricante_imp,
			nr_registro_anvisa
		from	pls_auditoria_item
		where	nr_seq_auditoria	= nr_seq_auditoria_p
		and	nr_sequencia		= nr_seq_item_p
		and	coalesce(nr_seq_mat_origem::text, '') = ''
		and	(nr_seq_material IS NOT NULL AND nr_seq_material::text <> ''));

		if (coalesce(ie_tipo_anexo_p::text, '') = '') then
			CALL pls_consistir_requisicao_mat(	nr_seq_mat_w, cd_estabelecimento_p, nm_usuario_p);
			CALL pls_gerar_ocor_aut_combinada(	nr_seq_segurado_w, null, nr_seq_requisicao_p,
							null, null, null,
							null, null, null,
							nm_usuario_p, cd_estabelecimento_p);
			/*aaschlote 16/10/2013 656658 - Rotina genérica para a consistência da liminar júridica de ocorrência*/

			CALL pls_consist_lim_ocorr_req_guia(nr_seq_segurado_w,nr_seq_requisicao_p,null,ie_tipo_intercambio_w,cd_estabelecimento_p,nm_usuario_p);
			
			CALL pls_inserir_ocorr_cabeca_item(	nr_seq_requisicao_p, null, nr_seq_mat_w, nm_usuario_p);

			CALL pls_ger_ocor_glos_aud_req_item(	nr_seq_auditoria_p, nr_seq_item_p, 0, nr_seq_mat_w, nm_usuario_p);
		end if;

		if (ie_tipo_processo_w	= 'I') then
			CALL pls_gerar_de_para_req_intercam(	null, nr_seq_mat_w, null,
							null, null, null,
							null, cd_estabelecimento_p, nm_usuario_p);
		end if;

		begin
		select	ie_status
		into STRICT	ie_status_w
		from	pls_requisicao_mat
		where	nr_sequencia	= nr_seq_mat_w;
		exception
		when others then
			ie_status_w	:= 'X';
		end;

		update	pls_auditoria_item
		set	ie_status		= CASE WHEN ie_status_w='A' THEN  'P' WHEN ie_status_w='S' THEN  'A' WHEN ie_status_w='I' THEN  'A'  ELSE 'P' END ,
			ie_status_solicitacao	= CASE WHEN ie_status_w='A' THEN  'P' WHEN ie_status_w='S' THEN  'A' WHEN ie_status_w='I' THEN  'A'  ELSE 'P' END ,
			nr_seq_mat_origem	= nr_seq_mat_w
		where	nr_sequencia		= nr_seq_item_p;
		
		nr_seq_mat_p	:= nr_seq_mat_w;
	end if;

	if (ie_status_w	<> 'X') then
		if (ie_status_w	= 'A') then
			for r_C01_w in C01(nr_seq_proc_w, nr_seq_mat_w) loop
				begin
					CALL pls_insere_grupo_analise( nr_seq_auditoria_p, r_C01_w.nr_seq_ocorrencia, null,
								  nr_seq_requisicao_p, nm_usuario_p, cd_estabelecimento_p);	
				end;
			end loop;
		end if;
	end if;

	for cProcAud_w in cProcAud loop
		begin			
			select	ie_status
			into STRICT	ie_status_atual_w
			from	pls_requisicao_proc
			where	nr_sequencia		= cProcAud_w.nr_seq_proc_origem;
		exception
		when others then
			ie_status_atual_w := 'X';
		end;

		select	ie_status_solicitacao,
			ie_status
		into STRICT	ie_status_solicitacao_w,
			ie_status_analise_w
		from	pls_auditoria_item
		where	nr_sequencia		= cProcAud_w.nr_sequencia;

		if (ie_status_atual_w <> 'X') and (ie_status_atual_w = 'A') then
			if (ie_status_analise_w <> ie_status_solicitacao_w) then
				update	pls_requisicao_proc
				set	ie_status		= CASE WHEN ie_status_analise_w='A' THEN  'S' WHEN ie_status_analise_w='N' THEN  'N'  ELSE ie_status END
				where	nr_sequencia		= cProcAud_w.nr_seq_proc_origem;
			else
				update	pls_requisicao_proc
				set	ie_status		= CASE WHEN ie_status_solicitacao_w='A' THEN  'S' WHEN ie_status_solicitacao_w='N' THEN  'N'  ELSE ie_status END
				where	nr_sequencia		= cProcAud_w.nr_seq_proc_origem;
			end if;

			CALL pls_requisicao_gravar_hist(nr_seq_requisicao_p,'L','Há ocorrências geradas para o procedimento, sequência: ' || cProcAud_w.nr_seq_proc_origem || ' durante o processo de consistência dos itens inseridos na análise.',null,nm_usuario_p);
		end if;
	end loop;

	for cMatAud_w in cMatAud loop
		begin			
			select	ie_status
			into STRICT	ie_status_atual_w
			from	pls_requisicao_mat
			where	nr_sequencia		= cMatAud_w.nr_seq_mat_origem;
		exception
		when others then
			ie_status_atual_w := 'X';
		end;

		select	ie_status_solicitacao,
			ie_status
		into STRICT	ie_status_solicitacao_w,
			ie_status_analise_w
		from	pls_auditoria_item
		where	nr_sequencia		= cMatAud_w.nr_sequencia;

		if (ie_status_atual_w <> 'X') and (ie_status_atual_w = 'A') then
			if (ie_status_analise_w <> ie_status_solicitacao_w) then
				update	pls_requisicao_mat
				set	ie_status		= CASE WHEN ie_status_analise_w='A' THEN  'S' WHEN ie_status_analise_w='N' THEN  'N'  ELSE ie_status END
				where	nr_sequencia		= cMatAud_w.nr_seq_mat_origem;
			else
				update	pls_requisicao_mat
				set	ie_status		= CASE WHEN ie_status_solicitacao_w='A' THEN  'S' WHEN ie_status_solicitacao_w='N' THEN  'N'  ELSE ie_status END
				where	nr_sequencia		= cMatAud_w.nr_seq_mat_origem;
			end if;

			CALL pls_requisicao_gravar_hist(nr_seq_requisicao_p,'L','Há ocorrências geradas para o material, sequência: ' || cMatAud_w.nr_seq_mat_origem || ' durante o processo de consistência dos itens inseridos na análise.',null,nm_usuario_p);
		end if;
	end loop;
end if;

if (nr_seq_guia_p	<> 0) then
	begin
		select	ie_tipo_processo,
			nr_seq_segurado,
			ie_tipo_intercambio
		into STRICT	ie_tipo_processo_w,
			nr_seq_segurado_w,
			ie_tipo_intercambio_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_p;
	exception
	when others then
		ie_tipo_processo_w	:= null;
		ie_tipo_intercambio_w	:= 'X';
	end;
	if (ie_tipo_item_p	= 'P') then
		dbms_application_info.SET_ACTION('INCPROC');

		select	nextval('pls_guia_plano_proc_seq')
		into STRICT	nr_seq_proc_w
		;

		insert into pls_guia_plano_proc(nr_sequencia, ie_status, cd_procedimento,
			ie_origem_proced, dt_atualizacao,qt_solicitada,
			nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
			nr_seq_guia, ie_origem_inclusao, ie_tipo_anexo)
		(SELECT	nr_seq_proc_w, 'U', cd_procedimento,
			ie_origem_proced, clock_timestamp(), coalesce(qt_ajuste,0),
			nm_usuario_p, clock_timestamp(), nm_usuario_p,
			nr_seq_guia_p, 'T', ie_tipo_anexo_p
		from	pls_auditoria_item
		where	nr_seq_auditoria	= nr_seq_auditoria_p
		and	nr_sequencia		= nr_seq_item_p
		and	coalesce(nr_seq_proc_origem::text, '') = ''
		and	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> ''));

		if (coalesce(ie_tipo_anexo_p::text, '') = '') then
			CALL pls_consistir_proc_guia(nr_seq_guia_p, cd_estabelecimento_p, nm_usuario_p);
			CALL pls_gerar_ocor_aut_combinada(	nr_seq_segurado_w, nr_seq_guia_p, null,
							null, null, null,
							null, null, null,
							nm_usuario_p, cd_estabelecimento_p);

			/*aaschlote 16/10/2013 656658 - Rotina genérica para a consistência da liminar júridica de ocorrência*/

			CALL pls_consist_lim_ocorr_req_guia(nr_seq_segurado_w,null,nr_seq_guia_p,ie_tipo_intercambio_w,cd_estabelecimento_p,nm_usuario_p);

			CALL pls_ger_ocor_glos_aud_guia_itm(	nr_seq_auditoria_p, nr_seq_item_p, nr_seq_proc_w, 0, nm_usuario_p);
		end if;

		begin
		select	ie_status
		into STRICT	ie_status_w
		from	pls_guia_plano_proc
		where	nr_sequencia	= nr_seq_proc_w;
		exception
		when others then
			ie_status_w	:= 'X';
		end;

		update	pls_auditoria_item
		set	ie_status		= CASE WHEN ie_status_w='A' THEN  'P' WHEN ie_status_w='S' THEN  'A' WHEN ie_status_w='I' THEN  'A'  ELSE 'P' END ,
			ie_status_solicitacao	= CASE WHEN ie_status_w='A' THEN  'P' WHEN ie_status_w='S' THEN  'A' WHEN ie_status_w='I' THEN  'A'  ELSE 'P' END ,
			nr_seq_proc_origem	= nr_seq_proc_w
		where	nr_sequencia		= nr_seq_item_p;

		nr_seq_proc_p	:= nr_seq_proc_w;

	elsif (ie_tipo_item_p	= 'M') then
		dbms_application_info.SET_ACTION('INCMATMED');

		select	nextval('pls_guia_plano_mat_seq')
		into STRICT	nr_seq_mat_w
		;

		insert into pls_guia_plano_mat(nr_sequencia, ie_status, nr_seq_material,
			dt_atualizacao, nm_usuario, qt_solicitada,
			dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_guia,
			vl_material, ie_origem_inclusao, ie_tipo_anexo, cd_ref_fabricante_imp,
			nr_registro_anvisa)
		(SELECT	nr_seq_mat_w, 'U', nr_seq_material,
			clock_timestamp(), nm_usuario_p, coalesce(qt_ajuste,0),
			clock_timestamp(), nm_usuario_p, nr_seq_guia_p,
			vl_item, 'T', ie_tipo_anexo_p, cd_ref_fabricante_imp,
			nr_registro_anvisa
		from	pls_auditoria_item
		where	nr_seq_auditoria	= nr_seq_auditoria_p
		and	nr_sequencia		= nr_seq_item_p
		and	coalesce(nr_seq_mat_origem::text, '') = ''
		and	(nr_seq_material IS NOT NULL AND nr_seq_material::text <> ''));

		if (coalesce(ie_tipo_anexo_p::text, '') = '') then
			CALL pls_consistir_mat_guia(nr_seq_guia_p, cd_estabelecimento_p, nm_usuario_p);
			CALL pls_gerar_ocor_aut_combinada(	nr_seq_segurado_w, nr_seq_guia_p, null,
							null, null, null,
							null, null, null,
							nm_usuario_p, cd_estabelecimento_p);

			/*aaschlote 16/10/2013 656658 - Rotina genérica para a consistência da liminar júridica de ocorrência*/

			CALL pls_consist_lim_ocorr_req_guia(nr_seq_segurado_w,null,nr_seq_guia_p,ie_tipo_intercambio_w,cd_estabelecimento_p,nm_usuario_p);

			CALL pls_ger_ocor_glos_aud_guia_itm(	nr_seq_auditoria_p, nr_seq_item_p, 0, nr_seq_mat_w, nm_usuario_p);
		end if;

		begin
		select	ie_status
		into STRICT	ie_status_w
		from	pls_guia_plano_mat
		where	nr_sequencia	= nr_seq_mat_w;
		exception
		when others then
			ie_status_w	:= 'X';
		end;

		update	pls_auditoria_item
		set	ie_status		= CASE WHEN ie_status_w='A' THEN  'P' WHEN ie_status_w='S' THEN  'A' WHEN ie_status_w='I' THEN  'A'  ELSE 'P' END ,
			ie_status_solicitacao	= CASE WHEN ie_status_w='A' THEN  'P' WHEN ie_status_w='S' THEN  'A' WHEN ie_status_w='I' THEN  'A'  ELSE 'P' END ,
			nr_seq_mat_origem	= nr_seq_mat_w
		where	nr_sequencia		= nr_seq_item_p;

		nr_seq_mat_p	:= nr_seq_mat_w;
	end if;

	if (ie_status_w	<> 'X') then
		if (ie_status_w	= 'A') then
			for r_C02_w in C02(nr_seq_proc_w, nr_seq_mat_w) loop
				begin
					CALL pls_insere_grupo_analise( nr_seq_auditoria_p, r_C02_w.nr_seq_ocorrencia, nr_seq_guia_p,
								  null, nm_usuario_p, cd_estabelecimento_p );
				end;
			end loop;
		end if;
	end if;

	for cProcAud_w in cProcAud loop
		begin			
			select	ie_status
			into STRICT	ie_status_atual_w
			from	pls_guia_plano_proc
			where	nr_sequencia		= cProcAud_w.nr_seq_proc_origem;
		exception
		when others then
			ie_status_atual_w := 'X';
		end;

		select	ie_status_solicitacao,
			ie_status
		into STRICT	ie_status_solicitacao_w,
			ie_status_analise_w
		from	pls_auditoria_item
		where	nr_sequencia		= cProcAud_w.nr_sequencia;

		if (ie_status_atual_w <> 'X') and (ie_status_atual_w = 'A') then
			if (ie_status_analise_w <> ie_status_solicitacao_w) then
				update	pls_guia_plano_proc
				set	ie_status		= CASE WHEN ie_status_analise_w='A' THEN  'S' WHEN ie_status_analise_w='N' THEN  'N'  ELSE ie_status END
				where	nr_sequencia		= cProcAud_w.nr_seq_proc_origem;
			else
				update	pls_guia_plano_proc
				set	ie_status		= CASE WHEN ie_status_solicitacao_w='A' THEN  'S' WHEN ie_status_solicitacao_w='N' THEN  'N'  ELSE ie_status END
				where	nr_sequencia		= cProcAud_w.nr_seq_proc_origem;
			end if;

			CALL pls_guia_gravar_historico(nr_seq_guia_p, 3, 'Há ocorrências geradas para o procedimento, sequência: ' || cProcAud_w.nr_seq_proc_origem || ' durante o processo de consistência dos itens inseridos na análise.', null, nm_usuario_p);
		end if;
	end loop;

	for cMatAud_w in cMatAud loop
		begin			
			select	ie_status
			into STRICT	ie_status_atual_w
			from	pls_guia_plano_mat
			where	nr_sequencia		= cMatAud_w.nr_seq_mat_origem;
		exception
		when others then
			ie_status_atual_w := 'X';
		end;

		select	ie_status_solicitacao,
			ie_status
		into STRICT	ie_status_solicitacao_w,
			ie_status_analise_w
		from	pls_auditoria_item
		where	nr_sequencia		= cMatAud_w.nr_sequencia;

		if (ie_status_atual_w <> 'X') and (ie_status_atual_w = 'A') then
			if (ie_status_analise_w <> ie_status_solicitacao_w) then
				update	pls_guia_plano_mat
				set	ie_status		= CASE WHEN ie_status_analise_w='A' THEN  'S' WHEN ie_status_analise_w='N' THEN  'N'  ELSE ie_status END
				where	nr_sequencia		= cMatAud_w.nr_seq_mat_origem;
			else
				update	pls_guia_plano_mat
				set	ie_status		= CASE WHEN ie_status_solicitacao_w='A' THEN  'S' WHEN ie_status_solicitacao_w='N' THEN  'N'  ELSE ie_status END
				where	nr_sequencia		= cMatAud_w.nr_seq_mat_origem;
			end if;

			CALL pls_guia_gravar_historico(nr_seq_guia_p, 3, 'Há ocorrências geradas para o material, sequência: ' || cMatAud_w.nr_seq_mat_origem || ' durante o processo de consistência dos itens inseridos na análise.', null, nm_usuario_p);
		end if;
	end loop;
end if;

commit;

dbms_application_info.SET_ACTION('');

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_itens_inseridos ( nr_seq_auditoria_p bigint, nr_seq_item_p bigint, nr_seq_requisicao_p bigint, nr_seq_guia_p bigint, ie_tipo_item_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_tipo_anexo_p text, nr_seq_proc_p INOUT bigint, nr_seq_mat_p INOUT bigint) FROM PUBLIC;

