-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_gerar_comunic_teto_fpo ( dt_competencia_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_regra_fpo_w		bigint;
nr_seq_regra_alerta_w		bigint;
nr_seq_reg_alert_usu_w		bigint;
qt_executado_w			bigint := 0;
qt_protocolo_w			bigint := 0;
qt_fisico_w			bigint := 0;
vl_executado_w			double precision;
vl_protocolo_w			double precision;
vl_orcamentario_w			double precision;
qt_perc_regra_w			bigint := 0;
vl_perc_regra_w			double precision;
dt_competencia_w			timestamp;
cd_perfil_alertar_w			integer;
nm_usuario_alertar_w		varchar(15);
nm_usuario_perfil_w		varchar(15);
cd_pessoa_usuario_w		varchar(15);
ie_gera_comunic_w			varchar(1);
ie_gera_email_w			varchar(1);
ds_comunicacao_w			varchar(4000);
ds_email_usuario_w			varchar(255);
ds_email_origem_w			varchar(255);
ds_titulo_w			varchar(80);
ds_lista_email_usuario_w		varchar(2000);
nm_usuario_destino_w		varchar(4000);
ds_perfil_adicional_w		varchar(4000);

c01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	sus_fpo_regra 
	where	trunc(dt_competencia,'month') = trunc(dt_competencia_p,'month') 
	and	coalesce(ie_situacao,'A') = 'A';
	
c02 CURSOR FOR 
	SELECT	ds_comunicacao, 
		ds_email_origem, 
		ds_titulo, 
		ie_comunic_interna, 
		ie_email, 
		nr_sequencia 
	from	sus_fpo_regra_alerta;

c03 CURSOR FOR 
	SELECT	cd_perfil_alerta, 
		nm_usuario_alerta, 
		nr_sequencia 
	from	sus_fpo_regra_alerta_usu 
	where	nr_seq_regra_alerta = nr_seq_regra_alerta_w;

c04 CURSOR FOR 
	SELECT	distinct nm_usuario 
	from	usuario_perfil 
	where	cd_perfil = cd_perfil_alertar_w;	
 

BEGIN 
 
open c01;
loop 
fetch c01 into	 
	nr_seq_regra_fpo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	 
	select	sus_obter_resultado_fpo(nr_sequencia,1,'E') qt_execucao, 
		sus_obter_resultado_fpo(nr_sequencia,2,'E') vl_execucao, 
		sus_obter_resultado_fpo(nr_sequencia,1,'P') qt_protocolo, 
		sus_obter_resultado_fpo(nr_sequencia,2,'P') vl_protocolo, 
		qt_fisico, 
		vl_orcamento, 
		dt_competencia 
	into STRICT	qt_executado_w, 
		vl_executado_w, 
		qt_protocolo_w, 
		vl_protocolo_w, 
		qt_fisico_w, 
		vl_orcamentario_w, 
		dt_competencia_w 
	from	sus_fpo_regra 
	where	nr_sequencia = nr_seq_regra_fpo_w;
	 
	if (qt_executado_w > qt_fisico_w) or (vl_executado_w > vl_orcamentario_w) or (qt_protocolo_w	> qt_fisico_w) or (vl_protocolo_w > vl_orcamentario_w) then 
		begin 
		 
		open C02;
		loop 
		fetch C02 into	 
			ds_comunicacao_w, 
			ds_email_origem_w, 
			ds_titulo_w, 
			ie_gera_comunic_w, 
			ie_gera_email_w, 
			nr_seq_regra_alerta_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			 
			if (coalesce(ds_comunicacao_w,'X') = 'X') then 
				begin 
				ds_comunicacao_w := 	substr(	'Foi atingido o limite da regra FPO n° '||nr_seq_regra_fpo_w || ', competência ' || to_char(dt_competencia_w,'dd/mm/yyyy') || chr(10) || chr(13) || chr(10) || chr(13) || 
								'Valor informado na regra: R$ '|| campo_mascara(vl_orcamentario_w,2) || chr(10) || chr(13) || chr(10) || chr(13) || 
								'Valor já executado: R$ '|| campo_mascara(vl_executado_w,2) || ' e valor já em protocolo: R$ ' || campo_mascara(vl_protocolo_w,2) || chr(10) || chr(13) || chr(10) || chr(13) || 
								'Quantidade informada na regra: '|| qt_fisico_w || chr(10) || chr(13) || chr(10) || chr(13) || 
								'Quantidade já executada: '|| qt_executado_w || ' e quantidade já em protocolo: R$ '|| qt_protocolo_w,1,4000);
				end;
			else 
				begin 
					 
				select	substr(ds_comunicacao,1,4000) 
				into STRICT	ds_comunicacao_w 
				from	sus_fpo_regra_alerta 
				where	nr_sequencia = nr_seq_regra_alerta_w;
					 
				ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w,'@regra_fpo',nr_seq_regra_fpo_w),1,4000);
				ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w,'@competencia',to_char(dt_competencia_w,'dd/mm/yyyy')),1,4000);
				ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w,'@vl_orcam',campo_mascara(vl_orcamentario_w,2)),1,4000);
				ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w,'@vl_exec',campo_mascara(vl_executado_w,2)),1,4000);
				ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w,'@vl_prot',campo_mascara(vl_protocolo_w,2)),1,4000);
				ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w,'@qt_fisico',qt_fisico_w),1,4000);
				ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w,'@qt_exec',qt_executado_w),1,4000);
				ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w,'@qt_prot',qt_protocolo_w),1,4000);
				 
				end;
			end if;
				 
			if (coalesce(ds_titulo_w,'X') = 'X') then 
				ds_titulo_w := 'Limite da regra FPO atingido';
			end if;
			 
			open C03;
			loop 
			fetch C03 into	 
				cd_perfil_alertar_w, 
				nm_usuario_alertar_w, 
				nr_seq_reg_alert_usu_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin 
				 
				if (coalesce(nm_usuario_alertar_w,'X') <> 'X') then 
					nm_usuario_destino_w	:= substr(nm_usuario_destino_w||nm_usuario_alertar_w||',',1,4000);	
				end if;
				if (coalesce(cd_perfil_alertar_w,0) <> 0) then 
					ds_perfil_adicional_w	:= substr(ds_perfil_adicional_w||cd_perfil_alertar_w||',',1,4000);
				end if;				
					 
				if (ie_gera_email_w = 'S') then 
					begin 
					 
					if (coalesce(nm_usuario_alertar_w,'X') <> 'X') then 
						begin 
						 
						select	coalesce(max(substr(obter_email_usuario(cd_pessoa_fisica,nm_usuario,cd_estabelecimento_p),1,255)),'X') 
						into STRICT	ds_email_usuario_w 
						from	usuario 
						where	nm_usuario = nm_usuario_alertar_w;
						 
						if (coalesce(ds_comunicacao_w,'X') <> 'X') and (coalesce(ds_email_origem_w,'X') <> 'X') and (coalesce(ds_email_usuario_w,'X') <> 'X') then	 
					 
							begin 
							CALL enviar_email(ds_titulo_w,ds_comunicacao_w,ds_email_origem_w,ds_email_usuario_w,nm_usuario_p,'M');
							exception 
							when others then 
								null;
							end;
						end if;	
						 
						end;
					end if;	
					 
					open C04;
					loop 
					fetch C04 into	 
						nm_usuario_perfil_w;
					EXIT WHEN NOT FOUND; /* apply on C04 */
						begin 
						 
						select	coalesce(max(substr(obter_email_usuario(cd_pessoa_fisica,nm_usuario,cd_estabelecimento_p),1,255)),'X') 
						into STRICT	ds_email_usuario_w 
						from	usuario 
						where	nm_usuario = nm_usuario_alertar_w;
						 
						if (coalesce(ds_comunicacao_w,'X') <> 'X') and (coalesce(ds_email_origem_w,'X') <> 'X') and (coalesce(ds_email_usuario_w,'X') <> 'X') then	 
					 
							begin 
							CALL enviar_email(ds_titulo_w,ds_comunicacao_w,ds_email_origem_w,ds_email_usuario_w,nm_usuario_p,'M');
							exception 
							when others then 
								null;
							end;
							 
						end if;	
						 
						end;
					end loop;
					close C04;
					 
					end;
				end if;
 
				end;
			end loop;
			close C03;	
 
			if (ie_gera_comunic_w = 'S') then 
				begin 
				 
				begin 
				CALL gerar_comunic_padrao(	dt_competencia_p, 
							ds_titulo_w, 
							ds_comunicacao_w, 
							nm_usuario_p, 
							'N', 
							nm_usuario_destino_w, 
							'N', 
							null, 
							ds_perfil_adicional_w, 
							cd_estabelecimento_p, 
							null, 
							clock_timestamp(), 
							null, 
							null);
				exception 
				when others then 
					null;
				end;
				 
				end;
			end if;
			 
			end;
		end loop;
		close C02;
		 
		end;
	end if;
	 
	end;
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_gerar_comunic_teto_fpo ( dt_competencia_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

