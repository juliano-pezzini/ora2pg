-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gera_exame_result_lab (nr_prescricao_p bigint, nr_seq_prescr_p bigint, ie_somente_amostra_p text, ie_digitacao_p text, ie_gera_laudo_p text, nm_usuario_p text, ie_vincula_formato_p text default 'N', ie_libera_prescr_p text default 'N') AS $body$
DECLARE


nr_seq_resultado_w	bigint := 0;
nr_seq_resultado_w2	bigint := 0;
nr_seq_exame_w		bigint;
nr_sequencia_w		bigint;
nr_seq_metodo_w		bigint;
nr_seq_material_w	bigint;
nr_seq_prescr_w		bigint;
cd_material_exame_w	varchar(20);
ie_formato_resultado_w	varchar(3);
dt_coleta_w		timestamp;

dt_prescricao_w		timestamp;
dt_nascimento_w		timestamp;
ie_sexo_w		varchar(1);
dt_liberacao_w		timestamp;
ie_status_atend_w	smallint;

ie_atual_status_lib_medico_w	varchar(1);
ie_amostra_diferente_w		varchar(1);
ie_gerar_resultado_padrao_w	varchar(1);

cd_estabelecimento_w	smallint;

nr_lote_reagente_w	varchar(30);
nr_seq_reagente_w	bigint;
dt_validade_reagente_w	timestamp;

ds_resultado_w		varchar(255) := '';

nr_atendimento_w	atendimento_paciente.nr_atendimento%type;


qt_resultado_w	exame_lab_result_item.qt_resultado%type;
pr_resultado_w	exame_lab_result_item.pr_resultado%type;
qt_minima_w		exame_lab_result_item.qt_minima%type;
qt_maxima_w		exame_lab_result_item.qt_maxima%type;
pr_minimo_w		exame_lab_result_item.pr_minimo%type;
pr_maximo_w		exame_lab_result_item.pr_maximo%type;	
ds_referencia_w	exame_lab_result_item.ds_referencia%type;
ie_consiste_w	exame_lab_result_item.ie_consiste%type;
nr_sequencia_padrao_w	bigint;
ds_mensagem_criterio_w	exame_lab_result_item.ds_mensagem_criterio%type;
ie_acao_criterio_lote_w	exame_lab_result_item.ie_acao_criterio_lote%type;
nr_sequencia_criterio_w lab_valor_padrao_criterio.nr_sequencia%type;

C010 CURSOR FOR
SELECT C.NR_SEQUENCIA,
	 C.NR_SEQ_EXAME,
	 C.CD_MATERIAL_EXAME,
	 obter_formato_result_exame(c.nr_seq_exame, b.nr_sequencia)
FROM 	material_exame_lab b,
	exame_laboratorio d,
	PRESCR_PROCEDIMENTO C,
	prescr_medica e
WHERE	e.nr_prescricao = c.nr_prescricao
  and e.NR_PRESCRICAO = NR_PRESCRICAO_P
  AND C.NR_SEQ_EXAME = d.nr_seq_exame
  and c.cd_material_exame = b.cd_material_exame
  AND CASE WHEN ie_somente_amostra_p='S' THEN 'S'  ELSE substr(obter_se_amostra_ok(c.nr_prescricao, c.nr_sequencia),1,1) END  =
	substr(obter_se_amostra_ok(c.nr_prescricao, c.nr_sequencia),1,1)
  AND (coalesce(ie_digitacao_p,'N') = 'N' or c.ie_status_atend >= 30)
  AND C.CD_MOTIVO_BAIXA = 0
  AND coalesce(C.IE_SUSPENSO,'N') = 'N'
  AND C.NR_SEQUENCIA = coalesce(nr_seq_prescr_p, C.NR_SEQUENCIA)
  and ((e.dt_liberacao IS NOT NULL AND e.dt_liberacao::text <> '') or (ie_atual_status_lib_medico_w = 'S' and (e.dt_liberacao_medico IS NOT NULL AND e.dt_liberacao_medico::text <> '')))
  AND NOT EXISTS (SELECT 1
			FROM EXAME_LAB_RESULT_ITEM A,
			     EXAME_LAB_RESULTADO B
			WHERE A.NR_SEQ_RESULTADO = B.NR_SEQ_RESULTADO
			  AND B.NR_PRESCRICAO = NR_PRESCRICAO_P
			  AND A.NR_SEQ_PRESCR = C.NR_SEQUENCIA);


BEGIN

CALL gravar_log_lab_pragma(17122,
    '1 - nr_prescricao_p='||nr_prescricao_p||
    'nr_seq_prescr_p='||nr_seq_prescr_p||
    'ie_somente_amostra_p='||ie_somente_amostra_p||
    'ie_digitacao_p='||ie_digitacao_p||
    'ie_gera_laudo_p='||ie_gera_laudo_p||
    'nm_usuario_p='||nm_usuario_p||
    'ie_vincula_formato_p='||ie_vincula_formato_p||
    'ie_libera_prescr_p='||ie_libera_prescr_p,
    nm_usuario_p,
    nr_prescricao_p,
    null);


select	max(cd_estabelecimento),
		max(nr_Atendimento)
into STRICT	cd_estabelecimento_w,
		nr_atendimento_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

CALL gravar_log_lab_pragma(17122,
    '2 - cd_estabelecimento_w='||cd_estabelecimento_w||
    'nr_atendimento_w='||nr_atendimento_w,
    nm_usuario_p,
    nr_prescricao_p,
    null);

select 	max(ie_atual_status_lib_medico),
	coalesce(max(ie_amostras_diferente),'N'),
	coalesce(max(ie_gerar_resultado_padrao), 'N')
into STRICT	ie_atual_status_lib_medico_w,
	ie_amostra_diferente_w,
	ie_gerar_resultado_padrao_w
from	lab_parametro
where	cd_estabelecimento = cd_estabelecimento_w;

CALL gravar_log_lab_pragma(17122,
    '3 - ie_atual_status_lib_medico_w='||ie_atual_status_lib_medico_w||
    'ie_amostra_diferente_w='||ie_amostra_diferente_w||
    'ie_gerar_resultado_padrao_w='||ie_gerar_resultado_padrao_w,
    nm_usuario_p,
    nr_prescricao_p,
    null);

select dt_prescricao,
	obter_nascimento_prescricao(nr_prescricao),
	obter_sexo_prescricao(nr_prescricao),
	coalesce(coalesce(dt_liberacao,dt_liberacao_medico), clock_timestamp() - interval '43200 seconds')
into STRICT	dt_prescricao_w,
	dt_nascimento_w,
	ie_sexo_w,
	dt_liberacao_w
from prescr_medica
where nr_prescricao = nr_prescricao_p;

CALL gravar_log_lab_pragma(17122,
    '4 - dt_prescricao_w='||dt_prescricao_w||
    'dt_nascimento_w='||dt_nascimento_w||
    'ie_sexo_w='||ie_sexo_w||
    'dt_liberacao_w='||dt_liberacao_w,
    nm_usuario_p,
    nr_prescricao_p,
    null);

begin
select 	coalesce(max(a.nr_sequencia),0),
	b.nr_seq_resultado
into STRICT 	nr_sequencia_w,
	nr_seq_resultado_w
from 	exame_lab_result_item a,
	exame_lab_resultado b
where a.nr_seq_resultado = b.nr_seq_resultado
  and b.nr_prescricao = nr_prescricao_p
group by b.nr_seq_resultado;
exception
	when no_data_found then
		begin
		nr_sequencia_w		:= 0;
		nr_seq_resultado_w	:= 0;
		end;
end;

CALL gravar_log_lab_pragma(17122,
    '5 - nr_sequencia_w='||nr_sequencia_w||
    'nr_seq_resultado_w='||nr_seq_resultado_w,
    nm_usuario_p,
    nr_prescricao_p,
    null);

OPEN C010;
LOOP
	FETCH C010 into	nr_seq_prescr_w,
				nr_seq_exame_w,
				cd_material_exame_w,
				ie_formato_resultado_w;

                
    CALL gravar_log_lab_pragma(17122, 
    '6 - nr_seq_prescr_w='||nr_seq_prescr_w||
    'nr_seq_exame_w='||nr_seq_exame_w||
    'cd_material_exame_w='||cd_material_exame_w||
    'ie_formato_resultado_w='||ie_formato_resultado_w||
    'nr_sequencia_w='||nr_sequencia_w,
    nm_usuario_p,
    nr_prescricao_p,
    null);

    
	if  C010%FOUND then           	
		if (nr_sequencia_w = 0) then
			begin
			begin
			select nr_seq_resultado
			into STRICT nr_seq_resultado_w2
			from exame_lab_resultado
			where nr_prescricao = nr_prescricao_p;
			exception
				when others then
					nr_seq_resultado_w2 := 0;
			end;
			if (nr_seq_resultado_w2 = 0) then
				begin
				select coalesce(max(nr_seq_resultado),0) + 1
				into STRICT	 nr_seq_resultado_w
				from exame_lab_resultado;
				
				insert into exame_lab_resultado(nr_seq_resultado, dt_resultado,dt_atualizacao,nm_usuario,nr_prescricao, nr_atendimento)
				values (nr_seq_resultado_w, clock_timestamp(), clock_timestamp(), nm_usuario_p, nr_prescricao_p, nr_atendimento_w);
				
				if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if; --tbschulz 31/01/12- inserido commit pois ocorria problema de pk na execucao da job HD_GERAR_EXAME_ROTINA pois a tabela nao possui sequence
				end;
			else
				nr_seq_resultado_w := nr_seq_resultado_w2;
			end if;
			end;
		end if;

		if (Length(cd_material_exame_w) > 0) then
			begin
			select b.nr_seq_material
			into STRICT nr_seq_material_w
			from	material_exame_lab a,
				exame_lab_material b
			where a.nr_sequencia = b.nr_seq_material
			  and b.nr_seq_exame = nr_seq_exame_w
			  and a.cd_material_exame = cd_material_exame_w;
			exception
				when others then
					begin
					CALL gravar_log_lab_pragma(34,cd_material_exame_w||' - '||nr_seq_exame_w||'-'||substr(sqlerrm,1,2000),nm_usuario_p,nr_prescricao_p);
					if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
					nr_seq_material_w := null;
					end;

			end;
		else
			begin
			select b.nr_seq_material
			into STRICT nr_seq_material_w
			from	material_exame_lab a,
				exame_lab_material b
			where a.nr_sequencia = b.nr_seq_material
			  and b.nr_seq_exame = nr_seq_exame_w;
			exception
				when others then
					begin
					CALL gravar_log_lab_pragma(34,cd_material_exame_w||' - '||nr_seq_exame_w||'-'||substr(sqlerrm,1,2000),nm_usuario_p,nr_prescricao_p);
					if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
					nr_seq_material_w := null;
					end;
			end;
		end if;
		
		begin
		
		select 	obter_metodo_regra_material(nr_prescricao_p,nr_seq_exame_w, nr_seq_material_w)
		into STRICT	nr_seq_metodo_w
		;
		
		exception
			when others then
				nr_seq_metodo_w := null;
		end;		
		
		
		select coalesce(max(dt_coleta), null)
		into STRICT dt_coleta_w
		from prescr_procedimento
		where nr_prescricao	= nr_prescricao_p
		  and nr_sequencia	= nr_seq_prescr_w;

		if (coalesce(dt_coleta_w::text, '') = '') then
			select coalesce(max(dt_coleta),clock_timestamp())
			into STRICT dt_coleta_w
			from prescr_proc_material
			where nr_prescricao		= nr_prescricao_p
			  and nr_seq_material	= nr_seq_material_w;
		end if;
		
		
		nr_lote_reagente_w	:= null;
		dt_validade_reagente_w	:= null;
		
		select	max(l.nr_sequencia)
		into STRICT	nr_seq_reagente_w
		from	lab_reagente l,
			lab_reagente_regra r
		where 	l.nr_sequencia	= r.nr_seq_reagente
		and	r.dt_inicio_vigencia	<= clock_timestamp()
		and	coalesce(r.dt_fim_vigencia,clock_timestamp())	>= clock_timestamp()
		and	coalesce(r.nr_seq_metodo,nr_seq_metodo_w)		= nr_seq_metodo_w
		and	r.nr_seq_exame		= nr_seq_exame_w
		and	r.ie_situacao 		= 'A';
		
		
		if (nr_seq_reagente_w IS NOT NULL AND nr_seq_reagente_w::text <> '') then
						
			select	max(nr_lote),
				max(dt_validade)
			into STRICT	nr_lote_reagente_w,
				dt_validade_reagente_w
			from	lab_reagente_lote
			where	nr_seq_reagente	= nr_seq_reagente_w
			and	dt_inicio_lote	<= clock_timestamp()
			and	coalesce(dt_fim_lote,clock_timestamp())	>= clock_timestamp();
			
		end if;
		
		nr_sequencia_w := nr_sequencia_w + 1;
		
		
		if (ie_gerar_resultado_padrao_w = 'S') then
			select	max(e.ds_valor)
			into STRICT	ds_resultado_w
			from	exame_lab_valor e
			where	e.nr_seq_exame = nr_seq_exame_w
			and	e.ie_padrao_resultado = 'S';
		end if;
		
		
		if (ie_formato_resultado_w in ('V', 'VP', 'CV')) then
			qt_resultado_w	:= 0;
			pr_resultado_w	:= 0;
		end if;		
		
		qt_minima_w := null;
		qt_maxima_w := null;
		pr_minimo_w := null;
		pr_maximo_w := null;
		ds_referencia_w := null;
		ie_consiste_w := null;
		nr_sequencia_padrao_w := null;
		ds_mensagem_criterio_w := null;
		ie_acao_criterio_lote_w := null;
		nr_sequencia_criterio_w := null;		
		
		SELECT * FROM define_reference_result_values(	nr_prescricao_p, nr_seq_prescr_p, nr_seq_resultado_w, qt_resultado_w, pr_resultado_w, ds_resultado_w, nr_seq_exame_w, nr_seq_material_w, nr_seq_metodo_w, ------
										qt_minima_w, qt_maxima_w, pr_minimo_w, pr_maximo_w, ds_referencia_w, ie_consiste_w, nr_sequencia_padrao_w, ds_mensagem_criterio_w, ie_acao_criterio_lote_w, nr_sequencia_criterio_w) INTO STRICT 
										qt_minima_w, qt_maxima_w, pr_minimo_w, pr_maximo_w, ds_referencia_w, ie_consiste_w, nr_sequencia_padrao_w, ds_mensagem_criterio_w, ie_acao_criterio_lote_w, nr_sequencia_criterio_w;
		
		insert into exame_lab_result_item(nr_seq_resultado, nr_sequencia, nr_seq_exame, dt_atualizacao, nm_usuario,
		 qt_resultado, ds_resultado, nr_seq_metodo, nr_seq_material, pr_resultado,
		 ie_status, dt_aprovacao, nm_usuario_aprovacao, nr_seq_prescr, dt_coleta,nr_seq_metodo_exame,
		 nr_seq_reagente, nr_lote_reagente,dt_validade_reagente,
		 qt_minima,
		 qt_maxima,
		 pr_minimo,
		 pr_maximo,
		 ds_referencia,
		 ie_consiste,
		 ds_mensagem_criterio,
		 ie_acao_criterio_lote		 
		 )
		values (nr_seq_resultado_w, nr_sequencia_w, nr_seq_exame_w, clock_timestamp(), nm_usuario_p,
		 CASE WHEN ie_formato_resultado_w='V' THEN  0 WHEN ie_formato_resultado_w='VP' THEN  0 WHEN ie_formato_resultado_w='CV' THEN  0 END ,
		 ds_resultado_w, nr_seq_metodo_w, nr_seq_material_w, 
		 CASE WHEN ie_formato_resultado_w='P' THEN  0 WHEN ie_formato_resultado_w='VP' THEN  0 END , 
		 '', null, '', nr_seq_prescr_w, dt_coleta_w, nr_seq_metodo_w,
		 nr_seq_reagente_w, nr_lote_reagente_w,dt_validade_reagente_w,
		 qt_minima_w,
		 qt_maxima_w,
		 pr_minimo_w,
		 pr_maximo_w,
		 ds_referencia_w,
		 ie_consiste_w,		 
		 ds_mensagem_criterio_w,
		 ie_acao_criterio_lote_w);
		
		if (ie_gera_laudo_p = 'S') then
			CALL gera_resultado_lab(	nr_seq_resultado_w, nr_prescricao_p, nr_seq_prescr_w,
						nr_seq_exame_w, nr_seq_material_w, (dt_prescricao_w - dt_nascimento_w) / 365.25, ie_sexo_w, nm_usuario_p);
			select coalesce(max(a.nr_sequencia),0)
			into STRICT nr_sequencia_w
			from	exame_lab_result_item a
			where a.nr_seq_resultado = nr_seq_resultado_w;
		end if;
		
		select	coalesce(max(ie_status_atend),0)
		into STRICT	ie_status_atend_w
		from	prescr_procedimento
		where 	nr_prescricao	= nr_prescricao_p
		and 	nr_sequencia	= nr_seq_prescr_w;
		
		/* Elemar - 24/07/06 - OS35218 
		   Realizar update somente quando liberado a mais de meio minuto */
		if	((clock_timestamp() - dt_liberacao_w) * 1440 > 0.5) and (coalesce(ie_libera_prescr_p, 'N') = 'N') then
			if (ie_status_atend_w	<> 29) then
				
				if (ie_amostra_diferente_w = 'S') then
					update 	prescr_procedimento a
					set	a.ie_status_atend	= 30,
						a.nm_usuario	= nm_usuario_p,
						a.dt_atualizacao	= clock_timestamp()
					where 	a.nr_prescricao	= nr_prescricao_p
					and 	a.nr_sequencia	= nr_seq_prescr_w
					and not exists (SELECT 	1
							from 	prescr_proc_mat_item b
							where 	b.nr_prescricao = a.nr_prescricao
							and	b.nr_seq_prescr = a.nr_sequencia
							and	b.ie_status <= 20);
				else
					update 	prescr_procedimento
					set	ie_status_atend	= 30,
						nm_usuario 	= nm_usuario_p,
						dt_atualizacao	= clock_timestamp()
					where 	nr_prescricao	= nr_prescricao_p
					and 	nr_sequencia	= nr_seq_prescr_w;
				end if;
				
				
			end if;
		end if;
	else
		if coalesce(ie_vincula_formato_p, 'N') = 'S' then
			CALL lab_vincula_formato_resultado(nr_prescricao_p, nm_usuario_p);
			exit;
		else
			exit;
		end if;
	end if;
END LOOP;
CLOSE C010;
if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gera_exame_result_lab (nr_prescricao_p bigint, nr_seq_prescr_p bigint, ie_somente_amostra_p text, ie_digitacao_p text, ie_gera_laudo_p text, nm_usuario_p text, ie_vincula_formato_p text default 'N', ie_libera_prescr_p text default 'N') FROM PUBLIC;

