-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE imp_extrato_cartao_visa_fin (nr_seq_extrato_p bigint, nm_usuario_p text, ds_arquivo_p text) AS $body$
DECLARE

dt_processamento_w	timestamp;
dt_inicial_w		timestamp;
dt_final_w		timestamp;
nr_extrato_w		integer;
nr_resumo_w		varchar(20);
cd_banco_w		smallint;
cd_agencia_w		varchar(8);
cd_conta_w		varchar(15);
nr_seq_conta_banco_w	bigint;
qt_cv_aceito_w		bigint;
qt_cv_rejeitado_w	bigint;
vl_bruto_w		double precision;
vl_comissao_w		double precision;
vl_rejeitado_w		double precision;
vl_liquido_w		double precision;
cd_estabelecimento_w	smallint;
vl_parcela_w		double precision;
dt_compra_w		timestamp;
qt_parcelas_w		bigint;
nr_cartao_w		varchar(20);
nr_autorizacao_w	varchar(40);
ds_comprovante_w	varchar(100);
ds_rejeicao_w		varchar(255);
nr_parcela_w		bigint;
nr_seq_extrato_res_w	bigint;
ie_tipo_registro_w	varchar(3);
nr_sequencia_w		bigint;
dt_min_parcela_w	timestamp;
dt_max_parcela_w	timestamp;
nr_seq_grupo_w		bigint;
ie_status_w		varchar(2);
ie_debito_w		varchar(1);
ie_resumo_debito_w	varchar(1);
nr_seq_extrato_arq_w	bigint;

/* Cursor Resumos */

c01 CURSOR FOR
SELECT	nr_sequencia,
	substr(ds_conteudo,1,3) ie_tipo_registro,
	to_char(null) ie_status,
	substr(ds_conteudo,76,6) nr_resumo,
	null cd_banco,
	null cd_agencia,
	null cd_conta,
	null vl_bruto,
	null vl_liquido,
	to_date(substr(ds_conteudo,4,8),'ddmmyyyy') dt_compra,
	null nr_parcela
from	w_extrato_cartao_cr
where	nr_seq_extrato			= nr_seq_extrato_p
and	substr(ds_conteudo,1,3) 	= '030' -- Resumo
union all

select	nr_sequencia,
	substr(ds_conteudo,1,3) ie_tipo_registro,
	substr(ds_conteudo,130,2) ie_status,
	substr(ds_conteudo,76,9) nr_resumo,
	substr(ds_conteudo,48,3) cd_banco,
	substr(ds_conteudo,51,6) cd_agencia,
	substr(ds_conteudo,57,11) cd_conta,
	(substr(ds_conteudo,95,11) || ',' || substr(ds_conteudo,108,2))::numeric  vl_bruto,
	(substr(ds_conteudo,32,11) || ',' || substr(ds_conteudo,45,2))::numeric  vl_liquido,
	to_date(substr(ds_conteudo,24,8),'ddmmyyyy') dt_compra,
	null nr_parcela
from	w_extrato_cartao_cr
where	nr_seq_extrato			= nr_seq_extrato_p
and	substr(ds_conteudo,1,3) 	= '034' --Detalhe
order by nr_sequencia;


BEGIN

select 	nextval('extrato_cartao_cr_arq_seq')
into STRICT	nr_seq_extrato_arq_w
;

insert into EXTRATO_CARTAO_CR_ARQ(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_extrato,
				ie_tipo_arquivo,
				ds_arquivo)
			values (nr_seq_extrato_arq_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_extrato_p,
				'F',
				ds_arquivo_p);

select	cd_estabelecimento,
	nr_seq_grupo
into STRICT	cd_estabelecimento_w,
	nr_seq_grupo_w
from	extrato_cartao_cr
where	nr_sequencia	= nr_seq_extrato_p;

/* Header */

select	somente_numero(substr(ds_conteudo,76,6)) nr_extrato,
	to_date(substr(ds_conteudo,4,8),'ddmmyyyy') dt_processamento
into STRICT	nr_extrato_w,
	dt_processamento_w
from	w_extrato_cartao_cr
where	nr_seq_extrato	= nr_seq_extrato_p
and	substr(ds_conteudo,1,3) = '030';

open c01;
loop
fetch c01 into
	nr_sequencia_w,
	ie_tipo_registro_w,
	ie_status_w,
	nr_resumo_w,
	cd_banco_w,
	cd_agencia_w,
	cd_conta_w,
	vl_bruto_w,
	vl_liquido_w,
	dt_compra_w,
	nr_parcela_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	/* Francisco - 03/03/2008 - Só importar o que for crédito, iclui o ie_debito no if abaixo */

	if (ie_tipo_registro_w = '030') then

		select	max(nr_seq_conta_banco)
		into STRICT	nr_seq_conta_banco_w
		from	grupo_bandeira_cr
		where	nr_sequencia	= nr_seq_grupo_w;

		if (coalesce(nr_seq_conta_banco_w::text, '') = '') then
			--r.aise_application_error(-20011,'Não foi encontrada a conta bancária de referência no cadastro dao grupo de bandeiras do extrato!');
			CALL wheb_mensagem_pck.exibir_mensagem_abort(267412);
		end if;

		select	nextval('extrato_cartao_cr_res_seq')
		into STRICT	nr_seq_extrato_res_w
		;

		insert	into	extrato_cartao_cr_res(nr_sequencia,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_atualizacao,
			nm_usuario,
			nr_seq_extrato,
			nr_resumo,
			nr_seq_conta_banco,
			qt_cv_aceito,
			qt_cv_rejeitado,
			vl_bruto,
			vl_comissao,
			vl_rejeitado,
			vl_liquido,
			dt_prev_pagto,
			nr_seq_extrato_arq)
		values (nr_seq_extrato_res_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_extrato_p,
			nr_resumo_w,
			nr_seq_conta_banco_w,
			qt_cv_aceito_w,
			qt_cv_rejeitado_w,
			vl_bruto_w,
			vl_comissao_w,
			vl_rejeitado_w,
			vl_liquido_w,
			dt_compra_w,
			nr_seq_extrato_arq_w);

	/* Francisco - 03/03/2008 - Só importar o que for crédito, iclui o ie_debito no if abaixo */

	elsif (ie_tipo_registro_w = '034')  then

		insert	into	extrato_cartao_cr_movto(nr_sequencia,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_atualizacao,
			nm_usuario,
			nr_seq_extrato,
			nr_seq_extrato_res,
			vl_parcela,
			qt_parcelas,
			nr_cartao,
			nr_autorizacao,
			ds_comprovante,
			ds_rejeicao,
			dt_compra,
			nr_parcela,
			ie_pagto_indevido,
			nr_seq_extrato_arq)
		values (nextval('extrato_cartao_cr_movto_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_extrato_p,
			nr_seq_extrato_res_w,
			vl_liquido_w,
			qt_parcelas_w,
			nr_cartao_w,
			nr_autorizacao_w,
			ds_comprovante_w,
			ds_rejeicao_w,
			dt_compra_w,
			nr_parcela_w,
			'N',
			nr_seq_extrato_arq_w);
	end if;
end loop;
close c01;

select	min(dt_compra),
	max(dt_compra)
into STRICT	dt_min_parcela_w,
	dt_max_parcela_w
from	extrato_cartao_cr_movto
where	nr_seq_extrato	=	nr_seq_extrato_p;

update	extrato_cartao_cr
set	nr_extrato		= nr_extrato_w,
	dt_importacao		= clock_timestamp(),
	dt_processamento	= dt_processamento_w
where	nr_sequencia		= nr_seq_extrato_p;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE imp_extrato_cartao_visa_fin (nr_seq_extrato_p bigint, nm_usuario_p text, ds_arquivo_p text) FROM PUBLIC;

