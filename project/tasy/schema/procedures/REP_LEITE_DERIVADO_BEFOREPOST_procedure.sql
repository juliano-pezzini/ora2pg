-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rep_leite_derivado_beforepost ( cd_material_p bigint, nr_atendimento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_classif_leite_deriv_w	bigint;
nr_max_classif_leite_deriv_w	bigint;
ds_classif_w		varchar(255);
ds_texto_abort_w		varchar(2000) := '';
nr_seq_classif_w		bigint;
qt_existe_w		bigint;

c01 CURSOR FOR
	SELECT	distinct
		obter_classif_leite_deriv(a.nr_seq_classif)
	from	nutricao_leite_deriv a,
		prescr_material b,
		prescr_medica c
	where	c.nr_atendimento = nr_atendimento_p
	and (clock_timestamp() between c.dt_inicio_prescr and c.dt_validade_prescr)
	and	c.nr_prescricao = b.nr_prescricao
	and    	(b.nr_seq_leite_deriv IS NOT NULL AND b.nr_seq_leite_deriv::text <> '')
	and	coalesce(b.ie_suspenso,'N') = 'N'
	and coalesce(a.ie_situacao,'A') = 'A'
	and	a.cd_material = b.cd_material;


BEGIN

nr_max_classif_leite_deriv_w := obter_param_usuario(924, 877, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, nr_max_classif_leite_deriv_w);

if (nr_max_classif_leite_deriv_w > 0) then

	select	max(nr_seq_classif)
	into STRICT	nr_seq_classif_w
	from	nutricao_leite_deriv
	where	cd_material = cd_material_p
	and 	coalesce(ie_situacao,'A') = 'A';

	select	count(*)
	into STRICT	qt_existe_w
	from	nutricao_leite_deriv a,
		prescr_material b,
		prescr_medica c
	where	c.nr_atendimento = nr_atendimento_p
	and (clock_timestamp() between c.dt_inicio_prescr and c.dt_validade_prescr)
	and	c.nr_prescricao = b.nr_prescricao
	and    	(b.nr_seq_leite_deriv IS NOT NULL AND b.nr_seq_leite_deriv::text <> '')
	and	coalesce(b.ie_suspenso,'N') = 'N'
	and	b.cd_material = a.cd_material
	and coalesce(a.ie_situacao,'A') = 'A'
	and	a.nr_seq_classif = nr_seq_classif_w;

	if (qt_existe_w = 0) then

		select	count(distinct a.nr_seq_classif)
		into STRICT	qt_existe_w
		from	nutricao_leite_deriv a,
			prescr_material b,
			prescr_medica c
		where	c.nr_atendimento = nr_atendimento_p
		and (clock_timestamp() between c.dt_inicio_prescr and c.dt_validade_prescr)
		and	c.nr_prescricao = b.nr_prescricao
		and    	(b.nr_seq_leite_deriv IS NOT NULL AND b.nr_seq_leite_deriv::text <> '')
		and	coalesce(b.ie_suspenso,'N') = 'N'
		and	b.cd_material = a.cd_material
		and coalesce(a.ie_situacao,'A') = 'A'
		and	a.nr_seq_classif <> nr_seq_classif_w;

		if (qt_existe_w >= nr_max_classif_leite_deriv_w) then
			open C01;
			loop
			fetch C01 into
				ds_classif_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin

				ds_texto_abort_w := substr(ds_texto_abort_w || ' ' || ds_classif_w,1,2000);

				end;
			end loop;
			close C01;
			--- Só é permitido #@NR_MAX_CLASSIF_LEITE_DERIV#@ classificações diferentes para esses itens! (Parâmetro 877) Classificações atuais: #@DS_CLASSIF#@
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(81004,'NR_MAX_CLASSIF_LEITE_DERIV='|| nr_max_classif_leite_deriv_w || ';DS_CLASSIF=' || ds_texto_abort_w);
		end if;
	else
		---Já existe um item com a classificação #@DS_CLASSIFICACAO#@ !
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(88038,'DS_CLASSIFICACAO='|| substr(obter_classif_leite_deriv(nr_seq_classif_w),1,255));
	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rep_leite_derivado_beforepost ( cd_material_p bigint, nr_atendimento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

