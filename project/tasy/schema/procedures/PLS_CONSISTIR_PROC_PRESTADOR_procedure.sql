-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_proc_prestador ( nr_seq_prestador_p bigint, nr_seq_conta_proc_p bigint, nr_seq_guia_proc_p bigint, nr_seq_req_proc_p bigint, nr_seq_exec_req_proc_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_evento_p text) AS $body$
DECLARE


ie_tipo_guia_w			varchar(2);
ie_liberar_w			varchar(1)	:= 'N';
ie_grupo_servico_w		varchar(1)	:= 'S';
ie_conta_guia_w			varchar(1);
ie_tipo_despesa_w		varchar(1);
cd_procedimento_w		bigint;
cd_grupo_w			bigint;
ie_origem_proced_w		bigint;
ie_origem_w			bigint;
qt_proc_prestador_w		bigint;
nr_seq_regra_prest_w		bigint;
nr_seq_grupo_servico_w		bigint;
nr_seq_prestador_exec_w		bigint;
cd_area_w			integer;
dt_procedimento_w		timestamp;
nr_seq_requisicao_w		bigint;
nr_seq_execucao_w		bigint;
ie_carater_internacao_w		varchar(1);
qt_autorizado_w			integer;
ds_mensagem_w			varchar(100);	
ds_aviso_glosa_w		varchar(500);
nr_seq_tipo_atend_w		bigint;
ie_internacao_w			varchar(1);
ie_prestador_pacote_w		varchar(1)	:= 'N';
qt_existe_regra_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_guia_w			bigint;
qt_participante_w		bigint;
nr_seq_prestador_item_w		bigint;
cd_cgc_prestador_prot_imp_w	varchar(14);
nr_cpf_prestador_prot_imp_w	varchar(11);
nr_seq_prestador_prot_w		bigint;
cd_pessoa_fisica_w		varchar(10);
nr_seq_protocolo_w		bigint;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
ie_tipo_verifica_w		varchar(2);
ie_tipo_atendimento_w		bigint;
cd_cgc_prestador_cta_w		pls_conta.cd_cgc_executor_imp%type;
cd_cpf_prestador_cta_w		pls_conta.cd_cpf_executor_imp%type;
nr_seq_prestdor_prot_w		pls_protocolo_conta.nr_seq_prestador%type;
ie_prestador_w			pls_controle_estab.ie_prestador%type;
ie_origem_solic_w		pls_requisicao.ie_origem_solic%type;
nr_seq_prestador_w		pls_requisicao.nr_seq_prestador%type;
ie_tipo_processo_w		pls_requisicao.ie_tipo_processo%type;
qt_evento_glosa_w		integer	:= 0;
cd_medico_w			pls_proc_participante.cd_medico%type;
cd_especialidade_w		pls_requisicao.cd_especialidade%type;
nr_seq_cbo_saude_w		pls_requisicao.nr_seq_cbo_saude%type;
nr_seq_cbo_partic_w			pls_proc_participante.nr_seq_cbo_saude%type;
nr_seq_cbo_saude_conta_w 	pls_conta.nr_seq_cbo_saude%type;
cd_especialidade_proc_w		varchar(4000);
nr_seq_cbo_saude_imp_w		pls_proc_participante.cd_cbo_saude_imp%type;	
ie_regime_atendimento_w		pls_conta.ie_regime_atendimento%type;
ie_saude_ocupacional_w		pls_conta.ie_saude_ocupacional%type;


/*VERIFICA PRESTADO PARTICIPANTE DO ITEM \*/

C01 CURSOR(nr_seq_conta_proc_pc		pls_conta_proc.nr_sequencia%type) FOR
	SELECT	nr_seq_prestador,
	coalesce(cd_medico_imp, cd_medico),
	nr_seq_cbo_saude,
	(SELECT max(nr_sequencia) from cbo_saude where cd_cbo = a.cd_cbo_saude_imp) nr_seq_cbo_saude_imp	
	from	pls_proc_participante a
	where	nr_seq_conta_proc = nr_seq_conta_proc_pc;
	
C02 CURSOR(	ie_prestador_pc		pls_controle_estab.ie_prestador%type,
		cd_pessoa_fisica_pc	pessoa_fisica.cd_pessoa_fisica%type,
		cd_estabelecimento_pc	estabelecimento.cd_estabelecimento%type) FOR
	SELECT	nr_sequencia
	from	pls_prestador
	where	cd_pessoa_fisica	= cd_pessoa_fisica_pc
	and	ie_situacao		= 'A'
	and	ie_prestador_pc		= 'S'
	and	cd_estabelecimento	= cd_estabelecimento_pc
	
union all

	SELECT	nr_sequencia
	from	pls_prestador
	where	cd_pessoa_fisica	= cd_pessoa_fisica_pc
	and	ie_situacao		= 'A'
	and	ie_prestador_pc		= 'N';
	
C03 CURSOR(	ie_prestador_pc		pls_controle_estab.ie_prestador%type,
		cd_cgc_prest_pc		pessoa_juridica.cd_cgc%type,
		cd_estabelecimento_pc	estabelecimento.cd_estabelecimento%type) FOR
	SELECT	nr_sequencia
	from	pls_prestador
	where	cd_cgc			= cd_cgc_prest_pc
	and	ie_situacao		= 'A'
	and	ie_prestador_pc		= 'S'
	and	cd_estabelecimento 	= cd_estabelecimento_pc
	
union all

	SELECT	nr_sequencia
	from	pls_prestador
	where	cd_cgc			= cd_cgc_prest_pc
	and	ie_situacao		= 'A'
	and	ie_prestador_pc		= 'N';
	
C04 CURSOR(	ds_lista_p	text,
		ds_separador_p	text) FOR
	SELECT	nr_valor_number
	from	table(pls_util_pck.converter_lista_valores(ds_lista_p, ds_separador_p));
	
BEGIN

select	coalesce(max(ie_prestador),'N')
into STRICT	ie_prestador_w
from	pls_controle_estab;


ds_aviso_glosa_w := '';
if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
	ie_conta_guia_w		:= 'C';
	ie_tipo_verifica_w	:= 'CM';
		
	/* Obter o prestador da conta  do procedimento */

	begin
		select	coalesce(b.nr_seq_prestador_exec,b.nr_seq_prestador_exec_imp_ref),
			ie_tipo_guia,
			(b.ie_carater_internacao),
			(a.qt_autorizado),
			(b.nr_seq_tipo_atendimento),
			substr(pls_obter_se_internado(b.nr_sequencia,'X'),1,1),
			(b.nr_seq_segurado),
			(b.nr_seq_protocolo),
			b.nr_seq_cbo_saude,
			substr(pls_obter_cod_espec_prest(b.nr_seq_prestador_exec, c.cd_pessoa_fisica),1,4000) cd_especialidade,
			b.ie_regime_atendimento,
			b.ie_saude_ocupacional
		into STRICT	nr_seq_prestador_exec_w,
			ie_tipo_guia_w,
			ie_carater_internacao_w,
			qt_autorizado_w,
			nr_seq_tipo_atend_w,
			ie_internacao_w,
			nr_seq_segurado_w,
			nr_seq_protocolo_w,
			nr_seq_cbo_saude_conta_w,
			cd_especialidade_proc_w,
			ie_regime_atendimento_w,
			ie_saude_ocupacional_w
		FROM pls_conta_proc a, pls_conta b
LEFT OUTER JOIN pls_prestador c ON (b.nr_seq_prestador_exec = c.nr_sequencia)
WHERE a.nr_seq_conta		= b.nr_sequencia  and a.nr_sequencia		= nr_seq_conta_proc_p;
	exception
	when others then
		nr_seq_prestador_exec_w	:= null;
		ie_tipo_guia_w		:= null;
		ie_carater_internacao_w	:= null;
		qt_autorizado_w		:= null;
		nr_seq_tipo_atend_w	:= null;
		ie_internacao_w		:= null;
		nr_seq_segurado_w	:= null;
		nr_seq_protocolo_w	:= null;
		nr_seq_cbo_saude_conta_w := null;
		cd_especialidade_w	:= null;
	end;
	
	if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
		begin
			select	nr_seq_plano
			into STRICT	nr_seq_plano_w
			from	pls_segurado
			where	nr_sequencia = nr_seq_segurado_w;
		exception
		when others then
			nr_seq_plano_w := null;
		end;
	end if;
	
	select 	count(1)
	into STRICT	qt_participante_w
	from	pls_proc_participante
	where	nr_seq_conta_proc = nr_seq_conta_proc_p
	and	(nr_seq_prestador IS NOT NULL AND nr_seq_prestador::text <> '')  LIMIT 1;
	
	if (qt_participante_w = 0) then
		select	count(1)
		into STRICT	qt_participante_w
		from	pls_proc_participante a,
			pls_prestador b
		where	b.cd_pessoa_fisica = a.cd_medico_imp
		and	a.nr_seq_conta_proc = nr_seq_conta_proc_p
		and	b.ie_situacao = 'A';
		
		if (qt_participante_w = 0) then
			select	count(1)
			into STRICT	qt_participante_w
			from	pls_proc_participante a,
				pls_prestador b
			where	b.cd_pessoa_fisica = a.cd_medico
			and	a.nr_seq_conta_proc = nr_seq_conta_proc_p
			and	b.ie_situacao = 'A';
		end if;
	end if;
	
	select	max(a.nr_seq_prestador)
	into STRICT	nr_seq_prestdor_prot_w
	from	pls_protocolo_conta a,
		pls_conta b,
		pls_conta_proc c
	where	a.nr_sequencia = b.nr_seq_protocolo
	and	b.nr_sequencia = c.nr_seq_conta
	and	c.nr_sequencia = nr_seq_conta_proc_p;
	
	
	
elsif (nr_seq_guia_proc_p IS NOT NULL AND nr_seq_guia_proc_p::text <> '') then
	ie_conta_guia_w := 'G';
	begin
		select	b.ie_tipo_guia,
			b.ie_carater_internacao,
			b.nr_seq_segurado,
			b.nr_seq_plano,
			b.nr_sequencia,
			b.ie_tipo_atend_tiss,
			b.cd_especialidade,
			b.nr_seq_cbo_saude,
			b.ie_regime_atendimento,
			b.ie_saude_ocupacional
		into STRICT	ie_tipo_guia_w,
			ie_carater_internacao_w,
			nr_seq_segurado_w,
			nr_seq_plano_w,
			nr_seq_guia_w,
			ie_tipo_atendimento_w,
			cd_especialidade_w,
			nr_seq_cbo_saude_w,
			ie_regime_atendimento_w,
			ie_saude_ocupacional_w
		from	pls_guia_plano_proc a,
			pls_guia_plano b
		where	a.nr_sequencia = nr_seq_guia_proc_p
		and	a.nr_seq_guia = b.nr_sequencia;
	exception
	when others then
		ie_tipo_guia_w		:= null;
		ie_carater_internacao_w	:= null;
		nr_seq_segurado_w	:= null;
		nr_seq_plano_w		:= null;
		nr_seq_guia_w		:= null;
		ie_tipo_atendimento_w	:= null;
		cd_especialidade_w	:= null;
		nr_seq_cbo_saude_w	:= null;
	end;
	
	if (coalesce(nr_seq_guia_w,0) > 0) then
		ie_internacao_w := pls_obter_se_internado_guia(nr_seq_guia_w);
	end if;

elsif (nr_seq_req_proc_p IS NOT NULL AND nr_seq_req_proc_p::text <> '') then
	ie_conta_guia_w := 'R';
	begin
		select	b.ie_tipo_guia,
			b.dt_requisicao,
			b.nr_seq_segurado,
			b.nr_seq_plano,
			b.ie_tipo_atendimento,
			b.ie_origem_solic,
			b.nr_seq_prestador_exec,
			b.nr_seq_prestador,
			b.IE_CARATER_ATENDIMENTO,
			b.nr_sequencia,
			b.ie_tipo_processo,
			b.cd_especialidade,
			b.nr_seq_cbo_saude,
			b.ie_regime_atendimento,
			b.ie_saude_ocupacional
		into STRICT	ie_tipo_guia_w,
			dt_procedimento_w,
			nr_seq_segurado_w,
			nr_seq_plano_w,
			ie_tipo_atendimento_w,
			ie_origem_solic_w,
			nr_seq_prestador_exec_w,
			nr_seq_prestador_w,
			ie_carater_internacao_w,
			nr_Seq_requisicao_w,
			ie_tipo_processo_w,
			cd_especialidade_w,
			nr_seq_cbo_saude_w,
			ie_regime_atendimento_w,
			ie_saude_ocupacional_w
		from	pls_requisicao_proc a,
			pls_requisicao b
		where	a.nr_sequencia 		= nr_seq_req_proc_p
		and	a.nr_seq_requisicao 	= b.nr_sequencia;
	exception
	when others then
		ie_tipo_guia_w		:= null;
		dt_procedimento_w	:= null;
		nr_seq_segurado_w	:= null;	
		nr_seq_plano_w		:= null;
		ie_tipo_atendimento_w 	:= null;
		cd_especialidade_w	:= null;
		nr_seq_cbo_saude_w	:= null;
	end;	
	if (coalesce(nr_Seq_requisicao_w,0) > 0) then
		ie_internacao_w := pls_obter_se_internado_req(nr_Seq_requisicao_w);
	end if;	
	
elsif (nr_seq_exec_req_proc_p IS NOT NULL AND nr_seq_exec_req_proc_p::text <> '') then
	ie_conta_guia_w := 'E';
	begin
		select	nr_seq_requisicao,
			nr_seq_execucao
		into STRICT	nr_seq_requisicao_w,
			nr_seq_execucao_w
		from	pls_execucao_req_item
		where	nr_sequencia = nr_seq_exec_req_proc_p;
		
		select	ie_tipo_guia,
			dt_requisicao,
			nr_seq_segurado,
			nr_seq_plano,
			ie_tipo_atendimento,
			cd_especialidade,
			nr_seq_cbo_saude,
			ie_regime_atendimento,
			ie_saude_ocupacional
		into STRICT	ie_tipo_guia_w,
			dt_procedimento_w,
			nr_seq_segurado_w,
			nr_seq_plano_w,
			ie_tipo_atendimento_w,
			cd_especialidade_w,
			nr_seq_cbo_saude_w,
			ie_regime_atendimento_w,
			ie_saude_ocupacional_w
		from	pls_requisicao
		where	nr_sequencia 		= nr_seq_requisicao_w;
	exception
	when others then
		nr_seq_requisicao_w	:= null;
		nr_seq_execucao_w	:= null;
		ie_tipo_guia_w		:= null;
		dt_procedimento_w	:= null;
		nr_seq_segurado_w	:= null;
		nr_seq_plano_w		:= null;
		ie_tipo_atendimento_w 	:= null;
		cd_especialidade_w	:= null;
		nr_seq_cbo_saude_w	:= null;
	end;

end if;

if (coalesce(nr_seq_conta_proc_p::text, '') = '' and coalesce(nr_seq_tipo_atend_w::text, '') = '') then
	begin
		select	nr_sequencia
		into STRICT	nr_seq_tipo_atend_w
		from	pls_tipo_atendimento
		where	(CD_TISS)::numeric 	= ie_tipo_atendimento_w;
	exception
	when others then
		nr_seq_tipo_atend_w	:= null;
	end;
end if;
	
if (ie_conta_guia_w	= 'C') then
	select	cd_procedimento,
		ie_origem_proced,
		coalesce(dt_procedimento,clock_timestamp()),
		ie_tipo_despesa
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		dt_procedimento_w,
		ie_tipo_despesa_w
	from	pls_conta_proc
	where	nr_sequencia = nr_seq_conta_proc_p;
elsif (ie_conta_guia_w	= 'G') then
	select	cd_procedimento,
		ie_origem_proced,
		coalesce(dt_liberacao,clock_timestamp())
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		dt_procedimento_w
	from	pls_guia_plano_proc
	where	nr_sequencia = nr_seq_guia_proc_p;
elsif (ie_conta_guia_w	= 'R') then
	select	cd_procedimento,
		ie_origem_proced
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w
	from	pls_requisicao_proc
	where	nr_sequencia = nr_seq_req_proc_p;
elsif (ie_conta_guia_w	= 'E') then
	select	cd_procedimento,
		ie_origem_proced
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w
	from	pls_execucao_req_item
	where	nr_sequencia = nr_seq_exec_req_proc_p;
end if;
	
if (qt_autorizado_w > 0)	then
	ds_mensagem_w	:= 'Item autorizado';
else 	
	ds_mensagem_w	:= 'Item nao autorizado';
end if;


select 	count(1)
into STRICT	qt_existe_regra_w
from 	pls_pacote
where	cd_procedimento  = cd_procedimento_w
and	ie_origem_proced = ie_origem_proced_w;

if (coalesce(qt_existe_regra_w,0) > 0) and (ie_conta_guia_w = 'C')	then
	if (ie_tipo_despesa_w = 4)	then	
		ie_prestador_pacote_w	:=  pls_obter_se_prestador_pacote( nr_seq_prestador_p , nr_seq_conta_proc_p );
	end if;
end if;	

/*Verificando prestador do item(Participante)*/

if (coalesce(qt_participante_w,0) > 0)	and (ie_liberar_w	= 'N')		then
	open C01(nr_seq_conta_proc_p);
	loop
	fetch C01 into	
		nr_seq_prestador_item_w,
		cd_medico_w,
		nr_seq_cbo_partic_w,
		nr_seq_cbo_saude_imp_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin		
		
		if (nr_seq_cbo_saude_imp_w IS NOT NULL AND nr_seq_cbo_saude_imp_w::text <> '') then
		nr_seq_cbo_partic_w := nr_seq_cbo_saude_imp_w;		
		end if;
		
		if (coalesce(nr_seq_prestador_item_w::text, '') = '') and (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') then
			
			select	max(nr_sequencia)
			into STRICT	nr_seq_prestador_item_w
			from	pls_prestador
			where	cd_pessoa_fisica = cd_medico_w
			and	ie_situacao = 'A';
			
			-- Caso nao encontrou nenhum prestador vinculado diretamente ao medico, tenta buscar entao

			-- um prestador que tenha o medico como profissional			
			if (coalesce(nr_seq_prestador_item_w::text, '') = '') then
			
				-- limita a busca pelo prestador do atendimento, pois o mesmo medico pode estar em varios "prestadores" como "profissional"

				-- neste caso e restringido pelo prestador do atendimento, para evitar pegar o max de algum outro prestador atendimento,

				-- e acabar misturando as informacoes.
				select	max(a.nr_seq_prestador)
				into STRICT	nr_seq_prestador_item_w
				from	pls_prestador		b,
					pls_prestador_medico	a
				where	a.nr_seq_prestador	= b.nr_sequencia
				and	a.cd_medico		= cd_medico_w
				and	b.cd_estabelecimento	= cd_estabelecimento_p
				and	b.nr_sequencia		= (	SELECT	max(x.nr_seq_prestador_prot)
									from	pls_conta_proc_v	x
									where	x.nr_sequencia		= nr_seq_conta_proc_p)
				and	a.ie_situacao		= 'A'
				and	b.ie_situacao		= 'A'
				and	trunc(clock_timestamp(),'dd') between trunc(coalesce(a.dt_inclusao,clock_timestamp()),'dd') and  fim_dia(coalesce(a.dt_exclusao,clock_timestamp()));
			
			end if;
			
		end if;
		
			if (cd_especialidade_proc_w IS NOT NULL AND cd_especialidade_proc_w::text <> '') then
				for r_c04_w in c04( cd_especialidade_proc_w, ',') loop
			
					if (ie_liberar_w = 'N') then
						ie_liberar_w	:= pls_obter_se_proc_prestador(	nr_seq_prestador_item_w, -- prestador do protocolo 
												nr_seq_prestador_exec_w,
												cd_procedimento_w,
												ie_origem_proced_w,
												ie_tipo_guia_w,
												coalesce(dt_procedimento_w,clock_timestamp()),
												null,
												ie_carater_internacao_w,
												nr_seq_tipo_atend_w,
												ie_internacao_w,
												nr_seq_plano_w,
												ie_tipo_verifica_w,
												nr_seq_prestdor_prot_w,
												r_c04_w.nr_valor_number,
												nr_seq_cbo_partic_w,
												ie_regime_atendimento_w,
												ie_saude_ocupacional_w);
					end if;
											
				end loop;
			else
				ie_liberar_w	:= pls_obter_se_proc_prestador(	nr_seq_prestador_item_w, -- prestador do protocolo 
											nr_seq_prestador_exec_w,
											cd_procedimento_w,
											ie_origem_proced_w,
											ie_tipo_guia_w,
											coalesce(dt_procedimento_w,clock_timestamp()),
											null,
											ie_carater_internacao_w,
											nr_seq_tipo_atend_w,
											ie_internacao_w,
											nr_seq_plano_w,
											ie_tipo_verifica_w,
											nr_seq_prestdor_prot_w,
											cd_especialidade_proc_w,
											nr_seq_cbo_partic_w,
											ie_regime_atendimento_w,
											ie_saude_ocupacional_w);
			end if;
										
		if (ie_liberar_w = 'N') then
			ds_aviso_glosa_w := ' O Procedimento: ' || cd_procedimento_w || ', nao esta autorizado para o prestador participante' || nr_seq_prestador_item_w || '! ';
		end if;
		end;
	end loop;
	close C01;
	
elsif (ie_prestador_pacote_w = 'N')	then
		
		ie_liberar_w	:= pls_obter_se_proc_prestador(	nr_seq_prestador_p, -- prestador do protocolo 
								nr_seq_prestador_exec_w,
								cd_procedimento_w,
								ie_origem_proced_w,
								ie_tipo_guia_w,
								coalesce(dt_procedimento_w,clock_timestamp()),
								null,
								ie_carater_internacao_w,
								nr_seq_tipo_atend_w,
								ie_internacao_w,
								nr_seq_plano_w,
								ie_tipo_verifica_w,
								nr_seq_prestdor_prot_w,
								cd_especialidade_w,
								nr_seq_cbo_saude_w,
								ie_regime_atendimento_w,
								ie_saude_ocupacional_w);
								
	if (ie_liberar_w = 'N') and (nr_seq_prestador_p IS NOT NULL AND nr_seq_prestador_p::text <> '') and (ie_conta_guia_w = 'C') then
		begin
			select	substr(elimina_caractere_especial(cd_cgc_prestador_imp),1,14),
				substr(elimina_caractere_especial(nr_cpf_prestador_imp),1,11)
			into STRICT	cd_cgc_prestador_prot_imp_w,
				nr_cpf_prestador_prot_imp_w
			from	pls_protocolo_conta
			where	nr_sequencia = nr_seq_protocolo_w;
		exception
		when others then
			cd_cgc_prestador_prot_imp_w := null;
			nr_cpf_prestador_prot_imp_w := null;
		end;
		
		if (nr_cpf_prestador_prot_imp_w IS NOT NULL AND nr_cpf_prestador_prot_imp_w::text <> '') or (cd_cgc_prestador_prot_imp_w IS NOT NULL AND cd_cgc_prestador_prot_imp_w::text <> '') then
			if (nr_cpf_prestador_prot_imp_w IS NOT NULL AND nr_cpf_prestador_prot_imp_w::text <> '') then
				begin
					select	cd_pessoa_fisica
					into STRICT	cd_pessoa_fisica_w
					from	pessoa_fisica
					where	nr_cpf	= nr_cpf_prestador_prot_imp_w  LIMIT 1;
				exception
				when others then
					cd_pessoa_fisica_w	:= null;
				end;
				if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
					open C02(ie_prestador_w, cd_pessoa_fisica_w, cd_estabelecimento_p);
					loop
					fetch C02 into	
						nr_seq_prestador_prot_w;
					EXIT WHEN NOT FOUND; /* apply on C02 */
						begin
						
						if (cd_especialidade_proc_w IS NOT NULL AND cd_especialidade_proc_w::text <> '') then
							for r_c04_w in c04( cd_especialidade_proc_w, ',') loop
						
								if (ie_liberar_w = 'N') then
									ie_liberar_w	:= pls_obter_se_proc_prestador(	nr_seq_prestador_item_w, -- prestador do protocolo 
															nr_seq_prestador_exec_w,
															cd_procedimento_w,
															ie_origem_proced_w,
															ie_tipo_guia_w,
															coalesce(dt_procedimento_w,clock_timestamp()),
															null,
															ie_carater_internacao_w,
															nr_seq_tipo_atend_w,
															ie_internacao_w,
															nr_seq_plano_w,
															ie_tipo_verifica_w,
															nr_seq_prestdor_prot_w,
															r_c04_w.nr_valor_number,
															nr_seq_cbo_partic_w,
															ie_regime_atendimento_w,
															ie_saude_ocupacional_w);
								end if;
														
							end loop;
						else
						
							ie_liberar_w	:= 	pls_obter_se_proc_prestador(	nr_seq_prestador_prot_w, -- prestador do protocolo 
														nr_seq_prestador_exec_w,
														cd_procedimento_w,
														ie_origem_proced_w,
														ie_tipo_guia_w,
														coalesce(dt_procedimento_w,clock_timestamp()),
														null,
														ie_carater_internacao_w,
														nr_seq_tipo_atend_w,
														ie_internacao_w,
														nr_seq_plano_w,
														ie_tipo_verifica_w,
														nr_seq_prestdor_prot_w,
														cd_especialidade_proc_w,
														nr_seq_cbo_saude_conta_w,
														ie_regime_atendimento_w,
														ie_saude_ocupacional_w
														);
						end if;
						
													
						if (ie_liberar_w = 'N') then
							ds_aviso_glosa_w := ' O Procedimento: ' || cd_procedimento_w || ', nao esta autorizado para o prestador ' || nr_seq_prestador_prot_w || '! ';
						end if;
						if (	ie_liberar_w = 'S' ) then
							goto final;
						end if;
						end;
					end loop;
					close C02;
				end if;
			end if;
			if (cd_cgc_prestador_prot_imp_w IS NOT NULL AND cd_cgc_prestador_prot_imp_w::text <> '') then
				open C03(ie_prestador_w, cd_cgc_prestador_prot_imp_w, cd_estabelecimento_p);
				loop
				fetch C03 into	
					nr_seq_prestador_prot_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin
					
					if (cd_especialidade_proc_w IS NOT NULL AND cd_especialidade_proc_w::text <> '') then
						for r_c04_w in c04( cd_especialidade_proc_w, ',') loop
					
							if (ie_liberar_w = 'N') then
								ie_liberar_w	:= pls_obter_se_proc_prestador(	nr_seq_prestador_item_w, -- prestador do protocolo 
														nr_seq_prestador_exec_w,
														cd_procedimento_w,
														ie_origem_proced_w,
														ie_tipo_guia_w,
														coalesce(dt_procedimento_w,clock_timestamp()),
														null,
														ie_carater_internacao_w,
														nr_seq_tipo_atend_w,
														ie_internacao_w,
														nr_seq_plano_w,
														ie_tipo_verifica_w,
														nr_seq_prestdor_prot_w,
														r_c04_w.nr_valor_number,
														nr_seq_cbo_partic_w,
														ie_regime_atendimento_w,
														ie_saude_ocupacional_w);
							end if;
													
						end loop;
					else
					
						ie_liberar_w	:= 	pls_obter_se_proc_prestador(	nr_seq_prestador_prot_w, -- prestador do protocolo 
													nr_seq_prestador_exec_w,
													cd_procedimento_w,
													ie_origem_proced_w,
													ie_tipo_guia_w,
													coalesce(dt_procedimento_w,clock_timestamp()),
													null,
													ie_carater_internacao_w,
													nr_seq_tipo_atend_w,
													ie_internacao_w,
													nr_seq_plano_w,
													ie_tipo_verifica_w,
													nr_seq_prestdor_prot_w,
													cd_especialidade_proc_w,
													nr_seq_cbo_saude_conta_w,
													ie_regime_atendimento_w,
													ie_saude_ocupacional_w);
													

					end if;

												
					if (ie_liberar_w = 'N') then
						ds_aviso_glosa_w := ' O Procedimento: ' || cd_procedimento_w || ', nao esta autorizado para o prestador ' || nr_seq_prestador_p || '! ';
					end if;
					
					if (	ie_liberar_w = 'S' ) then
						goto final;
					end if;
					end;
				end loop;
				close C03;
			end if;
		end if;
	if (ie_liberar_w = 'N') then
		ds_aviso_glosa_w := ' O Procedimento: ' || cd_procedimento_w || ', nao esta autorizado para o prestador ' || nr_seq_prestador_p || '! ';
	end if;
	end if;
elsif (ie_conta_guia_w = 'R') and (ie_origem_solic_w = 'E') then
		
		ie_liberar_w	:= 	pls_obter_se_proc_prestador(	nr_seq_prestador_w,
									nr_seq_prestador_exec_w,
									cd_procedimento_w,
									ie_origem_proced_w,
									ie_tipo_guia_w,
									coalesce(dt_procedimento_w,clock_timestamp()),
									cd_estabelecimento_p,
									ie_carater_internacao_w,
									null,
									ie_internacao_w,
									nr_seq_plano_w,
									null,
									null,
									cd_especialidade_w,
									nr_seq_cbo_saude_w,
									ie_regime_atendimento_w,
									ie_saude_ocupacional_w);
									

	if (ie_liberar_w = 'N') then
		ds_aviso_glosa_w := ' O Procedimento: ' || cd_procedimento_w || ', nao esta autorizado para o prestador ' || nr_seq_prestador_p || '! ';
	end if;	
else
     ie_liberar_w 	:= ie_prestador_pacote_w;

     
	if (ie_liberar_w = 'N') then
		ds_aviso_glosa_w := ' O Procedimento: ' || cd_procedimento_w || ', nao esta autorizado para o prestador ' || nr_seq_prestador_p || '! ';
	end if;
end if;

<<final>>
if (C02%ISOPEN) then
	close C02;
end if;
if (C03%ISOPEN) then
	close C03;
end if;

if ( ie_liberar_w = 'N') then

	if (ie_conta_guia_w = 'C')	then
	
		select	max(nr_seq_conta)
		into STRICT	nr_seq_conta_w
		from	pls_conta_proc
		where	nr_sequencia = nr_seq_conta_proc_p;
		
		if ( ie_tipo_despesa_w = '3') then
			CALL pls_gravar_conta_glosa('1912',nr_seq_conta_w,nr_seq_conta_proc_p,
						null,'N','Verificar servicos do prestador',
						nm_usuario_p,'A',ie_evento_p,
						nr_seq_prestador_p, cd_estabelecimento_p, '', null);
		else		
			CALL pls_gravar_conta_glosa('1214',nr_seq_conta_w,nr_seq_conta_proc_p,
						null,'N','Verificar servicos do prestador. ' || ds_aviso_glosa_w || ds_mensagem_w,
						nm_usuario_p,'A',ie_evento_p,
						nr_seq_prestador_p, cd_estabelecimento_p, '', null);
		end if;
	elsif (ie_conta_guia_w	= 'G') then
		CALL pls_gravar_motivo_glosa('1214',null,nr_seq_guia_proc_p,null,'Verificar servicos do prestador. '|| ds_aviso_glosa_w || ds_mensagem_w,nm_usuario_p,'','CG',nr_seq_prestador_p, null,null);
	elsif (ie_conta_guia_w	= 'R') then
		if (ie_tipo_processo_w	= 'E') then
			CALL pls_gravar_requisicao_glosa(	'1214', null, nr_seq_req_proc_p,
							null, 'Verificar servicos do prestador' || ds_aviso_glosa_w, nm_usuario_p,
							nr_seq_prestador_p, cd_estabelecimento_p, null, null,
							'IG');		
		else
			CALL pls_gravar_requisicao_glosa(	'1214', null, nr_seq_req_proc_p,
							null, 'Verificar servicos do prestador' || ds_aviso_glosa_w, nm_usuario_p,
							nr_seq_prestador_p, cd_estabelecimento_p, null, null,
							'CG');
		end if;
	elsif (ie_conta_guia_w	= 'E') then
		CALL pls_gravar_execucao_req_glosa(	'1214', nr_seq_execucao_w, nr_seq_exec_req_proc_p,
						null, 'Verificar servicos do prestador' || ds_aviso_glosa_w, nm_usuario_p,
						null, cd_estabelecimento_p, null,
						null);
	end if;		
end if;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_proc_prestador ( nr_seq_prestador_p bigint, nr_seq_conta_proc_p bigint, nr_seq_guia_proc_p bigint, nr_seq_req_proc_p bigint, nr_seq_exec_req_proc_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_evento_p text) FROM PUBLIC;

