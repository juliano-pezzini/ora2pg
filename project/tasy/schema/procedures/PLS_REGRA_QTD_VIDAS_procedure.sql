-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_regra_qtd_vidas ( nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_contrato_p bigint, ds_retorno_p INOUT text) AS $body$
DECLARE


qt_benef_ativo_w		bigint;
qt_minimo_w			pls_regra_qt_vidas_contr.qt_minimo%type;
qt_maximo_w			pls_regra_qt_vidas_contr.qt_maximo%type;
ie_mensagem_w           	pls_regra_qt_vidas_contr.ie_mensagem%type;
ie_comunicacao_interna_w	pls_regra_qt_vidas_contr.ie_comunicacao_interna%type;
ie_email_w                	pls_regra_qt_vidas_contr.ie_email%type;
ds_retorno_w			varchar(4000) := null;
nr_seq_regra_w			pls_regra_qt_vidas_contr.nr_sequencia%type;
nm_usuario_destino_w		pls_regra_vidas_contr_dest.nm_usuario_destino%type;
ds_email_destino_w		pls_regra_vidas_contr_dest.ds_email_destino%type;
ds_email_origem_w		usuario.ds_email%type;
ds_titulo_w			varchar(50) := 'Quantidade de vidas permitida contrato: ';
nr_contrato_w			pls_contrato.nr_contrato%type;
ds_mensagem_w			pls_regra_qt_vidas_contr.ds_mensagem%type;
ds_mensagem_dest_w		pls_regra_vidas_contr_dest.ds_mensagem%type;
ds_mensagem_dest_ww		pls_regra_vidas_contr_dest.ds_mensagem%type;

C01 CURSOR FOR
	SELECT	nm_usuario_destino,
		ds_mensagem
	from	pls_regra_vidas_contr_dest
	where	nr_seq_regra = nr_seq_regra_w;

C02 CURSOR FOR
	SELECT	ds_email_destino,
		ds_mensagem
	from	pls_regra_vidas_contr_dest
	where	nr_seq_regra = nr_seq_regra_w;


BEGIN

if (nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '') then
	select	count(1)
	into STRICT	qt_benef_ativo_w
	from	pls_segurado
	where	nr_seq_contrato = nr_seq_contrato_p
	and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and	(((coalesce(dt_rescisao::text, '') = '') and (coalesce(dt_cancelamento::text, '') = ''))
		or ((dt_rescisao IS NOT NULL AND dt_rescisao::text <> '') and (coalesce(dt_limite_utilizacao,dt_rescisao) >= clock_timestamp())));

	select	max(nr_sequencia)
	into STRICT	nr_seq_regra_w
	from	pls_regra_qt_vidas_contr
	where	nr_seq_contrato = nr_seq_contrato_p;

	if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
		select	max(qt_minimo),
			max(qt_maximo),
			coalesce(ie_mensagem,'N'),
			coalesce(ie_comunicacao_interna,'N'),
			coalesce(ie_email,'N'),
			max(ds_mensagem)
		into STRICT	qt_minimo_w,
			qt_maximo_w,
			ie_mensagem_w,
			ie_comunicacao_interna_w,
			ie_email_w,
			ds_mensagem_w
		from	pls_regra_qt_vidas_contr
		where	nr_sequencia = nr_seq_regra_w
		group by
			ie_mensagem,
			ie_email,
			ie_comunicacao_interna;

		select	max(nr_contrato)
		into STRICT	nr_contrato_w
		from	pls_contrato
		where	nr_sequencia = nr_seq_contrato_p;

		if	(((qt_minimo_w IS NOT NULL AND qt_minimo_w::text <> '') and (coalesce(qt_maximo_w::text, '') = '') and (qt_minimo_w > qt_benef_ativo_w)) or
			 ((qt_maximo_w IS NOT NULL AND qt_maximo_w::text <> '') and (coalesce(qt_minimo_w::text, '') = '') and (qt_maximo_w < qt_benef_ativo_w)) or
			 ((qt_maximo_w IS NOT NULL AND qt_maximo_w::text <> '') and (qt_minimo_w IS NOT NULL AND qt_minimo_w::text <> '') and (qt_maximo_w < qt_benef_ativo_w) and (qt_minimo_w > qt_benef_ativo_w))) then

			if (ie_mensagem_w = 'S') then
				ds_retorno_w := substr(ds_mensagem_w,1,255);
			end if;

			if (ie_comunicacao_interna_w = 'S') then
				open C01;
				loop
				fetch C01 into
					nm_usuario_destino_w,
					ds_mensagem_dest_w;
				EXIT WHEN NOT FOUND; /* apply on C01 */
					begin
					if (nm_usuario_destino_w IS NOT NULL AND nm_usuario_destino_w::text <> '') then
						CALL gerar_comunic_padrao(	clock_timestamp(),
									ds_titulo_w || nr_contrato_w,
									coalesce(ds_mensagem_dest_w,ds_mensagem_w),
									nm_usuario_p,
									'N',
									nm_usuario_destino_w,
									'N',
									null,
									null,
									cd_estabelecimento_p,
									null,
									clock_timestamp(),
									null,
									null);
					end if;
					end;
				end loop;
				close C01;
			end if;

			if (ie_email_w = 'S') then
				open C02;
				loop
				fetch C02 into
					ds_email_destino_w,
					ds_mensagem_dest_ww;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin

					select	max(ds_email)
					into STRICT	ds_email_origem_w
					from	usuario
					where	nm_usuario = nm_usuario_p;

					if	(ds_email_destino_w IS NOT NULL AND ds_email_destino_w::text <> '' AND ds_email_origem_w IS NOT NULL AND ds_email_origem_w::text <> '') then

						CALL enviar_email( 	ds_titulo_w || nr_contrato_w,
								coalesce(ds_mensagem_dest_ww,ds_mensagem_w),
								ds_email_origem_w,
								ds_email_destino_w,
								nm_usuario_p,
								'M');
					end if;
					end;
				end loop;
				close C02;
			end if;
		end if;
	end if;
end if;

ds_retorno_p := ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_regra_qtd_vidas ( nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_contrato_p bigint, ds_retorno_p INOUT text) FROM PUBLIC;

