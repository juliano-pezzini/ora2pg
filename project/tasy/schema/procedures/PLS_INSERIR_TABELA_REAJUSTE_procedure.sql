-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_inserir_tabela_reajuste ( nr_seq_reajuste_p bigint, nr_seq_tabela_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_contrato_w		bigint;
nr_seq_contrato_ww		bigint;
nr_seq_tabela_preco_w		bigint;
nr_seq_plano_w			bigint;
cd_estabelecimento_w		bigint;
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
dt_inicio_vigencia_w		timestamp;
dt_contrato_w			timestamp;
ie_tipo_reajuste_w		varchar(1);
ie_tipo_inclusao_w		varchar(1);
qt_aplicacao_w			bigint;
qt_aplicacao_ww			bigint;
cd_pf_estipulante_w		varchar(10);
ie_aplicacao_reajuste_w		varchar(2);
nr_seq_reaj_tabela_w		bigint;
nr_seq_lote_referencia_w	bigint;
dt_reajuste_w			timestamp;
nr_seq_intercambio_w		bigint;
nr_seq_plano_ww			bigint;
dt_rescisao_contrato_w		timestamp;
ie_reajustar_benef_cancelado_w	varchar(1);
ie_situacao_reaj_contrato_w	varchar(10);
qt_tabela_w			bigint;
tx_deflator_w			double precision;
tx_reajuste_lote_w		pls_reajuste.tx_reajuste%type;
tx_reajuste_liminar_w		pls_reajuste.tx_reajuste%type;
nr_seq_processo_w		processo_judicial_liminar.nr_sequencia%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
nr_seq_grupo_produto_w		pls_reajuste.nr_seq_grupo_produto%type;
ie_permite_reajuste_w		varchar(1);
qt_regra_ativa_w		bigint;
qt_regra_grupo_prod_w		bigint;
nr_seq_titular_w		pls_segurado.nr_seq_titular%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;

c01 CURSOR FOR
	SELECT	b.nr_sequencia,
		b.nr_seq_plano,
		b.dt_inicio_vigencia,
		b.nr_segurado,
		coalesce((pls_obter_dados_segurado(b.nr_segurado, 'NRTI'))::numeric , b.nr_segurado) nr_seq_titular,
		pls_obter_dados_segurado(b.nr_segurado, 'PF') cd_pessoa_fisica
	from	pls_tabela_preco b,
		pls_plano	a
	where	a.nr_sequencia		= b.nr_seq_plano
	--and	b.dt_inicio_vigencia	< trunc(dt_periodo_inicial_w, 'DD')
	and	a.cd_estabelecimento	= cd_estabelecimento_w
	and	a.ie_tipo_contratacao	= 'I'
	and	ie_tipo_reajuste_w	= 'I'
	and	b.dt_inicio_vigencia	< coalesce(dt_reajuste_w,clock_timestamp())
	and	((a.nr_sequencia = nr_seq_plano_ww) or (coalesce(nr_seq_plano_ww::text, '') = ''))
	and	pls_obter_se_aniver_periodo(b.dt_inicio_vigencia,dt_periodo_inicial_w,dt_periodo_final_w)	= 'S'
	and	b.nr_sequencia not in (	SELECT	x.nr_seq_tabela
					from	pls_reajuste_tabela x,
						pls_reajuste y
					where	x.nr_seq_reajuste = y.nr_sequencia
					and (trunc(dt_periodo_inicial_w,'dd') between y.dt_periodo_inicial and fim_dia(y.dt_periodo_final)
					or	trunc(dt_periodo_final_w,'dd') between y.dt_periodo_inicial and fim_dia(y.dt_periodo_final)))
	order by b.nr_sequencia;		-- tabelas de preco individual
c02 CURSOR FOR
	SELECT	b.nr_seq_plano,
		b.nr_sequencia,
		c.dt_contrato,
		b.dt_inicio_vigencia,
		c.dt_rescisao_contrato,
		b.nr_segurado,
		coalesce((pls_obter_dados_segurado(b.nr_segurado, 'NRTI'))::numeric , b.nr_segurado) nr_seq_titular,
		pls_obter_dados_segurado(b.nr_segurado, 'PF') cd_pessoa_fisica
	from	pls_segurado		a,
		pls_tabela_preco	b,
		pls_contrato		c,
		pls_plano		d
	where	a.nr_seq_tabela		= b.nr_sequencia
	and	a.nr_seq_contrato	= c.nr_sequencia
	and	b.nr_seq_plano		= d.nr_sequencia
	and	c.nr_sequencia		= nr_seq_contrato_w
	and	c.dt_contrato		< coalesce(dt_reajuste_w,clock_timestamp())
	and	d.ie_tipo_contratacao	<> 'I'
	and	ie_tipo_reajuste_w	= 'C'
	and	((d.nr_sequencia = nr_seq_plano_ww) or (coalesce(nr_seq_plano_ww::text, '') = ''))
	and	((c.ie_reajuste = 'C') or (to_char(coalesce(a.dt_reajuste,a.dt_contratacao),'MM') = to_char(dt_reajuste_w,'MM')))
	
union

	SELECT	a.nr_seq_plano,
		a.nr_sequencia,
		b.dt_contrato,
		a.dt_inicio_vigencia,
		b.dt_rescisao_contrato,
		a.nr_segurado,
		null nr_seq_titular,
		null cd_pessoa_fisica
	FROM pls_plano c, pls_tabela_preco a, pls_contrato b
LEFT OUTER JOIN pls_contrato_grupo e ON (b.nr_sequencia = e.nr_seq_contrato)
LEFT OUTER JOIN pls_grupo_contrato d ON (e.nr_seq_grupo = d.nr_sequencia)
WHERE a.nr_contrato		= b.nr_sequencia and a.nr_seq_plano		= c.nr_sequencia   and b.nr_sequencia		= nr_seq_contrato_w and b.dt_contrato		< coalesce(dt_reajuste_w,clock_timestamp()) and coalesce(a.nr_segurado::text, '') = '' and c.ie_tipo_contratacao	<> 'I' and ie_tipo_reajuste_w	= 'C' and exists (select 1 from pls_contrato_plano x where x.nr_seq_contrato = b.nr_sequencia and x.nr_seq_plano = a.nr_seq_plano) and ((c.nr_sequencia = nr_seq_plano_ww) or (coalesce(nr_seq_plano_ww::text, '') = '')) and ((b.ie_reajuste = 'C')
	or	((((d.dt_reajuste IS NOT NULL AND d.dt_reajuste::text <> '') and e.ie_reajuste_grupo = 'S' and to_char(d.dt_reajuste,'mm') = to_char(dt_reajuste_w,'mm')) or	
		 ((coalesce(d.dt_reajuste::text, '') = '' or e.ie_reajuste_grupo = 'N') and
			(((b.dt_reajuste IS NOT NULL AND b.dt_reajuste::text <> '') and (to_char(b.dt_reajuste,'mm') = to_char(dt_reajuste_w,'mm'))) or	
			 ((coalesce(b.dt_reajuste::text, '') = '') and (to_char(add_months(b.dt_contrato,coalesce(b.qt_intervalo,12)),'mm') = to_char(dt_reajuste_w,'mm')))))))) group by	a.nr_seq_plano,
			a.nr_sequencia,
			b.dt_contrato,
			a.dt_inicio_vigencia,
			b.dt_rescisao_contrato,
			a.nr_segurado
	
union

	select	b.nr_seq_plano, -- Produtos do contrato de intercambio
		b.nr_sequencia,
		c.dt_inclusao,
		b.dt_inicio_vigencia,
		c.dt_exclusao,
		b.nr_segurado,
		coalesce((pls_obter_dados_segurado(b.nr_segurado, 'NRTI'))::numeric , b.nr_segurado) nr_seq_titular,
		pls_obter_dados_segurado(b.nr_segurado, 'PF') cd_pessoa_fisica
	from	pls_segurado	a,
		pls_tabela_preco b,
		pls_intercambio	c,
		pls_plano	d
	where	a.nr_seq_tabela		= b.nr_sequencia
	and	a.nr_seq_intercambio	= c.nr_sequencia
	and	b.nr_seq_plano		= d.nr_sequencia
	and	c.nr_sequencia		= nr_seq_intercambio_w
	and	c.dt_inclusao		< coalesce(dt_reajuste_w,clock_timestamp())
	/*and	d.ie_tipo_contratacao	<> 'I'  Produto de intercambio nao tem tipo de contratacao */

	and	ie_tipo_reajuste_w	= 'C'
	and	((d.nr_sequencia = nr_seq_plano_ww) or (coalesce(nr_seq_plano_ww::text, '') = ''))
	
union

	select	a.nr_seq_plano,
		a.nr_sequencia,
		c.dt_inclusao,
		a.dt_inicio_vigencia,
		c.dt_exclusao,
		a.nr_segurado,
		coalesce((pls_obter_dados_segurado(a.nr_segurado, 'NRTI'))::numeric , a.nr_segurado) nr_seq_titular,
		pls_obter_dados_segurado(a.nr_segurado, 'PF') cd_pessoa_fisica
	from	pls_tabela_preco	a,
		pls_intercambio_plano	b,
		pls_intercambio		c,
		pls_plano		d
	where	b.nr_seq_tabela		= a.nr_sequencia
	and	b.nr_seq_intercambio	= c.nr_sequencia
	and	a.nr_seq_plano		= d.nr_sequencia
	and	c.nr_sequencia		= nr_seq_intercambio_w
	and	c.dt_inclusao		< coalesce(dt_reajuste_w,clock_timestamp())
	/*and	d.ie_tipo_contratacao	<> 'I' Produto de intercambio nao tem tipo de contratacao */

	and	ie_tipo_reajuste_w	= 'C'
	and	((d.nr_sequencia = nr_seq_plano_ww) or (coalesce(nr_seq_plano_ww::text, '') = ''))
	group by
		a.nr_seq_plano,
		a.nr_sequencia,
		c.dt_inclusao,
		a.dt_inicio_vigencia,
		c.dt_exclusao,
		a.nr_segurado
	
union

	select	null,
		a.nr_sequencia,
		b.dt_contrato,
		a.dt_inicio_vigencia,
		b.dt_rescisao_contrato,
		a.nr_segurado,
		coalesce((pls_obter_dados_segurado(a.nr_segurado, 'NRTI'))::numeric , a.nr_segurado) nr_seq_titular,
		pls_obter_dados_segurado(a.nr_segurado, 'PF') cd_pessoa_fisica
	from	pls_tabela_preco	a,
		pls_contrato		b
	where	a.nr_seq_contrato_repasse = b.nr_sequencia
	and	b.nr_sequencia		= nr_seq_contrato_w
	and	b.dt_contrato		< coalesce(dt_reajuste_w,clock_timestamp())
	and	ie_tipo_reajuste_w	= 'C'
	and	((coalesce(nr_seq_plano_ww::text, '') = '') or (a.nr_seq_plano_repasse = nr_seq_plano_ww))
	group by
		a.nr_seq_plano,
		a.nr_sequencia,
		b.dt_contrato,
		a.dt_inicio_vigencia,
		b.dt_rescisao_contrato,
		a.nr_segurado
	
union

	select	b.nr_seq_plano,
		b.nr_sequencia nr_seq_tabela,
		a.dt_contrato,
		b.dt_inicio_vigencia,
		a.dt_rescisao_contrato,
		c.nr_sequencia nr_seq_segurado,
		coalesce((pls_obter_dados_segurado(c.nr_sequencia, 'NRTI'))::numeric , c.nr_sequencia) nr_seq_titular,
		pls_obter_dados_segurado(c.nr_sequencia, 'PF') cd_pessoa_fisica
	from	pls_contrato a,
		pls_tabela_preco b,
		pls_segurado c,
		pls_plano d
	where	a.nr_sequencia	 	= c.nr_seq_contrato
	and	c.nr_sequencia	 	= b.nr_segurado
	and	a.nr_sequencia	 	= nr_seq_contrato_w
	and	d.nr_sequencia		= b.nr_seq_plano
	and	ie_tipo_reajuste_w	= 'C'
	and	d.ie_tipo_operacao	= 'B' --Produto
	and	a.dt_contrato		< coalesce(dt_reajuste_w,clock_timestamp())
	and  	((b.nr_contrato = a.nr_sequencia) or (coalesce(b.nr_contrato::text, '') = ''))
	and	((d.nr_sequencia = nr_seq_plano_ww) or (coalesce(nr_seq_plano_ww::text, '') = ''))
	and	((a.ie_reajuste = 'C') or (to_char(coalesce(c.dt_reajuste, c.dt_contratacao),'MM') = to_char(dt_reajuste_w,'MM')))	
	order by 2;

C03 CURSOR FOR
	SELECT	b.nr_seq_tabela,
		b.nr_seq_plano,
		c.dt_inicio_vigencia,
		a.dt_rescisao,
		c.nr_segurado,
		coalesce((pls_obter_dados_segurado(c.nr_segurado, 'NRTI'))::numeric , c.nr_segurado) nr_seq_titular,
		pls_obter_dados_segurado(c.nr_segurado, 'PF') cd_pessoa_fisica
	from	pls_segurado		a,
		pls_sca_vinculo		b,
		pls_tabela_preco 	c,
		pls_contrato		d
	where	b.nr_seq_segurado	= a.nr_sequencia
	and	b.nr_seq_tabela		= c.nr_sequencia
	and	a.nr_seq_contrato	= d.nr_sequencia
	and	d.nr_sequencia		= nr_seq_contrato_w
	and	d.dt_contrato		< coalesce(dt_reajuste_w,clock_timestamp())
	and	((b.dt_reajuste IS NOT NULL AND b.dt_reajuste::text <> '') and (trunc(b.dt_reajuste, 'month') = dt_reajuste_w))
	and	to_char(dt_reajuste_w,'YYYY') > to_char(b.dt_inicio_vigencia,'YYYY');
	

BEGIN

if (coalesce(nr_seq_tabela_p,0) = 0) then
	ie_tipo_inclusao_w := 'C';
else
	ie_tipo_inclusao_w := 'I';
end if;

select	nr_seq_contrato,
	nr_seq_intercambio,
	coalesce(dt_periodo_inicial,trunc(dt_reajuste,'month')),
	coalesce(dt_periodo_final,last_day(dt_reajuste)),
	cd_estabelecimento,
	ie_tipo_reajuste,
	nr_seq_lote_referencia,
	trunc(dt_reajuste,'month'),
	nr_seq_plano,
	tx_deflator,
	coalesce(ie_reajustar_benef_cancelado,'T'),
	coalesce(tx_reajuste,0),
	nr_seq_grupo_produto,
	ie_aplicacao_reajuste
into STRICT	nr_seq_contrato_w,
	nr_seq_intercambio_w,
	dt_periodo_inicial_w,
	dt_periodo_final_w,
	cd_estabelecimento_w,
	ie_tipo_reajuste_w,
	nr_seq_lote_referencia_w,
	dt_reajuste_w,
	nr_seq_plano_ww,
	tx_deflator_w,
	ie_situacao_reaj_contrato_w,
	tx_reajuste_lote_w,
	nr_seq_grupo_produto_w,
	ie_aplicacao_reajuste_w
from	pls_reajuste
where	nr_sequencia	= nr_seq_reajuste_p;

if (coalesce(ie_aplicacao_reajuste_w::text, '') = '') then
	begin
	select	coalesce(ie_aplicacao_reajuste,'G')
	into STRICT	ie_aplicacao_reajuste_w
	from	pls_reajuste
	where	nr_sequencia	= nr_seq_lote_referencia_w;
	exception
	when others then
		ie_aplicacao_reajuste_w	:= 'G';
	end;
end if;

select	count(*)
into STRICT	qt_aplicacao_w
from	pls_reajuste
where (ie_aplicacao_reajuste	= 'C' or
	coalesce(ie_aplicacao_reajuste,'G')	= 'G')
and	nr_sequencia	= nr_seq_reajuste_p;

if (coalesce(nr_seq_contrato_w,0) <> 0) then
	select	cd_pf_estipulante
	into STRICT	cd_pf_estipulante_w
	from	pls_contrato
	where	nr_sequencia	= nr_seq_contrato_w;
elsif (coalesce(nr_seq_intercambio_w,0) <> 0) then
	select	cd_pessoa_fisica
	into STRICT	cd_pf_estipulante_w
	from	pls_intercambio
	where	nr_sequencia	= nr_seq_intercambio_w;
end if;

select	max(ie_reajustar_benef_cancelado)
into STRICT	ie_reajustar_benef_cancelado_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_w;

ie_reajustar_benef_cancelado_w	:= coalesce(ie_reajustar_benef_cancelado_w,'T');

if (ie_tipo_inclusao_w = 'C') and (qt_aplicacao_w > 0) and (coalesce(cd_pf_estipulante_w::text, '') = '') then

	if (ie_aplicacao_reajuste_w in ('G','C')) then
		open c01;
		loop
		fetch c01 into
			nr_seq_tabela_preco_w,
			nr_seq_plano_w,
			dt_inicio_vigencia_w,
			nr_seq_segurado_w,
			nr_seq_titular_w,
			cd_pessoa_fisica_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			select	count(1)
			into STRICT	qt_tabela_w
			from	pls_reajuste_tabela
			where	nr_seq_reajuste	= nr_seq_reajuste_p
			and	nr_seq_tabela	= nr_seq_tabela_preco_w;
			
			ie_permite_reajuste_w := 'S';

			if (nr_seq_grupo_produto_w IS NOT NULL AND nr_seq_grupo_produto_w::text <> '') then
				select	count(1)
				into STRICT	qt_regra_ativa_w
				from	pls_grupo_produto
				where	nr_sequencia = nr_seq_grupo_produto_w
				and	ie_situacao = 'A';

				if (qt_regra_ativa_w > 0) then
					select	count(1)
					into STRICT	qt_regra_grupo_prod_w
					from	pls_produto_grupo
					where	nr_seq_grupo = nr_seq_grupo_produto_w
					and	nr_seq_plano = nr_seq_plano_w;

					if (qt_regra_grupo_prod_w = 0) then
						ie_permite_reajuste_w := 'N';
					end if;
				end if;
			end if;
			
			if (qt_tabela_w = 0) and (ie_permite_reajuste_w = 'S') then
				SELECT * FROM pls_obter_processo_reaj(null, nr_seq_segurado_w, nr_seq_titular_w, cd_pessoa_fisica_w, dt_reajuste_w, nr_seq_processo_w, tx_reajuste_liminar_w) INTO STRICT nr_seq_processo_w, tx_reajuste_liminar_w;
				
				select	nextval('pls_reajuste_tabela_seq')
				into STRICT	nr_seq_reaj_tabela_w
				;
				
				insert into pls_reajuste_tabela(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_reajuste,
					nr_seq_tabela,
					nr_seq_plano,
					dt_contrato,
					dt_inicio_vigencia,
					ie_origem_tabela,
					nr_seq_processo,
					tx_reajuste)
				values (nr_seq_reaj_tabela_w,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_reajuste_p,
					nr_seq_tabela_preco_w,
					nr_seq_plano_w,
					null,
					dt_inicio_vigencia_w,
					'B',
					nr_seq_processo_w,
					coalesce(tx_reajuste_liminar_w,tx_reajuste_lote_w));
			end if;
			end;
		end loop;
		close c01;

		open c02;
		loop
		fetch c02 into
			nr_seq_plano_w,
			nr_seq_tabela_preco_w,
			dt_contrato_w,
			dt_inicio_vigencia_w,
			dt_rescisao_contrato_w,
			nr_seq_segurado_w,
			nr_seq_titular_w,
			cd_pessoa_fisica_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */

			ie_permite_reajuste_w := 'S';

			if (nr_seq_grupo_produto_w IS NOT NULL AND nr_seq_grupo_produto_w::text <> '') then
				select	count(1)
				into STRICT	qt_regra_ativa_w
				from	pls_grupo_produto
				where	nr_sequencia = nr_seq_grupo_produto_w
				and	ie_situacao = 'A';

				if (qt_regra_ativa_w > 0) then
					select	count(1)
					into STRICT	qt_regra_grupo_prod_w
					from	pls_produto_grupo
					where	nr_seq_grupo = nr_seq_grupo_produto_w
					and	nr_seq_plano = nr_seq_plano_w;

					if (qt_regra_grupo_prod_w = 0) then
						ie_permite_reajuste_w := 'N';
					end if;
				end if;
			end if;

			if	((ie_permite_reajuste_w = 'S') and
				((coalesce(dt_rescisao_contrato_w::text, '') = '') or (dt_rescisao_contrato_w > dt_reajuste_w)) or
				((dt_rescisao_contrato_w IS NOT NULL AND dt_rescisao_contrato_w::text <> '') and (ie_reajustar_benef_cancelado_w in ('T','C')))) then
				
				/*Caso a situacao para o reajuste do contrato for diferente de ambos verificar como esta a situacao do contrato*/

				if (ie_situacao_reaj_contrato_w <> 'T') then
					if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
						if (pls_obter_situac_contr_periodo(nr_seq_contrato_w,'C','M',dt_reajuste_w) <> ie_situacao_reaj_contrato_w) then
							goto finalCursor02;
						end if;
					elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
						if (pls_obter_situac_contr_periodo(nr_seq_intercambio_w,'I','M',dt_reajuste_w) <> ie_situacao_reaj_contrato_w) then
							goto finalCursor02;
						end if;
					end if;
				end if;
				
				select	count(*)
				into STRICT	qt_tabela_w
				from	pls_reajuste_tabela
				where	nr_seq_reajuste	= nr_seq_reajuste_p
				and	nr_seq_tabela	= nr_seq_tabela_preco_w;
				
				if (qt_tabela_w = 0) and (coalesce(tx_deflator_w,0) = 0) then
					/* Conforme contato com Ewerton, o contrato nao pode ser reajuste masi de uma vez no mesmo mes, com excecao para poder aplicar o deflator */

					select	count(*)
					into STRICT	qt_tabela_w
					from	pls_reajuste_tabela	a,
						pls_reajuste		b
					where	a.nr_seq_reajuste	= b.nr_sequencia
					and	nr_seq_tabela		= nr_seq_tabela_preco_w
					and	trunc(b.dt_reajuste,'month')	= dt_reajuste_w
					and	coalesce(b.nr_seq_lote_deflator::text, '') = ''
					and	coalesce(b.tx_deflator,0) = 0;
				end if;
				
				if (qt_tabela_w = 0) then
					SELECT * FROM pls_obter_processo_reaj(null, nr_seq_segurado_w, nr_seq_titular_w, cd_pessoa_fisica_w, dt_reajuste_w, nr_seq_processo_w, tx_reajuste_liminar_w) INTO STRICT nr_seq_processo_w, tx_reajuste_liminar_w;
					
					select	nextval('pls_reajuste_tabela_seq')
					into STRICT	nr_seq_reaj_tabela_w
					;
					
					insert	into pls_reajuste_tabela(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_reajuste,
								nr_seq_tabela,
								nr_seq_plano,
								dt_contrato,
								dt_inicio_vigencia,
								ie_origem_tabela,
								nr_seq_processo,
								tx_reajuste)
						values (	nr_seq_reaj_tabela_w,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_reajuste_p,
								nr_seq_tabela_preco_w,
								nr_seq_plano_w,
								dt_contrato_w,
								dt_inicio_vigencia_w,
								'B',
								nr_seq_processo_w,
								coalesce(tx_reajuste_liminar_w,tx_reajuste_lote_w));
				end if;
			end if;
			
			<<finalCursor02>>
			nr_seq_plano_w	:= nr_seq_plano_w;
			
		end loop;
		close c02;
	end if;

	if (ie_aplicacao_reajuste_w in ('G','S')) then
		open C03;
		loop
		fetch C03 into
			nr_seq_tabela_preco_w,
			nr_seq_plano_w,
			dt_inicio_vigencia_w,
			dt_rescisao_contrato_w,
			nr_seq_segurado_w,
			nr_seq_titular_w,
			cd_pessoa_fisica_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin

			ie_permite_reajuste_w := 'S';
			
			if (nr_seq_grupo_produto_w IS NOT NULL AND nr_seq_grupo_produto_w::text <> '') then
				select	count(1)
				into STRICT	qt_regra_ativa_w
				from	pls_grupo_produto
				where	nr_sequencia = nr_seq_grupo_produto_w
				and	ie_situacao = 'A';

				if (qt_regra_ativa_w > 0) then
					select	count(1)
					into STRICT	qt_regra_grupo_prod_w
					from	pls_produto_grupo
					where	nr_seq_grupo = nr_seq_grupo_produto_w
					and	nr_seq_plano = nr_seq_plano_w;

					if (qt_regra_grupo_prod_w = 0) then
						ie_permite_reajuste_w := 'N';
					end if;
				end if;
			end if;

			if	((ie_permite_reajuste_w = 'S') and
				((coalesce(dt_rescisao_contrato_w::text, '') = '') or (dt_rescisao_contrato_w > dt_reajuste_w)) or
				((dt_rescisao_contrato_w IS NOT NULL AND dt_rescisao_contrato_w::text <> '') and (ie_reajustar_benef_cancelado_w in ('T','C')))) then
				
				/*Caso a situacao para o reajuste do contrato for diferente de ambos verificar como esta a situacao do contrato*/

				if (ie_situacao_reaj_contrato_w <> 'T') then
					if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
						if (pls_obter_situac_contr_periodo(nr_seq_contrato_w,'C','M',dt_reajuste_w) <> ie_situacao_reaj_contrato_w) then
							goto finalCursor03;
						end if;
					elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
						if (pls_obter_situac_contr_periodo(nr_seq_intercambio_w,'I','M',dt_reajuste_w) <> ie_situacao_reaj_contrato_w) then
							goto finalCursor03;
						end if;
					end if;
				end if;
				
				select	count(*)
				into STRICT	qt_tabela_w
				from	pls_reajuste_tabela
				where	nr_seq_reajuste	= nr_seq_reajuste_p
				and	nr_seq_tabela	= nr_seq_tabela_preco_w;
				
				if (qt_tabela_w = 0) and (coalesce(tx_deflator_w,0) = 0) then
					/* Conforme contato com Ewerton, o contrato nao pode ser reajuste masi de uma vez no mesmo mes, com excecao para poder aplicar o deflator */

					select	count(*)
					into STRICT	qt_tabela_w
					from	pls_reajuste_tabela	a,
						pls_reajuste		b
					where	a.nr_seq_reajuste	= b.nr_sequencia
					and	nr_seq_tabela		= nr_seq_tabela_preco_w
					and	trunc(b.dt_reajuste,'month')	= dt_reajuste_w
					and	coalesce(b.nr_seq_lote_deflator::text, '') = ''
					and	coalesce(b.tx_deflator,0) = 0;
				end if;
				
				if (qt_tabela_w = 0) then
					SELECT * FROM pls_obter_processo_reaj(null, nr_seq_segurado_w, nr_seq_titular_w, cd_pessoa_fisica_w, dt_reajuste_w, nr_seq_processo_w, tx_reajuste_liminar_w) INTO STRICT nr_seq_processo_w, tx_reajuste_liminar_w;
					
					select	nextval('pls_reajuste_tabela_seq')
					into STRICT	nr_seq_reaj_tabela_w
					;
					
					insert into pls_reajuste_tabela(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_reajuste,
						nr_seq_tabela,
						nr_seq_plano,
						dt_contrato,
						dt_inicio_vigencia,
						ie_origem_tabela,
						nr_seq_processo,
						tx_reajuste)
					values (nr_seq_reaj_tabela_w,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_reajuste_p,
						nr_seq_tabela_preco_w,
						nr_seq_plano_w,
						null,
						dt_inicio_vigencia_w,
						'B',
						nr_seq_processo_w,
						coalesce(tx_reajuste_liminar_w,tx_reajuste_lote_w));
				end if;
			end if;
			
			<<finalCursor03>>
			nr_seq_plano_w	:= nr_seq_plano_w;
			
			end;
		end loop;
		close C03;
	end if;
elsif (ie_tipo_inclusao_w = 'I') then
	select	coalesce(max(b.nr_seq_plano),0),
		coalesce(max(b.dt_inicio_vigencia),clock_timestamp()),
		b.nr_segurado,
		coalesce(pls_obter_dados_segurado(b.nr_segurado, 'NRTI'), b.nr_segurado) nr_seq_titular,
		pls_obter_dados_segurado(b.nr_segurado, 'PF') cd_pessoa_fisica
	into STRICT	nr_seq_plano_w,
		dt_inicio_vigencia_w,
		nr_seq_segurado_w,
		nr_seq_titular_w,
		cd_pessoa_fisica_w
	from	pls_tabela_preco b,
		pls_plano	a
	where	a.nr_sequencia		= b.nr_seq_plano
	and	b.nr_sequencia		= nr_seq_tabela_p
	and	a.cd_estabelecimento	= cd_estabelecimento_w
	and	b.nr_sequencia not in (	SELECT	x.nr_seq_tabela
					from	pls_reajuste_tabela x,
						pls_reajuste y
					where	x.nr_seq_reajuste = y.nr_sequencia
					and (trunc(dt_periodo_inicial_w,'dd') between y.dt_periodo_inicial and fim_dia(y.dt_periodo_final)
					or	trunc(dt_periodo_final_w,'dd') between y.dt_periodo_inicial and fim_dia(y.dt_periodo_final)));
	
	ie_permite_reajuste_w := 'S';
	
	if	((nr_seq_grupo_produto_w IS NOT NULL AND nr_seq_grupo_produto_w::text <> '') and (coalesce(nr_seq_plano_w,0) <> 0)) then
		select	count(1)
		into STRICT	qt_regra_ativa_w
		from	pls_grupo_produto
		where	nr_sequencia = nr_seq_grupo_produto_w
		and	ie_situacao = 'A';

		if (qt_regra_ativa_w > 0) then
			select	count(1)
			into STRICT	qt_regra_grupo_prod_w
			from	pls_produto_grupo
			where	nr_seq_grupo = nr_seq_grupo_produto_w
			and	nr_seq_plano = nr_seq_plano_w;

			if (qt_regra_grupo_prod_w = 0) then
				ie_permite_reajuste_w := 'N';
			end if;
		end if;
	end if;
	
	if (coalesce(nr_seq_plano_w,0) <> 0) and (ie_permite_reajuste_w = 'S') then
		SELECT * FROM pls_obter_processo_reaj(null, nr_seq_segurado_w, nr_seq_titular_w, cd_pessoa_fisica_w, dt_reajuste_w, nr_seq_processo_w, tx_reajuste_liminar_w) INTO STRICT nr_seq_processo_w, tx_reajuste_liminar_w;
		
		select	nextval('pls_reajuste_tabela_seq')
		into STRICT	nr_seq_reaj_tabela_w
		;

		insert into pls_reajuste_tabela(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_reajuste,
				nr_seq_tabela,
				nr_seq_plano,
				dt_contrato,
				dt_inicio_vigencia,
				ie_origem_tabela,
				nr_seq_processo,
				tx_reajuste)
			values (nr_seq_reaj_tabela_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_reajuste_p,
				nr_seq_tabela_p,
				nr_seq_plano_w,
				null,
				dt_inicio_vigencia_w,
				'B',
				nr_seq_processo_w,
				coalesce(tx_reajuste_liminar_w,tx_reajuste_lote_w));
	end if;
end if;

select	max(a.nr_seq_contrato)
into STRICT	nr_seq_contrato_ww
from	pls_reajuste	a
where	a.nr_sequencia	= nr_seq_reajuste_p;

select	count(1)
into STRICT	qt_aplicacao_ww
from	pls_reajuste
where (ie_aplicacao_reajuste	= 'S' or
	ie_aplicacao_reajuste	= 'G')
and	nr_sequencia	= nr_seq_reajuste_p;

if (qt_aplicacao_ww > 0) then
	CALL pls_inserir_tabelas_sca(nr_seq_reajuste_p,nr_seq_contrato_ww,nm_usuario_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_inserir_tabela_reajuste ( nr_seq_reajuste_p bigint, nr_seq_tabela_p bigint, nm_usuario_p text) FROM PUBLIC;

