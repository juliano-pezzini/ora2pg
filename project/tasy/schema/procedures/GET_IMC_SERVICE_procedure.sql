-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE get_imc_service ( nr_seq_voucher_p imc_voucher.nr_sequencia%type, nm_usuario_p text, ie_validate_p text, nr_seq_account_p bigint) AS $body$
DECLARE


nr_seq_w				imc_service.nr_sequencia%type;
vl_charge_w				imc_service.vl_charge%type;
nr_seq_account_w		imc_claim.nr_seq_account%type;
cd_provider_w			imc_voucher.cd_provider%type;
dt_birth_w				imc_voucher.dt_birth%type;
qt_service_w			imc_service.qt_service%type;
nr_lsp_w				imc_service.nr_lsp%type;
ie_service_type_w		imc_voucher.ie_service_type%type;
dt_accession_w			imc_service.dt_accession%type;
cd_medico_executor_w	medical_provider_number.cd_medico%type;
dt_service_w			procedimento_paciente.dt_procedimento%type;
dt_collection_w			prescr_proc_peca.dt_atualizacao_nrec%type;
qt_item_w				integer;
has_proc_w				integer;
contador_w				integer := 0;
nr_records_w			integer;
cd_service_id_w			varchar(5);--pls_integer;
cd_mbs_code_w              	varchar(5);


c01 CURSOR FOR
SELECT	a.nr_sequencia,
		(coalesce(a.vl_procedimento,0) * 100) vl_procedimento,
		a.dt_procedimento,
		a.cd_equipamento,
		coalesce(a.cd_procedimento, 0) cd_procedimento,
		a.ie_origem_proced,
		a.ds_observacao,
		trunc((a.dt_final_procedimento - a.dt_inicio_procedimento)* (24 * 60)) qt_duracao,
		substr(b.cd_setor_externo,0,5) cd_setor_externo,
		COUNT(a.nr_sequencia) OVER () qt_item_w
from	procedimento_paciente a,
		setor_atendimento b
where	a.nr_interno_conta		= nr_seq_account_w
and		a.cd_setor_atendimento	= b.cd_setor_atendimento;
c01_w	c01%rowtype;


BEGIN
	
	CALL billing_i18n_pck.set_validate_eclipse(ie_validate_p);

	select 	max(b.nr_seq_account),
			max(a.cd_provider),
			max(a.dt_birth),
			max(ie_service_type)
	into STRICT	nr_seq_account_w,
			cd_provider_w,
			dt_birth_w,
			ie_service_type_w
	from	imc_voucher a,
			imc_claim b
	where	a.nr_seq_claim = b.nr_sequencia
	and		a.nr_sequencia = nr_seq_voucher_p;
	
	select	max(cd_medico)
	into STRICT	cd_medico_executor_w
	from	medical_provider_number
	where	nr_provider = cd_provider_w;	

	begin

		open c01;
		loop
		fetch c01 into c01_w;	
		EXIT WHEN NOT FOUND; /* apply on c01 */
		
		if (c01_w.qt_item_w > 14) then
			
			select	count(nr_sequencia)
			into STRICT	has_proc_w
			from	imc_service a
			where	a.nr_seq_proc = c01_w.nr_sequencia;
			
		end if;
		
		
		if (c01_w.qt_item_w <= 14 or (c01_w.qt_item_w > 14 and has_proc_w = 0 and contador_w < 14)) then
		
			contador_w := contador_w + 1;
		
			dt_service_w := c01_w.dt_procedimento;
				
			
			select 	max(b.dt_atualizacao_nrec)
			into STRICT	dt_collection_w
			from	prescr_proc_peca b
			where	b.nr_seq_proc_paciente = c01_w.cd_procedimento;
			
			select	coalesce(max(qt_autorizada),0)
			into STRICT	qt_service_w
			from	procedimento_autorizado
			where	cd_procedimento = c01_w.cd_procedimento;
			
			select	max(cd_imobilizado_ext)
			into STRICT	nr_lsp_w
			from	equipamento
			where	cd_equipamento = c01_w.cd_equipamento;
			
			select	max(a.dt_coleta)
			into STRICT	dt_accession_w
			from	prescr_procedimento a
			where	a.cd_procedimento = c01_w.cd_procedimento;
			
			select	lpad(coalesce(max(cd_service_id),0) + 1, 4, 0)
			into STRICT	cd_service_id_w
			from	imc_service a,
					imc_voucher b
			where	b.nr_sequencia = a.nr_seq_voucher
			and		a.nr_seq_voucher = nr_seq_voucher_p;			

      	select 	cd_procedimento_loc
				into STRICT   	cd_mbs_code_w
				from   procedimento
				where  cd_procedimento = c01_w.cd_procedimento
				and 	 ie_origem_proced = c01_w.ie_origem_proced;
			
			
			if (c01_w.cd_procedimento = 0) then
			
				CALL generate_inco_eclipse(nr_seq_account_p, 3, obter_desc_expressao(568639), nm_usuario_p);
			
			end if;
			
			if (c01_w.qt_duracao = 0) then
			
				CALL generate_inco_eclipse(nr_seq_account_p, 3, obter_desc_expressao(742492), nm_usuario_p); -- a duracao do procedimento nao pode ser 0 -criar uma expressao
				
			end if;
			
			if (dt_collection_w > clock_timestamp()) then
			
				CALL generate_inco_eclipse(nr_seq_account_p, 3, obter_desc_expressao(899094), nm_usuario_p); -- a data da coleta nao pode ser futura -criar uma expressao
				
			elsif (dt_collection_w < dt_birth_w) then
			
				CALL generate_inco_eclipse(nr_seq_account_p, 3, obter_desc_expressao(899094), nm_usuario_p); --data da coleta nao pode ser anterior que a data de nascimento que -criar uma expressao		
				
			elsif (dt_collection_w > dt_service_w) then
			
				CALL generate_inco_eclipse(nr_seq_account_p, 3, obter_desc_expressao(899094), nm_usuario_p); --a data da coleta nao pode ser superior que a data do procedimento -criar uma expressao		
			
			end if;		
			
			if (dt_service_w > clock_timestamp()) then
			
				CALL generate_inco_eclipse(nr_seq_account_p, 3, obter_desc_expressao(583872), nm_usuario_p); -- a data do servico nao pode ser futura -criar uma expressao
				
			elsif (dt_service_w < dt_birth_w) then
			
				CALL generate_inco_eclipse(nr_seq_account_p, 3, obter_desc_expressao(583872), nm_usuario_p); --data de servico nao pode ser anterior que a data de nascimento que -criar uma expressao
			end if;


			if (c01_w.vl_procedimento < 100) then

				CALL generate_inco_eclipse(nr_seq_account_p, 3, obter_desc_expressao(587168), nm_usuario_p); --o valor do procedimento nao poder ser inferior a 100-criar uma expressao
				
			end if;
			
			if (c01_w.qt_duracao IS NOT NULL AND c01_w.qt_duracao::text <> '') then
			
				c01_w.cd_equipamento := null;
				qt_service_w := null;
				nr_lsp_w := null;
				
			end if;
			
			if (c01_w.cd_setor_externo IS NOT NULL AND c01_w.cd_setor_externo::text <> '') then
			
				c01_w.cd_equipamento := null;
				
			end if;
			
			if (ie_service_type_w <> 'S') then
			
				qt_service_w := null;
				nr_lsp_w := null;
				
			elsif (ie_service_type_w = 'S' and qt_service_w = 0) then
				
				CALL generate_inco_eclipse(nr_seq_account_p, 3, obter_desc_expressao(587168), nm_usuario_p); --o campo qt_autorizada deve ter valor quando o tipo de service for S -criar uma expressao
				
			end if;
			
			if ((c01_w.cd_equipamento IS NOT NULL AND c01_w.cd_equipamento::text <> '') and coalesce(nr_lsp_w::text, '') = '') then
				
				CALL generate_inco_eclipse(nr_seq_account_p, 3, obter_desc_expressao(587168), nm_usuario_p); --o campo cd_imobilizado_ext deve ser setado junto como o campo equipamento-criar uma expressao
				
			end if;
			
			
			select  count(nr_sequencia)
			into STRICT    nr_records_w
			from    eclipse_inco_account
			where   nr_interno_conta = nr_seq_account_p;
			
			if (nr_records_w = 0) then

				select	nextval('imc_service_seq')
				into STRICT	nr_seq_w
				;

				insert into imc_service(
										dt_atualizacao,
										nr_sequencia,
										nm_usuario,
										nr_seq_voucher,
										vl_charge,
										dt_collection,
										dt_service,
										ie_duplicate,
										nr_time_service,
										qt_service,
										cd_item,
										nr_lsp,
										ie_multiple,
										qt_patients,
										ie_restrictive,
										ie_rule,
										ie_s4b3,
										cd_scp,
										ie_selfdeemed,
										ds_service,
										qt_duration,
										ie_aftercare,
										dt_accession,
										nm_usuario_nrec,
										dt_atualizacao_nrec,
										cd_equipament,
										nr_seq_proc,
										cd_service_id)
								values (
										clock_timestamp(),
										nr_seq_w,
										nm_usuario_p,
										nr_seq_voucher_p,
										c01_w.vl_procedimento,
										dt_collection_w,
										dt_service_w,
										null,
										to_char(dt_service_w, 'hh:mm:ss') || tz_offset(sessiontimezone),
										qt_service_w,
										lpad(cd_mbs_code_w, 5 , 0),
										nr_lsp_w,
										CASE WHEN c01_w.ds_observacao='S' THEN  'true'  ELSE 'false' END ,
										null,
										null,
										null,
										null,
										c01_w.cd_setor_externo,
										null,
										c01_w.ds_observacao,
										c01_w.qt_duracao,
										null,
										dt_accession_w,
										nm_usuario_p,
										clock_timestamp(),
										c01_w.cd_equipamento,
										c01_w.nr_sequencia,
										cd_service_id_w);
			end if;
		end if;
		end loop;
		close c01;
		
	end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE get_imc_service ( nr_seq_voucher_p imc_voucher.nr_sequencia%type, nm_usuario_p text, ie_validate_p text, nr_seq_account_p bigint) FROM PUBLIC;

