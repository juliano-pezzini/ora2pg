-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_mat_prestador ( nr_seq_prestador_p bigint, nr_seq_conta_mat_p bigint, nr_seq_guia_mat_p bigint, nr_seq_req_mat_p bigint, nr_seq_exec_req_mat_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Consistir se deverá gerar a glosa 1214 para o material na guia/conta

-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------
Referências:
	PLS_CONSISTIR_CONTA_MAT
	PLS_CONSISTIR_MAT_PRESTADOR
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_grupo_material_w		varchar(10)	:= 'S';
ie_liberar_ww			varchar(10);
ie_liberar_w			varchar(1)	:= 'N';
ie_conta_guia_w			varchar(1);
ie_internacao_w			varchar(1);
nr_seq_material_w		bigint;
ie_origem_w			bigint;
qt_mat_prestador_w		bigint;
nr_seq_regra_prest_w		bigint;
nr_seq_prest_fornec_w		bigint;
nr_seq_grupo_material_w		bigint;
nr_seq_regra_prest_ww		bigint;
qt_existe_regra_w		bigint	:= 0;
nr_seq_prestador_exec_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_material_forn_w		bigint;
nr_seq_guia_w			bigint;
dt_atendimento_w		timestamp;
nr_seq_requisicao_w		pls_requisicao.nr_sequencia%type;
ie_origem_solic_w		pls_requisicao.ie_origem_solic%type;



BEGIN
if (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
	ie_conta_guia_w	:= 'C';
elsif (nr_seq_guia_mat_p IS NOT NULL AND nr_seq_guia_mat_p::text <> '') then
	ie_conta_guia_w	:= 'G';
elsif (nr_seq_req_mat_p IS NOT NULL AND nr_seq_req_mat_p::text <> '') then
	ie_conta_guia_w	:= 'R';
end if;

if (ie_conta_guia_w = 'C') then
	select	a.nr_seq_material,
		a.nr_seq_prest_fornec,
		coalesce(coalesce(a.dt_atendimento,b.dt_emissao), clock_timestamp()),
		b.nr_sequencia,
		b.nr_seq_prestador_exec
	into STRICT	nr_seq_material_w,
		nr_seq_prest_fornec_w,
		dt_atendimento_w,
		nr_seq_conta_w,--ie_internacao_w,
		nr_seq_prestador_exec_w
	from	pls_conta	b,
		pls_conta_mat	a
	where	b.nr_sequencia	= a.nr_seq_conta
	and	a.nr_sequencia	= nr_seq_conta_mat_p;

	if (nr_seq_conta_w IS NOT NULL AND nr_seq_conta_w::text <> '') then
		ie_internacao_w	:= substr(pls_obter_se_internado(nr_seq_conta_w, null), 1, 1);
	end if;
elsif (ie_conta_guia_w = 'G') then
	select	a.nr_seq_material,
		a.nr_seq_prest_fornec,
		coalesce(b.dt_solicitacao, clock_timestamp()),
		a.nr_seq_material_forn,
		b.nr_sequencia
	into STRICT	nr_seq_material_w,
		nr_seq_prest_fornec_w,
		dt_atendimento_w,
		nr_seq_material_forn_w,
		nr_seq_guia_w
	from	pls_guia_plano		b,
		pls_guia_plano_mat	a
	where	b.nr_sequencia	= a.nr_seq_guia
	and	a.nr_sequencia	= nr_seq_guia_mat_p;

	if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		ie_internacao_w	:= pls_obter_se_internado_guia(nr_seq_guia_w);
	end if;
elsif (ie_conta_guia_w = 'R') then
	select	a.nr_seq_material,
		a.nr_seq_prest_fornec,
		coalesce(b.dt_requisicao, clock_timestamp()),
		a.nr_seq_material_forn,
		b.nr_sequencia,
		b.nr_seq_prestador_exec,
		b.ie_origem_solic
	into STRICT	nr_seq_material_w,
		nr_seq_prest_fornec_w,
		dt_atendimento_w,
		nr_seq_material_forn_w,
		nr_seq_requisicao_w,
		nr_seq_prestador_exec_w,
		ie_origem_solic_w
	from	pls_requisicao		b,
		pls_requisicao_mat	a
	where	b.nr_sequencia	= a.nr_seq_requisicao
	and	a.nr_sequencia	= nr_seq_req_mat_p;

	if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
		ie_internacao_w	:= pls_obter_se_internado_req(nr_seq_requisicao_w);
	end if;
end if;

select 	count(1)
into STRICT	qt_existe_regra_w
from 	pls_prestador_mat	a
where	a.nr_seq_prestador	= nr_seq_prestador_p;

/* askono - Se nao existe regra castrada, entende-se que não existe restrição, logo não deverá gerar glosa */

if (qt_existe_regra_w = 0) and (ie_conta_guia_w = 'C') then
	ie_liberar_w	:= 'N';
else
	ie_liberar_w	:= pls_obter_se_mat_prestador(	nr_seq_prestador_p,
							nr_seq_prest_fornec_w,
							nr_seq_material_w,
							dt_atendimento_w,
							nr_seq_prestador_exec_w,
							ie_internacao_w,
							cd_estabelecimento_p,
							nr_seq_material_forn_w);
end if;

if (coalesce(ie_liberar_w, 'N') = 'N') then
	if (ie_conta_guia_w = 'C') then
		CALL pls_gravar_conta_glosa(	'1214',
					null,
					null,
					nr_seq_conta_mat_p,
					'N',
					'Verificar serviços do prestador',
					nm_usuario_p,
					'A',
					'CC',
					nr_seq_prestador_p,
					cd_estabelecimento_p,
					'',
					null);
	elsif (ie_conta_guia_w = 'G') then
		CALL pls_gravar_motivo_glosa('1214',
					null,
					null,
					nr_seq_guia_mat_p,
					'Verificar serviços do prestador',
					nm_usuario_p,
					'',
					'CG',
					nr_seq_prestador_p,
					null,
					null);
	elsif (ie_conta_guia_w = 'R') and (ie_origem_solic_w = 'E') then
		CALL pls_gravar_requisicao_glosa(	'1214', null, null,
						nr_seq_req_mat_p, 'Verificar materiais do prestador: ' || ' O material: ' || nr_seq_material_w || ', não está autorizado para o prestador ' || nr_seq_prestador_p || '! ', nm_usuario_p,
						nr_seq_prestador_p, cd_estabelecimento_p, null, null,
						'IG');
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_mat_prestador ( nr_seq_prestador_p bigint, nr_seq_conta_mat_p bigint, nr_seq_guia_mat_p bigint, nr_seq_req_mat_p bigint, nr_seq_exec_req_mat_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

