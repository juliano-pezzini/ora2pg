-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_consiste_sugest_setor ( cd_agenda_p bigint, hr_Agenda_p timestamp, nr_minuto_duracao_p bigint, nr_Seq_ageint_p bigint, cd_setor_marcacao_p bigint, nm_usuario_p text, ds_retorno_p INOUT text, nr_min_regra_p INOUT bigint) AS $body$
DECLARE

 
			 
ds_retorno_w		varchar(1)	:= 'S';
hr_Agenda_w		timestamp;
nr_minuto_duracao_w	bigint;
cd_Agenda_w		bigint;
qt_sobra_w		bigint;
nr_Seq_ageint_item_w	bigint;
nr_Seq_regra_w		bigint;
cd_setor_regra_w	integer;
qt_Tempo_w		bigint;
cd_estab_w		smallint;
			
C01 CURSOR FOR 
	SELECT	nr_Sequencia 
	from	ageint_tempo_entre_setores 
	where	((cd_setor_pri	= cd_setor_marcacao_p) 
	or (cd_setor_seg	= cd_setor_marcacao_p)) 
	and	ie_situacao	= 'A';					
					 
C02 CURSOR FOR 
	SELECT	a.hr_Agenda, 
		a.nr_minuto_duracao, 
		b.nr_sequencia 
	from	agenda_integrada_item b, 
		ageint_sugestao_horarios a, 
		agenda c 
	where	a.nr_seq_Agenda		= b.nr_seq_agenda_int 
	and	a.nr_Seq_item		= b.nr_sequencia 
	and	a.cd_agenda		= c.cd_agenda 
	and	a.nm_usuario		= nm_usuario_p 
	and	a.nr_Seq_agenda		= nr_seq_ageint_p					 
	and	c.cd_setor_exclusivo	= cd_setor_regra_w;
					

BEGIN 
 
open C01;
loop 
fetch C01 into	 
	nr_seq_regra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	select	CASE WHEN cd_setor_pri=cd_setor_marcacao_p THEN  cd_setor_seg  ELSE cd_setor_pri END , 
		qt_tempo 
	into STRICT	cd_setor_regra_w, 
		qt_tempo_w 
	from	ageint_tempo_entre_setores 
	where	nr_sequencia	= nr_seq_regra_w;
	end;
	 
	open C02;
	loop 
	fetch C02 into	 
		hr_Agenda_w, 
		nr_minuto_duracao_w, 
		nr_seq_ageint_item_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
				 
		if (ds_retorno_w	<> 'N') then 
			if (hr_Agenda_w	< hr_Agenda_p) then 
				select	Obter_Min_Entre_Datas((hr_Agenda_w + nr_minuto_duracao_w / 1440), hr_Agenda_p, 1) 
				into STRICT	qt_sobra_w 
				;		
			else 
				select	Obter_Min_Entre_Datas((hr_Agenda_p + nr_minuto_duracao_p / 1440), hr_Agenda_w, 1) 
				into STRICT	qt_sobra_w 
				;		
			end if;
			 
			if (qt_sobra_w	< qt_tempo_w) then 
				ds_retorno_w	:= 'N';
			else 
				ds_Retorno_w	:= 'S';
			end if;
		end if;
		end;
	end loop;
	close C02;
	 
end loop;
close C01;
 
ds_retorno_p	:= ds_retorno_w;
nr_min_regra_p	:= qt_tempo_w;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_consiste_sugest_setor ( cd_agenda_p bigint, hr_Agenda_p timestamp, nr_minuto_duracao_p bigint, nr_Seq_ageint_p bigint, cd_setor_marcacao_p bigint, nm_usuario_p text, ds_retorno_p INOUT text, nr_min_regra_p INOUT bigint) FROM PUBLIC;

