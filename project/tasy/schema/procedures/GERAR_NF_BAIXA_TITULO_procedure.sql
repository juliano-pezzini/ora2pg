-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nf_baixa_titulo (ie_tipo_recebimento_p text, vl_nota_fiscal_p bigint, nr_titulo_p bigint, nr_seq_nf_p bigint, nr_seq_nf_gerada_p INOUT bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w			bigint;
nr_sequencia_nf_w		bigint;
cd_estabelecimento_w		smallint;
cd_cgc_emitente_w		varchar(14);
cd_cgc_w			varchar(14);
cd_serie_nf_w			nota_fiscal.cd_serie_nf%type;
nr_nota_fiscal_w		varchar(255);
dt_emissao_w			timestamp;
nr_seq_lote_ww			bigint;
nr_item_nf_w			bigint;
nr_sequencia_rat_w		bigint;
nr_seq_lote_w			bigint;
cd_pessoa_fisica_w		varchar(10);
cd_perfil_w			bigint;
ie_copiar_nr_danfe_w		varchar(1);
ie_copiar_vencimentos_w		varchar(1);
cd_cond_pagto_w			bigint;
cd_operacao_nf_w		smallint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_natureza_operacao_w		smallint;
ie_tipo_nota_w			varchar(3);
qt_existe_regra_w		integer;
ie_numero_nota_w		serie_nota_fiscal.ie_numero_nota%type;
nr_ultima_nf_w			serie_nota_fiscal.nr_ultima_nf%type;
cont_w				integer;
nr_nota_nf_w			varchar(255);
ds_observacao_w			varchar(4000);
nr_atendimento_w		nota_fiscal_item.nr_atendimento%type;
nr_seq_regra_fat_parc_w		bigint;
ie_tipo_recebimento_w		regra_fatura_parc.ie_tipo_recebimento%type;
ie_estab_serie_nf_w		parametro_compras.ie_estab_serie_nf%type;
cd_cgc_emitente_ww		estabelecimento.cd_cgc%type;
nr_danfe_w			nota_fiscal.nr_danfe%type;

C01 CURSOR FOR
	SELECT 	nr_item_nf
	from	nota_fiscal_item
	where 	nr_sequencia = nr_seq_nf_p
	order by 1;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	nota_fiscal_item_rateio
	where	nr_seq_nota = 	nr_seq_nf_p
	and	nr_item_nf  = 	nr_item_nf_w;

c03 CURSOR FOR
	SELECT	nr_sequencia
	from	nota_fiscal_item_lote
	where	nr_seq_nota = 	nr_seq_nf_p
	and	nr_item_nf  = 	nr_item_nf_w;


BEGIN

/*	- Data inicio vigência (DT_INICIO_VIGENCIA) - Campo obrigatório.
	- Data fim vigência (DT_FIM_VIGENCIA) - Campo obrigatório.
	- Tipo de recebimento (IE_TIPO_RECEBIMENTO) - Campo obrigatório. Será um domínio com as seguintes informações:
										T - Recebimento total
										P - Recebimento parcial
										S - Sem recebimento
	- Operação da nota (CD_OPERACAO_NF) - Esse campo deve ter integridade com a tabela OPERACAO_NOTA - Campo obrigatório.
	- Condição pagamento (CD_COND_PAGTO) - Esse campo deve ter integridade com a tabela CONDICAO_PAGAMENTO - Campo obrigatório.
	- Procedimento (CD_PROCEDIMENTO) - Esse campo deve ter integridade com a tabela PROCEDIMENTO - Campo obrigatório.
	- Observação padrão (DS_OBSERVACAO) - Esse campo pode criar como varchar2 (255) pois o campo DS_OBSERVACAO do item da nota também é apenas de 255 caracteres.
	Esse campo podes apenas criar e colocar na tela, e depois eu faço todos os tratamentos com ele, eu crio as macros, etc etc. Esse campo não precisa ser obrigatório.
*/
select	count(*)
into STRICT	qt_existe_regra_w
from	regra_fatura_parc
where	ie_tipo_recebimento = ie_tipo_recebimento_p
and	clock_timestamp() between dt_inicio_vigencia and dt_fim_vigencia;

if (qt_existe_regra_w > 0) then
	select	cd_cond_pagto,
		cd_operacao_nf,
		cd_procedimento,
		ie_origem_proced,
		ds_observacao,
		ie_tipo_recebimento
	into STRICT	cd_cond_pagto_w,
		cd_operacao_nf_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		ds_observacao_w,
		ie_tipo_recebimento_w
	from	regra_fatura_parc
	where	ie_tipo_recebimento = ie_tipo_recebimento_p
	and	clock_timestamp() between dt_inicio_vigencia and dt_fim_vigencia;
else
	CALL wheb_mensagem_pck.exibir_mensagem_abort(338354);

end if;


select	nextval('nota_fiscal_seq')
into STRICT	nr_sequencia_w
;

nr_nota_fiscal_w := nr_sequencia_w;

select	cd_estabelecimento,
	cd_cgc_emitente,
	cd_serie_nf,
	nr_nota_fiscal,
	dt_emissao,
	cd_pessoa_fisica,
	cd_cgc,
	cd_natureza_operacao,
	ie_tipo_nota,
	nr_danfe
into STRICT	cd_estabelecimento_w,
	cd_cgc_emitente_w,
	cd_serie_nf_w,
	nr_nota_fiscal_w,
	dt_emissao_w,
	cd_pessoa_fisica_w,
	cd_cgc_w,
	cd_natureza_operacao_w,
	ie_tipo_nota_w,
	nr_danfe_w
from	nota_fiscal
where	nr_sequencia = nr_seq_nf_p;

/* obter se será considerado estabelecimento no parâmetro de compras */

select	coalesce(max(ie_estab_serie_nf),'N')
into STRICT	ie_estab_serie_nf_w
from	parametro_compras
where	cd_estabelecimento = cd_estabelecimento_w;

select	max(cd_cgc)
into STRICT	cd_cgc_emitente_ww
from	estabelecimento
where	cd_estabelecimento = cd_estabelecimento_w;

select	max(nr_atendimento)
into STRICT	nr_atendimento_w
from	nota_fiscal_item
where	nr_sequencia = nr_seq_nf_p;

cd_perfil_w	:= obter_perfil_ativo;

select	substr(coalesce(obter_valor_param_usuario(40, 406, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w),'N'),1,1),
	substr(coalesce(obter_valor_param_usuario(40, 407, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w),'N'),1,1)
into STRICT	ie_copiar_nr_danfe_w,
	ie_copiar_vencimentos_w
;


dt_emissao_w := clock_timestamp();

/*if	(nr_nota_fiscal_p <> 0) and
	(	(nvl(ie_numero_nota_w,'X') <> 'S') or
		((nvl(ie_numero_nota_w,'X') = 'S') and (somente_numero(nr_nota_fiscal_p) >= somente_numero(nr_nota_fiscal_w)))) then
	nr_nota_fiscal_w	:= nr_nota_fiscal_p;
end if;*/
select count(*)
into STRICT 	cont_w
from	serie_nota_fiscal
where	cd_serie_nf 		= cd_serie_nf_w
and 	cd_estabelecimento 	= cd_estabelecimento_w;
if (cont_w = 0) then
	--(-20011, 'A Série informada não está cadastrada!');
	CALL wheb_mensagem_pck.exibir_mensagem_abort(173208);
end if;

select	nr_ultima_nf + 1,
	ie_numero_nota
into STRICT	nr_nota_nf_w,
	ie_numero_nota_w
from	serie_nota_fiscal
where	cd_serie_nf 		= cd_serie_nf_w
and	cd_estabelecimento 	= cd_estabelecimento_w;

if (nr_nota_nf_w IS NOT NULL AND nr_nota_nf_w::text <> '') then

	if (coalesce(ie_estab_serie_nf_w,'N') = 'S') then
		update	serie_nota_fiscal
		set	nr_ultima_nf 		= nr_nota_nf_w
		where	cd_serie_nf 		= cd_serie_nf_w
		and	cd_estabelecimento in (SELECT	z.cd_estabelecimento
						from	estabelecimento z
						where	z.cd_cgc = cd_cgc_emitente_ww);
	else
		update	serie_nota_fiscal
		set	nr_ultima_nf 		= nr_nota_nf_w
		where	cd_serie_nf 		= cd_serie_nf_w
		and	cd_estabelecimento 	= cd_estabelecimento_w;
	end if;

end if;

/*if	(nr_nota_fiscal_w <> 0) and
	(	(nvl(ie_numero_nota_w,'X') <> 'S') or
		((nvl(ie_numero_nota_w,'X') = 'S') and (somente_numero(nr_nota_fiscal_w) >= somente_numero(nr_nota_nf_w)))) then
	nr_nota_nf_w	:= nr_nota_fiscal_w;
end if; */
select	coalesce(max(nr_sequencia_nf),0) +1
into STRICT	nr_sequencia_nf_w
from	nota_fiscal
where	cd_estabelecimento	= cd_estabelecimento_w
and	coalesce(cd_cgc_emitente,'0')= coalesce(cd_cgc_emitente_w,'0')
and	cd_serie_nf		= cd_serie_nf_w
and	nr_nota_fiscal		= nr_nota_nf_w;

ds_observacao_w := substr(
			replace(
			replace(
			replace(
			replace(
			replace(
			ds_observacao_w,
			'@ds_tipo_recebimento',obter_valor_dominio(7465,ie_tipo_recebimento_p)),
			'@nr_titulo', nr_titulo_p),
			'@nr_seq_nota_origem', nr_seq_nf_p),
			'@nr_atendimento', nr_atendimento_w),
			'@nr_factura_imp', nr_danfe_w),1,4000);

insert into nota_fiscal(
	nr_sequencia,
	cd_estabelecimento,
	cd_cgc_emitente,
	cd_serie_nf,
	nr_nota_fiscal,
	nr_sequencia_nf,
	cd_operacao_nf,
	dt_emissao,
	dt_entrada_saida,
	ie_acao_nf,
	ie_emissao_nf,
	ie_tipo_frete,
	vl_mercadoria,
	vl_total_nota,
	qt_peso_bruto,
	qt_peso_liquido,
	dt_atualizacao,
	nm_usuario,
	cd_condicao_pagamento,
	cd_cgc,
	cd_pessoa_fisica,
	vl_ipi,
	vl_descontos,
	vl_frete,
	vl_seguro,
	vl_despesa_acessoria,
	ds_observacao,
	nr_nota_referencia,
	cd_serie_referencia,
	cd_natureza_operacao,
	dt_atualizacao_estoque,
	vl_desconto_rateio,
	ie_situacao,
	nr_ordem_compra,
	nr_sequencia_ref,
	nr_interno_conta,
	dt_atualizacao_cp_cr,
	nr_seq_protocolo,
	cd_moeda,
	vl_conv_moeda,
	ds_inconsistencia,
	dt_impressao,
	ds_obs_desconto_nf,
	nr_seq_classif_fiscal,
	ie_entregue_bloqueto,
	nr_seq_exportada,
	nr_nfe_imp,
	ie_tipo_nota,
	cd_setor_impressao,
	nr_seq_motivo_cancel,
	nr_seq_motivo_devol,
	nr_recibo,
	nr_seq_mensalidade,
	cd_setor_digitacao,
	nr_seq_prot_res_pls,
	nr_seq_lote_res_pls,
	nr_danfe,
	cd_tipo_servico,
	ie_nf_eletronica,
	nr_seq_forma_pagto,
	cd_conv_entrada,
	nr_seq_modelo,
	cd_paciente_inf,
	ds_dados_adic_itens,
	ie_nat_oper_rps,
	cd_fab_estrangeiro,
	uf_embarque,
	ds_local_embarque,
	cd_banco,
	cd_agencia_bancaria,
	ie_digito_agencia,
	nr_conta,
	nr_digito_conta,
	nr_seq_trans_financ,
	nr_seq_classificacao,
	ie_tipo_recebimento)
	(SELECT	nr_sequencia_w,
		cd_estabelecimento,
		cd_cgc_emitente_w,
		cd_serie_nf,
		coalesce(nr_nota_nf_w,nr_nota_fiscal_w),
		1,
		cd_operacao_nf_w,
		dt_emissao_w,
		clock_timestamp(),
		1,
		ie_emissao_nf,
		ie_tipo_frete,
		0,
		0,
		qt_peso_bruto,
		qt_peso_liquido,
		clock_timestamp(),
		nm_usuario_p,
		cd_cond_pagto_w,
		cd_cgc,
		cd_pessoa_fisica,
		0,
		0,
		0,
		0,
		0,
		ds_observacao_w, /*Duplicada através da nota #@NR_SEQUENCIA_P#@*/
		nr_nota_referencia,
		cd_serie_referencia,
		cd_natureza_operacao,
		'',
		vl_desconto_rateio,
		'1',
		nr_ordem_compra,
		nr_sequencia_ref,
		nr_interno_conta,
		dt_atualizacao_cp_cr,
		nr_seq_protocolo,
		cd_moeda,
		vl_conv_moeda,
		ds_inconsistencia,
		'',
		ds_obs_desconto_nf,
		nr_seq_classif_fiscal,
		ie_entregue_bloqueto,
		nr_seq_exportada,
		null,
		ie_tipo_nota,
		cd_setor_impressao,
		nr_seq_motivo_cancel,
		nr_seq_motivo_devol,
		nr_recibo,
		nr_seq_mensalidade,
		cd_setor_digitacao,
		nr_seq_prot_res_pls,
		nr_seq_lote_res_pls,
		CASE WHEN ie_copiar_nr_danfe_w='S' THEN nr_danfe  ELSE null END ,
		cd_tipo_servico,
		ie_nf_eletronica,
		nr_seq_forma_pagto,
		cd_conv_entrada,
		nr_seq_modelo,
		cd_paciente_inf,
		ds_dados_adic_itens,
		ie_nat_oper_rps,
		cd_fab_estrangeiro,
		uf_embarque,
		ds_local_embarque,
		cd_banco,
		cd_agencia_bancaria,
		ie_digito_agencia,
		nr_conta,
		nr_digito_conta,
		nr_seq_trans_financ,
		nr_seq_classificacao,
		ie_tipo_recebimento_w
	from	nota_fiscal
	where	nr_sequencia = nr_seq_nf_p);

	select (coalesce(max(nr_item_nf),0)+1)
 	into STRICT	nr_item_nf_w
	from	nota_fiscal_item
	where	nr_sequencia = nr_sequencia_w;

	insert into nota_fiscal_item(
		nr_sequencia,
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_nota_fiscal,
		nr_sequencia_nf,
		nr_item_nf,
		cd_natureza_operacao,
		qt_item_nf,
		vl_unitario_item_nf,
		vl_total_item_nf,
		dt_atualizacao,
		nm_usuario,
		vl_frete,
		vl_desconto,
		vl_despesa_acessoria,
		cd_material,
		cd_procedimento,
		cd_setor_atendimento,
		cd_conta,
		cd_local_estoque,
		ds_observacao,
		qt_peso_bruto,
		qt_peso_liquido,
		cd_unidade_medida_compra,
		qt_item_estoque,
		cd_unidade_medida_estoque,
		cd_lote_fabricacao,
		dt_validade,
		dt_atualizacao_estoque,
		--cd_conta_contabil,
		vl_desconto_rateio,
		vl_seguro,
		--cd_centro_custo,
		cd_material_estoque,
		ie_origem_proced,
		nr_ordem_compra,
		vl_liquido,
		pr_desconto,
		nr_item_oci,
		dt_entrega_ordem,
		nr_seq_conta_financ,
		nr_contrato,
		ds_complemento,
		nr_seq_proj_rec,
		vl_projeto,
		nr_atendimento,
		pr_desc_financ,
		vl_desc_financ,
		nr_seq_lic_item,
		nr_seq_ordem_serv,
		ds_inconsistencia,
		ds_justificativa,
		vl_liq_moeda_ref,
		nr_seq_unidade_adic,
		nr_seq_lote_fornec,
		nr_emprestimo,
		nr_seq_item_emprestimo,
		ie_atualizar_barras,
		cd_barra_material,
		nr_sequencia_vinc_consig,
		nr_seq_proj_gpi,
		nr_seq_etapa_gpi,
		nr_seq_conta_gpi,
		dt_inicio_garantia,
		dt_fim_garantia,
		nr_seq_marca)
	values (	nr_sequencia_w,
		cd_estabelecimento_w,
		cd_cgc_emitente_w,
		cd_serie_nf_w,
		nr_nota_fiscal_w,
		nr_sequencia_nf_w,
		nr_item_nf_w,
		cd_natureza_operacao_w,
		1,
		coalesce(vl_nota_fiscal_p,0) * 1,
		coalesce(vl_nota_fiscal_p,0) * 1,
		clock_timestamp(),
		nm_usuario_p,
		0,
		0,
		0,
		null,
		cd_procedimento_w,
		null,
		0,
		null,
		null,
		0,
		0,
		null,
		0,
		null,
		null,
		null,
		'',
		--cd_conta_contabil, --verificar
		0,
		0,
		--cd_centro_custo, verificar
		null,
		ie_origem_proced_w,
		null,
		vl_nota_fiscal_p, --(vl_total_item_nf - vl_desconto),
		0,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		nr_atendimento_w,
		0,
		0,
		null,
		null,
		null,
		null,
		0,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null);

nr_seq_nf_gerada_p := nr_sequencia_w;

commit;

CALL atualiza_total_nota_fiscal(nr_sequencia_w,nm_usuario_p);
CALL gerar_vencimento_nota_fiscal(nr_sequencia_w,nm_usuario_p);
CALL gerar_imposto_nf(nr_sequencia_w,nm_usuario_p,0,0,'N','A');
CALL Gerar_Imposto_Nf_Item(nr_sequencia_w,nr_item_nf_w,nm_usuario_p,0,0,'N');
CALL atualizar_nota_fiscal(nr_sequencia_w,'I',nm_usuario_p,3);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nf_baixa_titulo (ie_tipo_recebimento_p text, vl_nota_fiscal_p bigint, nr_titulo_p bigint, nr_seq_nf_p bigint, nr_seq_nf_gerada_p INOUT bigint, nm_usuario_p text) FROM PUBLIC;

