-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_regra_envio_comunic_usu ( nm_usuario_p text) AS $body$
DECLARE

 
nr_sequencia_w		bigint;
cd_evento_w		varchar(3);
ie_usuario_w		varchar(3);
qt_existe_w		bigint;
cd_estabelecimento_w	smallint;
ie_aviso_solicitante_w	varchar(1);
ie_faz_insert_w		varchar(1) := 'S';
ie_aviso_chegada_w	varchar(1);

c00 CURSOR FOR 
SELECT	distinct cd_estabelecimento 
from	regra_envio_comunic_compra;

c01 CURSOR FOR 
SELECT	distinct cd_evento 
from	regra_envio_comunic_evento;

c02 CURSOR FOR 
SELECT	vl_dominio 
from	valor_dominio 
where	cd_dominio = 2633 
and	vl_dominio in ('SSC','UDS','UCO','SPC','UDC','CPC','RSC') 
and	cd_evento_w = 1 

union
 
SELECT	vl_dominio 
from	valor_dominio 
where	cd_dominio = 2633 
and	vl_dominio in ('UOI','USI','UPC') 
and	cd_evento_w = 2 

union
 
select	vl_dominio 
from	valor_dominio 
where	cd_dominio = 2633 
and	vl_dominio in ('SSC','UDS') 
and	cd_evento_w IN (3,4,5,8,9) 

union
 
select	vl_dominio 
from	valor_dominio 
where	cd_dominio = 2633 
and	vl_dominio in ('URP') 
and	cd_evento_w = 6 

union
 
select	vl_dominio 
from	valor_dominio 
where	cd_dominio = 2633 
and	vl_dominio in ('USP') 
and	cd_evento_w = 7 

union
 
select	vl_dominio 
from	valor_dominio 
where	cd_dominio = 2633 
and	vl_dominio in ('SSC','UDS','CRS','UDC') 
and	cd_evento_w = 10;


BEGIN 
select	count(*) 
into STRICT	qt_existe_w 
from	regra_envio_comunic_usu;
 
if (qt_existe_w = 0) then 
 
	open C00;
	loop 
	fetch C00 into	 
		cd_estabelecimento_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */
		begin 
		 
		select	ie_aviso_solicitante, 
			ie_aviso_chegada 
		into STRICT	ie_aviso_solicitante_w, 
			ie_aviso_chegada_w 
		from	parametro_compras 
		where	cd_estabelecimento = cd_estabelecimento_w;
		 
		open C01;
		loop 
		fetch C01 into	 
			cd_evento_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			select	coalesce(max(b.nr_sequencia),0) 
			into STRICT	nr_sequencia_w 
			from	regra_envio_comunic_evento b, 
				regra_envio_comunic_compra a 
			where	b.cd_evento = cd_evento_w 
			and	a.nr_sequencia = b.nr_seq_regra 
			and	a.cd_estabelecimento = cd_estabelecimento_w;
		 
			if (nr_sequencia_w > 0) then 
				open C02;
				loop 
				fetch C02 into	 
					ie_usuario_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin 
					 
					if (ie_aviso_solicitante_w = 'N') and (cd_evento_w = 1) and 
						((ie_usuario_w = 'SPC') or (ie_usuario_w = 'UDC')) then 
						ie_faz_insert_w := 'N';
					end if;
					 
					if (ie_aviso_chegada_w = 'N') and (cd_evento_w = 5) then 
						ie_faz_insert_w := 'N';
					end if;
					 
					if (ie_faz_insert_w = 'S') then 
					 
						insert into regra_envio_comunic_usu( 
							nr_sequencia, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							nr_seq_evento, 
							ie_usuario) 
						values (nextval('regra_envio_comunic_usu_seq'), 
							clock_timestamp(), 
							nm_usuario_p, 
							clock_timestamp(), 
							nm_usuario_p, 
							nr_sequencia_w, 
							ie_usuario_w);
					end if;
					ie_faz_insert_w := 'S';
					end;
				end loop;
				close C02;
			end if;
			end;
		end loop;
		close C01;
		end;
	end loop;
	close C00;
end if;
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_regra_envio_comunic_usu ( nm_usuario_p text) FROM PUBLIC;

