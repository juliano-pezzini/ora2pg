-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_duplicar_regra_plano ( nr_seq_regra_p bigint, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w			bigint;

/* ie_opcao_p
	B - Cobertura
	L - Limitação
	C - Carência
	P - CPT
	O - Co-participação */
BEGIN

if (ie_opcao_p	= 'B') then
	select	nextval('pls_tipo_cobertura_seq')
	into STRICT	nr_sequencia_w
	;

	insert into pls_tipo_cobertura(	nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ds_cobertura,
						ie_situacao,
						cd_estabelecimento)
					(SELECT	nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						'Cópia de ' || ds_cobertura,
						ie_situacao,
						cd_estabelecimento
					from	pls_tipo_cobertura
					where	nr_sequencia	= nr_seq_regra_p);

	insert into pls_cobertura_proc(	nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_tipo_cobertura,
						cd_procedimento,
						ie_origem_proced,
						cd_area_procedimento,
						cd_especialidade,
						cd_grupo_proc,
						ie_cobertura,
						nr_seq_grupo_servico)
					(SELECT	nextval('pls_cobertura_proc_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_sequencia_w,
						cd_procedimento,
						ie_origem_proced,
						cd_area_procedimento,
						cd_especialidade,
						cd_grupo_proc,
						ie_cobertura,
						nr_seq_grupo_servico
					from	pls_cobertura_proc
					where	nr_seq_tipo_cobertura	= nr_seq_regra_p);

elsif (ie_opcao_p	= 'L') then
	select	nextval('pls_tipo_limitacao_seq')
	into STRICT	nr_sequencia_w
	;

	insert into pls_tipo_limitacao(	nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ds_limitacao,
					ie_situacao,
					cd_estabelecimento,
					ie_tipo_incidencia)
				(SELECT	nr_sequencia_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					'Cópia de ' || ds_limitacao,
					ie_situacao,
					cd_estabelecimento,
					ie_tipo_incidencia
				from	pls_tipo_limitacao
				where	nr_sequencia	= nr_seq_regra_p);

	insert into pls_limitacao_proc(	nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_tipo_limitacao,
					cd_procedimento,
					ie_origem_proced,
					cd_area_procedimento,
					cd_especialidade,
					cd_grupo_proc,
					ie_limitacao,
					cd_doenca_cid,
					ie_tipo_guia)
				(SELECT	nextval('pls_limitacao_proc_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_sequencia_w,
					cd_procedimento,
					ie_origem_proced,
					cd_area_procedimento,
					cd_especialidade,
					cd_grupo_proc,
					ie_limitacao,
					cd_doenca_cid,
					ie_tipo_guia
				from	pls_limitacao_proc
				where	nr_seq_tipo_limitacao = nr_seq_regra_p);

elsif (ie_opcao_p	= 'C') then
	select	nextval('pls_tipo_carencia_seq')
	into STRICT	nr_sequencia_w
	;

	insert into pls_tipo_carencia(	nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ds_carencia,
					ie_cpt,
					ie_situacao,
					cd_estabelecimento,
					ie_padrao,
					ie_tipo_impacto,
					qt_dias_padrao,
					nr_seq_classif_cpt,
					ie_tipo_operacao)
				(SELECT	nr_sequencia_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					'Cópia de ' || ds_carencia,
					ie_cpt,
					ie_situacao,
					cd_estabelecimento,
					ie_padrao,
					ie_tipo_impacto,
					qt_dias_padrao,
					nr_seq_classif_cpt,
					ie_tipo_operacao
				from	pls_tipo_carencia
				where	nr_sequencia	= nr_seq_regra_p);

	insert into pls_carencia_proc(	nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_tipo_carencia,
					cd_procedimento,
					ie_origem_proced,
					cd_area_procedimento,
					cd_especialidade,
					cd_grupo_proc,
					ie_tipo_guia,
					ie_liberado,
					nr_seq_tipo_acomodacao,
					cd_doenca_cid,
					nr_seq_grupo_servico,
					cd_categoria_cid)
				(SELECT	nextval('pls_carencia_proc_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_sequencia_w,
					cd_procedimento,
					ie_origem_proced,
					cd_area_procedimento,
					cd_especialidade,
					cd_grupo_proc,
					ie_tipo_guia,
					ie_liberado,
					nr_seq_tipo_acomodacao,
					cd_doenca_cid,
					nr_seq_grupo_servico,
					cd_categoria_cid
				from	pls_carencia_proc
				where	nr_seq_tipo_carencia	= nr_seq_regra_p);

elsif (ie_opcao_p	= 'P') then
	select	nextval('pls_tipo_carencia_seq')
	into STRICT	nr_sequencia_w
	;

	insert into pls_tipo_carencia(	nr_sequencia,
					cd_estabelecimento,
					ie_tipo_impacto,
					ds_carencia,
					ie_cpt,
					ie_padrao,
					ie_situacao,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					qt_dias_padrao,
					nr_seq_classif_cpt,
					ie_tipo_operacao)
				(SELECT	nr_sequencia_w,
					cd_estabelecimento,
					ie_tipo_impacto,
					'Cópia de ' || ds_carencia,
					ie_cpt,
					ie_padrao,
					ie_situacao,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					qt_dias_padrao,
					nr_seq_classif_cpt,
					ie_tipo_operacao
				from	pls_tipo_carencia
				where	nr_sequencia	= nr_seq_regra_p);

	insert into pls_carencia_proc(	nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_tipo_carencia,
					cd_procedimento,
					ie_origem_proced,
					cd_area_procedimento,
					cd_especialidade,
					cd_grupo_proc,
					ie_tipo_guia,
					ie_liberado,
					nr_seq_tipo_acomodacao,
					cd_doenca_cid,
					nr_seq_grupo_servico,
					cd_categoria_cid)
				(SELECT	nextval('pls_carencia_proc_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_sequencia_w,
					cd_procedimento,
					ie_origem_proced,
					cd_area_procedimento,
					cd_especialidade,
					cd_grupo_proc,
					ie_tipo_guia,
					ie_liberado,
					nr_seq_tipo_acomodacao,
					cd_doenca_cid,
					nr_seq_grupo_servico,
					cd_categoria_cid
				from	pls_carencia_proc
				where	nr_seq_tipo_carencia	= nr_seq_regra_p);

elsif (ie_opcao_p	= 'O') then
	select	nextval('pls_tipo_coparticipacao_seq')
	into STRICT	nr_sequencia_w
	;

	insert into pls_tipo_coparticipacao(	nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ds_tipo_coparticipacao,
						ie_situacao,
						cd_estabelecimento,
						cd_procedimento_internacao,
						ie_origem_proced_internacao)
					(SELECT	nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						'Cópia de ' || ds_tipo_coparticipacao,
						ie_situacao,
						cd_estabelecimento,
						cd_procedimento_internacao,
						ie_origem_proced_internacao
					from	pls_tipo_coparticipacao
					where	nr_sequencia	= nr_seq_regra_p);

	insert into pls_coparticipacao_proc(	nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_procedimento,
						ie_origem_proced,
						cd_area_procedimento,
						cd_especialidade,
						cd_grupo_proc,
						nr_seq_tipo_coparticipacao,
						ie_liberado,
						nr_seq_clinica,
						nr_seq_saida_int)
					(SELECT	nextval('pls_coparticipacao_proc_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_procedimento,
						ie_origem_proced,
						cd_area_procedimento,
						cd_especialidade,
						cd_grupo_proc,
						nr_sequencia_w,
						ie_liberado,
						nr_seq_clinica,
						nr_seq_saida_int
					from	pls_coparticipacao_proc
					where	nr_seq_tipo_coparticipacao = nr_seq_regra_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_duplicar_regra_plano ( nr_seq_regra_p bigint, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

