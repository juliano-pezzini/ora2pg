-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_exame_rotina_orcamento ( nr_seq_orcamento_p bigint, nr_sequencia_p bigint, ie_tipo_Exame_p bigint, nm_usuario_p text, cd_material_p text, cd_medico_exec_p text, qt_procedimento_p bigint) AS $body$
DECLARE


nr_seq_exame_w			bigint;
nr_seq_material_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_material_exame_w		varchar(20);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
ie_origem_w			bigint;
cd_setor_atend_conv_w		bigint;
ie_tipo_atendimento_w		smallint;
ie_tipo_convenio_w			smallint;
cd_estab_w			smallint;
nr_atendimento_w			bigint;
ie_tipo_atend_w			smallint;
ie_tipo_conv_w			smallint;
cd_estabelecimento_w		smallint;
nr_proc_interno_w			bigint;
ds_erro_w			varchar(255);
qt_material_w			bigint;
qt_procedimento_w		double precision;
ie_consiste_edicao_w		varchar(1);
ie_autorizacao_w		varchar(3);
ie_gera_proc_assoc_w		varchar(1);
nr_seq_proc_orc_w		bigint;
var_consiste_regra_plano_w	varchar(1);
cd_plano_w			varchar(10);
ie_regra_w			smallint	:= 0;
nr_seq_regra_w			bigint;
ie_resp_autor_w			varchar(3);
nr_seq_proc_interno_aux_w	bigint;
cd_tipo_acomodacao_w		smallint;
ie_consiste_glosa_partic_w	varchar(1);
ds_retorno_w			varchar(255);
nr_retorno_w			double precision;
ie_glosa_w			varchar(3);
cd_pessoa_fisica_w		varchar(10);
cd_convenio_glosa_w		convenio.cd_convenio%type;
cd_categoria_glosa_w		categoria_convenio.cd_categoria%type;
ie_glosa_plano_w		regra_ajuste_proc.ie_glosa%type;
nr_seq_regra_preco_w		regra_ajuste_proc.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_proc_interno
	from	Procedimento_rotina a
	where	a.nr_seq_rotina		= nr_sequencia_p;

C02 CURSOR FOR
	SELECT	coalesce(c.cd_procedimento, a.cd_procedimento),
		coalesce(c.ie_origem_proced, a.ie_origem_proced),
		a.nr_seq_exame,
		x.nr_seq_material
	FROM exame_lab_rotina x, exame_laboratorio a
LEFT OUTER JOIN exame_lab_convenio c ON (a.nr_seq_exame = c.nr_seq_exame AND cd_convenio_w = c.cd_convenio AND obter_origem_proced_cat(cd_estabelecimento_w, ie_tipo_atend_w, ie_tipo_conv_w, cd_convenio_w, cd_categoria_w) = c.ie_origem_proced)
LEFT OUTER JOIN procedimento b ON (a.cd_procedimento = b.cd_procedimento AND a.ie_origem_proced = b.ie_origem_proced)
WHERE x.nr_seq_rotina		= nr_sequencia_p and x.nr_seq_exame		= a.nr_seq_exame      and coalesce(c.ie_tipo_atendimento, ie_tipo_atend_w)	= ie_tipo_atend_w;

C03 CURSOR FOR
	SELECT	coalesce(c.cd_procedimento, a.cd_procedimento),
		coalesce(c.ie_origem_proced, a.ie_origem_proced),
		a.nr_seq_exame,
		x.nr_seq_material
	FROM exame_lab_rotina x, exame_laboratorio a
LEFT OUTER JOIN exame_lab_convenio c ON (a.nr_seq_exame = c.nr_seq_exame AND cd_convenio_w = c.cd_convenio AND obter_origem_proced_cat(cd_estabelecimento_w, ie_tipo_atend_w, ie_tipo_conv_w, cd_convenio_w, cd_categoria_w) = c.ie_origem_proced)
LEFT OUTER JOIN procedimento b ON (a.cd_procedimento = b.cd_procedimento AND a.ie_origem_proced = b.ie_origem_proced)
WHERE x.nr_sequencia		= nr_sequencia_p and x.nr_seq_exame		= a.nr_seq_exame      and coalesce(c.ie_tipo_atendimento, coalesce(ie_tipo_atend_w,1)) = coalesce(ie_tipo_atend_w,1);




BEGIN

qt_procedimento_w	:= qt_procedimento_p;

select	coalesce(nr_atendimento,0),
	cd_estabelecimento,
	cd_convenio,
	cd_categoria,
	coalesce(ie_tipo_atendimento,0),
	cd_plano,
	cd_tipo_acomodacao,
	cd_pessoa_fisica
into STRICT	nr_atendimento_w,
	cd_estabelecimento_w,
	cd_convenio_w,
	cd_categoria_w,
	ie_tipo_atend_w,
	cd_plano_w,
	cd_tipo_acomodacao_w,
	cd_pessoa_fisica_w
from	orcamento_paciente
where 	nr_sequencia_orcamento	= nr_seq_orcamento_p;

ie_consiste_edicao_w := obter_valor_param_usuario(106, 36, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w);
ie_gera_proc_assoc_w := coalesce(obter_valor_param_usuario(106, 45, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');
ie_consiste_glosa_partic_w	:= coalesce(obter_valor_param_usuario(106, 44 , obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');

if (nr_atendimento_w <> 0) and (coalesce(ie_tipo_atend_w,0) =0) then
	select	ie_tipo_atendimento
	into STRICT	ie_tipo_atend_w
	from 	atendimento_paciente
	where 	nr_atendimento = nr_atendimento_w;
end if;

select 	max(ie_tipo_convenio)
into STRICT	ie_tipo_conv_w
from 	convenio
where 	cd_convenio = cd_convenio_w;

if (ie_tipo_exame_p = 0) then
	begin

	open C03;
	loop
		fetch C03 into	
			cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_exame_w,
			nr_seq_material_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			cd_procedimento_w	:= cd_procedimento_w;
			ie_origem_proced_w	:= ie_origem_proced_w;
			nr_seq_exame_w		:= nr_seq_exame_w;
			nr_seq_material_w	:= nr_seq_material_w;
			end;
	end loop;
	close C03;
	
	if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then

		if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
			select 	max(cd_material_exame)
			into STRICT	cd_material_exame_w
			from	material_exame_lab
			where	nr_sequencia = nr_seq_material_w;
		end if;
	
		
		ie_tipo_convenio_w	:= ie_tipo_conv_w;
		ie_tipo_atendimento_w	:= ie_tipo_atend_w;
		cd_estab_w		:= cd_estabelecimento_w;
	
		SELECT * FROM obter_exame_lab_convenio(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estab_w, ie_tipo_convenio_w, null, cd_material_exame_w, cd_plano_w, cd_setor_atend_conv_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT cd_setor_atend_conv_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;
	end if;
	

	
	select  count(*)
	into STRICT	qt_material_w
	from    material_exame_lab b,
        	exame_lab_material a
	where 	a.nr_seq_material = b.nr_sequencia
	and 	a.nr_seq_exame    = nr_seq_exame_w
	and 	a.ie_situacao	= 'A';

	if (qt_material_w = 1) or (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
		if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
			select	max(cd_material_exame)
			into STRICT	cd_material_exame_w
			from	material_exame_lab
			where	nr_sequencia = nr_seq_material_w;		
		else
			select	max(cd_material_exame)
			into STRICT	cd_material_exame_w
			from	material_exame_lab b,
				exame_lab_material a
			where	a.nr_seq_material = b.nr_sequencia
	  		  and	a.nr_seq_exame 	= nr_seq_exame_w
			  and	a.ie_situacao	= 'A'
			  and	ie_prioridade	=
				(SELECT	min(ie_prioridade)
				from	exame_lab_material x
				where	nr_seq_exame	= nr_seq_exame_w
				and	x.ie_situacao	= 'A');
		end if;
	end if;	

	end;
elsif (ie_tipo_exame_p = 1) then
	begin
	
	Select	a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_proc_interno
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		nr_proc_interno_w
	from 	Procedimento_rotina a
	where	a.nr_sequencia		= nr_sequencia_p;
	end;
elsif (ie_tipo_exame_p = 2) then
	begin
	select	max(coalesce(c.cd_procedimento, a.cd_procedimento)),
		max(coalesce(c.ie_origem_proced, a.ie_origem_proced)),
		max(a.nr_seq_exame)
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_exame_w
	FROM procedimento b, exame_laboratorio a
LEFT OUTER JOIN exame_lab_convenio c ON (a.nr_seq_exame = c.nr_seq_exame AND cd_convenio_w = c.cd_convenio AND ie_origem_proced_w = c.ie_origem_proced)
WHERE a.cd_procedimento	= b.cd_procedimento and a.ie_origem_proced	= b.ie_origem_proced   and a.nr_seq_exame		= nr_sequencia_p;	
	
		
	if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
		
		ie_tipo_convenio_w	:= ie_tipo_conv_w;
		ie_tipo_atendimento_w	:= ie_tipo_atend_w;
		cd_estab_w		:= cd_estabelecimento_w;

		SELECT * FROM obter_exame_lab_convenio(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estab_w, ie_tipo_convenio_w, null, cd_material_exame_w, cd_plano_w, cd_setor_atend_conv_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT cd_setor_atend_conv_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;
				
		begin
		select  count(*)
		into STRICT	qt_material_w
		from    material_exame_lab b,
	        	exame_lab_material a
		where 	a.nr_seq_material = b.nr_sequencia
		and 	a.nr_seq_exame    = nr_seq_exame_w
		and 	a.ie_situacao	= 'A';

		if (qt_material_w = 1) then
			select	max(cd_material_exame)
			into STRICT	cd_material_exame_w
			from	material_exame_lab b,
				exame_lab_material a
			where	a.nr_seq_material 	= b.nr_sequencia
			and	a.nr_seq_exame 		= nr_seq_exame_w
			and	a.ie_situacao	= 'A'
			and	ie_prioridade		=
					(SELECT	min(ie_prioridade)
					from 		exame_lab_material x
					where		nr_seq_exame	= nr_seq_exame_w
					and		x.ie_situacao	= 'A');
		end if;
		end;
	end if;	

	end;
elsif (ie_tipo_exame_p = 3) then
	begin

	ie_origem_w := obter_origem_proced_cat(cd_estabelecimento_w, ie_tipo_atend_w, ie_tipo_conv_w, cd_convenio_w, cd_categoria_w);

	select	cd_procedimento,
		ie_origem_proced,
		'' nr_seq_exame
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_exame_w
	from	procedimento
	where	cd_procedimento		= nr_sequencia_p
	and	ie_origem_proced	= ie_origem_w;	
	end;
		
elsif (ie_tipo_exame_p = 4) then
	begin
	open C01;
	loop
	fetch C01 into	
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_proc_interno_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		if (nr_proc_interno_w IS NOT NULL AND nr_proc_interno_w::text <> '') then
			SELECT * FROM Obter_Proc_Tab_Interno_conv(nr_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), cd_tipo_acomodacao_w, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
		end if;

		ie_autorizacao_w:= null;
		if	((ie_consiste_edicao_w <> 'N') and (obter_se_proc_edicao(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, clock_timestamp(), cd_procedimento_w, ie_tipo_atend_w) = 'N') and (obter_se_pacote_convenio(cd_procedimento_w, ie_origem_proced_w, cd_convenio_w, cd_estabelecimento_w) = 'N')) then
			 ie_autorizacao_w:= 'B'; --Bloqueado pelo convenio
		end if;
		
		cd_convenio_glosa_w	:= cd_convenio_w;
		cd_categoria_glosa_w	:= cd_categoria_w;
		
		if (coalesce(ie_consiste_glosa_partic_w,'N') = 'S') and (coalesce(ie_autorizacao_w,'L') <> 'B') then
			SELECT * FROM glosa_procedimento(cd_estabelecimento_w, nr_atendimento_w, clock_timestamp(), cd_procedimento_w, ie_origem_proced_w, qt_procedimento_w, 0, ie_tipo_atend_w, 0, nr_seq_exame_w, nr_proc_interno_w, null, cd_plano_w, 0, 0, null, null, cd_convenio_glosa_w, cd_categoria_glosa_w, nr_retorno_w, ds_retorno_w, ds_retorno_w, nr_retorno_w, nr_retorno_w, ds_retorno_w, ds_retorno_w, ie_glosa_w, nr_retorno_w, nr_retorno_w, nr_retorno_w, nr_retorno_w, nr_retorno_w, ds_retorno_w, nr_retorno_w, ds_retorno_w, nr_retorno_w, ds_retorno_w, nr_retorno_w, null, null, null, null, 0, null, null, null, null, null, null, null, null) INTO STRICT cd_convenio_glosa_w, cd_categoria_glosa_w, nr_retorno_w, ds_retorno_w, ds_retorno_w, nr_retorno_w, nr_retorno_w, ds_retorno_w, ds_retorno_w, ie_glosa_w, nr_retorno_w, nr_retorno_w, nr_retorno_w, nr_retorno_w, nr_retorno_w, ds_retorno_w, nr_retorno_w, ds_retorno_w, nr_retorno_w, ds_retorno_w, nr_retorno_w;
				
			if (ie_glosa_w IS NOT NULL AND ie_glosa_w::text <> '') and (ie_glosa_w in ('G','T','D','F')) then
				ie_autorizacao_w := 'B';
			end if;
		end if;
		
		var_consiste_regra_plano_w	:= obter_valor_param_usuario(106, 28, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w);
		if (var_consiste_regra_plano_w = 'S') and (coalesce(ie_autorizacao_w,'L') <> 'B') then
		
			SELECT * FROM consiste_plano_convenio(nr_atendimento_w, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, clock_timestamp(), qt_procedimento_w, ie_tipo_atend_w, cd_plano_w, null, ds_erro_w, null, nr_seq_exame_w, ie_regra_w, null, nr_seq_regra_w, nr_proc_interno_w, cd_categoria_w, cd_estabelecimento_w, null, null, cd_pessoa_fisica_w, ie_glosa_plano_w, nr_seq_regra_preco_w) INTO STRICT ds_erro_w, ie_regra_w, nr_seq_regra_w, ie_glosa_plano_w, nr_seq_regra_preco_w;
			
			ie_autorizacao_w 	:= 'L';
			if (ie_regra_w in (1,2,5)) then
				ie_autorizacao_w	:= 'B';
			end if;
			if (ie_regra_w in (3,6,7)) then
				select 	coalesce(max(ie_resp_autor),'H')
				into STRICT	ie_resp_autor_w
				from 	regra_convenio_plano
				where 	nr_sequencia = nr_seq_regra_w;
				if (ie_resp_autor_w = 'H') then
					ie_autorizacao_w 	:= 'PAH'; --Pendente de autorizacao (Guia Hospital)
				end if;
				if (ie_resp_autor_w = 'P') then
					ie_autorizacao_w 	:= 'PAP'; --Pendente de autorizacao (Guia Paciente)
				end if;
			end if;
		
		end if;
		
		select 	nextval('orcamento_paciente_proc_seq')
		into STRICT	nr_seq_proc_orc_w
		;
		
		insert into orcamento_paciente_proc(
			nr_sequencia_orcamento, cd_procedimento, ie_origem_proced, qt_procedimento, dt_atualizacao, nm_usuario,
			vl_procedimento, vl_medico, vl_anestesista, vl_filme, vl_auxiliares, vl_custo_operacional, vl_desconto,
			cd_medico, ie_procedimento_principal, qt_dia_internacao, ie_valor_informado, nr_seq_exame, nr_sequencia, 
			nr_seq_proc_interno, ie_via_acesso, nr_seq_regra_lanc, vl_custo, ie_pacote, nr_seq_proc_princ, ie_autorizacao,cd_procedimento_loc)
		values (
			nr_seq_orcamento_p, cd_procedimento_w, ie_origem_proced_w, qt_procedimento_w, clock_timestamp(), nm_usuario_p, 
			0, 0, 0, 0, 0, 0, 0,
			cd_medico_exec_p, null, null, 'N', nr_seq_exame_w, nr_seq_proc_orc_w,
			nr_proc_interno_w, null, null, 0, null, null, ie_autorizacao_w,
			case when (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then obter_cod_proc_loc(cd_procedimento_w,ie_origem_proced_w) else '' end);																																			
			
		if (ie_gera_proc_assoc_w = 'S') then	
			CALL gerar_proc_assoc_orcamento(nr_seq_orcamento_p, nr_seq_proc_orc_w, nm_usuario_p);
		end if;
		
		end;
	end loop;
	close C01;
	
	open C02;
	loop
	fetch C02 into	
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_exame_w,
		nr_seq_material_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		select  count(*)
		into STRICT	qt_material_w
		from    material_exame_lab b,
	        	exame_lab_material a
		where 	a.nr_seq_material = b.nr_sequencia
		and 	a.nr_seq_exame    = nr_seq_exame_w
		and 	a.ie_situacao	= 'A';

		if (qt_material_w = 1)  or (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
			if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
				select	max(cd_material_exame)
				into STRICT	cd_material_exame_w
				from	material_exame_lab
				where	nr_sequencia = nr_seq_material_w;		
			else
				select	max(cd_material_exame)
				into STRICT	cd_material_exame_w
				from	material_exame_lab b,
					exame_lab_material a
				where	a.nr_seq_material = b.nr_sequencia
	  			and	a.nr_seq_exame 	= nr_seq_exame_w
				and	a.ie_situacao	= 'A'
				and	ie_prioridade	=
						(SELECT	min(ie_prioridade)
						from	exame_lab_material x
						where	nr_seq_exame	= nr_seq_exame_w
						and 	x.ie_situacao	= 'A');
			end if;
		end if;
		
		if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then -- Incluido Tratamento para conversao dos Exames de Laboratorio OS 233360
		
			ie_tipo_convenio_w	:= ie_tipo_conv_w;
			ie_tipo_atendimento_w	:= ie_tipo_atend_w;
			cd_estab_w		:= cd_estabelecimento_w;

			SELECT * FROM obter_exame_lab_convenio(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estab_w, ie_tipo_convenio_w, null, cd_material_exame_w, cd_plano_w, cd_setor_atend_conv_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT cd_setor_atend_conv_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;
		
		end if;
		
		ie_autorizacao_w:= null;
		if	((ie_consiste_edicao_w <> 'N') and (obter_se_proc_edicao(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, clock_timestamp(), cd_procedimento_w, ie_tipo_atend_w) = 'N') and (obter_se_pacote_convenio(cd_procedimento_w, ie_origem_proced_w, cd_convenio_w, cd_estabelecimento_w) = 'N')) then
			 ie_autorizacao_w:= 'B'; --Bloqueado pelo convenio
		end if;
		
		cd_convenio_glosa_w	:= cd_convenio_w;
		cd_categoria_glosa_w	:= cd_categoria_w;
		
		if (coalesce(ie_consiste_glosa_partic_w,'N') = 'S') and (coalesce(ie_autorizacao_w,'L') <> 'B') then
			SELECT * FROM glosa_procedimento(cd_estabelecimento_w, nr_atendimento_w, clock_timestamp(), cd_procedimento_w, ie_origem_proced_w, qt_procedimento_w, 0, ie_tipo_atend_w, 0, nr_seq_exame_w, nr_proc_interno_w, null, cd_plano_w, 0, 0, null, null, cd_convenio_glosa_w, cd_categoria_glosa_w, nr_retorno_w, ds_retorno_w, ds_retorno_w, nr_retorno_w, nr_retorno_w, ds_retorno_w, ds_retorno_w, ie_glosa_w, nr_retorno_w, nr_retorno_w, nr_retorno_w, nr_retorno_w, nr_retorno_w, ds_retorno_w, nr_retorno_w, ds_retorno_w, nr_retorno_w, ds_retorno_w, nr_retorno_w, null, null, null, null, 0, null, null, null, null, null, null, null, null) INTO STRICT cd_convenio_glosa_w, cd_categoria_glosa_w, nr_retorno_w, ds_retorno_w, ds_retorno_w, nr_retorno_w, nr_retorno_w, ds_retorno_w, ds_retorno_w, ie_glosa_w, nr_retorno_w, nr_retorno_w, nr_retorno_w, nr_retorno_w, nr_retorno_w, ds_retorno_w, nr_retorno_w, ds_retorno_w, nr_retorno_w, ds_retorno_w, nr_retorno_w;
				
			if (ie_glosa_w IS NOT NULL AND ie_glosa_w::text <> '') and (ie_glosa_w in ('G','T','D','F')) then
				ie_autorizacao_w := 'B';
			end if;
		end if;
		
		var_consiste_regra_plano_w	:= obter_valor_param_usuario(106, 28, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w);
		if (var_consiste_regra_plano_w = 'S') and (coalesce(ie_autorizacao_w,'L') <> 'B') then
		
			SELECT * FROM consiste_plano_convenio(nr_atendimento_w, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, clock_timestamp(), qt_procedimento_w, ie_tipo_atend_w, cd_plano_w, null, ds_erro_w, null, nr_seq_exame_w, ie_regra_w, null, nr_seq_regra_w, nr_proc_interno_w, cd_categoria_w, cd_estabelecimento_w, null, null, cd_pessoa_fisica_w, ie_glosa_plano_w, nr_seq_regra_preco_w) INTO STRICT ds_erro_w, ie_regra_w, nr_seq_regra_w, ie_glosa_plano_w, nr_seq_regra_preco_w;
			
			ie_autorizacao_w 	:= 'L';
			if (ie_regra_w in (1,2,5)) then
				ie_autorizacao_w	:= 'B';
			end if;
			if (ie_regra_w in (3,6,7)) then
				select 	coalesce(max(ie_resp_autor),'H')
				into STRICT	ie_resp_autor_w
				from 	regra_convenio_plano
				where 	nr_sequencia = nr_seq_regra_w;
				if (ie_resp_autor_w = 'H') then
					ie_autorizacao_w 	:= 'PAH'; --Pendente de autorizacao (Guia Hospital)
				end if;
				if (ie_resp_autor_w = 'P') then
					ie_autorizacao_w 	:= 'PAP'; --Pendente de autorizacao (Guia Paciente)
				end if;
			end if;
		
		end if;		
		
		select 	nextval('orcamento_paciente_proc_seq')
		into STRICT	nr_seq_proc_orc_w
		;
				
		insert into orcamento_paciente_proc(
			nr_sequencia_orcamento, cd_procedimento, ie_origem_proced, qt_procedimento, dt_atualizacao, nm_usuario,
			vl_procedimento, vl_medico, vl_anestesista, vl_filme, vl_auxiliares, vl_custo_operacional, vl_desconto,
			cd_medico, ie_procedimento_principal, qt_dia_internacao, ie_valor_informado, nr_seq_exame, nr_sequencia, 
			nr_seq_proc_interno, ie_via_acesso, nr_seq_regra_lanc, vl_custo, ie_pacote, nr_seq_proc_princ, ie_autorizacao,cd_procedimento_loc)
		values (
			nr_seq_orcamento_p, cd_procedimento_w, ie_origem_proced_w, qt_procedimento_w, clock_timestamp(), nm_usuario_p, 
			0, 0, 0, 0, 0, 0, 0,
			cd_medico_exec_p, null, null, 'N', nr_seq_exame_w, nr_seq_proc_orc_w,
			nr_proc_interno_w, null, null, 0, null, null, ie_autorizacao_w,
			case when (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then obter_cod_proc_loc(cd_procedimento_w,ie_origem_proced_w) else '' end);																																			
	
		if (ie_gera_proc_assoc_w = 'S') then	
			CALL gerar_proc_assoc_orcamento(nr_seq_orcamento_p, nr_seq_proc_orc_w, nm_usuario_p);
		end if;
	
		end;
	end loop;
	close C02;
	end;
elsif (ie_tipo_exame_p = 5) then
	nr_proc_interno_w	:= nr_sequencia_p;
end if;

if (ie_tipo_exame_p <> 4) then
	begin

	if (nr_proc_interno_w IS NOT NULL AND nr_proc_interno_w::text <> '') then
		SELECT * FROM Obter_Proc_Tab_Interno_conv(nr_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), cd_tipo_acomodacao_w, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
	end if;
	
	if (cd_material_p <> '0') then
		cd_material_exame_w := cd_material_p;
	end if;
	
	ie_autorizacao_w:= null;
	if	((ie_consiste_edicao_w <> 'N') and (obter_se_proc_edicao(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, clock_timestamp(), cd_procedimento_w, ie_tipo_atend_w) = 'N') and (obter_se_pacote_convenio(cd_procedimento_w, ie_origem_proced_w, cd_convenio_w, cd_estabelecimento_w) = 'N')) then
		 ie_autorizacao_w:= 'B'; --Bloqueado pelo convenio
	end if;
	
	cd_convenio_glosa_w	:= cd_convenio_w;
	cd_categoria_glosa_w	:= cd_categoria_w;
	
	if (coalesce(ie_consiste_glosa_partic_w,'N') = 'S') and (coalesce(ie_autorizacao_w,'L') <> 'B') then
		SELECT * FROM glosa_procedimento(cd_estabelecimento_w, nr_atendimento_w, clock_timestamp(), cd_procedimento_w, ie_origem_proced_w, qt_procedimento_w, 0, ie_tipo_atend_w, 0, nr_seq_exame_w, nr_proc_interno_w, null, cd_plano_w, 0, 0, null, null, cd_convenio_glosa_w, cd_categoria_glosa_w, nr_retorno_w, ds_retorno_w, ds_retorno_w, nr_retorno_w, nr_retorno_w, ds_retorno_w, ds_retorno_w, ie_glosa_w, nr_retorno_w, nr_retorno_w, nr_retorno_w, nr_retorno_w, nr_retorno_w, ds_retorno_w, nr_retorno_w, ds_retorno_w, nr_retorno_w, ds_retorno_w, nr_retorno_w, null, null, null, null, 0, null, null, null, null, null, null, null, null) INTO STRICT cd_convenio_glosa_w, cd_categoria_glosa_w, nr_retorno_w, ds_retorno_w, ds_retorno_w, nr_retorno_w, nr_retorno_w, ds_retorno_w, ds_retorno_w, ie_glosa_w, nr_retorno_w, nr_retorno_w, nr_retorno_w, nr_retorno_w, nr_retorno_w, ds_retorno_w, nr_retorno_w, ds_retorno_w, nr_retorno_w, ds_retorno_w, nr_retorno_w;
			
		if (ie_glosa_w IS NOT NULL AND ie_glosa_w::text <> '') and (ie_glosa_w in ('G','T','D','F')) then
			ie_autorizacao_w := 'B';
		end if;
	end if;
	
	var_consiste_regra_plano_w	:= obter_valor_param_usuario(106, 28, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w);
	if (var_consiste_regra_plano_w = 'S') and (coalesce(ie_autorizacao_w,'L') <> 'B') then
	
		SELECT * FROM consiste_plano_convenio(nr_atendimento_w, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, clock_timestamp(), qt_procedimento_w, ie_tipo_atend_w, cd_plano_w, null, ds_erro_w, null, nr_seq_exame_w, ie_regra_w, null, nr_seq_regra_w, nr_proc_interno_w, cd_categoria_w, cd_estabelecimento_w, null, null, cd_pessoa_fisica_w, ie_glosa_plano_w, nr_seq_regra_preco_w) INTO STRICT ds_erro_w, ie_regra_w, nr_seq_regra_w, ie_glosa_plano_w, nr_seq_regra_preco_w;
		
		ie_autorizacao_w 	:= 'L';
		if (ie_regra_w in (1,2,5,8)) then
			ie_autorizacao_w	:= 'B';
		end if;
		if (ie_regra_w in (3,6,7)) then
			select 	coalesce(max(ie_resp_autor),'H')
			into STRICT	ie_resp_autor_w
			from 	regra_convenio_plano
			where 	nr_sequencia = nr_seq_regra_w;
			if (ie_resp_autor_w = 'H') then
				ie_autorizacao_w 	:= 'PAH'; --Pendente de autorizacao (Guia Hospital)
			end if;
			if (ie_resp_autor_w = 'P') then
				ie_autorizacao_w 	:= 'PAP'; --Pendente de autorizacao (Guia Paciente)
			end if;
		end if;
	
	end if;
	
	select 	nextval('orcamento_paciente_proc_seq')
	into STRICT	nr_seq_proc_orc_w
	;
		
	insert into orcamento_paciente_proc(
			nr_sequencia_orcamento, cd_procedimento, ie_origem_proced, qt_procedimento, dt_atualizacao, nm_usuario,
			vl_procedimento, vl_medico, vl_anestesista, vl_filme, vl_auxiliares, vl_custo_operacional, vl_desconto,
			cd_medico, ie_procedimento_principal, qt_dia_internacao, ie_valor_informado, nr_seq_exame, nr_sequencia, 
			nr_seq_proc_interno, ie_via_acesso, nr_seq_regra_lanc, vl_custo, ie_pacote, nr_seq_proc_princ, ie_autorizacao,cd_procedimento_loc)
	values (
			nr_seq_orcamento_p, cd_procedimento_w, ie_origem_proced_w, qt_procedimento_w, clock_timestamp(), nm_usuario_p, 
			0, 0, 0, 0, 0, 0, 0,
			cd_medico_exec_p, null, null, 'N', nr_seq_exame_w, nr_seq_proc_orc_w,
			nr_proc_interno_w, null, null, 0, null, null, ie_autorizacao_w,
			case when (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then obter_cod_proc_loc(cd_procedimento_w,ie_origem_proced_w) else '' end);																																			
	
	if (ie_gera_proc_assoc_w = 'S') then	
		CALL gerar_proc_assoc_orcamento(nr_seq_orcamento_p, nr_seq_proc_orc_w, nm_usuario_p);
	end if;
	
	end;
end if;

CALL Calcular_Orcamento_Paciente(nr_seq_orcamento_p, nm_usuario_p, cd_estabelecimento_w);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_exame_rotina_orcamento ( nr_seq_orcamento_p bigint, nr_sequencia_p bigint, ie_tipo_Exame_p bigint, nm_usuario_p text, cd_material_p text, cd_medico_exec_p text, qt_procedimento_p bigint) FROM PUBLIC;

