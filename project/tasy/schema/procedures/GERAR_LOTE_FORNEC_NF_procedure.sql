-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lote_fornec_nf ( nr_sequencia_p bigint, ie_grava_obs_lote_p text, nm_usuario_p text, ie_atualizar_barras_p text default null, ie_commitar_p text default 'S') AS $body$
DECLARE


nr_sequencia_w			bigint;
cd_estabelecimento_w		smallint;
cd_material_w			integer;
cd_lote_fabricacao_w		varchar(20);
dt_validade_w			timestamp;
cd_cgc_emitente_w		varchar(14);
nr_item_nf_w			integer;
qt_gerar_w			double precision;
qt_item_estoque_w			double precision;
qt_item_nf_w			double precision;
ie_gera_w			varchar(1);
ie_gerar_desdobrado_w		varchar(1);
ie_quantidade_w			varchar(1);
nr_seq_marca_w			bigint;
nr_seq_item_lote_w			bigint;
qt_lote_gerado_w			bigint := 0;
cd_operacao_nf_w			smallint;
ie_regra_lote_nf_w			varchar(1) := 'N';
nr_nota_fiscal_w			varchar(255);
ie_barras_lote_fornec_w		varchar(1);
cd_barra_material_w		nota_fiscal_item.cd_barra_material%type;
ds_barras_w			varchar(4000);
qt_existe_w			integer;
cd_material_barras_w		integer;
ds_observacao_w			varchar(255);
ie_nf_entrada_saida_w		varchar(1);
qt_conv_compra_estoque_w		double precision;
ie_unico_lote_w			varchar(1);
dt_fabricacao_w			timestamp;
cd_cgc_fabricante_w		varchar(14);
cd_imob_serie_w			varchar(80);
nr_emprestimo_w			bigint;
nr_seq_item_emprestimo_w	integer;
cd_barras_w			nota_fiscal_item.cd_barra_material%type;
ie_consiste_ds_barras_w		varchar(1);
qt_lotes_ds_barras_w		bigint;
qtd_gerados_w                   integer := 0;
cd_pessoa_fisica_w		varchar(10);
ie_tipo_programa_w		nota_fiscal_item.ie_tipo_programa%type;
ie_classif_rename_w		nota_fiscal_item.ie_classif_rename%type;
ie_origem_manual_w		nota_fiscal_item.ie_origem_manual%type;
cd_gtin_w			material_lote_fornec.cd_gtin%type;
cd_serial_w			material_lote_fornec.cd_serial%type;
dt_expiracao_w			material_lote_fornec.dt_expiracao%type;
cd_lote_w			material_lote_fornec.cd_lote%type;
ds_retorno_w			varchar(255);
ie_agrupar_lote_w		regra_nf_lote_fornec.ie_agrupar_lote%type;
cd_paciente_lote_w		nota_fiscal_item.cd_paciente%type;

c01 CURSOR FOR
	SELECT	cd_material,
		cd_lote_fabricacao,
		dt_validade,
		dt_fabricacao,
		nr_item_nf,
		qt_item_estoque,
		qt_item_nf,
		coalesce(nr_seq_marca,0),
		0,
		nr_nota_fiscal,
		cd_barra_material,
		ds_barras,
		ds_observacao,
		dividir(qt_item_estoque,qt_item_nf),
		'S',
		coalesce(nr_serie_material,cd_imob_serie),
		nr_emprestimo,
		nr_seq_item_emprestimo,
		ie_tipo_programa,
		ie_classif_rename,
		ie_origem_manual,
		cd_paciente
	from	nota_fiscal_item
	where	nr_sequencia	= nr_sequencia_p
	and	(cd_lote_fabricacao IS NOT NULL AND cd_lote_fabricacao::text <> '')
	
union

	SELECT	a.cd_material,
		b.cd_lote_fabricacao,
		b.dt_validade,
		b.dt_fabricacao,
		b.nr_item_nf,
		b.qt_material,
		b.qt_material,
		coalesce(b.nr_seq_marca,0),
		b.nr_sequencia,
		a.nr_nota_fiscal,
		b.cd_barra_material,
		b.ds_barras,
		ds_observacao,
		dividir(a.qt_item_estoque,a.qt_item_nf),
		'N',
		coalesce(b.nr_serie_material,cd_imob_serie),
		a.nr_emprestimo,
		a.nr_seq_item_emprestimo,
		a.ie_tipo_programa,
		a.ie_classif_rename,
		a.ie_origem_manual,
		a.cd_paciente
	from	nota_fiscal_item a,
		nota_fiscal_item_lote b
	where	b.nr_seq_nota		= a.nr_sequencia
	and	b.nr_item_nf		= a.nr_item_nf
	and	a.nr_sequencia		= nr_sequencia_p
	and	coalesce(a.cd_lote_fabricacao::text, '') = ''
	and	coalesce(a.dt_validade::text, '') = '';


BEGIN

ie_nf_entrada_saida_w := substr(Obter_Se_Nota_Entrada_Saida(nr_sequencia_p),1,1);

if (ie_nf_entrada_saida_w = 'E') then
	begin
	
	select	cd_estabelecimento,
		nr_nota_fiscal,
		cd_cgc_emitente,
		cd_operacao_nf,
		cd_pessoa_fisica
	into STRICT	cd_estabelecimento_w,
		nr_nota_fiscal_w,
		cd_cgc_emitente_w,
		cd_operacao_nf_w,
		cd_pessoa_fisica_w
	from	nota_fiscal
	where	nr_sequencia = nr_sequencia_p;
	
	ie_consiste_ds_barras_w := Obter_Valor_Param_Usuario(143,356,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w);

	select	coalesce(max(ie_regra_lote_nf),'N')
	into STRICT	ie_regra_lote_nf_w
	from	operacao_nota
	where	cd_operacao_nf = cd_operacao_nf_w;

	select	coalesce(max(ie_barras_lote_fornec), 'N')
	into STRICT	ie_barras_lote_fornec_w
	from	parametro_estoque
	where	cd_estabelecimento	= cd_estabelecimento_w;
	


	if (coalesce(cd_cgc_emitente_w::text, '') = '') and ((philips_param_pck.get_cd_pais = 2 ) or obtain_user_locale(nm_usuario_p) = 'es_MX') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		cd_cgc_emitente_w := obter_cgc_estabelecimento(obter_estabelecimento_ativo);
	end if;
	
	if (ie_regra_lote_nf_w = 'N') and (cd_cgc_emitente_w IS NOT NULL AND cd_cgc_emitente_w::text <> '') then


		open c01;
		loop
		fetch c01 into
			cd_material_w,
			cd_lote_fabricacao_w,
			dt_validade_w,
			dt_fabricacao_w,
			nr_item_nf_w,
			qt_item_estoque_w,
			qt_item_nf_w,
			nr_seq_marca_w,
			nr_seq_item_lote_w,
			nr_nota_fiscal_w,
			cd_barra_material_w,
			ds_barras_w,
			ds_observacao_w,
			qt_conv_compra_estoque_w,
			ie_unico_lote_w,
			cd_imob_serie_w,
			nr_emprestimo_w,
			nr_seq_item_emprestimo_w,
			ie_tipo_programa_w,
			ie_classif_rename_w,
			ie_origem_manual_w,
			cd_paciente_lote_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
						
			/* Matheus OS 43702 em 01/11/2006 */

			select	coalesce(count(*),0)
			into STRICT	qt_lote_gerado_w
			from	material_lote_fornec
			where	nr_sequencia_nf	= nr_sequencia_p
			and	nr_item_nf	= nr_item_nf_w
			and	ds_lote_fornec	= cd_lote_fabricacao_w
			and	coalesce(nr_serie_material,'X') = coalesce(cd_imob_serie_w,'X')
			and	coalesce(ds_barras,'X') = coalesce(ds_barras_w,'X');
							
			
			if (qt_lote_gerado_w = 0) then /*qt_lote_gerado_w*/
				if (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
				SELECT * FROM obter_regra_nf_lote_fornec( cd_material_w, cd_estabelecimento_w, ie_gera_w, ie_quantidade_w, ie_gerar_desdobrado_w, ie_agrupar_lote_w, nr_seq_marca_w) INTO STRICT ie_gera_w, ie_quantidade_w, ie_gerar_desdobrado_w, ie_agrupar_lote_w;
									
				if (ie_gera_w in ('S','O')) then
					begin
					
					if (ie_quantidade_w = 'E') then
						qt_gerar_w	:= qt_item_estoque_w;
					elsif (ie_unico_lote_w = 'S') then
						qt_gerar_w	:= qt_item_nf_w;
					else
						qt_gerar_w	:= dividir(qt_item_estoque_w,qt_conv_compra_estoque_w);
					end if;
					
					if (ie_consiste_ds_barras_w = 'S') then
						begin
						select	count(*)
						into STRICT	qt_lotes_ds_barras_w
						from	material_lote_fornec
						where	cd_estabelecimento = cd_estabelecimento_w
						and	upper(ds_barras) = upper(ds_barras_w);
						
						if (qt_lotes_ds_barras_w > 0) then
							CALL wheb_mensagem_pck.exibir_mensagem_abort(261252);
						end if;
						end;
					end if;

					if (coalesce(ie_gerar_desdobrado_w,'N') = 'N') then /* Matheus OS 99491 25/07/08*/
						begin
						
						if (ds_barras_w IS NOT NULL AND ds_barras_w::text <> '') then
							 -- GTIN
										ds_retorno_p => ds_retorno_w := converte_codigo_barras_dm(cd_mat_barra_p => ds_barras_w, cd_estabelecimento_p => cd_estabelecimento_w, ie_retorno_p => '01', 
										ds_retorno_p => ds_retorno_w);
							
							if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') then
								cd_gtin_w := substr(ds_retorno_w,1,14);
								
								 -- Serial
											ds_retorno_p => ds_retorno_w := converte_codigo_barras_dm(cd_mat_barra_p => ds_barras_w, cd_estabelecimento_p => cd_estabelecimento_w, ie_retorno_p => '21', 
											ds_retorno_p => ds_retorno_w);							
											
								cd_serial_w := substr(ds_retorno_w,1,20);

								 -- Data expiracao
											ds_retorno_p => ds_retorno_w := converte_codigo_barras_dm(cd_mat_barra_p => ds_barras_w, cd_estabelecimento_p => cd_estabelecimento_w, ie_retorno_p => '17S', 
											ds_retorno_p => ds_retorno_w);

								dt_expiracao_w := ds_retorno_w;
								
								 -- Lote fabricacao
											ds_retorno_p => ds_retorno_w := converte_codigo_barras_dm(cd_mat_barra_p => ds_barras_w, cd_estabelecimento_p => cd_estabelecimento_w, ie_retorno_p => '10', 
											ds_retorno_p => ds_retorno_w);							

								cd_lote_w := substr(ds_retorno_w,1,20);
							end if;
						end if;
						
						nr_sequencia_w := null;
						if (coalesce(ie_agrupar_lote_w,'N') = 'S') and (ds_barras_w IS NOT NULL AND ds_barras_w::text <> '') then
							if (dt_validade_w IS NOT NULL AND dt_validade_w::text <> '') then
								select	max(nr_sequencia)
								into STRICT	nr_sequencia_w
								from	material_lote_fornec
								where	cd_estabelecimento = cd_estabelecimento_w
								and	upper(ds_barras) = upper(ds_barras_w)
								and	ds_lote_fornec	= cd_lote_fabricacao_w
								and	dt_validade	= dt_validade_w;
							else
								select	max(nr_sequencia)
								into STRICT	nr_sequencia_w
								from	material_lote_fornec
								where	cd_estabelecimento = cd_estabelecimento_w
								and	upper(ds_barras) = upper(ds_barras_w)
								and	ds_lote_fornec	= cd_lote_fabricacao_w
								and	ie_validade_indeterminada = 'S';
							end if;
						end if;
						
						if (coalesce(nr_sequencia_w::text, '') = '') then
							select	nextval('material_lote_fornec_seq')
							into STRICT	nr_sequencia_w
							;	
				
							insert into material_lote_fornec(
								nr_sequencia,
								cd_material,
								nr_digito_verif,
								dt_atualizacao,
								nm_usuario,
								ds_lote_fornec,
								dt_validade,
								cd_cgc_fornec,
								nr_sequencia_nf,
								nr_item_nf,
								qt_material,
								cd_estabelecimento,
								nr_seq_marca,
								ie_origem_lote,
								ie_validade_indeterminada,
								ie_situacao,
								nr_nota_fiscal,
								cd_barra_material,
								ds_barras,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								ds_observacao,
								dt_fabricacao,
								nr_serie_material,
								nr_emprestimo,
								ie_tipo_programa,
								ie_classif_rename,
								ie_origem_manual,
								cd_gtin,
								cd_serial,
								dt_expiracao,
								cd_lote)					
							values ( nr_sequencia_w,
								cd_material_w,
								calcula_digito('Modulo11', nr_sequencia_w),
								clock_timestamp(),
								nm_usuario_p,
								cd_lote_fabricacao_w,
								dt_validade_w,
								cd_cgc_emitente_w,
								nr_sequencia_p,
								nr_item_nf_w,
								qt_gerar_w,
								cd_estabelecimento_w,
								CASE WHEN nr_seq_marca_w=0 THEN  null  ELSE nr_seq_marca_w END ,
								'N',
								CASE WHEN coalesce(dt_validade_w::text, '') = '' THEN  'S'  ELSE 'N' END ,
								'A',
								nr_nota_fiscal_w,
								cd_barra_material_w,
								ds_barras_w,
								clock_timestamp(),
								nm_usuario_p,
								CASE WHEN ie_grava_obs_lote_p='S' THEN ds_observacao_w  ELSE '' END ,
								dt_fabricacao_w,
								cd_imob_serie_w,
								null,
								ie_tipo_programa_w,
								ie_classif_rename_w,
								ie_origem_manual_w,
								cd_gtin_w,
								cd_serial_w,
								dt_expiracao_w,
								cd_lote_w);
								
								qtd_gerados_w := qtd_gerados_w + 1;
						else
							-- Caso ja tenha um lote fornecedor, apenas vincular
							CALL vincular_nota_lote_fornec(nr_seq_lote_fornec_p => nr_sequencia_w,
										nr_sequencia_nf_p => nr_sequencia_p,
										nr_item_nf_p => nr_item_nf_w,
										nm_usuario_p => nm_usuario_p,
										ie_commit_p => 'N');
							
							if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') <> 'pt_BR') then
								update material_lote_fornec
								set qt_material = qt_material + qt_gerar_w
								where nr_sequencia = nr_sequencia_w;

                update nota_fiscal_item_lote
                set nr_seq_lote_fornec = nr_sequencia_w
                where nr_seq_nota = nr_sequencia_p
                and nr_item_nf = nr_item_nf_w
                and cd_lote_fabricacao = cd_barra_material_w
                and (nr_seq_lote_fornec IS NOT NULL AND nr_seq_lote_fornec::text <> '');
							end if;
						end if;
						
						begin
						
						if (cd_paciente_lote_w IS NOT NULL AND cd_paciente_lote_w::text <> '') and (pkg_i18n.get_user_locale()	= 'es_AR') then
						
						
							insert into material_lote_fornec_pac(	nr_sequencia,
												dt_atualizacao,
												nm_usuario,
												dt_atualizacao_nrec,
												nm_usuario_nrec,
												nr_seq_lote_fornec,
												cd_paciente_lote_exclus,
												dt_inicio_vigiencia,
												dt_fim_vigencia)
									values (	nextval('material_lote_fornec_pac_seq'),
												clock_timestamp(),
												nm_usuario_p,
												clock_timestamp(),
												nm_usuario_p,
												nr_sequencia_w,
												cd_paciente_lote_w,
												clock_timestamp(),
												null);
							
						end if;
						
						exception
						when no_data_found then
							null;
						when others then
							qt_existe_w	:= 0;
						end;
						
						
							
						/*Atualiza a sequencia criada do lote no item da nota fiscal ou na itens por lote*/

						if (nr_seq_item_lote_w = 0) then
							update	nota_fiscal_item
							set	nr_seq_lote_fornec	= nr_sequencia_w
							where	nr_sequencia	= nr_sequencia_p
							and	nr_item_nf	= nr_item_nf_w;
						else
							update	nota_fiscal_item_lote
							set	nr_seq_lote_fornec	= nr_sequencia_w
							where	nr_sequencia		= nr_seq_item_lote_w;
						end if;
						
						if (ie_atualizar_barras_p = 'S') then
							select	cd_barra_material
							into STRICT	cd_barras_w
							from	nota_fiscal_item
							where	nr_sequencia = nr_sequencia_p
							and	nr_item_nf = nr_item_nf_w;
						
							update	material_cod_barra
							set	nr_seq_lote_fornec = nr_sequencia_w
							where	cd_barra_material = cd_barras_w
							and	cd_material = cd_material_w;
						end if;
						
						begin
						if (coalesce(nr_emprestimo_w,0) > 0) and (coalesce(nr_seq_item_emprestimo_w,0) > 0) then
							update	emprestimo_material
							set	nr_seq_lote = nr_sequencia_w
							where	nr_emprestimo = nr_emprestimo_w
							and	nr_sequencia = nr_seq_item_emprestimo_w;
						end if;
						exception
							when others then
								null;
						end;						
						end;
					elsif (ie_gerar_desdobrado_w = 'S') then /* Matheus OS 99491 25/07/08*/

						/*Gerar mais de 1 lote para o mesmo item com qtd 1 cada */

						CALL sup_desdobrar_lote_fornec(nr_sequencia_p, nr_item_nf_w, nr_seq_item_lote_w, qt_gerar_w, nm_usuario_p, 'N');
					end if;
					end;
				end if; /* ie_gera_W*/
				end if;
			end if; /*qt_lote_gerado_w*/
			end;
			
		end loop;
		close c01;
		
		CALL gerar_historico_nota_fiscal(nr_sequencia_p,nm_usuario_p,'62',WHEB_MENSAGEM_PCK.get_texto(739859,'QT_GERADOS='|| to_char(qtd_gerados_w)));
		
	end if;
	end;
end if;

-- Gerar os eventos para envio da ANVISA
CALL sncm_controle_mat_pck.gerar_dados_nf(	nr_seq_nota_fiscal_p => nr_sequencia_p,
					nm_usuario_p => nm_usuario_p,
					ie_commit_p => 'N');

if (coalesce(ie_commitar_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lote_fornec_nf ( nr_sequencia_p bigint, ie_grava_obs_lote_p text, nm_usuario_p text, ie_atualizar_barras_p text default null, ie_commitar_p text default 'S') FROM PUBLIC;

