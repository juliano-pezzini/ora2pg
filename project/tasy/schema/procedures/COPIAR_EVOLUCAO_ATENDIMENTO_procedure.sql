-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copiar_evolucao_atendimento ( nr_atendimento_p bigint, nr_atendimento_novo_p bigint) AS $body$
DECLARE


  
 
C01 CURSOR FOR
	SELECT 	a.cd_evolucao,
			a.dt_evolucao,
			a.ie_tipo_evolucao,
			a.cd_pessoa_fisica,
			a.dt_atualizacao,
			a.nm_usuario,
			a.nr_atendimento,
			'' ds_evolucao,
			a.cd_medico,
			a.dt_liberacao,
			a.ie_evolucao_clinica,
			a.cd_setor_atendimento,
			a.cd_especialidade,
			a.cd_medico_parecer,
			a.qt_peso,
			a.qt_altura,
			a.qt_superf_corporia,
			a.cd_topografia,
			a.cd_tumor_prim_pat,
			a.cd_linfonodo_reg_pat,
			a.cd_metastase_dist_pat,
			a.cd_estadio_outro,
			a.dt_inicio_trat_proposto,
			a.dt_final_trat_proposto,
			a.cd_estado_doenca,
			a.ie_estado_pac_fim_trat,
			a.ie_recem_nato,
			a.nr_cirurgia,
			a.ie_situacao,
			a.cd_especialidade_medico,
			a.nr_atend_alta
	from 	evolucao_paciente a
	where 	a.nr_atendimento = nr_atendimento_p
	order by a.cd_evolucao;

Vet01 C01%RowType;	
teste_w	bigint;
cd_evolucao_dest_w bigint;

BEGIN
	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	teste_w	:= teste_w;
	
	select	nextval('evolucao_paciente_seq')
	into STRICT	cd_evolucao_dest_w
	;
	
	insert into evolucao_paciente(
					cd_evolucao,
					dt_evolucao,
					ie_tipo_evolucao,
					cd_pessoa_fisica,
					dt_atualizacao,
					nm_usuario,
					nr_atendimento,
					ds_evolucao,
					cd_medico,
					dt_liberacao,
					ie_evolucao_clinica,
					cd_setor_atendimento,
					cd_especialidade,
					cd_medico_parecer,
					qt_peso,
					qt_altura,
					qt_superf_corporia,
					cd_topografia,
					cd_tumor_prim_pat,
					cd_linfonodo_reg_pat,
					cd_metastase_dist_pat,
					cd_estadio_outro,
					dt_inicio_trat_proposto,
					dt_final_trat_proposto,
					cd_estado_doenca,
					ie_estado_pac_fim_trat,
					ie_recem_nato,
					nr_cirurgia,
					ie_situacao,
					cd_especialidade_medico,
					nr_atend_alta)
		values (cd_evolucao_dest_w,
					clock_timestamp(),
					Vet01.ie_tipo_evolucao,
					Vet01.cd_pessoa_fisica,
					Vet01.dt_atualizacao,
					Vet01.nm_usuario,
					nr_atendimento_novo_p,
					Vet01.ds_evolucao,
					Vet01.cd_medico,
					null,
					Vet01.ie_evolucao_clinica,
					Vet01.cd_setor_atendimento,
					Vet01.cd_especialidade,
					Vet01.cd_medico_parecer,
					Vet01.qt_peso,
					Vet01.qt_altura,
					Vet01.qt_superf_corporia,
					Vet01.cd_topografia,
					Vet01.cd_tumor_prim_pat,
					Vet01.cd_linfonodo_reg_pat,
					Vet01.cd_metastase_dist_pat,
					Vet01.cd_estadio_outro,
					Vet01.dt_inicio_trat_proposto,
					Vet01.dt_final_trat_proposto,
					Vet01.cd_estado_doenca,
					Vet01.ie_estado_pac_fim_trat,
					Vet01.ie_recem_nato,
					Vet01.nr_cirurgia,
					Vet01.ie_situacao,
					Vet01.cd_especialidade_medico,
					nr_atendimento_novo_p);
		
		CALL copia_campo_long_de_para_novo('EVOLUCAO_PACIENTE', 'DS_EVOLUCAO', 'where cd_evolucao = :cd_evolucao_w', 'cd_evolucao_w = '|| Vet01.cd_evolucao,
									  'EVOLUCAO_PACIENTE', 'DS_EVOLUCAO', 'where cd_evolucao = :cd_evolucao_ww', 'cd_evolucao_ww = '|| cd_evolucao_dest_w, 'L');
		
		update 	evolucao_paciente
		set		dt_liberacao = clock_timestamp()
		where	cd_evolucao = cd_evolucao_dest_w;
		
	end;
	end loop;
	close c01;
if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_evolucao_atendimento ( nr_atendimento_p bigint, nr_atendimento_novo_p bigint) FROM PUBLIC;

