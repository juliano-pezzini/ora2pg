-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fin_gerar_lote_cobranca ( dt_inicio_p timestamp default clock_timestamp(), dt_fim_p timestamp default clock_timestamp(), ie_tipo_p integer default 0, ds_titulo_p text default '', ie_consiste_data_p text default 'N', cd_cnpj_p text default 'X', nm_usuario_p text DEFAULT NULL) AS $body$
DECLARE


dt_referencia_w			timestamp;
dt_emissao_w			timestamp;
dt_pagamento_previsto_w		timestamp;

nr_titulo_w			bigint;
nr_seq_cliente_w			bigint;
nr_seq_lote_w			bigint;
nr_seq_tit_cob_w			bigint;
cd_estabelecimento_w		smallint;
vl_titulo_w			double precision;
vl_saldo_lote_w			double precision := 0;
pr_indice_w			double precision;
vl_saldo_tit_w			double precision;

nr_nfe_imp_w			varchar(255);
ds_observacao_w			varchar(255);

c01 CURSOR FOR
SELECT	a.nr_titulo,
	coalesce(a.nr_seq_cliente,b.nr_seq_cliente),
	coalesce(a.vl_saldo_titulo,0),
	b.nr_nfe_imp,
	a.dt_emissao,
	a.dt_pagamento_previsto,
	substr(a.ds_observacao_titulo,1,255)
FROM titulo_receber a
LEFT OUTER JOIN nota_fiscal b ON (a.nr_seq_nf_saida = b.nr_sequencia)
WHERE coalesce(a.vl_saldo_titulo,0) > 0 and (a.cd_estabelecimento = cd_estabelecimento_w or a.cd_estab_financeiro = cd_estabelecimento_w) and substr(obter_se_prod_perfil(a.nr_seq_grupo_prod,1817),1,1) = 'S' and (((ie_consiste_data_p = 'S') and (a.dt_pagamento_previsto between dt_inicio_p and fim_dia(dt_fim_p))) or (ie_consiste_data_p = 'N')) and a.ie_situacao not in ('3','5') and coalesce(a.nr_seq_cliente,b.nr_seq_cliente) in (	select	a.nr_sequencia
							from	com_cliente a
							where	a.ie_classificacao in ('C','EX')
							and	((a.cd_cnpj = cd_cnpj_p) or (coalesce(cd_cnpj_p,'X') = 'X'))) and not exists (	select	1
			from	titulo_rec_negociado x
			where	x.nr_titulo = a.nr_titulo) group by a.nr_titulo,a.vl_saldo_titulo,b.nr_nfe_imp,a.dt_emissao,a.dt_pagamento_previsto, substr(a.ds_observacao_titulo,1,255),a.nr_seq_cliente,b.nr_seq_cliente
order by 1;


BEGIN
cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;
select	nextval('fin_lote_cobranca_seq')
into STRICT	nr_seq_lote_w
;
-- lote completo
insert into fin_lote_cobranca(	nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec)
			values (	nr_seq_lote_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p);

open c01;
loop
fetch c01 into
	nr_titulo_w,
	nr_seq_cliente_w,
	vl_titulo_w,
	nr_nfe_imp_w,
	dt_emissao_w,
	dt_pagamento_previsto_w,
	ds_observacao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin	-- lote cliente
	vl_saldo_lote_w := vl_saldo_lote_w + vl_titulo_w;
	insert into fin_titulo_lote_clie(	nr_sequencia,
						nr_lote_cliente,
						nr_titulo,
						nr_seq_cliente,
						dt_atualizacao,
						nm_usuario,
						vl_titulo,
						nr_nfe_imp,
						dt_emissao,
						dt_pagamento_previsto,
						ds_observacao,
						nr_lote_ref)
					values (	nextval('fin_lote_cli_cobranca_seq'),
						nr_seq_lote_w,
						nr_titulo_w,
						nr_seq_cliente_w,
						clock_timestamp(),
						nm_usuario_p,
						vl_titulo_w,
						nr_nfe_imp_w,
						dt_emissao_w,
						dt_pagamento_previsto_w,
						ds_observacao_w,
						nr_seq_lote_w);
	end;
end loop;
close c01;

update	fin_lote_cobranca
set	vl_saldo	= vl_saldo_lote_w,
	ds_titulo	= ds_titulo_p,
	nr_tipo_cob	= ie_tipo_p
where	nr_sequencia	= nr_seq_lote_w;

commit;

CALL fin_gerar_perc_tit_cob(nr_seq_lote_w,nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fin_gerar_lote_cobranca ( dt_inicio_p timestamp default clock_timestamp(), dt_fim_p timestamp default clock_timestamp(), ie_tipo_p integer default 0, ds_titulo_p text default '', ie_consiste_data_p text default 'N', cd_cnpj_p text default 'X', nm_usuario_p text DEFAULT NULL) FROM PUBLIC;

