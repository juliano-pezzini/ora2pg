-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_ajustar_base_pls ( nm_usuario_p text) AS $body$
DECLARE


qt_registro_w		bigint	:= 0;
dt_versao_atual_cli_w	timestamp;
cd_estabelecimento_w	integer;
cd_centro_custo_w	integer;


BEGIN

CALL abortar_se_base_wheb();

dt_versao_atual_cli_w := coalesce(TO_DATE(TO_CHAR(obter_data_geracao_versao-1,'dd/mm/yyyy') ||' 23:59:59','dd/mm/yyyy hh24:mi:ss'),clock_timestamp() - interval '90 days');

select	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	pls_outorgante;

/* Felipe 19/03/2008 - Dropar a integridade da PLS_SEGURADO com a PLS_CONTRATO_VENDEDOR, campo NR_SEQ_VENDEDOR*/

if (dt_versao_atual_cli_w < to_date('31/05/2008','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PLSSEGU_PLSCOVE_FK'
	and	column_name	= 'NR_SEQ_VENDEDOR';

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table pls_segurado drop constraint PLSSEGU_PLSCOVE_FK'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PLSSEGU_PLSCOVE_FK_I'); /* índice */
		CALL exec_sql_dinamico('Felipe', 'alter table pls_segurado drop column NR_SEQ_VENDEDOR'); /* campo */
		end;
	end if;
end if;

/* Felipe 26/03/2008 - Dropar a integridade da PLS_SEGURADO com a PLS_VENDEDOR, campo NR_SEQ_VENDEDOR_PF*/

if (dt_versao_atual_cli_w < to_date('31/05/2008','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PLSSEGU_PLSVEND_FK'
	and	column_name	= 'NR_SEQ_VENDEDOR_PF';

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table pls_segurado drop constraint PLSSEGU_PLSVEND_FK'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PLSSEGU_PLSVEND_FK_I'); /* índice */
		end;
	end if;
end if;

/* Felipe 02/04/2008 - Dropar a tabela PLS_REEMBOLSO_MAT para cria-la novamente*/

if (dt_versao_atual_cli_w < to_date('02/04/2008','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	column_name = 'CD_MATERIAL'
	and		table_name	= 'PLS_REEMBOLSO_MAT';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Felipe', 'drop table pls_reembolso_mat'); /* dropar tabela */
	end if;
end if;

/* Felipe 07/04/2008 - Atualizar o CD_ESTABELECIMENTO na PLS_CONTA*/

if (dt_versao_atual_cli_w < to_date('07/04/2008','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_conta
	where	coalesce(cd_estabelecimento::text, '') = '';

	if (qt_registro_w > 0) then
		begin
		select	coalesce(max(cd_estabelecimento),1)
		into STRICT	cd_estabelecimento_w
		from	pls_prestador;

		update	pls_conta
		set	cd_estabelecimento	= cd_estabelecimento_w
		where	coalesce(cd_estabelecimento::text, '') = '';
		end;
	end if;
end if;

/* Felipe 14/04/2008 - Dropar a tabela PLS_REGRA_ATEND_RETORNO para ajustar a tabela com a versão  */

/*if	(dt_versao_atual_cli_w < to_date('13/04/2008','dd/mm/yyyy')) then
	exec_sql_dinamico('Felipe', 'drop table pls_regra_atend_retorno');
end if;
*/
/* Felipe 14/04/2008 - Dropar campos da PLS_OUTORGANTE */

if (dt_versao_atual_cli_w < to_date('14/04/2008','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	column_name	= 'CD_PF_RESP_CONTABIL'
	and	table_name	= 'PLS_OUTORGANTE';
	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table pls_outorgante drop constraint PLSOUTO_PESFISI_FK3'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PLSOUTO_PESFISI_FK3_I'); /* índice */
		CALL exec_sql_dinamico('Felipe', 'alter table pls_outorgante drop column CD_PF_RESP_CONTABIL'); /* campo */
		end;
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	column_name	= 'CD_PJ_RESP_CONTABIL'
	and	table_name	= 'PLS_OUTORGANTE';
	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table pls_outorgante drop constraint PLSOUTO_PESJURI_FK2'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PLSOUTO_PESJURI_FK2_I'); /* índice */
		CALL exec_sql_dinamico('Felipe', 'alter table pls_outorgante drop column CD_PJ_RESP_CONTABIL'); /* campo */
		end;
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	column_name	= 'CD_PF_ATUARIA'
	and	table_name	= 'PLS_OUTORGANTE';
	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table pls_outorgante drop constraint PLSOUTO_PESFISI_FK2'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PLSOUTO_PESFISI_FK2_I'); /* índice */
		CALL exec_sql_dinamico('Felipe', 'alter table pls_outorgante drop column CD_PF_ATUARIA'); /* campo */
		end;
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	column_name	= 'CD_PJ_ATUARIA'
	and	table_name	= 'PLS_OUTORGANTE';
	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table pls_outorgante drop constraint PLSOUTO_PESJURI_FK3'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PLSOUTO_PESJURI_FK3_I'); /* índice */
		CALL exec_sql_dinamico('Felipe', 'alter table pls_outorgante drop column CD_PJ_ATUARIA'); /* campo */
		end;
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	column_name	= 'CD_PF_AUDITOR'
	and	table_name	= 'PLS_OUTORGANTE';
	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table pls_outorgante drop constraint PLSOUTO_PESFISI_FK'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PLSOUTO_PESFISI_FK_I'); /* índice */
		CALL exec_sql_dinamico('Felipe', 'alter table pls_outorgante drop column CD_PF_AUDITOR'); /* campo */
		end;
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	column_name	= 'CD_PJ_AUDITOR'
	and	table_name	= 'PLS_OUTORGANTE';
	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table pls_outorgante drop constraint PLSOUTO_PESJURI_FK4'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PLSOUTO_PESJURI_FK4_I'); /* índice */
		CALL exec_sql_dinamico('Felipe', 'alter table pls_outorgante drop column CD_PJ_AUDITOR'); /* campo */
		end;
	end if;
end if;

/* Paulo 25/04/2008 alterar para VARCHAR2 o campo CD_ANS da PLS_INTERF_SIB */

if (dt_versao_atual_cli_w < to_date('25/04/2008','dd/mm/yyyy')) then
	/* obter tipo atributo */

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_INTERF_SIB'
	and		upper(coalesce(data_type,'NUMBER')) <> 'VARCHAR2'
	and		column_name	= 'CD_ANS';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy',' alter table pls_interf_sib add cd_ans_var Varchar2(20)');
		CALL exec_sql_dinamico('Tasy',' update pls_interf_sib set cd_ans_var = cd_ans ');
		CALL exec_sql_dinamico('Tasy',' alter table pls_interf_sib drop column cd_ans ');
		CALL exec_sql_dinamico('Tasy',' alter table pls_interf_sib rename column cd_ans_var to cd_ans ');
	end if;
end if;

/* Felipe 28/04/2008 - Dropar a tabela DIOPS_CADASTRAL*/

if (dt_versao_atual_cli_w < to_date('28/04/2008','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name	= 'DIOPS_CADASTRAL';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Felipe', 'drop table diops_cadastral'); /* dropar tabela */
	end if;
end if;

/* Felipe 28/04/2008 */

if (dt_versao_atual_cli_w < to_date('28/04/2008','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name = 'PLS_GERAR_DIOPS_CONTABIL';
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Jacson', 'DROP PROCEDURE PLS_GERAR_DIOPS_CONTABIL '
);
	end if;
end if;

/* Felipe 23/05/2008 - Dropar campo VL_RECUPARACAO da W_SIP_ITEM_DESPESA */

if (dt_versao_atual_cli_w < to_date('23/05/2008','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	column_name	= 'VL_RECUPARACAO'
	and	table_name	= 'W_SIP_ITEM_DESPESA';
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Felipe', 'alter table w_sip_item_despesa drop column VL_RECUPARACAO'); /* campo */
	end if;
end if;

/* Felipe 20/06/2008 - Dropar a tabela DIOPS_TRANS_CONTA_SOLVENCIA*/

if (dt_versao_atual_cli_w < to_date('20/06/2008','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name	= 'DIOPS_TRANS_CONTA_SOLVENCIA';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Felipe', 'drop table diops_trans_conta_solvencia'); /* dropar tabela */
	end if;
end if;

/* Felipe 11/08/2008 - Dropar a integridade da PLS_PLS_PROPOSTA_BENEFICIARIO com a PLS_PROPOSTA_PLANO, campo NR_SEQ_PLANO*/

if (dt_versao_atual_cli_w < to_date('11/08/2008','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PLSPROB_PLSPROP_FK'
	and	column_name	= 'NR_SEQ_PLANO';

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table pls_proposta_beneficiario drop constraint PLSPROB_PLSPROP_FK'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PLSPROB_PLSPROP_FK_I'); /* índice */
		end;
	end if;
end if;

/* Felipe 20/08/2008 - Dropar a integridade da TITULO_PAGAR com a PLS_LOTE_PROT_TITULO, campo a NR_SEQ_LOTE_RES_PLS*/

if (dt_versao_atual_cli_w < to_date('20/08/2008','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'TITPAGA_PLSLOPT_FK'
	and	column_name	= 'NR_SEQ_LOTE_RES_PLS';

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table titulo_pagar drop constraint TITPAGA_PLSLOPT_FK'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index TITPAGA_PLSLOPT_FK_I'); /* índice */
		end;
	end if;
end if;

/* Felipe 20/08/2008 - Dropar a integridade da NOTA_FISCAL com a PLS_LOTE_PROT_TITULO, campo a NR_SEQ_LOTE_RES_PLS*/

if (dt_versao_atual_cli_w < to_date('20/08/2008','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'NOTFISC_PLSLOPT_FK'
	and	column_name	= 'NR_SEQ_LOTE_RES_PLS';

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table nota_fiscal drop constraint NOTFISC_PLSLOPT_FK'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index NOTFISC_PLSLOPT_FK_I'); /* índice */
		end;
	end if;
end if;

/* Felipe 01/09/2008 */

if (dt_versao_atual_cli_w < to_date('01/09/2008','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name = 'PLS_GERAR_LOTE_ALTERACAO';
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Felipe', 'drop procedure pls_gerar_lote_alteracao '
);
	end if;
end if;


/* Felipe 25/10/2008 - Dropar a integridade da PLS_SEGURADO com a PLS_PERICIA_MEDICA, campo a NR_SEQ_PERICIA_MEDICA*/

if (dt_versao_atual_cli_w < to_date('25/10/2008','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PLSSEGU_PLSPEME_FK'
	and	column_name	= 'NR_SEQ_PERICIA_MEDICA';
	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table pls_segurado drop constraint PLSSEGU_PLSPEME_FK'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PLSSEGU_PLSPEME_FK_I'); /* índice */
		CALL exec_sql_dinamico('Felipe', 'alter table pls_segurado drop column NR_SEQ_PERICIA_MEDICA'); /* campo */
		end;
	end if;
end if;

/* Felipe 22/11/2008 - Ajustar a geração do DIOPS - OS 101381*/

if (dt_versao_atual_cli_w < to_date('22/11/2008','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	xml_atributo
	where	nr_sequencia	= 11450
	and 	coalesce(nr_seq_atrib_elem::text, '') = '';
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Felipe', 'update xml_atributo set nr_seq_atrib_elem = 3942 where nr_sequencia = 11450');
	end if;
end if;

/* Felipe 02/12/2008 alterar para NUMBER o campo IE_TIPO_VENCIMENTO da DIOPS_FIN_IDADESALDO_ATI */

if (dt_versao_atual_cli_w < to_date('02/12/2008','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'DIOPS_FIN_IDADESALDO_ATI'
	and	upper(coalesce(data_type,'VARCHAR2')) <> 'NUMBER'
	and	column_name	= 'IE_TIPO_VENCIMENTO';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy',' alter table diops_fin_idadesaldo_ati add ie_tipo_vencimento_var Number(3))');
		CALL exec_sql_dinamico('Tasy',' update diops_fin_idadesaldo_ati set ie_tipo_vencimento_var = ie_tipo_vencimento ');
		CALL exec_sql_dinamico('Tasy',' alter table diops_fin_idadesaldo_ati drop column ie_tipo_vencimento ');
		CALL exec_sql_dinamico('Tasy',' alter table diops_fin_idadesaldo_ati rename column ie_tipo_vencimento_var to ie_tipo_vencimento ');

		CALL exec_sql_dinamico('Tasy',' alter table w_diops_fin_idadesaldo_ati add ie_tipo_vencimento_var Number(3))');
		CALL exec_sql_dinamico('Tasy',' update w_diops_fin_idadesaldo_ati set ie_tipo_vencimento_var = ie_tipo_vencimento ');
		CALL exec_sql_dinamico('Tasy',' alter table w_diops_fin_idadesaldo_ati drop column ie_tipo_vencimento ');
		CALL exec_sql_dinamico('Tasy',' alter table w_diops_fin_idadesaldo_ati rename column ie_tipo_vencimento_var to ie_tipo_vencimento ');
	end if;
end if;

/* Felipe 02/12/2008 alterar para NUMBER o campo IE_TIPO_VENCIMENTO da DIOPS_FIN_IDADESALDO_PAS */

if (dt_versao_atual_cli_w < to_date('02/12/2008','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'DIOPS_FIN_IDADESALDO_PAS'
	and	upper(coalesce(data_type,'VARCHAR2')) <> 'NUMBER'
	and	column_name	= 'IE_TIPO_VENCIMENTO';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy',' alter table diops_fin_idadesaldo_pas add ie_tipo_vencimento_var Number(3)');
		CALL exec_sql_dinamico('Tasy',' update diops_fin_idadesaldo_pas set ie_tipo_vencimento_var = ie_tipo_vencimento ');
		CALL exec_sql_dinamico('Tasy',' alter table diops_fin_idadesaldo_pas drop column ie_tipo_vencimento ');
		CALL exec_sql_dinamico('Tasy',' alter table diops_fin_idadesaldo_pas rename column ie_tipo_vencimento_var to ie_tipo_vencimento ');

		CALL exec_sql_dinamico('Tasy',' alter table w_diops_fin_idadesaldo_pas add ie_tipo_vencimento_var Number(3)');
		CALL exec_sql_dinamico('Tasy',' update w_diops_fin_idadesaldo_pas set ie_tipo_vencimento_var = ie_tipo_vencimento ');
		CALL exec_sql_dinamico('Tasy',' alter table w_diops_fin_idadesaldo_pas drop column ie_tipo_vencimento ');
		CALL exec_sql_dinamico('Tasy',' alter table w_diops_fin_idadesaldo_pas rename column ie_tipo_vencimento_var to ie_tipo_vencimento ');
	end if;
end if;

/*Felipe em 19/12/2008 */

if (dt_versao_atual_cli_w < to_date('19/12/2008','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name		= 'PLS_PLANO_COMPLEMENTO'
	and	column_name		= 'DS_DESCRICAO_PLANO'
	and	upper(data_type)	= 'LONG';
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Felipe','alter table pls_plano_complemento add ds_desc_plano_long long');
		CALL exec_sql_dinamico('Felipe','update pls_plano_complemento set ds_desc_plano_long = ds_descricao_plano');
		CALL exec_sql_dinamico('Felipe','alter table pls_plano_complemento rename column ds_descricao_plano to ds_descricao_plano_old');
		CALL exec_sql_dinamico('Felipe','alter table pls_plano_complemento modify ds_descricao_plano_old null');
		CALL exec_sql_dinamico('Felipe','alter table pls_plano_complemento rename column ds_desc_plano_long to ds_descricao_plano');
	end if;
end if;

/*Felipe em 07/04/2009 */

if (dt_versao_atual_cli_w < to_date('07/04/2009','dd/mm/yyyy')) then
	CALL baca_insere_tipo_prestador();
end if;

/* Felipe 13/04/2009 alterar para VARCHAR2 o campo IE_TIPO_VENCIMENTO da DIOPS_FIN_IDADESALDO_ATI */

if (dt_versao_atual_cli_w < to_date('13/04/2009','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'DIOPS_FIN_IDADESALDO_ATI'
	and	upper(coalesce(data_type,'NUMBER')) <> 'VARCHAR2'
	and	column_name	= 'IE_TIPO_VENCIMENTO';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy',' alter table diops_fin_idadesaldo_ati add ie_tipo_vencimento_var Varchar2(3))');
		CALL exec_sql_dinamico('Tasy',' update diops_fin_idadesaldo_ati set ie_tipo_vencimento_var = ie_tipo_vencimento ');
		CALL exec_sql_dinamico('Tasy',' alter table diops_fin_idadesaldo_ati drop column ie_tipo_vencimento ');
		CALL exec_sql_dinamico('Tasy',' alter table diops_fin_idadesaldo_ati rename column ie_tipo_vencimento_var to ie_tipo_vencimento ');

		CALL exec_sql_dinamico('Tasy',' alter table w_diops_fin_idadesaldo_ati add ie_tipo_vencimento_var Varchar2(3))');
		CALL exec_sql_dinamico('Tasy',' update w_diops_fin_idadesaldo_ati set ie_tipo_vencimento_var = ie_tipo_vencimento ');
		CALL exec_sql_dinamico('Tasy',' alter table w_diops_fin_idadesaldo_ati drop column ie_tipo_vencimento ');
		CALL exec_sql_dinamico('Tasy',' alter table w_diops_fin_idadesaldo_ati rename column ie_tipo_vencimento_var to ie_tipo_vencimento ');
	end if;
end if;

/* Felipe 13/04/2009 alterar para VARCHAR2 o campo IE_TIPO_VENCIMENTO da DIOPS_FIN_IDADESALDO_PAS */

if (dt_versao_atual_cli_w < to_date('13/04/2009','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'DIOPS_FIN_IDADESALDO_PAS'
	and	upper(coalesce(data_type,'NUMBER')) <> 'VARCHAR2'
	and	column_name	= 'IE_TIPO_VENCIMENTO';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy',' alter table diops_fin_idadesaldo_pas add ie_tipo_vencimento_var varchar2(3)');
		CALL exec_sql_dinamico('Tasy',' update diops_fin_idadesaldo_pas set ie_tipo_vencimento_var = ie_tipo_vencimento ');
		CALL exec_sql_dinamico('Tasy',' alter table diops_fin_idadesaldo_pas drop column ie_tipo_vencimento ');
		CALL exec_sql_dinamico('Tasy',' alter table diops_fin_idadesaldo_pas rename column ie_tipo_vencimento_var to ie_tipo_vencimento ');

		CALL exec_sql_dinamico('Tasy',' alter table w_diops_fin_idadesaldo_pas add ie_tipo_vencimento_var varchar2(3)');
		CALL exec_sql_dinamico('Tasy',' update w_diops_fin_idadesaldo_pas set ie_tipo_vencimento_var = ie_tipo_vencimento ');
		CALL exec_sql_dinamico('Tasy',' alter table w_diops_fin_idadesaldo_pas drop column ie_tipo_vencimento ');
		CALL exec_sql_dinamico('Tasy',' alter table w_diops_fin_idadesaldo_pas rename column ie_tipo_vencimento_var to ie_tipo_vencimento ');
	end if;

	delete 	from valor_dominio
	where	cd_dominio = 2183
	and	vl_dominio = '0';
end if;

/* Felipe 28/04/2008 - Dropar a integridade da PLS_SEGURADO_COMPL com a CBO_RED */

if (dt_versao_atual_cli_w < to_date('28/04/2009','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PLSSECO_CBORED_FK'
	and	column_name	= 'CD_CBO';

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table pls_segurado_compl drop constraint PLSSECO_CBORED_FK'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PLSSECO_CBORED_FK_I'); /* índice */
		end;
	end if;
end if;

/* Felipe 29/04/2008 - Ajustar o sub estipulante na PLS_SEGURADO */

if (dt_versao_atual_cli_w < to_date('29/04/2009','dd/mm/yyyy')) then
	CALL baca_pls_atualizar_subestipul();
end if;

/* Felipe 02/05/2009 - Dropar campos da PLS_REGRA_LANC_AUTOMATICO */

if (dt_versao_atual_cli_w < to_date('14/04/2008','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	column_name	= 'NR_SEQ_TIPO_CARENCIA'
	and	table_name	= 'PLS_REGRA_LANC_AUTOMATICO';
	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table pls_regra_lanc_automatico drop constraint PLSRELA_PLSTICA_FK'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PLSRELA_PLSTICA_FK_I'); /* índice */
		CALL exec_sql_dinamico('Felipe', 'alter table pls_regra_lanc_automatico drop column NR_SEQ_TIPO_CARENCIA'); /* campo */
		CALL exec_sql_dinamico('Felipe', 'alter table pls_regra_lanc_automatico drop column QT_DIAS_CARENCIA'); /* campo */
		CALL exec_sql_dinamico('Felipe', 'alter table pls_regra_lanc_automatico drop column IE_INICIO_VIG_CARENCIA'); /* campo */
		end;
	end if;
end if;

/* Felipe 04/05/2009 - Ajustar o IE_TIPO_GUIA da PLS_REEMBOLSO */

if (dt_versao_atual_cli_w < to_date('04/05/2009','dd/mm/yyyy')) then
	CALL baca_pls_tipo_guia_reembolso(nm_usuario_p);
end if;

/* Felipe 08/05/2009 - Dropar a integridade da PLS_PORTAB_SOLIC_CONSIST com a PLS_PORTAB_INCONSIST */

if (dt_versao_atual_cli_w < to_date('08/05/2009','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PLSPOSC_PLSCOIN_FK'
	and	column_name	= 'NR_SEQ_INCONSISTENCIA';

	if (qt_registro_w > 0) theN
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table pls_portab_solic_consist drop constraint PLSPOSC_PLSCOIN_FK'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PLSPOSC_PLSCOIN_FK_I'); /* índice */
		end;
	end if;
end if;

/* Felipe 13/05/2009 - Ajustar os valores dos domínios 2269 e 2268 */

if (dt_versao_atual_cli_w < to_date('13/05/2009','dd/mm/yyyy')) then
	update	valor_dominio
	set	ds_valor_dominio	= 'Planos Individuais/Familiares - Preço pré-estabelecido'
	where	cd_dominio		= 2269
	and	vl_dominio		= '1';

	update	valor_dominio
	set	ds_valor_dominio	= 'Taxa de administração de planos'
	where	cd_dominio		= 2269
	and	vl_dominio		= '4';

	update	valor_dominio
	set	ds_valor_dominio	= 'Outros créditos de operações com planos'
	where	cd_dominio		= 2269
	and	vl_dominio		= '6';

	update	dominio
	set	nm_dominio		= 'PLS - DIOPS vencimento financeiro idade saldo ativo'
	where	cd_dominio		= 2183;

	update	valor_dominio
	set	ds_valor_dominio	= 'Eventos/Sinistros a liquidar'
	where	cd_dominio		= 2268
	and	vl_dominio		= '1';

	update	valor_dominio
	set	ds_valor_dominio	= 'Outros débitos de operações com planos'
	where	cd_dominio		= 2268
	and	vl_dominio		= '4';
end if;

/* Felipe 15/05/2009 - Ajustar a integridade PLSBEIN_PLSCOME_FK para cascade */

if (dt_versao_atual_cli_w < to_date('15/05/2009','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe', 'alter table pls_beneficiario_internado drop constraint PLSBEIN_PLSCOME_FK'); /* integridade */
end if;

/* Felipe 19/05/2009 - Ajustar os valores dos domínios 2460 */

if (dt_versao_atual_cli_w < to_date('19/05/2009','dd/mm/yyyy')) then
	update	valor_dominio
	set	ds_valor_dominio	= 'Migração'
	where	cd_dominio		= 2460
	and	vl_dominio		= '3';

	delete	from valor_dominio
	where	cd_dominio	= 2460
	and	vl_dominio	= '4';
end if;

/* Felipe 29/05/2009 - Dropar a view PLS_PESSOA_RELACIONAMENTO */

if (dt_versao_atual_cli_w < to_date('29/05/2009','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe', 'drop view pls_pessoa_relacionamento');
end if;

/* Felipe 01/06/2009 - Ajustar os valores dos domínios 2460 */

if (dt_versao_atual_cli_w < to_date('01/06/2009','dd/mm/yyyy')) then
	update	valor_dominio
	set	ds_valor_dominio	= 'Migração a um contrato novo'
	where	cd_dominio		= 2460
	and	vl_dominio		= '3';
end if;

/* Felipe 02/06/2009 */

if (dt_versao_atual_cli_w < to_date('02/06/2009','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe', 'alter table pls_web_param_usuario drop constraint PLSWEPU_FUNPARA_FK'); /* integridade */
	CALL exec_sql_dinamico('Felipe', 'drop index PLSWEPU_FUNPARA_FK_I'); /* índice */
end if;

/* Eder 08/06/2009 */

if (dt_versao_atual_cli_w < to_date('08/06/2009','dd/mm/yyyy')) then
	delete from funcao_parametro where cd_funcao = 1250;
end if;

/* Felipe 13/06/2009 - Ajustar o valor do domínio 2808 */

if (dt_versao_atual_cli_w < to_date('13/06/2009','dd/mm/yyyy')) then
	update	valor_dominio
	set	ds_valor_dominio	= 'Integrado/Upload'
	where	cd_dominio		= 2808
	and	vl_dominio		= 'T';
end if;

/* Felipe 15/06/2009 - Ajustar a dependência do parâmetro 7 da OPS - Proposta de adesão eletrônica */

if (dt_versao_atual_cli_w < to_date('15/06/2009','dd/mm/yyyy')) then
	update	funcao_parametro
	set	ds_dependencia	= 'Depende que o parâmetro [5] - Permite aprovar uma proposta de adesão esteja setado como "S"'
	where	cd_funcao	= 1232
	and	nr_sequencia	= 7;
end if;

/* Felipe 16/05/2009 - Ajustar os valores dos domínios 2742 e 2183 */

if (dt_versao_atual_cli_w < to_date('16/05/2009','dd/mm/yyyy')) then
	delete	from valor_dominio
	where	cd_dominio 	= 2742
	and	vl_dominio	= '365';

	delete	from valor_dominio
	where	cd_dominio 	= 2183
	and	vl_dominio	in ('120','365');
end if;

/* Felipe 16/05/2009 - Ajustar os valores dos domínios 2742 e 2183 */

if (dt_versao_atual_cli_w < to_date('16/05/2009','dd/mm/yyyy')) then
	update	valor_dominio
	set	ds_valor_dominio	= 'Vencidos de 1 a 30 dias'
	where	cd_dominio		= 2183
	and	vl_dominio		= '30';

	update	valor_dominio
	set	ds_valor_dominio	= 'Vencidos de 31 a 60 dias'
	where	cd_dominio		= 2183
	and	vl_dominio		= '60';

	update	valor_dominio
	set	ds_valor_dominio	= 'Vencidos de 61 a 90 dias'
	where	cd_dominio		= 2183
	and	vl_dominio		= '90';

	update	valor_dominio
	set	ds_valor_dominio	= 'Vencidos a mais de 90 dias'
	where	cd_dominio		= 2183
	and	vl_dominio		= '999';

	update	valor_dominio
	set	ds_valor_dominio	= 'Vencidos de 1 a 30 dias'
	where	cd_dominio		= 2742
	and	vl_dominio		= '30';

	update	valor_dominio
	set	ds_valor_dominio	= 'Vencidos de 31 a 60 dias'
	where	cd_dominio		= 2742
	and	vl_dominio		= '60';

	update	valor_dominio
	set	ds_valor_dominio	= 'Vencidos de 61 a 90 dias'
	where	cd_dominio		= 2742
	and	vl_dominio		= '90';

	update	valor_dominio
	set	ds_valor_dominio	= 'Vencidos de 91 a 120 dias'
	where	cd_dominio		= 2742
	and	vl_dominio		= '120';

	update	valor_dominio
	set	ds_valor_dominio	= 'Vencidos a mais de 120 dias'
	where	cd_dominio		= 2742
	and	vl_dominio		= '999';
end if;

/* Felipe 20/06/2009 - Ajustar os valores dos domínios 2697 */

if (dt_versao_atual_cli_w < to_date('20/06/2009','dd/mm/yyyy')) then
	update	valor_dominio
	set	ds_valor_dominio	= 'Em proposta de adesão'
	where	cd_dominio		= 2697
	and	vl_dominio		= 'A';

	update	valor_dominio
	set	ds_valor_dominio	= 'Solicitação pendente'
	where	cd_dominio		= 2697
	and	vl_dominio		= 'P';

	update	valor_dominio
	set	ds_valor_dominio	= 'Solicitação cancelada'
	where	cd_dominio		= 2697
	and	vl_dominio		= 'R';
end if;

/* Felipe 23/06/2009 - executar o BACA_PLS_RESCISAO_PAGADOR */

if (dt_versao_atual_cli_w < to_date('23/06/2009','dd/mm/yyyy')) then
	CALL baca_pls_rescisao_pagador(nm_usuario_p);
end if;

/* Eder 29/06/2009 - ajustar os valores do domínio 2587 */

if (dt_versao_atual_cli_w < to_date('29/06/2009','dd/mm/yyyy')) then
	update	valor_dominio
	set	ds_valor_dominio	= 'Encaminhado ao beneficiário/empresa'
	where	cd_dominio		= 2587
	and	vl_dominio		= '3';
end if;

/* Paulo 30/06/2009 - Dropar a integridade da PLS_MENSALIDADE_SEGURADO com a PLS_REAJUSTE_PRECO, campo NR_SEQ_REAJUSTE*/

if (dt_versao_atual_cli_w < to_date('30/06/2009','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PLSMESE_PLSREPR_FK'
	and	column_name	= 'NR_SEQ_REAJUSTE';

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('prosa', 'alter table pls_mensalidade_segurado drop constraint PLSMESE_PLSREPR_FK'); /* integridade */
		end;
	end if;
end if;

/* Paulo 02/07/2009 - Ajustar valores novos criados nas tabelas PLS_MENSALIDADE_SEGURADO e PLS_MENSALIDADE*/

if (dt_versao_atual_cli_w < to_date('02/07/2009','dd/mm/yyyy')) then
	CALL pls_baca_ajustar_valor_mens();
end if;

/* Felipe 07/07/2009 - Ajustar os valores dos domínios 1899 */

if (dt_versao_atual_cli_w < to_date('07/07/2009','dd/mm/yyyy')) then
	update	valor_dominio
	set	ds_valor_dominio	= 'Migração entre contratos / Contrato antigo'
	where	cd_dominio		= 1899
	and	vl_dominio		= '5';
end if;

/* Felipe 07/07/2009 - Ajustar os históricos do segurado */

if (dt_versao_atual_cli_w < to_date('07/07/2009','dd/mm/yyyy')) then
	CALL baca_pls_ajustar_hist_segurado(nm_usuario_p);
end if;

/* Felipe 13/07/2009 - Ajustar a integridade PLSLOCONS_PLSPRAD_FK para cascade */

if (dt_versao_atual_cli_w < to_date('13/07/2009','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe', 'alter table pls_lote_consistencia_sib drop constraint PLSLOCONS_PLSPRAD_FK'); /* integridade */
end if;

/* Felipe 13/07/2009 - Ajustar a integridade PLSPROV_PLSPRAD_FK para cascade */

if (dt_versao_atual_cli_w < to_date('13/07/2009','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe', 'alter table pls_proposta_validacao drop constraint PLSPROV_PLSPRAD_FK'); /* integridade */
end if;

/* Felipe 13/07/2009 - Ajustar a integridade PLSPRCL_PLSPROV_FK para cascade */

if (dt_versao_atual_cli_w < to_date('13/07/2009','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe', 'alter table pls_proposta_check_list drop constraint PLSPRCL_PLSPROV_FK'); /* integridade */
end if;

/* Felipe 27/07/2009 - Deletar o WCPanel pagador_pag_notificacao_wcp */

if (dt_versao_atual_cli_w < to_date('27/07/2009','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe', 'delete from dic_objeto where nr_seq_obj_sup = 4200'); /* colunas */
	CALL exec_sql_dinamico('Felipe', 'delete from dic_objeto where nr_sequencia = 4200'); /* wcp */
end if;

/* Felipe 27/07/2009 - PLS_PARAMETROS */

if (dt_versao_atual_cli_w < to_date('27/07/2009','dd/mm/yyyy')) then
	update	pls_parametros
	set	ie_tela_guia_cm	= 'S';
end if;

/* Felipe 01/08/2009 - ajustar a liberação do produto para a proposta de adesão */

if (dt_versao_atual_cli_w < to_date('01/08/2009','dd/mm/yyyy')) then
	CALL baca_pls_lib_plano_proposta(nm_usuario_p);
end if;

/* Felipe 20/08/2009 - Dropar as integridade da PLS_SEGURADO_HISTORICO com a PLS_SEGURADO */

if (dt_versao_atual_cli_w < to_date('20/08/2009','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PLSSEHI_PLSSEGU_FK'
	and	column_name	= 'NR_SEQ_SEGURADO';

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table pls_segurado_historico drop constraint PLSSEHI_PLSSEGU_FK'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PLSSEHI_PLSSEGU_FK_I'); /* índice */
		end;
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PLSSEHI_PLSSEGU_FK2'
	and	column_name	= 'NR_SEQ_SEGURADO_ATUAL';

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table pls_segurado_historico drop constraint PLSSEHI_PLSSEGU_FK2'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PLSSEHI_PLSSEGU_FK2_I'); /* índice */
		end;
	end if;
end if;

/* Eder 22/08/2009 - Arrumar os tipos de acesso na tabela PLS_ACESSO_PORTAL_LOG */

if (dt_versao_atual_cli_w < to_date('22/08/2009','dd/mm/yyyy')) then
	CALL pls_baca_tipo_acesso_portal();
end if;

/* Felipe 26/08/2009 - Ajustar as tabelas do QUESTIONARIO*/

if (dt_versao_atual_cli_w < to_date('26/08/2009','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe', 'drop table pls_modelo_beneficiario');
	CALL exec_sql_dinamico('Felipe', 'drop table reg_modelo');
	CALL exec_sql_dinamico('Felipe', 'drop table reg_pergunta');
	CALL exec_sql_dinamico('Felipe', 'drop procedure atualizar_reg_pergunta'
);
end if;

/* Eder 27/08/2009 - Colocar a situação de todos os prestadores do portal como ativo na tabela PLS_USUARIO_WEB */

if (dt_versao_atual_cli_w < to_date('27/08/2009','dd/mm/yyyy')) then
	update 	pls_usuario_web
	set 	ie_situacao = 'A';
end if;

/* Paulo 31/08/2009 - Dropar integridade do motivo dos lançamentos programados */

if (dt_versao_atual_cli_w < to_date('31/08/2009','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('prosa', 'alter table pls_lancamento_mensalidade drop constraint PLSLAME_PLSLAMO_FK'); /* integridade */
	CALL exec_sql_dinamico('prosa', 'drop index PLSLAME_PLSLAMO_FK_I'); /* índice */
end if;

/* Felipe 01/09/2009 - Dropar campos da PLS_PARAMETROS */

if (dt_versao_atual_cli_w < to_date('01/09/2009','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe', 'alter table pls_parametros drop column IE_REGRA_DATA_PRECO_MAT');
	CALL exec_sql_dinamico('Felipe', 'alter table pls_parametros drop column IE_REGRA_DATA_PRECO_PROC');
end if;

/* Felipe 03/09/2009 - Ajustar integridades para cascade */

if (dt_versao_atual_cli_w < to_date('03/09/2009','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe', 'alter table pls_preco_regra drop constraint PLSPRRE_PLSREDE_FK');
	CALL exec_sql_dinamico('Felipe', 'alter table pls_regra_desconto drop constraint PLSREDE_PLSCONT_FK');
end if;

/* Felipe 09/09/2009 - Dropar a coluna DS_ANEXO da PLS_GUIA_PLANO */

if (dt_versao_atual_cli_w < to_date('09/09/2009','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe', 'alter table pls_guia_plano drop column DS_ANEXO');
end if;

/* Robson 17/09/2009 - Update nas colunas QT_BENEF_RESCINDIDO, QT_PAGADOR, VL_RESCISAO da PLS_NOTIFICACAO_LOTE   */

if (dt_versao_atual_cli_w < to_date('17/09/2009','dd/mm/yyyy')) then
	CALL pls_baca_lote_notificacao(nm_usuario_p);
end if;

/* Eder 18/09/2009 - Deletar o parâmetro[5] da função OPSW - Autorizações e todos os registros filhos  */

if (dt_versao_atual_cli_w < to_date('18/09/2009','dd/mm/yyyy')) then
	delete 	from pls_web_param_usuario
	where 	nr_seq_funcao_param 	= 5
	and	cd_funcao 		= 1247;

	delete from pls_web_param_contrato
	where 	nr_seq_funcao_param 	= 5
	and	cd_funcao 		= 1247;

	delete from funcao_param_hist
	where 	nr_Seq_param 	= 5
	and	cd_funcao 	= 1247;

	delete from funcao_parametro
	where 	nr_Sequencia 	= 5
	and	cd_funcao 	= 1247;
end if;

/* Felipe 21/09/2009 - Atualizar o campo IE_FECHAR_CONTA da TISS_MOTIVO_GLOSA */

if (dt_versao_atual_cli_w < to_date('21/09/2009','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe', 'update tiss_motivo_glosa set ie_fechar_conta = ' || chr(39) || 'S' || chr(39));
end if;

/* Robson 22/09/2009 - Ajustar os valores dos domínios 2972 */

if (dt_versao_atual_cli_w < to_date('22/09/2009','dd/mm/yyyy')) then
	update	valor_dominio
	set	ds_valor_dominio	= 'Visualizou relatório 2º via de boleto'
	where	cd_dominio		= 2972
	and	vl_dominio		= '23';

	update	valor_dominio
	set	ds_valor_dominio	= 'Visualizou relatório de demonstrativo dos itens da mensalidade'
	where	cd_dominio		= 2972
	and	vl_dominio		= '24';

	update	valor_dominio
	set	ds_valor_dominio	= 'Visualizou relatório de pagamentos efetuados'
	where	cd_dominio		= 2972
	and	vl_dominio		= '25';

	update	valor_dominio
	set	ds_valor_dominio		= 'Visualizou relatório da CAT'
	where	cd_dominio		= 2972
	and	vl_dominio		= '26';

	update	valor_dominio
	set	ds_valor_dominio	= 'Visualizou relatório de contas médicas'
	where	cd_dominio		= 2972
	and	vl_dominio		= '27';

	update	valor_dominio
	set	ds_valor_dominio	= 'Visualizou relatório de autorizações'
	where	cd_dominio		= 2972
	and	vl_dominio		= '29';
end if;

/* Felipe 07/10/2009 - Atualizar o campo DT_REPROVACAO  na PLS_PROPOSTA_ADESAO */

if (dt_versao_atual_cli_w < to_date('07/10/2009','dd/mm/yyyy')) then
	update	pls_proposta_adesao
	set	dt_reprovacao	= dt_atualizacao
	where	ie_status	= 'R'
	and	coalesce(dt_reprovacao::text, '') = '';
end if;


/* Felipe 29/10/2009 - Dropar a integridade da PTU_INTERCAMBIO  com a PLS_COOPERATIVA */

if (dt_versao_atual_cli_w < to_date('29/10/2009','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PTUINTE_PLSCOOP_FK'
	and	column_name	= 'CD_UNIMED_DESTINO';

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table ptu_intercambio drop constraint PTUINTE_PLSCOOP_FK'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PTUINTE_PLSCOOP_FK_I'); /* índice */
		end;
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PTUINTE_PLSCOOP_FK2'
	and	column_name	= 'CD_UNIMED_ORIGEM';

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table ptu_intercambio drop constraint PTUINTE_PLSCOOP_FK2'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PTUINTE_PLSCOOP_FK2_I'); /* índice */
		end;
	end if;
end if;

/* Felipe 05/11/2009 - Dropar as integridade da PLS_PROPOSTA_ADESAO com a PLS_CONTRATO */

if (dt_versao_atual_cli_w < to_date('05/11/2009','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe', 'alter table pls_proposta_adesao drop constraint PLSPRAD_PLSCONT_FK'); /* integridade */
	CALL exec_sql_dinamico('Felipe', 'drop index PLSPRAD_PLSCONT_FK_I'); /* índice */
	CALL exec_sql_dinamico('Felipe', 'alter table pls_proposta_adesao drop constraint PLSPRAD_PLSCONT_FK2'); /* integridade */
	CALL exec_sql_dinamico('Felipe', 'drop index PLSPRAD_PLSCONT_FK2_I'); /* índice */
end if;

/* Paulo 14/11/2009 - Ajustar os valores dos domínios 2557 */

if (dt_versao_atual_cli_w < to_date('14/11/2009','dd/mm/yyyy')) then
	update	valor_dominio
	set	ds_valor_dominio	= 'Em análise'
	where	cd_dominio		= 2557
	and	vl_dominio		= 'C';

	update	valor_dominio
	set	ds_valor_dominio	= 'Solicitação aprovada'
	where	cd_dominio		= 2557
	and	vl_dominio		= 'O';
end if;

/* Paulo 24/11/2009 - Dropar campo da PLS_COMERCIAL_EMPRESA */

if (dt_versao_atual_cli_w < to_date('24/11/2009','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	column_name	= 'IE_PESSOA_JURIDICA'
	and	table_name	= 'PLS_COMERCIAL_EMPRESA';
	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Paulo', 'alter table PLS_COMERCIAL_EMPRESA drop column IE_PESSOA_JURIDICA'); /* campo */
		end;
	end if;
end if;

/* Paulo 24/11/2009 - Dropar campo da PLS_COMERCIAL_EMPRESA */

if (dt_versao_atual_cli_w < to_date('24/11/2009','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	column_name	= 'CD_EMPRESA'
	and	table_name	= 'PLS_COMERCIAL_EMPRESA';
	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Paulo', 'alter table pls_comercial_empresa drop constraint PLSCOEM_EMPREFE_FK'); /* integridade */
		CALL exec_sql_dinamico('Paulo', 'drop index PLSCOEM_EMPREFE_FK_I'); /* índice */
		CALL exec_sql_dinamico('Paulo', 'alter table pls_comercial_empresa drop column CD_EMPRESA'); /* campo */
		end;
	end if;
end if;

/* Paulo 03/12/2009 - Dropar integridade da tabela SIB_DEVOLUCAO_ERRO com SIB_DEVOLUCAO_LOTE */

if (dt_versao_atual_cli_w < to_date('03/12/2009','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Paulo', 'alter table SIB_DEVOLUCAO_ERRO drop constraint SIBDEER_SIBDELO_FK'); /* integridade */
	CALL exec_sql_dinamico('Paulo', 'drop index SIBDEER_SIBDELO_FK_I'); /* índice */
	CALL exec_sql_dinamico('Paulo', 'alter table SIB_DEVOLUCAO_CCO drop constraint SIBDECC_SIBDELO_FK'); /* integridade */
	CALL exec_sql_dinamico('Paulo', 'drop index SIBDECC_SIBDELO_FK_I'); /* índice */
end if;

/* Felipe 03/12/2009 - Atualizar o campo IE_TIPO_PROTOCOLO da PLS_PROTOCOLO_CONTA para C */

if (dt_versao_atual_cli_w < to_date('03/12/2009','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe', 'update pls_protocolo_conta set ie_tipo_protocolo = ' || chr(39) || 'C' || chr(39));
end if;

/* Paulo 19/12/2009 - Dropar  a procedure GERAR_EIS_CONTAS_MEDICAS */

if (dt_versao_atual_cli_w < to_date('19/12/2009','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Paulo', 'drop procedure GERAR_EIS_CONTAS_MEDICAS'
);
end if;

/* Paulo 24/12/2009 - Atualizar as informações do campo CD_CODIGO_ANT para CD_SCPA */

if (dt_versao_atual_cli_w < to_date('24/12/2009','dd/mm/yyyy')) then
	CALL pls_atualizar_scpa_plano();
end if;

/* Felipe 04/01/2010 - Atualizar o campo IE_TIPO_PROTOCOLO da PLS_PROTOCOLO_CONTA para C */

if (dt_versao_atual_cli_w < to_date('04/01/2010','dd/mm/yyyy')) then
	select	max(cd_centro_custo)
	into STRICT	cd_centro_custo_w
	from	pls_parametros
	where	cd_estabelecimento = cd_estabelecimento_w;

	if (coalesce(cd_centro_custo_w,0) > 0) then
		select	count(*)
		into STRICT	qt_registro_w
		from	pls_regra_centro_custo
		where	cd_centro_custo		= cd_centro_custo_w
		and	ie_situacao		= 'A'
		and	ie_tipo_centro_custo	= 'R';

		if (qt_registro_w	= 0) then
			insert into pls_regra_centro_custo(nr_sequencia, ie_situacao, cd_estabelecimento,
				cd_centro_custo, ie_tipo_centro_custo, dt_atualizacao,
				nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				nr_seq_plano)
			values (nextval('pls_regra_centro_custo_seq'), 'A', cd_estabelecimento_w,
				cd_centro_custo_w, 'R', clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				null);
		end if;
	end if;
end if;

/* robson 05/01/2010 */

if (dt_versao_atual_cli_w < to_date('05/01/2010','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('rsilva','alter table ptu_fatura_boleto modify ds_instrucao null');
	CALL exec_sql_dinamico('rsilva','alter table ptu_fatura_boleto modify cd_barras null');
	CALL exec_sql_dinamico('rsilva','alter table ptu_fatura_boleto modify ds_linha_digitavel null');
	CALL exec_sql_dinamico('rsilva','alter table ptu_nota_servico modify ie_origem_proced null');
	CALL exec_sql_dinamico('rsilva','alter table ptu_nota_servico modify cd_procedimento null');
end if;

/* Paulo - 18/01/2010 - Ajustar o cadastro dos pagadores */

if (dt_versao_atual_cli_w < to_date('18/01/2010','dd/mm/yyyy')) then
	CALL pls_ajustar_pagador_fin();
end if;

/* Felipe 21/01/2010 - Dropar a integridade e índice*/

if (dt_versao_atual_cli_w < to_date('21/01/2010','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PLSCOAN_PLSCOOP_FK'
	and	column_name	= 'NR_SEQ_COOPERATIVA';

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table pls_cooperativa_anexo drop constraint PLSCOAN_PLSCOOP_FK'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PLSCOAN_PLSCOOP_FK_I'); /* índice */
		end;
	end if;
end if;

/* Paulo 22/01/2010 - Dropar a procedure PLS_VALORES_PRES_ESTABELECIDOS*/

if (dt_versao_atual_cli_w < to_date('21/01/2010','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name = 'PLS_VALORES_PRES_ESTABELECIDOS';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('prosa', 'DROP PROCEDURE PLS_VALORES_PRES_ESTABELECIDOS'
);
	end if;
end if;

/* Felipe 27/01/2010 - Dropar IE_SITUACAO da PLS_ATENDIMENTO_OPERADOR */

if (dt_versao_atual_cli_w < to_date('27/01/2010','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe', 'alter table pls_atendimento_operador drop column IE_SITUACAO');
end if;

/* Felipe 27/01/2010 - Ajuste de integridade */

if (dt_versao_atual_cli_w < to_date('21/01/2010','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PTUMOPE_PTUREMO_FK'
	and	column_name	= 'NR_SEQ_RETORNO_MOV';

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table ptu_mov_produto_empresa drop constraint PTUMOPE_PTUREMO_FK'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PTUMOPE_PTUREMO_FK_I'); /* índice */
		CALL exec_sql_dinamico('Felipe', 'alter table ptu_mov_produto_empresa drop column NR_SEQ_RETORNO_MOV'); /* índice */
		end;
	end if;
end if;

/* Felipe 29/01/2010 */

if (dt_versao_atual_cli_w < to_date('29/01/2010','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe','alter table pls_atendimento modify ie_origem_atendimento null');
	CALL exec_sql_dinamico('Felipe','alter table pls_atendimento modify ie_tipo_pessoa null');
	CALL exec_sql_dinamico('Felipe','alter table pls_atendimento modify ie_tipo_ocorrencia null');
end if;


/* Francisco 01/02/2010 - Atualizar o IE_SITUACAO_ATEND na PLS_SEGURADO */

if (dt_versao_atual_cli_w < to_date('01/02/2010','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_segurado
	where	coalesce(ie_situacao_atend::text, '') = '';

	if (qt_registro_w > 0) then
		begin

		update	pls_segurado
		set	ie_situacao_atend	= 'A'
		where	coalesce(ie_situacao_atend::text, '') = ''
		and	coalesce(dt_rescisao::text, '') = '';

		update	pls_segurado
		set	ie_situacao_atend	= 'I'
		where	coalesce(ie_situacao_atend::text, '') = ''
		and	(dt_rescisao IS NOT NULL AND dt_rescisao::text <> '');

		CALL exec_sql_dinamico('Francisco','alter table pls_segurado modify ie_situacao_atend not null');
		end;
	end if;
end if;

/* Francisco 04/02/2010 - Tirar obrigatoriedade do início de suspensão e colocar no início previsto */

if (dt_versao_atual_cli_w < to_date('04/02/2010','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Francisco','alter table pls_segurado_suspensao modify dt_inicio_suspensao null');
	CALL exec_sql_dinamico('Francisco','alter table pls_segurado_suspensao modify dt_prev_inicio_susp not null');
end if;

/* Francisco 04/02/2010  */

if (dt_versao_atual_cli_w < to_date('04/02/2010','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_notificacao_pagador
	where	coalesce(ie_suspensao::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_notificacao_pagador
		set	ie_suspensao	= 'N'
		where	coalesce(ie_suspensao::text, '') = '';

		CALL exec_sql_dinamico('Francisco','alter table pls_notificacao_pagador modify ie_suspensao not null');
	end if;
end if;

/* Felipe 08/02/2010  */

if (dt_versao_atual_cli_w < to_date('08/02/2010','dd/mm/yyyy')) then
	update	dominio
	set	nm_dominio	= 'PLS - Indicador do tipo de quantidade para Auditoria'
	where	cd_dominio	= 2172;

	update	dominio
	set	nm_dominio	= 'PLS - Tipo histórico para cooperativa médica'
	where	cd_dominio	= 3197;

	update	dominio
	set	nm_dominio	= 'PLS - Eventos lançamento automático'
	where	cd_dominio	= 2692;

	update	dominio
	set	nm_dominio	= 'PLS - Tipo de taxa de saúde suplementar'
	where	cd_dominio	= 2485;

	update	dominio
	set	nm_dominio	= 'PLS - Tipos de acesso portal web'
	where	cd_dominio	= 2851;
end if;

/* Paulo 12/02/2010 - Atualizar os campos NR_CONTRATO do lote de mensalidade*/

if (dt_versao_atual_cli_w < to_date('12/02/2010','dd/mm/yyyy')) then
	CALL pls_ajuste_contrato_mens();
end if;

/* Paulo 17/02/2010 - Excluir a integridade com a tabela de SCA */

if (dt_versao_atual_cli_w < to_date('17/02/2010','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PLSSCVI_PLSSCOA_FK'
	and	column_name	= 'NR_SEQ_SCA';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Paulo', 'alter table pls_sca_vinculo drop constraint PLSSCVI_PLSSCOA_FK'); /* integridade */
		CALL exec_sql_dinamico('Paulo', 'drop index PLSSCVI_PLSSCOA_FK_I'); /* índice */
		CALL exec_sql_dinamico('Paulo', 'alter table pls_sca_vinculo drop column NR_SEQ_SCA'); /* índice */
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PLSSEAD_PLSSCOA_FK'
	and	column_name	= 'NR_SEQ_SCA';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Paulo', 'alter table pls_plano_servico_adic drop constraint PLSSEAD_PLSSCOA_FK'); /* integridade */
		CALL exec_sql_dinamico('Paulo', 'drop index PLSSEAD_PLSSCOA_FK_I'); /* índice */
		CALL exec_sql_dinamico('Paulo', 'alter table pls_plano_servico_adic drop column NR_SEQ_SCA'); /* índice */
	end if;
end if;

/* Paulo 17/02/2010 - Excluir a function sobre SCA */

if (dt_versao_atual_cli_w < to_date('17/02/2010','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name = 'PLS_VERIFICA_DATA_SCA_VINCULO';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Paulo', 'DROP FUNCTION PLS_VERIFICA_DATA_SCA_VINCULO '
);
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name = 'PLS_VERIFICA_DATA_SCA_PLANO';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Paulo', 'DROP FUNCTION PLS_VERIFICA_DATA_SCA_PLANO '
);
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name = 'PLS_OBTER_DESC_SCA';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Paulo', 'DROP FUNCTION PLS_OBTER_DESC_SCA '
);
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name = 'PLS_OBTER_NOME_SCA';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Paulo', 'DROP FUNCTION PLS_OBTER_NOME_SCA '
);
	end if;
end if;

/* Paulo 18/02/2010 - Alterar de "Acidente de trabalho" para "Serviços e coberturas adicionais" */

if (dt_versao_atual_cli_w < to_date('18/02/2010','dd/mm/yyyy')) then
	update	valor_dominio
	set	ds_valor_dominio	= 'Serviços e coberturas adicionais'
	where	cd_dominio		= 2406
	and	vl_dominio		= 'A';
end if;

/* Eder 20/02/2010 - Tirar obrigatoriedade do número do contrato */

if (dt_versao_atual_cli_w < to_date('20/02/2010','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Eder','alter table pls_inclusao_beneficiario modify nr_seq_contrato null');
end if;

/* Francisco - 24/02/2010 - Dropar campo  */

if (dt_versao_atual_cli_w < to_date('24/02/2010','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Francisco', 'alter table pls_inconsistencia_pessoa drop constraint PLSINPE_PLSPESINCO_FK'); /* integridade */
	CALL exec_sql_dinamico('Francisco', 'drop index PLSINPE_PLSPESINCO_FK_I'); /* índice */
	CALL exec_sql_dinamico('Francisco', 'alter table pls_inconsistencia_pessoa drop column NR_SEQ_PESSOA_INC'); /*atributo*/
end if;

/* Eder - 25/02/2010 - Dropar campos  */

if (dt_versao_atual_cli_w < to_date('25/02/2010','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Eder', 'alter table pls_proposta_adesao drop column NM_USUARIO_WEB '); /*atributo*/
	CALL exec_sql_dinamico('Eder', 'alter table pls_proposta_adesao drop column IE_SITUACAO_WEB '); /*atributo*/
	CALL exec_sql_dinamico('Eder', 'alter table pls_proposta_adesao drop column DS_SENHA '); /*atributo*/
end if;

/* Paulo - 05/03/2010 - Alterar descrição domínio  */

if (dt_versao_atual_cli_w < to_date('05/03/2010','dd/mm/yyyy')) then
	update	valor_dominio
	set	ds_valor_dominio	= 'Valor de saldo - Pagamento a menor parcela anterior'
	where	cd_dominio		= 1930
	and	vl_dominio		= '16';
end if;

/* Paulo 11/03/2010 - Atualizar o campo NR_SEQ_EMISSOR das regras da carteira*/

if (dt_versao_atual_cli_w < to_date('11/03/2010','dd/mm/yyyy')) then
	CALL pls_baca_ajuste_regra_emissor();
end if;


/* Paulo 12/03/2010 Excluir parâmetro da OPS - Gestão Comercial */

if (dt_versao_atual_cli_w < to_date('12/03/2010','dd/mm/yyyy')) then
	CALL pls_ajustar_param_comercial();
end if;

/* Paulo 12/03/2010 Excluir sequence contrato */

if (dt_versao_atual_cli_w < to_date('12/03/2010','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Paulo', 'drop sequence PLS_CONTRATO_SEQ1'); /* Sequence */
end if;

/* Paulo 12/03/2010 Ajusar a sequence do campo NR_CONTRATO da PLS_CONTRATO */

if (dt_versao_atual_cli_w <= to_date('12/03/2010','dd/mm/yyyy')) then
	CALL tasy_posicionar_sequence('PLS_CONTRATO','NR_CONTRATO','R');
end if;

/* Eder 15/03/2010 - Alterar valores do domínio 3300 - PLS - Eventos utilizados no portal do plano de saúde*/

if (dt_versao_atual_cli_w < to_date('15/03/2010','dd/mm/yyyy')) then

	select 	count(*)
	into STRICT	qt_registro_w
	from   	valor_dominio
	where  	cd_dominio = 3300
	and    	vl_dominio IN ('SA', 'SE');

	if ( qt_registro_w > 0 ) then
		delete 	from valor_dominio
		where	cd_dominio = 3300
		and	vl_dominio in ('LF','LN');
	end if;

	update	valor_dominio
	set     ds_valor_dominio = 'Login',
		vl_dominio = 'LN'
	where	cd_dominio = 3300
	and	vl_dominio = 'SA';

	update	valor_dominio
	set	ds_valor_dominio = 'Logoff',
		vl_dominio = 'LF'
	where  	cd_dominio = 3300
	and	vl_dominio = 'SE';
end if;

/* Paulo 15/03/2010 - Alterar a descrição do domínio 2692 */

if (dt_versao_atual_cli_w < to_date('15/03/2010','dd/mm/yyyy')) then
	update	valor_dominio
	set     ds_valor_dominio = 'Bonificação - Aquisição produto/SCA'
	where	cd_dominio = 2692
	and	vl_dominio = '2';
end if;

/* Felipe 15/03/2010 - Deletar o parâmetro 1 da OPS - Painel de ocorrências */

if (dt_versao_atual_cli_w < to_date('15/03/2010','dd/mm/yyyy')) then
	delete	from funcao_param_hist where cd_funcao = 1266 and nr_seq_param = 1;
	delete	from funcao_parametro where cd_funcao = 1266 and nr_sequencia = 1;
end if;

/* Paulo - 15/03/2010 - Integridade da bonificação com a cobertura */

if (dt_versao_atual_cli_w < to_date('15/03/2010','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Paulo', 'alter table pls_bonificacao_regra drop constraint PLSBORE_PLSTICO_FK'); /* integridade */
	CALL exec_sql_dinamico('Paulo', 'drop index PLSBORE_PLSTICO_FK_I'); /* índice */
end if;

/* Felipe - 18/03/2010 - Dropar o campo DT_FIM_ATENDIMENTO da PLS_ATENDIMENTO_EVENTO */

if (dt_versao_atual_cli_w < to_date('18/03/2010','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe', 'alter table pls_atendimento_evento drop column DT_FIM_ATENDIMENTO'); /* campo */
end if;

/* Alexandre 18/03/2010 - Alterar a descrição do domínio 3326 */

if (dt_versao_atual_cli_w < to_date('18/03/2010','dd/mm/yyyy')) then
	update	valor_dominio
	set     ds_valor_dominio = 'Evento concluído'
	where	cd_dominio = 3326
	and	vl_dominio = 'C';
end if;

/* Francisco - 22/03/2010 - Excluir o valor "Cooperativa médica" do domínio */

if (dt_versao_atual_cli_w < to_date('22/03/2010','dd/mm/yyyy')) then
	delete	from valor_dominio
	where	cd_dominio	= 3203
	and	vl_dominio	= 'C';
end if;

/* Francisco - 22/03/2010 - Excluir o campo IE_TIPO_COOPERATIVA */

if (dt_versao_atual_cli_w < to_date('22/03/2010','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Francisco', 'alter table pls_congenere drop column IE_TIPO_COOPERATIVA');
	CALL exec_sql_dinamico('Francisco', 'alter table pls_congenere modify NR_SEQ_TIPO_COOP not null');
end if;

/* Paulo 25/03/2010 - Deletar o parâmetro 42 da OPS - Gestão de Contratos */

if (dt_versao_atual_cli_w < to_date('25/03/2010','dd/mm/yyyy')) then
	delete	from funcao_param_hist where cd_funcao = 1202 and nr_seq_param = 42;
	delete	from funcao_parametro where cd_funcao = 1202 and nr_sequencia = 42;
end if;

/* Felipe 25/03/2010 - Recriar a integridade */

if (dt_versao_atual_cli_w < to_date('25/03/2010','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PLSPRAN_TIPODOC_FK'
	and	column_name	= 'NR_SEQ_TIPO_DOCUMENTO';

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table pls_prestador drop constraint PLSPRAN_TIPODOC_FK'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PLSPRAN_TIPODOC_FK_I'); /* índice */
		end;
	end if;
end if;

/* Alexandre 26/03/2010 - Ajuste na Gestão de contas médicas*/

if (dt_versao_atual_cli_w < to_date('26/03/2010','dd/mm/yyyy')) then
	CALL pls_baca_comunic_conta(nm_usuario_p,cd_estabelecimento_w);
end if;

/* Paulo - 29/03/2010 - Alterar o valor do domínio */

if (dt_versao_atual_cli_w < to_date('29/03/2010','dd/mm/yyyy')) then
	update	valor_dominio
	set     ds_valor_dominio = 'Dígito verificador (Módulo 11 - Padrão CNPJ da SRF)'
	where	cd_dominio = 1829
	and	vl_dominio = 'V';
end if;

/* Paulo - 30/03/2010 - Alterar o tipo de operação do contrato_plano para Plano de Saúde */

if (dt_versao_atual_cli_w < to_date('30/03/2010','dd/mm/yyyy')) then
	update	pls_contrato_plano a
	set     a.ie_tipo_operacao	= (	SELECT	x.ie_tipo_operacao
						from	pls_contrato x
						where	a.nr_seq_contrato	= x.nr_sequencia);
end if;

/* Francisco - 31/03/2010 - O campo  ie_situacao desta tabela foi eliminado para tratar por vigência */

if (dt_versao_atual_cli_w < to_date('31/03/2010','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Francisco', 'alter table pls_regra_intercambio drop column IE_SITUACAO'); /* integridade */
end if;

/*Alexandre - 07/04/2010 - Alterar os campos NR_SEQ_PROC_ORIGEM e NR_SEQ_MAT_ORIGEM para null */

if (dt_versao_atual_cli_w < to_date('07/04/2010','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('acjjunior','alter table pls_auditoria_proc modify nr_seq_proc_origem null');
	CALL exec_sql_dinamico('acjjunior','alter table pls_auditoria_mat modify nr_seq_mat_origem null');
end if;

/*Alexandre - 12/04/2010 - Alterar a descrição do domínio 3334 */

if (dt_versao_atual_cli_w < to_date('12/04/2010','dd/mm/yyyy')) then
	update	valor_dominio
	set     ds_valor_dominio = 'Ordem de serviço'
	where	cd_dominio = 3334
	and	vl_dominio = 6;
end if;

/* Felipe - 14/04/2010 - Dropar as UK do DIOPS */

if (dt_versao_atual_cli_w < to_date('14/04/2010','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe','alter table diops_trans_conta drop constraint DIOPSTC_UK');
	CALL exec_sql_dinamico('Felipe','alter table diops_trans_conta_contab drop constraint DIOPTCC_UK');
end if;

/* Paulo - 14/04/2010 - Alterar descrição domínio  */

if (dt_versao_atual_cli_w < to_date('14/04/2010','dd/mm/yyyy')) then
	update	valor_dominio
	set	ds_valor_dominio	= 'Usuário eventual'
	where	cd_dominio		= 2406
	and	vl_dominio		= 'I';
end if;

/* Lepinski - 15/04/2010 - Atualizar novos campos na pls_lote_mensalidade*/

if (dt_versao_atual_cli_w < to_date('15/04/2010','dd/mm/yyyy')) then
	CALL baca_pls_lote_mens();
end if;

/* Felipe - 20/04/2010 - Dropar a tabela PLS_REGRA_QTDE_TAXA */

if (dt_versao_atual_cli_w < to_date('20/04/2010','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe','drop procedure pls_obter_taxa_qtde_exec'
);
	CALL exec_sql_dinamico('Felipe','drop table pls_regra_qtde_taxa');
end if;

/* Felipe - 21/04/2010 - Alteração nos valores do domínio 3339 - PLS - Status item auditoria */

if (dt_versao_atual_cli_w < to_date('21/04/2010','dd/mm/yyyy')) then
	delete	FROM valor_dominio
	where	cd_dominio	= 3339
	and	vl_dominio in ('L','P');

	update	dominio
	set	nm_dominio	= 'PLS - Ação do auditor no item'
	where	cd_dominio	= 3339;
end if;

/* Felipe - 22/04/2010 - Ajuste das novas datas do produto */

if (dt_versao_atual_cli_w < to_date('22/04/2010','dd/mm/yyyy')) then
	update	pls_plano
	set	dt_ativacao	= coalesce(dt_atualizacao_nrec, dt_atualizacao);

	update	pls_plano
	set	dt_suspensao	= dt_atualizacao
	where	ie_situacao	= 'S';

	update	pls_plano
	set	dt_cancelamento	= dt_atualizacao
	where	ie_situacao	= 'I';
end if;

/* Felipe - 23/04/2010 - Dropar campo e integridade da PLS_PLANO com a PLS_INTERCAMBIO */

if (dt_versao_atual_cli_w < to_date('23/04/2010','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PLSPLAN_PLSPLAI_FK'
	and	column_name	= 'NR_SEQ_INTERCAMBIO';

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table pls_plano drop constraint PLSPLAN_PLSPLAI_FK'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PLSPLAN_PLSPLAI_FK_I'); /* índice */
		CALL exec_sql_dinamico('Felipe', 'alter table pls_plano drop column NR_SEQ_INTERCAMBIO'); /* campo */
		end;
	end if;
end if;

/* Felipe 27/04/2010 - Dropar IE_SITUACAO da PLS_ATENDIMENTO_OPERADOR */

if (dt_versao_atual_cli_w < to_date('27/04/2010','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe', 'alter table pls_atendimento_operador drop column IE_SITUACAO');
end if;

/* Paulo 29/04/2010 - Dropar integridade do campo NM_USUARIO_ESTAGIO */

if (dt_versao_atual_cli_w < to_date('29/04/2010','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PLSSECE_USUARIO_FK'
	and	column_name	= 'NM_USUARIO_ESTAGIO';

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Paulo', 'alter table pls_segurado_cart_estagio drop constraint PLSSECE_USUARIO_FK'); /* integridade */
		CALL exec_sql_dinamico('Paulo', 'drop index PLSSECE_USUARIO_FK_I'); /* índice */
		end;
	end if;
end if;

/* Paulo - 03/05/2010 - Carregar valores no campo novo criado */

if (dt_versao_atual_cli_w < to_date('03/05/2010','dd/mm/yyyy')) then
	update	pls_inclusao_beneficiario
	set	ie_tipo_inclusao	= 'P'
	where	coalesce(ie_tipo_inclusao::text, '') = '';
end if;

/* Felipe 05/05/2010 - Ajuste do CD_ESTABELECIMENTO */

if (dt_versao_atual_cli_w < to_date('05/05/2010','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Felipe', 'update pls_evento_ocorrencia set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_evento_ocorrencia set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_atend_motivo_ausencia set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_motivo_exclusao set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_motivo_liberacao set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_quadro_clinico set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_tipo_historico_atend set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_atendimento_tipo_tempo set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_agente_motivador set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_analise_parecer set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_tipo_atividade set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_conta_receita_futura set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_conta_contabil_imposto set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_grau_participacao set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_congenere set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_motivo_susp_seg set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_motivo_cancelamento set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_instrumento_juridico set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_tipo_mala_direta set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_vinculo_estipulante set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update ptu_grupo_servico set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_cargo_diops set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_tipo_bem_imobiliario set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_tipo_bem_investimento set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update sib_motivo_exclusao set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_motivo_isencao_notific set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_faixa_etaria set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_motivo_descred set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_tipo_documento set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update pls_tipo_prestador set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Felipe', 'update diops_trans_conta set cd_estabelecimento = ' || cd_estabelecimento_w);
end if;

/* Paulo 06/05/2010 - Ajuste do CD_ESTABELECIMENTO */

if (dt_versao_atual_cli_w < to_date('06/05/2010','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Paulo', 'update pls_solicitacao_regra_vend set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_solicitacao_regra_aten set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_area_atuacao_venda set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_repasse_vend set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update w_pls_guia_medico set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_portab_pessoa set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_portab_motivo_recusa set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_regra_desconto set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_grupo_contrato_web set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_lote_retorno_sib set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update sib_inconsistencia set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_regra_rescisao set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_regra_suspensao set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_desc_empresa set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_lancamento_mensalidade set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_lote_reaj_segurado set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_tipo_coparticipacao set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_rol set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_regra_simul_preco_desc set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_regra_segurado_cart set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_emissor_carteira set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_evento_portal_web set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_grupo_auditor set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_vinculo_direto set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_regra_via_acesso set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update ans_grupo_despesa set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_plano_item set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_regiao set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_mensagem_mensalidade set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_regra_relat_grupo set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update w_pls_carga_contrato set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update w_pls_carga_pagador set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update w_pls_carga_comercial set cd_estabelecimento = ' || cd_estabelecimento_w);
	CALL exec_sql_dinamico('Paulo', 'update pls_w_import_cad_unimed set cd_estabelecimento = ' || cd_estabelecimento_w);
end if;

/* Felipe 06/05/2010 - Dropar a integridade da PLS_REQUISICAO_GLOSA com a PLS_REQUISICAO_ITEM, campo NR_SEQ_ITE M*/

if (dt_versao_atual_cli_w < to_date('06/05/2010','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PLSREQG_PLSREIT_FK'
	and	column_name	= 'NR_SEQ_ITEM';

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Felipe', 'alter table pls_requisicao_glosa drop constraint PLSREQG_PLSREIT_FK'); /* integridade */
		CALL exec_sql_dinamico('Felipe', 'drop index PLSREQG_PLSREIT_FK_I'); /* índice */
		CALL exec_sql_dinamico('Felipe', 'alter table pls_requisicao_glosa drop column NR_SEQ_ITEM'); /* campo */
		end;
	end if;
end if;

/* Francisco 06/05/2010 - Ajuste do CD_ESTABELECIMENTO */

if (dt_versao_atual_cli_w < to_date('06/05/2010','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Francisco', 'update pls_intercambio set cd_estabelecimento = ' || cd_estabelecimento_w);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_ajustar_base_pls ( nm_usuario_p text) FROM PUBLIC;

