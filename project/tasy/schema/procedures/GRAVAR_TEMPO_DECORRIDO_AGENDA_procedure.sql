-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_tempo_decorrido_agenda ( NR_SEQ_AGENDA_P bigint, NR_STATUS_ATUAL_P bigint, NR_STATUS_NOVO_P bigint, NM_USUARIO_P text ) AS $body$
DECLARE

	/*
	 * 1 - Iniciar
	 * 2 - Parar
	 * 3 - Reiniciar
	 * - - SELECT * FROM VALOR_DOMINIO WHERE CD_DOMINIO = 10046;
	 */
	IE_ACAO_W 						smallint;
	/*
	 * 1 - Tempo decorrido desde a recepcao
	 * 2 - Tempo decorrido desde a chegada
	 * 3 - Ambas
	 * -  - SELECT * FROM VALOR_DOMINIO WHERE CD_DOMINIO = 10047;
	 */
	COLUNA_ALTERADA_TEMPO_DECOR_W 	smallint;

	CUR_REGRAS CURSOR FOR
		SELECT
			IE_ACAO						,
			COLUNA_ALTERADA_TEMPO_DECOR
		FROM
			REGRA_STATUS_TEMPO_DECOR
		WHERE
			COALESCE(NR_SEQ_STATUS_PAC_ATUAL, 0) = COALESCE(NR_STATUS_ATUAL_P, 0)
		AND NR_SEQ_STATUS_PAC_NOVO				 = NR_STATUS_NOVO_P
		ORDER BY
			NR_SEQUENCIA
		;

    PROCEDURE inserir_reg_tempo_decorrido(IE_TIPO_ESPERA_P bigint, COLUNA_ALTERADA_TEMPO_DECOR_P bigint) IS
	;
BEGIN
		INSERT INTO AG_CONS_TEMPO_DECOR(
			NR_SEQUENCIA		,
			NR_SEQ_AGENDA		,
			NR_SEQ_STATUS_INICIO,
			NR_SEQ_STATUS_FIM	,
			NM_USUARIO_NREC		,
			NM_USUARIO			,
			IE_TIPO_ESPERA		,
			IE_ACAO_FINAL		,
			DT_INICIO			,
			DT_FIM				,
			DT_ATUALIZACAO_NREC	,
			DT_ATUALIZACAO
		)
		SELECT
			nextval('ag_cons_tempo_decor_seq')	, -- NR_SEQUENCIA
			NR_SEQ_AGENDA_P					, -- NR_SEQ_AGENDA
			NR_STATUS_NOVO_P				, -- NR_SEQ_STATUS_INICIO
			NULL							, -- NR_SEQ_STATUS_FIM
			NULL							, -- NM_USUARIO_NREC
			NM_USUARIO_P					, -- NM_USUARIO
			IE_TIPO_ESPERA_P				, -- IE_TIPO_ESPERA
			IE_ACAO							, -- IE_ACAO_FINAL
			clock_timestamp()							, -- DT_INICIO
			NULL							, -- DT_FIM
			NULL							, -- DT_ATUALIZACAO_NREC
			clock_timestamp()							  -- DT_ATUALIZACAO
		FROM
			REGRA_STATUS_TEMPO_DECOR
		WHERE
			COALESCE(NR_SEQ_STATUS_PAC_ATUAL, 0) = COALESCE(NR_STATUS_ATUAL_P, 0)
		AND NR_SEQ_STATUS_PAC_NOVO				 = NR_STATUS_NOVO_P
		AND COLUNA_ALTERADA_TEMPO_DECOR          = COLUNA_ALTERADA_TEMPO_DECOR_P
		;
	
	END;

	PROCEDURE finaliza_contagem_tempo IS
	BEGIN
		UPDATE
            AG_CONS_TEMPO_DECOR
        SET
            NR_SEQ_STATUS_FIM	= NR_STATUS_NOVO_P	,
            NM_USUARIO_NREC		= NM_USUARIO_P		,
            DT_FIM				= clock_timestamp()			,
            DT_ATUALIZACAO_NREC = clock_timestamp()
        WHERE
        	NR_SEQ_AGENDA		 = NR_SEQ_AGENDA_P
        AND coalesce(NR_SEQ_STATUS_FIM::text, '') = ''
		AND (COLUNA_ALTERADA_TEMPO_DECOR_W = 3 OR IE_TIPO_ESPERA = COLUNA_ALTERADA_TEMPO_DECOR_W);
	END;

BEGIN
 	
	FOR REGRA IN CUR_REGRAS LOOP
	    IE_ACAO_W := COALESCE(REGRA.IE_ACAO, 0);
	    COLUNA_ALTERADA_TEMPO_DECOR_W := COALESCE(REGRA.COLUNA_ALTERADA_TEMPO_DECOR, 0);
	
	    -- SET SERVEROUTPUT ON; -- ON/OFF - Caso queira (ou nao) visualizar o log
		RAISE NOTICE 'Acao..: %', TO_CHAR(IE_ACAO_W);
	 	RAISE NOTICE 'Coluna: %', TO_CHAR(COLUNA_ALTERADA_TEMPO_DECOR_W);
		/*
		 * Cenarios onde sao necessarios interromper a contagem de tempo:
		 * 	1.Quando a acao for 1 - Iniciar || 3 - Reiniciar, pois caso seja para iniciar, pega todos os casos,
		 *	  que foram iniciados e nao finalizados finaliza e inicia uma nova contagem
		 * 	2.Quando a acao for 2 - Parar	|| 3 - Reiniciar
		 */
        IF (IE_ACAO_W IN (1, 2)) THEN
            finaliza_contagem_tempo;
        END IF;
	
		-- 1 - Iniciar || 3 - Reiniciar
		IF (IE_ACAO_W IN (1, 3)) THEN
			-- 1 - Tempo decorrido desde a recepcao || 3 - Ambas
			IF (COLUNA_ALTERADA_TEMPO_DECOR_W IN (1, 3)) THEN
				inserir_reg_tempo_decorrido(1, COLUNA_ALTERADA_TEMPO_DECOR_W);
                -- Quando for uma acao de Reiniciar, finaliza a ocorrencia logo apos inclui-la
                IF (IE_ACAO_W = 3) THEN
                    finaliza_contagem_tempo;
                END IF;
			END IF;
	
			-- 2 - Tempo decorrido desde a chegada || 3 - Ambas
			IF (COLUNA_ALTERADA_TEMPO_DECOR_W IN (2, 3)) THEN
				inserir_reg_tempo_decorrido(2, COLUNA_ALTERADA_TEMPO_DECOR_W);
                -- Quando for uma acao de Reiniciar, finaliza a ocorrencia logo apos inclui-la
                IF (IE_ACAO_W = 3) THEN
                    finaliza_contagem_tempo;
                END IF;
	        END IF;
		END IF;
	END LOOP;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_tempo_decorrido_agenda ( NR_SEQ_AGENDA_P bigint, NR_STATUS_ATUAL_P bigint, NR_STATUS_NOVO_P bigint, NM_USUARIO_P text ) FROM PUBLIC;

