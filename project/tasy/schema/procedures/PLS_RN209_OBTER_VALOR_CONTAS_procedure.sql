-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_rn209_obter_valor_contas ( nr_seq_controle_p bigint, nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------
Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_ans_w			pls_conta.cd_ans%type;
cd_ans_oper_w			pls_outorgante.cd_ans%type;
vl_glosa_w			pls_conta.vl_glosa%type;
nr_seq_conta_referencia_w	pls_conta.nr_seq_conta_referencia%type;
vl_reembolso_w			pls_conta.vl_total%type;
nr_sequencia_w			pls_conta.nr_sequencia%type;
vl_pago_w			pls_conta.vl_total%type;
cd_estabelecimento_w		ops_rn209_controle.cd_estabelecimento%type;
ie_liquido_glosa_w		ops_rn209_controle.ie_liquido_glosa%type;
dt_atendimento_w		timestamp;
dt_emissao_w			timestamp;
dt_mes_pago_w			timestamp;
dt_pagamento_w			timestamp;
vl_avisado_w			ops_rn209_arquivo.vl_avisado%type;

c_contas CURSOR FOR
	SELECT	a.cd_ans,
		a.vl_glosa,
		a.nr_sequencia nr_seq_conta_referencia,
		coalesce(a.dt_atendimento_referencia, a.dt_atendimento) dt_atendimento,
		coalesce(dt_emissao_imp, a.dt_atendimento_referencia) dt_emissao,
		b.dt_mes_competencia dt_aviso,
		CASE WHEN b.ie_tipo_protocolo='R' THEN a.vl_total  ELSE 0 END  vl_reembolso,
		a.nr_sequencia,
		a.vl_total vl_total,
		a.dt_emissao_imp,
		b.ie_tipo_protocolo,
		a.vl_coparticipacao
	from	pls_conta		a,
		pls_protocolo_conta	b
	where	b.nr_sequencia	= a.nr_seq_protocolo
	and	a.nr_sequencia	= nr_sequencia_p;

c_contas_w		c_contas%rowtype;


BEGIN
select	max(a.cd_estabelecimento),
	max(a.ie_liquido_glosa)
into STRICT	cd_estabelecimento_w,
	ie_liquido_glosa_w
from	ops_rn209_controle	a
where	a.nr_sequencia	= nr_seq_controle_p;

select	max(a.cd_ans)
into STRICT	cd_ans_oper_w
from	pls_outorgante	a
where	a.cd_estabelecimento	= cd_estabelecimento_w;

open c_contas;
loop
fetch c_contas into
	c_contas_w;
EXIT WHEN NOT FOUND; /* apply on c_contas */
	begin

	vl_avisado_w:= null;

	if (ie_liquido_glosa_w = 'S') then
		begin
		if (c_contas_w.ie_tipo_protocolo = 'R') then
			begin
			vl_avisado_w:= c_contas_w.vl_total + c_contas_w.vl_coparticipacao;
			end;
		else
			begin
			vl_avisado_w:= c_contas_w.vl_total;
			end;
		end if;
		end;
	else
		begin
		if (c_contas_w.ie_tipo_protocolo = 'R') then
			begin
			vl_avisado_w:= c_contas_w.vl_total + c_contas_w.vl_coparticipacao + c_contas_w.vl_glosa;
			end;
		else
			begin
			vl_avisado_w:= c_contas_w.vl_total + c_contas_w.vl_glosa;
			end;
		end if;

		end;
	end if;

	select	max(x.dt_pagamento),
		coalesce(sum(x.vl_pago),0)
	into STRICT	dt_pagamento_w,
		vl_pago_w
	from (SELECT	max(i.dt_baixa) dt_pagamento,
			sum(dividir(d.vl_liberado * i.vl_pago, c_contas_w.vl_total)) vl_pago
		from	titulo_pagar_baixa 	i,
			titulo_pagar 		h,
			pls_pag_prest_vencimento g,
			pls_pagamento_prestador f,
			pls_lote_pagamento 	e,
			pls_conta_medica_resumo	d,
			pls_conta_proc		c,
			pls_conta		z
		where	z.nr_sequencia		= d.nr_seq_conta
		and	c.nr_sequencia		= d.nr_seq_conta_proc
		and	e.nr_sequencia		= d.nr_seq_lote_pgto
		and	f.nr_seq_prestador	= d.nr_seq_prestador_pgto
		and	e.nr_sequencia		= f.nr_seq_lote
		and	f.nr_sequencia		= g.nr_seq_pag_prestador
		and	g.nr_titulo		= h.nr_titulo
		and	h.nr_titulo 		= i.nr_titulo
		and	c.nr_seq_conta		= c_contas_w.nr_seq_conta_referencia
		
union all

		SELECT	max(i.dt_baixa) dt_pagamento,
			sum(dividir(d.vl_liberado * i.vl_pago, c_contas_w.vl_total)) vl_pago
		from	titulo_pagar_baixa 	i,
			titulo_pagar 		h,
			pls_pag_prest_vencimento g,
			pls_pagamento_prestador f,
			pls_lote_pagamento 	e,
			pls_conta_medica_resumo	d,
			pls_conta_mat		c,
			pls_conta		z
		where	z.nr_sequencia		= d.nr_seq_conta
		and	c.nr_sequencia		= d.nr_seq_conta_mat
		and	e.nr_sequencia		= d.nr_seq_lote_pgto
		and	f.nr_seq_prestador	= d.nr_seq_prestador_pgto
		and	e.nr_sequencia		= f.nr_seq_lote
		and	f.nr_sequencia		= g.nr_seq_pag_prestador
		and	g.nr_titulo		= h.nr_titulo
		and	h.nr_titulo 		= i.nr_titulo
		and	c.nr_seq_conta		= c_contas_w.nr_seq_conta_referencia
		
union all

		select	max(i.dt_baixa) dt_pagamento,
			sum(dividir(c_contas_w.vl_total * i.vl_pago, t.vl_titulo))
		from	pls_protocolo_conta		p,
			pls_prot_conta_titulo		u,
			pls_conta			c,
			pls_lote_protocolo		l,
			pls_lote_protocolo_venc		v,
			titulo_pagar			t,
			titulo_pagar_baixa 		i
		where	p.nr_sequencia	= c.nr_seq_protocolo
		and	p.nr_sequencia	= u.nr_seq_protocolo
		and	v.nr_seq_lote	= u.nr_seq_lote
		and	l.nr_sequencia	= v.nr_seq_lote
		and	v.nr_titulo	= t.nr_titulo
		and	t.nr_titulo	= i.nr_titulo
		and	c.nr_sequencia	= c_contas_w.nr_seq_conta_referencia
		
union all

		select	max(i.dt_contabil) dt_pagamento,
			sum(dividir(c_contas_w.vl_total * i.vl_adiantamento, t.vl_titulo))
		from	pls_protocolo_conta		p,
			pls_prot_conta_titulo		u,
			pls_conta			c,
			pls_lote_protocolo		l,
			pls_lote_protocolo_venc		v,
			titulo_pagar			t,
			titulo_pagar_adiant 		i
		where	p.nr_sequencia	= c.nr_seq_protocolo
		and	p.nr_sequencia	= u.nr_seq_protocolo
		and	v.nr_seq_lote	= u.nr_seq_lote
		and	l.nr_sequencia	= v.nr_seq_lote
		and	v.nr_titulo	= t.nr_titulo
		and	t.nr_titulo	= i.nr_titulo
		and	c.nr_sequencia	= c_contas_w.nr_seq_conta_referencia
		
union all

		select	max(i.dt_baixa) dt_pagamento,
			sum(dividir(c_contas_w.vl_total * i.vl_pago, t.vl_titulo))
		from	pls_protocolo_conta		p,
			pls_conta			c,
			titulo_pagar			t,
			titulo_pagar_baixa 		i
		where	p.nr_sequencia	= c.nr_seq_protocolo
		and	p.nr_sequencia	= t.nr_seq_reembolso
		and	t.nr_titulo	= i.nr_titulo
		and	c.nr_sequencia	= c_contas_w.nr_seq_conta_referencia) x;

	insert into ops_rn209_arquivo(cd_ans,
		vl_glosa,
		nr_seq_conta_medica,
		dt_ocorrencia,
		dt_atualizacao,
		dt_pagamento,
		vl_reembolso,
		vl_pago,
		nm_usuario,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nr_sequencia,
		nr_seq_controle,
		dt_aviso,
		vl_avisado)
	values (coalesce(c_contas_w.cd_ans,cd_ans_oper_w),
		c_contas_w.vl_glosa,
		c_contas_w.nr_seq_conta_referencia,
		c_contas_w.dt_atendimento,
		clock_timestamp(),
		dt_pagamento_w,
		c_contas_w.vl_reembolso,
		vl_pago_w,--c_contas_w.vl_pago,
		nm_usuario_p,
		nm_usuario_p,
		clock_timestamp(),
		nextval('ops_rn209_arquivo_seq'),
		nr_seq_controle_p,
		c_contas_w.dt_aviso,
		vl_avisado_w);
	end;
end loop;
close c_contas;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_rn209_obter_valor_contas ( nr_seq_controle_p bigint, nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

