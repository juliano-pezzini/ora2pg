-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lote_emis_via_adic ( nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_contrato_w			bigint;
nr_seq_lote_carteira_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_carteira_w		bigint;
nr_via_emissao_w		bigint;
ie_emissao_cart_repasse_pre_w	varchar(1);
ie_tipo_segurado_w		varchar(3);
ie_tipo_repasse_w		varchar(1);
ie_gerar_emissao_w		varchar(1);
nr_seq_cart_emis_w		bigint;
nm_usuario_solic_w 		pls_segurado_carteira.nm_usuario_solicitante%type;
dt_solicitacao_w			pls_segurado_carteira.dt_solicitacao%type;


C01 CURSOR FOR
	SELECT	a.nr_seq_segurado,
		a.nr_seq_carteira,
		b.ie_tipo_segurado
	from	pls_via_adic_cart	a,
		pls_segurado		b
	where	a.nr_seq_segurado	= b.nr_sequencia
	and	a.nr_seq_lote		= nr_seq_lote_p;


BEGIN

if (coalesce(nr_seq_lote_p,0) > 0) then
	select	max(ie_emissao_cart_repasse_pre)
	into STRICT	ie_emissao_cart_repasse_pre_w
	from	pls_parametros
	where	cd_estabelecimento	= cd_estabelecimento_p;
	ie_emissao_cart_repasse_pre_w	:= coalesce(ie_emissao_cart_repasse_pre_w,'N');
	
	select	nr_contrato
	into STRICT	nr_contrato_w
	from	pls_via_adic_cart_lote
	where	nr_sequencia = nr_seq_lote_p;
	
	select	nextval('pls_lote_carteira_seq')
	into STRICT	nr_seq_lote_carteira_w
	;
	
	insert	into	pls_lote_carteira(	nr_sequencia, cd_estabelecimento, dt_atualizacao,
			nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
			dt_referencia_venc, ie_situacao, ie_tipo_lote, nr_seq_lote_via_adic,
			nr_contrato, nr_contrato_final, ie_tipo_data,
			ie_situacao_atend, ie_tipo_pessoa)
		values (	nr_seq_lote_carteira_w, cd_estabelecimento_p, clock_timestamp(),
			nm_usuario_p, clock_timestamp(), nm_usuario_p,
			null, 'G', 'E', nr_seq_lote_p,
			nr_contrato_w, nr_contrato_w, 'N',
			'T', 'A');
	
	open C01;
	loop
	fetch C01 into
		nr_seq_segurado_w,
		nr_seq_carteira_w,
		ie_tipo_segurado_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ie_gerar_emissao_w	:= 'S';
		if	(ie_emissao_cart_repasse_pre_w = 'S' AND ie_tipo_segurado_w = 'R') then
			select	max(ie_tipo_repasse)
			into STRICT	ie_tipo_repasse_w
			from	pls_segurado_repasse
			where	nr_seq_segurado	= nr_seq_segurado_w
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and	coalesce(dt_fim_repasse::text, '') = '';
			
			if (ie_tipo_repasse_w = 'P') then
				ie_gerar_emissao_w	:= 'N';
			end if;
		end if;
		
		if (ie_gerar_emissao_w = 'S') then
			select	a.nr_via_solicitacao,
						  a.dt_solicitacao,
							a.nm_usuario_solicitante
			into STRICT		nr_via_emissao_w,
							dt_solicitacao_w,
							nm_usuario_solic_w
			from		pls_segurado_carteira	a
			where		a.nr_sequencia = nr_seq_carteira_w;

			select	nextval('pls_carteira_emissao_seq')
			into STRICT	nr_seq_cart_emis_w
			;
			
			insert	into	pls_carteira_emissao(	nr_sequencia, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_lote,
					nr_seq_seg_carteira, dt_recebimento, ie_situacao, nr_via_emissao, dt_solicitacao, nm_usuario_solic)
				values (	nr_seq_cart_emis_w, clock_timestamp(), nm_usuario_p,
					clock_timestamp(), nm_usuario_p, nr_seq_lote_carteira_w,
					nr_seq_carteira_w, null, 'P', nr_via_emissao_w, dt_solicitacao_w, nm_usuario_solic_w);
			
			CALL pls_atualizar_campos_cart_emis(nr_seq_cart_emis_w, nr_seq_carteira_w, nm_usuario_p);
		end if;
		end;
	end loop;
	close C01;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lote_emis_via_adic ( nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

