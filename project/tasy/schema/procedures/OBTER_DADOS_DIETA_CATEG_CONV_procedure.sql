-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_dados_dieta_categ_conv (cd_convenio_p bigint, cd_categoria_p text, cd_plano_p text, cd_pessoa_fisica_p text, nr_acompanhante_p INOUT bigint, qt_dieta_acomp_p INOUT bigint, ie_lib_dieta_p INOUT text, nr_seq_regra_acomp_p INOUT bigint, nr_atendimento_p bigint) AS $body$
DECLARE


nr_idade_w		bigint;
ie_idade_dieta_w	varchar(1);
qt_idade_menores_w	smallint;
qt_idade_maiores_w	smallint;
qt_registro_w		smallint;
qt_dieta_acomp_w	smallint;
ie_lib_diet_w		varchar(15);
qt_acompanhantes_w	smallint;
qt_idade_de_w		bigint;
qt_idade_ate_w		bigint;
qt_registro_www		integer;
qt_registro_ww		integer;
nr_seq_regra_acomp_w	bigint;
nr_seq_classificacao_w	bigint;
ie_tipo_atendimento_w		smallint;

c01 CURSOR FOR
	SELECT	qt_acompanhantes,
		qt_dieta_acomp,
		ie_lib_dieta,
		nr_seq_regra_acomp
	from	regra_dieta_acomp
	where	cd_convenio					=	cd_convenio_p
	and	coalesce(cd_categoria,coalesce(cd_categoria_p,'0'))	=	coalesce(cd_categoria_p,'0')
	and	coalesce(cd_plano,coalesce(cd_plano_p,'0'))		=	coalesce(cd_plano_p,'0')
	and	coalesce(nr_seq_classificacao,coalesce(nr_seq_classificacao_w,0)) = coalesce(nr_seq_classificacao_w,0)
	and	((nr_idade_w < coalesce(qt_idade_menores,-1)) or (nr_idade_w > coalesce(qt_idade_maiores,999)))
	and	coalesce(cd_estabelecimento,1) = coalesce(wheb_usuario_pck.get_cd_estabelecimento,1)
	and	coalesce(ie_tipo_atendimento,coalesce(ie_tipo_atendimento_w,0)) = coalesce(ie_tipo_atendimento_w,0)
	order by nr_sequencia;

c02 CURSOR FOR
	SELECT	qt_acompanhantes,
		qt_dieta_acomp,
		ie_lib_dieta,
		nr_seq_regra_acomp
	from	regra_dieta_acomp
	where	cd_convenio					=	cd_convenio_p
	and	coalesce(cd_categoria,coalesce(cd_categoria_p,'0'))	=	coalesce(cd_categoria_p,'0')
	and	coalesce(cd_plano,coalesce(cd_plano_p,'0'))		=	coalesce(cd_plano_p,'0')
	and	coalesce(nr_seq_classificacao,coalesce(nr_seq_classificacao_w,0)) = coalesce(nr_seq_classificacao_w,0)
	and	nr_idade_w between qt_idade_de and  qt_idade_ate
	and	coalesce(cd_estabelecimento,1) = coalesce(wheb_usuario_pck.get_cd_estabelecimento,1)
	and	coalesce(ie_tipo_atendimento,coalesce(ie_tipo_atendimento_w,0)) = coalesce(ie_tipo_atendimento_w,0)
	order by nr_sequencia;


BEGIN
if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	select	obter_idade_pf(cd_pessoa_fisica_p, clock_timestamp(), 'A')
	into STRICT	nr_idade_w
	;
end if;



if (coalesce(nr_atendimento_p,0) > 0) then

	select	max(nr_seq_classificacao),
			max(ie_tipo_atendimento)
	into STRICT	nr_seq_classificacao_w,
			ie_tipo_atendimento_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;

end if;

if (cd_convenio_p IS NOT NULL AND cd_convenio_p::text <> '') and (cd_categoria_p IS NOT NULL AND cd_categoria_p::text <> '') then
	select	coalesce(max(qt_idade_menores),-1),
		coalesce(max(qt_idade_maiores),999),
		max(nr_seq_regra_acomp)
	into STRICT	qt_idade_menores_w,
		qt_idade_maiores_w,
		nr_seq_regra_acomp_p
	from	categoria_convenio
	where	cd_convenio	= cd_convenio_p
	and	cd_categoria	= cd_categoria_p;

	if (qt_idade_menores_w <> -1) or (qt_idade_maiores_w <> 999) then
		select	max(b.nr_acompanhante),
			max(b.qt_dieta_acomp),
			max(b.ie_lib_dieta),
		max(b.nr_seq_regra_acomp)
		into STRICT	nr_acompanhante_p,
			qt_dieta_acomp_p,
			ie_lib_dieta_p,
		nr_seq_regra_acomp_p
		from	convenio a,
			categoria_convenio b
		where	a.cd_convenio	= b.cd_convenio
		and	a.cd_convenio	= cd_convenio_p
		and	b.cd_categoria	= cd_categoria_p
		and	((nr_idade_w < qt_idade_menores_w) or (nr_idade_w > qt_idade_maiores_w));
	else
		select	max(b.nr_acompanhante),
			max(b.qt_dieta_acomp),
			max(b.ie_lib_dieta),
		max(b.nr_seq_regra_acomp)
		into STRICT	nr_acompanhante_p,
			qt_dieta_acomp_p,
			ie_lib_dieta_p,
		nr_seq_regra_acomp_p
		from	convenio a,
			categoria_convenio b
		where	a.cd_convenio	= b.cd_convenio
		and	a.cd_convenio	= cd_convenio_p
		and	b.cd_categoria	= cd_categoria_p;
	end if;

end if;

select	count(*)
into STRICT	qt_registro_w
from	regra_dieta_acomp
where	cd_convenio	=	cd_convenio_p
and	coalesce(cd_estabelecimento,1) = coalesce(wheb_usuario_pck.get_cd_estabelecimento,1);

if (qt_registro_w > 0) then
	begin

	select	count(*)
	into STRICT	qt_registro_ww
	from	regra_dieta_acomp
	where	cd_convenio	=	cd_convenio_p
	and	coalesce(cd_estabelecimento,1) = coalesce(wheb_usuario_pck.get_cd_estabelecimento,1);

	if (qt_registro_ww > 0) then
		OPEN C01;
		LOOP
		FETCH C01 into
			qt_acompanhantes_w,
			qt_dieta_acomp_w,
			ie_lib_diet_w,
			nr_seq_regra_acomp_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			nr_acompanhante_p	:= qt_acompanhantes_w;
			qt_dieta_acomp_p	:= qt_dieta_acomp_w;
			ie_lib_dieta_p		:= ie_lib_diet_w;
			nr_seq_regra_acomp_p	:= nr_seq_regra_acomp_w;
			end;
		END LOOP;
		CLOSE C01;
	end if;


	select	count(*)
	into STRICT	qt_registro_www
	from	regra_dieta_acomp
	where	cd_convenio	=	cd_convenio_p
	and	coalesce(cd_estabelecimento,1) = coalesce(wheb_usuario_pck.get_cd_estabelecimento,1);


	if (qt_registro_www > 0) then
		OPEN C02;
		LOOP
		FETCH C02 into
			qt_acompanhantes_w,
			qt_dieta_acomp_w,
			ie_lib_diet_w,
			nr_seq_regra_acomp_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			nr_acompanhante_p	:= qt_acompanhantes_w;
			qt_dieta_acomp_p	:= qt_dieta_acomp_w;
			ie_lib_dieta_p		:= ie_lib_diet_w;
			nr_seq_regra_acomp_p	:= nr_seq_regra_acomp_w;
			end;
		END LOOP;
		CLOSE C02;
	end if;

	end;
end if;

END	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_dados_dieta_categ_conv (cd_convenio_p bigint, cd_categoria_p text, cd_plano_p text, cd_pessoa_fisica_p text, nr_acompanhante_p INOUT bigint, qt_dieta_acomp_p INOUT bigint, ie_lib_dieta_p INOUT text, nr_seq_regra_acomp_p INOUT bigint, nr_atendimento_p bigint) FROM PUBLIC;

