-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE mxm_gerar_ctb_movimento ( nr_lote_contabil_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_empresa_p text, dt_movimento_p timestamp, cd_centro_custo_p text, cd_conta_contabil_credito_p text, cd_conta_contabil_debito_p text, vl_movimento_p bigint, nr_seq_agrupamento_p bigint, ds_observacao_p text) AS $body$
DECLARE


cd_centro_custo_w	integer;
cd_conta_contabil_credito_w	varchar(20);
cd_conta_contabil_debito_w	varchar(20);
cd_empresa_w		smallint;
nr_seq_mes_ref_w	bigint;
nr_seq_movto_w		bigint;
qt_registros_w		bigint;
nr_seq_agrupamento_w	ctb_movimento.nr_seq_agrupamento%type;
ds_observacao_w		varchar(4000);

BEGIN

select	nr_seq_mes_ref
into STRICT	nr_seq_mes_ref_w
from	lote_contabil
where	nr_lote_contabil	= nr_lote_contabil_p;

select	(max(a.cd_interno))::numeric
into STRICT	cd_centro_custo_w
from	conversao_meio_externo a
where	a.cd_externo	= cd_centro_custo_p
and	a.nm_atributo	= 'CD_CENTRO_CUSTO'
and	a.nm_tabela	= 'CENTRO_CUSTO';

if (cd_conta_contabil_credito_p <> '0')then
	select	substr(max(a.cd_interno),1,20)
	into STRICT	cd_conta_contabil_credito_w
	from	conversao_meio_externo a
	where	a.cd_externo	= cd_conta_contabil_credito_p
	and	a.nm_atributo	= 'CD_CONTA_CONTABIL'
	and	a.nm_tabela	= 'CONTA_CONTABIL';
	if (coalesce(cd_conta_contabil_credito_w::text, '') = '') then
		select max(cd_conta_contabil)
		into STRICT cd_conta_contabil_credito_w
		from conta_contabil
		where replace(cd_classificacao, '.', null) = replace(cd_conta_contabil_credito_p,'.', null);
	end if;
else
	select	substr(max(a.cd_interno),1,20)
	into STRICT	cd_conta_contabil_debito_w
	from	conversao_meio_externo a
	where	a.cd_externo	= cd_conta_contabil_debito_p
	and	a.nm_atributo	= 'CD_CONTA_CONTABIL'
	and	a.nm_tabela	= 'CONTA_CONTABIL';
	if (coalesce(cd_conta_contabil_debito_w::text, '') = '') then
		select max(cd_conta_contabil)
		into STRICT cd_conta_contabil_debito_w
		from conta_contabil
		where replace(cd_classificacao, '.', null) = replace(cd_conta_contabil_debito_p,'.', null);
	end if;
end if;

select	max(a.cd_interno)
into STRICT	cd_empresa_w
from	conversao_meio_externo a
where	a.cd_externo	= cd_empresa_p
and	a.nm_atributo	= 'CD_EMPRESA'
and	a.nm_tabela	= 'EMPRESA';

select	max(a.cd_interno)
into STRICT	nr_seq_agrupamento_w
from	conversao_meio_externo a
where	a.cd_externo	=  nr_seq_agrupamento_p
and	a.nm_atributo	= 'NR_SEQ_AGRUPAMENTO'
and	a.nm_tabela	= 'MOVIMENTO_CONTABIL';

if (coalesce(nr_seq_agrupamento_w::text, '') = '') then
	nr_seq_agrupamento_w := nr_seq_agrupamento_p;
end if;

select	max(a.cd_interno)
into STRICT	ds_observacao_w
from	conversao_meio_externo a
where	a.cd_externo	= ds_observacao_p
and	a.nm_atributo	= 'DS_OBSERVACAO'
and	a.nm_tabela	= 'MOVIMENTO_CONTABIL';

if (coalesce(ds_observacao_w::text, '') = '') then
	ds_observacao_w := ds_observacao_p;
end if;

select	count(*)
into STRICT	qt_registros_w
from	ctb_movimento
where	nr_lote_contabil = nr_lote_contabil_p
and	((cd_conta_debito = cd_conta_contabil_debito_w and coalesce(cd_conta_credito::text, '') = '')
or (cd_conta_credito = cd_conta_contabil_credito_w and coalesce(cd_conta_debito::text, '') = ''));

if (coalesce(ds_observacao_w::text, '') = '')then
	ds_observacao_w	:= ds_observacao_p;
end if;

if (coalesce(cd_centro_custo_w::text, '') = '')then
	select max(cd_centro_custo)
	into STRICT cd_centro_custo_w
	from centro_custo
	where replace(cd_classificacao, '.', null) = replace(cd_centro_custo_p,'.', null);
end if;

if (qt_registros_w = 0) then

	select	nextval('ctb_movimento_seq')
	into STRICT	nr_seq_movto_w
	;

	insert	into ctb_movimento(	nr_sequencia,
						nr_lote_contabil,
						nr_seq_mes_ref,
						dt_movimento,
						vl_movimento,
						dt_atualizacao,
						nm_usuario,
						cd_historico,
						ie_revisado,
						cd_conta_debito,
						cd_conta_credito,
						cd_estabelecimento,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_agrupamento,
						ds_observacao)
				values (	nr_seq_movto_w,
						nr_lote_contabil_p,
						nr_seq_mes_ref_w,
						trunc(dt_movimento_p,'dd'),
						vl_movimento_p,
						clock_timestamp(),
						nm_usuario_p,
						39,
						'N',
						cd_conta_contabil_debito_w,
						cd_conta_contabil_credito_w,
						cd_estabelecimento_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_agrupamento_w,
						ds_observacao_w);

	insert into ctb_movto_centro_custo(	nr_sequencia,
							nr_seq_movimento,
							cd_centro_custo,
							dt_atualizacao,
							nm_usuario,
							vl_movimento,
							pr_rateio)
					values (	nextval('ctb_movto_centro_custo_seq'),
							nr_seq_movto_w,
							cd_centro_custo_w,
							clock_timestamp(),
							nm_usuario_p,
							vl_movimento_p,
							100);
else
	select	max(nr_sequencia)
	into STRICT	nr_seq_movto_w
	from	ctb_movimento
	where	nr_lote_contabil = nr_lote_contabil_p
	and	cd_conta_debito = cd_conta_contabil_debito_w
	or  cd_conta_credito = cd_conta_contabil_credito_w;

	update	ctb_movimento
	set	vl_movimento = vl_movimento + vl_movimento_p
	where	nr_lote_contabil = nr_lote_contabil_p
	and	cd_conta_debito = cd_conta_contabil_debito_w
	or  cd_conta_credito = cd_conta_contabil_credito_w;

	select	count(*)
	into STRICT	qt_registros_w
	from	ctb_movto_centro_custo
	where	nr_seq_movimento = nr_seq_movto_w
	and	cd_centro_custo = cd_centro_custo_w;

	if (qt_registros_w = 0) then

		insert into ctb_movto_centro_custo(	nr_sequencia,
								nr_seq_movimento,
								cd_centro_custo,
								dt_atualizacao,
								nm_usuario,
								vl_movimento,
								pr_rateio)
							values (	nextval('ctb_movto_centro_custo_seq'),
								nr_seq_movto_w,
								cd_centro_custo_w,
								clock_timestamp(),
								nm_usuario_p,
								vl_movimento_p,
								100);
	else

		update	ctb_movto_centro_custo
		set	vl_movimento = vl_movimento + vl_movimento_p
		where	nr_seq_movimento = nr_seq_movto_w
		and	cd_centro_custo = cd_centro_custo_w;

	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mxm_gerar_ctb_movimento ( nr_lote_contabil_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_empresa_p text, dt_movimento_p timestamp, cd_centro_custo_p text, cd_conta_contabil_credito_p text, cd_conta_contabil_debito_p text, vl_movimento_p bigint, nr_seq_agrupamento_p bigint, ds_observacao_p text) FROM PUBLIC;

