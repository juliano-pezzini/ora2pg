-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_inicio_fim_triagem ( nr_atendimento_p bigint, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE


/*
Iniciar triagem enfermagem		I
Finalizar triagem enfermagem	F
Desfazer inicio triagem			DI
*/
										
										
qt_inicio_triagem_w   	bigint;	
qt_fim_triagem_w   		bigint;									
ie_obrigar_hist_saude_w	varchar(1);
										

BEGIN

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (nr_atendimento_p > 0) then	

	if (ie_opcao_p = 'I') then
	
		update 	atendimento_paciente
		set  	dt_inicio_atendimento = clock_timestamp(), 
			nm_usuario_triagem = nm_usuario_p
        		where 	nr_atendimento = nr_atendimento_p;
		
		commit;
		
		select 	count(*)
		into STRICT	qt_inicio_triagem_w
		from 	triagem_pronto_atend 
		where 	nr_atendimento = nr_atendimento_p 
		and 	coalesce(dt_inicio_triagem::text, '') = '';
	
		if (qt_inicio_triagem_w > 0 ) then
		
			update triagem_pronto_atend
			set    dt_inicio_triagem = clock_timestamp()
			where  nr_atendimento = nr_atendimento_p
			and    coalesce(dt_inicio_triagem::text, '') = '';		
			
		end if;	
		
	elsif (ie_opcao_p  = 'DI') then
	
		update 	atendimento_paciente
		set  	dt_inicio_atendimento  = NULL, 
			nm_usuario_triagem  = NULL
        		where 	nr_atendimento = nr_atendimento_p;
		
		commit;
		
		select 	count(*)
		into STRICT	qt_inicio_triagem_w
		from 	triagem_pronto_atend 
		where 	nr_atendimento = nr_atendimento_p 
		and 	(dt_inicio_triagem IS NOT NULL AND dt_inicio_triagem::text <> '');
	
		if (qt_inicio_triagem_w > 0 ) then
		
			update triagem_pronto_atend
			set    dt_inicio_triagem  = NULL
			where  nr_atendimento = nr_atendimento_p
			and    (dt_inicio_triagem IS NOT NULL AND dt_inicio_triagem::text <> '');		
			
		end if;	
		
	
	else
	
		ie_obrigar_hist_saude_w := substr(coalesce(obter_valor_param_usuario(96, 89, Obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo), 'N'), 1, 1);
		
		if (ie_obrigar_hist_saude_w = 'S') then
			begin
		   	CALL perm_enc_atend_enf_hist_saude(nr_atendimento_p);
		   	end;
		end if;
		
		update 	atendimento_paciente
		set 	dt_fim_triagem = clock_timestamp(),
			dt_chamada_paciente  = NULL,
			nm_fim_triagem = nm_usuario_p
		where 	nr_atendimento = nr_atendimento_p;
		
		commit;
		
		select 	count(*)
		into STRICT	qt_fim_triagem_w
		from 	triagem_pronto_atend 
		where 	nr_atendimento = nr_atendimento_p 
		and 	coalesce(dt_fim_triagem::text, '') = '';
		
		if (qt_fim_triagem_w > 0 ) then
		
			update 	triagem_pronto_atend
			set    	dt_fim_triagem = clock_timestamp(),
				ie_status_paciente = 'A'
			where  	nr_atendimento = nr_atendimento_p
			and    	coalesce(dt_fim_triagem::text, '') = '';		
			
		end if;
	
	end if;		

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_inicio_fim_triagem ( nr_atendimento_p bigint, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

