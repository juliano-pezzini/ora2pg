-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lote_ent_exames_barras_bloq ( nr_seq_lote_p bigint, ds_lista_exames_p text, nm_usuario_p text, nr_seq_motivo_bloq_p bigint, ie_status_atend_p bigint default null, cd_barras_ficha_p text default null) AS $body$
DECLARE


nr_seq_prescr_bloq_w			bigint;
nr_prescricao_bloq_w			bigint;
nr_prescricao_w					bigint;
nr_seq_prescr_w					bigint;
ie_status_atend_bloq_w			varchar(10);
ie_status_atend_w				varchar(10);
ie_novo_status_w				varchar(10);
ds_lista_parametro_w			varchar(255);

C01 CURSOR FOR
	SELECT	DISTINCT
			c.nr_prescricao,
			c.nr_sequencia
	FROM	prescr_procedimento c,
			lote_ent_sec_ficha_exam a,
			lote_ent_sec_ficha b
	WHERE	a.nr_seq_exame = c.nr_seq_exame
	AND		b.nr_sequencia = a.nr_seq_ficha
	AND		b.nr_prescricao = c.nr_prescricao
	AND		(	(b.nr_seq_lote_sec = nr_seq_lote_p and coalesce(cd_barras_ficha_p::text, '') = '')
				or (b.cd_barras = cd_barras_ficha_p))
	AND		obter_se_contido(c.nr_seq_exame,ds_lista_exames_p) <> 'S'
	AND		c.ie_status_atend = coalesce(ie_status_atend_p,c.ie_status_atend)
	and		c.ie_status_atend < 30
	order by 1;

C02 CURSOR FOR
	SELECT	DISTINCT
			c.nr_prescricao,
			c.nr_sequencia
	FROM	prescr_procedimento c,
			lote_ent_sec_ficha_exam a,
			lote_ent_sec_ficha b
	WHERE	a.nr_seq_exame = c.nr_seq_exame
	AND		b.nr_sequencia = a.nr_seq_ficha
	AND		b.nr_prescricao = c.nr_prescricao
	AND		(	(b.nr_seq_lote_sec = nr_seq_lote_p and coalesce(cd_barras_ficha_p::text, '') = '')
				or (b.cd_barras = cd_barras_ficha_p))
	AND		obter_se_contido(c.nr_seq_exame,ds_lista_exames_p) = 'S'
	AND		c.ie_status_atend = coalesce(ie_status_atend_p,c.ie_status_atend)
	and		c.ie_status_atend < 30
	order by 1;


BEGIN

ds_lista_parametro_w := obter_param_usuario(722, 2, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ds_lista_parametro_w);

open C01;
loop
fetch C01 into
	nr_prescricao_bloq_w,
	nr_seq_prescr_bloq_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (nr_prescricao_bloq_w IS NOT NULL AND nr_prescricao_bloq_w::text <> '') and (nr_seq_prescr_bloq_w IS NOT NULL AND nr_seq_prescr_bloq_w::text <> '') then

		UPDATE	prescr_procedimento
		SET		nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp(),
				ie_exame_bloqueado = 'S',
				nr_seq_motivo_bloqueio = nr_seq_motivo_bloq_p
		WHERE	nr_prescricao	= nr_prescricao_bloq_w
		and		nr_sequencia = nr_seq_prescr_bloq_w;

	end if;

	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	nr_prescricao_w,
	nr_seq_prescr_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	select	coalesce(max(ie_status_atend),10)
	into STRICT	ie_status_atend_w
	from	prescr_procedimento
	where	nr_prescricao = nr_prescricao_w
	and		nr_sequencia = nr_seq_prescr_w;

	SELECT	SUBSTR((ds_lista_parametro_w),(position(ie_status_atend_w in ds_lista_parametro_w)+3),2)
	into STRICT	ie_novo_status_w
	;

	if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') and (nr_seq_prescr_w IS NOT NULL AND nr_seq_prescr_w::text <> '') then

		UPDATE	prescr_procedimento
		SET		ie_status_atend	= ie_novo_status_w,
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp()
		WHERE	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia = nr_seq_prescr_w
		AND		ie_status_atend	< ie_novo_status_w;

	end if;

	end;
end loop;
close C02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lote_ent_exames_barras_bloq ( nr_seq_lote_p bigint, ds_lista_exames_p text, nm_usuario_p text, nr_seq_motivo_bloq_p bigint, ie_status_atend_p bigint default null, cd_barras_ficha_p text default null) FROM PUBLIC;

