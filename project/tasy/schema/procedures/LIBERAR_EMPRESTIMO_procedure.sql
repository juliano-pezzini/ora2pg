-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_emprestimo ( nr_emprestimo_p bigint, nm_usuario_p text, ie_commit_p text default 'S') AS $body$
DECLARE

		
nr_seq_regra_w		double precision;	
ds_titulo_w		varchar(255);
ds_comunicado_w		varchar(4000);
cd_perfil_w		integer;
nr_seq_classif_w		bigint;
ie_ci_lida_w		varchar(1);
nm_usuario_destino_w	varchar(255);
nr_seq_comunic_w		bigint;
cd_material_inv_w		integer;
ie_consiste_inv_w		varchar(1);
cd_estabelecimento_w	smallint := wheb_usuario_pck.get_cd_estabelecimento;
cd_material_inativo_w	bigint;
/* se tiver setor na regra, envia ci para os setores */

ds_setor_adicional_w             varchar(2000) := '';
/* campos da regra usuario da regra */

cd_setor_regra_usuario_w	integer;

cd_material_w			integer;
ds_material_w			material.ds_material%type;
cd_material_estoque_w		integer;
dt_mesano_referencia_w		timestamp := pkg_date_utils.start_of(clock_timestamp(), 'MONTH', 0);
ie_consignado_w			varchar(1);
ie_material_estoque_w		varchar(1);
cd_local_estoque_w		integer;
qt_reg_saldo_w			integer;
ds_lista_materiais_w		varchar(4000);
dt_liberacao_w			emprestimo.dt_liberacao%type;
ie_disp_emprestimo_lib_w		parametro_estoque.ie_disp_emprestimo_lib%type;
ie_tipo_w				emprestimo.ie_tipo%type;
ie_origem_w			emprestimo.ie_origem%type;
nr_emprestimo_saida_lib_w 		emprestimo.nr_emprestimo%type;	
qt_existe_saida_lib_w		integer;
nr_seq_lote_w			bigint;
qt_material_w			double precision;
ie_erro_w				varchar(255);
ie_acao_w			varchar(1);
ie_estoque_lote_w			varchar(1);
ie_atualizou_lote_w			varchar(1);
ie_gerar_w			varchar(1);
ie_quantidade_w			varchar(15);
ie_desdobrado_w			varchar(1);
cd_material_ww			emprestimo_material.cd_material%type;
nr_seq_lote_ww			emprestimo_material.nr_seq_lote%type;
qt_material_ww			emprestimo_material.qt_material%type;

c05 CURSOR FOR
SELECT	coalesce(a.cd_setor_atendimento,0) cd_setor_atendimento
from	regra_envio_comunic_usu a
where	a.nr_seq_evento = nr_seq_regra_w;

c01 CURSOR FOR
SELECT	cd_material,
	substr(obter_desc_material(cd_material),1,255),
	nr_seq_lote,
	qt_material
from	emprestimo_material
where	nr_emprestimo = nr_emprestimo_p;

C02 CURSOR FOR
SELECT	b.cd_material_estoque,
	a.nr_sequencia,
	a.qt_material
from	material_lote_fornec a,
	material b
where	a.cd_material = b.cd_material
and	a.cd_material = cd_material_w
and	a.nr_emprestimo = nr_emprestimo_p;


BEGIN

select	max(ie_disp_emprestimo_lib)
into STRICT	ie_disp_emprestimo_lib_w
from	parametro_estoque
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

select	dt_liberacao,
	ie_tipo,
	coalesce(ie_origem,'D')
into STRICT	dt_liberacao_w,
	ie_tipo_w,
	ie_origem_w
from	emprestimo
where	nr_emprestimo = nr_emprestimo_p;

if (coalesce(dt_liberacao_w::text, '') = '') then
	begin
	ie_consiste_inv_w := obter_param_usuario(143, 232, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consiste_inv_w);

	if (ie_consiste_inv_w = 'S') then
		begin
		select	coalesce(max(cd_material),0)
		into STRICT	cd_material_inv_w
		from	emprestimo a,
			emprestimo_material b
		where	a.nr_emprestimo = b.nr_emprestimo
		and	a.nr_emprestimo = nr_emprestimo_p
		and	substr(obter_se_material_bloqueio_inv(a.cd_estabelecimento, b.cd_material, a.cd_local_estoque),1,1) = 'S';

		if (cd_material_inv_w > 0) then		
			CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(262292,'CD_MATERIAL_W='||cd_material_inv_w);		
		end if;
		end;
	end if;

	select	coalesce(max(c.cd_material),0)
	into STRICT	cd_material_inativo_w
	from	emprestimo a,
		emprestimo_material b,
		material c
	where	a.nr_emprestimo = b.nr_emprestimo
	and	a.nr_emprestimo = nr_emprestimo_p
	and	b.cd_material = c.cd_material
	and	c.ie_situacao = 'I';

	if (cd_material_inativo_w > 0) then
		CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(262300,'CD_MATERIAL_W='||cd_material_inativo_w);
	end if;

	if (ie_origem_w = 'P') then
		
		select	count(*)
		into STRICT	qt_existe_saida_lib_w
		from  	emprestimo
		where 	nr_emprestimo_ref = nr_emprestimo_p
		and   	ie_tipo = 'S'
		and	coalesce(dt_liberacao::text, '') = '';
		
		if (qt_existe_saida_lib_w > 0) then
		
			select	nr_emprestimo
			into STRICT	nr_emprestimo_saida_lib_w
			from  	emprestimo
			where 	nr_emprestimo_ref = nr_emprestimo_p
			and   	ie_tipo = 'S'
			and	  	coalesce(dt_liberacao::text, '') = '';
			
			CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(313245,'NR_EMPRESTIMO_W='||nr_emprestimo_saida_lib_w);						
		end if;

	end if;
	
	select	cd_estabelecimento,
		cd_local_estoque
	into STRICT	cd_estabelecimento_w,
		cd_local_estoque_w
	from	emprestimo
	where	nr_emprestimo = nr_emprestimo_p;

	open c01;
	loop
	fetch c01 into	
		cd_material_w,
		ds_material_w,
		nr_seq_lote_w,
		qt_material_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		select	ie_consignado,
			cd_material_estoque
		into STRICT	ie_consignado_w,
			cd_material_estoque_w
		from	material
		where	cd_material = cd_material_w;
		
		ie_material_estoque_w	:= substr(obter_se_material_estoque(cd_estabelecimento_w, 0, cd_material_w),1,1);
		ie_estoque_lote_w	:= substr(obter_se_material_estoque_lote(cd_estabelecimento_w, cd_material_w),1,1);
		
		ds_lista_materiais_w := substr(ds_lista_materiais_w || cd_material_w || ' - ' || ds_material_w || chr(13) || chr(10),1,4000);
		
		if (ie_material_estoque_w	= 'S') and (ie_consignado_w <> '1') then
			begin	
			select	count(*)
			into STRICT	qt_reg_saldo_w
			from	saldo_estoque
			where	dt_mesano_referencia	= dt_mesano_referencia_w
			and	cd_estabelecimento	= cd_estabelecimento_w
			and	cd_local_estoque	= cd_local_estoque_w
			and	cd_material	= cd_material_estoque_w;
			
			if (qt_reg_saldo_w = 0) then
				begin
				insert into saldo_estoque(
					cd_estabelecimento, cd_local_estoque, cd_material,
					dt_mesano_referencia, qt_estoque, vl_estoque,
					qt_reservada_requisicao, qt_reservada, dt_atualizacao,
					nm_usuario, vl_custo_medio, vl_preco_ult_compra,
					dt_ult_compra, ie_status_valorizacao, ie_bloqueio_inventario)
				values (	cd_estabelecimento_w, cd_local_estoque_w, cd_material_estoque_w,
					dt_mesano_referencia_w, 0, 0,
					0, 0, clock_timestamp(),
					nm_usuario_p, 0, 0,
					null, 'N', 'N');
				end;
			end if;
			end;
		end if;
				
		/*Emprestimo de saida, ou emprestimo de entrada quando ja gerou o lote*/

		if (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') and (ie_disp_emprestimo_lib_w = 'S') and (ie_estoque_lote_w = 'S') then
			if (ie_tipo_w = 'E') then
				ie_acao_w	:=	'1';
			else
				ie_acao_w	:=	'2';
			end if;
			
			ie_atualizou_lote_w	:=	'N';
			
			SELECT * FROM obter_regra_empr_lote_fornec(	
				cd_material_w, cd_estabelecimento_w, ie_gerar_w, ie_quantidade_w, ie_desdobrado_w) INTO STRICT ie_gerar_w, ie_quantidade_w, ie_desdobrado_w;
				
			if (ie_desdobrado_w = 'S') then
				open C02;
				loop
				fetch C02 into	
					cd_material_ww,
					nr_seq_lote_ww,
					qt_material_ww;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin	
					ie_erro_w := atualizar_saldo_lote(
						cd_estabelecimento_w, cd_local_estoque_w, cd_material_ww, trunc(clock_timestamp(),'mm'), nr_seq_lote_ww, 0, qt_material_ww, ie_acao_w, nm_usuario_p, ie_erro_w);
					
					ie_atualizou_lote_w	:=	'S';
					end;
				end loop;
				close C02;
			end if;
			
			if (ie_atualizou_lote_w = 'N') then
				ie_erro_w := atualizar_saldo_lote(
					cd_estabelecimento_w, cd_local_estoque_w, cd_material_estoque_w, dt_mesano_referencia_w, nr_seq_lote_w, 0, qt_material_w, ie_acao_w, nm_usuario_p, ie_erro_w);
			end if;
		end if;
		end;
	end loop;
	close c01;

	if (ie_tipo_w = 'E') and (ie_disp_emprestimo_lib_w = 'S') then
		CALL gerar_lotes_estoque_lote(nr_emprestimo_p, nm_usuario_p, ie_commit_p);
	end if;

	update	emprestimo
	set	dt_liberacao = clock_timestamp()
	where	nr_emprestimo = nr_emprestimo_p;
	
	if (ie_origem_w = 'P') then  --Exclusivo PCS
	
		update	emprestimo
		set	dt_aprovacao = clock_timestamp()
		where	nr_emprestimo_ref = nr_emprestimo_p
		and 	ie_tipo = 'E';

	end if;		

	select	coalesce(max(b.nr_sequencia), 0)
	into STRICT	nr_seq_regra_w
	from	regra_envio_comunic_compra a,
		regra_envio_comunic_evento b
	where	a.nr_sequencia = b.nr_seq_regra
	and	a.cd_funcao = 143
	and	b.cd_evento = 38
	and	b.ie_situacao = 'A'
	and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,0,'X',obter_perfil_ativo,nm_usuario_p,null),1,1) = 'S';

	if (nr_seq_regra_w > 0) then
		begin

		open c05;
		loop
		fetch c05 into	
			cd_setor_regra_usuario_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
			begin
			if (cd_setor_regra_usuario_w <> 0) and (obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N') then
				ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
			end if;
			end;
		end loop;
		close c05;

		select	max(substr(ds_titulo,1,80)),
			max(substr(ds_comunicacao,1,4000)) ds_comunicacao,
			coalesce(max(cd_perfil),0),
			nm_usuarios_adic,
			coalesce(ie_ci_lida,'N')
		into STRICT	ds_titulo_w,
			ds_comunicado_w,
			cd_perfil_w,
			nm_usuario_destino_w,
			ie_ci_lida_w
		from	regra_envio_comunic_evento
		where	nr_sequencia = nr_seq_regra_w
		group by nm_usuarios_adic,ie_ci_lida;

		ds_comunicado_w := substr(replace_macro(ds_comunicado_w,'@nr_emprestimo', 	nr_emprestimo_p),1,4000);
		ds_comunicado_w := substr(replace_macro(ds_comunicado_w,'@materiais', 		ds_lista_materiais_w),1,4000);
		ds_comunicado_w := substr(replace_macro(ds_comunicado_w,'@tipo', 			substr(obter_valor_dominio(115, ie_tipo_w),1,255)),1,4000);
	
		if (nm_usuario_destino_w IS NOT NULL AND nm_usuario_destino_w::text <> '') then
			begin
			select	obter_classif_comunic('F')
			into STRICT	nr_seq_classif_w
			;	
				
			select	nextval('comunic_interna_seq')
			into STRICT	nr_seq_comunic_w
			;		
			
			insert into comunic_interna(
				dt_comunicado,
				ds_titulo,
				ds_comunicado,
				nm_usuario,
				dt_atualizacao,
				ie_geral,
				nm_usuario_destino,
				nr_sequencia,
				ie_gerencial,
				nr_seq_classif,
				dt_liberacao,
				ds_perfil_adicional,
				ds_setor_adicional)
			values (	clock_timestamp(),
				ds_titulo_w,
				ds_comunicado_w,
				nm_usuario_p,
				clock_timestamp(),
				'N',
				nm_usuario_destino_w,
				nr_seq_comunic_w,
				'N',
				nr_seq_classif_w,
				clock_timestamp(),
				cd_perfil_w,
				ds_setor_adicional_w);

			if (ie_ci_lida_w = 'S') then
				insert into comunic_interna_lida(nr_sequencia,nm_usuario,dt_atualizacao)values (nr_seq_comunic_w,nm_usuario_p,clock_timestamp());
			end if;
			end;
		end if;	
		end;
	end if;
	end;
end if;
	
if (ie_commit_p = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_emprestimo ( nr_emprestimo_p bigint, nm_usuario_p text, ie_commit_p text default 'S') FROM PUBLIC;

