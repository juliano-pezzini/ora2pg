-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_divergencia_contrato_nf ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE



nr_item_nf_w		integer;
qt_item_nf_w		double precision;
qt_total_nota_mes_w	double precision;
vl_total_item_nf_w		double precision;
vl_pagto_w		double precision;
nr_seq_regra_nf_w		bigint;
ie_tipo_consistencia_w	varchar(15);
vl_minimo_w		double precision;
vl_maximo_w		double precision;
ie_justificativa_w		varchar(01);
qt_regra_w		bigint;
pr_variacao_valor_w	real;
vl_total_nota_w		double precision;
vl_total_nota_mes_w	double precision;
nr_seq_contrato_w		bigint;
vl_unitario_item_w	nota_fiscal_item.vl_unitario_item_nf%type;
ie_quantidade_w		contrato_regra_nf.ie_quantidade%type;

/* ie_tipo_consistencia - Dom 2586
VL_ITEM		Valor do item na nota
VL_NF		Valor total da nota
VL_NF_MES	Valor total da nota no mês
QT_ITEM		Quantidade do item na nota
QT_NF_MES	Quantidade total de itens no mês
*/
C01 CURSOR FOR
SELECT	i.nr_item_nf,
	i.qt_item_nf,
	i.vl_total_item_nf,
	x.vl_pagto,
	x.nr_sequencia nr_seq_regra_nf,
	x.pr_variacao_valor,
	n.vl_total_nota,
	x.nr_seq_contrato,
	i.vl_unitario_item_nf,
	x.ie_quantidade
from	nota_fiscal n,
	nota_fiscal_item i,
	contrato_regra_nf x
where	n.nr_sequencia	= i.nr_sequencia
and	n.nr_sequencia	= nr_sequencia_p
and	i.nr_contrato	= x.nr_seq_contrato
and	i.cd_material	= x.cd_material;

C02 CURSOR FOR
SELECT	ie_tipo_consistencia,
	vl_minimo,
	vl_maximo,
	ie_justificativa
from	contrato_regra_nf_consist
where	nr_seq_regra_nf	= nr_seq_regra_nf_w;


BEGIN
select	count(*)
into STRICT	qt_regra_w
from	contrato_regra_nf_consist c,
	contrato_regra_nf x,
	nota_fiscal_item i
where	i.nr_sequencia		= nr_sequencia_p
and	i.nr_contrato		= x.nr_seq_contrato
and	c.nr_seq_regra_nf		= x.nr_sequencia
and	i.cd_material		= x.cd_material;

delete from DIVERG_CONTRATO_ITEM_NF
where	nr_seq_nf = nr_sequencia_p;

if (qt_regra_w > 0) then
	begin
	open C01;
	loop
	fetch C01 into
		nr_item_nf_w,
		qt_item_nf_w,
		vl_total_item_nf_w,
		vl_pagto_w,
		nr_seq_regra_nf_w,
		pr_variacao_valor_w,
		vl_total_nota_w,
		nr_seq_contrato_w,
		vl_unitario_item_w,
		ie_quantidade_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		open C02;
		loop
		fetch C02 into
			ie_tipo_consistencia_w,
			vl_minimo_w,
			vl_maximo_w,
			ie_justificativa_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			if (ie_tipo_consistencia_w = 'VL_ITEM') and (ie_quantidade_w = 'F') then
				if	((vl_total_item_nf_w < vl_minimo_w) or (vl_total_item_nf_w > vl_maximo_w)) then
					insert into diverg_contrato_item_nf(	nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											ie_tipo_consistencia,
											ie_situacao,
											nr_seq_nf,
											nr_seq_regra_contrato,
											nr_item_nf,
											ds_observacao,
											ie_justificativa)
										values (	nextval('diverg_contrato_item_nf_seq'),
											clock_timestamp(),
											nm_usuario_p,
											ie_tipo_consistencia_w,
											'A',
											nr_sequencia_p,
											nr_seq_regra_nf_w,
											nr_item_nf_w,
											wheb_mensagem_pck.get_texto(353320),
											ie_justificativa_w);
				end if;
			elsif (ie_tipo_consistencia_w = 'VL_ITEM') and (ie_quantidade_w = 'V') then
				if	((vl_unitario_item_w < vl_minimo_w) or (vl_unitario_item_w > vl_maximo_w)) then
					insert into diverg_contrato_item_nf(	nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											ie_tipo_consistencia,
											ie_situacao,
											nr_seq_nf,
											nr_seq_regra_contrato,
											nr_item_nf,
											ds_observacao,
											ie_justificativa)
										values (	nextval('diverg_contrato_item_nf_seq'),
											clock_timestamp(),
											nm_usuario_p,
											ie_tipo_consistencia_w,
											'A',
											nr_sequencia_p,
											nr_seq_regra_nf_w,
											nr_item_nf_w,
											wheb_mensagem_pck.get_texto(353321),
											ie_justificativa_w);
				end if;
			elsif (ie_tipo_consistencia_w = 'VL_NF') and
				((vl_total_nota_w < vl_minimo_w) or (vl_total_nota_w > vl_maximo_w)) then
				insert into diverg_contrato_item_nf(	nr_sequencia,
										dt_atualizacao,
										nm_usuario,
										ie_tipo_consistencia,
										ie_situacao,
										nr_seq_nf,
										nr_seq_regra_contrato,
										nr_item_nf,
										ds_observacao,
										ie_justificativa)
									values (	nextval('diverg_contrato_item_nf_seq'),
										clock_timestamp(),
										nm_usuario_p,
										ie_tipo_consistencia_w,
										'A',
										nr_sequencia_p,
										nr_seq_regra_nf_w,
										nr_item_nf_w,
										wheb_mensagem_pck.get_texto(353322),
										ie_justificativa_w);
			elsif (ie_tipo_consistencia_w = 'VL_NF_MES') then
				begin
				select	sum(i.vl_total_item_nf)
				into STRICT	vl_total_nota_mes_w
				from	nota_fiscal n,
					nota_fiscal_item i
				where	n.nr_sequencia	= i.nr_sequencia
				and	n.ie_situacao	= '1'
				and	i.nr_contrato	= nr_seq_contrato_w
				and	trunc(n.dt_emissao,'mm') = trunc(clock_timestamp(),'mm');

				if	((vl_total_nota_mes_w < vl_minimo_w) or (vl_total_nota_mes_w > vl_maximo_w)) then
					insert into diverg_contrato_item_nf(	nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											ie_tipo_consistencia,
											ie_situacao,
											nr_seq_nf,
											nr_seq_regra_contrato,
											nr_item_nf,
											ds_observacao,
											ie_justificativa)
										values (	nextval('diverg_contrato_item_nf_seq'),
											clock_timestamp(),
											nm_usuario_p,
											ie_tipo_consistencia_w,
											'A',
											nr_sequencia_p,
											nr_seq_regra_nf_w,
											nr_item_nf_w,
											wheb_mensagem_pck.get_texto(353323),
											ie_justificativa_w);
				end if;
				end;
			elsif (ie_tipo_consistencia_w = 'QT_ITEM') and
				((qt_item_nf_w < vl_minimo_w) or (qt_item_nf_w > vl_maximo_w)) then
				insert into diverg_contrato_item_nf(	nr_sequencia,
										dt_atualizacao,
										nm_usuario,
										ie_tipo_consistencia,
										ie_situacao,
										nr_seq_nf,
										nr_seq_regra_contrato,
										nr_item_nf,
										ds_observacao,
										ie_justificativa)
									values (	nextval('diverg_contrato_item_nf_seq'),
										clock_timestamp(),
										nm_usuario_p,
										ie_tipo_consistencia_w,
										'A',
										nr_sequencia_p,
										nr_seq_regra_nf_w,
										nr_item_nf_w,
										wheb_mensagem_pck.get_texto(353324),
										ie_justificativa_w);
			elsif (ie_tipo_consistencia_w = 'QT_NF_MES') then
				begin
				select	sum(i.qt_item_nf)
				into STRICT	qt_total_nota_mes_w
				from	nota_fiscal n,
					nota_fiscal_item i
				where	n.nr_sequencia	= i.nr_sequencia
				and	n.ie_situacao	= '1'
				and	i.nr_contrato	= nr_seq_contrato_w
				and	trunc(n.dt_emissao,'mm') = trunc(clock_timestamp(),'mm');

				if	((qt_total_nota_mes_w < vl_minimo_w) or (qt_total_nota_mes_w > vl_maximo_w)) then
					insert into diverg_contrato_item_nf(	nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											ie_tipo_consistencia,
											ie_situacao,
											nr_seq_nf,
											nr_seq_regra_contrato,
											nr_item_nf,
											ds_observacao,
											ie_justificativa)
										values (	nextval('diverg_contrato_item_nf_seq'),
											clock_timestamp(),
											nm_usuario_p,
											ie_tipo_consistencia_w,
											'A',
											nr_sequencia_p,
											nr_seq_regra_nf_w,
											nr_item_nf_w,
											wheb_mensagem_pck.get_texto(353325),
											ie_justificativa_w);
				end if;
				end;
			end if;
			end;
		end loop;
		close C02;
		end;
	end loop;
	close C01;

	commit;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_divergencia_contrato_nf ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

