-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_duplicar_tabela_tuss ( cd_edicao_amb_p edicao_amb.cd_edicao_amb%type, dt_vigencia_p timestamp, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_setar_data_fim_vig_p text) AS $body$
DECLARE

 
tb_cd_moeda_w			pls_util_cta_pck.t_number_table;
tb_cd_porte_cbhpm_w		pls_util_cta_pck.t_varchar2_table_10;
tb_cd_procedimento_w		pls_util_cta_pck.t_number_table;
tb_dt_final_vigencia_w		pls_util_cta_pck.t_date_table;
tb_dt_inicio_vigencia_w		pls_util_cta_pck.t_date_table;
tb_ie_origem_proced_w		pls_util_cta_pck.t_number_table;
tb_ie_situacao_w			pls_util_cta_pck.t_varchar2_table_10;
tb_nr_auxiliares_amb_w		pls_util_cta_pck.t_number_table;
tb_nr_auxiliares_cbhpm_w		pls_util_cta_pck.t_number_table;
tb_nr_porte_anest_amb_w		pls_util_cta_pck.t_number_table;
tb_nr_porte_anest_cbhpm_w		pls_util_cta_pck.t_number_table;
tb_qt_filme_amb_w			pls_util_cta_pck.t_number_table;
tb_qt_filme_cbhpm_w		pls_util_cta_pck.t_number_table;
tb_qt_incidencia_amb_w		pls_util_cta_pck.t_number_table;
tb_qt_incidencia_cbhpm_w		pls_util_cta_pck.t_number_table;
tb_qt_uco_w			pls_util_cta_pck.t_number_table;
tb_tx_porte_w			pls_util_cta_pck.t_number_table;
tb_vl_anestesista_w		pls_util_cta_pck.t_number_table;
tb_vl_auxiliares_w			pls_util_cta_pck.t_number_table;
tb_vl_custo_operacional_w		pls_util_cta_pck.t_number_table;
tb_vl_filme_w			pls_util_cta_pck.t_number_table;
tb_vl_medico_w			pls_util_cta_pck.t_number_table;
tb_vl_procedimento_w		pls_util_cta_pck.t_number_table;
cd_edicao_amb_nova_w		edicao_amb.cd_edicao_amb%type;

C01 CURSOR(	cd_edicao_amb_pc		edicao_amb.cd_edicao_amb%type) FOR 
	SELECT	cd_moeda, 
		cd_porte_cbhpm, 
		cd_procedimento, 
		dt_final_vigencia, 
		dt_inicio_vigencia, 
		ie_origem_proced, 
		ie_situacao, 
		nr_auxiliares_amb, 
		nr_auxiliares_cbhpm, 
		nr_porte_anest_amb, 
		nr_porte_anest_cbhpm, 
		qt_filme_amb, 
		qt_filme_cbhpm, 
		qt_incidencia_amb, 
		qt_incidencia_cbhpm, 
		qt_uco, 
		tx_porte, 
		vl_anestesista, 
		vl_auxiliares, 
		vl_custo_operacional, 
		vl_filme, 
		vl_medico, 
		vl_procedimento 
	from	preco_tuss 
	where	cd_edicao_amb = cd_edicao_amb_pc 
	and	dt_fim_vigencia_ref >= clock_timestamp();


BEGIN 
 
-- pega o menor código de edição que esteja livre (sem ser utilizado) 
select 	min(cd_edicao_amb) + 1 livre 
into STRICT	cd_edicao_amb_nova_w 
from  	edicao_amb 
where 	cd_edicao_amb + 1 not in (	SELECT cd_edicao_amb 
					from  edicao_amb);
 
insert into edicao_amb(	 
	cd_edicao_amb, 
	ds_edicao_amb, 
	dt_atualizacao, 
	dt_atualizacao_nrec, 
	ie_calculo_tuss, 
	ie_origem_proced, 
	ie_situacao, 
	ie_tipo_tabela, 
	nm_usuario, 
	nm_usuario_nrec, 
	nr_seq_tiss_tabela, 
	cd_estabelecimento) 
(SELECT	cd_edicao_amb_nova_w, 
	ds_edicao_amb, 
	clock_timestamp(), 
	clock_timestamp(), 
	ie_calculo_tuss, 
	ie_origem_proced, 
	ie_situacao, 
	ie_tipo_tabela, 
	nm_usuario_p, 
	nm_usuario_p, 
	nr_seq_tiss_tabela, 
	cd_estabelecimento 
from	edicao_amb 
where	cd_edicao_amb = cd_edicao_amb_p);
 
 
-- copia somente os registros que estão em vigência 
open C01(	cd_edicao_amb_p);
loop 
	fetch C01 bulk collect into 	tb_cd_moeda_w, tb_cd_porte_cbhpm_w, tb_cd_procedimento_w, 
					tb_dt_final_vigencia_w, tb_dt_inicio_vigencia_w, tb_ie_origem_proced_w, 
					tb_ie_situacao_w, tb_nr_auxiliares_amb_w, tb_nr_auxiliares_cbhpm_w, 
					tb_nr_porte_anest_amb_w, tb_nr_porte_anest_cbhpm_w, tb_qt_filme_amb_w, 
					tb_qt_filme_cbhpm_w, tb_qt_incidencia_amb_w, tb_qt_incidencia_cbhpm_w, 
					tb_qt_uco_w, tb_tx_porte_w, tb_vl_anestesista_w, 
					tb_vl_auxiliares_w, tb_vl_custo_operacional_w, tb_vl_filme_w, 
					tb_vl_medico_w, tb_vl_procedimento_w 
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_cd_moeda_w.count = 0;
 
	forall i in tb_cd_moeda_w.first..tb_cd_moeda_w.last 
		insert into preco_tuss( 
			cd_moeda, cd_porte_cbhpm, cd_procedimento, 
			dt_final_vigencia, dt_inicio_vigencia, ie_origem_proced, 
			ie_situacao, nr_auxiliares_amb, nr_auxiliares_cbhpm, 
			nr_porte_anest_amb, nr_porte_anest_cbhpm, qt_filme_amb, 
			qt_filme_cbhpm, qt_incidencia_amb, qt_incidencia_cbhpm, 
			qt_uco, tx_porte, vl_anestesista, 
			vl_auxiliares, vl_custo_operacional, vl_filme, 
			vl_medico, vl_procedimento, cd_edicao_amb, 
			dt_atualizacao, dt_atualizacao_nrec, nm_usuario, 
			nm_usuario_nrec, nr_sequencia 
		) values ( 
			tb_cd_moeda_w(i), tb_cd_porte_cbhpm_w(i), tb_cd_procedimento_w(i), 
			tb_dt_final_vigencia_w(i), coalesce(dt_vigencia_p, tb_dt_inicio_vigencia_w(i)), tb_ie_origem_proced_w(i), 
			tb_ie_situacao_w(i), tb_nr_auxiliares_amb_w(i), tb_nr_auxiliares_cbhpm_w(i), 
			tb_nr_porte_anest_amb_w(i), tb_nr_porte_anest_cbhpm_w(i), tb_qt_filme_amb_w(i), 
			tb_qt_filme_cbhpm_w(i), tb_qt_incidencia_amb_w(i), tb_qt_incidencia_cbhpm_w(i), 
			tb_qt_uco_w(i), tb_tx_porte_w(i), tb_vl_anestesista_w(i), 
			tb_vl_auxiliares_w(i), tb_vl_custo_operacional_w(i), tb_vl_filme_w(i), 
			tb_vl_medico_w(i), tb_vl_procedimento_w(i), cd_edicao_amb_nova_w, 
			clock_timestamp(), clock_timestamp(), nm_usuario_p, 
			nm_usuario_p, nextval('preco_tuss_seq') 
		);
	commit;
end loop;
close C01;
 
if ((coalesce(ie_setar_data_fim_vig_p,'N') = 'S') and (dt_vigencia_p IS NOT NULL AND dt_vigencia_p::text <> '')) then 
	update 	preco_tuss 
	set 	dt_final_vigencia = dt_vigencia_p - 1 
	where 	cd_edicao_amb = 	cd_edicao_amb_p 
	and 	coalesce(dt_final_vigencia::text, '') = '';
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_duplicar_tabela_tuss ( cd_edicao_amb_p edicao_amb.cd_edicao_amb%type, dt_vigencia_p timestamp, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_setar_data_fim_vig_p text) FROM PUBLIC;

