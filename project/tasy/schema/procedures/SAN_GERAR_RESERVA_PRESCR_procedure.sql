-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_gerar_reserva_prescr ( nr_prescricao_p bigint, ie_regra_p text, nm_usuario_p text) AS $body$
DECLARE


dt_programada_w		timestamp;
qt_procedimento_w	double precision;
cd_medico_w		varchar(10);
cd_pessoa_fisica_w	varchar(10);
cd_pf_realizou_w	varchar(10);
dt_prescricao_w		timestamp;
nr_atendimento_w	bigint;
nr_sequencia_w		bigint;
nr_seq_derivado_w	bigint;
qt_solic_w		bigint;
cd_convenio_w		integer;
nr_seq_item_w		smallint;
cd_estabelecimento_w	smallint;
ie_util_hemocomponente_w varchar(15);
ds_observacao_w		varchar(255);
qt_vol_hemocomp_w	bigint;
nr_seq_prescr_w		integer;
dt_prevista_w		timestamp;
ie_lavado_w		varchar(1);
ie_filtrado_w		varchar(1);
ie_aliquotado_w		varchar(1);
ie_irradiado_w		varchar(1);
nr_seq_entidade_w	bigint;
ie_grupo_hemocom_w	varchar(3);
nr_seq_indicacao_w	bigint;
ds_indicacao_adic_w	varchar(255);
ds_justificativa_w	varchar(2000);
ie_pf_realizou_reserva_w varchar(1);
cd_prescritor_w 	bigint;
ie_aferese_w		varchar(1);
ie_pool_w			varchar(1);
ie_fenotipado_w		prescr_procedimento.ie_fenotipado%type;
ie_tipo_sangue_w		varchar(10);
ie_fator_rh_w		varchar(10);
nr_seq_motivo_dif_tipo_san_w	smallint;

c01 CURSOR FOR
	SELECT	b.qt_procedimento,
		b.nr_seq_derivado,
		b.ie_util_hemocomponente,
		b.qt_vol_hemocomp,
		b.nr_sequencia,
		b.dt_prev_execucao,
		b.ie_lavado,
		b.ie_filtrado,
		b.ie_aliquotado,
		b.ie_irradiado,
		b.ie_aferese,
		b.ie_pool,
		b.ie_fenotipado
	from	prescr_procedimento b,
		prescr_medica a
	where	a.nr_prescricao	= nr_prescricao_p
	and	a.nr_prescricao	= b.nr_prescricao
	and	(b.nr_seq_derivado IS NOT NULL AND b.nr_seq_derivado::text <> '');
	
C02 CURSOR FOR
	SELECT	a.ie_grupo_hemocom,
		a.nr_seq_indicacao,
		a.ds_indicacao_adic,
		a.ds_justificativa		
	from	prescr_sol_bs_indicacao a,
		prescr_solic_bco_sangue b
	where	a.nr_seq_solic_bs = b.nr_sequencia
	and	b.nr_prescricao = nr_prescricao_p
	order by a.nr_sequencia;	


BEGIN

select	coalesce(max(b.dt_programada), null),
	coalesce(count(*), 0)
into STRICT	dt_programada_w,
	qt_solic_w
from	prescr_solic_bco_sangue b,
	prescr_medica a
where	a.nr_prescricao	= nr_prescricao_p
and	a.nr_prescricao	= b.nr_prescricao;

SELECT 	coalesce(COUNT(*), 0)
INTO STRICT	qt_procedimento_w
FROM	prescr_procedimento
WHERE	(nr_seq_derivado IS NOT NULL AND nr_seq_derivado::text <> '')
AND	nr_prescricao = nr_prescricao_p;

if	(dt_programada_w IS NOT NULL AND dt_programada_w::text <> '' AND ie_regra_p = 'S') or
	(ie_regra_p = 'T' AND qt_solic_w > 0) or
	(ie_regra_p = 'H' AND qt_procedimento_w > 0) then

	if (coalesce(dt_programada_w::text, '') = '') then
		dt_programada_w	:= clock_timestamp();
	end if;

	select	max(cd_pessoa_fisica)
	into STRICT	cd_pf_realizou_w
	from	usuario
	where	nm_usuario	= nm_usuario_p;

	select 	max(ie_pf_realizou_reserva)
	into STRICT	ie_pf_realizou_reserva_w
	from  	san_parametro
    where  	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
	
	select 	max(nr_seq_entidade)
	into STRICT	nr_seq_entidade_w
	from  	san_parametro
    where  	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
	
	select	cd_pessoa_fisica,
		dt_prescricao,
		nr_atendimento,
		cd_medico,
		cd_estabelecimento,
		cd_prescritor
	into STRICT	cd_pessoa_fisica_w,
		dt_prescricao_w,
		nr_atendimento_w,
		cd_medico_w,
		cd_estabelecimento_w,
		cd_prescritor_w
	from	prescr_medica
	where	nr_prescricao	= nr_prescricao_p;

	if (ie_pf_realizou_reserva_w = 'P'
		and (cd_prescritor_w IS NOT NULL AND cd_prescritor_w::text <> '')) then
		cd_pf_realizou_w:= cd_prescritor_w;
	end if;
	
	select	max(cd_convenio)
	into STRICT	cd_convenio_w
	from	atendimento_paciente_v
	where	nr_atendimento	= nr_atendimento_w;

	select	max(substr(b.ds_observacao,1,255))
	into STRICT	ds_observacao_w
	from	prescr_solic_bco_sangue b,
		prescr_medica a
	where	a.nr_prescricao	= nr_prescricao_p
	and	a.nr_prescricao	= b.nr_prescricao;

	if (nr_atendimento_w > 0) then
		select	nextval('san_reserva_seq')
		into STRICT	nr_sequencia_w
		;
		
		insert	into san_reserva(
				nr_sequencia,
				cd_pessoa_fisica,
				dt_cirurgia,
				dt_atualizacao,
				nm_usuario,
				dt_reserva,
				cd_pf_realizou,
				cd_medico_requisitante,
				cd_medico_cirurgiao,
				cd_convenio,
				nr_atendimento,
				ds_observacao,
				ie_origem_proced,
				cd_procedimento,
				ie_status,
				nr_seq_entidade,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_estabelecimento,
				nr_prescricao,
				cd_setor_atendimento)
			values (
				nr_sequencia_w,
				cd_pessoa_fisica_w,
				dt_programada_w,
				clock_timestamp(),
				nm_usuario_p,
				dt_programada_w,
				cd_pf_realizou_w,
				cd_medico_w,
				cd_medico_w,
				cd_convenio_w,
				nr_atendimento_w,
				coalesce(ds_observacao_w, ' '),
				null,
				null,
				'R',
				nr_seq_entidade_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_estabelecimento_w,
				nr_prescricao_p,
				obter_setor_reserva_cpoe(nr_prescricao_p, nr_atendimento_w));
	end if;
	
	if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then

		open c01;
		loop
		fetch c01 into 	
			qt_procedimento_w,
			nr_seq_derivado_w,
			ie_util_hemocomponente_w,
			qt_vol_hemocomp_w,
			nr_seq_prescr_w,
			dt_prevista_w,
			ie_lavado_w,
			ie_filtrado_w,
			ie_aliquotado_w,
			ie_irradiado_w,
			ie_aferese_w,
			ie_pool_w,
			ie_fenotipado_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

			select	coalesce(max(nr_seq_item),0) + 1
			into STRICT	nr_seq_item_w
			from	san_reserva_item
			where	nr_seq_reserva	= nr_sequencia_w;

			select max(ie_tipo_sangue), max(ie_fator_rh), max(nr_seq_motivo_dif_tipo_san)
			into STRICT ie_tipo_sangue_w, ie_fator_rh_w, nr_seq_motivo_dif_tipo_san_w
			from cpoe_hemoterapia h,
			prescr_solic_bco_sangue b
			where b.nr_prescricao = nr_prescricao_p
			and h.nr_sequencia = b.nr_seq_hemo_cpoe;

			insert	into san_reserva_item(
				nr_seq_reserva,
				nr_seq_item,
				nr_seq_derivado,
				qt_solicitada,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_util_hemocomponente,
				qt_vol_hemocomp,
				nr_prescricao,
				nr_seq_prescr,
				ie_suspenso,
				dt_prevista,
				ie_lavado,
				ie_filtrado,
				ie_aliquotado,
				ie_irradiado,
				ie_aferese,
				ie_pool,
				qt_volume,
				ie_fenotipado,
				qt_unidade,
				ie_tipo_sangue,
				ie_fator_rh, 
				nr_seq_motivo_dif_tipo_san)
			values (
				nr_sequencia_w,
				nr_seq_item_w,
				nr_seq_derivado_w,
				qt_procedimento_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ie_util_hemocomponente_w,
				qt_vol_hemocomp_w,
				nr_prescricao_p,
				nr_seq_prescr_w,
				'N',
				dt_prevista_w,
				ie_lavado_w,
				ie_filtrado_w,
				ie_aliquotado_w,
				ie_irradiado_w,
				ie_aferese_w,
				ie_pool_w,
				qt_vol_hemocomp_w,
				ie_fenotipado_w,
				qt_procedimento_w,
				ie_tipo_sangue_w, 
				ie_fator_rh_w, 
				nr_seq_motivo_dif_tipo_san_w);
		end loop;
		close c01;
	
		open C02;
		loop
		fetch C02 into	
			ie_grupo_hemocom_w,
			nr_seq_indicacao_w,
			ds_indicacao_adic_w,
			ds_justificativa_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			insert into san_reserva_indicacao(	
				nr_sequencia,
				nr_seq_indicacao,
				dt_atualizacao,
				nm_usuario,
				nr_seq_reserva,
				ie_grupo_hemocom,
				ds_indicacao_adic,
				ds_justificativa,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_perfil_ativo)
			values (	nextval('san_reserva_indicacao_seq'),
				nr_seq_indicacao_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_sequencia_w,
				ie_grupo_hemocom_w,
				ds_indicacao_adic_w,
				ds_justificativa_w,
				clock_timestamp(),
				nm_usuario_p,
				obter_perfil_ativo);
			end;
		end loop;
		close C02;
	
	
	end if;

end if;
if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_gerar_reserva_prescr ( nr_prescricao_p bigint, ie_regra_p text, nm_usuario_p text) FROM PUBLIC;

