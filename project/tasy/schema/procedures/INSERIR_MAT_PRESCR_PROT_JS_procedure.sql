-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_mat_prescr_prot_js ( nr_prescricao_p bigint, cd_protocolo_p bigint, nr_sequencia_p bigint, nr_seq_material_p bigint, ie_agrupador_p bigint, nr_seq_dieta_p bigint, nr_seq_proc_p bigint, nr_seq_solucao_p bigint, nr_seq_dieta_novo_p bigint, nr_seq_proc_novo_p bigint, nr_seq_solucao_novo_p bigint, cd_intervalo_p text, qt_protocolo_p bigint, nm_usuario_p text, ie_urgencia_p text, qt_peso_p bigint, hr_prim_horario_p text, qt_dose_p bigint, nr_seq_atendimento_p bigint, ds_justificativa_p text, cd_unidade_medida_p text, ie_gerar_composto_p text, ie_objetivo_p text, qt_dias_solicitado_p bigint, ie_indicacao_p text, cd_doenca_cid_p text) is type campos is record (ds_dias_aplicacao varchar(6)) RETURNS bigint AS $body$
DECLARE

	qt_dose_ret_w	double precision := 0;i integer;
	
BEGIN
		for a in 1..doses_dif_w.count loop 
			begin 
			i := a;
			qt_dose_ret_w := qt_dose_ret_w + doses_dif_w[i].qt_dose;
			end;
		end loop;
	 
	return qt_dose_ret_w;
	end;
 
	 
begin 
 
select	cd_estabelecimento, 
		nr_horas_validade, 
		dt_prescricao, 
		dt_primeiro_horario, 
		dt_inicio_prescr, 
		nr_atendimento, 
		cd_setor_atendimento, 
		cd_pessoa_fisica, 
		coalesce(Obter_perfil_ativo,cd_perfil_ativo) 
into STRICT	cd_estabelecimento_w, 
		nr_horas_validade_w, 
		dt_prescricao_w, 
		dt_primeiro_horario_w, 
		dt_inicio_prescr_w, 
		nr_atendimento_w, 
		cd_setor_atendimento_w, 
		cd_pessoa_fisica_w, 
		cd_perfil_w 
from	prescr_medica 
where	nr_prescricao	= nr_prescricao_p;
 
if (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then 
	select	max(nr_agrupamento) 
	into STRICT	nr_agrupamento_ww 
	from	protocolo_medic_material 
	where	cd_protocolo = cd_protocolo_p 
	and	nr_sequencia = nr_sequencia_p 
	and	nr_seq_material = nr_seq_material_p;
end if;	
 
if (hr_prim_horario_p IS NOT NULL AND hr_prim_horario_p::text <> '') and (hr_prim_horario_p <> ' : ') then 
	hr_prim_horario_w	:= hr_prim_horario_p;
end if;
 
ie_sem_aprazamento_w := Obter_Param_Usuario(924, 141, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_sem_aprazamento_w);
ie_utiliza_receita_w := Obter_Param_Usuario(924, 152, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_utiliza_receita_w);
ie_diluicao_recons_w := Obter_Param_Usuario(924, 195, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_diluicao_recons_w);
ie_gerar_Dil_composto_w := Obter_Param_Usuario(924, 316, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_gerar_Dil_composto_w);
ie_limpar_prim_hor_acm_w := Obter_Param_Usuario(924, 445, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_limpar_prim_hor_acm_w);
ie_gera_receita_w := Obter_Param_Usuario(924, 475, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_gera_receita_w);
ie_gerar_kit_w := Obter_Param_Usuario(924, 513, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_gerar_kit_w);
ie_prescr_mat_sem_lib_w := Obter_Param_Usuario(924, 530, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_prescr_mat_sem_lib_w);
ie_interv_agora_check_w := Obter_Param_Usuario(924, 548, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_interv_agora_check_w);
ie_interv_acm_check_w := Obter_Param_Usuario(924, 554, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_interv_acm_check_w);
ie_diluicao_recons_prot_w := Obter_Param_Usuario(924, 648, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_diluicao_recons_prot_w);
ie_somente_selecionado_w := Obter_Param_Usuario(924, 686, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_somente_selecionado_w);
ie_check_tipo_interv_w := Obter_Param_Usuario(924, 809, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_check_tipo_interv_w);
 
select	max(ds_dia_ciclo) 
into STRICT	ds_dia_ciclo_w 
from	paciente_atendimento 
where	nr_seq_atendimento	= nr_seq_atendimento_p;
 
if (ie_sem_aprazamento_w = 'N') then 
	ie_sem_aprazamento_w	:= 'S';
else 
	ie_sem_aprazamento_w	:= 'N';
end if;
 
select	coalesce(max(nr_agrupamento),0) 
into STRICT	nr_seq_agrup_w 
from	prescr_material 
where	nr_prescricao	= nr_prescricao_p 
and	ie_agrupador	= 1;	
 
open C01;
loop 
fetch C01 into 
	cd_material_w, 
	nr_seq_material_prot_w, 
	cd_unidade_medida_w , 
	qt_dose_w, 
	qt_dose_peso_w, 
	ie_via_aplicacao_w, 
	nr_agrupamento_w, 
	ds_recomendacao_w, 
	ie_agrupador_w, 
	cd_intervalo_w, 
	ds_horarios_w, 
	cd_unid_med_consumo_w, 
	qt_minimo_multiplo_solic_w, 
	ie_se_necessario_w, 
	qt_minuto_aplicacao_w, 
	qt_hora_aplicacao_w, 
	ie_bomba_infusao_w, 
	ie_aplic_bolus_w, 
	ie_aplic_lenta_w, 
	ie_acm_w, 
	qt_solucao_w, 
	ds_dose_diferenciada_w, 
	hr_prim_horario_w, 
	ie_agora_medic_w, 
	qt_vel_infusao_w, 
	ie_dias_util_medic_w, 
	ie_multiplicar_dose_w, 
	ds_obs_via_aplicacao_w, 
	ie_lado_w, 
	ie_objetivo_w, 
	qt_dias_prev_util_w, 
	ds_dias_aplicacao_w, 
	ie_checar_adep_w, 
	ie_arredondar_w, 
	ds_justificativa_w, 
	qt_hora_intervalo_w, 
	qt_min_intervalo_ww, 
	cd_topografia_cih_w, 
	cd_microorganismo_cih_w, 
	cd_amostra_cih_w, 
	ie_origem_infeccao_w, 
	ie_indicacao_w, 
	ie_uso_antimicrobiano_w, 
	ie_medicacao_paciente_w, 
	cd_motivo_baixa_w, 
	ie_dose_espec_agora_w, 
	qt_dose_especial_w, 
	hr_dose_especial_w, 
	ie_aplicar_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	if	((ie_urgencia_p = 'S') or (ie_agora_medic_w = 'S')) and (ie_acm_w = 'N') and (ie_se_necessario_w = 'N') then 
		ie_agora_medic_w := 'S';
	elsif (ie_urgencia_p = 'N') and (ie_agora_medic_w = 'N') then 
		ie_agora_medic_w := 'N';
	end if;	
	 
	/*select	max(cd_intervalo) 
	into	cd_intervalo_w 
	from	intervalo_prescricao  
	where	ie_situacao = 'A' 
	and	nvl(ie_agora,'N')	= nvl(ie_agora_medic_w,'N') 
	and	nvl(ie_acm,'N')		= ie_acm_w 
	and	Obter_se_intervalo(cd_intervalo,ie_agrupador_p) = 'S' 
	and	obter_se_exibe_intervalo(nr_prescricao_p, cd_intervalo, null) = 'S' 
	and	nvl(ie_se_farmacia_amb,'N') = 'N' 
	and	cd_intervalo	= cd_intervalo_w;*/
 
	 
	/* Junior - 10/03/11 - Validar se o intervalo que vem do protocolo é liberado para o item, se não, inserir null no intervalo.*/
 
	if (ie_agora_medic_w <> 'S') and (ie_acm_w <> 'S') then 
		if (ie_interv_agora_check_w = 'S') and (ie_interv_acm_check_w = 'S') then 
			select	max(cd_intervalo) 
			into STRICT	cd_intervalo_w 
			from  intervalo_prescricao 
			where  ie_situacao = 'A' 
			and 	cd_intervalo = cd_intervalo_w 
			--and   nvl(ie_se_farmacia_amb,'N') = 'N' 
			and   Obter_se_intervalo(cd_intervalo, 1) = 'S' 
			and	Obter_se_intervalo_material(cd_material_w, cd_intervalo) = 'S' 
			and   ((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_w)) 
			and   obter_se_exibe_intervalo(nr_prescricao_p, cd_intervalo, null) = 'S' 
			order by coalesce(nr_seq_apresent,999), 
				 ds_intervalo;
		elsif (ie_interv_agora_check_w <> 'S') and (ie_interv_acm_check_w = 'S') then 
			select max(cd_intervalo) 
			into STRICT	cd_intervalo_w 
			from  intervalo_prescricao 
			where  ie_situacao = 'A' 
			and   ie_agora  <> 'S' 
			--and   nvl(ie_se_farmacia_amb,'N') = 'N' 
			and   Obter_se_intervalo(cd_intervalo, 1) = 'S' 
			and 	Obter_se_intervalo_material(cd_material_w, cd_intervalo) = 'S' 
			and   ((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_w)) 
			and   obter_se_exibe_intervalo(nr_prescricao_p,cd_intervalo, null) = 'S' 
			order by coalesce(nr_seq_apresent,999), 
				 ds_intervalo;
		elsif (ie_interv_agora_check_w = 'S') and (ie_interv_acm_check_w <> 'S') then 
			select	max(cd_intervalo) 
			into STRICT	cd_intervalo_w 
			from  intervalo_prescricao 
			where  ie_situacao = 'A' 
			and   ie_acm  <> 'S' 
			--and   nvl(ie_se_farmacia_amb,'N') = 'N' 
			and   Obter_se_intervalo(cd_intervalo, 1) = 'S' 
			and	Obter_se_intervalo_material(cd_material_w, cd_intervalo) = 'S' 
			and   ((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_w)) 
			and   obter_se_exibe_intervalo(nr_prescricao_p,cd_intervalo, null) = 'S' 
			order by coalesce(nr_seq_apresent,999), 
				 ds_intervalo;
		else 
			select	max(cd_intervalo) 
			into STRICT	cd_intervalo_w 
			from  intervalo_prescricao 
			where  ie_situacao = 'A' 
			and   ie_agora  <> 'S' 
			and   ie_acm  <> 'S' 
			--and   nvl(ie_se_farmacia_amb,'N') = 'N' 
			and   Obter_se_intervalo(cd_intervalo, 1) = 'S' 
			and	Obter_se_intervalo_material(cd_material_w, cd_intervalo) = 'S' 
			and   ((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_w)) 
			and   obter_se_exibe_intervalo(nr_prescricao_p,cd_intervalo, null) = 'S'                   
			order by coalesce(nr_seq_apresent,999), 
				 ds_intervalo;
		end if;
	elsif (ie_agora_medic_w = 'S') then 
		select	max(cd_intervalo) 
		into STRICT	cd_intervalo_w 
		from  intervalo_prescricao 
		where  ie_situacao = 'A' 
		and   ie_agora  = 'S' 
		--and   nvl(ie_se_farmacia_amb,'N') = 'N' 
		and   ((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_w)) 
		and   Obter_se_intervalo(cd_intervalo, 1) = 'S' 
		and   obter_se_exibe_intervalo(nr_prescricao_p,cd_intervalo, null) = 'S' 
		order by coalesce(nr_seq_apresent,999), 
			   ds_intervalo;	
	else 
		select	max(cd_intervalo) 
		into STRICT	cd_intervalo_w 
		from  intervalo_prescricao 
		where  ie_situacao = 'A' 
		and   ((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_w)) 
		and   Obter_se_intervalo(cd_intervalo, 1) = 'S' 
		--and   nvl(ie_se_farmacia_amb,'N') = 'N'                   
		and   obter_se_exibe_intervalo(nr_prescricao_p,cd_intervalo, null) = 'S' 
		order by coalesce(nr_seq_apresent,999), 
			 ds_intervalo;
	end if;
	 
	ds_dias_aplicacao_w	:= Replace(ds_dias_aplicacao_w,' ','');
	ds_texto_w		:= '';
	 
	for y in 1..coalesce(length(ds_dias_aplicacao_w),0) loop	 
		X	:= coalesce(substr(upper(ds_dias_aplicacao_w), y, 1),0);
		if (position(x in ds_valido_w) > 0) then 
			ds_texto_w	:= ds_texto_w || X;
		else 
			--Erro na padronização dos horários do mat/med #@CD_MATERIAL#@. Verifique o cadastro do protocolo se os dias estão cadastrados corretamente. 
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(178299,'CD_MATERIAL='||cd_material_w);
		end if;
	end loop;
	ds_dias_aplicacao_w	:= ds_texto_w;
	ds_dias_aplicacao_w	:= Replace(ds_dias_aplicacao_w,' ','');
	dias_w.delete;
	ds_dias_aplicacao_w	:= ds_dias_aplicacao_w ||',';
	cont_w	:= 0;
	z	:= 0;
	while	(ds_dias_aplicacao_w IS NOT NULL AND ds_dias_aplicacao_w::text <> '') loop 
		begin 
		posicao_w	:= position(',' in ds_dias_aplicacao_w);
		z := z + 1;
		dias_w[z].ds_dias_aplicacao	:= substr(ds_dias_aplicacao_w,1,posicao_w - 1);
		ds_dias_aplicacao_w		:= substr(ds_dias_aplicacao_w,posicao_w + 1,length(ds_dias_aplicacao_w));
		cont_w	:= cont_w + 1;
		 
		if (cont_w > 100) then 
			exit;
		end if;
		end;
	end loop;
	ie_dia_valido_w	:= 'S';
	if (ds_dia_ciclo_w IS NOT NULL AND ds_dia_ciclo_w::text <> '') then 
		ie_dia_valido_w	:= 'N';
		for i in 1..dias_w.count loop 
			begin 
			if (dias_w[i].ds_dias_aplicacao	= ds_dia_ciclo_w) then 
				ie_dia_valido_w	:= 'S';
				exit;
			end if;
			end;
		end loop;
	end if;
	 
	if (ie_dia_valido_w	= 'S') then 
		/* Rafael em 20/07/2007 OS62068 substitui esta linha pela rotina abaixo 
		ie_agora_medic_w		:= ie_urgencia_p; 
		*/
 
		 
		ie_ctrl_loop_w		:= 1;
		ie_loop_w		:= 0;
		doses_dif_w.delete;
		if (ds_dose_diferenciada_w IS NOT NULL AND ds_dose_diferenciada_w::text <> '') then 
			ds_dose_diferenciada_ww	:= ds_dose_diferenciada_w;
			while(ds_dose_diferenciada_ww IS NOT NULL AND ds_dose_diferenciada_ww::text <> '') and ( ie_loop_w < 101) LOOP 
				begin 
				h := position('-' in ds_dose_diferenciada_ww);
				if (h > 0) then 
					qt_dose_diferenciada_w	:= replace(substr(ds_dose_diferenciada_ww, 1, h-1),'/',',');
					ds_dose_diferenciada_ww	:= substr(ds_dose_diferenciada_ww, h+1, 50);
				else 
					qt_dose_diferenciada_w	:= replace(ds_dose_diferenciada_ww,'/',',');
					ds_dose_diferenciada_ww	:= null;
				end if;
				if (coalesce(qt_dose_diferenciada_w,0) > 0) then 
					doses_dif_w[ie_ctrl_loop_w].qt_dose	:= coalesce(qt_dose_diferenciada_w,0);					
					ie_ctrl_loop_w				:= ie_ctrl_loop_w + 1;
				end if;
				ie_loop_w	:= ie_loop_w + 1;
				end;
			end loop;
		end if;
		 
		if (qt_dose_p > 0) and (nr_seq_material_p = nr_seq_material_prot_w) then /* Oraci em 05/12/2007 OS71763 */
 
			qt_dose_w := qt_dose_p;
		end if;
		 
		begin 
		select	coalesce(max(a.nr_dia_util),0) 
		into STRICT	nr_dia_util_w 
		from	prescr_material a, 
			prescr_medica_v b 
		where	cd_material		= cd_material_w 
		 and	a.nr_prescricao		= b.nr_prescricao 
		 and	b.nr_atendimento	= nr_atendimento_w 
		 and	trunc(b.dt_prescricao,'dd') = (trunc(dt_prescricao_w, 'dd') - 1);
		exception 
		when others then 
			nr_dia_util_w := 0;
		end;
 
		if (ie_dias_util_medic_w <> 'N') then 
			select	CASE WHEN ie_dias_util_medic_w='O' THEN nr_dia_util_w  ELSE nr_dia_util_w + 1 END  
			into STRICT	nr_dia_util_w 
			;
		else 
			nr_dia_util_w := null;
		end if;
 
		if (coalesce(hr_prim_horario_w::text, '') = '') then	 
			hr_prim_horario_w := obter_primeiro_horario(cd_intervalo_w,nr_prescricao_p,cd_material_w,ie_via_aplicacao_w);
		end if;
 
		if (qt_dose_peso_w > 0) and (qt_peso_p > 0) then 
			qt_dose_w	:= qt_dose_peso_w * qt_peso_p;
 
			if (ie_arredondar_w	= 'S') then 
				qt_dose_w := Arredondamento(qt_dose_w, 1, 'R');
			end if;
			 
			if (upper(cd_unidade_medida_w) = upper(obter_unid_med_usua('GTS'))) then 
				qt_dose_w	:= round(qt_dose_w);
			end if;
		end if;	
 
		if (coalesce(nr_seq_solucao_novo_p,0) > 0) then 
			ie_agrupador_w	:= 4;
		end if;
 
		if (ie_agrupador_w in (1,2)) then 
			cd_intervalo_w	:= coalesce(cd_intervalo_w,cd_intervalo_p);
		end if;
		/*QUando o ie_gerar_composto_p is not null é porque esta sendo chamado pelos medicamentos de rotina.*/
 
		if (ie_gerar_composto_p IS NOT NULL AND ie_gerar_composto_p::text <> '') then 
			cd_intervalo_w	:= coalesce(cd_intervalo_p,cd_intervalo_w);
		end if;
		 
		/* Caso o parâmetro [809] - REP esteja habilitado, deve marcar o tipo do intervalo. (Novo tratamento) */
 
		cd_intervalo_w	:= coalesce(cd_intervalo_p,cd_intervalo_w);
		if (ie_check_tipo_interv_w = 'S') and (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then 
			Select	coalesce(coalesce(max(ie_agora),ie_agora_medic_w),'N'), 
					coalesce(coalesce(max(ie_acm),ie_acm_w),'N'), 
					coalesce(coalesce(max(ie_se_necessario), ie_se_necessario_w),'N') 
			into STRICT	ie_agora_medic_w, 
					ie_acm_w, 
					ie_se_necessario_w 
			from	intervalo_prescricao 
			where	cd_intervalo = cd_intervalo_w;
		end if;
		 
		if (ie_multiplicar_dose_w = 'S') then 
			qt_dose_w	:= qt_dose_w * qt_protocolo_p;
		end if;
 
		select	coalesce(max(nr_sequencia),0) + 1 
		into STRICT	nr_seq_material_w 
		from	prescr_material 
		where	nr_prescricao	= nr_prescricao_p;	
 
		if (ie_agora_medic_w = 'S') and (coalesce(cd_intervalo_w::text, '') = '') then 
			dt_primeiro_horario_w := clock_timestamp();
			select	coalesce(max(cd_intervalo),cd_intervalo_w) 
			into STRICT	cd_intervalo_w 
			from	intervalo_prescricao 
			where	ie_agora	= 'S' 
			and		obter_se_exibe_intervalo(nr_prescricao_p, cd_intervalo, cd_setor_atendimento_w) = 'S';
		end if;
		 
		qt_conversao_dose_w	:= obter_conversao_unid_med(cd_material_w,cd_unidade_medida_w);
		if (ie_agrupador_w = 4) then 
			begin 
			if	(ds_dose_diferenciada_w IS NOT NULL AND ds_dose_diferenciada_w::text <> '') then 
				qt_solucao_w	:= obter_conversao_ml(cd_material_w,get_sum_qt_dose_Espec(),cd_unidade_medida_w);
			else 
				qt_solucao_w	:= obter_conversao_ml(cd_material_w,qt_dose_w,cd_unidade_medida_w);
			end if;
			 
			select	coalesce(max(nr_etapas),1) 
			into STRICT	nr_ocorrencia_w 
			from	protocolo_medic_solucao 
			where	cd_protocolo	= cd_protocolo_p 
			and	nr_sequencia 	= nr_sequencia_p 
			and	nr_seq_solucao 	= nr_seq_solucao_p;
			 
			if (coalesce(nr_seq_solucao_novo_p,0) = 0) then 
 
				SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, coalesce(dt_inicio_prescr_w,dt_prescricao_w), dt_primeiro_horario_w, nr_horas_validade_w, cd_material_w, 0, 0, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'S', ds_dose_diferenciada_w) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;
 
				ds_horarios_w	:= ds_horarios_w || ds_horarios2_w;
			else 
				select	nr_etapas 
				into STRICT	nr_ocorrencia_w 
				from	prescr_solucao 
				where	nr_prescricao	= nr_prescricao_p 
				and	nr_seq_solucao	= nr_seq_solucao_novo_p;
				ds_horarios_w := null;
			end if;
			end;
		else 
			begin 
			nr_ocorrencia_w		:= 0;
			 
			if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then 
				dt_primeiro_horario_w := to_date(to_char(dt_prescricao_w,'dd/mm/yyyy ') || 
							 substr(hr_prim_horario_w,1,5),'dd/mm/yyyy hh24:mi');
			end if;
			 
			if (ie_agora_medic_w = 'S') then 
				dt_primeiro_horario_w := clock_timestamp();
			end if;
			 
			if (nr_seq_proc_novo_p IS NOT NULL AND nr_seq_proc_novo_p::text <> '') and (ie_agrupador_w = 5) then		 
				select	coalesce(dt_prev_execucao,dt_primeiro_horario_w) 
				into STRICT	dt_primeiro_horario_w 
				from	prescr_procedimento 
				where	nr_prescricao	= nr_prescricao_p 
				and	nr_sequencia	= nr_seq_proc_novo_p;
			end if;
 
			select	max(qt_min_intervalo) 
			into STRICT	qt_min_intervalo_w 
			from	intervalo_prescricao 
			where	cd_intervalo	= cd_intervalo_w;
			 
			SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, coalesce(dt_inicio_prescr_w,dt_prescricao_w), dt_primeiro_horario_w, nr_horas_validade_w, cd_material_w, 0, qt_min_intervalo_w, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;
 
			ds_horarios_w	:= ds_horarios_w || ds_horarios2_w;
			end;
		end if;
 
		if (ie_acm_w = 'S') or (ie_se_necessario_w = 'S') then 
 
			select	coalesce(max(b.qt_se_necessario),0) 
			into STRICT		nr_ocorrencia_w 
			from		intervalo_prescricao a, 
					intervalo_setor b 
			where	a.cd_intervalo 		= b.cd_intervalo 
			and		coalesce(b.cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w 
			and		coalesce(b.cd_estab, cd_estabelecimento_w)			= cd_estabelecimento_w 
			and		a.cd_intervalo 		= cd_intervalo_w 
			and		((b.cd_unidade_basica = coalesce(obter_unid_atend_setor_atual(nr_atendimento_w,cd_setor_atendimento_w,'UB'),b.cd_unidade_basica)) or (coalesce(b.cd_unidade_basica::text, '') = ''));
			 
			if (coalesce(nr_ocorrencia_w,0) = 0) then 
				Select	coalesce(max(qt_se_necessario),1) 
				into STRICT	nr_ocorrencia_w 
				from	intervalo_prescricao 
				where	cd_intervalo = cd_intervalo_w;
			end if;
		end if;
 
		/*qt_unitaria_w := (trunc(qt_dose_w * 1000 / qt_conversao_dose_w)/ 1000);*/
 
		if (ie_Agrupador_p = 4) and (ds_dose_diferenciada_w IS NOT NULL AND ds_dose_diferenciada_w::text <> '') then 
			qt_unitaria_w := dividir(trunc(dividir(get_sum_qt_dose_Espec() * 1000, qt_conversao_dose_w )),1000);
			qt_material_w := qt_unitaria_w;
			ds_dose_diferenciada_ww := ds_dose_diferenciada_w;
		else 
			qt_unitaria_w := dividir(trunc(dividir(qt_dose_w * 1000,qt_conversao_dose_w)),1000);
			ds_dose_diferenciada_ww := null;
		end if;
		 
		SELECT * FROM Obter_Quant_Dispensar(1, cd_material_w, nr_prescricao_p, nr_seq_material_w, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, coalesce(qt_dose_especial_w,0), nr_ocorrencia_w, ds_dose_diferenciada_ww, ie_origem_inf_w, cd_unidade_medida_w, 1, qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w;
 
 
		if (coalesce(hr_prim_horario_w::text, '') = '') or (ie_agora_medic_w = 'S') then 
			hr_prim_horario_w	:= substr(to_char(dt_primeiro_horario_w,'dd/mm/yyyy hh24:mi:ss'),12,5);
		end if;
		 
		if (ie_acm_w = 'S') then 
			ds_horarios_w := 'ACM';
			if (ie_limpar_prim_hor_acm_w = 'S') then 
				hr_prim_horario_w := '';
			end if;
		elsif (ie_se_necessario_w = 'S') then 
			ds_horarios_w := 'SN';
			hr_prim_horario_w := '';
		end if;
		 
		if (ie_sem_aprazamento_w = 'S') then 
			ds_horarios_w		:= '';
			hr_prim_horario_w	:= '';
		end if;
		 
		ie_via_aplicacao_ww := Obter_Padrao_Param_Prescr(nr_atendimento_w,cd_material_w,null,cd_setor_atendimento_w,cd_pessoa_fisica_w, campo_numerico(obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'A')),qt_peso_p,'N','V', cd_intervalo_w);
		if (coalesce(ie_via_aplicacao_ww::text, '') = '') then 
			select	max(ie_via_aplicacao) 
			into STRICT	ie_via_aplicacao_ww 
			from	material 
			where	cd_material = cd_material_w;
		end if;	
		 
		if (coalesce(ie_via_aplicacao_ww::text, '') = '') and (nr_seq_solucao_novo_p > 0) then 
			ie_via_aplicacao_ww	:= upper(obter_via_usuario('IV'));
		end if;
		 
		if (ds_justificativa_p IS NOT NULL AND ds_justificativa_p::text <> '') then 
			ds_justificativa_w	:= ds_justificativa_p || chr(13) || ds_justificativa_w;
		end if;
		 
		if (ie_gerar_composto_p = 'S') then 
			nr_seq_agrup_w		:= 0;
			select	coalesce(max(nr_agrupamento),1) 
			into STRICT	nr_agrupamento_w 
			from	prescr_material 
			where	nr_prescricao	= nr_prescricao_p 
			and	ie_agrupador	= ie_agrupador_w;
		end if;
		 
		if (ie_gera_receita_w	= 'S') and (ie_utiliza_receita_w	= 'S') then 
			nr_receita_w	:= nr_prescricao_p;
		end if;
		 
		nr_seq_solucao_novo_w	:= nr_seq_solucao_novo_p;
		if (nr_seq_solucao_novo_p = 0) then 
			nr_seq_solucao_novo_w	:= null;
		end if;
		 
		select	max(Obter_orientacao_medic(cd_material_w)) 
		into STRICT	ds_observacao_w 
		;
		 
		if (ie_agrupador_p = 13) then 
			ie_agrupador_w	:= 13;
		end if;
		 
		if (ie_objetivo_p IS NOT NULL AND ie_objetivo_p::text <> '') then 
			ie_objetivo_w	:= ie_objetivo_p;
		end if;
		if (qt_dias_solicitado_p IS NOT NULL AND qt_dias_solicitado_p::text <> '') then 
			qt_dias_prev_util_w	:= qt_dias_solicitado_p;
		end if;			
		if (ie_indicacao_p IS NOT NULL AND ie_indicacao_p::text <> '') then 
			ie_indicacao_w	:= ie_indicacao_p;
		end if;
		 
		Insert into Prescr_Material( 
			nr_prescricao, 
			nr_sequencia, 
			ie_origem_inf, 
			cd_material, 
			cd_unidade_medida, 
			qt_dose, 
			qt_unitaria, 
			qt_material, 
			dt_atualizacao, 
			nm_usuario, 
			cd_intervalo, 
			ds_observacao, 
			ie_via_aplicacao, 
			nr_agrupamento, 
			cd_motivo_baixa, 
			ie_utiliza_kit, 
			cd_unidade_medida_dose, 
			qt_conversao_dose, 
			ie_urgencia, 
			nr_ocorrencia, 
			qt_total_dispensar, 
			ds_horarios, 
			nr_sequencia_solucao, 
			nr_sequencia_dieta, 
			nr_sequencia_proc, 
			hr_prim_horario, 
			ie_suspenso, 
			ie_agrupador, 
			ie_se_necessario, 
			qt_min_aplicacao, 
			qt_hora_aplicacao, 
			ie_bomba_infusao, 
			ie_aplic_bolus, 
			ie_aplic_lenta, 
			ie_acm, 
			ds_dose_diferenciada, 
			qt_solucao, 
			ie_cultura_cih, 
			ie_antibiograma, 
			ie_uso_antimicrobiano, 
			cd_protocolo, 
			nr_seq_protocolo, 
			nr_seq_mat_protocolo, 
			ie_recons_diluente_fixo, 
			qt_vel_infusao, 
			ie_sem_aprazamento, 
			nr_dia_util, 
			ie_regra_disp, 
			ie_lado, 
			ie_objetivo, 
			qt_dias_solicitado, 
			qt_min_intervalo, 
			ie_checar_adep, 
			ie_permite_substituir, 
			ds_justificativa, 
			qt_hora_intervalo, 
			cd_topografia_cih, 
			nr_receita, 
			cd_microorganismo_cih, 
			cd_amostra_cih, 
			ie_origem_infeccao, 
			ie_indicacao, 
			ie_medicacao_paciente, 
			ie_dose_espec_agora, 
			qt_dose_especial, 
			hr_dose_especial, 
			ie_aplicar) 
		values ( 
			nr_prescricao_p, 
	   		nr_seq_material_w, 
		 	'S', 
		 	cd_material_w, 
		 	cd_unid_med_consumo_w, 
		 	coalesce(qt_dose_w,0), 
		 	coalesce(qt_unitaria_w,0), 
		 	coalesce(qt_material_w,0), 
		 	clock_timestamp(), 
			nm_usuario_p, 
		 	cd_intervalo_w, 
		 	ds_observacao_w || CASE WHEN coalesce(ds_observacao_w::text, '') = '' THEN null  ELSE ' - ' END  || ds_recomendacao_w || ds_obs_via_aplicacao_w, 
		 	coalesce(ie_via_aplicacao_w,ie_via_aplicacao_ww), 
		   	coalesce(coalesce(nr_seq_agrup_w,0) + coalesce(nr_agrupamento_w,0),0), 
		   	cd_motivo_baixa_w, 
		   	'N', 
		   	cd_unidade_medida_w, 
		   	coalesce(qt_conversao_dose_w,0), 
			ie_agora_medic_w, 
		   	nr_ocorrencia_w, 
		   	qt_dispensar_w, 
			ds_horarios_w, 
			nr_seq_solucao_novo_w, 
			nr_seq_dieta_novo_p, 
			nr_seq_proc_novo_p, 
			hr_prim_horario_w, 
			'N', 
		   	ie_agrupador_w, 
			ie_se_necessario_w, 
			qt_minuto_aplicacao_w, 
			qt_hora_aplicacao_w, 
			ie_bomba_infusao_w, 
			ie_aplic_bolus_w, 
			ie_aplic_lenta_w, 
			ie_acm_w, 
			ds_dose_diferenciada_w, 
			qt_solucao_w, 
			'N', 
			'N', 
			coalesce(ie_uso_antimicrobiano_w,'N'), 
			cd_protocolo_p, 
			nr_sequencia_p, 
			nr_seq_material_prot_w, 
			'N', 
			qt_vel_infusao_w, 
			ie_sem_aprazamento_w, 
			nr_dia_util_w, 
			ie_regra_disp_w, 
			ie_lado_w, 
			ie_objetivo_w, 
			qt_dias_prev_util_w, 
			coalesce(qt_min_intervalo_w,qt_min_intervalo_ww), 
			ie_checar_adep_w, 
			'S', 
			DS_JUSTIFICATIVA_w, 
			qt_hora_intervalo_w, 
			cd_topografia_cih_w, 
			nr_receita_w, 
			cd_microorganismo_cih_w, 
			cd_amostra_cih_w, 
			ie_origem_infeccao_w, 
			ie_indicacao_w, 
			ie_medicacao_paciente_w, 
			ie_dose_espec_agora_w, 
			qt_dose_especial_w, 
			CASE WHEN ie_dose_espec_agora_w='S' THEN to_char(clock_timestamp(),'hh24:mi')  ELSE hr_dose_especial_w END , 
			ie_aplicar_w);
			 
			IF (ie_prescr_mat_sem_lib_w = 'S') THEN 
				CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_p,nr_seq_material_w,cd_perfil_w,'N',nm_usuario_p,null);
			END IF;			
		 
		commit;
		 
		open C02;
		loop 
		fetch C02 into	 
			cd_doenca_cid_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			 
			Select	nextval('prescr_material_cid_seq') 
			into STRICT	nr_seq_cid_w 
			;
			 
			insert into prescr_material_cid(nr_sequencia, 
							cd_doenca_cid, 
							nr_prescricao, 
							nr_sequencia_medic, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec) 
						values (nr_seq_cid_w, 
							 cd_doenca_cid_w, 
							 nr_prescricao_p, 
							 nr_seq_material_w, 
							 clock_timestamp(), 
							 nm_usuario_p, 
							 clock_timestamp(), 
							 nm_usuario_p);
			 
		end loop;
		close C02;
		 
		Select	nextval('prescr_material_cid_seq') 
		into STRICT	nr_seq_cid_w 
		;
		 
		if (cd_doenca_cid_p IS NOT NULL AND cd_doenca_cid_p::text <> '') then 
			insert into prescr_material_cid(nr_sequencia, 
							cd_doenca_cid, 
							nr_prescricao, 
							nr_sequencia_medic, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec) 
						values (nr_seq_cid_w, 
							 cd_doenca_cid_p, 
							 nr_prescricao_p, 
							 nr_seq_material_w, 
							 clock_timestamp(), 
							 nm_usuario_p, 
							 clock_timestamp(), 
							 nm_usuario_p);
							 
		end if;
		 
		if (ie_gerar_kit_w = 'S') then 
			CALL Gerar_Kit_Prescricao(cd_estabelecimento_w, nr_prescricao_p, nr_seq_material_w, nm_usuario_p);
		end if;
		 
		select	max(nr_ocorrencia), 
			max(nr_agrupamento) 
		into STRICT	nr_ocorrencia_w, 
			nr_agrup_ww 
		from	prescr_material 
		where	nr_prescricao	= nr_prescricao_p 
		and	nr_sequencia	= nr_seq_material_w;
		 
		if (ie_agrupador_w = 1) then 
		 
			select	count(*) 
			into STRICT	cont_w 
			from	prescr_material 
			where	nr_prescricao	= nr_prescricao_p 
			and	nr_sequencia	<> nr_seq_material_w 
			and	ie_agrupador	= 1 
			and	nr_agrupamento	= nr_agrup_ww;
			 
			if (ie_gerar_Dil_composto_w = 'S') or (cont_w = 0) then 
			 
				CALL Inserir_diluentes_prot(nr_prescricao_p, cd_protocolo_p, nr_sequencia_p, 
							nr_seq_material_prot_w, nr_seq_material_w, nm_usuario_p);
				 
				if (ie_diluicao_recons_w = 'S') and (ie_diluicao_recons_prot_w = 'S') then 
					select	CASE WHEN count(*)=0 THEN 'A'  ELSE 'R' END  
					into STRICT	ie_opcao_recons_w 
					from	prescr_material 
					where	nr_prescricao = nr_prescricao_p 
					and 	nr_sequencia_diluicao = nr_seq_material_w 
					and 	ie_agrupador = 3;
					 
					CALL Gerar_Reconst_Diluicao(nr_prescricao_p,nr_seq_material_w, ie_opcao_recons_w);
				end if;
			end if;
			CALL Ajustar_Prescr_Material(nr_prescricao_p,nr_seq_material_w);
		end if;
		 
		nr_erro_w := Consistir_Prescr_Material(nr_prescricao_p, nr_seq_material_w, nm_usuario_p, cd_perfil_w, nr_erro_w); /*Almir em 09/10/2007 OS70754 */
		 
		select	max(nr_ocorrencia) 
		into STRICT	nr_ocorrencia_w 
		from	prescr_material 
		where	nr_prescricao	= nr_prescricao_p 
		and	nr_sequencia	= nr_seq_material_w;
		 
	end if;
	end;
end loop;
close c01;
 
CALL Reordenar_Medicamento(nr_prescricao_p);
CALL excluir_mat_assoc_usuario(nm_usuario_p);
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_mat_prescr_prot_js ( nr_prescricao_p bigint, cd_protocolo_p bigint, nr_sequencia_p bigint, nr_seq_material_p bigint, ie_agrupador_p bigint, nr_seq_dieta_p bigint, nr_seq_proc_p bigint, nr_seq_solucao_p bigint, nr_seq_dieta_novo_p bigint, nr_seq_proc_novo_p bigint, nr_seq_solucao_novo_p bigint, cd_intervalo_p text, qt_protocolo_p bigint, nm_usuario_p text, ie_urgencia_p text, qt_peso_p bigint, hr_prim_horario_p text, qt_dose_p bigint, nr_seq_atendimento_p bigint, ds_justificativa_p text, cd_unidade_medida_p text, ie_gerar_composto_p text, ie_objetivo_p text, qt_dias_solicitado_p bigint, ie_indicacao_p text, cd_doenca_cid_p text) is type campos is record (ds_dias_aplicacao varchar(6)) FROM PUBLIC;

