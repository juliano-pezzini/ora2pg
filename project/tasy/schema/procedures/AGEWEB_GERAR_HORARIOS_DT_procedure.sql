-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageweb_gerar_horarios_dt (cd_agenda_p bigint, cd_pessoa_fisica_p text, cd_medico_p text, dt_agenda_p timestamp, ie_pesquisa_p text) AS $body$
DECLARE

 
qt_horarios_marc_w	bigint;
qt_dias_marc_w		bigint;
nr_dias_fut_agendamento_w bigint;

cd_tipo_agenda_w	bigint;
ie_feriado_w		varchar(1);
ie_gerar_sobra_w	varchar(1);
ie_utiliza_qt_marc_agenda_w varchar(1) := 'N';
cd_estabelecimento_w	smallint;

qt_dias_geracao_w	bigint := 0;

dt_agenda_w		timestamp;
ds_retorno_w		varchar(255);

dt_agenda_gerada_w	timestamp;
qt_cursor_w		bigint:= 0;
ie_gerar_w		varchar(1) := 'S';

C01 CURSOR FOR 
	SELECT	dt_agenda 
	from	agenda_consulta 
	where	cd_agenda = cd_agenda_p 
	and	dt_agenda between trunc(dt_agenda_w) and trunc(dt_agenda_w) + 86399/86400 
	and	ie_status_agenda = 'L' 
	and	ie_gerar_w = 'S' 
	and	dt_agenda > clock_timestamp() 
	order by dt_agenda;
	
	 
C02 CURSOR FOR 
	SELECT	hr_inicio 
	from	agenda_paciente a 
	where	cd_agenda = cd_agenda_p 
	and	hr_inicio between trunc(dt_agenda_w) and trunc(dt_agenda_w) + 86399/86400 
	and	ie_status_agenda = 'L' 
	and	AgeWeb_Obter_Se_Medico_Turno(nr_sequencia,cd_medico_p) = 'S' 
	and	dt_agenda > clock_timestamp() 
	order by a.hr_inicio;


BEGIN 
if (ie_pesquisa_p = 'N') then 
	select	coalesce(max(qt_dias_marc),1), 
			coalesce(max(qt_horarios_marc),5), 
			max(ie_utiliza_qt_marc_agenda) 
	into STRICT	qt_dias_marc_w, 
			qt_horarios_marc_w, 
			ie_utiliza_qt_marc_agenda_w 
	from	parametro_agenda_web;
else 
	select	coalesce(max(qt_dias_marc),1) 
	into STRICT	qt_dias_marc_w 
	from	parametro_agenda_web;
	 
	qt_horarios_marc_w	:= 1;
end if;
 
select	max(cd_tipo_agenda), 
	max(ie_feriado), 
	max(ie_gerar_sobra_horario), 
	max(cd_estabelecimento), 
	coalesce(max(nr_dias_fut_agendamento),qt_dias_marc_w) 
into STRICT	cd_tipo_agenda_w, 
	ie_feriado_w, 
	ie_gerar_sobra_w, 
	cd_estabelecimento_w, 
	nr_dias_fut_agendamento_w 
from	agenda 
where	cd_agenda = cd_agenda_p;
 
if (ie_utiliza_qt_marc_agenda_w = 'S') then 
	qt_dias_marc_w := nr_dias_fut_agendamento_w;
end if;
 
dt_agenda_w	:= trunc(dt_agenda_p);
 
if (ie_pesquisa_p = 'S') then 
	delete	FROM ageweb_horarios 
	where	cd_pessoa_fisica 	= cd_pessoa_fisica_p 
	and	cd_agenda		= cd_agenda_p;
else 
	delete	FROM ageweb_horarios 
	where	cd_pessoa_fisica 	= cd_pessoa_fisica_p;
end if;
 
if (cd_tipo_agenda_w = 3) then 
			 
	ie_gerar_w	:= 'S';
	qt_cursor_w	:= 0;
	 
	ds_retorno_w := horario_livre_consulta(	cd_estabelecimento_w, cd_agenda_p, ie_feriado_w, dt_agenda_w, cd_pessoa_fisica_p, 'S', ie_gerar_sobra_w, 'N', qt_horarios_marc_w, ds_retorno_w);
			 
	delete	FROM agenda_controle_horario 
	where	cd_agenda = cd_agenda_p 
	and		dt_agenda = dt_agenda_w;
	 
	open C01;
	loop 
	fetch C01 into	 
		dt_agenda_gerada_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
	 
		insert into ageweb_horarios( 
					cd_pessoa_fisica, 
					dt_agenda, 
					cd_agenda, 
					cd_tipo_agenda) 
				values (cd_pessoa_fisica_p, 
					 dt_agenda_gerada_w, 
					 cd_agenda_p, 
					 cd_tipo_agenda_w);
		 
		qt_cursor_w	:= qt_cursor_w + 1;
		 
		if (qt_cursor_w > qt_horarios_marc_w) then 
			ie_gerar_w	:= 'N';
		end if;
		 
		end;
	end loop;
	close C01;
		 
elsif (cd_tipo_agenda_w = 2) then 
				 
	ie_gerar_w	:= 'S';
	qt_cursor_w	:= 0;
	 
	CALL gerar_horario_agenda_exame(cd_estabelecimento_w, 
				  cd_agenda_p, 
				  dt_agenda_w, 
				  cd_pessoa_fisica_p);
				  
	delete	FROM agenda_controle_horario 
	where	cd_agenda = cd_agenda_p 
	and		dt_agenda = dt_agenda_w;
	 
	open C02;
	loop 
	fetch C02 into	 
		dt_agenda_gerada_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		if (ie_gerar_w = 'S') then 
			insert into ageweb_horarios( 
						cd_pessoa_fisica, 
						dt_agenda, 
						cd_agenda, 
						cd_tipo_agenda) 
					values (cd_pessoa_fisica_p, 
						 dt_agenda_gerada_w, 
						 cd_agenda_p, 
						 cd_tipo_agenda_w);
			 
			qt_cursor_w	:= qt_cursor_w + 1;
			 
			if (qt_cursor_w >= qt_horarios_marc_w) then 
				ie_gerar_w	:= 'N';
			end if;
		end if;
		end;
	end loop;
	close C02;	
end if;
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageweb_gerar_horarios_dt (cd_agenda_p bigint, cd_pessoa_fisica_p text, cd_medico_p text, dt_agenda_p timestamp, ie_pesquisa_p text) FROM PUBLIC;

