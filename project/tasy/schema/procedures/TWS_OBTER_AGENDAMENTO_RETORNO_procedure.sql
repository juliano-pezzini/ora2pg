-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tws_obter_agendamento_retorno ( cd_pessoa_fisica_p text, cd_convenio_p bigint, dt_agenda_p timestamp, cd_medico_p text, cd_especialidade_p bigint, dt_final_p INOUT timestamp, ie_bloqueia_p INOUT text ) AS $body$
DECLARE



								
									  
									  
cd_especialidade_agenda_w	integer;
ie_tipo_atendimento_w		smallint;
ie_classif_agenda_item_w	varchar(5);
cd_estabelecimento_w		agenda.cd_estabelecimento%type;
ie_mesmo_estab_w 			varchar(1) := 'S';
ie_mesmo_conv_w				varchar(1);
ie_mesmo_tipo_atend_w		varchar(1);
ie_mesma_agenda_w			varchar(1);
qt_dia_conv_w				integer;
qt_dia_consulta_w			bigint;
cd_motivo_alta_w			integer;
ie_mesma_espec_w			varchar(1);
ie_mesmo_tipo_agenda_w		varchar(1);
ie_regra_agenda_w			varchar(1);
nr_seq_agenda_cons_w		agenda_consulta.nr_sequencia%type;	
dt_agenda_w					timestamp;
dt_return_w					timestamp := null;
cd_agenda_w					bigint;
ie_bloqueia_w				varchar(1):= 'N';


c01 CURSOR FOR
SELECT	coalesce(qt_dia,0),
		ie_mesmo_tipo_atend,
		CASE WHEN ie_regra='E' THEN  'S'  ELSE 'N' END ,
		CASE WHEN coalesce(cd_convenio::text, '') = '' THEN  'N'  ELSE 'S' END ,
		cd_motivo_alta,
		ie_regra_agenda,
		coalesce(ie_mesmo_tipo_Agenda,'N'),
		CASE WHEN ie_regra='A' THEN 'S'  ELSE 'N' END ,
		coalesce(ie_mesmo_estab,'S')
from	regra_atend_retorno
where (coalesce(cd_convenio, cd_convenio_p) = cd_convenio_p or coalesce(cd_convenio_p::text, '') = '')
and (coalesce(cd_especialidade_medica,cd_especialidade_agenda_w) = cd_especialidade_agenda_w or coalesce(cd_especialidade_agenda_w::text, '') = '')
and (coalesce(ie_tipo_Atendimento, ie_tipo_atendimento_w) = ie_tipo_atendimento_w or coalesce(ie_tipo_atendimento_w::text, '') = '')
and (coalesce(ie_classif_agenda,ie_classif_agenda_item_w) = ie_classif_agenda_item_w or coalesce(ie_classif_agenda_item_w::text, '') = '')
and		((ie_regra = 'A' AND cd_agenda = cd_agenda_w) or (ie_regra <> 'A'))
and		ie_regra_agenda	in ('A','C','E','G','O')
and		clock_timestamp() between coalesce(dt_inicio_vigencia, clock_timestamp()) and coalesce(dt_fim_vigencia, clock_timestamp())
and		coalesce(ie_situacao,'A') = 'A'
order by 	coalesce(cd_convenio,0),
			coalesce(cd_agenda,0),
			qt_dia;
			
			
c02 CURSOR FOR
	SELECT 	cd_agenda
	from  	agenda
	where 	ie_agenda_web 	 = 'S'
	and   	cd_pessoa_fisica = cd_medico_p;
			
c03 CURSOR FOR

SELECT	coalesce(b.nr_sequencia,0),
		dt_agenda
from	agenda a,
		agenda_consulta b
where	a.cd_tipo_agenda	= 3
and		((ie_mesmo_estab_w 	= 'N' and a.cd_estabelecimento = cd_estabelecimento_w) or ie_mesmo_estab_w = 'S')
and		a.cd_agenda			= b.cd_agenda
and		b.ie_status_agenda	= 'E'
and		b.cd_pessoa_fisica	= cd_pessoa_fisica_p
and		b.dt_agenda			>= clock_timestamp() - qt_dia_conv_w
and		((b.cd_convenio 		= cd_convenio_p) or (ie_mesmo_conv_w = 'N'))
and		((a.cd_especialidade 	= cd_especialidade_agenda_w) or (ie_mesma_espec_w = 'N') or (coalesce(a.cd_especialidade::text, '') = ''))
and 	((a.ie_tipo_atendimento = ie_Tipo_atendimento_w) or (ie_mesmo_tipo_atend_w = 'N') or (coalesce(a.ie_tipo_atendimento::text, '') = ''))
and		((ie_mesma_agenda_w 	= 'S' AND a.cd_agenda = cd_agenda_w) or (ie_mesma_agenda_w = 'N'))
and		obter_tipo_classif_agecons(ie_classif_agenda) = 'C'
and		(((	SELECT 	cd_motivo_alta
			from 	atendimento_paciente
			where 	nr_atendimento = b.nr_atendimento) = cd_motivo_alta_w) or (coalesce(cd_motivo_alta_w::text, '') = ''))
order by b.dt_agenda;

					

BEGIN

if ((cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') /*and dt_agenda_p >= sysdate*/
) then
	
	open c02;
		loop
		fetch c02 into
			cd_agenda_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */	
		
		begin
			select	max(a.ie_tipo_atendimento),
					max(a.cd_especialidade),
					max(cd_Estabelecimento)
			into STRICT	ie_tipo_atendimento_w,
					cd_especialidade_agenda_w,
					cd_estabelecimento_w
			from	agenda a
			where	a.cd_agenda = cd_agenda_w;
	
			open c01;
			loop
			fetch c01 into	qt_dia_conv_w,
						ie_mesmo_tipo_atend_w,
						ie_mesma_espec_w,
						ie_mesmo_conv_w,
						cd_motivo_alta_w,
						ie_regra_Agenda_w,
						ie_mesmo_tipo_Agenda_w,
						ie_mesma_agenda_w,
						ie_mesmo_estab_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
				ie_bloqueia_w:= 'N';
			exception when others then
				ie_bloqueia_w:= 'N';
			end;
			end loop;
			close c01;
			
			if (ie_mesmo_tipo_Agenda_w	= 'N') or (ie_mesmo_tipo_Agenda_w	= 'S' and (ie_regra_Agenda_w	= 'A' or
				ie_regra_Agenda_w	= 'C' or 
				ie_regra_Agenda_w	= 'O' or 
				ie_regra_Agenda_w	= 'G' )) then


				open c03;
				loop
					fetch c03 into	nr_seq_agenda_cons_w,
							dt_agenda_w;
					EXIT WHEN NOT FOUND; /* apply on c03 */
					begin
					
					nr_seq_agenda_cons_w	:= nr_seq_agenda_cons_w;
					end;
				end loop;
				close c03;
		
				if (nr_seq_agenda_cons_w IS NOT NULL AND nr_seq_agenda_cons_w::text <> '') then
		
					if ((dt_return_w < dt_agenda_w + qt_dia_conv_w) or (coalesce(dt_return_w::text, '') = '')) then
						dt_return_w:= dt_agenda_w + qt_dia_conv_w;
					end if;
				else
					ie_bloqueia_w:= 'S';				
				end if;

			end if;
	exception when others then
		ie_bloqueia_w:= 'N';
	end;
	end loop;
	close c02;	
	
end if;	

dt_final_p 		:= dt_return_w;
ie_bloqueia_p	:= ie_bloqueia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tws_obter_agendamento_retorno ( cd_pessoa_fisica_p text, cd_convenio_p bigint, dt_agenda_p timestamp, cd_medico_p text, cd_especialidade_p bigint, dt_final_p INOUT timestamp, ie_bloqueia_p INOUT text ) FROM PUBLIC;

