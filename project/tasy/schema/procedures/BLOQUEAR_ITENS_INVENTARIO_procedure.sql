-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE bloquear_itens_inventario ( nr_sequencia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


nr_sequencia_w					bigint;
nr_sequencia_ww					bigint := 0;
nr_seq_material_w				bigint;
nr_seq_item_lote_w				bigint;
cd_material_w					bigint;
ds_material_w					varchar(255);
cd_local_estoque_w				bigint;
qt_saldo_w						inventario_material.qt_saldo%type;
dt_mesano_referencia_w			timestamp;
dt_mesano_vigente_w				timestamp;
cd_material_estoque_w			integer;
nr_seq_lote_fornec_w			bigint;
ie_estoque_lote_w				varchar(1);
ie_consignado_w					varchar(1);
cd_fornecedor_w					varchar(14);
qt_existe_w						bigint;
ds_lista_material_w				varchar(255) := '';
ds_lista_material_receb_w		varchar(255) := '';
ds_erro_w						varchar(255) := '';
ds_lista_bloqueados_w			varchar(255) := null;
ds_lista_saldo_divergente_w		varchar(255) := null;
qt_incorretos_w					integer;
cd_material_ww					integer;
vl_custo_medio_w				double precision;
ds_lista_sem_custo_w			varchar(255) := null;
ie_permite_custo_zerado_w		varchar(1);
ie_permite_saldo_divergente_w	varchar(1);
qt_estoque_w					inventario_material.qt_estoque%type;
ie_disp_cirurgia_w				varchar(1);
ie_disp_ag_cirur_w				varchar(1);
qt_cirurgia_w					double precision := 0;
qt_agenda_cirurgia_w			double precision := 0;
ds_lista_inv_consignado_w		varchar(2000) := '';
ds_lista_inv_nao_consignado_w	varchar(2000) := '';
ie_consignado_filtro_w			varchar(1);
ie_passou_w						boolean := false;
ie_desconsidera_saldo_kit_w		varchar(1);
qt_conv_estoque_w				double precision;
qt_kit_w						double precision	:= 0;
qt_kit_ww						double precision	:= 0;
ie_disp_comp_kit_estoque_w		varchar(1);
ie_disp_reg_kit_estoque_w		varchar(1);
ie_permite_pendencia_receb_w	varchar(1);
dt_bloqueio_w					timestamp;
ie_saldo_ambos_w				varchar(1);
ie_material_consignado_w		material.ie_consignado%type;
ie_permite_inventarios_local_w  varchar(1);
ie_tipo_inventario_atual_w      inventario.ie_consignado%type;
cd_material_inventario_w 		inventario_material.cd_material%type;
ds_lista_fornecedor_material_w	varchar(255);
ds_material_inventario_w		material.ds_material%type;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.cd_material,
	b.cd_local_estoque,
	coalesce(a.cd_fornecedor, b.cd_fornecedor),
	a.nr_seq_lote_fornec,
	substr(obter_se_material_estoque_lote(b.cd_estabelecimento, a.cd_material),1,1)
from	inventario_material a,
	inventario b
where	b.nr_sequencia	= a.nr_seq_inventario
and	a.nr_seq_inventario	= nr_sequencia_p
and	coalesce(qt_saldo::text, '') = '';

c02 CURSOR FOR
SELECT	cd_material_estoque
from (	select	cd_material_estoque
	from	material b,
		inventario_material a
	where	a.nr_seq_inventario	= nr_sequencia_p
	and	a.cd_material	= b.cd_material
	group by	cd_material_estoque, cd_fornecedor
	having count(*) > 1) alias1
group by cd_material_estoque;

c03 CURSOR FOR
SELECT	cd_material,
	obter_custo_medio_material(cd_estabelecimento_p, trunc(clock_timestamp(),'mm'), cd_material, CASE WHEN coalesce(cd_fornecedor::text, '') = '' THEN '0'  ELSE '1' END )
from	inventario_material
where	nr_seq_inventario = nr_sequencia_p;

c04 CURSOR FOR
SELECT	cd_material,
	a.cd_local_estoque,
	obter_saldo_disp_estoque(a.cd_estabelecimento, b.cd_material, a.cd_local_estoque, trunc(clock_timestamp(),'mm'))
from	inventario a,
	inventario_material b
where	a.nr_sequencia = b.nr_seq_inventario
and	a.nr_sequencia = nr_sequencia_p;

C05 CURSOR FOR
	SELECT	a.cd_material,
		substr(b.ds_material,1,255) ds_material
	from	inventario_material a,
		material b
	where	a.cd_material = b.cd_material
	and	a.nr_seq_inventario = nr_sequencia_p
	and	b.ie_consignado = ie_consignado_filtro_w;

C06 CURSOR FOR
	SELECT	a.nr_sequencia,
            b.cd_material,
            substr(obter_desc_material(b.cd_material),1,255) ds_material
	from	inventario a,
            inventario_material b
	where	a.nr_sequencia = b.nr_seq_inventario
    and     (a.dt_bloqueio IS NOT NULL AND a.dt_bloqueio::text <> '')
	and (ie_saldo_ambos_w = 'S' or
            ie_saldo_ambos_w = 'N' and ie_permite_inventarios_local_w = 'S' or
            ie_permite_inventarios_local_w = 'N')
    and     a.ie_consignado = ie_tipo_inventario_atual_w
    and	    a.nr_sequencia <> nr_sequencia_p
	and	    coalesce(a.dt_atualizacao_saldo::text, '') = ''
	and     	exists (	SELECT	1
			from    	inventario x,
				inventario_material y
			where   	x.nr_sequencia 	    = y.nr_seq_inventario
			and     	x.nr_sequencia 	    = nr_sequencia_p
			and	a.cd_estabelecimento = x.cd_estabelecimento
			and     	a.cd_local_estoque     = x.cd_local_estoque
			and     	b.cd_material 	    = y.cd_material)
	order   by 1,2;

C07 CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_lote_fornec
FROM	inventario_material_lote
WHERE	nr_seq_item = nr_seq_material_w
and	nr_seq_inventario = nr_sequencia_p;

C08 CURSOR FOR
SELECT	a.nr_seq_lote,
	coalesce(qt_estoque,0)
from	saldo_estoque_lote a
where	a.cd_material = cd_material_w
and	a.cd_local_estoque = cd_local_estoque_w
and	a.cd_estabelecimento = cd_estabelecimento_p
and	a.dt_mesano_referencia = dt_mesano_referencia_w
and	ie_consignado_w = 'N'
and	not exists (	select 	1
			from	inventario_material_lote b
			where	b.nr_seq_item = nr_seq_material_w
			and	a.nr_seq_lote = b.nr_seq_lote_fornec)

union all

select	a.nr_seq_lote,
	coalesce(qt_estoque,0)
from	fornecedor_mat_consig_lote a
where	a.cd_material = cd_material_w
and	a.cd_local_estoque = cd_local_estoque_w
and	a.cd_estabelecimento = cd_estabelecimento_p
and	dt_mesano_referencia = dt_mesano_referencia_w
and	a.cd_fornecedor = cd_fornecedor_w
and	ie_consignado_w = 'S'
and	not exists (	select 	1
			from	inventario_material_lote b
			where	b.nr_seq_item = nr_seq_material_w
			and	a.nr_seq_lote = b.nr_seq_lote_fornec);

C09 CURSOR FOR
SELECT  e.cd_material
from	inventario_material a,
	requisicao_pendente_receb_v b,
	item_requisicao_material c,
	sup_motivo_baixa_req d,
	estrutura_material_v e
where	b.nr_requisicao = c.nr_requisicao
and	c.cd_motivo_baixa = d.nr_sequencia
and	d.cd_motivo_baixa in (1,4)
and	coalesce(c.dt_recebimento::text, '') = ''
and	e.cd_material = c.cd_material
and	a.cd_material = e.cd_material_estoque
and	b.cd_local_estoque_destino = cd_local_estoque_w
and	a.nr_seq_inventario = nr_sequencia_p
group by e.cd_material;

C10 CURSOR FOR
	SELECT	b.cd_material cd_material,
			substr(obter_desc_material(b.cd_material),1,100) ds_material
	from	inventario a,
			inventario_material b
	where	a.nr_sequencia = b.nr_seq_inventario
	and	a.nr_sequencia = nr_sequencia_p
	and	a.cd_fornecedor <> b.cd_fornecedor
    group by  b.cd_material, substr(obter_desc_material(b.cd_material),1,100);
	


BEGIN

begin
select	dt_bloqueio,
		ie_consignado
into STRICT	dt_bloqueio_w,
        ie_tipo_inventario_atual_w 
from	inventario
where	nr_sequencia = nr_sequencia_p;
exception
when others then
	dt_bloqueio_w	:= null;
    ie_tipo_inventario_atual_w := null;
end;

if (dt_bloqueio_w IS NOT NULL AND dt_bloqueio_w::text <> '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(174258);
end if;

ie_permite_custo_zerado_w		:= 	obter_valor_param_usuario(143, 235, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);
ie_permite_saldo_divergente_w 	:= 	obter_valor_param_usuario(143, 242, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);
ie_permite_pendencia_receb_w	:= 	obter_valor_param_usuario(143, 373, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);
ie_saldo_ambos_w			    := 	obter_valor_param_usuario(143, 388, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);
ie_permite_inventarios_local_w  :=  obter_valor_param_usuario(143, 390, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);

select	coalesce(max(ie_consignado), 'N'),
	coalesce(max(ie_desconsidera_saldo_kit), 'N'),
	max(cd_local_estoque)
into STRICT	ie_consignado_w,
	ie_desconsidera_saldo_kit_w,
	cd_local_estoque_w
from	inventario
where	nr_sequencia = nr_sequencia_p;

select	max(dt_mesano_vigente),
		coalesce(max(ie_disp_cirurgia),'S'),
		coalesce(max(ie_disp_ag_cirur), 'N'),
		coalesce(max(ie_disp_comp_kit_estoque), 'N'),
		coalesce(max(ie_disp_reg_kit_estoque), 'N')
into STRICT	dt_mesano_vigente_w,
		ie_disp_cirurgia_w,
		ie_disp_ag_cirur_w,
		ie_disp_comp_kit_estoque_w,
		ie_disp_reg_kit_estoque_w
from 	parametro_estoque
where	cd_estabelecimento	= cd_estabelecimento_p;

if (ie_consignado_w = 'N') then
	begin
	select	count(*)
	into STRICT	qt_incorretos_w
	from	inventario_material a,
		material b
	where	a.cd_material = b.cd_material
	and	a.nr_seq_inventario = nr_sequencia_p
	and	b.ie_consignado = 1;

	if (qt_incorretos_w > 0) then
		ie_consignado_filtro_w := '1';
		open C05;
		loop
		fetch C05 into
			cd_material_w,
			ds_material_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin
			ds_lista_inv_nao_consignado_w := substr(ds_lista_inv_nao_consignado_w || cd_material_w || ' - ' || ds_material_w || chr(13) || chr(10) || '',1,255);
			end;
		end loop;
		close C05;
		CALL wheb_mensagem_pck.exibir_mensagem_abort(176491,'DS_MATERIAIS='||ds_lista_inv_nao_consignado_w);
	end if;
	end;
else
	begin
	open c10;
		loop
		fetch c10 into
			cd_material_inventario_w,
			ds_material_inventario_w;
		EXIT WHEN NOT FOUND; /* apply on c10 */
			begin			
			ds_lista_fornecedor_material_w :=  substr(ds_lista_fornecedor_material_w || cd_material_inventario_w || ' - ' || ds_material_inventario_w || chr(13) || chr(10) || '',1,255);
			end;
		end loop;
	close c10;

	select	count(*)
	into STRICT	qt_incorretos_w
	from	inventario_material a,
		material b
	where	a.cd_material = b.cd_material
	and	a.nr_seq_inventario = nr_sequencia_p
	and	b.ie_consignado = 0;

	if (qt_incorretos_w > 0) then
		ie_consignado_filtro_w := '0';
		open C05;
		loop
		fetch C05 into
			cd_material_w,
			ds_material_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin
			ds_lista_inv_consignado_w := substr(ds_lista_inv_consignado_w || cd_material_w || ' - ' || ds_material_w || chr(13) || chr(10) || '',1,255);
			end;
		end loop;
		close C05;
		CALL wheb_mensagem_pck.exibir_mensagem_abort(176494,'DS_MATERIAIS='||ds_lista_inv_consignado_w);
	end if;
	end;
end if;

open c02;
loop
fetch c02 into
	cd_material_estoque_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	ds_lista_material_w := substr(ds_lista_material_w || cd_material_estoque_w || ' - ',1,255);
	end;
end loop;
close c02;

if (ie_permite_pendencia_receb_w = 'N') then
	open C09;
	loop
	fetch C09 into
		cd_material_estoque_w;
	EXIT WHEN NOT FOUND; /* apply on C09 */
		begin
		ds_lista_material_receb_w := substr(ds_lista_material_receb_w || cd_material_estoque_w || '-',1,255);
		end;
	end loop;
	close C09;
end if;

if (ie_permite_custo_zerado_w = 'N') then
	begin
	ds_lista_sem_custo_w := null;
	open c03;
	loop
	fetch c03 into
		cd_material_ww,
		vl_custo_medio_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		if (vl_custo_medio_w <= 0) then
			ds_lista_sem_custo_w := substr(ds_lista_sem_custo_w || cd_material_ww || ' - ',1,255);
		end if;
		end;
	end loop;
	close c03;
	end;
end if;


if (ie_permite_saldo_divergente_w in ('N','P')) and (ie_consignado_w = 'N') then
	begin
	ds_lista_saldo_divergente_w :=  null;
	
	open c04;
	loop
	fetch c04 into
		cd_material_ww,
		cd_local_estoque_w,
		qt_saldo_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin
		if (ie_permite_saldo_divergente_w = 'N') then
			begin
			qt_estoque_w := obter_saldo_estoque(cd_estabelecimento_p, cd_material_ww, cd_local_estoque_w, trunc(clock_timestamp(),'mm'), qt_estoque_w);
			
			if (qt_saldo_w <> qt_estoque_w) then
				ds_lista_saldo_divergente_w := substr(ds_lista_saldo_divergente_w || cd_material_ww || ' - ',1,255);
			end if;
			end;
		elsif (ie_permite_saldo_divergente_w = 'P') then
			begin
			if (ie_disp_cirurgia_w = 'S') then
				/*busca as quantidades que estao em cirurgia no local do setor da cirurgia*/

				select	coalesce(sum(qt_total_dispensar),0)
				into STRICT	qt_cirurgia_w
				from	setor_atendimento c,
					cirurgia b,
					material x,
					prescr_material a,
					prescr_medica m
				where	a.cd_motivo_baixa		= 0
				and	a.cd_material		= x.cd_material
				and	x.cd_material_estoque	= cd_material_ww
				and	m.nr_prescricao = a.nr_prescricao
				and	m.nr_prescricao		= b.nr_prescricao
				and	b.cd_setor_atendimento	= c.cd_setor_atendimento
				and	c.cd_local_estoque	= cd_local_estoque_w
				and	a.ie_status_cirurgia	in ('CB','AD')
				and	coalesce(a.ie_baixa_estoque_cir::text, '') = '';
			elsif (ie_disp_cirurgia_w = 'C') then
				/*busca as quantidades que estao em cirurgia no local de consistencia, se nao ter local de consistencia, busca do local do setor da cirurgia*/

				select	coalesce(sum(qt_total_dispensar),0)
				into STRICT	qt_cirurgia_w
				from	setor_atendimento c,
					cirurgia b,
					material x,
					prescr_material a,
					prescr_medica m
				where	a.cd_motivo_baixa	= 0
				and	a.cd_material		= x.cd_material
				and	x.cd_material_estoque	= cd_material_ww
				and	m.nr_prescricao = a.nr_prescricao
				and	m.nr_prescricao		= b.nr_prescricao
				and	b.cd_setor_atendimento	= c.cd_setor_atendimento
				and	coalesce(a.cd_local_estoque, c.cd_local_estoque) = cd_local_estoque_w
				and	a.ie_status_cirurgia	in ('CB','AD')
				and	coalesce(a.ie_baixa_estoque_cir::text, '') = '';
			else
				qt_cirurgia_w := 0;
			end if;

			if (ie_disp_ag_cirur_w = 'S') then
				select	coalesce(sum(qt_total_dispensar),0)
				into STRICT	qt_agenda_cirurgia_w
				from	setor_atendimento c,
					material x,
					prescr_medica b,
					prescr_material a,
					prescr_medica m
				where	m.nr_prescricao 	= a.nr_prescricao
				and	m.nr_prescricao		= b.nr_prescricao
				and	b.cd_setor_atendimento	= c.cd_setor_atendimento
				and	a.cd_material		= x.cd_material
				and	c.cd_local_estoque	= cd_local_estoque_w
				and	x.cd_material_estoque	= cd_material_w
				and	a.cd_motivo_baixa	= 0
				and	a.ie_status_cirurgia	= 'CB'
				and	(b.nr_seq_agenda IS NOT NULL AND b.nr_seq_agenda::text <> '')
				and	coalesce(b.nr_cirurgia::text, '') = ''
				and not exists (
					SELECT	1
					from	cirurgia c
					where	c.nr_prescricao = a.nr_prescricao);
			end if;

			qt_cirurgia_w := (qt_cirurgia_w + qt_agenda_cirurgia_w);

			if (qt_cirurgia_w > 0) then
				ds_lista_saldo_divergente_w := substr(ds_lista_saldo_divergente_w || cd_material_ww || ' - ',1,255);
			end if;
			end;
		end if;
		end;
	end loop;
	close c04;
	end;
end if;

/* Consistencia dos itens que ja possuem bloqueio em outros inventarios */

open C06;
loop
fetch C06 into
	nr_sequencia_w,
	cd_material_w,
	ds_material_w;
EXIT WHEN NOT FOUND; /* apply on C06 */
	begin
	if (nr_sequencia_ww = nr_sequencia_w) then
		ds_lista_bloqueados_w := substr(ds_lista_bloqueados_w || cd_material_w || ', ',1,255);
	else
		if (ie_passou_w) then
			ds_lista_bloqueados_w := substr(ds_lista_bloqueados_w || chr(13) || chr(10) || WHEB_MENSAGEM_PCK.get_texto(297856,'NR_SEQUENCIA_W='||nr_sequencia_w||';CD_MATERIAL_W='||cd_material_w),1,255);
		else
			ds_lista_bloqueados_w := substr(ds_lista_bloqueados_w || WHEB_MENSAGEM_PCK.get_texto(297856,'NR_SEQUENCIA_W='||nr_sequencia_w||';CD_MATERIAL_W='||cd_material_w),1,255);
		end if;
	end if;
	ie_passou_w 	:= true;
	nr_sequencia_ww   := nr_sequencia_w;
	end;
end loop;
close C06;

if	(((ds_lista_material_w = '')  or (coalesce(ds_lista_material_w::text, '') = '')) and
	((ds_lista_sem_custo_w = '')  or (coalesce(ds_lista_sem_custo_w::text, '') = '')) and (coalesce(ds_lista_material_receb_w,'X') = 'X') and (coalesce(ds_lista_saldo_divergente_w::text, '') = '')) and (coalesce(ds_lista_bloqueados_w,'X') = 'X')then
	begin
	open c01;
	loop
	fetch c01 into
		nr_seq_material_w,
		cd_material_w,
		cd_local_estoque_w,
		cd_fornecedor_w,
		nr_seq_lote_fornec_w,
		ie_estoque_lote_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		if (ie_consignado_w = 'N') then
			select	/*+ index (s salesto_i2) */				coalesce(max(s.dt_mesano_referencia),trunc(clock_timestamp(), 'month'))
			into STRICT	dt_mesano_referencia_w
			from 	saldo_estoque s
			where	s.cd_estabelecimento	= cd_estabelecimento_p
			and 	s.cd_material		= cd_material_w
			and	s.cd_local_estoque		= cd_local_estoque_w
			and 	s.dt_mesano_referencia 	>= dt_mesano_vigente_w;
		elsif (ie_consignado_w = 'S') then
			select	coalesce(max(s.dt_mesano_referencia),trunc(clock_timestamp(), 'month'))
			into STRICT	dt_mesano_referencia_w
			from 	fornecedor_mat_consignado s
			where	s.cd_estabelecimento	= cd_estabelecimento_p
			and 	s.cd_material		= cd_material_w
			and	s.cd_local_estoque		= cd_local_estoque_w
			and 	s.dt_mesano_referencia 	>= dt_mesano_vigente_w
			and	s.cd_fornecedor		= cd_fornecedor_w;
		end if;

		if (coalesce(nr_seq_lote_fornec_w::text, '') = '') or (ie_estoque_lote_w = 'N')  then
			begin
			if (ie_consignado_w = 'N') then
				begin
				qt_saldo_w	:=	obter_saldo_disp_estoque(cd_estabelecimento_p, cd_material_w, cd_local_estoque_w, dt_mesano_referencia_w);

				if (ie_desconsidera_saldo_kit_w = 'S') then
					qt_saldo_w	:=	qt_saldo_w + sup_obter_qt_material_kit(cd_estabelecimento_p, cd_local_estoque_w, cd_material_w);
				end if;

				qt_estoque_w := obter_saldo_estoque(cd_estabelecimento_p, cd_material_w, cd_local_estoque_w, trunc(clock_timestamp(),'mm'), qt_estoque_w);
				
				if (ie_saldo_ambos_w = 'S') and (ie_estoque_lote_w = 'N') then
					select	coalesce(ie_consignado, 0)
					into STRICT	ie_material_consignado_w
					from	material
					where	cd_material = cd_material_w;
					
					if (ie_material_consignado_w = 2) then
						-- Somar o saldo nao consignado com o saldo consignado;
						qt_saldo_w := qt_saldo_w + obter_saldo_disp_consig(cd_estabelecimento_p, null, cd_material_w, cd_local_estoque_w, null);
						qt_estoque_w := qt_estoque_w + obter_saldo_estoque_consig(cd_estabelecimento_p, null, cd_material_w, cd_local_estoque_w);
					end if;
				end if;
				end;
			elsif (ie_consignado_w = 'S') then
				select	coalesce(obter_saldo_estoque_consig(
					cd_estabelecimento_p,
					cd_fornecedor_w,
					cd_material_w,
					cd_local_estoque_w),0)
				into STRICT	qt_saldo_w
				;
				qt_estoque_w := qt_saldo_w;
			end if;
			end;
		else
			begin
			if (ie_consignado_w = 'N') then
				begin
				select	coalesce(sum(qt_estoque),0)
				into STRICT	qt_saldo_w
				from	saldo_estoque_lote
				where	cd_estabelecimento		= cd_estabelecimento_p
				and	cd_local_estoque		= cd_local_estoque_w
				and	cd_material		= cd_material_w
				and	dt_mesano_referencia	= dt_mesano_referencia_w
				and	nr_seq_lote		= nr_seq_lote_fornec_w;
				qt_estoque_w := obter_saldo_estoque(cd_estabelecimento_p, cd_material_w, cd_local_estoque_w, trunc(clock_timestamp(),'mm'), qt_estoque_w);
				end;
			elsif (ie_consignado_w = 'S') then
				begin
				select	coalesce(sum(qt_estoque),0)
				into STRICT	qt_saldo_w
				from	fornecedor_mat_consig_lote
				where	cd_estabelecimento		= cd_estabelecimento_p
				and	cd_local_estoque		= cd_local_estoque_w
				and	cd_material		= cd_material_w
				and	dt_mesano_referencia	= dt_mesano_referencia_w
				and	nr_seq_lote		= nr_seq_lote_fornec_w
				and	cd_fornecedor		= cd_fornecedor_w;
				qt_estoque_w := qt_saldo_w;
				end;
			end if;
			end;
		end if;


		update	inventario_material
		set	qt_saldo		= qt_saldo_w,
			qt_estoque	= qt_estoque_w,
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_sequencia	= nr_seq_material_w;

		if (ie_estoque_lote_w = 'S') then
			begin
			CALL sup_ajustar_saldo_lote(cd_estabelecimento_p, dt_mesano_referencia_w, cd_material_w);

			update	inventario_material_lote
			set	qt_saldo = 0
			where	nr_seq_item = nr_seq_material_w;

			open C07;
			loop
			fetch C07 into
				nr_seq_item_lote_w,
				nr_seq_lote_fornec_w;
			EXIT WHEN NOT FOUND; /* apply on C07 */
				begin
				if (ie_consignado_w = 'S') then
					begin
					if (coalesce(cd_fornecedor_w::text, '') = '') then
                        select	coalesce(max(qt_estoque),0)
                        into STRICT qt_saldo_w
                        from	fornecedor_mat_consig_lote a
                        where	cd_material = cd_material_w
                        and	cd_local_estoque = cd_local_estoque_w
                        and	cd_estabelecimento = cd_estabelecimento_p
                        and	dt_mesano_referencia = dt_mesano_referencia_w
                        and a.nr_seq_lote = nr_seq_lote_fornec_w
                        and obter_se_mat_consignado(a.cd_material) in ('1', '2');
                    else
                        select	coalesce(sum(qt_estoque),0)
                        into STRICT	qt_saldo_w
                        from	fornecedor_mat_consig_lote
                        where	cd_estabelecimento		= cd_estabelecimento_p
                        and	cd_local_estoque		= cd_local_estoque_w
                        and	cd_material		= cd_material_w
                        and	dt_mesano_referencia	= dt_mesano_referencia_w
                        and	nr_seq_lote		= nr_seq_lote_fornec_w
                        and	cd_fornecedor		= cd_fornecedor_w;
                    end if;
					end;
				elsif (ie_consignado_w = 'N') then
					begin
					qt_saldo_w	:=	obter_saldo_disp_estoque(cd_estabelecimento_p, cd_material_w, cd_local_estoque_w, dt_mesano_referencia_w, nr_seq_lote_fornec_w);

					if (ie_desconsidera_saldo_kit_w = 'S') then
						qt_saldo_w	:=	qt_saldo_w + sup_obter_qt_material_kit(cd_estabelecimento_p, cd_local_estoque_w, cd_material_w, nr_seq_lote_fornec_w);
					end if;
					end;
				end if;

				update	inventario_material_lote
				set	qt_saldo = qt_saldo_w
				where	nr_sequencia = nr_seq_item_lote_w;
				end;
			end loop;
			close C07;

			open C08;
			loop
			fetch C08 into
				nr_seq_lote_fornec_w,
				qt_saldo_w;
			EXIT WHEN NOT FOUND; /* apply on C08 */
				begin
				insert into inventario_material_lote(
					nr_seq_item,
					nr_seq_inventario,
					nr_seq_lote_fornec,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nm_usuario,
					dt_atualizacao,
					nr_sequencia,
					qt_saldo)
				values (nr_seq_material_w,
					nr_sequencia_p,
					nr_seq_lote_fornec_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nextval('inventario_material_lote_seq'),
					qt_saldo_w);
				end;
			end loop;
			close C08;
			end;
		end if;

		if (ie_consignado_w = 'N') then
			update	saldo_estoque
			set	ie_bloqueio_inventario	= 'S'
			where	cd_estabelecimento		= cd_estabelecimento_p
			and	cd_local_estoque		= cd_local_estoque_w
			and	cd_material		= cd_material_w
			and	dt_mesano_referencia	= dt_mesano_referencia_w;


			if (NOT FOUND) then
				insert into saldo_estoque(
					cd_estabelecimento,
					cd_local_estoque,
					cd_material,
					dt_atualizacao,
					dt_mesano_referencia,
					ie_bloqueio_inventario,
					nm_usuario,
					qt_estoque,
					qt_reservada,
					qt_reservada_requisicao,
					vl_estoque)
				values (
					cd_estabelecimento_p,
					cd_local_estoque_w,
					cd_material_w,
					clock_timestamp(),
					dt_mesano_referencia_w,
					'S',
					nm_usuario_p,
					0,
					0,
					0,
					0);
			end if;
		elsif (ie_consignado_w = 'S') then
            if (cd_fornecedor_w IS NOT NULL AND cd_fornecedor_w::text <> '') then
                update	fornecedor_mat_consignado
                set	ie_bloqueio_inventario	= 'S'
                where	cd_estabelecimento		= cd_estabelecimento_p
                and	cd_local_estoque		= cd_local_estoque_w
                and	cd_material		= cd_material_w
                and	dt_mesano_referencia	= dt_mesano_referencia_w
                and	cd_fornecedor		= cd_fornecedor_w;
                if (NOT FOUND) then
                    insert into fornecedor_mat_consignado(
                        cd_estabelecimento,
                        cd_fornecedor,
                        cd_local_estoque,
                        cd_material,
                        dt_atualizacao,
                        dt_mesano_referencia,
                        ie_bloqueio_inventario,
                        nm_usuario,
                        qt_estoque)
                    values ( cd_estabelecimento_p,
                        cd_fornecedor_w,
                        cd_local_estoque_w,
                        cd_material_w,
                        clock_timestamp(),
                        dt_mesano_referencia_w,
                        'S',
                        nm_usuario_p,
                        0);
                end if;
            else
                update	fornecedor_mat_consignado
                set	ie_bloqueio_inventario	= 'S'
                where	cd_estabelecimento		= cd_estabelecimento_p
                and	cd_local_estoque		= cd_local_estoque_w
                and	cd_material		= cd_material_w
                and	dt_mesano_referencia	= dt_mesano_referencia_w;
            end if;
		end if;

		end;
	end loop;
	close c01;

	update	inventario
	set	dt_bloqueio = clock_timestamp(),
		nm_usuario_bloqueio = nm_usuario_p
	where	nr_sequencia = nr_sequencia_p;

	update	inventario_material
	set	ie_status_inventario = 'P',
		ie_contagem_atual = '1'
	where	nr_seq_inventario = nr_sequencia_p;
	end;
else
	begin
	if (ds_lista_material_w IS NOT NULL AND ds_lista_material_w::text <> '') then
		ds_erro_w := 	substr(WHEB_MENSAGEM_PCK.get_texto(279637) || chr(13) || chr(10) || chr(13) || chr(10) ||
				substr(ds_lista_material_w,1,length(ds_lista_material_w)-1),1,255);
	end if;

	if (ds_lista_sem_custo_w IS NOT NULL AND ds_lista_sem_custo_w::text <> '') then
		ds_erro_w := 	substr(WHEB_MENSAGEM_PCK.get_texto(279638) || chr(13) || chr(10) || chr(13) || chr(10) ||
				substr(ds_lista_sem_custo_w,1,length(ds_lista_sem_custo_w)-1),1,255);
	end if;

	if (ds_lista_saldo_divergente_w IS NOT NULL AND ds_lista_saldo_divergente_w::text <> '') then
		ds_erro_w := 	substr(WHEB_MENSAGEM_PCK.get_texto(279639) || chr(13) || chr(10) || chr(13) || chr(10) ||
				substr(ds_lista_saldo_divergente_w,1,length(ds_lista_saldo_divergente_w)-1),1,255);
	end if;

	if (coalesce(ds_lista_material_receb_w,'X') <> 'X') then
		ds_erro_w := 	substr(WHEB_MENSAGEM_PCK.get_texto(279640) || chr(13) || chr(10) || chr(13) || chr(10) ||
						substr(ds_lista_material_receb_w,1,length(ds_lista_material_receb_w)-1),1,255);
	end if;
	end;
end if;

if (coalesce(ds_lista_bloqueados_w,'X') <> 'X') then
	ds_erro_w := 	substr(WHEB_MENSAGEM_PCK.get_texto(279641) || chr(13) || chr(10) || chr(13) || chr(10) ||
			substr(ds_lista_bloqueados_w,1,length(ds_lista_bloqueados_w)-1),1,255);
end if;

if (ds_lista_fornecedor_material_w IS NOT NULL AND ds_lista_fornecedor_material_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1163599, 'CD_MATERIAL=' || ';DS_MATERIAL=' || ds_lista_fornecedor_material_w);
end if;		

ds_erro_p := ds_erro_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE bloquear_itens_inventario ( nr_sequencia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

