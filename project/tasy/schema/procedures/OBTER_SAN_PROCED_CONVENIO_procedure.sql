-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_san_proced_convenio (ie_derivado_exame_p bigint, nr_sequencia_p bigint, cd_estabelecimento_p bigint, ie_tipo_atendimento_p bigint, ie_tipo_convenio_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_setor_p INOUT bigint, cd_procedimento_p INOUT bigint, ie_origem_proced_p INOUT bigint, nr_seq_derivado_p bigint, nr_seq_proc_interno_p bigint, dt_vigencia_p timestamp, nr_seq_proc_interno_regra_p INOUT bigint, qt_exames_p INOUT bigint, ie_irradiado_p text default null, ie_lavado_p text default null, ie_filtrado_p text default null, ie_aliquotado_p text default null, ie_aferese_p text default null, ie_pool_p text default null) AS $body$
DECLARE


		
cd_procedimento_w		bigint;
cd_setor_exclusivo_w		integer;
ie_origem_proced_cursor_w	bigint;
ie_origem_proced_w		bigint;
nr_seq_convenio_w		bigint;
ie_origem_proced_sus_w		bigint;
cd_edicao_amb_w			integer;
nr_seq_proc_convenio_w		bigint;
nr_seq_proc_int_conv_w		bigint;
qt_exames_w			integer;
dt_vigencia_w			timestamp;
ie_origem_proc_filtro_w		bigint;

c01 CURSOR FOR
	SELECT	nr_sequencia
	from	san_derivado_convenio
	where	coalesce(cd_convenio, cd_convenio_p)		= cd_convenio_p
	and	coalesce(cd_edicao_amb, cd_edicao_amb_w)	= cd_edicao_amb_w
	and	nr_seq_derivado				= nr_sequencia_p
	--and	ie_origem_proced			= ie_origem_proced_sus_w  OS  239278
	and	((((ie_origem_proced = ie_origem_proced_sus_w) or (coalesce(cd_procedimento::text, '') = '')) and (coalesce(ie_origem_proced_sus::text, '') = '')) or
		(ie_origem_proced_sus IS NOT NULL AND ie_origem_proced_sus::text <> '' AND ie_origem_proced_sus = ie_origem_proced_cursor_w) or
		((coalesce(ie_origem_proced::text, '') = '') and (nr_Seq_proc_interno IS NOT NULL AND nr_Seq_proc_interno::text <> '')))
	and	coalesce(coalesce(ie_irradiado,ie_irradiado_p),'N')		= coalesce(ie_irradiado_p,'N')
	and	coalesce(coalesce(ie_lavado,ie_lavado_p),'N')		= coalesce(ie_lavado_p,'N')
	and	coalesce(coalesce(ie_filtrado,ie_filtrado_p),'N')		= coalesce(ie_filtrado_p,'N')
	and	coalesce(coalesce(ie_aliquotado,ie_aliquotado_p),'N')	= coalesce(ie_aliquotado_p,'N')
	and	coalesce(coalesce(ie_aferese,ie_aferese_p),'N')		= coalesce(ie_aferese_p,'N')
	and	coalesce(coalesce(ie_pool,ie_pool_p),'N')			= coalesce(ie_pool_p,'N')
	and	coalesce(dt_inicio_vigencia,clock_timestamp()) 	<= clock_timestamp()
	order by coalesce(cd_edicao_amb, 0), coalesce(cd_convenio, 0), coalesce(dt_inicio_vigencia,clock_timestamp());

c04 CURSOR FOR
	SELECT 	a.nr_sequencia
	from	proc_interno_conv a
	where 	a.nr_seq_proc_interno = nr_seq_proc_int_conv_w
	and	coalesce(a.cd_convenio, cd_convenio_p) = cd_convenio_p
	and	coalesce(a.cd_edicao_amb, cd_edicao_amb_w) = cd_edicao_amb_w 
	and   	coalesce(a.ie_tipo_atendimento, ie_tipo_atendimento_p) = ie_tipo_atendimento_p
	and 	((a.ie_origem_proc_filtro = ie_origem_proc_filtro_w) or (coalesce(a.ie_origem_proc_filtro::text, '') = ''))
	and 	((a.cd_estabelecimento   = cd_estabelecimento_p) or (coalesce(a.cd_estabelecimento::text, '') = ''))
	and 	((a.cd_setor_atendimento  = coalesce(cd_setor_p,0) and coalesce(a.ie_tipo_setor,'P') = 'P') or (coalesce(a.cd_setor_atendimento::text, '') = ''))
	and	dt_vigencia_w between coalesce(a.dt_inicio_vigencia, dt_vigencia_w) and coalesce(a.dt_final_vigencia, dt_vigencia_w)
	and (coalesce(a.cd_categoria,coalesce(cd_categoria_p,'0')) =  coalesce(cd_categoria_p,'0'))
	and	coalesce(a.ie_situacao,'A') = 'A'
	order by coalesce(a.cd_edicao_amb, 0), coalesce(a.cd_convenio, 0), coalesce(a.ie_tipo_atendimento, 0);
	
c03 CURSOR FOR
	SELECT 	a.nr_sequencia
	from	proc_interno_conv a
	where 	a.nr_seq_proc_interno = nr_seq_proc_interno_p
	and	coalesce(a.cd_convenio, cd_convenio_p) = cd_convenio_p
	and	coalesce(a.cd_edicao_amb, cd_edicao_amb_w) = cd_edicao_amb_w 
	and   	coalesce(a.ie_tipo_atendimento, ie_tipo_atendimento_p) = ie_tipo_atendimento_p
	and 	((a.ie_origem_proc_filtro = ie_origem_proc_filtro_w) or (coalesce(a.ie_origem_proc_filtro::text, '') = ''))
	and 	((a.cd_estabelecimento   = cd_estabelecimento_p) or (coalesce(a.cd_estabelecimento::text, '') = ''))
	and 	((a.cd_setor_atendimento  = coalesce(cd_setor_p,0) and coalesce(a.ie_tipo_setor,'P') = 'P') or (coalesce(a.cd_setor_atendimento::text, '') = ''))
	and	dt_vigencia_w between coalesce(a.dt_inicio_vigencia, dt_vigencia_w) and coalesce(a.dt_final_vigencia, dt_vigencia_w)
	and (coalesce(a.cd_categoria,coalesce(cd_categoria_p,'0')) =  coalesce(cd_categoria_p,'0'))
	and	coalesce(a.ie_situacao,'A') = 'A'
	order by coalesce(a.cd_edicao_amb, 0), coalesce(a.cd_convenio, 0), coalesce(a.ie_tipo_atendimento, 0);	


c02 CURSOR FOR
	SELECT	nr_sequencia
	from	san_exame_convenio
	where	coalesce(cd_convenio, cd_convenio_p)		= cd_convenio_p
	and	coalesce(cd_edicao_amb, cd_edicao_amb_w)	= cd_edicao_amb_w
	and	nr_seq_exame				= nr_sequencia_p
	--and	ie_origem_proced			= ie_origem_proced_sus_w
	and	coalesce(ie_origem_proced_sus,coalesce(ie_origem_proced_cursor_w,0)) = coalesce(ie_origem_proced_cursor_w,0)
	and	coalesce(dt_inicio_vigencia,clock_timestamp()) 	<= clock_timestamp()
	and	coalesce(nr_seq_derivado, nr_seq_derivado_p) = nr_seq_derivado_p
	order by coalesce(cd_edicao_amb, 0), coalesce(cd_convenio, 0), coalesce(dt_inicio_vigencia,clock_timestamp()), coalesce(nr_seq_derivado, 0);

BEGIN
ie_origem_proc_filtro_w := Obter_Origem_Proced_Cat(cd_estabelecimento_p, ie_tipo_atendimento_p, ie_tipo_convenio_p, cd_convenio_p, cd_categoria_p);
dt_vigencia_w	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_vigencia_p, clock_timestamp()));

ie_origem_proced_sus_w		:= obter_origem_proced(cd_estabelecimento_p,
					ie_tipo_atendimento_p, ie_tipo_convenio_p, cd_convenio_p);
					
select	OBTER_EDICAO_AMB(cd_estabelecimento_p,cd_convenio_p,cd_categoria_p, dt_vigencia_p)			
into STRICT	cd_edicao_amb_w
;

if (coalesce(cd_edicao_amb_w::text, '') = '') then
	select	coalesce(max(cd_edicao_amb),0)
	into STRICT	cd_edicao_amb_w
	from 	convenio_amb
	where (cd_estabelecimento     = cd_estabelecimento_p)
	  and (cd_convenio            = cd_convenio_p)
	  and (cd_categoria           = cd_categoria_p)
	  and (coalesce(ie_situacao,'A')   = 'A')
	  and (dt_inicio_vigencia     = (SELECT max(dt_inicio_vigencia)
					 from convenio_amb a
					 where (a.cd_estabelecimento  = cd_estabelecimento_p)
					   and (a.cd_convenio         = cd_convenio_p)
					   and (a.cd_categoria        = cd_categoria_p)
					   and (coalesce(a.ie_situacao,'A')= 'A')
					   and (a.dt_inicio_vigencia <=  clock_timestamp())));
end if;
				
select	max(ie_origem_proced)
into STRICT	ie_origem_proced_cursor_w
from	edicao_amb
where	cd_edicao_amb	= cd_edicao_amb_w;

if (ie_derivado_exame_p = 0) then
	if (nr_seq_proc_interno_p IS NOT NULL AND nr_seq_proc_interno_p::text <> '') then
		open c03;
		loop
			fetch c03 into nr_seq_proc_convenio_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
		end loop;
		close c03;
		if (nr_seq_proc_convenio_w IS NOT NULL AND nr_seq_proc_convenio_w::text <> '') then
			select	a.cd_procedimento,
				a.ie_origem_proced,
				b.cd_setor_exclusivo
			into STRICT	cd_procedimento_w,
				ie_origem_proced_w,
				cd_setor_exclusivo_w
			from	procedimento b,
				proc_interno_conv a
			where	a.cd_procedimento	= b.cd_procedimento
			and	a.ie_origem_proced	= b.ie_origem_proced
			and	a.nr_sequencia		= nr_seq_proc_convenio_w;
		else
			SELECT	a.cd_procedimento,
				a.ie_origem_proced,
				b.cd_setor_exclusivo
			INTO STRICT	cd_procedimento_w,
				ie_origem_proced_w,
				cd_setor_exclusivo_w
			FROM	procedimento b,
				proc_interno a
			WHERE	a.cd_procedimento	= b.cd_procedimento
			AND	a.ie_origem_proced	= b.ie_origem_proced
			AND	a.nr_sequencia		= nr_seq_proc_interno_p;

		end if;
		
	else	
		open c01;
		loop
		fetch c01 into nr_seq_convenio_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		
		end loop;
		close c01;

		if (nr_seq_convenio_w IS NOT NULL AND nr_seq_convenio_w::text <> '') then
			select	a.cd_procedimento,
				a.ie_origem_proced,
				b.cd_setor_exclusivo,
				a.nr_seq_proc_interno,
				a.qt_proc_conta
			into STRICT	cd_procedimento_w,
				ie_origem_proced_w,
				cd_setor_exclusivo_w,
				nr_seq_proc_int_conv_w,
				qt_exames_w
			FROM san_derivado_convenio a
LEFT OUTER JOIN procedimento b ON (a.cd_procedimento = b.cd_procedimento AND a.ie_origem_proced = b.ie_origem_proced)
WHERE a.nr_sequencia		= nr_seq_convenio_w;
			
			if (nr_seq_proc_int_conv_w IS NOT NULL AND nr_seq_proc_int_conv_w::text <> '') then			
				nr_seq_proc_convenio_w	:= null;
				open c04;
				loop
					fetch c04 into nr_seq_proc_convenio_w;
					EXIT WHEN NOT FOUND; /* apply on c04 */
				end loop;
				close c04;
				
				if (nr_seq_proc_convenio_w IS NOT NULL AND nr_seq_proc_convenio_w::text <> '') then
					select	a.cd_procedimento,
						a.ie_origem_proced,
						b.cd_setor_exclusivo
					into STRICT	cd_procedimento_w,
						ie_origem_proced_w,
						cd_setor_exclusivo_w
					from	procedimento b,
						proc_interno_conv a
					where	a.cd_procedimento	= b.cd_procedimento
					and	a.ie_origem_proced	= b.ie_origem_proced
					and	a.nr_sequencia		= nr_seq_proc_convenio_w;
				else
					SELECT	a.cd_procedimento,
						a.ie_origem_proced,
						b.cd_setor_exclusivo
					INTO STRICT	cd_procedimento_w,
						ie_origem_proced_w,
						cd_setor_exclusivo_w
					FROM	procedimento b,
						proc_interno a
					WHERE	a.cd_procedimento	= b.cd_procedimento
					AND	a.ie_origem_proced	= b.ie_origem_proced
					AND	a.nr_sequencia		= nr_seq_proc_int_conv_w;

				end if;
			
			end if;			
		else
				begin
				select	a.cd_procedimento,
					a.ie_origem_proced,
					b.cd_setor_exclusivo
				into STRICT	cd_procedimento_w,
					ie_origem_proced_w,
					cd_setor_exclusivo_w
				from	san_derivado a,
					procedimento b
				where	a.nr_sequencia		= nr_sequencia_p
				and	a.cd_procedimento	= b.cd_procedimento
				and	a.ie_origem_proced	= b.ie_origem_proced;
				exception
				when others then
					cd_procedimento_w	:= null;
					ie_origem_proced_w	:= null;
					cd_setor_exclusivo_w	:= null;
				end;
		end if;
	end if;
else
	if (nr_seq_proc_interno_p IS NOT NULL AND nr_seq_proc_interno_p::text <> '') then
		open c03;
		loop
			fetch c03 into nr_seq_proc_convenio_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
		end loop;
		close c03;
		if (nr_seq_proc_convenio_w IS NOT NULL AND nr_seq_proc_convenio_w::text <> '') then
			select	a.cd_procedimento,
				a.ie_origem_proced,
				b.cd_setor_exclusivo
			into STRICT	cd_procedimento_w,
				ie_origem_proced_w,
				cd_setor_exclusivo_w
			from	procedimento b,
				proc_interno_conv a
			where	a.cd_procedimento	= b.cd_procedimento
			and	a.ie_origem_proced	= b.ie_origem_proced
			and	a.nr_sequencia		= nr_seq_proc_convenio_w;
		else
			SELECT	a.cd_procedimento,
				a.ie_origem_proced,
				b.cd_setor_exclusivo
			INTO STRICT	cd_procedimento_w,
				ie_origem_proced_w,
				cd_setor_exclusivo_w
			FROM	procedimento b,
				proc_interno a
			WHERE	a.cd_procedimento	= b.cd_procedimento
			AND	a.ie_origem_proced	= b.ie_origem_proced
			AND	a.nr_sequencia		= nr_seq_proc_interno_p;
		end if;	
	else
		open c02;
		loop
			fetch c02 into nr_seq_convenio_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
		end loop;
		close c02;

		if (nr_seq_convenio_w IS NOT NULL AND nr_seq_convenio_w::text <> '') then
			select	a.cd_procedimento,
				a.ie_origem_proced,
				b.cd_setor_exclusivo,
				a.qt_exame_conta
			into STRICT	cd_procedimento_w,
				ie_origem_proced_w,
				cd_setor_exclusivo_w,
				qt_exames_w
			from	procedimento b,
				san_exame_convenio a
			where	a.cd_procedimento	= b.cd_procedimento
			and	a.ie_origem_proced	= b.ie_origem_proced
			and	a.nr_sequencia		= nr_seq_convenio_w;
		end if;
	end if;
end if;

cd_setor_p			:= coalesce(cd_setor_exclusivo_w, cd_setor_p);
cd_procedimento_p		:= coalesce(cd_procedimento_w, cd_procedimento_p);
ie_origem_proced_p		:= coalesce(ie_origem_proced_w, ie_origem_proced_p);
nr_seq_proc_interno_regra_p	:= nr_seq_proc_int_conv_w;
qt_exames_p			:= qt_exames_w;	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_san_proced_convenio (ie_derivado_exame_p bigint, nr_sequencia_p bigint, cd_estabelecimento_p bigint, ie_tipo_atendimento_p bigint, ie_tipo_convenio_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_setor_p INOUT bigint, cd_procedimento_p INOUT bigint, ie_origem_proced_p INOUT bigint, nr_seq_derivado_p bigint, nr_seq_proc_interno_p bigint, dt_vigencia_p timestamp, nr_seq_proc_interno_regra_p INOUT bigint, qt_exames_p INOUT bigint, ie_irradiado_p text default null, ie_lavado_p text default null, ie_filtrado_p text default null, ie_aliquotado_p text default null, ie_aferese_p text default null, ie_pool_p text default null) FROM PUBLIC;

