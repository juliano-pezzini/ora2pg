-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_gerar_os_pend_suporte () AS $body$
DECLARE


nr_seq_grupo_w				grupo_suporte.nr_sequencia%type;
ds_grupo_w					grupo_suporte.ds_grupo%type;
nr_seq_ordem_serv_w			man_ordem_servico.nr_sequencia%type;
nr_sequencia_w				os_pend_suporte.nr_sequencia%type;
qt_os_w						bigint;
qt_os_30_w					bigint;
ie_suporte_w				varchar(1);
ie_30_dias_w				varchar(1);

/* Obter cada grupo individualmente */


/* Nao e verificado se o grupo esta ativo */


/* para buscar tambem OSs que possam estar perdidas */

c01 CURSOR FOR
SELECT	nr_sequencia,
		ds_grupo
from	grupo_suporte
where	nr_seq_gerencia_sup in (5,58,196)
and		nr_sequencia not in (27,70,85)
order by 1;

/* Obter cada OS pendente de forma individual */


/* Busca todas as OSs pendentes no horario da execucao */

c02 CURSOR FOR
SELECT	nr_sequencia
from	(
	SELECT	z.nr_sequencia
	from	man_ordem_servico z,
		man_estagio_processo y,
		man_ordem_serv_estagio x
	where	x.nr_seq_ordem = z.nr_sequencia
	and     y.nr_sequencia =  x.nr_seq_estagio
	and     z.nr_seq_grupo_sup = nr_seq_grupo_w
	and	(z.nr_seq_estagio IS NOT NULL AND z.nr_seq_estagio::text <> '')
	and (x.nr_seq_estagio <> 511 or z.ie_status_ordem <> 3)
	and     coalesce(z.ie_status_ordem,1) <> 3
	and     y.ie_acao = 1
	and	z.dt_ordem_servico > clock_timestamp() - interval '700 days'
	and     z.nr_grupo_trabalho in (2)
	and	z.nr_seq_estagio not in (511,9,2465) /* "Encerramento Solicitado pelo Cliente" "OK - Cliente Encerrado" "Cloud - Planejamento" */
	and     (select max(a.dt_atualizacao) 
		from    man_ordem_serv_estagio a
		where   a.nr_seq_ordem = z.nr_sequencia
		and     a.dt_atualizacao < (trunc(clock_timestamp()) + 86399/86400)) = x.dt_atualizacao
		and (y.ie_suporte = 'S' or y.ie_sup_nivel2 = 'S')
		and     x.dt_atualizacao < (trunc(clock_timestamp()) + 86399/86400)
		
union

		select	z.nr_sequencia
		from	man_ordem_servico z,
			man_estagio_processo y,
			man_ordem_serv_estagio x
		where	x.nr_seq_ordem = z.nr_sequencia
		and     y.nr_sequencia =  x.nr_seq_estagio
		and     z.nr_seq_grupo_sup = nr_seq_grupo_w
		and	(z.nr_seq_estagio IS NOT NULL AND z.nr_seq_estagio::text <> '')    
		and (x.nr_seq_estagio <> 511 or z.ie_status_ordem <> 3)
		and     coalesce(z.ie_status_ordem,1) <> 3
		and     y.ie_acao = 1
		and	z.dt_ordem_servico > clock_timestamp() - interval '700 days'
		and     z.nr_grupo_trabalho in (262)
		and	z.nr_seq_estagio not in (511,9,2465) /* "Encerramento Solicitado pelo Cliente" "OK - Cliente Encerrado" "Cloud - Planejamento" */
		and     (select max(a.dt_atualizacao) 
			from    man_ordem_serv_estagio a
			where   a.nr_seq_ordem = z.nr_sequencia
			and     a.dt_atualizacao < (trunc(clock_timestamp()) + 86399/86400)) = x.dt_atualizacao
		and (y.ie_sup_nivel2 = 'S' or y.ie_suporte = 'S')
		and     x.dt_atualizacao < (trunc(clock_timestamp()) + 86399/86400)) alias30
group by nr_sequencia;


BEGIN

/* Abre CURSOR para buscar grupos do suporte */

open c01;
loop
fetch c01 into
	nr_seq_grupo_w,
	ds_grupo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	
	/* Zera as variaveis a cada troca de grupo */

	qt_os_w		:= 0;
	qt_os_30_w	:= 0;
	
	/* Abre CURSOR para pegar as OSs pendentes */

	open c02;
	loop
	fetch c02 into
		nr_seq_ordem_serv_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		
		/* Verifica se o ultimo estagio da OS antes das 17:30 */


		/* pertence ao Suporte */

		select	coalesce(max('S'),'N')
		into STRICT	ie_suporte_w
		from	man_ordem_serv_estagio a,
			man_estagio_processo b
		where	a.nr_seq_ordem = nr_seq_ordem_serv_w
		and	a.nr_seq_estagio = b.nr_sequencia
		and	a.nr_sequencia = (
				SELECT	coalesce(max(x.nr_sequencia),0)
				from	man_ordem_serv_estagio x
				where	x.nr_seq_ordem = a.nr_seq_ordem
				and	x.dt_atualizacao < (trunc(clock_timestamp()) + 17.5/24))
		and	((b.ie_suporte = 'S') or (b.ie_sup_nivel2 = 'S'))
		and	b.ie_acao = 1;
		
		/* Caso pentenca ao Suporte, considera na quantidade de OSs pendentes */

		if (ie_suporte_w = 'S') then
		
			qt_os_w	:= qt_os_w + 1;
			
			/* Se for criada tabela filha para gravar OSs (analitico) */


			/* a gravacao devera ocorrer nessa parte */


			/* pois devera gravar apenas as OSs que considerar */


			
			/* Verifica se a OS possui +30 dias */


			/* So realiza essa verificacao se a OS for realmente considerada como pendente */

			select	coalesce(max('S'),'N')
			into STRICT	ie_30_dias_w
			from	man_ordem_servico
			where	nr_sequencia = nr_seq_ordem_serv_w
			and	round(coalesce(dt_fim_real,clock_timestamp()) - dt_ordem_servico) >= 30;
			
			/* Caso OS +30 dias, considera na quantidade do indicador */
		
			if (ie_30_dias_w = 'S') then
				qt_os_30_w	:= qt_os_30_w + 1;
			end if;
			
		end if;
		
		end;
	end loop;
	close c02;
	
	if (qt_os_w > 0) then
		begin
	
		select	nextval('os_pend_suporte_seq')
		into STRICT	nr_sequencia_w
		;

		insert into os_pend_suporte(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,										
			dt_referencia,
			ds_grupo,
			nr_seq_grupo,
			qt_os,
			qt_mais_trinta)
		values (
			nr_sequencia_w,
			clock_timestamp(),
			'Job',
			clock_timestamp(),
			'Job',											
			trunc(clock_timestamp()),
			ds_grupo_w,
			nr_seq_grupo_w,
			qt_os_w,
			qt_os_30_w);
				
		end;
	end if;
	
	end;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_gerar_os_pend_suporte () FROM PUBLIC;

