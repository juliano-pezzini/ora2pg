-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_definir_tipo_benef ( nr_seq_intercambio_p ptu_intercambio.nr_sequencia%type, ie_tipo_compartilhamento_p ptu_intercambio_benef.ie_tipo_compartilhamento%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


nr_seq_empresa_w		bigint;
ds_razao_social_w		varchar(40);
qt_registros_w			bigint;
qt_imp_w			bigint;
cd_empresa_origem_w		bigint;
nr_seq_ops_congenere_w		bigint;
ie_tipo_contrato_w		varchar(10);
ie_tipo_pessoa_w		bigint;
cd_pessoa_fisica_w		varchar(10);
ie_repasse_w			varchar(10);
cd_unimed_origem_w		varchar(10);
cd_cgc_cpf_w			varchar(14);
nr_seq_congenere_w		bigint;
nr_seq_intercambio_atual_w	bigint;
nr_seq_grupo_inter_w		pls_regra_grupo_inter.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nm_empr_abrev,
		cd_empresa_origem,
		ie_tipo_pessoa,
		cd_cgc_cpf
	from	ptu_intercambio_empresa
	where	nr_seq_intercambio = nr_seq_intercambio_p;

C02 CURSOR(	nr_seq_empresa_pc	ptu_intercambio_empresa.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_benef
	from	ptu_intercambio_benef
	where	nr_seq_empresa	= nr_seq_empresa_pc;

c03 CURSOR FOR
	SELECT	b.nr_sequencia
	from	pls_regra_grupo_inter	b,
		pls_regra_benef_grupo	a
	where	a.nr_seq_regra		= b.nr_sequencia
	and	b.ie_situacao		= 'A'
	and	((a.nr_seq_cooperativa	= nr_seq_congenere_w and (a.nr_seq_cooperativa IS NOT NULL AND a.nr_seq_cooperativa::text <> '')) or (coalesce(a.nr_seq_cooperativa::text, '') = ''))
	and	((a.nr_seq_congenere	= nr_seq_congenere_w and (a.nr_seq_congenere IS NOT NULL AND a.nr_seq_congenere::text <> '')) or (coalesce(a.nr_seq_congenere::text, '') = ''))
	and	((a.cd_cgc_empresa	= cd_cgc_cpf_w and (a.cd_cgc_empresa IS NOT NULL AND a.cd_cgc_empresa::text <> '')) or (coalesce(a.cd_cgc_empresa::text, '') = ''))
	and	((a.ie_tipo_repasse	= ie_repasse_w and (a.ie_tipo_repasse IS NOT NULL AND a.ie_tipo_repasse::text <> '')) or (coalesce(a.ie_tipo_repasse::text, '') = ''))
	and	((a.cd_operadora_empresa = cd_empresa_origem_w and (a.cd_operadora_empresa IS NOT NULL AND a.cd_operadora_empresa::text <> '')) or (coalesce(a.cd_operadora_empresa::text, '') = ''))
	order by coalesce(a.nr_seq_cooperativa,0),
		coalesce(a.nr_seq_congenere,0),
		coalesce(a.ie_tipo_repasse,' '),
		coalesce(a.cd_cgc_empresa,0),
		coalesce(a.cd_operadora_empresa,0);
	
BEGIN

CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(1130933) ,'PTU_DEFINIR_TIPO_BENEF',0);

select	ie_tipo_contrato,
	cd_unimed_origem
into STRICT	ie_tipo_contrato_w,
	cd_unimed_origem_w
from	ptu_intercambio
where	nr_sequencia	= nr_seq_intercambio_p;

select	max(nr_sequencia)
into STRICT	nr_seq_congenere_w
from	pls_congenere
where	(cd_cooperativa)::numeric  = (cd_unimed_origem_w)::numeric;

open C01;
loop
fetch C01 into
	nr_seq_empresa_w,
	ds_razao_social_w,
	cd_empresa_origem_w,
	ie_tipo_pessoa_w,
	cd_cgc_cpf_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	/*Quando for contrato de fundacao, gravar a operadora congenere dona do contrato*/

	if (ie_tipo_contrato_w = 'F') and (cd_empresa_origem_w IS NOT NULL AND cd_empresa_origem_w::text <> '') then
		
		select	max(b.nr_sequencia)
		into STRICT	nr_seq_ops_congenere_w
		from	pls_pj_empresa	a,
			pls_congenere	b
		where	a.cd_cgc	= b.cd_cgc
		and	(a.cd_empresa)::numeric 	= cd_empresa_origem_w;
		
		if (coalesce(nr_seq_ops_congenere_w,0) <> 0) then
			update	ptu_intercambio_empresa
			set	nr_seq_congenere	= nr_seq_ops_congenere_w
			where	nr_sequencia		= nr_seq_empresa_w;
		end if;
	end if;
	
	nr_seq_intercambio_atual_w	:= null;
	nr_seq_grupo_inter_w		:= null;
	
	select	max(ie_repasse)
	into STRICT	ie_repasse_w
	from	ptu_intercambio_benef
	where	nr_seq_empresa	= nr_seq_empresa_w;
	
	for r_c03_w in c03 loop
		begin
		nr_seq_grupo_inter_w	:= r_c03_w.nr_sequencia;
		end;
	end loop;

	if (ie_tipo_pessoa_w = 1) then
		select	max(nr_sequencia)
		into STRICT	nr_seq_intercambio_atual_w
		from	pls_intercambio
		where	cd_cgc			= cd_cgc_cpf_w
		and	cd_operadora_empresa	= cd_empresa_origem_w
		and	nr_seq_congenere	= nr_seq_congenere_w
		and	ie_tipo_contrato	= ie_tipo_contrato_w
		and	ie_tipo_repasse		= ie_repasse_w
		and (coalesce(nr_seq_grupo_inter_w::text, '') = '' or nr_seq_grupo_intercambio = nr_seq_grupo_inter_w);
	elsif (ie_tipo_pessoa_w = 2) then
		cd_cgc_cpf_w	:= substr(cd_cgc_cpf_w,1,11);
		
		select	max(cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_w
		from	pessoa_fisica
		where	nr_cpf	= cd_cgc_cpf_w;
		
		select	max(nr_sequencia)
		into STRICT	nr_seq_intercambio_atual_w
		from	pls_intercambio
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w
		and	cd_operadora_empresa	= cd_empresa_origem_w
		and	nr_seq_congenere	= nr_seq_congenere_w
		and	ie_tipo_contrato	= ie_tipo_contrato_w
		and	ie_tipo_repasse		= ie_repasse_w
		and (coalesce(nr_seq_grupo_inter_w::text, '') = '' or nr_seq_grupo_intercambio = nr_seq_grupo_inter_w);
	end if;
	
	update	ptu_intercambio_empresa
	set	nr_seq_contrato	= nr_seq_intercambio_atual_w
	where	nr_sequencia	= nr_seq_empresa_w;
	
	select	count(1)
	into STRICT	qt_registros_w
	from	ptu_intercambio_benef
	where	nr_seq_empresa	= nr_seq_empresa_w;
	
	qt_imp_w	:= 0;
	for r_c02_w in C02(nr_seq_empresa_w) loop
		begin
		qt_imp_w	:= qt_imp_w + 1;
		CALL gravar_processo_longo('Benef. da empresa ' || ds_razao_social_w||' . Importados ' || qt_imp_w|| ' de ' || qt_registros_w,'PTU_DEFINIR_TIPO_BENEF',-1);
		
		CALL ptu_definir_benef_imp(r_c02_w.nr_seq_benef,nm_usuario_p);
		
		CALL ptu_gravar_produto_benef_imp(r_c02_w.nr_seq_benef,ie_tipo_contrato_w,cd_estabelecimento_p,nm_usuario_p);
		
		if (ie_tipo_compartilhamento_p IS NOT NULL AND ie_tipo_compartilhamento_p::text <> '') then
			update	ptu_intercambio_benef
			set	ie_tipo_compartilhamento = ie_tipo_compartilhamento_p
			where	nr_sequencia = r_c02_w.nr_seq_benef;
		end if;
		end;
	end loop; --C02
	
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_definir_tipo_benef ( nr_seq_intercambio_p ptu_intercambio.nr_sequencia%type, ie_tipo_compartilhamento_p ptu_intercambio_benef.ie_tipo_compartilhamento%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

