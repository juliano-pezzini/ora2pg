-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intpd_recebe_ordem_compra_me ( nr_sequencia_p bigint) AS $body$
DECLARE


					
_ora2pg_r RECORD;
ds_xml_w			text;
ds_xml_type_w			xml;
nr_solic_compra_w		solic_compra.nr_solic_compra%type;
ie_conversao_w			intpd_eventos_sistema.ie_conversao%type;
nr_seq_projeto_xml_w		intpd_eventos_sistema.nr_seq_projeto_xml%type;
nr_seq_sistema_w			intpd_eventos_sistema.nr_seq_sistema%type;
ie_sistema_externo_w		varchar(15);
qt_registros_w			bigint;
reg_integracao_w			gerar_int_padrao.reg_integracao_conv;
nr_seq_regra_conv_w		conversao_meio_externo.nr_seq_regra%type;
ordem_compra_w			ordem_compra%rowtype;
ordem_compra_item_w		ordem_compra_item%rowtype;
ordem_compra_item_entrega_w	ordem_compra_item_entrega%rowtype;
ordem_compra_item_trib_w		ordem_compra_item_trib%rowtype;
i				integer;
cd_centro_custo_w		centro_custo.cd_centro_custo%type;
cd_conta_contabil_w		conta_contabil.cd_conta_contabil%type;
ie_tipo_conta_w			bigint;
ie_liberar_ordem_cotacao_w		varchar(15);
ds_erro_w				varchar(4000);
ds_id_origin_w			intpd_eventos_sistema.ds_id_origin%type;
cd_sequencia_parametro_w parametros_conta_contabil.cd_sequencia_parametro%type;


c00 CURSOR FOR
SELECT	*
from	xmltable('/STRUCTURE' passing ds_xml_type_w columns
	ID_EVENT			varchar(40)	path	'ID_EVENT',
	ID_APPLICATION			varchar(40)	path	'ID_APPLICATION');
c00_w	c00%rowtype;


c01 CURSOR FOR
SELECT	a.*
from (
	SELECT	'I' ie_acao,
		x.*
	from	xmltable('/STRUCTURE/pedido' passing ds_xml_type_w columns
		DataPedido		varchar(40)	path	'DataPedido',
		HoraPedido		varchar(40)	path	'HoraPedido',
		IdURL			varchar(255)	path	'IdURL',
		IdBase			varchar(255)	path	'IdBase',
		Empresa			varchar(40)	path	'Empresa',
		cd_estabelecimento	varchar(40)	path	'Filial',
		cd_cgc_fornecedor	varchar(40)	path	'CodigoFornecedor',
		Setor			varchar(40)	path	'Setor',
		dt_entrega		varchar(40)	path	'DataPrevistaEntrega',
		cd_condicao_pagamento	varchar(40)	path	'CodigoCondicaoPagamento',
		nr_solic_compra		varchar(40)	path	'NumeroRequisicao',
		NumeroPedidoWPD		varchar(40)	path	'NumeroPedidoWPD',
		nr_documento_externo	varchar(40)	path	'NumeroPedidoME',
		ds_observacao		varchar(4000)	path	'Observacao',
		TipoProcesso		varchar(40)	path	'TipoProcesso',
		Frete			xml		path	'Frete',
		ItemPedido		xml 	path	'ItensPedido') x
	
union all

	select	'A' ie_acao,
		y.*
	from	xmltable('/STRUCTURE/pedidoAlterado' passing ds_xml_type_w columns
		DataPedido		varchar(40)	path	'DataPedido',
		HoraPedido		varchar(40)	path	'HoraPedido',
		IdURL			varchar(255)	path	'IdURL',
		IdBase			varchar(255)	path	'IdBase',
		Empresa			varchar(40)	path	'Empresa',
		cd_estabelecimento	varchar(40)	path	'Filial',
		cd_cgc_fornecedor	varchar(40)	path	'CodigoFornecedor',
		Setor			varchar(40)	path	'Setor',
		dt_entrega		varchar(40)	path	'DataPrevistaEntrega',
		cd_condicao_pagamento	varchar(40)	path	'CodigoCondicaoPagamento',
		nr_solic_compra		varchar(40)	path	'NumeroRequisicao',
		NumeroPedidoWPD		varchar(40)	path	'NumeroPedidoWPD',
		nr_documento_externo	varchar(40)	path	'NumeroPedidoME',
		ds_observacao		varchar(4000)	path	'Observacao',
		TipoProcesso		varchar(40)	path	'TipoProcesso',
		Frete			xml		path	'Frete',
		ItemPedido		xml 	path	'ItensPedido') y
	
union all

	select	'C' ie_acao,
		z.*
	from	xmltable('/STRUCTURE/pedidoCancelado' passing ds_xml_type_w columns		
		DataPedido		varchar(40)	path	'DataPedido',
		HoraPedido		varchar(40)	path	'HoraPedido',
		IdURL			varchar(255)	path	'IdURL',
		IdBase			varchar(255)	path	'IdBase',
		Empresa			varchar(40)	path	'Empresa',
		cd_estabelecimento	varchar(40)	path	'Filial',
		cd_cgc_fornecedor	varchar(40)	path	'CodigoFornecedor',
		Setor			varchar(40)	path	'Setor',
		dt_entrega		varchar(40)	path	'DataPrevistaEntrega',
		cd_condicao_pagamento	varchar(40)	path	'CodigoCondicaoPagamento',
		nr_solic_compra		varchar(40)	path	'NumeroRequisicao',
		NumeroPedidoWPD		varchar(40)	path	'NumeroPedidoWPD',
		nr_documento_externo	varchar(40)	path	'NumeroPedidoME',
		ds_observacao		varchar(4000)	path	'Observacao',
		TipoProcesso		varchar(40)	path	'TipoProcesso',
		Frete			xml		path	'Frete',
		ItemPedido		xml 	path	'ItensCancelados') z ) a;
c01_w	c01%rowtype;


c02 CURSOR FOR
SELECT	*
from	xmltable('/Frete' passing c01_w.Frete columns
	vl_frete				double precision	path	'Valor',
	ie_frete				varchar(40)	path	'Tipo');
c02_w	c02%rowtype;


c03 CURSOR FOR
SELECT	*
from	xmltable('/ItensPedido/ItemPedido' passing c01_w.ItemPedido columns
	cd_material			varchar(40)	path	'CodigoProduto',
	NumeroRequisicao		varchar(40)	path	'NumeroRequisicao',
	PrazoEntrega			varchar(40)	path	'PrazoEntrega',
	qt_material			double precision	path	'Quantidade',
	vl_unitario_material		double precision	path	'ValorUnitario',
	pr_descontos			double precision	path	'PercentualDesconto',
	pr_ipi				double precision	path	'PercentualIPI',
	ValorNormal			double precision	path	'ValorNormal',
	CodigoUnidade			varchar(40)	path	'CodigoUnidade',
	ds_observacao			varchar(255)	path	'Observacao',
	Fabricante			varchar(255)	path	'Fabricante',	
	DataEntregaItemPedido		xml 	path	'DatasEntregas')

union all

SELECT	*
from	xmltable('/ItensPedido/ItemAlterado' passing c01_w.ItemPedido columns
	cd_material			varchar(40)	path	'CodigoProduto',
	NumeroRequisicao		varchar(40)	path	'NumeroRequisicao',
	PrazoEntrega			varchar(40)	path	'PrazoEntrega',
	qt_material			double precision	path	'Quantidade',
	vl_unitario_material		double precision	path	'ValorUnitario',
	pr_descontos			double precision	path	'PercentualDesconto',
	pr_ipi				double precision	path	'PercentualIPI',
	ValorNormal			double precision	path	'ValorNormal',
	CodigoUnidade			varchar(40)	path	'CodigoUnidade',
	ds_observacao			varchar(255)	path	'Observacao',
	Fabricante			varchar(255)	path	'Fabricante',	
	DataEntregaItemPedido		xml 	path	'DatasEntregas');	
c03_w	c03%rowtype;


c04 CURSOR FOR
SELECT	*
from	xmltable('/DatasEntregas/DataEntregaItemPedido' passing c03_w.DataEntregaItemPedido columns
	dt_prevista_entrega				varchar(40)	path	'Data',	
	qt_prevista_entrega				double precision	path	'Quantidade');
c04_w	c04%rowtype;

c05 CURSOR FOR
SELECT	*
from	xmltable('/ItensCancelados/ItemCancelado' passing c01_w.ItemPedido columns
	cd_material			varchar(40)	path	'CodigoProduto',
	Quantidade			double precision	path	'Quantidade',	
	ie_encerrado			varchar(255)	path	'Encerrado',
	DataEntregaItemPedido		xml 	path	'DatasEntregas');	
c05_w	c05%rowtype;
/*IE_ENCERRADO, False,  Eles vao mandar uma quantidade para cancelar, e temos que cancelar essa quantidade, O restante que sobra deve permanecer aberto
  IE_ENCERRADO, True,  Tem que cancelar todas as entregas do item*/
 
c06 CURSOR FOR
SELECT	*
from	xmltable('/DatasEntregas/DataEntregaItemPedido' passing c05_w.DataEntregaItemPedido columns
	dt_entrega_cancelada		varchar(40)	path	'Data',
	qt_material_cancelada		double precision	path	'Quantidade');	
c06_w	c06%rowtype;

  
c07 CURSOR FOR
SELECT	*
from	ordem_compra_item_entrega
where	nr_ordem_compra = ordem_compra_w.nr_ordem_compra
and	nr_item_oci = ordem_compra_item_w.nr_item_oci;
c07_w	c07%rowtype;



BEGIN

select	ds_xml
into STRICT	ds_xml_w
from	intpd_fila_transmissao
where	nr_sequencia = nr_sequencia_p;

ds_xml_type_w	:= xmlparse(DOCUMENT, convert_from(, 'utf-8'));

select	id_origin
into STRICT	ds_id_origin_w
from	xmltable('/STRUCTURE' passing ds_xml_type_w
	columns id_origin	varchar2(10) path 'ID_ORIGIN');

select	coalesce(b.ie_conversao,'I'),
	nr_seq_sistema,
	nr_seq_projeto_xml,
	nr_seq_regra_conv,
	coalesce(ds_id_origin,ds_id_origin_w)
into STRICT	ie_conversao_w,
	nr_seq_sistema_w,
	nr_seq_projeto_xml_w,
	nr_seq_regra_conv_w,
	ds_id_origin_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia = nr_sequencia_p;

ie_sistema_externo_w	:=	nr_seq_sistema_w;

reg_integracao_w.nr_seq_fila_transmissao	:=	nr_sequencia_p;
reg_integracao_w.ie_envio_recebe		:=	'R';
reg_integracao_w.ie_sistema_externo		:=	ie_sistema_externo_w;
reg_integracao_w.ie_conversao			:=	ie_conversao_w;
reg_integracao_w.nr_seq_projeto_xml		:=	nr_seq_projeto_xml_w;
reg_integracao_w.nr_seq_regra_conversao		:=	nr_seq_regra_conv_w;


open C01;
loop
fetch C01 into	
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	reg_integracao_w.nm_tabela		:=	'ORDEM_COMPRA';
	reg_integracao_w.nm_elemento		:=	'PURCHASE';
	reg_integracao_w.nr_seq_visao		:=	17575;

	/*Cancelamento dos itens da ordem de compra */

	if (c01_w.ie_acao = 'C') then
	
		reg_integracao_w.nm_tabela	:=	'ORDEM_COMPRA_ITEM';
		reg_integracao_w.nm_elemento	:=	'ITEM';
		reg_integracao_w.nr_seq_visao	:=	16711;
		
		select	coalesce(max(nr_ordem_compra),0)
		into STRICT	ordem_compra_w.nr_ordem_compra
		from	ordem_compra
		where	nr_documento_externo = c01_w.nr_documento_externo
		and	ie_sistema_origem = ie_sistema_externo_w;
		
		open C05;
		loop
		fetch C05 into	
			c05_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin	

			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MATERIAL', c05_w.cd_material, 'S', ordem_compra_item_w.cd_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; ordem_compra_item_w.cd_material := _ora2pg_r.ds_valor_retorno_p;
		
			select	coalesce(max(nr_item_oci),0)
			into STRICT	ordem_compra_item_w.nr_item_oci
			from	ordem_compra_item
			where	nr_ordem_compra = ordem_compra_w.nr_ordem_compra
			and	cd_material = ordem_compra_item_w.cd_material;
			
			
			open C06;
			loop
			fetch C06 into	
				c06_w;
			EXIT WHEN NOT FOUND; /* apply on C06 */
				begin
				
				open C07;
				loop
				fetch C07 into	
					c07_w;
				EXIT WHEN NOT FOUND; /* apply on C07 */
					begin
					
					
					if (upper(c05_w.ie_encerrado) = 'FALSE') and /*IE_ENCERRADO, False, Eles vao mandar uma quantidade para cancelar, e temos que cancelar essa quantidade, O restante que sobra deve permanecer aberto*/
						trunc(c07_w.dt_prevista_entrega,'dd') = trunc(to_date(SUBSTR(c06_w.dt_entrega_cancelada,1,10),'YYYY-MM-DD'),'dd') then
						
						select	*
						into STRICT	ordem_compra_item_entrega_w
						from	ordem_compra_item_entrega
						where	nr_sequencia = c07_w.nr_sequencia;
						
						if (c06_w.qt_material_cancelada >= c07_w.qt_prevista_entrega) then
							
							ordem_compra_item_entrega_w.dt_cancelamento	:= clock_timestamp();
							ordem_compra_item_entrega_w.ds_observacao	:= wheb_mensagem_pck.get_texto(297873); /*Cancelado pela integracao do ME*/
						
							update	ordem_compra_item_entrega set row = ordem_compra_item_entrega_w
							where	nr_sequencia = c07_w.nr_sequencia;							
						
						else
						
							ordem_compra_item_entrega_w.qt_prevista_entrega	:= c06_w.qt_material_cancelada;
							ordem_compra_item_entrega_w.dt_cancelamento	:= clock_timestamp();
							ordem_compra_item_entrega_w.ds_observacao	:= wheb_mensagem_pck.get_texto(297873); /*Cancelado pela integracao do ME*/
							
							update	ordem_compra_item_entrega set row = ordem_compra_item_entrega_w
							where	nr_sequencia = c07_w.nr_sequencia;
							
							ordem_compra_item_entrega_w.dt_cancelamento	:= null;
							ordem_compra_item_entrega_w.ds_observacao	:= null;							
							ordem_compra_item_entrega_w.qt_prevista_entrega	:= c07_w.qt_prevista_entrega - c06_w.qt_material_cancelada;
							
							select 	nextval('ordem_compra_item_entrega_seq')
							into STRICT 	ordem_compra_item_entrega_w.nr_sequencia
							;
							--ordem_compra_item_entrega_w.nr_sequencia	:= ordem_compra_item_entrega_seq.nextval;
							
							ordem_compra_item_entrega_w.dt_atualizacao	:= clock_timestamp();
							ordem_compra_item_entrega_w.dt_entrega_original	:= ordem_compra_item_entrega_w.dt_prevista_entrega;
							ordem_compra_item_entrega_w.dt_entrega_limite	:= ordem_compra_item_entrega_w.dt_prevista_entrega;
							
							insert into ordem_compra_item_entrega values (ordem_compra_item_entrega_w.*);
						end if;
					
					elsif (upper(c05_w.ie_encerrado) = 'TRUE') then /*IE_ENCERRADO, True, Tem que cancelar todas as entregas do item*/
						
						SELECT * FROM cancelar_entrega_item(			
							ordem_compra_w.nr_ordem_compra, ordem_compra_item_w.nr_item_oci, c07_w.nr_sequencia, 'N', 'N', 'N', 'WEBSERVICE', wheb_mensagem_pck.get_texto(297877), /*Encerrado pela integracao do ME*/
							7, 'S', 'S', ordem_compra_item_w.cd_material, 'N', ordem_compra_item_w.nr_cot_compra, ordem_compra_item_w.nr_solic_compra) INTO STRICT ordem_compra_item_w.nr_cot_compra, ordem_compra_item_w.nr_solic_compra;
							
					end if;
					end;
				end loop;
				close C07;
				end;
			end loop;
			close C06;	
			end;
		end loop;
		close C05;
		
		
		select	count(*)
		into STRICT	qt_registros_w
		from	ordem_compra_item_entrega
		where	nr_ordem_compra	= ordem_compra_w.nr_ordem_compra
		and	coalesce(qt_prevista_entrega,0) > coalesce(qt_real_entrega,0)
		and	coalesce(dt_cancelamento::text, '') = ''
		and	coalesce(dt_baixa::text, '') = '';
		
		if (qt_registros_w = 0) then
			
			update	ordem_compra
			set	dt_baixa = clock_timestamp(),
				nr_seq_motivo_cancel = 7
			where 	nr_ordem_compra = ordem_compra_w.nr_ordem_compra;			
		end if;
		
	/*Inclusao e Alteracao da ordem de compra e de seus itens */

	else
	
		select	substr(c01_w.nr_solic_compra||'@',1,position('@' in c01_w.nr_solic_compra||'@')-1)
		into STRICT	nr_solic_compra_w
		;
		
		if (nr_solic_compra_w > 0) then
			select	cd_pessoa_solicitante,
				cd_local_estoque,
				cd_centro_custo,
				cd_conta_contabil,
				coalesce(ie_urgente,'N'),
				coalesce(ie_aviso_chegada,'N')
			into STRICT	ordem_compra_w.cd_pessoa_solicitante,
				ordem_compra_w.cd_local_entrega,
				cd_centro_custo_w,
				cd_conta_contabil_w,
				ordem_compra_w.ie_urgente,
				ordem_compra_w.ie_aviso_chegada
			from	solic_compra
			where	nr_solic_compra = nr_solic_compra_w;	
		end if;
			
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_ESTABELECIMENTO', c01_w.cd_estabelecimento, 'S', ordem_compra_w.cd_estabelecimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; ordem_compra_w.cd_estabelecimento := _ora2pg_r.ds_valor_retorno_p;	
		ordem_compra_w.cd_cgc_fornecedor := c01_w.cd_cgc_fornecedor;	
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_DOCUMENTO_EXTERNO', c01_w.nr_documento_externo, 'N', ordem_compra_w.nr_documento_externo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; ordem_compra_w.nr_documento_externo := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CONDICAO_PAGAMENTO', c01_w.cd_condicao_pagamento, 'S', ordem_compra_w.cd_condicao_pagamento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; ordem_compra_w.cd_condicao_pagamento := _ora2pg_r.ds_valor_retorno_p;	
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_OBSERVACAO', c01_w.ds_observacao, 'N', ordem_compra_w.ds_observacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; ordem_compra_w.ds_observacao := _ora2pg_r.ds_valor_retorno_p;	
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_SISTEMA_ORIGEM', ie_sistema_externo_w, 'N', ordem_compra_w.ie_sistema_origem) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; ordem_compra_w.ie_sistema_origem := _ora2pg_r.ds_valor_retorno_p;
		ordem_compra_w.dt_entrega	:= trunc(to_date(SUBSTR(c01_w.dt_entrega,1,10),'YYYY-MM-DD'),'dd');
		
		ordem_compra_w.dt_atualizacao		:= clock_timestamp();
		ordem_compra_w.dt_ordem_compra		:= clock_timestamp();		
		ordem_compra_w.nm_usuario_nrec		:= 'WEBSERVICE';
		ordem_compra_w.nm_usuario		:= 'WEBSERVICE';
		ordem_compra_w.dt_atualizacao_nrec	:= clock_timestamp();
		ordem_compra_w.dt_inclusao		:= clock_timestamp();
		ordem_compra_w.ie_situacao		:= 'A';	
		ordem_compra_w.ie_aviso_chegada		:= 'N';
		ordem_compra_w.ie_emite_obs		:= 'N';
		ordem_compra_w.ie_urgente		:= 'N';
		ordem_compra_w.ie_somente_pagto		:= 'N';
		ordem_compra_w.vl_despesa_acessoria	:= 0;
		ordem_compra_w.vl_desconto		:= 0;
		ordem_compra_w.pr_desconto		:= 0;
		ordem_compra_w.ie_tipo_ordem		:= 'E';
		ordem_compra_w.ie_origem_imp		:= ds_id_origin_w;
		
		select	max(cd_comprador_padrao),
			max(cd_moeda_padrao),
			max(ie_liberar_ordem_cotacao)
		into STRICT	ordem_compra_w.cd_comprador,
			ordem_compra_w.cd_moeda,
			ie_liberar_ordem_cotacao_w
		from	parametro_compras
		where	cd_estabelecimento = ordem_compra_w.cd_estabelecimento;
		
		select	nm_pessoa_contato
		into STRICT	ordem_compra_w.ds_pessoa_contato
		from	pessoa_juridica
		where	cd_cgc = ordem_compra_w.cd_cgc_fornecedor;
		
		select	coalesce(max(cd_versao_atual),'0')
		into STRICT	ordem_compra_w.ds_dados_importacao
		from	aplicacao_tasy
		where	cd_aplicacao_tasy = 'Tasy';

		open C02;
		loop
		fetch C02 into	
			c02_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin		
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_FRETE', c02_w.vl_frete, 'N', ordem_compra_w.vl_frete) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; ordem_compra_w.vl_frete := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_FRETE', c02_w.ie_frete, 'S', ordem_compra_w.ie_frete) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; ordem_compra_w.ie_frete := _ora2pg_r.ds_valor_retorno_p;
			end;
		end loop;
		close C02;
		
			
		if (reg_integracao_w.qt_reg_log = 0) then
		
			select	coalesce(max(nr_ordem_compra),0)
			into STRICT	ordem_compra_w.nr_ordem_compra
			from	ordem_compra
			where	nr_documento_externo = ordem_compra_w.nr_documento_externo
			and	ie_sistema_origem = ordem_compra_w.ie_sistema_origem;
			
			if (ordem_compra_w.nr_ordem_compra > 0) then

				delete FROM ordem_compra_venc where nr_ordem_compra = ordem_compra_w.nr_ordem_compra;
				
				update	ordem_compra
				set	row = ordem_compra_w
				where	nr_ordem_compra = ordem_compra_w.nr_ordem_compra;
				
				
			else
				select	nextval('ordem_compra_seq')
				into STRICT	ordem_compra_w.nr_ordem_compra
				;
				
				insert into ordem_compra values (ordem_compra_w.*);
			end if;
		end if;
		
		
		open C03;
		loop
		fetch C03 into	
			c03_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			reg_integracao_w.nm_tabela	:=	'ORDEM_COMPRA_ITEM';
			reg_integracao_w.nm_elemento	:=	'ITEM';
			reg_integracao_w.nr_seq_visao	:=	16711;
			cd_sequencia_parametro_w        := null;
			
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'PR_TRIBUTO', c03_w.pr_ipi, 'N', ordem_compra_item_trib_w.pr_tributo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; ordem_compra_item_trib_w.pr_tributo := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MATERIAL', c03_w.cd_material, 'S', ordem_compra_item_w.cd_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; ordem_compra_item_w.cd_material := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_UNITARIO_MATERIAL', c03_w.vl_unitario_material, 'N', ordem_compra_item_w.vl_unitario_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; ordem_compra_item_w.vl_unitario_material := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_MATERIAL', c03_w.qt_material, 'N', ordem_compra_item_w.qt_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; ordem_compra_item_w.qt_material := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_OBSERVACAO', c03_w.ds_observacao, 'N', ordem_compra_item_w.ds_observacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; ordem_compra_item_w.ds_observacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'PR_DESCONTOS', c03_w.pr_descontos, 'N', ordem_compra_item_w.pr_descontos) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; ordem_compra_item_w.pr_descontos := _ora2pg_r.ds_valor_retorno_p;
			ordem_compra_item_w.cd_centro_custo 		:= cd_centro_custo_w;
			ordem_compra_item_w.cd_conta_contabil		:= cd_conta_contabil_w;
			ordem_compra_item_w.dt_atualizacao		:= clock_timestamp();
			ordem_compra_item_w.nm_usuario			:= 'WEBSERVICE';
			ordem_compra_item_w.ie_situacao			:= 'A';
			ordem_compra_item_w.cd_local_estoque		:= ordem_compra_w.cd_local_entrega;
			ordem_compra_item_w.nr_ordem_compra		:= ordem_compra_w.nr_ordem_compra;
			ordem_compra_item_w.cd_pessoa_solicitante	:= ordem_compra_w.cd_pessoa_solicitante;
			ordem_compra_item_w.qt_original			:= ordem_compra_item_w.qt_material;
			ordem_compra_item_w.vl_unit_mat_original	:= ordem_compra_item_w.vl_unitario_material;
			ordem_compra_item_w.vl_total_item		:= round((coalesce(ordem_compra_item_w.qt_material,0) * coalesce(ordem_compra_item_w.vl_unitario_material,0)),4);
			ordem_compra_item_w.nr_solic_compra		:= nr_solic_compra_w;
			ordem_compra_item_w.vl_desconto			:= 0;
			ordem_compra_item_w.pr_desc_financ		:= 0;
			
				
			if (coalesce(ordem_compra_item_w.cd_conta_contabil::text, '') = '') then

				if (coalesce(ordem_compra_item_w.cd_centro_custo::text, '') = '') then
					ie_tipo_conta_w	:= 2;
				else
					ie_tipo_conta_w	:= 3;
				end if;

				SELECT * FROM define_conta_material(	ordem_compra_w.cd_estabelecimento, ordem_compra_item_w.cd_material, ie_tipo_conta_w, null, null, null, null, null, null, null, ordem_compra_w.cd_local_entrega, null, clock_timestamp(), ordem_compra_item_w.cd_conta_contabil, ordem_compra_item_w.cd_centro_custo, null) INTO STRICT ordem_compra_item_w.cd_conta_contabil, ordem_compra_item_w.cd_centro_custo;
				cd_sequencia_parametro_w                   := philips_contabil_pck.get_parametro_conta_contabil();
				ordem_compra_item_w.cd_sequencia_parametro := cd_sequencia_parametro_w;
			end if;			
			
			
			ordem_compra_item_w.vl_item_liquido		:= coalesce(ordem_compra_item_w.qt_material,0) * coalesce(ordem_compra_item_w.vl_unitario_material,0);					
			if (ordem_compra_item_w.pr_descontos > 0) then
				ordem_compra_item_w.vl_item_liquido	:= ordem_compra_item_w.vl_item_liquido - dividir((ordem_compra_item_w.pr_descontos * 100),ordem_compra_item_w.vl_item_liquido);
			end if;
			
			
			if (ordem_compra_item_w.nr_solic_compra > 0) and (ordem_compra_item_w.cd_material > 0) then
			
				begin
				select	nr_item_solic_compra,
					cd_unidade_medida_compra,
					substr(ds_material_direto,1,255)
				into STRICT	ordem_compra_item_w.nr_item_solic_compra,
					ordem_compra_item_w.cd_unidade_medida_compra,
					ordem_compra_item_w.ds_material_direto
				from	solic_compra_item
				where	nr_solic_compra = ordem_compra_item_w.nr_solic_compra
				and	cd_material = ordem_compra_item_w.cd_material  LIMIT 1;			
				exception
				when others then
					ordem_compra_item_w.nr_item_solic_compra := null;
					ordem_compra_item_w.cd_unidade_medida_compra := null;
					ordem_compra_item_w.ds_material_direto := null;
				end;
			end if;
			
			if (reg_integracao_w.qt_reg_log = 0) then
			
				select	coalesce(max(nr_item_oci),0)
				into STRICT	ordem_compra_item_w.nr_item_oci
				from	ordem_compra_item
				where	nr_ordem_compra = ordem_compra_w.nr_ordem_compra
				and	cd_material = ordem_compra_item_w.cd_material;			
				
				if (ordem_compra_item_w.nr_item_oci > 0) then				
					
					update	ordem_compra_item
					set	row = ordem_compra_item_w
					where	nr_ordem_compra = ordem_compra_w.nr_ordem_compra
					and	nr_item_oci = ordem_compra_item_w.nr_item_oci;				
								
				else
					select	coalesce(max(nr_item_oci),0) + 1
					into STRICT	ordem_compra_item_w.nr_item_oci
					from	ordem_compra_item
					where	nr_ordem_compra = ordem_compra_w.nr_ordem_compra;
					
					insert into ordem_compra_item values (ordem_compra_item_w.*);				
				end if;
			end if;
				
			open C04;
			loop
			fetch C04 into	
				c04_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin

				reg_integracao_w.nm_tabela	:=	'ORDEM_COMPRA_ITEM_ENTREGA';
				reg_integracao_w.nm_elemento	:=	'DELIVERY';
				reg_integracao_w.nr_seq_visao	:=	16712;						
				SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_PREVISTA_ENTREGA', c04_w.qt_prevista_entrega, 'N', ordem_compra_item_entrega_w.qt_prevista_entrega) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; ordem_compra_item_entrega_w.qt_prevista_entrega := _ora2pg_r.ds_valor_retorno_p;
				ordem_compra_item_entrega_w.dt_prevista_entrega	:= trunc(to_date(SUBSTR(c04_w.dt_prevista_entrega,1,10),'YYYY-MM-DD'),'dd');
				ordem_compra_item_entrega_w.qt_prevista_entrega := c04_w.qt_prevista_entrega;
				ordem_compra_item_entrega_w.nr_ordem_compra	:= ordem_compra_w.nr_ordem_compra;
				ordem_compra_item_entrega_w.nr_item_oci		:= ordem_compra_item_w.nr_item_oci;
				ordem_compra_item_entrega_w.dt_atualizacao	:= clock_timestamp();
				ordem_compra_item_entrega_w.nm_usuario		:= 'WEBSERVICE';
				ordem_compra_item_entrega_w.dt_entrega_original	:= ordem_compra_item_entrega_w.dt_prevista_entrega;
				ordem_compra_item_entrega_w.dt_entrega_limite	:= ordem_compra_item_entrega_w.dt_prevista_entrega;
				
				if (reg_integracao_w.qt_reg_log = 0) then	

					select	coalesce(max(nr_sequencia),0)
					into STRICT	ordem_compra_item_entrega_w.nr_sequencia
					from	ordem_compra_item_entrega
					where	nr_ordem_compra = ordem_compra_w.nr_ordem_compra
					and	nr_item_oci = ordem_compra_item_w.nr_item_oci
					and	pkg_date_utils.start_of(dt_prevista_entrega, 'DD', null) = pkg_date_utils.start_of(ordem_compra_item_entrega_w.dt_prevista_entrega, 'DD', null);
					
					if (ordem_compra_item_entrega_w.nr_sequencia > 0) then
						
						update	ordem_compra_item_entrega
						set	row = ordem_compra_item_entrega_w
						where	nr_sequencia = ordem_compra_item_entrega_w.nr_sequencia;
					
					else
						select	nextval('ordem_compra_item_entrega_seq')
						into STRICT	ordem_compra_item_entrega_w.nr_sequencia
						;
					
						insert into ordem_compra_item_entrega values (ordem_compra_item_entrega_w.*);
					end if;
				end if;
				end;
			end loop;
			close C04;
			
			if (ordem_compra_item_trib_w.pr_tributo > 0) then
					
				select	coalesce(min(cd_tributo),0)
				into STRICT	ordem_compra_item_trib_w.cd_tributo
				from	tributo
				where	ie_situacao		= 'A'
				and	ie_tipo_tributo		= 'IPI'
				and	ie_corpo_item		= 'I';
				
				if (ordem_compra_item_trib_w.cd_tributo > 0) then
					
					ordem_compra_item_trib_w.nr_ordem_compra	:= ordem_compra_w.nr_ordem_compra;
					ordem_compra_item_trib_w.nr_item_oci		:= ordem_compra_item_w.nr_item_oci;
					ordem_compra_item_trib_w.dt_atualizacao		:= clock_timestamp();
					ordem_compra_item_trib_w.nm_usuario		:= 'WEBSERVICE';
					ordem_compra_item_trib_w.dt_atualizacao_nrec	:= clock_timestamp();
					ordem_compra_item_trib_w.nm_usuario_nrec	:= 'WEBSERVICE';				
					ordem_compra_item_trib_w.vl_tributo		:= (dividir(ordem_compra_item_trib_w.pr_tributo,100) * ordem_compra_item_w.vl_item_liquido);
								
					if (reg_integracao_w.qt_reg_log = 0) and (ordem_compra_item_trib_w.cd_tributo > 0) then
				
						select	count(*)
						into STRICT	qt_registros_w
						from	ordem_compra_item_trib
						where	nr_ordem_compra = ordem_compra_w.nr_ordem_compra
						and	nr_item_oci = ordem_compra_item_w.nr_item_oci
						and	cd_tributo = ordem_compra_item_trib_w.cd_tributo;
						
						if (qt_registros_w > 0) then
							
							update	ordem_compra_item_trib
							set	row = ordem_compra_item_trib_w
							where	nr_ordem_compra = ordem_compra_w.nr_ordem_compra
							and	nr_item_oci = ordem_compra_item_w.nr_item_oci
							and	cd_tributo = ordem_compra_item_trib_w.cd_tributo;
						
						else
							insert into ordem_compra_item_trib values (ordem_compra_item_trib_w.*);
						end if;
					end if;
				end if;
			end if;
			end;
		end loop;
		close C03;
	end if;
	end;
end loop;
close C01;

if (reg_integracao_w.qt_reg_log > 0) then
	begin
	rollback;

	update intpd_fila_transmissao
	set	ie_status = 'E',
		ie_tipo_erro = 'F'
	where	nr_sequencia = nr_sequencia_p;

	for i in 0..reg_integracao_w.qt_reg_log-1 loop
		
		INTPD_GRAVAR_LOG_RECEBIMENTO(nr_sequencia_p,reg_integracao_w.intpd_log_receb[i].ds_log,'INTPDTASY');
	end loop;
	end;

else

	select	count(*)
	into STRICT	qt_registros_w
	from	ordem_compra_item
	where	nr_ordem_compra = ordem_compra_w.nr_ordem_compra;

	if (qt_registros_w > 0) then	
	
		calcular_liquido_ordem_compra(ordem_compra_w.nr_ordem_compra, 'WEBSERVICE');
		CALL gerar_ordem_compra_venc(ordem_compra_w.nr_ordem_compra, 'WEBSERVICE');
		CALL baixar_solic_compra_com_ordem(ordem_compra_w.nr_ordem_compra);
							
		if (ie_liberar_ordem_cotacao_w in ('A','S')) then
			CALL liberar_ordem_ME(ordem_compra_w.nr_ordem_compra, ie_liberar_ordem_cotacao_w, 'WEBSERVICE');
		end if;
					
		update	solic_compra
		set	nr_documento_externo	= c01_w.nr_documento_externo
		where	nr_solic_compra		= nr_solic_compra_w;
	end if;
	
	update	intpd_fila_transmissao
	set	ie_status = 'S',
		nr_seq_documento = ordem_compra_w.nr_ordem_compra,
		nr_doc_externo = c01_w.nr_documento_externo
	where	nr_sequencia = nr_sequencia_p;
	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intpd_recebe_ordem_compra_me ( nr_sequencia_p bigint) FROM PUBLIC;

