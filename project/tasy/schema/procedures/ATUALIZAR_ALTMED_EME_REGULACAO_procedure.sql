-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_altmed_eme_regulacao ( nr_sequencia_p bigint, ie_assumir_paciente_p text, ie_alteracao_medico_p text, cd_medico_p text, nr_acao_executada_p bigint, nr_seq_regulacao_p bigint, ie_tipo_execucao_p bigint, nr_seq_resposta_p bigint, nm_usuario_p text, ds_mensagem_sinal_p INOUT text) AS $body$
DECLARE


ie_medico_ativo_w	varchar(1);
ie_medico_resp_w	varchar(1);
ie_nao_possui_sinal_w	varchar(1);
ds_valor_param_w	varchar(255);

BEGIN
if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	begin
	if (ie_tipo_execucao_p = 1) then
		begin
		if (ie_assumir_paciente_p = 'S') then
			begin

			select	CASE WHEN coalesce(count(*),0)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_medico_ativo_w
			from	medico
			where	cd_pessoa_fisica = cd_medico_p
			and	ie_situacao = 'A';

			if (ie_medico_ativo_w = 'S') then
				begin
				update	eme_regulacao
				set	ie_alteracao_medico	= ie_alteracao_medico_p,
					dt_atualizacao		= clock_timestamp(),
					dt_bloqueio			 = NULL,
					cd_medico_resp		= cd_medico_p,
					nm_usuario		= nm_usuario_p
				where	nr_sequencia		= nr_sequencia_p;
				end;
			else
				begin
				update	eme_regulacao
				set	ie_alteracao_medico	= ie_alteracao_medico_p,
					dt_atualizacao		= clock_timestamp(),
					dt_bloqueio			 = NULL,
					nm_usuario		= nm_usuario_p
				where	nr_sequencia		= nr_sequencia_p;
				end;
			end if;
			end;
		else
			begin
			update	eme_regulacao
			set	ie_alteracao_medico	= ie_alteracao_medico_p,
				dt_atualizacao		= clock_timestamp(),
				dt_bloqueio			 = NULL,
				nm_usuario		= nm_usuario_p
			where	nr_sequencia		= nr_sequencia_p;
			end;
		end if;

		if (nr_acao_executada_p = 2) then
			begin
			CALL gravar_usuario_alt_regulacao(
				nr_sequencia_p,
				nm_usuario_p);
			end;
		end if;

		ds_valor_param_w := obter_parametro_funcao(989, 43, nm_usuario_p);
		if (ds_valor_param_w = 'S') then
			begin
			select	CASE WHEN coalesce(count(*),0)=0 THEN 'S'  ELSE 'N' END
			into STRICT	ie_nao_possui_sinal_w
			from	eme_regul_sinal_vital a,
				eme_regulacao b
			where	b.nr_sequencia =  nr_seq_regulacao_p
			and	b.nr_sequencia =  a.nr_seq_regulacao;

			if (ie_nao_possui_sinal_w = 'S') then
				begin
				ds_mensagem_sinal_p := substr(obter_texto_tasy(75607, wheb_usuario_pck.get_nr_seq_idioma),1,255);
				end;
			end if;
			end;
		end if;

		end;
	elsif (ie_tipo_execucao_p = 2) then
		begin

		select	CASE WHEN coalesce(count(*),0)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_medico_ativo_w
		from	medico
		where	cd_pessoa_fisica = cd_medico_p
		and	ie_situacao = 'A';

		select	CASE WHEN coalesce(count(*),0)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_medico_resp_w
		from	eme_regulacao
		where	nr_sequencia = nr_sequencia_p
		and	coalesce(cd_medico_resp::text, '') = '';

		if (ie_medico_ativo_w = 'S') and (ie_medico_resp_w <> 0) and (nr_seq_resposta_p IS NOT NULL AND nr_seq_resposta_p::text <> '') then
			begin
			update	eme_regulacao
			set 	ie_alteracao_medico	= ie_alteracao_medico_p,
				dt_atualizacao		= clock_timestamp(),
				cd_medico_resp		= cd_medico_p,
				dt_bloqueio			 = NULL,
				nm_usuario			= nm_usuario_p
			where	nr_sequencia	= nr_sequencia_p;
			end;
		else
			begin
			update	eme_regulacao
			set	ie_alteracao_medico	= ie_alteracao_medico_p,
				dt_atualizacao		= clock_timestamp(),
				dt_bloqueio			 = NULL,
				nm_usuario			= nm_usuario_p
			where	nr_sequencia	= nr_sequencia_p;
			end;
		end if;
		end;
	elsif (ie_tipo_execucao_p = 3) then
		begin
		update	eme_regulacao
		set	ie_alteracao_medico = 'N',
			dt_atualizacao	= clock_timestamp(),
			dt_bloqueio      = NULL,
			nm_usuario	= nm_usuario_p
		where	nr_sequencia = nr_sequencia_p;
		end;
	end if;
	end;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_altmed_eme_regulacao ( nr_sequencia_p bigint, ie_assumir_paciente_p text, ie_alteracao_medico_p text, cd_medico_p text, nr_acao_executada_p bigint, nr_seq_regulacao_p bigint, ie_tipo_execucao_p bigint, nr_seq_resposta_p bigint, nm_usuario_p text, ds_mensagem_sinal_p INOUT text) FROM PUBLIC;

