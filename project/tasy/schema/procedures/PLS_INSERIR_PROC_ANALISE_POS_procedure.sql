-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_inserir_proc_analise_pos ( cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, dt_procedimento_p timestamp, dt_inicio_p timestamp, dt_fim_p timestamp, ie_via_acesso_p text, cd_guia_p text, ie_tipo_guia_p text, nr_seq_conta_p bigint, nr_seq_benef_p bigint, ds_medicos_p text, ds_partic_p text, nm_usuario_p text, nr_seq_analise_p bigint, cd_estabelecimento_p bigint, nr_seq_conta_princ_p bigint, ie_comitar_p text, nr_seq_grupo_atual_p bigint, tx_item_p bigint, cd_procedimento_imp_p bigint, ds_procedimento_imp_p text, nr_seq_item_criado_p INOUT bigint) AS $body$
DECLARE


nr_seq_proc_w		bigint;
dt_procedimento_w	timestamp;
ds_medicos_w		varchar(255);
ds_partic_w		varchar(255);
cd_medico_w		bigint;
cd_partic_w		bigint;
ds_partic_ww		varchar(255);
nr_seq_partic_w		bigint;
nr_seq_conselho_w	bigint;
nr_seq_cbo_saude_w	bigint;
nr_seq_conta_w		bigint;
nr_seq_item_criado_w	bigint;
ds_observacao_w		varchar(255);
ds_cbo_prest_w		varchar(255);
ds_cbo_part_w		varchar(255);
cd_cbo_prest_w		varchar(255);
cd_cbo_part_w		varchar(255);
ie_tipo_despesa_w	varchar(1);
ie_origem_analise_w	smallint;
nr_seq_grau_partic_w	bigint;
nr_seq_prestador_w	bigint;
nr_seq_analise_w	bigint;

/*Diego 02/05/2011 - OS 310634
    Rotina que tem por obejetivo criar na conta médica o procedimento inserido pelo auditor durante o processo de auditoria.*/
C01 CURSOR FOR
	SELECT	cd_medico,
		nr_seq_cbo_saude,
		nr_seq_grau_partic,
		nr_seq_prestador
	from	w_pls_proc_participante
	where	nr_seq_analise = nr_seq_analise_p;


BEGIN
--obtem a seq da conta proc
select	nextval('pls_conta_proc_seq')
into STRICT	nr_seq_proc_w
;

if (coalesce(nr_seq_conta_p,0) = 0) then
	/*Obtem a conta principal do tipo de guia passada*/

	select	min(a.nr_sequencia)
	into STRICT	nr_seq_conta_w
	from	pls_conta			a,
		pls_conta_pos_estabelecido 	b
	where	b.nr_seq_analise 	= nr_seq_analise_p
	and	((b.ie_situacao		= 'A') or (coalesce(b.ie_situacao::text, '') = ''))
	and	b.nr_seq_conta		= a.nr_sequencia;
else
	nr_seq_conta_w := nr_seq_conta_p;
end if;

select	coalesce(dt_procedimento_p, dt_emissao)
into STRICT	dt_procedimento_w
from	pls_conta
where	nr_sequencia = nr_seq_conta_w;

/*Criar o procedimento na conta médica*/

insert into pls_conta_proc(nr_sequencia, cd_procedimento, ie_origem_proced,
	 qt_procedimento, dt_procedimento, ie_via_acesso,
	 nr_seq_conta, nm_usuario, nm_usuario_nrec,
	 dt_atualizacao, dt_atualizacao_nrec, ie_situacao,
	 ie_status, qt_procedimento_imp, tx_item,
	 dt_inicio_proc, dt_fim_proc, cd_procedimento_imp,
	 ds_procedimento_imp, ie_lanc_manual_pos)
values (nr_seq_proc_w, cd_procedimento_p, ie_origem_proced_p,
	 0, dt_procedimento_w, ie_via_acesso_p,
	 nr_seq_conta_w, nm_usuario_p, nm_usuario_p,
	 clock_timestamp(), clock_timestamp(), 'D',
	 'M', qt_procedimento_p,tx_item_p,
	 dt_inicio_p, dt_fim_p, cd_procedimento_imp_p,
	 ds_procedimento_imp_p, 'S');

CALL pls_cta_proc_mat_regra_pck.cria_registro_regra_proc(nr_seq_proc_w, nm_usuario_p);
CALL pls_cta_proc_mat_regra_pck.gera_seq_tiss_proc(nr_seq_proc_w, null, null, nr_seq_conta_w, nm_usuario_p);

select	nr_seq_analise
into STRICT	nr_seq_analise_w
from	pls_conta
where 	nr_sequencia = nr_seq_conta_w;

select	max(ie_tipo_despesa)
into STRICT	ie_tipo_despesa_w
from	pls_conta_proc
where	nr_sequencia = nr_seq_proc_w;

CALL pls_gerar_valor_pos_estab(nr_seq_conta_w, nm_usuario_p,'A',nr_seq_proc_w,null,'C');

/*Gerar os dados do resumo para ser usado na função OPS - Análise de Produção Médica */

nr_seq_item_criado_w := pls_gerar_w_resumo_conta(	nr_seq_conta_w, nr_seq_proc_w, null, nr_seq_conta_princ_p, nr_seq_analise_w, nm_usuario_p, nr_seq_item_criado_w);
		
CALL pls_gerar_w_resumo_pos(	nr_seq_conta_w,nr_seq_proc_w, null,
				nr_seq_analise_p, nm_usuario_p);

/*Atualizar o status da conta de pos estabelecido, levando em consideração os dados da análisede pos e análise da conta médica*/

CALL pls_atualizar_status_fat_pos(	nr_seq_conta_p,	null, nr_seq_proc_w,				
				nr_seq_analise_p, cd_estabelecimento_p,	nm_usuario_p	);

ds_observacao_w :=	'Procedimento inserido: '||cd_procedimento_p||'-'||pls_obter_desc_procedimento(cd_procedimento_p,ie_origem_proced_p)||chr(13)||chr(10)||
			'Quantidade inserida: '||qt_procedimento_p;
/*Inserindo histórico*/

CALL pls_inserir_hist_analise(nr_seq_conta_w,  nr_seq_analise_p, 19,
			 nr_seq_proc_w, 'P', null,
			 null,ds_observacao_w, nr_seq_grupo_atual_p,
			 nm_usuario_p,cd_estabelecimento_p);
			
if (coalesce(ie_comitar_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_inserir_proc_analise_pos ( cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, dt_procedimento_p timestamp, dt_inicio_p timestamp, dt_fim_p timestamp, ie_via_acesso_p text, cd_guia_p text, ie_tipo_guia_p text, nr_seq_conta_p bigint, nr_seq_benef_p bigint, ds_medicos_p text, ds_partic_p text, nm_usuario_p text, nr_seq_analise_p bigint, cd_estabelecimento_p bigint, nr_seq_conta_princ_p bigint, ie_comitar_p text, nr_seq_grupo_atual_p bigint, tx_item_p bigint, cd_procedimento_imp_p bigint, ds_procedimento_imp_p text, nr_seq_item_criado_p INOUT bigint) FROM PUBLIC;

