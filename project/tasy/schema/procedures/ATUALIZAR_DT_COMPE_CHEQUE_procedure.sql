-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_dt_compe_cheque ( dt_compensacao_p timestamp, nr_seq_cheque_p bigint, ie_operacao_p text, nm_usuario_p text) AS $body$
DECLARE


ie_consiste_data_comp_w		varchar(15);
dt_compensacao_w		timestamp;
ds_historico_w			varchar(255);

nr_seq_cheque_w				cheque_cr.nr_seq_cheque%type;
nr_sequencia_bx_trib_w		titulo_receber_trib_baixa.nr_sequencia%type;
nr_titulo_w					titulo_receber_liq.nr_titulo%type;
nr_seq_liq_w				titulo_receber_liq.nr_sequencia%type;

/*Cursor para pegar cheques recebido no caixa, que geraram baixa em titulos a receber, e que geraram baixa em tributos. Caso o cheque for negociado e ter trocado por outros cheques, aqui tb busca.*/

C01 CURSOR FOR
	SELECT	nr_seq_cheque
	from (WITH RECURSIVE cte AS (
    SELECT	a.nr_seq_cheque
			  FROM cheque_cr a, caixa_receb b
LEFT OUTER JOIN cheque_cr_negociado c ON (b.nr_sequencia = c.nr_seq_caixa_rec) WHERE a.nr_seq_cheque = nr_seq_cheque_p
  UNION ALL
    SELECT	a.nr_seq_cheque
			  FROM cheque_cr a, caixa_receb b
LEFT OUTER JOIN cheque_cr_negociado c ON (b.nr_sequencia = c.nr_seq_caixa_rec) JOIN cte c ON (c.prior nr_seq_cheque = a.nr_seq_cheque)

) SELECT * FROM cte WHERE nr_seq_caixa_rec = nr_sequencia  and exists (select 	1 --Tem que existir um titulo recebido com esse cheque e que tenha gerado baixa de tributo.
						from   	caixa_receb x,
								titulo_receber_liq z,
								titulo_receber_trib_baixa y
						where  	x.nr_sequencia = a.nr_seq_caixa_rec
						and    	x.nr_sequencia = z.nr_seq_caixa_rec
						and    	z.nr_titulo    = y.nr_titulo
						and    	z.nr_sequencia = y.nr_seq_tit_liq) ORDER BY  c.nr_seq_cheque nulls first
		 ;
) alias1;
	--where rownum = 1
/*Pegar as baixas de tributos geradas na baixa de título por esse cheque para atualizar a dt contabil*/

C02 CURSOR FOR
	SELECT 	d.nr_sequencia,
			c.nr_titulo,
			c.nr_sequencia
	from  	cheque_cr a,
			caixa_receb b,
			titulo_receber_liq c,
			titulo_receber_trib_baixa d
	where 	a.nr_seq_cheque 	= nr_seq_cheque_w
	and   	a.nr_seq_caixa_rec 	= b.nr_sequencia
	and   	b.nr_sequencia     	= c.nr_seq_caixa_rec
	and   	c.nr_sequencia     	= d.nr_seq_tit_liq
	and   	c.nr_titulo        	= d.nr_titulo
	and		coalesce(ie_tipo_receb,'R')	= 'R'; --Aba recebimentos, cheques recebidos no caixa
BEGIN
if (nr_seq_cheque_p IS NOT NULL AND nr_seq_cheque_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then

	begin
		ie_consiste_data_comp_w	:= coalesce(obter_valor_param_usuario(810,67,obter_perfil_ativo,nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');
	exception when others then
		ie_consiste_data_comp_w	:= 'N';
	end;

	if (ie_consiste_data_comp_w = 'S') and (trunc(dt_compensacao_p,'dd') > trunc(clock_timestamp(),'dd')) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(218543);
	end if;

	if (ie_operacao_p	= 'C') then

		dt_compensacao_w	:= dt_compensacao_p;
		ds_historico_w		:= wheb_mensagem_pck.get_texto(305674); --O cheque foi compensado.
		/*OS 1713025 - Ao compensar o cheque, atualizar a data contabil dos tributos gerados na baixa para esse cheque*/

		open C01;
		loop
		fetch C01 into
			nr_seq_cheque_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin

			open C02;
			loop
			fetch C02 into
				nr_sequencia_bx_trib_w,
				nr_titulo_w,
				nr_seq_liq_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin

				update	titulo_receber_trib_baixa
				set		dt_contabil 	= dt_compensacao_p
				where	nr_titulo		= nr_titulo_w
				and		nr_sequencia 	= nr_sequencia_bx_trib_w
				and		nr_seq_tit_liq	= nr_seq_liq_w;

				end;
			end loop;
			close C02;

			end;
		end loop;
		close C01;

	else

		dt_compensacao_w	:= null;
		ds_historico_w		:= wheb_mensagem_pck.get_texto(305676); -- Foi desfeita a compensação do cheque.
	end if;

	update 	cheque_cr
	set    	dt_compensacao = dt_compensacao_w,
		dt_atualizacao = clock_timestamp(),
		nm_usuario     = nm_usuario_p
	where	nr_seq_cheque  = nr_seq_cheque_p;

	CALL gerar_cheque_cr_hist(nr_seq_cheque_p,ds_historico_w,'N',nm_usuario_p);

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_dt_compe_cheque ( dt_compensacao_p timestamp, nr_seq_cheque_p bigint, ie_operacao_p text, nm_usuario_p text) FROM PUBLIC;

