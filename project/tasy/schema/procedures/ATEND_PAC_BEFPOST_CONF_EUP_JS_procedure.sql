-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atend_pac_befpost_conf_eup_js ( dt_entrada_p timestamp, ie_data_reinternacao_p text, qt_dias_internacao_p bigint, ie_completo_p text, ie_tipo_atend_old_p bigint, ie_novo_alta_anterior_p text, ie_novo_p text, cd_medico_resp_p text, ie_alerta_menor_sem_resp_w text, ie_consiste_regra_atend_conv_w text, ie_tipo_atendimento_p bigint, cd_estabelecimento_p bigint, nr_atendimento_p bigint, ie_modo_edicao_p text, cd_pessoa_responsavel_p text, cd_pessoa_fisica_p text, ie_exige_cpf_resp_w text, nm_usuario_p text, ie_forma_consist_credenc_med_p text, ie_clinica_p text, dt_alta_p timestamp, ds_msg_erro_p INOUT text, ds_msg_alerta_cpf_resp_p INOUT text, ds_msg_alerta_cons_conv_p INOUT text, ds_msg_confir_inf_resp_p INOUT text, ds_msg_conf_atend_alta_p INOUT text, ds_msg_confirm_reinternacao_p INOUT text, ds_msg_alerta_crend_mdic_p INOUT text, nr_seq_classificacao_p bigint, ie_tipo_convenio_p text default null) AS $body$
DECLARE


ds_msg_erro_w			varchar(255);
ds_msg_alerta_cpf_resp_w	varchar(255);
ie_possui_cpf_w			varchar(1);
qt_convenio_atend_w		bigint;
ds_msg_cons_convenio_w		varchar(255);
ds_msg_alerta_cons_conv_w	varchar(255);
ie_emancipado_w			varchar(1);
qt_anos_w			bigint;
ds_msg_confir_inf_resp_w	varchar(255);
ds_msg_atend_sem_alta_w		varchar(255);
ds_msg_conf_atend_sem_alta_w	varchar(255);
dt_cons_reinternacao_w		timestamp;
ds_msg_confirm_reinternacao_w	varchar(255);
ds_msg_abrt_avs_crend_mdic_w	varchar(255);
ie_corpo_clinico_w		varchar(1);
cd_especialidade_w		bigint;
ie_credencial_venc_w		varchar(10);
nm_medico_w			varchar(255);
dt_referencia_w			timestamp;

BEGIN



IF (ie_novo_p = 'S') THEN
	
	ds_msg_atend_sem_alta_w := consiste_gerar_novo_atend(cd_pessoa_fisica_p, nm_usuario_p, ie_tipo_atendimento_p, cd_estabelecimento_p, coalesce(cd_medico_resp_p,'0'), ie_clinica_p, ds_msg_atend_sem_alta_w, nr_seq_classificacao_p, ie_tipo_convenio_p);
	
	IF (ds_msg_atend_sem_alta_w IS NOT NULL AND ds_msg_atend_sem_alta_w::text <> '') THEN

		IF (ie_novo_alta_anterior_p = 'N') OR (ie_novo_alta_anterior_p = 'T') OR (ie_novo_alta_anterior_p = 'C') OR (ie_novo_alta_anterior_p = 'E') THEN
			ds_msg_erro_w := SUBSTR(ds_msg_atend_sem_alta_w,1,255);
			GOTO final;
		ELSIF (ie_novo_alta_anterior_p = 'A') THEN
			ds_msg_conf_atend_sem_alta_w:=  SUBSTR(ds_msg_atend_sem_alta_w,1,255);			
		END IF;
	END IF;
END IF;

IF (coalesce(cd_pessoa_responsavel_p::text, '') = '') AND (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') THEN

	IF (ie_exige_cpf_resp_w <> 'N') THEN

		SELECT	CASE WHEN COUNT(*)=0 THEN 'N'  ELSE 'S' END
		INTO STRICT	ie_possui_cpf_w
		FROM	pessoa_fisica
		WHERE 	cd_pessoa_fisica = cd_pessoa_fisica_p
		AND	(nr_cpf IS NOT NULL AND nr_cpf::text <> '');

		IF (ie_possui_cpf_w = 'N') THEN
			IF (ie_exige_cpf_resp_w = 'S') THEN
				ds_msg_erro_w := SUBSTR(obter_texto_tasy(196695, wheb_usuario_pck.get_nr_seq_idioma),1,255);
				GOTO final;
			ELSE
				ds_msg_alerta_cpf_resp_w := SUBSTR(obter_texto_tasy(196695, wheb_usuario_pck.get_nr_seq_idioma),1,255);
			END IF;
		END IF;
	END IF;
	IF (ie_alerta_menor_sem_resp_w = 'S') THEN

		SELECT	SUBSTR(coalesce(ie_emancipado,'N'),1,1),
			obter_idade(dt_nascimento, clock_timestamp(), 'A')
		INTO STRICT	ie_emancipado_w,
			qt_anos_w
		FROM	pessoa_fisica
		WHERE	cd_pessoa_fisica = cd_pessoa_fisica_p;

		IF (qt_anos_w < 18) AND (ie_emancipado_w = 'N') THEN
			ds_msg_confir_inf_resp_w := SUBSTR(obter_texto_tasy(293675, wheb_usuario_pck.get_nr_seq_idioma) || CHR(10) ||
			                                   obter_texto_tasy(293677, wheb_usuario_pck.get_nr_seq_idioma) || CHR(10) ||
							   obter_texto_tasy(293679, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		END IF;

	END IF;
END IF;

IF (ie_modo_edicao_p = 'S') THEN

	SELECT	COUNT(*)
	INTO STRICT	qt_convenio_atend_w
	FROM	atend_categoria_convenio
	WHERE	nr_atendimento = nr_atendimento_p;

	IF (qt_convenio_atend_w > 0) THEN
		ds_msg_cons_convenio_w := Verifica_Conv_Regra_Atend(nr_atendimento_p, cd_estabelecimento_p, ie_tipo_atendimento_p, ds_msg_cons_convenio_w);
		IF (ds_msg_cons_convenio_w IS NOT NULL AND ds_msg_cons_convenio_w::text <> '') THEN
			IF (ie_consiste_regra_atend_conv_w = 'S') THEN
				ds_msg_erro_w := ds_msg_cons_convenio_w;
				GOTO final;
			ELSE
				ds_msg_alerta_cons_conv_w := ds_msg_cons_convenio_w;
			END IF;
		END IF;
	END IF;

	IF (ie_completo_p = 'S') AND (coalesce(ie_tipo_atendimento_p,0) = 1) AND (coalesce(ie_tipo_atendimento_p,0) <> coalesce(ie_tipo_atend_old_p,0)) AND (coalesce(qt_dias_internacao_p,0) <> 0) THEN

		IF (ie_data_reinternacao_p = 'DE') THEN
			dt_cons_reinternacao_w := dt_entrada_p;
		ELSE
			dt_cons_reinternacao_w := clock_timestamp();
		END IF;
		ds_msg_confirm_reinternacao_w := consistir_reinternacao(cd_pessoa_fisica_p, qt_dias_internacao_p, nm_usuario_p, cd_estabelecimento_p, dt_cons_reinternacao_w, NULL, NULL, NULL, NULL, ds_msg_confirm_reinternacao_w);

		IF (ds_msg_confirm_reinternacao_w IS NOT NULL AND ds_msg_confirm_reinternacao_w::text <> '') THEN
			ds_msg_confirm_reinternacao_p := ds_msg_confirm_reinternacao_w;
		END IF;
	END IF;
END IF;

IF (ie_forma_consist_credenc_med_p = 'A') THEN
	SELECT	coalesce(dt_alta_p,clock_timestamp()),
		coalesce(obter_especialidade_medico(cd_medico_resp_p,'C'),0)
	INTO STRICT	dt_referencia_w,
		cd_especialidade_w
	;

	SELECT 	coalesce(obter_se_corpo_clinico(cd_medico_resp_p),'X'),
		coalesce(obter_se_credenciamento_venc(cd_estabelecimento_p,
						cd_especialidade_w,
						cd_pessoa_fisica_p,
						dt_referencia_w,
						nr_atendimento_p,
						cd_medico_resp_p),'N'),
		SUBSTR(obter_nome_pf(cd_medico_resp_p),1,255)
	INTO STRICT	ie_corpo_clinico_w,
		ie_credencial_venc_w,
		nm_medico_w
	;


	IF (coalesce(ie_corpo_clinico_w,'X') = 'S') AND (coalesce(ie_credencial_venc_w,'X') = 'S') THEN

		ds_msg_alerta_crend_mdic_p := SUBSTR(obter_texto_dic_objeto(93660, wheb_usuario_pck.get_nr_seq_idioma, 'ITEM='||nm_medico_w),1,255);
	END IF;
ELSIF (ie_forma_consist_credenc_med_p = 'B') THEN

	SELECT	coalesce(dt_alta_p,clock_timestamp()),
		coalesce(obter_especialidade_medico(cd_medico_resp_p,'C'),0)
	INTO STRICT	dt_referencia_w,
		cd_especialidade_w
	;

	SELECT 	coalesce(obter_se_credenciamento_venc(cd_estabelecimento_p,
						cd_especialidade_w,
						cd_pessoa_fisica_p,
						dt_referencia_w,
						nr_atendimento_p,
						cd_medico_resp_p),'N'),
		SUBSTR(obter_nome_pf(cd_medico_resp_p),1,255)
	INTO STRICT	ie_credencial_venc_w,
		nm_medico_w
	;


	IF (coalesce(ie_credencial_venc_w,'X') = 'S') THEN
		ds_msg_erro_w := SUBSTR(obter_texto_dic_objeto(93660, wheb_usuario_pck.get_nr_seq_idioma, 'ITEM='||nm_medico_w),1,255);
		GOTO final;
	END IF;
END IF;


<<final>>

ds_msg_conf_atend_alta_p 	:= ds_msg_conf_atend_sem_alta_w;
ds_msg_confir_inf_resp_p 	:= ds_msg_confir_inf_resp_w;
ds_msg_alerta_cons_conv_p 	:= ds_msg_alerta_cons_conv_w;
ds_msg_alerta_cpf_resp_p	:= ds_msg_alerta_cpf_resp_w;
ds_msg_erro_p 			:= ds_msg_erro_w;
COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atend_pac_befpost_conf_eup_js ( dt_entrada_p timestamp, ie_data_reinternacao_p text, qt_dias_internacao_p bigint, ie_completo_p text, ie_tipo_atend_old_p bigint, ie_novo_alta_anterior_p text, ie_novo_p text, cd_medico_resp_p text, ie_alerta_menor_sem_resp_w text, ie_consiste_regra_atend_conv_w text, ie_tipo_atendimento_p bigint, cd_estabelecimento_p bigint, nr_atendimento_p bigint, ie_modo_edicao_p text, cd_pessoa_responsavel_p text, cd_pessoa_fisica_p text, ie_exige_cpf_resp_w text, nm_usuario_p text, ie_forma_consist_credenc_med_p text, ie_clinica_p text, dt_alta_p timestamp, ds_msg_erro_p INOUT text, ds_msg_alerta_cpf_resp_p INOUT text, ds_msg_alerta_cons_conv_p INOUT text, ds_msg_confir_inf_resp_p INOUT text, ds_msg_conf_atend_alta_p INOUT text, ds_msg_confirm_reinternacao_p INOUT text, ds_msg_alerta_crend_mdic_p INOUT text, nr_seq_classificacao_p bigint, ie_tipo_convenio_p text default null) FROM PUBLIC;

