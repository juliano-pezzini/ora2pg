-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_orcamento_realizado ( nr_seq_mes_ref_p bigint, cd_estab_p bigint, nm_usuario_p text) AS $body$
DECLARE



vl_movimento_w                   ctb_saldo.vl_movimento%type;
cd_conta_contabil_w              ctb_saldo.cd_conta_contabil%type;
cd_centro_custo_w                ctb_saldo.cd_centro_custo%type;
cd_estabelecimento_w             ctb_saldo.cd_estabelecimento%type;
nr_sequencia_w                   ctb_orcamento.nr_sequencia%type       := 0;
vl_empenho_w                     ctb_orcamento.vl_empenho%type         := 0;
ie_empenho_orcamento_w           parametro_estoque.ie_empenho_orcamento%type;
ie_real_orc_detalhe_w            varchar(1);
ie_desconsidera_lote_encerr_w    varchar(1);
cd_estab_atual_w                 estabelecimento.cd_estabelecimento%type;
dt_referencia_w                  ctb_mes_ref.dt_referencia%type;

ie_not_const                     constant         varchar(01)         := 'N';
ie_yes_const                     constant         varchar(01)         := 'S';
ie_tipo_r_const                  constant         varchar(01)         := 'R';
ie_tipo_d_const                  constant         varchar(01)         := 'D';
ie_tipo_c_const                  constant         varchar(01)         := 'C';
ie_tipo_a_const                  constant         varchar(01)         := 'A';
ie_sis_const                     constant         varchar(05)         := 'SIS';
ie_tipo_p_const                  constant         varchar(01)         := 'P';
ie_cd_funcao_const               constant         integer(04)          := 925;

c01 CURSOR FOR
    SELECT  a.cd_conta_contabil,
            a.cd_centro_custo,
            (a.vl_movimento - a.vl_encerramento) vl_movimento,
            a.cd_estabelecimento
    from    ctb_grupo_conta c,
            conta_contabil b,
            ctb_saldo a
    where   nr_seq_mes_ref                       = nr_seq_mes_ref_p
    and     a.cd_conta_contabil                  = b.cd_conta_contabil
    and     a.cd_estabelecimento                 = coalesce(cd_estab_p, a.cd_estabelecimento)
    and     b.cd_grupo                           = c.cd_grupo
    and     (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> '')
    and (a.vl_movimento - a.vl_encerramento) <> 0
    and     c.ie_tipo                            in (ie_tipo_r_const,ie_tipo_c_const,ie_tipo_d_const)
    and     coalesce(b.ie_tipo,ie_tipo_a_const)       = ie_tipo_a_const
    and     ie_desconsidera_lote_encerr_w        = ie_yes_const

union all

    SELECT  a.cd_conta_contabil,
            a.cd_centro_custo,
            a.vl_movimento vl_movimento,
            a.cd_estabelecimento
    from    ctb_grupo_conta c,
            conta_contabil b,
            ctb_saldo a
    where   nr_seq_mes_ref                       = nr_seq_mes_ref_p
    and     a.cd_conta_contabil                  = b.cd_conta_contabil
    and     a.cd_estabelecimento                 = coalesce(cd_estab_p, a.cd_estabelecimento)
    and     b.cd_grupo                           = c.cd_grupo
    and     (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> '')
    and     a.vl_movimento                       <> 0
    and     c.ie_tipo                            in (ie_tipo_r_const,ie_tipo_c_const,ie_tipo_d_const)
    and     coalesce(b.ie_tipo,ie_tipo_a_const)       = ie_tipo_a_const
    and     ie_desconsidera_lote_encerr_w        = ie_not_const;



BEGIN
cd_estab_atual_w                := wheb_usuario_pck.get_cd_estabelecimento;

vl_parametro_p        => ie_real_orc_detalhe_w := obter_param_usuario(cd_funcao_p           => ie_cd_funcao_const, nr_sequencia_p        => 96, cd_perfil_p           => obter_perfil_ativo, nm_usuario_p          => nm_usuario_p, cd_estabelecimento_p  => cd_estab_atual_w, vl_parametro_p        => ie_real_orc_detalhe_w);

vl_parametro_p        => ie_desconsidera_lote_encerr_w := obter_param_usuario(cd_funcao_p           => ie_cd_funcao_const, nr_sequencia_p        => 119, cd_perfil_p           => obter_perfil_ativo, nm_usuario_p          => nm_usuario_p, cd_estabelecimento_p  => cd_estab_atual_w, vl_parametro_p        => ie_desconsidera_lote_encerr_w);

update  ctb_orcamento
set     vl_realizado             = 0,
        vl_empenho               = 0
where   nr_seq_mes_ref           = nr_seq_mes_ref_p
and     cd_estabelecimento       = coalesce(cd_estab_p, cd_estabelecimento);

commit;

open c01;
loop
fetch c01 into
    cd_conta_contabil_w,
    cd_centro_custo_w,
    vl_movimento_w,
    cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

    vl_empenho_w    := 0;

    select  coalesce(max(ie_empenho_orcamento),ie_not_const)
    into STRICT    ie_empenho_orcamento_w
    from    parametro_estoque
    where   cd_estabelecimento  = cd_estabelecimento_w;

    if (ie_empenho_orcamento_w = ie_yes_const) then

        vl_empenho_w   :=  ctb_obter_empenho_orcamento(
                                        nr_seq_mes_ref_p          => nr_seq_mes_ref_p,
                                        cd_conta_contabil_p       => cd_conta_contabil_w,
                                        cd_centro_custo_p         => cd_centro_custo_w,
                                        cd_estabelecimento_p      => cd_estabelecimento_w);

    end if;

    select  coalesce(max(nr_sequencia),0)
    into STRICT    nr_sequencia_w
    from    ctb_orcamento
    where   cd_conta_contabil   = cd_conta_contabil_w
    and     cd_centro_custo     = cd_centro_custo_w
    and     nr_seq_mes_ref      = nr_seq_mes_ref_p
    and     cd_estabelecimento  = cd_estabelecimento_w;

    if (nr_sequencia_w <> 0) then

        update ctb_orcamento
        set    vl_realizado     = vl_movimento_w,
               vl_empenho       = vl_empenho_w
        where  nr_sequencia     = nr_sequencia_w
        and    nr_seq_mes_ref   = nr_seq_mes_ref_p;

    else

        insert into ctb_orcamento(
            nr_sequencia,
            nr_seq_mes_ref,
            dt_atualizacao,
            nm_usuario,
            dt_atualizacao_nrec,
            nm_usuario_nrec,
            cd_estabelecimento,
            cd_conta_contabil,
            cd_centro_custo,
            vl_original,
            vl_orcado,
            vl_realizado,
            vl_empenho,
            ie_cenario,
            ie_origem_orc)
        values (nextval('ctb_orcamento_seq'),
            nr_seq_mes_ref_p,
            clock_timestamp(),
            nm_usuario_p,
            clock_timestamp(),
            nm_usuario_p,
            cd_estabelecimento_w,
            cd_conta_contabil_w,
            cd_centro_custo_w,
            0,0,
            vl_movimento_w,
            vl_empenho_w,ie_not_const,
            ie_sis_const);

    end if;

    /*Atualizar realizado do orcamento detalhado*/

    if (ie_real_orc_detalhe_w = ie_yes_const) then

        CALL ctb_atualizar_real_orc_detalhe(
                        cd_estabelecimento_p    => cd_estabelecimento_w,
                        nr_seq_mes_ref_p        => nr_seq_mes_ref_p,
                        cd_centro_custo_p       => cd_centro_custo_w,
                        cd_conta_contabil_p     => cd_conta_contabil_w,
                        nm_usuario_p            => nm_usuario_p);

    end if;

    commit;

end loop;
close c01;

begin

    select  count(*)
    into STRICT    nr_sequencia_w
    from    ctb_orc_cenario
    where   ie_tipo_cenario = ie_tipo_p_const;

    if (nr_sequencia_w > 0) then
    
        CALL ctb_atualizar_capex_realizado(
                        nr_seq_mes_ref_p        => nr_seq_mes_ref_p,
                        cd_estab_p              => cd_estab_p,
                        nm_usuario_p            => nm_usuario_p );

    end if;

exception
when no_data_found then
     nr_sequencia_w  := null;
when too_many_rows then
     nr_sequencia_w  := null;
end;

select  coalesce(max(ie_empenho_orcamento),ie_not_const)
into STRICT    ie_empenho_orcamento_w
from    parametro_estoque
where   cd_estabelecimento  = cd_estab_atual_w;

if (ie_empenho_orcamento_w = ie_yes_const) then

    select  max(dt_referencia)
    into STRICT    dt_referencia_w
    from    ctb_mes_ref 
    where   nr_sequencia    = nr_seq_mes_ref_p;

    
    ctb_atualizar_empenho_orc(
                        cd_estabelecimento_p    => cd_estab_atual_w,
                        dt_referencia_p         => dt_referencia_w,
                        ie_commit_p             => ie_not_const,
                        nm_usuario_p            => nm_usuario_p );

    commit;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_orcamento_realizado ( nr_seq_mes_ref_p bigint, cd_estab_p bigint, nm_usuario_p text) FROM PUBLIC;

