-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE mat AS (	nr_seq_conta_mat	bigint,
			nr_seq_material		bigint);


CREATE OR REPLACE PROCEDURE pls_cta_gerar_glosa ( nr_seq_conta_p pls_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, ie_commit_p text, ie_origem_regra_p text) AS $body$
DECLARE

/*
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

**************************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************************
********* SE FOR ALTERAR ALGUMA COISA NESTA ROTINA, FAVOR VERIFICAR A pls_consistir_conta. ELA e UTILIZADA NO PROCESSO ANTIGO DE CONTAS MeDICAS. *****************************************************
********* HOUVE DUPLICACAO DE CoDIGO PARA MANTERMOS AS GLOSAS FUNCIONANDO NOS DOIS MODELOS **********************************************************************************************
**************************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************************
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

*/
nr_seq_tipo_acomodacao_w		bigint;
nr_seq_protocolo_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_prestador_w		bigint;
nr_seq_plano_w			bigint;
cd_guia_w			varchar(20);
cd_guia_referencia_w		varchar(20);
cd_guia_conta_w			varchar(20);
nr_seq_guia_w			bigint;
ie_status_guia_w			varchar(1);
ie_tipo_guia_w			varchar(2);
nr_seq_guia_ref_w			bigint;
nr_seq_segurado_guia_w		bigint;
nr_seq_prestador_exec_w		bigint;
cd_medico_executor_w		varchar(10);
nr_seq_grau_partic_w		bigint;
ie_situacao_w			varchar(3);
qt_itens_w			bigint	:= 0;
qt_diagnostico_w			integer	:= 0;
ie_regime_internacao_w		varchar(1);
ie_consistir_guia_w			varchar(2);
ie_carater_internacao_w		varchar(1);
nr_seq_tipo_atendimento_w		bigint;
nr_seq_saida_spsadt_w		bigint;
cd_tiss_tipo_atendimento_w	varchar(20);
nr_seq_cbo_saude_w		bigint;
sg_conselho_exec_w		varchar(20);
nr_seq_conselho_exec_w		bigint;
ie_tipo_segurado_w		varchar(3);
ie_situacao_atend_w		varchar(1);
nr_seq_conta_proc_w		bigint;
nr_seq_conta_mat_w		bigint;
dt_atendimento_referencia_w	timestamp;
dt_envio_contas_w		timestamp;
dt_validade_carteira_w		varchar(30);
ie_origem_conta_w		varchar(5);
ie_tipo_conta_w			varchar(10);
cd_unimed_origem_w		bigint;
cd_unimed_destino_w		bigint;
qt_cbo_ativo_w			bigint;
cd_usuario_plano_w		varchar(30);
dt_inicio_vigencia_w		timestamp;
dt_contratacao_w		timestamp;
dt_rescisao_w			timestamp;
dt_limite_utilizacao_w		timestamp;
qt_benef_operadora_w		bigint;
dt_recebimento_fatura_w		timestamp;
cd_tipo_acomodacao_w		bigint;
qt_guias_w			bigint;
nr_seq_tipo_acomodacao_guia_w	bigint;
nr_seq_regra_w			bigint;
ie_permite_w			varchar(1);
cd_procedimento_w		bigint;
nr_seq_material_w		bigint;
nr_seq_prest_guia_execu_w	bigint;
ie_tipo_guia_prot_w		varchar(10);
ds_obs_glosa_w			varchar(255);
ie_tipo_acomodacao_guia_w	varchar(2);
dt_protocolo_w			timestamp;
ie_tipo_despesa_w		varchar(1);
ie_tipo_acomodacao_ptu_w	varchar(2);
nr_seq_fatura_w			bigint;
nm_prestador_w			varchar(255);
nr_seq_conta_ref_w		bigint;
nr_seq_prestador_dif_w		bigint;
qt_dias_envio_contas_w		integer;
ie_tipo_contratacao_w		varchar(2);
ie_participacao_w		varchar(1);
ie_preco_plano_w		varchar(2);
dt_ref_glosa_w			timestamp;
dt_max_item_w			timestamp;
dt_max_proc_w			timestamp;
dt_max_mat_w			timestamp;
nr_seq_analise_w		bigint;
ie_internacao_w			varchar(1) := 'N';
ds_tipo_guia_ref_w		varchar(100);
ie_tipo_guia_ref_w		varchar(2);
ie_evento_w			varchar(5);
qt_conta_protocolo_w		integer;
ie_via_acesso_w			varchar(10);
dt_validade_senha_w		timestamp;
nr_seq_clinica_guia_w		bigint;
nr_seq_clinica_w		bigint;
nr_seq_guia_ww			bigint;
cd_senha_externa_ww		varchar(30);
ie_atualiza_apresentado_w 	varchar(1);
ie_prioridade_tx_item_w		varchar(2);
ie_status_item_analise_w	varchar(2);
nr_seq_diagostico_w		bigint;
cd_doenca_alta_w		varchar(10);
cd_doenca_imp_w			varchar(10);
ie_tipo_guia_conta_w		varchar(255);
cd_guia_referencia_conta_w	varchar(255);
nr_seq_segurado_conta_w		bigint;
ie_utilizar_regra_mat_w		varchar(1)	:= 'N';
ie_obriga_vinc_mat_w		varchar(255);
nr_seq_regra_intercambio_w	bigint;
qt_dias_envio_conta_w		bigint;
dt_atendimento_w		timestamp;
dt_permitida_w			timestamp;
qt_registro_w			bigint;
nr_seq_prestador_conta_w	pls_conta.nr_seq_prestador%type;
ie_regime_atendimento_w		pls_conta.ie_regime_atendimento%type;

C01 CURSOR FOR
	SELECT	a.ie_via_acesso,
		a.nr_sequencia,
		a.cd_procedimento,
		a.ie_tipo_despesa,
		b.ie_tipo_guia,
		b.cd_guia_referencia,
		b.nr_seq_segurado
	from	pls_conta_proc a,
		pls_conta b
	where	a.nr_seq_conta	= b.nr_sequencia
	and	b.nr_sequencia	= nr_seq_conta_p
	and	a.ie_status	not in ( 'D','M')
	order by a.vl_procedimento desc;

C02 CURSOR FOR   
	SELECT	nr_sequencia,
		nr_seq_material
	from	pls_conta_mat  
	where	nr_seq_conta	= nr_seq_conta_p
	and	ie_status	not in ( 'D','M')
	order by vl_material desc;
			
type vetor_mat is table of mat index by integer;

/* Vetores */

vetor_mat_w		vetor_mat;
total_mat		bigint	:= 1;
ind_mat			bigint	:= 1;


BEGIN
/* Obriga vinculo entre material da operadora e hospital */

select	coalesce(max(ie_obriga_vinc_mat),'N'),
	coalesce(max(ie_atualizar_valor_apresent),'N'),
	coalesce(max(ie_prioridade_tx_item_w),'VA')
into STRICT	ie_obriga_vinc_mat_w,
	ie_atualiza_apresentado_w,
	ie_prioridade_tx_item_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;
			
ie_evento_w	:= coalesce(ie_origem_regra_p, 'CC');

/* Obter dados da conta */

select	cd_guia,
	cd_guia_referencia,
	coalesce(cd_guia_referencia, cd_guia),
	nr_seq_tipo_acomodacao,
	nr_seq_protocolo,
	nr_seq_segurado,
	coalesce(ie_tipo_guia,'X'),
	coalesce(nr_seq_prestador_exec,0),
	cd_medico_executor,
	coalesce(nr_seq_grau_partic,0),
	ie_regime_internacao,
	ie_carater_internacao,
	nr_seq_tipo_atendimento,
	nr_seq_saida_spsadt,
	nr_seq_cbo_saude,
	nr_seq_conselho_exec,
	ie_origem_conta,
	nr_seq_fatura,
	nr_seq_analise,
	cd_senha_externa,
	dt_atendimento_referencia,
	ie_tipo_acomodacao_ptu,
	nr_seq_guia,
	nr_seq_prestador,
	ie_tipo_segurado,
	ie_regime_atendimento
into STRICT	cd_guia_w,
	cd_guia_referencia_w,
	cd_guia_conta_w,
	nr_seq_tipo_acomodacao_w,
	nr_seq_protocolo_w,
	nr_seq_segurado_w,
	ie_tipo_guia_w,
	nr_seq_prestador_exec_w,
	cd_medico_executor_w,
	nr_seq_grau_partic_w,
	ie_regime_internacao_w,
	ie_carater_internacao_w,
	nr_seq_tipo_atendimento_w,
	nr_seq_saida_spsadt_w,
	nr_seq_cbo_saude_w,
	nr_seq_conselho_exec_w,
	ie_origem_conta_w,
	nr_seq_fatura_w,
	nr_seq_analise_w,
	cd_senha_externa_ww,
	dt_atendimento_referencia_w,
	ie_tipo_acomodacao_ptu_w,
	nr_seq_guia_w,
	nr_seq_prestador_conta_w,
	ie_tipo_segurado_w,
	ie_regime_atendimento_w	
from	pls_conta
where	nr_sequencia	= nr_seq_conta_p;

/* Obter dados do protocolo */

select	ie_situacao,
	ie_tipo_guia,
	nr_seq_prestador,
	trunc(a.dt_protocolo)
into STRICT	ie_situacao_w,
	ie_tipo_guia_prot_w,
	nr_seq_prestador_w,
	dt_protocolo_w
from	pls_protocolo_conta a
where	a.nr_sequencia	= nr_seq_protocolo_w;
	
/* Definir o tipo de conta medica:
	O - Contas medicas recebidas da rede da Operadora
	I - Contas de intercambio, recebidas de outras Operadoras
	C - Contas a serem faturadas para outra Operadora */
if (coalesce(nr_seq_segurado_w,0) > 0) then

	/* Se a origem da conta for de A500, e recebida de outras operadoras */

	if (ie_origem_conta_w = 'A') then
		ie_tipo_conta_w	:= 'I';
	/* Se o tipo de beneficiario for Usuario eventual (Resp. Assumida), Intercambio entre OPS congeneres (Resp. Assumida) ou 
		Intercambio entre cooperativas (Resp. Assumida) o tipo de conta e para ser faturado para outra operadora*/
	elsif (ie_tipo_segurado_w in ('I','C','T','H')) then
		ie_tipo_conta_w	:= 'C';
	else
		ie_tipo_conta_w	:= 'O';
	end if;
end if;

/*Se a conta vier sem segurado e for A500*/

if (ie_origem_conta_w = 'A') then
	ie_tipo_conta_w	:= 'I';
end if;

begin
select	coalesce(max(cd_usuario_plano), '0')
into STRICT	cd_usuario_plano_w
from	pls_segurado_carteira a,
	pls_segurado b
where	a.nr_seq_segurado	= b.nr_sequencia
and	b.nr_sequencia		= nr_seq_segurado_w;
exception
when others then
	cd_usuario_plano_w	:= '0';
end;

if (ie_origem_conta_w = 'E')  then
	select	max(nr_sequencia)
	into STRICT	nr_seq_diagostico_w
	from	pls_diagnostico_conta
	where	ie_classificacao	= 'P'
	and	nr_seq_conta		= nr_seq_conta_p;
	
	select	max(cd_doenca),
		max(cd_doenca_imp)
	into STRICT	cd_doenca_alta_w,
		cd_doenca_imp_w
	from	pls_diagnostico_conta
	where	nr_sequencia		= nr_seq_diagostico_w;
	
	if (coalesce(nr_seq_diagostico_w,0) > 0) and (coalesce(cd_doenca_alta_w,'X') = 'X')then
		CALL pls_gravar_conta_glosa('1509', nr_seq_conta_p, null,
					null, 'N', 'Codigo informado: '||cd_doenca_imp_w,
					nm_usuario_p,'A',ie_evento_w,
					nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
	end if;
end if;

ie_internacao_w	:= pls_obter_se_internado(nr_seq_conta_p, 'C');

select	max(dt_procedimento)
into STRICT	dt_max_proc_w
from	pls_conta_proc
where	nr_seq_conta	= nr_seq_conta_p;

select	coalesce(max(dt_atendimento),dt_max_proc_w)
into STRICT	dt_max_mat_w
from	pls_conta_mat
where	nr_seq_conta	= nr_seq_conta_p;

if (dt_max_proc_w	>= dt_max_mat_w) then
	dt_max_item_w	:= dt_max_proc_w;
else
	dt_max_item_w	:= dt_max_mat_w;
end if;

if (ie_tipo_conta_w = 'I') then
	ie_evento_w	:= 'I5';
	
	-- jjung OS 611380 - Por conta desta rotina estava sempre abrindo o pacote no intercambio, sem respeitar o campo IE_ABRIR_A500 da tabela PLS_PACOTE_TIPO_ACOMODACAO.

	--pls_gerar_itens_pacote_conta(nr_seq_conta_p, nm_usuario_p); /* Inserir itens dos pacotes da conta */
	
	select	count(1) /*Quando a conta for de intercambio*/
	into STRICT	qt_conta_protocolo_w
	from	ptu_fatura		a,
		pls_conta		b,
		pls_protocolo_conta	c
	where	c.nr_sequencia	   = b.nr_seq_protocolo
	and	a.nr_seq_protocolo = b.nr_seq_protocolo
	and	b.nr_sequencia	   = nr_seq_conta_p  LIMIT 1;
	
	if (qt_conta_protocolo_w > 0) then
		begin
		select	a.cd_unimed_origem,
			a.cd_unimed_destino,
			b.nr_seq_segurado,
			b.dt_atendimento_referencia,
			substr(coalesce(b.nr_seq_prestador_exec_imp,0),1,10),
			b.ie_tipo_guia,
			a.dt_recebimento_fatura,
			b.dt_atendimento
		into STRICT	cd_unimed_origem_w,
			cd_unimed_destino_w,
			nr_seq_segurado_w,
			dt_atendimento_referencia_w,
			nr_seq_prestador_w,
			ie_tipo_guia_w,
			dt_recebimento_fatura_w,
			dt_atendimento_w
		from	ptu_fatura		a,
			pls_conta		b,
			pls_protocolo_conta	c
		where	c.nr_sequencia		= b.nr_seq_protocolo
		and	a.nr_seq_protocolo = b.nr_seq_protocolo
		and	b.nr_sequencia		= nr_seq_conta_p;
		exception
		when others then    
			nr_seq_segurado_w	:= null;
			cd_usuario_plano_w	:= '0';
		end;
		
		if (cd_usuario_plano_w <> '0') then
			begin
			cd_usuario_plano_w	:= substr(pls_obter_dados_segurado(nr_seq_segurado_w,'C'),1,30);
			exception
			when others then
				cd_usuario_plano_w	:= '0';
			end;
		end if;
	else
		begin
		select	a.cd_unimed_origem,
			a.cd_unimed_destino,
			b.nr_seq_segurado,
			b.dt_atendimento_referencia,
			substr(coalesce(b.nr_seq_prestador_exec_imp,0),1,10),
			b.ie_tipo_guia,
			a.dt_recebimento_fatura,
			b.dt_atendimento
		into STRICT	cd_unimed_origem_w,
			cd_unimed_destino_w,
			nr_seq_segurado_w,
			dt_atendimento_referencia_w,
			nr_seq_prestador_w,
			ie_tipo_guia_w,
			dt_recebimento_fatura_w,
			dt_atendimento_w
		from	ptu_fatura		a,
			pls_conta		b,
			pls_protocolo_conta	c
		where	c.nr_sequencia		= b.nr_seq_protocolo
		and	b.nr_seq_fatura		= a.nr_sequencia
		and	b.nr_sequencia		= nr_seq_conta_p;
		exception
		when others then    
			nr_seq_segurado_w	:= null;
			cd_usuario_plano_w	:= '0';
		end;
		
		if (cd_usuario_plano_w <> '0') then
			begin
			cd_usuario_plano_w	:= substr(pls_obter_dados_segurado(nr_seq_segurado_w,'C'),1,30);
			exception
			when others then
				cd_usuario_plano_w	:= '0';
			end;
		end if;
	end if;
	
	if (coalesce(nr_seq_segurado_w,0) = 0) then /*2004 - 	Cadastrao Beneficiario com problemas.*/
		CALL ptu_inserir_inconsistencia(null, null, 2004,
					   '', cd_estabelecimento_p, nr_seq_conta_p,
					   'CM', 'A500', null,
					   null, null, nm_usuario_p);
	else
		if (cd_unimed_origem_w = cd_unimed_destino_w) then /*2001 - Unimed solic e requer. sao a iguais*/
			CALL ptu_inserir_inconsistencia(null, null, 2001,
						   '', cd_estabelecimento_p, nr_seq_conta_p,
						   'CM', 'A500', null,
						   null, null, nm_usuario_p);
		end if;
		
		select	coalesce(ie_situacao_atend,'A') /*2008 - Beneficiario com atendimento suspenso*/
		into STRICT	ie_situacao_atend_w
		from	pls_segurado a
		where	a.nr_sequencia	= nr_seq_segurado_w;
		
		if (ie_situacao_atend_w = 'S') then
			CALL ptu_inserir_inconsistencia(null, null, 2008,
						   '', cd_estabelecimento_p, nr_seq_conta_p,
						   'CM', 'A500', null,
						   null, null, nm_usuario_p);
		end if;
		
		select	max(dt_validade_carteira) /*2017 - Data Validade da carteira vencida*/
		into STRICT	dt_validade_carteira_w
		from	pls_segurado_carteira
		where	cd_usuario_plano	= cd_usuario_plano_w
		and	nr_seq_segurado		= nr_seq_segurado_w;
		
		if	((fim_dia(dt_validade_carteira_w) < dt_atendimento_referencia_w) and (dt_validade_carteira_w IS NOT NULL AND dt_validade_carteira_w::text <> '')) then
			CALL ptu_inserir_inconsistencia(null, null, 2017,
						   '', cd_estabelecimento_p, nr_seq_conta_p,
						   'CM', 'A500', null,
						   null, null, nm_usuario_p);
		end if;
		
		if (nr_seq_prestador_w = 0) then /*2021 Hospital nao informado*/
			CALL ptu_inserir_inconsistencia(null, null, 2021,
						   '', cd_estabelecimento_p, nr_seq_conta_p,
						   'CM', 'A500', null,
						   null, null, nm_usuario_p);
		end if;
		
		select	max(dt_inicio_vigencia) /*2028 - Cartao do beneficiario com problemas*/
		into STRICT	dt_inicio_vigencia_w
		from	pls_segurado_carteira
		where	nr_seq_segurado		= nr_seq_segurado_w
		and	cd_usuario_plano	= cd_usuario_plano_w;
		
		if (trunc(dt_inicio_vigencia_w) > trunc(dt_atendimento_referencia_w)) then
			CALL ptu_inserir_inconsistencia(null, null, 2028,
						   '', cd_estabelecimento_p, nr_seq_conta_p,
						   'CM', 'A500', null,
						   null, null, nm_usuario_p);
		end if;
		
		/*2038 - Beneficiario com data inclusao futura*/

		select	dt_inclusao_operadora,
			pls_obter_produto_benef(nr_sequencia,dt_atendimento_referencia_w) as nr_seq_plano
		into STRICT	dt_contratacao_w,
			nr_seq_plano_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_segurado_w;
		
		if (trunc(dt_contratacao_w) > trunc(dt_atendimento_referencia_w)) then
			CALL ptu_inserir_inconsistencia(null, null, 2038,
						   '', cd_estabelecimento_p, nr_seq_conta_p,
						   'CM', 'A500', null,
						   null, null, nm_usuario_p);
		end if;
		
		/*2044 - Benfciario Inativo*/

		select	coalesce(ie_situacao_atend,'A')
		into STRICT	ie_situacao_atend_w
		from	pls_segurado a
		where	a.nr_sequencia	= nr_seq_segurado_w;
		
		if (ie_situacao_atend_w = 'I') then
			CALL ptu_inserir_inconsistencia(null, null, 2044,
						   '', cd_estabelecimento_p, nr_seq_conta_p,
						   'CM', 'A500', null,
						   null, null, nm_usuario_p);
		end if;
		
		if (ie_tipo_guia_w = 5) then /*Ocorrencias com relevancia somente para internacao*/

			/*2023 - acomodacao nao informada*/

			select	coalesce(nr_seq_tipo_acomodacao,0)
			into STRICT	nr_seq_tipo_acomodacao_w
			from	pls_conta
			where	nr_sequencia	= nr_seq_conta_p;
			
			if (nr_seq_tipo_acomodacao_w = 0) then /*Se nao for informado a acomodacao gera-se a glosa 2023*/
				CALL ptu_inserir_inconsistencia(null, null, 2023,
							   '', cd_estabelecimento_p, nr_seq_conta_p,
							   'CM', 'A500', null,
							   null, null, nm_usuario_p);
			end if;
		end if;
	end if;
	
	/* Francisco - 09/10/2012 - OS 502111 - Tratar quantidade de dias de envio da conta */

	nr_seq_regra_intercambio_w	:= pls_obter_regra_intercambio(nr_seq_conta_p,'P');
	
	if (nr_seq_regra_intercambio_w IS NOT NULL AND nr_seq_regra_intercambio_w::text <> '') then
		select	a.qt_dias_envio_conta
		into STRICT	qt_dias_envio_conta_w
		from	pls_regra_intercambio a
		where	a.nr_sequencia	= nr_seq_regra_intercambio_w;
		
		if (qt_dias_envio_conta_w > 0) and (trunc(dt_recebimento_fatura_w - coalesce(dt_atendimento_w,dt_atendimento_referencia_w)) > qt_dias_envio_conta_w) then
			
			dt_permitida_w	:= coalesce(dt_atendimento_w,dt_atendimento_referencia_w) + qt_dias_envio_conta_w;
			CALL pls_gravar_conta_glosa('1701', nr_seq_conta_p, null,
						null, 'N',
						'Data emissao: ' || coalesce(dt_atendimento_w,dt_atendimento_referencia_w) ||
							' / Data permitida: ' || dt_permitida_w,
						nm_usuario_p, 'A', ie_evento_w,
						nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
		end if;
	end if;
end if;

CALL pls_consistir_elegibilidade(nr_seq_segurado_w, ie_evento_w, nr_seq_conta_p,
	'C', nr_seq_prestador_exec_w, null,
	'', nm_usuario_p, cd_estabelecimento_p);

CALL pls_tiss_consistir_guia(nr_seq_conta_p, 'C', ie_evento_w,
	nr_seq_prestador_exec_w, null, '',
	nm_usuario_p, cd_estabelecimento_p);

CALL pls_tiss_consistir_prestador(nr_seq_conta_p, 'C', ie_evento_w,
	nr_seq_prestador_exec_w, null, '',
	nm_usuario_p, cd_estabelecimento_p);

CALL pls_tiss_consistir_autorizacao(nr_seq_conta_p, 'C', ie_evento_w,
		nr_seq_prestador_exec_w, null, '',
		nm_usuario_p, cd_estabelecimento_p,null);

CALL pls_tiss_consistir_atendimento(nr_seq_conta_p, 'C', ie_evento_w,
		nr_seq_prestador_exec_w, null, '',
		nm_usuario_p, cd_estabelecimento_p,null);

CALL pls_tiss_consistir_diagnostico(nr_seq_conta_p, 'C', ie_evento_w,
		nr_seq_prestador_exec_w, null, '',
		nm_usuario_p, cd_estabelecimento_p);

CALL pls_tiss_consistir_protocolo(nr_seq_conta_p, 'C', ie_evento_w,
		nr_seq_prestador_exec_w, null, '',
		nm_usuario_p, cd_estabelecimento_p);

if (ie_tipo_guia_w = '6') then
	CALL pls_tiss_consistir_honorario(nr_seq_conta_p, 'C', ie_evento_w,
			nr_seq_prestador_exec_w, null, '',
			nm_usuario_p, cd_estabelecimento_p,null);
end if;

if (ie_internacao_w = 'S') then
	CALL pls_tiss_consistir_diaria(nr_seq_conta_p, 'C', ie_evento_w,
		nr_seq_prestador_exec_w, null, '',
		nm_usuario_p, cd_estabelecimento_p);
end if;

begin
select	pls_obter_produto_benef(a.nr_sequencia,dt_atendimento_referencia_w)
into STRICT	nr_seq_plano_w
from	pls_segurado a
where	a.nr_sequencia	= nr_seq_segurado_w;
exception
when others then
	nr_seq_plano_w		:= null;
	CALL pls_gravar_conta_glosa('1013',nr_seq_conta_p,null,
				null,'N','Beneficiario nao informado',
				nm_usuario_p,'A',ie_evento_w,
				nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
end;

if (coalesce(nr_seq_plano_w,0) = 0) then /* Felipe - 13/06/2011 - OS 324801 */
	CALL pls_gravar_conta_glosa('1024', nr_seq_conta_p, null,
			null, 'N', 'Beneficiario sem produto informado no seu cadastro',
			nm_usuario_p, 'A', ie_evento_w,
			nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
end if;

if (cd_usuario_plano_w = '0') or (coalesce(cd_usuario_plano_w::text, '') = '') then
	CALL pls_gravar_conta_glosa('1001',nr_seq_conta_p,null,
				null,'N','Beneficiario nao informado',
				nm_usuario_p,'A',ie_evento_w,
				nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
end if;

begin
select	nr_seq_prestador
into STRICT	nr_seq_prest_guia_execu_w
from	pls_guia_plano
where	cd_guia		= cd_guia_conta_w
and	nr_seq_segurado	= nr_seq_segurado_w;
exception
when others then
	nr_seq_prest_guia_execu_w	:= nr_seq_prestador_exec_w;
end;

/* 1213 - CBOS(especialidade)invalido */

select	max(cd_tiss)
into STRICT	cd_tiss_tipo_atendimento_w
from	pls_tipo_atendimento
where	nr_sequencia	= nr_seq_tipo_atendimento_w;

nr_seq_prestador_dif_w	:= nr_seq_prestador_exec_w;

if (ie_tipo_guia_w	= '4') and
	((cd_tiss_tipo_atendimento_w = '07') or (ie_regime_atendimento_w = '03')) then
	nr_seq_prestador_dif_w	:= nr_seq_prestador_w;
end if;

nm_prestador_w	:= pls_obter_dados_prestador(nr_seq_prest_guia_execu_w,'N');

if	((ie_tipo_guia_w = '5') or ((ie_tipo_guia_w = '4') and (coalesce(cd_guia_referencia_w,'X') = 'X'))) and (coalesce(nr_seq_prestador_dif_w,0) > 0) and (coalesce(nr_seq_prest_guia_execu_w,0) > 0) and (coalesce(pls_obter_se_prestador_guia(nr_seq_prestador_dif_w,nr_seq_prest_guia_execu_w,nr_seq_conta_p),'N') = 'N') then
	
	CALL pls_gravar_conta_glosa('9914',nr_seq_conta_p,null,
				null,'N','Prestador executor diferente do prestador da guia. Prestador da guia: '||nr_seq_prest_guia_execu_w||' :'|| nm_prestador_w,
				nm_usuario_p,'A',ie_evento_w,
				nr_seq_prestador_dif_w, cd_estabelecimento_p, '',null);
end if;

select	sum(qt_itens)
into STRICT	qt_itens_w
from (SELECT	count(1) qt_itens
	from	pls_conta_proc
	where	nr_seq_conta	= nr_seq_conta_p
	
union all

	SELECT	count(1) qt_itens
	from	pls_conta_mat
	where	nr_seq_conta	= nr_seq_conta_p) alias3;

if (qt_itens_w = 0) then
	CALL pls_gravar_conta_glosa('1199', nr_seq_conta_p, null, null,
				'N','Nenhum item foi lancado para esta conta. Verifique!', nm_usuario_p,
				'A', ie_evento_w, nr_seq_prestador_w,
				cd_estabelecimento_p, '', null);
end if;

if (ie_tipo_conta_w <> 'I') then
	
	if (nr_seq_prestador_exec_w = 0) then
		CALL pls_gravar_conta_glosa('1311',nr_seq_conta_p,null,null,
					'N','Nao ha a informacao do prestador executor dessa conta',nm_usuario_p,
					'A',ie_evento_w,nr_seq_prestador_w,
					cd_estabelecimento_p, '', null);
		
		nr_seq_prestador_exec_w	:= nr_seq_prestador_w;
	else
		select	trunc(dt_protocolo_w - coalesce(qt_dias_envio_contas,0),'month'),
			coalesce(qt_dias_envio_contas,0)
		into STRICT	dt_envio_contas_w,
			qt_dias_envio_contas_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prestador_exec_w;
		
		if (qt_dias_envio_contas_w > 0) and (trunc(dt_atendimento_referencia_w,'month') < dt_envio_contas_w) then
			CALL pls_gravar_conta_glosa('1701', nr_seq_conta_p, null,
						null, 'N', 'Data emissao: ' || dt_atendimento_referencia_w || ' / Data permitida: ' || dt_envio_contas_w,
						nm_usuario_p, 'A', ie_evento_w,
						nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
		end if;
	end if;
	
	if (coalesce(nr_seq_prestador_w::text, '') = '') then
		CALL pls_gravar_conta_glosa('1203',nr_seq_conta_p,null,
					null,'N','',
					nm_usuario_p,'A',ie_evento_w,
					nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
	end if;
end if;	

if (ie_tipo_guia_w = 'X') then
	ds_obs_glosa_w	:= 'Nao foi informado o tipo de guia da conta';
elsif (ie_tipo_guia_w <> ie_tipo_guia_prot_w) then
	ds_obs_glosa_w	:= 'Tipo de guia da conta diferente do tipo de guia do protocolo';
else
	ds_obs_glosa_w	:= 'X';
end if;

if (ds_obs_glosa_w	<> 'X') then
	CALL pls_gravar_conta_glosa('1301',nr_seq_conta_p,null,
				null,'N',ds_obs_glosa_w,
				nm_usuario_p,'A',ie_evento_w,
				nr_seq_prestador_w, cd_estabelecimento_p, '',null);
end if;

select	count(1)
into STRICT	qt_cbo_ativo_w
from	cbo_saude
where	nr_sequencia = nr_seq_cbo_saude_w
and	ie_situacao  = 'A';
			
if (ie_tipo_guia_w	= '4') then /* SP/SADT */

	/* 1602 - Tipo de atendimento invalido ou nao informado */

	if (coalesce(nr_seq_tipo_atendimento_w,0) = 0) then
		CALL pls_gravar_conta_glosa('1602', nr_seq_conta_p, null,
					null, 'N', 'Tipo de atendimento: ' || nr_seq_tipo_atendimento_w,
					nm_usuario_p,'A',ie_evento_w,
					nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
	end if;
	
	/* 1604 - Tipo de saida invalido */

	if (coalesce(nr_seq_saida_spsadt_w,0) = 0) then
		CALL pls_gravar_conta_glosa('1604', nr_seq_conta_p, null,
					null, 'N', 'Tipo saida: ' || nr_seq_saida_spsadt_w,
					nm_usuario_p,'A',ie_evento_w,
					nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
	end if;
	
	if (cd_tiss_tipo_atendimento_w = '04')  then
		if (coalesce(cd_medico_executor_w,'0') <> '0') and (coalesce(nr_seq_cbo_saude_w::text, '') = '') then
			CALL pls_gravar_conta_glosa('1213', nr_seq_conta_p, null,
						null, 'N', 'Tipo atendimento: ' || nr_seq_tipo_atendimento_w ||
							' / Codigo TISS: ' || cd_tiss_tipo_atendimento_w || ' / CBO: ' || nr_seq_cbo_saude_w,
						nm_usuario_p,'A',ie_evento_w,
						nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
						
		elsif (nr_seq_cbo_saude_w IS NOT NULL AND nr_seq_cbo_saude_w::text <> '')	then
			
			/*Realizado o tratamento dentro das consistencia de tipo de guia SP/SADT e tipo de atendimento consulta.
			 Em conversa com o Decio, verificamos a possibilidade de este tratamento ser realizado fora dessa consistencia,
			 porem o mesmo nao foi realizado pois iria validar informacaes que nao estavam sendo validadas para outros clientes.
			 
			 Demitrius - OS 557307
			*/

			/*Verificar se o CBO informado esta nulo ou nao*/

			if (qt_cbo_ativo_w = 0)	then
				CALL pls_gravar_conta_glosa('1213', nr_seq_conta_p, null,
							null, 'N', 'Tipo atendimento: ' || nr_seq_tipo_atendimento_w ||
								' / Codigo TISS: ' || cd_tiss_tipo_atendimento_w || ' / CBO nulo: ' || nr_seq_cbo_saude_w,
							nm_usuario_p,'A',ie_evento_w,
							nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
			end if;
			
		
		end if;
		if (coalesce(cd_medico_executor_w,'0') = '0') then /* 9916 - Profissional executante complementar nao informado */
			CALL pls_gravar_conta_glosa('9916', nr_seq_conta_p, null,
						null, 'N',
						'Para guia de SP/SADT com tipo de atendimento Consulta, o profissional executor e obrigatorio',
						nm_usuario_p, 'A', ie_evento_w,
						nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
		end if;
	end if;
elsif (ie_tipo_guia_w	= '5') then /* Resumo de internacao */
	select	count(1)
	into STRICT	qt_diagnostico_w
	from	pls_diagnostico_conta
	where	nr_seq_conta	= nr_seq_conta_p;
	
	if (qt_diagnostico_w = 0) then
		CALL pls_gravar_conta_glosa('9912', nr_seq_conta_p, null,
					null, 'N', 'Verificar na pasta Diagnostico',
					nm_usuario_p, 'A', ie_evento_w,
					nr_seq_prestador_exec_w, cd_estabelecimento_p, '',null);
	end if;
	
	if (coalesce(ie_regime_internacao_w,'X') = 'X') then
		CALL pls_gravar_conta_glosa('1505', nr_seq_conta_p, null,
					null, 'N', '',
					nm_usuario_p, 'A', ie_evento_w,
					nr_seq_prestador_exec_w, cd_estabelecimento_p, '',null);
	end if;
	
	if (coalesce(cd_guia_conta_w,'#@') <>'#@') then
		begin
		select	max(nr_sequencia)
		into STRICT	nr_seq_guia_ww
		from	pls_guia_plano
		where	cd_guia		= cd_guia_conta_w
		and	nr_seq_segurado	= nr_seq_segurado_w;
		exception
		when others then
			nr_seq_guia_ww	:= null;
		end;
		
		if (nr_seq_guia_ww IS NOT NULL AND nr_seq_guia_ww::text <> '') then
			select	max(nr_seq_clinica)
			into STRICT	nr_seq_clinica_guia_w
			from	pls_guia_plano
			where	nr_sequencia = nr_seq_guia_ww;

			if (nr_seq_clinica_guia_w IS NOT NULL AND nr_seq_clinica_guia_w::text <> '') and (nr_seq_clinica_w IS NOT NULL AND nr_seq_clinica_w::text <> '') then
				/* VERIFICA SE O TIPO INTERNACAO DA CONTA e O MESMO DA GUIA DE AUTORIZACAO.*/

				if ( nr_seq_clinica_w <> nr_seq_clinica_guia_w ) then
					CALL pls_gravar_conta_glosa('1506', nr_seq_conta_p, null,
								null, 'N', 'Tipo de internacao diferente da autorizada.',
								nm_usuario_p, 'A', ie_evento_w,
								nr_seq_prestador_exec_w, cd_estabelecimento_p, '',null);
				end if;
			end if;
		end if;
	end if;
end if;

if	((coalesce(nr_seq_cbo_saude_w::text, '') = '') or (qt_cbo_ativo_w = 0))and
	(not(cd_tiss_tipo_atendimento_w	= '04' AND ie_tipo_guia_w = '4')) then
	if (pls_obter_se_regra_cbo(ie_tipo_guia_w,nr_seq_prestador_exec_w,nr_seq_tipo_atendimento_w) = 'S') then
		CALL pls_gravar_conta_glosa('1213', nr_seq_conta_p, null,
						null, 'N', 'Tipo atendimento: ' || nr_seq_tipo_atendimento_w ||
							' / Codigo TISS: ' || cd_tiss_tipo_atendimento_w || ' / CBO: ' || nr_seq_cbo_saude_w,
						nm_usuario_p,'A',ie_evento_w,
						nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
	end if;
end if;

if (ie_tipo_guia_w	in ('4','6')) then
	if (coalesce(cd_medico_executor_w,'X') <> 'X') then
		/* 9915 - Dados do conselho profissional nao informado */

		if (coalesce(nr_seq_conselho_exec_w,0) = 0) then
			CALL pls_gravar_conta_glosa('9915', nr_seq_conta_p, null,
					null, 'N', sg_conselho_exec_w,
					nm_usuario_p, 'A', ie_evento_w,
					nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
		end if;
		
	end if;
end if;

if (coalesce(nr_seq_tipo_acomodacao_w,0) > 0) then

	/*Obter codigo de acomodacao a partir da seq. */

	select	max(cd_tipo_acomodacao)
	into STRICT	cd_tipo_acomodacao_w
	from	pls_tipo_acomodacao
	where	nr_sequencia = nr_seq_tipo_acomodacao_w;
	
	if (coalesce(cd_guia_conta_w,'X') <> 'X') then
		select	count(1)
		into STRICT	qt_guias_w
		from	pls_guia_plano
		where	cd_guia		= cd_guia_conta_w
		and	nr_seq_segurado	= nr_seq_segurado_w;
		
		/*Se houver uma guia informada na conta e esta tiver sua ORIGEM NA AUTORIZACAES*/

		if (qt_guias_w > 0) then
			begin
			select	nr_seq_tipo_acomodacao
			into STRICT	nr_seq_tipo_acomodacao_guia_w
			from	pls_guia_plano
			where	cd_guia 		= cd_guia_conta_w
			and	nr_seq_segurado		= nr_seq_segurado_w
			and	nr_seq_prestador	= nr_seq_prestador_exec_w;
			exception
			when others then
				nr_seq_tipo_acomodacao_guia_w	:= null;
			end;
			/*Se nao consistir a acomodacao informada na conta com a autorizada e gardo a glosa 1909 -> alterado para 1401 OS 757971*/

			if (nr_seq_tipo_acomodacao_guia_w <> nr_seq_tipo_acomodacao_w) then
				CALL pls_gravar_conta_glosa('1401', nr_seq_conta_p, null,
					null, 'N', 'O tipo de acomodacao nao consiste com o tipo de acomodacao autorizado na guia.',
					nm_usuario_p, 'A', ie_evento_w,
					nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
			end if;
		end if;
	end if;
elsif (ie_tipo_conta_w = 'I')		then --Intercambio A500
	select	count(1)
	into STRICT	qt_guias_w
	from	pls_guia_plano
	where	cd_guia		= cd_guia_conta_w
	and	nr_seq_segurado	= nr_seq_segurado_w;
	
			
	if (qt_guias_w > 0) then
		begin
		select	max(nr_seq_tipo_acomodacao)
		into STRICT	nr_seq_tipo_acomodacao_guia_w
		from	pls_guia_plano
		where	cd_guia 		= cd_guia_conta_w
		and	nr_seq_segurado		= nr_seq_segurado_w
		and	ie_status		= 1
		and	((nr_seq_prestador	= nr_seq_prestador_exec_w)
		or (coalesce(nr_seq_prestador::text, '') = ''));
		exception
		when others then
			nr_seq_tipo_acomodacao_guia_w	:= null;
		end;
		if (nr_seq_tipo_acomodacao_guia_w IS NOT NULL AND nr_seq_tipo_acomodacao_guia_w::text <> '')	then
			begin
			select	ie_tipo_acomodacao_ptu
			into STRICT	ie_tipo_acomodacao_guia_w
			from	pls_tipo_acomodacao
			where	nr_sequencia = nr_seq_tipo_acomodacao_guia_w;
			exception
			when others then
				ie_tipo_acomodacao_guia_w	:= null;
			end;
			--Alterado da glosa 1909 para 1401 OS 757971
			if (ie_tipo_acomodacao_guia_w <> ie_tipo_acomodacao_ptu_w)	then
				CALL pls_gravar_conta_glosa('1401', nr_seq_conta_p, null,
							null, 'N', 'O tipo de acomodacao nao consiste com o tipo de acomodacao autorizado na guia.',
							nm_usuario_p, 'A', ie_evento_w,
							nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
			end if;

		end if;
	end if;
end if;

if (coalesce(nr_seq_guia_w::text, '') = '') then
	nr_seq_guia_w	:= 0;
end if;

select	max(nr_seq_segurado)
into STRICT	nr_seq_segurado_guia_w
from	pls_guia_plano
where	nr_sequencia	= nr_seq_guia_w;

if (coalesce(nr_seq_segurado_guia_w::text, '') = '' ) then
	nr_seq_segurado_guia_w	:= 0;
end if;

/* Francisco - OS 194256 - 08/02/2010 - Criei o else pois precisa tratar glosa de suspensao,
quando exige guia ja trata na suspensao */
if (cd_guia_referencia_w IS NOT NULL AND cd_guia_referencia_w::text <> '') and (cd_guia_referencia_w <> '0') and (ie_tipo_guia_w in ('4','5')) then
	/* Paulo - OS 488768 -Alterado para funcionar independente do tipo de atendimento das guias de SP/SADT */

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_guia_ref_w
	from	pls_guia_plano
	where	cd_guia		= cd_guia_referencia_w
	and	nr_seq_segurado	= nr_seq_segurado_w;
	
	/* Felipe - 10/03/2011 - OS 284547
	A glosa deve ser gerada quando:
	SP/SADT - for digitada no campo guia referencia um numero de guia que nao existe para o mesmo beneficiario.
	INTERNACAO -  quando for digitada no campo guia referencia um numero que e diferente da solicitacao  de internacao do mesmo beneficiario. */
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_conta_ref_w
	from	pls_conta
	where	cd_guia		= cd_guia_referencia_w
	and	nr_seq_segurado	= nr_seq_segurado_w;
	
	if (cd_guia_referencia_w <> cd_guia_w) then
		if (nr_seq_guia_ref_w = 0) and (nr_seq_conta_ref_w = 0) then
			CALL pls_gravar_conta_glosa('1306',nr_seq_conta_p,null,
						null,'N','',
						nm_usuario_p,'A',ie_evento_w,
						nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
		elsif (nr_seq_conta_ref_w = 0) then
			select	ie_status
			into STRICT	ie_status_guia_w
			from	pls_guia_plano
			where	nr_sequencia	= nr_seq_guia_ref_w;
			if (ie_status_guia_w <> '1') then
				CALL pls_gravar_conta_glosa('1399',nr_seq_conta_p,null,
							null,'N','Guia nao autorizada [2] - ' || cd_guia_referencia_w || ' - ' || nr_seq_segurado_w,
							nm_usuario_p,'A',ie_evento_w,
							nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
			end if;
		end if;
	end if;
end if;

-- Alex 01/03/2010 - OS - 196232, Verificar se o prestador esta cadastrado com o produto da conta
CALL pls_consistir_prest_plano(ie_evento_w,nr_seq_prestador_exec_w,nr_seq_conta_p,null,null,null,null,null,cd_estabelecimento_p,nm_usuario_p);

/*Diether - OS - 266284 */

SELECT * FROM pls_consiste_rede_atend(nr_seq_conta_p, null, null, null, null, null, null, null, nm_usuario_p, cd_estabelecimento_p, nr_seq_regra_w, ie_permite_w) INTO STRICT nr_seq_regra_w, ie_permite_w;

CALL pls_consiste_glosa_proc(nr_seq_conta_p, ie_evento_w, nm_usuario_p, cd_estabelecimento_p);

CALL pls_gerar_glosa_via_acesso( nr_seq_conta_p, ie_evento_w, nr_seq_prestador_w, cd_estabelecimento_p, nm_usuario_p);

/*Robson da silva - OS 241699 - Data de Validade da Senha e anterior a Data do Atendimento*/

if (cd_guia_w IS NOT NULL AND cd_guia_w::text <> '') then
	begin
		select	trunc(dt_validade_senha)
		into STRICT	dt_validade_senha_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_w;
	exception
	when others then
	dt_validade_senha_w	:= null;
	end;
	
	if (dt_validade_senha_w IS NOT NULL AND dt_validade_senha_w::text <> '') and (dt_validade_senha_w < dt_atendimento_referencia_w) then
		CALL pls_gravar_conta_glosa('1405',nr_seq_conta_p,null,
					null,'N','',
					nm_usuario_p,'A',ie_evento_w,
					nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
	end if;
end if;

if (coalesce(nr_seq_segurado_w,0) > 0) then
	begin
	select	dt_rescisao,
		fim_dia(dt_limite_utilizacao)
	into STRICT	dt_rescisao_w,
		dt_limite_utilizacao_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
	exception
	when others then
		dt_rescisao_w	:= null;
		dt_limite_utilizacao_w	:= null;
	end;
	
	dt_ref_glosa_w	:= coalesce(pls_obter_regra_glosa_tiss('1014', 'D', dt_atendimento_referencia_w, dt_max_item_w), dt_atendimento_referencia_w);
	
	if (dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') and (dt_ref_glosa_w > dt_limite_utilizacao_w) then
		CALL pls_gravar_conta_glosa('1014',nr_seq_conta_p,null,
					null,'N','',
					nm_usuario_p,'A',ie_evento_w,
					nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
	end if;
end if;

select	count(1)
into STRICT	qt_benef_operadora_w
from	pls_segurado
where	nr_sequencia		= nr_seq_segurado_w
and	ie_tipo_segurado	= 'B';

if (qt_benef_operadora_w <> 0) then
	select	max(dt_inclusao_operadora)
	into STRICT	dt_contratacao_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
	
	/*Verificacao da glosa 1004 - Solicitacao Anterior e Inclusao do Beneficiario*/

	if (trunc(dt_contratacao_w,'dd') > trunc(dt_atendimento_referencia_w,'dd')) then
		CALL pls_gravar_conta_glosa('1004',nr_seq_conta_p,null,
						null,'N','',
						nm_usuario_p,'A',ie_evento_w,
						nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
	end if;
end if;

CALL pls_define_regra_retorno(null, null, nr_seq_conta_p, 'CC', nm_usuario_p); /* Alexandre 09/09/2010 - OS 245499 - Verificar as regras de retorno */
begin
/* Obter dados do beneficiario */

select	pls_obter_produto_benef(a.nr_sequencia,dt_atendimento_referencia_w)
into STRICT	nr_seq_plano_w
from	pls_segurado	a
where	a.nr_sequencia	= nr_seq_segurado_w;
exception
when others then
	nr_seq_plano_w		 := null;
end;

/* Obter dados do produto */

if (coalesce(nr_seq_plano_w,0) > 0) then
	select	a.ie_tipo_contratacao,
		a.ie_participacao,
		a.ie_preco
	into STRICT	ie_tipo_contratacao_w,
		ie_participacao_w,
		ie_preco_plano_w
	from	pls_plano	a
	where	a.nr_sequencia	= nr_seq_plano_w;
end if;

select	ie_exige_autorizacao
into STRICT	ie_consistir_guia_w
from	pls_conta
where	nr_sequencia	= nr_seq_conta_p;

if (coalesce(ie_consistir_guia_w,'N') = 'N')	then
	ie_consistir_guia_w	:= pls_obter_se_exige_guia(nr_seq_conta_p,null);
end if;

if (coalesce(ie_consistir_guia_w,'N') = 'S') then
	if (nr_seq_guia_w = 0) or (nr_seq_segurado_w <> nr_seq_segurado_guia_w) then
		CALL pls_gravar_conta_glosa('1307',nr_seq_conta_p,null,
					null,'N','Operadora exige autorizacao para esta conta (CC)',
					nm_usuario_p,'A',ie_evento_w,
					nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
	else
		select	ie_status
		into STRICT	ie_status_guia_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_w
		and	nr_seq_segurado	= nr_seq_segurado_w;
		
		if (ie_status_guia_w <> '1') then
			CALL pls_gravar_conta_glosa('1399',nr_seq_conta_p,null,
						null,'N','Guia nao autorizada [1] - ' || nr_seq_guia_w || ' - ' || nr_seq_segurado_w,
						nm_usuario_p,'A',ie_evento_w,
						nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
		end if;
	end if;
end if;

if (ie_internacao_w = 'S') then
	
	select	coalesce(max(ie_tipo_guia),'1')
	into STRICT	ie_tipo_guia_ref_w
	from	pls_guia_plano
	where	nr_sequencia = nr_seq_guia_w
	and	ie_status <> '3'; -- 3 = Negado
	
	-- precisa ser solicitacao ou prorrogacao de internacao
	if (ie_tipo_guia_ref_w	not in ('1', '8')) then
		ds_tipo_guia_ref_w	:= obter_valor_dominio(1746, ie_tipo_guia_ref_w) || ' (' || ie_tipo_guia_ref_w || ')';
		CALL pls_gravar_conta_glosa('1302', nr_seq_conta_p, null,
					null, 'N', 'Tipo guia referencia: ' || ds_tipo_guia_ref_w,
					nm_usuario_p,'A',ie_evento_w,
					nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
	end if;
end if;

if	(ie_tipo_guia_w in ('6','5') or
	((ie_tipo_guia_w = 4) and
	((ie_regime_atendimento_w <> '03') or (pls_obter_dados_tipo_atend(nr_seq_tipo_atendimento_w,'T') <> '07')))) then
	CALL pls_tiss_consistir_honorario(nr_seq_conta_p, 'C', ie_evento_w,
					null, null, '',
					nm_usuario_p, cd_estabelecimento_p,null);
end if;

/* 
*****************************************************************************************************
Esta funcao vai precisar ser refeita, entao, como tem glosa, liberacao de valores e outras coisas misturadas, por enquanto vou deixar aqui mesmo
dlehmkuhl 13/12/2013 - #DecioAqui - refazer pls_obter_regra_valor_conta

Fazer a verificacao se o item sera liberado pelo sistema quando os valores nao estao de acordo
Utiliza a funcao OPS - Cadastro de Regras / Contas medicas / Liberacao de valores na conta
******************************************************************************************************
*/
CALL pls_obter_regra_valor_conta(nr_seq_conta_p,null,null,ie_origem_regra_p,nm_usuario_p);

qt_registro_w	:= 0;
open C01;
loop
fetch C01 into 
	ie_via_acesso_w,
	nr_seq_conta_proc_w,
	cd_procedimento_w,
	ie_tipo_despesa_w,
	ie_tipo_guia_conta_w,
	cd_guia_referencia_conta_w,
	nr_seq_segurado_conta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_status_item_analise_w := '';
	
	if (coalesce(nr_seq_analise_w,0) > 0) then
		select	max(ie_status)
		into STRICT	ie_status_item_analise_w
		from	w_pls_resumo_conta
		where	nr_seq_conta_proc = nr_seq_conta_proc_w
		and	nr_seq_analise	  = nr_seq_analise_w;
	end if;
	
	if (coalesce(ie_status_item_analise_w,'X') <> 'C') then
		if (coalesce(cd_procedimento_w,0) <> 0) then
			CALL pls_consistir_conta_proc(nr_seq_conta_proc_w, cd_estabelecimento_p,'S', nm_usuario_p, 'S');
		else
			if (ie_tipo_despesa_w = '4') then
				CALL pls_gravar_conta_glosa('2801',null,nr_seq_conta_proc_w,
							null,'N', 'Servico invalido.',
							nm_usuario_p,'A',ie_evento_w,
							nr_seq_prestador_w, cd_estabelecimento_p, '', null);
			else
				CALL pls_gravar_conta_glosa('1801',null,nr_seq_conta_proc_w,
							null,'N', 'Servico invalido.',
							nm_usuario_p,'A',ie_evento_w,
							nr_seq_prestador_w, cd_estabelecimento_p, '', null);
			end if;
		end if;
	end if;
	
	if (ie_commit_p = 'S') and (qt_registro_w > 30) then
		qt_registro_w	:= 0;
		commit;
	end if;
	qt_registro_w	:= qt_registro_w + 1;
	end;
end loop;
close C01;

if (ie_tipo_guia_w	<> '3') then
	/*Obter o valor do parametro 10 */

	ind_mat	:= 1;
	open C02;
	loop
	fetch C02 into
		nr_seq_conta_mat_w,
		nr_seq_material_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		vetor_mat_w[ind_mat].nr_seq_conta_mat	:= nr_seq_conta_mat_w;
		vetor_mat_w[ind_mat].nr_seq_material	:= nr_seq_material_w;
		ind_mat	:= ind_mat + 1;
		end;
	end loop;
	close C02;
	
	qt_registro_w	:= 0;
	total_mat := vetor_mat_w.count;
	for ind_mat in 1.. total_mat loop
		begin
		nr_seq_conta_mat_w	:= vetor_mat_w[ind_mat].nr_seq_conta_mat;
		nr_seq_material_w	:= vetor_mat_w[ind_mat].nr_seq_material;
		ie_status_item_analise_w := '';
		
		if (coalesce(nr_seq_analise_w,0) > 0) then
			select	max(ie_status)
			into STRICT	ie_status_item_analise_w
			from	w_pls_resumo_conta
			where	nr_seq_conta_mat  = nr_seq_conta_mat_w
			and	nr_seq_analise	  = nr_seq_analise_w;
		end if;
		/*
		Diego OS 449989 - Para que os itens cancelados nao sejam consistidos novamente.
		*/
		if (coalesce(ie_status_item_analise_w,'X') <> 'C') then
			if (coalesce(nr_seq_material_w,0) <> 0) or (ie_obriga_vinc_mat_w = 'N' and
				coalesce(nr_seq_material_w::text, '') = '') then
				
				CALL pls_consistir_conta_mat(	nr_seq_conta_mat_w, cd_estabelecimento_p,
								'S', nm_usuario_p,
								ie_utilizar_regra_mat_w, 'S');
			else
				CALL pls_gravar_conta_glosa(	'2003', null, null,
							nr_seq_conta_mat_w, 'N', 'Material invalido.',
							nm_usuario_p, 'A', ie_evento_w,
							nr_seq_prestador_w, cd_estabelecimento_p, '',
							null);
			end if;
		end if;
		
		if (ie_commit_p = 'S') and (qt_registro_w > 100) then
			qt_registro_w	:= 0;
			commit;
		end if;
		qt_registro_w := qt_registro_w + 1;
		end;
	end loop;
end if;

if (coalesce(ie_commit_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cta_gerar_glosa ( nr_seq_conta_p pls_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, ie_commit_p text, ie_origem_regra_p text) FROM PUBLIC;

