-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_pf_beneficiario ( cd_usuario_convenio_p text, nm_pessoa_fisica_p text, nr_identidade_p text, nr_cpf_p text, ds_orgao_emissor_p pessoa_fisica.ds_orgao_emissor_ci%type, sg_uf_orgao_emissor_p text, ds_pais_rg_p text, ie_sexo_p text, dt_nascimento_p text, nm_mae_p text, cd_cep_p text, cd_cidade_p text, ds_cidade_p text, sg_uf_p text, ds_bairro_p text, ds_logradouro_p text, nr_endereco_p text, ds_complemento_p text, nr_telefone_1_p text, nr_telefone_2_p text, ds_email_p text, nm_usuario_p text, cd_pessoa_fisica_p INOUT text, ie_resultado_p INOUT text, ds_mensagem_p INOUT text) AS $body$
DECLARE


cd_pessoa_fisica_w	varchar(10);
sql_errm_w		varchar(2000);
ds_mensagem_w		varchar(2000);
ie_resultado_w		varchar(1)	:= '0';
qt_teste_w		bigint;


BEGIN

ds_mensagem_w	:= substr(wheb_mensagem_pck.get_texto(304995),1,255);

if	((nr_cpf_p <> '') or (nr_cpf_p IS NOT NULL AND nr_cpf_p::text <> '')) then

	begin
	select	max(cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_w
	from	pessoa_fisica
	where	nr_cpf	= nr_cpf_p;
	exception
		when others then
		cd_pessoa_fisica_w	:= '-1';
	end;

	if (cd_pessoa_fisica_w <> '-1') then

		begin
		update 	pessoa_fisica
		set	nm_usuario			= nm_usuario_p,
			dt_atualizacao			= clock_timestamp(),
			nm_pessoa_fisica		= coalesce(nm_pessoa_fisica_p,nm_pessoa_fisica),
			nr_identidade			= coalesce(nr_identidade_p,nr_identidade),
			ds_orgao_emissor_ci		= coalesce(ds_orgao_emissor_p,ds_orgao_emissor_ci),
			sg_emissora_ci			= coalesce(sg_uf_orgao_emissor_p,sg_emissora_ci),
			ie_sexo				= coalesce(ie_sexo_p,ie_sexo),
			dt_nascimento			= coalesce(to_date(dt_nascimento_p,'dd/mm/yyyy'),dt_nascimento),
			nm_pessoa_fisica_sem_acento	= coalesce(elimina_acentuacao(nm_pessoa_fisica_p), nm_pessoa_fisica_sem_acento),
			nm_pessoa_pesquisa		= coalesce(padronizar_nome(nm_pessoa_fisica_p),nm_pessoa_pesquisa)
		where	cd_pessoa_fisica		= cd_pessoa_fisica_w;
		exception
			when others then
			cd_pessoa_fisica_w	:= '-1';
			sql_errm_w	:= substr(sqlerrm,1,200);
			ds_mensagem_w	:= sql_errm_w;
			ie_resultado_w	:= '1';
			/*insert into logxxxx_tasy (dt_atualizacao, nm_usuario, cd_log, ds_log)
				values (sysdate, nm_usuario_p, 45874, 'Erro ao atualizar PF: ' || sql_errm_w);
			commit;*/
		end;

		if (cd_pessoa_fisica_w <> '-1') then

			begin
			select	count(*)
			into STRICT	qt_teste_w
			from	compl_pessoa_fisica
			where	cd_pessoa_fisica 	= cd_pessoa_fisica_w
			and 	ie_tipo_complemento 	= 1;
			exception
				when others then
				sql_errm_w	:= substr(sqlerrm,1,200);
				/*insert	into logxxxxxx_tasy (cd_log, nm_usuario, dt_atualizacao, ds_log)
					values	(45874,	nm_usuario_p, sysdate, 'Erro ao verificar complemento: ' || sql_errm_w);
				commit;			*/
			end;

			if (qt_teste_w > 0) then

				begin
				update 	compl_pessoa_fisica
				set	dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p,
					cd_cep			= coalesce(cd_cep_p,cd_cep),
					cd_municipio_ibge	= coalesce(cd_cidade_p,cd_municipio_ibge),
					ds_municipio		= coalesce(ds_cidade_p,ds_municipio),
					sg_estado		= coalesce(sg_uf_p,sg_estado),
					ds_bairro		= coalesce(ds_bairro_p,ds_bairro),
					nr_endereco		= coalesce(nr_endereco_p,nr_endereco),
					ds_complemento		= coalesce(ds_complemento_p,ds_complemento),
					nr_telefone		= coalesce(nr_telefone_1_p,nr_telefone),
					ds_email		= coalesce(ds_email_p,ds_email)
				where	cd_pessoa_fisica 	= cd_pessoa_fisica_w
				and 	ie_tipo_complemento 	= 1;
				exception
					when others then
					sql_errm_w		:= substr(sqlerrm,1,200);
					ds_mensagem_w	:= sql_errm_w;
					ie_resultado_w	:= '1';
					/*insert into logxxxx_tasy (dt_atualizacao, nm_usuario, cd_log, ds_log)
					values (sysdate, nm_usuario_p, 45874, 'Erro ao atualizar Endereço: ' || sql_errm_w);
					commit;*/
				end;

				if (nm_mae_p IS NOT NULL AND nm_mae_p::text <> '') then

					begin
					update 	compl_pessoa_fisica
					set	dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_usuario_p,
						nm_contato		= nm_mae_p
					where	cd_pessoa_fisica 	= cd_pessoa_fisica_w
					and 	ie_tipo_complemento 	= 5;
					exception
						when others then
						sql_errm_w		:= substr(sqlerrm,1,200);
						ds_mensagem_w	:= sql_errm_w;
						ie_resultado_w	:= '1';
						/*insert into logxxxxxx_tasy (dt_atualizacao, nm_usuario, cd_log, ds_log)
						values (sysdate, nm_usuario_p, 45874, 'Erro ao atualizar Mãe: ' || sql_errm_w);
						commit;*/
					end;

				end if;

			end if;

		end if;

	end if;

elsif	((nm_mae_p <> '') or (nm_mae_p IS NOT NULL AND nm_mae_p::text <> '')) then

	begin
	select	max(a.cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_w
	from	pessoa_fisica a,
		compl_pessoa_fisica b
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	b.nm_contato		= nm_mae_p
	and	a.dt_nascimento		= dt_nascimento_p;
	exception
		when others then
		cd_pessoa_fisica_w	:= '-1';
	end;

	if (cd_pessoa_fisica_w <> '-1') then

		begin
		update 	pessoa_fisica
		set	nm_usuario			= nm_usuario_p,
			dt_atualizacao			= clock_timestamp(),
			nm_pessoa_fisica		= coalesce(nm_pessoa_fisica_p,nm_pessoa_fisica),
			nr_identidade			= coalesce(nr_identidade_p,nr_identidade),
			ds_orgao_emissor_ci		= coalesce(ds_orgao_emissor_p,ds_orgao_emissor_ci),
			sg_emissora_ci			= coalesce(sg_uf_orgao_emissor_p,sg_emissora_ci),
			ie_sexo				= coalesce(ie_sexo_p,ie_sexo),
			dt_nascimento			= coalesce(to_date(dt_nascimento_p,'dd/mm/yyyy'),dt_nascimento),
			nm_pessoa_fisica_sem_acento	= coalesce(elimina_acentuacao(nm_pessoa_fisica_p),nm_pessoa_fisica_sem_acento),
			nm_pessoa_pesquisa		= coalesce(padronizar_nome(nm_pessoa_fisica_p),nm_pessoa_pesquisa)
		where	cd_pessoa_fisica		= cd_pessoa_fisica_w;
		exception
			when others then
			cd_pessoa_fisica_w	:= '-1';
			sql_errm_w	:= substr(sqlerrm,1,200);
			ds_mensagem_w	:= sql_errm_w;
			ie_resultado_w	:= '1';
			/*insert into logxxxxx_tasy (dt_atualizacao, nm_usuario, cd_log, ds_log)
				values (sysdate, nm_usuario_p, 45874, 'Erro ao atualizar PF: ' || sql_errm_w);
			commit;*/
		end;

		cd_pessoa_fisica_p	:= cd_pessoa_fisica_w;

		if (cd_pessoa_fisica_w <> '-1') then

			begin
			select	count(*)
			into STRICT	qt_teste_w
			from	compl_pessoa_fisica
			where	cd_pessoa_fisica 	= cd_pessoa_fisica_w
			and 	ie_tipo_complemento 	= 1;
			exception
				when others then
				sql_errm_w	:= substr(sqlerrm,1,200);
				/*insert	into logxxxx_tasy (cd_log, nm_usuario, dt_atualizacao, ds_log)
					values	(45874,	nm_usuario_p, sysdate, 'Erro ao verificar complemento: ' || sql_errm_w);
				commit;			*/
			end;

			if (qt_teste_w > 0) then

				begin
				update 	compl_pessoa_fisica
				set	dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p,
					cd_cep			= coalesce(cd_cep_p,cd_cep),
					cd_municipio_ibge	= coalesce(cd_cidade_p,cd_municipio_ibge),
					ds_municipio		= coalesce(ds_cidade_p,ds_municipio),
					sg_estado		= coalesce(sg_uf_p,sg_estado),
					ds_bairro		= coalesce(ds_bairro_p,ds_bairro),
					nr_endereco		= coalesce(nr_endereco_p,nr_endereco),
					ds_complemento		= coalesce(ds_complemento_p,ds_complemento),
					nr_telefone		= coalesce(nr_telefone_1_p,nr_telefone),
					ds_email		= coalesce(ds_email_p,ds_email)
				where	cd_pessoa_fisica 	= cd_pessoa_fisica_w
				and 	ie_tipo_complemento 	= 1;
				exception
					when others then
					sql_errm_w		:= substr(sqlerrm,1,200);
					ds_mensagem_w	:= sql_errm_w;
					ie_resultado_w	:= '1';
					/*insert into logxxxx_tasy (dt_atualizacao, nm_usuario, cd_log, ds_log)
					values (sysdate, nm_usuario_p, 45874, 'Erro ao atualizar Endereço: ' || sql_errm_w);
					commit;*/
				end;

				if (nm_mae_p IS NOT NULL AND nm_mae_p::text <> '') then

					begin
					update 	compl_pessoa_fisica
					set	dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_usuario_p,
						nm_contato		= nm_mae_p
					where	cd_pessoa_fisica 	= cd_pessoa_fisica_w
					and 	ie_tipo_complemento 	= 5;
					exception
						when others then
						sql_errm_w		:= substr(sqlerrm,1,200);
						ds_mensagem_w	:= sql_errm_w;
						ie_resultado_w	:= '1';
						/*insert into logxxxx_tasy (dt_atualizacao, nm_usuario, cd_log, ds_log)
						values (sysdate, nm_usuario_p, 45874, 'Erro ao atualizar Mãe: ' || sql_errm_w);*/
						commit;
					end;

				end if;

			end if;

		end if;

	end if;

end if;

ds_mensagem_p		:= ds_mensagem_w;
ie_resultado_p		:= ie_resultado_w;
cd_pessoa_fisica_p	:= cd_pessoa_fisica_w;

/*
nr_telefone_2
ds_pais_rg
ds_logradouro
*/
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_pf_beneficiario ( cd_usuario_convenio_p text, nm_pessoa_fisica_p text, nr_identidade_p text, nr_cpf_p text, ds_orgao_emissor_p pessoa_fisica.ds_orgao_emissor_ci%type, sg_uf_orgao_emissor_p text, ds_pais_rg_p text, ie_sexo_p text, dt_nascimento_p text, nm_mae_p text, cd_cep_p text, cd_cidade_p text, ds_cidade_p text, sg_uf_p text, ds_bairro_p text, ds_logradouro_p text, nr_endereco_p text, ds_complemento_p text, nr_telefone_1_p text, nr_telefone_2_p text, ds_email_p text, nm_usuario_p text, cd_pessoa_fisica_p INOUT text, ie_resultado_p INOUT text, ds_mensagem_p INOUT text) FROM PUBLIC;

