-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE integrar_dados_w_protheus_cad ( cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w			bigint;
tp_cadastro_w			varchar(15);
cd_estabelecimento_w		integer;
ds_erro_w			varchar(4000);

c01 CURSOR FOR
SELECT	nr_sequencia,
	tp_cadastro
from	w_protheus_cadastro;

c02 CURSOR FOR
SELECT	nr_sequencia
from	w_protheus_fornecedor;

c03 CURSOR FOR
SELECT	nr_sequencia
from	w_protheus_produto;


BEGIN

select	min(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	estabelecimento_v;

if (coalesce(cd_estabelecimento_p,0) <> 0) then
	cd_estabelecimento_w	:= cd_estabelecimento_p;
end if;

open c01;
loop
fetch c01 into
	nr_sequencia_w,
	tp_cadastro_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	/* Centro de Custo */

	if (tp_cadastro_w = 'CC') then

		begin
		CALL integra_centro_custo_protheus(nr_sequencia_w,cd_estabelecimento_w,nm_usuario_p);
		exception
		when others then
			ds_erro_w := substr(sqlerrm,1,4000);
			CALL gravar_log_protheus('ERRO', 'CC', ds_erro_w , nm_usuario_p);
			delete from w_protheus_cadastro where nr_sequencia = nr_sequencia_w;
		end;


	/* Unidade de Medida */

	elsif (tp_cadastro_w = 'UM') then

		begin
		CALL integra_unid_medida_protheus(nr_sequencia_w,nm_usuario_p);
		exception
		when others then
			ds_erro_w := substr(sqlerrm,1,4000);
			CALL gravar_log_protheus('ERRO', 'UM', ds_erro_w , nm_usuario_p);
			delete from w_protheus_cadastro where nr_sequencia = nr_sequencia_w;
		end;

	/* Grupo de Material */

	elsif (tp_cadastro_w = 'GR') then

		begin
		CALL integra_grupo_mat_protheus(nr_sequencia_w,nm_usuario_p);
		exception
		when others then
			ds_erro_w := substr(sqlerrm,1,4000);
			CALL gravar_log_protheus('ERRO', 'GR', ds_erro_w , nm_usuario_p);
			delete from w_protheus_cadastro where nr_sequencia = nr_sequencia_w;
		end;

	/* Operação da Nota */

	elsif (tp_cadastro_w = 'OP') then

		begin
		CALL integra_operacao_protheus(nr_sequencia_w,nm_usuario_p);
		exception
		when others then
			ds_erro_w := substr(sqlerrm,1,4000);
			CALL gravar_log_protheus('ERRO', 'OP', ds_erro_w , nm_usuario_p);
			delete from w_protheus_cadastro where nr_sequencia = nr_sequencia_w;
		end;

	/* Natureza da Operação */

	elsif (tp_cadastro_w = 'NA') then

		begin
		CALL integra_natureza_protheus(nr_sequencia_w,nm_usuario_p);
		exception
		when others then
			ds_erro_w := substr(sqlerrm,1,4000);
			CALL gravar_log_protheus('ERRO', 'NA', ds_erro_w , nm_usuario_p);
			delete from w_protheus_cadastro where nr_sequencia = nr_sequencia_w;
		end;

	/* Conta Contábil */

	elsif (tp_cadastro_w = 'CT') then

		begin
		CALL integra_conta_contab_protheus(nr_sequencia_w,cd_estabelecimento_w,nm_usuario_p);
		exception
		when others then
			ds_erro_w := substr(sqlerrm,1,4000);
			CALL gravar_log_protheus('ERRO', 'CT', ds_erro_w , nm_usuario_p);
			delete from w_protheus_cadastro where nr_sequencia = nr_sequencia_w;
		end;

	/* Condição de Pagamento */

	elsif (tp_cadastro_w = 'CP') then

		begin
		CALL integra_cond_pagto_protheus(nr_sequencia_w,nm_usuario_p);
		exception
		when others then
			ds_erro_w := substr(sqlerrm,1,4000);
			CALL gravar_log_protheus('ERRO', 'CP', ds_erro_w , nm_usuario_p);
			delete from w_protheus_cadastro where nr_sequencia = nr_sequencia_w;
		end;

	end if;

	delete
	from	w_protheus_cadastro
	where	nr_sequencia = nr_sequencia_w;

	end;
end loop;
close c01;

open c02;
loop
fetch c02 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin

	begin
	CALL integra_fornecedor_protheus(nr_sequencia_w,cd_estabelecimento_w,nm_usuario_p);

	delete
	from	w_protheus_fornecedor
	where	nr_sequencia = nr_sequencia_w;

	exception
	when others then
		ds_erro_w := substr(sqlerrm,1,4000);
		CALL gravar_log_protheus('ERRO', 'FO', ds_erro_w , nm_usuario_p);
		delete from w_protheus_fornecedor where nr_sequencia = nr_sequencia_w;
	end;

	end;
end loop;
close c02;

open c03;
loop
fetch c03 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	begin

	begin
	CALL integra_produto_protheus(nr_sequencia_w,cd_estabelecimento_w,nm_usuario_p);

	delete
	from	w_protheus_produto
	where	nr_sequencia = nr_sequencia_w;

	exception
	when others then
		ds_erro_w := substr(sqlerrm,1,4000);
		CALL gravar_log_protheus('ERRO', 'PR', ds_erro_w , nm_usuario_p);
		delete from w_protheus_produto where nr_sequencia = nr_sequencia_w;
	end;

	end;
end loop;
close c03;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE integrar_dados_w_protheus_cad ( cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

