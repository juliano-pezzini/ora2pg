-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_cot_vl_presente ( cd_estabelecimento_p bigint, vl_liquido_p bigint, cd_condicao_pagamento_p bigint, vl_presente_p INOUT bigint ) AS $body$
DECLARE


pr_taxa_financ_w                			double precision := 0;
vl_presente_w				double precision := 0;
vl_liquido_w				double precision := 0;
nr_parcela_w				integer  := 0;
qt_dias_parcela_w				integer  := 0;
tx_fracao_parcela_w			double precision := 0;
QT_DIAS_PRAZO_PAGTO_W        		double precision := 0;
vl_acum_presente_w			double precision := 0;
ie_forma_pagamento_w			smallint;
qt_parcela_w				integer;
ds_condicao_pagamento_w			varchar(80);

C01 CURSOR FOR
	SELECT	nr_parcela,
		qt_dias_parcela,
		tx_fracao_parcela
	from	parcela p
        where	cd_condicao_pagamento = cd_condicao_pagamento_p;

BEGIN

begin
select	coalesce(pr_taxa_financ,0)
into STRICT	pr_taxa_financ_w
from	parametro_compras
where	cd_estabelecimento = cd_estabelecimento_p;
exception
	when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(265585);
	--Não encontrado cadastro do parametro compras para este estabelecimento');
end;

select	ie_forma_pagamento,
	ds_condicao_pagamento
into STRICT	ie_forma_pagamento_w,
	ds_condicao_pagamento_w
from	condicao_pagamento
where	cd_condicao_pagamento = cd_condicao_pagamento_p;

select	count(*)
into STRICT	qt_parcela_w
from	parcela
where	cd_condicao_pagamento = cd_condicao_pagamento_p;

if (ie_forma_pagamento_w <> 1) and (qt_parcela_w = 0) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(265586, '_DS_CONDICAO_PAGAMENTO='||ds_condicao_pagamento_w);
	--A condição de pagamento ' || ds_condicao_pagamento_w || ' não possui parcelas informadas.');
end if;

OPEN C01;
LOOP
FETCH C01 into
	nr_parcela_w,
	qt_dias_parcela_w,
	tx_fracao_parcela_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	vl_liquido_w  		:= ((vl_liquido_p * tx_fracao_parcela_w) / 100);
	vl_presente_w 		:= vl_liquido_w / (1 + pr_taxa_financ_w /100)**(qt_dias_parcela_w /30);
     	vl_acum_presente_w	:= (vl_acum_presente_w + vl_presente_w);
	end;
END LOOP;
CLOSE C01;
if (ie_forma_pagamento_w = 1) then
	vl_acum_presente_w		:= vl_liquido_p;
end if;

vl_presente_p	:= vl_acum_presente_w;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_cot_vl_presente ( cd_estabelecimento_p bigint, vl_liquido_p bigint, cd_condicao_pagamento_p bigint, vl_presente_p INOUT bigint ) FROM PUBLIC;

