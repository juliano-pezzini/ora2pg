-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_gerar_conta_sangria ( nr_seq_sangria_p bigint, nr_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_sequencia_w		bigint;
nr_seq_proc_interno_w	bigint;
cd_procedimento_w	bigint;
qt_proced_w		integer;
ie_origem_proced_w	bigint;
nr_atendimento_w	bigint;
nr_seq_atepacu_w	bigint;
cd_setor_atend_w	integer;
dt_entrada_unidade_w	timestamp;
nr_seq_atend_unid_w	bigint;
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_local_estoque_w	smallint;
--nr_seq_sangria_proced_w	number(10);			 
 
C01 CURSOR FOR 
	SELECT	nr_seq_proc_interno, 
		cd_procedimento, 
		1, 
		ie_origem_proced 
	from	san_sangria_terapeutica 
	where	nr_sequencia = nr_seq_sangria_p;
			

BEGIN 
 
if (nr_seq_sangria_p IS NOT NULL AND nr_seq_sangria_p::text <> '') and (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then 
	SELECT 	MAX(cd_local_estoque) 
	into STRICT 	cd_local_estoque_w 
	FROM 	SETOR_ATENDIMENTO 
	WHERE 	cd_setor_atendimento = (SELECT	obter_setor_atendimento(nr_atendimento_p) 
					);
 
	select 	max(nr_sequencia) 
	into STRICT	nr_seq_atend_unid_w 
	from 	atend_paciente_unidade 
	where	nr_atendimento = nr_atendimento_p;
	if (nr_seq_atend_unid_w IS NOT NULL AND nr_seq_atend_unid_w::text <> '') then 
		select	cd_setor_atendimento, 
			dt_entrada_unidade, 
			nr_seq_interno 
		into STRICT	cd_setor_atend_w, 
			dt_entrada_unidade_w, 
			nr_seq_atepacu_w 
		from	atend_paciente_unidade 
		where	nr_atendimento = nr_atendimento_p 
		and	nr_sequencia = nr_seq_atend_unid_w;
 
		select	cd_convenio, 
			cd_categoria 
		into STRICT	cd_convenio_w, 
			cd_categoria_w 
		from	atendimento_paciente_v 
		where	nr_atendimento = nr_atendimento_p;
	else 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(264141);
	end if;
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_proc_interno_w, 
		cd_procedimento_w, 
		qt_proced_w, 
		ie_origem_proced_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then 
			SELECT * FROM Obter_Proc_Tab_Interno(nr_seq_proc_interno_w, null, nr_atendimento_p, null, cd_procedimento_w, ie_origem_proced_w, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
		end if;
		 
		if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then 
			select nextval('procedimento_paciente_seq') 
			into STRICT nr_sequencia_w 
			;
			 
			insert into procedimento_paciente(nr_sequencia, 
						nr_atendimento,     
						dt_entrada_unidade, 
						cd_procedimento, 
						dt_procedimento, 
						qt_procedimento, 
						dt_atualizacao, 
						nm_usuario, 
						cd_setor_atendimento, 
						ie_origem_proced, 
						nr_seq_atepacu, 
						nr_seq_proc_interno, 
						cd_convenio, 
						cd_categoria) 
					values (nr_sequencia_w, 
						nr_atendimento_p, 
						dt_entrada_unidade_w, 
						cd_procedimento_w, 
						clock_timestamp(), 
						qt_proced_w, 
						clock_timestamp(), 
						nm_usuario_p, 
						cd_setor_atend_w, 
						ie_origem_proced_w, 
						nr_seq_atepacu_w, 
						nr_seq_proc_interno_w, 
						cd_convenio_w, 
						cd_categoria_w);
 
			CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);
			CALL Gerar_Lancamento_Automatico(nr_atendimento_p,cd_local_estoque_w,34,nm_usuario_p,nr_sequencia_w,NULL,NULL,NULL,NULL,NULL);
		end if;
		end;
	end loop;
	close C01;
end if;
if (coalesce(nr_atendimento_p::text, '') = '') then 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(264141);
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_gerar_conta_sangria ( nr_seq_sangria_p bigint, nr_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

