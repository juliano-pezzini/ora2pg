-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE aprovar_compra ( nr_seq_aprovacao_p bigint, nr_seq_processo_p bigint, nm_usuario_p text, ie_automatica_p text, ie_aprovar_todos_p text) AS $body$
DECLARE


nr_seq_processo_w			processo_aprov_compra.nr_seq_proc_aprov%type;
cd_erro_w			smallint;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_processo_aprov_w		processo_aprov_resp.cd_processo_aprov%type;
qt_minimo_aprovador_w		processo_aprovacao.qt_minimo_aprovador%type	:= 0;
qt_aprovados_w			bigint;
ie_aprovar_todos_w		varchar(1);
ie_aprov_regra_minimo_w		parametro_compras.ie_aprov_regra_minimo%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
ie_aprova_sem_proj_rec_w		varchar(1);
nr_ordem_compra_w		ordem_compra.nr_ordem_compra%type;
qt_existe_w			bigint;
qt_existe_pre_aprov_w		bigint;
nr_solic_compra_w			solic_compra.nr_solic_compra%type;
ie_pre_aprovacao_w		varchar(1);
ie_origem_processo_w		varchar(15);
ie_aprovacao_nivel_w		parametro_compras.ie_aprovacao_nivel%type;
nr_nivel_atual_w			processo_aprov_resp.nr_nivel_aprovacao%type;
qt_ja_aprovador_nivel_w		bigint;
qt_existe_regra_email_w		bigint;
qt_pendente_w			bigint;
dt_liberacao_w			processo_aprov_compra.dt_liberacao%type;
cd_funcao_w			funcao.cd_funcao%type;
qt_dias_entrega_padrao_w		parametro_compras.qt_dias_entrega_padrao%type;
ie_dt_base_entrega_padrao_w	parametro_compras.ie_dt_base_entrega_padrao%type;
ie_delegado_w			varchar(1);
nr_item_w			bigint;
cd_perfil_ativo_w			perfil.cd_perfil%type;
ds_itens_w			varchar(1000);
ie_desdobrar_w			varchar(1);
cd_pessoa_aprovador_w		pessoa_fisica.cd_pessoa_fisica%type;
ie_cancela_email_aprov_w		parametro_compras.ie_cancela_email_aprov%type;
ie_norma_compra_w		varchar(1);
ie_aprova_deleg_w			parametro_compras.ie_aprova_deleg%type;
nr_seq_proc_aprov_w		processo_aprov_compra.nr_seq_proc_aprov%type;
ie_encaminhado_limite_w		processo_aprov_compra.ie_encaminhado_limite%type;
nr_seq_aprovacao_w		processo_aprov_compra.nr_sequencia%type;
ds_observacao_w			processo_aprov_compra.ds_observacao%type;
nm_pessoa_fisica_w		pessoa_fisica.nm_pessoa_fisica%type;
nr_seq_proc_original_w		processo_aprov_compra.nr_seq_proc_original%type;
nr_documento_w            	processo_aprov_compra.nr_documento%type;
qt_nova_estrutura_w        	bigint;
nr_nivel_prox_aprov_w		processo_aprov_compra.nr_nivel_aprovacao%type;

c01 CURSOR FOR
SELECT	nr_item
from (select	cd_material,
		nr_item_oci nr_item
	from	ordem_compra_item
	where	ie_origem_processo_w = 'O'
	and	nr_seq_aprovacao = nr_seq_aprovacao_p
	
union

	SELECT	cd_material,
		nr_item_solic_compra nr_item
	from	solic_compra_item
	where	ie_origem_processo_w = 'S'
	and	nr_seq_aprovacao = nr_seq_aprovacao_p
	
union

	select	cd_material,
		nr_item_nf nr_item
	from	nota_fiscal_item
	where	ie_origem_processo_w = 'N'
	and	nr_seq_aprovacao = nr_seq_aprovacao_p
	
union

	select	cd_material,
		nr_sequencia nr_item
	from	item_requisicao_material
	where	ie_origem_processo_w = 'R'
	and	nr_seq_aprovacao = nr_seq_aprovacao_p
	
union

	select	cd_material,
		nr_item_cot_compra nr_item
	from	cot_compra_item
	where	ie_origem_processo_w = 'C'
	and	nr_seq_aprovacao = nr_seq_aprovacao_p
	
union

	select	cd_material,
		nr_seq_lic_item nr_item
	from	reg_lic_item
	where	ie_origem_processo_w = 'L'
	and	nr_seq_aprovacao = nr_seq_aprovacao_p) alias0
where	substr(obter_se_pessoa_deleg_item(cd_material,nr_seq_aprovacao_p,nr_seq_processo_p,cd_pessoa_fisica_w,'AC',clock_timestamp()),1,1) = 'N';

c02 CURSOR FOR
SELECT	nr_seq_proc_aprov
from	processo_aprov_compra
where	nr_sequencia = nr_seq_aprovacao_p
and	substr(obter_se_pessoa_delegacao(nr_sequencia,nr_seq_proc_aprov,cd_pessoa_fisica_w,'AC',clock_timestamp()),1,1) = 'S'
and	coalesce(dt_definicao::text, '') = ''

union all

select	nr_seq_proc_aprov
from	processo_aprov_compra
where	nr_sequencia = nr_seq_aprovacao_p
and	((cd_cargo = obter_cargo_pf(cd_pessoa_fisica_w,'C')) or (cd_pessoa_fisica = cd_pessoa_fisica_w))
and	coalesce(dt_definicao::text, '') = '';


BEGIN

ie_aprovar_todos_w	:= ie_aprovar_todos_p;
cd_perfil_ativo_w	:= obter_perfil_ativo;
cd_funcao_w		:= coalesce(obter_funcao_ativa,0);

select	coalesce(max(cd_pessoa_fisica),'0'),
	coalesce(max(ie_encaminhado_limite),'X'),
	coalesce(max(nr_sequencia),0)
into STRICT	cd_pessoa_aprovador_w,
	ie_encaminhado_limite_w,
	nr_seq_aprovacao_w
from	processo_aprov_compra
where	nr_sequencia = nr_seq_aprovacao_p
and	nr_seq_proc_aprov = nr_seq_processo_p;

if (coalesce(nr_seq_aprovacao_w,0) = 0) then
	--Este processo foi estornado pelo usuario, favor atualizar a tela!
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(333379);
end if;

if (cd_funcao_w = 267) then
	CALL consiste_se_compra_aprovada(nr_seq_aprovacao_p);
end if;

select	obter_origem_processo_aprov(nr_seq_aprovacao_p)
into STRICT	ie_origem_processo_w
;

select	coalesce(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),'0')
into STRICT	cd_pessoa_fisica_w
;

select	coalesce(max(obter_estab_processo_aprov(nr_seq_aprovacao_p)), 1)
into STRICT	cd_estabelecimento_w
;

select	count(*)
into STRICT	qt_existe_w
from	regra_pre_aprovacao_compra
where	cd_estabelecimento = cd_estabelecimento_w;

select	count(*)
into STRICT	qt_existe_pre_aprov_w
from	regra_pre_aprovacao_compra
where	cd_estabelecimento = cd_estabelecimento_w;

if (qt_existe_w > 0) and (ie_origem_processo_w = 'S') and (qt_existe_pre_aprov_w > 0) then

	select	coalesce(max(nr_solic_compra),0)
	into STRICT	nr_solic_compra_w
	from	solic_compra_item
	where	nr_seq_aprovacao = nr_seq_aprovacao_p;

	if (nr_solic_compra_w > 0) then

		select	obter_se_pre_aprovacao(nr_solic_compra_w)
		into STRICT	ie_pre_aprovacao_w
		;

		if (coalesce(ie_pre_aprovacao_w, 'N') = 'S') then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(186276);
		end if;
	end if;
end if;

select	obter_valor_param_usuario(267, 24, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_w),
	coalesce(obter_valor_param_usuario(267, 53, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_w),'N')
into STRICT	ie_aprova_sem_proj_rec_w,
	ie_norma_compra_w
;

if (ie_aprova_sem_proj_rec_w = 'S') and (ie_origem_processo_w = 'O') then

	select	coalesce(max(nr_ordem_compra),0)
	into STRICT	nr_ordem_compra_w
	from	ordem_compra_item
	where	nr_seq_aprovacao = nr_seq_aprovacao_p;

	if (nr_ordem_compra_w > 0) then

		select	count(*)
		into STRICT	qt_existe_w
		from	ordem_compra_item
		where	nr_ordem_compra = nr_ordem_compra_w
		and	coalesce(nr_seq_proj_rec::text, '') = '';

		if (qt_existe_w > 0) then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(186281);
		end if;
	end if;
end if;

select	coalesce(ie_aprov_regra_minimo, 'N'),
	coalesce(ie_cancela_email_aprov,'N'),
	coalesce(ie_aprova_deleg,'N'),
	coalesce(qt_dias_entrega_padrao,2),
	coalesce(ie_dt_base_entrega_padrao,1)
into STRICT	ie_aprov_regra_minimo_w,
	ie_cancela_email_aprov_w,
	ie_aprova_deleg_w,
	qt_dias_entrega_padrao_w,
	ie_dt_base_entrega_padrao_w
from	parametro_compras
where	cd_estabelecimento	= cd_estabelecimento_w;


select	max(ds_observacao),
	max(nr_documento)
into STRICT	ds_observacao_w,
	nr_documento_w
from	processo_aprov_compra
where	nr_sequencia		= nr_seq_aprovacao_p
and	nr_seq_proc_aprov 	= nr_seq_processo_p;


select obter_estrutura_aprovacao(nr_seq_processo_p, nr_documento_w)
into STRICT   qt_nova_estrutura_w
;


if (qt_nova_estrutura_w > 0) then

	select	coalesce(max(a.cd_processo_aprov),0)
	into STRICT    cd_processo_aprov_w
	from	processo_aprov_compra a,
		processo_aprovacao b
	where	a.cd_processo_aprov = b.cd_processo_aprov
	and	a.nr_seq_proc_aprov = nr_seq_processo_p
	and	a.nr_documento	    = nr_documento_w
	and	b.ie_situacao = 'A';
else
	select	coalesce(max(a.cd_processo_aprov),0)
	into STRICT	cd_processo_aprov_w
	from	processo_aprov_resp a,
		processo_aprovacao b
	where	a.cd_processo_aprov = b.cd_processo_aprov
	and	a.nr_sequencia	= nr_seq_processo_p
	and	b.ie_situacao = 'A';

end if;

if (ie_dt_base_entrega_padrao_w = '2') and (ie_origem_processo_w = 'S') and (ie_norma_compra_w = 'N') then

	update    solic_compra_item
	set	  dt_solic_item	= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_autorizacao,clock_timestamp())) + qt_dias_entrega_padrao_w
	where  	  nr_seq_aprovacao	= nr_seq_aprovacao_p;

end if;

if (ie_aprov_regra_minimo_w = 'S') then
	begin

	if (cd_processo_aprov_w > 0) then

		select	coalesce(qt_minimo_aprovador, 0)
		into STRICT	qt_minimo_aprovador_w
		from	processo_aprovacao
		where	cd_processo_aprov	= cd_processo_aprov_w;

		select	count(*)
		into STRICT	qt_aprovados_w
		from	processo_aprov_compra
		where	nr_sequencia	= nr_seq_aprovacao_p
		and	ie_aprov_reprov = 'A';

		qt_aprovados_w := qt_aprovados_w + 1;

		ie_aprovar_todos_w := 'N';
		if (qt_aprovados_w >= qt_minimo_aprovador_w) then
			ie_aprovar_todos_w := 'S';
		end if;
	end if;
	end;
else
	begin
	select	obter_se_proc_por_nivel(nr_seq_aprovacao_p, cd_estabelecimento_w)
	into STRICT	ie_aprovacao_nivel_w
	;

	if (ie_aprovacao_nivel_w = 'S') then

		if (qt_nova_estrutura_w > 0) then
			
			select	coalesce(max(a.qt_minimo_aprovador),1),
				coalesce(min(a.nr_nivel_aprovacao),0)
			into STRICT	qt_minimo_aprovador_w,
				nr_nivel_atual_w
			from	processo_aprov_compra a
			where	a.nr_seq_proc_aprov = nr_seq_processo_p
			and	a.nr_documento	    = nr_documento_w;

		else
			select	coalesce(max(a.qt_minimo_aprovador),1),
				coalesce(min(a.nr_nivel_aprovacao),0)
			into STRICT	qt_minimo_aprovador_w,
				nr_nivel_atual_w
			from	processo_aprov_resp a
			where	a.nr_sequencia = nr_seq_processo_p;

		end if;

		
		if (nr_nivel_atual_w = 0) then
			select	coalesce(max(nr_seq_proc_original),0)
			into STRICT	nr_seq_proc_original_w
			from	processo_aprov_compra
			where	nr_sequencia = nr_seq_aprovacao_p
			and	nr_seq_proc_aprov = nr_seq_processo_p;
			
			if (nr_seq_proc_original_w > 0) then
				
				if (qt_nova_estrutura_w > 0) then
				
					select	coalesce(min(a.nr_nivel_aprovacao),0),
						coalesce(max(a.cd_processo_aprov),0),
						coalesce(max(a.qt_minimo_aprovador),1)
					into STRICT	nr_nivel_atual_w,
						cd_processo_aprov_w,
						qt_minimo_aprovador_w
					from	processo_aprov_compra a
					where	a.nr_seq_proc_aprov = nr_seq_proc_original_w
					and	a.nr_documento	    = nr_documento_w;
				else
					select	coalesce(min(a.nr_nivel_aprovacao),0),
						coalesce(max(a.cd_processo_aprov),0),
						coalesce(max(a.qt_minimo_aprovador),1)
					into STRICT	nr_nivel_atual_w,
						cd_processo_aprov_w,
						qt_minimo_aprovador_w
					from	processo_aprov_resp a
					where	a.nr_sequencia = nr_seq_proc_original_w;
				end if;
			end if;
		end if;

		if (qt_nova_estrutura_w > 0) then
		
			select	count(*)
			into STRICT	qt_ja_aprovador_nivel_w
			from	processo_aprov_compra a
			where	a.nr_sequencia = nr_seq_aprovacao_p
			and	a.ie_aprov_reprov = 'A'
			and	a.nr_seq_proc_aprov in (
					SELECT	x.nr_seq_proc_aprov
					from	processo_aprov_compra x
					where	x.cd_processo_aprov	= cd_processo_aprov_w
					and	x.nr_nivel_aprovacao	= nr_nivel_atual_w
					and	x.nr_documento	    	= nr_documento_w);
		else
			select	count(*)
			into STRICT	qt_ja_aprovador_nivel_w
			from	processo_aprov_compra a
			where	a.nr_sequencia = nr_seq_aprovacao_p
			and	a.ie_aprov_reprov = 'A'
			and	a.nr_seq_proc_aprov in (
					SELECT	x.nr_sequencia
					from	processo_aprov_resp x
					where	x.cd_processo_aprov	= cd_processo_aprov_w
					and	x.nr_nivel_aprovacao	= nr_nivel_atual_w);
		end if;

		qt_ja_aprovador_nivel_w	:= qt_ja_aprovador_nivel_w + 1;
	
		if (qt_ja_aprovador_nivel_w >= qt_minimo_aprovador_w) then
			ie_aprovar_todos_w := 'R';
		end if;
	end if;
	end;
end if;

if (ie_encaminhado_limite_w = 'S') then
	ie_aprovar_todos_w := 'S';
end if;

select	substr(obter_se_pessoa_delegacao(nr_seq_aprovacao_p,nr_seq_processo_p,cd_pessoa_fisica_w,'AC',clock_timestamp()),1,1)
into STRICT	ie_delegado_w
;

if (ie_delegado_w = 'S') then

	select	obter_nome_pf(cd_pessoa_fisica_w)
	into STRICT	nm_pessoa_fisica_w
	;

	if (coalesce(length(trim(both ds_observacao_w)),0) = 0) then
		ds_observacao_w := substr(wheb_mensagem_pck.get_Texto(377033, 'NM_DELEGADO_W='|| nm_pessoa_fisica_w),1,2000); /*Aprovado pelo usuario delegado: #@NM_DELEGADO_W#@*/
	else
		ds_observacao_w := substr(ds_observacao_w || chr(13) || chr(10) || wheb_mensagem_pck.get_Texto(377033, 'NM_DELEGADO_W='|| nm_pessoa_fisica_w),1,2000);
														/*Aprovado pelo usuario delegado: #@NM_DELEGADO_W#@*/

	end if;
end if;

if (ie_aprovar_todos_w = 'R') then
	begin

	if (ie_delegado_w = 'S') then
		begin

		ds_itens_w	:= '';
		ie_desdobrar_w	:= 'N';

		open c01;
		loop
		fetch c01 into
			nr_item_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin

			ie_desdobrar_w	:= 'S';

			if (ds_itens_w <> '') then
				ds_itens_w	:= ds_itens_w || ',' || to_char(nr_item_w);
			else
				ds_itens_w	:= to_char(nr_item_w);
			end if;

			end;
		end loop;
		close c01;

		if (ie_desdobrar_w = 'S') and (ie_automatica_p = 'N') then
			CALL desdobrar_proc_compra(nr_seq_aprovacao_p,nr_seq_processo_p,nm_usuario_p,ds_itens_w);
		end if;

		end;
	end if;

	update	processo_aprov_compra
	set 	dt_definicao 		= clock_timestamp(),
		ie_aprov_reprov 	= 'A',
		nm_usuario		= nm_usuario_p,
		nm_usuario_aprov 	= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		dt_liberacao		= CASE WHEN dt_liberacao = NULL THEN clock_timestamp()  ELSE dt_liberacao END ,
		ie_automatico		= coalesce(ie_automatica_p,'N'),
		ds_observacao		= ds_observacao_w
	where	nr_sequencia		= nr_seq_aprovacao_p
	and	nr_seq_proc_aprov 	= nr_seq_processo_p;

	CALL grava_hist_proc_aprov(nr_seq_aprovacao_p,nr_seq_processo_p,nm_usuario_p);

	if (ie_aprova_deleg_w = 'S') then
		open C02;
		loop
		fetch C02 into
			nr_seq_proc_aprov_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			update	processo_aprov_compra
			set 	dt_definicao 		= clock_timestamp(),
				ie_aprov_reprov 	= 'A',
				nm_usuario		= nm_usuario_p,
				nm_usuario_aprov 	= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				dt_liberacao		= CASE WHEN dt_liberacao = NULL THEN clock_timestamp()  ELSE dt_liberacao END ,
				ie_automatico		= coalesce(ie_automatica_p,'N'),
				ds_observacao		= ds_observacao_w
			where	nr_sequencia		= nr_seq_aprovacao_p
			and	nr_seq_proc_aprov 	= nr_seq_proc_aprov_w;

			CALL grava_hist_proc_aprov(nr_seq_aprovacao_p,nr_seq_proc_aprov_w,nm_usuario_p);

			end;
		end loop;
		close C02;
	end if;

	if (qt_nova_estrutura_w > 0) then
	
		update	processo_aprov_compra
		set 	dt_definicao 		= clock_timestamp(),
			ie_aprov_reprov 	= 'A',
			nm_usuario		= nm_usuario_p,
			nm_usuario_aprov 	= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			dt_liberacao		= CASE WHEN dt_liberacao = NULL THEN clock_timestamp()  ELSE dt_liberacao END ,
			ie_automatico		= 'S',
			ds_observacao		= ds_observacao_w
		where	nr_sequencia		= nr_seq_aprovacao_p
		and	ie_aprov_reprov		<> 'A'
		and	nr_seq_proc_aprov in ( /*Para aprovar todos que sao do mesmo nivel. Mas so quando ja atingiu a quantidade minima de aprovadores*/
					SELECT	x.nr_seq_proc_aprov
					from	processo_aprov_compra x
					where	x.cd_processo_aprov	= cd_processo_aprov_w
					and	x.nr_nivel_aprovacao	= nr_nivel_atual_w
					and	x.nr_documento	    	= nr_documento_w
					
union all
				
					SELECT x.nr_seq_proc_aprov
					from   processo_aprov_compra x
					where x.nr_sequencia = nr_seq_aprovacao_p
					and x.nr_seq_proc_original in (
					select		x.nr_seq_proc_aprov
					from		processo_aprov_compra x
					where		x.cd_processo_aprov	= cd_processo_aprov_w
					and		x.nr_nivel_aprovacao	= nr_nivel_atual_w
					and		x.nr_documento	    	= nr_documento_w));

	else
		update	processo_aprov_compra
		set 	dt_definicao 		= clock_timestamp(),
			ie_aprov_reprov 	= 'A',
			nm_usuario		= nm_usuario_p,
			nm_usuario_aprov 	= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			dt_liberacao		= CASE WHEN dt_liberacao = NULL THEN clock_timestamp()  ELSE dt_liberacao END ,
			ie_automatico		= 'S',
			ds_observacao		= ds_observacao_w
		where	nr_sequencia		= nr_seq_aprovacao_p
		and	ie_aprov_reprov		<> 'A'
		and	nr_seq_proc_aprov in ( /*Para aprovar todos que sao do mesmo nivel. Mas so quando ja atingiu a quantidade minima de aprovadores*/
					SELECT	x.nr_sequencia
					from	processo_aprov_resp x
					where	x.cd_processo_aprov	= cd_processo_aprov_w
					and	x.nr_nivel_aprovacao	= nr_nivel_atual_w
					
union all
				
					SELECT x.nr_seq_proc_aprov
					from   processo_aprov_compra x
					where x.nr_sequencia = nr_seq_aprovacao_p
					and x.nr_seq_proc_original in (
					select		x.nr_sequencia
					from		processo_aprov_resp x
					where		x.cd_processo_aprov	= cd_processo_aprov_w
					and		x.nr_nivel_aprovacao	= nr_nivel_atual_w));

	end if;

	if (ie_cancela_email_aprov_w = 'S') then
		CALL cancelar_email_pend_proc_aprov(nr_seq_aprovacao_p,nr_seq_processo_p);
	end if;

	/*Ver se tem algum processo pendente para aquela rota de aprovacao.
	Se nao tiver mais, aprova o documento inteiro*/
	begin
	select	nr_seq_processo
	into STRICT	nr_seq_processo_w
	from (SELECT	coalesce(a.nr_seq_proc_aprov,0) nr_seq_processo
		from	processo_aprov_compra a
		where	a.nr_sequencia = nr_seq_aprovacao_p
		and	a.nr_documento = nr_documento_w
		and	a.ie_aprov_reprov = 'P'
		order by a.nr_nivel_aprovacao,nr_seq_proc_aprov) alias1 LIMIT 1;
	exception
		when others then
			nr_seq_processo_w	:= 0;
	end;

	/*Quando e zero, e porque nao tem mais nenhum processo pendente daquele documento, entao pode aprovar o documento*/

	if (nr_seq_processo_w = 0) then
		begin
		if (ie_origem_processo_w = 'O') then
			begin
			update	ordem_compra_item
			set	dt_aprovacao		= clock_timestamp(),
				dt_aprovacao_orig	= clock_timestamp(),
				nr_seq_proc_aprov	= nr_seq_processo_p
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
			exception
				when others then
					cd_erro_w	:= 0;
			end;
		elsif (ie_origem_processo_w = 'S') then
			begin
			update	solic_compra_item
			set	dt_autorizacao		= clock_timestamp(),
				nr_seq_proc_aprov	= nr_seq_processo_p
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
			exception
				when others then
					cd_erro_w	:= 0;
			end;

		elsif (ie_origem_processo_w = 'N') then
			begin
			update	nota_fiscal_item
			set	dt_aprovacao		= clock_timestamp(),
				nm_usuario_aprov	= nm_usuario_p,
				nr_seq_proc_aprov	= nr_seq_processo_p
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
			exception
				when others then
					cd_erro_w	:= 0;
			end;

			begin
			update	solic_compra
			set	cd_pessoa_autoriza = cd_pessoa_fisica_w
			where	nr_solic_compra = (	SELECT	max(nr_solic_compra)
							from	solic_compra_item
							where	nr_seq_aprovacao	= nr_seq_aprovacao_p);
			exception
				when others then
					cd_erro_w	:= 0;
			end;

		elsif (ie_origem_processo_w = 'R') then
			begin
			update	item_requisicao_material
			set	dt_aprovacao		= clock_timestamp(),
				nm_usuario_aprov	= nm_usuario_p,
				nr_seq_proc_aprov	= nr_seq_processo_p
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
			exception
				when others then
					cd_erro_w	:= 0;
			end;

		elsif (ie_origem_processo_w = 'C') then
			begin
			update	cot_compra_item
			set	dt_aprovacao		= clock_timestamp(),
				nm_usuario_aprov 	= nm_usuario_p,
				nr_seq_proc_aprov	= nr_seq_processo_p
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
			exception
				when others then
					cd_erro_w	:= 0;
			end;

		elsif (ie_origem_processo_w = 'L') then
			begin
			update	reg_lic_item
			set	dt_aprovacao		= clock_timestamp(),
				nm_usuario_aprov 	= nm_usuario_p,
				nr_seq_proc_aprov	= nr_seq_processo_p
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
			exception
				when others then
					cd_erro_w	:= 0;
			end;
		elsif (ie_origem_processo_w = 'G') then
			begin
			update	contrato
			set	dt_aprovacao		= clock_timestamp(),
				nm_usuario_aprov 	= nm_usuario_p,
				nr_seq_proc_aprov	= nr_seq_processo_p
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
			exception
			when no_data_found then
				cd_erro_w := 0;
			end;
		elsif (ie_origem_processo_w = 'E') then
			begin
			update	projeto_recurso
			set	dt_aprovacao		= clock_timestamp(),
				nm_usuario_aprov 	= nm_usuario_p,
				nr_seq_proc_aprov	= nr_seq_processo_p
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
			exception
			when no_data_found then
				cd_erro_w := 0;
			end;
		end if;

		end;
	else
		begin
		
		select	nr_nivel_aprovacao
		into STRICT	nr_nivel_prox_aprov_w
		from	processo_aprov_compra
		where	nr_sequencia = nr_seq_aprovacao_p
		and	nr_seq_proc_aprov = nr_seq_processo_w;

		update	processo_aprov_compra
		set	dt_liberacao 		= clock_timestamp(),
			nm_usuario_aprov	= nm_usuario_p
		where	nr_sequencia		= nr_seq_aprovacao_p
		and	nr_nivel_aprovacao	= nr_nivel_prox_aprov_w;

		select	count(*)
		into STRICT	qt_existe_regra_email_w
		from	regra_envio_email_compra
		where	ie_tipo_mensagem = 58
		and	ie_situacao = 'A'
		and	cd_estabelecimento = cd_estabelecimento_w
		and	ie_origem_processo_w in ('S');

		if (qt_existe_regra_email_w > 0) and (ie_automatica_p = 'N') then
			CALL envia_email_proximo_aprov(nr_seq_aprovacao_p,nr_seq_processo_w,cd_estabelecimento_w,nm_usuario_p);
		end if;

		select	count(*)
		into STRICT	qt_existe_regra_email_w
		from	regra_envio_email_compra
		where	ie_tipo_mensagem = 83
		and	ie_situacao = 'A'
		and	cd_estabelecimento = cd_estabelecimento_w
		and	ie_origem_processo_w in ('C');

		if (qt_existe_regra_email_w > 0) and (ie_automatica_p = 'N') then
			CALL envia_email_proximo_aprov_cot(nr_seq_aprovacao_p,nr_seq_processo_w,cd_estabelecimento_w,nm_usuario_p);
		end if;
		end;


	end if;
	end;

elsif (ie_aprovar_todos_w = 'S') then
	begin

	if (ie_delegado_w = 'S') then
		begin

		ds_itens_w	:= '';
		ie_desdobrar_w	:= 'N';

		open c01;
		loop
		fetch c01 into
			nr_item_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin

			ie_desdobrar_w	:= 'S';

			if (ds_itens_w <> '') then
				ds_itens_w	:= ds_itens_w || ',' || to_char(nr_item_w);
			else
				ds_itens_w	:= to_char(nr_item_w);
			end if;

			end;
		end loop;
		close c01;

		if (ie_desdobrar_w = 'S') and (ie_automatica_p = 'N') then
			CALL desdobrar_proc_compra(nr_seq_aprovacao_p,nr_seq_processo_p,nm_usuario_p,ds_itens_w);
		end if;

		end;
	end if;

	update	processo_aprov_compra
	set 	dt_definicao 		= clock_timestamp(),
		ie_aprov_reprov 	= 'A',
		nm_usuario		= nm_usuario_p,
		nm_usuario_aprov 	= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		dt_liberacao		= CASE WHEN dt_liberacao = NULL THEN clock_timestamp()  ELSE dt_liberacao END ,
		ie_automatico		= coalesce(ie_automatica_p,'N'),
		ds_observacao		= ds_observacao_w
	where	nr_sequencia		= nr_seq_aprovacao_p
	and	nr_seq_proc_aprov	= nr_seq_processo_p;

	CALL grava_hist_proc_aprov(nr_seq_aprovacao_p,nr_seq_processo_p,nm_usuario_p);

	if (ie_aprova_deleg_w = 'S') then
		open C02;
		loop
		fetch C02 into
			nr_seq_proc_aprov_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			update	processo_aprov_compra
			set 	dt_definicao 		= clock_timestamp(),
				ie_aprov_reprov 	= 'A',
				nm_usuario		= nm_usuario_p,
				nm_usuario_aprov 	= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				dt_liberacao		= CASE WHEN dt_liberacao = NULL THEN clock_timestamp()  ELSE dt_liberacao END ,
				ie_automatico		= coalesce(ie_automatica_p,'N'),
				ds_observacao		= ds_observacao_w
			where	nr_sequencia		= nr_seq_aprovacao_p
			and	nr_seq_proc_aprov 	= nr_seq_proc_aprov_w;

			CALL grava_hist_proc_aprov(nr_seq_aprovacao_p,nr_seq_proc_aprov_w,nm_usuario_p);

			end;
		end loop;
		close C02;
	end if;

	update	processo_aprov_compra
	set 	dt_definicao 		= clock_timestamp(),
		ie_aprov_reprov 	= 'A',
		nm_usuario		= nm_usuario_p,
		nm_usuario_aprov 	= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		dt_liberacao		= CASE WHEN dt_liberacao = NULL THEN clock_timestamp()  ELSE dt_liberacao END ,
		ie_automatico		= 'S',
		ds_observacao		= ds_observacao_w
	where	nr_sequencia		= nr_seq_aprovacao_p
	and	ie_aprov_reprov	<> 'A';

	if (ie_cancela_email_aprov_w = 'S') then
		CALL cancelar_email_pend_proc_aprov(nr_seq_aprovacao_p,nr_seq_processo_p);
	end if;

	if (ie_origem_processo_w = 'O') then
		update	ordem_compra_item
		set	dt_aprovacao		= clock_timestamp(),
			dt_aprovacao_orig	= clock_timestamp(),
			nr_seq_proc_aprov	= nr_seq_processo_p
		where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
	elsif (ie_origem_processo_w	= 'S') then

		update	solic_compra_item
		set	dt_autorizacao		= clock_timestamp(),
			nr_seq_proc_aprov	= nr_seq_processo_p
		where	nr_seq_aprovacao	= nr_seq_aprovacao_p;

		update	solic_compra
		set	cd_pessoa_autoriza	= cd_pessoa_fisica_w
		where	nr_solic_compra 	= (	SELECT	max(nr_solic_compra)
							from	solic_compra_item
							where	nr_seq_aprovacao	= nr_seq_aprovacao_p);

	elsif (ie_origem_processo_w 	= 'R') then
		update	item_requisicao_material
		set	dt_aprovacao 		= clock_timestamp(),
			nm_usuario_aprov 	= nm_usuario_p,
			nr_seq_proc_aprov	= nr_seq_processo_p
		where	nr_seq_aprovacao 	= nr_seq_aprovacao_p;

	elsif (ie_origem_processo_w 	= 'N') then
		update	nota_fiscal_item
		set	dt_aprovacao 		= clock_timestamp(),
			nm_usuario_aprov 	= nm_usuario_p,
			nr_seq_proc_aprov	= nr_seq_processo_p
		where	nr_seq_aprovacao 	= nr_seq_aprovacao_p;

	elsif (ie_origem_processo_w 	= 'C') then
		update	cot_compra_item
		set	dt_aprovacao 		= clock_timestamp(),
			nm_usuario_aprov 	= nm_usuario_p,
			nr_seq_proc_aprov	= nr_seq_processo_p
		where	nr_seq_aprovacao 	= nr_seq_aprovacao_p;

	elsif (ie_origem_processo_w 	= 'L') then
		update	reg_lic_item
		set	dt_aprovacao 		= clock_timestamp(),
			nm_usuario_aprov 	= nm_usuario_p,
			nr_seq_proc_aprov	= nr_seq_processo_p
		where	nr_seq_aprovacao 	= nr_seq_aprovacao_p;
	elsif (ie_origem_processo_w = 'G') then
		begin
		update	contrato
		set	dt_aprovacao		= clock_timestamp(),
			nm_usuario_aprov 	= nm_usuario_p,
			nr_seq_proc_aprov	= nr_seq_processo_p
		where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
		exception
		when no_data_found then
			cd_erro_w := 0;
		end;
	elsif (ie_origem_processo_w = 'E') then
		begin
		update	projeto_recurso
		set	dt_aprovacao		= clock_timestamp(),
			nm_usuario_aprov 	= nm_usuario_p,
			nr_seq_proc_aprov	= nr_seq_processo_p
		where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
		exception
		when no_data_found then
			cd_erro_w := 0;
		end;
	end if;

	end;
elsif (ie_aprovar_todos_w = 'N') then
	begin

	if (ie_delegado_w = 'S') then
		begin

		ds_itens_w	:= '';
		ie_desdobrar_w	:= 'N';

		open c01;
		loop
		fetch c01 into
			nr_item_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin

			ie_desdobrar_w	:= 'S';

			if (ds_itens_w <> '') then
				ds_itens_w	:= ds_itens_w || ',' || to_char(nr_item_w);
			else
				ds_itens_w	:= to_char(nr_item_w);
			end if;

			end;
		end loop;
		close c01;

		if (ie_desdobrar_w = 'S') and (ie_automatica_p = 'N') then
			CALL desdobrar_proc_compra(nr_seq_aprovacao_p,nr_seq_processo_p,nm_usuario_p,ds_itens_w);
		end if;

		end;
	end if;

	select	dt_liberacao
	into STRICT	dt_liberacao_w
	from	processo_aprov_compra
	where	nr_sequencia		= nr_seq_aprovacao_p
	and	nr_seq_proc_aprov	= nr_seq_processo_p;
	
	if (coalesce(dt_liberacao_w::text, '') = '') then
		begin

		update	processo_aprov_compra
		set	dt_liberacao 		= clock_timestamp()
		where	nr_sequencia		= nr_seq_aprovacao_p
		and	nr_seq_proc_aprov	= nr_seq_processo_p;

		end;
	end if;

	update	processo_aprov_compra
	set 	dt_definicao 		= clock_timestamp(),
		ie_aprov_reprov 	= 'A',
		nm_usuario		= nm_usuario_p,
		nm_usuario_aprov	= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		ie_automatico 		= coalesce(ie_automatica_p,'N'),
		ds_observacao		= ds_observacao_w
	where	nr_sequencia		= nr_seq_aprovacao_p
	and	nr_seq_proc_aprov	= nr_seq_processo_p;

	CALL grava_hist_proc_aprov(nr_seq_aprovacao_p,nr_seq_processo_p,nm_usuario_p);

	if (ie_aprova_deleg_w = 'S') then

		open C02;
		loop
		fetch C02 into
			nr_seq_proc_aprov_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			update	processo_aprov_compra
			set 	dt_definicao 		= clock_timestamp(),
				ie_aprov_reprov 	= 'A',
				nm_usuario		= nm_usuario_p,
				nm_usuario_aprov 	= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				dt_liberacao		= CASE WHEN dt_liberacao = NULL THEN clock_timestamp()  ELSE dt_liberacao END ,
				ie_automatico		= coalesce(ie_automatica_p,'N'),
				ds_observacao		= ds_observacao_w
			where	nr_sequencia		= nr_seq_aprovacao_p
			and	nr_seq_proc_aprov 	= nr_seq_proc_aprov_w;

			CALL grava_hist_proc_aprov(nr_seq_aprovacao_p,nr_seq_proc_aprov_w,nm_usuario_p);

			end;
		end loop;
		close C02;
	end if;

	if (ie_cancela_email_aprov_w = 'S') then
		CALL cancelar_email_pend_proc_aprov(nr_seq_aprovacao_p,nr_seq_processo_p);
	end if;

	if (ie_automatica_p = 'S') then
		begin
		select	coalesce(min(nr_seq_proc_aprov),0)
		into STRICT	nr_seq_processo_w
		from	processo_aprov_compra
		where	nr_sequencia = nr_seq_aprovacao_p
		and	ie_aprov_reprov = 'P';
		exception
			when others then
				nr_seq_processo_w	:= 0;
		end;
	else
		
		/*OS 1317340 */

		select	coalesce(max(nr_seq_proc_original),0)
		into STRICT	nr_seq_proc_original_w
		from	processo_aprov_compra
		where	nr_sequencia = nr_seq_aprovacao_p
		and	nr_seq_proc_aprov = nr_seq_processo_p;
	
		begin
		select	nr_seq_processo
		into STRICT	nr_seq_processo_w
		from	(SELECT	coalesce(a.nr_seq_proc_aprov,0) nr_seq_processo
			from	processo_aprov_compra a
			where	a.nr_sequencia		= nr_seq_aprovacao_p
			and	((a.nr_seq_proc_aprov 	> nr_seq_processo_p) or
				(nr_seq_proc_original_w > 0 AND a.nr_seq_proc_aprov > nr_seq_proc_original_w)) /*OS 1317340 - O sistema nao estava colocando a data de liberacao no processo seguinte nos casos de encaminhar. O aprovador 1 encaminhou para o Jose, quando o Jose aprova, nao colocava data de liberacao no proximo*/
			and	a.nr_documento = nr_documento_w
			and	a.ie_aprov_reprov		= 'P'
			order by a.nr_nivel_aprovacao,nr_seq_proc_aprov) alias4 LIMIT 1;
		exception
			when others then
				nr_seq_processo_w	:= 0;
		end;

		begin
		select	count(*)
		into STRICT	qt_pendente_w
		from	processo_aprov_compra
		where	nr_sequencia	= nr_seq_aprovacao_p
		and	ie_aprov_reprov = 'P';
		exception
			when others then
				qt_pendente_w 		:= 0;
		end;
		
		if (coalesce(qt_pendente_w,0) > 0) and (coalesce(nr_seq_processo_w,0) = 0) and (coalesce(nr_seq_proc_original_w,0) > 0) then
			begin
			select	nr_seq_processo
			into STRICT	nr_seq_processo_w
			from (SELECT	coalesce(a.nr_seq_proc_aprov,0) nr_seq_processo
				from	processo_aprov_compra a
				where	a.nr_sequencia = nr_seq_aprovacao_p
				and	a.nr_documento = nr_documento_w
				and	a.ie_aprov_reprov		= 'P'
				order by a.nr_nivel_aprovacao,nr_seq_proc_aprov) alias7 LIMIT 1;
			exception
				when others then
					nr_seq_processo_w := 0;
			end;
		end if;

	end if;
	
	if (nr_seq_processo_w = 0) and (coalesce(qt_pendente_w,0) = 0) then
		begin

		if (ie_origem_processo_w = 'O') then
			begin
			update	ordem_compra_item
			set	dt_aprovacao		= clock_timestamp(),
				dt_aprovacao_orig	= clock_timestamp(),
				nr_seq_proc_aprov	= nr_seq_processo_p
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
			exception
				when others then
					cd_erro_w	:= 0;
			end;
		elsif (ie_origem_processo_w = 'S') then
			begin
			update	solic_compra_item
			set	dt_autorizacao		= clock_timestamp(),
				nr_seq_proc_aprov	= nr_seq_processo_p
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
			exception
				when others then
					cd_erro_w	:= 0;
			end;

			begin
			update	solic_compra
			set	cd_pessoa_autoriza	= cd_pessoa_fisica_w
			where	nr_solic_compra		= (	SELECT	max(nr_solic_compra)
								from	solic_compra_item
								where	nr_seq_aprovacao = nr_seq_aprovacao_p);
			exception
				when others then
					cd_erro_w	:= 0;
			end;
		elsif (ie_origem_processo_w = 'R') then
			begin
			update	item_requisicao_material
			set	dt_aprovacao		= clock_timestamp(),
				nm_usuario_aprov 	= nm_usuario_p,
				nr_seq_proc_aprov	= nr_seq_processo_p
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
			exception
				when others then
					cd_erro_w	:= 0;
			end;
		elsif (ie_origem_processo_w = 'N') then
			begin
			update	nota_fiscal_item
			set	dt_aprovacao		= clock_timestamp(),
				nm_usuario_aprov 	= nm_usuario_p,
				nr_seq_proc_aprov	= nr_seq_processo_p
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
			exception
				when others then
					cd_erro_w	:= 0;
			end;
		elsif (ie_origem_processo_w = 'C') then
			begin
			update	cot_compra_item
			set	dt_aprovacao		= clock_timestamp(),
				nm_usuario_aprov 	= nm_usuario_p,
				nr_seq_proc_aprov	= nr_seq_processo_p
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
			exception
				when others then
					cd_erro_w	:= 0;
			end;
		elsif (ie_origem_processo_w = 'L') then
			begin
			update	reg_lic_item
			set	dt_aprovacao		= clock_timestamp(),
				nm_usuario_aprov 	= nm_usuario_p,
				nr_seq_proc_aprov	= nr_seq_processo_p
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
			exception
				when others then
					cd_erro_w	:= 0;
			end;
		elsif (ie_origem_processo_w = 'G') then
			begin
			update	contrato
			set	dt_aprovacao		= clock_timestamp(),
				nm_usuario_aprov 	= nm_usuario_p,
				nr_seq_proc_aprov	= nr_seq_processo_p
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
			exception
			when no_data_found then
				cd_erro_w := 0;
			end;
		elsif (ie_origem_processo_w = 'E') then
			begin
			update	projeto_recurso
			set	dt_aprovacao		= clock_timestamp(),
				nm_usuario_aprov 	= nm_usuario_p,
				nr_seq_proc_aprov	= nr_seq_processo_p
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
			exception
			when no_data_found then
				cd_erro_w := 0;
			end;
		end if;
		end;
	else
		begin

		update	processo_aprov_compra
		set	dt_liberacao 		= clock_timestamp(),
			nm_usuario_aprov	= nm_usuario_p
		where	nr_sequencia		= nr_seq_aprovacao_p
		and	nr_seq_proc_aprov	= nr_seq_processo_w;

		select	count(*)
		into STRICT	qt_existe_regra_email_w
		from	regra_envio_email_compra
		where	ie_tipo_mensagem = 58
		and	ie_situacao = 'A'
		and	cd_estabelecimento = cd_estabelecimento_w
		and	ie_origem_processo_w in ('S');

		if (qt_existe_regra_email_w > 0) and (ie_automatica_p = 'N') then
			CALL envia_email_proximo_aprov(nr_seq_aprovacao_p,nr_seq_processo_w,cd_estabelecimento_w,nm_usuario_p);
		end if;

		select	count(*)
		into STRICT	qt_existe_regra_email_w
		from	regra_envio_email_compra
		where	ie_tipo_mensagem = 83
		and	ie_situacao = 'A'
		and	cd_estabelecimento = cd_estabelecimento_w
		and	ie_origem_processo_w in ('C');

		if (qt_existe_regra_email_w > 0) and (ie_automatica_p = 'N') then
			CALL envia_email_proximo_aprov_cot(nr_seq_aprovacao_p,nr_seq_processo_w,cd_estabelecimento_w,nm_usuario_p);
		end if;

		end;
	end if;
	end;
end if;

CALL validar_aprovacao_compra(	nr_seq_aprovacao_p => nr_seq_aprovacao_p, nr_seq_processo_p => coalesce(nr_seq_processo_p,nr_seq_processo_w),
				ie_origem_processo_p => ie_origem_processo_w, nm_usuario_p => nm_usuario_p,
				cd_estabelecimento_p => cd_estabelecimento_w);

CALL aprovar_solic_ordem_compra(nr_seq_aprovacao_p, nm_usuario_p);
CALL gravar_historico_aprov_compra(nr_seq_aprovacao_p, nr_seq_processo_p, nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE aprovar_compra ( nr_seq_aprovacao_p bigint, nr_seq_processo_p bigint, nm_usuario_p text, ie_automatica_p text, ie_aprovar_todos_p text) FROM PUBLIC;

