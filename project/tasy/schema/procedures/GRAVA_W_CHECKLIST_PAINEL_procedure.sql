-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE grava_w_checklist_painel ( ds_lista_checklist_p text, ie_avaliacao_p bigint, ie_filtro_p text, nm_usuario_p text) AS $body$
DECLARE



ds_checklist_w			varchar(255);
nm_checklist_w			varchar(255);
nr_seq_checklist_w		varchar(255);
ds_atendimento_w		varchar(255);
nm_paciente_w			varchar(255);
nr_sequencia_w			bigint;
ds_comando_w			varchar(4000);
ds_sql_check_cria_w		varchar(2000);
ds_sql_check_w			varchar(2000);
nr_atributo_w			smallint;
ds_completude_w			varchar(255);
nr_seq_atend_w			bigint;
ds_sql_cursor_w   		varchar(2000);
ds_sql_cursor03_w   		varchar(2000);

C01 REFCURSOR;
C02 REFCURSOR;
C03 REFCURSOR;
C04 REFCURSOR;
C05 REFCURSOR;
ds_lista_checklist_w		varchar(255);
ie_pos_and_w			bigint;
ds_lista_aux_w			varchar(255);
tam_lista_w			bigint;

expressao1_w	varchar(255) := obter_desc_expressao_idioma(295156, null, wheb_usuario_pck.get_nr_seq_idioma);--Paciente
expressao2_w	varchar(255) := obter_desc_expressao_idioma(283863, null, wheb_usuario_pck.get_nr_seq_idioma);--Atendimento
BEGIN

DELETE FROM w_checklist_painel WHERE nm_usuario = nm_usuario_p;

IF (ds_lista_checklist_p IS NOT NULL AND ds_lista_checklist_p::text <> '') THEN
	BEGIN
	nr_atributo_w	:= 1;

	/*if (instr(ds_lista_checklist_p,'and cd_estabelecimento',1,1) > 0) then
		select substr(ds_lista_checklist_p,
				decode(sign(instr(ds_lista_checklist_p,'and nr_seq_checklist',1,1)), --Se retornar um significa que é maior que zero
					1,
					instr(ds_lista_checklist_p,' and nr_seq_checklist',1,1),
					1),
				decode(instr(ds_lista_checklist_p,' and cd_estabelecimento',1,1),
					0,
					length(ds_lista_checklist_p),
					(instr(ds_lista_checklist_p,' and cd_estabelecimento',1,1)-1)))
		into ds_lista_checklist_w
		from dual;
	else
		ds_lista_checklist_w := ds_lista_checklist_p;
	end if;*/
	if (position('and cd_estabelecimento' in ds_lista_checklist_p) > 0) and (length(ds_lista_checklist_p) > 0 ) then
		begin

		tam_lista_w	:= length(ds_lista_checklist_p);
		ie_pos_and_w	:= position('and cd_estabelecimento' in ds_lista_checklist_p);
		ds_lista_aux_w	:= ds_lista_checklist_p;
		ds_lista_checklist_w 	:= ' ';

		while(ie_pos_and_w > 0) and (position('and nr_seq_checklist' in ds_lista_aux_w) > 0) loop
			begin
			ds_lista_checklist_w	:= ds_lista_checklist_w || ' ' || substr(ds_lista_aux_w,1,(ie_pos_and_w - 1));
			ds_lista_aux_w		:= substr(ds_lista_aux_w,(ie_pos_and_w + 22),tam_lista_w);
			ds_lista_aux_w		:= substr(ds_lista_aux_w,(position('and nr_seq_checklist' in ds_lista_aux_w)),tam_lista_w);
			ie_pos_and_w		:= position('and cd_estabelecimento' in ds_lista_aux_w);
			end;
		end loop;

		if (position('and nr_seq_checklist' in ds_lista_aux_w) > 0) then
			ds_lista_checklist_w	:= ds_lista_checklist_w || ' ' || substr(ds_lista_aux_w,(position('and nr_seq_checklist' in ds_lista_aux_w)),tam_lista_w);
		end if;

		end;
	else
		ds_lista_checklist_w := ds_lista_checklist_p;
	end if;

	--Montar o cabeçalho
	IF (ie_avaliacao_p = 1) THEN  	--por avaliação
		BEGIN
		ds_sql_cursor_w := ' select	distinct
						a.nr_sequencia,
						substr(a.nm_item_checklist,1,255)
					from	checklist_processo_item a
					where	1 = 1 '
					|| coalesce(ds_lista_checklist_w, '')
					||' order by 1';

		OPEN C02 for EXECUTE ds_sql_cursor_w;
		LOOP
		FETCH 	C02 INTO
			nr_sequencia_w,
			nm_checklist_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			BEGIN
			ds_sql_check_w			:= ds_sql_check_w || CHR(39) || nm_checklist_w || CHR(39) || ',';
			ds_sql_check_cria_w		:= ds_sql_check_cria_w || ' DS_RESULTADO' || nr_atributo_w || ',';

			nr_atributo_w			:= nr_atributo_w + 1;

			END;
		END LOOP;
		CLOSE C02;
		END;
	ELSE					--por checklist
		BEGIN
		ds_sql_cursor_w := ' select	distinct
						a.nr_sequencia,
						substr(a.nm_checklist,1,255)
					from	checklist_processo a
					where	1 = 1'
					|| coalesce(replace(ds_lista_checklist_w,'nr_seq_checklist','nr_sequencia'),'')
					||' order by 1';

		OPEN C01 for EXECUTE ds_sql_cursor_w;
		LOOP
		FETCH 	C01 INTO
			nr_sequencia_w,
			nm_checklist_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			BEGIN
			ds_sql_check_w			:= ds_sql_check_w || CHR(39) || nm_checklist_w || CHR(39) || ',';
			ds_sql_check_cria_w		:= ds_sql_check_cria_w || ' DS_RESULTADO' || nr_atributo_w || ',';

			nr_atributo_w			:= nr_atributo_w + 1;

			END;
		END LOOP;
		CLOSE C01;
		END;
	END IF;

	ds_comando_w	:= ' insert into w_checklist_painel (	ds_atendimento,
							nm_paciente,
							ie_opcao, '||
							ds_sql_check_cria_w ||
							'nm_usuario)
						values( '||CHR(39)||expressao2_w||CHR(39)||', ' ||
							CHR(39)||expressao1_w||CHR(39) || ', ' ||
							CHR(39)||'C'||CHR(39)||', ' ||
							ds_sql_check_w ||
							CHR(39)||nm_usuario_p||CHR(39)||') ';

	CALL exec_sql_dinamico('TASY', ds_comando_w);

	--Montar as informações
	ds_sql_cursor03_w := ' select	to_char(b.nr_atendimento),
					substr(obter_nome_pf(b.cd_pessoa_fisica),1,255),
					b.nr_sequencia
				from	atendimento_checklist b,
					atendimento_paciente a
				where	a.nr_atendimento = b.nr_atendimento
				and	((( :ie_filtro_p  = ' || CHR(39) || 'PT' || CHR(39) || ') and (nvl(obter_complitude_clepa(b.nr_sequencia, 0),0) = 0)) or
					(( :ie_filtro_p  = ' || CHR(39) || 'PP'|| CHR(39) || ') and (nvl(obter_complitude_clepa(b.nr_sequencia, 0),0) between 1 and 99)) or
					(( :ie_filtro_p  = ' || CHR(39) || 'TO'|| CHR(39) || '))) '
				|| coalesce(ds_lista_checklist_p, '');

	OPEN C03 for EXECUTE ds_sql_cursor03_w using ie_filtro_p,ie_filtro_p,ie_filtro_p;
	LOOP
	FETCH C03 INTO
		ds_atendimento_w,
		nm_paciente_w,
		nr_seq_atend_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		BEGIN

		nr_atributo_w		:= 1;
		ds_sql_check_w		:= '';
		ds_sql_check_cria_w	:= '';

		IF (ie_avaliacao_p = 1) THEN  	--por avaliação
			BEGIN
			ds_sql_cursor_w := ' select 	distinct
							a.nr_sequencia,
							substr(a.nm_item_checklist,1,255),
							(select	max(nvl(obter_complitude_clepa(b.nr_seq_atend_checklist, a.nr_sequencia),0))
							from	med_avaliacao_paciente b
							where	b.nr_seq_checklist_item = a.nr_sequencia
							and	b.nr_seq_atend_checklist = ' || nr_seq_atend_w || ')
						from	checklist_processo_item a
						where	1 = 1'
						|| coalesce(ds_lista_checklist_w, '')
						||' order by 1';

			OPEN C05 for EXECUTE ds_sql_cursor_w;
			LOOP
			FETCH C05 INTO
				nr_sequencia_w,
				nm_checklist_w,
				ds_completude_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				BEGIN
				ds_sql_check_w		:= ds_sql_check_w || CHR(39) || ds_completude_w ||CHR(39) || ',';
				ds_sql_check_cria_w	:= ds_sql_check_cria_w || ' DS_RESULTADO' || nr_atributo_w || ',';

				nr_atributo_w			:= nr_atributo_w + 1;
				END;
			END LOOP;
			CLOSE C05;
			END;
		ELSE					--por checklist
			BEGIN
			ds_sql_cursor_w := ' select 	distinct
							a.nr_sequencia,
							substr(a.nm_checklist,1,255),
							(select	max(nvl(obter_complitude_clepa(b.nr_sequencia, 0),0))
							 from	atendimento_checklist b
							where	a.nr_sequencia	= b.nr_seq_checklist
							and	b.nr_sequencia	= ' || nr_seq_atend_w || ')
						from	checklist_processo a
						where	1 = 1'
						|| coalesce(replace(ds_lista_checklist_w,'nr_seq_checklist','nr_sequencia'),'')
						||' order by 1';

			OPEN C04 for EXECUTE ds_sql_cursor_w;
			LOOP
			FETCH C04 INTO
				nr_sequencia_w,
				nm_checklist_w,
				ds_completude_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				BEGIN
				ds_sql_check_w		:= ds_sql_check_w || CHR(39) || ds_completude_w ||CHR(39) || ',';
				ds_sql_check_cria_w	:= ds_sql_check_cria_w || ' DS_RESULTADO' || nr_atributo_w || ',';

				nr_atributo_w			:= nr_atributo_w + 1;
				END;
			END LOOP;
			CLOSE C04;
			END;
		END IF;


		ds_comando_w	:= ' insert into w_checklist_painel (	ds_atendimento,
							nm_paciente,
							ie_opcao, '||
							ds_sql_check_cria_w ||
							'nm_usuario)
						values( '||CHR(39)||ds_atendimento_w||CHR(39)||', ' ||
							CHR(39)||nm_paciente_w||CHR(39) || ', ' ||
							CHR(39)||'I'||CHR(39)||', ' ||
							ds_sql_check_w ||
							CHR(39)||nm_usuario_p||CHR(39)||') ';

		CALL exec_sql_dinamico('TASY', ds_comando_w);
		END;
	END LOOP;
	CLOSE C03;
	END;
END IF;

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE grava_w_checklist_painel ( ds_lista_checklist_p text, ie_avaliacao_p bigint, ie_filtro_p text, nm_usuario_p text) FROM PUBLIC;

