-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_prestador_pgto ( nr_seq_prestador_prot_p bigint, nr_seq_prestador_exec_p text, nr_seq_prestador_part_p text, vl_apresentado_p bigint, vl_calculado_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint, nr_seq_prest_fornec_p bigint, nm_usuario_p text, ie_origem_conta_p text, ie_tipo_guia_p text, ie_existe_prest_partic_p text, dt_referencia_p pls_conta.dt_atendimento_referencia%type, ie_validacao_p pls_prestador_pagamento.ie_validacao%type DEFAULT 'CM', nr_seq_prestador_pgto_p INOUT bigint DEFAULT NULL, nr_seq_regra_p INOUT bigint DEFAULT NULL, ie_define_pagamento_p INOUT text DEFAULT NULL, ie_cobrar_material_p INOUT text DEFAULT NULL, ie_cobrar_co_p INOUT text DEFAULT NULL) AS $body$
DECLARE


nr_seq_prestador_pgto_w		bigint;
nr_seq_prestador_pgto_ww	bigint;
nr_seq_regra_w			bigint;
nr_seq_regra_ww			bigint;
ie_excecao_w			varchar(10);
vl_comparacao_w			double precision;
nr_seq_grupo_material_w		bigint;
ie_grupo_material_w		varchar(1)	:= 'S';
qt_excecao_w			bigint;
vl_apresentado_w		double precision;
vl_calculado_w			double precision;
ie_define_pagamento_w		varchar(1)	:= 'N';
ie_define_pagamento_ww		varchar(1)	:= 'N';
ie_cobrar_material_w		varchar(1)	:= 'N';
ie_cobrar_material_ww		varchar(1);
ie_cobrar_co_w			varchar(1)	:= 'N';
ie_cobrar_co_ww			varchar(1);
nr_seq_tipo_prest_conta_w	bigint;
cd_area_procedimento_w		bigint;
cd_especialidade_w		bigint;
cd_grupo_proc_w			bigint;
ie_origem_proced_w		bigint;
nr_seq_estrut_mat_w		bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_prestador_pgto,
		nr_seq_grupo_material,
		ie_define_pagamento,
		ie_cobrar_material,
		ie_cobrar_co
	from	pls_prestador_pagamento
	where	ie_situacao	= 'A'
	and	((coalesce(nr_seq_prestador_prot::text, '') = '') or (nr_seq_prestador_prot = nr_seq_prestador_prot_p))
	and	(((coalesce(ie_tipo_valor,'A') = 'A') and (vl_apresentado_w between coalesce(vl_minimo_item, vl_apresentado_w) and coalesce(vl_max_item, vl_apresentado_w))) or
		((coalesce(ie_tipo_valor,'A') = 'C') and (vl_calculado_w between coalesce(vl_minimo_item, vl_calculado_w) and coalesce(vl_max_item, vl_calculado_w))))
	and	((coalesce(nr_seq_prest_fornec::text, '') = '') or (nr_seq_prest_fornec = nr_seq_prest_fornec_p))
	and	((coalesce(cd_procedimento::text, '') = '') or (cd_procedimento = cd_procedimento_p and (ie_origem_proced = ie_origem_proced_p)))
	and	((coalesce(nr_seq_material::text, '') = '') or (nr_seq_material = coalesce(nr_seq_material_p,0)))
	and	((coalesce(ie_origem_conta::text, '') = '') or (ie_origem_conta = ie_origem_conta_p))
	and	((coalesce(ie_tipo_guia::text, '') = '') or (ie_tipo_guia = ie_tipo_guia_p))
	and	((coalesce(cd_grupo_proc::text, '') = '') or (cd_grupo_proc = cd_grupo_proc_w))
	and	((coalesce(cd_especialidade::text, '') = '') or (cd_especialidade = cd_especialidade_w))
	and	((coalesce(cd_area_procedimento::text, '') = '') or (cd_area_procedimento = cd_area_procedimento_w))
	and	((coalesce(nr_seq_estrut_mat::text, '') = '') or (nr_seq_estrut_mat = nr_seq_estrut_mat_w))
	and	((coalesce(nr_seq_prestador_conta::text, '') = '') or (nr_seq_prestador_conta = nr_seq_prestador_exec_p))
	and	((coalesce(nr_seq_prestador_part::text, '') = '') or (nr_seq_prestador_part = nr_seq_prestador_part_p))
	and	((coalesce(nr_seq_tipo_prest_conta::text, '') = '') or (nr_seq_tipo_prest_conta = nr_seq_tipo_prest_conta_w))
	and	((coalesce(ie_existe_prest_partic,'N') = 'N') or (ie_existe_prest_partic = ie_existe_prest_partic_p))
	and (dt_referencia_p between dt_inicio_vigencia_ref and fim_dia(dt_fim_vigencia_ref))
	and	((coalesce(ie_validacao::text, '') = '') or (ie_validacao = 'A') or (ie_validacao = ie_validacao_p))
	order by 	coalesce(nr_seq_prestador_prot,0),
			coalesce(nr_seq_tipo_prest_conta,0),
			coalesce(nr_seq_prest_fornec,0),
			coalesce(vl_minimo_item,0),
			coalesce(vl_max_item,0),
			coalesce(ie_origem_conta,'A'),
			coalesce(ie_tipo_guia,'0'),
			coalesce(cd_procedimento,0),
			coalesce(cd_grupo_proc,0),
			coalesce(cd_especialidade,0),
			coalesce(cd_area_procedimento,0),
			coalesce(nr_seq_material,0),
			coalesce(nr_seq_estrut_mat,0),
			coalesce(nr_seq_grupo_material,0),
			coalesce(ie_existe_prest_partic,'N'),
			coalesce(nr_seq_prestador_conta,0);


BEGIN

vl_apresentado_w	:= coalesce(vl_apresentado_p,0);
vl_calculado_w		:= coalesce(vl_calculado_p,0);

if (nr_seq_prestador_exec_p IS NOT NULL AND nr_seq_prestador_exec_p::text <> '') then
	begin
		select	nr_seq_tipo_prestador
		into STRICT	nr_seq_tipo_prest_conta_w
		from	pls_prestador
		where 	nr_sequencia = nr_seq_prestador_exec_p;
	exception
	when others then
		nr_seq_tipo_prest_conta_w := null;
	end;
end if;

SELECT * FROM pls_obter_estrut_proc(	cd_procedimento_p, ie_origem_proced_p, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w;

if (coalesce(nr_seq_material_p,0) <> 0)	then
	select	max(nr_seq_estrut_mat)
	into STRICT	nr_seq_estrut_mat_w
	from	pls_material
	where	nr_sequencia = nr_seq_material_p;
end if;

open C01;
loop
fetch C01 into
	nr_seq_regra_w,
	nr_seq_prestador_pgto_w,
	nr_seq_grupo_material_w,
	ie_define_pagamento_ww,
	ie_cobrar_material_ww,
	ie_cobrar_co_ww;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_grupo_material_w	:= 'S';
	/* Grupo de material */

	if (coalesce(nr_seq_grupo_material_w,0) > 0) then
		ie_grupo_material_w	:= pls_se_grupo_preco_material(nr_seq_grupo_material_w, nr_seq_material_p);
	end if;

	if (ie_grupo_material_w	= 'S') then
		ie_excecao_w	:= 'N';
		select	count(1)
		into STRICT	qt_excecao_w
		from	pls_excecao_prest_pag
		where	nr_seq_regra	= nr_seq_regra_w;

		if (qt_excecao_w > 0) then
			ie_excecao_w	:= pls_obter_se_prest_excecao(nr_seq_regra_w,nr_seq_prestador_exec_p,nr_seq_prest_fornec_p);
		end if;

		if (coalesce(ie_excecao_w,'N') = 'N') then
			nr_seq_regra_ww			:= nr_seq_regra_w;
			nr_seq_prestador_pgto_ww	:= nr_seq_prestador_pgto_w;
			ie_define_pagamento_w		:= ie_define_pagamento_ww;
			ie_cobrar_material_w		:= ie_cobrar_material_ww;
			ie_cobrar_co_w			:= ie_cobrar_co_ww;
		end if;
	end if;

	end;
end loop;
close C01;

nr_seq_prestador_pgto_p	:= coalesce(nr_seq_prestador_pgto_ww,nr_seq_prestador_pgto_p);
nr_seq_regra_p		:= nr_seq_regra_ww;
ie_define_pagamento_p	:= ie_define_pagamento_w;
ie_cobrar_material_p	:= ie_cobrar_material_w;
ie_cobrar_co_p		:= ie_cobrar_co_p;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_prestador_pgto ( nr_seq_prestador_prot_p bigint, nr_seq_prestador_exec_p text, nr_seq_prestador_part_p text, vl_apresentado_p bigint, vl_calculado_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint, nr_seq_prest_fornec_p bigint, nm_usuario_p text, ie_origem_conta_p text, ie_tipo_guia_p text, ie_existe_prest_partic_p text, dt_referencia_p pls_conta.dt_atendimento_referencia%type, ie_validacao_p pls_prestador_pagamento.ie_validacao%type DEFAULT 'CM', nr_seq_prestador_pgto_p INOUT bigint DEFAULT NULL, nr_seq_regra_p INOUT bigint DEFAULT NULL, ie_define_pagamento_p INOUT text DEFAULT NULL, ie_cobrar_material_p INOUT text DEFAULT NULL, ie_cobrar_co_p INOUT text DEFAULT NULL) FROM PUBLIC;

