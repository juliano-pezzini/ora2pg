-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_importar_a1100_v60 ( nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Importação do A1100 (lista de transações que foram autorizadas pelo WSD), do pTU 8.0
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [   ] Portal [  ]  Relatórios [ x] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_conteudo_w			varchar(4000);
nr_seq_arquivo_w		integer;
ie_tipo_registro_w		varchar(3);
cd_unimed_w			varchar(4);
dt_mov_inicial_ww		varchar(8);
dt_mov_final_ww			varchar(8);
dt_mov_inicial_w		timestamp;
dt_mov_final_w			timestamp;
nr_versao_trans_w		varchar(2);
qt_total_r102_w			integer;
qt_total_r103_w			integer;
cd_unimed_executora_w		varchar(4);
cd_unimed_origem_w		varchar(4);
nr_seq_execucao_w		bigint;
nr_seq_origem_w			bigint;
nr_seq_trans_refe_w		bigint;
nr_seq_cabecalho_w		bigint;
nr_seq_dados_pedido_w		bigint;
cd_usuario_plano_w		varchar(13);
dt_solicitacao_ww		varchar(21);
dt_resposta_wsd_ww		varchar(21);
dt_solicitacao_w		timestamp;
dt_resposta_wsd_w		timestamp;
ie_tipo_tabela_w		smallint;
cd_servico_w			integer;
ds_servico_w			varchar(80);
qt_autorizada_w			varchar(8);
ie_resposta_wsd_w		smallint;
ie_situacao_opera_w		ptu_dados_pedido_a1100.ie_situacao_operadora%type;
cd_mensagem_erro_w		ptu_itens_pedido_a1100.cd_mensagem_erro%type;
qt_autorizada_ww		double precision;
ds_hash_w			varchar(32);
nr_seq_item_w			smallint;

C01 CURSOR FOR
	SELECT	ds_valores
	from	w_scs_importacao
	where	nm_usuario	= nm_usuario_p
	order by nr_sequencia;

BEGIN

open C01;
loop
fetch C01 into
	ds_conteudo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	--Header
	if (length(ds_conteudo_w)	= 33) then
		nr_seq_arquivo_w	:= (substr(ds_conteudo_w,1,8))::numeric;
		ie_tipo_registro_w	:= trim(both substr(ds_conteudo_w,9,3));
		cd_unimed_w		:= trim(both substr(ds_conteudo_w,12,4));
		dt_mov_inicial_ww	:= trim(both substr(ds_conteudo_w,22,2))||trim(both substr(ds_conteudo_w,20,2))||trim(both substr(ds_conteudo_w,16,4));
		dt_mov_final_ww		:= trim(both substr(ds_conteudo_w,30,2))||trim(both substr(ds_conteudo_w,28,2))||trim(both substr(ds_conteudo_w,24,4));
		nr_versao_trans_w	:= trim(both substr(ds_conteudo_w,32,2));

		if (coalesce(dt_mov_inicial_ww,'X')	<> 'X') then
			dt_mov_inicial_w	:= to_date(dt_mov_inicial_ww,'dd/mm/yyyy');
		end if;

		if (coalesce(dt_mov_final_ww,'X')	<> 'X') then
			dt_mov_final_w		:= to_date(dt_mov_final_ww,'dd/mm/yyyy');
		end if;

		select	nextval('ptu_cabecalho_a1100_seq')
		into STRICT	nr_seq_cabecalho_w
		;

		insert	into ptu_cabecalho_a1100(nr_sequencia, nm_usuario, nm_usuario_nrec,
			 dt_atualizacao, dt_atualizacao_nrec, nr_seq_arquivo,
			 ie_tipo_registro, cd_unimed, dt_movimentacao_inicial,
			 dt_movimentacao_final, nr_versao_transacao)
		values (nr_seq_cabecalho_w, nm_usuario_p, nm_usuario_p,
			 clock_timestamp(), clock_timestamp(), nr_seq_arquivo_w,
			 ie_tipo_registro_w, cd_unimed_w, dt_mov_inicial_w,
			 dt_mov_final_w, nr_versao_trans_w);
	--Trailer
	elsif (length(ds_conteudo_w)	= 21) then
		nr_seq_arquivo_w	:= (substr(ds_conteudo_w,1,8))::numeric;
		ie_tipo_registro_w	:= trim(both substr(ds_conteudo_w,9,3));
		qt_total_r102_w		:= (substr(ds_conteudo_w,12,5))::numeric;
		qt_total_r103_w		:= (substr(ds_conteudo_w,17,5))::numeric;

		insert	into ptu_trailer_a1100(nr_sequencia, nr_seq_cabecalho, nm_usuario,
			 nm_usuario_nrec, dt_atualizacao, dt_atualizacao_nrec,
			 nr_seq_arquivo, ie_tipo_registro, qt_total_r102,
			 qt_total_r103)
		values (nextval('ptu_trailer_a1100_seq'), nr_seq_cabecalho_w, nm_usuario_p,
			 nm_usuario_p, clock_timestamp(), clock_timestamp(),
			 nr_seq_arquivo_w, ie_tipo_registro_w, qt_total_r102_w,
			 qt_total_r103_w);
	--Dados do pedido
	elsif (length(ds_conteudo_w)	= 109) then
		nr_seq_arquivo_w	:= (substr(ds_conteudo_w,1,8))::numeric;
		ie_tipo_registro_w	:= trim(both substr(ds_conteudo_w,9,3));
		cd_unimed_executora_w	:= trim(both substr(ds_conteudo_w,12,4));
		cd_unimed_origem_w	:= trim(both substr(ds_conteudo_w,16,4));
		nr_seq_execucao_w	:= (substr(ds_conteudo_w,20,10))::numeric;
		nr_seq_origem_w		:= (substr(ds_conteudo_w,30,10))::numeric;
		nr_seq_trans_refe_w	:= (substr(ds_conteudo_w,40,10))::numeric;
		cd_unimed_w		:= trim(both substr(ds_conteudo_w,50,4));
		cd_usuario_plano_w	:= trim(both substr(ds_conteudo_w,54,13));
		dt_solicitacao_ww	:= trim(both substr(ds_conteudo_w,75,2))||trim(both substr(ds_conteudo_w,72,2))||trim(both substr(ds_conteudo_w,67,4))||' '||trim(both substr(ds_conteudo_w,77,8));
		dt_resposta_wsd_ww	:= trim(both substr(ds_conteudo_w,96,2))||trim(both substr(ds_conteudo_w,93,2))||trim(both substr(ds_conteudo_w,88,4))||' '||trim(both substr(ds_conteudo_w,98,8));
		ie_situacao_opera_w	:= (substr(ds_conteudo_w,109,1))::numeric;

		if (coalesce(dt_solicitacao_ww,'X')	<> 'X') then
			dt_solicitacao_w	:= to_date(dt_mov_inicial_ww,'dd/mm/yyyy hh24:mi:ss');
		end if;

		if (coalesce(dt_resposta_wsd_ww,'X')	<> 'X') then
			dt_resposta_wsd_w	:= to_date(dt_mov_final_ww,'dd/mm/yyyy hh24:mi:ss');
		end if;

		select	nextval('ptu_dados_pedido_a1100_seq')
		into STRICT	nr_seq_dados_pedido_w
		;

		insert	into ptu_dados_pedido_a1100(nr_sequencia, nr_seq_cabecalho, nm_usuario,
			 nm_usuario_nrec, dt_atualizacao, dt_atualizacao_nrec,
			 nr_seq_arquivo, ie_tipo_registro, cd_unimed_executora,
			 cd_unimed_origem, nr_seq_execucao, nr_seq_origem,
			 nr_seq_trans_refe, cd_unimed, cd_usuario_plano,
			 dt_solicitacao, dt_resposta_wsd, ie_situacao_operadora)
		values (nr_seq_dados_pedido_w, nr_seq_cabecalho_w, nm_usuario_p,
			 nm_usuario_p, clock_timestamp(), clock_timestamp(),
			 nr_seq_arquivo_w, ie_tipo_registro_w, cd_unimed_executora_w,
			 cd_unimed_origem_w, nr_seq_execucao_w, nr_seq_origem_w,
			 nr_seq_trans_refe_w, cd_unimed_w, cd_usuario_plano_w,
			 dt_solicitacao_w, dt_resposta_wsd_w, ie_situacao_opera_w);
	--Dados dos itens
	elsif (length(ds_conteudo_w)	= 115) then
		nr_seq_arquivo_w	:= (substr(ds_conteudo_w,1,8))::numeric;
		ie_tipo_registro_w	:= trim(both substr(ds_conteudo_w,9,3));
		ie_tipo_tabela_w	:= (substr(ds_conteudo_w,12,1))::numeric;
		cd_servico_w		:= (substr(ds_conteudo_w,13,8))::numeric;
		ds_servico_w		:= trim(both substr(ds_conteudo_w,21,80));
		qt_autorizada_w		:= substr(ds_conteudo_w,101,8);
		ie_resposta_wsd_w	:= (substr(ds_conteudo_w,109,1))::numeric;
		cd_mensagem_erro_w	:= trim(both substr(ds_conteudo_w,110,4));
		nr_seq_item_w		:= trim(both substr(ds_conteudo_w,114,2));

		begin
			qt_autorizada_ww	:= (ptu_obter_qtd_env_itens_scs(null, qt_autorizada_w, 'R'))::numeric;
		exception
		when others then
			qt_autorizada_ww 	:= (replace(ptu_obter_qtd_env_itens_scs(null, qt_autorizada_w, 'R'),',','.'))::numeric;
		end;

		insert	into ptu_itens_pedido_a1100(nr_sequencia, nr_seq_dados_pedido, nm_usuario,
			 nm_usuario_nrec, dt_atualizacao, dt_atualizacao_nrec,
			 nr_seq_arquivo, ie_tipo_registro, ie_tipo_tabela,
			 cd_servico, ds_servico, qt_autorizada,
			 ie_resposta_wsd, cd_mensagem_erro, nr_seq_item)
		values (nextval('ptu_itens_pedido_a1100_seq'), nr_seq_dados_pedido_w, nm_usuario_p,
			 nm_usuario_p, clock_timestamp(), clock_timestamp(),
			 nr_seq_arquivo_w, ie_tipo_registro_w, ie_tipo_tabela_w,
			 cd_servico_w, ds_servico_w, qt_autorizada_ww,
			 ie_resposta_wsd_w, cd_mensagem_erro_w, nr_seq_item_w);
	-- Hash
	else
		nr_seq_arquivo_w	:= (substr(ds_conteudo_w,1,8))::numeric;
		ie_tipo_registro_w	:= trim(both substr(ds_conteudo_w,9,3));
		ds_hash_w		:= trim(both substr(ds_conteudo_w,12,32));

		insert	into ptu_hash_a1100(nr_sequencia, nr_seq_cabecalho, nr_seq_arquivo,
			nm_usuario, nm_usuario_nrec, dt_atualizacao,
			dt_atualizacao_nrec, ie_tipo_registro, ds_hash)
		values (nextval('ptu_hash_a1100_seq'), nr_seq_cabecalho_w, nr_seq_arquivo_w,
			nm_usuario_p, nm_usuario_p, clock_timestamp(),
			clock_timestamp(), ie_tipo_registro_w, ds_hash_w);
	end if;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_importar_a1100_v60 ( nm_usuario_p text) FROM PUBLIC;

