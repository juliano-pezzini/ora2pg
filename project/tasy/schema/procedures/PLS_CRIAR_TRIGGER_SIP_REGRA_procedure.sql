-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (ds		varchar(32760));


CREATE OR REPLACE PROCEDURE pls_criar_trigger_sip_regra () AS $body$
DECLARE


ds_trigger_w			text;
ds_corpo_trigger_w		text;

ds_select_campos_w		text;
ds_select_variaveis_w		text;
ds_select_w			text;

ds_variaveis_w			text;
ds_montar_campo_w		text;
ds_estrutura_valor_campo_w	text;
ds_enter_w			varchar(10) := chr(10);

qt_caracteres_w			integer;
qt_loops_w			integer;
ub				integer := 0;
type Vetor is table of  campos index by integer;
ds_script_vetor			Vetor;

ret_val				integer;
cursor1				integer;
v_text				dbms_sql.varchar2s;
ds_linha_w			varchar(256);

ds_script_w			text;

C01 CURSOR FOR
SELECT	column_name nm_atributo,
	data_type ie_tipo_atributo,
	data_length qt_tamanho
from	user_tab_columns
where	upper(table_name) = upper('sip_item_assist_regra_nv')
and	upper(column_name) not in (	upper('nm_usuario'),
					upper('nm_usuario_nrec'),
					upper('dt_atualizacao'),
					upper('dt_atualizacao_nrec'),
					upper('nr_seq_item_assist'),
					upper('nr_sequencia'),
					upper('ie_situacao'),
					upper('ds_controle_regra_duplic'))
order by 1;
BEGIN

ds_variaveis_w := '';
ds_montar_campo_w := '';
ds_select_campos_w := '';
ds_select_variaveis_w := '';
ds_estrutura_valor_campo_w := '';


for	r_C01_w in C01 loop
	-- Criar as variáveis da Trigger
	if (coalesce(r_C01_w.qt_tamanho::text, '') = '') then
		ds_variaveis_w := ds_variaveis_w||r_C01_w.nm_atributo||'_w	'||r_C01_w.ie_tipo_atributo||';'||ds_enter_w;
	else
		ds_variaveis_w := ds_variaveis_w||r_C01_w.nm_atributo||'_w	'||r_C01_w.ie_tipo_atributo||'('||r_C01_w.qt_tamanho||');'||ds_enter_w;
	end if;

	--Montar os campos do select principal da Trigger;
	-- Se for a primeira linha não coloca vírgula
	if (coalesce(ds_select_campos_w::text, '') = '') then
		ds_select_campos_w := ds_select_campos_w||':new.'||r_C01_w.nm_atributo;
	else
		ds_select_campos_w := ds_select_campos_w||', '||ds_enter_w||':new.'||r_C01_w.nm_atributo;
	end if;

	--Montar as variáveis do select principal da Trigger;
	-- Se for a primeira linha não coloca vírgula
	if (coalesce(ds_select_variaveis_w::text, '') = '') then
		ds_select_variaveis_w := ds_select_variaveis_w||r_C01_w.nm_atributo||'_w';
	else
		ds_select_variaveis_w := ds_select_variaveis_w||', '||ds_enter_w||r_C01_w.nm_atributo||'_w';
	end if;

	--Motar o recebimento de valor para o campo ds_controle_regra_duplic
	-- Se for a primeira linha não coloca o ||
	if (coalesce(ds_estrutura_valor_campo_w::text, '') = '') then
		ds_estrutura_valor_campo_w := 	ds_estrutura_valor_campo_w||ds_enter_w||
						''''||r_C01_w.nm_atributo||'='||''''||'||'||r_C01_w.nm_atributo||'_w'||'||'||''';''';
	else
		ds_estrutura_valor_campo_w := 	ds_estrutura_valor_campo_w||ds_enter_w||'||'||
						''''||r_C01_w.nm_atributo||'='||''''||'||'||r_C01_w.nm_atributo||'_w'||'||'||''';''';
	end if;
end loop;

--Criar o select principal da trigger;
if (ds_select_campos_w IS NOT NULL AND ds_select_campos_w::text <> '') and (ds_select_variaveis_w IS NOT NULL AND ds_select_variaveis_w::text <> '') then

	ds_select_w	:=	'	select	'||ds_select_campos_w||ds_enter_w||
				'	into	'||ds_select_variaveis_w||ds_enter_w||
				'	from	dual ;'||ds_enter_w;
end if;

-- Criar o recebimento do campo ds_controle_regra_duplic
if (ds_estrutura_valor_campo_w IS NOT NULL AND ds_estrutura_valor_campo_w::text <> '') then
	ds_montar_campo_w :=	' :new.ds_controle_regra_duplic := '||ds_estrutura_valor_campo_w||';';
end if;

ds_corpo_trigger_w	:=	ds_enter_w||ds_select_w||ds_enter_w||ds_montar_campo_w||ds_enter_w;

ds_trigger_w := ' create or replace trigger sip_item_assist_regra_nv_bi '||ds_enter_w||
		' before update or insert on sip_item_assist_regra_nv '||ds_enter_w||
		' for each row '||ds_enter_w||
		' declare '||ds_enter_w||
		ds_variaveis_w||ds_enter_w||
		' begin '||ds_enter_w||
		ds_corpo_trigger_w||ds_enter_w||
		' end; '||ds_enter_w;

ds_script_vetor[1].ds := substr(ds_trigger_w,1,32000);
ds_script_vetor[2].ds := substr(ds_trigger_w,32001,32000);

qt_caracteres_w := coalesce(length(ds_script_vetor[1].ds),0) + coalesce(length(ds_script_vetor[2].ds),0);

qt_loops_w	:= round(qt_caracteres_w / 256) + 1;

for j in 1..qt_loops_w loop
	begin
	ds_linha_w := substr(ds_trigger_w,256,((j*256)-255));

	if (length(trim(both ds_linha_w)) > 0) then
		ub := ub+1;
		v_text(ub) := ds_linha_w;
	end if;
	end;
end loop;

for l in 1..ub loop
	ds_script_w := ds_script_w||v_text(ub);
end loop;

cursor1 := dbms_sql.open_cursor;
dbms_sql.parse(cursor1, v_text, 1, ub, null, dbms_sql.native);
ret_val := dbms_sql.execute(cursor1);
dbms_sql.close_cursor(cursor1);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_criar_trigger_sip_regra () FROM PUBLIC;

