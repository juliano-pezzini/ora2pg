-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_alter_sol_prescr_adep (ie_tipo_solucao_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, ie_alteracao_p bigint, ds_observacao_p text, nm_usuario_p text, ds_justificativa_p text) AS $body$
DECLARE


nr_seq_alter_w		bigint;
cont_w			bigint;
ds_erro_w		varchar(2000);
dt_atualizacao_w	timestamp := clock_timestamp();


BEGIN
if (ie_tipo_solucao_p IS NOT NULL AND ie_tipo_solucao_p::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') and (ie_alteracao_p IS NOT NULL AND ie_alteracao_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then

	select	nextval('prescr_solucao_evento_seq')
	into STRICT	nr_seq_alter_w
	;
	begin
	select	count(*)
	into STRICT	cont_w
	from	prescr_solucao
	where	nr_prescricao	= nr_prescricao_p
	and	nr_seq_solucao	= nr_seq_solucao_p;

	if (ie_tipo_solucao_p = 1) and (cont_w > 0) then

		insert into prescr_solucao_evento(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_prescricao,
							nr_seq_solucao,
							ie_tipo_dosagem,
							qt_dosagem,
							qt_vol_infundido,
							qt_vol_desprezado,
							cd_pessoa_fisica,
							ie_alteracao,
							dt_alteracao,
							ie_evento_valido,
							nr_seq_motivo,
							ds_observacao,
							ie_tipo_solucao,
							ds_justificativa
							)
						values (
							nr_seq_alter_w,
							dt_atualizacao_w,
							nm_usuario_p,
							dt_atualizacao_w,
							nm_usuario_p,
							nr_prescricao_p,
							nr_seq_solucao_p,
							null,
							null,
							null,
							null,
							obter_dados_usuario_opcao(nm_usuario_p, 'C'),
							ie_alteracao_p,
							dt_atualizacao_w,
							'S',
							null,
							ds_observacao_p,
							ie_tipo_solucao_p,
							ds_justificativa_p
							);

	elsif (ie_tipo_solucao_p = 2) then

		insert into prescr_solucao_evento(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_prescricao,
							nr_seq_material,
							ie_tipo_dosagem,
							qt_dosagem,
							qt_vol_infundido,
							qt_vol_desprezado,
							cd_pessoa_fisica,
							ie_alteracao,
							dt_alteracao,
							ie_evento_valido,
							nr_seq_motivo,
							ds_observacao,
							ie_tipo_solucao,
							ds_justificativa
							)
						values (
							nr_seq_alter_w,
							dt_atualizacao_w,
							nm_usuario_p,
							dt_atualizacao_w,
							nm_usuario_p,
							nr_prescricao_p,
							nr_seq_solucao_p,
							null,
							null,
							null,
							null,
							obter_dados_usuario_opcao(nm_usuario_p, 'C'),
							ie_alteracao_p,
							dt_atualizacao_w,
							'S',
							null,
							ds_observacao_p,
							ie_tipo_solucao_p,
							ds_justificativa_p
							);

	elsif (ie_tipo_solucao_p = 3) then

		insert into prescr_solucao_evento(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_prescricao,
							nr_seq_procedimento,
							ie_tipo_dosagem,
							qt_dosagem,
							qt_vol_infundido,
							qt_vol_desprezado,
							cd_pessoa_fisica,
							ie_alteracao,
							dt_alteracao,
							ie_evento_valido,
							nr_seq_motivo,
							ds_observacao,
							ie_tipo_solucao,
							ds_justificativa
							)
						values (
							nr_seq_alter_w,
							dt_atualizacao_w,
							nm_usuario_p,
							dt_atualizacao_w,
							nm_usuario_p,
							nr_prescricao_p,
							nr_seq_solucao_p,
							null,
							null,
							null,
							null,
							obter_dados_usuario_opcao(nm_usuario_p, 'C'),
							ie_alteracao_p,
							dt_atualizacao_w,
							'S',
							null,
							ds_observacao_p,
							ie_tipo_solucao_p,
							ds_justificativa_p
							);

	elsif (ie_tipo_solucao_p = 4) then

		insert into prescr_solucao_evento(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_prescricao,
							nr_seq_nut,
							ie_tipo_dosagem,
							qt_dosagem,
							qt_vol_infundido,
							qt_vol_desprezado,
							cd_pessoa_fisica,
							ie_alteracao,
							dt_alteracao,
							ie_evento_valido,
							nr_seq_motivo,
							ds_observacao,
							ie_tipo_solucao,
							ds_justificativa
							)
						values (
							nr_seq_alter_w,
							dt_atualizacao_w,
							nm_usuario_p,
							dt_atualizacao_w,
							nm_usuario_p,
							nr_prescricao_p,
							nr_seq_solucao_p,
							null,
							null,
							null,
							null,
							obter_dados_usuario_opcao(nm_usuario_p, 'C'),
							ie_alteracao_p,
							dt_atualizacao_w,
							'S',
							null,
							ds_observacao_p,
							ie_tipo_solucao_p,
							ds_justificativa_p
							);

	elsif (ie_tipo_solucao_p in (5, 6)) then

		insert into prescr_solucao_evento(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_prescricao,
							nr_seq_nut_neo,
							ie_tipo_dosagem,
							qt_dosagem,
							qt_vol_infundido,
							qt_vol_desprezado,
							cd_pessoa_fisica,
							ie_alteracao,
							dt_alteracao,
							ie_evento_valido,
							nr_seq_motivo,
							ds_observacao,
							ie_tipo_solucao,
							ds_justificativa
							)
						values (
							nr_seq_alter_w,
							dt_atualizacao_w,
							nm_usuario_p,
							dt_atualizacao_w,
							nm_usuario_p,
							nr_prescricao_p,
							nr_seq_solucao_p,
							null,
							null,
							null,
							null,
							obter_dados_usuario_opcao(nm_usuario_p, 'C'),
							ie_alteracao_p,
							dt_atualizacao_w,
							'S',
							null,
							ds_observacao_p,
							ie_tipo_solucao_p,
							ds_justificativa_p
							);

	end if;

	exception when others then
		ds_erro_w	:= sqlerrm;
	end;

end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_alter_sol_prescr_adep (ie_tipo_solucao_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, ie_alteracao_p bigint, ds_observacao_p text, nm_usuario_p text, ds_justificativa_p text) FROM PUBLIC;

