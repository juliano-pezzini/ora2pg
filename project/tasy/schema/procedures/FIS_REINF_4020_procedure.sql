-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_reinf_4020 ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE



cd_estabelecimento_w	fis_reinf_r4020_regra.cd_estabelecimento%type;				

	c1 CURSOR FOR
		SELECT /*ideEvento*/
			a.ie_ind_retif indretif,
			a.nr_recibo nrrecibo,
			a.dt_competencia perapur,
			a.cd_ident_ambiente tpamb,
			'1' procemi,
			a.cd_ident_ambiente verproc,
			/*ideContri*/

			'1' tpInsc,
			b.cd_cgc nrInsc,
			/*ideEstab*/

			'1' tpInscEstab,
			b.cd_cgc nrinscestab,
			b.cd_estabelecimento cd_estabelecimento
		from	fis_reinf_r4020 a, estabelecimento b
		where	a.cd_estabelecimento = b.cd_estabelecimento
		and	a.nr_sequencia = nr_sequencia_p;

	r1 c1%rowtype;	
		
	
	/*BLOCO - > endExt   -   Bloco filho de   ideEvento */

	procedure p_r4020_inf_pg_ext(	nr_seq_evento_p			bigint,
					cd_cgc_p			text) is	

		nr_sequencia_w bigint;

	
BEGIN

		if OBTER_SE_PF_PJ_ESTRANGEIRO(null,cd_cgc_p) = 'S' then
	
			begin
				select	nextval('fis_reinf_r4020_inf_pg_ext_seq')
				into STRICT	nr_sequencia_w
				;
			end;

			insert into fis_reinf_r4020_inf_pg_ext(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				ds_lograd,
				nr_lograd,
				ds_complem,
				ds_bairro,
				ds_cidade,
				ds_estado,
				cd_postal,
				nr_telefone,
				cd_ind_nif,
				nr_if_benef,
				ds_frm_tribut,
				nr_seq_evento)
			values (nr_sequencia_w,
				clock_timestamp(),
				nm_usuario_p,
				obter_dados_pf_pj(null,cd_cgc_p,'R'),
				obter_dados_pf_pj(null,cd_cgc_p,'NR'),
				obter_dados_pf_pj(null,cd_cgc_p,'CO'),
				obter_dados_pf_pj(null,cd_cgc_p,'B'),
				obter_dados_pf_pj(null,cd_cgc_p,'CI'),
				obter_dados_pf_pj(null,cd_cgc_p,'UF'),
				null,
				obter_dados_pf_pj(null,cd_cgc_p,'T'),
				null,
				null,
				null,
				nr_seq_evento_p);
			
		end if;			
			
	end;

	
	/*BLOCO - > idePgto  -   Bloco filho de  GERAL */

	procedure p_r4020_dados(nr_sequencia_p		in number,
				cd_cgc_p		in varchar2,
				cd_estabelecimento_p	in number,
				dt_apuracao_p		in date) IS
				
		nr_sequencia_w number(10);
	
		c_idePgto CURSOR FOR
			SELECT /*idePgto*/
				null nr_titulo,
				b.cd_pais_reinf paisResid,
				null observ,
				/*infoPgto*/

				reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'IR', 'N', e.cd_estabelecimento) vlrBaseIR,
				reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'IR', 'N', e.cd_estabelecimento) vlrIR,
				reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'IR', 'S', e.cd_estabelecimento) vlrBaseNIR,
				reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'IR', 'S', e.cd_estabelecimento, '2') vlrNIR,
				reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'IR', 'S', e.cd_estabelecimento, '1') vlrDepIR,
				CASE WHEN reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'CSLL', 'N', e.cd_estabelecimento)=0 THEN  reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'PISCOFINSCSLL', 'N', e.cd_estabelecimento)  ELSE reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'CSLL', 'N', e.cd_estabelecimento) END   vlrBaseCSLL,
				CASE WHEN reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'CSLL', 'N', e.cd_estabelecimento)=0 THEN  reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'PISCOFINSCSLL', 'N', e.cd_estabelecimento) *0.01  ELSE reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'CSLL', 'N', e.cd_estabelecimento) END  vlrCSLL,
				CASE WHEN reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'CSLL', 'S', e.cd_estabelecimento)=0 THEN  reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'PISCOFINSCSLL', 'S', e.cd_estabelecimento)  ELSE reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'CSLL', 'S', e.cd_estabelecimento) END  vlrBaseNCSLL,
				CASE WHEN reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'CSLL', 'S', e.cd_estabelecimento, '2')=0 THEN  reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'PISCOFINSCSLL', 'S', e.cd_estabelecimento, '2')*0.01  ELSE reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'CSLL', 'S', e.cd_estabelecimento, '2') END  vlrNCSLL,
				CASE WHEN reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'CSLL', 'S', e.cd_estabelecimento, '1')=0 THEN  reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'PISCOFINSCSLL', 'S', e.cd_estabelecimento, '1')*0.01  ELSE reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'CSLL', 'S', e.cd_estabelecimento, '1') END  vlrDepCSLL,
				CASE WHEN reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'COFINS', 'N', e.cd_estabelecimento)=0 THEN  reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'PISCOFINSCSLL', 'N', e.cd_estabelecimento)  ELSE reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'COFINS', 'N', e.cd_estabelecimento) END   vlrBaseCofins,
				CASE WHEN reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'COFINS', 'N', e.cd_estabelecimento)=0 THEN  reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'PISCOFINSCSLL', 'N', e.cd_estabelecimento)*0.03  ELSE reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'COFINS', 'N', e.cd_estabelecimento) END   vlrCofins,
				CASE WHEN reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'COFINS', 'S', e.cd_estabelecimento)=0 THEN  reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'PISCOFINSCSLL', 'S', e.cd_estabelecimento)  ELSE reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'COFINS', 'S', e.cd_estabelecimento) END  vlrBaseNCofins,
				CASE WHEN reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'COFINS', 'S', e.cd_estabelecimento, '2')=0 THEN  reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'PISCOFINSCSLL', 'S', e.cd_estabelecimento, '2')*0.03  ELSE reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'COFINS', 'S', e.cd_estabelecimento, '2') END  vlrNCofins,
				CASE WHEN reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'COFINS', 'S', e.cd_estabelecimento, '1')=0 THEN  reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'PISCOFINSCSLL', 'S', e.cd_estabelecimento, '1')*0.03  ELSE reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'COFINS', 'S', e.cd_estabelecimento, '1') END  vlrDepCofins,
				CASE WHEN reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'PIS', 'N', e.cd_estabelecimento)=0 THEN  reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'PISCOFINSCSLL', 'N', e.cd_estabelecimento)  ELSE reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'PIS', 'N', e.cd_estabelecimento) END  vlrBasePP,
				CASE WHEN reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'PIS', 'N', e.cd_estabelecimento)=0 THEN  reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'PISCOFINSCSLL', 'N', e.cd_estabelecimento)*0.0065  ELSE reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'PIS', 'N', e.cd_estabelecimento) END  vlrPP,
				CASE WHEN reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'PIS', 'S', e.cd_estabelecimento)=0 THEN  reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'PISCOFINSCSLL', 'S', e.cd_estabelecimento)  ELSE reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'PIS', 'S', e.cd_estabelecimento) END  vlrBaseNPP,
				CASE WHEN reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'PIS', 'S', e.cd_estabelecimento, '2')=0 THEN  reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'PISCOFINSCSLL', 'S', e.cd_estabelecimento, '2')*0.0065  ELSE reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'PIS', 'S', e.cd_estabelecimento, '2') END  vlrNPP,
				CASE WHEN reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'PIS', 'S', e.cd_estabelecimento, '1')=0 THEN  reinf_4020_dados_trib_nota(e.nr_sequencia, 'B', 'PISCOFINSCSLL', 'S', e.cd_estabelecimento, '1')*0.0065  ELSE reinf_4020_dados_trib_nota(e.nr_sequencia, 'V', 'PIS', 'S', e.cd_estabelecimento, '1') END  vlrDepPP,			
				e.vl_mercadoria vlrTotalCred,								
				trunc(e.dt_emissao) dtFG,
				e.nr_sequencia nrSeqNota
			FROM nota_fiscal e, pessoa_juridica a
LEFT OUTER JOIN pais b ON (a.nr_seq_pais = b.nr_sequencia)
WHERE a.cd_cgc = e.cd_cgc and to_char(e.dt_emissao,'MMRRRR') = to_char(dt_apuracao_p,'MMRRRR') and e.cd_estabelecimento = cd_estabelecimento_p and (e.dt_atualizacao_estoque IS NOT NULL AND e.dt_atualizacao_estoque::text <> '') and (exists (SELECT x.cd_tributo from nota_fiscal_trib x where x.cd_tributo in (select cd_tributo from fis_reinf_r4020_regra where cd_estabelecimento = e.cd_estabelecimento AND ie_tipo_data = 1 ) and x.nr_sequencia = e.nr_sequencia)
			or 	exists (select y.cd_tributo from nota_fiscal_item_trib y where y.cd_tributo in (select cd_tributo from fis_reinf_r4020_regra where cd_estabelecimento = e.cd_estabelecimento AND ie_tipo_data = 1 ) and y.nr_sequencia = e.nr_sequencia)) and a.cd_cgc = cd_cgc_p
			 
union all

			select /*idePgto*/
				d.nr_titulo nr_titulo,
				b.cd_pais_reinf paisResid,
				null observ,
				/*infoPgto*/

				reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'IR', 'N', d.cd_estabelecimento, c.dt_baixa) vlrBaseIR,        
				reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'IR', 'N', d.cd_estabelecimento, c.dt_baixa) vlrIR,
				reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'IR', 'S', d.cd_estabelecimento, c.dt_baixa) vlrBaseNIR,
				reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'IR', 'S', d.cd_estabelecimento, c.dt_baixa, '2') vlrNIR,
				reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'IR', 'S', d.cd_estabelecimento, c.dt_baixa, '1') vlrDepIR,
				CASE WHEN reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'CSLL', 'N', d.cd_estabelecimento, c.dt_baixa)=0 THEN  reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'PISCOFINSCSLL', 'N', d.cd_estabelecimento, c.dt_baixa)  ELSE reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'CSLL', 'N', d.cd_estabelecimento, c.dt_baixa) END   vlrBaseCSLL,
				CASE WHEN reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'CSLL', 'N', d.cd_estabelecimento, c.dt_baixa)=0 THEN  reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'PISCOFINSCSLL', 'N', d.cd_estabelecimento, c.dt_baixa) *0.01  ELSE reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'CSLL', 'N', d.cd_estabelecimento, c.dt_baixa) END  vlrCSLL,
				CASE WHEN reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'CSLL', 'S', d.cd_estabelecimento, c.dt_baixa)=0 THEN  reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'PISCOFINSCSLL', 'S', d.cd_estabelecimento, c.dt_baixa)  ELSE reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'CSLL', 'S', d.cd_estabelecimento, c.dt_baixa) END  vlrBaseNCSLL,
				CASE WHEN reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'CSLL', 'S', d.cd_estabelecimento, c.dt_baixa, '2')=0 THEN  reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'PISCOFINSCSLL', 'S', d.cd_estabelecimento, c.dt_baixa, '2')*0.01  ELSE reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'CSLL', 'S', d.cd_estabelecimento, c.dt_baixa, '2') END  vlrNCSLL,
				CASE WHEN reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'CSLL', 'S', d.cd_estabelecimento, c.dt_baixa, '1')=0 THEN  reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'PISCOFINSCSLL', 'S', d.cd_estabelecimento, c.dt_baixa, '1')*0.01  ELSE reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'CSLL', 'S', d.cd_estabelecimento, c.dt_baixa, '1') END  vlrDepCSLL,
				CASE WHEN reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'COFINS', 'N', d.cd_estabelecimento, c.dt_baixa)=0 THEN  reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'PISCOFINSCSLL', 'N', d.cd_estabelecimento, c.dt_baixa)  ELSE reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'COFINS', 'N', d.cd_estabelecimento, c.dt_baixa) END  vlrBaseCofins,
				CASE WHEN reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'COFINS', 'N', d.cd_estabelecimento, c.dt_baixa)=0 THEN  reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'PISCOFINSCSLL', 'N', d.cd_estabelecimento, c.dt_baixa)*0.03  ELSE reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'COFINS', 'N', d.cd_estabelecimento, c.dt_baixa) END   vlrCofins,
				CASE WHEN reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'COFINS', 'S', d.cd_estabelecimento, c.dt_baixa)=0 THEN  reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'PISCOFINSCSLL', 'S', d.cd_estabelecimento, c.dt_baixa)  ELSE reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'COFINS', 'S', d.cd_estabelecimento, c.dt_baixa) END  vlrBaseNCofins,
				CASE WHEN reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'COFINS', 'S', d.cd_estabelecimento, c.dt_baixa, '2')=0 THEN  reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'PISCOFINSCSLL', 'S', d.cd_estabelecimento, c.dt_baixa, '2')*0.03  ELSE reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'COFINS', 'S', d.cd_estabelecimento, c.dt_baixa, '2') END  vlrNCofins,
				CASE WHEN reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'COFINS', 'S', d.cd_estabelecimento, c.dt_baixa, '1')=0 THEN  reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'PISCOFINSCSLL', 'S', d.cd_estabelecimento, c.dt_baixa, '1')*0.03  ELSE reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'COFINS', 'S', d.cd_estabelecimento, c.dt_baixa, '1') END  vlrDepCofins,
				CASE WHEN reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'PIS', 'N', d.cd_estabelecimento, c.dt_baixa)=0 THEN  reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'PISCOFINSCSLL', 'N', d.cd_estabelecimento, c.dt_baixa)  ELSE reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'PIS', 'N', d.cd_estabelecimento, c.dt_baixa) END  vlrBasePP,
				CASE WHEN reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'PIS', 'N', d.cd_estabelecimento, c.dt_baixa)=0 THEN  reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'PISCOFINSCSLL', 'N', d.cd_estabelecimento, c.dt_baixa)*0.0065  ELSE reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'PIS', 'N', d.cd_estabelecimento, c.dt_baixa) END  vlrPP,
				CASE WHEN reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'PIS', 'S', d.cd_estabelecimento, c.dt_baixa)=0 THEN  reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'PISCOFINSCSLL', 'S', d.cd_estabelecimento, c.dt_baixa)  ELSE reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'PIS', 'S', d.cd_estabelecimento, c.dt_baixa) END  vlrBaseNPP,
				CASE WHEN reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'PIS', 'S', d.cd_estabelecimento, c.dt_baixa, '2')=0 THEN  reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'PISCOFINSCSLL', 'S', d.cd_estabelecimento, c.dt_baixa, '2')*0.0065  ELSE reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'PIS', 'S', d.cd_estabelecimento, c.dt_baixa, '2') END  vlrNPP,
				CASE WHEN reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'PIS', 'S', d.cd_estabelecimento, c.dt_baixa, '1')=0 THEN  reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'B', 'PISCOFINSCSLL', 'S', d.cd_estabelecimento, c.dt_baixa, '1')*0.0065  ELSE reinf_4020_dados_imp_tit_pagar(d.nr_titulo, 'V', 'PIS', 'S', d.cd_estabelecimento, c.dt_baixa, '1') END  vlrDepPP,			
				d.vl_titulo vlrTotalCred,								
				trunc(c.dt_baixa) dtFG,
				null nrSeqNota			        
			FROM pessoa_juridica a
LEFT OUTER JOIN pais b ON (a.nr_seq_pais = b.nr_sequencia)
, titulo_pagar d
LEFT OUTER JOIN titulo_pagar_baixa c ON (d.nr_titulo = c.nr_titulo)
WHERE a.cd_cgc = d.cd_cgc   and to_char(c.dt_baixa,'MMRRRR') =  to_char(dt_apuracao_p,'MMRRRR') and d.cd_estabelecimento = cd_estabelecimento_p and c.nr_sequencia not in (select nr_seq_baixa_origem from titulo_pagar_baixa where (nr_seq_baixa_origem IS NOT NULL AND nr_seq_baixa_origem::text <> '') and nr_titulo = d.nr_titulo) and coalesce(c.nr_seq_baixa_origem::text, '') = '' and (exists (select e.cd_tributo from titulo_pagar_imposto e where e.cd_tributo in (select cd_tributo from fis_reinf_r4020_regra where cd_estabelecimento = d.cd_estabelecimento AND ie_tipo_data = 2 )AND e.nr_titulo = d.nr_titulo)) and d.ie_tipo_titulo <> 4 and a.cd_cgc = cd_cgc_p;

			
		r_idePgto c_idePgto%rowtype;
				
	BEGIN
	open c_idePgto;
	loop
	fetch c_idePgto into r_idePgto;
	EXIT WHEN NOT FOUND; /* apply on c_idePgto */
	
		begin
			select	nextval('fis_reinf_r4020_dados_seq')
			into STRICT	nr_sequencia_w
			;
		end;
	
		insert into fis_reinf_r4020_dados(	nr_sequencia,
				dt_atualizacao,
				dt_atualizacao_nrec,
				nm_usuario,
				nm_usuario_nrec,
				cd_nat_rend,
				cd_pais_resid,
				ds_observ,
				dt_fg,
				nr_insc_fci,
				nr_insc_scp,
				nr_seq_evento,
				nr_seq_nota,
				nr_titulo,
				tx_perc_scp,
				vl_base_cofins,
				vl_base_csll,
				vl_base_ir,
				vl_base_n_cofins,
				vl_base_n_csll,
				vl_base_nir,
				vl_base_n_pp,
				vl_base_pp,
				vl_bruto,
				vl_cofins,
				vl_csll,
				vl_dep_cofins,
				vl_dep_csll,
				vl_dep_ir,
				vl_dep_pp,
				vl_ir,
				vl_n_cofins,
				vl_n_csll,
				vl_nir,
				vl_n_pp,
				vl_pp)
		values (nr_sequencia_w,
			clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p,
			nm_usuario_p,			
			null, --cd_nat_rend A DEFINIR
			r_idePgto.paisResid,
			r_idePgto.observ,
			r_idePgto.dtFG,
			null,
			null,
			nr_sequencia_p,
			r_idePgto.nrSeqNota,
			r_idePgto.nr_titulo,
			null,
			r_idePgto.vlrBaseCofins,
			r_idePgto.vlrBaseCSLL,
			r_idePgto.vlrBaseIR,
			r_idePgto.vlrBaseNCofins,
			r_idePgto.vlrBaseNCSLL,
			r_idePgto.vlrBaseNIR,
			r_idePgto.vlrBaseNPP,
			r_idePgto.vlrBasePP,
			r_idePgto.vlrTotalCred,
			r_idePgto.vlrCofins,
			r_idePgto.vlrCSLL,
			r_idePgto.vlrDepCofins,
			r_idePgto.vlrDepCSLL,
			r_idePgto.vlrDepIR,
			r_idePgto.vlrDepPP,
			r_idePgto.vlrIR,
			r_idePgto.vlrNCofins,
			r_idePgto.vlrNCSLL,
			r_idePgto.vlrNIR,
			r_idePgto.vlrNPP,
			r_idePgto.vlrPP);
			
		
	end loop;
	close c_idePgto;

	END;

	procedure p_r4020_evento(	nrInsc_p 		in varchar2,
								nrinscestab_p	in varchar2) IS
				
		c_ideBenef CURSOR FOR
			SELECT /*ideBenef*/
  distinct
				a.cd_cgc cnpjBenef,
				substr(obter_nome_pj(a.cd_cgc),1,255) nmBenef,
				e.cd_estabelecimento,
				e.dt_competencia,
				'1' tpInsc,
				'1' tpInscEstab,
				coalesce(g.cd_isen_imun_reinf, 1) cdIsenImun
			FROM nota_fiscal f, fis_reinf_r4020 e, pessoa_juridica a
LEFT OUTER JOIN pessoa_juridica_inf_trib g ON (a.cd_cgc = g.cd_cgc)
WHERE a.cd_cgc = f.cd_cgc and e.nr_sequencia = nr_sequencia_p and (f.dt_atualizacao_estoque IS NOT NULL AND f.dt_atualizacao_estoque::text <> '') and (exists (SELECT a.cd_tributo from nota_fiscal_trib a where a.cd_tributo in (select cd_tributo from fis_reinf_r4020_regra where cd_estabelecimento = e.cd_estabelecimento AND ie_tipo_data = 1 ) and nr_sequencia = f.nr_sequencia)
			or 	exists (select a.cd_tributo from nota_fiscal_item_trib a where a.cd_tributo in (select cd_tributo from fis_reinf_r4020_regra where cd_estabelecimento = e.cd_estabelecimento AND ie_tipo_data = 1 ) and nr_sequencia = f.nr_sequencia)) and to_char(f.dt_emissao,'MMRRRR') = to_char(e.dt_competencia,'MMRRRR')
			
union all

			select /*ideBenef*/
  distinct
				a.cd_cgc cnpjBenef,
				substr(obter_nome_pj(a.cd_cgc),1,255) nmBenef,
				e.cd_estabelecimento,
				e.dt_competencia,
				'1' tpInsc,
				'1' tpInscEstab,
				coalesce(g.cd_isen_imun_reinf, 1) cdIsenImun
			FROM fis_reinf_r4020 e, pessoa_juridica a
LEFT OUTER JOIN pessoa_juridica_inf_trib g ON (a.cd_cgc = g.cd_cgc)
, titulo_pagar b
LEFT OUTER JOIN titulo_pagar_baixa c ON (b.nr_titulo = c.nr_titulo)
WHERE a.cd_cgc = b.cd_cgc  and b.cd_estabelecimento = e.cd_estabelecimento  and e.nr_sequencia = nr_sequencia_p and b.ie_tipo_titulo <> 4 and exists (select a.cd_tributo from titulo_pagar_imposto a where a.cd_tributo in (select cd_tributo from fis_reinf_r4020_regra where cd_estabelecimento = e.cd_estabelecimento AND ie_tipo_data = 2 ) and nr_titulo = b.nr_titulo) and to_char(c.dt_baixa,'MMRRRR') = to_char(e.dt_competencia,'MMRRRR');			
			
			
		r_ideBenef c_ideBenef%rowtype;
		nr_sequencia_w number(10);

	BEGIN
	
	open c_ideBenef;
	loop
	fetch c_ideBenef into r_ideBenef;
	EXIT WHEN NOT FOUND; /* apply on c_ideBenef */
	
		select	nextval('fis_reinf_r4020_evento_seq')
		into STRICT	nr_sequencia_w
		;
	
		insert into fis_reinf_r4020_evento(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_seq_lote,
			cd_tp_insc,
			nr_insc,
			cd_id,
			cd_tp_insc_estab,			
			nr_insc_estab,
			cd_cnpj_benef,
			ds_nm_benef,
			cd_isen_imun)
		values (nr_sequencia_w,
			clock_timestamp(),
			nm_usuario_p,
			nr_sequencia_p,
			r_idebenef.tpInsc,
			nrInsc_p,
			null,
			r_idebenef.tpInscEstab,  			
			nrinscestab_p,
			r_idebenef.cnpjbenef,
			r_idebenef.nmbenef,
			r_idebenef.cdIsenImun);
			
			/* Chamada dos registros filhos */
			
			p_r4020_dados(	nr_sequencia_w,
					r_idebenef.cnpjBenef,
					r_idebenef.cd_estabelecimento,
					r_idebenef.dt_competencia);
					
			p_r4020_inf_pg_ext(nr_sequencia_w, r_idebenef.cnpjBenef);
																			
			
	end loop;
	close c_ideBenef;
			
	END;
	


begin

open c1;
loop fetch c1 into r1;
EXIT WHEN NOT FOUND; /* apply on c1 */

	cd_estabelecimento_w := r1.cd_estabelecimento;

	p_r4020_evento(r1.nrInsc, r1.nrinscestab);
	
end loop;
close c1;

update fis_reinf_r4020 set dt_geracao = clock_timestamp() where nr_sequencia = nr_sequencia_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_reinf_4020 ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

