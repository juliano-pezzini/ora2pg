-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gc_cirurgia_beforepost_js ( cd_pessoa_fisica_p text, dt_inicio_prevista_p timestamp, cd_convenio_p bigint, cd_medico_cirurgiao_p text, cd_tipo_anestesia_p text, cd_medico_anestesista_p text, dt_inicio_real_p timestamp, dt_termino_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ds_aviso_p INOUT text, ds_abort_p INOUT text ) AS $body$
DECLARE


ie_perm_agendar_classif_w	varchar(1);
ie_consiste_conveniado_w	varchar(1);
ie_consiste_medico_w		varchar(1);
ie_consistir_tipo_anestesia_w	varchar(1);
ie_obriga_anestesia_w		varchar(1);
ds_valor_dominio_w		varchar(255);
qt_medico_convenio_w		bigint;
ds_aviso_w         	                               varchar(255);
ds_abort_w				varchar(255);


BEGIN

ie_consiste_medico_w := obter_param_usuario(900, 61, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_medico_w);
ie_consistir_tipo_anestesia_w := obter_param_usuario(900, 98, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consistir_tipo_anestesia_w);
ie_perm_agendar_classif_w := obter_se_perm_pf_classif(900, 0, cd_pessoa_fisica_p, dt_inicio_prevista_p);

select	max(ie_medico_cooperado)
into STRICT	ie_consiste_conveniado_w
from	convenio_estabelecimento
where	cd_convenio = cd_convenio_p
and	cd_estabelecimento = cd_estabelecimento_p;


if (ie_perm_agendar_classif_w = 'N') then
	begin
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(49940);
	end;
end if;

if (ie_consiste_medico_w = 'S') and
	((ie_consiste_conveniado_w = 'S') or (ie_consiste_conveniado_w = 'A'))	then
	begin

	select	count(*)
	into STRICT	qt_medico_convenio_w
	from	medico_convenio
	where	cd_convenio = cd_convenio_p
	and	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	ie_conveniado    = 'S';

	if (cd_medico_cirurgiao_p IS NOT NULL AND cd_medico_cirurgiao_p::text <> '') and (qt_medico_convenio_w = '0') then
		begin
			if (ie_consiste_conveniado_w = 'S') then
				ds_abort_w	:=  WHEB_MENSAGEM_PCK.get_texto(49944);
			else
				ds_aviso_w	:=  WHEB_MENSAGEM_PCK.get_texto(49944);
			end if;
		end;
	end if;

	end;
end if;


ie_obriga_anestesia_w := obter_se_obriga_anestesia(cd_tipo_anestesia_p);

if (ie_consistir_tipo_anestesia_w = 'S') and (ie_obriga_anestesia_w = 'S') and (coalesce(cd_medico_anestesista_p::text, '') = '') then
	begin

	ds_valor_dominio_w := obter_valor_dominio(36, cd_tipo_anestesia_p);

	CALL wheb_mensagem_pck.exibir_mensagem_abort(49951,'DS_VALOR_DOMINIO_W='||ds_valor_dominio_w);
	end;
end if;

if (coalesce(dt_inicio_real_p::text, '') = '') and (dt_termino_p IS NOT NULL AND dt_termino_p::text <> '') then
	begin
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(49950);
	end;
end if;

ds_aviso_p := ds_aviso_w;
ds_abort_p := ds_abort_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gc_cirurgia_beforepost_js ( cd_pessoa_fisica_p text, dt_inicio_prevista_p timestamp, cd_convenio_p bigint, cd_medico_cirurgiao_p text, cd_tipo_anestesia_p text, cd_medico_anestesista_p text, dt_inicio_real_p timestamp, dt_termino_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ds_aviso_p INOUT text, ds_abort_p INOUT text ) FROM PUBLIC;

