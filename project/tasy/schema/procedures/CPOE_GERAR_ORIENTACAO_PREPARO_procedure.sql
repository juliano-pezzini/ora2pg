-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_gerar_orientacao_preparo ( nr_atendimento_p cpoe_material.nr_atendimento%type, cd_pessoa_fisica_p cpoe_material.cd_pessoa_fisica%type, nm_usuario_p usuario.nm_usuario%type, ie_controle_tempo_p cpoe_material.ie_controle_tempo%type, ie_via_aplicacao_p cpoe_material.ie_via_aplicacao%type, cd_intervalo_p cpoe_material.cd_intervalo%type, nr_etapas_p cpoe_material.nr_etapas%type, ie_administracao_p cpoe_material.ie_administracao%type, /*(P,N,C)(Conforme 1 Horario,Se necessario,A criterio medico)*/
 hr_prim_horario_p cpoe_material.hr_prim_horario%type, ds_horarios_p cpoe_material.ds_horarios%type, qt_solucao_p cpoe_material.qt_solucao%type, qt_solucao_total_p cpoe_material.qt_solucao_total%type, hr_min_aplicacao_p cpoe_material.hr_min_aplicacao%type, ie_tipo_solucao_p cpoe_material.ie_tipo_solucao%type, qt_tempo_aplicacao_p cpoe_material.qt_tempo_aplicacao%type, ie_bomba_infusao_p cpoe_material.ie_bomba_infusao%type, ie_ref_calculo_p cpoe_material.ie_ref_calculo%type, ie_fator_correcao_p cpoe_material.ie_fator_correcao%type, qt_dosagem_p cpoe_material.qt_dosagem%type, qt_dosagem_diferenciada_p cpoe_material.qt_dosagem_diferenciada%type, qt_hora_fase_p cpoe_material.qt_hora_fase%type, qt_hora_fase_diferenciada_p cpoe_material.qt_hora_fase_diferenciada%type, ie_tipo_dosagem_p cpoe_material.ie_tipo_dosagem%type, qt_volume_p cpoe_material.qt_volume%type, ds_volume_diferenciado_p cpoe_material.ds_volume_diferenciado%type, cd_material_p cpoe_material.cd_material%type, qt_dose_p cpoe_material.qt_dose%type, ds_dose_diferenciada_p cpoe_material.ds_dose_diferenciada%type, cd_unidade_medida_p cpoe_material.cd_unidade_medida%type, nr_seq_mat_reconst_p cpoe_material.nr_seq_mat_reconst%type, cd_mat_recons_p cpoe_material.cd_mat_recons%type, qt_dose_recons_p cpoe_material.qt_dose_recons%type, ds_dose_diferenciada_rec_p cpoe_material.ds_dose_diferenciada_rec%type, cd_unid_med_dose_recons_p cpoe_material.cd_unid_med_dose_recons%type, nr_seq_mat_diluicao_p cpoe_material.nr_seq_mat_diluicao%type, cd_mat_dil_p cpoe_material.cd_mat_dil%type, qt_dose_dil_p cpoe_material.qt_dose_dil%type, qt_solucao_dil_p cpoe_material.qt_solucao_dil%type, ds_dose_diferenciada_dil_p cpoe_material.ds_dose_diferenciada_dil%type, cd_unid_med_dose_dil_p cpoe_material.cd_unid_med_dose_dil%type, nr_seq_mat_rediluicao_p cpoe_material.nr_seq_mat_rediluicao%type, cd_mat_red_p cpoe_material.cd_mat_red%type, qt_dose_red_p cpoe_material.qt_dose_red%type, ds_dose_diferenciada_red_p cpoe_material.ds_dose_diferenciada_red%type, cd_unid_med_dose_red_p cpoe_material.cd_unid_med_dose_red%type, qt_solucao_red_p cpoe_material.qt_solucao_red%type, cd_mat_comp1_p cpoe_material.cd_mat_comp1%type, qt_dose_comp1_p cpoe_material.qt_dose_comp1%type, ds_dose_diferenciada_comp1_p cpoe_material.ds_dose_diferenciada_comp1%type, cd_unid_med_dose_comp1_p cpoe_material.cd_unid_med_dose_comp1%type, cd_mat_comp2_p cpoe_material.cd_mat_comp2%type, qt_dose_comp2_p cpoe_material.qt_dose_comp2%type, ds_dose_diferenciada_comp2_p cpoe_material.ds_dose_diferenciada_comp2%type, cd_unid_med_dose_comp2_p cpoe_material.cd_unid_med_dose_comp2%type, cd_mat_comp3_p cpoe_material.cd_mat_comp3%type, qt_dose_comp3_p cpoe_material.qt_dose_comp3%type, ds_dose_diferenciada_comp3_p cpoe_material.ds_dose_diferenciada_comp3%type, cd_unid_med_dose_comp3_p cpoe_material.cd_unid_med_dose_comp3%type, cd_mat_comp4_p cpoe_material.cd_mat_comp4%type, qt_dose_comp4_p cpoe_material.qt_dose_comp4%type, ds_dose_diferenciada_comp4_p cpoe_material.ds_dose_diferenciada_comp4%type, cd_unid_med_dose_comp4_p cpoe_material.cd_unid_med_dose_comp4%type, cd_mat_comp5_p cpoe_material.cd_mat_comp5%type, qt_dose_comp5_p cpoe_material.qt_dose_comp5%type, ds_dose_diferenciada_comp5_p cpoe_material.ds_dose_diferenciada_comp5%type, cd_unid_med_dose_comp5_p cpoe_material.cd_unid_med_dose_comp5%type, cd_mat_comp6_p cpoe_material.cd_mat_comp6%type, qt_dose_comp6_p cpoe_material.qt_dose_comp6%type, ds_dose_diferenciada_comp6_p cpoe_material.ds_dose_diferenciada_comp6%type, cd_unid_med_dose_comp6_p cpoe_material.cd_unid_med_dose_comp6%type, cd_mat_comp7_p cpoe_material.cd_mat_comp7%type, qt_dose_comp7_p cpoe_material.qt_dose_comp7%type, ds_dose_diferenciada_comp7_p cpoe_material.ds_dose_diferenciada_comp7%type, cd_unid_med_dose_comp7_p cpoe_material.cd_unid_med_dose_comp7%type, qt_vel_inf_glicose_p cpoe_material.qt_vel_inf_glicose%type, si_rapid_infusion_p cpoe_material.si_rapid_infusion%type default null, ds_orientacao_preparo_out_p out text, qt_vel_infusao_out_p out bigint, ie_tipo_dosagem_out_p out cpoe_material.ie_tipo_dosagem%type, qt_min_aplic_med_out_p out text, nr_sequencia_p cpoe_material.nr_sequencia%type default null, cd_mat_recons1_p cpoe_material.cd_mat_recons1%type default null, qt_dose_recons1_p cpoe_material.qt_dose_recons1%type default null, cd_unid_med_dose_recons1_p cpoe_material.cd_unid_med_dose_recons1%type default null, ds_dose_diferenciada_rec1_p cpoe_material.ds_dose_diferenciada_rec1%type default null, cd_mat_recons2_p cpoe_material.cd_mat_recons2%type default null, qt_dose_recons2_p cpoe_material.qt_dose_recons2%type default null, cd_unid_med_dose_recons2_p cpoe_material.cd_unid_med_dose_recons2%type default null, ds_dose_diferenciada_rec2_p cpoe_material.ds_dose_diferenciada_rec2%type default null, cd_mat_recons3_p cpoe_material.cd_mat_recons3%type default null, qt_dose_recons3_p cpoe_material.qt_dose_recons3%type default null, cd_unid_med_dose_recons3_p cpoe_material.cd_unid_med_dose_recons3%type default null, ds_dose_diferenciada_rec3_p cpoe_material.ds_dose_diferenciada_rec3%type default null, cd_mat_recons4_p cpoe_material.cd_mat_recons4%type default null, qt_dose_recons4_p cpoe_material.qt_dose_recons4%type default null, cd_unid_med_dose_recons4_p cpoe_material.cd_unid_med_dose_recons4%type default null, ds_dose_diferenciada_rec4_p cpoe_material.ds_dose_diferenciada_rec4%type default null, cd_mat_recons5_p cpoe_material.cd_mat_recons5%type default null, qt_dose_recons5_p cpoe_material.qt_dose_recons5%type default null, cd_unid_med_dose_recons5_p cpoe_material.cd_unid_med_dose_recons5%type default null, ds_dose_diferenciada_rec5_p cpoe_material.ds_dose_diferenciada_rec5%type default null, cd_mat_recons6_p cpoe_material.cd_mat_recons6%type default null, qt_dose_recons6_p cpoe_material.qt_dose_recons6%type default null, cd_unid_med_dose_recons6_p cpoe_material.cd_unid_med_dose_recons6%type default null, ds_dose_diferenciada_rec6_p cpoe_material.ds_dose_diferenciada_rec6%type default null, cd_mat_recons7_p cpoe_material.cd_mat_recons7%type default null, qt_dose_recons7_p cpoe_material.qt_dose_recons7%type default null, cd_unid_med_dose_recons7_p cpoe_material.cd_unid_med_dose_recons7%type default null, ds_dose_diferenciada_rec7_p cpoe_material.ds_dose_diferenciada_rec7%type default null, ie_change_main_field_p text default null) is type list_varchar is varray(300) of varchar(2000) AS $body$
BEGIN
	if (ds_valor_p = 'ml') and (pkg_i18n.get_user_locale() = 'en_AU') then
		return;
	else
		return;
	end if;
end;


function getDosageFormated( qt_valor_p in number ) return;
begin
    ds_retorno_w := to_char(qt_valor_p);

    if (substr(ds_retorno_w, 1, 1) in (',', '.')) then	
        ds_retorno_w := '0' || ds_retorno_w;	
    end if;

    return;
end;

function cpoe_obter_volume_corrigido_w(cd_material_corrigido_p IN number, qt_dose_corrigido_p IN number, qt_solucao_tot_p IN number ) return;

begin
if (coalesce(cd_material_corrigido_p, 0) > 0) then
	qt_dose_correcao_w := cpoe_obter_volume_corrigido(ie_bomba_infusao_p, ie_fator_correcao_p, qt_solucao_tot_p, cd_material_corrigido_p, qt_dose_corrigido_p, ds_ml_w);
end if;
if (coalesce(qt_dose_correcao_w, 0) > 0) then
	return;
else
	return;
end if;
end;

procedure atualizar_informacoes_mat(cd_mat_p number, nr_seq_regra_p number) is
ds_reduzida_w	material.ds_reduzida%type;
begin
	select	coalesce(max(qt_volume_adic), 0),
		max(ie_diluir_inteiro),
		coalesce(max(ie_proporcao),'F') ,
		max(qt_volume_medic)
	into STRICT	qt_volume_adic_w,
		ie_diluir_inteiro_w,
		ie_proporcao_w,
		qt_volume_medic_w
	from	material_diluicao
	where	cd_diluente = cd_mat_p
	and	nr_seq_interno = nr_seq_regra_p;

	select	substr(max(ds_material),1,100) ds_material,
		substr(max(ds_reduzida),1,100) ds_reduzida
	into STRICT	ds_material_w,
		ds_reduzida_w
	from	material
	where	cd_material = cd_mat_p;

	if (ie_descr_redu_dil_w = 'S' and (ds_reduzida_w IS NOT NULL AND ds_reduzida_w::text <> '')) then
		ds_material_w := ds_reduzida_w;
	end if;

    if (coalesce(cd_mat_dil_p, 0) > 0 and (cd_unid_med_dose_dil_p IS NOT NULL AND cd_unid_med_dose_dil_p::text <> '')) then
        if (ie_separar_w = 'S') then
            ds_item_concat_w := wheb_mensagem_pck.get_texto(SEPARAR_307089);
        else
            ds_item_concat_w := wheb_mensagem_pck.get_texto(DILUIR_307092);
        end if;
    end if;
end;

procedure add_desc_mat_comp(cd_mat_desc_p number,
			qt_dose_desc_p number, 
			cd_unidade_medida_desc_p varchar2) is
begin
if (coalesce(cd_mat_desc_p, 0) > 0 and coalesce(qt_dose_desc_p, 0) > 0  and (cd_unidade_medida_desc_p IS NOT NULL AND cd_unidade_medida_desc_p::text <> '')) then
	desc_mat_comp_w.extend;
	desc_mat_comp_w(desc_mat_comp_w.count) := getDosageFormated(round(qt_dose_desc_p, nr_casas_diluicao_w)) || ' ' || get_UoM(ds_ml_w) || ' ' || Wheb_mensagem_pck.get_texto(DE_307090) || ' ' || obter_desc_material(cd_mat_desc_p);
end if;
end;

--- MD 1 Criar objeto para retornar o tempo e a mensagem de do tempo de aplicacao.
procedure gerar_min_hora_aplicacao_w(qt_dose_aplic_w number)
is
	sql_md_w                 varchar2(300);
	info_minutos_aplicacao_w cpoe_material.hr_min_aplicacao%type;
	info_ordenacao_w		 number(1);

begin
    SELECT * FROM cpoe_obter_regra_padrao_prescr(cd_material_p, cd_perfil_w, nm_usuario_p, ie_via_aplicacao_p, ie_se_necessario_w, cd_estabelecimento_w, nr_atendimento_p, cd_pessoa_fisica_p, cd_intervalo_p, qt_dose_aplic_w, cd_unidade_medida_p, 1, qt_minutos_aplicacao_w, info_ordenacao_w) INTO STRICT qt_minutos_aplicacao_w, info_ordenacao_w;
    /* 
	     Project...: Medical Device 
	     Developer.: Anderson Almeida
	*/
	
    if (info_ordenacao_w = 2 AND (qt_minutos_aplicacao_w IS NOT NULL AND qt_minutos_aplicacao_w::text <> '') and coalesce(ie_change_main_field_p, 'N') = 'S') then
   		info_minutos_aplicacao_w := null;	
	else
		info_minutos_aplicacao_w := hr_min_aplicacao_p;
	end if;

	begin
	
	    sql_md_w := 'BEGIN gerar_min_hora_aplicacao_md(:1, :2, :3, :4, :5, :6); END;';
		EXECUTE sql_md_w using in info_minutos_aplicacao_w,
										 in qt_minutos_aplicacao_w,
										 out qt_hora_aplicacao_w,
										 out qt_min_aplicacao_w,
										 out ds_min_aplic_med_w,
										 out ds_tempo_w;
	exception
	  when others then
	    qt_hora_aplicacao_w := null;
		qt_min_aplicacao_w := null;
		ds_min_aplic_med_w := null;
		ds_tempo_w := null;
	end;

end;
--- Fim MD1


--- Inicio MD2 Criar objeto para retornar o valor da dose unitaria, da dose do medicamento e o volume em ML
function getDoseUnitaria return;
	sql_dose_unit_w varchar2( 200 );
	unid_med_w      number(18, 6);
begin
    /* 
	  Project...: Medical Device 
	  Developer.: Anderson Almeida 
	*/
    unid_med_w := obter_conversao_unid_med(cd_material_p, cd_unidade_medida_p);
    begin
	  sql_dose_unit_w := 'call obter_dose_unitaria_md(:1, :2) into :qt_dose_unitaria_w';
	  EXECUTE sql_dose_unit_w using in qt_dose_p,
	                                          in unid_med_w,
											  out qt_dose_unitaria_w;
	exception
	  when others then
	    qt_dose_unitaria_w := null;
	end;

    select	max(cd_unidade_medida_consumo) cd_unidade_medida_consumo
			into STRICT	cd_unidade_medida_consumo_w
			from	material
			where	cd_material = cd_material_p;

    qt_dose_mat_w := obter_dose_convertida(cd_material_p, ceil(qt_dose_unitaria_w), cd_unidade_medida_consumo_w, cd_unidade_medida_p);

    qt_retorno_w := cpoe_obter_conversao_ml(cd_material_p, qt_dose_mat_w, cd_unidade_medida_p, ie_via_aplicacao_p, cd_pessoa_fisica_p, nr_atendimento_p);

    return;
end;
--- Fim MD2
begin

if (coalesce(cd_material_p, 0) > 0 and (coalesce(qt_dose_p, 0) > 0 or (ds_dose_diferenciada_p IS NOT NULL AND ds_dose_diferenciada_p::text <> ''))) then

    select	coalesce(max(nr_casas_diluicao),0),
		coalesce(max(ie_separar),'S'),
		coalesce(max(ie_descr_redu_dil),'N'),
		coalesce(max(ie_mostrar_estabilidade),'N'),
		coalesce(max(ie_apres_vol_reconst),'N'),
		coalesce(max(ie_mostrar_foto),'S'),
		coalesce(max(ie_administrar_ui),'N')
	into STRICT	nr_casas_diluicao_w,
		ie_separar_w,
		ie_descr_redu_dil_w,
		ie_mostrar_estabilidade_w,
		ie_apres_vol_reconst_w,
		ie_mostrar_foto_w,
		ie_administrar_ui_w
	from	parametro_medico
	where	cd_estabelecimento	= cd_estabelecimento_w;

	if (ie_administracao_p = 'N') then
		ie_se_necessario_w := 'S';
	end if;

	for hora_w in c02 loop
		horarios_w.extend;
		horarios_w(horarios_w.count) := substr(hora_w.ds_hora,1,length(hora_w.ds_hora) - 1) || ' ';
	end loop;

	for dosagem_w in c03 loop
		if (dosagem_w.qt_dosagem like ',%') then
			dosagem_w.qt_dosagem := '0'||dosagem_w.qt_dosagem;
		end if;
		dosagens_w.extend;
		dosagens_w(dosagens_w.count) := dosagem_w.qt_dosagem;
	end loop;

	for hora_fase_w in c04 loop
		horas_fase_w.extend;
		horas_fase_w(horas_fase_w.count) := hora_fase_w.qt_hora_fase;
	end loop;

	for doses_w in c01 loop

		for i in 0 .. 7 loop

			begin

				if (i = 0) then
					cd_mat_recons_w := cd_mat_recons_p;
					cd_material_w		:= cd_material_p;
					cd_unid_med_dose_recons_w := cd_unid_med_dose_recons_p;
					qt_dose_recons_w := doses_w.qt_dose_recons;
				elsif (i = 1) then
					cd_mat_recons_w := cd_mat_recons1_p;
					cd_material_w		:= cd_mat_comp1_p;
					cd_unid_med_dose_recons_w := cd_unid_med_dose_recons1_p;
					qt_dose_recons_w := doses_w.qt_dose_recons1;
				elsif (i = 2) then
					cd_mat_recons_w := cd_mat_recons2_p;
					cd_material_w		:= cd_mat_comp2_p;
					cd_unid_med_dose_recons_w := cd_unid_med_dose_recons2_p;
					qt_dose_recons_w := doses_w.qt_dose_recons2;
				elsif (i = 3) then
					cd_mat_recons_w := cd_mat_recons3_p;
					cd_material_w		:= cd_mat_comp3_p;
					cd_unid_med_dose_recons_w := cd_unid_med_dose_recons3_p;
					qt_dose_recons_w := doses_w.qt_dose_recons3;
				elsif (i = 4) then
					cd_mat_recons_w := cd_mat_recons4_p;
					cd_material_w		:= cd_mat_comp4_p;
					cd_unid_med_dose_recons_w := cd_unid_med_dose_recons4_p;
					qt_dose_recons_w := doses_w.qt_dose_recons4;
				elsif (i = 5) then
					cd_mat_recons_w := cd_mat_recons5_p;
					cd_material_w		:= cd_mat_comp5_p;
					cd_unid_med_dose_recons_w := cd_unid_med_dose_recons5_p;
					qt_dose_recons_w := doses_w.qt_dose_recons5;
				elsif (i = 6) then
					cd_mat_recons_w := cd_mat_recons6_p;
					cd_material_w		:= cd_mat_comp6_p;
					cd_unid_med_dose_recons_w := cd_unid_med_dose_recons6_p;
					qt_dose_recons_w := doses_w.qt_dose_recons6;
				elsif (i = 7) then
					cd_mat_recons_w := cd_mat_recons7_p;
					cd_material_w		:= cd_mat_comp7_p;
					cd_unid_med_dose_recons_w := cd_unid_med_dose_recons7_p;
					qt_dose_recons_w := doses_w.qt_dose_recons7;
				end if;

			exception when others then
				erro_w := substr(sqlerrm, 1, 1900);
				CALL gravar_log_tasy(17325, 'CPOE_GERAR_ORIENTACAO_PREPARO > for i in 0 .. 7 loop - Erro: '||erro_w, wheb_usuario_pck.get_nm_usuario);
			end;

			--- Inicio MD3 Criar objeto para retornar a informacao de reconstitucao de acordo com as regras.
			if (coalesce(cd_mat_recons_w, 0) > 0 and (cd_unid_med_dose_recons_w IS NOT NULL AND cd_unid_med_dose_recons_w::text <> '') and coalesce(qt_dose_recons_w, 0) > 0) then

				ds_reconstituir_w := null;

				atualizar_informacoes_mat(cd_mat_recons_w, nr_seq_mat_reconst_p);
				ds_mat_reconst_w := ds_material_w;
				atualizar_informacoes_mat(cd_material_w,0);

				select	max(cd_unidade_medida_consumo) cd_unidade_medida_consumo
				into STRICT	cd_unidade_medida_consumo_w
				from	material
				where	cd_material = cd_material_p;

				/* 
				 Project...: Medical Device 
				 Developer.: Anderson Almeida			  
				*/
				begin
				  sql_w := 'call obter_tot_inform_reconstit_md(:1, :2, :3, :4) into :ds_total_reconst_w';
				  EXECUTE sql_w using in ie_apres_vol_reconst_w,
												in qt_volume_adic_w,
												in VOLUME_TOTAL_APOS_REC_307022,
												in qt_dose_recons_w,
												out ds_total_reconst_w;
				exception
				  when others then
					ds_total_reconst_w := null;
				end;

				select	max(qt_conversao)
					into STRICT	qt_conversao_mat_w
					from	material_conversao_unidade
					where	cd_material		= cd_material_p
					and	cd_unidade_medida	= cd_unidade_medida_consumo_w;

				ds_unid_med_w := obter_desc_unid_med(cd_unidade_medida_consumo_w);

				ds_uom_w := get_UoM('ml');

				begin
				  sql_w := 'call obter_inform_reconstitucao_md(:1, :2, :3, :4, :5, :6, :7,:8) into :ds_reconstituir_w';
				  EXECUTE sql_w using in qt_conversao_mat_w,
												in ds_unid_med_w,
												in qt_dose_recons_w,
												in nr_casas_diluicao_w,
												in ds_uom_w,
												in ds_mat_reconst_w,
												in ds_total_reconst_w,
												in ds_material_w,
												out ds_reconstituir_w;

				exception
				  when others then
					ds_reconstituir_w := null;
				end;

				if (i = 0) then
					ds_orientacao_preparo_w := ds_reconstituir_w;
				else
					reconstituinte_w.extend;
					reconstituinte_w(reconstituinte_w.count) := ds_reconstituir_w;
				end if;

			end if;
			--- Fim MD3
		end loop;

		atualizar_informacoes_mat(cd_mat_dil_p, nr_seq_mat_diluicao_p);

		administrar_w.extend;

		qt_dose_mat_str_w := doses_w.qt_dose;
		qt_dose_dil_w := doses_w.qt_dose_dil;

		if (ie_controle_tempo_p = 'N') then

			--- Inicio MD4 Criar rotina para retornar a dose do material (Considerar apenas para fazer as validacoes). Criar rotina generica, tera mais validaoces abaixo.


			/* 
			 Project...: Medical Device 
			 Developer.: Anderson Almeida
			 OBS.: Nesse bloco nao precisa transformar para MD porque os objetos ja foram convertidos.
			*/
			if (qt_dose_p > 0 or coalesce(ds_dose_diferenciada_p::text, '') = '') then
				qt_dose_mat_str_w := obter_dose_convertida(cd_material_p, qt_dose_p, cd_unidade_medida_p, obter_unid_med_usua('ML'));
			end if;

			if coalesce(qt_dose_mat_str_w, 0) = 0 then
				qt_dose_mat_str_w := coalesce(cpoe_obter_conversao_ml(cd_material_p, qt_dose_p, cd_unidade_medida_p, ie_via_aplicacao_p, cd_pessoa_fisica_p, nr_atendimento_p),0);
			end if;
			--- Fim MD4
			gerar_min_hora_aplicacao_w(doses_w.qt_dose);

			if (coalesce(qt_solucao_p, 0) > 0) then
				doses_w.qt_volume := getDosageFormated(qt_solucao_p);
			elsif (coalesce(qt_solucao_red_p, 0) > 0) then
				doses_w.qt_volume := getDosageFormated(doses_w.qt_dose_red + qt_solucao_red_p);
			end if;


			if (ie_fator_correcao_p = 'S' and doses_w.qt_volume > 0) then
				doses_w.qt_dose := cpoe_obter_volume_corrigido_w(cd_material_p, doses_w.qt_dose, doses_w.qt_volume );
				doses_w.qt_dose_comp1 := cpoe_obter_volume_corrigido_w(cd_mat_comp1_p, doses_w.qt_dose_comp1, doses_w.qt_volume);
				doses_w.qt_dose_comp2 := cpoe_obter_volume_corrigido_w(cd_mat_comp2_p, doses_w.qt_dose_comp2, doses_w.qt_volume);
				doses_w.qt_dose_comp3 := cpoe_obter_volume_corrigido_w(cd_mat_comp3_p, doses_w.qt_dose_comp3, doses_w.qt_volume);
				doses_w.qt_dose_comp4 := cpoe_obter_volume_corrigido_w(cd_mat_comp4_p, doses_w.qt_dose_comp4, doses_w.qt_volume);
				doses_w.qt_dose_comp5 := cpoe_obter_volume_corrigido_w(cd_mat_comp5_p, doses_w.qt_dose_comp5, doses_w.qt_volume);
				doses_w.qt_dose_comp6 := cpoe_obter_volume_corrigido_w(cd_mat_comp6_p, doses_w.qt_dose_comp6, doses_w.qt_volume);
				doses_w.qt_dose_comp7 := cpoe_obter_volume_corrigido_w(cd_mat_comp7_p, doses_w.qt_dose_comp7, doses_w.qt_volume);
				doses_w.qt_dose_dil := cpoe_obter_volume_corrigido_w(cd_mat_dil_p, doses_w.qt_dose_dil, doses_w.qt_volume);
				doses_w.qt_dose_recons := cpoe_obter_volume_corrigido_w(cd_mat_recons_p, doses_w.qt_dose_recons, doses_w.qt_volume);
				doses_w.qt_dose_recons1 := cpoe_obter_volume_corrigido_w(cd_mat_recons1_p, doses_w.qt_dose_recons1, doses_w.qt_volume);
				doses_w.qt_dose_recons2 := cpoe_obter_volume_corrigido_w(cd_mat_recons2_p, doses_w.qt_dose_recons2, doses_w.qt_volume);
				doses_w.qt_dose_recons3 := cpoe_obter_volume_corrigido_w(cd_mat_recons3_p, doses_w.qt_dose_recons3, doses_w.qt_volume);
				doses_w.qt_dose_recons4 := cpoe_obter_volume_corrigido_w(cd_mat_recons4_p, doses_w.qt_dose_recons4, doses_w.qt_volume);
				doses_w.qt_dose_recons5 := cpoe_obter_volume_corrigido_w(cd_mat_recons5_p, doses_w.qt_dose_recons5, doses_w.qt_volume);
				doses_w.qt_dose_recons6 := cpoe_obter_volume_corrigido_w(cd_mat_recons6_p, doses_w.qt_dose_recons6, doses_w.qt_volume);
				doses_w.qt_dose_recons7 := cpoe_obter_volume_corrigido_w(cd_mat_recons7_p, doses_w.qt_dose_recons7, doses_w.qt_volume);
				doses_w.qt_dose_red := cpoe_obter_volume_corrigido_w(cd_mat_red_p, doses_w.qt_dose_red, doses_w.qt_volume);			
				qt_dose_mat_str_w := doses_w.qt_dose;
				qt_dose_dil_w := doses_w.qt_dose_dil;
			end if;

			 qt_volume_dose_vel_w := coalesce(doses_w.qt_volume, 0);
     		 if ((ds_dose_diferenciada_p IS NOT NULL AND ds_dose_diferenciada_p::text <> '') and qt_volume_dose_vel_w = 0) then
        	 	qt_volume_dose_vel_w := doses_w.qt_dose;
     		 end if;

			SELECT * FROM cpoe_gerar_vel_inf_medic(nr_atendimento_p, cd_material_p, doses_w.qt_volume, qt_min_aplicacao_w, qt_hora_aplicacao_w, ie_via_aplicacao_p, ie_se_necessario_w, cd_intervalo_p, ie_bomba_infusao_p, ie_tipo_dosagem_ww, null, cd_perfil_w, cd_estabelecimento_w, nm_usuario_p, cd_pessoa_fisica_p, ds_retorno_inf_w, qt_vel_infusao_w, ie_tipo_dosagem_w) INTO STRICT ds_retorno_inf_w, qt_vel_infusao_w, ie_tipo_dosagem_w;


			--- Inicio MD5 Criar rotina para retornar o texto de orientacao de administracao, se atentar de criar algo que possa atender a mais opcoes existentes dentro desse objeto
			if (coalesce(qt_volume_dose_vel_w, 0) > 0) then
			    /*
				 Project...: Medical Device 
				 Developer.: Anderson Almeida
				*/
				ds_uom_w := get_UoM('ml');

				desc_interv_prescr_w := obter_desc_intervalo_prescr(cd_intervalo_p);

				desc_via_w := obter_desc_via(ie_via_aplicacao_p);

				begin
				  sql_w := 'call obter_texto_orientacao_adm_md(:1, :2, :3, :4, :5, :6, :7, :8, :9) into :adm_w';
				  EXECUTE sql_w using in qt_volume_dose_vel_w,
												in nr_casas_diluicao_w,
												in ds_uom_w,
												in cd_intervalo_p,
												in desc_interv_prescr_w,
												in ie_via_aplicacao_p,
												in desc_via_w,
												in ds_tempo_w,
												in ds_retorno_inf_w,
												out adm_w;
				exception
				  when others then
				    adm_w := null;
				end;

        adm_teste_w := administrar_w(administrar_w.count);

				administrar_w(administrar_w.count) := adm_w;

			end if;			
            --- Fim MD5
		elsif (ie_controle_tempo_p = 'S' and  administrar_w.count <= dosagens_w.count and administrar_w.count <= horas_fase_w.count) then
			qt_solucao_total_w := null;

			if coalesce(doses_w.qt_dose, 0) = 0 then
				doses_w.qt_dose := coalesce(cpoe_obter_conversao_ml(cd_material_p, qt_dose_p, cd_unidade_medida_p,
								ie_via_aplicacao_p, cd_pessoa_fisica_p, nr_atendimento_p),0);
			end if;

			if (coalesce(ds_dose_diferenciada_p::text, '') = '') then
				--- Inicio MD6 Criar objeto para calcular o volume total da solucao.

				/* 
				 Project...: Medical Device 
				 Developer.: Anderson Almeida				  
				*/
				qt_ocorrencia_w := obter_ocorrencia_intervalo(cd_intervalo_p, qt_tempo_aplicacao_p, 'O');

				if ie_ref_calculo_p in ('VT', 'VI') then
					qt_solucao_total_w := qt_solucao_total_p;
                else
				begin
				  sql_w := 'call calcular_vol_tot_solucao_md(:1, :2, :3, :4, :5) into :qt_solucao_total_w';
				  EXECUTE sql_w using in ie_ref_calculo_p,
				                                in nr_etapas_p,
												in cd_intervalo_p,
												in doses_w.qt_volume,
												in qt_ocorrencia_w,
												out qt_solucao_total_w;
				exception
				  when others then
				    qt_solucao_total_w := null;
				end;
                end if;
				--- Fim MD6
				if (ie_fator_correcao_p = 'S' and doses_w.qt_volume > 0) then
					doses_w.qt_dose := cpoe_obter_volume_corrigido_w(cd_material_p, doses_w.qt_dose, qt_solucao_total_w);
					doses_w.qt_dose_comp1 := cpoe_obter_volume_corrigido_w(cd_mat_comp1_p, doses_w.qt_dose_comp1, qt_solucao_total_w);
					doses_w.qt_dose_comp2 := cpoe_obter_volume_corrigido_w(cd_mat_comp2_p, doses_w.qt_dose_comp2, qt_solucao_total_w);
					doses_w.qt_dose_comp3 := cpoe_obter_volume_corrigido_w(cd_mat_comp3_p, doses_w.qt_dose_comp3, qt_solucao_total_w);
					doses_w.qt_dose_comp4 := cpoe_obter_volume_corrigido_w(cd_mat_comp4_p, doses_w.qt_dose_comp4, qt_solucao_total_w);
					doses_w.qt_dose_comp5 := cpoe_obter_volume_corrigido_w(cd_mat_comp5_p, doses_w.qt_dose_comp5, qt_solucao_total_w);
					doses_w.qt_dose_comp6 := cpoe_obter_volume_corrigido_w(cd_mat_comp6_p, doses_w.qt_dose_comp6, qt_solucao_total_w);
					doses_w.qt_dose_comp7 := cpoe_obter_volume_corrigido_w(cd_mat_comp7_p, doses_w.qt_dose_comp7, qt_solucao_total_w);
					doses_w.qt_dose_dil := cpoe_obter_volume_corrigido_w(cd_mat_dil_p, doses_w.qt_dose_dil, qt_solucao_total_w);
					doses_w.qt_dose_recons := cpoe_obter_volume_corrigido_w(cd_mat_recons_p, doses_w.qt_dose_recons, qt_solucao_total_w);
					doses_w.qt_dose_recons1 := cpoe_obter_volume_corrigido_w(cd_mat_recons1_p, doses_w.qt_dose_recons1, qt_solucao_total_w);
					doses_w.qt_dose_recons2 := cpoe_obter_volume_corrigido_w(cd_mat_recons2_p, doses_w.qt_dose_recons2, qt_solucao_total_w);
					doses_w.qt_dose_recons3 := cpoe_obter_volume_corrigido_w(cd_mat_recons3_p, doses_w.qt_dose_recons3, qt_solucao_total_w);
					doses_w.qt_dose_recons4 := cpoe_obter_volume_corrigido_w(cd_mat_recons4_p, doses_w.qt_dose_recons4, qt_solucao_total_w);
					doses_w.qt_dose_recons5 := cpoe_obter_volume_corrigido_w(cd_mat_recons5_p, doses_w.qt_dose_recons5, qt_solucao_total_w);
					doses_w.qt_dose_recons6 := cpoe_obter_volume_corrigido_w(cd_mat_recons6_p, doses_w.qt_dose_recons6, qt_solucao_total_w);
					doses_w.qt_dose_recons7 := cpoe_obter_volume_corrigido_w(cd_mat_recons7_p, doses_w.qt_dose_recons7, qt_solucao_total_w);
					doses_w.qt_dose_red := cpoe_obter_volume_corrigido_w(cd_mat_red_p, doses_w.qt_dose_red, qt_solucao_total_w);
				end if;
			end if;

			qt_dose_mat_str_w := doses_w.qt_dose;

			administrar_w(administrar_w.count) := cpoe_obter_diluicao(ie_tipo_solucao_p,
									doses_w.qt_volume,
									qt_tempo_aplicacao_p,
									cd_intervalo_p,
									nr_etapas_p,
									dosagens_w(administrar_w.count),
									qt_solucao_total_w,
									horas_fase_w(administrar_w.count),
									null,
									ie_tipo_dosagem_ww,
									ie_ref_calculo_p,
									si_rapid_infusion_p);

		end if;

		desc_mat_comp_w := list_varchar();
		add_desc_mat_comp(cd_mat_comp1_p, doses_w.qt_dose_comp1, cd_unid_med_dose_comp1_p);
		add_desc_mat_comp(cd_mat_comp2_p, doses_w.qt_dose_comp2, cd_unid_med_dose_comp2_p);
		add_desc_mat_comp(cd_mat_comp3_p, doses_w.qt_dose_comp3, cd_unid_med_dose_comp3_p);
		add_desc_mat_comp(cd_mat_comp4_p, doses_w.qt_dose_comp4, cd_unid_med_dose_comp4_p);
		add_desc_mat_comp(cd_mat_comp5_p, doses_w.qt_dose_comp5, cd_unid_med_dose_comp5_p);
		add_desc_mat_comp(cd_mat_comp6_p, doses_w.qt_dose_comp6, cd_unid_med_dose_comp6_p);
		add_desc_mat_comp(cd_mat_comp7_p, doses_w.qt_dose_comp7, cd_unid_med_dose_comp7_p);

		ds_mat_comp_w := '';

		for i in 1 .. desc_mat_comp_w.count loop
			if (i <> desc_mat_comp_w.count) then
				ds_mat_comp_w := ds_mat_comp_w || ', ' || desc_mat_comp_w(i);
			else
				ds_mat_comp_w := ds_mat_comp_w || ' ' || wheb_mensagem_pck.get_texto(E_309413) || ' ' || desc_mat_comp_w(i);
			end if;
		end loop;
		--- Inicio MD4 Encaixar este tratamento na rotina generica ja criada anteriormente
		if (ie_proporcao_w = 'F' and qt_volume_medic_w > 0) then
			qt_dose_mat_str_w := qt_volume_medic_w;
		end if;
		--- Fim MD4
		if (coalesce(cd_mat_dil_p, 0) > 0 and (cd_unid_med_dose_dil_p IS NOT NULL AND cd_unid_med_dose_dil_p::text <> '') and coalesce(doses_w.qt_dose_dil, 0) > 0) then
			--- Inicio MD4
			if (ie_diluir_inteiro_w = 'S') then
				qt_dose_mat_str_w := getDoseUnitaria;
			end if;
			--- Fim MD4
			if (pkg_i18n.get_user_locale() = 'en_AU') then
				if (coalesce(qt_dose_mat_str_w, 0) > 0) then
					ds_conv_ml_w := getDosageFormated(round(qt_dose_mat_str_w, nr_casas_diluicao_w)) || ' '|| get_UoM('ml');
				else
					ds_conv_ml_w := getDosageFormated(qt_dose_p) || ' ' || get_UoM(cd_unidade_medida_p);
				end if;

				ds_aux_diluir_w := obter_desc_expressao(729548) || ' '|| obter_desc_material(cd_material_p) || ds_mat_comp_w;
				ds_dose_diluicao_w := getDosageFormated(round(doses_w.qt_dose_dil, nr_casas_diluicao_w)) || ' ' || get_UoM(ds_ml_w);
				--- Inicio MD7 Criar rotina para trazer a descricao concatenada dos itens. Criar rotina generica pois sera utilizado em mais locais.


				/* 
				 Project...: Medical Device 
				 Developer.: Anderson Almeida				  
				*/
				begin
				  sql_w := 'call obter_desc_concat_itens_dil_md(:1, :2, :3, :4, :5, :6) into :ds_item_concat_w';
				  EXECUTE sql_w using in pkg_i18n.get_user_locale(),
											    in ie_separar_w,
											    in ds_conv_ml_w,
											    in ds_aux_diluir_w,
											    in ds_dose_diluicao_w,
											    in ds_material_w,
											    out ds_item_concat_w;
				exception
				  when others then
				    ds_item_concat_w := null;
				end;

				--- Fim MD7
			else

				--- Inicio MD7


				/* 
				 Project...: Medical Device 
				 Developer.: Anderson Almeida				  
				*/
				
				ds_uom_w := get_UoM('ml');

				cd_uni_medida_w := get_UoM(cd_unidade_medida_p);

				ds_ml_uom_w := get_UoM(ds_ml_w);

				desc_material_w := obter_desc_material(cd_material_p);

				begin
					sql_w := 'call obter_desc_dil_dose_format_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12) into :ds_item_concat_w';
					EXECUTE sql_w using in pkg_i18n.get_user_locale(),
					                              in ds_material_w,
												  in qt_dose_mat_str_w,
												  in nr_casas_diluicao_w,
												  in ds_uom_w,
												  in qt_dose_p,
												  in cd_uni_medida_w,
												  in desc_material_w,
												  in ds_mat_comp_w,
												  in doses_w.qt_dose_dil,
												  in ds_ml_uom_w,
												  in ds_item_concat_w,
												  out ds_item_concat_w;
				exception
				  when others then
				    ds_item_concat_w := null;
				end;

				--- Fim MD7
			end if;

			separar_w.extend;
			separar_w(separar_w.count) := ds_item_concat_w || chr(13) || chr(10);
		end if;
		--- Inicio MD8 Criar objeto para retornar a informacao de rediluicao de acordo com as regras.
		if (coalesce(cd_mat_red_p, 0) > 0 and (cd_unid_med_dose_red_p IS NOT NULL AND cd_unid_med_dose_red_p::text <> '') and coalesce(doses_w.qt_dose_red, 0) > 0) then
			atualizar_informacoes_mat(cd_mat_red_p, nr_seq_mat_rediluicao_p);
			ie_diluir_inteiro_red_w := ie_diluir_inteiro_w;

			if (qt_solucao_red_p > 0) then

				/* 
				 Project...: Medical Device 
				 Developer.: Anderson Almeida				  
				*/
				qt_vol_corrigido_w := cpoe_obter_volume_corrigido(ie_bomba_infusao_p, ie_fator_correcao_p, qt_solucao_total_w, null, qt_solucao_red_p, ds_ml_w);
				begin
				  sql_w := 'call obter_descricao_solucao_md(:1, :2, :3) into :ds_solucao_str_w';
				  EXECUTE sql_w using in ie_fator_correcao_p,
				                                in qt_vol_corrigido_w,
												in qt_solucao_red_p,
												out ds_solucao_str_w;
				exception
				  when others then
				    ds_solucao_str_w := null;
				end;
			else
				ds_solucao_str_w := cpoe_obter_volume_total(cd_material_p,doses_w.qt_dose,ds_ml_w,
											cd_mat_dil_p,doses_w.qt_dose_dil,ds_ml_w,null,null,null,null,
											cd_mat_comp1_p,doses_w.qt_dose_comp1,ds_ml_w,
											cd_mat_comp2_p,doses_w.qt_dose_comp2,ds_ml_w,
											cd_mat_comp3_p,doses_w.qt_dose_comp3,ds_ml_w,
											cd_mat_comp4_p,doses_w.qt_dose_comp4,ds_ml_w,
											cd_mat_comp5_p,doses_w.qt_dose_comp5,ds_ml_w,
											cd_mat_comp6_p,doses_w.qt_dose_comp6,ds_ml_w,
											cd_mat_comp7_p,doses_w.qt_dose_comp7,ds_ml_w,nr_seq_mat_diluicao_p,
											cd_pessoa_fisica_p, nr_atendimento_p, ie_via_aplicacao_p, nr_sequencia_p);
			end if;

			/* 
			 Project...: Medical Device 
			 Developer.: Anderson Almeida			  
			*/
			ds_uom_w := get_UoM(ds_ml_w);

			begin
			  sql_w := 'call obter_informacao_rediluicao_md(:1, :2, :3, :4, :5, :6, :7) into :ds_item_concat_w';
			  EXECUTE sql_w using in doses_w.qt_dose_red,
											in nr_casas_diluicao_w,
											in ds_uom_w,
											in ds_dose_diferenciada_p,
											in ds_solucao_str_w,
											in ds_item_concat_w,
											in ds_material_w,
											out ds_item_concat_w;
			exception
			  when others then
				ds_item_concat_w := null;
			end;

			rediluente_w.extend;
			rediluente_w(rediluente_w.count) := ds_item_concat_w;
		end if;
		--- Fim MD8
	end loop;

	select	max(coalesce(b.ie_aplicar,'S')) ie_aplicar
	into STRICT	ie_aplicar_material_w
	from	material b
	where	b.cd_material = cd_material_p;

	if (reconstituinte_w.count > 0) then

		for i in 1 .. reconstituinte_w.count loop

			rec_count_w := reconstituinte_w.count;

			if (i <= reconstituinte_w.count and (reconstituinte_w(i) IS NOT NULL AND (reconstituinte_w(i))::text <> '')) then
				reconstituinte_vl_w := reconstituinte_w(i);
			end if;

			begin
				ds_orientacao_preparo_w := ds_orientacao_preparo_w || reconstituinte_vl_w;
			exception
			  when others then
			    ds_orientacao_preparo_w := null;
			end;
		end loop; 	
	end if;

    --- Inicio MD9 Criar rotina para ajuste da descricao de preparo conforme abaixo.	
   	if (separar_w.count > 0) then
		for i in 1 .. separar_w.count loop
		    /* 
			 Project...: Medical Device 
			 Developer.: Anderson Almeida			  
			*/
            adm_count_w := administrar_w.count;
            red_count_w := rediluente_w.count;
            hor_count_w := horarios_w.count;

			begin
              begin

                if ((ds_dose_diferenciada_p IS NOT NULL AND ds_dose_diferenciada_p::text <> '') and i <= horarios_w.count and (horarios_w(i) IS NOT NULL AND (horarios_w(i))::text <> '')) then
                  horario_vl_w := horarios_w(i);
                end if;

                separar_vl_w    := separar_w(i);

                if (i <= rediluente_w.count and (rediluente_w(i) IS NOT NULL AND (rediluente_w(i))::text <> '')) then
                  rediluente_vl_w := rediluente_w(i);
                end if;

				administrar_vl_w := administrar_w(i);

              exception
                  when others then
                    erro_w := SQLERRM;
                end;

              sql_w := 'call ajustar_desc_orient_preparo_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11) into :ds_orientacao_preparo_w';
			  EXECUTE sql_w using in ds_dose_diferenciada_p,
											in i,
											in hor_count_w,
											in horario_vl_w,
											in ds_orientacao_preparo_w,
											in separar_vl_w,
											in red_count_w,
											in rediluente_vl_w,
											in adm_count_w,
											in ie_aplicar_material_w,
											in administrar_vl_w,
											out ds_orientacao_preparo_w;
			exception
			  when others then
			    ds_orientacao_preparo_w := null;
			end;
		end loop;
	elsif (administrar_w.count > 0 and ie_aplicar_material_w <> 'N') then
		for i in 1 .. administrar_w.count loop
            /* 
			 Project...: Medical Device 
			 Developer.: Anderson Almeida			  
			*/
            hor_count_w  := horarios_w.count;

            horario_vl_w := horarios_w(i);

			administrar_vl_w := administrar_w(i);

            begin
			  sql_w := 'call ajustar_desc_prep_dose_dif_md(:1, :2, :3, :4, :5, :6) into :ds_orientacao_preparo_w';
			  EXECUTE sql_w using in ds_dose_diferenciada_p,
			                                in i,
											in hor_count_w,
											in horario_vl_w,
											in ds_orientacao_preparo_w,
											in administrar_vl_w,
											out ds_orientacao_preparo_w;
			exception
			  when others then
			    ds_orientacao_preparo_w := null;
			end;

		end loop;
	end if;
	--- Fim MD9


	--- Inicio MD10 Criar rotina para realizar a soma total


	/* 
	 Project...: Medical Device 
	 Developer.: Anderson Almeida	  
	*/
    begin	
	  sql_w := 'call calcular_soma_total_md(:1, :2, :3) into :qt_soma_total_w';
	  EXECUTE sql_w using in nr_casas_diluicao_w,
	                                in qt_dose_dil_w,
									in qt_dose_mat_str_w,
									out qt_soma_total_w;
	exception
	  when others then
	    qt_soma_total_w := null;
	end;

	if (ie_administrar_ui_w = 'S') then

		select	count(cd_material)
		into STRICT	cont_ww
		from	material_conversao_unidade
		where	cd_material	= cd_material_p
		and		upper(cd_unidade_medida) = upper(obter_unid_med_usua('UI'))  LIMIT 1;

		if (cont_ww > 0) then
			select max(cd_setor_atendimento)
			into STRICT cd_setor_atendimento_w
			from cpoe_material
			where nr_atendimento = nr_atendimento_p  LIMIT 1;

			select 	count(cd_material)
			into STRICT	cont_ww
			from	regra_setor_conv_unid
			where	cd_material	= cd_material_p
			and		upper(cd_unidade_medida) = upper(obter_unid_med_usua('UI'))  LIMIT 1;

			if (cont_ww > 0) then
				select	coalesce(max('S'),'N')
				into STRICT	ie_possui_regra_ui_w
				from	regra_setor_conv_unid
				where	cd_material	= cd_material_p
				and		upper(cd_unidade_medida) = upper(obter_unid_med_usua('UI'))
				and		cd_setor_atendimento = cd_setor_atendimento_w;
			else
				ie_possui_regra_ui_w := 'S';
			end if;
			--- Inicio MD11 Criar rotina para retornar a mensagem de administracao.
			if (ie_possui_regra_ui_w = 'S') then

			  /* 
			    Project...: Medical Device 
			    Developer.: Anderson Almeida			     
			  */
			  qt_dose_convert_w := obter_dose_convertida(cd_material_p, qt_soma_total_w, get_UoM(obter_unid_med_usua('ml')), obter_unid_med_usua('UI'));

			  ds_unid_med_w := obter_desc_unid_med(obter_unid_med_usua('UI'));

			  desc_interv_prescr_w := obter_desc_intervalo_prescr(cd_intervalo_p);

			  desc_via_w := obter_desc_via(ie_via_aplicacao_p);

			  begin
			    sql_w := 'call obter_retorno_mensagem_adm_md(:1, :2, :3, :4) into :ds_adm_ui_w';
				EXECUTE sql_w using in qt_dose_convert_w,
				                              in ds_unid_med_w,
											  in desc_interv_prescr_w,
											  in desc_via_w,
											  out ds_adm_ui_w;
			  exception
			    when others then
				  ds_adm_ui_w := null;
			  end;

			end if;
			--- Fim MD11
		end if;
	end if;

	if (ie_mostrar_estabilidade_w = 'S') then

		select  coalesce(max(nr_seq_estagio),0) qt_estagio_armazenamento,
			max(substr(obter_estagio_armazenamento(nr_seq_estagio),1,255)) ds_estagio_armazenamento,
			max(qt_estabilidade) qt_estabilidade,
			max(substr(obter_valor_dominio(1246,ie_tempo_estab),1,255)) ds_tempo_estabilidade
		into STRICT	qt_estagio_armazenamento_w,
			ds_estagio_armazenamento_w,
			qt_estabilidade_w,
			ds_tempo_estabilidade_w
		from 	mat_estagio_armaz b,
			material_armazenamento a
		where 	b.nr_sequencia	= a.nr_seq_estagio
		and	a.cd_material	= cd_material_p
		and	b.ie_estagio	= '1';

		if ((coalesce(cd_mat_recons_p, 0) > 0 and (cd_unid_med_dose_recons_p IS NOT NULL AND cd_unid_med_dose_recons_p::text <> '') and coalesce(qt_dose_recons_p, 0) > 0) or (coalesce(cd_mat_dil_p, 0) > 0 and (cd_unid_med_dose_dil_p IS NOT NULL AND cd_unid_med_dose_dil_p::text <> '') and (coalesce(qt_dose_dil_p, 0) > 0 or (ds_dose_diferenciada_dil_p IS NOT NULL AND ds_dose_diferenciada_dil_p::text <> ''))) or (coalesce(cd_mat_red_p, 0) > 0 and (cd_unid_med_dose_red_p IS NOT NULL AND cd_unid_med_dose_red_p::text <> '') and (coalesce(qt_dose_red_p, 0) > 0 or (ds_dose_diferenciada_red_p IS NOT NULL AND ds_dose_diferenciada_red_p::text <> '')))) then
			if (qt_estagio_armazenamento_w = 0) then
				select 	coalesce(max(nr_seq_estagio),0),
					max(substr(obter_estagio_armazenamento(nr_seq_estagio),1,255)),
					max(qt_estabilidade),
					max(substr(obter_valor_dominio(1246,ie_tempo_estab),1,255))
				into STRICT	qt_estagio_armazenamento_w,
					ds_estagio_armazenamento_w,
					qt_estabilidade_w,
					ds_tempo_estabilidade_w
				from 	mat_estagio_armaz b,
					material_armazenamento a
				where 	b.nr_sequencia	= a.nr_seq_estagio
				and	a.cd_material	= cd_material_p
				and	b.ie_estagio	= '2'
				and	coalesce(cd_estabelecimento,coalesce(cd_estabelecimento_w,0)) = coalesce(cd_estabelecimento_w,0);
			end if;
			--- Inicio MD12 Criar rotina para retornar a orientacao de preparo com o estagio de armazenamento

			/* 
			 Project...: Medical Device 
			 Developer.: Anderson Almeida			  
			*/
			begin	
			  sql_w := 'call obter_ori_prep_est_armazena_md(:1, :2, :3, :4, :5) into :ds_orientacao_preparo_w';

			  EXECUTE sql_w using in qt_estagio_armazenamento_w,
											in ds_orientacao_preparo_w,
											in qt_estabilidade_w,
											in ds_tempo_estabilidade_w,
											in ds_estagio_armazenamento_w,
											out ds_orientacao_preparo_w;
			exception
			  when others then
				ds_orientacao_preparo_w := null;
			end;

			--- Fim MD12
		end if;
	end if;

	select  coalesce(max(ie_higroscopico),'N') ie_higroscopico,
		coalesce(max(ie_fotosensivel),'N') ie_fotosensivel,
		coalesce(max(ie_termolabil),'N') ie_termolabil
	into STRICT	ie_higroscopico_w,
		ie_fotosensivel_w,
		ie_termolabil_w
	from 	material
	where 	cd_material = cd_material_p;

	--- Inicio MD13 Criar rotina para caso tenha fator de correcao retornar a orientacao de preparo com o volume do dispositivo.
	if (ie_fator_correcao_p = 'S') then
	  /* 
		 Project...: Medical Device 
		 Developer.: Anderson Almeida		  
	  */
	  ds_uom_w := get_UoM(ds_ml_w);
	  qt_vol_disp_solucao_w := obter_vol_dispositivo_solucao(ie_bomba_infusao_p);

	  begin
	    sql_w := 'call obter_orientacao_vol_disp_md(:1, :2, :3) into :ds_orientacao_preparo_w';
		EXECUTE sql_w using in ds_uom_w,
		                              in qt_vol_disp_solucao_w,
									  in ds_orientacao_preparo_w,
									  out ds_orientacao_preparo_w;
	  exception
	    when others then
		  ds_orientacao_preparo_w := null;
	  end;
	end if;

	--- Fim MD13


	--- Inicio MD14 Criar rotina para verificar e gerar as informacoes adicionais a serem adicionadas na orientacao de preparo.

	/* 
	  Project...: Medical Device 
	  Developer.: Anderson Almeida	   
	*/
	begin
		sql_w := 'call obter_info_adic_orient_prep_md(:1, :2, :3, :4, :5) into :ds_orientacao_preparo_w';
		EXECUTE sql_w using in ie_fotosensivel_w,
									  in ie_mostrar_foto_w,
									  in ie_higroscopico_w,
									  in ie_termolabil_w,
									  in ds_orientacao_preparo_w,
									  out ds_orientacao_preparo_w;
	exception
	  when others then
	    ds_orientacao_preparo_w := null;
	end;

	--- Fim MD14


	--- Inicio MD15 Criar rotina para verificar se e necessario vincular a descricao de administracao de unidade internacional


	/* 
	 Project...: Medical Device 
	 Developer.: Anderson Almeida	  
	*/
	begin
	  sql_w := 'call obter_ds_adm_unid_internac_md(:1, :2, :3) into :ds_orientacao_preparo_w';
	  EXECUTE sql_w using in ds_adm_ui_w,
	                                in ie_aplicar_material_w,
									in ds_orientacao_preparo_w,
									out ds_orientacao_preparo_w;
	exception
	  when others then
	    ds_orientacao_preparo_w := null;
	end;

	--- Fim MD15
	ds_orientacao_preparo_out_p := ds_orientacao_preparo_w;
	qt_vel_infusao_out_p := qt_vel_infusao_w;
	ie_tipo_dosagem_out_p := coalesce(lower(ie_tipo_dosagem_w), lower(ie_tipo_dosagem_ww));
	qt_min_aplic_med_out_p := ds_min_aplic_med_w;

end if;

exception when others then
	null;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_gerar_orientacao_preparo ( nr_atendimento_p cpoe_material.nr_atendimento%type, cd_pessoa_fisica_p cpoe_material.cd_pessoa_fisica%type, nm_usuario_p usuario.nm_usuario%type, ie_controle_tempo_p cpoe_material.ie_controle_tempo%type, ie_via_aplicacao_p cpoe_material.ie_via_aplicacao%type, cd_intervalo_p cpoe_material.cd_intervalo%type, nr_etapas_p cpoe_material.nr_etapas%type, ie_administracao_p cpoe_material.ie_administracao%type,  hr_prim_horario_p cpoe_material.hr_prim_horario%type, ds_horarios_p cpoe_material.ds_horarios%type, qt_solucao_p cpoe_material.qt_solucao%type, qt_solucao_total_p cpoe_material.qt_solucao_total%type, hr_min_aplicacao_p cpoe_material.hr_min_aplicacao%type, ie_tipo_solucao_p cpoe_material.ie_tipo_solucao%type, qt_tempo_aplicacao_p cpoe_material.qt_tempo_aplicacao%type, ie_bomba_infusao_p cpoe_material.ie_bomba_infusao%type, ie_ref_calculo_p cpoe_material.ie_ref_calculo%type, ie_fator_correcao_p cpoe_material.ie_fator_correcao%type, qt_dosagem_p cpoe_material.qt_dosagem%type, qt_dosagem_diferenciada_p cpoe_material.qt_dosagem_diferenciada%type, qt_hora_fase_p cpoe_material.qt_hora_fase%type, qt_hora_fase_diferenciada_p cpoe_material.qt_hora_fase_diferenciada%type, ie_tipo_dosagem_p cpoe_material.ie_tipo_dosagem%type, qt_volume_p cpoe_material.qt_volume%type, ds_volume_diferenciado_p cpoe_material.ds_volume_diferenciado%type, cd_material_p cpoe_material.cd_material%type, qt_dose_p cpoe_material.qt_dose%type, ds_dose_diferenciada_p cpoe_material.ds_dose_diferenciada%type, cd_unidade_medida_p cpoe_material.cd_unidade_medida%type, nr_seq_mat_reconst_p cpoe_material.nr_seq_mat_reconst%type, cd_mat_recons_p cpoe_material.cd_mat_recons%type, qt_dose_recons_p cpoe_material.qt_dose_recons%type, ds_dose_diferenciada_rec_p cpoe_material.ds_dose_diferenciada_rec%type, cd_unid_med_dose_recons_p cpoe_material.cd_unid_med_dose_recons%type, nr_seq_mat_diluicao_p cpoe_material.nr_seq_mat_diluicao%type, cd_mat_dil_p cpoe_material.cd_mat_dil%type, qt_dose_dil_p cpoe_material.qt_dose_dil%type, qt_solucao_dil_p cpoe_material.qt_solucao_dil%type, ds_dose_diferenciada_dil_p cpoe_material.ds_dose_diferenciada_dil%type, cd_unid_med_dose_dil_p cpoe_material.cd_unid_med_dose_dil%type, nr_seq_mat_rediluicao_p cpoe_material.nr_seq_mat_rediluicao%type, cd_mat_red_p cpoe_material.cd_mat_red%type, qt_dose_red_p cpoe_material.qt_dose_red%type, ds_dose_diferenciada_red_p cpoe_material.ds_dose_diferenciada_red%type, cd_unid_med_dose_red_p cpoe_material.cd_unid_med_dose_red%type, qt_solucao_red_p cpoe_material.qt_solucao_red%type, cd_mat_comp1_p cpoe_material.cd_mat_comp1%type, qt_dose_comp1_p cpoe_material.qt_dose_comp1%type, ds_dose_diferenciada_comp1_p cpoe_material.ds_dose_diferenciada_comp1%type, cd_unid_med_dose_comp1_p cpoe_material.cd_unid_med_dose_comp1%type, cd_mat_comp2_p cpoe_material.cd_mat_comp2%type, qt_dose_comp2_p cpoe_material.qt_dose_comp2%type, ds_dose_diferenciada_comp2_p cpoe_material.ds_dose_diferenciada_comp2%type, cd_unid_med_dose_comp2_p cpoe_material.cd_unid_med_dose_comp2%type, cd_mat_comp3_p cpoe_material.cd_mat_comp3%type, qt_dose_comp3_p cpoe_material.qt_dose_comp3%type, ds_dose_diferenciada_comp3_p cpoe_material.ds_dose_diferenciada_comp3%type, cd_unid_med_dose_comp3_p cpoe_material.cd_unid_med_dose_comp3%type, cd_mat_comp4_p cpoe_material.cd_mat_comp4%type, qt_dose_comp4_p cpoe_material.qt_dose_comp4%type, ds_dose_diferenciada_comp4_p cpoe_material.ds_dose_diferenciada_comp4%type, cd_unid_med_dose_comp4_p cpoe_material.cd_unid_med_dose_comp4%type, cd_mat_comp5_p cpoe_material.cd_mat_comp5%type, qt_dose_comp5_p cpoe_material.qt_dose_comp5%type, ds_dose_diferenciada_comp5_p cpoe_material.ds_dose_diferenciada_comp5%type, cd_unid_med_dose_comp5_p cpoe_material.cd_unid_med_dose_comp5%type, cd_mat_comp6_p cpoe_material.cd_mat_comp6%type, qt_dose_comp6_p cpoe_material.qt_dose_comp6%type, ds_dose_diferenciada_comp6_p cpoe_material.ds_dose_diferenciada_comp6%type, cd_unid_med_dose_comp6_p cpoe_material.cd_unid_med_dose_comp6%type, cd_mat_comp7_p cpoe_material.cd_mat_comp7%type, qt_dose_comp7_p cpoe_material.qt_dose_comp7%type, ds_dose_diferenciada_comp7_p cpoe_material.ds_dose_diferenciada_comp7%type, cd_unid_med_dose_comp7_p cpoe_material.cd_unid_med_dose_comp7%type, qt_vel_inf_glicose_p cpoe_material.qt_vel_inf_glicose%type, si_rapid_infusion_p cpoe_material.si_rapid_infusion%type default null, ds_orientacao_preparo_out_p out text, qt_vel_infusao_out_p out bigint, ie_tipo_dosagem_out_p out cpoe_material.ie_tipo_dosagem%type, qt_min_aplic_med_out_p out text, nr_sequencia_p cpoe_material.nr_sequencia%type default null, cd_mat_recons1_p cpoe_material.cd_mat_recons1%type default null, qt_dose_recons1_p cpoe_material.qt_dose_recons1%type default null, cd_unid_med_dose_recons1_p cpoe_material.cd_unid_med_dose_recons1%type default null, ds_dose_diferenciada_rec1_p cpoe_material.ds_dose_diferenciada_rec1%type default null, cd_mat_recons2_p cpoe_material.cd_mat_recons2%type default null, qt_dose_recons2_p cpoe_material.qt_dose_recons2%type default null, cd_unid_med_dose_recons2_p cpoe_material.cd_unid_med_dose_recons2%type default null, ds_dose_diferenciada_rec2_p cpoe_material.ds_dose_diferenciada_rec2%type default null, cd_mat_recons3_p cpoe_material.cd_mat_recons3%type default null, qt_dose_recons3_p cpoe_material.qt_dose_recons3%type default null, cd_unid_med_dose_recons3_p cpoe_material.cd_unid_med_dose_recons3%type default null, ds_dose_diferenciada_rec3_p cpoe_material.ds_dose_diferenciada_rec3%type default null, cd_mat_recons4_p cpoe_material.cd_mat_recons4%type default null, qt_dose_recons4_p cpoe_material.qt_dose_recons4%type default null, cd_unid_med_dose_recons4_p cpoe_material.cd_unid_med_dose_recons4%type default null, ds_dose_diferenciada_rec4_p cpoe_material.ds_dose_diferenciada_rec4%type default null, cd_mat_recons5_p cpoe_material.cd_mat_recons5%type default null, qt_dose_recons5_p cpoe_material.qt_dose_recons5%type default null, cd_unid_med_dose_recons5_p cpoe_material.cd_unid_med_dose_recons5%type default null, ds_dose_diferenciada_rec5_p cpoe_material.ds_dose_diferenciada_rec5%type default null, cd_mat_recons6_p cpoe_material.cd_mat_recons6%type default null, qt_dose_recons6_p cpoe_material.qt_dose_recons6%type default null, cd_unid_med_dose_recons6_p cpoe_material.cd_unid_med_dose_recons6%type default null, ds_dose_diferenciada_rec6_p cpoe_material.ds_dose_diferenciada_rec6%type default null, cd_mat_recons7_p cpoe_material.cd_mat_recons7%type default null, qt_dose_recons7_p cpoe_material.qt_dose_recons7%type default null, cd_unid_med_dose_recons7_p cpoe_material.cd_unid_med_dose_recons7%type default null, ds_dose_diferenciada_rec7_p cpoe_material.ds_dose_diferenciada_rec7%type default null, ie_change_main_field_p text default null) is type list_varchar is varray(300) of varchar(2000) FROM PUBLIC;

