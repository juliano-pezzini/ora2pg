-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_tele_monitors ( nr_seq_indicator_p bigint, cd_establishment_p bigint, nm_user_p text) AS $body$
DECLARE


pfcs_panel_detail_seq_w			pfcs_panel_detail.nr_sequencia%type;
nr_seq_panel_w					pfcs_panel_detail.nr_seq_panel%type;
qt_total_in_use_w				pfcs_panel.vl_indicator%type := 0;
qt_time_alarms_rule_w			pfcs_telemetry_config.qt_time_alarm_trend_rule%type;
ds_bed_location_w				pfcs_detail_bed.ds_location%type;
qt_total_monitors_w				pfcs_panel.vl_indicator_aux%type := 0;
qt_usable_monitors_w			pfcs_panel.vl_indicator_help%type := 0;
qt_monitors_available_w			bigint := 0;
qt_monitors_broken_lost_w		bigint := 0;
qt_monitors_in_use_w			bigint := 0;

c01_all_monitors CURSOR FOR
	SELECT	dev.nr_sequencia,
			coalesce(dev.si_status, 'INACTIVE') si_status
	  from	pfcs_device dev,
			estabelecimento estab
	 where	dev.ds_device_type = 'Monitor'
	   and	dev.cd_estabelecimento = estab.cd_estabelecimento
	   and	estab.cd_estabelecimento = cd_establishment_p;

/* Cursor to read from pfcs integration tables */

c02_monitor_details CURSOR(nr_seq_device_p bigint) FOR
	SELECT 	enc.id_encounter nr_encounter,
			enc.nr_sequencia nr_seq_encounter,
			pat.patient_id id_patient,
			pfcs_get_human_name(enc.nr_seq_patient, 'Patient') nm_patient,
			pfcs_get_monitor_entrance(dev.nr_sequencia) dt_monitor_entrance,
			enc.ds_reason ds_diagnosis,
			pat.birthdate dt_birthdate,
			trunc(months_between(coalesce(pat.deceased_date, clock_timestamp()), pat.birthdate)/12) qt_idade_paciente,
			pat.gender ds_gender,
			enc.ds_classification ds_classification,
			enc.period_start dt_entrance,
			pfcs_get_human_name(pfcs_get_practitioner_seq(enc.nr_sequencia, '405279007'), 'Practitioner') ds_attending_physician,
			pfcs_get_code_status_tl(pat.nr_sequencia,'S')  ds_dnr_status,
			sa.ds_setor_atendimento,
			uni.cd_unidade_basica,
			uni.cd_unidade_compl,
			dev.id_device cd_device,
			dev.ds_device_name ds_device,
			(pfcs_get_alarms_trends(pat.nr_sequencia, enc.nr_sequencia,'YELLOW'))::numeric  nr_yellow_alarm_count,
			(pfcs_get_alarms_trends(pat.nr_sequencia, enc.nr_sequencia,'RED'))::numeric  nr_red_alarm_count,
			pfcs_get_battery_status(pat.nr_sequencia) ds_battery_status,
			pfcs_get_discharge_status(enc.nr_sequencia, sa.cd_estabelecimento_base) ie_discharge_status,
			pfcs_get_alarms_trends(pat.nr_sequencia, enc.nr_sequencia, 'TREND') ds_alarms_trends,
			pfcs_get_edi_score(enc.nr_sequencia) as nr_edi_score,
			pfcs_obs_contributor_pck.get_edi_vital_warnings(enc.nr_sequencia) ds_edi_vitals_warn,
			pfcs_obs_contributor_pck.get_edi_contributors(enc.nr_sequencia) ds_edi_contrb,
			pfcs_get_frequent_flyer(enc.nr_sequencia) ie_frequent_flyer,
			pfcs_obs_contributor_pck.get_freqflyer_visits(enc.nr_sequencia) ds_recur_pat_adm_data,
			pfcs_obs_contributor_pck.get_freqflyer_comorbidities(enc.nr_sequencia) ds_recur_pat_comorbd,
			pfcs_obs_contributor_pck.get_freqflyer_visit_reason(enc.nr_sequencia) ds_recur_pat_reasons,
			coalesce(pfcs_get_checklist(enc.nr_sequencia, pat.nr_sequencia, 'MPL'), null) ds_care_status,
			coalesce(pfcs_get_checklist(enc.nr_sequencia, pat.nr_sequencia, 'TOOLTIP'),null) ds_checklist,
			pfcs_get_lace_plus(enc.nr_sequencia, enc.nr_seq_organization) ds_readmission_risk,
			pfcs_obs_contributor_pck.get_laceplus(enc.nr_sequencia) ds_readm_risk_contrb
	  from 	pfcs_service_request sr,
			pfcs_encounter enc,
			pfcs_encounter_location el,
			pfcs_patient pat,
			pfcs_device dev,			
			unidade_atendimento uni,
			setor_atendimento sa
	 where	((upper(sr.si_status) = 'COMPLETED' and upper(sr.cd_service) = 'E0404') or (upper(sr.si_status) = 'ACTIVE' and upper(sr.cd_service) = 'E0403'))
	   and 	sr.nr_seq_encounter = enc.nr_sequencia
	   and 	enc.nr_seq_patient = pat.nr_sequencia
	   and 	pat.ie_active = '1'
	   and 	dev.nr_seq_patient = pat.nr_sequencia
	   and	dev.nr_sequencia = nr_seq_device_p
	   and	el.nr_seq_encounter = enc.nr_sequencia
	   and	uni.nr_seq_location = el.nr_seq_location
	   and	uni.ie_situacao = 'A'
	   and	uni.cd_setor_atendimento = sa.cd_setor_atendimento
	   and 	sa.ie_situacao = 'A'
	   and 	sa.cd_estabelecimento_base = cd_establishment_p;
BEGIN
	-- Get hours configurable from telemetry settings
	select	coalesce(max(qt_time_alarm_trend_rule),12)
	  into STRICT	qt_time_alarms_rule_w
	  from	pfcs_telemetry_config;

	for c01_monitors in c01_all_monitors loop
		if (c01_monitors.si_status = 'ACTIVE') then -- Indicator 46
			for c02 in c02_monitor_details(c01_monitors.nr_sequencia) loop
				qt_monitors_in_use_w := qt_monitors_in_use_w + 1;

				select	nextval('pfcs_panel_detail_seq')
				  into STRICT	pfcs_panel_detail_seq_w
				;

				ds_bed_location_w := '';
				if (c02.ds_setor_atendimento IS NOT NULL AND c02.ds_setor_atendimento::text <> '') then
					ds_bed_location_w := c02.ds_setor_atendimento || '-';
				end if;
				ds_bed_location_w := ds_bed_location_w || c02.cd_unidade_basica || '-' || c02.cd_unidade_compl;

				CALL pfcs_pck_v2.pfcs_insert_details(
					nr_seq_indicator_p => nr_seq_indicator_p,
					nr_seq_operational_level_p	=> cd_establishment_p,
					nm_usuario_p => nm_user_p,
					nr_panel_detail_seq_p => pfcs_panel_detail_seq_w,
					nr_encounter_p => c02.nr_encounter,
					nr_seq_encounter_p => c02.nr_seq_encounter,
					id_patient_p => c02.id_patient,
					nm_patient_p => c02.nm_patient,
					dt_birthdate_p => c02.dt_birthdate,
					ds_primary_diagnosis_p => c02.ds_diagnosis,
					ds_gender_p => c02.ds_gender,
					ds_dnr_status_p => c02.ds_dnr_status,
					dt_monitor_entrance_p => c02.dt_monitor_entrance,
					ds_classification_p => c02.ds_classification,
					dt_entrance_p => c02.dt_entrance,
					ds_service_line_p => c02.ds_attending_physician,
					cd_department_p => c02.ds_setor_atendimento,
					ds_department_p => c02.ds_setor_atendimento,
					ds_bed_location_p => ds_bed_location_w,
					qt_red_alarms_p => c02.nr_red_alarm_count,
					qt_yellow_alarms_p => c02.nr_yellow_alarm_count,
					cd_equipamento_p => c02.cd_device,
					ds_device_p => c02.ds_device,
					ds_battery_status_p => c02.ds_battery_status,
					ie_discharge_status_p =>  c02.ie_discharge_status,
					ds_age_range_p => c02.qt_idade_paciente,
					ds_alarms_trends_p => c02.ds_alarms_trends,
					nr_edi_score_p =>  c02.nr_edi_score,
					ds_edi_vitals_warn_p =>  c02.ds_edi_vitals_warn,
					ds_edi_contrb_p =>  c02.ds_edi_contrb,
					ie_frequent_flyer_p => c02.ie_frequent_flyer,
					ds_care_status_p => c02.ds_care_status,
					ds_readmission_risk_p => c02.ds_readmission_risk,
					ds_checklist_p => c02.ds_checklist,
					ds_readm_risk_contrb_p => c02.ds_readm_risk_contrb,
					ds_rec_pat_adm_data_p =>  c02.ds_recur_pat_adm_data,
					ds_rec_pat_comorbd_p =>  c02.ds_recur_pat_comorbd,
					ds_rec_pat_reasons_p =>  c02.ds_recur_pat_reasons);
			end loop;
		elsif (c01_monitors.si_status = 'INACTIVE') then -- Indicator 48
			qt_monitors_available_w := qt_monitors_available_w + 1;
		elsif (c01_monitors.si_status = 'UNKNOWN') then -- Indicator 135
			qt_monitors_broken_lost_w := qt_monitors_broken_lost_w + 1;
		end if;
	end loop;

	qt_total_monitors_w := qt_monitors_broken_lost_w + qt_monitors_available_w + qt_monitors_in_use_w;
	qt_usable_monitors_w := qt_monitors_available_w + qt_monitors_in_use_w;

	/** Monitors in Use - Update the indicator 46 **/

	 := pfcs_pck_v2.pfcs_generate_results(
			vl_indicator_p => qt_monitors_in_use_w, ds_reference_value_p => '', vl_indicator_aux_p => qt_total_monitors_w, vl_indicator_help_p => qt_usable_monitors_w, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => cd_establishment_p, nm_usuario_p => nm_user_p, nr_seq_panel_p => nr_seq_panel_w);
			
         := pfcs_pck_v2.pfcs_generate_results(
			vl_indicator_p => qt_total_monitors_w, vl_indicator_help_p => qt_monitors_in_use_w, nr_seq_indicator_p => 457, nr_seq_operational_level_p => cd_establishment_p, nm_usuario_p => nm_user_p, nr_seq_panel_p => nr_seq_panel_w);			

	CALL pfcs_pck_v2.pfcs_update_detail(
			nr_seq_indicator_p => nr_seq_indicator_p,
			nr_seq_panel_p => nr_seq_panel_w,
			nr_seq_operational_level_p => cd_establishment_p,
			nm_usuario_p => nm_user_p);

	CALL pfcs_pck_v2.pfcs_activate_records(
			nr_seq_indicator_p => nr_seq_indicator_p,
			nr_seq_operational_level_p => cd_establishment_p,
			nm_usuario_p => nm_user_p);
			
	CALL pfcs_pck_v2.pfcs_activate_records(
			nr_seq_indicator_p => 457,
			nr_seq_operational_level_p => cd_establishment_p,
			nm_usuario_p => nm_user_p);			

	/** Available Monitors - Update the indicator 48 **/

	 := pfcs_pck_v2.pfcs_generate_results(
			vl_indicator_p => qt_monitors_available_w, ds_reference_value_p => '', vl_indicator_aux_p => qt_total_monitors_w, nr_seq_indicator_p => 48, nr_seq_operational_level_p => cd_establishment_p, nm_usuario_p => nm_user_p, nr_seq_panel_p => nr_seq_panel_w);
			
         := pfcs_pck_v2.pfcs_generate_results(
			vl_indicator_p => qt_total_monitors_w, vl_indicator_help_p => qt_monitors_available_w, nr_seq_indicator_p => 456, nr_seq_operational_level_p => cd_establishment_p, nm_usuario_p => nm_user_p, nr_seq_panel_p => nr_seq_panel_w);			

	CALL pfcs_pck_v2.pfcs_update_detail(
			nr_seq_indicator_p => 48,
			nr_seq_panel_p => nr_seq_panel_w,
			nr_seq_operational_level_p => cd_establishment_p,
			nm_usuario_p => nm_user_p);

	CALL pfcs_pck_v2.pfcs_activate_records(
			nr_seq_indicator_p => 48,
			nr_seq_operational_level_p => cd_establishment_p,
			nm_usuario_p => nm_user_p);
			
        CALL pfcs_pck_v2.pfcs_activate_records(
			nr_seq_indicator_p => 456,
			nr_seq_operational_level_p => cd_establishment_p,
			nm_usuario_p => nm_user_p);			

	/** Broken or Lost Monitors - Update the indicator 135 **/

	 := pfcs_pck_v2.pfcs_generate_results(
			vl_indicator_p => qt_monitors_broken_lost_w, vl_indicator_aux_p => qt_total_monitors_w, ds_reference_value_p => '', nr_seq_indicator_p => 135, nr_seq_operational_level_p => cd_establishment_p, nm_usuario_p => nm_user_p, nr_seq_panel_p => nr_seq_panel_w);
			
         := pfcs_pck_v2.pfcs_generate_results(
			vl_indicator_p => qt_total_monitors_w, vl_indicator_help_p => qt_monitors_broken_lost_w, nr_seq_indicator_p => 458, nr_seq_operational_level_p => cd_establishment_p, nm_usuario_p => nm_user_p, nr_seq_panel_p => nr_seq_panel_w);			

	CALL pfcs_pck_v2.pfcs_update_detail(
			nr_seq_indicator_p => 135,
			nr_seq_panel_p => nr_seq_panel_w,
			nr_seq_operational_level_p => cd_establishment_p,
			nm_usuario_p => nm_user_p);
	commit;

	CALL pfcs_pck_v2.pfcs_activate_records(
			nr_seq_indicator_p => 135,
			nr_seq_operational_level_p => cd_establishment_p,
			nm_usuario_p => nm_user_p);
			
        CALL pfcs_pck_v2.pfcs_activate_records(
			nr_seq_indicator_p => 458,
			nr_seq_operational_level_p => cd_establishment_p,
			nm_usuario_p => nm_user_p);			

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_tele_monitors ( nr_seq_indicator_p bigint, cd_establishment_p bigint, nm_user_p text) FROM PUBLIC;

