-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE schematic4test_configvalserv (NR_SEQUENCIA_P bigint, NR_SERVICE_P bigint) AS $body$
DECLARE

DS_VALUE_W varchar(1000);
NR_SEQ_VARIABLE_W bigint;
NR_SEQ_STEP_W bigint;
NM_VARIABLE_W varchar(255);
NM_USUARIO_NREC_W varchar(15);
DS_VALUE_W2 varchar(1000);
QTD_W bigint;
DS_VERSION_W varchar(255);

--loop values
C01 CURSOR FOR
    SELECT val.DS_VALUE DS_VALUE, val.NR_SEQ_VARIABLE NR_SEQ_VARIABLE, val.NR_SEQ_STEP NR_SEQ_STEP, var.NM_VARIABLE NM_VARIABLE, var.NM_USUARIO_NREC, val.DS_VERSION
       INTO STRICT DS_VALUE_W, NR_SEQ_VARIABLE_W, NR_SEQ_STEP_W, NM_VARIABLE_W, NM_USUARIO_NREC_W, DS_VERSION_W
	FROM SCHEM_TEST_VARIABLE var
	INNER JOIN SCHEM_TEST_VALUES val ON (var.NR_SEQUENCIA = val.NR_SEQ_VARIABLE) 
	INNER JOIN SCHEM_TEST_STEP ste ON (val.NR_SEQ_STEP = ste.NR_SEQUENCIA) 
	INNER JOIN SCHEM_TEST_SCRIPT scr ON (ste.NR_SEQ_SCRIPT = scr.NR_SEQUENCIA) 
	WHERE scr.NR_SEQUENCIA =  NR_SEQUENCIA_P
    AND NOT val.NR_SEQ_SERVICE = NR_SERVICE_P
    GROUP BY val.DS_VALUE, val.NR_SEQ_VARIABLE, val.NR_SEQ_STEP, var.NM_VARIABLE, var.NM_USUARIO_NREC 
	ORDER BY val.NR_SEQ_STEP, var.NM_VARIABLE;


BEGIN
    --procedure that insert values if service changed
    UPDATE SCHEM_TEST_VALUES SET NR_SEQ_SERVICE = NR_SERVICE_P, DT_ATUALIZACAO = clock_timestamp()
	WHERE NR_SEQUENCIA in (SELECT val.NR_SEQUENCIA FROM SCHEM_TEST_SCRIPT scr
	INNER JOIN SCHEM_TEST_STEP ste ON (ste.NR_SEQ_SCRIPT = scr.NR_SEQUENCIA) 
	INNER JOIN SCHEM_TEST_VALUES val ON (val.NR_SEQ_STEP = ste.NR_SEQUENCIA)
	WHERE scr.NR_SEQUENCIA = NR_SEQUENCIA_P AND coalesce(val.NR_SEQ_SERVICE::text, '') = '');
    COMMIT;

	SELECT COUNT(scr.NR_SEQUENCIA) NR_SEQUENCIA
      INTO STRICT QTD_W
    FROM SCHEM_TEST_SCRIPT scr 
		INNER JOIN SCHEM_TEST_STEP ste ON (ste.NR_SEQ_SCRIPT = scr.NR_SEQUENCIA)
		INNER JOIN SCHEM_TEST_VALUES val ON (val.NR_SEQ_STEP = ste.NR_SEQUENCIA)
		WHERE scr.NR_SEQUENCIA = NR_SEQUENCIA_P
    AND val.NR_SEQ_SERVICE = NR_SERVICE_P;

    IF (QTD_W = 0) THEN				
      OPEN C01;
      LOOP
      FETCH C01 INTO	
          DS_VALUE_W,
          NR_SEQ_VARIABLE_W, 
          NR_SEQ_STEP_W, 
          NM_VARIABLE_W,
          NM_USUARIO_NREC_W,
		  DS_VERSION_W;
      EXIT WHEN NOT FOUND; /* apply on C01 */
      BEGIN
        DS_VALUE_W2 := replace(replace(replace(replace(replace(DS_VALUE_W,chr(38)||'amp;','&'),chr(38)||'lt;','<'),chr(38)||'gt;','>'),chr(38)||'apos;', chr(39)),chr(38)||'quot;',chr(34));


		INSERT INTO SCHEM_TEST_VALUES(nr_sequencia, ds_value, nr_seq_variable, nr_seq_step, nr_seq_service, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ds_version) 
              VALUES (nextval('schem_test_values_seq'), DS_VALUE_W2, NR_SEQ_VARIABLE_W, NR_SEQ_STEP_W, NR_SERVICE_P, clock_timestamp(), 'Auto Robot', clock_timestamp(), 'Auto Robot', DS_VERSION_W);
         COMMIT;
      END;
      END LOOP;
      CLOSE C01;
    END IF;
  EXCEPTION
  WHEN no_data_found THEN
    RAISE NOTICE 'Erro: Data not found';
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE schematic4test_configvalserv (NR_SEQUENCIA_P bigint, NR_SERVICE_P bigint) FROM PUBLIC;

