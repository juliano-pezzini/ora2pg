-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_acesso_pep_param ( nr_atendimento_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_bloqueia_p INOUT text, ds_consistencia_p INOUT text, cd_pessoa_fisica_p text default null) AS $body$
DECLARE

 
ie_forma_consistir_w		varchar(15);
cd_setor_pac_w			bigint;
cd_setor_usuario_w		bigint;
ie_setor_pac_lib_w		varchar(1);
cd_convenio_w			bigint;
ie_registro_pep_w		varchar(10);
ie_param_inicio_enf_w		varchar(10);
ie_inicio_enfer_w		varchar(10);
dt_alta_w			timestamp;
ie_tipo_atendimento_w		bigint;
cd_classif_pf_w			varchar(50);
qt_reg_w			bigint;
nr_seq_classif_w		bigint;
ds_classif_w			varchar(255);
qt_min_acesso_setor_w	bigint;
qt_minuto_w				bigint;
dt_saida_unid_w			timestamp;
				

BEGIN 
ie_forma_consistir_w := obter_param_usuario(281, 347, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_forma_consistir_w);
cd_classif_pf_w := obter_param_usuario(281, 1239, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_classif_pf_w);
qt_min_acesso_setor_w := obter_param_usuario(281, 1393, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, qt_min_acesso_setor_w);
/* 
if	(nr_atendimento_p	> 0) then 
	begin 
	cd_convenio_w	:= obter_convenio_atendimento(nr_atendimento_p); 
	exception 
	when others then 
		cd_convenio_w	:= 0; 
	end; 
	 
	if	(cd_convenio_w	> 0) then 
		select	nvl(max(IE_REGISTRO_PEP),'S') 
		into	ie_registro_pep_w 
		from	convenio_estabelecimento 
		where	cd_convenio	= cd_convenio_w 
		and	cd_estabelecimento = cd_estabelecimento_p; 
		 
		if	(ie_registro_pep_w	= 'N') then 
			ds_consistencia_p	:= 'O convênio '||obter_nome_convenio(cd_convenio_w)||' não permite a utilização do PEP.'; 
			ie_bloqueia_p		:= 'S'; 
		end if; 
	end if; 
	 
end if; 
*/
 
 
 
if (nr_atendimento_p > 0) and (ie_forma_consistir_w <> 'N') then 
	cd_setor_usuario_w	:= coalesce(obter_dados_usuario_opcao(nm_usuario_p,'S'),0);
	cd_setor_pac_w		:= coalesce(coalesce(obter_setor_atendimento(nr_atendimento_p),Obter_Unidade_Atendimento(nr_atendimento_p,'IA','CS')),0);
	ie_setor_pac_lib_w	:= obter_se_setor_usuario(cd_setor_pac_w, nm_usuario_p);
 
	if (ie_forma_consistir_w = 'BS') and (cd_setor_pac_w <> cd_setor_usuario_w) then 
		ds_consistencia_p	:= wheb_mensagem_pck.get_texto(306622, null); -- Você não possui autorização para acessar este prontuário. 
		ie_bloqueia_p		:= 'S';
	elsif (ie_forma_consistir_w = 'AS') and (cd_setor_pac_w <> cd_setor_usuario_w) then 
		ds_consistencia_p	:= wheb_mensagem_pck.get_texto(306623, null); -- O setor do paciente não é o mesmo que o seu. Suas ações estão sendo registradas. 
		ie_bloqueia_p		:= 'N';
	elsif (ie_forma_consistir_w = 'BL') and (ie_setor_pac_lib_w = 'N') then 
		ds_consistencia_p	:= wheb_mensagem_pck.get_texto(306622, null); -- Você não possui autorização para acessar este prontuário. 
		ie_bloqueia_p		:= 'S';
	elsif (ie_forma_consistir_w = 'AL') and (ie_setor_pac_lib_w = 'N') then 
		ds_consistencia_p	:= wheb_mensagem_pck.get_texto(306626, null); -- O setor do paciente não esta liberado para você. Suas ações estão sendo registradas. 
		ie_bloqueia_p		:= 'N';
	elsif (ie_forma_consistir_w = 'BSL') and (cd_setor_pac_w	<> wheb_usuario_pck.get_cd_setor_atendimento) then 
		ds_consistencia_p	:= wheb_mensagem_pck.get_texto(306627, null); -- Você não possui autorização para acessar este prontuário. O setor logado não é o mesmo do paciente. 
		ie_bloqueia_p		:= 'S';
	elsif (ie_forma_consistir_w = 'BLH') and (ie_setor_pac_lib_w = 'N') then 
		select	max(dt_saida_unidade) 
		into STRICT	dt_saida_unid_w 
		from	atend_paciente_unidade 
		where	nr_atendimento = nr_atendimento_p;
		 
		if (coalesce(qt_min_acesso_setor_w,0) > 0) and (dt_saida_unid_w IS NOT NULL AND dt_saida_unid_w::text <> '') then 
			 
			select (Obter_Hora_Entre_datas(dt_saida_unid_w,clock_timestamp()) * 60) 
			into STRICT	qt_minuto_w 
			;
			 
			if (qt_min_acesso_setor_w < qt_minuto_w) then 
				ds_consistencia_p	:= wheb_mensagem_pck.get_texto(306622, null); -- Você não possui autorização para acessar este prontuário. 
				ie_bloqueia_p		:= 'S';
			end if;
		end if;
	end if;
end if;
 
ie_param_inicio_enf_w := obter_param_usuario(281, 1103, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_param_inicio_enf_w);
 
 
if (nr_atendimento_p > 0) and (ie_param_inicio_enf_w = 'N') then 
	select	to_char(a.dt_inicio_atendimento,'hh24:mi'), 
			dt_alta, 
			ie_tipo_atendimento 
	into STRICT	ie_inicio_enfer_W, 
			dt_alta_w, 
			ie_tipo_atendimento_w 
	from	atendimento_paciente a 
	where	a.nr_atendimento = nr_atendimento_p;
		 
	if ( coalesce(ie_inicio_enfer_w::text, '') = '') and (coalesce(dt_alta_w::text, '') = '') and (ie_tipo_atendimento_w	= 3)then 
		ds_consistencia_p	:= wheb_mensagem_pck.get_texto(306621, null); -- Não é possível acessar este prontuário sem o início da enfermagem. Parâmetro [1103]. 
		ie_bloqueia_p		:= 'S';
	end if;
end if;
 
if (cd_classif_pf_w IS NOT NULL AND cd_classif_pf_w::text <> '') then 
	select	count(*) 
	into STRICT	qt_reg_w 
	from	pessoa_classif 
	where	obter_se_contido(nr_seq_classif,cd_classif_pf_w) = 'S' 
	and	cd_pessoa_fisica = cd_pessoa_fisica_p;
 
	 
	if (qt_reg_w = 0) then 
		select	coalesce(max(nr_seq_classif),0) 
		into STRICT	nr_seq_classif_w 
		from	pessoa_classif 
		where	cd_pessoa_fisica = cd_pessoa_fisica_p;
		 
		if (nr_seq_classif_w > 0) then 
			select	max(ds_classificacao) 
			into STRICT	ds_classif_w 
            from	classif_pessoa 
            where	nr_sequencia = nr_seq_classif_w;
			 
			if (trim(both ds_classif_w) <> '') then 
				ds_consistencia_p := wheb_mensagem_pck.get_texto(306619, 'DS_CLASSIF_W=' || ds_classif_w); -- Você não tem permissão para visualizar este cadastro, cuja classificação é #@DS_CLASSIF_W#@ ! 
				ie_bloqueia_p := 'S';
			end if;
		end if;
	ds_consistencia_p := wheb_mensagem_pck.get_texto(306618, null); -- Você não tem permissão para visualizar este cadastro! 
	ie_bloqueia_p := 'S';
	end if;
end if;
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_acesso_pep_param ( nr_atendimento_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_bloqueia_p INOUT text, ds_consistencia_p INOUT text, cd_pessoa_fisica_p text default null) FROM PUBLIC;

