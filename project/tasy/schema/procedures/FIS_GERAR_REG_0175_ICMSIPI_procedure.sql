-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_gerar_reg_0175_icmsipi (nr_seq_controle_p bigint, ie_tipo_pessoa_p text, cd_part_p text) AS $body$
DECLARE


/*REGISTRO 0175: ALTERAÇÃO DA TABELA DE CADASTRO DE PARTICIPANTE*/

-- VARIABLES
ie_gerou_dados_bloco_w 	varchar(1) := 'N';
qt_cursor_w 			bigint := 0;
nr_vetor_w  			bigint := 0;
	
-- FIS_EFD_ICMSIPI_0175
nr_seq_icmsipi_0175_w 	fis_efd_icmsipi_0175.nr_sequencia%type;
cd_reg_w				fis_efd_icmsipi_0175.cd_reg%type;
cd_part_w				fis_efd_icmsipi_0175.cd_part%type;
dt_alt_w   				fis_efd_icmsipi_0175.dt_alt%type;
nr_campo_w    			fis_efd_icmsipi_0175.nr_campo%type;
ds_cont_ant_w    		fis_efd_icmsipi_0175.ds_cont_ant%type;

-- USUARIO
nm_usuario_w usuario.nm_usuario%type;

/*Cursor que retorna as informações para o registro 0175*/
c_reg_0175 CURSOR FOR
SELECT 	max(b.nr_sequencia) nr_sequencia,
		b.ie_campo_alterado,
		b.cd_cgc,
		b.cd_pessoa_fisica
from   	fis_efd_icmsipi_controle a,
		fis_efd_icmsipi_alteracao b		
where  	a.nr_sequencia 			= nr_seq_controle_p
and		b.cd_cgc				= cd_part_p
and		'J'						= ie_tipo_pessoa_p
and    	trunc(b.dt_atualizacao_nrec) 	between trunc(a.dt_inicio_apuracao) and trunc(a.dt_fim_apuracao)
group by b.ie_campo_alterado, b.cd_cgc, b.cd_pessoa_fisica

union

select 	max(b.nr_sequencia) nr_sequencia,
		b.ie_campo_alterado,
		b.cd_cgc,
		b.cd_pessoa_fisica
from   	fis_efd_icmsipi_controle a,
		fis_efd_icmsipi_alteracao b		
where  	a.nr_sequencia = nr_seq_controle_p
and		b.cd_pessoa_fisica		= cd_part_p
and		'F'						= ie_tipo_pessoa_p
and    trunc(b.dt_atualizacao_nrec) 	between trunc(a.dt_inicio_apuracao) and trunc(a.dt_fim_apuracao)
group by b.ie_campo_alterado, b.cd_cgc, b.cd_pessoa_fisica
order by 1;
	
/*Criação do array com o tipo sendo do cursor eespecificado - c_reg_0175*/

type reg_c_reg_0175 is table of c_reg_0175%RowType;
vetReg0175 reg_c_reg_0175;

/*Criação do array com o tipo sendo da tabela eespecificada - FIS_EFD_ICMSIPI_0175 */

type registro is table of fis_efd_icmsipi_0175%rowtype index by integer;
fis_registros_w registro;

BEGIN
/*Obteção do usuário ativo no tasy*/

nm_usuario_w := Obter_Usuario_Ativo;

open c_reg_0175;
loop
fetch c_reg_0175 bulk collect      into vetReg0175 limit 1000;
	for i in 1 .. vetReg0175.Count loop

	begin
	/*Incrementa a variavel para o array*/

	qt_cursor_w:=	qt_cursor_w + 1;

	if (ie_gerou_dados_bloco_w = 'N') then
	  ie_gerou_dados_bloco_w := 'S';
	end if;
	
	select	'0175' cd_reg,
			CASE WHEN ie_tipo_pessoa_p='J' THEN  a.cd_cgc WHEN ie_tipo_pessoa_p='F' THEN  a.cd_pessoa_fisica  ELSE null END  cd_part,
			to_char(a.dt_atualizacao_nrec,'ddmmyyyy') dt_alt,
			a.ie_campo_alterado nr_campo,
			substr(a.ds_valor_anterior,1,100) ds_cont_ant
	into STRICT 	cd_reg_w,
			cd_part_w,
			dt_alt_w,
			nr_campo_w,
			ds_cont_ant_w
	from	fis_efd_icmsipi_alteracao a
	where	a.nr_sequencia = vetReg0175[i].nr_sequencia;

	/*Busca da sequencia da tabela especificada - fis_efd_icmsipi_0175 */

	select nextval('fis_efd_icmsipi_0175_seq') into STRICT nr_seq_icmsipi_0175_w;

	/*Inserindo valores no array para realização do forall posteriormente*/
	fis_registros_w[qt_cursor_w].nr_sequencia 			:= nr_seq_icmsipi_0175_w;
	fis_registros_w[qt_cursor_w].dt_atualizacao 		:= clock_timestamp();
	fis_registros_w[qt_cursor_w].nm_usuario 			:= nm_usuario_w;
	fis_registros_w[qt_cursor_w].dt_atualizacao_nrec	:= clock_timestamp();
	fis_registros_w[qt_cursor_w].nm_usuario_nrec 		:= nm_usuario_w;
	fis_registros_w[qt_cursor_w].cd_reg 				:= cd_reg_w;	
	fis_registros_w[qt_cursor_w].dt_alt   				:= dt_alt_w;
	fis_registros_w[qt_cursor_w].nr_campo    			:= nr_campo_w;
	fis_registros_w[qt_cursor_w].ds_cont_ant    		:= ds_cont_ant_w;
	fis_registros_w[qt_cursor_w].cd_part                := cd_part_w;
	fis_registros_w[qt_cursor_w].nr_seq_controle 		:= nr_seq_controle_p;

	if (nr_vetor_w >= 1000) then
		/*Inserindo registros definitivamente na tabela especifica - FIS_EFD_ICMSIPI_0175 */

		forall i in fis_registros_w.first .. fis_registros_w.last
		insert into fis_efd_icmsipi_0175 values fis_registros_w(i);

		nr_vetor_w := 0;
		fis_registros_w.delete;

		commit;
	end if;

	/*incrementa variavel para realizar o forall quando chegar no valor limite*/

	nr_vetor_w := nr_vetor_w + 1;

	end;
	end loop;
EXIT WHEN NOT FOUND; /* apply on c_reg_0175 */
end loop;
close c_reg_0175;

if (fis_registros_w.count > 0) then
	/*Inserindo registro que não entraram outro for all devido a quantidade de registros no vetor*/

	forall i in fis_registros_w.first .. fis_registros_w.last
	insert into fis_efd_icmsipi_0175 values fis_registros_w(i);

	fis_registros_w.delete;

	commit;
end if;

/*Libera memoria*/

dbms_session.free_unused_user_memory;

/*Atualização informação no controle de geração de registro para SIM*/

if (ie_gerou_dados_bloco_w = 'S') then
	update fis_efd_icmsipi_controle set ie_mov_0 = 'S' where nr_sequencia = nr_seq_controle_p;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_gerar_reg_0175_icmsipi (nr_seq_controle_p bigint, ie_tipo_pessoa_p text, cd_part_p text) FROM PUBLIC;

