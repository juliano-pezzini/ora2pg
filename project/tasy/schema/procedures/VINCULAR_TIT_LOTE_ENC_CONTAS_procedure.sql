-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE vincular_tit_lote_enc_contas ( nr_seq_pessoa_p bigint, nr_titulo_pagar_p bigint, nr_titulo_receber_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_lote_w		bigint;
nr_titulo_w		bigint;
vl_saldo_titulo_w	double precision;
dt_liquidacao_w		timestamp;
nr_seq_lote_pessoa_w	pessoa_encontro_contas.nr_seq_lote%type;


BEGIN

if (nr_seq_pessoa_p IS NOT NULL AND nr_seq_pessoa_p::text <> '') and
	((nr_titulo_pagar_p IS NOT NULL AND nr_titulo_pagar_p::text <> '') or (nr_titulo_receber_p IS NOT NULL AND nr_titulo_receber_p::text <> '')) then

	/*Pegar o lote da pessoa para não precisar passar do fonte (delphi/java) para a proc.*/

	select	max(a.nr_seq_lote)
	into STRICT	nr_seq_lote_pessoa_w
	from	pessoa_encontro_contas a
	where	a.nr_sequencia = nr_seq_pessoa_p;

	--Verificar se o título já existe, para não duplicar
	select	coalesce(max(c.nr_sequencia),0)
	into STRICT	nr_seq_lote_w
	from	encontro_contas_item 	a,
		pessoa_encontro_contas 	b,
		lote_encontro_contas 	c
	where (a.nr_titulo_pagar	= nr_titulo_pagar_p
	or	a.nr_titulo_receber	= nr_titulo_receber_p)
	and	c.nr_sequencia 	= b.nr_seq_lote
	and	b.nr_sequencia	= a.nr_seq_pessoa
	and	coalesce(c.dt_cancelamento::text, '') = ''
	and	c.nr_sequencia = nr_seq_lote_pessoa_w  LIMIT 1;

	if (nr_titulo_receber_p IS NOT NULL AND nr_titulo_receber_p::text <> '') then
		select	dt_liquidacao,
			vl_saldo_titulo
		into STRICT	dt_liquidacao_w,
			vl_saldo_titulo_w
		from	titulo_receber
		where	nr_titulo = nr_titulo_receber_p;

	elsif (nr_titulo_pagar_p IS NOT NULL AND nr_titulo_pagar_p::text <> '') then
		select	dt_liquidacao,
			vl_saldo_titulo
		into STRICT	dt_liquidacao_w,
			vl_saldo_titulo_w
		from	titulo_pagar
		where	nr_titulo = nr_titulo_pagar_p;
	end if;

	if (dt_liquidacao_w IS NOT NULL AND dt_liquidacao_w::text <> '') and (vl_saldo_titulo_w IS NOT NULL AND vl_saldo_titulo_w::text <> '') then
		nr_titulo_w := coalesce(nr_titulo_receber_p,nr_titulo_pagar_p);
		CALL wheb_mensagem_pck.exibir_mensagem_abort(236034,'NR_TITULO=' || nr_titulo_w);
	end if;

	--Se não existir, grava o título
	if (nr_seq_lote_w = 0) then
		insert into encontro_contas_item(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_pessoa,
			nr_titulo_receber,
			nr_titulo_pagar)
		values (nextval('encontro_contas_item_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_pessoa_p,
			nr_titulo_receber_p,
			nr_titulo_pagar_p);
	else
		CALL wheb_mensagem_pck.exibir_mensagem_abort(188898,'NR_SEQ_LOTE=' || nr_seq_lote_w);
	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vincular_tit_lote_enc_contas ( nr_seq_pessoa_p bigint, nr_titulo_pagar_p bigint, nr_titulo_receber_p bigint, nm_usuario_p text) FROM PUBLIC;

