-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_interf_j210_ecd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


nr_seq_demo_dmpl_w				ctb_sped_controle.nr_seq_demo_dmpl%type;
nr_seq_demo_dlpa_w				ctb_sped_controle.nr_seq_demo_dlpa%type;
nr_seq_rubrica_saldo_ant_w			ctb_modelo_rubrica.nr_sequencia%type;
nr_seq_rubrica_saldo_final_w			ctb_modelo_rubrica.nr_sequencia%type;
vl_saldo_anterior_w				ctb_demo_rubrica.vl_referencia%type;
vl_saldo_final_w				ctb_demo_rubrica.vl_referencia%type;
cd_versao_w					ctb_regra_sped.cd_versao%type;
sep_w						varchar(1) := '|';
tp_registro_w					varchar(15) := 'J210';
tp_identificardor_w				varchar(1);
ie_deb_cred_inicial_w				varchar(1);
ie_deb_cred_final_w				varchar(1);
ds_arquivo_w					varchar(4000);
ds_compl_arquivo_w				varchar(4000);
ds_linha_w					varchar(8000);
nr_linha_w					bigint := qt_linha_p;
ie_demonstrativo_w				varchar(1);
nr_seq_registro_w				bigint := nr_sequencia_p;

c_dados_J210 CURSOR FOR
	SELECT	CASE WHEN nr_seq_demo=nr_seq_demo_dlpa_w THEN 0  ELSE 1 END  ie_demonstrativo,
		b.nr_sequencia cd_aglutinacao,
		b.ds_coluna ds_aglutinacao,
		b.nr_seq_demo
	from	ctb_demo_mes b
	where	b.nr_seq_demo in (nr_seq_demo_dmpl_w,nr_seq_demo_dlpa_w)
	order by
		ie_demonstrativo;

c01_w c_dados_J210%rowtype;

c_dados_J215 CURSOR FOR
	SELECT	a.nr_seq_rubrica cd_fato_contabil,
		a.vl_referencia vl_fato_contabil,
		CASE WHEN sign(a.vl_referencia)=1 THEN 'C' WHEN sign(a.vl_referencia)=-1 THEN 'D' END  ie_deb_cred_fato_ctb
	from	ctb_modelo_rubrica b,
		ctb_demo_rubrica a
	where	a.nr_seq_rubrica = b.nr_sequencia
	and	a.nr_seq_demo = c01_w.nr_seq_demo
	and	a.nr_seq_col = c01_w.cd_aglutinacao
	and	a.vl_referencia <> 0
	order by
	b.nr_Seq_apres;

vetJ215	c_dados_J215%RowType;

c_colunas_dmpl_J210 CURSOR FOR
	SELECT	1 ie_demonstrativo,
		cd_aglutinacao_sped cd_aglutinacao,
		ds_coluna ds_aglutinacao,
		nr_seq_dmpl,
		nr_sequencia
	from	ctb_dmpl_coluna
	where	nr_seq_dmpl = nr_seq_demo_dmpl_w
	order by
		ie_demonstrativo;

c02_w	c_colunas_dmpl_J210%RowType;

c_coluna_dmpl_j215 CURSOR FOR
	SELECT	b.nr_seq_mutacao_pl cd_fato_contabil,
		b.vl_movimento vl_fato_contabil,
		ds_linha ds_fato_contabil,
		CASE WHEN sign(b.vl_movimento)=1 THEN 'C' WHEN sign(b.vl_movimento)=-1 THEN 'D' END  ie_deb_cred_fato_ctb
	from	ctb_dmpl_coluna a,
		ctb_dmpl_movimento b
	where	a.nr_sequencia = b.nr_seq_col
	and	a.nr_seq_dmpl = b.nr_seq_dmpl
	and	b.ie_linha = 'MO'
	and	b.vl_movimento <> 0
	and	a.cd_aglutinacao_sped = c02_w.cd_aglutinacao
	and	a.nr_seq_dmpl = nr_seq_demo_dmpl_w
	order by
		b.nr_seq_mutacao_pl;

c03_w	c_coluna_dmpl_J215%RowType;


BEGIN

select	coalesce(max(b.cd_versao), '9.0')
into STRICT	cd_versao_w
from	ctb_sped_controle a,
	ctb_regra_sped b
where	a.nr_seq_regra_sped = b.nr_sequencia
and	a.nr_sequencia = nr_seq_controle_p;

if (cd_versao_w in ('4.0','5.0','6.0','7.0','8.0','9.0')) then
	begin

	select	a.nr_seq_dmpl
	into STRICT	nr_seq_demo_dmpl_w
	from	ctb_sped_controle a
	where	 a.nr_sequencia = nr_seq_controle_p;

	open c_colunas_dmpl_J210;
	loop
	fetch c_colunas_dmpl_J210 into
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on c_colunas_dmpl_J210 */
		begin
		tp_registro_w	:= 'J210';
		ie_deb_cred_inicial_w	:= 'C';

		begin
		select vl_movimento
		into STRICT 	vl_saldo_anterior_w
		from   ctb_dmpl_movimento
		where  nr_seq_dmpl = nr_seq_demo_dmpl_w
		and    nr_seq_col = c02_w.nr_sequencia
		and    ie_linha = 'SA';

		vl_saldo_anterior_w:= coalesce(vl_saldo_anterior_w, 0);

		exception
		when others then
				vl_saldo_anterior_w:= 0;
		end;

		if (vl_saldo_anterior_w < 0) then
			ie_deb_cred_inicial_w	:= 'D';
		end if;

		ie_deb_cred_final_w	:= 'C';

		begin
		select coalesce(vl_movimento, 0)
		into STRICT 	vl_saldo_final_w
		from   ctb_dmpl_movimento
		where  nr_seq_dmpl = nr_seq_demo_dmpl_w
		and    nr_seq_col =  c02_w.nr_sequencia
		and    ie_linha = 'SF';

		vl_saldo_final_w:= coalesce(vl_saldo_final_w,0);

		exception
		when others then
			vl_saldo_final_w:= 0;
		end;

		if (vl_saldo_final_w < 0) then
			ie_deb_cred_final_w	:= 'D';
		end if;
		if (cd_versao_w in ('7.0','8.0','9.0')) then
			begin
			ds_linha_w	:= substr(	sep_w || tp_registro_w 					||
							sep_w || c02_w.ie_demonstrativo				||
							sep_w || c02_w.cd_aglutinacao				||
							sep_w || c02_w.ds_aglutinacao				||
							sep_w || sped_obter_campo_valor(vl_saldo_anterior_w)	||
							sep_w || ie_deb_cred_inicial_w				||
							sep_w || sped_obter_campo_valor(vl_saldo_final_w)	||
							sep_w || ie_deb_cred_final_w				||
							sep_w || ''						|| sep_w ,1,8000);
			end;
		elsif (cd_versao_w = '6.0') then
			begin
			ds_linha_w	:= substr(	sep_w || tp_registro_w 					||
							sep_w || c02_w.ie_demonstrativo				||
							sep_w || c02_w.cd_aglutinacao				||
							sep_w || c02_w.ds_aglutinacao				||
							sep_w || sped_obter_campo_valor(vl_saldo_final_w)	||
							sep_w || ie_deb_cred_final_w				||
							sep_w || sped_obter_campo_valor(vl_saldo_anterior_w)	||
							sep_w || ie_deb_cred_inicial_w				||
							sep_w || ''						|| sep_w ,1,8000);
			end;
		else
			begin
			ds_linha_w	:= substr(	sep_w || tp_registro_w 					||
							sep_w || c02_w.ie_demonstrativo				||
							sep_w || c02_w.cd_aglutinacao				||
							sep_w || c02_w.ds_aglutinacao				||
							sep_w || sped_obter_campo_valor(vl_saldo_final_w)	||
							sep_w || ie_deb_cred_final_w				||
							sep_w || sped_obter_campo_valor(vl_saldo_anterior_w)	||
							sep_w || ie_deb_cred_inicial_w				|| sep_w ,1,8000);
			end;
		end if;

		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_compl_arquivo_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w	:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;

		insert into ctb_sped_registro(
			nr_sequencia,
			ds_arquivo,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_controle_sped,
			ds_arquivo_compl,
			cd_registro,
			nr_linha)
		values (	nr_seq_registro_w,
			ds_arquivo_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_controle_p,
			ds_compl_arquivo_w,
			tp_registro_w,
			nr_linha_w);


		tp_registro_w		:= 'J215';

		open c_coluna_dmpl_J215;
		loop
		fetch c_coluna_dmpl_J215 into
			c03_w;
		EXIT WHEN NOT FOUND; /* apply on c_coluna_dmpl_J215 */
			begin
			ds_linha_w	:= substr(	sep_w || tp_registro_w 						||
							sep_w || c03_w.cd_fato_contabil				||
							sep_w || coalesce(c03_w.ds_fato_contabil, 'Nao identificado pelo usuario')				||
							sep_w || sped_obter_campo_valor(c03_w.vl_fato_contabil)	||
							sep_w || c03_w.ie_deb_cred_fato_ctb 				|| sep_w ,1,8000);

			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_compl_arquivo_w	:= substr(ds_linha_w,4001,4000);
			nr_seq_registro_w	:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;

			insert into ctb_sped_registro(
				nr_sequencia,
				ds_arquivo,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_controle_sped,
				ds_arquivo_compl,
				cd_registro,
				nr_linha)
			values (	nr_seq_registro_w,
				ds_arquivo_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_controle_p,
				ds_compl_arquivo_w,
				tp_registro_w,
				nr_linha_w);
			end;
		end loop;
		close c_coluna_dmpl_J215;

		end;
	end loop;
	close c_colunas_dmpl_J210;



	end;
else
	begin

	select	max(nr_seq_demo_dmpl),
		max(nr_seq_demo_dlpa)
	into STRICT	nr_seq_demo_dmpl_w,
		nr_seq_demo_dlpa_w
	from	ctb_sped_controle
	where	nr_sequencia = nr_seq_controle_p;

	nr_seq_rubrica_saldo_ant_w	:= null;
	nr_seq_rubrica_saldo_final_w	:= null;
	ie_demonstrativo_w		:= '0';

	open c_dados_J210;
	loop
	fetch c_dados_J210 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c_dados_J210 */
		begin
		tp_registro_w	:= 'J210';
		if (ie_demonstrativo_w <> c01_w.ie_demonstrativo) then
			nr_seq_rubrica_saldo_ant_w	:= null;
			nr_seq_rubrica_saldo_final_w	:= null;
		end if;

		if (coalesce(nr_seq_rubrica_saldo_ant_w,0) = 0) then
			begin
			/*Obtem a primeira linha do demonstrativo para depois obter qual a rubrica dele  SALDO ANTERIOR */

			select	max(nr_seq_rubrica)
			into STRICT	nr_seq_rubrica_saldo_ant_w
			from	ctb_demo_rubrica a
			where	a.nr_sequencia	= (	SELECT	min(y.nr_sequencia)
							from	ctb_demo_rubrica y
							where	y.nr_seq_demo	= c01_w.nr_seq_demo)
			and	a.nr_seq_demo	= c01_w.nr_seq_demo;
			/*FIM Saldo anterior */


			/*Obtem a primeira linha do demonstrativo para depois obter qual a rubrica dele  SALDO ATUAL */

			select	max(nr_seq_rubrica)
			into STRICT	nr_seq_rubrica_saldo_final_w
			from	ctb_demo_rubrica a
			where	a.nr_sequencia	= (	SELECT	max(y.nr_sequencia)
							from	ctb_demo_rubrica y
							where	y.nr_seq_demo	= c01_w.nr_seq_demo)
			and	a.nr_seq_demo	= c01_w.nr_seq_demo;
			/*FIM SALDO FINAL*/

			end;
		end if;

		/* SALDO ANTERIOR DA COLUNA - primeira linha */

		ie_deb_cred_inicial_w	:= 'C';

		select	coalesce(sum(a.vl_referencia),0)
		into STRICT	vl_saldo_anterior_w
		from	ctb_demo_rubrica a
		where	a.nr_seq_demo	= c01_w.nr_seq_demo
		and	a.nr_seq_col	= c01_w.cd_aglutinacao
		and	a.nr_seq_rubrica= nr_seq_rubrica_saldo_ant_w;

		if (vl_saldo_anterior_w < 0) then
			ie_deb_cred_inicial_w	:= 'D';
		end if;

		ie_deb_cred_final_w	:= 'C';

		/* SALDO FINAL DA COLUNA - ultima linha */

		select	coalesce(sum(a.vl_referencia),0)
		into STRICT	vl_saldo_final_w
		from	ctb_demo_rubrica a
		where	a.nr_seq_demo	= c01_w.nr_seq_demo
		and	a.nr_seq_col	= c01_w.cd_aglutinacao
		and	a.nr_seq_rubrica= nr_seq_rubrica_saldo_final_w;

		if (vl_saldo_final_w < 0) then
			ie_deb_cred_inicial_w	:= 'D';
		end if;

		/* FIM Obtencao saldos */

		ds_linha_w	:= substr(	sep_w || tp_registro_w 					||
						sep_w || c01_w.ie_demonstrativo				||
						sep_w || c01_w.cd_aglutinacao				||
						sep_w || c01_w.ds_aglutinacao				||
						sep_w || sped_obter_campo_valor(vl_saldo_final_w)	||
						sep_w || ie_deb_cred_final_w				||
						sep_w || sped_obter_campo_valor(vl_saldo_anterior_w)	||
						sep_w || ie_deb_cred_inicial_w				|| sep_w ,1,8000);

		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_compl_arquivo_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w	:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;

		insert into ctb_sped_registro(
			nr_sequencia,
			ds_arquivo,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_controle_sped,
			ds_arquivo_compl,
			cd_registro,
			nr_linha)
		values (	nr_seq_registro_w,
			ds_arquivo_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_controle_p,
			ds_compl_arquivo_w,
			tp_registro_w,
			nr_linha_w);

		ie_demonstrativo_w	:= c01_w.ie_demonstrativo;
		tp_registro_w		:= 'J215';

		open c_dados_J215;
		loop
		fetch c_dados_J215 into
			vetJ215;
		EXIT WHEN NOT FOUND; /* apply on c_dados_J215 */
			begin
			ds_linha_w	:= substr(	sep_w || tp_registro_w 						||
							sep_w || vetJ215.cd_fato_contabil				||
							sep_w || sped_obter_campo_valor(vetJ215.vl_fato_contabil)	||
							sep_w || vetJ215.ie_deb_cred_fato_ctb 				|| sep_w ,1,8000);

			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_compl_arquivo_w	:= substr(ds_linha_w,4001,4000);
			nr_seq_registro_w	:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;

			insert into ctb_sped_registro(
				nr_sequencia,
				ds_arquivo,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_controle_sped,
				ds_arquivo_compl,
				cd_registro,
				nr_linha)
			values (	nr_seq_registro_w,
				ds_arquivo_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_controle_p,
				ds_compl_arquivo_w,
				tp_registro_w,
				nr_linha_w);
			end;
		end loop;
		close c_dados_J215;

		end;
	end loop;
	close c_dados_J210;
	end;
end if;
commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_interf_j210_ecd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

