-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_transf_estab_protocolo ( cd_estabelecimento_p bigint, nm_usuario_p text, nr_sequencia_p bigint) AS $body$
DECLARE

 
nr_sequencia_w			bigint;
cd_estab_atende_w		smallint;
cd_pessoa_solicitante_w		varchar(10);
cd_centro_custo_w			integer;
cd_local_solicitante_w		smallint;
cd_local_atende_w			smallint;
nr_ordem_compra_w		bigint;
nr_item_oci_w			integer;
cd_material_w			integer;
cd_unidade_medida_estoque_w	varchar(30);
ie_forma_w			varchar(1);
qt_material_w			double precision;
ie_itens_w			varchar(1);
cd_grupo_material_w		smallint;
cd_subgrupo_material_w		smallint;
cd_classe_material_w		integer;

ie_saldo_maior_igual_min_w		varchar(1);
ie_considera_pendencia_local_w	varchar(1);
ie_controlado_w			varchar(1);
ie_curva_abc_w			varchar(1);
ie_nec_receita_w			varchar(1);

qt_itens_desdobra_req_w		bigint := 0;
qt_itens_gerados_w			bigint := 0;

cd_comprador_w			bigint;
cd_condicao_pagamento_w		bigint;
qt_dias_entrega_w			varchar(1);
dt_entrega_w			timestamp;
cd_moeda_w			integer;
cd_cgc_w			varchar(14);
ds_ordens_geradas_w		varchar(255);

c01 CURSOR FOR 
SELECT	a.nr_sequencia, 
	a.cd_pessoa_solicitante, 
	a.cd_local_solicitante, 
	a.cd_estab_atende, 
	a.cd_local_atende, 
	a.ie_forma, 
	coalesce(a.ie_nec_receita,'A'), 
	CASE WHEN coalesce(ie_curva_abc_w,'T')='T' THEN 'X'  ELSE ie_curva_abc_w END , 
	coalesce(a.ie_saldo_maior_igual_min,'N'), 
	coalesce(a.ie_considera_pendencia_local,'N'), 
	a.cd_grupo_material, 
	a.cd_subgrupo_material, 
	a.cd_classe_material			 
from	regra_prot_transf_estab a 
where	a.ie_situacao		= 'A' 
and	a.cd_estabelecimento	= cd_estabelecimento_p 
and (substr(obter_se_gera_solic_prot(cd_estabelecimento_p,nr_sequencia),1,1) = 'S') 
and (coalesce(nr_sequencia_p, 0) = 0 or a.nr_sequencia = nr_sequencia_p);

c02 CURSOR FOR 
SELECT	cd_material, 
	qt_material 
from	regra_prot_tran_estab_item 
where	nr_seq_protocolo = nr_sequencia_w;
					

BEGIN 
select	cd_comprador_padrao, 
	cd_condicao_pagamento_padrao, 
	cd_moeda_padrao 
into STRICT	cd_comprador_w, 
	cd_condicao_pagamento_w, 
	cd_moeda_w 
from	parametro_compras 
where	cd_Estabelecimento = cd_estabelecimento_p;
 
open c01;
loop 
fetch c01 into 
	nr_sequencia_w, 
	cd_pessoa_solicitante_w, 
	cd_local_solicitante_w, 
	cd_estab_atende_w, 
	cd_local_atende_w, 
	ie_forma_w, 
	ie_nec_receita_w, 
	ie_curva_abc_w, 
	ie_saldo_maior_igual_min_w, 
	ie_considera_pendencia_local_w, 
	cd_grupo_material_w, 
	cd_subgrupo_material_w, 
	cd_classe_material_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	if (ie_forma_w = 'R') then 
		begin 
		CALL gravar_consulta_ordem_transf( 
			cd_estabelecimento_p, 
			cd_grupo_material_w, 
			cd_subgrupo_material_w, 
			cd_classe_material_w, 
      		cd_local_solicitante_w, 
	  		cd_local_atende_w, 
			cd_estab_atende_w, 
      		nm_usuario_p, 
			'N', 
			'N', 
			'N', 
			'N', 
			ie_saldo_maior_igual_min_w, 
			'N', 
			ie_considera_pendencia_local_w,	 
			ie_curva_abc_w, 
			null, 
			null, 
			ie_nec_receita_w, 
			'N', 
			'N', 
			null);
			 
		ds_ordens_geradas_w := gravar_ordem_transf( 
			cd_estabelecimento_p, cd_local_solicitante_w, cd_estab_atende_w, cd_local_atende_w, cd_pessoa_solicitante_w, nr_sequencia_w, nm_usuario_p, ds_ordens_geradas_w);
		end;
	else 
		begin 
		select	coalesce(max(QT_ITENS_REQUISICAO),0) 
		into STRICT	qt_itens_desdobra_req_w 
		from 	parametro_estoque 
		where	cd_estabelecimento	= cd_estab_atende_w;
		 
		if (coalesce(cd_condicao_pagamento_w,0) = 0) then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(266037);
			--'Não encontrado condição de pagamento, verifique os parâmetros de compras ou o parâmetro [2] da função.' 
		end if;
 
		if (coalesce(cd_comprador_w,0) = 0) then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(266038);
			--'Não encontrado comprador, verifique os parâmetros de compras.' 
		end if;
		 
		select	cd_cgc 
		into STRICT	cd_cgc_w 
		from	estabelecimento 
		where	cd_estabelecimento = cd_estab_atende_w;
 
		select	nextval('ordem_compra_seq') 
		into STRICT	nr_ordem_compra_w 
		;
		 
		begin 
		insert into ordem_compra( 
			nr_ordem_compra, 
			cd_estabelecimento, 
			cd_condicao_pagamento, 
			cd_comprador, 
			dt_ordem_compra, 
			dt_atualizacao, 
			nm_usuario, 
			cd_moeda, 
			ie_situacao, 
			dt_inclusao, 
			cd_pessoa_solicitante, 
			ie_frete, 
			dt_entrega, 
			ie_aviso_chegada, 
			ie_emite_obs, 
			ie_urgente, 
			cd_cgc_fornecedor, 
			ie_tipo_ordem, 
			cd_local_entrega, 
			cd_local_transf, 
			cd_estab_transf, 
			nr_seq_protocolo) 
		values (	nr_ordem_compra_w, 
			cd_estabelecimento_p, 
			cd_condicao_pagamento_w, 
			cd_comprador_w, 
			clock_timestamp(), 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_moeda_w, 
			'A', 
			clock_timestamp(), 
			cd_pessoa_solicitante_w, 
			'C', 
			clock_timestamp(), 
			'N', 
			'N', 
			'N', 
			cd_cgc_w, 
			'T', 
			cd_local_solicitante_w, 
			cd_local_atende_w, 
			cd_estab_atende_w, 
			nr_sequencia_w);
		exception when others then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(266039);
			--'erro ao gravar solicitação de transferência' 
		end;
		 
		open c02;
		loop 
		fetch c02 into 
			cd_material_w, 
			qt_material_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin 
			if (qt_itens_desdobra_req_w > 0) and (qt_itens_gerados_w = qt_itens_desdobra_req_w) then 
				begin 
				select	nextval('ordem_compra_seq') 
				into STRICT	nr_ordem_compra_w 
				;
				 
				begin 
				insert into ordem_compra( 
					nr_ordem_compra, 
					cd_estabelecimento, 
					cd_condicao_pagamento, 
					cd_comprador, 
					dt_ordem_compra, 
					dt_atualizacao, 
					nm_usuario, 
					cd_moeda, 
					ie_situacao, 
					dt_inclusao, 
					cd_pessoa_solicitante, 
					ie_frete, 
					dt_entrega, 
					ie_aviso_chegada, 
					ie_emite_obs, 
					ie_urgente, 
					cd_cgc_fornecedor, 
					ie_tipo_ordem, 
					cd_local_entrega, 
					cd_local_transf, 
					cd_estab_transf, 
					nr_seq_protocolo) 
				values (	nr_ordem_compra_w, 
					cd_estabelecimento_p, 
					cd_condicao_pagamento_w, 
					cd_comprador_w, 
					clock_timestamp(), 
					clock_timestamp(), 
					nm_usuario_p, 
					cd_moeda_w, 
					'A', 
					clock_timestamp(), 
					cd_pessoa_solicitante_w, 
					'C', 
					clock_timestamp(), 
					'N', 
					'N', 
					'N', 
					cd_cgc_w, 
					'T', 
					cd_local_solicitante_w, 
					cd_local_atende_w, 
					cd_estab_atende_w, 
					nr_sequencia_w);
				exception when others then 
					CALL wheb_mensagem_pck.exibir_mensagem_abort(266040);
					--'erro ao gravar solicitação de transferência' 
				end;
				qt_itens_gerados_w := 0;
				end;
			end if;
			 
			select (coalesce(max(nr_item_oci),0) +1) 
			into STRICT	nr_item_oci_w 
			from	ordem_compra_item 
			where	nr_ordem_compra = nr_ordem_compra_w;
 
			select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UME'),1,30) cd_unidade_medida_estoque 
			into STRICT	cd_unidade_medida_estoque_w 
			from	material 
			where	cd_material = cd_material_w;
			 
			insert into ordem_compra_item( 
				nr_ordem_compra, 
				nr_item_oci, 
				cd_material, 
				qt_material, 
				qt_original, 
				vl_unitario_material, 
				dt_atualizacao, 
				nm_usuario, 
				cd_unidade_medida_compra, 
				cd_local_estoque, 
				ie_situacao, 
				vl_total_item) 
			values(	nr_ordem_compra_w, 
				nr_item_oci_w, 
				cd_material_w, 
				coalesce(qt_material_w,0), 
				coalesce(qt_material_w,0), 
				0, 
				clock_timestamp(), 
				nm_usuario_p, 
				cd_unidade_medida_estoque_w, 
				cd_local_solicitante_w, 
				'A', 
				round((coalesce(qt_material_w,0) * 0),4));	
			 
			insert into ordem_compra_item_entrega( 
				nr_ordem_compra, 
				nr_item_oci, 
				qt_prevista_entrega, 
				dt_prevista_entrega, 
				nm_usuario, 
				dt_atualizacao, 
				nr_sequencia) 
			values (nr_ordem_compra_w, 
				nr_item_oci_w, 
				coalesce(qt_material_w,0), 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nextval('ordem_compra_item_entrega_seq'));
			 
			qt_itens_gerados_w := coalesce(qt_itens_gerados_w,0) + 1;
			end;
		end loop;
		close c02;
		end;
	end if;
	update	ordem_compra 
	set	ds_observacao		= substr(Wheb_mensagem_pck.get_Texto(302646, 'NR_SEQUENCIA_W='|| NR_SEQUENCIA_W),1,255) /*'Solicitação de transferência gerada a partir do protocolo nº ' || NR_SEQUENCIA_W*/ 
	where	nr_seq_protocolo	= nr_sequencia_w;
	end;
end loop;
close c01;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_transf_estab_protocolo ( cd_estabelecimento_p bigint, nm_usuario_p text, nr_sequencia_p bigint) FROM PUBLIC;

