-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_sms_agend_imunizacao () AS $body$
DECLARE

 
id_sms_w		bigint;
ie_envia_w		varchar(1);
ds_remetente_w		varchar(255);
ds_destinatario_w	varchar(255);
ds_mensagem_w		varchar(255);
nr_seq_vacina_w		bigint;
nm_usuario_w		varchar(15);
nm_pf_w			varchar(255);
ds_erro_w		varchar(2000);
ds_vacina_w		varchar(255);
ds_dose_w		varchar(255);
dt_prevista_execucao_w	timestamp;
ds_estab_w		varchar(255);
nr_telefone_w		varchar(15);

C01 CURSOR FOR 
SELECT	a.nr_sequencia nr_seq_viagem, 
	coalesce(CASE WHEN substr(somente_numero(obter_dados_pf(obter_dados_atendimento(nr_atendimento,'PFR'),'TCD')),1,255)=0 THEN ''  ELSE substr(somente_numero(obter_dados_pf(obter_dados_atendimento(nr_atendimento,'PFR'),'TCD')),1,255) END ,CASE WHEN substr(somente_numero(obter_dados_pf(a.cd_pessoa_fisica,'TCD')),1,2)=substr(somente_numero(obter_dados_pf(a.cd_pessoa_fisica,'TC')),1,2) THEN  	somente_numero(obter_dados_pf(a.cd_pessoa_fisica,'TC'))  ELSE somente_numero(obter_dados_pf(a.cd_pessoa_fisica,'TCD')) END ) ds_destinatario, 
	dt_prevista_execucao, 
	substr(obter_descricao_padrao('VACINA','DS_VACINA',nr_seq_vacina),1,255) ds_vacina, 
	substr(obter_valor_dominio(1018,ie_dose),1,100) ds_vacina 
from	paciente_vacina a 
where	trunc(dt_prevista_execucao-2,'dd') = trunc(clock_timestamp(),'dd') 
and	exists (SELECT 1 
		from vacina x 
		where x.nr_sequencia = a.nr_seq_vacina 
		and	ie_envia_sms = 'S' 
		) 
and	not exists (	select	1 
			from	log_envio_sms x 
			where	x.nr_seq_vacina = a.nr_sequencia) 
order by 1;
	

BEGIN 
 
select	substr(obter_nome_estabelecimento(1),1,255) 
into STRICT	ds_estab_w
;
 
select	OBTER_DADOS_PF_PJ(null,obter_cgc_estabelecimento(1),'T') 
into STRICT	nr_telefone_w
;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_vacina_w, 
	ds_destinatario_w, 
	dt_prevista_execucao_w, 
	ds_vacina_w, 
	ds_dose_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	nm_usuario_w := 'Job';
	ds_remetente_w := obter_valor_param_usuario(0, 63, obter_perfil_ativo, nm_usuario_w, 1);
	ds_mensagem_w := substr(wheb_mensagem_pck.get_texto(307463, 'DT_PREVISTA=' || to_char(dt_prevista_execucao_w,'dd/mm/yyyy') || ';' || 
																'NR_TELEFONE_W=' || nr_telefone_w),1,120);
					-- Vacinas agendadas para #@DT_PREVISTA#@. Traga a carteira de vacinação. Fone: #@NR_TELEFONE_W#@ 
	if (ds_remetente_w IS NOT NULL AND ds_remetente_w::text <> '') and (ds_destinatario_w IS NOT NULL AND ds_destinatario_w::text <> '') and (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') and (nr_seq_vacina_w IS NOT NULL AND nr_seq_vacina_w::text <> '') and (nm_usuario_w IS NOT NULL AND nm_usuario_w::text <> '') then 
		begin 
		ds_erro_w := '';
		 
		id_sms_w := wheb_sms.enviar_sms(ds_remetente_w, ds_destinatario_w, ds_mensagem_w, nm_usuario_w, id_sms_w);
		 
		insert into log_envio_sms(	nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						dt_envio, 
						nr_telefone, 
						ds_mensagem, 
						nr_seq_vacina, 
						id_sms, 
						ie_tipo_viagem) 
					values (	nextval('log_envio_sms_seq'), 
						clock_timestamp(), 
						nm_usuario_w, 
						clock_timestamp(), 
						ds_destinatario_w, 
						ds_mensagem_w, 
						nr_seq_vacina_w, 
						id_sms_w, 
						'T');
		commit;
		exception 
		when others then 
		 
		ds_erro_w	:= SQLERRM(SQLSTATE);
		 
		insert into log_envio_sms(	nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_envio, 
				nr_telefone, 
				ds_mensagem, 
				nr_seq_vacina, 
				id_sms, 
				ie_tipo_viagem) 
			values (	nextval('log_envio_sms_seq'), 
				clock_timestamp(), 
				nm_usuario_w, 
				clock_timestamp(), 
				ds_destinatario_w, 
				ds_erro_w, 
				nr_seq_vacina_w, 
				id_sms_w, 
				'T');
		commit;
			 
 
		end;
	end if;
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_sms_agend_imunizacao () FROM PUBLIC;

