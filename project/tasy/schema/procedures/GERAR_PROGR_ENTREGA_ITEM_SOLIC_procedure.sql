-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_progr_entrega_item_solic ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, dt_primeira_entrega_p timestamp, qt_entregas_p bigint, ie_periodo_entrega_p bigint, nm_usuario_p text) AS $body$
DECLARE



ie_linha_w				integer;
nr_item_solic_compra_w			integer;
qt_material_w				double precision;
qt_material_ww				double precision;
dt_entrega_solicitada_w			timestamp;
dt_entrega_ref_w			timestamp;
qt_entrega_solicitada_w			double precision;
nr_item_solic_compra_entr_w			bigint;
dt_min_entrega_solic_w			timestamp;
nr_seq_norma_compra_w			bigint;
ie_norma_compra_w			varchar(1);
cd_estabelecimento_w			bigint;
ie_dias_uteis_w				varchar(1);

c00 CURSOR FOR
SELECT	nr_item_solic_compra,
	nr_seq_norma_compra
from	solic_compra_item
where	nr_solic_compra = nr_solic_compra_p
and	(((coalesce(nr_seq_norma_compra,0) = 0) and (nr_item_solic_compra = nr_item_solic_compra_p or nr_item_solic_compra_p = 0)) or
	((coalesce(nr_seq_norma_compra,0) > 0) and (nr_item_solic_compra = nr_item_solic_compra_p)));

c01 CURSOR FOR
SELECT	row_number() OVER () AS rownum,
	a.qt_material,
	trunc(dividir(a.qt_material, qt_entregas_p)),
	CASE WHEN rownum=1 THEN  dt_primeira_entrega_p  ELSE dt_primeira_entrega_p + (ie_periodo_entrega_p * (rownum - 1)) END
from	tabela_sistema b,
	solic_compra_item a
where	a.nr_solic_compra = nr_solic_compra_p
and	a.nr_item_solic_compra = nr_item_solic_compra_w  LIMIT (qt_entregas_p);


BEGIN

select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	solic_compra
where	nr_solic_compra = nr_solic_compra_p;


select	coalesce(obter_valor_param_usuario(913, 215, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N')
into STRICT	ie_norma_compra_w
;

open c00;
loop
fetch c00 into
	nr_item_solic_compra_w,
	nr_seq_norma_compra_w;
EXIT WHEN NOT FOUND; /* apply on c00 */
	begin

	delete
	from	solic_compra_item_entrega
	where	nr_solic_compra		= nr_solic_compra_p
	and	nr_item_solic_compra	= nr_item_solic_compra_w;

	open c01;
	loop
	fetch c01 into
		ie_linha_w,
		qt_material_w,
		qt_entrega_solicitada_w,
		dt_entrega_solicitada_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		ie_dias_uteis_w	:= 'N';

		if (nr_seq_norma_compra_w > 0) then
			select	ie_dias_uteis
			into STRICT	ie_dias_uteis_w
			from	sup_normas_compras
			where	nr_sequencia = nr_seq_norma_compra_w;
		end if;

		select	coalesce(max(nr_item_solic_compra_entr),0) +1
		into STRICT	nr_item_solic_compra_entr_w
		from	solic_compra_item_entrega
		where	nr_solic_compra		= nr_solic_compra_p
		and	nr_item_solic_compra	= nr_item_solic_compra_w;

		if (ie_dias_uteis_w = 'S') then
			if (ie_linha_w = 1) then
				dt_entrega_ref_w	:= dt_entrega_solicitada_w;
			else
				dt_entrega_solicitada_w	:= obter_dia_util_periodo(cd_estabelecimento_w,dt_entrega_ref_w,ie_periodo_entrega_p);
				dt_entrega_ref_w	:= dt_entrega_solicitada_w;
			end if;
		else
			dt_entrega_solicitada_w := dt_entrega_solicitada_w;
		end if;

		insert into solic_compra_item_entrega(
			nr_solic_compra,
			nr_item_solic_compra,
			nr_item_solic_compra_entr,
			qt_entrega_solicitada,
			dt_entrega_solicitada,
			dt_atualizacao,
			nm_usuario)
		values ( nr_solic_compra_p,
			nr_item_solic_compra_w,
			nr_item_solic_compra_entr_w,
			qt_entrega_solicitada_w,
			dt_entrega_solicitada_w,
			clock_timestamp(),
			nm_usuario_p);

		if (ie_linha_w = qt_entregas_p) then
			select	sum(qt_entrega_solicitada)
			into STRICT	qt_material_ww
			from	solic_compra_item_entrega
			where	nr_solic_compra		= nr_solic_compra_p
			and	nr_item_solic_compra	= nr_item_solic_compra_w;

			if (qt_material_ww <> qt_material_w) then
				update	solic_compra_item_entrega
				set	qt_entrega_solicitada		= qt_entrega_solicitada + (qt_material_w - qt_material_ww)
				where	nr_solic_compra			= nr_solic_compra_p
				and	nr_item_solic_compra		= nr_item_solic_compra_w
				and	nr_item_solic_compra_entr		= nr_item_solic_compra_entr_w;
			end if;
		end if;

		end;
	end loop;
	close c01;

	select	min(dt_entrega_solicitada)
	into STRICT	dt_min_entrega_solic_w
	from	solic_compra_item_entrega
	where	nr_solic_compra = nr_solic_compra_p
	and	nr_item_Solic_compra = nr_item_solic_compra_w;

	update	solic_compra_item
	set	dt_solic_item = dt_min_entrega_solic_w
	where	nr_solic_compra = nr_solic_compra_p
	and	nr_item_Solic_compra = nr_item_solic_compra_w;

	end;
end loop;
close c00;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_progr_entrega_item_solic ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, dt_primeira_entrega_p timestamp, qt_entregas_p bigint, ie_periodo_entrega_p bigint, nm_usuario_p text) FROM PUBLIC;

