-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_criar_geracao_arq_ted_bi ( nr_seq_grupo_relacionamento_p bigint, nr_contrato_p bigint, nr_seq_grupo_produto_p bigint, nr_seq_plano_p bigint, dt_mes_referencia_p timestamp, dt_inicial_p timestamp, dt_final_p timestamp, nr_seq_faixa_etaria_p bigint, nr_seq_tipo_arquivo_p bigint, nm_arquivo_p text, ie_gerar_agora_p text, dt_geracao_p timestamp, nr_seq_prest_exec_p pls_prestador.nr_sequencia%type, ds_lista_classificacao_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


nr_seq_arq_filtros_w		bigint;
nr_seq_arq_informacao_w		bigint;
nr_seq_contrato_w		bigint;
qt_registros_w			bigint;
ds_procedure_w			pls_arquivos_bi_tipos.ds_procedure%type;
jobno				bigint;
ds_comando_job_w		varchar(2000);
dt_run_job_w			timestamp;
dt_montada_w			timestamp;

/*Retira as JOB's com falhas encontradas*/

C01 CURSOR FOR
	SELECT	job
	from	job_v
	where	comando	like ds_procedure_w ||'%'
	and	falhas > 0
	
union

	SELECT	a.job
	from	job_v a,
		pls_arquivos_bi_inf b
	where	b.nm_id_job = a.job
	and	a.comando	like ds_procedure_w||'%'
	and	(b.DT_FIM_GERACAO IS NOT NULL AND b.DT_FIM_GERACAO::text <> '')
	and	a.falhas = 0;

BEGIN

select	upper(ds_procedure)
into STRICT	ds_procedure_w
from	pls_arquivos_bi_tipos
where	nr_sequencia = nr_seq_tipo_arquivo_p;

select	count(1)
into STRICT	qt_registros_w
from	user_objects
where	upper(OBJECT_NAME)	= ds_procedure_w;

if (qt_registros_w = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(306115,'DS_OBJETO='||ds_procedure_w);
end if;

if (nr_contrato_p IS NOT NULL AND nr_contrato_p::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_contrato_w
	from	pls_contrato
	where	nr_contrato	= nr_contrato_p;
end if;

-- Cria os filtros para a JOB
insert into pls_arquivos_bi_filtros(
		nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
		nm_usuario_nrec, nr_seq_plano, nr_seq_contrato, nr_seq_grupo_produto,
		nr_seq_grupo_contrato, dt_mes_referencia, dt_inicial, dt_final,
		nr_seq_prestador_exec, ds_lista_classificacao
	) values (
		nextval('pls_arquivos_bi_filtros_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(),
		nm_usuario_p, nr_seq_plano_p, nr_seq_contrato_w, nr_seq_grupo_produto_p,
		nr_seq_grupo_relacionamento_p, dt_mes_referencia_p, dt_inicial_p, dt_final_p,
		nr_seq_prest_exec_p, ds_lista_classificacao_p
	) returning nr_sequencia into nr_seq_arq_filtros_w;

-- Cria a informação da JOB, junto o filtro
insert into pls_arquivos_bi_inf(
		nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
		nm_usuario_nrec, ie_status, nm_arquivo, nr_seq_arq_filtros,
		dt_solicitacao, nr_seq_faixa_etaria
	) values (
		nextval('pls_arquivos_bi_inf_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(),
		nm_usuario_p, 'N', nm_arquivo_p, nr_seq_arq_filtros_w,
		clock_timestamp(), nr_seq_faixa_etaria_p
	) returning nr_sequencia into nr_seq_arq_informacao_w;

/*Remove as JOB's com falhas*/

for r_C01_w in C01 loop
	dbms_job.remove(r_C01_w.job);
	commit;
end loop;

ds_comando_job_w	:= ds_procedure_w || '(' || nr_seq_arq_informacao_w || ',' ||
				pls_util_pck.aspas_w ||  nm_usuario_p || pls_util_pck.aspas_w || ',' ||cd_estabelecimento_p||  ');';

/*Caso for gerar agora, então coloca a hora e a data atual*/

if (ie_gerar_agora_p = 'S') then
	dt_run_job_w := clock_timestamp() + interval '5 days' * (1/24/60/60);
else
	if (dt_geracao_p < clock_timestamp()) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1047356);
	else
		dt_run_job_w	:= dt_geracao_p;
	end if;

end if;

dbms_job.submit(jobno, ds_comando_job_w, dt_run_job_w , 'sysdate + 10000');

update	pls_arquivos_bi_inf
set	nm_id_job = jobno
where	nr_sequencia = nr_seq_arq_informacao_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_criar_geracao_arq_ted_bi ( nr_seq_grupo_relacionamento_p bigint, nr_contrato_p bigint, nr_seq_grupo_produto_p bigint, nr_seq_plano_p bigint, dt_mes_referencia_p timestamp, dt_inicial_p timestamp, dt_final_p timestamp, nr_seq_faixa_etaria_p bigint, nr_seq_tipo_arquivo_p bigint, nm_arquivo_p text, ie_gerar_agora_p text, dt_geracao_p timestamp, nr_seq_prest_exec_p pls_prestador.nr_sequencia%type, ds_lista_classificacao_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

