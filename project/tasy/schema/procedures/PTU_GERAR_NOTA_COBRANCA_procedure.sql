-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_nota_cobranca ( nr_seq_fatura_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ds_tipo_atendimento_w		varchar(255);
ds_motivo_saida_w		varchar(255);
nm_segurado_w			varchar(25);
cd_guia_w			varchar(20);
cd_usuario_plano_w		varchar(13);
cd_doenca_w			varchar(10);
cd_cooperativa_w		varchar(10);
ie_pcmso_w			varchar(10);
ie_tipo_guia_w			varchar(10);
ie_motivo_saida_w		varchar(2) := '1';
ie_tipo_atendimento_w		varchar(2) := '1';
cd_excecao_w			varchar(1);
ie_envia_w			varchar(1)	:= 'S';
pr_taxa_atual_w			double precision	:= 0;
nr_seq_conta_w			bigint;
nr_seq_cobranca_w		bigint;
nr_seq_protocolo_w		bigint;
nr_seq_saida_spsadt_w		bigint;
nr_lote_w			bigint;
nr_seq_tipo_atendimento_w	bigint;
ie_tipo_consulta_w		bigint;
nr_seq_outorgante_w		smallint;
cd_estabelecimento_w		smallint;
ie_carater_internacao_w		smallint;
dt_atend_ref_w			timestamp;
dt_prev_envio_w			timestamp;
ie_fora_prazo_w			varchar(1);
ie_prest_a400_w			varchar(1);

C01 CURSOR FOR 
	SELECT	substr(pls_obter_dados_segurado(a.nr_seq_segurado,'C'),5,13), 
		substr(upper(Elimina_Acentos(pls_obter_dados_segurado(a.nr_seq_segurado,'N'))),1,25), 
		CASE WHEN a.ie_carater_internacao='E' THEN 0 WHEN a.ie_carater_internacao='U' THEN 1  ELSE 1 END , 
		coalesce(a.cd_guia_referencia,a.cd_guia), 
		coalesce(a.dt_atendimento_referencia,clock_timestamp()), 
		coalesce(a.cd_excecao,'0'), 
		a.nr_seq_tipo_atendimento, 
		a.nr_seq_saida_spsadt, 
		a.cd_cooperativa, 
		b.nr_sequencia, 
		a.nr_sequencia, 
		ie_pcmso, 
		pls_obter_taxa_interc_conta(a.dt_atendimento_referencia,dt_prev_envio_w,d.nr_sequencia,c.nr_sequencia) pr_taxa, 
		pls_obter_se_envia_conta(coalesce(a.dt_atendimento,a.dt_atendimento_referencia),dt_prev_envio_w,d.nr_sequencia,c.nr_sequencia,a.nr_sequencia) ie_fora_prazo, --Conta fora do prazo limite 
		pls_obter_se_prest_a400(a.nr_sequencia,cd_estabelecimento_w) ie_prest_a400, --Prestador não enviado no A400 
		a.ie_tipo_guia, 
		CASE WHEN a.ie_tipo_consulta=1 THEN 0 WHEN a.ie_tipo_consulta=2 THEN 2 WHEN a.ie_tipo_consulta=3 THEN 3 END  
	from	pls_conta_medica_resumo	e, 
		pls_protocolo_conta	b, 
		pls_conta		a, 
		pls_segurado		c, 
		pls_congenere		d 
	where	c.nr_sequencia		= a.nr_seq_segurado 
	and	a.cd_cooperativa	= d.cd_cooperativa 
	and	a.nr_seq_protocolo	= b.nr_sequencia 
	and	e.nr_seq_fatura		= nr_seq_fatura_p 
	and	a.nr_sequencia		= e.nr_seq_conta 
	and	coalesce(b.ie_tipo_protocolo,'C')	= 'C' 
	and	((e.ie_situacao != 'I') or (coalesce(e.ie_situacao::text, '') = ''));
	
	 
	 

BEGIN 
if (ie_fora_prazo_w 	= 'N') or (ie_prest_a400_w 	= 'N') then 
	ie_envia_w := 'N';
else	 
	ie_envia_w := 'S';
end if;	
 
/* Obter dados do lote da fatura */
 
select	coalesce(a.dt_previsao_envio,clock_timestamp()), 
	b.cd_estabelecimento 
into STRICT	dt_prev_envio_w, 
	cd_estabelecimento_w 
from	ptu_lote_fatura_envio	a, 
	ptu_fatura		b 
where	a.nr_sequencia	= b.nr_seq_lote 
and	b.nr_sequencia	= nr_seq_fatura_p;
 
cd_cooperativa_w	:= pls_obter_unimed_estab(cd_estabelecimento_w);
 
open C01;
loop 
fetch C01 into 
	cd_usuario_plano_w, 
	nm_segurado_w, 
	ie_carater_internacao_w, 
	cd_guia_w, 
	dt_atend_ref_w, 
	cd_excecao_w, 
	nr_seq_tipo_atendimento_w, 
	nr_seq_saida_spsadt_w, 
	nr_seq_outorgante_w, 
	nr_seq_protocolo_w, 
	nr_seq_conta_w, 
	ie_pcmso_w, 
	pr_taxa_atual_w, 
	ie_fora_prazo_w, 
	ie_prest_a400_w, 
	ie_tipo_guia_w, 
	ie_tipo_consulta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	begin 
	select	cd_doenca 
	into STRICT	cd_doenca_w 
	from	pls_diagnostico_conta 
	where	nr_seq_conta	= nr_seq_conta_w 
	and	ie_classificacao = 'P';
	exception 
	when others then 
		cd_doenca_w	:= '';
	end;
	 
	begin 
	select	substr(cd_tiss,2,2) 
	into STRICT	ie_tipo_atendimento_w 
	from  pls_tipo_atendimento 
	where	nr_sequencia	= nr_seq_tipo_atendimento_w;
	exception 
	when others then 
		ie_tipo_atendimento_w	:= '';
	end;
	 
	if (ie_tipo_guia_w	= '3') then 
		ie_tipo_atendimento_w	:= '4';
		ie_carater_internacao_w := ie_tipo_consulta_w;
	end if;
	 
	begin 
	select	substr(cd_tiss,1,1) 
	into STRICT	ie_motivo_saida_w 
	from	pls_motivo_saida_sadt 
	where	nr_sequencia	= nr_seq_saida_spsadt_w;
	exception 
	when others then 
		ie_motivo_saida_w	:= '1';
	end;
	 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_cobranca_w 
	from	ptu_nota_cobranca 
	where	nr_guia_principal	= cd_guia_w 
	and	cd_usuario_plano	= cd_usuario_plano_w 
	and	nr_seq_fatura		= nr_seq_fatura_p;
	 
	if (coalesce(nr_seq_cobranca_w::text, '') = '') then 
		select	nextval('ptu_nota_cobranca_seq') 
		into STRICT	nr_seq_cobranca_w 
		;
		 
		nr_lote_w := nr_seq_conta_w+nr_seq_protocolo_w;
		insert into ptu_nota_cobranca(nr_sequencia, dt_atualizacao, nm_usuario, 
			dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_fatura, 
			nr_lote, nr_nota, cd_unimed, 
			cd_usuario_plano, nm_beneficiario, dt_atendimento, 
			cd_excecao, ie_carater_atendimento, cd_cid, 
			ie_paciente, ie_tipo_saida_spdat, ie_tipo_atendimento, 
			nr_guia_principal, ie_pcmso, pr_taxa, 
			ie_envia_conta, ie_doc_fisico_conf) 
		values (nr_seq_cobranca_w, clock_timestamp(), nm_usuario_p, 
			clock_timestamp(), nm_usuario_p, nr_seq_fatura_p, 
			nr_lote_w, nr_seq_conta_w, cd_cooperativa_w, 
			cd_usuario_plano_w, nm_segurado_w, dt_atend_ref_w, 
			cd_excecao_w, ie_carater_internacao_w, cd_doenca_w, 
			'1', ie_motivo_saida_w, ie_tipo_atendimento_w, 
			cd_guia_w, ie_pcmso_w, pr_taxa_atual_w, 
			CASE WHEN coalesce(ie_envia_w,'S')='S' THEN 'S'  ELSE 'N' END , 'N');
		 
		if (ie_prest_a400_w = 'N') then			 
			insert into ptu_fatura_conta_exc(nr_sequencia, 
				nr_seq_fatura, 
				nr_seq_conta, 
				ie_motivo, 
				ds_motivo, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec) 
			values (nextval('ptu_fatura_conta_exc_seq'), 
				nr_seq_fatura_p, 
				nr_seq_conta_w, 
				1, 
				'Prestador não enviado no A400', 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p);
		elsif (ie_fora_prazo_w = 'N') then			 
			insert into ptu_fatura_conta_exc(nr_sequencia, 
				nr_seq_fatura, 
				nr_seq_conta, 
				ie_motivo, 
				ds_motivo, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec) 
			values (nextval('ptu_fatura_conta_exc_seq'), 
				nr_seq_fatura_p, 
				nr_seq_conta_w, 
				2, 
				'Conta fora do prazo limite', 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p);	
		end if;		
	end if;
 
	CALL ptu_gerar_nota_hospitalar(nr_seq_cobranca_w, nm_usuario_p, null);
	 
	CALL ptu_gerar_nota_servico(nr_seq_cobranca_w, nm_usuario_p);
	 
	CALL ptu_gerar_nota_complemento(nr_seq_cobranca_w, nm_usuario_p);
 
	CALL ptu_gerar_nota_fiscal(nr_seq_cobranca_w, nm_usuario_p);
	end;
end loop;
close C01;
	 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_nota_cobranca ( nr_seq_fatura_p bigint, nm_usuario_p text) FROM PUBLIC;

