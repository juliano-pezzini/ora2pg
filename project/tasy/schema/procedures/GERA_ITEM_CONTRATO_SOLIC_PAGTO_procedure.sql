-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gera_item_contrato_solic_pagto (nr_solic_compra_p bigint, nr_seq_contrato_p bigint, nr_seq_regra_pagto_p bigint, qt_dias_entrega_p bigint, nr_seq_orc_item_gpi_p text, ie_opcao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_regra_pagto_w		bigint;
cd_material_w			bigint;
vl_pagto_w			double precision;
cd_local_estoque_w		bigint;
cd_centro_custo_w			bigint;
nr_item_solic_compra_w		bigint;
cd_conta_contabil_w		varchar(20);
cd_unidade_medida_compra_w	varchar(30);
ie_tipo_conta_w			smallint;
nr_seq_conta_financ_w		contrato_regra_nf.nr_seq_conta_financ%type;
nr_seq_crit_rateio_w		contrato_regra_nf.nr_seq_crit_rateio%type;
dt_solicitacao_compra_w		solic_compra.dt_solicitacao_compra%type;
	
c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.cd_material,
	coalesce(a.vl_pagto,0),
	a.nr_Seq_conta_financ,
	a.nr_seq_crit_rateio
from	contrato_regra_nf a
where	a.nr_seq_contrato = nr_seq_contrato_p
and	ie_opcao_p = 0
and	((coalesce(a.dt_inicio_vigencia::text, '') = '') or (trunc(a.dt_inicio_vigencia,'dd') <= trunc(clock_timestamp(),'dd')))
and	((coalesce(a.dt_fim_vigencia::text, '') = '') or (trunc(a.dt_fim_vigencia,'dd') >= trunc(clock_timestamp(),'dd')))
and	((coalesce(a.cd_estab_regra::text, '') = '') or (a.cd_estab_regra = cd_estabelecimento_p) or (exists (	select	1
												from	contrato_regra_nf_estab x
												where	x.cd_estab_regra = cd_estabelecimento_p
												and	x.nr_seq_regra_nf = a.nr_sequencia)))
and (coalesce(a.ie_situacao::text, '') = '' or a.ie_situacao = 'A')

union

select	nr_sequencia,
	cd_material,
	coalesce(vl_pagto,0),
	nr_Seq_conta_financ,
	nr_seq_crit_rateio
from	contrato_regra_nf
where	nr_sequencia = nr_seq_regra_pagto_p
and	ie_opcao_p = 1;
						

BEGIN

select	cd_local_estoque,
	cd_centro_custo,
	dt_solicitacao_compra
into STRICT	cd_local_estoque_w,
	cd_centro_custo_w,
	dt_solicitacao_compra_w
from	solic_compra
where	nr_solic_compra = nr_solic_compra_p;

open C01;
loop
fetch C01 into	
	nr_seq_regra_pagto_w,
	cd_material_w,
	vl_pagto_w,
	nr_seq_conta_financ_w,
	nr_seq_crit_rateio_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	select	coalesce(max(nr_item_solic_compra),0) + 1
	into STRICT	nr_item_solic_compra_w
	from	solic_compra_item
	where	nr_solic_compra = nr_solic_compra_p;	
	
	select	cd_unidade_medida_compra
	into STRICT	cd_unidade_medida_compra_w
	from	material
	where	cd_material = cd_material_w;
	
	ie_tipo_conta_w := 3;

	if (coalesce(cd_centro_custo_w::text, '') = '') then
		ie_tipo_conta_w	:= 2;
	end if;
	
	SELECT * FROM define_conta_material(
		cd_estabelecimento_p, cd_material_w, ie_tipo_conta_w, 0, 0, 0, 0, 0, 0, 0, cd_local_estoque_w, 0, clock_timestamp(), cd_conta_contabil_w, cd_centro_custo_w, null, 'N') INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;		
		
	insert into solic_compra_item(
		nr_solic_compra,
		nr_item_solic_compra,
		cd_material,
		cd_unidade_medida_compra,
		qt_material,
		dt_atualizacao,
		nm_usuario,
		ie_situacao,
		dt_solic_item,
		vl_unit_previsto,
		ie_geracao,
		nr_contrato,
		nr_seq_regra_contrato,
		cd_conta_contabil,
		qt_saldo_disp_estoque,
		nr_seq_orc_item_gpi,
		nr_seq_conta_financ)
	values (	nr_solic_compra_p,
		nr_item_solic_compra_w,
		cd_material_w,
		cd_unidade_medida_compra_w,
		1,
		clock_timestamp(),
		nm_usuario_p,
		'A',
		trunc(clock_timestamp() + qt_dias_entrega_p,'dd'),
		vl_pagto_w,
		'A',
		nr_seq_contrato_p,
		nr_seq_regra_pagto_w,
		cd_conta_contabil_w,
		obter_saldo_disp_estoque(cd_estabelecimento_p, cd_material_w, cd_local_estoque_w, trunc(clock_timestamp(),'mm')),
		nr_seq_orc_item_gpi_p,
		nr_seq_conta_financ_w);
	
	insert into solic_compra_item_entrega(
		nr_solic_compra,
		nr_item_solic_compra,
		nr_item_solic_compra_entr,
		qt_entrega_solicitada,
		dt_entrega_solicitada,
		dt_atualizacao,
		nm_usuario)
	values (	nr_solic_compra_p,
		nr_item_solic_compra_w,
		1,
		1,
		trunc(clock_timestamp() + qt_dias_entrega_p,'dd'),
		clock_timestamp(),
		nm_usuario_p);
	
	if (nr_seq_crit_rateio_w > 0) then
		CALL ratear_item_solic_compra(
			nr_solic_compra_p,
			nr_item_solic_compra_w,
			nr_seq_crit_rateio_w,
			cd_estabelecimento_p,
			nm_usuario_p,
			dt_solicitacao_compra_w);
	end if;
	
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gera_item_contrato_solic_pagto (nr_solic_compra_p bigint, nr_seq_contrato_p bigint, nr_seq_regra_pagto_p bigint, qt_dias_entrega_p bigint, nr_seq_orc_item_gpi_p text, ie_opcao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

