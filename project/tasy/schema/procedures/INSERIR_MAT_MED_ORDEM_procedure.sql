-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_mat_med_ordem (nr_seq_ordem_p bigint, cd_material_p bigint, qt_dose_p bigint, qt_dose_real_p bigint, nr_seq_item_prescr_p bigint, cd_unidade_medida_p text, cd_unidade_medida_real_p text, nr_seq_lote_fornec_p bigint, ie_origem_inf_p text, nm_usuario_p text, ie_sobra_overfill_p text default 'N', ie_opc_estoque_cabine_p text default 'N', nr_seq_quimio_overfill_p text default null) AS $body$
DECLARE



nr_sequencia_w			bigint;
nr_seq_cabine_w			bigint;
qt_estoque_w			double precision;
ds_material_w			varchar(255);
cd_material_w			integer	:= 0;
nr_seq_lote_fornec_w		bigint;
ie_consiste_lote_w		varchar(1);
ie_lanca_kit_w			varchar(1);
nr_seq_item_prescr_w		bigint := NULL;
nr_seq_item_prescr_ww		bigint := NULL;
ie_consiste_estoque_w		varchar(1);
nr_prescricao_w			bigint;
nr_seq_kit_w			integer;
qt_dose_w			double precision;
cd_unidade_medida_w		varchar(30);
cd_unidade_medida_ww	varchar(30);
ie_sobras_overfill_w	varchar(1);
ie_possui_overfill_w	varchar(1);
ie_possui_sobra_w		varchar(1);
nr_seq_lote_fornec_ww	bigint;
qt_dose_real_w			double precision;
ie_arredonda_dose_w		varchar(1);
ie_arredonda_dose_cabine_w varchar(1);
nr_seq_prescr_kit_w		bigint;
ie_conv_ml_w			varchar(1);
ie_agrupador_w			smallint;
qt_dose_convertida_w	double precision := null;
qt_dose_convert_w		double precision;
qt_diluicao_w			double precision;
cd_unidade_medida_consumo_w varchar(10);
qt_dose_medic_w			double precision;
cd_um_medic_w			varchar(10);
cd_intervalo_w			varchar(10);
qt_conversao_item_w		double precision;
ie_baixa_kit_w			varchar(1);
estoque_kit_w			bigint;

c01 CURSOR FOR
	SELECT	a.cd_material,
			a.nr_seq_kit,
			a.qt_dose,
			a.cd_unidade_medida,
			a.nr_sequencia
	from	prescr_material a
	where	a.nr_seq_kit = nr_seq_item_prescr_ww
	and		a.nr_prescricao = nr_prescricao_w
	and 	not exists (SELECT 	1
				from	can_ordem_prod_mat b
				where	b.nr_seq_kit = 	nr_seq_item_prescr_ww
				and	b.nr_prescricao = nr_prescricao_w)
	ORDER BY 1;


BEGIN



SELECT 	MAX(nr_prescricao)
INTO STRICT	nr_prescricao_w
FROM	can_ordem_prod
WHERE	nr_sequencia = nr_seq_ordem_p;

select 	max(ie_agrupador),
		max(cd_intervalo)
into STRICT	ie_agrupador_w,
		cd_intervalo_w
from	prescr_material
where	nr_prescricao	=	nr_prescricao_w
and		nr_sequencia	=	nr_seq_item_prescr_p;

ie_consiste_lote_w := obter_param_usuario(3130, 35, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_consiste_lote_w);
ie_lanca_kit_w := obter_param_usuario(3130, 339, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_lanca_kit_w);
ie_sobras_overfill_w := obter_param_usuario(3130, 366, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_sobras_overfill_w);
ie_arredonda_dose_w := Obter_Param_Usuario(3130, 286, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_arredonda_dose_w);
ie_arredonda_dose_cabine_w := Obter_Param_Usuario(3130, 418, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_arredonda_dose_cabine_w);
ie_conv_ml_w := obter_param_usuario(3130, 404, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_conv_ml_w);
ie_baixa_kit_w := obter_param_usuario(3130, 511, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_baixa_kit_w);


nr_seq_lote_fornec_w	:= nr_seq_lote_fornec_p;

IF (coalesce(nr_seq_item_prescr_p,0) > 0) THEN
	nr_seq_item_prescr_w	:= nr_seq_item_prescr_p;
END IF;

SELECT	b.nr_seq_cabine
INTO STRICT	nr_seq_cabine_w
FROM	far_etapa_producao b,
	can_ordem_prod a
WHERE	a.nr_sequencia = nr_seq_ordem_p
AND	b.nr_sequencia = a.nr_seq_etapa_prod;

SELECT	SUBSTR(obter_regra_consiste_lote(cd_material_p),1,1)
INTO STRICT	ie_consiste_estoque_w
;

SELECT	coalesce(SUM(qt_estoque),0)
INTO STRICT	qt_estoque_w
FROM	far_estoque_cabine
WHERE	nr_seq_cabine		= nr_seq_cabine_w
AND	((nr_seq_lote_fornec 	= nr_seq_lote_fornec_p AND ie_consiste_lote_w = 'S') OR
	 ((nr_seq_lote_fornec 	= nr_seq_lote_fornec_p) AND ((SUBSTR(Obter_Dados_Material(cd_material_p,'TIP'),1,3))::numeric  IN (0,2,3,6,8,9)) AND (ie_consiste_lote_w = 'M')) OR
	 (cd_material	= cd_material_p AND ie_consiste_lote_w = 'N') OR
	 (ie_consiste_estoque_w = 'C' AND ie_consiste_estoque_w = 'S'));

IF (qt_estoque_w = 0) THEN
	SELECT	coalesce(MAX(b.cd_material),0)
	INTO STRICT	cd_material_w
	FROM	far_estoque_cabine b,
		material a
	WHERE	a.cd_material		= b.cd_material
	AND	b.nr_seq_cabine		= nr_seq_cabine_w
	AND	((b.nr_seq_lote_fornec 	= nr_seq_lote_fornec_p AND ie_consiste_lote_w = 'S') OR
	                 ((b.nr_seq_lote_fornec 	= nr_seq_lote_fornec_p) AND ((SUBSTR(Obter_Dados_Material(cd_material_p,'TIP'),1,3))::numeric  IN (0,2,3,6,8,9)) AND (ie_consiste_lote_w = 'M')) OR
		 (a.cd_material_generico	= cd_material_p AND ie_consiste_lote_w = 'N'));

	--and	a.cd_material_generico	= cd_material_p;
	IF (cd_material_w = 0) THEN
		SELECT	coalesce(MAX(b.cd_material),0)
		INTO STRICT	cd_material_w
		FROM	far_estoque_cabine b,
			material a
		WHERE	a.cd_material		= b.cd_material
		AND	b.nr_seq_cabine		= nr_seq_cabine_w
		AND	a.cd_material		= (	SELECT	x.cd_material_generico
							FROM	material x
							WHERE	x.cd_material	= cd_material_p);
	END IF;

	IF (cd_material_w = 0) AND ((SUBSTR(Obter_Dados_Material(cd_material_p,'TIP'),1,3))::numeric  NOT IN (0,2,3,6,8,9)) THEN
		cd_material_w	:= cd_material_p;
	END IF;

	IF (ie_consiste_lote_w <> 'M' ) THEN

		select	sum(x)
		into STRICT	qt_estoque_w
		from (
		SELECT	coalesce(sum(qt_estoque),0) x
		from	far_estoque_cabine
		where	nr_seq_cabine	   = nr_seq_cabine_w
		and	nr_seq_lote_fornec = nr_seq_lote_fornec_p
		and		ie_sobra_overfill_p = 'N'
		
union

		SELECT	coalesce(sum(qt_saldo),0) x
		from	quimio_sobra_overfill
		where	nr_seq_cabine	   = nr_seq_cabine_w
		and	nr_seq_lote_fornec = nr_seq_lote_fornec_p
		and		ie_sobra_overfill_p <> 'N') alias6;

		/*SELECT	MAX(nr_seq_lote_fornec)
		INTO STRICT	nr_seq_lote_fornec_w
		FROM	far_estoque_cabine
		WHERE	nr_seq_cabine	= nr_seq_cabine_w
		AND	nr_seq_lote_fornec 	= nr_seq_lote_fornec_p;
	--	and	cd_material	= cd_material_w;       Alteracao solicitada por Daniel Dalcastagne - 23/04/2013 OS: 572267  */
        nr_seq_lote_fornec_w := nr_seq_lote_fornec_p;

	ELSIF (ie_consiste_lote_w = 'M'  AND ie_sobra_overfill_p = 'N')  THEN

		SELECT	SUM(x)
		INTO STRICT	qt_estoque_w
		FROM (
		SELECT	coalesce(sum(qt_estoque),0) x
		from	far_estoque_cabine
		where	nr_seq_cabine	   = nr_seq_cabine_w
		and		cd_material	= cd_material_w
		and		ie_sobra_overfill_p = 'N'
		
union

		SELECT	coalesce(sum(qt_saldo),0) x
		from	quimio_sobra_overfill
		where	nr_seq_cabine	   = nr_seq_cabine_w
		and		cd_material	= cd_material_w
		and		ie_sobra_overfill_p <> 'N') alias6;

		SELECT	MAX(nr_seq_lote_fornec)
		INTO STRICT	nr_seq_lote_fornec_w
		FROM	far_estoque_cabine
		WHERE	nr_seq_cabine	= nr_seq_cabine_w
	--	AND	nr_seq_lote_fornec 	= nr_seq_lote_fornec_p;
		AND	cd_material	= cd_material_w;
END IF;

END IF;

IF (cd_material_w = 0) THEN
	cd_material_w	:= cd_material_p;
END IF;


if (cd_unidade_medida_real_p <> cd_unidade_medida_p) then
	qt_conversao_item_w := obter_conversao_unid_med(cd_material_p, cd_unidade_medida_real_p);	
	
	IF (round((qt_dose_real_p)::numeric,3) > round((qt_estoque_w * qt_conversao_item_w)::numeric,3)) and (ie_sobras_overfill_w = 'N') and (ie_sobra_overfill_p = 'N') and (ie_conv_ml_w = 'N') THEN
		SELECT	SUBSTR(obter_desc_material(cd_material_w),1,255)
		INTO STRICT	ds_material_w
		;
		CALL wheb_mensagem_pck.exibir_mensagem_abort(173791,'DS_MATERIAL_W='||ds_material_w);
	END IF;
	
else

	IF (round((qt_dose_real_p)::numeric,3) > round((qt_estoque_w)::numeric,3) and (ie_sobras_overfill_w = 'N') and (ie_sobra_overfill_p = 'N') and (ie_conv_ml_w = 'N')) THEN
		SELECT	SUBSTR(obter_desc_material(cd_material_w),1,255)
		INTO STRICT	ds_material_w
		;
		CALL wheb_mensagem_pck.exibir_mensagem_abort(173791,'DS_MATERIAL_W='||ds_material_w);
	end if;
	
end if;

if (ie_sobra_overfill_p IN ('Y','X')) then

	select max(cd_unidade_medida)
	into STRICT	cd_unidade_medida_ww
	from	quimio_sobra_overfill
	where	nr_sequencia = nr_seq_quimio_overfill_p
	and 	qt_saldo > 0;

	qt_dose_real_w := qt_dose_real_p;

	if (cd_unidade_medida_ww <> substr(obter_dados_material_estab(cd_material_p,wheb_usuario_pck.get_cd_estabelecimento,'UMS'),1,30)) then
		qt_dose_real_w :=Obter_dose_convertida_quimio(cd_material_p,qt_dose_real_w,substr(obter_dados_material_estab(cd_material_p,wheb_usuario_pck.get_cd_estabelecimento,'UMS'),1,30), cd_unidade_medida_ww);
	end if;

	if (ie_arredonda_dose_w = 'S') and (ie_arredonda_dose_cabine_w = 'S') then
		qt_dose_real_w := Obter_qt_dose_onco(cd_material_p,qt_dose_real_w,'',null,cd_intervalo_w);
	end if;
	
	update 	quimio_sobra_overfill
	set		qt_saldo		= round((qt_saldo - qt_dose_real_w)::numeric,3),
			nm_usuario		=	nm_usuario_p,
			dt_atualizacao	=	clock_timestamp()
	where	nr_sequencia = nr_seq_quimio_overfill_p;

else
	if (ie_sobras_overfill_w = 'S') and (ie_sobra_overfill_p <> 'N')  then	
	
		if (ie_sobra_overfill_p = 'S') then			
			select 	coalesce(max('S'),'N')
			into STRICT	ie_possui_sobra_w
			from	quimio_sobra_overfill
			where	cd_material	=	cd_material_p
			and		coalesce(nr_seq_lote_fornec,0)	=	coalesce(nr_seq_lote_fornec_p,0)
			and		ie_tipo	=	'S'
			and 	qt_saldo > 0;
			
			if (ie_possui_sobra_w = 'S') then
				select max(cd_unidade_medida)
				into STRICT	cd_unidade_medida_ww
				from	quimio_sobra_overfill
				where	cd_material	=	cd_material_p
				and		coalesce(nr_seq_lote_fornec,0)	=	coalesce(nr_seq_lote_fornec_p,0)
				and		ie_tipo	=	'S'
				and 	qt_saldo > 0;

				qt_dose_real_w := qt_dose_real_p;

				if (cd_unidade_medida_ww <> substr(obter_dados_material_estab(cd_material_p,wheb_usuario_pck.get_cd_estabelecimento,'UMS'),1,30)) then
					qt_dose_real_w :=Obter_dose_convertida_quimio(	cd_material_p,qt_dose_real_w,substr(obter_dados_material_estab(cd_material_p,wheb_usuario_pck.get_cd_estabelecimento,'UMS'),1,30), cd_unidade_medida_ww);
				end if;

				if (ie_arredonda_dose_w = 'S') and (ie_arredonda_dose_cabine_w = 'S') then
					qt_dose_real_w := Obter_qt_dose_onco(cd_material_p,qt_dose_real_w,'',null,cd_intervalo_w);
				end if;

				update 	quimio_sobra_overfill
				set		qt_saldo		= round((qt_saldo - qt_dose_real_w)::numeric,3),
						nm_usuario		=	nm_usuario_p,
						dt_atualizacao	=	clock_timestamp()
				where	cd_material	=	cd_material_p
				and		coalesce(nr_seq_lote_fornec,0)	=	coalesce(nr_seq_lote_fornec_p,0)
				and		ie_tipo	=	'S'
				and 	qt_saldo > 0;
			end if;
		end if;
		
		if (ie_sobra_overfill_p = 'O') then
			select 	max(nr_sequencia)
			into STRICT	nr_sequencia_w
			from	quimio_sobra_overfill
			where	cd_material	=	cd_material_p
			and		coalesce(nr_seq_lote_fornec,0)	=	coalesce(nr_seq_lote_fornec_p,0)
			and		ie_tipo	=	'O'
			and 	qt_saldo > 0;
			
			if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
				select max(cd_unidade_medida)
				into STRICT	cd_unidade_medida_ww
				from	quimio_sobra_overfill
				where	cd_material	=	cd_material_p
				and		coalesce(nr_seq_lote_fornec,0)	=	coalesce(nr_seq_lote_fornec_p,0)
				and		ie_tipo	=	'O'
				and 	qt_saldo > 0;

				qt_dose_real_w := qt_dose_real_p;

				if (cd_unidade_medida_ww <> substr(obter_dados_material_estab(cd_material_p,wheb_usuario_pck.get_cd_estabelecimento,'UMS'),1,30)) then
					qt_dose_real_w :=Obter_dose_convertida_quimio(	cd_material_p,qt_dose_real_w,substr(obter_dados_material_estab(cd_material_p,wheb_usuario_pck.get_cd_estabelecimento,'UMS'),1,30), cd_unidade_medida_ww);
				end if;

				if (ie_arredonda_dose_w = 'S') and (ie_arredonda_dose_cabine_w = 'S') then
					qt_dose_real_w := Obter_qt_dose_onco(cd_material_p,qt_dose_real_w,'',null,cd_intervalo_w);
				end if;

				update 	quimio_sobra_overfill
				set		qt_saldo		= round((qt_saldo - qt_dose_real_w)::numeric,3),
						nm_usuario		=	nm_usuario_p,
						dt_atualizacao	=	clock_timestamp()
				where	cd_material	=	cd_material_w
				and		coalesce(nr_seq_lote_fornec,0)	=	coalesce(nr_seq_lote_fornec_p,0)
				and		ie_tipo	=	'O'
				and 	nr_sequencia = nr_sequencia_w;
			end if;
			
		end if;
	end if;
end if;

	if (ie_conv_ml_w = 'S') and (coalesce(ie_agrupador_w,1) = 1) and (Obter_dose_convertida_quimio(cd_material_p,qt_dose_p,cd_unidade_medida_p,obter_unid_med_usua('ml')) = 0) and (ie_origem_inf_p in ('M','D','1')) then
		
		select	max(cd_unidade_medida_consumo)
		into STRICT	cd_unidade_medida_consumo_w
		from	material
		where	cd_material = cd_material_p;

		qt_dose_medic_w	:= Obter_material_ordem_prod(nr_seq_ordem_p,'D');
		cd_um_medic_w	:= Obter_material_ordem_prod(nr_seq_ordem_p,'U');

		qt_dose_convert_w	:= Obter_dose_convertida_quimio(cd_material_p,1,cd_unidade_medida_consumo_w, cd_um_medic_w);

		select 	max(Obter_dose_convertida_quimio(a.cd_material,a.qt_dose,a.cd_unidade_medida,obter_unid_med_usua('ml')))
		into STRICT	qt_diluicao_w
		from   	can_ordem_prod b,
				can_ordem_item_prescr a
		where  	b.nr_sequencia = a.nr_seq_ordem
		and		nr_seq_ordem = nr_seq_ordem_p
		and		ie_agrupador = 9;

		qt_dose_convertida_w	:= dividir((qt_dose_real_p ),qt_dose_convert_w); --round(dividir((qt_dose_real_p ),qt_dose_convert_w),3);
	end if;

if (coalesce(qt_dose_convertida_w,qt_dose_real_p) > 0) then

	SELECT	nextval('can_ordem_prod_mat_seq')
	INTO STRICT	nr_sequencia_w
	;

	INSERT INTO can_ordem_prod_mat(
		nr_sequencia,
		nr_seq_ordem,
		dt_atualizacao,
		nm_usuario,
		cd_material,
		qt_dose,
		cd_unidade_medida,
		ie_medic_diluente,
		nr_seq_lote_fornec,
		qt_dose_real,
		qt_perda,
		cd_unidade_medida_real,
		nr_seq_item_prescr,
		cd_estabelecimento,
		IE_SOBRA_OVERFILL,
		ie_reaproveitado,
		ie_estoque_cabine,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_quimio_sobra_overfill)
	VALUES (	nr_sequencia_w,
		nr_seq_ordem_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_material_w,
		qt_dose_p,
		cd_unidade_medida_p,
		ie_origem_inf_p,
		CASE WHEN nr_seq_lote_fornec_w=0 THEN NULL  ELSE nr_seq_lote_fornec_w END ,
		coalesce(qt_dose_convertida_w,qt_dose_real_p),
		0,
		cd_unidade_medida_real_p,
		nr_seq_item_prescr_w,
		wheb_usuario_pck.get_cd_estabelecimento,
		ie_sobra_overfill_p,
		'N',
		ie_opc_estoque_cabine_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_quimio_overfill_p);

end if;

IF (ie_lanca_kit_w = 'S') THEN
	select 	max(a.nr_seq_prescricao)
	into STRICT	nr_seq_item_prescr_ww
	from 	can_ordem_item_prescr a
	where 	a.nr_seq_ordem = nr_seq_ordem_p
	and	a.nr_sequencia = nr_seq_item_prescr_w;

	OPEN C01;
	LOOP
	FETCH C01 INTO
		cd_material_w,
		nr_seq_kit_w,
		qt_dose_w,
		cd_unidade_medida_w,
		nr_seq_prescr_kit_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN
		SELECT	nextval('can_ordem_prod_mat_seq')
		INTO STRICT	nr_sequencia_w
		;

		begin
			select nr_lote into STRICT nr_seq_lote_fornec_ww from (
				SELECT  nr_seq_lote_fornec nr_lote
				from    far_estoque_cabine cabine,
						material_lote_fornec lote
				where   lote.nr_sequencia  = cabine.nr_seq_lote_fornec
				and     cabine.nr_seq_cabine = nr_seq_cabine_w
				and     cabine.cd_material = cd_material_w
				and     (cabine.nr_seq_lote_fornec IS NOT NULL AND cabine.nr_seq_lote_fornec::text <> '')
				and     lote.dt_validade >= clock_timestamp()
				order by lote.dt_validade
			) alias2 LIMIT 1;
        	exception when no_data_found
        	then
            		nr_seq_lote_fornec_ww := null;
        	end;

			if (ie_baixa_kit_w = 'S') then
				select		sum(qt_estoque)
				into STRICT		estoque_kit_w
				from		far_estoque_cabine cabine
				inner join	material_lote_fornec lote on lote.nr_sequencia = cabine.nr_seq_lote_fornec
				where		cabine.nr_seq_cabine = nr_seq_cabine_w
				and     	cabine.cd_material = cd_material_w
				and     	cabine.nr_seq_lote_fornec = nr_seq_lote_fornec_ww
				and			lote.dt_validade >= clock_timestamp();
			end if;

			if (qt_dose_w > 0) then
				if (ie_baixa_kit_w = 'N' or estoque_kit_w > 0) then
					INSERT INTO can_ordem_prod_mat(
						nr_sequencia,
						nr_seq_ordem,
						dt_atualizacao,
						nm_usuario,
						cd_material,
						qt_dose,
						cd_unidade_medida,
						ie_medic_diluente,
						nr_seq_lote_fornec,
						qt_dose_real,
						qt_perda,
						cd_unidade_medida_real,
						nr_seq_item_prescr,
						cd_estabelecimento,
						nr_prescricao,
						nr_seq_kit,
						ie_sobra_overfill,
						nr_seq_prescr_kit,
						ie_estoque_cabine,
						dt_atualizacao_nrec,
						nm_usuario_nrec)
					VALUES (	nr_sequencia_w,
						nr_seq_ordem_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_material_w,
						qt_dose_w,
						cd_unidade_medida_w,
						ie_origem_inf_p,
						nr_seq_lote_fornec_ww,
						qt_dose_w,
						0,
						cd_unidade_medida_w,
						nr_seq_item_prescr_w,
						wheb_usuario_pck.get_cd_estabelecimento,
						nr_prescricao_w,
						nr_seq_item_prescr_ww,
						ie_sobra_overfill_p,
						nr_seq_prescr_kit_w,
						'N',
						clock_timestamp(),
						nm_usuario_p);
				end if;
			end if;
		END;
	END LOOP;
	CLOSE C01;
END IF;

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_mat_med_ordem (nr_seq_ordem_p bigint, cd_material_p bigint, qt_dose_p bigint, qt_dose_real_p bigint, nr_seq_item_prescr_p bigint, cd_unidade_medida_p text, cd_unidade_medida_real_p text, nr_seq_lote_fornec_p bigint, ie_origem_inf_p text, nm_usuario_p text, ie_sobra_overfill_p text default 'N', ie_opc_estoque_cabine_p text default 'N', nr_seq_quimio_overfill_p text default null) FROM PUBLIC;

