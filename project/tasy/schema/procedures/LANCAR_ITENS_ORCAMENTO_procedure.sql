-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lancar_itens_orcamento (nr_sequencia_orcamento_p bigint, nr_seq_orc_item_p bigint, ie_tipo_item_p bigint, cd_setor_atendimento_p bigint, nm_usuario_p text, cd_medico_p bigint) AS $body$
DECLARE


nr_atendimento_w	bigint;
nr_sequencia_w		bigint;
dt_entrada_unidade_w	timestamp;
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
ie_origem_proced_w	bigint;
nr_seq_exame_w		bigint;
nr_seq_proc_interno_w	bigint;
qt_procedimento_w	double precision;
nr_seq_interno_w	bigint;
ie_proc_princ_atend_w	varchar(1);
ie_valor_informado_w	varchar(1);
tx_procedimento_w	double precision;
vl_procedimento_w	double precision;
vl_medico_w		double precision;
vl_custo_operacional_w	double precision;
vl_anestesista_w	double precision;
vl_filme_w		double precision;
vl_auxiliares_w		double precision;
vl_desconto_w		double precision;
vl_custo_w		double precision;
cd_item_w		bigint;
qt_material_w		double precision;
vl_material_w		double precision;
ie_movimenta_estoque_w	varchar(1);
cd_local_estoque_w	smallint;
vl_unitario_w	double precision;
cd_espec_medica_w    bigint;
ie_funcao_medico_ww    bigint;


BEGIN

ie_movimenta_estoque_w := coalesce(obter_valor_param_usuario(106, 81, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');

select	cd_convenio,
	cd_categoria,
	nr_atendimento
into STRICT	cd_convenio_w,
	cd_categoria_w,
	nr_atendimento_w
from	orcamento_paciente
where	nr_sequencia_orcamento = nr_sequencia_orcamento_p;

select	max(a.dt_entrada_unidade),
	max(a.nr_seq_interno)
into STRICT	dt_entrada_unidade_w,
	nr_seq_interno_w
from	atend_paciente_unidade a
where	a.nr_atendimento 	= nr_atendimento_w
and	a.cd_setor_atendimento 	= cd_setor_atendimento_p
and	a.dt_entrada_unidade 	= (	SELECT	max(x.dt_entrada_unidade)
					from	atend_paciente_unidade x
					where	a.cd_setor_atendimento 	= x.cd_setor_atendimento
					and     a.dt_entrada_unidade 	= x.dt_entrada_unidade
					and	a.nr_atendimento	= x.nr_atendimento);


if (ie_movimenta_estoque_w = 'S') then
	begin
	select	cd_local_estoque
	into STRICT	cd_local_estoque_w
	from	setor_atendimento
	where	cd_setor_atendimento = cd_setor_atendimento_p;
	exception
		when others then
		cd_local_estoque_w := null;
	end;
end if;

if (ie_tipo_item_p = 1) then

	select	nextval('procedimento_paciente_seq')
	into STRICT	nr_sequencia_w
	;

	select	cd_procedimento,
		ie_origem_proced,
		nr_seq_exame,
		nr_seq_proc_interno,
		qt_procedimento,
		ie_procedimento_principal,
		ie_valor_informado,
		tx_procedimento,
		vl_procedimento,
		vl_medico,
		vl_custo_operacional,
		vl_anestesista,
		vl_filme,
		vl_auxiliares,
		vl_desconto,
		vl_custo
	into STRICT	cd_item_w,
		ie_origem_proced_w,
		nr_seq_exame_w,
		nr_seq_proc_interno_w,
		qt_procedimento_w,
		ie_proc_princ_atend_w,
		ie_valor_informado_w,
		tx_procedimento_w,
		vl_procedimento_w,
		vl_medico_w,
		vl_custo_operacional_w,
		vl_anestesista_w,
		vl_filme_w,
		vl_auxiliares_w,
		vl_desconto_w,
		vl_custo_w
	from	orcamento_paciente_proc
	where	nr_sequencia = nr_seq_orc_item_p;

	if (coalesce(ie_valor_informado_w,'N') = 'S') and (vl_desconto_w IS NOT NULL AND vl_desconto_w::text <> '') then
		vl_procedimento_w:= vl_procedimento_w - coalesce(vl_desconto_w,0);
	end if;

	if (cd_medico_p IS NOT NULL AND cd_medico_p::text <> '') then
		SELECT * FROM obter_proced_espec_medica(wheb_usuario_pck.get_cd_estabelecimento, cd_convenio_w, cd_item_w, ie_origem_proced_w, null, null, null, null, cd_setor_atendimento_p, cd_espec_medica_w, ie_funcao_medico_ww, cd_medico_p, nr_seq_proc_interno_w, null) INTO STRICT cd_espec_medica_w, ie_funcao_medico_ww;
	end if;

	insert into procedimento_paciente(
			nr_sequencia,
			nr_atendimento,
			dt_entrada_unidade,
			cd_procedimento,
			dt_procedimento,
			cd_convenio,
			cd_categoria,
			ie_auditoria,
			ie_origem_proced,
			nr_seq_exame,
			nr_seq_proc_interno,
			qt_procedimento,
			cd_setor_atendimento,
			nr_seq_atepacu,
			ie_proc_princ_atend,
			ie_video,
			tx_medico,
			tx_Anestesia,
			ie_valor_informado,
			ie_guia_informada,
			cd_situacao_glosa,
			nm_usuario_original,
			ds_observacao,
			dt_atualizacao,
			nm_usuario,
			cd_funcao,
			tx_procedimento,
			vl_procedimento,
			vl_medico,
			vl_custo_operacional,
			vl_anestesista,
			vl_materiais,
			vl_auxiliares,
			cd_medico_executor,
			cd_especialidade,
			ie_funcao_medico)
		values ( nr_sequencia_w,
			nr_atendimento_w,
			dt_entrada_unidade_w,
			cd_item_w,
			clock_timestamp(),
			cd_convenio_w,
			cd_categoria_w,
			'N',
			ie_origem_proced_w,
			nr_seq_exame_w,
			nr_seq_proc_interno_w,
			qt_procedimento_w,
			cd_setor_atendimento_p,
			nr_seq_interno_w,
			ie_proc_princ_atend_w,
			'N',
			100,
			100,
			coalesce(ie_valor_informado_w,'N'),
			'N',
			0,
			nm_usuario_p,
			WHEB_MENSAGEM_PCK.get_texto(302300) || nr_sequencia_orcamento_p, --Seq. Or√ßamento:
			clock_timestamp(),
			nm_usuario_p,
			106,
			tx_procedimento_w,
			vl_procedimento_w,
			vl_medico_w,
			vl_custo_operacional_w,
			vl_anestesista_w,
			vl_filme_w,
			vl_auxiliares_w,
			cd_medico_p,
			coalesce(cd_espec_medica_w,null),
			coalesce(ie_funcao_medico_ww,null));

	CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);

elsif (ie_tipo_item_p = 2) then

	select	nextval('material_atend_paciente_seq')
	into STRICT	nr_sequencia_w
	;

	select 	cd_material,
		qt_material,
		vl_material,
		ie_valor_informado,
		vl_desconto
	into STRICT	cd_item_w,
		qt_material_w,
		vl_material_w,
		ie_valor_informado_w,
		vl_desconto_w
	from	orcamento_paciente_mat
	where	nr_sequencia = nr_seq_orc_item_p;

	if (coalesce(ie_valor_informado_w,'N') = 'S') and (vl_desconto_w IS NOT NULL AND vl_desconto_w::text <> '') then
		vl_material_w:= vl_material_w - coalesce(vl_desconto_w,0);
	end if;

	vl_unitario_w	:= dividir(vl_material_w, qt_material_w);

	insert into material_atend_paciente(	nr_sequencia,
						cd_material,
						dt_atendimento,
						cd_convenio,
						cd_categoria,
						nr_seq_atepacu,
						cd_setor_atendimento,
						dt_entrada_unidade,
						qt_material,
						dt_Atualizacao,
						nm_usuario,
						nr_atendimento,
						cd_acao,
						ie_valor_informado,
						cd_unidade_medida,
						cd_local_estoque,
						vl_material,
						vl_unitario)
				values (	nr_sequencia_w,
						cd_item_w,
						clock_timestamp(),
						cd_convenio_w,
						cd_categoria_w,
						nr_seq_interno_w,
						cd_setor_atendimento_p,
						dt_entrada_unidade_w,
						qt_material_w,
						clock_timestamp(),
						nm_usuario_p,
						nr_atendimento_w,
						'1',
						coalesce(ie_valor_informado_w,'N'),
						substr(obter_dados_material(cd_item_w,'UMC'),1,50),
						cd_local_estoque_w,
						vl_material_w,
						vl_unitario_w);

	CALL atualiza_preco_material(nr_sequencia_w,nm_usuario_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lancar_itens_orcamento (nr_sequencia_orcamento_p bigint, nr_seq_orc_item_p bigint, ie_tipo_item_p bigint, cd_setor_atendimento_p bigint, nm_usuario_p text, cd_medico_p bigint) FROM PUBLIC;

