-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cf_define_proximo_status ( nr_interno_conta_p bigint, ie_atualizou_p INOUT text, nm_usuario_p text) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
nr_seq_regra_fluxo_w		cf_regra_estagio.nr_seq_regra%type;
nr_Seq_regra_fluxo_atual_w	conta_paciente.nr_seq_regra_fluxo%type;
nr_seq_status_fat_w			cf_regra_estagio.nr_seq_status_fat%type;
nr_seq_status_fat_atual_w	conta_paciente.nr_seq_status_fat%type;
nr_atendimento_w			conta_paciente.nr_atendimento%type;
ie_status_acerto_w			conta_paciente.ie_status_acerto%type;
nr_seq_status_mob_w			conta_paciente.nr_seq_status_mob%type;
ie_faturamento_guia_w		cf_status_faturamento.ie_faturamento_guia%type;
ie_pendencia_w				cf_status_faturamento.ie_pendencia%type;
ie_perdido_w				cf_status_faturamento.ie_perda%type;
ie_status_atual_w			varchar(1);
ds_erro_w					varchar(255) 	:= '';
qt_registros_tabela_w		bigint;

C01 CURSOR FOR 
	SELECT		b.nr_sequencia, 
				b.nr_seq_status_fat 
	from		cf_regra_estagio b 
	where		b.nr_seq_regra = nr_Seq_regra_fluxo_atual_w 
	and			coalesce(ie_pendencia_w::text, '') = '' 
	and			ie_perdido_w = 'N' 
	order by 	b.nr_ordem;
	

BEGIN 
ie_status_atual_w	:= 'N';
ie_atualizou_p		:= 'N';
 
select	count(*) 
into STRICT	qt_registros_tabela_w 
from	w_cf_consulta_guia 
where	nm_usuario = nm_usuario_p 
and		nr_interno_conta = nr_interno_conta_p;
 
if (qt_registros_tabela_w > 0) then 
 
		select	max(a.nr_seq_status_fat), 
				max(a.nr_atendimento), 
				max(a.ie_status_acerto), 
				max(a.nr_Seq_regra_fluxo) 
		into STRICT	nr_seq_status_fat_atual_w, 
				nr_atendimento_w, 
				ie_status_acerto_w, 
				nr_Seq_regra_fluxo_atual_w 
		from	conta_paciente a 
		where 	nr_interno_conta = nr_interno_conta_p;
		 
		select	max(ie_pendencia), 
				coalesce(max(ie_perda),'N') 
		into STRICT	ie_pendencia_w, 
				ie_perdido_w 
		from	cf_status_faturamento 
		where	nr_sequencia = nr_seq_status_fat_atual_w;
		 
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_regra_fluxo_w, 
			nr_seq_status_fat_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			 
			begin 
			 
			if (ie_status_atual_w = 'N') then 
					 
					if (nr_seq_status_fat_w = nr_seq_status_fat_atual_w) then 
							ie_status_atual_w := 'S';
					else 
							ie_status_atual_w := 'N';
					end if;
					 
			else 
					select	max(a.ie_faturamento_guia) 
					into STRICT	ie_faturamento_guia_w 
					from	cf_status_faturamento a 
					where	a.nr_sequencia = nr_seq_status_fat_w;
					 
					if (ie_faturamento_guia_w = 'S') and (ie_status_acerto_w = 1) then 
							 
							CALL recalcular_conta_paciente(nr_interno_conta_p, nm_usuario_p);
							 
							ds_erro_w := fechar_conta_paciente(nr_interno_conta_p, nr_atendimento_w, 2, nm_usuario_p, ds_erro_w);											
					 
							select	max(ie_status_acerto) 
							into STRICT	ie_status_acerto_w 
							from	conta_paciente 
							where	nr_interno_conta = nr_interno_conta_p;
						 
							if (ie_status_acerto_w = 2) then 
							 
									nr_seq_status_mob_w := cf_obter_status_mob(nr_seq_status_fat_atual_w, 'J');
									 
									update	conta_paciente 
									set		nr_seq_status_fat = nr_seq_status_fat_w, 
											nr_seq_status_mob = coalesce(nr_seq_status_mob_w, nr_seq_status_mob), 
											nm_usuario = nm_usuario_p 
									where	nr_interno_conta = nr_interno_conta_p;
			 
									ie_atualizou_p := 'S';
							 
									delete	from w_cf_consulta_guia 
									where	nm_usuario = nm_usuario_p 
									and		nr_interno_conta = nr_interno_conta_p;
									 
							else 
							 
									ie_atualizou_p := 'N';
							 
							end if;
							 
					else 
					 
							nr_seq_status_mob_w := cf_obter_status_mob(nr_seq_status_fat_atual_w, 'J');
					 
							update	conta_paciente 
							set		nr_seq_status_fat = nr_seq_status_fat_w, 
									nr_seq_status_mob = coalesce(nr_seq_status_mob_w, nr_seq_status_mob), 
									nm_usuario = nm_usuario_p 
							where	nr_interno_conta = nr_interno_conta_p;
							 
							ie_atualizou_p := 'S';
							 
							delete	from w_cf_consulta_guia 
							where	nm_usuario = nm_usuario_p 
							and		nr_interno_conta = nr_interno_conta_p;
						 
					end if;
 
					exit;
			 
			end if;
			 
			end;
			 
		end loop;
		close C01;	
		 
		commit;
		 
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cf_define_proximo_status ( nr_interno_conta_p bigint, ie_atualizou_p INOUT text, nm_usuario_p text) FROM PUBLIC;

