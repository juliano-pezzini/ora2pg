-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_nova_prescricao ( nr_atendimento_p bigint, nr_horas_sem_diag_p bigint, nr_horas_laudo_p bigint, ie_perm_prim_prescr_p text, ie_consiste_sofa_p text, ie_consiste_apache_p text, ie_data_alta_prescr_p text, ie_prescr_nao_lib_p text, ie_quest_prescr_p INOUT text, ie_laudo_sus_p INOUT text, dt_prescricao_p INOUT timestamp, nm_usuario_p text, ie_questiona_assumir_pac_p text, cd_medico_resp_p INOUT text, nm_pessoa_fisica_p INOUT text) AS $body$
DECLARE

 
ie_existe_prescr_w			varchar(1) := 'N';
ie_consiste_laudo_w			varchar(1);
ie_apres_msg_laudo_sus_w	varchar(1)	:= 'N';
ie_questiona_prescr_w		varchar(1)	:= 'N';
dt_entrada_w				timestamp;
dt_alta_w					timestamp;
dt_prescricao_w				timestamp;
cd_medico_resp_w			varchar(60) := '0';
nm_pessoa_fisica_w 		varchar(200) := '';

BEGIN
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (nr_atendimento_p > 0) and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
	begin 
	if (ie_perm_prim_prescr_p = 'S') then 
		begin 
		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
		into STRICT	ie_existe_prescr_w 
		from	prescr_medica 
		where	nr_atendimento = nr_atendimento_p 
		and	obter_classif_setor(cd_setor_atendimento) <> 1 
		and 	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
		and	obter_tipo_atendimento(nr_atendimento) = 1;
		 
		if (ie_existe_prescr_w = 'S') then 
			begin 
			-- O paciente já possui uma prescrição. Parâmetro [563] 
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(56382);
			end;
		end if;
		end;
	end if;
	 
	if (nr_horas_sem_diag_p > 0) and (nr_atendimento_p > 0) then 
		begin 
		select	max(dt_entrada) 
		into STRICT	dt_entrada_w 
		from	atendimento_paciente 
		where	nr_atendimento 	= nr_atendimento_p;
		 
		if	((clock_timestamp() - nr_horas_sem_diag_p/24) > dt_entrada_w) then 
			begin 
			ie_consiste_laudo_w	:= obter_se_consiste_laudo_aih(nr_atendimento_p, nr_horas_sem_diag_p);
			if (ie_consiste_laudo_w = 'S') then 
				begin 
				-- Não é permitido fazer nova prescrição para paciente sem laudo AIH. Parâmetro [732]. 
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(56383);
				end;
			end if;
			end;
		end if;
		end;
	end if;
	 
	if (ie_consiste_sofa_p <> 'S') then 
		begin 
		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
		into STRICT	ie_existe_prescr_w 
		from	escala_sofa 
		where	nr_atendimento = nr_atendimento_p 
		and	trunc(dt_avaliacao,'dd') = trunc(clock_timestamp(),'dd');
		 
		if (ie_existe_prescr_w = 'N') then 
			begin 
			-- Não foi cadastrada a escala SOFA para este atendimento no dia, favor informar! Parâmetro [792]. 
			CALL Wheb_mensagem_pck.exibir_mensagem_abort( 56385 );
			end;			
		end if;
		end;
	end if;
	 
	if (ie_consiste_apache_p <> 'S') then 
		begin 
		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
		into STRICT	ie_existe_prescr_w 
		from	apache 
		where	nr_atendimento = nr_atendimento_p;
		 
		if (ie_existe_prescr_w = 'N') then 
			begin 
			-- Não foi cadastrada a escala Apache II para este atendimento, favor informar! Parâmetro [793]. 
			CALL Wheb_mensagem_pck.exibir_mensagem_abort( 56386 );
			end;
		end if;
		end;
	end if;
	 
	if (ie_questiona_assumir_pac_p = 'S') then 
		begin 
		select	a.cd_medico_resp, 
				substr(obter_nome_pf(b.cd_pessoa_fisica),1,200) 
		into STRICT	cd_medico_resp_w, 
				nm_pessoa_fisica_w 
		from	pessoa_fisica b, 
				atendimento_paciente a 
		where	a.nr_atendimento = nr_atendimento_p 
		and		a.cd_medico_resp = b.cd_pessoa_fisica;
		end;
	end if;
	 
	if (nr_horas_laudo_p > 0) then 
		begin 
		ie_consiste_laudo_w	:= obter_se_consiste_laudo_aih(nr_atendimento_p, nr_horas_laudo_p);
		if (ie_consiste_laudo_w = 'S') then 
			begin 
			ie_apres_msg_laudo_sus_w := 'S';
			end;
		end if;
		end;
	end if;
	 
	if (ie_data_alta_prescr_p in ('S','U','5')) then 
		begin 
		if (nr_atendimento_p > 0) then			 
			select	dt_alta 
			into STRICT	dt_alta_w 
			from	atendimento_paciente 
			where	nr_atendimento = nr_atendimento_p;
		end if;	
		 
		if (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') then 
			begin 
			if (ie_data_alta_prescr_p = 'S') then 
				begin 
				dt_prescricao_w	:= dt_alta_w;
				end;
			elsif (ie_data_alta_prescr_p = 'U') then 
				begin 
				dt_prescricao_w	:= dt_alta_w - 1/24;
				end;
			else 
				begin 
				dt_prescricao_w	:= dt_alta_w - 5/1440;
				end;
			end if;
			end;
		end if;
		end;
	end if;
	 
	if (ie_prescr_nao_lib_p = 'S') then 
		begin 
		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
		into STRICT	ie_existe_prescr_w 
		from	prescr_medica 
		where	coalesce(dt_liberacao::text, '') = '' 
		and	nr_atendimento 	= nr_atendimento_p 
		and	nm_usuario	= nm_usuario_p 
		and	trunc(dt_prescricao) = trunc(clock_timestamp());
		 
		ie_questiona_prescr_w := ie_existe_prescr_w;
		end;
	end if;
	end;
end if;
commit;
ie_laudo_sus_p		:= ie_apres_msg_laudo_sus_w;
dt_prescricao_p		:= dt_prescricao_w;
ie_quest_prescr_p	:= ie_questiona_prescr_w;
cd_medico_resp_p	:= cd_medico_resp_w;
nm_pessoa_fisica_p	:= nm_pessoa_fisica_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_nova_prescricao ( nr_atendimento_p bigint, nr_horas_sem_diag_p bigint, nr_horas_laudo_p bigint, ie_perm_prim_prescr_p text, ie_consiste_sofa_p text, ie_consiste_apache_p text, ie_data_alta_prescr_p text, ie_prescr_nao_lib_p text, ie_quest_prescr_p INOUT text, ie_laudo_sus_p INOUT text, dt_prescricao_p INOUT timestamp, nm_usuario_p text, ie_questiona_assumir_pac_p text, cd_medico_resp_p INOUT text, nm_pessoa_fisica_p INOUT text) FROM PUBLIC;

