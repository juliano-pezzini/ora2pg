-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_med_mat_assoc_gas ( nr_prescricao_p bigint, nr_sequencia_p bigint, nm_usuario_p text, ie_momento_p text, cd_intervalo_p text) AS $body$
DECLARE


nr_seq_acum_w			bigint;
cd_material_w			integer;
cd_unidade_medida_w		varchar(30);
cd_um_consumo_w			varchar(30);
qt_dose_w				double precision;
ds_observacao_w			varchar(255);
qt_conversao_w			double precision;
nr_sequencia_w			integer;
cd_intervalo_w			varchar(7);
cd_modalidade_vent_w	varchar(50);
ds_horarios_w			varchar(2000);
ds_horarios_ww			varchar(2000);
ds_horarios2_ww			varchar(2000);
nr_ocorrencia_w			bigint := 0;
cd_categoria_w			varchar(20);
cd_estabelecimento_w	smallint;
qt_total_disp_w			double precision;
ds_erro_w				varchar(255);
ie_via_aplicacao_w		varchar(5);
dt_primeiro_horario_w	timestamp;
dt_prescricao_w			timestamp;
cd_motivo_baixa_w		smallint;
dt_baixa_w				timestamp;
ie_cobra_paciente_w		varchar(1);
dt_prev_execucao_w		timestamp;
nr_horas_validade_w		integer;
ie_regra_disp_w			varchar(1);
qt_hora_intervalo_w		smallint;
qt_min_intervalo_w		integer;
ie_respiracao_w			varchar(15);
ie_disp_resp_esp_w		varchar(15);
ie_local_w				varchar(1);
nr_atendimento_w		bigint;
cd_convenio_w			bigint;
cd_setor_atendimento_w	bigint;
cd_local_estoque_w		smallint;
nr_seq_atualiza_prec_w	bigint;
nr_seq_atepacu_w		bigint;
nr_dia_util_w			bigint;
dt_inicio_prescr_w		timestamp;
nr_seq_gas_w			gas.nr_sequencia%type;
ie_limpa_prim_hor_w		intervalo_prescricao.ie_limpa_prim_hor%type;

c01 CURSOR FOR
SELECT	a.CD_MATERIAL,
		a.CD_UNIDADE_MEDIDA,
		a.QT_DOSE,
		coalesce(a.cd_intervalo, cd_intervalo_w),
		a.DS_OBSERVACAO,
		a.ie_via_aplicacao,
		coalesce(a.cd_motivo_baixa,0),
		CASE WHEN coalesce(a.cd_motivo_baixa::text, '') = '' THEN null  ELSE clock_timestamp() END ,
		CASE WHEN coalesce(a.cd_motivo_baixa::text, '') = '' THEN 'S'  ELSE 'N' END ,
		coalesce(a.ie_local,'R')
from	prescr_gasoterapia_regra a
where	ie_situacao	= 'A'
and		coalesce(a.nr_seq_gas, coalesce(nr_seq_gas_w,0)) = coalesce(nr_seq_gas_w,0)
and		ie_respiracao	= ie_respiracao_w
and		coalesce(cd_modalidade_vent, coalesce(cd_modalidade_vent_w,'X')) = coalesce(cd_modalidade_vent_w,'X')
and		coalesce(ie_disp_resp_esp, coalesce(ie_disp_resp_esp_w,'0')) = coalesce(ie_disp_resp_esp_w,'0')
and		((coalesce(a.cd_setor_atendimento::text, '') = '') or (a.cd_setor_atendimento = cd_setor_atendimento_w))
and		((coalesce(a.cd_convenio::text, '') = '') or (cd_convenio_w = a.cd_convenio))
and		coalesce(ie_liberacao,'N') = ie_momento_p
and		not exists (	select	1
					from	prescr_material b,
							prescr_medica k where		k.nr_prescricao	= nr_prescricao_p
					and		k.nr_prescricao	= b.nr_prescricao
					and		b.ie_agrupador	= 15
					and		b.nr_seq_gasoterapia	= nr_sequencia_p
					and		a.cd_material		= b.cd_material LIMIT 1);


BEGIN

select	max(cd_estabelecimento),
		max(dt_primeiro_horario),
		max(dt_prescricao),
		max(nr_atendimento),
		max(cd_local_estoque),
		max(cd_setor_atendimento),
		max(dt_inicio_prescr)
into STRICT	cd_estabelecimento_w,
		dt_primeiro_horario_w,
		dt_prescricao_w,
		nr_atendimento_w,
		cd_local_estoque_w,
		cd_setor_atendimento_w,
		dt_inicio_prescr_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

cd_convenio_w		:= obter_Convenio_atendimento(nr_atendimento_w);
cd_categoria_w		:= Obter_Categoria_Atendimento(nr_atendimento_w);
nr_seq_atepacu_w	:= Obter_Atepacu_paciente(nr_atendimento_w, 'IAA');

begin

select	max(ie_respiracao),
		max(ie_disp_resp_esp),
		max(cd_intervalo),
		max(dt_prev_execucao),
		max(cd_modalidade_vent),
		max(nr_dia_util),
		max(nr_seq_gas)
into STRICT	ie_respiracao_w,
		ie_disp_resp_esp_w,
		cd_intervalo_w,
		dt_prev_execucao_w,
		cd_modalidade_vent_w,
		nr_dia_util_w,
		nr_seq_gas_w
from	prescr_gasoterapia
where	nr_prescricao	= nr_prescricao_p
and		nr_sequencia	= nr_sequencia_p;

open C01;
loop
fetch C01 into
	cd_material_w,
	cd_unidade_medida_w,
	qt_dose_w,
	cd_intervalo_w,
	ds_observacao_w,
	ie_via_aplicacao_w,
	cd_motivo_baixa_w,
	dt_baixa_w,
	ie_cobra_paciente_w,
	ie_local_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	cd_intervalo_w	:= coalesce(cd_intervalo_p,cd_intervalo_w);

	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from	prescr_material
	where	nr_prescricao = NR_PRESCRICAO_P;

	select	coalesce(max(qt_conversao),1)
	into STRICT	qt_conversao_w
	from	material_conversao_unidade
	where	cd_material			= cd_material_w
	and		cd_unidade_medida	= cd_unidade_medida_w;

	Select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UMS'),1,30) CD_UNIDADE_MEDIDA_CONSUMO
	into STRICT	cd_um_Consumo_w
	from 	Material
	where	cd_material = cd_material_w;

	select	coalesce(max(nr_horas_validade),24)
	into STRICT	nr_horas_validade_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;

	nr_ocorrencia_w	:= obter_ocorrencia_intervalo(cd_intervalo_w, nr_horas_validade_w, 'O');

	SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, coalesce(dt_primeiro_horario_w,dt_prescricao_w), to_date(to_char(dt_prev_execucao_w,'hh24:mi'),'hh24:mi'), 24, cd_material_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_ocorrencia_w, ds_horarios_ww, ds_horarios2_ww, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horarios_ww, ds_horarios2_ww;

	ds_horarios_ww	:= ds_horarios_ww || ds_horarios2_ww;

	select 	coalesce(max(ie_limpa_prim_hor),'N')
	into STRICT	ie_limpa_prim_hor_w
	from	intervalo_prescricao
	where	cd_intervalo = cd_intervalo_w;

	if (ie_local_w = 'R') then
		Insert	into Prescr_material(
			nr_prescricao,
			nr_sequencia,
			ie_origem_inf,
			cd_material,
			cd_unidade_medida_dose,
			cd_unidade_medida,
			qt_dose,
			qt_unitaria,
			qt_material,
			dt_atualizacao,
			nm_usuario,
			cd_intervalo,
			ds_observacao,
			nr_seq_gasoterapia,
			ie_agrupador,
			ie_medicacao_paciente,
			ie_se_necessario,
			ie_urgencia,
			ie_suspenso,
			ie_utiliza_kit,
			ie_status_cirurgia,
			ie_bomba_infusao,
			ie_aplic_bolus,
			ie_aplic_lenta,
			ie_acm,
			cd_motivo_baixa,
			dt_baixa,
			qt_conversao_dose,
			ds_horarios,
			nr_ocorrencia,
			ie_via_aplicacao,
			ie_recons_diluente_fixo,
			ie_sem_aprazamento,
			ie_cobra_paciente,
			ie_intervalo_dif,
			hr_prim_horario,
			nr_dia_util)
		values (
			NR_PRESCRICAO_P,
			nr_sequencia_w,
			'A',
			cd_material_w,
			cd_unidade_medida_w,
			cd_um_Consumo_w,
			qt_dose_w,
			dividir(qt_dose_w,qt_conversao_w),
			qt_dose_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_intervalo_w,
			ds_observacao_w,
			NR_SEQUENCIA_P,
			15,
			'N',
			'N',
			'N',
			'N',
			'N',
			'GI',
			'N',
			'N',
			'N',
			'N',
			cd_motivo_baixa_w,
			dt_baixa_w,
			qt_conversao_w,
			CASE WHEN ie_limpa_prim_hor_w='N' THEN ds_horarios_ww  ELSE '' END ,
			nr_ocorrencia_w,
			ie_via_aplicacao_w,
			'N',
			'N',
			ie_cobra_paciente_w,
			'N',
			CASE WHEN ie_limpa_prim_hor_w='N' THEN to_char(dt_prev_execucao_w,'hh24:mi')  ELSE '' END ,
			nr_dia_util_w);

		SELECT * FROM Obter_Quant_Dispensar(cd_estabelecimento_w, cd_material_w, NR_PRESCRICAO_P, nr_sequencia_w, cd_intervalo_w, null, dividir(qt_dose_w,qt_conversao_w), null, nr_ocorrencia_w, null, '1', cd_unidade_medida_w, 1, qt_dose_w, qt_total_disp_w, ie_regra_disp_w, ds_erro_w, 'N', 'N') INTO STRICT qt_dose_w, qt_total_disp_w, ie_regra_disp_w, ds_erro_w;

		update	prescr_material
		set	qt_material		= qt_dose_w,
			qt_total_dispensar	= qt_total_disp_w,
			ie_regra_disp		= CASE WHEN coalesce(ie_regra_disp,'X')='D' THEN  ie_regra_disp  ELSE ie_regra_disp_w END
		where	nr_prescricao		= NR_PRESCRICAO_P
		and	nr_sequencia		= nr_sequencia_w;
	elsif (ie_local_w = 'C') then
		nr_seq_atualiza_prec_w := Inserir_Material_Atend_Pac(nr_atendimento_w, null, cd_material_w, clock_timestamp(), cd_convenio_w, cd_categoria_w, nr_seq_atepacu_w, nm_usuario_p, qt_dose_w, cd_local_estoque_w, '1', null, nr_seq_atualiza_prec_w, null, null);
		CALL atualiza_preco_material(nr_seq_atualiza_prec_w, nm_usuario_p);
	end if;
end loop;
close C01;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

exception when others then
	ds_erro_w	:= sqlerrm;
end;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_med_mat_assoc_gas ( nr_prescricao_p bigint, nr_sequencia_p bigint, nm_usuario_p text, ie_momento_p text, cd_intervalo_p text) FROM PUBLIC;

