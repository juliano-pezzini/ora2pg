-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE vincula_adiantamento_prot_conv ( nr_seq_protocolo_p bigint, nr_adiantamento_p bigint, nm_usuario_p text) AS $body$
DECLARE



vl_saldo_disp_w		conta_paciente.vl_conta%type;
vl_saldo_util_w		conta_paciente.vl_conta%type;
vl_protocolo_w		double precision;
vl_lancamento_w		conta_paciente.vl_conta%type;
nr_interno_conta_w	conta_paciente.nr_interno_conta%type;
vl_conta_w		conta_paciente.vl_conta%type;
ie_tipo_w		conta_paciente_adiant.ie_tipo_adiant%type;
nr_seq_w		bigint;

C01 CURSOR FOR
	SELECT	x.nr_interno_conta,
		(x.vl_conta + OBTER_VALOR_CONTA_IMPOSTO(x.nr_interno_conta,3)) - coalesce(sum(y.vl_adiantamento),0)
	FROM conta_paciente x
LEFT OUTER JOIN conta_paciente_adiant y ON (x.nr_interno_conta = y.nr_interno_conta
	having	coalesce(sum(y.vl_adiantamento),0))
WHERE x.nr_seq_protocolo = nr_seq_protocolo_p;

BEGIN

	select	obter_saldo_adiantamento_conta(nr_adiantamento, 2),
		obter_saldo_adiantamento_conta(nr_adiantamento, 1)
	into STRICT	vl_saldo_disp_w,
		ie_tipo_w
	from	adiantamento
	where	nr_adiantamento = nr_adiantamento_p;

	select	coalesce(obter_total_protocolo(nr_seq_protocolo_p),0) +
		coalesce(OBTER_VALOR_IMPOSTO_PROTOC(nr_seq_protocolo_p),0)
	into STRICT	vl_protocolo_w
	;


	select	coalesce(sum(vl_adiantamento),0)
	into STRICT	vl_saldo_util_w
	from	conta_paciente_adiant
	where	nr_interno_conta in (SELECT distinct x.nr_interno_conta
		from	conta_paciente x
		where	x.nr_seq_protocolo = nr_seq_protocolo_p);

	if (vl_protocolo_w - vl_saldo_util_w) < vl_saldo_disp_w then
		vl_saldo_disp_w := vl_protocolo_w - vl_saldo_util_w;
	end	if;

	open C01;
	loop
	fetch C01 into
		nr_interno_conta_w,
		vl_conta_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		vl_lancamento_w	:= 0;
		if (vl_conta_w <= vl_saldo_disp_w) then
			vl_lancamento_w := vl_conta_w;
			vl_saldo_disp_w := vl_saldo_disp_w - vl_conta_w;
		elsif (vl_saldo_disp_w > 0) then
			vl_lancamento_w := vl_saldo_disp_w;
			vl_saldo_disp_w	:= 0;
		end if;

		if (vl_lancamento_w > 0) then

			select 	max(nr_sequencia) nr
			into STRICT	nr_seq_w
			from 	conta_paciente_adiant
			where 	nr_interno_conta = nr_interno_conta_w
			and 	nr_adiantamento = nr_adiantamento_p;

			insert into conta_paciente_adiant(nr_interno_conta,
				nr_adiantamento,
				vl_adiantamento,
				dt_atualizacao,
				nm_usuario,
				nr_sequencia,
				ie_tipo_adiant)
			values (nr_interno_conta_w,
				nr_adiantamento_p,
				vl_lancamento_w,
				clock_timestamp(),
				nm_usuario_p,
				coalesce(nr_seq_w,0),
				ie_tipo_w);

		end if;
	end;
	end loop;
	close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vincula_adiantamento_prot_conv ( nr_seq_protocolo_p bigint, nr_adiantamento_p bigint, nm_usuario_p text) FROM PUBLIC;

