-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tof_verificar_meta_escalas ( nr_atendimento_p text, nm_usuario_p text, cd_estabelecimento_p text, dt_avaliacao_p timestamp, ie_finalizar_p text default 'N') AS $body$
DECLARE



nr_sequencia_w		bigint;
nr_seq_meta_w		bigint;
contador_w			integer;
ie_status_w			varchar(2);
dt_inicio_w			timestamp;
dt_fim_w			timestamp;
nr_seq_meta_atend_w   bigint;
nr_seq_escala_w		bigint;
qt_reg_w		bigint;
qt_reg_meta_w		bigint;
qt_escala_w		bigint;
ds_sep_bv_w		varchar(20);
ds_comando_w		varchar(2000)	:= '';
ds_parametros_w		varchar(2000);


nr_seq_pend_regra_w	bigint;
vl_minimo_w		double precision;
vl_maximo_w		double precision;	
nr_seq_sinal_vital_w	bigint;	
nr_atendimento_w	bigint;
nm_atributo_w		varchar(50);
vl_atributo_w		double precision;
cd_pessoa_fisica_w	varchar(10);
qt_idade_w		bigint;
cd_setor_atendimento_w	bigint;
cd_escala_dor_w		varchar(10);
nr_seq_result_dor_w	bigint;
nm_tabela_w		varchar(80);
ie_escala_w		bigint;
nr_seq_result_w		bigint;
nr_seq_regra_result_w	bigint;
IE_INFORMACAO_w		varchar(10);
IE_TIPO_ATRIBUTO_w	varchar(50);
ie_informacao_ret_w	varchar(255);
sql_errm_w 		varchar(255);
nm_atributo_data_w	varchar(255);

dt_inicio_meta_w			timestamp;
qt_horas_consistencia_w	double precision;
dt_horas_inicio_consist_w	timestamp;
qt_minutos_retr_w	bigint;


C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_meta,		
		m.qt_minutos_retr,
		a.dt_inicio
	from	tof_meta_atend a,
		tof_meta m
	where	m.nr_sequencia = a.nr_seq_meta
	and	nr_atendimento = nr_atendimento_p
	and	ie_regra = 'ESC'
	and	coalesce(m.ie_situacao,'A') = 'A'
	and	coalesce(a.dt_finalizacao::text, '') = ''
	and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and coalesce(a.dt_inativacao::text, '') = '';
	
	
C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.vl_minimo,
		a.vl_maximo,
		d.nm_tabela,
		d.NM_ATRIBUTO_INF,
		d.ie_escala,
		coalesce(a.nr_seq_result,0),
		a.IE_INFORMACAO,
		d.IE_TIPO_ATRIBUTO,
		d.NM_ATRIBUTO_DATA
	from	tof_meta_item a,
		tof_meta b,
		VICE_ESCALA d
	where	b.nr_sequencia	= a.nr_seq_meta
	and	a.nr_seq_meta = nr_seq_meta_w
	and	d.nr_sequencia = a.NR_SEQ_ESCALA
	and	b.ie_regra 	= 'ESC'
	and	coalesce(b.ie_situacao,'A') 		= 'A'
	and	upper(d.nm_tabela)	<> 'ESCALA_EIF'
	
union
	
	SELECT	a.nr_sequencia,
		a.vl_minimo,
		a.vl_maximo,
		d.nm_tabela,
		d.NM_ATRIBUTO_INF,
		d.ie_escala,
		coalesce(a.nr_seq_result,0),
		a.IE_INFORMACAO,
		d.IE_TIPO_ATRIBUTO,
		d.NM_ATRIBUTO_DATA
	from	tof_meta_item a,
		tof_meta b,
		VICE_ESCALA d
	where	b.nr_sequencia	= a.nr_seq_meta
	and	a.nr_seq_meta = nr_seq_meta_w
	and	d.nr_sequencia = a.NR_SEQ_ESCALA
	and	b.ie_regra 	= 'ESC'
	and	coalesce(b.ie_situacao,'A') 		= 'A'
	and	upper(d.nm_tabela)  = 'ESCALA_EIF';


BEGIN

if (coalesce(ie_finalizar_p,'N') = 'S') then

	dt_inicio_w 	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_avaliacao_p,clock_timestamp()));
	dt_fim_w 	:= clock_timestamp();

else

	dt_inicio_w 	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_avaliacao_p,clock_timestamp()) - 1);
	dt_fim_w 	:= ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(dt_inicio_w);

end if;


ds_sep_bv_w :=  obter_separador_bv;

open C01;
loop
fetch C01 into	
	nr_sequencia_w,
	nr_seq_meta_w,	
	qt_minutos_retr_w,
	dt_inicio_meta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

		qt_horas_consistencia_w		:= (qt_minutos_retr_w/1440);
		dt_horas_inicio_consist_w	:= (dt_fim_w - coalesce(qt_horas_consistencia_w,0));
		
		if (dt_inicio_meta_w < dt_horas_inicio_consist_w) then	
	
		
			open C02;
			loop
			fetch C02 into	
				nr_seq_pend_regra_w,
				vl_minimo_w,
				vl_maximo_w,
				nm_tabela_w,
				nm_atributo_w,
				ie_escala_w,
				nr_seq_regra_result_w,
				IE_INFORMACAO_w,
				IE_TIPO_ATRIBUTO_w,
				nm_atributo_data_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin		

				begin
				
				ds_comando_w	:= 	'select	count(*)'||
							' from  '||nm_tabela_w ||
							' where	nr_atendimento = :nr_atendimento'||						
							' and	'||nm_atributo_data_w||' between :dt_inicio and :dt_fim'||
							' and	dt_liberacao is not null '||
							' and	dt_inativacao is null ';
				
				ds_parametros_w	:= 	
							'nr_atendimento='||nr_atendimento_p|| ds_sep_bv_w ||
							'dt_inicio='||to_char(dt_inicio_w,'dd/mm/yyyy hh24:mi:ss')||  ds_sep_bv_w ||
							'dt_fim='|| to_char(dt_fim_w,'dd/mm/yyyy hh24:mi:ss') ||ds_sep_bv_w;						
				
				
				qt_escala_w := OBTER_VALOR_DINAMICO_PEP( ds_comando_w, ds_parametros_w, qt_escala_w);
								
				exception
				when others then				
					qt_escala_w := 0;
				end;
				
				if	((nm_tabela_w = 'ESCALA_EIF') or ( IE_TIPO_ATRIBUTO_w	<> 'VARCHAR2')) and
					(( coalesce(vl_minimo_w::text, '') = '' ) or ( coalesce(vl_maximo_w::text, '') = '' )) then
					
					
					if (qt_escala_w > 0 ) then
				
						ie_status_w := 'A';		

					else

						ie_status_w := 'N';

					end if;
					
					select	count(*)
					into STRICT	qt_reg_meta_w
					from	tof_meta_atend_hor
					where	nr_seq_meta_atend = nr_sequencia_w
					and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_geracao) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_fim_w)
					and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
					and coalesce(dt_inativacao::text, '') = '';
				
					if (qt_reg_meta_w = 0) then
				
						Select  nextval('tof_meta_atend_hor_seq')
						into STRICT	nr_seq_meta_atend_w
						;
						
						insert into tof_meta_atend_hor(	nr_sequencia,
										dt_atualizacao,
										nm_usuario,
										dt_atualizacao_nrec,
										nm_usuario_nrec,
										nr_seq_meta_atend,
										ie_status,
										dt_geracao,
										ds_observacao,
										dt_liberacao)
									values (	nr_seq_meta_atend_w,
										clock_timestamp(),
										nm_usuario_p,
										clock_timestamp(),
										nm_usuario_p,
										nr_sequencia_w,
										ie_status_w,
										dt_fim_w,
										'',
										clock_timestamp());
										
					
						if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;	
					
					end if;
					
					CALL Alterar_status_tof_meta(nr_seq_meta_atend_w, nm_usuario_p);

				elsif (IE_TIPO_ATRIBUTO_w	= 'VARCHAR2') and (coalesce(IE_INFORMACAO_w::text, '') = '') then
					
					
					if (qt_escala_w > 0 ) then
				
						ie_status_w := 'A';		

					else

						ie_status_w := 'N';

					end if;
					
					select	count(*)
					into STRICT	qt_reg_meta_w
					from	tof_meta_atend_hor
					where	nr_seq_meta_atend = nr_sequencia_w
					and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_geracao) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_fim_w)
					and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
					and coalesce(dt_inativacao::text, '') = '';
					
					if (qt_reg_meta_w = 0) then
					
						Select  nextval('tof_meta_atend_hor_seq')
						into STRICT	nr_seq_meta_atend_w
						;
						
						insert into tof_meta_atend_hor(	nr_sequencia,
										dt_atualizacao,
										nm_usuario,
										dt_atualizacao_nrec,
										nm_usuario_nrec,
										nr_seq_meta_atend,
										ie_status,
										dt_geracao,
										ds_observacao,
										dt_liberacao)
									values (	nr_seq_meta_atend_w,
										clock_timestamp(),
										nm_usuario_p,
										clock_timestamp(),
										nm_usuario_p,
										nr_sequencia_w,
										ie_status_w,
										dt_fim_w,
										'',
										clock_timestamp());
						if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;	
						
					end if;
					
					CALL Alterar_status_tof_meta(nr_seq_meta_atend_w, nm_usuario_p);	
					

				elsif (qt_escala_w > 0) then			
					
				
					if (nm_tabela_w = 'ESCALA_EIF') then	
				
						
						select	count(*)
						into STRICT	qt_reg_w					
						from	escala_eif e
						where	e.nr_atendimento = nr_atendimento_p
						and	dt_avaliacao between dt_inicio_w and dt_fim_w
						and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
						and	coalesce(dt_inativacao::text, '') = ''
						and	somente_numero(obter_resultado_escala_eif(e.nr_sequencia,'T')) >=  vl_minimo_w
						and	somente_numero(obter_resultado_escala_eif(e.nr_sequencia,'T')) <=  vl_maximo_w;

						if (qt_reg_w = 0) then
						
							select	count(*)
							into STRICT	qt_reg_w					
							from	escala_eif e
							where	e.nr_atendimento = nr_atendimento_p
							and	dt_avaliacao between dt_inicio_w and dt_fim_w
							and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
							and	coalesce(dt_inativacao::text, '') = ''
							and	somente_numero(obter_resultado_escala_eif(e.nr_sequencia,'S')) = nr_seq_regra_result_w;					
						
						end if;
						
						
						
					elsif (IE_TIPO_ATRIBUTO_w	= 'VARCHAR2') then

						
						ds_comando_w	:= 	'select	count(*)'||
									' from  '||nm_tabela_w ||
									' where	nr_atendimento = :nr_atendimento'||
									' and	'||nm_atributo_w||' = :ie_informacao'||
									' and	'||nm_atributo_data_w||' between :dt_inicio and :dt_fim'||
									' and	dt_liberacao is not null '||
									' and	dt_inativacao is null ';
						
						ds_parametros_w	:= 	
									'nr_atendimento='||nr_atendimento_p|| ds_sep_bv_w ||
									'ie_informacao='||IE_INFORMACAO_w|| ds_sep_bv_w ||
									'dt_inicio='||to_char(dt_inicio_w,'dd/mm/yyyy hh24:mi:ss')||  ds_sep_bv_w ||
									'dt_fim='|| to_char(dt_fim_w,'dd/mm/yyyy hh24:mi:ss') ||ds_sep_bv_w;	
						
						qt_reg_w := OBTER_VALOR_DINAMICO_PEP(ds_comando_w, ds_parametros_w, qt_reg_w);	
						
					
					else
					
						ds_comando_w	:= 	'select	count(*)'||
									' from  '||nm_tabela_w ||
									' where	nr_atendimento = :nr_atendimento'||
									' and	'||nm_atributo_w||' between :vl_minimo and :vl_maximo'||
									' and	'||nm_atributo_data_w||' between :dt_inicio and :dt_fim'||
									' and	dt_liberacao is not null '||
									' and	dt_inativacao is null ';
						
						ds_parametros_w	:= 	
									'nr_atendimento='||nr_atendimento_p|| ds_sep_bv_w ||
									'vl_minimo='||vl_minimo_w|| ds_sep_bv_w ||
									'vl_maximo='||vl_maximo_w|| ds_sep_bv_w ||
									'dt_inicio='||to_char(dt_inicio_w,'dd/mm/yyyy hh24:mi:ss')||  ds_sep_bv_w ||
									'dt_fim='|| to_char(dt_fim_w,'dd/mm/yyyy hh24:mi:ss') ||ds_sep_bv_w;	
										
						qt_reg_w := OBTER_VALOR_DINAMICO_PEP(ds_comando_w, ds_parametros_w, qt_reg_w);			
							
						
					end if;				
				
				
				
					if (qt_reg_w > 0 ) then
				
						ie_status_w := 'N';		

					else

						ie_status_w := 'A';

					end if;
					
					select	count(*)
					into STRICT	qt_reg_meta_w
					from	tof_meta_atend_hor
					where	nr_seq_meta_atend = nr_sequencia_w
					and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_geracao) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_fim_w)
					and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
					and coalesce(dt_inativacao::text, '') = '';
					
					if (qt_reg_meta_w = 0) then
				
						Select  nextval('tof_meta_atend_hor_seq')
						into STRICT	nr_seq_meta_atend_w
						;
						
						insert into tof_meta_atend_hor(	nr_sequencia,
										dt_atualizacao,
										nm_usuario,
										dt_atualizacao_nrec,
										nm_usuario_nrec,
										nr_seq_meta_atend,
										ie_status,
										dt_geracao,
										ds_observacao,
										dt_liberacao)
									values (	nr_seq_meta_atend_w,
										clock_timestamp(),
										nm_usuario_p,
										clock_timestamp(),
										nm_usuario_p,
										nr_sequencia_w,
										ie_status_w,
										dt_fim_w,
										'',
										clock_timestamp());
						if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;	
						
					end if;
					
					CALL Alterar_status_tof_meta(nr_seq_meta_atend_w, nm_usuario_p);

				end if;	
				
				
				end;
			end loop;
			close C02;
	end if;		
	
	end;
end loop;
close C01;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tof_verificar_meta_escalas ( nr_atendimento_p text, nm_usuario_p text, cd_estabelecimento_p text, dt_avaliacao_p timestamp, ie_finalizar_p text default 'N') FROM PUBLIC;

