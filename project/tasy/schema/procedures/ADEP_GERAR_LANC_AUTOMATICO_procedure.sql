-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE adep_gerar_lanc_automatico ( nr_atendimento_p bigint, cd_local_estoque_p bigint, nr_seq_evento_p bigint, nm_usuario_p text, nr_sequencia_p bigint, ds_adicional_1_p text, ds_adicional_2_p text, ds_adicional_3_p text, ds_adicional_4_p text, nr_interno_conta_p bigint, cd_proc_adic_p bigint, ie_origem_adic_p bigint, nr_seq_proc_interno_adic_p bigint, cd_procedimento_p bigint default null, ie_origem_proced_p bigint default null, nr_seq_proc_interno_p bigint default null, qt_procedimento_p bigint default null, nr_seq_exame_p bigint default null) AS $body$
DECLARE


/*
se evento for diferente de evolucao medica (10)
nr_sequencia_p - sequencia do propaci;
senao
nr_sequencia_p - sequencia da evolucao;
*/
/*NAO FAZER SELECT DA PRESCR_PROCEDIMENTO NESTA PROCEDURE POIS ELA E UTILIZADA DENTRO DA TRIGGER !!!!!!!! */

ds_erro_w			varchar(255);
cd_estabelecimento_w		smallint;
cd_convenio_w			integer;
cd_convenio_conta_w		integer;
cd_convenio_decode_w		integer;
cd_categoria_w			varchar(10);
cd_categoria_decode_w		varchar(10);
cd_categoria_conta_w		varchar(10);
cd_local_estoque_w		smallint;
ie_tipo_atendimento_w		smallint;
ie_medico_atendimento_w		varchar(1);
ie_local_estoque_w			varchar(1);
cd_cgc_w			varchar(14);
cd_cgc_regra_w			varchar(14);
nr_doc_convenio_w		varchar(20);
nr_doc_propaci_w			varchar(20);
cd_procedimento_w          		bigint		:= 0;
ie_origem_proced_w		bigint		:= 0;
cd_material_w      			integer			:= 0;
nr_sequencia_w         		bigint		:= 0;
nr_seq_regra_w         		bigint		:= 0;
nr_seq_acao_regra_w		bigint		:= 0;
nr_seq_exame_propaci_w     		bigint		:= 0;
cd_unid_medida_w			varchar(30);
cd_medico_executor_w		varchar(10);
cd_medico_req_w			varchar(10);
cd_medico_resp_w			varchar(10);
cd_setor_regra_w			integer	:= 0;
cd_setor_atendimento_w		integer	:= 0;
qt_lancamento_w			double precision	:= 0;
dt_entrada_unidade_w		timestamp;
dt_entrada_unidade_intern_w		timestamp;
dt_entrada_w			timestamp;
qt_registro_w			bigint	:= 0;
qt_passagem_setor_w		bigint	:= 0;
nr_atend_original_w			bigint;
nr_interno_conta_w			bigint;

nr_seq_propaci_w		bigint;
cd_proc_propaci_w		bigint;
dt_proc_propaci_w		timestamp;
ie_origem_propaci_w	bigint;
nr_seq_exame_w		bigint;
cd_medico_propaci_w	varchar(10);
cd_medico_filtro_w		varchar(10);
cd_area_proc_w		bigint;
cd_especial_proc_w	bigint;
cd_grupo_proc_w		bigint;
tx_proc_propaci_w		double precision	:= 100;
dt_execucao_w		timestamp;
dt_alta_w			timestamp;
qt_porte_anestesico_w	smallint;
nr_seq_atepacu_w		bigint;
nr_seq_atepacu_intern_w	bigint;
cd_edicao_amb_w		integer;
qt_proc_alta_w		integer;
qt_proc_lib_evolucao_w	integer;
qt_mat_alta_w		integer;
qt_procedimento_w		double precision;
ie_tipo_convenio_w		smallint;
ie_entrar_cursor_w		char(1);
ie_funcao_medico_w	smallint;
nr_seq_proc_interno_w	bigint	:= 0;
nr_seq_proc_interno_ww	bigint	:= 0;
cd_senha_w		varchar(20);
cd_motivo_alta_w		bigint	:= null;
ie_medico_executor_w	varchar(1);
cd_medico_regra_w	varchar(10)	:= null;
ie_clinica_w		bigint;
tx_procedimento_w		double precision;
cd_tipo_acomodacao_w	bigint;
nr_anos_w		bigint;
cd_atividade_prof_bpa_w	smallint;
ie_regra_guia_w		varchar(5);
ie_consiste_item_w		varchar(1);
ie_consiste_proc_int_w		varchar(1);
nr_seq_lanc_proc_interno_w		bigint	:= 0;
ie_consiste_item_ww	varchar(1);
dt_liberacao_evolucao_w	timestamp;
nr_prescricao_w		bigint;
cd_medico_prescr_w	varchar(10);
cd_medico_exec_item_w	varchar(10);
cd_especialidade_w	integer;
nr_seq_classificacao_w	bigint;
cd_tipo_anestesia_w	varchar(10);
cd_funcao_w		integer;
ie_tipo_atend_bpa_w	smallint;
ie_grupo_atend_bpa_w	smallint;
cd_plano_convenio_w	varchar(10);
ie_proc_princ_atend_w	varchar(10);
ie_evolucao_clinica_w	varchar(3)	:= null;
ie_via_acesso_w		varchar(1);
cont_w			bigint;
ie_integracao_w		varchar(01)	:= 'N';
ie_tipo_guia_w		varchar(02);
nr_interno_conta_ww	bigint;
cd_pessoa_fisica_w	varchar(10);
ie_primeiro_atend_w	varchar(01);
cd_profissional_w		varchar(10);

nr_seq_forma_org_w	bigint := 0;
nr_seq_grupo_w		bigint := 0;
nr_seq_subgrupo_w	bigint := 0;
cd_estab_item_w		bigint;
nr_seq_pq_proc_w		bigint;
dt_acerto_conta_w		timestamp;
ie_vincular_proc_princ_w	varchar(1):= 'S';
ie_carater_atend_w		varchar(02);
nr_cirurgia_w		bigint;
cd_setor_item_w		bigint;

qt_passagem_w			bigint;
nr_seq_setor_item_w		bigint;
cd_kit_material_w		integer;
nr_seq_atepacu_ww		bigint;
nr_seq_proc_princ_w		bigint;
ie_dispara_kit_mat_w		varchar(1);
/* ds_adicional_3_p - regra lancamento prescricao - nao mecher sem falar comigo (ricardo) 27/03/2008 */

dia_feriado_w			varchar(1) := 'N';
dia_semana_w			smallint	:= 0;
nr_sequencia_prescricao_w	bigint;
ie_lado_w			varchar(01)	:= 'X';
ie_material_pai_w		varchar(1)	:= 'S';
nr_seq_exame_proc_w		bigint;
ie_duplicar_proc_regra_w	varchar(01);
cd_tipo_recomendacao_w		bigint	:= -1;
ie_video_w			varchar(01)	:= 'X';
nr_seq_w			bigint;

nr_seq_atepacu_proc_w		bigint;
cd_setor_atendimento_proc_w	bigint;
dt_entrada_unidade_proc_w	timestamp;
nm_usuario_banco_w		varchar(50);
cd_setor_ativo_w		integer;
ie_lancto_auto_dt_alta_w	varchar(1);
ie_credenciado_w		varchar(1);
cd_medico_parecer_w		varchar(10);
qt_medico_w			bigint;
nr_prescr_w			bigint;
nr_seq_reg_template_w		bigint;
cd_pessoa_usuario_w		varchar(10);
cd_dieta_w		bigint	:= -1;
cd_refeicao_w	varchar(3) := '0';
cd_material_exame_w		varchar(20)	:= '0';
cd_procedencia_w		integer		:= 0;
dt_inicio_procedimento_w	timestamp;
nr_min_duracao_w			bigint;
ie_forma_apresentacao_w			smallint;
ie_lanc_aut_assumir_pac_w		varchar(10);
dt_atual_trunc_w			timestamp	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp());
ie_paciente_isolado_w		varchar(1);
ie_medico_profissional_w	varchar(10) := 'N';
nr_seq_conselho_w		bigint;
sg_conselho_w			varchar(10);
cd_cgc_orig_w			varchar(14);
ie_mat_liberado_local_w		varchar(15) := 'S';
ie_valida_liberacao_mat_w	varchar(15);
ds_local_estoque_w		varchar(40);
cd_medico_referido_w		varchar(10);
qt_idade_w			double precision;
dt_liberacao_dieta_w		timestamp;
cd_cnpj_prestador_w		varchar(14);/*Geliard 07/11/2009 OS165332*/
cd_cid_doenca_w			varchar(10);/*Geliard OS178910*/
qt_liberar_dieta_w		integer;
ie_porte_w			varchar(1);
ie_utiliza_regra_uso_w		varchar(1);
cd_medico_diagnostico_w		varchar(10);
ds_erro_ww			varchar(255) := '';
ie_lanc_sus_setor_int_w		varchar(1) := 'N';
ie_destino_dieta_w		varchar(2);
ds_ret_w			bigint;
nr_seq_conjunto_w		bigint	:= 0;
ie_sexo_w			varchar(1);
nr_acompanhantes_w		bigint:= 0;
nr_cirurgia_propaci_w		bigint;
ie_vincula_cirur_lanc_w		varchar(1);
cd_medico_espec_w		varchar(10);
ie_escala_pep_w			varchar(10);
nr_seq_classif_medico_w		bigint;
cd_medico_equipe_w		varchar(10);		
nr_seq_equipe_w			bigint;
qt_equipe_dia_w			bigint;
ie_atualiza_kit_w		varchar(1);
nr_seq_tipo_pg_w		bigint	:= 0;
qt_dias_internacao_w		bigint;
cd_unidade_basica_w             varchar(10)	:= '0';
cd_unidade_compl_w              varchar(10)	:= '0';
nr_seq_tipo_servico_w		bigint;
nm_tabela_w			varchar(50)	:= 'XPTO';
nm_atributo_w			varchar(50)	:= 'XPTO';
ie_funcao_medico_proc_w		varchar(10);
nr_seq_proc_interno_aux_w	bigint;
ie_excluir_princ_conta_w	varchar(1) := 'N';
cd_proced_prescrito_w		bigint;
ds_stack_w					varchar(2000);
cd_perfil_w					bigint;
ie_inf_qt_adm_adep_w		varchar(5);
ie_existe_regra_w		char(1);
ie_existe_seq_w			varchar(1) := 'S';
ie_novo_medico_atual_w		varchar(1);
qt_registros_w			bigint := 0;
cd_medico_lanc_aut_pac_w	regra_lanc_aut_pac.cd_medico%type;

ie_situacao_w  varchar(1);
	
c01 CURSOR FOR
SELECT a.nr_sequencia,
	a.cd_setor_atendimento,
	CASE WHEN a.nr_seq_evento=211 THEN  nr_interno_conta_p  ELSE CASE WHEN ie_conv_parametro='A' THEN  0  ELSE nr_interno_conta_p END  END ,
	coalesce(a.ie_vincular_proc_princ,'S'),
	coalesce(a.ie_dispara_kit_mat,'N'),
	coalesce(a.ie_duplicar_proc_regra,'N')
from 	regra_lanc_automatico a
where	a.cd_estabelecimento				= cd_estabelecimento_w
and	coalesce(a.cd_convenio, CASE WHEN ie_conv_parametro='A' THEN  cd_convenio_w  ELSE cd_convenio_conta_w END )	= CASE WHEN ie_conv_parametro='A' THEN  cd_convenio_w  ELSE cd_convenio_conta_w END
and	coalesce(a.ie_tipo_convenio, ie_tipo_convenio_w)	= ie_tipo_convenio_w
and (coalesce(a.ie_tipo_atendimento,ie_tipo_atendimento_w)= ie_tipo_atendimento_w or	coalesce(ie_tipo_atendimento_w::text, '') = '')
and (a.nr_seq_evento				= nr_seq_evento_p)
and	((coalesce(a.cd_medico, cd_medico_filtro_w)	= cd_medico_filtro_w) or (coalesce(cd_medico_filtro_w::text, '') = ''))
and	(((ds_adicional_3_p = 'PRESCRICAO') and (coalesce(a.cd_procedimento::text, '') = '')) or ((coalesce(ds_adicional_3_p,'X') <> 'PRESCRICAO') and (coalesce(a.cd_procedimento,cd_proc_propaci_w) = cd_proc_propaci_w or coalesce(cd_proc_propaci_w::text, '') = '')))
and	(((ds_adicional_3_p = 'PRESCRICAO') and (coalesce(a.cd_area_procedimento::text, '') = '')) or ((coalesce(ds_adicional_3_p,'X') <> 'PRESCRICAO') and (coalesce(a.cd_area_procedimento,cd_area_proc_w)= cd_area_proc_w 	or coalesce(cd_area_proc_w::text, '') = '')))
and	(((ds_adicional_3_p = 'PRESCRICAO') and (coalesce(a.cd_especialidade_proc::text, '') = '')) or ((coalesce(ds_adicional_3_p,'X') <> 'PRESCRICAO') and (coalesce(a.cd_especialidade_proc,cd_especial_proc_w) = cd_especial_proc_w or coalesce(cd_especial_proc_w::text, '') = '')))
and	(((ds_adicional_3_p = 'PRESCRICAO') and (coalesce(a.cd_grupo_proc::text, '') = '')) or ((coalesce(ds_adicional_3_p,'X') <> 'PRESCRICAO') and (coalesce(a.cd_grupo_proc,cd_grupo_proc_w)	= cd_grupo_proc_w or coalesce(cd_grupo_proc_w::text, '') = '')))
and	((coalesce(a.cd_edicao_amb,cd_edicao_amb_w)	= cd_edicao_amb_w) or (coalesce(cd_edicao_amb_w::text, '') = ''))
and (coalesce(a.nr_seq_exame,nr_seq_exame_propaci_w)	= nr_seq_exame_propaci_w)
and	coalesce(a.cd_categoria, cd_categoria_w)	= cd_categoria_w
and	((coalesce(a.cd_motivo_alta, cd_motivo_alta_w)	= cd_motivo_alta_w) or (coalesce(cd_motivo_alta_w::text, '') = ''))
and (coalesce(a.nr_seq_proc_interno, nr_seq_proc_interno_w) = nr_seq_proc_interno_w)
and	((coalesce(ie_clinica::text, '') = '') or (ie_clinica = ie_clinica_w))
and	((coalesce(cd_tipo_acomodacao::text, '') = '') or (coalesce(cd_tipo_acomodacao_w::text, '') = '') or (cd_tipo_acomodacao = cd_tipo_acomodacao_w))
and	((coalesce(cd_tipo_anestesia::text, '') = '') or (coalesce(cd_tipo_anestesia_w::text, '') = '') or (cd_tipo_anestesia = cd_tipo_anestesia_w))
and	((coalesce(cd_especialidade::text, '') = '') or (coalesce(cd_especialidade_w::text, '') = '') or (cd_especialidade = cd_especialidade_w))
--and	((nr_seq_classificacao is null) or (nr_seq_classificacao_w is null) or (nr_seq_classificacao = nr_seq_classificacao_w))
and	coalesce(nr_seq_classificacao,coalesce(nr_seq_classificacao_w,0))	= coalesce(nr_seq_classificacao_w,0)
--and	((nr_anos_w = 999) or (nr_anos_w between nvl(qt_ano_min,0) and nvl(qt_ano_max,999)))
and	coalesce(qt_idade_w,1) between coalesce(obter_idade_lancto_auto(a.nr_sequencia,'MIN'),0) and coalesce(obter_idade_lancto_auto(a.nr_sequencia,'MAX'),9999999)
and	((coalesce(a.cd_funcao::text, '') = '') or (cd_funcao_w = 0) or (a.cd_funcao = cd_funcao_w))
and	(((nr_seq_evento_p in (12,26,36)) and (obter_se_medico_especialidade(a.nr_sequencia,cd_medico_espec_w) = 'S')) or (nr_seq_evento_p not in (12,26,36)))
and	coalesce(cd_plano_convenio, cd_plano_convenio_w)	= cd_plano_convenio_w
and	((coalesce(ie_evolucao_clinica_w::text, '') = '') or (coalesce(a.ie_evolucao_clinica,ie_evolucao_clinica_w) = ie_evolucao_clinica_w)) 
and	coalesce(a.nr_seq_forma_org, nr_seq_forma_org_w)	= nr_seq_forma_org_w 	
and	coalesce(a.nr_seq_grupo, nr_seq_grupo_w)		= nr_seq_grupo_w 	
and	coalesce(a.nr_seq_subgrupo, nr_seq_subgrupo_w)	= nr_seq_subgrupo_w
and	coalesce(a.nr_seq_conjunto,nr_seq_conjunto_w)	= nr_seq_conjunto_w
and (coalesce(a.ie_carater_inter, coalesce(ie_carater_atend_w, 0))	= coalesce(ie_carater_atend_w, 0))
and 	coalesce(ie_porte, coalesce(ie_porte_w,'0')) = coalesce(ie_porte_w, '0')
and	((cd_tipo_recomendacao_w = -1 and (coalesce(cd_tipo_recomendacao::text, '') = '')) or (coalesce(cd_tipo_recomendacao,cd_tipo_recomendacao_w) = cd_tipo_recomendacao_w))
and	((cd_dieta_w = -1 and (coalesce(cd_dieta::text, '') = '')) or (coalesce(cd_dieta,cd_dieta_w) = cd_dieta_w))
and	((cd_refeicao_w = '0' and (coalesce(cd_refeicao::text, '') = '')) or (coalesce(cd_refeicao,cd_refeicao_w) = cd_refeicao_w))
and	((coalesce(ie_dieta_liberada,'N') = 'N') or ((coalesce(ie_dieta_liberada,'S') = 'S') and (coalesce(qt_liberar_dieta_w,0) > 0)))
and	((ie_video_w = 'X') or (coalesce(ie_video, 'N') = 'N') or ((coalesce(ie_video, 'N') = 'S') and (coalesce(ie_video, coalesce(ie_video_w, 'X')) = coalesce(ie_video_w, 'X'))))
and	coalesce(cd_procedencia,cd_procedencia_w)	= cd_procedencia_w
--and 	(((nr_seq_evento_p = 26) and ((ie_paciente_isolado is null) or (ie_paciente_isolado = ie_paciente_isolado_w))) or (nr_seq_evento_p <> 26))
and	(((nr_seq_evento_p in (26,39)) and ((coalesce(ie_paciente_isolado,'A') = 'A') or (coalesce(ie_paciente_isolado,'A') = ie_paciente_isolado_w))) or (nr_seq_evento_p not in (26,39)))
and	ie_situacao					= 'A'
and (coalesce(ie_feriado,'N')	= 'N' or	coalesce(ie_feriado,'N')				= dia_feriado_w)
and	((coalesce(ie_lado_w, 'X')	= 'X') or (coalesce(ie_lado, ie_lado_w) = ie_lado_w))
and	coalesce(cd_material_exame,cd_material_exame_w)	= cd_material_exame_w
and	((coalesce(dt_dia_semana, dia_semana_w) = dia_semana_w) or (dt_dia_semana = 9))
and	coalesce(ie_tipo_guia,coalesce(ie_tipo_guia_w,'0'))	= coalesce(ie_tipo_guia_w,'0')
and 	((coalesce(a.ie_credenciado,'T') = 'T') or (a.ie_credenciado 	= ie_credenciado_w))
and	((coalesce(a.ie_destino_dieta, coalesce(ie_destino_dieta_w,'T')) = coalesce(ie_destino_dieta_w,'T')) or (a.ie_destino_dieta = 'T'))
and	dt_atual_trunc_w between coalesce(dt_inicio_vigencia,dt_atual_trunc_w) and fim_dia(coalesce(dt_final_vigencia,dt_atual_trunc_w))
and	coalesce(ie_sexo, coalesce(ie_sexo_w, 'I')) = coalesce(ie_sexo_w, 'I')
and (coalesce(ie_escala_pep,ie_escala_pep_w)	= ie_escala_pep_w  or (coalesce(ie_escala_pep::text, '') = ''))
and 	((coalesce(ie_acompanhante, 'N') = 'N') or ((coalesce(ie_acompanhante,'N') = 'S') and (nr_acompanhantes_w > 0)))
and (coalesce(nr_seq_classif_medico, coalesce(nr_seq_classif_medico_w,0)) = coalesce(nr_seq_classif_medico_w,0))
and 	((coalesce(nr_seq_equipe::text, '') = '') or (obter_se_medico_equipe(nr_seq_equipe, cd_medico_equipe_w) = 'S'))
and	qt_dias_internacao_w between coalesce(QT_DIAS_INTER_INICIO, qt_dias_internacao_w) and coalesce(QT_DIAS_INTER_FINAL, qt_dias_internacao_w)
and	coalesce(nr_seq_tipo_pg,nr_seq_tipo_pg_w)	= nr_seq_tipo_pg_w
and	((nr_seq_evento_p <> 40) or ((nr_seq_evento_p = 40) and (coalesce(cd_unidade_basica, coalesce(cd_unidade_basica_w,'0')) = coalesce(cd_unidade_basica_w,'0')) 
	and (coalesce(cd_unidade_compl, coalesce(cd_unidade_compl_w,'0')) = coalesce(cd_unidade_compl_w,'0'))))
and 	coalesce(nr_seq_tipo_servico, coalesce(nr_seq_tipo_servico_w,0)) = coalesce(nr_seq_tipo_servico_w,0)
and	coalesce(nm_tabela,nm_tabela_w)	= nm_tabela_w
and	coalesce(nm_atributo,nm_atributo_w)	= nm_atributo_w
and (coalesce(dt_execucao_w, clock_timestamp()) between 
        ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(coalesce(dt_execucao_w, clock_timestamp()), coalesce(hr_inicial, pkg_date_utils.get_Time(00,00,00)))
					and
        ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(coalesce(dt_execucao_w, clock_timestamp()), coalesce(hr_final, pkg_date_utils.get_Time(23,59,59))))
order by
	coalesce(a.ie_conv_parametro, 'A'),
	coalesce(a.cd_medico,0),
	coalesce(a.cd_setor_atendimento,0),
	coalesce(a.ie_tipo_atendimento,0),
	coalesce(a.cd_convenio,0),
	coalesce(a.ie_tipo_convenio,0),
	coalesce(a.cd_edicao_amb,0),
	coalesce(a.cd_procedimento,0),
	coalesce(a.cd_grupo_proc,0),
	coalesce(a.cd_especialidade_proc,0),
	coalesce(a.cd_area_procedimento,0),
	coalesce(a.nr_seq_exame,0),
	coalesce(a.ie_clinica,0),
	coalesce(a.cd_funcao,0),
	coalesce(a.ie_lado,' '),
	coalesce(a.cd_material_exame,' '),
	coalesce(nr_seq_classificacao,0),
	coalesce(nr_seq_classif_medico,0),
	coalesce(nr_seq_equipe,0),
	coalesce(nr_seq_tipo_servico,0),
	coalesce(obter_prior_espec_medico(cd_medico_espec_w,a.cd_espec_medic_atend),9999) desc;
	
c02 CURSOR FOR
	SELECT	a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_exame,
		a.cd_material,
		substr(obter_dados_material_estab(b.cd_material, cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo,
		CASE WHEN a.ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * CASE WHEN coalesce(qt_procedimento_w,0)=0 THEN 1  ELSE qt_procedimento_w END  END ,
		coalesce(ie_medico_atendimento,'N'),
		coalesce(ie_local_estoque,'N'),
		CASE WHEN ie_forma_func_medico='P' THEN coalesce(ie_funcao_medico, ie_funcao_medico_w)  ELSE ie_funcao_medico END ,
		--nvl(a.tx_procedimento,100),
		a.tx_procedimento,
		coalesce(a.ie_regra_guia,'RC'),
		a.nr_seq_proc_interno,
		coalesce(a.ie_consiste_item,'N'),
    	coalesce(a.ie_consiste_proc_int,'N'),
		coalesce(a.nr_seq_proc_interno, 0),
		coalesce(a.ie_proc_princ_atend, 'N'),
		a.nr_seq_lanc,
		a.cd_estab_item,
		a.cd_setor_item,
		nr_min_duracao,
		a.cd_cnpj_prestador,
		a.cd_cid_doenca,
		coalesce(a.ie_novo_medico_atual, 'N'),
		a.cd_medico
	from 	material		b, 
		regra_lanc_aut_pac	a
	where	a.nr_seq_regra 	= nr_seq_regra_w
	and	b.ie_situacao 	= 'A'
	and 	coalesce(a.ie_adic_orcamento,'N') = 'N'
	and	(a.cd_material IS NOT NULL AND a.cd_material::text <> '')
	and	a.cd_material 	= b.cd_material
	and	((coalesce(ie_retorno,'N') = 'S') or ((coalesce(ie_retorno,'N') = 'N') and (coalesce(nr_atend_original_w::text, '') = '')) 
				 or ((coalesce(ie_retorno,'N') = 'R') and (nr_atend_original_w IS NOT NULL AND nr_atend_original_w::text <> '')))
	and	((nr_anos_w = 999) or (nr_anos_w between coalesce(qt_ano_min,0) and coalesce(qt_ano_max,999)))
	
union all

	SELECT	a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_exame,
		a.cd_material,
		substr(obter_dados_material_estab(b.cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo,
		CASE WHEN a.ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * qt_procedimento_w END ,
		coalesce(ie_medico_atendimento,'N'),
		coalesce(ie_local_estoque,'N'),
		CASE WHEN ie_forma_func_medico='P' THEN coalesce(ie_funcao_medico, ie_funcao_medico_w)  ELSE ie_funcao_medico END ,
		--nvl(a.tx_procedimento,100),
		a.tx_procedimento,
		coalesce(a.ie_regra_guia,'RC'),
		a.nr_seq_proc_interno,
		coalesce(a.ie_consiste_item,'N'),
    	coalesce(a.ie_consiste_proc_int,'N'),
		coalesce(a.nr_seq_proc_interno, 0),
		coalesce(a.ie_proc_princ_atend, 'N'),
		a.nr_seq_lanc,
		a.cd_estab_item,
		a.cd_setor_item,
		nr_min_duracao,
		a.cd_cnpj_prestador,
		a.cd_cid_doenca, 
		coalesce(a.ie_novo_medico_atual, 'N'),
		a.cd_medico
	from 	material		b, 
		regra_lanc_aut_pac	a
	where	a.nr_seq_regra 	= nr_seq_regra_w
	and	b.ie_situacao 	= 'A'
	and 	coalesce(a.ie_adic_orcamento,'N') = 'N'
	and	(a.cd_material IS NOT NULL AND a.cd_material::text <> '')
	and	a.cd_material 	= b.cd_material
	and (coalesce(ie_retorno,'N') = 'P') 
	and	ie_primeiro_atend_w	= 'S'
	and	((nr_anos_w = 999) or (nr_anos_w between coalesce(qt_ano_min,0) and coalesce(qt_ano_max,999)))
	
union all

	select	cd_procedimento,
		ie_origem_proced,
		nr_seq_exame,
		cd_material,
		'XX',
		CASE WHEN ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * qt_procedimento_w END ,
		coalesce(ie_medico_atendimento,'N'),
		coalesce(ie_local_estoque,'N'),
		CASE WHEN ie_forma_func_medico='P' THEN coalesce(ie_funcao_medico, ie_funcao_medico_w)  ELSE ie_funcao_medico END ,
		--nvl(tx_procedimento,100),
		tx_procedimento,
		coalesce(ie_regra_guia,'RC'),
		nr_seq_proc_interno,
		coalesce(ie_consiste_item,'N'),
    	coalesce(ie_consiste_proc_int,'N'),
		coalesce(nr_seq_proc_interno, 0),
		coalesce(ie_proc_princ_atend, 'N'),
		nr_seq_lanc,
		cd_estab_item,
		cd_setor_item,
		nr_min_duracao,
		cd_cnpj_prestador,
		cd_cid_doenca, 
		coalesce(ie_novo_medico_atual, 'N'),
		cd_medico
	from 	regra_lanc_aut_pac
	where	nr_seq_regra  	= nr_seq_regra_w
	and 	coalesce(ie_adic_orcamento,'N') = 'N'
	and	((coalesce(ie_retorno,'N') = 'S') or ((coalesce(ie_retorno,'N') = 'N') and (coalesce(nr_atend_original_w::text, '') = '')) 
				 or ((coalesce(ie_retorno,'N') = 'R') and (nr_atend_original_w IS NOT NULL AND nr_atend_original_w::text <> '')))
	and	((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '' AND ie_origem_proced IS NOT NULL AND ie_origem_proced::text <> '') or (nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '') or (nr_seq_exame IS NOT NULL AND nr_seq_exame::text <> ''))
	and	((nr_anos_w = 999) or (nr_anos_w between coalesce(qt_ano_min,0) and coalesce(qt_ano_max,999)))
	
union all

	select	cd_procedimento,
		ie_origem_proced,
		nr_seq_exame,
		cd_material,
		'XX',
		CASE WHEN ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * qt_procedimento_w END ,
		coalesce(ie_medico_atendimento,'N'),
		coalesce(ie_local_estoque,'N'),
		CASE WHEN ie_forma_func_medico='P' THEN coalesce(ie_funcao_medico, ie_funcao_medico_w)  ELSE ie_funcao_medico END ,
		--nvl(tx_procedimento,100),
		tx_procedimento,
		coalesce(ie_regra_guia,'RC'),
		nr_seq_proc_interno,
		coalesce(ie_consiste_item,'N'),
    	coalesce(ie_consiste_proc_int,'N'),
		coalesce(nr_seq_proc_interno, 0),
		coalesce(ie_proc_princ_atend, 'N'),
		nr_seq_lanc,
		cd_estab_item,
		cd_setor_item,
		nr_min_duracao,
		cd_cnpj_prestador,
		cd_cid_doenca,
		coalesce(ie_novo_medico_atual, 'N'),
		cd_medico
	from 	regra_lanc_aut_pac 
	where	nr_seq_regra  	= nr_seq_regra_w
	and 	coalesce(ie_adic_orcamento,'N') = 'N'
	and (coalesce(ie_retorno,'N') = 'P') 
	and	ie_primeiro_atend_w	= 'S'
	and	((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '' AND ie_origem_proced IS NOT NULL AND ie_origem_proced::text <> '') or (nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '') or (nr_seq_exame IS NOT NULL AND nr_seq_exame::text <> ''))
	and	((nr_anos_w = 999) or (nr_anos_w between coalesce(qt_ano_min,0) and coalesce(qt_ano_max,999)));
	
c03 CURSOR FOR
	SELECT cd_especialidade
	from   medico_especialidade
	where  cd_pessoa_fisica	= cd_medico_executor_w
	and    nr_seq_prioridade in (	SELECT min(x.nr_seq_prioridade) 
					from medico_especialidade x 
					where x.cd_pessoa_fisica = cd_medico_executor_w);	


BEGIN
delete from regra_lanc_aut_mat_consist
where nr_atendimento = nr_atendimento_p;

cd_tipo_recomendacao_w		:= -1;
cd_dieta_w			:= -1;
ie_video_w			:= 'X';

cd_perfil_w		:= obter_perfil_ativo;

if (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') and (nr_seq_evento_p = 30) then
	cd_tipo_recomendacao_w		:= coalesce(somente_numero(ds_adicional_1_p),0);
	if (coalesce(somente_numero(ds_adicional_4_p),0) > 0) then
		select 	max(dt_prescricao)
		into STRICT	dt_execucao_w
		from 	prescr_medica
		where 	nr_prescricao = coalesce(somente_numero(ds_adicional_4_p),0);
	end if;
end if;

if (nr_seq_evento_p	= 372) and (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') then
	ie_escala_pep_w	:= ds_adicional_1_p;
end if;

if (nr_seq_evento_p	= 381) and (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') then
	nr_seq_tipo_pg_w	:= coalesce(somente_numero(ds_adicional_1_p),0);
end if;
if (ds_adicional_2_p IS NOT NULL AND ds_adicional_2_p::text <> '') and (nr_seq_evento_p = 30) then
	cd_dieta_w			:= coalesce(somente_numero(ds_adicional_2_p),0);
end if;

if (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') and (nr_seq_evento_p	= 232) then
	nr_seq_reg_template_w	:= ds_adicional_1_p;
end if;

nr_seq_tipo_servico_w:= 0;
if (nr_seq_evento_p = 26) then

	select	count(*)
	into STRICT	qt_liberar_dieta_w
	from	atend_categoria_convenio where		nr_seq_interno	= obter_atecaco_atendimento(nr_atendimento_p)
	and		((ie_lib_dieta IS NOT NULL AND ie_lib_dieta::text <> '') or (coalesce(qt_dieta_acomp,0) <> 0)) LIMIT 1;
	
elsif (nr_seq_evento_p = 291) then

	if (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') then
		select	coalesce(max(cd_refeicao),'0'),
			coalesce(max(dt_liberacao),clock_timestamp()),
			max(ie_destino_dieta)
		into STRICT	cd_refeicao_w,
			dt_liberacao_dieta_w,
			ie_destino_dieta_w
		from	mapa_dieta
		where	nr_sequencia = coalesce(somente_numero(ds_adicional_1_p),0);
		
		select	count(*)
		into STRICT	qt_liberar_dieta_w
		from	atend_categoria_convenio where		nr_seq_interno	= obter_atecaco_atendimento(nr_atendimento_p)
		and		((ie_lib_dieta IS NOT NULL AND ie_lib_dieta::text <> '') or (coalesce(qt_dieta_acomp,0) <> 0)) LIMIT 1;
	end if;
	
elsif (nr_seq_evento_p	= 332) then
		
	select	coalesce(max(nr_seq_conjunto),0)
	into STRICT	nr_seq_conjunto_w
	from	CM_CONJUNTO_CONT
	where	nr_sequencia	= ds_adicional_1_p
	and	coalesce(ie_situacao,'A') = 'A';	

elsif (nr_seq_evento_p	= 391) then	

	nr_seq_tipo_servico_w:= coalesce(somente_numero(ds_adicional_1_p),0);
	
end if;

if (nr_seq_evento_p	in (401,412)) then
	nm_tabela_w	:= coalesce(ds_adicional_1_p,'XPTO');
	nm_atributo_w	:= coalesce(ds_adicional_2_p,'XPTO');
end if;

nr_seq_propaci_w	:= nr_sequencia_p;
nr_seq_regra_w		:= 0;
cd_tipo_acomodacao_w	:= null;
cd_especialidade_w	:= null;
nr_cirurgia_w		:= null;

if (nr_seq_evento_p in (12, 123, 28, 321)) then
	nr_seq_propaci_w	:= 0;
	if (nr_seq_evento_p	= 28) then
	
		nr_cirurgia_w	:= nr_sequencia_p;
		
		select	max(cd_tipo_anestesia),
			max(cd_setor_atendimento),
			max(ie_porte)
		into STRICT	cd_tipo_anestesia_w,
			cd_setor_atendimento_w,
			ie_porte_w
		from	cirurgia	
		where	nr_cirurgia	= nr_cirurgia_w;

		if (coalesce(cd_tipo_anestesia_w::text, '') = '') and (coalesce(obter_valor_param_usuario(900,242,cd_perfil_w,nm_usuario_p,0),'S') = 'N') then
			cd_tipo_anestesia_w:= '0';
		end if;
		
		begin	/*inclui esse select para buscar o procedimento da cirurgia e sua estrutura , fabricio em 29/10/2008 os 114537 */
		select	a.cd_procedimento_princ,
			a.ie_origem_proced,
			b.cd_area_procedimento,
			b.cd_especialidade,
			b.cd_grupo_proc,
			coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(b.cd_procedimento, a.ie_origem_proced, 'C', 'F'),'F'),1,10),0),
			coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(b.cd_procedimento, a.ie_origem_proced, 'C', 'G'),'G'),1,10),0),
			coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(b.cd_procedimento, a.ie_origem_proced, 'C', 'S'),'S'),1,10),0)
		into STRICT	cd_proc_propaci_w,
			ie_origem_propaci_w,
			cd_area_proc_w,
			cd_especial_proc_w,
			cd_grupo_proc_w,
			nr_seq_forma_org_w,
			nr_seq_grupo_w,
			nr_seq_subgrupo_w
		from	cirurgia a,
			estrutura_procedimento_v b
		where	a.nr_cirurgia		= nr_cirurgia_w
		and	b.cd_procedimento	= a.cd_procedimento_princ
		and	b.ie_origem_proced	= a.ie_origem_proced;
		exception
			when others then
			cd_proc_propaci_w	:=	null;
			ie_origem_propaci_w	:= 	null;
			cd_area_proc_w		:=	null;
			cd_especial_proc_w	:=	null;
			cd_grupo_proc_w		:= 	null;
		end;
		
	end if;	
end if;

if (nr_seq_evento_p = 36) then
	begin

	select	cd_motivo_alta
	into STRICT	cd_motivo_alta_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_p;

	end;
end if;

if (nr_seq_evento_p in (26, 40, 36, 39, 82,192,221)) then
	CALL gerar_lanc_auto_atendimento(nr_atendimento_p, cd_local_estoque_p, nr_seq_evento_p, nm_usuario_p);
end if;

begin
select	a.ie_tipo_atendimento,
	a.nr_atend_original,
	a.cd_estabelecimento,
	b.cd_cgc,
	a.cd_setor_atendimento,
	a.cd_medico_resp,
	a.cd_convenio,
	c.ie_tipo_convenio,
	a.cd_categoria,
	a.dt_entrada_unidade,
	a.dt_entrada,
	CASE WHEN obter_valor_conv_estab(c.cd_convenio, b.cd_estabelecimento, 'IE_DOC_CONVENIO')='N' THEN  null WHEN obter_valor_conv_estab(c.cd_convenio, b.cd_estabelecimento, 'IE_DOC_CONVENIO')='S' THEN  coalesce(a.cd_senha, a.nr_doc_convenio)  ELSE a.nr_doc_convenio END , /* edgar  06/10/2004 , os 11672 */
	a.dt_alta,
	a.nr_seq_atepacu,
	a.cd_senha,
	a.ie_clinica,
	a.cd_tipo_acomod_unid,
	coalesce(nr_anos,999),
	a.nr_seq_classificacao,
	coalesce(a.cd_plano_convenio,'0'),
	ie_tipo_guia,
	cd_pessoa_fisica,
	ie_carater_inter_sus,
	coalesce(cd_procedencia,0),
	coalesce(ie_paciente_isolado,'N'),
	coalesce(a.ie_sexo,'I')
into STRICT	ie_tipo_atendimento_w,
	nr_atend_original_w,
	cd_estabelecimento_w,
	cd_cgc_w,
	cd_setor_atendimento_w,
	cd_medico_resp_w,
	cd_convenio_w,
	ie_tipo_convenio_w,
	cd_categoria_w,
	dt_entrada_unidade_w,
	dt_entrada_w,
	nr_doc_convenio_w,
	dt_alta_w,
	nr_seq_atepacu_w,
	cd_senha_w,
	ie_clinica_w,
	cd_tipo_acomodacao_w,
	nr_anos_w,
	nr_seq_classificacao_w,
	cd_plano_convenio_w,
	ie_tipo_guia_w,
	cd_pessoa_fisica_w,
	ie_carater_atend_w,
	cd_procedencia_w,
	ie_paciente_isolado_w,
	ie_sexo_w
from 	estabelecimento b,
	convenio c,
	atendimento_paciente_v a
where	a.cd_estabelecimento	= b.cd_estabelecimento
and	c.cd_convenio		= a.cd_convenio
and	a.nr_atendimento	= nr_atendimento_p;
exception
	when others then
		cd_estabelecimento_w 	:= 9999;
		cd_procedencia_w	:= 0;
end;

begin
select	max(obter_idade(b.dt_nascimento,coalesce(b.dt_obito,clock_timestamp()),'DIA'))
into STRICT	qt_idade_w
from	pessoa_fisica b
where	b.cd_pessoa_fisica	= cd_pessoa_fisica_w;
exception
when others then
	qt_idade_w	:= 0;
end;

select 	max(cd_medico_referido)
into STRICT	cd_medico_referido_w
from 	atendimento_paciente
where 	nr_atendimento = nr_atendimento_p;

if (nr_seq_evento_p = 36) then
	
	begin
	select 	coalesce(max(ie_lancto_auto_dt_alta),'N')
	into STRICT	ie_lancto_auto_dt_alta_w
	from 	convenio_estabelecimento
	where 	cd_convenio = cd_convenio_w
	and 	cd_estabelecimento = cd_estabelecimento_w;
	exception
	when others then
		ie_lancto_auto_dt_alta_w := 'N';
	end;
	
	if (ie_lancto_auto_dt_alta_w = 'S') then
		dt_execucao_w:= dt_alta_w;
	end if;
	
end if;

select	coalesce(max('S'),'N')
into STRICT	ie_existe_regra_w
from	atendimento_paciente where		cd_pessoa_fisica	= cd_pessoa_fisica_w
and		nr_atendimento		<> nr_atendimento_p LIMIT 1;

if (ie_existe_regra_w = 'N') then
	ie_primeiro_atend_w	:= 'S';
else
	ie_primeiro_atend_w	:= 'N';
end if;

begin
select	cd_convenio_parametro,
	cd_categoria_parametro
into STRICT	cd_convenio_conta_w,
	cd_categoria_conta_w
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_p;
exception
	when others then
		cd_convenio_conta_w 	:= cd_convenio_w;
		cd_categoria_conta_w	:= cd_categoria_w;
end;

select	max(cd_funcao_medico),
	max(ie_lanc_aut_assumir_pac),
	coalesce(max(ie_lanc_sus_setor_int),'N')
into STRICT	ie_funcao_medico_w,
	ie_lanc_aut_assumir_pac_w,
	ie_lanc_sus_setor_int_w
from	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_w;

/*	entrada do paciente no setor */

ie_entrar_cursor_w	:= 'S';
if (nr_seq_evento_p in (30,40,41,61)) then /* elemar - 12/02/04 - inclui 30,41,61 */
	nr_seq_propaci_w	:= 0;
	nr_seq_atepacu_w	:= nr_sequencia_p;
	select	coalesce(max(cd_setor_atendimento), cd_setor_atendimento_w),
		max(dt_entrada_unidade),
		max(cd_tipo_acomodacao),
		max(cd_unidade_basica),
		max(cd_unidade_compl)
	into STRICT	cd_setor_atendimento_w,
		dt_entrada_unidade_w,
		cd_tipo_acomodacao_w,
		cd_unidade_basica_w,
		cd_unidade_compl_w
	from	atend_paciente_unidade
	where	nr_seq_interno	= nr_sequencia_p;
	
	if (nr_seq_evento_p = 40) then
		select	coalesce(max('N'),'S')
		into STRICT	ie_entrar_cursor_w
		from	material_atend_paciente where		nr_seq_atepacu	= nr_sequencia_p LIMIT 1;
		
		if (ie_entrar_cursor_w = 'S') then
			select	coalesce(max('N'),'S')
			into STRICT	ie_entrar_cursor_w
			from	procedimento_paciente where		nr_seq_atepacu	= nr_sequencia_p LIMIT 1;
		end if;
	end if;
end if;

if (coalesce(nr_seq_propaci_w,0) > 0) and (nr_seq_evento_p <> 12) and (nr_seq_evento_p <> 123) then
	begin
	/* buscar dados do procedimento executado */

	begin
	select	coalesce(cd_proc_adic_p, a.cd_procedimento),
		coalesce(ie_origem_adic_p,a.ie_origem_proced),
			a.cd_medico_executor,
			a.cd_medico_req,
			a.tx_procedimento,
			b.cd_area_procedimento,
			b.cd_especialidade,
			b.cd_grupo_proc,
			a.dt_procedimento,
			a.cd_setor_atendimento,
			a.qt_porte_anestesico,
			a.dt_procedimento,
			a.qt_procedimento,
			coalesce(a.nr_seq_exame,0),
			coalesce(coalesce(nr_seq_proc_interno_adic_p,a.nr_seq_proc_interno),0),
			a.cd_senha,
			a.nr_doc_convenio,
			a.nr_prescricao,
			a.nr_sequencia_prescricao,
			a.cd_especialidade,
			a.nr_interno_conta,
			a.ie_integracao,
			coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(coalesce(cd_proc_adic_p, a.cd_procedimento), coalesce(ie_origem_adic_p,a.ie_origem_proced), 'C', 'F'),'F'),1,10),0),
			coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(coalesce(cd_proc_adic_p, a.cd_procedimento), coalesce(ie_origem_adic_p,a.ie_origem_proced), 'C', 'G'),'G'),1,10),0),
			coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(coalesce(cd_proc_adic_p, a.cd_procedimento), coalesce(ie_origem_adic_p,a.ie_origem_proced), 'C', 'S'),'S'),1,10),0),
			a.nr_seq_exame,
			coalesce(ie_video, 'X'),
			nr_seq_atepacu,
			cd_setor_atendimento,
			dt_entrada_unidade,
			a.nr_cirurgia,
			a.ie_funcao_medico
	into STRICT		cd_proc_propaci_w,
			ie_origem_propaci_w,
			cd_medico_propaci_w,
			cd_medico_req_w,
			tx_proc_propaci_w,
			cd_area_proc_w,
			cd_especial_proc_w,
			cd_grupo_proc_w,
			dt_execucao_w,
			cd_setor_atendimento_w,
			qt_porte_anestesico_w,
			dt_proc_propaci_w,
			qt_procedimento_w,
			nr_seq_exame_propaci_w,
			nr_seq_proc_interno_w,
			cd_senha_w,
			nr_doc_propaci_w,
			nr_prescricao_w,
			nr_sequencia_prescricao_w,
			cd_especialidade_w,
			nr_interno_conta_w,
			ie_integracao_w,
			nr_seq_forma_org_w,
			nr_seq_grupo_w,
			nr_seq_subgrupo_w,
			nr_seq_exame_proc_w,
			ie_video_w,
			nr_seq_atepacu_proc_w,
			cd_setor_atendimento_proc_w,
			dt_entrada_unidade_proc_w,
			nr_cirurgia_propaci_w,
			ie_funcao_medico_proc_w
	from		procedimento_paciente a,
			estrutura_procedimento_v b
	where		a.nr_sequencia		= nr_seq_propaci_w
	and		b.cd_procedimento	= coalesce(cd_proc_adic_p,a.cd_procedimento)
	and		b.ie_origem_proced	= coalesce(ie_origem_adic_p,a.ie_origem_proced);
	exception
			when others then
			cd_proc_propaci_w := null;
	end;

	select		coalesce(max(nm_usuario_banco), 'XXX')
	into STRICT		nm_usuario_banco_w
	from		setor_atendimento
	where		cd_setor_atendimento	= cd_setor_atendimento_proc_w;
	
	select		max(cd_medico)
	into STRICT		cd_medico_prescr_w
	from		prescr_medica
	where		nr_prescricao	= nr_prescricao_w;
	
	cd_funcao_w	:= coalesce(obter_funcao_ativa,0);
	
	ie_lado_w	:= 'X';
	
	if (ds_adicional_2_p IS NOT NULL AND ds_adicional_2_p::text <> '') and (nr_seq_evento_p	= 34) then
		cd_material_exame_w	:= ds_adicional_2_p;
	end if;
	
	if (nr_seq_evento_p	= 34) and (ds_adicional_4_p IS NOT NULL AND ds_adicional_4_p::text <> '') and (ds_adicional_4_p	in ('D','E','A')) then
		ie_lado_w		:= ds_adicional_4_p;
	elsif (cd_funcao_w <> 722) and (coalesce(nr_seq_exame_proc_w::text, '') = '') then
		
		if (coalesce(cd_procedimento_p::text, '') = '') then
			select	coalesce(max(nr_sequencia),0),
				coalesce(max(ie_lado), 'Z')
			into STRICT	nr_seq_w,
				ie_lado_w
			from 	prescr_procedimento
			where	nr_prescricao		= nr_prescricao_w
			and	nr_sequencia		= nr_sequencia_prescricao_w;
		end if;
		
		if (nr_seq_w	= 0) then
			ie_lado_w	:= 'X';
		end if;
	end if;

	end;
end if;

if (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') and (nr_seq_evento_p = 30) then
	begin
	select	count(*)
	into STRICT	qt_procedimento_w
	from	prescr_rec_hor
	where	nr_prescricao	= somente_numero(ds_adicional_4_p)
	and	cd_recomendacao = cd_tipo_recomendacao_w
	and	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S'
	having count(*)	> 0;
	
	exception
	when others then
		qt_procedimento_w	:= 1;
	end;
end if;

/* obter feriado */

begin
select 	'S'
into STRICT 	dia_feriado_w
from 	feriado
where 	cd_estabelecimento 			= cd_estabelecimento_w
and 	pkg_date_utils.get_time(dt_feriado, 0, 0, 0, 0) = pkg_date_utils.get_time(coalesce(dt_execucao_w, clock_timestamp()), 0, 0, 0, 0);
exception
            when others then
		dia_feriado_w	:= 'N';
end;

dia_semana_w 		:= pkg_date_utils.get_WeekDay(coalesce(dt_execucao_w, clock_timestamp()));

nr_prescr_w := 0;
if (nr_seq_evento_p = 30) then

	if (coalesce(somente_numero(ds_adicional_3_p),0) > 0) then
		nr_prescr_w	:= somente_numero(ds_adicional_3_p);
		select 	max(dt_prescricao)
		into STRICT	dt_execucao_w
		from 	prescr_medica
		where 	nr_prescricao = nr_prescr_w;
		
		if (coalesce(somente_numero(ds_adicional_4_p),0) > 0) then
			begin

			if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') then
				cd_proc_propaci_w	:= cd_procedimento_p;
				ie_origem_propaci_w	:= ie_origem_proced_p;
				nr_seq_proc_interno_w	:= nr_seq_proc_interno_p;
				qt_procedimento_w	:= qt_procedimento_p;
				nr_seq_exame_propaci_w	:= nr_seq_exame_p;
				
				select	b.cd_area_procedimento,
					b.cd_especialidade,
					b.cd_grupo_proc
				into STRICT	cd_area_proc_w,
					cd_especial_proc_w,
					cd_grupo_proc_w
				from	estrutura_procedimento_v b
				where	b.cd_procedimento	= cd_procedimento_p
				and	b.ie_origem_proced	= ie_origem_proced_p;
			else
			
				select	a.cd_procedimento,
					a.ie_origem_proced,
					b.cd_area_procedimento,
					b.cd_especialidade,
					b.cd_grupo_proc,
					coalesce(a.nr_seq_proc_interno,0),
					a.qt_procedimento,
					coalesce(a.nr_seq_exame,0)
				into STRICT	cd_proc_propaci_w,
					ie_origem_propaci_w,
					cd_area_proc_w,
					cd_especial_proc_w,
					cd_grupo_proc_w,
					nr_seq_proc_interno_w,
					qt_procedimento_w,
					nr_seq_exame_propaci_w
				from	prescr_procedimento a,
					estrutura_procedimento_v b
				where	a.nr_sequencia		= coalesce(somente_numero(ds_adicional_4_p),0)
				and	a.nr_prescricao		= nr_prescr_w
				and	b.cd_procedimento	= a.cd_procedimento
				and	b.ie_origem_proced	= a.ie_origem_proced;

			end if;
			
			end;
		end if;
	end if;
	
elsif (nr_seq_evento_p	= 39) then
	
	if (ds_adicional_4_p IS NOT NULL AND ds_adicional_4_p::text <> '') then
		dt_execucao_w		:= to_date(ds_adicional_4_p,'dd/mm/yyyy hh24:mi:ss');
	end if;
	
end if;

dt_execucao_w := coalesce(dt_execucao_w, dt_entrada_unidade_w); /* elemar 17/09/2002 - gerar lancamento na entrada do paciente  */
cd_medico_equipe_w:= null;

if (nr_seq_evento_p = 12) then

	dt_execucao_w		:= to_date(ds_adicional_2_p,'dd/mm/yyyy hh24:mi:ss');
	ie_evolucao_clinica_w	:= ds_adicional_3_p;
	cd_medico_parecer_w	:= substr(ds_adicional_4_p,1,10);
	
	begin
	select 	count(*)
	into STRICT	qt_medico_w
	from 	medico where		cd_pessoa_fisica = cd_medico_parecer_w LIMIT 1;
	exception
	when others then
		qt_medico_w:= 0;
	end;
	
	if (qt_medico_w = 0) then
		cd_medico_parecer_w:= substr(ds_adicional_1_p,1,10);
	end if;

elsif (nr_seq_evento_p = 34) then

	begin
	select	max(b.cd_tipo_anestesia)
	into STRICT	cd_tipo_anestesia_w
	from	cirurgia		b,
		procedimento_paciente	a
	where	a.nr_cirurgia		= b.nr_cirurgia
	and	a.nr_atendimento	= nr_atendimento_p
	and	a.cd_procedimento	= cd_proc_propaci_w
	and	a.ie_origem_proced	= ie_origem_propaci_w;
	exception
	when others then
		cd_tipo_anestesia_w	:= null;
	end;

elsif (nr_seq_evento_p = 82)  then

	begin
	dt_execucao_w	:= dt_entrada_unidade_w;

	select	obter_atepacu_paciente(nr_atendimento_p, 'P')
	into STRICT	nr_seq_atepacu_intern_w
	;

	select	dt_entrada_unidade
	into STRICT	dt_entrada_unidade_intern_w
	from	atend_paciente_unidade
	where 	nr_seq_interno	= nr_seq_atepacu_intern_w;
	exception
	when others then
		--Nao foi localizado setor para o atendimento: #@NR_ATENDIMENTO#@
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(191411,'NR_ATENDIMENTO='||nr_atendimento_p);
	end;

elsif (nr_seq_evento_p = 321) then

	dt_execucao_w		:= ds_adicional_3_p;
	
elsif (nr_seq_evento_p = 123) then

	select	max(dt_liberacao),
		max(ie_evolucao_clinica),
		max(cd_medico_parecer)
	into STRICT	dt_execucao_w,
		ie_evolucao_clinica_w,
		cd_medico_parecer_w
	from	evolucao_paciente
	where	cd_evolucao	= nr_sequencia_p;
	
	begin
	select 	count(*)
	into STRICT	qt_medico_w
	from 	medico where		cd_pessoa_fisica = cd_medico_parecer_w LIMIT 1;
	exception
	when others then
		qt_medico_w:= 0;
	end;
	
	if (qt_medico_w = 0) then
		cd_medico_parecer_w:= substr(ds_adicional_1_p,1,10);
	end if;
	
	cd_medico_equipe_w:= substr(ds_adicional_1_p,1,10);
	
end if;

select	max(cd_edicao_amb)
into STRICT	cd_edicao_amb_w
from	convenio_amb
where (cd_estabelecimento	= cd_estabelecimento_w)
  and (cd_convenio		= cd_convenio_w)
  and (cd_categoria		= cd_categoria_w)
  and (coalesce(ie_situacao,'A')	= 'A')
  and	(dt_inicio_vigencia	=
	(SELECT max(dt_inicio_vigencia)
	from	convenio_amb a
	where (a.cd_estabelecimento	= cd_estabelecimento_w)
	and (a.cd_convenio		= cd_convenio_w)
	and (a.cd_categoria		= cd_categoria_w)
	and (coalesce(a.ie_situacao,'A')	= 'A')
	and (a.dt_inicio_vigencia	<= dt_execucao_w)));


cd_funcao_w	:= coalesce(obter_funcao_ativa,0);

if (ie_entrar_cursor_w = 'S') then
	nr_seq_classif_medico_w:= 0;
	
	begin
	select 	coalesce(max(nr_seq_classif_medico),0),
			trunc(max(coalesce(dt_alta, clock_timestamp()) - dt_entrada)) qt_dias_internacao
	into STRICT	nr_seq_classif_medico_w,
			qt_dias_internacao_w
	from 	atendimento_paciente
	where 	nr_atendimento = nr_atendimento_p;
	exception
		when others then
		nr_seq_classif_medico_w := 0;
		qt_dias_internacao_w	:= 0;
	end;
	
	if (cd_medico_propaci_w IS NOT NULL AND cd_medico_propaci_w::text <> '') and (length(cd_medico_propaci_w) > 0) then
		cd_medico_filtro_w    := cd_medico_propaci_w;
	else
		cd_medico_filtro_w    := cd_medico_resp_w;
	end if;

	cd_medico_espec_w:= cd_medico_resp_w;

	if (nr_seq_evento_p = 12) then

		cd_medico_espec_w:= coalesce(substr(ds_adicional_1_p,1,10),cd_medico_resp_w);

	elsif (nr_seq_evento_p = 39) then  -- Calcular diaria
		
		begin
		select	count(*)
		into STRICT	nr_acompanhantes_w
		from	atendimento_acompanhante where		nr_atendimento	= nr_atendimento_p
		and		dt_execucao_w between dt_acompanhante and coalesce(DT_SAIDA, dt_execucao_w) LIMIT 1;
		exception when others then
			nr_acompanhantes_w	:= 0;		
		end;
		
	elsif (nr_seq_evento_p = 123) then

		cd_medico_filtro_w := cd_medico_parecer_w;

	elsif (nr_seq_evento_p = 321) then

		cd_medico_filtro_w := ds_adicional_2_p;

	end if;
	ie_credenciado_w	:= obter_se_medico_credenciado(cd_estabelecimento_w, cd_medico_filtro_w, cd_convenio_w, null, cd_especialidade_w, cd_categoria_w, cd_setor_atendimento_w, cd_plano_convenio_w, null, ie_tipo_atendimento_w, ie_funcao_medico_proc_w, null);
	
	open c01;
	loop
	fetch c01 into
		nr_sequencia_w,
		cd_setor_regra_w,
		nr_interno_conta_ww,
		ie_vincular_proc_princ_w,
		ie_dispara_kit_mat_w,
		ie_duplicar_proc_regra_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		if (cd_setor_regra_w IS NOT NULL AND cd_setor_regra_w::text <> '') then
			begin
			if (cd_setor_regra_w = cd_setor_atendimento_w) then
				nr_seq_regra_w	:= nr_sequencia_w;
			elsif (nr_seq_evento_p = 36) then
				begin
				select coalesce(count(*),0)
				into STRICT qt_passagem_setor_w
				from atend_paciente_unidade
				where nr_atendimento		= nr_atendimento_p
				  and cd_setor_atendimento 	= cd_setor_regra_w;
				if (qt_passagem_setor_w > 0) then
					nr_seq_regra_w	:= nr_sequencia_w;
				end if;
				end;
			end if;
			end;
		else
			nr_seq_regra_w	:= nr_sequencia_w;
		end if;
		
		if (nr_seq_evento_p = 30) and (coalesce(ds_adicional_3_p, 'XX') <> 'PRESCRICAO') then
			select	coalesce(max('S'),'N')
			into STRICT	ie_existe_regra_w
			from	regra_lanc_automatico where		nr_seq_evento = 30
			and		coalesce(cd_area_procedimento::text, '') = ''
			and		coalesce(cd_especialidade_proc::text, '') = ''
			and		coalesce(cd_grupo_proc::text, '') = ''
			and		coalesce(cd_procedimento::text, '') = ''
			and 	coalesce(nr_seq_proc_interno::text, '') = ''
			and 	coalesce(nr_seq_exame::text, '') = ''
			and		nr_sequencia	= nr_sequencia_w LIMIT 1;

			if (ie_existe_regra_w = 'S') then
				nr_seq_regra_w	:= 0;
			end if;

			select	coalesce(max('S'),'N')
			into STRICT	ie_existe_regra_w
			from	procedimento_paciente where		nr_atendimento	= nr_atendimento_p
			--and		ds_observacao	like '%Regra: ' || to_char(nr_sequencia_w) ||'%Prescr.: ' || nvl(somente_numero(ds_adicional_3_p),0);
			and		ds_observacao	like '%'|| Wheb_mensagem_pck.get_texto(306705) || ' ' || to_char(nr_sequencia_w) ||'%' || Wheb_mensagem_pck.get_texto(306706) || ' ' || coalesce(somente_numero(ds_adicional_3_p),0) LIMIT 1;
			
			if (ie_existe_regra_w = 'S') then
				nr_seq_regra_w	:= 0;
			end if;

		end if;
		end;
	end loop;
	close c01;
end if;

RAISE NOTICE '%', nr_seq_regra_w;

qt_proc_lib_evolucao_w	:= 0;

if (coalesce(nr_seq_propaci_w,0) > 0) and (nr_seq_evento_p	= 34) and (ie_duplicar_proc_regra_w	= 'S') then
	begin
	
	select	nextval('procedimento_paciente_seq')
	into STRICT	nr_sequencia_w
	;
	
	insert into procedimento_paciente(nr_sequencia     		,
			nr_atendimento          ,
			dt_entrada_unidade      ,
			cd_procedimento         ,
			dt_conta                ,
			dt_procedimento         ,
			qt_procedimento         ,
			dt_atualizacao          ,
			nm_usuario              ,
			cd_medico               ,
			cd_convenio             ,
			cd_categoria            ,
			tx_medico               ,
			tx_anestesia            ,
			tx_procedimento         ,
			cd_acao                 ,
			cd_medico_executor      ,
			cd_setor_atendimento    ,
			ie_origem_proced        ,
			ie_valor_informado      ,
			nm_usuario_original     ,
			cd_setor_receita	,
			cd_situacao_glosa	,
			ie_funcao_medico	,
			cd_cgc_prestador	,
			nr_doc_convenio		,
			nr_seq_proc_princ	,
			qt_porte_anestesico	,
			cd_procedimento_princ	,
			dt_procedimento_princ,
			nr_seq_atepacu,
			ie_auditoria,
			ds_observacao,
			nr_seq_exame,
			cd_senha,
			cd_atividade_prof_bpa,
			cd_medico_req,
			nr_prescricao,
			ie_tipo_atend_bpa,
			ie_grupo_atend_bpa,
			nr_seq_regra_lanc,
			ie_proc_princ_atend,
			ie_via_acesso,
			ie_tecnica_utilizada,
			ie_integracao,
			ie_tipo_guia,
			nr_interno_conta,
			cd_pessoa_fisica,
			nr_cirurgia,
			nr_seq_proc_interno,
			nr_seq_reg_template,
			cd_doenca_cid)
		(SELECT nr_sequencia_w,
			nr_atendimento          ,
			dt_entrada_unidade      ,
			cd_procedimento         ,
			dt_conta                ,
			dt_procedimento         ,
			coalesce(qt_procedimento,1),
			dt_atualizacao          ,
			nm_usuario              ,
			cd_medico               ,
			cd_convenio             ,
			cd_categoria            ,
			tx_medico               ,
			tx_anestesia            ,
			tx_procedimento         ,
			cd_acao                 ,
			cd_medico_executor      ,
			cd_setor_atendimento    ,
			ie_origem_proced        ,
			ie_valor_informado      ,
			nm_usuario_original     ,
			cd_setor_receita	,
			cd_situacao_glosa	,
			ie_funcao_medico	,
			cd_cgc_prestador	,
			nr_doc_convenio		,
			nr_seq_proc_princ	,
			qt_porte_anestesico	,
			cd_procedimento_princ	,
			dt_procedimento_princ,
			nr_seq_atepacu,
			ie_auditoria,
			/*decode(nr_seq_evento_p, 30, 'LA Regra: '  || nr_seq_regra_w || ' Evento: ' || nr_seq_evento_p || ' Prescr.: ' || nvl(somente_numero(ds_adicional_3_p),0),
										'LA Regra: '  || nr_seq_regra_w || ' Evento: ' || nr_seq_evento_p),*/
			CASE WHEN nr_seq_evento_p=30 THEN  Wheb_mensagem_pck.get_texto(306714) || ' ' || nr_seq_regra_w || ' ' || Wheb_mensagem_pck.get_texto(306718) || ' ' || nr_seq_evento_p || ' ' || Wheb_mensagem_pck.get_texto(306706) || ' ' || coalesce(somente_numero(ds_adicional_3_p),0)  ELSE Wheb_mensagem_pck.get_texto(306714) || ' ' || nr_seq_regra_w || ' ' || Wheb_mensagem_pck.get_texto(306718) || ' ' || nr_seq_evento_p END ,
			nr_seq_exame,
			cd_senha,
			cd_atividade_prof_bpa,
			cd_medico_req,
			nr_prescricao,
			ie_tipo_atend_bpa,
			ie_grupo_atend_bpa,
			nr_seq_regra_lanc,
			ie_proc_princ_atend,
			ie_via_acesso,
			ie_tecnica_utilizada,
			ie_integracao,
			ie_tipo_guia,
			nr_interno_conta,
			cd_pessoa_fisica,
			nr_cirurgia,
			nr_seq_proc_interno,
			nr_seq_reg_template_w,
			cd_doenca_cid
		from	procedimento_paciente
		where	nr_sequencia	= nr_seq_propaci_w);	
	
	if (nr_sequencia_w > 0) then
		CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);
	end if;
	end;
end if;

cd_cgc_orig_w:= cd_cgc_w;

if (ie_entrar_cursor_w = 'S') and (nr_seq_regra_w <> 0) then
	ie_medico_profissional_w 	:= obter_valor_param_usuario(281,519,cd_perfil_w,nm_usuario_p,0);
	ie_utiliza_regra_uso_w		:= obter_valor_param_usuario(281,631,cd_perfil_w,nm_usuario_p,0);
	
	select	coalesce(max(ie_valida_lib_mat_local_atend),'N')
	into STRICT	ie_valida_liberacao_mat_w
	from	parametro_estoque
	where	cd_estabelecimento = cd_estabelecimento_w;

	select	coalesce(max(ie_vincula_cirur_lanc),'N'),
			coalesce(max(ie_atualiza_kit),'N')
	into STRICT	ie_vincula_cirur_lanc_w,
			ie_atualiza_kit_w
	from	parametro_faturamento
	where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

	open c02;
	loop
	fetch c02 into
			cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_exame_w,
			cd_material_w,
			cd_unid_medida_w,
			qt_lancamento_w,
			ie_medico_atendimento_w,
			ie_local_estoque_w,
			ie_funcao_medico_w,
			tx_procedimento_w,
			ie_regra_guia_w,
			nr_seq_proc_interno_ww,
			ie_consiste_item_w,
      		ie_consiste_proc_int_w,
			nr_seq_lanc_proc_interno_w,
			ie_proc_princ_atend_w,
			nr_seq_acao_regra_w,
			cd_estab_item_w,
			cd_setor_item_w,
			nr_min_duracao_w,
			cd_cnpj_prestador_w,
			cd_cid_doenca_w,
			ie_novo_medico_atual_w,
			cd_medico_lanc_aut_pac_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
		begin


		/*if	(tx_procedimento_w is null) or
			(tx_procedimento_w	= 0)	then
			tx_procedimento_w	:= 100;
		end if;*/
		
		if (tx_procedimento_w	= 0) then
			tx_procedimento_w := null;
		end if;
		

		/* inicializa medico quando ie_medico_atendimento = 'S' */

		/* primeiro = medico executor, segundo = medico do atendimento */

		cd_medico_executor_w		:= '';

		if (ie_medico_atendimento_w <> 'N') then
			begin

			if (ie_medico_atendimento_w = 'S') then
				begin
				if (cd_medico_propaci_w IS NOT NULL AND cd_medico_propaci_w::text <> '') and (length(cd_medico_propaci_w) > 0) then
					cd_medico_executor_w    := cd_medico_propaci_w;
				else
					cd_medico_executor_w    := cd_medico_resp_w;
				end if;
				end;
			elsif (ie_medico_atendimento_w = 'D') then
				select	coalesce(max(cd_medico),'0')
				into STRICT	cd_medico_diagnostico_w
				from	diagnostico_medico
				where	nr_atendimento = nr_atendimento_p;
				
				if (cd_medico_diagnostico_w <> '0') then
					cd_medico_executor_w	:= cd_medico_diagnostico_w;
				elsif (cd_medico_propaci_w IS NOT NULL AND cd_medico_propaci_w::text <> '') and (length(cd_medico_propaci_w) > 0) then
					cd_medico_executor_w    := cd_medico_propaci_w;
				else
					cd_medico_executor_w    := cd_medico_resp_w;
				end if;
				
			elsif (ie_medico_atendimento_w = 'R') then
				begin
				if (cd_medico_propaci_w IS NOT NULL AND cd_medico_propaci_w::text <> '') and (length(cd_medico_propaci_w) > 0) then
					cd_medico_executor_w    := cd_medico_propaci_w;
				else
					cd_medico_executor_w    := coalesce(cd_medico_referido_w,cd_medico_resp_w);
				end if;
				end;			
			elsif (ie_medico_atendimento_w = 'P') then
				cd_medico_executor_w    := cd_medico_prescr_w;
			elsif (ie_medico_atendimento_w = 'E') then
				cd_medico_executor_w    := cd_medico_propaci_w;			
			elsif (ie_medico_atendimento_w = 'Y') then
				cd_medico_executor_w    := coalesce(cd_medico_prescr_w, cd_medico_resp_w);			
			elsif (ie_medico_atendimento_w = 'X') then
				cd_medico_executor_w    := coalesce(cd_medico_exec_item_w, coalesce(cd_medico_prescr_w, cd_medico_resp_w));
			elsif (ie_medico_atendimento_w = 'L') then			
				cd_medico_executor_w    :=  coalesce(cd_medico_parecer_w,cd_medico_resp_w);
			elsif (ie_medico_atendimento_w = 'A') and (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') and (nr_seq_evento_p	= 241) then
				cd_medico_executor_w    := substr(ds_adicional_1_p,1,10);
			end if;				
			end;
		elsif (nr_seq_evento_p = 12) or (nr_seq_evento_p = 123) then
			cd_medico_executor_w := substr(ds_adicional_1_p,1,10);
		end if;
		
		if (nr_seq_evento_p = 321) then
			
			select	coalesce(max('S'),'N')
			into STRICT	ie_existe_regra_w
			from	medico b,
					pessoa_fisica a where		a.cd_pessoa_fisica = b.cd_pessoa_fisica
			and		a.cd_pessoa_fisica = ds_adicional_2_p LIMIT 1;
			
			if (ie_existe_regra_w = 'S') then
				cd_medico_executor_w := ds_adicional_2_p;
			end if;	
		end if;

   	/*tratar para ir para o final caso o proc interno da acao da regra esteja inativo*/

		if (nr_seq_proc_interno_ww IS NOT NULL AND nr_seq_proc_interno_ww::text <> '') then
			select	coalesce(max(ie_situacao),'A')
			into STRICT	ie_situacao_w
			from	proc_interno
			where	nr_sequencia = nr_seq_proc_interno_ww;

			if (ie_situacao_w = 'I') then
				goto continue_loop;
			end if;
		end if;
		
		/* felipe - os 48237 - 12/01/2007 - busca o procedimento do proc. interno a ser executado */

		if (nr_seq_proc_interno_ww IS NOT NULL AND nr_seq_proc_interno_ww::text <> '') then
			SELECT * FROM obter_proc_tab_interno(nr_seq_proc_interno_ww, nr_prescricao_w, nr_atendimento_p, nr_interno_conta_w, cd_procedimento_w, ie_origem_proced_w, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
		end if;
		
		/* Fabricio - OS 201238 - busca o procedimento do exame de lab. a ser executado */

		if	((coalesce(nr_seq_exame_w,0) > 0) and (coalesce(cd_procedimento_w,0) = 0)) then
			SELECT * FROM Obter_Exame_Lab_Convenio(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estabelecimento_w, ie_tipo_convenio_w, nr_seq_proc_interno_ww, null, cd_plano_convenio_w, ds_ret_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT ds_ret_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;
		end if;


		/*Apos obter o codigo do procedimento atraves do proc interno ou exame de laboratorio testar novamente para ver se o codigo esta ativo.*/

		if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
			select 	coalesce(max(ie_situacao),'A')
			into STRICT	ie_situacao_w
			from	procedimento
			where	cd_procedimento	 = cd_procedimento_w
			and	ie_origem_proced = ie_origem_proced_w;
		
			if (ie_situacao_w = 'I') then
				goto continue_loop;
    		end if;
		end if;

		/* verifica se procedimento de alta ja foi executado    bola 08072002 */

		begin
		qt_proc_alta_w		:= 0;
		qt_proc_lib_evolucao_w	:= 0;
		if (nr_seq_evento_p = 36) then
			begin

			/* ricardo 31/05/2005 - incluido no sql abaixo a consistencia da observacao.
						se ja havia algum procedimento gerado para o paciente nao gerava o proc da alta */
			select 	count(*)
			into STRICT	qt_proc_alta_w
			from	procedimento_paciente
			where	nr_atendimento	= nr_atendimento_p
			and	cd_procedimento	= cd_procedimento_w
			and 	coalesce(cd_motivo_exc_conta::text, '') = ''
			and	ds_observacao like Wheb_mensagem_pck.get_texto(306714)||'% 36%'; --'LA Regra:% 36%';
			exception
				when others then
				qt_proc_alta_w	:= 0;
			end;
		end if;
		end;

		if (nr_seq_evento_p = 123) and (ie_consiste_item_w <> 'X') then
			begin		
			if (ie_consiste_item_w = 'E') then
			
				select	coalesce(max(a.nr_sequencia),0)
				into STRICT	nr_seq_equipe_w
				from	pf_equipe_partic b,
					pf_equipe a
				where	a.nr_sequencia = b.nr_seq_equipe
				and	((a.cd_pessoa_fisica = cd_medico_executor_w) OR (b.cd_pessoa_fisica = cd_medico_executor_w));			
				
				qt_equipe_dia_w:= 0;
				qt_proc_lib_evolucao_w:= 0;
				
				begin
				select 	count(*)
				into STRICT	qt_equipe_dia_w
				from	procedimento_paciente
				where	nr_atendimento	= nr_atendimento_p
				and (obter_se_medico_equipe(coalesce(nr_seq_equipe_w,0), cd_medico_executor) = 'S')
                and     ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())));
				exception
					when others then
						qt_equipe_dia_w := 0;
				end;
				
				if (qt_equipe_dia_w > 0) then
					qt_proc_lib_evolucao_w:= qt_equipe_dia_w;
				end if;
				
			else
				begin
				select 	count(*)
				into STRICT	qt_proc_lib_evolucao_w
				from	procedimento_paciente
				where	nr_atendimento	= nr_atendimento_p
				and	cd_procedimento	= cd_procedimento_w
				and	ds_observacao like '%' || Wheb_mensagem_pck.get_texto(306718) || ' 123%'; --'%Evento: 123%';
				exception
					when others then
					qt_proc_lib_evolucao_w := 0;
				end;			
			end if;
			end;
		end if;	
		
		if (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') and (nr_seq_evento_p = 291) then
			dt_execucao_w := coalesce(dt_liberacao_dieta_w,clock_timestamp());		
		end if;

		if (nr_seq_evento_p = 221)  and (ie_lanc_aut_assumir_pac_w	= 'S') then
			begin
			
			select 	count(*)
			into STRICT	qt_proc_lib_evolucao_w
			from	procedimento_paciente
			where	nr_atendimento	= nr_atendimento_p
			and	cd_procedimento	= cd_procedimento_w
			and	ds_observacao like  '%' || Wheb_mensagem_pck.get_texto(306718) || ' 221%'; -- '%Evento: 221%';
			exception
				when others then
				qt_proc_lib_evolucao_w := 0;
			end;
		end if;	
		
		if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then		
		begin	
			if (ie_novo_medico_atual_w = 'S' and ie_consiste_item_w = 'V') then
			begin	
				open c03;
				loop
				fetch c03 into	
					cd_especialidade_w;
				EXIT WHEN NOT FOUND; /* apply on c03 */
					begin
						select	count(*)
						into STRICT	qt_registros_w
						from	procedimento_paciente a
						where	a.nr_atendimento = nr_atendimento_p
						and	a.cd_procedimento = cd_procedimento_w
						and	a.ie_origem_proced = ie_origem_proced_w
						and	pkg_date_utils.get_time(a.dt_procedimento,0,0,0) = pkg_date_utils.get_time(coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),0,0,0)
						and 	cd_especialidade_w in (	SELECT cd_especialidade
										from   medico_especialidade y
										where  y.cd_pessoa_fisica = a.cd_medico_executor
										and    y.nr_seq_prioridade = (	select min(x.nr_seq_prioridade)
														from medico_especialidade x 
														where x.cd_pessoa_fisica = a.cd_medico_executor))
						and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
						and	(a.nr_interno_conta IS NOT NULL AND a.nr_interno_conta::text <> '');					
						
						--if (qt_registros_w > 0) then 
						--se ja tem um, entao nao deve inserir denovo
						if (qt_registros_w = 0) then
							ie_consiste_item_ww	:= 'S';
						else
						begin
							ie_consiste_item_ww	:= 'N';
							
							update 	procedimento_paciente a
							set 	a.cd_medico_executor = cd_medico_executor_w
							where	a.nr_atendimento = nr_atendimento_p
							and	a.cd_procedimento = cd_procedimento_w
							and	a.ie_origem_proced = ie_origem_proced_w
							and	pkg_date_utils.get_time(a.dt_procedimento,0,0,0) = pkg_date_utils.get_time(coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),0,0,0)
							and 	cd_especialidade_w in (	SELECT cd_especialidade
											from   medico_especialidade y
											where  y.cd_pessoa_fisica = a.cd_medico_executor
											and    y.nr_seq_prioridade = (	select min(x.nr_seq_prioridade) 
															from medico_especialidade x 
															where x.cd_pessoa_fisica = a.cd_medico_executor))
							and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
							and	(a.nr_interno_conta IS NOT NULL AND a.nr_interno_conta::text <> '');					
							
							exit;
						end;
						end if;				
					end;
				end loop;
				close c03;				
			end;
			else				
				ie_consiste_item_ww	:= consiste_regra_lanc_aut_pac(nr_atendimento_p, nr_interno_conta_w, cd_procedimento_w, ie_origem_proced_w,
							ie_consiste_item_w, ie_consiste_proc_int_w, nr_seq_lanc_proc_interno_w, coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())), nr_seq_regra_w, nr_seq_acao_regra_w, nm_usuario_p,
							cd_estabelecimento_w, null, 0, cd_setor_atendimento_w);	
			end if;				
		end;
		else
			ie_consiste_item_ww	:= 'N';
		end if;

		if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (qt_proc_alta_w	= 0) 		and (qt_proc_lib_evolucao_w = 0) and (ie_consiste_item_ww = 'S') then
			begin
			RAISE NOTICE '%', cd_procedimento_w;
			select nextval('procedimento_paciente_seq')
			into STRICT nr_sequencia_w;

			if (nr_seq_propaci_w = 0) then
				dt_proc_propaci_w := null;
			end if;

			cd_atividade_prof_bpa_w	:= null;
			if (ie_origem_proced_w	= 3) then
				begin
				select 	max(cd_atividade_prof_bpa)
				into STRICT	cd_atividade_prof_bpa_w
				from	procedimento
				where	cd_procedimento	= cd_procedimento_w
				and	ie_origem_proced	= ie_origem_proced_w;

				if (ie_tipo_convenio_w = 3) and (cd_atividade_prof_bpa_w IS NOT NULL AND cd_atividade_prof_bpa_w::text <> '') then
					begin
					select	ie_tipo_atend_bpa
					into STRICT	ie_tipo_atend_bpa_w
					from	sus_atividade_prof_proc
					where	cd_procedimento			= cd_procedimento_w
					and	cd_atividade_profissional	= cd_atividade_prof_bpa_w;
					exception
						when others then
						ie_tipo_atend_bpa_w	:= null;
					end;
					
					begin
					select	ie_grupo_atend_bpa
					into STRICT	ie_grupo_atend_bpa_w
					from	sus_atividade_prof_proc
					where	cd_procedimento			= cd_procedimento_w
					and	cd_atividade_profissional	= cd_atividade_prof_bpa_w;
					exception
						when others then
						ie_grupo_atend_bpa_w	:= null;
					end;
				end if;

				end;
			end if;

			SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, nr_seq_exame_w, nr_seq_proc_interno_ww, ie_medico_executor_w, cd_cgc_regra_w, cd_medico_regra_w, cd_profissional_w, coalesce(cd_medico_regra_w,cd_medico_executor_w), dt_execucao_w, nr_seq_classificacao_w, 'N', null, null) INTO STRICT ie_medico_executor_w, cd_cgc_regra_w, cd_medico_regra_w, cd_profissional_w;
			
			cd_cgc_w:= cd_cgc_orig_w; --recebe sempre o original para nao ficar sujeira na variavel
		
			if (cd_cgc_regra_w IS NOT NULL AND cd_cgc_regra_w::text <> '') then
				cd_cgc_w	:= cd_cgc_regra_w;			
			end if;
			
			/*os60881 - andre regra da via de acesso*/

			select	obter_regra_via_acesso(cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_w, cd_convenio_w)
			into STRICT	ie_via_acesso_w
			;	

			if (cd_estab_item_w IS NOT NULL AND cd_estab_item_w::text <> '') and (cd_setor_item_w IS NOT NULL AND cd_setor_item_w::text <> '') then
				
				select	coalesce(count(*),0)
				into STRICT	qt_passagem_w
				from	atend_paciente_unidade
				where	nr_atendimento 			= nr_atendimento_p
				and	cd_setor_atendimento		= cd_setor_item_w
            	and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_unidade) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_execucao_w);

				if (qt_passagem_w = 0) then
					CALL gerar_passagem_setor_atend(nr_atendimento_p, cd_setor_item_w, dt_execucao_w, 'N', nm_usuario_p);
				end if;
				

				select	coalesce(max(nr_seq_interno),0)
				into STRICT	nr_seq_setor_item_w
				from	atend_paciente_unidade
				where	nr_atendimento 			= nr_atendimento_p
				and	cd_setor_atendimento		= cd_setor_item_w
				and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_unidade) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_execucao_w);
				

				if (nr_seq_setor_item_w > 0) then
					begin
					select	nr_seq_interno,
						dt_entrada_unidade,
						cd_setor_atendimento
					into STRICT	nr_seq_atepacu_proc_w,
						dt_entrada_unidade_proc_w,
						cd_setor_atendimento_w
					from	atend_paciente_unidade
					where	nr_seq_interno		= nr_seq_setor_item_w;
					exception
					when others then
						nr_seq_setor_item_w	:= nr_seq_setor_item_w;
					end;
				end if;
			end if;

		
			if (cd_estab_item_w IS NOT NULL AND cd_estab_item_w::text <> '') and (coalesce(nr_interno_conta_p::text, '') = '') and (nr_seq_evento_p in (12,30)) then
				begin
				
				select	CASE WHEN nr_interno_conta_ww=0 THEN  cd_convenio_w  ELSE cd_convenio_conta_w END
				into STRICT	cd_convenio_decode_w
				;

				select	CASE WHEN nr_interno_conta_ww=0 THEN  cd_categoria_w  ELSE cd_categoria_conta_w END
				into STRICT	cd_categoria_decode_w
				;

				SELECT * FROM obter_conta_paciente(cd_estab_item_w, nr_atendimento_p, cd_convenio_decode_w, cd_categoria_decode_w, nm_usuario_p, coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())), dt_entrada_w, dt_alta_w, nr_doc_convenio_w, cd_setor_atendimento_w, nr_seq_pq_proc_w, dt_acerto_conta_w, nr_interno_conta_ww, cd_convenio_conta_w, cd_categoria_conta_w) INTO STRICT dt_acerto_conta_w, nr_interno_conta_ww, cd_convenio_conta_w, cd_categoria_conta_w;

				end;
			end if;

			if (ie_tipo_convenio_w	= 3) and (nr_seq_evento_p	= 39) then
				begin
				
				if (coalesce(ie_lanc_sus_setor_int_w,'N') = 'S') then
				
					select	obter_atepacu_paciente(nr_atendimento_p, 'IA')
					into STRICT	nr_seq_atepacu_w
					;
					
					if (coalesce(nr_seq_atepacu_w,0) > 0) then
						select	coalesce(max(cd_setor_atendimento),0),
							coalesce(max(dt_entrada_unidade), dt_entrada_unidade_w)
						into STRICT	cd_setor_atendimento_w,
							dt_entrada_unidade_w
						from	atend_paciente_unidade
						where	nr_seq_interno = nr_seq_atepacu_w;
					end if;
					
				end if;
				
				dt_execucao_w	:= clock_timestamp();	
				end;
			end if;		

			if (coalesce(nr_min_duracao_w,0)	> 0) then
				begin
				select	coalesce(max(ie_forma_apresentacao),0)
				into STRICT	ie_forma_apresentacao_w
				from	procedimento
				where	cd_procedimento		= cd_procedimento_w
				and		ie_origem_proced	= ie_origem_proced_w;
				
				if (ie_forma_apresentacao_w	= 4) then
					dt_inicio_procedimento_w		:= (coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())) - (nr_min_duracao_w / 1440));
				end if;
				exception
					when others then
						dt_inicio_procedimento_w	:= null;
					end;
				
			end if;
						
			if (ie_medico_profissional_w = 'S') and (nr_seq_evento_p <> 545) and
				((coalesce(cd_medico_executor_w,'X') <> 'X') or (cd_medico_lanc_aut_pac_w IS NOT NULL AND cd_medico_lanc_aut_pac_w::text <> '')) then
				begin

				select	max(nr_seq_conselho)
				into STRICT	nr_seq_conselho_w
				from	pessoa_fisica
				where	cd_pessoa_fisica	= coalesce(cd_medico_lanc_aut_pac_w, cd_medico_executor_w);

				select	trim(both upper(max(sg_conselho)))
				into STRICT	sg_conselho_w
				from	conselho_profissional
				where	nr_sequencia	= nr_seq_conselho_w;


				if (coalesce(sg_conselho_w,'X')	<> 'CRM') and
					((cd_medico_executor_w IS NOT NULL AND cd_medico_executor_w::text <> '') or (cd_medico_lanc_aut_pac_w IS NOT NULL AND cd_medico_lanc_aut_pac_w::text <> '')) then
					cd_profissional_w	:= coalesce(cd_medico_lanc_aut_pac_w, cd_medico_executor_w);
					cd_medico_executor_w	:= null;
					cd_medico_lanc_aut_pac_w:= null;
				end if;

				end;
			end if;
			
			if (nr_seq_evento_p	= 232) then
			
				select	max(cd_pessoa_fisica)
				into STRICT	cd_pessoa_usuario_w
				from	usuario
				where	upper(nm_usuario)	= nm_usuario_p
				and	obter_se_medico(cd_pessoa_fisica,'M')	= 'S';
				
				if (cd_pessoa_usuario_w IS NOT NULL AND cd_pessoa_usuario_w::text <> '') then
					cd_medico_executor_w	:= cd_pessoa_usuario_w;
				end if;
				
			end if;

			
			if (ie_medico_profissional_w	= 'S') then
				select	max(nr_seq_conselho)
				into STRICT	nr_seq_conselho_w
				from	pessoa_fisica
				where	cd_pessoa_fisica	= cd_medico_executor_w;

				select	trim(both upper(max(sg_conselho)))
				into STRICT	sg_conselho_w
				from	conselho_profissional
				where	nr_sequencia	= nr_seq_conselho_w;
		

				if (sg_conselho_w	<> 'CRM') then
					cd_profissional_w	:= cd_medico_executor_w;
					cd_medico_executor_w	:= null;
				end if;
			end if;
			
			
			if (cd_medico_lanc_aut_pac_w IS NOT NULL AND cd_medico_lanc_aut_pac_w::text <> '') then
				cd_medico_regra_w	:= cd_medico_lanc_aut_pac_w;
			end if;
			
			if (nr_seq_evento_p = 34) then
				if (coalesce(qt_procedimento_p,0) > 0) then
					ie_inf_qt_adm_adep_w		:= coalesce(obter_valor_param_usuario(1113,650,cd_perfil_w,nm_usuario_p,coalesce(cd_estabelecimento_w, coalesce(wheb_usuario_pck.get_cd_estabelecimento,0))),'N');
					if (ie_inf_qt_adm_adep_w = 'S') then
						qt_lancamento_w	:= coalesce(qt_procedimento_p, coalesce(qt_lancamento_w, 1));
					end if;
				end if;
				
				if (coalesce(ie_vincular_proc_princ_w,'S') = 'S') then
				      select coalesce(max('S'),'N')
				      into STRICT   ie_existe_seq_w
				      from   procedimento_paciente where    nr_sequencia = nr_sequencia_p LIMIT 1;
				end if;
			end if;
			
			if (coalesce(ie_utiliza_regra_uso_w,'N') = 'S') and (nr_seq_evento_p = 123) then
				select	obter_se_uso_qtde_proc(nr_atendimento_p, cd_procedimento_w, ie_origem_proced_w,
					qt_lancamento_w, cd_medico_executor_w, cd_setor_atendimento_w, coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),
					'3', nr_sequencia_w, ie_via_acesso_w, nr_interno_conta_ww,nr_seq_proc_interno_ww,cd_categoria_w,cd_plano_convenio_w, nr_seq_exame_propaci_w)
				into STRICT	ds_erro_ww
				;
				
				if (ds_erro_ww <> '') or (ds_erro_ww IS NOT NULL AND ds_erro_ww::text <> '') then
					nr_sequencia_w := 0;
					goto final;
				end if;
			end if;
			
			if (nr_seq_evento_p in (372,381,401,412)) then
				dt_execucao_w	:= null;
			end if;
			
			insert into procedimento_paciente(
				nr_sequencia     		,
				nr_atendimento          ,
				dt_entrada_unidade      ,
				cd_procedimento         ,
				dt_conta                ,
				dt_procedimento         ,
				qt_procedimento         ,
				dt_atualizacao          ,
				nm_usuario              ,
				cd_medico               ,
				cd_convenio             ,
				cd_categoria            ,
				tx_medico               ,
				tx_anestesia            ,
				tx_procedimento         ,
				cd_acao                 ,
				cd_medico_executor      ,
				cd_setor_atendimento    ,
				ie_origem_proced        ,
				ie_valor_informado      ,
				nm_usuario_original     ,
				cd_setor_receita	,
				cd_situacao_glosa	,
				ie_funcao_medico	,
				cd_cgc_prestador	,
				nr_doc_convenio		,
				nr_seq_proc_princ	,
				qt_porte_anestesico	,
				cd_procedimento_princ	,
				dt_procedimento_princ,
				nr_seq_atepacu,
				ie_auditoria,
				ds_observacao,
				nr_seq_exame,
				cd_senha,
				cd_atividade_prof_bpa,
				cd_medico_req,
				nr_prescricao,
				ie_tipo_atend_bpa,
				ie_grupo_atend_bpa,
				nr_seq_regra_lanc,
				ie_proc_princ_atend,
				ie_via_acesso,
				ie_tecnica_utilizada,
				ie_integracao,
				ie_tipo_guia,
				nr_interno_conta,
				cd_pessoa_fisica,
				nr_cirurgia,
				nr_seq_proc_interno,
				nr_seq_reg_template,
				dt_inicio_procedimento,
				cd_doenca_cid)
			values (
				nr_sequencia_w  	,
				nr_atendimento_p        ,
				CASE WHEN nr_seq_evento_p=82 THEN  coalesce(dt_entrada_unidade_intern_w,clock_timestamp())  ELSE coalesce(dt_entrada_unidade_proc_w, coalesce(dt_entrada_unidade_w,clock_timestamp())) END , /* Coloquei os nvl OS 200195 */
				cd_procedimento_w       ,
				coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),
				coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),
				coalesce(qt_lancamento_w,1),
				clock_timestamp()                 ,
				nm_usuario_p            ,
				cd_medico_executor_w    ,
				CASE WHEN nr_interno_conta_ww=0 THEN  cd_convenio_w  ELSE cd_convenio_conta_w END ,
				CASE WHEN nr_interno_conta_ww=0 THEN  cd_categoria_w  ELSE cd_categoria_conta_w END ,
				100			,
				100			,
				--decode(tx_procedimento_w,100,tx_proc_propaci_w,tx_procedimento_w),
				coalesce(tx_procedimento_w, coalesce(tx_proc_propaci_w,100)),
				'1'				,
				coalesce(cd_medico_regra_w,cd_medico_executor_w),
				cd_setor_atendimento_w  ,
				ie_origem_proced_w	,
				'N'			,
				nm_usuario_p            ,
				cd_setor_atendimento_w  ,
				0 				,
				ie_funcao_medico_w		,
				coalesce(cd_cnpj_prestador_w,cd_cgc_w),
				CASE WHEN ie_regra_guia_w='RC' THEN nr_doc_convenio_w WHEN ie_regra_guia_w='RT' THEN  null  ELSE nr_doc_propaci_w END ,
				CASE WHEN coalesce(ie_vincular_proc_princ_w,'S')='S' THEN  CASE WHEN nr_seq_propaci_w=0 THEN  null  ELSE CASE WHEN ie_existe_seq_w='S' THEN nr_sequencia_p  ELSE null END  END   ELSE null END ,
				CASE WHEN nr_seq_propaci_w=0 THEN  null  ELSE qt_porte_anestesico_w END ,
				CASE WHEN nr_seq_propaci_w=0 THEN  null  ELSE cd_proc_propaci_w END ,
				dt_proc_propaci_w,
				CASE WHEN nr_seq_evento_p=82 THEN  nr_seq_atepacu_intern_w  ELSE coalesce(nr_seq_atepacu_proc_w,nr_seq_atepacu_w) END ,
				'N',
				/*decode(nr_seq_evento_p, 30, 'LA Regra: '  || nr_seq_regra_w || ' Evento: ' || nr_seq_evento_p || ' Prescr.: ' ||  
					decode(nr_prescr_w,0,nvl(somente_numero(ds_adicional_3_p),0), nr_prescr_w),332,'LA Regra: '  || nr_seq_regra_w || ' Evento: ' || nr_seq_evento_p||  ' Conj: '||ds_adicional_1_p, 'LA Regra: '  || nr_seq_regra_w || ' Evento: ' || nr_seq_evento_p),*/
				CASE WHEN nr_seq_evento_p=30 THEN  Wheb_mensagem_pck.get_texto(306714) || ' '  || nr_seq_regra_w || ' ' || Wheb_mensagem_pck.get_texto(306718) || ' ' || nr_seq_evento_p || ' ' || Wheb_mensagem_pck.get_texto(306706) || ' ' ||  					CASE WHEN nr_prescr_w=0 THEN coalesce(somente_numero(ds_adicional_3_p),0)  ELSE nr_prescr_w END  WHEN nr_seq_evento_p=332 THEN  Wheb_mensagem_pck.get_texto(306714) || ' '  || nr_seq_regra_w || ' ' || Wheb_mensagem_pck.get_texto(306718) || ' ' || nr_seq_evento_p|| ' ' || Wheb_mensagem_pck.get_texto(306745) || ' ' ||ds_adicional_1_p  ELSE Wheb_mensagem_pck.get_texto(306714) || ' '  || nr_seq_regra_w || ' ' || Wheb_mensagem_pck.get_texto(306718) || ' ' || nr_seq_evento_p END ,	
				nr_seq_exame_w,
				cd_senha_w,
				cd_atividade_prof_bpa_w,
				cd_medico_req_w,
				CASE WHEN nr_seq_evento_p=34 THEN  nr_prescricao_w  ELSE null END ,
				ie_tipo_atend_bpa_w,
				ie_grupo_atend_bpa_w,
				nr_seq_regra_w,
				ie_proc_princ_atend_w,
				ie_via_acesso_w,
				null,
        ie_integracao_w, ie_tipo_guia_w, CASE WHEN nr_interno_conta_ww=0 THEN  null  ELSE nr_interno_conta_ww END ,
				cd_profissional_w,
				CASE WHEN nr_seq_evento_p=34 THEN CASE WHEN ie_vincula_cirur_lanc_w='S' THEN nr_cirurgia_propaci_w  ELSE null END   ELSE nr_cirurgia_w END ,
				nr_seq_proc_interno_ww,
				nr_seq_reg_template_w,
				dt_inicio_procedimento_w,
				substr(cd_cid_doenca_w,1,4));
			
			<<final>>
			
			if (nr_sequencia_w > 0) then
				CALL atualiza_preco_procedimento(
					nr_sequencia_w, cd_convenio_w, nm_usuario_p);

				/* francisco - os 55599 - 26/07/07 - gerar autorizacao */

				begin
				select	count(*)
				into STRICT	cont_w
				from	regra_gerar_autorizacao
				where	ie_evento	= 'LA'
				and	ie_tipo_autorizacao = '3'
				and	cd_convenio	= coalesce(cd_convenio_w,obter_convenio_atendimento(nr_atendimento_p))
				and	coalesce(ie_situacao, 'A') = 'A';
		
				if (cont_w > 0) then
					CALL gerar_autor_regra(nr_atendimento_p,null,nr_sequencia_w,null,null,null,'LA',nm_usuario_p,null,null,null,null,null,null,'','','');
				end if;	
				exception
					when others then
					null;
				end;
						
			end if;
			end;
		else
			begin
			/* verifica se procedimento de alta ja foi executado    bola 08072002 */

			begin
			qt_mat_alta_w	:= 0;
			if (nr_seq_evento_p = 36) then
				begin
				select 	count(*)
				into STRICT	qt_mat_alta_w
				from	material_atend_paciente
				where	nr_atendimento	= nr_atendimento_p
				and	cd_material	= cd_material_w;
				exception
					when others then
					qt_mat_alta_w	:= 0;
				end;
			end if;
			end;
			if (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
				ie_consiste_item_ww	:= consiste_regra_lanc_aut_pac(nr_atendimento_p, nr_interno_conta_w, cd_material_w, null,
							ie_consiste_item_w, ie_consiste_proc_int_w, nr_seq_lanc_proc_interno_w, coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())), nr_seq_regra_w, nr_seq_acao_regra_w,
							nm_usuario_p,cd_estabelecimento_w, null, 0,cd_setor_atendimento_w);
			else
				ie_consiste_item_ww	:= 'N';
			end if;

			if (qt_mat_alta_w	= 0) and (ie_consiste_item_ww = 'S') then
				begin
				if (ie_local_estoque_w = 'N') then
					cd_local_estoque_w	:= null;
				elsif (ie_local_estoque_w = 'S') then
					cd_local_estoque_w	:= cd_local_estoque_p;
				elsif (ie_local_estoque_w = 'U') then
					begin
					select b.cd_local_estoque
					into STRICT 	cd_local_estoque_w
					from setor_atendimento b, usuario a
					where b.cd_setor_atendimento 	= a.cd_setor_atendimento
					and a.nm_usuario		= nm_usuario_p;
					exception
						when others then
						cd_local_estoque_w	:= null;
					end;
				elsif (ie_local_estoque_w = 'A') then				
					
					select 	wheb_usuario_pck.get_cd_setor_atendimento
					into STRICT	cd_setor_ativo_w
					;
					
					begin
					select	cd_local_estoque
					into STRICT	cd_local_estoque_w
					from 	setor_atendimento
					where	cd_setor_atendimento 	= cd_setor_ativo_w;  	
					exception
						when others then
						cd_local_estoque_w	:= null;
					end;
				elsif (ie_local_estoque_w = 'P') then
					begin
					select cd_local_estoque
					into STRICT 	cd_local_estoque_w
					from setor_atendimento
					where cd_setor_atendimento = cd_setor_atendimento_w;
					exception
						when others then
						cd_local_estoque_w	:= null;
					end;
				end if;
				/*felipe maritni em 18/02/2009 os128891*/

				select	coalesce(max(ie_dispara_kit_mat),'N')
				into STRICT	ie_dispara_kit_mat_w
				from	regra_lanc_automatico
				where	nr_sequencia	= nr_seq_regra_w;
				
				/* os 88248 fabricio em 02/04/2008 */

				if (coalesce(ie_dispara_kit_mat_w,'N') = 'S') then
				
					select 	coalesce(max(cd_kit_material),0)
					into STRICT	cd_kit_material_w
					from 	material_estab
					where 	cd_material = cd_material_w
					and 	cd_estabelecimento = cd_estabelecimento_w;

					if (cd_kit_material_w > 0) then
						
						select 	CASE WHEN coalesce(ie_vincular_proc_princ_w,'S')='S' THEN CASE WHEN nr_seq_propaci_w=0 THEN  null  ELSE nr_sequencia_p END   ELSE null END
						into STRICT	nr_seq_proc_princ_w
						;
			
						
			
						select 	CASE WHEN nr_seq_evento_p=82 THEN  nr_seq_atepacu_intern_w WHEN nr_seq_evento_p=26 THEN  nr_seq_atepacu_w WHEN nr_seq_evento_p=28 THEN  nr_seq_atepacu_w  ELSE nr_seq_atepacu_proc_w END
						into STRICT	nr_seq_atepacu_ww
						;
						
						select	coalesce(max(ie_material_pai), 'S')
						into STRICT	ie_material_pai_w
						from	kit_material
						where	cd_kit_material		= cd_kit_material_w;

						ds_erro_w := gerar_kit_material_exec(cd_kit_material_w, coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())), nr_prescricao_w, 'N', cd_local_estoque_w, nr_seq_proc_princ_w, nr_seq_atepacu_ww, 'N', nm_usuario_p, qt_lancamento_w, ds_erro_w, null, null);

					end if;
				
				end if;
				
				ie_mat_liberado_local_w := 'S';
				
				if (coalesce(cd_material_w,0) > 0) and (coalesce(cd_local_estoque_w,0) > 0) and (coalesce(ie_valida_liberacao_mat_w,'N') = 'S') then
					ie_mat_liberado_local_w := Obter_Local_Valido(	cd_estabelecimento_w, cd_local_estoque_w, cd_material_w, '', ie_mat_liberado_local_w);
					select	substr(ds_local_estoque,1,40)
					into STRICT	ds_local_estoque_w
					from	local_estoque
					where	cd_local_estoque = cd_local_estoque_w;

					if (coalesce(ie_mat_liberado_local_w,'S') = 'N') and (nr_seq_evento_p = 34) then
						insert into regra_lanc_aut_mat_consist(
									nr_sequencia,
									nr_seq_evento,
									nr_atendimento,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									cd_material,
									ds_consistencia)
								values (	nextval('regra_lanc_aut_mat_consist_seq'),
									nr_seq_evento_p,
									nr_atendimento_p, 
									clock_timestamp(),
									nm_usuario_p,
									clock_timestamp(),
									nm_usuario_p,
									cd_material_w,
									Wheb_mensagem_pck.get_texto(306754, 'CD_MATERIAL_W='||cd_material_w||';DS_LOCAL_ESTOQUE_W='||ds_local_estoque_w));
									--'O material ' || cd_material_w || ' nao esta liberado para o local de estoque ' || ds_local_estoque_w); 
					end if;
				end if;

				if	((coalesce(cd_kit_material_w, 0) = 0) or
					((coalesce(cd_kit_material_w, 0) > 0) and (ie_material_pai_w = 'S'))) and (coalesce(ie_mat_liberado_local_w,'S') <> 'N') then
					begin
					
					select	nextval('material_atend_paciente_seq')
					into STRICT	nr_sequencia_w
					;
					
					if (nr_seq_evento_p in (372,381,401,412)) then
						dt_execucao_w	:= null;
					end if;
					
					
					begin
					
					insert into material_atend_paciente(
						nr_sequencia     		,
						nr_atendimento          ,
						dt_entrada_unidade      ,
						cd_material             ,
						dt_conta                ,
						dt_atendimento          ,
						qt_material             ,
						qt_executada            ,
						dt_atualizacao          ,
						nm_usuario              ,
						cd_unidade_medida   	,
						cd_convenio             ,
						cd_categoria            ,
						cd_acao                 ,
						cd_local_estoque		,
						cd_setor_atendimento    ,
						ie_valor_informado      ,
						nm_usuario_original     ,
						cd_setor_receita		,
						cd_situacao_glosa		,
						nr_doc_convenio		,
						nr_seq_proc_princ		,
						cd_proced_referencia,
						nr_seq_atepacu,		/* elemar 04/07/2001 */
						ie_auditoria,
						ds_observacao,
						nr_seq_regra_lanc,
						ie_tipo_guia,
						nr_interno_conta,
						nr_cirurgia,
						nr_seq_reg_template,
						cd_cgc_prestador)
					values (
						nr_sequencia_w  		,
						nr_atendimento_p        ,
						CASE WHEN nr_seq_evento_p=82 THEN  dt_entrada_unidade_intern_w  ELSE coalesce(dt_entrada_unidade_proc_w, dt_entrada_unidade_w) END ,
						cd_material_w           ,
						coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),
						coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),
						qt_lancamento_w,
						qt_lancamento_w,
						clock_timestamp()                 ,
						nm_usuario_p            ,
						cd_unid_medida_w		,
						CASE WHEN nr_interno_conta_ww=0 THEN  cd_convenio_w  ELSE cd_convenio_conta_w END ,
						CASE WHEN nr_interno_conta_ww=0 THEN  cd_categoria_w  ELSE cd_categoria_conta_w END ,
						'1'			      ,
						cd_local_estoque_w      ,
						coalesce(cd_setor_atendimento_proc_w, cd_setor_atendimento_w)  ,
						'N'				,
						nm_usuario_p            ,
						cd_setor_atendimento_w  ,
						0				,
						CASE WHEN nr_seq_evento_p=34 THEN  CASE WHEN ie_regra_guia_w='RC' THEN nr_doc_convenio_w WHEN ie_regra_guia_w='RT' THEN  null  ELSE nr_doc_propaci_w END   ELSE nr_doc_convenio_w END ,
						CASE WHEN coalesce(ie_vincular_proc_princ_w,'S')='S' THEN CASE WHEN nr_seq_propaci_w=0 THEN  null  ELSE nr_sequencia_p END   ELSE null END ,
						CASE WHEN nr_seq_propaci_w=0 THEN  null  ELSE cd_proc_propaci_w END ,
						CASE WHEN nr_seq_evento_p=82 THEN  nr_seq_atepacu_intern_w  ELSE coalesce(nr_seq_atepacu_proc_w, nr_seq_atepacu_w) END     ,
						'N',
						/*decode(nr_seq_evento_p, 30, 'LA Regra: '  || nr_seq_regra_w || ' Evento: ' || nr_seq_evento_p || ' Prescr.: ' ||
						nvl(somente_numero(ds_adicional_3_p),0),332,'LA Regra: '  || nr_seq_regra_w || ' Evento: ' || nr_seq_evento_p|| ' Conj: '||ds_adicional_1_p,'LA Regra: '  || nr_seq_regra_w || ' Evento: ' || nr_seq_evento_p),*/
						CASE WHEN nr_seq_evento_p=30 THEN  Wheb_mensagem_pck.get_texto(306714) || ' '  || nr_seq_regra_w || ' ' || Wheb_mensagem_pck.get_texto(306718) || ' ' || nr_seq_evento_p || ' ' || Wheb_mensagem_pck.get_texto(306706) || ' ' ||						coalesce(somente_numero(ds_adicional_3_p),0) WHEN nr_seq_evento_p=332 THEN  Wheb_mensagem_pck.get_texto(306714) || ' '  || nr_seq_regra_w || ' ' || Wheb_mensagem_pck.get_texto(306718) || ' ' || nr_seq_evento_p|| ' ' || Wheb_mensagem_pck.get_texto(306745) || ' ' ||ds_adicional_1_p  ELSE Wheb_mensagem_pck.get_texto(306714) || ' ' || nr_seq_regra_w || ' ' || Wheb_mensagem_pck.get_texto(306718) || ' ' || nr_seq_evento_p END ,
						nr_seq_regra_w, ie_tipo_guia_w, CASE WHEN nr_interno_conta_ww=0 THEN  null  ELSE nr_interno_conta_ww END ,
						nr_cirurgia_w,
						nr_seq_reg_template_w,
						cd_cnpj_prestador_w);
					exception
						when 	others then
						nr_sequencia_w := 0;
					end;
					
					if (coalesce(ie_atualiza_kit_w,'N') = 'S') and
						((coalesce(cd_kit_material_w, 0) > 0) and (ie_material_pai_w = 'S')) then
						update	material_atend_paciente
						set 	cd_kit_material = cd_kit_material_w
						where 	nr_sequencia = nr_sequencia_w;					
					end if;
					
					end;
				end if;

				if (nr_sequencia_w > 0) and (nr_seq_evento_p <> 12) and (nr_seq_evento_p <> 123) then
					CALL atualiza_preco_material(nr_sequencia_w, nm_usuario_p);

					/* francisco - os 55599 - 26/07/07 - gerar autorizacao */

					begin
					select	coalesce(max('S'),'N')
					into STRICT	ie_existe_regra_w
					from	regra_gerar_autorizacao where		ie_evento	= 'LA'
					and		ie_tipo_autorizacao = '4'
					and		cd_convenio	= coalesce(cd_convenio_w,obter_convenio_atendimento(nr_atendimento_p))
					and		coalesce(ie_situacao, 'A') = 'A' LIMIT 1;
			
					if (ie_existe_regra_w = 'S') then
						CALL gerar_autor_regra(nr_atendimento_p,nr_sequencia_w,null,null,null,null,'LA',nm_usuario_p,null,null,null,null,null,null,'','','');
					end if;	
					exception
						when others then
						null;
					end;
				end if;
				end;
			end if;
			end;
		end if;
		end;
		<<continue_loop>>
		ie_situacao_w := null;
	end loop;
	close c02;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adep_gerar_lanc_automatico ( nr_atendimento_p bigint, cd_local_estoque_p bigint, nr_seq_evento_p bigint, nm_usuario_p text, nr_sequencia_p bigint, ds_adicional_1_p text, ds_adicional_2_p text, ds_adicional_3_p text, ds_adicional_4_p text, nr_interno_conta_p bigint, cd_proc_adic_p bigint, ie_origem_adic_p bigint, nr_seq_proc_interno_adic_p bigint, cd_procedimento_p bigint default null, ie_origem_proced_p bigint default null, nr_seq_proc_interno_p bigint default null, qt_procedimento_p bigint default null, nr_seq_exame_p bigint default null) FROM PUBLIC;

