-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_se_espec_medico ( nr_seq_conta_p bigint, ds_espec_invalido_p INOUT text, ds_obervacao_medico_p INOUT text) AS $body$
DECLARE



cd_medico_w			varchar(10);
cd_medico_ww			varchar(10);
nr_seq_conselho_w		bigint;
uf_crm_w			varchar(2);
qt_reg_w			bigint;
qt_esp_w			integer;
ie_cooperador_w			varchar(1);
ie_tipo_guia_w			varchar(2);
uf_crm_solic_w			varchar(2);
nr_seq_conselho_solic_w		varchar(10);
nr_seq_conselho_solic_ww	varchar(10);
cd_medico_solicitante_w		varchar(10);
cd_medico_solicitante_ww	varchar(10);
sg_conselho_exec_imp_w		varchar(20);
uf_crm_exec_imp_w		varchar(20);
cd_medico_solicitante_imp_w	varchar(20);
sg_conselho_solic_imp_w		varchar(20);
uf_crm_solic_imp_w		varchar(20);
nr_seq_conta_proc_w		bigint;
dt_conta_w			timestamp;


C01 CURSOR FOR
	SELECT	cd_medico_executor,
		nr_seq_conselho_exec ,
		uf_crm_exec,
		uf_crm_exec_imp,
		sg_conselho_exec_imp
	from	pls_conta
	where	nr_sequencia = nr_seq_conta_p
	and	((cd_medico_executor IS NOT NULL AND cd_medico_executor::text <> '')
	or (cd_medico_ww IS NOT NULL AND cd_medico_ww::text <> ''));

C02 CURSOR FOR
	SELECT	cd_medico_solicitante,
		cd_medico_solicitante_imp ,
		nr_seq_conselho_solic,
		sg_conselho_solic_imp,
		uf_crm_solic_imp
	from	pls_conta
	where	nr_sequencia = nr_seq_conta_p
	and	((cd_medico_solicitante IS NOT NULL AND cd_medico_solicitante::text <> '')
	or (cd_medico_solicitante_imp IS NOT NULL AND cd_medico_solicitante_imp::text <> ''));

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_conta_proc
	where	nr_seq_conta	= nr_seq_conta_p;

C04 CURSOR FOR
	SELECT	cd_medico,
		nr_seq_conselho,
		'' uf_crm
	from	pls_proc_participante
	where	nr_seq_conta_proc	= nr_seq_conta_proc_w
	and	(cd_medico IS NOT NULL AND cd_medico::text <> '');


BEGIN

cd_medico_ww	:= pls_obter_dados_gerar_conta(nr_seq_conta_p,'M');

select	ie_tipo_guia,
	cd_medico_solicitante,
	dt_atendimento_referencia
into STRICT	ie_tipo_guia_w,
	cd_medico_solicitante_w,
	dt_conta_w
from	pls_conta
where	nr_sequencia = nr_seq_conta_p;

if (cd_medico_solicitante_w IS NOT NULL AND cd_medico_solicitante_w::text <> '') then
	uf_crm_solic_w := obter_dados_medico(cd_medico_solicitante_w,'UFCRM');
	nr_seq_conselho_solic_w := pls_obter_seq_conselho_prof(cd_medico_solicitante_w);
end if;

open C01;
loop
fetch C01 into
	cd_medico_w,
	nr_seq_conselho_w,
	uf_crm_w,
	uf_crm_exec_imp_w,
	sg_conselho_exec_imp_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (coalesce(cd_medico_w::text, '') = '') then
		cd_medico_w	:= cd_medico_ww;
	end if;

	if (coalesce(nr_seq_conselho_w::text, '') = '') then
		begin
			nr_seq_conselho_w	:= pls_obter_seq_conselho(sg_conselho_exec_imp_w);
		exception
		when others then
			nr_seq_conselho_w	:= null;
		end;
	end if;

	if (coalesce(uf_crm_w::text, '') = '') then
		uf_crm_w		:= uf_crm_exec_imp_w;
	end if;

	if (pls_obter_se_cooperado_ativo(cd_medico_w,dt_conta_w,null, nr_seq_conta_p) = 'S') then
		ie_cooperador_w	:= 'C';
	else
		ie_cooperador_w	:= 'N';
	end if;

	select	count(1)
	into STRICT	qt_reg_w
	from	pls_regra_exige_espec
	where	ie_situacao = 'A'
	and	((coalesce(nr_seq_conselho::text, '') = '') or (nr_seq_conselho = nr_seq_conselho_w))
	and	((coalesce(uf_crm::text, '') = '') or (uf_crm = uf_crm_w) or ('5' = ie_tipo_guia_w))
	and (ie_tipo_medico = ie_cooperador_w or ie_tipo_medico = 'A');

	if (qt_reg_w > 0) then

		select	count(1)
		into STRICT	qt_esp_w
		from	medico_especialidade
		where	cd_pessoa_fisica	= cd_medico_w;

		if (qt_esp_w = 0) then
			ds_obervacao_medico_p := ds_obervacao_medico_p ||obter_nome_pf(cd_medico_w) ||'; ';
			ds_espec_invalido_p := 'S';
		end if;
	end if;
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	cd_medico_solicitante_ww,
	cd_medico_solicitante_imp_w,
	nr_seq_conselho_solic_ww,
	sg_conselho_solic_imp_w,
	uf_crm_solic_imp_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	cd_medico_w		:= cd_medico_solicitante_ww;
	nr_seq_conselho_w	:= nr_seq_conselho_solic_ww;
	uf_crm_w		:= uf_crm_solic_imp_w;

	if (coalesce(uf_crm_w::text, '') = '') then
		uf_crm_w	:= uf_crm_solic_w;
	end if;

	if (coalesce(cd_medico_w::text, '') = '') then
		cd_medico_w	:= cd_medico_solicitante_imp_w;
	end if;

	if (coalesce(nr_seq_conselho_w::text, '') = '') then
		begin
			nr_seq_conselho_w	:= pls_obter_seq_conselho(sg_conselho_solic_imp_w);
		exception
		when others then
			nr_seq_conselho_w	:= null;
		end;
	end if;

	if (coalesce(nr_seq_conselho_w::text, '') = '') then
		nr_seq_conselho_w	:= nr_seq_conselho_solic_w;
	end if;

	if (pls_obter_se_cooperado_ativo(cd_medico_w,dt_conta_w,null, nr_seq_conta_p) = 'S') then
		ie_cooperador_w	:= 'C';
	else
		ie_cooperador_w	:= 'N';
	end if;

	select	count(1)
	into STRICT	qt_reg_w
	from	pls_regra_exige_espec
	where	ie_situacao = 'A'
	and	((coalesce(nr_seq_conselho::text, '') = '') or (nr_seq_conselho = nr_seq_conselho_w))
	and	((coalesce(uf_crm::text, '') = '') or (uf_crm = uf_crm_w) or ('5' = ie_tipo_guia_w))
	and (ie_tipo_medico = ie_cooperador_w or ie_tipo_medico = 'A');

	if (qt_reg_w > 0) then

		select	count(1)
		into STRICT	qt_esp_w
		from	medico_especialidade
		where	cd_pessoa_fisica	= cd_medico_w;

		if (qt_esp_w = 0) then
			ds_obervacao_medico_p := ds_obervacao_medico_p ||obter_nome_pf(cd_medico_w) ||'; ';
			ds_espec_invalido_p := 'S';
		end if;
	end if;


	end;
end loop;
close C02;
if (ie_tipo_guia_w	= '5') then
	open C03;
	loop
	fetch C03 into
		nr_seq_conta_proc_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		open C04;
		loop
		fetch C04 into
			cd_medico_w,
			nr_seq_conselho_w,
			uf_crm_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			if (pls_obter_se_cooperado_ativo(cd_medico_w,dt_conta_w,null, nr_seq_conta_p) = 'S') then
				ie_cooperador_w	:= 'C';
			else
				ie_cooperador_w	:= 'N';
			end if;

			select	count(1)
			into STRICT	qt_reg_w
			from	pls_regra_exige_espec
			where	ie_situacao = 'A'
			and	((coalesce(nr_seq_conselho::text, '') = '') or (nr_seq_conselho = nr_seq_conselho_w))
			and	((coalesce(uf_crm::text, '') = '') or (uf_crm = uf_crm_w) or ('5' = ie_tipo_guia_w))
			and (ie_tipo_medico = ie_cooperador_w or ie_tipo_medico = 'A');

			if (qt_reg_w > 0) then

				select	count(1)
				into STRICT	qt_esp_w
				from	medico_especialidade
				where	cd_pessoa_fisica	= cd_medico_w;

				if (qt_esp_w = 0) then
					ds_obervacao_medico_p := substr(ds_obervacao_medico_p ||obter_nome_pf(cd_medico_w) ||'; ',1,255);
					ds_espec_invalido_p := 'S';
				end if;
			end if;
			end;
		end loop;
		close C04;
		end;
	end loop;
	close C03;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_se_espec_medico ( nr_seq_conta_p bigint, ds_espec_invalido_p INOUT text, ds_obervacao_medico_p INOUT text) FROM PUBLIC;

