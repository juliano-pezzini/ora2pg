-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_prescr_dieta (nr_prescricao_p bigint, ds_lista_dieta_p text, cd_perfil_P bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
lista_informacao_w		varchar(1000);
ie_contador_w			bigint	:= 0;
tam_lista_w			bigint;
ie_pos_virgula_w		smallint;
cd_dieta_w			bigint;
nr_sequencia_w			bigint;
cd_estabelecimento_w		bigint;
nr_atendimento_w		bigint;
ie_permite_dieta_w		varchar(2);
ie_jejum_w			varchar(2);
VarConsisteSeJejumValido_w	varchar(2);
qt_dietas_w			bigint;
cont_w				bigint;
dt_prescricao_w			timestamp;
ds_erro_w			varchar(2000);
cd_funcao_w			integer;
ds_tempo_w			varchar(50);
ie_prescr_atual_w		varchar(1);
dt_inicio_prescr_w		timestamp;
dt_validade_prescr_w		timestamp;


BEGIN 
 
lista_informacao_w	:= ds_lista_dieta_p;
VarConsisteSeJejumValido_w := obter_param_usuario(924, 708, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, VarConsisteSeJejumValido_w);
qt_dietas_w := obter_param_usuario(924, 298, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, qt_dietas_w);
ie_prescr_atual_w := Obter_Param_Usuario(924, 1012, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_prescr_atual_w);
 
if (VarConsisteSeJejumValido_w = 'S') then 
	select	Obter_se_prescr_pac_jejum(nr_prescricao_p) 
	into STRICT	ie_jejum_w 
	;
 
	if (ie_jejum_w = 'S') then 
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(178043);
	end if;
end if;
 
select	max(dt_inicio_prescr), 
	max(dt_validade_prescr), 
	coalesce(max(cd_funcao_origem),obter_funcao_ativa), 
	max(nr_atendimento) 
into STRICT	dt_inicio_prescr_w, 
	dt_validade_prescr_w, 
	cd_funcao_w, 
	nr_atendimento_w 
from	prescr_medica 
where	nr_prescricao = nr_prescricao_p;
 
while	(lista_informacao_w IS NOT NULL AND lista_informacao_w::text <> '') or 
	ie_contador_w > 200 loop 
	begin 
	 
	tam_lista_w			:= length(lista_informacao_w);
	ie_pos_virgula_w		:= position(',' in lista_informacao_w);
 
	/* Obter a sequência lida */
 
	if (ie_pos_virgula_w <> 0) then 
		cd_dieta_w		:= substr(lista_informacao_w,1,(ie_pos_virgula_w - 1));
		lista_informacao_w	:= substr(lista_informacao_w,(ie_pos_virgula_w + 1),tam_lista_w);
	end if;
	 
	if (qt_dietas_w > 0) then 
		select	count(*) 
		into STRICT	cont_w 
		from	prescr_dieta a, 
			prescr_medica b 
		where	obter_se_prescr_vig_adep(b.dt_inicio_prescr, b.dt_validade_prescr, dt_inicio_prescr_w, dt_validade_prescr_w) = 'S' 
		and	a.nr_prescricao		= b.nr_prescricao 
		and	coalesce(b.dt_suspensao::text, '') = '' 
		and	coalesce(a.dt_suspensao::text, '') = '' 
		and	((b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') or (b.nr_prescricao	= nr_prescricao_p)) 
		and	b.nr_atendimento	= nr_atendimento_w 
		and	((ie_prescr_atual_w = 'N') or 
			 (ie_prescr_atual_w = 'S' AND b.nr_prescricao	= nr_prescricao_p));
		 
		if (qt_dietas_w > 0) and 
			((cont_w = qt_dietas_w) or 
			 ((cont_w + 1) > qt_dietas_w)) then 
			if (cd_funcao_w	= 950) then 
				ds_tempo_w	:= lower(Wheb_mensagem_pck.get_texto(308845)); --'plano'; 
			elsif (ie_prescr_atual_w	= 'N') then
				ds_tempo_w	:= lower(Wheb_mensagem_pck.get_texto(308846)); --'período de prescrições'; 
			else
				ds_tempo_w	:= lower(Wheb_mensagem_pck.get_texto(308847)); --'prescrição';		 
			end if;				
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(178044, 'DS_TEMPO='|| ds_tempo_w ||';QT_DIETAS=' || qt_dietas_w);
		end if;
	end if;
 
	 
	/* Obterm a nova sequência */
 
	select	coalesce(max(nr_sequencia),0)+1 
	into STRICT	nr_sequencia_w 
	from	prescr_dieta 
	where	nr_prescricao		= nr_prescricao_p;
	 
	select	max(cd_estabelecimento), 
		max(dt_prescricao) 
	into STRICT	cd_estabelecimento_w, 
		dt_prescricao_w 
	from	prescr_medica 
	where	nr_prescricao		= nr_prescricao_p;
	 
	select 	max(Obter_Se_dieta_valida(cd_dieta_w, cd_estabelecimento_w, dt_prescricao_w)) 
	into STRICT	ie_permite_dieta_w 
	;
 
	if (ie_permite_dieta_w = 'N') then 
		rollback;
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(178090, 'NM_DIETA=' || substr(obter_nome_dieta(cd_dieta_w),1,80));	
	end if;
	 
	insert into prescr_dieta( 
		nr_prescricao, 
		nr_sequencia, 
		cd_dieta, 
		dt_atualizacao, 
		nm_usuario, 
		ie_suspenso 
	) values ( 
		nr_prescricao_p, 
		nr_sequencia_w, 
		cd_dieta_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		'N' 
	);
	 
	ds_erro_w := Consistir_prescr_dieta(nr_prescricao_p, nr_sequencia_w, cd_estabelecimento_p, cd_perfil_p, nm_usuario_p, ds_erro_w);
	ie_contador_w	:= ie_contador_w + 1;
	 
	end;
end loop;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_prescr_dieta (nr_prescricao_p bigint, ds_lista_dieta_p text, cd_perfil_P bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

