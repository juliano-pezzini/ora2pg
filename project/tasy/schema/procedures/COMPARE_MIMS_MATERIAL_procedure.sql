-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE compare_mims_material ( cd_imp_material_p imp_material.cd_material%TYPE, nr_seq_mims_number_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

  isdirtycheck                  smallint := 0;
  material_exists_w             smallint := 0;
  cd_material_w                 material.cd_material%TYPE;
  nr_seq_imp_ficha_tecnica_w    bigint;
  nr_pbs_updates_w				smallint := 0;
  nr_interaction_diff_count		bigint := 0;
  nr_imp_interactions_w			bigint := 0;

  -- via_aplicacao    
  c_via_aplicacao CURSOR FOR
    SELECT a.nr_sequencia AS nr_seq_imp_mat_via_aplic_w, 
           c.nr_sequencia AS nr_seq_mat_via_aplic_w 
    FROM   imp_mat_via_aplic a, 
           mims_material_tasy b, 
           mat_via_aplic c 
    WHERE  A.cd_material = cd_imp_material_p 
           AND a.cd_material = b.cd_imp_material 
           AND b.cd_material_tasy = c.cd_material;
  c_via_aplicacao_comparator CURSOR(
    nr_seq_imp_via_aplic_w  bigint, 
    nr_seq_tasy_via_aplic_w bigint) FOR 
    SELECT a.ie_via_aplicacao, 
           a.ds_via_aplicacao, 
           b.ds_recomendacao, 
           b.ie_diluicao, 
           b.cd_setor_atendimento, 
           b.cd_setor_excluir, 
           b.ie_recomendada, 
           b.nr_seq_prioridade 
    FROM   imp_via_aplicacao a, 
           imp_mat_via_aplic b 
    WHERE  b.nr_sequencia = nr_seq_imp_via_aplic_w 
           AND b.ie_via_aplicacao = a.ie_via_aplicacao 
    
    EXCEPT 
    SELECT a.ie_via_aplicacao, 
           a.ds_via_aplicacao, 
           b.ds_recomendacao, 
           b.ie_diluicao, 
           b.cd_setor_atendimento, 
           b.cd_setor_excluir, 
           b.ie_recomendada, 
           b.nr_seq_prioridade 
    FROM   via_aplicacao a, 
           mat_via_aplic b 
    WHERE  b.nr_sequencia = nr_seq_tasy_via_aplic_w 
           AND b.ie_via_aplicacao = a.ie_via_aplicacao;
  c_unidade_medida CURSOR FOR
    SELECT a.cd_unidade_medida AS CD_IMP_UNIDADE_MEDIDA_W, 
           c.cd_unidade_medida AS CD_TASY_UNIDADE_MEDIDA_W 
    FROM   imp_material_conv_unidade a,  
           mims_material_tasy b, 
           material_conversao_unidade c 
    WHERE  a.cd_material = cd_imp_material_p 
           AND a.cd_material = b.cd_imp_material 
           AND b.cd_material_tasy = c.cd_material;

  -- UNIT CONVERSATION
  c_unidade_medida_comparator CURSOR(
    cd_imp_unidade_medida  text, 
    cd_tasy_unidade_medida text ) FOR 
    SELECT a.ie_prioridade, 
           a.qt_conversao 
          -- b.ds_unidade_medida 
    FROM   imp_material_conv_unidade a, 
           imp_unidade_medida b 
    WHERE  a.cd_material = cd_imp_material_p 
           AND a.cd_unidade_medida = cd_imp_unidade_medida 
           AND a.cd_unidade_medida = b.cd_unidade_medida 
    
    EXCEPT 
    SELECT a.ie_prioridade, 
           a.qt_conversao
           
    FROM   material_conversao_unidade a, 
           unidade_medida b 
    WHERE  a.cd_material = cd_material_w 
           AND a.cd_unidade_medida = cd_tasy_unidade_medida 
           AND a.cd_unidade_medida = b.cd_unidade_medida;

  -- MATERIAL REACTIONS 
  c_mat_int_medic_comp CURSOR FOR
    SELECT d.cd_dcb, 
           a.ds_ref_bibliografica, 
           a.ds_orientacao, 
		   a.ie_severidade,
		   a.ds_observation_notes,
		   a.ds_precaution_notes,
           (SELECT z.cd_dcb 
            FROM   imp_medic_ficha_tecnica y, 
                   imp_dcb_medic_controlado z 
            WHERE  y.nr_sequencia = a.nr_seq_ficha_interacao 
                   AND y.nr_seq_dcb = z.nr_sequencia) AS CD_DCB_INTERACAO 
    FROM   imp_material_interacao_med a, 
           imp_medic_ficha_tecnica b, 
           imp_material c, 
           imp_dcb_medic_controlado d 
    WHERE  c.cd_material = cd_imp_material_p 
           AND c.nr_seq_ficha_tecnica = b.nr_sequencia 
           AND b.nr_seq_dcb = d.nr_sequencia 
           AND b.nr_sequencia = a.nr_seq_ficha 
    
    EXCEPT 
    SELECT h.cd_dcb, 
           e.ds_ref_bibliografica, 
           e.ds_orientacao, 
		   e.ie_severidade,
		   e.ds_observation_notes,
		   e.ds_precaution_notes,
           (SELECT z.cd_dcb 
            FROM   medic_ficha_tecnica y, 
                   dcb_medic_controlado z 
            WHERE  y.nr_sequencia = e.nr_seq_ficha_interacao 
                   AND y.nr_seq_dcb = z.nr_sequencia) AS CD_DCB_INTERACAO 
    FROM   material_interacao_medic e, 
           medic_ficha_tecnica f, 
           material g, 
           dcb_medic_controlado h 
    WHERE  g.cd_material = cd_material_w 
           AND g.nr_seq_ficha_tecnica = f.nr_sequencia 
           AND f.nr_seq_dcb = h.nr_sequencia 
           AND f.nr_sequencia = e.nr_seq_ficha;
BEGIN
    -- FIRST LEVEL OF FILTER : If we do not have a corrosponding value of material       

    -- in Tasy then exit stating that we have differneces       

  /*  SELECT Max(1), 
           Max(b.cd_material) 
    INTO   material_exists_w, cd_material_w 
    FROM   imp_material a, 
           material b, 
           mims_material_tasy c 
    WHERE  a.cd_material = cd_imp_material_p -- imp_material
           AND a.cd_material = c.cd_imp_material 
           AND c.cd_material_tasy = b.cd_material;  */
           
           
        SELECT cd_material_tasy into STRICT cd_material_w 
        FROM mims_material_tasy 
        WHERE  CD_IMP_MATERIAL = cd_imp_material_p;

    IF (cd_material_w IS NOT NULL AND cd_material_w::text <> '') THEN
      -- MATERIAL        
      SELECT Count(1) 
      INTO STRICT   isdirtycheck 
      FROM (SELECT --a.ds_material, 
                     --a.ds_reduzida, 

                     --a.cd_unidade_medida_compra, 

                     --a.cd_unidade_medida_estoque, 

                     --a.cd_unidade_medida_consumo, 

                     --a.cd_unidade_medida_solic, 

                     --a.qt_conversao_mg, 

                     --a.cd_unid_med_concetracao, 
                     a.cd_sistema_ant 
              FROM   imp_material a 
              WHERE  a.cd_material = cd_imp_material_p 
                     AND a.nr_seq_mims_version = nr_seq_mims_number_p 
              EXCEPT 
              SELECT
                     a.cd_sistema_ant 
              FROM   material a 
              WHERE  a.cd_material = cd_material_w) alias2;

      IF ( isdirtycheck = 1 ) THEN 
        UPDATE imp_material a 
        SET    a.ie_dirty_check = 1 
        WHERE  a.cd_material = cd_imp_material_p;
      END IF;

      -- GUIDELINES        
      SELECT Count(1) 
      INTO STRICT   isdirtycheck 
      FROM (SELECT a.ds_orientacao_usuario 
              FROM   imp_material a 
              WHERE  a.cd_material = cd_imp_material_p 
                     AND a.nr_seq_mims_version = nr_seq_mims_number_p 
              EXCEPT 
              SELECT a.ds_orientacao_usuario 
              FROM   material a 
              WHERE  a.cd_material = cd_material_w) alias1;

      IF ( isdirtycheck = 1 ) THEN 
        UPDATE imp_material a 
        SET    a.ie_dirty_check = 1 
        WHERE  a.cd_material = cd_imp_material_p;
      END IF;

      -- Reset the values      
      isdirtycheck := 0;

      -- MATERIAL_REACAO      
      SELECT Count(1) 
      INTO STRICT   isdirtycheck 
      FROM (SELECT a.ds_reacao 
              FROM   imp_material_reacao a 
              WHERE  a.cd_material = cd_imp_material_p 
              
              EXCEPT 
              SELECT a.ds_reacao 
              FROM   material_reacao a 
              WHERE  a.cd_material = cd_material_w) alias1;

      IF ( isdirtycheck = 1 ) THEN 
        UPDATE imp_material_reacao a 
        SET    a.ie_dirty_check = 1 
        WHERE  a.cd_material = cd_imp_material_p;
		
		--display as updates available in compare screens when there are changes to reactions
		UPDATE imp_material a 
        SET    a.ie_dirty_check = 1 
        WHERE  a.cd_material = cd_imp_material_p;
		
      END IF;

      -- Reset the values      
      isdirtycheck := 0;

      -- MEDIC_CONTROLADO      
      SELECT Count(1) 
      INTO STRICT   isdirtycheck 
      FROM (SELECT a.cd_classificacao 
              FROM   imp_medic_controlado a 
              WHERE  a.cd_material = cd_imp_material_p 
              
              EXCEPT 
              SELECT a.cd_classificacao 
              FROM   medic_controlado a 
              WHERE  a.cd_material = cd_material_w) alias1;

      IF ( isdirtycheck = 1 ) THEN 
        UPDATE imp_medic_controlado a 
        SET    a.ie_dirty_check = 1 
        WHERE  a.cd_material = cd_imp_material_p;
      END IF;

      -- Reset the values      
      isdirtycheck := 0;

      --MEDIC_FICHA_TECNICA     
      SELECT Count(1) 
      INTO STRICT   isdirtycheck 
      FROM (SELECT c.cd_dcb
              FROM   imp_medic_ficha_tecnica a, 
                     imp_material b, 
                     imp_dcb_medic_controlado c 
              WHERE  b.cd_material = cd_imp_material_p 
                     AND b.nr_seq_ficha_tecnica = a.nr_sequencia 
                     AND a.nr_seq_dcb = c.nr_sequencia 
              EXCEPT 
              SELECT c.cd_dcb 
              FROM   medic_ficha_tecnica a, 
                     material b, 
                     dcb_medic_controlado c 
              WHERE  b.cd_material = cd_material_w 
                     AND b.nr_seq_ficha_tecnica = a.nr_sequencia 
                     AND a.nr_seq_dcb = c.nr_sequencia) alias1;
 
        /* SELECT a.nr_seq_ficha_tecnica 
        INTO   nr_seq_imp_ficha_tecnica_w 
        FROM   imp_material a 
        WHERE  a.cd_material = cd_imp_material_p; */
        
      IF ( isdirtycheck = 1 ) THEN 
	  -- since 1 active ingredient can be liked to many medicines, to avoid wrong display of data, we are maintaining

	  -- the status to a new column in imp_material

       /* UPDATE imp_medic_ficha_tecnica a
        SET    a.ie_dirty_check = 1 
        WHERE  a.nr_sequencia = nr_seq_imp_ficha_tecnica_w; */

		
		--display as updates available in compare screens when there are changes to active ingredient
		UPDATE imp_material a 
        SET    a.ie_dirty_check = 1 , a.IE_MEDICINE_DIRTY_CHECK = 1
        WHERE  a.cd_material = cd_imp_material_p;
		
      ELSE 
        UPDATE imp_material a
        SET    a.IE_MEDICINE_DIRTY_CHECK = 0
        WHERE  a.cd_material = cd_imp_material_p;
      END IF;
      
      SELECT Count(1) 
      INTO STRICT   isdirtycheck 
      FROM (SELECT IE_CLASSIF_CUSTO  
     FROM IMP_MATERIAL_ESTAB where CD_MATERIAL=cd_imp_material_p 
        EXCEPT
     SELECT IE_CLASSIF_CUSTO 
     FROM MATERIAL_ESTAB where CD_MATERIAL= cd_material_w) alias1;
     IF (isdirtycheck =1) THEN
        UPDATE IMP_MATERIAL_ESTAB a
        SET    a.ie_dirty_check = 1
        WHERE  a.cd_material = cd_imp_material_p;

		--display as updates available in compare screens when there are changes to reactions
		UPDATE imp_material a
        SET    a.ie_dirty_check = 1
        WHERE  a.cd_material = cd_imp_material_p;
     END IF;

	--MATERIAL_PBS Start
		begin
			nr_pbs_updates_w := 0;
			
			SELECT Count(1)
			INTO STRICT   nr_pbs_updates_w 
			FROM (SELECT cd_pbs from imp_material_pbs where cd_material = cd_imp_material_p and nr_seq_mims_version = nr_seq_mims_number_p 
			EXCEPT
			SELECT cd_pbs from material_pbs where cd_material = cd_material_w
			and	clock_timestamp() between coalesce(dt_start_validity,clock_timestamp()) and coalesce(dt_end_validity,clock_timestamp()) ) alias6;
			
			IF (nr_pbs_updates_w = 0) THEN
			SELECT Count(1)
			INTO STRICT   nr_pbs_updates_w 
			FROM (SELECT cd_pbs from material_pbs where cd_material = cd_material_w 
			and	clock_timestamp() between coalesce(dt_start_validity,clock_timestamp()) and coalesce(dt_end_validity,clock_timestamp())
			EXCEPT
			SELECT cd_pbs from imp_material_pbs where cd_material = cd_imp_material_p and nr_seq_mims_version = nr_seq_mims_number_p) alias7;
			END IF;
			
			IF (nr_pbs_updates_w != 0) THEN
			UPDATE IMP_MATERIAL_PBS SET IE_DIRTY_CHECK = 1 WHERE CD_MATERIAL = cd_imp_material_p;
			UPDATE imp_material a
			SET    a.ie_dirty_check = 1 , IE_PBS_DIRTY_CHECK = 1
			WHERE  a.cd_material = cd_imp_material_p;
			END IF;
		exception when others then
			null;
		end; --MATERIAL_PBS end
		
    ELSE
      UPDATE imp_material a 
      SET    a.ie_dirty_check = 2 , a.IE_PBS_DIRTY_CHECK = 2 , a.IE_MEDICINE_DIRTY_CHECK = 2
      WHERE  a.cd_material = cd_imp_material_p;

      UPDATE imp_material_reacao a 
      SET    a.ie_dirty_check = 2
      WHERE  a.cd_material = cd_imp_material_p;

      UPDATE imp_medic_controlado a 
      SET    a.ie_dirty_check = 2 
      WHERE  a.cd_material = cd_imp_material_p;

      /* SELECT a.nr_seq_ficha_tecnica 
      INTO   nr_seq_imp_ficha_tecnica_w 
      FROM   imp_material a 
      WHERE  a.cd_material = cd_imp_material_p; */


      /* UPDATE imp_medic_ficha_tecnica a
      SET    a.ie_dirty_check = 2 
      WHERE  a.nr_sequencia = nr_seq_imp_ficha_tecnica_w; */
      
      UPDATE IMP_MATERIAL_ESTAB a
      SET    a.ie_dirty_check = 2 
      WHERE  a.cd_material = cd_imp_material_p;
	  
	  UPDATE IMP_MATERIAL_PBS SET IE_DIRTY_CHECK = 2 WHERE CD_MATERIAL = cd_imp_material_p;

    END IF;
	
    -- material_interacao_med 
	begin
	nr_interaction_diff_count := 0;
	nr_imp_interactions_w := 0;
	
	IF (cd_material_w IS NOT NULL AND cd_material_w::text <> '') THEN
    FOR r_mat_int_medic_comp IN c_mat_int_medic_comp LOOP 
        /* UPDATE imp_material_interacao_med a 
        SET    a.ie_dirty_check = 1 
        WHERE  a.nr_seq_ficha_interacao = (SELECT	max(y.nr_sequencia)
											FROM   	imp_medic_ficha_tecnica y, 
													imp_dcb_medic_controlado z 
											WHERE  	z.cd_dcb = r_mat_int_medic_comp.cd_dcb_interacao 
											AND 	y.nr_seq_dcb = z.nr_sequencia)
		and	a.ie_dirty_check	<> 1; */
		nr_interaction_diff_count := nr_interaction_diff_count + 1;
    END LOOP;
	else
		-- The cursor used in c_mat_int_medic_comp , references cd_material_w which is null for new materials. So, it will not give correct result for the new materials.

		-- so we are using a different query to validate if there are any differences in case of new materials i.e. cd_material_w is null.

		-- we can extend this logic for the existing materials as well but since we are joining few extra tables here, we do not want it to impact the performance(not sure if it really impacts) bu extending it to the if condition.
		select count(1)
		into STRICT nr_interaction_diff_count from (
			    SELECT d.cd_dcb, 
					a.ds_ref_bibliografica, 
					a.ds_orientacao, 
					a.ie_severidade,
					a.ds_observation_notes,
					a.ds_precaution_notes,
					(SELECT z.cd_dcb 
					FROM   imp_medic_ficha_tecnica y, 
						imp_dcb_medic_controlado z 
					WHERE  y.nr_sequencia = a.nr_seq_ficha_interacao 
						AND y.nr_seq_dcb = z.nr_sequencia) AS CD_DCB_INTERACAO 
				FROM   imp_material_interacao_med a, 
						imp_medic_ficha_tecnica b, 
						imp_material c, 
						imp_dcb_medic_controlado d 
				WHERE  c.cd_material = cd_imp_material_p 
					AND c.nr_seq_ficha_tecnica = b.nr_sequencia 
					AND b.nr_seq_dcb = d.nr_sequencia 
					AND b.nr_sequencia = a.nr_seq_ficha 
				EXCEPT
				select 
				g.cd_dcb, 
				e.ds_ref_bibliografica, 
				e.ds_orientacao, 
				e.ie_severidade,
				e.ds_observation_notes,
				e.ds_precaution_notes,
				(SELECT z.cd_dcb 
				FROM   medic_ficha_tecnica y, 
				dcb_medic_controlado z 
				WHERE  y.nr_sequencia = e.nr_seq_ficha_interacao 
				AND y.nr_seq_dcb = z.nr_sequencia) AS CD_DCB_INTERACAO 
				from material_interacao_medic e,
				medic_ficha_tecnica f,
				dcb_medic_controlado g,
				IMP_DCB_MEDIC_CONTROLADO h,
				imp_medic_ficha_tecnica i,
				imp_material j
				where j.cd_material = cd_imp_material_p
				and  i.nr_sequencia = j.nr_seq_ficha_tecnica
				and  h.nr_sequencia = i.nr_seq_dcb
				and  g.cd_dcb = h.cd_dcb
				and f.nr_seq_dcb = g.nr_sequencia
				and e.nr_seq_ficha = f.nr_sequencia
		) alias3;
		
	end if;
	
	-- As per the tree view query, 

	-- IE_DRUGINTERACT_DIRTY_CHECK is null do not display the 'Drug Interactions' option in the tree

	-- IE_DRUGINTERACT_DIRTY_CHECK = 0 implies no changes (green)

	--IE_DRUGINTERACT_DIRTY_CHECK = 1or 2, implies updates available

	-- So, If there are no differences and the imp_material has non-zero records for imp_material_interacao_med, update the IE_DRUGINTERACT_DIRTY_CHECK to 0.
	
	
	SELECT Count(1)
      INTO STRICT   nr_imp_interactions_w 
      FROM (
	SELECT d.cd_dcb, 
           a.ie_severidade
    FROM   imp_material_interacao_med a, 
           imp_medic_ficha_tecnica b, 
           imp_material c, 
           imp_dcb_medic_controlado d 
    WHERE  c.cd_material = cd_imp_material_p 
           AND c.nr_seq_ficha_tecnica = b.nr_sequencia 
           AND b.nr_seq_dcb = d.nr_sequencia 
           AND b.nr_sequencia = a.nr_seq_ficha ) alias1;
		
	if (nr_interaction_diff_count <> 0) then 
		UPDATE imp_material a 
		SET  a.IE_DRUGINTERACT_DIRTY_CHECK = 1
		WHERE  a.cd_material = cd_imp_material_p;
	end if;
	exception when others then null;
	end; -- end of Drug Interactions
	
	if (nr_imp_interactions_w <> 0 and  nr_interaction_diff_count = 0) then
		UPDATE imp_material a 
		SET  a.IE_DRUGINTERACT_DIRTY_CHECK = 0
		WHERE  a.cd_material = cd_imp_material_p;
	end if;

    -- UNIDADE_MEDIDA AND MATERIAL_CONVERSAO_UNIDADE     
    FOR r_unidade_medida IN c_unidade_medida LOOP
        FOR r_unidade_medida_comparator IN c_unidade_medida_comparator(r_unidade_medida.cd_imp_unidade_medida_w, 
        r_unidade_medida.cd_tasy_unidade_medida_w ) LOOP 
            UPDATE imp_material_conv_unidade a 
            SET    a.ie_dirty_check = 0 
            WHERE  a.cd_material = cd_imp_material_p 
                   AND a.cd_unidade_medida = 
                       r_unidade_medida.cd_imp_unidade_medida_w;
        END LOOP;
    END LOOP;

    -- VIA_APLICACAO AND MAT_VIA_APLIC  
    isdirtycheck := 0;
    begin
      SELECT Count(1)
      INTO STRICT   isdirtycheck 
      FROM (  
        SELECT IE_VIA_APLICACAO from imp_mat_via_aplic where cd_material = cd_imp_material_p
        EXCEPT
        SELECT IE_VIA_APLICACAO from mat_via_aplic where cd_material in (select cd_material_tasy from  mims_material_tasy where cd_imp_material = cd_imp_material_p) 
      ) alias2;

	IF ( isdirtycheck =  0) THEN
        SELECT Count(1)
      INTO STRICT   isdirtycheck
      FROM (
        SELECT IE_VIA_APLICACAO from mat_via_aplic where cd_material in (SELECT cd_material_tasy from  mims_material_tasy where cd_imp_material = cd_imp_material_p)
        EXCEPT
        select IE_VIA_APLICACAO from imp_mat_via_aplic where cd_material = cd_imp_material_p) alias3;
      END IF;

      IF ( isdirtycheck !=  0) THEN
            isdirtycheck := 1;
      END IF;

    exception
    when others then
      isdirtycheck := 0;
    end;

  /*  FOR r_via_aplicacao IN c_via_aplicacao LOOP
        FOR r_via_aplicacao_comparator IN 
        c_via_aplicacao_comparator(r_via_aplicacao.nr_seq_imp_mat_via_aplic_w, 
        r_via_aplicacao.nr_seq_mat_via_aplic_w) LOOP 
          
            UPDATE imp_mat_via_aplic a 
            SET    a.ie_dirty_check = isdirtycheck 
            WHERE  a.nr_sequencia = r_via_aplicacao.nr_seq_imp_mat_via_aplic_w; 
        END LOOP; 
    END LOOP; */

	-- isdirtycheck !=0 implies that there are changes to imp_mat_via_aplic. Changes in imp_mat_via_aplic should notify there are changes to imp_material
	IF ( isdirtycheck !=  0) THEN
		UPDATE imp_mat_via_aplic a
        SET    a.ie_dirty_check = 1
        WHERE  a.CD_MATERIAL = cd_imp_material_p;

		IF (cd_material_w IS NOT NULL AND cd_material_w::text <> '') THEN
			UPDATE imp_material a
			SET    a.ie_dirty_check = 1
			WHERE  a.cd_material = cd_imp_material_p;
		end if;
	end if;


    COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE compare_mims_material ( cd_imp_material_p imp_material.cd_material%TYPE, nr_seq_mims_number_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

