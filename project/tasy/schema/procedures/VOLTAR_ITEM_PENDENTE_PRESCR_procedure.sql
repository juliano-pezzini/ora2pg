-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE voltar_item_pendente_prescr ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_devolucao_w			bigint;
dt_liberacao_baixa_w		timestamp;
dt_recebimento_w			timestamp;
nr_seq_mat_autor_w		bigint;
nr_sequencia_autor_w		bigint;
ie_interno_w			varchar(10);
qt_material_w			bigint;
qt_autor_conv_w			bigint := 0;
qt_solic_mat_autor_w		bigint := 0;
ds_observacao_w			autorizacao_convenio.ds_observacao%type;

BEGIN

select	coalesce(max(a.nr_devolucao),0),
	max(a.dt_liberacao_baixa),
	max(b.dt_recebimento)
into STRICT	nr_devolucao_w,
	dt_liberacao_baixa_w,
	dt_recebimento_w
from	devolucao_material_pac a,
	item_devolucao_material_pac b
where	a.nr_devolucao = b.nr_devolucao
and	b.nr_seq_atendimento = nr_sequencia_p
and	coalesce(b.dt_recebimento::text, '') = ''
and	coalesce(a.dt_baixa_total::text, '') = '';

if (nr_devolucao_w > 0) and (dt_liberacao_baixa_w IS NOT NULL AND dt_liberacao_baixa_w::text <> '') and (coalesce(dt_recebimento_w::text, '') = '') then /* Matheus OS 100882 */

	--r a i s e _a pplication_error(-20011, 'Este item não pode ser voltado a condição de pendente, ' || chr(13) || 'porque já está pendente para devolver na devolução: ' || nr_devolucao_w || '#@#@');
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(246783,'nr_devolucao_w=' ||nr_devolucao_w);
elsif (nr_devolucao_w > 0) and (coalesce(dt_liberacao_baixa_w::text, '') = '') and (coalesce(dt_recebimento_w::text, '') = '') then /* Matheus OS 100882 */
	delete from item_devolucao_material_pac
	where	nr_devolucao 		= nr_devolucao_w
	and	nr_seq_atendimento	= nr_sequencia_p;
end if;
/* Update para atualizar o registro com o nome do usuario que esta voltando a condicao de pendente */

update	material_atend_paciente
set	nm_usuario	= nm_usuario_p,
	dt_atualizacao	= clock_timestamp()
where	nr_sequencia	= nr_sequencia_p;

select	max(x.nr_seq_mat_autor),
	max(x.qt_material)
into STRICT	nr_seq_mat_autor_w,
	qt_material_w
from	material_atend_paciente x
where	x.nr_sequencia	= nr_sequencia_p;

if (nr_seq_mat_autor_w IS NOT NULL AND nr_seq_mat_autor_w::text <> '') then

	select	nr_sequencia_autor
	into STRICT	nr_sequencia_autor_w
	from	material_autorizado
	where	nr_sequencia	= nr_seq_mat_autor_w;

	select	coalesce(max(b.ie_interno),'0')
	into STRICT	ie_interno_w
	from	estagio_autorizacao b,
		autorizacao_convenio a
	where	b.nr_sequencia	= a.nr_seq_estagio
	and	a.nr_sequencia	= nr_sequencia_autor_w;

	if (ie_interno_w = '1') then
		update	material_autorizado
		set	qt_solicitada	= qt_solicitada - qt_material_w,
			ds_observacao	 = ds_observacao_w,
			nm_usuario	 = nm_usuario_p,
			dt_atualizacao 	 = clock_timestamp()
		where	nr_sequencia	= nr_seq_mat_autor_w;
		
		select	coalesce(sum(qt_solicitada),0)
		into STRICT	qt_solic_mat_autor_w
		from 	material_autorizado
		where	nr_sequencia_autor = nr_sequencia_autor_w;
		
		if (qt_solic_mat_autor_w = 0) then
			
			update	material_atend_paciente
			set	nr_seq_mat_autor	 = NULL
			where	nr_seq_mat_autor	= nr_seq_mat_autor_w;

			delete	from material_autorizado a
			where	a.nr_sequencia	= nr_seq_mat_autor_w
			and	a.nr_sequencia_autor = nr_sequencia_autor_w
			and	exists (SELECT	1
					from 	estagio_autorizacao y,
						autorizacao_convenio x
					where	x.nr_seq_estagio	= y.nr_sequencia
					and	x.nr_sequencia	= a.nr_sequencia_autor
					and	y.ie_interno	= '1'); --Necessidade
			
			select	count(1)
			into STRICT	qt_autor_conv_w
			from	material_autorizado where	nr_sequencia_autor = nr_sequencia_autor_w LIMIT 1;
			
			if (qt_autor_conv_w = 0) then
				select	count(1)
				into STRICT	qt_autor_conv_w
				from	procedimento_autorizado where	nr_sequencia_autor = nr_sequencia_autor_w LIMIT 1;
			end if;

			if (qt_autor_conv_w = 0) then
				--Cancelado pela exclusão do item Conta / Execução prescrição
				ds_observacao_w	:= substr(wheb_mensagem_pck.get_texto(305291),1,2000);
				
				update	autorizacao_convenio a
				set	a.nr_seq_estagio = (	SELECT	max(x.nr_sequencia)
								from	estagio_autorizacao x
								where	x.ie_interno = '70'),
					a.dt_atualizacao = clock_timestamp(),
					a.ds_observacao	 = ds_observacao_w,
					a.nm_usuario	 = nm_usuario_p
				where	a.nr_sequencia   = nr_sequencia_autor_w;
					
			end if;
		
			
		end if;
		
		
	end if;
end if;

delete
from	material_atend_paciente
where	nr_sequencia	= nr_sequencia_p;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE voltar_item_pendente_prescr ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

