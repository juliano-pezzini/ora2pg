-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_fornec_mat_autor_cir (nr_sequencia_autor_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_mat_autor_w	bigint;
cd_material_w		bigint;
qt_solicitada_w		double precision;
cd_grupo_material_w	smallint;
cd_subgrupo_material_w	smallint;
cd_classe_material_w	integer;
cd_cgc_fornecedor_w	varchar(14);
vl_fornec_w		double precision;
qt_fornec_w		bigint := 0;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.cd_material,
	coalesce(a.qt_solicitada,0)
from	material_autor_cirurgia a
where	a.nr_seq_autorizacao	= nr_sequencia_autor_p
and	not exists (select	1
	from	material_autor_cir_cot b
	where	b.nr_sequencia	= a.nr_sequencia);

c02 CURSOR FOR
SELECT	cd_cgc_fornecedor
from	regra_cotacao_mat_fornec
where	coalesce(cd_grupo_material,cd_grupo_material_w) = cd_grupo_material_w
and	coalesce(cd_subgrupo_material,cd_subgrupo_material_w) = cd_subgrupo_material_w
and	coalesce(cd_classe_material,cd_classe_material_w) = cd_classe_material_w
and	coalesce(cd_material,cd_material_w) = cd_material_w
and	((coalesce(cd_estabelecimento::text, '') = '') or
	(cd_estabelecimento IS NOT NULL AND cd_estabelecimento::text <> '' AND cd_estabelecimento = cd_estabelecimento_p))
and	coalesce(ie_gerar,'S') = 'S'
order by
	coalesce(cd_estabelecimento,0),
	coalesce(cd_grupo_material,0),
	coalesce(cd_subgrupo_material,0),
	coalesce(cd_classe_material,0),
	coalesce(cd_material,0);


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_mat_autor_w,
	cd_material_w,
	qt_solicitada_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	cd_grupo_material,
		cd_subgrupo_material,
		cd_classe_material
	into STRICT	cd_grupo_material_w,
		cd_subgrupo_material_w,
		cd_classe_material_w
	from	estrutura_material_v
	where	cd_material 	= cd_material_w;

	open C02;
	loop
	fetch C02 into
		cd_cgc_fornecedor_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */

	if (cd_cgc_fornecedor_w IS NOT NULL AND cd_cgc_fornecedor_w::text <> '') then

		select	count(*)
		into STRICT	qt_fornec_w
		from	material_autor_cir_cot
		where	nr_sequencia    = nr_seq_mat_autor_w
		and	cd_cgc		= cd_cgc_fornecedor_w;

		if (coalesce(qt_fornec_w,0) = 0) then

			vl_fornec_w	:= coalesce(obter_preco_vigente_mat_forn( cd_cgc_fornecedor_w, cd_material_w, wheb_usuario_pck.get_cd_estabelecimento),0);

			insert into MATERIAL_AUTOR_CIR_COT(cd_cgc,
				cd_condicao_pagamento,
				dt_atualizacao,
				dt_atualizacao_nrec,
				ie_aprovacao,
				nm_usuario,
				nm_usuario_nrec,
				nr_orcamento,
				nr_seq_marca,
				nr_sequencia,
				vl_cotado,
				vl_unitario_cotado)
			values (cd_cgc_fornecedor_w,
				null,
				clock_timestamp(),
				clock_timestamp(),
				'N',
				nm_usuario_p,
				nm_usuario_p,
				null,
				null,
				nr_seq_mat_autor_w,
				vl_fornec_w * qt_solicitada_w,
				vl_fornec_w);
		end if;

	end if;
	end loop;
	close C02;

	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_fornec_mat_autor_cir (nr_sequencia_autor_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

