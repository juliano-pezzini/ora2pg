-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copiar_medida_laudo ( nr_seq_origem_p bigint, nr_seq_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE



TYPE nr_seq_superior_temp_t IS TABLE OF bigint INDEX BY integer;
controle_sequencia_superior nr_seq_superior_temp_t;

nr_seq_medida_exame_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
ds_medida_w			varchar(255);
ds_formula_w			varchar(254);
ds_unidade_medida_w		varchar(20);
nr_seq_apresentacao_w		smallint;
ie_informado_w			varchar(1);
ds_medida_referencia_exame_w	varchar(80);
ie_situacao_w			varchar(1);
cd_tipo_valor_w			integer;
ie_tipo_valor_W			varchar(2);
ds_valor_w			varchar(255);
ie_situacao_opcao_w		varchar(1);
qt_idade_minima_w			smallint;
qt_idade_maxima_w		smallint;
qt_peso_minimo_w			smallint;
qt_peso_maximo_w			smallint;
ds_medida_referencia_w		varchar(80);
nr_sequencia_exame_w		bigint;
nr_seq_opcao_w			bigint;
nr_seq_refer_w			bigint;
ie_prioridade_w			smallint;
ie_sexo_w			varchar(1);
qt_tamanho_w			smallint;
qt_max_length_w			smallint;
vl_padrao_w			varchar(255);
qt_altura_w			smallint;
qt_decimais_w			integer;
nr_seq_tabstop_w			smallint;
ds_cor_fundo_w			varchar(20);
nr_seq_regra_w			bigint;
qt_pos_esquerda_w		smallint;
ie_tabstop_w			varchar(1);
ie_criar_regua_w 			varchar(1);
nr_seq_medida_exame_laudo_w	bigint;

ds_resultado_result_w		varchar(255);
nr_seq_exame_result_atual_w		bigint;
nr_seq_exame_result_ant_w		bigint;

nr_seq_exame_result_cond_w	bigint;
ds_resultado_result_cond_w		varchar(255);

ie_tipo_medida_w			varchar(15);
cd_valor_w			integer;
nr_seq_grupo_w			bigint;
QT_MEDIDA_MIN_w		double precision;
QT_MEDIDA_MAX_w		double precision;


c01 CURSOR FOR
	SELECT	nr_sequencia,
		nextval('medida_exame_laudo_seq'),
		cd_procedimento,
		ie_origem_proced,
		ds_medida,
		ds_formula,
		ds_unidade_medida,
		nr_seq_apresentacao,
		ie_informado,
		ds_medida_referencia,
		ie_situacao,
		cd_tipo_valor,
		ie_tipo_valor,
		qt_tamanho,
		qt_max_length,
		vl_padrao,
		qt_altura,
		qt_decimais,
		nr_seq_tabstop,
		ds_cor_fundo,
		nr_seq_regra,
		QT_POS_ESQUERDA,
		ie_tabstop,
		ie_criar_regua,
		nr_seq_medida_exame_laudo,
		QT_MEDIDA_MIN,
		QT_MEDIDA_MAX
	from	medida_exame_laudo
	where	nr_seq_tipo_medida	= nr_seq_origem_p;

c02 CURSOR FOR
	SELECT	nextval('medida_laudo_opcao_seq'),
		ds_valor,
		ie_situacao,
		ie_prioridade,
		cd_valor,
		nr_seq_grupo
	from	medida_laudo_opcao
	where	nr_seq_medida	= nr_sequencia_exame_w;


c03 CURSOR FOR
	SELECT	nextval('medida_exame_refer_seq'),
		qt_idade_minima,
		qt_idade_maxima,
		ds_medida_referencia,
		ie_sexo,
		qt_peso_minimo,
		qt_peso_maximo,
		ie_tipo_medida
	from	medida_exame_refer
	where	nr_seq_medida	= nr_sequencia_exame_w;

c04 CURSOR FOR
	SELECT	nextval('medida_exame_result_seq'),
		ds_resultado,
		nr_sequencia
	from	medida_exame_result
	where	nr_seq_medida	= nr_sequencia_exame_w;

c05 CURSOR FOR
	SELECT	nextval('medida_exame_result_cond_seq'),
		ds_resultado
	from	medida_exame_result_cond
	where	nr_seq_result 	= nr_seq_exame_result_ant_w;

c06 CURSOR FOR
  SELECT nr_sequencia,
    nr_seq_medida_exame_laudo
  FROM medida_exame_laudo
  WHERE nr_seq_tipo_medida = nr_seq_origem_p;


BEGIN

open	c01;
loop
fetch	c01 into
	nr_sequencia_exame_w,
	nr_seq_medida_exame_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	ds_medida_w,
	ds_formula_w,
	ds_unidade_medida_w,
	nr_seq_apresentacao_w,
	ie_informado_w,
	ds_medida_referencia_exame_w,
	ie_situacao_w,
	cd_tipo_valor_w,
	ie_tipo_valor_w,
	qt_tamanho_w,
	qt_max_length_w,
	vl_padrao_w,
	qt_altura_w,
	qt_decimais_w,
	nr_seq_tabstop_w,
	ds_cor_fundo_w,
	nr_seq_regra_w,
	QT_POS_ESQUERDA_W,
	ie_tabstop_w,
	ie_criar_regua_w,
	nr_seq_medida_exame_laudo_w,
	QT_MEDIDA_MIN_w,
	QT_MEDIDA_MAX_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	controle_sequencia_superior(nr_sequencia_exame_w) := nr_seq_medida_exame_w;

	insert into medida_exame_laudo(
		nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		dt_atualizacao,
		nm_usuario,
		ds_medida,
		ds_formula,
		ds_unidade_medida,
		nr_seq_apresentacao,
		ie_informado,
		ds_medida_referencia,
		ie_situacao,
		nr_seq_tipo_medida,
		cd_tipo_valor,
		ie_tipo_valor,
		qt_tamanho,
		qt_max_length,
		vl_padrao,
		qt_altura,
		qt_decimais,
		nr_seq_tabstop,
		ds_cor_fundo,
		nr_seq_regra,
		QT_POS_ESQUERDA,
		ie_tabstop,
		ie_criar_regua,
		nr_seq_medida_exame_laudo,
		QT_MEDIDA_MIN,
		QT_MEDIDA_MAX
		)
	values (
 		nr_seq_medida_exame_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		clock_timestamp(),
		nm_usuario_p,
		ds_medida_w,
		ds_formula_w,
		ds_unidade_medida_w,
		nr_seq_apresentacao_w,
		ie_informado_w,
		ds_medida_referencia_exame_w,
		ie_situacao_w,
		nr_seq_destino_p,
		cd_tipo_valor_w,
		ie_tipo_valor_w,
		qt_tamanho_w,
		qt_max_length_w,
		vl_padrao_w,
		qt_altura_w,
		qt_decimais_w,
		nr_seq_tabstop_w,
		ds_cor_fundo_w,
		nr_seq_regra_w,
		QT_POS_ESQUERDA_W,
		ie_tabstop_w,
		ie_criar_regua_w,
    nr_seq_medida_exame_laudo_w,
		QT_MEDIDA_MIN_w,
		QT_MEDIDA_MAX_w);

	open	c02;
	loop
	fetch	c02 into
		nr_seq_opcao_w,
		ds_valor_w,
		ie_situacao_opcao_w,
		ie_prioridade_w,
		cd_valor_w,
		nr_Seq_grupo_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */

		insert into medida_laudo_opcao(
			nr_sequencia,
			ds_valor,
			nr_seq_medida,
			dt_atualizacao,
			nm_usuario,
			ie_situacao,
			ie_prioridade,
			cd_valor,
			nr_Seq_grupo)
		values (
			nr_seq_opcao_w,
			ds_valor_w,
			nr_seq_medida_exame_w,
			clock_timestamp(),
			nm_usuario_p,
			ie_situacao_opcao_w,
			ie_prioridade_w,
			cd_valor_w,
			nr_Seq_grupo_w);

	end loop;
	close c02;


	open	c03;
	loop
	fetch	c03 into
		nr_seq_refer_w,
		qt_idade_minima_W,
		qt_idade_maxima_w,
		ds_medida_referencia_w,
		ie_sexo_w,
		qt_peso_minimo_w,
		qt_peso_maximo_w,
		ie_tipo_medida_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */

		insert 	into medida_exame_refer(
			nr_sequencia,
			nr_seq_medida,
			dt_atualizacao,
			nm_usuario,
			qt_idade_minima,
			qt_idade_maxima,
			ds_medida_referencia,
			ie_sexo,
			qt_peso_minimo,
			qt_peso_maximo,
			ie_tipo_medida)
		values (
			nr_seq_refer_w,
			nr_seq_medida_exame_w,
			clock_timestamp(),
			nm_usuario_p,
			qt_idade_minima_w,
			qt_idade_maxima_w,
			ds_medida_referencia_w,
			ie_sexo_w,
			qt_peso_minimo_w,
			qt_peso_maximo_w,
			ie_tipo_medida_w);
	end loop;
	close c03;

	open c04;
	loop
	fetch c04 into
		nr_seq_exame_result_atual_w,
		ds_resultado_result_w,
		nr_seq_exame_result_ant_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin

		insert into medida_exame_result(	nr_sequencia,
							nr_seq_medida,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ds_resultado)
		values (					nr_seq_exame_result_atual_w,
							nr_seq_medida_exame_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							ds_resultado_result_w);





		open c05;
		loop
		fetch c05 into
			nr_seq_exame_result_cond_w,
			ds_resultado_result_cond_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
			begin

			insert into medida_exame_result_cond(	nr_sequencia,
								nr_seq_result,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_medida,
								ds_resultado)
							values (	nr_seq_exame_result_cond_w,
								nr_seq_exame_result_atual_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_medida_exame_w,
								ds_resultado_result_cond_w);


			end;
		end loop;

		end;
		close c05;
	end loop;
	close c04;
end loop;
close c01;

OPEN c06;
LOOP
  FETCH c06 INTO nr_sequencia_exame_w, nr_seq_medida_exame_laudo_w;
  EXIT WHEN NOT FOUND; /* apply on c06 */
  BEGIN
    IF (nr_seq_medida_exame_laudo_w IS NOT NULL AND nr_seq_medida_exame_laudo_w::text <> '') THEN
      UPDATE medida_exame_laudo
      SET nr_seq_medida_exame_laudo = controle_sequencia_superior(nr_seq_medida_exame_laudo_w)
      WHERE nr_sequencia            = controle_sequencia_superior(nr_sequencia_exame_w);
    END IF;
  END;
END LOOP;
CLOSE c06;

commit;

controle_sequencia_superior.delete();

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_medida_laudo ( nr_seq_origem_p bigint, nr_seq_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

