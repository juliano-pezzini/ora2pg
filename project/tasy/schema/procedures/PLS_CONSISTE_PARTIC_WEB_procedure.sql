-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consiste_partic_web ( nr_seq_partic_p bigint, nr_seq_ocorrencia_p bigint, qt_min_digito_crm_p bigint, nr_seq_grau_partic_p bigint, cd_medico_executor_p text, nr_crm_executor_p text, ie_medico_cooperado_p text, dt_emissao_p timestamp, ie_gerou_partic_p INOUT text) AS $body$
DECLARE


/*+++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Consistir os participantes da rotina PLS_GERAR_OCORRENCIA_CONTA_WEB
--------------------------------------------------------------------------------------
Locais de chamada direta:
[X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ] Relatórios [ ] Outros:
 -------------------------------------------------------------------------------------
Pontos de atenção:
Cuidar com os tratamentos para participante pois pode influenciar em outras regras de ocorrência.
lembrando que nos parâmetros está vindo as informagções da regra de ocorrência
+++++++++++++++++++++++++++++++++++++++++++++++*/nr_seq_grau_partic_w	bigint;
nr_crm_imp_w		varchar(20);
cd_medico_imp_w		varchar(20);
ie_gerou_w		varchar(1);


BEGIN
/*Obter informações do participante*/

begin
select	nr_seq_grau_partic,
	nr_crm_imp ,
	cd_medico_imp
into STRICT	nr_seq_grau_partic_w,
	nr_crm_imp_w,
	cd_medico_imp_w
from	pls_proc_participante
where	nr_sequencia = nr_seq_partic_p;
exception
when others then
	nr_seq_grau_partic_w	:= null;
end;

/*Grau de participação*/

if (nr_seq_grau_partic_p IS NOT NULL AND nr_seq_grau_partic_p::text <> '')	then
	if (nr_seq_grau_partic_p <> coalesce(nr_seq_grau_partic_w,0))	then
		ie_gerou_w	:= 'S';
		goto final;
	end if;
end if;

/*Quantidade min digito crm*/

if (qt_min_digito_crm_p IS NOT NULL AND qt_min_digito_crm_p::text <> '')	then
	if (coalesce(nr_crm_imp_w,'X') <> 'X') and (length(nr_crm_imp_w) < qt_min_digito_crm_p ) then
		ie_gerou_w	:= 'S';
		goto final;
	end if;
end if;
/*Médico*/

if (cd_medico_executor_p IS NOT NULL AND cd_medico_executor_p::text <> '')	then
	if (cd_medico_executor_p <> coalesce(cd_medico_imp_w,'X'))	then
		ie_gerou_w	:= 'S';
		goto final;
	end if;
end if;
/*CRM do médico*/

if (nr_crm_executor_p IS NOT NULL AND nr_crm_executor_p::text <> '')	then
	if (nr_crm_executor_p <> coalesce(nr_crm_imp_w,'X'))	then
		ie_gerou_w := 'S';
		goto final;
	end if;
end if;

/*se médico cooperado*/

if (ie_medico_cooperado_p IS NOT NULL AND ie_medico_cooperado_p::text <> '')	then
	if (coalesce(ie_medico_cooperado_p, 'A') = 'C') then
		if (pls_obter_se_cooperado_ativo(cd_medico_imp_w,dt_emissao_p, null) = 'N') then
			ie_gerou_w	:= 'S';
			goto final;
		end if;

	elsif (coalesce(ie_medico_cooperado_p, 'A') = 'N') then
		if (pls_obter_se_cooperado_ativo(cd_medico_imp_w,dt_emissao_p, null) = 'S') then
			ie_gerou_w := 'S';
			goto final;
		end if;
	end if;

end if;

<<final>>
ie_gerou_partic_p	:= ie_gerou_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consiste_partic_web ( nr_seq_partic_p bigint, nr_seq_ocorrencia_p bigint, qt_min_digito_crm_p bigint, nr_seq_grau_partic_p bigint, cd_medico_executor_p text, nr_crm_executor_p text, ie_medico_cooperado_p text, dt_emissao_p timestamp, ie_gerou_partic_p INOUT text) FROM PUBLIC;

