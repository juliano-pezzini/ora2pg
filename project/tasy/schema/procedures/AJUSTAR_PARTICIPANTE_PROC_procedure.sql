-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ajustar_participante_proc ( ie_evento_p text, nr_cirurgia_p bigint, nr_sequencia_p bigint, ie_funcao_p text, cd_pessoa_fisica_p text, nm_participante_p text, nr_seq_procedimento_p bigint, mm_usuario_p text) AS $body$
DECLARE

 
dt_atualizacao_w			timestamp 			:= clock_timestamp();
nr_seq_proc_w			bigint;
nr_seq_partic_w			bigint;
ie_emite_conta_w      		varchar(03);
cd_estabelecimento_w		smallint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
dt_conta_w			timestamp;
cd_especialidade_w		integer;
nr_seq_partic_ww			bigint;
nm_usuario_w			varchar(15);
cd_estrutura_w			integer 		:= 0;
cd_estrutura_honor_w		integer 		:= 0;
ie_medico_w			varchar(1);
ie_tipo_servico_sus_w		smallint;				
ie_tipo_servico_sus_ww		smallint;	
ie_tipo_ato_sus_w			smallint;
ie_tipo_convenio_w			smallint;
ie_doc_executor_w			smallint := null;
cd_cgc_prestador_w		varchar(14);
ie_responsavel_credito_w		varchar(5);
cd_cbo_w			varchar(6);
nr_seq_regra_doc_w		bigint	:= 0;
ie_restringe_partic_proc_cir_w	varchar(1):= 'N';
cd_setor_atendimento_w		integer;
nr_seq_exame_w			bigint;
nr_seq_proc_interno_w		bigint;
dt_procedimento_w			timestamp;
ie_medico_executor_w  		varchar(1);
cd_cgc_w			varchar(14):=null;
cd_medico_executor_w		varchar(10);
cd_pessoa_fisica_w		varchar(10);
ie_tipo_atendimento_w		smallint;
ie_cons_medico_exec_w		varchar(1);
nr_atendimento_w			bigint;
nr_seq_classificacao_w		bigint;
nr_prescricao_w			bigint;
nr_sequencia_prescricao_w	integer;
ie_origem_inf_w			varchar(1);
cd_cgc_laboratorio_w		varchar(14);
cd_setor_prescricao_w		integer;
ie_participou_sus_w		sus_regra_func_partic_cir.ie_participou_sus%type := 'S';
cd_plano_w			atend_categoria_convenio.cd_plano_convenio%type;

			 
c01 CURSOR FOR 
SELECT	b.nr_sequencia, 
		c.cd_estabelecimento, 
		b.cd_convenio, 
		b.cd_categoria, 
		b.cd_procedimento, 
		b.ie_origem_proced, 
		b.dt_conta, 
		b.nm_usuario, 
		b.cd_setor_atendimento, 
		b.nr_seq_exame, 
		b.nr_seq_proc_interno, 
		b.dt_procedimento, 
		a.nr_atendimento, 
		c.nr_seq_classificacao, 
		b.nr_prescricao, 
		b.nr_sequencia_prescricao 
from		procedimento d, 
		atendimento_paciente c, 
		conta_paciente x, 
		procedimento_paciente b, 
		cirurgia a 
where		a.nr_cirurgia		= nr_cirurgia_p 
and		a.nr_atendimento 	= b.nr_atendimento 
and		a.nr_atendimento 	= c.nr_atendimento 
and		a.dt_entrada_unidade	= b.dt_entrada_unidade 
and		a.nr_cirurgia		= b.nr_cirurgia 
and		b.cd_procedimento	= d.cd_procedimento 
and		b.ie_origem_proced	= d.ie_origem_proced 
and		b.nr_interno_conta	= x.nr_interno_conta 
and 		(((b.nr_sequencia 	= coalesce(nr_seq_procedimento_p, b.nr_sequencia)) and (ie_restringe_partic_proc_cir_w = 'S')) or (ie_restringe_partic_proc_cir_w = 'N')) 
and		x.ie_status_acerto	= 1 
and		d.ie_classificacao	= '1';


BEGIN 
/* Incrementado de 1000 para evitar Duplicidade no Proc Participante */
 
 
cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
 
ie_cons_medico_exec_w := obter_param_usuario(900, 214, obter_perfil_ativo, mm_usuario_p, cd_estabelecimento_w, ie_cons_medico_exec_w);
 
nr_seq_partic_w		:= nr_sequencia_p + 1000;
select coalesce(max(vl_parametro_padrao),'N') 
into STRICT  ie_emite_conta_w 
from  funcao_parametro 
where cd_funcao = 81 
 and nr_sequencia = 18;
  
select 	coalesce(max(ie_restringe_partic_proc_cir),'N') 
into STRICT	ie_restringe_partic_proc_cir_w 
from 	parametro_faturamento 
where 	cd_estabelecimento = cd_estabelecimento_w;
 
open c01;
loop 
fetch c01 into 
	nr_seq_proc_w, 
	cd_estabelecimento_w, 
	cd_convenio_w, 
	cd_categoria_w, 
	cd_procedimento_w, 
	ie_origem_proced_w, 
	dt_conta_w, 
	nm_usuario_w, 
	cd_setor_atendimento_w, 
	nr_seq_exame_w, 
	nr_seq_proc_interno_w, 
	dt_procedimento_w, 
	nr_atendimento_w, 
	nr_seq_classificacao_w, 
	nr_prescricao_w, 
	nr_sequencia_prescricao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	if (ie_evento_p = 'INSERT') and (obter_regra_funcao_partic( 
			cd_estabelecimento_w, 
			cd_convenio_w, 
			cd_categoria_w, 
			cd_procedimento_w, 
			ie_origem_proced_w, 
			dt_conta_w, 
			nr_seq_proc_w, 
			ie_funcao_p) = 'S') then 
		begin 
 
		if (ie_origem_proced_w   = 2) then 
    		select obter_se_medico(cd_pessoa_fisica_p,'M') 
			into STRICT  ie_medico_w 
			;
			if (ie_medico_w = 'S') then 
			select ie_tipo_servico_sus 
			into STRICT  ie_tipo_servico_sus_w 
			from  medico_convenio 
			where  cd_convenio    = cd_convenio_w 
			and   cd_pessoa_fisica = cd_pessoa_fisica_p 
			and   ((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_w));
			end if;
		select ie_tipo_ato_sus 
		into STRICT  ie_tipo_ato_sus_w 
		from  funcao_medico 
		where  cd_funcao  = ie_funcao_p;
		end if;
 
		select nr_seq_partic 
		into STRICT	 nr_seq_partic_ww 
		from 	 procedimento_participante 
		where	 nr_sequencia 	= nr_seq_proc_w 
		and	 ie_funcao		= ie_funcao_p 
		and	 cd_pessoa_fisica = cd_pessoa_fisica_p;
		exception 
		when no_data_found then 
			begin 
			select obter_especialidade_medico(cd_pessoa_fisica_p,'C') 
			into STRICT cd_especialidade_w 
			;
	 
			begin 
			cd_plano_w := obter_dado_atend_cat_conv(nr_atendimento_w, dt_conta_w, cd_convenio_w, cd_categoria_w, 'P');
			 
			if (ie_origem_proced_w not in (2,3))	then 
				begin 
				cd_estrutura_w	:= 0;
				SELECT * FROM obter_estrut_conta_proc( 
						cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, cd_plano_w, cd_pessoa_fisica_p, null, nr_sequencia_p, 0, 0, cd_estabelecimento_w, cd_especialidade_w, cd_categoria_w, dt_conta_w, null, cd_estrutura_w, cd_estrutura_honor_w) INTO STRICT cd_estrutura_w, cd_estrutura_honor_w;
 
				if (cd_estrutura_honor_w	> 0) then 
					ie_emite_conta_w	:= cd_estrutura_honor_w;
				end if;
				end;
			end if;
			exception 
				when others then 
					ie_emite_conta_w	:= ie_emite_conta_w;
			end;
			 
			if (ie_cons_medico_exec_w = 'S') then 
				ie_tipo_atendimento_w := obter_dados_atendimento(nr_atendimento_w,'TA');
				 
				if (coalesce(nr_prescricao_w,0) > 0) then 
					 
					select	max(cd_setor_atendimento) 
					into STRICT	cd_setor_prescricao_w 
					from	prescr_medica 
					where	nr_prescricao = nr_prescricao_w;
				 
					if (coalesce(nr_sequencia_prescricao_w,0) > 0) then 
						select	max(ie_origem_inf), 
							max(cd_cgc_laboratorio) 
						into STRICT	ie_origem_inf_w, 
							cd_cgc_laboratorio_w 
						from	prescr_procedimento 
						where	nr_prescricao = nr_prescricao_w 
						and	nr_sequencia = nr_sequencia_prescricao_w;
					end if;
					 
				end if;
				 
				SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, nr_seq_exame_w, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w, cd_pessoa_fisica_p, dt_procedimento_w, nr_seq_classificacao_w, coalesce(ie_origem_inf_w,'N'), cd_cgc_laboratorio_w, cd_setor_prescricao_w) INTO STRICT ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w;
			end if;	
 
			if (ie_origem_proced_w = 7) then 
				ie_participou_sus_w := coalesce(SUS_OBTER_SE_FUNC_PART_CIR(cd_procedimento_w,ie_origem_proced_w,ie_funcao_p),'S');
			end if;
			 
			insert into procedimento_participante(nr_sequencia, nr_seq_partic, ie_funcao, dt_atualizacao, 
				nm_usuario,cd_pessoa_fisica, cd_cgc, ie_valor_informado, 
				ie_emite_conta, vl_participante, vl_conta, nr_lote_contabil, 
				nr_conta_medico, cd_especialidade, ie_tipo_servico_sus, 
				ie_tipo_ato_sus, nr_cirurgia,ie_participou_sus) 
			values (nr_seq_proc_w, nr_seq_partic_w, ie_funcao_p, dt_atualizacao_w, 
				'Tasy', cd_pessoa_fisica_p, cd_cgc_w, 'N', ie_emite_conta_w, 0, 0, 0, 0, 
			 	cd_especialidade_w, ie_tipo_servico_sus_w, ie_tipo_ato_sus_w, nr_cirurgia_p,ie_participou_sus_w);
			exception 
				when others then 
     				dt_atualizacao_w	:= clock_timestamp();
			end;
			 
			select	obter_tipo_convenio(cd_convenio) 
			into STRICT	ie_tipo_convenio_w 
			from	convenio 
			where	cd_convenio = cd_convenio_w;
			 
			if (ie_tipo_convenio_w = 3) then 
				begin 
				 
				select	cd_cgc_prestador, 
					ie_responsavel_credito 
				into STRICT	cd_cgc_prestador_w, 
					ie_responsavel_credito_w 
				from	procedimento_paciente 
				where	nr_sequencia = nr_seq_proc_w;
				 
				cd_cbo_w := coalesce(sus_obter_cbo_medico(cd_pessoa_fisica_p, cd_procedimento_w, dt_procedimento_w, sus_obter_indicador_equipe(ie_funcao_p)),'');			
				 
				SELECT * FROM sus_atualiza_doc_exec(	cd_procedimento_w, ie_origem_proced_w, cd_pessoa_fisica_p, cd_pessoa_fisica_p, cd_cgc_prestador_w, cd_estabelecimento_w, cd_convenio_w, ie_responsavel_credito_w, ie_funcao_p, cd_cbo_w, ie_doc_executor_w, nr_seq_regra_doc_w) INTO STRICT ie_doc_executor_w, nr_seq_regra_doc_w;
				 
				update	procedimento_participante 
				set	ie_doc_executor	= ie_doc_executor_w, 
					cd_cbo		= cd_cbo_w 
				where	nr_sequencia	= nr_seq_proc_w 
				and	cd_pessoa_fisica	= cd_pessoa_fisica_p;
				/*Adicionada a pessoa f√≠sica pois estava alterando o CBO de todos os participantes*/
 
				 
				end;
			end if;
	end;
	end if;
	 
	if (ie_evento_p = 'DELETE') then 
		begin 
		delete 	from procedimento_participante 
		where	nr_sequencia		= nr_seq_proc_w 
		and	nr_seq_partic		= nr_seq_partic_w;
		exception 
		when others then 
			nr_seq_partic_w	:= null;
		end;
  	end if;
/*	Atualiza_Preco_Procedimento(nr_seq_proc_w,cd_convenio_w,nm_usuario_w); Erro ao passar pela trigger da CIRURGIA_PARTICIPANTE */
 
	end;
end loop;
close c01;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ajustar_participante_proc ( ie_evento_p text, nr_cirurgia_p bigint, nr_sequencia_p bigint, ie_funcao_p text, cd_pessoa_fisica_p text, nm_participante_p text, nr_seq_procedimento_p bigint, mm_usuario_p text) FROM PUBLIC;

