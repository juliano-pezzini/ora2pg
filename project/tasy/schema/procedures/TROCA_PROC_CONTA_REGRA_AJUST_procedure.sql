-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE troca_proc_conta_regra_ajust (nr_seq_propaci_p bigint, nr_interno_conta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE

 
dt_acerto_conta_w		timestamp;
cd_convenio_parametro_w		integer;
cd_categoria_parametro_w	varchar(20);
ie_guia_transf_conta_w		varchar(1);
cd_estabelecimento_w		integer;
nm_usuario_w			varchar(15);
ie_guia_transf_conta_ww		varchar(1);
nr_sequencia_w			bigint;

C01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	procedimento_paciente 
	where	nr_seq_proc_princ = nr_seq_propaci_p 
	and	(nr_seq_regra_lanc IS NOT NULL AND nr_seq_regra_lanc::text <> '');
	
C02 CURSOR FOR 
	SELECT	nr_sequencia 
	from	material_atend_paciente 
	where	nr_seq_proc_princ = nr_seq_propaci_p 
	and	(nr_seq_regra_lanc IS NOT NULL AND nr_seq_regra_lanc::text <> '');


BEGIN 
begin 
	select	dt_acerto_conta, 
		cd_convenio_parametro, 
		cd_categoria_parametro, 
		cd_estabelecimento 
	into STRICT	dt_acerto_conta_w, 
		cd_convenio_parametro_w, 
		cd_categoria_parametro_w, 
		cd_estabelecimento_w 
	from	conta_paciente 
	where	nr_interno_conta = nr_interno_conta_p;
 
	select	coalesce(max(ie_guia_transf_conta),'N') 
	into STRICT	ie_guia_transf_conta_w 
	from	convenio_estabelecimento 
	where	cd_convenio		= cd_convenio_parametro_w 
	and	cd_estabelecimento	= cd_estabelecimento_w;
 
	select	coalesce(max(ie_guia_transf_conta),'R') 
	into STRICT	ie_guia_transf_conta_ww 
	from	parametro_faturamento 
	where	cd_estabelecimento = cd_estabelecimento_w;
 
	if (coalesce(nr_seq_propaci_p,0) > 0) then 
 
		insert into proc_pac_regra_ajuste(	nr_sequencia,               
							nr_seq_propaci, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							ie_ignora_regra) 
					values (	nextval('proc_pac_regra_ajuste_seq'), 
							nr_seq_propaci_p, 
							clock_timestamp(), 
							nm_usuario_p, 
							clock_timestamp(), 
							nm_usuario_p, 
							'S');
 
 
		if (ie_guia_transf_conta_ww = 'R') then 
			update 	procedimento_paciente 
			set	nr_doc_convenio	= CASE WHEN ie_guia_transf_conta_w='S' THEN null  ELSE nr_doc_convenio END  
			where	nr_sequencia = nr_seq_propaci_p;
		elsif (ie_guia_transf_conta_ww = 'T') then 
			update 	procedimento_paciente 
			set	nr_doc_convenio	 = NULL 
			where	nr_sequencia = nr_seq_propaci_p;
		end if;
		 
		update 	procedimento_paciente 
		set	dt_acerto_conta = dt_acerto_conta_w, 
			nr_interno_conta = nr_interno_conta_p, 
			cd_convenio = cd_convenio_parametro_w, 
			cd_categoria = cd_categoria_parametro_w, 
			cd_motivo_exc_conta  = NULL, 
			ds_compl_motivo_excon  = NULL 
		where	nr_sequencia = nr_seq_propaci_p;
			 
		select	coalesce(max(nm_usuario),'Tasy') 
		into STRICT	nm_usuario_w 
		from 	procedimento_paciente 
		where 	nr_sequencia = nr_seq_propaci_p;
		 
		CALL trocar_conta_auditoria(nr_interno_conta_p, nr_seq_propaci_p, 1, nm_usuario_w,null,'N','N');
		if	((ie_guia_transf_conta_w = 'S' AND ie_guia_transf_conta_ww = 'R') or (ie_guia_transf_conta_ww = 'T')) then 
			CALL atualiza_preco_procedimento(nr_seq_propaci_p,cd_convenio_parametro_w,nm_usuario_w);
		end if;
		 
		open C01;
		loop 
		fetch C01 into	 
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			 
			update 	procedimento_paciente 
			set	dt_acerto_conta = dt_acerto_conta_w, 
				nr_interno_conta = nr_interno_conta_p, 
				cd_convenio = cd_convenio_parametro_w, 
				cd_categoria = cd_categoria_parametro_w, 
				cd_motivo_exc_conta  = NULL, 
				ds_compl_motivo_excon  = NULL 
			where	nr_seq_proc_princ = nr_sequencia_w;
			 
			select	coalesce(max(nm_usuario),'Tasy') 
			into STRICT	nm_usuario_w 
			from 	procedimento_paciente 
			where 	nr_sequencia = nr_seq_propaci_p;
			 
			CALL trocar_conta_auditoria(nr_interno_conta_p, nr_sequencia_w, 1, nm_usuario_w,null,'N','N');
			if	((ie_guia_transf_conta_w = 'S' AND ie_guia_transf_conta_ww = 'R') or (ie_guia_transf_conta_ww = 'T')) then 
				CALL atualiza_preco_procedimento(nr_sequencia_w,cd_convenio_parametro_w,nm_usuario_w);
			end if;
	 
			end;
		end loop;
		close C01;
		 
		open C02;
		loop 
		fetch C02 into	 
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			 
			update 	material_atend_paciente 
			set	dt_acerto_conta = dt_acerto_conta_w, 
				nr_interno_conta = nr_interno_conta_p, 
				cd_convenio = cd_convenio_parametro_w, 
				cd_categoria = cd_categoria_parametro_w, 
				cd_motivo_exc_conta  = NULL, 
				ds_compl_motivo_excon  = NULL 
			where	nr_sequencia = nr_sequencia_w;
			 
			CALL trocar_conta_auditoria(nr_interno_conta_p, nr_sequencia_w, 2, nm_usuario_w,null,'N','N');
			if	((ie_guia_transf_conta_w = 'S' AND ie_guia_transf_conta_ww = 'R') or (ie_guia_transf_conta_ww = 'T')) then 
				CALL atualiza_preco_material(nr_sequencia_w,nm_usuario_w);
			end if;
			 
			end;
		end loop;
		close C02;
		 
		 
		 
	end if;
 
	commit;
exception 
when others then 
	ds_erro_p :=sqlerrm;
	rollback;
end;
 
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE troca_proc_conta_regra_ajust (nr_seq_propaci_p bigint, nr_interno_conta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

