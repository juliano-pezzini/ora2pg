-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cot_compra_solic ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, nr_cot_compra_p INOUT bigint, nm_usuario_p text) AS $body$
DECLARE


nr_cot_compra_w		bigint;
nr_item_cot_compra_w	integer;
cd_comprador_w		varchar(10);
cd_estabelecimento_w	smallint;
qt_existe_w		smallint;
cd_material_inativo_w material.cd_material%type;


BEGIN

nr_cot_compra_w	:= coalesce(nr_cot_compra_p, 0);

if (nr_cot_compra_w > 0) then
	select	count(*)
	into STRICT	qt_existe_w
	from	cot_compra
	where	nr_cot_compra = nr_cot_compra_w;
	if (qt_existe_w = 0) then	
		--'Nao existe a cotacao de numero ' || nr_cot_compra_w || ' no Sistema'
		CALL wheb_mensagem_pck.exibir_mensagem_abort(176657,'NR_COT_COMPRA_P='||nr_cot_compra_w);
	end if;
end if;

select coalesce(max(a.cd_material),0)
into STRICT cd_material_inativo_w
from solic_compra_item a, material b
where a.nr_solic_compra = nr_solic_compra_p
and a.cd_material = b.cd_material
and b.ie_situacao = 'I'
and ((nr_item_solic_compra_p > 0 and a.nr_item_solic_compra = nr_item_solic_compra_p) or (nr_item_solic_compra_p = 0));

if (cd_material_inativo_w > 0) then
    CALL wheb_mensagem_pck.exibir_mensagem_abort(1152007,'MACRO='|| cd_material_inativo_w);
end if;

select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	solic_compra
where	nr_solic_compra = nr_solic_compra_p;

cd_comprador_w	:= obter_pessoa_fisica_usuario(nm_usuario_p, 'C');

if (coalesce(obter_se_usuario_comprador(nm_usuario_p,cd_estabelecimento_w),'N') = 'N') then
	--'Voce nao esta cadastrado como comprador.'
	CALL wheb_mensagem_pck.exibir_mensagem_abort(176660);
end if;

if (nr_cot_compra_w = 0) then
	begin

	select	nextval('cot_compra_seq')
	into STRICT	nr_cot_compra_w
	;

	insert into cot_compra(
		nr_cot_compra,
		dt_cot_compra,
		dt_atualizacao,
		cd_comprador,
		nm_usuario,
		cd_pessoa_solicitante,
		cd_estabelecimento,
		dt_retorno_prev,
		ie_finalidade_cotacao)
	values ( nr_cot_compra_w,
		clock_timestamp(),
		clock_timestamp(),
		cd_comprador_w,
		nm_usuario_p,
		cd_comprador_w,
		cd_estabelecimento_w,
		clock_timestamp(),
		'C');
	end;
end if;

CALL grava_cot_compra_item(
		nr_solic_compra_p,
		nr_item_solic_compra_p,
		nr_cot_compra_w,
		nm_usuario_p,
		'S',
		coalesce(obter_valor_param_usuario(915,
			3, 
			obter_perfil_ativo, 
			wheb_usuario_pck.get_nm_usuario, 
			wheb_usuario_pck.get_cd_estabelecimento), 'S'));
commit;

nr_cot_compra_p := nr_cot_compra_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cot_compra_solic ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, nr_cot_compra_p INOUT bigint, nm_usuario_p text) FROM PUBLIC;

