-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intcom_calcula_cotacao ( nr_cot_compra_p bigint, ie_forma_calc_entrega_p text, nm_usuario_p text) AS $body$
DECLARE

 
/*ie_forma_calc_entrega_p 
A        Data atual + Dias entrega fornecedior 
F        Data limite cotação 
L        Data limite cotação + Dias entrega fornecedor*/
 
					 
qt_existe_w			bigint;					
vl_total_w			double precision := 0;
vl_rateio_frete_w			double precision := 0;
vl_frete_w			double precision := 0;
vl_desconto_forn_w		double precision := 0;
pr_desconto_forn_w		double precision := 0;
pr_desconto_antec_w		double precision := 0;
pr_juros_negociado_w		double precision := 0;
vl_rateio_desp_w			double precision := 0;
vl_rateio_desconto_w		double precision := 0;
vl_rateio_pr_desc_w		double precision := 0;
vl_rateio_pr_antec_w		double precision := 0;
vl_juros_negociado_w		double precision := 0;
vl_despesa_acessoria_w		double precision := 0;
vl_material_w			double precision := 0;
vl_liquido_w			double precision := 0;
vl_tributo_w			double precision := 0;
pr_desconto_w			double precision := 0;
vl_desconto_w			double precision := 0;
cd_estabelecimento_w		smallint := 0;
vl_presente_w			double precision := 0;
cd_condicao_pagamento_w		bigint := 0;
vl_despesa_doc_w			double precision := 0;
vl_rateio_despesa_doc_w		double precision := 0;
nr_seq_cot_forn_w			bigint;
nr_seq_compra_forn_w		bigint;
ie_desdobra_mat_cotacao_w		varchar(1);

c01 CURSOR FOR 
SELECT	f.nr_sequencia, 
	coalesce(f.cd_condicao_pagamento,2), 
	coalesce(f.vl_previsto_frete,0), 
	coalesce(f.vl_despesa_acessoria,0), 
	coalesce(f.vl_desconto,0), 
	coalesce(f.pr_desconto,0), 
	coalesce(f.pr_desconto_pgto_antec,0), 
	coalesce(f.pr_juros_negociado,0), 
	sum(coalesce(i.vl_unitario_material,0) * coalesce(i.qt_material,0)) vl_total, 
	coalesce(f.vl_despesa_doc,0) 
from	cot_compra_forn_item i, 
	cot_compra_forn f 
where	f.nr_sequencia = i.nr_seq_cot_forn 
and	f.nr_cot_compra = nr_cot_compra_p 
and (ie_desdobra_mat_cotacao_w = 'N') 
group by 
	f.nr_sequencia, 
	f.cd_cgc_fornecedor, 
	f.cd_condicao_pagamento, 
	f.vl_previsto_frete, 
	f.vl_despesa_acessoria, 
	f.vl_desconto, 
	f.pr_desconto, 
	f.pr_desconto_pgto_antec, 
	f.pr_juros_negociado, 
	f.vl_despesa_doc 

union all
 
SELECT	f.nr_sequencia, 
	coalesce(f.cd_condicao_pagamento,2), 
	coalesce(f.vl_previsto_frete,0), 
	coalesce(f.vl_despesa_acessoria,0), 
	coalesce(f.vl_desconto,0), 
	coalesce(f.pr_desconto,0), 
	coalesce(f.pr_desconto_pgto_antec,0), 
	coalesce(f.pr_juros_negociado,0), 
	0 vl_total, 
	coalesce(f.vl_despesa_doc,0) 
from	cot_compra_forn_item i, 
	cot_compra_forn f 
where	f.nr_sequencia = i.nr_seq_cot_forn 
and	f.nr_cot_compra = nr_cot_compra_p 
and (ie_desdobra_mat_cotacao_w <> 'N') 
group by 
	f.nr_sequencia, 
	f.cd_cgc_fornecedor, 
	f.cd_condicao_pagamento, 
	f.vl_previsto_frete, 
	f.vl_despesa_acessoria, 
	f.vl_desconto, 
	f.pr_desconto, 
	f.pr_desconto_pgto_antec, 
	f.pr_juros_negociado, 
	f.vl_despesa_doc;

c02 CURSOR FOR 
SELECT	i.nr_sequencia, 
	coalesce(i.pr_desconto,0), 
	(i.vl_unitario_material * i.qt_material), 
	coalesce(i.vl_desconto,0) 
from	cot_compra_forn_item i 
where	i.nr_seq_cot_forn = nr_seq_cot_forn_w 
and	i.nr_cot_compra = nr_cot_compra_p;


BEGIN 
 
select	count(*) 
into STRICT	qt_existe_w 
from	cot_compra 
where	nr_cot_compra = nr_cot_compra_p;
 
if (qt_existe_w > 0) then 
	begin 
	 
	select	cd_estabelecimento 
	into STRICT	cd_estabelecimento_w 
	from	cot_compra 
	where	nr_cot_compra = nr_cot_compra_p;
	 
	select	coalesce(max(ie_desdobra_mat_cotacao),'N') 
	into STRICT	ie_desdobra_mat_cotacao_w 
	from	parametro_compras 
	where	cd_estabelecimento = cd_estabelecimento_w;
	 
	select	coalesce(obter_valor_doc_cot_compra(nr_cot_compra_p),0) 
	into STRICT	vl_despesa_doc_w 
	;
 
	update	cot_compra_forn 
	set	vl_despesa_doc = vl_despesa_doc_w 
	where	nr_cot_compra = nr_cot_compra_p;
 
	if (ie_desdobra_mat_cotacao_w <> 'N') then 
		vl_total_w := coalesce(obter_valor_rateio_cotacao(nr_cot_compra_p),0);
	end if;
	 
		open c01;
	loop 
	fetch c01 into	 
		nr_seq_cot_forn_w, 
		cd_condicao_pagamento_w, 
		vl_frete_w, 
		vl_despesa_acessoria_w, 
		vl_desconto_forn_w, 
		pr_desconto_forn_w, 
		pr_desconto_antec_w, 
		pr_juros_negociado_w, 
		vl_total_w, 
		vl_despesa_doc_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
 
		open c02;
		loop 
		fetch c02 into	 
			nr_seq_compra_forn_w, 
			pr_desconto_w, 
			vl_material_w, 
			vl_desconto_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin 
			begin			 
			select	coalesce(vl_tributo,0) 
			into STRICT	vl_tributo_w 
			from	cot_compra_forn_item_tr 
			where	nr_cot_compra = nr_cot_compra_p 
			and	nr_seq_cot_item_forn = nr_seq_compra_forn_w;
			exception 
			when others then 
				vl_tributo_w := 0;
			end;
			 
			if (coalesce(vl_total_w,0) > 0) then 
				begin 
				vl_rateio_frete_w		:= (vl_material_w / vl_total_w) * vl_frete_w;
				vl_rateio_desp_w		:= (vl_material_w / vl_total_w) * vl_despesa_acessoria_w;
				vl_rateio_despesa_doc_w	:= (vl_material_w / vl_total_w) * vl_despesa_doc_w;
				vl_rateio_desconto_w	:= (vl_material_w / vl_total_w) * vl_desconto_forn_w;
				vl_rateio_pr_desc_w	:= (vl_material_w / vl_total_w) * ((pr_desconto_forn_w / 100) * vl_total_w);
				vl_rateio_pr_antec_w	:= (vl_material_w / vl_total_w) * ((pr_desconto_antec_w / 100) * vl_total_w);
				vl_juros_negociado_w	:= (vl_material_w / vl_total_w) * ((pr_juros_negociado_w / 100) * vl_total_w);
				end;
			else 
				begin 
				vl_rateio_frete_w		:= 0;
				vl_rateio_desp_w		:= 0;
				vl_rateio_desconto_w	:= 0;
				vl_rateio_pr_desc_w	:= 0;
				vl_rateio_despesa_doc_w	:= 0;
				vl_rateio_pr_antec_w	:= 0;
				vl_juros_negociado_w	:= 0;
				end;
			end if;			
			 
			vl_liquido_w := (vl_material_w - ((pr_desconto_w / 100) * vl_material_w) + 
				vl_rateio_frete_w + vl_tributo_w + vl_rateio_desp_w + vl_rateio_despesa_doc_w - vl_rateio_desconto_w - 
				vl_rateio_pr_desc_w - vl_rateio_pr_antec_w + vl_juros_negociado_w) - coalesce(vl_desconto_w,0);
 
			/* calculo do item da cotacao a valor presente*/
 
			vl_presente_w := calcular_cot_vl_presente(cd_estabelecimento_w, vl_liquido_w, cd_condicao_pagamento_w, vl_presente_w);
			 
			begin		 
			update	cot_compra_forn_item 
			set	vl_frete_rateio		= CASE WHEN vl_frete_w=0 THEN vl_frete_rateio  ELSE vl_rateio_frete_w END , 
				vl_preco_liquido	= vl_liquido_w, 
				vl_total_liquido_item	= vl_liquido_w, 
				vl_presente		= vl_presente_w, 
				vl_unid_fornec		= vl_rateio_desp_w, 
				vl_unitario_liquido	= dividir(vl_presente_w, qt_material) 
			where	nr_cot_compra		= nr_cot_compra_p 
			and	nr_sequencia		= nr_seq_compra_forn_w;
			exception when others then 
				/*(-20011,'Erro ao atualizar cot_compra_forn_item');*/
 
				CALL wheb_mensagem_pck.exibir_mensagem_abort(183093);
			end;
			end;
		end loop;
		close c02;			
		end;
	end loop;
	close c01;
	 
	CALL gerar_cot_compra_resumo(nr_cot_compra_p, nm_usuario_p);
	CALL intcom_gerar_ordem_compra(nr_cot_compra_p, ie_forma_calc_entrega_p, nm_usuario_p);
	 
	update	cot_compra 
	set	dt_geracao_ordem_compra = clock_timestamp() 
	where	nr_cot_compra		= nr_cot_compra_p;
	 
	select	count(*) 
	into STRICT	qt_existe_w 
	from	cot_compra_item 
	where	(nr_contrato IS NOT NULL AND nr_contrato::text <> '') 
	and	nr_cot_compra = nr_cot_compra_p;
	 
	if (qt_existe_w = 0) then 
		update	cot_compra 
		set	ie_finalidade_cotacao	= 'C' 
		where	nr_cot_compra		= nr_cot_compra_p;
	end if;
	 
	end;
	 
	CALL intcom_exclui_cotacao_sem_item(nr_cot_compra_p);
	 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intcom_calcula_cotacao ( nr_cot_compra_p bigint, ie_forma_calc_entrega_p text, nm_usuario_p text) FROM PUBLIC;

