-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_obter_regra_expaih ( nr_seq_proc_p bigint, nm_usuario_p text, nr_seq_regra_p INOUT bigint, ie_exclui_medico_p INOUT text, ie_exclui_cnes_p INOUT text, ie_exclui_procedimento_p INOUT text, nr_seq_partic_p bigint default null) AS $body$
DECLARE


ie_exclui_medico_w		varchar(1)	:= 'N';
ie_exclui_cnes_w		varchar(1)	:= 'N';
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_grupo_w		bigint;
nr_seq_subgrupo_w	bigint;
nr_seq_forma_org_w	bigint;
cd_estabelecimento_w	smallint;
ie_credenciamento_w	varchar(3);
cd_medico_executor_w	varchar(10);
cd_pessoa_fisica_w	varchar(10);
cd_profissional_w		varchar(10);
cd_cbo_w		varchar(6);
qt_proc_serv_classif_w	integer	:= 0;
ie_serv_classif_w		varchar(1)	:= 'N';
nr_seq_regra_w		bigint;
ie_exclui_procedimento_w	varchar(1)	:= 'N';
			
C01 CURSOR FOR
	SELECT	nr_sequencia,
		ie_exclui_medico,
		ie_exclui_cnes,
		ie_exclui_procedimento
	from	sus_regra_exportacao_aih
	where (coalesce(nr_seq_grupo, nr_seq_grupo_w)		= nr_seq_grupo_w)
	and (coalesce(nr_seq_subgrupo, nr_seq_subgrupo_w)	= nr_seq_subgrupo_w)
	and (coalesce(nr_seq_forma_org, nr_seq_forma_org_w)	= nr_seq_forma_org_w)
	and (coalesce(cd_procedimento, cd_procedimento_w)	= cd_procedimento_w)
	and (coalesce(ie_origem_proced, ie_origem_proced_w)	= ie_origem_proced_w)
	and (coalesce(cd_estabelecimento, cd_estabelecimento_w)	= cd_estabelecimento_w)
	and	((coalesce(ie_credenciamento::text, '') = '') or (ie_credenciamento = ie_credenciamento_w))	
	and	((ie_serv_classif = 'A') or (ie_serv_classif = ie_serv_classif_w))	
	order by
		coalesce(ie_credenciamento, '0'),
		coalesce(ie_serv_classif, 'A'),
		coalesce(nr_seq_regra_proc,0),
		coalesce(cd_procedimento, 0),
		coalesce(nr_seq_forma_org, 0),
		coalesce(nr_seq_subgrupo, 0),
		coalesce(nr_seq_grupo, 0);
	

BEGIN

/* Obter dados do procedimento lançado*/

if (coalesce(nr_seq_partic_p::text, '') = '') then
	begin
	select	a.cd_procedimento,
		a.ie_origem_proced,
		a.cd_medico_executor,
		a.cd_pessoa_fisica,
		c.cd_estabelecimento,
		a.cd_cbo
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		cd_medico_executor_w,
		cd_pessoa_fisica_w,
		cd_estabelecimento_w,
		cd_cbo_w
	from	atendimento_paciente	c,
		conta_paciente		b,
		procedimento_paciente	a
	where	a.nr_sequencia		= nr_seq_proc_p
	and	a.nr_interno_conta	= b.nr_interno_conta
	and	b.nr_atendimento	= c.nr_atendimento;
	end;
else
	begin
	select	a.cd_procedimento,
		a.ie_origem_proced,
		d.cd_pessoa_fisica,
		a.cd_pessoa_fisica,
		c.cd_estabelecimento,
		a.cd_cbo
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		cd_medico_executor_w,
		cd_pessoa_fisica_w,
		cd_estabelecimento_w,
		cd_cbo_w
	from	atendimento_paciente	c,
		conta_paciente		b,
		procedimento_paciente	a,
		procedimento_participante d
	where	a.nr_sequencia		= nr_seq_proc_p
	and	a.nr_interno_conta	= b.nr_interno_conta
	and	b.nr_atendimento	= c.nr_atendimento
	and	a.nr_sequencia		= d.nr_sequencia
	and	d.nr_seq_partic		= nr_seq_partic_p;
	end;
end if;

cd_profissional_w	:= coalesce(cd_medico_executor_w, cd_pessoa_fisica_w);

/* Obter o credenciamento do profissional executor*/

select	coalesce(max(ie_credenciamento),'0')
into STRICT	ie_credenciamento_w
from	sus_medico_credenciamento
where	cd_medico		= cd_profissional_w
and	coalesce(cd_cbo,coalesce(cd_cbo_w,'X'))	= coalesce(cd_cbo_w,'X')
and	coalesce(ie_situacao,'A') 		= 'A'
and	coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w;

/* Obter a estrutura do procedimento*/

begin
select	nr_seq_grupo,
	nr_seq_subgrupo,
	nr_seq_forma_org
into STRICT	nr_seq_grupo_w,
	nr_seq_subgrupo_w,
	nr_seq_forma_org_w
from	sus_estrutura_procedimento_v
where	cd_procedimento	= cd_procedimento_w
and	ie_origem_proced	= ie_origem_proced_w;
exception
	when others then
	nr_seq_grupo_w		:= 0;
	nr_seq_subgrupo_w	:= 0;
	nr_seq_forma_org_w	:= 0;
end;

/* Obter se o procedimento possui serviço/classificação */

select	count(*)
into STRICT	qt_proc_serv_classif_w
from	sus_proced_serv_classif
where	cd_procedimento	= cd_procedimento_w
and	ie_origem_proced	= ie_origem_proced_w;

if (qt_proc_serv_classif_w > 0) then
	ie_serv_classif_w	:= 'S';
end if;

open C01;
loop
fetch C01 into	
	nr_seq_regra_w,
	ie_exclui_medico_w,
	ie_exclui_cnes_w,
	ie_exclui_procedimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
end loop;
close C01;

nr_seq_regra_p		:= nr_seq_regra_w;
ie_exclui_medico_p		:= ie_exclui_medico_w;
ie_exclui_cnes_p		:= ie_exclui_cnes_w;
ie_exclui_procedimento_p	:= ie_exclui_procedimento_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_obter_regra_expaih ( nr_seq_proc_p bigint, nm_usuario_p text, nr_seq_regra_p INOUT bigint, ie_exclui_medico_p INOUT text, ie_exclui_cnes_p INOUT text, ie_exclui_procedimento_p INOUT text, nr_seq_partic_p bigint default null) FROM PUBLIC;

