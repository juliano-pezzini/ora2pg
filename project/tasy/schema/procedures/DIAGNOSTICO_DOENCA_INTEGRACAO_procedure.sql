-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE diagnostico_doenca_integracao (nr_atendimento_p bigint, dt_diagnostico_p timestamp, cd_doenca_cid_p text, nm_usuario_p text, cd_medico_diag_p text, nr_registro_origem_p bigint, ie_utilizado_p text, ie_liberado_p text default null, nr_seq_interno_p INOUT bigint DEFAULT NULL) AS $body$
DECLARE


ie_gerar_diag_w	varchar(1);
nr_seq_interno_w bigint;
nr_seq_mentor_w bigint;
nr_restrigir_regras_w varchar(2000);


BEGIN

nr_seq_mentor_w := 0;

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (dt_diagnostico_p IS NOT NULL AND dt_diagnostico_p::text <> '')   and (cd_doenca_cid_p IS NOT NULL AND cd_doenca_cid_p::text <> '')   and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '')     and (cd_medico_diag_p IS NOT NULL AND cd_medico_diag_p::text <> '')  then
	if (ie_utilizado_p = 'S') then
		select	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
		into STRICT	ie_gerar_diag_w
		from	diagnostico_medico
		where	nr_atendimento	= nr_atendimento_p
		and	dt_diagnostico	= dt_diagnostico_p;

		if (ie_gerar_diag_w = 'S') then
			insert into diagnostico_medico(
								nr_atendimento,
								dt_diagnostico,
								ie_tipo_diagnostico,
								cd_medico,
								dt_atualizacao,
								nm_usuario,
								ds_diagnostico,
								ie_tipo_doenca,
								ie_unidade_tempo,
								qt_tempo)
			values (
								nr_atendimento_p,
								dt_diagnostico_p,
								2,
								cd_medico_diag_p,
								clock_timestamp(),
								nm_usuario_p,
								null,
								null,
								null,
								null);
		end if;

		select nextval('diagnostico_doenca_seq')
		  into STRICT nr_seq_interno_w
		;

		insert into diagnostico_doenca(
			nr_atendimento,
			dt_diagnostico,
			cd_doenca,
			dt_atualizacao,
			nm_usuario,
			dt_liberacao,
			nr_seq_interno,
			ie_tipo_diagnostico,
			cd_medico)
		values (
			nr_atendimento_p,
			dt_diagnostico_p,
			cd_doenca_cid_p,
			clock_timestamp(),
			nm_usuario_p,
			CASE WHEN ie_liberado_p='S' THEN clock_timestamp() END ,
			nr_seq_interno_w,
			2,
			cd_medico_diag_p);

		if (coalesce(ie_liberado_p,'N') = 'S') then

			SELECT * FROM GQA_Liberacao_diagnostico(nr_seq_interno_w, nm_usuario_p, nr_seq_mentor_w, nr_restrigir_regras_w) INTO STRICT nr_seq_mentor_w, nr_restrigir_regras_w;
			CALL gera_protocolo_assistencial(nr_atendimento_p, nm_usuario_p);

		end if;

		update log_integracao_cid
		   set ie_utilizado = ie_utilizado_p,
			   dt_atualizacao = clock_timestamp(),
			   nm_usuario_nrec = nm_usuario_p
		where	nr_registro_origem = nr_registro_origem_p
		and 	CD_DOENCA_RETORNO = cd_doenca_cid_p;
	end if;

end if;

update 	log_integracao_cid
set 	ie_utilizado = 'N',
		dt_atualizacao = clock_timestamp()
where	nr_registro_origem = nr_registro_origem_p
and		ie_utilizado = 'I';

commit;

nr_seq_interno_p := nr_seq_interno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE diagnostico_doenca_integracao (nr_atendimento_p bigint, dt_diagnostico_p timestamp, cd_doenca_cid_p text, nm_usuario_p text, cd_medico_diag_p text, nr_registro_origem_p bigint, ie_utilizado_p text, ie_liberado_p text default null, nr_seq_interno_p INOUT bigint DEFAULT NULL) FROM PUBLIC;

