-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prescr_fut_exame_vanco ( nr_prescr_origem_p bigint, nr_atendimento_p bigint, ie_tipo_pessoa_p text, cd_perfil_p bigint, nm_usuario_p text, nr_prescr_proc_nsv_p INOUT bigint) AS $body$
DECLARE


ds_erro_w				varchar(4000);
qt_hor_exame_vanco_w	bigint;
dt_prev_execucao_w		timestamp;
dt_inicio_prescr_w		timestamp;
cd_estabelecimento_w	bigint;
cd_setor_atendimento_w	bigint;


BEGIN
if (nr_prescr_origem_p IS NOT NULL AND nr_prescr_origem_p::text <> '') then

	select	count(*)
	into STRICT	qt_hor_exame_vanco_w
	from	prescr_material
	where	coalesce(dt_suspensao::text, '') = ''
	and		obter_se_mat_vancomicina(cd_material) = 'S'
	and		ie_agrupador = 1
	and		nr_prescricao = nr_prescr_origem_p;
	
	if (qt_hor_exame_vanco_w = 0) then
		update	prescr_medica
		set		qt_hor_exame_vanco  = NULL
		where	nr_prescricao = nr_prescr_origem_p;
		if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

		return;
	end if;

	select	coalesce(max(qt_hor_exame_vanco),0),
			coalesce(max(cd_estabelecimento),1)
	into STRICT	qt_hor_exame_vanco_w,
			cd_estabelecimento_w
	from	prescr_medica
	where	nr_prescricao = nr_prescr_origem_p;

	if (qt_hor_exame_vanco_w > 0) then
		
		select	max(cd_setor_atendimento)
		into STRICT	cd_setor_atendimento_w
		from	prescr_medica
		where	nr_prescricao = nr_prescr_origem_p;

		select	nextval('prescr_medica_seq')
		into STRICT	nr_prescr_proc_nsv_p
		;

		insert into prescr_medica(
				nr_prescricao,
				cd_pessoa_fisica,
				nr_atendimento,
				cd_medico,
				dt_prescricao,
				dt_atualizacao,
				nm_usuario,
				nr_horas_validade,
				dt_primeiro_horario,
				ie_origem_inf,
				ie_recem_nato,
				nm_usuario_original,
				cd_protocolo,
				nr_seq_protocolo,
				cd_estabelecimento,
				cd_prescritor,
				qt_altura_cm,
				qt_peso,
				ie_adep,
				ie_prescr_emergencia,
				ie_prescricao_alta,
				cd_setor_atendimento,
				ie_hemodialise,
				ie_prescritor_aux,
				cd_setor_entrega,
				dt_entrega,
				nr_seq_pend_pac_acao,
				ds_observacao,
				cd_funcao_origem)
		SELECT	nr_prescr_proc_nsv_p,
				cd_pessoa_fisica,
				nr_atendimento,
				cd_medico,
				dt_prescricao,
				dt_atualizacao,
				nm_usuario,
				24,
				dt_primeiro_horario,
				ie_origem_inf,
				ie_recem_nato,
				nm_usuario_original,
				cd_protocolo,
				nr_seq_protocolo,
				cd_estabelecimento,
				cd_prescritor,
				qt_altura_cm,
				qt_peso,
				ie_adep,
				ie_prescr_emergencia,
				ie_prescricao_alta,
				cd_setor_atendimento_w,
				ie_hemodialise,
				ie_prescritor_aux,
				cd_setor_entrega,
				dt_entrega,
				nr_seq_pend_pac_acao,
				obter_desc_expressao(729102) || nr_prescricao,
				cd_funcao_origem
		from	prescr_medica
		where	nr_prescricao = nr_prescr_origem_p;
		
		CALL Gerar_protocolo_vancomicina(	cd_estabelecimento_w,
										cd_perfil_p,
										nm_usuario_p,
										nr_prescr_origem_p,
										nr_prescr_proc_nsv_p,
										'N',
										'S',
										qt_hor_exame_vanco_w);
									
		select	max(dt_prev_execucao)
		into STRICT	dt_prev_execucao_w
		from	prescr_procedimento
		where	obter_se_exame_vancocinemia(nr_seq_exame) = 'S'
		and		nr_prescricao = nr_prescr_proc_nsv_p;
		
		if (dt_prev_execucao_w IS NOT NULL AND dt_prev_execucao_w::text <> '') then
			if (coalesce(cd_setor_atendimento_w::text, '') = '') then
				update	prescr_medica
				set		dt_prescricao = PKG_DATE_UTILS.start_of(dt_prev_execucao_w, 'hh24', 0) -1/24,
						nr_horas_validade = 2,
						dt_primeiro_horario = trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_primeiro_horario, dt_prev_execucao_w), 'hh24') - 3/24
				where	nr_prescricao = nr_prescr_proc_nsv_p;
			else
				dt_inicio_prescr_w	:= to_date(to_char(dt_prev_execucao_w,'dd/mm/yyyy ') || to_char(obter_prim_hor_setor(cd_setor_atendimento_w), 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss');
				if (dt_inicio_prescr_w > dt_prev_execucao_w) then
					dt_inicio_prescr_w	:= dt_inicio_prescr_w - 1;
				end if;
				
				update	prescr_medica
				set		dt_prescricao = dt_inicio_prescr_w,
						nr_horas_validade = 24,
						dt_primeiro_horario = trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_primeiro_horario, dt_inicio_prescr_w), 'hh24'),
						dt_inicio_prescr = dt_inicio_prescr_w
				where	nr_prescricao = nr_prescr_proc_nsv_p;
			end if;

			if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
		end if;
		
		update	prescr_medica
		set		qt_hor_exame_vanco  = NULL
		where	nr_prescricao = nr_prescr_origem_p;
		if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	end if;
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescr_fut_exame_vanco ( nr_prescr_origem_p bigint, nr_atendimento_p bigint, ie_tipo_pessoa_p text, cd_perfil_p bigint, nm_usuario_p text, nr_prescr_proc_nsv_p INOUT bigint) FROM PUBLIC;

