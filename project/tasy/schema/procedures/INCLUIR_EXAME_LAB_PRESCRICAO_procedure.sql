-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE incluir_exame_lab_prescricao ( nr_prescricao_p bigint, cd_exame_p text, dt_prev_exec_p timestamp, cd_intervalo_p text, ds_dado_clinico_p text, cd_cid_p text, nm_usuario_p text, nr_sequencia_p INOUT bigint, ie_urgencia_p text default null, ds_material_especial_p text default null) AS $body$
DECLARE

	nr_seq_exame_w     bigint;
	cd_procedimento_w  bigint;
	ie_origem_proced_w bigint;
	dt_prescricao_w timestamp;
	dt_validade_prescr_w	timestamp;
	dt_prescr_w timestamp;
	nr_seq_proced_w           bigint;
	cd_intervalo_w            varchar(07);
	VarDataPrescricaoProced_w varchar(07);
	cd_setor_exclusivo_w      integer;
	cd_setor_prescr_w         bigint;
	cd_material_exame_w       varchar(20);
	ie_amostra_entregue_w     varchar(2);
	cd_convenio_w             integer;
	dt_prev_execucao_w timestamp;
	ds_erro_w                varchar(255);
	VarMatExame_w            varchar(1);
	hr_prev_execucao_w	 varchar(5);
	ie_gerar_setor_w         varchar(10);
	ie_urgencia_w            varchar(10);
	ds_orientacao_usuario_w  varchar(4000);
	qt_material_w            bigint;
	nr_atendimento_w         bigint;
	ie_tipo_atendimento_w    smallint;
	cd_estabelecimento_w     smallint;
	qt_min_atraso_w		 bigint;
	nr_horas_validade_w      integer;
	nr_ocorrrencia_w         bigint := 0;
	ds_horario_w             varchar(255);
	ds_horario_ww            varchar(255);
	cd_categoria_w           varchar(10);
	cd_especialidade_w       varchar(50);
	ie_regra_mat_exame_w     varchar(10);
	ie_tipo_convenio_w       smallint;
	cd_setor_atendimento_w   integer;
	VarAtualDataPrevResult_w varchar(1);
	cd_prescritor_w          varchar(20);
	ie_obs_laboratorio_w     varchar(20);
	dt_resultado_w timestamp;
	cd_setor_atend_w           varchar(255);
	cd_setor_col_w             varchar(255);
	cd_setor_entrega_w         varchar(255):= null;
	qt_dia_entrega_w           numeric(20);
	ie_emite_mapa_w            varchar(255);
	ds_frasco_w		   varchar(255);
	ds_hora_fixa_w             varchar(255);
	ie_data_resultado_w        varchar(255);
	ie_atualizar_recoleta_w    varchar(255);
	qt_min_entrega_w           bigint;
	ie_mat_exame_w             varchar(2);
	ie_regra_lanc_aut_w        varchar(1);
	ie_prescr_proc_sem_lib_w   varchar(30);
	ie_interv_padrao_prescr_w  varchar(255);
	ie_sem_dt_execucao_w       varchar(1);
	ie_limpa_dt_execucao_w     varchar(1);
	ie_dia_semana_final_w      bigint;
	ie_dia_semana_upd_w        smallint;
	nr_seq_proc_interno_aux_w  bigint;
	ie_proc_interno_exam_lab_w varchar(1);
	ie_apres_frasco_obs_lab_w  varchar(1);
	nr_seq_proc_interno_w      bigint;
	ie_permite_w               varchar(2) := 'S';
	ds_exame_dia_w             varchar(255);
	ie_Gera_Setor_PrescrProc_w varchar(1);
	ie_consiste_duplic_w       varchar(1);
	cd_pessoa_fisica_w         varchar(10);
	cd_plano_convenio_w        varchar(10);
	cd_perfil_w					integer := obter_perfil_ativo;
	cd_classif_setor_w			varchar(2);
	ie_urgencia_ps_w			varchar(1);
	ie_urgencia_regra_ps_w		varchar(1);	
	ie_forma_atual_dt_result_w	exame_lab_regra_setor.ie_atul_data_result%type;
	ds_orientacao_medicamento_w	varchar(2000);
	qt_min_intervalo_w			integer;
    ds_orientacao_proc_interno_w proc_interno.ds_observacao%type;


BEGIN
	select coalesce(dt_inicio_prescr,dt_prescricao + 1/24),
		obter_convenio_atendimento(b.nr_atendimento),
		obter_origem_proced_cat(b.cd_estabelecimento, b.ie_tipo_atendimento, b.ie_tipo_convenio, obter_convenio_atendimento(b.nr_atendimento), obter_categoria_atendimento(b.nr_atendimento)),
		b.ie_tipo_atendimento,
		a.cd_estabelecimento,
		a.nr_horas_validade,
		OBTER_TIPO_CONVENIO(obter_convenio_atendimento(b.nr_atendimento)),
		obter_categoria_atendimento(b.nr_atendimento),
		a.cd_prescritor,
		a.dt_prescricao,
		a.nr_atendimento,
		a.cd_pessoa_fisica,
		obter_plano_conv_atend(b.nr_atendimento),
		a.dt_validade_prescr
	into STRICT dt_prescricao_w,
		cd_convenio_w,
		ie_origem_proced_w,
		ie_tipo_atendimento_w,
		cd_estabelecimento_w,
		nr_horas_validade_w,
		ie_tipo_convenio_w,
		cd_categoria_w,
		cd_prescritor_w,
		dt_prescr_w,
		nr_atendimento_w,
		cd_pessoa_fisica_w,
		cd_plano_convenio_w,
		dt_validade_prescr_w
	FROM prescr_medica a
LEFT OUTER JOIN atendimento_paciente b ON (a.nr_atendimento = b.nr_atendimento)
WHERE nr_prescricao  = nr_prescricao_p;
	ie_interv_padrao_prescr_w := Obter_Param_Usuario(924, 35, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_interv_padrao_prescr_w);
	VarMatExame_w := Obter_Param_Usuario(924, 88, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, VarMatExame_w);
	VarAtualDataPrevResult_w := Obter_Param_Usuario(924, 265, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, VarAtualDataPrevResult_w);
	ie_mat_exame_w := Obter_Param_Usuario(924, 314, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_mat_exame_w);
	VarDataPrescricaoProced_w := Obter_Param_Usuario(924, 442, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, VarDataPrescricaoProced_w);
	ie_regra_lanc_aut_w := Obter_Param_Usuario(924, 172, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_regra_lanc_aut_w);
	ie_obs_laboratorio_w := Obter_Param_Usuario(924, 480, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_obs_laboratorio_w);
	ie_Gera_Setor_PrescrProc_w := Obter_Param_Usuario(924, 493, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_Gera_Setor_PrescrProc_w);
	ie_prescr_proc_sem_lib_w := Obter_Param_Usuario(924, 530, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_prescr_proc_sem_lib_w);
	ie_consiste_duplic_w := Obter_Param_Usuario(924, 704, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_consiste_duplic_w);
	ie_amostra_entregue_w := Obter_Param_Usuario(924, 743, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_amostra_entregue_w);
	ie_sem_dt_execucao_w := Obter_Param_Usuario(924, 787, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_sem_dt_execucao_w);
	ie_urgencia_ps_w := Obter_Param_Usuario(924, 831, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_urgencia_ps_w);
	ie_proc_interno_exam_lab_w := Obter_Param_Usuario(924, 1001, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_proc_interno_exam_lab_w);
	ie_apres_frasco_obs_lab_w := Obter_Param_Usuario(924, 1152, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_apres_frasco_obs_lab_w);
	select coalesce(max(nr_sequencia),0) + 1
	into STRICT nr_seq_proced_w
	from prescr_procedimento
	where nr_prescricao               = nr_prescricao_p;
	nr_sequencia_p                   := nr_seq_proced_w;
    if (cd_intervalo_p IS NOT NULL AND cd_intervalo_p::text <> '') then
		cd_intervalo_w                  := cd_intervalo_p;
	elsif (ie_interv_padrao_prescr_w IS NOT NULL AND ie_interv_padrao_prescr_w::text <> '') then
		cd_intervalo_w                  := ie_interv_padrao_prescr_w;
	end if;

	select max(nr_seq_exame)
	into STRICT nr_seq_exame_w
	from exame_laboratorio
	where cd_exame                 = cd_exame_p;

	if (coalesce(nr_seq_exame_w::text, '') = '') then
		-- 257520: exibe mensagem caso o atributo CD_EXAME esteja nulo.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(257520);
	end if;

	if (ie_proc_interno_exam_lab_w = 'S') then
		select max(nr_sequencia)
		into STRICT nr_seq_proc_interno_w
		from proc_interno
		where nr_seq_exame_lab = nr_seq_exame_w;
	end if;
	if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
		begin
			Select count(*)
			into STRICT qt_material_w
			from material_exame_lab b,
				exame_lab_material a
			where a.nr_seq_material = b.nr_sequencia
			and a.ie_situacao       = 'A'
			and a.nr_seq_exame      = nr_seq_exame_w;
			if (qt_material_w       = 1) or (VarMatExame_w = 'S') then
				select max(cd_material_exame)
				into STRICT cd_material_exame_w
				from material_exame_lab b,
					exame_lab_material a
				where a.nr_seq_material = b.nr_sequencia
				and a.nr_seq_exame      = nr_seq_exame_w
				and a.ie_situacao       = 'A'
				and coalesce(obter_se_mat_exam_estab(cd_estabelecimento_w,a.nr_seq_exame,a.nr_seq_material),'S') = 'S'
				and ie_prioridade       =
					(SELECT min(ie_prioridade)
					from exame_lab_material x
					where x.ie_situacao = 'A'
					and nr_seq_exame    = nr_seq_exame_w);
			end if;
		end;
	end if;	
	SELECT * FROM Obter_Exame_Lab_Convenio(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estabelecimento_w, ie_tipo_convenio_w, nr_seq_proc_interno_w, cd_material_exame_w, cd_plano_convenio_w, cd_setor_exclusivo_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT cd_setor_exclusivo_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;
	if (coalesce(cd_setor_exclusivo_w::text, '') = '') then
		/*select nvl(max(b.cd_setor_exclusivo),0)
		into cd_setor_exclusivo_w
		from procedimento b,
		exame_laboratorio a
		where a.nr_seq_exame  = nr_seq_exame_w
		and a.cd_procedimento = b.cd_procedimento
		and a.ie_origem_proced = b.ie_origem_proced;*/
		select coalesce(max(b.cd_setor_exclusivo),0)
		into STRICT cd_setor_exclusivo_w
		from procedimento b
		where b.cd_procedimento = cd_procedimento_w
		and b.ie_origem_proced  = ie_origem_proced_w;
	end if;
	select cd_setor_atendimento
	into STRICT cd_setor_atendimento_w
	from prescr_medica
	where nr_prescricao      = nr_prescricao_p;
	if (cd_setor_exclusivo_w = 0) then
		select obter_setor_atend_proc(cd_estabelecimento_w,cd_procedimento_w,ie_origem_proced_w, null,cd_setor_atendimento_w,null,nr_seq_proc_interno_w,nr_atendimento_w)
		into STRICT cd_setor_exclusivo_w
		;
	end if;
	ie_limpa_dt_execucao_w   := obter_se_data_prev_exec_proc(cd_procedimento_w,ie_origem_proced_w,nr_seq_proc_interno_w,nr_seq_exame_w);
	if ((ie_sem_dt_execucao_w = 'N') or (ie_sem_dt_execucao_w = 'D' AND ie_limpa_dt_execucao_w <> 'S')) then
		select Obter_data_prev_exec(dt_prescricao_w,dt_prev_exec_p,cd_setor_exclusivo_w, nr_prescricao_p, 'A')
		into STRICT dt_prev_execucao_w
		;
	end if;
	select max(cd_setor_atendimento)
	into STRICT cd_setor_prescr_w
	from prescr_medica
	where nr_prescricao = nr_prescricao_p;
	select max(obter_especialidade_medico(cd_prescritor_w, 'C'))
	into STRICT cd_especialidade_w
	;

	if (coalesce(cd_setor_exclusivo_w::text, '') = '') and (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
		select obter_setor_atend_proc_lab(cd_estabelecimento_w,cd_procedimento_w,ie_origem_proced_w, null,cd_setor_atendimento_w,null,nr_seq_exame_w,nr_atendimento_w)
		into STRICT cd_setor_exclusivo_w
		;
	end if;

	select coalesce(OBTER_DADOS_EXAME_LAB_REP(cd_perfil_w, cd_especialidade_w, cd_setor_prescr_w, nr_seq_exame_w, cd_estabelecimento_w, 'I'), cd_intervalo_w)
	into STRICT cd_intervalo_w
	;	
	select coalesce(max(OBTER_SE_PROC_URGENTE(cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, null, nr_seq_exame_w, ie_tipo_atendimento_w)), 'N')
	into STRICT ie_urgencia_w
	;
	if (ie_urgencia_ps_w	= 'S') or (ie_urgencia_ps_w = 'D') then
		cd_classif_setor_w := obter_classif_setor(cd_setor_atendimento_w);
		if (cd_classif_setor_w	= '1') then
			if (ie_urgencia_ps_w = 'D') then
				ie_urgencia_regra_ps_w	:= Obter_Se_marca_Agora(cd_setor_atendimento_w);
				if (ie_urgencia_regra_ps_w = 'S') then
					ie_urgencia_w := 'S';
					cd_intervalo_w	:= Obter_interv_acm_sn_agora_lib( cd_estabelecimento_w, 1,2,'P',cd_procedimento_w, cd_intervalo_w,
																		nr_prescricao_p, ie_origem_proced_w,nr_seq_proc_interno_w);
				end if;
			else
				ie_urgencia_w := 'S';
				cd_intervalo_w	:= Obter_interv_acm_sn_agora_lib( cd_estabelecimento_w, 1,2,'P',cd_procedimento_w, cd_intervalo_w,
																	nr_prescricao_p, ie_origem_proced_w,nr_seq_proc_interno_w);				
			end if;
		end if;
	end if;	

	ie_urgencia_w := coalesce(ie_urgencia_p, ie_urgencia_w);
	select 	coalesce(max(qt_min_intervalo), 0)
	into STRICT	qt_min_intervalo_w
	from 	intervalo_prescricao
	where	cd_intervalo = cd_intervalo_w;
	if ((ie_sem_dt_execucao_w = 'N') or (ie_sem_dt_execucao_w = 'D' AND ie_limpa_dt_execucao_w <> 'S')) then
		SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, dt_prescricao_w, dt_prev_execucao_w, nr_horas_validade_w, cd_procedimento_w, 0, qt_min_intervalo_w, nr_ocorrrencia_w, ds_horario_w, ds_horario_ww, 'N', null, null, cd_procedimento_w, ie_origem_proced_w, null) INTO STRICT nr_ocorrrencia_w, ds_horario_w, ds_horario_ww;
	end if;	

	SELECT * FROM obter_setor_exame_lab( nr_prescricao_p, nr_seq_exame_w, cd_setor_exclusivo_w, cd_material_exame_w, null, 'S', cd_setor_atend_w, cd_setor_col_w, cd_setor_entrega_w, qt_dia_entrega_w, ie_emite_mapa_w, ds_hora_fixa_w, ie_data_resultado_w, qt_min_entrega_w, ie_atualizar_recoleta_w, ie_urgencia_w, ie_dia_semana_final_w, ie_forma_atual_dt_result_w, qt_min_atraso_w) INTO STRICT cd_setor_atend_w, cd_setor_col_w, cd_setor_entrega_w, qt_dia_entrega_w, ie_emite_mapa_w, ds_hora_fixa_w, ie_data_resultado_w, qt_min_entrega_w, ie_atualizar_recoleta_w, ie_dia_semana_final_w, ie_forma_atual_dt_result_w, qt_min_atraso_w;
	dt_prev_execucao_w := atualiza_dt_realizacao_exame(nr_seq_exame_w, nr_prescricao_p, dt_prev_execucao_w, dt_prev_execucao_w);
	if (coalesce(cd_setor_exclusivo_w::text, '') = '') then
		select gerar_setor_exame_lab(cd_setor_atend_w)
		into STRICT cd_setor_exclusivo_w
		;
	end if;
	if ((ie_data_resultado_w = 'P') or (ie_data_resultado_w = 'N')) and (VarAtualDataPrevResult_w = 'S') then
		if (ds_hora_fixa_w IS NOT NULL AND ds_hora_fixa_w::text <> '') then
			select (trunc(coalesce(dt_entrada_unidade,dt_prescricao)) + (ds_hora_fixa_w/24)) + qt_dia_entrega_w + (CASE WHEN qt_min_entrega_w=0 THEN 0  ELSE qt_min_entrega_w/1440 END )
			into STRICT dt_resultado_w
			from prescr_medica
			where nr_prescricao = nr_prescricao_p;
		else
			select coalesce(dt_entrada_unidade,dt_prescricao) + qt_dia_entrega_w + (CASE WHEN qt_min_entrega_w=0 THEN 0  ELSE qt_min_entrega_w/1440 END )
			into STRICT dt_resultado_w
			from prescr_medica
			where nr_prescricao = nr_prescricao_p;
		end if;
		if (ie_dia_semana_final_w > 0) then
			select pkg_date_utils.get_WeekDay(dt_resultado_w)
			into STRICT ie_dia_semana_upd_w
			;
			while(ie_dia_semana_upd_w <> ie_dia_semana_final_w)
			loop
				dt_resultado_w := dt_resultado_w + 1;
				select pkg_date_utils.get_WeekDay(dt_resultado_w)
				into STRICT ie_dia_semana_upd_w
				;
			end loop;
		end if;
	end if;
	select	coalesce(OBTER_DADOS_EXAME_LAB_REP(cd_perfil_w, cd_especialidade_w, cd_setor_prescr_w, nr_seq_exame_w, cd_estabelecimento_w, 'N'), 'PL'),
		OBTER_DADOS_EXAME_LAB_REP(cd_perfil_w, cd_especialidade_w, cd_setor_prescr_w, nr_seq_exame_w, cd_estabelecimento_w, 'H')
	into STRICT	ie_regra_mat_exame_w,
		hr_prev_execucao_w
	;
	if (coalesce(ie_regra_mat_exame_w,'PL') = 'V') or (VarMatExame_w <> 'S') then
		cd_material_exame_w              := null;
	elsif (VarMatExame_w               = 'S') and ((qt_material_w = 1) or (coalesce(ie_regra_mat_exame_w,'PL') = 'PL')) then
		select max(cd_material_exame)
		into STRICT cd_material_exame_w
		from material_exame_lab b,
			exame_lab_material a
		where a.nr_seq_material = b.nr_sequencia
		and a.nr_seq_exame      = nr_seq_exame_w
		and a.ie_situacao       = 'A'
		and coalesce(obter_se_mat_exam_estab(cd_estabelecimento_w,a.nr_seq_exame,a.nr_seq_material),'S') = 'S'
		and ie_prioridade       =
			(SELECT min(ie_prioridade)
			from exame_lab_material x
			where nr_seq_exame = nr_seq_exame_w
			and x.ie_situacao  = 'A');
	end if;	
	select coalesce(max(obter_se_gerar_setor_exame(cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, null, coalesce(cd_setor_atendimento_w, cd_setor_exclusivo_w), ie_tipo_atendimento_w, nm_usuario_p)), 'S')
	into STRICT ie_gerar_setor_w
	;
	if (coalesce(cd_setor_exclusivo_w::text, '') = '') and (ie_Gera_Setor_PrescrProc_w = 'S') and (obter_se_setor_exec(cd_setor_prescr_w, cd_estabelecimento_w, cd_procedimento_w,ie_origem_proced_w, nr_seq_proc_interno_w) = 'S') then
		cd_setor_exclusivo_w    := cd_setor_prescr_w;
	end if;
	if (ie_gerar_setor_w   = 'N') then
		cd_setor_exclusivo_w := null;
	end if;
	if (ie_mat_exame_w    = 'N') then
		cd_material_exame_w := null;
	end if;
	if (VarDataPrescricaoProced_w = 'S') and ((ie_sem_dt_execucao_w = 'N') or (ie_sem_dt_execucao_w = 'D' AND ie_limpa_dt_execucao_w <> 'S')) then
		dt_prev_execucao_w          := coalesce(dt_prescr_w, dt_prev_execucao_w);
	end if;
	if (ie_urgencia_w    = 'S') then
		ds_horario_w       := to_char(clock_timestamp(),'hh24:mi');
		dt_prev_execucao_w := clock_timestamp();
	end if;
	if (ie_obs_laboratorio_w = 'S') then
		select substr(max(ds_orientacao_usuario),1,1000)
		into STRICT ds_orientacao_usuario_w
		from exame_laboratorio
		where nr_seq_exame = nr_seq_exame_w;
		select substr(max(ds_orientacao_medicamento),1,1000)
		into STRICT ds_orientacao_medicamento_w
		from exame_laboratorio
		where nr_seq_exame = nr_seq_exame_w;

		if (ds_orientacao_medicamento_w IS NOT NULL AND ds_orientacao_medicamento_w::text <> '') then
			ds_orientacao_usuario_w	:= ds_orientacao_usuario_w|| chr(13) || chr(10) ||ds_orientacao_medicamento_w;
        end if;
	end if;
	
    select substr(max(ds_observacao),1,1000)
    into STRICT ds_orientacao_proc_interno_w
    from proc_interno
    where nr_seq_exame_lab = nr_seq_exame_w;

    if (ds_orientacao_proc_interno_w IS NOT NULL AND ds_orientacao_proc_interno_w::text <> '') then
        if (ds_orientacao_usuario_w IS NOT NULL AND ds_orientacao_usuario_w::text <> '') then
            ds_orientacao_usuario_w	:= ds_orientacao_usuario_w || chr(13) || chr(10) || ds_orientacao_proc_interno_w;
        else
            ds_orientacao_usuario_w	:= ds_orientacao_proc_interno_w;
        end if;
    end if;
	if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
		ie_permite_w := valida_exame_dia_semana(nr_seq_exame_w, cd_material_exame_w, coalesce(dt_prev_execucao_w,dt_prescricao_w), nm_usuario_p, cd_estabelecimento_w, ie_permite_w);
		if (ie_permite_w = 'N') then
			ds_exame_dia_w := Obter_Desc_Exame(nr_seq_exame_w);
			--'O exame '|| ds_exame_dia_w ||' nao pode ser prescrito neste dia.'
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(198117,'DS_EXAME='||ds_exame_dia_w);
		end if;
	end if;
	if (ie_consiste_duplic_w = 'L') then
		ds_erro_w              := Verifica_exame_duplic_dia(nr_seq_exame_w, cd_procedimento_w, dt_prev_execucao_w, nr_atendimento_w, null, null);
		if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
			-- 219321: #@DS_MENSAGEM#@

			-- 219312: O exame #@DS_EXAME#@ ja foi prescrito neste dia para o paciente!
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(219321,'DS_MENSAGEM='||ds_erro_w);
		end if;
	end if;	
	if (ie_apres_frasco_obs_lab_w = 'S') and (coalesce(nr_seq_exame_w,0) > 0) and (cd_material_exame_w IS NOT NULL AND cd_material_exame_w::text <> '') then
		select	max(rep_obter_frasco_exame(nr_seq_exame_w, cd_material_exame_w))
		into STRICT	ds_frasco_w
		;
		if (coalesce(ds_orientacao_usuario_w::text, '') = '') then
			ds_orientacao_usuario_w := ds_frasco_w;
		else
			ds_orientacao_usuario_w	:=	ds_orientacao_usuario_w || chr(13) || chr(10) ||
							ds_frasco_w;
		end if;
	end if;
	if (hr_prev_execucao_w IS NOT NULL AND hr_prev_execucao_w::text <> '') then
		dt_prev_execucao_w := to_date(to_char(dt_prev_execucao_w,'dd/mm/yyyy ') || hr_prev_execucao_w,'dd/mm/yyyy hh24:mi');
		if (dt_prev_execucao_w < dt_prescr_w) then
			dt_prev_execucao_w := dt_prev_execucao_w + 1;
		elsif (dt_prev_execucao_w > dt_validade_prescr_w) then
			dt_prev_execucao_w := dt_prescr_w;
		end if;
		ds_horario_w := to_char(dt_prev_execucao_w,'hh24:mi');
	end if;

	if (ie_permite_w = 'S') then
		insert
		into prescr_procedimento(
				nr_prescricao,
				nr_sequencia,
				cd_procedimento,
				qt_procedimento,
				dt_atualizacao,
				nm_usuario,
				cd_motivo_baixa,
				ie_origem_proced,
				cd_intervalo,
				qt_min_intervalo,
				ds_horarios,
				ie_urgencia,
				ie_suspenso,
				cd_setor_atendimento,
				dt_prev_execucao,
				cd_material_exame,
				nr_seq_exame,
				ie_status_atend,
				ie_origem_inf,
				ie_amostra,
				ds_dado_clinico,
				ie_executar_leito,
				ie_se_necessario,
				ie_acm,
				nr_seq_interno,
				ie_avisar_result,
				dt_resultado,
				ds_observacao,
				ds_material_especial,
				nr_seq_proc_interno
			)
			values (
				nr_prescricao_p,
				nr_seq_proced_w,
				cd_procedimento_w,
				1,
				clock_timestamp(),
				nm_usuario_p,
				0,
				ie_origem_proced_w,
				cd_intervalo_w,
				qt_min_intervalo_w,
				ds_horario_w
				||ds_horario_ww,
				ie_urgencia_w,
				'N',
				cd_setor_exclusivo_w,
				dt_prev_execucao_w,
				cd_material_exame_w,
				nr_seq_exame_w,
				5,
				'1',
				ie_amostra_entregue_w,
				ds_dado_clinico_p,
				'N',
				'N',
				'N',
				nextval('prescr_procedimento_seq'),
				'N',
				dt_resultado_w,
				substr(ds_orientacao_usuario_w,1,2000),
				ds_material_especial_p,
				nr_seq_proc_interno_w
			);
		if (
				ie_prescr_proc_sem_lib_w = 'S'
			)
			then
			CALL Gerar_prescr_proc_sem_dt_lib(
				nr_prescricao_p,nr_seq_proced_w,cd_perfil_w,'N',nm_usuario_p
			)
			;
		end if;
		if
			(
				(ie_regra_lanc_aut_w = 'S') or (ie_regra_lanc_aut_w = 'E')
			)
			then
			CALL GERAR_LANCTO_AUT_Prescr_Proc(
				nr_prescricao_p, nr_seq_proced_w, 151, nm_usuario_p, cd_procedimento_w, ie_origem_proced_w, coalesce(nr_seq_proc_interno_w,0), nr_seq_exame_w, ie_regra_lanc_aut_w
			)
			;
		end if;
		CALL Gerar_med_mat_assoc(
			nr_prescricao_p,nr_seq_proced_w
		)
		;
		CALL Gerar_prescr_proc_assoc(
			nr_prescricao_p,nr_seq_proced_w, nm_usuario_p
		)
		;
		ds_erro_w
		 := consistir_prescr_procedimento(
			nr_prescricao_p, nr_seq_proced_w, nm_usuario_p, 0, ds_erro_w
		)		
		;
		if coalesce(qt_min_atraso_w, 0) > 0 then
			dt_resultado_w := dt_resultado_w + (qt_min_atraso_w / 1440);
			CALL lab_gerar_dt_result_atraso(nr_prescricao_p, nr_seq_proced_w, dt_resultado_w, nm_usuario_p);
		end if;
	end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE incluir_exame_lab_prescricao ( nr_prescricao_p bigint, cd_exame_p text, dt_prev_exec_p timestamp, cd_intervalo_p text, ds_dado_clinico_p text, cd_cid_p text, nm_usuario_p text, nr_sequencia_p INOUT bigint, ie_urgencia_p text default null, ds_material_especial_p text default null) FROM PUBLIC;

