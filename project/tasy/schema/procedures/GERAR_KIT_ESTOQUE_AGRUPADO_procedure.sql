-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_kit_estoque_agrupado ( nr_seq_kit_estoque_p bigint, nr_atendimento_p bigint, nr_seq_atepacu_p bigint, ie_local_estoque_p text, ie_baixa_sem_estoque_p text, nm_usuario_p text, cd_local_estoque_p bigint, ds_retorno_p INOUT text, dt_base_p timestamp, nr_doc_interno_p bigint, ie_forma_geracao_p text, nm_usuario_atend_far_p text, nm_usuario_atend_enf_p text) AS $body$
DECLARE

									 
nr_seq_kit_estoque_w	bigint;	
qt_existe_w		bigint;
ds_retorno_w		varchar(255);
dt_utilizacao_w		timestamp;
ie_existe_w		varchar(1);
cd_estabelecimento_w	smallint;
cd_pessoa_fisica_w	bigint;
ds_retorno_reg_kit_w	varchar(255);
ds_retorno_kit_w	varchar(255);
ie_gera_novo_kit_w	varchar(1);

C01 CURSOR FOR 
	SELECT	b.nr_sequencia 
	from 	kit_estoque_reg a, 
		kit_estoque b	 
	where	a.nr_sequencia = b.nr_seq_reg_kit 
	and	a.nr_sequencia = nr_seq_kit_estoque_p;


BEGIN 
cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
ie_gera_novo_kit_w := substr(coalesce(obter_valor_param_usuario(24, 316, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N'),1,1);
cd_pessoa_fisica_w := obter_pessoa_fisica_usuario(wheb_usuario_pck.get_nm_usuario,'C');
 
select	max(dt_utilizacao), 
	coalesce(max('S'),'N') 
into STRICT	dt_utilizacao_w, 
	ie_existe_w 
from	kit_estoque_reg 
where	nr_sequencia = nr_seq_kit_estoque_p;
 
if (ie_existe_w = 'N') then 
	ds_retorno_w := substr(Wheb_mensagem_pck.get_Texto(306766, 'NR_SEQ_KIT_ESTOQUE_P='|| NR_SEQ_KIT_ESTOQUE_P),1,255); /*'Kit de estoque nº ' || to_char(nr_seq_kit_estoque_p) || ' não encontrado!'*/
elsif (dt_utilizacao_w IS NOT NULL AND dt_utilizacao_w::text <> '') then 
	ds_retorno_w := substr(Wheb_mensagem_pck.get_Texto(306767, 'NR_SEQ_KIT_ESTOQUE_P='|| NR_SEQ_KIT_ESTOQUE_P),1,255); /*'O kit de estoque nº ' || to_char(nr_seq_kit_estoque_p) || ' já foi utilizado!'*/
else 
	open C01;
	loop 
	fetch C01 into 
		nr_seq_kit_estoque_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 ds_retorno_w := gerar_kit_estoque(	nr_seq_kit_estoque_w, nr_atendimento_p, nr_seq_atepacu_p, ie_local_estoque_p, ie_baixa_sem_estoque_p, nm_usuario_p, cd_local_estoque_p, ds_retorno_w, dt_base_p, nr_seq_kit_estoque_p, ie_forma_geracao_p, 'N');
		 
		update	material_atend_paciente 
		set	nm_usuario_atend_far	=	nm_usuario_atend_far_p, 
			nm_usuario_atend_enf	=	nm_usuario_atend_enf_p 
		where	nr_atendimento 		= 	nr_atendimento_p 
		and 	nr_seq_kit_estoque	=	nr_seq_kit_estoque_w;
		 
		end;
	end loop;
	close C01;
 
	select	count(*) 
	into STRICT	qt_existe_w 
	from	kit_estoque 
	where	nr_seq_reg_kit = nr_seq_kit_estoque_p 
	and	(dt_utilizacao IS NOT NULL AND dt_utilizacao::text <> '');
 
	if (qt_existe_w > 0) then 
		update	kit_estoque_reg 
		set	dt_utilizacao 	= clock_timestamp(), 
			nm_usuario_util	= nm_usuario_p	 
		where	nr_sequencia 	= nr_seq_kit_estoque_p;
		 
		ds_retorno_w	:= Wheb_mensagem_pck.get_Texto(306777); /*'Kit de estoque gerado com sucesso!';*/
	end if;	
	 
	if (coalesce(nr_seq_kit_estoque_p,0) > 0) and (ie_gera_novo_kit_w = 'S') then 
		SELECT * FROM gerar_carrinho_kit_execucao(cd_estabelecimento_w, cd_pessoa_fisica_w, nm_usuario_p, cd_local_estoque_p, null, nr_seq_kit_estoque_p, ds_retorno_reg_kit_w, ds_retorno_kit_w) INTO STRICT ds_retorno_reg_kit_w, ds_retorno_kit_w;
	end if;
end if;
 
ds_retorno_p := substr(ds_retorno_w,1,255);
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_kit_estoque_agrupado ( nr_seq_kit_estoque_p bigint, nr_atendimento_p bigint, nr_seq_atepacu_p bigint, ie_local_estoque_p text, ie_baixa_sem_estoque_p text, nm_usuario_p text, cd_local_estoque_p bigint, ds_retorno_p INOUT text, dt_base_p timestamp, nr_doc_interno_p bigint, ie_forma_geracao_p text, nm_usuario_atend_far_p text, nm_usuario_atend_enf_p text) FROM PUBLIC;

