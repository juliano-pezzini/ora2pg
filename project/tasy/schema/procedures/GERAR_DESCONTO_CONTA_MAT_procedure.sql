-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_desconto_conta_mat (nr_interno_conta_p bigint, ie_acao_p text, nr_seq_material_p bigint, tx_desconto_p bigint, dt_periodo_inicial_p timestamp, dt_periodo_final_p timestamp, cd_setor_atendimento_p bigint, nr_doc_convenio_p text, cd_grupo_material_p bigint, cd_subgrupo_material_p bigint, cd_classe_material_p bigint, cd_material_p bigint, cd_convenio_p bigint, cd_Categoria_p text, vl_final_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
/* ie_acao_p	I-Inclusão do desconto E-Estorno do desconto 	*/
 
/* dt_periodo_inicial_p Inicializar com dt_entrada do paciente  	*/
 
/* dt_periodo_final_p Inicializar com sysdate				*/
 
/* nr_seq_material_p 								*/
 
 
dt_atualizacao_w			timestamp			:= clock_timestamp();
vl_material_w			double precision	:= 0;
vl_unitario_w			double precision	:= 0;

ie_valor_informado_w		varchar(1);
nr_sequencia_w			bigint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
vl_desconto_w			double precision	:= 0;
nr_seq_w				bigint;
ie_tipo_valor_w			smallint	:= 3;

cd_estabelecimento_w   	smallint 	:= 0;
cd_material_w	 	 	integer;
cd_tipo_acomodacao_w   	smallint		:= null;
ie_tipo_atendimento_w   	smallint  	:= 0;
cd_setor_Atendimento_w  	integer 	:= 0;
cd_cgc_fornecedor_w  	 	varchar(14)  	:= '';
vl_preco_material_w   	double precision 	:= 0;
dt_ult_vigencia_w     	timestamp     	:= clock_timestamp();
cd_tab_preco_mat_w  	 	smallint 	:= 0;
ie_origem_preco_w     	smallint  	:= 0;
dt_conta_w        	timestamp     	:= clock_timestamp();
qt_material_w       	double precision 	:= 0;
vl_Mat_acum_w			double precision	:= 0;
nr_seq_desc_w			bigint;
nr_seq_Item_Desc_w		bigint;
nr_seq_bras_preco_w		bigint;
nr_seq_mat_bras_w		bigint;
nr_seq_conv_bras_w		bigint;
nr_seq_conv_simpro_w		bigint;
nr_seq_mat_simpro_w		bigint;
nr_seq_simpro_preco_w		bigint;
nr_seq_ajuste_mat_w		bigint;
nr_seq_classif_atend_w		atendimento_paciente.nr_seq_classificacao%type;

/* Os tipos de valor são (1 - Pacote, 2 - Valor Ponto AMB e 3 - Desconto) */
 
c02 CURSOR FOR 
	SELECT 	a.nr_sequencia, 
			a.vl_material, 
			a.vl_unitario, 
			a.ie_valor_informado, 
			a.cd_convenio, 
			a.cd_categoria, 
			a.qt_material, 
			a.cd_material, 
			a.cd_setor_atendimento, 
			a.cd_cgc_fornecedor, 
			coalesce(a.dt_conta, coalesce(dt_prescricao, dt_atendimento)), 
			a.qt_material, 
			c.cd_estabelecimento, 
			c.ie_tipo_atendimento, 
			c.nr_seq_classificacao 
	from		estrutura_material_v b, 
			Atendimento_paciente c, 
			material_atend_paciente a 
	where		a.cd_material				= b.cd_material 
	and		a.nr_atendimento				= c.nr_atendimento 
	and		a.nr_interno_conta			= nr_interno_conta_p 
	and		a.dt_atendimento	between 		dt_periodo_inicial_p and 
									dt_periodo_final_p 
	and		((coalesce(nr_doc_convenio_p, a.nr_doc_convenio) 
									= a.nr_doc_convenio) or (coalesce(a.nr_doc_convenio::text, '') = '')) 
	and		coalesce(cd_setor_atendimento_p,a.cd_setor_atendimento) 
									= a.cd_setor_atendimento 
	and		coalesce(cd_grupo_material_p,b.cd_grupo_material) 
									= b.cd_grupo_material 
	and		coalesce(cd_subgrupo_material_p,b.cd_subgrupo_material) 
									= b.cd_subgrupo_material 
	and		coalesce(cd_classe_material_p,b.cd_classe_material) 
									= b.cd_classe_material 
	and		coalesce(cd_material_p,b.cd_material) 
									= b.cd_material 
	order by 	a.nr_sequencia;


BEGIN 
 
vl_mat_acum_w			:= 0;
nr_seq_desc_w			:= 0;
nr_seq_Item_Desc_w		:= 0;
 
OPEN C02;
LOOP 
	FETCH C02 into 
		nr_sequencia_w, 
		vl_material_w, 
		vl_unitario_w, 
		ie_valor_informado_w, 
		cd_convenio_w, 
		cd_categoria_w, 
		qt_material_w, 
		cd_material_w, 
		cd_setor_atendimento_w, 
		cd_cgc_fornecedor_w, 
		dt_conta_w, 
		qt_material_w, 
		cd_estabelecimento_w, 
		ie_tipo_atendimento_w, 
		nr_seq_classif_atend_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
		if (ie_acao_p	= 'I') then 
			begin 
			if (coalesce(tx_desconto_p,0) > 0) then 
				begin 
				vl_desconto_w := Round((vl_material_w * 
							tx_desconto_p)/100,2);
				end;
			/* Caso o Convenio seja informado calcular o desconto pela dif */
 
			elsif (cd_convenio_p IS NOT NULL AND cd_convenio_p::text <> '') and (cd_categoria_p IS NOT NULL AND cd_categoria_p::text <> '') then 
				begin 
				SELECT * FROM define_preco_material( 
					cd_estabelecimento_w, cd_convenio_p, cd_categoria_p, dt_conta_w, cd_material_w, cd_tipo_acomodacao_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, cd_cgc_fornecedor_w, 0, nr_sequencia_w, null, null, null, null, null, nr_seq_classif_atend_w, null, null, vl_preco_material_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT vl_preco_material_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;
				vl_desconto_w := (vl_material_w - 
					(qt_material_w * vl_preco_material_w));
				end;
			end if;
			vl_Mat_acum_w	:= vl_mat_acum_w + vl_material_w;
			if (vl_desconto_w <> 0) then 
				begin 
				/* atualizar material_atend_paciente */
 
				update material_atend_paciente 
				set	 ie_valor_informado 	= 'S', 
					 vl_material		= (vl_material - vl_desconto_w) 
				where	 nr_sequencia		= nr_sequencia_w;
				/* gerar mat_atend_paciente_valor */
 
				select coalesce(max(nr_sequencia),0) 
				into STRICT	 nr_seq_w 
				from	 mat_atend_paciente_valor 
				where	 nr_seq_material	= nr_sequencia_w;
				nr_seq_w			:= nr_seq_w + 1;
				nr_seq_desc_w		:= nr_sequencia_w;
				nr_seq_Item_Desc_w	:= nr_seq_w;
				begin 
				insert into mat_atend_paciente_valor(nr_seq_material, 
					nr_sequencia, 
					ie_tipo_valor, 
					dt_atualizacao, 
					nm_usuario, 
					vl_material, 
					cd_convenio, 
					cd_categoria, 
					pr_valor) 
				values ( 
					nr_sequencia_w, 
					nr_seq_w, 
					ie_tipo_valor_w, 
					dt_atualizacao_w, 
					nm_usuario_p, 
					vl_desconto_w, 
					cd_convenio_w, 
					cd_categoria_w, 
					tx_desconto_p);
				exception 
					when others then 
					-- Erro Incluir Desconto Mat 
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(216671);
				end;	
				vl_Mat_acum_w	:= vl_mat_acum_w - vl_desconto_w;
				end;
			end if;			
			end;
		else 
			begin 
			/* atualizar material_atend_paciente */
 
			begin 
			update material_atend_paciente 
			set	 ie_valor_informado 	= 'N', 
				 vl_material		= (vl_material + vl_desconto_w) 
			where	 nr_sequencia		= nr_sequencia_w;
			end;
				CALL atualiza_preco_material(nr_sequencia_w,nm_usuario_p);				
				/* excluir mat_atend_paciente_valor */
 
			begin 
			delete from mat_atend_paciente_valor 
			where	 nr_seq_material 		= nr_sequencia_w 
			and	 ie_tipo_valor		= ie_tipo_valor_w;
			exception 
  					when others then 
				nr_sequencia_w	:= nr_sequencia_w;
			end;
			end;
		end if;
		end;
END LOOP;
CLOSE C02;
if (ie_acao_p	= 'I') and (vl_final_p	> 0) and (vl_final_p <> vl_mat_acum_w) and (nr_seq_desc_w <> 0) then 
	begin 
	update material_atend_paciente 
	set	 ie_valor_informado 	= 'S', 
		 vl_material		= (vl_material + (vl_final_p - vl_mat_acum_w)) 
	where	 nr_sequencia		= nr_seq_desc_w;
	update mat_atend_paciente_valor 
	  set vl_material		= vl_material - (vl_final_p - vl_mat_acum_w) 
	where nr_seq_material		= nr_seq_desc_w 
	 and nr_sequencia		= nr_seq_item_desc_w;
	end;
end if;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_desconto_conta_mat (nr_interno_conta_p bigint, ie_acao_p text, nr_seq_material_p bigint, tx_desconto_p bigint, dt_periodo_inicial_p timestamp, dt_periodo_final_p timestamp, cd_setor_atendimento_p bigint, nr_doc_convenio_p text, cd_grupo_material_p bigint, cd_subgrupo_material_p bigint, cd_classe_material_p bigint, cd_material_p bigint, cd_convenio_p bigint, cd_Categoria_p text, vl_final_p bigint, nm_usuario_p text) FROM PUBLIC;

