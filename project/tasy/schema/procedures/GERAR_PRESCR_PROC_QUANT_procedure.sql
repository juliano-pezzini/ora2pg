-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prescr_proc_quant (nr_prescricao_p bigint, cd_perfil_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_procedimento_novo_w	integer;
cd_estabelecimento_w		smallint;
nr_seq_exame_w			bigint;
ie_status_atend_w		smallint;
ie_status_execucao_w		varchar(3);
cd_setor_atendimento_proc_w	integer;
cd_setor_coleta_w		integer;
cd_setor_entrega_w        	integer;
cd_setor_exec_fim_w       	integer;
cd_setor_exec_inic_w      	integer;
nr_seq_lab_w			varchar(20);
ie_gerar_proc_intervalo_w	varchar(1);
ie_suspenso_w			varchar(1);
ds_observacao_w			varchar(2000);
ds_dado_clinico_w		varchar(2000);
ds_material_especial_w		varchar(255);
ie_controlado_w			varchar(1);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_proc_interno_w		bigint;
nr_ocor_proc_w			double precision;
ie_proc_urgente_w		varchar(1);
dt_prev_execucao_w		timestamp;
ds_hora_proc_w			varchar(2000);
dt_horario_proc_w		timestamp;
ds_horarios_proc_w		varchar(2000);
ds_horarios_padrao_proc_w	varchar(2000);
cd_material_exame_w		varchar(20);
dt_liberacao_farmacia_w		timestamp;
ie_amostra_w			varchar(1);
nr_seq_derivado_w		bigint;
ie_util_hemocomponente_w 	varchar(15);
qt_vol_hemocomp_w		bigint;
qt_procedimento_w		double precision;
QT_ITENS_W			bigint;
nr_seq_procedimento_w		integer;
ie_se_necessario_w		varchar(1);
cd_medico_exec_w		varchar(255);
ie_acm_w			varchar(1);
ie_horario_especial_w		varchar(1) := 'N';
qt_dieta_w			bigint;
cd_setor_atendimento_w		integer;
cd_intervalo_w			varchar(50);
ds_horarios_w			varchar(4000);

C01 CURSOR FOR
SELECT	nr_sequencia,
	cd_procedimento,
	ie_origem_proced,
	nr_seq_proc_interno,
	nr_ocorrencia,
	coalesce(ie_urgencia,'N'),
	coalesce(dt_prev_execucao,a.dt_inicio_prescr),
	ds_horarios,
	padroniza_horario_prescr(b.ds_horarios,b.dt_prev_execucao),
	coalesce(ie_se_necessario,'N'),
	coalesce(ie_acm,'N'),
	cd_material_exame,
	nr_seq_exame,
	b.ie_status_atend,
	b.ie_status_execucao,
	b.cd_setor_atendimento,
	b.cd_setor_coleta,
	b.cd_setor_entrega,
	b.cd_setor_exec_fim,
	b.cd_setor_exec_inic,
	b.nr_seq_lab,
	b.ie_suspenso,
	b.ds_observacao,
	b.ds_dado_clinico,
	b.ds_material_especial,
	b.ie_amostra,
	b.nr_seq_derivado,
	b.ie_util_hemocomponente,
	b.qt_vol_hemocomp,
	b.qt_procedimento,
	b.cd_intervalo,
	b.ds_horarios,
	b.cd_medico_exec
from	prescr_procedimento b,
	prescr_medica a
where	a.nr_prescricao	= b.nr_prescricao
and	a.nr_prescricao	= nr_prescricao_p
and	coalesce(b.nr_seq_origem::text, '') = ''
and	coalesce(b.ie_suspenso,'N') <> 'S'
and	coalesce(a.dt_suspensao::text, '') = ''
and	b.qt_procedimento > 1
and	obter_se_exibe_proced(b.nr_prescricao,b.nr_sequencia,b.ie_tipo_proced,'O') = 'S'
and	((ie_gerar_proc_intervalo_w = 'S') or
	 ((ie_gerar_proc_intervalo_w IN ('L', 'M')) and (b.nr_seq_exame IS NOT NULL AND b.nr_seq_exame::text <> '')));



BEGIN

select	coalesce(cd_estabelecimento,1)
into STRICT	cd_estabelecimento_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

ie_gerar_proc_intervalo_w := obter_param_usuario(924, 400, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_gerar_proc_intervalo_w);

open C01;
loop
fetch C01 into
	nr_seq_procedimento_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_proc_interno_w,
	nr_ocor_proc_w,
	ie_proc_urgente_w,
	dt_prev_execucao_w,
	ds_horarios_proc_w,
	ds_horarios_padrao_proc_w,
	ie_se_necessario_w,
	ie_acm_w,
	cd_material_exame_w,
	nr_seq_exame_w,
	ie_status_atend_w,
	ie_status_execucao_w,
	cd_setor_atendimento_proc_w,
	cd_setor_coleta_w,
	cd_setor_entrega_w,
	cd_setor_exec_fim_w,
	cd_setor_exec_inic_w,
	nr_seq_lab_w,
	ie_suspenso_w,
	ds_observacao_w,
	ds_dado_clinico_w,
	ds_material_especial_w,
	ie_amostra_w,
	nr_seq_derivado_w,
	ie_util_hemocomponente_w,
	qt_vol_hemocomp_w,
	qt_procedimento_w,
	cd_intervalo_w,
	ds_horarios_w,
	cd_medico_exec_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	qt_itens_w	:= 1;

	while	qt_itens_w < qt_procedimento_w loop
		begin

		select 	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_seq_procedimento_novo_w
		from	prescr_procedimento
		where 	nr_prescricao = nr_prescricao_p;

		insert into prescr_procedimento(
			nr_prescricao,
			nr_sequencia,
			nr_seq_origem,
			dt_prev_execucao,
			qt_procedimento,
			nm_usuario,
			dt_atualizacao,
			cd_procedimento,
			ie_origem_proced,
			nr_seq_proc_interno,
			ie_urgencia,
			nr_seq_exame,
			ie_status_atend,
			ie_status_execucao,
			cd_setor_atendimento,
			cd_setor_coleta,
			cd_setor_entrega,
			cd_setor_exec_fim,
			cd_setor_exec_inic,
			--nr_seq_lab,
			ie_origem_inf,
			cd_motivo_baixa,
			ie_suspenso,
			ds_observacao,
			ds_dado_clinico,
			ds_material_especial,
			ie_amostra,
			cd_material_exame,
			nr_seq_derivado,
			ie_util_hemocomponente,
			qt_vol_hemocomp,
			nr_seq_proc_quant,
			cd_intervalo,
			ds_horarios,
			cd_medico_exec)
		values (nr_prescricao_p,
			nr_seq_procedimento_novo_w,
			null,
			dt_prev_execucao_w,
			CASE WHEN coalesce(nr_seq_derivado_w::text, '') = '' THEN 1  ELSE qt_procedimento_w END ,
			nm_usuario_p,
			clock_timestamp(),
			cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_proc_interno_w,
			ie_proc_urgente_w,
			nr_seq_exame_w,
			ie_status_atend_w,
			ie_status_execucao_w,
			cd_setor_atendimento_proc_w,
			cd_setor_coleta_w,
			cd_setor_entrega_w,
			cd_setor_exec_fim_w,
			cd_setor_exec_inic_w,
			--nr_seq_lab_w,
			1,
			0,
			ie_suspenso_w,
      --728239 = Gerado automaticamento ao liberar a prescrição
			obter_desc_expressao(728239) || ds_observacao_w,
			ds_dado_clinico_w,
			ds_material_especial_w,
			ie_amostra_w,
			cd_material_exame_w,
			nr_seq_derivado_w,
			ie_util_hemocomponente_w,
			qt_vol_hemocomp_w,
			nr_seq_procedimento_w,
			cd_intervalo_w,
			ds_horarios_w,
			cd_medico_exec_w);

		qt_itens_w	:= qt_itens_w + 1;

		end;
	end loop;
	end;

	update	prescr_procedimento
	set	qt_procedimento = 1
	where	nr_sequencia = nr_seq_procedimento_w
	and	nr_prescricao = nr_prescricao_p;

end loop;
close C01;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescr_proc_quant (nr_prescricao_p bigint, cd_perfil_p bigint, nm_usuario_p text) FROM PUBLIC;

