-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_resultado_atend_hmj ( dt_inicial_p timestamp, dt_final_p timestamp, cd_convenio_p bigint, nr_seq_protocolo_p text, nr_atendimento_p bigint, nr_interno_conta_p bigint, cd_medico_p bigint, ie_quebra_p bigint, nm_usuario_p text, ie_tipo_atendimento_p bigint) AS $body$
DECLARE

					 
nr_atendimento_w			bigint;
nr_atendimento_ww			bigint;
nr_interno_conta_w			bigint;
ds_convenio_w			varchar(255);
cd_convenio_w			integer;
nm_medico_w			varchar(100);
cd_medico_w			varchar(10);
nr_seq_protocolo_w		bigint;
nr_protocolo_w			varchar(40);
nm_paciente_w			varchar(60);
cd_setor_atendimento_w		integer;
ds_setor_atendimento_w		varchar(100);
cd_estrutura_w			integer;
ds_estrutura_w			varchar(80);
dt_referencia_w			timestamp;
cd_item_w			bigint;
ds_item_w			varchar(255);
qt_resumo_w			double precision;
vl_imposto_w			double precision;
vl_unitario_w			double precision;
vl_receita_w			double precision;
vl_custo_unitario_w			double precision;
vl_custo_total_w			double precision;
vl_resultado_w			double precision;
vl_item_w				double precision;
ds_quebra_w			varchar(200);
cd_quebra_w			bigint;
nr_tabela_w			bigint := 0;
nr_interno_conta_ww		bigint;
nr_seq_protocolo_ww		bigint;
cd_convenio_ww			bigint;
cd_medico_ww			varchar(10);
ie_considera_data_w		varchar(1)	:= 'N';
ie_tipo_atendimento_ww		bigint;
ie_tipo_atendimento_w		bigint;
ie_status_protocolo_w		smallint;

C01 CURSOR FOR 
SELECT	nr_atendimento, 
	nr_interno_conta, 
	ds_convenio, 
	cd_convenio, 
	nm_medico, 
	cd_medico, 
	nr_seq_protocolo, 
	nr_protocolo, 
	nm_paciente, 
	cd_setor_atendimento, 
	ds_setor_atendimento,		 
	cd_estrutura, 
	ds_estrutura, 
	dt_referencia, 
	cd_item, 
	ds_item, 
	sum(coalesce(qt_resumo,0)), 
	sum(coalesce(vl_imposto,0)), 
	dividir(sum(coalesce(vl_receita,0)),sum(coalesce(qt_resumo,0))) vl_unitario, 
	sum(coalesce(vl_receita,0)), 
	0 vl_custo_unitario, 
	sum(coalesce(vl_custo,0)) vl_custo_total, 
	((sum(coalesce(vl_receita,0)) - sum(coalesce(vl_custo,0))) - sum(coalesce(vl_imposto,0))) vl_resultado, 
	sum(coalesce(vl_item,0)), 
	ie_tipo_atendimento, 
	ie_status_protocolo 
from	resumo_atendimentos_v 
where	1=1 
and	((ie_considera_data_w	= 'N') or (dt_referencia between dt_inicial_p and dt_final_p)) 
and	((obter_se_contido(nr_seq_protocolo, coalesce(nr_seq_protocolo_ww, nr_seq_protocolo)) = 'S') or (nr_seq_protocolo_ww = '0')) 
and	nr_atendimento	= coalesce(nr_atendimento_ww, nr_atendimento) 
and	nr_interno_conta 	= coalesce(nr_interno_conta_ww, nr_interno_conta) 
and	cd_convenio 	= coalesce(cd_convenio_ww, cd_convenio) 
and	cd_medico 	= coalesce(cd_medico_ww, cd_medico) 
and	ie_tipo_atendimento = coalesce(ie_tipo_atendimento_ww, ie_tipo_atendimento) 
group by 	ds_convenio, 
		nr_seq_protocolo, 
		nr_protocolo, 
		nm_medico, 
		nm_paciente, 
		cd_setor_atendimento, 
		ds_setor_atendimento,		 
		cd_estrutura, 
		ds_estrutura, 
		nr_atendimento, 
		nr_interno_conta, 
		dt_referencia, 
		cd_convenio, 
		cd_medico, 
		cd_item, 
		ds_item, 
		ie_tipo_atendimento, 
		ie_status_protocolo;					
 

BEGIN 
select	CASE WHEN nr_atendimento_p=0 THEN null  ELSE nr_atendimento_p END  nr_atendimento, 
	CASE WHEN nr_interno_conta_p=0 THEN null  ELSE nr_interno_conta_p END  nr_interno_conta, 
	CASE WHEN nr_seq_protocolo_p='' THEN '0'  ELSE nr_seq_protocolo_p END  nr_seq_protocolo, 
	CASE WHEN cd_convenio_p=0 THEN null  ELSE cd_convenio_p END  cd_convenio, 
	CASE WHEN cd_medico_p=0 THEN null  ELSE cd_medico_p END  cd_medico, 
	CASE WHEN ie_tipo_atendimento_p=0 THEN null  ELSE ie_tipo_atendimento_p END  ie_tipo_atendimento 
into STRICT	nr_atendimento_ww, 
	nr_interno_conta_ww, 
	nr_seq_protocolo_ww, 
	cd_convenio_ww, 
	cd_medico_ww, 
	ie_tipo_atendimento_ww
;
	 
if (nr_atendimento_w = 0) then 
	nr_atendimento_ww	:= null;
end if;
 
if (dt_inicial_p IS NOT NULL AND dt_inicial_p::text <> '') and (dt_final_p IS NOT NULL AND dt_final_p::text <> '') then 
	ie_considera_data_w	:= 'S';
end if;	
 
 
 
delete from w_resultado_atendimento 
where	nm_usuario = nm_usuario_p;
commit;								
open C01;
loop 
fetch C01 into	 
	nr_atendimento_w, 
	nr_interno_conta_w, 
	ds_convenio_w, 
	cd_convenio_w, 
	nm_medico_w, 
	cd_medico_w, 
	nr_seq_protocolo_w, 
	nr_protocolo_w, 
	nm_paciente_w, 
	cd_setor_atendimento_w, 
	ds_setor_atendimento_w, 
	cd_estrutura_w, 
	ds_estrutura_w, 
	dt_referencia_w, 
	cd_item_w, 
	ds_item_w, 
	qt_resumo_w, 
	vl_imposto_w, 
	vl_unitario_w, 
	vl_receita_w, 
	vl_custo_unitario_w, 
	vl_custo_total_w, 
	vl_resultado_w, 
	vl_item_w, 
	ie_tipo_atendimento_w, 
	ie_status_protocolo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	if (ie_quebra_p = 1) then 
		ds_quebra_w := substr(wheb_mensagem_pck.get_texto(311874,'NR_ATENDIMENTO=' || nr_atendimento_w || 
				';NM_PACIENTE=' || nm_paciente_w || 
				';DS_CONVENIO=' || ds_convenio_w),1,255);
		cd_quebra_w := nr_atendimento_w;
	elsif (ie_quebra_p = 2) then 
		ds_quebra_w := nr_interno_conta_w;
		cd_quebra_w := nr_interno_conta_w;
	elsif (ie_quebra_p = 3) then 
		ds_quebra_w := ds_convenio_w;
		cd_quebra_w := cd_convenio_w;
	elsif (ie_quebra_p = 4) then 
		ds_quebra_w := nm_medico_w;
		cd_quebra_w := cd_medico_w;
	elsif (ie_quebra_p = 5) then 
		ds_quebra_w := nr_protocolo_w;
		cd_quebra_w := nr_seq_protocolo_w;
	end if;
	 
	insert into w_resultado_atendimento( 
		ds_quebra, 
		cd_quebra, 
		nm_paciente, 
		cd_setor_atendimento, 
		ds_setor_atendimento, 
		cd_estrutura, 
		ds_estrutura, 
		dt_referencia, 
		cd_item, 
		ds_item, 
		qt_resumo, 
		vl_imposto, 
		vl_unitario, 
		vl_receita, 
		vl_custo, 
		vl_custo_total, 
		vl_resultado, 
		pr_resultado, 
		nm_usuario, 
		vl_item, 
		ie_tipo_atendimento, 
		ie_status_protocolo) 
	values (	ds_quebra_w, 
		cd_quebra_w, 
		nm_paciente_w, 
		cd_setor_atendimento_w, 
		ds_setor_atendimento_w, 
		cd_estrutura_w, 
		ds_estrutura_w, 
		dt_referencia_w, 
		cd_item_w, 
		ds_item_w, 
		qt_resumo_w, 
		vl_imposto_w, 
		vl_unitario_w, 
		vl_receita_w, 
		vl_custo_unitario_w, 
		vl_custo_total_w, 
		vl_resultado_w, 
		null, 
		nm_usuario_p, 
		vl_item_w, 
		ie_tipo_atendimento_w, 
		ie_status_protocolo_w);
	end;
end loop;
close C01;
 
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_resultado_atend_hmj ( dt_inicial_p timestamp, dt_final_p timestamp, cd_convenio_p bigint, nr_seq_protocolo_p text, nr_atendimento_p bigint, nr_interno_conta_p bigint, cd_medico_p bigint, ie_quebra_p bigint, nm_usuario_p text, ie_tipo_atendimento_p bigint) FROM PUBLIC;

