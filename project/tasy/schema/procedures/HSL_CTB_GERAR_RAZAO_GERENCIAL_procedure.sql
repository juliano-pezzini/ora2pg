-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hsl_ctb_gerar_razao_gerencial ( dt_inicial_p timestamp, dt_final_p timestamp, cd_estab_p bigint, cd_centro_custo_p text, cd_conta_contabil_p text, cd_classif_centro_p text, cd_classif_conta_p text, nm_usuario_p text, ie_opcao_p bigint, ie_tipo_resultado_p text, cd_conta_contabil_codigo_p text, ie_quebra_mes_p text, cd_empresa_p bigint, ie_consolida_empresa_p text) AS $body$
DECLARE


dt_movimento_w			timestamp;
cd_contrapartida_w			varchar(040);
cd_conta_contabil_w		varchar(040);
cd_centro_custo_w			integer;
ds_conta_w			varchar(255);
cd_classif_conta_w			varchar(40);
cd_classif_centro_w		varchar(40);
ds_historico_w			varchar(255);
ds_compl_historico_w		varchar(255);
ie_debito_credito_w			varchar(1);
cd_historico_w			bigint;
vl_credito_w			double precision;
vl_debito_w			double precision;
vl_movimento_w			double precision;
vl_saldo_w			double precision;
vl_movto_saldo_w			double precision;

ie_gerar_w			varchar(1);
ie_pos_w				bigint;
cd_classif_w			varchar(255);
cd_classif_ww			varchar(255);
nr_sequencia_w			bigint;
ie_movimento_w			varchar(01);
ie_deb_cred_w			varchar(01);

cd_clas_conta_w			varchar(255);
cd_clas_conta_ww			varchar(255);
cd_clas_centro_w			varchar(255);
cd_clas_centro_ww			varchar(255);
ie_tem_movimento_w		varchar(001);
nr_lote_contabil_w			bigint;
dt_referencia_w			timestamp;
cd_estabelecimento_w		smallint;
cd_estab_w			smallint;


c001 CURSOR FOR
	SELECT	CASE WHEN coalesce(ie_quebra_mes_p,'N')='S' THEN r.dt_referencia  ELSE to_date(null) END  dt_referencia,
		s.cd_conta_contabil,
		substr(c.cd_conta_contabil  || ' - ' || coalesce(s.cd_classificacao, c.cd_classificacao) || '  ' || c.ds_conta_contabil,1,255),
		s.cd_centro_custo,
		d.ie_debito_credito,
		sum(abs(vl_movimento)),
		sum(CASE WHEN r.dt_referencia=trunc(dt_final_p, 'month') THEN  vl_saldo  ELSE 0 END ),
		s.cd_estabelecimento
	from	ctb_grupo_conta d,
		conta_contabil c,
		ctb_saldo s,
		ctb_mes_ref r
	where	s.nr_seq_mes_ref		= r.nr_sequencia
	and	s.cd_conta_contabil	= c.cd_conta_contabil
	and	c.cd_grupo		= d.cd_grupo
	and	r.dt_referencia between trunc(dt_inicial_p, 'month')  and trunc(dt_final_p, 'month')
	and	c.ie_tipo		<> 'T'
	and	((d.ie_tipo in ('R','C','D') and coalesce(ie_tipo_resultado_p, 'S') = 'S') or (coalesce(ie_tipo_resultado_p, 'S') = 'N'))
	and	(s.cd_centro_custo IS NOT NULL AND s.cd_centro_custo::text <> '')
	and	r.cd_empresa	= cd_empresa_p
	and	((s.cd_estabelecimento	= cd_estab_w) or (cd_estab_w = 0))
	group by CASE WHEN coalesce(ie_quebra_mes_p,'N')='S' THEN r.dt_referencia  ELSE to_date(null) END ,
		s.cd_conta_contabil,
		substr(c.cd_conta_contabil  || ' - ' || coalesce(s.cd_classificacao, c.cd_classificacao) || '  ' || c.ds_conta_contabil,1,255),
		s.cd_centro_custo,
		d.ie_debito_credito,
		s.cd_estabelecimento
	order by CASE WHEN coalesce(ie_quebra_mes_p,'N')='S' THEN r.dt_referencia  ELSE to_date(null) END;

c002 CURSOR FOR
	SELECT	'M',
		a.dt_movimento,
		a.ds_historico,
		a.ie_debito_credito,
		a.ds_compl_historico,
		a.cd_contrapartida,
		a.cd_historico,
		CASE WHEN a.vl_credito=0 THEN 0  ELSE c.vl_movimento END  vl_credito,
		CASE WHEN a.vl_debito=0 THEN 0  ELSE c.vl_movimento END  vl_debito,
		c.vl_movimento,
		b.nr_lote_contabil
	from	ctb_movto_centro_custo c,
		lote_contabil b,
		ctb_movimento_v a
	where 	a.dt_movimento	between trunc(dt_inicial_p,'dd')  and trunc(dt_final_p,'dd') + 86399 / 86400
	and	a.cd_conta_contabil	= cd_conta_contabil_w
	and	c.cd_centro_custo		= cd_centro_custo_w
	and	a.nr_lote_contabil		= b.nr_lote_contabil
	and	(b.dt_atualizacao_saldo IS NOT NULL AND b.dt_atualizacao_saldo::text <> '')
	and	a.nr_sequencia		= c.nr_seq_movimento
	and	(((trunc(ctb_obter_mes_ref(a.nr_seq_mes_ref),'mm') = trunc(dt_referencia_w,'mm')) and coalesce(ie_quebra_mes_p,'N') = 'S')
		or (coalesce(ie_quebra_mes_p,'N') = 'N'))
	
union all

	SELECT	'S',
		clock_timestamp(),
		'Saldo Anterior',
		'', '', '', 0, 0, 0, 0, 0
	
	order by 1 desc, 2;


BEGIN

cd_estab_w	:= cd_estab_p;

if (coalesce(ie_consolida_empresa_p,'N') = 'S') then
	cd_estab_w	:= 0;
end if;
CALL exec_sql_dinamico(nm_usuario_p,'truncate table w_ctb_razao');

open  c001;
loop
	fetch c001 into
		dt_referencia_w,
		cd_conta_contabil_w,
		ds_conta_w,
		cd_centro_custo_w,
		ie_deb_cred_w,
		vl_movimento_w,
		vl_saldo_w,
		cd_estabelecimento_w;
	EXIT WHEN NOT FOUND; /* apply on c001 */
	ie_gerar_w	:= 'S';

	if (ie_gerar_w = 'S') and (coalesce(cd_centro_custo_p, '0') <> '0') then
		select	ctb_obter_se_centro_contido(cd_centro_custo_w, cd_centro_custo_p)
		into STRICT	ie_gerar_w
		;
	end if;
	if (ie_gerar_w = 'S') and (coalesce(cd_conta_contabil_p,'0')	<> '0') then
		select	ctb_obter_se_conta_contida(cd_conta_contabil_w, cd_conta_contabil_p)
		into STRICT	ie_gerar_w
		;
	end if;
	if (ie_gerar_w = 'S') and (coalesce(cd_conta_contabil_codigo_p,'0')	<> '0') then
		select	ctb_obter_se_conta_contida(cd_conta_contabil_w, cd_conta_contabil_codigo_p)
		into STRICT	ie_gerar_w
		;
	end if;

	if (ie_gerar_w = 'S') and (coalesce(cd_classif_centro_p,'0') <> '0')  then
		begin
		ie_gerar_w		:= 'N';
		cd_clas_centro_w	:= cd_classif_centro_p;
		cd_clas_centro_w	:= replace(cd_clas_centro_w,'(','');
		cd_clas_centro_w	:= replace(cd_clas_centro_w,')','');
		cd_clas_centro_w	:= replace(cd_clas_centro_w,' ','');
		while(ie_gerar_w = 'N') and (length(cd_clas_centro_w) > 0)  loop
			begin
			ie_pos_w 	:= position(',' in cd_clas_centro_w);
			if (ie_pos_w = 0) then
				cd_clas_centro_ww	:= cd_clas_centro_w;
				cd_clas_centro_w	:= '';
			else
				cd_clas_centro_ww	:= substr(cd_clas_centro_w,1, ie_pos_w - 1);
				cd_clas_centro_w	:= substr(cd_clas_centro_w, ie_pos_w + 1, 255);
			end if;
			select ctb_obter_se_centro_sup(cd_centro_custo_w, cd_clas_centro_ww)
			into STRICT	ie_gerar_w
			;
			end;
		end loop;
		end;
	end if;

	if (ie_gerar_w = 'S') and (coalesce(cd_classif_conta_p,'0') <> '0')  then
		begin
		ie_gerar_w	:= 'N';
		cd_clas_conta_w	:= cd_classif_conta_p;
		cd_clas_conta_w	:= replace(cd_clas_conta_w,'(','');
		cd_clas_conta_w	:= replace(cd_clas_conta_w,')','');
		cd_clas_conta_w	:= replace(cd_clas_conta_w,' ','');
		while(ie_gerar_w = 'N') and (length(cd_clas_conta_w) > 0)  loop
			begin
			ie_pos_w 	:= position(',' in cd_clas_conta_w);
			if (ie_pos_w = 0) then
				cd_clas_conta_ww	:= cd_clas_conta_w;
				cd_clas_conta_w		:= '';
			else
				cd_clas_conta_ww	:= substr(cd_clas_conta_w,1, ie_pos_w - 1);
				cd_clas_conta_w	:= substr(cd_clas_conta_w, ie_pos_w + 1, 255);
			end if;
			select ctb_obter_se_conta_classif_sup(cd_conta_contabil_w, cd_clas_conta_ww)
			into STRICT	ie_gerar_w
			;
			end;
		end loop;
		end;
	end if;

/*	opção marcus 16/06/2004
	1 - todas contas
	2 - com movimento
	3 - com saldo
*/
	if (ie_gerar_w	= 'S')  then
		if (ie_opcao_p = 2) and (vl_movimento_w = 0) then
			ie_gerar_w	:= 'N';
		elsif (ie_opcao_p = 3) and (vl_saldo_w = 0) then
			ie_gerar_w	:= 'N';
		end if;
	end if;


	if (ie_gerar_w	= 'S')  then
		begin

		select 	sum(coalesce((coalesce(s.vl_saldo,0) - coalesce(s.vl_movimento,0)),0))
		into STRICT	vl_saldo_w
		from	ctb_saldo s,
			ctb_mes_ref r
		where	s.nr_seq_mes_ref	= r.nr_sequencia
		and	r.dt_referencia		= trunc(dt_inicial_p, 'month')
		and	s.cd_conta_contabil	= cd_conta_contabil_w
		and	s.cd_centro_custo		= cd_centro_custo_w;

		if (to_char(dt_inicial_p,'dd') = '01') then
			vl_movto_saldo_w	:= 0;
		else
			select	sum(CASE WHEN ie_debito_credito=ie_deb_cred_w THEN  vl_movimento  ELSE vl_movimento * -1 END )
			into STRICT	vl_movto_saldo_w
			from	lote_contabil b,
				ctb_movimento_v a
			where 	a.dt_movimento	between trunc(dt_inicial_p,'month')
				and trunc(dt_inicial_p,'dd') - 1 / 86400
			and	a.cd_conta_contabil	= cd_conta_contabil_w
			and	a.nr_lote_contabil		= b.nr_lote_contabil
			and	(b.dt_atualizacao_saldo IS NOT NULL AND b.dt_atualizacao_saldo::text <> '');
		end if;

		vl_saldo_w				:= coalesce(vl_saldo_w,0) + coalesce(vl_movto_saldo_w,0);
		ie_tem_movimento_w			:= 'N';

		open  c002;
		loop
			fetch c002 into
				ie_movimento_w,
				dt_movimento_w,
				ds_historico_w,
				ie_debito_credito_w,
				ds_compl_historico_w,
				cd_contrapartida_w,
				cd_historico_w,
				vl_credito_w,
				vl_debito_w,
				vl_movimento_w,
				nr_lote_contabil_w;
			EXIT WHEN NOT FOUND; /* apply on c002 */
			begin

			if (ie_debito_credito_w <> ie_deb_cred_w) then
				vl_movimento_w	:= vl_movimento_w * -1;
			end if;

			select nextval('w_ctb_razao_seq')
			into STRICT	nr_sequencia_w
			;

			vl_saldo_w		:= coalesce(vl_saldo_w,0) + coalesce(vl_movimento_w,0);

			if (ie_movimento_w = 'S') then
				dt_movimento_w	:= null;
			end if;

			select	max(cd_classificacao)
			into STRICT	cd_classif_centro_w
			from	centro_custo
			where	cd_centro_custo	= cd_centro_custo_w;

			insert into w_ctb_razao(
				cd_estabelecimento,
				dt_movimento,
				cd_centro_custo,
				cd_conta_contabil,
				cd_contrapartida,
				cd_classif_conta,
				cd_classif_centro,
				cd_historico,
				ds_historico,
				ie_debito_credito,
				ds_compl_historico,
				ds_conta,
				vl_credito,
				vl_debito,
				vl_movimento,
				vl_saldo,
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_lote_contabil,
				dt_referencia)
			values (cd_estabelecimento_w,
				dt_movimento_w,
				cd_centro_custo_w,
				cd_conta_contabil_w,
				cd_contrapartida_w,
				'',
				cd_classif_centro_w,
				cd_historico_w,
				ds_historico_w,
				ie_debito_credito_w,
				ds_compl_historico_w,
				ds_conta_w,
				vl_credito_w,
				vl_debito_w,
				vl_movimento_w,
				vl_saldo_w,
				nr_sequencia_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_lote_contabil_w,
				dt_referencia_w);
			exception when others then
				RAISE NOTICE 'Erro';
			ie_tem_movimento_w	:= 'S';
			end;
		end loop;
		close c002;
		end;
	end if;
end loop;
close c001;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hsl_ctb_gerar_razao_gerencial ( dt_inicial_p timestamp, dt_final_p timestamp, cd_estab_p bigint, cd_centro_custo_p text, cd_conta_contabil_p text, cd_classif_centro_p text, cd_classif_conta_p text, nm_usuario_p text, ie_opcao_p bigint, ie_tipo_resultado_p text, cd_conta_contabil_codigo_p text, ie_quebra_mes_p text, cd_empresa_p bigint, ie_consolida_empresa_p text) FROM PUBLIC;

