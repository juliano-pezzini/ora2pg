-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE agrupar_itens_nf_pac_estrut ( nr_seq_nota_fiscal_p bigint, nr_interno_conta_p bigint, nr_seq_protocolo_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Identify the groups of each item by structure for the invoice of patient account
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_regra_w		bigint;

c_proc_conta CURSOR(nr_interno_conta_pc		bigint,
					nr_seq_protocolo_pc		bigint) FOR
SELECT	a.nr_sequencia,
		a.nr_interno_conta
from	procedimento_paciente a
where	a.nr_interno_conta	= nr_interno_conta_pc
and		coalesce(a.nr_seq_proc_pacote, a.nr_sequencia) = a.nr_sequencia
and		coalesce(nr_interno_conta_pc,0) > 0

union all

select	a.nr_sequencia,
		a.nr_interno_conta
from	procedimento_paciente a,
		conta_paciente cp
where	cp.nr_interno_conta	= a.nr_interno_conta
and		cp.nr_seq_protocolo	= nr_seq_protocolo_pc
and		coalesce(a.nr_seq_proc_pacote, a.nr_sequencia) = a.nr_sequencia
and		coalesce(nr_seq_protocolo_pc,0) > 0;

c_mat_conta CURSOR(nr_interno_conta_pc	bigint,
					nr_seq_protocolo_pc		bigint) FOR
SELECT	a.nr_sequencia,
		a.nr_interno_conta
from	material_atend_paciente a
where	a.nr_interno_conta	= nr_interno_conta_pc
and		coalesce(a.nr_seq_proc_pacote::text, '') = ''
and		coalesce(nr_interno_conta_pc,0) > 0

union all

select	a.nr_sequencia,
		a.nr_interno_conta
from	material_atend_paciente a,
		conta_paciente cp
where	cp.nr_interno_conta	= a.nr_interno_conta
and		cp.nr_seq_protocolo	= nr_seq_protocolo_pc
and		coalesce(a.nr_seq_proc_pacote::text, '') = ''
and		coalesce(nr_seq_protocolo_pc,0) > 0;
BEGIN
/* Group the items and total value by the structure rules */

for r_c_proc_conta in c_proc_conta(nr_interno_conta_p,nr_seq_protocolo_p) loop

	nr_seq_regra_w	:= obter_regra_conta_nf_item(r_c_proc_conta.nr_interno_conta,nr_seq_protocolo_p,r_c_proc_conta.nr_sequencia,null);

	/* Store the relation between the item, the invoice and rule to use after and mantain log*/

	insert into conta_pac_nf_item(nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nr_sequencia_nf,
		nr_seq_propaci,
		nr_seq_regra)
	values (nextval('conta_pac_nf_item_seq'),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nr_seq_nota_fiscal_p,
		r_c_proc_conta.nr_sequencia,
		nr_seq_regra_w);
end loop;

for r_c_mat_conta in c_mat_conta(nr_interno_conta_p,nr_seq_protocolo_p) loop
	nr_seq_regra_w	:= obter_regra_conta_nf_item(r_c_mat_conta.nr_interno_conta,nr_seq_protocolo_p,null,r_c_mat_conta.nr_sequencia);

	/* Store the relation between the item, the invoice and rule to use after and mantain log*/

	insert into conta_pac_nf_item(nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nr_sequencia_nf,
		nr_seq_matpaci,
		nr_seq_regra)
	values (nextval('conta_pac_nf_item_seq'),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nr_seq_nota_fiscal_p,
		r_c_mat_conta.nr_sequencia,
		nr_seq_regra_w);
end loop;

/* Comm it only in first procedure */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE agrupar_itens_nf_pac_estrut ( nr_seq_nota_fiscal_p bigint, nr_interno_conta_p bigint, nr_seq_protocolo_p bigint, nm_usuario_p text) FROM PUBLIC;

