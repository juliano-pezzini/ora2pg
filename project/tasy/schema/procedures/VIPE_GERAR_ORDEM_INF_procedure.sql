-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE vipe_gerar_ordem_inf (nr_prescricao_p bigint, nr_seq_regra_p bigint) AS $body$
DECLARE


nr_agrupamento_w		double precision;
nr_agrup_w			double precision;
nr_seq_grupo_w			bigint;
nr_sequencia_w			bigint;
cd_material_w			bigint;
ie_acm_sn_w			varchar(1);
ie_via_aplicacao_w		varchar(5);
cd_grupo_material_w		smallint;
cd_subgrupo_material_w		smallint;
cd_classe_material_w		integer;
nr_seq_apres_w			bigint := 9999;
ie_acm_sn_final_w		varchar(1);
qt_apres_w			bigint := 999;
qt_apresent_w			bigint := 9999;
ds_material_w			varchar(255);
nr_agrupados_w			bigint;
qt_materiais_w			numeric(20);
qt_cont_w			numeric(20) := 1;
ie_valida_w			varchar(1) := 'N';

c02 CURSOR FOR  --Agrupamentos da prescrição
SELECT	distinct nr_agrupamento
from	prescr_material
where	nr_prescricao = nr_prescricao_p
and	ie_agrupador = 1
order by nr_agrupamento;

c03 CURSOR FOR  --Materiais que não possuem itens compostos, ordenados pela descrição
SELECT	a.nr_sequencia,
	substr(obter_desc_material(a.cd_material),1,255) ds_material
from	prescr_material a
where	a.nr_prescricao = nr_prescricao_p
and	a.ie_agrupador = 1
and	a.nr_agrupamento > 999
and	not exists ( 	SELECT	1
			from	prescr_material b
			where	b.nr_prescricao = nr_prescricao_p
			and	b.ie_agrupador = 1
			and	b.nr_agrupamento = a.nr_agrupamento
			and	b.nr_sequencia <> a.nr_sequencia)
order by obter_desc_material(a.cd_material);

c04 CURSOR FOR  --Ajustar materiais que ficaram compostos incorretamente
SELECT	a.nr_sequencia
from	prescr_material a
where	a.nr_prescricao = nr_prescricao_p
and	a.ie_agrupador = 1
and	exists ( 	SELECT	1
			from	prescr_material b
			where	b.nr_prescricao  = nr_prescricao_p
			and	b.ie_agrupador 	 = 1
			and	b.nr_agrupamento = a.nr_agrupamento
			and	a.nr_sequencia	 > b.nr_sequencia
			and	b.nr_prescricao_anterior <> a.nr_prescricao_anterior);


BEGIN

select	coalesce(max(nr_sequencia),0)
into STRICT	nr_Seq_grupo_w
from	regra_ordem_grupo_rep
where	nr_seq_regra = nr_seq_regra_p
and	ie_grupo = 'M';

if (nr_seq_grupo_w > 0) then

	update	prescr_material -- Altera todos os agrupamentos para que não misture os novos valores com os velhos durante as alterações
	set	nr_agrupamento = nr_agrupamento + 100000
	where	nr_prescricao  = nr_prescricao_p
	and	ie_agrupador = 1;

	select	ie_acm_sn_final
	into STRICT	ie_acm_sn_final_w
	from	regra_ordem_grupo_rep
	where	nr_sequencia = nr_seq_grupo_w;

	open C02;
	loop
	fetch C02 into
		nr_agrupamento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		qt_apres_w := qt_apres_w + 1; -- Contador do agrupamento para os itens que não possuem regra de ordenação
		qt_apresent_w := qt_apresent_w + 1; -- Contador do agrupamento para os itens SN/ACM
		select	min(nr_Sequencia)
		into STRICT	nr_sequencia_w
		from	prescr_material
		where	nr_prescricao = nr_prescricao_p
		and	ie_agrupador  = 1
		and	nr_agrupamento = nr_agrupamento_w;

		select	cd_material,
			coalesce(obter_se_acm_sn(ie_acm,ie_se_necessario),'N'),
			coalesce(ie_via_aplicacao,'XXXX')
		into STRICT	cd_material_w,
			ie_acm_sn_w,
			ie_via_aplicacao_w
		from	prescr_material
		where	nr_prescricao  = nr_prescricao_p
		and	nr_sequencia   = nr_sequencia_w
		and	ie_agrupador   = 1
		and	nr_agrupamento = nr_agrupamento_w;

		select	coalesce(obter_estrutura_material(cd_material_w,'G'),0),
			coalesce(obter_estrutura_material(cd_material_w,'S'),0),
			coalesce(obter_estrutura_material(cd_material_w,'C'),0)
		into STRICT	cd_grupo_material_w,
			cd_subgrupo_material_w,
			cd_classe_material_w
		;

		if (ie_acm_sn_w = 'N') then
			select	coalesce(min(nr_seq_apres + qt_cont_w),qt_apres_w) -- Obtém a ordenação da regra, se tiver alguma
			into STRICT	nr_seq_apres_w
			from	regra_ordem_medic_rep
			where	nr_seq_grupo = nr_seq_grupo_w
			and	coalesce(cd_material, cd_material_w) = cd_material_w
			and	coalesce(cd_grupo_material, cd_grupo_material_w) = cd_grupo_material_w
			and	coalesce(cd_subgrupo_material, cd_subgrupo_material_w) = cd_subgrupo_material_w
			and	coalesce(cd_classe_material, cd_classe_material_w) = cd_classe_material_w
			and	coalesce(ie_via_aplicacao, ie_via_aplicacao_w) = ie_via_aplicacao_w
			and	((cd_material IS NOT NULL AND cd_material::text <> '') or (cd_grupo_material IS NOT NULL AND cd_grupo_material::text <> '') or (cd_subgrupo_material IS NOT NULL AND cd_subgrupo_material::text <> '') or (cd_classe_material IS NOT NULL AND cd_classe_material::text <> '') or (ie_via_aplicacao IS NOT NULL AND ie_via_aplicacao::text <> ''));

			qt_cont_w := qt_cont_w + 1; --Contador do agrupamento para os itens que possuem regra
		end if;

		if (ie_acm_sn_w = 'S') and (ie_acm_sn_final_w = 'S') then
			nr_seq_apres_w := qt_apresent_w;
		end if;

		select	coalesce(max('N'),'S') -- Verifica se o agrupamento já existe
		into STRICT	ie_valida_w
		from	prescr_material
		where	nr_agrupamento  = nr_seq_apres_w
		and	nr_prescricao   = nr_prescricao_p
		and	ie_agrupador 	= 1;

		while(ie_valida_w = 'N') loop -- Altera o agrupamento caso o mesmo já estiver sendo utilizado
			begin

			nr_seq_apres_w := nr_seq_apres_w + 1;

			select	coalesce(max('N'),'S')
			into STRICT	ie_valida_w
			from	prescr_material
			where	nr_agrupamento  = nr_seq_apres_w
			and	nr_prescricao   = nr_prescricao_p
			and	ie_agrupador 	= 1;

			end;
		end loop;

		update	prescr_material -- Altera o agrupamento
		set	nr_agrupamento = nr_seq_apres_w
		where	nr_agrupamento = nr_agrupamento_w
		and	nr_prescricao  = nr_prescricao_p
		and	ie_agrupador = 1;

		end;
	end loop;
	close C02;

	select	count(*)
	into STRICT	qt_materiais_w
	from	prescr_material
	where	nr_prescricao = nr_prescricao_p
	and	ie_agrupador = 1;

	if (qt_materiais_w > 0) then

		select	coalesce(min(nr_agrupamento),1) -- Pega o menor agrupamento entre os itens que não possuem composto
		into STRICT	nr_agrup_w
		from	prescr_material a
		where	a.nr_prescricao = nr_prescricao_p
		and	a.ie_agrupador = 1
		and	not exists ( 	SELECT	1
					from	prescr_material b
					where	b.nr_prescricao = nr_prescricao_p
					and	b.ie_agrupador = 1
					and	b.nr_agrupamento = a.nr_agrupamento
					and	b.nr_sequencia <> a.nr_sequencia);

		select	coalesce(max(nr_agrupamento),1) -- Pega o maior agrupamento entre os itens que possuem composto
		into STRICT	nr_agrupados_w
		from	prescr_material a
		where	a.nr_prescricao = nr_prescricao_p
		and	a.ie_agrupador = 1
		and	exists ( 	SELECT	1
					from	prescr_material b
					where	b.nr_prescricao = nr_prescricao_p
					and	b.ie_agrupador = 1
					and	b.nr_agrupamento = a.nr_agrupamento
					and	b.nr_sequencia <> a.nr_sequencia);
	end if;


	open C03; -- Cursor utilizado para ordenar por descrição os medicamentos que não possuem composto e nem regra de ordenação
	loop
	fetch C03 into
		nr_sequencia_w,
		ds_material_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		nr_agrup_w := nr_agrup_w + nr_agrupados_w;

		select	coalesce(max('N'),'S')  -- Verifica se o agrupamento já existe
		into STRICT	ie_valida_w
		from	prescr_material
		where	nr_agrupamento  = nr_agrup_w
		and	nr_prescricao   = nr_prescricao_p
		and	ie_agrupador 	= 1;

		while(ie_valida_w = 'N') loop  -- Altera o agrupamento caso o mesmo já estiver sendo utilizado
			begin

			nr_agrup_w := nr_agrup_w + 1;

			select	coalesce(max('N'),'S')
			into STRICT	ie_valida_w
			from	prescr_material
			where	nr_agrupamento  = nr_agrup_w
			and	nr_prescricao   = nr_prescricao_p
			and	ie_agrupador 	= 1;

			end;
		end loop;

		update  prescr_material -- Altera o agrupamento
		set	nr_agrupamento = nr_agrup_w
		where	nr_prescricao  = nr_prescricao_p
		and	nr_sequencia = nr_sequencia_w
		and	ie_agrupador = 1;

		end;
	end loop;
	close C03;

	nr_agrup_w := 0;

	open C02; -- Cursor aberto novamente apenas para alterar os números do agrupamento para a sequência (1,2,3,4...)
	loop
	fetch C02 into
		nr_agrupamento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		nr_agrup_w := nr_agrup_w + 1;

		update  prescr_material
		set	nr_agrupamento = nr_agrup_w
		where	nr_prescricao  = nr_prescricao_p
		and	nr_agrupamento = nr_Agrupamento_w
		and	ie_agrupador = 1;

		end;
	end loop;
	close C02;

	open C04;
	loop
	fetch C04 into
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin

		select	coalesce(max(nr_agrupamento),0) + 1
		into STRICT	nr_agrupamento_w
		from	prescr_material
		where	nr_prescricao  = nr_prescricao_p
		and	ie_agrupador = 1;

		update  prescr_material
		set	nr_agrupamento	= nr_agrupamento_w
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_sequencia_w;

		end;
	end loop;
	close C04;

	commit;

end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vipe_gerar_ordem_inf (nr_prescricao_p bigint, nr_seq_regra_p bigint) FROM PUBLIC;

