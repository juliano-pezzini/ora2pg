-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_analise_conta_manual (nr_seq_analise_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_w			bigint;
dt_referencia_w			timestamp;
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
nr_interno_conta_w		bigint;
ds_filtro_tipo_atend_w		varchar(4000);
ds_filtro_convenio_w		varchar(4000);
ds_filtro_medico_w		varchar(4000);
ds_filtro_proc_princ_w		varchar(4000);
ds_filtro_diagnostico_w		varchar(4000);
ds_filtro_setor_atendimento_w	varchar(4000);
ds_filtro_estrutura_conta_w	varchar(4000);
ds_filtro_procedimento_w	varchar(4000);
ds_filtro_proc_int_w		varchar(4000);
ds_filtro_carater_cirurgia_w	varchar(4000);
ie_inserir_w			varchar(10);
ie_existe_w			varchar(10);
qt_dias_inter_inicio_w		bigint;
qt_dias_inter_final_w		bigint;
qt_dias_internacao_w		bigint;
nr_atendimento_w		bigint;
ds_filtro_material_w		varchar(4000);
ds_filtro_atendimento_w		varchar(4000);
ie_pacote_w			ANALISE_CONTA.ie_pacote%type;
qt_pacote_w			bigint;
ie_filtro_tipo_atend_w		varchar(1);
ie_filtro_convenio_w		varchar(1);
ie_filtro_medico_w		varchar(1);
ie_filtro_diagnostico_w		varchar(1);
ie_FILTRO_SETOR_ATENDIMENTO_w	varchar(1);
ie_FILTRO_ESTRUTURA_CONTA_w	varchar(1);
ie_FILTRO_CARATER_CIRURGIA_w	varchar(1);

 
c01 CURSOR FOR 
	SELECT	a.nr_interno_conta, 
		b.nr_atendimento 
	from	atendimento_paciente b, 
		conta_paciente a 
	where	a.nr_atendimento	= b.nr_atendimento 
	and	((coalesce(ds_filtro_tipo_atend_w::text, '') = '') or 
		((ie_filtro_tipo_atend_w = '1') and (obter_se_contido(b.ie_tipo_atendimento, replace(ds_filtro_tipo_atend_w, chr(39), '')) = 'S')) or 
		((ie_filtro_tipo_atend_w = '2') and (not obter_se_contido(b.ie_tipo_atendimento, replace(ds_filtro_tipo_atend_w, chr(39), '')) = 'S'))) 
	and	((coalesce(ds_filtro_convenio_w::text, '') = '') or 
		((ie_filtro_convenio_w = '1') and (obter_se_contido(a.cd_convenio_parametro, replace(ds_filtro_convenio_w, chr(39), '')) = 'S')) or 
		((ie_filtro_convenio_w = '2') and (not obter_se_contido(a.cd_convenio_parametro, replace(ds_filtro_convenio_w, chr(39), '')) = 'S'))) 
	and	((coalesce(ds_filtro_diagnostico_w::text, '') = '') or 
		((ie_filtro_diagnostico_w = '1') and (obter_se_contido_char(substr(OBTER_CID_ATENDIMENTO(A.NR_ATENDIMENTO,'P'),1,10), replace(ds_filtro_diagnostico_w, chr(39), '')) = 'S')) or 
		((ie_filtro_diagnostico_w = '2') and (not obter_se_contido_char(substr(OBTER_CID_ATENDIMENTO(A.NR_ATENDIMENTO,'P'),1,10), replace(ds_filtro_diagnostico_w, chr(39), '')) = 'S'))) 
	and	((coalesce(ds_filtro_medico_w::text, '') = '') or 
		((ie_filtro_medico_w = '1') and (obter_se_contido(b.cd_medico_resp, replace(ds_filtro_medico_w, chr(39), '')) = 'S')) or 
		((ie_filtro_medico_w = '2') and (not obter_se_contido(b.cd_medico_resp, replace(ds_filtro_medico_w, chr(39), '')) = 'S')))		 
	and	((coalesce(ds_filtro_atendimento_w::text, '') = '') or (obter_se_contido(b.nr_atendimento, replace(ds_filtro_atendimento_w, chr(39), '')) = 'S')) 
	and	((coalesce(ds_filtro_proc_princ_w::text, '') = '') or (obter_se_contido(somente_numero(obter_proc_principal(a.nr_atendimento, a.cd_convenio_parametro,b.ie_tipo_atendimento, a.nr_interno_conta, 'C')), replace(ds_filtro_proc_princ_w, chr(39), '')) = 'S')) 
	and	((coalesce(dt_periodo_inicial_w::text, '') = '') or (a.dt_periodo_inicial >= dt_periodo_inicial_w) and (a.dt_periodo_final <= dt_periodo_final_w));
	

BEGIN 
 
select	coalesce(max(nr_sequencia),0), 
	max(dt_referencia), 
	max(dt_periodo_inicial), 
	max(dt_periodo_final), 
	max(ds_filtro_tipo_atend), 
	max(ds_filtro_convenio), 
	max(ds_filtro_medico), 
	max(ds_filtro_proc_princ), 
	max(ds_filtro_diagnostico), 
	max(DS_FILTRO_SETOR_ATENDIMENTO), 
	max(DS_FILTRO_ESTRUTURA_CONTA), 
	max(DS_FILTRO_CARATER_CIRURGIA), 
	max(QT_DIAS_INTER_INICIO), 
	max(QT_DIAS_INTER_FINAL), 
	max(ds_filtro_procedimento), 
	max(ds_filtro_proc_int), 
	max(ds_filtro_material), 
	max(ds_filtro_atendimento), 
	coalesce(Max(ie_pacote),'A') 
into STRICT	nr_seq_w, 
	dt_referencia_w, 
	dt_periodo_inicial_w, 
	dt_periodo_final_w, 
	ds_filtro_tipo_atend_w, 
	ds_filtro_convenio_w, 
	ds_filtro_medico_w, 
	ds_filtro_proc_princ_w, 
	ds_filtro_diagnostico_w, 
	DS_FILTRO_SETOR_ATENDIMENTO_w, 
	DS_FILTRO_ESTRUTURA_CONTA_w, 
	DS_FILTRO_CARATER_CIRURGIA_w, 
	QT_DIAS_INTER_INICIO_w, 
	QT_DIAS_INTER_FINAL_w, 
	ds_filtro_procedimento_w, 
	ds_filtro_proc_int_w, 
	ds_filtro_material_w, 
	ds_filtro_atendimento_w, 
	ie_pacote_w 
from	Analise_Conta 
where	nr_sequencia	= nr_seq_analise_p;
 
ds_filtro_tipo_atend_w			:= substr(converte_param_analise_conta(ds_filtro_tipo_atend_w),1,4000);
ds_filtro_convenio_w			:= substr(converte_param_analise_conta(ds_filtro_convenio_w),1,4000);
ds_filtro_medico_w			:= substr(converte_param_analise_conta(ds_filtro_medico_w),1,4000);
ds_filtro_proc_princ_w			:= substr(converte_param_analise_conta(ds_filtro_proc_princ_w),1,4000);
ds_filtro_diagnostico_w			:= substr(converte_param_analise_conta(ds_filtro_diagnostico_w),1,4000);
DS_FILTRO_SETOR_ATENDIMENTO_w		:= substr(converte_param_analise_conta(DS_FILTRO_SETOR_ATENDIMENTO_w),1,4000);
DS_FILTRO_ESTRUTURA_CONTA_w		:= substr(converte_param_analise_conta(DS_FILTRO_ESTRUTURA_CONTA_w),1,4000);
DS_FILTRO_CARATER_CIRURGIA_w		:= substr(converte_param_analise_conta(DS_FILTRO_CARATER_CIRURGIA_w),1,4000);
ds_filtro_procedimento_w		:= substr(converte_param_analise_conta(ds_filtro_procedimento_w),1,4000);
ds_filtro_proc_int_w			:= substr(converte_param_analise_conta(ds_filtro_proc_int_w),1,4000);
ds_filtro_material_w			:= substr(converte_param_analise_conta(ds_filtro_material_w),1,4000);
 
--tipo de atendimento 
if (ds_filtro_tipo_atend_w like '%!%') then 
	begin 
	ie_filtro_tipo_atend_w := '2';
	ds_filtro_tipo_atend_w := replace(ds_filtro_tipo_atend_w,'!','');
	end;
else	 
	begin 
	ie_filtro_tipo_atend_w := '1';
	end;
end if;
 
--Convênio 
if (ds_filtro_convenio_w like '%!%') then 
	begin 
	ie_filtro_convenio_w := '2';
	ds_filtro_convenio_w := replace(ds_filtro_convenio_w,'!','');
	end;
else	 
	begin 
	ie_filtro_convenio_w := '1';
	end;
end if;
 
--Médico 
if (ds_filtro_medico_w like '%!%') then 
	begin 
	ie_filtro_medico_w := '2';
	ds_filtro_medico_w := replace(ds_filtro_medico_w,'!','');
	end;
else	 
	begin 
	ie_filtro_medico_w := '1';
	end;
end if;
 
--Diagnóstico 
if (ds_filtro_diagnostico_w like '%!%') then 
	begin 
	ie_filtro_diagnostico_w := '2';
	ds_filtro_diagnostico_w := replace(ds_filtro_diagnostico_w,'!','');
	end;
else	 
	begin 
	ie_filtro_diagnostico_w := '1';
	end;
end if;
 
--Setor Atendimento 
if (ds_filtro_setor_atendimento_w like '%!%') then 
	begin 
	ie_filtro_setor_atendimento_w := '2';
	ds_filtro_setor_atendimento_w := replace(ds_filtro_setor_atendimento_w,'!','');
	end;
else	 
	begin 
	ie_filtro_setor_atendimento_w := '1';
	end;
end if;
 
--Estrutura Conta 
if (ds_filtro_estrutura_conta_w like '%!%') then 
	begin 
	ie_filtro_estrutura_conta_w := '2';
	ds_filtro_estrutura_conta_w := replace(ds_filtro_estrutura_conta_w,'!','');
	end;
else	 
	begin 
	ie_filtro_estrutura_conta_w := '1';
	end;
end if;
 
--Caráter Cirurgia 
if (ds_filtro_carater_cirurgia_w like '%!%') then 
	begin 
	ie_filtro_carater_cirurgia_w := '2';
	ds_filtro_carater_cirurgia_w := replace(ds_filtro_carater_cirurgia_w,'!','');
	end;
else	 
	begin 
	ie_filtro_carater_cirurgia_w := '1';
	end;
end if;
 
if (coalesce(dt_referencia_w::text, '') = '') and (coalesce(dt_periodo_inicial_w::text, '') = '') then 
	--'A data de referência ou o período inicial/final deve estar informado. 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(225119);
	 
	 
end if;
 
 
if (nr_seq_w	<> 0) then 
 
	delete	from conta_analise 
	where	nr_sequencia	= nr_seq_analise_p;
 
	open C01;
	loop 
	fetch 	C01 into	 
		nr_interno_conta_w, 
		nr_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		ie_existe_w	:= 'S';
		 
		 
		if (DS_FILTRO_SETOR_ATENDIMENTO_w IS NOT NULL AND DS_FILTRO_SETOR_ATENDIMENTO_w::text <> '') then 
			begin 
			select	'S' 
			into STRICT	ie_existe_w 
			 
			where	(((ie_filtro_setor_atendimento_w = '1') and exists (	SELECT	1 
												from	conta_paciente_resumo a 
												where	a.nr_interno_conta	= nr_interno_conta_w 
												and	obter_Se_contido(a.cd_setor_Atendimento, 
												replace(DS_FILTRO_SETOR_ATENDIMENTO_w,chr(39),''))= 'S')) or 
				((ie_filtro_setor_atendimento_w = '2') and not exists (	select	1 
												from	conta_paciente_resumo a 
												where	a.nr_interno_conta	= nr_interno_conta_w 
												and	obter_Se_contido(a.cd_setor_Atendimento, 
												replace(DS_FILTRO_SETOR_ATENDIMENTO_w,chr(39),''))= 'S')));
			exception 
			when others then 
				ie_existe_w	:= 'N';
				goto Final;
			end;
		end if;
		if (DS_FILTRO_ESTRUTURA_CONTA_w IS NOT NULL AND DS_FILTRO_ESTRUTURA_CONTA_w::text <> '') then 
			begin 
			select	'S' 
			into STRICT	ie_existe_w 
			 
			where	(((ie_filtro_estrutura_conta_w = '1') and exists (	SELECT	1 
												from	conta_paciente_resumo a 
												where	a.nr_interno_conta	= nr_interno_conta_w 
												and	obter_Se_contido(a.cd_estrutura_conta, 
									replace(DS_FILTRO_ESTRUTURA_CONTA_w,chr(39),''))= 'S')) or 
				((ie_filtro_estrutura_conta_w = '2') and not exists (	select	1 
												from	conta_paciente_resumo a 
												where	a.nr_interno_conta	= nr_interno_conta_w 
												and	obter_Se_contido(a.cd_estrutura_conta, 
									replace(DS_FILTRO_ESTRUTURA_CONTA_w,chr(39),''))= 'S')));
			exception 
			when others then 
				ie_existe_w	:= 'N';
				goto Final;
			end;
		end if;
		if (DS_FILTRO_CARATER_CIRURGIA_w IS NOT NULL AND DS_FILTRO_CARATER_CIRURGIA_w::text <> '') then 
			begin 
			select	'S' 
			into STRICT	ie_existe_w 
			 
			where	(((ie_filtro_carater_cirurgia_w = '1') and exists (	SELECT	1 
												from	conta_paciente_resumo a, 
													cirurgia b 
												where	a.nr_interno_conta	= nr_interno_conta_w 
												and	b.nr_cirurgia		= a.nr_cirugia 
												and	obter_Se_contido(B.IE_CARATER_CIRURGIA, 
													replace(DS_FILTRO_CARATER_CIRURGIA_w,chr(39),''))= 'S')) or 
				((ie_filtro_carater_cirurgia_w = '2') and not exists (	select	1 
												from	conta_paciente_resumo a, 
													cirurgia b 
												where	a.nr_interno_conta	= nr_interno_conta_w 
												and	b.nr_cirurgia		= a.nr_cirugia 
												and	obter_Se_contido(B.IE_CARATER_CIRURGIA, 
													replace(DS_FILTRO_CARATER_CIRURGIA_w,chr(39),''))= 'S')));
			exception 
			when others then 
				ie_existe_w	:= 'N';
				goto Final;
			end;
		end if;
		 
		 
		if (QT_DIAS_INTER_FINAL_w IS NOT NULL AND QT_DIAS_INTER_FINAL_w::text <> '') or (QT_DIAS_INTER_INICIO_w IS NOT NULL AND QT_DIAS_INTER_INICIO_w::text <> '') then 
			begin 
			qt_dias_internacao_w:= obter_dias_internacao(obter_atendimento_conta(nr_interno_conta_w));
			select	'S' 
			into STRICT	ie_existe_w 
			 
			where	qt_dias_internacao_w	between coalesce(QT_DIAS_INTER_INICIO_w,qt_dias_internacao_w) 
							and coalesce(QT_DIAS_INTER_FINAL_w,qt_dias_internacao_w);
			exception 
			when others then 
				ie_existe_w	:= 'N';
				goto Final;
				 
			end;
		end if;
		 
		if (ds_filtro_atendimento_w IS NOT NULL AND ds_filtro_atendimento_w::text <> '') then 
			begin 
			select	'S' 
			into STRICT	ie_existe_w 
			 
			where	exists (	SELECT	1 
						from	conta_paciente_resumo a, 
							conta_paciente b 
						where	a.nr_interno_conta = b.nr_interno_conta 
						and	a.nr_interno_conta	= nr_interno_conta_w 
						and	obter_Se_contido(b.nr_atendimento, 
									replace(ds_filtro_atendimento_w,chr(39),''))= 'S');
			exception 
			when others then 
				ie_existe_w	:= 'N';
				goto Final;
			end;
			 
		end if;
		 
		if (coalesce(ie_pacote_w,'A') = 'S') then 
			 
			select 	count(*) 
			into STRICT 	qt_pacote_w 
			from	atendimento_pacote x 
			where 	x.nr_seq_proc_origem in (SELECT y.nr_sequencia 
							from 	procedimento_paciente y 
							where 	y.nr_interno_conta = nr_interno_conta_w)  LIMIT 1;
			 
			if (qt_pacote_w > 0) then	 
				ie_existe_w := 'S';
			else 
				ie_existe_w := 'N';
				goto Final;
			end if;
		end if;	
 
		if (coalesce(ie_pacote_w,'A') = 'N') then 
		 
			select 	count(*) 
			into STRICT 	qt_pacote_w 
			from	atendimento_pacote x 
			where 	x.nr_seq_proc_origem in (SELECT y.nr_sequencia 
							 from 	procedimento_paciente y 
							 where y.nr_interno_conta = nr_interno_conta_w)  LIMIT 1;
			 
			if (qt_pacote_w > 0) then	 
				ie_existe_w := 'N';
				goto Final;
			else 
				ie_existe_w := 'S';
			end if;
		end if;		
		 
		if (ds_filtro_procedimento_w IS NOT NULL AND ds_filtro_procedimento_w::text <> '') then 
			ie_existe_w:= analise_Obter_Se_Conta_proced(nr_interno_conta_w,ds_filtro_procedimento_w);
		end if;
		 
		if (ds_filtro_material_w IS NOT NULL AND ds_filtro_material_w::text <> '') then 
			ie_existe_w:= Analise_Obter_Se_Conta_Mat(nr_interno_conta_w,ds_filtro_material_w);
		end if;
		 
		if (ds_filtro_proc_int_w IS NOT NULL AND ds_filtro_proc_int_w::text <> '') then 
			ie_existe_w:= analise_Obter_Se_Conta_procint(nr_interno_conta_w,ds_filtro_proc_int_w);
		end if;
		 
 
		 
		<<Final>> 
		 
		if (ie_existe_w	= 'S' ) then 
			insert	into conta_analise(nr_sequencia, 
				nr_interno_conta, 
				dt_atualizacao, 
				nm_usuario, 
				nr_atend_conta) 
			values (nr_seq_analise_p, 
				nr_interno_conta_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_atendimento_w);	
			 
		end if;
 
		 
		end;
	end loop;
	close C01;
	 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_analise_conta_manual (nr_seq_analise_p bigint, nm_usuario_p text) FROM PUBLIC;

