-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_quant_gedipa ( cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, cd_local_estoque_p bigint, cd_material_p bigint, qt_unitaria_p bigint, cd_unidade_medida_p text, nr_prescricao_p bigint, nr_sequencia_p bigint, qt_lanca_conta_p INOUT bigint, qt_baixa_estoque_p INOUT bigint) AS $body$
DECLARE


qt_unitaria_w			double precision 	:= 0;
qt_lanca_conta_w		double precision 	:= 0;
qt_baixa_estoque_w		double precision 	:= 0;
qt_material_w			double precision	:= 0;
qt_multiplo_w			double precision	:= 0;
nr_multiplo_w			double precision	:= 0;
cd_setor_atendimento_w		integer	:= 0;
nr_atendimento_w		bigint	:= 0;
qt_conversao_w			double precision	:= 0;
ie_lanca_conta_w		varchar(1);
ie_baixa_estoque_w		varchar(1);
cd_unid_med_w			varchar(30);
ie_regra_conta_w		varchar(1);
ie_regra_estoque_w		varchar(1);
nr_seq_regra_w			bigint;
cd_grupo_material_w		smallint;
cd_subgrupo_w			smallint;
cd_classe_material_w		integer;
cd_material_w			integer;
nr_seq_familia_w		bigint;

C01 CURSOR FOR
	SELECT	ie_lanca_conta,
		ie_baixa_estoque,
		nr_sequencia
	from	regra_disp_gedipa
	where	cd_estabelecimento					= cd_estabelecimento_p
	and	coalesce(cd_setor_atendimento,cd_setor_atendimento_p)	= cd_setor_atendimento_p
	and	coalesce(cd_local_estoque,cd_local_estoque_p)		= cd_local_estoque_p
	and	clock_timestamp() between dt_inicio_validade and coalesce(dt_fim_validade,clock_timestamp())
	order by
		coalesce(cd_setor_atendimento,0),
		coalesce(cd_local_estoque,0),
		dt_inicio_validade;

C02 CURSOR FOR
	SELECT	ie_regra_conta,
		ie_regra_estoque
	from	regra_disp_gedipa_item
	where	nr_seq_regra	= nr_seq_regra_w
	and	((coalesce(cd_unidade_medida::text, '') = '') or
		 ((ie_unidade_medida = '1') and (coalesce(cd_unid_med_w,cd_unidade_medida) = cd_unidade_medida)) or
                 ((ie_unidade_medida = '2') and (coalesce(cd_unidade_medida_p,cd_unidade_medida) = cd_unidade_medida)))
	and	coalesce(cd_grupo_material, cd_grupo_material_w)		= cd_grupo_material_w
	and	coalesce(cd_subgrupo_material, cd_subgrupo_w)		= cd_subgrupo_w
	and	coalesce(cd_classe_material, cd_classe_material_w)		= cd_classe_material_w
	and	coalesce(cd_material, cd_material_p)				= cd_material_p
	and	coalesce(nr_seq_familia, coalesce(nr_seq_familia_w,0))		= coalesce(nr_seq_familia_w,0)
	order by coalesce(ie_unidade_medida,'A'),
		coalesce(cd_material,0),
		coalesce(cd_classe_material,0),
		coalesce(cd_subgrupo_material,0),
		coalesce(cd_grupo_material,0),
		coalesce(nr_seq_familia_w,0),
		coalesce(cd_unidade_medida,'ZZZZZ') desc;


BEGIN

select	coalesce(qt_minimo_multiplo_solic,1),
	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo
into STRICT	qt_multiplo_w,
	cd_unid_med_w
from	Material
where	cd_material	= cd_material_p;

select	nr_atendimento,
	cd_setor_atendimento
into STRICT	nr_atendimento_w,
	cd_setor_atendimento_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

OPEN c01;
Loop
Fetch c01 into
	ie_lanca_conta_w,
	ie_baixa_estoque_w,
	nr_seq_regra_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	ie_lanca_conta_w	:= ie_lanca_conta_w;
	ie_baixa_estoque_w	:= ie_baixa_estoque_w;
	nr_seq_regra_w		:= nr_seq_regra_w;
END LOOP;
CLOSE C01;

select	cd_grupo_material,
	cd_subgrupo_material,
	cd_classe_material,
	nr_seq_familia
into STRICT	cd_grupo_material_w,
	cd_subgrupo_w,
	cd_classe_material_w,
	nr_seq_familia_w
from	estrutura_material_v
where 	cd_material	= cd_material_p;


open C02;
loop
fetch C02 into
	ie_regra_conta_w,
	ie_regra_estoque_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	ie_regra_conta_w	:= ie_regra_conta_w;
	ie_regra_estoque_w	:= ie_regra_estoque_w;
	end;
end loop;
close C02;

ie_lanca_conta_w		:= coalesce(ie_lanca_conta_w,'N');
ie_baixa_estoque_w		:= coalesce(ie_baixa_estoque_w,'N');
ie_regra_conta_w		:= coalesce(ie_regra_conta_w,'C');
ie_regra_estoque_w		:= coalesce(ie_regra_estoque_w,'C');


if (ie_lanca_conta_w = 'S') then
	begin
	if (ie_regra_conta_w = 'M') then
		qt_lanca_conta_w	:= qt_unitaria_p;
	elsif (ie_regra_conta_w = 'S') then
		begin
		if (trunc(qt_unitaria_p,0) = qt_unitaria_p) then
			qt_lanca_conta_w	:= qt_unitaria_p;
		else
			qt_lanca_conta_w	:= trunc(qt_unitaria_p,0) + 1;
		end if;
		end;
	else
		begin
		if	((trunc(qt_unitaria_p / qt_multiplo_w) * qt_multiplo_w) = qt_unitaria_p) then
			nr_multiplo_w	:= (qt_unitaria_p / qt_multiplo_w);
		else
			nr_multiplo_w   := trunc(qt_unitaria_p / qt_multiplo_w) + 1;
		end if;
		qt_lanca_conta_w	:= qt_multiplo_w * nr_multiplo_w;
		end;
	end if;
	end;
end if;

if (ie_baixa_estoque_w = 'S') then
	begin
	if (ie_regra_estoque_w = 'M') then
		qt_baixa_estoque_w	:= qt_unitaria_p;
	elsif (ie_regra_estoque_w = 'S') then
		begin
		if (trunc(qt_unitaria_p,0) = qt_unitaria_p) then
			qt_baixa_estoque_w	:= qt_unitaria_p;
		else
			qt_baixa_estoque_w	:= trunc(qt_unitaria_p,0) + 1;
		end if;
		end;
	else
		begin
		if	((trunc(qt_unitaria_p / qt_multiplo_w) * qt_multiplo_w) = qt_unitaria_p) then
			nr_multiplo_w	:= (qt_unitaria_p / qt_multiplo_w);
		else
			nr_multiplo_w   := trunc(qt_unitaria_p / qt_multiplo_w) + 1;
		end if;
		qt_baixa_estoque_w	:= qt_multiplo_w * nr_multiplo_w;
		end;
	end if;
	end;
end if;

qt_lanca_conta_p	:= qt_lanca_conta_w;
qt_baixa_estoque_p	:= qt_baixa_estoque_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_quant_gedipa ( cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, cd_local_estoque_p bigint, cd_material_p bigint, qt_unitaria_p bigint, cd_unidade_medida_p text, nr_prescricao_p bigint, nr_sequencia_p bigint, qt_lanca_conta_p INOUT bigint, qt_baixa_estoque_p INOUT bigint) FROM PUBLIC;

