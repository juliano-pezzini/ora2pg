-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_gerar_os_servico_etapa ( nr_seq_etapa_p bigint, nr_seq_localizacao_p bigint, nr_seq_equipamento_p bigint, nm_usuario_p text, ds_dano_breve_p text, ds_dano_p text, nr_ordem_servico_p INOUT bigint) AS $body$
DECLARE


nr_sequencia_w			bigint;
nr_seq_gerencia_w		bigint;
nm_usuario_exec_w		varchar(15) := '';
qt_existe_w				bigint;
ie_terceiro_w			varchar(1);
cd_funcao_w				integer;
cd_pessoa_solicitante_w	varchar(10);


BEGIN

	select	max(cd_pessoa_fisica)
	into STRICT 	cd_pessoa_solicitante_w
	from	usuario
	where nm_usuario = nm_usuario_p;

	select	nextval('man_ordem_servico_seq')
	into STRICT	nr_sequencia_w
	;

	select	max(cd_funcao)
	into STRICT	cd_funcao_w
	from	proj_cron_etapa
	where	nr_sequencia = nr_seq_etapa_p;

	select	max(nm_usuario)
	into STRICT	nm_usuario_exec_w
	from	funcao_grupo_des
	where	cd_funcao = cd_funcao_w;

	if (coalesce(nm_usuario_exec_w::text, '') = '') then
		nm_usuario_exec_w := nm_usuario_p;
	end if;

        insert into man_ordem_servico(
            cd_pessoa_solicitante,
            nr_seq_localizacao,
            nr_seq_equipamento,
            ds_dano_breve,
            ds_dano,
			cd_funcao,
            dt_atualizacao,
            dt_ordem_servico,
            ie_classificacao,
            ie_classificacao_cliente,
            ie_origem_os,
            ie_parado,
            ie_prioridade,
            ie_status_ordem,
            ie_tipo_ordem,
            nm_usuario,
            nr_sequencia,
            dt_atualizacao_nrec,
            nm_usuario_nrec,
            dt_inicio_desejado)
        values ( cd_pessoa_solicitante_w,
			nr_seq_localizacao_p,
            nr_seq_equipamento_p,
            ds_dano_breve_p,
            ds_dano_p,
			cd_funcao_w,
            clock_timestamp(),
            clock_timestamp(),
            'S',
            'S',
            '1',
            'N',
            'M',
            '1',
            1,
            nm_usuario_p,
            nr_sequencia_w,
            clock_timestamp(),
            nm_usuario_p,
            clock_timestamp());

		CALL man_proj_vincular_etapa_ordem(nr_seq_etapa_p, nr_sequencia_w, nm_usuario_p);

		select	count(*)
		into STRICT	qt_existe_w
		from	man_ordem_servico_exec
		where	nr_seq_ordem	= nr_sequencia_w
		and	nm_usuario_exec	= nm_usuario_exec_w;

		if (qt_existe_w = 0) then
			insert into man_ordem_servico_exec(
					nr_sequencia,
					nr_seq_ordem,
					dt_atualizacao,
					nm_usuario,
					nm_usuario_exec,
					qt_min_prev,
					dt_recebimento,
					nr_seq_funcao,
					nr_seq_tipo_exec)
				values (	nextval('man_ordem_servico_exec_seq'),
					nr_sequencia_w,
					clock_timestamp(),
					'Tasy',
					nm_usuario_exec_w,
					10,
					clock_timestamp(),
					null,
					3);
		end if;

		commit;

		nr_ordem_servico_p := nr_sequencia_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_gerar_os_servico_etapa ( nr_seq_etapa_p bigint, nr_seq_localizacao_p bigint, nr_seq_equipamento_p bigint, nm_usuario_p text, ds_dano_breve_p text, ds_dano_p text, nr_ordem_servico_p INOUT bigint) FROM PUBLIC;

