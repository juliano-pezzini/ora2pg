-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_devolucao_lote_fornec ( nr_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
dt_entrada_unidade_w		timestamp;
cd_setor_atendimento_w		integer;
nr_devolucao_w			bigint;
cd_pessoa_fisica_devol_w		varchar(10);			
nr_prescricao_w			bigint;
cd_material_w			bigint;
qt_material_w			double precision;
nr_seq_lote_fornec_w		bigint;
dt_atendimento_w			timestamp;
cd_unidade_medida_w		varchar(30);
nr_sequencia_prescricao_w		integer;
nr_sequencia_w			bigint;
cd_local_estoque_w		smallint;
qt_mat_w				double precision;
ds_retorno_w			varchar(4000);
nr_seq_mat_atend_pac_w		bigint;

--cursor 4 
nr_seq_item_w			bigint;
qt_mat_baixa_w			double precision;
cd_local_estoque_baixa_w	smallint;
dt_recebimento_w		timestamp;

--baixa devolução 
ie_consiste_devolucao_w		varchar(1);
cd_tipo_baixa_w			varchar(5);
cd_estabelecimento_w		smallint;
ie_baixa_auto_w			varchar(1);
			
C01 CURSOR FOR 
	SELECT	distinct 
		to_date(obter_data_internacao(nr_atendimento),'dd/mm/yyyy hh24:mi:ss') dt_entrada_unidade, 
		substr(obter_unidade_atendimento(nr_atendimento,'P', 'CS'),1,60) cd_setor_atendimento, 
		obter_pessoa_atendimento(nr_atendimento,'C') cd_pessoa_fisica_devol 
	from  	w_devolucao_material 
	where	nr_atendimento = nr_atendimento_p 
	group by nr_atendimento;

C02 CURSOR FOR 
	SELECT	cd_material, 
		nr_seq_lote_fornec, 
		nr_seq_mat_atend_pac 
	from	w_devolucao_material 
	where	nr_atendimento = nr_atendimento_p 
	group by cd_material, 
		nr_seq_lote_fornec, 
		nr_seq_mat_atend_pac;

c03 CURSOR FOR 
	SELECT	a.dt_atendimento, 
		a.cd_unidade_medida, 
		a.nr_sequencia_prescricao, 
		a.nr_sequencia, 
		a.cd_local_estoque, 
		a.qt_material, 
		a.nr_prescricao 
	from	material_atend_paciente a 
	where 	a.nr_atendimento = nr_atendimento_p 
	and	a.cd_material = cd_material_w 
	and	a.nr_seq_lote_fornec = nr_seq_lote_fornec_w 
	and	a.nr_sequencia = nr_seq_mat_atend_pac_w;

C04 CURSOR FOR 
	SELECT	nr_sequencia, 
		qt_material, 
		cd_local_estoque, 
		dt_recebimento 
	from	item_devolucao_material_pac 
	where	nr_devolucao = nr_devolucao_w;


BEGIN 
cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
 
ie_consiste_devolucao_w := obter_param_usuario(42, 18, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consiste_devolucao_w);
cd_tipo_baixa_w := obter_param_usuario(42, 22, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, cd_tipo_baixa_w);
ie_baixa_auto_w := obter_param_usuario(42, 84, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_baixa_auto_w);
 
open C01;
loop 
fetch C01 into	 
	dt_entrada_unidade_w, 
	cd_setor_atendimento_w, 
	cd_pessoa_fisica_devol_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	select	nextval('devolucao_material_pac_seq') 
	into STRICT	nr_devolucao_w 
	;
	 
	insert 	into	devolucao_material_pac( 
			nr_devolucao, 
			nr_atendimento, 
			dt_entrada_unidade, 
			dt_devolucao, 
			cd_pessoa_fisica_devol, 
			cd_setor_atendimento, 
			nm_usuario_devol, 
			dt_atualizacao, 
			nm_usuario_baixa, 
			dt_liberacao_baixa, 
			dt_baixa_total, 
			nm_usuario, 
			dt_impressao, 
			dt_entrega_fisica) 
	values (nr_devolucao_w, 
			nr_atendimento_p, 
			dt_entrada_unidade_w, 
			clock_timestamp(), 
			cd_pessoa_fisica_devol_w, 
			cd_setor_atendimento_w, 
			nm_usuario_p, 
			clock_timestamp(), 
			null, 
			null, 
			null, 
			nm_usuario_p, 
			null, 
			null);
		end;
 
	open C02;
	loop 
	fetch C02 into	 
		cd_material_w, 
		nr_seq_lote_fornec_w, 
		nr_seq_mat_atend_pac_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		open C03;
		loop 
		fetch C03 into	 
			dt_atendimento_w, 
			cd_unidade_medida_w, 
			nr_sequencia_prescricao_w, 
			nr_sequencia_w, 
			cd_local_estoque_w, 
			qt_mat_w, 
			nr_prescricao_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin 
			select	coalesce(max(nr_sequencia),0) + 1 
			into STRICT	nr_sequencia_w 
			from	item_devolucao_material_pac 
			where	nr_devolucao = nr_devolucao_w;
 
			insert into ITEM_DEVOLUCAO_MATERIAL_PAC( 
				nr_devolucao, 
				nr_sequencia, 
				cd_material, 
				dt_atendimento, 
				cd_local_estoque, 
				cd_unidade_medida, 
				cd_motivo_devolucao, 
				dt_atualizacao, 
				nm_usuario_devol, 
				qt_material, 
				nr_prescricao, 
				nr_sequencia_prescricao, 
				ie_tipo_baixa_estoque, 
				dt_entrada_unidade, 
				nm_usuario, 
				nr_seq_lote_fornec, 
				nr_seq_atendimento) 
			values (	nr_devolucao_w, 
				nr_sequencia_w, 
				cd_material_w, 
				dt_atendimento_w, 
				cd_local_estoque_w, 
				cd_unidade_medida_w, 
				1, 
				clock_timestamp(), 
				nm_usuario_p, 
				qt_mat_w, 
				nr_prescricao_w, 
				nr_sequencia_prescricao_w, 
				0, 
				dt_entrada_unidade_w, 
				nm_usuario_p, 
				nr_seq_lote_fornec_w, 
				nr_seq_mat_atend_pac_w);
			end;
		end loop;
		close C03;
	 
		end;
	end loop;
	close C02;	
		 
end loop;
close C01;	
 
delete from w_devolucao_material;
 
-- Tratamento para gerar a baixa da devolução 
if (coalesce(ie_baixa_auto_w,'N') = 'S') then 
		 
	if (coalesce(ie_consiste_devolucao_w,'N') = 'S') then 
		consistir_devolucao_material(nr_devolucao_w,cd_estabelecimento_w,nm_usuario_p, ds_retorno_w);
	end if;
 
	if (coalesce(ds_retorno_w,'') <> '') then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(265993);
	else 
 
		update	devolucao_material_pac 
		set	dt_liberacao_baixa = clock_timestamp(), 
			nm_usuario_devol = nm_usuario_p 
		where	nr_devolucao = nr_devolucao_w;
 
		open C04;
		loop 
		fetch C04 into	 
			nr_seq_item_w, 
			qt_mat_baixa_w, 
			cd_local_estoque_baixa_w, 
			dt_recebimento_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin 
 
			if (coalesce(dt_recebimento_w::text, '') = '') then 
			 
				CALL baixa_devolucao_med(	nr_devolucao_w, 
							nr_seq_item_w, 
							nm_usuario_p, 
							cd_tipo_baixa_w, 
							qt_mat_baixa_w, 
							cd_pessoa_fisica_devol_w, 
							cd_local_estoque_baixa_w, 
							'B', 
							cd_estabelecimento_w);
			end if;
 
			end;
		end loop;
		close C04;
 
		update	devolucao_material_pac 
		set	dt_baixa_total = clock_timestamp(), 
			nm_usuario_baixa = nm_usuario_p 
		where	nr_devolucao = nr_devolucao_w;
 
	end if;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_devolucao_lote_fornec ( nr_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

