-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_aplicar_reajuste_item_tab ( cd_tabela_servico_p bigint, vl_reajuste_p bigint, dt_inicio_vigencia_p timestamp, dt_inicio_servico_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, vl_servico_p bigint, ds_observacao_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_tipo_tabela_p bigint, vl_anestesista_p bigint, vl_auxiliares_p bigint, vl_custo_operacional_p bigint, vl_filme_p bigint, vl_medico_p bigint) AS $body$
DECLARE


cd_estabelecimento_w		smallint;
cd_tabela_servico_w		smallint;
cd_procedimento_w		bigint;
dt_inicio_vigencia_w		timestamp;
vl_servico_w			double precision;
vl_reajustado_w			double precision;
ie_origem_proced_w		bigint;
nr_seq_log_w			bigint;
vl_anestesista_reajustado_w	double precision;
vl_auxiliares_reajustado_w	double precision;
vl_custo_operacional_reaj_w	double precision;
vl_filme_reajustado_w		double precision;
vl_medico_reajustado_w		double precision;
vl_procedimento_reajustado_w	double precision;
ie_tipo_tabela_w		smallint;


BEGIN

select	coalesce(ie_tipo_tabela_p, 1)
into STRICT	ie_tipo_tabela_w
;

if ( ie_tipo_tabela_w = 1 ) then
	vl_reajustado_w	:= vl_servico_p + ((vl_servico_p * vl_reajuste_p) / 100);

	insert 	into preco_servico(	cd_estabelecimento, cd_tabela_servico, cd_procedimento,
					dt_inicio_vigencia, vl_servico, cd_moeda,
					dt_atualizacao, nm_usuario, ie_origem_proced,
					cd_unidade_medida, dt_atualizacao_nrec, nm_usuario_nrec,
					dt_inativacao, dt_vigencia_final)
                                (	SELECT	cd_estabelecimento, cd_tabela_servico, cd_procedimento,
						dt_inicio_vigencia_p, vl_reajustado_w, cd_moeda,
						clock_timestamp(), nm_usuario_p, ie_origem_proced,
						cd_unidade_medida, clock_timestamp(), nm_usuario_p,
						null, null
					from	preco_servico
					where	cd_estabelecimento	= cd_estabelecimento_p
					and	cd_tabela_servico	= cd_tabela_servico_p
					and	cd_procedimento		= cd_procedimento_p
					and	to_date(dt_inicio_vigencia,'dd/mm/yy')	= to_date(dt_inicio_servico_p,'dd/mm/yy')
					and	coalesce(dt_vigencia_final::text, '') = ''
					and	ie_origem_proced	= ie_origem_proced_p);

	update	preco_servico
	set	dt_vigencia_final		= (dt_inicio_vigencia_p -1)
	where	cd_estabelecimento		= cd_estabelecimento_p
	and	cd_tabela_servico		= cd_tabela_servico_p
	and	cd_procedimento			= cd_procedimento_p
	and	ie_origem_proced		= ie_origem_proced_p
	and	dt_inicio_vigencia		= dt_inicio_servico_p;

	select	nextval('tabela_servico_log_seq')
	into STRICT	nr_seq_log_w
	;

	insert into	tabela_servico_log(	nr_sequencia,cd_tabela_servico, cd_estabelecimento, dt_atualizacao,
				nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				dt_log, ds_log )
	values		(	nr_seq_log_w, cd_tabela_servico_p, cd_estabelecimento_p, clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				clock_timestamp(),'Aplicação de ajuste de preço de '||(vl_reajuste_p)||' %  Observação : '||ds_observacao_p);
	commit;
elsif ( ie_tipo_tabela_w = 2 ) then

	vl_anestesista_reajustado_w		:= vl_anestesista_p + ((vl_anestesista_p * vl_reajuste_p) / 100);
	vl_auxiliares_reajustado_w		:= vl_auxiliares_p + ((vl_auxiliares_p * vl_reajuste_p) / 100);
	vl_custo_operacional_reaj_w		:= vl_custo_operacional_p + ((vl_custo_operacional_p * vl_reajuste_p) / 100);
	vl_filme_reajustado_w			:= vl_filme_p + ((vl_filme_p * vl_reajuste_p) / 100);
	vl_medico_reajustado_w			:= vl_medico_p + ((vl_medico_p * vl_reajuste_p) / 100);
	vl_procedimento_reajustado_w		:= vl_servico_p + ((vl_servico_p * vl_reajuste_p) / 100);

	insert 	into preco_tuss(	cd_edicao_amb, cd_moeda, cd_porte_cbhpm,
			cd_procedimento, dt_atualizacao, dt_atualizacao_nrec,
			dt_final_vigencia, dt_inicio_vigencia, ie_origem_proced,
			ie_situacao, nm_usuario, nm_usuario_nrec,
			nr_auxiliares_amb, nr_auxiliares_cbhpm, nr_porte_anest_amb,
			nr_porte_anest_cbhpm, nr_sequencia, qt_filme_amb,
			qt_filme_cbhpm, qt_incidencia_amb, qt_incidencia_cbhpm,
			qt_uco, tx_porte, vl_anestesista,
			vl_auxiliares, vl_custo_operacional, vl_filme,
			vl_medico, vl_procedimento)
			(	SELECT	cd_edicao_amb, cd_moeda, cd_porte_cbhpm,
			cd_procedimento, clock_timestamp(), clock_timestamp(),
				dt_final_vigencia, dt_inicio_vigencia_p, ie_origem_proced,
				ie_situacao, nm_usuario_p, nm_usuario_p,
				nr_auxiliares_amb, nr_auxiliares_cbhpm, nr_porte_anest_amb,
				nr_porte_anest_cbhpm, nextval('preco_tuss_seq'), qt_filme_amb,
				qt_filme_cbhpm, qt_incidencia_amb, qt_incidencia_cbhpm,
				qt_uco, tx_porte, vl_anestesista_reajustado_w,
				vl_auxiliares_reajustado_w, vl_custo_operacional_reaj_w, vl_filme_reajustado_w,
				vl_medico_reajustado_w, vl_procedimento_reajustado_w
			from	preco_tuss
			where	cd_edicao_amb		= cd_tabela_servico_p
			and	cd_procedimento		= cd_procedimento_p
			and	to_char(dt_inicio_vigencia,'dd/mm/yyyy') = to_char(dt_inicio_servico_p,'dd/mm/yyyy')
			and	coalesce(dt_final_vigencia::text, '') = ''
			and	ie_origem_proced	= ie_origem_proced_p );

	update	preco_tuss
	set	dt_final_vigencia	= (dt_inicio_vigencia_p -1)
	where	cd_edicao_amb		= cd_tabela_servico_p
	and	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p
	and	dt_inicio_vigencia	< dt_inicio_vigencia_p;
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_aplicar_reajuste_item_tab ( cd_tabela_servico_p bigint, vl_reajuste_p bigint, dt_inicio_vigencia_p timestamp, dt_inicio_servico_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, vl_servico_p bigint, ds_observacao_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_tipo_tabela_p bigint, vl_anestesista_p bigint, vl_auxiliares_p bigint, vl_custo_operacional_p bigint, vl_filme_p bigint, vl_medico_p bigint) FROM PUBLIC;

