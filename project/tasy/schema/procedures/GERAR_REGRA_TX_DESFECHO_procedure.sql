-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_regra_tx_desfecho ( nr_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
cd_material_w			bigint;
cd_grupo_material_w		smallint;
cd_subgrupo_material_w		smallint;
cd_classe_material_w		integer;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
ie_aplicou_regra_w		varchar(1);
qt_mat_regra_w			bigint;
nr_sequencia_w			bigint;
ie_tipo_atendimento_w		smallint;
cd_estabelecimento_w		smallint;
dt_entrada_w			timestamp;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
dt_entrada_unidade_w		timestamp;
cd_setor_atendimento_w		bigint;
nr_seq_atepacu_w		bigint;
qt_min_desfecho_w		bigint;
dt_desfecho_w			timestamp;
qt_taxa_desfecho_w		bigint;	
nr_seq_proc_interno_w		bigint;

C01 CURSOR FOR 
	SELECT	cd_material, 
		cd_grupo_material, 
		cd_subgrupo_material, 
		cd_classe_material, 
		cd_procedimento, 
		ie_origem_proced, 
		nr_seq_proc_interno 
	from	conv_regra_tx_desfecho 
	where	coalesce(qt_min_desfecho_w,0) between qt_min_inicial and qt_min_final 
	and	coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0) 
	and	coalesce(ie_tipo_atendimento, coalesce(ie_tipo_atendimento_w,0)) = coalesce(ie_tipo_atendimento_w,0) 
	and	cd_estabelecimento = cd_estabelecimento_w 
	and	cd_convenio = cd_convenio_w 
	and	ie_situacao = 'A' 
	order by	coalesce(cd_setor_atendimento,0), 
			coalesce(ie_tipo_atendimento,0), 
		coalesce(cd_classe_material,0), 
		coalesce(cd_subgrupo_material,0), 
		coalesce(cd_grupo_material,0), 
		coalesce(cd_material,0);
			

BEGIN 
 
ie_aplicou_regra_w	:= 'N';
dt_desfecho_w		:= clock_timestamp();
 
select	count(*) 
into STRICT	qt_taxa_desfecho_w 
from	procedimento_paciente 
where	nr_atendimento = nr_atendimento_p 
and	nr_seq_cor_exec = 4382;
 
if (coalesce(nr_atendimento_p,0) > 0) and (coalesce(qt_taxa_desfecho_w,0) = 0) then 
 
	select	max(ie_tipo_atendimento), 
		max(cd_estabelecimento), 
		max(dt_entrada) 
	into STRICT	ie_tipo_atendimento_w, 
		cd_estabelecimento_w, 
		dt_entrada_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_p;
	 
	select	max(cd_convenio), 
		max(cd_categoria) 
	into STRICT	cd_convenio_w, 
		cd_categoria_w 
	from	atend_categoria_convenio 
	where	nr_atendimento = nr_atendimento_p 
	and	nr_seq_interno = obter_atecaco_atendimento(nr_atendimento_p);
	 
	select	max(dt_entrada_unidade), 
		max(cd_setor_atendimento), 
		max(nr_seq_interno) 
	into STRICT	dt_entrada_unidade_w, 
		cd_setor_atendimento_w, 
		nr_seq_atepacu_w 
	from	atend_paciente_unidade 
	where	nr_atendimento = nr_atendimento_p 
	and	nr_seq_interno = obter_atepacu_paciente(nr_atendimento_p, 'A');
	 
	qt_min_desfecho_w	:= trunc((dt_desfecho_w - dt_entrada_w) * 1440);
 
	open C01;
	loop 
	fetch C01 into	 
		cd_material_w, 
		cd_grupo_material_w, 
		cd_subgrupo_material_w, 
		cd_classe_material_w, 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		nr_seq_proc_interno_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		if (ie_aplicou_regra_w = 'N') then 
		 
			select	count(*) 
			into STRICT	qt_mat_regra_w 
			from	material_atend_paciente a, 
				estrutura_material_v b 
			where	a.cd_material = b.cd_material 
			and	a.nr_atendimento = nr_atendimento_p 
			and	coalesce(cd_material_w, b.cd_material) = b.cd_material 
			and	coalesce(cd_grupo_material_w, b.cd_grupo_material) = b.cd_grupo_material 
			and	coalesce(cd_subgrupo_material_w, b.cd_subgrupo_material) = b.cd_subgrupo_material 
			and	coalesce(cd_classe_material_w, b.cd_classe_material) = b.cd_classe_material 
			and	coalesce(a.cd_motivo_exc_conta::text, '') = '';
			 
			if (qt_mat_regra_w > 0) then 
				ie_aplicou_regra_w	:= 'S';
 
				if (nr_seq_proc_interno_w > 0) then 
 
					SELECT * FROM obter_proc_tab_interno(nr_seq_proc_interno_w, null, nr_atendimento_p, null, cd_procedimento_w, ie_origem_proced_w, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
 
				end if;
				 
				select	nextval('procedimento_paciente_seq') 
				into STRICT	nr_sequencia_w 
				;
 
				insert into procedimento_paciente(	nr_sequencia, nr_atendimento, dt_entrada_unidade, cd_procedimento, 
						dt_procedimento, qt_procedimento, dt_atualizacao, nm_usuario, cd_convenio, 
						cd_categoria, vl_procedimento, vl_medico, vl_anestesista, vl_materiais, 
						dt_acerto_conta, vl_auxiliares, vl_custo_operacional, tx_medico, 
						tx_anestesia, dt_conta, cd_setor_atendimento,	 
						ie_origem_proced, nr_seq_atepacu, ie_auditoria, ds_observacao, nr_seq_cor_exec, 
						nr_seq_proc_interno) 
				values (	nr_sequencia_w, nr_atendimento_p, dt_entrada_unidade_w,	cd_procedimento_w, 
						dt_desfecho_w, 1, clock_timestamp(), nm_usuario_p, cd_convenio_w, 
						cd_categoria_w, 0, 0, 0, 0, 
						null, 0, 0, 0, 
						0, dt_desfecho_w, cd_setor_atendimento_w, 
						ie_origem_proced_w, nr_seq_atepacu_w, 'N', Wheb_mensagem_pck.get_texto(798791) , 4382, 
						nr_seq_proc_interno_w);												
 
				CALL Atualiza_Preco_Procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);
			end if;
		 
		end if;
		 
		end;
	end loop;
	close C01;
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_regra_tx_desfecho ( nr_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

