-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function gerar_evento_sepse as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE gerar_evento_sepse ( nr_atendimento_p bigint, nr_seq_evento_p INOUT bigint, nr_seq_escala_p bigint, nm_usuario_p text) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'SELECT * FROM gerar_evento_sepse_atx ( ' || quote_nullable(nr_atendimento_p) || ',' || quote_nullable(nr_seq_evento_p) || ',' || quote_nullable(nr_seq_escala_p) || ',' || quote_nullable(nm_usuario_p) || ' )';
	SELECT v_ret INTO nr_seq_evento_p FROM dblink(v_conn_str, v_query) AS p (v_ret bigint);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE gerar_evento_sepse_atx ( nr_atendimento_p bigint, nr_seq_evento_p INOUT bigint, nr_seq_escala_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w			bigint;
cd_setor_atendimento_w	bigint;
cd_estabelecimento_w	bigint;
nr_seq_evento_w			bigint;
ie_status_sepsis_w		varchar(3);
dt_liberacao_status_w	timestamp;
nm_usuario_status_w		varchar(15);
ds_evento_w				varchar(4000);
ds_status_w				varchar(255);
ds_atributo_w			varchar(4000);
ds_atributo2_w			varchar(4000);
ie_tipo_sepse_w         varchar(1);

C01 CURSOR FOR
	SELECT	substr(obter_desc_atributo_sepse(nr_seq_atributo),1,255)
	from	escala_sepse_item
	where	nr_seq_escala = nr_seq_escala_p
	and		ie_resultado = 'S'
	and     coalesce(ie_tipo_sepse_w,'A') <> 'P'
	
union

	SELECT	substr(obter_desc_atributo_sepse(nr_seq_atributo),1,255)
	from	escala_sepse_infantil_item
	where	nr_seq_escala = nr_seq_escala_p
	and		ie_resultado = 'S'
	and     ie_tipo_sepse_w = 'P';
BEGIN

select	max(obter_setor_atendimento(nr_atendimento_p))
into STRICT	cd_setor_atendimento_w
;

cd_estabelecimento_w	:= obter_estabelecimento_ativo;

select	max(coalesce(nr_seq_evento_sepse,0))
into STRICT	nr_seq_evento_w
from	parametro_medico
where	cd_estabelecimento = cd_estabelecimento_w;

if (nr_seq_evento_w > 0) and (cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '') then
	
	ie_tipo_sepse_w := coalesce(obter_se_sepse_liberada(nr_atendimento_p),'A');
	
	if (ie_tipo_sepse_w = 'P') then
		select	max(ie_status_sepsis),
				max(dt_liberacao_status),
				max(nm_usuario_status)
		into STRICT	ie_status_sepsis_w,
				dt_liberacao_status_w,
				nm_usuario_status_w
		from	escala_sepse_infantil
		where	nr_sequencia = nr_seq_escala_p;
	else
		select	max(ie_status_sepsis),
				max(dt_liberacao_status),
				max(nm_usuario_status)
		into STRICT	ie_status_sepsis_w,
				dt_liberacao_status_w,
				nm_usuario_status_w
		from	escala_sepse
		where	nr_sequencia = nr_seq_escala_p;
	end if;
	
	select 	max(substr(obter_valor_dominio(7056,ie_status_sepsis_w),1,255))
	into STRICT	ds_status_w
	;
	
	open C01;
	loop
	fetch C01 into	
		ds_atributo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (coalesce(ds_atributo2_w::text, '') = '') then
			ds_atributo2_w := ds_atributo_w;
		else
			ds_atributo2_w := ds_atributo2_w || ',' || chr(13) || ds_atributo_w;
		end if;
		end;
	end loop;
	close C01;
	
	ds_evento_w := 	Wheb_mensagem_pck.get_texto(295882,'ds_status_w='||ds_status_w||';dt_liberacao_status_w='||dt_liberacao_status_w||';nm_usuario_status_w='||nm_usuario_status_w||';ds_atributo2_w='||ds_atributo2_w);

     select nextval('qua_evento_paciente_seq')
     into STRICT	  nr_sequencia_w
;

	insert into qua_evento_paciente(	nr_sequencia,
										cd_estabelecimento,
										dt_atualizacao,
										nm_usuario,
										nr_seq_evento,
										dt_evento,
										ds_evento,
										cd_setor_atendimento,
										dt_cadastro,
										nm_usuario_reg,
										ie_situacao,
										cd_pessoa_fisica,
										nr_atendimento,
										nm_usuario_origem,
										ie_status,
										ie_origem,
										ie_tipo_evento,
										nm_usuario_nrec,
										cd_funcao_ativa)
					values (				nr_sequencia_w,
										cd_estabelecimento_w,
										clock_timestamp(),
										nm_usuario_p,
										nr_seq_evento_w,
										clock_timestamp(),
										ds_evento_w,
										cd_setor_atendimento_w,
										clock_timestamp(),
										nm_usuario_p,
										'A',
										obter_pessoa_atendimento(nr_atendimento_p,'C'),
										nr_atendimento_p,
										nm_usuario_p,
										'1',
										'S',
										'E',
										nm_usuario_p,
										obter_funcao_ativa);
end if;

commit;

nr_seq_evento_p := nr_sequencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_evento_sepse ( nr_atendimento_p bigint, nr_seq_evento_p INOUT bigint, nr_seq_escala_p bigint, nm_usuario_p text) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE gerar_evento_sepse_atx ( nr_atendimento_p bigint, nr_seq_evento_p INOUT bigint, nr_seq_escala_p bigint, nm_usuario_p text) FROM PUBLIC;

