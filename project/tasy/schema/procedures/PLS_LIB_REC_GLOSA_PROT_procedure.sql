-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_lib_rec_glosa_prot ( nr_seq_rec_glosa_prot_p pls_rec_glosa_protocolo.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


cont_w				integer;
vl_total_acatado_w		double precision;
ie_status_w			pls_rec_glosa_protocolo.ie_status%type;
dt_competencia_w		pls_rec_glosa_protocolo.dt_competencia_lote%type;
ie_funcao_pagamento_w		pls_parametro_pagamento.ie_funcao_pagamento%type;
ie_gerar_val_adic_w		pls_parametros_rec_glosa.ie_gerar_val_adic%type;


BEGIN
select	coalesce(max(ie_gerar_val_adic), 'L')
into STRICT	ie_gerar_val_adic_w
from	pls_parametros_rec_glosa
where	cd_estabelecimento = cd_estabelecimento_p;

select	max(dt_competencia_lote)
into STRICT	dt_competencia_w
from	pls_rec_glosa_protocolo
where	nr_sequencia = nr_seq_rec_glosa_prot_p;

select	count(1)
into STRICT	cont_w
from	pls_rec_glosa_conta
where	nr_seq_protocolo = nr_seq_rec_glosa_prot_p
and	coalesce(ie_status, '1') = '1';

if (cont_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(288598); -- Existem contas em análise neste lote de recurso! Não é possível liberá-lo para pagamento.
end if;

-- verifica qual a função de pagamento médico
select	coalesce(max(ie_funcao_pagamento), '1')
into STRICT	ie_funcao_pagamento_w
from	pls_parametro_pagamento
where	cd_estabelecimento  = cd_estabelecimento_p;

-- se for a função OPS - Pagamentos de produção médica.
-- feito em dois ifs apenas por causa da base wheb, para alimentar sempre os dois campos, desta forma
-- é possível fazer o teste tanto em uma quanto em outra função
if (ie_funcao_pagamento_w = '1') or (obter_se_base_wheb = 'S') then

	CALL pls_atualizar_evento_rec_glosa(nr_seq_rec_glosa_prot_p, cd_estabelecimento_p, nm_usuario_p);
end if;

vl_total_acatado_w := pls_obter_vl_rec_aca(	nr_seq_rec_glosa_prot_p, 'VLA');

-- se não tiver valor acatado então o status é Encerrado sem pagamento
if (vl_total_acatado_w = 0) then

	ie_status_w := '4';
else
	ie_status_w := '3';
end if;

update	pls_rec_glosa_protocolo
set	ie_status = ie_status_w,
	nm_usuario = nm_usuario_p,
	dt_atualizacao = clock_timestamp(),
	dt_liberacao_pag = clock_timestamp()
where	nr_sequencia = nr_seq_rec_glosa_prot_p;

-- Atualizar evento para pagamento
CALL pls_pp_cta_event_rgl_combinada(	null, nr_seq_rec_glosa_prot_p, null, cd_estabelecimento_p, nm_usuario_p);

-- Gera os valores adicionais
if (ie_gerar_val_adic_w = 'L') then
	CALL pls_gerar_val_adic_rec_glosa( nr_seq_rec_glosa_prot_p, null, cd_estabelecimento_p, nm_usuario_p);
end if;

update	pls_conta_rec_resumo_item
set	dt_competencia_pgto = dt_competencia_w
where	nr_seq_conta_rec in (	SELECT	nr_sequencia
				from	pls_rec_glosa_conta
				where	nr_seq_protocolo = nr_seq_rec_glosa_prot_p);

-- Gera o log da ação
CALL pls_gerar_log_rec_glosa( 'LP', null, null, nm_usuario_p, null, nr_seq_rec_glosa_prot_p, null);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_lib_rec_glosa_prot ( nr_seq_rec_glosa_prot_p pls_rec_glosa_protocolo.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

