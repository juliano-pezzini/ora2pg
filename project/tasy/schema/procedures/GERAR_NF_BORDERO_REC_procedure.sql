-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nf_bordero_rec ( nr_bordero_p bigint, cd_operacao_nf_p bigint, cd_natureza_operacao_p bigint, cd_condicao_pagamento_p bigint, cd_serie_nf_p text, cd_cgc_emitente_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, ds_observacao_p text, dt_emissao_p timestamp, dt_vencimento_p timestamp) AS $body$
DECLARE



nr_nota_fiscal_w    	serie_nota_fiscal.nr_ultima_nf%type;
ie_tipo_nota_w			nota_fiscal.ie_tipo_nota%type;
cd_estab_nota_fiscal_w 	serie_nota_fiscal.cd_estabelecimento%type;
ie_tipo_conta_w			smallint := 2;
cd_conta_contabil_w		varchar(20);
cd_centro_custo_w		bigint;
cd_convenio_w			convenio.cd_convenio%type;
ie_origem_proced_w		nota_fiscal_item.ie_origem_proced%type;
nm_usuario_w			nota_fiscal_item.nm_usuario%type;
cd_operacao_estoque_w	operacao_nota.cd_operacao_estoque%type;
cd_cgc_estab_w			estabelecimento.cd_cgc%type;
nr_sequencia_nf_w		nota_fiscal.nr_sequencia_nf%type;
nr_seq_nf_w				nota_fiscal.nr_sequencia%type;
vl_saldo_w				titulo_receber.vl_saldo_titulo%type;

c01 CURSOR FOR
SELECT 	nr_titulo
from 	bordero_tit_rec
where 	nr_bordero = nr_bordero_p;


BEGIN
ie_tipo_nota_w			:= 'SE';
nm_usuario_w 			:= wheb_usuario_pck.get_nm_usuario;
cd_centro_custo_w		:= null;

begin
select	a.cd_estabelecimento,
		sum((obter_saldo_titulo_receber(b.nr_titulo,clock_timestamp()))::numeric ) vl_saldo
into STRICT	cd_estab_nota_fiscal_w,
		vl_saldo_w
from	bordero_recebimento a,
		bordero_tit_rec	b
where	b.nr_bordero = a.nr_bordero
and		a.nr_bordero = nr_bordero_p
group by a.cd_estabelecimento;
exception
when others then
	cd_estab_nota_fiscal_w := wheb_usuario_pck.get_cd_estabelecimento;
	vl_saldo_w := 0;
end;

select	nr_ultima_nf + 1
into STRICT	nr_nota_fiscal_w
from	serie_nota_fiscal
where	cd_serie_nf 		= cd_serie_nf_p
and		cd_estabelecimento 	= cd_estab_nota_fiscal_w;

select 	coalesce(cd_operacao_estoque,0)
into STRICT	cd_operacao_estoque_w
from 	operacao_nota
where	cd_operacao_nf = cd_operacao_nf_p;

select coalesce(max(cd_convenio), 0)
into STRICT cd_convenio_w
from convenio
where cd_cgc = cd_cgc_emitente_p;

select 	cd_cgc
into STRICT	cd_cgc_estab_w
from 	estabelecimento
where 	cd_estabelecimento = cd_estab_nota_fiscal_w;

select 	coalesce(max(nr_sequencia_nf),0)+1
into STRICT	nr_sequencia_nf_w
from 	nota_fiscal
where	nr_nota_fiscal 		= nr_nota_fiscal_w
and		cd_estabelecimento 	= cd_estab_nota_fiscal_w
and		cd_serie_nf 		= cd_serie_nf_p
and		cd_cgc_emitente		= cd_cgc_emitente_p;

SELECT * FROM Define_Conta_Procedimento(cd_estab_nota_fiscal_w, cd_procedimento_p, ie_origem_proced_p, ie_tipo_conta_w, null, null, null, null, null, cd_convenio_w, null, clock_timestamp(), cd_conta_contabil_w, cd_centro_custo_w, null, 'N', null, null, null, cd_operacao_estoque_w) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;

select 	nextval('nota_fiscal_seq')
into STRICT	nr_seq_nf_w
;

insert into nota_fiscal(
		nr_sequencia,
		nr_nota_fiscal,
		nr_sequencia_nf,
		ie_acao_nf,
		ie_emissao_nf,
		ie_tipo_frete,
		vl_mercadoria,
		vl_total_nota,
		cd_serie_nf,
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_operacao_nf,
		dt_emissao,
		dt_entrada_saida,
		cd_condicao_pagamento,
		ds_observacao,
		cd_natureza_operacao,
		ie_tipo_nota,
		cd_cgc,
		qt_peso_bruto,
		qt_peso_liquido,
		dt_atualizacao,
		nm_usuario
		)
		values (
		nr_seq_nf_w,
		nr_nota_fiscal_w,
		nr_sequencia_nf_w,
		'1',
		'0',
		'0',
		0,
		0,
		cd_serie_nf_p,
		cd_estab_nota_fiscal_w,
		cd_cgc_emitente_p,
		cd_operacao_nf_p,
		dt_emissao_p,
		dt_emissao_p,
		cd_condicao_pagamento_p,
		ds_observacao_p,
		cd_natureza_operacao_p,
		ie_tipo_nota_w,
		cd_cgc_estab_w,
		0,
		0,
		clock_timestamp(),
		nm_usuario_w
		);
		
insert into nota_fiscal_item(
		nr_sequencia,
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_sequencia_nf,
		nr_item_nf,
		cd_natureza_operacao,
		qt_item_nf,
		vl_unitario_item_nf,
		vl_total_item_nf,
		dt_atualizacao,
		nm_usuario,
		vl_frete,
		vl_desconto,
		vl_despesa_acessoria,
		cd_procedimento,
		cd_conta_contabil,
		vl_desconto_rateio,
		vl_seguro,
		cd_centro_custo,
		vl_liquido,
		ie_origem_proced,
		cd_sequencia_parametro
		)
		values (
		nr_seq_nf_w,
		cd_estab_nota_fiscal_w,
		cd_cgc_emitente_p,
		cd_serie_nf_p,
		nr_sequencia_nf_w,
		1,
		null,
		1,
		vl_saldo_w,
		vl_saldo_w,
		clock_timestamp(),
		nm_usuario_w,
		0,
		0,
		0,
		cd_procedimento_p,
		cd_conta_contabil_w,
		0,
		0,
		cd_centro_custo_w,
		vl_saldo_w,
		ie_origem_proced_p,
		philips_contabil_pck.get_parametro_conta_contabil);
			
commit;

CALL gerar_imposto_nf(nr_seq_nf_w, nm_usuario_w, null, null);
CALL atualiza_total_nota_fiscal(nr_seq_nf_w, nm_usuario_w);
CALL Gerar_Venc_Nota_Fiscal_Pac(nr_seq_nf_w, dt_vencimento_p);

for bordero_tit_rec in c01 loop
	update 	titulo_receber
	set 	nr_nota_fiscal = nr_seq_nf_w,
			nm_usuario = nm_usuario_w,
			dt_atualizacao = clock_timestamp()
	where 	nr_titulo = bordero_tit_rec.nr_titulo;
end loop;

update 	bordero_recebimento
set 	nr_seq_nota_fiscal = nr_seq_nf_w,
		nm_usuario = nm_usuario_w,
		dt_atualizacao = clock_timestamp()
where	nr_bordero = nr_bordero_p;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nf_bordero_rec ( nr_bordero_p bigint, cd_operacao_nf_p bigint, cd_natureza_operacao_p bigint, cd_condicao_pagamento_p bigint, cd_serie_nf_p text, cd_cgc_emitente_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, ds_observacao_p text, dt_emissao_p timestamp, dt_vencimento_p timestamp) FROM PUBLIC;

