-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_man_ordem_situacao_sla ((dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text, nr_seq_ordem_serv_p bigint default null) is nr_seq_ordem_serv_w man_ordem_servico.nr_sequencia%type) RETURNS bigint AS $body$
DECLARE


	qt_retorno_w		bigint;
	nr_seq_estagio_w	man_ordem_serv_estagio.nr_seq_estagio%type;
	nr_seq_estagio_ant_w	man_ordem_serv_estagio.nr_seq_estagio%type;
	dt_estagio_w		timestamp;
	dt_estagio_ant_w	timestamp;

	c100 CURSOR FOR
	SELECT	a.dt_atualizacao,
		a.nr_seq_estagio
	from	man_ordem_serv_estagio a
	where	a.nr_seq_ordem		= nr_seq_ordem_serv_p
	and	trunc(a.dt_atualizacao)	<= dt_referencia_w
	and	trunc(a.dt_atualizacao) >= trunc(dt_ordem_p)
	order by a.dt_atualizacao;
	/* Desconsidera: 2 Cliente (Teste) / 261 Desenv aguardando cliente /1341  Aguardando Inf. do Cliente - Suporte / 1511  Cliente (Teste) - OK*/


	/* 1902  Tec aguardando definicao cliente / 511 Encerramento solicitado pelo Cliente /9 OK - Cliente - Encerrado / 121- Aguardando Conexao*/


	/* 41 Aguardando Informacoes do Cliente*/

	
BEGIN

	dt_estagio_ant_w	:= null;
	nr_seq_estagio_ant_w	:= null;
	qt_retorno_w	:= 0;

	open C100;
	loop
	fetch C100 into
		dt_estagio_w,
		nr_seq_estagio_w;
	EXIT WHEN NOT FOUND; /* apply on C100 */

		if (coalesce(dt_estagio_ant_w::text, '') = '') then
			if (ie_tempo_p = 'COR') then
				qt_retorno_w 	:= qt_retorno_w + obter_min_entre_datas(dt_ordem_p, dt_estagio_w ,1);
			elsif (ie_tempo_p = 'COM') then
				qt_retorno_w	:= qt_retorno_w + man_obter_min_com(cd_estabelecimento_p, dt_ordem_p, dt_estagio_w );
			end if;
		elsif	((ie_interno_p = 'N') and (nr_seq_estagio_ant_w not in (2,261,1511,1902, 1341,511,9,121,41,562,2316))) or
			((ie_interno_p = 'S') and (nr_seq_estagio_ant_w not in (2,261,1511,1902, 1341,511,9,121,41,562,2316,791,1061,1071,1234,1655,1681,2155,2134,2158,2231,562))) then

			if (ie_tempo_p = 'COR') then
				qt_retorno_w 	:= qt_retorno_w + obter_min_entre_datas(dt_estagio_ant_w, dt_estagio_w ,1);
			elsif (ie_tempo_p = 'COM') then
				qt_retorno_w	:= qt_retorno_w + man_obter_min_com(cd_estabelecimento_p, dt_estagio_ant_w, dt_estagio_w );
			end if;
		end if;

		dt_estagio_ant_w 	:= dt_estagio_w;
		nr_seq_estagio_ant_w	:= nr_seq_estagio_w;

	end loop;
	close C100;

	--para os casos em que a OS continua aberta, considera a referencia para calculo do tempo decorrido
	if (dt_estagio_ant_w IS NOT NULL AND dt_estagio_ant_w::text <> '') and (nr_seq_estagio_ant_w IS NOT NULL AND nr_seq_estagio_ant_w::text <> '') and (trunc(dt_estagio_ant_w) < trunc(dt_referencia_w)) and
		(((ie_interno_p = 'N') and (nr_seq_estagio_ant_w not in (2,261,1511,1902, 1341,511,9,121,41,562,2316))) or
		 ((ie_interno_p = 'S') and (nr_seq_estagio_ant_w not in (2,261,1511,1902, 1341,511,9,121,41,562,2316,791,1061,1071,1234,1655,1681,2155,2134,2158,2231,562)))) then

		if (ie_tempo_p = 'COR') then
			qt_retorno_w 	:= qt_retorno_w + obter_min_entre_datas(dt_estagio_ant_w, dt_referencia_w ,1);
		elsif (ie_tempo_p = 'COM') then
			qt_retorno_w	:= qt_retorno_w + man_obter_min_com(cd_estabelecimento_p, dt_estagio_ant_w, dt_referencia_w );
		end if;
	elsif (coalesce(dt_estagio_ant_w::text, '') = '') and --Para os casos em que a OS ainda nao sofreu alteracao de estagio
		(((ie_interno_p = 'N') and (nr_seq_estagio_ant_w not in (2,261,1511,1902, 1341,511,9,121,41,562,2316))) or
		 ((ie_interno_p = 'S') and (nr_seq_estagio_ant_w not in (2,261,1511,1902, 1341,511,9,121,41,562,2316,791,1061,1071,1234,1655,1681,2155,2134,2158,2231,562)))) then --Estagio atual da OS
		if (ie_tempo_p = 'COR') then
			qt_retorno_w 	:= qt_retorno_w + obter_min_entre_datas(dt_ordem_p, dt_referencia_w ,1);
		elsif (ie_tempo_p = 'COM') then
			qt_retorno_w	:= qt_retorno_w + man_obter_min_com(cd_estabelecimento_p, dt_ordem_p, dt_referencia_w );
		end if;

	end if;

	return	coalesce(qt_retorno_w,0);

	end;
--##################################################################
	function OBTER_MIN_RESPOSTA_OS(cd_estabelecimento_p	number,
				nr_seq_ordem_serv_p	number,
				dt_ordem_p		date,
				ie_tempo_p		varchar2)
				return number is

	qt_retorno_w		number(10);
	dt_inicio_os_w		date;
	begin

	/* desconsidera estagios iniciais da abertura da OS
	231  Aguardando Triagem
	1712  Aguardando Triagem (Customizacao)
	1051  Desenv aguardando triagem
	1731  Tec aguardando triagem  */
	select 	coalesce(max(b.dt_atualizacao),dt_referencia_w)
	into STRICT	dt_inicio_os_w
	from 	man_ordem_serv_estagio b
	where 	b.nr_seq_ordem      	= nr_seq_ordem_serv_p
	and 	b.nr_sequencia 		= (	SELECT 	min(x.nr_sequencia)
						from 	man_ordem_serv_estagio x,
							man_estagio_processo y
						where 	x.nr_seq_ordem      	= nr_seq_ordem_serv_p
						and 	x.nr_seq_estagio 	= y.nr_sequencia
						--and 	y.ie_aguarda_cliente 	= 'N'
						and 	x.nr_seq_estagio	not in (231,562,1712,1051,1731));

	if (ie_tempo_p = 'COR') then
		qt_retorno_w 	:= obter_min_entre_datas(dt_ordem_p, dt_inicio_os_w ,1);
	elsif (ie_tempo_p = 'COM') then
		qt_retorno_w	:= man_obter_min_com(cd_estabelecimento_p, dt_ordem_p, dt_inicio_os_w );
	end if;

	return	coalesce(qt_retorno_w,0);

	end;
--##################################################################
	function OBTER_SE_OS_DESENV_SUP(nr_seq_ordem_serv_p	number,
					dt_referencia_p		varchar2,
					ie_desenv_suporte_p	varchar2)
					return varchar2 is
	ds_retorno_w	varchar2(1);
	begin

	if (ie_desenv_suporte_p = 'D') then

		begin
		select	'S'
		into STRICT	ds_retorno_w
		
		where	exists (SELECT	1
			from	man_ordem_serv_estagio x,
				man_estagio_processo y
			where	x.nr_seq_ordem		= nr_seq_ordem_serv_p
			and	x.nr_seq_estagio	= y.nr_sequencia
			and (y.ie_desenv	= 'S' or y.ie_tecnologia = 'S')
			and	x.dt_atualizacao 	<= dt_referencia_p);
		exception
		when others then
			ds_retorno_w := 'N';
		end;

	elsif (ie_desenv_suporte_p = 'S') then

		begin
		select	'S'
		into STRICT	ds_retorno_w
		
		where	exists (SELECT	1
			from	man_ordem_serv_estagio x,
				man_estagio_processo y
			where	x.nr_seq_ordem		= nr_seq_ordem_serv_p
			and	x.nr_seq_estagio	= y.nr_sequencia
			and (y.ie_desenv	= 'S' or y.ie_tecnologia = 'S')
			and	x.dt_atualizacao 	<= dt_referencia_p);
		exception
		when others then
			ds_retorno_w := 'N';
		end;
	end if;

	return	ds_retorno_w;

	end;

--##################################################################
	function OBTER_AREA_ESTOURO_OS(nr_seq_ordem_serv_p	number,
			dt_referencia_p		date)
			return varchar2 is
	ds_retorno_w		varchar2(1);
	nr_seq_estagio_w	number(10);

	begin

	begin
	select	a.nr_seq_estagio
	into STRICT	nr_seq_estagio_w
	from (
		SELECT	x.nr_seq_estagio,
			man_obter_tempo_estagio(x.nr_sequencia,x.nr_seq_ordem,'MC') qt_tempo
		from	man_ordem_serv_estagio x,
			man_estagio_processo y
		where	x.nr_seq_ordem		= nr_seq_ordem_serv_p
		and	x.nr_seq_estagio	= y.nr_sequencia
		and	y.ie_aguarda_cliente	<> 'S' --ignora estagios aguardando cliente
		and	x.dt_atualizacao 	<= dt_referencia_p	
		order by qt_tempo desc) a LIMIT 1;

	exception
	when others then
		nr_seq_estagio_w := null;
	end;

	if (nr_seq_estagio_w IS NOT NULL AND nr_seq_estagio_w::text <> '') then
		begin
		select	'T'
		into STRICT	ds_retorno_w
		from	man_estagio_processo
		where	nr_sequencia	= nr_seq_estagio_w
		and	ie_tecnologia	= 'S'  LIMIT 1;
		exception
		when others then
			begin
			select	'D'
			into STRICT	ds_retorno_w
			from	man_estagio_processo
			where	nr_sequencia	= nr_seq_estagio_w
			and	ie_desenv	= 'S'  LIMIT 1;
			exception
			when others then
				begin
					select	'S'
					into STRICT	ds_retorno_w
					from	man_estagio_processo
					where	nr_sequencia	= nr_seq_estagio_w
					and	ie_suporte	= 'S'  LIMIT 1;
				exception
				when others then
					ds_retorno_w := null;
				end;
			end;
		end;
	end if;

	return ds_retorno_w;

	end;
--##################################################################
	function OBTER_CLASSIF_OS_DATA(	nr_seq_ordem_serv_p 		number,
					ie_classificacao_p		varchar2,
					dt_referencia_p			date)
				return varchar2 is
	ie_classificacao_w 	man_ordem_servico.ie_classificacao%type;
	begin

	begin
	select	ie_classificacao
	into STRICT 	ie_classificacao_w
	from	man_ordem_serv_classif a
	where	a.nr_seq_ordem_servico		= nr_seq_ordem_serv_p
	and	nr_sequencia =
		(SELECT	max(x.nr_sequencia)
		from	man_ordem_serv_classif x
		where 	x.nr_seq_ordem_servico		= nr_seq_ordem_serv_p
		and	trunc(x.dt_atualizacao_nrec)	<= trunc(dt_referencia_p))  LIMIT 1;
	exception
	when others then
		ie_classificacao_w := ie_classificacao_p;
	end;

	return ie_classificacao_w;

	end;
--##################################################################
	function OBTER_SE_NOVO_ESTOURO(nr_seq_ordem_serv_p	number)
				return varchar2 is

	/* Ciclo de estouro.
	Este conceito foi definido em reuniao com Diretores (Ana e Edilson), para os casos de OSs que foram enviadas para o cliente em um determinado mes, e no mes seguinte a OS retornou.
	Para ja nao contar como estouro, e considerado como um novo ciclo de tempo de solucao da SLA, reiniciando a contagem.
	*/
	ds_retorno_w	varchar2(1);
	begin

	begin --Verifica se a OS ja esteve pendente na Philips no mesmo mes, o que significa que nao e um novo ciclo de estouro
	select	'N'
	into STRICT	ds_retorno_w
	from	man_ordem_situacao_sla
	where	nr_seq_ordem_serv = nr_seq_ordem_serv_p
	and	trunc(dt_situacao,'month') = trunc(dt_referencia_w,'month')
	and	ie_status_os = 'A'  LIMIT 1;
	exception
	when others then
		begin --Caso seja o primeiro dia do mes, verifica se no ultimo dia do mes anterior a OS estava pendente na Philips, o que significa que nao e um novo ciclo de estouro.
		select	'N'
		into STRICT	ds_retorno_w
		from	man_ordem_situacao_sla
		where	nr_seq_ordem_serv = nr_seq_ordem_serv_p
		and	trunc(dt_referencia_w,'month') = trunc(dt_referencia_w) --Se e o primeiro dia do mes
		and	dt_situacao = trunc(dt_referencia_w) - 1 --se o registro do ultimo dia do mes anterior
		and	ie_status_os = 'A' --estava com a philips
  LIMIT 1;
		exception
		when others then
			begin
			select	'S'
			into STRICT	ds_retorno_w
			from	man_ordem_situacao_sla
			where	nr_seq_ordem_serv 	= nr_seq_ordem_serv_p --Se ja existe registro para a mesma OS
			and	dt_situacao		< dt_referencia_w --em dias anteriores
			and	ie_solucao_os		= 'E' --onde ja teve estouro de solucao
			and	trunc(dt_situacao,'month') <> trunc(dt_referencia_w,'month') -- do mes anterior.
  LIMIT 1;
			exception
			when others then
				ds_retorno_w := 'N';
			end;
		end;
	end;

	return	ds_retorno_w;

	end;

--##################################################################
	procedure GRAVAR_ATUALIZAR_SITUACAO_OS(nr_seq_ordem_serv_p	number) is

	man_ordem_situacao_sla_w	man_ordem_situacao_sla%rowtype;
	man_ordem_situacao_sla_ant_w	man_ordem_situacao_sla%rowtype;
	ie_resposta_os_w		man_ordem_situacao_sla.ie_resposta_os%type;
	ie_solucao_os_w			man_ordem_situacao_sla.ie_solucao_os%type;
	ie_status_os_w			man_ordem_situacao_sla.ie_status_os%type;
	ie_sla_w			man_ordem_situacao_sla.ie_sla%type;
	qt_min_resposta_w		man_ordem_situacao_sla.qt_min_resposta%type := 0;
	qt_min_solucao_w		man_ordem_situacao_sla.qt_min_solucao%type := 0;
	qt_dif_min_resposta_w		man_ordem_situacao_sla.qt_dif_min_resposta%type := 0;
	qt_dif_min_solucao_w		man_ordem_situacao_sla.qt_dif_min_solucao%type := 0;
	nr_seq_grupo_des_resp_w		man_ordem_situacao_sla.nr_seq_grupo_des_resp%type;
	nr_seq_grupo_des_w		man_ordem_situacao_sla.nr_seq_grupo_des%type;
	nr_seq_gerencia_des_w		man_ordem_situacao_sla.nr_seq_gerencia_des%type;
	nr_seq_gerencia_sup_w		man_ordem_situacao_sla.nr_seq_gerencia_sup%type;
	nr_seq_grupo_sup_w	        man_ordem_situacao_sla.nr_seq_grupo_sup%type;
	nr_seq_ger_des_resp_w	        man_ordem_situacao_sla.nr_seq_ger_des_resp%type;
	nr_seq_grupo_des_solu_w	        man_ordem_situacao_sla.nr_seq_grupo_des_solu%type;
	nr_seq_ger_des_solu_w	        man_ordem_situacao_sla.nr_seq_ger_des_solu%type;
	nr_seq_grupo_sup_resp_w	        man_ordem_situacao_sla.nr_seq_grupo_sup_resp%type;
	nr_seq_ger_sup_resp_w	        man_ordem_situacao_sla.nr_seq_ger_sup_resp%type;
	nr_seq_grupo_sup_solu_w	        man_ordem_situacao_sla.nr_seq_grupo_sup_solu%type;
	nr_seq_ger_sup_solu_w	        man_ordem_situacao_sla.nr_seq_ger_sup_solu%type;
	nr_seq_grupo_des_dia_w		man_ordem_situacao_sla.nr_seq_grupo_des_dia%type;
	nr_seq_ger_des_dia_w 		man_ordem_situacao_sla.nr_seq_ger_des_dia%type;
	qt_min_inicio_w			man_sla_regra.qt_min_inicio%type;
	qt_min_termino_w		man_sla_regra.qt_min_termino%type;
	ie_tempo_w			man_sla_regra.ie_tempo%type;
	ie_tipo_sla_termino_w		man_sla_regra.ie_tipo_sla_termino%type;
	ie_tipo_sla_regra_w		man_sla_regra.ie_tipo_sla%type;
	ie_status_ordem_w		man_ordem_servico.ie_status_ordem%type;
	ie_classificacao_os_w		man_ordem_servico.ie_classificacao%type;
	ie_classif_os_data_w		man_ordem_servico.ie_classificacao%type;
	ie_classificacao_cliente_w	man_ordem_servico.ie_classificacao_cliente%type;
	ie_prioridade_cliente_w		man_ordem_servico.ie_prioridade_cliente%type;
	ie_prioridade_w			man_ordem_servico.ie_prioridade%type;
	nr_seq_estagio_w		man_ordem_servico.nr_seq_estagio%type;
	nr_seq_estagio_dia_w		man_ordem_servico.nr_seq_estagio%type;
	nr_seq_localizacao_w		man_ordem_servico.nr_seq_localizacao%type;
	ie_ambiente_w			man_ordem_servico.ie_ambiente%type;
	cd_estabelecimento_w		man_localizacao.cd_estabelecimento%type;
	ie_interno_w			man_localizacao.ie_terceiro%type;
	nr_seq_sla_regra_w		man_ordem_serv_sla.nr_seq_sla_regra%type;
	nr_seq_sla_w			man_ordem_serv_sla.nr_seq_sla%type;

	ie_tipo_sla_w			varchar2(10);
	dt_base_calculo_w		date;
	dt_inicio_os_w			date;
	dt_ordem_servico_w		date;
	dt_estouro_resposta_w		date;
	dt_estouro_solucao_w		date;
	dt_fim_real_w			date;
	dt_estagio_philips_w		date;
	dt_referencia_calc_w		date;
	ie_area_estouro_w		varchar2(1);

	begin

	select	max(a.dt_ordem_servico),
		max(a.ie_status_ordem),
		max(a.nr_seq_estagio),
		max(c.cd_estabelecimento),
		max(b.nr_seq_sla_regra),
		max(b.nr_seq_sla),
		max(CASE WHEN c.ie_terceiro='S' THEN 'N'  ELSE 'S' END ),
		max(a.nr_seq_localizacao),
		max(a.dt_fim_real),
		max(a.nr_seq_grupo_des),
		max(a.nr_seq_grupo_sup),
		max(a.ie_classificacao),
		max(a.ie_classificacao_cliente),
		max(a.ie_prioridade_cliente),
		max(a.ie_prioridade),
		max(a.ie_ambiente)
	into STRICT	dt_ordem_servico_w,
		ie_status_ordem_w,
		nr_seq_estagio_w,
		cd_estabelecimento_w,
		nr_seq_sla_regra_w,
		nr_seq_sla_w,
		ie_interno_w,
		nr_seq_localizacao_w,
		dt_fim_real_w,
		nr_seq_grupo_des_w,
		nr_seq_grupo_sup_w,
		ie_classificacao_os_w,
		ie_classificacao_cliente_w,
		ie_prioridade_cliente_w,
		ie_prioridade_w,
		ie_ambiente_w
	FROM man_localizacao c, man_ordem_servico a
LEFT OUTER JOIN man_ordem_serv_sla b ON (a.nr_sequencia = b.nr_seq_ordem)
WHERE a.nr_sequencia			= nr_seq_ordem_serv_p and a.nr_seq_localizacao		= c.nr_sequencia;

	--Deleta o registro atual da tabela
	delete 	from man_ordem_situacao_sla
	where	nr_seq_ordem_serv 	= nr_seq_ordem_serv_p
	and	dt_situacao		= trunc(dt_referencia_w);

	begin
		select	a.*
		into STRICT	man_ordem_situacao_sla_ant_w
		from	man_ordem_situacao_sla a
		where	a.nr_sequencia	in (SELECT	max(x.nr_sequencia)
			from	man_ordem_situacao_sla x
			where 	x.nr_seq_ordem_serv	= nr_seq_ordem_serv_p
			and	x.dt_situacao		< trunc(dt_referencia_w))  LIMIT 1;
	exception
	when others then
		man_ordem_situacao_sla_ant_w.nr_sequencia := null;
	end;

	ie_status_os_w := 'A'; --Aberta
	if (man_ordem_situacao_sla_ant_w.ie_status_os = 'F') or
		((ie_status_ordem_w = '3') and (trunc(dt_fim_real_w) = trunc(dt_referencia_w))) then --Encerrada
		ie_status_os_w := 'F';
	elsif (man_ordem_situacao_sla_ant_w.ie_status_os IS NOT NULL AND man_ordem_situacao_sla_ant_w.ie_status_os::text <> '') then
		begin
		select	'C' --Cliente - A OS esta com o cliente
		into STRICT	ie_status_os_w
		
		where	exists
			(SELECT	1
			from	man_ordem_serv_estagio x
			where	x.nr_seq_ordem      	= nr_seq_ordem_serv_p
			and	x.nr_sequencia		=
				(select	max(z.nr_sequencia)
				from	man_ordem_serv_estagio z
				where	z.nr_seq_ordem      	= nr_seq_ordem_serv_p
				and	trunc(z.dt_atualizacao) <= trunc(dt_referencia_w))
			and	x.nr_seq_estagio 	in (2,261,1511,1902, 1341,511,9,562,2316,121,41,791,1061,1071,1234))  LIMIT 1;
		exception
		when others then
			begin
			select	'F' --Finalizada
			into STRICT	ie_status_os_w
			
			where	exists (SELECT	1
				from	man_ordem_serv_estagio x
				where	x.nr_seq_ordem      	= nr_seq_ordem_serv_p
				and	x.nr_seq_estagio	= 9
				and	trunc(x.dt_atualizacao) = trunc(dt_referencia_w))  LIMIT 1;
			exception
			when others then
				ie_status_os_w := 'A';
			end;
		end;
	end if;

	select	man_obter_regra_sla_data(cd_estabelecimento_w,
					nm_usuario_p,
					a.ie_prioridade,--a.ie_prioridade_cliente,
					a.ie_classificacao,
					a.nr_seq_localizacao,
					a.nr_grupo_trabalho,
					a.dt_ordem_servico,
					dt_referencia_w,--a.dt_inicio_real,
					a.nr_seq_estagio,
					a.nr_seq_equipamento,
					a.nr_seq_classif,
					a.ie_parado)
	into STRICT	nr_seq_sla_regra_w
	from	man_ordem_servico a
	where	a.nr_sequencia	= nr_seq_ordem_serv_p  LIMIT 1;

	if (ie_classificacao_os_w = 'E') or (coalesce(nr_seq_sla_regra_w,0) > 0) then
		ie_sla_w := 'S';
	else
		ie_sla_w := 'N';
	end if;

	-- nao contabilizar estouro de resposta para regra localizacaos internas 

	-- 1272 Philips Clinical Informatics - BNU
	if (coalesce(nr_seq_sla_regra_w,0) > 0) then
		select	CASE WHEN nr_seq_localizacao_w=1272 THEN  99999  ELSE max(qt_min_inicio) END  ,
			max(qt_min_termino),
			max(ie_tempo),
			max(ie_tipo_sla),
			max(ie_tipo_sla_termino) ie_tipo_sla_termino, --na tabela correta tem a informacao
			max(nr_seq_sla)
		into STRICT	qt_min_inicio_w,
			qt_min_termino_w,
			ie_tempo_w,
			ie_tipo_sla_regra_w,
			ie_tipo_sla_termino_w,
			nr_seq_sla_w
		from	man_sla_regra
		where	nr_sequencia	= nr_seq_sla_regra_w;
	else --Casos em que e defeito, porem nao e SLA
		begin
		select	b.nr_sequencia,
			CASE WHEN nr_seq_localizacao_w=1272 THEN  99999  ELSE b.qt_min_inicio END ,
			b.qt_min_termino,
			b.ie_tempo,
			b.ie_tipo_sla,
			b.ie_tipo_sla_termino
		into STRICT	nr_seq_sla_regra_w,
			qt_min_inicio_w,
			qt_min_termino_w,
			ie_tempo_w,
			ie_tipo_sla_regra_w,
			ie_tipo_sla_termino_w
		from	man_sla_regra b,
			man_sla a
		where	a.nr_sequencia		= b.nr_seq_sla
		and	a.nr_sequencia		= 239
		and	b.ie_classificacao	= ie_classificacao_os_w
		and	b.ie_prioridade		= ie_prioridade_w--nvl(ie_prioridade_cliente_w,ie_prioridade_w)
  LIMIT 1;

		nr_seq_sla_w := 239;
		exception
		when others then
			nr_seq_sla_regra_w	:= null;
			qt_min_inicio_w		:= 0;
			qt_min_termino_w	:= 0;
			ie_tempo_w		:= 'COR';
			nr_seq_sla_w		:= null;
		end;
	end if;

	--Se no dia anterior a OS estava com cliente, utiliza como base para calculo da data de estouro o horario em que a OS voltou para philips.
	if (man_ordem_situacao_sla_ant_w.nr_seq_estagio in (2,261,1511,1902, 1341,511,9,562,2316,121,41,791,1061,1071,1234,2316)) then
		begin
			select	x.dt_atualizacao
			into STRICT	dt_estagio_philips_w
			from	man_ordem_serv_estagio x
			where	x.nr_seq_ordem      	= nr_seq_ordem_serv_p
			and	x.nr_sequencia		=
				(SELECT	min(z.nr_sequencia)
				from	man_ordem_serv_estagio z
				where	z.nr_seq_ordem      	= nr_seq_ordem_serv_p
				and	trunc(z.dt_atualizacao) = trunc(dt_referencia_w))
			and	x.nr_seq_estagio 	not in (2,261,1511,1902, 1341,511,9,562,2316,121,41,791,1061,1071,1234,2316);
		exception
		when others then
			dt_estagio_philips_w := null;
		end;
	
	end if;

	if (coalesce(man_ordem_situacao_sla_ant_w.nr_sequencia::text, '') = '') then
		dt_referencia_calc_w	:= dt_ordem_servico_w;
	elsif (dt_estagio_philips_w IS NOT NULL AND dt_estagio_philips_w::text <> '') then
		if (ie_tempo_w = 'COM') and (dt_estagio_philips_w < trunc(dt_estagio_philips_w) + 8/24) then
			dt_referencia_calc_w	:= trunc(dt_estagio_philips_w) + 8/24;
		elsif (ie_tempo_w = 'COM') and (dt_estagio_philips_w > trunc(dt_estagio_philips_w) + 18/24) then
			dt_referencia_calc_w	:= trunc(dt_estagio_philips_w + 1) + 8/24;
		else
			dt_referencia_calc_w	:= dt_estagio_philips_w;
		end if;
	else
		if (ie_tempo_w = 'COM') then
			dt_referencia_calc_w	:= trunc(dt_referencia_w) + 8/24;
		else
			dt_referencia_calc_w	:= pkg_date_utils.start_of(dt_referencia_w,'DAY');
		end if;
	end if;

	ie_classif_os_data_w := OBTER_CLASSIF_OS_DATA(nr_seq_ordem_serv_p, ie_classificacao_cliente_w, dt_referencia_w);

	if (OBTER_SE_OS_DESENV_SUP(nr_seq_ordem_serv_p,dt_referencia_w,'D') = 'S') then --Verifica se a OS passou pelo desenvolvimento
		select	max(nr_seq_gerencia)
		into STRICT	nr_seq_gerencia_des_w
		from	grupo_desenvolvimento
		where	nr_sequencia = nr_seq_grupo_des_w;
	else
		select	max(nr_seq_gerencia_sup)
		into STRICT	nr_seq_gerencia_sup_w
		from	grupo_suporte
		where	nr_sequencia = nr_seq_grupo_sup_w;
	end if;

	if (man_ordem_situacao_sla_ant_w.nr_sequencia IS NOT NULL AND man_ordem_situacao_sla_ant_w.nr_sequencia::text <> '') and (coalesce(man_ordem_situacao_sla_ant_w.ie_status_os,'X') = 'C') and --Somente gera novo registro, se a OS voltou para a philis
		(coalesce(ie_status_os_w,'X') = 'C') then --e se a situacao anterior estava com o cliente
		null;
		
	else
			/* Atualizar todos os registros da OS do mes como nao sendo mais o atual */

			update	man_ordem_situacao_sla
			set	ie_situacao_atual 		= 'N',
				nr_seq_gerencia_des		 = NULL, --limpa as gerencias para contar apenas para a gerencia atual da OS, conforme acordado
				nr_seq_gerencia_sup		 = NULL --limpa as gerencias para contar apenas para a gerencia atual da OS, conforme acordado
			where	nr_seq_ordem_serv		= nr_seq_ordem_serv_p
			and	ie_situacao_atual	 	<> 'N'
			and	trunc(dt_situacao,'month') 	= trunc(dt_referencia_w,'month');


		if (ie_tipo_sla_regra_w = 1) and (ie_tipo_sla_termino_w = 1) then
			ie_tipo_sla_w := 'CSFP'; /* Customer Start Finish with Penalty'*/
		elsif (ie_tipo_sla_regra_w = 1) and (ie_tipo_sla_termino_w = 3) then
			ie_tipo_sla_w := 'COSP'; /* Customer Only Finish with Penalty'*/
		elsif (ie_tipo_sla_regra_w = 2) and (ie_tipo_sla_termino_w = 2) then
			ie_tipo_sla_w := 'CSFNP'; /* Customer Start Finish No Penalty'*/
		elsif (ie_tipo_sla_regra_w = 2) and (ie_tipo_sla_termino_w = 3) then
			ie_tipo_sla_w := 'COSNP'; /* Customer Only Start No Penalty'*/
		elsif (ie_tipo_sla_regra_w = 3) and (ie_tipo_sla_termino_w = 3) then
			ie_tipo_sla_w := 'PSFNP'; /* Philips Start Finish No Penalty'*/
		end if;

		--Busca o grupo e estagio atual da OS com base na data.
		if (trunc(dt_referencia_w) < trunc(clock_timestamp())) then
			begin
				select	a.nr_seq_grupo_des,
					b.nr_seq_gerencia
				into STRICT	nr_seq_grupo_des_dia_w,
					nr_seq_ger_des_dia_w
				from	man_ordem_log_grupo_des a,
					grupo_desenvolvimento b
				where	a.nr_seq_ordem_serv	= nr_seq_ordem_serv_p
				and	a.nr_seq_grupo_des	= b.nr_sequencia
				and	a.nr_sequencia		=
					(SELECT	max(x.nr_sequencia)
					from	man_ordem_log_grupo_des x
					where	x.nr_seq_ordem_serv	= a.nr_seq_ordem_serv
					and	trunc(x.dt_atualizacao) <= trunc( dt_referencia_w )) LIMIT 1;
			exception
			when others then
				nr_seq_grupo_des_dia_w	:= null;
				nr_seq_ger_des_dia_w	:= null;
			end;

			begin
				select	x.nr_seq_estagio
				into STRICT	nr_seq_estagio_dia_w
				from	man_ordem_serv_estagio x
				where	x.nr_seq_ordem      	= nr_seq_ordem_serv_p
				and	x.nr_sequencia		=
					(SELECT	max(z.nr_sequencia)
					from	man_ordem_serv_estagio z
					where	z.nr_seq_ordem      	= nr_seq_ordem_serv_p
					and	trunc(z.dt_atualizacao) <= trunc(dt_referencia_w));
			exception
			when others then
				nr_seq_estagio_dia_w 	:= null;
			end;

		end if;

		ie_resposta_os_w 	:= coalesce(man_ordem_situacao_sla_ant_w.ie_resposta_os,'N'); --Normal
		ie_solucao_os_w		:= coalesce(man_ordem_situacao_sla_ant_w.ie_solucao_os,'N'); --Normal
		dt_estouro_resposta_w	:= man_ordem_situacao_sla_ant_w.dt_estouro_resposta;
		dt_estouro_solucao_w	:= man_ordem_situacao_sla_ant_w.dt_estouro_solucao;
		nr_seq_grupo_des_resp_w	:= man_ordem_situacao_sla_ant_w.nr_seq_grupo_des_resp;
		nr_seq_ger_des_resp_w	:= man_ordem_situacao_sla_ant_w.nr_seq_ger_des_resp;
		nr_seq_grupo_des_solu_w	:= man_ordem_situacao_sla_ant_w.nr_seq_grupo_des_solu;
		nr_seq_ger_des_solu_w	:= man_ordem_situacao_sla_ant_w.nr_seq_ger_des_solu;
		nr_seq_grupo_sup_resp_w	:= man_ordem_situacao_sla_ant_w.nr_seq_grupo_sup_resp;
		nr_seq_ger_sup_resp_w	:= man_ordem_situacao_sla_ant_w.nr_seq_ger_sup_resp;
		nr_seq_grupo_sup_solu_w	:= man_ordem_situacao_sla_ant_w.nr_seq_grupo_sup_solu;
		nr_seq_ger_sup_solu_w	:= man_ordem_situacao_sla_ant_w.nr_seq_ger_sup_solu;

		dt_base_calculo_w	:= dt_ordem_servico_w;

			
		--###### calcular o tempo para triagem da OS
		qt_min_resposta_w 	:= OBTER_MIN_RESPOSTA_OS(cd_estabelecimento_w, nr_seq_ordem_serv_p, dt_base_calculo_w, ie_tempo_w);
		if (coalesce(qt_min_inicio_w,0) > 0) then
			qt_dif_min_resposta_w 	:= coalesce(qt_min_inicio_w,0) - qt_min_resposta_w;
		end if;
		
		--Quando estourou a resposta da OS, verifica a are aresponsavel para saber a gerencia e grupo
		if (coalesce(man_ordem_situacao_sla_ant_w.ie_resposta_os,'N') = 'N') then --Se ainda nao estourou
	
			if	((coalesce(qt_min_inicio_w,0) > 0) and (qt_dif_min_resposta_w <= 0)) or
				((coalesce(qt_min_inicio_w,0) > 0) and (coalesce(qt_min_inicio_w,0) < qt_min_resposta_w))	then
				ie_resposta_os_w 	:= 'E'; --Estouro
			end if;
			if (ie_resposta_os_w = 'E') then
	
				dt_estouro_resposta_w	:= ADICIONAR_MINUTOS_DATA(cd_estabelecimento_w, dt_base_calculo_w, qt_min_inicio_w, ie_tempo_w);
				ie_area_estouro_w 	:= OBTER_AREA_ESTOURO_OS( nr_seq_ordem_serv_p, dt_estouro_resposta_w );
	
				if (ie_area_estouro_w = 'D') then
					--Busca o grupo e gerencia da OS no dia.
					select	max(a.nr_seq_grupo_des)
					into STRICT	nr_seq_grupo_des_resp_w
					from (SELECT	x.nr_seq_grupo_des,
							man_obter_tempo_grupo_desenv(x.nr_sequencia, x.nr_seq_ordem_serv, 'MC') qt_tempo
						from	man_ordem_log_grupo_des x,
							grupo_desenvolvimento y,
							gerencia_wheb z
						where	x.nr_seq_ordem_serv	= nr_seq_ordem_serv_p
						and 	x.nr_seq_grupo_des	= y.nr_sequencia
						and	y.nr_seq_gerencia	= z.nr_sequencia
						and	z.ie_area_gerencia	= 'DES'
						and	trunc(x.dt_atualizacao) <= trunc( dt_estouro_resposta_w )
						order by qt_tempo desc) a LIMIT 1;
	
					select	max(nr_seq_gerencia)
					into STRICT	nr_seq_ger_des_resp_w
					from	grupo_desenvolvimento
					where	nr_sequencia = nr_seq_grupo_des_resp_w;
	
				elsif (ie_area_estouro_w = 'T') then
	
					--Busca o grupo e gerencia da OS no dia.
					select	max(a.nr_seq_grupo_des)
					into STRICT	nr_seq_grupo_des_resp_w
					from (SELECT	x.nr_seq_grupo_des,
							man_obter_tempo_grupo_desenv(x.nr_sequencia, x.nr_seq_ordem_serv, 'MC') qt_tempo
						from	man_ordem_log_grupo_des x,
							grupo_desenvolvimento y,
							gerencia_wheb z
						where	x.nr_seq_ordem_serv	= nr_seq_ordem_serv_p
						and 	x.nr_seq_grupo_des	= y.nr_sequencia
						and	y.nr_seq_gerencia	= z.nr_sequencia
						and	z.ie_area_gerencia	= 'TEC'
						and	trunc(x.dt_atualizacao) <= trunc( dt_estouro_resposta_w )
						order by qt_tempo desc) a LIMIT 1;	
	
					select	max(nr_seq_gerencia)
					into STRICT	nr_seq_ger_des_resp_w
					from	grupo_desenvolvimento
					where	nr_sequencia = nr_seq_grupo_des_resp_w;
	
				elsif (ie_area_estouro_w = 'S') then
	
					select	coalesce(max(a.nr_seq_grupo_sup),nr_seq_grupo_sup_w)
					into STRICT	nr_seq_grupo_sup_resp_w
					from (SELECT	x.nr_seq_grupo_sup,
							man_obter_tempo_grupo_sup(x.nr_sequencia, x.nr_seq_ordem_serv, 'MC') qt_tempo
						from	man_ordem_log_grupo_sup x
						where	x.nr_seq_ordem_serv	= nr_seq_ordem_serv_p
						and	trunc(x.dt_atualizacao) <= trunc( dt_estouro_resposta_w )
						order by qt_tempo desc) a LIMIT 1;
	
					select	max(nr_seq_gerencia_sup)
					into STRICT	nr_seq_ger_sup_resp_w
					from	grupo_suporte
					where	nr_sequencia = nr_seq_grupo_sup_resp_w;
				end if;
			end if;
		
		end if;

		--Para calculo da solucao, e considerado por mes. Se virou o mes o calculo do SLA reinicia no mes, utilizando como referencia a data do estouro anterior.

		--Isso para os casos em que o cliente retorna a OS no outro mes.
		if (OBTER_SE_NOVO_ESTOURO(nr_seq_ordem_serv_p) = 'S') and (man_ordem_situacao_sla_ant_w.nr_seq_ordem_serv IS NOT NULL AND man_ordem_situacao_sla_ant_w.nr_seq_ordem_serv::text <> '') then
			dt_base_calculo_w				:= trunc(dt_referencia_w,'month'); --man_ordem_situacao_sla_ant_w.dt_estouro_solucao;
			man_ordem_situacao_sla_ant_w.ie_solucao_os	:= 'N';
		else
			dt_base_calculo_w	:= dt_ordem_servico_w;
		end if;

		--Utiliza como base para calcular o tempo que para solucao da OS, a data do ultimo retorno da OS para Philips.
		if (dt_estagio_philips_w IS NOT NULL AND dt_estagio_philips_w::text <> '') then
			dt_base_calculo_w	:= dt_estagio_philips_w;
		else
			select	min(a.dt_referencia_calc)
			into STRICT	dt_base_calculo_w
			from	man_ordem_situacao_sla a
			where	a.nr_seq_ordem_serv		= nr_seq_ordem_serv_p
			and	trunc(dt_situacao,'month') 	= trunc(dt_referencia_w,'month')
			and 	a.ie_status_os = 'A'
			and	nr_sequencia	>
				(SELECT	coalesce(min(x.nr_sequencia),0)
				from	man_ordem_situacao_sla x
				where	x.nr_seq_ordem_serv		= a.nr_seq_ordem_serv
				and	trunc(x.dt_situacao,'month') 	= trunc(dt_referencia_w,'month')
				and	x.ie_status_os			<> 'A');

			if (coalesce(dt_base_calculo_w::text, '') = '') and (ie_tempo_w = 'COM') then
				dt_base_calculo_w	:= trunc(dt_referencia_w) + 8/24;
			elsif (coalesce(dt_base_calculo_w::text, '') = '') then
				dt_referencia_calc_w	:= trunc(dt_referencia_w);
			end if;
		end if;
		

		--###### calcular o tempo para encerrar a OS
		qt_min_solucao_w 	:= OBTER_MIN_SOLUCAO_OS(cd_estabelecimento_w, nr_seq_ordem_serv_p, dt_base_calculo_w, ie_tempo_w, nr_seq_estagio_w, ie_interno_w );

		if (coalesce(qt_min_termino_w,0) > 0) then
			begin
			if (qt_min_solucao_w < 0) then
				qt_min_solucao_w := 0;
			end if;

			qt_dif_min_solucao_w 	:= coalesce(qt_min_termino_w,0) - qt_min_solucao_w;
			
			if (qt_dif_min_solucao_w > 0) then
				ie_solucao_os_w 	:= 'N';
				dt_estouro_solucao_w 	:= null;
			end if;

			end;
		end if;
		
		--Quando estourou a solucao da OS, verifica a are aresponsavel para saber a gerencia e grupo
		if (coalesce(man_ordem_situacao_sla_ant_w.ie_solucao_os,'N') = 'N') then --Se ainda nao estourou
			if	((coalesce(qt_min_termino_w,0) > 0) and (qt_dif_min_solucao_w <= 0)) or
				((coalesce(qt_min_termino_w,0) > 0) and (coalesce(qt_min_termino_w,0) < qt_min_solucao_w)) then
				ie_solucao_os_w 	:= 'E'; --Estouro
			end if;
			
			if (ie_solucao_os_w = 'E') then

				dt_estouro_solucao_w	:= ADICIONAR_MINUTOS_DATA(cd_estabelecimento_w, dt_base_calculo_w, qt_min_termino_w, ie_tempo_w);

				ie_area_estouro_w 	:= OBTER_AREA_ESTOURO_OS( nr_seq_ordem_serv_p, dt_estouro_solucao_w );

				if (ie_area_estouro_w = 'D') then
					--Busca o grupo e gerencia da OS no dia.
					select	max(a.nr_seq_grupo_des)
					into STRICT	nr_seq_grupo_des_solu_w
					from (SELECT	x.nr_seq_grupo_des,
							man_obter_tempo_grupo_desenv(x.nr_sequencia, x.nr_seq_ordem_serv, 'MC') qt_tempo
						from	man_ordem_log_grupo_des x,
							grupo_desenvolvimento y,
							gerencia_wheb z
						where	x.nr_seq_ordem_serv	= nr_seq_ordem_serv_p
						and 	x.nr_seq_grupo_des	= y.nr_sequencia
						and	y.nr_seq_gerencia	= z.nr_sequencia
						and	z.ie_area_gerencia	= 'DES'
						and	trunc(x.dt_atualizacao) <= trunc( dt_estouro_solucao_w )
						order by qt_tempo desc) a LIMIT 1;

					select	max(nr_seq_gerencia)
					into STRICT	nr_seq_ger_des_solu_w
					from	grupo_desenvolvimento
					where	nr_sequencia = nr_seq_grupo_des_solu_w;

				elsif (ie_area_estouro_w = 'T') then
					--Busca o grupo e gerencia da OS no dia.
					select	max(a.nr_seq_grupo_des)
					into STRICT	nr_seq_grupo_des_solu_w
					from (SELECT	x.nr_seq_grupo_des,
							man_obter_tempo_grupo_desenv(x.nr_sequencia, x.nr_seq_ordem_serv, 'MC') qt_tempo
						from	man_ordem_log_grupo_des x,
							grupo_desenvolvimento y,
							gerencia_wheb z
						where	x.nr_seq_ordem_serv	= nr_seq_ordem_serv_p
						and 	x.nr_seq_grupo_des	= y.nr_sequencia
						and	y.nr_seq_gerencia	= z.nr_sequencia
						and	z.ie_area_gerencia	= 'TEC'
						and	trunc(x.dt_atualizacao) <= trunc( dt_estouro_solucao_w )
						order by qt_tempo desc) a LIMIT 1;

					select	max(nr_seq_gerencia)
					into STRICT	nr_seq_ger_des_solu_w
					from	grupo_desenvolvimento
					where	nr_sequencia = nr_seq_grupo_des_solu_w;

				elsif (ie_area_estouro_w = 'S') then

					select	coalesce(max(a.nr_seq_grupo_sup),nr_seq_grupo_sup_w)
					into STRICT	nr_seq_grupo_sup_solu_w
					from (SELECT	x.nr_seq_grupo_sup,
							man_obter_tempo_grupo_sup(x.nr_sequencia, x.nr_seq_ordem_serv, 'MC') qt_tempo
						from	man_ordem_log_grupo_sup x
						where	x.nr_seq_ordem_serv	= nr_seq_ordem_serv_p
						and	trunc(x.dt_atualizacao) <= trunc( dt_estouro_solucao_w )
						order by qt_tempo desc) a LIMIT 1;

					select	max(nr_seq_gerencia_sup)
					into STRICT	nr_seq_ger_sup_solu_w
					from	grupo_suporte
					where	nr_sequencia = nr_seq_grupo_sup_solu_w;

				end if;
			end if;
		end if;
		
		
		--A partir do momento que a OS ja teve seu primeiro atendimento no mes anterior nao e preciso que seja contabilizado o estouro novamente
		if (trunc(dt_ordem_servico_w, 'month') < trunc(dt_referencia_calc_w, 'month')) then
			ie_resposta_os_w := 'N';
			dt_estouro_resposta_w := null;
			nr_seq_grupo_des_resp_w := null;
			nr_seq_ger_des_resp_w := null;
			qt_dif_min_resposta_w := qt_min_inicio_w - 1;
		end if;


		insert into man_ordem_situacao_sla(nr_sequencia,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nm_usuario,
			dt_atualizacao,
			nr_seq_ordem_serv,
			dt_situacao,
			ie_status_os,
			ie_resposta_os,
			ie_solucao_os,
			ie_sla,
			qt_min_resposta,
			qt_min_solucao,
			qt_dif_min_resposta,
			qt_dif_min_solucao,
			ie_situacao_atual,
			ie_interno,
			nr_seq_grupo_des,
			nr_seq_gerencia_des,
			nr_seq_grupo_sup,
			nr_seq_gerencia_sup,
			nr_seq_grupo_des_resp,
			nr_seq_ger_des_resp,
			nr_seq_grupo_des_solu,
			nr_seq_ger_des_solu,
			nr_seq_grupo_sup_resp,
			nr_seq_ger_sup_resp,
			nr_seq_grupo_sup_solu,
			nr_seq_ger_sup_solu,
			nr_seq_localizacao,
			nr_seq_sla,
			ie_tipo_sla,
			dt_estouro_resposta,
			dt_estouro_solucao,
			ie_prioridade,
			nr_seq_grupo_des_dia,
			nr_seq_ger_des_dia,
			nr_seq_estagio,
			ie_ambiente,
			dt_referencia_calc,
			ie_classificacao)
		values (nextval('man_ordem_situacao_sla_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_ordem_serv_p,
			trunc(dt_referencia_w),
			ie_status_os_w,
			ie_resposta_os_w,
			ie_solucao_os_w,
			ie_sla_w,
			qt_min_resposta_w,
			qt_min_solucao_w,
			qt_dif_min_resposta_w,
			qt_dif_min_solucao_w,
			'S',
			ie_interno_w,
			nr_seq_grupo_des_w,
			nr_seq_gerencia_des_w,
			nr_seq_grupo_sup_w,
			nr_seq_gerencia_sup_w,
			nr_seq_grupo_des_resp_w,
			nr_seq_ger_des_resp_w,
			nr_seq_grupo_des_solu_w,
			nr_seq_ger_des_solu_w,
			nr_seq_grupo_sup_resp_w,
			nr_seq_ger_sup_resp_w,
			nr_seq_grupo_sup_solu_w,
			nr_seq_ger_sup_solu_w,
			nr_seq_localizacao_w,
			nr_seq_sla_w,
			ie_tipo_sla_w,
			dt_estouro_resposta_w,
			dt_estouro_solucao_w,
			coalesce(ie_prioridade_cliente_w,ie_prioridade_w),
			coalesce(nr_seq_grupo_des_dia_w,nr_seq_grupo_des_w),
			coalesce(nr_seq_ger_des_dia_w,nr_seq_gerencia_des_w),
			coalesce(nr_seq_estagio_dia_w,nr_seq_estagio_w),
			ie_ambiente_w,
			dt_referencia_calc_w,
			ie_classif_os_data_w);
	end if;

	end;
--##################################################################
	procedure ALTERACAO_CLASSIF_OS(	nr_seq_ordem_serv_p	number,
					dt_referencia_p		date,
					ie_classificacao_p	varchar2) is

	man_ordem_situacao_sla_def_w	man_ordem_situacao_sla%rowtype;

	begin

	begin
		select	a.*
		into STRICT	man_ordem_situacao_sla_def_w
		from	man_ordem_situacao_sla a
		where	a.nr_sequencia	in (SELECT	max(x.nr_sequencia)
			from	man_ordem_situacao_sla x
			where 	x.nr_seq_ordem_serv	= nr_seq_ordem_serv_p
			and	x.dt_situacao		< trunc(dt_referencia_w))  LIMIT 1;
	exception
	when others then
		man_ordem_situacao_sla_def_w.nr_sequencia := null;
	end;

	if (man_ordem_situacao_sla_def_w.nr_sequencia IS NOT NULL AND man_ordem_situacao_sla_def_w.nr_sequencia::text <> '') and (man_ordem_situacao_sla_def_w.ie_classificacao = 'E') then

		select	nextval('man_ordem_situacao_sla_seq')
		into STRICT	man_ordem_situacao_sla_def_w.nr_sequencia
		;

		man_ordem_situacao_sla_def_w.dt_atualizacao_nrec	:= clock_timestamp();
		man_ordem_situacao_sla_def_w.dt_atualizacao		:= clock_timestamp();
		man_ordem_situacao_sla_def_w.ie_classificacao		:= ie_classificacao_p;
		man_ordem_situacao_sla_def_w.dt_situacao		:= trunc(dt_referencia_w);

		insert into man_ordem_situacao_sla values (man_ordem_situacao_sla_def_w.*);

	end if;

	end;
--##################################################################
begin

dt_referencia_w := pkg_date_utils.end_of(dt_inicial_p,'DAY');
--Loop para cada dia do intervalo, se for informado um periodo

--para calcular apenas de um dia, informe a mesma data para dt_inicial_p e dt_final_p
if (dt_inicial_p IS NOT NULL AND dt_inicial_p::text <> '' AND dt_final_p IS NOT NULL AND dt_final_p::text <> '') and (dt_inicial_p <= dt_final_p) then
	loop
		begin

		--Atualiza a situacao das OSs dos dias anteriores.
		open C00;
		loop
		fetch C00 into
			nr_seq_ordem_serv_w;
		EXIT WHEN NOT FOUND; /* apply on C00 */

			ie_classif_os_ref_w := OBTER_CLASSIF_OS_DATA(nr_seq_ordem_serv_w, null, dt_referencia_w);

			if (coalesce(ie_classif_os_ref_w,'E') = 'E') then
				GRAVAR_ATUALIZAR_SITUACAO_OS(nr_seq_ordem_serv_w);
			else
				ALTERACAO_CLASSIF_OS(nr_seq_ordem_serv_w,dt_referencia_w, ie_classif_os_ref_w);
			end if;
			commit;

		end loop;
		close C00;

		--Busca as novas OSs do dia
		open C01;
		loop
		fetch C01 into
			nr_seq_ordem_serv_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */

			ie_classif_os_ref_w := OBTER_CLASSIF_OS_DATA(nr_seq_ordem_serv_w, null, dt_referencia_w);

			if (coalesce(ie_classif_os_ref_w,'E') = 'E') then
				GRAVAR_ATUALIZAR_SITUACAO_OS(nr_seq_ordem_serv_w);
			else
				ALTERACAO_CLASSIF_OS(nr_seq_ordem_serv_w,dt_referencia_w, ie_classif_os_ref_w);
			end if;
			commit;

		end loop;
		close C01;

		dt_referencia_w := dt_referencia_w + 1;
		if (trunc(dt_referencia_w) > trunc(dt_final_p)) or (trunc(dt_referencia_w) > trunc(clock_timestamp())) then
			exit;
		end if;

		commit;

		end;
	end loop;
end if;

commit;

CALL GERAR_MAN_RESUMO_SLA_W(trunc(dt_referencia_w,'month'));

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_man_ordem_situacao_sla ((dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text, nr_seq_ordem_serv_p bigint default null) is nr_seq_ordem_serv_w man_ordem_servico.nr_sequencia%type) FROM PUBLIC;

