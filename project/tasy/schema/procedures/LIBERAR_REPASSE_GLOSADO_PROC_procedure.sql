-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_repasse_glosado_proc ( nr_seq_retorno_p bigint, nr_seq_grg_p bigint, nr_seq_ret_glosa_p bigint, nm_usuario_p text) AS $body$
DECLARE


cont_w			bigint;
nr_seq_propaci_w		bigint;
nr_seq_matpaci_w		bigint;
vl_glosa_w		double precision;
vl_amenor_w		double precision;
cd_estabelecimento_w	bigint;
vl_cobrado_w		double precision;
nr_seq_proc_rep_novo_w	bigint;
nr_seq_mat_rep_novo_w	bigint;
dt_retorno_w		timestamp;
pr_amenor_w		double precision;
nr_seq_repasse_w		bigint;
nr_seq_ret_item_w		bigint;
vl_repasse_w		double precision;
nr_seq_proc_repasse_w	bigint;
nr_seq_mat_repasse_w	bigint;
pr_glosa_w		double precision;
vl_procedimento_w		double precision;
ie_status_w		varchar(10);
cd_motivo_glosa_w		bigint;
nr_seq_regra_w		bigint;

ie_status_rep_novo_w	varchar(10);
nr_seq_criterio_w		bigint;
nr_seq_partic_w		bigint;
ie_proc_partic_w		varchar(10);
ie_origem_valor_w		varchar(50);
vl_novo_repasse_w	double precision;
vl_repasse_proc_w	double precision;
tx_adicional_w		double precision;
nr_seq_lote_audit_hist_w	bigint;
vl_repasse_atual_w	double precision;
vl_original_w		double precision;
vl_repasse_atualizado_w	double precision;
ie_partic_rep_w		varchar(255);
qt_partic_rep_w		bigint;
vl_cobrado_glosa_w	double precision;
vl_glosa_aj_w		double precision;
nr_seq_lote_guia_w	bigint;
pr_valor_w		double precision;
vl_repasse_amenor_w	double precision;
ie_calc_repasse_w	varchar(1);
ie_data_grg_ret_w	varchar(1);
ds_observacao_w		varchar(3980);
nr_seq_grg_proc_partic_w	grg_proc_partic.nr_sequencia%type;
ie_repasse_partic_grg_w		parametro_faturamento.ie_repasse_partic_grg%type;
dt_baixa_w		timestamp;
dt_conv_ret_w		timestamp;
dt_fechamento_w		timestamp;
ie_data_lib_repasse_ret_w	parametro_faturamento.ie_data_lib_repasse_ret%type;
vl_saldo_amenor_w	lote_audit_hist_item.vl_saldo_amenor%type;
cd_autorizacao_w		varchar(20);
vl_desconto_item_w		convenio_retorno_glosa.vl_desconto_item%type;
vl_desconto_w			procedimento_repasse.vl_desconto%type;
ds_nao_informada_w		varchar(20);
ie_considerar_repasse_w   varchar(1);

c01 CURSOR FOR
SELECT	b.nr_sequencia,
	a.nr_seq_propaci,
	a.vl_glosa,
	a.cd_motivo_glosa,
	a.nr_seq_partic,
	null,
	null,
	null,
	null,
	b.cd_autorizacao,
	coalesce(a.vl_desconto_item,0)
from	motivo_glosa c,
	convenio_retorno_glosa a,
	convenio_retorno_item b
where	a.nr_seq_ret_item	= b.nr_sequencia
and	c.cd_motivo_glosa	= a.cd_motivo_glosa
and	b.nr_seq_retorno	= nr_seq_retorno_p
and	coalesce(nr_seq_ret_glosa_p, a.nr_seq_propaci)	= a.nr_seq_propaci
and	coalesce(a.ie_acao_glosa,c.ie_acao_glosa) = 'A'
and	(a.nr_seq_propaci IS NOT NULL AND a.nr_seq_propaci::text <> '')
and	a.vl_glosa	> 0

union all

SELECT	null,
	a.nr_seq_propaci,
	a.vl_glosa,
	a.cd_motivo_glosa,
	a.nr_seq_partic,
	b.nr_seq_lote_hist,
	b.nr_sequencia,
	null,
	a.vl_saldo_amenor,
	b.cd_autorizacao,
	0
from	lote_audit_hist_guia b,
	lote_audit_hist_item a
where	a.nr_seq_guia	= b.nr_sequencia
and	b.nr_seq_lote_hist	= nr_seq_grg_p
and	(a.nr_seq_propaci IS NOT NULL AND a.nr_seq_propaci::text <> '')
and	((a.vl_glosa	> 0) or (coalesce(a.IE_ACAO_GLOSA::text, '') = '' and coalesce(ie_considerar_repasse_w,'N') = 'S'))
and (coalesce(ie_repasse_partic_grg_w,'N') = 'N' or
	not exists (	select	1
			from	grg_proc_partic x
			where	x.nr_seq_hist_item = a.nr_sequencia
			and	x.vl_glosa > 0
			and	(x.nr_seq_proc IS NOT NULL AND x.nr_seq_proc::text <> '')))

union

select	null,
	c.nr_seq_proc,
	c.vl_glosa,
	a.cd_motivo_glosa,
	c.nr_seq_partic,
	b.nr_seq_lote_hist,
	b.nr_sequencia,
	c.nr_sequencia,
	a.vl_saldo_amenor,
	b.cd_autorizacao,
	0
from	grg_proc_partic c,
	lote_audit_hist_guia b,
	lote_audit_hist_item a
where	a.nr_seq_guia		= b.nr_sequencia
and	a.nr_sequencia		= c.nr_seq_hist_item
and	b.nr_seq_lote_hist	= nr_seq_grg_p
and	(a.nr_seq_propaci IS NOT NULL AND a.nr_seq_propaci::text <> '')
and	(c.nr_seq_proc IS NOT NULL AND c.nr_seq_proc::text <> '')
and	c.vl_glosa		> 0
and	coalesce(ie_repasse_partic_grg_w,'N') = 'S';

c02 CURSOR FOR
SELECT	a.nr_sequencia,
	a.vl_original_repasse,
	a.vl_repasse,
	a.ie_status,
	a.nr_seq_criterio,
	a.nr_seq_partic
from	procedimento_paciente b,
	procedimento_repasse a
where	a.nr_seq_procedimento		= b.nr_sequencia
and	b.nr_sequencia 			= nr_seq_propaci_w
and	((coalesce(a.nr_seq_lote_audit_hist, -1)	<> coalesce(nr_seq_lote_audit_hist_w,-1) and (nr_seq_lote_audit_hist_w IS NOT NULL AND nr_seq_lote_audit_hist_w::text <> ''))	or (coalesce(nr_seq_lote_audit_hist_w::text, '') = ''))
and	((coalesce(a.nr_seq_item_retorno, -1)		<> coalesce(nr_seq_ret_item_w,-1) and (nr_seq_ret_item_w IS NOT NULL AND nr_seq_ret_item_w::text <> '')) or (coalesce(nr_seq_ret_item_w::text, '') = ''))
and	coalesce(a.nr_seq_partic, -1)		= coalesce(nr_seq_partic_w, -1)
and	coalesce(b.nr_doc_convenio,coalesce(cd_autorizacao_w, ds_nao_informada_w)) = coalesce(cd_autorizacao_w, ds_nao_informada_w);


BEGIN

ds_nao_informada_w := substr(obter_desc_expressao(778770),1,20);
ie_considerar_repasse_w := obter_param_usuario(69, 84, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_considerar_repasse_w);

if (nr_seq_retorno_p IS NOT NULL AND nr_seq_retorno_p::text <> '') then

	select	max(coalesce(a.dt_baixa_cr, a.dt_fechamento)),
		max(a.dt_retorno),
		max(a.dt_fechamento),
		max(a.cd_estabelecimento)
	into STRICT	dt_baixa_w,
		dt_conv_ret_w,
		dt_fechamento_w,
		cd_estabelecimento_w
	from	convenio_retorno a
	where	a.nr_sequencia		= nr_seq_retorno_p;

else

	select	max(c.dt_fechamento),
		max(a.cd_estabelecimento)
	into STRICT	dt_retorno_w,
		cd_estabelecimento_w
	from	lote_auditoria a,
		lote_audit_hist c
	where	c.nr_sequencia		= nr_seq_grg_p
	and	a.nr_sequencia		= c.nr_seq_lote_audit;

end if;

select	max(a.ie_data_lib_repasse_ret),
	max(a.ie_repasse_partic_grg)
into STRICT	ie_data_lib_repasse_ret_w,
	ie_repasse_partic_grg_w
from	parametro_faturamento a
where	a.cd_estabelecimento	= cd_estabelecimento_w;

if (nr_seq_retorno_p IS NOT NULL AND nr_seq_retorno_p::text <> '') then

	if (ie_data_lib_repasse_ret_w	= 'F') then

		dt_retorno_w	:= dt_baixa_w;

	elsif (ie_data_lib_repasse_ret_w	= 'R') then

		dt_retorno_w	:= dt_conv_ret_w;

	elsif (ie_data_lib_repasse_ret_w	= 'E') then

		dt_retorno_w	:= dt_fechamento_w;

	end if;

end if;

select	max(ie_calc_base_repasse)
into STRICT	ie_calc_repasse_w
from	parametro_repasse
where	cd_estabelecimento	= cd_estabelecimento_w;

select	coalesce(max(ie_data_lib_repasse_grg),'G')
into STRICT	ie_data_grg_ret_w
from	parametro_repasse
where	cd_estabelecimento	= cd_estabelecimento_w;

if (coalesce(ie_data_grg_ret_w,'G')	= 'R') and (coalesce(nr_seq_retorno_p::text, '') = '') then
	
	select	max(e.dt_baixa_cr)
	into STRICT	dt_retorno_w
	from	convenio_retorno e,
		lote_audit_hist_guia d,
		parametro_faturamento b,
		lote_auditoria a,
		lote_audit_hist c
	where	c.nr_sequencia		= nr_seq_grg_p
	and	d.nr_seq_retorno	= e.nr_sequencia
	and	d.nr_seq_lote_hist	= c.nr_sequencia
	and	a.nr_sequencia		= c.nr_seq_lote_audit
	and	a.cd_estabelecimento	= b.cd_estabelecimento;	
end if;

open c01;
loop
fetch c01 into
	nr_seq_ret_item_w,
	nr_seq_propaci_w,
	vl_glosa_w,
	cd_motivo_glosa_w,
	nr_seq_partic_w,
	nr_seq_lote_audit_hist_w,
	nr_seq_lote_guia_w,
	nr_seq_grg_proc_partic_w,
	vl_saldo_amenor_w,
	cd_autorizacao_w,
	vl_desconto_item_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	select	count(*)
	into STRICT	qt_partic_rep_w
	from	procedimento_repasse a
	where	a.nr_seq_procedimento	= nr_seq_propaci_w
	and	coalesce(a.nr_seq_partic, -1)	<> -1;
	
	select	coalesce(max(vl_cobrado), 0),
		coalesce(max(vl_glosa), 0)
	into STRICT	vl_cobrado_glosa_w,
		vl_glosa_aj_w
	from (SELECT	CASE WHEN a.vl_cobrado=0 THEN a.vl_pago_digitado  ELSE a.vl_cobrado END  vl_cobrado,
			a.vl_glosa
		from	convenio_retorno_glosa a
		where	a.nr_seq_propaci	= nr_seq_propaci_w
		and	coalesce(a.nr_seq_partic,0)	= coalesce(nr_seq_partic_w,0)
		and	a.nr_seq_ret_item	= nr_seq_ret_item_w
		
union all

		SELECT	b.vl_procedimento vl_cobrado,
			a.vl_glosa
		from	procedimento_paciente b,
			lote_audit_hist_item a
		where	a.nr_seq_propaci	= b.nr_sequencia
		and	coalesce(a.nr_seq_partic,0)	= coalesce(nr_seq_partic_w,0)
		and	a.nr_seq_propaci	= nr_seq_propaci_w
		and	a.nr_seq_guia		= nr_seq_lote_guia_w
		and (coalesce(ie_repasse_partic_grg_w,'N') = 'N' or
			not exists (	select	1
					from	grg_proc_partic x
					where	x.nr_seq_hist_item = a.nr_sequencia
					and	x.vl_glosa > 0
					and	(x.nr_seq_proc IS NOT NULL AND x.nr_seq_proc::text <> '')))
		
union
	
		select	d.vl_saldo_orig vl_cobrado,
			d.vl_glosa
		from	grg_proc_partic d,
			procedimento_paciente b,
			lote_audit_hist_item a
		where	d.nr_seq_proc		= nr_seq_propaci_w
		and	d.nr_seq_hist_item	= a.nr_sequencia
		and	a.nr_seq_propaci	= b.nr_sequencia
		and	coalesce(d.nr_seq_partic,0)	= coalesce(nr_seq_partic_w,0)
		and	a.nr_seq_guia		= nr_seq_lote_guia_w
		and	d.nr_sequencia		= nr_seq_grg_proc_partic_w
		and	coalesce(ie_repasse_partic_grg_w,'N') = 'S') alias15;
	
	open c02;
	loop
	fetch c02 into
		nr_seq_proc_repasse_w,
		vl_repasse_w,
		vl_repasse_atual_w,
		ie_status_w,
		nr_seq_criterio_w,
		nr_Seq_partic_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
	
		if (coalesce(vl_cobrado_glosa_w::text, '') = '' or vl_cobrado_glosa_w = 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(403299,'NR_SEQ_ITEM='||nr_seq_propaci_w);
		end if;

		/*
		apenas deve tratar repasses com status 'A' ou 'U' (Aguardando ...), a nao ser que exista regra
		*/
		if	((ie_status_w in ('A','U')) and
			(((coalesce(ie_proc_partic_w,'A') = 'ME') and (coalesce(nr_seq_partic_w::text, '') = '')) or ((coalesce(ie_proc_partic_w,'A') = 'PARTIC') and (nr_seq_partic_w IS NOT NULL AND nr_seq_partic_w::text <> '')) or (coalesce(ie_proc_partic_w,'A') = 'A'))) then

			if (coalesce(vl_repasse_w::text, '') = '') then

				select	sum(a.vl_repasse)
				into STRICT	vl_repasse_w
				from	procedimento_repasse a
				where	a.nr_sequencia		= nr_seq_proc_repasse_w;

				if (coalesce(vl_repasse_w,0) > 0) then

					update	procedimento_repasse
					set	vl_original_repasse	= vl_repasse_w
					where	nr_sequencia	= nr_seq_proc_repasse_w;

				end if;
				
			end if;

			vl_original_w	:= vl_repasse_w;
			
			if (coalesce(vl_repasse_w,0) > 0) then
				
				select	sum(a.vl_repasse)
				into STRICT	vl_repasse_proc_w
				from	procedimento_repasse a
				where	a.nr_sequencia	= nr_seq_proc_repasse_w;
				
				if (coalesce(ie_calc_repasse_w,'N')	= 'S') and (coalesce(vl_repasse_w,0) > coalesce(vl_cobrado_glosa_w,0)) then
					vl_cobrado_glosa_w	:= vl_repasse_w;
				end if;
				
				pr_valor_w	:= ((vl_glosa_w * 100) / vl_cobrado_glosa_w);
				vl_repasse_amenor_w	:= (pr_valor_w/100) * vl_repasse_w;
				
				vl_desconto_w	:= (vl_desconto_item_w/vl_cobrado_glosa_w) * vl_repasse_w;
				
				if (ie_status_w in ('A','U')) then
					
					if (coalesce(vl_cobrado_glosa_w,0) <> coalesce(vl_glosa_aj_w,0)) and
						((coalesce(vl_saldo_amenor_w::text, '') = '') or (coalesce(vl_glosa_aj_w,0) <> coalesce(vl_saldo_amenor_w,0))) then
						
						update	procedimento_repasse
						set	vl_repasse	= vl_repasse - vl_repasse_amenor_w - vl_desconto_w,
							vl_liberado	= vl_repasse - vl_repasse_amenor_w - vl_desconto_w,
							vl_desconto	= vl_desconto_w
						where	nr_sequencia	= nr_seq_proc_repasse_w;
						
						select	coalesce(max(vl_repasse),0)
						into STRICT	vl_repasse_atualizado_w
						from	procedimento_repasse
						where	nr_sequencia	= nr_seq_proc_repasse_w;
						
					else
						update	procedimento_repasse
						set	vl_repasse	= vl_repasse_amenor_w,
							vl_liberado	= 0,
							dt_liberacao	= coalesce(dt_retorno_w, clock_timestamp()),
							ie_status	= 'G'
						where	nr_sequencia	= nr_seq_proc_repasse_w;
						
						
					end if;
				end if;
				
				if (coalesce(vl_cobrado_glosa_w,0) <> coalesce(vl_glosa_aj_w,0)) and
					((coalesce(vl_saldo_amenor_w::text, '') = '') or (coalesce(vl_glosa_aj_w,0) <> coalesce(vl_saldo_amenor_w,0))) then
											
					SELECT * FROM desdobrar_procmat_repasse(	nr_seq_proc_repasse_w, null, coalesce(ie_status_rep_novo_w, 'G'), vl_repasse_amenor_w, nm_usuario_p, nr_seq_proc_rep_novo_w, nr_seq_mat_rep_novo_w) INTO STRICT nr_seq_proc_rep_novo_w, nr_seq_mat_rep_novo_w;
									
					ds_observacao_w := WHEB_MENSAGEM_PCK.get_texto(303666,
											'DS_PROC_P='|| 'LIBERAR_REPASSE_ADIC_PROC' ||
											';NR_SEQ_PROC_REP_NOVO_P='|| nr_seq_proc_rep_novo_w ||
											';VL_CALCULO_ADIC_P='|| vl_novo_repasse_w ||
											';IE_STATUS_REP_NOVO_P='|| coalesce(ie_status_rep_novo_w, 'G'));
					
					CALL GRAVAR_PROC_REPASSE_VALOR(	ds_observacao_w,
									nm_usuario_p,
									ie_status_w,
									ie_status_w,
									vl_repasse_atual_w,
									vl_repasse_atualizado_w,
									nr_seq_retorno_p,
									nr_seq_grg_p,
									nr_seq_proc_repasse_w,
									nr_seq_regra_w);

					if (nr_seq_grg_p IS NOT NULL AND nr_seq_grg_p::text <> '') then

						update	procedimento_repasse
						set	nr_seq_lote_audit_hist	= nr_seq_lote_audit_hist_w,
							vl_original_repasse	= vl_original_w
						where	nr_sequencia		= nr_seq_proc_rep_novo_w;

					else

						update	procedimento_repasse
						set	nr_seq_item_retorno	= nr_seq_ret_item_w,
							vl_original_repasse	= vl_original_w
						where	nr_sequencia		= nr_seq_proc_rep_novo_w;

					end if;
					
				end if;

			end if;

		end if;

	end loop;
	close c02;

end loop;
close c01;

end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_repasse_glosado_proc ( nr_seq_retorno_p bigint, nr_seq_grg_p bigint, nr_seq_ret_glosa_p bigint, nm_usuario_p text) FROM PUBLIC;

