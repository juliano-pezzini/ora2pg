-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_aplicar_fil_conta ( dados_regra_p pls_tipos_ocor_pck.dados_regra, dados_filtro_p pls_tipos_ocor_pck.dados_filtro, dados_consistencia_p pls_tipos_ocor_pck.dados_consistencia, dados_forma_geracao_ocor_p pls_tipos_ocor_pck.dados_forma_geracao_ocor, ie_incidencia_regra_p text, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, qt_registro_selecao_p integer default null) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Verificar se a conta se encaixa nos filtros espec_ficos de conta para
as ocorr_ncias combinadas de conta m_dica.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  X]  Objetos do dicion_rio [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relat_rios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de aten__o:

N_o incluir restri__es nessa procedure, ela _ respons_vel apenas  por passar no cursor
dos filtros de conta e incluir na sele__o das contas que devem ter a ocorr_ncia gerada.

Respeitar o conceito de granularidade dos dados durante a montagem das restri__es, deve ser respeitado a
ordem de acesso as tabelas, olhando sempre do maior n_vel para o menor, come_ando do lote para o protocolo,
da_ para a conta, para os itens e enfim os participantes.

Altera__es:
------------------------------------------------------------------------------------------------------------------

jjung OS 601441 06/06/2013 -
Altera__o:	Linha: 103
	Alterado par_metro ie_tipo_registro_p  da rotina
	PLS_TIPOS_OCOR_PCK.GERENCIA_SELECAO_REGISTROS para usar o valor
	do parameto ie_incidencia_regra_p.
Motivo:
	Para que a ocorr_ncia seja lan_ada para o item ou para a conta de maneira correta.
------------------------------------------------------------------------------------------------------------------

jjung OS 601977 10/06/2013 -
Altera__o: 	Linhas 60 e 113 - Inclu_do tratamento para alimenta__o do campo ie_valido_temp

Motivo: 	Para que quando o registro for v_lido para um filtro e n_o for v_lido para o outro
	o campo ie_valido da tabela de selecao fique como N para que n_o seja gerada
	ocorrencia para o item.
------------------------------------------------------------------------------------------------------------------

jjung OS 601998 14/06/2013 -
Altera__o: 	Alterado forma de aplicar os filtros para usar a restri__o  dentro dos select que ser_ obtido
	e n_o concatenar a restri__o no select padr_o.

Motivo: 	Quando a valida__o for aplicada em procedimentos ou materiais para que seja poss_vel aplicar
	os filtros corretos conforme os cadastros do usu_rio .
------------------------------------------------------------------------------------------------------------------

jjung OS 602057 18/06/2013 -

Altera__o:	Foi inclu_do par_metro na procedure pls_tipos_ocor_pck.gerencia_selecao_registros
	para utilizar retorno da function pls_tipos_ocor_pck.obter_se_valido.

Motivo:	A l_gica deste tratamento foi removida da procedure de gerenciamento de selecao dos registros
	para que evitasse problemas e confus_o nas valida__es.
------------------------------------------------------------------------------------------------------------------

jjung 29/06/2013

Altera__o:	Adicionado parametro nos m_todos de atualiza__o dos campos IE_VALIDO e IE_VALIDO_TEMP
	da PLS_TIPOS_OCOR_PCK

Motivo:	Se tornou necess_rio diferenciar os filtros das valida__es na hora de realizar esta opera__o
	para que os filtros de exce__o funcionem corretamente.
------------------------------------------------------------------------------------------------------------------

jjung 10/07/2013

Altera__o:	Modificado lugar de chamada da atualiza__o dos campos ie_valido_temp e ie_valido da tabela
	de sele__o para fora do for.

Motivo:	Foi identificado que quando um filtro tinha mais de uma regrinha cadastrado para ele n_o estava
	funcionando corretamente.
------------------------------------------------------------------------------------------------------------------

jjung OS 604666 - 29/07/2013 -

Altera__o:	Substitu_do rotinas de manipula__o de restri__es e selects din_micos para as novas:
	PLS_OC_CTA_MONTAR_SEL_PAD e PLS_OC_CTA_OBTER_RESTR_PADRAO.

Motivo:	Surgiu a necessidade de separar as restri__es devido a cria__o de reconsist_ncia das ocorr_ncias
	durante a__es no processo de an_lise. Como deparamos com um cen_rio diferente do anterior
	decidimos que seriam criadas novas rotinas para n_o estragarmos o estado atual e para que pud_ssemos
	atender da melhor forma as novas necessidades das ocorr_ncias.
------------------------------------------------------------------------------------------------------------------

jjung OS 651768 - 18/10/2013 -

Altera__o:	Substitu_do a forma de grava__o dos registros no banco para ser feito com arrays e utilizar
	a estrutura do DEFINE_ARRAY para alimentar as listas em apenas um comando COLUMN_VALUE

Motivo:	Foi identificado que grande parte do consumo de recursos da gera__o da ocorr_ncia combinada
	estava sendo consumido em acessos ao banco para gravar e atualizar a tabela de sele__o. Foi utilizado
	ent_o o comando FORALL que grava e atualiza todos os registros de uma lista no banco em apenas um
	acesso ao contexto SQL.
------------------------------------------------------------------------------------------------------------------

jjung OS 666950 - 13/11/2013 -

Altera__o:	Foi recolocado a chamada para a procedure PLS_TIPOS_OCOR_PCK.ATUALIZA_SEL_IE_VALIDO_TEMP.

Motivo:	Foi identificado que a falta da execu__o desta rotina ocasionava em falhas no processo
	de gera__o da ocorr_ncia onde existiam dois filtros no n_vel da conta, onde por conta  o registro era v_lido
	e pela outra caracter_stica o item n_o era atendido, desta forma ainda estava sendo gerada a ocorr_ncia.
------------------------------------------------------------------------------------------------------------------

jjung OS 709376 - 03/03/2014

Altera__o:	Adicionado par_metro dados_forma_geracao_p para passar at_ na pls_oc_cta_obter_restr_padrao

Motivo:	Como no campo Consist_ncia web na regra pode ser informado Ambos o mais correto _ tratar
	pelo evento sendo executado e n_o pelo evento informado na regra.
 ------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
PERFORM_completo_w	varchar(4000);
dados_restricao_w	pls_tipos_ocor_pck.dados_restricao_select;

ret_null_w		varchar(1);

var_cur_w 		integer;
var_exec_w		integer;
var_retorno_w		integer;
qt_cnt_w		integer;

nr_seq_conta_w		dbms_sql.number_table;
nr_seq_conta_proc_w	dbms_sql.number_table;
nr_seq_conta_mat_w	dbms_sql.number_table;
nr_seq_selecao_w	dbms_sql.clob_table;
ds_observacao_w		dbms_sql.varchar2_table;

dados_filtro_conta_w	pls_tipos_ocor_pck.dados_filtro_conta;

-- Dados da PLS_OC_CTA_FILTRO_CONTA respons_vel por armazenar os dados dos filtros criados pelos usu_rios
c_filtro CURSOR(nr_seq_filtro_pc	pls_oc_cta_filtro.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia,
		a.ie_tipo_guia,
		a.cd_doenca_cid,
		a.nr_seq_tipo_atendimento,
		a.ie_regime_internacao,
		a.ie_tipo_internado,
		a.ie_carater_internacao,
		a.ie_tipo_consulta,
		a.nr_seq_saida_int,
		a.nr_seq_clinica,
		a.ie_origem_conta,
		a.ie_tipo_conta,
		a.ie_internacao_obstetrica,
		a.nr_seq_tipo_acomod_conta,
		a.nr_seq_grupo_doenca,
		a.ie_internado,
		a.ie_indicador_dorn,
		a.ie_indicacao_acidente,
		a.ie_conta_autorizada,
		a.ie_saude_ocupacional,
		a.ie_regime_atendimento
	from	pls_oc_cta_filtro_conta a
	where	a.nr_seq_oc_cta_filtro	= nr_seq_filtro_pc;

BEGIN

-- Se n_o tiver informa__es da regra n_o ser_ poss_vel aplicar os filtros.
if (dados_filtro_p.nr_sequencia IS NOT NULL AND dados_filtro_p.nr_sequencia::text <> '') then

	-- Obter o controle padr_o para quantidade de registros que ser_ enviada a cada vez para a tabela de sele__o.
	qt_cnt_w := pls_cta_consistir_pck.qt_registro_transacao_w;

	-- Atualizar o campo ie_valido_temp.
	CALL pls_tipos_ocor_pck.atualiza_sel_ie_valido_temp(nr_id_transacao_p, dados_filtro_p, 'F', dados_regra_p);

	-- Abrir vetor com todas as combina__es de filtro da regra
	for r_c_filtro in c_filtro(dados_filtro_p.nr_sequencia) loop

		-- Preencher dados do filtro para passar como par_metro
		dados_filtro_conta_w.nr_sequencia		:= r_c_filtro.nr_sequencia;
		dados_filtro_conta_w.ie_tipo_guia		:= r_c_filtro.ie_tipo_guia;
		dados_filtro_conta_w.cd_doenca_cid		:= r_c_filtro.cd_doenca_cid;
		dados_filtro_conta_w.nr_seq_tipo_atendimento	:= r_c_filtro.nr_seq_tipo_atendimento;
		dados_filtro_conta_w.ie_regime_internacao	:= r_c_filtro.ie_regime_internacao;
		dados_filtro_conta_w.ie_tipo_internado		:= r_c_filtro.ie_tipo_internado;
		dados_filtro_conta_w.ie_carater_internacao	:= r_c_filtro.ie_carater_internacao;
		dados_filtro_conta_w.ie_tipo_consulta		:= r_c_filtro.ie_tipo_consulta;
		dados_filtro_conta_w.nr_seq_saida_int		:= r_c_filtro.nr_seq_saida_int;
		dados_filtro_conta_w.nr_seq_clinica		:= r_c_filtro.nr_seq_clinica;
		dados_filtro_conta_w.ie_origem_conta		:= r_c_filtro.ie_origem_conta;
		dados_filtro_conta_w.ie_tipo_conta		:= r_c_filtro.ie_tipo_conta;
		dados_filtro_conta_w.ie_internacao_obstetrica	:= r_c_filtro.ie_internacao_obstetrica;
		dados_filtro_conta_w.nr_seq_tipo_acomod_conta	:= r_c_filtro.nr_seq_tipo_acomod_conta;
		dados_filtro_conta_w.nr_seq_grupo_doenca	:= r_c_filtro.nr_seq_grupo_doenca;
		dados_filtro_conta_w.ie_internado		:= r_c_filtro.ie_internado;
		dados_filtro_conta_w.ie_indicador_dorn		:= r_c_filtro.ie_indicador_dorn;
		dados_filtro_conta_w.ie_indicacao_acidente	:= r_c_filtro.ie_indicacao_acidente;
		dados_filtro_conta_w.ie_conta_autorizada	:= r_c_filtro.ie_conta_autorizada;
		dados_filtro_conta_w.ie_regime_atendimento	:= r_c_filtro.ie_regime_atendimento;
		dados_filtro_conta_w.ie_saude_ocupacional	:= r_c_filtro.ie_saude_ocupacional;
		

		-- Obter restri__es
		dados_restricao_w := pls_oc_cta_obter_restr_padrao(
						'RESTRICAO', dados_consistencia_p, nr_id_transacao_p, dados_regra_p,
						ie_incidencia_regra_p, null, dados_filtro_p, dados_forma_geracao_ocor_p,
						cd_estabelecimento_p, nm_usuario_p, 'S', 'N', qt_registro_selecao_p);

		-- Como a restri__o por conta _ aplic_vel para o n_vel de conta ent_o a restri__o montada pelo filtro ser_ aplicada juntamente com a restri__o padr_o por conta, pois conforme

		-- a regra de granularidade eliminando a conta n_o precisamos verificar os itens, portanto cada tipo de filtro deve ser aplicado ao seu n_vel.
		dados_restricao_w.ds_restricao_conta	:= dados_restricao_w.ds_restricao_conta || pls_oc_cta_obter_restr_conta('RESTRICAO',dados_regra_p,var_cur_w,dados_filtro_conta_w);

		-- Montar select
		PERFORM_completo_w := pls_tipos_ocor_pck.montar_select_padrao(dados_regra_p, dados_filtro_p, ie_incidencia_regra_p, dados_restricao_w, nm_usuario_p);

		var_cur_w := dbms_sql.open_cursor;

		begin
			-- Criar cursor com o sql din_mico
			dbms_sql.parse(var_cur_w, select_completo_w, 1);

			--Trocar BINDS

			-- Do select original
			dados_restricao_w := pls_oc_cta_obter_restr_padrao(
							'BINDS', dados_consistencia_p, nr_id_transacao_p, dados_regra_p,
							ie_incidencia_regra_p, var_cur_w, dados_filtro_p, dados_forma_geracao_ocor_p,
							cd_estabelecimento_p, nm_usuario_p, 'S', 'N', qt_registro_selecao_p);
			-- Dos Filtros
			ret_null_w := pls_oc_cta_obter_restr_conta('BIND', dados_regra_p, var_cur_w, dados_filtro_conta_w);

			-- Definir para o DBMS_SQL que o retorno do select ser_  preenchido em arrays, definindo a quantidade de linhas que o array ter_ a cada itera__o do loop

			-- e a posi__o inicial que estes ocupar_o no array.
			dbms_sql.define_array(var_cur_w, 1, nr_seq_conta_w, qt_cnt_w, 1);
			dbms_sql.define_array(var_cur_w, 2, nr_seq_conta_proc_w, qt_cnt_w, 1);
			dbms_sql.define_array(var_cur_w, 3, nr_seq_conta_mat_w, qt_cnt_w, 1);
			dbms_sql.define_array(var_cur_w, 4, ds_observacao_w, qt_cnt_w, 1);
			dbms_sql.define_array(var_cur_w, 5, nr_seq_selecao_w, qt_cnt_w, 1);

			var_exec_w := dbms_sql.execute(var_cur_w);
			loop
			-- O fetch rows ir_ preencher os buffers do Oracle com as linhas que ser_o passadas para a lista quando o COLUMN_VALUE for chamado.
			var_retorno_w := dbms_sql.fetch_rows(var_cur_w);

				-- zerar as listas para que o mesmo valor n_o seja inserido mais de uma vez na tabela.
				nr_seq_conta_w.delete;
				nr_seq_conta_proc_w.delete;
				nr_seq_conta_mat_w.delete;
				ds_observacao_w.delete;
				nr_seq_selecao_w.delete;

				-- Obter as listas que foram populadas.
				dbms_sql.column_value(var_cur_w, 1, nr_seq_conta_w);
				dbms_sql.column_value(var_cur_w, 2, nr_seq_conta_proc_w);
				dbms_sql.column_value(var_cur_w, 3, nr_seq_conta_mat_w);
				dbms_sql.column_value(var_cur_w, 4, ds_observacao_w);
				dbms_sql.column_value(var_cur_w, 5, nr_seq_selecao_w);

				-- Insere todos os registros das listas na tabela de sele__o em um _nico insert.
				pls_tipos_ocor_pck.gerencia_selecao(	nr_id_transacao_p, nr_seq_conta_w ,
									nr_seq_conta_proc_w, nr_seq_conta_mat_w,
									nr_seq_selecao_w, ds_observacao_w, 'S',
									nm_usuario_p, 'F', dados_filtro_p, dados_regra_p);

				-- Quando n_mero de linhas que foram aplicadas no array for diferente do definido significa que esta foi a _ltima itera__o do loop e que todas as linhas foram

				-- passadas.
				exit when var_retorno_w != qt_cnt_w;
			end loop; -- Contas filtradas
			dbms_sql.close_cursor(var_cur_w);
		exception
			when others then

			-- Fechar os cursores que continuam abertos, os cursores que utilizam FOR - LOOP n_o necessitam serem fechados, ser_o fechados autom_ticamente.

			-- Contas.
			if (dbms_sql.is_open(var_cur_w)) then
				dbms_sql.close_cursor(var_cur_w);
			end if;

			-- Tratar erro gerado no sql din_mico, ser_ inserido registro no log e abortado o processo exibindo mensagem de erro.
			CALL pls_tipos_ocor_pck.trata_erro_sql_dinamico(dados_regra_p, select_completo_w, nr_id_transacao_p, nm_usuario_p);
		end;
	end loop; -- filtro

	-- Atualiza o campo ie_valido da tabela PLS_SELECAO_OCOR_CTA para N aonde o ie_valido_temp continuar N
	CALL pls_tipos_ocor_pck.atualiza_sel_ie_valido(nr_id_transacao_p, dados_filtro_p, 'F', dados_regra_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_aplicar_fil_conta ( dados_regra_p pls_tipos_ocor_pck.dados_regra, dados_filtro_p pls_tipos_ocor_pck.dados_filtro, dados_consistencia_p pls_tipos_ocor_pck.dados_consistencia, dados_forma_geracao_ocor_p pls_tipos_ocor_pck.dados_forma_geracao_ocor, ie_incidencia_regra_p text, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, qt_registro_selecao_p integer default null) FROM PUBLIC;

