-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_importar_ordem_servico ( ds_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_retorno_p INOUT bigint) AS $body$
DECLARE

 
cd_transacao_w			varchar(5);
ie_tipo_cliente_w		varchar(15);
cd_unimed_exec_w		varchar(10);
cd_unimed_benef_w		varchar(4);
nr_ident_exec_w			bigint;
cd_unimed_w			smallint;
cd_usuario_plano_w		varchar(17);
nr_via_cartao_w			smallint;
nm_beneficiario_w		varchar(80);
cd_cid_w			varchar(5);
cd_unimed_prestador_req_w	bigint;
nr_seq_prestador_req_w		bigint;
cd_unimed_prestador_w		bigint;
nr_seq_prestador_w		bigint;
cd_especialidade_medica_w	smallint;
ie_urgencia_emergencia_w	varchar(1);
dt_prov_atendimento_w		timestamp;
dt_validade_w			timestamp;
dt_atendimento_w		varchar(8);
dt_atendimento_ww		varchar(8);
ie_existe_benef_w		varchar(2);
ie_tipo_tabela_w		varchar(2);
cd_servico_w			integer;
qt_servico_w			smallint;
ds_opme_w			varchar(4);
ds_conteudo_w			varchar(4000);
nr_seq_segurado_w		bigint;
nr_seq_plano_w			bigint;
cd_medico_solic_w		smallint;
nr_seq_ordem_serv_w		bigint;
ds_observacao_w			varchar(255);
ds_indicacao_clinica_w		varchar(255);
ie_origem_proced_w		bigint;
nr_seq_importacao_w		bigint;
nr_seq_uni_exec_w		bigint;
cd_carteirinha_w		varchar(13);
qt_reg_consulta_w		smallint;
qt_reg_internacao_w		smallint;
ie_insere_w			varchar(2);

c01 CURSOR FOR 
	SELECT	nr_seq_importacao, 
		ds_valores 
	from	w_scs_importacao 
	where	nm_usuario	= nm_usuario_p 
	order by nr_seq_importacao;


BEGIN 
 
open c01;
loop 
fetch c01 into 
	nr_seq_importacao_w, 
	ds_conteudo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
 
	if (substr(ds_conteudo_w,1,4)	<> 'FIM$') then 
		if (nr_seq_importacao_w	= 1) then 
			select 	substr(ds_conteudo_w,1,5), 
				trim(both substr(ds_conteudo_w,6,15)), 
				trim(both substr(ds_conteudo_w,21,4)), 
				CASE WHEN (substr(ds_conteudo_w,25,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,25,4))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,29,10))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,29,10))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,39,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,39,4))::numeric  END , 
				trim(both substr(ds_conteudo_w,43,13)), 
				CASE WHEN (substr(ds_conteudo_w,56,2))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,56,2))::numeric  END , 
				trim(both substr(ds_conteudo_w,58,25)), 
				trim(both substr(ds_conteudo_w,83,4)), 
				CASE WHEN (substr(ds_conteudo_w,87,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,87,4))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,91,8))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,91,8))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,99,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,99,4))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,103,8))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,103,8))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,111,2))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,111,2))::numeric  END , 
				trim(both substr(ds_conteudo_w,113,1)) 
			into STRICT  cd_transacao_w, 
				ie_tipo_cliente_w, 
				cd_unimed_benef_w, 
				cd_unimed_exec_w, 
				nr_ident_exec_w, 
				cd_unimed_w, 
				cd_carteirinha_w, 
				nr_via_cartao_w, 
				nm_beneficiario_w, 
				cd_cid_w, 
				cd_unimed_prestador_req_w, 
				nr_seq_prestador_req_w, 
				cd_unimed_prestador_w, 
				nr_seq_prestador_w, 
				cd_especialidade_medica_w, 
				ie_urgencia_emergencia_w 
			;
			 
			begin 
			select	nr_sequencia 
			into STRICT	nr_seq_ordem_serv_w 
			from	ptu_requisicao_ordem_serv 
			where	nr_seq_origem	= nr_ident_exec_w;
			exception 
			when others then 
				nr_seq_ordem_serv_w	:= null;
			end;
			 
			if (nr_seq_ordem_serv_w IS NOT NULL AND nr_seq_ordem_serv_w::text <> '') then 
				goto final;
			end if;
			 
			dt_atendimento_w	:= trim(both substr(ds_conteudo_w,120,2)||substr(ds_conteudo_w,118,2)||substr(ds_conteudo_w,114,4));
			if (dt_atendimento_w IS NOT NULL AND dt_atendimento_w::text <> '') then 
				dt_prov_atendimento_w	:= to_date(dt_atendimento_w, 'dd/mm/yyyy hh24:mi:ss');
			end if;
			 
			dt_atendimento_ww	:= trim(both substr(ds_conteudo_w,128,2)||substr(ds_conteudo_w,126,2)||substr(ds_conteudo_w,122,4));
			if (dt_atendimento_ww IS NOT NULL AND dt_atendimento_ww::text <> '') then 
				dt_validade_w		:= to_date(dt_atendimento_ww, 'dd/mm/yyyy');
			end if;
			 
			cd_unimed_w		:= adiciona_zeros_esquerda(cd_unimed_w, 4);
			cd_usuario_plano_w	:= cd_unimed_w||cd_carteirinha_w;
			 
			ie_existe_benef_w	:= ptu_obter_se_benef_existe(cd_usuario_plano_w, cd_estabelecimento_p);
			 
			if (ie_existe_benef_w	 = 'S') then 
				select	b.nr_sequencia, 
					b.nr_seq_plano 
				into STRICT	nr_seq_segurado_w, 
					nr_seq_plano_w 
				from  pls_segurado_carteira a, 
					pls_segurado b 
				where  a.cd_usuario_plano	= cd_usuario_plano_w 
				and   a.nr_seq_segurado	= b.nr_sequencia 
				and	coalesce(b.dt_rescisao::text, '') = '' 
				and	coalesce(b.dt_cancelamento::text, '') = '' 
				and 	b.cd_estabelecimento	= cd_estabelecimento_p;
 
				begin 
				select	cd_pessoa_fisica 
				into STRICT	cd_medico_solic_w 
				from  pls_prestador 
				where  nr_sequencia	= nr_seq_prestador_req_w;
				exception 
				when others then 
					cd_medico_solic_w	:= '';
				end;
			elsif (ie_existe_benef_w	 = 'N') then 
				nr_seq_segurado_w := ptu_gerar_novo_beneficiario(	nm_beneficiario_w, cd_unimed_benef_w, cd_usuario_plano_w, cd_unimed_exec_w, dt_validade_w, cd_estabelecimento_p, nm_usuario_p, nr_via_cartao_w, nr_seq_segurado_w);
			end if;
 
			select	nextval('pls_guia_plano_seq') 
			into STRICT	nr_seq_retorno_p 
			;
 
			select	nextval('ptu_requisicao_ordem_serv_seq') 
			into STRICT	nr_seq_ordem_serv_w 
			;
			 
			select	nr_sequencia 
			into STRICT	nr_seq_uni_exec_w 
			from	pls_congenere 
			where	(cd_cooperativa)::numeric 	= cd_unimed_exec_w;
 
			insert	into pls_guia_plano(nr_sequencia, cd_guia, dt_solicitacao, 
				 ie_tipo_guia, nr_seq_segurado, cd_estabelecimento, 
				 nr_seq_plano, nr_seq_prestador, ie_status, 
				 ie_estagio, dt_atualizacao, nm_usuario, 
				 ie_tipo_processo, cd_medico_solicitante, dt_validade_senha, 
				 nr_seq_uni_exec, ie_tipo_intercambio, ie_origem_solic) 
			values (nr_seq_retorno_p, nr_seq_retorno_p, dt_prov_atendimento_w, 
				 '2', nr_seq_segurado_w, cd_estabelecimento_p, 
				 nr_seq_plano_w, nr_seq_prestador_w, '2', 
				 7, clock_timestamp(), nm_usuario_p, 
				 'I', cd_medico_solic_w, dt_validade_w, 
				 nr_seq_uni_exec_w, 'E', 'I');
 
			if (cd_cid_w IS NOT NULL AND cd_cid_w::text <> '') then 
				insert	into pls_diagnostico(nr_sequencia, dt_atualizacao, nm_usuario, 
				 	 ie_tipo_doenca, ie_indicacao_acidente, cd_doenca, 
					 nr_seq_guia) 
				values (nextval('pls_diagnostico_seq'), clock_timestamp(), nm_usuario_p, 
					 '', '', cd_cid_w, 
					 nr_seq_retorno_p);
			end if;
 
			if (ie_tipo_cliente_w	= 'UNIMED') then 
				ie_tipo_cliente_w	:= 'U';
			elsif (ie_tipo_cliente_w	= 'PORTAL') then 
				ie_tipo_cliente_w	:= 'P';
			elsif (ie_tipo_cliente_w	= 'PRESTADOR') then 
				ie_tipo_cliente_w	:= 'R';
			end if;
 
			insert	into ptu_requisicao_ordem_serv(nr_sequencia, cd_transacao, ie_tipo_cliente, 
				 cd_unimed_executora, cd_unimed_beneficiario, cd_unimed, 
				 cd_usuario_plano, nr_via_cartao, nr_seq_origem, 
				 dt_atualizacao, nm_usuario, ie_urg_emerg, 
				 dt_validade, nm_benficiario, dt_prov_atendimento, 
				 cd_doenca_cid, cd_unimed_prestador_req, nr_seq_prestador_req, 
				 cd_unimed_prestador, nr_seq_prestador, cd_especialidade, 
				 nr_seq_guia, ds_arquivo_pedido) 
			values (nr_seq_ordem_serv_w, cd_transacao_w, ie_tipo_cliente_w, 
				 cd_unimed_benef_w, (cd_unimed_exec_w)::numeric , cd_unimed_w, 
				 cd_carteirinha_w, nr_via_cartao_w, nr_ident_exec_w, 
				 clock_timestamp(), nm_usuario_p, ie_urgencia_emergencia_w, 
				 coalesce(dt_validade_w,clock_timestamp()), nm_beneficiario_w, dt_prov_atendimento_w, 
				 cd_cid_w, cd_unimed_prestador_req_w, nr_seq_prestador_req_w, 
				 cd_unimed_prestador_w, nr_seq_prestador_w, cd_especialidade_medica_w, 
				 nr_seq_retorno_p, ds_arquivo_p);
		elsif (nr_seq_importacao_w	= 2) then 
			begin 
			select	ds_observacao 
			into STRICT	ds_observacao_w 
			from	ptu_requisicao_ordem_serv 
			where	nr_sequencia	= nr_seq_ordem_serv_w;
			exception 
			when others then 
				ds_observacao_w	:= '';
			end;
 
			if (ds_observacao_w	= '') then 
				select	coalesce(trim(both substr(ds_conteudo_w,1,255)),' ') 
				into STRICT	ds_observacao_w 
				;
 
				update	ptu_requisicao_ordem_serv 
				set	ds_observacao	= ds_observacao_w 
				where	nr_sequencia	= nr_seq_ordem_serv_w;
 
				update	pls_guia_plano 
				set	ds_observacao	= ds_observacao_w 
				where	nr_sequencia	= nr_seq_retorno_p;
 
			end if;
		elsif (nr_seq_importacao_w	= 3) then 
			begin 
			select	ds_ind_clinica 
			into STRICT	ds_indicacao_clinica_w 
			from	ptu_requisicao_ordem_serv 
			where	nr_sequencia	= nr_seq_ordem_serv_w;
			exception 
			when others then 
				ds_indicacao_clinica_w	:= '';
			end;
 
			if (ds_indicacao_clinica_w	= '') then 
				select	coalesce(trim(both substr(ds_conteudo_w,1,255)),' ') 
				into STRICT	ds_indicacao_clinica_w 
				;
 
				update	ptu_requisicao_ordem_serv 
				set	ds_ind_clinica	= ds_indicacao_clinica_w 
				where	nr_sequencia	= nr_seq_ordem_serv_w;
 
				update	pls_guia_plano 
				set	ds_indicacao_clinica	= ds_indicacao_clinica_w 
				where	nr_sequencia		= nr_seq_retorno_p;
			end if;
		elsif (nr_seq_importacao_w	> 3) and (substr(ds_conteudo_w,1,1) in ('0','1','2','3', '4')) then 
			select	substr(ds_conteudo_w,1,1), 
				CASE WHEN (substr(ds_conteudo_w,2,8))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,2,8))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,10,8))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,10,8))::numeric  END , 
				trim(both substr(ds_conteudo_w,18,80)) 
			into STRICT	ie_tipo_tabela_w, 
				cd_servico_w, 
				qt_servico_w, 
				ds_opme_w 
			;
 
			if (ie_tipo_tabela_w	in ('0','1')) then 
				select	max(ie_origem_proced) 
				into STRICT	ie_origem_proced_w 
				from  procedimento 
				where  cd_procedimento	= cd_servico_w 
				and	ie_situacao	= 'A' 
				and	ie_origem_proced	in (1,4,5);
 
				insert	into pls_guia_plano_proc(nr_sequencia, cd_procedimento, qt_solicitada, 
					 ie_status, nr_seq_guia, dt_atualizacao, 
					 nm_usuario, ie_origem_proced, qt_autorizada) 
				values (nextval('pls_guia_plano_proc_seq'), cd_servico_w, qt_servico_w, 
					'U', nr_seq_retorno_p, clock_timestamp(), 
					nm_usuario_p, ie_origem_proced_w, qt_servico_w);
 
				insert	into ptu_req_ord_serv_servico(nr_sequencia, cd_servico, ds_opme, 
					 ie_tipo_tabela, nm_usuario, nr_seq_req_ord, 
					 dt_atualizacao, qt_servico_aut) 
				values (nextval('ptu_pedido_aut_servico_seq'), cd_servico_w, ds_opme_w, 
					 ie_tipo_tabela_w, nm_usuario_p, nr_seq_ordem_serv_w, 
					 clock_timestamp(), qt_servico_w);
			elsif (ie_tipo_tabela_w	in ('2','3')) then 
				insert	into pls_guia_plano_mat(nr_sequencia, nr_seq_material, qt_solicitada, 
					 ie_status, nr_seq_guia, dt_atualizacao, 
					 nm_usuario, qt_autorizada) 
				values (nextval('pls_guia_plano_mat_seq'), cd_servico_w, qt_servico_w, 
					 'U', nr_seq_retorno_p, clock_timestamp(), 
					 nm_usuario_p, qt_servico_w);
 
				insert	into ptu_req_ord_serv_servico(nr_sequencia, cd_servico, ds_opme, 
					 ie_tipo_tabela, nm_usuario, nr_seq_req_ord, 
					 dt_atualizacao, qt_servico_aut) 
				values (nextval('ptu_pedido_aut_servico_seq'), cd_servico_w, ds_opme_w, 
					 ie_tipo_tabela_w, nm_usuario_p, nr_seq_ordem_serv_w, 
					 clock_timestamp(), qt_servico_w);
			end if;
		end if;
	end if;
 
	end;
end loop;
close c01;
 
select	count(*) 
into STRICT	qt_reg_consulta_w 
from	pls_guia_plano_proc	a, 
	procedimento		b 
where	nr_seq_guia		= nr_seq_retorno_p 
and	a.cd_procedimento	= b.cd_procedimento 
and	b.ie_origem_proced	= a.ie_origem_proced 
and	b.cd_tipo_procedimento	= 71;
 
select	count(*) 
into STRICT	qt_reg_internacao_w 
from	pls_guia_plano_proc	a, 
	procedimento		b 
where	nr_seq_guia		= nr_seq_retorno_p 
and	a.cd_procedimento	= b.cd_procedimento 
and	b.ie_origem_proced	= a.ie_origem_proced 
and	b.cd_tipo_procedimento	in (37,38);
 
if (qt_reg_internacao_w	> 0) then 
	update	pls_guia_plano 
	set	ie_tipo_guia	= '1' 
	where	nr_sequencia	= nr_seq_retorno_p;
elsif (qt_reg_consulta_w	= 1) and (qt_reg_internacao_w	= 0) then 
	update	pls_guia_plano 
	set	ie_tipo_guia	= '3' 
	where	nr_sequencia	= nr_seq_retorno_p;
end if;
 
--pls_consistir_guia(nr_seq_retorno_p, cd_estabelecimento_p, nm_usuario_p); 
CALL ptu_gerar_resp_ordem_serv(nr_seq_ordem_serv_w, cd_estabelecimento_p, nm_usuario_p);
 
<<final>> 
ie_insere_w	:= 'N';
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_importar_ordem_servico ( ds_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_retorno_p INOUT bigint) FROM PUBLIC;

