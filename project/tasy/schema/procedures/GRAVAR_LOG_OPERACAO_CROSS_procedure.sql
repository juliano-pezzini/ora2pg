-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_log_operacao_cross (nm_usuario_p text, nr_ident_recebimento_p bigint, nr_ident_movimentacao_p bigint, nr_ident_internacao_p text, cd_pessoa_cross_p text, id_leito_cross_p bigint, cd_motivo_cross_p bigint, ds_motivo_cross_p text, cd_tipo_mov_p text) AS $body$
DECLARE


  nr_atendimento_w   bigint;
  nr_seq_envio_w     bigint;
  cd_pessoa_fisica_w varchar(10);
  nr_seq_interno_w   bigint;
  ie_temporario_w    varchar(1);
  cd_evento_w        varchar(10);


BEGIN

  COMMIT;

  SELECT MAX(nr_seq_envio)
    INTO STRICT nr_seq_envio_w
    FROM log_envio_cross
   WHERE nr_ident_recebimento = nr_ident_recebimento_p;

  --internação
  IF (cd_tipo_mov_p = '1' OR
      cd_tipo_mov_p = '5' OR
      cd_tipo_mov_p = '3' OR
      cd_tipo_mov_p = '6') THEN

    SELECT MAX(nr_atendimento),
           MAX(cd_pessoa_fisica),
           MAX(nr_seq_interno),
           MAX(cd_evento)
      INTO STRICT nr_atendimento_w,
           cd_pessoa_fisica_w,
           nr_seq_interno_w,
           cd_evento_w
      FROM dados_envio_cross
     WHERE nr_sequencia = nr_seq_envio_w;

    IF (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') THEN
      IF (nr_ident_internacao_p IS NOT NULL AND nr_ident_internacao_p::text <> '') AND (nr_ident_internacao_p <> '0') THEN
        UPDATE atendimento_paciente
           SET nr_int_cross = nr_ident_internacao_p
         WHERE nr_atendimento = nr_atendimento_w;
      END IF;

      IF (cd_evento_w <> '278') THEN
        nr_seq_interno_w := obter_atepacu_paciente(nr_atendimento_w, 'A');
      END IF;

      SELECT MAX(obter_temporario_unidade(cd_setor_atendimento,
                                          cd_unidade_basica,
                                          cd_unidade_compl))
        INTO STRICT ie_temporario_w
        FROM atend_paciente_unidade
       WHERE nr_seq_interno = nr_seq_interno_w;
      IF (ie_temporario_w = 'S') THEN
        BEGIN
          IF (id_leito_cross_p > 0) THEN
            UPDATE atend_paciente_unidade
               SET id_leito_temp_cross = id_leito_cross_p
             WHERE nr_atendimento = nr_atendimento_w
               AND nr_seq_interno = nr_seq_interno_w
               AND ie_temporario_w = 'S';
          END IF;
        END;
      END IF;

      CALL wheb_usuario_pck.set_ie_executar_trigger('N');
      UPDATE pessoa_fisica
         SET cd_pessoa_cross = cd_pessoa_cross_p
       WHERE cd_pessoa_fisica = cd_pessoa_fisica_w;
      CALL wheb_usuario_pck.set_ie_executar_trigger('S');

    END IF;
  END IF;
  BEGIN

    INSERT INTO log_envio_cross(nr_sequencia,
       dt_atualizacao,
       nm_usuario,
       dt_atualizacao_nrec,
       nm_usuario_nrec,
       nr_seq_envio,
       cd_motivo_retorno,
       ds_motivo_retorno,
       nr_ident_movimentacao,
       nr_ident_recebimento,
       ie_tipo_log)
    VALUES (nextval('log_envio_cross_seq'),
       clock_timestamp(),
       nm_usuario_p,
       clock_timestamp(),
       nm_usuario_p,
       nr_seq_envio_w,
       cd_motivo_cross_p,
       ds_motivo_cross_p,
       nr_ident_movimentacao_p,
       nr_ident_recebimento_p,
       'M');
  EXCEPTION
    WHEN OTHERS THEN

      INSERT INTO log_mov(nm_usuario, dt_atualizacao, cd_log, ds_log)
      VALUES ('tasy',
         clock_timestamp(),
         1413013,
         substr(' nr_ident_recebimento_p - ' || nr_ident_recebimento_p || chr(10) ||chr(13) ||
                ' cd_tipo_mov_p - ' || cd_tipo_mov_p || chr(10) || chr(13) ||
                ' nr_seq_envio_w - ' || nr_seq_envio_w || chr(10) || chr(13) ||
                ' nr_ident_internacao_p - ' || nr_ident_internacao_p || chr(10) || chr(13) ||
                ' stack:' || chr(10) || chr(13) ||
                dbms_utility.format_call_stack,
                1,
                4000));
  END;
  COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_log_operacao_cross (nm_usuario_p text, nr_ident_recebimento_p bigint, nr_ident_movimentacao_p bigint, nr_ident_internacao_p text, cd_pessoa_cross_p text, id_leito_cross_p bigint, cd_motivo_cross_p bigint, ds_motivo_cross_p text, cd_tipo_mov_p text) FROM PUBLIC;

