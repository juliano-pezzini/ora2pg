-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_interf_real (nr_seq_envio_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
ie_tipo_registro_w	smallint;
ie_registro_w		smallint;
nr_inscricao_w		varchar(14);
cd_conta_w		varchar(15);
nm_empresa_w		varchar(80);
ds_banco_w		varchar(40);
dt_geracao_w		timestamp;
nr_seq_envio_w		bigint;
cd_convenio_banco_w	varchar(25);
ie_tipo_inscricao_w	varchar(1);
cd_cgc_fornecedor_w	varchar(14);
cd_agencia_bancaria_w	varchar(8);
nm_hospital_w		varchar(80);
ds_endereco_w		varchar(100);
ds_cidade_w		varchar(40);
cd_cep_w		varchar(10);
sg_estado_w		varchar(15);
ds_bairro_w		varchar(40);
cd_banco_fornec_w	integer;
cd_agencia_fornec_w	varchar(8);
nr_conta_fornecedor_w	varchar(20);
nm_fornecedor_w		varchar(80);
nr_documento_w		bigint;
dt_vencimento_w		timestamp;
vl_previsto_pagto_w	double precision;
nr_inscricao_fornec_w	varchar(14);
qt_registros_w		bigint;
cd_barras_w		varchar(100);
vl_titulo_w		double precision;
vl_desconto_w		double precision;
vl_acrescimo_w		double precision;
dt_pagto_w		timestamp;
vl_pagto_w		double precision;
nr_titulo_w		bigint;
vl_total_pagto_w	double precision;
qt_lote_arquivo_w	bigint;
qt_tot_reg_w		bigint;
ie_forma_pagto_w	varchar(3);
nr_endereco_w		varchar(10);
vl_juros_w		double precision;
vl_multa_w		double precision;

nr_sequencia_w		bigint;
nr_seq_apres_w		integer := 0;
qt_reg_lote_w		bigint:= 0;
qt_reg_arq_w		bigint:= 0;
qt_lote_arq_w		bigint:= 0;
nr_lote_w		integer := 0;
nr_seq_reg_lote_w	bigint:= 0;
cd_camara_compensacao_w	smallint;

c01 CURSOR FOR 
/* Header do Lote Conta Corrente*/
 
SELECT	distinct 
	1 									ie_tipo_registro, 
	1 									ie_registro, 
	a.nr_sequencia								nr_seq_envio, 
	'01'									ie_forma_pagto, 
	substr(b.cd_agencia_bancaria,1,4) || lpad(substr(b.cd_conta,1,7),7,'0') || 'PG' cd_convenio_banco, 
	'2'									ie_tipo_inscricao, 
	e.cd_cgc								cd_cgc, 
	somente_numero(b.cd_agencia_bancaria)					cd_agencia_bancaria, 
	substr(b.cd_conta,1,15)							cd_conta, 
	upper(j.ds_razao_social) 						nm_fornecedor, 
	upper(j.ds_endereco)							ds_endereco, 
	j.nr_endereco								nr_endereco, 
	j.ds_municipio								ds_cidade, 
	j.cd_cep								cd_cep, 
	j.sg_estado								sg_estado 
from	pessoa_juridica j, 
	Estabelecimento e, 
	banco_estabelecimento b, 
	banco_escritural a, 
	titulo_pagar_escrit c 
where	c.nr_seq_escrit		= a.nr_sequencia 
and	a.nr_seq_conta_banco	= b.nr_sequencia 
and	b.cd_estabelecimento	= e.cd_estabelecimento 
and	e.cd_cgc		= j.cd_cgc 
and	c.nr_seq_escrit		= nr_seq_envio_p 
and	c.ie_tipo_pagamento	= 'CC' 

union
 
/* Header do lote de DOC*/
 
SELECT	distinct 
	1 							ie_tipo_registro, 
	1 							ie_registro, 
	a.nr_sequencia						nr_seq_envio, 
	'03'							ie_forma_pagto, 
	substr(b.cd_agencia_bancaria,1,4) || lpad(substr(b.cd_conta,1,7),7,'0') || 'PG' cd_convenio_banco, 
	'2'							ie_tipo_inscricao, 
	e.cd_cgc						cd_cgc, 
	somente_numero(b.cd_agencia_bancaria)			cd_agencia_bancaria, 
	substr(b.cd_conta,1,15)					cd_conta, 
	upper(j.ds_razao_social) 				nm_fornecedor, 
	upper(j.ds_endereco)					ds_endereco, 
	j.nr_endereco						nr_endereco, 
	j.ds_municipio						ds_cidade, 
	j.cd_cep						cd_cep, 
	j.sg_estado						sg_estado 
from	pessoa_juridica j, 
	Estabelecimento e, 
	banco_estabelecimento b, 
	banco_escritural a, 
	titulo_pagar_escrit c 
where	c.nr_seq_escrit		= a.nr_sequencia 
and	a.nr_seq_conta_banco	= b.nr_sequencia 
and	b.cd_estabelecimento	= e.cd_estabelecimento 
and	e.cd_cgc		= j.cd_cgc 
and	c.nr_seq_escrit		= nr_seq_envio_p 
and	c.ie_tipo_pagamento	= 'DOC' 

union
 
/* Header do lote de TED*/
 
select	distinct 
	1 							ie_tipo_registro, 
	1 							ie_registro, 
	a.nr_sequencia						nr_seq_envio, 
	'41'							ie_forma_pagto, 
	substr(b.cd_agencia_bancaria,1,4) || lpad(substr(b.cd_conta,1,7),7,'0') || 'PG' cd_convenio_banco, 
	'2'							ie_tipo_inscricao, 
	e.cd_cgc						cd_cgc, 
	somente_numero(b.cd_agencia_bancaria)			cd_agencia_bancaria, 
	substr(b.cd_conta,1,15)					cd_conta, 
	upper(j.ds_razao_social) 				nm_fornecedor, 
	upper(j.ds_endereco)					ds_endereco, 
	j.nr_endereco						nr_endereco, 
	j.ds_municipio						ds_cidade, 
	j.cd_cep						cd_cep, 
	j.sg_estado						sg_estado 
from	pessoa_juridica j, 
	Estabelecimento e, 
	banco_estabelecimento b, 
	banco_escritural a, 
	titulo_pagar_escrit c 
where	c.nr_seq_escrit		= a.nr_sequencia 
and	a.nr_seq_conta_banco	= b.nr_sequencia 
and	b.cd_estabelecimento	= e.cd_estabelecimento 
and	e.cd_cgc		= j.cd_cgc 
and	c.nr_seq_escrit		= nr_seq_envio_p 
and	c.ie_tipo_pagamento	= 'TED' 

union
 
/* Header do Lote Bloquetos Banco Real*/
 
select	distinct 
	5 									ie_tipo_registro, 
	1 									ie_registro, 
	a.nr_sequencia								nr_seq_envio, 
	'30'									ie_forma_pagto, 
	substr(b.cd_agencia_bancaria,1,4) || lpad(substr(b.cd_conta,1,7),7,'0') || 'PG' cd_convenio_banco, 
	'2'									ie_tipo_inscricao, 
	e.cd_cgc								cd_cgc, 
	somente_numero(b.cd_agencia_bancaria)					cd_agencia_bancaria, 
	substr(b.cd_conta,1,15)							cd_conta, 
	upper(j.ds_razao_social)						nm_fornecedor, 
	upper(j.ds_endereco)							ds_endereco, 
	j.nr_endereco								nr_endereco, 
	j.ds_municipio								ds_cidade, 
	j.cd_cep								cd_cep, 
	j.sg_estado								sg_estado 
from	pessoa_juridica j, 
	Estabelecimento e, 
	banco_estabelecimento b, 
	banco_escritural a, 
	titulo_pagar d, 
	titulo_pagar_escrit c 
where	c.nr_titulo		= d.nr_titulo 
and	c.nr_seq_escrit		= a.nr_sequencia 
and	a.nr_seq_conta_banco	= b.nr_sequencia 
and	b.cd_estabelecimento	= e.cd_estabelecimento 
and	e.cd_cgc		= j.cd_cgc 
and	c.nr_seq_escrit		= nr_seq_envio_p 
and	c.ie_tipo_pagamento	= 'BLQ' 
and	substr(coalesce(d.nr_bloqueto,0),1,3)	= '356' 

union
 
/* Header do Lote Bloquetos outros bancos */
 
select	distinct 
	5 									ie_tipo_registro, 
	1 									ie_registro, 
	a.nr_sequencia								nr_seq_envio, 
	'31'									ie_forma_pagto, 
	substr(b.cd_agencia_bancaria,1,4) || lpad(substr(b.cd_conta,1,7),7,'0') || 'PG' cd_convenio_banco, 
	'2'									ie_tipo_inscricao, 
	e.cd_cgc								cd_cgc, 
	somente_numero(b.cd_agencia_bancaria)					cd_agencia_bancaria, 
	substr(b.cd_conta,1,15)							cd_conta, 
	upper(j.ds_razao_social)						nm_fornecedor, 
	upper(j.ds_endereco)							ds_endereco, 
	j.nr_endereco								nr_endereco, 
	j.ds_municipio								ds_cidade, 
	j.cd_cep								cd_cep, 
	j.sg_estado								sg_estado 
from	pessoa_juridica j, 
	Estabelecimento e, 
	banco_estabelecimento b, 
	banco_escritural a, 
	titulo_pagar d, 
	titulo_pagar_escrit c 
where	c.nr_titulo		= d.nr_titulo 
and	c.nr_seq_escrit		= a.nr_sequencia 
and	a.nr_seq_conta_banco	= b.nr_sequencia 
and	b.cd_estabelecimento	= e.cd_estabelecimento 
and	e.cd_cgc		= j.cd_cgc 
and	c.nr_seq_escrit		= nr_seq_envio_p 
and	c.ie_tipo_pagamento	= 'BLQ' 
and	substr(coalesce(d.nr_bloqueto,0),1,3)	<> '356' 
order by 
	ie_forma_pagto;

c02 CURSOR FOR 
/* Detalhe Conta corrente */
 
SELECT	2 								ie_tipo_registro, 
	3 								ie_registro, 
	c.nr_seq_escrit							nr_seq_envio, 
	d.cd_favorecido 						cd_cgc_fornecedor, 
	c.cd_banco							cd_banco_fornec, 
	lpad(somente_numero(c.cd_agencia_bancaria),5,0) || c.ie_digito_agencia	cd_agencia_fornec, 
	c.nr_conta || c.ie_digito_conta					nr_conta_fornecedor, 
	d.nm_favorecido							nm_fornecedor, 
	d.nr_titulo							nr_documento, 
	d.dt_vencimento_atual						dt_vencimento, 
	c.vl_escritural	+ c.vl_multa + c.vl_juros			vl_previsto_pagto, 
	to_char(null)							cd_barras, 
	d.vl_titulo 							vl_titulo, 
	(null)::numeric 							vl_desconto, 
	(null)::numeric 							vl_acrescimo, 
	clock_timestamp()								dt_pagto, 
	(null)::numeric 							vl_pagto, 
	c.nr_titulo							nr_titulo, 
	c.cd_camara_compensacao						cd_camara_compensacao 
from	titulo_pagar_v2 d,	 
	titulo_pagar_escrit c 
where	c.nr_titulo		= d.nr_titulo 
and 	c.ie_tipo_pagamento	= 'CC' 
and	ie_forma_pagto_w	= '01' 
and	c.nr_seq_escrit		= nr_seq_envio_p 
/* Detalhe DOC */
 

union
 
SELECT	2 								ie_tipo_registro, 
	3 								ie_registro, 
	c.nr_seq_escrit							nr_seq_envio, 
	d.cd_favorecido 						cd_cgc_fornecedor, 
	c.cd_banco							cd_banco_fornec, 
	lpad(somente_numero(c.cd_agencia_bancaria),5,0) || c.ie_digito_agencia	cd_agencia_fornec, 
	c.nr_conta || c.ie_digito_conta					nr_conta_fornecedor, 
	d.nm_favorecido							nm_fornecedor, 
	d.nr_titulo							nr_documento, 
	d.dt_vencimento_atual						dt_vencimento, 
	c.vl_escritural	+ c.vl_multa + c.vl_juros			vl_previsto_pagto, 
	to_char(null)							cd_barras, 
	d.vl_titulo 							vl_titulo, 
	(null)::numeric 							vl_desconto, 
	(null)::numeric 							vl_acrescimo, 
	clock_timestamp()								dt_pagto, 
	(null)::numeric 							vl_pagto, 
	c.nr_titulo							nr_titulo, 
	c.cd_camara_compensacao						cd_camara_compensacao 
from	titulo_pagar_v2 d,	 
	titulo_pagar_escrit c 
where	c.nr_titulo		= d.nr_titulo 
and 	c.ie_tipo_pagamento	= 'DOC' 
and	ie_forma_pagto_w	= '03' 
and	c.nr_seq_escrit		= nr_seq_envio_p 
/* Detalhe TED */
 

union
 
select	2 								ie_tipo_registro, 
	3 								ie_registro, 
	c.nr_seq_escrit							nr_seq_envio, 
	d.cd_favorecido 						cd_cgc_fornecedor, 
	c.cd_banco							cd_banco_fornec, 
	lpad(somente_numero(c.cd_agencia_bancaria),5,0) || c.ie_digito_agencia	cd_agencia_fornec, 
	c.nr_conta || c.ie_digito_conta					nr_conta_fornecedor, 
	d.nm_favorecido							nm_fornecedor, 
	d.nr_titulo							nr_documento, 
	d.dt_vencimento_atual						dt_vencimento, 
	c.vl_escritural	 + c.vl_multa + c.vl_juros			vl_previsto_pagto, 
	to_char(null)							cd_barras, 
	d.vl_titulo							vl_titulo, 
	(null)::numeric 							vl_desconto, 
	(null)::numeric 							vl_acrescimo, 
	clock_timestamp()								dt_pagto, 
	(null)::numeric 							vl_pagto, 
	c.nr_titulo							nr_titulo, 
	c.cd_camara_compensacao						cd_camara_compensacao 
from	titulo_pagar_v2 d,	 
	titulo_pagar_escrit c 
where	c.nr_titulo		= d.nr_titulo 
and 	c.ie_tipo_pagamento	= 'TED' 
and	ie_forma_pagto_w	= '41' 
and	c.nr_seq_escrit		= nr_seq_envio_p 

union
 
/* Detalhe Bloquetos Banco Real*/
 
select	6 								ie_tipo_registro, 
	3 								ie_registro, 
	c.nr_seq_escrit							nr_seq_envio, 
	d.cd_favorecido 						cd_cgc_fornecedor, 
	c.cd_banco 							cd_banco_fornec, 
	lpad(somente_numero(c.cd_agencia_bancaria),5,0) || c.ie_digito_agencia	cd_agencia_fornec, 
	c.nr_conta || c.ie_digito_conta					nr_conta_fornecedor, 
	d.nm_favorecido							nm_fornecedor, 
	0 								nr_documento, 
	d.dt_vencimento_atual						dt_vencimento, 
	c.vl_escritural 						vl_previsto_pagto, 
	d.nr_bloqueto							cd_barras, 
	c.vl_escritural							vl_titulo, 
	c.vl_desconto							vl_desconto, 
	c.vl_juros + c.vl_multa						vl_acrescimo, 
	d.dt_vencimento_atual						dt_pagto, 
	c.vl_escritural							vl_pagto, 
	c.nr_titulo							nr_titulo, 
	c.cd_camara_compensacao						cd_camara_compensacao 
from	titulo_pagar_v2 d,	 
	titulo_pagar_escrit c 
where	c.nr_titulo		= d.nr_titulo 
and 	c.ie_tipo_pagamento	= 'BLQ' 
and	ie_forma_pagto_w	= '30' 
and	c.nr_seq_escrit		= nr_seq_envio_p 
and	substr(coalesce(d.nr_bloqueto,0),1,3)	= '356' 

union
 
/* Detalhe Bloquetos Outros bancos */
 
select	6 								ie_tipo_registro, 
	3 								ie_registro, 
	c.nr_seq_escrit							nr_seq_envio, 
	d.cd_favorecido 						cd_cgc_fornecedor, 
	c.cd_banco 							cd_banco_fornec, 
	lpad(somente_numero(c.cd_agencia_bancaria),5,0) || c.ie_digito_agencia	cd_agencia_fornec, 
	c.nr_conta || c.ie_digito_conta					nr_conta_fornecedor, 
	d.nm_favorecido							nm_fornecedor, 
	0 								nr_documento, 
	d.dt_vencimento_atual						dt_vencimento, 
	c.vl_escritural 						vl_previsto_pagto, 
	d.nr_bloqueto							cd_barras, 
	c.vl_escritural							vl_titulo, 
	c.vl_desconto							vl_desconto, 
	c.vl_juros + c.vl_multa						vl_acrescimo, 
	d.dt_vencimento_atual						dt_pagto, 
	c.vl_escritural							vl_pagto, 
	c.nr_titulo							nr_titulo, 
	c.cd_camara_compensacao						cd_camara_compensacao 
from	titulo_pagar_v2 d,	 
	titulo_pagar_escrit c 
where	c.nr_titulo		= d.nr_titulo 
and 	c.ie_tipo_pagamento	= 'BLQ' 
and	ie_forma_pagto_w	= '31' 
and	c.nr_seq_escrit		= nr_seq_envio_p 
and	substr(coalesce(d.nr_bloqueto,0),1,3)	<> '356';

/* Complemento Conta Corrente */
 
c03 CURSOR FOR 
SELECT	3 								ie_tipo_registro, 
	3								ie_registro, 
	c.nr_seq_escrit							nr_seq_envio, 
	c.cd_banco							cd_banco_fornec, 
	d.ie_tipo_favorecido 						ie_tipo_inscricao, 
	d.cd_favorecido							cd_cgc_fornecedor, 
	upper(d.ds_endereco)						ds_endereco, 
	d.nr_endereco							nr_endereco, 
	d.ds_cidade							ds_cidade, 
	d.cd_cep							cd_cep, 
	d.ds_estado							sg_estado, 
	d.ds_bairro							ds_bairro, 
	d.nr_documento							nr_documento, 
	d.dt_vencimento_atual						dt_vencimento, 
	C.vl_escritural + c.vl_multa + c.vl_juros			vl_titulo, 
	c.vl_desconto							vl_desconto, 
	c.vl_acrescimo							vl_acrescimo, 
	(null)::numeric 							vl_juros, 
	(null)::numeric 							vl_multa 
from	titulo_pagar_v2 d, 
	titulo_pagar_escrit c 
where	c.nr_titulo			= d.nr_titulo 
and 	c.ie_tipo_pagamento		in ('DOC','TED','CC') 
and	c.nr_seq_escrit			= nr_seq_envio_p 
and	c.nr_titulo			= nr_titulo_w;

 
c04 CURSOR FOR 
/* Trailler do Lote Conta Corrente*/
 
SELECT	4 										ie_tipo_registro, 
	5 										ie_registro, 
	c.nr_seq_escrit									nr_seq_envio, 
	sum(coalesce(c.vl_escritural,0) - coalesce(c.vl_desconto,0) + coalesce(c.vl_acrescimo,0))	vl_total_pagto 
from	titulo_pagar_escrit c 
where	c.ie_tipo_pagamento	= 'CC' 
and	ie_forma_pagto_w	= '01' 
and	c.nr_seq_escrit		= nr_seq_envio_p 
group by c.nr_seq_escrit 

Union
 
/* Trailler do Lote DOC */
 
SELECT	4 										ie_tipo_registro, 
	5 										ie_registro, 
	c.nr_seq_escrit									nr_seq_envio, 
	sum(coalesce(c.vl_escritural,0) - coalesce(c.vl_desconto,0) + coalesce(c.vl_acrescimo,0))	vl_total_pagto 
from	titulo_pagar_escrit c 
where	c.ie_tipo_pagamento	= 'DOC' 
and	ie_forma_pagto_w	= '03' 
and	c.nr_seq_escrit		= nr_seq_envio_p		 
group by c.nr_seq_escrit 

union
 
/* Trailler do Lote TED */
 
select	4 										ie_tipo_registro, 
	5 										ie_registro, 
	c.nr_seq_escrit									nr_seq_envio, 
	sum(coalesce(c.vl_escritural,0) - coalesce(c.vl_desconto,0) + coalesce(c.vl_acrescimo,0))	vl_total_pagto 
from	titulo_pagar_escrit c 
where	c.ie_tipo_pagamento	= 'TED' 
and	ie_forma_pagto_w	= '41' 
and	c.nr_seq_escrit		= nr_seq_envio_p		 
group by c.nr_seq_escrit 

union
 
/* Trailler do Lote Bloquetos banco Real*/
 
select	7 										ie_tipo_registro, 
	5 										ie_registro, 
	c.nr_seq_escrit									nr_seq_envio, 
	sum(coalesce(c.vl_escritural,0) - coalesce(c.vl_desconto,0) + coalesce(c.vl_acrescimo,0))	vl_total_pagto 
from	titulo_pagar_escrit c 
where	c.ie_tipo_pagamento	= 'BLQ' 
and	ie_forma_pagto_w	= '30' 
and	c.nr_seq_escrit		= nr_seq_envio_p 
group by c.nr_seq_escrit 

union
 
/* Trailler do Lote Bloquetos outros bancos*/
 
select	7 										ie_tipo_registro, 
	5 										ie_registro, 
	c.nr_seq_escrit									nr_seq_envio, 
	sum(coalesce(c.vl_escritural,0) - coalesce(c.vl_desconto,0) + coalesce(c.vl_acrescimo,0))	vl_total_pagto 
from	titulo_pagar_escrit c 
where	c.ie_tipo_pagamento	= 'BLQ' 
and	ie_forma_pagto_w	= '31' 
and	c.nr_seq_escrit		= nr_seq_envio_p 
group by c.nr_seq_escrit;


BEGIN 
 
delete	from	w_interf_itau;
 
/* Header do arquivo */
 
select	0									ie_tipo_registro, 
	0 									ie_registro, 
	'0'									ie_tipo_inscricao, 
	c.cd_cgc								nr_inscricao, 
	substr(b.cd_conta,1,15)							cd_conta, 
	upper(substr(obter_nome_pf_pj(null,c.cd_cgc),1,80))			nm_empresa, 
	b.ds_banco								ds_banco, 
	e.dt_remessa_retorno							dt_geracao, 
	e.nr_sequencia								nr_seq_envio, 
	substr(b.cd_agencia_bancaria,1,4) || lpad(substr(b.cd_conta,1,7),7,'0') || 'PG' cd_convenio_banco, 
	somente_numero(b.cd_agencia_bancaria) 					cd_agencia_bancaria_w 
into STRICT	ie_tipo_registro_w, 
	ie_registro_w, 
	ie_tipo_inscricao_w, 
	nr_inscricao_w, 
	cd_conta_w, 
	nm_empresa_w, 
	ds_banco_w, 
	dt_geracao_w, 
	nr_seq_envio_w, 
	cd_convenio_banco_w, 
	cd_agencia_bancaria_w 
from	estabelecimento c, 
	banco_estabelecimento_v b, 
	banco_escritural e 
where	e.nr_seq_conta_banco	= b.nr_sequencia 
and	b.cd_estabelecimento	= c.cd_estabelecimento 
and	e.nr_sequencia		= nr_seq_envio_p;
 
select	nextval('w_interf_itau_seq') 
into STRICT	nr_sequencia_w
;
 
nr_seq_apres_w	:= nr_seq_apres_w + 1;
 
qt_reg_arq_w	:= qt_reg_arq_w + 1;	
 
insert	into	w_interf_itau(nr_sequencia, 
	nm_usuario, 
	dt_atualizacao, 
	nm_usuario_nrec, 
	dt_atualizacao_nrec, 
	ie_tipo_registro, 
	ie_registro, 
	ie_tipo_inscricao, 
	nr_inscricao, 
	cd_conta, 
	nm_empresa, 
	ds_banco, 
	dt_geracao, 
	nr_seq_envio, 
	cd_convenio_banco, 
	cd_agencia_bancaria, 
	nr_seq_apres, 
	nr_lote) 
values (nr_sequencia_w, 
	nm_usuario_p, 
	clock_timestamp(), 
	nm_usuario_p, 
	clock_timestamp(), 
	ie_tipo_registro_w, 
	ie_registro_w, 
	ie_tipo_inscricao_w, 
	nr_inscricao_w, 
	cd_conta_w, 
	nm_empresa_w, 
	ds_banco_w, 
	clock_timestamp(), 
	nr_seq_envio_w, 
	cd_convenio_banco_w, 
	cd_agencia_bancaria_w, 
	nr_seq_apres_w, 
	0);	
 
/* Cursor dos Headers */
 
open c01;
loop 
fetch c01 into 
	ie_tipo_registro_w, 
	ie_registro_w, 
	nr_seq_envio_w, 
	ie_forma_pagto_w, 
	cd_convenio_banco_w, 
	ie_tipo_inscricao_w, 
	nr_inscricao_w, 
	cd_agencia_bancaria_w, 
	cd_conta_w, 
	nm_empresa_w, 
	ds_endereco_w, 
	nr_endereco_w, 
	ds_cidade_w, 
	cd_cep_w, 
	sg_estado_w;	
EXIT WHEN NOT FOUND; /* apply on c01 */
 
	select	nextval('w_interf_itau_seq') 
	into STRICT	nr_sequencia_w 
	;
 
	nr_seq_apres_w	:= nr_seq_apres_w + 1;
 
	qt_reg_arq_w	:= qt_reg_arq_w + 1;
 
	qt_reg_lote_w	:= 0;
 
	qt_lote_arq_w	:= qt_lote_arq_w + 1;
 
	qt_reg_lote_w	:= qt_reg_lote_w + 1;
 
	nr_lote_w	:= nr_lote_w + 1;
	 
	nr_seq_reg_lote_w	:= 0;	
 
	insert	into	w_interf_itau(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		ie_tipo_registro, 
		ie_registro, 
		nr_seq_envio, 
		ie_forma_pagto, 
		cd_convenio_banco, 
		ie_tipo_inscricao, 
		nr_inscricao, 
		cd_agencia_bancaria, 
		cd_conta, 
		nm_empresa, 
		ds_endereco, 
		nr_endereco, 
		ds_cidade, 
		cd_cep, 
		sg_estado, 
		nr_seq_apres, 
		nr_lote) 
	values (nr_sequencia_w, 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		ie_tipo_registro_w, 
		ie_registro_w, 
		nr_seq_envio_w, 
		ie_forma_pagto_w, 
		cd_convenio_banco_w, 
		ie_tipo_inscricao_w, 
		nr_inscricao_w, 
		cd_agencia_bancaria_w, 
		cd_conta_w, 
		nm_empresa_w, 
		ds_endereco_w, 
		nr_endereco_w, 
		ds_cidade_w, 
		cd_cep_w, 
		substr(sg_estado_w,1,2), 
		nr_seq_apres_w, 
		nr_lote_w);
 
	/* Cursor dos titulos/ detalhe */
 
	open c02;
	loop 
	fetch c02 into 
		ie_tipo_registro_w, 
		ie_registro_w, 
		nr_seq_envio_w, 
		cd_cgc_fornecedor_w, 
		cd_banco_fornec_w, 
		cd_agencia_fornec_w, 
		nr_conta_fornecedor_w, 
		nm_fornecedor_w, 
		nr_documento_w, 
		dt_vencimento_w, 
		vl_previsto_pagto_w, 
		cd_barras_w, 
		vl_titulo_w, 
		vl_desconto_w, 
		vl_acrescimo_w, 
		dt_pagto_w, 
		vl_pagto_w, 
		nr_titulo_w, 
		cd_camara_compensacao_w;	
	EXIT WHEN NOT FOUND; /* apply on c02 */
 
		select	nextval('w_interf_itau_seq') 
		into STRICT	nr_sequencia_w 
		;
 
		nr_seq_apres_w	:= nr_seq_apres_w + 1;	
 
		qt_reg_arq_w	:= qt_reg_arq_w + 1;
 
		qt_reg_lote_w	:= qt_reg_lote_w + 1;
 
		nr_seq_reg_lote_w	:= nr_seq_reg_lote_w + 1;
 
		insert	into	w_interf_itau(nr_sequencia, 
			nm_usuario, 
			dt_atualizacao, 
			nm_usuario_nrec, 
			dt_atualizacao_nrec, 
			ie_tipo_registro, 
			ie_registro, 
			nr_seq_envio, 
			cd_cgc_fornecedor, 
			cd_banco_fornec, 
			cd_agencia_fornec, 
			nr_conta_fornecedor, 
			nm_fornecedor, 
			nr_documento, 
			dt_vencimento, 
			vl_previsto, 
			cd_barras, 
			vl_titulo, 
			vl_desconto, 
			vl_acrescimo, 
			dt_pagto, 
			vl_pagto, 
			nr_titulo, 
			nr_seq_apres, 
			nr_lote, 
			nr_seq_reg_lote, 
			cd_camara_compensacao) 
		values (nr_sequencia_w, 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			ie_tipo_registro_w, 
			ie_registro_w, 
			nr_seq_envio_w, 
			cd_cgc_fornecedor_w, 
			cd_banco_fornec_w, 
			cd_agencia_fornec_w, 
			nr_conta_fornecedor_w, 
			nm_fornecedor_w, 
			nr_documento_w, 
			dt_vencimento_w, 
			vl_previsto_pagto_w, 
			cd_barras_w, 
			vl_titulo_w, 
			vl_desconto_w, 
			vl_acrescimo_w, 
			dt_pagto_w, 
			vl_pagto_w, 
			nr_titulo_w, 
			nr_seq_apres_w, 
			nr_lote_w, 
			nr_lote_w, 
			cd_camara_compensacao_w);
 
		/* Complemento do detalhe */
 
		open c03;
		loop 
		fetch c03 into 
			ie_tipo_registro_w, 
			ie_registro_w, 
			nr_seq_envio_w, 
			cd_banco_fornec_w, 
			ie_tipo_inscricao_w, 
			cd_cgc_fornecedor_w, 
			ds_endereco_w, 
			nr_endereco_w, 
			ds_cidade_w, 
			cd_cep_w, 
			sg_estado_w, 
			ds_bairro_w, 
			nr_documento_w, 
			dt_vencimento_w, 
			vl_titulo_w, 
			vl_desconto_w, 
			vl_acrescimo_w, 
			vl_juros_w, 
			vl_multa_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
 
			select	nextval('w_interf_itau_seq') 
			into STRICT	nr_sequencia_w 
			;
 
			nr_seq_apres_w	:= nr_seq_apres_w + 1;
 
			qt_reg_arq_w	:= qt_reg_arq_w + 1;
 
			qt_reg_lote_w	:= qt_reg_lote_w + 1;
 
			nr_seq_reg_lote_w	:= nr_seq_reg_lote_w + 1;
 
			insert	into	w_interf_itau(nr_sequencia, 
				nm_usuario, 
				dt_atualizacao, 
				nm_usuario_nrec, 
				dt_atualizacao_nrec, 
				ie_tipo_registro, 
				ie_registro, 
				nr_seq_envio, 
				cd_banco_fornec, 
				ie_tipo_inscricao, 
				cd_cgc_fornecedor, 
				ds_endereco, 
				nr_endereco, 
				ds_cidade, 
				cd_cep, 
				sg_estado, 
				ds_bairro, 
				nr_documento, 
				dt_vencimento, 
				vl_titulo, 
				vl_desconto, 
				vl_acrescimo, 
				vl_juros, 
				vl_multa, 
				nr_seq_apres, 
				nr_lote, 
				nr_seq_reg_lote) 
			values (nr_sequencia_w, 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				ie_tipo_registro_w, 
				ie_registro_w, 
				nr_seq_envio_w, 
				cd_banco_fornec_w, 
				ie_tipo_inscricao_w, 
				cd_cgc_fornecedor_w, 
				ds_endereco_w, 
				nr_endereco_w, 
				ds_cidade_w, 
				cd_cep_w, 
				substr(sg_estado_w,1,2), 
				ds_bairro_w, 
				nr_documento_w, 
				dt_vencimento_w, 
				vl_titulo_w, 
				vl_desconto_w, 
				vl_acrescimo_w, 
				vl_juros_w, 
				vl_multa_w, 
				nr_seq_apres_w, 
				nr_lote_w, 
				nr_lote_w);
			 
		end loop;
		close c03;	
	end loop;
	close c02;
 
	/* Trailer do lote */
 
	open c04;
	loop 
	fetch c04 into 
		ie_tipo_registro_w, 
		ie_registro_w, 
		nr_seq_envio_w, 
		vl_total_pagto_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
	 
		select	nextval('w_interf_itau_seq') 
		into STRICT	nr_sequencia_w 
		;
 
		nr_seq_apres_w	:= nr_seq_apres_w + 1;
 
		qt_reg_arq_w	:= qt_reg_arq_w + 1;
 
		qt_reg_lote_w	:= qt_reg_lote_w + 1;
 
		insert	into	w_interf_itau(nr_sequencia, 
			nm_usuario, 
			dt_atualizacao, 
			nm_usuario_nrec, 
			dt_atualizacao_nrec, 
			ie_tipo_registro, 
			ie_registro, 
			nr_seq_envio, 
			vl_total_pagto, 
			nr_seq_apres, 
			qt_registros, 
			nr_lote) 
		values (nr_sequencia_w, 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			ie_tipo_registro_w, 
			ie_registro_w, 
			nr_seq_envio_w, 
			vl_total_pagto_w, 
			nr_seq_apres_w, 
			qt_reg_lote_w, 
			nr_lote_w);
		 
	end loop;
	close c04;		
end loop;
close c01;
 
/* Trailler do Arquivo*/
 
select	8 			ie_tipo_registro, 
	9 			ie_registro, 
	e.nr_sequencia		nr_seq_envio 
into STRICT	ie_tipo_registro_w, 
	ie_registro_w, 
	nr_seq_envio_w 
from	banco_escritural e 
where	e.nr_sequencia		= nr_seq_envio_p;
 
select	nextval('w_interf_itau_seq') 
into STRICT	nr_sequencia_w
;
 
nr_seq_apres_w	:= nr_seq_apres_w + 1;
 
qt_reg_arq_w	:= qt_reg_arq_w + 1;
 
insert	into	w_interf_itau(nr_sequencia, 
	nm_usuario, 
	dt_atualizacao, 
	nm_usuario_nrec, 
	dt_atualizacao_nrec, 
	ie_tipo_registro, 
	ie_registro, 
	nr_seq_envio, 
	nr_seq_apres, 
	qt_tot_reg, 
	qt_lote_arquivo, 
	nr_lote) 
values (nr_sequencia_w, 
	nm_usuario_p, 
	clock_timestamp(), 
	nm_usuario_p, 
	clock_timestamp(), 
	ie_tipo_registro_w, 
	ie_registro_w, 
	nr_seq_envio_w, 
	nr_seq_apres_w, 
	qt_reg_arq_w, 
	qt_lote_arq_w, 
	9999);
 
commit;	
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_interf_real (nr_seq_envio_p bigint, nm_usuario_p text) FROM PUBLIC;

