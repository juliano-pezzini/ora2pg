-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_mens_lanc_prog ( nr_seq_mensalidade_seg_p bigint, nr_seq_mensalidade_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_segurado_w		bigint;
dt_mesano_referencia_w		timestamp;
vl_lancamento_w			double precision;
ie_tipo_item_w			varchar(255);
nr_seq_motivo_w			bigint;
nr_seq_lanc_mens_w		bigint;
nr_seq_pagador_w		bigint;
nr_seq_pagador_ww		pls_pagador_item_mens.nr_seq_pagador_item%type;
nr_seq_bonificacao_w		bigint;
nr_seq_mensalidade_w		bigint;
qt_idade_w			bigint;
nr_parcela_inicio_w		bigint;
nr_parcela_fim_w		bigint;
nr_seq_desconto_w		bigint;
vl_bonificacao_w		double precision;
tx_bonificacao_w		double precision;
ie_alteracao_vinculacao_w	varchar(1);
nr_seq_vinculo_bonificacao_w	bigint;
ie_lancamento_mensalidade_w	varchar(1);
cd_centro_custo_w		bigint;
vl_item_w			double precision;
vl_bonific_total_w		double precision	:= 0;
qt_vidas_w			bigint;
tx_desconto_w			double precision;
vl_mens_desc_w			double precision;
nm_bonificacao_w		varchar(255);
ds_observacao_w			varchar(4000);
ds_observacao_lanc_w		varchar(2000);
ie_restricao_w			varchar(1);
ds_obs_w			varchar(255);
vl_preco_pre_bonific_w		double precision;
vl_item_embutido_w		double precision;
vl_preco_pre_w			double precision;
ie_tipo_mensalidade_w		varchar(2);
qt_segurado_mens_w		bigint;
ie_segurado_w			bigint;
nr_seq_mensalidade_seg_w	bigint;
vl_preco_pre_segurado_w		double precision;
vl_total_mensalidade_w		double precision;
vl_inserido_w			double precision;
nr_seq_sca_w			bigint;
qt_parcelas_pagas_inicial_w	bigint;
qt_parcelas_pagas_final_w	bigint;
nr_parcela_dia_w		bigint;
ie_operacao_motivo_w		varchar(10);
vl_desconto_w			double precision;
vl_total_mensalidade_aux_w	double precision;
ie_somente_pagador_w		varchar(1);
ie_inverte_sinal_w		varchar(1);
nr_seq_lote_w			bigint;
cd_estabelecimento_w		smallint;
nr_seq_item_aprop_w		pls_mens_seg_item_aprop.nr_sequencia%type;
vl_apropriacao_w		pls_lancamento_mens_aprop.vl_apropriacao%type;
vl_apropriacao_total_w		double precision;
nr_seq_centro_apropriacao_w	pls_lancamento_mens_aprop.nr_seq_centro_apropriacao%type;
dt_atualizacao_nrec_w		pls_lancamento_mens_aprop.dt_atualizacao_nrec%type;
ie_inseriu_w			boolean;
qt_pag_complementar_w		integer := 0;
vl_diferenca_aprop_w		double precision;
vl_apropriado_w			pls_mens_seg_item_aprop.vl_apropriacao%type;
vl_total_aprop_w		pls_lancamento_mens_aprop.vl_apropriacao%type;
pr_aprop_w			double precision;
vl_total_apropriacao_w		pls_mens_seg_item_aprop.vl_apropriacao%type;
vl_restante_w			pls_mens_seg_item_aprop.vl_apropriacao%type;
nr_seq_item_mensalidade_w	pls_mensalidade_seg_item.nr_sequencia%type;
nr_seq_pagador_aux_w		pls_contrato_pagador.nr_sequencia%type;
qt_motivo_lanc_w		bigint;
ie_gerar_mens_pagador_lanc_w	varchar(2);
nr_seq_pagador_lanc_w		pls_contrato_pagador.nr_sequencia%type;
ds_mensagem_reajuste_w		varchar(4000)	:= null;

/* Programação Manual - Beneficiário */

C01 CURSOR FOR
	SELECT	vl_lancamento,
		ie_tipo_item,
		nr_seq_motivo,
		cd_centro_custo,
		nr_sequencia,
		ds_observacao,
		nr_seq_pagador
	from	pls_lancamento_mensalidade
	where	nr_seq_segurado				= nr_seq_segurado_w
	and	trunc(dt_mes_competencia,'month')	= dt_mesano_referencia_w
	and	((coalesce(nr_seq_pagador::text, '') = '') or (nr_seq_pagador = nr_seq_pagador_w))
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and	(nm_usuario_liberacao IS NOT NULL AND nm_usuario_liberacao::text <> '')
	and	coalesce(nr_seq_mensalidade::text, '') = ''
	and	ie_situacao				= 'A';

/* Programação Manual - Pagador / Lepinski - 16/12/2010 - OS 274277 */

C02 CURSOR FOR
	SELECT	a.vl_lancamento,
		a.ie_tipo_item,
		a.nr_seq_motivo,
		a.cd_centro_custo,
		a.nr_sequencia,
		a.ds_observacao,
		a.cd_estabelecimento
	from	pls_lancamento_mensalidade a
	where	a.nr_seq_pagador			= nr_seq_pagador_w
	and	coalesce(a.nr_seq_segurado::text, '') = ''
	and	trunc(a.dt_mes_competencia,'month')	= dt_mesano_referencia_w
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	(a.nm_usuario_liberacao IS NOT NULL AND a.nm_usuario_liberacao::text <> '')
	and	coalesce(a.nr_seq_mensalidade::text, '') = ''
	and	a.ie_situacao = 'A'
	and	not exists (	SELECT	1
				from	pls_pagador_item_mens			x,
					pls_lancamento_mensalidade		y
				where	y.nr_seq_pagador 			= x.nr_seq_pagador
				and (x.nr_seq_tipo_lanc			= y.nr_seq_motivo or coalesce(x.nr_seq_tipo_lanc::text, '') = '')
				and	y.nr_sequencia				= a.nr_sequencia
				and	x.ie_tipo_item				= y.ie_tipo_item)
	
union

	select	a.vl_lancamento,
		a.ie_tipo_item,
		a.nr_seq_motivo,
		a.cd_centro_custo,
		a.nr_sequencia,
		a.ds_observacao,
		a.cd_estabelecimento
	from	pls_pagador_item_mens			b,
		pls_lancamento_mensalidade		a
	where	a.nr_seq_pagador 			= b.nr_seq_pagador
	and (b.nr_seq_tipo_lanc			= a.nr_seq_motivo or coalesce(b.nr_seq_tipo_lanc::text, '') = '')
	and	b.ie_tipo_item				= a.ie_tipo_item
	and	b.nr_seq_pagador_item			= nr_seq_pagador_w
	and	coalesce(a.nr_seq_segurado::text, '') = ''
	and	trunc(a.dt_mes_competencia,'month')	= dt_mesano_referencia_w
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	(a.nm_usuario_liberacao IS NOT NULL AND a.nm_usuario_liberacao::text <> '')
	and	coalesce(a.nr_seq_mensalidade::text, '') = ''
	and	a.ie_situacao = 'A';

/* Programação automática - Beneficiário */

C03 CURSOR FOR
	SELECT	ie_tipo_item,
		vl_item,
		tx_desconto,
		nr_sequencia,
		nr_seq_bonificacao,
		CASE WHEN ie_tipo_lanc='P' THEN 'P'  ELSE 'N' END ,
		ds_observacao
	from	pls_segurado_mensalidade
	where	nr_seq_segurado			= nr_seq_segurado_w
	and	((coalesce(nr_seq_pagador::text, '') = '') or (nr_seq_pagador = nr_seq_pagador_w))
	and	trunc(dt_referencia,'month')	= dt_mesano_referencia_w
	and	ie_situacao			= 'A';

C05 CURSOR FOR
	SELECT	b.nr_sequencia,
		c.ie_tipo_item,
		c.nr_parcela_inicial,
		c.nr_parcela_final,
		c.nr_seq_desconto,
		c.vl_bonificacao,
		c.tx_bonificacao,
		b.ie_alteracao_vinculacao,
		a.nr_seq_vinculo_bonificacao,
		b.ie_lancamento_mensalidade,
		coalesce(c.qt_parcelas_pagas_inicial,0),
		coalesce(c.qt_parcelas_pagas_final,0)
	from	pls_segurado_mensalidade a,
		pls_bonificacao		b,
		pls_bonificacao_regra	c,
		pls_segurado		d
	where	d.nr_sequencia		= nr_seq_segurado_w
	and	a.nr_sequencia		= nr_seq_lanc_mens_w
	and	c.ie_tipo_regra		in ('M','D')
	and	a.nr_seq_bonificacao	= b.nr_sequencia
	and	c.nr_seq_bonificacao	= b.nr_sequencia
	and	qt_idade_w between coalesce(c.qt_idade_inicial,qt_idade_w) and coalesce(c.qt_idade_final,qt_idade_w)
	and	a.nr_seq_segurado	= d.nr_sequencia
	and (CASE WHEN coalesce(d.nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END  = c.ie_titularidade or c.ie_titularidade = 'A' or coalesce(c.ie_titularidade::text, '') = '')
	and (d.nr_seq_parentesco	= c.nr_seq_parentesco or coalesce(c.nr_seq_parentesco::text, '') = '')
	and (dt_mesano_referencia_w between trunc(coalesce(b.dt_inicio_vigencia,dt_mesano_referencia_w),'dd') and fim_dia(coalesce(b.dt_fim_vigencia,dt_mesano_referencia_w)))
	order by	c.ie_tipo_item;

C06 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_segurado		b,
		pls_mensalidade_segurado a
	where	b.nr_sequencia = a.nr_seq_segurado
	and	a.nr_seq_mensalidade	= nr_seq_mensalidade_p
	and	((exists (SELECT	1 /* Lepinski - OS 466232 */
			from	pls_mensalidade_seg_item x
			where	x.nr_seq_mensalidade_seg	= a.nr_sequencia)) or (ie_somente_pagador_w = 'S'))
	and (coalesce(b.dt_rescisao::text, '') = '' or trunc(b.dt_rescisao, 'month') > trunc(dt_mesano_referencia_w, 'month'));

C07 CURSOR(	nr_seq_lanc_mens_pc 	pls_lancamento_mensalidade.nr_sequencia%type) FOR
	SELECT	vl_apropriacao,
		nr_seq_centro_apropriacao
	from	pls_lancamento_mens_aprop
	where	nr_seq_lancamento = nr_seq_lanc_mens_pc;

C08 CURSOR(	nr_seq_lancamento_mens_pc	pls_mensalidade_seg_item.nr_seq_lancamento_mens%type) FOR
	SELECT	vl_item,
		nr_sequencia
	from	pls_mensalidade_seg_item
	where	nr_seq_lancamento_mens = nr_seq_lancamento_mens_pc;

C09 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.vl_apropriacao
	from	pls_mens_seg_item_aprop 	a,
		pls_mensalidade_seg_item	b
	where	a.nr_seq_item 			= b.nr_sequencia
	and	a.nr_seq_centro_apropriacao 	= nr_seq_centro_apropriacao_w
	and	b.nr_seq_lancamento_mens	= nr_seq_lanc_mens_w;
BEGIN

if (nr_seq_mensalidade_seg_p IS NOT NULL AND nr_seq_mensalidade_seg_p::text <> '') then
	nr_seq_segurado_w		:= pls_store_data_mens_pck.get_nr_seq_segurado;
	dt_mesano_referencia_w		:= pls_store_data_mens_pck.get_dt_mesano_referencia;
	nr_seq_mensalidade_w		:= pls_store_data_mens_pck.get_nr_seq_mensalidade;
	qt_idade_w			:= pls_store_data_mens_pck.get_qt_idade;
	nr_seq_pagador_w		:= pls_store_data_mens_pck.get_nr_seq_pagador;
elsif (nr_seq_mensalidade_p IS NOT NULL AND nr_seq_mensalidade_p::text <> '') then
	select	coalesce(sum(a.vl_item),0)
	into STRICT	vl_total_mensalidade_w
	from	pls_mensalidade_seg_item	a,
		pls_mensalidade_segurado	b,
		pls_mensalidade			c
	where	a.nr_seq_mensalidade_seg	= b.nr_sequencia
	and	b.nr_seq_mensalidade		= c.nr_sequencia
	and	c.nr_sequencia			= nr_seq_mensalidade_p;

	nr_seq_pagador_w		:= pls_store_data_mens_pck.get_nr_seq_pagador;
	dt_mesano_referencia_w		:= pls_store_data_mens_pck.get_dt_referencia;
	nr_seq_lote_w			:= pls_store_data_mens_pck.get_nr_seq_lote_mensalidade;

	if (coalesce(nr_seq_pagador_w::text, '') = '') then
		vl_total_mensalidade_w	:= 0;
		nr_seq_pagador_w	:= pls_store_data_mens_pck.get_nr_seq_pagador;
		dt_mesano_referencia_w	:= pls_store_data_mens_pck.get_dt_referencia;
		nr_seq_lote_w		:= pls_store_data_mens_pck.get_nr_seq_lote_mensalidade;
	end if;

	vl_total_mensalidade_aux_w	:= vl_total_mensalidade_w;

	select	count(1)
	into STRICT	qt_pag_complementar_w
	
	where	exists (SELECT	1
			from	pls_pagador_item_mens		y,
				pls_lancamento_mensalidade	x
			where	y.ie_tipo_item				= x.ie_tipo_item
			and (y.nr_seq_tipo_lanc			= x.nr_seq_motivo or coalesce(y.nr_seq_tipo_lanc::text, '') = '')
			and	x.nr_seq_pagador			= y.nr_seq_pagador
			and	y.nr_seq_pagador_item			= nr_seq_pagador_w
			and	trunc(x.dt_mes_competencia,'month')	= dt_mesano_referencia_w
			and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')
			and	(x.nm_usuario_liberacao IS NOT NULL AND x.nm_usuario_liberacao::text <> '')
			and	coalesce(x.nr_seq_mensalidade::text, '') = ''
			and	x.ie_situacao = 'A');
end if;

dt_mesano_referencia_w	:= trunc(dt_mesano_referencia_w,'month');

/* Lançamentos Programados  - manual - Beneficiário */

open C01;
loop
fetch C01 into
	vl_lancamento_w,
	ie_tipo_item_w,
	nr_seq_motivo_w,
	cd_centro_custo_w,
	nr_seq_lanc_mens_w,
	ds_observacao_lanc_w,
	nr_seq_pagador_lanc_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (coalesce(nr_seq_pagador_lanc_w::text, '') = '') or (nr_seq_pagador_w = nr_seq_pagador_lanc_w) then
		nr_seq_pagador_aux_w := pls_store_data_mens_pck.get_seq_pagador_lanc_manual;
		ie_gerar_mens_pagador_lanc_w := 'N';

		if (nr_seq_pagador_aux_w IS NOT NULL AND nr_seq_pagador_aux_w::text <> '') then
			select	count(1)
			into STRICT	qt_motivo_lanc_w
			from	pls_pagador_item_mens
			where	nr_seq_pagador_item = nr_seq_pagador_aux_w
			and (coalesce(nr_seq_tipo_lanc::text, '') = '' or nr_seq_tipo_lanc = nr_seq_motivo_w)
			and	ie_tipo_item = 20;

			if (qt_motivo_lanc_w > 0) then
				ie_gerar_mens_pagador_lanc_w := 'S';
			end if;
		else
			ie_gerar_mens_pagador_lanc_w := 'N';
		end if;

		if (ie_gerar_mens_pagador_lanc_w = 'N') then
			nr_seq_pagador_aux_w := pls_store_data_mens_pck.get_nr_seq_pagador_benef;
		end if;

		if (nr_seq_pagador_aux_w = nr_seq_pagador_w) then
			select	coalesce(ie_operacao_motivo,'S')
			into STRICT	ie_operacao_motivo_w
			from	pls_tipo_lanc_adic
			where	nr_sequencia	= nr_seq_motivo_w;

			if (ie_operacao_motivo_w = 'D') then
				if (vl_lancamento_w > 0) then
					vl_lancamento_w	:= vl_lancamento_w *-1;
				end if;
			elsif (ie_operacao_motivo_w = 'S') then
				vl_lancamento_w	:= vl_lancamento_w *1;
			end if;

			nr_seq_item_mensalidade_w := null;

			nr_seq_item_mensalidade_w := pls_insert_mens_seg_item(ie_tipo_item_w, nm_usuario_p, cd_centro_custo_w, null, ds_observacao_lanc_w, null, null, null, null, 'N', null, null, null, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, null, null, nr_seq_motivo_w, null, null, null, null, vl_lancamento_w, nr_seq_item_mensalidade_w);

			if (nr_seq_item_mensalidade_w IS NOT NULL AND nr_seq_item_mensalidade_w::text <> '') then
				ie_inseriu_w  := false;

				for r_c07_w in C07(nr_seq_lanc_mens_w) loop
					vl_apropriacao_w		:= r_c07_w.vl_apropriacao;
					nr_seq_centro_apropriacao_w	:= r_c07_w.nr_seq_centro_apropriacao;

					if (ie_operacao_motivo_w = 'D') then
						if (vl_apropriacao_w > 0) then
							vl_apropriacao_w	:= vl_apropriacao_w *-1;
						end if;
					end if;

					ie_inseriu_w  := true;

					select	nextval('pls_mens_seg_item_aprop_seq')
					into STRICT	nr_seq_item_aprop_w
					;

					insert	into	pls_mens_seg_item_aprop(	nr_sequencia, nr_seq_item, nr_seq_centro_apropriacao,vl_apropriacao,
							dt_atualizacao,nm_usuario,dt_atualizacao_nrec)
						values (	nr_seq_item_aprop_w, nr_seq_item_mensalidade_w,nr_seq_centro_apropriacao_w,vl_apropriacao_w,
							clock_timestamp(),nm_usuario_p,clock_timestamp());
				end loop;

				if (ie_inseriu_w = true) then
					update	pls_mensalidade_seg_item
					set	ie_valor_apropriado 	= 'S'
					where	nr_sequencia = nr_seq_item_mensalidade_w;
				end if;

				update	pls_lancamento_mensalidade
				set	nr_seq_mensalidade_item	= nr_seq_item_mensalidade_w,
					nr_seq_mensalidade	= nr_seq_mensalidade_w,
					dt_cobranca_mens	= clock_timestamp()
				where	nr_sequencia		= nr_seq_lanc_mens_w;
			end if;
		end if;
	end if;
	end;
end loop;
close C01;

select	count(1)
into STRICT	qt_segurado_mens_w
from	pls_mensalidade_segurado a
where	a.nr_seq_mensalidade	= nr_seq_mensalidade_p
and	exists (SELECT	1 /* Lepinski - OS 466232 */
		from	pls_mensalidade_seg_item x
		where	x.nr_seq_mensalidade_seg	= a.nr_sequencia);

/* Se pagador for pagador complementar deve gerar o lançamento */

if (qt_segurado_mens_w = 0) or (qt_pag_complementar_w > 0) then
	ie_somente_pagador_w	:= 'S';
end if;

/* Lançamentos Programados  - manual - Pagador */

open C02;
loop
fetch C02 into
	vl_lancamento_w,
	ie_tipo_item_w,
	nr_seq_motivo_w,
	cd_centro_custo_w,
	nr_seq_lanc_mens_w,
	ds_observacao_lanc_w,
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	ie_segurado_w	:= 0;
	vl_inserido_w	:= 0;

	if (vl_lancamento_w <> 0) then
		select	coalesce(ie_operacao_motivo,'S')
		into STRICT	ie_operacao_motivo_w
		from	pls_tipo_lanc_adic
		where	nr_sequencia	= nr_seq_motivo_w;

		if	((ie_operacao_motivo_w = 'S') or
			(ie_operacao_motivo_w = 'D' AND vl_total_mensalidade_aux_w >= vl_lancamento_w) or (qt_pag_complementar_w > 0)) then
			select	count(1)
			into STRICT	qt_segurado_mens_w
			from	pls_segurado		b,
				pls_mensalidade_segurado a
			where	b.nr_sequencia = a.nr_seq_segurado
			and	a.nr_seq_mensalidade	= nr_seq_mensalidade_p
			and	((exists (SELECT	1 -- Lepinski - OS 466232
					from	pls_mensalidade_seg_item x
					where	x.nr_seq_mensalidade_seg	= a.nr_sequencia)) or (ie_somente_pagador_w = 'S'))
			and (coalesce(b.dt_rescisao::text, '') = '' or trunc(b.dt_rescisao, 'month') > trunc(dt_mesano_referencia_w, 'month'));

			open C06;
			loop
			fetch C06 into
				nr_seq_mensalidade_seg_w;
			EXIT WHEN NOT FOUND; /* apply on C06 */
				begin
				ie_segurado_w		:= ie_segurado_w + 1;
				ie_inverte_sinal_w	:= 'S';

				select	sum(b.vl_item)
				into STRICT	vl_preco_pre_segurado_w
				from	pls_mensalidade_seg_item	b,
					pls_mensalidade_segurado	a
				where	a.nr_sequencia = b.nr_seq_mensalidade_seg
				and	a.nr_sequencia = nr_seq_mensalidade_seg_w
				and	b.ie_tipo_mensalidade <> 'P';

				if (coalesce(vl_total_mensalidade_w,0) <> 0) then
					vl_item_w	:= round((coalesce(vl_preco_pre_segurado_w,0)/coalesce(vl_total_mensalidade_w,0))*vl_lancamento_w,2);
				else
					vl_item_w	:= vl_lancamento_w / qt_segurado_mens_w;
				end if;

				if (ie_segurado_w	= qt_segurado_mens_w) then
					if (ie_operacao_motivo_w = 'D') then
						if (vl_lancamento_w > 0) then
							vl_item_w	:= vl_lancamento_w + vl_inserido_w;
							if (vl_lancamento_w > vl_inserido_w) then
								vl_item_w		:= vl_item_w * -1;
								ie_inverte_sinal_w	:= 'N';
							end if;
						else
							vl_item_w	:= vl_lancamento_w - vl_inserido_w;
						end if;
					elsif (ie_operacao_motivo_w = 'S') then
						vl_item_w	:= vl_lancamento_w - vl_inserido_w;
					end if;
				end if;

				if (ie_operacao_motivo_w = 'D') then
					if (vl_item_w > 0) and (ie_inverte_sinal_w = 'S')then
						vl_item_w	:= vl_item_w *-1;
					end if;
				elsif (ie_operacao_motivo_w = 'S') then
					vl_item_w	:= vl_item_w *1;
				end if;

				if (vl_item_w <> 0) then

					nr_seq_item_mensalidade_w := null;

					nr_seq_item_mensalidade_w := pls_insert_mens_seg_item(ie_tipo_item_w, nm_usuario_p, cd_centro_custo_w, null, ds_observacao_lanc_w, null, null, null, null, 'P', null, null, null, null, null, nr_seq_lanc_mens_w, null, nr_seq_mensalidade_seg_w, nr_seq_mensalidade_p, null, null, null, null, null, null, null, nr_seq_motivo_w, null, null, null, null, vl_item_w, nr_seq_item_mensalidade_w);

					if (nr_seq_item_mensalidade_w IS NOT NULL AND nr_seq_item_mensalidade_w::text <> '') then
						vl_total_mensalidade_aux_w	:= vl_total_mensalidade_aux_w + vl_item_w;

						update	pls_lancamento_mensalidade
						set	nr_seq_mensalidade	= nr_seq_mensalidade_p,
							dt_cobranca_mens	= clock_timestamp()
						where	nr_sequencia		= nr_seq_lanc_mens_w;

						vl_inserido_w	:= coalesce(vl_inserido_w,0) + vl_item_w;
					end if;
				end if;
				end;
			end loop;
			close C06;


			select	sum(vl_apropriacao)
			into STRICT	vl_total_aprop_w
			from	pls_lancamento_mens_aprop
			where	nr_seq_lancamento = nr_seq_lanc_mens_w;

			ie_inseriu_w := false;
			for r_c07_w in C07(nr_seq_lanc_mens_w) loop
				pr_aprop_w := (r_c07_w.vl_apropriacao * 100) / vl_total_aprop_w;
				nr_seq_centro_apropriacao_w	:= r_c07_w.nr_seq_centro_apropriacao;
				vl_apropriacao_total_w		:= 0;
				for r_c08_w in C08(nr_seq_lanc_mens_w) loop
					nr_seq_item_mensalidade_w := r_c08_w.nr_sequencia;
					vl_apropriacao_w := (r_c08_w.vl_item * pr_aprop_w)/100;

					if (ie_operacao_motivo_w = 'D') then
						if (vl_apropriacao_w > 0) then
							vl_apropriacao_w	:= vl_apropriacao_w *-1;
						end if;
					end if;

					if (ie_operacao_motivo_w = 'D') then
						if	(((r_c08_w.vl_item * pr_aprop_w)/100) > 0) then
							vl_apropriacao_total_w := vl_apropriacao_total_w - ((r_c08_w.vl_item * pr_aprop_w)/100);
						end if;
					else
						vl_apropriacao_total_w := vl_apropriacao_total_w + ((r_c08_w.vl_item * pr_aprop_w)/100);
					end if;

					ie_inseriu_w  := true;

					select	nextval('pls_mens_seg_item_aprop_seq')
					into STRICT	nr_seq_item_aprop_w
					;

					insert	into	pls_mens_seg_item_aprop(	nr_sequencia, nr_seq_item, nr_seq_centro_apropriacao,vl_apropriacao,
							dt_atualizacao,nm_usuario,dt_atualizacao_nrec)
						values (	nr_seq_item_aprop_w, nr_seq_item_mensalidade_w,nr_seq_centro_apropriacao_w,vl_apropriacao_w,
							clock_timestamp(),nm_usuario_p,clock_timestamp());

				end loop;

				select	sum(a.vl_apropriacao)
				into STRICT	vl_total_apropriacao_w
				from	pls_mens_seg_item_aprop		a,
					pls_mensalidade_seg_item	b
				where	a.nr_seq_item = b.nr_sequencia
				and	b.nr_seq_lancamento_mens = nr_seq_lanc_mens_w
				and	a.nr_seq_centro_apropriacao = r_c07_w.nr_seq_centro_apropriacao;

				if (vl_apropriacao_total_w <> 0) then
					vl_restante_w := round((vl_apropriacao_total_w)::numeric,2) + vl_total_apropriacao_w;
				else
					vl_restante_w := 0;
				end if;

				while vl_restante_w <> 0 loop
					for r_c09_w in C09 loop
						if (r_c09_w.vl_apropriacao > 0 and r_c09_w.vl_apropriacao + vl_restante_w > 0) or (r_c09_w.vl_apropriacao < 0 and r_c09_w.vl_apropriacao + vl_restante_w < 0) then
							update	pls_mens_seg_item_aprop
							set	vl_apropriacao = vl_apropriacao + vl_restante_w
							where	nr_sequencia = r_c09_w.nr_sequencia;
							vl_restante_w := 0;
							exit;
						elsif (r_c09_w.vl_apropriacao > 0 and r_c09_w.vl_apropriacao + vl_restante_w <= 0) then
							vl_restante_w := vl_restante_w - r_c09_w.vl_apropriacao - 0.01;
							update	pls_mens_seg_item_aprop
							set	vl_apropriacao = 0.01
							where	nr_sequencia = r_c09_w.nr_sequencia;
							exit;
						elsif (r_c09_w.vl_apropriacao < 0 and r_c09_w.vl_apropriacao + vl_restante_w >= 0) then
							vl_restante_w := vl_restante_w + r_c09_w.vl_apropriacao + 0.01;
							update	pls_mens_seg_item_aprop
							set	vl_apropriacao = (0.01 * -1)
							where	nr_sequencia = r_c09_w.nr_sequencia;
							exit;
						end if;
					end loop;
				end loop;
			end loop;

			if	(ie_inseriu_w = true AND nr_seq_item_mensalidade_w IS NOT NULL AND nr_seq_item_mensalidade_w::text <> '')then
				update	pls_mensalidade_seg_item
				set	ie_valor_apropriado 	= 'S'
				where	nr_sequencia = nr_seq_item_mensalidade_w;
			end if;

		elsif (qt_segurado_mens_w > 0) then
			if (coalesce(cd_estabelecimento_w::text, '') = '') then
				cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;
			end if;

			CALL pls_gerar_mens_log_erro(nr_seq_lote_w,nr_seq_pagador_w,null,nr_seq_mensalidade_p,
						'Não existe saldo suficiente na mensalidade do pagador, para o lançamento manual de desconto '||nr_seq_lanc_mens_w||', de R$'||campo_mascara_virgula(vl_lancamento_w)||'. Favor verifique.',cd_estabelecimento_w,nm_usuario_p);
		end if;
	end if;
	end;
end loop;
close C02;

/* Lançamentos Programados  - automático */

open C03;
loop
fetch C03 into
	ie_tipo_item_w,
	vl_lancamento_w,
	tx_desconto_w,
	nr_seq_lanc_mens_w,
	nr_seq_bonificacao_w,
	ie_tipo_mensalidade_w,
	ds_observacao_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	/* Valor da mensalidade para calcular o desconto da bonificação */

	select	sum(vl_item)
	into STRICT	vl_mens_desc_w
	from	pls_mensalidade_seg_item
	where	nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p
	and	ie_tipo_item <> '14';

	if (coalesce(nr_seq_bonificacao_w,0) <> 0) then
		/* Valor do preço pré-estabelecido */

		select	max(vl_item)
		into STRICT	vl_preco_pre_w
		from	pls_mensalidade_seg_item
		where	nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p
		and	ie_tipo_item = '1';

		open C05;
		loop
		fetch C05 into
			nr_seq_bonificacao_w,
			ie_tipo_item_w,
			nr_parcela_inicio_w,
			nr_parcela_fim_w,
			nr_seq_desconto_w,
			vl_bonificacao_w,
			tx_bonificacao_w,
			ie_alteracao_vinculacao_w,
			nr_seq_vinculo_bonificacao_w,
			ie_lancamento_mensalidade_w,
			qt_parcelas_pagas_inicial_w,
			qt_parcelas_pagas_final_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin
			vl_desconto_w		:= 0;
			nr_parcela_dia_w	:= pls_obter_nr_parcela_em_dia(nr_seq_mensalidade_w,nr_seq_mensalidade_seg_p,null);

			if	(((nr_parcela_dia_w >= (qt_parcelas_pagas_inicial_w + 1)) and
				(nr_parcela_dia_w <= (qt_parcelas_pagas_final_w + 1)) and
				((qt_parcelas_pagas_inicial_w <> 0) or (qt_parcelas_pagas_final_w <> 0))) or
				(qt_parcelas_pagas_inicial_w = 0 AND qt_parcelas_pagas_final_w = 0)) then

				if (ie_tipo_item_w IS NOT NULL AND ie_tipo_item_w::text <> '') then
					if (ie_alteracao_vinculacao_w = 'S') then
						select	coalesce(max(vl_bonificacao),vl_bonificacao_w),
							coalesce(max(tx_bonificacao),tx_bonificacao_w)
						into STRICT	vl_bonificacao_w,
							tx_bonificacao_w
						from	pls_bonificacao_vinculo	a,
							pls_bonificacao		b
						where	a.nr_seq_segurado	= nr_seq_segurado_w
						and	a.nr_seq_bonificacao	= b.nr_sequencia
						and	b.ie_alteracao_vinculacao = 'S'
						and	a.nr_sequencia		= nr_seq_vinculo_bonificacao_w
						and (clock_timestamp() between coalesce(a.dt_inicio_vigencia,clock_timestamp()) and coalesce(a.dt_fim_vigencia,clock_timestamp()));
					end if;

					select	max(nr_seq_plano)
					into STRICT	nr_seq_sca_w
					from	pls_bonificacao_vinculo
					where	nr_sequencia	= nr_seq_vinculo_bonificacao_w;

					select	sum(a.vl_item)
					into STRICT	vl_item_w
					FROM pls_mensalidade_segurado b, pls_mensalidade_seg_item a
LEFT OUTER JOIN pls_sca_vinculo c ON (a.nr_seq_vinculo_sca = c.nr_sequencia)
WHERE a.nr_seq_mensalidade_seg = b.nr_sequencia  and pls_obter_item_mens(ie_tipo_item_w,a.ie_tipo_item) = 'S' and b.nr_parcela_contrato between coalesce(nr_parcela_inicio_w,b.nr_parcela_contrato) and coalesce(nr_parcela_fim_w,b.nr_parcela_contrato) and b.nr_sequencia = nr_seq_mensalidade_seg_p and ((a.ie_tipo_item = '15' AND c.nr_seq_plano = nr_seq_sca_w) or (a.ie_tipo_item <> '15'));

					vl_bonific_total_w := vl_bonific_total_w + (((coalesce(tx_bonificacao_w,0)/100) * coalesce(vl_item_w,0)) + coalesce(vl_bonificacao_w,0));
				elsif (nr_seq_desconto_w IS NOT NULL AND nr_seq_desconto_w::text <> '') then
					select	max(tx_desconto),
						max(vl_desconto)
					into STRICT	tx_desconto_w,
						vl_desconto_w
					from	pls_preco_regra
					where	nr_seq_regra = nr_seq_desconto_w
					and	qt_vidas_w between coalesce(qt_min_vidas,qt_vidas_w) and coalesce(qt_max_vidas,qt_vidas_w);

					vl_bonific_total_w := vl_bonific_total_w + ((coalesce(tx_desconto_w,0)/100) * vl_mens_desc_w) + coalesce(vl_desconto_w,0); /* Calcula os desconto das bonificações */
				end if;

				select	nm_bonificacao
				into STRICT	nm_bonificacao_w
				from	pls_bonificacao
				where	nr_sequencia = nr_seq_bonificacao_w;

				ds_observacao_w := 'Bonificação gerada por: '||nm_bonificacao_w||', vinculado ao beneficiário.';

				SELECT * FROM pls_gerar_bonific_restricao(nr_seq_bonificacao_w, nr_seq_segurado_w, nr_seq_mensalidade_seg_p, dt_mesano_referencia_w, nm_usuario_p, ie_restricao_w, ds_obs_w) INTO STRICT ie_restricao_w, ds_obs_w;
				if (ie_restricao_w = 'N') then
					vl_bonific_total_w := 0;
					ds_observacao_w := ds_obs_w;
				end if;

				if (ie_lancamento_mensalidade_w = 'E') then
					vl_bonific_total_w := vl_bonific_total_w * -1;
					ds_observacao_w	:= 'Valor gerado com a bonificação "'||nm_bonificacao_w||'", vinculado ao beneficiário. Valor original: '||Campo_Mascara_virgula(vl_mens_desc_w);
					vl_preco_pre_bonific_w	:= vl_mens_desc_w + vl_bonific_total_w;

					vl_item_embutido_w	:= vl_preco_pre_w + vl_bonific_total_w;

					update	pls_mensalidade_seg_item
					set	vl_item			= vl_item_embutido_w,
						vl_bonificacao_embutido	= vl_bonific_total_w,
						ds_observacao		= ds_observacao_w
					where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p
					and	ie_tipo_item = '1';
					vl_bonific_total_w	:= 0;
					vl_item_embutido_w	:= 0;
				end if;

				if	((vl_bonific_total_w <> 0 or ie_restricao_w = 'N') AND ie_lancamento_mensalidade_w = 'D') then

					vl_bonific_total_w := vl_bonific_total_w * -1;

					nr_seq_item_mensalidade_w := null;

					nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('14', nm_usuario_p, null, null, ds_observacao_w, null, null, null, null, ie_tipo_mensalidade_w, null, null, nr_seq_vinculo_bonificacao_w, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, null, null, null, null, null, null, null, coalesce(vl_bonific_total_w,0), nr_seq_item_mensalidade_w);

					if (nr_seq_item_mensalidade_w IS NOT NULL AND nr_seq_item_mensalidade_w::text <> '') then
						update	pls_segurado_mensalidade
						set	ie_situacao		= 'I',
							nr_seq_item_mensalidade	= nr_seq_item_mensalidade_w
						where	nr_sequencia		= nr_seq_lanc_mens_w;
					end if;
				end if;
				vl_bonific_total_w := 0;
			end if;
			end;
		end loop;
		close C05;
	else
		vl_lancamento_w	:= (((coalesce(tx_desconto_w,0)/100) * coalesce(vl_mens_desc_w,0)) + vl_lancamento_w);

		if (ie_tipo_item_w = '14') then
			vl_lancamento_w	:= vl_lancamento_w * -1;
		end if;

		nr_seq_item_mensalidade_w := null;

		if (ie_tipo_item_w = '4') then -- Item de mensalidade 4 = Reajuste - Cobrança retroativa
			ds_mensagem_reajuste_w := ds_observacao_w;
			ds_observacao_w := null;
		end if;

		nr_seq_item_mensalidade_w := pls_insert_mens_seg_item(ie_tipo_item_w, nm_usuario_p, null, ds_mensagem_reajuste_w, ds_observacao_w, null, null, null, null, ie_tipo_mensalidade_w, null, null, null, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, null, null, null, null, null, null, null, coalesce(vl_lancamento_w,0), nr_seq_item_mensalidade_w);

		if (nr_seq_item_mensalidade_w IS NOT NULL AND nr_seq_item_mensalidade_w::text <> '') then
			update	pls_segurado_mensalidade
			set	ie_situacao		= 'I',
				nr_seq_item_mensalidade	= nr_seq_item_mensalidade_w
			where	nr_sequencia		= nr_seq_lanc_mens_w;
		end if;
	end if;
	end;
end loop;
close C03;

/* Não pode dar commit */

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_mens_lanc_prog ( nr_seq_mensalidade_seg_p bigint, nr_seq_mensalidade_p bigint, nm_usuario_p text) FROM PUBLIC;

