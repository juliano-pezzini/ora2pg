-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_diagnostico_atend_ret ( nr_atendimento_p bigint, cd_doenca_p text, cd_medico_p text, nm_usuario_p text, ie_tipo_diagnostico_p bigint default 2, ie_classificacao_doenca_p text default 'S', dt_liberacao_p timestamp default null, ie_tipo_doenca_p text default null, ie_lado_p text default null, ds_diagnostico_p text default null, nr_seq_interno_p INOUT diagnostico_doenca.nr_seq_interno%type DEFAULT NULL, cd_departamento_med_p diagnostico_doenca.cd_departamento_med%type default null, nr_seq_interno_old_p diagnostico_doenca.nr_seq_interno%type default null) AS $body$
DECLARE


qt_tempo_w          bigint;
ie_tipo_doenca_w    varchar(2);
ie_unidade_tempo_w  varchar(2);
dt_diagnostico_w	timestamp;
nr_atendimento_ww   bigint;
cd_doenca_ww        varchar(10);
ie_nivel_atencao_w  varchar(1);
nr_seq_episodio_w	bigint;
nr_seq_disease_number_w    diagnostico_doenca.nr_seq_disease_number%type;
nr_seq_jap_pref_1_w        diagnostico_doenca.nr_seq_jap_pref_1%type;
nr_seq_jap_pref_2_w        diagnostico_doenca.nr_seq_jap_pref_2%type;
nr_seq_jap_pref_3_w        diagnostico_doenca.nr_seq_jap_pref_3%type;
nr_seq_jap_sufi_1_w        diagnostico_doenca.nr_seq_jap_sufi_1%type;
nr_seq_jap_sufi_2_w        diagnostico_doenca.nr_seq_jap_sufi_2%type;
nr_seq_jap_sufi_3_w        diagnostico_doenca.nr_seq_jap_sufi_3%type;
ie_side_modifier_w         diagnostico_doenca.ie_side_modifier%type;
ie_tipo_diagnostico_w      diagnostico_doenca.ie_tipo_diagnostico%type;
dt_effective_date_w        diagnostico_doenca.dt_effective_date%type;
cd_effective_months_w      diagnostico_doenca.cd_effective_months%type;
dt_inicio_w                diagnostico_doenca.dt_inicio%type;
dt_cid_w                   diagnostico_doenca.dt_cid%type;
nr_seq_nais_insurance_w    diagnostico_doenca.nr_seq_nais_insurance%TYPE;

BEGIN

ie_nivel_atencao_w := wheb_assist_pck.get_nivel_atencao_perfil;

if ( coalesce(nr_seq_interno_old_p::text, '') = '') then
select	max(b.nr_atendimento),
		max(b.cd_doenca),
		max(b.qt_tempo),
		max(b.ie_tipo_doenca),
		max(b.ie_unidade_tempo),
		max(b.NR_SEQ_DISEASE_NUMBER),
        max(b.NR_SEQ_JAP_PREF_1),
        max(b.NR_SEQ_JAP_PREF_2),
        max(b.NR_SEQ_JAP_PREF_3),
        max(b.NR_SEQ_JAP_SUFI_1),
        max(b.NR_SEQ_JAP_SUFI_2),
        max(b.NR_SEQ_JAP_SUFI_3),
        max(b.ie_side_modifier),
        max(b.ie_tipo_diagnostico),
        max(b.dt_effective_date),
        max(b.cd_effective_months),
        max(b.dt_inicio),
        max(b.dt_cid),
        max(b.nr_seq_nais_insurance)
into STRICT	nr_atendimento_ww,
		cd_doenca_ww,
		qt_tempo_w,
		ie_tipo_doenca_w,
		ie_unidade_tempo_w,
		nr_seq_disease_number_w,
        nr_seq_jap_pref_1_w,
        nr_seq_jap_pref_2_w,
        nr_seq_jap_pref_3_w,
        nr_seq_jap_sufi_1_w,
        nr_seq_jap_sufi_2_w,
        nr_seq_jap_sufi_3_w,
        ie_side_modifier_w,
        ie_tipo_diagnostico_w,
        dt_effective_date_w,
        cd_effective_months_w,
        dt_inicio_w,
        dt_cid_w,
        nr_seq_nais_insurance_w
from	diagnostico_doenca b,
		atendimento_paciente a
where	a.cd_pessoa_fisica = (	SELECT	cd_pessoa_fisica
								from	atendimento_paciente where		nr_atendimento = nr_atendimento_p LIMIT 1)
and		a.nr_atendimento = b.nr_atendimento
and		cd_doenca = cd_doenca_p;
else
select	max(b.nr_atendimento),
		max(b.cd_doenca),
		max(b.qt_tempo),
		max(b.ie_tipo_doenca),
		max(b.ie_unidade_tempo),
		max(b.nr_seq_disease_number),
        max(b.nr_seq_jap_pref_1),
        max(b.nr_seq_jap_pref_2),
        max(b.nr_seq_jap_pref_3),
        max(b.nr_seq_jap_sufi_1),
        max(b.nr_seq_jap_sufi_2),
        max(b.nr_seq_jap_sufi_3),
        max(b.ie_side_modifier),
        max(b.ie_tipo_diagnostico),
        max(b.dt_effective_date),
        max(b.cd_effective_months),
        max(b.dt_inicio),
        max(b.dt_cid),
        max(b.nr_seq_nais_insurance)
into STRICT	nr_atendimento_ww,
		cd_doenca_ww,
		qt_tempo_w,
		ie_tipo_doenca_w,
		ie_unidade_tempo_w,
		nr_seq_disease_number_w,
        nr_seq_jap_pref_1_w,
        nr_seq_jap_pref_2_w,
        nr_seq_jap_pref_3_w,
        nr_seq_jap_sufi_1_w,
        nr_seq_jap_sufi_2_w,
        nr_seq_jap_sufi_3_w,
        ie_side_modifier_w,
        ie_tipo_diagnostico_w,
        dt_effective_date_w,
        cd_effective_months_w,
        dt_inicio_w,
        dt_cid_w,
        nr_seq_nais_insurance_w
from	diagnostico_doenca b,
		atendimento_paciente a
where	a.cd_pessoa_fisica = (	SELECT	ap.cd_pessoa_fisica
								from	atendimento_paciente ap where		ap.nr_atendimento = nr_atendimento_p LIMIT 1)
and		a.nr_atendimento = b.nr_atendimento
and		nr_seq_interno= nr_seq_interno_old_p;
end if;
select	max(dm.dt_diagnostico)
into STRICT	dt_diagnostico_w
from	diagnostico_medico dm
where	pkg_date_utils.start_of(dm.dt_diagnostico,'DD',0)	= pkg_date_utils.start_of(clock_timestamp(),'DD',0)
and		dm.nr_atendimento		= nr_atendimento_p
and		dm.cd_medico		= cd_medico_p
and		not exists (SELECT	1
					from	diagnostico_doenca dd
					where	dd.dt_diagnostico = dm.dt_diagnostico
					and		dd.nr_atendimento = nr_atendimento_p
					and		dd.cd_doenca = cd_doenca_p
					and		dd.ie_situacao = 'I'
					and		(dd.dt_inativacao IS NOT NULL AND dd.dt_inativacao::text <> ''));

if (coalesce(dt_diagnostico_w::text, '') = '' or coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'ja_JP') and (cd_doenca_p IS NOT NULL AND cd_doenca_p::text <> '') then
	dt_diagnostico_w	:= clock_timestamp();
	insert into diagnostico_medico(
					nr_atendimento,
					dt_diagnostico,
					ie_tipo_diagnostico,
					cd_medico,
					dt_atualizacao,
					nm_usuario,
					ds_diagnostico,
					ie_nivel_atencao
					) values (
					nr_atendimento_p,
					dt_diagnostico_w,
					coalesce(ie_tipo_diagnostico_p,2),
					cd_medico_p,
					clock_timestamp(),
					nm_usuario_p,
					null,
					ie_nivel_atencao_w);
end if;

if (cd_doenca_p IS NOT NULL AND cd_doenca_p::text <> '') then

	select 	max(nr_seq_episodio)
	into STRICT	nr_seq_episodio_w
	from 	atendimento_paciente
	where 	nr_atendimento = nr_atendimento_p;

	select 	nextval('diagnostico_doenca_seq')
	into STRICT	nr_seq_interno_p
	;

	insert into diagnostico_doenca(
					nr_atendimento,
					dt_diagnostico,
					cd_doenca,
					dt_atualizacao,
					nm_usuario,
					ds_diagnostico,
					ie_classificacao_doenca,
					ie_tipo_diagnostico,
					dt_liberacao,
					ie_situacao,
					qt_tempo,
					ie_tipo_doenca,
					ie_unidade_tempo,
					ie_nivel_atencao,
					ie_relevante_drg,
					cd_medico,IE_DIAG_ADMISSAO,
                    ie_lado,
					nr_seq_interno,
					nr_seq_jap_pref_1,
                    nr_seq_jap_pref_2,
                    nr_seq_jap_pref_3,
                    nr_seq_jap_sufi_1,
                    nr_seq_jap_sufi_2,
                    nr_seq_jap_sufi_3,
                    nr_seq_disease_number,
					cd_departamento_med,
                    ie_side_modifier,
            dt_effective_date,
            cd_effective_months,
            dt_inicio,
            dt_cid,
            nr_seq_nais_insurance)
	SELECT	nr_atendimento_p,
			dt_diagnostico_w,
			cd_doenca_p,
			clock_timestamp(),
			nm_usuario_p,
			ds_diagnostico_p,
			coalesce(ie_classificacao_doenca_p,'S'),
			ie_tipo_diagnostico_w,
			dt_liberacao_p,
			'A',
			qt_tempo_w,
			coalesce(ie_tipo_doenca_p, ie_tipo_doenca_w),
			ie_unidade_tempo_w,
			ie_nivel_atencao_w,
			CASE WHEN obter_tipo_episodio(nr_seq_episodio_w)=1 THEN 'S'  ELSE 'N' END ,
			cd_medico_p, 'S',
            ie_lado_p,
			nr_seq_interno_p,
			nr_seq_jap_pref_1_w,
            nr_seq_jap_pref_2_w,
            nr_seq_jap_pref_3_w,
            nr_seq_jap_sufi_1_w,
            nr_seq_jap_sufi_2_w,
            nr_seq_jap_sufi_3_w,
            nr_seq_disease_number_w,
			cd_departamento_med_p,
            ie_side_modifier_w,
            dt_effective_date_w,
            cd_effective_months_w,
            dt_inicio_w,
            dt_cid_w,
            nr_seq_nais_insurance_w
	
	where	not exists (	SELECT	1
						from	diagnostico_doenca where		nr_atendimento	= nr_atendimento_p
						and (cd_doenca	= cd_doenca_p and dt_diagnostico	= dt_diagnostico_w) LIMIT 1);
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_diagnostico_atend_ret ( nr_atendimento_p bigint, cd_doenca_p text, cd_medico_p text, nm_usuario_p text, ie_tipo_diagnostico_p bigint default 2, ie_classificacao_doenca_p text default 'S', dt_liberacao_p timestamp default null, ie_tipo_doenca_p text default null, ie_lado_p text default null, ds_diagnostico_p text default null, nr_seq_interno_p INOUT diagnostico_doenca.nr_seq_interno%type DEFAULT NULL, cd_departamento_med_p diagnostico_doenca.cd_departamento_med%type default null, nr_seq_interno_old_p diagnostico_doenca.nr_seq_interno%type default null) FROM PUBLIC;

