-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_100_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) AS $body$
DECLARE


_ora2pg_r RECORD;
i						integer;
ie_gera_ocorrencia_w	pls_oc_cta_selecao_ocor_v.ie_valido%type;
qt_hora_min_w			double precision;
tb_seq_selecao_w		pls_util_cta_pck.t_number_table;
tb_valido_w				pls_util_cta_pck.t_varchar2_table_1;
tb_observacao_w			pls_util_cta_pck.t_varchar2_table_4000;
ds_observacao_1_w		varchar(255);
ds_observacao_2_w		varchar(255);

-- Informações da validação de período de internação com relação ao item
C02 CURSOR(	nr_seq_oc_cta_comb_pc	pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	qt_tempo_max,
			qt_tempo_min,
			ie_tipo_val_tempo
	from	pls_oc_cta_val_tempo_item
	where	nr_seq_oc_cta_comb = nr_seq_oc_cta_comb_pc;

C03 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_ocor_v.nr_id_transacao%type) FOR
	SELECT	sel.nr_sequencia nr_seq_selecao,
			proc.ie_situacao ie_situacao,
			c_proc.dt_inicio,
			c_proc.dt_fim
	from	pls_oc_cta_selecao_imp 	sel,
			pls_conta_proc_imp 		c_proc,
			procedimento			proc
	where	sel.nr_id_transacao = nr_id_transacao_pc
	and		sel.ie_valido = 'S'
	and		sel.ie_tipo_registro = 'P'
	and		c_proc.nr_sequencia  = sel.nr_seq_conta_proc
	and		c_proc.cd_procedimento_conv = proc.cd_procedimento
	and		c_proc.ie_origem_proced_conv = proc.ie_origem_proced
	and		(c_proc.dt_inicio IS NOT NULL AND c_proc.dt_inicio::text <> '')
	and		(c_proc.dt_fim IS NOT NULL AND c_proc.dt_fim::text <> '')
	
union all

	SELECT	sel.nr_sequencia nr_seq_selecao,
			mat.ie_situacao	ie_situacao,
			c_mat.dt_inicio dt_inicio,
			c_mat.dt_fim dt_fim
	from	pls_oc_cta_selecao_imp sel,
			pls_conta_mat_imp c_mat,
			pls_material	mat
	where	sel.nr_id_transacao = nr_id_transacao_pc
	and		sel.ie_tipo_registro = 'M'
	and		sel.ie_valido = 'S'
	and		c_mat.nr_sequencia   = sel.nr_seq_conta_mat
	and		c_mat.nr_seq_material_conv = mat.nr_sequencia
	and		(c_mat.dt_inicio IS NOT NULL AND c_mat.dt_inicio::text <> '')
	and		(c_mat.dt_fim IS NOT NULL AND c_mat.dt_fim::text <> '');
BEGIN


-- Deve existir informação da regra para aplicar a validação
if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '') and (nr_id_transacao_p is not  null) then

	--O tempo de realização do item, não atingiu o mínimo exigido.
	ds_observacao_1_w:= wheb_mensagem_pck.get_texto(794208);
	--O tempo de realização do item, ultrapassa o limite estabelecido.
	ds_observacao_2_w:= wheb_mensagem_pck.get_texto(794209);

	-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
	CALL pls_ocor_imp_pck.atualiza_campo_auxiliar(	'V',
							'N',
							nr_id_transacao_p,
							null);

	for	r_C02_w in C02(nr_seq_combinada_p) loop

		--limpa as variáveis
		SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;

		-- Iniciar o índice para preenchimento da tabela.
		i := 0;

		for	r_C03_w in C03(nr_id_transacao_p) loop

			ie_gera_ocorrencia_w := 'N';
			-- Inicializar os valores que serão atualizados na tabela de seleção.
			tb_seq_selecao_w(i) := r_C03_w.nr_seq_selecao;
			tb_observacao_w(i)  := null;

			--verifica se o tratamento é por hora ou minutos e já faz a conversão
			case(r_C02_w.ie_tipo_val_tempo)
				when  	'H'  then
					select (r_C03_w.dt_fim - r_C03_w.dt_inicio) * 24
					into STRICT	qt_hora_min_w
					;
				when	'M'  then
					select	((r_C03_w.dt_fim - r_C03_w.dt_inicio) * 24) * 60
					into STRICT	qt_hora_min_w
					;
			end case;

			if ( qt_hora_min_w < r_C02_w.qt_tempo_min) then
				tb_observacao_w(i) 	:= ds_observacao_1_w;
				ie_gera_ocorrencia_w	:= 'S';
			elsif ( qt_hora_min_w > r_C02_w.qt_tempo_max) then
				tb_observacao_w(i) 	:= ds_observacao_2_w;
				ie_gera_ocorrencia_w	:= 'S';
			end if;

			-- Verificar se o registro atual é válido ou não conforme as parametrizações de regras e regras de exceção.
			tb_valido_w(i) := ie_gera_ocorrencia_w;

			-- Quando a quantidade de itens da lista tiver chegado ao máximo definido na PLS_CTA_CONSISTIR_PCK, então os registros são levados para
			-- o BD e gravados todos de uma vez, pela procedure GERENCIAL_SELECAO_VALIDACAO, que atualiza os registros conforme passado por
			-- parâmetro, o indice e as listas são reiniciados para carregar os novos registros e para que os registros atuais não sejam atualizados novamente em
			-- na próxima carga.
			if (i = pls_cta_consistir_pck.qt_registro_transacao_w) then

				--Grava as informações na tabela de seleção
				CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
										tb_valido_w,
										tb_observacao_w,
										nr_id_transacao_p,
										'SEQ');
				--limpa as variáveis
				SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;

				-- Zerar o índice
				i := 0;

			else
				i := i + 1;
			end if;

		end loop; --C03
		-- Quando tiver sobrado algo na lista irá gravar o que restou após a execução do loop.
		if (tb_seq_selecao_w.count > 0) then
			--Grava as informações na tabela de seleção
			CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
									tb_valido_w,
									tb_observacao_w,
									nr_id_transacao_p,
									'SEQ');
		end if;

		-- seta os registros que serão válidos ou inválidos após o processamento
		CALL pls_ocor_imp_pck.atualiza_campo_valido('V',
							'N',
							ie_regra_excecao_p,
							null,
							nr_id_transacao_p,
							null);
	end loop; -- C02
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_100_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) FROM PUBLIC;

