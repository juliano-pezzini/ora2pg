-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_proc_pac_medic (nr_seq_proc_pac_med_p bigint, nm_usuario_p text, ds_justificativa_exec_p procedimento_paciente_dado.ds_justificativa_exec%type default null) AS $body$
DECLARE


procedimento_pac_medico_w	procedimento_pac_medico%rowtype;
procedimento_paciente_w		procedimento_paciente%rowtype;
dt_entrada_unidade_w		timestamp;
nr_seq_interno_w		atend_paciente_unidade.nr_seq_interno%type;
nr_sequencia_w			procedimento_paciente.nr_sequencia%type;


BEGIN

select	*
into STRICT	procedimento_pac_medico_w
from	procedimento_pac_medico
where	nr_sequencia	= nr_seq_proc_pac_med_p;

if (coalesce(procedimento_pac_medico_w.dt_liberacao::text, '') = '') then

	nr_seq_interno_w	:= Obter_atepacu_setor_atend(procedimento_pac_medico_w.nr_atendimento, procedimento_pac_medico_w.cd_setor_atendimento);

	SELECT * FROM Obter_Convenio_Execucao(procedimento_pac_medico_w.nr_atendimento, procedimento_pac_medico_w.dt_procedimento, procedimento_paciente_w.cd_convenio, procedimento_paciente_w.cd_categoria, procedimento_paciente_w.nr_doc_convenio, procedimento_paciente_w.ie_tipo_guia, procedimento_paciente_w.cd_senha) INTO STRICT procedimento_paciente_w.cd_convenio, procedimento_paciente_w.cd_categoria, procedimento_paciente_w.nr_doc_convenio, procedimento_paciente_w.ie_tipo_guia, procedimento_paciente_w.cd_senha;

	select	max(a.dt_entrada_unidade)
	into STRICT	dt_entrada_unidade_w
	from	atend_paciente_unidade a
	where	nr_seq_interno	= nr_seq_interno_w;

	select	max(a.cd_cgc)
	into STRICT	procedimento_paciente_w.cd_cgc_prestador
	from 	estabelecimento a,
		atendimento_paciente b
	where	a.cd_estabelecimento 	= b.cd_estabelecimento
	and	b.nr_atendimento 	= procedimento_pac_medico_w.nr_atendimento;

	-- Obter a maxima sequencia da procedimento_paciente
	select	nextval('procedimento_paciente_seq')
	into STRICT	nr_sequencia_w
	;

	procedimento_paciente_w.nr_sequencia		:= nr_sequencia_w;
	procedimento_paciente_w.nr_atendimento		:= procedimento_pac_medico_w.nr_atendimento;
	procedimento_paciente_w.dt_entrada_unidade	:= dt_entrada_unidade_w;
	procedimento_paciente_w.nr_seq_proc_interno	:= procedimento_pac_medico_w.nr_seq_proc_interno;
	procedimento_paciente_w.cd_procedimento		:= procedimento_pac_medico_w.cd_procedimento;
	procedimento_paciente_w.ie_origem_proced	:= procedimento_pac_medico_w.ie_origem_proced;
	procedimento_paciente_w.dt_procedimento		:= procedimento_pac_medico_w.dt_procedimento;
	procedimento_paciente_w.ie_auditoria		:= 'N';
	procedimento_paciente_w.qt_procedimento		:= procedimento_pac_medico_w.qt_procedimento;
	procedimento_paciente_w.cd_setor_atendimento	:= procedimento_pac_medico_w.cd_setor_atendimento;
	procedimento_paciente_w.nr_seq_atepacu		:= nr_seq_interno_w;
	procedimento_paciente_w.nr_seq_cor_exec		:= 96;
	procedimento_paciente_w.vl_procedimento		:= 0;
	procedimento_paciente_w.ie_proc_princ_atend	:= procedimento_pac_medico_w.ie_proc_princ;
	procedimento_paciente_w.tx_medico		:= 100;
	procedimento_paciente_w.tx_Anestesia		:= 100;
	procedimento_paciente_w.tx_procedimento		:= 100;
	procedimento_paciente_w.cd_situacao_glosa	:= 0;
	procedimento_paciente_w.nm_usuario_original	:= procedimento_pac_medico_w.nm_usuario_nrec;
	procedimento_paciente_w.dt_atualizacao		:= clock_timestamp();
	procedimento_paciente_w.nm_usuario		:= nm_usuario_p;
	procedimento_paciente_w.ie_lado			:= procedimento_pac_medico_w.ie_lado;
	procedimento_paciente_w.ds_observacao		:= obter_desc_expressao(879950); --Procedimento gerado pela liberacao de procedimento na funcao 'Prontuario Eletronico do Paciente'
	insert into procedimento_paciente values (procedimento_paciente_w.*);

	update	procedimento_pac_medico
	set	nr_seq_propaci 	= nr_sequencia_w,
		dt_liberacao	= clock_timestamp()	
	where	nr_sequencia	= nr_seq_proc_pac_med_p;

	CALL atualiza_preco_procedimento(nr_sequencia_w, procedimento_paciente_w.cd_convenio, nm_usuario_p);
	
	CALL INATIVAR_DRG_EPISODIO_PACIENTE(procedimento_pac_medico_w.nr_atendimento, nr_seq_proc_pac_med_p, 'PROCEDIMENTO_PAC_MEDICO', nm_usuario_p, 'LIB');

	if (ds_justificativa_exec_p IS NOT NULL AND ds_justificativa_exec_p::text <> '') then
		insert into procedimento_paciente_dado(
			nr_sequencia,
			ds_justificativa_exec,
			dt_atualizacao,
			dt_atualizacao_nrec,
			dt_procedimento,
			nm_usuario,
			nm_usuario_nrec,
			nr_seq_proc
		)
		values (
			nextval('procedimento_paciente_dado_seq'),
			ds_justificativa_exec_p,
			clock_timestamp(),
			clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p,
			nm_usuario_p,
			nr_sequencia_w
		);
	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_proc_pac_medic (nr_seq_proc_pac_med_p bigint, nm_usuario_p text, ds_justificativa_exec_p procedimento_paciente_dado.ds_justificativa_exec%type default null) FROM PUBLIC;

