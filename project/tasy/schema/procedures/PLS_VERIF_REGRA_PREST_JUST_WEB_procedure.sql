-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_verif_regra_prest_just_web ( nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Permitir algum usuário web que não seja o solicitante da requisição justificar a requisição, desde que o mesmo possua o prestador solicitante em seu login.
----------------------------------------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatórios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------
Pontos de atenção: Deve ser chamada após a requisição ter sido consistida.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/nr_seq_prestador_web_w 		bigint;
nr_seq_auditoria_w		bigint;
qt_registros_w			bigint;


BEGIN

if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	begin
		select	nr_sequencia
		into STRICT	nr_seq_auditoria_w
		from	pls_auditoria
		where	nr_seq_guia	= nr_seq_guia_p;
	exception
	when others then
		nr_seq_auditoria_w := null;
	end;
	if (nr_seq_auditoria_w IS NOT NULL AND nr_seq_auditoria_w::text <> '') then
		begin
			select	nr_seq_prestador_web
			into STRICT	nr_seq_prestador_web_w
			from	pls_guia_plano
			where	nr_sequencia = nr_seq_guia_p
			and	ie_estagio = '1';
		exception
		when others then
			nr_seq_prestador_web_w := null;
		end;
		if (nr_seq_prestador_web_w IS NOT NULL AND nr_seq_prestador_web_w::text <> '') then
			if (pls_obter_se_controle_estab('RE') = 'S') then
				select	count(1)
				into STRICT	qt_registros_w
				from	pls_regra_prest_justif
				where	nr_seq_prestador_web = nr_seq_prestador_web_w
				and (trunc(clock_timestamp())  between trunc(dt_inicio_vigencia) and trunc(coalesce(dt_fim_vigencia, clock_timestamp())))
				and	ie_situacao = 'A'
				and 	coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento;
			else
				select	count(1)
				into STRICT	qt_registros_w
				from	pls_regra_prest_justif
				where	nr_seq_prestador_web = nr_seq_prestador_web_w
				and (trunc(clock_timestamp())  between trunc(dt_inicio_vigencia) and trunc(coalesce(dt_fim_vigencia, clock_timestamp())))
				and	ie_situacao = 'A';
			end if;

			if (qt_registros_w > 0) then
				update	pls_auditoria
				set	ie_permite_just_prestadores = 'S'
				where	nr_sequencia 	= nr_seq_auditoria_w;
				commit;
			end if;
		end if;
	end if;
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	begin
		select	nr_sequencia
		into STRICT	nr_seq_auditoria_w
		from	pls_auditoria
		where	nr_seq_requisicao	= nr_seq_requisicao_p;
	exception
	when others then
		nr_seq_auditoria_w := null;
	end;
	if (nr_seq_auditoria_w IS NOT NULL AND nr_seq_auditoria_w::text <> '') then
		begin
			select	nr_seq_prestador_web
			into STRICT	nr_seq_prestador_web_w
			from	pls_requisicao
			where	nr_sequencia = nr_seq_requisicao_p
			and	ie_estagio = '4';
		exception
		when others then
			nr_seq_prestador_web_w := null;
		end;
		if (nr_seq_prestador_web_w IS NOT NULL AND nr_seq_prestador_web_w::text <> '') then
			if (pls_obter_se_controle_estab('RE') = 'S') then
				select	count(1)
				into STRICT	qt_registros_w
				from	pls_regra_prest_justif
				where	nr_seq_prestador_web = nr_seq_prestador_web_w
				and (trunc(clock_timestamp())  between trunc(dt_inicio_vigencia) and trunc(coalesce(dt_fim_vigencia, clock_timestamp())))
				and	ie_situacao = 'A'
				and 	coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento;
			else
				select	count(1)
				into STRICT	qt_registros_w
				from	pls_regra_prest_justif
				where	nr_seq_prestador_web = nr_seq_prestador_web_w
				and (trunc(clock_timestamp())  between trunc(dt_inicio_vigencia) and trunc(coalesce(dt_fim_vigencia, clock_timestamp())))
				and	ie_situacao = 'A';
			end if;
			if (qt_registros_w > 0) then
				update	pls_auditoria
				set	ie_permite_just_prestadores = 'S'
				where	nr_sequencia = nr_seq_auditoria_w;
				commit;
			end if;
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_verif_regra_prest_just_web ( nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nm_usuario_p text) FROM PUBLIC;

