-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE check_copayment_status ( nr_interno_conta_p conta_paciente.nr_interno_conta%type, nm_usuario_p conta_pac_deducao_conv.nm_usuario%type, qt_propaci_p INOUT integer, qt_propaci_copayment_p INOUT integer, qt_propaci_coinsurance_p INOUT integer, qt_proc_gen_copayment_p INOUT integer, qt_matpaci_p INOUT integer, qt_matpaci_copayment_p INOUT integer, qt_matpaci_coinsurance_p INOUT integer, qt_mat_gen_copayment_p INOUT integer ) AS $body$
BEGIN

-- patient procedures
select  sum(qt_propaci) qt_propaci,
	sum(qt_propaci_copayment) qt_propaci_copayment, 
	sum(qt_propaci_coinsurance) qt_propaci_coinsurance 
into STRICT	qt_propaci_p, 
	qt_propaci_copayment_p,
	qt_propaci_coinsurance_p 
from (       
	-- total account procedures
	SELECT 	count(a.nr_sequencia) qt_propaci, 
		0 qt_propaci_copayment, 
		0 qt_propaci_coinsurance
	from 	procedimento_paciente a
	where 	a.nr_interno_conta = nr_interno_conta_p
	
union

	-- total original COPAYMENT procedures 
	SELECT 	0 qd_propaci, 
		count(a.nr_sequencia) qd_propaci_copayment, 
		0 qd_propaci_coinsurance
	from 	procedimento_paciente a, 
		conta_pac_deducao_conv b, 
		conta_pac_ded_conv_item c
	where 	a.nr_interno_conta = nr_interno_conta_p
	and   	b.nr_seq_conta_orig = a.nr_interno_conta
	and   	c.nr_seq_propaci_origem = a.nr_sequencia 
	and   	b.nr_sequencia = c.nr_seq_deducao_conv
	and   	b.ie_coseguro = 'N'
	and   	b.ie_copago = 'S'
	and     (c.nr_seq_propaci_dest IS NOT NULL AND c.nr_seq_propaci_dest::text <> '') 
	
union

	-- total original COINSURANCE procedures 
	select	0 qd_propaci, 
		0 qd_propaci_copayment, 
		count(a.nr_sequencia) qd_propaci_coinsurance
	from 	procedimento_paciente a, 
		conta_pac_deducao_conv b, 
		conta_pac_ded_conv_item c
	where 	a.nr_interno_conta = nr_interno_conta_p
	and   	b.nr_seq_conta_orig = a.nr_interno_conta
	and   	c.nr_seq_propaci_origem = a.nr_sequencia 
	and   	b.nr_sequencia = c.nr_seq_deducao_conv
	and   	b.ie_coseguro = 'S'
	and (b.ie_copago = 'N' or coalesce(b.ie_copago::text, '') = '')
) alias9;

-- patient materials 
select  sum(qt_matpaci) qt_matpaci, 
	sum(qt_matpaci_copayment) qt_matpaci_copayment, 
	sum(qt_matpaci_coinsurance) qt_matpaci_coinsurance
into STRICT	qt_matpaci_p, 
	qt_matpaci_copayment_p,
	qt_matpaci_coinsurance_p 	       
from (       
	-- total account materials 
	SELECT  count(a.nr_sequencia) qt_matpaci, 
		0 qt_matpaci_copayment, 
		0 qt_matpaci_coinsurance
	from 	material_atend_paciente a 
	where	nr_interno_conta = nr_interno_conta_p
	
union

	-- total original COPAYMENT materials 
	SELECT  0 qt_matpaci, 
		count(a.nr_sequencia) qt_matpaci_copayment, 
		0 qt_matpaci_coinsurance
	from 	material_atend_paciente a, 
		conta_pac_deducao_conv b, 
		conta_pac_ded_conv_item c
	where 	a.nr_interno_conta = nr_interno_conta_p
	and   	b.nr_seq_conta_orig = a.nr_interno_conta
	and   	c.nr_seq_matpaci_origem = a.nr_sequencia 
	and   	b.nr_sequencia = c.nr_seq_deducao_conv
	and   	b.ie_coseguro = 'N'
	and   	b.ie_copago = 'S'		
	and   	(c.nr_seq_matpaci_dest IS NOT NULL AND c.nr_seq_matpaci_dest::text <> '') 
	
union

	-- total original COINSURANCE materials 
	select  0 qt_matpaci, 
		0 qt_matpaci_copayment, 
		count(a.nr_sequencia) qt_matpaci_coinsurance
	from    material_atend_paciente a, 
		conta_pac_deducao_conv b, 
		conta_pac_ded_conv_item c
	where 	a.nr_interno_conta = nr_interno_conta_p
	and   	b.nr_seq_conta_orig = a.nr_interno_conta
	and   	c.nr_seq_matpaci_origem = a.nr_sequencia 
	and   	b.nr_sequencia = c.nr_seq_deducao_conv
	and   	b.ie_coseguro = 'S'
	and (b.ie_copago = 'N' or coalesce(b.ie_copago::text, '') = '')
) alias9;

-- calculates the number of PROCEDURES to generate the COPAYMENT
select	count(a.nr_sequencia) qt_proc_gerar_copayment
into STRICT 	qt_proc_gen_copayment_p
from	procedimento_paciente a,
	copayment_rules b,
	estrutura_procedimento_v c,
	conta_paciente d 
where	a.nr_interno_conta = nr_interno_conta_p
and     b.cd_convenio = a.cd_convenio
and     c.cd_procedimento = a.cd_procedimento
and	c.ie_origem_proced = a.ie_origem_proced
and	b.cd_estabelecimento = d.cd_estabelecimento
and     d.nr_interno_conta = a.nr_interno_conta
and	b.ie_situacao = 'A'
and	clock_timestamp() > pkg_date_utils.get_Time(b.dt_inicio_vigencia, 0)
and	((coalesce(b.dt_final_vigencia::text, '') = '') or (pkg_date_utils.get_Time(coalesce(b.dt_final_vigencia,clock_timestamp()) ,0) + 86399/86400 > clock_timestamp()))
and	((coalesce(b.cd_procedimento::text, '') = '') or (b.cd_procedimento = a.cd_procedimento))
and	((coalesce(b.nr_seq_proc_interno::text, '') = '') or (b.nr_seq_proc_interno = a.nr_seq_proc_interno))
and	((coalesce(b.cd_especialidade::text, '') = '') or (b.cd_especialidade = a.cd_especialidade))
and	((coalesce(b.cd_categoria::text, '') = '') or (b.cd_categoria = a.cd_categoria))
and	((coalesce(b.cd_area_procedimento::text, '') = '') or (b.cd_area_procedimento = c.cd_area_procedimento))
and	((coalesce(b.cd_grupo_proc::text, '') = '') or (b.cd_grupo_proc = c.cd_grupo_proc))
and	((coalesce(b.ie_origem_proced::text, '') = '') or (b.ie_origem_proced = c.ie_origem_proced))
and ((b.ie_origem_proced IS NOT NULL AND b.ie_origem_proced::text <> '') or 
	 (b.cd_area_procedimento IS NOT NULL AND b.cd_area_procedimento::text <> '') or 
	 (b.cd_especialidade IS NOT NULL AND b.cd_especialidade::text <> '') or 
	 (b.cd_grupo_proc IS NOT NULL AND b.cd_grupo_proc::text <> '') or 
	 (b.cd_procedimento IS NOT NULL AND b.cd_procedimento::text <> '') or
	 (b.nr_seq_proc_interno IS NOT NULL AND b.nr_seq_proc_interno::text <> ''))
and 	not exists (	SELECT 	x.nr_sequencia
			from 	procedimento_paciente x, 
				conta_pac_deducao_conv y, 
				conta_pac_ded_conv_item z
			where	x.nr_interno_conta = nr_interno_conta_p
			and     (y.nr_seq_conta_des IS NOT NULL AND y.nr_seq_conta_des::text <> '') 
			and     y.nr_seq_conta_orig = x.nr_interno_conta
			and     z.nr_seq_propaci_origem = x.nr_sequencia 
			and     y.nr_sequencia = z.nr_seq_deducao_conv        
			and     y.ie_copago = 'S'
			and     y.ie_coseguro = 'N'	
			and     x.nr_sequencia = a.nr_sequencia 
	);

-- calculates the number of MATERIALS to generate the COPAYMENT
select	count(a.nr_sequencia) qt_mat_gen_copayment
into STRICT 	qt_mat_gen_copayment_p	
from	material_atend_paciente a,
	copayment_rules b,
	estrutura_material_v c, 
	conta_paciente d 
where	a.nr_interno_conta = nr_interno_conta_p
and     b.cd_convenio = a.cd_convenio
and     c.cd_material = a.cd_material
and     d.nr_interno_conta = a.nr_interno_conta
and	b.cd_estabelecimento = d.cd_estabelecimento
and	b.ie_situacao = 'A'
and	clock_timestamp() > pkg_date_utils.get_Time(b.dt_inicio_vigencia, 0)
and	((coalesce(b.dt_final_vigencia::text, '') = '') or (pkg_date_utils.get_Time(coalesce(b.dt_final_vigencia,clock_timestamp()) ,0) + 86399/86400 > clock_timestamp()))
and	((coalesce(b.cd_material::text, '') = '') or (b.cd_material = a.cd_material))
and	((coalesce(b.cd_categoria::text, '') = '') or (b.cd_categoria = a.cd_categoria))
and	((coalesce(b.cd_grupo_material::text, '') = '') or (b.cd_grupo_material = c.cd_grupo_material))
and	((coalesce(b.cd_subgrupo_material::text, '') = '') or (b.cd_subgrupo_material = c.cd_subgrupo_material))
and	((coalesce(b.cd_classe_material::text, '') = '') or (b.cd_classe_material = c.cd_classe_material))
and	((coalesce(b.nr_seq_familia::text, '') = '') or (b.nr_seq_familia = c.nr_seq_familia))
and ((b.cd_material IS NOT NULL AND b.cd_material::text <> '') or 
	 (b.nr_seq_familia IS NOT NULL AND b.nr_seq_familia::text <> '') or 
	 (b.cd_grupo_material IS NOT NULL AND b.cd_grupo_material::text <> '') or 
	 (b.cd_subgrupo_material IS NOT NULL AND b.cd_subgrupo_material::text <> '') or
	 (b.cd_classe_material IS NOT NULL AND b.cd_classe_material::text <> ''))
and 	not exists (	SELECT 	x.nr_sequencia
			from 	material_atend_paciente	x, 
				conta_pac_deducao_conv y, 
				conta_pac_ded_conv_item z
			where	x.nr_interno_conta = nr_interno_conta_p
			and     (y.nr_seq_conta_des IS NOT NULL AND y.nr_seq_conta_des::text <> '')  
			and     y.nr_seq_conta_orig = x.nr_interno_conta
			and     z.nr_seq_matpaci_origem = x.nr_sequencia 
			and     y.nr_sequencia = z.nr_seq_deducao_conv        
			and     y.ie_copago = 'S'
			and     y.ie_coseguro = 'N'	
			and     x.nr_sequencia = a.nr_sequencia 
	);	
	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE check_copayment_status ( nr_interno_conta_p conta_paciente.nr_interno_conta%type, nm_usuario_p conta_pac_deducao_conv.nm_usuario%type, qt_propaci_p INOUT integer, qt_propaci_copayment_p INOUT integer, qt_propaci_coinsurance_p INOUT integer, qt_proc_gen_copayment_p INOUT integer, qt_matpaci_p INOUT integer, qt_matpaci_copayment_p INOUT integer, qt_matpaci_coinsurance_p INOUT integer, qt_mat_gen_copayment_p INOUT integer ) FROM PUBLIC;

