-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_inativacao_proc_int ( nr_seq_proc_interno_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_proc_interno_w	bigint;	
ie_regra_alerta_w	varchar(5);
ds_observacao_w		varchar(255);
qt_agenda_w		bigint;
qt_agenda_adic_w	bigint;
qt_agenda_cons_w	bigint;
qt_agenda_cons_adic_w	bigint;

nr_prescricao_w		bigint;
nr_atendimento_w	bigint;
dt_prescricao_w		timestamp;
nm_prescritor_w		varchar(80);
nm_paciente_w		varchar(80);

nm_medicacao_w 		varchar(100);
nm_protocolo_w 		varchar(100);
ds_tipo_protocolo_w 	varchar(50);
--nm_paciente_w		varchar2(60); 
dt_agenda_w		timestamp;
ds_tipo_agenda_w	varchar(20);

ds_prescricao_w		varchar(80);
cd_agenda_w		bigint;

ds_estabelecimento_w	varchar(255);
ds_agenda_w				varchar(255);

C01 CURSOR FOR 
	SELECT	ie_regra_alerta 
	from	regra_alerta_proc_int	 
	order by nr_sequencia;	
 
C02 CURSOR FOR 
	SELECT	a.nr_prescricao, 
		b.nr_atendimento, 
		b.dt_prescricao, 
		substr(obter_nome_pf(b.cd_prescritor),1,80) nm_prescritor, 
		substr(obter_nome_pf(b.cd_pessoa_fisica),1,80) nm_paciente 
	from	prescr_Procedimento a, 
		prescr_medica b 
	where	coalesce(b.cd_motivo_baixa,0)	= 0 
	and	a.nr_prescricao		= b.nr_prescricao 
	and	a.nr_seq_proc_interno	= nr_seq_proc_interno_p 
	and	b.dt_prescricao between clock_timestamp() - interval '2 days' and clock_timestamp() + interval '5 days';
	
C03 CURSOR FOR 
	SELECT	substr(b.nm_medicacao,1,80), 
		substr(c.nm_protocolo,1,80), 
		substr(f.ds_tipo_protocolo,1,50) 
	from	protocolo_medic_proc a, 
		protocolo_medicacao b, 
		tipo_protocolo f, 
		protocolo c 
	where	a.nr_seq_proc_interno	= nr_seq_proc_interno_p 
	and	a.cd_protocolo		= b.cd_protocolo 
	and	f.cd_tipo_protocolo	= c.cd_tipo_protocolo 
	and	a.nr_sequencia		= b.nr_sequencia 
	and	a.cd_protocolo		= c.cd_protocolo;
	
C04 CURSOR FOR 
	SELECT	ds_prescricao 
	from	procedimento_rotina a 
	where	a.nr_proc_interno	= nr_seq_proc_interno_p;
	
C05 CURSOR FOR 
	SELECT	substr(a.nm_paciente,1,60), 
		a.hr_inicio, 
		substr(c.ds_valor_dominio,1,20), 
		b.cd_agenda 
	from	agenda_paciente a, 
		agenda b, 
		valor_dominio c 
	where	a.nr_seq_proc_interno	= nr_seq_proc_interno_p 
	and	a.hr_inicio > clock_timestamp() 
	and	a.ie_status_agenda not in ('L','B','I','II','E','C') 
	and	a.cd_agenda	= b.cd_agenda 
	and	b.cd_tipo_agenda	= c.vl_dominio 
	and	c.cd_dominio	= 34;

C06 CURSOR FOR 
	SELECT	substr(a.nm_paciente,1,60), 
		a.hr_inicio, 
		substr(d.ds_valor_dominio,1,20), 
		c.cd_agenda 
	from	agenda_paciente a, 
		agenda_paciente_proc b, 
		agenda c, 
		valor_dominio d 
	where	a.nr_sequencia	= b.nr_sequencia 
	and	a.hr_inicio > clock_timestamp() 
	and	a.ie_status_agenda not in ('L','B','I','II','E','C') 
	and	b.nr_seq_proc_interno	= nr_seq_proc_interno_p 
	and	a.cd_agenda	= c.cd_agenda 
	and	c.cd_tipo_agenda	= d.vl_dominio 
	and	d.cd_dominio	= 34;

C07 CURSOR FOR 
	SELECT	substr(a.nm_paciente,1,60), 
		a.dt_agenda, 
		substr(c.ds_valor_dominio,1,20), 
		b.cd_agenda 
	from	agenda_consulta a, 
		agenda b, 
		valor_dominio c 
	where	a.nr_seq_proc_interno	= nr_seq_proc_interno_p 
	and	a.dt_agenda > clock_timestamp() 
	and	a.ie_status_agenda not in ('L','B','I','II','E','C') 
	and	a.cd_agenda	= b.cd_agenda 
	and	b.cd_tipo_agenda	= c.vl_dominio 
	and	c.cd_dominio	= 34;

C08 CURSOR FOR 
	SELECT	substr(a.nm_paciente,1,60), 
		a.dt_agenda, 
		substr(d.ds_valor_dominio,1,20), 
		c.cd_agenda 
	from	agenda_consulta a, 
		agenda_consulta_proc b, 
		agenda c, 
		valor_dominio d 
	where	a.nr_sequencia	= b.nr_seq_agenda 
	and	a.dt_agenda > clock_timestamp() 
	and	a.ie_status_agenda not in ('L','B','I','II','E','C') 
	and	b.nr_seq_proc_interno	= nr_seq_proc_interno_p 
	and	a.cd_agenda	= c.cd_agenda 
	and	c.cd_tipo_agenda	= d.vl_dominio 
	and	d.cd_dominio	= 34;	
	 
C09 CURSOR FOR 
	SELECT	substr(obter_nome_estabelecimento(a.cd_estabelecimento),1,255), 
			b.cd_Agenda, 
			substr(obter_desc_agenda(b.cd_agenda),1,255) 
	from	agenda_regra a, 
			agenda b 
	where	a.cd_agenda	= b.cd_agenda 
	and		a.nr_Seq_proc_interno	= nr_Seq_proc_interno_p;	
					   

BEGIN 
 
delete from w_consistencia_proc_int 
where nr_seq_proc_interno = nr_seq_proc_interno_p 
and nm_usuario = nm_usuario_p;
 
open C01;
loop 
fetch C01 into	 
	ie_regra_alerta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	ds_observacao_w:= '';
	 
	if (ie_regra_alerta_w = 'A') then -- Agenda de Exame 
 
		open C05;
		loop 
		fetch C05 into	 
			nm_paciente_w, 
			dt_agenda_w, 
			ds_tipo_agenda_w, 
			cd_agenda_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin 
			ds_observacao_w:= substr(wheb_mensagem_pck.get_texto(796329) || ': ' || ds_tipo_agenda_w ||' '||chr(13) || chr(10) || 
			wheb_mensagem_pck.get_texto(796330) || ': ' || nm_paciente_w ||' '|| chr(13) || chr(10) || 
			wheb_mensagem_pck.get_texto(796331) || ': ' || cd_agenda_w|| ' '||chr(13) || chr(10) || 
			wheb_mensagem_pck.get_texto(796332) || ': ' || to_char(dt_agenda_w, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(wheb_usuario_pck.get_cd_estabelecimento, wheb_usuario_pck.get_nm_usuario))),1,255);
			CALL grava_consistencia_proc_int(nr_seq_proc_interno_p, nm_usuario_p, ie_regra_alerta_w, ds_observacao_w);
			end;
		end loop;
		close C05;		
		 
		open C05;
		loop 
		fetch C05 into	 
			nm_paciente_w, 
			dt_agenda_w, 
			ds_tipo_agenda_w, 
			cd_agenda_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin 
			ds_observacao_w:= substr(wheb_mensagem_pck.get_texto(796329) || ': ' || ds_tipo_agenda_w||' - ' || lower(wheb_mensagem_pck.get_texto(796333)) || ' ' || ' '||chr(13) || chr(10) || 
			wheb_mensagem_pck.get_texto(796330) || ': ' || nm_paciente_w || ' '||chr(13) || chr(10) || 
			wheb_mensagem_pck.get_texto(796331) || ': ' || cd_agenda_w || ' '||chr(13) || chr(10) || 
			wheb_mensagem_pck.get_texto(796332) || ': ' || to_char(dt_agenda_w, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(wheb_usuario_pck.get_cd_estabelecimento, wheb_usuario_pck.get_nm_usuario))),1,255);
			CALL grava_consistencia_proc_int(nr_seq_proc_interno_p, nm_usuario_p, ie_regra_alerta_w, ds_observacao_w);
			end;
		end loop;
		close C05;		
	end if;
	 
	if (ie_regra_alerta_w = 'B') then -- Agenda de Consulta 
	 
		open C07;
		loop 
		fetch C07 into	 
			nm_paciente_w, 
			dt_agenda_w, 
			ds_tipo_agenda_w, 
			cd_agenda_w;
		EXIT WHEN NOT FOUND; /* apply on C07 */
			begin 
			ds_observacao_w:= substr(wheb_mensagem_pck.get_texto(796329) || ': ' ||ds_tipo_agenda_w || ' '||chr(13) || chr(10) || 
			wheb_mensagem_pck.get_texto(796330) || ': ' || nm_paciente_w || ' '||chr(13) || chr(10) || 
			wheb_mensagem_pck.get_texto(796331) || ': ' ||cd_agenda_w || ' '||chr(13) || chr(10) || 
			wheb_mensagem_pck.get_texto(796332) || ': ' || to_char(dt_agenda_w, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(wheb_usuario_pck.get_cd_estabelecimento, wheb_usuario_pck.get_nm_usuario))),1,255);
			CALL grava_consistencia_proc_int(nr_seq_proc_interno_p, nm_usuario_p, ie_regra_alerta_w, ds_observacao_w);
			end;
		end loop;
		close C07;		
		 
		open C08;
		loop 
		fetch C08 into	 
			nm_paciente_w, 
			dt_agenda_w, 
			ds_tipo_agenda_w, 
			cd_agenda_w;
		EXIT WHEN NOT FOUND; /* apply on C08 */
			begin 
			ds_observacao_w:= substr(wheb_mensagem_pck.get_texto(796329) || ': ' ||ds_tipo_agenda_w||' - ' || lower(wheb_mensagem_pck.get_texto(796333)) || ' ' || ' '||chr(13) || chr(10) || 
			wheb_mensagem_pck.get_texto(796330) || ': ' || nm_paciente_w || ' '||chr(13) || chr(10) || 
			wheb_mensagem_pck.get_texto(796331) || ': ' ||cd_agenda_w || ' '||chr(13) || chr(10) || 
			wheb_mensagem_pck.get_texto(796332) || ': ' || to_char(dt_agenda_w, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(wheb_usuario_pck.get_cd_estabelecimento, wheb_usuario_pck.get_nm_usuario))),1,255);
			CALL grava_consistencia_proc_int(nr_seq_proc_interno_p, nm_usuario_p, ie_regra_alerta_w, ds_observacao_w);
			end;
		end loop;
		close C08;
		 
	end if;
	 
	if (ie_regra_alerta_w = 'C') then -- Prescrição Pendente 
	 
		open C02;
		loop 
		fetch C02 into	 
			nr_prescricao_w, 
			nr_atendimento_w, 
			dt_prescricao_w, 
			nm_prescritor_w, 
			nm_paciente_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			 
			ds_observacao_w:= wheb_mensagem_pck.get_texto(796334) ||'.: ' || nr_prescricao_w || chr(13) || chr(10) || 
					  wheb_mensagem_pck.get_texto(796335) ||'.: ' || nr_atendimento_w || chr(13) || chr(10) || 
					  wheb_mensagem_pck.get_texto(796336) ||'.: ' || to_char(dt_prescricao_w, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(wheb_usuario_pck.get_cd_estabelecimento, wheb_usuario_pck.get_nm_usuario))) || chr(13) || chr(10) || 
					  wheb_mensagem_pck.get_texto(796337) ||'.: ' || nm_prescritor_w || chr(13) || chr(10) || 
					  wheb_mensagem_pck.get_texto(796330) ||'.: ' || nm_paciente_w;
			CALL grava_consistencia_proc_int(nr_seq_proc_interno_p, nm_usuario_p, ie_regra_alerta_w, ds_observacao_w);
			 
			end;
		end loop;
		close C02;
				 
	end if;
	 
	if (ie_regra_alerta_w = 'D') then -- Protocolo Prescrição 
	 
		open C03;
		loop 
		fetch C03 into	 
			nm_medicacao_w, 
			nm_protocolo_w, 
			ds_tipo_protocolo_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin 
			 
			ds_observacao_w:= wheb_mensagem_pck.get_texto(796338) ||'.: ' || nm_medicacao_w || chr(13) || chr(10) || 
					  wheb_mensagem_pck.get_texto(796339) ||'.: ' || nm_protocolo_w || chr(13) || chr(10) || 
					  wheb_mensagem_pck.get_texto(796340) ||'.: ' || ds_tipo_protocolo_w;
			CALL grava_consistencia_proc_int(nr_seq_proc_interno_p, nm_usuario_p, ie_regra_alerta_w, ds_observacao_w);
			 
			end;
		end loop;
		close C03;
		 
	end if;
	 
	if (ie_regra_alerta_w = 'E') then -- Procedimento de rotina 
	 
		open C04;
		loop 
		fetch C04 into	 
			ds_prescricao_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin 
			ds_observacao_w:= wheb_mensagem_pck.get_texto(796341) || '(' || wheb_mensagem_pck.get_texto(796334) || ').: ' || ds_prescricao_w;			
			CALL grava_consistencia_proc_int(nr_seq_proc_interno_p, nm_usuario_p, ie_regra_alerta_w, ds_observacao_w);
			 
			end;
		end loop;
		close C04;		
		 
	end if;
	 
	 
	if (ie_regra_alerta_w = 'I') then -- Agenda Integrada 
			 
		open C09;
		loop 
		fetch C09 into	 
			ds_estabelecimento_w, 
			cd_Agenda_w, 
			ds_agenda_w;
		EXIT WHEN NOT FOUND; /* apply on C09 */
			begin 
			ds_observacao_w:= substr(wheb_mensagem_pck.get_texto(796342) || ' ' || chr(13) || chr(10) || 
			wheb_mensagem_pck.get_texto(796343) || ': ' || nm_paciente_w || ' '||chr(13) || chr(10) || 
			wheb_mensagem_pck.get_texto(796331) || ': ' || cd_agenda_w || ' '||chr(13) || chr(10) || 
			wheb_mensagem_pck.get_texto(796344) || ': ' || ds_Agenda_w,1,255);
			CALL grava_consistencia_proc_int(nr_seq_proc_interno_p, nm_usuario_p, ie_regra_alerta_w, ds_observacao_w);
			end;
		end loop;
		close C09;
		 
	end if;
	 
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_inativacao_proc_int ( nr_seq_proc_interno_p bigint, nm_usuario_p text) FROM PUBLIC;

