-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nf_complemento_icms ( nr_sequencia_p INOUT bigint, cd_estabelecimento_p bigint, cd_material_p bigint, vl_tributo_p bigint, cd_tributo_p bigint, nm_usuario_p text, cd_serie_nf_p text default null, nr_nota_fiscal_p text default null) AS $body$
DECLARE


nr_nota_fiscal_w  		varchar(255);
nr_sequencia_nf_w  	bigint;
cd_cgc_w   		varchar(14);
dt_emissao_w   		timestamp;
dt_entrada_saida_w  	timestamp;
cd_serie_nf_w   		nota_fiscal.cd_serie_nf%type;
cd_operacao_nf_w  	smallint;
cd_natureza_operacao_w  	smallint;
cd_condicao_pagamento_w  	bigint;
ie_tipo_nota_w   		varchar(3);
cd_cgc_emitente_w  	varchar(14);
cd_pessoa_fisica_w  	varchar(14);
nr_sequencia_w   		bigint;
nr_item_nf_w		integer;
ie_tipo_tributo_w		varchar(15);
ds_observacao_w		varchar(255);


BEGIN
select	dt_emissao,
	dt_entrada_saida,
	cd_serie_nf,
	nr_sequencia_nf,
	cd_cgc,
	cd_pessoa_fisica,
	cd_operacao_nf,
	cd_natureza_operacao,
	cd_condicao_pagamento,
	ie_tipo_nota,
	cd_cgc_emitente
into STRICT 	dt_emissao_w,
	dt_entrada_saida_w,
	cd_serie_nf_w,
	nr_sequencia_nf_w,
	cd_cgc_w,
	cd_pessoa_fisica_w,
	cd_operacao_nf_w,
	cd_natureza_operacao_w,
	cd_condicao_pagamento_w,
	ie_tipo_nota_w,
	cd_cgc_emitente_w
from 	nota_fiscal
where 	nr_sequencia = nr_sequencia_p;

select	ie_tipo_tributo
into STRICT	ie_tipo_tributo_w
from	tributo
where	cd_tributo	= cd_tributo_p;

select nextval('nota_fiscal_seq')
into STRICT nr_sequencia_w
;

if	obter_se_nota_entrada_saida(nr_sequencia_p) = 'E' and (cd_serie_nf_p IS NOT NULL AND cd_serie_nf_p::text <> '' AND nr_nota_fiscal_p IS NOT NULL AND nr_nota_fiscal_p::text <> '') then
	cd_serie_nf_w := cd_serie_nf_p;
	nr_nota_fiscal_w := nr_nota_fiscal_p;
else
	lock table serie_nota_fiscal in exclusive mode;
	select 	nr_ultima_nf + 1
	into STRICT 	nr_nota_fiscal_w
	from 	serie_nota_fiscal
	where 	cd_serie_nf   = cd_serie_nf_w
	and 	cd_estabelecimento  = cd_estabelecimento_p;
end if;

select 	coalesce(max(nr_sequencia_nf),0) + 1
into STRICT 	nr_sequencia_nf_w
from  	nota_fiscal
where 	cd_estabelecimento 	= cd_estabelecimento_p
and 	cd_cgc_emitente  	= cd_cgc_emitente_w
and 	cd_serie_nf 	 	= cd_serie_nf_w
and  	nr_nota_fiscal  	= nr_nota_fiscal_w;

if (ie_tipo_tributo_w = 'IPI') then
	ds_observacao_w	:= wheb_mensagem_pck.get_Texto(310493); /*'Nota de Complemento de IPI';*/
else
	ds_observacao_w := wheb_mensagem_pck.get_Texto(310495); /*'Nota de Complemento de ICMS';*/
end if;	

insert into nota_fiscal(nr_sequencia,
	cd_estabelecimento, 
	cd_cgc_emitente, 
	cd_serie_nf,
	nr_nota_fiscal,
	nr_sequencia_nf, 
	cd_operacao_nf, 
	dt_emissao,
	dt_entrada_saida, 
	ie_acao_nf, 
	ie_emissao_nf, 
	ie_tipo_frete,
	vl_mercadoria,
	vl_total_nota, 
	qt_peso_bruto, 
	qt_peso_liquido,
	dt_atualizacao, 
	nm_usuario, 
	cd_condicao_pagamento, 
	cd_cgc,
	cd_pessoa_fisica, 
	vl_ipi, 
	vl_descontos, 
	vl_frete, 
	vl_seguro,
	vl_despesa_acessoria, 
	ds_observacao, 
	cd_natureza_operacao,
	vl_desconto_rateio, 
	ie_situacao,
	ds_obs_desconto_nf, 
	ie_tipo_nota, 
	nr_recibo,
	dt_atualizacao_nrec, 
	nm_usuario_nrec,
	ie_compl_tributo)
values (nr_sequencia_w, 
	cd_estabelecimento_p, 
	cd_cgc_emitente_w, 
	cd_serie_nf_w,
	nr_nota_fiscal_w, 
	nr_sequencia_nf_w, 
	cd_operacao_nf_w, 
	dt_emissao_w,
	dt_entrada_saida_w, 
	'1', 
	'0', 
	'0',
	0,
	0,
	0,
	0,
	clock_timestamp(),
	nm_usuario_p, 
	cd_condicao_pagamento_w, 
	cd_cgc_w,
	cd_pessoa_fisica_w,
	0,
	0,
	0,
	0,
	0,
	ds_observacao_w,
	cd_natureza_operacao_w,
	0,
	'1',
	'',
	ie_tipo_nota_w,
	0,
	clock_timestamp(),
	nm_usuario_p,
	'S');

commit;	
	
	select 	coalesce(max(nr_item_oci),0) + 1
	into STRICT	nr_item_nf_w
	from	nota_fiscal_item
	where	nr_sequencia = nr_sequencia_w;
	
	insert into nota_fiscal_item(nr_sequencia,
		cd_estabelecimento,
		cd_serie_nf,
		nr_sequencia_nf,
		nr_item_nf,
		cd_natureza_operacao,
		qt_item_nf,
		vl_unitario_item_nf,
		vl_total_item_nf,
		dt_atualizacao,
		nm_usuario,
		vl_frete,
		vl_desconto,
		vl_despesa_acessoria,
		vl_desconto_rateio,
		vl_seguro,
		vl_liquido,
		cd_material)
	values (nr_sequencia_w,
		 cd_estabelecimento_p,
		 cd_serie_nf_w,
		 nr_sequencia_nf_w,
		 nr_item_nf_w,
		 cd_natureza_operacao_w,
		 0,
		 0,
		 0,
		 clock_timestamp(),
		 nm_usuario_p,
		 0,
		 0,
		 0,
		 0,
		 0,
		 0,
		 cd_material_p);
commit;			
	insert into nota_fiscal_item_trib(nr_sequencia,           
		cd_estabelecimento,
		cd_serie_nf,            
		nr_sequencia_nf,        
		nr_item_nf,             
		cd_tributo,             
		vl_tributo,             
		dt_atualizacao,         
		nm_usuario,             
		ie_rateio,              
		vl_trib_nao_retido,     
		vl_base_nao_retido,     
		vl_trib_adic,           
		vl_base_adic)
	values (nr_sequencia_w,
		cd_estabelecimento_p,
		cd_serie_nf_w,
		nr_sequencia_nf_w,
		nr_item_nf_w,
		cd_tributo_p,
		vl_tributo_p,
		clock_timestamp(),
		nm_usuario_p,
		'N',
		0,
		0,
		0,
		0);		
		 
update 	nota_fiscal
set 	nr_sequencia_ref = nr_sequencia_p
where 	nr_sequencia  = nr_sequencia_w;

commit;
nr_sequencia_p := nr_sequencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nf_complemento_icms ( nr_sequencia_p INOUT bigint, cd_estabelecimento_p bigint, cd_material_p bigint, vl_tributo_p bigint, cd_tributo_p bigint, nm_usuario_p text, cd_serie_nf_p text default null, nr_nota_fiscal_p text default null) FROM PUBLIC;

