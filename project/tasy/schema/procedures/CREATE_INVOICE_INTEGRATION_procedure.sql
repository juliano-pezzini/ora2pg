-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE create_invoice_integration ( nm_usuario_p text ) AS $body$
DECLARE


cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
nr_seq_criterio_w		parametro_compras.nr_seq_criterio%type;
cd_condicao_pagamento_w		nota_fiscal.cd_condicao_pagamento%type;

ie_status_w			nota_fiscal_int_imp.ie_status%type;
ds_log_w			nota_fiscal_int_imp.ds_log%type;
qt_inconsist_nota_w		integer;

type t_date_table is table of timestamp index by integer;

tb_nr_seq_nota_int_w		dbms_sql.number_table;
tb_nr_seq_nota_w		dbms_sql.number_table;
tb_cd_estabelecimento_w		dbms_sql.number_table;
tb_cd_cgc_emitente_w		dbms_sql.varchar2_table;
tb_cd_serie_nf_w		dbms_sql.varchar2_table;
tb_nr_nota_fiscal_w		dbms_sql.varchar2_table;
tb_nr_sequencia_nf_w		dbms_sql.number_table;
tb_cd_operacao_nf_w		dbms_sql.number_table;
tb_dt_emissao_w			t_date_table;
tb_dt_entrada_saida_w		t_date_table;
tb_vl_mercadoria_w		dbms_sql.number_table;
tb_vl_total_nota_w		dbms_sql.number_table;
tb_cd_cgc_destinatario_w	dbms_sql.varchar2_table;
tb_nr_ordem_compra_w		dbms_sql.number_table;
tb_dt_emissao_nfe_w		t_date_table;
tb_ds_observacao_w		dbms_sql.varchar2_table;
tb_ds_link_w			dbms_sql.varchar2_table;

tb_nr_seq_item_w		dbms_sql.number_table;
tb_nr_item_nf_w			dbms_sql.number_table;
tb_qt_item_w			dbms_sql.number_table;
tb_vl_unit_item_nf_w		dbms_sql.number_table;
tb_vl_total_item_nf_w		dbms_sql.number_table;
tb_vl_frete_w			dbms_sql.number_table;
tb_vl_desconto_w		dbms_sql.number_table;
tb_vl_despesa_acessoria_w	dbms_sql.number_table;
tb_vl_desconto_rateio_w		dbms_sql.number_table;
tb_vl_seguro_w			dbms_sql.number_table;
tb_vl_liquido_w			dbms_sql.number_table;
tb_cd_material_w		dbms_sql.number_table;
tb_cd_unidade_medida_compra_w	dbms_sql.varchar2_table;
tb_cd_unidade_medida_estoque_w	dbms_sql.varchar2_table;
tb_ds_complemento_w		dbms_sql.varchar2_table;

tb_ds_modelo_w			dbms_sql.varchar2_table;
tb_ie_status_w			dbms_sql.varchar2_table;
tb_ds_log_w			dbms_sql.varchar2_table;

c01 CURSOR FOR
	SELECT	n.nr_sequencia,
		n.nr_seq_nota,
		n.cd_estabelecimento,
		n.cd_cgc_emitente_ok,
		n.cd_serie_nf,
		n.nr_nota_fiscal,
		n.nr_sequencia_nf,
		n.cd_operacao_nf,
		n.dt_emissao,
		n.dt_entrada_saida,
		coalesce(n.vl_mercadoria,0) vl_mercadoria,
		coalesce(n.vl_nota_fiscal,0) vl_nota_fiscal,
		n.cd_cgc_destinatario_ok,
		CASE WHEN n.nr_ordem_compra=0 THEN null  ELSE n.nr_ordem_compra END  nr_ordem_compra,
		n.dt_emissao_nfe,
		n.ds_observacao,
		n.ds_link
	from	nota_fiscal_int_imp n
	where	n.ie_status = 'I';

c02 CURSOR FOR
	SELECT	i.nr_sequencia,
		i.nr_seq_nota,
		i.cd_estabelecimento,
		n.cd_cgc_emitente_ok,
		coalesce(n.cd_serie_nf,i.cd_serie_nf) cd_serie_nf,
		n.nr_sequencia_nf,
		n.nr_nota_fiscal,
		i.nr_item_nf,
		coalesce(i.qt_item,0) qt_item,
		coalesce(i.vl_unit_item_nf,0) vl_unit_item_nf,
		coalesce(i.vl_total_item_nf,0) vl_total_item_nf,
		coalesce(i.vl_frete,0) vl_frete,
		coalesce(i.vl_desconto,0) vl_desconto,
		coalesce(i.vl_despesa_acessoria,0) vl_despesa_acessoria,
		coalesce(i.vl_desconto_rateio,0) vl_desconto_rateio,
		coalesce(i.vl_seguro,0) vl_seguro,
		coalesce(i.vl_liquido,0) vl_liquido,
		i.cd_material_ok,
		i.ds_observacao,
		i.cd_unidade_medida_compra_ok,
		i.cd_unidade_medida_estoque_ok,
		i.ds_complemento
	from	nota_fiscal_item_int_imp i,
		nota_fiscal_int_imp n
	where	n.nr_sequencia	= i.nr_seq_nota_int
	and	n.ie_status = 'I';

c03 CURSOR FOR
	SELECT	n.nr_sequencia
	from	nota_fiscal_int_imp n,
		nota_fiscal p
	where	p.nr_sequencia	= n.nr_seq_nota
	and	n.ie_status	= 'I';

c04 CURSOR FOR
	SELECT	n.nr_sequencia,
		n.nr_seq_nota,
		n.ds_modelo
	from	nota_fiscal_int_imp n,
		nota_fiscal p
	where	p.nr_sequencia	= n.nr_seq_nota
	and	n.ie_status	= 'P';

c05 CURSOR FOR
	SELECT	n.nr_sequencia,
		substr(fis_buscar_inconsist_nota(n.nr_seq_nota),1,4000) ds_log,
		CASE WHEN coalesce(fis_buscar_inconsist_nota(n.nr_seq_nota),'XX')='XX' THEN 'T'  ELSE 'F' END  ie_status
	from	nota_fiscal_int_imp n,
		nota_fiscal p
	where	p.nr_sequencia	= n.nr_seq_nota
	and	n.ie_status	= 'P'
	and	exists (SELECT 	1
			from 	nota_fiscal_consist a
			where 	a.nr_seq_nota = p.nr_sequencia
			and 	a.ie_forma_consistencia = 'S');

BEGIN
select	min(i.cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	nota_fiscal_int_imp i;

select	coalesce(max(p.cd_condicao_pagamento_padrao),0),
	max(p.nr_seq_criterio)
into STRICT	cd_condicao_pagamento_w,
	nr_seq_criterio_w
from	parametro_compras p
where	p.cd_estabelecimento = cd_estabelecimento_w;

open c01;
loop
fetch c01 bulk collect into	
	tb_nr_seq_nota_int_w, tb_nr_seq_nota_w, tb_cd_estabelecimento_w,
	tb_cd_cgc_emitente_w, tb_cd_serie_nf_w, tb_nr_nota_fiscal_w,
	tb_nr_sequencia_nf_w, tb_cd_operacao_nf_w, tb_dt_emissao_w,
	tb_dt_entrada_saida_w, tb_vl_mercadoria_w, tb_vl_total_nota_w,
	tb_cd_cgc_destinatario_w, tb_nr_ordem_compra_w, tb_dt_emissao_nfe_w,
	tb_ds_observacao_w, tb_ds_link_w limit 5000;

	forall i in tb_nr_seq_nota_int_w.first..tb_nr_seq_nota_int_w.last
		insert into nota_fiscal(
			nr_sequencia, cd_estabelecimento, cd_cgc_emitente,
			cd_serie_nf, nr_nota_fiscal, nr_sequencia_nf,
			cd_operacao_nf, dt_emissao, dt_entrada_saida,
			ie_acao_nf, ie_emissao_nf, ie_tipo_frete,
			vl_frete, vl_mercadoria, vl_total_nota,
			qt_peso_bruto, qt_peso_liquido, dt_atualizacao_nrec,
			nm_usuario_nrec, dt_atualizacao, nm_usuario,
			cd_cgc, cd_natureza_operacao, cd_condicao_pagamento,
			ie_situacao, nr_ordem_compra, ie_tipo_nota,
			dt_emissao_nfe, ds_observacao, ds_link_rps)
		values (tb_nr_seq_nota_w(i), tb_cd_estabelecimento_w(i), tb_cd_cgc_emitente_w(i),
			tb_cd_serie_nf_w(i), tb_nr_nota_fiscal_w(i), tb_nr_sequencia_nf_w(i),
			tb_cd_operacao_nf_w(i), tb_dt_emissao_w(i), tb_dt_entrada_saida_w(i),
			1, 0, '0',
			0, tb_vl_mercadoria_w(i), tb_vl_total_nota_w(i),
			0, 0, clock_timestamp(),
			nm_usuario_p, clock_timestamp(), nm_usuario_p,
			tb_cd_cgc_destinatario_w(i), null, cd_condicao_pagamento_w,
			'1', tb_nr_ordem_compra_w(i), 'EN',
			tb_dt_emissao_nfe_w(i), tb_ds_observacao_w(i), tb_ds_link_w(i));
			
	tb_nr_seq_nota_w.delete;
	tb_cd_estabelecimento_w.delete;
	tb_cd_cgc_emitente_w.delete;
	tb_cd_serie_nf_w.delete;
	tb_nr_nota_fiscal_w.delete;
	tb_nr_sequencia_nf_w.delete;
	tb_cd_operacao_nf_w.delete;
	tb_dt_emissao_w.delete;
	tb_dt_entrada_saida_w.delete;
	tb_vl_mercadoria_w.delete;
	tb_vl_total_nota_w.delete;
	tb_cd_cgc_destinatario_w.delete;
	tb_nr_ordem_compra_w.delete;
	tb_dt_emissao_nfe_w.delete;
	tb_ds_observacao_w.delete;
	tb_ds_link_w.delete;
	
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;

open c02;
loop
fetch c02 bulk collect into
	tb_nr_seq_item_w, tb_nr_seq_nota_w, tb_cd_estabelecimento_w, 
	tb_cd_cgc_emitente_w, tb_cd_serie_nf_w, tb_nr_sequencia_nf_w,
	tb_nr_nota_fiscal_w, tb_nr_item_nf_w, tb_qt_item_w,
	tb_vl_unit_item_nf_w, tb_vl_total_item_nf_w, tb_vl_frete_w,
	tb_vl_desconto_w, tb_vl_despesa_acessoria_w, tb_vl_desconto_rateio_w,
	tb_vl_seguro_w, tb_vl_liquido_w, tb_cd_material_w,
	tb_ds_observacao_w, tb_cd_unidade_medida_compra_w, tb_cd_unidade_medida_estoque_w,
	tb_ds_complemento_w limit 5000;

	forall i in tb_nr_seq_item_w.first..tb_nr_seq_item_w.last
		insert into nota_fiscal_item(
			nr_sequencia, cd_estabelecimento, cd_cgc_emitente,
			cd_serie_nf, cd_natureza_operacao, nr_sequencia_nf,
			nr_nota_fiscal, nr_item_nf, qt_item_nf,
			vl_unitario_item_nf, vl_total_item_nf, dt_atualizacao,
			nm_usuario, vl_frete, vl_desconto,
			vl_despesa_acessoria, vl_desconto_rateio, vl_seguro,
			vl_liquido, cd_material, ds_observacao,
			cd_unidade_medida_compra, cd_unidade_medida_estoque, ds_complemento)
		values (	tb_nr_seq_nota_w(i), tb_cd_estabelecimento_w(i), tb_cd_cgc_emitente_w(i),
			tb_cd_serie_nf_w(i), null, tb_nr_sequencia_nf_w(i),
			tb_nr_nota_fiscal_w(i), tb_nr_item_nf_w(i), tb_qt_item_w(i),
			tb_vl_unit_item_nf_w(i), tb_vl_total_item_nf_w(i), clock_timestamp(),
			nm_usuario_p, tb_vl_frete_w(i), tb_vl_desconto_w(i),
			tb_vl_despesa_acessoria_w(i), tb_vl_desconto_rateio_w(i), tb_vl_seguro_w(i),
			tb_vl_liquido_w(i), tb_cd_material_w(i), tb_ds_observacao_w(i),
			tb_cd_unidade_medida_compra_w(i), tb_cd_unidade_medida_estoque_w(i), tb_ds_complemento_w(i));
			
	tb_nr_seq_nota_w.delete;
	tb_cd_estabelecimento_w.delete;
	tb_cd_cgc_emitente_w.delete;
	tb_cd_serie_nf_w.delete;
	tb_nr_sequencia_nf_w.delete;
	tb_nr_nota_fiscal_w.delete;
	tb_nr_item_nf_w.delete;
	tb_qt_item_w.delete;
	tb_vl_unit_item_nf_w.delete;
	tb_vl_total_item_nf_w.delete;
	tb_vl_frete_w.delete;
	tb_vl_desconto_w.delete;
	tb_vl_despesa_acessoria_w.delete;
	tb_vl_desconto_rateio_w.delete;
	tb_vl_seguro_w.delete;
	tb_vl_liquido_w.delete;
	tb_cd_material_w.delete;
	tb_ds_observacao_w.delete;
	tb_cd_unidade_medida_compra_w.delete;
	tb_cd_unidade_medida_estoque_w.delete;
	tb_ds_complemento_w.delete;
	
EXIT WHEN NOT FOUND; /* apply on c02 */
end loop;
close c02;

open c03;
loop
fetch c03 bulk collect into
	tb_nr_seq_nota_int_w limit 5000;

	forall i in tb_nr_seq_nota_int_w.first..tb_nr_seq_nota_int_w.last
		update	nota_fiscal_int_imp
		set	ie_status	= 'P'
		where	nr_sequencia	= tb_nr_seq_nota_int_w(i);
		
	tb_nr_seq_nota_int_w.delete;
	
EXIT WHEN NOT FOUND; /* apply on c03 */
end loop;
close c03;

open c04;
loop
fetch c04 bulk collect into
	tb_nr_seq_nota_int_w, tb_nr_seq_nota_w, tb_ds_modelo_w limit 5000;

	for i in 1 .. tb_nr_seq_nota_int_w.count loop
	
		if (coalesce(tb_ds_modelo_w(i),'X') != 'NFS-e') then
			CALL atualiza_total_nota_fiscal( nr_sequencia_p => tb_nr_seq_nota_w(i), nm_usuario_p => nm_usuario_p);
		end if;
		
		qt_inconsistencia_p => qt_inconsist_nota_w := consiste_nota_integra( nr_seq_nota_p => tb_nr_seq_nota_w(i), nm_usuario_p => nm_usuario_p, qt_inconsistencia_p => qt_inconsist_nota_w, ie_devolucao_integracao_p=> 'N');
		
		if (nr_seq_criterio_w IS NOT NULL AND nr_seq_criterio_w::text <> '') then
			CALL ratear_item_nf( nr_seq_nota_p => tb_nr_seq_nota_w(i), nr_seq_item_p => 0, nr_seq_criterio_p => nr_seq_criterio_w,
					nm_usuario_p => nm_usuario_p, dt_vigencia_p => clock_timestamp());
		end if;
	
	end loop;
	
	tb_nr_seq_nota_int_w.delete;
	tb_nr_seq_nota_w.delete;
	tb_ds_modelo_w.delete;

EXIT WHEN NOT FOUND; /* apply on c04 */
end loop;
close c04;

open c05;
loop
fetch c05 bulk collect into
	tb_nr_seq_nota_int_w, tb_ds_log_w, tb_ie_status_w limit 5000;

	forall i in tb_nr_seq_nota_int_w.first..tb_nr_seq_nota_int_w.last
		update	nota_fiscal_int_imp
		set	ie_status	= tb_ie_status_w(i),
			ds_log		= tb_ds_log_w(i)
		where	nr_sequencia	= tb_nr_seq_nota_int_w(i);
		
	tb_nr_seq_nota_int_w.delete;
	tb_ie_status_w.delete;
	tb_ds_log_w.delete;
		
EXIT WHEN NOT FOUND; /* apply on c05 */
end loop;
close c05;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE create_invoice_integration ( nm_usuario_p text ) FROM PUBLIC;

