-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_endereco_cep (cd_pessoa_fisica_p text, cd_cep_p text, ie_cep_internet_p text default 'N', ie_tipo_endereco_p bigint default 1, nm_usuario_p text DEFAULT NULL) AS $body$
DECLARE


nm_logradouro_w		varchar(125);
nm_localidade_w		varchar(60);
nm_bairro_w		varchar(90);
cd_unidade_federacao_w	compl_pessoa_fisica.sg_estado%type;
cd_cep_w		varchar(10);
cd_municipio_ibge_w	varchar(6);
ds_tipo_logradouro_w	varchar(125);
cd_tipo_logradouro_w	varchar(3);
nr_sequencia_w		bigint;
qt_existe_telefone_w	bigint;


BEGIN

if (ie_cep_internet_p = 'S') then

	select	max(a.nm_logradouro),
		max(a.nm_localidade),
		max(a.nm_bairro),
		max(a.cd_unidade_federacao),
		max(a.nr_logradouro)
	into STRICT	nm_logradouro_w,
		nm_localidade_w,
		nm_bairro_w,
		cd_unidade_federacao_w,
		cd_cep_w
	from	cep_logradouro a
	where	a.cd_logradouro = cd_cep_p;

else
	select	max(a.nm_logradouro),
		max(b.nm_localidade),
		max(c.ds_bairro),
		max(a.ds_uf),
		max(a.cd_cep)
	into STRICT	nm_logradouro_w,
		nm_localidade_w,
		nm_bairro_w,
		cd_unidade_federacao_w,
		cd_cep_w
	from	cep_loc b,
		cep_bairro c,
		cep_log a
	where	b.nr_sequencia      = c.nr_seq_loc
	and	a.cd_bairro_inicial = c.nr_sequencia
	and	b.nr_sequencia      = a.nr_seq_loc
	and	a.cd_cep            = cd_cep_p;
end if;

If (coalesce(cd_cep_w::text, '') = '') then
	select	max(null),
		max(b.nm_localidade),
		max(null),
		max(b.ds_uf),
		max(b.cd_cep)
	into STRICT	nm_logradouro_w,
		nm_localidade_w,
		nm_bairro_w,
		cd_unidade_federacao_w,
		cd_cep_w
	from	cep_loc b
	where	b.cd_cep = cd_cep_p;
end if;

If (coalesce(cd_cep_w::text, '') = '') and (ie_cep_internet_p = 'S') then
	select	max(a.nm_logradouro),
		max(b.nm_localidade),
		max(c.ds_bairro),
		max(a.ds_uf),
		max(a.cd_cep)
	into STRICT	nm_logradouro_w,
		nm_localidade_w,
		nm_bairro_w,
		cd_unidade_federacao_w,
		cd_cep_w
	from	cep_loc b,
		cep_bairro c,
		cep_log a
	where	b.nr_sequencia      = c.nr_seq_loc
	and	a.cd_bairro_inicial = c.nr_sequencia
	and	b.nr_sequencia      = a.nr_seq_loc
	and	a.cd_cep            = cd_cep_p;
end if;


if (cd_cep_w IS NOT NULL AND cd_cep_w::text <> '') then

	begin
		cd_municipio_ibge_w := Obter_Cod_Municipio_IBGE(cd_cep_p);
	exception
		when	others	then
			cd_municipio_ibge_w := null;
	end;

	select	max(ds_tipo_logradouro)
	into STRICT	ds_tipo_logradouro_w
	from	cep_logradouro_v
	where	cd_cep = cd_cep_p;

	select	max(cd_tipo_logradouro)
	into STRICT	cd_tipo_logradouro_w
	from	sus_tipo_logradouro
	where	upper(ds_tipo_logradouro) = upper(coalesce(ds_tipo_logradouro_w, ' '));

	begin
		select	1
		into STRICT	qt_existe_telefone_w
		from	compl_pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_fisica_p
		and	ie_tipo_complemento = 1  LIMIT 1;
	exception
		when	no_data_found then
			qt_existe_telefone_w := 0;
	end;

	If (qt_existe_telefone_w = 0) then
		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_sequencia_w
		from	compl_pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_fisica_p;

		insert into compl_pessoa_fisica(nr_sequencia,
			cd_pessoa_fisica,
			ie_tipo_complemento,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nm_usuario,
			dt_atualizacao,
			ds_endereco,
			cd_cep,
			ds_bairro,
			ds_municipio,
			sg_estado,
			cd_tipo_logradouro,
			cd_municipio_ibge)
		values (nr_sequencia_w,
			cd_pessoa_fisica_p,
			ie_tipo_endereco_p,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_logradouro_w,
			cd_cep_p,
			nm_bairro_w,
			nm_localidade_w,
			cd_unidade_federacao_w,
			cd_tipo_logradouro_w,
			cd_municipio_ibge_w);
	else

		update	compl_pessoa_fisica
		set	cd_cep = cd_cep_p,
			ds_endereco = coalesce(nm_logradouro_w, ds_endereco),
			ds_bairro = coalesce(nm_bairro_w, ds_bairro),
			cd_tipo_logradouro = coalesce(cd_tipo_logradouro_w, cd_tipo_logradouro),
			ds_municipio = coalesce(nm_localidade_w, ds_municipio),
			cd_municipio_ibge = coalesce(cd_municipio_ibge_w, cd_municipio_ibge),
			sg_estado = coalesce(cd_unidade_federacao_w, sg_estado),
			dt_atualizacao = clock_timestamp(),
			nm_usuario = nm_usuario_p
		where	cd_pessoa_fisica = cd_pessoa_fisica_p
		and	ie_tipo_complemento = ie_tipo_endereco_p;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_endereco_cep (cd_pessoa_fisica_p text, cd_cep_p text, ie_cep_internet_p text default 'N', ie_tipo_endereco_p bigint default 1, nm_usuario_p text DEFAULT NULL) FROM PUBLIC;

