-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_mat_atend_cartao_eme ( nr_atendimento_p bigint, nr_seq_lancamento_p bigint, cd_motivo_baixa_p bigint, cd_estabelecimento_p bigint, cd_medico_p text, cd_perfil_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_prescr_w			bigint;
nr_seq_mat_atend_w		bigint;
nr_seq_mat_prescr_w		bigint;
cd_setor_atendimento_w		integer;
cd_material_w			integer;
dt_entrada_unidade_w		timestamp;
cd_unidade_medida_w		varchar(30);
ds_erro_w			varchar(2000);
qt_material_w			double precision;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
nr_doc_convenio_w		varchar(20);
ie_tipo_guia_w			varchar(2);
nr_seq_atepacu_w		bigint;
dt_atualizacao_w		timestamp;
cd_local_estoque_w		smallint;
nr_prescricao_w			bigint;
cd_senha_w			varchar(20);
cd_cgc_w			varchar(14);
nr_seq_tipo_baixa_w		bigint;
cd_motivo_baixa_w		bigint;
ie_liberar_w			varchar(5);
ie_medico_w			varchar(1);
nr_seq_lanc_w			bigint;
ie_local_estoque_w		varchar(1);
ie_atualiza_estoque_w		tipo_baixa_prescricao.ie_atualiza_estoque%type;
ie_conta_paciente_w		tipo_baixa_prescricao.ie_conta_paciente%type;
nr_seq_lote_fornec_w	sup_lanc_cartao_item.nr_seq_lote_fornec%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
dt_inicio_prescr_w		prescr_medica.dt_inicio_prescr%type;
dt_validade_prescr_w		prescr_medica.dt_validade_prescr%type;
ie_rep_cpoe_w			parametro_medico.ie_rep_cpoe%type;
dt_lancamento_w			prescr_medica.dt_validade_prescr%type;
ie_hora_lancamento_w		FUNCAO_PARAMETRO.VL_PARAMETRO_PADRAO%type;
dt_horario_item_w		prescr_medica.dt_validade_prescr%type;

c01 CURSOR FOR
SELECT 	cd_material,
	cd_unidade_medida,
	qt_material,
	nr_sequencia,
	nr_seq_lote_fornec,
	coalesce(dt_atualizacao_nrec,dt_atualizacao)
from 	sup_lanc_cartao_item
where	coalesce(ie_conta,'N') = 'N'
and	nr_seq_lancamento = nr_seq_lancamento_p;




BEGIN
if (coalesce(cd_motivo_baixa_p,0) = 0) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(197006); --'Nao ha motivo de baixa padrao informado no parametro [02]. Verifique!'
end if;
cd_motivo_baixa_w := cd_motivo_baixa_p;

ie_liberar_w := obter_param_usuario(440, 5, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_liberar_w);
ie_local_estoque_w := obter_param_usuario(440, 6, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_local_estoque_w);
ie_hora_lancamento_w := obter_param_usuario(440, 8, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_hora_lancamento_w);


select	min(coalesce(dt_atualizacao_nrec,dt_atualizacao))
into STRICT	dt_lancamento_w
from 	sup_lanc_cartao_item
where	coalesce(ie_conta,'N') = 'N'
and	nr_seq_lancamento = nr_seq_lancamento_p;


if (ie_hora_lancamento_w	= 'N') then
	dt_lancamento_w	:= null;
end if;

nr_prescricao_w := Gerar_prescr_cartao_eme(cd_medico_p, cd_perfil_p, cd_estabelecimento_p, nr_atendimento_p, nm_usuario_p, nr_prescricao_w, dt_lancamento_w);

open C01;
loop
fetch C01 into	
	cd_material_w,
	cd_unidade_medida_w,
	qt_material_w,
	nr_seq_lanc_w,
	nr_seq_lote_fornec_w,
	dt_horario_item_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	if (ie_hora_lancamento_w	= 'N') then
		dt_horario_item_w	:= null;
	end if;
	
	nr_seq_mat_prescr_w := Gerar_prescr_material_eme(nr_prescricao_w, cd_material_w, qt_material_w, cd_unidade_medida_w, 0, nm_usuario_p, nr_seq_mat_prescr_w, dt_horario_item_w);
	
	select	Obter_Atepacu_paciente(nr_atendimento_p,'IAA')
	into STRICT	nr_seq_atepacu_w
	;
	
	select	coalesce(max(cd_setor_atendimento),0),
		coalesce(max(dt_entrada_unidade),clock_timestamp()),
		coalesce(max(obter_local_estoque_setor(cd_setor_atendimento,cd_estabelecimento_p)),0)
	into STRICT	cd_setor_atendimento_w,
		dt_entrada_unidade_w,
		cd_local_estoque_w
	from 	atend_paciente_unidade
	where 	nr_seq_interno = nr_seq_atepacu_w;
	
	if (ie_local_estoque_w = 'U') then
	
		select	coalesce(max(obter_local_estoque_setor(cd_setor_atendimento,cd_estabelecimento_p)),0)
		into STRICT	cd_local_estoque_w
		from 	usuario
		where 	nm_usuario = nm_usuario_p;
	
	elsif (ie_local_estoque_w = 'C') then
		
		select	coalesce(max(obter_local_estoque_setor(cd_setor_atendimento,cd_estabelecimento_p)),0)
		into STRICT	cd_local_estoque_w
		from 	sup_lanc_cartao
		where 	nr_sequencia = nr_seq_lancamento_p;
		
	end if;
	
	select	nr_sequencia,
		ie_atualiza_estoque,
		ie_conta_paciente
	into STRICT	nr_seq_tipo_baixa_w,
		ie_atualiza_estoque_w,
		ie_conta_paciente_w
	from	tipo_baixa_prescricao
	where	cd_tipo_baixa = cd_motivo_baixa_w
	and	ie_prescricao_devolucao = 'P';
	
	if (coalesce(ie_atualiza_estoque_w,'S') = 'N') then
		cd_local_estoque_w := null;
	end if;
	
	SELECT * FROM obter_convenio_execucao(nr_atendimento_p, clock_timestamp(), cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;
	
	if (coalesce(ie_conta_paciente_w,'S') = 'S') then
		select	nextval('material_atend_paciente_seq')
		into STRICT	nr_seq_mat_atend_w
		;

		insert	into material_atend_paciente(nr_sequencia,
			nr_atendimento,
			dt_entrada_unidade,
			cd_material,
			dt_atendimento,
			dt_conta,
			cd_unidade_medida,
			qt_material,
			dt_atualizacao,
			nm_usuario,
			cd_convenio,
			cd_categoria,
			nr_doc_convenio,
			ie_tipo_guia,
			cd_material_prescricao,
			cd_material_exec,
			cd_acao,
			cd_setor_atendimento,
			qt_executada,
			vl_unitario,
			qt_ajuste_conta,
			ie_valor_informado,
			ie_guia_informada,
			ie_auditoria,
			nm_usuario_original,
			cd_situacao_glosa,
			nr_seq_atepacu,
			cd_local_estoque,
			cd_cgc_fornecedor,
			nr_seq_tipo_baixa,
			nr_prescricao,
			nr_sequencia_prescricao,
			nr_seq_lote_fornec)
		values (nr_seq_mat_atend_w,
			nr_atendimento_p,
			dt_entrada_unidade_w,
			cd_material_w,
			clock_timestamp(),
			clock_timestamp(),
			cd_unidade_medida_w,
			qt_material_w,		
			clock_timestamp(),
			nm_usuario_p,
			cd_convenio_w,
			cd_categoria_w,
			nr_doc_convenio_w,
			ie_tipo_guia_w,
			cd_material_w,
			cd_material_w,
			'1',
			cd_setor_atendimento_w,
			qt_material_w, 
			0, 
			0,
			'N', 
			'N', 
			'N', 
			nm_usuario_p, 
			0,
			nr_seq_atepacu_w,
			cd_local_estoque_w,
			cd_cgc_w,
			nr_seq_tipo_baixa_w,
			nr_prescricao_w,
			nr_seq_mat_prescr_w,
			nr_seq_lote_fornec_w);
		
		update	sup_lanc_cartao_item
		set	ie_conta = 'S'
		where	nr_sequencia = nr_seq_lanc_w;
		
		update	prescr_material
		set	cd_motivo_baixa = cd_motivo_baixa_w
		where	nr_prescricao = nr_prescricao_w
		and	nr_sequencia = nr_seq_mat_prescr_w;

		CALL Atualiza_Preco_Material(nr_seq_mat_atend_w,nm_usuario_p);	
	elsif (coalesce(ie_atualiza_estoque_w,'S') = 'S') then
		begin
		CALL gerar_prescricao_estoque(
			cd_estabelecimento_p,
			nr_atendimento_p,
			dt_entrada_unidade_w,
			cd_material_w,
			clock_timestamp(),
			1,
			cd_local_estoque_w,
			qt_material_w,
			cd_setor_atendimento_w,
			cd_unidade_medida_w,
			nm_usuario_p, 'I',
			nr_prescricao_w,
			0,
			0,
			0,
			cd_cgc_w,
			null,
			null,
			0,
			null,
			0,
			null,
			null,
			null);
		exception
			when others then
			null;
		end;
	end if;
	end;
end loop;
close c01;

update	sup_lanc_cartao
set		nr_prescricao = nr_prescricao_w
where	nr_sequencia = nr_seq_lancamento_p;

if (ie_liberar_w = 'S') then
	update	prescr_medica
	set	ie_lib_farm 	= 'N'
	where	nr_prescricao	= nr_prescricao_w;
	
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_medico_w
	from	medico a,
			usuario b
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	b.nm_usuario		= nm_usuario_p
	and	a.ie_situacao		= 'A';
	
	ds_erro_w := liberar_prescricao(nr_prescricao_w, nr_atendimento_p, ie_medico_w, cd_perfil_p, nm_usuario_p, 'S', ds_erro_w);
else
	select coalesce(max(ie_rep_cpoe), 'N')
	  into STRICT ie_rep_cpoe_w
	  from parametro_medico
	 where cd_estabelecimento = cd_estabelecimento_p;

	if (ie_rep_cpoe_w = 'S') then

		select case count(*) when 0 then 'N' else 'S' end
		  into STRICT ie_medico_w
		  from medico a,
			   usuario b
		 where a.cd_pessoa_fisica = b.cd_pessoa_fisica
		   and b.nm_usuario = nm_usuario_p
		   and a.ie_situacao = 'A';
		
		select max(a.dt_inicio_prescr),
		       max(a.dt_validade_prescr),
			   max(a.cd_pessoa_fisica)
		  into STRICT dt_inicio_prescr_w,
			   dt_validade_prescr_w,
			   cd_pessoa_fisica_w
		  from prescr_medica a
		 where a.nr_prescricao = nr_prescricao_w;

		CALL CPOE_REP_Gerar_itens( nr_prescricao_w,
							  nr_atendimento_p,
							  dt_inicio_prescr_w,
							  dt_validade_prescr_w,
							  null,	/* dt_liberacao */
							  nm_usuario_p,
							  cd_pessoa_fisica_w,
							  ie_medico_w,
							  'N' );

	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_mat_atend_cartao_eme ( nr_atendimento_p bigint, nr_seq_lancamento_p bigint, cd_motivo_baixa_p bigint, cd_estabelecimento_p bigint, cd_medico_p text, cd_perfil_p bigint, nm_usuario_p text) FROM PUBLIC;

