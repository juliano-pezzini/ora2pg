-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lote_guia_fat_xml ( nr_seq_lote_p pls_lote_faturamento.nr_sequencia%type, nr_seq_fatura_p pls_fatura.nr_sequencia%type, nm_arquivo_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Gera os dados do XML no formato TISS das faturas
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[ ] Objetos do dicionario [ X] Tasy (Delphi/Java) [ ] Portal [ ] Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
-------------------------------------------------------------------------------------------------------------------

Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_novo_pos_estab_w		pls_visible_false.ie_novo_pos_estab%type := 'N';

nr_seq_lote_fatura_w		pls_lote_faturamento.nr_sequencia%type;
sg_estado_w			pessoa_juridica.sg_estado%type;

-- Dentro do Cursor 01
nr_seq_esquema_xml_w		pls_regra_arquivo_fatura.nr_seq_esquema_xml%type;
qt_max_reg_w			pls_regra_divisao_fatura.qt_max_conta%type;
qt_registro_w			integer;
ds_caminho_arquivo_w		pls_regra_arquivo_fatura.ds_caminho_arquivo%type;
ie_tipo_arquivo_w		pls_regra_arquivo_fatura.ie_tipo_arquivo%type;
cd_interface_w			pls_regra_arquivo_fatura.cd_interface%type;
ie_compactar_w			pls_regra_arquivo_fatura.ie_compactar%type;
nm_arquivo_w			pls_regra_arquivo_fatura.nm_arquivo%type;
nr_seq_regra_xml_w		pls_regra_arquivo_fatura.nr_sequencia%type;
ds_mascara_w			pls_regra_arquivo_fatura.nm_mascara_arquivo%type;
ds_mascara_zip_w		pls_regra_arquivo_fatura.nm_mascara_arquivo_zip%type;
ds_mascara_arq_adic_w		pls_regra_arquivo_fatura.nm_mascara_arquivo_adic%type;
ds_interface_w			pls_regra_arquivo_fatura.ds_interface%type;
ie_tipo_compactar_w		pls_regra_arquivo_fatura.ie_tipo_compactar%type;
nr_seq_camara_w			pls_camara_compensacao.nr_sequencia%type;
nr_seq_regra_div_fat_w		pls_regra_divisao_fatura.nr_sequencia%type;
dt_atual_w			timestamp := trunc(clock_timestamp());
qt_max_conta_w			pls_regra_divisao_fatura.qt_max_conta%type;
qt_max_guia_ref_w		pls_regra_divisao_fatura.qt_max_guia_ref%type;
ie_versao_xml_w			varchar(255) := null;
dt_referencia_w			pls_lote_faturamento.dt_mesano_referencia%type;
nr_seq_lote_fat_guia_envio_w	pls_lote_fat_guia_envio.nr_sequencia%type;

-- Dentro do Cursor 02
cd_registro_ans_w		pls_fat_guia_arquivo.cd_registro_ans%type;
cd_registro_ans_guia_w		pls_fat_guia_arquivo.cd_registro_ans_guia%type;
nr_seq_arquivo_w		pls_fat_guia_arquivo.nr_seq_arquivo%type;
nr_seq_fat_guia_arq_w		pls_fat_guia_arquivo.nr_sequencia%type;

-- Dentro do Cursor 04 - Campos que vem do Cursor 03
cd_medico_solic_w		pls_conta.cd_medico_solicitante%type;
cd_medico_exec_w		pls_conta.cd_medico_executor%type;
nr_seq_grau_partic_w		pls_conta.nr_seq_grau_partic%type;
cd_usuario_plano_w		pls_fatura_guia_envio.cd_usuario_plano%type;
ie_tipo_consulta_w		pls_conta.ie_tipo_consulta%type;
nr_seq_saida_spsadt_w		pls_conta.nr_seq_saida_spsadt%type;
ie_carater_internacao_w		pls_fatura_guia_envio.ie_carater_internacao%type;
dt_entrada_w			pls_conta.dt_entrada%type;
dt_saida_w			pls_conta.dt_alta%type;
nm_beneficiario_w		pls_fatura_guia_envio.nm_beneficiario%type;
nm_produto_w			pls_fatura_guia_envio.nm_produto%type;
cd_guia_w			pls_fatura_guia_envio.cd_guia%type;
cd_guia_referencia_w		pls_fatura_guia_envio.cd_guia_referencia%type;
cd_guia_prestador_w		pls_fatura_guia_envio.cd_guia_prestador%type;

-- Dentro do Cursor 03
nr_seq_fat_guia_envio_w		pls_fatura_guia_envio.nr_sequencia%type;
qt_registros_w			integer;
nm_profissional_solic_w		pls_fatura_guia_envio.nm_profissional_solic%type;
nr_seq_conselho_solic_w		conselho_profissional.nr_sequencia%type;
nr_conselho_solic_w		medico.nr_crm%type;
cd_cbos_solic_w			pls_fatura_guia_envio.cd_cbos_solic%type;
uf_conselho_solic_w		pls_fatura_guia_envio.uf_conselho_solic%type;
cd_prestador_solic_w		pls_prestador.cd_prestador%type;
cd_cnes_solic_w			pls_fatura_guia_envio.cd_cnes_prestador%type;
nm_prestador_solic_w		varchar(255);
nm_profissional_executante_w	varchar(255);
nr_seq_conselho_exec_w		conselho_profissional.nr_sequencia%type;
nr_conselho_executante_w	varchar(20);
cd_cbos_executante_w		varchar(15);
uf_conselho_executante_w	varchar(2);
cd_prestador_exec_w		pls_fatura_guia_envio.cd_prestador_exec%type;
cd_cnes_exec_w			pls_fatura_guia_envio.cd_cnes_exec%type;
nm_prestador_exec_w		pls_fatura_guia_envio.nm_prestador_exec%type;
nr_seq_prestador_exec_aux_w	pls_conta.nr_seq_prestador_exec%type;
nr_seq_prestador_exec_w		pls_conta.nr_seq_prestador_exec%type;
sg_conselho_solic_w		pls_fatura_guia_envio.sg_conselho_solic%type;
sg_conselho_executante_w	varchar(10);
nm_profissional_a500_w		varchar(255);
sg_conselho_a500_w		varchar(10);
nr_conselho_a500_w		varchar(15);
uf_conselho_a500_w		varchar(2);
cd_cbo_exec_a500_w		varchar(6);
tp_nota_w			ptu_nota_cobranca.tp_nota%type;
cd_cbo_req_a500_w		varchar(6);
cd_cooperativa_w 		varchar(30);
ds_cooperativa_w 		varchar(255);
dt_autorizacao_w		pls_guia_plano.dt_autorizacao%type;
cd_senha_w			pls_fatura_guia_envio.cd_senha%type;
dt_validade_autorizacao_w	pls_guia_plano.dt_validade_senha%type;
cd_cid_w			pls_diagnostico_conta.cd_doenca%type;
nm_tabela_cid_w			varchar(255);
ds_cid_w			varchar(255);
ie_carteira_fatura_tiss_w	pls_parametros_fat_envio.ie_carteira%type;
ie_taxa_administracao_xml_w	pls_parametros_fat_envio.ie_taxa_administracao_xml%type;
nr_cgc_cpf_ptu_w		ptu_nota_servico.nr_cgc_cpf%type;
nr_seq_regra_w			integer;
ie_tipo_atendimento_w		pls_tipo_atendimento.cd_tiss%type;
cd_cgc_contratado_w		pls_fatura_guia_envio.cd_cgc_contratado%type;
cd_cgc_contratado_solic_w	pls_fatura_guia_envio.cd_cgc_contratado_solic%type;
nr_cpf_executor_w		pls_fatura_guia_envio.nr_cpf_executor%type;

-- Dentro do Cursor 04 - Campos que vem do Cursor 04
vl_filme_w			pls_conta_pos_estabelecido.vl_materiais%type;
dt_atendimento_w		timestamp;
vl_filme_total_w		pls_conta_pos_estabelecido.vl_materiais%type;
vl_filme_tx_w			pls_conta_pos_estabelecido.vl_lib_taxa_material%type;
ie_via_acesso_w			pls_conta_proc.ie_via_acesso%type;
ie_tecnica_utilizada_w		pls_conta_proc.ie_tecnica_utilizada%type;
cd_procedimento_w		pls_conta_proc.cd_procedimento%type;
dt_fim_proc_w			pls_conta_proc.dt_fim_proc%type;

-- Dentro do Cursor 04 - Limpando no inicio
ds_item_w			varchar(255);
cd_tipo_tabela_w		tiss_tipo_tabela.cd_tabela_xml%type;
cd_procedimento_conv_w		pls_fat_guia_envio_proc.cd_proced_conversao%type;
ds_procedimento_conv_w		pls_fat_guia_envio_proc.ds_proc_conversao_regra%type;
nr_seq_regra_proc_conv_w	pls_conv_proc_fat_xml.nr_sequencia%type;
cd_tab_item_conv_proc_w		pls_conv_proc_fat_xml.cd_tab_item%type;
cd_proc_conversao_regra_w	pls_fat_guia_envio_proc.cd_proced_conversao%type;
ds_proc_conversao_regra_w	pls_fat_guia_envio_proc.ds_proc_conversao_regra%type;
cd_grau_partic_w		pls_fat_guia_envio_partic.cd_grau_partic%type;
nr_cpf_contratado_exec_w	pls_fat_guia_envio_partic.nr_cpf_contratado_exec%type;
nm_profissional_exec_w		pls_fat_guia_envio_partic.nm_profissional_exec%type;
nr_crm_exec_w			pls_fat_guia_envio_partic.nr_crm_exec%type;
uf_crm_exec_w			pls_fat_guia_envio_partic.uf_crm_exec%type;
cd_cbo_exec_w			pls_fat_guia_envio_partic.cd_cbo_exec%type;
cd_prestador_part_exec_w	pls_fat_guia_envio_partic.cd_prestador_exec%type;
cd_cgc_contratado_exec_w	pls_fat_guia_envio_partic.cd_cgc_contratado_exec%type;
sg_conselho_exec_w		pls_fat_guia_envio_partic.sg_conselho_exec%type;
nr_seq_partic_padrao_w		pls_regra_campos_part_xml.nr_seq_partic_padrao%type;

-- Dentro do Cursor 04
tx_reducao_acres_proc_w		pls_fat_guia_envio_proc.tx_reducao_acrescimo%type;
vl_beneficiario_w		pls_conta_pos_estabelecido.vl_beneficiario%type;
vl_administracao_w		pls_conta_pos_estabelecido.vl_administracao%type;
vl_taxa_item_w			pls_fatura_proc.vl_faturado%type;
nr_seq_fat_guia_envio_proc_w	pls_fat_guia_envio_proc.nr_sequencia%type;
nr_seq_regra_adic_w		integer;
ie_valor_filme_w		varchar(1);
ie_somente_vl_filme_w		pls_fat_regra_proc_item.ie_somente_vl_filme%type;
vl_benef_unit_w			double precision;

-- Dentro do Cursor 06
nr_seq_conselho_imp_w		pls_proc_participante.nr_seq_conselho%type;
nr_seq_cbo_saude_imp_w		pls_proc_participante.nr_seq_cbo_saude%type;
cd_pf_prest_part_w		pessoa_fisica.cd_pessoa_fisica%type;
sg_conselho_exec_ww		pls_fat_guia_envio_partic.sg_conselho_exec%type;
nr_crm_exec_ww			pls_fat_guia_envio_partic.nr_crm_exec%type;
ie_tipo_pessoa_prestador_w	ptu_nota_servico.ie_tipo_pessoa_prestador%type;
ie_tipo_prestador_w		ptu_nota_servico.ie_tipo_prestador%type;
qt_regra_conv_w			integer;
ie_partic_proc_w		varchar(3);
ie_gera_tag_w			varchar(1);

-- Dentro do Cursor 07 - Campos que vem do Cursor 07
dt_atendimento_mat_w		timestamp;
nr_seq_material_w		pls_conta_mat.nr_seq_material%type;

-- Dentro do Cursor 07 - Limpando no inicio
cd_material_conv_w		pls_conv_mat_fat_xml.cd_material_conv%type;
ds_material_conv_w		pls_conv_mat_fat_xml.ds_material_conv%type;
cd_prefixo_w			pls_conv_mat_fat_xml.cd_prefixo%type;
nr_seq_regra_mat_conv_w		pls_conv_mat_fat_xml.nr_sequencia%type;
cd_tab_item_conv_mat_w		pls_conv_mat_fat_xml.cd_tab_item%type;
ie_agrupamento_conv_mat_w	pls_conv_mat_fat_xml.ie_agrupamento%type;
ds_mat_conversao_regra_w	pls_fat_guia_envio_mat.ds_mat_conversao_regra%type;
nr_seq_fat_guia_envio_mat_w	pls_fat_guia_envio_mat.nr_sequencia%type;

-- Dentro do Cursor 07
nr_registro_anvisa_w		pls_fat_guia_envio_mat.nr_registro_anvisa%type;
cd_ref_fabricante_w		pls_fat_guia_envio_mat.cd_ref_fabricante%type;
cd_material_ops_w		pls_material.cd_material_ops%type;
cd_unidade_medida_w		pls_fat_guia_envio_mat.cd_unidade_medida%type;
tx_reducao_acrescimo_w		pls_conta_mat.tx_reducao_acrescimo%type;
qt_material_ww			pls_fat_guia_envio_mat.qt_material%type;
ds_codigo_prof_w		pessoa_fisica.ds_codigo_prof%type;

-- Dentro do Cursor 09
qt_guias_geradas_w		integer;
ie_tipo_guia_w			pls_fat_guia_arquivo.ie_tipo_guia%type;

ie_fatura_taxa_w		pls_fatura.ie_fatura_taxa%type;
cd_cnes_interc_w		pls_prestador_intercambio.cd_cnes%type;

-- FATURAS
c01 CURSOR(	nr_seq_fatura_pc		pls_fatura.nr_sequencia%type,
		nr_seq_lote_pc			pls_lote_faturamento.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_fatura,
		nr_seq_pagador,
		nr_seq_congenere,
		coalesce(ie_fatura_taxa,'N') ie_fatura_taxa
	from	pls_fatura
	where	nr_sequencia = nr_seq_fatura_pc
	and	coalesce(dt_geracao_xml::text, '') = ''
	
union all

	SELECT	nr_sequencia nr_seq_fatura,
		nr_seq_pagador,
		nr_seq_congenere,
		coalesce(ie_fatura_taxa,'N') ie_fatura_taxa
	from	pls_fatura
	where	nr_seq_lote 			= nr_seq_lote_pc
	and	coalesce(dt_geracao_xml::text, '') = ''
	and	coalesce(ie_fatura_taxa, 'N')	= 'N';

-- FATURAS CONTAS
c02 CURSOR(	nr_seq_fatura_pc		pls_fatura.nr_sequencia%type) FOR
	SELECT	c.ie_tipo_guia ie_tipo_guia_param
	from	pls_conta		c,
		pls_fatura_evento	b,
		pls_fatura_conta	a
	where	a.nr_seq_fatura_evento	= b.nr_sequencia
	and	a.nr_seq_conta		= c.nr_sequencia
	and	b.nr_seq_fatura		= nr_seq_fatura_pc
	group by c.ie_tipo_guia;

-- CONTAS
c03 CURSOR(	ie_tipo_guia_param_pc		pls_conta.ie_tipo_guia%type,
		nr_seq_fatura_pc		pls_fatura.nr_sequencia%type) FOR
	SELECT	g.nr_sequencia nr_seq_conta,
		d.nr_sequencia nr_seq_segurado,
		coalesce(coalesce(g.cd_guia_fat, g.cd_guia_pos_estab), g.cd_guia) cd_guia,
		g.cd_guia_ok cd_guia_referencia,
		coalesce(g.cd_guia_fat, g.cd_guia_prestador) cd_guia_prestador,
		g.dt_atendimento_referencia dt_atend_ref_guia,
		h.nm_pessoa_fisica nm_beneficiario,
		a.ds_plano nm_produto,
		g.cd_medico_solicitante cd_medico_solic,
		g.nr_seq_prestador_exec,
		g.ie_carater_internacao,
		coalesce(g.dt_atendimento_referencia, g.dt_atendimento) dt_atendimento,
		coalesce(g.nr_seq_saida_spsadt, nr_seq_saida_consulta) nr_seq_saida_spsadt,
		g.nr_seq_tipo_atendimento,
		g.ie_tipo_guia,
		substr(h.nr_cartao_nac_sus, 1, 15) nr_cartao_nac_sus,
		g.cd_medico_executor,
		g.nr_seq_conselho_exec,
		g.nr_seq_conselho_solic,
		g.ie_tipo_consulta,
		coalesce(g.nr_seq_prestador, b.nr_seq_prestador) nr_seq_prestador_solic,
		g.nr_seq_tipo_acomodacao,
		g.nr_seq_grau_partic,
		g.nr_seq_saida_int,
		coalesce(g.ie_regime_internacao, '1') ie_regime_internacao,
		g.nr_seq_clinica,
		g.dt_alta dt_saida,
		g.dt_entrada,
		f.nr_sequencia nr_seq_fatura_conta,
		d.nr_seq_contrato,
		d.nr_seq_intercambio,
		b.nr_seq_congenere,
		b.ie_origem_protocolo,
		g.nr_seq_nota_cobranca,
		g.nr_seq_analise,
		g.cd_senha cd_senha_conta,
		g.nr_seq_guia,
		g.dt_validade_senha dt_validade_senha_conta,
		g.dt_autorizacao dt_autorizacao_conta,
		g.nr_seq_conta_princ,
		pls_obter_dados_prestador(g.nr_seq_prestador_exec, 'CPF') nr_cpf_prest_exec,
		g.nr_seq_conta_referencia,
		a.nr_sequencia nr_seq_plano,
		g.nr_seq_prest_inter,
		g.ie_cobertura_especial,
		g.ie_regime_atendimento,
		g.ie_saude_ocupacional
	from	pessoa_fisica			h,
		pls_conta			g,
		pls_fatura_conta		f,
		pls_fatura_evento		e,
		pls_segurado			d,
		pls_protocolo_conta		b,
		pls_plano			a
	where	h.cd_pessoa_fisica		= d.cd_pessoa_fisica
	and	f.nr_seq_fatura_evento		= e.nr_sequencia
	and	f.nr_seq_conta			= g.nr_sequencia
	and	g.nr_seq_segurado		= d.nr_sequencia
	and	d.nr_seq_plano			= a.nr_sequencia
	and	g.nr_seq_protocolo		= b.nr_sequencia
	and	g.ie_tipo_guia 			= ie_tipo_guia_param_pc
	and	e.nr_seq_fatura			= nr_seq_fatura_pc
	order by g.nr_sequencia;

-- PROCEDIMENTOS
c04 CURSOR(	nr_seq_fatura_conta_pc		pls_fatura_conta.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_conta_proc,
		coalesce(b.cd_item_convertido_xml, coalesce(b.cd_procedimento,a.cd_procedimento)) cd_procedimento,
		a.ie_origem_proced,
		a.dt_procedimento,
		coalesce(a.dt_inicio_proc, a.dt_procedimento) dt_inicio_proc,
		a.dt_fim_proc,
		coalesce(b.qt_item, a.qt_procedimento) qt_procedimento,
		a.vl_unitario vl_unitario_proc,
		a.vl_liberado vl_procedimento,
		a.ie_via_acesso,
		a.ie_tecnica_utilizada,
		b.nr_seq_tiss_tab_conversao,
		coalesce(b.vl_materiais, 0) + coalesce(b.vl_lib_taxa_material, 0) vl_filme_total,
		coalesce(b.vl_materiais, 0) vl_filme,
		coalesce(b.vl_lib_taxa_material, 0) vl_filme_tx,
		b.nr_sequencia nr_seq_conta_pos,
		d.nr_seq_grupo_rec,
		a.ie_tipo_despesa ie_tipo_despesa_proc,
		null nr_seq_conta_pos_proc,
		a.cd_dente,
		a.cd_regiao_boca,
		a.cd_face_dente,
		c.nr_seq_conta_pos_contab
	from	procedimento			d,
		pls_fatura_proc			c,
		pls_conta_pos_estabelecido	b,
		pls_conta_proc			a
	where	c.nr_seq_conta_proc		= a.nr_sequencia
	and	b.nr_seq_conta_proc		= a.nr_sequencia
	and	b.nr_sequencia			= c.nr_seq_conta_pos_estab
	and	c.nr_seq_fatura_conta		= nr_seq_fatura_conta_pc
	and	d.cd_procedimento		= a.cd_procedimento
	and	d.ie_origem_proced		= a.ie_origem_proced
	and	ie_novo_pos_estab_w 		= 'N'
	and 	b.ie_status_faturamento 	= 'L'
	and	c.ie_tipo_cobranca not in ('3', '4')
	group by a.nr_sequencia,
		b.cd_item_convertido_xml,
		b.cd_procedimento,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.dt_procedimento,
		a.dt_inicio_proc,
		a.dt_fim_proc,
		b.qt_item,
		a.qt_procedimento,
		a.vl_unitario,
		a.vl_liberado,
		a.ie_via_acesso,
		a.ie_tecnica_utilizada,
		b.nr_seq_tiss_tab_conversao,
		b.vl_materiais,
		b.vl_lib_taxa_material,
		b.nr_sequencia,
		d.nr_seq_grupo_rec,
		a.ie_tipo_despesa,
		a.cd_dente,
		a.cd_regiao_boca,
		a.cd_face_dente,
		c.nr_seq_conta_pos_contab
	
union all

	SELECT	a.nr_sequencia nr_seq_conta_proc,
		coalesce(coalesce(to_char(b.cd_procedimento_conv_xml), b.cd_procedimento), a.cd_procedimento) cd_procedimento,
		a.ie_origem_proced,
		a.dt_procedimento,
		coalesce(a.dt_inicio_proc, a.dt_procedimento) dt_inicio_proc,
		a.dt_fim_proc,
		coalesce(b.qt_item, a.qt_procedimento) qt_procedimento,
		a.vl_unitario vl_unitario_proc,
		a.vl_liberado vl_procedimento,
		a.ie_via_acesso,
		a.ie_tecnica_utilizada,
		null nr_seq_tiss_tab_conversao,
		coalesce(b.vl_materiais, 0) + coalesce(b.vl_lib_taxa_material, 0) vl_filme_total,
		coalesce(b.vl_materiais, 0) vl_filme,
		coalesce(b.vl_lib_taxa_material, 0) vl_filme_tx,
		null nr_seq_conta_pos,
		d.nr_seq_grupo_rec,
		a.ie_tipo_despesa ie_tipo_despesa_proc,
		b.nr_sequencia nr_seq_conta_pos_proc,
		a.cd_dente,
		a.cd_regiao_boca,
		a.cd_face_dente,
		c.nr_seq_conta_pos_contab
	from	procedimento			d,
		pls_fatura_proc			c,
		pls_conta_pos_proc		b,
		pls_conta_proc			a
	where	c.nr_seq_conta_proc		= a.nr_sequencia
	and	b.nr_seq_conta_proc		= a.nr_sequencia
	and	b.nr_sequencia			= c.nr_seq_pos_proc
	and	c.nr_seq_fatura_conta		= nr_seq_fatura_conta_pc
	and	d.cd_procedimento		= a.cd_procedimento
	and	d.ie_origem_proced		= a.ie_origem_proced
	and	ie_novo_pos_estab_w 		= 'S'
	and 	b.ie_status_faturamento 	= 'L'
	and	c.ie_tipo_cobranca not in ('3', '4')
	group by a.nr_sequencia,
		b.cd_procedimento_conv_xml,
		b.cd_procedimento,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.dt_procedimento,
		a.dt_inicio_proc,
		a.dt_fim_proc,
		b.qt_item,
		a.qt_procedimento,
		a.vl_unitario,
		a.vl_liberado,
		a.ie_via_acesso,
		a.ie_tecnica_utilizada,
		b.vl_materiais,
		b.vl_lib_taxa_material,
		b.nr_sequencia,
		d.nr_seq_grupo_rec,
		a.ie_tipo_despesa,
		a.cd_dente,
		a.cd_regiao_boca,
		a.cd_face_dente,
		c.nr_seq_conta_pos_contab;

-- PROCEDIMENTOS ADICIONAIS
c05 CURSOR(	nr_seq_regra_adic_pc		pls_fat_regra_proc.nr_sequencia%type) FOR
	SELECT	cd_proc_item,
		trim(both ds_proc_item) ds_proc_conversao_regra,
		coalesce(ie_somente_vl_filme, 'N') ie_somente_vl_filme,
		trim(both cd_tab_item) cd_tipo_tabela_proc
	from	pls_fat_regra_proc_item
	where	nr_seq_regra = nr_seq_regra_adic_pc
	and	((ie_somente_vl_filme = 'N') or (vl_filme_total_w > 0));

-- PARTICIPANTES
c06 CURSOR(	nr_seq_conta_pos_pc		pls_conta_pos_estab_partic.nr_sequencia%type,
		nr_seq_conta_pos_proc_pc	pls_conta_pos_proc_part.nr_seq_conta_pos_proc%type) FOR
	SELECT	b.nr_sequencia,
		a.cd_grau_partic_imp,
		a.nr_seq_grau_partic,
		a.nm_medico_executor_imp,
		a.nr_seq_prestador,
		a.cd_medico,
		a.cd_medico_imp,
		a.sg_conselho_imp,
		a.nr_crm_imp,
		a.uf_crm_imp,
		a.uf_conselho,
		obter_codigo_cbo_saude(a.nr_seq_cbo_saude) cd_cbo_saude_imp,
		a.nr_cpf_imp,
		a.cd_cgc_imp,
		a.cd_prestador_imp,
		a.nr_seq_conselho,
		a.nr_seq_cbo_saude,
		a.nr_seq_prest_inter
	from	pls_conta_pos_estab_partic	b,
		pls_proc_participante		a
	where	a.nr_sequencia			= b.nr_seq_proc_partic
	and	ie_novo_pos_estab_w		= 'N'
	and	b.nr_seq_conta_pos		= nr_seq_conta_pos_pc
	
union all

	SELECT	b.nr_sequencia,
		a.cd_grau_partic_imp,
		a.nr_seq_grau_partic,
		a.nm_medico_executor_imp,
		a.nr_seq_prestador,
		a.cd_medico,
		a.cd_medico_imp,
		a.sg_conselho_imp,
		a.nr_crm_imp,
		a.uf_crm_imp,
		a.uf_conselho,
		obter_codigo_cbo_saude(a.nr_seq_cbo_saude) cd_cbo_saude_imp,
		a.nr_cpf_imp,
		a.cd_cgc_imp,
		a.cd_prestador_imp,
		a.nr_seq_conselho,
		a.nr_seq_cbo_saude,
		a.nr_seq_prest_inter
	from	pls_conta_pos_proc_part		b,
		pls_proc_participante		a
	where	a.nr_sequencia			= b.nr_seq_proc_partic
	and	ie_novo_pos_estab_w		= 'S'
	and	b.nr_seq_conta_pos_proc		= nr_seq_conta_pos_proc_pc;

-- MATERIAIS
c07 CURSOR(	nr_seq_fatura_conta_pc		pls_fatura_conta.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_conta_mat,
		a.nr_seq_material,
		a.dt_atendimento dt_atendimento_mat,
		a.tx_reducao_acrescimo,
		coalesce(b.qt_item,a.qt_material) qt_material,
		a.vl_unitario vl_unitario_mat,
		b.vl_materiais vl_material,
		a.ie_tipo_despesa,
		CASE WHEN a.ie_tipo_despesa='2' THEN  '20' WHEN a.ie_tipo_despesa='3' THEN  '19'  ELSE '98' END  cd_tipo_tabela_mat,
		b.nr_sequencia nr_seq_conta_pos,
		coalesce(a.dt_inicio_atend, a.dt_atendimento) dt_inicio_atend,
		coalesce(a.dt_fim_atend, a.dt_atendimento) dt_fim_atend,
		a.ds_aut_funcionamento,
		null nr_seq_conta_pos_mat,
		b.cd_unidade_medida cd_unidade_medida_pos,
		c.nr_seq_conta_pos_contab
	from	pls_fatura_mat			c,
		pls_conta_pos_estabelecido	b,
		pls_conta_mat			a
	where	c.nr_seq_conta_mat		= a.nr_sequencia
	and	b.nr_seq_conta_mat		= a.nr_sequencia
	and	b.nr_sequencia			= c.nr_seq_conta_pos_estab
	and	c.nr_seq_fatura_conta		= nr_seq_fatura_conta_pc
	and	ie_novo_pos_estab_w 		= 'N'
	and	b.ie_status_faturamento 	= 'L'
	and	c.ie_tipo_cobranca not in ('3', '4')
	group by a.nr_sequencia,
		a.nr_seq_material,
		a.dt_atendimento,
		a.tx_reducao_acrescimo,
		a.qt_material,
		a.vl_unitario,
		b.vl_materiais,
		a.ie_tipo_despesa,
		b.nr_sequencia,
		a.dt_inicio_atend,
		a.dt_fim_atend,
		a.ds_aut_funcionamento,
		b.qt_item,
		b.cd_unidade_medida,
		c.nr_seq_conta_pos_contab
	
union all

	SELECT	a.nr_sequencia nr_seq_conta_mat,
		a.nr_seq_material,
		a.dt_atendimento dt_atendimento_mat,
		a.tx_reducao_acrescimo,
		coalesce(b.qt_item,a.qt_material) qt_material,
		a.vl_unitario vl_unitario_mat,
		b.vl_materiais vl_material,
		a.ie_tipo_despesa,
		CASE WHEN a.ie_tipo_despesa='2' THEN  '20' WHEN a.ie_tipo_despesa='3' THEN  '19'  ELSE '98' END  cd_tipo_tabela_mat,
		null nr_seq_conta_pos,
		coalesce(a.dt_inicio_atend, a.dt_atendimento) dt_inicio_atend,
		coalesce(a.dt_fim_atend, a.dt_atendimento) dt_fim_atend,
		a.ds_aut_funcionamento,
		b.nr_sequencia nr_seq_conta_pos_mat,
		null cd_unidade_medida_pos,
		c.nr_seq_conta_pos_contab
	from	pls_fatura_mat			c,
		pls_conta_pos_mat		b,
		pls_conta_mat			a
	where	c.nr_seq_conta_mat		= a.nr_sequencia
	and	b.nr_seq_conta_mat		= a.nr_sequencia
	and	b.nr_sequencia			= c.nr_seq_pos_mat
	and	c.nr_seq_fatura_conta		= nr_seq_fatura_conta_pc
	and	ie_novo_pos_estab_w 		= 'S'
	and	c.ie_tipo_cobranca not in ('3', '4')
	group by a.nr_sequencia,
		a.nr_seq_material,
		a.dt_atendimento,
		a.tx_reducao_acrescimo,
		a.qt_material,
		a.vl_unitario,
		b.vl_materiais,
		a.ie_tipo_despesa,
		b.nr_sequencia,
		a.dt_inicio_atend,
		a.dt_fim_atend,
		a.ds_aut_funcionamento,
		b.qt_item,
		c.nr_seq_conta_pos_contab;

-- MATERIAIS ADICIONAIS
c08 CURSOR(	nr_seq_regra_adic_pc		pls_fat_regra_mat.nr_sequencia%type) FOR
	SELECT	cd_mat_item,
		null nr_seq_material,
		trim(both ds_mat_item) ds_mat_conversao_regra,
		coalesce(ie_agrupamento, 'N') ie_agrupamento,
		trim(both cd_tab_item) cd_tipo_tabela_mat
	from	pls_fat_regra_mat_item
	where	nr_seq_regra = nr_seq_regra_adic_pc;

-- GUIAS GERADAS
c09 CURSOR(	nr_seq_lote_fat_guia_envio_pc	pls_lote_fat_guia_envio.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_fat_guia_arq
	from	pls_fat_guia_arquivo
	where	nr_seq_lote = nr_seq_lote_fat_guia_envio_pc;

BEGIN

select	coalesce(max(ie_novo_pos_estab),'N')
into STRICT	ie_novo_pos_estab_w
from	pls_visible_false
where	cd_estabelecimento = cd_estabelecimento_p;

nr_seq_lote_fatura_w := nr_seq_lote_p;

select	max(sg_estado)
into STRICT	sg_estado_w
from	pessoa_juridica
where	cd_cgc = (	SELECT	max(cd_cgc_outorgante)
			from	pls_outorgante
			where	cd_estabelecimento = cd_estabelecimento_p);

for r_c01_w in c01( nr_seq_fatura_p , nr_seq_lote_p ) loop

	ie_fatura_taxa_w	:= r_c01_w.ie_fatura_taxa;

	nr_seq_esquema_xml_w	:= null;
	qt_max_reg_w		:= 100; -- Padrao TISS
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_regra_arquivo_fatura
	where	ie_tipo_interface = 'O';

	-- Pegar XML
	if (qt_registro_w > 0) then
		SELECT * FROM pls_obter_caminho_arquivo_fat(	r_c01_w.nr_seq_fatura, null, 'O', nm_usuario_p, ds_caminho_arquivo_w, ie_tipo_arquivo_w, cd_interface_w, ie_compactar_w, nr_seq_esquema_xml_w, nm_arquivo_w, nr_seq_regra_xml_w, ds_mascara_w, ds_mascara_zip_w, ds_interface_w, ie_tipo_compactar_w, ds_mascara_arq_adic_w) INTO STRICT ds_caminho_arquivo_w, ie_tipo_arquivo_w, cd_interface_w, ie_compactar_w, nr_seq_esquema_xml_w, nm_arquivo_w, nr_seq_regra_xml_w, ds_mascara_w, ds_mascara_zip_w, ds_interface_w, ie_tipo_compactar_w, ds_mascara_arq_adic_w;
	end if;

	select	max(nr_seq_camara)
	into STRICT	nr_seq_camara_w
	from	pls_congenere_camara
	where	nr_seq_congenere = r_c01_w.nr_seq_congenere;

	select	max(nr_sequencia)
	into STRICT	nr_seq_regra_div_fat_w
	from	pls_regra_divisao_fatura
	where	cd_estabelecimento = cd_estabelecimento_p
	and	((coalesce(nr_seq_congenere::text, '') = '') or (nr_seq_congenere = r_c01_w.nr_seq_congenere))
	and	((coalesce(nr_seq_camara::text, '') = '') or (nr_seq_camara = nr_seq_camara_w))
	and	dt_atual_w between trunc(dt_inicio_vigencia) and fim_dia(dt_fim_vigencia);

	select	max(qt_max_conta),
		max(qt_max_guia_ref)
	into STRICT	qt_max_conta_w,
		qt_max_guia_ref_w
	from	pls_regra_divisao_fatura
	where	nr_sequencia = nr_seq_regra_div_fat_w;

	if (qt_max_conta_w > 0) and (qt_max_conta_w < 101) then
		qt_max_reg_w := qt_max_conta_w;

	elsif (qt_max_guia_ref_w > 0) and (qt_max_guia_ref_w < 101) then
		qt_max_reg_w := qt_max_guia_ref_w;
	end if;

	if (nr_seq_esquema_xml_w = 101200) then
		ie_versao_xml_w := '2.02.03';

	elsif (nr_seq_esquema_xml_w = 101252) then
		ie_versao_xml_w := '3.02.00';

	elsif (coalesce(nr_seq_esquema_xml_w, 101499) = 101499) then
		ie_versao_xml_w := '3.02.01';

	elsif (coalesce(nr_seq_esquema_xml_w, 101499) = 101810) then
		ie_versao_xml_w := '3.03.01';

	elsif (coalesce(nr_seq_esquema_xml_w, 101499) = 101985) then
		ie_versao_xml_w := '3.03.02';

	elsif (coalesce(nr_seq_esquema_xml_w, 101499) = 102274) then
		ie_versao_xml_w := '3.03.03';

	elsif (coalesce(nr_seq_esquema_xml_w, 102626) = 102626) then
		ie_versao_xml_w := '3.04.00';

	elsif (coalesce(nr_seq_esquema_xml_w, 102906) = 102906) then
		ie_versao_xml_w := '3.04.01';

	elsif (coalesce(nr_seq_esquema_xml_w, 102932) = 102932) then
		ie_versao_xml_w := '3.05.00';

	elsif (coalesce(nr_seq_esquema_xml_w, 103239) = 103239) then
		ie_versao_xml_w := '4.00.01';
	end if;

	if (coalesce(nr_seq_lote_fatura_w::text, '') = '') then
		select	nr_seq_lote
		into STRICT	nr_seq_lote_fatura_w
		from	pls_fatura
		where	nr_sequencia = r_c01_w.nr_seq_fatura;
	end if;

	select	trunc(dt_mesano_referencia, 'month')
	into STRICT	dt_referencia_w
	from	pls_lote_faturamento
	where	nr_sequencia = nr_seq_lote_fatura_w;

	insert into pls_lote_fat_guia_envio(	nr_sequencia,				dt_atualizacao,			nm_usuario,
						dt_atualizacao_nrec,			nm_usuario_nrec,		nr_seq_lote_fat,
						dt_referencia,				nr_seq_pagador,			dt_geracao_lote,
						nr_seq_fatura)
					values (nextval('pls_lote_fat_guia_envio_seq'),	clock_timestamp(),			nm_usuario_p,
						clock_timestamp(),				nm_usuario_p,			nr_seq_lote_fatura_w,
						dt_referencia_w,			r_c01_w.nr_seq_pagador,		clock_timestamp(),
						r_c01_w.nr_seq_fatura) returning nr_sequencia into nr_seq_lote_fat_guia_envio_w;

	for r_c02_w in c02( r_c01_w.nr_seq_fatura ) loop
		select	max(cd_ans)
		into STRICT	cd_registro_ans_w
		from	pls_outorgante
		where	cd_estabelecimento = cd_estabelecimento_p;

		cd_registro_ans_guia_w := cd_registro_ans_w;

		-- Destino.registroANS
		cd_registro_ans_w := pls_obter_campo_fat_guia_xml(6, cd_estabelecimento_p, r_c01_w.nr_seq_pagador, null, r_c02_w.ie_tipo_guia_param, cd_registro_ans_w, cd_registro_ans_w);

		-- CabecalhoGuia.registroANS
		cd_registro_ans_guia_w := pls_obter_campo_fat_guia_xml(21, cd_estabelecimento_p, r_c01_w.nr_seq_pagador, null, r_c02_w.ie_tipo_guia_param, cd_registro_ans_guia_w, cd_registro_ans_guia_w);

		select	max(b.nr_seq_arquivo)
		into STRICT	nr_seq_arquivo_w
		from	pls_fat_guia_arquivo 	b,
			pls_lote_fat_guia_envio a
		where	b.nr_seq_lote 		= a.nr_sequencia
		and	a.nr_seq_fatura		= r_c01_w.nr_seq_fatura;

		nr_seq_arquivo_w := coalesce(nr_seq_arquivo_w, 0) + 1;

		insert into pls_fat_guia_arquivo(	nr_sequencia,				dt_atualizacao,		nm_usuario,
							dt_atualizacao_nrec,			nm_usuario_nrec,	nr_seq_lote,
							ie_tipo_guia,				nr_seq_arquivo,		cd_registro_ans,
							cd_registro_ans_guia)
					values (	nextval('pls_fat_guia_arquivo_seq'),	clock_timestamp(),		nm_usuario_p,
							clock_timestamp(),				nm_usuario_p,		nr_seq_lote_fat_guia_envio_w,
							r_c02_w.ie_tipo_guia_param,		nr_seq_arquivo_w,	cd_registro_ans_w,
							cd_registro_ans_guia_w) returning nr_sequencia into nr_seq_fat_guia_arq_w;

		for r_c03_w in c03( r_c02_w.ie_tipo_guia_param , r_c01_w.nr_seq_fatura ) loop

			cd_medico_solic_w		:= r_c03_w.cd_medico_solic;
			cd_medico_exec_w		:= r_c03_w.cd_medico_executor;
			nr_seq_grau_partic_w		:= r_c03_w.nr_seq_grau_partic;
			ie_tipo_consulta_w		:= r_c03_w.ie_tipo_consulta;
			nr_seq_saida_spsadt_w		:= r_c03_w.nr_seq_saida_spsadt;
			ie_carater_internacao_w		:= r_c03_w.ie_carater_internacao;
			dt_entrada_w			:= r_c03_w.dt_entrada;
			dt_saida_w			:= r_c03_w.dt_saida;
			nm_beneficiario_w		:= r_c03_w.nm_beneficiario;
			nm_produto_w			:= r_c03_w.nm_produto;
			cd_guia_w			:= r_c03_w.cd_guia;
			cd_guia_referencia_w		:= r_c03_w.cd_guia_referencia;
			cd_guia_prestador_w		:= r_c03_w.cd_guia_prestador;
			
			-- Ajuste realizado na OS 2591235 onde contas nao estavam entrando no arquivo XML, pois a data de atendimento era superior da tada fim vigencia. jtrindade
			select	coalesce(max(c.nr_cartao_intercambio), max(c.cd_usuario_plano))
			into STRICT	cd_usuario_plano_w
			from	pls_segurado_carteira c
			where	c.nr_seq_segurado = r_c03_w.nr_seq_segurado
			and	trunc(coalesce(r_c03_w.dt_atend_ref_guia,clock_timestamp())) between trunc(c.dt_inicio_vigencia) and trunc(coalesce(c.dt_validade_carteira,clock_timestamp()));
			
			if (coalesce(cd_usuario_plano_w::text, '') = '') then
				select	coalesce(max(c.nr_cartao_intercambio), max(c.cd_usuario_plano))
				into STRICT	cd_usuario_plano_w
				from	pls_segurado_carteira c
				where	c.nr_seq_segurado = r_c03_w.nr_seq_segurado;
			end if;

			select	max(nr_sequencia)
			into STRICT	nr_seq_fat_guia_envio_w
			from	pls_fatura_guia_envio
			where	nr_seq_guia_arquivo = nr_seq_fat_guia_arq_w
			and	nr_seq_conta = r_c03_w.nr_seq_conta;

			if (coalesce(nr_seq_fat_guia_envio_w::text, '') = '') then
				select	count(1)
				into STRICT	qt_registros_w
				from	pls_fatura_guia_envio
				where	nr_seq_guia_arquivo = nr_seq_fat_guia_arq_w;

				if (qt_registros_w >= qt_max_reg_w) then
					nr_seq_arquivo_w := coalesce(nr_seq_arquivo_w, 0) + 1;

					insert into pls_fat_guia_arquivo(	nr_sequencia,				dt_atualizacao,			nm_usuario,
										dt_atualizacao_nrec,			nm_usuario_nrec,		nr_seq_lote,
										ie_tipo_guia,				nr_seq_arquivo,			cd_registro_ans,
										cd_registro_ans_guia)
								values (	nextval('pls_fat_guia_arquivo_seq'),	clock_timestamp(),			nm_usuario_p,
										clock_timestamp(),				nm_usuario_p,			nr_seq_lote_fat_guia_envio_w,
										r_c02_w.ie_tipo_guia_param,		nr_seq_arquivo_w,		cd_registro_ans_w,
										cd_registro_ans_guia_w) returning nr_sequencia into nr_seq_fat_guia_arq_w;
				end if;

				nm_profissional_solic_w		:= null;
				nr_seq_conselho_solic_w		:= null;
				nr_conselho_solic_w		:= null;
				cd_cbos_solic_w			:= null;
				uf_conselho_solic_w		:= null;
				cd_prestador_solic_w		:= null;
				cd_cnes_solic_w			:= null;
				nm_prestador_solic_w		:= null;
				nm_profissional_executante_w	:= null;
				nr_seq_conselho_exec_w		:= null;
				nr_conselho_executante_w	:= null;
				cd_cbos_executante_w		:= null;
				uf_conselho_executante_w	:= null;
				cd_prestador_exec_w		:= null;
				cd_cnes_exec_w			:= null;
				nr_cpf_executor_w		:= null;
				nm_prestador_exec_w		:= null;
				sg_conselho_solic_w		:= null;
				sg_conselho_executante_w	:= null;
				nm_profissional_a500_w		:= null;
				sg_conselho_a500_w		:= null;
				nr_conselho_a500_w		:= null;
				uf_conselho_a500_w		:= null;
				cd_cooperativa_w		:= null;
				ds_cooperativa_w 		:= null;
				cd_cid_w			:= null;
				nm_tabela_cid_w			:= null;
				ds_cid_w			:= null;
				ie_carteira_fatura_tiss_w	:= null;
				ie_taxa_administracao_xml_w	:= null;
				nr_cgc_cpf_ptu_w		:= null;
				nr_seq_prestador_exec_w		:= null;


				if (coalesce(cd_medico_solic_w::text, '') = '') then
					select	max(b.cd_pessoa_fisica)
					into STRICT	cd_medico_solic_w
					from	pls_prestador 		b,
						medico 			a
					where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
					and	b.nr_sequencia		= r_c03_w.nr_seq_prestador_solic;
				end if;

				if (cd_medico_solic_w IS NOT NULL AND cd_medico_solic_w::text <> '') then
					nm_profissional_solic_w		:= substr(obter_nome_medico(cd_medico_solic_w, 'N'), 1, 70);
					nr_seq_conselho_solic_w		:= coalesce(substr(pls_obter_seq_conselho_prof(cd_medico_solic_w), 1, 20), r_c03_w.nr_seq_conselho_solic);
					nr_conselho_solic_w		:= substr(obter_crm_medico(cd_medico_solic_w), 1, 15);
					cd_cbos_solic_w			:= substr(obter_codigo_cbo_saude(pls_obter_cbo_medico(cd_medico_solic_w)), 1, 15);
					uf_conselho_solic_w		:= substr(obter_dados_medico(cd_medico_solic_w, 'UFCRM'), 1, 20);
				end if;

				if (r_c03_w.nr_seq_prestador_solic IS NOT NULL AND r_c03_w.nr_seq_prestador_solic::text <> '') then
					cd_prestador_solic_w		:= substr(pls_obter_cod_prestador(r_c03_w.nr_seq_prestador_solic, null), 1, 70);
					cd_cnes_solic_w			:= substr(pls_obter_cnes_prestador(r_c03_w.nr_seq_prestador_solic), 1, 20);
					nm_prestador_solic_w		:= substr(pls_obter_dados_prestador(r_c03_w.nr_seq_prestador_solic, 'N'), 1, 70);
				end if;

				-- Se Medico executor e Medico solicitante estao nulos verificar se o prestador da conta e PF
				if (coalesce(cd_medico_solic_w::text, '') = '') and (coalesce(cd_medico_exec_w::text, '') = '') then
					select	max(b.cd_pessoa_fisica)
					into STRICT	cd_medico_exec_w
					from	pls_prestador 		b,
						medico 			a
					where	b.cd_pessoa_fisica 	= a.cd_pessoa_fisica
					and	b.nr_sequencia 		= r_c03_w.nr_seq_prestador_exec;
				end if;

				-- Pegar da conta principal caso nao tenha medico executor
				if (coalesce(cd_medico_exec_w::text, '') = '') and (r_c03_w.nr_seq_conta != r_c03_w.nr_seq_conta_princ) then
					select	max(cd_medico_executor),
						max(nr_seq_prestador_exec)
					into STRICT	cd_medico_exec_w,
						nr_seq_prestador_exec_aux_w
					from	pls_conta
					where	nr_sequencia = r_c03_w.nr_seq_conta_princ;

					if (coalesce(cd_medico_exec_w::text, '') = '') and (nr_seq_prestador_exec_aux_w IS NOT NULL AND nr_seq_prestador_exec_aux_w::text <> '') then
						select	max(b.cd_pessoa_fisica)
						into STRICT	cd_medico_exec_w
						from	pls_prestador		b,
							medico			a
						where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
						and	b.nr_sequencia		= nr_seq_prestador_exec_aux_w;
					end if;
				end if;

				-- Guia de Internacao - Nao foi possivel obter dados de medico/prestador executante PF, entao tem que buscar das contas filhas
				if (r_c03_w.ie_tipo_guia = '5') and (cd_guia_referencia_w IS NOT NULL AND cd_guia_referencia_w::text <> '') and (coalesce(cd_medico_exec_w::text, '') = '') and (coalesce(cd_medico_solic_w::text, '') = '') then
					select	max(cd_medico_executor)
					into STRICT	cd_medico_exec_w
					from	pls_conta
					where	cd_guia_referencia	= cd_guia_referencia_w
					and	nr_seq_segurado		= r_c03_w.nr_seq_segurado
					and	ie_tipo_guia != '5'
					and	(cd_medico_executor IS NOT NULL AND cd_medico_executor::text <> '');

					if (coalesce(cd_medico_exec_w::text, '') = '') then
						select	max(a.nr_seq_prestador_exec)
						into STRICT	nr_seq_prestador_exec_aux_w
						from	pls_conta		a
						where	a.cd_guia_referencia	= cd_guia_referencia_w
						and	a.nr_seq_segurado	= r_c03_w.nr_seq_segurado
						and	a.ie_tipo_guia != '5'
						and exists (	SELECT	1
								from	pls_prestador 	b
								where	b.nr_sequencia	= a.nr_seq_prestador_exec
								and	(b.cd_pessoa_fisica IS NOT NULL AND b.cd_pessoa_fisica::text <> ''));

						if (nr_seq_prestador_exec_aux_w IS NOT NULL AND nr_seq_prestador_exec_aux_w::text <> '') then
							select	max(b.cd_pessoa_fisica)
							into STRICT	cd_medico_exec_w
							from	pls_prestador 		b,
								medico 			a
							where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
							and	b.nr_sequencia		= nr_seq_prestador_exec_aux_w;
						end if;
					end if;
				end if;

				if (cd_medico_exec_w IS NOT NULL AND cd_medico_exec_w::text <> '') then
					nm_profissional_executante_w	:= substr(obter_nome_medico(cd_medico_exec_w, 'N'), 1, 70);
					nr_seq_conselho_exec_w		:= coalesce(substr(pls_obter_seq_conselho_prof(cd_medico_exec_w), 1, 70), r_c03_w.nr_seq_conselho_exec);
					nr_conselho_executante_w	:= substr(obter_crm_medico(cd_medico_exec_w), 1, 15);
					cd_cbos_executante_w		:= substr(obter_codigo_cbo_saude(pls_obter_cbo_medico(cd_medico_exec_w)), 1, 15);
					uf_conselho_executante_w	:= substr(obter_dados_medico(cd_medico_exec_w, 'UFCRM'), 1, 2);
				end if;

				if (r_c03_w.nr_seq_prestador_exec IS NOT NULL AND r_c03_w.nr_seq_prestador_exec::text <> '') then
					cd_prestador_exec_w		:= substr(pls_obter_cod_prestador(r_c03_w.nr_seq_prestador_exec, null), 1,30);
					cd_cnes_exec_w			:= substr(pls_obter_cnes_prestador(r_c03_w.nr_seq_prestador_exec), 1, 20);
					nm_prestador_exec_w		:= substr(pls_obter_dados_prestador(r_c03_w.nr_seq_prestador_exec, 'N'), 1, 70);
					nr_cpf_executor_w		:= substr(pls_obter_dados_prestador(r_c03_w.nr_seq_prestador_exec, 'CPF'), 1, 20);
					nr_seq_prestador_exec_w		:= r_c03_w.nr_seq_prestador_exec;
				end if;

				if (nr_seq_conselho_solic_w IS NOT NULL AND nr_seq_conselho_solic_w::text <> '') then
					begin
						select	pls_obter_conselho_tiss_xml(sg_conselho)
						into STRICT	sg_conselho_solic_w
						from	conselho_profissional
						where	nr_sequencia = nr_seq_conselho_solic_w;
					exception
					when others then
						sg_conselho_solic_w := null;
					end;
				end if;

				if (nr_seq_conselho_exec_w IS NOT NULL AND nr_seq_conselho_exec_w::text <> '') then
					begin
						select	pls_obter_conselho_tiss_xml(sg_conselho)
						into STRICT	sg_conselho_executante_w
						from	conselho_profissional
						where	nr_sequencia = nr_seq_conselho_exec_w;
					exception
					when others then
						sg_conselho_executante_w := null;
					end;
				end if;

				-- Origem A500
				if (r_c03_w.ie_origem_protocolo = 'A') then
					if (r_c03_w.nr_seq_nota_cobranca IS NOT NULL AND r_c03_w.nr_seq_nota_cobranca::text <> '') then
						select	substr(max(b.nm_prest_req), 1, 70),
							substr(max(b.sg_cons_prof_req), 1, 10),
							substr(max(b.nr_cons_prof_req), 1, 15),
							substr(max(b.sg_uf_cons_req), 1, 2),
							max(b.tp_nota),
							substr(max(b.nr_cbo_req), 1,6)
						into STRICT	nm_profissional_a500_w,
							sg_conselho_a500_w,
							nr_conselho_a500_w,
							uf_conselho_a500_w,
							tp_nota_w,
							cd_cbo_req_a500_w
						from	ptu_nota_cobranca 	b,
							ptu_fatura 		a
						where	a.nr_sequencia 		= b.nr_seq_fatura
						and	b.nr_sequencia 		= r_c03_w.nr_seq_nota_cobranca
						and	coalesce(a.nr_seq_pls_fatura::text, '') = '';

						if (somente_numero(cd_cbo_req_a500_w) = 0) then
							select	max(nr_cbo_exec)
							into STRICT	cd_cbo_req_a500_w
							from	ptu_nota_servico
							where	nr_seq_nota_cobr = r_c03_w.nr_seq_nota_cobranca;
						end if;

						if (coalesce(cd_medico_solic_w::text, '') = '') then
							nm_profissional_solic_w := nm_profissional_a500_w;
							sg_conselho_solic_w	:= pls_obter_conselho_tiss_xml(sg_conselho_a500_w);
							nr_conselho_solic_w	:= nr_conselho_a500_w;
							cd_cbos_solic_w		:= cd_cbo_req_a500_w;
							uf_conselho_solic_w 	:= uf_conselho_a500_w;
						end if;

						if (coalesce(cd_medico_exec_w::text, '') = '') then
							nm_profissional_executante_w	:= nm_profissional_a500_w;
							sg_conselho_executante_w	:= pls_obter_conselho_tiss_xml(sg_conselho_a500_w);
							nr_conselho_executante_w	:= nr_conselho_a500_w;
							cd_cbos_executante_w		:= cd_cbo_req_a500_w;
							uf_conselho_executante_w	:= uf_conselho_a500_w;
						end if;

						-- Quando for de CONSULTA, pega o PRESTADOR EXECUTOR DO SERVICO
						if (tp_nota_w = 1) then
							select	substr(max(nm_profissional_prestador), 1, 70),
								substr(max(sg_cons_prof_prest), 1, 10),
								substr(max(nr_cons_prof_prest), 1, 15),
								substr(max(sg_uf_cons_prest), 1, 2)
							into STRICT	nm_profissional_executante_w,
								sg_conselho_executante_w,
								nr_conselho_executante_w,
								uf_conselho_executante_w
							from	ptu_nota_servico
							where	nr_seq_nota_cobr = r_c03_w.nr_seq_nota_cobranca;

							if (coalesce(trim(both nm_profissional_executante_w)::text, '') = '') then
								select	substr(max(nm_prest_exec), 1, 70)
								into STRICT	nm_profissional_executante_w
								from	ptu_nota_cobranca
								where	nr_sequencia = r_c03_w.nr_seq_nota_cobranca;
							end if;

							if (sg_conselho_executante_w IS NOT NULL AND sg_conselho_executante_w::text <> '') then
								sg_conselho_executante_w := pls_obter_conselho_tiss_xml(sg_conselho_executante_w);
							end if;
						end if;
					end if;

					if (r_c03_w.nr_seq_congenere IS NOT NULL AND r_c03_w.nr_seq_congenere::text <> '') then
						cd_cooperativa_w := substr(pls_obter_dados_cooperativa(r_c03_w.nr_seq_congenere, 'C'), 1,30);
						ds_cooperativa_w := substr(pls_obter_dados_cooperativa(r_c03_w.nr_seq_congenere, 'RS'), 1, 70);

						if (coalesce(r_c03_w.nr_seq_prestador_solic::text, '') = '') then
							cd_prestador_solic_w	:= cd_cooperativa_w;
							cd_cnes_solic_w		:= null;
							nm_prestador_solic_w	:= ds_cooperativa_w;
						end if;

						if (coalesce(r_c03_w.nr_seq_prestador_exec::text, '') = '') then
							cd_prestador_exec_w		:= cd_cooperativa_w;
							cd_cnes_exec_w			:= null;
							nm_prestador_exec_w		:= ds_cooperativa_w;
							nr_seq_prestador_exec_w		:= null;
							nr_cpf_executor_w		:= null;
						end if;
					end if;
				end if;

				-- Se NAO TIVER informacoes de SOLICITANTE, PEGA do EXECUTANTE
				if (coalesce(cd_medico_solic_w::text, '') = '') then
					nm_profissional_solic_w	:= nm_profissional_executante_w;
					sg_conselho_solic_w	:= sg_conselho_executante_w;
					nr_conselho_solic_w	:= substr(nr_conselho_executante_w, 1, 15);
					cd_cbos_solic_w		:= cd_cbos_executante_w;
					uf_conselho_solic_w	:= uf_conselho_executante_w;
				end if;

				if (coalesce(r_c03_w.nr_seq_prestador_solic::text, '') = '') then
					cd_prestador_solic_w	:= cd_prestador_exec_w;
					cd_cnes_solic_w		:= cd_cnes_exec_w;
					nm_prestador_solic_w	:= nm_prestador_exec_w;
				end if;

				if (r_c03_w.ie_origem_protocolo <> 'A') then
					-- Se NAO TIVER informacoes de EXECUTANTE, PEGA do SOLICITANTE
					if (coalesce(cd_medico_exec_w::text, '') = '') then
						nm_profissional_executante_w	:= nm_profissional_solic_w;
						sg_conselho_executante_w	:= sg_conselho_solic_w;
						nr_conselho_executante_w	:= nr_conselho_solic_w;
						cd_cbos_executante_w		:= cd_cbos_solic_w;
						uf_conselho_executante_w	:= uf_conselho_solic_w;
					end if;

					if (coalesce(r_c03_w.nr_seq_prestador_exec::text, '') = '') then
						cd_prestador_exec_w		:= cd_prestador_solic_w;
						cd_cnes_exec_w			:= cd_cnes_solic_w;
						nm_prestador_exec_w		:= nm_prestador_solic_w;
						nr_seq_prestador_exec_w		:= r_c03_w.nr_seq_prestador_solic;
						nr_cpf_executor_w		:= null;
					end if;
				end if;

				if (coalesce(nr_seq_grau_partic_w::text, '') = '') then
					select	max(b.nr_seq_grau_partic)
					into STRICT	nr_seq_grau_partic_w
					from	pls_proc_participante 	b,
						pls_conta_proc 		a
					where	a.nr_sequencia		= b.nr_seq_conta_proc
					and	a.nr_seq_conta		= r_c03_w.nr_seq_conta;
				end if;

				select	count(1)
				into STRICT	qt_registro_w
				from	pls_grau_participacao
				where	nr_sequencia = nr_seq_grau_partic_w
				and	(cd_tiss IS NOT NULL AND cd_tiss::text <> '');

				-- Se nao tiver o tiss, busca o clinico
				if (qt_registro_w = 0) then
					select	max(nr_sequencia)
					into STRICT	nr_seq_grau_partic_w
					from	pls_grau_participacao
					where	cd_tiss	= '12';
				end if;

				begin
					select	max(dt_autorizacao),
						max(cd_senha),
						max(dt_validade_senha)
					into STRICT	dt_autorizacao_w,
						cd_senha_w,
						dt_validade_autorizacao_w
					from	pls_guia_plano
					where	nr_sequencia = r_c03_w.nr_seq_guia;
				exception
				when others then
					dt_autorizacao_w		:= null;
					cd_senha_w			:= null;
					dt_validade_autorizacao_w	:= null;
				end;

				--Tratamento para buscar a senha da guia referencia
				if (coalesce(cd_senha_w::text, '') = '') and (cd_guia_referencia_w IS NOT NULL AND cd_guia_referencia_w::text <> '') then
					begin
						select	max(cd_senha)
						into STRICT	cd_senha_w
						from	pls_guia_plano
						where	cd_guia	= cd_guia_referencia_w;
					exception
					when others then
						cd_senha_w := null;
					end;
				end if;

				-- Tratamento para buscar a senha da requisicao
				if (coalesce(cd_senha_w::text, '') = '') and (r_c03_w.nr_seq_guia IS NOT NULL AND r_c03_w.nr_seq_guia::text <> '') then
					select	max(b.cd_senha_externa)
					into STRICT	cd_senha_w
					from	pls_requisicao 		b,
						pls_execucao_req_item 	a
					where	a.nr_seq_requisicao 	= b.nr_sequencia
					and	a.nr_seq_guia		= r_c03_w.nr_seq_guia;
				end if;

				-- Tratamento para buscar a senha da conta
				if (coalesce(cd_senha_w::text, '') = '') then
					cd_senha_w := r_c03_w.cd_senha_conta;
				end if;

				-- Tratamento para buscar a validade da senha da guia referencia
				if (coalesce(dt_validade_autorizacao_w::text, '') = '') and (cd_guia_referencia_w IS NOT NULL AND cd_guia_referencia_w::text <> '') then
					begin
						select	max(dt_validade_senha)
						into STRICT	dt_validade_autorizacao_w
						from	pls_guia_plano
						where	cd_guia	= cd_guia_referencia_w;
					exception
					when others then
						dt_validade_autorizacao_w := null;
					end;
				end if;

				-- Tratamento para buscar a validade da senha da requisicao
				if (coalesce(dt_validade_autorizacao_w::text, '') = '') and (r_c03_w.nr_seq_guia IS NOT NULL AND r_c03_w.nr_seq_guia::text <> '') then
					select	max(b.dt_validade_senha)
					into STRICT	dt_validade_autorizacao_w
					from	pls_requisicao 		b,
						pls_execucao_req_item 	a
					where	a.nr_seq_requisicao	= b.nr_sequencia
					and	a.nr_seq_guia		= r_c03_w.nr_seq_guia;
				end if;

				-- Tratamento para buscar a validade da senha da conta
				if (coalesce(dt_validade_autorizacao_w::text, '') = '') then
					dt_validade_autorizacao_w := r_c03_w.dt_validade_senha_conta;
				end if;

				if (coalesce(dt_autorizacao_w::text, '') = '') and (cd_guia_referencia_w IS NOT NULL AND cd_guia_referencia_w::text <> '') then
					begin
						select	max(dt_autorizacao)
						into STRICT	dt_autorizacao_w
						from	pls_guia_plano
						where	cd_guia	= cd_guia_referencia_w;
					exception
					when others then
						dt_autorizacao_w := null;
					end;
				end if;

				-- A500 -- Internacao
				if (coalesce(dt_autorizacao_w::text, '') = '') and (r_c03_w.ie_origem_protocolo = 'A') and (r_c03_w.nr_seq_nota_cobranca IS NOT NULL AND r_c03_w.nr_seq_nota_cobranca::text <> '') and (r_c03_w.ie_tipo_guia = '5') then
					select	min(d.dt_autorizacao)
					into STRICT	dt_autorizacao_w
					from	pls_guia_plano		d,
						pls_execucao_req_item	c,
						pls_requisicao		b,
						ptu_nota_servico	a
					where	b.nr_sequencia		= c.nr_seq_requisicao
					and	d.nr_sequencia		= c.nr_seq_guia
					and	b.nr_seq_segurado	= r_c03_w.nr_seq_segurado
					and	a.nr_seq_nota_cobr	= r_c03_w.nr_seq_nota_cobranca
					and (exists (SELECT	1
							from	ptu_resposta_autorizacao e
							where	e.nr_seq_requisicao	= b.nr_sequencia
							and	e.nr_seq_origem		= a.nr_autorizacao
							
union

							SELECT	1
							from	ptu_resposta_auditoria	e
							where	e.nr_seq_requisicao	= b.nr_sequencia
							and	e.nr_seq_origem		= a.nr_autorizacao
							
union

							select	1
							from	ptu_confirmacao		e
							where	e.nr_seq_requisicao	= b.nr_sequencia
							and	e.nr_seq_origem		= a.nr_autorizacao)
					or exists (	select	1
							from	ptu_pedido_autorizacao	e
							where	e.nr_seq_requisicao	= b.nr_sequencia
							and	e.nr_seq_execucao	= a.nr_autorizacao
							
union

							select	1
							from	ptu_pedido_compl_aut	e
							where	e.nr_seq_requisicao	= b.nr_sequencia
							and	e.nr_seq_execucao	= a.nr_autorizacao
							
union

							select	1
							from	ptu_requisicao_ordem_serv e
							where	e.nr_seq_requisicao	= b.nr_sequencia
							and	e.nr_seq_origem		= a.nr_autorizacao));

					if (coalesce(dt_autorizacao_w::text, '') = '') then
						dt_autorizacao_w := r_c03_w.dt_atend_ref_guia;
					end if;
				end if;

				-- Tratamento para buscar a data da autorizacao da conta
				if (coalesce(dt_autorizacao_w::text, '') = '') then
					dt_autorizacao_w := r_c03_w.dt_autorizacao_conta;
				end if;

				select	max(cd_doenca)
				into STRICT	cd_cid_w
				from	pls_diagnostico_conta
				where	nr_seq_conta = r_c03_w.nr_seq_conta;

				if (cd_cid_w IS NOT NULL AND cd_cid_w::text <> '') then
					nm_tabela_cid_w	:= substr(obter_categoria_cid(cd_cid_w), 1, 70);
					ds_cid_w	:= substr(obter_desc_cid(cd_cid_w), 1, 70);
				end if;

				nr_seq_regra_w := pls_obter_parametros_fat_envio(r_c03_w.nr_seq_contrato, r_c03_w.nr_seq_intercambio, nr_seq_regra_w);

				if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
					select	max(ie_carteira),
						max(ie_taxa_administracao_xml)
					into STRICT	ie_carteira_fatura_tiss_w,
						ie_taxa_administracao_xml_w
					from	pls_parametros_fat_envio
					where	nr_sequencia = nr_seq_regra_w;
				end if;

				ie_taxa_administracao_xml_w := coalesce(ie_taxa_administracao_xml_w, 'N');

				if (ie_carteira_fatura_tiss_w = 'M') then
					select	coalesce(max(a.cd_matricula_estipulante), cd_usuario_plano_w)
					into STRICT	cd_usuario_plano_w
					from	pls_conta 	b,
						pls_guia_plano 	a
					where	b.cd_guia	= a.cd_guia
					and	b.nr_sequencia 	= r_c03_w.nr_seq_conta;
				end if;

				-- Guia de Consulta
				if (r_c03_w.ie_tipo_guia = '3') then
					if (coalesce(ie_tipo_consulta_w::text, '') = '') then
						ie_tipo_consulta_w := '1';
					end if;

					if (coalesce(nr_seq_saida_spsadt_w::text, '') = '') then
						nr_seq_saida_spsadt_w := '5';
					end if;
				end if;

				-- Guia de SP/SADT
				if (r_c03_w.ie_tipo_guia = '4') then
					if (coalesce(nr_seq_saida_spsadt_w::text, '') = '') then
						nr_seq_saida_spsadt_w := '5';
					end if;

					if (coalesce(ie_carater_internacao_w::text, '') = '') then
						ie_carater_internacao_w := 'E';
					end if;
				end if;

				-- Guia de Honorario
				if (r_c03_w.ie_tipo_guia = '6') then
					if (coalesce(dt_entrada_w::text, '') = '') then
						dt_entrada_w := r_c03_w.dt_atendimento;
					end if;

					if (coalesce(dt_saida_w::text, '') = '') then
						dt_saida_w := dt_entrada_w;
					end if;
				end if;

				nm_prestador_solic_w		:= replace(ptu_somente_caracter_permitido(nm_prestador_solic_w, 'ANS'), chr(38), 'e');
				nm_prestador_exec_w		:= replace(ptu_somente_caracter_permitido(nm_prestador_exec_w, 'ANS'), chr(38), 'e');
				nm_profissional_solic_w		:= replace(ptu_somente_caracter_permitido(nm_profissional_solic_w, 'ANS'), chr(38), 'e');
				nm_profissional_executante_w	:= replace(ptu_somente_caracter_permitido(nm_profissional_executante_w, 'ANS'), chr(38), 'e');
				nm_beneficiario_w		:= replace(ptu_somente_caracter_permitido(nm_beneficiario_w, 'ANS'), chr(38), 'e');
				nm_produto_w			:= replace(ptu_somente_caracter_permitido(nm_produto_w, 'ANS'), chr(38), 'e');

				begin
					select	cd_tiss
					into STRICT	ie_tipo_atendimento_w
					from	pls_tipo_atendimento
					where	nr_sequencia = r_c03_w.nr_seq_tipo_atendimento;
				exception
				when others then
					ie_tipo_atendimento_w := null;
				end;

				-- Na guia o campo e tamanho 10
				nr_conselho_executante_w	:= substr(obter_somente_numero(nr_conselho_executante_w),1,10);
				nr_conselho_solic_w		:= substr(obter_somente_numero(nr_conselho_solic_w),1,10);

				-- dadosAutorizacao.senha
				cd_senha_w := pls_obter_campo_fat_guia_xml(7, cd_estabelecimento_p, r_c01_w.nr_seq_pagador, r_c03_w.nr_seq_conta, r_c03_w.ie_tipo_guia, cd_senha_w, cd_senha_w);

				-- contratadoExecutante.codigoPrestadorNaOperadora
				cd_prestador_exec_w := pls_obter_campo_fat_guia_xml(8, cd_estabelecimento_p, r_c01_w.nr_seq_pagador, r_c03_w.nr_seq_conta, r_c03_w.ie_tipo_guia, cd_prestador_exec_w, cd_prestador_exec_w);

				-- PRESTADOR INTERCAMBIO
				if (r_c03_w.nr_seq_prest_inter IS NOT NULL AND r_c03_w.nr_seq_prest_inter::text <> '') and (coalesce(r_c03_w.nr_seq_prestador_exec::text, '') = '') then
					select	max(cd_cgc_intercambio),
						substr(max(nm_prestador), 1, 70),
						max(nr_cpf),
						max(cd_cnes)
					into STRICT	cd_cgc_contratado_w,
						nm_prestador_exec_w,
						nr_cpf_executor_w,
						cd_cnes_interc_w
					from	pls_prestador_intercambio
					where	nr_sequencia = r_c03_w.nr_seq_prest_inter;

					if (coalesce(cd_cnes_exec_w::text, '') = '') then
						cd_cnes_exec_w	:= cd_cnes_interc_w;
					end if;
				end if;

				-- se tiver informado
				if (r_c03_w.nr_seq_prestador_exec IS NOT NULL AND r_c03_w.nr_seq_prestador_exec::text <> '') then
					-- se nao tiver CGC
					if (coalesce(cd_cgc_contratado_w::text, '') = '') then
						select	max(cd_cgc)
						into STRICT	cd_cgc_contratado_w
						from	pls_prestador
						where	nr_sequencia = r_c03_w.nr_seq_prestador_exec;
					end if;

					-- se nao tiver CPF
					if (coalesce(nr_cpf_executor_w::text, '') = '') then
						nr_cpf_executor_w := pls_obter_dados_prestador(r_c03_w.nr_seq_prestador_exec, 'CPF');
					end if;
				end if;

				-- OS 1657787, antes dessa implementacao o cd_cgc_contratado_w nao era carregado com as inf do cursor, ele era apenas convertido

				-- Caso nao existir regra de conversao, ele ficava null.

				-- Foi alterado agora para tentar buscar o CGC do executor se o mesmo nao tiver codigo do prestador (pode ser deixado null via conversao acima) e nao tiver CPF

				-- Se possuir o codigo do prestador ou CPF, o CGC vai ser setado como NULL, e entao convertido (pode ser inserido fixo via regra ou pegado o do solicitante)
				if (coalesce(nr_cpf_executor_w::text, '') = '') and (r_c03_w.nr_seq_prestador_exec IS NOT NULL AND r_c03_w.nr_seq_prestador_exec::text <> '') then
					cd_cgc_contratado_w := substr(pls_obter_dados_prestador(r_c03_w.nr_seq_prestador_exec, 'CGC'), 1, 14);
				else
					cd_cgc_contratado_w := null;
				end if;

				-- contratadoExecutante.nomeContratado
				nm_prestador_exec_w := pls_obter_campo_fat_guia_xml(9, cd_estabelecimento_p, r_c01_w.nr_seq_pagador, r_c03_w.nr_seq_conta, r_c03_w.ie_tipo_guia, nm_prestador_exec_w, nm_prestador_exec_w);

				-- contratadoExecutante.CNES
				cd_cnes_exec_w := pls_obter_campo_fat_guia_xml(10, cd_estabelecimento_p, r_c01_w.nr_seq_pagador, r_c03_w.nr_seq_conta, r_c03_w.ie_tipo_guia, cd_cnes_exec_w, cd_cnes_exec_w);

				-- dadosBeneficiario.numeroCarteira
				cd_usuario_plano_w := pls_obter_campo_fat_guia_xml(11, cd_estabelecimento_p, r_c01_w.nr_seq_pagador, r_c03_w.nr_seq_conta, r_c03_w.ie_tipo_guia, cd_usuario_plano_w, cd_usuario_plano_w);

				-- profissionalSolicitante.nomeProfissional
				nm_profissional_solic_w := pls_obter_campo_fat_guia_xml(12, cd_estabelecimento_p, r_c01_w.nr_seq_pagador, r_c03_w.nr_seq_conta, r_c03_w.ie_tipo_guia, nm_profissional_solic_w, nm_profissional_solic_w);

				-- profissionalSolicitante.conselhoProfissional
				sg_conselho_solic_w := pls_obter_campo_fat_guia_xml(13, cd_estabelecimento_p, r_c01_w.nr_seq_pagador, r_c03_w.nr_seq_conta, r_c03_w.ie_tipo_guia, sg_conselho_solic_w, sg_conselho_solic_w);

				-- profissionalSolicitante.numeroConselhoProfissional
				nr_conselho_solic_w := pls_obter_campo_fat_guia_xml(14, cd_estabelecimento_p, r_c01_w.nr_seq_pagador, r_c03_w.nr_seq_conta, r_c03_w.ie_tipo_guia, nr_conselho_solic_w, nr_conselho_solic_w);

				-- profissionalSolicitante.UF
				uf_conselho_solic_w := pls_obter_campo_fat_guia_xml(15, cd_estabelecimento_p, r_c01_w.nr_seq_pagador, r_c03_w.nr_seq_conta, r_c03_w.ie_tipo_guia, uf_conselho_solic_w, uf_conselho_solic_w);

				-- profissionalSolicitante.CBOS
				cd_cbos_solic_w := pls_obter_campo_fat_guia_xml(16, cd_estabelecimento_p, r_c01_w.nr_seq_pagador, r_c03_w.nr_seq_conta, r_c03_w.ie_tipo_guia, cd_cbos_solic_w, cd_cbos_solic_w);

				-- contratadoExecutante.cnpjContratado
				cd_cgc_contratado_w := pls_obter_campo_fat_guia_xml(17, cd_estabelecimento_p, r_c01_w.nr_seq_pagador, r_c03_w.nr_seq_conta, r_c03_w.ie_tipo_guia, cd_cgc_contratado_w, cd_cgc_contratado_w);

				-- contratadoSolicitante.codigoPrestadorNaOperadora
				cd_prestador_solic_w := pls_obter_campo_fat_guia_xml(18, cd_estabelecimento_p, r_c01_w.nr_seq_pagador, r_c03_w.nr_seq_conta, r_c03_w.ie_tipo_guia, cd_prestador_solic_w, cd_prestador_solic_w);

				-- contratadoSolicitante.nomeContratado
				nm_prestador_solic_w := pls_obter_campo_fat_guia_xml(19, cd_estabelecimento_p, r_c01_w.nr_seq_pagador, r_c03_w.nr_seq_conta, r_c03_w.ie_tipo_guia, nm_prestador_solic_w, nm_prestador_solic_w);

				-- contratadoSolicitante.cnpjContratado
				cd_cgc_contratado_solic_w := pls_obter_campo_fat_guia_xml(20, cd_estabelecimento_p, r_c01_w.nr_seq_pagador, r_c03_w.nr_seq_conta, r_c03_w.ie_tipo_guia, cd_cgc_contratado_solic_w, cd_cgc_contratado_solic_w);

			       -- contratadoExecutante.cpfContratado
				nr_cpf_executor_w := pls_obter_campo_fat_guia_xml(33, cd_estabelecimento_p, r_c01_w.nr_seq_pagador, r_c03_w.nr_seq_conta, r_c03_w.ie_tipo_guia, nr_cpf_executor_w, nr_cpf_executor_w);

				cd_guia_w		:= ptu_somente_caracter_permitido(cd_guia_w, 'N');
				cd_guia_referencia_w	:= ptu_somente_caracter_permitido(cd_guia_referencia_w, 'N');
				cd_guia_prestador_w	:= ptu_somente_caracter_permitido(cd_guia_prestador_w, 'N');

				select	max(ie_tipo_guia)
				into STRICT	ie_tipo_guia_w
				from	pls_fat_guia_arquivo
				where	nr_sequencia = nr_seq_fat_guia_arq_w;

				if (ie_tipo_guia_w = '5') then -- Guia de Resumo de Internacao
					cd_prestador_exec_w := pls_obter_campo_fat_fund_xml('CD_HOSPITAL', cd_prestador_exec_w, cd_prestador_exec_w, cd_estabelecimento_p);	-- CD_PRESTADOR = CD_PRESTADOR_EXEC
					nm_prestador_exec_w := pls_obter_campo_fat_fund_xml('NM_HOSPITAL', nm_prestador_exec_w, nm_prestador_exec_w, cd_estabelecimento_p);	-- NM_PRESTADOR = NM_PRESTADOR_EXEC
				else
					cd_prestador_exec_w := pls_obter_campo_fat_fund_xml('CD_PRESTADOR', cd_prestador_exec_w, cd_prestador_exec_w, cd_estabelecimento_p);	-- CD_PRESTADOR = CD_PRESTADOR_EXEC
					nm_prestador_exec_w := pls_obter_campo_fat_fund_xml('NM_PRESTADOR', nm_prestador_exec_w, nm_prestador_exec_w, cd_estabelecimento_p);	-- NM_PRESTADOR = NM_PRESTADOR_EXEC
				end if;

				if (ie_tipo_guia_w <> '6') then -- Guia de Honorario Individual
					nr_cpf_executor_w := pls_obter_campo_fat_fund_xml('NR_CGC_CPF', nr_cpf_executor_w, nr_cpf_executor_w, cd_estabelecimento_p); 	-- NR_CGC_CPF = NR_CPF_EXECUTOR
					cd_cgc_contratado_w := pls_obter_campo_fat_fund_xml('NR_CGC_CPF', cd_cgc_contratado_w, cd_cgc_contratado_w, cd_estabelecimento_p);	-- NR_CGC_CPF = CD_CGC_CONTRATADO
				end if;

				if (ie_tipo_guia_w = 3) then -- Guia de consulta
					nm_profissional_executante_w := pls_obter_campo_fat_fund_xml('NM_PRESTADOR', nm_profissional_executante_w, nm_profissional_executante_w, cd_estabelecimento_p);	-- NM_PRESTADOR = NM_PROFISSIONAL_EXECUTANTE
				end if;

				insert into pls_fatura_guia_envio(	nr_sequencia,				dt_atualizacao,			nm_usuario,
									dt_atualizacao_nrec,			nm_usuario_nrec,		cd_estabelecimento,
									nr_seq_guia_arquivo,			cd_guia,			cd_guia_referencia,
									cd_guia_prestador,			dt_emissao_guia,		dt_autorizacao,
									cd_senha,				dt_validade_autorizacao,	cd_usuario_plano,
									nr_cartao_nac_sus,			nr_seq_segurado,		nm_beneficiario,
									cd_prestador_exec,			cd_cnes_exec,			nm_prestador_exec,
									nr_conselho_solic,			nm_profissional_solic,		sg_conselho_solic,
									uf_conselho_solic,			ie_carater_internacao,		dt_atendimento,
									ie_tipo_atendimento,			ie_tipo_saida,			cd_cid,
									ds_cid,					ie_tipo_guia,			nm_produto,
									nm_tabela_cid,				nr_seq_conta,			sg_conselho_executante,
									uf_conselho_executante,			nr_conselho_executante,		cd_cbos,
									nm_profissional_executante,		ie_tipo_consulta,		cd_prestador_solic,
									cd_cnes_prestador,			nm_prestador_solic,		nr_seq_tipo_acomodacao,
									nr_seq_grau_partic,			nr_seq_saida_int,		ie_regime_internacao,
									nr_seq_clinica,				dt_entrada,			dt_saida,
									nr_seq_fatura,				ie_taxa_administracao_xml,	cd_cbos_solic,
									cd_cgc_contratado,			cd_cgc_contratado_solic,	nr_seq_prestador_exec,
									nr_cpf_executor,			nr_seq_plano,			ie_cobertura_especial,
									ie_regime_atendimento,			ie_saude_ocupacional)
							values (	nextval('pls_fatura_guia_envio_seq'),	clock_timestamp(),			nm_usuario_p,
									clock_timestamp(),				nm_usuario_p,			cd_estabelecimento_p,
									nr_seq_fat_guia_arq_w,			cd_guia_w,			cd_guia_referencia_w,
									cd_guia_prestador_w,			r_c03_w.dt_atend_ref_guia,	dt_autorizacao_w,
									cd_senha_w,				dt_validade_autorizacao_w,	cd_usuario_plano_w,
									r_c03_w.nr_cartao_nac_sus,		r_c03_w.nr_seq_segurado,	nm_beneficiario_w,
									cd_prestador_exec_w,			cd_cnes_exec_w,			nm_prestador_exec_w,
									nr_conselho_solic_w,			nm_profissional_solic_w,	sg_conselho_solic_w,
									uf_conselho_solic_w,			ie_carater_internacao_w,	r_c03_w.dt_atendimento,
									ie_tipo_atendimento_w,			nr_seq_saida_spsadt_w,		cd_cid_w,
									ds_cid_w,				r_c03_w.ie_tipo_guia,		nm_produto_w,
									nm_tabela_cid_w,			r_c03_w.nr_seq_conta,		sg_conselho_executante_w,
									uf_conselho_executante_w,		nr_conselho_executante_w,	cd_cbos_executante_w,
									nm_profissional_executante_w,		ie_tipo_consulta_w,		cd_prestador_solic_w,
									cd_cnes_solic_w,			nm_prestador_solic_w,		r_c03_w.nr_seq_tipo_acomodacao,
									nr_seq_grau_partic_w,			r_c03_w.nr_seq_saida_int,	r_c03_w.ie_regime_internacao,
									r_c03_w.nr_seq_clinica,			dt_entrada_w,			dt_saida_w,
									r_c01_w.nr_seq_fatura,			ie_taxa_administracao_xml_w,	cd_cbos_solic_w,
									cd_cgc_contratado_w,			cd_cgc_contratado_solic_w,	nr_seq_prestador_exec_w,
									nr_cpf_executor_w,			r_c03_w.nr_seq_plano,		r_c03_w.ie_cobertura_especial,
									r_c03_w.ie_regime_atendimento,		r_c03_w.ie_saude_ocupacional) returning nr_sequencia into nr_seq_fat_guia_envio_w;
			end if;

			for r_c04_w in c04( r_c03_w.nr_seq_fatura_conta ) loop

				vl_filme_w			:= r_c04_w.vl_filme;
				dt_atendimento_w		:= r_c04_w.dt_procedimento;
				vl_filme_total_w		:= r_c04_w.vl_filme_total;
				vl_filme_tx_w			:= r_c04_w.vl_filme_tx;
				ie_via_acesso_w			:= r_c04_w.ie_via_acesso;
				ie_tecnica_utilizada_w		:= r_c04_w.ie_tecnica_utilizada;
				cd_procedimento_w		:= r_c04_w.cd_procedimento;
				dt_fim_proc_w			:= r_c04_w.dt_fim_proc;

				ds_item_w			:= null;
				cd_tipo_tabela_w		:= null;
				cd_procedimento_conv_w		:= null;
				ds_procedimento_conv_w		:= null;
				nr_seq_regra_proc_conv_w	:= null;
				cd_tab_item_conv_proc_w		:= null;
				cd_proc_conversao_regra_w	:= null;
				ds_proc_conversao_regra_w	:= null;
				cd_grau_partic_w		:= null;
				nr_cpf_contratado_exec_w	:= null;
				nm_profissional_exec_w		:= null;
				nr_crm_exec_w			:= null;
				uf_crm_exec_w			:= null;
				cd_cbo_exec_w			:= null;
				cd_prestador_part_exec_w	:= null;
				cd_cgc_contratado_exec_w	:= null;
				sg_conselho_exec_w		:= null;
				nr_seq_partic_padrao_w		:= null;

				begin
					tx_reducao_acres_proc_w := (replace(trim(both coalesce(pls_obter_dados_fatura_xml(r_c01_w.nr_seq_fatura, r_c04_w.nr_seq_conta_proc, null, null, 'TXRA'), pls_obter_red_acrescimo_proc(r_c04_w.nr_seq_conta_proc))), '.', ','))::numeric;
				exception
				when others then
					tx_reducao_acres_proc_w	:= 1;
				end;

				if (coalesce(tx_reducao_acres_proc_w, 0) = 0) then
					tx_reducao_acres_proc_w	:= 1;
				end if;

				r_c04_w.qt_procedimento := pls_obter_arred_fat_xml(r_c01_w.nr_seq_pagador, clock_timestamp(), r_c04_w.qt_procedimento, r_c04_w.qt_procedimento);

				if (coalesce(dt_atendimento_w::text, '') = '') then
					dt_atendimento_w := r_c03_w.dt_atend_ref_guia;
				end if;

				if (ie_novo_pos_estab_w = 'N') and (r_c04_w.nr_seq_tiss_tab_conversao IS NOT NULL AND r_c04_w.nr_seq_tiss_tab_conversao::text <> '') then
					select	max(cd_tabela_xml)
					into STRICT	cd_tipo_tabela_w
					from	tiss_tipo_tabela
					where	nr_sequencia = r_c04_w.nr_seq_tiss_tab_conversao;
				end if;

				-- Tabela 87 - Relacao das terminologias unificadas da saude suplementar
				if (coalesce(cd_tipo_tabela_w::text, '') = '') then
					-- AMB 1		-- CBHPM 5		-- SUS_2008 7	-- TUSS 8 		-- PROPRIO 4
					if (ie_versao_xml_w = '2.02.03') then
						if (r_c04_w.ie_origem_proced = 1) then
							cd_tipo_tabela_w := '16';

						elsif (r_c04_w.ie_origem_proced = 5) then
							cd_tipo_tabela_w := '05';

						elsif (r_c04_w.ie_origem_proced = 7) then
							cd_tipo_tabela_w := '16';

						elsif (r_c04_w.ie_origem_proced = 8) then
							cd_tipo_tabela_w := '16';

						elsif (r_c04_w.ie_origem_proced = 4) then
							cd_tipo_tabela_w := '00';
						end if;

					elsif (ie_versao_xml_w in ('3.02.00', '3.02.01', '3.03.01', '3.03.02', '3.03.03', '3.04.00', '3.04.01', '3.05.00', '4.00.01')) then
						select	substr(max(ie_tipo_tabela), 1, 2)
						into STRICT	cd_tipo_tabela_w
						from	pls_procedimento_vigencia
						where	ie_origem_proced	= r_c04_w.ie_origem_proced
						and	cd_procedimento		= cd_procedimento_w
						and 	dt_atual_w between trunc(dt_inicio_vigencia) and fim_dia(dt_fim_vigencia);

						if (coalesce(cd_tipo_tabela_w::text, '') = '') then
							if (r_c04_w.ie_origem_proced = 1) then -- AMB
								cd_tipo_tabela_w := '22'; -- TUSS
							elsif (r_c04_w.ie_origem_proced = 5) then -- CBHPM
								cd_tipo_tabela_w := '22'; -- TUSS
							elsif (r_c04_w.ie_origem_proced in (2,3, 7)) then -- SUS-AIH, SUS-BPA, SUS_2008
								cd_tipo_tabela_w := '22'; -- TUSS
							elsif (r_c04_w.ie_origem_proced = 8) then -- TUSS
								cd_tipo_tabela_w := '22'; -- TUSS
							else
								cd_tipo_tabela_w := '00'; -- PROPRIO
							end if;
						end if;
					end if;
				end if;

				if (ie_novo_pos_estab_w = 'N') then
					select	sum(coalesce(vl_custo_operacional,0)),
						sum(coalesce(vl_administracao,0))
					into STRICT	vl_beneficiario_w,
						vl_administracao_w
					from	pls_conta_pos_estab_contab
					where	nr_sequencia	= r_c04_w.nr_seq_conta_pos_contab;
				else
					select	coalesce(vl_medico, 0) + coalesce(vl_materiais, 0) + coalesce(vl_custo_operacional, 0) + coalesce(vl_lib_taxa_co, 0) + coalesce(vl_lib_taxa_material, 0) + coalesce(vl_lib_taxa_servico, 0),
						coalesce(vl_lib_taxa_co, 0) + coalesce(vl_lib_taxa_material, 0) + coalesce(vl_lib_taxa_servico, 0)
					into STRICT	vl_beneficiario_w,
						vl_administracao_w
					from	pls_conta_pos_proc
					where	nr_sequencia = r_c04_w.nr_seq_conta_pos_proc;
				end if;

				select	sum(coalesce(vl_faturado, 0) + coalesce(vl_faturado_ndc, 0))
				into STRICT	vl_taxa_item_w
				from	pls_fatura_proc
				where	nr_seq_fatura_conta	= r_c03_w.nr_seq_fatura_conta
				and	nr_seq_conta_proc	= r_c04_w.nr_seq_conta_proc
				and	nr_seq_conta_pos_contab	= r_c04_w.nr_seq_conta_pos_contab
				and	ie_tipo_cobranca in ('3', '4');

				vl_taxa_item_w := coalesce(vl_taxa_item_w, 0);

				-- Colocar a taxa de administrativa no valor do beneficiario, pois esse item e separado na fatura
				if (vl_taxa_item_w > 0) then
					vl_beneficiario_w := vl_beneficiario_w + vl_taxa_item_w;
				end if;

				-- Caso o paramentro enviofat no contrato estiver marcado deduz o valor da taxa no valor do servico
				if (ie_taxa_administracao_xml_w = 'S') and (vl_beneficiario_w > vl_administracao_w) then
					vl_beneficiario_w	:= vl_beneficiario_w - vl_administracao_w;
					vl_filme_total_w	:= vl_filme_total_w - vl_filme_tx_w;
					vl_filme_tx_w		:= 0;
				end if;

				if (coalesce(r_c04_w.qt_procedimento, 0) > 0) then
					vl_benef_unit_w	:= (vl_beneficiario_w / r_c04_w.qt_procedimento) / tx_reducao_acres_proc_w;
				else
					vl_benef_unit_w	:= (vl_beneficiario_w / tx_reducao_acres_proc_w);
				end if;

				ie_via_acesso_w		:= coalesce(pls_obter_dados_fatura_xml(r_c01_w.nr_seq_fatura, r_c04_w.nr_seq_conta_proc, null, ie_via_acesso_w, 'VIAAC'), ie_via_acesso_w);
				ie_tecnica_utilizada_w	:= coalesce(pls_obter_dados_fatura_xml(r_c01_w.nr_seq_fatura, r_c04_w.nr_seq_conta_proc, null, ie_tecnica_utilizada_w, 'TECUT'), ie_tecnica_utilizada_w);

				-- Para a versao 3.02.01 houve alteracao na tabela de dominio da tecnica utilizada - Por isso sera tratados os DePara necessario aqui
				if (ie_versao_xml_w in ('3.02.00', '3.02.01', '3.03.01', '3.03.02', '3.03.03', '3.04.00', '3.04.01', '3.05.00', '4.00.01')) and (ie_tecnica_utilizada_w not in ('1', '2', '3')) then
					-- DePara Tecnica utilizada
					if (ie_tecnica_utilizada_w = 'C') then
						ie_tecnica_utilizada_w := '1';

					elsif (ie_tecnica_utilizada_w = 'V') then
						ie_tecnica_utilizada_w := '2';

					elsif (ie_tecnica_utilizada_w = 'R') then
						ie_tecnica_utilizada_w := '3';
					else
						ie_tecnica_utilizada_w := null;
					end if;
				end if;

				-- Conversao procedimento XML
				SELECT * FROM pls_convert_proc_guia_xml_fat(	r_c04_w.nr_seq_conta_proc, cd_procedimento_w, r_c04_w.ie_origem_proced, r_c03_w.nr_seq_prestador_solic, r_c03_w.nr_seq_segurado, r_c01_w.nr_seq_pagador, cd_procedimento_conv_w, ds_procedimento_conv_w, nr_seq_regra_proc_conv_w, cd_tab_item_conv_proc_w) INTO STRICT cd_procedimento_conv_w, ds_procedimento_conv_w, nr_seq_regra_proc_conv_w, cd_tab_item_conv_proc_w;

				if (nr_seq_regra_proc_conv_w IS NOT NULL AND nr_seq_regra_proc_conv_w::text <> '') then
					cd_proc_conversao_regra_w := substr(coalesce(cd_procedimento_conv_w,cd_procedimento_w), 1, 20);
					ds_proc_conversao_regra_w := substr(coalesce(ds_procedimento_conv_w, ds_proc_conversao_regra_w), 1, 255);

					if (coalesce(ds_proc_conversao_regra_w::text, '') = '') then
						ds_proc_conversao_regra_w := substr(pls_obter_desc_procedimento(cd_procedimento_w, r_c04_w.ie_origem_proced), 1, 255);
					end if;

					select	max(nr_sequencia)
					into STRICT	nr_seq_fat_guia_envio_proc_w
					from	pls_fat_guia_envio_proc
					where	coalesce(cd_procedimento::text, '') = ''
					and	cd_proced_conversao	= cd_proc_conversao_regra_w
					and	ds_proc_conversao_regra	= ds_proc_conversao_regra_w
					and	nr_seq_guia_envio	= nr_seq_fat_guia_envio_w;

					cd_procedimento_w := null;
				end if;

				-- IMPORTANTE para outras despesas (Taxa e Diaria)
				if (coalesce(dt_fim_proc_w::text, '') = '') then
					dt_fim_proc_w := r_c04_w.dt_inicio_proc;
				end if;

				-- Conversao procedimento XML
				insert	into pls_fat_guia_envio_proc(	nr_sequencia,					dt_atualizacao,						nm_usuario,
									dt_atualizacao_nrec,				nm_usuario_nrec,					nr_seq_guia_envio,
									nr_seq_conta_proc,				cd_procedimento,					ie_origem_proced,
									cd_tipo_tabela,					dt_procedimento,					dt_inicio_proc,
									dt_fim_proc,					vl_unitario,						vl_procedimento,
									qt_procedimento,				ie_via_acesso,						ie_tecnica_utilizada,
									vl_beneficiario,				vl_beneficiario_unit,					nr_seq_conta_pos_estab,
									ds_proc_conversao_regra,			tx_reducao_acrescimo,					ie_tipo_despesa,
									nr_seq_pos_proc,				cd_dente,						cd_regiao_boca,
									cd_face_dente)
								values (	nextval('pls_fat_guia_envio_proc_seq'),		clock_timestamp(),						nm_usuario_p,
									clock_timestamp(),					nm_usuario_p,						nr_seq_fat_guia_envio_w,
									r_c04_w.nr_seq_conta_proc,			coalesce(cd_proc_conversao_regra_w, cd_procedimento_w),	r_c04_w.ie_origem_proced,
									coalesce(cd_tab_item_conv_proc_w, cd_tipo_tabela_w),	dt_atendimento_w,					r_c04_w.dt_inicio_proc,
									dt_fim_proc_w,					r_c04_w.vl_unitario_proc,				r_c04_w.vl_procedimento,
									r_c04_w.qt_procedimento,			ie_via_acesso_w,					ie_tecnica_utilizada_w,
									vl_beneficiario_w,				vl_benef_unit_w,					r_c04_w.nr_seq_conta_pos,
									ds_proc_conversao_regra_w,			tx_reducao_acres_proc_w,				r_c04_w.ie_tipo_despesa_proc,
									r_c04_w.nr_seq_conta_pos_proc,			r_c04_w.cd_dente,					r_c04_w.cd_regiao_boca,
									r_c04_w.cd_face_dente) returning nr_sequencia into nr_seq_fat_guia_envio_proc_w;

				SELECT * FROM pls_obter_regra_adic_xml_fat(r_c01_w.nr_seq_fatura, null, r_c04_w.nr_seq_conta_proc, null, nr_seq_regra_adic_w, ie_valor_filme_w) INTO STRICT nr_seq_regra_adic_w, ie_valor_filme_w;

				-- Gerar os itens adicionais para o XML de faturamento
				if (nr_seq_regra_adic_w IS NOT NULL AND nr_seq_regra_adic_w::text <> '') then
					ie_somente_vl_filme_w	:= 'N';
					ds_item_w 		:= substr(obter_descricao_procedimento(cd_procedimento_w, r_c04_w.ie_origem_proced), 1, 255);

					for r_c05_w in c05( nr_seq_regra_adic_w ) loop
						insert into pls_fat_guia_envio_proc(	nr_sequencia,				dt_atualizacao,				nm_usuario,
											dt_atualizacao_nrec,			nm_usuario_nrec,			nr_seq_guia_envio,
											nr_seq_conta_proc,			cd_procedimento,			ds_proc_conversao_regra,
											cd_tipo_tabela,				dt_procedimento,			vl_beneficiario_unit,
											dt_fim_proc,				ie_via_acesso,				vl_unitario,
											ie_tecnica_utilizada,			nr_seq_conta_pos_estab,			vl_procedimento,
											tx_reducao_acrescimo,			ie_tipo_despesa,			qt_procedimento,
											dt_inicio_proc,				nr_seq_pos_proc,			vl_beneficiario,
											cd_dente,				cd_regiao_boca,				cd_face_dente)
									values (	nextval('pls_fat_guia_envio_proc_seq'),	clock_timestamp(),				nm_usuario_p,
											clock_timestamp(),				nm_usuario_p,				nr_seq_fat_guia_envio_w,
											r_c04_w.nr_seq_conta_proc,		r_c05_w.cd_proc_item, 			coalesce(r_c05_w.ds_proc_conversao_regra, ds_item_w),
											r_c05_w.cd_tipo_tabela_proc,		dt_atendimento_w,			CASE WHEN r_c05_w.ie_somente_vl_filme='S' THEN  vl_filme_total_w  ELSE vl_benef_unit_w END ,
											dt_fim_proc_w,				ie_via_acesso_w,			CASE WHEN r_c05_w.ie_somente_vl_filme='S' THEN  vl_filme_total_w  ELSE r_c04_w.vl_unitario_proc END ,
											ie_tecnica_utilizada_w,			r_c04_w.nr_seq_conta_pos,		CASE WHEN r_c05_w.ie_somente_vl_filme='S' THEN  vl_filme_total_w  ELSE r_c04_w.vl_procedimento END ,
											tx_reducao_acres_proc_w,		r_c04_w.ie_tipo_despesa_proc,		CASE WHEN r_c05_w.ie_somente_vl_filme='S' THEN  1  ELSE r_c04_w.qt_procedimento END ,
											r_c04_w.dt_inicio_proc,			r_c04_w.nr_seq_conta_pos_proc,		CASE WHEN r_c05_w.ie_somente_vl_filme='S' THEN  vl_filme_total_w  ELSE vl_beneficiario_w END ,
											r_c04_w.cd_dente,			r_c04_w.cd_regiao_boca,			r_c04_w.cd_face_dente);

						if (r_c05_w.ie_somente_vl_filme = 'S') and (vl_filme_total_w > 0) then
							ie_somente_vl_filme_w := 'S';
						end if;
					end loop;

					if (ie_somente_vl_filme_w = 'S') then
						if (coalesce(r_c04_w.qt_procedimento, 0) > 0) then
							update	pls_fat_guia_envio_proc
							set	vl_beneficiario		= coalesce(vl_beneficiario, 0) - coalesce(vl_filme_total_w, 0),
								vl_beneficiario_unit	= (coalesce(vl_beneficiario, 0) - coalesce(vl_filme_total_w, 0)) / r_c04_w.qt_procedimento
							where	nr_sequencia		= nr_seq_fat_guia_envio_proc_w;
						else
							update	pls_fat_guia_envio_proc
							set	vl_beneficiario		= coalesce(vl_beneficiario, 0) - coalesce(vl_filme_total_w, 0),
								vl_beneficiario_unit	= coalesce(vl_beneficiario_unit, 0) - coalesce(vl_filme_total_w, 0)
							where	nr_sequencia		= nr_seq_fat_guia_envio_proc_w;
						end if;
					end if;
				end if;

				select	CASE WHEN count(1)=0 THEN  'S'  ELSE 'C' END
				into STRICT	ie_partic_proc_w
				from	pls_proc_participante
				where	nr_seq_conta_proc = r_c04_w.nr_seq_conta_proc;

				-- identificacaoEquipe
				ie_gera_tag_w := pls_obter_campo_fat_partic_xml(31, r_c01_w.nr_seq_pagador, r_c03_w.nr_cpf_prest_exec, r_c04_w.nr_seq_grupo_rec, cd_procedimento_w, r_c04_w.ie_origem_proced, ie_partic_proc_w, null);

				-- PARTICIPANTE: EXECUTOR PF DA CONTA OU PARTICIPANTE PADRaO
				if (coalesce(ie_gera_tag_w, 'S') = 'E') then
					if (r_c03_w.nr_seq_prestador_exec IS NOT NULL AND r_c03_w.nr_seq_prestador_exec::text <> '') and (r_c03_w.nr_cpf_prest_exec IS NOT NULL AND r_c03_w.nr_cpf_prest_exec::text <> '') then

						-- Prestador Executor PF
						select	max(b.cd_pessoa_fisica)
						into STRICT	cd_medico_exec_w
						from	pls_prestador 		b,
							medico 			a
						where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
						and	b.nr_sequencia		= r_c03_w.nr_seq_prestador_exec;

						if (cd_medico_exec_w IS NOT NULL AND cd_medico_exec_w::text <> '') then
							if (r_c03_w.nr_seq_conta_referencia IS NOT NULL AND r_c03_w.nr_seq_conta_referencia::text <> '') then
								select	max(c.nr_seq_grau_partic)
								into STRICT	nr_seq_grau_partic_w
								from	pls_proc_participante	c,
									pls_conta_proc		b,
									pls_conta		a
								where	a.nr_sequencia		= b.nr_seq_conta
								and	b.nr_sequencia		= c.nr_seq_conta_proc
								and	a.nr_sequencia		= r_c03_w.nr_seq_conta_referencia
								and	c.nr_seq_prestador	= r_c03_w.nr_seq_prestador_exec;

								select	substr(max(cd_tiss), 1, 2)
								into STRICT	cd_grau_partic_w
								from	pls_grau_participacao
								where	nr_sequencia = nr_seq_grau_partic_w;
							end if;

							cd_grau_partic_w		:= coalesce(cd_grau_partic_w, '12');
							nr_cpf_contratado_exec_w	:= substr(pls_obter_dados_prestador(r_c03_w.nr_seq_prestador_exec, 'CPF'), 1, 11);
							nm_profissional_exec_w		:= substr(obter_nome_medico(cd_medico_exec_w, 'N'), 1, 70);
							nr_seq_conselho_exec_w		:= substr(pls_obter_seq_conselho_prof(cd_medico_exec_w), 1, 10);
							nr_crm_exec_w			:= substr(obter_crm_medico(cd_medico_exec_w), 1, 15);
							uf_crm_exec_w			:= substr(obter_dados_medico(cd_medico_exec_w, 'UFCRM'), 1, 2);
							cd_cbo_exec_w			:= substr(obter_codigo_cbo_saude(pls_obter_cbo_medico(cd_medico_exec_w)), 1,6);
							cd_prestador_part_exec_w	:= null;
							cd_cgc_contratado_exec_w	:= null;

							begin
								select	substr(pls_obter_conselho_tiss_xml(sg_conselho), 1, 20)
								into STRICT	sg_conselho_exec_w
								from	conselho_profissional
								where	nr_sequencia = nr_seq_conselho_exec_w;
							exception
							when others then
								sg_conselho_exec_w := null;
							end;
						end if;
					else
						-- identificacaoEquipe
						nr_seq_partic_padrao_w := pls_obter_campo_fat_partic_xml(31, r_c01_w.nr_seq_pagador, r_c03_w.nr_cpf_prest_exec, r_c04_w.nr_seq_grupo_rec, cd_procedimento_w, r_c04_w.ie_origem_proced, ie_partic_proc_w, 'PP');

						-- Se tiver informacao de participante default
						if (nr_seq_partic_padrao_w IS NOT NULL AND nr_seq_partic_padrao_w::text <> '') then
							select	nr_cpf_partic,
								cd_cgc_partic,
								cd_prestador_partic,
								nm_participante,
								sg_conselho_partic,
								nr_conselho_partic,
								uf_conselho_partic,
								cd_cbo_partic,
								cd_grau_partic
							into STRICT	nr_cpf_contratado_exec_w,
								cd_cgc_contratado_exec_w,
								cd_prestador_part_exec_w,
								nm_profissional_exec_w,
								sg_conselho_exec_w,
								nr_crm_exec_w,
								uf_crm_exec_w,
								cd_cbo_exec_w,
								cd_grau_partic_w
							from	pls_partic_padrao_fat_xml
							where	nr_sequencia = nr_seq_partic_padrao_w;
						end if;
					end if;

					cd_prestador_part_exec_w := pls_obter_campo_fat_fund_xml('CD_PRESTADOR', cd_prestador_part_exec_w, cd_prestador_part_exec_w, cd_estabelecimento_p);	-- CD_PRESTADOR = CD_PRESTADOR_EXEC
					cd_cgc_contratado_exec_w := pls_obter_campo_fat_fund_xml('NR_CGC_CPF', cd_cgc_contratado_exec_w, cd_cgc_contratado_exec_w, cd_estabelecimento_p);	-- NR_CGC_CPF = CD_CGC_CONTRATADO_EXEC
					nr_cpf_contratado_exec_w := pls_obter_campo_fat_fund_xml('NR_CGC_CPF', nr_cpf_contratado_exec_w, nr_cpf_contratado_exec_w, cd_estabelecimento_p);	-- NR_CGC_CPF = NR_CPF_CONTRATADO_EXEC
					nm_profissional_exec_w := pls_obter_campo_fat_fund_xml('NM_PRESTADOR', nm_profissional_exec_w, nm_profissional_exec_w, cd_estabelecimento_p);	-- NM_PRESTADOR = NM_PROFISSIONAL_EXEC
					insert into pls_fat_guia_envio_partic(	nr_sequencia,					dt_atualizacao,				nm_usuario,
										dt_atualizacao_nrec,				nm_usuario_nrec,			nr_seq_guia_proc,
										cd_grau_partic,					sg_conselho_exec,			nm_profissional_exec,
										nr_crm_exec,					uf_crm_exec,				cd_cbo_exec,
										nr_cpf_contratado_exec,				cd_cgc_contratado_exec,			cd_prestador_exec)
									values (	nextval('pls_fat_guia_envio_partic_seq'),		clock_timestamp(),				nm_usuario_p,
										clock_timestamp(),					nm_usuario_p,				nr_seq_fat_guia_envio_proc_w,
										coalesce(cd_grau_partic_w, '12'),			sg_conselho_exec_w,			coalesce(nm_profissional_exec_w, 'Participante Eventual'),
										nr_crm_exec_w,					coalesce(uf_crm_exec_w, sg_estado_w),	cd_cbo_exec_w,
										nr_cpf_contratado_exec_w,			cd_cgc_contratado_exec_w,		cd_prestador_part_exec_w);
				end if;

				-- PARTICIPANTES
				for r_c06_w in c06( r_c04_w.nr_seq_conta_pos , r_c04_w.nr_seq_conta_pos_proc ) loop
					cd_grau_partic_w		:= null;
					nm_profissional_exec_w		:= null;
					sg_conselho_exec_w		:= null;
					nr_crm_exec_w			:= null;
					uf_crm_exec_w			:= null;
					cd_cbo_exec_w			:= null;
					nr_cpf_contratado_exec_w	:= null;
					cd_cgc_contratado_exec_w	:= null;
					cd_prestador_part_exec_w	:= null;
					nr_seq_conselho_imp_w		:= null;
					nr_seq_cbo_saude_imp_w		:= null;
					nr_seq_partic_padrao_w		:= null;

					-- MeDICO IMPORTADO
					if (r_c06_w.cd_medico_imp IS NOT NULL AND r_c06_w.cd_medico_imp::text <> '') then
						cd_grau_partic_w		:= substr(r_c06_w.cd_grau_partic_imp, 1, 2);
						nm_profissional_exec_w		:= substr(r_c06_w.nm_medico_executor_imp, 1, 70);
						sg_conselho_exec_w		:= substr(r_c06_w.sg_conselho_imp, 1, 20);
						nr_crm_exec_w			:= substr(r_c06_w.nr_crm_imp, 1, 15);
						uf_crm_exec_w			:= substr(coalesce(r_c06_w.uf_crm_imp, r_c06_w.uf_conselho), 1, 2);
						cd_cbo_exec_w			:= substr(r_c06_w.cd_cbo_saude_imp, 1,6);
						nr_cpf_contratado_exec_w	:= substr(r_c06_w.nr_cpf_imp, 1, 11);
						cd_cgc_contratado_exec_w	:= substr(r_c06_w.cd_cgc_imp, 1, 14);
						cd_prestador_part_exec_w	:= substr(r_c06_w.cd_prestador_imp, 1, 14);
						nr_seq_conselho_imp_w		:= r_c06_w.nr_seq_conselho;
						nr_seq_cbo_saude_imp_w		:= r_c06_w.nr_seq_cbo_saude;

						if (coalesce(trim(both nm_profissional_exec_w)::text, '') = '') and (r_c06_w.cd_medico IS NOT NULL AND r_c06_w.cd_medico::text <> '') then
							nm_profissional_exec_w := substr(obter_nome_medico(r_c06_w.cd_medico, 'N'), 1, 70);
						end if;

						if (coalesce(nr_cpf_contratado_exec_w::text, '') = '') and (r_c06_w.cd_medico IS NOT NULL AND r_c06_w.cd_medico::text <> '') then
							nr_cpf_contratado_exec_w := substr(obter_dados_pf(r_c06_w.cd_medico, 'CPF'), 1, 11);

							if (nr_cpf_contratado_exec_w IS NOT NULL AND nr_cpf_contratado_exec_w::text <> '') then
								cd_cgc_contratado_exec_w := null;
								cd_prestador_part_exec_w := null;
							end if;
						end if;

						if (coalesce(trim(both sg_conselho_exec_w)::text, '') = '') and (r_c06_w.cd_medico IS NOT NULL AND r_c06_w.cd_medico::text <> '') then
							begin
							sg_conselho_exec_w := pls_obter_conselho_tiss_xml(substr(obter_dados_medico(r_c06_w.cd_medico, 'SGCRM'), 1, 20));
							exception
							when others then
								sg_conselho_exec_w := null;
							end;
						end if;

						if (coalesce(trim(both cd_cbo_exec_w)::text, '') = '') and (r_c06_w.cd_medico IS NOT NULL AND r_c06_w.cd_medico::text <> '') then
							cd_cbo_exec_w := substr(obter_codigo_cbo_saude(pls_obter_cbo_medico(r_c06_w.cd_medico)), 1,6);
						end if;

						if (coalesce(nr_cpf_contratado_exec_w::text, '') = '') and (coalesce(cd_cgc_contratado_exec_w::text, '') = '') and (coalesce(cd_prestador_part_exec_w::text, '') = '') and (r_c06_w.cd_medico IS NOT NULL AND r_c06_w.cd_medico::text <> '') then
							begin
							cd_prestador_part_exec_w := substr(obter_dados_pf(r_c06_w.cd_medico, 'CPR'), 1, 14);
							exception
							when others then
								cd_prestador_part_exec_w := null;
							end;
						end if;
					end if;

					-- MeDICO
					if (r_c06_w.cd_medico IS NOT NULL AND r_c06_w.cd_medico::text <> '') and (coalesce(r_c06_w.cd_medico_imp::text, '') = '') then
						cd_grau_partic_w		:= substr(r_c06_w.cd_grau_partic_imp, 1, 2);
						nm_profissional_exec_w		:= substr(obter_nome_medico(r_c06_w.cd_medico, 'N'), 1, 70);
						sg_conselho_exec_w		:= pls_obter_conselho_tiss_xml(substr(obter_dados_medico(r_c06_w.cd_medico, 'SGCRM'), 1, 20));
						nr_crm_exec_w			:= substr(obter_dados_medico(r_c06_w.cd_medico, 'CRM'), 1, 15);
						uf_crm_exec_w			:= substr(obter_dados_medico(r_c06_w.cd_medico, 'UFCRM'), 1, 2);
						cd_cbo_exec_w			:= substr(obter_codigo_cbo_saude(pls_obter_cbo_medico(r_c06_w.cd_medico)), 1,6);
						nr_cpf_contratado_exec_w	:= substr(obter_dados_pf(r_c06_w.cd_medico, 'CPF'), 1, 11);
						cd_cgc_contratado_exec_w	:= null;
						cd_prestador_part_exec_w	:= null;
						nr_seq_conselho_imp_w		:= r_c06_w.nr_seq_conselho;
						nr_seq_cbo_saude_imp_w		:= r_c06_w.nr_seq_cbo_saude;

						if (coalesce(cd_cbo_exec_w::text, '') = '') and (coalesce(nr_seq_cbo_saude_imp_w::text, '') = '') then
							select	max(nr_seq_cbo_saude)
							into STRICT	nr_seq_cbo_saude_imp_w
							from	pessoa_fisica
							where	cd_pessoa_fisica = r_c06_w.cd_medico;
						end if;
					end if;

					-- PRESTADOR
					if (r_c06_w.nr_seq_prestador IS NOT NULL AND r_c06_w.nr_seq_prestador::text <> '') and (coalesce(r_c06_w.cd_medico::text, '') = '') and (coalesce(r_c06_w.cd_medico_imp::text, '') = '') then
						cd_grau_partic_w	:= substr(r_c06_w.cd_grau_partic_imp, 1, 2);
						nm_profissional_exec_w	:= substr(pls_obter_dados_prestador(r_c06_w.nr_seq_prestador, 'N'), 1, 70);

						select	max(cd_pessoa_fisica),
							max(cd_cgc),
							coalesce(r_c06_w.cd_prestador_imp, max(cd_prestador))
						into STRICT	cd_pf_prest_part_w,
							cd_cgc_contratado_exec_w,
							cd_prestador_part_exec_w
						from	pls_prestador
						where	nr_sequencia = r_c06_w.nr_seq_prestador;

						-- DADOS PF
						if (cd_pf_prest_part_w IS NOT NULL AND cd_pf_prest_part_w::text <> '') then
							sg_conselho_exec_w		:= pls_obter_conselho_tiss_xml(substr(obter_dados_medico(cd_pf_prest_part_w, 'SGCRM'), 1, 20));
							nr_crm_exec_w			:= substr(obter_dados_medico(cd_pf_prest_part_w, 'CRM'), 1, 15);
							uf_crm_exec_w			:= substr(obter_dados_medico(cd_pf_prest_part_w, 'UFCRM'), 1, 2);
							cd_cbo_exec_w			:= substr(obter_codigo_cbo_saude(pls_obter_cbo_medico(cd_pf_prest_part_w)), 1,6);
							nr_cpf_contratado_exec_w	:= substr(obter_dados_pf(cd_pf_prest_part_w, 'CPF'), 1, 11);
						end if;
					end if;


					-- PRESTADOR INTERCAMBIO
					if (r_c06_w.nr_seq_prest_inter IS NOT NULL AND r_c06_w.nr_seq_prest_inter::text <> '') and (coalesce(r_c06_w.nr_seq_prestador::text, '') = '') and (coalesce(r_c06_w.cd_medico::text, '') = '') and (coalesce(r_c06_w.cd_medico_imp::text, '') = '') then
						cd_grau_partic_w := substr(r_c06_w.cd_grau_partic_imp, 1, 2);

						select	max(cd_cgc_intercambio),
							substr(max(nm_prestador), 1, 70),
							max(nr_cpf)
						into STRICT	cd_cgc_contratado_exec_w,
							nm_profissional_exec_w,
							nr_cpf_contratado_exec_w
						from	pls_prestador_intercambio
						where	nr_sequencia = r_c06_w.nr_seq_prest_inter;
					end if;

					if (coalesce(cd_grau_partic_w::text, '') = '') then
						select	substr(max(cd_tiss), 1, 2)
						into STRICT	cd_grau_partic_w
						from	pls_grau_participacao
						where	nr_sequencia = r_c06_w.nr_seq_grau_partic;

						if	((pls_obter_grau_part_conver_xml(r_c06_w.nr_seq_grau_partic, r_c01_w.nr_seq_pagador, r_c04_w.nr_seq_grupo_rec, cd_procedimento_w, r_c04_w.ie_origem_proced)) is not null) then
							cd_grau_partic_w := pls_obter_grau_part_conver_xml(r_c06_w.nr_seq_grau_partic, r_c01_w.nr_seq_pagador, r_c04_w.nr_seq_grupo_rec, cd_procedimento_w, r_c04_w.ie_origem_proced);
						end if;
					end if;

					if (r_c06_w.nr_seq_conselho IS NOT NULL AND r_c06_w.nr_seq_conselho::text <> '') then
						select	pls_obter_conselho_tiss_xml(substr(max(sg_conselho), 1, 20))
						into STRICT	sg_conselho_exec_ww
						from	conselho_profissional
						where	nr_sequencia = r_c06_w.nr_seq_conselho;
					end if;

					if (coalesce(r_c06_w.cd_cbo_saude_imp::text, '') = '') and (nr_seq_cbo_saude_imp_w IS NOT NULL AND nr_seq_cbo_saude_imp_w::text <> '') then
						cd_cbo_exec_w := pls_obter_cbo_saude_ptu(nr_seq_cbo_saude_imp_w, null, null, null);
					end if;

					nm_profissional_exec_w := replace(ptu_somente_caracter_permitido(nm_profissional_exec_w, 'ANS'), chr(38), 'e');

					-- jtonon - OS 864580 - Rio preto (Francini) solicitou pegar nr_crm e sg_conselho do participante da conta
					begin
						select	nr_crm
						into STRICT	nr_crm_exec_ww
						from	medico
						where	cd_pessoa_fisica = r_c06_w.cd_medico;
					exception
					when others then
						nr_crm_exec_ww := null;
					end;

					nr_crm_exec_w		:= substr(coalesce(nr_crm_exec_ww, nr_crm_exec_w), 1, 15);
					sg_conselho_exec_w	:= substr(coalesce(sg_conselho_exec_ww, sg_conselho_exec_w), 1, 20);

					select	count(1)
					into STRICT	qt_regra_conv_w
					from	pls_regra_campos_part_xml
					where	((nr_seq_pagador = r_c01_w.nr_seq_pagador) or (coalesce(nr_seq_pagador::text, '') = ''))  LIMIT 1;

					if (qt_regra_conv_w > 0) then
						-- identificacaoEquipe.codProfissional.codigoPrestadorNaOperadora
						cd_prestador_part_exec_w := pls_obter_campo_fat_partic_xml(25, r_c01_w.nr_seq_pagador, cd_prestador_part_exec_w, r_c04_w.nr_seq_grupo_rec, cd_procedimento_w, r_c04_w.ie_origem_proced, 'C', null);

						-- identificacaoEquipe.nomeProf
						nm_profissional_exec_w := pls_obter_campo_fat_partic_xml(26, r_c01_w.nr_seq_pagador, nm_profissional_exec_w, r_c04_w.nr_seq_grupo_rec, cd_procedimento_w, r_c04_w.ie_origem_proced, 'C', null);

						-- identificacaoEquipe.conselho
						sg_conselho_exec_w := pls_obter_campo_fat_partic_xml(27, r_c01_w.nr_seq_pagador, sg_conselho_exec_w, r_c04_w.nr_seq_grupo_rec, cd_procedimento_w, r_c04_w.ie_origem_proced, 'C', null);

						-- identificacaoEquipe.numeroConselhoProfissional
						nr_crm_exec_w := pls_obter_campo_fat_partic_xml(28, r_c01_w.nr_seq_pagador, nr_crm_exec_w, r_c04_w.nr_seq_grupo_rec, cd_procedimento_w, r_c04_w.ie_origem_proced, 'C', null);

						-- identificacaoEquipe.UF
						uf_crm_exec_w := pls_obter_campo_fat_partic_xml(29, r_c01_w.nr_seq_pagador, uf_crm_exec_w, r_c04_w.nr_seq_grupo_rec, cd_procedimento_w, r_c04_w.ie_origem_proced, 'C', null);

						-- identificacaoEquipe.CBOS
						cd_cbo_exec_w := pls_obter_campo_fat_partic_xml(30, r_c01_w.nr_seq_pagador, cd_cbo_exec_w, r_c04_w.nr_seq_grupo_rec, cd_procedimento_w, r_c04_w.ie_origem_proced, 'C', null);

						-- identificacaoEquipe
						ie_gera_tag_w := pls_obter_campo_fat_partic_xml(31, r_c01_w.nr_seq_pagador, nr_cpf_contratado_exec_w, r_c04_w.nr_seq_grupo_rec, cd_procedimento_w, r_c04_w.ie_origem_proced, 'C', null);
					end if;

					-- Se tiver informacao de participante default
					if (coalesce(ie_gera_tag_w, 'S') = 'D') then

						-- identificacaoEquipe
						nr_seq_partic_padrao_w := pls_obter_campo_fat_partic_xml(31, r_c01_w.nr_seq_pagador, nr_cpf_contratado_exec_w, r_c04_w.nr_seq_grupo_rec, cd_procedimento_w, r_c04_w.ie_origem_proced, 'C', 'PP');

						if (nr_seq_partic_padrao_w IS NOT NULL AND nr_seq_partic_padrao_w::text <> '') then
							select	nr_cpf_partic,
								cd_cgc_partic,
								cd_prestador_partic,
								nm_participante,
								sg_conselho_partic,
								nr_conselho_partic,
								uf_conselho_partic,
								cd_cbo_partic,
								cd_grau_partic
							into STRICT	nr_cpf_contratado_exec_w,
								cd_cgc_contratado_exec_w,
								cd_prestador_part_exec_w,
								nm_profissional_exec_w,
								sg_conselho_exec_w,
								nr_crm_exec_w,
								uf_crm_exec_w,
								cd_cbo_exec_w,
								cd_grau_partic_w
							from	pls_partic_padrao_fat_xml
							where	nr_sequencia = nr_seq_partic_padrao_w;
						end if;
					end if;

					if (coalesce(somente_numero(cd_cbo_exec_w),'0') = '0') or (coalesce(nr_crm_exec_w::text, '') = '') or (coalesce(sg_conselho_exec_w::text, '') = '') then
						select	CASE WHEN coalesce(somente_numero(cd_cbo_exec_w),'0')='0' THEN max(cd_cbos)  ELSE cd_cbo_exec_w END ,
							coalesce(nr_crm_exec_w,max(nr_conselho_executante)),
							coalesce(sg_conselho_exec_w,max(sg_conselho_executante))
						into STRICT	cd_cbo_exec_w,
							nr_crm_exec_w,
							sg_conselho_exec_w
						from	pls_fatura_guia_envio
						where	nr_sequencia = nr_seq_fat_guia_envio_w;
					end if;

					if (coalesce(ie_gera_tag_w, 'S') = 'S') then

						select	max(a.ie_tipo_guia)
						into STRICT	ie_tipo_guia_w
						from	pls_fat_guia_envio_proc	c,
							pls_fatura_guia_envio	b,
							pls_fat_guia_arquivo	a
						where	a.nr_sequencia		= b.nr_seq_guia_arquivo
						and	b.nr_sequencia		= c.nr_seq_guia_envio
						and	c.nr_sequencia 		= nr_seq_fat_guia_envio_proc_w;

						cd_prestador_part_exec_w := pls_obter_campo_fat_fund_xml('CD_PRESTADOR', cd_prestador_part_exec_w, cd_prestador_part_exec_w, cd_estabelecimento_p);	-- CD_PRESTADOR = CD_PRESTADOR_EXEC
						cd_cgc_contratado_exec_w := pls_obter_campo_fat_fund_xml('NR_CGC_CPF', cd_cgc_contratado_exec_w, cd_cgc_contratado_exec_w, cd_estabelecimento_p);	-- NR_CGC_CPF = CD_CGC_CONTRATADO_EXEC
						nr_cpf_contratado_exec_w := pls_obter_campo_fat_fund_xml('NR_CGC_CPF', nr_cpf_contratado_exec_w, nr_cpf_contratado_exec_w, cd_estabelecimento_p);	-- NR_CGC_CPF = NR_CPF_CONTRATADO_EXEC
						nm_profissional_exec_w := pls_obter_campo_fat_fund_xml('NM_PRESTADOR', nm_profissional_exec_w, nm_profissional_exec_w, cd_estabelecimento_p);	-- NM_PRESTADOR = NM_PROFISSIONAL_EXEC
            if (coalesce(nr_crm_exec_w::text, '') = '') then
              nr_crm_exec_w := regexp_substr(r_c06_w.nm_medico_executor_imp, '([0-9]*)');
            end if;

						insert into pls_fat_guia_envio_partic(	nr_sequencia,				dt_atualizacao,				nm_usuario,
											dt_atualizacao_nrec,			nm_usuario_nrec,			nr_seq_guia_proc,
											cd_grau_partic,				sg_conselho_exec,			nm_profissional_exec,
											nr_crm_exec,				uf_crm_exec,				cd_cbo_exec,
											nr_cpf_contratado_exec,			cd_cgc_contratado_exec,			cd_prestador_exec)
										values (nextval('pls_fat_guia_envio_partic_seq'),	clock_timestamp(),				nm_usuario_p,
											clock_timestamp(),				nm_usuario_p,				nr_seq_fat_guia_envio_proc_w,
											coalesce(cd_grau_partic_w, '12'),		sg_conselho_exec_w,			coalesce(nm_profissional_exec_w, 'Participante Eventual'),
											nr_crm_exec_w,				coalesce(uf_crm_exec_w, sg_estado_w),	cd_cbo_exec_w,
											nr_cpf_contratado_exec_w,		cd_cgc_contratado_exec_w,		cd_prestador_part_exec_w);
					end if;
				end loop;
			end loop;

			for r_c07_w in c07( r_c03_w.nr_seq_fatura_conta ) loop

				dt_atendimento_mat_w		:= r_c07_w.dt_atendimento_mat;
				nr_seq_material_w		:= r_c07_w.nr_seq_material;

				cd_material_conv_w		:= null;
				ds_material_conv_w		:= null;
				cd_prefixo_w			:= null;
				nr_seq_regra_mat_conv_w		:= null;
				cd_tab_item_conv_mat_w		:= null;
				ie_agrupamento_conv_mat_w	:= 'N';
				ds_mat_conversao_regra_w	:= null;
				nr_seq_fat_guia_envio_mat_w	:= null;
				ds_item_w			:= null;

				r_c07_w.qt_material := pls_obter_arred_fat_xml(r_c01_w.nr_seq_pagador, clock_timestamp(), r_c07_w.qt_material, r_c07_w.qt_material);

				if (coalesce(dt_atendimento_mat_w::text, '') = '') then
					dt_atendimento_mat_w := r_c03_w.dt_atend_ref_guia;
				end if;

				select	max(a.nr_registro_anvisa),
					max(substr(a.cd_fabricante, 1,60))
				into STRICT	nr_registro_anvisa_w,
					cd_ref_fabricante_w
				from	pls_material	b,
					material	a
				where	b.cd_material	= a.cd_material
				and	b.nr_sequencia	= nr_seq_material_w;

				select	max(cd_material_ops),
					coalesce(r_c07_w.cd_unidade_medida_pos, max(cd_unidade_medida)),
					max(CASE WHEN nr_registro_anvisa_w='' THEN  nr_registro_anvisa  ELSE nr_registro_anvisa_w END )
				into STRICT	cd_material_ops_w,
					cd_unidade_medida_w,
					nr_registro_anvisa_w
				from	pls_material
				where	nr_sequencia = nr_seq_material_w;


				if (nr_registro_anvisa_w IS NOT NULL AND nr_registro_anvisa_w::text <> '') then
					nr_registro_anvisa_w := somente_numero(nr_registro_anvisa_w);
				end if;

				if (coalesce(trim(both cd_ref_fabricante_w)::text, '') = '') then
					select	max(cd_ref_fabricante)
					into STRICT	cd_ref_fabricante_w
					from	pls_conta_mat
					where	nr_sequencia = r_c07_w.nr_seq_conta_mat;
				end if;

				if (ie_novo_pos_estab_w = 'N') then
					select	sum(coalesce(vl_custo_operacional,0)),
						sum(coalesce(vl_administracao,0))
					into STRICT	vl_beneficiario_w,
						vl_administracao_w
					from	pls_conta_pos_estab_contab
					where	nr_sequencia	= r_c07_w.nr_seq_conta_pos_contab;
				else
					select	coalesce(vl_materiais, 0) + coalesce(vl_lib_taxa_material, 0),
						coalesce(vl_lib_taxa_material, 0)
					into STRICT	vl_beneficiario_w,
						vl_administracao_w
					from	pls_conta_pos_mat
					where	nr_sequencia = r_c07_w.nr_seq_conta_pos_mat;
				end if;

				select	sum(coalesce(vl_faturado, 0) + coalesce(vl_faturado_ndc, 0))
				into STRICT	vl_taxa_item_w
				from	pls_fatura_mat
				where	nr_seq_fatura_conta	= r_c03_w.nr_seq_fatura_conta
				and	nr_seq_conta_mat	= r_c07_w.nr_seq_conta_mat
				and	nr_seq_conta_pos_contab	= r_c07_w.nr_seq_conta_pos_contab
				and	ie_tipo_cobranca in ('3', '4');

				vl_taxa_item_w := coalesce(vl_taxa_item_w, 0);

				-- Colocar a taxa de administrativa no valor do beneficiario, pois esse item e separado na fatura
				if (vl_taxa_item_w > 0) then
					vl_beneficiario_w := vl_beneficiario_w + vl_taxa_item_w;
				end if;

				if (ie_taxa_administracao_xml_w = 'S') and (vl_beneficiario_w > vl_administracao_w) then
					vl_beneficiario_w := vl_beneficiario_w - vl_administracao_w;
				end if;

				if (coalesce(r_c07_w.qt_material, 0) > 0) then
					vl_benef_unit_w	:= vl_beneficiario_w / r_c07_w.qt_material;
				else
					vl_benef_unit_w	:= vl_beneficiario_w;
				end if;

				begin
					tx_reducao_acrescimo_w := coalesce((replace(pls_obter_dados_fatura_xml(r_c01_w.nr_seq_fatura, null, r_c07_w.nr_seq_conta_mat, null, 'TXRA'), '.', ', '))::numeric , tx_reducao_acrescimo_w);
				exception
				when others then
					tx_reducao_acrescimo_w := coalesce(obter_somente_numero(pls_obter_dados_fatura_xml(r_c01_w.nr_seq_fatura, null, r_c07_w.nr_seq_conta_mat, null, 'TXRA')), tx_reducao_acrescimo_w);
				end;

				-- Conversao material XML
				SELECT * FROM pls_convert_mat_guia_xml_fat( 	r_c03_w.nr_seq_conta, r_c03_w.nr_seq_analise, nr_seq_material_w, r_c03_w.nr_seq_segurado, r_c03_w.ie_tipo_guia, r_c01_w.nr_seq_pagador, cd_material_conv_w, ds_material_conv_w, cd_prefixo_w, nr_seq_regra_mat_conv_w, cd_tab_item_conv_mat_w, ie_agrupamento_conv_mat_w, r_c07_w.nr_seq_conta_mat, r_c03_w.nr_seq_prestador_solic) INTO STRICT cd_material_conv_w, ds_material_conv_w, cd_prefixo_w, nr_seq_regra_mat_conv_w, cd_tab_item_conv_mat_w, ie_agrupamento_conv_mat_w;

				if (nr_seq_regra_mat_conv_w IS NOT NULL AND nr_seq_regra_mat_conv_w::text <> '') then
					cd_material_ops_w		:= substr(cd_prefixo_w||coalesce(cd_material_conv_w,cd_material_ops_w), 1, 20);
					ds_mat_conversao_regra_w	:= substr(coalesce(ds_material_conv_w, ds_mat_conversao_regra_w), 1, 255);

					if (coalesce(ds_mat_conversao_regra_w::text, '') = '') then
						ds_mat_conversao_regra_w := substr(pls_obter_desc_material(nr_seq_material_w), 1, 255);
					end if;

					if (coalesce(ie_agrupamento_conv_mat_w, 'N') = 'S') then
						select	max(nr_sequencia)
						into STRICT	nr_seq_fat_guia_envio_mat_w
						from	pls_fat_guia_envio_mat
						where	coalesce(nr_seq_material::text, '') = ''
						and	cd_material_ops		= cd_material_ops_w
						and	ds_mat_conversao_regra	= ds_mat_conversao_regra_w
						and	nr_seq_guia_envio	= nr_seq_fat_guia_envio_w;
					end if;

					nr_seq_material_w := null;
				end if;

				-- So dar insert direto se nao for de regra de conversao
				if (coalesce(nr_seq_fat_guia_envio_mat_w::text, '') = '') then
					insert	into pls_fat_guia_envio_mat(	nr_sequencia,				dt_atualizacao,			nm_usuario,
										dt_atualizacao_nrec,			nm_usuario_nrec,		nr_seq_conta_mat,
										cd_material_ops,			nr_seq_material,		dt_atendimento,
										tx_reducao_acrescimo,			qt_material,			vl_unitario,
										vl_material,				ie_tipo_despesa,		nr_seq_guia_envio,
										vl_beneficiario,			vl_beneficiario_unit,		ds_mat_conversao_regra,
										nr_seq_conta_pos_estab,			dt_inicio_atend,		cd_tipo_tabela,
										dt_fim_atend,				cd_unidade_medida,		nr_registro_anvisa,
										cd_ref_fabricante,			ds_aut_funcionamento,		nr_seq_pos_mat)
									values (	nextval('pls_fat_guia_envio_mat_seq'),	clock_timestamp(),			nm_usuario_p,
										clock_timestamp(),				nm_usuario_p,			r_c07_w.nr_seq_conta_mat,
										cd_material_ops_w,			nr_seq_material_w,		dt_atendimento_mat_w,
										tx_reducao_acrescimo_w,			r_c07_w.qt_material,		r_c07_w.vl_unitario_mat,
										r_c07_w.vl_material,			r_c07_w.ie_tipo_despesa,	nr_seq_fat_guia_envio_w,
										vl_beneficiario_w,			vl_benef_unit_w,		ds_mat_conversao_regra_w,
										r_c07_w.nr_seq_conta_pos,		r_c07_w.dt_inicio_atend,	coalesce(cd_tab_item_conv_mat_w, r_c07_w.cd_tipo_tabela_mat),
										r_c07_w.dt_fim_atend,			cd_unidade_medida_w,		nr_registro_anvisa_w,
										cd_ref_fabricante_w,			r_c07_w.ds_aut_funcionamento,	r_c07_w.nr_seq_conta_pos_mat);
				else
					update	pls_fat_guia_envio_mat
					set	qt_material		= coalesce(qt_material, 0) + coalesce(r_c07_w.qt_material, 0),
						vl_unitario		= 0,
						vl_material		= coalesce(vl_material, 0) + coalesce(r_c07_w.vl_material, 0),
						vl_beneficiario		= coalesce(vl_beneficiario, 0) + coalesce(vl_beneficiario_w, 0),
						vl_beneficiario_unit	= 0
					where	nr_sequencia		= nr_seq_fat_guia_envio_mat_w;

					select	coalesce(max(qt_material), 1)
					into STRICT	qt_material_ww
					from	pls_fat_guia_envio_mat
					where	nr_sequencia = nr_seq_fat_guia_envio_mat_w;

					if (qt_material_ww = 0) then
						qt_material_ww := 1;
					end if;

					if (qt_material_ww > 0) then
						update	pls_fat_guia_envio_mat
						set	vl_unitario		= coalesce(vl_material, 0) / qt_material_ww,
							vl_beneficiario_unit	= coalesce(vl_beneficiario, 0) / qt_material_ww
						where	nr_sequencia		= nr_seq_fat_guia_envio_mat_w;
					end if;
				end if;

				nr_seq_fat_guia_envio_mat_w := null;

				SELECT * FROM pls_obter_regra_adic_xml_fat(r_c01_w.nr_seq_fatura, null, null, r_c07_w.nr_seq_conta_mat, nr_seq_regra_adic_w, ie_valor_filme_w) INTO STRICT nr_seq_regra_adic_w, ie_valor_filme_w;

				-- Gerar os itens adicionais para o XML de faturamento
				if (nr_seq_regra_adic_w IS NOT NULL AND nr_seq_regra_adic_w::text <> '') then
					ds_item_w := substr(pls_obter_desc_material(nr_seq_material_w), 1, 255);

					for r_c08_w in c08( nr_seq_regra_adic_w ) loop
						select	max(nr_sequencia)
						into STRICT	nr_seq_fat_guia_envio_mat_w
						from	pls_fat_guia_envio_mat
						where	cd_material_ops = r_c08_w.cd_mat_item
						and	nr_seq_guia_envio = nr_seq_fat_guia_envio_w;

						if (r_c08_w.ie_agrupamento = 'N') or (coalesce(nr_seq_fat_guia_envio_mat_w::text, '') = '') then
							insert into pls_fat_guia_envio_mat(	nr_sequencia,				dt_atualizacao,			nm_usuario,
												dt_atualizacao_nrec,			nm_usuario_nrec,		nr_seq_conta_mat,
												cd_material_ops,			nr_seq_material,		ds_mat_conversao_regra,
												dt_atendimento, 			tx_reducao_acrescimo,		qt_material,
												vl_unitario,				vl_material,			ie_tipo_despesa,
												nr_seq_guia_envio,			vl_beneficiario,		vl_beneficiario_unit,
												nr_seq_conta_pos_estab,			nr_seq_pos_mat,			cd_tipo_tabela)
											values (	nextval('pls_fat_guia_envio_mat_seq'),	clock_timestamp(),			nm_usuario_p,
												clock_timestamp(),				nm_usuario_p,			r_c07_w.nr_seq_conta_mat,
												r_c08_w.cd_mat_item,			r_c08_w.nr_seq_material,	coalesce(r_c08_w.ds_mat_conversao_regra, ds_item_w),
												dt_atendimento_mat_w,			tx_reducao_acrescimo_w,		r_c07_w.qt_material,
												r_c07_w.vl_unitario_mat,		r_c07_w.vl_material,		r_c07_w.ie_tipo_despesa,
												nr_seq_fat_guia_envio_w,		vl_beneficiario_w,		vl_benef_unit_w,
												r_c07_w.nr_seq_conta_pos,		r_c07_w.nr_seq_conta_pos_mat,	coalesce(r_c08_w.cd_tipo_tabela_mat, r_c07_w.cd_tipo_tabela_mat));

						elsif (r_c08_w.ie_agrupamento = 'S') and (nr_seq_fat_guia_envio_mat_w IS NOT NULL AND nr_seq_fat_guia_envio_mat_w::text <> '') then
							update	pls_fat_guia_envio_mat
							set	qt_material		= coalesce(qt_material, 0) + coalesce(r_c07_w.qt_material, 0),
								vl_unitario		= coalesce(vl_unitario, 0) + coalesce(r_c07_w.vl_unitario_mat, 0),
								vl_material		= coalesce(vl_material, 0) + coalesce(r_c07_w.vl_material, 0),
								vl_beneficiario		= coalesce(vl_beneficiario, 0) + coalesce(vl_beneficiario_w, 0),
								vl_beneficiario_unit	= coalesce(vl_beneficiario_unit, 0) + coalesce(vl_benef_unit_w, 0)
							where	nr_sequencia		= nr_seq_fat_guia_envio_mat_w;
						end if;
					end loop;
				end if;
			end loop;
		end loop;
	end loop;

	if (pls_obter_agrup_guia_xml(r_c01_w.nr_seq_pagador, cd_estabelecimento_p) = 'S') then
		-- Agrupar guias com o mesmo cd_guia_referencia
		CALL pls_agrupar_guia_fat_xml(r_c01_w.nr_seq_fatura, nm_usuario_p, 'N', qt_max_reg_w);
	end if;

	for r_c09_w in c09( nr_seq_lote_fat_guia_envio_w ) loop
		select	count(1)
		into STRICT	qt_guias_geradas_w
		from	pls_fatura_guia_envio
		where	nr_seq_guia_arquivo = r_c09_w.nr_seq_fat_guia_arq;

		update	pls_fat_guia_arquivo
		set	qt_contas	= qt_guias_geradas_w
		where	nr_sequencia	= r_c09_w.nr_seq_fat_guia_arq;

		-- Se nao tem conta, exclui o registro de arquivo
		if (qt_guias_geradas_w = 0) then
			delete	FROM pls_fat_guia_arquivo
			where	nr_sequencia = r_c09_w.nr_seq_fat_guia_arq;
		end if;
	end loop;

	update	pls_fatura
	set	dt_geracao_xml	= clock_timestamp()
	where	nr_sequencia	= r_c01_w.nr_seq_fatura;
end loop;

-- Consistir XML
CALL pls_validar_inf_ptu_xml(nr_seq_fatura_p, cd_estabelecimento_p, nm_usuario_p,'TISS');

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lote_guia_fat_xml ( nr_seq_lote_p pls_lote_faturamento.nr_sequencia%type, nr_seq_fatura_p pls_fatura.nr_sequencia%type, nm_arquivo_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

