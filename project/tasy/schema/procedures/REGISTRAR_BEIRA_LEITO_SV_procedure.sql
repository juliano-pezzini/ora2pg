-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE registrar_beira_leito_sv ( ie_novo_p text, nm_tabela_p text, nr_sequencia_p bigint, nr_atendimento_p bigint, nm_usuario_p text, ie_liberar_sv_p text, nm_atributo_p text default '', ds_valor_atributo_p text default '') AS $body$
DECLARE


ie_tipo_atributo_w		varchar(10);
ds_comando_w		varchar(2000);
ds_atrib_insert_w		varchar(2000);
nr_regras_atendidas_w	varchar(2000);
										

BEGIN

	if (nm_tabela_p = 'ATENDIMENTO_SINAL_VITAL') then	
		
		if (ie_novo_p = 'S') then
			insert into atendimento_sinal_vital(
				nr_sequencia,
				nr_atendimento,
				dt_sinal_vital,
				dt_referencia,
				dt_atualizacao,
				dt_atualizacao_nrec,
				nm_usuario,
				nm_usuario_nrec,
				ie_pressao,
				cd_pessoa_fisica,
				dt_liberacao,
				ie_situacao)
			values (
				nr_sequencia_p,
				nr_atendimento_p,
				clock_timestamp(),
				clock_timestamp(),
				clock_timestamp(),
				clock_timestamp(),
				nm_usuario_p,
				nm_usuario_p,
				'D',
				Obter_Dados_Usuario_Opcao(nm_usuario_p,'C'),
				CASE WHEN ie_liberar_sv_p='S' THEN clock_timestamp()  ELSE null END ,
				'A');
			commit;
		
		elsif (ie_novo_p = 'N') then
		
			select	max(ie_tipo_atributo)
			into STRICT	ie_tipo_atributo_w
			from	tabela_atributo
			where	nm_tabela	=	nm_tabela_p
			and	nm_atributo	=	nm_atributo_p;
		
			if (ie_tipo_atributo_w = 'NUMBER') then
				ds_atrib_insert_w := replace(ds_valor_atributo_p,'.',',');
			else
				ds_atrib_insert_w := ds_valor_atributo_p;
			end if;
		
			if (ie_tipo_atributo_w = 'DATE') then			
				ds_comando_w := ' update atendimento_sinal_vital set ' || nm_atributo_p || ' = to_date(''' || ds_atrib_insert_w || ''', ''dd/mm/yyyy hh24:mi:ss'') where nr_sequencia = :nr_sequencia ';				
				CALL Exec_sql_Dinamico_bv(nm_usuario_p, ds_comando_w,'nr_sequencia='||to_char(nr_sequencia_p));					
			else
				ds_comando_w := ' update atendimento_sinal_vital set ' || nm_atributo_p || ' = :ds_atrib_insert_w where nr_sequencia = :nr_sequencia ';
				CALL Exec_sql_Dinamico_bv(nm_usuario_p, ds_comando_w,'nr_sequencia='||to_char(nr_sequencia_p)||';ds_atrib_insert_w=' || ds_atrib_insert_w);
			end if;
		
			if (ie_liberar_sv_p = 'S') then
				ds_comando_w := ' update atendimento_sinal_vital set dt_liberacao = sysdate where nr_sequencia = :nr_sequencia ';
				CALL Exec_sql_Dinamico_bv(nm_usuario_p, ds_comando_w,'nr_sequencia='||to_char(nr_sequencia_p));
			end if;
			
			ds_comando_w := ' update atendimento_sinal_vital set dt_atualizacao = sysdate where nr_sequencia = :nr_sequencia ';
			CALL Exec_sql_Dinamico_bv(nm_usuario_p, ds_comando_w,'nr_sequencia='||to_char(nr_sequencia_p));
			
			ds_comando_w := ' update atendimento_sinal_vital set nm_usuario = :nm_usuario where nr_sequencia = :nr_sequencia ';
			CALL Exec_sql_Dinamico_bv(nm_usuario_p, ds_comando_w,'nr_sequencia='||to_char(nr_sequencia_p)||';nm_usuario=' || nm_usuario_p);			
			
			commit;
					
			if (nr_sequencia_p > 0) then
				update	atendimento_sinal_vital
				set	qt_pam = ((qt_pa_sistolica + (qt_pa_diastolica * 2)) / 3)
				where	nr_sequencia = nr_sequencia_p
				and	coalesce(qt_pam::text, '') = ''
				and	(qt_pa_sistolica IS NOT NULL AND qt_pa_sistolica::text <> '')
				and	(qt_pa_diastolica IS NOT NULL AND qt_pa_diastolica::text <> '');
				commit;
			end if;
		
			if (coalesce(nr_sequencia_p, 0) > 0) and (coalesce(nr_atendimento_p, 0) > 0) and (coalesce(ie_liberar_sv_p, 'N') = 'S') then
				begin
					nr_regras_atendidas_w := GQA_Liberacao_Sinal_Vital(nr_sequencia_p, nm_usuario_p);
					CALL gera_protocolo_assistencial(nr_atendimento_p, nm_usuario_p);
				exception
				when others then
					null;
				end;
			end if;
		
		end if;
	
	elsif (nm_tabela_p = 'ATENDIMENTO_MONIT_RESP') then
	
		if (ie_novo_p = 'S') then
			insert into atendimento_monit_resp(
				nr_sequencia,
				nr_atendimento,
				dt_referencia,
				dt_monitorizacao,
				dt_atualizacao,
				dt_atualizacao_nrec,
				nm_usuario,
				nm_usuario_nrec,
				cd_pessoa_fisica,
				dt_liberacao,
				ie_situacao)
			values (
				nr_sequencia_p,
				nr_atendimento_p,
				clock_timestamp(),
				clock_timestamp(),
				clock_timestamp(),
				clock_timestamp(),
				nm_usuario_p,
				nm_usuario_p,
				Obter_Dados_Usuario_Opcao(nm_usuario_p,'C'),
				CASE WHEN ie_liberar_sv_p='S' THEN clock_timestamp()  ELSE null END ,
				'A');
			commit;
			
		elsif (ie_novo_p = 'N') then

			select	max(ie_tipo_atributo)
			into STRICT	ie_tipo_atributo_w
			from	tabela_atributo
			where	nm_tabela	=	nm_tabela_p
			and	nm_atributo	=	nm_atributo_p;		
			
			if (ie_tipo_atributo_w = 'NUMBER') then
				ds_atrib_insert_w := replace(ds_valor_atributo_p,'.',',');
			else
				ds_atrib_insert_w := ds_valor_atributo_p;
			end if;
	 
			if (ie_tipo_atributo_w = 'DATE') then
				ds_comando_w := ' update atendimento_monit_resp set ' || nm_atributo_p || ' = to_date(''' || ds_atrib_insert_w || ''', ''dd/mm/yyyy hh24:mi:ss'') where nr_sequencia = :nr_sequencia ';
				CALL Exec_sql_Dinamico_bv(nm_usuario_p, ds_comando_w,'nr_sequencia='||to_char(nr_sequencia_p));
			else
				ds_comando_w := ' update atendimento_monit_resp set ' || nm_atributo_p || ' = :ds_atrib_insert_w where nr_sequencia = :nr_sequencia ';
				CALL Exec_sql_Dinamico_bv(nm_usuario_p, ds_comando_w,'nr_sequencia='||to_char(nr_sequencia_p)||';ds_atrib_insert_w=' || ds_atrib_insert_w);
			end if;
	
			if (ie_liberar_sv_p = 'S') then
				ds_comando_w := ' update atendimento_monit_resp set dt_liberacao = sysdate where nr_sequencia = :nr_sequencia ';
				CALL Exec_sql_Dinamico_bv(nm_usuario_p, ds_comando_w,'nr_sequencia='||to_char(nr_sequencia_p));
			end if;
			
			ds_comando_w := ' update atendimento_monit_resp set dt_atualizacao = sysdate where nr_sequencia = :nr_sequencia ';
			CALL Exec_sql_Dinamico_bv(nm_usuario_p, ds_comando_w,'nr_sequencia='||to_char(nr_sequencia_p));
			
			ds_comando_w := ' update atendimento_monit_resp set nm_usuario = :nm_usuario where nr_sequencia = :nr_sequencia ';
			CALL Exec_sql_Dinamico_bv(nm_usuario_p, ds_comando_w,'nr_sequencia='||to_char(nr_sequencia_p)||';nm_usuario=' || nm_usuario_p);
			
			commit;
			
		end if;
	
	end if;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE registrar_beira_leito_sv ( ie_novo_p text, nm_tabela_p text, nr_sequencia_p bigint, nr_atendimento_p bigint, nm_usuario_p text, ie_liberar_sv_p text, nm_atributo_p text default '', ds_valor_atributo_p text default '') FROM PUBLIC;

