-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_consiste_procpac ( nr_interno_conta_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, ie_tipo_consiste_p bigint, ds_erro_p INOUT text, nr_seq_proced_p bigint) AS $body$
DECLARE



/* IE_TIPO_CONSISTE_P
	- 1 Fechamento da conta
	- 2 Saída do campo
*/
ds_detalhe_w		varchar(255)	:= '';
cd_estabelecimento_w	smallint;
ds_erro_w		varchar(255)	:= '';
qt_idade_pac_w		real	:= 0;
qt_idade_minima_w		real	:= 0;
ds_idade_minima_w		varchar(15)	:= '';
qt_idade_maxima_w	real	:= 0;
ds_idade_maxima_w	varchar(15)	:= '';
ie_sexo_pac_w		varchar(1)	:= 'I';
ie_sexo_proc_w		varchar(1)	:= 'I';
ie_codigo_autorizacao_w	smallint;
ie_liberado_mi_w		varchar(1)	:= 'S';
ie_liberado_ma_w		varchar(1)	:= 'S';
ie_tipo_atendimento_w	smallint;
ie_regra_tipo_atend_w	varchar(1):= 'A';
nr_aih_w			bigint;
dt_nascimento_w		timestamp;
dt_procedimento_w	timestamp;
qt_dados_aih_conta_w	bigint;
dt_inicial_w		sus_aih_unif.dt_inicial%type;
dt_periodo_inicial_w	conta_paciente.dt_periodo_inicial%type;
qt_proc_cons_idade_w	bigint := 0;


BEGIN

/* Obter dados da conta e do atendimento */

begin
select	a.cd_estabelecimento,
	b.ie_tipo_atendimento,
	a.dt_periodo_inicial
into STRICT	cd_estabelecimento_w,
	ie_tipo_atendimento_w,
	dt_periodo_inicial_w
from	atendimento_paciente	b,
	conta_paciente		a
where	a.nr_interno_conta	= nr_interno_conta_p
and	a.nr_atendimento	= b.nr_atendimento;
exception
	when others then
		cd_estabelecimento_w	:= 0;
end;

begin
select	dt_procedimento
into STRICT	dt_procedimento_w
from	procedimento_paciente
where	nr_sequencia = nr_seq_proced_p;
exception
when others then
	dt_procedimento_w := dt_periodo_inicial_w;
end;

/*Obter parâmetros de Faturamento*/

select	coalesce(max(ie_regra_tipo_atend),'A')
into STRICT	ie_regra_tipo_atend_w
from	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_w;

if (coalesce(ie_regra_tipo_atend_w,'A') = 'C') then
	begin
	select	coalesce(max(ie_tipo_atend_conta),ie_tipo_atendimento_w)
	into STRICT	ie_tipo_atendimento_w
	from 	conta_paciente
	where 	nr_interno_conta = nr_interno_conta_p;
	exception
		when others then
		ie_tipo_atendimento_w:= ie_tipo_atendimento_w;
	end;
end if;

if (ie_tipo_atendimento_w = 1) then
	begin
	
	/* Código solicitação */

	begin
	select	coalesce(ie_codigo_autorizacao,0),
		coalesce(nr_aih,0),
		coalesce(dt_inicial,dt_periodo_inicial_w)
	into STRICT	ie_codigo_autorizacao_w,
		nr_aih_w,
		dt_inicial_w
	from	sus_aih_unif
	where	nr_interno_conta	= nr_interno_conta_p;
	exception
		when others then
		ie_codigo_autorizacao_w	:= 0;
		nr_aih_w 		:= 0;
		dt_inicial_w		:= dt_periodo_inicial_w;
	end;
	
	dt_procedimento_w := dt_inicial_w;

	end;
end if;

/* Obter dados do paciente */

select	a.ie_sexo,
	a.dt_nascimento
into STRICT	ie_sexo_pac_w,
	dt_nascimento_w
from	pessoa_fisica		a
where	a.cd_pessoa_fisica	= cd_pessoa_fisica_p;

begin
qt_idade_pac_w	:= sus_obter_idade_pac_proc(dt_procedimento_w,dt_nascimento_w);	
exception
	when others then
		qt_idade_pac_w	:= 0;
end;

/* Obter dados do procedimento */

begin
select	substr(sus_converte_idade_anos(b.qt_idade_minima,'C'),1,10),
	substr(sus_converte_idade_anos(b.qt_idade_minima,'D'),1,15),
	substr(sus_converte_idade_anos(b.qt_idade_maxima,'C'),1,10),
	substr(sus_converte_idade_anos(b.qt_idade_maxima,'D'),1,15),
	b.ie_sexo
into STRICT	qt_idade_minima_w,
	ds_idade_minima_w,
	qt_idade_maxima_w,
	ds_idade_maxima_w,
	ie_sexo_proc_w
from	sus_procedimento	b,
	procedimento		a
where	a.cd_procedimento	= cd_procedimento_p
and	a.ie_origem_proced	= ie_origem_proced_p
and	a.cd_procedimento	= b.cd_procedimento
and	a.ie_origem_proced	= b.ie_origem_proced;
exception
	when others then
		qt_idade_minima_w	:= 0;
		qt_idade_maxima_w	:= 0;
end;

if (ie_codigo_autorizacao_w = 0) then
	begin
	
	select	count(1)
	into STRICT	qt_dados_aih_conta_w
	from	sus_dados_aih_conta
	where	nr_interno_conta = nr_interno_conta_p  LIMIT 1;
	
	if (qt_dados_aih_conta_w > 0) then
		begin
		
		select	coalesce(ie_codigo_autorizacao,0)
		into STRICT	ie_codigo_autorizacao_w
		from	sus_dados_aih_conta
		where	nr_interno_conta = nr_interno_conta_p;
		
		end;
	end if;
	end;
end if;
	
if (qt_idade_pac_w < qt_idade_minima_w) then
	if (ie_tipo_atendimento_w = 1) and (coalesce(sus_verificar_codigo_autor(coalesce(ie_codigo_autorizacao_w,0),'IME'),'N') = 'S') then
		begin
		
		select	count(1)
		into STRICT	qt_proc_cons_idade_w
		from	sus_proc_libera_idade
		where	cd_procedimento		= cd_procedimento_p
		and	ie_origem_proced	= ie_origem_proced_p
		and	coalesce(ie_situacao,'I') = 'A'  LIMIT 1;
		
		if (qt_proc_cons_idade_w = 0) then
			ie_liberado_mi_w	:= 'S';
		else
			ie_liberado_mi_w	:= 'N';		
		end if;
		
		end;
	else
		ie_liberado_mi_w	:= 'N';
	end if;
end if;

if (qt_idade_pac_w > qt_idade_maxima_w) then
	if (ie_tipo_atendimento_w = 1) and (coalesce(sus_verificar_codigo_autor(coalesce(ie_codigo_autorizacao_w,0),'IMA'),'N') = 'S') then
		begin
		
		select	count(1)
		into STRICT	qt_proc_cons_idade_w
		from	sus_proc_libera_idade
		where	cd_procedimento		= cd_procedimento_p
		and	ie_origem_proced	= ie_origem_proced_p
		and	coalesce(ie_situacao,'I') = 'A'  LIMIT 1;
		
		if (qt_proc_cons_idade_w = 0) then
			ie_liberado_ma_w	:= 'S';		
		else
			ie_liberado_ma_w	:= 'N';					
		end if;	
		
		end;
	else
		ie_liberado_ma_w	:= 'N';
	end if;
end if;
/* 11 - Idade incompatível com o procedimento */
	
if (sus_obter_inco_ativa_proc(11,cd_procedimento_p)) and (qt_idade_pac_w > 0) and
	((qt_idade_maxima_w > 0 AND ie_liberado_ma_w = 'N') or
	(qt_idade_minima_w > 0 AND ie_liberado_mi_w = 'N')) and (sus_validar_regra(4, cd_procedimento_p, ie_origem_proced_p,dt_inicial_w) = 0) then
	
	if (ie_tipo_consiste_p = 1) then
		ds_detalhe_w	:=  WHEB_MENSAGEM_PCK.get_texto(279031)||cd_procedimento_p|| WHEB_MENSAGEM_PCK.get_texto(279032)||REPLACE(REPLACE(REPLACE(Obter_Idade(dt_nascimento_w,dt_procedimento_w,'S'),'a', WHEB_MENSAGEM_PCK.get_texto(279033)),'m', WHEB_MENSAGEM_PCK.get_texto(279034)),'d', WHEB_MENSAGEM_PCK.get_texto(279036))|| WHEB_MENSAGEM_PCK.get_texto(279037)||
				ds_idade_minima_w|| WHEB_MENSAGEM_PCK.get_texto(279038)||ds_idade_maxima_w|| WHEB_MENSAGEM_PCK.get_texto(279039)||ie_origem_proced_p;
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 11, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	elsif (ie_tipo_consiste_p = 2) then
		ds_erro_w	:= ds_erro_w || '11, ';	
	end if;
end if;
/* 12 - Sexo incompatível com o procedimento */

if (sus_obter_inco_ativa_proc(12,cd_procedimento_p)) and (ie_sexo_pac_w IS NOT NULL AND ie_sexo_pac_w::text <> '') and (ie_sexo_proc_w IS NOT NULL AND ie_sexo_proc_w::text <> '') and (ie_sexo_proc_w <> 'I') and (ie_sexo_pac_w <> ie_sexo_proc_w) then
	if (ie_tipo_consiste_p = 1) then
		ds_detalhe_w	:=  WHEB_MENSAGEM_PCK.get_texto(279031) || cd_procedimento_p ||  WHEB_MENSAGEM_PCK.get_texto(279040) || ie_sexo_pac_w ||  WHEB_MENSAGEM_PCK.get_texto(279041) || ie_sexo_proc_w;
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 12, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	elsif (ie_tipo_consiste_p = 2) then
		ds_erro_w	:= ds_erro_w || '12, ';	
	end if;
end if;
/* 274 - Idade incompatível com procedimento de OPME */

if (sus_obter_inco_ativa_proc(274,cd_procedimento_p)) and (qt_idade_pac_w > 0) and
	((qt_idade_maxima_w > 0 AND ie_liberado_ma_w = 'N') or
	(qt_idade_minima_w > 0 AND ie_liberado_mi_w = 'N')) and (sus_validar_regra(4, cd_procedimento_p, ie_origem_proced_p,dt_inicial_w) > 0) then
	
	if (ie_tipo_consiste_p = 1) then
		ds_detalhe_w	:=  WHEB_MENSAGEM_PCK.get_texto(279031)||cd_procedimento_p|| WHEB_MENSAGEM_PCK.get_texto(279032)||REPLACE(REPLACE(REPLACE(Obter_Idade(dt_nascimento_w,dt_procedimento_w,'S'),'a', WHEB_MENSAGEM_PCK.get_texto(279033)),'m', WHEB_MENSAGEM_PCK.get_texto(279034)),'d', WHEB_MENSAGEM_PCK.get_texto(279036))|| WHEB_MENSAGEM_PCK.get_texto(279037)||
				ds_idade_minima_w|| WHEB_MENSAGEM_PCK.get_texto(279038)||ds_idade_maxima_w|| WHEB_MENSAGEM_PCK.get_texto(279039)||ie_origem_proced_p;
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 274, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	elsif (ie_tipo_consiste_p = 2) then
		ds_erro_w	:= ds_erro_w || '274, ';	
	end if;
end if;

ds_erro_p	:= ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_consiste_procpac ( nr_interno_conta_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, ie_tipo_consiste_p bigint, ds_erro_p INOUT text, nr_seq_proced_p bigint) FROM PUBLIC;

