-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE generate_documentation_log (dt_version_desenv_p timestamp, dt_version_vv_p timestamp, ds_version_p text) AS $body$
DECLARE


nr_seq_log_w	bigint;

--em comum
dt_aprovacao_w	        	timestamp;
dt_atualizacao_w	        timestamp;
dt_atualizacao_nrec_w	    timestamp;
dt_liberacao_vv_w           timestamp;
nm_usuario_w	            varchar(15);
nm_usuario_nrec_w         	varchar(15);
ds_descricao_w            	varchar(4000);
ie_situacao_w	            varchar(1);
cd_code_w					varchar(255);
ds_title_w                  reg_customer_requirement.ds_title%type;
nr_seq_apresentacao_w     	double precision;
nr_seq_estagio_w          	bigint;
nr_seq_area_customer_w      bigint;
nr_seq_feature_w		    bigint;
ds_description_w            text;

--Desenv

--reg_area
ds_area_w					reg_area_customer.ds_area%type;			
ds_obervacao_w            	reg_area_customer.ds_obervacao%type;
nr_seq_intencao_uso_w     	reg_area_customer.nr_seq_intencao_uso%type;

--reg_customer
cd_versao_w                 reg_customer_requirement.cd_versao%type;
ds_descricao_cr_w           reg_customer_requirement.ds_descricao_cr%type;
ds_rationale_w              reg_customer_requirement.ds_rationale%type;
nm_curto_w                  reg_customer_requirement.nm_curto%type;
nm_liberacao_vv_w           reg_customer_requirement.nm_liberacao_vv%type;
nr_seq_features_w           reg_customer_requirement.nr_seq_features%type;
nr_seq_cr_w              	reg_customer_requirement.nr_sequencia%type;

--reg_features
ds_feature_w				reg_features_customer.ds_feature%type;
ds_overall_desc_rel_w       reg_features_customer.ds_overall_desc_rel%type;
ds_overall_description_w    reg_features_customer.ds_overall_description%type;
nr_seq_grupo_w              reg_features_customer.nr_seq_grupo%type;

--reg_funcao
cd_funcao_w					reg_funcao_pr.cd_funcao%type;
nr_seq_product_req_w        reg_funcao_pr.nr_seq_product_req%type;
nr_seq_fun_w                reg_funcao_pr.nr_sequencia%type;

--reg_intencao
ds_briefing_w				reg_intencao_uso.ds_briefing%type;
ds_intencao_uso_w           reg_intencao_uso.ds_intencao_uso%type;
ds_obs_briefing_w           reg_intencao_uso.ds_obs_briefing%type;
nr_seq_int_use_w            reg_intencao_uso.nr_sequencia%type;

--reg_product
ie_tipo_objeto_w				reg_product_dic.ie_tipo_objeto%type;
nr_seq_objeto_w                 reg_product_dic.nr_seq_objeto%type;
nr_seq_product_requirement_w    reg_product_dic.nr_seq_product_requirement%type;
nr_seq_pr_his_w                 reg_product_dic.nr_sequencia%type;

--reg_product_req
ds_description_pr_w				reg_product_requirement.ds_description_pr%type;
dt_liberacao_dev_w				reg_product_requirement.dt_liberacao_dev%type;
dt_liberou_ger_vv_w             reg_product_requirement.dt_liberou_ger_vv%type;
nm_analista_liberou_w           reg_product_requirement.nm_analista_liberou%type;
nm_liberou_ger_vv_w             reg_product_requirement.nm_liberou_ger_vv%type;
nm_liberou_vv_w                 reg_product_requirement.nm_liberou_vv%type;
nm_usuario_aprovacao_w          reg_product_requirement.nm_usuario_aprovacao%type;
nr_customer_requirement_w       reg_product_requirement.nr_customer_requirement%type;
nr_seq_idioma_w                 reg_product_requirement.nr_seq_idioma%type;
nr_seq_product_sup_w            reg_product_requirement.nr_seq_product_sup%type;
nr_seq_pr_w                     reg_product_requirement.nr_sequencia%type;

--VV

--reg_caso
ds_pre_condicao_w				reg_caso_teste.ds_pre_condicao%type;
ie_tipo_documento_w             reg_caso_teste.ie_tipo_documento%type;
nr_seq_customer_w               reg_caso_teste.nr_seq_customer%type;
nr_seq_product_w                reg_caso_teste.nr_seq_product%type;
nr_seq_usability_principle_w    reg_caso_teste.nr_seq_usability_principle%type;
nr_tempo_estimado_w             reg_caso_teste.nr_tempo_estimado%type;
nr_seq_tc_w                     reg_caso_teste.nr_sequencia%type;

--reg_acao
ds_passo_w						reg_acao_teste.ds_passo%type;
ds_resultado_w                  reg_acao_teste.ds_resultado%type;
nr_ordenacao_w                  reg_acao_teste.nr_ordenacao%type;
nr_seq_caso_teste_w             reg_acao_teste.nr_seq_caso_teste%type;
nr_seq_tc_his_w					reg_acao_teste.nr_sequencia%type;

--Desenv
reg_area CURSOR FOR
SELECT 	ds_area,
		ds_descricao,
		ds_obervacao,
		dt_aprovacao,
		dt_atualizacao,
		dt_atualizacao_nrec,
		ie_situacao,
		nm_usuario,
		nm_usuario_nrec,
		nr_seq_apresentacao,
		nr_seq_estagio,
		nr_seq_intencao_uso,
		nr_sequencia
from 	reg_area_customer;

reg_customer CURSOR FOR
SELECT 	cd_code,
		ds_descricao_cr,		
		ds_rationale,
		ds_title,
		dt_aprovacao,
		dt_atualizacao,
		dt_atualizacao_nrec,
		dt_liberacao_vv,
		ie_situacao,
		nm_curto,
		nm_liberacao_vv,
		nm_usuario,
		nm_usuario_nrec,
		nr_seq_apresentacao,
		nr_seq_estagio,
		nr_seq_features,
		nr_sequencia
from 	reg_customer_requirement;

reg_features CURSOR FOR
SELECT 	ds_feature,
		ds_overall_desc_rel,
		ds_overall_description,
		dt_aprovacao,
		dt_atualizacao,
		dt_atualizacao_nrec,
		ie_situacao,
		nm_usuario,
		nm_usuario_nrec,
		nr_seq_apresentacao,
		nr_seq_area_customer,
		nr_seq_estagio,
		nr_seq_grupo,
		nr_sequencia
from 	reg_features_customer;

reg_funcao CURSOR FOR
SELECT 	cd_funcao,
		dt_atualizacao,
		dt_atualizacao_nrec,
		nm_usuario,
		nm_usuario_nrec,
		nr_seq_product_req,
		nr_sequencia
from 	reg_funcao_pr;

reg_intencao CURSOR FOR
SELECT 	ds_briefing,
		ds_descricao,
		ds_intencao_uso,
		ds_obs_briefing,
		dt_aprovacao,
		dt_atualizacao,
		dt_atualizacao_nrec,
		ie_situacao,
		nm_usuario,
		nm_usuario_nrec,
		nr_seq_estagio,
		nr_sequencia
from 	reg_intencao_uso;

reg_product CURSOR FOR
SELECT 	dt_atualizacao,
		ie_tipo_objeto,
		nm_usuario,
		nr_seq_objeto,
		nr_seq_product_requirement,
		nr_sequencia
from 	reg_product_dic;

reg_product_req CURSOR FOR
SELECT 	cd_code,
		ds_description,
		ds_description_pr,
		ds_title,
		dt_aprovacao,
		dt_atualizacao,
		dt_atualizacao_nrec,
		dt_liberacao_dev,
		dt_liberacao_vv,
		dt_liberou_ger_vv,
		ie_situacao,
		nm_analista_liberou,
		nm_liberou_ger_vv,
		nm_liberou_vv,
		nm_usuario,
		nm_usuario_aprovacao,
		nm_usuario_nrec,
		nr_customer_requirement,
		nr_seq_apresentacao,
		nr_seq_idioma,
		nr_seq_product_sup,
		nr_sequencia
from 	reg_product_requirement;

--VV
reg_caso CURSOR FOR
SELECT 	ds_descricao,
		ds_pre_condicao,
		dt_atualizacao,
		dt_atualizacao_nrec,
		dt_liberacao_vv,
		ie_tipo_documento,
		nm_usuario,
		nm_usuario_nrec,
		nr_seq_customer,
		nr_seq_estagio,
		nr_seq_feature,
		nr_seq_product,
		nr_seq_usability_principle,
		nr_tempo_estimado,
		nr_sequencia
from 	reg_caso_teste;

reg_acao CURSOR FOR
SELECT 	ds_passo,
		ds_resultado,
		dt_atualizacao,
		dt_atualizacao_nrec,		
		nm_usuario,
		nm_usuario_nrec,
		nr_ordenacao,
		nr_seq_caso_teste,
		nr_sequencia
from 	reg_acao_teste;


BEGIN

if ((dt_version_desenv_p IS NOT NULL AND dt_version_desenv_p::text <> '') and
	trunc(dt_version_desenv_p) = trunc(clock_timestamp())) then
	
		--REG_AREA_CUSTOMER
		open reg_area;
		loop
		fetch reg_area into				
			ds_area_w,
			ds_descricao_w,
			ds_obervacao_w,
			dt_aprovacao_w,
			dt_atualizacao_w,
			dt_atualizacao_nrec_w,
			ie_situacao_w,
			nm_usuario_w,
			nm_usuario_nrec_w,
			nr_seq_apresentacao_w,
			nr_seq_estagio_w,
			nr_seq_intencao_uso_w,
			nr_seq_area_customer_w;
		EXIT WHEN NOT FOUND; /* apply on reg_area */
			--select	reg_area_history_seq.nextval

			--into	nr_seq_log_w

			--from	dual;
			
			select 	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_seq_log_w
			from	reg_area_history;
			
			insert into reg_area_history(nr_sequencia,
										 cd_versao,
										 ds_area, 
										 ds_descricao, 
										 ds_obervacao, 
										 dt_aprovacao, 
										 dt_atualizacao, 
										 dt_atualizacao_nrec, 
										 ie_situacao, 
										 nm_usuario, 
										 nm_usuario_nrec, 
										 nr_seq_apresentacao, 
										 nr_seq_area_customer, 
										 nr_seq_estagio, 
										 nr_seq_intencao_uso)
								 values (nr_seq_log_w,
										 ds_version_p,
										 ds_area_w,
										 ds_descricao_w,
										 ds_obervacao_w, 
										 dt_aprovacao_w, 
										 dt_atualizacao_w, 
										 dt_atualizacao_nrec_w, 
										 ie_situacao_w,
										 nm_usuario_w,
										 nm_usuario_nrec_w,
										 nr_seq_apresentacao_w,
										 nr_seq_area_customer_w,
										 nr_seq_estagio_w,
										 nr_seq_intencao_uso_w);
							
		end loop;
		close reg_area;

		commit;
		
		--REG_CUSTOMER_REQUIREMENT
		open reg_customer;
		loop
		fetch reg_customer into				
			cd_code_w,
			ds_descricao_cr_w,
			ds_rationale_w,
			ds_title_w,
			dt_aprovacao_w,
			dt_atualizacao_w,
			dt_atualizacao_nrec_w,
			dt_liberacao_vv_w,
			ie_situacao_w,
			nm_curto_w,
			nm_liberacao_vv_w,
			nm_usuario_w,
			nm_usuario_nrec_w,
			nr_seq_apresentacao_w,			
			nr_seq_estagio_w,
			nr_seq_features_w,
			nr_seq_cr_w;
		EXIT WHEN NOT FOUND; /* apply on reg_customer */
			--select	reg_cr_history_seq.nextval

			--into	nr_seq_log_w

			--from	dual;
			
			select 	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_seq_log_w
			from	reg_cr_history;
			
			insert into reg_cr_history(	nr_sequencia,
										cd_versao,
										cd_code,										
										ds_descricao_cr,
										ds_rationale,
										ds_title,
										dt_aprovacao,
										dt_atualizacao,
										dt_atualizacao_nrec,
										dt_liberacao_vv,
										ie_situacao,
										nm_curto,
										nm_liberacao_vv,
										nm_usuario,
										nm_usuario_nrec,
										nr_seq_apresentacao,
										nr_seq_cr,
										nr_seq_estagio,
										nr_seq_features)
							values (	nr_seq_log_w,
										ds_version_p,
										cd_code_w,										
										ds_descricao_cr_w,
										ds_rationale_w,
										ds_title_w,
										dt_aprovacao_w,
										dt_atualizacao_w,
										dt_atualizacao_nrec_w,
										dt_liberacao_vv_w,
										ie_situacao_w,
										nm_curto_w,
										nm_liberacao_vv_w,
										nm_usuario_w,
										nm_usuario_nrec_w,
										nr_seq_apresentacao_w,
										nr_seq_cr_w,
										nr_seq_estagio_w,
										nr_seq_features_w);										
					
		end loop;
		close reg_customer;	

		commit;
		
		--REG_FEATURES_CUSTOMER
		open reg_features;
		loop
		fetch reg_features into				
			ds_feature_w,
			ds_overall_desc_rel_w,
			ds_overall_description_w,
			dt_aprovacao_w,
			dt_atualizacao_w,
			dt_atualizacao_nrec_w,
			ie_situacao_w,
			nm_usuario_w,
			nm_usuario_nrec_w,
			nr_seq_apresentacao_w,
			nr_seq_area_customer_w,
			nr_seq_estagio_w,
			nr_seq_grupo_w,
			nr_seq_feature_w;
		EXIT WHEN NOT FOUND; /* apply on reg_features */
		
			--select	reg_features_history_seq.nextval

			--into	nr_seq_log_w

			--from	dual;
			
			select 	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_seq_log_w
			from	reg_features_history;
			
			insert into reg_features_history(	nr_sequencia,
												cd_versao,
												ds_feature,
												ds_overall_desc_rel,
												ds_overall_description,
												dt_aprovacao,
												dt_atualizacao,
												dt_atualizacao_nrec,
												ie_situacao,
												nm_usuario,
												nm_usuario_nrec,
												nr_seq_apresentacao,
												nr_seq_area_customer,
												nr_seq_estagio,
												nr_seq_feature,
												nr_seq_grupo)
									values (	nr_seq_log_w,
												ds_version_p,
												ds_feature_w,
												ds_overall_desc_rel_w,
												ds_overall_description_w,
												dt_aprovacao_w,
												dt_atualizacao_w,
												dt_atualizacao_nrec_w,
												ie_situacao_w,
												nm_usuario_w,
												nm_usuario_nrec_w,
												nr_seq_apresentacao_w,
												nr_seq_area_customer_w,
												nr_seq_estagio_w,
												nr_seq_feature_w,
												nr_seq_grupo_w);																									
			
		end loop;
		close reg_features;
		
		commit;
		
		--REG_FUNCAO_PR
		open reg_funcao;
		loop
		fetch reg_funcao into				
			cd_funcao_w,
			dt_atualizacao_w,
			dt_atualizacao_nrec_w,
			nm_usuario_w,
			nm_usuario_nrec_w,
			nr_seq_product_req_w,
			nr_seq_fun_w;
		EXIT WHEN NOT FOUND; /* apply on reg_funcao */
			
			--select	reg_funcao_history_seq.nextval

			--into	nr_seq_log_w

			--from	dual;
			
			select 	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_seq_log_w
			from	reg_funcao_history;
			
			insert into reg_funcao_history(	nr_sequencia,
											cd_versao,
											cd_funcao,
											dt_atualizacao,
											dt_atualizacao_nrec,
											nm_usuario,
											nm_usuario_nrec,
											nr_seq_product_req,
											nr_seq_fun)
								   values (	nr_seq_log_w,
											ds_version_p,
											cd_funcao_w,
											dt_atualizacao_w,
											dt_atualizacao_nrec_w,
											nm_usuario_w,
											nm_usuario_nrec_w,
											nr_seq_product_req_w,
											nr_seq_fun_w);																									
			
		end loop;
		close reg_funcao;
		
		commit;
		
		--REG_INTENCAO_USO
		open reg_intencao;
		loop
		fetch reg_intencao into				
			ds_briefing_w,
			ds_descricao_w,
			ds_intencao_uso_w,
			ds_obs_briefing_w,
			dt_aprovacao_w,
			dt_atualizacao_w,
			dt_atualizacao_nrec_w,
			ie_situacao_w,
			nm_usuario_w,
			nm_usuario_nrec_w,
			nr_seq_estagio_w,
			nr_seq_int_use_w;
		EXIT WHEN NOT FOUND; /* apply on reg_intencao */					
			
			--select	reg_int_use_history_seq.nextval

			--into	nr_seq_log_w

			--from	dual;
			
			select 	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_seq_log_w
			from	reg_int_use_history;
			
			insert into reg_int_use_history(nr_sequencia,
											cd_versao,
											ds_briefing,
											ds_descricao,
											ds_intencao_uso,
											ds_obs_briefing,
											dt_aprovacao,
											dt_atualizacao,
											dt_atualizacao_nrec,
											ie_situacao,
											nm_usuario,
											nm_usuario_nrec,
											nr_seq_estagio,
											nr_seq_int_use)
								   values (	nr_seq_log_w,
											ds_version_p,
											ds_briefing_w,
											ds_descricao_w,
											ds_intencao_uso_w,
											ds_obs_briefing_w,
											dt_aprovacao_w,
											dt_atualizacao_w,
											dt_atualizacao_nrec_w,
											ie_situacao_w,
											nm_usuario_w,
											nm_usuario_nrec_w,
											nr_seq_estagio_w,
											nr_seq_int_use_w);														
					
		end loop;
		close reg_intencao;
		
		commit;
		
		--REG_PRODUCT_DIC
		open reg_product;
		loop
		fetch reg_product into				
			dt_atualizacao_w,
			ie_tipo_objeto_w,
			nm_usuario_w,
			nr_seq_objeto_w,
			nr_seq_product_requirement_w,
			nr_seq_pr_his_w;
		EXIT WHEN NOT FOUND; /* apply on reg_product */					
			
			--select	reg_pr_dic_history_seq.nextval

			--into	nr_seq_log_w

			--from	dual;
			
			select 	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_seq_log_w
			from	reg_pr_dic_history;
			
			insert into reg_pr_dic_history(	nr_sequencia,
											cd_versao,
											dt_atualizacao,
											ie_tipo_objeto,
											nm_usuario,
											nr_seq_objeto,
											nr_seq_product_requirement,
											nr_seq_pr_his)
								   values (	nr_seq_log_w,
											ds_version_p,
											coalesce(dt_atualizacao_w, clock_timestamp()), -- TIRAR
											ie_tipo_objeto_w,
											coalesce(nm_usuario_w, 'ifschmitt'),--TIRAR
											nr_seq_objeto_w,
											nr_seq_product_requirement_w,
											nr_seq_pr_his_w);														
			
		end loop;
		close reg_product;
		
		commit;
				
		--REG_PRODUCT_REQUIREMENT
		open reg_product_req;
		loop
		fetch reg_product_req into				
			cd_code_w,
			ds_description_w,
			ds_description_pr_w,
			ds_title_w,
			dt_aprovacao_w,
			dt_atualizacao_w,
			dt_atualizacao_nrec_w,
			dt_liberacao_dev_w,
			dt_liberacao_vv_w,
			dt_liberou_ger_vv_w,
			ie_situacao_w,
			nm_analista_liberou_w,
			nm_liberou_ger_vv_w,
			nm_liberou_vv_w,
			nm_usuario_w,
			nm_usuario_aprovacao_w,
			nm_usuario_nrec_w,
			nr_customer_requirement_w,
			nr_seq_apresentacao_w,
			nr_seq_idioma_w,
			nr_seq_product_sup_w,
			nr_seq_pr_w;
		EXIT WHEN NOT FOUND; /* apply on reg_product_req */					
			
			--select	REG_PR_HISTORY_SEQ.nextval

			--into	nr_seq_log_w

			--from	dual;
			
			select 	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_seq_log_w
			from	reg_pr_history;
			
			insert into reg_pr_history(		nr_sequencia,
											cd_versao,
											cd_code,
											ds_description,
											ds_description_pr,
											ds_title,
											dt_aprovacao,
											dt_atualizacao,
											dt_atualizacao_nrec,
											dt_liberacao_dev,
											dt_liberacao_vv,
											dt_liberou_ger_vv,
											ie_situacao,
											nm_analista_liberou,
											nm_liberou_ger_vv,
											nm_liberou_vv,
											nm_usuario,
											nm_usuario_aprovacao,
											nm_usuario_nrec,
											nr_customer_requirement,
											nr_seq_apresentacao,
											nr_seq_idioma,
											nr_seq_pr,
											nr_seq_product_sup)
								   values (	nr_seq_log_w,
											ds_version_p,
											cd_code_w,
											ds_description_w,
											ds_description_pr_w,
											ds_title_w,
											dt_aprovacao_w,
											dt_atualizacao_w,
											dt_atualizacao_nrec_w,
											dt_liberacao_dev_w,
											dt_liberacao_vv_w,
											dt_liberou_ger_vv_w,
											ie_situacao_w,
											nm_analista_liberou_w,
											nm_liberou_ger_vv_w,
											nm_liberou_vv_w,
											nm_usuario_w,
											nm_usuario_aprovacao_w,
											nm_usuario_nrec_w,
											nr_customer_requirement_w,
											nr_seq_apresentacao_w,
											nr_seq_idioma_w,
											nr_seq_pr_w,
											nr_seq_product_sup_w);																						
			
		end loop;
		close reg_product_req;
		
		commit;
		
elsif ((dt_version_vv_p IS NOT NULL AND dt_version_vv_p::text <> '')
		and trunc(dt_version_vv_p) = trunc(clock_timestamp())) then
		
		--REG_CASO_TESTE
		open reg_caso;
		loop
		fetch reg_caso into				
			ds_descricao_w,
			ds_pre_condicao_w,
			dt_atualizacao_w,
			dt_atualizacao_nrec_w,
			dt_liberacao_vv_w,
			ie_tipo_documento_w,
			nm_usuario_w,
			nm_usuario_nrec_w,
			nr_seq_customer_w,
			nr_seq_estagio_w,
			nr_seq_feature_w,
			nr_seq_product_w,
			nr_seq_usability_principle_w,
			nr_tempo_estimado_w,
			nr_seq_tc_w;
		EXIT WHEN NOT FOUND; /* apply on reg_caso */					
			
			--select	reg_tc_history_seq.nextval

			--into	nr_seq_log_w

			--from	dual;
			
			select 	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_seq_log_w
			from	reg_tc_history;
			
			insert into 	reg_tc_history(	nr_sequencia,
											cd_versao,
											ds_descricao,
											ds_pre_condicao,
											dt_atualizacao,
											dt_atualizacao_nrec,
											dt_liberacao_vv,
											ie_tipo_documento,
											nm_usuario,
											nm_usuario_nrec,
											nr_seq_customer,
											nr_seq_estagio,
											nr_seq_feature,
											nr_seq_product,
											nr_seq_tc,
											nr_tempo_estimado)
								   values (	nr_seq_log_w,
											ds_version_p,
											ds_descricao_w,
											ds_pre_condicao_w,
											dt_atualizacao_w,
											dt_atualizacao_nrec_w,
											dt_liberacao_vv_w,
											ie_tipo_documento_w,
											nm_usuario_w,
											nm_usuario_nrec_w,
											nr_seq_customer_w,
											nr_seq_estagio_w,
											nr_seq_feature_w,
											nr_seq_product_w,
											nr_seq_tc_w,
											nr_tempo_estimado_w);																								
			
		end loop;
		close reg_caso;
		
		commit;
		
		--REG_ACAO_TESTE
		open reg_acao;
		loop
		fetch reg_acao into				
			ds_passo_w,
			ds_resultado_w,
			dt_atualizacao_w,
			dt_atualizacao_nrec_w,			
			nm_usuario_w,
			nm_usuario_nrec_w,
			nr_ordenacao_w,
			nr_seq_caso_teste_w,
			nr_seq_tc_his_w;
		EXIT WHEN NOT FOUND; /* apply on reg_acao */					
			
			--select	reg_tc_item_history_seq.nextval

			--into	nr_seq_log_w

			--from	dual;
			
			select 	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_seq_log_w
			from	reg_tc_item_history;
			
			insert into reg_tc_item_history( nr_sequencia,
											 cd_versao,
											 ds_passo,
											 ds_resultado,
											 dt_atualizacao,
											 dt_atualizacao_nrec,
											 nm_usuario,
											 nm_usuario_nrec,
											 nr_ordenacao,
											 nr_seq_caso_teste,
											 nr_seq_tc_his)
								   values (	 nr_seq_log_w,
											 ds_version_p,
											 ds_passo_w,
											 ds_resultado_w,
											 dt_atualizacao_w,
											 dt_atualizacao_nrec_w,											
											 nm_usuario_w,
											 nm_usuario_nrec_w,
											 nr_ordenacao_w,
											 nr_seq_caso_teste_w,
											 nr_seq_tc_his_w);

		end loop;
		close reg_acao;
		
		commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE generate_documentation_log (dt_version_desenv_p timestamp, dt_version_vv_p timestamp, ds_version_p text) FROM PUBLIC;

