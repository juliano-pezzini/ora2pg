-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE alterar_estrategia_atendimento ( nm_usuario_p text, nr_seq_local_p bigint, nr_seq_estrategia_p bigint, cd_estabelecimento_p bigint) AS $body$
DECLARE



ds_Filas_w		dbms_sql.varchar2_table;
ds_Filas_aux_w		dbms_sql.varchar2_table;
qt_fila_liberada_w	bigint;
ds_estrategia_w		varchar(255);
qt_Caracteres_w		integer;
ds_Texto_w		varchar(255);
ds_caracter_atual_w	varchar(1);
ie_Parentese_Aberto_w	varchar(1);
ie_Acao_w		varchar(255);
ie_Encerramento_w	varchar(1);
qt_registros_w		varchar(10);
ds_Fila_w		varchar(255);
BEGIN

-- Limpar estratégia do local
if (coalesce(nr_seq_estrategia_p::text, '') = '') then
	update	maquina_local_senha
	set	nr_seq_estrategia_senha  = NULL,
		dt_atualizacao = clock_timestamp(),
		nm_usuario = nm_usuario_p
	where 	nr_sequencia = nr_seq_local_p;

	return;
end if;

select	substr(ds_estrategia,1,255)
into STRICT	ds_estrategia_w
from	estrategia_chamada_senha
where	nr_sequencia = nr_seq_estrategia_p;

If ((trim(both ds_estrategia_w) IS NOT NULL AND (trim(both ds_estrategia_w))::text <> '')) then

	-- inicializar variáveis
	ie_Parentese_Aberto_w	:= 'N';
	ds_Fila_w		:= '';
	ie_Acao_w  		:= '';
	ie_Encerramento_w 	:= 'N';
	qt_caracteres_w		:= 1;
	qt_registros_w		:= 1;
	ds_Texto_w 		:= ds_estrategia_w;
	ds_filas_w.Delete;

	while(qt_Caracteres_w <= Length(ds_Texto_w)) loop

		ds_caracter_atual_w := substr(ds_Texto_w, qt_Caracteres_w, 1);

		-- início e fim do parênteses
		if (ds_caracter_atual_w = '(') then
			ie_Parentese_Aberto_w := 'S';
		elsif (ds_caracter_atual_w = ')') then
			ie_Parentese_Aberto_w := 'N';
		end if;

		-- montar o código da fila
		if (ie_Parentese_Aberto_w = 'S') and (ds_caracter_atual_w <> ')') and (ds_caracter_atual_w <> '(') and (ds_caracter_atual_w <> '/') then
			ds_Fila_w := ds_Fila_w || ds_caracter_atual_w;
		end if;

		-- separar código da fila
		if (ie_Parentese_Aberto_w = 'N') and (ds_caracter_atual_w <> '/') and (ds_caracter_atual_w <> '!') and (ds_Fila_w IS NOT NULL AND ds_Fila_w::text <> '') then
			ds_Fila_w := ds_Fila_w || ',';
		end if;

		-- identificar qual a ação - chamar ou intercalar
		if (ie_Parentese_Aberto_w = 'N') and (ds_caracter_atual_w <> ')') and (ds_caracter_atual_w <> '(') and (ds_caracter_atual_w <> '/') and (qt_Caracteres_w <> Length(ds_Texto_w)) then
			ie_Acao_w := ds_caracter_atual_w;
		end if;

		-- identificar se chegou ao fim da estratégia, ou de uma parte dela
		if (ds_caracter_atual_w = '/') or (qt_Caracteres_w = Length(ds_Texto_w)) then
			ie_Encerramento_w := 'S';
		end if;

		if (ie_encerramento_w = 'S') then

			-- garantir que não ficará uma vírgula no final da string
			<<limpar_virgula>>
			while(substr(ds_Fila_w, length(ds_Fila_w), 1) = ',') loop
				ds_Fila_w := substr(ds_Fila_w, 1, length(ds_Fila_w) -1);
			end loop limpar_virgula;

			-- Guarda o registro na lista de string, com o formato
			-- ; + ação + ; + código das filas (separados por vírgula)
			ds_filas_w(qt_registros_w) := ie_acao_w || ';' ||ds_fila_w;
			qt_registros_w  := qt_registros_w + 1;

			-- reinicializar as variáveis
			ds_Fila_w 		:= '';
			ie_acao_w  		:= '';
			ie_encerramento_w 	:= 'N';
			ie_parentese_aberto_w	:= 'N';
		end if;

		qt_Caracteres_w := qt_Caracteres_w + 1;

	end loop;

	if (ds_estrategia_w IS NOT NULL AND ds_estrategia_w::text <> '') then
		delete FROM regra_liberacao_fila
		where nr_seq_local_senha = nr_seq_local_p;
	end if;

	for 	i in ds_filas_w.first..ds_filas_w.last loop


		if (substr(ds_filas_w(i), 1, 1) = ';') then
			ie_acao_w := '';
			ds_filas_w(i) := substr(ds_filas_w(i), 2, 2000);
		else
			ie_acao_w := substr(ds_filas_w(i), 1, 1);
			ds_filas_w(i) := substr(ds_filas_w(i), 3, 2000);
		end if;

		ds_Fila_w := ds_filas_w(i);

		ds_Filas_aux_w := obter_lista_string(ds_Fila_w, ',');

		if ((ds_filas_w(i) IS NOT NULL AND (ds_filas_w(i))::text <> '')) then

			for u in ds_Filas_aux_w.first..ds_Filas_aux_w.last loop

				if ((ds_Filas_aux_w(u) IS NOT NULL AND (ds_Filas_aux_w(u))::text <> '')) then

					insert into regra_liberacao_fila(nr_sequencia,
									cd_estabelecimento,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_seq_fila_espera,
									nr_seq_local_senha)
								values (nextval('regra_liberacao_fila_seq'),
									cd_estabelecimento_p,
									clock_timestamp(),
									nm_usuario_p,
									clock_timestamp(),
									nm_usuario_p,
									ds_Filas_aux_w(u),
									nr_seq_local_p);

				end if;
			end loop;
		end if;

	end loop;

	update	maquina_local_senha
	set	nr_seq_estrategia_senha = nr_seq_estrategia_p,
		dt_atualizacao 		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where 	nr_sequencia	        = nr_seq_local_p;

	commit;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE alterar_estrategia_atendimento ( nm_usuario_p text, nr_seq_local_p bigint, nr_seq_estrategia_p bigint, cd_estabelecimento_p bigint) FROM PUBLIC;

