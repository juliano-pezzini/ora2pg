-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_interf_conta_cab ( nr_seq_protocolo_p bigint, nr_seq_envio_convenio_p bigint, cd_convenio_p bigint, nr_atendimento_p bigint, nr_interno_conta_p bigint, cd_cgc_hospital_p text, cd_cgc_convenio_p text, cd_interno_p text, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


nr_sequencia_w			bigint;
cd_proc_principal_w		bigint;
cd_proc_princ_conv_w		varchar(20);
nr_doc_convenio_w		varchar(20);
ds_proc_princ_conv_w		procedimento.ds_procedimento%TYPE;
cd_plano_convenio_w		varchar(10);
cd_usuario_convenio_w		varchar(30);
cd_dependente_w			smallint;
dt_validade_carteira_w		timestamp;
cd_tipo_acomodacao_w		smallint;
ie_tipo_protocolo_w			smallint;
cd_setor_atendimento_w		integer	:= 0;
cd_setor_cirurgia_w			integer	:= 0;
ie_tipo_atendimento_w             	smallint;
cd_cgc_estab_w			varchar(14);
cd_interno_w			varchar(15);
nr_seq_internado_w		bigint;
ie_internado_w			varchar(1);
qt_setor_int_w			integer	:= 0;
qt_setor_ps_w			integer	:= 0;
qt_setor_cc_w			integer	:= 0;
ie_tipo_atend_real_w		smallint	:= 0;
qt_dia_internacao_w		smallint	:= 0;
nr_cirurgia_w			bigint;
cd_senha_guia_w			varchar(20);
cd_empresa_referencia_w		bigint;
nm_empresa_referencia_w		varchar(40);
cd_especialidade_medica_w		integer;
cd_estabelecimento_w		bigint;
ie_tipo_nascimento_w		varchar(03);
ie_necropsia_w			varchar(01);


BEGIN
ie_internado_w	:= 'N';
nr_seq_internado_w	:= 0;

/* identify patient inpatient */

select coalesce(max(b.nr_seq_interno),0)
into STRICT	nr_seq_internado_w
from 	setor_atendimento a,
	atend_paciente_unidade b
where 	b.nr_atendimento = nr_atendimento_p
and 	b.cd_setor_atendimento = a.cd_setor_atendimento
and	a.cd_classif_setor in (3,4,8);

if (nr_seq_internado_w > 0 ) then
	ie_internado_w := 'S';
end if;

begin
select a.ie_tipo_atendimento,
	cd_cgc,
	a.cd_estabelecimento
into STRICT	ie_tipo_atendimento_w,
	cd_cgc_estab_w,
	cd_estabelecimento_w
from	estabelecimento b,
	atendimento_paciente a
where	a.nr_atendimento 	= nr_atendimento_p
  and	a.cd_estabelecimento	= b.cd_estabelecimento;
exception
	when others then
	ie_tipo_atendimento_w	:= 1;
end;

begin
select	ie_tipo_protocolo
into STRICT	ie_tipo_protocolo_w
from	protocolo_convenio
where	nr_seq_protocolo	= nr_seq_protocolo_p;
exception
      	when others then
		ie_tipo_protocolo_w 	:= 1;
end;

/*obtain the type of birth*/

begin
select	a.ie_tipo_nascimento
into STRICT	ie_tipo_nascimento_w
from	nascimento a
where	a.nr_atendimento = nr_atendimento_p
and	a.nr_sequencia = (SELECT	min(b.nr_sequencia)
			  from		nascimento b
			  where	b.nr_atendimento = nr_atendimento_p);
exception
	when others then
		ie_tipo_nascimento_w	:= '';
end;

/* obtain the standard internal code of care */

select	coalesce(max(a.cd_interno), cd_interno_p)
into STRICT	cd_interno_w
from	param_interface a
where	a.cd_convenio					= cd_convenio_p
and	coalesce(ie_tipo_atendimento, ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
and	coalesce(a.cd_cgc,cd_cgc_estab_w)			= cd_cgc_estab_w
and	coalesce(cd_estabelecimento,cd_estabelecimento_w) 	= cd_estabelecimento_w
and	a.nr_sequencia			=
	(SELECT max(x.nr_sequencia)
	from	param_interface x
	where	x.cd_convenio		= cd_convenio_p
	and	coalesce(x.ie_tipo_atendimento, ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
	and	coalesce(x.cd_estabelecimento, cd_estabelecimento_w)	= cd_estabelecimento_w
	and	coalesce(x.cd_cgc,cd_cgc_estab_w)		= cd_cgc_estab_w);

/* get the first non-service patient sector */

begin
select	coalesce(max(a.cd_setor_atendimento),0)
into STRICT		cd_setor_atendimento_w
from   	atend_paciente_unidade a
where 	a.nr_atendimento 	= nr_atendimento_p
  and 	a.dt_entrada_unidade 	=
      (SELECT 	min(x.dt_entrada_unidade) dt_primeira_entrada
       from 	setor_atendimento y,
		atend_paciente_unidade x
       where 	x.nr_atendimento = a.nr_atendimento
         and 	x.cd_setor_atendimento = y.cd_setor_atendimento
         and 	y.cd_classif_setor in (1,2,3,4,8));
exception
	when others then
		cd_setor_atendimento_w	:= 0;
end;

/* get the patient sector where he had surgery */

begin
select	coalesce(max(a.cd_setor_atendimento),0)
into STRICT		cd_setor_cirurgia_w
from   	atend_paciente_unidade a
where 	a.nr_atendimento 	= nr_atendimento_p
  and 	a.dt_entrada_unidade 	=
      (SELECT 	min(x.dt_entrada_unidade) dt_primeira_entrada
       from 	cirurgia x
       where 	x.nr_atendimento = a.nr_atendimento
         and 	(x.dt_entrada_unidade IS NOT NULL AND x.dt_entrada_unidade::text <> ''));
exception
	when others then
		cd_setor_cirurgia_w	:= 0;
end;


/* when there was no passage through surgery and different service */

if (cd_setor_cirurgia_w = 0) 	and (cd_setor_atendimento_w = 0)	then
	begin
	select	max(a.cd_setor_atendimento)
	into STRICT		cd_setor_atendimento_w
	from   	atend_paciente_unidade a
	where 	a.nr_atendimento 	= nr_atendimento_p
	  and 	a.dt_entrada_unidade 	=
      (SELECT 	min(x.dt_entrada_unidade)
       from 	atend_paciente_unidade x
       where 	x.nr_atendimento = a.nr_atendimento
         and 	(x.dt_entrada_unidade IS NOT NULL AND x.dt_entrada_unidade::text <> ''));
	exception
		when others then
			cd_setor_atendimento_w	:= 0;
	end;
end if;

if (cd_setor_cirurgia_w = 0) then
	cd_setor_cirurgia_w := null;
end if;

if (cd_setor_atendimento_w = 0) then
	cd_setor_atendimento_w := null;
end if;
	

begin
select	nextval('w_interf_conta_cab_seq')
into STRICT	nr_sequencia_w
;
nr_sequencia_p		:= nr_sequencia_w;

insert into w_interf_conta_cab(
	nr_sequencia,
	cd_tipo_registro,
	nr_seq_registro,
	nr_seq_interface,
	nr_remessa,
	nr_interno_conta,
	dt_periodo_inicial,
	dt_periodo_final,
	nr_atendimento,
	dt_entrada,
	dt_alta,
	ie_tipo_atendimento,
	cd_motivo_alta,
	ie_retorno,
	ie_clinica,
	ie_carater_inter,
	cd_medico_resp,
	cd_paciente,
	nm_paciente,
	dt_nascimento,
	ie_sexo,
	ie_estado_civil,
	nr_cpf_paciente,
	nr_identidade,
	nr_prontuario,
	cd_nacionalidade,
	nr_cert_nasc,
	dt_obito,
	nm_medico_resp,
	nr_cpf_medico_resp,
	nr_crm_medico_resp,
	uf_crm_medico_resp,
	cd_conv_medico_resp,
	cd_proc_principal,
	ds_proc_principal,
	cd_cid_principal,
	cd_cid_secundario,
	ie_tipo_paciente,
	cd_classe_atendimento,
	nr_seq_protocolo,
	cd_convenio,
	cd_cgc_hospital,
	cd_cgc_convenio,
	cd_interno,
	ie_tipo_protocolo,
	cd_setor_atendimento,
	cd_setor_cirurgia,
	ie_medico_credenciado,
	ie_carater_sus,
	cd_categoria_convenio,
	ie_tipo_nascimento,
	ie_tipo_atend_real,
	nr_seq_conta_convenio,
	ie_necropsia,
	ds_observacao,
	cd_espec_resp)
SELECT
	nr_sequencia_w,
	1,
	1,
	1,
	nr_seq_envio_convenio_p,
	a.nr_interno_conta,
	a.dt_periodo_inicial,
	a.dt_periodo_final,
	a.nr_atendimento,
	c.dt_entrada,
	c.dt_alta,
	c.ie_tipo_atendimento,
	c.cd_motivo_alta,
	CASE WHEN coalesce(c.nr_atend_original::text, '') = '' THEN 'N'  ELSE 'S' END ,
	c.ie_clinica,
	CASE WHEN c.ie_carater_inter_sus=1 THEN 'E'  ELSE 'U' END ,
	c.cd_medico_resp,
	c.cd_pessoa_fisica,
	elimina_acentuacao(d.nm_pessoa_fisica),
	d.dt_nascimento,
	d.ie_sexo,
	d.ie_estado_civil,
	d.nr_cpf,
	d.nr_identidade,
	d.nr_prontuario,
	d.cd_nacionalidade,
	d.nr_cert_nasc,
	d.dt_obito,
	elimina_acentuacao(e.nm_pessoa_fisica),
	e.nr_cpf,
	substr(obter_crm_medico(f.cd_pessoa_fisica), 1, 255),
	substr(f.uf_crm,1,2) uf_crm,
	obter_medico_convenio(c.cd_estabelecimento, c.cd_medico_resp,cd_convenio_p, null, null, null, null,c.dt_entrada, c.ie_tipo_atendimento, null,c.ie_carater_inter_sus),
	'',
	'',
	obter_cid_atendimento(nr_atendimento_p,'P'),
	obter_cid_atendimento(nr_atendimento_p,'S'),
	CASE WHEN c.ie_tipo_atendimento=1 THEN 'I'  ELSE 'E' END ,
	CASE WHEN c.ie_carater_inter_sus='1' THEN 'E'  ELSE 'U' END ,
	nr_seq_protocolo_p,
	cd_convenio_p,
	cd_cgc_hospital_p,
	cd_cgc_convenio_p,
	cd_interno_w,
	ie_tipo_protocolo_w,
	cd_setor_atendimento_w,
	cd_setor_cirurgia_w,
	coalesce(f.ie_conveniado_sus,'N'),
	c.ie_carater_inter_sus,
	a.cd_categoria_parametro,
	coalesce(a.ie_tipo_nascimento,ie_tipo_nascimento_w),
	c.ie_tipo_atendimento,
	a.nr_conta_convenio,
	c.ie_necropsia,
	a.ds_observacao,
	a.cd_especialidade_conta
FROM pessoa_fisica e, pessoa_fisica d, conta_paciente a, atendimento_paciente c
LEFT OUTER JOIN medico f ON (c.cd_medico_resp = f.cd_pessoa_fisica)
WHERE a.nr_interno_conta			= nr_interno_conta_p and a.nr_atendimento			= c.nr_atendimento and c.cd_pessoa_fisica			= d.cd_pessoa_fisica and c.cd_medico_resp			= e.cd_pessoa_fisica;
exception
	when others then
		--#@ds_erro_p#@	nr_interno_conta_p = #@nr_interno_conta_p#@
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(184029,'DS_ERRO=' || substr(sqlerrm,1,255) || ';NR_INTERNO_CONTA=' || nr_interno_conta_p);
end;

/* get main procedure */

cd_proc_principal_w		:= 0;
cd_especialidade_medica_w	:= 0;

begin
select	 somente_numero(obter_proc_principal(nr_atendimento_p,cd_convenio_p,ie_tipo_atendimento_w,nr_interno_conta_p,'C'))
into STRICT	 cd_proc_principal_w
;
exception
when others then
	--#@ds_erro#@	cd_proc_principal_w = #@cd_proc_principal#@
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(184033,'DS_ERRO=' || substr(sqlerrm,1,255) || ';CD_PROC_PRINCIPAL=' || somente_numero(obter_proc_principal(nr_atendimento_p,cd_convenio_p,ie_tipo_atendimento_w,nr_interno_conta_p,'C')));	
end;


begin
select obter_codigo_item_convenio(cd_convenio_p,1,cd_proc_principal_w,1,'S', cd_especialidade_medica_w, null, ie_tipo_atendimento_w)
into STRICT	 cd_proc_princ_conv_w
;
exception
when others then
	--#@ds_erro#@	cd_proc_princ_conv_w = #@cd_proc_princ_conv#@
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(184034,'DS_ERRO=' || substr(sqlerrm,1,255) || ';CD_PROC_PRINC_CONV=' || obter_codigo_item_convenio(cd_convenio_p,1,cd_proc_principal_w,1,'S', null, null, null));
end;

begin
select	obter_nome_item_convenio(cd_convenio_p,1,cd_proc_principal_w,1,'S', cd_especialidade_medica_w, null, ie_tipo_atendimento_w, null)
into STRICT	ds_proc_princ_conv_w
;
exception
	when others then
		--#@ds_erro#@	ds_proc_princ_conv_w = #@ds_proc_princ_conv#@
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(184035,'DS_ERRO=' || substr(sqlerrm,1,255) || ';CD_PROC_PRINC_CONV=' || obter_nome_item_convenio(cd_convenio_p,1,cd_proc_principal_w,1,'S', null, null, null, null));
end;

begin
/* get data of atend_categoria_convenio */

select max(cd_plano_convenio),
	max(elimina_caractere_especial(cd_usuario_convenio)),
	max(cd_dependente),
	max(dt_validade_carteira),
	max(cd_tipo_acomodacao),
	max(nr_doc_convenio),
	max(qt_dia_internacao),
	max(coalesce(cd_senha,nr_doc_convenio)),
	max(coalesce(cd_empresa,0))
into STRICT	cd_plano_convenio_w,
	cd_usuario_convenio_w,
	cd_dependente_w,
	dt_validade_carteira_w,
	cd_tipo_acomodacao_w,
	nr_doc_convenio_w,
	qt_dia_internacao_w,
	cd_senha_guia_w,
	cd_empresa_referencia_w
from	atend_categoria_convenio
where	nr_atendimento	= nr_atendimento_p
and	dt_inicio_vigencia	=
	(SELECT max(x.dt_inicio_vigencia)
	from atend_categoria_convenio x
	where x.nr_atendimento = nr_atendimento_p);
exception
	when others then
		--#@ds_erro#@	Error when obtaining data of atend_categoria_convenio	
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(184036,'DS_ERRO=' || substr(sqlerrm,1,255));
end;

begin
/* search for a reference company */

nm_empresa_referencia_w	:= '';
if (cd_empresa_referencia_w > 0) then
	begin
	select	substr(max(coalesce(nm_empresa,'')),1,40)
	into STRICT	nm_empresa_referencia_w
	from	empresa_referencia
	where	cd_empresa	= cd_empresa_referencia_w;
	end;
end if;
exception
	when others then
		--#@ds_erro#@	Error when searching for a reference company
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(184037,'DS_ERRO=' || substr(sqlerrm,1,255));
end;


if (ie_internado_w = 'N') then
	cd_tipo_acomodacao_w := 0;
end if;

begin
select	sum(CASE WHEN cd_classif_setor=1 THEN 1  ELSE 0 END ) qt_setor_ps,
	sum(CASE WHEN cd_classif_setor=2 THEN 1  ELSE 0 END ) qt_setor_cir,
	sum(CASE WHEN cd_classif_setor=3 THEN 1 WHEN cd_classif_setor=4 THEN 1  ELSE 0 END ) qt_setor_int
into STRICT	qt_setor_ps_w,
	qt_setor_cc_w,
	qt_setor_int_w
from	setor_atendimento b,
	atend_paciente_unidade a
where	a.nr_atendimento	= nr_atendimento_p
and	a.cd_setor_atendimento = b.cd_setor_atendimento;
exception
	when others then
		--#@ds_erro#@	Error when searching for sector data
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(184037,'DS_ERRO=' || substr(sqlerrm,1,255));
end;

if (qt_setor_int_w > 0) then
	ie_tipo_atend_real_w		:= 1;
elsif (qt_setor_ps_w > 0) then
	ie_tipo_atend_real_w		:= 3;
elsif (qt_setor_cc_w > 0) then
	ie_tipo_atend_real_w		:= 8;
else
	ie_tipo_atend_real_w		:= 7;
end if;


/* get first patient surgery */

nr_cirurgia_w	:= null;
select	min(nr_cirurgia)
into STRICT	nr_cirurgia_w
from	cirurgia
where	nr_atendimento = nr_atendimento_p;


update w_interf_conta_cab
set	cd_proc_principal		= cd_proc_princ_conv_w,
	ds_proc_principal		= substr(ds_proc_princ_conv_w,1,50),
	cd_plano_convenio		= cd_plano_convenio_w,
	cd_usuario_convenio		= cd_usuario_convenio_w,
	cd_dependente			= cd_dependente_w,
	dt_validade_carteira		= dt_validade_carteira_w,
	cd_tipo_acomodacao		= cd_tipo_acomodacao_w,
	nr_doc_convenio		= nr_doc_convenio_w,
	ie_tipo_atend_real		= ie_tipo_atend_real_w,
	qt_dia_internacao		= qt_dia_internacao_w,
	nr_cirurgia			= nr_cirurgia_w,
	cd_senha_guia			= cd_senha_guia_w,
	cd_empresa_referencia	= cd_empresa_referencia_w,
	nm_empresa_referencia	= nm_empresa_referencia_w
where	nr_sequencia			= nr_sequencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_interf_conta_cab ( nr_seq_protocolo_p bigint, nr_seq_envio_convenio_p bigint, cd_convenio_p bigint, nr_atendimento_p bigint, nr_interno_conta_p bigint, cd_cgc_hospital_p text, cd_cgc_convenio_p text, cd_interno_p text, nr_sequencia_p INOUT bigint) FROM PUBLIC;

