-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE oft_insere_acuidade ( nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, vListaAcuidade strRecTypeFormOft) AS $body$
DECLARE


nr_sequencia_w			oft_acuidade_visual.nr_sequencia%type;
cd_profissional_w		oft_acuidade_visual.cd_profissional%type;
dt_registro_w			oft_acuidade_visual.dt_registro%type;
vl_od_pl_av_sc_w		oft_acuidade_visual.vl_od_pl_av_sc%type;
vl_od_pl_av_cc_w		oft_acuidade_visual.vl_od_pl_av_cc%type;
vl_oe_pl_av_sc_w		oft_acuidade_visual.vl_oe_pl_av_sc%type;
vl_oe_pl_av_cc_w		oft_acuidade_visual.vl_oe_pl_av_cc%type;
vl_oe_pp_av_w			oft_acuidade_visual.vl_oe_pp_av%type;
vl_od_pp_av_w			oft_acuidade_visual.vl_od_pp_av%type;
ds_observacao_w		oft_acuidade_visual.ds_observacao%type;
vl_od_pl_cor_sc_w		oft_acuidade_visual.vl_od_pl_cor_sc%type;
vl_od_pl_con_sc_w		oft_acuidade_visual.vl_od_pl_con_sc%type;
vl_od_pl_cor_cc_w		oft_acuidade_visual.vl_od_pl_cor_cc%type;			
vl_od_pl_con_cc_w		oft_acuidade_visual.vl_od_pl_con_cc%type;
vl_oe_pl_cor_sc_w		oft_acuidade_visual.vl_oe_pl_cor_sc%type;
vl_oe_pl_con_sc_w		oft_acuidade_visual.vl_oe_pl_con_sc%type;
vl_oe_pl_cor_cc_w		oft_acuidade_visual.vl_oe_pl_cor_cc%type;
vl_od_pp_con_sc_w		oft_acuidade_visual.vl_od_pp_con_sc%type;
vl_od_pp_cor_sc_w		oft_acuidade_visual.vl_od_pp_cor_sc%type;
vl_od_pp_cor_cc_w		oft_acuidade_visual.vl_od_pp_cor_cc%type;
vl_od_pp_con_cc_w		oft_acuidade_visual.vl_od_pp_con_cc%type;
vl_oe_pl_con_cc_w		oft_acuidade_visual.vl_oe_pl_con_cc%type;
ie_tipo_w				oft_acuidade_visual.ie_tipo%type;
nm_usuario_w			usuario.nm_usuario%type := wheb_usuario_pck.get_nm_usuario;
ie_registrado_w		varchar(1) := 'N';
ds_erro_w				varchar(4000);
											
BEGIN
begin

if (coalesce(nr_seq_consulta_p,0) > 0) and (vListaAcuidade.count > 0) then
	for i in 1..vListaAcuidade.count loop
		begin
		if (vListaAcuidade[i](.ds_valor IS NOT NULL AND .ds_valor::text <> '')) or (vListaAcuidade[i](.nr_valor IS NOT NULL AND .nr_valor::text <> '')) then
			case upper(vListaAcuidade[i].nm_campo)
				when 'CD_PROFISSIONAL' then
					cd_profissional_w 	:= vListaAcuidade[i].ds_valor;
				when 'DT_REGISTRO' then
					dt_registro_w 	:= pkg_date_utils.get_DateTime(vListaAcuidade[i].ds_valor);
				when 'VL_OD_PL_AV_SC' then
					vl_od_pl_av_sc_w 	:= vListaAcuidade[i].nr_valor;
					ie_registrado_w		:= 'S';
				when 'VL_OD_PL_AV_CC' then
					vl_od_pl_av_cc_w 	:= vListaAcuidade[i].nr_valor;
					ie_registrado_w		:= 'S';
				when 'VL_OE_PL_AV_SC' then
					vl_oe_pl_av_sc_w 	:= vListaAcuidade[i].nr_valor;
					ie_registrado_w		:= 'S';
				when 'VL_OE_PL_AV_CC' then
					vl_oe_pl_av_cc_w 	:= vListaAcuidade[i].nr_valor;
					ie_registrado_w		:= 'S';
				when 'VL_OE_PP_AV' then
					vl_oe_pp_av_w 	:= vListaAcuidade[i].nr_valor;
					ie_registrado_w		:= 'S';
				when 'VL_OD_PP_AV' then
					vl_od_pp_av_w 	:= vListaAcuidade[i].nr_valor;
					ie_registrado_w		:= 'S';
				when 'DS_OBSERVACAO' then
					ds_observacao_w 	:= vListaAcuidade[i].ds_valor;
					ie_registrado_w		:= 'S';
				when 'VL_OD_PL_COR_SC' then
					vl_od_pl_cor_sc_w 	:= vListaAcuidade[i].nr_valor;
					ie_registrado_w		:= 'S';
				when 'VL_OD_PL_CON_SC' then
					vl_od_pl_con_sc_w 	:= vListaAcuidade[i].nr_valor;
					ie_registrado_w		:= 'S';
				when 'VL_OD_PL_COR_CC' then
					vl_od_pl_cor_cc_w 	:= vListaAcuidade[i].nr_valor;
					ie_registrado_w		:= 'S';
				when 'VL_OD_PL_CON_CC' then
					vl_od_pl_con_cc_w 	:= vListaAcuidade[i].nr_valor;
					ie_registrado_w		:= 'S';
				when 'VL_OE_PL_COR_SC' then
					vl_oe_pl_cor_sc_w 	:= vListaAcuidade[i].nr_valor;
					ie_registrado_w		:= 'S';
				when 'VL_OE_PL_CON_SC' then
					vl_oe_pl_con_sc_w 	:= vListaAcuidade[i].nr_valor;
					ie_registrado_w		:= 'S';
				when 'VL_OE_PL_COR_CC' then
					vl_oe_pl_cor_cc_w 	:= vListaAcuidade[i].nr_valor;
					ie_registrado_w		:= 'S';
				when 'VL_OD_PP_CON_SC' then
					vl_od_pp_con_sc_w 	:= vListaAcuidade[i].nr_valor;
					ie_registrado_w		:= 'S';
				when 'VL_OD_PP_COR_SC' then
					vl_od_pp_cor_sc_w 	:= vListaAcuidade[i].nr_valor;
					ie_registrado_w		:= 'S';
				when 'VL_OD_PP_COR_CC' then
					vl_od_pp_cor_cc_w 	:= vListaAcuidade[i].nr_valor;
					ie_registrado_w		:= 'S';
				when 'VL_OD_PP_CON_CC' then
					vl_od_pp_con_cc_w 	:= vListaAcuidade[i].nr_valor;
					ie_registrado_w		:= 'S';
				when 'VL_OE_PL_CON_CC' then
					vl_oe_pl_con_cc_w 	:= vListaAcuidade[i].nr_valor;
					ie_registrado_w		:= 'S';
				when 'IE_TIPO' then
					ie_tipo_w 	:= vListaAcuidade[i].ds_valor;
				else
					null;										
			end case;	
		end if;	
	end;
	end loop;

	select	max(nr_sequencia)
	into STRICT		nr_sequencia_w
	from		oft_acuidade_visual
	where		nr_seq_consulta_form = nr_seq_consulta_form_p
	and		nr_seq_consulta		= nr_seq_consulta_p
	and		coalesce(dt_liberacao::text, '') = ''
	and		nm_usuario				= nm_usuario_w;
	
	if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		update	oft_acuidade_visual
		set		dt_atualizacao		= 	clock_timestamp(),
					nm_usuario			= 	nm_usuario_w,
					cd_profissional	=	coalesce(cd_profissional_w,cd_profissional),	
					dt_registro			= 	coalesce(dt_registro_w,dt_registro),
					vl_od_pl_av_sc		= 	vl_od_pl_av_sc_w,
					vl_od_pl_av_cc		= 	vl_od_pl_av_cc_w,
					vl_oe_pl_av_sc		= 	vl_oe_pl_av_sc_w,
					vl_oe_pl_av_cc		= 	vl_oe_pl_av_cc_w,
					vl_oe_pp_av			= 	vl_oe_pp_av_w,
					vl_od_pp_av			= 	vl_od_pp_av_w,
					ds_observacao		= 	ds_observacao_w,
					vl_od_pl_cor_sc	= 	vl_od_pl_cor_sc_w,
					vl_od_pl_con_sc	= 	vl_od_pl_con_sc_w,
					vl_od_pl_cor_cc	= 	vl_od_pl_cor_cc_w,			
					vl_od_pl_con_cc	= 	vl_od_pl_con_cc_w,
					vl_oe_pl_cor_sc	= 	vl_oe_pl_cor_sc_w,
					vl_oe_pl_con_sc	= 	vl_oe_pl_con_sc_w,
					vl_oe_pl_cor_cc	= 	vl_oe_pl_cor_cc_w,
					vl_od_pp_con_sc	= 	vl_od_pp_con_sc_w,
					vl_od_pp_cor_sc	= 	vl_od_pp_cor_sc_w,
					vl_od_pp_cor_cc	= 	vl_od_pp_cor_cc_w,
					vl_od_pp_con_cc	= 	vl_od_pp_con_cc_w,
					vl_oe_pl_con_cc	= 	vl_oe_pl_con_cc_w,
					ie_tipo				= 	coalesce(ie_tipo_w,ie_tipo)
		where		nr_sequencia		= nr_sequencia_w;				
		CALL wheb_usuario_pck.set_ie_commit('S');
	else			
		if (ie_registrado_w = 'S') then
			CALL wheb_usuario_pck.set_ie_commit('S');
			select	nextval('oft_acuidade_visual_seq')
			into STRICT		nr_sequencia_w	
			;

			insert	into oft_acuidade_visual(	nr_sequencia,
															nr_seq_consulta, 
															dt_atualizacao, 
															nm_usuario, 
															dt_atualizacao_nrec, 
															nm_usuario_nrec, 
															cd_profissional, 
															dt_registro, 
															vl_od_pl_av_sc, 
															vl_od_pl_av_cc, 
															vl_oe_pl_av_sc, 
															vl_oe_pl_av_cc, 
															vl_oe_pp_av, 
															vl_od_pp_av, 
															ds_observacao, 
															vl_od_pl_cor_sc, 
															vl_od_pl_con_sc, 
															vl_od_pl_cor_cc, 
															vl_od_pl_con_cc, 
															vl_oe_pl_cor_sc, 
															vl_oe_pl_con_sc, 
															vl_oe_pl_cor_cc, 
															vl_od_pp_con_sc, 
															vl_od_pp_cor_sc, 
															vl_od_pp_cor_cc, 
															vl_od_pp_con_cc, 
															vl_oe_pl_con_cc, 
															ie_tipo,
															nr_seq_consulta_form,
															ie_situacao)
			values (			nr_sequencia_w, 
															nr_seq_consulta_p, 
															clock_timestamp(), 
															nm_usuario_w, 
															clock_timestamp(), 
															nm_usuario_w, 
															coalesce(cd_profissional_w,obter_pf_usuario(nm_usuario_w,'C')), 
															coalesce(dt_registro_w,clock_timestamp()), 
															vl_od_pl_av_sc_w, 
															vl_od_pl_av_cc_w, 
															vl_oe_pl_av_sc_w, 
															vl_oe_pl_av_cc_w, 
															vl_oe_pp_av_w, 
															vl_od_pp_av_w, 
															ds_observacao_w, 
															vl_od_pl_cor_sc_w, 
															vl_od_pl_con_sc_w, 
															vl_od_pl_cor_cc_w, 
															vl_od_pl_con_cc_w, 
															vl_oe_pl_cor_sc_w, 
															vl_oe_pl_con_sc_w, 
															vl_oe_pl_cor_cc_w, 
															vl_od_pp_con_sc_w, 
															vl_od_pp_cor_sc_w, 
															vl_od_pp_cor_cc_w, 
															vl_od_pp_con_cc_w, 
															vl_oe_pl_con_cc_w, 
															coalesce(ie_tipo_w,'O'),
															nr_seq_consulta_form_p,
															'A');
		end if;													
	end if;	
end if;	

exception
when others then
	ds_erro_w	:= substr(sqlerrm,1,4000);
	update	OFT_CONSULTA_FORMULARIO
	set		ds_stack			=	substr(dbms_utility.format_call_stack||ds_erro_w,1,4000)
	where		nr_sequencia	= 	nr_seq_consulta_form_p;
end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE oft_insere_acuidade ( nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, vListaAcuidade strRecTypeFormOft) FROM PUBLIC;

