-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_evento_resumo ( dt_inicio_competencia_p pls_conta_medica_resumo.dt_competencia_pgto%type, dt_fim_competencia_p pls_conta_medica_resumo.dt_competencia_pgto%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE

					
-- Atualizar os resumos das contas medicas FECHADAS, que NaO possuem lote de pagamento vinculado
nr_seq_evento_w			pls_evento.nr_sequencia%type;
nr_seq_producao_w		pls_evento_regra_producao.nr_sequencia%type;
pr_liberado_w			pls_conta_medica_resumo.pr_liberado%type;
pr_custo_operacional_w		pls_conta_medica_resumo.pr_taxa_adm_co%type;
pr_materiais_w			pls_conta_medica_resumo.pr_taxa_adm_mat%type;
nr_seq_regra_valor_w		pls_prestador_taxa_adm.nr_sequencia%type;
vl_liberado_w			pls_conta_medica_resumo.vl_liberado%type;
vl_custo_operacional_w		double precision := 0;
vl_materiais_w			double precision := 0;
vl_taxa_adm_w			double precision := 0;
vl_taxa_adm_co_w		double precision := 0;
vl_taxa_adm_mat_w		double precision := 0;
ie_tipo_despesa_proc_w		pls_conta_medica_resumo.ie_tipo_despesa%type;
ie_tipo_despesa_mat_w		pls_conta_medica_resumo.ie_tipo_despesa%type;

-- colocado o hint do indice pois apos fazer o join com a conta o oracle estava utilizando outro indice muito menos eficiente pelo ie_situacao
C01 CURSOR(	dt_inicio_competencia_pc	timestamp,
		dt_fim_competencia_pc		timestamp) FOR
	SELECT	/*+ INDEX(a PLSCOMR_I8) */		a.ie_tipo_item,
		a.nr_seq_conta,
		a.nr_sequencia nr_seq_resumo,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_material,
		a.ie_tipo_guia,
		a.ie_origem_conta,
		a.nr_seq_tipo_atendimento,
		a.ie_tipo_despesa,
		a.nr_seq_prestador_pgto,
		a.vl_liberado,
		a.vl_custo_operacional,
		a.vl_materiais,
		a.dt_competencia,
		a.ie_proc_mat, 
		a.nr_seq_item,
		a.vl_taxa_adm,
		a.vl_taxa_adm_co,
		a.nr_seq_segurado,
		a.vl_taxa_adm_mat,
		CASE WHEN coalesce(a.nr_seq_exame_coleta::text, '') = '' THEN 'N'  ELSE CASE WHEN a.ds_tipo_item='Prestador (Taxa de Coleta)' THEN 'S'  ELSE 'N' END  END  ie_taxa_coleta,
		b.ie_regime_atendimento,
		b.ie_saude_ocupacional
	from	pls_conta_medica_resumo a,
		pls_conta b
	where	coalesce(a.nr_seq_lote_pgto::text, '') = ''
	and	a.ie_status = 'F'
	and	a.dt_competencia_pgto between dt_inicio_competencia_pc and dt_fim_competencia_pc
	and	a.ie_situacao = 'A'
	and	b.nr_sequencia = a.nr_seq_conta
	and	b.cd_estabelecimento = cd_estabelecimento_p;

BEGIN

for r_c01_w in c01(	trunc(dt_inicio_competencia_p, 'month'),
			fim_dia(last_day(trunc(dt_fim_competencia_p)))) loop
	
	vl_liberado_w := r_c01_w.vl_liberado;
	vl_taxa_adm_w := r_c01_w.vl_taxa_adm;
	vl_taxa_adm_co_w := r_c01_w.vl_taxa_adm_co;
	vl_taxa_adm_mat_w := r_c01_w.vl_taxa_adm_mat;	
	
	if (r_c01_w.ie_proc_mat = 'P') then
		ie_tipo_despesa_proc_w	:= r_c01_w.ie_tipo_despesa;
	else
		ie_tipo_despesa_mat_w	:= r_c01_w.ie_tipo_despesa;
	end if;

	SELECT * FROM pls_obter_evento_item(	r_c01_w.cd_procedimento, r_c01_w.ie_origem_proced, r_c01_w.nr_seq_material, cd_estabelecimento_p, r_c01_w.ie_tipo_guia, r_c01_w.ie_origem_conta, r_c01_w.nr_seq_tipo_atendimento, r_c01_w.ie_tipo_despesa, r_c01_w.nr_seq_segurado, r_c01_w.nr_seq_conta, r_c01_w.ie_taxa_coleta, null, nr_seq_evento_w, nr_seq_producao_w, 'C', r_c01_w.ie_regime_atendimento, r_c01_w.ie_saude_ocupacional) INTO STRICT nr_seq_evento_w, nr_seq_producao_w;
				
	SELECT * FROM pls_define_valor_evento_pgto(	r_c01_w.nr_seq_prestador_pgto, r_c01_w.cd_procedimento, r_c01_w.ie_origem_proced, r_c01_w.nr_seq_material, nm_usuario_p, cd_estabelecimento_p, r_c01_w.dt_competencia, ie_tipo_despesa_proc_w, ie_tipo_despesa_mat_w, r_c01_w.ie_tipo_item, r_c01_w.nr_seq_item, pr_liberado_w, pr_custo_operacional_w, pr_materiais_w, nr_seq_regra_valor_w) INTO STRICT pr_liberado_w, pr_custo_operacional_w, pr_materiais_w, nr_seq_regra_valor_w;

	if (coalesce(pr_liberado_w,0) > 0) then

		vl_liberado_w := (vl_liberado_w + vl_taxa_adm_w);
	else
		if (coalesce(pr_custo_operacional_w,0) > 0) and (coalesce(r_c01_w.vl_custo_operacional,0) > 0) then

			vl_liberado_w := (vl_liberado_w + vl_taxa_adm_co_w);
		end if;

		if (coalesce(pr_materiais_w,0) > 0) and (coalesce(r_c01_w.vl_materiais,0) > 0) then

			vl_liberado_w := (vl_liberado_w + vl_taxa_adm_mat_w);
		end if;
	end if;

	SELECT * FROM pls_obter_valor_pagamento(	pr_liberado_w, r_c01_w.vl_materiais, r_c01_w.vl_custo_operacional, vl_taxa_adm_mat_w, vl_taxa_adm_co_w, pr_materiais_w, pr_custo_operacional_w, vl_liberado_w, vl_taxa_adm_w) INTO STRICT vl_taxa_adm_mat_w, vl_taxa_adm_co_w, pr_materiais_w, pr_custo_operacional_w, vl_liberado_w, vl_taxa_adm_w;

	update	pls_conta_medica_resumo
	set	nr_seq_evento = nr_seq_evento_w,
		nr_seq_producao = nr_seq_producao_w,
		nm_usuario = nm_usuario_p,
		dt_atualizacao = clock_timestamp(),
		vl_liberado = vl_liberado_w,
		pr_liberado = pr_liberado_w,
		nr_seq_regra_valor = nr_seq_regra_valor_w,
		vl_taxa_adm = vl_taxa_adm_w,
		vl_taxa_adm_co = vl_taxa_adm_co_w,
		vl_taxa_adm_mat = vl_taxa_adm_mat_w,
		pr_taxa_adm_co = pr_custo_operacional_w,
		pr_taxa_adm_mat = pr_materiais_w,
		nr_seq_segurado = r_c01_w.nr_seq_segurado
	where	nr_seq_conta = r_c01_w.nr_seq_conta
	and	nr_sequencia = r_c01_w.nr_seq_resumo
	and	ie_situacao = 'A';
	commit;
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_evento_resumo ( dt_inicio_competencia_p pls_conta_medica_resumo.dt_competencia_pgto%type, dt_fim_competencia_p pls_conta_medica_resumo.dt_competencia_pgto%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

