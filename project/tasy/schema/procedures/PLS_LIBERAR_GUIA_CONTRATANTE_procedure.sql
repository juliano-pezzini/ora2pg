-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_liberar_guia_contratante ( ie_status_p bigint, nr_seq_guia_p bigint, ds_observacao_p text, nm_usuario_p text) AS $body$
DECLARE


ie_estagio_w			smallint;
ie_status_w			smallint;
nr_seq_segurado_w		bigint;
qt_dias_validade_w		bigint;
dt_solicitacao_w		timestamp;
ie_tipo_guia_w			varchar(2);
ie_tipo_processo_w		varchar(2);
cd_senha_w			varchar(255)	:= null;
dt_validade_senha_w		varchar(255)	:= null;
dt_validade_senha_ww		timestamp;
qt_reg_analise_w		bigint;


BEGIN

if (ie_status_p = 0) then
	ie_status_w	:= 1;
	ie_estagio_w	:= 6;
elsif (ie_status_p = 1) then
	ie_status_w	:= 3;
	ie_estagio_w	:= 4;
end if;

if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	select	nr_seq_segurado,
		dt_solicitacao,
		ie_tipo_guia,
		ie_tipo_processo
	into STRICT	nr_seq_segurado_w,
		dt_solicitacao_w,
		ie_tipo_guia_w,
		ie_tipo_processo_w
	from	pls_guia_plano
	where	nr_sequencia	= nr_seq_guia_p;
end if;

if (ie_status_p	= 0) then
	if (ie_tipo_processo_w <> 'P') then
		qt_dias_validade_w := (obter_valor_param_usuario(1204, 3, Obter_Perfil_Ativo, nm_usuario_p, 0))::numeric;
	else
		qt_dias_validade_w := (pls_obter_param_padrao_funcao(11, 1247))::numeric;
	end if;

	SELECT * FROM pls_gerar_validade_senha(	nr_seq_guia_p, nr_seq_segurado_w, qt_dias_validade_w, dt_solicitacao_w, ie_tipo_guia_w, nm_usuario_p, dt_validade_senha_w, cd_senha_w) INTO STRICT dt_validade_senha_w, cd_senha_w;

	dt_validade_senha_ww	:= trunc(to_date(dt_validade_senha_w));

	update	pls_guia_plano_proc
	set	ie_status	= 'L',
		qt_autorizada	= qt_solicitada,
		nm_usuario	= nm_usuario_p
	where	nr_seq_guia	= nr_seq_guia_p
	and	ie_status	= 'M';

	update	pls_guia_plano_mat
	set	ie_status	= 'L',
		qt_autorizada	= qt_solicitada,
		nm_usuario	= nm_usuario_p
	where	nr_seq_guia	= nr_seq_guia_p
	and	ie_status	= 'M';
end if;

update	pls_guia_plano
set	ie_status		= ie_status_w,
	ie_estagio		= ie_estagio_w,
	nm_usuario		= nm_usuario_p,
	dt_atualizacao		= clock_timestamp(),
	dt_autorizacao		= clock_timestamp(),
	ds_observacao		= ds_observacao_p,
	cd_senha		= cd_senha_w,
	dt_validade_senha	= dt_validade_senha_ww
where	nr_sequencia		= nr_seq_guia_p;

CALL pls_guia_gravar_historico(	nr_seq_guia_p, 5, 'Status: ' || ie_status_w ||
				' / Estágio: ' || ie_estagio_w || ' / Observação: ' || ds_observacao_p,
				null, nm_usuario_p);

select	count(1)
into STRICT	qt_reg_analise_w
from	pls_auditoria
where	nr_seq_guia	= nr_seq_guia_p
and	coalesce(dt_liberacao::text, '') = ''
and	ie_status	<> 'F';

if (qt_reg_analise_w	> 0) then
	update	pls_auditoria
	set	ie_status	= 'F',
		dt_liberacao	= clock_timestamp(),
		dt_atualizacao	= clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where	nr_seq_guia	= nr_seq_guia_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_liberar_guia_contratante ( ie_status_p bigint, nr_seq_guia_p bigint, ds_observacao_p text, nm_usuario_p text) FROM PUBLIC;

