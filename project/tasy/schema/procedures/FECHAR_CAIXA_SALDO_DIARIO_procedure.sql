-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fechar_caixa_saldo_diario (nr_seq_caixa_p bigint, nr_seq_saldo_p bigint, dt_saldo_p timestamp, nm_usuario_p text) AS $body$
DECLARE


ie_permite_saldo_retroativo_w		varchar(1);
ie_saldo_caixa_aberto_w				varchar(1);
ie_evento_caixa_w					varchar(1);
ie_recalc_caixa_fechar_w			varchar(1);
ie_alterar_posteriores_w			varchar(1);
qt_saldos_abertos_w					bigint;
qt_recebimentos_pendentes_w			bigint;
ds_retorno_w						varchar(10);

ie_permite_fechar_saldo_w			caixa.ie_permite_fechar_saldo%type;
nr_seq_lote_w						movto_trans_financ.nr_seq_lote%type;

C01 CURSOR FOR
	SELECT 	nr_sequencia,
		dt_saldo
	from 	caixa_saldo_diario
	where 	nr_seq_caixa = nr_seq_caixa_p
	and	dt_saldo < dt_saldo_p
	and	coalesce(dt_fechamento::text, '') = ''
	order by dt_saldo desc;

vet01	c01%rowtype;


BEGIN

ie_permite_saldo_retroativo_w := coalesce(obter_valor_param_usuario(813,160, obter_perfil_ativo, nm_usuario_p, 0),'N');
ie_recalc_caixa_fechar_w := coalesce(obter_valor_param_usuario(813,82, obter_perfil_ativo, nm_usuario_p, 0),'N');
ie_alterar_posteriores_w := coalesce(obter_valor_param_usuario(813,11, obter_perfil_ativo, nm_usuario_p, 0),'N');

open c01;
loop
fetch c01 into
	vet01;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	-- Valida saldos retroativos
	if (ie_permite_saldo_retroativo_w = 'S') then
		select 	count(*)
		into STRICT	qt_saldos_abertos_w
		from 	caixa_saldo_diario
		where 	nr_seq_caixa = nr_seq_caixa_p
		and	dt_saldo > vet01.dt_saldo
		and	coalesce(dt_fechamento::text, '') = '';

		if (qt_saldos_abertos_w > 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(222488);
		end if;
	end if;

	-- Valida se o saldo já está fechado
	select 	obter_se_saldo_caixa_aberto(nr_seq_caixa_p,vet01.nr_sequencia,vet01.dt_saldo,nm_usuario_p)
	into STRICT	ie_saldo_caixa_aberto_w
	;

	if (ie_saldo_caixa_aberto_w = 'N') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(95679);
	end if;

	-- Valida se existem saldos pendentes de fechamento menor que a data_saldo
	select 	obter_se_evento_caixa(nr_seq_caixa_p,'F',vet01.dt_saldo)
	into STRICT	ie_evento_caixa_w
	;

	if (coalesce(ie_evento_caixa_w,'S') = 'N') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(121619);
	end if;

	-- Valida recebimentos em aberto
	select 	count(*)
	into STRICT	qt_recebimentos_pendentes_w
	from 	caixa_receb
	where 	nr_seq_saldo_caixa = vet01.nr_sequencia
	and	coalesce(dt_fechamento::text, '') = ''
	and coalesce(dt_cancelamento::text, '') = '';

	if (qt_recebimentos_pendentes_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(121639);
	end if;

	-- Valida lote aberto
	select 	coalesce(max(nr_seq_lote),0)
	into STRICT	nr_seq_lote_w
    from 	movto_trans_financ
    where 	coalesce(dt_fechamento_lote::text, '') = ''
    and	nr_seq_caixa = vet01.nr_sequencia;

	if (nr_seq_lote_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(121690);
	end if;

	-- Fecha o saldo
	update 	caixa_saldo_diario
	set 	dt_fechamento = clock_timestamp(),
			nm_usuario_fechamento = nm_usuario_p,
			nm_usuario = nm_usuario_p,
			dt_atualizacao = clock_timestamp()
	where	nr_sequencia = vet01.nr_sequencia;

	if (ie_recalc_caixa_fechar_w = 'S') then
		CALL recalcular_caixa_saldo_diario(vet01.nr_sequencia,ie_alterar_posteriores_w);
	end if;

	end;
end loop;
close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fechar_caixa_saldo_diario (nr_seq_caixa_p bigint, nr_seq_saldo_p bigint, dt_saldo_p timestamp, nm_usuario_p text) FROM PUBLIC;

