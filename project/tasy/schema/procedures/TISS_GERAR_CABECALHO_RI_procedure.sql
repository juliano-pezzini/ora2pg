-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_gerar_cabecalho_ri (nr_seq_conta_guia_p bigint, nr_seq_guia_nova_p INOUT bigint, nm_usuario_p text) AS $body$
DECLARE


cd_ans_w		varchar(100);
nr_atendimento_w		bigint;
nr_interno_conta_w		bigint;
cd_autorizacao_w		varchar(100);
cd_procedimento_w	varchar(60);
qt_proc_guia_w		smallint;
cd_senha_w		varchar(100);
cd_medico_executor_w	varchar(10);
dt_inicio_vigencia_w	timestamp;
nr_seq_guia_w		bigint;
nr_seq_conta_guia_w	bigint;
nr_seq_guia_nova_w	bigint;
nr_seq_guia_relat_w	bigint;
cd_categoria_conv_w	varchar(20);
nm_medico_executor_w	varchar(255);
sg_conselho_w		varchar(15);
uf_crm_w			varchar(2);
cd_cbo_saude_w		varchar(20);
ie_tipo_atendimento_w	varchar(20);
ie_tipo_saida_w		varchar(20);
cd_edicao_amb_w		varchar(20);
qt_procedimento_w		double precision;
vl_reducao_acrescimo_w	double precision;
vl_procedimento_w		double precision;
VL_TAXAS_w		double precision;
VL_DIARIAS_w		double precision;
VL_MEDICAMENTOS_w	double precision;
VL_MATERIAIS_w		double precision;
VL_GASES_w		double precision;
vl_opm_w		double precision;
vl_total_opm_w		double precision;
vl_opms_w		double precision;
vl_tot_opm_w		double precision;
vl_alugueis_w		double precision;
vl_total_geral_opm_w	double precision;
qt_obito_tardio_w		integer;
qt_obito_precoce_w	integer;
dt_entrada_w		timestamp;
dt_emissao_guia_w	timestamp;
dt_alta_w			timestamp;
dt_ass_contratado_w	timestamp;
ie_via_acesso_w		varchar(20);
ie_totalizar_opm_w		varchar(20);
ie_dt_contrat_ri_w		varchar(5);
vl_unitario_w		double precision;
ds_procedimento_w	varchar(255);
dt_procedimento_w	timestamp;
vl_total_w		double precision := 0;
cont_w			integer := 0;
ds_razao_social_w		varchar(255);
ie_campo_boolean_w	varchar(3);
cd_cnes_w		varchar(20);
qt_nasc_prematuro_w	varchar(5);
cd_cgc_w			varchar(20);
qt_autorizada_w		double precision;
dt_autorizacao_w		timestamp;
cd_doenca_cid_w		varchar(20);
ds_observacao_w		varchar(255);
ds_observacao_guia_w	varchar(255);
cd_opm_w		bigint;
ds_opm_w		varchar(255);
nr_crm_w		varchar(20);
nr_seq_apresentacao_w	bigint;
nr_seq_procedimento_w	bigint;
nr_seq_apres_partic_w	bigint;
ds_funcao_medico_w	varchar(20);
nr_cpf_w			varchar(20);
cd_cid_obito_w		varchar(20);
nr_declaracao_w		varchar(20);
cd_cid_w			varchar(20);
cd_cid2_w		varchar(20);
ds_carater_internacao_w	varchar(10);
ds_tipo_saida_w		varchar(10);
ie_tipo_protocolo_w	varchar(10);
cd_tipo_acomodacao_w	varchar(10);
ie_regime_internacao_w	varchar(10);
ie_clinica_w		varchar(10);
ds_tipo_faturamento_w	varchar(10);
ds_arquivo_logo_w		varchar(140);
ie_tiss_tipo_guia_w		varchar(140);
cd_convenio_w		integer;
ie_obito_mulher_w		varchar(2);
nr_dnv_w		varchar(255);
CD_MEDICO_CONVENIO_w	varchar(140);
ie_parto_cesaria_W	varchar(10);
ie_parto_normal_W	varchar(10);
qt_nasc_vivos_W		smallint;
qt_nasc_mortos_w		smallint;
nr_seq_apresent_W	bigint;
dt_inicio_cirurgia_w	timestamp;
dt_fim_cirurgia_w		timestamp;
ie_gestacao_w		varchar(2);
ie_aborto_w		varchar(2);
ie_transtorno_w		varchar(2);
ie_complicacao_puerperio_w	varchar(2);
ie_complicacao_neonatal_w	varchar(2);
ie_baixo_peso_w		varchar(2);
ie_atend_rn_sala_parto_w 	varchar(2);
cd_autorizacao_princ_w	varchar(255);
cd_cgc_prestador_w	varchar(255);
vl_procedimento_total_w	double precision;
cd_estabelecimento_w	bigint;
cd_prestador_convenio_w	varchar(255);
dt_validade_senha_w		timestamp;
cd_pessoa_fisica_w		varchar(10);
nm_pessoa_fisica_w		varchar(255);
nr_cartao_nac_sus_w		numeric(20);
ds_plano_w			varchar(100);
dt_validade_carteira_w		timestamp;
cd_usuario_convenio_w		varchar(30);
ie_total_geral_opm_w		varchar(1);
nr_seq_classif_atend_w		bigint;
ie_dt_autor_ri_w		varchar(10);
ie_dt_validade_senha_ri_w	varchar(10);
nr_guia_prestador_w		varchar(60);
ie_cd_autorizacao_relat_w	varchar(255);
ie_tipo_fatur_tiss_w		varchar(10);
cd_setor_entrada_w		bigint;
ie_tipo_atend_tiss_w		varchar(10);
ie_obito_parcial_w		varchar(10);
ie_atendimento_rn_w		varchar(2);
ds_versao_w			varchar(20);
ie_tipo_acidente_w		varchar(10);
vl_taxas_alugueis_w		double precision;
dt_mesano_referencia_w		timestamp;
nm_usuario_ass_contrat_w		tiss_parametros_convenio.nm_usuario_assinatura_contrat%type;
ds_assinatura_contrat_w		varchar(255);
nr_dfm_w                    	tiss_conta_atend.nr_dfm%type;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.cd_autorizacao,
	b.ie_carater_internacao,
	'A' ds_tipo_saida,
	a.nr_interno_conta,
	b.nr_atendimento,
	b.dt_entrada,
	a.ie_tipo_saida,
	b.ie_tipo_acomodacao,
	b.ie_regime_internacao,
	b.ie_tipo_internacao,
	b.ds_tipo_fatur,
	b.dt_alta,
	a.ie_tiss_tipo_guia,
	a.cd_autorizacao_princ,
	a.cd_cgc_prestador,
	a.cd_convenio,
	a.cd_ans,
	coalesce(sum(VL_TAXAS),0),
	coalesce(sum(VL_DIARIAS),0),
	coalesce(sum(VL_MEDICAMENTOS),0),
	coalesce(sum(VL_MATERIAIS),0),
	coalesce(sum(VL_GASES),0),
	coalesce(sum(vl_servicos),0),
	coalesce(sum(vl_total),0),
	coalesce(sum(vl_opms),0),
	coalesce(sum(a.vl_alugueis), 0),
	coalesce(sum(a.vl_taxas_alugueis),0),
	a.cd_senha,
	a.dt_validade_senha,
	a.dt_autorizacao,
	a.cd_cid,
	b.cd_cid_obito,
	a.cd_cid_2,
	cd_pessoa_fisica,
	nm_pessoa_fisica,
	nr_cartao_nac_sus,
	ds_plano,
	dt_validade_carteira,
	cd_usuario_convenio,
	a.dt_emissao_guia,
	b.nr_dnv,
	b.qt_nasc_vivo,
	b.qt_nasc_morto,
	b.ie_gestacao,
	b.ie_aborto,
	b.ie_transtorno,
	b.ie_complic_puerperio,
	b.ie_complic_neonatal,
	b.ie_baixo_peso,
	b.ie_atend_rn,
	b.IE_CESAReo,
	b.IE_NORMAL,
	b.qt_nasc_prematuro,
	b.qt_obito_precoce,
	b.qt_obito_tardio,
	substr(a.ds_observacao,1,255),
	a.nr_guia_prestador,
	b.ie_atendimento_rn,
	b.nr_declaracao_obito,
	b.ie_obito_mulher,
	b.ie_tipo_acidente,
    	b.nr_dfm
from	tiss_conta_guia a,
	tiss_conta_atend b
where	a.nr_interno_conta	= b.nr_interno_conta
and	a.nr_sequencia		= nr_seq_conta_guia_p
and	a.ie_tiss_tipo_guia	= '5'
group by a.nr_sequencia,
	a.cd_autorizacao,
	b.ie_carater_internacao,
	'A',
	a.nr_interno_conta,
	b.nr_atendimento,
	b.dt_entrada,
	a.ie_tipo_saida,
	b.ie_tipo_acomodacao,
	b.ie_regime_internacao,
	b.ie_tipo_internacao,
	b.ds_tipo_fatur,
	b.dt_alta,
	a.cd_ans,
	a.ie_tiss_tipo_guia,
	a.cd_autorizacao_princ,
	a.cd_cgc_prestador,
	a.cd_convenio,
	a.cd_senha,
	a.dt_validade_senha,
	a.dt_autorizacao,
	a.cd_cid,
	b.cd_cid_obito,
	a.cd_cid_2,
	cd_pessoa_fisica,
	nm_pessoa_fisica,
	nr_cartao_nac_sus,
	ds_plano,
	dt_validade_carteira,
	cd_usuario_convenio,
	a.dt_emissao_guia,
	b.nr_dnv,
	b.qt_nasc_vivo,
	b.qt_nasc_morto,
	b.ie_gestacao,
	b.ie_aborto,
	b.ie_transtorno,
	b.ie_complic_puerperio,
	b.ie_complic_neonatal,
	b.ie_baixo_peso,
	b.ie_atend_rn,
	b.IE_CESAReo,
	b.IE_NORMAL,
	b.qt_nasc_prematuro,
	b.qt_obito_precoce,
	b.qt_obito_tardio,
	substr(a.ds_observacao,1,255),
	a.nr_guia_prestador,
	b.ie_atendimento_rn,
	b.nr_declaracao_obito,
	b.ie_obito_mulher,
	b.ie_tipo_acidente,
	b.nr_dfm
order by a.cd_autorizacao;


BEGIN

if (coalesce(nr_seq_conta_guia_p,0)	> 0) then

	select	max(c.cd_prestador_convenio)
	into STRICT	cd_prestador_convenio_w
	from	protocolo_convenio c,
		conta_paciente b,
		tiss_conta_guia a
	where	a.nr_interno_conta	= b.nr_interno_conta
	and	b.nr_seq_protocolo	= c.nr_seq_protocolo
	and	a.nr_sequencia		= nr_seq_conta_guia_p;

	open c01;
	loop
	fetch c01 into
		nr_seq_conta_guia_w,
		cd_autorizacao_w,
		ds_carater_internacao_w,
		ds_tipo_saida_w,
		nr_interno_conta_w,
		nr_atendimento_w,
		dt_entrada_w,
		ie_tipo_saida_w,
		cd_tipo_acomodacao_w,
		ie_regime_internacao_w,
		ie_clinica_w,
		ds_tipo_faturamento_w,
		dt_alta_w,
		ie_tiss_tipo_guia_w,
		cd_autorizacao_princ_w,
		cd_cgc_prestador_w,
		cd_convenio_w,
		cd_ans_w,
		VL_TAXAS_w,
		VL_DIARIAS_w,
		VL_MEDICAMENTOS_w,
		VL_MATERIAIS_w,
		VL_GASES_w,
		vl_procedimento_total_w,
		vl_total_w,
		vl_opms_w,
		vl_alugueis_w,
		vl_taxas_alugueis_w,
		cd_senha_w,
		dt_validade_senha_w,
		dt_autorizacao_w,
		cd_cid_w,
		cd_cid_obito_w,
		cd_cid2_w,
		cd_pessoa_fisica_w,
		nm_pessoa_fisica_w,
		nr_cartao_nac_sus_w,
		ds_plano_w,
		dt_validade_carteira_w,
		cd_usuario_convenio_w,
		dt_emissao_guia_w,
		nr_dnv_w,
		qt_nasc_vivos_W,
		qt_nasc_mortos_w,
		ie_gestacao_w,
		ie_aborto_w,
		ie_transtorno_w,
		ie_complicacao_puerperio_w,
		ie_complicacao_neonatal_w,
		ie_baixo_peso_w,
		ie_atend_rn_sala_parto_w,
		IE_PARTO_CESARIA_w,
		IE_PARTO_NORMAL_w,
		qt_nasc_prematuro_w,
		qt_obito_precoce_w,
		qt_obito_tardio_w,
		ds_observacao_guia_w,
		nr_guia_prestador_w,
		ie_atendimento_rn_w,
		nr_declaracao_w,
		ie_obito_mulher_w,
		ie_tipo_acidente_w,
        	nr_dfm_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		select	max(nr_seq_apresent),
			max(cd_categoria_parametro),
			max(cd_estabelecimento),
			max(dt_mesano_referencia)
		into STRICT	nr_seq_apresent_w,
			cd_categoria_conv_w,
			cd_estabelecimento_w,
			dt_mesano_referencia_w
		from	conta_paciente
		where	nr_interno_conta	= nr_interno_conta_w;

		select 	max((Obter_Classificacao_Atend(nr_atendimento_w,'C'))::numeric ),
			max(obter_setor_atendimento(nr_atendimento_w))
		into STRICT 	nr_seq_classif_atend_w,
			cd_setor_entrada_w
		;
		
		select	max(nr_atendimento)
		into STRICT	ie_tipo_atend_tiss_w
		from	atendimento_paciente
		where	nr_atendimento	= nr_atendimento_w;

		select	coalesce(max(ie_campo_boolean), 'B'),
			coalesce(max(ie_dt_contrat_ri), 'N'),
			coalesce(max(ie_total_geral_opm),'N'),
			coalesce(max(ie_dt_autor_ri),'D'),
			coalesce(max(ie_dt_validade_senha_ri),'D'),
			coalesce(max(ie_cd_autorizacao_relat),'O'),
			coalesce(max(ie_obito_parcial),'S'),
			max(nm_usuario_assinatura_contrat)			
		into STRICT	ie_campo_boolean_w,
			ie_dt_contrat_ri_w,
			ie_total_geral_opm_w,
			ie_dt_autor_ri_w,
			ie_dt_validade_senha_ri_w,
			ie_cd_autorizacao_relat_w,
			ie_obito_parcial_w,
			nm_usuario_ass_contrat_w
		from	tiss_parametros_convenio
		where	cd_convenio		= cd_convenio_w
		and	cd_estabelecimento	= cd_estabelecimento_w;
		
		begin
			select 	max(cd_pessoa_fisica)
			into STRICT	ds_assinatura_contrat_w
			from 	usuario
			where 	nm_usuario = nm_usuario_ass_contrat_w;
		exception
		when others then
			null;			
		end;
		
		select	tiss_obter_versao(cd_convenio_w,cd_estabelecimento_w,dt_mesano_referencia_w)
		into STRICT	ds_versao_w
		;

		dt_ass_contratado_w	:= to_date(null);
		if (ie_dt_contrat_ri_w	= 'A') then
			dt_ass_contratado_w	:= dt_alta_w;
		end if;

		if (ie_dt_autor_ri_w = 'D') then
			dt_autorizacao_w := dt_autorizacao_w;
		elsif (ie_dt_autor_ri_w = 'E') then			
			select 	coalesce(max(dt_entrada),dt_autorizacao_w)
			into STRICT 	dt_autorizacao_w
			from 	atendimento_paciente
			where 	nr_atendimento	= nr_atendimento_w;
		elsif (ie_dt_autor_ri_w = 'I') then			
			dt_autorizacao_w	:= coalesce(tiss_obter_data_internacao(nr_atendimento_w), dt_autorizacao_w);
		elsif (ie_dt_autor_ri_w = 'C') then			
			select 	coalesce(max(dt_periodo_inicial),dt_autorizacao_w)
			into STRICT 	dt_autorizacao_w
			from 	conta_paciente
			where 	nr_interno_conta 	= nr_interno_conta_w;
		elsif (ie_dt_autor_ri_w = 'PC') then			
			select	coalesce(min(dt_procedimento),dt_autorizacao_w)
			into STRICT	dt_autorizacao_w
			from	procedimento_paciente
			where	nr_interno_conta		= nr_interno_conta_w
			and	coalesce(cd_motivo_exc_conta::text, '') = '';
		elsif (ie_dt_autor_ri_w = 'AT') then 		
			select	max(ie_tipo_fatur_tiss)
			into STRICT	ie_tipo_fatur_tiss_w
			from 	conta_paciente
			where	nr_interno_conta	= nr_interno_conta_w;
			
			if (ie_tipo_fatur_tiss_w = 'T') then
				select	coalesce(max(b.dt_alta), max(a.dt_alta_tiss))
				into STRICT	dt_autorizacao_w
				from 	conta_paciente a,
					atendimento_paciente b
				where	b.nr_atendimento	= a.nr_atendimento
				and	a.nr_interno_conta	= nr_interno_conta_w;
			else
				dt_autorizacao_w	:= dt_autorizacao_w;
			end if;				
		end if;			

		if (ie_dt_validade_senha_ri_w = 'D') then
			dt_validade_senha_w	:= dt_validade_senha_w;
		elsif (ie_dt_validade_senha_ri_w = 'A') then
			dt_validade_senha_w	:= coalesce(Obter_data_alta_Atendimento(nr_atendimento_w),dt_validade_senha_w);
		elsif (ie_dt_validade_senha_ri_w = 'C') then
			select 	coalesce(max(dt_periodo_final),dt_validade_senha_w)
			into STRICT 	dt_validade_senha_w
			from 	conta_paciente
			where 	nr_interno_conta 	= nr_interno_conta_w;			
		end if;		

		ds_observacao_w		:= tiss_obter_regra_campo(5, 'DS_OBSERVACAO', CD_CONVENIO_W, ds_observacao_guia_w, ie_tipo_atendimento_w, cd_categoria_conv_w, 'N', 0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, ie_tipo_atend_tiss_w||'#@');
		ds_assinatura_contrat_w 	:= tiss_obter_regra_campo(5, 'DS_ASSINATURA_CONTRAT', CD_CONVENIO_W, ds_assinatura_contrat_w, ie_tipo_atendimento_w, cd_categoria_conv_w, 'N', 0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, ie_tipo_atend_tiss_w||'#@');
		
		if (ie_campo_boolean_w	= 'S') then

			select	CASE WHEN ie_gestacao_w='0' THEN  'N' WHEN ie_gestacao_w='1' THEN  'S'  ELSE '' END ,
				CASE WHEN ie_aborto_w='0' THEN  'N' WHEN ie_aborto_w='1' THEN  'S'  ELSE '' END ,
				CASE WHEN ie_transtorno_w='0' THEN  'N' WHEN ie_transtorno_w='1' THEN  'S'  ELSE '' END ,
				CASE WHEN ie_complicacao_puerperio_w='0' THEN  'N' WHEN ie_complicacao_puerperio_w='1' THEN  'S'  ELSE '' END ,
				CASE WHEN ie_complicacao_neonatal_w='0' THEN  'N' WHEN ie_complicacao_neonatal_w='1' THEN  'S'  ELSE '' END ,
				CASE WHEN ie_baixo_peso_w='0' THEN  'N' WHEN ie_baixo_peso_w='1' THEN  'S'  ELSE '' END ,
				CASE WHEN ie_atend_rn_sala_parto_w='0' THEN  'N' WHEN ie_atend_rn_sala_parto_w='1' THEN  'S'  ELSE '' END ,
				CASE WHEN IE_PARTO_CESARIA_w='0' THEN  'N' WHEN IE_PARTO_CESARIA_w='1' THEN  'S'  ELSE '' END ,
				CASE WHEN IE_PARTO_NORMAL_w='0' THEN  'N' WHEN IE_PARTO_NORMAL_w='1' THEN  'S'  ELSE '' END
			into STRICT	ie_gestacao_w,
				ie_aborto_w,
				ie_transtorno_w,
				ie_complicacao_puerperio_w,
				ie_complicacao_neonatal_w,
				ie_baixo_peso_w,
				ie_atend_rn_sala_parto_w,
				IE_PARTO_CESARIA_w,
				IE_PARTO_NORMAL_w
			;

		end if;

		if (coalesce(ie_cd_autorizacao_relat_w,'O') = 'P') then
			cd_autorizacao_w	:= coalesce(nr_guia_prestador_w,cd_autorizacao_w);
		end if;

		select	nextval('w_tiss_guia_seq')
		into STRICT	nr_seq_guia_w
		;

		insert	into w_tiss_guia(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_ans,
			cd_autorizacao,
			dt_autorizacao,
			cd_senha,
			dt_validade_senha,
			dt_emissao_guia,
			nr_interno_conta,
			nr_seq_protocolo,
			cd_autorizacao_princ,
			nr_seq_apresentacao,
			nr_atendimento,
			ie_tiss_tipo_guia,
			nr_seq_conta_guia,
			dt_assinatura_contrat,
			ds_observacao,
			ie_atendimento_rn,
			ds_versao,
			nr_guia_prestador,
			ds_assinatura_contrat)
		values (nr_seq_guia_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_ans_w,
			cd_autorizacao_w,
			dt_autorizacao_w,
			cd_senha_w,
			dt_validade_senha_w,
			dt_emissao_guia_w,
			nr_interno_conta_w,
			null,
			cd_autorizacao_princ_w,
			nr_seq_apresent_w,
			nr_atendimento_w,
			'5',
			nr_seq_conta_guia_w,
			dt_ass_contratado_w,
			ds_observacao_w,
			ie_atendimento_rn_w,
			ds_versao_w,
			nr_guia_prestador_w,
			ds_assinatura_contrat_w);

		insert	into w_tiss_beneficiario(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_seq_guia,
			cd_pessoa_fisica,
			nm_pessoa_fisica,
			nr_cartao_nac_sus,
			ds_plano,
			dt_validade_carteira,
			cd_usuario_convenio)
		values (nextval('w_tiss_beneficiario_seq'),
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_guia_w,
			cd_pessoa_fisica_w,
			nm_pessoa_fisica_w,
			nr_cartao_nac_sus_w,
			ds_plano_w,
			dt_validade_carteira_w,
			cd_usuario_convenio_w);

		insert	into w_tiss_contratado_exec(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_seq_guia,
			cd_cgc,
			cd_interno,
			nr_cpf,
			nm_contratado,
			ds_tipo_logradouro,
			ds_logradouro,
			nm_municipio,
			sg_estado,
			cd_municipio_ibge,
			cd_cep,
			cd_cnes,
			nm_medico_executor,
			sg_conselho,
			nr_crm,
			uf_crm,
			cd_cbo_saude,
			nr_endereco)
		SELECT	nextval('w_tiss_contratado_exec_seq'),
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_guia_w,
			cd_cgc,
			coalesce(cd_prestador_convenio_w, cd_interno),
			nr_cpf_w,
			nm_contratado,
			ie_tipo_acomodacao,
			ds_logradouro,
			nm_municipio,
			sg_estado,
			cd_municipio_ibge,
			cd_cep,
			cd_cnes,
			nm_exec_compl,
			sg_conselho_compl,
			nr_crm_compl,
			uf_conselho_compl,
			cd_cbos_compl,
			nr_endereco
		from	tiss_conta_contrat_exec a
		where	nr_seq_guia	= nr_seq_conta_guia_w;

		insert	into w_tiss_dados_atendimento(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_seq_guia,
			ie_tipo_atendimento,
			ie_tipo_saida,
			ie_tipo_acidente)
		values (nextval('w_tiss_dados_atendimento_seq'),
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_guia_w,
			ie_tipo_atendimento_w,
			ie_tipo_saida_w,
			ie_tipo_acidente_w);

		/* Tem que buscar da TISS_CONTA_ATEND
		select	max(nr_declaracao),
			max(ie_obito_mulher)
		into	nr_declaracao_w,
			ie_obito_mulher_w
		from	tiss_obito_v a
		where	ds_versao			= '2.01.01'
		and	nr_atendimento			= nr_atendimento_w;*/
		
		if (coalesce(ie_obito_parcial_w,'S') = 'N') and (ds_tipo_faturamento_w = 'P') then
			nr_declaracao_w		:= null;
			ie_obito_mulher_w	:= null;
		end if;

		/*select	max(nr_DNV)
		into	nr_dnv_w
		from	tiss_nascimento_v
		where	nr_atendimento			= nr_atendimento_w;

		select	max(qt_nasc_vivos),
			max(qt_nasc_mortos),
			max(ie_gestacao),
			max(ie_aborto),
			max(ie_transtorno),
			max(ie_complicacao_puerperio),
			max(ie_complicacao_neonatal),
			max(ie_baixo_peso),
			max(ie_atend_rn_sala_parto),
			max(IE_PARTO_CESARIA),
			max(IE_PARTO_NORMAL),
			max(qt_nasc_vivos_prematuros)
		into	qt_nasc_vivos_W,
			qt_nasc_mortos_w,
			ie_gestacao_w,
			ie_aborto_w,
			ie_transtorno_w,
			ie_complicacao_puerperio_w,
			ie_complicacao_neonatal_w,
			ie_baixo_peso_w,
			ie_atend_rn_sala_parto_w,
			IE_PARTO_CESARIA_w,
			IE_PARTO_NORMAL_w,
			qt_nasc_prematuro_w
		from	tiss_internacao_obstetrica_v
		where	nr_atendimento			= nr_atendimento_w;*/
		
		if (obter_se_projeto_versao(0,12,ds_versao_w,0) = 'S')  then	

			select	CASE WHEN ds_tipo_faturamento_w='P' THEN '1' WHEN ds_tipo_faturamento_w='F' THEN '2' WHEN ds_tipo_faturamento_w='C' THEN '3' WHEN ds_tipo_faturamento_w='T' THEN '4'  ELSE '4' END
			into STRICT	ds_tipo_faturamento_w
			;			
			
			if (ds_carater_internacao_w = 'E') then
				ds_carater_internacao_w	:= '1';
			else
				ds_carater_internacao_w	:= '2';
			end if;			
		end if;			

		insert into w_tiss_internacao(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_seq_guia,
			ie_carater_internacao,
			ie_tipo_acomodacao,
			dt_internacao,
			dt_alta,
			ie_tipo_internacao,
			ie_regime_internacao,
			ie_internacao_obstetrica,
			cd_cid,
			ie_motivo_saida,
			cd_cid_obito,
			nr_declaracao_obito,
			ie_obito_mulher,
			nr_declaracao_dn,
			qt_nasc_vivo,
			qt_nasc_mortos,
			cd_cid_2,
			IE_ABORTO,
			IE_ATEND_RN,
			IE_BAIXO_PESO,
			IE_CESAREO,
			IE_COMPLIC_NEONATAL,
			IE_COMPLIC_PUERPERIO,
			IE_GESTACAO,
			IE_NORMAL,
			IE_TRANSTORNO,
			qt_nasc_prematuro,
			qt_obito_tardio,
			qt_obito_precoce,
            		nr_dfm)
		values (nextval('w_tiss_internacao_seq'),
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_guia_w,
			ds_carater_internacao_w,
			cd_tipo_acomodacao_w,
			dt_entrada_w,
			dt_alta_w,
			ie_clinica_w,
			ie_regime_internacao_w,
			CASE WHEN ie_clinica_w='3' THEN  'S'  ELSE null END ,
			cd_cid_w,
			ie_tipo_saida_w,
			cd_cid_obito_w,
			nr_declaracao_w,
			ie_obito_mulher_w,
			nr_dnv_w,
			qt_nasc_vivos_W,
			qt_nasc_mortos_w,
			cd_cid2_w,
			ie_aborto_w,
			ie_atend_rn_sala_parto_w,
			ie_baixo_peso_w,
			IE_PARTO_CESARIA_w,
			ie_complicacao_neonatal_w,
			ie_complicacao_puerperio_w,
			ie_gestacao_w,
			IE_PARTO_NORMAL_w,
			ie_transtorno_w,
			(qt_nasc_prematuro_w)::numeric ,
			qt_obito_tardio_w,
			qt_obito_precoce_w,
            		nr_dfm_w);

		/* 17/12/2007. Inclui esta linha por o campo se refere a taxas + alugueis */

		vl_taxas_w	:= vl_taxas_w + vl_alugueis_w;

		vl_total_geral_opm_w	:= null;
		if (coalesce(ie_total_geral_opm_w,'N') = 'S') then
			vl_total_geral_opm_w	:= coalesce(vl_opms_w,0);
		end if;		


		insert	into w_tiss_totais(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_seq_guia,
			vl_procedimentos,
			vl_taxas,
			vl_materiais,
			vl_medicamentos,
			vl_diarias,
			vl_gases,
			vl_total_geral,
			vl_total_geral_opm,
			ie_tipo_faturamento,
			vl_taxas_alugueis)
		values (nextval('w_tiss_totais_seq'),
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_guia_w,
			(tiss_obter_regra_campo(5, 'VL_TOTAL', CD_CONVENIO_W, vl_procedimento_total_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N', 0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, ie_tipo_atend_tiss_w||'#@'))::numeric ,
			(tiss_obter_regra_campo(5, 'VL_TAXAS', CD_CONVENIO_W, VL_TAXAS_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N', 0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, ie_tipo_atend_tiss_w||'#@'))::numeric ,
			(tiss_obter_regra_campo(5, 'VL_MATERIAIS', CD_CONVENIO_W, VL_MATERIAIS_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N', 0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, ie_tipo_atend_tiss_w||'#@'))::numeric ,
			(tiss_obter_regra_campo(5, 'VL_MEDICAMENTOS', CD_CONVENIO_W, VL_MEDICAMENTOS_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N', 0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, ie_tipo_atend_tiss_w||'#@'))::numeric ,
			(tiss_obter_regra_campo(5, 'VL_DIARIAS', CD_CONVENIO_W, VL_DIARIAS_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N', 0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, ie_tipo_atend_tiss_w||'#@'))::numeric ,
			(tiss_obter_regra_campo(5, 'VL_GASES', CD_CONVENIO_W, VL_GASES_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N', 0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, ie_tipo_atend_tiss_w||'#@'))::numeric ,
			(tiss_obter_regra_campo(5, 'VL_TOTAL', CD_CONVENIO_W, vl_total_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N', 0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, ie_tipo_atend_tiss_w||'#@'))::numeric ,
			vl_total_geral_opm_w,
			ds_tipo_faturamento_w,
			(tiss_obter_regra_campo(5, 'VL_TAXAS', CD_CONVENIO_W, vl_taxas_alugueis_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N', 0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, ie_tipo_atend_tiss_w||'#@'))::numeric );

		nr_seq_guia_nova_p	:= nr_seq_guia_w;

	end loop;
	close c01;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_gerar_cabecalho_ri (nr_seq_conta_guia_p bigint, nr_seq_guia_nova_p INOUT bigint, nm_usuario_p text) FROM PUBLIC;

