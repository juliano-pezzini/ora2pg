-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_verifica_atualizacao_cad ( nr_seq_segurado_p bigint, ie_origem_validacao_p text, nr_seq_regra_atualizacao_p INOUT bigint, ie_funcao_validacao_p INOUT text, cd_pessoa_fisica_p INOUT text) AS $body$
DECLARE



nr_seq_solic_alt_w			bigint	:= null;
cd_pessoa_fisica_w		varchar(10) 	:= '';
ie_valida_tasy_w			varchar(1)	:= 'N';
ie_valida_portal_w			varchar(1)	:= 'N';
qt_dias_atualizacao_w		integer 	:= 0;
nr_seq_regra_atualizacao_w		bigint	:= null;
qt_atualizacao_w			integer	:= null;
ie_funcao_validacao_w		varchar(2)	:= null;
ie_tipo_regra_w			varchar(2);
qt_reg_w				bigint;
nr_seq_regra_w			bigint;
ie_tipo_segurado_w			varchar(2);

ie_valida_sexo_w			varchar(1);
ie_valida_rg_w			varchar(1);
ie_valida_cpf_w			varchar(1);
ie_valida_nm_mae_w		varchar(1);
ie_valida_dt_nasc_w		varchar(1);
ie_valida_endereco_w		varchar(1);
--
ie_valida_telefone_w		varchar(1);
ie_valida_celular_w			varchar(1);
ie_valida_pis_w			varchar(1);
ie_valida_declaracao_nasc_w	varchar(1);
ie_valida_email_w			varchar(1);
ie_valida_uf_w			varchar(1);
ie_valida_estado_civil_w		varchar(1);
ie_valida_cartao_nac_sus_w		varchar(1);

ie_sexo_w			varchar(1);
nr_cpf_w				varchar(11);
nr_identidade_w			varchar(15);
nm_mae_w			varchar(255);
dt_nascimento_w			timestamp;
ie_estado_civil_w			varchar(2);
nr_cartao_nac_sus_w		varchar(20);
cd_declaracao_nasc_vivo_w		varchar(30);
nr_ddd_celular_w			varchar(3);
nr_ddi_celular_w			varchar(3);
nr_telefone_celular_w		varchar(40);
nr_pis_pasep_w			varchar(11);

ds_endereco_w			varchar(100);
nr_endereco_w			integer;
ds_bairro_w			varchar(80);
ds_municipio_w			varchar(40);
sg_estado_w			compl_pessoa_fisica.sg_estado%type;
ds_email_w			varchar(255);
nr_ddd_telefone_w			varchar(3);
nr_ddi_telefone_w			varchar(3);
nr_telefone_w			varchar(15);

ie_falta_informacao_w		varchar(1) := 'N';

C01 CURSOR FOR
	SELECT 	nr_sequencia,
		qt_dias_atualizacao
	from	pls_regra_atualizacao_cad
	where	ie_tipo_regra = 'D'
	and	dt_inicio_vigencia <= clock_timestamp()
	and 	(((dt_fim_vigencia IS NOT NULL AND dt_fim_vigencia::text <> '') and dt_fim_vigencia > clock_timestamp()) or (coalesce(dt_fim_vigencia::text, '') = ''))
	and	((ie_origem_validacao_p = 'P' and ie_valida_portal = 'S')
	or (ie_origem_validacao_p = 'C' and ie_valida_tasy = 'S')
	or (ie_origem_validacao_p = 'A' and ie_valida_autorizacao = 'S'))
	and	((ie_benef_operadora = 'S' and ie_tipo_segurado_w in ('A','B','R'))
	or (ie_benef_intercambio = 'S' and ie_tipo_segurado_w in ('I','H')));


BEGIN

begin
	select 	cd_pessoa_fisica,
		ie_tipo_segurado
	into STRICT	cd_pessoa_fisica_w,
		ie_tipo_segurado_w
	from	pls_segurado
	where	nr_sequencia		= nr_seq_segurado_p
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and (coalesce(dt_limite_utilizacao::text, '') = '' or dt_limite_utilizacao >= clock_timestamp());
exception
when others then
	cd_pessoa_fisica_w := null;
	ie_tipo_segurado_w := 'X';
end;


if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
	select 	max(nr_sequencia)
	into STRICT	nr_seq_regra_w
	from	pls_regra_atualizacao_cad
	where	dt_inicio_vigencia <= clock_timestamp()
	and 	(((dt_fim_vigencia IS NOT NULL AND dt_fim_vigencia::text <> '') and dt_fim_vigencia > clock_timestamp()) or (coalesce(dt_fim_vigencia::text, '') = ''))
	and	((ie_origem_validacao_p = 'P' and ie_valida_portal = 'S')
	or (ie_origem_validacao_p = 'C' and ie_valida_tasy = 'S')
	or (ie_origem_validacao_p = 'A' and ie_valida_autorizacao = 'S'))
	and	((ie_benef_operadora = 'S' and ie_tipo_segurado_w in ('A','B','R'))
	or (ie_benef_intercambio = 'S' and ie_tipo_segurado_w in ('I','H')));

	begin
		select	ie_tipo_regra,
			coalesce(ie_funcao_validacao,1)
		into STRICT	ie_tipo_regra_w,
			ie_funcao_validacao_w
		from	pls_regra_atualizacao_cad
		where	nr_sequencia = nr_seq_regra_w;
	exception
	when others then
		ie_tipo_regra_w := 'X';
	end;

	if (ie_tipo_regra_w = 'D') then
		select	coalesce(max(a.nr_sequencia),0)
		into STRICT	nr_seq_solic_alt_w
		from	tasy_solic_alteracao a,
			tasy_solic_alt_campo b
		where	coalesce(a.dt_analise::text, '') = ''
		and	a.nr_sequencia = b.nr_seq_solicitacao
		and	b.nm_tabela in ('PESSOA_FISICA', 'COMPL_PESSOA_FISICA')
		and (b.ds_chave_simples = cd_pessoa_fisica_w
			or (substr(b.ds_chave_composta,1,length('CD_PESSOA_FISICA='||cd_pessoa_fisica_w)) = 'CD_PESSOA_FISICA='||cd_pessoa_fisica_w));


		if ( nr_seq_solic_alt_w = 0 ) then
			open C01;
			loop
			fetch C01 into
				nr_seq_regra_atualizacao_w,
				qt_dias_atualizacao_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				if ( (qt_dias_atualizacao_w IS NOT NULL AND qt_dias_atualizacao_w::text <> '') and qt_dias_atualizacao_w > 0 ) then
					select	count(1)
					into STRICT	qt_atualizacao_w
					from	pessoa_fisica
					where	cd_pessoa_fisica = cd_pessoa_fisica_w
					and	((coalesce(dt_revisao::text, '') = '')
					or	((dt_revisao + qt_dias_atualizacao_w) <= clock_timestamp()));

					if ( qt_atualizacao_w > 0 ) then
						exit;
					end if;
				end if;
				nr_seq_regra_atualizacao_w := 0;
				end;
			end loop;
			close C01;
		end if;
	elsif (ie_tipo_regra_w = 'C') then

		select	count(1)
		into STRICT	qt_reg_w
		from	pls_regra_campos_cad;

		if (qt_reg_w > 0) then
		begin
			select	ie_valida_sexo,
				ie_valida_rg,
				ie_valida_cpf,
				ie_valida_nm_mae,
				ie_valida_dt_nasc,
				ie_valida_endereco,
				ie_valida_telefone,
				ie_valida_celular,
				ie_valida_pis,
				ie_valida_declaracao_nasc_vivo,
				ie_valida_email,
				ie_valida_uf,
				ie_valida_estado_civil,
				ie_valida_cartao_nac_sus
			into STRICT	ie_valida_sexo_w,
				ie_valida_rg_w,
				ie_valida_cpf_w,
				ie_valida_nm_mae_w,
				ie_valida_dt_nasc_w,
				ie_valida_endereco_w,
				ie_valida_telefone_w,
				ie_valida_celular_w,
				ie_valida_pis_w,
				ie_valida_declaracao_nasc_w,
				ie_valida_email_w,
				ie_valida_uf_w,
				ie_estado_civil_w,
				ie_valida_cartao_nac_sus_w
			from	pls_regra_campos_cad;
			exception
			when others then
			ie_valida_sexo_w := 'N';
						ie_valida_rg_w := 'N';
						ie_valida_cpf_w := 'N';
						ie_valida_nm_mae_w := 'N';
						ie_valida_telefone_w := 'N';
						ie_valida_celular_w := 'N';
						ie_valida_pis_w := 'N';
						ie_valida_declaracao_nasc_w := 'N';
						ie_valida_email_w := 'N';
						ie_valida_uf_w := 'N';
						ie_estado_civil_w := 'N';
						ie_valida_cartao_nac_sus_w := 'N';
						ie_valida_endereco_w := 'N';
			end;

			select	ie_sexo,
				nr_cpf,
				nr_identidade,
				dt_nascimento,
				ie_estado_civil,
				nr_cartao_nac_sus,
				cd_declaracao_nasc_vivo,
				nr_pis_pasep,
				nr_ddd_celular,
				nr_ddi_celular,
				nr_telefone_celular
			into STRICT	ie_sexo_w,
				nr_cpf_w,
				nr_identidade_w,
				dt_nascimento_w,
				ie_estado_civil_w,
				nr_cartao_nac_sus_w,
				cd_declaracao_nasc_vivo_w,
				nr_pis_pasep_w,
				nr_ddd_celular_w,
				nr_ddi_celular_w,
				nr_telefone_celular_w
			from	pessoa_fisica
			where	cd_pessoa_fisica = cd_pessoa_fisica_w;

			select	obter_nome_mae_pf(cd_pessoa_fisica_w)
			into STRICT	nm_mae_w
			;

			if (ie_valida_sexo_w = 'S' and coalesce(ie_sexo_w,'X') = 'X') then
				ie_falta_informacao_w := 'S';
			elsif (ie_valida_rg_w = 'S' and coalesce(nr_identidade_w,'X') = 'X') then
				ie_falta_informacao_w := 'S';
			elsif (ie_valida_cpf_w = 'S' and coalesce(nr_cpf_w,'X') = 'X') then
				ie_falta_informacao_w := 'S';
			elsif (ie_valida_nm_mae_w = 'S' and coalesce(nm_mae_w,'X') = 'X') then
				ie_falta_informacao_w := 'S';
			elsif (ie_valida_dt_nasc_w = 'S' and coalesce(dt_nascimento_w::text, '') = '') then
				ie_falta_informacao_w := 'S';
			elsif (ie_valida_pis_w = 'S' and coalesce(nr_pis_pasep_w,'X') = 'X') then
				ie_falta_informacao_w := 'S';
			elsif (ie_valida_declaracao_nasc_w = 'S' and coalesce(cd_declaracao_nasc_vivo_w,'X') = 'X') then
				ie_falta_informacao_w := 'S';
			elsif (ie_valida_cartao_nac_sus_w = 'S' and coalesce(nr_cartao_nac_sus_w,'X') = 'X') then
				ie_falta_informacao_w := 'S';
			elsif (ie_valida_celular_w = 'S') then
				if((coalesce(nr_ddd_celular_w,'X') = 'X') or (coalesce(nr_ddi_celular_w,'X') = 'X') or (coalesce(nr_telefone_celular_w,'X') = 'X')) then
					ie_falta_informacao_w := 'S';
				end if;
			/*ATENÇÂO: Sempre deixar a validação do endereço por ultimo */

			elsif	((ie_valida_endereco_w = 'S') or (ie_valida_uf_w = 'S')
			or (ie_valida_telefone_w = 'S') or (ie_valida_email_w = 'S')) then

				begin
					select	ds_endereco,
						nr_endereco,
						ds_bairro,
						ds_municipio,
						sg_estado,
						ds_email,
						nr_ddd_telefone,
						nr_ddi_telefone,
						nr_telefone
					into STRICT	ds_endereco_w,
						nr_endereco_w,
						ds_bairro_w,
						ds_municipio_w,
						sg_estado_w,
						ds_email_w,
						nr_ddd_telefone_w,
						nr_ddi_telefone_w,
						nr_telefone_w
					from	Compl_Pessoa_Fisica
					where	cd_pessoa_fisica = cd_pessoa_fisica_w
					and	ie_tipo_complemento = 1;
				exception
				when others then
					ds_endereco_w		:= null;
					nr_endereco_w		:= null;
					ds_bairro_w 		:= null;
					ds_municipio_w		:= null;
					sg_estado_w			:= null;
					ds_email_w			:= null;
					nr_ddd_telefone_w	:= null;
					nr_ddi_telefone_w	:= null;
					nr_telefone_w		:= null;
				end;

				if (coalesce(ds_endereco_w,'X') = 'X') or (coalesce(nr_endereco_w,0) = 0) or (coalesce(ds_bairro_w,'X') = 'X') or (coalesce(ds_municipio_w,'X') = 'X') then
					ie_falta_informacao_w := 'S';
				elsif (ie_valida_uf_w = 'S' and (coalesce(sg_estado_w,'X') = 'X')) then
					ie_falta_informacao_w := 'S';
				elsif (ie_valida_email_w = 'S' and (coalesce(ds_email_w,'X') = 'X')) then
					ie_falta_informacao_w := 'S';
				elsif (ie_valida_telefone_w = 'S') then
					if((coalesce(nr_ddd_telefone_w,'X') = 'X') or (coalesce(nr_ddi_telefone_w,'X') = 'X') or (coalesce(nr_telefone_w,'X') = 'X'))then
						ie_falta_informacao_w := 'S';
					end if;
				end if;
			end if;

			if (ie_falta_informacao_w = 'S') then
				nr_seq_regra_atualizacao_w := nr_seq_regra_w;
			end if;
		end if;
	end if;
end if;

nr_seq_regra_atualizacao_p	:= nr_seq_regra_atualizacao_w;
ie_funcao_validacao_p		:= ie_funcao_validacao_w;
cd_pessoa_fisica_p		:= cd_pessoa_fisica_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_verifica_atualizacao_cad ( nr_seq_segurado_p bigint, ie_origem_validacao_p text, nr_seq_regra_atualizacao_p INOUT bigint, ie_funcao_validacao_p INOUT text, cd_pessoa_fisica_p INOUT text) FROM PUBLIC;

