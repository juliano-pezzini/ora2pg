-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importar_interface ( cd_interface_atual_p bigint, cd_interface_arquivo_p bigint, ds_interface_p text, nm_arquivo_saida_p text, ie_implantar_p text, cd_reg_interface_p bigint, ds_reg_interface_p text, ie_separador_reg_p text, ie_formato_reg_p text, ie_registro_p text, ie_tipo_registro_p text, nr_seq_atributo_p bigint, nm_tabela_p text, nm_atributo_p text, ie_tipo_atributo_p text, qt_tamanho_p bigint, qt_decimais_p bigint, ds_mascara_data_p text, ds_valor_p text, qt_posicao_inicial_p bigint, ie_importa_tabela_p text, ds_regra_validacao_p text, ie_identifica_erro_p text, ie_exporta_p text, ie_tipo_campo_p text, ds_erro_interf_p INOUT text, ds_erro_reg_p INOUT text, ds_erro_atrib_p INOUT text, nm_usuario_p text) AS $body$
DECLARE


cd_interface_w	interface.cd_interface%type;

qt_interface_w		bigint;
qt_registro_w		bigint;
qt_atributo_w		bigint;
ds_erro_interf_w	varchar(2000);
ds_erro_reg_w		varchar(2000);
ds_erro_atrib_w		varchar(2000);


BEGIN

if (coalesce(cd_interface_atual_p,0) <> coalesce(cd_interface_arquivo_p,0)) then
	begin
	begin
	delete	FROM interface_atributo
	where	cd_interface = cd_interface_arquivo_p;

	delete	FROM interface_reg
	where	cd_interface = cd_interface_arquivo_p;

	delete	FROM interface
	where	cd_interface = cd_interface_arquivo_p;
	exception
	when others then
		ds_erro_interf_w :=  sqlerrm;
	end;
	end;
end if;

cd_interface_w	:= cd_interface_arquivo_p;

if (coalesce(cd_interface_w,0) > 0) then

	-- Importar tabela INTERFACE
	select	count(*)
	into STRICT	qt_interface_w
	from	interface
	where	cd_interface = cd_interface_w;

	if (qt_interface_w = 0) then

		begin
			insert into interface(
				cd_interface,
				ds_interface,
				nm_arquivo_saida,
				ie_implantar,
				dt_atualizacao,
				nm_usuario,
				cd_tipo_interface
			) values (
				cd_interface_w,
				ds_interface_p,
				nm_arquivo_saida_p,
				ie_implantar_p,
				clock_timestamp(),
				nm_usuario_p,
				'OUT'
			);
		exception
			when others then
			ds_erro_interf_w	:=  sqlerrm;
		end;

	end if;

	-- Importar tabela INTERFACE_REG
	select	count(*)
	into STRICT	qt_registro_w
	from	interface_reg
	where	cd_interface = cd_interface_w
	and	cd_reg_interface = cd_reg_interface_p;

	if (qt_registro_w = 0) then

		begin
			insert into interface_reg(
				cd_interface,
				cd_reg_interface,
				ds_reg_interface,
				ie_separador_reg,
				ie_formato_reg,
				dt_atualizacao,
				nm_usuario,
				ie_registro,
				ie_tipo_registro
			) values (
				cd_interface_w,
				cd_reg_interface_p,
				ds_reg_interface_p,
				ie_separador_reg_p,
				ie_formato_reg_p,
				clock_timestamp(),
				nm_usuario_p,
				ie_registro_p,
				ie_tipo_registro_p
			);
		exception
			when others then
			ds_erro_reg_w	:= sqlerrm;
		end;

	end if;

	-- Importar tabela INTERFACE_ATRIBUTO
	select	count(*)
	into STRICT	qt_atributo_w
	from	interface_atributo
	where	cd_interface = cd_interface_w
	and	cd_reg_interface = cd_reg_interface_p
	and	nr_seq_atributo = nr_seq_atributo_p;

	if (qt_atributo_w = 0) then

		begin
			insert into interface_atributo(
				cd_interface,
				cd_reg_interface,
				nr_seq_atributo,
				nm_tabela,
				nm_atributo,
				ie_tipo_atributo,
				qt_tamanho,
				dt_atualizacao,
				nm_usuario,
				qt_decimais,
				ds_mascara_data,
				ds_valor,
				qt_posicao_inicial,
				ie_importa_tabela,
				ds_regra_validacao,
				ie_identifica_erro,
				ie_exporta,
				ie_tipo_campo
			) values (
				cd_interface_w,
				cd_reg_interface_p,
				nr_seq_atributo_p,
				nm_tabela_p,
				nm_atributo_p,
				ie_tipo_atributo_p,
				qt_tamanho_p,
				clock_timestamp(),
				nm_usuario_p,
				qt_decimais_p,
				ds_mascara_data_p,
				ds_valor_p,
				qt_posicao_inicial_p,
				ie_importa_tabela_p,
				ds_regra_validacao_p,
				ie_identifica_erro_p,
				ie_exporta_p,
				ie_tipo_campo_p
			);
		exception
		when others then
			ds_erro_atrib_w	:= ds_erro_atrib_p;
		end;

	end if;

end if;

ds_erro_interf_p	:= ds_erro_interf_w;
ds_erro_reg_p		:= ds_erro_reg_w;
ds_erro_atrib_p		:= ds_erro_atrib_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importar_interface ( cd_interface_atual_p bigint, cd_interface_arquivo_p bigint, ds_interface_p text, nm_arquivo_saida_p text, ie_implantar_p text, cd_reg_interface_p bigint, ds_reg_interface_p text, ie_separador_reg_p text, ie_formato_reg_p text, ie_registro_p text, ie_tipo_registro_p text, nr_seq_atributo_p bigint, nm_tabela_p text, nm_atributo_p text, ie_tipo_atributo_p text, qt_tamanho_p bigint, qt_decimais_p bigint, ds_mascara_data_p text, ds_valor_p text, qt_posicao_inicial_p bigint, ie_importa_tabela_p text, ds_regra_validacao_p text, ie_identifica_erro_p text, ie_exporta_p text, ie_tipo_campo_p text, ds_erro_interf_p INOUT text, ds_erro_reg_p INOUT text, ds_erro_atrib_p INOUT text, nm_usuario_p text) FROM PUBLIC;

