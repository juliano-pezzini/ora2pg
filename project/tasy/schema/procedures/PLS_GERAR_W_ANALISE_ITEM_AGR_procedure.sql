-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_w_analise_item_agr ( nr_seq_analise_p bigint, nr_seq_conta_p bigint, nr_seq_grupo_p bigint, ie_minha_analise_p text, ie_pendentes_p text, nm_usuario_p text, ie_somente_ocor_p text default 'N', ie_ocultar_canc_p text default 'N', nr_id_transacao_p w_pls_analise_item.nr_id_transacao%type DEFAULT NULL) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar os procedimentos agrupadores (que possuem participantes) e chamar rotina para
geração dos participantes do mesmo
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_item_w			varchar(255);
nm_prestador_w			varchar(255);
ds_via_acesso_w			varchar(255);
ds_tipo_guia_w			varchar(255);
nm_prestador_solic_w		varchar(255);
nm_prestador_exec_w		varchar(255);
nm_prestador_pag_w		varchar(255);
ds_fornecedor_w			varchar(255);
ds_setor_atend_w		varchar(255);
ds_item_importacao_w		varchar(255);
ds_espec_cbo_w			varchar(255);
ds_medico_executor_w		varchar(255);
ds_grau_partic_w		varchar(255);
ds_status_item_w		varchar(255);
nm_prestador_solic_honor_w	varchar(255);
nm_prestador_exec_honor_w	varchar(255);
ds_tipo_guia_honor_w		varchar(255);
ds_espec_cbo_honor_w		varchar(255);
ds_medico_executor_honor_w	varchar(255);
ie_glosa_w			varchar(255);
nm_medico_executor_imp_w	varchar(255);
ie_autorizado_ww		varchar(255);
ie_tipo_analise_w		varchar(255);
ds_procedimento_w		procedimento.ds_procedimento%TYPE;
ds_ident_nivel_1_w		varchar(60);
ds_ident_nivel_2_w		varchar(60);
ds_ident_nivel_3_w		varchar(60);
ds_medico_partic_w		varchar(60);
ds_identacao_w			varchar(30);
cd_guia_w			varchar(30);
cd_guia_conta_honor_w		varchar(30);
cd_guia_honor_w			varchar(30);
cd_prestador_exec_w		varchar(30);
cd_prestador_exec_honor_w	varchar(30);
ie_autorizado_w			varchar(20);
cd_medico_executor_honor_w	varchar(20);
ie_tipo_guia_conta_honor_w	varchar(20);
ie_autorizado_honor_w		varchar(20);
cd_grau_partic_tiss_w		varchar(20);
ie_tipo_linha_w			varchar(10);
ie_tipo_despesa_w		varchar(10);
ie_tipo_item_w			varchar(10);
cd_medico_w			varchar(10);
ie_via_acesso_w			varchar(10);
cd_porte_anestesico_w		varchar(10);
cd_medico_partic_w		varchar(10);
ie_status_analise_w		varchar(3)	:= 'S';/* Analisado pelo sistema */
ie_pagamento_w			varchar(3)	:= null;
ie_status_item_w		varchar(2);
ie_tipo_guia_w			varchar(2);
ie_expandido_w			varchar(1)	:= null;
ie_pend_grupo_w			varchar(1)	:= null;
ie_minha_analise_w		varchar(1)	:= 'N';
ie_pendentes_w			varchar(1)	:= 'N';
ie_nao_finalizar_w		varchar(1)	:= null;
ie_item_nao_encontrado_w	varchar(1);
ie_proc_ref_w			varchar(1);
ie_selecionado_w		varchar(1)	:= 'N';
ie_sem_fluxo_w			varchar(1)	:= null;
ie_partic_pend_w		varchar(1);
ie_partic_agrup_w		varchar(1);
vl_taxa_servico_imp_w		double precision;
vl_taxa_co_imp_w		double precision;
vl_taxa_material_imp_w		double precision;
vl_taxa_servico_w		double precision;
vl_taxa_co_w			double precision;
vl_taxa_material_w		double precision;
tx_custo_operacional_w		double precision;
tx_material_w			double precision;
tx_medico_w			double precision;
vl_procedimento_imp_w		double precision;
vl_procedimento_imp_ww		double precision;
vl_proc_unitario_w		double precision;
vl_procedimento_w		double precision;
vl_unitario_imp_w		double precision;
vl_glosa_w			double precision;
vl_liberado_w			double precision;
vl_glosa_material_w		double precision;
vl_glosa_hi_w			double precision;
vl_glosa_co_w			double precision;
vl_custo_operacional_w		double precision;
vl_liberado_material_w		double precision;
vl_liberado_co_w		double precision;
vl_liberado_hi_w		double precision;
vl_calculado_material_w		double precision;
vl_calculado_co_w		double precision;
vl_calculado_hi_w		double precision;
vl_taxa_intercambio_w		double precision;
vl_taxa_intercambio_imp_w	double precision;
vl_unitario_apres_w		double precision;
vl_base_w			double precision;
vl_unitario_apres_ww		double precision	:= 0;
vl_taxa_intercambio_imp_ww	double precision	:= 0;
vl_taxa_intercambio_ww		double precision	:= 0;
vl_liberado_material_ww		double precision	:= 0;
vl_liberado_hi_ww		double precision	:= 0;
vl_liberado_co_ww		double precision	:= 0;
vl_liberado_ww			double precision	:= 0;
vl_glosa_material_ww		double precision	:= 0;
vl_glosa_hi_ww			double precision	:= 0;
vl_glosa_co_ww			double precision	:= 0;
vl_glosa_ww			double precision	:= 0;
vl_custo_operacional_ww		double precision	:= 0;
vl_proc_unitario_ww		double precision	:= 0;
vl_calculado_material_ww	double precision	:= 0;
vl_calculado_co_ww		double precision	:= 0;
vl_calculado_hi_ww		double precision	:= 0;
vl_procedimento_ww		double precision	:= 0;
vl_lib_taxa_co_w		double precision;
vl_lib_taxa_material_w		double precision;
vl_lib_taxa_servico_w		double precision;
vl_glosa_taxa_co_w		double precision;
vl_glosa_taxa_material_w	double precision;
vl_glosa_taxa_servico_w		double precision;
vl_lib_taxa_co_honor_w		double precision;
vl_lib_taxa_material_honor_w	double precision;
vl_lib_taxa_servico_honor_w	double precision;
vl_glosa_taxa_co_honor_w	double precision;
vl_glosa_taxa_material_honor_w	double precision;
vl_glosa_taxa_servico_honor_w	double precision;
vl_taxa_co_honor_w		double precision;
vl_taxa_co_imp_honor_w		double precision;
vl_taxa_material_honor_w	double precision;
vl_taxa_material_imp_honor_w	double precision;
vl_taxa_servico_honor_w		double precision;
vl_taxa_servico_imp_honor_w	double precision;
vl_material_ptu_imp_w		double precision;
vl_procedimento_ptu_imp_w	double precision;
vl_co_ptu_imp_w			double precision;
vl_material_ptu_imp_ww		double precision;
vl_procedimento_ptu_imp_ww	double precision;
vl_co_ptu_imp_ww		double precision;
cd_procedimento_w		bigint;
qt_liberado_w			double precision;
qt_procedimento_imp_w		double precision;
qt_liberar_w			double precision;
nr_seq_conta_proc_w		bigint;
nr_seq_conta_proc_ww		bigint;
nr_seq_proc_partic_w		bigint;
nr_seq_prestador_pgto_w		bigint;
nr_seq_prestador_pgto_res_w 	bigint;
nr_seq_proc_pai_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_guia_w			bigint;
nr_seq_guia_honor_w		bigint;
nr_seq_prestador_exec_w		bigint;
nr_seq_protocolo_w		bigint;
nr_seq_prest_fornec_w		bigint;
nr_seq_setor_atend_w		bigint;
nr_auxiliares_w			bigint;
nr_seq_grau_partic_w		bigint;
nr_sequencia_w			bigint	:= 0;
nr_sequencia_aux_w		bigint	:= 0;
qt_informativo_w		bigint;
nr_seq_proc_ref_w		bigint;
nr_seq_prestador_honor_w	bigint;
nr_seq_conta_w			bigint;
nr_seq_protocolo_honor_w	bigint;
nr_seq_prestador_solic_honor_w	bigint;
nr_seq_prestador_exec_honor_w	bigint;
nr_seq_cbo_saude_honor_w	bigint;
qt_selecao_w			bigint;
qt_partic_hi_w			bigint;
qt_partic_ww			bigint;
nr_seq_agrup_analise_w		bigint;
nr_seq_prest_partic_w		bigint;
nr_seq_autogerado_w		bigint;
nr_identificador_w		bigint;
tx_item_w			double precision;
tx_reducao_acrescimo_w		double precision;
tx_intercambio_w		double precision;
tx_intercambio_imp_w		double precision;
qt_fluxo_analise_w		integer;
qt_partic_w			integer;
ie_valor_base_w			smallint;
nr_nivel_w			smallint	:= 1;
dt_procedimento_w		timestamp;
dt_emissao_conta_w		timestamp;
dt_atend_ref_conta_honor_w	timestamp;
ie_pacote_w			varchar(1);
ie_agrup_analise_w		varchar(20);
vl_taxa_servico_imp_ww		double precision	:= 0;
vl_taxa_co_imp_ww		double precision	:= 0;
vl_taxa_material_imp_ww		double precision	:= 0;
vl_lib_taxa_co_honor_ww		double precision 	:= 0;
vl_lib_taxa_material_honor_ww	double precision	:= 0;
vl_lib_taxa_servico_honor_ww	double precision	:= 0;
qt_cobranca_w			double precision;
qt_conta_honor_w		bigint;
nm_prestador_exec_ww		varchar(255);
ie_informativo_w		w_pls_analise_item.ie_informativo%type;
nr_seq_regra_qtde_exec_w	pls_conta_proc.nr_seq_regra_qtde_exec%type;
ie_alto_custo_w			pls_conta_proc.ie_alto_custo%type;
ie_setou_valores_w		varchar(1);
ie_prest_pgto_conta_proc_w	varchar(1);
ie_ocultar_canc_w		varchar(5);
ds_log_call_w			varchar(1500);
ie_exibir_w			varchar(1);
qt_itens_sec_w			integer;
ds_desc_ptu_w			pls_conta_proc_regra.ds_item_ptu%type;
tp_rede_min_w			pls_conta_proc_regra.tp_rede_min%type;
nm_prestador_exec_imp_w		pls_conta.nm_prestador_exec_imp%type;
nr_seq_guia_item_w		pls_conta_proc.nr_seq_guia%type;
ie_aviso_a520_proc_w		pls_conta_proc_regra.ie_a520%type;
ie_aviso_a520_part_w		pls_conta_proc_regra.ie_a520%type;

C01 CURSOR FOR
	/* Procedimentos de mesma conta a serem agrupados NR_SEQ_AGRUP_ANALISE */

	SELECT	a.nr_sequencia,
		'A', /* Agrupador */
		'P', /* Procedimento */
		a.cd_procedimento,
		a.dt_procedimento,
		coalesce(b.ds_procedimento, 'Não encontrado'),
		a.ie_tipo_despesa,
		a.qt_procedimento_imp,
		a.vl_procedimento_imp,
		a.vl_proc_unitario,
		a.vl_procedimento,
		a.ie_origem_proced,
		a.ie_via_acesso,
		a.nr_auxiliares,
		a.cd_porte_anestesico,
		a.nr_seq_setor_atend,
		substr(a.cd_procedimento_imp || ' - ' || a.ds_procedimento_imp,1,255),
		a.vl_glosa_material,
		a.vl_glosa_hi,
		a.vl_glosa_co,
		a.vl_custo_operacional,
		a.vl_liberado_material,
		a.vl_liberado_co,
		a.vl_liberado_hi,
		a.vl_calc_mat_util,
		a.vl_calc_co_util,
		a.vl_calc_hi_util,
		a.tx_intercambio,
		a.tx_intercambio_imp,
		a.qt_procedimento,
		a.tx_item,
		a.vl_glosa,
		a.vl_liberado,
		a.vl_unitario_imp,
		a.ie_valor_base,
		a.vl_taxa_servico_imp,
		a.vl_taxa_co_imp,
		a.vl_taxa_material_imp,
		a.vl_taxa_servico,
		a.vl_taxa_co,
		a.vl_taxa_material,
		a.ie_status,
		CASE WHEN coalesce(b.cd_procedimento::text, '') = '' THEN 'S'  ELSE null END ,
		'S' ie_proc_ref,
		coalesce(a.nr_seq_prestador_pgto,c.nr_seq_prestador_exec),
		CASE WHEN coalesce(a.nr_seq_prestador_pgto::text, '') = '' THEN  'N'  ELSE 'S' END ,
		vl_lib_taxa_co,
		vl_lib_taxa_material,
		vl_lib_taxa_servico,
		vl_glosa_taxa_co,
		vl_glosa_taxa_material,
		vl_glosa_taxa_servico,
		vl_taxa_co,
		vl_taxa_co_imp,
		vl_taxa_material,
		vl_taxa_material_imp,
		vl_taxa_servico,
		vl_taxa_servico_imp,
		a.ie_glosa,
		a.tx_medico,
		a.tx_material,
		a.tx_custo_operacional,
		a.ie_status_pagamento,
		a.nr_seq_agrup_analise,
		a.nr_seq_autogerado,
		a.nr_id_analise,
		vl_material_ptu_imp,
		vl_procedimento_ptu_imp,
		vl_co_ptu_imp,
		a.ie_pacote_ptu,
		'S' ie_agrup_analise,
		a.nr_seq_regra_qtde_exec,
		a.ie_alto_custo,
		(	SELECT 	tp_rede_min
			from	pls_conta_proc_regra x
			where 	x.nr_sequencia = a.nr_sequencia) tp_rede_min,
		(	select 	ds_item_ptu
			from	pls_conta_proc_regra x
			where 	x.nr_sequencia = a.nr_sequencia) ds_desc_ptu,
		coalesce(a.nr_seq_guia,c.nr_seq_guia) nr_seq_guia,
		(	select	coalesce(max(x.ie_a520), 'N')
			from	pls_conta_proc_regra	x
			where	x.nr_sequencia		= a.nr_sequencia) ie_a520
	FROM pls_conta c, pls_conta_proc a
LEFT OUTER JOIN procedimento b ON (a.cd_procedimento = b.cd_procedimento AND a.ie_origem_proced = b.ie_origem_proced)
WHERE c.nr_sequencia			= a.nr_seq_conta and c.nr_sequencia			= nr_seq_conta_p and ((a.ie_status != 'M') or (exists (select	1
							from	pls_conta_proc	p
							where	p.ie_status 	!= 'M'
							and	p.nr_seq_agrup_analise = a.nr_sequencia))) and c.ie_status <> 'C' and a.nr_seq_agrup_analise	= a.nr_sequencia and ie_somente_ocor_p = 'N' and ((nr_nivel_w > 0) or (exists (select	1
						from	w_pls_analise_item_exp	x
						where	x.nr_seq_conta_proc	= a.nr_sequencia)))
	
union all

	/* Procedimentos que não existe NR_SEQ_AGRUP_ANALISE e existe participante */

	select	a.nr_sequencia,
		'A', /* Agrupador */
		'P', /* Procedimento */
		a.cd_procedimento,
		a.dt_procedimento,
		coalesce(b.ds_procedimento,'Não encontrado'),
		a.ie_tipo_despesa,
		a.qt_procedimento_imp,
		a.vl_procedimento_imp,
		a.vl_proc_unitario,
		a.vl_procedimento,
		a.ie_origem_proced,
		a.ie_via_acesso,
		a.nr_auxiliares,
		a.cd_porte_anestesico,
		a.nr_seq_setor_atend,
		substr(a.cd_procedimento_imp || ' - ' || a.ds_procedimento_imp,1,255),
		a.vl_glosa_material,
		a.vl_glosa_hi,
		a.vl_glosa_co,
		a.vl_custo_operacional,
		a.vl_liberado_material,
		a.vl_liberado_co,
		a.vl_liberado_hi,
		a.vl_calc_mat_util,
		a.vl_calc_co_util,
		a.vl_calc_hi_util,
		a.tx_intercambio,
		a.tx_intercambio_imp,
		a.qt_procedimento,
		a.tx_item,
		a.vl_glosa,
		a.vl_liberado,
		a.vl_unitario_imp,
		a.ie_valor_base,
		a.vl_taxa_servico_imp,
		a.vl_taxa_co_imp,
		a.vl_taxa_material_imp,
		a.vl_taxa_servico,
		a.vl_taxa_co,
		a.vl_taxa_material,
		a.ie_status,
		CASE WHEN coalesce(b.cd_procedimento::text, '') = '' THEN 'S'  ELSE null END ,
		'N' ie_proc_ref,
		coalesce(a.nr_seq_prestador_pgto,c.nr_seq_prestador_exec),
		CASE WHEN coalesce(a.nr_seq_prestador_pgto::text, '') = '' THEN  'N'  ELSE 'S' END ,
		vl_lib_taxa_co,
		vl_lib_taxa_material,
		vl_lib_taxa_servico,
		vl_glosa_taxa_co,
		vl_glosa_taxa_material,
		vl_glosa_taxa_servico,
		vl_taxa_co,
		vl_taxa_co_imp,
		vl_taxa_material,
		vl_taxa_material_imp,
		vl_taxa_servico,
		vl_taxa_servico_imp,
		a.ie_glosa,
		a.tx_medico,
		a.tx_material,
		a.tx_custo_operacional,
		a.ie_status_pagamento,
		a.nr_seq_agrup_analise,
		a.nr_seq_autogerado,
		a.nr_id_analise,
		vl_material_ptu_imp,
		vl_procedimento_ptu_imp,
		vl_co_ptu_imp,
		a.ie_pacote_ptu,
		'N' ie_agrup_analise,
		a.nr_seq_regra_qtde_exec,
		a.ie_alto_custo,
		(	select 	tp_rede_min
			from	pls_conta_proc_regra x
			where 	x.nr_sequencia = a.nr_sequencia) tp_rede_min,
		(	select 	ds_item_ptu
			from	pls_conta_proc_regra x
			where 	x.nr_sequencia = a.nr_sequencia) ds_desc_ptu,
		coalesce(a.nr_seq_guia,c.nr_seq_guia) nr_seq_guia,
		(	select	coalesce(max(x.ie_a520), 'N')
			from	pls_conta_proc_regra	x
			where	x.nr_sequencia		= a.nr_sequencia) ie_a520
	FROM pls_conta c, pls_conta_proc a
LEFT OUTER JOIN procedimento b ON (a.cd_procedimento = b.cd_procedimento AND a.ie_origem_proced = b.ie_origem_proced)
WHERE c.nr_sequencia			= a.nr_seq_conta and c.nr_sequencia			= nr_seq_conta_p and ((a.ie_status != 'M') or (exists (select	1
							from	pls_conta_proc	p
							where	p.ie_status 	!= 'M'
							and	p.nr_seq_agrup_analise = a.nr_sequencia))) and c.ie_status <> 'C' and coalesce(a.nr_seq_agrup_analise::text, '') = '' and ie_somente_ocor_p = 'N' and not exists (select	1
				from	pls_conta_proc	x
				where	x.nr_seq_agrup_analise	= a.nr_sequencia) and exists (select	1
			from	pls_proc_participante x
			where	x.nr_seq_conta_proc	= a.nr_sequencia) and ((nr_nivel_w > 0) or (exists (select	1
						from	w_pls_analise_item_exp	x
						where	x.nr_seq_conta_proc	= a.nr_sequencia)))
	 
union all
  -- aqui traz os procedimentos caso estiverem com glosa, para atender ao checkbox somente itens glosados
		select	a.nr_sequencia,
		'A', /* Agrupador */
		'P', /* Procedimento */
		a.cd_procedimento,
		a.dt_procedimento,
		coalesce(b.ds_procedimento, 'Não encontrado'),
		a.ie_tipo_despesa,
		a.qt_procedimento_imp,
		a.vl_procedimento_imp,
		a.vl_proc_unitario,
		a.vl_procedimento,
		a.ie_origem_proced,
		a.ie_via_acesso,
		a.nr_auxiliares,
		a.cd_porte_anestesico,
		a.nr_seq_setor_atend,
		substr(a.cd_procedimento_imp || ' - ' || a.ds_procedimento_imp,1,255),
		a.vl_glosa_material,
		a.vl_glosa_hi,
		a.vl_glosa_co,
		a.vl_custo_operacional,
		a.vl_liberado_material,
		a.vl_liberado_co,
		a.vl_liberado_hi,
		a.vl_calc_mat_util,
		a.vl_calc_co_util,
		a.vl_calc_hi_util,
		a.tx_intercambio,
		a.tx_intercambio_imp,
		a.qt_procedimento,
		a.tx_item,
		a.vl_glosa,
		a.vl_liberado,
		a.vl_unitario_imp,
		a.ie_valor_base,
		a.vl_taxa_servico_imp,
		a.vl_taxa_co_imp,
		a.vl_taxa_material_imp,
		a.vl_taxa_servico,
		a.vl_taxa_co,
		a.vl_taxa_material,
		a.ie_status,
		CASE WHEN coalesce(b.cd_procedimento::text, '') = '' THEN 'S'  ELSE null END ,
		'S' ie_proc_ref,
		coalesce(a.nr_seq_prestador_pgto,c.nr_seq_prestador_exec),
		CASE WHEN coalesce(a.nr_seq_prestador_pgto::text, '') = '' THEN  'N'  ELSE 'S' END ,
		vl_lib_taxa_co,
		vl_lib_taxa_material,
		vl_lib_taxa_servico,
		vl_glosa_taxa_co,
		vl_glosa_taxa_material,
		vl_glosa_taxa_servico,
		vl_taxa_co,
		vl_taxa_co_imp,
		vl_taxa_material,
		vl_taxa_material_imp,
		vl_taxa_servico,
		vl_taxa_servico_imp,
		a.ie_glosa,
		a.tx_medico,
		a.tx_material,
		a.tx_custo_operacional,
		a.ie_status_pagamento,
		a.nr_seq_agrup_analise,
		a.nr_seq_autogerado,
		a.nr_id_analise,
		vl_material_ptu_imp,
		vl_procedimento_ptu_imp,
		vl_co_ptu_imp,
		a.ie_pacote_ptu,
		'S' ie_agrup_analise,
		a.nr_seq_regra_qtde_exec,
		a.ie_alto_custo,
		(	select 	tp_rede_min
			from	pls_conta_proc_regra x
			where 	x.nr_sequencia = a.nr_sequencia) tp_rede_min,
		(	select 	ds_item_ptu
			from	pls_conta_proc_regra x
			where 	x.nr_sequencia = a.nr_sequencia) ds_desc_ptu,
		coalesce(a.nr_seq_guia,c.nr_seq_guia) nr_seq_guia,
		(	select	coalesce(max(x.ie_a520), 'N')
			from	pls_conta_proc_regra	x
			where	x.nr_sequencia		= a.nr_sequencia) ie_a520
	FROM pls_conta c, pls_conta_proc a
LEFT OUTER JOIN procedimento b ON (a.cd_procedimento = b.cd_procedimento AND a.ie_origem_proced = b.ie_origem_proced)
WHERE c.nr_sequencia			= a.nr_seq_conta and c.nr_sequencia			= nr_seq_conta_p and ((a.ie_status != 'M') or (exists (select	1
							from	pls_conta_proc	p
							where	p.ie_status 	!= 'M'
							and	p.nr_seq_agrup_analise = a.nr_sequencia))) and c.ie_status <> 'C' and a.nr_seq_agrup_analise	= a.nr_sequencia and ie_somente_ocor_p = 'S' and exists (	select	1
				from	pls_conta_glosa
				where	ie_situacao	= 'A'
				and	nr_seq_conta_proc	= a.nr_sequencia
				
union all

				select	1
				from	pls_ocorrencia_benef
				where	ie_situacao	= 'A'
				and	nr_seq_conta_proc	= a.nr_sequencia) and ((nr_nivel_w > 0) or (exists (select	1
						from	w_pls_analise_item_exp	x
						where	x.nr_seq_conta_proc	= a.nr_sequencia)))
	 
union all

	/* Procedimentos que não existe NR_SEQ_AGRUP_ANALISE e existe participante */

	select	a.nr_sequencia,
		'A', /* Agrupador */
		'P', /* Procedimento */
		a.cd_procedimento,
		a.dt_procedimento,
		coalesce(b.ds_procedimento,'Não encontrado'),
		a.ie_tipo_despesa,
		a.qt_procedimento_imp,
		a.vl_procedimento_imp,
		a.vl_proc_unitario,
		a.vl_procedimento,
		a.ie_origem_proced,
		a.ie_via_acesso,
		a.nr_auxiliares,
		a.cd_porte_anestesico,
		a.nr_seq_setor_atend,
		substr(a.cd_procedimento_imp || ' - ' || a.ds_procedimento_imp,1,255),
		a.vl_glosa_material,
		a.vl_glosa_hi,
		a.vl_glosa_co,
		a.vl_custo_operacional,
		a.vl_liberado_material,
		a.vl_liberado_co,
		a.vl_liberado_hi,
		a.vl_calc_mat_util,
		a.vl_calc_co_util,
		a.vl_calc_hi_util,
		a.tx_intercambio,
		a.tx_intercambio_imp,
		a.qt_procedimento,
		a.tx_item,
		a.vl_glosa,
		a.vl_liberado,
		a.vl_unitario_imp,
		a.ie_valor_base,
		a.vl_taxa_servico_imp,
		a.vl_taxa_co_imp,
		a.vl_taxa_material_imp,
		a.vl_taxa_servico,
		a.vl_taxa_co,
		a.vl_taxa_material,
		a.ie_status,
		CASE WHEN coalesce(b.cd_procedimento::text, '') = '' THEN 'S'  ELSE null END ,
		'N' ie_proc_ref,
		coalesce(a.nr_seq_prestador_pgto,c.nr_seq_prestador_exec),
		CASE WHEN coalesce(a.nr_seq_prestador_pgto::text, '') = '' THEN  'N'  ELSE 'S' END ,
		vl_lib_taxa_co,
		vl_lib_taxa_material,
		vl_lib_taxa_servico,
		vl_glosa_taxa_co,
		vl_glosa_taxa_material,
		vl_glosa_taxa_servico,
		vl_taxa_co,
		vl_taxa_co_imp,
		vl_taxa_material,
		vl_taxa_material_imp,
		vl_taxa_servico,
		vl_taxa_servico_imp,
		a.ie_glosa,
		a.tx_medico,
		a.tx_material,
		a.tx_custo_operacional,
		a.ie_status_pagamento,
		a.nr_seq_agrup_analise,
		a.nr_seq_autogerado,
		a.nr_id_analise,
		vl_material_ptu_imp,
		vl_procedimento_ptu_imp,
		vl_co_ptu_imp,
		a.ie_pacote_ptu,
		'N' ie_agrup_analise,
		a.nr_seq_regra_qtde_exec,
		a.ie_alto_custo,
		(	select 	tp_rede_min
			from	pls_conta_proc_regra x
			where 	x.nr_sequencia = a.nr_sequencia) tp_rede_min,
		(	select 	ds_item_ptu
			from	pls_conta_proc_regra x
			where 	x.nr_sequencia = a.nr_sequencia) ds_desc_ptu,
		coalesce(a.nr_seq_guia,c.nr_seq_guia) nr_seq_guia,
		(	select	coalesce(max(x.ie_a520), 'N')
			from	pls_conta_proc_regra	x
			where	x.nr_sequencia		= a.nr_sequencia) ie_a520
	FROM pls_conta c, pls_conta_proc a
LEFT OUTER JOIN procedimento b ON (a.cd_procedimento = b.cd_procedimento AND a.ie_origem_proced = b.ie_origem_proced)
WHERE c.nr_sequencia			= a.nr_seq_conta and c.nr_sequencia			= nr_seq_conta_p and ((a.ie_status != 'M') or (exists (select	1
							from	pls_conta_proc	p
							where	p.ie_status 	!= 'M'
							and	p.nr_seq_agrup_analise = a.nr_sequencia))) and c.ie_status <> 'C' and coalesce(a.nr_seq_agrup_analise::text, '') = '' and ie_somente_ocor_p = 'S' and exists (	select	1
				from	pls_conta_glosa
				where	ie_situacao	= 'A'
				and	nr_seq_conta_proc	= a.nr_sequencia
				
union all

				select	1
				from	pls_ocorrencia_benef
				where	ie_situacao	= 'A'
				and	nr_seq_conta_proc	= a.nr_sequencia) and not exists (select	1
				from	pls_conta_proc	x
				where	x.nr_seq_agrup_analise	= a.nr_sequencia) and exists (select	1
			from	pls_proc_participante x
			where	x.nr_seq_conta_proc	= a.nr_sequencia) and ((nr_nivel_w > 0) or (exists (select	1
						from	w_pls_analise_item_exp	x
						where	x.nr_seq_conta_proc	= a.nr_sequencia))) order by
		ie_proc_ref;

C02 CURSOR FOR
	/* Participantes com conta de honorário gerada */

	SELECT	b.nr_sequencia,
		a.nr_sequencia,
		'IC', /* Item da conta */
		'P', /* Procedimento */
		a.ie_tipo_despesa,
		a.qt_procedimento_imp,
		a.vl_procedimento_imp,
		a.vl_proc_unitario,
		a.vl_procedimento,
		a.nr_seq_prestador_pgto,
		a.nr_seq_agrup_analise,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.ie_via_acesso,
		a.nr_auxiliares,
		a.cd_porte_anestesico,
		a.nr_seq_setor_atend,
		substr(a.cd_procedimento_imp || ' - ' || a.ds_procedimento_imp,1,255),
		a.vl_glosa_material,
		a.vl_glosa_hi,
		a.vl_glosa_co,
		a.vl_custo_operacional,
		a.vl_liberado_material,
		a.vl_liberado_co,
		a.vl_liberado_hi,
		a.vl_calc_mat_util,
		a.vl_calc_co_util,
		a.vl_calc_hi_util,
		a.tx_intercambio,
		a.tx_intercambio_imp,
		a.qt_procedimento,
		a.tx_item,
		a.vl_glosa,
		a.vl_liberado,
		a.vl_unitario_imp,
		a.ie_valor_base,
		b.nr_seq_grau_partic,
		a.vl_taxa_servico_imp,
		a.vl_taxa_co_imp,
		a.vl_taxa_material_imp,
		a.vl_taxa_servico,
		a.vl_taxa_co,
		a.vl_taxa_material,
		a.ie_status,
		a.nr_seq_proc_ref,
		a.dt_procedimento,
		b.nr_seq_prestador_exec nr_seq_prest_exec,
		vl_lib_taxa_co,
		vl_lib_taxa_material,
		vl_lib_taxa_servico,
		vl_glosa_taxa_co,
		vl_glosa_taxa_material,
		vl_glosa_taxa_servico,
		vl_taxa_co,
		vl_taxa_co_imp,
		vl_taxa_material,
		vl_taxa_material_imp,
		vl_taxa_servico,
		vl_taxa_servico_imp,
		a.ie_glosa,
		a.tx_medico,
		a.tx_material,
		a.tx_custo_operacional,
		a.ie_status_pagamento,
		CASE WHEN coalesce(a.nr_seq_participante_hi::text, '') = '' THEN 'N'  ELSE 'S' END  ie_partic_agrup,
		1 qt_partic,
		null cd_medico_partic,
		null nm_medico_exec_imp,
		b.nr_seq_prestador_exec nr_seq_prest_partic,
		a.nr_seq_autogerado,
		a.nr_id_analise,
		vl_material_ptu_imp,
		vl_procedimento_ptu_imp,
		vl_co_ptu_imp,
		a.ie_pacote_ptu,
		a.nr_seq_regra_qtde_exec,
		a.ie_alto_custo,
		(	SELECT 	ds_item_ptu
			from	pls_conta_proc_regra x
			where 	x.nr_sequencia = a.nr_sequencia) ds_desc_ptu,
		coalesce(a.nr_seq_guia,b.nr_seq_guia) nr_seq_guia,
		(	select	coalesce(max(x.ie_a520), 'N')
			from	pls_conta_proc_regra	x
			where	x.nr_sequencia		= a.nr_sequencia) ie_a520
	from	pls_conta		b,
		pls_conta_proc		a
	where	a.nr_seq_conta			= b.nr_sequencia
	and	a.nr_seq_agrup_analise		= nr_seq_conta_proc_w
	and (a.ie_lanc_manual_pos = 'N' or coalesce(a.ie_lanc_manual_pos::text, '') = '')
	and	b.ie_status <> 'C'
	and	coalesce(a.nr_seq_regra_canc_item_orig::text, '') = ''
	and	((nr_nivel_w > 1) or (exists (select	1
						from	w_pls_analise_item_exp	x
						where	x.nr_seq_conta_proc	= a.nr_sequencia)))
	and	ie_somente_ocor_p = 'N'
	
union all

	select	b.nr_sequencia,
		a.nr_sequencia,
		'IC', /* Item da conta */
		'P', /* Procedimento */
		a.ie_tipo_despesa,
		a.qt_procedimento_imp,
		a.vl_procedimento_imp,
		a.vl_proc_unitario,
		a.vl_procedimento,
		a.nr_seq_prestador_pgto,
		a.nr_seq_agrup_analise,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.ie_via_acesso,
		a.nr_auxiliares,
		a.cd_porte_anestesico,
		a.nr_seq_setor_atend,
		substr(a.cd_procedimento_imp || ' - ' || a.ds_procedimento_imp,1,255),
		a.vl_glosa_material,
		a.vl_glosa_hi,
		a.vl_glosa_co,
		a.vl_custo_operacional,
		a.vl_liberado_material,
		a.vl_liberado_co,
		a.vl_liberado_hi,
		a.vl_calc_mat_util,
		a.vl_calc_co_util,
		a.vl_calc_hi_util,
		a.tx_intercambio,
		a.tx_intercambio_imp,
		a.qt_procedimento,
		a.tx_item,
		a.vl_glosa,
		a.vl_liberado,
		a.vl_unitario_imp,
		a.ie_valor_base,
		b.nr_seq_grau_partic,
		a.vl_taxa_servico_imp,
		a.vl_taxa_co_imp,
		a.vl_taxa_material_imp,
		a.vl_taxa_servico,
		a.vl_taxa_co,
		a.vl_taxa_material,
		a.ie_status,
		a.nr_seq_proc_ref,
		a.dt_procedimento,
		b.nr_seq_prestador_exec nr_seq_prest_exec,
		vl_lib_taxa_co,
		vl_lib_taxa_material,
		vl_lib_taxa_servico,
		vl_glosa_taxa_co,
		vl_glosa_taxa_material,
		vl_glosa_taxa_servico,
		vl_taxa_co,
		vl_taxa_co_imp,
		vl_taxa_material,
		vl_taxa_material_imp,
		vl_taxa_servico,
		vl_taxa_servico_imp,
		a.ie_glosa,
		a.tx_medico,
		a.tx_material,
		a.tx_custo_operacional,
		a.ie_status_pagamento,
		CASE WHEN coalesce(a.nr_seq_participante_hi::text, '') = '' THEN 'N'  ELSE 'S' END  ie_partic_agrup,
		1 qt_partic,
		null cd_medico_partic,
		null nm_medico_exec_imp,
		b.nr_seq_prestador_exec nr_seq_prest_partic,
		a.nr_seq_autogerado,
		a.nr_id_analise,
		vl_material_ptu_imp,
		vl_procedimento_ptu_imp,
		vl_co_ptu_imp,
		a.ie_pacote_ptu,
		a.nr_seq_regra_qtde_exec,
		a.ie_alto_custo,
		(	select 	ds_item_ptu
			from	pls_conta_proc_regra x
			where 	x.nr_sequencia = a.nr_sequencia) ds_desc_ptu,
		coalesce(a.nr_seq_guia,b.nr_seq_guia) nr_seq_guia,
		(	select	coalesce(max(x.ie_a520), 'N')
			from	pls_conta_proc_regra	x
			where	x.nr_sequencia		= a.nr_sequencia) ie_a520
	from	pls_conta		b,
		pls_conta_proc		a
	where	a.nr_seq_conta			= b.nr_sequencia
	and	a.nr_seq_agrup_analise		= nr_seq_conta_proc_w
	and (a.ie_lanc_manual_pos = 'N' or coalesce(a.ie_lanc_manual_pos::text, '') = '')
	and	b.ie_status <> 'C'
	and	coalesce(a.nr_seq_regra_canc_item_orig::text, '') = ''
	and	((nr_nivel_w > 1) or (exists (select	1
						from	w_pls_analise_item_exp	x
						where	x.nr_seq_conta_proc	= a.nr_sequencia)))
	and	ie_somente_ocor_p = 'S'
	and	exists (	select	1
				from	pls_conta_glosa
				where	ie_situacao	= 'A'
				and	nr_seq_conta_proc	= a.nr_sequencia
				
union all

				select	1
				from	pls_ocorrencia_benef
				where	ie_situacao	= 'A'
				and	nr_seq_conta_proc	= a.nr_sequencia);


BEGIN

ie_minha_analise_w	:= coalesce(ie_minha_analise_p,'N');
ie_pendentes_w		:= coalesce(ie_pendentes_p,'N');
ie_ocultar_canc_w	:= coalesce(ie_ocultar_canc_p, 'N');
ds_identacao_w	:= '       ';
ds_ident_nivel_1_w	:= ds_identacao_w;
ds_ident_nivel_2_w	:= ds_identacao_w || ds_identacao_w;
ds_ident_nivel_3_w	:= ds_identacao_w || ds_identacao_w || ds_identacao_w;

/* Obter dados da conta/guia */

nr_seq_guia_w		:= pls_consulta_analise_pck.get_nr_seq_guia;
ie_autorizado_w		:= pls_consulta_analise_pck.get_ie_autorizado;
cd_guia_w		:= pls_consulta_analise_pck.get_cd_guia;
ds_tipo_guia_w		:= pls_consulta_analise_pck.get_ds_tipo_guia;
nm_prestador_solic_w	:= pls_consulta_analise_pck.get_nm_prestador_solic;
nm_prestador_exec_w	:= pls_consulta_analise_pck.get_nm_prestador_exec;
nr_seq_prestador_exec_w	:= pls_consulta_analise_pck.get_nr_seq_prestador_exec;
cd_prestador_exec_w	:= pls_consulta_analise_pck.get_cd_prestador_exec;
dt_emissao_conta_w	:= pls_consulta_analise_pck.get_dt_emissao_conta;
nr_seq_protocolo_w	:= pls_consulta_analise_pck.get_nr_seq_protocolo;
ds_espec_cbo_w		:= pls_consulta_analise_pck.get_ds_espec_cbo;
ds_medico_executor_w	:= pls_consulta_analise_pck.get_ds_medico_executor;
nr_nivel_w		:= pls_consulta_analise_pck.get_nr_nivel;
ie_tipo_guia_w		:= pls_consulta_analise_pck.get_ie_tipo_guia;

select	max(a.ie_tipo_cabecalho)
into STRICT	ie_tipo_analise_w
from	w_pls_analise_cabecalho	a
where	a.nr_seq_analise	= nr_seq_analise_p;

open C01;
loop
fetch C01 into
	nr_seq_conta_proc_w,
	ie_tipo_linha_w,
	ie_tipo_item_w,
	cd_procedimento_w,
	dt_procedimento_w,
	ds_procedimento_w,
	ie_tipo_despesa_w,
	qt_procedimento_imp_w,
	vl_procedimento_imp_w,
	vl_proc_unitario_w,
	vl_procedimento_w,
	ie_origem_proced_w,
	ie_via_acesso_w,
	nr_auxiliares_w,
	cd_porte_anestesico_w,
	nr_seq_setor_atend_w,
	ds_item_importacao_w,
	vl_glosa_material_w,
	vl_glosa_hi_w,
	vl_glosa_co_w,
	vl_custo_operacional_w,
	vl_liberado_material_w,
	vl_liberado_co_w,
	vl_liberado_hi_w,
	vl_calculado_material_w,
	vl_calculado_co_w,
	vl_calculado_hi_w,
	tx_intercambio_w,
	tx_intercambio_imp_w,
	qt_liberado_w,
	tx_item_w,
	vl_glosa_w,
	vl_liberado_w,
	vl_unitario_apres_w,
	ie_valor_base_w,
	vl_taxa_servico_imp_w,
	vl_taxa_co_imp_w,
	vl_taxa_material_imp_w,
	vl_taxa_servico_w,
	vl_taxa_co_w,
	vl_taxa_material_w,
	ie_status_item_w,
	ie_item_nao_encontrado_w,
	ie_proc_ref_w,
	nr_seq_prestador_pgto_w,
	ie_prest_pgto_conta_proc_w,
	vl_lib_taxa_co_w,
	vl_lib_taxa_material_w,
	vl_lib_taxa_servico_w,
	vl_glosa_taxa_co_w,
	vl_glosa_taxa_material_w,
	vl_glosa_taxa_servico_w,
	vl_taxa_co_w,
	vl_taxa_co_imp_w,
	vl_taxa_material_w,
	vl_taxa_material_imp_w,
	vl_taxa_servico_w,
	vl_taxa_servico_imp_w,
	ie_glosa_w,
	tx_medico_w,
	tx_material_w,
	tx_custo_operacional_w,
	ie_pagamento_w,
	nr_seq_agrup_analise_w,
	nr_seq_autogerado_w,
	nr_identificador_w,
	vl_material_ptu_imp_w,
	vl_procedimento_ptu_imp_w,
	vl_co_ptu_imp_w,
	ie_pacote_w,
	ie_agrup_analise_w,
	nr_seq_regra_qtde_exec_w,
	ie_alto_custo_w,
	tp_rede_min_w,
	ds_desc_ptu_w,
	nr_seq_guia_item_w,
	ie_aviso_a520_proc_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_setou_valores_w	:= 'N';
	ie_exibir_w		:= 'N';
	ds_via_acesso_w		:= null;
	ds_grau_partic_w	:= null;
	ie_pend_grupo_w		:= null;
	ie_pend_grupo_w		:= pls_obter_pend_grupo_analise(nr_seq_analise_p,nr_seq_conta_p, nr_seq_conta_proc_w, null, null, nr_seq_grupo_p, ie_proc_ref_w);
	qt_itens_sec_w		:= 0;

	select	count(1)
	into STRICT	qt_informativo_w
	from	w_pls_analise_item a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and		a.ie_informativo	= 'S'
	and		a.nr_seq_conta		= nr_seq_conta_p
	and		a.nr_seq_conta_proc	= nr_seq_conta_proc_w
	and 	a.nr_id_transacao = nr_id_transacao_p;

	if (qt_informativo_w = 0) then
		nr_seq_proc_pai_w	:= null;
		ds_item_w			:= ds_ident_nivel_1_w || ds_procedimento_w; --ds_desc_ptu_w
		if (ds_desc_ptu_w IS NOT NULL AND ds_desc_ptu_w::text <> '') then
			ds_item_w :=	ds_ident_nivel_1_w || ds_desc_ptu_w;
		end if;
	else
		nm_prestador_w			:= pls_obter_dados_prestador(nr_seq_prestador_exec_w,'N');
		ds_item_w			:= nm_prestador_w || ' (' || cd_prestador_exec_w || ')';
		ds_item_w			:= ds_ident_nivel_2_w || ds_item_w;
		nr_seq_proc_pai_w		:= nr_seq_conta_proc_w;
	end if;

	/* Obter status geral de análise do item */

	ie_status_analise_w	:= pls_obter_status_analise_item(nr_seq_analise_p,null, coalesce(nr_seq_proc_pai_w,nr_seq_conta_proc_w), null, null, null,'S');

	if (ie_ocultar_canc_w = 'N') then
		ie_exibir_w := 'S';
	elsif (ie_ocultar_canc_w = 'S') then

		if (ie_somente_ocor_p = 'N') then

			select	count(1)
			into STRICT	qt_itens_sec_w
			from	pls_conta		b,
				pls_conta_proc		a
			where	a.nr_seq_conta			= b.nr_sequencia
			and	a.nr_seq_agrup_analise		= nr_seq_conta_proc_w
			and (a.ie_lanc_manual_pos = 'N' or coalesce(a.ie_lanc_manual_pos::text, '') = '')
			and	b.ie_status <> 'C'
			and	a.ie_status <> 'D'
			and	coalesce(a.nr_seq_regra_canc_item_orig::text, '') = ''
			and	((nr_nivel_w > 1) or (exists (SELECT	1
								from	w_pls_analise_item_exp	x
								where	x.nr_seq_conta_proc	= a.nr_sequencia)))
			and	ie_somente_ocor_p = 'N';

		elsif (ie_somente_ocor_p = 'S') then

			select	count(1)
			into STRICT	qt_itens_sec_w
			from	pls_conta		b,
				pls_conta_proc		a
			where	a.nr_seq_conta			= b.nr_sequencia
			and	a.nr_seq_agrup_analise		= nr_seq_conta_proc_w
			and (a.ie_lanc_manual_pos = 'N' or coalesce(a.ie_lanc_manual_pos::text, '') = '')
			and	b.ie_status <> 'C'
			and	a.ie_status <> 'D'
			and	coalesce(a.nr_seq_regra_canc_item_orig::text, '') = ''
			and	((nr_nivel_w > 1) or (exists (SELECT	1
								from	w_pls_analise_item_exp	x
								where	x.nr_seq_conta_proc	= a.nr_sequencia)))
			and	ie_somente_ocor_p = 'S'
			and	exists (	select	1
						from	pls_conta_glosa
						where	ie_situacao	= 'A'
						and	nr_seq_conta_proc	= a.nr_sequencia
						
union all

						SELECT	1
						from	pls_ocorrencia_benef
						where	ie_situacao	= 'A'
						and	nr_seq_conta_proc	= a.nr_sequencia);
		end if;

		if (qt_itens_sec_w > 0) then
			ie_exibir_w := 'S';
		end if;
	end if;


	if	((ie_minha_analise_w = 'S' AND ie_pend_grupo_w IS NOT NULL AND ie_pend_grupo_w::text <> '') or (ie_minha_analise_w = 'N')) and
		((ie_pendentes_w = ie_pend_grupo_w) or (ie_status_analise_w in ('E','A')) or (ie_pendentes_w = 'N')) and (ie_exibir_w = 'S') then

		vl_taxa_intercambio_imp_w	:= coalesce(vl_taxa_servico_imp_w,0) + coalesce(vl_taxa_co_imp_w,0) + coalesce(vl_taxa_material_imp_w,0);
		vl_taxa_intercambio_w		:= coalesce(vl_taxa_servico_w,0) + coalesce(vl_taxa_co_w,0) + coalesce(vl_taxa_material_w,0);

		--Se não tiver pego o prestador de pagamento do procedimento, então faz o select na conta resumo em busca do mesmo. Também verificado se

		-- ie_prest_pgto_conta_proc_w = 'N' pois caso verdadeiro, quer dizer que o nr_seq_prestador_pgto_w até aqui veio do prestador executor do

		--procedimento, então nesse caso prioriza a informação do resumo. Isso atende o problema da OS 1323521 sem causar impacto algum possível caso onde não

		--se tenha informação do prestador pgto em resumo(A500 por exemplo). Se já existir informação do prest_pgto na conta proc, então não faz esse select na resumo
		if (coalesce(nr_seq_prestador_pgto_w::text, '') = '' or ie_prest_pgto_conta_proc_w = 'N') then
			select  max(nr_seq_prestador_pgto)
			into STRICT	nr_seq_prestador_pgto_res_w
			from    pls_conta_medica_resumo
			where   nr_seq_conta_proc      = nr_seq_conta_proc_w
			and     nr_seq_conta           = nr_seq_conta_p;

			if (nr_seq_prestador_pgto_res_w IS NOT NULL AND nr_seq_prestador_pgto_res_w::text <> '') then
				nr_seq_prestador_pgto_w := nr_seq_prestador_pgto_res_w;
			end if;

		end if;

		ie_autorizado_ww	:= null;

		if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		
			select	CASE WHEN count(1)=0 THEN  'N'  ELSE ie_autorizado_w END
			into STRICT	ie_autorizado_ww
			from	table(pls_conta_autor_pck.obter_dados_procedimento(nr_seq_guia_w, ie_origem_proced_w, cd_procedimento_w))	a;
			
			
		end if;

		/* Obter se possui fluxo de análise */

		ie_sem_fluxo_w		:= pls_obter_se_item_sem_fluxo(nr_seq_analise_p,null, nr_seq_conta_proc_w, null,null);

		/* Verificar status de pagamento */

		if (ie_valor_base_w = 1) then /* Aceitar valor apresentado */
			vl_base_w	:= vl_procedimento_imp_w;
		else
			vl_base_w	:= vl_procedimento_w;
		end if;

		if (coalesce(ie_pagamento_w::text, '') = '') then
			ie_pagamento_w	:= pls_analise_obter_status_pag(ie_status_item_w,qt_procedimento_imp_w,qt_liberado_w,
								vl_procedimento_imp_w,vl_procedimento_w,vl_liberado_w,vl_glosa_w, ie_glosa_w);
		end if;

		/* Tratar expansão do item */

		select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_expandido_w
		from	w_pls_analise_item_exp a
		where	a.nr_seq_analise	= nr_seq_analise_p
		and	a.nr_seq_conta_proc	= nr_seq_conta_proc_w;

		if (ie_expandido_w = 'N') and (nr_nivel_w = 3) then
			ie_expandido_w	:= 'S';
		end if;

		nr_sequencia_w		:= pls_consulta_analise_pck.get_nr_seq_item;
		nr_sequencia_aux_w	:= 0;

		qt_liberar_w	:= null;

		if (pls_consulta_analise_pck.get_se_selecao) then
			select	count(1),
				max(qt_liberar)
			into STRICT	qt_selecao_w,
				qt_liberar_w
			from	w_pls_analise_selecao_item	a
			where	a.nr_seq_analise	= nr_seq_analise_p
			and	a.nr_seq_w_item		= nr_sequencia_w;
		end if;

		if (qt_selecao_w > 0) then
			ie_selecionado_w	:= 'S';
		else
			ie_selecionado_w	:= 'N';
		end if;

		ds_status_item_w	:= null;
		if (ie_status_item_w IS NOT NULL AND ie_status_item_w::text <> '') and (ie_agrup_analise_w = 'N') then
			select	ds_valor_dominio
			into STRICT	ds_status_item_w
			from	valor_dominio_v
			where	cd_dominio	= 1870
			and	vl_dominio	= ie_status_item_w;
		end if;

		qt_cobranca_w	:= null;
		if (ie_proc_ref_w = 'S') then
			vl_unitario_apres_ww		:= 0;
			vl_taxa_intercambio_imp_w	:= 0;
			vl_taxa_intercambio_ww		:= 0;
			vl_liberado_material_ww		:= 0;
			vl_liberado_hi_ww		:= 0;
			vl_liberado_co_ww		:= 0;
			vl_liberado_ww			:= 0;
			vl_glosa_material_ww		:= 0;
			vl_glosa_hi_ww			:= 0;
			vl_glosa_co_ww			:= 0;
			vl_glosa_ww			:= 0;
			vl_custo_operacional_ww		:= 0;
			vl_proc_unitario_ww		:= 0;
			vl_calculado_material_ww	:= 0;
			vl_calculado_co_ww		:= 0;
			vl_calculado_hi_ww		:= 0;
			vl_procedimento_ww		:= 0;
			vl_material_ptu_imp_ww		:= 0;
			vl_procedimento_ptu_imp_ww	:= 0;
			vl_co_ptu_imp_ww		:= 0;
			ie_pagamento_w			:= null;
			ie_pend_grupo_w			:= null;
			qt_procedimento_imp_w		:= null;
			qt_liberado_w			:= null;
			nr_sequencia_aux_w		:= nr_sequencia_w;
			ds_via_acesso_w			:= null;
			tx_item_w			:= null;
			tx_medico_w			:= null;
			tx_material_w			:= null;
			tx_custo_operacional_w		:= null;
			vl_procedimento_imp_ww		:= 0;
			ie_informativo_w		:= 'S';
			nr_seq_regra_qtde_exec_w	:= null;

		else
			if (ie_via_acesso_w IS NOT NULL AND ie_via_acesso_w::text <> '') then
				select	ds_valor_dominio
				into STRICT	ds_via_acesso_w
				from	valor_dominio_v
				where	cd_dominio	= 1268
				and	vl_dominio	= ie_via_acesso_w;
			end if;

			qt_cobranca_w	:= 0;
			begin
			select	coalesce(a.qt_item,0)
			into STRICT	qt_cobranca_w
			from	pls_conta_pos_estabelecido a
			where	a.nr_seq_conta_proc = nr_seq_conta_proc_w;
			exception
				when others then
				qt_cobranca_w	:= 0;
			end;
			ie_informativo_w	:= 'N';
		end if;

		/*Irá verificar se irá gerar algum item filho além dos participantes, é necessário fazer desta forma para que caso não sejam gerados registros filhos, seja apresentada a informação de prestador executor
		e prestador pagamento   OS 577128 */
		select	count(1)
		into STRICT	qt_conta_honor_w
		from	pls_conta		b,
			pls_conta_proc		a
		where	a.nr_seq_conta			= b.nr_sequencia
		and	a.nr_seq_agrup_analise		= nr_seq_conta_proc_w
		and (a.ie_lanc_manual_pos = 'N' or coalesce(a.ie_lanc_manual_pos::text, '') = '')
		and	b.ie_status <> 'C'
		and	coalesce(a.nr_seq_regra_canc_item_orig::text, '') = ''
		and	((nr_nivel_w > 1) or (exists (SELECT	1
							from	w_pls_analise_item_exp	x
							where	x.nr_seq_conta_proc	= a.nr_sequencia)));

		if ( qt_conta_honor_w = 0 ) then
			nm_prestador_exec_ww 	:= nm_prestador_exec_w;
			nm_prestador_pag_w 	:= pls_obter_dados_prestador(nr_seq_prestador_pgto_w,'N');
		else
			nm_prestador_exec_ww 	:= '';
			nm_prestador_pag_w	:= '';
		end if;

		insert into w_pls_analise_item(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_analise,
			nr_seq_conta,
			nr_seq_conta_proc,
			cd_item,
			dt_item,
			ds_item,
			ie_tipo_despesa,
			ie_tipo_linha,
			ie_tipo_item,
			qt_apresentada,
			vl_apresentado,
			vl_calculado_unitario,
			vl_calculado,
			cd_procedimento,
			ie_origem_proced,
			ie_via_acesso,
			ds_via_acesso,
			nm_prestador_exec,
			nm_prestador_pag,
			nr_seq_protocolo,
			ie_autoriz_previa,
			ds_item_importacao,
			vl_glosa_material,
			vl_glosa_hi,
			vl_glosa_co,
			vl_custo_operacional,
			vl_liberado_material,
			vl_liberado_co,
			vl_liberado_hi,
			vl_calculado_material,
			vl_calculado_co,
			vl_calculado_hi,
			tx_intercambio,
			tx_intercambio_imp,
			vl_taxa_intercambio,
			vl_taxa_intercambio_imp,
			qt_liberado,
			tx_item,
			vl_glosa,
			vl_liberado,
			vl_unitario_apres,
			nr_seq_prestador_exec,
			nr_seq_guia,
			ie_status_analise,
			ie_pagamento,
			ie_valor_base,
			ie_expandido,
			ie_status_item,
			ds_status_item,
			ie_pend_grupo,
			ie_item_nao_encontrado,
			nr_seq_proc_pai,
			ie_selecionado,
			qt_liberar,
			ie_sem_fluxo,
			ie_tipo_guia,
			vl_lib_taxa_co,
			vl_lib_taxa_material,
			vl_lib_taxa_servico,
			vl_glosa_taxa_co,
			vl_glosa_taxa_material,
			vl_glosa_taxa_servico,
			vl_taxa_co,
			vl_taxa_co_imp,
			vl_taxa_material,
			vl_taxa_material_imp,
			vl_taxa_servico,
			vl_taxa_servico_imp,
			tx_medico,
			tx_material,
			tx_custo_operacional,
			nr_seq_autogerado,
			nr_identificador,
			vl_material_ptu_imp,
			vl_procedimento_ptu_imp,
			vl_co_ptu_imp,
			ie_pacote_ptu,
			qt_cobranca,
			ie_informativo,
			nr_seq_regra_qtde_exec,
			ie_alto_custo,
			tp_rede_min,
			nr_id_transacao,
			ie_a520)
		values (nr_sequencia_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_analise_p,
			nr_seq_conta_p,
			nr_seq_conta_proc_w,
			CASE WHEN qt_informativo_w=0 THEN cd_procedimento_w  ELSE null END ,
			CASE WHEN qt_informativo_w=0 THEN dt_procedimento_w  ELSE null END ,
			ds_item_w,
			ie_tipo_despesa_w,
			ie_tipo_linha_w,
			ie_tipo_item_w,
			qt_procedimento_imp_w,
			vl_procedimento_imp_w,
			vl_proc_unitario_w,
			vl_procedimento_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			ie_via_acesso_w,
			ds_via_acesso_w,
			nm_prestador_exec_ww,
			nm_prestador_pag_w,
			nr_seq_protocolo_w,
			ie_autorizado_ww,
			CASE WHEN qt_informativo_w=0 THEN ds_item_importacao_w  ELSE null END ,
			vl_glosa_material_w,
			vl_glosa_hi_w,
			vl_glosa_co_w,
			vl_custo_operacional_w,
			vl_liberado_material_w,
			vl_liberado_co_w,
			vl_liberado_hi_w,
			vl_calculado_material_w,
			vl_calculado_co_w,
			vl_calculado_hi_w,
			tx_intercambio_w,
			tx_intercambio_imp_w,
			vl_taxa_intercambio_w,
			vl_taxa_intercambio_imp_w,
			qt_liberado_w,
			tx_item_w,
			vl_glosa_w,
			vl_liberado_w,
			vl_unitario_apres_w,
			nr_seq_prestador_exec_w,
			nr_seq_guia_item_w,
			ie_status_analise_w,
			ie_pagamento_w,
			ie_valor_base_w,
			ie_expandido_w,
			ie_status_item_w,
			ds_status_item_w,
			ie_pend_grupo_w,
			ie_item_nao_encontrado_w,
			nr_seq_proc_pai_w,
			ie_selecionado_w,
			qt_liberar_w,
			ie_sem_fluxo_w,
			ie_tipo_guia_w,
			vl_lib_taxa_co_w,
			vl_lib_taxa_material_w,
			vl_lib_taxa_servico_w,
			vl_glosa_taxa_co_w,
			vl_glosa_taxa_material_w,
			vl_glosa_taxa_servico_w,
			vl_taxa_co_w,
			vl_taxa_co_imp_w,
			vl_taxa_material_w,
			vl_taxa_material_imp_w,
			vl_taxa_servico_w,
			vl_taxa_servico_imp_w,
			tx_medico_w,
			tx_material_w,
			tx_custo_operacional_w,
			nr_seq_autogerado_w,
			CASE WHEN ie_proc_ref_w='N' THEN nr_identificador_w  ELSE null END ,
			vl_material_ptu_imp_w,
			vl_procedimento_ptu_imp_w,
			vl_co_ptu_imp_w,
			ie_pacote_w,
			qt_cobranca_w,
			ie_informativo_w,
			nr_seq_regra_qtde_exec_w,
			ie_alto_custo_w,
			tp_rede_min_w,
			nr_id_transacao_p,
			ie_aviso_a520_proc_w);
		CALL pls_consulta_analise_pck.set_nr_seq_item( nr_sequencia_w + 1);
		ie_partic_pend_w	:= 'N';
		if (nr_sequencia_aux_w = 0) and (ie_status_item_w <> 'D') then

			CALL pls_consulta_analise_pck.set_vl_apresentado(vl_procedimento_imp_w);
			CALL pls_consulta_analise_pck.set_vl_calculado(vl_procedimento_w);
			CALL pls_consulta_analise_pck.set_vl_liberado(vl_liberado_w);
			CALL pls_consulta_analise_pck.set_vl_glosado(vl_glosa_w);
			CALL pls_consulta_analise_pck.set_vl_taxa(vl_taxa_servico_w);
		end if;

		select	count(1)
		into STRICT	qt_partic_ww
		from	pls_proc_participante	a
		where	a.nr_seq_conta_proc	= nr_seq_conta_proc_w;

		if (qt_partic_ww > 0) then
			select	count(1)
			into STRICT	qt_partic_hi_w
			from	pls_proc_participante	a
			where	a.nr_seq_conta_proc	= nr_seq_conta_proc_w
			and	exists (SELECT	1
					from	pls_conta_proc	x
					where	a.nr_sequencia	= x.nr_seq_participante_hi);

			if (qt_partic_ww > qt_partic_hi_w) then
				ie_partic_pend_w	:= 'S';
			end if;
		end if;

		open C02;
		loop
		fetch C02 into
			nr_seq_conta_w,
			nr_seq_conta_proc_ww,
			ie_tipo_linha_w,
			ie_tipo_item_w,
			ie_tipo_despesa_w,
			qt_procedimento_imp_w,
			vl_procedimento_imp_w,
			vl_proc_unitario_w,
			vl_procedimento_w,
			nr_seq_prestador_pgto_w,
			nr_seq_proc_pai_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			ie_via_acesso_w,
			nr_auxiliares_w,
			cd_porte_anestesico_w,
			nr_seq_setor_atend_w,
			ds_item_importacao_w,
			vl_glosa_material_w,
			vl_glosa_hi_w,
			vl_glosa_co_w,
			vl_custo_operacional_w,
			vl_liberado_material_w,
			vl_liberado_co_w,
			vl_liberado_hi_w,
			vl_calculado_material_w,
			vl_calculado_co_w,
			vl_calculado_hi_w,
			tx_intercambio_w,
			tx_intercambio_imp_w,
			qt_liberado_w,
			tx_item_w,
			vl_glosa_w,
			vl_liberado_w,
			vl_unitario_apres_w,
			ie_valor_base_w,
			nr_seq_grau_partic_w,
			vl_taxa_servico_imp_w,
			vl_taxa_co_imp_w,
			vl_taxa_material_imp_w,
			vl_taxa_servico_w,
			vl_taxa_co_w,
			vl_taxa_material_w,
			ie_status_item_w,
			nr_seq_proc_ref_w,
			dt_procedimento_w,
			nr_seq_prestador_honor_w,
			vl_lib_taxa_co_honor_w,
			vl_lib_taxa_material_honor_w,
			vl_lib_taxa_servico_honor_w,
			vl_glosa_taxa_co_honor_w,
			vl_glosa_taxa_material_honor_w,
			vl_glosa_taxa_servico_honor_w,
			vl_taxa_co_honor_w,
			vl_taxa_co_imp_honor_w,
			vl_taxa_material_honor_w,
			vl_taxa_material_imp_honor_w,
			vl_taxa_servico_honor_w,
			vl_taxa_servico_imp_honor_w,
			ie_glosa_w,
			tx_medico_w,
			tx_material_w,
			tx_custo_operacional_w,
			ie_pagamento_w,
			ie_partic_agrup_w,
			qt_partic_w,
			cd_medico_partic_w,
			nm_medico_executor_imp_w,
			nr_seq_prest_partic_w,
			nr_seq_autogerado_w,
			nr_identificador_w,
			vl_material_ptu_imp_w,
			vl_procedimento_ptu_imp_w,
			vl_co_ptu_imp_w,
			ie_pacote_w,
			nr_seq_regra_qtde_exec_w,
			ie_alto_custo_w,
			ds_desc_ptu_w,
			nr_seq_guia_item_w,
			ie_aviso_a520_part_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			ds_via_acesso_w		:= null;
			ds_grau_partic_w	:= null;
			ie_pend_grupo_w		:= null;
			ie_pend_grupo_w		:= pls_obter_pend_grupo_analise(nr_seq_analise_p,nr_seq_conta_p, nr_seq_conta_proc_ww, null, null, nr_seq_grupo_p, 'N');

			/* Obter status geral de análise do item */

			ie_status_analise_w	:= pls_obter_status_analise_item(nr_seq_analise_p,null, nr_seq_conta_proc_ww, null, null, ie_item_nao_encontrado_w,'N');

			if	((ie_minha_analise_w = 'S' AND ie_pend_grupo_w IS NOT NULL AND ie_pend_grupo_w::text <> '') or (ie_minha_analise_w = 'N')) and
				((ie_pendentes_w = ie_pend_grupo_w) or (ie_status_analise_w in ('E','A')) or (ie_pendentes_w = 'N')) and
				((ie_ocultar_canc_w = 'N') or
				(ie_ocultar_canc_w = 'S' AND ie_status_analise_w <> 'C'))then
				select	a.nr_seq_guia,
					a.nr_seq_protocolo,
					a.nr_seq_prestador,
					a.nr_seq_prestador_exec,
					a.dt_atendimento_referencia,
					a.nr_seq_cbo_saude,
					a.cd_medico_executor,
					a.cd_guia,
					a.ie_tipo_guia,
					a.nm_prestador_exec_imp
				into STRICT	nr_seq_guia_honor_w,
					nr_seq_protocolo_honor_w,
					nr_seq_prestador_solic_honor_w,
					nr_seq_prestador_exec_honor_w,
					dt_atend_ref_conta_honor_w,
					nr_seq_cbo_saude_honor_w,
					cd_medico_executor_honor_w,
					cd_guia_conta_honor_w,
					ie_tipo_guia_conta_honor_w,
					nm_prestador_exec_imp_w
				from	pls_conta a
				where	a.nr_sequencia	= nr_seq_conta_w;

				if (nr_seq_prestador_solic_honor_w IS NOT NULL AND nr_seq_prestador_solic_honor_w::text <> '') then
					nm_prestador_solic_honor_w	:= substr(pls_obter_dados_prestador(nr_seq_prestador_solic_honor_w, 'N'),1,255);
				else
					nm_prestador_solic_honor_w	:= null;
				end if;

				if (nr_seq_prestador_exec_honor_w IS NOT NULL AND nr_seq_prestador_exec_honor_w::text <> '') then
					nm_prestador_exec_honor_w	:= substr(pls_obter_dados_prestador(nr_seq_prestador_exec_honor_w, 'N'),1,255);
					cd_prestador_exec_honor_w	:= substr(pls_obter_dados_prestador(nr_seq_prestador_exec_honor_w, 'CD'),1,30);
				else
					if (ie_tipo_analise_w = 'IN') then
						select	max(a.nm_medico_executor_imp)
						into STRICT	nm_prestador_exec_honor_w
						from	pls_proc_participante	a
						where	a.nr_seq_conta_proc	= nr_seq_conta_proc_ww;
						
						if (coalesce(nm_prestador_exec_honor_w::text, '') = '') then
							nm_prestador_exec_honor_w	:= nm_prestador_exec_imp_w;
						end if;
					else
						nm_prestador_exec_honor_w	:= null;
					end if;

					cd_prestador_exec_honor_w	:= null;
				end if;

				nm_prestador_pag_w	:= null;

				if (coalesce(nr_seq_prestador_pgto_w::text, '') = '') then
					select  max(nr_seq_prestador_pgto),
						max(nm_prestador_pgto)
					into STRICT	nr_seq_prestador_pgto_w,
						nm_prestador_pag_w
					from    pls_conta_medica_resumo
					where   nr_seq_conta_proc      = nr_seq_conta_proc_ww
					and     nr_seq_conta           = nr_seq_conta_w;
				end if;

				if (nr_seq_prestador_pgto_w IS NOT NULL AND nr_seq_prestador_pgto_w::text <> '') then
					if (coalesce(nm_prestador_pag_w::text, '') = '') then
						nm_prestador_pag_w		:= substr(pls_obter_dados_prestador(nr_seq_prestador_pgto_w,'N'),1,255);
					end if;
				end if;

				if (nr_seq_guia_honor_w IS NOT NULL AND nr_seq_guia_honor_w::text <> '') then
					select	obter_valor_dominio(1746,a.ie_tipo_guia),
						cd_guia,
						CASE WHEN ie_status=1 THEN  'S'  ELSE 'N' END
					into STRICT	ds_tipo_guia_honor_w,
						cd_guia_honor_w,
						ie_autorizado_honor_w
					from	pls_guia_plano a
					where	nr_sequencia = nr_seq_guia_honor_w;

					ds_tipo_guia_honor_w	:= obter_valor_dominio(1746,ie_tipo_guia_conta_honor_w);
				else
					cd_guia_honor_w		:= cd_guia_conta_honor_w;
					ds_tipo_guia_honor_w	:= obter_valor_dominio(1746,ie_tipo_guia_conta_honor_w);
				end if;

				ds_espec_cbo_honor_w	:= null;

				if (nr_seq_cbo_saude_honor_w IS NOT NULL AND nr_seq_cbo_saude_honor_w::text <> '') then
					select	substr(max(a.ds_cbo), 1, 255)
					into STRICT	ds_espec_cbo_honor_w
					from	cbo_saude	a
					where	a.nr_sequencia	= nr_seq_cbo_saude_honor_w;
				end if;

				ds_medico_executor_honor_w	:= null;

				if (cd_medico_executor_honor_w IS NOT NULL AND cd_medico_executor_honor_w::text <> '') then
					select	substr(nm_pessoa_fisica, 1, 255)
					into STRICT	ds_medico_executor_honor_w
					from	pessoa_fisica
					where	cd_pessoa_fisica	= cd_medico_executor_honor_w;
				end if;

				nm_prestador_w			:= nm_prestador_exec_honor_w;

				if (ie_tipo_analise_w = 'IN') and (coalesce(nr_seq_prestador_exec_honor_w::text, '') = '') then
					ds_item_w		:= nm_prestador_exec_honor_w;

				else
					ds_item_w		:= nm_prestador_w || ' (' || cd_prestador_exec_honor_w || ')';
				end if;

				ds_item_w			:= ds_ident_nivel_2_w || ds_item_w;

				if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
					select	CASE WHEN count(1)=0 THEN  'N'  ELSE ie_autorizado_honor_w END
					into STRICT	ie_autorizado_honor_w
					from	pls_guia_plano_proc	a
					where	a.nr_seq_guia		= nr_seq_guia_w
					and	a.cd_procedimento	= cd_procedimento_w
					and	a.ie_origem_proced	= ie_origem_proced_w;
				end if;

				if (nr_seq_setor_atend_w IS NOT NULL AND nr_seq_setor_atend_w::text <> '') then
					select	max(ds_setor_atendimento)
					into STRICT	ds_setor_atend_w
					from	pls_setor_atendimento
					where 	nr_sequencia	= nr_seq_setor_atend_w;
				else
					ds_setor_atend_w	:= null;
				end if;

				vl_taxa_intercambio_imp_w	:= coalesce(vl_taxa_servico_imp_w,0) + coalesce(vl_taxa_co_imp_w,0) + coalesce(vl_taxa_material_imp_w,0);
				vl_taxa_intercambio_w		:= coalesce(vl_taxa_servico_w,0) + coalesce(vl_taxa_co_w,0) + coalesce(vl_taxa_material_w,0);

				if (ie_status_item_w IS NOT NULL AND ie_status_item_w::text <> '') then
					select	ds_valor_dominio
					into STRICT	ds_status_item_w
					from	valor_dominio_v
					where	cd_dominio	= 1870
					and	vl_dominio	= ie_status_item_w;
				end if;

				if (ie_via_acesso_w IS NOT NULL AND ie_via_acesso_w::text <> '') then
					select	ds_valor_dominio
					into STRICT	ds_via_acesso_w
					from	valor_dominio_v
					where	cd_dominio	= 1268
					and	vl_dominio	= ie_via_acesso_w;
				end if;

				if (nr_seq_grau_partic_w IS NOT NULL AND nr_seq_grau_partic_w::text <> '') then
					select	substr(ds_grau_participacao,1,255),
						cd_tiss
					into STRICT	ds_grau_partic_w,
						cd_grau_partic_tiss_w
					from	pls_grau_participacao
					where	nr_sequencia	= nr_seq_grau_partic_w;
				end if;

				/* Obter se possui fluxo de análise */

				ie_sem_fluxo_w		:= pls_obter_se_item_sem_fluxo(nr_seq_analise_p,null, nr_seq_conta_proc_ww, null,null);

				if (coalesce(ie_pagamento_w::text, '') = '') then
					ie_pagamento_w	:= pls_analise_obter_status_pag(ie_status_item_w,qt_procedimento_imp_w,qt_liberado_w,
										vl_procedimento_imp_w,vl_procedimento_w,vl_liberado_w,vl_glosa_w, ie_glosa_w);
				end if;

				/* Tratar expansão do item */

				select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_expandido_w
				from	w_pls_analise_item_exp a
				where	a.nr_seq_analise	= nr_seq_analise_p
				and	a.nr_seq_conta_proc	= nr_seq_conta_proc_w;

				nr_sequencia_w	:= pls_consulta_analise_pck.get_nr_seq_item;

				qt_liberar_w	:= null;

				if (pls_consulta_analise_pck.get_se_selecao) then
					select	count(1),
						max(qt_liberar)
					into STRICT	qt_selecao_w,
						qt_liberar_w
					from	w_pls_analise_selecao_item	a
					where	a.nr_seq_analise	= nr_seq_analise_p
					and	a.nr_seq_w_item		= nr_sequencia_w;
				end if;

				if (qt_selecao_w > 0) then
					ie_selecionado_w	:= 'S';
				else
					ie_selecionado_w	:= 'N';
				end if;

				qt_cobranca_w	:= 0;
				begin
				select	coalesce(a.qt_item,0)
				into STRICT	qt_cobranca_w
				from	pls_conta_pos_estabelecido a
				where	a.nr_seq_conta_proc = nr_seq_conta_proc_ww;
				exception
					when others then
					qt_cobranca_w	:= 0;
				end;

				insert into w_pls_analise_item(nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_analise,
					nr_seq_conta,
					nr_seq_conta_proc,
					ds_item,
					ie_tipo_despesa,
					ie_tipo_linha,
					ie_tipo_item,
					qt_apresentada,
					vl_apresentado,
					vl_calculado_unitario,
					vl_calculado,
					nr_seq_proc_pai,
					cd_procedimento,
					ie_origem_proced,
					ie_via_acesso,
					ds_via_acesso,
					nm_prestador_solic,
					nr_auxiliares,
					cd_porte_anestesico,
					ds_tipo_guia,
					nm_prestador_exec,
					nm_prestador_pag,
					ds_espec_cbo,
					nr_seq_protocolo,
					ie_autoriz_previa,
					cd_guia,
					ds_setor_atend,
					ds_item_importacao,
					ds_medico_executor,
					vl_glosa_material,
					vl_glosa_hi,
					vl_glosa_co,
					vl_custo_operacional,
					vl_liberado_material,
					vl_liberado_co,
					vl_liberado_hi,
					vl_calculado_material,
					vl_calculado_co,
					vl_calculado_hi,
					tx_intercambio,
					tx_intercambio_imp,
					vl_taxa_intercambio,
					vl_taxa_intercambio_imp,
					qt_liberado,
					tx_item,
					vl_glosa,
					vl_liberado,
					vl_unitario_apres,
					nr_seq_prestador_exec,
					nr_seq_guia,
					ie_status_analise,
					ie_pagamento,
					ie_valor_base,
					ds_grau_partic,
					ie_status_item,
					ds_status_item,
					ie_pend_grupo,
					ie_item_nao_encontrado,
					ie_selecionado,
					qt_liberar,
					ie_sem_fluxo,
					ie_tipo_guia,
					vl_lib_taxa_co,
					vl_lib_taxa_material,
					vl_lib_taxa_servico,
					vl_glosa_taxa_co,
					vl_glosa_taxa_material,
					vl_glosa_taxa_servico,
					vl_taxa_co,
					vl_taxa_co_imp,
					vl_taxa_material,
					vl_taxa_material_imp,
					vl_taxa_servico,
					vl_taxa_servico_imp,
					tx_medico,
					tx_material,
					tx_custo_operacional,
					cd_grau_partic_tiss,
					nr_seq_autogerado,
					nr_identificador,
					vl_material_ptu_imp,
					vl_procedimento_ptu_imp,
					vl_co_ptu_imp,
					ie_pacote_ptu,
					qt_cobranca,
					nr_seq_regra_qtde_exec,
					ie_alto_custo,					
					nr_id_transacao,
					ie_a520)
				values (nr_sequencia_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nr_seq_analise_p,
					nr_seq_conta_w,
					nr_seq_conta_proc_ww,
					ds_item_w,
					ie_tipo_despesa_w,
					ie_tipo_linha_w,
					ie_tipo_item_w,
					qt_procedimento_imp_w,
					vl_procedimento_imp_w,
					vl_proc_unitario_w,
					vl_procedimento_w,
					nr_seq_proc_pai_w,
					cd_procedimento_w,
					ie_origem_proced_w,
					ie_via_acesso_w,
					ds_via_acesso_w,
					nm_prestador_solic_honor_w,
					nr_auxiliares_w,
					cd_porte_anestesico_w,
					ds_tipo_guia_honor_w,
					nm_prestador_exec_honor_w,
					nm_prestador_pag_w,
					ds_espec_cbo_honor_w,
					nr_seq_protocolo_honor_w,
					ie_autorizado_honor_w,
					cd_guia_honor_w,
					ds_setor_atend_w,
					ds_item_importacao_w,
					ds_medico_executor_honor_w,
					vl_glosa_material_w,
					vl_glosa_hi_w,
					vl_glosa_co_w,
					vl_custo_operacional_w,
					vl_liberado_material_w,
					vl_liberado_co_w,
					vl_liberado_hi_w,
					vl_calculado_material_w,
					vl_calculado_co_w,
					vl_calculado_hi_w,
					tx_intercambio_w,
					tx_intercambio_imp_w,
					vl_taxa_intercambio_w,
					vl_taxa_intercambio_imp_w,
					qt_liberado_w,
					tx_item_w,
					vl_glosa_w,
					vl_liberado_w,
					vl_unitario_apres_w,
					nr_seq_prestador_exec_honor_w,
					nr_seq_guia_item_w,
					ie_status_analise_w,
					ie_pagamento_w,
					ie_valor_base_w,
					ds_grau_partic_w,
					ie_status_item_w,
					ds_status_item_w,
					ie_pend_grupo_w,
					ie_item_nao_encontrado_w,
					ie_selecionado_w,
					qt_liberar_w,
					ie_sem_fluxo_w,
					ie_tipo_guia_conta_honor_w,
					vl_lib_taxa_co_honor_w,
					vl_lib_taxa_material_honor_w,
					vl_lib_taxa_servico_honor_w,
					vl_glosa_taxa_co_honor_w,
					vl_glosa_taxa_material_honor_w,
					vl_glosa_taxa_servico_honor_w,
					vl_taxa_co_w,
					vl_taxa_co_imp_w,
					vl_taxa_material_w,
					vl_taxa_material_imp_w,
					vl_taxa_servico_w,
					vl_taxa_servico_imp_w,
					tx_medico_w,
					tx_material_w,
					tx_custo_operacional_w,
					cd_grau_partic_tiss_w,
					nr_seq_autogerado_w,
					nr_identificador_w,
					vl_material_ptu_imp_w,
					vl_procedimento_ptu_imp_w,
					vl_co_ptu_imp_w,
					ie_pacote_w,
					qt_cobranca_w,
					nr_seq_regra_qtde_exec_w,
					ie_alto_custo_w,
					nr_id_transacao_p,
					ie_aviso_a520_part_w);
				if (nr_sequencia_aux_w <> 0) and (ie_status_item_w <> 'D') then
					ie_setou_valores_w := 'S';
					CALL pls_consulta_analise_pck.set_vl_apresentado(vl_procedimento_imp_w);
					CALL pls_consulta_analise_pck.set_vl_calculado(vl_procedimento_w);
					CALL pls_consulta_analise_pck.set_vl_liberado(vl_liberado_w);
					CALL pls_consulta_analise_pck.set_vl_glosado(vl_glosa_w);
					CALL pls_consulta_analise_pck.set_vl_taxa(vl_taxa_servico_w);
				end if;

				CALL pls_consulta_analise_pck.set_nr_seq_item(nr_sequencia_w + 1);
				vl_unitario_apres_ww		:= vl_unitario_apres_ww + vl_unitario_apres_w;
				vl_taxa_intercambio_imp_w		:= vl_taxa_intercambio_imp_w + vl_taxa_intercambio_imp_w;
				vl_taxa_intercambio_ww		:= vl_taxa_intercambio_ww + vl_taxa_intercambio_w;
				vl_liberado_material_ww		:= vl_liberado_material_ww + vl_liberado_material_w;
				vl_liberado_hi_ww			:= vl_liberado_hi_ww + vl_liberado_hi_w;
				vl_liberado_co_ww			:= vl_liberado_co_ww + vl_liberado_co_w;
				vl_liberado_ww			:= vl_liberado_ww + vl_liberado_w;
				vl_glosa_material_ww		:= vl_glosa_material_ww + vl_glosa_material_w;
				vl_glosa_hi_ww			:= vl_glosa_hi_ww + vl_glosa_hi_w;
				vl_glosa_co_ww			:= vl_glosa_co_ww + vl_glosa_co_w;
				vl_glosa_ww			:= vl_glosa_ww + vl_glosa_w;
				vl_custo_operacional_ww		:= vl_custo_operacional_ww + vl_custo_operacional_w;
				vl_proc_unitario_ww		:= vl_proc_unitario_ww + vl_proc_unitario_w;
				vl_calculado_material_ww		:= vl_calculado_material_ww + vl_calculado_material_w;
				vl_calculado_co_ww		:= vl_calculado_co_ww + vl_calculado_co_w;
				vl_calculado_hi_ww		:= vl_calculado_hi_ww + vl_calculado_hi_w;
				vl_procedimento_ww		:= vl_procedimento_ww + vl_procedimento_w;
				vl_material_ptu_imp_ww		:= vl_material_ptu_imp_ww + vl_material_ptu_imp_w;
				vl_procedimento_ptu_imp_ww		:= vl_procedimento_ptu_imp_ww + vl_procedimento_ptu_imp_w;
				vl_co_ptu_imp_ww			:= vl_co_ptu_imp_ww + vl_co_ptu_imp_w;
				vl_procedimento_imp_ww		:= vl_procedimento_imp_ww + vl_procedimento_imp_w;
				vl_taxa_servico_imp_ww		:= vl_taxa_servico_imp_ww + vl_taxa_servico_imp_w;
				vl_taxa_co_imp_ww		:= vl_taxa_co_imp_ww + vl_taxa_co_imp_w;
				vl_taxa_material_imp_ww		:= vl_taxa_material_imp_ww + vl_taxa_material_imp_w;
				vl_lib_taxa_co_honor_ww		:= vl_lib_taxa_co_honor_ww + vl_lib_taxa_co_honor_w;
				vl_lib_taxa_material_honor_ww	:= vl_lib_taxa_material_honor_ww + vl_lib_taxa_material_honor_w;
				vl_lib_taxa_servico_honor_ww	:= vl_lib_taxa_servico_honor_ww + vl_lib_taxa_servico_honor_w;

				if (ie_proc_ref_w = 'S') and (ie_partic_agrup_w = 'N' or qt_partic_w > 1) then
					CALL pls_gerar_w_analise_item_part(nr_seq_analise_p, nr_seq_conta_proc_ww, nr_seq_grupo_p, ie_minha_analise_p, ie_pendentes_p, 1, nm_usuario_p,ie_somente_ocor_p, nr_id_transacao_p);
				end if;
			end if;
			end;
		end loop;
		close C02;

		if (nr_sequencia_aux_w <> 0) then
			/*
				Atualiza os valores na linha do procedimento agrupador. A totalização ocorre pelos itens do agrupamento. O decode dos valores ocorre por que se for selecionado o nível 1 de exibição de itens, então
				os itens "filhos" do agrupamento não são exibidos e com isso não ocorria a totalização e consequentemente os valores ficavam zerados. O decode lança o valor do prór
			*/
			if ( coalesce(nr_id_transacao_p::text, '') = '') then
			
			update	w_pls_analise_item
			set	vl_apresentado			= CASE WHEN vl_procedimento_imp_ww=0 THEN  vl_procedimento_imp_w  ELSE vl_procedimento_imp_ww END ,
				vl_unitario_apres		= CASE WHEN vl_unitario_apres_ww=0 THEN  vl_unitario_apres_w  ELSE vl_unitario_apres_ww END ,
				vl_taxa_intercambio_imp		= vl_taxa_intercambio_imp_w,
				vl_taxa_intercambio		= vl_taxa_intercambio_ww,
				vl_liberado_material		= CASE WHEN vl_liberado_material_ww=0 THEN  vl_liberado_material_w  ELSE vl_liberado_material_ww END ,
				vl_liberado_hi			= CASE WHEN vl_liberado_hi_ww=0 THEN  vl_liberado_hi_w  ELSE vl_liberado_hi_ww END ,
				vl_liberado_co			= CASE WHEN vl_liberado_co_ww=0 THEN  vl_liberado_co_w  ELSE vl_liberado_co_ww END ,
				vl_liberado			= CASE WHEN vl_liberado_ww=0 THEN  vl_liberado_w  ELSE vl_liberado_ww END ,
				vl_glosa_material		= CASE WHEN vl_glosa_material_ww=0 THEN  vl_glosa_material_w  ELSE vl_glosa_material_ww END ,
				vl_glosa_hi			= CASE WHEN vl_glosa_hi_ww=0 THEN  vl_glosa_hi_w  ELSE vl_glosa_hi_ww END ,
				vl_glosa_co			= CASE WHEN vl_glosa_co_ww=0 THEN  vl_glosa_co_w  ELSE vl_glosa_co_ww END ,
				vl_glosa			= CASE WHEN vl_glosa_ww=0 THEN  vl_glosa_w  ELSE vl_glosa_ww END ,
				vl_custo_operacional		= CASE WHEN vl_custo_operacional_ww=0 THEN  vl_custo_operacional_w  ELSE vl_custo_operacional_ww END ,
				vl_calculado_unitario		= CASE WHEN vl_proc_unitario_ww=0 THEN  vl_proc_unitario_w  ELSE vl_proc_unitario_ww END ,
				vl_calculado_material		= CASE WHEN vl_calculado_material_ww=0 THEN  vl_calculado_material_w  ELSE vl_calculado_material_ww END ,
				vl_calculado_co			= CASE WHEN vl_calculado_co_ww=0 THEN  vl_calculado_co_w  ELSE vl_calculado_co_ww END ,
				vl_calculado_hi			= CASE WHEN vl_calculado_hi_ww=0 THEN  vl_calculado_hi_w  ELSE vl_calculado_hi_ww END ,
				vl_calculado			= CASE WHEN vl_procedimento_ww=0 THEN  vl_procedimento_w  ELSE vl_procedimento_ww END ,
				vl_material_ptu_imp		= CASE WHEN vl_material_ptu_imp_ww=0 THEN  vl_material_ptu_imp_w  ELSE vl_material_ptu_imp_ww END ,
				vl_procedimento_ptu_imp		= CASE WHEN vl_procedimento_ptu_imp_ww=0 THEN  vl_procedimento_ptu_imp_w  ELSE vl_procedimento_ptu_imp_ww END ,
				vl_co_ptu_imp			= CASE WHEN vl_co_ptu_imp_ww=0 THEN  vl_co_ptu_imp_w  ELSE vl_co_ptu_imp_ww END ,
				vl_taxa_servico_imp		= CASE WHEN vl_taxa_servico_imp_ww=0 THEN  vl_taxa_servico_imp_w  ELSE vl_taxa_servico_imp_ww END ,
				vl_taxa_co_imp			= CASE WHEN vl_taxa_co_imp_ww=0 THEN  vl_taxa_co_imp_w  ELSE vl_taxa_co_imp_ww END ,
				vl_taxa_material_imp		= CASE WHEN vl_taxa_material_imp_ww=0 THEN  vl_taxa_material_imp_w  ELSE vl_taxa_material_imp_ww END ,
				vl_lib_taxa_co			= CASE WHEN vl_lib_taxa_co_honor_ww=0 THEN  vl_lib_taxa_co_honor_w  ELSE vl_lib_taxa_co_honor_ww END ,
				vl_lib_taxa_material		= CASE WHEN vl_lib_taxa_material_honor_ww=0 THEN  vl_lib_taxa_material_honor_w  ELSE vl_lib_taxa_material_honor_ww END ,
				vl_lib_taxa_servico		= CASE WHEN vl_lib_taxa_servico_honor_ww=0 THEN  vl_lib_taxa_servico_honor_w  ELSE vl_lib_taxa_servico_honor_ww END
			where	nr_sequencia			= nr_sequencia_aux_w
			and	nm_usuario	= nm_usuario_p;
			
			else
		
			update	w_pls_analise_item
				set	vl_apresentado			= CASE WHEN vl_procedimento_imp_ww=0 THEN  vl_procedimento_imp_w  ELSE vl_procedimento_imp_ww END ,
					vl_unitario_apres		= CASE WHEN vl_unitario_apres_ww=0 THEN  vl_unitario_apres_w  ELSE vl_unitario_apres_ww END ,
					vl_taxa_intercambio_imp		= vl_taxa_intercambio_imp_w,
					vl_taxa_intercambio		= vl_taxa_intercambio_ww,
					vl_liberado_material		= CASE WHEN vl_liberado_material_ww=0 THEN  vl_liberado_material_w  ELSE vl_liberado_material_ww END ,
					vl_liberado_hi			= CASE WHEN vl_liberado_hi_ww=0 THEN  vl_liberado_hi_w  ELSE vl_liberado_hi_ww END ,
					vl_liberado_co			= CASE WHEN vl_liberado_co_ww=0 THEN  vl_liberado_co_w  ELSE vl_liberado_co_ww END ,
					vl_liberado			= CASE WHEN vl_liberado_ww=0 THEN  vl_liberado_w  ELSE vl_liberado_ww END ,
					vl_glosa_material		= CASE WHEN vl_glosa_material_ww=0 THEN  vl_glosa_material_w  ELSE vl_glosa_material_ww END ,
					vl_glosa_hi			= CASE WHEN vl_glosa_hi_ww=0 THEN  vl_glosa_hi_w  ELSE vl_glosa_hi_ww END ,
					vl_glosa_co			= CASE WHEN vl_glosa_co_ww=0 THEN  vl_glosa_co_w  ELSE vl_glosa_co_ww END ,
					vl_glosa			= CASE WHEN vl_glosa_ww=0 THEN  vl_glosa_w  ELSE vl_glosa_ww END ,
					vl_custo_operacional		= CASE WHEN vl_custo_operacional_ww=0 THEN  vl_custo_operacional_w  ELSE vl_custo_operacional_ww END ,
					vl_calculado_unitario		= CASE WHEN vl_proc_unitario_ww=0 THEN  vl_proc_unitario_w  ELSE vl_proc_unitario_ww END ,
					vl_calculado_material		= CASE WHEN vl_calculado_material_ww=0 THEN  vl_calculado_material_w  ELSE vl_calculado_material_ww END ,
					vl_calculado_co			= CASE WHEN vl_calculado_co_ww=0 THEN  vl_calculado_co_w  ELSE vl_calculado_co_ww END ,
					vl_calculado_hi			= CASE WHEN vl_calculado_hi_ww=0 THEN  vl_calculado_hi_w  ELSE vl_calculado_hi_ww END ,
					vl_calculado			= CASE WHEN vl_procedimento_ww=0 THEN  vl_procedimento_w  ELSE vl_procedimento_ww END ,
					vl_material_ptu_imp		= CASE WHEN vl_material_ptu_imp_ww=0 THEN  vl_material_ptu_imp_w  ELSE vl_material_ptu_imp_ww END ,
					vl_procedimento_ptu_imp		= CASE WHEN vl_procedimento_ptu_imp_ww=0 THEN  vl_procedimento_ptu_imp_w  ELSE vl_procedimento_ptu_imp_ww END ,
					vl_co_ptu_imp			= CASE WHEN vl_co_ptu_imp_ww=0 THEN  vl_co_ptu_imp_w  ELSE vl_co_ptu_imp_ww END ,
					vl_taxa_servico_imp		= CASE WHEN vl_taxa_servico_imp_ww=0 THEN  vl_taxa_servico_imp_w  ELSE vl_taxa_servico_imp_ww END ,
					vl_taxa_co_imp			= CASE WHEN vl_taxa_co_imp_ww=0 THEN  vl_taxa_co_imp_w  ELSE vl_taxa_co_imp_ww END ,
					vl_taxa_material_imp		= CASE WHEN vl_taxa_material_imp_ww=0 THEN  vl_taxa_material_imp_w  ELSE vl_taxa_material_imp_ww END ,
					vl_lib_taxa_co			= CASE WHEN vl_lib_taxa_co_honor_ww=0 THEN  vl_lib_taxa_co_honor_w  ELSE vl_lib_taxa_co_honor_ww END ,
					vl_lib_taxa_material		= CASE WHEN vl_lib_taxa_material_honor_ww=0 THEN  vl_lib_taxa_material_honor_w  ELSE vl_lib_taxa_material_honor_ww END ,
					vl_lib_taxa_servico		= CASE WHEN vl_lib_taxa_servico_honor_ww=0 THEN  vl_lib_taxa_servico_honor_w  ELSE vl_lib_taxa_servico_honor_ww END
				where nr_sequencia			= nr_sequencia_aux_w
				  and  nr_id_transacao = nr_id_transacao_p		
				  and nr_seq_analise  = nr_seq_analise_p
				  and  nm_usuario	= nm_usuario_p;
				
			end if;
	
			if (ie_setou_valores_w = 'N') and (ie_status_item_w <> 'D') then
				CALL pls_consulta_analise_pck.set_vl_apresentado(vl_procedimento_imp_w);
				CALL pls_consulta_analise_pck.set_vl_calculado(vl_procedimento_w);
				CALL pls_consulta_analise_pck.set_vl_liberado(vl_liberado_w);
				CALL pls_consulta_analise_pck.set_vl_glosado(vl_glosa_w);
				CALL pls_consulta_analise_pck.set_vl_taxa(vl_taxa_servico_w);
			end if;
		end if;

		if (ie_proc_ref_w = 'N') then
			CALL pls_gerar_w_analise_item_part(nr_seq_analise_p, nr_seq_conta_proc_w, nr_seq_grupo_p, ie_minha_analise_p, ie_pendentes_p, qt_informativo_w, nm_usuario_p, ie_somente_ocor_p, nr_id_transacao_p);
		end if;
	end if;
	end;
end loop;
close C01;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_w_analise_item_agr ( nr_seq_analise_p bigint, nr_seq_conta_p bigint, nr_seq_grupo_p bigint, ie_minha_analise_p text, ie_pendentes_p text, nm_usuario_p text, ie_somente_ocor_p text default 'N', ie_ocultar_canc_p text default 'N', nr_id_transacao_p w_pls_analise_item.nr_id_transacao%type DEFAULT NULL) FROM PUBLIC;

