-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prontuario_anual ( ie_forma_anual_p text, nm_usuario_p text, nr_prontuario_p INOUT bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar o numero de prontuario para a pessoa fisica.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
	A tabela PACIENTE_PRONTUARIO_ANUAL nao esta em tela, e necessario fazer um insert na 
base do cliente para utilizar este processo da primeira vez.

	IE_FORMA_ANUAL_P - Dominio 1692
		S - Gerar com sequencia anual (ate 4 digitos a esquerda conforme mascara)
		M - Gerar com sequencia mensal (yymm000)
		E - Gerar com sequencia padrao (dois digitos a direita)
		C - Gerar com sequencia mensal com cinco digitos (yymm00000)
		N - Nao gerar prontuario anual
-------------------------------------------------------------------------------------------------------------------

Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_prontuario_w		bigint;
nr_prontuario_w			bigint	:= 0;
nr_prontuario_novo_w		bigint	:= 0;
nr_prontuario_novo_char_w	varchar(255);
qt_prontuario_w			bigint	:= 1;
qt_digito_pront_w		smallint 	:= 1;
ie_pos_digito_w			smallint;
ds_digito_w			varchar(4) 	:= '';
ds_mascara_w			varchar(10);
nr_digito_pront_w		smallint;
nr_prontuario_mes_w		bigint;

c01 CURSOR FOR
	SELECT	ds_mascara
	from	paciente_prontuario_anual
	order by
		dt_referencia;


BEGIN
if (coalesce(ie_forma_anual_p,'S') = 'S') then
	lock table paciente_prontuario_anual in exclusive mode;

	/* Rafael em 02/01/2007 OS42393 => reaproveitar prontuarios gerados nao utilizados */

	delete
	from	paciente_prontuario_anual a
	where	a.nr_prontuario > 0
	and	a.ie_deletar = 'S'
	and	not exists (SELECT	1
				from	pessoa_fisica	b
				where	b.nr_prontuario	= a.nr_prontuario);

	select	coalesce(max(somente_numero(nr_prontuario)),0)
	into STRICT	nr_prontuario_w
	from	paciente_prontuario_anual
	where	ESTABLISHMENT_TIMEZONE_UTILS.startOfYear(dt_referencia)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfYear(clock_timestamp());

	if (nr_prontuario_w > 0) then
		open c01;
		loop
		fetch c01 into ds_mascara_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			ds_mascara_w	:= ds_mascara_w;
			end;
		end loop;
		close c01;
		
		if (ds_mascara_w = '00000yy') then			
			begin
			nr_prontuario_novo_w := nr_prontuario_w;
			
			while(qt_prontuario_w > 0) loop
				begin				
				if (length(nr_prontuario_novo_w) = 2) then
					nr_prontuario_novo_char_w 	:= '';
					nr_prontuario_novo_char_w 	:= '1' || to_char(nr_prontuario_novo_w);
					nr_prontuario_novo_w		:= (nr_prontuario_novo_char_w)::numeric;
				else
					nr_prontuario_novo_w		:= (to_char((substr(to_char(nr_prontuario_novo_w),1,length(nr_prontuario_novo_w) - 2))::numeric  + 1) ||
										to_char(substr(to_char(nr_prontuario_novo_w),length(nr_prontuario_novo_w) - 1,length(nr_prontuario_novo_w))))::numeric;																		
				end if;	
			
				begin
					select	1
					into STRICT	qt_prontuario_w
					from	pessoa_fisica
					where	nr_prontuario = nr_prontuario_novo_w;
				exception
					when others then qt_prontuario_w := 0;
				end;		
				end;
			end loop;
			end;
		else
			begin
			begin
			nr_prontuario_novo_w	:= nr_prontuario_w;
			
			while(qt_prontuario_w > 0) loop
				begin
				nr_prontuario_novo_w	:= nr_prontuario_novo_w + 1;
				
				begin
				select	coalesce(count(*),0)
				into STRICT	qt_prontuario_w
				from	pessoa_fisica
				where	nr_prontuario	= nr_prontuario_novo_w;
				exception
				when others then
					qt_prontuario_w	:= 0;
				end;		
				end;
			end loop;
			end;
			end;
		end if;

		select	nextval('paciente_prontuario_anual_seq')
		into STRICT	nr_seq_prontuario_w
		;

		insert into paciente_prontuario_anual(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_referencia,
			ds_mascara,
			nr_prontuario,
			ie_deletar)
		values (nr_seq_prontuario_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			ds_mascara_w,
			nr_prontuario_novo_w,
			'S');
	elsif (nr_prontuario_w = 0) then
		open c01;
		loop
		fetch c01 into ds_mascara_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			ds_mascara_w	:= ds_mascara_w;
			end;
		end loop;
		close c01;

		if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') then
			if (ds_mascara_w = '00000yy') then	
				begin
				insert into paciente_prontuario_anual(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_referencia,
					ds_mascara,
					nr_prontuario,
					ie_deletar)
				values (nextval('paciente_prontuario_anual_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					ds_mascara_w,
					(to_char(clock_timestamp(),'yy'))::numeric ,
					'N');
				end;
			else
				begin
				select	length(ds_mascara_w),
					position('y' in ds_mascara_w)
				into STRICT	qt_digito_pront_w,
					ie_pos_digito_w
				;

				while(ie_pos_digito_w > 0) loop
					begin
					ds_digito_w		:= ds_digito_w || substr(ds_mascara_w, 1, ie_pos_digito_w);
					ds_mascara_w		:= substr(ds_mascara_w, ie_pos_digito_w + 1, qt_digito_pront_w);
					ie_pos_digito_w		:= position('y' in ds_mascara_w);
					end;
				end loop;

				if (ds_digito_w IS NOT NULL AND ds_digito_w::text <> '') then
					select	(to_char(clock_timestamp(), ds_digito_w))::numeric
					into STRICT	nr_digito_pront_w
					;

					nr_prontuario_novo_w	:= nr_digito_pront_w;

					while(length(nr_prontuario_novo_w) < qt_digito_pront_w) loop
						begin
						nr_prontuario_novo_w	:= nr_prontuario_novo_w || ('0')::numeric;
						end;
					end loop;

					select	nextval('paciente_prontuario_anual_seq')
					into STRICT	nr_seq_prontuario_w
					;

					insert into paciente_prontuario_anual(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						dt_referencia,
						ds_mascara,
						nr_prontuario,
						ie_deletar)
					values (nr_seq_prontuario_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						ds_digito_w || ds_mascara_w,
						nr_prontuario_novo_w,
						'N');

					nr_prontuario_novo_w := gerar_prontuario_anual(	ie_forma_anual_p, nm_usuario_p, nr_prontuario_novo_w);
				end if;
				end;
			end if;
			
			
		end if;
	end if;
elsif (coalesce(ie_forma_anual_p,'S') = 'E') then
	select	nextval('prontuario_seq') || to_char(clock_timestamp(),'yy')
	into STRICT	nr_prontuario_novo_w
	;
elsif (coalesce(ie_forma_anual_p,'S') = 'M') then
	lock table paciente_prontuario_anual in exclusive mode;
	
	delete
	from	paciente_prontuario_anual a
	where	a.nr_prontuario > 0
	and	a.ie_deletar = 'S'
	and	not exists (SELECT	1
				from	pessoa_fisica	b
				where	b.nr_prontuario	= a.nr_prontuario);

	select	coalesce(max(somente_numero(nr_prontuario)),0)
	into STRICT	nr_prontuario_w
	from	paciente_prontuario_anual
	where	ESTABLISHMENT_TIMEZONE_UTILS.startOfYear(dt_referencia)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfYear(clock_timestamp());	

	if (nr_prontuario_w > 0) then
		open c01;
		loop
		fetch c01 into ds_mascara_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			ds_mascara_w	:= ds_mascara_w;
			end;
		end loop;
		close c01;
		
		if (ds_mascara_w = 'yymm000') then			
			nr_prontuario_novo_w	:= nr_prontuario_w;
			
			select	coalesce(max(somente_numero(nr_prontuario)),0)
			into STRICT	nr_prontuario_mes_w
			from	paciente_prontuario_anual
			where	ESTABLISHMENT_TIMEZONE_UTILS.startOfYear(dt_referencia)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfYear(clock_timestamp())
			and 	ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_referencia)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(clock_timestamp());
			
			if (nr_prontuario_mes_w > 0) then -- Ja tem o prontuario no mes/ano entao acrescentar + 1
				while(qt_prontuario_w > 0) loop
					begin				
					nr_prontuario_novo_w	:= nr_prontuario_novo_w + 1;
			
					begin
					select	1
					into STRICT	qt_prontuario_w
					from	pessoa_fisica
					where	nr_prontuario	= nr_prontuario_novo_w;
					exception
					when others then 
						qt_prontuario_w	:= 0;
					end;
					end;
				end loop;
				
			else
				nr_prontuario_novo_char_w 	:= to_char((substr(to_char(nr_prontuario_novo_w),1,length(nr_prontuario_novo_w) - 3))::numeric  + 1);
				nr_prontuario_novo_w		:= (nr_prontuario_novo_char_w || substr(nr_prontuario_novo_w,length(nr_prontuario_novo_w)-2, length(nr_prontuario_novo_w)))::numeric;
				
				while(qt_prontuario_w > 0) loop
					begin						
					nr_prontuario_novo_w	:= nr_prontuario_novo_w + 1;
			
					begin
					select	1
					into STRICT	qt_prontuario_w
					from	pessoa_fisica
					where	nr_prontuario	= nr_prontuario_novo_w;
					exception
					when others then 
						qt_prontuario_w	:= 0;
					end;
					end;
				end loop;
				
			end if;
		
		end if;

		select	nextval('paciente_prontuario_anual_seq')
		into STRICT	nr_seq_prontuario_w
		;

		insert into paciente_prontuario_anual(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_referencia,
			ds_mascara,
			nr_prontuario,
			ie_deletar)
		values (nr_seq_prontuario_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			ds_mascara_w,
			nr_prontuario_novo_w,
			'S');				
	elsif (nr_prontuario_w = 0) then
		open c01;
		loop
		fetch c01 into	ds_mascara_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			ds_mascara_w	:= ds_mascara_w;
			end;
		end loop;
		close c01;

		if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') then
			if (ds_mascara_w = 'yymm000') then	
				begin
				nr_prontuario_novo_w	:= (to_char(clock_timestamp(),'yy') || to_char(clock_timestamp(),'mm') || '000')::numeric;
				nr_prontuario_novo_w	:= nr_prontuario_novo_w - 1;
				
				while(qt_prontuario_w > 0) loop
					begin						
					nr_prontuario_novo_w	:= nr_prontuario_novo_w + 1;
			
					begin
					select	1
					into STRICT	qt_prontuario_w
					from	pessoa_fisica
					where	nr_prontuario	= nr_prontuario_novo_w;
					exception
					when others then 
						qt_prontuario_w	:= 0;
					end;
					end;
				end loop;
				
				insert into paciente_prontuario_anual(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_referencia,
					ds_mascara,
					nr_prontuario,
					ie_deletar)
				values (nextval('paciente_prontuario_anual_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					ds_mascara_w,
					nr_prontuario_novo_w,
					'N');
				end;
			end if;
		end if;
	end if;
elsif (coalesce(ie_forma_anual_p,'S') = 'C') then
	lock table paciente_prontuario_anual in exclusive mode;
	
	delete
	from	paciente_prontuario_anual a
	where	a.nr_prontuario > 0
	and	a.ie_deletar = 'S'
	and	not exists (SELECT	1
				from	pessoa_fisica	b
				where	b.nr_prontuario	= a.nr_prontuario);

	-- Busca se ha um prontuario para o ano
	select	coalesce(max(somente_numero(nr_prontuario)),0)
	into STRICT	nr_prontuario_w
	from	paciente_prontuario_anual
	where	ESTABLISHMENT_TIMEZONE_UTILS.startOfYear(dt_referencia)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfYear(clock_timestamp());	

	if (nr_prontuario_w > 0) then
		-- Caso existir busca a mascara
		open c01;
		loop
		fetch c01 into ds_mascara_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			ds_mascara_w	:= ds_mascara_w;
			end;
		end loop;
		close c01;
		
		if (ds_mascara_w = 'yymm00000') then			
			nr_prontuario_novo_w	:= nr_prontuario_w;
			
			-- Caso seja a mascara verifica se ha prontuario para o mes
			select	coalesce(max(somente_numero(nr_prontuario)),0)
			into STRICT	nr_prontuario_mes_w
			from	paciente_prontuario_anual
			where	ESTABLISHMENT_TIMEZONE_UTILS.startOfYear(dt_referencia)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfYear(clock_timestamp())
			and 	ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(dt_referencia)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfMonth(clock_timestamp());
			
			-- Ja tem o prontuario no mes/ano entao acrescentar + 1
			if (nr_prontuario_mes_w > 0) then
				while(qt_prontuario_w > 0) loop
					begin				
					nr_prontuario_novo_w	:= nr_prontuario_novo_w + 1;
			
					begin
					select	1
					into STRICT	qt_prontuario_w
					from	pessoa_fisica
					where	nr_prontuario	= nr_prontuario_novo_w;
					exception
					when others then 
						qt_prontuario_w	:= 0;
					end;
					end;
				end loop;
			else
				-- Caso nao exista

				--Busca as 4 primeiras posicoes e soma "1" para a posicao do mes, exemplo: 150100001, pega 1501 soma 1 para gerar 1502
				nr_prontuario_novo_char_w 	:= to_char((substr(to_char(nr_prontuario_novo_w),1,length(nr_prontuario_novo_w) - 5))::numeric  + 1);
				-- Busca as posicoes de ano/mes e concatena com o sequencial, exemplo 1502 concatenado com 00001 para gerar 150200001
				nr_prontuario_novo_w		:= (nr_prontuario_novo_char_w || substr(nr_prontuario_novo_w,length(nr_prontuario_novo_w)-4, length(nr_prontuario_novo_w)))::numeric;
				
				while(qt_prontuario_w > 0) loop
					begin						
					nr_prontuario_novo_w	:= nr_prontuario_novo_w + 1;
			
					begin
					select	1
					into STRICT	qt_prontuario_w
					from	pessoa_fisica
					where	nr_prontuario	= nr_prontuario_novo_w;
					exception
					when others then 
						qt_prontuario_w	:= 0;
					end;		
				
					end;
				end loop;
				
			end if;
		
		end if;

		select	nextval('paciente_prontuario_anual_seq')
		into STRICT	nr_seq_prontuario_w
		;

		insert into paciente_prontuario_anual(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_referencia,
			ds_mascara,
			nr_prontuario,
			ie_deletar)
		values (nr_seq_prontuario_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			ds_mascara_w,
			nr_prontuario_novo_w,
			'S');				
	elsif (nr_prontuario_w = 0) then
		-- Caso nao exista prontuario para o ano busca o ultimo gerado para saber a mascara
		open c01;
		loop
		fetch c01 into	ds_mascara_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			ds_mascara_w	:= ds_mascara_w;
			end;
		end loop;
		close c01;

		if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') then
			if (ds_mascara_w = 'yymm00000') then	
				begin
				-- Gera a primeira sequencia para o ano
				nr_prontuario_novo_w	:= (to_char(clock_timestamp(),'yy') || to_char(clock_timestamp(),'mm') || '00000')::numeric;
				nr_prontuario_novo_w	:= nr_prontuario_novo_w - 1;
				
				while(qt_prontuario_w > 0) loop
					begin						
					nr_prontuario_novo_w	:= nr_prontuario_novo_w + 1;
			
					begin
					select	1
					into STRICT	qt_prontuario_w
					from	pessoa_fisica
					where	nr_prontuario	= nr_prontuario_novo_w;
					exception
					when others then 
						qt_prontuario_w	:= 0;
					end;		
				
					end;
				end loop;
				
				insert into paciente_prontuario_anual(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_referencia,
					ds_mascara,
					nr_prontuario,
					ie_deletar)
				values (nextval('paciente_prontuario_anual_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					ds_mascara_w,
					nr_prontuario_novo_w,
					'N');
				end;
			end if;
		end if;
	end if;
end if;

--commit;
nr_prontuario_p	:= nr_prontuario_novo_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prontuario_anual ( ie_forma_anual_p text, nm_usuario_p text, nr_prontuario_p INOUT bigint) FROM PUBLIC;

