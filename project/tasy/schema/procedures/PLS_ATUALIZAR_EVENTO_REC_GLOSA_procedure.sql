-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_evento_rec_glosa ( nr_seq_glosa_prot_p pls_rec_glosa_protocolo.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


nr_seq_conta_w			bigint;
nr_seq_resumo_w			bigint;
nr_seq_rec_glosa_proc_w		bigint;
nr_seq_rec_glosa_mat_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_material_w		bigint;
ie_tipo_guia_w			varchar(10);
ie_origem_conta_w		varchar(10);
nr_seq_tipo_atendimento_w	bigint;
ie_tipo_despesa_w		varchar(10);
nr_seq_evento_w			bigint;
nr_seq_producao_w		bigint;
nr_seq_prestador_pgto_w		bigint;
pr_liberado_w			real;
pr_custo_operacional_w		real;
pr_materiais_w			real;
nr_seq_regra_valor_w		bigint;
vl_liberado_w			double precision;
vl_custo_operacional_w		double precision	:= 0;
vl_materiais_w			double precision	:= 0;
vl_taxa_adm_w			double precision	:= 0;
vl_taxa_adm_co_w		double precision	:= 0;
vl_taxa_adm_mat_w		double precision	:= 0;
dt_competencia_w		timestamp;
ie_proc_mat_w			varchar(10);
ie_tipo_despesa_proc_w		varchar(10);
ie_tipo_despesa_mat_w		varchar(10);
ie_tipo_item_w			varchar(10);
nr_seq_item_w			bigint;
nr_seq_segurado_w		bigint;
ie_taxa_coleta_w		varchar(1)	:= 'N';
ie_ato_cooperado_w		pls_conta_medica_resumo.ie_ato_cooperado%type;
ie_ato_cooperado_aux_w		pls_conta_medica_resumo.ie_ato_cooperado%type;
ie_regime_atendimento_w		pls_conta_medica_resumo.ie_regime_atendimento%type;
ie_saude_ocupacional_w		pls_conta_medica_resumo.ie_saude_ocupacional%type;


C01 CURSOR FOR
	SELECT	c.nr_sequencia nr_seq_rec_glosa_proc,
		null nr_seq_rec_glosa_mat,
		e.ie_tipo_item,
		e.nr_seq_conta,
		e.nr_sequencia,
		e.cd_procedimento,
		e.ie_origem_proced,
		e.nr_seq_material,
		e.ie_tipo_guia,
		e.ie_origem_conta,
		e.nr_seq_tipo_atendimento,
		e.ie_tipo_despesa,
		e.nr_seq_prestador_pgto,
		e.vl_liberado,
		e.vl_custo_operacional,
		e.vl_materiais,
		e.dt_competencia,
		e.ie_proc_mat, 
		e.nr_seq_item,
		e.vl_taxa_adm,
		e.vl_taxa_adm_co,
		e.nr_seq_segurado,
		e.vl_taxa_adm_mat,
		CASE WHEN coalesce(e.nr_seq_exame_coleta::text, '') = '' THEN 'N'  ELSE CASE WHEN e.ds_tipo_item='Prestador (Taxa de Coleta)' THEN 'S'  ELSE 'N' END  END ,
		coalesce(e.ie_ato_cooperado,d.ie_ato_cooperado) ie_ato_cooperado,
		e.ie_regime_atendimento, 
		e.ie_saude_ocupacional
	from	pls_conta_medica_resumo e,
		pls_conta_proc d,
		pls_rec_glosa_proc c,
		pls_rec_glosa_conta b,
		pls_rec_glosa_protocolo a
	where	a.nr_sequencia			= nr_seq_glosa_prot_p
	and	a.nr_sequencia			= b.nr_seq_protocolo
	and	b.nr_sequencia			= c.nr_seq_conta_rec
	and	c.nr_seq_conta_proc		= d.nr_sequencia
	and	d.nr_sequencia			= e.nr_seq_conta_proc
	and	d.nr_seq_conta			= e.nr_seq_conta
	
union

	SELECT	null nr_seq_rec_glosa_proc,
		c.nr_sequencia nr_seq_rec_glosa_mat,
		e.ie_tipo_item,
		e.nr_seq_conta,
		e.nr_sequencia,
		e.cd_procedimento,
		e.ie_origem_proced,
		e.nr_seq_material,
		e.ie_tipo_guia,
		e.ie_origem_conta,
		e.nr_seq_tipo_atendimento, 
		e.ie_tipo_despesa,
		e.nr_seq_prestador_pgto,
		e.vl_liberado,
		e.vl_custo_operacional,
		e.vl_materiais,
		e.dt_competencia,
		e.ie_proc_mat, 
		e.nr_seq_item,
		e.vl_taxa_adm,
		e.vl_taxa_adm_co,
		e.nr_seq_segurado,
		e.vl_taxa_adm_mat,
		CASE WHEN coalesce(e.nr_seq_exame_coleta::text, '') = '' THEN 'N'  ELSE CASE WHEN e.ds_tipo_item='Prestador (Taxa de Coleta)' THEN 'S'  ELSE 'N' END  END ,
		coalesce(e.ie_ato_cooperado,d.ie_ato_cooperado) ie_ato_cooperado,
		ie_regime_atendimento_w, 
		ie_saude_ocupacional_w
	from	pls_conta_medica_resumo e,
		pls_conta_mat d,
		pls_rec_glosa_mat c,
		pls_rec_glosa_conta b,
		pls_rec_glosa_protocolo a
	where	a.nr_sequencia			= nr_seq_glosa_prot_p
	and	a.nr_sequencia			= b.nr_seq_protocolo
	and	b.nr_sequencia			= c.nr_seq_conta_rec
	and	c.nr_seq_conta_mat		= d.nr_sequencia
	and	d.nr_sequencia			= e.nr_seq_conta_mat
	and	d.nr_seq_conta			= e.nr_seq_conta;


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_rec_glosa_proc_w,
	nr_seq_rec_glosa_mat_w,
	ie_tipo_item_w,
	nr_seq_conta_w,
	nr_seq_resumo_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_material_w,
	ie_tipo_guia_w,
	ie_origem_conta_w,
	nr_seq_tipo_atendimento_w,
	ie_tipo_despesa_w,
	nr_seq_prestador_pgto_w,
	vl_liberado_w,
	vl_custo_operacional_w,
	vl_materiais_w,
	dt_competencia_w,
	ie_proc_mat_w,
	nr_seq_item_w,
	vl_taxa_adm_w,
	vl_taxa_adm_co_w,
	nr_seq_segurado_w,
	vl_taxa_adm_mat_w,
	ie_taxa_coleta_w,
	ie_ato_cooperado_aux_w,
	ie_regime_atendimento_w,
	ie_saude_ocupacional_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	if (ie_proc_mat_w = 'P') then
		ie_tipo_despesa_proc_w	:= ie_tipo_despesa_w;
	else
		ie_tipo_despesa_mat_w	:= ie_tipo_despesa_w;
	end if;

	SELECT * FROM pls_obter_evento_item(	cd_procedimento_w, ie_origem_proced_w, nr_seq_material_w, cd_estabelecimento_p, ie_tipo_guia_w, ie_origem_conta_w, nr_seq_tipo_atendimento_w, ie_tipo_despesa_w, nr_seq_segurado_w, nr_seq_conta_w, ie_taxa_coleta_w, null, nr_seq_evento_w, nr_seq_producao_w, 'G', ie_regime_atendimento_w, ie_saude_ocupacional_w) INTO STRICT nr_seq_evento_w, nr_seq_producao_w;

	-- se algum item nao obteve evento apresenta a mensagem ao usuario
	if (coalesce(nr_seq_evento_w::text, '') = '') then

		-- O recurso de glosa da conta #@NR_SEQ_CONTA#@ nao encontrou um evento.

		-- Por este motivo o protocolo nao foi liberado, favor verificar.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(460253, 'NR_SEQ_CONTA=' || to_char(nr_seq_conta_w));		
	end if;
	
	if (nr_seq_rec_glosa_proc_w IS NOT NULL AND nr_seq_rec_glosa_proc_w::text <> '') then
	
		select	max(ie_ato_cooperado)
		into STRICT	ie_ato_cooperado_w
		from	pls_conta_rec_resumo_item
		where	nr_seq_proc_rec	= nr_seq_rec_glosa_proc_w;
		
		if (coalesce(ie_ato_cooperado_w::text, '') = '') then
			ie_ato_cooperado_w := ie_ato_cooperado_aux_w;
		end if;
		
		update	pls_rec_glosa_proc
		set	nr_seq_evento	= nr_seq_evento_w
		where	nr_sequencia	= nr_seq_rec_glosa_proc_w;
		
		update	pls_conta_rec_resumo_item
		set	nr_seq_evento		= nr_seq_evento_w,
			ie_ato_cooperado	= ie_ato_cooperado_w
		where	nr_seq_proc_rec		= nr_seq_rec_glosa_proc_w;
	else
		select	max(ie_ato_cooperado)
		into STRICT	ie_ato_cooperado_w
		from	pls_conta_rec_resumo_item
		where	nr_seq_mat_rec = nr_seq_rec_glosa_mat_w;
		
		if (coalesce(ie_ato_cooperado_w::text, '') = '') then
			ie_ato_cooperado_w := ie_ato_cooperado_aux_w;
		end if;
		
		update	pls_rec_glosa_mat
		set	nr_seq_evento	= nr_seq_evento_w
		where	nr_sequencia	= nr_seq_rec_glosa_mat_w;
		
		update	pls_conta_rec_resumo_item
		set	nr_seq_evento		= nr_seq_evento_w,
			ie_ato_cooperado	= ie_ato_cooperado_w
		where	nr_seq_mat_rec		= nr_seq_rec_glosa_mat_w;
	end if;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_evento_rec_glosa ( nr_seq_glosa_prot_p pls_rec_glosa_protocolo.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

