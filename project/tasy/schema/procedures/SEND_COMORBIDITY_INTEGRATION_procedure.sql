-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE send_comorbidity_integration (nr_sequencia_p bigint, cd_pessoa_fisica_p bigint, nr_atendimento_p bigint, nr_seq_hist_rotina_p bigint, dt_liberacao_p timestamp, dt_inativacao_p timestamp, dt_atualizacao_p timestamp) AS $body$
DECLARE

								
visit_id_w 					paciente_antec_clinico.nr_atendimento%type;
patient_id_w 				paciente_antec_clinico.cd_pessoa_fisica%type;
unitadmissiondatetime_w		varchar(30);
comorbidity_id_w			paciente_antec_clinico.nr_sequencia%type;
comorbidity_code_w			varchar(30);
comorbidity_value_w			varchar(4);
comorbidity_site_code_w		varchar(30);
comorbidity_site_value_w	varchar(4);
comorbidity_delete_w      varchar(4);
updatetimestamp_w			varchar(30);
updatetimestampfilter_w		varchar(30);
ds_integracao_w            	text;
nm_user_w               	paciente_antec_clinico.nm_usuario%type;
establishment_id_w   smallint;


BEGIN

if (obter_setor(obter_setor_atual_paciente(nr_atendimento_p)) is not null) then

	select 	max(cd_pessoa_fisica_p) patient_id,
			max(nr_atendimento_p) visit_id,
			max(to_char(obter_data_entrada_setor(nr_atendimento_p), 'yyyymmddhh24miss'))unitadmissiondatetime,
			(max(nr_sequencia_p)||to_char(SUBSTR(nr_atendimento_p,6,3))) comorbidity_id,
			obter_comorbidity_code(max(nr_seq_hist_rotina_p), 'COMORBIDITY_CODE') comorbidity_code,
			case
				when (max(dt_inativacao_p) IS NOT NULL AND (max(dt_inativacao_p))::text <> '')
				then '0'
				else '1'
			end comorbidity_value,
			obter_comorbidity_code(max(nr_seq_hist_rotina_p), 'COMORBIDITY_SITE_CODE') comorbidity_site_code,
			case
				when obter_comorbidity_code(max(nr_seq_hist_rotina_p), 'COMORBIDITY_SITE_CODE') is not null
				then '1'
				else case
					when (max(dt_inativacao_p) IS NOT NULL AND (max(dt_inativacao_p))::text <> '')
					then '0'
					else '1'
				end
			end comorbidity_site_value,
			case
				when coalesce(max(dt_inativacao_p)::text, '') = ''
				then to_char(max(dt_atualizacao_p), 'yyyymmddhh24miss')
				else to_char(max(dt_inativacao_p), 'yyyymmddhh24miss')
			end updatetimestamp,
			case
				when coalesce(max(dt_inativacao_p)::text, '') = ''
				then to_date(max(dt_atualizacao_p))
				else to_date(max(dt_inativacao_p))
			end updatetimestampfilter,
      case
					when (max(dt_inativacao_p) IS NOT NULL AND (max(dt_inativacao_p))::text <> '')
					then '0'
					else '1'
			end comorbidity_delete_value
	into STRICT 	patient_id_w,
			visit_id_w,
			unitadmissiondatetime_w,
			comorbidity_id_w,
			comorbidity_code_w,
			comorbidity_value_w,
			comorbidity_site_code_w,
			comorbidity_site_value_w,
			updatetimestamp_w,
			updatetimestampfilter_w,
      comorbidity_delete_w

	 
	where (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '')
	and (nr_seq_hist_rotina_p IS NOT NULL AND nr_seq_hist_rotina_p::text <> '')
	and (dt_liberacao_p IS NOT NULL AND dt_liberacao_p::text <> '')
	and (obter_comorbidity_code(nr_seq_hist_rotina_p,'COMORBIDITY_CODE') IS NOT NULL AND (obter_comorbidity_code(nr_seq_hist_rotina_p,'COMORBIDITY_CODE'))::text <> '');
  
  select
    obter_estabelecimento_setor(obter_setor_atual_paciente(nr_atendimento_p))
  into STRICT
    establishment_id_w
;

	nm_user_w := WHEB_USUARIO_PCK.GET_NM_USUARIO;
	
	if (patient_id_w IS NOT NULL AND patient_id_w::text <> '') then
	
		SELECT BIFROST.SEND_INTEGRATION( 'patientinformation.comorbidity',
										'com.philips.tasy.integration.atepac.patientinformation.comorbidity.Comorbidity',
										'{ "patientId" : "' ||patient_id_w || '",'
										|| '"visitId" : "' ||visit_id_w || '",'
                    || '"establishmentId" : "'||establishment_id_w||'",'
										|| '"unitadmissiondatetime" : "' || unitadmissiondatetime_w ||'",'
										|| '"comorbidityId" : "' || comorbidity_id_w ||'" ,'
										|| '"comorbidityCode" : "' || comorbidity_code_w ||'" ,'
										|| '"comorbidityValue" : "' || comorbidity_value_w ||'" ,'
										|| '"comorbiditySiteCode" : "' || comorbidity_site_code_w ||'" ,'
										|| '"comorbiditySiteValue" : "' || comorbidity_site_value_w ||'" ,'
                    || '"comorbidityDelete" : "' || comorbidity_delete_w ||'" ,'
										|| '"updatetimestamp" : "' || updatetimestamp_w ||'" ,'
										|| '"updatetimestampfilter" : "' || updatetimestampfilter_w ||'" '
										|| '}',
										nm_user_w)
			INTO STRICT DS_INTEGRACAO_W
			;
	end if;		

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE send_comorbidity_integration (nr_sequencia_p bigint, cd_pessoa_fisica_p bigint, nr_atendimento_p bigint, nr_seq_hist_rotina_p bigint, dt_liberacao_p timestamp, dt_inativacao_p timestamp, dt_atualizacao_p timestamp) FROM PUBLIC;

