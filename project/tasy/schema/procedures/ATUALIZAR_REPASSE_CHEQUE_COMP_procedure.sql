-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_repasse_cheque_comp ( nr_titulo_p bigint, dt_compasacao_p timestamp, vl_cheque_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_Seq_caixa_receb_p bigint, nr_seq_cheque_p bigint) AS $body$
DECLARE




pr_repasse_w			double precision;
vl_total_conta_w		double precision;
vl_total_conta_rec_w		double precision;
vl_total_repasse_w		double precision;
vl_repasse_w			double precision;
vl_novo_repasse_w		double precision;
nr_seq_repasse_w		bigint;
nr_seq_proc_rep_novo_w		bigint;
nr_seq_mat_rep_novo_w		bigint;
nr_titulo_receb_w		bigint;
ie_lib_adiantamento_w		parametro_repasse.ie_lib_adiantamento%type;

c01 CURSOR FOR
SELECT	obter_valor_repasse_item(a.nr_seq_procedimento,'P'),
	a.vl_repasse,
	a.nr_sequencia
from	convenio d,
	procedimento_paciente b,   	
	procedimento_repasse a,
	titulo_receber c
where	coalesce(a.nr_repasse_terceiro::text, '') = ''  
and	a.nr_seq_procedimento	= b.nr_sequencia
and	coalesce(b.cd_motivo_exc_conta::text, '') = ''  
and	b.nr_interno_conta	= c.nr_interno_conta  
and	b.cd_convenio		= d.cd_convenio  
and	d.ie_tipo_convenio	= 1
and	c.cd_estabelecimento	= cd_estabelecimento_p
and	c.nr_titulo		= nr_titulo_receb_w
and	a.ie_status		in ('A','U','D');

c02 CURSOR FOR
SELECT	obter_valor_repasse_item(a.nr_seq_material,'M'),
	a.vl_repasse,
	a.nr_sequencia
from    convenio d,
	material_atend_paciente b,
	material_repasse a,
	titulo_receber c
where	coalesce(a.nr_repasse_terceiro::text, '') = ''  
and	a.nr_seq_material	= b.nr_sequencia  
and	coalesce(b.cd_motivo_exc_conta::text, '') = ''  
and	b.nr_interno_conta	= c.nr_interno_conta  
and	b.cd_convenio		= d.cd_convenio  
and	d.ie_tipo_convenio	= 1
and	c.cd_estabelecimento	= cd_estabelecimento_p
and	c.nr_titulo		= nr_titulo_receb_w
and	a.ie_status		in ('A','U','D');

c03 CURSOR FOR
SELECT 	distinct
	nr_titulo
from 	titulo_receber_liq
where	NR_SEQ_CAIXA_REC = nr_Seq_caixa_receb_p

union

SELECT 	nr_titulo_p

where	coalesce(nr_Seq_caixa_receb_p::text, '') = ''

union

select	distinct
	a.nr_seq_titulo_receber
from	movto_trans_financ a
where	coalesce(a.nr_seq_caixa_rec::text, '') = ''
and	a.nr_seq_cheque = nr_seq_cheque_p
and	coalesce(nr_seq_caixa_receb_p::text, '') = ''
and	(a.nr_seq_titulo_receber IS NOT NULL AND a.nr_seq_titulo_receber::text <> '')

union

select	distinct
	nr_titulo
from	titulo_receber_liq a,
	adiantamento_cheque_cr b
where	b.nr_adiantamento = a.nr_adiantamento
and	b.nr_seq_cheque	= nr_seq_cheque_p
and	ie_lib_adiantamento_w = 'S';


BEGIN
vl_total_conta_rec_w	:= 0;

begin
select	coalesce(ie_lib_adiantamento,'N')
into STRICT	ie_lib_adiantamento_w
from	parametro_repasse
where	cd_estabelecimento = cd_estabelecimento_p;
exception
when others then
	ie_lib_adiantamento_w	:= 'N';
end;

open c03;
loop
fetch c03 into
	nr_titulo_receb_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	
	select	coalesce(sum(vl_conta),0)
	into STRICT	vl_total_conta_w
	from	titulo_receber c,
		conta_paciente b
	where	b.nr_interno_conta	= c.nr_interno_conta
	and	c.cd_estabelecimento	= cd_estabelecimento_p
	and	c.nr_titulo		= nr_titulo_receb_w;
	
	vl_total_conta_rec_w := vl_total_conta_rec_w + vl_total_conta_w;

end loop;
close c03;

if (vl_cheque_p >= vl_total_conta_rec_w) then
	pr_repasse_w 		:= 1;
else	
	pr_repasse_w 		:= dividir_sem_round(vl_cheque_p,vl_total_conta_rec_w);
end if;

open c03;
loop
fetch c03 into
	nr_titulo_receb_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	
	open c01;
	loop
	fetch c01 into
		vl_total_repasse_w,
		vl_repasse_w,
		nr_seq_repasse_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		vl_novo_repasse_w := vl_total_repasse_w * pr_repasse_w;

		if (vl_repasse_w > vl_novo_repasse_w) then

			update 	procedimento_repasse
			set	vl_repasse = vl_novo_repasse_w,
				vl_liberado = vl_novo_repasse_w,
				ie_status = 'R',
				dt_liberacao = clock_timestamp(),
				nm_usuario = nm_usuario_p,
				dt_atualizacao = clock_timestamp()
			where nr_sequencia = nr_seq_repasse_w;

			desdobrar_procmat_repasse(nr_seq_repasse_w, null, 'A', (vl_repasse_w - (vl_novo_repasse_w)), nm_usuario_p, nr_seq_proc_rep_novo_w, nr_seq_mat_rep_novo_w);

		else
			update 	procedimento_repasse
			set	vl_liberado = vl_repasse,
				ie_status = 'R',
				dt_liberacao = clock_timestamp(),
				nm_usuario = nm_usuario_p,
				dt_atualizacao = clock_timestamp()
			where nr_sequencia = nr_seq_repasse_w;
			
		end if;
	end loop;
	close c01;


	open c02;
	loop
	fetch c02 into
		vl_total_repasse_w,
		vl_repasse_w,
		nr_seq_repasse_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */

		vl_novo_repasse_w := vl_total_repasse_w * pr_repasse_w;

		if (vl_repasse_w > vl_novo_repasse_w) then

			update 	material_repasse
			set	vl_repasse = vl_novo_repasse_w,
				vl_liberado = vl_novo_repasse_w,
				ie_status = 'R',
				dt_liberacao = clock_timestamp(),
				nm_usuario = nm_usuario_p,
				dt_atualizacao = clock_timestamp()
			where nr_sequencia = nr_seq_repasse_w;

			desdobrar_procmat_repasse(null, nr_seq_repasse_w, 'A', (vl_repasse_w - (vl_novo_repasse_w)), nm_usuario_p, nr_seq_proc_rep_novo_w, nr_seq_mat_rep_novo_w);

		else
			update 	material_repasse
			set	vl_liberado = vl_repasse,
				ie_status = 'R',
				dt_liberacao = clock_timestamp(),
				nm_usuario = nm_usuario_p,
				dt_atualizacao = clock_timestamp()
			where nr_sequencia = nr_seq_repasse_w;
			
		end if;
	end loop;
	close c02;
end loop;
close c03;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_repasse_cheque_comp ( nr_titulo_p bigint, dt_compasacao_p timestamp, vl_cheque_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_Seq_caixa_receb_p bigint, nr_seq_cheque_p bigint) FROM PUBLIC;

