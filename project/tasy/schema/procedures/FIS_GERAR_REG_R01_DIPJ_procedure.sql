-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_gerar_reg_r01_dipj ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE




cd_cnpj_w			varchar(14);
dt_inicial_w			timestamp;
dt_final_w			timestamp;
ds_lecd_w			varchar(5);
tp_registro_w			varchar(4);

nr_linha_w			bigint := qt_linha_p;
nr_seq_registro_w			bigint := nr_sequencia_p;
ds_arquivo_w			varchar(4000);
ds_compl_arquivo_w		varchar(4000);
ds_linha_w			varchar(8000);
sep_w				varchar(1) := '|';
ie_arquivo_w			varchar(15);
nr_recibo_w			varchar(12);
ie_orig_retif_w			varchar(1)	:= '0';
vl_total_rec_pj_w		double precision;

c01 CURSOR FOR
SELECT  a.cd_cgc cd_cnpj
from	estabelecimento a
where	a.cd_estabelecimento = cd_estabelecimento_p;


BEGIN

dt_inicial_w	:= trunc(dt_inicio_p,'mm');
dt_final_w	:= (dt_fim_p);

select	substr(max(nr_recibo),1,12)
into STRICT	nr_recibo_w
from	ctb_sped_controle b
where	b.nr_sequencia		= nr_seq_controle_p;

if (nr_recibo_w IS NOT NULL AND nr_recibo_w::text <> '') then
	ie_orig_retif_w	:= '1';
end if;

select	coalesce(sum(n.vl_total_nota),0) vl_total_nota
into STRICT	vl_total_rec_pj_w
from	nota_fiscal n,
	operacao_nota o
where	n.cd_operacao_nf = o.cd_operacao_nf
and	o.ie_servico = 'S'
and	o.ie_operacao_fiscal = 'S'
and	n.ie_situacao = 1
and	(n.dt_atualizacao_estoque IS NOT NULL AND n.dt_atualizacao_estoque::text <> '')
and	n.dt_emissao between trunc(dt_inicio_p,'dd') and fim_dia(dt_fim_p)
and	exists (	SELECT	1
		from	nota_fiscal_trib b,
			tributo d
		where	d.cd_tributo	= b.cd_tributo
		and	b.nr_sequencia	= n.nr_sequencia
		and	d.ie_tipo_tributo in ('CSLL','IR')
		and	b.vl_tributo > 0);

open c01;
loop
fetch c01 into
	cd_cnpj_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	ds_linha_w	:= substr(
				/*01*/
	'R01'			||
					' '			||
				/*03*/
	'0000'			||
					rpad(cd_cnpj_w,14,' ')	||
				/*05*/
	'0'			||
					ie_orig_retif_w		||
				/*07*/
	rpad(coalesce(nr_recibo_w,0),12,'0')||
					'0'			||
				/*09*/
	'0000'			||
					to_char(dt_inicio_p,'DDMM') ||
				/*11*/
	to_char(dt_fim_p,'DDMM') ||
					'0' 	||
					'0' 	||
					'1' 	||
				/*15*/
	'1' 	||
					'1' 	||
				/*17*/
	'0000'	||
					'0000'	||
				/*19*/
	'0' 	||
					'0' 	||
				/*21*/
	'0' 	||
					'0' 	||
				/*23*/
	'0' 	||
					'0' 	||
				/*25*/
	'0' 	||
					'0' 	||
				/*27*/
	'0' 	||
					'0' 	||
				/*29*/
	'0' 	||
					'0' 	||
				/*31*/
	'0' 	||
					'0' 	||
				/*33*/
	'0' 	||
					'0' 	||
				/*35*/
	'0' 	||
					'0' 	||
				/*37*/
	'0' 	||
					'0' 	||
				/*39*/
	'0' 	||
					'0' 	||
				/*41*/
	'0' 	||
					'0' 	||
				/*43*/
	'0' 	||
					'0' 	||
				/*45*/
	'0' 	||
					'0' 	||
				/*47*/
	'0' 	||
					'00' 	||
				/*49*/
	'0' 	||
					'00000000'		||
				/*51*/
	'00000000000000'	||
					'2'	||
				/*53*/
	'0'	||
					rpad(' ', 10, ' '),1,8000);


	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_compl_arquivo_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w		:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;

	insert into fis_dipj_registro(
			nr_sequencia,
			ds_arquivo,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_controle_dipj,
			ds_arquivo_compl,
			cd_registro,
			nr_linha)
		values (
			nr_seq_registro_w,
			ds_arquivo_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_controle_p,
			ds_compl_arquivo_w,
			'R01',
			nr_linha_w);


	end;
end loop;
close c01;

commit;


qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_gerar_reg_r01_dipj ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

