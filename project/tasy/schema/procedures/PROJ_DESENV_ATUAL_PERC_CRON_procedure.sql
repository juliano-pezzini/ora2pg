-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE proj_desenv_atual_perc_cron ( nr_seq_cronograma_p bigint, nm_usuario_p text) AS $body$
DECLARE

		
nr_seq_fase_w			bigint;
qt_hora_prev_fase_w		double precision;
nr_seq_atividade_w		bigint;
qt_hora_sent_ativ_w		double precision;
qt_hora_sent_ativ_total_w	double precision := 0;
nr_seq_projeto_w		bigint;
ie_tipo_cronograma_w		varchar(15);
pr_cronograma_w			double precision;
pr_realizacao_w			double precision;
qt_peso_etapa_w			real;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.qt_hora_prev
from	proj_cron_etapa a
where	a.nr_seq_cronograma = nr_seq_cronograma_p
and	exists (
		SELECT	1
		from	proj_cron_etapa x
		where	x.nr_seq_cronograma = a.nr_seq_cronograma
		and	x.nr_seq_superior = a.nr_sequencia
		and	coalesce(x.ie_situacao,'A') = 'A')
order by
	a.nr_seq_apres desc;

c02 CURSOR FOR
SELECT	a.nr_sequencia,
	obter_valor_perc(a.qt_hora_prev,a.pr_etapa) qt_hora_sent_ativ
from	proj_cron_etapa a
where	a.nr_seq_cronograma = nr_seq_cronograma_p
and	a.nr_seq_superior = nr_seq_fase_w
and	coalesce(a.ie_situacao,'A') = 'A'
order by
	a.nr_seq_apres desc;
	
c03 CURSOR FOR
	SELECT  e.qt_hora_prev hrs_previstas_etapa,
		c.qt_total_horas hrs_previstas_cronograma,
		e.pr_etapa
	from    proj_projeto p,
		proj_cronograma c,
		proj_cron_etapa e
	where	p.nr_sequencia = c.nr_seq_proj
	and     c.nr_sequencia = e.nr_seq_cronograma
	and     c.ie_situacao  = 'A'
	and	c.nr_sequencia =  nr_seq_cronograma_p
	and	exists (
				SELECT	1
				from	proj_cron_etapa xx
				where	coalesce(xx.nr_seq_superior::text, '') = ''
				and	e.nr_sequencia = xx.nr_sequencia
			)
	order by c.ie_tipo_cronograma, e.dt_inicio_prev;

BEGIN
if (nr_seq_cronograma_p IS NOT NULL AND nr_seq_cronograma_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	begin
	open c01;
	loop
	fetch c01 into	nr_seq_fase_w,
			qt_hora_prev_fase_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		qt_hora_sent_ativ_total_w := 0;
		open c02;
		loop
		fetch c02 into	nr_seq_atividade_w,
				qt_hora_sent_ativ_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			qt_hora_sent_ativ_total_w := qt_hora_sent_ativ_total_w + qt_hora_sent_ativ_w;
			end;
		end loop;
		close c02;
		
		update	proj_cron_etapa
		set	pr_etapa = least(100, obter_perc_valor(qt_hora_sent_ativ_total_w, qt_hora_prev_fase_w)),
			dt_atualizacao = clock_timestamp(),
			nm_usuario = nm_usuario_p
		where	nr_sequencia = nr_seq_fase_w;
		end;
	end loop;
	close c01;

			select	0
			into STRICT	pr_realizacao_w
			;
			
	for r_c03 in c03 loop
		begin
		
			-- Verifica o peso de cada etapa para somar o % concluido corretamente
			select	round((dividir(r_c03.hrs_previstas_etapa,
					r_c03.hrs_previstas_cronograma))::numeric, 4)
			into STRICT	qt_peso_etapa_w
			;
			
			select (r_c03.pr_etapa * qt_peso_etapa_w) + pr_realizacao_w
			into STRICT	pr_realizacao_w
			;
		end;
	end loop;

	update	proj_cronograma
	set	pr_realizacao = least(100, pr_realizacao_w),
		dt_atualizacao = clock_timestamp(),
		nm_usuario = nm_usuario_p
	where	nr_sequencia = nr_seq_cronograma_p;
	
	select	max(nr_seq_proj),
		max(ie_tipo_cronograma),
		max(pr_realizacao)
	into STRICT	nr_seq_projeto_w,
		ie_tipo_cronograma_w,
		pr_cronograma_w
	from	proj_cronograma
	where	nr_sequencia = nr_seq_cronograma_p;

	if (ie_tipo_cronograma_w = 'E') then
		begin
		update	proj_projeto
		set	pr_realizacao = pr_cronograma_w
		where	nr_sequencia = nr_seq_projeto_w;
		end;
	end if;
	end;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE proj_desenv_atual_perc_cron ( nr_seq_cronograma_p bigint, nm_usuario_p text) FROM PUBLIC;

