-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_41_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) AS $body$
DECLARE


_ora2pg_r RECORD;
ie_gera_ocor_w				varchar(1);
nr_indice_w				integer;
tb_seq_selecao_w			pls_util_cta_pck.t_number_table;
tb_valido_w				pls_util_cta_pck.t_varchar2_table_1;
tb_observacao_w				pls_util_cta_pck.t_varchar2_table_4000;

-- Dados da regra de validação cadastrada na ocorrência
C01 CURSOR(	nr_seq_oc_cta_comb_pc	pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	ie_data_item,
		ie_considera_horario
	from	pls_oc_cta_val_data_item
	where	nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_pc;

--Dados dos procedimentos e materiais das contas selecionadas que irão gerar a ocorrênciassss
C02 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_imp.nr_id_transacao%type) FOR
	SELECT	sel.nr_sequencia							nr_seq_selecao,
		pls_manipulacao_datas_pck.obter_data_mais_hora(	proc.dt_execucao_conv,
								proc.dt_inicio)		dt_hr_item,
		pls_manipulacao_datas_pck.obter_data_mais_hora(	proc.dt_execucao_conv,
								proc.dt_fim)		dt_hr_fim_item,
		proc.dt_execucao_trunc_conv						dt_item,
		conta.dt_atendimento_conv						dt_hr_atendimento,
		trunc(conta.dt_atendimento_conv,'dd')					dt_atendimento,
		conta.dt_autorizacao							dt_hr_autorizacao,
		trunc(conta.dt_autorizacao,'dd')					dt_autorizacao,
		trunc(prot.dt_mes_competencia_conv,'dd')				dt_competencia_protocolo
	from	pls_oc_cta_selecao_imp	sel,
		pls_conta_proc_imp	proc,
		pls_conta_imp		conta,
		pls_protocolo_conta_imp	prot
	where	sel.nr_id_transacao	= nr_id_transacao_pc
	and	sel.ie_valido		= 'S'
	and	proc.nr_sequencia	= sel.nr_seq_conta_proc
	and	conta.nr_sequencia	= proc.nr_seq_conta
	and	prot.nr_sequencia	= conta.nr_seq_protocolo
	
union all

	SELECT	sel.nr_sequencia							nr_seq_selecao,
		pls_manipulacao_datas_pck.obter_data_mais_hora(	mat.dt_execucao_conv,
								mat.dt_inicio)		dt_hr_item,
		pls_manipulacao_datas_pck.obter_data_mais_hora(	mat.dt_execucao_conv,
								mat.dt_fim)		dt_hr_fim_item,
		mat.dt_execucao_trunc_conv						dt_item,
		conta.dt_atendimento_conv						dt_hr_atendimento,
		trunc(conta.dt_atendimento_conv,'dd')					dt_atendimento,
		conta.dt_autorizacao							dt_hr_autorizacao,
		trunc(conta.dt_autorizacao,'dd')					dt_autorizacao,
		trunc(prot.dt_mes_competencia_conv,'dd')				dt_competencia_protocolo
	from	pls_oc_cta_selecao_imp	sel,
		pls_conta_mat_imp	mat,
		pls_conta_imp		conta,
		pls_protocolo_conta_imp	prot
	where	sel.nr_id_transacao	= nr_id_transacao_pc
	and	sel.ie_valido		= 'S'
	and	mat.nr_sequencia	= sel.nr_seq_conta_mat
	and	conta.nr_sequencia	= mat.nr_seq_conta
	and	prot.nr_sequencia	= conta.nr_seq_protocolo;
BEGIN
--- Deve exisitr informação da regra para executar a validação
if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '') and (nr_id_transacao_p IS NOT NULL AND nr_id_transacao_p::text <> '')  then
	-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
	CALL pls_ocor_imp_pck.atualiza_campo_auxiliar('V', 'N', nr_id_transacao_p, null);

	--limpa as variáveis
	SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
	nr_indice_w := 0;
	-- Percorre as validações cadastradas para regra
	for	r_C01_w in C01(nr_seq_combinada_p) loop
		--Percorre as os procedimentos e materiais das contas selecionadas para geração da ocorrência
		for	r_C02_w in C02(nr_id_transacao_p) loop

			ie_gera_ocor_w 	:= 'N';

			case(r_C01_w.ie_data_item)
				-- Data do item menor que a data de emissão da conta(Se maior ou igual não gera ocorrência)
				when 3 then
					-- Verifica se deve considerar horário, se não usa as datas truncadas.
					if (r_C01_w.ie_considera_horario = 'S') then
						if (r_C02_w.dt_hr_item < r_C02_w.dt_hr_atendimento) then
							ie_gera_ocor_w := 'S';
						end if;
					else
						if (r_C02_w.dt_item < r_C02_w.dt_atendimento) then
							ie_gera_ocor_w := 'S';
						end if;
					end if;
				-- data do item maior que a data atual(Se menor ou igual, não gera ocorrência)
				when 4 then
					-- Verifica se deve considerar horário, se não usa as datas truncadas.
					if (r_C01_w.ie_considera_horario = 'S') then
						if (r_C02_w.dt_hr_item > clock_timestamp()) then
							ie_gera_ocor_w := 'S';
						end if;
					else
						if (r_C02_w.dt_item > trunc(clock_timestamp(), 'dd')) then
							ie_gera_ocor_w := 'S';
						end if;
					end if;
				-- data do item diferente da data de atendimento da conta(se igual, não gera ocorrência)
				when 5 then
					-- Verifica se deve considerar horário, se não usa as datas truncadas.
					if (r_C01_w.ie_considera_horario = 'S') then
						if (r_C02_w.dt_hr_item <> r_C02_w.dt_hr_atendimento) then
							ie_gera_ocor_w := 'S';
						end if;
					else
						if (r_C02_w.dt_item <> r_C02_w.dt_atendimento) then
							ie_gera_ocor_w := 'S';
						end if;
					end if;
				-- Data do item não informada(Se informada, não gera ocorrência)
				when 6 then
					-- Verificar o evento de geração da ocorrência para verificar de quais campos obter a informação.
					-- Para esta validação não é necessário considerar o horário.
					if (coalesce(r_C02_w.dt_item::text, '') = '') then
						ie_gera_ocor_w := 'S';
					end if;
				-- Data do item menor que a autorização
				when 7 then
					-- Verifica se deve considerar horário, se não usa as datas truncadas.
					if (r_C01_w.ie_considera_horario = 'S') then
						if (r_C02_w.dt_hr_item < r_C02_w.dt_hr_autorizacao) then
							ie_gera_ocor_w := 'S';
						end if;
					else
						if (r_C02_w.dt_item < r_C02_w.dt_autorizacao) then
							ie_gera_ocor_w := 'S';
						end if;
					end if;
				-- data do item superior a data de competencia do protocolo
				when 8 then
					if (r_C02_w.dt_item > r_C02_w.dt_competencia_protocolo) then
						ie_gera_ocor_w := 'S';
					end if;
				-- Data do item maior que a data de emissão da conta
				when 9 then
					-- Verifica se deve considerar horário, se não usa as datas truncadas.
					if (r_C01_w.ie_considera_horario = 'S') then
						if (r_C02_w.dt_hr_item > r_C02_w.dt_hr_atendimento) then
							ie_gera_ocor_w := 'S';
						end if;
					else
						if (r_C02_w.dt_item > r_C02_w.dt_atendimento) then
							ie_gera_ocor_w := 'S';
						end if;
					end if;
				--Hora fim do item menor que a hora inicio
				when 10 then
					if (r_C02_w.dt_hr_item > r_C02_w.dt_hr_fim_item) then
						ie_gera_ocor_w := 'S';
					end if;
				else
					null;
			end case;

			if (ie_gera_ocor_w = 'S') then

				tb_seq_selecao_w(nr_indice_w) := r_C02_w.nr_seq_selecao;
				tb_valido_w(nr_indice_w)      := 'S';
				tb_observacao_w(nr_indice_w)  := null;
				--Verifica o número de registros armazenados, caso tenha atingido limite grava os mesmos na tablela
				if (nr_indice_w >= pls_util_pck.qt_registro_transacao_w) then
					--Grava o que restar nas variáveis na tabela
					CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w, tb_valido_w,
											tb_observacao_w, nr_id_transacao_p,
											'SEQ');
					--limpa as variáveis
					SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
					nr_indice_w := 0;
				else
					nr_indice_w := nr_indice_w + 1;
				end if;
			end if;
		end loop; --C02
	end loop; -- C01
	--Se tiver alguma informaçõa grava na tabela
	CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w, tb_valido_w,
							tb_observacao_w, nr_id_transacao_p,
							'SEQ');
	-- seta os registros que serão válidos ou inválidos após o processamento
	CALL pls_ocor_imp_pck.atualiza_campo_valido('V', 'N',
						ie_regra_excecao_p, null,
						nr_id_transacao_p, null);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_41_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) FROM PUBLIC;

