-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_dados_gerar_prescr_rep ( cd_medico_p text, nr_atendimento_p bigint, nr_sequencia_p bigint, ie_dt_prescr_protocolo_p text, cd_funcao_rep_p bigint, nr_dt_prescr_anteced_p bigint, cd_setor_nova_prescr_p bigint, ie_estender_p text, ie_regra_prim_prescr_p text, ie_calcula_validade_p text, nr_prescricao_p bigint, cd_tipo_protocolo_p INOUT bigint, qt_peso_p INOUT bigint, dt_prescricao_p INOUT timestamp, dt_prim_hor_p INOUT timestamp, dt_procedimento_p INOUT timestamp, nr_horas_validade_p INOUT bigint, nm_usuario_p text) AS $body$
DECLARE

 
cd_tipo_protocolo_w	bigint;
qt_peso_w		double precision;
dt_prescricao_w		timestamp;
dt_prim_hor_w		timestamp;
dt_procedimento_w	timestamp;
nr_horas_validade_w	double precision;

BEGIN
select	max(cd_tipo_protocolo) 
into STRICT	cd_tipo_protocolo_w 
from	tipo_protocolo 
where	cd_especialidade = obter_especialidade_medico(cd_medico_p,'C');
 
qt_peso_w	:= obter_sinal_vital(nr_atendimento_p,'Peso');
 
if (ie_dt_prescr_protocolo_p = 'S') and (cd_funcao_rep_p = 874) and (nr_sequencia_p > 0) then 
	begin 
	if (nr_dt_prescr_anteced_p > 0) then 
		begin 
		select (coalesce(dt_cirurgia,clock_timestamp()) - nr_dt_prescr_anteced_p / 1440) 
		into STRICT	dt_prescricao_w 
		from	aval_pre_anestesica 
		where	nr_sequencia	= nr_sequencia_p;
		end;
	else 
		begin 
		select	coalesce(dt_cirurgia,clock_timestamp()) 
		into STRICT	dt_prescricao_w 
		from	aval_pre_anestesica 
		where	nr_sequencia	= nr_sequencia_p;
		end;
	end if;
	end;
else 
	begin 
	dt_prescricao_w	:= clock_timestamp();
	end;
end if;
 
dt_prim_hor_w	:= to_char(dt_prescricao_w,'dd/MM/yyyy');
dt_prim_hor_w	:= obter_prim_horario_prescricao(nr_atendimento_p,cd_setor_nova_prescr_p,clock_timestamp(),nm_usuario_p,'R');
 
dt_procedimento_w	:= to_date(to_char(dt_prescricao_w,'dd/MM/yyyy') || ' ' || to_char(dt_prim_hor_w,'hh24:mi:ss'),'dd/MM/yyyy hh24:mi:ss');
 
nr_horas_validade_w	:= 24;
if (ie_calcula_validade_p <> 'N') then 
	begin 
	nr_horas_validade_w := obter_horas_validade_prescr( 
				dt_prim_hor_w, 
				nr_atendimento_p, 
				ie_estender_p, 
				ie_regra_prim_prescr_p, 
				clock_timestamp(), 
				nr_prescricao_p);
	end;
end if;
commit;
cd_tipo_protocolo_p	:= cd_tipo_protocolo_w;
qt_peso_p		:= qt_peso_w;
dt_prescricao_p		:= dt_prescricao_w;
dt_prim_hor_p		:= dt_prim_hor_w;
dt_procedimento_p	:= dt_procedimento_w;
nr_horas_validade_p	:= nr_horas_validade_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_dados_gerar_prescr_rep ( cd_medico_p text, nr_atendimento_p bigint, nr_sequencia_p bigint, ie_dt_prescr_protocolo_p text, cd_funcao_rep_p bigint, nr_dt_prescr_anteced_p bigint, cd_setor_nova_prescr_p bigint, ie_estender_p text, ie_regra_prim_prescr_p text, ie_calcula_validade_p text, nr_prescricao_p bigint, cd_tipo_protocolo_p INOUT bigint, qt_peso_p INOUT bigint, dt_prescricao_p INOUT timestamp, dt_prim_hor_p INOUT timestamp, dt_procedimento_p INOUT timestamp, nr_horas_validade_p INOUT bigint, nm_usuario_p text) FROM PUBLIC;

