-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_incluir_conta_analise ( nr_seq_conta_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Atualizar a análise ao qual a conta gerada (conta de honorário) pertence e gerar 
o fluxo de análise para as ocorrências da mesma 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
nr_seq_analise_w		bigint;
nr_seq_analise_conta_w		bigint;
nr_seq_conta_principal_w	bigint;
nr_seq_proc_ref_w		bigint;

C01 CURSOR FOR 
	SELECT	a.nr_seq_proc_ref 
	from	pls_conta_proc a 
	where	a.nr_seq_conta	= nr_seq_conta_p 
	and	(a.nr_seq_proc_ref IS NOT NULL AND a.nr_seq_proc_ref::text <> '');

C02 CURSOR FOR 
	SELECT	a.nr_seq_conta 
	from	pls_conta_proc	a 
	where	a.nr_sequencia	= nr_seq_proc_ref_w 
	group by 
		a.nr_seq_conta;


BEGIN 
if (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then 
	/* Verificar se a conta já está associada a uma análise */
 
	select	max(a.nr_seq_analise) 
	into STRICT	nr_seq_analise_conta_w 
	from	pls_conta	a 
	where	a.nr_sequencia	= nr_seq_conta_p;
	 
	if (coalesce(nr_seq_analise_conta_w::text, '') = '') then 
		/* Abrir o cursor para inserir na análise da conta principal */
 
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_proc_ref_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			open C02;
			loop 
			fetch C02 into	 
				nr_seq_conta_principal_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin 
				/* Obter a sequencia da análise da conta principal */
 
				select	max(a.nr_seq_analise) 
				into STRICT	nr_seq_analise_w 
				from	pls_conta	a 
				where	a.nr_sequencia	= nr_seq_conta_principal_w;
				 
				if (nr_seq_analise_w IS NOT NULL AND nr_seq_analise_w::text <> '') then 
					update	pls_conta 
					set	nr_seq_analise	= nr_seq_analise_w, 
						dt_atualizacao	= clock_timestamp(), 
						nm_usuario	= nm_usuario_p 
					where	nr_sequencia	= nr_seq_conta_p;
					 
					/* Gerar fluxo de análise dos itens da conta */
 
					CALL pls_gerar_fluxo_audit_item(	nr_seq_analise_w, 
									nr_seq_conta_p, 
									null, 
									null, 
									null, 
									nm_usuario_p);
				end if;
				end;
			end loop;
			close C02;
			end;
		end loop;
		close C01;
	end if;
end if;
 
/* Interna, não vai commit */
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_incluir_conta_analise ( nr_seq_conta_p bigint, nm_usuario_p text) FROM PUBLIC;

