-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_diagnostico_interno ( nr_atendimento_p bigint, dt_diagnostico_p timestamp, cd_doenca_p text, dt_manifestacao_p timestamp, dt_fim_p timestamp, ds_observacao_p text, ie_classif_diag_p text , ie_lado_p text, nr_seq_diag_interno_p bigint, nr_seq_diag_int_grupo_p text, nm_usuario_p text) AS $body$
DECLARE


ie_unidade_tempo_w	varchar(2)		:= null;
qt_tempo_w			bigint	:= null;
qt_itens_w			integer;
ie_tipo_doenca_w	varchar(2);
cd_estabelecimento_w	bigint;
ie_lib_diag_w		varchar(10);
ie_medico_w		varchar(10);
cd_medico_w		varchar(10);
cd_pessoa_fisica_w	varchar(10);
nr_seq_episodio_w	bigint;

BEGIN

select 	max(ie_tipo_doenca)
into STRICT	ie_tipo_doenca_w
from	diagnostico_interno
where	nr_sequencia = nr_seq_diag_interno_p;

select	max(cd_estabelecimento),
	max(cd_pessoa_fisica),
	max(nr_seq_episodio)
into STRICT	cd_estabelecimento_w,
	cd_pessoa_fisica_w,
	nr_seq_episodio_w
from	atendimento_paciente
where	nr_atendimento	= nr_atendimento_p;

select	coalesce(max(IE_DIAG_INTERNO_LIB),'N')
into STRICT	ie_lib_diag_w
from	parametro_medico
where	cd_estabelecimento	= cd_estabelecimento_w;

if (dt_manifestacao_p IS NOT NULL AND dt_manifestacao_p::text <> '') then
	select	obter_dias_entre_datas(dt_manifestacao_p, coalesce(dt_fim_p,clock_timestamp()))
	into STRICT	qt_tempo_w
	;

	if (qt_tempo_w = 0) then
		qt_tempo_w := null;
	else
		ie_unidade_tempo_w := 'D';
		if (qt_tempo_w > 30) then
			if (qt_tempo_w > 365) then	
				qt_tempo_w := dividir(dividir(qt_tempo_w,30),12);
				ie_unidade_tempo_w := 'A';
			else
				qt_tempo_w := round(dividir(qt_tempo_w,30));
				ie_unidade_tempo_w := 'M';
			end if;
		end if;
	end if;
end if;

select 	count(*)
into STRICT	qt_itens_w
from	diagnostico_doenca
where	nr_atendimento 	= 	nr_atendimento_p
and		dt_diagnostico	=	dt_diagnostico_p
and		cd_doenca		=	cd_doenca_p;

if (qt_itens_w = 0) then

	select	max(cd_pessoa_fisica)
	into STRICT	cd_medico_w
	from	usuario
	where	nm_usuario	= nm_usuario_p;


	if (obter_se_medico(cd_medico_w,'M')	= 'N') then
		cd_medico_w	:= null;
	end if;

	insert into diagnostico_doenca(
		nr_atendimento,
		dt_diagnostico, 
		cd_doenca, 
		dt_atualizacao, 
		nm_usuario, 
		ds_diagnostico, 
		ie_classificacao_doenca,
		ie_tipo_doenca,
		ie_unidade_tempo,
		qt_tempo,
		ie_lado,
		dt_manifestacao,
		nr_seq_diag_interno,
		nr_seq_grupo_diag,
		dt_inicio,
		dt_fim,
		ie_tipo_diagnostico,
		dt_liberacao,
		ie_situacao,
		cd_medico,
		ie_relevante_drg)
	values (	nr_atendimento_p,
		dt_diagnostico_p,
		cd_doenca_p,
		clock_timestamp(),
		nm_usuario_p,
		substr(ds_observacao_p,1,2000), 
		coalesce(ie_classif_diag_p, Obter_Valor_Param_Usuario(281,259, Obter_perfil_Ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento)),
		ie_tipo_doenca_w,
		ie_unidade_tempo_w,
		qt_tempo_w,
		ie_lado_p,
		dt_manifestacao_p,
		nr_seq_diag_interno_p,
		nr_seq_diag_int_grupo_p,
		dt_manifestacao_p,
		dt_fim_p,
		2,
		CASE WHEN ie_lib_diag_w='S' THEN clock_timestamp()  ELSE null END ,
		'A',
		cd_medico_w,
		CASE WHEN obter_tipo_episodio(nr_seq_episodio_w)=1 THEN 'S'  ELSE 'N' END );
	commit;
	
	if (ie_lib_diag_w = 'S') then
		CALL GERAR_PACIENTE_GRUPO(cd_doenca_p,cd_pessoa_fisica_w,nm_usuario_p);
	end if;
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_diagnostico_interno ( nr_atendimento_p bigint, dt_diagnostico_p timestamp, cd_doenca_p text, dt_manifestacao_p timestamp, dt_fim_p timestamp, ds_observacao_p text, ie_classif_diag_p text , ie_lado_p text, nr_seq_diag_interno_p bigint, nr_seq_diag_int_grupo_p text, nm_usuario_p text) FROM PUBLIC;

