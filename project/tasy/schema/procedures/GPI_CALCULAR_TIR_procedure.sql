-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gpi_calcular_tir ( nr_seq_estudo_p bigint, tx_tir_mensal_p INOUT bigint, tx_tir_anual_p INOUT bigint) AS $body$
DECLARE



cd_mes_w		bigint;
dt_referencia_w		timestamp;
i_min_w			double precision	:= 0;
i_max_w			double precision	:= 0;
nr_seq_cenario_w		bigint;
nr_seq_mes_inicio_w	bigint;
nr_seq_orcamento_w	bigint;
nr_sequencia_w		bigint;
qt_contador_w		integer;
qt_mes_w		bigint;
tx_base_w		double precision;
tx_fator_desc_w		double precision	:= 0;
tx_fator_desc_2_w		double precision	:= 0;
tx_tir_anual_w		double precision;
tx_tir_mensal_w		double precision;
tx_oportunidade_w		double precision;
vl_desp_w		double precision;
vl_fluxo_desc_w		double precision	:= 0;
vl_fluxo_acum_w		double precision	:= 0;
vl_invest_desc_w		double precision;
vl_invest_w		double precision;
vl_rec_w			double precision;
vl_resid_w		double precision	:= 0;
vl_residual_w		double precision;

vl_res_w			double precision;
tx_tir_w			double precision;

vl_resultado_desc_w	double precision;
vl_resultado_w		double precision;
ind			integer	:= 1;
limite			integer	:= 500;

c01 CURSOR FOR
SELECT	a.cd_mes,
	a.vl_investimento,
	a.vl_receita,
	a.vl_despesa
from	gpi_estudo_viab_per a
where	a.nr_seq_estudo	= nr_seq_estudo_p
order by 1;


BEGIN

select	sum(vl_investimento),
	sum(vl_receita),
	sum(vl_despesa)
into STRICT	vl_invest_w,
	vl_rec_w,
	vl_desp_w
from	gpi_estudo_viab_per a
where	a.nr_seq_estudo	= nr_seq_estudo_p;

select	a.tx_oportunidade,
	a.vl_residual,
	a.qt_mes
into STRICT	tx_oportunidade_w,
	vl_residual_w,
	qt_mes_w
from	gpi_estudo_viab a
where	a.nr_sequencia	= nr_seq_estudo_p;

vl_resultado_w		:= vl_rec_w - vl_desp_w;
vl_res_w			:= vl_resultado_w - vl_invest_w + vl_residual_w;

if (vl_res_w < 0) then
	tx_tir_mensal_w	:= 0;
	limite		:= 0;
end if;

tx_tir_w			:= 0;

while(ind < limite) loop
	begin
	tx_tir_w		:= tx_tir_w + 0.01;
	vl_resultado_w	:= 0;
	vl_fluxo_desc_w	:= 0;
	vl_fluxo_acum_w	:= 0;

	open c01;
	loop
	fetch c01 into
		cd_mes_w,
		vl_invest_w,
		vl_rec_w,
		vl_desp_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		if (cd_mes_w = 0) then
			tx_fator_desc_w		:= 1;
		elsif (cd_mes_w = 1) then
			tx_fator_desc_w		:= 1 + round((dividir(tx_tir_w,100))::numeric,4);
		else
			tx_fator_desc_w		:= power(1 + round((dividir(tx_tir_w,100))::numeric,4), cd_mes_w);
		end if;
		vl_resid_w			:= 0;
		if (qt_mes_w	= cd_mes_w) then
			vl_resid_w	:= vl_residual_w;
		end if;
		vl_resultado_w		:= ((vl_invest_w * -1) + (vl_rec_w - vl_desp_w) + coalesce(vl_resid_w,0));
		vl_fluxo_desc_w		:= dividir(vl_resultado_w, tx_fator_desc_w);
		vl_fluxo_acum_w		:= vl_fluxo_acum_w + vl_fluxo_desc_w;
		vl_res_w		:= vl_fluxo_acum_w;
	end loop;
	close c01;
	if (vl_res_w <= 0) then
		ind			:= limite + 1;
	else
		ind			:= ind + 1;
	end if;

	end;
end loop;
tx_tir_mensal_w		:= tx_tir_w;
tx_tir_mensal_p		:= coalesce(tx_tir_mensal_w,0);
tx_tir_anual_p		:= coalesce(tx_tir_anual_w,0);

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gpi_calcular_tir ( nr_seq_estudo_p bigint, tx_tir_mensal_p INOUT bigint, tx_tir_anual_p INOUT bigint) FROM PUBLIC;

