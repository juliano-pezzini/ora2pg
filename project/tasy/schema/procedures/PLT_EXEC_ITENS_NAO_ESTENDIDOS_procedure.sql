-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE plt_exec_itens_nao_estendidos ( nr_atendimento_p bigint, dt_inicio_plano_p timestamp, dt_fim_plano_p timestamp, nr_seq_regra_p bigint, nm_usuario_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE

 
nr_prescricao_w			bigint;
nr_prescricao_incluir_w		bigint;
nr_seq_item_w			bigint;	
ie_tipo_item_w			varchar(15);	
ie_consistencia_w		varchar(5);
cd_medico_w			varchar(10);			
cd_pessoa_usuario_w		varchar(10);
ds_erro_w			varchar(2000);
ds_erro_ww			varchar(4000);
ds_item_w			varchar(255);
ie_motivo_w			varchar(15);
ie_susp_proced_executado_w	varchar(15);
ie_usuario_medico_w		varchar(1);

c01 CURSOR FOR						 
SELECT	nr_seq_item, 
	nr_prescricao, 
	ie_tipo_item, 
	ds_item 
from	w_copia_plano 
where	nm_usuario		= nm_usuario_p 
and	ie_check_estender	= 'S' 
and	ie_permite = 'S' 
and	plt_obter_se_exibe_inc(nr_sequencia) = 'S' 
and dt_atualizacao between dt_inicio_plano_p and dt_fim_plano_p;

		 
c02 CURSOR FOR 
SELECT	nr_seq_item, 
	nr_prescricao, 
	ie_tipo_item, 
	ie_motivo, 
	ds_item 
from	w_copia_plano 
where	nm_usuario		= nm_usuario_p 
and	ie_check_suspender	= 'S' 
and	ie_motivo		not in ('IS') 
and	plt_obter_se_exibe_inc(nr_sequencia) = 'S' 
and dt_atualizacao between dt_inicio_plano_p and dt_fim_plano_p;
		

BEGIN 
 
ie_susp_proced_executado_w := Obter_Param_Usuario(924, 91, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_susp_proced_executado_w);
 
select	max(nr_prescricao) 
into STRICT	nr_prescricao_incluir_w 
from	prescr_medica 
where	dt_validade_prescr	= dt_fim_plano_p 
and	nr_atendimento		= nr_atendimento_p 
and	nm_usuario_original	= nm_usuario_p 
and	coalesce(coalesce(dt_liberacao_medico, dt_liberacao)::text, '') = '' 
and	dt_inicio_plano_p	>= dt_inicio_prescr;
 
select	max(cd_pessoa_fisica) 
into STRICT	cd_pessoa_usuario_w 
from	usuario 
where	nm_usuario	= nm_usuario_p;
 
select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
into STRICT	ie_usuario_medico_w 
from	medico 
where	cd_pessoa_fisica	= cd_pessoa_usuario_w 
and	ie_situacao 		= 'A';
 
if (ie_usuario_medico_w	= 'S') then 
	cd_medico_w	:= cd_pessoa_usuario_w;
end if;
 
open C02;
loop 
fetch C02 into	 
	nr_seq_item_w, 
	nr_prescricao_w, 
	ie_tipo_item_w, 
	ie_motivo_w, 
	ds_item_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
 
	begin 
	ie_consistencia_w := Consiste_supensao_prescr(nr_prescricao_w, nr_seq_item_w, Obter_tabela_tipo_item(ie_tipo_item_w), ie_susp_proced_executado_w, cd_estabelecimento_p, ie_consistencia_w, nm_usuario_p, Obter_perfil_Ativo);	
	exception 
	when others then 
	--aise_application_error(-20011,ds_item_w||' - '||sqlerrm); 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(197574,'DS_ITEM='||ds_item_w|| 
						    ';DS_TIPO='||sqlerrm);
	end;
 
	end;
end loop;
close C02;
 
open C02;
loop 
fetch C02 into	 
	nr_seq_item_w, 
	nr_prescricao_w, 
	ie_tipo_item_w, 
	ie_motivo_w, 
	ds_item_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
 
	if (ie_motivo_w	= 'IP') then 
	 
		CALL plt_excluir_item(nr_prescricao_w, nr_seq_item_w, Obter_tabela_tipo_item(ie_tipo_item_w), nm_usuario_p, cd_perfil_p);
	 
	else 
 
		CALL Suspender_item_Prescricao(nr_prescricao_w, nr_seq_item_w, 0, null, Obter_tabela_tipo_item(ie_tipo_item_w), 
					 nm_usuario_p, 'S', 950);
 
	end if;
 
	end;
end loop;
close C02;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_item_w, 
	nr_prescricao_w, 
	ie_tipo_item_w, 
	ds_item_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
 
	if (ie_usuario_medico_w	= 'N') then	 
		select	max(cd_medico) 
		into STRICT	cd_medico_w 
		from	prescr_medica 
		where	nr_prescricao	= nr_prescricao_w;
	end if;
	 
	SELECT * FROM PLT_estender_prescricao(nr_prescricao_w, nr_seq_item_w, ie_tipo_item_w, nr_atendimento_p, nr_seq_regra_p, cd_medico_w, dt_inicio_plano_p, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, 'S', nr_prescricao_incluir_w, ds_erro_w, 24) INTO STRICT nr_prescricao_incluir_w, ds_erro_w;
 
	if (coalesce(ds_erro_ww::text, '') = '') and (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then 
		ds_erro_ww	:= wheb_mensagem_pck.get_texto(278739, 'DS_ITEM_P=' || ds_item_w) ||ds_erro_w;
	elsif (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then 
		ds_erro_ww	:= ds_erro_ww||chr(13)||'-'||ds_item_w||', '||ds_erro_w;
	end if;
	 
	end;
end loop;
close C01;
 
ds_erro_p	:= substr(ds_erro_ww,1,255);
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_exec_itens_nao_estendidos ( nr_atendimento_p bigint, dt_inicio_plano_p timestamp, dt_fim_plano_p timestamp, nr_seq_regra_p bigint, nm_usuario_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

