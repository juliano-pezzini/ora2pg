-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_titulo_venc (dt_parametro_p timestamp) AS $body$
DECLARE



cd_convenio_w		integer;
cd_convenio_aux_w	integer := -1;
vl_saldo_titulo_w	double precision;
vl_saldo_liquido_w	double precision;
ie_tipo_vencimento_w	smallint;
dt_pagamento_previsto_w	timestamp;
dt_parametro_w		timestamp;
ie_baixa_parcial_w	varchar(1);
cd_estabelecimento_w	integer;
cd_cgc_w		varchar(14);/*Rafael em 21/06/06 inclui campos referentes a pj e eis_parametro*/
ds_razao_social_w	pessoa_juridica.ds_razao_social%type;
ie_convenio_tit_rec_w	varchar(1);
ie_origem_tit_rec_w	varchar(1);
ie_valor_eis_venc_w	varchar(1);
ie_tipo_titulo_w	varchar(5);
ds_convenio_w		varchar(40);
nr_seq_terc_conta_w	bigint;
nr_seq_contrato_w	bigint;
cd_tipo_portador_w	bigint;
cd_portador_w		bigint;
ie_origem_titulo_w	varchar(10);
ie_tipo_devedor_w	varchar(1);
vl_honorario_medico_w	double precision;

nr_titulo_w			titulo_receber.nr_titulo%type;

vl_titulo_w					titulo_receber.vl_titulo%type;
dt_contabil_w				titulo_receber.dt_contabil%type;
ie_situacao_w				titulo_receber.ie_situacao%type;
dt_liquidacao_w				titulo_receber.dt_liquidacao%type;
vl_saldo_data_w				titulo_receber.vl_saldo_titulo%type;
vl_alteracao_w				alteracao_valor.vl_alteracao%type;	
dt_referencia_w				timestamp;
vl_tributo_w				titulo_receber_trib.vl_tributo%type;
vl_recebido_w				titulo_receber_liq.vl_recebido%type;
ie_eis_cobranca_w			parametro_contas_receber.ie_eis_cobranca%type;

c01 CURSOR FOR
SELECT		cd_estabelecimento,
		coalesce(coalesce(cd_convenio_conta, obter_convenio_tit_rec(nr_titulo)), 0),
		dt_pagamento_previsto,
		CASE WHEN vl_titulo=vl_saldo_titulo THEN  'N'  ELSE 'S' END ,
		--sum(obter_saldo_titulo_receber(nr_titulo, dt_parametro_w)),

		--sum(obter_saldo_tit_rec_liq(nr_titulo,dt_parametro_w)) vl_saldo_liquido,
		substr(cd_cgc,1,14),
		substr(obter_nome_pf_pj(null, cd_cgc),1,80),
		CASE WHEN 	coalesce(nr_seq_protocolo,0)+			coalesce(nr_interno_conta,0)+			coalesce(cd_convenio_conta,0)=0 THEN  'O'  ELSE 'C' END ,
		nr_seq_terc_conta,
		nr_seq_contrato,
		cd_tipo_portador,
		cd_portador,
		ie_origem_titulo,
		substr(coalesce(obter_valores_propaci(nr_interno_conta,'ECH'),0),1,255) vl_medico,
		nr_titulo
from 		titulo_receber
where		dt_contabil <= dt_parametro_w
and		ie_situacao <> '5' /*lhalves OS334735 em 05/07/2011 - Ignorar os titulos Cacelados e transferidos*/
and (ie_situacao <> '3' or (dt_liquidacao > dt_parametro_w or coalesce(dt_liquidacao::text, '') = ''))
and		((coalesce(dt_liquidacao::text, '') = '') or (dt_liquidacao > dt_parametro_w))
group by 	cd_estabelecimento,
		coalesce(coalesce(cd_convenio_conta, obter_convenio_tit_rec(nr_titulo)), 0),
		dt_pagamento_previsto,
		CASE WHEN vl_titulo=vl_saldo_titulo THEN  'N'  ELSE 'S' END ,
		substr(cd_cgc,1,14),
		substr(obter_nome_pf_pj(null, cd_cgc),1,80),
		CASE WHEN 	coalesce(nr_seq_protocolo,0)+			coalesce(nr_interno_conta,0)+			coalesce(cd_convenio_conta,0)=0 THEN  'O'  ELSE 'C' END ,
		nr_seq_terc_conta,
		nr_seq_contrato,
		nr_seq_contrato,
		cd_tipo_portador,
		cd_portador,
		ie_origem_titulo,
		substr(coalesce(obter_valores_propaci(nr_interno_conta,'ECH'),0),1,255),
		nr_titulo
order 		by 1;
	

BEGIN

select	max(ie_convenio_tit_rec)
into STRICT	ie_convenio_tit_rec_w
from	eis_parametro;

dt_parametro_w	:= PKG_DATE_UTILS.start_of(dt_parametro_p,'dd', 0);


delete from eis_titulo_vencimento
where dt_referencia	= dt_parametro_w;


open	C01;
loop
fetch	c01 into	
		cd_estabelecimento_w,
		cd_convenio_w,
		dt_pagamento_previsto_w,
		ie_baixa_parcial_w,
		--vl_saldo_titulo_w,

		--vl_saldo_liquido_w,
		cd_cgc_w,
		ds_razao_social_w,
		ie_origem_tit_rec_w,
		nr_seq_terc_conta_w,
		nr_seq_contrato_w,
		cd_tipo_portador_w,
		cd_portador_w,
		ie_origem_titulo_w,
		vl_honorario_medico_w,
		nr_titulo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	if (dt_pagamento_previsto_w >= dt_parametro_w + 120) then -- Vencer acima de 120 dias
		ie_tipo_vencimento_w	:= 11;
	elsif (dt_pagamento_previsto_w >= dt_parametro_w + 90) then -- Vencer de 91 a 120 dias
		ie_tipo_vencimento_w	:= 5;
	elsif (dt_pagamento_previsto_w >= dt_parametro_w + 60) then -- Vencer de 61 a 90 dias
		ie_tipo_vencimento_w	:= 4;
	elsif (dt_pagamento_previsto_w >= dt_parametro_w + 30) then -- Vencer de 31 a 60 dias
		ie_tipo_vencimento_w	:= 3;
	elsif (dt_pagamento_previsto_w >= dt_parametro_w + 15) then -- Vencer de 16 a 30 dias
		ie_tipo_vencimento_w	:= 2;
	elsif (dt_pagamento_previsto_w >= dt_parametro_w) then -- Vencer em 15 dias
		ie_tipo_vencimento_w	:= 1;
	elsif (dt_pagamento_previsto_w >= dt_parametro_w - 15) then -- Vencido em 15 dias
		ie_tipo_vencimento_w	:= 6;
	elsif (dt_pagamento_previsto_w >= dt_parametro_w- 30) then -- Vencido de 16 a 30 dias
		ie_tipo_vencimento_w	:= 7;
	elsif (dt_pagamento_previsto_w >= dt_parametro_w- 60) then -- Vencido de 31 a 60 dias
		ie_tipo_vencimento_w	:= 8;
	elsif (dt_pagamento_previsto_w >= dt_parametro_w - 90) then -- Vencido de 61 a 90 dias
		ie_tipo_vencimento_w	:= 9;
	elsif (dt_pagamento_previsto_w >= dt_parametro_w - 120) then -- Vencido de 91 a 120 dias
		ie_tipo_vencimento_w	:= 10;
	else	
		ie_tipo_vencimento_w	:= 12;
	end if;

	select	coalesce(max(ie_valor_eis_venc),'S'),
			coalesce(max(ie_eis_cobranca),'S')
	into STRICT	ie_valor_eis_venc_w,
			ie_eis_cobranca_w
	from	parametro_contas_receber
	where	cd_estabelecimento	= cd_estabelecimento_w;
		
	/*OS 1793729 - Performance. Tava  chamando sempre as duas functions no cursor. Aqui somente uma delas sera chamada, de acordo com o parametro.*/

	if (ie_valor_eis_venc_w = 'L') then
		vl_saldo_titulo_w := obter_saldo_tit_rec_liq(nr_titulo_w, dt_parametro_w);
	elsif (ie_valor_eis_venc_w = 'S') then
		/*OS 1793729 - Trouxe o que faz na function obter_saldo_titulo_receber aqui, tirando algumas coisas que nunca fazem quando chama por aqui, devido a performance*/

		begin
		select	vl_titulo,
				dt_contabil,
				ie_situacao,
				dt_liquidacao,
				vl_saldo_titulo
		into STRICT	vl_titulo_w,
				dt_contabil_w,
				ie_situacao_w,
				dt_liquidacao_w,
				vl_saldo_data_w
		from	titulo_receber
		where	nr_titulo = nr_titulo_w;
		exception
		when others then
			begin
			vl_titulo_w		:= 0;
			vl_saldo_data_w		:= 0;
			end;
		end;

		dt_referencia_w	:= trunc(dt_parametro_w,'dd') + 86399/86400;
		
		select	coalesce(sum(CASE WHEN ie_aumenta_diminui='A' THEN  vl_alteracao  ELSE vl_alteracao * -1 END ),0)
		into STRICT	vl_alteracao_w
		from	alteracao_valor
		where	nr_titulo	= nr_titulo_w
		and		dt_alteracao	<= dt_referencia_w;

		select	coalesce(sum(vl_tributo),0)
		into STRICT	vl_tributo_w
		from	titulo_receber_trib
		where	nr_titulo		= nr_titulo_w
		and		coalesce(ie_origem_tributo, 'C') = 'D';
		
		if (ie_situacao_w in ('3','5')) and (dt_liquidacao_w <= dt_referencia_w) then
			vl_saldo_data_w	:= 0;
			vl_saldo_titulo_w := vl_saldo_data_w;
		else
		
			select	coalesce(sum(coalesce(vl_recebido,0) + coalesce(vl_glosa,0) + coalesce(vl_descontos,0) + coalesce(vl_perdas,0) + coalesce(vl_nota_credito,0)),0)
			into STRICT	vl_recebido_w
			from 	titulo_receber_liq
			where	nr_titulo		= nr_titulo_w
			and	coalesce(ie_lib_caixa, 'S') = 'S'
			and	dt_recebimento	<= dt_referencia_w;

			if (coalesce(dt_contabil_w,dt_referencia_w) > dt_referencia_w) then
				vl_saldo_data_w	:= 0;
			else	
				vl_saldo_data_w	:= vl_titulo_w - vl_recebido_w;
			end if;

			vl_saldo_data_w	:= vl_saldo_data_w + vl_alteracao_w - vl_tributo_w;
			
			vl_saldo_titulo_w := vl_saldo_data_w;

		end if;
		
	end if;
	/*Fim OS 1793729*/

	if (cd_convenio_w <> 0) then
		ds_convenio_w	:= substr(obter_nome_convenio(cd_convenio_w),1,40);
	elsif (nr_seq_terc_conta_w IS NOT NULL AND nr_seq_terc_conta_w::text <> '')	 then
		ds_convenio_w := wheb_mensagem_pck.get_texto(303019);
	elsif (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
		ds_convenio_w := wheb_mensagem_pck.get_texto(303020);
	else
		ie_tipo_devedor_w := obter_regra_eis_titulo_venc(cd_tipo_portador_w, cd_portador_w, ie_origem_titulo_w, ie_tipo_devedor_w);
		ds_convenio_w := coalesce(substr(obter_valor_dominio(2919,ie_tipo_devedor_w),1,255),wheb_mensagem_pck.get_texto(303021));
	end if;

	
	insert	into eis_titulo_vencimento(dt_referencia,
		cd_estabelecimento,
		cd_convenio,
		ds_convenio,
		ie_tipo_vencimento,
		ie_baixa_parcial,
		vl_vencimento,
		dt_vencimento,
		cd_cgc,
		ds_razao_social,
		ie_convenio_tit_rec,
		ie_origem_tit_rec,
		VL_HONORARIO_MEDICO)
	values (dt_parametro_w,
		cd_estabelecimento_w,
		cd_convenio_w,
		ds_convenio_w,
		ie_tipo_vencimento_w,
		ie_baixa_parcial_w,
		coalesce(vl_saldo_titulo_w,0),
		dt_pagamento_previsto_w,
		coalesce(cd_cgc_w, '0'),
		coalesce(substr(ds_razao_social_w,1,255), wheb_mensagem_pck.get_texto(303021)),
		ie_convenio_tit_rec_w,
		ie_origem_tit_rec_w,
		vl_honorario_medico_w);


	end;
end loop;
close c01;

commit;

if (coalesce(ie_eis_cobranca_w,'S') = 'S') then
	CALL Gerar_eis_cobranca(PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_parametro_p,'MONTH', 0),-12,0));
end if;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_titulo_venc (dt_parametro_p timestamp) FROM PUBLIC;

