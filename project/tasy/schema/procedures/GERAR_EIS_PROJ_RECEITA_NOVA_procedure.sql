-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_proj_receita_nova ( dt_parametro_p timestamp, nm_usuario_p text) AS $body$
DECLARE



--qt_existe_w			number(10);
cd_empresa_w			smallint;
cd_estabelecimento_w		smallint;
cd_estabelecimento_ww		smallint;
cd_conta_contabil_w		varchar(20);
cd_centro_custo_w			integer;
dt_mesano_referencia_w		timestamp;
dt_parametro_ww			timestamp;
dt_parametro_w			timestamp;
dt_final_mes_w			timestamp;
dt_ano_anterior_w			timestamp;
vl_projecao_w			double precision;
vl_faturado_w			double precision;
vl_faturado_ant_w			double precision;
vl_orcado_w			double precision;
ie_periodo_proj_receita_w		varchar(1);
qt_dias_decoridos_w		integer;
qt_dias_do_mes_w			integer;
qt_dias_uteis_decoridos_w		integer;
qt_dias_uteis_do_mes_w		integer;
nr_sequencia_w			bigint;
ind				integer	:= 0;
ie_gerar_w			varchar(1);
ie_tipo_grupo_w			varchar(1);

-- Somente as contas de receita
c01 CURSOR FOR
SELECT	a.cd_empresa_estab cd_empresa,
	a.cd_estabelecimento,
	a.cd_conta_contabil,
	a.cd_centro_custo_setor cd_centro_custo,
	sum(a.vl_procedimento + a.vl_material + a.vl_terceiro) vl_faturado
from	eis_Resultado a
where	a.dt_receita		= dt_mesano_referencia_w
and	a.ie_protocolo in ('2','3','4','5','6','7','8','9','10')
group by
	a.cd_empresa_estab,
	a.cd_estabelecimento,
	a.cd_conta_contabil,
	a.cd_centro_custo_setor
order by a.cd_estabelecimento;


vet01	c01%RowType;

type reg_projecao is table of c01%RowType index by integer;

eis_projecao_w	reg_projecao;



BEGIN
delete from eis_projecao_receita;
commit;

nr_sequencia_w := Gravar_Log_Indicador(615, 'Projecao_Receita (Nova)', clock_timestamp(), PKG_DATE_UTILS.start_of(dt_parametro_p, 'dd', 0), nm_usuario_p, nr_sequencia_w);



cd_estabelecimento_ww	:= 0;
dt_mesano_referencia_w	:= PKG_DATE_UTILS.start_of(dt_parametro_p, 'MONTH', 0);
dt_parametro_ww		:= dt_mesano_referencia_w;
dt_final_mes_w		:= PKG_DATE_UTILS.GET_DATETIME(pkg_date_utils.end_of(dt_parametro_p, 'MONTH', 0), coalesce(dt_parametro_p, PKG_DATE_UTILS.get_Time('00:00:00')));
dt_ano_anterior_w	:= PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_parametro_p,'MONTH', 0), -12,0);

/*Se a atualização é hoje, considero um dia a menos... devido a atualização da job por exemplo.
Devido ao dia ainda não terminou os lançamentos e contar este dia maios na projeção*/
dt_parametro_w		:= PKG_DATE_UTILS.start_of(dt_parametro_p,'dd', 0);
if (PKG_DATE_UTILS.start_of(dt_parametro_p,'dd', 0) = PKG_DATE_UTILS.start_of(clock_timestamp(),'dd', 0)) then
	dt_parametro_w	:= PKG_DATE_UTILS.start_of(dt_parametro_p - 1,'dd', 0);
end if;


qt_dias_decoridos_w	:= PKG_DATE_UTILS.extract_field('DAY',dt_parametro_w);
qt_dias_do_mes_w	:= PKG_DATE_UTILS.extract_field('DAY',dt_final_mes_w);

OPEN C01;
LOOP
FETCH C01 into
	vet01;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_gerar_w	:= 'S';
	if (coalesce(vet01.cd_conta_contabil,'0') <> '0') then
		begin
		select	max(b.ie_tipo)
		into STRICT	ie_tipo_grupo_w
		from	ctb_grupo_conta b,
			conta_contabil a
		where	a.cd_grupo		= b.cd_grupo
		and	a.cd_empresa		= b.cd_empresa
		and	a.cd_conta_contabil	= vet01.cd_conta_contabil;

		ie_gerar_w	:= 'N';
		if (ie_tipo_grupo_w in ('R','C')) then
			ie_gerar_w	:= 'S';
		end if;
		end;
	end if;

	if (ie_gerar_w = 'S') then
		begin
		ind	:= ind + 1;
		eis_projecao_w[ind].cd_empresa		:= vet01.cd_empresa;
		eis_projecao_w[ind].cd_estabelecimento	:= vet01.cd_estabelecimento;
		eis_projecao_w[ind].cd_conta_contabil	:= vet01.cd_conta_contabil;
		eis_projecao_w[ind].cd_centro_custo	:= vet01.cd_centro_custo;
		eis_projecao_w[ind].vl_faturado		:= vet01.vl_faturado;
		end;
	end if;

	end;
end loop;
close c01;

for ind in 1..eis_projecao_w.Count loop
	begin
	cd_empresa_w		:= eis_projecao_w[ind].cd_empresa;
	cd_estabelecimento_w	:= eis_projecao_w[ind].cd_estabelecimento;
	cd_conta_contabil_w	:= eis_projecao_w[ind].cd_conta_contabil;
	cd_centro_custo_w	:= eis_projecao_w[ind].cd_centro_custo;
	vl_faturado_w		:= eis_projecao_w[ind].vl_faturado;


	if (cd_estabelecimento_w <> cd_estabelecimento_ww) then
		begin
		qt_dias_uteis_do_mes_w		:= 0;
		qt_dias_uteis_decoridos_w	:= 0;
		while(dt_parametro_ww <= dt_final_mes_w) loop
			begin
			if (substr(obter_se_dia_util(dt_parametro_ww, cd_estabelecimento_w),1,1) = 'S') then
				qt_dias_uteis_do_mes_w	:= qt_dias_uteis_do_mes_w + 1;
				if (dt_parametro_ww <= dt_parametro_w) then
					qt_dias_uteis_decoridos_w	:= qt_dias_uteis_decoridos_w + 1;
				end if;
			end if;
			dt_parametro_ww	:= dt_parametro_ww + 1;
			end;
		end loop;
		end;
	end if;
	cd_estabelecimento_ww	:= cd_estabelecimento_w;

	select	coalesce(max(ie_periodo_proj_receita), 'U')
	into STRICT	ie_periodo_proj_receita_w
	from	centro_custo
	where	cd_centro_custo = cd_centro_custo_w;

	if (ie_periodo_proj_receita_w = 'C') then
		vl_projecao_w	:= round((dividir(vl_faturado_w, qt_dias_decoridos_w)  * qt_dias_do_mes_w), 2);
	elsif (ie_periodo_proj_receita_w = 'U') then
		vl_projecao_w	:= round((dividir(vl_faturado_w, qt_dias_uteis_decoridos_w) * qt_dias_uteis_do_mes_w), 2);
	end if;


	/*Valor orcado do mes*/

	select	coalesce(sum(CASE WHEN ie_debito_credito='C' THEN  vl_orcado  ELSE vl_orcado * -1 END ),0)
	into STRICT	vl_orcado_w
	from	ctb_grupo_conta y,
		conta_contabil t,
		ctb_orcamento x
	where	x.cd_conta_contabil	= t.cd_conta_contabil
	and	x.cd_estabelecimento	= cd_estabelecimento_w
	and	x.cd_conta_contabil	= cd_conta_contabil_w
	and	x.cd_centro_custo	= cd_centro_custo_w
	and	y.cd_empresa 		= cd_empresa_w
	and	y.cd_grupo		= t.cd_grupo
	and	y.ie_tipo		in ('R','C')
	and	x.nr_seq_mes_ref	= (
		SELECT	max(nr_sequencia)
		from	ctb_mes_ref
		where	cd_empresa	= cd_empresa_w
		and	dt_referencia	= PKG_DATE_UTILS.start_of(dt_parametro_p,'month', 0));



	/*Valor orcado do mesmo mes no ano anterior*/

	select	coalesce(sum(CASE WHEN ie_debito_credito='C' THEN  vl_realizado  ELSE vl_realizado * -1 END ),0)
	into STRICT	vl_faturado_ant_w
	from	ctb_grupo_conta y,
		conta_contabil t,
		ctb_orcamento x
	where	x.cd_conta_contabil	= t.cd_conta_contabil
	and	x.cd_estabelecimento	= cd_estabelecimento_w
	and	x.cd_conta_contabil	= cd_conta_contabil_w
	and	x.cd_centro_custo	= cd_centro_custo_w
	and	y.cd_empresa 		= cd_empresa_w
	and	y.cd_grupo		= t.cd_grupo
	and	y.ie_tipo		in ('R','C')
	and	x.nr_seq_mes_ref	= (
		SELECT	max(nr_sequencia)
		from	ctb_mes_ref
		where	cd_empresa	= cd_empresa_w
		and	dt_referencia	= PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_parametro_p,-12,0),'MONTH', 0));


	insert into eis_projecao_receita(
		dt_atualizacao,
		nm_usuario,
		cd_estabelecimento,
		cd_conta_contabil,
		cd_centro_custo,
		dt_referencia,
		qt_dias,
		vl_faturado,
		vl_faturado_ant,
		vl_orcado,
		vl_projecao)
	values (	clock_timestamp(),
		nm_usuario_p,
		cd_estabelecimento_w,
		cd_conta_contabil_w,
		cd_centro_custo_w,
		dt_final_mes_w,
		CASE WHEN ie_periodo_proj_receita_w='C' THEN  qt_dias_decoridos_w  ELSE qt_dias_uteis_decoridos_w END ,
		vl_faturado_w,
		vl_faturado_ant_w,
		vl_orcado_w,
		vl_projecao_w);


	end;
end loop;

CALL Atualizar_Log_Indicador(clock_timestamp(), nr_sequencia_w);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_proj_receita_nova ( dt_parametro_p timestamp, nm_usuario_p text) FROM PUBLIC;

