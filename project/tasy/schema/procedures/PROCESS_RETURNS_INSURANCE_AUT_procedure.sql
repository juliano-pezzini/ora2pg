-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE process_returns_insurance_aut (NR_SEQ_TRANS_P text, IE_VAL_CONTRACT_P text, IE_VAL_FAMILY_P text, IE_VAL_INSURANCE_P text, NR_CTR_CONTRACT_P text, NR_SBC_FAMILY_P text, NR_QT_BENEF_P text, CD_WEBID_P text, DS_ERROR_P text, NM_FIRST_NAME_P text, NM_SECOND_NAME_P text, NM_FIRST_FAMILYNAME_P text, NM_SECOND_FAMILYNAME_P text, DT_BIRTH_P timestamp, IE_TYPE_CODE_P text, CD_IDENTIFICATION_P text, CD_MEMBER_P text, CD_FAMILY_ID_P text, CD_ITERN_CODE_BENEF_P text, CD_CITY_CODE_P text, DS_ADRESS_P text, NR_PHONE_P text, DS_EMAIL_P text, NR_AGE_P text, CD_CODE_PBS_P text, CD_KINSHIP_P text, IE_GENDER_P text, CD_PRODUCT_P text, CD_PLAN_CODE_P text, DT_EXPEDITION_DATE_P timestamp, IE_TYPE_AUTORIZATION_P text, IE_TYPE_ATTENDANCE_P text, CD_CONTRACT_P text, IE_SEND_TYPE_P text, NR_SEQ_RETURN_AUT_W INOUT bigint, IE_STATUS_BENEF_P text, NR_SEQ_AUT_P text, QT_AUTHORIZED_P bigint, VL_AUTHORIZED_P bigint, NR_SEQ_PROCESS_P bigint, IE_VALUE_AUTHORIZED_P text, NM_USUARIO_P text, CD_PESSOA_FISICA_P text, IE_TYPE_ANNULMENT_P text, IE_STATUS_ANNULMENT_P text, DS_MESSAGE_ANNULMENT_P text) AS $body$
DECLARE


NR_SEQ_ESTAGIO_W		ESTAGIO_AUTORIZACAO.NR_SEQUENCIA%type := null;
NR_SEQ_PERSON_AUT_W 	PERSON_AUT_SERVICE.NR_SEQUENCIA%type := null;
CD_WEBID_W				PERSON_AUT_SERVICE.CD_WEBID%type := null;
CD_CONTRACT_W			PERSON_AUT_SERVICE.CD_CONTRACT%type := null;
CD_PRODUCT_W			PERSON_AUT_SERVICE.CD_CONTRACT%type := null;
CD_PLAN_W				PERSON_AUT_SERVICE.CD_PLAN%type := null;
CD_IDENTIFICATION_W		PERSON_AUT_SERVICE.CD_IDENTIFICATION%type := null;
CD_MEMBER_W				PERSON_AUT_SERVICE.CD_MEMBER%type := null;
DT_BIRTH_W				PERSON_AUT_SERVICE.DT_BIRTH%type := null;
DS_FRIST_NAME_W			PERSON_AUT_SERVICE.DS_FRIST_NAME%type := null;
DS_SECOND_NAME_W		PERSON_AUT_SERVICE.DS_SECOND_NAME%type := null;
DS_FIRST_FAMILYNAME_W	PERSON_AUT_SERVICE.DS_FIRST_FAMILYNAME%type := null;
DS_SECOND_FAMILYNAME_W	PERSON_AUT_SERVICE.DS_SECOND_FAMILYNAME%type := null;
CD_BENEF_ID_W			PERSON_AUT_SERVICE.CD_BENEF_ID%type := null;
IE_STATE_AUT_W			PERSON_AUT_SERVICE.IE_STATE_AUT%type := null;


BEGIN
NR_SEQ_RETURN_AUT_W := null;

if (IE_SEND_TYPE_P = 'VC') then

select 	nextval('w_return_aut_serv_seq')
into STRICT 	NR_SEQ_RETURN_AUT_W
;

	insert into W_RETURN_AUT_SERV(
				NR_SEQUENCIA,
				NR_SEQ_TRANS,
				IE_VAL_CONTRACT,
				IE_VAL_FAMILY,
				IE_VAL_INSURANCE,
				NR_CTR_CONTRACT,
				NR_SBC_FAMILY,
				NR_QT_BENEF,
				CD_WEBID,
				DS_ERROR,
				NM_FIRST_NAME,
				NM_SECOND_NAME,
				NM_FIRST_FAMILYNAME,
				NM_SECOND_FAMILYNAME,
				DT_BIRTH,
				IE_TYPE_CODE,
				CD_IDENTIFICATION,
				CD_MEMBER,
				CD_FAMILY_ID,
				CD_ITERN_CODE_BENEF,
				CD_CITY_CODE,
				DS_ADRESS,
				NR_PHONE,
				DS_EMAIL,
				NR_AGE,
				CD_CODE_PBS,
				CD_KINSHIP,
				IE_GENDER,
				CD_PRODUCT,
				CD_PLAN_CODE,
				DT_EXPEDITION_DATE,
				IE_TYPE_AUTORIZATION,
				IE_TYPE_ATTENDANCE,
				CD_CONTRACT,
				DT_ATUALIZACAO,
				NM_USUARIO,
				DT_ATUALIZACAO_NREC,
				NM_USUARIO_NREC)
				values (
				NR_SEQ_RETURN_AUT_W,
				NR_SEQ_TRANS_P,
				IE_VAL_CONTRACT_P,
				IE_VAL_FAMILY_P,
				IE_VAL_INSURANCE_P, 
				NR_CTR_CONTRACT_P,
				NR_SBC_FAMILY_P,
				NR_QT_BENEF_P,
				CD_WEBID_P,
				DS_ERROR_P,
				NM_FIRST_NAME_P,
				NM_SECOND_NAME_P,
				NM_FIRST_FAMILYNAME_P,
				NM_SECOND_FAMILYNAME_P,
				DT_BIRTH_P,
				IE_TYPE_CODE_P,
				CD_IDENTIFICATION_P,
				CD_MEMBER_P,
				CD_FAMILY_ID_P,
				CD_ITERN_CODE_BENEF_P,
				CD_CITY_CODE_P,
				DS_ADRESS_P,
				NR_PHONE_P,
				DS_EMAIL_P,
				NR_AGE_P,
				CD_CODE_PBS_P,
				CD_KINSHIP_P,
				IE_GENDER_P,
				CD_PRODUCT_P,
				CD_PLAN_CODE_P,
				DT_EXPEDITION_DATE_P,
				IE_TYPE_AUTORIZATION_P,
				IE_TYPE_ATTENDANCE_P,
				CD_CONTRACT_P,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p);
	
elsif (IE_SEND_TYPE_P = 'VB') then
	update 	W_RETURN_AUT_SERV
	set		ie_status 		= ie_status_benef_p,
			dt_atualizacao	= clock_timestamp(),
			nm_usuario		= nm_usuario_p
	where	nr_seq_trans 	= nr_seq_trans_p;
	
elsif (IE_SEND_TYPE_P = 'A') then
	begin
		select 	nr_sequencia
		into STRICT 	nr_seq_person_aut_w
		from  	PERSON_AUT_SERVICE
		where 	ie_state_aut not in ('0','1','2','3')
		and   	nr_seq_autorizacao = nr_seq_aut_p;
		
		exception
			when others then
				nr_seq_person_aut_w := null;
	end;
	
	select 	CASE WHEN ie_value_authorized_p='T' THEN 4 WHEN ie_value_authorized_p='P' THEN 6  ELSE null END
	into STRICT	IE_STATE_AUT_W
	;
	
	if (nr_seq_person_aut_w IS NOT NULL AND nr_seq_person_aut_w::text <> '') then
		update 	PERSON_AUT_SERVICE
		set		cd_autorization = nr_seq_aut_p,
				dt_atualizacao	= clock_timestamp(),
				nm_usuario = nm_usuario_p,
				ie_state_aut = ie_state_aut_w
		where	nr_seq_autorizacao = nr_seq_aut_p;
	else
		select 	*
		into STRICT 	cd_webid_w,
				cd_contract_w,
				cd_product_w,
				cd_plan_w,
				cd_identification_w,
				cd_member_w,
				dt_birth_w,
				ds_frist_name_w,
				ds_second_name_w,
				ds_first_familyname_w,
				ds_second_familyname_w,
				cd_benef_id_w
		from (SELECT cd_webid,
						cd_contract,
						cd_product,
						cd_plan,
						cd_identification,
						cd_member,
						dt_birth,
						ds_frist_name,
						ds_second_name,
						ds_first_familyname,
						ds_second_familyname,
						cd_benef_id
				from  PERSON_AUT_SERVICE
				where CD_PESSOA_FISICA = GET_PERSON_AUT_INSURANCE(nr_seq_aut_p)
				order by dt_atualizacao desc) alias1 LIMIT 1;
		
		CALL INSERT_PERSON_AUT_SERVICE(cd_pessoa_fisica_p,
									cd_benef_id_w,
									ie_state_aut_w,
									nm_usuario_p,
									cd_webid_w,
									cd_contract_w,
									cd_product_w,
									cd_plan_w,
									cd_identification_w,
									cd_member_w,
									dt_birth_w,
									ds_frist_name_w,
									ds_second_name_w,
									ds_first_familyname_w,
									ds_second_familyname_w,
									nr_seq_trans_p,
									nr_seq_aut_p);
	end if;
	
	
	if (IE_VALUE_AUTHORIZED_P = 'T') then
		select 	min(nr_sequencia)
		into STRICT 	nr_seq_estagio_w
		from 	estagio_autorizacao
		where 	ie_situacao= 'A'
		and 	coalesce(ie_parcial,'N') = 'N'
		and 	ie_interno= '10';
 
		update 	autorizacao_convenio 
		set 	dt_atualizacao = clock_timestamp(), 
				dt_retorno = clock_timestamp(), 
				nm_usuario = nm_usuario_p
		where 	nr_sequencia = nr_seq_aut_p;
		
		CALL ATUALIZAR_AUTORIZACAO_CONVENIO(nr_seq_aut_p,nm_usuario_p,nr_seq_estagio_w,'N','N','N');
	elsif (IE_VALUE_AUTHORIZED_P = 'P') then
		select	min(nr_sequencia)
		into STRICT	nr_seq_estagio_w 
		from	estagio_autorizacao 
		where	ie_situacao= 'A' 
		and		coalesce(ie_parcial,'N') = 'S' 
		and		ie_interno= '10';

		update	autorizacao_convenio
		set		dt_atualizacao = clock_timestamp(),
				nm_usuario = nm_usuario_p,
				dt_retorno = clock_timestamp()
		where	nr_sequencia = nr_seq_aut_p;

		CALL ATUALIZAR_AUTORIZACAO_CONVENIO(nr_seq_aut_p,nm_usuario_p,nr_seq_estagio_w,'N','N','N');
	end if;
elsif (IE_SEND_TYPE_P = 'AN') then
	if (IE_TYPE_ANNULMENT_P = 'E') then
		insert into AUT_SERVICE_RETURN(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ie_status,
						ds_mensagem,
						nr_seq_autorizacao)
						values (
						nextval('aut_service_return_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						ie_status_annulment_p,
						get_expression(953204,'es-DO'),
						nr_seq_aut_p);

	elsif (IE_TYPE_ANNULMENT_P = 'A') then
		select	min(nr_sequencia)
		into STRICT	nr_seq_estagio_w 
		from	estagio_autorizacao 
		where	ie_situacao= 'A' 
		and		ie_interno= '90';
	 
		update	autorizacao_convenio 
		set		dt_atualizacao = clock_timestamp(), 
				dt_retorno = clock_timestamp(), 
				nm_usuario = nm_usuario_p
		where	nr_sequencia= nr_seq_aut_p;
		
		update	person_aut_service
		set		ie_state_aut = 5,
				dt_atualizacao = clock_timestamp(),
				nm_usuario = nm_usuario_p
		where	cd_pessoa_fisica = cd_pessoa_fisica_p
		and		nr_seq_autorizacao = nr_seq_aut_p;

		CALL ATUALIZAR_AUTORIZACAO_CONVENIO(nr_seq_aut_p,nm_usuario_p,nr_seq_estagio_w,'N','N','N');
	end if;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE process_returns_insurance_aut (NR_SEQ_TRANS_P text, IE_VAL_CONTRACT_P text, IE_VAL_FAMILY_P text, IE_VAL_INSURANCE_P text, NR_CTR_CONTRACT_P text, NR_SBC_FAMILY_P text, NR_QT_BENEF_P text, CD_WEBID_P text, DS_ERROR_P text, NM_FIRST_NAME_P text, NM_SECOND_NAME_P text, NM_FIRST_FAMILYNAME_P text, NM_SECOND_FAMILYNAME_P text, DT_BIRTH_P timestamp, IE_TYPE_CODE_P text, CD_IDENTIFICATION_P text, CD_MEMBER_P text, CD_FAMILY_ID_P text, CD_ITERN_CODE_BENEF_P text, CD_CITY_CODE_P text, DS_ADRESS_P text, NR_PHONE_P text, DS_EMAIL_P text, NR_AGE_P text, CD_CODE_PBS_P text, CD_KINSHIP_P text, IE_GENDER_P text, CD_PRODUCT_P text, CD_PLAN_CODE_P text, DT_EXPEDITION_DATE_P timestamp, IE_TYPE_AUTORIZATION_P text, IE_TYPE_ATTENDANCE_P text, CD_CONTRACT_P text, IE_SEND_TYPE_P text, NR_SEQ_RETURN_AUT_W INOUT bigint, IE_STATUS_BENEF_P text, NR_SEQ_AUT_P text, QT_AUTHORIZED_P bigint, VL_AUTHORIZED_P bigint, NR_SEQ_PROCESS_P bigint, IE_VALUE_AUTHORIZED_P text, NM_USUARIO_P text, CD_PESSOA_FISICA_P text, IE_TYPE_ANNULMENT_P text, IE_STATUS_ANNULMENT_P text, DS_MESSAGE_ANNULMENT_P text) FROM PUBLIC;

