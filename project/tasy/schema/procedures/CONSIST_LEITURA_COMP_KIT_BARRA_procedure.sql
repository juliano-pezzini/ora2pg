-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consist_leitura_comp_kit_barra ( nr_seq_kit_estoque_p bigint, cd_material_p bigint, qt_material_p bigint, ie_consiste_quant_p text, ie_consiste_material_p text, nr_seq_item_kit_p bigint, ie_tipo_barra_p text, nr_seq_lote_fornec_p bigint, ds_erro_p INOUT text, ds_aviso_p INOUT text) AS $body$
DECLARE



nr_sequencia_w		bigint;
cd_kit_material_w		integer;
qt_material_kit_w		double precision;
qt_material_atendido_w	double precision;
qt_existe_w		integer;
qt_estoque_w		double precision;
ds_material_w		varchar(255);
ds_erro_w		varchar(255);
ds_aviso_w		varchar(255);
ie_consiste_quant_w	varchar(1);
cd_medico_w		varchar(10);
cd_convenio_w		integer;
ie_sexo_w		varchar(1);
cd_estabelecimento_w	integer		:= wheb_usuario_pck.get_cd_estabelecimento;
nm_usuario_w		varchar(15) 	:= wheb_usuario_pck.get_nm_usuario;
qt_dias_validade_w	varchar(10);
qt_dias_atual_w		bigint;
dt_validade_w		timestamp;
ie_indeterminada_w	varchar(1);
ie_bloqueia_val_w	varchar(1);
ie_tipo_convenio_w	smallint;

cd_material_w		integer;




BEGIN
cd_material_w := cd_material_p;

if (coalesce(nr_seq_kit_estoque_p,0) > 0) and (coalesce(cd_material_w,0) > 0) and (coalesce(qt_material_p,0) > 0) then
	begin
	ie_consiste_quant_w := obter_param_usuario(143, 44, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_w, ie_consiste_quant_w);
	qt_dias_validade_w := obter_param_usuario(143, 321, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_w, qt_dias_validade_w);
	ie_bloqueia_val_w := obter_param_usuario(143, 327, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_w, ie_bloqueia_val_w);

	select	cd_kit_material
	into STRICT	cd_kit_material_w
	from	kit_estoque
	where	nr_sequencia = nr_seq_kit_estoque_p;

	select	substr(cd_material || ' - ' || ds_material,1,255)
	into STRICT	ds_material_w
	from	material
	where	cd_material = cd_material_w;

	select	count(*)
	into STRICT	qt_existe_w
	from	componente_kit
	where	cd_kit_material = cd_kit_material_w
	and (cd_material 	= cd_material_w or obter_se_generico_kit(cd_material,cd_material_w,cd_kit_material_w,nr_sequencia) = 'S')
	AND 	IE_SITUACAO = 'A';

	if (qt_existe_w = 0) then
		begin
		if (coalesce(nr_seq_item_kit_p,0) > 0) and (ie_tipo_barra_p = 'B') then
			begin
			select	coalesce(max(cd_material),cd_material_w)
			into STRICT	cd_material_w
			from	componente_kit a
			where	a.cd_kit_material = cd_kit_material_w
			and		a.nr_sequencia = nr_seq_item_kit_p
			AND 	a.IE_SITUACAO = 'A'
			and	exists (SELECT	1
					from	COMPONENTE_KIT_OPCAO x
					where	a.cd_kit_material = x.cd_kit_material
					and	a.nr_sequencia = x.nr_seq_componente
					and	x.cd_material = cd_material_w);
			end;
		else
			select	coalesce(max(cd_material_troca),cd_material_w)
			into STRICT	cd_material_w
			from	kit_estoque_comp
			where	nr_seq_kit_estoque = nr_seq_kit_estoque_p
			and	cd_material = cd_material_w;
		end if;
		end;
	end if;

	if (ie_consiste_quant_w = 'S') then
		begin
		select	coalesce(max(cd_medico),'X'),
			coalesce(max(cd_convenio),0),
			coalesce(max(ie_sexo),'X'),
			coalesce(max(ie_tipo_convenio),0)
		into STRICT	cd_medico_w,
			cd_convenio_w,
			ie_sexo_w,
			ie_tipo_convenio_w
		from	kit_estoque
		where	nr_sequencia = nr_seq_kit_estoque_p;

		select	coalesce(sum(qt_material),0)
		into STRICT	qt_material_kit_w
		from	componente_kit
		where	cd_kit_material = cd_kit_material_w
		and (cd_material 	= cd_material_w or obter_se_generico_kit(cd_material,cd_material_w,cd_kit_material_w,nr_sequencia) = 'S')
		and		coalesce(cd_medico, cd_medico_w) = cd_medico_w
		and		coalesce(cd_convenio, cd_convenio_w) = cd_convenio_w
		and		coalesce(ie_tipo_convenio, ie_tipo_convenio_w) = ie_tipo_convenio_w
		and		coalesce(ie_sexo, ie_sexo_w) = ie_sexo_w
		AND 	IE_SITUACAO = 'A';

		if (qt_material_kit_w > 0) then
			begin

			select	coalesce(sum(qt_material),0)
			into STRICT	qt_material_atendido_w
			from	kit_estoque_comp
			where	nr_seq_kit_estoque = nr_seq_kit_estoque_p
			and	(nr_seq_item_kit IS NOT NULL AND nr_seq_item_kit::text <> '')
			and (ie_tipo_barra_p = 'B' or ie_gerado_barras = 'S')
			and (cd_material 	= cd_material_w or obter_se_generico_kit(cd_material,cd_material_w,cd_kit_material_w,nr_seq_item_kit) = 'S');

			qt_material_kit_w := (qt_material_kit_w - qt_material_atendido_w);

			if (qt_material_p > qt_material_kit_w) then
				ds_erro_w	:= substr(ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(281518) || ds_material_w || WHEB_MENSAGEM_PCK.get_texto(281519) || qt_material_p ||
						WHEB_MENSAGEM_PCK.get_texto(281520) || qt_material_kit_w || ')!' || chr(13) || chr(10),1,255);
			end if;
			end;
		end if;
		end;
	end if;

	if (ie_consiste_material_p = 'S') then
		begin

		select	coalesce(max(cd_medico),'X'),
			coalesce(max(cd_convenio),0),
			coalesce(max(ie_sexo),'X'),
			coalesce(max(ie_tipo_convenio),0)
		into STRICT	cd_medico_w,
			cd_convenio_w,
			ie_sexo_w,
			ie_tipo_convenio_w
		from	kit_estoque
		where	nr_sequencia = nr_seq_kit_estoque_p;

		select	count(*)
		into STRICT	qt_existe_w
		from	componente_kit
		where	cd_kit_material = cd_kit_material_w
		and (cd_material 	= cd_material_w or obter_se_generico_kit(cd_material,cd_material_w,cd_kit_material_w,nr_sequencia) = 'S')
		and		coalesce(cd_medico, coalesce(cd_medico_w,'X')) = cd_medico_w
		and		coalesce(cd_convenio, coalesce(cd_convenio_w,0)) = cd_convenio_w
		and		coalesce(ie_tipo_convenio, coalesce(ie_tipo_convenio_w,0)) = ie_tipo_convenio_w
		and		coalesce(ie_sexo, coalesce(ie_sexo_w,'X')) = ie_sexo_w
		AND 	IE_SITUACAO = 'A';

		if (qt_existe_w = 0) then
			select	count(*)
			into STRICT	qt_existe_w
			from	componente_kit a,
					componente_kit_opcao b
			where	a.nr_sequencia = b.nr_seq_componente
			and		b.cd_kit_material = cd_kit_material_w
			and		b.cd_material = cd_material_w
			and		coalesce(a.cd_medico, coalesce(cd_medico_w,'X')) = cd_medico_w
			and		coalesce(a.cd_convenio, coalesce(cd_convenio_w,0)) = cd_convenio_w
			and		coalesce(a.ie_tipo_convenio, coalesce(ie_tipo_convenio_w,0)) = ie_tipo_convenio_w
			and		coalesce(a.ie_sexo, coalesce(ie_sexo_w,'X')) = ie_sexo_w
			AND 	a.IE_SITUACAO = 'A';
		end if;

		if (qt_existe_w = 0) then
			ds_erro_w	:= substr(ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(281518) || ds_material_w || WHEB_MENSAGEM_PCK.get_texto(281521) || chr(13) || chr(10),1,255);
		end if;
		end;
	end if;
	end;

	if ((coalesce(qt_dias_validade_w,'0'))::numeric  > 0) and (coalesce(nr_seq_lote_fornec_p,0) > 0) then
		begin

		select	dt_validade,
			coalesce(dt_validade,clock_timestamp()) - clock_timestamp(),
			ie_validade_indeterminada
		into STRICT	dt_validade_w,
			qt_dias_atual_w,
			ie_indeterminada_w
		from	material_lote_fornec
		where	nr_sequencia = nr_seq_lote_fornec_p;

		if (ie_indeterminada_w <> 'S') and (qt_dias_atual_w < (coalesce(qt_dias_validade_w,'0'))::numeric ) then

			if (ie_bloqueia_val_w = 'S') then
				ds_erro_w	:= substr(ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(281522) || to_char(dt_validade_w,'dd/mm/yyyy') || WHEB_MENSAGEM_PCK.get_texto(281523) || qt_dias_atual_w || WHEB_MENSAGEM_PCK.get_texto(281524) || (coalesce(qt_dias_validade_w,'0'))::numeric  || WHEB_MENSAGEM_PCK.get_texto(281525) || chr(13) || chr(10) ||
									WHEB_MENSAGEM_PCK.get_texto(281526)|| chr(13) || chr(10),1,255);
			else
				ds_aviso_w	:= substr(WHEB_MENSAGEM_PCK.get_texto(281522) || to_char(dt_validade_w,'dd/mm/yyyy') || WHEB_MENSAGEM_PCK.get_texto(281523) || qt_dias_atual_w || WHEB_MENSAGEM_PCK.get_texto(281524) || (coalesce(qt_dias_validade_w,'0'))::numeric  || WHEB_MENSAGEM_PCK.get_texto(281525) || chr(13) || chr(10),1,255);
			end if;
		end if;

		end;
	end if;
end if;

ds_erro_p := substr(ds_erro_w,1,255);
ds_aviso_p := substr(ds_aviso_w,1,255);
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consist_leitura_comp_kit_barra ( nr_seq_kit_estoque_p bigint, cd_material_p bigint, qt_material_p bigint, ie_consiste_quant_p text, ie_consiste_material_p text, nr_seq_item_kit_p bigint, ie_tipo_barra_p text, nr_seq_lote_fornec_p bigint, ds_erro_p INOUT text, ds_aviso_p INOUT text) FROM PUBLIC;

