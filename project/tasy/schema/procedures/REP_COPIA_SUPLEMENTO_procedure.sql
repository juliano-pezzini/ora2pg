-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rep_copia_suplemento ( nr_prescricao_orig_p bigint, nr_prescricao_p bigint, dt_prescricao_p timestamp, nr_seq_regra_p bigint, nr_seq_material_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_agrup_acum_w			bigint;
ie_copia_w				varchar(5);
ie_padronizado_w		varchar(1);
nr_seq_material_w		bigint;
ie_loop_w				varchar(1);
qt_itens_w				bigint;
ie_copia_valid_igual_w	varchar(1);
dt_prescricao_www		timestamp;
dt_inicio_w				timestamp;
dt_final_w				timestamp;
dt_inicio_item_w		timestamp;
dt_inicio_prescr_w		timestamp;
dt_prescricao_w			timestamp;
nr_horas_validade_w		integer;
ie_prim_horario_setor_w	varchar(10);
hr_setor_w				varchar(10);
cd_setor_atendimento_w	bigint;
cd_estabelecimento_w	smallint;
nr_atendimento_w		bigint;
dt_validade_origem_w	timestamp;
dt_validade_nova_w		timestamp;
ie_regra_geral_w		varchar(15);
nr_sequencia_w			bigint;
nr_seq_regra_copia_w	bigint;
ie_manter_intervalo_w	varchar(1);
qt_operacao_w			double precision;
ie_operacao_w			varchar(15);
ds_horarios_w			varchar(2000);
ds_horarios2_w			varchar(2000);
hr_prim_horario_w		varchar(5);
ds_erro_w				varchar(255);
nr_ocorrencia_w			double precision;
dt_prim_horario_ant_w	timestamp;
dt_ultimo_horario_w	timestamp;

c01 CURSOR FOR
	SELECT  a.nr_sequencia,
			a.ie_origem_inf,
			a.cd_material,
			a.cd_unidade_medida,
			a.qt_dose,
			a.qt_unitaria,
			a.qt_material,
			dt_prescricao_p dt_prescricao,
			nm_usuario_p,
			a.cd_intervalo,
			a.ds_horarios,
			a.ds_observacao,
			a.ds_observacao_enf,
			a.ie_via_aplicacao,
			a.nr_agrupamento  nr_agrupamento,
			coalesce(a.ie_cobra_paciente,'S') ie_cobra_paciente,
			CASE WHEN coalesce(a.ie_regra_disp,'X')='D' THEN  a.cd_motivo_baixa  ELSE CASE WHEN coalesce(a.ie_cobra_paciente,'S')='S' THEN  0  ELSE a.cd_motivo_baixa END  END  cd_motivo_baixa,
			CASE WHEN coalesce(a.ie_regra_disp,'X')='D' THEN  clock_timestamp()  ELSE CASE WHEN coalesce(a.ie_cobra_paciente,'S')='S' THEN  null  ELSE clock_timestamp() END  END  dt_baixa,
			a.ie_utiliza_kit,
			a.cd_unidade_medida_dose,
			a.qt_conversao_dose,
			'N' ie_urgencia,
			a.ie_urgencia ie_urgencia_rep,
			a.nr_ocorrencia,
			a.qt_total_dispensar,
			a.cd_fornec_consignado,
			a.nr_sequencia_solucao,
			a.nr_sequencia_proc,
			a.qt_solucao,
			null hr_dose_especial,
			null qt_dose_especial,
			a.ds_dose_diferenciada,
			a.ie_medicacao_paciente,
			a.nr_sequencia_diluicao,
			CASE WHEN a.ie_se_necessario='S' THEN  null  ELSE a.hr_prim_horario END  hr_prim_horario,
			CASE WHEN coalesce(a.nr_sequencia_dieta::text, '') = '' THEN null  ELSE a.nr_sequencia_dieta END  nr_sequencia_dieta,
			a.ie_agrupador,
			a.nr_dia_util,
			CASE WHEN b.ie_situacao='A' THEN  'N'  ELSE 'S' END   ie_suspenso,
			a.ie_se_necessario,
			a.qt_min_aplicacao,
			a.ie_bomba_infusao,
			coalesce(a.ie_aplic_bolus,'N') ie_aplic_bolus,
			coalesce(a.ie_aplic_lenta,'N') ie_aplic_lenta,
			coalesce(a.ie_acm,'N') ie_acm,
			a.ie_objetivo,
			a.cd_topografia_cih,
			a.ie_origem_infeccao,
			a.cd_amostra_cih,
			a.cd_microorganismo_cih,
			coalesce(a.ie_uso_antimicrobiano,'N') ie_uso_antimicrobiano,
			a.cd_protocolo,
			a.nr_seq_protocolo,
			a.nr_seq_mat_protocolo,
			a.qt_hora_aplicacao,
			'N' ie_recons_diluente_fixo,
			a.qt_vel_infusao,
			a.ds_justificativa,
			a.ie_sem_aprazamento,
			a.ie_indicacao,
			a.dt_proxima_dose,
			a.qt_total_dias_lib,
			a.nr_seq_substituto,
			a.ie_lado,
			a.dt_inicio_medic,
			a.qt_dia_prim_hor,
			CASE WHEN coalesce(a.ie_regra_disp,'X')='D' THEN  a.ie_regra_disp  ELSE null END  ie_regra_disp,
			a.qt_vol_adic_reconst,
			a.qt_hora_intervalo,
			a.qt_min_intervalo,
			a.nr_sequencia nr_seq_anterior
	From	Material b,
			Prescr_Material a
	where	coalesce(a.nr_sequencia_diluicao::text, '') = ''
	and		a.ie_suspenso 	<> 'S'
	and		a.ie_origem_inf	<> 'K'
	and		verifica_medic_padronizado(a.nr_prescricao, a.cd_material, ie_padronizado_w) = 'S'
	and		b.ie_situacao	= 'A'
	and		a.cd_material 	= b.cd_material
	and		a.ie_agrupador = 12
	and		a.nr_prescricao = nr_prescricao_orig_p;

c01_w	c01%rowtype;

c02 CURSOR FOR
SELECT	coalesce(ie_copiar, 'N'),
		ie_regra_geral,
		nr_sequencia,
		coalesce(ie_manter_intervalo, 'N')
from	rep_regra_copia_crit
where (coalesce(ie_se_necessario,'S') = 'S'        or coalesce(c01_w.ie_se_necessario,'N') <> 'S')
and (coalesce(ie_acm,'S') = 'S'                  or coalesce(c01_w.ie_acm,'N') <> 'S')
and (coalesce(ie_agora,'S') = 'S'                or coalesce(c01_w.ie_urgencia_rep,'N') <> 'S')
and		ie_tipo_item    = 'SUP'
and		nr_seq_regra    = nr_seq_regra_p
order by nr_seq_apres;


BEGIN

select	coalesce(max(cd_estabelecimento),1),
		max(cd_setor_atendimento),
		max(nr_atendimento),
		max(dt_prescricao),
		max(dt_inicio_prescr),
		coalesce(max(nr_horas_validade), 24)
into STRICT	cd_estabelecimento_w,
		cd_setor_atendimento_w,
		nr_atendimento_w,
		dt_prescricao_w,
		dt_inicio_prescr_w,
		nr_horas_validade_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

ie_padronizado_w := Obter_Param_Usuario(924, 18, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_padronizado_w);

nr_seq_material_w := 1;

open C01;
loop
fetch C01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_copia_w := 'S';

	open C02;
	loop
	fetch C02 into
		ie_copia_w,
		ie_regra_geral_w,
		nr_seq_regra_copia_w,
		ie_manter_intervalo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		ie_copia_w := ie_copia_w;
		end;
	end loop;
	close C02;

	if (ie_copia_w	= 'S') then
		select	coalesce(max(nr_agrupamento),0) + 1
		into STRICT	nr_agrup_acum_w
		from	prescr_material
		where	nr_prescricao = nr_prescricao_p;

		ie_loop_w	:= 'S';
		while(ie_loop_w = 'S') loop
			select	count(*)
			into STRICT	qt_itens_w
			from	prescr_material
			where	nr_prescricao	= nr_prescricao_p
			and	nr_sequencia	= coalesce(nr_seq_material_w,1);

			if (qt_itens_w	= 0) then
				ie_loop_w	:= 'N';
			else
				nr_seq_material_w	:= coalesce(nr_seq_material_w,0) + 1;
			end if;
		end loop;

		if (ie_regra_geral_w = 'H') then
			if (ie_manter_intervalo_w = 'S') and (c01_w.cd_intervalo IS NOT NULL AND c01_w.cd_intervalo::text <> '') then

				select	max(ie_operacao),
						max(qt_operacao)
				into STRICT	ie_operacao_w,
						qt_operacao_w
				from	intervalo_prescricao
				where	cd_intervalo = c01_w.cd_intervalo;

				select	max(ie_operacao),
						max(qt_operacao)
				into STRICT	ie_operacao_w,
						qt_operacao_w
				from	intervalo_prescricao
				where	cd_intervalo = c01_w.cd_intervalo;

				--qt_operacao_w	:= obter_ocorrencia_intervalo(c01_w.cd_intervalo, nr_horas_validade_w, 'H');
				if (ie_operacao_w in ('F','V')) then
					hr_prim_horario_w := obter_primeiro_horario(c01_w.cd_intervalo, nr_prescricao_p, c01_w.cd_material, c01_w.ie_via_aplicacao);
				end if;

				dt_inicio_w := dt_inicio_prescr_w - 5;
				dt_final_w := clock_timestamp() + interval '5 days';

				dt_inicio_item_w := dt_inicio_prescr_w - qt_operacao_w / 24;

				select	max(c.dt_horario)
				into STRICT	dt_inicio_item_w
				from	prescr_mat_hor c,
						prescr_material b,
						prescr_medica a
				where	c.nr_seq_material = b.nr_sequencia
				and		c.nr_prescricao = b.nr_prescricao
				and		coalesce(c.ie_situacao,'A') = 'A'
				and		c.dt_horario >= dt_inicio_item_w - 220/24
				and		coalesce(b.dt_suspensao::text, '') = ''
				and		b.ie_agrupador = 12
				and		coalesce(c.ie_dose_especial,'N') <> 'S'
				and		b.cd_intervalo = coalesce(c01_w.cd_intervalo, b.cd_intervalo)
				and		coalesce(b.qt_dose,0) = coalesce(c01_w.qt_dose, coalesce(b.qt_dose,0))
				and		b.cd_material = c01_w.cd_material
				and		b.nr_prescricao = a.nr_prescricao
				and		coalesce(a.dt_suspensao::text, '') = ''
				and		(coalesce(a.dt_liberacao_medico, a.dt_liberacao) IS NOT NULL AND (coalesce(a.dt_liberacao_medico, a.dt_liberacao))::text <> '')
				--and		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
				and		a.dt_inicio_prescr between dt_inicio_w and dt_final_w
				and		a.nr_atendimento = nr_atendimento_w;

				if (dt_inicio_item_w IS NOT NULL AND dt_inicio_item_w::text <> '') then
					dt_inicio_item_w := dt_inicio_item_w + qt_operacao_w / 24;
				end if;

				dt_inicio_item_w := coalesce(dt_inicio_item_w,dt_inicio_prescr_w);

				if (coalesce(qt_operacao_w,0) > 0) and (dt_inicio_item_w IS NOT NULL AND dt_inicio_item_w::text <> '') then

					if (ie_operacao_w in ('H')) and (dt_inicio_item_w not between dt_inicio_prescr_w and (dt_inicio_item_w + qt_operacao_w)) then

						while(dt_inicio_item_w not between dt_inicio_prescr_w and (dt_inicio_item_w + qt_operacao_w)) loop
							dt_inicio_item_w := dt_inicio_item_w + qt_operacao_w/24;
						end loop;
					end if;
				else
					if (c01_w.ie_acm = 'S') then
						c01_w.ds_horarios := 'ACM';
					end if;

					if (c01_w.ie_se_necessario = 'S') then
						c01_w.ds_horarios := 'SN';
					end if;
				end if;

				if (c01_w.hr_prim_horario IS NOT NULL AND c01_w.hr_prim_horario::text <> '') then
					c01_w.hr_prim_horario	:= to_char(dt_inicio_item_w, 'hh24:mi');
				end if;

				c01_w.nr_ocorrencia := 0;
				SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, c01_w.cd_intervalo, dt_inicio_prescr_w, dt_inicio_item_w, nr_horas_validade_w, c01_w.cd_material, 0, 0, c01_w.nr_ocorrencia, ds_horarios_w, ds_horarios2_w, 'N', c01_w.ds_dose_diferenciada) INTO STRICT c01_w.nr_ocorrencia, ds_horarios_w, ds_horarios2_w;
				c01_w.ds_horarios := ds_horarios_w || ds_horarios2_w;

				c01_w.qt_dia_prim_hor := 0;

				if (hr_prim_horario_w <> '') and (hr_prim_horario_w <> ' : ') and (hr_prim_horario_w < to_char(dt_inicio_prescr_w,'hh24:mi')) then
					c01_w.qt_dia_prim_hor := 1;
				end if;

			elsif (ie_manter_intervalo_w = 'N') then

				dt_ultimo_horario_w	:= PLT_obter_ultimo_horario(nr_prescricao_orig_p, c01_w.nr_seq_anterior, 'S', nm_usuario_p);

				if (dt_ultimo_horario_w IS NOT NULL AND dt_ultimo_horario_w::text <> '') and
					(dt_ultimo_horario_w > (clock_timestamp() - interval '1 days')) then

					hr_prim_horario_w	:= to_char(dt_ultimo_horario_w + /*nvl(*/
Obter_ocorrencia_intervalo(c01_w.cd_intervalo, coalesce(nr_horas_validade_w,24),'H')/ 24,'hh24:mi');
				end if;

				if (hr_prim_horario_w <> '  :  ') and (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
					c01_w.ds_horarios	:= '';

					if (coalesce(dt_prim_horario_ant_w::text, '') = '') then
						dt_prim_horario_ant_w	:= dt_inicio_prescr_w;
					end if;

					SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, c01_w.cd_intervalo, dt_inicio_prescr_w, dt_prim_horario_ant_w, nr_horas_validade_w, null, 0, 0, c01_w.nr_ocorrencia, ds_horarios_w, ds_horarios2_w, 'N', null) INTO STRICT c01_w.nr_ocorrencia, ds_horarios_w, ds_horarios2_w;

					c01_w.ds_horarios := ds_horarios_w||ds_horarios2_w;
				else
					c01_w.ds_horarios	:= '';
				end if;

			end if;
		end if;

		insert  into prescr_material(
				nr_prescricao,
				nr_sequencia,
				ie_origem_inf,
				cd_material,
				cd_unidade_medida,
				qt_dose,
				qt_unitaria,
				qt_material,
				dt_atualizacao,
				nm_usuario,
				cd_intervalo,
				ds_horarios,
				ds_observacao,
				ds_observacao_enf,
				ie_via_aplicacao,
				nr_agrupamento,
				ie_cobra_paciente,
				cd_motivo_baixa,
				dt_baixa,
				ie_utiliza_kit,
				cd_unidade_medida_dose,
				qt_conversao_dose,
				ie_urgencia,
				nr_ocorrencia,
				qt_total_dispensar,
				cd_fornec_consignado,
				nr_sequencia_solucao,
				nr_sequencia_proc,
				qt_solucao,
				hr_dose_especial,
				qt_dose_especial,
				ds_dose_diferenciada,
				ie_medicacao_paciente,
				nr_sequencia_diluicao,
				hr_prim_horario,
				nr_sequencia_dieta,
				ie_agrupador,
				nr_dia_util,
				ie_suspenso,
				ie_se_necessario,
				qt_min_aplicacao,
				ie_bomba_infusao,
				ie_aplic_bolus,
				ie_aplic_lenta,
				ie_acm,
				ie_objetivo,
				cd_topografia_cih,
				ie_origem_infeccao,
				cd_amostra_cih,
				cd_microorganismo_cih,
				ie_uso_antimicrobiano,
				cd_protocolo,
				nr_seq_protocolo,
				nr_seq_mat_protocolo,
				qt_hora_aplicacao,
				ie_recons_diluente_fixo,
				qt_vel_infusao,
				ds_justificativa,
				ie_sem_aprazamento,
				ie_indicacao,
				dt_proxima_dose,
				qt_total_dias_lib,
				nr_seq_substituto,
				ie_lado,
				dt_inicio_medic,
				qt_dia_prim_hor,
				ie_regra_disp,
				qt_vol_adic_reconst,
				qt_hora_intervalo,
				qt_min_intervalo,
				nr_seq_anterior,
				nr_prescricao_original)
		values (		nr_prescricao_p,
				nr_seq_material_w,
				c01_w.ie_origem_inf,
				c01_w.cd_material,
				c01_w.cd_unidade_medida,
				c01_w.qt_dose,
				c01_w.qt_unitaria,
				c01_w.qt_material,
				clock_timestamp(),
				nm_usuario_p,
				c01_w.cd_intervalo,
				c01_w.ds_horarios,
				c01_w.ds_observacao,
				c01_w.ds_observacao_enf,
				c01_w.ie_via_aplicacao,
				nr_agrup_acum_w,
				c01_w.ie_cobra_paciente,
				c01_w.cd_motivo_baixa,
				c01_w.dt_baixa,
				c01_w.ie_utiliza_kit,
				c01_w.cd_unidade_medida_dose,
				c01_w.qt_conversao_dose,
				c01_w.ie_urgencia,
				c01_w.nr_ocorrencia,
				c01_w.qt_total_dispensar,
				c01_w.cd_fornec_consignado,
				c01_w.nr_sequencia_solucao,
				c01_w.nr_sequencia_proc,
				c01_w.qt_solucao,
				c01_w.hr_dose_especial,
				c01_w.qt_dose_especial,
				c01_w.ds_dose_diferenciada,
				c01_w.ie_medicacao_paciente,
				c01_w.nr_sequencia_diluicao,
				c01_w.hr_prim_horario,
				c01_w.nr_sequencia_dieta,
				c01_w.ie_agrupador,
				c01_w.nr_dia_util,
				c01_w.ie_suspenso,
				c01_w.ie_se_necessario,
				c01_w.qt_min_aplicacao,
				c01_w.ie_bomba_infusao,
				c01_w.ie_aplic_bolus,
				c01_w.ie_aplic_lenta,
				c01_w.ie_acm,
				c01_w.ie_objetivo,
				c01_w.cd_topografia_cih,
				c01_w.ie_origem_infeccao,
				c01_w.cd_amostra_cih,
				c01_w.cd_microorganismo_cih,
				c01_w.ie_uso_antimicrobiano,
				c01_w.cd_protocolo,
				c01_w.nr_seq_protocolo,
				c01_w.nr_seq_mat_protocolo,
				c01_w.qt_hora_aplicacao,
				c01_w.ie_recons_diluente_fixo,
				c01_w.qt_vel_infusao,
				c01_w.ds_justificativa,
				c01_w.ie_sem_aprazamento,
				c01_w.ie_indicacao,
				c01_w.dt_proxima_dose,
				c01_w.qt_total_dias_lib,
				c01_w.nr_seq_substituto,
				c01_w.ie_lado,
				c01_w.dt_inicio_medic,
				c01_w.qt_dia_prim_hor,
				c01_w.ie_regra_disp,
				c01_w.qt_vol_adic_reconst,
				c01_w.qt_hora_intervalo,
				c01_w.qt_min_intervalo,
				c01_w.nr_seq_anterior,
				nr_prescricao_orig_p);

	SELECT * FROM Obter_Quant_Dispensar(cd_estabelecimento_w, c01_w.cd_material, nr_prescricao_p, nr_seq_material_w, c01_w.cd_intervalo, c01_w.ie_via_aplicacao, c01_w.qt_unitaria, 0, c01_w.nr_ocorrencia, c01_w.ds_dose_diferenciada, c01_w.ie_origem_inf, c01_w.cd_unidade_medida_dose, 1, c01_w.qt_material, c01_w.qt_total_dispensar, c01_w.ie_regra_disp, ds_erro_w, c01_w.ie_se_necessario, c01_w.ie_acm) INTO STRICT c01_w.qt_material, c01_w.qt_total_dispensar, c01_w.ie_regra_disp, ds_erro_w;

	update	prescr_material
	set 	nr_ocorrencia	= c01_w.nr_ocorrencia,
			qt_total_dispensar	= c01_w.qt_total_dispensar,
			qt_material		= coalesce(c01_w.qt_material,1),
			ie_regra_disp	= CASE WHEN coalesce(ie_regra_disp,'X')='D' THEN  ie_regra_disp  ELSE c01_w.ie_regra_disp END
	where	nr_prescricao 	= nr_prescricao_p
	and	nr_sequencia		= nr_seq_material_w;


	end if;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rep_copia_suplemento ( nr_prescricao_orig_p bigint, nr_prescricao_p bigint, dt_prescricao_p timestamp, nr_seq_regra_p bigint, nr_seq_material_p bigint, nm_usuario_p text) FROM PUBLIC;

