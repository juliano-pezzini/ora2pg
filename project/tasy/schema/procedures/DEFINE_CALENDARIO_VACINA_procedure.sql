-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE define_calendario_vacina ( tipo_p text, nr_atendimento_p bigint, cd_pessoa_fisica_p text, nr_seq_calendario_p bigint, nm_usuario_p text ) AS $body$
DECLARE


cal_vac_seq		        calendario_vacina_w.nr_sequencia%type;
cd_pessoa_fisica_w		calendario_vacina_w.cd_pessoa_fisica%type;
vam_nr_seq_vacina_w		vacinas_modelo.nr_seq_vacina%type;
vc_ie_dose_w		vacina_calendario.ie_dose%type;

pac_dt_nasc_w		timestamp;
pac_dt_calc_1_w		timestamp;
pac_prim_dose_dt_w timestamp;
pac_sexo_w varchar(10);
pac_prim_dose_mes_w bigint;

dt_vacina_w timestamp;
nr_seq_programacao_w bigint;
nr_seq_pai_tomada bigint;
nr_column_w bigint;
is_status_w bigint;
qt_meses_add_w bigint;

nr_seq_vacina_w bigint;
ie_dose_w varchar(10);

c01 CURSOR FOR
SELECT
    LEAST (
              abs((obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'DIA'))::numeric  - ((obter_idade_min_max_vacina(vc.nr_sequencia, 'MAX', null))::numeric ))
              , abs((obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'DIA'))::numeric  - ((obter_idade_min_max_vacina(vc.nr_sequencia, 'MIN', null))::numeric ))
            ) DIFF_MIN
    , coalesce((select 'S'   where (obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'DIA') 
                between obter_idade_min_max_vacina(vc.nr_sequencia, 'MIN', null) and obter_idade_min_max_vacina(vc.nr_sequencia, 'MAX', null))), 'N') IE_PERMITIDO,

    vmc.ie_sexo vmc_ie_sexo, vmc.qt_idade_min_mes vmc_qt_idade_min_mes, vmc.qt_idade_max_mes vmc_qt_idade_max_mes, 
    vmc.qt_idade_min_anos vmc_qt_idade_min_anos, vmc.qt_idade_max_anos vmc_qt_idade_max_anos, vmc.nr_sequencia vmc,
    
    vam.nr_seq_vacina vam_nr_seq_vacina, vam.qt_meses_prim_dose vam_qt_meses_prim_dose, 
    vam.qt_anos_prim_dose vam_qt_anos_prim_dose, vam.nr_seq_modelo vam_nr_seq_modelo, vam.nr_sequencia vam
    
    ,obter_immunization_status(null) ie_vac_status
    
    ,vc.*
    ,obter_idade_min_max_vacina(vc.nr_sequencia, 'MIN', null) idade_min_dias
    ,obter_idade_min_max_vacina(vc.nr_sequencia, 'MAX', null) idade_max_dias
FROM vacina_modelo_calendario vmc, vacina_calendario vc, vacinas_modelo vam, vacina vac
LEFT OUTER JOIN (vc ON (vac.nr_sequencia) = (vc.nr_seq_vacina)
WHERE vmc.nr_sequencia = vam.nr_seq_modelo and vam.nr_seq_vacina = vac.nr_sequencia --restricao idade
  and (
      (coalesce(vmc.QT_IDADE_MIN_MES::text, '') = '' and 
       coalesce(vmc.QT_IDADE_MAX_MES::text, '') = '' and 
       coalesce(vmc.QT_IDADE_MIN_ANOS::text, '') = '' and 
       coalesce(vmc.QT_IDADE_MAX_ANOS::text, '') = '')
      or
      (((vmc.QT_IDADE_MIN_MES IS NOT NULL AND vmc.QT_IDADE_MIN_MES::text <> '') or (vmc.QT_IDADE_MAX_MES IS NOT NULL AND vmc.QT_IDADE_MAX_MES::text <> '')) 
            and (obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'M') between coalesce(vmc.QT_IDADE_MIN_MES,0) and coalesce(vmc.QT_IDADE_MAX_MES,999999)))
      or 
      (((vmc.QT_IDADE_MIN_ANOS IS NOT NULL AND vmc.QT_IDADE_MIN_ANOS::text <> '') or (vmc.QT_IDADE_MAX_ANOS IS NOT NULL AND vmc.QT_IDADE_MAX_ANOS::text <> '')) 
            and (obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'A') between coalesce(vmc.QT_IDADE_MIN_ANOS,0) and coalesce(vmc.QT_IDADE_MAX_ANOS,999999)))
    ) --restricao sexo
  and (vmc.ie_sexo = 'A' or vmc.ie_sexo = pac_sexo_w) --leftjoin programacao vacinas
  --restricao passada pelo usuario
  and ((coalesce(nr_seq_calendario_p::text, '') = '') or ((nr_seq_calendario_p IS NOT NULL AND nr_seq_calendario_p::text <> '') and vmc.nr_sequencia = nr_seq_calendario_p)) --restricao para dose configurada pelo usuario em calendario por faixa etaria > vacina
  and (vc.ie_dose >= coalesce(vam.IE_DOSE_INICIO, '1D')) order by vc.nr_seq_vacina asc, vc.ie_dose asc, ie_permitido desc, diff_min asc;



--============================================================================--
c02 CURSOR FOR
  SELECT * from paciente_vacina where nr_sequencia = (
    SELECT max(nr_sequencia)
    from paciente_vacina 
    where cd_pessoa_fisica = cd_pessoa_fisica_w
    and (nr_seq_vacina = vam_nr_seq_vacina_w 
	and ie_dose = vc_ie_dose_w)
	and 	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and 	coalesce(dt_inativacao::text, '') = ''
  )
;


  v_pai RECORD;
BEGIN
  if ((nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and nr_atendimento_p <> 0 and (coalesce(cd_pessoa_fisica_p::text, '') = '' or cd_pessoa_fisica_p = '')) then
      select obter_pessoa_atendimento(nr_atendimento_p, 'C')
      into STRICT cd_pessoa_fisica_w
;
  else
      cd_pessoa_fisica_w := cd_pessoa_fisica_p;
  end if;

   if ((coalesce(nr_atendimento_p::text, '') = '' or nr_atendimento_p = 0) and (coalesce(cd_pessoa_fisica_p::text, '') = '' or cd_pessoa_fisica_p = '')) then
    return;
   end if;

  if (tipo_p = 'INIT') then
    delete from calendario_vacina_w where cd_pessoa_fisica = cd_pessoa_fisica_w and nm_usuario = nm_usuario_p;

    select
        OBTER_SEXO_PF(cd_pessoa_fisica_w, 'C')
    into STRICT
        pac_sexo_w
;

    select
        to_date(OBTER_DADOS_PF(cd_pessoa_fisica_w, 'DN'), 'DD/MM/YYYY')
    into STRICT
        pac_dt_nasc_w
;

    for vacina in c01 loop
        
        if (nr_seq_vacina_w IS NOT NULL AND nr_seq_vacina_w::text <> '' AND nr_seq_vacina_w = vacina.vam_nr_seq_vacina and ie_dose_w = vacina.ie_dose) then
            goto proximo;
        else
            nr_seq_vacina_w := vacina.vam_nr_seq_vacina;
            ie_dose_w := vacina.ie_dose;
        end if;


        pac_prim_dose_mes_w := 0;
        pac_prim_dose_dt_w := clock_timestamp();
        pac_dt_calc_1_w := null;
          --pegar DT_VACINA do pai e somar com o QT_PROX_MES do pai
          --caso vacina-pai ja tenha sido inserida na PACIENTE_VACINA, utilizar a data de proxima dose dela como referencia
          -- caso contrario utilizar a configuracao da vacina.
          begin
              select nr_sequencia, dt_proxima_dose, dt_proxima_dose
              into STRICT nr_seq_pai_tomada, pac_dt_calc_1_w, pac_prim_dose_dt_w
              from (
                  SELECT nr_sequencia, dt_proxima_dose
                  from paciente_vacina a
                  where cd_pessoa_fisica = cd_pessoa_fisica_w
                  and nr_seq_vacina = vacina.vam_nr_seq_vacina  and ie_dose = vacina.ie_dose_referencia
				  and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
				  and coalesce(dt_inativacao::text, '') = ''
                  order by a.dt_vacina desc
              ) alias2 LIMIT 1;
          exception when others then
              nr_seq_pai_tomada := null;
              pac_dt_calc_1_w := null;
              pac_prim_dose_dt_w := null;
          end;

            
            
          if (coalesce(pac_dt_calc_1_w::text, '') = '') then
              begin
                select 
                      dt_vacina, nr_seq_programacao, nr_column
                into STRICT
                      dt_vacina_w, nr_seq_programacao_w, nr_column_w
                from calendario_vacina_w
                where nr_seq_vacina = vacina.vam_nr_seq_vacina 
                and ie_dose = vacina.ie_dose_referencia
                and cd_pessoa_fisica = cd_pessoa_fisica_w
                and nm_usuario = nm_usuario_p;
              exception when others then
                dt_vacina_w := null;
                nr_seq_programacao_w := null;
                nr_column_w := 0;
              end;

              for v_pai in (
                     SELECT * 
                     from vacina_calendario 
                     where nr_sequencia = nr_seq_programacao_w
              ) loop
                pac_dt_calc_1_w := add_months(dt_vacina_w, coalesce(v_pai.qt_prox_mes, 0));

                pac_prim_dose_mes_w := nr_column_w + coalesce(v_pai.qt_prox_mes, 0);
                pac_prim_dose_dt_w := pac_dt_calc_1_w;
              end loop;

              --Quando for uma dose que o pai ainda nao esta cadastrado
              if (coalesce(dt_vacina_w::text, '') = '') then
                  qt_meses_add_w := 0;

                  if (vacina.vam_qt_meses_prim_dose IS NOT NULL AND vacina.vam_qt_meses_prim_dose::text <> '') then
                      pac_prim_dose_mes_w := vacina.vam_qt_meses_prim_dose;
                  end if;

                  if (vacina.vam_qt_anos_prim_dose IS NOT NULL AND vacina.vam_qt_anos_prim_dose::text <> '') then
                      pac_prim_dose_mes_w := vacina.vam_qt_anos_prim_dose * 12;
                  end if;

                  --SOMAR em qt_meses_add_w aqui caso no futuro seja necessario adicionar periodos de doses anteriores
                  qt_meses_add_w := qt_meses_add_w + coalesce(pac_prim_dose_mes_w, 0);

                  pac_dt_calc_1_w := add_months(pac_dt_nasc_w, coalesce(qt_meses_add_w, 0));

                  pac_prim_dose_mes_w := nr_column_w + coalesce(qt_meses_add_w, 0);
                  pac_prim_dose_dt_w := pac_dt_calc_1_w;

              end if;
          else
              
              select abs(months_between(pac_prim_dose_dt_w, pac_dt_nasc_w))
              into STRICT pac_prim_dose_mes_w
;

          end if;

        --normalizando data para mostrar em meses ate 24. Apos disso mostrar apenas em anos.
        if ((pac_prim_dose_dt_w IS NOT NULL AND pac_prim_dose_dt_w::text <> '') and (pac_dt_nasc_w IS NOT NULL AND pac_dt_nasc_w::text <> '') and abs(months_between(pac_prim_dose_dt_w, pac_dt_nasc_w)) > 24) then
            select
              trunc(abs(months_between(pac_prim_dose_dt_w, pac_dt_nasc_w)))
            into STRICT
              pac_prim_dose_mes_w
;

            pac_prim_dose_mes_w := pac_prim_dose_mes_w - 24;
            pac_prim_dose_mes_w := 24 + trunc(pac_prim_dose_mes_w / 12);

        end if;

        --fluxo para novo tipo 9: previsto
        is_status_w := vacina.ie_vac_status;
        if (is_status_w = 2) then
            is_status_w := 9;
        end if;

        select nextval('calendario_vacina_w_seq')
        into STRICT cal_vac_seq
;

      --inserindo previsao de vacina
        insert into calendario_vacina_w(
          CD_PESSOA_FISICA,
          DT_ATUALIZACAO,
          DT_CANCELAMENTO,
          DT_INATIVACAO,
          DT_LIBERACAO,
          DT_PREVISTA_EXECUCAO,
          DT_VACINA,
          IE_DOSE,
          IE_SITUACAO,
          IE_STATUS,
          NM_USUARIO,
          NR_ATENDIMENTO,
          NR_COLUMN,
          NR_SEQUENCIA,
          NR_SEQ_VACINA,
          NR_SEQ_PROGRAMACAO
      ) values (
          /*CD_PESSOA_FISICA*/
 cd_pessoa_fisica_w,
          /*DT_ATUALIZACAO*/
   clock_timestamp(),
          /*DT_CANCELAMENTO*/
  null,
          /*DT_INATIVACAO*/
    null,
          /*DT_LIBERACAO*/
     null,
          /*DT_PREVISTA_EXECUCAO*/
 null,
          /*DT_VACINA*/
            pac_prim_dose_dt_w,
          /*IE_DOSE*/
              vacina.ie_dose,
          /*IE_SITUACAO*/
          'A',
          /*IE_STATUS*/
            is_status_w,
          /*NM_USUARIO*/
           nm_usuario_p,
          /*NR_ATENDIMENTO*/
       nr_atendimento_p,
          /*NR_COLUMN*/
            pac_prim_dose_mes_w, --ATUALIZAR ESSE CAMPO POSTERIORMENTE
          /*NR_SEQUENCIA_INTERNO*/
 cal_vac_seq,
          /*NR_SEQ_VACINA*/
        vacina.vam_nr_seq_vacina,
          /*NR_SEQ_PROGRAMACAO*/
   vacina.nr_sequencia
      );

      vam_nr_seq_vacina_w		:= vacina.vam_nr_seq_vacina;
      vc_ie_dose_w		      := vacina.ie_dose;

      -- atualizando vacinas tomadas com base na previsao das vacinas.
      -- todo processo de atualizacao eh feito com base apenas no ULTIMO registro,
      -- independente se esta ou nao liberado, cancelado, inativado, etc.
      for vac_tomada in c02 loop

      if (vac_tomada.dt_vacina IS NOT NULL AND vac_tomada.dt_vacina::text <> '') then
          select 
            trunc(abs(months_between(vac_tomada.dt_vacina, pac_dt_nasc_w)))
          into STRICT
            pac_prim_dose_mes_w
;

          if (pac_prim_dose_mes_w > 24) then
            pac_prim_dose_mes_w := pac_prim_dose_mes_w - 24;
            pac_prim_dose_mes_w := 24 + trunc(pac_prim_dose_mes_w / 12);
          end if;
      end if;

        --fluxo para novo tipo 9: previsto
        is_status_w := obter_immunization_status(vac_tomada.nr_sequencia, vacina.vam);
        if (is_status_w = 2) then
              is_status_w := 9;
        end if;

        update calendario_vacina_w
        set 
          IE_STATUS = is_status_w,
          IE_DOSE = vac_tomada.IE_DOSE,
          DT_VACINA = vac_tomada.DT_VACINA,
          DT_PREVISTA_EXECUCAO = vac_tomada.DT_PREVISTA_EXECUCAO,
          DT_CANCELAMENTO = vac_tomada.DT_CANCELAMENTO,
          DT_LIBERACAO = vac_tomada.DT_LIBERACAO,
          DT_INATIVACAO = vac_tomada.DT_INATIVACAO,
          IE_SITUACAO = coalesce(vac_tomada.IE_SITUACAO, 'A'),
          NR_COLUMN = pac_prim_dose_mes_w
        where nr_sequencia = cal_vac_seq;
  
      end loop;

    <<proximo>>
      null;
    end loop;

  end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE define_calendario_vacina ( tipo_p text, nr_atendimento_p bigint, cd_pessoa_fisica_p text, nr_seq_calendario_p bigint, nm_usuario_p text ) FROM PUBLIC;

