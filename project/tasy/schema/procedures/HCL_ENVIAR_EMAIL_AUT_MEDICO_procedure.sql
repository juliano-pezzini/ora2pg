-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hcl_enviar_email_aut_medico () AS $body$
DECLARE

 
ds_titulo_w		varchar(2000);
ds_email_w		varchar(2000);
cd_agenda_w		bigint;
ie_dia_semana_w		smallint;
hr_envio_w		timestamp;
nr_sequencia_w		bigint;
cd_pessoa_medico_w	varchar(10);
ds_email_med_w		varchar(255);
ds_remetente_w		varchar(500);
cd_dia_semana_w		smallint;
ds_erro_w		varchar(255);
ds_dados_agenda_w	varchar(2000);
nm_paciente_w		varchar(255);
dt_agendamento_w	varchar(50);
ds_item_w		varchar(2000);
nm_usuario_w		varchar(255);
				
C01 CURSOR FOR		 
	SELECT	a.nr_sequencia, 
		a.ds_titulo, 
		a.ds_email, 
		a.ds_remetente, 
		b.cd_agenda, 
		b.ie_dia_semana, 
		b.hr_envio	 
	from	EMAIL_ENVIO_AUT_AGENDA a, 
		REGRA_ENVIO_EMAIL_AUT_AGE b		 
	where	a.nr_sequencia 			= b.nr_seq_email 
	and	to_char(b.hr_envio, 'hh24:mi')	= to_char(clock_timestamp(),'hh24:mi') 
	and	((cd_dia_semana_w		= b.ie_dia_semana) or (b.ie_dia_semana = 9 and cd_dia_semana_w not in (1,7))) 
	order 	by 3;
	
C02 CURSOR FOR 
	SELECT	to_char(a.dt_agenda, 'dd/mm/yyyy hh24:mi'), 
		substr(coalesce(obter_nome_pf(a.cd_pessoa_fisica), a.nm_paciente),1,255) 
	from	agenda_consulta a, 
		agenda b 
	where	a.cd_agenda 		= b.cd_agenda 
	and	b.ie_situacao		= 'A' 
	--and	b.cd_estabelecimento	= wheb_usuario_pck.get_cd_estabelecimento	 
	and	b.cd_agenda		= cd_agenda_w 
	and	a.dt_agenda		between trunc(clock_timestamp()) and trunc(clock_timestamp()) + 86399/86400 
	and	a.ie_status_agenda	<> 'L' 
	order by 1;			
	 

BEGIN 
cd_dia_semana_w	:= obter_cod_dia_semana(clock_timestamp());
nm_usuario_w	:= 'Tasy';
 
if (clock_timestamp() >= trunc(clock_timestamp()) + 8/24) and (clock_timestamp() <= trunc(clock_timestamp()) + 18/24) then 
	 
	open C01;
	loop 
	fetch C01 into	 
		nr_sequencia_w, 
		ds_titulo_w, 
		ds_email_w, 
		ds_remetente_w, 
		cd_agenda_w, 
		ie_dia_semana_w, 
		hr_envio_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		if (cd_agenda_w IS NOT NULL AND cd_agenda_w::text <> '')then 
			select	max(a.cd_pessoa_fisica) 
			into STRICT	cd_pessoa_medico_w 
			from	agenda a 
			where	a.cd_agenda	= cd_agenda_w;			
		end if;
		 
			if (cd_pessoa_medico_w IS NOT NULL AND cd_pessoa_medico_w::text <> '')then 
				select	max(obter_compl_pf(cd_pessoa_medico_w,1,'M')) 
				into STRICT	ds_email_med_w 
				;
			end if;
		 
		open C02;
		loop 
		fetch C02 into	 
			dt_agendamento_w, 
			nm_paciente_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			ds_item_w	:= ds_item_w||' '||dt_agendamento_w||' - '||nm_paciente_w||chr(10);			
			end;
		end loop;
		close C02;
		 
		if (nr_sequencia_w > 0) then 
			begin			 
			ds_email_w	:= substr(replace_macro(ds_email_w, '@DADOS@', ds_item_w),1,2000);			
			CALL enviar_email(ds_titulo_w, ds_email_w, ds_remetente_w, ds_email_med_w, nm_usuario_w, 'M');
			exception 
			when others then 
				ds_erro_w	:= '';
			end;				
		end if;
		 
		end;
	end loop;
	close C01;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hcl_enviar_email_aut_medico () FROM PUBLIC;

