-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE finish_nursing_process ( nr_seq_pe_prescr_p bigint, nm_usuario_p text) AS $body$
DECLARE

  nr_seq_p_cp_interv_plan_w patient_cp_interv_plan.nr_sequencia%type;
  nr_seq_apres_w pe_prescr_proc.nr_seq_apres%type := 1;
  qt_reg_w bigint;
  nr_seq_p_cp_goal_w patient_cp_goal.nr_sequencia%type;
  nr_seq_pe_prescr_indicator_w	pe_prescr_indicator.nr_sequencia%type;

  --PATIENT_CP_INTERV_PLAN
  c_pat_cp_interv_plan CURSOR FOR
    SELECT a.*
    FROM patient_cp_interv_plan a,
      pe_prescr_diag b,
      pe_prescricao c
    WHERE c.nr_sequencia = b.nr_seq_prescr
    AND b.nr_sequencia   = a.nr_seq_prescr_diag
    AND c.nr_sequencia   = nr_seq_pe_prescr_p;

  --PATIENT_CP_INTERVENTION
  c_pat_cp_intervention CURSOR FOR
    SELECT a.nr_sequencia,
      a.si_selected,
      b.nr_seq_pe_procedimento,
      a.nr_seq_cp_intervention
    FROM cp_intervention b,
      patient_cp_intervention a
    WHERE a.nr_seq_cp_intervention  = b.nr_sequencia
    AND (b.nr_seq_pe_procedimento IS NOT NULL AND b.nr_seq_pe_procedimento::text <> '')
    AND a.nr_seq_pat_cp_interv_plan = nr_seq_p_cp_interv_plan_w
    ORDER BY coalesce(b.ds_alternative,b.ds_display_name);

  --PATIENT_CP_GOAL
  c_pat_cp_goal CURSOR FOR
    SELECT a.*
    FROM patient_cp_goal a,
      pe_prescr_diag b,
      pe_prescricao c
    WHERE c.nr_sequencia = b.nr_seq_prescr
    AND b.nr_sequencia   = a.nr_seq_prescr_diag
    AND c.nr_sequencia   = nr_seq_pe_prescr_p;

  --PATIENT_CP_INDICATOR
  c_pat_cp_indicator CURSOR FOR
    SELECT a.*
    FROM patient_cp_indicator a
    WHERE nr_seq_pat_cp_goal = nr_seq_p_cp_goal_w;

BEGIN
  /* patient_cp_interv_plan */

  FOR r_c_pat_cp_interv_plan IN c_pat_cp_interv_plan
  LOOP
    UPDATE patient_cp_interv_plan
    SET dt_release             = clock_timestamp()
    WHERE nr_sequencia         = r_c_pat_cp_interv_plan.nr_sequencia
    AND nm_usuario             = nm_usuario_p;
    nr_seq_p_cp_interv_plan_w := r_c_pat_cp_interv_plan.nr_sequencia;
    /* patient_cp_intervention */

    nr_seq_apres_w := 1;
    FOR r_c_pat_cp_intervention IN c_pat_cp_intervention
    LOOP
      SELECT COUNT(1)
      INTO STRICT qt_reg_w
      FROM patient_cp_intervention b,
        pe_prescr_proc a
      WHERE a.nr_seq_prescr                   = nr_seq_pe_prescr_p
      AND a.nr_seq_pat_cp_interv              = b.nr_sequencia
      AND b.nr_seq_cp_intervention            = r_c_pat_cp_intervention.nr_seq_cp_intervention;
      IF (r_c_pat_cp_intervention.si_selected = 'Y') AND (qt_reg_w = 0) THEN
        CALL CP_GERAR_INTERVENCAO( nr_seq_pe_prescr_p, r_c_pat_cp_intervention.nr_seq_pe_procedimento, r_c_pat_cp_intervention.nr_sequencia, nm_usuario_p );
        nr_seq_apres_w := nr_seq_apres_w + 1;
      END IF;
      UPDATE patient_cp_intervention
      SET dt_release     = clock_timestamp()
      WHERE nr_sequencia = r_c_pat_cp_intervention.nr_sequencia
      AND nm_usuario     = nm_usuario_p;
    END LOOP;
  END LOOP;
  --------------------------------------------
  /* patient_cp_goal */

  FOR r_c_pat_cp_goal IN c_pat_cp_goal
  LOOP
    UPDATE patient_cp_goal
    SET dt_release      = clock_timestamp()
    WHERE nr_sequencia  = r_c_pat_cp_goal.nr_sequencia
    AND nm_usuario      = nm_usuario_p;
    nr_seq_p_cp_goal_w := r_c_pat_cp_goal.nr_sequencia;
    /* patient_cp_indicator */

    FOR r_c_pat_cp_indicator IN c_pat_cp_indicator
    LOOP
      SELECT COUNT(1)
      INTO STRICT qt_reg_w
      FROM patient_cp_indicator b,
        pe_prescr_indicator a
      WHERE a.nr_seq_prescr                = nr_seq_pe_prescr_p
      AND a.nr_seq_pat_cp_indicator        = b.nr_sequencia
      AND b.nr_seq_cp_indicator            = r_c_pat_cp_indicator.nr_seq_cp_indicator;
      IF (r_c_pat_cp_indicator.si_selected = 'Y') AND (qt_reg_w = 0) THEN
        SELECT nextval('pe_prescr_indicator_seq')
        INTO STRICT nr_seq_pe_prescr_indicator_w
;
        INSERT
        INTO pe_prescr_indicator(
            nr_sequencia,
            dt_atualizacao,
            nm_usuario,
            dt_atualizacao_nrec,
            nm_usuario_nrec,
            nr_seq_prescr,
            nr_seq_pat_cp_indicator
          )
          VALUES (
            nr_seq_pe_prescr_indicator_w,
            clock_timestamp(),
            nm_usuario_p,
            clock_timestamp(),
            nm_usuario_p,
            nr_seq_pe_prescr_p,
            r_c_pat_cp_indicator.nr_sequencia
          );
      END IF;
      UPDATE patient_cp_indicator
      SET dt_release     = clock_timestamp()
      WHERE nr_sequencia = r_c_pat_cp_indicator.nr_sequencia
      AND nm_usuario     = nm_usuario_p
      AND coalesce(dt_release::text, '') = '';
    END LOOP;
  END LOOP;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE finish_nursing_process ( nr_seq_pe_prescr_p bigint, nm_usuario_p text) FROM PUBLIC;

