-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prescr_sae_hor (nr_seq_prescr_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w			bigint;
dt_horario_w			timestamp;
ds_hora_w				varchar(255);
k						integer;

dt_prescricao_w			timestamp;
dt_prim_hor_interv_w		timestamp;
dt_liberacao_w			timestamp;
nr_seq_item_w			bigint;
nr_seq_prescr_w			bigint;
nr_seq_proc_w			bigint;
ds_horarios_w			varchar(2000);
ds_horarios_padrao_w	varchar(4000);
hr_prim_horario_w		varchar(5);
ie_se_necessario_w		varchar(1);
ie_horario_especial_w	varchar(1);

dt_horario_sae_w		timestamp;

dt_inicio_prescr_w		timestamp;
dt_validade_prescr_w	timestamp;
hr_horario_espec_w		varchar(10);
ie_hora_espec_rep_w		varchar(1) := 'N';
ie_agora_w				varchar(10);
ie_interv_espec_agora_w	varchar(10);
cd_intervalo_w		pe_prescr_proc.cd_intervalo%type;
ie_operacao_w		intervalo_prescricao.ie_operacao%type;
qt_operacao_w		intervalo_prescricao.qt_operacao%type;
qt_dia_soma_w		bigint := 1;
qt_A_w					bigint;

/* obter intervencoes SAE */

c01 CURSOR FOR
SELECT	establishment_timezone_utils.dateattime(CASE WHEN a.ie_agora='S' THEN b.dt_atualizacao_nrec  ELSE b.dt_inicio_prescr END ,coalesce(a.dt_primeiro_horario,b.dt_inicio_prescr)),
	a.dt_primeiro_horario,
	b.dt_liberacao,
	a.nr_sequencia,
	a.nr_seq_prescr,
	a.nr_seq_proc,
	a.ds_horarios,
	padroniza_horario_sae(a.ds_horarios,
		to_char(CASE WHEN a.ie_agora='S' THEN b.dt_atualizacao_nrec  ELSE coalesce(b.dt_inicio_prescr,b.dt_atualizacao_nrec) END ,'dd/mm/yyyy hh24:mi:ss'),
		to_char(coalesce(b.dt_inicio_prescr,b.dt_atualizacao_nrec),'dd/mm/yyyy hh24:mi:ss'),
		establishment_timezone_utils.dateattime(b.dt_inicio_prescr,a.dt_primeiro_horario),
		b.dt_validade_prescr,
		a.cd_intervalo),
	--padroniza_horario(a.ds_horarios),
	a.hr_prim_horario,
	coalesce(a.ie_se_necessario,'N'),
	to_date(to_char(b.dt_inicio_prescr,'dd/mm/yyyy hh24:mi'),'dd/mm/yyyy hh24:mi'),
	b.dt_validade_prescr,
	a.HR_HORARIO_ESPEC,
	coalesce(a.ie_agora,'N'),
	coalesce(ie_interv_espec_agora,'N'),
	a.cd_intervalo
from	pe_prescr_proc a,
	pe_prescricao b
where	a.nr_seq_prescr = b.nr_sequencia
and	b.nr_sequencia = nr_seq_prescr_p
and	coalesce(a.ie_suspenso,'N') <> 'S';

procedure inserir_horario(dt_horario_p timestamp, ie_horario_especial_p text) is
;
BEGIN				
	select	nextval('pe_prescr_proc_hor_seq')
	into STRICT	nr_sequencia_w
	;

	insert into pe_prescr_proc_hor(
					nr_sequencia,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_atualizacao,
					nm_usuario,
					nr_seq_pe_prescr,
					nr_seq_pe_proc,
					nr_seq_proc,
					dt_horario,
					dt_fim_horario,
					dt_suspensao,
					ie_horario_especial,
					nm_usuario_reaprazamento,
					qt_hor_reaprazamento,
					ie_aprazado
					)
				values (
					nr_sequencia_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_prescr_w,
					nr_seq_item_w,
					nr_seq_proc_w,
					dt_horario_p,
					null,
					null,
					ie_horario_especial_p,
					null,
					null,
					'N'
					);
end;

begin


if (nr_seq_prescr_p IS NOT NULL AND nr_seq_prescr_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	open c01;
	loop
	fetch c01 into	dt_prescricao_w,
				dt_prim_hor_interv_w,
				dt_liberacao_w,
				nr_seq_item_w,
				nr_seq_prescr_w,
				nr_seq_proc_w,
				ds_horarios_w,
				ds_horarios_padrao_w,
				hr_prim_horario_w,
				ie_se_necessario_w,
				dt_inicio_prescr_w,
				dt_validade_prescr_w,
				hr_horario_espec_w,
				ie_agora_w,
				ie_interv_espec_agora_w,
				cd_intervalo_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		dt_horario_sae_w := dt_prescricao_w;

		select	max(a.ie_operacao),
			max(a.qt_operacao)
		into STRICT	ie_operacao_w,
			qt_operacao_w
		from	intervalo_prescricao a
		where	a.cd_intervalo = cd_intervalo_w;

		if (ie_operacao_w = 'H') then
			qt_dia_soma_w := (qt_operacao_w / 24);
		end if;

		if (dt_prim_hor_interv_w < dt_inicio_prescr_w) and (ie_agora_w	= 'N') and (ie_interv_espec_agora_w	= 'N')then
			dt_horario_sae_w := dt_horario_sae_w - 1;
		end if;

		if (dt_horario_sae_w < dt_inicio_prescr_w) and (ie_agora_w	= 'N') and (ie_interv_espec_agora_w	= 'N')then
			dt_horario_sae_w := dt_horario_sae_w + 1;
		end if;

		if (hr_horario_espec_w IS NOT NULL AND hr_horario_espec_w::text <> '') then
			if (ie_se_necessario_w = 'S') and (ie_interv_espec_agora_w = 'N')then
				ie_horario_especial_w := 'S';
			else
				ie_horario_especial_w := 'N';
			end if;
			
			inserir_horario(trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_horario_sae_w, coalesce(hr_horario_espec_w,'00:00')), 'mi'), ie_horario_especial_w);
		end if;

		if (ds_horarios_padrao_w IS NOT NULL AND ds_horarios_padrao_w::text <> '') then

			while (ds_horarios_padrao_w IS NOT NULL AND ds_horarios_padrao_w::text <> '') loop
				begin
				select	position(' ' in ds_horarios_padrao_w)
				into STRICT	k
				;

				if (k > 1) and ((substr(ds_horarios_padrao_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padrao_w, 1, k -1))::text <> '')) then
					ds_hora_w		:= substr(ds_horarios_padrao_w, 1, k-1);
					ds_hora_w		:= replace(ds_hora_w, ' ','');
					ds_horarios_padrao_w	:= substr(ds_horarios_padrao_w, k + 1, 4000);
				elsif (ds_horarios_padrao_w IS NOT NULL AND ds_horarios_padrao_w::text <> '') then
					ds_hora_w 		:= replace(ds_horarios_padrao_w,' ','');
					ds_horarios_padrao_w	:= '';
				end if;

				if (ie_agora_w = 'S') then
					ds_hora_w := replace(ds_hora_w,'A','');
					dt_horario_w := trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_horario_sae_w, coalesce(ds_hora_w,'00:00')), 'mi');
				else
                    qt_A_w := round(length(ds_hora_w) - length(replace(ds_hora_w,'A','')));
					
					if (qt_A_w >= 3) then
						ds_hora_w	:= substr(ds_hora_w,qt_A_w+1,length(ds_hora_w));
						ds_hora_w := replace(ds_hora_w,'A','');

						if (length(ds_hora_w) = 3 and position(':' in ds_hora_w) = 3) then
							ds_hora_w := ds_hora_w || '00';
						elsif (length(ds_hora_w) = 4 and position(':' in ds_hora_w) = 3) then
							ds_hora_w := ds_hora_w || '0';
						end if;

						if (SUBSTR(ds_hora_w,LENGTH(ds_hora_w),LENGTH(ds_hora_w)-1) = ':') then
							ds_hora_w := substr(ds_hora_w,1,LENGTH(ds_hora_w)-1);
						end if;

						dt_horario_w := trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_horario_sae_w + qt_A_w, coalesce(ds_hora_w,'00:00')), 'mi');

					elsif (position('AA' in ds_hora_w) > 0) then
						ds_hora_w	:= substr(ds_hora_w,3,length(ds_hora_w));
						ds_hora_w := replace(ds_hora_w,'A','');

						if (length(ds_hora_w) = 3 and position(':' in ds_hora_w) = 3) then
							ds_hora_w := ds_hora_w || '00';
						elsif (length(ds_hora_w) = 4 and position(':' in ds_hora_w) = 3) then
							ds_hora_w := ds_hora_w || '0';
						end if;

						if (SUBSTR(ds_hora_w,LENGTH(ds_hora_w),LENGTH(ds_hora_w)-1) = ':') then
							ds_hora_w := substr(ds_hora_w,1,LENGTH(ds_hora_w)-1);
						end if;

						
                        dt_horario_w := trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_horario_sae_w + 2, coalesce(ds_hora_w,'00:00')), 'mi');

					elsif (position('A' in ds_hora_w) > 0) then
						ds_hora_w	:= substr(ds_hora_w,2,length(ds_hora_w));
						ds_hora_w := replace(ds_hora_w,'A','');

						if (SUBSTR(ds_hora_w,LENGTH(ds_hora_w),LENGTH(ds_hora_w)-1) = ':') then
							ds_hora_w := substr(ds_hora_w,1,LENGTH(ds_hora_w)-1);
						end if;

						if (length(ds_hora_w) = 3 and position(':' in ds_hora_w) = 3) then
							ds_hora_w := ds_hora_w || '00';
						elsif (length(ds_hora_w) = 4 and position(':' in ds_hora_w) = 3) then
							ds_hora_w := ds_hora_w || '0';
						end if;

						dt_horario_w := trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_horario_sae_w + 1, coalesce(ds_hora_w,'00:00')), 'mi');

					else
						ds_hora_w := replace(ds_hora_w,'A','');

						if (length(ds_hora_w) = 3 and position(':' in ds_hora_w) = 3) then
							ds_hora_w := ds_hora_w || '00';
						elsif (length(ds_hora_w) = 4 and position(':' in ds_hora_w) = 3) then
							ds_hora_w := ds_hora_w || '0';
						elsif (length(ds_hora_w) = 4 and position(':' in ds_hora_w) = 2) then
              						ds_hora_w := '0'||ds_hora_w;
						end if;

						dt_horario_w := trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_horario_sae_w, coalesce(ds_hora_w,'00:00')), 'mi');
					end if;
				end if;

				if (ie_se_necessario_w = 'S') and (ie_interv_espec_agora_w = 'N')then
					ie_horario_especial_w := 'S';
				else
					ie_horario_especial_w := 'N';
				end if;

				if	((dt_horario_w >= coalesce(dt_inicio_prescr_w,dt_prescricao_w)) and (dt_horario_w <= dt_validade_prescr_w)) or (ie_agora_w	= 'S') or (ie_interv_espec_agora_w = 'S')then
					begin
					inserir_horario(dt_horario_w, ie_horario_especial_w);
					
					if (ie_interv_espec_agora_w	= 'S') and (hr_horario_espec_w IS NOT NULL AND hr_horario_espec_w::text <> '') then
						ie_interv_espec_agora_w	:= 'N';
					end if;
					end;
				end if;
				end;
			end loop;
		else	
			/* Rafael em 08/10/2007 OS70835;
			ds_hora_w	:= nvl(hr_prim_horario_w, substr(to_char(sysdate,'dd/mm/yyyy hh24:mi:ss'),12,5));
			dt_horario_w	:= to_date(to_char(dt_horario_sae_w,'dd/mm/yyyy')||' '||ds_hora_w||':00','dd/mm/yyyy hh24:mi:ss');
			*/
			ds_hora_w	:= coalesce(substr(to_char(dt_inicio_prescr_w,'dd/mm/yyyy hh24:mi:ss'),12,5), substr(to_char(clock_timestamp(),'dd/mm/yyyy hh24:mi:ss'),12,5));
			dt_horario_w	:= trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_inicio_prescr_w, coalesce(ds_hora_w, '00:00')), 'mi');
	
			--if	(dt_horario_w < dt_inicio_prescr_w) then /* OS74391 */
			if (dt_horario_w < trunc(dt_inicio_prescr_w,'mi')) then
				dt_horario_w := dt_horario_w + 1;
			end if;
			
			--if	(dt_horario_w >= dt_horario_sae_w) and /* OS74391 */

			--if	(dt_horario_w >= trunc(dt_horario_sae_w,'mi')) and /* OS75270 */
			if (dt_horario_w >= trunc(dt_inicio_prescr_w,'mi')) and (dt_horario_w <= dt_validade_prescr_w) then
				inserir_horario(dt_horario_w,'S');
			end if;
		end if;
		end;
	end loop;
	close c01;
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescr_sae_hor (nr_seq_prescr_p bigint, nm_usuario_p text) FROM PUBLIC;

