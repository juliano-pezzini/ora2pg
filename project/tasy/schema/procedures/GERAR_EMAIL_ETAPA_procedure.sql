-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_email_etapa (nr_seq_lote_p bigint, ie_tipo_mensagem_p text, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_etapa_destino_w 		lote_etapa.nr_seq_etapa_destino%type;
nr_seq_etapa_origem_w    lote_etapa.nr_seq_etapa_origem%type;
ie_receb_automatico_w 		fatur_etapa.ie_receb_automatico%type;
nr_interno_conta_w 			conta_paciente.nr_interno_conta%type;
cd_convenio_w 				bigint;
ie_tipo_atendimento_w 	  smallint;
ie_clinica_w		   	integer;	
cd_convenio_parametro_w   integer;	
cd_categoria_parametro_w	varchar(10);
nr_seq_classificacao_w   bigint;
nr_atendimento_w 	   	bigint;
qt_existe_w		   		bigint;
ie_retornou         varchar(1);
cd_setor_atendimento_w   setor_atendimento.cd_setor_atendimento%type;
cd_estabelecimento_w    smallint;
ds_email_origem_w	  usuario.ds_email%type;
nm_usuario_destino_w    usuario.nm_usuario%type;
nr_sequencia_w       fatur_etapa_responsavel.nr_sequencia%type;
ds_assunto_w				regra_envio_email_etapa.ds_assunto%type;
ds_mensagem_w				regra_envio_email_etapa.ds_mensagem%type;
ds_mensagem_padrao_w		regra_envio_email_etapa.ds_mensagem%type;
ds_email_destino_w     usuario.ds_email%type;
qtde_conta_w        integer;
ds_etapa_origem_w      varchar(255);
ds_etapa_destino_w     varchar(255);
vl_conta_w         conta_paciente_etapa.vl_conta%type;
vl_conta_total_w			double precision;
ds_erro_w		varchar(255);
ie_receb_mesma_etapa_w	varchar(1);

--CARREGA AS REGRAS DA ETAPA DESTINO 
c01 CURSOR FOR 
SELECT	nm_usuario_resp, 
		nr_sequencia 
FROM 	fatur_etapa_responsavel 
WHERE	nr_seq_etapa = nr_seq_etapa_destino_w 
ORDER BY 2;

--CARREGA AS CONTAS DO LOTE 
c02 CURSOR FOR 
SELECT	nr_interno_conta 
FROM	conta_paciente_etapa 
WHERE	nr_seq_lote = nr_seq_lote_p 
ORDER BY 1;


BEGIN 
 
-- RETORNA A ETAPA DESTINO ATRAVÉS DO LOTE 
qtde_conta_w := 0;
SELECT	coalesce(max(nr_seq_etapa_destino),0), 
		coalesce(max(nr_seq_etapa_origem),0), 
		coalesce(max(cd_estabelecimento),0) 
INTO STRICT  nr_seq_etapa_destino_w, 
		nr_seq_etapa_origem_w, 
	  cd_estabelecimento_w 
FROM 	lote_etapa 
WHERE 	nr_sequencia = nr_seq_lote_p;
 
-- RETORNA O VALOR DO PARÂMETRO "RECEBER ETAPA AUTOMATIC." 
if (nr_seq_etapa_destino_w > 0) then 
	select	coalesce(max(ie_receb_automatico),'N'), 
		coalesce(max(ie_receb_mesma_etapa),'N') 
	into STRICT	ie_receb_automatico_w, 
		ie_receb_mesma_etapa_w 
	from	fatur_etapa 
	where	nr_sequencia = nr_seq_etapa_destino_w;
end if;
 
if	((ie_receb_automatico_w = 'R') and ((ie_receb_mesma_etapa_w = 'N') or (nr_seq_etapa_origem_w <> nr_seq_etapa_destino_w))) then 
	-- CARREGA REGRAS DO (SHIFT + F11) 
	SELECT	max(ds_assunto), 
			max(ds_mensagem) 
	INTO STRICT  ds_assunto_w, 
			ds_mensagem_padrao_w		 
	FROM	regra_envio_email_etapa 
	WHERE	ie_tipo_mensagem = ie_tipo_mensagem_p 
	AND 	ie_situacao = 'A' 
	AND   cd_estabelecimento = cd_estabelecimento_w;
	 
	--obter_param_usuario(0, 38, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ds_email_origem_w); 
 
	select	max(ds_email) 
	into STRICT	ds_email_origem_w 
	from	usuario 
	where	nm_usuario	= nm_usuario_p;	
 
  /*SELECT	nvl(sum(vl_conta),0) 
	INTO  vl_conta_w 
	FROM	conta_paciente_etapa 
	WHERE	nr_seq_lote = nr_seq_lote_p;*/
 
	 
	open c01;
	loop 
	fetch c01 into 	 
			nm_usuario_destino_w, 
			nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
     
		ie_retornou 	:= 'N';
		vl_conta_total_w:= 0;	
		qtde_conta_w  := 0;	
		vl_conta_w   := 0;
		ds_mensagem_w	:= ds_mensagem_padrao_w;
		 
		open c02;
		loop 
		fetch c02 into 
				nr_interno_conta_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin 
			select 	coalesce(max(a.ie_tipo_atendimento),1) ie_tipo_atendimento, 
					coalesce(max(a.nr_seq_classificacao),0) nr_seq_classificacao, 
					coalesce(max(a.ie_clinica),0) ie_clinica,		 
					coalesce(max(b.cd_convenio_parametro),0) cd_convenio_parametro, 
					coalesce(max(b.cd_categoria_parametro),'0') cd_categoria_parametro, 
					coalesce(max(a.nr_atendimento),0) nr_atendimento 
			into STRICT  ie_tipo_atendimento_w, 
					nr_seq_classificacao_w, 
					ie_clinica_w, 
					cd_convenio_parametro_w, 
					cd_categoria_parametro_w, 
					nr_atendimento_w 
			from 	atendimento_paciente a, 
					conta_paciente b		 
			where 	a.nr_atendimento = b.nr_atendimento 
			and 	b.nr_interno_conta = nr_interno_conta_w;
			 
			if (nr_atendimento_w > 0) then 
				 
				cd_setor_atendimento_w:= coalesce(Obter_Setor_Atendimento(nr_atendimento_w),0);	
				--verificar o responsável 
				select 	count(*) 
				into STRICT	qt_existe_w 
				from  fatur_etapa_responsavel 
				where	nr_sequencia = nr_sequencia_w -- esse veio do cursor das regras de responsaveis. 
				and 	ie_situacao = 'A' 
				and 	trunc(clock_timestamp(),'dd') between dt_inicio_vigencia and coalesce(dt_final_vigencia, clock_timestamp()) 
				and 	coalesce(cd_convenio, cd_convenio_parametro_w) = cd_convenio_parametro_w 
				and 	coalesce(cd_categoria, cd_categoria_parametro_w) = cd_categoria_parametro_w 
				and 	coalesce(ie_tipo_atendimento, ie_tipo_atendimento_w) = ie_tipo_atendimento_w 
				and   coalesce(nr_seq_classificacao, nr_seq_classificacao_w) = nr_seq_classificacao_w 
				and 	coalesce(ie_clinica, ie_clinica_w) = ie_clinica_w 
				and 	coalesce(cd_setor_atendimento, cd_setor_atendimento_w) = cd_setor_atendimento_w;
 
			end if;
			 
			if (qt_existe_w > 0) then 
			 
				ie_retornou := 'S';
				qtde_conta_w := qtde_conta_w + 1;
				 
				SELECT	coalesce(sum(vl_conta),0) 
				INTO STRICT  vl_conta_w 
				FROM	conta_paciente_etapa 
				WHERE	nr_seq_lote = nr_seq_lote_p 
				AND 	nr_seq_etapa = nr_seq_etapa_destino_w 
				AND 	nr_interno_conta = nr_interno_conta_w;
				 
				vl_conta_total_w:= vl_conta_total_w + vl_conta_w;
				 
			end if;	
			 
			end;
		end loop;
		close c02;
		 
		if (ie_retornou = 'S') then 
			 
			SELECT	max(ds_email) 
			INTO STRICT 	ds_email_destino_w 
			FROM	usuario 
			WHERE	nm_usuario = nm_usuario_destino_w;
 
			SELECT	max(ds_etapa) 
			INTO STRICT  ds_etapa_origem_w 
			FROM	fatur_etapa 
			WHERE	nr_sequencia = nr_seq_etapa_origem_w;
			 
			SELECT	max(ds_etapa) 
			INTO STRICT  ds_etapa_destino_w 
			FROM	fatur_etapa 
			WHERE	nr_sequencia = nr_seq_etapa_destino_w;
			 
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ETAPA_ORIGEM',ds_etapa_origem_w),1,2000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ETAPA_DESTINO',ds_etapa_destino_w),1,2000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@NUMERO_LOTE',nr_seq_lote_p),1,2000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@QTDE_CONTA',qtde_conta_w),1,2000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@VALOR_TOTAL',Campo_Mascara_virgula(vl_conta_total_w)),1,2000);
			 
			begin 
			CALL Enviar_Email(ds_assunto_w, ds_mensagem_w, ds_email_origem_w, ds_email_destino_w, null, 'M');									
			exception 
				When Others then 
				ds_erro_w:= substr(sqlerrm,1,255);
			end;
			 
		end if;	
		 
		end;
	end loop;
	close c01;
	 
end if;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_email_etapa (nr_seq_lote_p bigint, ie_tipo_mensagem_p text, nm_usuario_p text) FROM PUBLIC;

