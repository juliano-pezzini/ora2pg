-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lib_conf_envio_opme ( nr_seq_agenda_p bigint, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE



/*
ie_opcao_p
Sol = Seta data de solicitacao de envio;
Lib = Seta data de liberacao de envio;
Amb = Seta as duas datas para quando nao e utilizado o processo de confirmacao
*/
nr_sequencia_w		agenda_paciente.nr_sequencia%type;
qt_utilizado_w		double precision;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		qt_utilizado
	from	(SELECT	a.nr_sequencia,
			sum((select	coalesce(sum(x.qt_material), 0)
				from	material_atend_paciente x
					where	a.cd_material = x.cd_material
					and 	coalesce(x.cd_motivo_exc_conta::text, '') = ''
					and 	b.nr_cirurgia = x.nr_cirurgia
					and	b.nr_atendimento = x.nr_atendimento
					and	a.cd_cgc = x.cd_cgc_fornecedor
					and	x.nr_atendimento = b.nr_atendimento )) qt_utilizado
		from	agenda_pac_opme a,
			agenda_paciente b
		where	b.nr_sequencia = a.nr_seq_agenda
		--and	a.dt_solic_envio is null

		--and	a.dt_liberacao_envio is null
		and	(b.ie_opme_integracao IS NOT NULL AND b.ie_opme_integracao::text <> '')
		and	a.ie_integracao = 'S'
		and	b.nr_sequencia = nr_seq_agenda_p
		and 	exists (select 	1
				from	material_sistema_externo x
				where	x.ie_sistema = 'I'
				and	x.cd_material = a.cd_material)
		group by a.cd_material,
			a.cd_cgc,
			a.nr_seq_agenda,
			a.nr_sequencia,
			b.nr_atendimento,
			b.nr_cirurgia) alias7
	where	coalesce(qt_utilizado, 0) > 0;

C02 CURSOR FOR
	SELECT	nr_sequencia,
		qt_utilizado
	from	(SELECT	a.nr_sequencia,
			sum((select	coalesce(sum(x.qt_material), 0)
				from	material_atend_paciente x
					where	a.cd_material = x.cd_material
					and 	coalesce(x.cd_motivo_exc_conta::text, '') = ''
					and 	b.nr_cirurgia = x.nr_cirurgia
					and	b.nr_atendimento = x.nr_atendimento
					and	a.cd_cgc = x.cd_cgc_fornecedor
					and	x.nr_atendimento = b.nr_atendimento )) qt_utilizado
		from	agenda_pac_opme a,
			agenda_paciente b
		where	b.nr_sequencia = a.nr_seq_agenda
		and	(a.dt_solic_envio IS NOT NULL AND a.dt_solic_envio::text <> '')
		and	(b.ie_opme_integracao IS NOT NULL AND b.ie_opme_integracao::text <> '')
		and	a.ie_integracao = 'S'
		and	b.nr_sequencia = nr_seq_agenda_p
		and 	exists (select 	1
				from	material_sistema_externo x
				where	x.ie_sistema = 'I'
				and	x.cd_material = a.cd_material)
		group by a.cd_material,
			a.cd_cgc,
			a.nr_seq_agenda,
			a.nr_sequencia,
			b.nr_atendimento,
			b.nr_cirurgia) alias8
	where	coalesce(qt_utilizado, 0) > 0;


BEGIN

if (ie_opcao_p = 'Sol') then

	open C01;
	loop
	fetch C01 into	
		nr_sequencia_w,
		qt_utilizado_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		update	agenda_pac_opme
		set	dt_solic_envio = clock_timestamp(),
			nm_usuario_solic_envio = nm_usuario_p
		where	nr_sequencia = nr_sequencia_w;
		
		end;
	end loop;
	close C01;
	
	update	agenda_paciente
	set	ie_opme_int_status = 61
	where	nr_sequencia = nr_seq_agenda_p;
	
elsif (ie_opcao_p = 'Lib') then

	open C02;
	loop
	fetch C02 into	
		nr_sequencia_w,
		qt_utilizado_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		
		update	agenda_pac_opme
		set	dt_liberacao_envio = clock_timestamp(),
			nm_usuario_lib_envio = nm_usuario_p
		where	nr_sequencia = nr_sequencia_w;
		
		end;
	end loop;
	close C02;

elsif (ie_opcao_p = 'Amb') then

	open C01;
	loop
	fetch C01 into	
		nr_sequencia_w,
		qt_utilizado_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		update	agenda_pac_opme
		set	dt_solic_envio = clock_timestamp(),
			nm_usuario_solic_envio = nm_usuario_p,
			dt_liberacao_envio = clock_timestamp(),
			nm_usuario_lib_envio = nm_usuario_p
		where	nr_sequencia = nr_sequencia_w;
		
		end;
	end loop;
	close C01;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lib_conf_envio_opme ( nr_seq_agenda_p bigint, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

