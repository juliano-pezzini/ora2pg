-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_requisicao_gedipa ( cd_pessoa_requisitante_p text, cd_setor_atendimento_p bigint, cd_material_p bigint, qt_material_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_requisicao_p INOUT bigint) AS $body$
DECLARE


nr_requisicao_w				bigint;
cd_operacao_transf_setor_w			smallint;
cd_local_destino_w				varchar(4) := null;
cd_local_origem_w				varchar(4) := null;
cd_oper_estoque_w			smallint;
cd_setor_atend_w				integer;
cd_local_estoque_w			smallint;
cd_centro_custo_w				integer;
ie_tipo_conta_w				smallint;
cd_conta_contabil_w			varchar(20);
nr_sequencia_w				bigint;
cd_unid_med_consumo_w			varchar(30);
cd_unid_med_estoque_w			varchar(30);
qt_conv_estoque_consumo_w 		double precision;
qt_existe_w				bigint;


BEGIN

cd_local_destino_w := Obter_Param_Usuario(3112, 31, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_local_destino_w);
cd_local_origem_w := Obter_Param_Usuario(3112, 32, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_local_origem_w);

select	count(*)
into STRICT	qt_existe_w
from	local_estoque
where	cd_local_estoque = cd_local_destino_w;

if (qt_existe_w = 0) then
	--Para gerar a requisição, deve ser informado o código de local de estoque destino no parâmetro [31].');
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(261623);
end if;

select	count(*)
into STRICT	qt_existe_w
from	local_estoque
where	cd_local_estoque = cd_local_origem_w;

if (qt_existe_w = 0) then
	--Para gerar a requisição, deve ser informado o código de local de estoque no parâmetro [32].');
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(261624);
end if;

if (cd_local_origem_w = cd_local_destino_w) then
	--O local de estoque destino deve ser diferente do local de estoque origem. Veja parâmetros [31] e [32].');
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(261625);
end if;

select	coalesce(max(cd_operacao_transf_setor), 0)
into STRICT 	cd_operacao_transf_setor_w
from 	parametro_estoque
where	cd_estabelecimento	= cd_estabelecimento_p;
if (cd_operacao_transf_setor_w = 0) then
	--A requisição não pode ser gerada!' || chr(13) || 'Deve estar definido a operação de transferência de setor nos parâmetros de estoque.');
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(261627);
end if;

nr_requisicao_w		:= nr_requisicao_p;

if (nr_requisicao_w = 0) then

	select	nextval('requisicao_seq')
	into STRICT	nr_requisicao_w
	;

	begin
	insert into requisicao_material(
		nr_requisicao,
		cd_estabelecimento,
		cd_local_estoque,
		dt_solicitacao_requisicao,
		dt_atualizacao,
		nm_usuario,
		cd_operacao_estoque,
		cd_pessoa_requisitante,
		cd_estabelecimento_destino,
		cd_local_estoque_destino,
		cd_setor_atendimento,
		ie_urgente,
		ie_geracao)
	values (	nr_requisicao_w,
		cd_estabelecimento_p,
		CASE WHEN coalesce(campo_numerico(cd_local_origem_w),0)=0 THEN null  ELSE coalesce(campo_numerico(cd_local_origem_w),0) END ,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		cd_operacao_transf_setor_w,
		cd_pessoa_requisitante_p,
		cd_estabelecimento_p,
		CASE WHEN coalesce(campo_numerico(cd_local_destino_w),0)=0 THEN null  ELSE coalesce(campo_numerico(cd_local_destino_w),0) END ,
		null,
		'N',
		'A');
	exception when others then
		--Erro ao gravar requisição');
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(261628);
	end;
end if;

if (nr_requisicao_w > 0) then

	select	cd_operacao_estoque,
		cd_setor_atendimento,
		cd_local_estoque,
		cd_centro_custo
	into STRICT	cd_oper_estoque_w,
		cd_setor_atend_w,
		cd_local_estoque_w,
		cd_centro_custo_w
	from	requisicao_material
	where	nr_requisicao = nr_requisicao_w;

	select	CASE WHEN ie_tipo_requisicao=2 THEN 2  ELSE 3 END
	into STRICT	ie_tipo_conta_w
	from	operacao_estoque
	where	cd_operacao_estoque = cd_oper_estoque_w;

	SELECT * FROM define_conta_material(
			cd_estabelecimento_p, cd_material_p, ie_tipo_conta_w, 0, cd_setor_atend_w, '0', 0, 0, 0, 0, cd_local_estoque_w, Null, clock_timestamp(), cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;

	select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo,
		substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UME'),1,30) cd_unidade_medida_estoque,
		qt_conv_estoque_consumo
	into STRICT	cd_unid_med_consumo_w,
		cd_unid_med_estoque_w,
		qt_conv_estoque_consumo_w
	from	material
	where	cd_material = cd_material_p;

	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from	item_requisicao_material
	where	nr_requisicao = nr_requisicao_w;

	insert into item_requisicao_material(
		nr_requisicao,
		nr_sequencia,
		cd_estabelecimento,
		cd_material,
		qt_material_requisitada,
		qt_material_atendida,
		vl_material,
		dt_atualizacao,
		nm_usuario,
		cd_unidade_medida,
		dt_atendimento,
		cd_pessoa_recebe,
		cd_pessoa_atende,
		ie_acao,
		cd_motivo_baixa,
		qt_estoque,
		cd_unidade_medida_estoque,
		cd_conta_contabil,
		cd_material_req,
		ds_observacao,
		ie_geracao)
	values (	nr_requisicao_w,
		nr_sequencia_w,
		cd_estabelecimento_p,
		cd_material_p,
		qt_material_p,
		0,
		0,
		clock_timestamp(),
		nm_usuario_p,
		cd_unid_med_consumo_w,
		null,
		null,
		null,
		'1',
		0,
		(qt_material_p / qt_conv_estoque_consumo_w),
		cd_unid_med_estoque_w,
		cd_conta_contabil_w,
		cd_material_p,
		null,
		null);
end if;

nr_requisicao_p	:= nr_requisicao_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_requisicao_gedipa ( cd_pessoa_requisitante_p text, cd_setor_atendimento_p bigint, cd_material_p bigint, qt_material_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_requisicao_p INOUT bigint) FROM PUBLIC;

