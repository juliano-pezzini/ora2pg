-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consitir_valores_interf_aprov (nr_seq_result_p bigint, nr_seq_prescr_p bigint, qt_exames_consist_p INOUT bigint) AS $body$
DECLARE

qt_exames_consist_w	integer;
vl_resultado_w 		double precision;
nr_seq_regra_w		bigint;
ds_regra_w			varchar(255);
qt_resultado_desc_w varchar(15);

C01 CURSOR FOR
	SELECT 	b.nr_sequencia,
			b.ds_resultado,
			coalesce(a.qt_resultado,0)
	from 	lab_exame_valor_interf b,
			exame_lab_result_item a
	where	((a.nr_seq_exame = b.nr_seq_exame) or (b.nr_seq_grupo = obter_grupo_exame_lab(a.nr_seq_exame)))
	and		a.nr_seq_resultado = nr_seq_result_p
	and		a.nr_seq_prescr = nr_seq_prescr_p
	and		(a.qt_resultado IS NOT NULL AND a.qt_resultado::text <> '')
	and (b.ds_resultado like '%>%' or b.ds_resultado like '%<%' or b.ds_resultado like '%=%' or b.ds_resultado like '%between%');


BEGIN

select 	count(*)
into STRICT	qt_exames_consist_w
from 	exame_lab_result_item a,
	lab_exame_valor_interf b
where	nr_seq_prescr = nr_seq_prescr_p
and	((a.nr_seq_exame = b.nr_seq_exame) or (b.nr_seq_grupo = obter_grupo_exame_lab(a.nr_seq_exame)))
and	coalesce(a.qt_resultado,0)	= b.qt_resultado
and	a.nr_seq_resultado = nr_seq_result_p;

if (coalesce(qt_exames_consist_w,0) = 0) then
	--tratamento para regra com simbolo de > , < e =
	open c01;
	loop
	fetch c01 into 	nr_seq_regra_w,
					ds_regra_w,
					qt_resultado_desc_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		vl_resultado_w := obter_valor_dinamico('select 1 from dual where ' || qt_resultado_desc_w || ds_regra_w, vl_resultado_w);

		if (coalesce(vl_resultado_w::text, '') = '') or (vl_resultado_w = 0) then
			vl_resultado_w := obter_valor_dinamico('select 1 from dual where ' || qt_resultado_desc_w || replace(ds_regra_w, ',', '.'), vl_resultado_w);
		end if;

		if (coalesce(vl_resultado_w,0) > 0) then
			qt_exames_consist_w := vl_resultado_w;
			exit;
		end if;

	end loop;
	close c01;
end if;

qt_exames_consist_p := coalesce(qt_exames_consist_w,0);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consitir_valores_interf_aprov (nr_seq_result_p bigint, nr_seq_prescr_p bigint, qt_exames_consist_p INOUT bigint) FROM PUBLIC;

