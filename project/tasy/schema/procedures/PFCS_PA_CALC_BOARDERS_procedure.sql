-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_pa_calc_boarders ( cd_estabelecimento_p bigint, nm_usuario_p text ) AS $body$
DECLARE


nr_seq_indicator_w           pfcs_panel.nr_seq_indicator%TYPE := PFCS_PCK_INDICATORS.NR_ED_BOARDERS;
pfcs_panel_detail_seq_w      pfcs_panel_detail.nr_sequencia%type;
pfcs_panel_seq_w             pfcs_panel.nr_sequencia%TYPE;

ie_boarder_w          		varchar(2);
qt_boarders_admits_w   		integer := 0;
qt_avg_time_w           	integer := 0;
qt_time_w					integer := 0;


c01 CURSOR FOR
SELECT enc.id_encounter nr_encounter_varchar,
	pat.patient_id id_patient,
	pfcs_get_human_name(pat.nr_sequencia, PFCS_PCK_CONSTANTS.DS_PATIENT) nm_patient,
	PFCS_GET_PATIENT_GENDER(pat.gender) gender,
	pat.birthdate,
	to_char(round(months_between(coalesce(pat.deceased_date, clock_timestamp()), pat.birthdate))) qt_patient_age,
	pfcs_get_human_name(pfcs_get_practitioner_seq(enc.nr_sequencia, PFCS_PCK_CONSTANTS.CD_ATTENDING_PHYSICIAN), PFCS_PCK_CONSTANTS.DS_PRACTITIONER) nm_practioner,
	enc.period_start,
	((clock_timestamp() - coalesce(psr.dt_authored_on, psr.dt_atualizacao)) * 24 * 60 ) total_time,
	pfcs_get_patient_diagnosis(enc.nr_sequencia) diagnosis,
	pfcs_get_code_status(pat.nr_sequencia, enc.nr_sequencia, PFCS_PCK_CONSTANTS.IE_YES_BR) code_status,
	coalesce(pfcs_get_checklist(enc.nr_sequencia, pat.nr_sequencia, PFCS_PCK_CONSTANTS.CD_MPL),null) ds_care_status,
	coalesce(pfcs_get_checklist(enc.nr_sequencia, pat.nr_sequencia, PFCS_PCK_CONSTANTS.CD_TOOLTIP),null) ds_checklist,
	pfcs_get_lace_plus(enc.nr_sequencia, enc.nr_seq_organization) readmission_risk,
	pfcs_get_edi_score(enc.nr_sequencia) nr_edi_score,
	pfcs_get_frequent_flyer(enc.nr_sequencia) flag_recur_pat,
	pfcs_get_recurring_patient(pat.nr_sequencia) ds_recur_pat,
	PFCS_GET_SPECIAL_REQUESTS(null, req_uni.nr_seq_location,PFCS_PCK_CONSTANTS.IE_SPECIAL_REQ_LOCATION) bedflags,
	PFCS_GET_SPECIAL_REQUESTS(enc.nr_sequencia, req_uni.nr_seq_location,PFCS_PCK_CONSTANTS.IE_SPECIAL_REQ_ENCOUNTER) special_request,
	req_sec.ds_setor_atendimento ds_department,
	substr(obter_valor_dominio(PFCS_PCK_CONSTANTS.CD_DOMAIN_BED_STATUS, req_uni.ie_status_unidade), 1, 255) ds_status,
	req_uni.ie_status_unidade cd_status,
	coalesce(psr.dt_authored_on, psr.dt_atualizacao) dt_request,
	pfcs_pck_utils.get_full_location(req_uni.nr_seq_location) ds_requested_location,
	pfcs_pck_utils.get_full_location(cur_uni.nr_seq_location) ds_current_location,
	req_uni.ie_temporario ie_temporary,
	pfcs_obs_contributor_pck.get_laceplus(enc.nr_sequencia) ds_readm_risk_contrb,
	pfcs_obs_contributor_pck.get_freqflyer_visits(enc.nr_sequencia) ds_recur_pat_adm_data,
	pfcs_obs_contributor_pck.get_freqflyer_comorbidities(enc.nr_sequencia) ds_recur_pat_comorbd,
	pfcs_obs_contributor_pck.get_freqflyer_visit_reason(enc.nr_sequencia) ds_recur_pat_reasons,
	pfcs_obs_contributor_pck.get_edi_vital_warnings(enc.nr_sequencia) ds_edi_vitals_warn,
	pfcs_obs_contributor_pck.get_edi_contributors(enc.nr_sequencia) ds_edi_contrb
from pfcs_encounter enc,
	pfcs_service_request psr,
	pfcs_patient pat,
	unidade_atendimento req_uni,
	setor_atendimento req_sec,
	unidade_atendimento cur_uni,
	setor_atendimento cur_sec
where enc.nr_sequencia = psr.nr_seq_encounter
	and enc.nr_seq_patient = pat.nr_sequencia
	and psr.nr_seq_location = req_uni.nr_seq_location
	and req_uni.cd_setor_atendimento = req_sec.cd_setor_atendimento
	and cur_uni.nr_seq_location = coalesce(enc.nr_seq_location,pfcs_get_pat_location(pat.nr_sequencia, enc.nr_sequencia))
	and cur_uni.cd_setor_atendimento = cur_sec.cd_setor_atendimento
	and upper(psr.cd_service) = PFCS_PCK_CONSTANTS.CD_TRANSFER
	and upper(psr.si_status) = PFCS_PCK_CONSTANTS.SI_STATUS_ACTIVE
	and upper(psr.si_intent) = PFCS_PCK_CONSTANTS.SI_INTENT_PLAN
	and (cur_sec.cd_classif_setor = PFCS_PCK_CONSTANTS.CD_ED
		or psr.ds_service = PFCS_PCK_CONSTANTS.DS_ADMIT_INPATIENT)
	and pat.ie_active = TO_CHAR(PFCS_PCK_CONSTANTS.IE_TRUE)
	and (enc.period_start IS NOT NULL AND enc.period_start::text <> '')
	and coalesce(enc.period_end::text, '') = ''
	and req_sec.ie_situacao = PFCS_PCK_CONSTANTS.IE_ACTIVE
	and psr.nr_seq_location <> cur_uni.nr_seq_location
	and req_sec.cd_estabelecimento_base = cd_estabelecimento_p;


BEGIN
FOR c01_w IN c01 LOOP

	SELECT coalesce(max(qt_time), 120) --default value
	INTO STRICT qt_time_w
	FROM pfcs_rule_boarders LIMIT 1;

	if (c01_w.total_time > qt_time_w)then
		qt_boarders_admits_w := qt_boarders_admits_w + 1;
		qt_avg_time_w := qt_avg_time_w + c01_w.total_time;
		ie_boarder_w := PFCS_PCK_CONSTANTS.IE_YES;
	else
		ie_boarder_w := PFCS_PCK_CONSTANTS.IE_NO;
	END IF;

    SELECT nextval('pfcs_panel_detail_seq')
    INTO STRICT pfcs_panel_detail_seq_w
;

			IF (ie_boarder_w = PFCS_PCK_CONSTANTS.IE_YES) THEN

			INSERT INTO pfcs_panel_detail(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				ie_situation,
				nr_seq_indicator,
				nr_seq_operational_level
			) VALUES ( 
				pfcs_panel_detail_seq_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				PFCS_PCK_CONSTANTS.IE_TEMPORARY,
				nr_seq_indicator_w,
				cd_estabelecimento_p
			);

			INSERT INTO pfcs_detail_bed(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_detail,
				ds_location,
				ds_department,
				ds_status,
				cd_status,
				ie_temporary,
				ds_special_request
			) VALUES (
				nextval('pfcs_detail_bed_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				pfcs_panel_detail_seq_w,
				c01_w.ds_requested_location,
				c01_w.ds_department,
				c01_w.ds_status,
				c01_w.cd_status,
				c01_w.ie_temporary,
				c01_w.bedflags);

			INSERT INTO pfcs_detail_patient(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_detail,
				nr_encounter_varchar,
				dt_entrance,
				id_patient,
				nm_patient,
				ds_gender,
				dt_birthdate,
				ds_age_range,
				ds_symptoms,
				ds_dnr_status,
				qt_time_total_pa,
				ds_special_request,
				ds_physician,
				ds_care_status,
				ds_checklist,
				ds_readmission_risk,
				qt_edi_score,
				ie_freq_flyer,
				ds_recurring_patient,
				ds_readm_risk_contrb,
				ds_rec_pat_adm_data,
				ds_rec_pat_comorbd,
				ds_rec_pat_reasons,
				ds_edi_vitals_warn,
				ds_edi_contrb,
				ds_current_location
			)
			VALUES (
				nextval('pfcs_detail_patient_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				pfcs_panel_detail_seq_w,
				c01_w.nr_encounter_varchar,
				c01_w.period_start,		
				c01_w.id_patient,
				c01_w.nm_patient,
				c01_w.gender,
				c01_w.birthdate,
				c01_w.qt_patient_age,	
				c01_w.diagnosis,
				c01_w.code_status,
				c01_w.total_time,
				c01_w.special_request,
				c01_w.nm_practioner,		
				c01_w.ds_care_status,
				c01_w.ds_checklist,
				c01_w.readmission_risk,
				c01_w.nr_edi_score,
				c01_w.flag_recur_pat,
				c01_w.ds_recur_pat,
				c01_w.ds_readm_risk_contrb,
				c01_w.ds_recur_pat_adm_data,
				c01_w.ds_recur_pat_comorbd,
				c01_w.ds_recur_pat_reasons,
				c01_w.ds_edi_vitals_warn,
				c01_w.ds_edi_contrb,
				c01_w.ds_current_location
			);
	end if;
END LOOP;

 := pfcs_pck.pfcs_generate_results(
    vl_indicator_p              => qt_boarders_admits_w, vl_indicator_aux_p          => qt_avg_time_w, nr_seq_indicator_p          => nr_seq_indicator_w, nr_seq_operational_level_p  => cd_estabelecimento_p, nm_usuario_p                => nm_usuario_p, nr_seq_panel_p              => pfcs_panel_seq_w);

CALL pfcs_pck.pfcs_update_detail(
    nr_seq_indicator_p          => nr_seq_indicator_w,
    nr_seq_panel_p              => pfcs_panel_seq_w,
    nr_seq_operational_level_p  => cd_estabelecimento_p,
    nm_usuario_p                => nm_usuario_p);

CALL pfcs_pck.pfcs_activate_records(
    nr_seq_indicator_p          => nr_seq_indicator_w,
    nr_seq_operational_level_p  => cd_estabelecimento_p,
    nm_usuario_p                => nm_usuario_p);
----------------------------------------------------------------------------------
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_pa_calc_boarders ( cd_estabelecimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

