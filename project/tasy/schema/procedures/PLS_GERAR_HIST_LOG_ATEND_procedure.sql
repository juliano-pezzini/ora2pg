-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_hist_log_atend ( nr_seq_atendimento_p bigint, ie_origem_historico_p text, cd_funcao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_tipo_historico_w		bigint;
ds_historico_w			varchar(4000);
dt_historico_w			timestamp;
nm_evento_w			varchar(255);
nr_seq_evento_w			bigint;
ds_funcao_w			varchar(80);
ie_gerar_hist_w			varchar(2);
qt_atend_w			smallint;


BEGIN

if (ie_origem_historico_p = 1) then
	select	dt_inicio
	into STRICT	dt_historico_w
	from	pls_atendimento
	where	nr_sequencia = nr_seq_atendimento_p;
else
	dt_historico_w := clock_timestamp();
end if;

if (pls_obter_se_controle_estab('GA') = 'S') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_tipo_historico_w
	from	pls_tipo_historico_atend
	where	ie_gerado_sistema	= 'S'
	and	ie_situacao		= 'A'
	and (cd_estabelecimento 	= cd_estabelecimento_p );
else
	select	max(nr_sequencia)
	into STRICT	nr_seq_tipo_historico_w
	from	pls_tipo_historico_atend
	where	ie_gerado_sistema	= 'S'
	and	ie_situacao		= 'A';
end if;

if (coalesce(nr_seq_tipo_historico_w,0)	= 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(261833,'');
	--Histórico gerado pelo sistema não informado, na função OPS - Gestão de atendimento, pasta Cadastros/ Tipos de  histórico!
end if;

select	count(*)
into STRICT	qt_atend_w
from	pls_atendimento
where	coalesce(dt_fim_atendimento::text, '') = ''
and	nr_sequencia = nr_seq_atendimento_p;

if (qt_atend_w > 0) then
	select	ds_valor_dominio
	into STRICT	ds_historico_w
	from	valor_dominio
	where	cd_dominio	= 3394
	and	vl_dominio	= ie_origem_historico_p
	and	ie_situacao	= 'A';

	begin
		select	ds_funcao
		into STRICT	ds_funcao_w
		from	funcao
		where	cd_funcao = cd_funcao_p
		and	cd_funcao <> 0;
	exception
	when others then
		ds_funcao_w := '';
	end;

	if (ie_origem_historico_p	= '2') then
		select	nr_seq_evento,
			dt_inicio
		into STRICT	nr_seq_evento_w,
			dt_historico_w
		from	pls_atendimento_evento
		where	nr_sequencia = (SELECT	max(nr_sequencia)
					from	pls_atendimento_evento
					where	nr_seq_atendimento	= nr_seq_atendimento_p);

		select	nm_evento
		into STRICT	nm_evento_w
		from	pls_evento_ocorrencia
		where   nr_sequencia = nr_seq_evento_w;

		ds_historico_w	:= ds_historico_w||': '||nm_evento_w;

	elsif (ie_origem_historico_p	= '9') then
		ie_gerar_hist_w := obter_valor_param_usuario(1263, 18, Obter_Perfil_Ativo, nm_usuario_p, 0);

		if (coalesce(ds_funcao_w,'x') <> 'x') and (ie_gerar_hist_w = 'S')  then
			ds_historico_w	:= ds_historico_w||' para a função '||ds_funcao_w;
		end if;
	elsif (coalesce(ds_funcao_w,'x') <> 'x') then
		ds_historico_w	:= ds_historico_w||', acessando a função '|| ds_funcao_w;
	end if;

	insert	into	pls_atendimento_historico( nr_sequencia, nr_seq_atendimento, ds_historico_long,
		 dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
		 nm_usuario_nrec, nr_seq_tipo_historico, dt_historico,
		 ie_origem_historico, ie_gerado_sistema)
	values (nextval('pls_atendimento_historico_seq'), nr_seq_atendimento_p, ds_historico_w,
		 clock_timestamp(), nm_usuario_p, clock_timestamp(),
		 nm_usuario_p, nr_seq_tipo_historico_w, dt_historico_w,
		 ie_origem_historico_p, 'S');

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_hist_log_atend ( nr_seq_atendimento_p bigint, ie_origem_historico_p text, cd_funcao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

