-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_selecionar_prestadores_rps ( nr_seq_lote_p bigint, nr_seq_solicitacao_p bigint, nr_seq_prestador_p bigint, dt_exclusao_ini_p timestamp, dt_exclusao_fim_p timestamp, dt_contrato_ini_p timestamp, dt_contrato_fim_p timestamp, dt_servico_ini_p timestamp, dt_servico_fim_p timestamp, nr_seq_tipo_prestador_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ie_plano_red_atend_p text) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ X ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
------------------------------------------------------------------------------------------------------------------- 
Referências: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
ie_gera_w			varchar(255)	:= 'N';
ds_razao_social_w		varchar(60);
cd_plano_w			varchar(10);
cd_cgc_w			varchar(14);
cd_cpf_cnpj_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
nr_registro_plano_w		varchar(20);
cd_cnes_w			varchar(7);
cd_municipio_ibge_w		varchar(6);
ie_disp_serv_prest_w		varchar(3);
ie_tipo_lote_w			varchar(3);
sg_uf_w				varchar(2);
ie_regulamentacao_w		varchar(2);
cd_classificacao_w		varchar(1);
ie_relacao_operadora_w		varchar(1);
ie_tipo_contratualizacao_w	varchar(1);
ie_tipo_relacao_w		varchar(1);
ie_disponibilidade_serv_w	varchar(1);
ie_urgencia_emergencia_w	varchar(1);
ie_plano_w			varchar(1);
ie_ptu_a400_w			varchar(1);
ie_ptu_a400_lote_w		varchar(1);
nr_seq_prestador_w		bigint;
nr_seq_rps_prest_w		bigint;
nr_seq_classificacao_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_tipo_prestador_w		bigint;
qt_registro_w			bigint;
qt_vida_ativa_w			bigint;
dt_exclusao_w			timestamp;
dt_inicio_servico_w		timestamp;
dt_inicio_contrato_w		timestamp;
dt_fim_contrato_w		timestamp;
dt_lote_w			timestamp;
dt_alt_inicial_w		timestamp;
dt_alt_final_w			timestamp;
cd_cgc_cpf_old_w		pls_alt_prest_rps.cd_cgc_cpf_old%type;
cd_municipio_ibge_old_w		pls_alt_prest_rps.cd_municipio_ibge_old%type;
cd_cnes_old_w			pls_alt_prest_rps.cd_cnes_old%type;
ie_plano_sem_vida_w		varchar(1);

C01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		trunc(a.dt_exclusao, 'dd') dt_exclusao, 
		trunc(a.dt_inicio_servico, 'dd') dt_inicio_servico, 
		trunc(a.dt_inicio_contrato, 'dd') dt_inicio_contrato, 
		trunc(a.dt_fim_contrato, 'dd') dt_fim_contrato, 
		a.ie_tipo_classif_ptu, 
		a.cd_cgc, 
		a.cd_pessoa_fisica, 
		a.sg_uf_sip, 
		a.ie_tipo_relacao, 
		a.ie_disponibilidade_serv, 
		a.ie_urgencia_emergencia, 
		a.ie_ptu_a400, 
		a.nr_seq_tipo_prestador 
	from	pls_prestador	a 
	where	a.ie_tipo_relacao <> 'F' 
	and	a.cd_estabelecimento	= cd_estabelecimento_p 
	and	coalesce(a.ie_publica_ans, 'N') = 'S' 
	and ('RPE' = upper(ie_tipo_lote_w) or a.ie_situacao <> 'I')-- aldellandrea linha acrescentada devido os 689595; 
	and	((a.nr_sequencia = nr_seq_prestador_p) or (coalesce(nr_seq_prestador_p::text, '') = '')); --aldellandra linha acrescentada devido os 755866 
C02 CURSOR FOR 
	SELECT	c.nr_protocolo_ans, 
		substr(c.cd_scpa, 1, 10), 
		c.nr_sequencia, 
		c.ie_regulamentacao 
	from	pls_plano_rede_atend	b, 
		pls_plano		c, 
		pls_prestador_plano	d 
	where	c.nr_sequencia		= b.nr_seq_plano	 
	and	c.nr_sequencia		= d.nr_seq_plano 
	and	d.nr_seq_prestador	= nr_seq_prestador_w 
	and (dt_lote_w between coalesce(d.dt_inicio_vigencia, dt_lote_w) and coalesce(d.dt_fim_vigencia, dt_lote_w)) 
	and	substr(pls_obter_se_prest_rede_atend(nr_seq_prestador_w,b.nr_seq_rede),1,255) = 'S' 
	group by c.nr_protocolo_ans, 
		substr(c.cd_scpa, 1, 10), 
		c.nr_sequencia, 
		c.ie_regulamentacao;
		
C03 CURSOR(nr_seq_prestador_pc		pls_prestador.nr_sequencia%type) FOR 
	SELECT	c.nr_protocolo_ans, 
		substr(c.cd_scpa, 1, 10) cd_scpa, 
		c.nr_sequencia nr_seq_plano, 
		c.ie_regulamentacao 
	from	pls_plano_rede_atend	b, 
		pls_plano		c 
	where	b.nr_seq_plano	= c.nr_sequencia 
	and (dt_lote_w between coalesce(b.dt_inicio_vigencia, dt_lote_w) and coalesce(b.dt_fim_vigencia, dt_lote_w)) 
	and	exists (SELECT	1 
			from	pls_rede_atendimento		a 
			where	a.nr_sequencia	= b.nr_seq_rede 
			and	pls_obter_se_prest_rede_atend(nr_seq_prestador_pc, a.nr_sequencia) = 'S') 
	group by c.nr_protocolo_ans, 
		c.cd_scpa, 
		c.nr_sequencia, 
		c.ie_regulamentacao;
BEGIN
select	max(a.ie_tipo_lote), 
	coalesce(max(a.ie_ptu_a400), 'N'), 
	max(a.dt_lote) 
into STRICT	ie_tipo_lote_w, 
	ie_ptu_a400_lote_w, 
	dt_lote_w 
from	pls_lote_rps	a 
where	a.nr_sequencia	= nr_seq_lote_p;
 
open C01;
loop 
fetch C01 into 
	nr_seq_prestador_w, 
	dt_exclusao_w, 
	dt_inicio_servico_w, 
	dt_inicio_contrato_w, 
	dt_fim_contrato_w, 
	cd_classificacao_w, 
	cd_cgc_w, 
	cd_pessoa_fisica_w, 
	sg_uf_w, 
	ie_tipo_relacao_w, 
	ie_disp_serv_prest_w, 
	ie_urgencia_emergencia_w, 
	ie_ptu_a400_w, 
	nr_seq_tipo_prestador_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	ie_gera_w	:= 'S';
	if (coalesce(nr_seq_prestador_p::text, '') = '')then --aldellandra if criado para os 755866 apenas o este if os demais já faziam parte da rotina(caso tenha nr_seq_prestador deve cadastrar) 
		if (ie_ptu_a400_lote_w = 'S') and (ie_ptu_a400_lote_w <> ie_ptu_a400_w) then 
			ie_gera_w	:= 'N';
			goto final;
		end if;
	 
		if (nr_seq_prestador_p IS NOT NULL AND nr_seq_prestador_p::text <> '') and (nr_seq_prestador_w <> nr_seq_prestador_p) then 
			ie_gera_w	:= 'N';
			goto final;
		end if;
		 
		if (nr_seq_tipo_prestador_p IS NOT NULL AND nr_seq_tipo_prestador_p::text <> '') and (nr_seq_tipo_prestador_p <> coalesce(nr_seq_tipo_prestador_w, nr_seq_tipo_prestador_p)) then 
			ie_gera_w	:= 'N';
			goto final;
		end if;
		 
		if	((dt_exclusao_ini_p IS NOT NULL AND dt_exclusao_ini_p::text <> '') or (dt_exclusao_fim_p IS NOT NULL AND dt_exclusao_fim_p::text <> '')) and (not(dt_exclusao_w between coalesce(dt_exclusao_ini_p, dt_exclusao_w) and coalesce(dt_exclusao_fim_p, dt_exclusao_w)) or (coalesce(dt_exclusao_w::text, '') = '')) then		 
			ie_gera_w	:= 'N';
			goto final;
		end if;
	 
		if	((dt_servico_ini_p IS NOT NULL AND dt_servico_ini_p::text <> '') or (dt_servico_fim_p IS NOT NULL AND dt_servico_fim_p::text <> '')) and (not(dt_inicio_servico_w between coalesce(dt_servico_ini_p, dt_inicio_servico_w) and coalesce(dt_servico_fim_p, dt_inicio_servico_w)) or 
			coalesce(dt_inicio_servico_w::text, '') = '') then 
			ie_gera_w	:= 'N';
			goto final;
		end if;
	 
		if (dt_contrato_ini_p IS NOT NULL AND dt_contrato_ini_p::text <> '') then 
			if (dt_inicio_contrato_w IS NOT NULL AND dt_inicio_contrato_w::text <> '') and (not(dt_inicio_contrato_w between dt_contrato_ini_p and coalesce(dt_contrato_fim_p, dt_inicio_contrato_w))) then 
				ie_gera_w	:= 'N';
				goto final;
			elsif (coalesce(dt_inicio_contrato_w::text, '') = '') then 
				ie_gera_w	:= 'N';
				goto final;	
			end if;
		end if;
		 
		if (dt_contrato_fim_p IS NOT NULL AND dt_contrato_fim_p::text <> '') then 
			if (dt_fim_contrato_w IS NOT NULL AND dt_fim_contrato_w::text <> '') and (not(dt_fim_contrato_w between coalesce(dt_contrato_ini_p, dt_fim_contrato_w) and dt_contrato_fim_p)) then 
				ie_gera_w	:= 'N';
				goto final;
			end if;
			if (dt_contrato_fim_p < dt_inicio_contrato_w) then 
				ie_gera_w	:= 'N';
				goto final;
			end if;
		end if;
	end if; -- fim alteração 755866 
	if (ie_gera_w = 'S') then
		select	nextval('pls_rps_prestador_seq') 
		into STRICT	nr_seq_rps_prest_w 
		;
 
		if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then 
			cd_cpf_cnpj_w		:= elimina_caractere_especial(cd_cgc_w);
			ds_razao_social_w	:= substr(elimina_caractere_especial(obter_dados_pf_pj(null, cd_cgc_w, 'N')), 1, 60);
		else 
			cd_cpf_cnpj_w		:= substr(elimina_caractere_especial(obter_dados_pf(cd_pessoa_fisica_w, 'CPF')), 1, 11);
			ds_razao_social_w	:= substr(elimina_caractere_especial(obter_nome_pf(cd_pessoa_fisica_w)), 1, 60);
		end if;
 
		if (ie_tipo_relacao_w not in ('P','C')) then 
			if (ie_tipo_relacao_w <> 'I') then 
				ie_tipo_contratualizacao_w	:= 'D';
			else 
				ie_tipo_contratualizacao_w	:= 'I';
			end if;
			 
			ie_relacao_operadora_w	:= 'C';
		else 
			ie_tipo_contratualizacao_w	:= null;
			ie_relacao_operadora_w		:= 'P';
		end if;
 
		select	CASE WHEN ie_disp_serv_prest_w='1' THEN  'P'  ELSE 'T' END  
		into STRICT	ie_disponibilidade_serv_w 
		;
		 
		 
 
		begin 
		cd_cnes_w		:= lpad(substr(pls_obter_cnes_prestador(nr_seq_prestador_w), 1, 7),7,'0');
		exception 
		when others then 
			cd_cnes_w := null;
		end;
 
		cd_municipio_ibge_w	:= lpad(substr(elimina_caractere_especial(pls_obter_dados_prest_end(	nr_seq_prestador_w, 
														null, 
														null, 
														'MI')), 1, 6), 6, '0');
 
		begin 
		select	dt_alt_inicial, 
			dt_alt_final 
		into STRICT	dt_alt_inicial_w, 
			dt_alt_final_w 
		from	pls_lote_rps 
		where	nr_sequencia	= nr_seq_lote_p;
		exception 
		when others then 
			dt_alt_inicial_w	:= null;
			dt_alt_final_w		:= null;
		end;
 
		begin 
		select	substr(a.cd_cgc_cpf_old, 1, 14), 
			substr(a.cd_cnes_old, 1, 7), 
			substr(a.cd_municipio_ibge_old, 1, 6) 
		into STRICT	cd_cgc_cpf_old_w, 
			cd_cnes_old_w, 
			cd_municipio_ibge_old_w 
		from	pls_alt_prest_rps	a 
		where	a.nr_sequencia		= (	SELECT	min(d.nr_sequencia) 
							from	pls_alt_prest_rps	d, 
								pls_rps_prestador	c 
							where	c.nr_seq_prestador	= d.nr_seq_prestador 
							and	c.nr_seq_prestador	= nr_seq_prestador_p 
							and	d.dt_atualizacao between coalesce(dt_alt_inicial_w, trunc(clock_timestamp(), 'month')) and fim_dia(last_day(coalesce(dt_alt_final_w, clock_timestamp()))) );
		exception 
		when others then 
			cd_cgc_cpf_old_w	:= null;
			cd_cnes_old_w		:= null;
			cd_municipio_ibge_old_w	:= null;
		end;
 
		if (coalesce(cd_cgc_cpf_old_w::text, '') = '') then 
			begin 
			select	CASE WHEN coalesce(a.cd_cgc::text, '') = '' THEN (select	b.NR_CPF 							from	pessoa_fisica b 							where	b.cd_pessoa_fisica = a.cd_pessoa_fisica)  ELSE a.cd_cgc END  
			into STRICT	cd_cgc_cpf_old_w 
			from	pls_prestador a 
			where	a.nr_sequencia = nr_seq_prestador_w;
			exception 
			when others then 
				cd_cgc_cpf_old_w	:= null;
			end;
		end if;
		 
		if (coalesce(cd_cnes_old_w::text, '') = '') then 
			begin 
			select	coalesce(pls_obter_cnes_prestador(a.nr_sequencia), '') 
			into STRICT	cd_cnes_old_w 
			from	pls_prestador a 
			where	a.nr_sequencia = nr_seq_prestador_w;
			exception 
			when others then 
				cd_cnes_old_w		:= '';
			end;
		end if;
		 
		if (coalesce(cd_municipio_ibge_old_w::text, '') = '') then 
			begin 
			cd_municipio_ibge_old_w := lpad(substr(elimina_caractere_especial(pls_obter_dados_prest_end(	nr_seq_prestador_w, null, null,'MI')), 1, 6), 6, '0');
			exception 
			when others then 
				cd_municipio_ibge_old_w	:= null;
			end;
		end if;
 
		insert into pls_rps_prestador(nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			nr_seq_lote, 
			nr_seq_prestador, 
			nr_seq_solicitacao, 
			cd_classificacao, 
			cd_cpf_cnpj, 
			cd_cnes, 
			sg_uf, 
			cd_municipio_ibge, 
			ds_razao_social, 
			ie_relacao_operadora, 
			ie_tipo_contratualizacao, 
			cd_ans_int, 
			dt_contratualizacao, 
			dt_inicio_servico, 
			ie_disponibilidade_serv, 
			ie_urgencia_emergencia, 
			cd_cnes_old, 
			cd_cpf_cnpj_old, 
			cd_municipio_ibge_old) 
		values (nr_seq_rps_prest_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_lote_p, 
			nr_seq_prestador_w, 
			nr_seq_solicitacao_p, 
			cd_classificacao_w, 
			cd_cpf_cnpj_w, 
			cd_cnes_w, 
			sg_uf_w, 
			cd_municipio_ibge_w, 
			ds_razao_social_w, 
			ie_relacao_operadora_w, 
			ie_tipo_contratualizacao_w, 
			null,--cd_ans_int, 
			dt_inicio_contrato_w, 
			dt_inicio_servico_w, 
			ie_disponibilidade_serv_w, 
			ie_urgencia_emergencia_w, 
			cd_cnes_old_w, 
			cd_cgc_cpf_old_w, 
			cd_municipio_ibge_old_w);
 
		if (ie_tipo_lote_w <> 'RPE') then 
			if (ie_plano_red_atend_p = 'N') then 
				open C02;
				loop 
				fetch C02 into 
					nr_registro_plano_w, 
					cd_plano_w, 
					nr_seq_plano_w, 
					ie_regulamentacao_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin 
					qt_registro_w := 0;
					qt_vida_ativa_w := 0;
					 
					if (cd_classificacao_w = '3') and (ie_urgencia_emergencia_w <> 'S') and (ie_tipo_lote_w <> 'RPV')  then 
						cd_plano_w		:= null;
						nr_registro_plano_w	:= null;
					else 
						if (ie_regulamentacao_w = 'R') then 
							nr_registro_plano_w	:= null;
						else 
							cd_plano_w		:= null;
						end if;
					end if;
					 
					select	count(1) 
					into STRICT	qt_vida_ativa_w 
					from	pls_segurado 
					where	nr_seq_plano = nr_seq_plano_w 
					and	(nr_seq_contrato IS NOT NULL AND nr_seq_contrato::text <> '') 
					and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
					and (coalesce(coalesce(dt_rescisao, dt_limite_utilizacao, dt_cancelamento)::text, '') = '' 
					or	coalesce(dt_rescisao, dt_limite_utilizacao, dt_cancelamento) >= clock_timestamp()) 
					and	ie_tipo_segurado in ('B','R');
					 
					select	count(1) 
					into STRICT	qt_registro_w 
					from	pls_rps_prest_plano 
					where	nr_seq_prestador_rps	= nr_seq_rps_prest_w 
					and (nr_registro_plano	= nr_registro_plano_w 
					or	cd_plano		= cd_plano_w);
					 
					ie_plano_sem_vida_w := obter_param_usuario( 1375, 1, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_plano_sem_vida_w);
					 
					if (qt_registro_w = 0) and 
						((qt_vida_ativa_w > 0) or (coalesce(ie_plano_sem_vida_w, 'S') = 'N'))then 
						insert into pls_rps_prest_plano(nr_sequencia, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							nr_seq_prestador_rps, 
							nr_seq_plano, 
							nr_registro_plano, 
							cd_plano) 
						values (nextval('pls_rps_prest_plano_seq'), 
							clock_timestamp(), 
							nm_usuario_p, 
							clock_timestamp(), 
							nm_usuario_p, 
							nr_seq_rps_prest_w, 
							nr_seq_plano_w, 
							nr_registro_plano_w, 
							cd_plano_w);
					end if;
					end;
				end loop;
				close C02;
			else 
				for r_C03_w in C03(nr_seq_prestador_w) loop 
					qt_registro_w := 0;
					qt_vida_ativa_w := 0;
					nr_registro_plano_w := r_C03_w.nr_protocolo_ans;
					cd_plano_w := r_C03_w.cd_scpa;
					 
					if (cd_classificacao_w = '3') and (ie_urgencia_emergencia_w <> 'S') and (ie_tipo_lote_w <> 'RPV')  then 
						cd_plano_w		:= null;
						nr_registro_plano_w	:= null;
					else 
						if (r_C03_w.ie_regulamentacao = 'R') then 
							nr_registro_plano_w	:= null;
						else 
							cd_plano_w		:= null;
						end if;
					end if;
					 
					select	count(1) 
					into STRICT	qt_vida_ativa_w 
					from	pls_segurado 
					where	nr_seq_plano = r_C03_w.nr_seq_plano 
					and	(nr_seq_contrato IS NOT NULL AND nr_seq_contrato::text <> '') 
					and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
					and (coalesce(coalesce(dt_rescisao, dt_limite_utilizacao, dt_cancelamento)::text, '') = '' 
					or	coalesce(dt_rescisao, dt_limite_utilizacao, dt_cancelamento) >= clock_timestamp()) 
					and	ie_tipo_segurado in ('B','R');
					 
					select	count(1) 
					into STRICT	qt_registro_w 
					from	pls_rps_prest_plano 
					where	nr_seq_prestador_rps	= nr_seq_rps_prest_w 
					and (nr_registro_plano	= nr_registro_plano_w 
					or	cd_plano		= cd_plano_w);
					 
					ie_plano_sem_vida_w := obter_param_usuario( 1375, 1, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_plano_sem_vida_w);
					 
					if (qt_registro_w = 0) and 
						((qt_vida_ativa_w > 0) or (coalesce(ie_plano_sem_vida_w, 'S') = 'N'))then 
						insert into pls_rps_prest_plano(nr_sequencia, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							nr_seq_prestador_rps, 
							nr_seq_plano, 
							nr_registro_plano, 
							cd_plano) 
						values (nextval('pls_rps_prest_plano_seq'), 
							clock_timestamp(), 
							nm_usuario_p, 
							clock_timestamp(), 
							nm_usuario_p, 
							nr_seq_rps_prest_w, 
							r_C03_w.nr_seq_plano, 
							nr_registro_plano_w, 
							cd_plano_w);
					end if;
				end loop;
			end if;
		end if;
	end if;
 
	<<final>> 
	ie_gera_w	:= 'S';
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_selecionar_prestadores_rps ( nr_seq_lote_p bigint, nr_seq_solicitacao_p bigint, nr_seq_prestador_p bigint, dt_exclusao_ini_p timestamp, dt_exclusao_fim_p timestamp, dt_contrato_ini_p timestamp, dt_contrato_fim_p timestamp, dt_servico_ini_p timestamp, dt_servico_fim_p timestamp, nr_seq_tipo_prestador_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ie_plano_red_atend_p text) FROM PUBLIC;

