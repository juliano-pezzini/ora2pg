-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE import_export_img_odonto (nr_sequencia_p bigint, ie_tipo_p text, -- I - Import / E - Export
 nr_seq_new_rec_p bigint default null) AS $body$
DECLARE


    c01 CURSOR FOR
        SELECT nr_sequencia,
               nextval('area_imagem_philips_seq') nova_sequencia,
               ds_titulo,
               nr_seq_img,
               ds_ponto,
               dt_atualizacao,
               nm_usuario
          from area_imagem
         where nr_seq_img = nr_sequencia_p;

    c02 CURSOR FOR
        SELECT nr_sequencia,
               nextval('area_imagem_seq') nova_sequencia,
               ds_titulo,
               nr_seq_img,
               ds_ponto,
               dt_atualizacao,
               nm_usuario
          from area_imagem_philips
         where nr_seq_img = nr_sequencia_p;

    ie_exists_w varchar(1);

    c01_w c01%rowtype;
    c02_w c02%rowtype;

    new_imagem_seq_w imagem_banco_philips.nr_sequencia%type;
    new_area_seq_w   area_imagem.nr_sequencia%type;

    file_size_w bigint;

    file_blob_w       bytea;
    file_convertido_w bytea;
    file_aux          bytea;


BEGIN

    if (ie_tipo_p = 'I') then

        select coalesce(max('S'), 'N') into STRICT ie_exists_w from imagem_banco_philips where nr_sequencia = nr_sequencia_p;

        if (ie_exists_w = 'S' and (nr_seq_new_rec_p IS NOT NULL AND nr_seq_new_rec_p::text <> '')) then
        
            new_imagem_seq_w := nr_seq_new_rec_p;

            open c02;
            loop
                fetch c02
                    into c02_w;
                EXIT WHEN NOT FOUND; /* apply on c02 */
                begin

                    insert into area_imagem(nr_sequencia, ds_titulo, nr_seq_img, ds_ponto, dt_atualizacao, nm_usuario)
                    values (c02_w.nova_sequencia,
                         c02_w.ds_titulo,
                         new_imagem_seq_w,
                         c02_w.ds_ponto,
                         c02_w.dt_atualizacao,
                         c02_w.nm_usuario);

                    insert into area_imagem_item(nr_sequencia,
                         dt_atualizacao,
                         nm_usuario,
                         dt_atualizacao_nrec,
                         nm_usuario_nrec,
                         nr_seq_localizacao,
                         ie_tipo_item,
                         nr_seq_area,
                         nr_seq_local,
                         nr_seq_dente,
                         nr_seq_sextante,
                         nr_seq_arcada,
                         nr_seq_tratamento,
                         nr_seq_face,
                         ie_raiz)
                        SELECT nextval('area_imagem_item_seq'),
                               dt_atualizacao,
                               nm_usuario,
                               dt_atualizacao_nrec,
                               nm_usuario_nrec,
                               nr_seq_localizacao,
                               ie_tipo_item,
                               c02_w.nova_sequencia,
                               nr_seq_local,
                               nr_seq_dente,
                               nr_seq_sextante,
                               nr_seq_arcada,
                               nr_seq_tratamento,
                               nr_seq_face,
                               ie_raiz
                          from area_imagem_item_philips
                         where nr_seq_area = c02_w.nr_sequencia;

                end;
            end loop;
            close c02;

            commit;

        end if;

    elsif (ie_tipo_p = 'E') then
    
        select coalesce(max('S'), 'N') into STRICT ie_exists_w from imagem_banco where nr_sequencia = nr_sequencia_p;

        if (ie_exists_w = 'S') then
        
            select nextval('imagem_banco_philips_seq') into STRICT new_imagem_seq_w;

            insert into imagem_banco_philips(nr_sequencia, nm_usuario, ie_situacao, ie_classificacao, dt_atualizacao, ds_titulo, im_banco_blob)
                SELECT new_imagem_seq_w,
                       nm_usuario,
                       ie_situacao,
                       ie_classificacao,
                       dt_atualizacao,
                       ds_titulo,
                       to_lob(im_banco)
                  from imagem_banco
                 where nr_sequencia = nr_sequencia_p;

            open c01;
            loop
                fetch c01
                    into c01_w;
                EXIT WHEN NOT FOUND; /* apply on c01 */
                begin

                    insert into area_imagem_philips(nr_sequencia, ds_titulo, nr_seq_img, ds_ponto, dt_atualizacao, nm_usuario)
                    values (c01_w.nova_sequencia,
                         c01_w.ds_titulo,
                         new_imagem_seq_w,
                         c01_w.ds_ponto,
                         c01_w.dt_atualizacao,
                         c01_w.nm_usuario);

                    insert into area_imagem_item_philips(nr_sequencia,
                         dt_atualizacao,
                         nm_usuario,
                         dt_atualizacao_nrec,
                         nm_usuario_nrec,
                         nr_seq_localizacao,
                         ie_tipo_item,
                         nr_seq_area,
                         nr_seq_local,
                         nr_seq_dente,
                         nr_seq_sextante,
                         nr_seq_arcada,
                         nr_seq_tratamento,
                         nr_seq_face,
                         ie_raiz)
                        SELECT nextval('area_imagem_item_philips_seq'),
                               dt_atualizacao,
                               nm_usuario,
                               dt_atualizacao_nrec,
                               nm_usuario_nrec,
                               nr_seq_localizacao,
                               ie_tipo_item,
                               c01_w.nova_sequencia,
                               nr_seq_local,
                               nr_seq_dente,
                               nr_seq_sextante,
                               nr_seq_arcada,
                               nr_seq_tratamento,
                               nr_seq_face,
                               ie_raiz
                          from area_imagem_item
                         where nr_seq_area = c01_w.nr_sequencia;

                end;
            end loop;
            close c01;

            commit;

        end if;

    end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE import_export_img_odonto (nr_sequencia_p bigint, ie_tipo_p text, nr_seq_new_rec_p bigint default null) FROM PUBLIC;

