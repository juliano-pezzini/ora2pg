-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_convenio_agendamento (cd_pessoa_fisica_p text, cd_tipo_agenda_p bigint, nr_seq_agenda_p bigint, ie_forma_convenio_p text, cd_convenio_p INOUT bigint, cd_categoria_p INOUT text, cd_usuario_convenio_p INOUT text, dt_validade_carteira_p INOUT timestamp, nr_doc_convenio_p INOUT text, cd_tipo_acomodacao_p INOUT bigint, cd_plano_p INOUT text, nm_usuario_p text, ds_observacao_p INOUT text) AS $body$
DECLARE

 
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_usuario_convenio_w	varchar(30);
dt_validade_w		timestamp;
nr_doc_convenio_w	varchar(20);
cd_tipo_acomodacao_w	smallint;
cd_plano_w		varchar(10);
ds_observacao_w		varchar(4000);
ie_convenio_w		varchar(1);
ie_categoria_w		varchar(1);
ie_carteirinha_w		varchar(1);
ie_dt_validade_w		varchar(1);
ie_doc_convenio_w	varchar(1);
ie_tipo_acomodacao_w	varchar(1);
ie_plano_w		varchar(1);


BEGIN 
if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and (cd_tipo_agenda_p IS NOT NULL AND cd_tipo_agenda_p::text <> '') and (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') and (ie_forma_convenio_p IS NOT NULL AND ie_forma_convenio_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
	if (ie_forma_convenio_p = 'AT') then /* convenio ultimo atendimento */
 
		SELECT * FROM define_convenio_atend_agenda(cd_pessoa_fisica_p, nm_usuario_p, cd_convenio_w, cd_categoria_w, dt_validade_w, cd_usuario_convenio_w, nr_doc_convenio_w, cd_tipo_acomodacao_w, cd_plano_w) INTO STRICT cd_convenio_w, cd_categoria_w, dt_validade_w, cd_usuario_convenio_w, nr_doc_convenio_w, cd_tipo_acomodacao_w, cd_plano_w;
	elsif (ie_forma_convenio_p = 'AG') or (ie_forma_convenio_p = 'A') then /* convenio ultimo agendamento */
 
		if (cd_tipo_agenda_p in (1,2)) then 
			SELECT * FROM obter_convenio_ultima_agenda(cd_pessoa_fisica_p, nr_seq_agenda_p, ie_forma_convenio_p, cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w, dt_validade_w, nr_doc_convenio_w, cd_plano_w, cd_tipo_acomodacao_w, ds_observacao_w) INTO STRICT cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w, dt_validade_w, nr_doc_convenio_w, cd_plano_w, cd_tipo_acomodacao_w, ds_observacao_w;
		elsif (cd_tipo_agenda_p in (3,4)) then 
			SELECT * FROM obter_convenio_ultima_agecons(cd_pessoa_fisica_p, nr_seq_agenda_p, ie_forma_convenio_p, cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w, dt_validade_w, nr_doc_convenio_w, cd_tipo_acomodacao_w, cd_plano_w) INTO STRICT cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w, dt_validade_w, nr_doc_convenio_w, cd_tipo_acomodacao_w, cd_plano_w;
		end if;
	elsif (ie_forma_convenio_p = 'AE') then /* convênio do último agendamento executado da agenda */
 
		if (cd_tipo_agenda_p in (1,2)) then 
			SELECT * FROM obter_conv_ultima_agenda_exec(cd_pessoa_fisica_p, nr_seq_agenda_p, cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w, dt_validade_w, nr_doc_convenio_w, cd_tipo_acomodacao_w, cd_plano_w, ds_observacao_w) INTO STRICT cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w, dt_validade_w, nr_doc_convenio_w, cd_tipo_acomodacao_w, cd_plano_w, ds_observacao_w;
		elsif (cd_tipo_agenda_p in (3,4)) then 
			SELECT * FROM obter_conv_ultima_agecons_exec(cd_pessoa_fisica_p, nr_seq_agenda_p, cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w, dt_validade_w, nr_doc_convenio_w, cd_tipo_acomodacao_w, cd_plano_w) INTO STRICT cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w, dt_validade_w, nr_doc_convenio_w, cd_tipo_acomodacao_w, cd_plano_w;
		end if;
	elsif (ie_forma_convenio_p = 'AI') then /* convênio do último agendamento(independente do status) */
 
			SELECT * FROM obter_conv_todas_agendas(cd_pessoa_fisica_p, cd_tipo_agenda_p, nr_seq_agenda_p, ie_forma_convenio_p, cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w, dt_validade_w, nr_doc_convenio_w, cd_plano_w, cd_tipo_acomodacao_w, ds_observacao_w) INTO STRICT cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w, dt_validade_w, nr_doc_convenio_w, cd_plano_w, cd_tipo_acomodacao_w, ds_observacao_w;
	end if;
end if;
 
select	coalesce(max(ie_convenio),'S'), 
	coalesce(max(ie_categoria),'S'), 
	coalesce(max(ie_carteirinha),'S'), 
	coalesce(max(ie_dt_validade),'S'), 
	coalesce(max(ie_doc_convenio),'S'), 
	coalesce(max(ie_tipo_acomodacao),'S'), 
	coalesce(max(ie_plano),'S') 
into STRICT	ie_convenio_w, 
	ie_categoria_w, 
	ie_carteirinha_w, 
	ie_dt_validade_w, 
	ie_doc_convenio_w, 
	ie_tipo_acomodacao_w, 
	ie_plano_w 
from 	gerar_inf_convenio_agenda 
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
 
cd_convenio_p		:= cd_convenio_w;
 
if (ie_categoria_w = 'S') then 
	cd_categoria_p		:= cd_categoria_w;
end if;
if (ie_carteirinha_w = 'S') then 
	cd_usuario_convenio_p	:= cd_usuario_convenio_w;
end if;
if (ie_dt_validade_w = 'S') then 
	if (dt_validade_w IS NOT NULL AND dt_validade_w::text <> '') and (trunc(dt_validade_w) < to_date('01/01/1900','dd/mm/yyyy')) then 
		dt_validade_w := null;
	end if;	
	dt_validade_carteira_p	:= dt_validade_w;
end if;
if (ie_dt_validade_w = 'S') then	 
	dt_validade_carteira_p	:= dt_validade_w;
end if;
if (ie_doc_convenio_w = 'S') then 
	nr_doc_convenio_p	:= nr_doc_convenio_w;
end if;
if (ie_tipo_acomodacao_w = 'S') then 
	cd_tipo_acomodacao_p	:= cd_tipo_acomodacao_w;
end if;
if (ie_plano_w = 'S') then 
	cd_plano_p		:= cd_plano_w;
end if;
	 
ds_observacao_p			:= ds_observacao_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_convenio_agendamento (cd_pessoa_fisica_p text, cd_tipo_agenda_p bigint, nr_seq_agenda_p bigint, ie_forma_convenio_p text, cd_convenio_p INOUT bigint, cd_categoria_p INOUT text, cd_usuario_convenio_p INOUT text, dt_validade_carteira_p INOUT timestamp, nr_doc_convenio_p INOUT text, cd_tipo_acomodacao_p INOUT bigint, cd_plano_p INOUT text, nm_usuario_p text, ds_observacao_p INOUT text) FROM PUBLIC;

