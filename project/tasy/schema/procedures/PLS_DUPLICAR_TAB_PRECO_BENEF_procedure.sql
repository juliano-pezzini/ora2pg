-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_duplicar_tab_preco_benef ( nr_seq_segurado_p bigint, nr_seq_tabela_p bigint, nr_seq_tabela_nova_p INOUT bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE


nr_seq_tabela_nova_w		bigint;
qt_faixa_etaria_w		bigint;
nr_seq_plano_w			bigint;
dt_inicio_vigencia_w		timestamp;
ie_tabela_base_w		varchar(1);
cd_codigo_ant_w			varchar(20);
nm_tabela_w			varchar(255);
vl_preco_atual_w		double precision;
qt_idade_inicial_w		integer;
qt_idade_final_w		integer;
nr_seq_preco_w			bigint;
ie_grau_titularidade_w		varchar(2);
nr_seq_contrato_w		bigint;
qt_registros_w			bigint;
cd_cgc_estipulante_w		varchar(20);
qt_vidas_inicial_w		bigint;
qt_vidas_final_w		bigint;
vl_adaptacao_w			double precision;
vl_preco_nao_subsidiado_w	double precision;
vl_preco_nao_subsid_atual_w	double precision;
nr_seq_intercambio_w		bigint;
nr_seq_faixa_etaria_w		bigint;
tx_acrescimo_w			pls_plano_preco.tx_acrescimo%type;
ie_preco_vidas_contrato_w	pls_tabela_preco.ie_preco_vidas_contrato%type;
ie_calculo_vidas_w		pls_tabela_preco.ie_calculo_vidas%type;
nm_beneficiario_w		varchar(255);
vl_minimo_w			pls_plano_preco.vl_minimo%type;

c01 CURSOR FOR
	SELECT	nr_sequencia,
		qt_idade_inicial,
		qt_idade_final,
		vl_preco_atual,
		ie_grau_titularidade,
		qt_vidas_inicial,
		qt_vidas_final,
		vl_adaptacao,
		vl_preco_nao_subsidiado,
		vl_preco_nao_subsid_atual,
		tx_acrescimo,
		vl_minimo
	from	pls_plano_preco
	where	nr_seq_tabela	= nr_seq_tabela_p
	order by qt_idade_inicial;


BEGIN

select	ie_tabela_base,
	nm_tabela,
	dt_inicio_vigencia,
	cd_codigo_ant,
	nr_seq_plano,
	nr_seq_faixa_etaria,
	ie_preco_vidas_contrato,
	ie_calculo_vidas
into STRICT	ie_tabela_base_w,
	nm_tabela_w,
	dt_inicio_vigencia_w,
	cd_codigo_ant_w,
	nr_seq_plano_w,
	nr_seq_faixa_etaria_w,
	ie_preco_vidas_contrato_w,
	ie_calculo_vidas_w
from	pls_tabela_preco
where	nr_sequencia	= nr_seq_tabela_p;

select	nr_seq_contrato,
	nr_seq_intercambio,
	obter_nome_pf(cd_pessoa_fisica)
into STRICT	nr_seq_contrato_w,
	nr_seq_intercambio_w,
	nm_beneficiario_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_p;

select	max(cd_cgc_estipulante)
into STRICT	cd_cgc_estipulante_w
from	pls_contrato
where	nr_sequencia	= nr_seq_contrato_w;

select	count(*)
into STRICT	qt_faixa_etaria_w
from	pls_plano_preco
where	nr_seq_tabela	= nr_seq_tabela_p;

if (qt_faixa_etaria_w > 0) then
	select	nextval('pls_tabela_preco_seq')
	into STRICT	nr_seq_tabela_nova_w
	;

	insert into pls_tabela_preco(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		nm_tabela,
		dt_inicio_vigencia,
		nr_seq_plano,
		cd_codigo_ant,
		ie_tabela_base,
		nr_seq_tabela_origem,
		nr_segurado,
		nr_contrato,
		nr_seq_contrato_inter,
		nr_seq_faixa_etaria,
		dt_liberacao,
		ie_preco_vidas_contrato,
		ie_calculo_vidas)
	values (nr_seq_tabela_nova_w,
		clock_timestamp(),
		nm_usuario_p,
		'Tabela para o benefici√°rio ' || to_char(nr_seq_segurado_p) || ' - ' || nm_beneficiario_w,
		dt_inicio_vigencia_w,
		nr_seq_plano_w,
		cd_codigo_ant_w,
		'N',
		nr_seq_tabela_p,
		nr_seq_segurado_p,
		nr_seq_contrato_w,
		nr_seq_intercambio_w,
		nr_seq_faixa_etaria_w,
		clock_timestamp(),
		ie_preco_vidas_contrato_w,
		ie_calculo_vidas_w);

	open c01;
	loop
	fetch c01 into
		nr_seq_preco_w,
		qt_idade_inicial_w,
		qt_idade_final_w,
		vl_preco_atual_w,
		ie_grau_titularidade_w,
		qt_vidas_inicial_w,
		qt_vidas_final_w,
		vl_adaptacao_w,
		vl_preco_nao_subsidiado_w,
		vl_preco_nao_subsid_atual_w,
		tx_acrescimo_w,
		vl_minimo_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		insert into pls_plano_preco(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_seq_tabela,
			qt_idade_inicial,
			qt_idade_final,
			vl_preco_inicial,
			vl_preco_atual,
			tx_acrescimo,
			ie_grau_titularidade,
			qt_vidas_inicial,
			qt_vidas_final,
			vl_adaptacao,
			vl_preco_nao_subsidiado,
			vl_preco_nao_subsid_atual,
			vl_minimo)
		values (nextval('pls_plano_preco_seq'),
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_tabela_nova_w,
			qt_idade_inicial_w,
			qt_idade_final_w,
			vl_preco_atual_w,
			vl_preco_atual_w,
			tx_acrescimo_w,
			ie_grau_titularidade_w,
			qt_vidas_inicial_w,
			qt_vidas_final_w,
			vl_adaptacao_w,
			vl_preco_nao_subsidiado_w,
			vl_preco_nao_subsid_atual_w,
			vl_minimo_w);
		end;
	end loop;
	close c01;
end if;

nr_seq_tabela_nova_p	:= nr_seq_tabela_nova_w;

if (coalesce(ie_commit_p,'N') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_duplicar_tab_preco_benef ( nr_seq_segurado_p bigint, nr_seq_tabela_p bigint, nr_seq_tabela_nova_p INOUT bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_commit_p text) FROM PUBLIC;

