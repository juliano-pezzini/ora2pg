-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_ordem_compra_integ ( nr_sequencia_p bigint, nm_usuario_p text, cd_estab_p bigint, cd_cgc_fornecedor_p text, cd_condicao_pagamento_p bigint, cd_comprador_p text, cd_moeda_p bigint, cd_pessoa_solicitante_p text, cd_cgc_transportador_p text, ie_frete_p text, vl_frete_p bigint, pr_desconto_p bigint, pr_desc_pgto_antec_p bigint, pr_juros_negociado_p bigint, ds_pessoa_contato_p text, ds_observacao_p text, cd_local_entrega_p bigint, dt_entrega_p timestamp, ie_aviso_chegada_p text, vl_despesa_acessoria_p bigint, nr_seq_subgrupo_compra_p bigint, pr_desc_financeiro_p bigint, cd_pessoa_fisica_p text, ie_urgente_p text, nr_seq_forma_pagto_p bigint, nr_documento_externo_p bigint, vl_desconto_p bigint, cd_centro_custo_p bigint, nr_seq_motivo_cancel_p bigint, nr_ordem_compra_p INOUT bigint) AS $body$
DECLARE

 
 
 
cd_centro_custo_w				bigint;
nr_ordem_compra_w			bigint;
nr_ordem_compra_atual_w			bigint;
nr_item_oci_w				integer;
cd_material_w				integer;
cd_unidade_medida_compra_w		varchar(30);
vl_unitario_material_w			double precision;
qt_material_w				double precision;
ds_material_direto_w			varchar(255);
ds_observacao_w				varchar(255);
ds_observacao_ordem_w			varchar(4000);
ds_observacao_cancel_w			varchar(255);
cd_conta_contabil_w			varchar(20);
ie_de_para_unid_med_w			varchar(15);
ie_de_para_material_w			varchar(15);
nr_solic_compra_w				bigint;
nr_item_solic_compra_w			integer;
nr_cot_compra_w				bigint;
nr_item_cot_compra_w			integer;
qt_existe_w				bigint;
dt_liberacao_w				timestamp;
nr_ordem_existente_w			bigint;
nr_ano_ordem_w				smallint;
vl_item_liquido_w				double precision;
vl_ipi_w					double precision;
tx_ipi_w					double precision;
cd_ipi_w					bigint;
ds_motivo_cancel_w			varchar(255);
pr_descontos_w				double precision;
vl_desconto_w				double precision;
nr_serie_oc_w				smallint;

C01 CURSOR FOR 
SELECT	nr_item_oci, 
	cd_material, 
	cd_unidade_medida_compra, 
	vl_unitario_material, 
	qt_material, 
	ds_material_direto, 
	ds_observacao, 
	cd_centro_custo, 
	cd_conta_contabil, 
	nr_solic_compra, 
	nr_item_solic_compra, 
	nr_cot_compra, 
	nr_item_cot_compra, 
	coalesce(vl_ipi,0), 
	coalesce(tx_ipi,0), 
	coalesce(pr_descontos,0), 
	coalesce(vl_desconto,0) 
from	sup_int_oc_item 
where	nr_sequencia = nr_sequencia_p;


BEGIN 
 
select	obter_ie_de_para_sup_integr('OC','R','UNIDADE_MEDIDA'), 
	obter_ie_de_para_sup_integr('OC','R','MATERIAL') 
into STRICT	ie_de_para_unid_med_w, 
	ie_de_para_material_w
;
 
select	(substr(to_char(nr_documento_externo_p),1,length(nr_documento_externo_p)-5))::numeric , 
	(substr(to_char(nr_documento_externo_p),length(nr_documento_externo_p)-4,1))::numeric , 
	(substr(to_char(nr_documento_externo_p),length(nr_documento_externo_p)-3,4))::numeric  
into STRICT	nr_ordem_existente_w, 
	nr_serie_oc_w, 
	nr_ano_ordem_w
;
 
select	max(nr_ordem_compra) 
into STRICT	nr_ordem_compra_w 
from	ordem_compra 
where	(substr(to_char(nr_documento_externo),1,length(nr_documento_externo)-5))::numeric  = nr_ordem_existente_w 
and 	(substr(to_char(nr_documento_externo),length(to_char(nr_documento_externo))-4,1))::numeric  = nr_serie_oc_w 
and	(substr(to_char(nr_documento_externo),length(nr_documento_externo)-3,4))::numeric  = nr_ano_ordem_w;
 
select	dt_liberacao 
into STRICT	dt_liberacao_w 
from	ordem_compra 
where	nr_ordem_compra = nr_ordem_compra_w;
 
nr_ordem_compra_atual_w	:= 0;
 
if (coalesce(dt_liberacao_w::text, '') = '') and (coalesce(nr_ordem_compra_w,0) <> 0) then 
	begin 
 
	update	ordem_compra 
	set	cd_cgc_fornecedor		= cd_cgc_fornecedor_p, 
		cd_condicao_pagamento	= cd_condicao_pagamento_p, 
		cd_comprador		= cd_comprador_p, 
		cd_moeda		= cd_moeda_p, 
		cd_pessoa_solicitante	= cd_pessoa_solicitante_p, 
		cd_cgc_transportador	= cd_cgc_transportador_p, 
		ie_frete			= ie_frete_p, 
		vl_frete			= vl_frete_p, 
		pr_desconto		= pr_desconto_p, 
		pr_desc_pgto_antec	= pr_desc_pgto_antec_p, 
		pr_juros_negociado	= pr_juros_negociado_p, 
		ds_pessoa_contato	= ds_pessoa_contato_p, 
		ds_observacao		= ds_observacao_p, 
		cd_local_entrega		= cd_local_entrega_p, 
		dt_entrega		= dt_entrega_p, 
		ie_aviso_chegada		= ie_aviso_chegada_p, 
		vl_despesa_acessoria	= vl_despesa_acessoria_p, 
		nr_seq_subgrupo_compra	= nr_seq_subgrupo_compra_p, 
		pr_desc_financeiro		= pr_desc_financeiro_p, 
		cd_pessoa_fisica		= cd_pessoa_fisica_p, 
		ie_urgente		= ie_urgente_p, 
		nr_seq_forma_pagto	= nr_seq_forma_pagto_p, 
		vl_desconto		= vl_desconto_p, 
		cd_centro_custo		= cd_centro_custo_p, 
		dt_atualizacao		= clock_timestamp(), 
		nm_usuario		= nm_usuario_p 
	where	nr_ordem_compra		= nr_ordem_compra_w;
 
	open C01;
	loop 
	fetch C01 into 
		nr_item_oci_w, 
		cd_material_w, 
		cd_unidade_medida_compra_w, 
		vl_unitario_material_w, 
		qt_material_w, 
		ds_material_direto_w, 
		ds_observacao_w, 
		cd_centro_custo_w, 
		cd_conta_contabil_w, 
		nr_solic_compra_w, 
		nr_item_solic_compra_w, 
		nr_cot_compra_w, 
		nr_item_cot_compra_w, 
		vl_ipi_w, 
		tx_ipi_w, 
		pr_descontos_w, 
		vl_desconto_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
 
		/*Conversao para unidade de medida*/
 
		if (ie_de_para_unid_med_w = 'C') then 
			cd_unidade_medida_compra_w	:= coalesce(Obter_Conversao_interna(null,'UNIDADE_MEDIDA','CD_UNIDADE_MEDIDA',cd_unidade_medida_compra_w),cd_unidade_medida_compra_w);
		elsif (ie_de_para_unid_med_w = 'S') then 
			cd_unidade_medida_compra_w	:= coalesce(obter_unid_med_sist_ant(cd_unidade_medida_compra_w),cd_unidade_medida_compra_w);
		end if;
		/*Fim*/
 
 
		/*Conversao para material*/
 
		if (ie_de_para_material_w = 'C') then 
			cd_material_w	:= coalesce(Obter_Conversao_interna(null,'MATERIAL','CD_MATERIAL',cd_material_w),cd_material_w);
		elsif (ie_de_para_material_w = 'S') then 
			cd_material_w	:= coalesce(obter_material_sistema_ant(cd_material_w),cd_material_w);
		end if;
		/*Fim*/
 
 
		select	count(*) 
		into STRICT	qt_existe_w 
		from	ordem_compra_item 
		where	nr_ordem_compra = nr_ordem_compra_w 
		and	nr_item_oci = nr_item_oci_w;
 
		vl_item_liquido_w	:= round((qt_material_w * vl_unitario_material_w)::numeric,4);
 
		if (qt_existe_w = 0) then 
			begin 
 
			insert into ordem_compra_item( 
				nr_ordem_compra, 
				nr_item_oci, 
				cd_material, 
				cd_unidade_medida_compra, 
				vl_unitario_material, 
				qt_material, 
				dt_atualizacao, 
				nm_usuario, 
				ie_situacao, 
				cd_pessoa_solicitante, 
				pr_descontos, 
				cd_local_estoque, 
				ds_material_direto, 
				ds_observacao, 
				vl_item_liquido, 
				cd_centro_custo, 
				cd_conta_contabil, 
				ie_geracao_solic, 
				pr_desc_financ, 
				qt_original, 
				vl_desconto, 
				nr_solic_compra, 
				nr_item_solic_compra, 
				nr_cot_compra, 
				nr_item_cot_compra, 
				vl_total_item) 
			values (	nr_ordem_compra_w, 
				nr_item_oci_w, 
				cd_material_w, 
				cd_unidade_medida_compra_w, 
				vl_unitario_material_w, 
				qt_material_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				'A', 
				cd_pessoa_solicitante_p, 
				pr_descontos_w, 
				cd_local_entrega_p, 
				ds_material_direto_w, 
				ds_observacao_w, 
				round((qt_material_w * vl_unitario_material_w)::numeric,4), 
				cd_centro_custo_w, 
				cd_conta_contabil_w, 
				'S', 
				0, 
				qt_material_w, 
				vl_desconto_w, 
				nr_solic_compra_w, 
				nr_item_solic_compra_w, 
				nr_cot_compra_w, 
				nr_item_cot_compra_w, 
				round((qt_material_w * vl_unitario_material_w)::numeric,4));
 
			insert into ordem_compra_item_entrega( 
				nr_sequencia, 
				nr_ordem_compra, 
				nr_item_oci, 
				dt_prevista_entrega, 
				qt_prevista_entrega, 
				dt_atualizacao, 
				nm_usuario, 
				dt_entrega_original, 
				dt_entrega_limite) 
			values (	nextval('ordem_compra_item_entrega_seq'), 
				nr_ordem_compra_w, 
				nr_item_oci_w, 
				dt_entrega_p, 
				qt_material_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				dt_entrega_p, 
				dt_entrega_p);
 
			end;
		else 
			begin 
 
			update	ordem_compra_item 
			set	cd_unidade_medida_compra	= cd_unidade_medida_compra_w, 
				vl_unitario_material	= vl_unitario_material_w, 
				vl_item_liquido		= vl_item_liquido_w, 
				qt_material		= qt_material_w, 
				ds_material_direto		= ds_material_direto_w, 
				ds_observacao		= ds_observacao_w, 
				cd_centro_custo		= cd_centro_custo_w, 
				cd_conta_contabil		= cd_conta_contabil_w, 
				vl_desconto		= vl_desconto_w, 
				pr_descontos		= pr_descontos_w, 
				dt_atualizacao		= clock_timestamp(), 
				nm_usuario		= nm_usuario_p, 
				vl_total_item = round((qt_material_w * vl_unitario_material_w)::numeric,4) 
			where	nr_ordem_compra		= nr_ordem_compra_w 
			and	nr_item_oci		= nr_item_oci_w;
 
			select	count(*) 
			into STRICT	qt_existe_w 
			from	ordem_compra_item_entrega 
			where	nr_ordem_compra	= nr_ordem_compra_w 
			and	nr_item_oci	= nr_item_oci_w;
 
			if (qt_existe_w = 1) then 
				begin 
 
				update	ordem_compra_item_entrega 
				set	dt_prevista_entrega	= trunc(dt_entrega_p) 
				where	nr_ordem_compra		= nr_ordem_compra_w 
				and	nr_item_oci		= nr_item_oci_w;
 
				end;
			end if;
 
			end;
		end if;
 
		/*Tem de ser feito antes de atualizar os tributos, mesmo que o procedimento atualize estes dados*/
 
		/*pois o percentual ou valor tamb√©m pode ter sido alterado*/
 
		calcular_liquido_ordem_compra(nr_ordem_compra_w,nm_usuario_p);
 
		if (vl_ipi_w <> 0) or (tx_ipi_w <> 0) then 
			begin 
 
			select	vl_item_liquido 
			into STRICT	vl_item_liquido_w 
			from	ordem_compra_item 
			where	nr_ordem_compra = nr_ordem_compra_w 
			and	nr_item_oci = nr_item_oci_w;
 
			delete 
			from	ordem_compra_item_trib a 
			where	a.nr_ordem_compra = nr_ordem_compra_w 
			and	a.nr_item_oci = nr_item_oci_w 
			and	a.cd_tributo in (SELECT	x.cd_tributo 
						from	tributo x 
						where	x.ie_tipo_tributo = 'IPI');
 
			if (vl_ipi_w <> 0) and (tx_ipi_w <> 0) then 
				vl_ipi_w	:= vl_ipi_w;
				tx_ipi_w	:= tx_ipi_w;
			elsif (vl_ipi_w <> 0) then 
				vl_ipi_w	:= vl_ipi_w;
				tx_ipi_w	:= (dividir((vl_ipi_w * 100),vl_item_liquido_w));
			elsif (tx_ipi_w <> 0) then 
				vl_ipi_w	:= (dividir(tx_ipi_w,100) * vl_item_liquido_w);
				tx_ipi_w	:= tx_ipi_w;
			end if;
 
			select	coalesce(max(cd_tributo),0) 
			into STRICT	cd_ipi_w 
			from	tributo 
			where	ie_corpo_item = 'I' 
			and	ie_situacao = 'A' 
			and (coalesce(cd_estabelecimento, cd_estab_p) = cd_estab_p) 
			and	ie_tipo_tributo = 'IPI';
 
			if (cd_ipi_w <> 0) then 
				begin 
 
				insert into ordem_compra_item_trib( 
					nr_ordem_compra, 
					nr_item_oci, 
					cd_tributo, 
					pr_tributo, 
					vl_tributo, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec) values ( 
						nr_ordem_compra_w, 
						nr_item_oci_w, 
						cd_ipi_w, 
						tx_ipi_w, 
						vl_ipi_w, 
						clock_timestamp(), 
						'INTEGRACAO', 
						clock_timestamp(), 
						'INTEGRACAO');
 
				end;
			end if;
 
			end;
		end if;
 
		end;
	end loop;
	close C01;
 
	nr_ordem_compra_atual_w	:= nr_ordem_compra_w;
 
	end;
end if;
 
if (coalesce(nr_ordem_compra_w,0) <> 0) and (nr_seq_motivo_cancel_p IS NOT NULL AND nr_seq_motivo_cancel_p::text <> '') then 
	begin 
 
	select	count(*) 
	into STRICT	qt_existe_w 
	from	motivo_cancel_sc_oc 
	where	nr_sequencia = nr_seq_motivo_cancel_p;
 
	if (qt_existe_w > 0) then 
		begin 
 
		select	ds_motivo 
		into STRICT	ds_motivo_cancel_w 
		from	motivo_cancel_sc_oc 
		where	nr_sequencia = nr_seq_motivo_cancel_p;
 
		ds_observacao_cancel_w :=	WHEB_MENSAGEM_PCK.get_texto(297532,'DT_CANCELAMENTO_W=' || to_char(clock_timestamp(),'dd/mm/yyyy hh24:mi:ss') || ';' || 
										'DS_MOTIVO_CANCEL_W=' || ds_motivo_cancel_w);
 
		select	ds_observacao 
		into STRICT	ds_observacao_ordem_w 
		from	ordem_compra 
		where	nr_ordem_compra = nr_ordem_compra_w;
 
		if (ds_observacao_ordem_w IS NOT NULL AND ds_observacao_ordem_w::text <> '') then 
			ds_observacao_ordem_w	:= substr(ds_observacao_ordem_w || chr(13) || ds_observacao_cancel_w,1,4000);
		end if;
 
		update	ordem_compra 
		set	nr_seq_motivo_cancel	= nr_seq_motivo_cancel_p, 
			nm_usuario		= 'INTEGRACAO', 
			dt_atualizacao		= clock_timestamp(), 
			ds_observacao		= ds_observacao_ordem_w 
		where	nr_ordem_compra		= nr_ordem_compra_w;
 
		CALL Baixar_ordem_compra(nr_ordem_compra_w, null, null, 'INTEGRACAO');
 
		nr_ordem_compra_atual_w	:= nr_ordem_compra_w;
 
		end;
	else 
		begin 
 
		CALL inserir_historico_ordem_compra( 
			nr_ordem_compra_w, 
			'S', 
			WHEB_MENSAGEM_PCK.get_texto(297533), 
			WHEB_MENSAGEM_PCK.get_texto(297534,'NR_SEQ_MOTIVO_CANCEL_P=' || to_char(nr_seq_motivo_cancel_p)), 
			'INTEGRACAO');
 
		end;
	end if;
 
	end;
end if;
 
nr_ordem_compra_p	:= nr_ordem_compra_atual_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_ordem_compra_integ ( nr_sequencia_p bigint, nm_usuario_p text, cd_estab_p bigint, cd_cgc_fornecedor_p text, cd_condicao_pagamento_p bigint, cd_comprador_p text, cd_moeda_p bigint, cd_pessoa_solicitante_p text, cd_cgc_transportador_p text, ie_frete_p text, vl_frete_p bigint, pr_desconto_p bigint, pr_desc_pgto_antec_p bigint, pr_juros_negociado_p bigint, ds_pessoa_contato_p text, ds_observacao_p text, cd_local_entrega_p bigint, dt_entrega_p timestamp, ie_aviso_chegada_p text, vl_despesa_acessoria_p bigint, nr_seq_subgrupo_compra_p bigint, pr_desc_financeiro_p bigint, cd_pessoa_fisica_p text, ie_urgente_p text, nr_seq_forma_pagto_p bigint, nr_documento_externo_p bigint, vl_desconto_p bigint, cd_centro_custo_p bigint, nr_seq_motivo_cancel_p bigint, nr_ordem_compra_p INOUT bigint) FROM PUBLIC;

