-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_verif_se_exclui_item_anexo ( nr_seq_auditoria_p pls_auditoria.nr_sequencia%type, nm_usuario_p text ) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Verificar se na análise da autorização foi excluído algum item que possui anexo. Caso todos os itens do lote tenham sido exlcuídos, exlcui o lote de anexo também.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ x] Tasy (Delphi/Java) [   ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
qt_item_lote_anexo_mat_w		smallint;
qt_item_lote_anexo_proc_w		smallint;
qt_item_mat_anexo_quim_w		smallint;
qt_item_mat_anexo_opme_w		smallint;
qt_item_proc_anexo_radio_w		smallint;
nr_seq_guia_w				pls_guia_plano.nr_sequencia%type;
nr_motivo_exclusao_w			pls_motivo_exclusao.nr_sequencia%type;
ds_tipo_anexo_exc_w			varchar(255);

C01 CURSOR FOR
	SELECT	nr_seq_mat_origem,
		nr_seq_motivo_exc
	from	pls_auditoria_item
	where	nr_seq_auditoria 	= nr_seq_auditoria_p
	and   	coalesce(nr_seq_proc_origem::text, '') = ''
	and	(nr_seq_motivo_exc IS NOT NULL AND nr_seq_motivo_exc::text <> '');

C02 CURSOR FOR
	SELECT	nr_seq_proc_origem,
		nr_seq_motivo_exc
	from	pls_auditoria_item
	where	nr_seq_auditoria 	= nr_seq_auditoria_p
	and 	coalesce(nr_seq_mat_origem::text, '') = ''
	and	(nr_seq_motivo_exc IS NOT NULL AND nr_seq_motivo_exc::text <> '');

C03 CURSOR FOR
	SELECT	CASE WHEN ie_tipo_anexo='QU' THEN  'Quimioterapia' || chr(13) || chr(10) WHEN ie_tipo_anexo='RA' THEN  'Radioterapia' || chr(13) || chr(10) WHEN ie_tipo_anexo='OP' THEN  'OPME' || chr(13) || chr(10) END  ie_tipo_anexo
	from	pls_lote_anexo_guias_aut
	where	(nr_seq_motivo_exc IS NOT NULL AND nr_seq_motivo_exc::text <> '')
	and	nr_seq_guia	= nr_seq_guia_w;
BEGIN

nr_motivo_exclusao_w	:= obter_valor_param_usuario(1270, 1, Obter_Perfil_Ativo, nm_usuario_p, 0);

for r_c01_w in c01 loop
	select 	count(1)
	into STRICT	qt_item_lote_anexo_mat_w
	from	pls_lote_anexo_mat_aut
	where	nr_seq_plano_mat	= r_c01_w.nr_seq_mat_origem;

	if (qt_item_lote_anexo_mat_w > 0) then
		update	pls_lote_anexo_mat_aut
		set	nr_seq_motivo_exc	= r_c01_w.nr_seq_motivo_exc,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_seq_plano_mat	= r_c01_w.nr_seq_mat_origem;

	end if;
end loop;

for r_c02_w in c02 loop
	select 	count(1)
	into STRICT	qt_item_lote_anexo_proc_w
	from	pls_lote_anexo_proc_aut
	where	nr_seq_plano_proc	= r_c02_w.nr_seq_proc_origem;

	if (qt_item_lote_anexo_proc_w > 0) then
		update	pls_lote_anexo_proc_aut
		set	nr_seq_motivo_exc	= r_c02_w.nr_seq_motivo_exc,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_seq_plano_proc	= r_c02_w.nr_seq_proc_origem;
	end if;
end loop;

begin
	select	nr_seq_guia
	into STRICT	nr_seq_guia_w
	from	pls_auditoria
	where 	nr_sequencia 	= nr_seq_auditoria_p;
exception
when others then
	nr_seq_guia_w 	:= null;
end;

if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
	select	count(1)
	into STRICT	qt_item_mat_anexo_quim_w
	from	pls_lote_anexo_mat_aut a,
		pls_lote_anexo_guias_aut b
	where	a.nr_seq_lote_anexo_guia	= b.nr_sequencia
	and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
	and	b.ie_tipo_anexo			= 'QU'
	and 	b.nr_seq_guia			= nr_seq_guia_w;

	if (qt_item_mat_anexo_quim_w = 0)then
			update	pls_lote_anexo_guias_aut
			set	nr_seq_motivo_exc	= nr_motivo_exclusao_w,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	ie_tipo_anexo		= 'QU'
			and 	nr_seq_guia		= nr_seq_guia_w;
	end if;

	select	count(1)
	into STRICT	qt_item_mat_anexo_opme_w
	from	pls_lote_anexo_mat_aut a,
		pls_lote_anexo_guias_aut b
	where	a.nr_seq_lote_anexo_guia	= b.nr_sequencia
	and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
	and	b.ie_tipo_anexo			= 'OP'
	and 	b.nr_seq_guia			= nr_seq_guia_w;

	if (qt_item_mat_anexo_opme_w = 0)then
			update	pls_lote_anexo_guias_aut
			set	nr_seq_motivo_exc	= nr_motivo_exclusao_w,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	ie_tipo_anexo		= 'OP'
			and 	nr_seq_guia		= nr_seq_guia_w;
	end if;

	if (pls_obter_versao_tiss < '3.03.00') then
		select	count(1)
		into STRICT	qt_item_proc_anexo_radio_w
		from	pls_lote_anexo_proc_aut a,
			pls_lote_anexo_guias_aut b
		where	a.nr_seq_lote_anexo_guia	= b.nr_sequencia
		and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
		and	b.ie_tipo_anexo			= 'RA'
		and 	b.nr_seq_guia			= nr_seq_guia_w;

	else	-- Só exclui o lote de anexo de radio se não houver item com o anexo.
		select	count(1)
		into STRICT	qt_item_proc_anexo_radio_w
		from	pls_auditoria_item
		where	nr_seq_auditoria 	= nr_seq_auditoria_p
		and	(nr_seq_proc_origem IS NOT NULL AND nr_seq_proc_origem::text <> '')
		and	coalesce(nr_seq_motivo_exc::text, '') = ''
		and	ie_tipo_anexo		= 'RA';
	end if;

	if (qt_item_proc_anexo_radio_w = 0)then
			update	pls_lote_anexo_guias_aut
			set	nr_seq_motivo_exc	= nr_motivo_exclusao_w,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	ie_tipo_anexo		= 'RA'
			and 	nr_seq_guia		= nr_seq_guia_w;
	end if;

	for r_c03_w in c03 loop
		begin
			ds_tipo_anexo_exc_w	:= ds_tipo_anexo_exc_w || r_c03_w.ie_tipo_anexo;
		exception
		when others then
			ds_tipo_anexo_exc_w	:= null;
		end;

	end loop;

	--Caso algum lote de anexo seja excluído, insere o registro no histórico da guia
	if (ds_tipo_anexo_exc_w IS NOT NULL AND ds_tipo_anexo_exc_w::text <> '') then
		CALL pls_guia_gravar_historico(	nr_seq_guia_w, 1, 'Exluído o(s) anexo(s) de ' || ds_tipo_anexo_exc_w,
						null, nm_usuario_p);
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_verif_se_exclui_item_anexo ( nr_seq_auditoria_p pls_auditoria.nr_sequencia%type, nm_usuario_p text ) FROM PUBLIC;

