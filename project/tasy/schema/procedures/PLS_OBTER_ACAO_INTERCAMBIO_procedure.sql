-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_acao_intercambio ( ie_evento_p text, ie_acao_prev_p text, nr_seq_ptu_fatura_p bigint, nr_seq_pls_fatura_p bigint, nr_seq_lote_contest_p bigint, nr_seq_lote_discussao_p text, dt_referencia_p timestamp, ie_arq_intercambio_p text, ie_estorno_p text, nr_seq_acao_p INOUT bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
	IE_ACAO_PREV_P
		7 - Baixar valor glosado no titulo
		12 - Baixar valor glosado no titulo (Fatura)
		13 - Baixar valor glosado no titulo (NDC)
		2 - Gerar titulo a pagar
		1 - Gerar titulo a receber
		14 - Gerar titulo a receber (Fatura)
		15 - Gerar titulo a receber (NDR)
		20 - Validar baixa no titulo da fatura

	IE_EVENTO_P
		12 - Encerrar fatura/reconhecer glosas
		6 - Fechamento da contestacao
		3 - Fechamento de conta
		5 - Fechamento de discussao
		4 - Finalizacao da analise das contas da fatura (todas)
-------------------------------------------------------------------------------------------------------------------

Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_unimed_origem_w		varchar(30);
nm_usuario_w			usuario.nm_usuario%type;
cd_cgc_w			varchar(14);
ie_operacao_w			varchar(3);
ie_arq_intercambio_w		varchar(5)	:= 'T';
ie_tipo_relacao_w		varchar(2);
vl_min_glosa_fatura_w		double precision;
vl_total_fatura_w		double precision;
vl_glosa_fatura_w		double precision;
nr_seq_congenere_w		bigint;
nr_seq_camara_w			bigint;
nr_seq_processo_interc_w	bigint;
nr_seq_processo_evento_w	bigint;
nr_seq_lote_w			bigint;
nr_seq_regra_fat_w		bigint;
qt_min_dias_venc_ant_w		bigint := null;
nr_titulo_w			bigint;
nr_titulo_ndc_w			bigint;
nr_seq_grupo_prestador_w	bigint;
dt_emissao_fatura_w		timestamp;	
dt_vencimento_w			timestamp;	
nr_seq_pagador_w		pls_fatura.nr_seq_pagador%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type := null;
cd_pessoa_juridica_w		pessoa_juridica.cd_cgc%type := null;
cd_municipio_ibge_w		pessoa_juridica.cd_municipio_ibge%type;
ie_restringe_cd_muni_w		varchar(10) := 'N';
dt_referencia_w			timestamp;
qt_coop_med_w			integer;
ie_tipo_congenere_w		pls_congenere.ie_tipo_congenere%type;
nr_seq_cong_coop_w		pls_congenere.nr_sequencia%type;
nr_seq_periodo_w		pls_lote_camara_comp.nr_seq_periodo%type;
dt_limite_a550_w		pls_camara_calend_periodo.dt_limite_a550%type;
qt_min_dias_lim_a550_w		pls_proc_interc_restr.qt_min_dias_lim_a550%type;
ie_processo_pgto_w		pls_processo_interc_acao.ie_processo_pgto%type;
ie_camara_compensacao_w		pls_processo_interc_acao.ie_camara_compensacao%type;
ie_processo_pgto_lote_w		pls_lote_contestacao.ie_processo_pgto%type;
ie_tipo_pagamento_w		pls_proc_interc_restr.ie_tipo_pagamento%type;
ie_processo_w			varchar(1);

C01 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_regra_processo_interc	a
	where	coalesce(a.nr_seq_congenere, coalesce(nr_seq_congenere_w, 0)) = coalesce(nr_seq_congenere_w, 0)
	and	coalesce(a.nr_seq_camara, coalesce(nr_seq_camara_w, 0)) = coalesce(nr_seq_camara_w, 0)
	and	dt_referencia_p between trunc(coalesce(a.dt_inicio_vigencia,dt_referencia_p),'dd') and fim_dia(coalesce(a.dt_fim_vigencia, dt_referencia_p))
	and	a.ie_envio_recebimento = ie_operacao_w
	and	a.ie_situacao = 'A'
	and	((nr_seq_regra_fat = coalesce(nr_seq_regra_fat_w,nr_seq_regra_fat)) or (coalesce(nr_seq_regra_fat::text, '') = ''))
	and	((ie_arquivo_intercambio = ie_arq_intercambio_w) or (coalesce(ie_arquivo_intercambio, 'T') = 'T'))
	and	coalesce(a.ie_tipo_relacao, coalesce(ie_tipo_relacao_w, ' ')) = coalesce(ie_tipo_relacao_w,  ' ')
	and	coalesce(a.nr_seq_grupo_prestador, coalesce(nr_seq_grupo_prestador_w, 0)) = coalesce(nr_seq_grupo_prestador_w, 0)
	order by
		coalesce(a.nr_seq_camara, 0),
		coalesce(a.nr_seq_congenere, 0),
		coalesce(a.nr_seq_regra_fat, 0),
		coalesce(a.ie_tipo_relacao, ' '),
		coalesce(a.nr_seq_grupo_prestador, 0),
		coalesce(a.ie_arquivo_intercambio, '0'),
		a.nr_sequencia;
	
C02 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_processo_interc_evento	a
	where	a.ie_evento			= ie_evento_p
	and	a.nr_seq_processo_interc	= nr_seq_processo_interc_w
	order by
		a.nr_sequencia;

C03 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_processo_interc_acao	a
	where	a.ie_acao			= ie_acao_prev_p
	and	a.nr_seq_processo_evento	= nr_seq_processo_evento_w
	and	((ie_restringe_cd_muni_w = 'N') or /*aaschlote 04/06/2014 - OS 649795*/
		(ie_restringe_cd_muni_w = 'S'  and pls_obter_restr_proc_inter(a.nr_sequencia,a.nr_seq_processo_evento,a.ie_acao,cd_municipio_ibge_w) = 'S'))
	order by
		a.nr_sequencia;	
	

BEGIN	
nr_seq_acao_p		:= null;
ie_arq_intercambio_w	:= upper(coalesce(ie_arq_intercambio_p, 'T'));

/* PAGAMENTO */

if (nr_seq_ptu_fatura_p IS NOT NULL AND nr_seq_ptu_fatura_p::text <> '') then
	select	a.cd_unimed_origem,
		coalesce(a.dt_emissao_fatura, clock_timestamp()),
		'R',
		coalesce(vl_total_fatura, 0) + coalesce(vl_total_ndc, 0),
		coalesce(vl_glosa, 0) + coalesce(vl_glosa_ndc, 0)
	into STRICT	cd_unimed_origem_w,
		dt_emissao_fatura_w,
		ie_operacao_w,
		vl_total_fatura_w,
		vl_glosa_fatura_w
	from	ptu_fatura	a
	where	a.nr_sequencia	= nr_seq_ptu_fatura_p;
	
	dt_referencia_w := dt_emissao_fatura_w;
	if (ie_evento_p in ('5','13')) and -- Fechamento discussao / Importacao A560
		(ie_acao_prev_p in ('1','14','15','2','10','11')) then -- Geracao de titulo a receber (geral/NDR/Fatura) / Geracao de titulo a pagar (geral/NDR/Fatura)
		dt_referencia_w := clock_timestamp();
	end if;

	if (cd_unimed_origem_w IS NOT NULL AND cd_unimed_origem_w::text <> '') then
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_congenere_w
		from	pls_congenere	a
		where	a.cd_cooperativa	= cd_unimed_origem_w;
		
		if (coalesce(nr_seq_congenere_w::text, '') = '') then
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_congenere_w
			from	pls_congenere	a
			where	(a.cd_cooperativa)::numeric 	= (cd_unimed_origem_w)::numeric;
		end if;
	end if;
	
	if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then	
		select	max(a.nr_seq_camara)
		into STRICT	nr_seq_camara_w
		from	pls_congenere_camara	a
		where	a.nr_seq_congenere	= nr_seq_congenere_w
		and	dt_referencia_w between a.dt_inicio_vigencia_ref and a.dt_fim_vigencia_ref;
	end if;
end if;

/* FATURAMENTO */

if (nr_seq_pls_fatura_p IS NOT NULL AND nr_seq_pls_fatura_p::text <> '') then
	select	a.nr_seq_congenere,
		'E',
		a.nr_seq_lote,
		ie_tipo_relacao,
		nr_seq_grupo_prestador
	into STRICT	nr_seq_congenere_w,
		ie_operacao_w,
		nr_seq_lote_w,
		ie_tipo_relacao_w,
		nr_seq_grupo_prestador_w
	from	pls_fatura	a
	where	a.nr_sequencia	= nr_seq_pls_fatura_p;

	select	coalesce(a.dt_prev_envio,clock_timestamp()),
		nr_seq_regra_fat
	into STRICT	dt_emissao_fatura_w,
		nr_seq_regra_fat_w
	from	pls_lote_faturamento	a
	where	a.nr_sequencia	= nr_seq_lote_w;
	
	dt_referencia_w := dt_emissao_fatura_w;		
	if (ie_evento_p in ('5','13')) and -- Fechamento discussao / Importacao A560
		(ie_acao_prev_p in ('1','14','15','2','10','11')) then -- Geracao de titulo a receber (geral/NDR/Fatura) / Geracao de titulo a pagar (geral/NDR/Fatura)
		dt_referencia_w := clock_timestamp();
	end if;
	
	if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
		select	max(a.nr_seq_camara)
		into STRICT	nr_seq_camara_w
		from	pls_congenere_camara	a
		where	a.nr_seq_congenere	= nr_seq_congenere_w
		and	dt_referencia_w between a.dt_inicio_vigencia_ref and a.dt_fim_vigencia_ref;
		
		if (coalesce(nr_seq_camara_w::text, '') = '') then
			-- Verificar se tem coperativa medica cadastrada
			select	count(1)
			into STRICT	qt_coop_med_w
			from	pls_congenere
			where	ie_tipo_congenere = 'CO'  LIMIT 1;
		
			if (qt_coop_med_w > 0) then
				select	max(cd_cgc),
					max(ie_tipo_congenere)
				into STRICT	cd_cgc_w,
					ie_tipo_congenere_w
				from	pls_congenere
				where	nr_sequencia = nr_seq_congenere_w;
				
				if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
					select	max(nr_sequencia)
					into STRICT	nr_seq_cong_coop_w
					from	pls_congenere
					where	cd_cgc = cd_cgc_w
					and	ie_tipo_congenere = 'CO';
					
					if (nr_seq_cong_coop_w IS NOT NULL AND nr_seq_cong_coop_w::text <> '') then
						select	max(a.nr_seq_camara)
						into STRICT	nr_seq_camara_w
						from	pls_congenere_camara	a
						where	a.nr_seq_congenere	= nr_seq_cong_coop_w
						and	dt_referencia_w between a.dt_inicio_vigencia_ref and a.dt_fim_vigencia_ref;
					end if;
					
					-- Caso seja de cooperativa, manter a operadora da fatura

					-- senao recebe a nova operadora.
					if (ie_tipo_congenere_w != 'CO') then
						nr_seq_congenere_w := nr_seq_cong_coop_w;
					end if;
				end if;
			end if;
		end if;
	end if;
end if;

if (ie_acao_prev_p in ('16','17','18')) and (ie_evento_p in ('15')) and (nr_seq_pls_fatura_p IS NOT NULL AND nr_seq_pls_fatura_p::text <> '') and (coalesce(ie_estorno_p,'N') = 'N') then

	select	max(nr_seq_pagador)
	into STRICT	nr_seq_pagador_w
	from	pls_fatura
	where	nr_sequencia 	= nr_seq_pls_fatura_p;
	
	select	max(a.cd_pessoa_fisica),
		max(a.cd_cgc)
	into STRICT	cd_pessoa_fisica_w,
		cd_pessoa_juridica_w
	from	pls_contrato_pagador	a
	where	a.nr_sequencia		= nr_seq_pagador_w;
	
	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		cd_municipio_ibge_w	:= substr(obter_compl_pf(cd_pessoa_fisica_w, 1, 'CDM'),1,6);
	elsif (cd_pessoa_juridica_w IS NOT NULL AND cd_pessoa_juridica_w::text <> '') then
		select	max(cd_municipio_ibge)
		into STRICT	cd_municipio_ibge_w
		from	pessoa_juridica
		where	cd_cgc	= cd_pessoa_juridica_w;
	end if;			
	
	ie_restringe_cd_muni_w := 'S';
end if;
	
open C01;
loop
fetch C01 into	
	nr_seq_processo_interc_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	nr_seq_processo_evento_w := null;
	nr_seq_acao_p := null;
	
	open C02;
	loop
	fetch C02 into	
		nr_seq_processo_evento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		nr_seq_acao_p	:= null;
		
		open C03;
		loop
		fetch C03 into	
			nr_seq_acao_p;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			null;
			end;
		end loop;
		close C03;
		end;
	end loop;
	close C02;
	end;
end loop;
close C01;

if (ie_acao_prev_p in ('7','12','13','20')) and (ie_evento_p in ('12','6','3','5')) and (nr_seq_ptu_fatura_p IS NOT NULL AND nr_seq_ptu_fatura_p::text <> '') and (coalesce(ie_estorno_p,'N') = 'N') then
	select	max(ie_processo_pgto),
		max(ie_camara_compensacao)
	into STRICT	ie_processo_pgto_w,
		ie_camara_compensacao_w
	from	pls_processo_interc_acao
	where	nr_sequencia = nr_seq_acao_p;
	
	select	max(ie_processo_pgto),
		max(substr(pls_obter_dados_lote_contest(nr_sequencia,'PC'),1,1))
	into STRICT	ie_processo_pgto_lote_w,
		ie_processo_w
	from	pls_lote_contestacao
	where	nr_sequencia = nr_seq_lote_contest_p;
	
	if (ie_processo_pgto_w IS NOT NULL AND ie_processo_pgto_w::text <> '') and (ie_processo_pgto_lote_w IS NOT NULL AND ie_processo_pgto_lote_w::text <> '') then
		if (ie_processo_pgto_w <> ie_processo_pgto_lote_w) then
			nr_seq_acao_p	:= null;
		end if;
	end if;
	
	if (ie_camara_compensacao_w IS NOT NULL AND ie_camara_compensacao_w::text <> '') then
		if	(((ie_camara_compensacao_w = 'P') and (coalesce(nr_seq_camara_w::text, '') = '')) or
			(ie_camara_compensacao_w = 'N' AND nr_seq_camara_w IS NOT NULL AND nr_seq_camara_w::text <> '')) then
			nr_seq_acao_p	:= null;
		end if;
	end if;
	
	select	max(qt_min_dias_venc_ant),
		max(vl_min_glosa_fatura),
		max(qt_min_dias_lim_a550),
		coalesce(max(ie_tipo_pagamento),'A')
	into STRICT	qt_min_dias_venc_ant_w,
		vl_min_glosa_fatura_w,
		qt_min_dias_lim_a550_w,
		ie_tipo_pagamento_w
	from	pls_proc_interc_restr
	where	nr_seq_interc_acao = nr_seq_acao_p;
	
	if (qt_min_dias_venc_ant_w IS NOT NULL AND qt_min_dias_venc_ant_w::text <> '') then
		select	max(nr_titulo),
			max(nr_titulo_ndc)
		into STRICT	nr_titulo_w,
			nr_titulo_ndc_w
		from	ptu_fatura
		where	nr_sequencia	= nr_seq_ptu_fatura_p;
		
		if (ie_acao_prev_p = '13') then
			select	max(dt_vencimento_atual)
			into STRICT	dt_vencimento_w
			from	titulo_pagar
			where	nr_titulo	= nr_titulo_ndc_w;
		else	
			select	max(dt_vencimento_atual)
			into STRICT	dt_vencimento_w
			from	titulo_pagar
			where	nr_titulo	= nr_titulo_w;
		end if;
		
		if (dt_vencimento_w IS NOT NULL AND dt_vencimento_w::text <> '') and
			(trunc(clock_timestamp(), 'dd') > (trunc(dt_vencimento_w,'dd') - qt_min_dias_venc_ant_w)) then
			nr_seq_acao_p	:= null;
		end if;
	end if;
	
	if (qt_min_dias_lim_a550_w IS NOT NULL AND qt_min_dias_lim_a550_w::text <> '') then
		select	max(b.nr_seq_periodo),
			max(c.dt_limite_a550)
		into STRICT	nr_seq_periodo_w,
			dt_limite_a550_w
		from	pls_titulo_lote_camara		a,
			pls_lote_camara_comp		b,
			pls_camara_calend_periodo	c,
			ptu_fatura			p
		where	c.nr_sequencia		= b.nr_seq_periodo
		and	b.nr_sequencia		= a.nr_seq_lote_camara
		and	a.nr_titulo_pagar	= p.nr_titulo
		and	p.nr_sequencia		= nr_seq_ptu_fatura_p;
		
		if (dt_limite_a550_w IS NOT NULL AND dt_limite_a550_w::text <> '') and
			(trunc(dt_referencia_p) > (trunc(dt_limite_a550_w) - qt_min_dias_lim_a550_w)) then
			nr_seq_acao_p	:= null;
		end if;		
	end if;
	
	if (vl_min_glosa_fatura_w IS NOT NULL AND vl_min_glosa_fatura_w::text <> '') then
		if	(vl_min_glosa_fatura_w > (vl_total_fatura_w - vl_glosa_fatura_w)) then
			nr_seq_acao_p	:= null;
		end if;
	end if;
	
	-- OS 2040520 - Se a acao for 'Baixar valor glosado no titulo' (7), a restricao da regra estiver como 'Integral' ou 'Parcial' e nao condizer com o 'Pgto titulo' do lote de contestacao
	if (ie_acao_prev_p = '7') and ((ie_tipo_pagamento_w in ('I','P')) and (ie_tipo_pagamento_w <> ie_processo_w)) then
		nr_seq_acao_p	:= null;
	end if;
end if;

if (ie_acao_prev_p in ('7','20')) and (ie_evento_p in ('5')) and (coalesce(ie_estorno_p,'N') = 'N') then
	
	select	max(ie_processo_pgto),
		max(substr(pls_obter_dados_lote_contest(nr_sequencia,'PC'),1,1))
	into STRICT	ie_processo_pgto_lote_w,
		ie_processo_w
	from	pls_lote_contestacao
	where	nr_sequencia = nr_seq_lote_contest_p;
	
	if	((nr_seq_pls_fatura_p IS NOT NULL AND nr_seq_pls_fatura_p::text <> '') or (nr_seq_ptu_fatura_p IS NOT NULL AND nr_seq_ptu_fatura_p::text <> '')) and (ie_acao_prev_p = '7') then
		select	coalesce(max(ie_tipo_pagamento),'A')
		into STRICT	ie_tipo_pagamento_w
		from	pls_proc_interc_restr
		where	nr_seq_interc_acao = nr_seq_acao_p;
		
		-- OS 2040520 - Se a acao for 'Baixar valor glosado no titulo' (7), a restricao da regra estiver como 'Integral' ou 'Parcial' e nao condizer com o 'Pgto titulo' do lote de contestacao
		if	((ie_tipo_pagamento_w in ('I','P')) and (ie_tipo_pagamento_w <> ie_processo_w)) then
			nr_seq_acao_p	:= null;
		end if;
	elsif (nr_seq_pls_fatura_p IS NOT NULL AND nr_seq_pls_fatura_p::text <> '') and (ie_acao_prev_p = '20') then
		select	max(ie_processo_pgto),
			max(ie_camara_compensacao)
		into STRICT	ie_processo_pgto_w,
			ie_camara_compensacao_w
		from	pls_processo_interc_acao
		where	nr_sequencia = nr_seq_acao_p;
		
		if (ie_processo_pgto_w IS NOT NULL AND ie_processo_pgto_w::text <> '') and (ie_processo_pgto_lote_w IS NOT NULL AND ie_processo_pgto_lote_w::text <> '') then
			if (ie_processo_pgto_w <> ie_processo_pgto_lote_w) then
				nr_seq_acao_p	:= null;
			end if;
		end if;
		
		if (ie_camara_compensacao_w IS NOT NULL AND ie_camara_compensacao_w::text <> '') then
			if	(((ie_camara_compensacao_w = 'P') and (coalesce(nr_seq_camara_w::text, '') = '')) or
				(ie_camara_compensacao_w = 'N' AND nr_seq_camara_w IS NOT NULL AND nr_seq_camara_w::text <> '')) then
				nr_seq_acao_p	:= null;
			end if;
		end if;
	end if;
end if;

if (nr_seq_acao_p IS NOT NULL AND nr_seq_acao_p::text <> '') then
	select 	obter_usuario_ativo
	into STRICT 	nm_usuario_w
	;
	
	CALL pls_avisar_acao_intercambio(	nr_seq_acao_p,
					nr_seq_ptu_fatura_p,
					nr_seq_lote_contest_p,
					nr_seq_lote_discussao_p,
					nm_usuario_w);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_acao_intercambio ( ie_evento_p text, ie_acao_prev_p text, nr_seq_ptu_fatura_p bigint, nr_seq_pls_fatura_p bigint, nr_seq_lote_contest_p bigint, nr_seq_lote_discussao_p text, dt_referencia_p timestamp, ie_arq_intercambio_p text, ie_estorno_p text, nr_seq_acao_p INOUT bigint) FROM PUBLIC;

