-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_calcular_aprovar_exame ( nr_seq_result_p bigint, nr_prescricao_p bigint, nr_seq_prescr_p bigint, ie_tipo_imp_p text, nm_usuario_p text) AS $body$
DECLARE


/* ie_tipo_imp_p	'E' = Lote Externo
		'I' = Interface Laboratório */
nr_seq_material_w		bigint;
nr_seq_exame_w			bigint;
qt_resultado_w			double precision;
pr_resultado_w			double precision;
ds_resultado_w			exame_lab_result_item.ds_resultado%type;
ie_status_receb_w		smallint;
ie_status_novo_receb_w		smallint;
ds_consistencia_w		varchar(4000);
ie_aprovar_todos_interf_w	varchar(1);
qt_exames_consist_w		integer;
ie_exames_aprov_w		varchar(1);
ie_status_receb_lote_w		smallint;
ie_resant_aprov_integ_w		varchar(1);
ie_aprova_exame_w		varchar(1);

c02 CURSOR FOR
	SELECT	nr_seq_exame,
		qt_resultado,
		pr_resultado,
		ds_resultado
	from exame_lab_result_item
	where nr_seq_resultado	= nr_seq_result_p
	  and nr_seq_prescr	= nr_seq_prescr_p
	  and ((qt_resultado <> 0) or (pr_resultado <> 0) or (ds_resultado IS NOT NULL AND ds_resultado::text <> ''))
	order by nr_sequencia;


BEGIN

select	coalesce(max(b.ie_status_receb),35),
	coalesce(max(b.ie_aprovar_todos_interf),'S'),
	max(b.ie_status_receb_lote_ext),
	coalesce(max(IE_RESANT_APROV_INTEG),'N')
into STRICT	ie_status_receb_w,
	ie_aprovar_todos_interf_w,
	ie_status_receb_lote_w,
	ie_resant_aprov_integ_w
from	lab_parametro b,
	prescr_medica a
where	a.cd_estabelecimento	= b.cd_estabelecimento
  and	a.nr_prescricao		= nr_prescricao_p;


if (ie_tipo_imp_p	= 'E') and (ie_status_receb_lote_w IS NOT NULL AND ie_status_receb_lote_w::text <> '')	then
	ie_status_receb_w := ie_status_receb_lote_w;
end if;

select	max(nr_seq_material)
into STRICT	nr_seq_material_w
from exame_lab_result_item
where nr_seq_resultado	= nr_seq_result_p
  and nr_seq_prescr	= nr_seq_prescr_p
  and (nr_seq_material IS NOT NULL AND nr_seq_material::text <> '');

ie_aprova_exame_w := 'S';

open c02;
loop
fetch c02 into	nr_seq_exame_w,
		qt_resultado_w,
		pr_resultado_w,
		ds_resultado_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */

	ds_resultado_w := calcular_valores_exame(nr_seq_result_p, nr_prescricao_p, nr_seq_prescr_p, nr_seq_material_w, nr_seq_exame_w, qt_resultado_w, pr_resultado_w, ds_resultado_w);

--	dbms_output.put_line(nr_seq_exame_w || '-' || ds_resultado_w);
	if (ie_resant_aprov_integ_w = 'S') then
		
		select  lab_cons_valor_res_anterior(nr_prescricao_p,nr_seq_result_p,nr_seq_prescr_p,nr_seq_exame_w)
		into STRICT	ie_exames_aprov_w
		;
		
		if (ie_aprova_exame_w = 'S') and (ie_exames_aprov_w = 'N') then
			ie_aprova_exame_w := 'N';
		end if;
	end if;
	
end loop;
close c02;
ie_status_novo_receb_w := ie_status_receb_w;
ds_consistencia_w := '';
if (ie_aprovar_todos_interf_w = 'N') then
	ds_consistencia_w := Consistir_Aprovacao_Exame(nr_prescricao_p, nr_seq_prescr_p, ds_consistencia_w);
	if (ds_consistencia_w <> '' AND ie_status_receb_w = 35) then
		ie_status_novo_receb_w := 30;
	end if;
end if;

if (ie_status_novo_receb_w >= 35) then
	qt_exames_consist_w := consitir_valores_interf_aprov(nr_seq_result_p, nr_seq_prescr_p, qt_exames_consist_w);
	if (qt_exames_consist_w > 0) then
		ie_status_novo_receb_w := 30;
	end if;
	if (ie_aprova_exame_w = 'N') and (ie_status_novo_receb_w >=35) then
		ie_status_novo_receb_w := 30;
		--Exame não aprovado pois possui resultado anterior fora do valor de referência. Seq prescrição: #@NR_SEQ_PRESCR#@ resultado: #@NR_SEQ_RESULTADO#@
		CALL gravar_log_lab(35,WHEB_MENSAGEM_PCK.get_texto(287855,'NR_SEQ_PRESCR='||nr_seq_prescr_p||';NR_SEQ_RESULTADO='||nr_seq_result_p),nm_usuario_p,nr_prescricao_p);
	end if;
end if;

update prescr_procedimento
set 	ie_status_atend = ie_status_novo_receb_w,
	dt_atualizacao = clock_timestamp(),
	nm_usuario = nm_usuario_p
where nr_prescricao = nr_prescricao_p
  and nr_sequencia = nr_seq_prescr_p
  and ie_status_atend = 30;



if (ie_status_novo_receb_w >= 40) then
	update 	exame_lab_result_item
	set	dt_aprovacao		= clock_timestamp(),
        dt_liberacao		= clock_timestamp(),
		nm_usuario_aprovacao	= nm_usuario_p
	where	nr_seq_resultado	= nr_seq_result_p
	  and	nr_seq_prescr		= nr_seq_prescr_p
	  and	(nr_seq_material IS NOT NULL AND nr_seq_material::text <> '');
elsif (ie_status_novo_receb_w >= 35) then
    update 	exame_lab_result_item
    set	dt_aprovacao		= clock_timestamp(),
        nm_usuario_aprovacao	= nm_usuario_p
    where	nr_seq_resultado	= nr_seq_result_p
      and	nr_seq_prescr		= nr_seq_prescr_p
      and	(nr_seq_material IS NOT NULL AND nr_seq_material::text <> '');
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_calcular_aprovar_exame ( nr_seq_result_p bigint, nr_prescricao_p bigint, nr_seq_prescr_p bigint, ie_tipo_imp_p text, nm_usuario_p text) FROM PUBLIC;

