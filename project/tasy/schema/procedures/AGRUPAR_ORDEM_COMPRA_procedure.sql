-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE agrupar_ordem_compra ( nr_ordem_compra_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_ordem_compra_w		bigint;
nr_item_oci_w			bigint;
ds_erro_w			varchar(500);
nr_seq_item_oci_w			bigint;
cd_material_w			integer;
cd_unidade_medida_compra_w	varchar(30);
vl_unitario_material_w		double precision;
qt_material_w			double precision;
ie_situacao_w			varchar(1);
cd_pessoa_solicitante_w		varchar(20);
qt_material_entregue_w		double precision;
pr_descontos_w			double precision;
cd_local_estoque_w		bigint;
ds_material_direto_w		varchar(255);
ds_observacao_w			varchar(5000);
cd_motivo_alteracao_w		bigint;
dt_entrega_w			timestamp;
nr_cot_compra_w			bigint;
nr_item_cot_compra_w		bigint;
ds_marca_w			varchar(255);
vl_item_liquido_w			double precision;
nr_seq_aprovacao_w		bigint;
dt_aprovacao_w			timestamp;
cd_centro_custo_w			bigint;
cd_conta_contabil_w		varchar(20);
nr_solic_compra_w			bigint;
nr_item_solic_compra_w		bigint;
qt_conv_unid_fornec_w		double precision;
ie_geracao_solic_w			varchar(1);
nr_seq_proj_rec_w			bigint;
pr_desc_financ_w			double precision;
pr_desc_financeiro_w			double precision;
nr_seq_lic_item_w			bigint;
nr_seq_conta_financ_w		bigint;
ie_erro_w				varchar(1);
vl_desconto_w			double precision := 0;
nr_seq_lote_fornec_w		bigint;
dt_validade_w			timestamp;
nr_atendimento_w		bigint;

c01 CURSOR FOR 
SELECT	a.cd_material, 
	a.cd_unidade_medida_compra, 
	a.vl_unitario_material, 
	a.qt_material, 
	a.ie_situacao, 
	a.cd_pessoa_solicitante, 
	a.qt_material_entregue, 
	a.pr_descontos, 
	a.cd_local_estoque, 
	a.ds_material_direto, 
	a.ds_observacao, 
	a.cd_motivo_alteracao, 
	a.nr_cot_compra, 
	a.nr_item_cot_compra, 
	a.ds_marca, 
	a.vl_item_liquido, 
	a.nr_seq_aprovacao, 
	a.dt_aprovacao, 
	a.cd_centro_custo, 
	a.cd_conta_contabil, 
	a.nr_solic_compra, 
	a.nr_item_solic_compra, 
	a.qt_conv_unid_fornec, 
	a.ie_geracao_solic, 
	a.nr_seq_proj_rec,	 
	a.nr_seq_lic_item, 
	a.nr_seq_conta_financ, 
	a.nr_ordem_compra, 
	b.dt_entrega, 
	coalesce(a.vl_desconto,0), 
	a.nr_seq_lote_fornec, 
	a.dt_validade 
from	ordem_compra_item a, 
	ordem_compra b 
where	a.nr_ordem_compra = b.nr_ordem_compra 
and	b.nr_ordem_agrup = nr_ordem_compra_p 
and	coalesce(b.dt_baixa::text, '') = '';


BEGIN 
 
ie_erro_w := 'N';
open c01;
loop 
fetch c01 into 
	cd_material_w, 
	cd_unidade_medida_compra_w, 
	vl_unitario_material_w, 
	qt_material_w, 
	ie_situacao_w, 
	cd_pessoa_solicitante_w, 
	qt_material_entregue_w, 
	pr_descontos_w, 
	cd_local_estoque_w, 
	ds_material_direto_w, 
	ds_observacao_w, 
	cd_motivo_alteracao_w, 
	nr_cot_compra_w, 
	nr_item_cot_compra_w, 
	ds_marca_w, 
	vl_item_liquido_w, 
	nr_seq_aprovacao_w, 
	dt_aprovacao_w, 
	cd_centro_custo_w, 
	cd_conta_contabil_w, 
	nr_solic_compra_w, 
	nr_item_solic_compra_w, 
	qt_conv_unid_fornec_w, 
	ie_geracao_solic_w, 
	nr_seq_proj_rec_w, 
	nr_seq_lic_item_w, 
	nr_seq_conta_financ_w, 
	nr_ordem_compra_w, 
	dt_entrega_w, 
	vl_desconto_w, 
	nr_seq_lote_fornec_w, 
	dt_validade_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	 
	select	pr_desc_financeiro 
	into STRICT	pr_desc_financ_w 
	from	ordem_compra 
	where	nr_ordem_compra = nr_ordem_compra_p;
	 
	update	ordem_compra 
	set	dt_baixa	= clock_timestamp() 
	where	nr_ordem_compra = nr_ordem_compra_w;
	 
	select	nr_atendimento 
	into STRICT	nr_atendimento_w 
	from	ordem_compra 
	where	nr_ordem_compra = nr_ordem_compra_w;
	 
	select	coalesce(max(nr_item_oci), 0) + 1 
	into STRICT	nr_seq_item_oci_w 
	from	ordem_compra_item 
	where	nr_ordem_compra = nr_ordem_compra_p;
	exception 
		when no_data_found then 
			nr_seq_item_oci_w := 1;
	end;
	insert into ordem_compra_item( 
		nr_ordem_compra, 
		nr_item_oci, 
		dt_atualizacao, 
		nm_usuario, 
		cd_material, 
		cd_unidade_medida_compra, 
		vl_unitario_material, 
		qt_material, 
		ie_situacao, 
		cd_pessoa_solicitante, 
		qt_material_entregue, 
		pr_descontos, 
		cd_local_estoque, 
		ds_material_direto, 
		ds_observacao, 
		cd_motivo_alteracao, 
		nr_cot_compra, 
		nr_item_cot_compra, 
		ds_marca, 
		vl_item_liquido, 
		nr_seq_aprovacao, 
		dt_aprovacao, 
		cd_centro_custo, 
		cd_conta_contabil, 
		nr_solic_compra, 
		nr_item_solic_compra, 
		qt_conv_unid_fornec, 
		ie_geracao_solic, 
		nr_seq_proj_rec, 
		pr_desc_financ, 
		nr_seq_lic_item, 
		nr_seq_conta_financ, 
		vl_desconto, 
		nr_seq_lote_fornec, 
		dt_validade, 
		nr_ordem_agrup, 
		nr_atendimento, 
		qt_original, 
		vl_total_item) 
	values (	nr_ordem_compra_p, 
		nr_seq_item_oci_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		cd_material_w, 
		cd_unidade_medida_compra_w, 
		vl_unitario_material_w, 
		qt_material_w, 
		ie_situacao_w, 
		cd_pessoa_solicitante_w, 
		qt_material_entregue_w, 
		pr_descontos_w, 
		cd_local_estoque_w, 
		ds_material_direto_w, 
		ds_observacao_w, 
		cd_motivo_alteracao_w, 
		nr_cot_compra_w, 
		nr_item_cot_compra_w, 
		ds_marca_w, 
		vl_item_liquido_w, 
		nr_seq_aprovacao_w, 
		dt_aprovacao_w, 
		cd_centro_custo_w, 
		cd_conta_contabil_w, 
		nr_solic_compra_w, 
		nr_item_solic_compra_w, 
		qt_conv_unid_fornec_w, 
		ie_geracao_solic_w, 
		nr_seq_proj_rec_w, 
		pr_desc_financ_w, 
		nr_seq_lic_item_w, 
		nr_seq_conta_financ_w, 
		vl_desconto_w, 
		nr_seq_lote_fornec_w, 
		dt_validade_w, 
		nr_ordem_compra_w, 
		nr_atendimento_w, 
		qt_material_w, 
		round((qt_material_w * vl_unitario_material_w)::numeric,4));
		 
	insert into ordem_compra_item_entrega( 
		nr_sequencia, 
		nr_ordem_compra, 
		nr_item_oci, 
		qt_prevista_entrega, 
		dt_prevista_entrega, 
		dt_entrega_original, 
		dt_entrega_limite, 
		nm_usuario, 
		dt_atualizacao) 
	values (	nextval('ordem_compra_item_entrega_seq'), 
		nr_ordem_compra_p, 
		nr_seq_item_oci_w, 
		qt_material_w, 
		dt_entrega_w, 
		dt_entrega_w, 
		dt_entrega_w, 
		nm_usuario_p, 
		clock_timestamp());
	 
	if (nr_solic_compra_w > 0) then 
	 
		CALL gerar_hist_solic_sem_commit( 
			nr_solic_compra_w, 
			wheb_mensagem_pck.get_texto(167815), 
			wheb_mensagem_pck.get_texto(331066) || 
			wheb_mensagem_pck.get_texto(167815), 
			'B', 
			nm_usuario_p);
	end if;
	 
end loop;
close c01;
 
if (ie_erro_w = 'N') then 
	commit;
else 
	rollback;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE agrupar_ordem_compra ( nr_ordem_compra_p bigint, nm_usuario_p text) FROM PUBLIC;

