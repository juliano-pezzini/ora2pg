-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_dt_realizacao_exame ( nr_seq_exame_p bigint, nr_prescricao_p bigint, dt_prevista_exec_p timestamp, dt_prevista_retorno_p INOUT timestamp) AS $body$
DECLARE


nr_seq_grupo_w        bigint;
ie_domingo_w          varchar(1);
ie_segunda_w          varchar(1);
ie_terca_w            varchar(1);
ie_quarta_w           varchar(1);
ie_quinta_w           varchar(1);
ie_sexta_w            varchar(1);
ie_sabado_w           varchar(1);
ie_feriado_w          varchar(1);
dia_semana_w          integer := 1;
dt_prevista_w         timestamp;
cd_estabelecimento_w  smallint;
ie_tipo_feriado_w     integer;
ds_sql_w              varchar(4000);
ie_feriado_aux_w      integer;
ds_erro_w             varchar(4000);
ds_parametros_w       varchar(4000);

c01 CURSOR FOR
SELECT	ie_domingo,
		ie_segunda,
		ie_terca,
		ie_quarta,
		ie_quinta,
		ie_sexta,
		ie_sabado,
		ie_feriado,
		ie_tipo_feriado
from	lab_exame_dia
where	coalesce(nr_seq_grupo, nr_seq_grupo_w) = nr_seq_grupo_w
and		coalesce(nr_seq_exame, nr_seq_exame_p) = nr_seq_exame_p
and		coalesce(cd_estabelecimento, 0) = coalesce(cd_estabelecimento_w, 0)
and		ie_tipo_regra = 'p'
order by
	coalesce(nr_seq_exame, 0),
	coalesce(nr_seq_grupo, 0);


BEGIN

if ( establishment_timezone_utils.startofday(dt_prevista_exec_p) = establishment_timezone_utils.startofday(clock_timestamp()) ) then
	select	max(nr_seq_grupo)
	into STRICT	nr_seq_grupo_w
	from	exame_laboratorio
	where	nr_seq_exame = nr_seq_exame_p;

	select	max(cd_estabelecimento)
	into STRICT 	cd_estabelecimento_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;

	open c01;
	loop
	fetch c01 into	ie_domingo_w,
					ie_segunda_w,
					ie_terca_w,
					ie_quarta_w,
					ie_quinta_w,
					ie_sexta_w,
					ie_sabado_w,
					ie_feriado_w,
					ie_tipo_feriado_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		ie_domingo_w := ie_domingo_w;
	end loop;
	close c01;
	
	select	pkg_date_utils.get_weekday(clock_timestamp())
	into STRICT	dia_semana_w
	;

	dt_prevista_w := dt_prevista_exec_p;

	begin
		ie_feriado_aux_w := lab_obter_se_feriado(cd_estabelecimento_w, dt_prevista_w, ie_tipo_feriado_w);
		ds_sql_w := 'call atualiza_dt_realiza_exame_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11)into :dt_prevista_w';
		EXECUTE ds_sql_w using in dt_prevista_exec_p,
										 in dia_semana_w, 
										 in ie_domingo_w, 
										 in ie_segunda_w, 
										 in ie_terca_w, 
										 in ie_quarta_w, 
										 in ie_quinta_w, 
										 in ie_sexta_w, 
										 in ie_sabado_w, 
										 in ie_feriado_aux_w, 
										 in ie_feriado_w, 
										 out dt_prevista_w;

	exception
		when others then
		ds_erro_w :=substr(sqlerrm, 1, 4000);
		ds_parametros_w := substr('nr_seq_exame_p: '||nr_seq_exame_p||'-'||'nr_prescricao_p: '||nr_prescricao_p||'-'||'dt_prevista_retorno_p: '||dt_prevista_retorno_p||'-'||'dt_prevista_exec_p: '||dt_prevista_exec_p||'-'||
								 'dia_semana_w: '||dia_semana_w||'-'||'ie_domingo_w: '||ie_domingo_w ||'-'||'ie_segunda_w: '||ie_segunda_w ||'-'||'ie_terca_w: '||ie_terca_w ||'-'||'ie_quarta_w: '||ie_quarta_w||'-'||
								 'ie_quinta_w: '||ie_quinta_w ||'-'||'ie_sexta_w: '||ie_sexta_w ||'-'||'ie_sabado_w: '||ie_sabado_w ||'-'||'ie_feriado_aux_w: '||ie_feriado_aux_w||'-'||
								 'ie_feriado_w: '||ie_feriado_w ||'-'||'dt_prevista_w: '||dt_prevista_w, 1, 4000);
		CALL gravar_log_medical_device('ATUALIZA_DT_REALIZACAO_EXAME', 'ATUALIZA_DT_REALIZA_EXAME_MD', ds_parametros_w, ds_erro_w, wheb_usuario_pck.get_nm_usuario, 's');
		dt_prevista_w := null;
	end;
	dt_prevista_retorno_p := dt_prevista_w;
else
	dt_prevista_retorno_p := dt_prevista_exec_p;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_dt_realizacao_exame ( nr_seq_exame_p bigint, nr_prescricao_p bigint, dt_prevista_exec_p timestamp, dt_prevista_retorno_p INOUT timestamp) FROM PUBLIC;

