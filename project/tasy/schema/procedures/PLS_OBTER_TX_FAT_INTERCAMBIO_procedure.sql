-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_tx_fat_intercambio ( nr_seq_conta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, tx_intercambio_p INOUT bigint, nr_seq_regra_p INOUT bigint) AS $body$
DECLARE


dt_atendimento_referencia_w		timestamp;
nr_seq_segurado_w		bigint;
nr_seq_contrato_w			bigint;
nr_seq_intercambio_w		bigint;
nr_seq_regra_w			bigint;
nr_seq_plano_w			bigint;
tx_intercambio_w			double precision;
sg_estado_prot_w			pessoa_juridica.sg_estado%type;
sg_estado_benef_w		pessoa_juridica.sg_estado%type;
cd_cooperativa_w			varchar(10);
ie_tipo_intercambio_w		varchar(10);
ie_pcmso_w			varchar(1);
nr_seq_congenere_w		bigint;
ie_tipo_conta_w			varchar(1);
nr_seq_fatura_w			bigint;
qt_dia_proced_receb_w		bigint;
dt_recebimento_fatura_w		timestamp;
ie_tipo_regra_w			varchar(3);

C01 CURSOR FOR
	SELECT	nr_sequencia,
		tx_intercambio
	from	pls_contrato_tx_intercamb
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	((nr_seq_contrato	= nr_seq_contrato_w) or (coalesce(nr_seq_contrato::text, '') = ''))
	and	((nr_seq_intercambio	= nr_seq_intercambio_w) or (coalesce(nr_seq_intercambio::text, '') = ''))
	and	trunc(dt_atendimento_referencia_w) between trunc(dt_inicio_vigencia) and fim_dia(coalesce(dt_fim_vigencia,dt_atendimento_referencia_w+1))
	and	((coalesce(ie_tipo_intercambio,'A')	= coalesce(ie_tipo_intercambio_w,'A'))	or (coalesce(ie_tipo_intercambio,'A') = 'A'))
	and	coalesce(nr_seq_plano,nr_seq_plano_w) = nr_seq_plano_w
	and	ie_situacao	= 'S'
	order by dt_inicio_vigencia,
		coalesce(nr_seq_contrato,0),
		coalesce(nr_seq_intercambio,0),
		coalesce(nr_seq_plano,0),
		coalesce(ie_tipo_intercambio,0);

C02 CURSOR FOR
	SELECT	a.pr_taxa
	from	pls_regra_intercambio	a
	where	trunc(coalesce(dt_atendimento_referencia_w,clock_timestamp()),'dd') between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,clock_timestamp())
	and	coalesce(a.qt_dias_envio_taxa,0)	>= qt_dia_proced_receb_w
	and	((pls_obter_tipo_intercambio(nr_seq_congenere_w,cd_estabelecimento_p) = coalesce(a.ie_tipo_intercambio,'A')) or (coalesce(a.ie_tipo_intercambio,'A') = 'A'))
	and	coalesce(a.nr_seq_congenere_sup,coalesce(a.nr_seq_congenere,nr_seq_congenere_w))		= nr_seq_congenere_w
	and	coalesce(a.nr_seq_plano,nr_seq_plano_w) = nr_seq_plano_w
	and	ie_cobranca_pagamento	= 'C'
	and	((ie_pcmso		= ie_pcmso_w) or (ie_pcmso = 'N'))
	and	(((a.nr_seq_grupo_congenere IS NOT NULL AND a.nr_seq_grupo_congenere::text <> '') and exists ( 	SELECT	1
									from	pls_cooperativa_grupo	x
									where	x.nr_seq_grupo = a.nr_seq_grupo_congenere
									and	x.nr_seq_congenere = nr_seq_congenere_w  )) or
		coalesce(a.nr_seq_grupo_congenere::text, '') = '')
	and (coalesce(a.ie_tipo_regra::text, '') = '' or a.ie_tipo_regra = ie_tipo_regra_w)
	order by dt_inicio_vigencia,
		coalesce(nr_seq_congenere,0),
		coalesce(nr_seq_plano,0),
		coalesce(ie_cobranca_pagamento,0),
		coalesce(qt_dias_envio_taxa,0),
		coalesce(nr_seq_grupo_congenere,0),
		CASE WHEN ie_pcmso='N' THEN -1  ELSE 1 END;


BEGIN
/* Francisco - 30/08/2013 - OS 637684
Por default colocar o tipo de regra como cooperativa
*/
ie_tipo_regra_w	:= 'CO';

begin
select	b.dt_emissao,
	a.nr_sequencia,
	a.nr_seq_contrato,
	a.nr_seq_intercambio,
	b.cd_cooperativa,
	--a.nr_seq_plano,
	pls_obter_produto_benef(a.nr_sequencia, b.dt_atendimento_referencia),
	coalesce(a.ie_pcmso,'N'),
	b.ie_tipo_conta,
	b.nr_seq_fatura
into STRICT	dt_atendimento_referencia_w,
	nr_seq_segurado_w,
	nr_seq_contrato_w,
	nr_seq_intercambio_w,
	cd_cooperativa_w,
	nr_seq_plano_w,
	ie_pcmso_w,
	ie_tipo_conta_w,
	nr_seq_fatura_w
from	pls_segurado	a,
	pls_conta	b
where	a.nr_sequencia	= b.nr_seq_segurado
and	b.nr_sequencia	= nr_seq_conta_p;
exception
when others then
	nr_seq_segurado_w		:= '';
	nr_seq_contrato_w		:= '';
	nr_seq_intercambio_w		:= '';
	dt_atendimento_referencia_w	:= '';
	nr_seq_plano_w			:= '';
end;

if (ie_tipo_conta_w = 'I') then

	select	max(dt_recebimento_fatura)
	into STRICT	dt_recebimento_fatura_w
	from	ptu_fatura
	where	nr_sequencia	= nr_seq_fatura_w;
else
	dt_recebimento_fatura_w	:= clock_timestamp();
end if;

--if	(ie_tipo_conta_w	= 'I') then /* OS 460585 - Visto com Vagner da unimed litoral para gerar a taxa também quando for intrcâmbio cobrança */
qt_dia_proced_receb_w := (trunc(coalesce(dt_recebimento_fatura_w,clock_timestamp())) - trunc(dt_atendimento_referencia_w));

begin
select	d.sg_estado
into STRICT	sg_estado_prot_w
from	pls_protocolo_conta	a,
	pls_conta		b,
	pls_congenere		c,
	pessoa_juridica		d
where	a.nr_sequencia		= b.nr_seq_protocolo
and	a.nr_seq_congenere	= c.nr_sequencia
and	d.cd_cgc		= c.cd_cgc
and	b.nr_sequencia		= nr_seq_conta_p;
exception
when others then
	sg_estado_prot_w	:= '';
end;

begin
select	b.sg_estado,
	a.nr_sequencia
into STRICT	sg_estado_benef_w,
	nr_seq_congenere_w
from	pls_congenere	a,
	pessoa_juridica	b
where	a.nr_sequencia	= pls_obter_seq_cooperativa(cd_cooperativa_w)
and	a.cd_cgc	= b.cd_cgc;
exception
when others then
	sg_estado_benef_w	:= '';
end;

/* Francisco - 30/08/2013 - OS 637684 - Se não achou por cooperativa,
usar operadora congênere */
if (coalesce(nr_seq_congenere_w::text, '') = '') then
	begin
	select	a.nr_seq_congenere
	into STRICT	nr_seq_congenere_w
	from	pls_segurado a
	where	a.nr_sequencia	= nr_seq_segurado_w
	and	a.ie_tipo_segurado = 'C';
	exception
		when others then
		nr_seq_congenere_w	:= null;
	end;

	if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
		ie_tipo_regra_w	:= 'CE';
	end if;
end if;

if (sg_estado_benef_w = sg_estado_prot_w) then
	ie_tipo_intercambio_w	:= 'E';
else
	ie_tipo_intercambio_w	:= 'N';
end if;


/*Caso não haja regra de intercambio para o segurado devera verificar na taxa da operadora congenere*/

if (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
	open C01;
	loop
	fetch C01 into
		nr_seq_regra_w,
		tx_intercambio_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
end if;

if	(( coalesce(tx_intercambio_w,0) = 0) and (coalesce(nr_seq_intercambio_w,0) = 0))then

	open C02;
	loop
	fetch C02 into
		tx_intercambio_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
	end loop;
	close C02;
end if;

nr_seq_regra_p	:= nr_seq_regra_w;
tx_intercambio_p := coalesce(tx_intercambio_w,0);


--Não é para commit em procedures intermediarias
--Commit
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_tx_fat_intercambio ( nr_seq_conta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, tx_intercambio_p INOUT bigint, nr_seq_regra_p INOUT bigint) FROM PUBLIC;

