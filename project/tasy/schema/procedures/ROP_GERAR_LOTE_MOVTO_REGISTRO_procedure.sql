-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rop_gerar_lote_movto_registro ( nr_seq_lote_roupa_p bigint, nr_seq_local_p bigint, nr_seq_operacao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


cd_pessoa_fisica_w	varchar(10);
nr_seq_lote_movto_w	bigint;
nr_seq_movto_roupa_w	bigint;
nr_seq_roupa_w		bigint;
qt_roupa_w		bigint;
qt_existe_w		bigint;
ie_libera_lote_roupa_w	varchar(1);

c01 CURSOR FOR
	SELECT	a.nr_sequencia,
	        a.qt_roupa
	from	rop_roupa a
	where	a.nr_seq_lote_roupa = nr_seq_lote_roupa_p
	and	coalesce(a.dt_baixa::text, '') = ''
	and	a.ie_situacao = 'A'
	and	coalesce(a.nr_seq_local::text, '') = '';


BEGIN

select	obter_valor_param_usuario(1301,13,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p)
into STRICT	ie_libera_lote_roupa_w
;

select	substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10)
into STRICT	cd_pessoa_fisica_w
;

select	count(*)
into STRICT	qt_existe_w
from	rop_roupa
where	nr_seq_lote_roupa = nr_seq_lote_roupa_p
and	coalesce(dt_baixa::text, '') = ''
and	ie_situacao = 'A'
and	coalesce(nr_seq_local::text, '') = '';

if (qt_existe_w > 0) then
	begin
	select	nextval('rop_lote_movto_seq')
	into STRICT	nr_seq_lote_movto_w
	;

	insert into rop_lote_movto(
		nr_sequencia,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_operacao,
		cd_pessoa_fisica,
		nr_seq_local,
		dt_registro,
		dt_liberacao)
	values (nr_seq_lote_movto_w,
		cd_estabelecimento_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_operacao_p,
		cd_pessoa_fisica_w,
		nr_seq_local_p,
		clock_timestamp(),
		null);--Alterado para realizar update na dt_liberacao apenas no final
	open c01;
	loop
	fetch c01 into
		nr_seq_roupa_w,
		qt_roupa_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		select	nextval('rop_movto_roupa_seq')
		into STRICT	nr_seq_movto_roupa_w
		;
	
		insert into rop_movto_roupa(
			nr_sequencia,
			nr_seq_lote,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_roupa,
			dt_origem,
			cd_estabelecimento,
			ie_oper_correta,
			qt_roupa)
		values (nr_seq_movto_roupa_w,
			nr_seq_lote_movto_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_roupa_w,
			clock_timestamp(),
			cd_estabelecimento_p,
			'S',
			qt_roupa_w);

		update	rop_roupa
		set	nr_seq_local	= nr_seq_local_p,
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p	
		where	nr_sequencia	= nr_seq_roupa_w;
		end;
	end loop;
	close c01;
	end;
	
	if (ie_libera_lote_roupa_w = 'S') then
		update	rop_lote_roupa
		set	dt_liberacao = clock_timestamp()
		where	nr_sequencia = nr_seq_lote_roupa_p;
	end if;
	--Alterado para realizar update na dt_liberacao apenas no final, pois e necessario para executar a trigger ROP_LOTE_MOVTO_ATUAL
	update	rop_lote_movto
	set	dt_liberacao = clock_timestamp()
	where	nr_sequencia = nr_seq_lote_movto_w;
end if;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rop_gerar_lote_movto_registro ( nr_seq_lote_roupa_p bigint, nr_seq_local_p bigint, nr_seq_operacao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

