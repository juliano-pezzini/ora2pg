-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_tipo_prest_consist ( nr_seq_conta_p bigint, nm_usuario_p text, nr_seq_prestador_p INOUT bigint, nr_seq_regra_p INOUT bigint) AS $body$
DECLARE


					
nr_seq_prestador_exec_w		bigint;
nr_seq_prestador_w		bigint;
nr_seq_tipo_atendimento_w	bigint;
ie_prest_consistencia_w		varchar(15);
ie_tipo_guia_w			varchar(2);
ie_tipo_prest_atend_w		varchar(5);
ie_tipo_prest_exec_w		varchar(5);	
nr_seq_regra_w			bigint;
ie_regime_atendimento_w	pls_conta.ie_regime_atendimento%type;
ie_saude_ocupacional_w	pls_conta.ie_saude_ocupacional%type;
	
C01 CURSOR FOR
	SELECT	nr_sequencia,
		ie_prest_consistencia
	from 	pls_prestador_consistencia
	where	ie_situacao	= 'A'
	and	(( coalesce(ie_tipo_prest_atend::text, '') = '') or (ie_tipo_prest_atend =ie_tipo_prest_atend_w ))
	and	(( coalesce(ie_tipo_prest_exec::text, '') = '') or (ie_tipo_prest_exec = ie_tipo_prest_exec_w))
	and	(( coalesce(ie_tipo_guia::text, '') = '') or ( ie_tipo_guia_w = ie_tipo_guia))
	and	(( coalesce(ie_regime_atendimento::text, '') = '') or ( ie_regime_atendimento =  ie_regime_atendimento_w))
	and	(( coalesce(ie_saude_ocupacional::text, '') = '') or ( ie_saude_ocupacional =  ie_saude_ocupacional_w));	
	

BEGIN
nr_seq_prestador_p	:= null;
nr_seq_regra_p		:= null;

select	b.nr_seq_prestador,
	a.nr_seq_prestador_exec,
	a.ie_tipo_guia,
	a.nr_seq_tipo_atendimento,
	a.ie_regime_atendimento,
	a.ie_saude_ocupacional
into STRICT	nr_seq_prestador_w,
	nr_seq_prestador_exec_w,
	ie_tipo_guia_w,
	nr_seq_tipo_atendimento_w,
	ie_regime_atendimento_w,
	ie_saude_ocupacional_w
from	pls_protocolo_conta b,
	pls_conta a
where	a.nr_seq_protocolo	= b.nr_sequencia
and	a.nr_sequencia		= nr_seq_conta_p;

/* Verificar se o prestador de atendimento e PF ou PJ */

begin
select	CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN 'J'  ELSE 'F' END
into STRICT	ie_tipo_prest_atend_w
from	pls_prestador
where	nr_sequencia	= nr_seq_prestador_w;
exception
when others then
	ie_tipo_prest_atend_w	:= '';
end;

/* Verificar se o prestador executor e PF ou PJ */

begin
select	CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN 'J'  ELSE 'F' END
into STRICT	ie_tipo_prest_exec_w
from	pls_prestador
where	nr_sequencia	= nr_seq_prestador_exec_w;
exception
when others then
	ie_tipo_prest_atend_w	:= '';
end;

open C01;
loop
fetch C01 into
	nr_seq_regra_w,
	ie_prest_consistencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
end loop;
close C01;
	
/* Se a regra retornar Atendimento, a procedure ira retornar o Prestador de atendimento */
	
if (ie_prest_consistencia_w = 'A') then
	nr_seq_prestador_p := nr_seq_prestador_w;
/* Se a regra retornar Executor, a procedure ira retornar o Prestador Executor */
		
elsif (ie_prest_consistencia_w = 'E') then
	nr_seq_prestador_p := nr_seq_prestador_exec_w;	
end if;
	
/* Retornar a sequencia da regra */
	
nr_seq_regra_p	:= nr_seq_regra_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_tipo_prest_consist ( nr_seq_conta_p bigint, nm_usuario_p text, nr_seq_prestador_p INOUT bigint, nr_seq_regra_p INOUT bigint) FROM PUBLIC;

