-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicar_prescricao_enfemagem ( nr_sequencia_p bigint, cd_prescritor_p text, nr_atendimento_p bigint, dt_sae_p timestamp, ie_intervensao_p text, ie_agrupa_dia_p text, nm_usuario_p text, nr_seq_modelo_p bigint, nr_sequencia_sae_p INOUT bigint, ie_tipo_p text default 'SAE', nr_SAEInCommaText_p text default null) AS $body$
DECLARE

/* 
N - Prescricao selecionada
S - Prescricao das ultimas 24 horas
H - Prescricoes selecionadas
*/
nr_sequencia_w			bigint;
nr_sequencia_ww			bigint;
nr_seq_diag_w			bigint;
nr_seq_diag_novo_w		bigint;
nr_seq_w			bigint;
nr_seq_proc_w			bigint;
qt_pontuacao_w			bigint;
ds_origem_w			varchar(1);
nr_seq_apres_w			bigint;
cd_intervalo_w			varchar(7);
ds_horarios_w			varchar(2000);
ds_horarios_ww			varchar(2000);
qt_intervencao_w		integer;
hr_prim_horario_w		varchar(5);
nr_seq_topografia_w		bigint;
ie_se_necessario_w		varchar(1);
ds_observacao_w			varchar(2000);
ie_suspenso_w			varchar(1);
ie_adep_w			varchar(1);
nr_seq_inter_w			bigint;
nr_prescricao_ant_w		bigint;
nr_prescricao_w			bigint;
nr_seq_interv_ant_w		bigint;
cd_pessoa_fisica_w		varchar(10);
ie_horarios_sae_w		varchar(3);
ds_comentario_w			text := '';
nr_seq_comentario_w		bigint;
nr_seq_comentario_atual_w	bigint := null;
ie_duplica_comentario_w 	varchar(1);
vl_prim_hor_w			varchar(15);
hr_prim_horario_ww		timestamp;
nr_intervalo_w			real;
dt_sae_w			timestamp;
ie_hr_interven_sae_w		varchar(1);
nr_seq_evolucao_diag_w		bigint;
ie_lado_w			varchar(1);
nr_sae_origem_w			varchar(255);
nr_seq_item_w			bigint;
nr_seq_result_w			bigint;
qt_horas_validade_w		bigint;
ie_situacao_w			varchar(1);
ds_prim_horario_w		varchar(255);
ie_se_necessario_ww		varchar(1);
qt_ponto_w			bigint;
nr_ocorrencia_w			double precision;
ie_permite_exclusao_w		varchar(10);
pr_likert_w			double precision;
ie_diagnostico_w		varchar(10);
ie_prim_horario_sae_w	varchar(10);
dt_primeiro_horario_w	timestamp;
cd_setor_atendimento_w	bigint;
ie_estender_w			varchar(10);
ie_gerar_prescricao_w		varchar(10);
qt_ponto_atual_w		bigint;
qt_ponto_total_w		bigint;
nr_prescr_w			bigint;
nr_seq_modelo_w			bigint;
qt_reg_w			bigint;
ie_inserir_w			boolean;
ie_hr_interven_sae_origem_w	varchar(10);
ie_faose_w			varchar(15);
IE_PROFISSIONAL_w		varchar(15);
ie_origem_w			varchar(15);
ie_duplicar_w			varchar(3);
cd_setor_atend_origem_w		bigint;
classificacao_setor_w		varchar(15);
ds_final_turno_w		varchar(255) := '';
dt_final_turno_w		timestamp;
dt_prim_horario_prescr_w	timestamp;
cd_profissional_w       varchar(15);
cd_estabelecimento_w	bigint;
ie_agora_w              varchar(1);
ie_param_agora_sae_w	varchar(1);
nr_agrupamento_w	prescr_material.nr_agrupamento%type;
nr_seq_mat_w	prescr_material.nr_sequencia%type;

c00 CURSOR FOR
	SELECT	distinct
		nr_sequencia,
		nr_prescricao,
		(SELECT count(*) from prescr_material x where x.nr_prescricao = a.nr_prescricao) qt_reg
	from	pe_prescricao a
	where	nr_sequencia	<> nr_sequencia_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	coalesce(dt_suspensao::text, '') = ''
	and	ie_agrupa_dia_p = 'N'
	and 	nr_sequencia = nr_sequencia_p
	
union all

	select	distinct
		nr_sequencia,
		nr_prescricao,
		(select count(*) from prescr_material x where x.nr_prescricao = a.nr_prescricao) qt_reg
	from	pe_prescricao a
	where	nr_sequencia	<> nr_sequencia_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	coalesce(dt_suspensao::text, '') = ''
	and	ie_agrupa_dia_p = 'S' 
	and	cd_pessoa_fisica = cd_pessoa_fisica_w 
	and dt_prescricao between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_sae_w) and ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(dt_sae_w)
	
union all

	select	distinct
		nr_sequencia,
		nr_prescricao,
		(select count(*) from prescr_material x where x.nr_prescricao = a.nr_prescricao) qt_reg
	from	pe_prescricao a
	where	nr_sequencia	<> nr_sequencia_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	coalesce(dt_suspensao::text, '') = ''
	and	ie_agrupa_dia_p = 'H' 
	and	cd_pessoa_fisica = cd_pessoa_fisica_w 
	and position(a.nr_sequencia in nr_SAEInCommaText_p) > 0
	order by qt_reg desc,2,1;

c01 CURSOR FOR
	SELECT	a.nr_seq_diag,
		a.nr_sequencia,
		a.nr_seq_evolucao_diag,
		a.qt_pontuacao,
		a.pr_likert,
		A.QT_PONTO_ATUAL,
		A.QT_PONTO_TOTAL,
		a.ie_origem
	from	pe_prescr_diag a,
		pe_diagnostico b
	where	a.nr_seq_prescr	= nr_sequencia_ww
	and	a.NR_SEQ_DIAG	= b.nr_sequencia
	and	b.ie_situacao	= 'A'
	and	not exists (	SELECT	1
					from	pe_prescr_diag x
					where	x.nr_seq_prescr	= nr_sequencia_w
					and	x.nr_seq_diag	 = a.nr_seq_diag);
	

c02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_proc,
		a.qt_pontuacao,
		a.ds_origem,
		a.nr_seq_apres,
		a.cd_intervalo,
		a.ds_horarios,
		a.qt_intervencao,
		a.hr_prim_horario,
		a.nr_seq_topografia,
		a.ie_se_necessario,
		a.ds_observacao,
		a.ie_suspenso,
		a.ie_adep,
		a.ie_lado,
		a.nr_ocorrencia,
		a.ie_permite_exclusao,
		a.nr_seq_diag,
		a.nr_seq_item,
		a.nr_seq_result,
		a.ie_faose,
		a.IE_PROFISSIONAL
	from	pe_prescr_proc a,
		pe_prescricao b
	where	a.nr_seq_prescr	= b.nr_sequencia
	and	coalesce(b.ie_situacao,'A') = 'A'
	and	a.nr_seq_prescr	= nr_sequencia_ww
	and	coalesce(a.dt_suspensao::text, '') = ''
	and	not exists (	SELECT	1
					from	pe_prescr_proc	x
					where	x.nr_seq_prescr		= nr_sequencia_w
					and	x.nr_seq_proc		= a.nr_seq_proc)
	order by 1;
					
					
					
C03 CURSOR FOR
	SELECT	a.nr_seq_item,
		a.nr_seq_result,
		a.ds_observacao,
		a.nr_seq_topografia,
		a.ie_lado,
		a.qt_ponto
	from	pe_prescr_item_result a,
		pe_item_examinar b
	where	a.nr_seq_prescr	= nr_sequencia_ww
	and	a.nr_seq_item = b.nr_sequencia
	and	coalesce(b.ie_situacao,'A') = 'A'
	and	not exists (	SELECT	1
					from	pe_prescr_item_result	x
					where	x.nr_seq_prescr		= nr_sequencia_w
					and	x.nr_seq_item		= a.nr_seq_item
					and	x.nr_seq_result		= a.nr_seq_result)
	and (Obter_Se_Mostra_item_sae(nr_seq_modelo_w,b.nr_sequencia,cd_setor_atendimento_w)	= 'S')
	order by a.nr_sequencia;
	
C04 CURSOR FOR
	SELECT	*
	from	qua_evento_paciente
	where	nr_seq_sae = nr_sequencia_p
	order by nr_sequencia;
	
C05 CURSOR FOR
	SELECT	nr_prescricao_w nr_prescricao,
			a.nr_sequencia,
			a.ie_origem_inf,
			a.cd_material,
			a.cd_unidade_medida,
			a.qt_dose,
			a.qt_unitaria,
			a.qt_material,
			clock_timestamp() dt_atualizacao,
			nm_usuario_p nm_usuario,
			a.ie_via_aplicacao,
			CASE WHEN Obter_regra_dispensacao_SAE(cd_estabelecimento_w, a.cd_material, a.cd_unidade_medida_dose, a.ie_via_aplicacao, coalesce(a.cd_intervalo,cd_intervalo_w), nr_atendimento_p, 'U', a.nr_prescricao, a.nr_sequencia)='K' THEN a.cd_motivo_baixa  ELSE 0 END  cd_motivo_baixa,
			a.ie_utiliza_kit,
			a.cd_unidade_medida_dose,
			a.ie_urgencia,
			a.nr_ocorrencia,
			a.qt_total_dispensar,
			a.ie_medicacao_paciente,
			a.ie_agrupador,
			a.ie_suspenso,
			a.ie_se_necessario,
			a.ie_status_cirurgia,
			a.ie_bomba_infusao,
			a.ie_aplic_bolus,
			a.ie_aplic_lenta,
			a.ie_acm,
			a.qt_baixa_especial,
			a.ie_erro,
			a.ie_cultura_cih,
			a.ie_antibiograma,
			a.ie_uso_antimicrobiano,
			a.ie_recons_diluente_fixo,
			a.ie_sem_aprazamento,
			a.ie_cobra_paciente,
			a.ie_dose_espec_agora,
			a.ie_tipo_medic_hd,
			nr_seq_inter_w nr_seq_inter,
			a.ie_intervalo_dif,
			coalesce(a.cd_intervalo,cd_intervalo_w) cd_intervalo,
			coalesce(a.DS_HORARIOS,ds_horarios_w) ds_horarios,
			PKG_DATE_FORMATERS_TZ.TO_VARCHAR(hr_prim_horario_ww, 'shortTime', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone) hr_prim_horario
	from	prescr_material a,
			material	b
	where	a.nr_prescricao	= nr_prescr_w
	and		a.nr_seq_pe_proc	= nr_seq_interv_ant_w
	and		coalesce(a.dt_suspensao::text, '') = ''
	and		coalesce(a.IE_SUSPENSO,'N')	= 'N'
	AND		coalesce(a.CD_MATERIAL_BAIXA,a.cd_material) = b.cd_material
	AND		b.ie_situacao = 'A'
	and		coalesce(a.nr_seq_kit::text, '') = ''
	and		not exists (	SELECT	1
							from	prescr_material	x
							where	x.nr_prescricao		= nr_prescricao_w
							and		x.cd_material		= a.cd_material
							and		x.nr_seq_pe_proc	= nr_seq_inter_w);
	
c04_w c04%rowtype;
	
BEGIN

ie_duplica_comentario_w := obter_param_usuario(281, 373, obter_perfil_ativo, nm_usuario_p, coalesce(obter_estab_atend(nr_atendimento_p),0), ie_duplica_comentario_w);
vl_prim_hor_w := Obter_Param_Usuario(281, 325, obter_perfil_ativo, nm_usuario_p, coalesce(obter_estab_atend(nr_atendimento_p),0), vl_prim_hor_w);
ie_hr_interven_sae_w := Obter_Param_Usuario(281, 472, obter_perfil_ativo, nm_usuario_p, coalesce(obter_estab_atend(nr_atendimento_p),0), ie_hr_interven_sae_w);
ie_diagnostico_w := Obter_Param_Usuario(281, 781, obter_perfil_ativo, nm_usuario_p, coalesce(obter_estab_atend(nr_atendimento_p),0), ie_diagnostico_w);
ie_prim_horario_sae_w := Obter_Param_Usuario(281, 388, obter_perfil_ativo, nm_usuario_p, coalesce(obter_estab_atend(nr_atendimento_p),0), ie_prim_horario_sae_w);
ie_estender_w := Obter_Param_Usuario(281, 775, obter_perfil_ativo, nm_usuario_p, coalesce(obter_estab_atend(nr_atendimento_p),0), ie_estender_w);
ie_gerar_prescricao_w := Obter_Param_Usuario(281, 806, obter_perfil_ativo, nm_usuario_p, coalesce(obter_estab_atend(nr_atendimento_p),0), ie_gerar_prescricao_w);
ie_hr_interven_sae_origem_w := Obter_Param_Usuario(281, 940, obter_perfil_ativo, nm_usuario_p, coalesce(obter_estab_atend(nr_atendimento_p),0), ie_hr_interven_sae_origem_w);
ie_duplicar_w := Obter_Param_Usuario(281, 365, obter_perfil_ativo, nm_usuario_p, coalesce(obter_estab_atend(nr_atendimento_p),0), ie_duplicar_w);
ie_horarios_sae_w := Obter_Param_Usuario(281, 1415, obter_perfil_ativo, nm_usuario_p, coalesce(obter_estab_atend(nr_atendimento_p),0), ie_horarios_sae_w);
ie_param_agora_sae_w := Obter_Param_Usuario(281, 1466, obter_perfil_ativo, nm_usuario_p, coalesce(obter_estab_atend(nr_atendimento_p),0), ie_param_agora_sae_w);


cd_profissional_w :=  Obter_Dados_Usuario_Opcao(nm_usuario_p,'C');	
cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
cd_setor_atendimento_w	:= obter_setor_atendimento(nr_atendimento_p);

if (ie_duplicar_w = 'C') and (cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '')then
		
	classificacao_setor_w := obter_dados_setor(cd_setor_atendimento_w, 'CL');
	
	select 	cd_setor_atendimento
	into STRICT	cd_setor_atend_origem_w
	from	pe_prescricao
	where	nr_sequencia = nr_sequencia_p;
	
	if ( obter_dados_setor(cd_setor_atend_origem_w, 'CL') <> classificacao_setor_w ) then	
		--(obter_texto_tasy(192760, wheb_usuario_pck.get_nr_seq_idioma),null);
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(192760);
	end if;
end if;	

CALL consiste_regra_sae(nr_atendimento_p, obter_setor_atendimento(nr_atendimento_p));

select	dt_prescricao,
	qt_horas_validade,
	coalesce(nr_seq_modelo_p,nr_seq_modelo)
into STRICT	dt_sae_w,
	qt_horas_validade_w,
	nr_seq_modelo_w
from	pe_prescricao
where	nr_sequencia = nr_sequencia_p;


select	coalesce(max(nr_prescricao),0),
	coalesce(max(cd_pessoa_fisica),'')
into STRICT	nr_prescricao_ant_w,
	cd_pessoa_fisica_w
from	pe_prescricao
where	nr_sequencia	= nr_sequencia_p;

select	nextval('pe_prescricao_seq')
into STRICT	nr_sequencia_w
;

cd_setor_atendimento_w      := obter_setor_atendimento(nr_atendimento_p);
dt_primeiro_horario_w       := OBTER_PRIM_HOR_SAE(dt_sae_p,cd_setor_atendimento_w,nm_usuario_p);

/*[SO-2224867]*/

if (ie_prim_horario_sae_w = '5') then

	select	ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_sae_p, Obter_Prim_Horario_Prescricao(nr_atendimento_p,cd_setor_atendimento_w,dt_sae_p,nm_usuario_p,'S'))
	into STRICT	dt_prim_horario_prescr_w
	from	pe_prescricao
	where	nr_sequencia	= nr_sequencia_p;
	
	if (dt_prim_horario_prescr_w IS NOT NULL AND dt_prim_horario_prescr_w::text <> '') then
		dt_primeiro_horario_w := dt_prim_horario_prescr_w;
	end if;
	
end if;

if (dt_primeiro_horario_w IS NOT NULL AND dt_primeiro_horario_w::text <> '') then
	qt_horas_validade_w	:= obter_horas_validade_SAE(dt_primeiro_horario_w,nr_atendimento_p,'A',ie_estender_w,dt_sae_p,null);
end if;

if (vl_prim_hor_w = '4') then
	ds_final_turno_w := obter_data_equipe_leito('VA', null, ds_final_turno_w);
	if (ds_final_turno_w IS NOT NULL AND ds_final_turno_w::text <> '') then
		dt_final_turno_w := to_Date(ds_final_turno_w,'dd/mm/yyyy hh24:mi:ss');
	end if;
end if;

insert into pe_prescricao(
	nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	dt_prescricao,
	cd_prescritor,
	nr_atendimento,
	cd_pessoa_fisica,
	dt_liberacao,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	nr_seq_modelo,
	qt_horas_validade,
	ie_situacao,
	cd_setor_atendimento,
	nr_sae_origem,
	ie_rn,
	nr_recem_nato,
	dt_primeiro_horario,
	dt_validade_prescr,
	ds_observacao,
	ie_tipo,
	ie_agora)
SELECT	nr_sequencia_w,
	clock_timestamp(),
	nm_usuario_p,
	dt_sae_p,
	cd_prescritor_p,
	case when coalesce(nr_atendimento_p,nr_atendimento) = 0 then null else coalesce(nr_atendimento_p,nr_atendimento) end,		
	coalesce(obter_pessoa_atendimento(coalesce(nr_atendimento_p,nr_atendimento),'C'),cd_pessoa_fisica),
	null,
	clock_timestamp(),
	nm_usuario_p,
	coalesce(nr_seq_modelo_w,nr_seq_modelo),
	coalesce(qt_horas_validade_w,qt_horas_validade),
	'A',
	cd_setor_atendimento_w,
	nr_sequencia_p,
	coalesce(ie_rn,'N'),
	nr_recem_nato,
	dt_primeiro_horario_w,
	dt_final_turno_w,
	ds_observacao,
	coalesce(ie_tipo_p,coalesce(ie_tipo,'SAE')),
	CASE WHEN ie_param_agora_sae_w='S' THEN  ie_agora  ELSE 'N' END 
from	pe_prescricao
where	nr_sequencia	= nr_sequencia_p
and	coalesce(ie_situacao,'A') = 'A';

select	coalesce(max(nr_sequencia), 0),
	    coalesce(max(ie_agora), 'N')
into STRICT	nr_sequencia_w,
	    ie_agora_w
from	pe_prescricao
where	nr_sequencia	= nr_sequencia_w;

if (ie_agora_w = 'S') then

	update 	pe_prescricao
	set     dt_primeiro_horario	= clock_timestamp()
	where	nr_sequencia = nr_sequencia_w;
	commit;

	CALL Atualizar_Horarios_SAE(nr_sequencia_w, nm_usuario_p);
end if;

if (nr_sequencia_w > 0) then
	begin
	if (nr_prescricao_ant_w > 0) and (ie_gerar_prescricao_w	<> 'N')then
		CALL gerar_prescricao_sae(nr_sequencia_w,nm_usuario_p);
	end if;

	open c00;
	loop
	fetch c00 into	
		nr_sequencia_ww,
		nr_prescr_w,
		qt_reg_w;
	EXIT WHEN NOT FOUND; /* apply on c00 */
		begin
		
		if (coalesce(nr_sae_origem_w::text, '') = '') then
			nr_sae_origem_w	:= nr_sequencia_ww;
		else
			nr_sae_origem_w	:= nr_sae_origem_w ||','||nr_sequencia_ww;
		end if;

		open C03;
		loop
		fetch C03 into	
			nr_seq_item_w,
			nr_seq_result_w,
			ds_observacao_w,
			nr_seq_topografia_w,
			ie_lado_w,
			qt_ponto_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			insert into pe_prescr_item_result(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_item,
				nr_seq_result,
				nr_seq_prescr,
				ds_observacao,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_topografia,
				ie_lado,
				qt_ponto)	
			values (nextval('pe_prescr_item_result_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_item_w,
				nr_seq_result_w,
				nr_sequencia_w,
				ds_observacao_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_topografia_w,
				ie_lado_w,
				qt_ponto_w);
			end;
		end loop;
		close C03;
		
		if (ie_duplica_comentario_w = 'S') then
			begin
			select 	ds_comentario,
				nr_sequencia
			into STRICT	ds_comentario_w,
				nr_seq_comentario_atual_w
			from	pe_prescr_comentario
			where	nr_seq_prescr = nr_sequencia_ww;
			exception
			when others then
				ds_comentario_w	:= null;
			end;
			if (ds_comentario_w IS NOT NULL AND ds_comentario_w::text <> '') then
				coalesce(if (nr_seq_comentario_w)::text, '') = '' then
					Select	nextval('pe_prescr_comentario_seq')
					into STRICT	nr_seq_comentario_w
					;
					
					insert into pe_prescr_comentario(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_prescr,
							ds_comentario)		
					values (		nr_seq_comentario_w,
							clock_timestamp(),
							nm_usuario_p,
							nr_sequencia_w,
							ds_comentario_w);
				else
					concat_rtf_texto(nr_seq_comentario_w, nr_seq_comentario_atual_w);
				end if;
					
			end if;
		end if;

		if (ie_diagnostico_w = 'S') Then
			open c01;
			loop
				fetch c01 into
					nr_seq_diag_w,
					nr_seq_w,
					nr_seq_evolucao_diag_w,
					qt_pontuacao_w,
					pr_likert_w,
					qt_ponto_atual_w,
					qt_ponto_total_w,
					ie_origem_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
				
				
				select   count(*)
				into STRICT	qt_reg_w
				from     pe_result_item_diag b,
					 pe_prescr_item_result a,
					 pe_diagnostico c
				where    b.nr_seq_result = a.nr_seq_result
				and	   a.nr_seq_prescr = nr_sequencia_w
				and      c.nr_sequencia = b.nr_seq_diag
				and	b.nr_seq_diag	= nr_seq_diag_w
				and      Obter_Se_Diag_Sae_Lib(nr_sequencia_w,b.nr_seq_diag)   = 'S';

				if (qt_reg_w	> 0) or (qt_pontuacao_w IS NOT NULL AND qt_pontuacao_w::text <> '') or (ie_origem_w	= 'U')then
					select	nextval('pe_prescr_diag_seq')
					into STRICT	nr_seq_diag_novo_w
					;
					
					select	max(nr_sequencia)
					into STRICT	nr_seq_evolucao_diag_w
					from	sae_evolucao_diagnostico
					where	nr_sequencia			=	nr_seq_evolucao_diag_w
					and	ie_copia_duplicar_sae		=	'S';
					
					insert into pe_prescr_diag(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_diag,
						nr_seq_prescr,
						nr_seq_evolucao_diag,
						qt_pontuacao,
						pr_likert,
						qt_ponto_atual,
						qt_ponto_total,
						ie_origem)
					values (	nr_seq_diag_novo_w,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_diag_w,
						nr_sequencia_w,
						nr_seq_evolucao_diag_w,
						qt_pontuacao_w,
						pr_likert_w,
						qt_ponto_atual_w,
						qt_ponto_total_w,
						ie_origem_w);

					insert into pe_prescr_diag_fat_rel(
						nr_sequencia,
						nr_seq_diag,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_fat_rel,
						nr_seq_compl)
					SELECT	nextval('pe_prescr_diag_fat_rel_seq'),
						nr_seq_diag_novo_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						a.nr_seq_fat_rel,
						a.nr_seq_compl
					from	pe_prescr_diag_fat_rel a,
						PE_CAD_FATOR_RELAC b
					where	nr_seq_diag	= nr_seq_w
					and	NR_SEQ_FAT_REL = b.nr_sequencia
					and	b.ie_situacao	= 'A';
					
					insert into PE_PRESCR_DIAG_LIKERT(	nr_sequencia,
										dt_atualizacao,
										nm_usuario,
										dt_atualizacao_nrec,
										nm_usuario_nrec,
										nr_seq_diag,
										nr_seq_likert,
										ie_resultado)
					SELECT	nextval('pe_prescr_diag_likert_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_diag_novo_w,
						nr_seq_likert,
						ie_resultado
					from	PE_PRESCR_DIAG_LIKERT
					where	nr_seq_diag	= nr_seq_w;
					
				end if;
			end loop;
			close c01;
		end if;
		
		insert into PE_PRESCR_PROBL_COL(	
			nr_sequencia,
			nr_prescricao,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_probl_colab)
		SELECT	nextval('pe_prescr_probl_col_seq'),
			nr_sequencia_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			a.nr_seq_probl_colab
		from	PE_PRESCR_PROBL_COL a,
			pe_problema_colab b
		where	a.nr_prescricao = nr_sequencia_ww
		and	a.nr_seq_probl_colab = b.nr_sequencia
		and	b.ie_situacao	= 'A';
		
		if (ie_intervensao_p = 'S') then
			begin
			select	coalesce(max(nr_prescricao),0)
			into STRICT	nr_prescricao_w
			from	pe_prescricao
			where	nr_sequencia	= nr_sequencia_w
			and	coalesce(ie_situacao,'A') = 'A';
			
			open c02;
			loop
			fetch c02 into	
				nr_seq_interv_ant_w,
				nr_seq_proc_w,
				qt_pontuacao_w,
				ds_origem_w,
				nr_seq_apres_w,
				cd_intervalo_w,
				ds_horarios_w,
				qt_intervencao_w,
				hr_prim_horario_w,
				nr_seq_topografia_w,
				ie_se_necessario_w,
				ds_observacao_w,
				ie_suspenso_w,
				ie_adep_w,
				ie_lado_w,
				nr_ocorrencia_w,
				ie_permite_exclusao_w,
				nr_seq_diag_w,
				nr_seq_item_w,
				nr_seq_result_w,
				ie_faose_w,
				IE_PROFISSIONAL_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
				
				ie_inserir_w	:= true;
				
				if (ds_origem_w	= 'A') then
					
					if (nr_seq_diag_w IS NOT NULL AND nr_seq_diag_w::text <> '') then
						SELECT	count(*)
						into STRICT	qt_reg_w
						FROM pe_prescr_diag b, pe_diagnostico_proc a
LEFT OUTER JOIN pe_procedimento c ON (a.nr_seq_proc = c.nr_sequencia)
WHERE a.nr_seq_diag	= b.nr_seq_diag and b.nr_seq_prescr	= nr_sequencia_w  AND coalesce(c.ie_situacao,'A') = 'A' AND NOT EXISTS (	SELECT	1
									FROM	pe_prescr_proc b
									WHERE	b.nr_seq_prescr	= nr_sequencia_w
									AND	b.nr_seq_proc	= a.nr_seq_proc) AND Obter_Se_Interv_Modelo(c.nr_sequencia,nr_seq_modelo_w)	= 'S';
						
						if (qt_reg_w	= 0) then
							ie_inserir_w	:= false;
						end if;
						
					end if;
					
				end if;
				
				if (ie_inserir_w) then		
					
				
					select	nextval('pe_prescr_proc_seq')
					into STRICT	nr_seq_inter_w
					;
					
					if (ie_hr_interven_sae_origem_w	= 'S') then
						hr_prim_horario_ww	:= to_date(hr_prim_horario_w,'hh24:mi');
					else
					
						If (vl_prim_hor_w = '3') Then
							hr_prim_horario_ww := dt_sae_p;
							if (coalesce(hr_prim_horario_w::text, '') = '') and (ie_hr_interven_sae_w = 'N') then
								hr_prim_horario_ww := null;
							end if;
						Else
							if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
								hr_prim_horario_ww := to_date(hr_prim_horario_w,'hh24:mi');
							else
								if (ie_hr_interven_sae_w = 'S') then
									hr_prim_horario_ww := dt_sae_p;
								else
									hr_prim_horario_ww := null;
								end if;
							end if;	
							
							if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') or (ie_hr_interven_sae_w = 'S') then
								if (vl_prim_hor_w = '1') and (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
                                    /*[SO-2224867]*/

									hr_prim_horario_ww := 	ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_sae_p, coalesce(Obter_primeiro_horario_sae(cd_intervalo_w, nr_sequencia_w),'00:00'));
								elsif (vl_prim_hor_w = '2') or (vl_prim_hor_w = '4')then
									hr_prim_horario_ww := trunc(dt_sae_p + (1/24),'hh24');
								end if;
							end if;
						End if;
					end if;
					
					if (hr_prim_horario_ww IS NOT NULL AND hr_prim_horario_ww::text <> '') and (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
						if (trunc(dt_sae_p) < clock_timestamp()) then
							SELECT * FROM calcular_horario_intervencao(cd_intervalo_w, hr_prim_horario_ww, coalesce(qt_horas_validade_w,24), nr_intervalo_w, ds_horarios_w, ds_prim_horario_w, ie_se_necessario_ww, nr_sequencia_w) INTO STRICT nr_intervalo_w, ds_horarios_w, ds_prim_horario_w, ie_se_necessario_ww;
						else
							SELECT * FROM calcular_horario_intervencao(cd_intervalo_w, hr_prim_horario_ww, coalesce(qt_horas_validade_w,24), nr_intervalo_w, ds_horarios_w, hr_prim_horario_w, ie_se_necessario_ww, nr_sequencia_p) INTO STRICT nr_intervalo_w, ds_horarios_w, hr_prim_horario_w, ie_se_necessario_ww;
						end if;
					end if;
					
					select 	max(ie_situacao),
							max(ds_horario_padrao)
					into STRICT	ie_situacao_w,
							ds_horarios_ww
					from	pe_procedimento
					where	nr_sequencia = nr_seq_proc_w;
					
					
										
					if (ie_horarios_sae_w = 'S') and (ds_horarios_ww IS NOT NULL AND ds_horarios_ww::text <> '') then
						ds_horarios_w	:= ds_horarios_ww;
					end if;																	
					
					
					if (ie_situacao_w <> 'I') then
						begin
						
						if (obter_se_copia_hora_SAE(nr_sequencia_ww,nr_seq_interv_ant_w) = 'N') then
							ds_horarios_w := null;
						end if;
						
						insert into pe_prescr_proc(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_proc,
							nr_seq_prescr,
							qt_pontuacao,
							ds_origem,
							nr_seq_apres,
							cd_intervalo,
							ds_horarios,
							qt_intervencao,
							hr_prim_horario,
							nr_seq_topografia,
							ie_se_necessario,
							ds_observacao,
							ie_suspenso,
							ie_adep,
							ie_lado,
							nr_ocorrencia,
							ie_permite_exclusao,
							nr_seq_diag,
							nr_seq_item,
							nr_seq_result,
							ie_faose,
							IE_PROFISSIONAL)
						values (	nr_seq_inter_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_proc_w,
							nr_sequencia_w,
							qt_pontuacao_w,
							ds_origem_w,
							nr_seq_apres_w,
							cd_intervalo_w,
							ds_horarios_w,
							qt_intervencao_w,
							to_char(hr_prim_horario_ww,'hh24:mi'),
							nr_seq_topografia_w,
							ie_se_necessario_w,
							ds_observacao_w,
							ie_suspenso_w,
							ie_adep_w,
							ie_lado_w,
							nr_ocorrencia_w,
							ie_permite_exclusao_w,
							nr_seq_diag_w,
							nr_seq_item_w,
							nr_seq_result_w,
							ie_faose_w,
							IE_PROFISSIONAL_w);

						insert into pe_prescr_proc_atividade(	
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_prescr_proc,
							nr_seq_atividade)
						SELECT	nextval('pe_prescr_proc_atividade_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_inter_w,
							nr_seq_atividade
						from	pe_prescr_proc_atividade
						where	NR_SEQ_PRESCR_PROC	= nr_seq_interv_ant_w;

						if (nr_prescricao_w > 0) then
							begin
								for r_c05_w in C05
								loop
									select	coalesce(max(nr_agrupamento), 0) + 1, coalesce(max(nr_sequencia),0) + 1
									into STRICT	nr_agrupamento_w, nr_seq_mat_w
									from	prescr_material
									where	nr_prescricao = nr_prescricao_w;							

									insert into prescr_material(
										nr_prescricao,
										nr_sequencia,
										ie_origem_inf,
										cd_material,
										cd_unidade_medida,
										qt_dose,
										qt_unitaria,
										qt_material,
										dt_atualizacao,
										nm_usuario,
										ie_via_aplicacao,
										cd_motivo_baixa,
										ie_utiliza_kit,
										cd_unidade_medida_dose,
										ie_urgencia,
										nr_ocorrencia,
										qt_total_dispensar,
										ie_medicacao_paciente,
										ie_agrupador,
										ie_suspenso,
										ie_se_necessario,
										ie_status_cirurgia,
										ie_bomba_infusao,
										ie_aplic_bolus,
										ie_aplic_lenta,
										ie_acm,
										qt_baixa_especial,
										ie_erro,
										ie_cultura_cih,
										ie_antibiograma,
										ie_uso_antimicrobiano,
										ie_recons_diluente_fixo,
										ie_sem_aprazamento,
										ie_cobra_paciente,
										ie_dose_espec_agora,
										ie_tipo_medic_hd,
										nr_seq_pe_proc,
										ie_intervalo_dif,
										cd_intervalo,
										ds_horarios,
										hr_prim_horario,
										nr_agrupamento)
									values (
										r_c05_w.nr_prescricao,
										nr_seq_mat_w,
										r_c05_w.ie_origem_inf,
										r_c05_w.cd_material,
										r_c05_w.cd_unidade_medida,
										r_c05_w.qt_dose,
										r_c05_w.qt_unitaria,
										r_c05_w.qt_material,
										r_c05_w.dt_atualizacao,
										r_c05_w.nm_usuario,
										r_c05_w.ie_via_aplicacao,
										r_c05_w.cd_motivo_baixa,
										r_c05_w.ie_utiliza_kit,
										r_c05_w.cd_unidade_medida_dose,
										r_c05_w.ie_urgencia,
										r_c05_w.nr_ocorrencia,
										r_c05_w.qt_total_dispensar,
										r_c05_w.ie_medicacao_paciente,
										r_c05_w.ie_agrupador,
										r_c05_w.ie_suspenso,
										r_c05_w.ie_se_necessario,
										r_c05_w.ie_status_cirurgia,
										r_c05_w.ie_bomba_infusao,
										r_c05_w.ie_aplic_bolus,
										r_c05_w.ie_aplic_lenta,
										r_c05_w.ie_acm,
										r_c05_w.qt_baixa_especial,
										r_c05_w.ie_erro,
										r_c05_w.ie_cultura_cih,
										r_c05_w.ie_antibiograma,
										r_c05_w.ie_uso_antimicrobiano,
										r_c05_w.ie_recons_diluente_fixo,
										r_c05_w.ie_sem_aprazamento,
										r_c05_w.ie_cobra_paciente,
										r_c05_w.ie_dose_espec_agora,
										r_c05_w.ie_tipo_medic_hd,
										r_c05_w.nr_seq_inter,
										r_c05_w.ie_intervalo_dif,
										r_c05_w.cd_intervalo,
										r_c05_w.ds_horarios,
										r_c05_w.hr_prim_horario,
										nr_agrupamento_w);
									
								end loop;
							end;
						end if;
						end;
					end if;
				end if;
				end;
			end loop;
			close c02;
			end;
		end if;
			
		

	end;
	end loop;
	close c00;



	if (nr_sae_origem_w IS NOT NULL AND nr_sae_origem_w::text <> '') then
		update	pe_prescricao
		set	nr_sae_origem	= nr_sae_origem_w
		where	nr_sequencia	= nr_sequencia_w;
			
	end if;
	commit;
	nr_sequencia_sae_p	:= nr_sequencia_w;
	end;	
	
	open C04;
	loop
	fetch C04 into	
		c04_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin		
	
		insert into qua_evento_paciente(	nr_sequencia,
											nr_seq_evento,
											ds_evento,
											nr_atendimento,
											cd_pessoa_fisica,
											cd_profissional,
											nm_usuario,
											nm_usuario_origem,
											nm_usuario_nrec,
											nm_usuario_reg,
											cd_estabelecimento,
											cd_setor_atendimento,
											dt_atualizacao,
											dt_atualizacao_nrec,
											dt_cadastro,
											dt_evento,
											ie_situacao,
											dt_liberacao,
											nr_seq_sae,
											ie_status,
											ie_origem,
											cd_funcao_ativa)
								values (	nextval('qua_evento_paciente_seq'),
											c04_w.nr_seq_evento,
											c04_w.ds_evento,											
											c04_w.nr_atendimento,
											c04_w.cd_pessoa_fisica,
											cd_profissional_w,
											nm_usuario_p,
											nm_usuario_p,
											nm_usuario_p,
											nm_usuario_p,
											cd_estabelecimento_w,
											c04_w.cd_setor_atendimento,
											clock_timestamp(),
											clock_timestamp(),
											clock_timestamp(),
											clock_timestamp(),
											'A',
											null,
											nr_sequencia_w,
											c04_w.ie_status,
											'S',
											obter_funcao_ativa);											
		end;
	end loop;
	close C04;
	
	
else
	-- O Registro de SAE esta inativo e por isso nao pode ser copiado
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(263702);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_prescricao_enfemagem ( nr_sequencia_p bigint, cd_prescritor_p text, nr_atendimento_p bigint, dt_sae_p timestamp, ie_intervensao_p text, ie_agrupa_dia_p text, nm_usuario_p text, nr_seq_modelo_p bigint, nr_sequencia_sae_p INOUT bigint, ie_tipo_p text default 'SAE', nr_SAEInCommaText_p text default null) FROM PUBLIC;

