-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_endereco_prestador_pj_web ( nr_seq_prestador_p bigint, cd_estabelecimento_p text, cd_cgc INOUT text, ds_razao_social INOUT text, nm_fantasia INOUT text, ds_endereco INOUT text, nr_endereco INOUT text, ds_bairro INOUT text, cd_cep INOUT text, ds_municipio INOUT text, sg_estado INOUT text, nr_ddi_telefone INOUT text, nr_ddd_telefone INOUT text, nr_telefone INOUT text, nr_ddi_fax INOUT text, nr_ddd_fax INOUT text, nr_fax INOUT text, ds_email INOUT text, cd_pf_resp_tecnico INOUT text, nm_pessoa_fisica INOUT text, nr_seq_conselho INOUT text, nr_crm INOUT text, uf_crm INOUT text, nr_cpf INOUT text, cd_cnes INOUT text, nr_alvara_sanitario_munic INOUT text, dt_validade_alvara_munic INOUT text, nr_alvara_sanitario INOUT text, dt_validade_alvara_sanit INOUT text, cd_banco INOUT text, cd_agencia_bancaria INOUT text, ie_digito_agencia INOUT text, nr_conta INOUT text, nr_digito_conta INOUT text, ds_observacao INOUT text, ie_tipo_complemento INOUT bigint, cd_municipio_ibge INOUT text) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
Obter o endereço do prestador PJ, conforme o tipo de endereço selecionado no cadastro da função OPS - Prestadores 
 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ x ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
ie_tipo_endereco_w		pls_prestador.ie_tipo_endereco%type;
ie_tipo_complemento_w		pessoa_juridica_compl.ie_tipo_complemento%type;
cd_cgc_w			pessoa_juridica.cd_cgc%type;
ds_razao_social_w		pessoa_juridica.ds_razao_social%type;
nm_fantasia_w			pessoa_juridica.nm_fantasia%type;
ds_endereco_w			varchar(60);
nr_endereco_w			varchar(10);
ds_bairro_w			varchar(40);
cd_cep_w			varchar(15);
ds_municipio_w			varchar(40);
sg_estado_w			varchar(15);
nr_ddi_telefone_w		pessoa_juridica.nr_ddi_telefone%type;
nr_ddd_telefone_w		varchar(3);
nr_telefone_w			varchar(15);
nr_ddi_fax_w			pessoa_juridica.nr_ddi_fax%type;
nr_ddd_fax_w			pessoa_juridica.nr_ddd_fax%type;
nr_fax_w			varchar(15);
ds_email_w			varchar(255);
cd_pf_resp_tecnico_w		pessoa_juridica.cd_pf_resp_tecnico%type;
nm_pessoa_fisica_w		varchar(255);
nr_seq_conselho_w		conselho_profissional.nr_sequencia%type;
nr_crm_w			medico.nr_crm%type;
uf_crm_w			medico.uf_crm%type;
nr_cpf_w			pessoa_fisica.nr_cpf%type;
cd_cnes_w			varchar(20);
nr_alvara_sanitario_munic_w	pessoa_juridica.nr_alvara_sanitario_munic%type;
dt_validade_alvara_munic_w	pessoa_juridica.dt_validade_alvara_munic%type;
nr_alvara_sanitario_w		pessoa_juridica.nr_alvara_sanitario%type;
dt_validade_alvara_sanit_w	pessoa_juridica.dt_validade_alvara_sanit%type;
cd_banco_w			pessoa_juridica_conta.cd_banco%type;
cd_agencia_bancaria_w		pessoa_juridica_conta.cd_agencia_bancaria%type;
ie_digito_agencia_w		pessoa_juridica_conta.ie_digito_agencia%type;
nr_conta_w			pessoa_juridica_conta.nr_conta%type;
nr_digito_conta_w		pessoa_juridica_conta.nr_digito_conta%type;
ds_observacao_w			varchar(4000);
nr_seq_compl_pj_w		bigint;
cd_municipio_ibge_w		pessoa_juridica.cd_municipio_ibge%type;

C01 CURSOR FOR 
	SELECT a.cd_cgc, 
		a.ds_razao_social, 
		a.nm_fantasia, 
		b.ds_endereco, 
		b.nr_endereco, 
		b.ds_bairro, 
		b.cd_cep, 
		b.ds_municipio, 
		b.sg_estado,		 
		b.nr_ddd_telefone, 
		b.nr_telefone,		 
		b.nr_fax,		 
		b.ds_email,	 
		a.cd_pf_resp_tecnico, 
		(SELECT max(c.nm_pessoa_fisica) from pessoa_fisica c where cd_pessoa_fisica = a.cd_pf_resp_tecnico) nm_pessoa_fisica, 
		(select max(nr_seq_conselho) from pessoa_fisica where cd_pessoa_fisica = a.cd_pf_resp_tecnico) nr_seq_conselho,	 
		obter_dados_medico(a.cd_pf_resp_tecnico,'CRM') nr_crm, 
		obter_dados_medico(a.cd_pf_resp_tecnico,'UFCRM') uf_crm, 
		(select max(c.nr_cpf) from pessoa_fisica c where cd_pessoa_fisica = a.cd_pf_resp_tecnico) nr_cpf, 
		a.cd_cnes, 
		a.nr_alvara_sanitario_munic, 
		to_char(a.dt_validade_alvara_munic, 'dd/mm/yyyy') dt_validade_alvara_munic, 
		a.nr_alvara_sanitario, 
		to_char(a.dt_validade_alvara_sanit, 'dd/mm/yyyy') dt_validade_alvara_sanit,	 
		obter_conta_pessoa(a.cd_cgc,'J','B') cd_banco, 
		obter_conta_pessoa(a.cd_cgc,'J','A') cd_agencia_bancaria, 
		obter_conta_pessoa(a.cd_cgc,'J','DA') ie_digito_agencia, 
		obter_conta_pessoa(a.cd_cgc,'J','C') nr_conta, 
		obter_conta_pessoa(a.cd_cgc,'J','DC') nr_digito_conta, 
		b.ds_observacao, 
		a.cd_municipio_ibge 
	from  pessoa_juridica a, 
		pessoa_juridica_compl b 
	where  a.cd_cgc		= b.cd_cgc 
	and	a.ie_situacao 		= 'A'	 
	and	a.cd_cgc		= pls_obter_dados_prestador(nr_seq_prestador_p,'CGC')	 
	and	b.ie_tipo_complemento	= ie_tipo_complemento_w 
	and (b.nr_sequencia		= nr_seq_compl_pj_w 
	or	coalesce(nr_seq_compl_pj_w::text, '') = '');	
 

BEGIN 
 
	begin 
		select	coalesce(ie_tipo_endereco, 'PJ') 
		into STRICT	ie_tipo_endereco_w 
		from	pls_prestador 
		where 	nr_sequencia	= nr_seq_prestador_p;
	exception 
	when others then 
		ie_tipo_endereco_w 	:= null;
	end;
 
if (ie_tipo_endereco_w IS NOT NULL AND ie_tipo_endereco_w::text <> '') then 
	begin	 
		--Cartão CNPJ 
		if (ie_tipo_endereco_w = 'PJ') then 
			select a.cd_cgc, 
				a.ds_razao_social, 
				a.nm_fantasia, 
				a.ds_endereco, 
				a.nr_endereco, 
				a.ds_bairro, 
				a.cd_cep, 
				a.ds_municipio, 
				a.sg_estado, 
				a.nr_ddi_telefone, 
				a.nr_ddd_telefone, 
				a.nr_telefone, 
				a.nr_ddi_fax, 
				a.nr_ddd_fax, 
				a.nr_fax, 
				(select 	max(x.ds_email) 
				from		pessoa_juridica_estab x 
				where		x.cd_cgc = a.cd_cgc and cd_estabelecimento = cd_estabelecimento_p) ds_email, 
				a.cd_pf_resp_tecnico, 
				(select max(c.nm_pessoa_fisica) from pessoa_fisica c where cd_pessoa_fisica = a.cd_pf_resp_tecnico) nm_pessoa_fisica, 
				(select max(nr_seq_conselho) from pessoa_fisica where cd_pessoa_fisica = a.cd_pf_resp_tecnico) nr_seq_conselho,	 
				obter_dados_medico(a.cd_pf_resp_tecnico,'CRM') nr_crm, 
				obter_dados_medico(a.cd_pf_resp_tecnico,'UFCRM') uf_crm, 
				(select max(c.nr_cpf) from pessoa_fisica c where cd_pessoa_fisica = a.cd_pf_resp_tecnico) nr_cpf, 
				a.cd_cnes, 
				a.nr_alvara_sanitario_munic, 
				to_char(a.dt_validade_alvara_munic, 'dd/mm/yyyy') dt_validade_alvara_munic, 
				a.nr_alvara_sanitario, 
				to_char(a.dt_validade_alvara_sanit, 'dd/mm/yyyy') dt_validade_alvara_sanit, 
				obter_conta_pessoa(a.cd_cgc,'J','B') cd_banco, 
				obter_conta_pessoa(a.cd_cgc,'J','A') cd_agencia_bancaria, 
				obter_conta_pessoa(a.cd_cgc,'J','DA') ie_digito_agencia, 
				obter_conta_pessoa(a.cd_cgc,'J','C') nr_conta, 
				obter_conta_pessoa(a.cd_cgc,'J','DC') nr_digito_conta, 
				a.ds_observacao, 
				a.cd_municipio_ibge 
			into STRICT	cd_cgc_w, 
				ds_razao_social_w, 
				nm_fantasia_w, 
				ds_endereco_w, 
				nr_endereco_w, 
				ds_bairro_w, 
				cd_cep_w, 
				ds_municipio_w, 
				sg_estado_w, 
				nr_ddi_telefone_w, 
				nr_ddd_telefone_w, 
				nr_telefone_w, 
				nr_ddi_fax_w, 
				nr_ddd_fax_w, 
				nr_fax_w, 
				ds_email_w,	 
				cd_pf_resp_tecnico_w, 
				nm_pessoa_fisica_w, 
				nr_seq_conselho_w, 
				nr_crm_w, 
				uf_crm_w, 
				nr_cpf_w, 
				cd_cnes_w, 
				nr_alvara_sanitario_munic_w, 
				dt_validade_alvara_munic_w, 
				nr_alvara_sanitario_w, 
				dt_validade_alvara_sanit_w,	 
				cd_banco_w, 
				cd_agencia_bancaria_w, 
				ie_digito_agencia_w, 
				nr_conta_w, 
				nr_digito_conta_w, 
				ds_observacao_w, 
				cd_municipio_ibge_w 
			from  pessoa_juridica a 
			where  a.cd_cgc = pls_obter_dados_prestador(nr_seq_prestador_p,'CGC') 
			and	a.ie_situacao = 'A';		
		end if;
		--Atendimento 
		if (ie_tipo_endereco_w = 'PJA') then 
			ie_tipo_complemento_w	:= 6;	
 
			select	max(nr_seq_compl_pj) 
			into STRICT	nr_seq_compl_pj_w 
			from 	pls_prestador 
			where 	nr_sequencia = nr_seq_prestador_p;
				 
			open C01;
			loop 
				fetch C01 into	 
					cd_cgc_w, 
					ds_razao_social_w, 
					nm_fantasia_w, 
					ds_endereco_w, 
					nr_endereco_w, 
					ds_bairro_w, 
					cd_cep_w, 
					ds_municipio_w, 
					sg_estado_w, 
					nr_ddd_telefone_w, 
					nr_telefone_w, 
					nr_fax_w, 
					ds_email_w,	 
					cd_pf_resp_tecnico_w, 
					nm_pessoa_fisica_w, 
					nr_seq_conselho_w, 
					nr_crm_w, 
					uf_crm_w, 
					nr_cpf_w, 
					cd_cnes_w, 
					nr_alvara_sanitario_munic_w, 
					dt_validade_alvara_munic_w, 
					nr_alvara_sanitario_w, 
					dt_validade_alvara_sanit_w,	 
					cd_banco_w, 
					cd_agencia_bancaria_w, 
					ie_digito_agencia_w, 
					nr_conta_w, 
					nr_digito_conta_w, 
					ds_observacao_w, 
					cd_municipio_ibge_w;					
				EXIT WHEN NOT FOUND; /* apply on C01 */		
			end loop;
			close C01;	
		end if;
		--Corespondência 
		if (ie_tipo_endereco_w = 'PJC') then 
			ie_tipo_complemento_w	:= 1;
			 
			select 	max(nr_sequencia) 
			into STRICT	nr_seq_compl_pj_w 
			from	pessoa_juridica_compl a 
			where	a.cd_cgc		= pls_obter_dados_prestador(nr_seq_prestador_p,'CGC') 
			and	a.ie_tipo_complemento 	= 1;
			 
			open C01;
			loop 
				fetch C01 into	 
					cd_cgc_w, 
					ds_razao_social_w, 
					nm_fantasia_w, 
					ds_endereco_w, 
					nr_endereco_w, 
					ds_bairro_w, 
					cd_cep_w, 
					ds_municipio_w, 
					sg_estado_w, 
					nr_ddd_telefone_w, 
					nr_telefone_w, 
					nr_fax_w, 
					ds_email_w,	 
					cd_pf_resp_tecnico_w, 
					nm_pessoa_fisica_w, 
					nr_seq_conselho_w, 
					nr_crm_w, 
					uf_crm_w, 
					nr_cpf_w, 
					cd_cnes_w, 
					nr_alvara_sanitario_munic_w, 
					dt_validade_alvara_munic_w, 
					nr_alvara_sanitario_w, 
					dt_validade_alvara_sanit_w,	 
					cd_banco_w, 
					cd_agencia_bancaria_w, 
					ie_digito_agencia_w, 
					nr_conta_w, 
					nr_digito_conta_w, 
					ds_observacao_w, 
					cd_municipio_ibge_w;	
				EXIT WHEN NOT FOUND; /* apply on C01 */		
			end loop;
			close C01;	
		end if;
		--Financeiro 
		if (ie_tipo_endereco_w = 'PJF') then 
			ie_tipo_complemento_w	:= 2;
			 
			select 	max(nr_sequencia) 
			into STRICT	nr_seq_compl_pj_w 
			from	pessoa_juridica_compl a 
			where	a.cd_cgc		= pls_obter_dados_prestador(nr_seq_prestador_p,'CGC') 
			and	a.ie_tipo_complemento 	= 2;
			 
			open C01;
			loop 
				fetch C01 into	 
					cd_cgc_w, 
					ds_razao_social_w, 
					nm_fantasia_w, 
					ds_endereco_w, 
					nr_endereco_w, 
					ds_bairro_w, 
					cd_cep_w, 
					ds_municipio_w, 
					sg_estado_w, 
					nr_ddd_telefone_w, 
					nr_telefone_w, 
					nr_fax_w, 
					ds_email_w,	 
					cd_pf_resp_tecnico_w, 
					nm_pessoa_fisica_w, 
					nr_seq_conselho_w, 
					nr_crm_w, 
					uf_crm_w, 
					nr_cpf_w, 
					cd_cnes_w, 
					nr_alvara_sanitario_munic_w, 
					dt_validade_alvara_munic_w, 
					nr_alvara_sanitario_w, 
					dt_validade_alvara_sanit_w,	 
					cd_banco_w, 
					cd_agencia_bancaria_w, 
					ie_digito_agencia_w, 
					nr_conta_w, 
					nr_digito_conta_w, 
					ds_observacao_w, 
					cd_municipio_ibge_w;		
				EXIT WHEN NOT FOUND; /* apply on C01 */		
			end loop;
			close C01;	
		end if;
	exception 
	when others then 
		cd_cgc_w			:= null;
		ds_razao_social_w		:= null;
		nm_fantasia_w			:= null;
		ds_endereco_w			:= null;
		nr_endereco_w			:= null;
		ds_bairro_w			:= null;
		cd_cep_w			:= null;
		ds_municipio_w			:= null;
		sg_estado_w			:= null;
		nr_ddi_telefone_w		:= null;
		nr_ddd_telefone_w		:= null;
		nr_telefone_w			:= null;
		nr_ddi_fax_w			:= null;
		nr_ddd_fax_w			:= null;
		nr_fax_w			:= null;
		ds_email_w			:= null;	
		cd_pf_resp_tecnico_w		:= null;
		nm_pessoa_fisica_w		:= null;
		nr_seq_conselho_w		:= null;
		nr_crm_w			:= null;
		uf_crm_w			:= null;
		nr_cpf_w			:= null;
		cd_cnes_w			:= null;
		nr_alvara_sanitario_munic_w	:= null;
		dt_validade_alvara_munic_w	:= null;
		nr_alvara_sanitario_w		:= null;
		dt_validade_alvara_sanit_w	:= null;	
		cd_banco_w			:= null;
		cd_agencia_bancaria_w		:= null;
		ie_digito_agencia_w		:= null;
		nr_conta_w			:= null;
		nr_digito_conta_w		:= null;
		ds_observacao_w			:= null;
		cd_municipio_ibge_w		:= null;			
	end;	
	 
	cd_cgc					:= cd_cgc_w;
	ds_razao_social				:= ds_razao_social_w;
	nm_fantasia				:= nm_fantasia_w;
	ds_endereco				:= ds_endereco_w;
	nr_endereco				:= nr_endereco_w;
	ds_bairro				:= ds_bairro_w;
	cd_cep					:= cd_cep_w;
	ds_municipio				:= ds_municipio_w;
	sg_estado				:= sg_estado_w;
	nr_ddi_telefone				:= nr_ddi_telefone_w;
	nr_ddd_telefone				:= nr_ddd_telefone_w;
	nr_telefone				:= nr_telefone_w;
	nr_ddi_fax				:= nr_ddi_fax_w;
	nr_ddd_fax				:= nr_ddd_fax_w;
	nr_fax					:= nr_fax_w;
	ds_email				:= ds_email_w;
	cd_pf_resp_tecnico			:= cd_pf_resp_tecnico_w;
	nm_pessoa_fisica			:= nm_pessoa_fisica_w;
	nr_seq_conselho				:= nr_seq_conselho_w;
	nr_crm					:= nr_crm_w;
	uf_crm					:= uf_crm_w;
	nr_cpf					:= nr_cpf_w;
	cd_cnes					:= cd_cnes_w;
	nr_alvara_sanitario_munic		:= nr_alvara_sanitario_munic_w;
	dt_validade_alvara_munic		:= to_char(dt_validade_alvara_munic_w, 'dd/mm/yyyy');
	nr_alvara_sanitario			:= nr_alvara_sanitario_w;
	dt_validade_alvara_sanit		:= to_char(dt_validade_alvara_sanit_w, 'dd/mm/yyyy');
	cd_banco				:= cd_banco_w;
	cd_agencia_bancaria			:= cd_agencia_bancaria_w;
	ie_digito_agencia			:= ie_digito_agencia_w;
	nr_conta				:= nr_conta_w;
	nr_digito_conta				:= nr_digito_conta_w;
	ds_observacao				:= ds_observacao_w;	
	ie_tipo_complemento			:= coalesce(ie_tipo_complemento_w, 0);
	cd_municipio_ibge			:= cd_municipio_ibge_w;
end if;	
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_endereco_prestador_pj_web ( nr_seq_prestador_p bigint, cd_estabelecimento_p text, cd_cgc INOUT text, ds_razao_social INOUT text, nm_fantasia INOUT text, ds_endereco INOUT text, nr_endereco INOUT text, ds_bairro INOUT text, cd_cep INOUT text, ds_municipio INOUT text, sg_estado INOUT text, nr_ddi_telefone INOUT text, nr_ddd_telefone INOUT text, nr_telefone INOUT text, nr_ddi_fax INOUT text, nr_ddd_fax INOUT text, nr_fax INOUT text, ds_email INOUT text, cd_pf_resp_tecnico INOUT text, nm_pessoa_fisica INOUT text, nr_seq_conselho INOUT text, nr_crm INOUT text, uf_crm INOUT text, nr_cpf INOUT text, cd_cnes INOUT text, nr_alvara_sanitario_munic INOUT text, dt_validade_alvara_munic INOUT text, nr_alvara_sanitario INOUT text, dt_validade_alvara_sanit INOUT text, cd_banco INOUT text, cd_agencia_bancaria INOUT text, ie_digito_agencia INOUT text, nr_conta INOUT text, nr_digito_conta INOUT text, ds_observacao INOUT text, ie_tipo_complemento INOUT bigint, cd_municipio_ibge INOUT text) FROM PUBLIC;

