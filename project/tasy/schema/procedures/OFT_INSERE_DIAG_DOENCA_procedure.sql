-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE oft_insere_diag_doenca ( nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, vListaDiagDoenca strRecTypeFormOft) AS $body$
DECLARE



cd_doenca_w						diagnostico_doenca.cd_doenca%TYPE;
ds_diagnostico_w				diagnostico_doenca.ds_diagnostico%TYPE;
dt_fim_w							diagnostico_doenca.dt_fim%TYPE;
dt_inicio_w						diagnostico_doenca.dt_inicio%TYPE;
dt_manifestacao_w				diagnostico_doenca.dt_manifestacao%TYPE;
ie_classificacao_doenca_w	diagnostico_doenca.ie_classificacao_doenca%TYPE;
ie_lado_w						diagnostico_doenca.ie_lado%TYPE;
ie_tipo_diagnostico_w		diagnostico_doenca.ie_tipo_diagnostico%TYPE;
ie_tipo_doenca_w				diagnostico_doenca.ie_tipo_doenca%TYPE;
ie_unidade_tempo_w			diagnostico_doenca.ie_unidade_tempo%TYPE;
nr_seq_etiologia_w			diagnostico_doenca.nr_seq_etiologia%TYPE;
qt_tempo_w						diagnostico_doenca.qt_tempo%TYPE;
nr_atendimento_w				diagnostico_doenca.nr_atendimento%TYPE;
dt_diagnostico_w 				diagnostico_doenca.dt_diagnostico%TYPE;
ie_tipo_atendimento_w		diagnostico_doenca.ie_tipo_atendimento%TYPE;
nr_seq_interno_w				diagnostico_doenca.nr_seq_interno%TYPE;
cd_medico_w						diagnostico_doenca.cd_medico%TYPE;
nm_usuario_w					usuario.nm_usuario%TYPE := wheb_usuario_pck.get_nm_usuario;
cd_perfil_w						perfil.cd_perfil%type 	:= wheb_usuario_pck.get_cd_perfil;
ie_registrado_w				varchar(1) := 'N';
ds_erro_w						varchar(4000);

BEGIN
begin

SELECT 	MAX(nr_atendimento),
			MAX(clock_timestamp())
INTO STRICT		nr_atendimento_w,
			dt_diagnostico_w
FROM 		oft_consulta
WHERE		nr_sequencia = nr_seq_consulta_p;

IF (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') AND (coalesce(nr_seq_consulta_p,0) > 0) AND (vListaDiagDoenca.COUNT > 0) THEN
	FOR i IN 1..vListaDiagDoenca.COUNT LOOP
		BEGIN
		IF (vListaDiagDoenca[i](.ds_valor IS NOT NULL AND .ds_valor::text <> '')) OR (vListaDiagDoenca[i](.nr_valor IS NOT NULL AND .nr_valor::text <> '')) THEN
			CASE UPPER(vListaDiagDoenca[i].nm_campo)
				WHEN 'CD_MEDICO' THEN
					cd_medico_w					:=	vListaDiagDoenca[i].ds_valor;
				WHEN 'CD_DOENCA' THEN
					CD_DOENCA_w 				:= vListaDiagDoenca[i].ds_valor;
					ie_registrado_w			:= 'S';
				WHEN 'DS_DIAGNOSTICO' THEN
					DS_DIAGNOSTICO_w 			:= vListaDiagDoenca[i].ds_valor;
				WHEN 'DT_FIM' THEN
					DT_FIM_w 					:= pkg_date_utils.get_DateTime(vListaDiagDoenca[i].ds_valor);
				WHEN 'DT_INICIO' THEN
					DT_INICIO_w 				:= pkg_date_utils.get_DateTime(vListaDiagDoenca[i].ds_valor);
				WHEN 'DT_MANIFESTACAO' THEN
					DT_MANIFESTACAO_w 		:= pkg_date_utils.get_DateTime(vListaDiagDoenca[i].ds_valor);
				WHEN 'IE_CLASSIFICACAO_DOENCA' THEN
					IE_CLASSIFICACAO_DOENCA_w 	:= vListaDiagDoenca[i].ds_valor;
				WHEN 'IE_LADO' THEN
					IE_LADO_w 					:= vListaDiagDoenca[i].ds_valor;
				WHEN 'IE_TIPO_DIAGNOSTICO' THEN
					IE_TIPO_DIAGNOSTICO_w 	:= vListaDiagDoenca[i].nr_valor;
				WHEN 'IE_TIPO_DOENCA' THEN
					IE_TIPO_DOENCA_w 			:= vListaDiagDoenca[i].ds_valor;
				WHEN 'IE_UNIDADE_TEMPO' THEN
					IE_UNIDADE_TEMPO_w 		:= vListaDiagDoenca[i].ds_valor;
				WHEN 'NR_SEQ_ETIOLOGIA' THEN
					NR_SEQ_ETIOLOGIA_w 		:= vListaDiagDoenca[i].nr_valor;
				WHEN 'QT_TEMPO' THEN
					QT_TEMPO_w 					:= vListaDiagDoenca[i].nr_valor;
				ELSE
					null;
			END CASE;
		END IF;
	END;
	END LOOP;


	SELECT	MAX(nr_seq_interno)
	INTO STRICT		nr_seq_interno_w
	FROM		diagnostico_doenca
	WHERE		nr_seq_consulta_form 	= 	nr_seq_consulta_form_p
	AND		nr_atendimento				= 	nr_atendimento_w
	AND		TRUNC(dt_diagnostico)	=	TRUNC(dt_diagnostico_w)
	AND		cd_doenca					=	cd_doenca_w
	AND		coalesce(dt_liberacao::text, '') = ''
	AND		nm_usuario					= nm_usuario_w;

	IF (nr_seq_interno_w IS NOT NULL AND nr_seq_interno_w::text <> '') THEN
		UPDATE	diagnostico_doenca
		SET		dt_atualizacao				= 	clock_timestamp(),
					nm_usuario					= 	nm_usuario_w,
					cd_doenca					=	cd_doenca_w,
					ds_diagnostico				=	ds_diagnostico_w,
					dt_fim						=	dt_fim_w,
					dt_inicio					=	dt_inicio_w,
					dt_manifestacao			=	dt_manifestacao_w,
					ie_classificacao_doenca	=	coalesce(ie_classificacao_doenca_w,ie_classificacao_doenca),
					ie_lado						=	ie_lado_w,
					ie_tipo_diagnostico		=	coalesce(ie_tipo_diagnostico_w,ie_tipo_diagnostico),
					ie_tipo_doenca				=	ie_tipo_doenca_w,
					ie_unidade_tempo			=	ie_unidade_tempo_w,
					nr_seq_etiologia			=	nr_seq_etiologia_w,
					qt_tempo						=	qt_tempo_w,
					cd_medico					=	coalesce(cd_medico_w,obter_pf_usuario(nm_usuario_w,'C')),
					cd_perfil_ativo			=	cd_perfil_w,
					ie_rn							=	'N'
		WHERE		nr_seq_interno				= 	nr_seq_interno_w;
		CALL wheb_usuario_pck.set_ie_commit('S');
	ELSE
		if (ie_registrado_w = 'S') then
			CALL wheb_usuario_pck.set_ie_commit('S');
			IF (coalesce(ie_tipo_diagnostico_w::text, '') = '') THEN
				SELECT	coalesce(MAX(2),1)
				INTO STRICT		ie_tipo_diagnostico_w
				FROM		diagnostico_medico
				WHERE		nr_atendimento	=	nr_atendimento_w;
			END IF;

			INSERT INTO diagnostico_medico(	nr_atendimento,
														dt_diagnostico,
														ie_tipo_diagnostico,
														cd_medico,
														dt_atualizacao,
														nm_usuario,
														ds_diagnostico)
			VALUES (
														nr_atendimento_w,
														dt_diagnostico_w,
														ie_tipo_diagnostico_w,
														coalesce(cd_medico_w,obter_pf_usuario(nm_usuario_w,'C')),
														clock_timestamp(),
														nm_usuario_w,
														NULL);

			INSERT	INTO diagnostico_doenca(	nr_atendimento,
															dt_diagnostico,
															cd_doenca,
															dt_atualizacao,
															nm_usuario,
															ds_diagnostico,
															dt_fim,
															dt_inicio,
															dt_manifestacao,
															ie_classificacao_doenca,
															ie_lado,
															ie_tipo_diagnostico,
															ie_tipo_doenca,
															ie_unidade_tempo,
															nr_seq_etiologia,
															qt_tempo,
															ie_tipo_atendimento,
															cd_medico,
															cd_perfil_ativo,
															ie_rn,
															nr_seq_consulta_form)
			VALUES (			nr_atendimento_w,
															dt_diagnostico_w,
															cd_doenca_w,
															clock_timestamp(),
															nm_usuario_w,
															ds_diagnostico_w,
															dt_fim_w,
															dt_inicio_w,
															dt_manifestacao_w,
															coalesce(ie_classificacao_doenca_w,'P'),
															ie_lado_w,
															ie_tipo_diagnostico_w,
															ie_tipo_doenca_w,
															ie_unidade_tempo_w,
															nr_seq_etiologia_w,
															qt_tempo_w,
															ie_tipo_atendimento_w,
															coalesce(cd_medico_w,obter_pf_usuario(nm_usuario_w,'C')),
															cd_perfil_w,
															'N',
															nr_seq_consulta_form_p);
		end if;
	END IF;
END IF;

exception
when others then
	ds_erro_w	:= substr(sqlerrm,1,4000);
	update	OFT_CONSULTA_FORMULARIO
	set		ds_stack			=	substr(dbms_utility.format_call_stack||ds_erro_w,1,4000)
	where		nr_sequencia	= 	nr_seq_consulta_form_p;
end;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE oft_insere_diag_doenca ( nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, vListaDiagDoenca strRecTypeFormOft) FROM PUBLIC;

