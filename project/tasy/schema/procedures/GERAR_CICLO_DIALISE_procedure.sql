-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_ciclo_dialise ( nr_prescricao_p bigint, nr_seq_solucao_p bigint, dt_horario_p timestamp, nm_usuario_p text) AS $body$
DECLARE


cd_estabelecimento_w	smallint;
cd_setor_atendimento_w	integer;
nr_seq_evento_w			bigint;
dt_liberacao_w			timestamp;
dt_liberacao_farmacia_w	timestamp;
dt_liberacao_medico_w	timestamp;
ie_rep_adep_w			varchar(1);
ie_momento_lote_w		varchar(15) := 'E';
qt_min_agora_w			bigint;
qt_min_especial_w		bigint;
ie_classif_nao_padrao_w	varchar(15);
ie_classif_lote_w		varchar(15);
ie_agora_impressao_w	varchar(15);
dt_limite_agora_w		timestamp;
dt_limite_especial_w	timestamp;
dt_inicio_prescr_w		timestamp;
nr_seq_turno_hor_esp_w	bigint;
hr_turno_especial_w		varchar(15);
ie_agrupador_w			smallint;
nr_sequencia_w			bigint;
nr_atendimento_w		bigint;
nr_seq_prescr_w			integer;
qt_dose_w				double precision;
qt_total_dispensar_w	double precision;
cd_unidade_medida_w		varchar(30);
cd_unid_med_dose_w		varchar(30);
nr_ocorrencia_w			double precision;
cd_material_w			integer;
ie_esquema_alternado_w	varchar(1);
nr_seq_solucao_w		integer;
ie_controlado_w			varchar(1);
ie_padronizado_w		varchar(1);
ie_regra_disp_w			varchar(1);
nr_agrupamento_w		double precision;
cd_local_estoque_w		smallint;
cd_motivo_baixa_w		smallint;
hr_turno_agora_w		varchar(15);
nr_seq_turno_hor_ag_w	bigint;
ie_classif_urgente_w	varchar(3);
nr_seq_solucao_old_w	integer := 0;
nr_etapa_sol_w			smallint := 0;
nr_total_etapa_sol_w	smallint := 0;
qt_min_antes_atend_w	integer;
qt_dose_hor_w			double precision;
cd_unid_med_dose_hor_w	varchar(30);
ds_hora_w				varchar(2000);
ie_aprazado_w			varchar(1);
ie_consiste_w			varchar(1);
ie_motivo_prescricao_w	varchar(5);
nr_etapa_w				bigint;
ie_gerar_evento_w		varchar(1):= 'N';
ie_gerar_proc_gedipa_job_w	varchar(1);
ie_quimio_w				varchar(1);
ie_define_agora_w		regra_tempo_disp.ie_define_agora%type;
nr_seq_classif_param_w	bigint;
nr_seq_classif_w		bigint;
ie_existe_etapa_w		varchar(1);
nr_seq_protocolo_w		prescr_solucao.nr_seq_protocolo%type;
qt_produto_w			double precision;
qt_total_dispensar_ww	double precision;
ie_regra_disp_ww		varchar(1);
ds_erro_w				varchar(255);
qt_unitaria_w			double precision;
qt_dispensar_hor_w		prescr_mat_hor.qt_dispensar_hor%type;
ie_dispensao_w			protocolo_npt_prod.ie_dispensacao%type;
nr_seq_lote_w			prescr_mat_hor.nr_seq_lote%type;
ie_gera_ciclo_w			varchar(1);
ie_utiliza_drenagem_w	varchar(1);
ie_status_w				prescr_solucao.ie_status%type;
dt_horario_etapa_w		prescr_mat_hor.dt_horario%type;
ie_iniciado_w       varchar(1);
ie_status_ult_evento_w   hd_prescricao_evento.ie_evento%type := 'N';
C01 CURSOR FOR
SELECT	b.ie_agrupador,
		b.nr_sequencia,
		b.qt_dose,
		b.qt_total_dispensar,
		b.cd_unidade_medida,
		b.cd_unidade_medida_dose,
		coalesce(b.nr_ocorrencia,1),
		b.cd_material,
		coalesce(a.ie_esquema_alternado,'N'),
		a.nr_seq_solucao,
		substr(Obter_se_medic_controlado(b.cd_material),1,1),
		substr(obter_se_material_padronizado(cd_estabelecimento_w,b.cd_material),1,1),
		CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
		b.nr_agrupamento,
		b.cd_local_estoque,
		coalesce(b.cd_motivo_baixa,0),
		coalesce(a.ie_acm,'N') ie_aprazado,
		a.nr_seq_protocolo
from	prescr_material b,
		prescr_solucao a,
		prescr_medica k
where	coalesce(b.ie_gerar_horario,'S') <> 'N'
and		coalesce(b.ie_suspenso,'N') <> 'S'
and		b.ie_agrupador	= 13
and		a.nr_seq_solucao	= b.nr_sequencia_solucao
and		a.nr_prescricao		= b.nr_prescricao
and		a.nr_seq_solucao	= nr_seq_solucao_p
and		k.nr_prescricao		= a.nr_prescricao
and		coalesce(k.dt_suspensao::text, '') = ''
and		k.nr_prescricao		= nr_prescricao_p;

c02 CURSOR FOR
	SELECT	nr_sequencia,
			ie_classif_urgente,
			ie_controlado,
			ie_padronizado
	from	classif_lote_disp_far
	where	cd_estabelecimento = cd_estabelecimento_w
	and		ie_situacao = 'A'
	order by ie_classif_urgente,
			ie_controlado desc,
			ie_padronizado desc;

C20 CURSOR FOR
SELECT	ie_momento_lote
from	regra_disp_lote_farm
where	((ie_motivo_prescricao = ie_motivo_prescricao_w) or (coalesce(ie_motivo_prescricao::text, '') = ''))
and		coalesce(cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w
-- and		trunc(sysdate) between trunc(dt_inicio_vigencia) and trunc(nvl(dt_fim_vigencia,sysdate))
and		trunc(clock_timestamp()) between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_vigencia) and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_fim_vigencia,clock_timestamp()))	
and		coalesce(ie_situacao,'A') = 'A'
and		clock_timestamp() between to_date(to_char(clock_timestamp(),'dd/mm/yyyy')||' '||to_char(coalesce(dt_hora_inicio,clock_timestamp()),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') and
		to_date(to_char(clock_timestamp(),'dd/mm/yyyy')||' '||to_char(coalesce(dt_hora_fim,clock_timestamp()),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
and 	((ie_quimio_w <> 'S' and coalesce(ie_quimioterapicas,'N') <> 'S') or (ie_quimio_w = 'S'))
order by 	CASE WHEN ie_quimioterapicas='S' THEN 'Z'  ELSE CASE WHEN ie_quimioterapicas='N' THEN 'C'  ELSE 'B' END  END ,
		coalesce(cd_setor_atendimento,0), 
		coalesce(ie_motivo_prescricao,0);		
	

BEGIN

nr_seq_classif_param_w		:= wheb_assist_pck.obterParametroFuncao(1113,498);
ie_gera_ciclo_w := obter_param_usuario(1113, 465, Obter_perfil_Ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_gera_ciclo_w);

select 	coalesce(max('S'),'N')
into STRICT	ie_quimio_w
from	paciente_atendimento
where	nr_prescricao = nr_prescricao_p;

select	max(dt_inicio_prescr),
		max(ie_motivo_prescricao),
		max(nr_atendimento)
into STRICT	dt_inicio_prescr_w,
		ie_motivo_prescricao_w,
		nr_atendimento_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

if (dt_horario_p < dt_inicio_prescr_w) then
	-- Nao e permitido gerar o ciclo para antes da validade da prescricao!
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(206865);
end if;

select	coalesce(max(nr_etapa_sol),1),
		coalesce(max('S'), 'N'),
		max(dt_horario),
        max(cd_local_estoque)
into STRICT	nr_etapa_sol_w,
		ie_existe_etapa_w,
		dt_horario_etapa_w,
         cd_local_estoque_w
from	prescr_mat_hor
where	nr_prescricao 	= nr_prescricao_p
and		nr_seq_solucao	= nr_seq_solucao_p
and		coalesce(dt_suspensao::text, '') = ''
and		coalesce(ie_horario_especial, 'N') <> 'S';

nr_total_etapa_sol_w	:=	nr_etapa_sol_w;

select 	max(nr_etapa_evento)
into STRICT	nr_etapa_sol_w
from	hd_prescricao_evento
where	nr_seq_solucao 	= nr_seq_solucao_p
and		nr_prescricao	= nr_prescricao_p
and		ie_evento		= 'II';

-- A data do evento atual nao pode ser inferior a data do evento anterior!
if (ie_gera_ciclo_w = 'I') and (dt_horario_etapa_w IS NOT NULL AND dt_horario_etapa_w::text <> '') and (dt_horario_p <= dt_horario_etapa_w) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(1124589);
end if;
--Verificar se existe alguma etapa que foi iniciada mais nao esta terminada, so permite gerar um novo ciclo se

-- a etapa atual estiver terminada
select	coalesce(max('S'),'N')
into STRICT 	ie_consiste_w
from	hd_prescricao_evento
where	nr_seq_solucao 	= nr_seq_solucao_p
and		nr_prescricao	= nr_prescricao_p	
and		nr_etapa_evento = nr_etapa_sol_w
and		ie_evento		= 'II'
and		not exists (SELECT	1
					from	hd_prescricao_evento
					where	nr_seq_solucao 	= nr_seq_solucao_p
					and		nr_prescricao	= nr_prescricao_p
					and		nr_etapa_evento = nr_etapa_sol_w
					and		ie_evento		= 'IT');

select max(a.ie_status)
into STRICT	ie_status_w
from prescr_solucao a
where	a.nr_prescricao	=	nr_prescricao_p
and		a.nr_seq_solucao 		= nr_seq_solucao_p;

ie_utiliza_drenagem_w := obter_param_usuario(1113, 503, Obter_perfil_Ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_utiliza_drenagem_w);

select coalesce(max('S'), 'N')
into STRICT ie_iniciado_w
from	hd_prescricao_evento
where	nr_seq_solucao 	= nr_seq_solucao_p
and		nr_prescricao	= nr_prescricao_p	
and   coalesce(ie_evento_valido,'S') = 'S'
and		ie_evento		= 'II';

if (ie_iniciado_w = 'S') then
    select coalesce(max(h.ie_evento), 'X')
    into STRICT ie_status_ult_evento_w
    from hd_prescricao_evento h
    where	h.nr_seq_solucao 	= nr_seq_solucao_p
    and		h.nr_prescricao	= nr_prescricao_p	
    and   h.nr_sequencia = (SELECT max(a.nr_sequencia)
                            from hd_prescricao_evento a
                            where a.nr_seq_solucao = nr_seq_solucao_p
                            and   a.nr_prescricao = nr_prescricao_p
                            and   coalesce(a.ie_evento_valido, 'S') = 'S');
end if;



if (ie_consiste_w = 'S' and ie_existe_etapa_w = 'S' and ie_gera_ciclo_w <> 'I') and
	((ie_utiliza_drenagem_w = 'S' and (ie_status_w = 'IT' or ie_status_w = 'DI')) or (coalesce(nr_etapa_sol_w, 0) < nr_total_etapa_sol_w or ie_iniciado_w = 'N' or ie_status_ult_evento_w = 'NC')) then
	-- Nao e possivel gerar uma nova etapa para a solucao selecionada porque existem etapas que ainda nao foram iniciadas.
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(499317);
end if;

update	prescr_solucao
set		ie_status		= 'N',
		dt_status 		= dt_horario_p
where	ie_status		in ('T', 'DT')
and		nr_seq_solucao 		= nr_seq_solucao_p
and		nr_prescricao 		= nr_prescricao_p;
	
commit;

select	dt_liberacao,
		cd_setor_atendimento,
		coalesce(cd_estabelecimento,1),
		dt_liberacao_farmacia,
		coalesce(ie_adep,obter_se_setor_adep(cd_setor_atendimento)),
		dt_liberacao_medico
into STRICT	dt_liberacao_w,
		cd_setor_atendimento_w,
		cd_estabelecimento_w,
		dt_liberacao_farmacia_w,
		ie_rep_adep_w,
		dt_liberacao_medico_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

open C20;
loop
fetch C20 into	
	ie_momento_lote_w;
EXIT WHEN NOT FOUND; /* apply on C20 */
	begin
	ie_momento_lote_w	:= ie_momento_lote_w;
	end;
end loop;
close C20;

ds_hora_w	:= to_char(dt_horario_p,'hh24:mi');

if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
	dt_liberacao_w	:= dt_liberacao_farmacia_w;
elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
	dt_liberacao_w	:= dt_liberacao_medico_w;
end if;

select	coalesce(max(qt_min_agora),0),
		coalesce(max(qt_min_especial),0),
		max(ie_classif_urgencia),
		coalesce(max(ie_classif_lote), 'N'),
		coalesce(max(ie_forma_agora), 'N'),
		coalesce(max(ie_gerar_proc_gedipa_job),'S')
into STRICT	qt_min_agora_w,
		qt_min_especial_w,
		ie_classif_nao_padrao_w,
		ie_classif_lote_w,
		ie_agora_impressao_w,
		ie_gerar_proc_gedipa_job_w
from	parametros_farmacia
where	cd_estabelecimento	= cd_estabelecimento_w;

dt_limite_agora_w	:= dt_liberacao_w + qt_min_agora_w/1440;
dt_limite_especial_w	:= dt_liberacao_w + qt_min_especial_w/1440;

if (ie_classif_lote_w  = 'S' ) then
	nr_seq_turno_hor_esp_w 	:= obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_limite_especial_w,'hh24:mi'), cd_local_estoque_w);

	if (coalesce(nr_seq_turno_hor_esp_w,0) > 0) then
		begin
		
		select	to_char(b.hr_final,'hh24:mi')
		into STRICT	hr_turno_especial_w
		from	regra_turno_disp_param b,
				regra_turno_disp a
		where	a.nr_sequencia		= b.nr_seq_turno
		and		a.cd_estabelecimento	= cd_estabelecimento_w
		and		a.nr_sequencia		= nr_seq_turno_hor_esp_w
		and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0))
		order by
				coalesce(b.cd_setor_atendimento,0),
				to_char(b.hr_final,'hh24:mi');

		dt_limite_especial_w	:= to_date(to_char(dt_limite_especial_w,'dd/mm/yyyy')||' '||hr_turno_especial_w||':00','dd/mm/yyyy hh24:mi:ss');
		if (hr_turno_especial_w = '00:00') then
			dt_limite_especial_w	:= to_date(to_char(dt_limite_especial_w,'dd/mm/yyyy')||'23:59:00','dd/mm/yyyy hh24:mi:ss');
		end if;

		/*Esse IF existe para que se: A data de limite especial ficar menor que a liberacao pelo fato de concatenar horario e o horario for 01:00 por exemplo...*/

		if (dt_liberacao_w > dt_limite_especial_w) then
			dt_limite_especial_w	:= dt_limite_especial_w + 1;
		end if;
		end;
	end if;	
end if;	

open C01;
loop
fetch C01 into
		ie_agrupador_w,
		nr_seq_prescr_w,	
		qt_dose_w,
		qt_total_dispensar_w,
		cd_unidade_medida_w,
		cd_unid_med_dose_w,
		nr_ocorrencia_w,
		cd_material_w,
		ie_esquema_alternado_w,
		nr_seq_solucao_w,
		ie_controlado_w,
		ie_padronizado_w,
		ie_regra_disp_w,
		nr_agrupamento_w,
		cd_local_estoque_w,
		cd_motivo_baixa_w,
		ie_aprazado_w,
		nr_seq_protocolo_w;	
EXIT WHEN NOT FOUND; /* apply on C01 */

	nr_etapa_sol_w := 0;
	
	if (ie_agora_impressao_w = 'S') then
		nr_seq_turno_hor_ag_w	:= Obter_turno_hor_prescr_lote(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_p,'hh24:mi'));
		select	to_char(b.hr_inicial,'hh24:mi')
		into STRICT	hr_turno_agora_w
		from	regra_turno_disp_param b,
				regra_turno_disp a
		where	a.nr_sequencia		= b.nr_seq_turno
		and		a.cd_estabelecimento	= cd_estabelecimento_w
		and		a.nr_sequencia		= nr_seq_turno_hor_ag_w
		and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

		select	coalesce(max(qt_min_antes_atend), 0),
			coalesce(max(ie_define_agora), 'N')
		into STRICT	qt_min_antes_atend_w,
			ie_define_agora_w
		from	regra_tempo_disp
		where	cd_estabelecimento	= cd_estabelecimento_w
		and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
		and		nr_seq_turno = nr_seq_turno_hor_ag_w
		and		ie_situacao = 'A';

		dt_limite_agora_w	:= to_date(to_char(dt_horario_p,'dd/mm/yyyy')||' '||hr_turno_agora_w||':00','dd/mm/yyyy hh24:mi:ss') - (qt_min_antes_atend_w/1440);
	end if;
	
	if (coalesce(ie_classif_nao_padrao_w::text, '') = '') or (ie_padronizado_w = 'S') then
		begin
		ie_classif_urgente_w	:= 'N';
		if (dt_horario_p <= dt_limite_agora_w) then
			ie_classif_urgente_w	:= 'A';
		elsif	((dt_limite_agora_w <= clock_timestamp()) and (ie_agora_impressao_w = 'S') and (ie_define_agora_w = 'N')) then
			ie_classif_urgente_w	:= 'A';
		elsif (ie_agora_impressao_w = 'S' and ie_define_agora_w = 'S') and
			(dt_horario_p <= (clock_timestamp() + (qt_min_antes_atend_w /1440))) then
			ie_classif_urgente_w	:= 'A';
		elsif (dt_horario_p <= dt_limite_especial_w) then
			ie_classif_urgente_w	:= 'E';
		end if;
		end;
	else
		ie_classif_urgente_w	:= ie_classif_nao_padrao_w;
	end if;
	
	SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
	
	--OS 739404
	begin
		if (cd_motivo_baixa_w <> 0) then
		
			cd_motivo_baixa_w	:= 0;
		
			update	prescr_material
			set	cd_motivo_baixa = 0,
			dt_baixa  = NULL
			where	nr_prescricao 	= nr_prescricao_p
			and 	nr_sequencia 	= nr_seq_prescr_w;
								
		end if;
		
	exception
	when others then
		null;	
	end;
	--Fim OS739404
	
	select	coalesce(max(nr_etapa_sol),0) + 1
	into STRICT	nr_etapa_sol_w
	from	prescr_mat_hor
	where	nr_prescricao 	= nr_prescricao_p
	and	nr_seq_solucao	= nr_seq_solucao_w
	and	cd_material	= cd_material_w
	and	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';
	
	ie_regra_disp_ww := null;
	
	if (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') then
	
		select	coalesce(max(ie_dispensacao),'X')
		into STRICT	ie_dispensao_w
		from	protocolo_npt_prod
		where	nr_seq_protocolo = nr_seq_protocolo_w
		and		cd_material = cd_material_w;
		
		if (ie_dispensao_w = 'S') then
		
			select	obter_conversao_unid_med_cons(cd_material_w, cd_unidade_medida_w, qt_dose_w)
			into STRICT	qt_unitaria_w
			;
		
			SELECT * FROM obter_quant_dispensar(cd_estabelecimento_w, cd_material_w, nr_prescricao_p, 0, null, null, qt_unitaria_w, 0, 1, null, null, cd_unidade_medida_w, null, qt_produto_w, qt_total_dispensar_ww, ie_regra_disp_ww, ds_erro_w, 'N', 'N') INTO STRICT qt_produto_w, qt_total_dispensar_ww, ie_regra_disp_ww, ds_erro_w;
		end if;
	end if;
	
	if (cd_motivo_baixa_w = 0) then
		if (coalesce(ie_regra_disp_ww,'N') = 'S') then
			qt_dispensar_hor_w := ceil(dividir(qt_total_dispensar_w,nr_ocorrencia_w));
		else
			qt_dispensar_hor_w := dividir(qt_total_dispensar_w,nr_ocorrencia_w);
		end if;
	else
		qt_dispensar_hor_w := 0;
	end if;
	
	select	nextval('prescr_mat_hor_seq')
	into STRICT	nr_sequencia_w
	;
	
	insert into prescr_mat_hor(
		nr_sequencia,
		nr_seq_digito,
		nr_prescricao,
		nr_seq_material,
		ie_agrupador,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ds_horario,
		dt_horario,
		qt_dose,
		qt_dispensar,
		cd_unidade_medida,
		cd_unidade_medida_dose,
		cd_material,
		nr_ocorrencia,
		qt_dispensar_hor,
		ie_urgente,
		ie_horario_especial,
		nr_seq_turno,
		ie_aprazado,
		ie_controlado,
		ie_padronizado,
		ie_classif_urgente,
		ie_dispensar_farm,
		nr_agrupamento,
		ie_adep,
		qt_horario,
		cd_unid_med_hor,
		cd_motivo_baixa,
		nr_seq_solucao,
		nr_etapa_sol,
		ie_etapa_especial,
		dt_lib_horario,
		nr_atendimento)
	values (	
		nr_sequencia_w,
		calcula_digito('MODULO11',nr_sequencia_w),
		nr_prescricao_p,
		nr_seq_prescr_w,
		ie_agrupador_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		ds_hora_w,
		dt_horario_p,
		qt_dose_w,
		qt_total_dispensar_w,
		cd_unidade_medida_w,
		cd_unid_med_dose_w,
		cd_material_w,
		nr_ocorrencia_w,
		qt_dispensar_hor_w,
		'N',
		'N',
		Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_w),
		'S',--ie_aprazado_w,
		ie_controlado_w,
		ie_padronizado_w,
		ie_classif_urgente_w,
		ie_regra_disp_w,
		nr_agrupamento_w,
		ie_rep_adep_w,
		qt_dose_hor_w,
		cd_unid_med_dose_hor_w,
		cd_motivo_baixa_w,
		nr_seq_solucao_w,
		nr_etapa_sol_w,
		'N',
		clock_timestamp(),
		nr_atendimento_w);
		
		if (coalesce(nr_seq_classif_param_w ,0) > 0)	then
			begin
			update	prescr_mat_hor
			set	nr_seq_classif		= nr_seq_classif_param_w
			where	nr_prescricao		= nr_prescricao_p	
			and	nr_sequencia		= nr_sequencia_w;
			end;
		else	
			open c02;
			loop
			fetch c02 into	
				nr_seq_classif_w,
				ie_classif_urgente_w,
				ie_controlado_w,
				ie_padronizado_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
				if (ie_controlado_w = 'A') and (ie_padronizado_w = 'A') then
					update	prescr_mat_hor
					set	nr_seq_classif		= nr_seq_classif_w
					where	nr_prescricao		= nr_prescricao_p	
					and	nr_sequencia		= nr_sequencia_w
					--and	nr_seq_lote		is not null
					and	ie_classif_urgente	= ie_classif_urgente_w;
				elsif (ie_controlado_w = 'A') and (ie_padronizado_w = 'S') then
					update	prescr_mat_hor
					set	nr_seq_classif		= nr_seq_classif_w
					where	nr_prescricao		= nr_prescricao_p
					and	ie_padronizado		= 'S'
					and	nr_sequencia		= nr_sequencia_w
					--and	nr_seq_lote		is not null
					and	ie_classif_urgente	= ie_classif_urgente_w;
				elsif (ie_controlado_w = 'A') and (ie_padronizado_w = 'N') then
					update	prescr_mat_hor
					set	nr_seq_classif		= nr_seq_classif_w
					where	nr_prescricao		= nr_prescricao_p
					and	ie_padronizado		= 'N'
					and	nr_sequencia		= nr_sequencia_w
					--and	nr_seq_lote		is not null
					and	ie_classif_urgente	= ie_classif_urgente_w;
				elsif (ie_controlado_w = 'N') and (ie_padronizado_w = 'A') then
					update	prescr_mat_hor
					set	nr_seq_classif		= nr_seq_classif_w
					where	nr_prescricao		= nr_prescricao_p
					and	ie_controlado		= 'N'
					and	nr_sequencia		= nr_sequencia_w
					--and	nr_seq_lote		is not null
					and	ie_classif_urgente	= ie_classif_urgente_w;
				elsif (ie_controlado_w = 'N') and (ie_padronizado_w = 'N') then
					update	prescr_mat_hor
					set	nr_seq_classif		= nr_seq_classif_w
					where	nr_prescricao		= nr_prescricao_p
					and	ie_controlado		= 'N'
					and	ie_padronizado		= 'N'
					and	nr_sequencia		= nr_sequencia_w
					--and	nr_seq_lote		is not null
					and	ie_classif_urgente	= ie_classif_urgente_w;
				elsif (ie_controlado_w = 'N') and (ie_padronizado_w = 'S') then
					update	prescr_mat_hor
					set	nr_seq_classif		= nr_seq_classif_w
					where	nr_prescricao		= nr_prescricao_p
					and	ie_controlado		= 'N'
					and	ie_padronizado		= 'S'
					--and	nr_seq_lote		is not null
					and	nr_sequencia		= nr_sequencia_w
					and	ie_classif_urgente	= ie_classif_urgente_w;
				elsif (ie_controlado_w = 'S') and (ie_padronizado_w = 'A') then
					update	prescr_mat_hor
					set	nr_seq_classif		= nr_seq_classif_w
					where	nr_prescricao		= nr_prescricao_p
					and	ie_controlado		= 'S'
					--and	nr_seq_lote		is not null
					and	nr_sequencia		= nr_sequencia_w
					and	ie_classif_urgente	= ie_classif_urgente_w;
				elsif (ie_controlado_w = 'S') and (ie_padronizado_w = 'N') then
					update	prescr_mat_hor
					set	nr_seq_classif		= nr_seq_classif_w
					where	nr_prescricao		= nr_prescricao_p
					and	ie_controlado		= 'S'
					and	ie_padronizado		= 'N'
					--and	nr_seq_lote		is not null
					and	nr_sequencia		= nr_sequencia_w
					and	ie_classif_urgente	= ie_classif_urgente_w;
				elsif (ie_controlado_w = 'S') and (ie_padronizado_w = 'S') then
					update	prescr_mat_hor
					set	nr_seq_classif		= nr_seq_classif_w
					where	nr_prescricao		= nr_prescricao_p
					and	ie_controlado		= 'S'
					and	ie_padronizado		= 'S'
					--and	nr_seq_lote		is not null
					and	nr_sequencia		= nr_sequencia_w
					and	ie_classif_urgente	= ie_classif_urgente_w;
				end if;
			
				end;
			end loop;
			close c02;
		end if;
	
	if (ie_gerar_proc_gedipa_job_w	= 'N') then
		CALL Gedipa_Gerar_Proc_Instantaneo(nr_prescricao_p,null,nr_seq_solucao_w,nr_sequencia_w);
	end if;
	
	ie_gerar_evento_w	:= 'S';
	CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);
	nr_seq_solucao_old_w	:= nr_seq_solucao_w;
	CALL adep_gerar_area_prep(nr_prescricao_p, null, nm_usuario_p);

end loop;
close C01;

if (ie_gerar_evento_w <> 'N')	then

	CALL Gerar_Lote_Atend_Prescricao(nr_prescricao_p 	=> nr_prescricao_p,
                                nr_sequencia_p		=> 0,
                                nr_seq_horario_p	=> 0,
                                ie_so_aprazado_p	=> 'N',
                                nm_usuario_p		=> nm_usuario_p,
                                ie_origem_lote_p	=> 'AIP');

	select	max(nr_seq_lote)
	into STRICT	nr_seq_lote_w
	from	prescr_mat_hor
	where	nr_prescricao = nr_prescricao_p
	and		nr_seq_solucao = nr_seq_solucao_w
	and		dt_horario = dt_horario_p;

	select	nextval('hd_prescricao_evento_seq')
	into STRICT	nr_seq_evento_w
	;

	select	coalesce(obter_etapa_sol_dialise(nr_prescricao_p,nr_seq_solucao_p),0)
	into STRICT	nr_etapa_w
	;

	insert into hd_prescricao_evento(
		nr_sequencia,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_atualizacao,
		nm_usuario,
		nr_prescricao,
		nr_seq_solucao,
		nr_etapa_evento,
		ie_evento,
		dt_evento,
		cd_pessoa_evento,
		dt_ciclo,
		nr_seq_lote)
	values (
		nr_seq_evento_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_prescricao_p,
		nr_seq_solucao_p,
		nr_etapa_w,
		'NC',
		dt_horario_p,
		substr(obter_dados_usuario_opcao(nm_usuario_p,'C'),1,10),
		dt_horario_p,
		nr_seq_lote_w);
end if;		

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ciclo_dialise ( nr_prescricao_p bigint, nr_seq_solucao_p bigint, dt_horario_p timestamp, nm_usuario_p text) FROM PUBLIC;

