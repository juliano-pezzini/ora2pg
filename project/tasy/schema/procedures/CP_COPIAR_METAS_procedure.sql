-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cp_copiar_metas ( nr_seq_pr_diag_old_p bigint, nr_seq_pr_diag_new_p bigint, nm_usuario_p text, nr_seq_prescr_p bigint DEFAULT 0) AS $body$
DECLARE

  nr_seq_pa_cp_goal_new_w patient_cp_goal.nr_sequencia%type;
  nr_seq_pa_cp_goal_old_w patient_cp_goal.nr_sequencia%type;
  nr_seq_pa_cp_indicator_new_w patient_cp_indicator.nr_sequencia%type;
  presc_diag_dt_cancel_w pe_prescr_diag.dt_cancelamento%type;
  presc_diag_dt_end_w pe_prescr_diag.dt_end%type;

  c_pat_cp_goal_ant CURSOR FOR
    SELECT * FROM patient_cp_goal a  WHERE a.nr_seq_prescr_diag = nr_seq_pr_diag_old_p AND
    EXISTS (SELECT 1
            FROM patient_cp_indicator b
            WHERE b.nr_seq_pat_cp_goal = a.NR_SEQUENCIA
            AND coalesce(b.dt_end::text, '') = ''
    );

  c_pat_cp_indicator_ant CURSOR FOR
    SELECT *
    FROM patient_cp_indicator
    WHERE nr_seq_pat_cp_goal = nr_seq_pa_cp_goal_old_w
    AND coalesce(dt_end::text, '') = '';

BEGIN
    
  SELECT Max(dt_cancelamento),
         Max(dt_end)
    INTO STRICT presc_diag_dt_cancel_w,
         presc_diag_dt_end_w
    FROM pe_prescr_diag
   WHERE nr_sequencia = nr_seq_pr_diag_new_p;

  FOR r_c_pat_cp_goal IN c_pat_cp_goal_ant
  LOOP
    nr_seq_pa_cp_goal_old_w := r_c_pat_cp_goal.nr_sequencia;

    SELECT nextval('patient_cp_goal_seq') INTO STRICT nr_seq_pa_cp_goal_new_w;

    INSERT
    INTO patient_cp_goal(
        nr_sequencia,
        dt_atualizacao,
        nm_usuario,
        dt_atualizacao_nrec,
        nm_usuario_nrec,
        nr_seq_cp_goal,
        dt_start,
        dt_end,
        dt_release,
        si_selected,
        nr_seq_prescr_diag
      )
      VALUES (
        nr_seq_pa_cp_goal_new_w,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        r_c_pat_cp_goal.nr_seq_cp_goal,
        r_c_pat_cp_goal.dt_start,
        r_c_pat_cp_goal.dt_end,
        r_c_pat_cp_goal.dt_release,
        r_c_pat_cp_goal.si_selected,
        nr_seq_pr_diag_new_p
      );

    --PATIENT_CP_INDICATOR
    FOR r_c_pat_cp_indicator_ant IN c_pat_cp_indicator_ant
    LOOP
      SELECT nextval('patient_cp_indicator_seq')
      INTO STRICT nr_seq_pa_cp_indicator_new_w
;

      INSERT
      INTO patient_cp_indicator(
          nr_sequencia,
          dt_atualizacao,
          nm_usuario,
          dt_atualizacao_nrec,
          nm_usuario_nrec,
          nr_seq_cp_indicator,
          dt_start,
          dt_end,
          dt_release,
          si_selected,
          nr_seq_pat_cp_goal
        )
        VALUES (
          nr_seq_pa_cp_indicator_new_w,
          clock_timestamp(),
          nm_usuario_p,
          clock_timestamp(),
          nm_usuario_p,
          r_c_pat_cp_indicator_ant.nr_seq_cp_indicator,
          r_c_pat_cp_indicator_ant.dt_start,
          r_c_pat_cp_indicator_ant.dt_end,
          r_c_pat_cp_indicator_ant.dt_release,
          r_c_pat_cp_indicator_ant.si_selected,
          nr_seq_pa_cp_goal_new_w
        );

    IF coalesce(presc_diag_dt_cancel_w::text, '') = '' AND coalesce(presc_diag_dt_end_w::text, '') = '' THEN
        CALL cp_copiar_hist_planos_metas(nr_seq_prescr_p, nr_seq_pa_cp_indicator_new_w, r_c_pat_cp_indicator_ant.nr_sequencia);
    END IF;

    END LOOP;
  END LOOP;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cp_copiar_metas ( nr_seq_pr_diag_old_p bigint, nr_seq_pr_diag_new_p bigint, nm_usuario_p text, nr_seq_prescr_p bigint DEFAULT 0) FROM PUBLIC;

