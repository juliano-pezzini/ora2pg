-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_repasse_terceiro ( dt_referencia_p timestamp, nr_seq_terceiro_p bigint, nm_usuario_p text, nr_sequencia_p bigint, ie_proc_mat_p text, nr_seq_repasse_p INOUT bigint, cd_estabelecimento_p bigint, ie_tipo_convenio_p bigint default null) AS $body$
DECLARE



nr_repasse_terceiro_w			bigint;
cd_convenio_w				bigint	:= null;
cd_estabelecimento_w			smallint;
ie_conta_repasse_w			varchar(01);
dt_referencia_inicial_w			timestamp;
dt_referencia_final_w			timestamp;
ie_considera_fim_mes_w			varchar(1);

c01 CURSOR FOR
SELECT	nr_repasse_terceiro
from	repasse_terceiro
where	dt_mesano_referencia			between dt_referencia_inicial_w and dt_referencia_final_w
and	nr_seq_terceiro				= nr_seq_terceiro_p
and	coalesce(cd_convenio, coalesce(cd_convenio_w,0))	= coalesce(cd_convenio_w,0)
and	coalesce(ie_tipo_convenio,coalesce(ie_tipo_convenio_p,0)) = coalesce(ie_tipo_convenio_p,0)
and	ie_status				= 'A'
and	ie_conta_repasse_w		in ('S','R')
order 	by coalesce(cd_convenio,0),
	nr_repasse_terceiro;



BEGIN

ie_considera_fim_mes_w := Obter_Param_Usuario(89, 165, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo, ie_considera_fim_mes_w);

if (ie_proc_mat_p = 'P') then
	select	max(coalesce(c.cd_estabelecimento,b.cd_estabelecimento)), /*Bruna OS 90478, pegar estabelecimento da conta*/
		max(a.cd_convenio)
	into STRICT	cd_estabelecimento_w,
		cd_convenio_w
	from	atendimento_paciente b,
		procedimento_paciente a,
		conta_paciente c
	where	a.nr_atendimento	= b.nr_atendimento
	and	a.nr_interno_conta	= c.nr_interno_conta
	and	a.nr_atendimento	= c.nr_atendimento
	and	a.nr_sequencia		= nr_sequencia_p;
elsif (ie_proc_mat_p = 'M') then
	select	max(coalesce(c.cd_estabelecimento,b.cd_estabelecimento)),
		max(a.cd_convenio)
	into STRICT	cd_estabelecimento_w,
		cd_convenio_w
	from	atendimento_paciente b,
		material_atend_paciente a,
		conta_paciente c
	where	a.nr_atendimento	= b.nr_atendimento
	and	a.nr_interno_conta	= c.nr_interno_conta
	and	a.nr_atendimento	= c.nr_atendimento
	and	a.nr_sequencia		= nr_sequencia_p;
end if;

cd_estabelecimento_w	:= coalesce(coalesce(cd_estabelecimento_w, cd_estabelecimento_p),obter_estabelecimento_ativo);

select	coalesce(max(ie_conta_repasse),'N')
into STRICT	ie_conta_repasse_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;

nr_repasse_terceiro_w		:= null;

dt_referencia_inicial_w		:= PKG_DATE_UTILS.start_of(dt_referencia_p,'month',0);
dt_referencia_final_w		:= PKG_DATE_UTILS.END_OF(dt_referencia_p, 'MONTH', 0);

open c01;
loop
fetch c01 into
	nr_repasse_terceiro_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;

nr_repasse_terceiro_w	:= coalesce(nr_repasse_terceiro_w,0);

if (ie_conta_repasse_w in ('S','R','B')) and (nr_repasse_terceiro_w = 0) then
	begin
	select	nextval('repasse_terceiro_seq')
	into STRICT	nr_repasse_terceiro_w
	;

	insert	into repasse_terceiro(
		nr_repasse_terceiro,
		cd_estabelecimento,
		nr_seq_terceiro,
		dt_mesano_referencia,
		ie_status,
		dt_atualizacao,
		nm_usuario,
		dt_periodo_inicial,
		dt_periodo_final,
		ie_tipo_data)
	values (
		nr_repasse_terceiro_w,
		cd_estabelecimento_w,
		nr_seq_terceiro_p,
		CASE WHEN ie_considera_fim_mes_w='S' THEN dt_referencia_final_w  ELSE dt_referencia_inicial_w END ,
		'A',	
		clock_timestamp(),
		nm_usuario_p,
		dt_referencia_inicial_w,
		PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.END_OF(dt_referencia_p, 'MONTH', 0), 'dd', 0),
		0);
	end;
end if;

nr_seq_repasse_p		:= nr_repasse_terceiro_w;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_repasse_terceiro ( dt_referencia_p timestamp, nr_seq_terceiro_p bigint, nm_usuario_p text, nr_sequencia_p bigint, ie_proc_mat_p text, nr_seq_repasse_p INOUT bigint, cd_estabelecimento_p bigint, ie_tipo_convenio_p bigint default null) FROM PUBLIC;

