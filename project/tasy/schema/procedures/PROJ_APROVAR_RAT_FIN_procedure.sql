-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE proj_aprovar_rat_fin ( nr_seq_rat_p bigint, dt_aprov_fin_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
vl_pagar_w			double precision	:= 0;
ie_paga_rat_w			varchar(1)	:= 'N';
cd_executor_w			varchar(10);
ie_regime_contr_w		varchar(15);
pr_imposto_w			double precision	:= 0;
vl_imposto_w			double precision	:= 0;
pr_adic_clt_w			double precision	:= 0;
vl_adicional_clt_w		double precision	:= 0;
pr_custo_inst_w			double precision	:= 0;
vl_custo_inst_w			double precision	:= 0;
vl_fixo_w			double precision	:= 0;
qt_horas_clt_w			bigint	:= 0;
dt_inicio_w			timestamp;
qt_hora_cobrar_w		double precision;
vl_cobrar_w			double precision;
nr_seq_rat_mes_w		bigint;
dt_referencia_w			timestamp;
qt_reg_w			bigint;
IE_FUNCAO_EXEC_w		varchar(20);

BEGIN
 
select	coalesce(vl_pagar,0), 
	coalesce(ie_paga_rat,'N'), 
	cd_executor, 
	dt_inicio, 
	coalesce(vl_cobrar_cliente,0), 
	qt_hora_cobrar 
into STRICT	vl_pagar_w, 
	ie_paga_rat_w, 
	cd_executor_w, 
	dt_inicio_w, 
	vl_cobrar_w, 
	qt_hora_cobrar_w 
from	proj_rat 
where	nr_sequencia	= nr_seq_rat_p;
 
select	coalesce(max(ie_regime_contr),'PJ'), 
	max(IE_FUNCAO_EXEC) 
into STRICT	ie_regime_contr_w, 
	IE_FUNCAO_EXEC_w 
from	com_canal_consultor 
where	cd_pessoa_fisica	= cd_executor_w 
and 	ie_situacao		= 'A';
 
if (ie_regime_contr_w	= 'CLT') then 
	pr_adic_clt_w		:= proj_obter_perc_clt(dt_inicio_w,1);
	qt_horas_clt_w		:= proj_obter_perc_clt(dt_inicio_w,2);
	 
	select	coalesce(max(vl_fixo),0) 
	into STRICT	vl_fixo_w 
	from	proj_consultor_nivel 
	where	cd_consultor	= cd_executor_w 
	and	dt_avaliacao	= (SELECT max(dt_avaliacao) from proj_consultor_nivel where cd_consultor = cd_executor_w);
	vl_fixo_w		:= (dividir(vl_fixo_w,qt_horas_clt_w) * qt_hora_cobrar_w);
	vl_adicional_clt_w	:= vl_fixo_w + vl_pagar_w;
	vl_adicional_clt_w	:= dividir((vl_adicional_clt_w * pr_adic_clt_w),100);
else 
	vl_adicional_clt_w	:= 0;
	vl_fixo_w		:= 0;
end if;
 
pr_imposto_w	:= proj_obter_perc_imposto_fat(dt_inicio_w);
vl_imposto_w	:= dividir((vl_cobrar_w * pr_imposto_w),100);
 
pr_custo_inst_w	:= proj_obter_perc_custo_inst(dt_inicio_w);
vl_custo_inst_w	:= dividir((vl_cobrar_w * pr_custo_inst_w),100);
 
update	proj_rat 
set	dt_aprov_fin		= dt_aprov_fin_p, 
	nm_usuario		= nm_usuario_p, 
	vl_imposto		= vl_imposto_w, 
	vl_adicional_clt	= vl_adicional_clt_w, 
	vl_custo_inst		= vl_custo_inst_w, 
	vl_fixo_consultor	= coalesce(vl_fixo_w,0) 
where	nr_sequencia	= nr_seq_rat_p;
 
if (vl_pagar_w	> 0) and (ie_paga_rat_w	= 'S') and (ie_regime_contr_w <> 'CLT') then 
	CALL proj_gerar_oc_rat(cd_estabelecimento_p, nr_seq_rat_p, nm_usuario_p);
end if;
 
 
select	coalesce(max(nr_sequencia), 0) 
into STRICT	nr_seq_rat_mes_w 
from	proj_rat_mes 
where 	cd_executor	= cd_executor_w 
and	dt_mes		= PKG_DATE_UTILS.start_of(dt_inicio_w, 'MONTH', 0) 
and	coalesce(dt_aprovacao_fin::text, '') = '';
 
if (nr_seq_rat_mes_w = 0) and (ie_paga_rat_w <> 'X') and (IE_FUNCAO_EXEC_w <> 'COORD') then 
	dt_referencia_w		:= PKG_DATE_UTILS.start_of(dt_inicio_w, 'MONTH', 0);
	select	count(*) 
	into STRICT	qt_reg_w 
	from	proj_rat_mes 
	where 	cd_executor	= cd_executor_w 
	and	dt_mes		= PKG_DATE_UTILS.start_of(dt_inicio_w, 'MONTH', 0);
	 
	if (qt_reg_w	> 0) then 
		dt_referencia_w:= PKG_DATE_UTILS.ADD_MONTH(dt_referencia_w,1, 0);
		 
		select	coalesce(max(nr_sequencia), 0) 
		into STRICT	nr_seq_rat_mes_w 
		from	proj_rat_mes 
		where 	cd_executor	= cd_executor_w 
		and	dt_mes		= PKG_DATE_UTILS.start_of(dt_referencia_w, 'MONTH', 0)		 
		and	coalesce(dt_aprovacao_fin::text, '') = '';
	end if;
	 
	if (nr_seq_rat_mes_w	= 0) then 
	 
		if (PKG_DATE_UTILS.start_of(dt_referencia_w, 'MONTH', 0) < PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0)) then 
			dt_referencia_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0);
		end if;
	 
		nr_seq_rat_mes_w := gerar_proj_rat_mes(PKG_DATE_UTILS.start_of(dt_referencia_w, 'MONTH', 0), cd_executor_w, nr_seq_rat_mes_w, ie_regime_contr_w, nm_usuario_p);
	end if;
end if;
 
if (nr_seq_rat_mes_w > 0) and (ie_paga_rat_w <> 'X') and (IE_FUNCAO_EXEC_w <> 'COORD') then 
	begin 
 
	CALL proj_vincular_rat_clt(nr_seq_rat_p, nr_seq_rat_mes_w, nm_usuario_p);
	CALL atualizar_proj_rat_mes(nr_seq_rat_mes_w, nm_usuario_p);
	end;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE proj_aprovar_rat_fin ( nr_seq_rat_p bigint, dt_aprov_fin_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

