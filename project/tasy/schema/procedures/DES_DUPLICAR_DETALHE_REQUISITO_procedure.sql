-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE des_duplicar_detalhe_requisito (nr_seq_versao_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Obtém detalhamentos da ultima versão e cria uma cópia
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_versao_copia_w	bigint;
nr_seq_detalhe_copia_w	bigint;
nr_seq_req_item_w	bigint;
nr_sequencia_w		bigint;

C01 CURSOR FOR
SELECT	a.nr_sequencia
from	des_requisito_item_detalhe a
where	a.nr_seq_versao	= nr_seq_versao_copia_w;


BEGIN

if (nr_seq_versao_p IS NOT NULL AND nr_seq_versao_p::text <> '') then
	select	a.nr_seq_req_item
	into STRICT	nr_seq_req_item_w
	from	des_requisito_item_versao a
	where	a.nr_sequencia	= nr_seq_versao_p;

	select	max(a.nr_sequencia)
	into STRICT	nr_seq_versao_copia_w
	from	des_requisito_item_versao a
	where	a.nr_seq_req_item = nr_seq_req_item_w
	and	a.nr_versao	= 	(SELECT	max(x.nr_versao)
					from	des_requisito_item_versao x
					where	x.nr_seq_req_item = a.nr_seq_req_item
					and	x.nr_sequencia <> nr_seq_versao_p)
	and	a.nr_subversao	= 	(select	max(x.nr_subversao)
					from	des_requisito_item_versao x
					where	x.nr_seq_req_item = a.nr_seq_req_item
					and	x.nr_sequencia <> nr_seq_versao_p);

	if (nr_seq_versao_copia_w IS NOT NULL AND nr_seq_versao_copia_w::text <> '') then
		open c01;
		loop
		fetch c01 into
			nr_seq_detalhe_copia_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			select	nextval('des_requisito_item_detalhe_seq')
			into STRICT	nr_sequencia_w
			;

			insert into des_requisito_item_detalhe(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_req_item,
				nr_seq_versao,
				ie_tipo_detalhamento)
			SELECT	nr_sequencia_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_req_item,
				nr_seq_versao_p,
				ie_tipo_detalhamento
			from	des_requisito_item_detalhe
			where	nr_sequencia	= nr_seq_detalhe_copia_w;

			CALL copia_campo_long_de_para(	'DES_REQUISITO_ITEM_DETALHE',
						'DS_DETALHAMENTO',
						' where nr_sequencia = :nr_seq_req_detalhe_copia',
						'nr_seq_req_detalhe_copia=' || nr_seq_detalhe_copia_w,
						'DES_REQUISITO_ITEM_DETALHE',
						'DS_DETALHAMENTO',
						' where nr_sequencia = :nr_sequencia',
						'nr_sequencia=' || nr_sequencia_w);
			end;
		end loop;
		close c01;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE des_duplicar_detalhe_requisito (nr_seq_versao_p bigint, nm_usuario_p text) FROM PUBLIC;

