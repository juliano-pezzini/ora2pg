-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dis_gerar_volume ( nr_seq_romaneio_item_p bigint, qt_material_p bigint, dt_inicio_volume_p timestamp, nm_usuario_p text, nr_seq_volume_p INOUT bigint) AS $body$
DECLARE


nr_seq_romaneio_w		bigint;
nr_seq_pedido_w		bigint;
nr_seq_volume_w		bigint;
nr_seq_romaneio_item_w	bigint;
qt_material_romaneio_w	double precision;
qt_expedido_w		double precision;
dt_atualizacao_w		timestamp;
dt_inicio_dispensacao_w	timestamp;

qt_existe_w		bigint;


BEGIN
nr_seq_volume_w := coalesce(nr_seq_volume_p,0);
dt_atualizacao_w := clock_timestamp();

select	coalesce(max(qt_material),0)
into STRICT	qt_material_romaneio_w
from	dis_romaneio_item
where	nr_sequencia = nr_seq_romaneio_item_p;

select	coalesce(sum(qt_material),0)
into STRICT	qt_expedido_w
from	dis_volume_item
where	nr_seq_romaneio_item = nr_seq_romaneio_item_p;

if (qt_material_romaneio_w <= qt_expedido_w) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(265970);
	--'Este item não será considerado, pois já foi completamente expedido.'
end if;

select	nr_seq_pedido,
	nr_seq_romaneio,
	nr_sequencia
into STRICT	nr_seq_pedido_w,
	nr_seq_romaneio_w,
	nr_seq_romaneio_item_w
from	dis_romaneio_item
where	nr_sequencia = nr_seq_romaneio_item_p;

if (nr_seq_volume_w = 0)  then
	begin
	select	nextval('dis_volume_seq')
	into STRICT	nr_seq_volume_w
	;

	insert into	dis_volume(
		nr_sequencia,
		nr_seq_romaneio,
		nr_seq_pedido,
		dt_atualizacao,
		dt_atualizacao_nrec,
		nm_usuario,
		nm_usuario_nrec,
		dt_inicio_montagem,
		dt_final_montagem)
	values (	nr_seq_volume_w,
		nr_seq_romaneio_w,
		nr_seq_pedido_w,
		dt_atualizacao_w,
		dt_atualizacao_w,
		nm_usuario_p,
		nm_usuario_p,
		dt_inicio_volume_p,
		dt_atualizacao_w);
	end;
end if;

insert into dis_volume_item(
	nr_sequencia,
	nr_seq_volume,
	nr_seq_romaneio,
	nr_seq_romaneio_item,
	nr_seq_pedido,
	qt_material,
	nm_usuario,
	nm_usuario_nrec,
	dt_atualizacao,
	dt_atualizacao_nrec)
values (	nextval('dis_volume_item_seq'),
	nr_seq_volume_w,
	nr_seq_romaneio_w,
	nr_seq_romaneio_item_w,
	nr_seq_pedido_w,
	coalesce(qt_material_p,0),
	nm_usuario_p,
	nm_usuario_p,
	dt_atualizacao_w,
	dt_atualizacao_w);

select	min(dt_inicio_montagem)
into STRICT	dt_inicio_dispensacao_w
from	dis_volume
where	nr_seq_romaneio = nr_seq_romaneio_w;

update	dis_romaneio
set	dt_inicio_dispensacao = dt_inicio_dispensacao_w
where	nr_sequencia = nr_seq_romaneio_w;

select	count(*)
into STRICT	qt_existe_w
from	dis_romaneio_item
where	nr_seq_romaneio = nr_seq_romaneio_w
and	qt_material > dis_obter_qt_item_expedido(nr_sequencia);

if (qt_existe_w = 0) then
	update	dis_romaneio
	set	dt_final_dispensacao = dt_atualizacao_w
	where	nr_sequencia = nr_seq_romaneio_w;
end if;

nr_seq_volume_p := nr_seq_volume_w;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dis_gerar_volume ( nr_seq_romaneio_item_p bigint, qt_material_p bigint, dt_inicio_volume_p timestamp, nm_usuario_p text, nr_seq_volume_p INOUT bigint) FROM PUBLIC;

