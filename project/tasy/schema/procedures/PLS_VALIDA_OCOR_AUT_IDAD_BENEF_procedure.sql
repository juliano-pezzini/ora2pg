-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_valida_ocor_aut_idad_benef ( nr_seq_ocor_combinada_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_utiliza_filtro_p text, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Validar a idade do beneficiario.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_guia_w			pls_guia_plano.nr_sequencia%type;
dt_nasc_recem_nascido_w		pls_guia_plano.dt_nasc_recem_nascido%type;
nr_seq_prestador_w		pls_guia_plano.nr_seq_prestador%type;
dt_nasc_benef_w			timestamp;
nr_seq_regra_w			pls_validacao_aut_idade.nr_sequencia%type;
qt_liberado_w			pls_validacao_aut_idade.qt_liberado%type;
qt_dia_inicial_w		pls_validacao_aut_idade.qt_dia_inicial%type;
qt_mes_inicial_w		pls_validacao_aut_idade.qt_mes_inicial%type;
qt_ano_inicial_w		pls_validacao_aut_idade.qt_ano_inicial%type;
qt_dia_final_w			pls_validacao_aut_idade.qt_dia_final%type;
qt_mes_final_w			pls_validacao_aut_idade.qt_mes_final%type;
qt_ano_final_w			pls_validacao_aut_idade.qt_ano_final%type;
ie_regra_w			varchar(10);
ie_tipo_ocorrencia_w		varchar(10);
ie_gerou_ocor_cabecalho_w	varchar(1);
nr_seq_oc_benef_w		bigint;
nr_seq_guia_proc_w		pls_guia_plano_proc.nr_sequencia%type;
cd_proc_guia_w			pls_guia_plano_proc.cd_procedimento%type;
ie_origem_proc_guia_w		pls_guia_plano_proc.ie_origem_proced%type;
	
cd_proc_guia_ww			pls_guia_plano_proc.cd_procedimento%type;
ie_origem_proc_guia_ww		pls_guia_plano_proc.ie_origem_proced%type;

nr_seq_guia_mat_w		pls_guia_plano_mat.nr_sequencia%type;
nr_seq_material_w		pls_guia_plano_mat.nr_seq_material%type;

nr_seq_material_ww		pls_guia_plano_mat.nr_seq_material%type;
nr_seq_requisicao_w		pls_requisicao.nr_sequencia%type;
nr_seq_prestador_req_w		pls_requisicao.nr_seq_prestador%type;

nr_seq_req_proc_w		pls_requisicao_proc.nr_sequencia%type;
cd_procedimento_req_w		pls_requisicao_proc.cd_procedimento%type;
ie_origem_proced_req_w		pls_requisicao_proc.ie_origem_proced%type;

cd_procedimento_req_ww		pls_requisicao_proc.cd_procedimento%type;
ie_origem_proced_req_ww		pls_requisicao_proc.ie_origem_proced%type;

nr_seq_req_mat_w		pls_requisicao_mat.nr_sequencia%type;
nr_seq_material_req_w		pls_requisicao_mat.nr_seq_material%type;

nr_seq_material_req_ww		pls_requisicao_mat.nr_seq_material%type;
qt_solicitada_w			pls_guia_plano_proc.qt_solicitada%type;
qt_autorizada_w			pls_guia_plano_proc.qt_autorizada%type;
qt_total_itens_w		pls_guia_plano_proc.qt_autorizada%type;
ie_verificar_outras_aut_w	varchar(1)	:= 'S';

dt_inicio_validacao_w		timestamp;
dt_fim_validacao_w		timestamp;

qt_anos_w			bigint;
qt_meses_w			bigint;
qt_dias_w			bigint;
ie_idade_liberada_w	varchar(1) := 'N';

qt_dias_regra_w			bigint := 0;
qt_dias_regra_inicial_w		bigint := 0;
qt_dias_regra_final_w		bigint := 0;

cRegra CURSOR FOR
	SELECT	nr_sequencia,
			qt_liberado,
			coalesce(qt_dia_inicial,0) qt_dia_inicial,
			coalesce(qt_mes_inicial,0) qt_mes_inicial,
			coalesce(qt_ano_inicial,0) qt_ano_inicial,
			coalesce(qt_dia_final,0) qt_dia_final,
			coalesce(qt_mes_final,0) qt_mes_final,
			coalesce(qt_ano_final,0) qt_ano_final
	from	pls_validacao_aut_idade
	where	nr_seq_ocor_aut_combinada	= nr_seq_ocor_combinada_p;

cGuias CURSOR FOR
	SELECT	nr_sequencia
	from	pls_guia_plano
	where	nr_seq_segurado	= nr_seq_segurado_p
	and	ie_estagio 	not in (4, 7, 8)
	and	(dt_autorizacao IS NOT NULL AND dt_autorizacao::text <> '')
	and	nr_sequencia 	<> nr_seq_guia_p
	and	establishment_timezone_utils.startofday(dt_autorizacao)	between dt_inicio_validacao_w	and 	dt_fim_validacao_w;
	
cProcGuias CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		qt_autorizada
	from	pls_guia_plano_proc
	where	nr_seq_guia	= nr_seq_guia_w;
	
cMatGuias CURSOR FOR
	SELECT	nr_seq_material,
		qt_autorizada
	from	pls_guia_plano_mat		
	where	nr_seq_guia	= nr_seq_guia_w;
	
cRequisicoes CURSOR FOR
	SELECT	nr_sequencia
	from	pls_requisicao
	where	nr_seq_segurado		= nr_seq_segurado_p
	and	(dt_fim_processo_req IS NOT NULL AND dt_fim_processo_req::text <> '')
	and	ie_estagio 	not in (1, 3, 7)
	and	nr_sequencia 		<> nr_seq_requisicao_p
	and	establishment_timezone_utils.startofday(dt_fim_processo_req)	between dt_inicio_validacao_w	and 	dt_fim_validacao_w;
	
cProcReq CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		qt_procedimento
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_w;
	
cMatReq CURSOR FOR
	SELECT	nr_seq_material,
		qt_material
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_w;
	
C01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		qt_solicitada		
	from	pls_guia_plano_proc
	where	nr_seq_guia	= nr_seq_guia_p;
	
C02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_material,
		qt_solicitada
	from	pls_guia_plano_mat
	where	nr_seq_guia	= nr_seq_guia_p;
	
C11 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		qt_solicitado
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_p;
	
C12 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_material,
		qt_solicitado
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_p;

BEGIN

if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	begin
		select	dt_nasc_recem_nascido,
			nr_seq_prestador,
			pls_obter_dados_segurado(nr_seq_segurado, 'NAS')
		into STRICT	dt_nasc_recem_nascido_w,
			nr_seq_prestador_w,
			dt_nasc_benef_w
		from	pls_guia_plano
		where	nr_sequencia 	= nr_seq_guia_p;
	exception
	when others then
		dt_nasc_recem_nascido_w		:= null;
		nr_seq_prestador_w		:= null;
	end;

	select	trunc(pkg_date_utils.get_DiffDate(coalesce(dt_nasc_recem_nascido_w, dt_nasc_benef_w), clock_timestamp(), 'YEAR')),
		pkg_date_utils.get_DiffDate(coalesce(dt_nasc_recem_nascido_w, dt_nasc_benef_w), clock_timestamp(), 'MONTH%'),
		pkg_date_utils.get_DiffDate(coalesce(dt_nasc_recem_nascido_w, dt_nasc_benef_w), clock_timestamp(), 'DAY%')
	into STRICT	qt_anos_w,
		qt_meses_w,
		qt_dias_w
	;
	
	if (qt_dias_w	>= 30) then
		qt_dias_w	:= 29;
	end if;

	qt_dias_regra_w := (qt_anos_w*365) + (qt_meses_w*30) + qt_dias_w;
	
	-- Obter em qual regra que o beneficiario se encaixou
	for r_cRegra_w in cRegra loop

		qt_dias_regra_inicial_w	:= (r_cRegra_w.qt_ano_inicial*365)	+ (r_cRegra_w.qt_mes_inicial*30)	+ r_cRegra_w.qt_dia_inicial;
		qt_dias_regra_final_w	:= (r_cRegra_w.qt_ano_final*365)	+ (r_cRegra_w.qt_mes_final*30)		+ r_cRegra_w.qt_dia_final;
		
		if (qt_dias_regra_w between qt_dias_regra_inicial_w and qt_dias_regra_final_w) then
			ie_idade_liberada_w := 'S';
		else
			ie_idade_liberada_w := 'N';
		end if;
		
		if ie_idade_liberada_w = 'S' then
			nr_seq_regra_w	:= r_cRegra_w.nr_sequencia;
			qt_liberado_w		:= r_cRegra_w.qt_liberado;
			qt_dia_inicial_w		:= r_cRegra_w.qt_dia_inicial;
			qt_mes_inicial_w	:= r_cRegra_w.qt_mes_inicial;
			qt_ano_inicial_w	:= r_cRegra_w.qt_ano_inicial;
			qt_dia_final_w		:= r_cRegra_w.qt_dia_final;
			qt_mes_final_w	:= r_cRegra_w.qt_mes_final;
			qt_ano_final_w		:= r_cRegra_w.qt_ano_final;
		end if;
	end loop;

	if (dt_nasc_recem_nascido_w IS NOT NULL AND dt_nasc_recem_nascido_w::text <> '') then
		dt_inicio_validacao_w := add_months(add_months(dt_nasc_recem_nascido_w + qt_dia_inicial_w, qt_mes_inicial_w),qt_ano_inicial_w * 12);
		dt_fim_validacao_w := add_months(add_months(dt_nasc_recem_nascido_w + qt_dia_final_w, qt_mes_final_w),qt_ano_final_w * 12);
	elsif (dt_nasc_benef_w IS NOT NULL AND dt_nasc_benef_w::text <> '') then
		dt_inicio_validacao_w := add_months(add_months(dt_nasc_benef_w + qt_dia_inicial_w, qt_mes_inicial_w),qt_ano_inicial_w * 12);
		dt_fim_validacao_w := add_months(add_months(dt_nasc_benef_w + qt_dia_final_w, qt_mes_final_w),qt_ano_final_w * 12);
	end if;

	if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
		if (ie_utiliza_filtro_p	= 'N') then	
			open C01;
			loop
			fetch C01 into	
				nr_seq_guia_proc_w,
				cd_proc_guia_w,
				ie_origem_proc_guia_w,
				qt_solicitada_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				if (qt_solicitada_w > qt_liberado_w) then					
					nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, nr_seq_guia_proc_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 1, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
								
					CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
									nr_seq_guia_p, null, null,
									nr_seq_guia_proc_w, null, null,
									null, null, null,
									nm_usuario_p, cd_estabelecimento_p);
				else
					select	sum(b.qt_autorizada)
					into STRICT	qt_autorizada_w
					from	pls_guia_plano a,
						pls_guia_plano_proc b
					where	a.nr_sequencia  = b.nr_seq_guia
					and 	a.nr_seq_segurado	= nr_seq_segurado_p
					and	a.ie_estagio 	not in (4, 7, 8)
					and	(a.dt_autorizacao IS NOT NULL AND a.dt_autorizacao::text <> '')
					and	a.nr_sequencia	<> nr_seq_guia_p
					and	b.ie_origem_proced = ie_origem_proc_guia_w
					and	b.cd_procedimento  = cd_proc_guia_w			
					and	establishment_timezone_utils.startofday(a.dt_autorizacao)	between dt_inicio_validacao_w	and 	dt_fim_validacao_w;

					if ((qt_solicitada_w + qt_autorizada_w) > qt_liberado_w) then						

						nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, nr_seq_guia_proc_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 1, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
								
						CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
										nr_seq_guia_p, null, null,
										nr_seq_guia_proc_w, null, null,
										null, null, null,
										nm_usuario_p, cd_estabelecimento_p);			
					end if;
				end if;
				end;
			end loop;
			close C01;
			open C02;
			loop
			fetch C02 into	
				nr_seq_guia_mat_w,
				nr_seq_material_w,
				qt_solicitada_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				if (qt_solicitada_w > qt_liberado_w) then
					nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, null, nr_seq_guia_mat_w, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 2, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
							
					CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
									nr_seq_guia_p, null, null,
									null, nr_seq_guia_mat_w, null,
									null, null, null,
									nm_usuario_p, cd_estabelecimento_p);
				else
					select	sum(b.qt_autorizada)
					into STRICT	qt_autorizada_w
					from	pls_guia_plano a,
						pls_guia_plano_mat b
					where	a.nr_sequencia  = b.nr_seq_guia
					and 	a.nr_seq_segurado	= nr_seq_segurado_p
					and	a.ie_estagio 	not in (4, 7, 8)
					and	(a.dt_autorizacao IS NOT NULL AND a.dt_autorizacao::text <> '')
					and	a.nr_sequencia	<> nr_seq_guia_p
					and	b.nr_seq_material = nr_seq_material_w			
					and	establishment_timezone_utils.startofday(a.dt_autorizacao)	between dt_inicio_validacao_w	and 	dt_fim_validacao_w;
					
					if ((qt_solicitada_w + qt_autorizada_w) > qt_liberado_w) then
						nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, null, nr_seq_guia_mat_w, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 2, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
							
						CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
										nr_seq_guia_p, null, null,
										null, nr_seq_guia_mat_w, null,
										null, null, null,
										nm_usuario_p, cd_estabelecimento_p);
					end if;
				end if;
				end;
			end loop;
			close C02;					
		elsif (ie_utiliza_filtro_p	= 'S') then
			ie_verificar_outras_aut_w := 'S';			
			open C01;
			loop
			fetch C01 into	
				nr_seq_guia_proc_w,
				cd_proc_guia_w,
				ie_origem_proc_guia_w,
				qt_solicitada_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin				
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, nr_seq_guia_proc_w, null, null, null, null, cd_proc_guia_w, ie_origem_proc_guia_w, null, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
								
				if (ie_regra_w	= 'S') then					
					if (qt_solicitada_w > qt_liberado_w) then
						ie_verificar_outras_aut_w := 'N';
						nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, nr_seq_guia_proc_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 1, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
								
						CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
									nr_seq_guia_p, null, null,
									nr_seq_guia_proc_w, null, null,
									null, null, null,
									nm_usuario_p, cd_estabelecimento_p);
					end if;
				end if;	
				if (ie_regra_w	= 'S' and ie_verificar_outras_aut_w = 'S') then	
					qt_total_itens_w	:= 0;
					qt_autorizada_w		:= 0;
					open cGuias;
					loop
					fetch cGuias into	
						nr_seq_guia_w;
					EXIT WHEN NOT FOUND; /* apply on cGuias */
						begin					
						open cProcGuias;
						loop
						fetch cProcGuias into	
							cd_proc_guia_ww,
							ie_origem_proc_guia_ww,
							qt_autorizada_w;
						EXIT WHEN NOT FOUND; /* apply on cProcGuias */
							begin	
							if (cd_proc_guia_ww	= cd_proc_guia_w) and (ie_origem_proc_guia_ww = ie_origem_proc_guia_w) then								
								qt_total_itens_w	:= qt_total_itens_w + qt_autorizada_w;							
							end if;						
							end;
						end loop;
						close cProcGuias;					
						if	((qt_total_itens_w + qt_solicitada_w) > qt_liberado_w) then			
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, nr_seq_guia_proc_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 1, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
									
							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
											nr_seq_guia_p, null, null,
											nr_seq_guia_proc_w, null, null,
											null, null, null,
											nm_usuario_p, cd_estabelecimento_p);							
						end if;
						end;
					end loop;
					close cGuias;	
				end if;	
				end;
			end loop;
			close C01;
			open C02;
			loop
			fetch C02 into	
				nr_seq_guia_mat_w,
				nr_seq_material_w,
				qt_solicitada_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, null, nr_seq_guia_mat_w, null, null, null, null, null, nr_seq_material_w, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
								
				if (ie_regra_w	= 'S') then
					if (qt_solicitada_w > qt_liberado_w) then
						ie_verificar_outras_aut_w := 'N';
						nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, null, nr_seq_guia_mat_w, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 2, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
								
						CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
										nr_seq_guia_p, null, null,
										null, nr_seq_guia_mat_w, null,
										null, null, null,
										nm_usuario_p, cd_estabelecimento_p);
					end if;	
				end if;	
				if (ie_regra_w	= 'S' and ie_verificar_outras_aut_w = 'S') then
					qt_total_itens_w	:= 0;
					qt_autorizada_w		:= 0;				
					open cGuias;
					loop
					fetch cGuias into	
						nr_seq_guia_w;
					EXIT WHEN NOT FOUND; /* apply on cGuias */
						begin					
						open cMatGuias;
						loop
						fetch cMatGuias into	
							nr_seq_material_ww,
							qt_autorizada_w;
						EXIT WHEN NOT FOUND; /* apply on cMatGuias */
							begin
							if (nr_seq_material_ww	= nr_seq_material_w) then							
								qt_total_itens_w	:= qt_total_itens_w + qt_autorizada_w;									
							end if;														
							end;
						end loop;
						close cMatGuias;						
						if	((qt_total_itens_w + qt_solicitada_w) > qt_liberado_w) then			
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, null, nr_seq_guia_mat_w, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 2, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
								
							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
											nr_seq_guia_p, null, null,
											null, nr_seq_guia_mat_w, null,
											null, null, null,
											nm_usuario_p, cd_estabelecimento_p);
						end if;
						end;	
					end loop;
					close cGuias;				
				end if;
				end;
			end loop;
			close C02;
		end if;	
	end if;
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	begin
		select	dt_nasc_recem_nascido,
			nr_seq_prestador,
			pls_obter_dados_segurado(nr_seq_segurado, 'NAS')
		into STRICT	dt_nasc_recem_nascido_w,
			nr_seq_prestador_req_w,
			dt_nasc_benef_w
		from	pls_requisicao
		where	nr_sequencia 	= nr_seq_requisicao_p;
	exception
	when others then
		dt_nasc_recem_nascido_w		:= null;
		nr_seq_prestador_req_w		:= null;
	end;

	select	trunc(pkg_date_utils.get_DiffDate(coalesce(dt_nasc_recem_nascido_w, dt_nasc_benef_w), clock_timestamp(),'YEAR')),
		pkg_date_utils.get_DiffDate(coalesce(dt_nasc_recem_nascido_w, dt_nasc_benef_w), clock_timestamp(), 'MONTH%'),
		pkg_date_utils.get_DiffDate(coalesce(dt_nasc_recem_nascido_w, dt_nasc_benef_w), clock_timestamp(), 'DAY%')
	into STRICT	qt_anos_w,
		qt_meses_w,
		qt_dias_w
	;
	
	if (qt_dias_w	>= 30) then
		qt_dias_w	:= 29;
	end if;

	qt_dias_regra_w := (qt_anos_w*365) + (qt_meses_w*30) + qt_dias_w;

	-- Obter em qual regra que o beneficiario se encaixou
	for r_cRegra_w in cRegra loop

		qt_dias_regra_inicial_w	:= (r_cRegra_w.qt_ano_inicial*365)	+ (r_cRegra_w.qt_mes_inicial*30)	+ r_cRegra_w.qt_dia_inicial;
		qt_dias_regra_final_w	:= (r_cRegra_w.qt_ano_final*365)	+ (r_cRegra_w.qt_mes_final*30)		+ r_cRegra_w.qt_dia_final;
				
		if (qt_dias_regra_w between qt_dias_regra_inicial_w and qt_dias_regra_final_w) then
			ie_idade_liberada_w := 'S';
		else
			ie_idade_liberada_w := 'N';
		end if;
		
		if ie_idade_liberada_w = 'S' then
			nr_seq_regra_w	:= r_cRegra_w.nr_sequencia;
			qt_liberado_w		:= r_cRegra_w.qt_liberado;
			qt_dia_inicial_w		:= r_cRegra_w.qt_dia_inicial;
			qt_mes_inicial_w	:= r_cRegra_w.qt_mes_inicial;
			qt_ano_inicial_w	:= r_cRegra_w.qt_ano_inicial;
			qt_dia_final_w		:= r_cRegra_w.qt_dia_final;
			qt_mes_final_w	:= r_cRegra_w.qt_mes_final;
			qt_ano_final_w		:= r_cRegra_w.qt_ano_final;
		end if;
	end loop;

	if (dt_nasc_recem_nascido_w IS NOT NULL AND dt_nasc_recem_nascido_w::text <> '') then
		dt_inicio_validacao_w := add_months(add_months(dt_nasc_recem_nascido_w + qt_dia_inicial_w, qt_mes_inicial_w),qt_ano_inicial_w * 12);
		dt_fim_validacao_w := add_months(add_months(dt_nasc_recem_nascido_w + qt_dia_final_w, qt_mes_final_w),qt_ano_final_w * 12);
	elsif (dt_nasc_benef_w IS NOT NULL AND dt_nasc_benef_w::text <> '') then
		dt_inicio_validacao_w := add_months(add_months(dt_nasc_benef_w + qt_dia_inicial_w, qt_mes_inicial_w),qt_ano_inicial_w * 12);
		dt_fim_validacao_w := add_months(add_months(dt_nasc_benef_w + qt_dia_final_w, qt_mes_final_w),qt_ano_final_w * 12);
	end if;

	if (ie_utiliza_filtro_p	= 'N') then
		qt_solicitada_w	:= 0;			
		open C11;
		loop
		fetch C11 into	
			nr_seq_req_proc_w,
			cd_procedimento_req_w,
			ie_origem_proced_req_w,
			qt_solicitada_w;
		EXIT WHEN NOT FOUND; /* apply on C11 */
		
			begin
			if (qt_solicitada_w > qt_liberado_w) then
				nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, nr_seq_req_proc_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 5, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
							
				CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
							null, nr_seq_requisicao_p, null,
							null, null, nr_seq_req_proc_w,
							null, null, null,
							nm_usuario_p, cd_estabelecimento_p);	
			else
				select	sum(b.qt_procedimento)
				into STRICT	qt_autorizada_w
				from	pls_requisicao a,
					pls_requisicao_proc b
				where	a.nr_sequencia  = b.nr_seq_requisicao
				and 	a.nr_seq_segurado	= nr_seq_segurado_p
				and	a.ie_estagio 	not in (1, 3, 7)
				and	(a.dt_fim_processo_req IS NOT NULL AND a.dt_fim_processo_req::text <> '')
				and	a.nr_sequencia	<> nr_seq_requisicao_p
				and	b.ie_origem_proced = ie_origem_proced_req_w
				and	b.cd_procedimento  = cd_procedimento_req_w			
				and	establishment_timezone_utils.startofday(a.dt_fim_processo_req)	between dt_inicio_validacao_w	and 	dt_fim_validacao_w;

				if ((qt_solicitada_w + qt_autorizada_w) > qt_liberado_w) then						
					nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, nr_seq_req_proc_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 5, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
							
					CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
									null, nr_seq_requisicao_p, null,
									null, null, nr_seq_req_proc_w,
									null, null, null,
									nm_usuario_p, cd_estabelecimento_p);
				end if;
			end if;					
			end;
		end loop;
		close C11;
		open C12;
		loop
		fetch C12 into	
			nr_seq_req_mat_w,
			nr_seq_material_req_w,
			qt_solicitada_w;
		EXIT WHEN NOT FOUND; /* apply on C12 */
			begin			
			if (qt_solicitada_w > qt_liberado_w) then
				nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, null, nr_seq_req_mat_w, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 6, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
						
				CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
								null, nr_seq_requisicao_p, null,
								null, null, null,
								nr_seq_req_mat_w, null, null,
								nm_usuario_p, cd_estabelecimento_p);
			else
				select	sum(b.qt_material)
				into STRICT	qt_autorizada_w
				from	pls_requisicao a,
					pls_requisicao_mat b
				where	a.nr_sequencia  = b.nr_seq_requisicao
				and 	a.nr_seq_segurado	= nr_seq_segurado_p
				and	a.ie_estagio 	not in (1, 3, 7)
				and	(a.dt_fim_processo_req IS NOT NULL AND a.dt_fim_processo_req::text <> '')
				and	a.nr_sequencia	<> nr_seq_requisicao_p
				and	b.nr_seq_material	= nr_seq_material_req_w		
				and	establishment_timezone_utils.startofday(a.dt_fim_processo_req)	between dt_inicio_validacao_w	and 	dt_fim_validacao_w;

				if ((qt_solicitada_w + qt_autorizada_w) > qt_liberado_w) then
					nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, null, nr_seq_req_mat_w, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 6, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
						
					CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
									null, nr_seq_requisicao_p, null,
									null, null, null,
									nr_seq_req_mat_w, null, null,
									nm_usuario_p, cd_estabelecimento_p);
				end if;
			end if;
			end;
		end loop;
		close C12;				
	elsif (ie_utiliza_filtro_p	= 'S') then
		ie_verificar_outras_aut_w := 'S';	
		qt_solicitada_w	:= 0;	
		open C11;
		loop
		fetch C11 into	
			nr_seq_req_proc_w,
			cd_procedimento_req_w,
			ie_origem_proced_req_w,
			qt_solicitada_w;
		EXIT WHEN NOT FOUND; /* apply on C11 */
			begin
			SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, nr_seq_req_proc_w, null, null, cd_procedimento_req_w, ie_origem_proced_req_w, null, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_req_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;							
			if (ie_regra_w	= 'S') then
				if (qt_solicitada_w > qt_liberado_w) then
					ie_verificar_outras_aut_w := 'N';
					nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, nr_seq_req_proc_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 5, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
							
					CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
									null, nr_seq_requisicao_p, null,
									null, null, nr_seq_req_proc_w,
									null, null, null,
									nm_usuario_p, cd_estabelecimento_p);
				end if;
			end if;						
			if (ie_regra_w = 'S' and ie_verificar_outras_aut_w = 'S') then
				qt_total_itens_w	:= 0;		
				qt_autorizada_w		:= 0;
				open cRequisicoes;
				loop
				fetch cRequisicoes into	
					nr_seq_requisicao_w;
				EXIT WHEN NOT FOUND; /* apply on cRequisicoes */
					begin					
					open cProcReq;
					loop
					fetch cProcReq into	
						cd_procedimento_req_ww,
						ie_origem_proced_req_ww,
						qt_autorizada_w;
					EXIT WHEN NOT FOUND; /* apply on cProcReq */
						begin								
						if (cd_procedimento_req_ww		= cd_procedimento_req_w) and (ie_origem_proced_req_ww 	= ie_origem_proced_req_w) then						
								qt_total_itens_w	:= qt_total_itens_w + qt_autorizada_w;									
						end if;
						end;
					end loop;
					close cProcReq;						
					if	((qt_total_itens_w + qt_solicitada_w) > qt_liberado_w) then					
						nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, nr_seq_req_proc_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 5, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
								
						CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
										null, nr_seq_requisicao_p, null,
										null, null, nr_seq_req_proc_w,
										null, null, null,
										nm_usuario_p, cd_estabelecimento_p);	
					end if;
					end;
				end loop;
				close cRequisicoes;
			end if;
		end;
		end loop;
		close C11;				
		open C12;
		loop
		fetch C12 into	
			nr_seq_req_mat_w,
			nr_seq_material_req_w,
			qt_solicitada_w;
		EXIT WHEN NOT FOUND; /* apply on C12 */
			begin					
			SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, null, nr_seq_req_mat_w, null, null, null, nr_seq_material_req_w, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_req_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
						
			if (ie_regra_w	= 'S') then					
				if (qt_solicitada_w > qt_liberado_w) then						
					ie_verificar_outras_aut_w := 'N';
					nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, null, nr_seq_req_mat_w, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 6, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
						
					CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
									null, nr_seq_requisicao_p, null,
									null, null, null,
									nr_seq_req_mat_w, null, null,
									nm_usuario_p, cd_estabelecimento_p);
				end if;
			end if;				
			if (ie_regra_w	= 'S' and ie_verificar_outras_aut_w = 'S') then
				qt_total_itens_w	:= 0;
				qt_autorizada_w		:= 0;
				open cRequisicoes;
				loop
				fetch cRequisicoes into	
					nr_seq_requisicao_w;
				EXIT WHEN NOT FOUND; /* apply on cRequisicoes */
					begin
					open cMatReq;
					loop
					fetch cMatReq into	
						nr_seq_material_req_ww,
						qt_autorizada_w;
					EXIT WHEN NOT FOUND; /* apply on cMatReq */
						begin
						if (nr_seq_material_req_ww	= nr_seq_material_req_w) then
							qt_total_itens_w	:= qt_total_itens_w + qt_autorizada_w;
						end if;
						end;
					end loop;
					close cMatReq;						
					if	((qt_total_itens_w + qt_solicitada_w) > qt_liberado_w) then					
						nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, null, nr_seq_req_mat_w, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 6, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
							
						CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
										null, nr_seq_requisicao_p, null,
										null, null, null,
										nr_seq_req_mat_w, null, null,
										nm_usuario_p, cd_estabelecimento_p);
					end if;
					end;					
				end loop;
				close cRequisicoes;
			end if;
		end;
		end loop;
		close C12;			
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_valida_ocor_aut_idad_benef ( nr_seq_ocor_combinada_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_utiliza_filtro_p text, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

