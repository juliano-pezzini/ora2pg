-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lote_coparticipacao (nr_seq_lote_p pls_lote_coparticipacao.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar o lote de coparticipação
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  ]  Objetos do dicionário [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------

Referências:
	OPS - Controle de Coparticipações

ie_periodo_w
	1	Considerar protocolos com a competência até o mês de competência do lote
	2	Considerar protocolos com a competência até o mês anterior de competência do lote
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
vl_coparticipacao_w		pls_lib_coparticipacao.vl_coparticipacao%type;
vl_coparticipacao_unit_w	pls_lib_coparticipacao.vl_coparticipacao_unit%type;
vl_base_copartic_w		pls_lib_coparticipacao.vl_base_copartic%type;
qt_liberada_copartic_w		pls_lib_coparticipacao.qt_liberada_copartic%type;
cd_procedimento_w		pls_lib_coparticipacao.cd_procedimento%type;
nr_seq_prestador_exec_w		pls_lib_coparticipacao.nr_seq_prestador_exec%type;
nr_seq_prestador_atend_w	pls_lib_coparticipacao.nr_seq_prestador_atend%type;
nr_seq_conta_copartic_w		pls_lib_coparticipacao.nr_seq_conta_coparticipacao%type;
nr_seq_segurado_w		pls_lib_coparticipacao.nr_seq_segurado%type;
nr_seq_material_w		pls_lib_coparticipacao.nr_seq_material%type;
ie_origem_proced_w		pls_lib_coparticipacao.ie_origem_proced%type;
tx_coparticipacao_w		pls_lib_coparticipacao.tx_coparticipacao%type;
nr_seq_lib_copartic_w		pls_lib_coparticipacao.nr_sequencia%type;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
dt_atendimento_referencia_w	pls_conta.dt_atendimento_referencia%type;
ie_forma_pagamento_w		pls_parametro_pagamento.ie_forma_pagamento%type;
nr_seq_regra_w			pls_lote_coparticipacao.nr_seq_regra%type;
dt_competencia_w		pls_lote_coparticipacao.dt_competencia%type;
ie_periodo_w			pls_regra_copart_item.ie_periodo%type;
nr_seq_regra_copartic_w		pls_lib_coparticipacao.nr_seq_regra_copartic%type;
nr_seq_regra_ww			pls_lib_coparticipacao.nr_seq_regra%type;
dt_mes_competencia_w		timestamp;
dt_referencia_regra_w		timestamp;
dt_atendimento_ref_regra_w	timestamp;
vl_liberado_w			double precision;
dt_inicio_geracao_w		pls_lote_coparticipacao.dt_inicio_geracao%type;
dt_fim_geracao_w		pls_lote_coparticipacao.dt_fim_geracao%type;
hr_geracao_lote_w		pls_lote_coparticipacao.hr_geracao_lote%type;
qt_segundos_geracao_w		bigint;
qt_horas_lote_w			bigint;
qt_minutos_lote_w		bigint;
qt_segundos_lote_w		bigint;
nr_seq_analise_w		pls_lote_coparticipacao.nr_seq_analise%type;
ie_lote_gerado_w		varchar(1);
nr_seq_lote_recalculo_w		pls_lote_coparticipacao.nr_seq_lote_recalculo%type;
nr_dia_max_w			pls_regra_copart_item.nr_dia_max%type;
nr_seq_grupo_contrato_w		pls_regra_copart_item.nr_seq_grupo_contrato%type;
nr_seq_contrato_w		pls_regra_copart_item.nr_seq_contrato%type;
nr_seq_plano_w			pls_regra_copart_item.nr_seq_plano%type;
ds_cursor_proc_w		varchar(4000);
ds_cursor_mat_w			varchar(4000);
ds_cursor_restr_mat_w		varchar(1000);
ds_cursor_restr_proc_w		varchar(1000);
ds_sql_w 			varchar(4000);
bind_sql_valor_w		sql_pck.t_dado_bind;
cursor_w			sql_pck.t_cursor;
nr_seq_intercambio_w		pls_segurado.nr_seq_intercambio%type;
nr_seq_contrato_seg_w		pls_segurado.nr_seq_contrato%type;
ie_grupo_contrato_ok_w		varchar(1) := 'S';
cd_guia_ref_w			pls_conta.cd_guia_referencia%type;
cd_serie_procurar_w		pls_regra_copart_item_exce.cd_serie_guia%type;
tb_series_w			pls_util_cta_pck.t_varchar2_table_20;
nr_index_w			integer := 0;
ie_execao_w			varchar(1) := 'N';
nr_seq_grupo_produto_w		pls_regra_copart_item.nr_seq_grupo_produto%type;
ie_permite_glosa_w		pls_regra_copart_item.ie_permite_glosa%type;
ie_copartic_contestacao_w	pls_parametros.ie_copartic_contestacao%type;
ie_rec_glosa_w			pls_parametros_rec_glosa.ie_gerar_coparticipacao%type;
qt_max_dias_w			pls_regra_copart_item.qt_max_dias%type;
ie_qt_max_dias_valido_w		varchar(1);
dt_atual_w			timestamp;


c_preco_contrato CURSOR( nr_seq_grupo_pc	pls_preco_grupo_contrato.nr_sequencia%type) FOR
	SELECT	nr_seq_contrato,
		nr_seq_intercambio
	from 	pls_preco_contrato
	where 	nr_seq_grupo = nr_seq_grupo_pc;

c_excecao CURSOR(nr_seq_regra_pc pls_regra_copart_controle.nr_sequencia%type) FOR
	SELECT 	cd_serie_guia
	from	pls_regra_copart_item_exce
	where	nr_seq_regra 	= nr_seq_regra_pc
	and	ie_situacao 	= 'A';

BEGIN
dt_inicio_geracao_w	:= clock_timestamp();
ie_lote_gerado_w	:= 'N';

select	coalesce(max(ie_forma_pagamento), 'P')
into STRICT	ie_forma_pagamento_w
from	pls_parametro_pagamento
where	cd_estabelecimento	= cd_estabelecimento_p;

select	coalesce(max(ie_copartic_contestacao), 'N')
into STRICT	ie_copartic_contestacao_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;

select	coalesce(max(ie_gerar_coparticipacao), 'S')
into STRICT	ie_rec_glosa_w
from	pls_parametros_rec_glosa
where	cd_estabelecimento = cd_estabelecimento_p;

select	nr_seq_regra,
	dt_competencia,
	nr_seq_analise,
	nr_seq_lote_recalculo
into STRICT	nr_seq_regra_w,
	dt_competencia_w,
	nr_seq_analise_w,
	nr_seq_lote_recalculo_w
from	pls_lote_coparticipacao
where	nr_sequencia	= nr_seq_lote_p;

--Só poderá ser cadastrado um único registro, max para evitar no data found.
select	max(ie_periodo),
	max(nr_dia_max),
	max(nr_seq_grupo_contrato),
	max(nr_seq_contrato),
	max(nr_seq_plano),
	max(nr_seq_grupo_produto),
	max(ie_permite_glosa),
	max(qt_max_dias)
into STRICT	ie_periodo_w,
	nr_dia_max_w,
	nr_seq_grupo_contrato_w,
	nr_seq_contrato_w,
	nr_seq_plano_w,
	nr_seq_grupo_produto_w,
	ie_permite_glosa_w,
	qt_max_dias_w
from	pls_regra_copart_item
where	nr_seq_regra	= nr_seq_regra_w;

if (ie_periodo_w = '1') then /* Considerar protocolos com a competência até o mês de competência do lote */
	dt_referencia_regra_w	:= last_day(dt_competencia_w); --Retirado o fim_dia pois quando a variavel é passada como bind não é enviado a hora
	if (coalesce(nr_dia_max_w,0) != 0) then
	dt_atendimento_ref_regra_w	:= fim_dia(to_date(to_char(nr_dia_max_w) || '/' || to_char(dt_competencia_w, 'mm/yyyy')));
	end if;

elsif (ie_periodo_w = '2') then /* Considerar protocolos com a competência até o mês anterior de competência do lote */
	dt_referencia_regra_w	:= last_day(add_months(dt_competencia_w,-1)); --Retirado o fim_dia pois quando a variavel é passada como bind não é enviado a hora
	if (coalesce(nr_dia_max_w,0) != 0) then
	dt_atendimento_ref_regra_w	:= fim_dia(add_months(to_date(to_char(nr_dia_max_w) || '/' || to_char(dt_competencia_w, 'mm/yyyy')),-1));
	end if;
end if;

--Cria as restrições de acordo com a necessidade
if (ie_forma_pagamento_w = 'P') then
	ds_cursor_restr_proc_w := ds_cursor_restr_proc_w|| ' and (d.ie_status in (''3'',''4'',''6'',''7'') )'|| pls_util_pck.enter_w;
	ds_cursor_restr_mat_w :=  ds_cursor_restr_mat_w||  ' and (d.ie_status in (''3'',''4'',''6'',''7'') )'|| pls_util_pck.enter_w;
elsif (ie_forma_pagamento_w = 'C') then
	ds_cursor_restr_proc_w := ds_cursor_restr_proc_w|| ' and b.ie_status in (''F'',''S'')'|| pls_util_pck.enter_w;
	ds_cursor_restr_mat_w :=  ds_cursor_restr_mat_w||  ' and b.ie_status in (''F'',''S'')'|| pls_util_pck.enter_w;
end if;

if (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') then
	ds_cursor_restr_proc_w:=ds_cursor_restr_proc_w||'and  e.nr_seq_plano = '||nr_seq_plano_w|| pls_util_pck.enter_w;
	ds_cursor_restr_mat_w:= ds_cursor_restr_mat_w||'and  e.nr_seq_plano = '||nr_seq_plano_w|| pls_util_pck.enter_w;
end if;

if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
	ds_cursor_restr_proc_w:= ds_cursor_restr_proc_w||' and  e.nr_seq_contrato = '||nr_seq_contrato_w|| pls_util_pck.enter_w;
	ds_cursor_restr_mat_w:= ds_cursor_restr_mat_w|| ' and  e.nr_seq_contrato = '||nr_seq_contrato_w|| pls_util_pck.enter_w;
end if;

if (nr_seq_grupo_produto_w IS NOT NULL AND nr_seq_grupo_produto_w::text <> '') then
	--monta restrição com a conta proc
	ds_cursor_restr_proc_w:= ds_cursor_restr_proc_w||' and	exists	(select	1' || pls_util_pck.enter_w ||
							'		from	pls_preco_produto x ' || pls_util_pck.enter_w ||
							'		where	x.nr_seq_plano = e.nr_seq_plano ' || pls_util_pck.enter_w ||
							'		and	x.nr_seq_grupo = :nr_seq_grupo_produto)';
	
	--monta restrição conta mat
	ds_cursor_restr_mat_w:= ds_cursor_restr_mat_w||	' and	exists	(select	1' || pls_util_pck.enter_w ||
							'		from	pls_preco_produto x ' || pls_util_pck.enter_w ||
							'		where	x.nr_seq_plano = e.nr_seq_plano ' || pls_util_pck.enter_w ||
							'		and	x.nr_seq_grupo = :nr_seq_grupo_produto)';
							
	--alimenta a bind
	bind_sql_valor_w := sql_pck.bind_variable(':nr_seq_grupo_produto', nr_seq_grupo_produto_w, bind_sql_valor_w);						
end if;

if (coalesce(ie_permite_glosa_w,'N') = 'N') then --Caso não permitir itens com glosa acrescenta a restrição aos cursosres de material e procedimento
	ds_cursor_restr_proc_w:= ds_cursor_restr_proc_w || ' and nvl(a.ie_status_coparticipacao,''S'') = ''S'' '|| pls_util_pck.enter_w;
	ds_cursor_restr_mat_w:= ds_cursor_restr_mat_w || ' and nvl(a.ie_status_coparticipacao,''S'') = ''S'' '|| pls_util_pck.enter_w;
else
	if (ie_copartic_contestacao_w = 'S') then
		ds_cursor_restr_proc_w := ds_cursor_restr_proc_w || ' and (d.ie_tipo_protocolo in (''C'',''R'') or nvl(a.ie_status_coparticipacao,''S'') = ''S'') ' || pls_util_pck.enter_w;
		ds_cursor_restr_mat_w := ds_cursor_restr_mat_w || '  and (d.ie_tipo_protocolo in (''C'',''R'') or nvl(a.ie_status_coparticipacao,''S'') = ''S'') ' || pls_util_pck.enter_w;
	end if;
end if;

if (ie_rec_glosa_w = 'N') then
	ds_cursor_restr_proc_w := ds_cursor_restr_proc_w || ' and a.nr_seq_proc_rec is null and a.nr_seq_mat_rec is null ' || pls_util_pck.enter_w;
	ds_cursor_restr_mat_w := ds_cursor_restr_mat_w || ' and a.nr_seq_mat_rec is null and a.nr_seq_proc_rec is null ' || pls_util_pck.enter_w;
end if;


tb_series_w.delete;
--Carrega as séreis da regra de exceção em memória para não ter perda de desempenho por troca de contexto pl/sql - > SQL.
for r_c_excecao_w in c_excecao(nr_seq_regra_w) loop

	tb_series_w(nr_index_w) := r_c_excecao_w.cd_serie_guia;
	nr_index_w := nr_index_w +1;

end loop;


ds_cursor_proc_w := '	select	a.vl_coparticipacao,'|| pls_util_pck.enter_w||
		'		a.vl_coparticipacao_unit,'|| pls_util_pck.enter_w||
		'		a.vl_base_copartic,'|| pls_util_pck.enter_w||
		'		a.qt_liberada_copartic,'|| pls_util_pck.enter_w||
		'		nvl(c.vl_liberado,0),'|| pls_util_pck.enter_w||
		'		c.cd_procedimento,'|| pls_util_pck.enter_w||
		'		b.nr_seq_prestador_exec,'|| pls_util_pck.enter_w||
		'		b.nr_seq_prestador,'|| pls_util_pck.enter_w||
		'		a.nr_sequencia,'|| pls_util_pck.enter_w||
		'		b.nr_seq_segurado,'|| pls_util_pck.enter_w||
		'		null,'|| pls_util_pck.enter_w||
		'		c.ie_origem_proced,'|| pls_util_pck.enter_w||
		'		a.tx_coparticipacao,'|| pls_util_pck.enter_w||
		'		b.dt_atendimento_referencia,'|| pls_util_pck.enter_w||
		'		d.dt_mes_competencia,'|| pls_util_pck.enter_w||
		'		b.nr_sequencia,'|| pls_util_pck.enter_w||
		'		c.nr_seq_regra_copartic,'|| pls_util_pck.enter_w||
		'		a.nr_seq_regra,'|| pls_util_pck.enter_w||
		'		e.nr_seq_contrato, '|| pls_util_pck.enter_w||
		'		e.nr_seq_intercambio, '|| pls_util_pck.enter_w||
		'		b.cd_guia_ok '|| pls_util_pck.enter_w||
		'	from	pls_conta_proc			c,'|| pls_util_pck.enter_w||
		'		pls_conta			b,'|| pls_util_pck.enter_w||
		'		pls_conta_coparticipacao	a,'|| pls_util_pck.enter_w||
		'		pls_protocolo_conta		d,'|| pls_util_pck.enter_w||
		'		pls_segurado			e'|| pls_util_pck.enter_w||
		'	where	c.nr_sequencia	= a.nr_seq_conta_proc '|| pls_util_pck.enter_w||
		'	and	b.nr_sequencia	= c.nr_seq_conta '|| pls_util_pck.enter_w||
		'	and 	a.nr_seq_conta = b.nr_sequencia ' || pls_util_pck.enter_w||
		'	and	d.nr_sequencia	= b.nr_seq_protocolo'|| pls_util_pck.enter_w||
		'	and	b.nr_seq_segurado = e.nr_sequencia'|| pls_util_pck.enter_w||
		'	and	a.nr_seq_mensalidade_seg is null'|| pls_util_pck.enter_w||
		'	and	nvl(a.ie_gerar_mensalidade,''S'') = ''S'' '|| pls_util_pck.enter_w||
		'	and	a.ie_status_mensalidade = ''P'' ' || pls_util_pck.enter_w||
		'	and	nvl(d.ie_tipo_protocolo,''C'') in (''C'',''I'',''F'')'|| pls_util_pck.enter_w||
		'	and	d.dt_mes_competencia <= fim_dia(:dt_referencia_regra)'|| pls_util_pck.enter_w||
		'	and	a.dt_estorno is null'|| pls_util_pck.enter_w||
		'	and not exists(	select 1 ' || pls_util_pck.enter_w||
		'			from	pls_lib_coparticipacao x ' || pls_util_pck.enter_w||
		'			where	x.nr_seq_conta_coparticipacao = a.nr_sequencia) ' || pls_util_pck.enter_w||
		'	and	b.cd_estabelecimento = :cd_estabelecimento'|| pls_util_pck.enter_w||
		ds_cursor_restr_proc_w || pls_util_pck.enter_w || ' union all' || pls_util_pck.enter_w;

ds_cursor_mat_w := '	select	a.vl_coparticipacao,'|| pls_util_pck.enter_w||
		'		a.vl_coparticipacao_unit,'|| pls_util_pck.enter_w||
		'		a.vl_base_copartic,'|| pls_util_pck.enter_w||
		'		a.qt_liberada_copartic,'|| pls_util_pck.enter_w||
		'		nvl(c.vl_liberado,0),'|| pls_util_pck.enter_w||
		'		null,'|| pls_util_pck.enter_w||
		'		b.nr_seq_prestador_exec,'|| pls_util_pck.enter_w||
		'		b.nr_seq_prestador,'|| pls_util_pck.enter_w||
		'		a.nr_sequencia,'|| pls_util_pck.enter_w||
		'		b.nr_seq_segurado,'|| pls_util_pck.enter_w||
		'		c.nr_seq_material,'|| pls_util_pck.enter_w||
		'		null,'|| pls_util_pck.enter_w||
		'		a.tx_coparticipacao,'|| pls_util_pck.enter_w||
		'		b.dt_atendimento_referencia,'|| pls_util_pck.enter_w||
		'		d.dt_mes_competencia,'|| pls_util_pck.enter_w||
		'		b.nr_sequencia,'|| pls_util_pck.enter_w||
		'		c.nr_seq_regra_copartic,'|| pls_util_pck.enter_w||
		'		a.nr_seq_regra,'|| pls_util_pck.enter_w||
		'		e.nr_seq_contrato, '|| pls_util_pck.enter_w||
		'		e.nr_seq_intercambio, '|| pls_util_pck.enter_w||
		'		b.cd_guia_ok '|| pls_util_pck.enter_w||
		'	from	pls_conta_mat			c,'|| pls_util_pck.enter_w||
		'		pls_conta			b,'|| pls_util_pck.enter_w||
		'		pls_conta_coparticipacao	a,'|| pls_util_pck.enter_w||
		'		pls_protocolo_conta		d,'|| pls_util_pck.enter_w||
		'		pls_segurado			e'|| pls_util_pck.enter_w||
		'	where	c.nr_sequencia	= a.nr_seq_conta_mat'|| pls_util_pck.enter_w||
		'	and	b.nr_sequencia	= c.nr_seq_conta'|| pls_util_pck.enter_w||
		'	and 	a.nr_seq_conta = b.nr_sequencia ' || pls_util_pck.enter_w||
		'	and	d.nr_sequencia	= b.nr_seq_protocolo'|| pls_util_pck.enter_w||
		'	and	b.nr_seq_segurado = e.nr_sequencia'|| pls_util_pck.enter_w||
		'	and	a.nr_seq_mensalidade_seg is null'|| pls_util_pck.enter_w||
		'	and	nvl(a.ie_gerar_mensalidade,''S'') = ''S'' '|| pls_util_pck.enter_w||
		'	and	a.ie_status_mensalidade = ''P'' ' || pls_util_pck.enter_w||
		'	and	nvl(d.ie_tipo_protocolo,''C'') in (''C'',''I'',''F'')'|| pls_util_pck.enter_w||
		'	and	d.dt_mes_competencia <= fim_dia(:dt_referencia_regra)'|| pls_util_pck.enter_w||
		'	and	a.dt_estorno is null'|| pls_util_pck.enter_w||
		'	and not exists(	select 1 '|| pls_util_pck.enter_w||
		'			from	pls_lib_coparticipacao x '|| pls_util_pck.enter_w||
		'			where	x.nr_seq_conta_coparticipacao = a.nr_sequencia) '|| pls_util_pck.enter_w||
		'	and	b.cd_estabelecimento = :cd_estabelecimento'|| pls_util_pck.enter_w||
		ds_cursor_restr_mat_w||pls_util_pck.enter_w;

bind_sql_valor_w := sql_pck.bind_variable(':dt_referencia_regra', dt_referencia_regra_w, bind_sql_valor_w);
bind_sql_valor_w := sql_pck.bind_variable(':cd_estabelecimento', cd_estabelecimento_p, bind_sql_valor_w);
ds_sql_w := ds_cursor_proc_w||ds_cursor_mat_w;

bind_sql_valor_w := sql_pck.executa_sql_cursor(ds_sql_w, bind_sql_valor_w);

-- utilizado nos if extra da rotina
dt_atual_w := trunc(clock_timestamp(), 'dd');

begin
	loop
		fetch 	cursor_w
		into	vl_coparticipacao_w,
			vl_coparticipacao_unit_w,
			vl_base_copartic_w,
			qt_liberada_copartic_w,
			vl_liberado_w,
			cd_procedimento_w,
			nr_seq_prestador_exec_w,
			nr_seq_prestador_atend_w,
			nr_seq_conta_copartic_w,
			nr_seq_segurado_w,
			nr_seq_material_w,
			ie_origem_proced_w,
			tx_coparticipacao_w,
			dt_atendimento_referencia_w,
			dt_mes_competencia_w,
			nr_seq_conta_w,
			nr_seq_regra_copartic_w,
			nr_seq_regra_ww,
			nr_seq_contrato_seg_w,
			nr_seq_intercambio_w,
			cd_guia_ref_w;
		EXIT WHEN NOT FOUND; /* apply on cursor_w */

			--Obtém a série da guia, faz isso pegando do primeiro caracter até o último antes da incidência do hífen.
			cd_serie_procurar_w := substr(cd_guia_ref_w, 1, position('-' in cd_guia_ref_w) -1 );
			ie_execao_w := 'N';
			if ( tb_series_w.count > 0) then
				for i in tb_series_w.first..tb_series_w.last loop

					if (tb_series_w(i) = cd_serie_procurar_w ) then
						ie_execao_w := 'S';
						exit; --Sai do loop pois já encontrou uma regra de exceção para a guia atual
					end if;

				end loop;
			end if;
			
			--Se não encontrou regra de exceção para a guia atual, então prossegue
			if (ie_execao_w = 'N') then
				--Faz a restrição de grupo de contrato aqui
				if (nr_seq_grupo_contrato_w IS NOT NULL AND nr_seq_grupo_contrato_w::text <> '') then

					ie_grupo_contrato_ok_w := 'N';

					for r_preco_contratos_w in c_preco_contrato(nr_seq_grupo_contrato_w) loop

						--Se a sequencia do contrato ou do intercâmbio do segurado estiver presente no grupo de contratop da  regra, então é válido e pode sair do loop
						if	((r_preco_contratos_w.nr_seq_intercambio = nr_seq_intercambio_w) or (r_preco_contratos_w.nr_seq_contrato = nr_seq_contrato_seg_w)) then
							ie_grupo_contrato_ok_w := 'S';
						end if;

					end loop;

				end if;
				
				-- restrige por quantidade de dias maximo que pode gerar

				-- inicializa com o padrão
				ie_qt_max_dias_valido_w := 'S';
				
				-- se foi informado a quantidade de dias maximo, e a soma com a data de referencia da conta for maior que a data atual então está ok

				-- foi quebrado o is not null para manter compatibilidade com regras sem este valor informado, e para ficar mais legivel
				if (qt_max_dias_w IS NOT NULL AND qt_max_dias_w::text <> '') then
					
					-- se a soma da data de atendimento com o max dias for inferior a data atual, quer dizer que está fora da abrangencia

					-- e não deverá ser considerado
					if   ((dt_atendimento_referencia_w + qt_max_dias_w) < dt_atual_w) then
					
						ie_qt_max_dias_valido_w := 'N';
					end if;
				end if;
				
				
				--Se a regra não restringir por grupo de contrato ou se restringir e for válido, então prossegue
				if (ie_grupo_contrato_ok_w = 'S') and (ie_qt_max_dias_valido_w = 'S') then

					insert	into	pls_lib_coparticipacao(	nr_sequencia, nm_usuario, dt_atualizacao,
							nr_seq_lote, nr_seq_prestador_exec, nr_seq_prestador_atend,
							nr_seq_conta_coparticipacao, dt_atualizacao_nrec, nm_usuario_nrec,
							tx_coparticipacao, vl_coparticipacao, vl_coparticipacao_unit,
							vl_base_copartic, qt_liberada_copartic, nr_seq_segurado,
							vl_liberado, nr_seq_material, dt_emissao,
							cd_procedimento, ie_origem_proced, dt_mes_competencia,
							nr_seq_conta, nr_seq_regra_copartic, nr_seq_regra
						) values (	
							nextval('pls_lib_coparticipacao_seq'), nm_usuario_p, clock_timestamp(),
							nr_seq_lote_p, nr_seq_prestador_exec_w, nr_seq_prestador_atend_w,
							nr_seq_conta_copartic_w, clock_timestamp(), nm_usuario_p,
							tx_coparticipacao_w, vl_coparticipacao_w, vl_coparticipacao_unit_w,
							vl_base_copartic_w, qt_liberada_copartic_w, nr_seq_segurado_w,
							vl_liberado_w, nr_seq_material_w, dt_atendimento_referencia_w,
							cd_procedimento_w, ie_origem_proced_w, dt_mes_competencia_w,
							nr_seq_conta_w, nr_seq_regra_copartic_w, nr_seq_regra_ww
						) returning nr_sequencia into nr_seq_lib_copartic_w;

					CALL pls_criticar_coparticipacao(nr_seq_lib_copartic_w, nm_usuario_p, cd_estabelecimento_p);
					ie_lote_gerado_w	:= 'S';
				end if;
			end if;
	end loop;
	close cursor_w;
exception
	when others then

		if (cursor_w%isopen) then
			close cursor_w;
		end if;
end;

if (ie_lote_gerado_w = 'S') then

	/* NÃO ADICIONAR NADA APÓS ESSA LINHA */

	dt_fim_geracao_w := clock_timestamp();

	select (dt_fim_geracao_w - dt_inicio_geracao_w) * 86400
	into STRICT	qt_segundos_geracao_w
	;

	if (qt_segundos_geracao_w <> 0) then
		qt_horas_lote_w		:= trunc((qt_segundos_geracao_w / 60) / 60);
		qt_segundos_geracao_w	:= qt_segundos_geracao_w - (qt_horas_lote_w * 60 * 60);

		qt_minutos_lote_w	:= trunc(qt_segundos_geracao_w / 60);
		qt_segundos_geracao_w	:= qt_segundos_geracao_w - (qt_minutos_lote_w * 60);

		qt_segundos_lote_w	:= qt_segundos_geracao_w;

		hr_geracao_lote_w	:= lpad(qt_horas_lote_w,2,'0')||':'||lpad(qt_minutos_lote_w,2,'0')||':'||lpad(qt_segundos_lote_w,2,'0');
	else
		hr_geracao_lote_w	:= '00:00:00';
	end if;

	update	pls_lote_coparticipacao
	set	dt_geracao		= clock_timestamp(),
		nm_usuario_geracao	= nm_usuario_p,
		ie_status		= 'G',
		dt_inicio_geracao	= dt_inicio_geracao_w,
		dt_fim_geracao		= dt_fim_geracao_w,
		hr_geracao_lote		= hr_geracao_lote_w
	where	nr_sequencia		= nr_seq_lote_p;

	CALL pls_gravar_hist_lote_copartic(	nr_seq_lote_p,
				'Geração do lote',
				nm_usuario_p,
				cd_estabelecimento_p);
else
	CALL wheb_mensagem_pck.exibir_mensagem_abort( 283667, null ); /* Não existem coparticipações pendentes para geração do lote! */
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lote_coparticipacao (nr_seq_lote_p pls_lote_coparticipacao.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

