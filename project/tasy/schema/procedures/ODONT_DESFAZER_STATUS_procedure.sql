-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE odont_desfazer_status (nr_seq_odont_proced_p bigint, ie_status_p text, nm_usuario_p text) AS $body$
DECLARE


nr_seq_odont_historico_w	bigint;
ie_status_w			varchar(3);
nr_atendimento_w		bigint;
ds_historico_w			varchar(255);
cd_pessoa_fisica_w		varchar(10);
cd_procedimento_w		bigint;
nr_seq_proc_interno_w		bigint;
ie_origem_proced_w		bigint;
qt_procedimento_w		double precision;
NR_SEQ_AREA_w		varchar(3);
NR_SEQ_CONSULTA_w	bigint;
NR_SEQ_LOCAL_w		varchar(3);
NR_SEQ_DENTE_w		varchar(3);
NR_SEQ_SEXTANTE_w	varchar(3);
NR_SEQ_ARCADA_w		varchar(3);
NR_SEQ_TRATAMENTO_w	varchar(3);
NR_SEQ_FACE_w		varchar(3);
ie_raiz_w			varchar(1);
ds_observacao_w		varchar(4000);


BEGIN
if (nr_seq_odont_proced_p IS NOT NULL AND nr_seq_odont_proced_p::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_odont_historico_w
	from	odont_historico
	where	nr_seq_odont_proced = nr_seq_odont_proced_p
	and	dt_historico = (SELECT	max(dt_historico)
				from	odont_historico
				where	nr_seq_odont_proced = nr_seq_odont_proced_p
				and	dt_historico <> (select	max(dt_historico)
							from	odont_historico
							where	nr_seq_odont_proced = nr_seq_odont_proced_p));

	if (nr_seq_odont_historico_w IS NOT NULL AND nr_seq_odont_historico_w::text <> '') then

		select	max(ie_status),
			max(nr_atendimento),
			max(cd_pessoa_fisica)
		into STRICT	ie_status_w,
				nr_atendimento_w,
				cd_pessoa_fisica_w
		from	odont_historico
		where	nr_sequencia = nr_seq_odont_historico_w;

		select	max(NR_SEQ_AREA),
				max(NR_SEQ_CONSULTA),
				max(NR_SEQ_LOCAL),
				max(NR_SEQ_DENTE),
				max(NR_SEQ_SEXTANTE),
				max(NR_SEQ_ARCADA),
				max(NR_SEQ_TRATAMENTO),
				max(NR_SEQ_FACE),
				max(IE_RAIZ)
		into STRICT	NR_SEQ_AREA_w,
				NR_SEQ_CONSULTA_w,
				NR_SEQ_LOCAL_w,
				NR_SEQ_DENTE_w,
				NR_SEQ_SEXTANTE_w,
				NR_SEQ_ARCADA_w,
				NR_SEQ_TRATAMENTO_w,
				NR_SEQ_FACE_w,
				IE_RAIZ_w
		from	odont_procedimento
		where	nr_sequencia = nr_seq_odont_proced_p;

		update	odont_procedimento
		set		ie_status = ie_status_w
		where	nr_sequencia = nr_seq_odont_proced_p;

		select	max(wheb_mensagem_pck.get_texto(798633)||': '|| substr(obter_valor_dominio(5100,ie_status_w),1,255)||chr(10)||
			wheb_mensagem_pck.get_texto(798634)||': '|| substr(obter_valor_dominio(5100,ie_status_p),1,255)||chr(10)||
			wheb_mensagem_pck.get_texto(798635)||': '|| nr_dente||chr(10)||
			wheb_mensagem_pck.get_texto(308034)||': '|| nr_atendimento)
		into STRICT	ds_historico_w
		from	odont_procedimento
		where	nr_sequencia = nr_seq_odont_proced_p
		and	(nr_dente IS NOT NULL AND nr_dente::text <> '');

		if (coalesce(ds_historico_w::text, '') = '') then
			select	max(wheb_mensagem_pck.get_texto(798633)||': '|| substr(obter_valor_dominio(5100,ie_status_w),1,255)||chr(10)||
				wheb_mensagem_pck.get_texto(798634)||': '|| substr(obter_valor_dominio(5100,ie_status_p),1,255)||chr(10)||
				wheb_mensagem_pck.get_texto(798641)||': '|| substr(obter_valor_dominio(5101,ie_tratamento),1,255)||chr(10)||
				wheb_mensagem_pck.get_texto(308034)||': '|| nr_atendimento)
			into STRICT	ds_historico_w
			from	odont_procedimento
			where	nr_sequencia = nr_seq_odont_proced_p
			and	(ie_tratamento IS NOT NULL AND ie_tratamento::text <> '');
		end if;

		select	max(wheb_mensagem_pck.get_texto(798633)||': '|| substr(obter_valor_dominio(5100,ie_status_w),1,255)||chr(10)||
				wheb_mensagem_pck.get_texto(798634)||': '|| substr(obter_valor_dominio(5100,ie_status_p),1,255)||chr(10)||
				wheb_mensagem_pck.get_texto(798641)||': '|| substr(obter_valor_dominio(5101,ie_tratamento),1,255)||chr(10)||
				wheb_mensagem_pck.get_texto(308034)||': '|| nr_atendimento)
			into STRICT	ds_observacao_w
			from	odont_procedimento
			where	nr_sequencia = nr_seq_odont_proced_p;



		insert into odont_historico(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			ds_titulo,
			ds_historico,
			nr_atendimento,
			ie_tipo,
			dt_historico,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ie_status,
			nr_seq_odont_proced,
			cd_pessoa_fisica,
			ds_observacao,
			NR_SEQ_AREA,
			NR_SEQ_CONSULTA,
			NR_SEQ_LOCAL,
			NR_SEQ_DENTE,
			NR_SEQ_SEXTANTE,
			NR_SEQ_ARCADA,
			NR_SEQ_TRATAMENTO,
			NR_SEQ_FACE,
			IE_RAIZ)
		values (	nextval('odont_historico_seq'),
			clock_timestamp(),
			nm_usuario_p,
			wheb_mensagem_pck.get_texto(798654) || ': '||substr(obter_valor_dominio(5100,ie_status_w),1,255),
			coalesce(ds_historico_w, wheb_mensagem_pck.get_texto(798654) || ': '|| substr(obter_valor_dominio(5100,ie_status_w),1,255)),
			nr_atendimento_w,
			'S',
			clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p,
			ie_status_w,
			nr_seq_odont_proced_p,
			cd_pessoa_fisica_w,
			ds_observacao_w,
			NR_SEQ_AREA_w,
			NR_SEQ_CONSULTA_w,
			NR_SEQ_LOCAL_w,
			NR_SEQ_DENTE_w,
			NR_SEQ_SEXTANTE_w,
			NR_SEQ_ARCADA_w,
			NR_SEQ_TRATAMENTO_w,
			NR_SEQ_FACE_w,
			IE_RAIZ_w);

		if (ie_status_p = 'R') then
			begin
			select	max(cd_procedimento),
				max(nr_seq_proc_interno),
				max(ie_origem_proced),
				max(qt_procedimento)
			into STRICT	cd_procedimento_w,
				nr_seq_proc_interno_w,
				ie_origem_proced_w,
				qt_procedimento_w
			from	odont_procedimento
			where	nr_sequencia = nr_seq_odont_proced_p;

			CALL odonto_inserir_proced_conta(nr_atendimento_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w, (qt_procedimento_w*-1), nr_seq_odont_proced_p, nm_usuario_p);
			end;
		end if;


		if (ie_status_p = 'C') and (ie_status_w = 'R') then
			begin
			select	max(cd_procedimento),
				max(nr_seq_proc_interno),
				max(ie_origem_proced),
				max(qt_procedimento)
			into STRICT	cd_procedimento_w,
				nr_seq_proc_interno_w,
				ie_origem_proced_w,
				qt_procedimento_w
			from	odont_procedimento
			where	nr_sequencia = nr_seq_odont_proced_p;

			CALL odonto_inserir_proced_conta(nr_atendimento_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w, qt_procedimento_w, nr_seq_odont_proced_p, nm_usuario_p);
			end;
		end if;

	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE odont_desfazer_status (nr_seq_odont_proced_p bigint, ie_status_p text, nm_usuario_p text) FROM PUBLIC;

