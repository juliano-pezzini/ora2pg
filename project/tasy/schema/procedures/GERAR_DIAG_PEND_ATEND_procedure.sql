-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_diag_pend_atend ( nr_atendimento_p bigint, cd_doenca_p text, cd_medico_p text, nm_usuario_p text, ie_tipo_diagnostico_p bigint default 2, ie_classificacao_doenca_p text default 'S', nr_seq_doen_prev_p bigint DEFAULT NULL, dt_liberacao_p timestamp default null) AS $body$
DECLARE


qt_tempo_w          bigint;
ie_tipo_doenca_w    varchar(2);
ie_unidade_tempo_w  varchar(2);
dt_diagnostico_w	timestamp;
dt_inicio_w	timestamp;
dt_fim_w	timestamp;
nr_atendimento_ww   bigint;
cd_doenca_ww        varchar(10);
ie_nivel_atencao_w  varchar(1);
nr_seq_episodio_w	bigint;


BEGIN

ie_nivel_atencao_w := wheb_assist_pck.get_nivel_atencao_perfil;

select	max(b.nr_atendimento),
		max(b.cd_doenca),
		max(qt_tempo),
		max(ie_tipo_doenca), 
		max(ie_unidade_tempo) 
into STRICT	nr_atendimento_ww,
		cd_doenca_ww,	
		qt_tempo_w,
		ie_tipo_doenca_w,
		ie_unidade_tempo_w
from	diagnostico_doenca b,
		atendimento_paciente a
where	a.cd_pessoa_fisica = (	SELECT	cd_pessoa_fisica
								from	atendimento_paciente where		nr_atendimento = nr_atendimento_p LIMIT 1)
and		a.nr_atendimento = b.nr_atendimento
and		cd_doenca = cd_doenca_p;
	
if (cd_doenca_p IS NOT NULL AND cd_doenca_p::text <> '') then	


	select 	max(nr_seq_episodio)
	into STRICT	nr_seq_episodio_w
	from 	atendimento_paciente
	where 	nr_atendimento = nr_atendimento_p;
	
	-- Insert diagnostico_medico
	select 	dt_registro,
			dt_inicio,
			dt_fim
	into STRICT 	dt_diagnostico_w,
			dt_inicio_w,
			dt_fim_w
	from   	PACIENTE_ANTEC_CLINICO
	where  	nr_sequencia = nr_seq_doen_prev_p;

	insert into diagnostico_medico(
					nr_atendimento,
					dt_diagnostico,
					ie_tipo_diagnostico,
					cd_medico,
					dt_atualizacao,
					nm_usuario,
					ds_diagnostico,
					ie_nivel_atencao
					) values (	
					nr_atendimento_p,
					dt_diagnostico_w,
					coalesce(ie_tipo_diagnostico_p,2),
					cd_medico_p,
					clock_timestamp(),
					nm_usuario_p,
					null,
					ie_nivel_atencao_w);

	insert into diagnostico_doenca(
					nr_atendimento,
					dt_diagnostico, 
					cd_doenca, 
					dt_atualizacao, 
					nm_usuario, 
					ds_diagnostico, 
					ie_classificacao_doenca,
					ie_tipo_diagnostico,
					dt_liberacao,
					ie_situacao,
					qt_tempo,
					ie_tipo_doenca,
					ie_unidade_tempo,
					ie_nivel_atencao,
					ie_relevante_drg,
					cd_medico,
					dt_inicio,
					dt_fim)
	SELECT	nr_atendimento_p,
			dt_diagnostico_w,
			cd_doenca_p,
			clock_timestamp(),
			nm_usuario_p,
			null,
			coalesce(ie_classificacao_doenca_p,'S'),
			coalesce(ie_tipo_diagnostico_p,2),
			coalesce(dt_liberacao_p,clock_timestamp()),
			'A',
			qt_tempo_w,
			ie_tipo_doenca_w,
			ie_unidade_tempo_w,
			ie_nivel_atencao_w,
			CASE WHEN obter_tipo_episodio(nr_seq_episodio_w)=1 THEN 'S'  ELSE 'N' END ,
			cd_medico_p,
			dt_inicio_w,
			dt_fim_w
	
	where	not exists (	SELECT	1
						from	diagnostico_doenca where		nr_atendimento	= nr_atendimento_p
						and		cd_doenca	= cd_doenca_p
						and		dt_diagnostico	= dt_diagnostico_w LIMIT 1);
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_diag_pend_atend ( nr_atendimento_p bigint, cd_doenca_p text, cd_medico_p text, nm_usuario_p text, ie_tipo_diagnostico_p bigint default 2, ie_classificacao_doenca_p text default 'S', nr_seq_doen_prev_p bigint DEFAULT NULL, dt_liberacao_p timestamp default null) FROM PUBLIC;

