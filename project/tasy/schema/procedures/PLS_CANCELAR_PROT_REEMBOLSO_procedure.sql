-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_cancelar_prot_reembolso ( nr_seq_protocolo_p bigint, nr_seq_motivo_canc_p bigint, nm_usuario_p text, cd_estabelecimento_p text) AS $body$
DECLARE

 
ie_tipo_protocolo_w   varchar(5);
qt_titulos_w      bigint;
nr_seq_conta_w		bigint;
ds_observacao_w		varchar(255);

C01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_conta 
	where	nr_seq_protocolo	= nr_seq_protocolo_p 
	order by 1;


BEGIN 
 
begin 
    --verificar o tipo de protocolo 
    select ie_tipo_protocolo 
    into STRICT  ie_tipo_protocolo_w 
    from  pls_protocolo_conta 
    where  nr_sequencia = nr_seq_protocolo_p;
exception 
when others then 
    ie_tipo_protocolo_w :='';
end;
 
if (coalesce(ie_tipo_protocolo_w,'') = '') then 
    --Operação abortada. Não foi possível localizar o protocolo na base. 
    CALL wheb_mensagem_pck.exibir_mensagem_abort(219291);
elsif (ie_tipo_protocolo_w = 'R') then 
begin 
    --verificar se não existem títulos gerados 
    select coalesce(count(1),0) 
    into STRICT  qt_titulos_w 
    from  titulo_pagar 
    where  ie_situacao <> 'C' 
    and   nr_seq_reembolso = nr_seq_protocolo_p 
    and   (nr_seq_reembolso IS NOT NULL AND nr_seq_reembolso::text <> '')  LIMIT 1;
 
exception 
when others then 
    qt_titulos_w := 0;
end;
else 
    --Operação abortada. O protocolo encontrado não é de reembolso, não será possível cancelá-lo. 
    CALL wheb_mensagem_pck.exibir_mensagem_abort(219292);
end if;
 
 
 
begin 
    if (qt_titulos_w > 0) then 
        -- O protocolo não pôde ser cancelado! Existem títulos em aberto para o mesmo, verifique. 
        CALL wheb_mensagem_pck.exibir_mensagem_abort(219293);
    else 
        if (nr_seq_motivo_canc_p <> 0) then 
			open C01;
			loop 
			fetch C01 into	 
				nr_seq_conta_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin 
				ds_observacao_w := pls_cancelar_conta(	nr_seq_conta_w, NULL, nm_usuario_p, cd_estabelecimento_p, '1', ds_observacao_w, 'N');
				 
				ds_observacao_w := pls_cancelar_conta(	nr_seq_conta_w, NULL, nm_usuario_p, cd_estabelecimento_p, '2', ds_observacao_w, 'N');
				end;
			end loop;
			close C01;
		 
		 
            update pls_protocolo_conta 
            set   ie_status = 4, 
                nr_seq_motivo_cancel = nr_seq_motivo_canc_p, 
                nm_usuario = nm_usuario_p, 
                nm_usuario_nrec = nm_usuario_p, 
                dt_atualizacao = clock_timestamp(), 
                dt_atualizacao_nrec = clock_timestamp(), 
				dt_cancelamento = clock_timestamp() 
            where  nr_sequencia = nr_seq_protocolo_p;
        else 
            --Operação abortada. Não foi possível identificar o motivo de cancelamento. 
            CALL wheb_mensagem_pck.exibir_mensagem_abort(219396);
        end if;
    end if;
exception 
when others then 
    --Erro ao atualizar status do protocolo. 
    CALL wheb_mensagem_pck.exibir_mensagem_abort(219294);
end;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cancelar_prot_reembolso ( nr_seq_protocolo_p bigint, nr_seq_motivo_canc_p bigint, nm_usuario_p text, cd_estabelecimento_p text) FROM PUBLIC;

