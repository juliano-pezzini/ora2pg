-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_franq_pag ( nr_seq_franq_pag_p pls_franq_pag.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


dt_referencia_w			pls_franq_pag.dt_referencia%type;
nr_seq_lote_pgto_w		pls_franq_pag.nr_seq_lote_pgto%type;
cd_area_procedimento_w		area_procedimento.cd_area_procedimento%type;
cd_especialidade_w		especialidade_proc.cd_especialidade%type;
cd_grupo_proc_w			grupo_proc.cd_grupo_proc%type;
cd_tipo_procedimento_w		procedimento.cd_tipo_procedimento%type;
nr_seq_regra_proc_w		pls_regra_franq_pag_proc.nr_sequencia%type;
nr_seq_regra_mat_w		pls_regra_franq_pag_mat.nr_sequencia%type;
ie_incidente_w			pls_franq_pag_conta_res.ie_incidente%type;
nr_seq_franq_pag_prod_w		pls_franq_pag_prest_prod.nr_sequencia%type;
nr_seq_franq_pag_prest_w	pls_franq_pag_prest.nr_sequencia%type;
nr_seq_regra_seg_w		pls_regra_franq_pag_seg.nr_sequencia%type;
ie_tipo_despesa_w		pls_regra_franq_pag_mat.ie_tipo_despesa%type;
nr_seq_estrut_mat_w		pls_regra_franq_pag_mat.nr_seq_estrut_mat%type;
ie_excecao_w			varchar(255);
ie_possui_regra_cad_w		integer;
ie_funcao_pagamento_w		pls_parametro_pagamento.ie_funcao_pagamento%type;
nr_seq_pp_lote_pgto_w		pls_pp_lote.nr_sequencia%type;

c00 CURSOR(dt_referencia_w	pls_franq_pag.dt_referencia%type) FOR
	SELECT	a.nr_sequencia,
		(SELECT	count(1)
		from	pls_regra_franq_pag_evento x
		where	x.nr_seq_regra = a.nr_sequencia) qt_registros
	from	pls_regra_franq_pag a
	where	dt_referencia_w between trunc(dt_inicio_franquia, 'month') and last_day(dt_fim_franquia);

c01 CURSOR(nr_seq_regra_w	pls_regra_franq_pag_prest.nr_seq_regra%type) FOR
	SELECT	a.nr_seq_prestador
	from	pls_regra_franq_pag_prest a
	where	a.nr_seq_regra	= nr_seq_regra_w;

c02 CURSOR(	nr_seq_prestador_pc		pls_pagamento_prestador.nr_seq_prestador%type,
		dt_referencia_inicial_pc	pls_franq_pag.dt_referencia%type,
		dt_referencia_final_pc		pls_franq_pag.dt_referencia%type,
		nr_seq_lote_pgto_pc		pls_franq_pag.nr_seq_lote_pgto%type,
		ie_funcao_pagamento_pc		pls_parametro_pagamento.ie_funcao_pagamento%type,
		cd_estabelecimento_pc		estabelecimento.cd_estabelecimento%type) FOR
	-- nos dois primeiros unions retorna a função do pagamento de produção atual
	SELECT	b.nr_sequencia nr_seq_prest_pgto,
		null nr_seq_pp_prest_pgto,
		null nr_seq_pp_lote
	from	pls_pagamento_prestador b,
		pls_lote_pagamento a
	where	ie_funcao_pagamento_pc = '1'
	and	a.nr_sequencia = nr_seq_lote_pgto_pc
	and	a.cd_estabelecimento = cd_estabelecimento_pc
	and	b.nr_seq_lote = a.nr_sequencia
	and	b.nr_seq_prestador = nr_seq_prestador_pc
	
union all

	SELECT	b.nr_sequencia nr_seq_prest_pgto,
		null nr_seq_pp_prest_pgto,
		null nr_seq_pp_lote
	from	pls_pagamento_prestador b,
		pls_lote_pagamento a
	where	ie_funcao_pagamento_pc = '1'
	and	coalesce(nr_seq_lote_pgto_pc::text, '') = ''
	and	a.dt_mes_competencia between dt_referencia_inicial_pc and dt_referencia_final_pc
	and	a.cd_estabelecimento = cd_estabelecimento_pc
	and	b.nr_seq_lote = a.nr_sequencia
	and	b.nr_seq_prestador = nr_seq_prestador_pc
	
union all

	-- nestes dois retorna da nova função
	select	null nr_seq_prest_pgto,
		b.nr_sequencia nr_seq_pp_prest_pgto,
		a.nr_sequencia nr_seq_pp_lote
	from	pls_pp_lote a,
		pls_pp_prestador b
	where	ie_funcao_pagamento_pc = '2'
	and	a.nr_sequencia = nr_seq_lote_pgto_pc
	and	a.cd_estabelecimento = cd_estabelecimento_pc
	and	b.nr_seq_lote = a.nr_sequencia
	and	b.nr_seq_prestador = nr_seq_prestador_pc
	and	b.ie_cancelado = 'N'
	
union all

	select	null nr_seq_prest_pgto,
		b.nr_sequencia nr_seq_pp_prest_pgto,
		a.nr_sequencia nr_seq_pp_lote
	from	pls_pp_lote a,
		pls_pp_prestador b
	where	ie_funcao_pagamento_pc = '2'
	and	coalesce(nr_seq_lote_pgto_pc::text, '') = ''
	and	a.dt_mes_competencia = dt_referencia_inicial_pc
	and	a.cd_estabelecimento = cd_estabelecimento_pc
	and	b.nr_seq_lote = a.nr_sequencia
	and	b.nr_seq_prestador = nr_seq_prestador_pc
	and	b.ie_cancelado = 'N';

c03 CURSOR(	nr_seq_pag_prest_pc	pls_pagamento_item.nr_seq_pagamento%type,
		nr_seq_pp_prestador_pc	pls_pp_prestador.nr_sequencia%type,
		nr_seq_pp_lote_pc	pls_pp_lote.nr_sequencia%type) FOR
	SELECT	'CM' ie_origem,
		b.nr_sequencia nr_seq_conta_resumo,
		null nr_seq_conta_rec_resumo,
		c.cd_procedimento,
		c.ie_origem_proced,
		null cd_material,
		b.nr_seq_conta,
		b.vl_liberado,
		coalesce(z.ie_tipo_segurado,d.ie_tipo_segurado) ie_tipo_segurado,
		b.cd_pessoa_fisica cd_medico,
		null nr_seq_material
	from	pls_segurado d,
		pls_conta_proc c,
		pls_conta_medica_resumo b,
		pls_pagamento_item a,
		pls_conta z
	where	a.nr_sequencia		= b.nr_seq_pag_item
	and	b.nr_seq_conta_proc	= c.nr_sequencia
	and	b.nr_seq_segurado	= d.nr_sequencia
	and	z.nr_sequencia		= c.nr_seq_conta
	and	a.nr_seq_pagamento	= nr_seq_pag_prest_pc
	
union all

	SELECT	'CM' ie_origem,
		b.nr_sequencia nr_seq_conta_resumo,
		null nr_seq_conta_rec_resumo,
		null cd_procedimento,
		null ie_origem_proced,
		e.cd_material,
		b.nr_seq_conta,
		b.vl_liberado,
		coalesce(z.ie_tipo_segurado,d.ie_tipo_segurado) ie_tipo_segurado,
		b.cd_pessoa_fisica cd_medico,
		e.nr_sequencia nr_seq_material
	from	pls_material e,
		pls_segurado d,
		pls_conta_mat c,
		pls_conta_medica_resumo b,
		pls_pagamento_item a,
		pls_conta z
	where	a.nr_sequencia		= b.nr_seq_pag_item
	and	b.nr_seq_conta_mat	= c.nr_sequencia
	and	b.nr_seq_segurado	= d.nr_sequencia
	and	e.nr_sequencia 		= c.nr_seq_material
	and	z.nr_sequencia		= c.nr_seq_conta
	and	a.nr_seq_pagamento	= nr_seq_pag_prest_pc
	
union all

	select	'CM' ie_origem,
		b.nr_sequencia nr_seq_conta_resumo,
		null nr_seq_conta_rec_resumo,
		b.cd_procedimento,
		b.ie_origem_proced,
		(select	max(e.cd_material)
		from	pls_material e
		where	e.nr_sequencia = b.nr_seq_material) cd_material,
		b.nr_seq_conta,
		b.vl_liberado,
		coalesce(z.ie_tipo_segurado,c.ie_tipo_segurado) ie_tipo_segurado,
		b.cd_pessoa_fisica cd_medico,
		b.nr_seq_material
	from	pls_pp_item_lote a,
		pls_conta_medica_resumo b,
		pls_segurado c,
		pls_conta z
	where	a.nr_seq_lote = nr_seq_pp_lote_pc
	and	a.nr_seq_prestador = nr_seq_pp_prestador_pc
	and	a.ie_tipo_item = '1'
	and	b.nr_sequencia = a.nr_seq_resumo
	and	b.nr_seq_conta = a.nr_seq_conta
	and	c.nr_sequencia = b.nr_seq_segurado
	and	z.nr_sequencia = b.nr_seq_conta
	
union all

	select	'RG' ie_origem,
		null nr_seq_conta_resumo,
		b.nr_sequencia nr_seq_conta_rec_resumo,
		d.cd_procedimento,
		d.ie_origem_proced,
		null cd_material,
		d.nr_seq_conta,
		coalesce(b.vl_liberado,0) vl_liberado,
		coalesce(z.ie_tipo_segurado,e.ie_tipo_segurado) ie_tipo_segurado,
		e.cd_pessoa_fisica cd_medico,
		null nr_seq_material
	from	pls_segurado 			e,
		pls_conta_proc			d,
		pls_rec_glosa_proc 		c,
		pls_conta_rec_resumo_item  	b,
		pls_pagamento_item 		a,
		pls_conta			z
	where	a.nr_sequencia		= b.nr_seq_pag_item
	and	b.nr_seq_proc_rec 	= c.nr_sequencia
	and	d.nr_sequencia		= c.nr_seq_conta_proc
	and	e.nr_sequencia 		= b.nr_seq_segurado
	and	z.nr_sequencia 		= d.nr_seq_conta
	and	a.nr_seq_pagamento	= nr_seq_pag_prest_pc
	and	b.ie_situacao		= 'A'
	
union all

	select	'RG' ie_origem,
		null nr_seq_conta_resumo,
		b.nr_sequencia nr_seq_conta_rec_resumo,
		null cd_procedimento,
		null ie_origem_proced,
		(select	max(w.cd_material)
		from	pls_material w
		where	w.nr_sequencia = d.nr_seq_material) cd_material,
		d.nr_seq_conta,
		coalesce(b.vl_liberado,0) vl_liberado,
		coalesce(z.ie_tipo_segurado,e.ie_tipo_segurado) ie_tipo_segurado,
		e.cd_pessoa_fisica cd_medico,
		d.nr_seq_material
	from	pls_segurado 			e,
		pls_conta_mat			d,
		pls_rec_glosa_mat 		c,
		pls_conta_rec_resumo_item  	b,
		pls_pagamento_item 		a,
		pls_conta			z
	where	a.nr_sequencia		= b.nr_seq_pag_item
	and	b.nr_seq_mat_rec 	= c.nr_sequencia
	and	d.nr_sequencia		= c.nr_seq_conta_mat
	and	e.nr_sequencia 		= b.nr_seq_segurado
	and	z.nr_sequencia 		= d.nr_seq_conta
	and	a.nr_seq_pagamento	= nr_seq_pag_prest_pc
	and	b.ie_situacao		= 'A'
	
union all

	select	'RG' ie_origem,
		null nr_seq_conta_resumo,
		b.nr_sequencia nr_seq_conta_rec_resumo,
		d.cd_procedimento,
		d.ie_origem_proced,
		null cd_material,
		d.nr_seq_conta,
		coalesce(b.vl_liberado,0) vl_liberado,
		coalesce(z.ie_tipo_segurado,e.ie_tipo_segurado) ie_tipo_segurado,
		e.cd_pessoa_fisica cd_medico,
		null nr_seq_material
	from	pls_segurado 			e,
		pls_conta_proc			d,
		pls_rec_glosa_proc 		c,
		pls_conta_rec_resumo_item 	b,
		pls_pp_item_lote 		a,
		pls_conta			z
	where	a.nr_seq_lote 		= nr_seq_pp_lote_pc
	and	a.nr_seq_prestador 	= nr_seq_pp_prestador_pc
	and	a.ie_tipo_item 		= '8'
	and	b.nr_sequencia 		= a.nr_seq_resumo_rec
	and	b.nr_seq_proc_rec 	= c.nr_sequencia
	and	d.nr_sequencia		= c.nr_seq_conta_proc
	and	e.nr_sequencia 		= b.nr_seq_segurado
	and	z.nr_sequencia 		= d.nr_seq_conta
	
union all

	select	'RG' ie_origem,
		null nr_seq_conta_resumo,
		b.nr_sequencia nr_seq_conta_rec_resumo,
		null cd_procedimento,
		null ie_origem_proced,
		(select	max(w.cd_material)
		from	pls_material w
		where	w.nr_sequencia = d.nr_seq_material) cd_material,
		d.nr_seq_conta,
		coalesce(b.vl_liberado,0) vl_liberado,
		coalesce(z.ie_tipo_segurado,e.ie_tipo_segurado) ie_tipo_segurado,
		e.cd_pessoa_fisica cd_medico,
		d.nr_seq_material
	from	pls_segurado 			e,
		pls_conta_mat			d,
		pls_rec_glosa_mat 		c,
		pls_conta_rec_resumo_item 	b,
		pls_pp_item_lote 		a,
		pls_conta			z
	where	a.nr_seq_lote 		= nr_seq_pp_lote_pc
	and	a.nr_seq_prestador 	= nr_seq_pp_prestador_pc
	and	a.ie_tipo_item 		= '8'
	and	b.nr_sequencia 		= a.nr_seq_resumo_rec
	and	b.nr_seq_mat_rec 	= c.nr_sequencia
	and	d.nr_sequencia		= c.nr_seq_conta_mat
	and	e.nr_sequencia 		= b.nr_seq_segurado
	and	z.nr_sequencia 		= d.nr_seq_conta;

c04 CURSOR(	nr_seq_regra_w		pls_regra_franq_pag.nr_sequencia%type,
		cd_area_procedimento_w	area_procedimento.cd_area_procedimento%type,
		cd_especialidade_w	especialidade_proc.cd_especialidade%type,
		cd_grupo_proc_w		grupo_proc.cd_grupo_proc%type,
		cd_procedimento_w	procedimento.cd_procedimento%type,
		ie_origem_proced_w	procedimento.ie_origem_proced%type,
		cd_tipo_procedimento_w	procedimento.cd_tipo_procedimento%type) FOR
	SELECT	a.nr_sequencia
	from	pls_regra_franq_pag_proc a
	where	a.nr_seq_regra	= nr_seq_regra_w
	and	coalesce(a.cd_area_procedimento, cd_area_procedimento_w)	= cd_area_procedimento_w
	and	coalesce(a.cd_especialidade, cd_especialidade_w)		= cd_especialidade_w
	and	coalesce(a.cd_grupo_proc, cd_grupo_proc_w)			= cd_grupo_proc_w
	and	coalesce(a.cd_procedimento, cd_procedimento_w)		= cd_procedimento_w
	and	((coalesce(a.cd_procedimento::text, '') = '') or (coalesce(a.ie_origem_proced,ie_origem_proced_w)= ie_origem_proced_w))
	and	coalesce(a.cd_tipo_procedimento, cd_tipo_procedimento_w)	= cd_tipo_procedimento_w
	order	by coalesce(a.cd_procedimento, 0),
		coalesce(a.cd_grupo_proc, 0),
		coalesce(a.cd_especialidade, 0),
		coalesce(a.cd_area_procedimento, 0),
		coalesce(a.cd_tipo_procedimento,0);

c05 CURSOR(	nr_seq_regra_pc		pls_regra_franq_pag.nr_sequencia%type,
		nr_seq_estrut_mat_pc	pls_regra_franq_pag_mat.nr_seq_estrut_mat%type,
		ie_tipo_despesa_pc	pls_regra_franq_pag_mat.ie_tipo_despesa%type,
		nr_seq_material_pc	pls_regra_franq_pag_mat.nr_seq_material%type) FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_estrut_mat
	from	pls_regra_franq_pag_mat a
	where	a.nr_seq_regra	= nr_seq_regra_pc
	and (coalesce(a.nr_seq_estrut_mat, nr_seq_estrut_mat_pc) 	= nr_seq_estrut_mat_pc 		or (coalesce(coalesce(a.nr_seq_estrut_mat, nr_seq_estrut_mat_pc)::text, '') = ''))
	and (coalesce(a.ie_tipo_despesa, ie_tipo_despesa_pc)		= ie_tipo_despesa_pc 		or (coalesce(coalesce(a.ie_tipo_despesa, ie_tipo_despesa_pc)::text, '') = ''))
	and (coalesce(a.nr_seq_material, nr_seq_material_pc)		= nr_seq_material_pc 		or (coalesce(coalesce(a.nr_seq_material, nr_seq_material_pc)::text, '') = ''))
	order by coalesce(a.nr_seq_material, 0),
		coalesce(a.nr_seq_estrut_mat, 0),
		coalesce(a.ie_tipo_despesa, ' ');

c06 CURSOR(	nr_seq_regra_w		pls_regra_franq_pag.nr_sequencia%type,
		ie_tipo_segurado_w	pls_segurado.ie_tipo_segurado%type) FOR
	SELECT	a.nr_sequencia
	from	pls_regra_franq_pag_seg a
	where	a.nr_seq_regra		= nr_seq_regra_w
	and	coalesce(a.ie_tipo_segurado, ie_tipo_segurado_w) = ie_tipo_segurado_w
	order by coalesce(a.ie_tipo_segurado, '0');

c07 CURSOR(	nr_seq_lote_pgto_pc	pls_evento_movimento.nr_seq_lote_pgto%type,
		nr_seq_prestador_pc	pls_evento_movimento.nr_seq_prestador%type,
		ie_funcao_pagamento_pc	pls_parametro_pagamento.ie_funcao_pagamento%type,
		nr_seq_regra_pc		pls_regra_franq_pag.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_evento_movto,
		a.nr_seq_evento,
		a.vl_movimento,
		null nr_seq_pp_item_lote,
		b.nr_sequencia nr_seq_regra_ocor,
		(SELECT	max(cd_pessoa_fisica)
		from	pls_prestador
		where	nr_sequencia = a.nr_seq_prestador) cd_medico
	from	pls_regra_franq_pag_evento b,
		pls_evento_movimento a
	where	ie_funcao_pagamento_pc = '1'
	and	b.nr_seq_regra = nr_seq_regra_pc
	and	a.nr_seq_evento = b.nr_seq_evento
	and	a.nr_seq_lote_pgto = nr_seq_lote_pgto_pc
	and	a.nr_seq_prestador = nr_seq_prestador_pc
	and	coalesce(a.ie_cancelamento::text, '') = ''
	
union all

	select	null nr_seq_evento_movto,
		a.nr_seq_evento,
		a.vl_item,
		a.nr_sequencia nr_seq_pp_item_lote,
		b.nr_sequencia nr_seq_regra_ocor,
		(select	max(cd_pessoa_fisica)
		from	pls_prestador
		where	nr_sequencia = a.nr_seq_prestador) cd_medico
	from	pls_regra_franq_pag_evento b,
		pls_pp_item_lote a
	where	ie_funcao_pagamento_pc = '2'
	and	b.nr_seq_regra = nr_seq_regra_pc
	and	a.nr_seq_evento = b.nr_seq_evento
	and	a.nr_seq_lote = nr_seq_lote_pgto_pc
	and	a.nr_seq_prestador = nr_seq_prestador_pc
	and	a.ie_tipo_item in ('2', '3', '4', '5', '6', '7', '10');
BEGIN
select	coalesce(max(ie_funcao_pagamento), '1')
into STRICT 	ie_funcao_pagamento_w
from	pls_parametro_pagamento
where	cd_estabelecimento = cd_estabelecimento_p;

select	max(dt_referencia),
	max(nr_seq_lote_pgto),
	max(nr_seq_pp_lote_pgto)
into STRICT	dt_referencia_w,
	nr_seq_lote_pgto_w,
	nr_seq_pp_lote_pgto_w
from	pls_franq_pag
where	nr_sequencia = nr_seq_franq_pag_p;

if (ie_funcao_pagamento_w = '2') then
	nr_seq_lote_pgto_w := nr_seq_pp_lote_pgto_w;
end if;

-- deletar todos os registros que NÃO possuem lançamentos manuais
delete	from pls_franq_pag_prest a
where	a.nr_seq_franq_pag = nr_seq_franq_pag_p
and	not exists (	SELECT	1
			from	pls_franq_pag_prest_item x
			where	x.nr_seq_franq_pag_prest = a.nr_sequencia);

-- deletar todos os registros de produção gerados pelo sistema
delete	from pls_franq_pag_prest_prod a
where	a.nr_seq_franq_pag_prest in (	SELECT	x.nr_sequencia
					from	pls_franq_pag_prest x
					where	x.nr_seq_franq_pag = nr_seq_franq_pag_p);

for r_c00_w in c00(dt_referencia_w) loop

	ie_possui_regra_cad_w := r_c00_w.qt_registros; -- verifico se há valor na tabela para alimentar a variavel que define a abertura dos cursores citados acima
	for r_C01_w in C01(	r_c00_w.nr_sequencia) loop

		for r_C02_w in c02(	r_C01_w.nr_seq_prestador, trunc(dt_referencia_w, 'month'), last_day(dt_referencia_w),
					nr_seq_lote_pgto_w, ie_funcao_pagamento_w, cd_estabelecimento_p) loop

			-- verifica se já existe um registro para o prestador
			select	max(nr_sequencia)
			into STRICT	nr_seq_franq_pag_prest_w
			from	pls_franq_pag_prest
			where	nr_seq_franq_pag = nr_seq_franq_pag_p
			and	nr_seq_prestador = r_C01_w.nr_seq_prestador;

			-- se não existir insere um
			if (coalesce(nr_seq_franq_pag_prest_w::text, '') = '') then

				insert into pls_franq_pag_prest(
					nr_sequencia, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_franq_pag,
					vl_producao, vl_prod_incidente, vl_prod_nao_incidente,
					vl_item, vl_base_franquia, vl_ajuste,
					nr_seq_prestador, nr_seq_regra, ie_status_monitoramento
				) values (
					nextval('pls_franq_pag_prest_seq'), clock_timestamp(), nm_usuario_p,
					clock_timestamp(), nm_usuario_p, nr_seq_franq_pag_p,
					0, 0, 0,
					0, 0, 0,
					r_C01_w.nr_seq_prestador, r_C00_w.nr_sequencia, 'P'
				) returning nr_sequencia into nr_seq_franq_pag_prest_w;
			end if;

			insert	into pls_franq_pag_prest_prod(
				nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_franq_pag_prest,
				nr_seq_pag_prest, vl_producao, vl_prod_incidente,
				vl_prod_nao_incidente, nr_seq_pp_prestador
			) values (
				nextval('pls_franq_pag_prest_prod_seq'), clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, nr_seq_franq_pag_prest_w,
				r_C02_w.nr_seq_prest_pgto, 0, 0,
				0, r_C02_w.nr_seq_pp_prest_pgto
			) returning nr_sequencia into nr_seq_franq_pag_prod_w;

			for r_C03_w in c03(	r_C02_w.nr_seq_prest_pgto, r_C01_w.nr_seq_prestador, nr_seq_lote_pgto_w) loop

				nr_seq_regra_proc_w	:= null;
				nr_seq_regra_mat_w	:= null;

				if (r_c03_w.cd_procedimento IS NOT NULL AND r_c03_w.cd_procedimento::text <> '') then

					select	cd_area_procedimento,
						cd_especialidade,
						cd_grupo_proc,
						coalesce(cd_tipo_procedimento, 0)
					into STRICT	cd_area_procedimento_w,
						cd_especialidade_w,
						cd_grupo_proc_w,
						cd_tipo_procedimento_w
					from	estrutura_procedimento_v
					where	cd_procedimento		= r_c03_w.cd_procedimento
					and	ie_origem_proced	= r_c03_w.ie_origem_proced;

					for	r_C04_w in c04(r_c00_w.nr_sequencia, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w,
								r_c03_w.cd_procedimento, r_c03_w.ie_origem_proced, cd_tipo_procedimento_w) loop
						nr_seq_regra_proc_w	:= r_c04_w.nr_sequencia;
					end loop;

				elsif (r_c03_w.nr_seq_material IS NOT NULL AND r_c03_w.nr_seq_material::text <> '') then

					select	max(ie_tipo_despesa),
						max(nr_seq_estrut_mat)
					into STRICT	ie_tipo_despesa_w,
						nr_seq_estrut_mat_w
					from	pls_material
					where	nr_sequencia	= r_c03_w.nr_seq_material;

					for	r_C05_w in c05(r_c00_w.nr_sequencia, nr_seq_estrut_mat_w, ie_tipo_despesa_w, r_c03_w.nr_seq_material) loop

						if	((coalesce(r_C05_w.nr_seq_estrut_mat::text, '') = '') or (pls_obter_se_estruturas_mat( r_C05_w.nr_seq_estrut_mat, r_c03_w.nr_seq_material) = 'S')) then
							nr_seq_regra_mat_w	:= r_c05_w.nr_sequencia;
						end if;
					end loop;
				end if;

				nr_seq_regra_seg_w := null;

				for r_C06_w in c06(r_c00_w.nr_sequencia, r_c03_w.ie_tipo_segurado) loop

					nr_seq_regra_seg_w := r_C06_w.nr_sequencia;
				end loop;

				ie_excecao_w := pls_obter_se_exc_franq_pag(	r_c00_w.nr_sequencia, r_c03_w.cd_medico, ie_excecao_w, nm_usuario_p);

				ie_incidente_w	:= 'N';

				if (ie_excecao_w = 'N') and
					((nr_seq_regra_proc_w IS NOT NULL AND nr_seq_regra_proc_w::text <> '') or (nr_seq_regra_mat_w IS NOT NULL AND nr_seq_regra_mat_w::text <> '')) and (nr_seq_regra_seg_w IS NOT NULL AND nr_seq_regra_seg_w::text <> '') then
					ie_incidente_w	:= 'S';
				end if;

				insert	into pls_franq_pag_conta_res(
					nr_sequencia, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_franq_pag_prod,
					nr_seq_conta, nr_seq_conta_resumo, ie_incidente,
					vl_liberado, nr_seq_regra_franq_proc, nr_seq_regra_franq_mat,
					nr_seq_conta_rec_resumo
				) values (
					nextval('pls_franq_pag_conta_res_seq'), clock_timestamp(), nm_usuario_p,
					clock_timestamp(), nm_usuario_p, nr_seq_franq_pag_prod_w,
					r_c03_w.nr_seq_conta, r_c03_w.nr_seq_conta_resumo, ie_incidente_w,
					r_c03_w.vl_liberado, nr_seq_regra_proc_w, nr_seq_regra_mat_w,
					r_C03_w.nr_seq_conta_rec_resumo
				);
			end loop;

			if (ie_possui_regra_cad_w > 0) then
				for r_c07_w in c07(	nr_seq_lote_pgto_w, r_C01_w.nr_seq_prestador, ie_funcao_pagamento_w,
							r_c00_w.nr_sequencia) loop

					ie_excecao_w := pls_obter_se_exc_franq_pag(	r_c00_w.nr_sequencia, r_c07_w.cd_medico, ie_excecao_w, nm_usuario_p);

					ie_incidente_w	:= 'N';

					if (ie_excecao_w = 'N') and (r_c00_w.nr_sequencia IS NOT NULL AND r_c00_w.nr_sequencia::text <> '') and (r_c07_w.nr_seq_regra_ocor IS NOT NULL AND r_c07_w.nr_seq_regra_ocor::text <> '') then
						ie_incidente_w	:= 'S';
					end if;

					insert	into pls_franq_pag_conta_res(
						nr_sequencia, dt_atualizacao, nm_usuario,
						dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_franq_pag_prod,
						ie_incidente, vl_liberado, nr_seq_evento_movto,
						nr_seq_pp_item_lote
					) values (
						nextval('pls_franq_pag_conta_res_seq'), clock_timestamp(), nm_usuario_p,
						clock_timestamp(), nm_usuario_p, nr_seq_franq_pag_prod_w,
						ie_incidente_w, r_c07_w.vl_movimento, r_c07_w.nr_seq_evento_movto,
						r_c07_w.nr_seq_pp_item_lote
					);
				end loop;
			end if;

			CALL pls_atualizar_franq_pag_prest(	nr_seq_franq_pag_prest_w, nm_usuario_p, 'G');
		end loop;
	end loop;
end loop;

update	pls_franq_pag
set	dt_geracao_lote	= clock_timestamp()
where	nr_sequencia = nr_seq_franq_pag_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_franq_pag ( nr_seq_franq_pag_p pls_franq_pag.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

