-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE aspb_gerar_co_bra_240_utl_file ( nr_seq_cobr_escrit_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ds_conteudo_w			varchar(240);
ds_brancos_205_w		varchar(205);
ds_brancos_125_w		varchar(125);
nm_empresa_w			varchar(80);
nm_pessoa_w			varchar(80);
ds_endereco_w			varchar(40);
ds_bairro_w			varchar(40);
ds_banco_w			varchar(30);
cd_convenio_banco_w		varchar(20);
ds_cidade_w			varchar(20);
ds_nosso_numero_w		varchar(20);
ds_complemento_w		varchar(18);
vl_juros_w			varchar(17);
nr_conta_corrente_w		varchar(15);
dt_remessa_retorno_w		varchar(14);
dt_geracao_arquivo_w		varchar(14);
nr_inscricao_w			varchar(15);
vl_liquidacao_w			varchar(15);
vl_cobranca_w			varchar(15);
vl_desconto_w			varchar(15);
dt_desconto_w			varchar(8);
vl_mora_w			varchar(15);
nr_seq_registro_w		bigint := 0;
ds_brancos_10_w			varchar(10);
qt_reg_lote_w			bigint := 0;
dt_vencimento_w			varchar(8);
dt_emissao_w			varchar(8);
dt_pagamento_w			varchar(8);
cd_cep_w			varchar(8);
nr_seq_lote_w			varchar(7);
nr_seq_arquivo_w		bigint := 0;
nr_seq_envio_w			varchar(8);
cd_agencia_bancaria_w		varchar(5);
ie_tipo_inscricao_w		varchar(5);
nr_endereco_w			varchar(5);
cd_banco_w			varchar(3);
ie_emissao_bloqueto_w		varchar(3);
nr_digito_agencia_w		varchar(2);
sg_uf_w				varchar(2);
ie_protesto_w			varchar(2);
ie_tipo_registro_w		varchar(1);
qt_reg_arquivo_w		bigint := 0;
ds_brancos_69_w			varchar(69);
ds_brancos_33_w			varchar(33);
dt_gravacao_w			varchar(8);
nr_nosso_numero_w		varchar(20);
nr_seq_carteira_cobr_w		varchar(1);
nr_documento_cobr_w		varchar(15);
nr_titulo_w			varchar(25);
nm_pessoa_titulo_w		varchar(40);
sg_estado_w			varchar(15);
nr_seq_apres_w			bigint	:= 1;
ds_brancos_9_w			varchar(9);
ds_brancos_8_w			varchar(8);
ds_brancos_40_w			varchar(40);
ds_brancos_28_w			varchar(28);
ds_zeros_217_w			varchar(217);
ds_brancos_54_w			varchar(54);
ds_brancos_12_w			varchar(12);
ds_brancos_16_w			varchar(16);
ds_brancos_80_w			varchar(80);
ds_brancos_11_w			varchar(11);
ds_zeros_92_w			varchar(92);
dt_juros_w			varchar(8);
pr_multa_diario_w		varchar(255);
pr_juros_diario_w		varchar(255);
nr_lote_w			varchar(4) := '0001';
cd_mov_remessa_w		varchar(2);
qt_titulos_w			integer := 0;
cd_multa_w			varchar(1) := '0';
dt_multa_w			varchar(8);
vl_multa_w			varchar(15);
ds_mens_multa_w			varchar(40);

-- UTL File 
arq_texto_w			utl_file.file_type;
ds_erro_w			varchar(255);
ds_local_w			varchar(255);
ds_local_rede_w			varchar(255);
nm_arquivo_w			varchar(255);
ds_mensagem_w			varchar(255);
nr_seq_pagador_w		bigint;
ie_origem_titulo_w		varchar(10);
qt_abertos_w			bigint := 1;
dt_ano_w			timestamp;
dt_ano_final_w			timestamp;
ds_data_w			varchar(255);
ds_ano_w			varchar(4);

C01 CURSOR FOR 
	SELECT	lpad(c.cd_banco,3,'0') cd_banco, 
		substr(a.nr_sequencia,1,5) nr_seq_envio, 
		'3' ie_tipo_registro, 
		replace(to_char(c.vl_liquidacao, 'fm0000000000000.00'),'.','') vl_liquidacao, 
		rpad('Banco do Brasil',30,' ') nm_cedente, 
		to_char(b.dt_pagamento_previsto,'ddmmyyyy') dt_vencimento, 
		replace(to_char(c.vl_cobranca, 'fm0000000000000.00'),'.','') vl_cobranca, 
		replace(to_char(c.vl_desconto, 'fm0000000000000.00'),'.','') vl_desconto, 
		to_char(clock_timestamp(),'ddmmyyyy') dt_desconto, 
		replace(to_char(coalesce(c.vl_juros,0) + coalesce(c.vl_multa,0), 'fm0000000000000.00'),'.','') vl_mora, 
		to_char(c.dt_liquidacao,'ddmmyyyy') dt_pagamento, 
		rpad('2390511000' || lpad(c.nr_titulo,7,'0'),20,' ') ds_nosso_numero, 
		rpad(c.cd_agencia_bancaria,5,0) cd_agencia_bancaria, 
		rpad(calcula_digito('Modulo11',c.cd_agencia_bancaria),1,'0') nr_digito_agencia, 
		lpad(e.cd_conta,12,'0') || rpad(e.ie_digito_conta,1,'0') nr_conta_corrente, 
		rpad(b.nr_nosso_numero,20,' ') nr_nosso_numero, 
		lpad(b.nr_seq_carteira_cobr,1,'0') nr_seq_carteira_cobr, 
		rpad(a.nr_sequencia,15,' ') nr_documento_cobr, 
		to_char(b.dt_emissao,'ddmmyyyy') dt_emissao, 
		rpad(b.nr_titulo,25,' ') nr_titulo, 
		CASE WHEN coalesce(b.cd_pessoa_fisica::text, '') = '' THEN '2'  ELSE '1' END  ie_tipo_inscricao, 
		lpad(coalesce(CASE WHEN coalesce(b.cd_pessoa_fisica::text, '') = '' THEN b.cd_cgc  ELSE (	SELECT	x.nr_cpf 								from	pessoa_fisica x 								where	x.cd_pessoa_fisica	= b.cd_pessoa_fisica) END ,0),15,'0') nr_inscricao, 
		rpad(upper(coalesce(substr(obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc),1,40),' ')),40,' ') nm_pessoa_titulo, 
		rpad(upper(coalesce(substr(obter_dados_pf_pj(b.cd_pessoa_fisica,b.cd_cgc,'E'),1,40),' ')),40,' ') ds_endereco, 
		rpad(upper(coalesce(substr(obter_dados_pf_pj(b.cd_pessoa_fisica,b.cd_cgc,'B'),1,15),' ')),15,' ') ds_bairro, 
		lpad(coalesce(substr(obter_dados_pf_pj(b.cd_pessoa_fisica,b.cd_cgc,'CEP'),1,8),' '),8,'0') cd_cep, 
		rpad(upper(coalesce(substr(obter_dados_pf_pj(b.cd_pessoa_fisica,b.cd_cgc,'CI'),1,15),' ')),15,' ') ds_cidade, 
		rpad(upper(coalesce(substr(obter_dados_pf_pj(b.cd_pessoa_fisica,b.cd_cgc,'UF'),1,2),' ')),2,' ') sg_estado, 
		to_char(b.dt_pagamento_previsto + 1,'ddmmyyyy') dt_juros, 
		lpad(coalesce(substr(c.cd_ocorrencia,1,2),'01'),2,'0') cd_mov_remessa, 
		campo_mascara_virgula_casas(obter_dados_titulo_receber(b.nr_titulo,'PDJ'),3) pr_juros_diario, 
		campo_mascara_virgula(obter_dados_titulo_receber(b.nr_titulo,'TXM')) pr_multa_diario, 
		b.nr_seq_pagador, 
		b.ie_origem_titulo 
	from	titulo_receber_v b, 
		titulo_receber_cobr c, 
		cobranca_escritural a, 
		banco_estabelecimento e 
	where	a.nr_sequencia		= c.nr_seq_cobranca 
	and	c.nr_titulo		= b.nr_titulo 
	and	a.nr_seq_conta_banco	= e.nr_sequencia 
	and	a.nr_sequencia		= nr_seq_cobr_escrit_p;


BEGIN 
delete	FROM cobranca_escrit_arq 
where	nr_seq_cobranca = nr_seq_cobr_escrit_p;
 
nm_arquivo_w	:= to_char(clock_timestamp(),'ddmmyyyy') || to_char(clock_timestamp(),'hh24') || to_char(clock_timestamp(),'mi') || to_char(clock_timestamp(),'ss') || nm_usuario_p || '.rem';
 
SELECT * FROM obter_evento_utl_file(1, null, ds_local_w, ds_erro_w) INTO STRICT ds_local_w, ds_erro_w;
SELECT * FROM pls_obter_dir_rede_utl_file(1, null, ds_local_rede_w, ds_erro_w) INTO STRICT ds_local_rede_w, ds_erro_w;	
 
begin 
arq_texto_w := utl_file.fopen(ds_local_w,nm_arquivo_w,'W'); --arq_texto_w := utl_file.fopen('/srvfs03/FINANCEIRO/TASY/',nm_arquivo_w,'W'); 
exception
when others then 
	if (SQLSTATE = -29289) then 
		ds_erro_w := 'O acesso ao arquivo foi negado pelo sistema operacional (access_denied).';
	elsif (SQLSTATE = -29298) then 
		ds_erro_w := 'O arquivo foi aberto usando FOPEN_NCHAR, mas efetuaram-se operações de I/O usando funções nonchar comos PUTF ou GET_LINE (charsetmismatch).';
	elsif (SQLSTATE = -29291) then 
		ds_erro_w := 'Não foi possível apagar o arquivo (delete_failed).';
	elsif (SQLSTATE = -29286) then 
		ds_erro_w := 'Erro interno desconhecido no package UTL_FILE (internal_error).';
	elsif (SQLSTATE = -29282) then 
		ds_erro_w := 'O handle do arquivo não existe (invalid_filehandle).';
	elsif (SQLSTATE = -29288) then 
		ds_erro_w := 'O arquivo com o nome especificado não foi encontrado neste local (invalid_filename).';
	elsif (SQLSTATE = -29287) then 
		ds_erro_w := 'O valor de MAX_LINESIZE para FOPEN() é inválido; deveria estar na faixa de 1 a 32767 (invalid_maxlinesize).';
	elsif (SQLSTATE = -29281) then 
		ds_erro_w := 'O parâmetro open_mode na chamda FOPEN é inválido (invalid_mode).';
	elsif (SQLSTATE = -29290) then 
		ds_erro_w := 'O parâmetro ABSOLUTE_OFFSET para a chamada FSEEK() é inválido; deveria ser maior do que 0 e menor do que o número total de bytes do arquivo (invalid_offset).';
	elsif (SQLSTATE = -29283) then 
		ds_erro_w := 'O arquivo não pôde ser aberto ou operado da forma desejada - ou o caminho não foi encontrado (invalid_operation).';
	elsif (SQLSTATE = -29280) then 
		ds_erro_w := 'O caminho especificado não existe ou não está visível ao Oracle (invalid_path).';
	elsif (SQLSTATE = -29284) then 
		ds_erro_w := 'Não é possível efetuar a leitura do arquivo (read_error).';
	elsif (SQLSTATE = -29292) then 
		ds_erro_w := 'Não é possível renomear o arquivo.';
	elsif (SQLSTATE = -29285) then 
		ds_erro_w := 'Não foi possível gravar no arquivo (write_error).';
	else 
		ds_erro_w := 'Erro desconhecido no package UTL_FILE.';
	end if;	
	CALL wheb_mensagem_pck.exibir_mensagem_abort(186768,'DS_ERRO_W=' || ds_erro_w);
end;
-- arq_texto_w := utl_file.fopen('/oraprd03/utlfile/',nm_arquivo_w,'W'); 
-- \\192.168.0.230\UTLFILE 
 
if (substr(ds_local_rede_w,length(ds_local_rede_w)-1,length(ds_local_rede_w)) <> '\') then 
	ds_local_rede_w := ds_local_rede_w||'\'; --' 
end if;
 
CALL pls_gravar_arq_utl_file_cobr(nr_seq_cobr_escrit_p,ds_local_rede_w||nm_arquivo_w,nm_usuario_p);
 
update	cobranca_escritural 
set	ds_arquivo	= ds_local_w || nm_arquivo_w 
where	nr_sequencia	= nr_seq_cobr_escrit_p;
 
select	lpad(' ',10,' '), 
	lpad(' ',125,' '), 
	lpad(' ',69,' '), 
	lpad(' ',33,' '), 
	lpad(' ',9,' '), 
	lpad(' ',8,' '), 
	lpad(' ',40,' '), 
	lpad(' ',28,' '), 
	lpad('0',217,'0'), 
	lpad(' ',54,' '), 
	lpad(' ',12,' '), 
	lpad(' ',16,' '), 
	lpad(' ',80,' '), 
	lpad(' ',11,' '), 
	lpad('0',92,'0'), 
	lpad(' ',205,' ') 
into STRICT	ds_brancos_10_w, 
	ds_brancos_125_w, 
	ds_brancos_69_w, 
	ds_brancos_33_w, 
	ds_brancos_9_w, 
	ds_brancos_8_w, 
	ds_brancos_40_w, 
	ds_brancos_28_w, 
	ds_zeros_217_w, 
	ds_brancos_54_w, 
	ds_brancos_12_w, 
	ds_brancos_16_w, 
	ds_brancos_80_w, 
	ds_brancos_11_w, 
	ds_zeros_92_w, 
	ds_brancos_205_w
;
 
-- Header Arquivo 
select	'0' ie_tipo_registro, 
	lpad(c.cd_banco,3,'0') cd_banco, 
	to_char(clock_timestamp(),'DDMMYYYYHHMISS') dt_geracao_arquivo, 
	rpad('BANCO DO BRASIL SA',30,' ') ds_banco, 
	rpad(upper(substr(obter_razao_social(b.cd_cgc),1,30)),30,' ') nm_empresa, 
	lpad(b.cd_cgc,14,'0') nr_inscricao 
into STRICT	ie_tipo_registro_w, 
	cd_banco_w, 
	dt_geracao_arquivo_w, 
	ds_banco_w, 
	nm_empresa_w, 
	nr_inscricao_w 
from	estabelecimento b, 
	banco_estabelecimento c, 
	cobranca_escritural a 
where	a.cd_estabelecimento	= b.cd_estabelecimento 
and	a.nr_seq_conta_banco	= c.nr_sequencia 
and	a.nr_sequencia		= nr_seq_cobr_escrit_p;
 
nr_seq_arquivo_w := nr_seq_arquivo_w + 1;
qt_reg_arquivo_w := qt_reg_arquivo_w + 1;
 
ds_conteudo_w	:=	cd_banco_w || '00000' || ds_brancos_9_w || '2' || nr_inscricao_w || rpad('002390511001417019',20,' ') || '02913' || '0' || 
			'000000141470' || '4' || ' ' || nm_empresa_w || ds_banco_w || ds_brancos_10_w || '1' || dt_geracao_arquivo_w || 
			lpad(nr_seq_arquivo_w,6,'0') || '08400000' || ds_brancos_69_w;
 
utl_file.put_line(arq_texto_w,ds_conteudo_w);
utl_file.fflush(arq_texto_w);
-- Fim Header Arquivo 
 
-- Header Lote 
select	'1' ie_tipo_registro, 
	lpad(c.cd_banco,3,'0') cd_banco, 
	rpad(upper(substr(obter_razao_social(b.cd_cgc),1,30)),30,' ') nm_empresa, 
	lpad(b.cd_cgc,15,'0') nr_inscricao, 
	to_char(clock_timestamp(),'DDMMYYYY') dt_gravacao, 
	rpad('BANCO DO BRASIL SA',30,' ') ds_banco 
into STRICT	ie_tipo_registro_w, 
	cd_banco_w, 
	nm_empresa_w, 
	nr_inscricao_w, 
	dt_gravacao_w, 
	ds_banco_w 
from	estabelecimento b, 
	banco_estabelecimento c, 
	cobranca_escritural a 
where	a.cd_estabelecimento	= b.cd_estabelecimento 
and	a.nr_seq_conta_banco	= c.nr_sequencia 
and	a.nr_sequencia		= nr_seq_cobr_escrit_p;
 
qt_reg_arquivo_w := qt_reg_arquivo_w + 1;
qt_reg_lote_w	 := qt_reg_lote_w + 1;
 
ds_conteudo_w	:= 	cd_banco_w || '00001' || 'R01 043 2' || nr_inscricao_w || rpad('002390511001417019',20,' ') || '02913' || '0' || '000000141470' || '4' || 
			' ' || nm_empresa_w || ds_brancos_80_w || '00000000' || dt_gravacao_w || '00000000'|| ds_brancos_33_w;
 
nr_seq_apres_w	:= nr_seq_apres_w + 1;
 
utl_file.put_line(arq_texto_w,ds_conteudo_w);
utl_file.fflush(arq_texto_w);
-- Fim Header Lote 
 
dt_ano_w	:= to_date('01/01/' || ((to_char(clock_timestamp(),'yyyy'))::numeric  - 1),'dd/mm/yyyy');
dt_ano_final_w	:= fim_dia(to_date('31/12/' || ((to_char(clock_timestamp(),'yyyy'))::numeric  - 1),'dd/mm/yyyy'));
ds_ano_w	:= ((to_char(clock_timestamp(),'yyyy'))::numeric  -1);
 
-- Detalhe 
open C01;
loop 
fetch C01 into	 
	cd_banco_w, 
	nr_seq_envio_w, 
	ie_tipo_registro_w, 
	vl_liquidacao_w, 
	ds_banco_w, 
	dt_vencimento_w, 
	vl_cobranca_w, 
	vl_desconto_w, 
	dt_desconto_w, 
	vl_mora_w, 
	dt_pagamento_w, 
	ds_nosso_numero_w, 
	cd_agencia_bancaria_w, 
	nr_digito_agencia_w, 
	nr_conta_corrente_w, 
	nr_nosso_numero_w, 
	nr_seq_carteira_cobr_w, 
	nr_documento_cobr_w, 
	dt_emissao_w, 
	nr_titulo_w, 
	ie_tipo_inscricao_w, 
	nr_inscricao_w, 
	nm_pessoa_titulo_w, 
	ds_endereco_w, 
	ds_bairro_w, 
	cd_cep_w, 
	ds_cidade_w, 
	sg_estado_w, 
	dt_juros_w, 
	cd_mov_remessa_w, 
	pr_juros_diario_w, 
	pr_multa_diario_w, 
	nr_seq_pagador_w, 
	ie_origem_titulo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	qt_abertos_w := 1;
	 
	if (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') and (ie_origem_titulo_w = '3') and (to_char(clock_timestamp(),'mm') = '05') then		 
		select	count(1) 
		into STRICT	qt_abertos_w 
		from	titulo_receber 
		where	coalesce(dt_liquidacao::text, '') = '' 
		and	dt_pagamento_previsto between dt_ano_w and dt_ano_final_w 
		and	nr_seq_pagador = nr_seq_pagador_w;
 
		if (to_char(clock_timestamp(),'yyyy') = '2013') then 
			ds_data_w := 'ABRIL DE 2012 A DEZEMBRO DE 2012.';
		else 
			ds_data_w := 'JANEIRO DE '||ds_ano_w||' A DEZEMBRO DE '||ds_ano_w||'.';
		end if;
	end if;		
	 
	nr_seq_registro_w	:= nr_seq_registro_w + 1;
	qt_titulos_w		:= qt_titulos_w + 1;
 
	-- Segmento P 
	qt_reg_arquivo_w	:= qt_reg_arquivo_w + 1;
	nr_seq_apres_w		:= nr_seq_apres_w + 1;
	qt_reg_lote_w	 	:= qt_reg_lote_w + 1;
 
	ds_conteudo_w	:=	cd_banco_w || '0001' || '3' || lpad(nr_seq_registro_w,5,'0') || 'P' || ' ' || '01' || '02913' || 
				nr_digito_agencia_w || nr_conta_corrente_w || ' ' || ds_nosso_numero_w || nr_seq_carteira_cobr_w || 
				'7' || '1' || '2' || '2' || '2' || rpad(nr_titulo_w,15,' ') || dt_vencimento_w || vl_cobranca_w || '00000' || 
				' ' || '04' || 'N' || dt_emissao_w || '1' || dt_juros_w || '000000000000005' || '000000000' || 
				vl_desconto_w || '000000000000000' || '000000000000000' || nr_titulo_w || '0' || '00' || '2' || '000' || '09' || 
				'0000000000 ';
	 
	utl_file.put_line(arq_texto_w,ds_conteudo_w);
	utl_file.fflush(arq_texto_w);
	-- Fim segmento P 
 
	-- Segmento Q 
	qt_reg_arquivo_w	:= qt_reg_arquivo_w + 1;
	nr_seq_apres_w		:= nr_seq_apres_w + 1;
	qt_reg_lote_w		:= qt_reg_lote_w + 1;
	nr_seq_registro_w	:= nr_seq_registro_w + 1;
 
	ds_conteudo_w	:= 	cd_banco_w || '0001' || ie_tipo_registro_w || lpad(nr_seq_registro_w,5,'0') || 'Q' || ' ' || '01' || 
				ie_tipo_inscricao_w || nr_inscricao_w || nm_pessoa_titulo_w || ds_endereco_w || ds_bairro_w || cd_cep_w || 
				ds_cidade_w || substr(sg_estado_w,1,2) || '0' || '000000000000000' || ds_brancos_40_w || '000' || ds_brancos_28_w;
 
	utl_file.put_line(arq_texto_w,ds_conteudo_w);
	utl_file.fflush(arq_texto_w);
	-- Fim segmento Q 
	 
	-- Segmento R 
	qt_reg_arquivo_w	:= qt_reg_arquivo_w + 1;
	nr_seq_apres_w		:= nr_seq_apres_w + 1;
	qt_reg_lote_w	 	:= qt_reg_lote_w + 1;
	 
	vl_multa_w := lpad(substr(vl_mora_w,1,15),15,'0');
	 
	if (somente_numero(vl_multa_w) > 0) then 
		cd_multa_w := '1';
		dt_multa_w := dt_vencimento_w;
	else 
		cd_multa_w := '0';
		dt_multa_w := '00000000';
	end if;
	 
	vl_multa_w	:=	'000000000000200';
	ds_mens_multa_w := 	lpad(' ',40,' ');
 
	ds_conteudo_w	:=	cd_banco_w || '0001' || '3' || lpad(nr_seq_registro_w,5,'0') || 'R' || ' ' || '01' || lpad('0',48,'0') || 
				cd_multa_w || dt_multa_w || vl_multa_w || lpad(' ',10,' ') || ds_mens_multa_w || 
				lpad(' ',60,' ') || lpad('0',16,'0') || ' ' || lpad('0',12,'0') || ' 0'|| lpad(' ',9,' ');
	 
	utl_file.put_line(arq_texto_w,ds_conteudo_w);
	utl_file.fflush(arq_texto_w);
	-- Fim segmento R 
	 
	-- Segmento S 
	qt_reg_arquivo_w	:= qt_reg_arquivo_w + 1;
	nr_seq_apres_w		:= nr_seq_apres_w + 1;
	qt_reg_lote_w		:= qt_reg_lote_w + 1;
	nr_seq_registro_w	:= nr_seq_registro_w + 1;
	 
	ds_conteudo_w		:=	'001' || nr_lote_w || '3' || lpad(nr_seq_registro_w,5,'0') || 'S' || ' ' || cd_mov_remessa_w || 
					rpad('3Após vencimento multa '|| pr_multa_diario_w || '% + ' || pr_juros_diario_w || '% ao dia',223,' ');
					 
	utl_file.put_line(arq_texto_w,ds_conteudo_w);
	utl_file.fflush(arq_texto_w);
 
	if (qt_abertos_w = 0) then 
		qt_reg_arquivo_w	:= qt_reg_arquivo_w + 1;
		nr_seq_apres_w		:= nr_seq_apres_w + 1;
		qt_reg_lote_w		:= qt_reg_lote_w + 1;
		nr_seq_registro_w	:= nr_seq_registro_w + 1;
		 
		ds_conteudo_w		:=	'001' || nr_lote_w || '3' || lpad(nr_seq_registro_w,5,'0') || 'S' || ' ' || cd_mov_remessa_w || 
						rpad('3CONFORME LEI 12.007/2009, A ASSOCIACAO DE SAUDE PORTUGUESA DE BENEFICENCIA DECLARA QUITADOS OS DEBITOS DE '|| 
						ds_data_w,223,' ');
 
		utl_file.put_line(arq_texto_w,ds_conteudo_w);
		utl_file.fflush(arq_texto_w);
		 
		qt_reg_arquivo_w	:= qt_reg_arquivo_w + 1;
		nr_seq_apres_w		:= nr_seq_apres_w + 1;
		qt_reg_lote_w		:= qt_reg_lote_w + 1;
		nr_seq_registro_w	:= nr_seq_registro_w + 1;
		 
		ds_conteudo_w		:=	'001' || nr_lote_w || '3' || lpad(nr_seq_registro_w,5,'0') || 'S' || ' ' || cd_mov_remessa_w || 
						rpad('3ESTA DECLARAÇÃO SUBSTITUI OS COMPROVANTES DE PAGAMENTO DO PERIODO A QUE SE REFERE.'|| ds_data_w,223,' ');
						 
		utl_file.put_line(arq_texto_w,ds_conteudo_w);
		utl_file.fflush(arq_texto_w);
	end if;
	-- Fim segmento S 
	end;
end loop;
close C01;
-- Fim detalhe 
 
-- Trailler Lote 
qt_reg_lote_w	:= qt_reg_lote_w + 1;
qt_reg_arquivo_w := qt_reg_arquivo_w + 1;
	 
ds_conteudo_w	:= 	'001' || '0001' || '5' || ds_brancos_9_w || lpad(qt_reg_lote_w,6,'0') || ds_zeros_92_w || ds_brancos_125_w;
 
nr_seq_apres_w	:= nr_seq_apres_w + 1;
	 
utl_file.put_line(arq_texto_w,ds_conteudo_w);
utl_file.fflush(arq_texto_w);
-- Fim Trailler Lote 
 
-- Trailler Arquivo 
qt_reg_lote_w	:= qt_reg_lote_w + 1;
qt_reg_arquivo_w := qt_reg_arquivo_w + 1;
	 
ds_conteudo_w	:=	'001' || '9999' || '9' || ds_brancos_9_w || '000001' || lpad(qt_reg_arquivo_w,6,'0') || lpad(qt_titulos_w,6,'0') || ds_brancos_205_w;
 
nr_seq_apres_w	:= nr_seq_apres_w + 1;
 
utl_file.put_line(arq_texto_w,ds_conteudo_w);
utl_file.fflush(arq_texto_w);
-- Fim Trailler Arquivo 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE aspb_gerar_co_bra_240_utl_file ( nr_seq_cobr_escrit_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

