-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE ageint_horario_livre_row AS (
    nr_seq_ageint_item bigint,
    dt_agenda          timestamp);


CREATE OR REPLACE PROCEDURE ageint_gerar_pri_hor_livre_vet (nr_seq_ageint_p bigint, dt_agenda_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


  type ageint_horario_livre_table is table of ageint_horario_livre_row index by integer;
  ageint_horario_livre_w ageint_horario_livre_table;

  c_horario_livre CURSOR(hr_agenda_p timestamp, nr_seq_ageint_p bigint) FOR
   	SELECT nr_seq_ageint_item,
           min(hr_agenda) as dt_agenda
      from table(AGEINT_SUGERIR_HORARIOS_PCK.get_horarios_ageint(nr_seq_ageint_p))
       where hr_agenda >= hr_agenda_p
     group by nr_seq_ageint_item;

  dt_inicio_w timestamp;

  ds_aux_w varchar(100);

  qt_dias_w          bigint;
  qt_total_itens_w   bigint;
  qt_itens_gerados_w bigint;
  qt_tmp_inicial_w timestamp;
  qt_tmp_final_w timestamp;
  qt_calc_tempo_w varchar(255);

  ds_log_w			varchar(255);

  cd_estab_agenda_w agenda.cd_estabelecimento%type;

BEGIN

	qt_tmp_inicial_w := clock_timestamp();

  select count(distinct a.nr_seq_ageint_item)
    into STRICT qt_total_itens_w
    from ageint_lib_usuario a
   where a.nr_seq_ageint = nr_seq_ageint_p;

  delete FROM ageint_pri_hor_livre where nr_seq_ageint = nr_seq_ageint_p;
  dt_inicio_w := trunc(dt_agenda_p);

  qt_dias_w := obter_param_usuario(869, 238, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, qt_dias_w);

  CALL AGEINT_SUGERIR_HORARIOS_PCK.CLEAN_CACHE();
  CALL AGEINT_SUGERIR_HORARIOS_PCK.iniciar_itens_ageint(nr_seq_ageint_p); 	
  for i in 0 .. qt_dias_w loop
	
	CALL ageint_sugerir_horarios_pck.gerar_horarios_itens_vetor(nr_seq_ageint_p, 
														  dt_inicio_w + i, 
														  1, 
														  null, 
														  null );
							
	select count(distinct nr_seq_ageint_item)
	into STRICT qt_itens_gerados_w
	from table(AGEINT_SUGERIR_HORARIOS_PCK.get_horarios_ageint(nr_seq_ageint_p))
	where dt_agenda >= trunc(dt_inicio_w);
	
    exit when qt_itens_gerados_w >= qt_total_itens_w;
  end loop;

  open c_horario_livre(hr_agenda_p => dt_inicio_w, nr_seq_ageint_p => nr_seq_ageint_p);
  loop
    fetch c_horario_livre bulk collect
      into ageint_horario_livre_w limit 100;
		for i in 1 .. ageint_horario_livre_w.count LOOP
		
		cd_estab_agenda_w := null;
	
		 SELECT min(cd_estabelecimento) cd_estab			
		   into STRICT cd_estab_agenda_w
		   from table(AGEINT_SUGERIR_HORARIOS_PCK.get_horarios_ageint(nr_seq_ageint_p)) a
           where a.cd_estabelecimento = cd_estabelecimento_p
             and a.nr_seq_ageint_item = ageint_horario_livre_w[i].nr_seq_ageint_item
			 and a.hr_agenda = ageint_horario_livre_w[i].dt_agenda
             and a.ie_status_agenda = 'L';
		
			if (coalesce(cd_estab_agenda_w::text, '') = '') then
	
				 SELECT min(cd_estabelecimento) cd_estab			
				   into STRICT cd_estab_agenda_w
				   from table(AGEINT_SUGERIR_HORARIOS_PCK.get_horarios_ageint(nr_seq_ageint_p)) a
				   where a.nr_seq_ageint_item = ageint_horario_livre_w[i].nr_seq_ageint_item
				     and a.hr_agenda = ageint_horario_livre_w[i].dt_agenda
					 and a.ie_status_agenda = 'L';
					
			end if;
			
		  insert into ageint_pri_hor_livre(nr_sequencia,
			 dt_atualizacao,
			 nm_usuario,
			 dt_atualizacao_nrec,
			 nm_usuario_nrec,
			 nr_seq_ageint,
			 nr_seq_ageint_item,
			 dt_agenda,
			 cd_estab_agenda)
		  values (nextval('ageint_pri_hor_livre_seq'),
			 clock_timestamp(),
			 nm_usuario_p,
			 clock_timestamp(),
			 nm_usuario_p,
			 nr_seq_ageint_p,
			 ageint_horario_livre_w[i].nr_seq_ageint_item,
			 ageint_horario_livre_w[i].dt_agenda,
			 coalesce(cd_estab_agenda_w,cd_estabelecimento_p));
		end loop;
    EXIT WHEN NOT FOUND; /* apply on c_horario_livre */
  end loop;
  close c_horario_livre;

	qt_tmp_final_w := clock_timestamp();
	qt_calc_tempo_w := to_char((qt_tmp_final_w - qt_tmp_inicial_w) * 86400);
	
	ds_log_w := 'Integrated Schedule Reg: '||to_char(nr_seq_ageint_p)||' included by ageint_gerar_pri_hor_livre_pck in '||qt_calc_tempo_w||' seconds';
	insert into log_mov(CD_LOG,DS_LOG,DT_ATUALIZACAO,NM_USUARIO) values (6112355,ds_log_w,clock_timestamp(),wheb_usuario_pck.get_nm_usuario);

  commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_gerar_pri_hor_livre_vet (nr_seq_ageint_p bigint, dt_agenda_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

