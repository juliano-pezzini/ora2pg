-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_split_order_units (nr_seq_cpoe_order_unit_p bigint, si_option_p text, nm_usuario_p text, nr_seq_cpoe_rp_p bigint default null) AS $body$
DECLARE


ie_tipo_prescricao_w      cpoe_order_unit.si_type_of_prescription%type;
cd_setor_atendimento_w    atend_paciente_unidade.cd_setor_atendimento%type;
ie_via_aplicacao_w        cpoe_rp.ie_via_aplicacao%type;
nr_seq_cpoe_rp_w          cpoe_rp.nr_sequencia%type;

dt_inicio_ciclo_dispensacao_w   timestamp;
dt_fim_ciclo_dispensacao_w      timestamp;
dt_inicio_regular_rule_w        timestamp;
dt_fim_regular_rule_w           timestamp;
dt_deadline_regular_rule_w      timestamp;
dt_ini_emerg_rule_w             timestamp;
dt_fim_emerg_rule_w             timestamp;
dt_deadline_emerg_rule_w        timestamp;
si_type_of_prescription_w		cpoe_order_unit.si_type_of_prescription%type;
nr_order_unit_w					cpoe_order_unit.nr_order_unit%type;
ds_message_w					varchar(2000);
si_type_of_emerg_quant_w        smallint;

dt_referencia_w                 timestamp;

nr_seq_order_unit_inbetween_w   cpoe_order_unit.nr_sequencia%type;
nr_seq_order_unit_regular_w     cpoe_order_unit.nr_sequencia%type;
nr_seq_order_unit_temporary_w	cpoe_order_unit.nr_sequencia%type;
nr_seq_rp_found_w           	cpoe_rp.nr_sequencia%type;
nr_seq_rp_new_w					cpoe_rp.nr_sequencia%type;

dt_calc_start_rp_w				timestamp;
dt_calc_end_rp_w				timestamp;
dt_calc_start_order_unit_w		timestamp;
dt_calc_end_order_unit_w		timestamp;
nr_atendimento_p                numeric(20);

cpoe_order_empt CURSOR FOR
   SELECT cou.nr_sequencia
     FROM  cpoe_order_unit cou
    WHERE cou.nr_seq_prev_order_unit = nr_seq_cpoe_order_unit_p
      AND NOT EXISTS (SELECT 1
                        FROM cpoe_rp cr
                       WHERE cr.nr_seq_cpoe_order_unit = cou.nr_sequencia );

cpoe_rp_def_cur CURSOR FOR
	SELECT  dt_inicio,
			dt_fim,
      ie_via_aplicacao,
			nr_sequencia
	from    cpoe_rp
	where   nr_seq_cpoe_order_unit = nr_seq_cpoe_order_unit_p
	and (nr_sequencia = nr_seq_cpoe_rp_p or coalesce(nr_seq_cpoe_rp_p::text, '') = '')
	order by nr_sequencia_rp;

c_ou_comments CURSOR(nr_seq_cpoe_order_unit_pc  bigint) FOR
	SELECT	a.nr_sequencia
	from	cpoe_comment_linkage a
	where	a.nr_seq_cpoe_order_unit = nr_seq_cpoe_order_unit_pc;

c_rp_comments CURSOR(nr_seq_cpoe_rp_pc  bigint) FOR
	SELECT	a.nr_sequencia
	from	cpoe_comment_linkage a
	where	a.nr_seq_cpoe_rp = nr_seq_cpoe_rp_pc;

	procedure add_order_unit(si_type_of_emerg_prescr_ip text,
							dt_start_ip timestamp,
							dt_end_ip timestamp,
							nr_seq_order_unit_out_ip out bigint) is

	nr_seq_order_unit_out_w	cpoe_order_unit.nr_sequencia%type := nr_seq_cpoe_order_unit_p;
	nr_seq_comment_out_w	cpoe_comment_linkage.nr_sequencia%type;

	
BEGIN

	if (ds_message_w IS NOT NULL AND ds_message_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_message_w);
	end if;

	nr_seq_order_unit_out_w := DUPLICAR_REGISTRO('CPOE_ORDER_UNIT', wheb_usuario_pck.get_nm_usuario, nr_seq_order_unit_out_w);
	update  cpoe_order_unit
			set     ie_situacao = 'A',
					nr_seq_prev_order_unit = nr_seq_cpoe_order_unit_p,
					dt_start = dt_start_ip,
					dt_end = dt_end_ip,
					si_type_of_prescription = si_type_of_emerg_prescr_ip,
					nm_usuario = nm_usuario_p,
					dt_atualizacao = clock_timestamp(),
					nm_usuario_nrec = nm_usuario_p,
					dt_atualizacao_nrec = clock_timestamp()
	where nr_sequencia = nr_seq_order_unit_out_w;

	for r_c_ou_comments in c_ou_comments(nr_seq_cpoe_order_unit_p) loop
		nr_seq_comment_out_w	:= r_c_ou_comments.nr_sequencia;

		nr_seq_comment_out_w := DUPLICAR_REGISTRO('CPOE_COMMENT_LINKAGE', wheb_usuario_pck.get_nm_usuario, nr_seq_comment_out_w);
		update  cpoe_comment_linkage
		set     nr_seq_cpoe_order_unit = nr_seq_order_unit_out_w,
				nm_usuario = nm_usuario_p,
				dt_atualizacao = clock_timestamp(),
				nm_usuario_nrec = nm_usuario_p,
				dt_atualizacao_nrec = clock_timestamp()
		where 	nr_sequencia = nr_seq_comment_out_w;
	end loop;


	nr_seq_order_unit_out_ip:= nr_seq_order_unit_out_w;
	end;


    procedure update_data_Order(nr_seq_order_unit_p in number) IS
    dt_start_new_w        date;
    nr_sequencia_old_w number;
    c_cpoe_rp CURSOR FOR
            SELECT  crp.dt_inicio,
                    crp.dt_fim,
                    crp.nr_sequencia
            from    cpoe_rp crp
            where   crp.nr_seq_cpoe_order_unit IN (SELECT cou.nr_sequencia
                     FROM cpoe_order_unit cou
                    WHERE cou.nr_seq_prev_order_unit = nr_seq_cpoe_order_unit_p)
           order by crp.dt_inicio,
                    crp.dt_fim;

    Reg_Cli c_cpoe_rp%Rowtype;
    BEGIN
        dt_start_new_w := null;
        nr_sequencia_old_w := null;
        Open c_cpoe_rp;
        Loop
            Fetch c_cpoe_rp
            Into Reg_Cli;
            EXIT WHEN NOT FOUND; /* apply on c_cpoe_rp */

            IF Reg_Cli.dt_inicio >dt_start_new_w and (nr_sequencia_old_w IS NOT NULL AND nr_sequencia_old_w::text <> '')  THEN
                UPDATE cpoe_rp
                   SET dt_fim = Reg_Cli.dt_inicio - 0.00001157407
                 WHERE nr_sequencia = nr_sequencia_old_w;
            END IF;
            dt_start_new_w := Reg_Cli.dt_fim + 0.00001157407;
            nr_sequencia_old_w := Reg_Cli.nr_sequencia;
        END LOOP;
        Close c_cpoe_rp;
    END;
    procedure del_rp_empty( nr_seq_order_unit_p in NUMBER) IS
    qt_registro_rp_w  number;
	BEGIN
		SELECT max(1)
          INTO STRICT qt_registro_rp_w
		  FROM cpoe_rp
		 WHERE nr_seq_cpoe_order_unit = nr_seq_order_unit_p;

		IF qt_registro_rp_w = 0 THEN
			DELETE FROM cpoe_comment_linkage
			 WHERE nr_seq_cpoe_order_unit = nr_seq_order_unit_p;

			DELETE FROM cpoe_order_unit
             WHERE nr_sequencia = nr_seq_order_unit_p;
		END IF;
	END;

	procedure add_rp(nr_seq_order_unit_ref_ip	number,
					nr_seq_rp_cursor_ip	number,
					dt_calc_start_rp_ip	date,
					dt_calc_end_rp_ip	date,
					nr_seq_cpoe_rp_out_ip out number) is

	nr_seq_order_rp_w	number(10);

	nr_seq_rp_out_w	cpoe_order_unit.nr_sequencia%type := nr_seq_rp_cursor_ip;
	nr_seq_comment_out_w	cpoe_comment_linkage.nr_sequencia%type;
    qt_registro_times_w     cpoe_comment_linkage.nr_sequencia%type;

	begin
		SELECT max(1)
		  INTO STRICT qt_registro_times_w
		  FROM TABLE( CPOE_RP_TIMES_PCK.get_times_rp(nr_seq_rp_cursor_ip, dt_calc_start_rp_ip, dt_calc_end_rp_ip ));

		IF qt_registro_times_w > 0 THEN
			select  coalesce(max(nr_sequencia_rp),0) + 1
			into STRICT    nr_seq_order_rp_w
			from    cpoe_rp
			where   nr_seq_cpoe_order_unit = nr_seq_order_unit_ref_ip;

			nr_seq_rp_out_w := DUPLICAR_REGISTRO('CPOE_RP', wheb_usuario_pck.get_nm_usuario, nr_seq_rp_out_w);
			update  cpoe_rp
			set     nr_seq_prev_rp = nr_seq_rp_cursor_ip,
					dt_inicio = dt_calc_start_rp_ip,
					dt_fim = dt_calc_end_rp_ip,
					nr_seq_cpoe_order_unit = nr_seq_order_unit_ref_ip,
					nr_sequencia_rp = nr_seq_order_rp_w,
					nm_usuario = nm_usuario_p,
					dt_atualizacao = clock_timestamp(),
					nm_usuario_nrec = nm_usuario_p,
					dt_atualizacao_nrec = clock_timestamp()
			where nr_sequencia = nr_seq_rp_out_w;

			for r_c_rp_comments in c_rp_comments(nr_seq_rp_cursor_ip) loop
				nr_seq_comment_out_w	:= r_c_rp_comments.nr_sequencia;

				nr_seq_comment_out_w := DUPLICAR_REGISTRO('CPOE_COMMENT_LINKAGE', wheb_usuario_pck.get_nm_usuario, nr_seq_comment_out_w);
				update  cpoe_comment_linkage
				set     nr_seq_cpoe_rp = nr_seq_rp_out_w,
						nm_usuario = nm_usuario_p,
						dt_atualizacao = clock_timestamp(),
						nm_usuario_nrec = nm_usuario_p,
						dt_atualizacao_nrec = clock_timestamp()
				where 	nr_sequencia = nr_seq_comment_out_w;
			end loop;
		END IF;	
	end;

begin

if (si_option_p = 'REGULAR') and (nr_seq_cpoe_order_unit_p IS NOT NULL AND nr_seq_cpoe_order_unit_p::text <> '') then

	select  max(si_type_of_prescription),
			max(obter_setor_atendimento(nr_atendimento))
	into STRICT    ie_tipo_prescricao_w,
			cd_setor_atendimento_w
	from    cpoe_order_unit
	where   nr_sequencia = nr_seq_cpoe_order_unit_p;

	/* Inpatient normal */

	if (ie_tipo_prescricao_w = 'INPAT') then
		for cpoe_rp_cur in cpoe_rp_def_cur loop
			dt_referencia_w := cpoe_rp_cur.dt_inicio;
      ie_via_aplicacao_w := cpoe_rp_cur.ie_via_aplicacao;
      nr_seq_cpoe_rp_w := cpoe_rp_cur.nr_sequencia;

			si_type_of_emerg_quant_w := 1;

			SELECT * FROM CPOE_GET_REGULAR_RULE(
				dt_referencia_w, wheb_usuario_pck.get_cd_estabelecimento, cd_setor_atendimento_w, ie_via_aplicacao_w, nr_seq_cpoe_order_unit_p, nr_seq_cpoe_rp_w, dt_inicio_regular_rule_w, dt_fim_regular_rule_w, dt_deadline_regular_rule_w) INTO STRICT dt_inicio_regular_rule_w, dt_fim_regular_rule_w, dt_deadline_regular_rule_w;

			SELECT * FROM CPOE_GET_EMERGENCY_DISP_RULE(
				dt_referencia_w, wheb_usuario_pck.get_cd_estabelecimento, cd_setor_atendimento_w, ie_via_aplicacao_w, nr_seq_cpoe_order_unit_p, nr_seq_cpoe_rp_w, dt_ini_emerg_rule_w, dt_fim_emerg_rule_w, dt_deadline_emerg_rule_w) INTO STRICT dt_ini_emerg_rule_w, dt_fim_emerg_rule_w, dt_deadline_emerg_rule_w;

			if (dt_ini_emerg_rule_w IS NOT NULL AND dt_ini_emerg_rule_w::text <> '') and (cpoe_rp_cur.dt_fim > dt_fim_emerg_rule_w) and (dt_inicio_regular_rule_w > dt_fim_emerg_rule_w) then
				si_type_of_emerg_quant_w := 2;
			end if;

			while(dt_referencia_w <= cpoe_rp_cur.dt_fim) loop
				/*Inbetween and emergency generation */

				if (dt_referencia_w < dt_inicio_regular_rule_w) then
					for iIdx in 1.. si_type_of_emerg_quant_w  loop
						if (dt_ini_emerg_rule_w IS NOT NULL AND dt_ini_emerg_rule_w::text <> '' AND iIdx=1) then
							if (dt_referencia_w >= dt_ini_emerg_rule_w AND dt_referencia_w <= dt_fim_emerg_rule_w) then
								si_type_of_prescription_w := 'INPE';
							end if;
						else
						   si_type_of_prescription_w := 'INPI';
						end if;

						-- Check if in-between order unit was already created
						-- Check if emergencial order unit was already created
						select  max(a.nr_sequencia)
						into STRICT    nr_seq_order_unit_inbetween_w
						from    cpoe_order_unit a
						where   a.nr_seq_prev_order_unit = nr_seq_cpoe_order_unit_p
						and     a.si_type_of_prescription = si_type_of_prescription_w;

						if (coalesce(nr_seq_order_unit_inbetween_w::text, '') = '') then
							add_order_unit(	si_type_of_prescription_w,
											null,
											null,
											nr_seq_order_unit_inbetween_w);
						end if;

						select  max(b.nr_sequencia)
						into STRICT    nr_seq_rp_found_w
						from    cpoe_rp b,
								cpoe_order_unit a
						where   a.nr_sequencia = b.nr_seq_cpoe_order_unit
						and     a.nr_seq_prev_order_unit = nr_seq_cpoe_order_unit_p
						and     a.si_type_of_prescription = si_type_of_prescription_w
						and     b.nr_seq_prev_rp = cpoe_rp_cur.nr_sequencia;

						if (coalesce(nr_seq_rp_found_w::text, '') = '') then
							dt_calc_start_rp_w	:= cpoe_rp_cur.dt_inicio;
							if si_type_of_prescription_w  = 'INPE' then
								dt_calc_end_rp_w	  :=	dt_fim_emerg_rule_w;
								if (dt_inicio_regular_rule_w < dt_fim_emerg_rule_w) then
									dt_calc_end_rp_w	:= dt_inicio_regular_rule_w - 1/(24*60);
								end if;
							else
								if (dt_fim_emerg_rule_w IS NOT NULL AND dt_fim_emerg_rule_w::text <> '') then
									dt_calc_start_rp_w := dt_fim_emerg_rule_w +(1/(24*60));
								end if;

								if (cpoe_rp_cur.dt_fim > dt_inicio_regular_rule_w) then
									dt_calc_end_rp_w	:= dt_inicio_regular_rule_w - 1/(24*60);
								else
									dt_calc_end_rp_w	:=	cpoe_rp_cur.dt_fim;
								end if;
							end if;

							add_rp(	nr_seq_order_unit_inbetween_w,
									cpoe_rp_cur.nr_sequencia,
									dt_calc_start_rp_w,
									dt_calc_end_rp_w,
									nr_seq_rp_new_w);
						end if;
					end loop; /*For*/
				/* Regular prescription genartion */

                                elsif (dt_referencia_w >= dt_inicio_regular_rule_w and dt_referencia_w < dt_fim_regular_rule_w) then
					-- Check if regular order unit was already created
					select  max(a.nr_sequencia)
					into STRICT    nr_seq_order_unit_regular_w
					from    cpoe_order_unit a
					where   a.nr_seq_prev_order_unit = nr_seq_cpoe_order_unit_p
					and     a.si_type_of_prescription = 'INPR'
					and     a.dt_start = dt_inicio_regular_rule_w;

					if (coalesce(nr_seq_order_unit_regular_w::text, '') = '') then
						dt_calc_start_order_unit_w	:= dt_inicio_regular_rule_w;
						dt_calc_end_order_unit_w	:= dt_fim_regular_rule_w;

						add_order_unit(	'INPR',
										dt_calc_start_order_unit_w,
										dt_calc_end_order_unit_w,
										nr_seq_order_unit_regular_w);
					end if;

					select  max(b.nr_sequencia)
					into STRICT    nr_seq_rp_found_w
					from    cpoe_rp b,
							cpoe_order_unit a
					where   a.nr_sequencia = b.nr_seq_cpoe_order_unit
					and     a.nr_seq_prev_order_unit = nr_seq_cpoe_order_unit_p
					and     a.si_type_of_prescription = 'INPR'
					and     b.nr_seq_prev_rp = cpoe_rp_cur.nr_sequencia
                                        and     a.dt_start = dt_inicio_regular_rule_w;

					if (coalesce(nr_seq_rp_found_w::text, '') = '') then
                                        	dt_calc_start_rp_w	:= dt_inicio_regular_rule_w;

						if (cpoe_rp_cur.dt_fim > dt_fim_regular_rule_w) then
							dt_calc_end_rp_w	:= dt_fim_regular_rule_w;
						else
							dt_calc_end_rp_w	:=	cpoe_rp_cur.dt_fim;
						end if;

						dt_calc_start_rp_w	:= dt_calc_start_rp_w;

						add_rp(nr_seq_order_unit_regular_w,
								cpoe_rp_cur.nr_sequencia,
								dt_calc_start_rp_w,
								dt_calc_end_rp_w,
								nr_seq_rp_new_w);
					end if;

                                /* Get next regular date, if more than one */

				elsif (dt_referencia_w >= dt_fim_regular_rule_w) then
                                        CPOE_GET_REGULAR_RULE(
						dt_fim_regular_rule_w + 1/(24*60),
						wheb_usuario_pck.get_cd_estabelecimento,
						cd_setor_atendimento_w,
						ie_via_aplicacao_w,
						nr_seq_cpoe_order_unit_p,
						nr_seq_cpoe_rp_w,
						dt_inicio_regular_rule_w,
						dt_fim_regular_rule_w,
						dt_deadline_regular_rule_w);

				elsif (coalesce(dt_inicio_regular_rule_w::text, '') = '') then
					if (dt_ini_emerg_rule_w IS NOT NULL AND dt_ini_emerg_rule_w::text <> '') then
						if (dt_referencia_w >= dt_ini_emerg_rule_w AND dt_referencia_w <= dt_fim_emerg_rule_w) then
							si_type_of_prescription_w := 'INPE';
						end if;
					else
					   si_type_of_prescription_w := 'INPT';
					end if;

					select  max(a.nr_sequencia)
					into STRICT    nr_seq_order_unit_temporary_w
					from    cpoe_order_unit a
					where   a.nr_seq_prev_order_unit = nr_seq_cpoe_order_unit_p
					and     a.si_type_of_prescription = si_type_of_prescription_w;

					if (coalesce(nr_seq_order_unit_temporary_w::text, '') = '') then
						add_order_unit(	si_type_of_prescription_w,
										null,
										null,
										nr_seq_order_unit_temporary_w);
					end if;

					select  max(b.nr_sequencia)
					into STRICT    nr_seq_rp_found_w
					from    cpoe_rp b,
							cpoe_order_unit a
					where   a.nr_sequencia = b.nr_seq_cpoe_order_unit
					and     a.nr_seq_prev_order_unit = nr_seq_cpoe_order_unit_p
					and     a.si_type_of_prescription = si_type_of_prescription_w
					and     b.nr_seq_prev_rp = cpoe_rp_cur.nr_sequencia;

					if (coalesce(nr_seq_rp_found_w::text, '') = '') then
						add_rp(nr_seq_order_unit_temporary_w,
								cpoe_rp_cur.nr_sequencia,
								cpoe_rp_cur.dt_inicio,
								cpoe_rp_cur.dt_fim,
								nr_seq_rp_new_w);
					end if;
				end if;

				dt_referencia_w := dt_referencia_w + 1;

			end loop; /* While rp period */
		end loop; /* RP cursor */
		update	cpoe_order_unit
		set		ie_situacao = 'I',
				dt_atualizacao = clock_timestamp(),
				nm_usuario = nm_usuario_p
		where   nr_sequencia = nr_seq_cpoe_order_unit_p;

		commit;
	/* Outpatient for another medical department */

	elsif (ie_tipo_prescricao_w = 'OPAIM') then

		for cpoe_rp_cur in cpoe_rp_def_cur loop
			dt_referencia_w := cpoe_rp_cur.dt_inicio;

			si_type_of_emerg_quant_w := 1;
			SELECT * FROM CPOE_GET_EMERGENCY_DISP_RULE(
			dt_referencia_w, wheb_usuario_pck.get_cd_estabelecimento, cd_setor_atendimento_w, ie_via_aplicacao_w, nr_seq_cpoe_order_unit_p, nr_seq_cpoe_rp_w, dt_ini_emerg_rule_w, dt_fim_emerg_rule_w, dt_deadline_emerg_rule_w) INTO STRICT dt_ini_emerg_rule_w, dt_fim_emerg_rule_w, dt_deadline_emerg_rule_w;

  	 	si_type_of_emerg_quant_w := 1;

			while(dt_referencia_w <= cpoe_rp_cur.dt_fim) loop
				/*Emergency or for another department */

				for iIdx in 1.. si_type_of_emerg_quant_w  loop
					si_type_of_prescription_w := 'OPAIM';

					if (dt_ini_emerg_rule_w IS NOT NULL AND dt_ini_emerg_rule_w::text <> '' AND iIdx=1) then
						if (dt_referencia_w >= dt_ini_emerg_rule_w AND dt_referencia_w <= dt_fim_emerg_rule_w) then
							si_type_of_prescription_w := 'OPAEM';
						end if;
					else
					   si_type_of_prescription_w := 'OPAIM';
					end if;

					-- Check if in-between order unit was already created
					-- Check if emergencial order unit was already created
					select  max(a.nr_sequencia)
					into STRICT    nr_seq_order_unit_inbetween_w
					from    cpoe_order_unit a
					where   a.nr_seq_prev_order_unit = nr_seq_cpoe_order_unit_p
					and     a.si_type_of_prescription = si_type_of_prescription_w;

					if (coalesce(nr_seq_order_unit_inbetween_w::text, '') = '') then
						add_order_unit(	si_type_of_prescription_w,
										null,
										null,
										nr_seq_order_unit_inbetween_w);
					end if;

					select  max(b.nr_sequencia)
					into STRICT    nr_seq_rp_found_w
					from    cpoe_rp b,
							cpoe_order_unit a
					where   a.nr_sequencia = b.nr_seq_cpoe_order_unit
					and     a.nr_seq_prev_order_unit = nr_seq_cpoe_order_unit_p
					and     a.si_type_of_prescription = si_type_of_prescription_w
					and     b.nr_seq_prev_rp = cpoe_rp_cur.nr_sequencia;

					if (coalesce(nr_seq_rp_found_w::text, '') = '') then
						dt_calc_start_rp_w	:= cpoe_rp_cur.dt_inicio;
						if si_type_of_prescription_w  = 'OPAEM' then
							dt_calc_end_rp_w	  :=	dt_fim_emerg_rule_w;
						else
							if (dt_fim_emerg_rule_w IS NOT NULL AND dt_fim_emerg_rule_w::text <> '') then
								dt_calc_start_rp_w := dt_fim_emerg_rule_w +(1/(24*60));
								dt_inicio_regular_rule_w := dt_inicio_regular_rule_w+1;
							end if;

							if (cpoe_rp_cur.dt_fim > dt_inicio_regular_rule_w) then
								dt_calc_end_rp_w	:= dt_inicio_regular_rule_w - 1/(24*60);
							else
								dt_calc_end_rp_w	:=	cpoe_rp_cur.dt_fim;
							end if;
						end if;

						add_rp(	nr_seq_order_unit_inbetween_w,
								cpoe_rp_cur.nr_sequencia,
								dt_calc_start_rp_w,
								dt_calc_end_rp_w,
								nr_seq_rp_new_w);
					end if;
				end loop; /*For*/
				if (dt_fim_emerg_rule_w IS NOT NULL AND dt_fim_emerg_rule_w::text <> '') then
					dt_inicio_regular_rule_w := dt_inicio_regular_rule_w-1;
				end if;

				dt_referencia_w := dt_referencia_w + 1;
			end loop; /* While RP period */
		end loop; /* RP cursor */
		--> Inativa a Order Unit.
		update	cpoe_order_unit
		set		ie_situacao = 'I',
				dt_atualizacao = clock_timestamp(),
				nm_usuario = nm_usuario_p
		where   nr_sequencia = nr_seq_cpoe_order_unit_p;
		commit;
		elsif (ie_tipo_prescricao_w = 'NINJ') then -- type of prescription is normal injection
            select nr_atendimento into STRICT nr_atendimento_p from cpoe_order_unit where nr_sequencia = nr_seq_cpoe_order_unit_p;
            CALL SPLIT_NINJ_ORDER_INTO_UNITS(nr_atendimento_p,nr_seq_cpoe_order_unit_p,nm_usuario_p,nr_seq_cpoe_rp_p);
	end if; /*End another department prescription*/
end if; /*Parameter check*/
     for cp in cpoe_order_empt loop
        del_rp_empty(cp.nr_sequencia);
     end loop;

     update_data_Order(nr_seq_cpoe_order_unit_p);


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_split_order_units (nr_seq_cpoe_order_unit_p bigint, si_option_p text, nm_usuario_p text, nr_seq_cpoe_rp_p bigint default null) FROM PUBLIC;

