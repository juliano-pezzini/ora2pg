-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_contab_peona ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE
				

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
-------------------------------------------------------------------------------------------------------------------

Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_centro_custo_w		conta_contabil.ie_centro_custo%type;
ie_debito_credito_w		w_movimento_contabil.ie_debito_credito%type;
cd_conta_contabil_w		w_movimento_contabil.cd_conta_contabil%type;
vl_contabil_w			w_movimento_contabil.vl_movimento%type;
nr_seq_regra_cc_w		pls_regra_centro_custo.nr_sequencia%type;
cd_historico_w			w_movimento_contabil.cd_historico%type;
nr_lote_contabil_w		w_movimento_contabil.nr_lote_contabil%type;
nr_seq_w_movto_cont_w	w_movimento_contabil.nr_sequencia%type;
cd_centro_custo_w		w_movimento_contabil.cd_centro_custo%type;
cd_centro_custo_item_w	pls_regra_centro_custo.cd_centro_custo%type;
cd_estabelecimento_w	w_movimento_contabil.cd_estabelecimento%type;
nr_seq_peona_w			pls_peona.nr_sequencia%type;
ds_conteudo_w			varchar(4000);
vl_retorno_w			varchar(2000);
nm_agrupador_w			varchar(255);
nr_seq_agrupamento_w		w_movimento_contabil.nr_seq_agrupamento%type;
dt_referencia_w			timestamp;
dt_referencia_mes_w		timestamp;
dt_referencia_fm_w		timestamp;
cd_tipo_lote_contabil_w         bigint;

c_peona CURSOR FOR
	SELECT	'C',
		b.vl_peona,
		cd_conta_credito,
		cd_historico_credito,
		a.nr_sequencia
	from	pls_peona_conta_contab	b,
		pls_peona		a
	where	a.nr_sequencia		= b.nr_seq_peona
	and	a.nr_lote_contabil	= nr_lote_contabil_p
	
union all

	SELECT	'D',
		b.vl_peona,
		cd_conta_debito,
		cd_historico_debito,
		a.nr_sequencia
	from	pls_peona_conta_contab	b,
		pls_peona		a
	where	a.nr_sequencia		= b.nr_seq_peona
	and	a.nr_lote_contabil	= nr_lote_contabil_p;


BEGIN
/*Validacao para impedir a geracao em lotes incorretos */

if (ie_exclusao_p <> 'S') then
        select b.cd_tipo_lote_contabil
        into STRICT cd_tipo_lote_contabil_w
        from lote_contabil b
        where b.nr_lote_contabil = nr_lote_contabil_p;
        if (cd_tipo_lote_contabil_w <> 35) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
        end if;
end if;
if (ie_exclusao_p = 'S') then
	begin
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	
	delete from movimento_contabil
	where  nr_lote_contabil		= nr_lote_contabil_p;

	update	lote_contabil
	set	vl_credito 		= 0,
		vl_debito  		= 0
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	update	pls_peona
	set	nr_lote_contabil	= 0
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	end;
else
	begin

	CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
				1,
				wheb_mensagem_pck.get_texto(1097173),
				nm_usuario_p);
				
	select	dt_referencia,
		cd_estabelecimento,
		nr_lote_contabil
	into STRICT 	dt_referencia_w,
		cd_estabelecimento_w,
		nr_lote_contabil_w
	from 	lote_contabil
	where 	nr_lote_contabil 	= nr_lote_contabil_p;
	
	dt_referencia_mes_w	:= trunc(dt_referencia_w, 'month');
	dt_referencia_fm_w	:= fim_dia(fim_mes(dt_referencia_mes_w));
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	
	delete from w_movimento_contabil
	where  nr_lote_contabil		= nr_lote_contabil_p;
	
	update	pls_peona
	set	nr_lote_contabil		= nr_lote_contabil_p
	where	coalesce(nr_lote_contabil, 0)	= 0
	and	cd_estabelecimento		= cd_estabelecimento_w
	and	dt_competencia between dt_referencia_mes_w and dt_referencia_fm_w;
	
	commit;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	
	SELECT * FROM pls_obter_centro_custo(	'R', null, cd_estabelecimento_w, '', '', '', '', '', cd_centro_custo_item_w, nr_seq_regra_cc_w) INTO STRICT cd_centro_custo_item_w, nr_seq_regra_cc_w;
	
	nr_seq_w_movto_cont_w	:= 0;
	
	nm_agrupador_w	:= coalesce(trim(both obter_agrupador_contabil(35)),'NR_SEQ_PEONA');
	
	open c_peona;
	loop
	fetch c_peona into
		ie_debito_credito_w,
		vl_contabil_w,
		cd_conta_contabil_w,
		cd_historico_w,
		nr_seq_peona_w;
	EXIT WHEN NOT FOUND; /* apply on c_peona */
		begin
		cd_centro_custo_w	:= null;
		
		select	ie_centro_custo
		into STRICT	ie_centro_custo_w
		from	conta_contabil
		where	cd_conta_contabil	= cd_conta_contabil_w;
		
		if (ie_centro_custo_w = 'S') then
			cd_centro_custo_w	:= cd_centro_custo_item_w;
		end if;
		
		nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
		
		if (nm_agrupador_w = 'NR_SEQ_PEONA') then
			nr_seq_agrupamento_w	:= nr_seq_peona_w;
		end if;
		
		insert into w_movimento_contabil(nr_lote_contabil,
			nr_sequencia,
			cd_conta_contabil,
			ie_debito_credito,
			cd_historico,
			dt_movimento,
			vl_movimento,
			cd_estabelecimento,
			cd_centro_custo,
			ds_compl_historico,
			nr_seq_agrupamento)
		values (nr_lote_contabil_p,
			nr_seq_w_movto_cont_w,
			cd_conta_contabil_w,
			ie_debito_credito_w,
			cd_historico_w,
			dt_referencia_w,
			vl_contabil_w,
			cd_estabelecimento_w,
			cd_centro_custo_w,
			null,
			nr_seq_agrupamento_w);
		end;
	end loop;
	close c_peona;
	
	CALL agrupa_movimento_contabil(	nr_lote_contabil_p,
					nm_usuario_p);
	end;
end if;

if (coalesce(ds_retorno_p::text, '') = '') then
	begin
	update	lote_contabil
	set	ie_situacao		= 'A',
		dt_geracao_lote		= CASE WHEN ie_exclusao_p='N' THEN clock_timestamp() WHEN ie_exclusao_p='S' THEN null END
	where	nr_lote_contabil 	= nr_lote_contabil_p;

	if (ie_exclusao_p = 'S') then
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165188);
		
		CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
					2,
					'',
					nm_usuario_p);
	else
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165187);

		CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
					1,
					wheb_mensagem_pck.get_texto(1097175),
					nm_usuario_p);
	end if;

	commit;
	end;
else
	rollback;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_contab_peona ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

