-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE qua_replicar_treinamento_doc ( nr_seq_treinamento_p bigint, nr_seq_documento_p bigint, nm_usuario_p text) AS $body$
DECLARE



nr_seq_treinamento_w		bigint;
cd_cargo_w			bigint;
cd_pessoa_resp_w			varchar(10);
nm_responsavel_w			varchar(225);
ie_faltou_w			varchar(1);
cd_pessoa_fisica_w		varchar(10);
ds_observacao_w			varchar(255);
nm_pessoa_externo_w		varchar(255);
vl_nota_w			integer;
cd_funcao_w			integer;
dt_envio_nota_w			timestamp;
ds_arquivo_w			varchar(255);
cd_setor_atendimento_w		bigint;

C01 CURSOR FOR
	SELECT	cd_cargo,
		cd_pessoa_resp,
		nm_responsavel
	from	qua_doc_trein_resp
	where	nr_seq_treinamento = nr_seq_treinamento_p;

C02 CURSOR FOR
	SELECT	ie_faltou,
		cd_pessoa_fisica,
		ds_observacao,
		nm_pessoa_externo,
		vl_nota,
		dt_envio_nota,
		cd_setor_atendimento
	from	qua_doc_trein_pessoa
	where	nr_seq_treinamento = nr_seq_treinamento_p;

C03 CURSOR FOR
	SELECT	cd_funcao
	from	qua_doc_trein_funcao
	where	nr_seq_treinamento = nr_seq_treinamento_p;

C04 CURSOR FOR
	SELECT	ds_arquivo
	from	qua_doc_trein_anexo
	where	nr_seq_treinamento = nr_seq_treinamento_p;


BEGIN

if (coalesce(nr_seq_treinamento_p,0) > 0) and (coalesce(nr_seq_documento_p,0) > 0) then
	begin
	select	nextval('qua_doc_treinamento_seq')
	into STRICT	nr_seq_treinamento_w
	;

	insert into qua_doc_treinamento(
			nr_sequencia,
			ds_treinamento,
			dt_atualizacao,
			dt_prevista,
			ie_filmagem,
			nm_usuario,
			nr_seq_documento,
			qt_tempo_previsto,
			cd_funcao,
			ds_arquivo,
			dt_atualizacao_nrec,
			dt_fim_real,
			dt_real,
			ie_controla_confirmacao,
			ie_interno_externo,
			ie_retreinamento,
			nm_usuario_nrec,
			nr_seq_modulo,
			qt_particip_prev,
			qt_tempo_real)
		SELECT	nr_seq_treinamento_w,
			ds_treinamento,
			clock_timestamp(),
			dt_prevista,
			ie_filmagem,
			nm_usuario_p,
			nr_seq_documento_p,
			qt_tempo_previsto,
			cd_funcao,
			ds_arquivo,
			clock_timestamp(),
			dt_fim_real,
			dt_real,
			ie_controla_confirmacao,
			ie_interno_externo,
			ie_retreinamento,
			nm_usuario_p,
			nr_seq_modulo,
			qt_particip_prev,
			qt_tempo_real
		from	qua_doc_treinamento
		where	nr_sequencia = nr_seq_treinamento_p;

	open C01;
	loop
	fetch C01 into
		cd_cargo_w,
		cd_pessoa_resp_w,
		nm_responsavel_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		insert into qua_doc_trein_resp(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_treinamento,
				cd_cargo,
				cd_pessoa_resp,
				dt_atualizacao_nrec,
				nm_responsavel,
				nm_usuario_nrec)
			values (	nextval('qua_doc_trein_resp_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_treinamento_w,
				cd_cargo_w,
				cd_pessoa_resp_w,
				clock_timestamp(),
				nm_responsavel_w,
				clock_timestamp());

		end;
	end loop;
	close C01;

	open C02;
	loop
	fetch C02 into
		ie_faltou_w,
		cd_pessoa_fisica_w,
		ds_observacao_w,
		nm_pessoa_externo_w,
		vl_nota_w,
		dt_envio_nota_w,
		cd_setor_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		insert into qua_doc_trein_pessoa(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_faltou,
				nr_seq_treinamento,
				cd_pessoa_fisica,
				ds_observacao,
				nm_pessoa_externo,
				vl_nota,
				dt_envio_nota,
				dt_confirmacao,
				nm_usuario_confirmacao,
				cd_setor_atendimento)
			values (	nextval('qua_doc_trein_pessoa_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ie_faltou_w,
				nr_seq_treinamento_w,
				cd_pessoa_fisica_w,
				ds_observacao_w,
				nm_pessoa_externo_w,
				vl_nota_w,
				dt_envio_nota_w,
				null,
				null,
				cd_setor_atendimento_w);
		end;
	end loop;
	close C02;

	open C03;
	loop
	fetch C03 into
		cd_funcao_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		insert into qua_doc_trein_funcao(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_treinamento,
				cd_funcao)
			values (	nextval('qua_doc_trein_funcao_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_treinamento_w,
				cd_funcao_w);
		end;
	end loop;
	close C03;

	open C04;
	loop
	fetch C04 into
		ds_arquivo_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		insert into qua_doc_trein_anexo(
				nr_sequencia,
				nr_seq_treinamento,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo)
			values (	nextval('qua_doc_trein_anexo_seq'),
				nr_seq_treinamento_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ds_arquivo_w);
		end;
	end loop;
	close C04;

	commit;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qua_replicar_treinamento_doc ( nr_seq_treinamento_p bigint, nr_seq_documento_p bigint, nm_usuario_p text) FROM PUBLIC;

