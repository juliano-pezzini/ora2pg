-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_matmed_result ( dt_referencia_p timestamp, ie_similar_p text, cd_convenio_p bigint, cd_categoria_p text, nm_usuario_p text, ie_exclui_reg_p text default 'S') AS $body$
DECLARE

 
cd_material_w		integer;
cd_estabelecimento_w	integer;
ie_tipo_consumo_w		smallint;
cont_w			integer;
vl_custo_medio_w		double precision;
vl_custo_compra_w		double precision;
vl_medio_fatur_w		double precision;
qt_fatur_w		double precision;
qt_consumo_w		double precision;
ie_origem_estoque_w	varchar(01);
dt_referencia_w		timestamp;
dt_ref_final_w		timestamp;
nr_sequencia_w		bigint;
vl_preco_convenio_w	double precision;
dt_ult_preco_w		timestamp;
cd_tab_preco_w		bigint;
ie_org_preco_w		bigint;
qt_conversao_w		double precision;
nr_seq_bras_preco_w	bigint;
nr_seq_mat_bras_w	bigint;
nr_seq_conv_bras_w	bigint;
nr_seq_conv_simpro_w	bigint;
nr_seq_mat_simpro_w	bigint;
nr_seq_simpro_preco_w	bigint;
nr_seq_ajuste_mat_w	bigint;

c01 CURSOR FOR 
	SELECT	'E', 
		1 ie_tipo, 
		c.cd_estabelecimento, 
		coalesce(b.cd_material_estoque, b.cd_material) cd_material, 
		sum(coalesce(dividir(qt_material , coalesce(b.qt_conv_estoque_consumo, 1)),0)) qt_fatur, 
		dividir(sum(coalesce(vl_material,0)),sum(dividir(qt_material , coalesce(b.qt_conv_estoque_consumo, 1)))) vl_medio_fatur, 
		0 vl_custo_medio, 
		0 vl_custo_compra, 
		sum(coalesce(dividir(qt_material , coalesce(b.qt_conv_estoque_consumo, 1)),0)) qt_consumo, 
		coalesce(b.qt_conv_estoque_consumo, 1) 
	from 	atendimento_paciente c, 
		material b, 
		material_atend_paciente a 
	where 	a.dt_atendimento between dt_referencia_w and dt_ref_final_w 
	 and 	a.cd_material	= b.cd_material 
	 and	a.nr_atendimento	= c.nr_atendimento 
	 and	coalesce(a.cd_motivo_exc_conta::text, '') = '' 
	group by c.cd_estabelecimento, 
		coalesce(b.cd_material_estoque, b.cd_material), 
		coalesce(b.qt_conv_estoque_consumo, 1) 
	
union all
 
	SELECT	'E', 
		2 ie_tipo, 
		cd_estabelecimento, 
		cd_material, 
		0 qt_fatur, 
		0 vl_medio_fatur, 
		max(coalesce(vl_custo_medio, 0)) vl_custo_medio, 
		max(coalesce(vl_preco_ult_compra, 0)) vl_custo_compra, 
		0 qt_consumo, 
		0 
	from (select	cd_estabelecimento, 
			cd_material, 
			vl_custo_medio, 
			vl_preco_ult_compra 
		from	fornecedor_mat_consignado 
		where	dt_mesano_referencia between dt_referencia_w and dt_ref_final_w 
		
union all
 
		select	cd_estabelecimento, 
			cd_material, 
			vl_custo_medio, 
			vl_preco_ult_compra 
		from	saldo_estoque 
		where	dt_mesano_referencia between dt_referencia_w and dt_ref_final_w) alias23 
	group 	by cd_estabelecimento, 
		cd_material 
	
union all
 
	select	'E', 
		3 ie_tipo, 
		a.cd_estabelecimento, 
		coalesce(b.cd_material_estoque, a.cd_material) cd_material, 
		0 qt_fatur, 
		0 vl_medio_fatur, 
		0 vl_custo_medio, 
		0 vl_custo_compra, 
		sum(coalesce(a.qt_estoque, 0)) qt_consumo, 
		0 
	from	material b, 
		operacao_estoque c, 
		resumo_movto_estoque a 
	where	a.cd_material			= b.cd_material 
	and	a.dt_mesano_referencia	between dt_referencia_w and dt_ref_final_w 
	and	a.cd_operacao_estoque	= c.cd_operacao_estoque 
	and	((c.ie_consumo		= 'D') or (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> '')) 
	group 	by a.cd_estabelecimento, 
		coalesce(b.cd_material_estoque, a.cd_material) 
	
union all
 
	select	'O', 
		1 ie_tipo, 
		c.cd_estabelecimento, 
		b.cd_material, 
		sum(coalesce(dividir(qt_material , coalesce(b.qt_conv_estoque_consumo, 1)),0)) qt_fatur, 
		dividir(sum(coalesce(vl_material,0)),sum(dividir(qt_material , coalesce(b.qt_conv_estoque_consumo, 1)))) vl_medio_fatur, 
		0 vl_custo_medio, 
		0 vl_custo_compra, 
		0 qt_consumo, 
		sum(qt_material) qt_consumo 
	from 	atendimento_paciente c, 
		material b, 
		material_atend_paciente a 
	where 	a.dt_atendimento between dt_referencia_w and dt_ref_final_w 
	 and 	a.cd_material		= b.cd_material 
	 and	a.nr_atendimento		= c.nr_atendimento 
	 and	coalesce(a.cd_motivo_exc_conta::text, '') = '' 
	 and	coalesce(ie_similar_p,'N')	= 'S' 
	group by c.cd_estabelecimento, b.cd_material 
	order by 1,2;


BEGIN 
 
dt_referencia_w		:= trunc(dt_referencia_p,'month');
dt_ref_final_w		:= last_day(trunc(dt_referencia_p,'month')) + 86399/86400;
 
if (coalesce(ie_exclui_reg_p,'S') = 'S') then 
	delete	from eis_matmed_result 
	where	dt_referencia = dt_referencia_w;
end if;	
 
open c01;
loop 
fetch c01 into 
	ie_origem_estoque_w,		 
	ie_tipo_consumo_w, 
	cd_estabelecimento_w, 
	cd_material_w, 
	qt_fatur_w, 
	vl_medio_fatur_w, 
	vl_custo_medio_w, 
	vl_custo_compra_w, 
	qt_consumo_w, 
	qt_conversao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
 
	if (ie_origem_estoque_w = 'O') and (ie_tipo_consumo_w = 1) then 
		vl_custo_compra_w	:= 0;
		select	coalesce(max(nr_sequencia),0) 
		into STRICT	nr_sequencia_w 
		from	nota_fiscal_item a 
		where	cd_material	= cd_material_w 
		and	dt_atualizacao	>= clock_timestamp() - interval '90 days' 
		and	dt_atualizacao	<= dt_ref_final_w 
		and	cd_estabelecimento	= cd_estabelecimento_w 
		and	exists (SELECT 1 
			from	nota_fiscal b 
			where	a.nr_sequencia= b.nr_sequencia 
			and	b.ie_situacao	= '1');
		if (nr_sequencia_w > 0) then 
/*			select	nvl(max(dividir((a.vl_total_item_nf - a.vl_desconto - 
	  			vl_desconto_rateio + vl_frete + a.vl_despesa_acessoria + a.vl_seguro), 
				a.qt_item_estoque)),0) comentado por anderson 27/09/2006 - os 41443*/
 
			select	sum(obter_valor_ultima_compra(a.cd_estabelecimento,null,a.cd_material,a.cd_local_estoque,'N')) 
			into STRICT	vl_custo_compra_w 
			from 	nota_fiscal_item a 
			where	nr_sequencia 	= nr_sequencia_w 
			and	cd_material 	= cd_material_w;	
		end if;
	end if;
 
	vl_preco_convenio_w	:= 0;
	if (ie_origem_estoque_w = 'E') and (ie_tipo_consumo_w = 1) and (cd_convenio_p IS NOT NULL AND cd_convenio_p::text <> '') then 
		SELECT * FROM define_preco_material( 
			cd_estabelecimento_w, cd_convenio_p, cd_categoria_p, dt_ref_final_w, cd_material_w, null, null, null, null, null, null, null, null, null, null, null, null, null, null, vl_preco_convenio_w, dt_ult_preco_w, cd_tab_preco_w, ie_org_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT vl_preco_convenio_w, dt_ult_preco_w, cd_tab_preco_w, ie_org_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;
		vl_preco_convenio_w	:= vl_preco_convenio_w * qt_conversao_w;
	end if;
 
	select	count(*) 
	into STRICT	cont_w 
	from	eis_matmed_result 
	where	dt_referencia	= dt_referencia_w 
	and	cd_convenio	= cd_convenio_p 
	and	cd_material	= cd_material_w 
	and	cd_estabelecimento	= cd_estabelecimento_w 
	and	ie_orig_estoque	= ie_origem_estoque_w;
 
	if (cont_w = 0) then 
		insert into eis_matmed_result(dt_referencia, 
			cd_estabelecimento, 
			cd_material, 
			dt_atualizacao, 
			nm_usuario, 
			qt_faturada, 
			vl_medio_fatur, 
			vl_custo_medio, 
			vl_custo_compra, 
			qt_consumo, 
			ie_orig_estoque, 
			vl_preco_convenio, 
			cd_convenio) 
		values (dt_referencia_w, 
			cd_estabelecimento_w, 
			cd_material_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			qt_fatur_w, 
			vl_medio_fatur_w, 
			vl_custo_medio_w, 
			vl_custo_compra_w, 
			qt_consumo_w, 
			ie_origem_estoque_w, 
			vl_preco_convenio_w, 
			cd_convenio_p);
	else 
		update	eis_matmed_result 
		set	qt_faturada	= qt_faturada + qt_fatur_w, 
			vl_medio_fatur	= vl_medio_fatur + vl_medio_fatur_w, 
			vl_custo_medio	= vl_custo_medio + vl_custo_medio_w, 
			vl_custo_compra 	= vl_custo_compra + vl_custo_compra_w, 
			qt_consumo	= qt_consumo + qt_consumo_w, 
			nm_usuario	= nm_usuario_p, 
			dt_atualizacao	= clock_timestamp(), 
			cd_convenio	= cd_convenio_p 
		where	cd_material	= cd_material_w 
		and	cd_estabelecimento	= cd_estabelecimento_w 
		and	dt_referencia	= dt_referencia_w 
		and	ie_orig_estoque	= ie_origem_estoque_w 
		and	cd_convenio	= cd_convenio_p;
	end if;
end loop;
close c01;
 
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_matmed_result ( dt_referencia_p timestamp, ie_similar_p text, cd_convenio_p bigint, cd_categoria_p text, nm_usuario_p text, ie_exclui_reg_p text default 'S') FROM PUBLIC;

