-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_movto_estoque_dia ( dt_mesano_referencia_p timestamp, cd_estabelecimento_p bigint, dt_inicio_movto_p timestamp, dt_fim_movto_p timestamp, cd_local_estoque_p bigint, cd_material_p bigint, cd_grupo_material_p bigint, cd_subgrupo_material_p bigint, cd_classe_material_p bigint, ie_movimento_p text, ie_consignado_p text, nm_usuario_p text) AS $body$
DECLARE


qt_movimento_w			double precision;
dt_processo_w			timestamp;
dt_atualzacao_w			timestamp;
cd_local_estoque_w		smallint;
cd_operacao_estoque_w		smallint;
cd_material_estoque_w		integer;
nr_movimento_estoque_w		bigint;
nr_documento_w			bigint;
dt_mes_ant_w			timestamp;
qt_saldo_ant_w			double precision;
qt_estoque_w			double precision	:= 0;
ie_entrada_saida_w			varchar(1);
cd_acao_w			varchar(1);
dt_mesano_referencia_w		timestamp;
vl_estoque_ant_w			double precision;
vl_movimento_w			double precision;
vl_estoque_w			double precision	:= 0;
ie_tipo_informacao_w		bigint;
cd_material_w			integer;
dt_fim_movto_w			timestamp;
ie_consignado_w			varchar(1);

c01 CURSOR FOR
SELECT	a.cd_material,
	'N' ie_consignado
from	saldo_estoque a,
	estrutura_material_v b
where	a.cd_material = b.cd_material
and	a.cd_material = coalesce(cd_material_p,a.cd_material)
and	b.cd_grupo_material = coalesce(cd_grupo_material_p, b.cd_grupo_material)
and	b.cd_subgrupo_material = coalesce(cd_subgrupo_material_p, b.cd_subgrupo_material)
and	b.cd_classe_material = coalesce(cd_classe_material_p, b.cd_classe_material)
and	((ie_movimento_p = 'N') or
		exists (	select	1
			from	resumo_movto_estoque_dia c
			where	c.cd_material = a.cd_material
			and	c.cd_local_estoque 	= coalesce(cd_local_estoque_p, c.cd_local_estoque)
			and	ie_consignado = 'N'
			and	c.dt_dia between coalesce(dt_inicio_movto_p, c.dt_dia) and PKG_DATE_UTILS.end_of(coalesce(coalesce(dt_fim_movto_p,c.dt_dia),clock_timestamp()),'DAY',0)
			and	c.cd_estabelecimento	= cd_estabelecimento_p
			and	c.dt_mesano_referencia = a.dt_mesano_referencia))
and	ie_consignado_p = 'N'
and	a.dt_mesano_referencia = dt_mesano_referencia_p
and	a.cd_estabelecimento = cd_estabelecimento_p
group by a.cd_material

union all

select	a.cd_material,
	'S' ie_consignado
from	fornecedor_mat_consignado a,
	estrutura_material_v b
where	a.cd_material = b.cd_material
and	a.cd_material = coalesce(cd_material_p,a.cd_material)
and	b.cd_grupo_material = coalesce(cd_grupo_material_p, b.cd_grupo_material)
and	b.cd_subgrupo_material = coalesce(cd_subgrupo_material_p, b.cd_subgrupo_material)
and	b.cd_classe_material = coalesce(cd_classe_material_p, b.cd_classe_material)
and	((ie_movimento_p = 'N') or
	exists (	select	1
		from	resumo_movto_estoque_dia c
		where	c.cd_material = a.cd_material
		and	c.cd_local_estoque 	= coalesce(cd_local_estoque_p, c.cd_local_estoque)
		and	ie_consignado = 'N'
		and	c.dt_dia between coalesce(dt_inicio_movto_p, c.dt_dia) and PKG_DATE_UTILS.end_of(coalesce(coalesce(dt_fim_movto_p,c.dt_dia),clock_timestamp()),'DAY',0)
		and	c.cd_estabelecimento	= cd_estabelecimento_p
		and	c.dt_mesano_referencia = a.dt_mesano_referencia))
and	ie_consignado_p = 'S'
and	a.dt_mesano_referencia = dt_mesano_referencia_p
and	a.cd_estabelecimento = cd_estabelecimento_p
group by a.cd_material;

c02 CURSOR FOR
SELECT	a.dt_dia,
	a.cd_local_estoque,
	a.cd_operacao_estoque,
	a.cd_material,
	CASE WHEN b.ie_entrada_saida='E' THEN a.qt_estoque  ELSE a.qt_estoque*-1 END ,
	CASE WHEN b.ie_entrada_saida='E' THEN a.vl_estoque  ELSE a.vl_estoque*-1 END ,
	b.ie_entrada_saida
from	resumo_movto_estoque_dia a,
	operacao_estoque b
where	a.cd_operacao_estoque = b.cd_operacao_estoque
and	a.cd_local_estoque 	= coalesce(cd_local_estoque_p, a.cd_local_estoque)
and	a.ie_consignado 	= ie_consignado_w
and	a.cd_material		= cd_material_w
and	a.cd_estabelecimento	= cd_estabelecimento_p
and	a.dt_mesano_referencia	= dt_mesano_referencia_p
order by a.dt_dia;


BEGIN

delete	FROM w_razao_estoque
where	nm_usuario = nm_usuario_p;

commit;

dt_mesano_referencia_w		:= dt_mesano_referencia_p;
dt_mes_ant_w			:= PKG_DATE_UTILS.ADD_MONTH(dt_mesano_referencia_p,-1,0);

if (dt_fim_movto_p IS NOT NULL AND dt_fim_movto_p::text <> '') then
	dt_fim_movto_w := PKG_DATE_UTILS.end_of(coalesce(dt_fim_movto_p,clock_timestamp()),'DAY',0);
end if;

open c01;
loop
fetch c01 into
	cd_material_w,
	ie_consignado_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	if (ie_consignado_w = 'S') then
		select	coalesce(sum(qt_estoque),0),
			coalesce(sum(vl_estoque),0)
		into STRICT	qt_saldo_ant_w,
			vl_estoque_ant_w
		from	fornecedor_mat_consignado
		where	cd_local_estoque 	= coalesce(cd_local_estoque_p, cd_local_estoque)
		and	cd_material		= cd_material_w
		and	cd_estabelecimento	= cd_estabelecimento_p
		and	dt_mesano_referencia	= dt_mes_ant_w;
	else
		select	coalesce(sum(qt_estoque),0),
			coalesce(sum(vl_estoque),0)
		into STRICT	qt_saldo_ant_w,
			vl_estoque_ant_w
		from	saldo_estoque
		where	cd_local_estoque 	= coalesce(cd_local_estoque_p, cd_local_estoque)
		and	cd_material		= cd_material_w
		and	cd_estabelecimento	= cd_estabelecimento_p
		and	dt_mesano_referencia	= dt_mes_ant_w;
	end if;

	qt_estoque_w	:= qt_saldo_ant_w;
	vl_estoque_w	:= vl_estoque_ant_w;

	insert into w_razao_estoque(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		ie_tipo_informacao,
		cd_estabelecimento,
		dt_mesano_referencia,
		cd_material,
		qt_estoque,
		vl_estoque)
	values (	nextval('w_razao_estoque_seq'),
		clock_timestamp(),
		nm_usuario_p,
		0,
		cd_estabelecimento_p,
		dt_mesano_referencia_w,
		cd_material_w,
		qt_saldo_ant_w,
		vl_estoque_ant_w);

	open c02;
	loop
	fetch c02 into
		dt_processo_w,
		cd_local_estoque_w,
		cd_operacao_estoque_w,
		cd_material_w,
		qt_movimento_w,
		vl_movimento_w,
		ie_entrada_saida_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		if (coalesce(dt_fim_movto_w::text, '') = '') or (dt_processo_w <= dt_fim_movto_w) then
			begin
			if (dt_inicio_movto_p IS NOT NULL AND dt_inicio_movto_p::text <> '') and (dt_processo_w < dt_inicio_movto_p) then
				qt_estoque_w	:= qt_estoque_w + qt_movimento_w;
				vl_estoque_w	:= vl_estoque_w + vl_movimento_w;

				update	w_razao_estoque
				set	qt_estoque = qt_estoque_w,
					vl_estoque = vl_estoque_w
				where	ie_tipo_informacao = 0
				and	cd_material = cd_material_w
				and	nm_usuario = nm_usuario_p;
			else
				begin
				qt_estoque_w	:= qt_estoque_w + qt_movimento_w;
				vl_estoque_w	:= vl_estoque_w + vl_movimento_w;

				if (ie_entrada_saida_w = 'E') then
					ie_tipo_informacao_w := '2';
				else
					ie_tipo_informacao_w := '6';
				end if;

				insert into w_razao_estoque(
					nr_sequencia,
					ie_tipo_informacao,
					cd_estabelecimento,
					dt_mesano_referencia,
					dt_processo,
					cd_operacao_estoque,
					cd_material,
					qt_movimento,
					vl_movimento,
					qt_estoque,
					vl_estoque,
					dt_atualizacao,
					nm_usuario)
				values ( nextval('w_razao_estoque_seq'),
					ie_tipo_informacao_w,
					cd_estabelecimento_p,
					dt_mesano_referencia_w,
					dt_processo_w,
					cd_operacao_estoque_w,
					cd_material_w,
					qt_movimento_w,
					vl_movimento_w,
					qt_movimento_w,
					vl_movimento_w,
					clock_timestamp(),
					nm_usuario_p);
				end;
			end if;
			end;
		end if;
		end;
	end loop;
	close c02;

	select	coalesce(sum(qt_movimento),0),
		coalesce(sum(vl_movimento),0)
	into STRICT	qt_movimento_w,
		vl_movimento_w
	from	w_razao_estoque
	where	ie_tipo_informacao = 2
	and	cd_material = cd_material_w
	and	nm_usuario = nm_usuario_p;

	insert into w_razao_estoque(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		ie_tipo_informacao,
		cd_estabelecimento,
		dt_mesano_referencia,
		cd_material,
		qt_estoque,
		vl_estoque)
	values (	nextval('w_razao_estoque_seq'),
		clock_timestamp(),
		nm_usuario_p,
		4,
		cd_estabelecimento_p,
		dt_mesano_referencia_w,
		cd_material_w,
		qt_movimento_w,
		vl_movimento_w);

	select	coalesce(sum(qt_movimento),0),
		coalesce(sum(vl_movimento),0)
	into STRICT	qt_movimento_w,
		vl_movimento_w
	from	w_razao_estoque
	where	ie_tipo_informacao = 6
	and	cd_material = cd_material_w
	and	nm_usuario = nm_usuario_p;

	insert into w_razao_estoque(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		ie_tipo_informacao,
		cd_estabelecimento,
		dt_mesano_referencia,
		cd_material,
		qt_estoque,
		vl_estoque)
	values (	nextval('w_razao_estoque_seq'),
		clock_timestamp(),
		nm_usuario_p,
		8,
		cd_estabelecimento_p,
		dt_mesano_referencia_w,
		cd_material_w,
		qt_movimento_w,
		vl_movimento_w);

	if (coalesce(dt_fim_movto_w::text, '') = '') then
		begin
		if (ie_consignado_w = 'S') then
			select	coalesce(sum(qt_estoque),0),
				coalesce(sum(vl_estoque),0)
			into STRICT	qt_estoque_w,
				vl_estoque_w
			from	fornecedor_mat_consignado
			where	cd_local_estoque 		= coalesce(cd_local_estoque_p, cd_local_estoque)
			and	cd_material		= cd_material_w
			and	cd_estabelecimento		= cd_estabelecimento_p
			and	dt_mesano_referencia	= dt_mesano_referencia_w;
		else
			select	coalesce(sum(qt_estoque),0),
				coalesce(sum(vl_estoque),0)
			into STRICT	qt_estoque_w,
				vl_estoque_w
			from	saldo_estoque
			where	cd_local_estoque 		= coalesce(cd_local_estoque_p, cd_local_estoque)
			and	cd_material		= cd_material_w
			and	cd_estabelecimento		= cd_estabelecimento_p
			and	dt_mesano_referencia	= dt_mesano_referencia_w;
		end if;
		end;
	end if;

	insert into w_razao_estoque(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		ie_tipo_informacao,
		cd_estabelecimento,
		dt_mesano_referencia,
		cd_material,
		qt_estoque,
		vl_estoque)
	values (	nextval('w_razao_estoque_seq'),
		clock_timestamp(),
		nm_usuario_p,
		10,
		cd_estabelecimento_p,
		dt_mesano_referencia_w,
		cd_material_w,
		qt_estoque_w,
		vl_estoque_w);
	end;
end loop;
close c01;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_movto_estoque_dia ( dt_mesano_referencia_p timestamp, cd_estabelecimento_p bigint, dt_inicio_movto_p timestamp, dt_fim_movto_p timestamp, cd_local_estoque_p bigint, cd_material_p bigint, cd_grupo_material_p bigint, cd_subgrupo_material_p bigint, cd_classe_material_p bigint, ie_movimento_p text, ie_consignado_p text, nm_usuario_p text) FROM PUBLIC;

