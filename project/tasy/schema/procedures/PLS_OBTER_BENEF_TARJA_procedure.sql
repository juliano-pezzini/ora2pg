-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_benef_tarja ( cd_usuario_plano_p text, ie_restringe_estab_p text, nm_usuario_p text, cd_estabelecimento_p bigint, cd_pessoa_fisica_p INOUT text, nr_seq_segurado_p INOUT bigint) AS $body$
DECLARE


nr_seq_segurado_w		bigint;
nr_seq_seg_carteira_w		bigint;
ie_gera_usuario_even_repasse_w	varchar(1);


BEGIN

/*	primeiro deve buscar beneficiario de repasse em pre-pagamento, depois em custo*/

select	max(b.nr_sequencia)
into STRICT	nr_seq_segurado_w
from	pls_segurado		b,
	pls_segurado_carteira	a
where	a.nr_seq_segurado	= b.nr_sequencia
and	b.ie_situacao_atend	= 'A'
and	b.ie_tipo_segurado	<> 'R' --Buscar somente intercambio, RESPONSABILIDADE ASSUMIDA
and	b.ie_tipo_repasse	= 'P'
and	((a.cd_estabelecimento	= cd_estabelecimento_p) or (ie_restringe_estab_p = 'N'))
and	a.nr_cartao_intercambio	= cd_usuario_plano_p;

if (coalesce(nr_seq_segurado_w::text, '') = '') then
	select	max(b.nr_sequencia)
	into STRICT	nr_seq_segurado_w
	from	pls_segurado		b,
		pls_segurado_carteira	a
	where	a.nr_seq_segurado	= b.nr_sequencia
	and	b.ie_situacao_atend	= 'A'
	and	b.ie_tipo_segurado	<> 'R' --Buscar somente intercambio, RESPONSABILIDADE ASSUMIDA
	and	((a.cd_estabelecimento	= cd_estabelecimento_p) or (ie_restringe_estab_p = 'N'))
	and	a.nr_cartao_intercambio	= cd_usuario_plano_p;
end if;

/* Verificar se deve gerar usuario eventual para atender beneficiarios repassados a outras operadoras */

select	max(ie_gerar_usuario_even_repasse)
into STRICT	ie_gera_usuario_even_repasse_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;

if (coalesce(nr_seq_segurado_w::text, '') = '') and (ie_gera_usuario_even_repasse_w = 'S') then
	select	max(b.nr_sequencia)
	into STRICT	nr_seq_segurado_w
	from	pls_segurado b,
		pls_segurado_carteira a
	where	a.nr_seq_segurado	= b.nr_sequencia
	and	b.ie_tipo_segurado	= 'R' --Buscar somente intercambio, RESPONSABILIDADE TRANSFERIDA
	and	((a.cd_estabelecimento	= cd_estabelecimento_p) or (ie_restringe_estab_p = 'N'))
	and	a.nr_cartao_intercambio	= cd_usuario_plano_p;
	
	if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
		select	max(b.nr_sequencia)
		into STRICT	nr_seq_seg_carteira_w
		from	pls_segurado_carteira	b,
			pls_segurado		a
		where	b.nr_seq_segurado	= a.nr_sequencia
		and	a.nr_sequencia		= nr_seq_segurado_w;
		
		if (substr(pls_obter_regra_usuario_even(nr_seq_seg_carteira_w, cd_estabelecimento_p),1,10) = 'S') then
			nr_seq_segurado_w	:= null;
		end if;
	end if;
end if;

/* Buscar cartao obito */

if (coalesce(nr_seq_segurado_w::text, '') = '') then
	select	max(b.nr_sequencia)
	into STRICT	nr_seq_segurado_w
	from	pls_segurado_carteira a,
		pls_segurado b
	where	a.nr_seq_segurado	= b.nr_sequencia
	and	b.cd_cartao_intercambio	= cd_usuario_plano_p
	and	b.ie_situacao_atend	= 'A'
	and	((a.cd_estabelecimento	= cd_estabelecimento_p) or (ie_restringe_estab_p = 'N'));
end if;

/* BENEFICIARIO DA OPERADORA E USUARIO EVENTUAL (Caso nao tenha encontrado nenhum intercambio) */

if (coalesce(nr_seq_segurado_w::text, '') = '') then
	select	max(b.nr_sequencia)
	into STRICT	nr_seq_segurado_w
	from	pls_segurado		b,
		pls_segurado_carteira	a
	where	a.nr_seq_segurado	= b.nr_sequencia
	and	((a.cd_estabelecimento	= cd_estabelecimento_p) or (ie_restringe_estab_p = 'N'))
	and	b.ie_situacao_atend	= 'A'
	and	a.cd_usuario_plano	= cd_usuario_plano_p;
	
	if (coalesce(nr_seq_segurado_w::text, '') = '') then
		select	max(b.nr_sequencia)
		into STRICT	nr_seq_segurado_w
		from	pls_segurado		b,
			pls_segurado_carteira	a
		where	a.nr_seq_segurado	= b.nr_sequencia
		and	((a.cd_estabelecimento	= cd_estabelecimento_p) or (ie_restringe_estab_p = 'N'))
		and	a.cd_usuario_plano	= cd_usuario_plano_p;
	end if;
end if;

-- Buscar carteiras anteriores
if (coalesce(nr_seq_segurado_w::text, '') = '') then
	select	max(nr_seq_segurado)
	into STRICT	nr_seq_segurado_w
	from	pls_segurado_cart_ant
	where	cd_usuario_ant = cd_usuario_plano_p;
end if;

if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
	select	nr_sequencia,
		cd_pessoa_fisica
	into STRICT	nr_seq_segurado_p,
		cd_pessoa_fisica_p
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
else
	nr_seq_segurado_p	:= null;
	cd_pessoa_fisica_p	:= null;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_benef_tarja ( cd_usuario_plano_p text, ie_restringe_estab_p text, nm_usuario_p text, cd_estabelecimento_p bigint, cd_pessoa_fisica_p INOUT text, nr_seq_segurado_p INOUT bigint) FROM PUBLIC;

