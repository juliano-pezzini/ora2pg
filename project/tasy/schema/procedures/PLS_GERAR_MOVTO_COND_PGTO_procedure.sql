-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_movto_cond_pgto ( nr_seq_lote_evento_p bigint, nr_seq_regra_fixo_p bigint, nr_seq_prestador_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_vencimentos_w		varchar(4000);
ds_observacao_w			varchar(2000);
ds_erro_w			varchar(255)	:= null;
nm_prestador_w			varchar(80);
cd_conta_contabil_w		varchar(20);
cd_pf_titulo_pagar_w		pls_evento_regra_fixo.cd_pf_titulo_pagar%type;
cd_cgc_titulo_pagar_w		pls_evento_regra_fixo.cd_cgc_titulo_pagar%type;
ie_acao_venc_nao_util_w		varchar(1)	:= 'M';
ie_titulo_pagar_w		varchar(1)	:= 'N';
vl_prestador_w			double precision;
vl_vencimento_w			double precision;
vl_regra_w			double precision;
qt_vencimentos_w		bigint;
cd_condicao_pagamento_w		bigint;
nr_seq_vencimento_w		bigint;
nr_parcela_w			bigint;
nr_seq_prestador_w		bigint;
nr_seq_periodo_w		bigint;
cd_cond_pagamento_periodo_w	bigint;
nr_seq_evento_movto_w		bigint;
nr_seq_evento_w			bigint;
nr_seq_classe_tit_rec_w		bigint;
nr_seq_trans_fin_baixa_w	bigint;
nr_seq_trans_fin_contab_w	bigint;
qt_dia_venc_w			bigint;
tx_fracao_parcela_w		double precision;
tx_acrescimo_w			double precision;
qt_dia_vencimento_w		integer;
ie_forma_pagamento_w		integer;
dt_base_venc_w			timestamp;
dt_vencimento_w			timestamp;
dt_venc_fixo_w			timestamp;
dt_venc_lote_w			timestamp;
dt_competencia_w		timestamp;
dt_competencia_venc_w		timestamp;
dt_movimento_w			timestamp;
cd_centro_custo_w		centro_custo.cd_centro_custo%type;
ie_forma_incidencia_w		varchar(10);
ie_natureza_w			pls_evento.ie_natureza%type	:= 'P';

C01 CURSOR FOR
	SELECT	tx_fracao_parcela, /* A Prazo   */
		coalesce(tx_acrescimo,0),
		null,
		nr_parcela
	from	parcela
	where	cd_condicao_pagamento = cd_condicao_pagamento_w
	and 	ie_forma_pagamento_w	not in (1,10)
	and	coalesce(qt_dia_venc_w::text, '') = ''
	
union

	SELECT 	100, /* A Vista   */
		0,
		clock_timestamp(),
		1 nr_parcela
	
	where 	ie_forma_pagamento_w	= 1
	and	coalesce(qt_dia_venc_w::text, '') = ''
	
union

	select	100, /* Conforme Vencimentos */
		0,
		to_date((to_char(qt_dia_vencimento_w) || '/' || to_char(add_months(clock_timestamp(),1),'mm/yyyy')),'dd/mm/yyyy'),
		1 nr_parcela
	
	where	ie_forma_pagamento_w	= 10
	and	(qt_dia_vencimento_w IS NOT NULL AND qt_dia_vencimento_w::text <> '')
	and	coalesce(qt_dia_venc_w::text, '') = ''
	
union

	select	100, /* Conforme Vencimentos */
		0,
		clock_timestamp(),
		1 nr_parcela
	
	where	ie_forma_pagamento_w	= 10
	and	coalesce(qt_dia_vencimento_w::text, '') = ''
	and	coalesce(qt_dia_venc_w::text, '') = ''
	
union

	select	100,
		0,
		clock_timestamp(),
		1 nr_parcela
	
	where	(qt_dia_venc_w IS NOT NULL AND qt_dia_venc_w::text <> '')
	order by nr_parcela;


BEGIN
if (nr_seq_lote_evento_p IS NOT NULL AND nr_seq_lote_evento_p::text <> '') then
	select	trunc(dt_competencia, 'month')
	into STRICT	dt_competencia_w
	from	pls_lote_evento
	where	nr_sequencia	= nr_seq_lote_evento_p;

	select	a.vl_regra,
		a.cd_condicao_pagamento,
		a.ds_observacao,
		a.nr_seq_evento,
		a.nr_seq_periodo, -- Não deve ter periodo, a não ser que seja realizada uma solicitação
		a.nr_seq_classe_titulo,
		a.qt_dia_venc,
		a.dt_movimento,
		coalesce(a.ie_titulo_pagar, 'N'),
		a.cd_pf_titulo_pagar,
		a.cd_cgc_titulo_pagar,
		a.nr_seq_trans_fin_baixa,
		a.nr_seq_trans_fin_contab,
		a.cd_centro_custo,
		a.ie_forma_incidencia
	into STRICT	vl_regra_w,
		cd_condicao_pagamento_w,
		ds_observacao_w,
		nr_seq_evento_w,
		nr_seq_periodo_w,
		nr_seq_classe_tit_rec_w,
		qt_dia_venc_w,
		dt_movimento_w,
		ie_titulo_pagar_w,
		cd_pf_titulo_pagar_w,
		cd_cgc_titulo_pagar_w,
		nr_seq_trans_fin_baixa_w,
		nr_seq_trans_fin_contab_w,
		cd_centro_custo_w,
		ie_forma_incidencia_w
	from	pls_evento_regra_fixo	a
	where	a.nr_sequencia	= nr_seq_regra_fixo_p;

	select	to_char(dt_competencia_w,'dd')
	into STRICT	qt_dia_vencimento_w
	;

	if (to_char(add_months(dt_competencia_w,1),'mm') = '02') then /* Tratar fevereiro */
		if (qt_dia_vencimento_w >= 29) then
			select	to_number(to_char(last_day(to_date(('01/' || to_char(add_months(dt_competencia_w,1),'mm/yyyy')),'dd/mm/yyyy')),'dd'))
			into STRICT	qt_dia_vencimento_w
			;
		end if;
	end if;

	if (coalesce(cd_condicao_pagamento_w::text, '') = '') and (coalesce(qt_dia_venc_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(180490,'NR_SEQ_PRESTADOR=' || nr_seq_prestador_p || ';' || 'NM_PRESTADOR=' || nm_prestador_w);
	end if;

	select 	coalesce(max(ie_forma_pagamento),3),
		coalesce(max(ie_acao_nao_util),'M')
	into STRICT 	ie_forma_pagamento_w,
		ie_acao_venc_nao_util_w
	from 	condicao_pagamento
	where 	cd_condicao_pagamento	= cd_condicao_pagamento_w
	and 	ie_situacao           	= 'A';

	if (cd_condicao_pagamento_w IS NOT NULL AND cd_condicao_pagamento_w::text <> '') and (qt_dia_vencimento_w IS NOT NULL AND qt_dia_vencimento_w::text <> '') then
		SELECT * FROM Calcular_Vencimento(	cd_estabelecimento_p, cd_condicao_pagamento_w, dt_competencia_w, qt_vencimentos_w, ds_vencimentos_w) INTO STRICT qt_vencimentos_w, ds_vencimentos_w;
	end if;

	open C01;
	loop
	fetch C01 into
		tx_fracao_parcela_w,
		tx_acrescimo_w,
		dt_venc_fixo_w,
		nr_parcela_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (qt_dia_venc_w IS NOT NULL AND qt_dia_venc_w::text <> '') and (qt_dia_venc_w > 0) and (qt_dia_venc_w < 32) then
			begin
				dt_vencimento_w		:= to_date(qt_dia_venc_w || '/' || to_char(dt_competencia_w,'mm/yyyy'));
			exception
				when others then
				dt_vencimento_w := last_day(dt_competencia_w);
			end;
			dt_competencia_venc_w := trunc(clock_timestamp(),'dd');

			if (trunc(dt_vencimento_w,'dd') < dt_competencia_venc_w) then
				begin
				dt_vencimento_w	:= add_months(to_date(qt_dia_venc_w || '/' || to_char(dt_competencia_w,'mm/yyyy')),1);
				exception
				when others then
					dt_vencimento_w	:= add_months(last_day(dt_competencia_w),1);
				end;
			end if;
		else
			dt_vencimento_w		:= to_date(substr(ds_vencimentos_w,1,10),'dd/mm/yyyy');
			ds_vencimentos_w	:= substr(ds_vencimentos_w,12,length(ds_vencimentos_w));
		end if;

		if (coalesce(dt_vencimento_w::text, '') = '') then
			dt_vencimento_w	:= dt_venc_fixo_w;
		end if;

		if (coalesce(tx_fracao_parcela_w,0) > 0) then
			vl_vencimento_w	:= ((vl_regra_w * tx_fracao_parcela_w) / 100);
		end if;

		if (tx_acrescimo_w <> 0) then
			vl_vencimento_w	:= vl_vencimento_w + ((vl_vencimento_w * tx_acrescimo_w) / 100);
		end if;

		select	nextval('pls_evento_movimento_seq')
		into STRICT	nr_seq_evento_movto_w
		;

		-- wcbernardino - OS 767531 nesta OS estava afetando o Mensal....
		if (ie_forma_incidencia_w in ('S','M','A')) and (coalesce(dt_movimento_w::text, '') = '') then
			dt_movimento_w := trunc(dt_competencia_w,'dd');
		end if;

		select	coalesce(ie_natureza,'P')
		into STRICT	ie_natureza_w
		from	pls_evento
		where	nr_sequencia	= nr_seq_evento_w;

		-- SE O EVENTO É DE DESCONTO LEVARÁ UM VALOR NEGATIVO
		if (ie_natureza_w = 'D') then
			vl_vencimento_w	:= abs(vl_vencimento_w) * (-1);
		else	-- SE NÃO LEVARÁ UM VALOR POSITIVO
			vl_vencimento_w	:= abs(vl_vencimento_w);
		end if;

		insert into pls_evento_movimento(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_movimento,
			nr_seq_evento,
			nr_seq_lote,
			nr_seq_prestador,
			vl_movimento,
			nr_seq_regra_fixo,
			ds_observacao,
			dt_venc_titulo,
			nr_seq_periodo,
			nr_seq_classe_tit_rec,
			ie_titulo_pagar,
			cd_pf_titulo_pagar,
			cd_cgc_titulo_pagar,
			nr_seq_trans_fin_baixa,
			nr_seq_trans_fin_contab,
			cd_centro_custo)
		values (nr_seq_evento_movto_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			dt_competencia_w,
			nr_seq_evento_w,
			nr_seq_lote_evento_p,
			nr_seq_prestador_p,
			vl_vencimento_w,
			nr_seq_regra_fixo_p,
			ds_observacao_w,
			dt_vencimento_w,
			nr_seq_periodo_w,
			nr_seq_classe_tit_rec_w,
			ie_titulo_pagar_w,
			cd_pf_titulo_pagar_w,
			cd_cgc_titulo_pagar_w,
			nr_seq_trans_fin_baixa_w,
			nr_seq_trans_fin_contab_w,
			cd_centro_custo_w);

		cd_conta_contabil_w := pls_obter_conta_contab_eve_fin(nr_seq_evento_movto_w, cd_conta_contabil_w);

		update	pls_evento_movimento
		set	cd_conta_contabil	= cd_conta_contabil_w
		where	nr_sequencia		= nr_seq_evento_movto_w;
		end;
	end loop;
	close C01;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_movto_cond_pgto ( nr_seq_lote_evento_p bigint, nr_seq_regra_fixo_p bigint, nr_seq_prestador_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

