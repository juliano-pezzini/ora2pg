-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_aux_a_faturar ( nm_usuario_p usuario.nm_usuario%type, cd_empresa_p empresa.cd_empresa%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, dt_inicial_p ctb_livro_auxiliar.dt_inicial%type, dt_final_p ctb_livro_auxiliar.dt_final%type, dt_liberacao_p ctb_livro_auxiliar.dt_liberacao%type, ie_gerar_arquivo_p ctb_livro_auxiliar.ie_tipo_livro_ecd%type, nr_seq_regra_p ctb_livro_auxiliar.nr_sequencia%type) AS $body$
DECLARE

					
nr_contador_w					bigint := 0;
ie_tipo_documento_w				varchar(2);
ds_erro_w					varchar(255);
ds_local_w					varchar(255);
arq_texto_w					utl_file.file_type;
nm_arquivo_w					varchar(255);
ds_observacao_w					varchar(255);
ds_observacao_item_w				varchar(255);
dt_final_w					timestamp;
ie_data_rec_faturamento_w			pls_parametro_contabil.ie_data_rec_faturamento%type;
ie_tipo_segurado_w				pls_segurado.ie_tipo_segurado%type;
ie_tipo_compartilhamento_w			pls_segurado_repasse.ie_tipo_compartilhamento%type;
ie_tipo_repasse_w				pls_segurado_repasse.ie_tipo_repasse%type;
dt_repasse_w					pls_segurado_repasse.dt_repasse%type;
dt_fim_repasse_w				pls_segurado_repasse.dt_fim_repasse%type;
dt_ref_repasse_w				pls_conta_proc.dt_procedimento%type;
ie_data_tipo_segurado_w				pls_parametros.ie_data_tipo_segurado%type;
ds_nome_livro_w					varchar(255);
ds_periodo_w					varchar(255);

c_linha CURSOR FOR
	SELECT	a.nr_documento													|| ';' ||
		a.ds_tipo_documento												|| ';' ||
		a.dt_vencimento													|| ';' ||
		a.dt_cancelamento												|| ';' ||
		a.dt_recebimento												|| ';' ||
		a.cd_beneficiario												|| ';' ||
		substr(obter_valor_dominio(6,pls_obter_se_benef_remido(a.nr_seq_segurado,a.dt_contabilizacao)),1,255)		|| ';' ||
		a.nm_usuario_evento												|| ';' ||
		a.ds_tipo_segurado												|| ';' ||
		a.nm_usuario_princ												|| ';' ||
		a.nm_prestador													|| ';' ||
		a.nr_cpf_cnpj													|| ';' ||
		a.ds_modalidade_contrat												|| ';' ||
		a.ds_tipo_regulamentacao											|| ';' ||
		a.ds_tipo_contratacao												|| ';' ||
		substr(pls_obter_se_corresp_assumida(a.ie_tipo_segurado,a.dt_contratacao),1,255)				|| ';' ||
		substr(pls_obter_se_corresp_assumida(a.ie_tipo_segurado,replace(a.nr_protocolo_ans,chr(039),'')),1,255)		|| ';' ||
		a.dt_inicio_cobertura												|| ';' ||
		a.dt_fim_cobertura												|| ';' ||
		a.ds_ato_cooperado												|| ';' ||
		substr(pls_obter_se_corresp_assumida(a.ie_tipo_segurado,a.nr_contrato),1,255)					|| ';' ||
		substr(pls_obter_se_corresp_assumida(a.ie_tipo_segurado,a.dt_contrato),1,255)					|| ';' ||
		a.vl_pagar													|| ';' ||
		a.cd_conta_contabil												|| ';' ||
		a.cd_conta_contrapartida											|| ';' ||
		a.dt_contabilizacao 												|| ';' ||
		substr(obter_valor_dominio(3384, a.ie_tipo_repasse), 1,255)							|| ';' ||
		substr(obter_valor_dominio(8980, a.ie_tipo_compartilhamento), 1,255)						|| ';' ||
		a.dt_inicio_compartilhamento											|| ';' ||
		a.dt_fim_compartilhamento											|| ';' ||
		a.ds_observacao 				ds_linha
	from	w_ctb_livro_aux_event_liq a
	where	nr_seq_reg_auxiliar = nr_seq_regra_p
	order by (nr_documento)::numeric;

						
c_conta CURSOR FOR						
	SELECT	v.cd_beneficiario,
		v.nm_beneficiario,
		v.ie_preco,
		v.ie_regulamentacao,
		v.ds_tipo_contratacao,
		v.ds_segmentacao,
		v.ie_ato_cooperado,
		v.vl_provisao,
		v.cd_conta_deb_provisao,
		v.cd_conta_cred_provisao,
		v.dt_mes_competencia,
		v.nr_seq_conta nr_documento,
		v.nr_contrato,
		v.nm_prestador,
		v.nr_cpf_cnpj,
		v.ie_tipo_contratacao ie_tipo_contratacao,
		v.nr_seq_segurado,
		v.nr_seq_prestador,
		v.nm_pagador,
		v.nr_seq_pagador,
		v.ie_tipo_segurado,
		v.nr_protocolo_ans,
		v.dt_contrato,
		v.dt_contratacao,
		v.dt_inicio_cobertura,
		v.dt_fim_cobertura,
		null dt_vencimento,
		null dt_recebimento,
		null dt_cancelamento,
		CASE WHEN ie_data_tipo_segurado_w='A' THEN  v.dt_atendimento_referencia  ELSE v.dt_mes_competencia END  dt_ref_repasse,
		v.nr_seq_congenere
	from	pls_conta_pos_dados_contab_v 	v
	where	v.ie_tipo_movto	in ('VLB','X')
	and	v.dt_mes_competencia <= dt_final_w
	and	coalesce(v.nr_seq_lote_fat,0) = 0
	and	coalesce(v.vl_provisao,0) <> 0
	and	((coalesce(ie_tipo_segurado_w,'X') = coalesce(v.ie_tipo_segurado,'X'))
	or (coalesce(ie_tipo_segurado_w,'X') = 'X'))	
	
union all

	SELECT	substr(pls_obter_dados_segurado(s.nr_sequencia,'CR'),1,30) cd_beneficiario,
		substr(obter_nome_pf(s.cd_pessoa_fisica),1,100) nm_beneficiario,
		n.ie_preco,
		n.ie_regulamentacao,
		substr(obter_valor_dominio(1666, n.ie_tipo_contratacao),1,255) ds_tipo_contratacao,
		substr(obter_valor_dominio(1665, n.ie_segmentacao),1,255) ds_segmentacao,
		(	select	b.ie_ato_cooperado
			from	pls_conta_proc b
			where	b.nr_seq_conta_proc = b.nr_sequencia
			and	b.nr_seq_conta = a.nr_sequencia
			
union all

			select	b.ie_ato_cooperado
			from	pls_conta_mat b
			where	b.nr_seq_conta_mat = b.nr_sequencia
			and	b.nr_seq_conta = a.nr_sequencia) ie_ato_cooperado,
		c.vl_provisao vl_provisao,
		c.cd_conta_deb_provisao cd_conta_deb_provisao,
		c.cd_conta_cred_provisao cd_conta_cred_provisao,
		p.dt_mes_competencia dt_mes_competencia,
		a.nr_sequencia nr_documento,
		r.nr_contrato,
		substr(CASE WHEN p.ie_tipo_protocolo='I' THEN pls_obter_nome_congenere(p.nr_seq_congenere)  ELSE pls_obter_dados_prestador(coalesce(a.nr_seq_prestador,a.nr_seq_prestador_exec),'N') END ,1,255) nm_prestador,
		substr(CASE WHEN p.ie_tipo_protocolo='I' THEN pls_obter_cnpj_congenere(p.nr_seq_congenere)  ELSE coalesce(pls_obter_dados_prestador(coalesce(a.nr_seq_prestador,a.nr_seq_prestador_exec),'CGC'),		pls_obter_dados_prestador(coalesce(a.nr_seq_prestador,a.nr_seq_prestador_exec),'CPF')) END ,1,14) nr_cpf_cnpj,
		n.ie_tipo_contratacao ie_tipo_contratacao,
		s.nr_sequencia nr_seq_segurado,
		coalesce(a.nr_seq_prestador,a.nr_seq_prestador_exec) nr_seq_prestador,
		substr(pls_obter_dados_pagador(s.nr_seq_pagador,'N'),1,255) nm_pagador,
		s.nr_seq_pagador,
		a.ie_tipo_segurado,
		CASE WHEN n.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(n.nr_protocolo_ans, n.cd_scpa) END  nr_protocolo_ans,
		r.dt_contrato,
		s.dt_contratacao,
		s.dt_rescisao dt_inicio_cobertura,
		(s.dt_rescisao + 30) dt_fim_cobertura,
		null dt_vencimento,
		null dt_recebimento,
		null dt_cancelamento,
		null dt_ref_repasse,
		p.nr_seq_congenere
	from	pls_conta 			a,
		pls_conta_coparticipacao	b,
		pls_conta_copartic_contab	c,
		pls_plano			d,
		pls_protocolo_conta 		p,
		pls_segurado			s,
		pls_plano			n,
		pls_contrato			r
	where	a.nr_sequencia			= b.nr_seq_conta
	and	b.nr_sequencia			= c.nr_seq_conta_copartic
	and	a.nr_sequencia			= b.nr_seq_conta
	and	p.nr_sequencia			= a.nr_seq_protocolo
	and	d.nr_sequencia			= a.nr_seq_plano
	and	s.nr_sequencia		 	= a.nr_seq_segurado
	and	n.nr_sequencia		 	= a.nr_seq_plano
	and	r.nr_sequencia			= s.nr_seq_contrato
	and	p.ie_tipo_protocolo		in ('C','I')
	and	b.ie_status_coparticipacao	in ('D','S')
	and 	b.ie_status_mensalidade		<> 'C'
	and	coalesce(b.nr_seq_mensalidade_seg::text, '') = ''
	and	((coalesce(ie_tipo_segurado_w,'X') 	= coalesce(a.ie_tipo_segurado,'X'))
	or (coalesce(ie_tipo_segurado_w,'X') 	= 'X'))	
	and	1 = 2
	and	a.ie_status			= 'F'
	and	c.dt_mes_competencia <= dt_final_w
	and	p.dt_mes_competencia <= dt_final_w
	and	coalesce(c.vl_coparticipacao,0)		> 0
	order by nr_documento;

vet_conta c_conta%rowtype;

BEGIN

CALL wheb_usuario_pck.set_ie_executar_trigger('N');

ie_tipo_documento_w	:= 'CM';

dt_final_w := fim_mes(dt_final_p);

select	max(ie_tipo_segurado)
into STRICT	ie_tipo_segurado_w
from	ctb_livro_auxiliar
where	nr_sequencia = nr_seq_regra_p;

select	coalesce(max(ie_data_rec_faturamento),'MC')
into STRICT	ie_data_rec_faturamento_w
from	pls_parametro_contabil
where	cd_estabelecimento	= cd_estabelecimento_p;

select	coalesce(max(a.ie_data_tipo_segurado),'A')
into STRICT	ie_data_tipo_segurado_w
from	pls_parametros a
where	a.cd_estabelecimento = cd_estabelecimento_p;

select	substr(obter_desc_expressao(922923),1,255)
into STRICT	ds_observacao_w
;

if (ie_gerar_arquivo_p = 'N') then
	delete
	from	w_ctb_livro_aux_event_liq a
	where	nr_seq_reg_auxiliar = nr_seq_regra_p;

	commit;

	open c_conta;
	loop
	fetch c_conta into	
		vet_conta;
	EXIT WHEN NOT FOUND; /* apply on c_conta */
		begin
		nr_contador_w		:= nr_contador_w + 1;
	
		SELECT * FROM pls_obter_dados_repasse(	vet_conta.dt_ref_repasse, vet_conta.nr_seq_segurado, vet_conta.nr_seq_congenere, ie_tipo_repasse_w, ie_tipo_compartilhamento_w, dt_repasse_w, dt_fim_repasse_w) INTO STRICT ie_tipo_repasse_w, ie_tipo_compartilhamento_w, dt_repasse_w, dt_fim_repasse_w;

		ds_observacao_item_w	:= null;
		
		if (vet_conta.ie_tipo_segurado in ('C','I','T')) then
			ds_observacao_item_w	:= ds_observacao_w;
		end if;
		
		insert into w_ctb_livro_aux_event_liq(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_segurado,
			nr_seq_prestador,
			cd_beneficiario,
			nm_usuario_evento,
			ie_preco,
			ds_modalidade_contrat,
			ie_regulamentacao,
			ds_tipo_regulamentacao,
			ds_tipo_contratacao,
			ds_segmentacao,
			ie_ato_cooperado,
			ds_ato_cooperado,
			vl_pagar,
			cd_conta_contrapartida,
			cd_conta_contabil,
			dt_contabilizacao,
			ie_tipo_livro,
			nr_documento,
			nm_prestador,
			nr_cpf_cnpj,
			nr_contrato,
			nr_seq_reg_auxiliar,
			nr_linha,
			ie_tipo_contratacao,
			ie_tipo_documento,
			ds_tipo_documento,
			nr_seq_pagador,
			nm_usuario_princ,
			ie_tipo_segurado,
			ds_tipo_segurado,
			nr_protocolo_ans,
			dt_contrato,
			dt_contratacao,
			dt_inicio_cobertura,
			dt_fim_cobertura,
			ie_tipo_repasse,
			ie_tipo_compartilhamento,
			dt_inicio_compartilhamento,
			dt_fim_compartilhamento,
			dt_referencia,
			ds_observacao)
		values (	nextval('w_ctb_livro_aux_event_liq_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,		
			vet_conta.nr_seq_segurado,
			vet_conta.nr_seq_prestador,
			vet_conta.cd_beneficiario,
			vet_conta.nm_beneficiario,
			vet_conta.ie_preco,
			obter_valor_dominio(1669, vet_conta.ie_preco),
			vet_conta.ie_regulamentacao,
			substr(obter_valor_dominio(2157, vet_conta.ie_regulamentacao),1,255),
			vet_conta.ds_tipo_contratacao,
			vet_conta.ds_segmentacao,
			vet_conta.ie_ato_cooperado,
			substr(obter_valor_dominio(3418,vet_conta.ie_ato_cooperado),1,255),
			vet_conta.vl_provisao,
			vet_conta.cd_conta_cred_provisao,
			vet_conta.cd_conta_deb_provisao,
			vet_conta.dt_mes_competencia,
			6,
			vet_conta.nr_documento,
			vet_conta.nm_prestador,
			vet_conta.nr_cpf_cnpj,
			vet_conta.nr_contrato,
			nr_seq_regra_p,
			nr_contador_w,
			vet_conta.ie_tipo_contratacao,
			ie_tipo_documento_w,
			obter_valor_dominio(8372, ie_tipo_documento_w),
			vet_conta.nr_seq_pagador,
			vet_conta.nm_pagador,
			vet_conta.ie_tipo_segurado,			
			substr(obter_valor_dominio(2406, vet_conta.ie_tipo_segurado),1,255),
			vet_conta.nr_protocolo_ans,
			vet_conta.dt_contrato,
			vet_conta.dt_contratacao,
			vet_conta.dt_inicio_cobertura,
			vet_conta.dt_fim_cobertura,
			ie_tipo_repasse_w,
			ie_tipo_compartilhamento_w,
			dt_repasse_w,
			dt_fim_repasse_w,
			dt_final_w,
			ds_observacao_item_w);
			
		if (mod(nr_contador_w, 1000) = 0) then
			commit;
		end if;
		
		end;
	end loop;
	close c_conta;

	update	ctb_livro_auxiliar
	set	qt_registros	= nr_contador_w
	where	nr_sequencia	= nr_seq_regra_p;

	commit;
	
end if;

if (ie_gerar_arquivo_p = 'S') then
	begin
	nm_arquivo_w	:= 'RegAuxValoresFaturar' || to_char(clock_timestamp(),'ddmmyyyyhh24miss') || nm_usuario_p || '.csv';
	ds_nome_livro_w	:= 'Registro Auxiliar de Valores a Faturar';
	ds_periodo_w	:= wheb_mensagem_pck.get_texto(1108452,'DT_FINAL=' || dt_final_w || ';' || 'DT_LIBERACAO=' || dt_liberacao_p);
	
	SELECT * FROM obter_evento_utl_file(1, null, ds_local_w, ds_erro_w) INTO STRICT ds_local_w, ds_erro_w;

	arq_texto_w := utl_file.fopen(ds_local_w,nm_arquivo_w,'W', 32000);

	utl_file.put_line(arq_texto_w, ds_nome_livro_w);
	utl_file.put_line(arq_texto_w, ds_periodo_w);
	utl_file.put_line(arq_texto_w, obter_desc_expressao(1028880));
	utl_file.fflush(arq_texto_w);
	for vetl in c_linha loop
		begin
		utl_file.put_line(arq_texto_w,vetl.ds_linha);
		utl_file.fflush(arq_texto_w);
		end;
	end loop;
	end;
end if;		

commit;

CALL wheb_usuario_pck.set_ie_executar_trigger('S');				
						
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_aux_a_faturar ( nm_usuario_p usuario.nm_usuario%type, cd_empresa_p empresa.cd_empresa%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, dt_inicial_p ctb_livro_auxiliar.dt_inicial%type, dt_final_p ctb_livro_auxiliar.dt_final%type, dt_liberacao_p ctb_livro_auxiliar.dt_liberacao%type, ie_gerar_arquivo_p ctb_livro_auxiliar.ie_tipo_livro_ecd%type, nr_seq_regra_p ctb_livro_auxiliar.nr_sequencia%type) FROM PUBLIC;

