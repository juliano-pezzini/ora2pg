-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_consistir_idade_imc (nr_seq_ageint_p bigint, cd_estabelecimento_p bigint, nr_seq_item_grupo_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


qt_idade_w		smallint;
qt_idade_min_w		smallint;
qt_idade_min_meses_w	smallint;
qt_idade_max_meses_w	smallint;
qt_idade_max_w		smallint;
qt_peso_regra_w		real;

qt_imc_w			double precision;
qt_imc_max_w		real;	

cd_area_proced_w	Estrutura_Procedimento_V. cd_area_procedimento %type;
cd_espec_proced_w	Estrutura_Procedimento_V. cd_especialidade %type;
cd_grupo_proced_w	Estrutura_Procedimento_V. cd_grupo_proc %type;
	
	
nr_seq_regra_idade_w	bigint;


cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_proc_interno_w	bigint;
cd_pessoa_fisica_w	varchar(10);
dt_nascimento_w		timestamp;
qt_peso_w		real;
qt_altura_cm_w		real;
ie_retorna_meses_w	varchar(1);
qt_idade_mes_w		integer;
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_plano_w		varchar(10);

C02 CURSOR FOR
	SELECT	a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_proc_interno,
		b.cd_pessoa_fisica,
		b.dt_nascimento,
		b.qt_peso,
		b.qt_altura_cm,
		b.cd_convenio,
		b.cd_categoria,
		b.cd_plano
	FROM agenda_integrada b
LEFT OUTER JOIN agenda_integrada_item a ON (b.nr_sequencia = a.nr_seq_agenda_int)
WHERE b.nr_sequencia 		= nr_seq_ageint_p order by 1;


C01 CURSOR FOR
	SELECT	a.nr_sequencia
	from	ageint_regra_idade_peso a,
		ageint_idade_peso_proc b
	where	b.nr_seq_regra_idade_peso = a.nr_sequencia
	and	((b.cd_area_procedimento = cd_area_proced_w) or (coalesce(cd_area_procedimento::text, '') = ''))
	and	((b.cd_especialidade = cd_espec_proced_w) or (coalesce(cd_especialidade::text, '') = ''))
	and	((b.cd_grupo_proc = cd_grupo_proced_w) or (coalesce(cd_grupo_proc::text, '') = ''))
	and	((b.cd_procedimento = cd_procedimento_w) or (coalesce(cd_procedimento::text, '') = ''))
	and	((coalesce(b.cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_w) or (coalesce(ie_origem_proced::text, '') = '')))
	and	((b.nr_seq_proc_interno = nr_seq_proc_interno_w) or (coalesce(nr_seq_proc_interno::text, '') = ''))
	and	((a.cd_estabelecimento = cd_estabelecimento_p) or (coalesce(a.cd_estabelecimento::text, '') = ''))
	and	coalesce(a.ie_situacao,'A')	= 'A'
	order by coalesce(b.cd_procedimento,0),
		coalesce(b.nr_seq_proc_interno,0),
		coalesce(b.cd_grupo_proc,0),
		coalesce(b.cd_especialidade,0),
		coalesce(b.cd_area_procedimento,0);
	
	

BEGIN

open C02;
loop
fetch C02 into	
	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_proc_interno_w,
	cd_pessoa_fisica_w,
	dt_nascimento_w,
	qt_peso_w,
	qt_altura_cm_w,
	cd_convenio_w,
	cd_categoria_w,
	cd_plano_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	
	if (coalesce(dt_nascimento_w::text, '') = '') then
		select	max(dt_nascimento)
		into STRICT	dt_nascimento_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
	end if;
	
	if (dt_nascimento_w IS NOT NULL AND dt_nascimento_w::text <> '') then
		qt_idade_w	:= obter_idade(dt_nascimento_w, clock_timestamp(), 'A');
	end if;
	
	/*CONSISTIR A REGRA DE IDADE E IMC AO AGENDAR UTILIZANDO GRUPOS, ATRAVeS DO F2 NOS ITENS DA AGENDA INTEGRADA*/

	if (coalesce(nr_seq_item_grupo_p,0) > 0) then	
		begin
		select	max(x.nr_seq_proc_interno)
		into STRICT	nr_seq_proc_interno_w
		from 	agenda_int_grupo_item x,
			agenda_int_grupo y
		where 	x.nr_seq_grupo = y.nr_sequencia
		and 	x.nr_Sequencia = nr_seq_item_grupo_p;
		
		if (coalesce(nr_seq_proc_interno_w,0) > 0) then
		
			SELECT * FROM obter_proc_tab_interno_conv(
						nr_seq_proc_interno_w, cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;		
			
		end if;		
		
		select	coalesce(max(cd_area_procedimento),0),
			coalesce(max(cd_especialidade),0),
			coalesce(max(cd_grupo_proc),0)
		into STRICT	cd_area_proced_w,
			cd_espec_proced_w,
			cd_grupo_proced_w
		from	estrutura_procedimento_v
		where	cd_procedimento = cd_procedimento_w
		and	ie_origem_proced = ie_origem_proced_w;
		
		exception
		when others then
			ds_erro_p := null;		
		end;
	else
		begin
		select	coalesce(max(cd_area_procedimento),0),
			coalesce(max(cd_especialidade),0),
			coalesce(max(cd_grupo_proc),0)
		into STRICT	cd_area_proced_w,
			cd_espec_proced_w,
			cd_grupo_proced_w
		from	estrutura_procedimento_v
		where	cd_procedimento = cd_procedimento_w
		and	ie_origem_proced = ie_origem_proced_w;
		end;		
	end if;
	
	open C01;
	loop
	fetch C01 into	
		nr_seq_regra_idade_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	nr_seq_regra_idade_w	:= nr_seq_regra_idade_w;
	
	end;
	end loop;
	close C01;
	
	if (coalesce(nr_seq_regra_idade_w,0) > 0) and (coalesce(ds_erro_p::text, '') = '') then

		select	coalesce(max(qt_idade_min),0),
			coalesce(max(qt_idade_min_meses),0),
			coalesce(max(qt_idade_max_meses),0),
			coalesce(max(qt_idade_max),999),
			coalesce(max(qt_imc),0),
			coalesce(max(qt_peso),0)
		into STRICT	qt_idade_min_w,
			qt_idade_min_meses_w,
			qt_idade_max_meses_w,
			qt_idade_max_w,
			qt_imc_max_w,
			qt_peso_regra_w
		from	ageint_regra_idade_peso
		where	nr_sequencia = nr_seq_regra_idade_w;
		
		if (qt_idade_min_w = 0) and
		   ((qt_idade_min_meses_w <> 0) or (qt_idade_max_meses_w <> 0)) then		
			ie_retorna_meses_w := 'S';
		else    ie_retorna_meses_w := 'N';
		end if;
				
		if (qt_imc_max_w	> 0) then
			if (position(',' in qt_altura_cm_w) > 0) then
				qt_imc_w	:= trunc(obter_imc(qt_peso_w, qt_altura_cm_w * 100),3);
			else
				qt_imc_w	:= trunc(obter_imc(qt_peso_w, qt_altura_cm_w),3);
			end if;
			
			if (qt_imc_w	> qt_imc_max_w) then
				ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(281355,'QT_IMC='|| qt_imc_w||';QT_IMC_MAX='|| qt_imc_max_w);
			end if;
		end if;
		
		if (qt_peso_regra_w > 0) and (qt_peso_w IS NOT NULL AND qt_peso_w::text <> '') and (coalesce(ds_erro_p::text, '') = '')then
			
			if (qt_peso_w > qt_peso_regra_w)then
				ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(281356,'QT_PESO='|| qt_peso_w||';QT_PESO_REGRA='|| qt_peso_regra_w);
			end if;		
		end if;

		if (dt_nascimento_w IS NOT NULL AND dt_nascimento_w::text <> '') and (coalesce(ds_erro_p::text, '') = '')then
		
			qt_idade_w	:= obter_idade(dt_nascimento_w, clock_timestamp(), 'A');
			
		      
			if (ie_retorna_meses_w = 'N') then
				if (qt_idade_w	< qt_idade_min_w) then
					ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(281357,'QT_IDADE='|| qt_idade_w||';QT_IDADE_MIN='|| qt_idade_min_w);
				end if;
			elsif (ie_retorna_meses_w = 'S') then
				qt_idade_mes_w	:= obter_idade(dt_nascimento_w, clock_timestamp(), 'M');
				if (qt_idade_mes_w	< qt_idade_min_meses_w) then
					ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(281359,'QT_IDADE_MES='|| qt_idade_mes_w||';QT_IDADE_MIN_MESES='|| qt_idade_min_meses_w);
				elsif (qt_idade_mes_w	> qt_idade_max_meses_w) then
						ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(281360,'QT_IDADE_MES='|| qt_idade_mes_w||';QT_IDADE_MAX_MESES='|| qt_idade_max_meses_w);
				end if;
			end if;
			
			if (qt_idade_w	> qt_idade_max_w) then
				ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(281361,'QT_IDADE='|| qt_idade_w||';QT_IDADE_MAX='|| qt_idade_max_w);
			end if;
		end if;	
		
	end if;	
	end;
end loop;
close C02;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_consistir_idade_imc (nr_seq_ageint_p bigint, cd_estabelecimento_p bigint, nr_seq_item_grupo_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

