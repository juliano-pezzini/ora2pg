-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_valor_depositar ( nr_seq_deposito_p bigint, dt_validade_p timestamp) AS $body$
DECLARE


vl_depositar_w		double precision;
vl_total_w		double precision;
nr_titulo_w		bigint;
/* Projeto Multimoeda - Variáveis */

vl_depositar_estrang_w	double precision;
vl_complemento_w	double precision;
vl_cotacao_w		cotacao_moeda.vl_cotacao%type;
cd_moeda_dep_w		integer;
cd_moeda_empresa_w	integer;
cd_estabelecimento_w	integer;
vl_total_estrang_w	double precision;

C01 CURSOR FOR
	SELECT	nr_titulo
	from	deposito_ident_titulo
	where	nr_seq_deposito = nr_seq_deposito_p;


BEGIN

/* Projeto Multimoeda - Busca os dados do depósito.*/

select	max(vl_cotacao),
	max(cd_moeda),
	max(cd_estabelecimento)
into STRICT	vl_cotacao_w,
	cd_moeda_dep_w,
	cd_estabelecimento_w
from	deposito_identificado
where	nr_sequencia = nr_seq_deposito_p;
/* Projeto Multimoeda - Busca a moeda padrão da empresa.*/

select	obter_moeda_padrao_empresa(coalesce(cd_estabelecimento_w,obter_estabelecimento_ativo),'E')
into STRICT	cd_moeda_empresa_w
;

open C01;
loop
fetch C01 into
	nr_titulo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	a.vl_saldo_titulo +
		coalesce(obter_juros_multa_titulo(a.nr_titulo,dt_validade_p,'R','J'),0) +
		coalesce(obter_juros_multa_titulo(a.nr_titulo,dt_validade_p,'R','M'),0)
	into STRICT	vl_depositar_w
	from	titulo_receber a
	where	a.nr_titulo	= nr_titulo_w;

	/* Projeto Multimoeda - Verifica se o depósito é moeda estrangeira, caso positivo atualiza os valores em moeda estrangeira.*/

	if (coalesce(cd_moeda_dep_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w and coalesce(vl_cotacao_w,0) <> 0) then
		vl_depositar_estrang_w := vl_depositar_w / vl_cotacao_w;
		vl_complemento_w := vl_depositar_w - vl_depositar_estrang_w;
	else
		vl_depositar_estrang_w := null;
		vl_complemento_w := null;
		vl_cotacao_w := null;
		cd_moeda_dep_w := null;
	end if;

	update	deposito_ident_titulo
	set	vl_depositar		= vl_depositar_w,
		vl_depositar_estrang	= vl_depositar_estrang_w,
		vl_complemento		= vl_complemento_w,
		vl_cotacao		= vl_cotacao_w,
		cd_moeda		= cd_moeda_dep_w
	where	nr_seq_deposito		= nr_seq_deposito_p
	and	nr_titulo		= nr_titulo_w;

	vl_total_w := coalesce(vl_total_w,0) + coalesce(vl_depositar_w,0);
	end;
end loop;
close C01;

if (vl_total_w IS NOT NULL AND vl_total_w::text <> '') then
	/* Projeto Multimoeda - Verifica se o depósito é moeda estrangeira, caso positivo atualiza os valores em moeda estrangeira.*/

	if (coalesce(cd_moeda_dep_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w and coalesce(vl_cotacao_w,0) <> 0) then
		vl_total_estrang_w := vl_total_w / vl_cotacao_w;
		vl_complemento_w := vl_total_w - vl_total_estrang_w;
	else
		vl_total_estrang_w := null;
		vl_complemento_w := null;
	end if;

	update	deposito_identificado
	set	vl_deposito	= vl_total_w,
		vl_deposito_estrang = vl_total_estrang_w,
		vl_complemento = vl_complemento_w
	where	nr_sequencia	= nr_seq_deposito_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_valor_depositar ( nr_seq_deposito_p bigint, dt_validade_p timestamp) FROM PUBLIC;

