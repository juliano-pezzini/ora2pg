-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_cobranca_previa_serv ( nr_seq_orcamento_p bigint, nr_seq_pagador_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_segurado_w		bigint;
nr_seq_requisicao_w		bigint;
nr_seq_cobranca_w		bigint;
nr_seq_req_proc_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
vl_procedimento_w		double precision;
nr_seq_req_mat_w		bigint;
nr_seq_material_w		bigint;
vl_material_w			double precision;
nr_seq_pagador_w		bigint;
qt_solicitado_w			double precision;

C01 CURSOR FOR
	SELECT	nr_seq_req_proc,
		cd_procedimento,
		ie_origem_proced,
		vl_procedimento,
		qt_procedimento
	from	pls_orcamento_proc
	where	nr_seq_orcamento	= nr_seq_orcamento_p;

C02 CURSOR FOR
	SELECT	nr_seq_req_mat,
		nr_seq_material,
		vl_material,
		qt_material
	from	pls_orcamento_mat
	where	nr_seq_orcamento	= nr_seq_orcamento_p;


BEGIN

begin
	select	nr_seq_segurado,
		nr_seq_requisicao
	into STRICT	nr_seq_segurado_w,
		nr_seq_requisicao_w
	from	pls_orcamento
	where	nr_sequencia	= nr_seq_orcamento_p;
exception
when others then
	nr_seq_segurado_w	:= null;
	nr_seq_requisicao_w	:= null;
end;

select	nextval('pls_cobranca_previa_serv_seq')
into STRICT	nr_seq_cobranca_w
;

if (nr_seq_pagador_p	= 0) then
	nr_seq_pagador_w	:= null;
elsif (nr_seq_pagador_p	<> 0) then
	nr_seq_pagador_w	:= nr_seq_pagador_p;
end if;

insert	into pls_cobranca_previa_serv(nr_sequencia, dt_atualizacao, nm_usuario,
	 nr_seq_guia, nr_seq_orcamento, nr_seq_pagador,
	 nr_seq_requisicao, nr_seq_segurado, ie_situacao,
	 dt_atualizacao_nrec, nm_usuario_nrec)
values (nr_seq_cobranca_w, clock_timestamp(), nm_usuario_p,
	 null, nr_seq_orcamento_p, nr_seq_pagador_w,
	 nr_seq_requisicao_w, nr_seq_segurado_w, 'U',
	 clock_timestamp(), nm_usuario_p);

open C01;
loop
fetch C01 into
	nr_seq_req_proc_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	vl_procedimento_w,
	qt_solicitado_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	insert	into pls_cobranca_previa_proc(nr_sequencia, dt_atualizacao, nm_usuario,
		 nr_seq_cob_previa, nr_seq_req_proc, nr_seq_guia_proc,
		 cd_procedimento, ie_origem_proced, vl_procedimento,
		 cd_conta_cred, cd_conta_deb, dt_atualizacao_nrec,
		 nm_usuario_nrec, qt_procedimento)
	values (nextval('pls_cobranca_previa_proc_seq'), clock_timestamp(), nm_usuario_p,
		 nr_seq_cobranca_w, nr_seq_req_proc_w, null,
		 cd_procedimento_w, ie_origem_proced_w, vl_procedimento_w,
		 '','', clock_timestamp(),
		 nm_usuario_p, qt_solicitado_w);
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	nr_seq_req_mat_w,
	nr_seq_material_w,
	vl_material_w,
	qt_solicitado_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	insert	into pls_cobranca_previa_mat(nr_sequencia, dt_atualizacao, nm_usuario,
		 nr_seq_cob_previa, nr_seq_req_mat, nr_seq_guia_mat,
		 nr_seq_material, vl_material, cd_material,
		 cd_conta_cred, cd_conta_deb, dt_atualizacao_nrec,
		 nm_usuario_nrec, qt_material)
	values (nextval('pls_cobranca_previa_mat_seq'), clock_timestamp(), nm_usuario_p,
		 nr_seq_cobranca_w, nr_seq_req_mat_w, null,
		 nr_seq_material_w, vl_material_w, null,
		 '','', clock_timestamp(),
		 nm_usuario_p, qt_solicitado_w);
	end;
end loop;
close C02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_cobranca_previa_serv ( nr_seq_orcamento_p bigint, nr_seq_pagador_p bigint, nm_usuario_p text) FROM PUBLIC;

