-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function cancelar_atend_rn as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE cancelar_atend_rn ( nr_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL cancelar_atend_rn_atx ( ' || quote_nullable(nr_atendimento_p) || ',' || quote_nullable(nm_usuario_p) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE cancelar_atend_rn_atx ( nr_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

				
				
cd_estabelecimento_w	bigint;
ie_canc_atend_rn_w	varchar(10);
ie_gerar_alta_w varchar(255);
ds_erro_alta_w varchar(255);
BEGIN
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '')then

	select	max(cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_p;

     ie_gerar_alta_w := obter_param_usuario(916, 664, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_alta_w);

	
	select	max(ie_canc_atend_rn)
	into STRICT	ie_canc_atend_rn_w
	from	parametro_medico
	where	cd_estabelecimento	= cd_estabelecimento_w;


	if (IE_CANC_ATEND_RN_w	= 'S') then
		update	nascimento
		set		nr_atend_rn 			 = NULL
		where	nr_atend_rn				= nr_atendimento_p;

		update 	escala_capurro
		set 	nr_atend_rn 			 = NULL, 
				ie_situacao 			= 'I', 
				nr_seq_nascimento 		 = NULL, 
				dt_inativacao 			= clock_timestamp(), 
				nm_usuario_inativacao 	= nm_usuario_p 
		where 	nr_atend_rn 			= nr_atendimento_p 
		and 	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
		delete from escala_capurro where nr_atend_rn = nr_atendimento_p and coalesce(dt_liberacao::text, '') = '';

		update 	escala_capurro_neuro
		set 	nr_atend_rn 			 = NULL, 
				ie_situacao 			= 'I', 
				nr_seq_nascimento 		 = NULL, 
				dt_inativacao 			= clock_timestamp(), 
				nm_usuario_inativacao 	= nm_usuario_p 
		where 	nr_atend_rn 			= nr_atendimento_p 
		and 	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
		delete from escala_capurro_neuro where nr_atend_rn = nr_atendimento_p and coalesce(dt_liberacao::text, '') = '';

		update 	escala_silverman 
		set 	nr_atend_rn 			 = NULL, 
				ie_situacao 			= 'I', 
				nr_seq_nascimento 		 = NULL, 
				dt_inativacao 			= clock_timestamp(), 
				nm_usuario_inativacao 	= nm_usuario_p 
		where 	nr_atend_rn 			= nr_atendimento_p 
		and 	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
		delete from escala_silverman where nr_atend_rn = nr_atendimento_p and coalesce(dt_liberacao::text, '') = '';

		update	escala_apgar 
		set 	nr_atend_rn 			 = NULL,
				nr_seq_nascimento 		 = NULL, 
				ie_situacao 			= 'I', 
				dt_inativacao 			= clock_timestamp(), 
				nm_usuario_inativacao 	= nm_usuario_p 
		where 	nr_atend_rn 			= nr_atendimento_p 
		and 	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
		delete from escala_apgar where nr_atend_rn = nr_atendimento_p and coalesce(dt_liberacao::text, '') = '';

		commit;
		
		CALL Cancelar_Atendimento_Paciente(nr_atendimento_p,
							nm_usuario_p,
							null,
							Obter_Dados_Usuario_Opcao(nm_usuario_p,'C'),
							'Exclusão do registro no Berçário');
                    
          if (coalesce(ie_gerar_alta_w,0) > 0) then
               ds_erro_alta_w := GERAR_ESTORNAR_ALTA(nr_atendimento_p, 'A', 0, ie_gerar_alta_w, clock_timestamp(), nm_usuario_p, ds_erro_alta_w, 0, null, obter_desc_expressao(330616));
          end if;
						
	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cancelar_atend_rn ( nr_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE cancelar_atend_rn_atx ( nr_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

