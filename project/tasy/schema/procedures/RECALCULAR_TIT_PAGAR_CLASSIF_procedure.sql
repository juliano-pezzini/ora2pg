-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE recalcular_tit_pagar_classif ( nr_titulo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


vl_titulo_w				titulo_pagar.vl_titulo%type;
cd_conta_contabil_w		titulo_pagar_classif.cd_conta_contabil%type;
vl_movimento_w			titulo_pagar_classif.vl_titulo%type;
ie_origem_titulo_w		titulo_pagar.ie_origem_titulo%type;
vl_movimento_total_w		titulo_pagar_classif.vl_titulo%type;
vl_imposto_w			titulo_pagar_imposto.vl_imposto%type;
nr_seq_pagamento_item_w		pls_evento_movimento.nr_seq_pagamento_item%type;
nr_seq_pag_item_w		pls_conta_medica_resumo.nr_seq_pag_item%type;
vl_total_imposto_w		titulo_pagar_imposto.vl_imposto%type;
nr_seq_classif_w		titulo_pagar_classif.nr_sequencia%type;
cd_centro_custo_w		titulo_pagar_classif.cd_centro_custo%type;
nr_seq_conta_financ_w		titulo_pagar_classif.nr_seq_conta_financ%type;
nr_seq_conta_financ_evento_w		titulo_pagar_classif.nr_seq_conta_financ%type;
nr_seq_trans_fin_w		titulo_pagar_classif.nr_seq_trans_fin%type;
nr_contrato_w			titulo_pagar_classif.nr_sequencia%type;
vl_acrescimo_w			titulo_pagar_classif.vl_acrescimo%type;
vl_desconto_w			titulo_pagar_classif.vl_desconto%type;
nr_sequencia_w			titulo_pagar_classif.nr_sequencia%type;
vl_movimento_prod_w		double precision;
qt_prest_pgto_w			bigint;
dt_lote_w			timestamp;

nr_seq_pls_pag_prest_w		titulo_pagar.nr_seq_pls_pag_prest%type;
nr_seq_lote_pgto_w		pls_lote_pagamento.nr_sequencia%type;
nr_seq_pp_lote_w		pls_pp_lote.nr_sequencia%type;
nr_seq_prestador_pgto_w		pls_prestador.nr_sequencia%type;
nr_seq_pp_ev_valor_w		pls_pp_prest_evento_valor.nr_sequencia%type;

c_eventos_financ CURSOR FOR
	SELECT	e.cd_conta_credito,
		e.nr_seq_pagamento_item,
		coalesce(abs(sum(e.vl_movimento)),0) * CASE WHEN coalesce(f.ie_natureza, 'P')='D' THEN -1  ELSE 1 END
	from	pls_evento			f,
		pls_evento_movimento	e,
		titulo_pagar			d,
		pls_pag_prest_vencimento	c,
		pls_pagamento_item		b,
		pls_pagamento_prestador	a
	where	a.nr_sequencia			= b.nr_seq_pagamento
	and	a.nr_sequencia			= c.nr_seq_pag_prestador
	and	d.nr_titulo			= c.nr_titulo
	and	d.nr_titulo			= nr_titulo_p
	and	b.nr_sequencia			= e.nr_seq_pagamento_item
	and	f.nr_sequencia			= e.nr_seq_evento
	group by e.cd_conta_credito,
		e.nr_seq_pagamento_item,
		f.ie_natureza
	
union all

	SELECT	i.cd_conta_credito,
		null,
		coalesce(sum(i.vl_liquido),0)
	from	pls_pp_lote		l,
		pls_pp_prestador	p,
		pls_pp_item_lote	i,
		pls_evento		e
	where	l.nr_sequencia		= p.nr_seq_lote
	and	l.nr_sequencia		= i.nr_seq_lote
	and	p.nr_seq_prestador	= i.nr_seq_prestador
	and	e.nr_sequencia		= i.nr_seq_evento
	and	i.ie_tipo_item		not in ('1','8')
	and	p.nr_titulo_pagar	= nr_titulo_p
	group by i.cd_conta_credito;
		
c_itens_producao CURSOR FOR
	SELECT	cd_conta_contabil,
		nr_seq_pag_item,
		sum(vl_liberado),
		nr_seq_pp_ev_valor
	from	(
		-- Pegar informacao do material pela CONTA_MEDICA_RESUMO restringindo pelo pagamento ANTIGO
		SELECT	coalesce(k.cd_conta_cred,k.cd_conta_prov_cred) cd_conta_contabil,
			k.nr_seq_pag_item,
			null nr_seq_pp_ev_valor,
			coalesce(sum(k.vl_liberado),0) vl_liberado
		from	pls_conta_medica_resumo	k,
			pls_conta_mat		w
		where	w.nr_sequencia		= k.nr_seq_conta_mat
		and	k.ie_situacao		= 'A'
		and	qt_prest_pgto_w 	> 0
		and	k.nr_seq_lote_pgto	= nr_seq_lote_pgto_w
		and	k.nr_seq_prestador_pgto	= nr_seq_prestador_pgto_w
		group by
			coalesce(k.cd_conta_cred,k.cd_conta_prov_cred),
			k.nr_seq_pag_item
		
union all

		-- Pegar informacao do material pela CONTA_MEDICA_RESUMO restringindo pelo pagamento NOVO
		select	coalesce(k.cd_conta_cred,k.cd_conta_prov_cred) cd_conta_contabil,
			null nr_seq_pag_item,
			(select	max(v.nr_sequencia)
			from	pls_pp_prest_evento_valor	v
			where	v.nr_seq_evento		= k.nr_seq_pp_evento
			and	v.nr_seq_prestador	= k.nr_seq_prestador_pgto
			and	v.nr_seq_lote		= k.nr_seq_pp_lote) nr_seq_pp_ev_valor,
			coalesce(sum(k.vl_liberado),0) vl_liberado
		from	pls_conta_medica_resumo	k,
			pls_conta_mat		w
		where	w.nr_sequencia		= k.nr_seq_conta_mat
		and	k.ie_situacao		= 'A'
		and	qt_prest_pgto_w 	> 0
		and	k.nr_seq_pp_lote	= nr_seq_pp_lote_w
		and	k.nr_seq_prestador_pgto	= nr_seq_prestador_pgto_w
		group by
			coalesce(k.cd_conta_cred,k.cd_conta_prov_cred),
			k.nr_seq_pag_item,
			k.nr_seq_pp_evento,
			k.nr_seq_prestador_pgto,
			k.nr_seq_pp_lote
		
union all

		-- Pegar informacao do procedimento pela CONTA_MEDICA_RESUMO restringindo pelo pagamento ANTIGO
		select	coalesce(k.cd_conta_cred,k.cd_conta_prov_cred),
			k.nr_seq_pag_item,
			null nr_seq_pp_ev_valor,
			coalesce(sum(k.vl_liberado),0) vl_liberado
		from	pls_conta_medica_resumo	k,
			pls_conta_proc		w
		where	w.nr_sequencia		= k.nr_seq_conta_proc
		and	k.ie_situacao		= 'A'
		and	qt_prest_pgto_w 	> 0
		and	k.nr_seq_lote_pgto	= nr_seq_lote_pgto_w
		and	k.nr_seq_prestador_pgto	= nr_seq_prestador_pgto_w
		group by
			coalesce(k.cd_conta_cred,k.cd_conta_prov_cred),
			k.nr_seq_pag_item
		
union all

		-- Pegar informacao do procedimento pela CONTA_MEDICA_RESUMO restringindo pelo pagamento NOVO
		select	coalesce(k.cd_conta_cred,k.cd_conta_prov_cred),
			null nr_seq_pag_item,
			(select	max(v.nr_sequencia)
			from	pls_pp_prest_evento_valor	v
			where	v.nr_seq_evento		= k.nr_seq_pp_evento
			and	v.nr_seq_prestador	= k.nr_seq_prestador_pgto
			and	v.nr_seq_lote		= k.nr_seq_pp_lote) nr_seq_pp_ev_valor,	
			coalesce(sum(k.vl_liberado),0) vl_liberado
		from	pls_conta_medica_resumo	k,
			pls_conta_proc		w
		where	w.nr_sequencia		= k.nr_seq_conta_proc
		and	k.ie_situacao		= 'A'
		and	qt_prest_pgto_w 	> 0
		and	k.nr_seq_pp_lote	= nr_seq_pp_lote_w
		and	k.nr_seq_prestador_pgto	= nr_seq_prestador_pgto_w
		group by
			coalesce(k.cd_conta_cred,k.cd_conta_prov_cred),
			k.nr_seq_pag_item,
			k.nr_seq_pp_evento,
			k.nr_seq_prestador_pgto,
			k.nr_seq_pp_lote
		/* Normal */

		
union all

		-- Pegar informacao do material pela MATERIAL restringindo pelo pagamento ANTIGO
		select	w.cd_conta_cred,
			null nr_seq_pag_item,
			null nr_seq_pp_ev_valor,
			coalesce(sum(w.vl_liberado),0) vl_liberado
		from	pls_conta_medica_resumo	k,
			pls_conta_mat		w
		where	w.nr_sequencia		= k.nr_seq_conta_mat
		and	k.ie_situacao		= 'A'
		and	qt_prest_pgto_w 	= 0
		and	k.nr_seq_lote_pgto	= nr_seq_lote_pgto_w
		and	k.nr_seq_prestador_pgto	= nr_seq_prestador_pgto_w
		group by
			w.cd_conta_cred,
			null
		
union all

		-- Pegar informacao do material pela MATERIAL restringindo pelo pagamento NOVO
		select	w.cd_conta_cred,
			null nr_seq_pag_item,
			null nr_seq_pp_ev_valor,
			coalesce(sum(w.vl_liberado),0) vl_liberado
		from	pls_conta_medica_resumo	k,
			pls_conta_mat		w
		where	w.nr_sequencia		= k.nr_seq_conta_mat
		and	k.ie_situacao		= 'A'
		and	qt_prest_pgto_w 	= 0
		and	k.nr_seq_pp_lote	= nr_seq_pp_lote_w
		and	k.nr_seq_prestador_pgto	= nr_seq_prestador_pgto_w
		group by
			w.cd_conta_cred,
			null
		
union all

		-- Pegar informacao do procedimento pelo PROCEDIMENTO restringindo pelo pagamento ANTIGO
		select	w.cd_conta_cred,
			null nr_seq_pag_item,
			null nr_seq_pp_ev_valor,
			coalesce(sum(w.vl_liberado),0) vl_liberado
		from	pls_conta_medica_resumo	k,
			pls_conta_proc		w
		where	w.nr_sequencia		= k.nr_seq_conta_proc
		and	k.ie_situacao		= 'A'
		and	qt_prest_pgto_w		= 0
		and	k.nr_seq_lote_pgto	= nr_seq_lote_pgto_w
		and	k.nr_seq_prestador_pgto	= nr_seq_prestador_pgto_w
		group by
			w.cd_conta_cred,
			null
		
union all

		-- Pegar informacao do procedimento pelo PROCEDIMENTO restringindo pelo pagamento NOVO
		select	w.cd_conta_cred,
			null nr_seq_pag_item,
			null nr_seq_pp_ev_valor,
			coalesce(sum(w.vl_liberado),0) vl_liberado
		from	pls_conta_medica_resumo	k,
			pls_conta_proc		w
		where	w.nr_sequencia		= k.nr_seq_conta_proc
		and	k.ie_situacao		= 'A'
		and	qt_prest_pgto_w 	= 0
		and	k.nr_seq_pp_lote	= nr_seq_pp_lote_w
		and	k.nr_seq_prestador_pgto	= nr_seq_prestador_pgto_w
		group by
			w.cd_conta_cred,
			null) alias29
	group by cd_conta_contabil,
		nr_seq_pag_item,
		nr_seq_pp_ev_valor;
		
c_itens_recurso CURSOR FOR
	SELECT	coalesce(r.cd_conta_cred_pag,r.cd_conta_deb),
		sum(r.vl_liberado)
	from	titulo_pagar 			t,
		pls_pag_prest_vencimento	v,
		pls_pagamento_prestador 	p,
		pls_lote_pagamento 		l,
		pls_conta_rec_resumo_item 	r,
		pls_pagamento_item		i
	where	t.nr_titulo 		= v.nr_titulo
	and	v.nr_seq_pag_prestador 	= p.nr_sequencia
	and	p.nr_seq_lote 		= l.nr_sequencia
	and	l.nr_sequencia 		= r.nr_seq_lote_pgto
	and	r.nr_seq_pag_item 	= i.nr_sequencia
	and	p.nr_sequencia		= i.nr_seq_pagamento
	and	t.nr_titulo 		= nr_titulo_p
	group by coalesce(r.cd_conta_cred_pag,r.cd_conta_deb)
	
union all

	SELECT	coalesce(r.cd_conta_cred_pag,r.cd_conta_deb),
		sum(r.vl_liberado)
	from	pls_pp_lote			l,
		pls_pp_prestador		p,
		pls_pp_prest_evento_valor	v,
		pls_conta_rec_resumo_item 	r
	where	l.nr_sequencia		= r.nr_seq_pp_lote
	and	p.nr_seq_prestador	= r.nr_seq_prestador_pgto
	and	l.nr_sequencia		= p.nr_seq_lote
	and	l.nr_sequencia		= v.nr_seq_lote
	and	v.nr_seq_evento		= r.nr_seq_pp_evento
	and	v.nr_seq_prestador	= p.nr_seq_prestador
	and	p.nr_titulo_pagar	= nr_titulo_p
	group by coalesce(r.cd_conta_cred_pag,r.cd_conta_deb);
		
c_itens_intercambio CURSOR FOR		
	SELECT	w.cd_conta_cred,
		coalesce(sum(w.vl_liberado),0) vl_liberado
	from	pls_conta_mat	w,
		pls_conta	a,
		ptu_fatura	b,
		titulo_pagar	t
	where	a.nr_sequencia	= w.nr_seq_conta
	and	b.nr_sequencia	= a.nr_seq_fatura
	and	t.nr_titulo	= b.nr_titulo
	and	t.nr_titulo	= nr_titulo_p
	group by
		w.cd_conta_cred
	
union all

	SELECT	w.cd_conta_cred,
		coalesce(sum(w.vl_liberado),0) vl_liberado
	from	pls_conta_mat	w,
		pls_conta	a,
		ptu_fatura	b,
		titulo_pagar	t
	where	a.nr_sequencia	= w.nr_seq_conta
	and	b.nr_sequencia	= a.nr_seq_fatura
	and	t.nr_titulo	= b.nr_titulo_ndc
	and	t.nr_titulo	= nr_titulo_p
	group by
		w.cd_conta_cred
	
union all

	select	w.cd_conta_cred,
		coalesce(sum(w.vl_liberado),0) vl_liberado
	from	pls_conta_proc	w,
		pls_conta	a,
		ptu_fatura	b,
		titulo_pagar	t
	where	a.nr_sequencia	= w.nr_seq_conta
	and	b.nr_sequencia	= a.nr_seq_fatura
	and	t.nr_titulo	= b.nr_titulo
	and	t.nr_titulo	= nr_titulo_p
	group by
		w.cd_conta_cred
	
union all

	select	w.cd_conta_cred,
		coalesce(sum(w.vl_liberado),0) vl_liberado
	from	pls_conta_proc	w,
		pls_conta	a,
		ptu_fatura	b,
		titulo_pagar	t
	where	a.nr_sequencia	= w.nr_seq_conta
	and	b.nr_sequencia	= a.nr_seq_fatura
	and	t.nr_titulo	= b.nr_titulo_ndc
	and	t.nr_titulo	= nr_titulo_p
	group by
		w.cd_conta_cred;
		
c_itens_reembolso CURSOR FOR
	SELECT	a.cd_conta_cred,
		coalesce(sum(a.vl_liberado),0) vl_liberado
	from	pls_conta_proc		a,
		pls_conta		b,
		pls_protocolo_conta	c,
		titulo_pagar		t
	where	c.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= a.nr_seq_conta
	and	c.nr_sequencia		= t.nr_seq_reembolso
	and	c.ie_tipo_protocolo	= 'R'
	and	t.nr_titulo	= nr_titulo_p
	group by
		a.cd_conta_cred
	
union all

	SELECT	a.cd_conta_cred,
		coalesce(sum(a.vl_liberado),0) vl_liberado
	from	pls_conta_mat		a,
		pls_conta		b,
		pls_protocolo_conta	c,
		titulo_pagar		t
	where	c.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= a.nr_seq_conta
	and	c.nr_sequencia		= t.nr_seq_reembolso
	and	c.ie_tipo_protocolo	= 'R'
	and	t.nr_titulo	= nr_titulo_p
	group by
		a.cd_conta_cred;
		
c_itens_coparticipacao CURSOR FOR
	SELECT	coalesce(l.cd_conta_deb, l.cd_conta_deb_provisao) cd_conta_contabil,
		coalesce(sum(l.vl_coparticipacao),0) vl_movimento
	from	pls_conta_coparticipacao	k,
		pls_conta_copartic_contab	l,
		pls_conta_proc			a,
		pls_conta			b,
		pls_protocolo_conta		c,
		titulo_pagar			t
	where	c.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= a.nr_seq_conta
	and	c.nr_sequencia		= t.nr_seq_reembolso
	and	a.nr_sequencia		= k.nr_seq_conta_proc
	and	k.nr_sequencia		= l.nr_seq_conta_copartic
	and	c.ie_tipo_protocolo	= 'R'
	and	t.nr_titulo		= nr_titulo_p
	group by
		coalesce(l.cd_conta_deb, l.cd_conta_deb_provisao)
	
union all

	SELECT	coalesce(l.cd_conta_deb, l.cd_conta_deb_provisao) cd_conta_contabil,
		coalesce(sum(l.vl_coparticipacao),0) vl_movimento
	from	pls_conta_coparticipacao	k,
		pls_conta_copartic_contab	l,
		pls_conta_mat			a,
		pls_conta			b,
		pls_protocolo_conta		c,
		titulo_pagar			t
	where	c.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= a.nr_seq_conta
	and	c.nr_sequencia		= t.nr_seq_reembolso
	and	a.nr_sequencia		= k.nr_seq_conta_mat
	and	k.nr_sequencia		= l.nr_seq_conta_copartic
	and	c.ie_tipo_protocolo	= 'R'
	and	t.nr_titulo		= nr_titulo_p
	group by
		coalesce(l.cd_conta_deb, l.cd_conta_deb_provisao);

c_desdobramento CURSOR FOR
	SELECT	f.cd_conta_contabil,
		sum(f.vl_titulo) vl_movimento
	from	titulo_pagar		t,
		titulo_pagar_classif	f
	where	t.nr_titulo		= f.nr_titulo
	and	t.nr_titulo		= nr_titulo_p
	and	(t.nr_titulo_original IS NOT NULL AND t.nr_titulo_original::text <> '')
	and	t.nr_total_parcelas 	> 1
	and	t.ie_origem_titulo	= '20'
	group by f.cd_conta_contabil;


BEGIN
select	a.vl_titulo,
	a.ie_origem_titulo,
	a.nr_seq_pls_pag_prest
into STRICT	vl_titulo_w,
	ie_origem_titulo_w,
	nr_seq_pls_pag_prest_w
from	titulo_pagar	a
where	a.nr_titulo	= nr_titulo_p;

if (nr_seq_pls_pag_prest_w IS NOT NULL AND nr_seq_pls_pag_prest_w::text <> '') and (ie_origem_titulo_w = '20') then -- Pagamento antigo
	select	max(p.nr_seq_lote),
		max(p.nr_seq_prestador)
	into STRICT	nr_seq_lote_pgto_w,
		nr_seq_prestador_pgto_w
	from	pls_pagamento_prestador p
	where	p.nr_sequencia	= nr_seq_pls_pag_prest_w;
	
elsif (coalesce(nr_seq_pls_pag_prest_w::text, '') = '') and (ie_origem_titulo_w = '25') then -- Pagamento novo
	select	max(p.nr_seq_lote),
		max(p.nr_seq_prestador)
	into STRICT	nr_seq_pp_lote_w,
		nr_seq_prestador_pgto_w
	from	pls_pp_prestador p
	where	p.nr_titulo_pagar = nr_titulo_p;
end if;

select	coalesce(sum(a.vl_imposto),0)
into STRICT	vl_total_imposto_w
from	titulo_pagar_imposto a
where	a.nr_titulo = nr_titulo_p;

select 	max(nr_sequencia),
		max(cd_centro_custo),
		max(nr_seq_conta_financ),
		max(nr_seq_trans_fin),
		max(nr_contrato),
		0 vl_acrescimo,
		0 vl_desconto
into STRICT	nr_seq_classif_w,
		cd_centro_custo_w,
		nr_seq_conta_financ_w,
		nr_seq_trans_fin_w,
		nr_contrato_w,
		vl_acrescimo_w,
		vl_desconto_w
from	titulo_pagar_classif
where	nr_titulo = nr_titulo_p;

if (ie_origem_titulo_w in (20, 16, 6)) then
	delete from titulo_pagar_classif
	where nr_titulo	= nr_titulo_p;
end if;

if (ie_origem_titulo_w = '20') then
	open c_eventos_financ;
	loop
	fetch c_eventos_financ into	
		cd_conta_contabil_w,
		nr_seq_pagamento_item_w,
		vl_movimento_w;
	EXIT WHEN NOT FOUND; /* apply on c_eventos_financ */
		begin
			select  sum(b.vl_evento)
			into STRICT	vl_imposto_w	
			from    pls_pagamento_item a,
				pls_pag_item_trib b,
				pls_pag_prest_venc_trib c
			where   a.nr_sequencia = b.nr_seq_pagamento
			and     c.nr_sequencia = b.nr_seq_venc_trib
			and	a.nr_sequencia = nr_seq_pagamento_item_w;
		
		begin
			select max(z.CD_CONTA_FINANC)
			into STRICT nr_seq_conta_financ_evento_w
			from pls_pagamento_item a,
				PLS_CONTA_FINANC_REGRA z,
				PLS_PAGAMENTO_PRESTADOR p,
				PLS_PRESTADOR b
			where a.NR_SEQ_EVENTO = z.NR_SEQ_EVENTO
			and p.nr_sequencia			= a.nr_seq_pagamento
			and p.NR_SEQ_PRESTADOR = b.nr_sequencia
			and z.NR_SEQ_TIPO_PRESTADOR   = b.NR_SEQ_TIPO_PRESTADOR
			and a.nr_sequencia = nr_seq_pagamento_item_w;
			exception when unique_violation then
				nr_seq_conta_financ_evento_w := nr_seq_conta_financ_w;
		end;
		
			vl_movimento_w	:= dividir_sem_round((vl_movimento_w - coalesce(vl_imposto_w,0)) * vl_titulo_w, vl_titulo_w - vl_total_imposto_w);
			
			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_sequencia_w
			from	titulo_pagar_classif
			where	nr_titulo = nr_titulo_p;
			
			insert into titulo_pagar_classif(cd_centro_custo,
				cd_conta_contabil,
				dt_atualizacao,
				nm_usuario,
				nr_contrato,
				nr_seq_conta_financ,
				nr_seq_trans_fin,
				nr_sequencia,
				nr_titulo,
				vl_acrescimo,
				vl_desconto,
				vl_original,
				vl_titulo)
			values (cd_centro_custo_w,
				cd_conta_contabil_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_contrato_w,
				coalesce(nr_seq_conta_financ_evento_w,nr_seq_conta_financ_w),
				nr_seq_trans_fin_w,
				nr_sequencia_w,
				nr_titulo_p,
				vl_acrescimo_w,
				vl_desconto_w,
				0,
				coalesce(vl_movimento_w,0));			
		
			vl_movimento_total_w	:= vl_movimento_total_w + vl_movimento_w;
		end;
	end loop;
	close c_eventos_financ;
	
	select	pkg_date_utils.start_of(max(s.dt_mes_competencia), 'MONTH', 0)
	into STRICT	dt_lote_w
	from	pls_lote_pagamento	s,
		titulo_pagar		a,
		pls_pagamento_prestador	b
	where	s.nr_sequencia	= b.nr_seq_lote
	and	a.nr_titulo	= nr_titulo_p
	and	b.nr_sequencia	= a.nr_seq_pls_pag_prest;
	
	select	sum(CASE WHEN ie_prestador_codificacao='P' THEN  1  ELSE 0 END ) qt_prest_pgto
	into STRICT	qt_prest_pgto_w
	from	pls_esquema_contabil
	where	ie_tipo_regra		= 'PM'
	and	dt_lote_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia, dt_lote_w);

	open c_itens_producao;
	loop
	fetch c_itens_producao into	
		cd_conta_contabil_w,
		nr_seq_pag_item_w,
		vl_movimento_w,
		nr_seq_pp_ev_valor_w;
	EXIT WHEN NOT FOUND; /* apply on c_itens_producao */
		begin
			if (coalesce(nr_seq_pag_item_w,0) <> 0) then
				select  sum(b.vl_evento)
				into STRICT	vl_imposto_w	
				from    pls_pagamento_item a,
					pls_pag_item_trib b,
					pls_pag_prest_venc_trib c
				where   a.nr_sequencia = b.nr_seq_pagamento
				and     c.nr_sequencia = b.nr_seq_venc_trib
				and	a.nr_sequencia = nr_seq_pag_item_w;
				
				begin
				select max(z.CD_CONTA_FINANC)
				into STRICT nr_seq_conta_financ_evento_w
				from pls_pagamento_item a,
					PLS_CONTA_FINANC_REGRA z,
					PLS_PAGAMENTO_PRESTADOR p,
					PLS_PRESTADOR b
				where a.NR_SEQ_EVENTO = z.NR_SEQ_EVENTO
				and p.nr_sequencia			= a.nr_seq_pagamento
				and p.NR_SEQ_PRESTADOR = b.nr_sequencia
				and z.NR_SEQ_TIPO_PRESTADOR   = b.NR_SEQ_TIPO_PRESTADOR
				and a.nr_sequencia = nr_seq_pag_item_w;
				exception when unique_violation then
					nr_seq_conta_financ_evento_w := nr_seq_conta_financ_w;
				end;
		
			elsif (coalesce(nr_seq_pp_ev_valor_w,0) <> 0) then
				select	sum(a.vl_tributo)
				into STRICT	vl_imposto_w
				from	pls_pp_prest_evento_valor	a
				where	a.nr_sequencia	= nr_seq_pp_ev_valor_w;
			end if;
					
			vl_movimento_w	:= dividir_sem_round((vl_movimento_w - coalesce(vl_imposto_w,0)) * vl_titulo_w, vl_titulo_w - vl_total_imposto_w);
			
			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_sequencia_w
			from	titulo_pagar_classif
			where	nr_titulo = nr_titulo_p;
			
			insert into titulo_pagar_classif(cd_centro_custo,
				cd_conta_contabil,
				dt_atualizacao,
				nm_usuario,
				nr_contrato,
				nr_seq_conta_financ,
				nr_seq_trans_fin,
				nr_sequencia,
				nr_titulo,
				vl_acrescimo,
				vl_desconto,
				vl_original,
				vl_titulo)
			values (cd_centro_custo_w,
				cd_conta_contabil_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_contrato_w,
				coalesce(nr_seq_conta_financ_evento_w,nr_seq_conta_financ_w),
				nr_seq_trans_fin_w,
				nr_sequencia_w,
				nr_titulo_p,
				vl_acrescimo_w,
				vl_desconto_w,
				0,
				coalesce(vl_movimento_w,0));	
		
			vl_movimento_total_w	:= vl_movimento_total_w + vl_movimento_w;				
		end;
	end loop;
	close c_itens_producao;
	
	open c_itens_recurso;
	loop
	fetch c_itens_recurso into	
		cd_conta_contabil_w,
		vl_movimento_w;
	EXIT WHEN NOT FOUND; /* apply on c_itens_recurso */
		begin
		select  sum(c.vl_imposto)
		into STRICT	vl_imposto_w	
		from    pls_pagamento_item a,
			pls_pag_item_trib b,
			pls_pag_prest_venc_trib c
		where   a.nr_sequencia = b.nr_seq_pagamento
		and     c.nr_sequencia = b.nr_seq_venc_trib
		and	a.nr_sequencia = nr_seq_pag_item_w;
		
		begin
		select max(z.CD_CONTA_FINANC)
		into STRICT nr_seq_conta_financ_evento_w
        from pls_pagamento_item a,
             PLS_CONTA_FINANC_REGRA z,
             PLS_PAGAMENTO_PRESTADOR p,
             PLS_PRESTADOR b
        where a.NR_SEQ_EVENTO = z.NR_SEQ_EVENTO
        and p.nr_sequencia			= a.nr_seq_pagamento
        and p.NR_SEQ_PRESTADOR = b.nr_sequencia
        and z.NR_SEQ_TIPO_PRESTADOR   = b.NR_SEQ_TIPO_PRESTADOR
        and a.nr_sequencia = nr_seq_pag_item_w;
		exception when unique_violation then
				nr_seq_conta_financ_evento_w := nr_seq_conta_financ_w;
		end;
		
		vl_movimento_w	:= (vl_titulo_w * dividir_sem_round(vl_movimento_w, vl_titulo_w - coalesce(vl_imposto_w,0)));
	
		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_sequencia_w
		from	titulo_pagar_classif
		where	nr_titulo = nr_titulo_p;
		
		insert into titulo_pagar_classif(cd_centro_custo,
			cd_conta_contabil,
			dt_atualizacao,
			nm_usuario,
			nr_contrato,
			nr_seq_conta_financ,
			nr_seq_trans_fin,
			nr_sequencia,
			nr_titulo,
			vl_acrescimo,
			vl_desconto,
			vl_original,
			vl_titulo)
		values (cd_centro_custo_w,
			cd_conta_contabil_w,
			clock_timestamp(),
			nm_usuario_p,
			nr_contrato_w,
			coalesce(nr_seq_conta_financ_evento_w,nr_seq_conta_financ_w),
			nr_seq_trans_fin_w,
			nr_sequencia_w,
			nr_titulo_p,
			vl_acrescimo_w,
			vl_desconto_w,
			0,
			coalesce(vl_movimento_w,0));	
		
		vl_movimento_total_w	:= vl_movimento_total_w + vl_movimento_w;
		
		end;
	end loop;
	close c_itens_recurso;
	
elsif (ie_origem_titulo_w = '16') then
	open c_itens_intercambio;
	loop
	fetch c_itens_intercambio into	
		cd_conta_contabil_w,
		vl_movimento_w;
	EXIT WHEN NOT FOUND; /* apply on c_itens_intercambio */
		begin
			vl_movimento_w	:= vl_titulo_w * dividir_sem_round(vl_movimento_w, vl_titulo_w - coalesce(vl_imposto_w,0));
			
			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_sequencia_w
			from	titulo_pagar_classif
			where	nr_titulo = nr_titulo_p;
			
			insert into titulo_pagar_classif(cd_centro_custo,
				cd_conta_contabil,
				dt_atualizacao,
				nm_usuario,
				nr_contrato,
				nr_seq_conta_financ,
				nr_seq_trans_fin,
				nr_sequencia,
				nr_titulo,
				vl_acrescimo,
				vl_desconto,
				vl_original,
				vl_titulo)
			values (cd_centro_custo_w,
				cd_conta_contabil_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_contrato_w,
				nr_seq_conta_financ_w,
				nr_seq_trans_fin_w,
				nr_sequencia_w,
				nr_titulo_p,
				vl_acrescimo_w,
				vl_desconto_w,
				0,
				coalesce(vl_movimento_w,0));	

		vl_movimento_total_w	:= vl_movimento_total_w + vl_movimento_w;
		end;
	end loop;
	close c_itens_intercambio;
elsif (ie_origem_titulo_w = '6') then
	open c_itens_reembolso;
	loop
	fetch c_itens_reembolso into	
		cd_conta_contabil_w,
		vl_movimento_w;
	EXIT WHEN NOT FOUND; /* apply on c_itens_reembolso */
		begin
			vl_movimento_w	:= vl_titulo_w * dividir_sem_round(vl_movimento_w,vl_titulo_w - coalesce(vl_imposto_w,0));
						
			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_sequencia_w
			from	titulo_pagar_classif
			where	nr_titulo = nr_titulo_p;
			
			insert into titulo_pagar_classif(cd_centro_custo,
				cd_conta_contabil,
				dt_atualizacao,
				nm_usuario,
				nr_contrato,
				nr_seq_conta_financ,
				nr_seq_trans_fin,
				nr_sequencia,
				nr_titulo,
				vl_acrescimo,
				vl_desconto,
				vl_original,
				vl_titulo)
			values (cd_centro_custo_w,
				cd_conta_contabil_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_contrato_w,
				nr_seq_conta_financ_w,
				nr_seq_trans_fin_w,
				nr_sequencia_w,
				nr_titulo_p,
				vl_acrescimo_w,
				vl_desconto_w,
				0,
				coalesce(vl_movimento_w,0));	
		
			vl_movimento_total_w	:= vl_movimento_total_w + vl_movimento_w;
		end;
	end loop;
	close c_itens_reembolso;
	
	open c_itens_coparticipacao;
	loop
	fetch c_itens_coparticipacao into	
		cd_conta_contabil_w,
		vl_movimento_w;
	EXIT WHEN NOT FOUND; /* apply on c_itens_coparticipacao */
		begin
			vl_movimento_w	:= vl_titulo_w * dividir_sem_round(vl_movimento_w, vl_titulo_w - coalesce(vl_imposto_w,0));
			
			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_sequencia_w
			from	titulo_pagar_classif
			where	nr_titulo = nr_titulo_p;
			
			insert into titulo_pagar_classif(cd_centro_custo,
				cd_conta_contabil,
				dt_atualizacao,
				nm_usuario,
				nr_contrato,
				nr_seq_conta_financ,
				nr_seq_trans_fin,
				nr_sequencia,
				nr_titulo,
				vl_acrescimo,
				vl_desconto,
				vl_original,
				vl_titulo)
			values (cd_centro_custo_w,
				cd_conta_contabil_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_contrato_w,
				nr_seq_conta_financ_w,
				nr_seq_trans_fin_w,
				nr_sequencia_w,
				nr_titulo_p,
				vl_acrescimo_w,
				vl_desconto_w,
				0,
				coalesce(vl_movimento_w,0));	
			
			vl_movimento_total_w	:= vl_movimento_total_w + vl_movimento_w;			
		end;
	end loop;
	close c_itens_coparticipacao;
end if;

open c_desdobramento;
loop
fetch c_desdobramento into	
	cd_conta_contabil_w,
	vl_movimento_w;
EXIT WHEN NOT FOUND; /* apply on c_desdobramento */
	begin
		
	vl_movimento_w	:= vl_titulo_w * dividir_sem_round(vl_movimento_w, vl_titulo_w);
		
	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from	titulo_pagar_classif
	where	nr_titulo = nr_titulo_p;
	
	insert into titulo_pagar_classif(cd_centro_custo,
		cd_conta_contabil,
		dt_atualizacao,
		nm_usuario,
		nr_contrato,
		nr_seq_conta_financ,
		nr_seq_trans_fin,
		nr_sequencia,
		nr_titulo,
		vl_acrescimo,
		vl_desconto,
		vl_original,
		vl_titulo)
	values (cd_centro_custo_w,
		cd_conta_contabil_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_contrato_w,
		nr_seq_conta_financ_w,
		nr_seq_trans_fin_w,
		nr_sequencia_w,
		nr_titulo_p,
		vl_acrescimo_w,
		vl_desconto_w,
		0,
		coalesce(vl_movimento_w,0));				

	vl_movimento_total_w	:= vl_movimento_total_w + vl_movimento_w;
	end;
end loop;
close c_desdobramento;

select	sum(vl_titulo)
into STRICT	vl_movimento_prod_w
from	titulo_pagar_classif
where	nr_titulo = nr_titulo_p;

/*Ratear o valor do imposto*/

if (vl_titulo_w <> vl_movimento_total_w) and (coalesce(vl_movimento_prod_w,0) > 0) then
	update	titulo_pagar_classif
	set	vl_titulo	= vl_titulo + (((vl_titulo_w - vl_movimento_total_w)*vl_titulo)/vl_movimento_prod_w)
	where	nr_titulo = nr_titulo_p;
end if;

select	sum(vl_titulo)
into STRICT	vl_movimento_total_w
from	titulo_pagar_classif
where	nr_titulo = nr_titulo_p;

/* Arredondamento */

if (vl_titulo_w <> vl_movimento_total_w) then
	update	titulo_pagar_classif
	set	vl_titulo	= vl_titulo + (vl_titulo_w - vl_movimento_total_w)
	where	nr_sequencia	= nr_sequencia_w
	and		nr_titulo = nr_titulo_p;
end if;

CALL ATUALIZAR_TIT_PAGAR_CLASSIF(nr_titulo_p, 'N', nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE recalcular_tit_pagar_classif ( nr_titulo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

