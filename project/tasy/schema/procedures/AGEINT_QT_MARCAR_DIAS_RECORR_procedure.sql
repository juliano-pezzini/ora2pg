-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_qt_marcar_dias_recorr ( nr_sequencia_p bigint, dt_agenda_p timestamp, nm_usuario_p text, nr_seq_local_p bigint, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, nr_seq_item_p bigint, nr_seq_prof_p bigint default null, ds_retorno_p INOUT text  DEFAULT NULL) AS $body$
DECLARE


dt_agenda_w	timestamp;
ie_Gerar_w	varchar(1);
ds_retorno_w	varchar(4000);
ie_primeiro_w	varchar(1)	:= 'S';
ds_sep_w	varchar(3);
nr_minuto_duracao_w bigint;
nr_seq_item_w	bigint;
dt_agenda_ww	timestamp;
qt_marcacao_w	bigint;
nr_duracao_w	bigint;

C01 CURSOR FOR
	SELECT	to_date(to_char(a.dt_prevista_quimio,'dd/mm/yyyy') || ' ' || to_char(dt_agenda_p,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'),
		a.nr_minuto_duracao,
		a.nr_sequencia
	from	agenda_integrada_item a
	where	a.nr_Seq_agenda_int	= nr_sequencia_p
	and		((not exists (SELECT 1 from agenda_quimio_marcacao x where x.nr_seq_ageint_item = a.nr_sequencia and trunc(a.dt_prevista_quimio) = trunc(x.dt_agenda)) and qt_marcacao_w = 0)
	or (exists (select 1 from agenda_quimio_marcacao x where x.nr_seq_ageint_item = a.nr_sequencia and trunc(a.dt_prevista_quimio) = trunc(x.dt_agenda)) and qt_marcacao_w = 1))
	and		(a.dt_prevista_quimio IS NOT NULL AND a.dt_prevista_quimio::text <> '')
	order by 1;


BEGIN

nr_duracao_w := Obter_Param_Usuario(865, 3, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, nr_duracao_w);

begin
select	1
into STRICT	qt_marcacao_w
from	agenda_quimio_marcacao
where	nr_seq_ageint_item	= nr_seq_item_p
and		dt_agenda_p between dt_Agenda and dt_Agenda + (nr_duracao - 1) / 1440  LIMIT 1;
exception
	when others then
		qt_marcacao_w	:= 0;
end;

open C01;
loop
fetch C01 into
	dt_agenda_w,
	nr_minuto_duracao_w,
	nr_seq_item_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	coalesce(max(dt_agenda), dt_Agenda_w)
	into STRICT	dt_agenda_ww
	from	agenda_quimio_marcacao
	where	nr_seq_Ageint_item	= nr_seq_item_w
	and		dt_agenda_w between trunc(dt_Agenda) and trunc(dt_Agenda) + 86399/86400
	and		coalesce(ie_Gerado,'N')	= 'N';


	if (trunc(dt_agenda_ww)	<> trunc(dt_agenda_p)) then
		CALL qt_gerar_hor_itens_ageint(
							cd_pessoa_Fisica_p,
							dt_agenda_ww,
							nr_sequencia_p,
							coalesce(nr_duracao_w,15),
							nm_usuario_p,
							cd_estabelecimento_p,
							nr_seq_prof_p,
							null,
							null,
							nr_seq_local_p);
	end if;

	ie_gerar_w := Qt_Atualizar_Dados_Marc_AgeINT( nr_seq_item_w, dt_agenda_ww, nm_usuario_p, nr_seq_local_p, cd_estabelecimento_p, nr_minuto_duracao_w, ie_gerar_w, nr_seq_prof_p);

	if (ie_Gerar_w	<> 'S') then
		if (ie_primeiro_w	= 'S') then
			ds_retorno_w	:= wheb_mensagem_pck.get_texto(795113);
			ie_primeiro_w	:= 'N';
		end if;
		if (length(ds_retorno_w||substr(ds_retorno_w || ds_sep_w || to_char(dt_agenda_w,'dd/mm/yyyy'),1,255)) <= 255) then
			ds_retorno_w	:= substr(ds_retorno_w || ds_sep_w || to_char(dt_agenda_w,'dd/mm/yyyy'),1,4000);
			ds_sep_w	:= ', ';
		end if;
	end if;
	end;
end loop;
close C01;

ds_retorno_p	:= substr(ds_retorno_w,1,255);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_qt_marcar_dias_recorr ( nr_sequencia_p bigint, dt_agenda_p timestamp, nm_usuario_p text, nr_seq_local_p bigint, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, nr_seq_item_p bigint, nr_seq_prof_p bigint default null, ds_retorno_p INOUT text  DEFAULT NULL) FROM PUBLIC;

