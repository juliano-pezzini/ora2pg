-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_atualiza_doc_exec (cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_medico_executor_p text, cd_profissional_p text, cd_prestador_p text, cd_estabelecimento_p bigint, cd_convenio_p bigint, ie_responsavel_credito_p text, ie_funcao_p text, cd_cbo_p text, ie_doc_executor_p INOUT bigint, nr_seq_regra_p INOUT bigint) AS $body$
DECLARE


ie_medico_executor_w			varchar(01)	:= 'N';
ie_prestador_w				varchar(01)	:= 'N';
nr_seq_grupo_w				bigint;
nr_seq_subgrupo_w			bigint;
nr_seq_forma_organizacao_w			bigint;
ie_doc_executor_w				integer	:= null;
nr_sequencia_w				bigint	:= null;
ie_conveniado_w				varchar(1)	:= 'N';
ie_credenciamento_w			varchar(30);
cd_cbo_w				varchar(6);
cd_medico_executor_w			varchar(10);
cd_estabelecimento_w			bigint;

c01 CURSOR FOR
	SELECT	ie_doc_executor,
		nr_sequencia
	from	sus_regra_doc_valor
	where	cd_estabelecimento		= cd_estabelecimento_w
	and	((ie_medico_executor = 'A') or (ie_medico_executor = ie_medico_executor_w))
	and	((ie_prestador	= 'A') or (ie_prestador = ie_prestador_w))
	and (coalesce(cd_grupo, nr_seq_grupo_w)				= nr_seq_grupo_w)
	and (coalesce(cd_subgrupo, nr_seq_subgrupo_w)			= nr_seq_subgrupo_w)
	and (coalesce(cd_forma_organizacao, nr_seq_forma_organizacao_w)	= nr_seq_forma_organizacao_w)
	and (coalesce(cd_procedimento, cd_procedimento_p)		= cd_procedimento_p)
	and (coalesce(ie_origem_proced, ie_origem_proced_p)		= ie_origem_proced_p)
	and	((ie_conveniado = 'A') or (ie_conveniado = ie_conveniado_w))
	and	((coalesce(cd_cgc_prestador::text, '') = '') or (cd_cgc_prestador = cd_prestador_p))
	and	((coalesce(ie_funcao::text, '') = '') or (ie_funcao = ie_funcao_p) or (ie_funcao_p = ''))
	and	((coalesce(ie_responsavel_credito::text, '') = '') or (ie_responsavel_credito = ie_responsavel_credito_p))
	and	coalesce(cd_cbo,cd_cbo_w)	= cd_cbo_w
	and	coalesce(cd_medico_executor, cd_medico_executor_w)	= cd_medico_executor_w
order by
	coalesce(cd_procedimento, 0),
	coalesce(cd_forma_organizacao, 0),
	coalesce(cd_subgrupo, 0),
	coalesce(cd_grupo, 0),
	coalesce(cd_medico_executor,'0'),
	coalesce(cd_cbo,'0'),
	coalesce(ie_responsavel_credito, 'A'),
	coalesce(cd_cgc_prestador, '0'),
	coalesce(ie_conveniado, '0'),
	coalesce(ie_funcao,'0');


BEGIN
cd_medico_executor_w	:= coalesce(coalesce(cd_medico_executor_p, cd_profissional_p),'0');
cd_cbo_w		:= coalesce(cd_cbo_p,'0');
ie_credenciamento_w	:= sus_obter_credenciamento_prof(coalesce(cd_medico_executor_p, cd_profissional_p), cd_convenio_p, coalesce(cd_cbo_p,'0'));
cd_estabelecimento_w	:= cd_estabelecimento_p;
if (ie_credenciamento_w	= '30') then
	ie_conveniado_w	:= 'S';
else
	ie_conveniado_w	:= 'N';

	select	coalesce(max(ie_conveniado),'0')
	into STRICT	ie_conveniado_w
	from	sus_medico_credenciamento
	where	cd_medico			= coalesce(cd_medico_executor_p, cd_profissional_p)
	and	coalesce(cd_cbo,coalesce(cd_cbo_p,'0'))	= coalesce(cd_cbo_p,'0')
	and	coalesce(ie_situacao,'A') = 'A'
	and	coalesce(cd_estabelecimento,cd_estabelecimento_p) = cd_estabelecimento_p;

	if (ie_conveniado_w	= '0') then
		begin
		select	coalesce(max(ie_conveniado),'N')
		into STRICT	ie_conveniado_w
		from	medico_convenio
		where	cd_pessoa_fisica	= coalesce(cd_medico_executor_p, cd_profissional_p)
		and	cd_convenio		= cd_convenio_p;
		end;
	end if;
end if;

/* 17/03/2008 ie_conveniado_w	:= obter_se_medico_credenciado(cd_estabelecimento_p, nvl(cd_medico_executor_p, cd_profissional_p), cd_convenio_p); */

if (cd_medico_executor_p IS NOT NULL AND cd_medico_executor_p::text <> '') then
	ie_medico_executor_w		:= 'S';
end if;

if (cd_prestador_p IS NOT NULL AND cd_prestador_p::text <> '') then
	ie_prestador_w			:= 'S';
end if;

begin
select	nr_seq_grupo,
	nr_seq_subgrupo,
	nr_seq_forma_org
into STRICT	nr_seq_grupo_w,
	nr_seq_subgrupo_w,
	nr_seq_forma_organizacao_w
from	Sus_Estrutura_Procedimento_V
where	cd_procedimento		= cd_procedimento_p
and	ie_origem_proced	= ie_origem_proced_p;
exception
	when others then
		nr_seq_grupo_w			:= 0;
		nr_seq_subgrupo_w		:= 0;
		nr_seq_forma_organizacao_w	:= 0;
end;

open	c01;
loop
fetch	c01 into
	ie_doc_executor_w,
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	ie_doc_executor_w	:= ie_doc_executor_w;
	nr_sequencia_w		:= nr_sequencia_w;
end loop;
close c01;

ie_doc_executor_p		:= ie_doc_executor_w;
nr_seq_regra_p			:= nr_sequencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_atualiza_doc_exec (cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_medico_executor_p text, cd_profissional_p text, cd_prestador_p text, cd_estabelecimento_p bigint, cd_convenio_p bigint, ie_responsavel_credito_p text, ie_funcao_p text, cd_cbo_p text, ie_doc_executor_p INOUT bigint, nr_seq_regra_p INOUT bigint) FROM PUBLIC;

