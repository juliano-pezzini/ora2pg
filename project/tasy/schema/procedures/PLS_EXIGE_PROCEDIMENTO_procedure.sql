-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_exige_procedimento ( nr_seq_grupo_procedimento_p bigint, ie_exigencia_procedimento_p text, nr_seq_guia_p bigint, nr_seq_conta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_regra_p INOUT text) AS $body$
DECLARE

 
/* 
ie_exigência_procedimento_p 
T - Todos 
U - Ao menos um 
S - Somente os itens da regra 
A - Todos itens da autorização 
 
ie_regra_p 
N - Não segue a regra 
S - Segue a regra 
*/
				 
 
qt_procedimento_w		bigint;
qt_procedimentos_regra_w	bigint;
qt_total_proced_w		bigint;


BEGIN 
 
if (nr_seq_grupo_procedimento_p IS NOT NULL AND nr_seq_grupo_procedimento_p::text <> '') then 
 
	select 	count(1) 
	into STRICT	qt_procedimentos_regra_w 
	from 	table(pls_grupos_pck.obter_procs_grupo_servico(nr_seq_grupo_procedimento_p, null,null));
 
end if;
 
if (coalesce(nr_seq_guia_p,0) > 0) then 
	if (nr_seq_grupo_procedimento_p IS NOT NULL AND nr_seq_grupo_procedimento_p::text <> '') then	 
 
		select	count(1) 
		into STRICT	qt_procedimento_w 
		from (SELECT	cd_procedimento	 
			 from	pls_guia_plano_proc	 
			 where	nr_seq_guia = nr_seq_guia_p 
			 and	exists (select	1 
					from	table(pls_grupos_pck.obter_procs_grupo_servico(nr_seq_grupo_procedimento_p, ie_origem_proced,cd_procedimento)) grupo) 
			 group by cd_procedimento, 
				 ie_origem_proced) alias7;
		 
		select	count(1) 
		into STRICT	qt_total_proced_w 
		from (SELECT	cd_procedimento	 
			 from	pls_guia_plano_proc	 
			 where	nr_seq_guia = nr_seq_guia_p 
			 group by cd_procedimento, 
				 ie_origem_proced) alias1;
 
	elsif (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') then 
 
		select	count(1) 
		into STRICT	qt_procedimento_w 
		from (SELECT	cd_procedimento	 
			 from	pls_guia_plano_proc	 
			 where	nr_seq_guia = nr_seq_guia_p 
			 and	cd_procedimento = cd_procedimento_p 
			 and	ie_origem_proced = ie_origem_proced_p 
			 group by cd_procedimento, 
				 ie_origem_proced) alias2;
		 
 
		select	count(1) 
		into STRICT	qt_total_proced_w 
		from (SELECT	cd_procedimento	 
			 from	pls_guia_plano_proc	 
			 where	nr_seq_guia = nr_seq_guia_p 
			 group by cd_procedimento, 
				 ie_origem_proced) alias1;
	 
	end if;
elsif (coalesce(nr_seq_conta_p,0) > 0) then 
	 
 
	select	count(1) 
	into STRICT	qt_procedimento_w 
	from	pls_conta_proc		 
	where	nr_seq_conta = nr_seq_conta_p 
	and	pls_se_grupo_preco_servico(nr_seq_grupo_procedimento_p, cd_procedimento, ie_origem_proced) = 'S' 
	group by cd_procedimento, 
		 ie_origem_proced;	
		 
end if;
 
if (ie_exigencia_procedimento_p = 'U') then	 
	/*Ao menos um dos procedimentos existentes na regra devem existir na conta.*/
 
	if (qt_procedimento_w = 0) then 
		ie_regra_p := 'N';
	end if;
	 
elsif (ie_exigencia_procedimento_p = 'T') then 
	 
	/*Todos os procedimentos da regra devem estar na conta*/
 
	if (nr_seq_grupo_procedimento_p IS NOT NULL AND nr_seq_grupo_procedimento_p::text <> '') then 
		if (qt_procedimento_w < qt_procedimentos_regra_w) then 
			ie_regra_p := 'N';
		end if;
	elsif (cd_procedimento_p > 0 ) then 
		if ( qt_total_proced_w = 0) then 
			ie_regra_p := 'N';
		end if;
	end if;
elsif (ie_exigencia_procedimento_p = 'S') then	 
	/*Todos os procedimentos da regra devem estar na conta e mais nenhum*/
 
	if (nr_seq_grupo_procedimento_p IS NOT NULL AND nr_seq_grupo_procedimento_p::text <> '') then 
		if (qt_procedimento_w <> qt_procedimentos_regra_w) then 
			ie_regra_p := 'N';
		end if;
	elsif (cd_procedimento_p > 0 ) then 
		if (qt_procedimento_w <> qt_total_proced_w) then 
			ie_regra_p := 'N';
		end if;
	end if;
elsif (ie_exigencia_procedimento_p = 'A') then 
	/*Todos os itens da autorização devem estar no grupo de serviço*/
 
	if (nr_seq_grupo_procedimento_p IS NOT NULL AND nr_seq_grupo_procedimento_p::text <> '') then 
		if (qt_total_proced_w > qt_procedimento_w) or (qt_total_proced_w = 0) then 
			ie_regra_p := 'N';
		end if;
	end if;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_exige_procedimento ( nr_seq_grupo_procedimento_p bigint, ie_exigencia_procedimento_p text, nr_seq_guia_p bigint, nr_seq_conta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_regra_p INOUT text) FROM PUBLIC;

