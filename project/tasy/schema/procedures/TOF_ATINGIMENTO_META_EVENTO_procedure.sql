-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tof_atingimento_meta_evento ( cd_estabelecimento_p text, nm_usuario_p text, dt_evento_p timestamp) AS $body$
DECLARE


nr_atendimento_w	unidade_atendimento.nr_atendimento%type;
contador_w			bigint;
contador_ww			bigint;
contador_www			bigint;
contador_wwww			bigint;

C01 CURSOR FOR
	SELECT	nr_atendimento
	from	unidade_atendimento
	where	(nr_atendimento IS NOT NULL AND nr_atendimento::text <> '');


BEGIN

open C01;
loop
fetch C01 into
	nr_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		select	count(*)
		into STRICT	contador_w
		from	tof_meta_atend a,
			tof_meta m
		where	m.nr_sequencia = a.nr_seq_meta
		and	nr_atendimento = nr_atendimento_w
		and	ie_regra = 'E'
		and	coalesce(m.ie_situacao,'A') = 'A'
		and	coalesce(a.dt_finalizacao::text, '') = ''
		and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and coalesce(a.dt_inativacao::text, '') = '';

		select	count(*)
		into STRICT	contador_ww
		from	tof_meta_atend a,
			tof_meta m
		where	m.nr_sequencia = a.nr_seq_meta
		and	nr_atendimento = nr_atendimento_w
		and	ie_regra = 'TEV'
		and	coalesce(m.ie_situacao,'A') = 'A'
		and	coalesce(a.dt_finalizacao::text, '') = ''
		and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and coalesce(a.dt_inativacao::text, '') = '';

		select	count(*)
		into STRICT	contador_www
		from	tof_meta_atend a,
			tof_meta m
		where	m.nr_sequencia = a.nr_seq_meta
		and	nr_atendimento = nr_atendimento_w
		and	ie_regra = 'I'
		and	coalesce(m.ie_situacao,'A') = 'A'
		and	coalesce(a.dt_finalizacao::text, '') = ''
		and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and coalesce(a.dt_inativacao::text, '') = '';

		select	count(*)
		into STRICT	contador_wwww
		from	tof_meta_atend a,
			tof_meta m
		where	m.nr_sequencia = a.nr_seq_meta
		and	nr_atendimento = nr_atendimento_w
		and	ie_regra = 'ESC'
		and	coalesce(m.ie_situacao,'A') = 'A'
		and	coalesce(a.dt_finalizacao::text, '') = ''
		and	not exists (SELECT 1 from tof_meta_atend_hor x
		                where x.nr_seq_meta_atend = a.nr_sequencia
						and trunc(dt_geracao-1) = trunc(dt_evento_p-1) -- OS 992381
						and (x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')
						and coalesce(x.dt_inativacao::text, '') = '')
		and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and coalesce(a.dt_inativacao::text, '') = '';


		if (contador_w > 0) then
			begin
				CALL tof_verificar_meta_eventos(nr_atendimento_w, nm_usuario_p, cd_estabelecimento_p, dt_evento_p);
			end;
		end if;

		if (contador_ww > 0) then
			begin
				CALL tof_verificar_meta_tev(nr_atendimento_w, nm_usuario_p, dt_evento_p);
			end;
		end if;


		if (contador_www > 0) then
			begin
				CALL tof_verificar_meta_job_interv(nr_atendimento_w, nm_usuario_p, cd_estabelecimento_p, dt_evento_p);
			end;
		end if;

		if (contador_wwww > 0) then
			begin
				CALL tof_verificar_meta_escalas(nr_atendimento_w, nm_usuario_p, cd_estabelecimento_p, dt_evento_p);
			end;
		end if;


	end;
end loop;
close C01;



commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tof_atingimento_meta_evento ( cd_estabelecimento_p text, nm_usuario_p text, dt_evento_p timestamp) FROM PUBLIC;

