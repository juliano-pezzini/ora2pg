-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_comunic_regra_func_usu ( ie_regra_p text, ds_registro_novo_p text, nm_usuario_p text, cd_pessoa_fisica_p text, ds_valor_atual_p text default null, ds_valor_ant_p text default null) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Gerar CI e/ou e-mail conforme a regra Regra de envio de comunicação (novo usuário/func) do Shift+F11 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ X ] Objetos do dicionário [ X ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
------------------------------------------------------------------------------------------------------------------- 
Referências: CorPes_FF,, CorPes_F7 CorPes_F8, CorSis_FO 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
	 
ie_email_w			varchar(1);
ie_comunic_interna_w		varchar(1);
ds_titulo_w			varchar(255);
ds_mensagem_w			varchar(2000);
ie_regra_w			varchar(15);
ds_usuario_envio_w		varchar(255);
cd_setor_atendimento_w		varchar(5);
ie_situacao_w			varchar(1);
ds_setor_atendimento_w		varchar(255);
ds_email_setor_destino_w	varchar(255);
ie_pos_virgula_email_w		integer;
nm_usuario_ww			varchar(20);
nm_usuario_grupo_w		varchar(15);
ds_email_w			varchar(255);
ds_email_destino_w		varchar(2000)	:= '';
nr_seq_grupo_usuario_w		varchar(10);
nr_seq_regra_w			bigint;
ie_geral_w			varchar(20)	:= 'N';
nr_sequencia_p_w		bigint;
qt_reg_w			bigint;
ds_setor_atual_w		setor_atendimento.ds_setor_atendimento%type;
ds_setor_novo_w			setor_atendimento.ds_setor_atendimento%type;
cd_setor_atendimento_ww		varchar(2000);
cd_setor_atendimento_www	varchar(2000);
nr_seq_grupo_usuario_ww		varchar(2000);
nr_seq_grupo_usuario_www	varchar(2000);
ds_usuario_envio_www		regra_envio_novo_usu_dest.ds_usuario_envio%type;
ds_usuario_envio_ww		regra_envio_novo_usu_dest.ds_usuario_envio%type;
cd_perfil_w			varchar(10);
cd_perfil_ww			varchar(2000);

c_regra CURSOR FOR 
	SELECT	ie_email, 
		ie_comunic_interna, 
		ds_titulo, 
		ds_mensagem, 
		ie_regra, 
		replace(ds_usuario_envio,';',',')||',', 
		cd_setor_atendimento, 
		ds_email_destino, 
		nr_seq_grupo_usuario, 
		nr_sequencia, 
		coalesce(ie_ci_geral,'N') 
	from	regra_envio_novo_usu_pf 
	where	ie_situacao	= 'A' 
	and	ie_regra	= ie_regra_p;

c_usuario_grupo CURSOR FOR 
	SELECT	distinct 
		nm_usuario_grupo 
	from	usuario_grupo 
	where	nr_seq_grupo	= nr_seq_grupo_usuario_w 
	and	ie_situacao	= 'A';

c_os_regra CURSOR FOR 
	SELECT	nr_sequencia 
	from	regra_envio_os_usu_pf w 
	where 	w.nr_seq_regra	= nr_seq_regra_w 
	order by 	1;

c_destino_regra CURSOR FOR 
	SELECT	cd_perfil, 
		cd_setor_atendimento, 
		nr_seq_grupo_usuario, 
		replace(ds_usuario_envio,';',',')||',' 
	from	regra_envio_novo_usu_dest 
	where 	nr_seq_regra	= nr_seq_regra_w;
	

BEGIN 
open c_regra;
loop 
fetch c_regra into 
	ie_email_w, 
	ie_comunic_interna_w, 
	ds_titulo_w, 
	ds_mensagem_w, 
	ie_regra_w, 
	ds_usuario_envio_w, 
	cd_setor_atendimento_w, 
	ds_email_setor_destino_w, 
	nr_seq_grupo_usuario_w, 
	nr_seq_regra_w, 
	ie_geral_w;
EXIT WHEN NOT FOUND; /* apply on c_regra */
	begin 
	if (nr_seq_grupo_usuario_w IS NOT NULL AND nr_seq_grupo_usuario_w::text <> '') then 
		begin 
		open c_usuario_grupo;
		loop 
		fetch c_usuario_grupo into 
			nm_usuario_grupo_w;
		EXIT WHEN NOT FOUND; /* apply on c_usuario_grupo */
			begin 
			if (coalesce(ds_usuario_envio_w::text, '') = '') then 
				ds_usuario_envio_w	:= nm_usuario_grupo_w;
			else 
				ds_usuario_envio_w	:= substr(ds_usuario_envio_w || nm_usuario_grupo_w || ', ',1,255);
			end if;
			end;
		end loop;
		close c_usuario_grupo;
		end;
	end if;
 
	if (ie_comunic_interna_w = 'S') then -- envia ci. 
		begin 
		if (position('@' in ds_mensagem_w) > 0) and (coalesce(cd_pessoa_fisica_p,0) > 0) then 
			if (ie_regra_w = 'EA') and (ds_valor_atual_p IS NOT NULL AND ds_valor_atual_p::text <> '') then 
				ds_mensagem_w := substr(obter_macro_ci_colaborador(nr_seq_regra_w,cd_pessoa_fisica_p,ds_valor_atual_p),1,2000);
			else 
				ds_mensagem_w := substr(obter_macro_ci_colaborador(nr_seq_regra_w,cd_pessoa_fisica_p,null),1,2000);
			end if;
			 
			if (ie_regra_w = 'TS') then 
				if (ds_valor_atual_p IS NOT NULL AND ds_valor_atual_p::text <> '') then 
					select	substr(obter_desc_expressao(max(cd_exp_setor_atend),max(ds_setor_atendimento)),1,100) 
					into STRICT	ds_setor_atual_w 
					from	setor_atendimento 
					where	cd_setor_atendimento = ds_valor_atual_p;
				end if;
				if (ds_valor_ant_p IS NOT NULL AND ds_valor_ant_p::text <> '') then 
					select	substr(obter_desc_expressao(max(cd_exp_setor_atend),max(ds_setor_atendimento)),1,100) 
					into STRICT	ds_setor_novo_w 
					from	setor_atendimento 
					where	cd_setor_atendimento = ds_valor_ant_p;
				end if;
				 
				ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ATUAL_SETOR',ds_setor_atual_w),1,2000);
				ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@NOVO_SETOR',ds_setor_novo_w),1,2000);
			end if;
		else 
			ds_mensagem_w	:= ds_mensagem_w|| chr(13) || chr(10) || wheb_mensagem_pck.get_texto(305778)||ds_registro_novo_p;
		end if;
		 
		open c_destino_regra;
		loop 
		fetch c_destino_regra into	 
			cd_perfil_w, 
			cd_setor_atendimento_ww, 
			nr_seq_grupo_usuario_ww, 
			ds_usuario_envio_ww;
		EXIT WHEN NOT FOUND; /* apply on c_destino_regra */
			begin 
			if (position(cd_perfil_w in coalesce(cd_perfil_ww,'X')) = 0) then 
				cd_perfil_ww	:= substr(cd_perfil_w || ',' || cd_perfil_ww,1,2000);
			end if;
			 
			if (coalesce(cd_setor_atendimento_w,'0') = '0') then 
				if (position(cd_setor_atendimento_ww in coalesce(cd_setor_atendimento_www,'X')) = 0) then 
					cd_setor_atendimento_www	:= substr(cd_setor_atendimento_ww || ',' || cd_setor_atendimento_www,1,2000);
				end if;
			end if;
			 
			if (coalesce(nr_seq_grupo_usuario_w,0) = 0) then 
				if (position(nr_seq_grupo_usuario_ww in coalesce(nr_seq_grupo_usuario_www,'X')) = 0) then 
					nr_seq_grupo_usuario_www	:= substr(nr_seq_grupo_usuario_ww || ',' || nr_seq_grupo_usuario_www,1,2000);
				end if;
			end if;
			 
			if (trim(both ds_usuario_envio_w) = ',') then 
				if (position(ds_usuario_envio_ww in coalesce(ds_usuario_envio_www,'X')) = 0) then 
					ds_usuario_envio_www	:= substr(ds_usuario_envio_ww || ',' ||ds_usuario_envio_www,1,2000);
				end if;
			end if;
			 
			end;
		end loop;
		close c_destino_regra;
		 
		if (trim(both ds_usuario_envio_w) = ',') then 
			ds_usuario_envio_w	:= '';
		end if;
		 
		if (trim(both cd_perfil_ww) = ',') then 
			cd_perfil_ww	:= '';
		end if;
		 
		if (trim(both ds_usuario_envio_www) = ',') then 
			ds_usuario_envio_www	:= '';
		end if;
		 
		if (trim(both nr_seq_grupo_usuario_www) = ',') then 
			nr_seq_grupo_usuario_www	:= '';
		end if;
		 
		if	((coalesce(cd_setor_atendimento_w,cd_setor_atendimento_www) <> '0') or (coalesce(ds_usuario_envio_w,ds_usuario_envio_www) <> 'X') or (coalesce(cd_perfil_w,cd_perfil_ww) <> 'X') or (coalesce(nr_seq_grupo_usuario_w,nr_seq_grupo_usuario_www) <> 'X')) then 
			CALL gerar_comunic_padrao(	clock_timestamp(), 
						ds_titulo_w, 
						ds_mensagem_w, 
						nm_usuario_p, 
						ie_geral_w, 
						coalesce(ds_usuario_envio_w,substr(ds_usuario_envio_www,1,length(ds_usuario_envio_www)-1)), 
						'N', 
						null, 
						cd_perfil_ww||',', 
						wheb_usuario_pck.get_cd_estabelecimento, 
						coalesce(cd_setor_atendimento_w,cd_setor_atendimento_www)||',', 
						clock_timestamp(), 
						coalesce(nr_seq_grupo_usuario_w,nr_seq_grupo_usuario_www), 
						null);
		end if;
		end;
	end if;
	-- envia para o e-mail informado. 
	if (ie_email_w = 'S') then 
		begin 
		if (coalesce(ds_email_setor_destino_w,'X') <> 'X') and (coalesce(cd_setor_atendimento_w,0) <> 0) then 
			CALL enviar_email(	ds_titulo_w, 
					ds_mensagem_w|| chr(13) || chr(10) || wheb_mensagem_pck.get_texto(305779)||ds_registro_novo_p, 
					null, 
					ds_email_setor_destino_w, -- E-mail informado no campo DS_EMAIL_DESTINO 
					nm_usuario_p, 
					'M');
		end if;
		-- verifica se possui usuário informado na regra e envia o e-mail conforme cadastro do usuário. 
		if (coalesce(ds_usuario_envio_w,'X') <> 'X') then 
 
			while(coalesce(ds_usuario_envio_w,'X') <> 'X') and (trim(both ds_usuario_envio_w) <> ',') loop 
 
				select	position(',' in ds_usuario_envio_w) 
				into STRICT	ie_pos_virgula_email_w 
				;
 
				nm_usuario_ww	:= substr(ds_usuario_envio_w,1,ie_pos_virgula_email_w-1);
 
				if (substr(nm_usuario_ww,1,1) = ' ') then 
					nm_usuario_ww := substr(nm_usuario_ww,2, length(nm_usuario_ww));
				end if;
 
				select	max(ds_email) 
				into STRICT	ds_email_w 
				from	usuario 
				where	upper(nm_usuario) = upper(nm_usuario_ww);
 
				if (coalesce(ds_email_w,'X') <> 'X') and (coalesce(ds_email_w,'X') <> coalesce(ds_email_setor_destino_w,'X')) then 
					ds_email_destino_w := substr(ds_email_destino_w || ds_email_w || ';',1,2000);
				end if;
 
				ds_usuario_envio_w := substr(ds_usuario_envio_w,ie_pos_virgula_email_w+1,length(ds_usuario_envio_w)-1);
			end loop;
 
			-- Envia o e-mail para os usuários informados na regra. 
			if (coalesce(ds_email_destino_w,'X') <> 'X') then 
				CALL enviar_email(	ds_titulo_w, 
						ds_mensagem_w|| chr(13) || chr(10) || wheb_mensagem_pck.get_texto(305778)||ds_registro_novo_p, 
						null, 
						ds_email_destino_w, 
						nm_usuario_p, 
						'M');
			end if;
		end if;
		end;
	end if;
	end;
 
	select	count(*) 
	into STRICT	qt_reg_w 
	from 	regra_envio_os_usu_pf;
 
	if (qt_reg_w > 0) then 
 
		open c_os_regra;
		loop 
		fetch c_os_regra into	 
			nr_sequencia_p_w;
		EXIT WHEN NOT FOUND; /* apply on c_os_regra */
			begin 
			if (coalesce(nr_sequencia_p_w,0) > 0) then 
				CALL gerar_ordem_demissao(nr_sequencia_p_w, nm_usuario_p, cd_pessoa_fisica_p);
			end if;
			end;
		end loop;
		close c_os_regra;
	end if;
 
end loop;
close c_regra;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_comunic_regra_func_usu ( ie_regra_p text, ds_registro_novo_p text, nm_usuario_p text, cd_pessoa_fisica_p text, ds_valor_atual_p text default null, ds_valor_ant_p text default null) FROM PUBLIC;

