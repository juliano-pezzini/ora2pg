-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_exame_dependente_orc (nr_sequencia_orcamento_p bigint, nr_sequencia_p bigint, nr_seq_exame_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_exame_dep_w		bigint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
ie_tipo_atendimento_w		smallint;
nr_atendimento_w		bigint;
cd_estabelecimento_w		smallint;
ie_tipo_convenio_w		smallint;
cd_setor_ret_w			bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
ds_erro_w			varchar(255);
nr_seq_proc_int_ret_w		bigint;
nr_seq_proc_depend_w		bigint;
ie_calcula_orcamento_w		varchar(1);
cd_setor_atendimento_w		orcamento_paciente_proc.cd_setor_atendimento%type;
cd_material_exame_w		orcamento_paciente_proc.cd_material_exame%type;
cd_material_exame_regra_w	orcamento_paciente_proc.cd_material_exame%type;
nr_seq_material_w		exame_lab_material.nr_seq_material%type;
nr_seq_material_regra_w		exame_lab_material.nr_seq_material%type;

C01 CURSOR FOR
	SELECT	nr_seq_exame_dep,
		nr_seq_material
	from	exame_lab_dependente
	where	ie_geracao = 0
	and 	nr_seq_exame = nr_seq_exame_p
	and	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
	and	coalesce(cd_convenio, cd_convenio_w) = cd_convenio_w
	and	coalesce(cd_categoria, cd_categoria_w) = cd_categoria_w
	and	coalesce(cd_setor_atendimento, cd_setor_atendimento_w) = cd_setor_atendimento_w
	and	coalesce(nr_seq_material_regra, nr_seq_material_w) = nr_seq_material_w
	and	coalesce(ie_agrupa_conta, 'S') = 'N'
	order by nr_seq_exame_dep;
	

BEGIN

select 	max(cd_convenio),
	max(cd_categoria),
	max(ie_tipo_atendimento),
	max(nr_atendimento),
	max(cd_estabelecimento)
into STRICT	cd_convenio_w,
	cd_categoria_w,
	ie_tipo_atendimento_w,
	nr_atendimento_w,
	cd_estabelecimento_w
from 	orcamento_paciente
where 	nr_sequencia_orcamento = nr_sequencia_orcamento_p;

select	coalesce(max(cd_setor_atendimento), 0),
	max(cd_material_exame)
into STRICT	cd_setor_atendimento_w,
	cd_material_exame_w
from	orcamento_paciente_proc
where	nr_sequencia = nr_sequencia_p;

select 	coalesce(max(nr_sequencia), 0)
into STRICT	nr_seq_material_w
from	material_exame_lab
where	cd_material_exame = cd_material_exame_w;

if (coalesce(ie_tipo_atendimento_w,0) = 0) and (coalesce(nr_atendimento_w,0) > 0) then
	select 	max(ie_tipo_atendimento)
	into STRICT	ie_tipo_atendimento_w
	from 	atendimento_paciente
	where 	nr_atendimento = nr_atendimento_w;
end if;

select 	max(ie_tipo_convenio)
into STRICT	ie_tipo_convenio_w
from 	convenio
where 	cd_convenio = cd_convenio_w;

ie_calcula_orcamento_w		:= coalesce(obter_valor_param_usuario(106, 52, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');

open C01;
loop
fetch C01 into	
	nr_seq_exame_dep_w,
	nr_seq_material_regra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	SELECT * FROM Obter_Exame_Lab_Convenio(nr_seq_exame_dep_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estabelecimento_w, ie_tipo_convenio_w, null, null, null, cd_setor_ret_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_int_ret_w) INTO STRICT cd_setor_ret_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_int_ret_w;
				
	if (cd_procedimento_w > 0) then
	
		select	max(cd_material_exame)
		into STRICT	cd_material_exame_regra_w
		from	material_exame_lab
		where	nr_sequencia = nr_seq_material_regra_w;
		
		select	nextval('orcamento_paciente_proc_seq')
		into STRICT	nr_seq_proc_depend_w
		;
	
		Insert	into orcamento_paciente_proc(
				nr_sequencia_orcamento,
				cd_procedimento, 
				ie_origem_proced, 
				qt_procedimento, 
				dt_atualizacao, 
				nm_usuario, 
				vl_procedimento, 
				vl_medico, 
				vl_anestesista, 
				vl_filme, 
				vl_auxiliares, 
				vl_custo_operacional, 
				vl_desconto, 
				cd_medico, 
				ie_procedimento_principal, 
				qt_dia_internacao, 
				ie_valor_informado, 
				nr_seq_exame, 
				nr_sequencia, 
				nr_seq_proc_interno, 
				ie_via_acesso, 
				nr_seq_regra_lanc, 
				vl_custo, 
				ie_pacote, 
				nr_seq_proc_princ, 
				ie_autorizacao,
				ie_exame_assoc,
				cd_material_exame)
			values (nr_sequencia_orcamento_p,
				cd_procedimento_w,
				ie_origem_proced_w,
				1,
				clock_timestamp(),
				nm_usuario_p,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				null, 
				null,
				null,
				'N',
				nr_seq_exame_dep_w, 
				nr_seq_proc_depend_w,
				null,
				null,
				null,
				0, 'N',
				nr_sequencia_p,
				null,
				null,
				cd_material_exame_regra_w);
	end if;
	
	end;
end loop;
close C01;

if (ie_calcula_orcamento_w <> 'N') then
	CALL calcular_orcamento_paciente(nr_sequencia_orcamento_p, nm_usuario_p, cd_estabelecimento_w);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_exame_dependente_orc (nr_sequencia_orcamento_p bigint, nr_sequencia_p bigint, nr_seq_exame_p bigint, nm_usuario_p text) FROM PUBLIC;

