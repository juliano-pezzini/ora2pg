-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE acoes_abort_evento_pepo (nr_cirurgia_p bigint, nr_seq_pepo_p bigint, nr_seq_evento_p bigint, dt_evento_p timestamp, ds_erro_p INOUT text) AS $body$
DECLARE


ie_exige_fim_equip_w	varchar(1);
consisteEtapaEvento_w	varchar(15);
ds_erro_w		varchar(255) := null;
cd_perfil_w		integer;
nm_usuario_w		varchar(15);
cd_estabelecimento_w	integer;
ie_consiste_w		varchar(1);


BEGIN

cd_perfil_w				:= wheb_usuario_pck.get_cd_perfil;
nm_usuario_w			:= wheb_usuario_pck.get_nm_usuario;
cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;

select	coalesce(max(ie_exige_fim_equip),'N')
into STRICT	ie_exige_fim_equip_w
from	evento_cirurgia
where	nr_sequencia = nr_seq_evento_p;

consisteEtapaEvento_w := obter_param_usuario(872, 470, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, consisteEtapaEvento_w);

if (coalesce(ds_erro_w::text, '') = '') and (consisteEtapaEvento_w = 'S') then
	ds_erro_w := consiste_evento_pepo(nr_cirurgia_p, nr_seq_pepo_p, nr_seq_evento_p, dt_evento_p, nm_usuario_w, ds_erro_w);
end if;

if (coalesce(ds_erro_w::text, '') = '') and (ie_exige_fim_equip_w = 'S') then
	select	coalesce(max('S'),'N')
	into STRICT	ie_consiste_w
	from	equipamento e,
		equipamento_cirurgia c
	where	e.cd_equipamento = c.cd_equipamento
	and    	coalesce(ie_exige_inicio_fim,'N') = 'S'
	and 	coalesce(c.dt_fim::text, '') = ''
	and    	((coalesce(nr_seq_pepo_p,0) > 0) and (c.nr_seq_pepo = nr_seq_pepo_p)
	or (coalesce(nr_cirurgia_p,0) > 0) and (c.nr_cirurgia = nr_cirurgia_p));

	if (ie_consiste_w = 'S') then
		--Existem equipamentos com data de fim da utilização não informada!
		ds_erro_w := wheb_mensagem_pck.get_texto(343986);
	end if;
end if;

ds_erro_p := ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE acoes_abort_evento_pepo (nr_cirurgia_p bigint, nr_seq_pepo_p bigint, nr_seq_evento_p bigint, dt_evento_p timestamp, ds_erro_p INOUT text) FROM PUBLIC;

