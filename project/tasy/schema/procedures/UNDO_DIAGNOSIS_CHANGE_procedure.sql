-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE undo_diagnosis_change ( nr_atendimento_p atendimento_paciente.nr_atendimento%type, column_p text, dt_diagnostico_p timestamp, cd_doenca_p text ) AS $body$
DECLARE


cd_item_exp_w           bigint;
ds_erro_w               varchar(2000);


BEGIN

        begin

                if ( column_p = 'IE_DIAG_ADMISSAO' ) then

                        update diagnostico_doenca
                        set
                                ie_diag_admissao = 'S',
                                nm_usuario = wheb_usuario_pck.get_nm_usuario,
                                dt_atualizacao = clock_timestamp()
                        where
                                nr_atendimento = nr_atendimento_p
                                and trunc(dt_diagnostico) = trunc(dt_diagnostico_p)
                                and trim(both cd_doenca) = trim(both cd_doenca_p);

                        commit;

                        cd_item_exp_w := 856739;

                elsif ( column_p = 'IE_DIAG_REFERENCIA' ) then

                        update diagnostico_doenca
                        set
                                ie_diag_referencia = 'S',
                                nm_usuario = wheb_usuario_pck.get_nm_usuario,
                                dt_atualizacao = clock_timestamp()
                        where
                                nr_atendimento = nr_atendimento_p
                                and trunc(dt_diagnostico) = trunc(dt_diagnostico_p)
                                and trim(both cd_doenca) = trim(both cd_doenca_p);

                        commit;

                        cd_item_exp_w := 941784;

                elsif ( column_p = 'IE_DIAG_ALTA' ) then

                        update diagnostico_doenca
                        set
                                ie_diag_alta = 'S',
                                nm_usuario = wheb_usuario_pck.get_nm_usuario,
                                dt_atualizacao = clock_timestamp()
                        where
                                nr_atendimento = nr_atendimento_p
                                and trunc(dt_diagnostico) = trunc(dt_diagnostico_p)
                                and trim(both cd_doenca) = trim(both cd_doenca_p);

                        commit;

                        cd_item_exp_w := 941796;

                elsif ( column_p = 'IE_DIAG_CIRURGIA' ) then

                        update diagnostico_doenca
                        set
                                ie_diag_cirurgia = 'S',
                                nm_usuario = wheb_usuario_pck.get_nm_usuario,
                                dt_atualizacao = clock_timestamp()
                        where
                                nr_atendimento = nr_atendimento_p
                                and trunc(dt_diagnostico) = trunc(dt_diagnostico_p)
                                and trim(both cd_doenca) = trim(both cd_doenca_p);

                        commit;

                        cd_item_exp_w := 941798;

                elsif ( column_p = 'IE_DIAG_OBITO' ) then

                        update diagnostico_doenca
                        set
                                ie_diag_obito = 'S',
                                nm_usuario = wheb_usuario_pck.get_nm_usuario,
                                dt_atualizacao = clock_timestamp()
                        where
                                nr_atendimento = nr_atendimento_p
                                and trunc(dt_diagnostico) = trunc(dt_diagnostico_p)
                                and trim(both cd_doenca) = trim(both cd_doenca_p);

                        commit;

                        cd_item_exp_w := 941800;

                elsif ( column_p = 'IE_DIAG_TRATAMENTO' ) then

                        update diagnostico_doenca
                        set
                                ie_diag_tratamento = 'S',
                                nm_usuario = wheb_usuario_pck.get_nm_usuario,
                                dt_atualizacao = clock_timestamp()
                        where
                                nr_atendimento = nr_atendimento_p
                                and trunc(dt_diagnostico) = trunc(dt_diagnostico_p)
                                and trim(both cd_doenca) = trim(both cd_doenca_p);

                        commit;

                        cd_item_exp_w := 857223;

                elsif ( column_p = 'IE_DIAG_PRE_CIR' ) then

                        update diagnostico_doenca
                        set
                                ie_diag_pre_cir = 'S',
                                nm_usuario = wheb_usuario_pck.get_nm_usuario,
                                dt_atualizacao = clock_timestamp()
                        where
                                nr_atendimento = nr_atendimento_p
                                and trunc(dt_diagnostico) = trunc(dt_diagnostico_p)
                                and trim(both cd_doenca) = trim(both cd_doenca_p);

                        commit;

                        cd_item_exp_w := 287710;

                elsif ( column_p = 'IE_DIAG_PRINC_DEPART' ) then

                        update diagnostico_doenca
                        set
                                ie_diag_princ_depart = 'S',
                                nm_usuario = wheb_usuario_pck.get_nm_usuario,
                                dt_atualizacao = clock_timestamp()
                        where
                                nr_atendimento = nr_atendimento_p
                                and trunc(dt_diagnostico) = trunc(dt_diagnostico_p)
                                and trim(both cd_doenca) = trim(both cd_doenca_p);

                        commit;

                        cd_item_exp_w := 941802;

                elsif ( column_p = 'IE_DIAG_PRINC_EPISODIO' ) then

                        update diagnostico_doenca
                        set
                                ie_diag_princ_episodio = 'S',
                                nm_usuario = wheb_usuario_pck.get_nm_usuario,
                                dt_atualizacao = clock_timestamp()
                        where
                                nr_atendimento = nr_atendimento_p
                                and trunc(dt_diagnostico) = trunc(dt_diagnostico_p)
                                and trim(both cd_doenca) = trim(both cd_doenca_p);

                        commit;

                        cd_item_exp_w := 856957;

                elsif ( column_p = 'IE_DIAG_TRAT_CERT' ) then

                        update diagnostico_doenca
                        set
                                ie_diag_trat_cert = 'S',
                                nm_usuario = wheb_usuario_pck.get_nm_usuario,
                                dt_atualizacao = clock_timestamp()
                        where
                                nr_atendimento = nr_atendimento_p
                                and trunc(dt_diagnostico) = trunc(dt_diagnostico_p)
                                and trim(both cd_doenca) = trim(both cd_doenca_p);

                        commit;

                        cd_item_exp_w := 941804;

                end if;

                CALL insert_atend_hist_paciente(nr_atendimento_p, 22, cd_item_exp_w, dt_diagnostico_p, cd_doenca_p, NULL, 0, NULL, 0, column_p);

        exception
                when others then

                ds_erro_w := substr(sqlerrm(SQLSTATE),1,2000);

                insert into log_atendimento(
                        dt_atualizacao,
                        nm_usuario,
                        cd_log,
                        ds_log
                ) values (
                        clock_timestamp(),
                        wheb_usuario_pck.get_nm_usuario,
                        17,
                        concat('proc undo diagnosis:', ' error: '
                                                                        || ds_erro_w
                                        )
                );

                commit;
        end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE undo_diagnosis_change ( nr_atendimento_p atendimento_paciente.nr_atendimento%type, column_p text, dt_diagnostico_p timestamp, cd_doenca_p text ) FROM PUBLIC;

