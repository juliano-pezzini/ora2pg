-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_liberar_guia ( nr_seq_guia_p bigint, nr_seq_guia_proc_p bigint, nr_seq_guia_mat_p bigint, ie_liberar_total_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ie_autoriza_glosa_web_p text, ie_gerar_senha_web_p text) AS $body$
DECLARE

 
nr_seq_guia_proc_w		bigint;
nr_seq_guia_mat_w		bigint;
cd_procedimento_w		bigint;
cd_material_w			integer;
qt_inconsistente_w		bigint := 0;
qt_reg_procedimento_w		bigint := 0;
qt_reg_material_w		bigint := 0;
qt_proc_mat_w			bigint := 0;
qt_auditoria_w			bigint := 0;
ie_status_w			varchar(1);
qt_registros_w			bigint;
qt_glosa_guia_w			bigint;
ie_status_proc_w		varchar(1);
ie_status_mat_w			varchar(1);
qt_reg_invalido_w		bigint := 0;
qt_dia_solicitado_w		integer;
qt_dia_autorizado_w		integer;
vl_parametro_w			varchar(255);
dt_validade_w			timestamp;
dt_validade_ww			varchar(30);
ie_glosa_w			varchar(1)	:= 'N';
nr_seq_atend_pls_w		bigint;
nr_seq_evento_atend_w		bigint;
dt_fim_evento_w			timestamp;
ie_tipo_processo_w		varchar(4);
cd_senha_w			varchar(20);
dt_valida_senha_w		timestamp;
qt_dias_validade_w		bigint;
nr_seq_segurado_w		bigint;
dt_solicitacao_w		timestamp;
ie_tipo_guia_w			varchar(3);
ie_autorizar_guia_glosa_w	varchar(1);
nr_seq_material_w		bigint;
ie_origem_solic_w		varchar(4);
qt_reg_lib_intercamb_w		bigint;
qt_reg_guia_w			bigint;
qt_registros_aud_w		bigint;
dt_autorizacao_w		timestamp;
qt_franquias_guia_w		integer;
nr_seq_prestador_web_w		pls_guia_plano.nr_seq_prestador_web%type;
nr_seq_perfil_web_w		pls_perfil_web.nr_sequencia%type;
qt_autorizado_w			integer := 0;

c01 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_procedimento, 
		ie_status 
	from	pls_guia_plano_proc 
	where	nr_seq_guia	= nr_seq_guia_p 
	and	coalesce(ie_liberar_total_p,'N') = 'S' 
	and	coalesce(nr_seq_motivo_exc::text, '') = '';
	
c02 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_material, 
		ie_status 
	from	pls_guia_plano_mat 
	where	nr_seq_guia	= nr_seq_guia_p 
	and	coalesce(ie_liberar_total_p,'N') = 'S' 
	and	coalesce(nr_seq_motivo_exc::text, '') = '';


BEGIN 
if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') or (coalesce(nr_seq_guia_p,0) <> 0) then 
	open c01;
	loop 
	fetch c01 into 
		nr_seq_guia_proc_w, 
		cd_procedimento_w, 
		ie_status_proc_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		qt_reg_procedimento_w	:= qt_reg_procedimento_w + 1;
		if (ie_status_proc_w = 'A') then 
			qt_auditoria_w	:= qt_auditoria_w + 1;
		elsif (ie_status_proc_w in ('N','M')) then 
			qt_inconsistente_w	:= qt_inconsistente_w + 1;
		elsif (ie_status_proc_w in ('L','S','P')) then 
			qt_autorizado_w		:= qt_autorizado_w +1;
		end if;
		end;
	end loop;
	close c01;
end if;
 
open C02;
loop 
fetch C02 into	 
	nr_seq_guia_mat_w, 
	nr_seq_material_w, 
	ie_status_mat_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
	qt_reg_material_w	:= qt_reg_material_w + 1;
	if (ie_status_mat_w = 'A') then 
		qt_auditoria_w	:= qt_auditoria_w + 1;
	elsif (ie_status_mat_w in ('N','M')) then 
		qt_inconsistente_w	:= qt_inconsistente_w + 1;
	elsif (ie_status_mat_w in ('L','S','P')) then 
		qt_autorizado_w		:= qt_autorizado_w +1;
	end if;
	end;
end loop;
close C02;
 
select	count(1) 
into STRICT	qt_glosa_guia_w 
from	pls_guia_glosa 
where	nr_seq_guia	= nr_seq_guia_p;
 
qt_proc_mat_w	:= coalesce(qt_reg_procedimento_w,0) + coalesce(qt_reg_material_w,0);
 
if (coalesce(ie_autoriza_glosa_web_p,'X') = 'X') then 
	/* Obter o valor do parâmetro 51 - Permite autorizar guias com glosas */
 
	ie_autorizar_guia_glosa_w	:= coalesce(obter_valor_param_usuario(1204, 51, Obter_Perfil_Ativo, nm_usuario_p, 0), 'N');
else 
	ie_autorizar_guia_glosa_w	:= ie_autoriza_glosa_web_p;
end if;
 
if	((qt_inconsistente_w >= qt_proc_mat_w) or ((qt_inconsistente_w > 0) and ((ie_autorizar_guia_glosa_w = 'N') or (qt_autorizado_w = 0)))) or (qt_glosa_guia_w > 0) then 
	ie_status_w	:= '3';--Negado 
elsif (qt_autorizado_w > 0) then
	ie_status_w	:= '1';--Autorizado 
else
	ie_status_w	:= '2';--Em analise 
end if;	
 
begin 
	select	ie_tipo_processo 
	into STRICT	ie_tipo_processo_w 
	from	pls_guia_plano 
	where	nr_sequencia = nr_seq_guia_p;
exception 
when others then 
	ie_tipo_processo_w := '';
end;
 
if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') and (coalesce(nr_seq_guia_p,0) <> 0) then 
	if (ie_status_w <> '3') and (qt_auditoria_w > 0) and (ie_tipo_processo_w = 'M') then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(174094);
	end if;
 
	select	qt_dia_solicitado, 
		dt_validade_senha, 
		cd_senha, 
		nr_seq_segurado, 
		dt_solicitacao, 
		ie_tipo_guia, 
		ie_origem_solic, 
		nr_seq_prestador_web 
	into STRICT	qt_dia_solicitado_w, 
		dt_valida_senha_w, 
		cd_senha_w, 
		nr_seq_segurado_w, 
		dt_solicitacao_w, 
		ie_tipo_guia_w, 
		ie_origem_solic_w, 
		nr_seq_prestador_web_w 
	from	pls_guia_plano 
	where	nr_sequencia	= nr_seq_guia_p;
		 
	if (ie_tipo_processo_w <> 'P') then 
		qt_dias_validade_w := (obter_valor_param_usuario(1204, 3, Obter_Perfil_Ativo, nm_usuario_p, 0))::numeric;
	else	 
		qt_dias_validade_w := (pls_obter_param_padrao_funcao(11, 1247))::numeric;
	end if;
 
	SELECT * FROM pls_gerar_validade_senha(nr_seq_guia_p, nr_seq_segurado_w, qt_dias_validade_w, dt_solicitacao_w, ie_tipo_guia_w, nm_usuario_p, dt_validade_ww, cd_senha_w) INTO STRICT dt_validade_ww, cd_senha_w;
					 
	dt_validade_w := to_date(dt_validade_ww, 'dd/mm/rrrr');
 
	if (ie_status_w = '1') then				 
		update	pls_guia_plano_proc 
		set	qt_autorizada	= 0 
		where	nr_seq_guia	= nr_seq_guia_p 
		and	ie_status 	= 'N';
		 
		update	pls_guia_plano_mat 
		set	qt_autorizada	= 0 
		where	nr_seq_guia	= nr_seq_guia_p 
		and	ie_status 	= 'N';
		 
	elsif (ie_status_w = '3') then 
		cd_senha_w	:= null;
		dt_validade_w	:= null;
		if (qt_dia_solicitado_w IS NOT NULL AND qt_dia_solicitado_w::text <> '') then 
			qt_dia_autorizado_w	:= 0;
		else 
			qt_dia_autorizado_w	:= null;
		end if;
		 
		update	pls_guia_plano_proc 
		set	qt_autorizada	= 0 
		where	nr_seq_guia	= nr_seq_guia_p;
		 
		update	pls_guia_plano_mat 
		set	qt_autorizada	= 0 
		where	nr_seq_guia	= nr_seq_guia_p;
		 
	end if;	
 
	if (ie_status_w	= '3') then 
		dt_autorizacao_w	:= null;
	else 
		dt_autorizacao_w	:= clock_timestamp();
	end if;
	 
	update	pls_guia_plano 
	set	ie_status		= ie_status_w, 
		dt_autorizacao		= dt_autorizacao_w, 
		dt_validade_senha	= dt_validade_w,		 
		nm_usuario		= nm_usuario_p, 
		qt_dia_autorizado	= qt_dia_autorizado_w, 
		dt_liberacao		= clock_timestamp(), 
		nm_usuario_liberacao	= nm_usuario_p, 
		cd_senha		= cd_senha_w, 
		nr_seq_motivo_lib	= CASE WHEN ie_status_w='3' THEN null  ELSE nr_seq_motivo_lib END  
	where	nr_sequencia		= nr_seq_guia_p;
	 
	select	count(1) 
	into STRICT	qt_registros_aud_w 
	from	pls_auditoria 
	where	nr_seq_guia	= nr_seq_guia_p 
	and	coalesce(dt_liberacao::text, '') = '' 
	and	ie_status	<> 'F';
 
	if (qt_registros_aud_w	> 0) then 
		update	pls_auditoria 
		set	ie_status	= 'F', 
			dt_liberacao	= clock_timestamp(), 
			dt_atualizacao	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where	nr_seq_guia	= nr_seq_guia_p;
	end if;
	 
	/* Felipe - OS 266172 - 16/11/2010 - Chamada para a atualização do estágoi da guia */
 
	CALL pls_atualizar_estagio_guia(nr_seq_guia_p, nm_usuario_p, ie_autoriza_glosa_web_p);
	 
	if (ie_status_w = '1') then 
		CALL pls_enviar_email_autorizacao(nr_seq_guia_p, 2, null, nm_usuario_p,null);
	 
		select	count(1) 
		into STRICT	qt_franquias_guia_w 
		from	pls_franquia_guia 
		where	nr_seq_guia	= nr_seq_guia_p;
				 
		if (ie_origem_solic_w	= 'P' and 
			qt_franquias_guia_w	= 0) then 
			begin 
				select	nr_seq_perfil_web 
				into STRICT	nr_seq_perfil_web_w 
				from	pls_usuario_web 
				where	nr_sequencia	= nr_seq_prestador_web_w;
			exception 
			when others then 
				nr_seq_perfil_web_w	:= null;
			end;
			 
			if (pls_obter_param_web(1247, 20, cd_estabelecimento_p, nr_seq_prestador_web_w, nr_seq_perfil_web_w, null, null, 'P', null, null) = 'S') then				 
				CALL pls_gerar_franquia_guia(nr_seq_guia_p, cd_estabelecimento_p, nm_usuario_p);
			end if;
		end if;
	end if;
	 
elsif	((nr_seq_guia_proc_p IS NOT NULL AND nr_seq_guia_proc_p::text <> '') and (coalesce(nr_seq_guia_proc_p,0) <> 0)) and (coalesce(ie_liberar_total_p,'N') = 'N') then 
	update	pls_guia_plano_proc 
	set	ie_status		= 'L', 
		dt_atualizacao		= clock_timestamp(), 
		nm_usuario		= nm_usuario_p, 
		qt_autorizada		= qt_solicitada, 
		dt_liberacao		= clock_timestamp(), 
		nm_usuario_liberacao	= nm_usuario_p 
	where	nr_sequencia		= nr_seq_guia_proc_p 
	and	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '');
	 
elsif	((nr_seq_guia_mat_p IS NOT NULL AND nr_seq_guia_mat_p::text <> '') and (coalesce(nr_seq_guia_mat_p,0) <> 0)) and (coalesce(ie_liberar_total_p,'N') = 'N') then 
	update	pls_guia_plano_mat 
	set	ie_status		= 'L', 
		dt_atualizacao		= clock_timestamp(), 
		nm_usuario		= nm_usuario_p, 
		qt_autorizada		= qt_solicitada, 
		dt_liberacao		= clock_timestamp(), 
		nm_usuario_liberacao	= nm_usuario_p 
	where	nr_sequencia		= nr_seq_guia_mat_p 
	and (nr_seq_material IS NOT NULL AND nr_seq_material::text <> '');
end if;
 
if (coalesce(nr_seq_guia_p,0) > 0) then 
	CALL pls_guia_gravar_historico(nr_seq_guia_p, 5, 'Status: ' || ie_status_w || 
		' / Auditoria: ' || qt_auditoria_w || ' / Guia proc: ' || nr_seq_guia_proc_p || 
		' / Liberar total: ' || ie_liberar_total_p, null, nm_usuario_p);
end if;
 
begin 
select	nr_seq_atend_pls, 
	nr_seq_evento_atend 
into STRICT	nr_seq_atend_pls_w, 
	nr_seq_evento_atend_w 
from	pls_guia_plano 
where	nr_sequencia = nr_seq_guia_p;
exception 
when others then 
	nr_seq_atend_pls_w := null;
end;
 
begin 
select	dt_fim_evento 
into STRICT	dt_fim_evento_w 
from	pls_atendimento_evento 
where	nr_sequencia = nr_seq_evento_atend_w;
exception 
when others then 
	dt_fim_evento_w := null;
end;
 
if (ie_status_w <> '2') and (nr_seq_atend_pls_w IS NOT NULL AND nr_seq_atend_pls_w::text <> '') and (dt_fim_evento_w IS NOT NULL AND dt_fim_evento_w::text <> '') then 
	CALL pls_finalizar_atendimento(	nr_seq_atend_pls_w, 
					nr_seq_evento_atend_w, 
					null, 
					null, 
					nm_usuario_p);
end if;
 
/* Parâmetro[29] - Ao liberar guias de intercâmbio pela regra de liberação direta, deixar o campo Senha sem preenchimento, função OPSW - Autorização */
 
if (ie_gerar_senha_web_p 	= 'S') and (ie_origem_solic_w	= 'P') and (ie_tipo_processo_w	= 'I') then 
	select	count(1) 
	into STRICT	qt_reg_guia_w 
	from	pls_guia_plano_proc 
	where	nr_seq_guia	= nr_seq_guia_p;
 
	select	count(1) 
	into STRICT	qt_reg_lib_intercamb_w 
	from	pls_guia_plano_proc 
	where	nr_seq_guia	= nr_seq_guia_p 
	and	ie_libera_intercambio	= 'S';
 
	if (qt_reg_guia_w	= qt_reg_lib_intercamb_w) then 
		update	pls_guia_plano 
		set	cd_senha		 = NULL 
		where	nr_sequencia		= nr_seq_guia_p;
	end if;
end if;
 
CALL pls_atualiza_estagio_guia_conv(nr_seq_guia_p,nm_usuario_p);
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_liberar_guia ( nr_seq_guia_p bigint, nr_seq_guia_proc_p bigint, nr_seq_guia_mat_p bigint, ie_liberar_total_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ie_autoriza_glosa_web_p text, ie_gerar_senha_web_p text) FROM PUBLIC;

