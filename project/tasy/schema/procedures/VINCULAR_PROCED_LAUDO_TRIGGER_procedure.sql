-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE vincular_proced_laudo_trigger (nr_seq_laudo_p bigint, nr_prescricao_p bigint, nr_seq_proc_p bigint, dt_liberacao_p timestamp, nm_usuario_p text) AS $body$
DECLARE



nr_laudo_proc_w			bigint	:= 0;
cd_setor_atendimento_w		integer	:= 0;
nr_seq_proced_w			bigint	:= 0;
nr_sequencia_w			bigint	:= 0;
nr_seq_prescricao_w		integer	:= 0;
ds_arquivo_w			varchar(80);
nr_prescricao_proced_w		bigint	:= 0;
nr_seq_prescr_proced_w		integer	:= 0;
nr_seq_interno_w		bigint	:= 0;
ie_vincular_tudo_w		varchar(1);

c01 CURSOR FOR
	SELECT	b.nr_sequencia,
		b.nr_prescricao,
		a.nr_sequencia
	from	procedimento_paciente b,
		prescr_procedimento a
	where	a.nr_prescricao	= nr_prescricao_p
	and	a.nr_prescricao	= b.nr_prescricao
	AND (a.nr_sequencia	= b.nr_sequencia_prescricao OR coalesce(b.nr_sequencia_prescricao::text, '') = '')
	and	b.nr_sequencia	<> nr_seq_proc_p
	and	b.cd_setor_atendimento = cd_setor_atendimento_w
	and	coalesce(b.nr_laudo::text, '') = '';


c02 CURSOR FOR
	SELECT	b.nr_sequencia
	from	procedimento_paciente b,
		prescr_proc_ditado c,
		prescr_procedimento a,
		prescr_medica d
	where	d.nr_prescricao	= nr_prescricao_p
	and	a.nr_prescricao	= d.nr_prescricao
	and	a.nr_prescricao	= b.nr_prescricao
	and	a.nr_sequencia	= b.nr_sequencia_prescricao
	and	a.nr_seq_interno= c.nr_seq_prescr_proc
	and	c.ds_arquivo	= ds_arquivo_w
	and	b.nr_sequencia	<> nr_seq_proc_p
	and	b.cd_setor_atendimento = cd_setor_atendimento_w
	and	coalesce(b.nr_laudo::text, '') = '';

c03 CURSOR FOR
	SELECT	b.nr_sequencia
	from	procedimento_paciente b,
		prescr_procedimento a,
		prescr_medica d
	where	d.nr_prescricao	= nr_prescricao_p
	and	a.nr_prescricao	= d.nr_prescricao
	and	a.nr_prescricao	= b.nr_prescricao
	and	a.nr_sequencia	= b.nr_sequencia_prescricao
	and	b.nr_sequencia	<> nr_seq_proc_p
	and	a.nr_seq_proc_princ = nr_seq_interno_w
	and	coalesce(b.nr_laudo::text, '') = '';



BEGIN

ie_vincular_tudo_w := obter_param_usuario(28, 61, obter_perfil_ativo, nm_usuario_p, 0, ie_vincular_tudo_w);

if (nr_seq_proc_p > 0) then
	begin
	select	cd_setor_atendimento,
		coalesce(nr_laudo,0),
		nr_sequencia,
		nr_sequencia_prescricao
	into STRICT	cd_setor_atendimento_w,
		nr_laudo_proc_w,
		nr_sequencia_w,
		nr_seq_prescricao_w
	from	procedimento_paciente
	where	nr_sequencia	= nr_seq_proc_p;

	select 	nr_seq_interno
	into STRICT	nr_seq_interno_w
	from	prescr_procedimento
	where	nr_sequencia = nr_seq_prescricao_w
	and	nr_prescricao = nr_prescricao_p;

	update	procedimento_paciente
	set	nr_laudo	= nr_seq_laudo_p
	where	nr_sequencia	= nr_seq_proc_p;
	if (nr_laudo_proc_w = 0) then
		CALL Atualizar_status_exec(nr_sequencia_w,nm_usuario_p);
	end if;

	begin
	select	b.ds_arquivo
	into STRICT	ds_arquivo_w
	from	prescr_proc_ditado b,
		prescr_procedimento a
	where	a.nr_prescricao	= nr_prescricao_p
	and	a.nr_sequencia	= nr_seq_prescricao_w
	and	a.nr_seq_interno= b.nr_seq_prescr_proc;
	exception
		when others then
			ds_arquivo_w	:= null;
	end;

	open	c02;
	loop
	fetch	c02 into nr_seq_proced_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		update	procedimento_paciente
		set	nr_laudo	= nr_seq_laudo_p
		where	nr_sequencia	= nr_seq_proced_w;
		CALL Atualizar_status_exec(nr_seq_proced_w,nm_usuario_p);
		end;
	end 	loop;
	close	c02;

	open	c03;
	loop
	fetch	c03 into nr_seq_proced_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		update	procedimento_paciente
		set	nr_laudo	= nr_seq_laudo_p
		where	nr_sequencia	= nr_seq_proced_w;
		CALL Atualizar_status_exec(nr_seq_proced_w,nm_usuario_p);
		end;
	end 	loop;
	close	c03;


	if (ie_vincular_tudo_w = 'S') then
		open	c01;
		loop
		fetch	c01 into nr_seq_proced_w,
				nr_prescricao_proced_w,
				nr_seq_prescr_proced_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
			begin

			update	procedimento_paciente
			set	nr_laudo	= nr_seq_laudo_p
			where	nr_sequencia	= nr_seq_proced_w;

			if (dt_liberacao_p IS NOT NULL AND dt_liberacao_p::text <> '') then

				Update	prescr_procedimento
				set	ie_status_execucao	= 40,
					nm_usuario	= nm_usuario_p,
					dt_atualizacao = clock_timestamp()
				where	nr_prescricao		= nr_prescricao_proced_w
				and	nr_sequencia		= nr_seq_prescr_proced_w;

			else
				CALL Atualizar_status_exec(nr_seq_proced_w,nm_usuario_p);
			end if;
			end;
		end 	loop;
		close	c01;
	end if;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vincular_proced_laudo_trigger (nr_seq_laudo_p bigint, nr_prescricao_p bigint, nr_seq_proc_p bigint, dt_liberacao_p timestamp, nm_usuario_p text) FROM PUBLIC;

