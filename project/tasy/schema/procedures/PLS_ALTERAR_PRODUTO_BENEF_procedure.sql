-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_alterar_produto_benef ( nr_seq_contrato_p bigint, nr_seq_segurado_p bigint, nr_seq_plano_p bigint, nr_seq_tabela_p bigint, ie_tipo_alteracao_p text, cd_estabelecimento_p bigint, nm_usuario_p text, dt_geracao_sib_p timestamp, nr_seq_motivo_alt_p bigint, ie_permite_tab_dif_p text, ie_consiste_tab_contr_p text, ie_gerar_cartao_p text, ie_gerar_via_adic_p text, ie_copiar_carencia_prod_novo_p text, nr_seq_motivo_via_adic_p bigint, nr_seq_inclusao_benef_p bigint, ie_commit_p text) AS $body$
DECLARE


/*	ie_tipo_alteracao_p
	B - Alterar para o beneficiario selecionado
	D - Alterar para o beneficiario selecionado e seus dependentes
	T - Alterar para todos os beneficiarios do contrato
*/
ie_tipo_alteracao_w		varchar(1);
ie_tabela_base_w		varchar(1);
qt_registros_w			bigint;
ie_preco_w			varchar(2);
dt_inativacao_w			timestamp;
ie_produto_diferente_w		varchar(10);
nr_seq_carteira_w		bigint;
nr_seq_contrato_plano_w		bigint;
ie_gerar_alerta_w		varchar(10);
nm_plano_novo_w			varchar(255);
ie_regulamentacao_novo_w	varchar(10);
ds_observacao_w			varchar(255);
nr_seq_alt_plano_w		pls_segurado_alt_plano.nr_sequencia%type;
nr_seq_tabela_w			pls_tabela_preco.nr_sequencia%type;
nr_seq_alteracao_produto_w	pls_segurado_alt_plano.nr_sequencia%type;
ds_erro_prod_dif_w		varchar(4000);

c01 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_segurado,
		a.nr_seq_tabela nr_seq_tabela_ant,
		a.nr_seq_plano nr_seq_plano_ant,
		substr(pls_obter_dados_produto(a.nr_seq_plano,'N'),1,255) ds_plano_ant,
		substr(pls_obter_dados_produto(a.nr_seq_plano,'R'),1,10) ie_regulamentacao_ant,
		pls_obter_se_benef_remido(a.nr_sequencia, clock_timestamp()) ie_remido,
		a.nr_seq_titular,
		(SELECT	max(x.nr_contrato)
		from	pls_contrato x
		where	x.nr_sequencia = a.nr_seq_contrato) nr_contrato
	from	(select	nr_sequencia,
			nr_seq_titular,
			nr_seq_tabela,
			nr_seq_plano,
			nr_seq_contrato
		from	pls_segurado
		where	nr_sequencia	= nr_seq_segurado_p
		and	ie_tipo_alteracao_w	= 'B'
		
union all

		select	nr_sequencia,
			nr_seq_titular,
			nr_seq_tabela,
			nr_seq_plano,
			nr_seq_contrato
		from	pls_segurado
		where	nr_seq_contrato		= nr_seq_contrato_p
		and	ie_tipo_alteracao_w	= 'T'
		and	((coalesce(dt_rescisao::text, '') = '') or (dt_rescisao > dt_geracao_sib_p))
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		
union all

		select	nr_sequencia,
			nr_seq_titular,
			nr_seq_tabela,
			nr_seq_plano,
			nr_seq_contrato
		from	pls_segurado
		where	((nr_sequencia	= nr_seq_segurado_p)
		or (nr_seq_titular	= nr_seq_segurado_p))
		and	((coalesce(dt_rescisao::text, '') = '') or (dt_rescisao > dt_geracao_sib_p))
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	ie_tipo_alteracao_w	= 'D') a
	order by
		a.nr_seq_titular desc;

BEGIN
nr_seq_tabela_w	:= null;
ie_tipo_alteracao_w	:= coalesce(ie_tipo_alteracao_p,'X');
ie_produto_diferente_w	:= coalesce(obter_valor_param_usuario(1202, 65, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p),'S');
ie_gerar_alerta_w	:= coalesce(obter_valor_param_usuario(1202, 121, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p),'N');

if (coalesce(nr_seq_motivo_alt_p,0) = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(191799, null); --Informe o motivo de alteracao do produto!
end if;

if (coalesce(nr_seq_plano_p,0) = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(191800, null); --Produto nao informado. Verifique!
end if;

if (coalesce(nr_seq_tabela_p,0) <> 0) then
	nr_seq_tabela_w	:= nr_seq_tabela_p;
end if;

select	ie_preco,
	ie_regulamentacao,
	ds_plano
into STRICT	ie_preco_w,
	ie_regulamentacao_novo_w,
	nm_plano_novo_w
from	pls_plano
where	nr_sequencia	= nr_seq_plano_p;

select	max(nr_sequencia)
into STRICT	nr_seq_contrato_plano_w
from	pls_contrato_plano
where	nr_seq_contrato	= nr_seq_contrato_p
and	nr_seq_plano	= nr_seq_plano_p
and	coalesce(nr_seq_tabela,nr_seq_tabela_w)	= nr_seq_tabela_w;

if (nr_seq_contrato_plano_w IS NOT NULL AND nr_seq_contrato_plano_w::text <> '') then
	select	max(dt_inativacao)
	into STRICT	dt_inativacao_w
	from	pls_contrato_plano
	where	nr_sequencia	= nr_seq_contrato_plano_w;
else
	dt_inativacao_w	:= null;
end if;

if (ie_preco_w in ('1','4')) then
	if (coalesce(nr_seq_tabela_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(191801, null); --Tabela nao informada para o produto. Verifique!
	end if;
	
	select	count(1)
	into STRICT	qt_registros_w
	from	pls_tabela_preco
	where	nr_seq_plano	= nr_seq_plano_p
	and	nr_sequencia	= nr_seq_tabela_w;
	
	if (qt_registros_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(191802, null); --Tabela de preco nao pertence ao produto selecionado. Verifique!
	end if;
	
	select	ie_tabela_base
	into STRICT	ie_tabela_base_w
	from	pls_tabela_preco
	where	nr_sequencia	= nr_seq_tabela_w;
	
	if (ie_tabela_base_w = 'S') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 191803, null); --Tabela e base por percentual ou base por contrato. Nao pode ser utilizada!
	end if;
end if;

CALL pls_consiste_data_sib(dt_geracao_sib_p, nm_usuario_p, cd_estabelecimento_p);

if (dt_geracao_sib_p > coalesce(dt_inativacao_w,dt_geracao_sib_p)) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort( 191804, 'DT_INATIVACAO=' || to_char(dt_inativacao_w,'dd/mm/yyy') );
	--O produto esta inativo para o contrato na data ' || to_char(dt_inativacao_w,'dd/mm/yyy') ||'. Verifique!
end if;

if (ie_tipo_alteracao_w = 'T' and coalesce(nr_seq_contrato_p,0) <> 0) or (ie_tipo_alteracao_w = 'D' and coalesce(nr_seq_segurado_p,0) <> 0) or (ie_tipo_alteracao_w = 'B' and coalesce(nr_seq_segurado_p,0) <> 0) then
	if (ie_tipo_alteracao_w = 'T') then
		ds_observacao_w	:= wheb_mensagem_pck.get_texto(1105643);
	elsif (ie_tipo_alteracao_w = 'D') then
		ds_observacao_w	:= wheb_mensagem_pck.get_texto(1105644);
	else
		ds_observacao_w	:= wheb_mensagem_pck.get_texto(1105647);
	end if;
	
	for r_c01_w in C01 loop
		begin
		if (nr_seq_plano_p = r_c01_w.nr_seq_plano_ant) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1109071,'DS_PRODUTO='||r_c01_w.nr_seq_plano_ant||'-'||substr(pls_obter_dados_produto(r_c01_w.nr_seq_plano_ant, 'N'),1,255)||
									';NM_BENEFICIARIO='||pls_obter_dados_produto(r_c01_w.nr_seq_segurado, 'N'));
		end if;
		
		if (r_c01_w.ie_remido = 'S') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1105652);
		end if;	

		if (ie_tipo_alteracao_p = 'B') then
			ds_erro_prod_dif_w := pls_consistir_produto_diferent(	r_c01_w.nr_seq_segurado, r_c01_w.nr_seq_titular, r_c01_w.nr_contrato, nr_seq_plano_p, ie_produto_diferente_w, dt_geracao_sib_p, 'N', nm_usuario_p, cd_estabelecimento_p, ds_erro_prod_dif_w);
		end if;
		
		update	pls_segurado
		set	nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			nr_seq_plano	= nr_seq_plano_p,
			nr_seq_tabela	= nr_seq_tabela_w
		where	nr_sequencia	= r_c01_w.nr_seq_segurado;
		
		CALL pls_gerar_valor_segurado(null, r_c01_w.nr_seq_segurado, 'P',
			cd_estabelecimento_p, nm_usuario_p, 'S',
			dt_geracao_sib_p, ie_permite_tab_dif_p, ie_consiste_tab_contr_p,
			ie_gerar_cartao_p, 'N');
		
		select	nextval('pls_segurado_alt_plano_seq')
		into STRICT	nr_seq_alteracao_produto_w
		;
		
		insert into pls_segurado_alt_plano(nr_sequencia, nm_usuario, dt_atualizacao,
			nr_seq_segurado, nr_seq_plano_ant, nr_seq_plano_atual,
			nr_seq_tabela_ant, nr_seq_tabela_atual, dt_alteracao,
			nr_seq_motivo_alt, ds_observacao,
			ie_regulamentacao_ant, ie_regulamentacao_atual, nr_seq_inclusao_benef,
			ie_situacao)
		values (nr_seq_alteracao_produto_w, nm_usuario_p, clock_timestamp(),
			r_c01_w.nr_seq_segurado, r_c01_w.nr_seq_plano_ant, nr_seq_plano_p,
			r_c01_w.nr_seq_tabela_ant, nr_seq_tabela_w, dt_geracao_sib_p,
			nr_seq_motivo_alt_p, ds_observacao_w,
			r_c01_w.ie_regulamentacao_ant,ie_regulamentacao_novo_w, nr_seq_inclusao_benef_p,
			'A')
			returning nr_sequencia into nr_seq_alt_plano_w;
		
		CALL pls_inativar_alteracao_produto(r_c01_w.nr_seq_segurado, nr_seq_alteracao_produto_w, dt_geracao_sib_p, 'N', nm_usuario_p);
		
		CALL pls_gerar_segurado_historico(r_c01_w.nr_seq_segurado, '4', clock_timestamp(),
					wheb_mensagem_pck.get_texto(1105646,'DS_PLANO_ANT='|| r_c01_w.nr_seq_plano_ant || ' ' || r_c01_w.ds_plano_ant ||';DS_PLANO_NOVO='|| nr_seq_plano_p || ' ' || substr(pls_obter_dados_produto(nr_seq_plano_p,'N'),1,255)),
					ds_observacao_w||' - Objeto=pls_alterar_produto_benef',
					null, null, null,
					null, dt_geracao_sib_p, null,
					null, null, null,
					null, null, nm_usuario_p, 'N');
		
		CALL pls_alerta_alteracao_plano(nr_seq_alt_plano_w, r_c01_w.nr_seq_segurado, nm_usuario_p, 'N');
		
		CALL pls_atualiza_segurado_status(r_c01_w.nr_seq_segurado, 4, dt_geracao_sib_p, null, null, nr_seq_alt_plano_w, nm_usuario_p, cd_estabelecimento_p,'N');
		
		CALL pls_gerar_lanc_automatico(r_c01_w.nr_seq_segurado, 1, 'A',
					ie_copiar_carencia_prod_novo_p, '', nm_usuario_p,
					cd_estabelecimento_p);

		if (ie_gerar_via_adic_p = 'S') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_carteira_w
			from	pls_segurado_carteira
			where	nr_seq_segurado	= r_c01_w.nr_seq_segurado;
			
			CALL pls_gerar_via_carteira(nr_seq_carteira_w,nr_seq_motivo_via_adic_p,nm_usuario_p,1202,'M','N');
		end if;

		if (ie_gerar_alerta_w = 'S') and (dt_geracao_sib_p > clock_timestamp()) then
			CALL pls_gerar_alerta_alt_prod(r_c01_w.nr_seq_segurado,r_c01_w.ds_plano_ant,nm_plano_novo_w,dt_geracao_sib_p,nm_usuario_p);
		end if;

		CALL pls_gerar_regra_alt_acomod(r_c01_w.nr_seq_segurado,r_c01_w.nr_seq_plano_ant,dt_geracao_sib_p,'A',cd_estabelecimento_p,nm_usuario_p);
		
		CALL pls_gerar_devolucao_alt_plano(nr_seq_alt_plano_w, 'N', nm_usuario_p, cd_estabelecimento_p);
		end;
	end loop; --C01
end if;

if (coalesce(ie_commit_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_alterar_produto_benef ( nr_seq_contrato_p bigint, nr_seq_segurado_p bigint, nr_seq_plano_p bigint, nr_seq_tabela_p bigint, ie_tipo_alteracao_p text, cd_estabelecimento_p bigint, nm_usuario_p text, dt_geracao_sib_p timestamp, nr_seq_motivo_alt_p bigint, ie_permite_tab_dif_p text, ie_consiste_tab_contr_p text, ie_gerar_cartao_p text, ie_gerar_via_adic_p text, ie_copiar_carencia_prod_novo_p text, nr_seq_motivo_via_adic_p bigint, nr_seq_inclusao_benef_p bigint, ie_commit_p text) FROM PUBLIC;

