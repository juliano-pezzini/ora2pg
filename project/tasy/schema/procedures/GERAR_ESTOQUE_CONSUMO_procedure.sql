-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_estoque_consumo ( dt_inicial_p timestamp, dt_final_p timestamp, cd_local_estoque_p bigint, cd_grupo_material_p bigint, cd_estabelecimento_p bigint, ie_opcao_p bigint, ie_movimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

cd_material_w			integer;
ds_material_w			varchar(255);
ds_grupo_material_w		varchar(255);
cd_grupo_material_w		smallint;
cd_local_estoque_w		smallint;
cd_estabelecimento_w		smallint;
vl_saldo_inicial_w			double precision;
vl_compra_w			double precision;
vl_consumo_w			double precision;
vl_prescricao_w			double precision;
vl_devolucao_w			double precision;
vl_acrescimo_w			double precision;
vl_decrescimo_W			double precision;
vl_saldo_final_w			double precision;
ie_coluna_resumo_w		varchar(1);
vl_estoque_w			double precision;
ie_entrada_saida_w			varchar(01);
nr_sequencia_w			bigint;
ie_gravar_w			varchar(1);
C01 CURSOR FOR
	SELECT	distinct a.cd_material,
		e.ds_material,
		e.ds_grupo_material,
		e.cd_grupo_material
	from	estrutura_material_v e,
		saldo_estoque a
	where	a.cd_material = e.cd_material
	and	a.dt_mesano_referencia	between dt_inicial_p and dt_final_p
	and	a.cd_estabelecimento = cd_estabelecimento_p
	and	a.cd_local_estoque = CASE WHEN coalesce(cd_local_estoque_p,0)=0 THEN  a.cd_local_estoque  ELSE cd_local_estoque_p END
	and	e.cd_grupo_material = CASE WHEN coalesce(cd_grupo_material_p,0)=0 THEN  e.cd_grupo_material  ELSE cd_grupo_material_p END;

C02 CURSOR FOR
	SELECT	a.cd_estabelecimento,
		o.ie_entrada_saida,
		coalesce(o.ie_coluna_resumo,CASE WHEN o.ie_entrada_saida='E' THEN  'A'  ELSE 'D' END ),
		sum(coalesce(a.vl_estoque,0))
	from	operacao_estoque o,
		resumo_movto_estoque a
	where	a.cd_material		= cd_material_w
	and	a.cd_operacao_estoque	= o.cd_operacao_estoque
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	a.dt_mesano_referencia	between dt_inicial_p and dt_final_p
	and	a.cd_local_estoque	= CASE WHEN coalesce(cd_local_estoque_p,0)=0 THEN  a.cd_local_estoque  ELSE cd_local_estoque_p END
	and (1				= ie_opcao_p)
	and (	(ie_movimento_p		= 2)
	   		or (ie_movimento_p		= 0 AND a.ie_consignado = 'N')
			or (ie_movimento_p		= 1 AND a.ie_consignado = 'S'))
	group by a.cd_estabelecimento,
		o.ie_entrada_saida,
		o.ie_coluna_resumo,
		o.ie_entrada_saida
	
union all

	SELECT	a.cd_estabelecimento,
		o.ie_entrada_saida,
		coalesce(o.ie_coluna_resumo,CASE WHEN o.ie_entrada_saida='E' THEN  'A'  ELSE 'D' END ),
		sum(coalesce(a.qt_estoque,0))
	from	operacao_estoque o,
		resumo_movto_estoque a
	where	a.cd_material = cd_material_w
	  and	a.cd_operacao_estoque = o.cd_operacao_estoque
	  and	a.cd_estabelecimento = cd_estabelecimento_p
	  and	a.dt_mesano_referencia	between dt_inicial_p and dt_final_p
	  and	a.cd_local_estoque = CASE WHEN coalesce(cd_local_estoque_p,0)=0 THEN  a.cd_local_estoque  ELSE cd_local_estoque_p END 
	  and (2				= ie_opcao_p)
	  and (	(ie_movimento_p		= 2)
	   		or (ie_movimento_p		= 0 AND a.ie_consignado = 'N')
			or (ie_movimento_p		= 1 AND a.ie_consignado = 'S'))
	group by a.cd_estabelecimento,
		o.ie_entrada_saida,
		o.ie_coluna_resumo,
		o.ie_entrada_saida;

BEGIN
DELETE FROM W_ESTOQUE_CONSUMO;
OPEN C01;
LOOP
	FETCH C01 INTO
		cd_material_w,
		ds_material_w,
		ds_grupo_material_w,
		cd_grupo_material_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	sum(coalesce(CASE WHEN ie_opcao_p=1 THEN  a.vl_estoque  ELSE a.qt_estoque END ,0))
	into STRICT	vl_saldo_inicial_w
	from	saldo_estoque a
	where	a.dt_mesano_referencia = PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_inicial_p, 'MONTH', 0), - 1,0)
	and	a.cd_material = cd_material_w
	and	a.cd_estabelecimento = cd_estabelecimento_p
	and	a.cd_local_estoque = CASE WHEN coalesce(cd_local_estoque_p,0)=0 THEN  a.cd_local_estoque  ELSE cd_local_estoque_p END;
	end;
	vl_compra_w	:= 0;
	vl_consumo_w	:= 0;
	vl_prescricao_w	:= 0;
	vl_devolucao_w	:= 0;
	vl_acrescimo_w	:= 0;
	vl_decrescimo_w	:= 0;
	ie_gravar_w		:= 'N';
	OPEN C02;
	LOOP
		FETCH C02 INTO
			cd_estabelecimento_w,
			ie_entrada_saida_w,
			ie_coluna_resumo_w,
			vl_estoque_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		ie_gravar_w		:= 'S';
		if (ie_entrada_saida_w = 'E') then
			if (ie_coluna_resumo_w	= 'C') then
				vl_compra_w		:= vl_compra_w + vl_estoque_w;
			elsif (ie_coluna_resumo_w	= 'U') then
				vl_consumo_w		:= vl_consumo_w + vl_estoque_w * -1;
			elsif (ie_coluna_resumo_w	= 'P') then
				vl_prescricao_w	:= vl_prescricao_w + vl_estoque_w * -1;
			elsif (ie_coluna_resumo_w	= 'V') then
				vl_devolucao_w	:= vl_devolucao_w + vl_estoque_w * -1;
			elsif (ie_coluna_resumo_w	= 'A') then
				vl_acrescimo_w	:= vl_acrescimo_w + vl_estoque_w;
			elsif (ie_coluna_resumo_w	= 'D') then
				vl_decrescimo_w	:= vl_decrescimo_w + vl_estoque_w * -1;
			end if;
		else
			if (ie_coluna_resumo_w	= 'C') then
				vl_compra_w		:= vl_compra_w + vl_estoque_w  * -1;
			elsif (ie_coluna_resumo_w	= 'U') then
				vl_consumo_w		:= vl_consumo_w + vl_estoque_w;
			elsif (ie_coluna_resumo_w	= 'P') then
				vl_prescricao_w	:= vl_prescricao_w + vl_estoque_w;
			elsif (ie_coluna_resumo_w	= 'V') then
				vl_devolucao_w	:= vl_devolucao_w + vl_estoque_w;
			elsif (ie_coluna_resumo_w	= 'A') then
				vl_acrescimo_w	:= vl_acrescimo_w + vl_estoque_w * -1;
			elsif (ie_coluna_resumo_w	= 'D') then
				vl_decrescimo_w	:= vl_decrescimo_w + vl_estoque_w;
			end if;
		end if;
		end;
	END LOOP;
	CLOSE C02;
	if (ie_gravar_w = 'S') then
		vl_saldo_final_w	:= coalesce(vl_saldo_inicial_w,0) + coalesce(vl_compra_w,0) - coalesce(vl_consumo_w,0) -
					coalesce(vl_prescricao_w,0) - coalesce(vl_devolucao_w,0) + coalesce(vl_acrescimo_w,0) -
					coalesce(vl_decrescimo_w,0);
		select nextval('w_estoque_consumo_seq')
		into STRICT	nr_sequencia_w
		;
		INSERT INTO W_ESTOQUE_CONSUMO(
				nr_sequencia,
				cd_material,
				dt_atualizacao,
				nm_usuario,
				ds_material,
				ds_grupo_material,
				cd_grupo_material,
				cd_estabelecimento,
				vl_saldo_inicial,
				vl_compra,
				vl_consumo,
				vl_prescricao,
				vl_devolucao,
				vl_acrescimo,
				vl_decrescimo,
				vl_saldo_final)
			values (nr_sequencia_w,
				cd_material_w,
				clock_timestamp(),
				nm_usuario_p,
				substr(ds_material_w,1,100),
				substr(ds_grupo_material_w,1,60),
				cd_grupo_material_w,
				cd_estabelecimento_w,
				vl_saldo_inicial_w,
				vl_compra_w,
				vl_consumo_w,
				vl_prescricao_w,
				vl_devolucao_w,
				vl_acrescimo_w,
				vl_decrescimo_w,
				vl_saldo_final_w);
	end if;
END LOOP;
CLOSE C01;
COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_estoque_consumo ( dt_inicial_p timestamp, dt_final_p timestamp, cd_local_estoque_p bigint, cd_grupo_material_p bigint, cd_estabelecimento_p bigint, ie_opcao_p bigint, ie_movimento_p bigint, nm_usuario_p text) FROM PUBLIC;

