-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intpd_validar_integracao ( nr_seq_evento_p bigint, nr_seq_projeto_xml_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finality:
---------------------------------------------------------------------------------------------------
Direct calls:
[ X ]  Object dictionary [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Reports [ ] Others:
---------------------------------------------------------------------------------------------------
Attention points:
---------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
c_evento CURSOR FOR
	SELECT	nr_sequencia,
		ie_evento,
		nr_seq_projeto_xml,
		substr(obter_valor_dominio(8187,ie_evento),1,255) ds_evento
	from	intpd_config_eventos
	where	((nr_sequencia	= nr_seq_evento_p) or (coalesce(nr_seq_evento_p::text, '') = ''));

c_evento_w	c_evento%rowtype;

ds_cabecalho_w		xml_projeto.ds_cabecalho%type;
ds_projeto_w		xml_projeto.ds_projeto%type;

nr_seq_elemento_w		xml_elemento.nr_sequencia%type;
nm_elemento_w		xml_elemento.nm_elemento%type;

c_atributo CURSOR FOR
	SELECT	nr_sequencia,
		nm_atributo_xml,
		ie_tipo_atributo,
		ie_obrigatorio,
		ie_criar_nulo
	from	xml_atributo a
	where	nr_seq_elemento = nr_seq_elemento_w
	and	coalesce(nr_seq_atrib_elem::text, '') = '';

c_atributo_w	c_atributo%rowtype;

ie_event_w		varchar(1);
ie_application_w		varchar(1);
ie_origin_w		varchar(1);
qt_existe_tabela_w		integer;
qt_existe_w		integer;


c_elemento_action CURSOR FOR
	SELECT	b.nm_elemento,
		b.nr_sequencia
	from	xml_atributo a,
		xml_elemento b
	where	a.nr_seq_atrib_elem  = b.nr_sequencia
	and	a.nr_seq_elemento = nr_seq_elemento_w
	and	(a.nr_seq_atrib_elem IS NOT NULL AND a.nr_seq_atrib_elem::text <> '')
	and	not exists (
		SELECT	1
		from	xml_atributo x
		where	x.nr_seq_elemento = b.nr_sequencia
		and	x.nm_atributo_xml = 'IE_ACTION');

c_elemento_action_w	c_elemento_action%rowtype;

c_elemento CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nm_elemento,
		a.ds_elemento
	from	xml_elemento a
	where	a.nr_seq_projeto = c_evento_w.nr_seq_projeto_xml
	order by a.nr_seq_apresentacao;

c_elemento_w	c_elemento%rowtype;

c_atributos CURSOR FOR
	SELECT	a.nm_atributo_xml,
		a.ie_tipo_atributo,
		a.ds_mascara,
		a.nm_atributo,
		a.nm_tabela_def_banco,
		a.ie_criar_nulo,
		a.nr_sequencia
	from	xml_atributo a
	where	a.nr_seq_elemento = c_elemento_w.nr_sequencia
	and	coalesce(a.nr_seq_atrib_elem::text, '') = ''
	order by a.nr_seq_apresentacao;

c_atributos_w	c_atributos%rowtype;



BEGIN
delete FROM w_intpd_ajuste;

open c_evento;
loop
fetch c_evento into
	c_evento_w;
EXIT WHEN NOT FOUND; /* apply on c_evento */
	begin
	if (coalesce(c_evento_w.nr_seq_projeto_xml::text, '') = '') then
		--gravar_w_intpd_ajustes( nr_seq_evento_p, ds_evento_p, nr_seq_projeto_xml_p, ds_projeto_xml_p, ds_elemento_xml_p, ds_atributo_xml_p, ds_ajuste_p, qt_minuto_p );
		CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, null, null, null, 180, 'N', 0, '1');
	else
		begin
		select	ds_cabecalho,
			ds_projeto
		into STRICT	ds_cabecalho_w,
			ds_projeto_w
		from	xml_projeto
		where	nr_sequencia = c_evento_w.nr_seq_projeto_xml;

		if (coalesce(ds_cabecalho_w,'NULL') = 'NULL') then
			CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, null, null, 5, 'N', 0, '2');
			--gravar_w_intpd_ajustes( c_evento_w.nr_sequencia, c_evento_w.ds_evento, c_evento_w.nr_seq_projeto_xml, ds_projeto_w, null, null, 'Projeto XML sem cabeçalho informado', 5, 'N');
		end if;

		if	(ds_projeto_w not like 'Philips Standard Receiving - %' AND ds_projeto_w not like 'Philips Standard Sending - %') then
			CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, null, null, 5, 'N', 0, '3');
			--gravar_w_intpd_ajustes( c_evento_w.nr_sequencia, c_evento_w.ds_evento, c_evento_w.nr_seq_projeto_xml, ds_projeto_w, null, null, 'Projeto XML com descrição não padronizada', 5, 'N');
		end if;

		begin
		select	a.nr_sequencia,
			a.nm_elemento
		into STRICT	nr_seq_elemento_w,
			nm_elemento_w
		from	xml_elemento a
		where	nr_seq_projeto = c_evento_w.nr_seq_projeto_xml
		and	not exists (
			SELECT	1
			from	xml_atributo x
			where	x.nr_seq_atrib_elem  = a.nr_sequencia);
		exception
		when others then
			nm_elemento_w		:=	'NULL';
			nr_seq_elemento_w	:=	null;
		end;

		ie_event_w		:=	'N';
		ie_application_w	:=	'N';
		ie_origin_w		:=	'N';

		if (nm_elemento_w <> 'STRUCTURE') then
			CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, null, null, 60, 'N', 0, '4');
		else
			begin
			ie_event_w	:=	'N';
			ie_application_w	:=	'N';
			ie_origin_w	:=	'N';

			open c_atributo;
			loop
			fetch c_atributo into
				c_atributo_w;
			EXIT WHEN NOT FOUND; /* apply on c_atributo */
				begin
				if (c_atributo_w.nm_atributo_xml = 'ID_EVENT') then
					ie_event_w	:=	'S';
				elsif (c_atributo_w.nm_atributo_xml = 'ID_APPLICATION') then
					ie_application_w	:=	'S';
				elsif (c_atributo_w.nm_atributo_xml = 'ID_ORIGIN') then
					ie_origin_w	:=	'S';

					if (c_atributo_w.ie_obrigatorio = 'S') then
						CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, null, c_atributo_w.nr_sequencia, 10, 'S', 0, '22');
					end if;
				else
					CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, null, c_atributo_w.nr_sequencia, 10, 'S', 0, '5');
				end if;
				end;
			end loop;
			close c_atributo;

			if (ie_event_w = 'N') then
				CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, null, null, 10, 'N', 0, '6');
			end if;

			if (ie_application_w = 'N') then
				CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, null, null, 10, 'N', 0, '7');
			end if;

			if (ie_origin_w = 'N') then
				CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, null, null, 10, 'N', 0, '8');
			end if;

			open c_elemento_action;
			loop
			fetch c_elemento_action into
				c_elemento_action_w;
			EXIT WHEN NOT FOUND; /* apply on c_elemento_action */
				CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, c_elemento_action_w.nr_sequencia, null, 10, 'N', 0, '9');
			end loop;
			close c_elemento_action;
			end;
		end if;

		open c_elemento;
		loop
		fetch c_elemento into
			c_elemento_w;
		EXIT WHEN NOT FOUND; /* apply on c_elemento */
			begin
			if (upper(c_elemento_w.nm_elemento) <> c_elemento_w.nm_elemento) then
				CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, c_elemento_w.nr_sequencia, null, 2, 'S', 0, '10');
			end if;

			if (upper(c_elemento_w.ds_elemento) <> 'STRUCTURE') then
				begin
				select	1
				into STRICT	qt_existe_w
				from	tabela_sistema
				where	nm_tabela = upper(c_elemento_w.ds_elemento)  LIMIT 1;
				exception
				when others then
					CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, c_elemento_w.nr_sequencia, null, 2, 'N', 0, '11');
				end;
			end if;

			open c_atributos;
			loop
			fetch c_atributos into
				c_atributos_w;
			EXIT WHEN NOT FOUND; /* apply on c_atributos */
				begin
				/*
				a.nm_atributo_xml,
				a.ie_tipo_atributo,
				a.ds_mascara
				*/
				if (upper(c_atributos_w.nm_atributo_xml) <> c_atributos_w.nm_atributo_xml) then
					CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, c_elemento_w.nr_sequencia, c_atributos_w.nr_sequencia, 5, 'S', 0, '12');
				end if;

				if (upper(substr(c_atributos_w.nm_atributo_xml,1,3)) not in ('QT_','VL_','TX_','DS_','NM_','ID_','PR_','CD_','DT_','IE_','NR_','HR_','SG_','UF_')) then
					CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, c_elemento_w.nr_sequencia, c_atributos_w.nr_sequencia, 5, 'N', 0, '13');
				elsif (upper(substr(c_atributos_w.nm_atributo_xml,1,3)) in ('QT_','VL_','TX_','PR_')) then
					begin
					if (upper(coalesce(c_atributos_w.ds_mascara,'X')) not like '#%') then
						CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, c_elemento_w.nr_sequencia, c_atributos_w.nr_sequencia, 5, 'S', 0, '14');
					else
						begin
						if (coalesce(c_atributos_w.ie_tipo_atributo,'X') not in ('NUMBER')) then
							CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, c_elemento_w.nr_sequencia, c_atributos_w.nr_sequencia, 5, 'S', 0, '15');
						end if;

						if (upper(coalesce(c_atributos_w.ds_mascara,'X')) like '%.%') and (upper(coalesce(c_atributos_w.ds_mascara,'X')) not like '%0.0%') then
							CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, c_elemento_w.nr_sequencia, c_atributos_w.nr_sequencia, 5, 'S', 0, '17');
						end if;

						if (upper(coalesce(c_atributos_w.ds_mascara,'X')) like '%,%') then
							CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, c_elemento_w.nr_sequencia, c_atributos_w.nr_sequencia, 5, 'S', 0, '18');
						end if;
						end;
					end if;
					end;
				elsif	((upper(substr(c_atributos_w.nm_atributo_xml,1,3)) = 'DT_') or (c_atributos_w.ie_tipo_atributo = 'DATE')) and (upper(coalesce(c_atributos_w.ds_mascara,'X')) not in ('YYYYMMDDHHMISS','YYYYMMDD')) then
					CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, c_elemento_w.nr_sequencia, c_atributos_w.nr_sequencia, 5, 'S', 0, '19');
				end if;

				if (coalesce(c_atributos_w.ie_criar_nulo,'X') <> 'S') then
					CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, c_elemento_w.nr_sequencia, c_atributos_w.nr_sequencia, 5, 'S', 0, 'M');
				end if;

				if (upper(c_elemento_w.ds_elemento) <> 'STRUCTURE') and (upper(c_atributos_w.nm_atributo_xml) not in ('IE_ACTION')) then
					begin
					select	1
					into STRICT	qt_existe_w
					from	tabela_atributo
					where	nm_tabela = upper(coalesce(c_atributos_w.nm_tabela_def_banco,c_elemento_w.ds_elemento))
					and	nm_atributo = upper(c_atributos_w.nm_atributo)  LIMIT 1;
					exception
					when others then
						CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, c_elemento_w.nr_sequencia, c_atributos_w.nr_sequencia, 2, 'N', 0, '20');
					end;
				end if;
				end;
			end loop;
			close c_atributos;
			end;
		end loop;
		close c_elemento;

		exception
		when others then
			CALL gravar_w_intpd_ajuste( c_evento_w.nr_sequencia, c_evento_w.nr_seq_projeto_xml, null, null, 180, 'N', 0, '21');
		end;
	end if;

	end;
end loop;
close c_evento;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intpd_validar_integracao ( nr_seq_evento_p bigint, nr_seq_projeto_xml_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

