-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consist_cancel_rec_mens ( nr_seq_lote_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_cancel_mens_w	bigint;
nr_seq_mensalidade_w	bigint;
nr_ttulo_w		bigint;
ie_situacao_w		varchar(1);
qt_inconsistencia_w	bigint;
ie_inconsistente_w	varchar(1);

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_mensalidade
	from	pls_cancel_rec_mensalidade
	where	nr_seq_lote	= nr_seq_lote_p;


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_cancel_mens_w,
	nr_seq_mensalidade_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	delete	FROM pls_cancel_rec_mens_incons
	where	nr_seq_mens_cancel	= nr_seq_cancel_mens_w;

	select	max(nr_titulo)
	into STRICT	nr_ttulo_w
	from	titulo_receber
	where	nr_seq_mensalidade	= nr_seq_mensalidade_w;

	select	ie_situacao
	into STRICT	ie_situacao_w
	from	titulo_receber
	where	nr_titulo	= nr_ttulo_w;

	if (ie_situacao_w = '3') then /* Cancelado */
		insert	into	pls_cancel_rec_mens_incons(	nr_sequencia, nr_seq_mens_cancel, nr_seq_inconsistencia,
				dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec)
			values (	nextval('pls_cancel_rec_mens_incons_seq'), nr_seq_cancel_mens_w, 2,
				clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p);
		ie_inconsistente_w	:= 'S';
	elsif (ie_situacao_w = '2') then /* Liquidado */
		insert	into	pls_cancel_rec_mens_incons(	nr_sequencia, nr_seq_mens_cancel, nr_seq_inconsistencia,
				dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec)
			values (	nextval('pls_cancel_rec_mens_incons_seq'), nr_seq_cancel_mens_w, 1,
				clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p);
		ie_inconsistente_w	:= 'S';
	end if;

	if (ie_inconsistente_w = 'S') then
		update	pls_cancel_rec_mensalidade
		set	ie_status	= 'I'
		where	nr_sequencia	= nr_seq_cancel_mens_w;
	else
		update	pls_cancel_rec_mensalidade
		set	ie_status	= 'C'
		where	nr_sequencia	= nr_seq_cancel_mens_w;
	end if;
	end;
end loop;
close C01;

select	count(*)
into STRICT	qt_inconsistencia_w
from	pls_cancel_rec_mens_incons	a,
	pls_cancel_rec_mensalidade	b
where	a.nr_seq_mens_cancel	= b.nr_sequencia
and	b.nr_seq_lote		= nr_seq_lote_p;

if (qt_inconsistencia_w = 0) then
	update	pls_cancel_rec_mens_lote
	set	ie_status	= 'C',
		dt_consistencia	= clock_timestamp()
	where	nr_sequencia	= nr_seq_lote_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consist_cancel_rec_mens ( nr_seq_lote_p bigint, nm_usuario_p text) FROM PUBLIC;

