-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_trib_conta_contabil () AS $body$
DECLARE


cd_empresa_w		bigint;
qt_registro_w		bigint;

c01 CURSOR FOR
SELECT	cd_empresa
from	empresa
where	cd_empresa <> cd_empresa_w;

vet01	c01%RowType;

c02 CURSOR FOR
SELECT	cd_tributo,
	cd_cgc,
	cd_conta_contabil,
	dt_inicio_vigencia,
	dt_fim_vigencia
from	tributo_conta_contabil
where	cd_empresa	= cd_empresa_w;

vet02	C02%Rowtype;


BEGIN

select	min(cd_empresa)
into STRICT	cd_empresa_w
from	empresa;

CALL wheb_usuario_pck.set_ie_executar_trigger('N');

begin
update	tributo_conta_contabil
set	cd_empresa	= cd_empresa_w
where	coalesce(cd_empresa::text, '') = '';
exception when others then
	CALL wheb_usuario_pck.set_ie_executar_trigger('S');
end;

open C01;
loop
fetch C01 into
	vet01;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	open C02;
	loop
	fetch C02 into
		vet02;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		select	count(*)
		into STRICT	qt_registro_w
		from	tributo_conta_contabil
		where	cd_tributo	= vet02.cd_tributo
		and	cd_empresa	= vet01.cd_empresa;

		if (qt_registro_w = 0) then
			begin
			insert into tributo_conta_contabil(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_tributo,
				cd_cgc,
				cd_conta_contabil,
				dt_inicio_vigencia,
				dt_fim_vigencia,
				cd_empresa)
			SELECT	nextval('tributo_conta_contabil_seq'),
				clock_timestamp(),
				'BacaTribEmpresa',
				clock_timestamp(),
				'BacaTribEmpresa',
				cd_tributo,
				cd_cgc,
				cd_conta_contabil,
				dt_inicio_vigencia,
				dt_fim_vigencia,
				vet01.cd_empresa
			from	tributo_conta_contabil
			where	cd_empresa	= cd_empresa_w;
			exception when others then
				CALL wheb_usuario_pck.set_ie_executar_trigger('S');
			end;
		end if;
		end;
	end loop;
	close C02;

	end;
end loop;
close C01;

commit;

CALL wheb_usuario_pck.set_ie_executar_trigger('S');

select	count(*)
into STRICT	qt_registro_w
from	tributo_conta_contabil
where	coalesce(cd_empresa::text, '') = '';

if (qt_registro_w = 0) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'TRIBUTO_CONTA_CONTABIL'
	and	column_name	= 'CD_EMPRESA'
	and	nullable	= 'N';

	/*MOdifica atributo CD_EMPRESA para NOT NULL*/

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('BacaTribEmpresa','alter table tributo_conta_contabil modify cd_empresa not null');
	end if;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_trib_conta_contabil () FROM PUBLIC;

