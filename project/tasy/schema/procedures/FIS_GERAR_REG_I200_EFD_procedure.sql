-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_gerar_reg_i200_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, ie_tributacao_cst_p text, nr_seq_I100_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint, ie_tipo_ct_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar o registro I200
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:

		Parâmetro 5500 - [25] -  SPED PIS/COFINS - Ao gerar os dados,  de onde buscar as informações
		da função Controle de Arrecadações, valores tratados
			N -  Nota Fiscal - C01
			A - Conta paciente. Se não houver vínculo, busca da nota - C02
			C - Conta Paciente - C02

Situação da Nota Fiscal
-------------------------------------------------------------------------------------------------------------------

Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_linha_w			bigint 	:= qt_linha_p;
nr_seq_registro_w		bigint 	:= nr_sequencia_p;
ds_arquivo_w			varchar(4000);
ds_arquivo_compl_w		varchar(4000);
ds_linha_w			varchar(8000);
sep_w				varchar(1)	:= ds_separador_p;
qt_registros_w			bigint;
cd_empresa_w			smallint;
nr_seq_data_w			bigint;
nr_linha_I200_w			bigint;
nr_seq_registro_I200_w		bigint;
nr_campo_i100			varchar(2);

c01 CURSOR FOR
	SELECT	'I200'					tp_registro,
		sum(vl_movimento)			vl_operacao,
		cd_conta_contabil			cd_conta_contabil,
		cd_tipo_detalhamento			cd_tipo_detalhamento,
		'' 					ds_info_compl,
		nr_seq_I200				nr_seq_I200
	from (SELECT	CASE WHEN coalesce(c.ie_tipo_valor,'VM')='VM' THEN a.vl_movimento WHEN coalesce(c.ie_tipo_valor,'VM')='VC' THEN a.vl_credito WHEN coalesce(c.ie_tipo_valor,'VM')='VD' THEN a.vl_debito END  vl_movimento,
			c.cd_conta_contabil,
			c.cd_tipo_detalhamento,
			c.nr_sequencia nr_seq_I200
		from	fis_efd_conta_contabil	c,
			fis_efd_regra_tipo_ct	r,
			ctb_balancete_v		a
		where 	a.cd_conta_contabil				= c.cd_conta_contabil
		and	c.nr_seq_tipo_ct				= r.nr_sequencia
		and	a.nr_seq_mes_ref				= nr_seq_data_w
		and	c.nr_seq_superior				= nr_seq_I100_p
		and	a.cd_estabelecimento				= c.cd_estabelecimento
		and 	c.cd_estabelecimento				= cd_estabelecimento_p
		and	obter_empresa_estab(a.cd_estabelecimento)	= coalesce(c.cd_empresa, cd_empresa_p)
		and	a.ie_normal_encerramento			= 'N'
		and	c.ie_tributacao_cst				= ie_tributacao_cst_p
		and	r.ie_tipo_ct in ('I100_DEG','I100_DEE','I100_FAT')) alias7
	group by
		'I200',
		cd_conta_contabil,
		cd_tipo_detalhamento,
		nr_seq_I200;

vet01	C01%RowType;

c02 CURSOR FOR
	SELECT	'I200'					tp_registro,
		sum(vl_movimento)			vl_operacao,
		cd_conta_contabil			cd_conta_contabil,
		substr(cd_tipo_detalhamento,1,5)	cd_tipo_detalhamento,
		'' 					ds_info_compl
	from (SELECT	CASE WHEN coalesce(c.ie_tipo_valor,'VM')='VM' THEN a.vl_movimento WHEN coalesce(c.ie_tipo_valor,'VM')='VC' THEN a.vl_credito WHEN coalesce(c.ie_tipo_valor,'VM')='VD' THEN a.vl_debito END  vl_movimento,
			c.cd_conta_contabil,
			substr(cd_tipo_detalhamento,1,5) cd_tipo_detalhamento,
			c.nr_sequencia nr_seq_I200
		from	fis_efd_conta_contabil	c,
			fis_efd_regra_tipo_ct	r,
			ctb_balancete_v		a
		where 	a.cd_conta_contabil				= c.cd_conta_contabil
		and	c.nr_seq_tipo_ct				= r.nr_sequencia
		and	a.nr_seq_mes_ref				= nr_seq_data_w
		and	a.cd_estabelecimento				= c.cd_estabelecimento
		and 	c.cd_estabelecimento				= cd_estabelecimento_p
		and	obter_empresa_estab(a.cd_estabelecimento)	= coalesce(c.cd_empresa, cd_empresa_p)
		and	a.ie_normal_encerramento			= 'N'
		and	c.ie_tributacao_cst				= ie_tributacao_cst_p
		and	c.ie_automatizacao       			= 'S'
		and 	(c.cd_conta_contabil IS NOT NULL AND c.cd_conta_contabil::text <> '')
		and	r.ie_tipo_ct in ('AL')) alias10
	group by
		'I200',
		cd_conta_contabil,
		substr(cd_tipo_detalhamento,1,5);

vet02	C02%RowType;

c03 CURSOR FOR
	SELECT	'I200'					tp_registro,
		ie_tributacao_cst			ie_tributacao_cst,
		ie_tipo_ct				ie_tipo_ct,
		cd_tipo_detalhamento,
		nr_seq_I200_sup,
		nr_seq_I200
	from (SELECT	c.ie_tributacao_cst,
			r.ie_tipo_ct,
			c.cd_tipo_detalhamento,
			c.nr_seq_superior nr_seq_I200_sup,
			c.nr_sequencia nr_seq_I200
		from 	fis_efd_conta_contabil	c,
			fis_efd_regra_tipo_ct	r,
			ctb_balancete_v		a
		where 	c.nr_seq_tipo_ct				= r.nr_sequencia
		and	(c.nr_seq_superior IS NOT NULL AND c.nr_seq_superior::text <> '')
		and	c.ie_automatizacao				= 'N'
		and	a.nr_seq_mes_ref				= nr_seq_data_w
		--and	a.cd_conta_contabil = c.cd_conta_contabil
		and	a.cd_estabelecimento				= c.cd_estabelecimento
		and 	c.cd_estabelecimento				= cd_estabelecimento_p
		and	obter_empresa_estab(a.cd_estabelecimento)	= coalesce(c.cd_empresa, cd_empresa_p)
		and 	c.nr_seq_superior = nr_seq_I100_p
		and	r.ie_tipo_ct in ('AL')) alias4
	group by
		'I200',
		ie_tributacao_cst,
		ie_tipo_ct,
		cd_tipo_detalhamento,
		nr_seq_I200_sup,
		nr_seq_I200;

vet03	C03%RowType;


BEGIN
select	cd_empresa
into STRICT	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_p;

select	count(1)
into STRICT	qt_registros_w
from	ctb_mes_ref
where	trunc(dt_referencia, 'mm')	= trunc(dt_inicio_p, 'mm')
and	cd_empresa			= cd_empresa_w  LIMIT 1;

if (qt_registros_w = 1) then
	select	nr_sequencia
	into STRICT	nr_seq_data_w
	from 	ctb_mes_ref
	where 	trunc(dt_referencia, 'mm')	= trunc(dt_inicio_p, 'mm')
	and	cd_empresa			= cd_empresa_w;
end if;

	open C01;
	loop
	fetch C01 into
		vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		if (ie_tipo_ct_p = 'I100_FAT') then
			nr_campo_i100	:= '02';
		end if;

		if (ie_tipo_ct_p = 'I100_DEG') then
			nr_campo_i100	:= '04';
		end if;

		if (ie_tipo_ct_p = 'I100_DEE') then
			nr_campo_i100	:= '05';
		end if;

		nr_seq_registro_w	:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;
		nr_linha_I200_w		:= nr_linha_w;
		nr_seq_registro_I200_w	:= nr_seq_registro_w;

		SELECT * FROM fis_gerar_reg_I300_efd(	nr_seq_controle_p, nm_usuario_p, cd_estabelecimento_p, dt_inicio_p, dt_fim_p, cd_empresa_p, ds_separador_p, ie_tributacao_cst_p, vet01.nr_seq_I200, '', '', nr_linha_w, nr_seq_registro_w) INTO STRICT nr_linha_w, nr_seq_registro_w;

		ds_linha_w	:= substr(	sep_w || vet01.tp_registro 					|| -- Texto fixo contendo "I200"
						sep_w || nr_campo_i100 						|| -- Informar o número do campo do registro ¿I100¿ (Campos 02, 04 ou 05), objeto de informação neste registro.
						sep_w || vet01.cd_tipo_detalhamento				|| -- Código do tipo de detalhamento, conforme Tabelas 7.1.1 e/ou 7.1.2
						sep_w || sped_formatar_numericos(abs(vet01.vl_operacao),2,',')	|| -- Valor detalhado referente ao campo 03 (COD_DET) deste registro
						sep_w || vet01.cd_conta_contabil				|| -- Código da conta contábil referente ao valor informado no campo 04 (DET_VALOR)
						sep_w || vet01.ds_info_compl					|| -- Informação Complementar dos dados informados no registro
						sep_w,1,8000);

		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);

		insert into fis_efd_arquivo(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_controle_efd,
			nr_linha,
			cd_registro,
			ds_arquivo,
			ds_arquivo_compl)
		values (nr_seq_registro_I200_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_controle_p,
			nr_linha_I200_w,
			vet01.tp_registro,
			ds_arquivo_w,
			ds_arquivo_compl_w);

		end;
	end loop;
	close C01;

	open C02;
	loop
	fetch C02 into
		vet02;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		if (coalesce(vet02.vl_operacao,0) <> 0) then
			begin

			if (substr(vet02.cd_tipo_detalhamento,1,1) = 'R') then
				nr_campo_i100	:= '02';
			elsif (substr(vet02.cd_tipo_detalhamento,1,3) =  'D00') then
				nr_campo_i100	:= '04';
			else
				nr_campo_i100	:= '05';
			end if;

			open C03;
			loop
			fetch C03 into
				vet03;
			EXIT WHEN NOT FOUND; /* apply on C03 */

			if ( vet02.cd_tipo_detalhamento = vet03.cd_tipo_detalhamento) then

				nr_seq_registro_w	:= nr_seq_registro_w + 1;
				nr_linha_w		:= nr_linha_w + 1;
				nr_linha_I200_w		:= nr_linha_w;
				nr_seq_registro_I200_w	:= nr_seq_registro_w;

				SELECT * FROM fis_gerar_reg_I300_efd(	nr_seq_controle_p, nm_usuario_p, cd_estabelecimento_p, dt_inicio_p, dt_fim_p, cd_empresa_p, ds_separador_p, ie_tributacao_cst_p, vet03.nr_seq_I200, vet03.cd_tipo_detalhamento, vet02.cd_conta_contabil, nr_linha_w, nr_seq_registro_w) INTO STRICT nr_linha_w, nr_seq_registro_w;

				ds_linha_w	:= substr(	sep_w || vet02.tp_registro 					|| -- Texto fixo contendo "I200"
							sep_w || nr_campo_i100 						|| -- Informar o número do campo do registro ¿I100¿ (Campos 02, 04 ou 05), objeto de informação neste registro.
							sep_w || vet02.cd_tipo_detalhamento				|| -- Código do tipo de detalhamento, conforme Tabelas 7.1.1 e/ou 7.1.2
							sep_w || sped_formatar_numericos(abs(vet02.vl_operacao),2,',')	|| -- Valor detalhado referente ao campo 03 (COD_DET) deste registro
							sep_w || vet02.cd_conta_contabil				|| -- Código da conta contábil referente ao valor informado no campo 04 (DET_VALOR)
							sep_w || vet02.ds_info_compl					|| -- Informação Complementar dos dados informados no registro
							sep_w,1,8000);

				ds_arquivo_w		:= substr(ds_linha_w,1,4000);
				ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);

				insert into fis_efd_arquivo(nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_controle_efd,
					nr_linha,
					cd_registro,
					ds_arquivo,
					ds_arquivo_compl)
				values (nr_seq_registro_I200_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nr_seq_controle_p,
					nr_linha_I200_w,
					vet02.tp_registro,
					ds_arquivo_w,
					ds_arquivo_compl_w);
			end if;

			end loop;
			close C03;
		end;
		end if;
	end;

	end loop;
	close C02;

commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_gerar_reg_i200_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, ie_tributacao_cst_p text, nr_seq_I100_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint, ie_tipo_ct_p text) FROM PUBLIC;

