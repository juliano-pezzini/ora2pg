-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pie_process_request ( tp_rule_p pie_rule.tp_rule%type , cd_estabelecimento_p bigint, nm_usuario_p text, nr_msg_generated_p INOUT pie_message.nr_sequencia%type) AS $body$
DECLARE

	cd_pessoa_fisica_w	pie_professional_auth.cd_pessoa_fisica%type;
	nr_sequencia_w		pie_rule.nr_sequencia%type;
	cd_estabelecimento_w	pie_rule.cd_estabelecimento%type;
	tp_reference_date_w	pie_rule.tp_reference_date%type;
	qt_month_w		pie_rule.qt_month%TYPE;
	dt_type_of_date_w	varchar(25);

	cd_pessoa_fisica_ww	pessoa_fisica.cd_pessoa_fisica%type;
	ds_codigo_prof_w	pessoa_fisica.ds_codigo_prof%type;
	ie_tipo_pessoa_w	pessoa_fisica.ie_tipo_pessoa%TYPE;
	ds_codigo_prof_list_w	varchar(4000):=null;


	c02 CURSOR FOR
	SELECT nr_sequencia,cd_estabelecimento, tp_reference_date, qt_month
	from pie_rule
	where tp_rule=tp_rule_p
	and ie_situacao='A';

	c03 CURSOR FOR
	SELECT pf.cd_pessoa_fisica, pf.ds_codigo_prof, pf.ie_tipo_pessoa FROM pessoa_fisica pf, pie_professional_auth ppa
	WHERE	pf.cd_pessoa_fisica= ppa.cd_pessoa_fisica
		and clock_timestamp() between trunc(ppa.dt_validity_start) and trunc(ppa.dt_validity_end)
		and (case dt_type_of_date_w when 'dt_validade_conselho' then pf.dt_validade_conselho
		when 'dt_admissao_hosp' then pf.dt_admissao_hosp end) between add_months(trunc(clock_timestamp(),'month'),qt_month_w) and add_months(fim_dia(last_day(clock_timestamp())),qt_month_w)  LIMIT 100;


BEGIN
		begin
			open c02;
			loop
			fetch c02 into nr_sequencia_w, cd_estabelecimento_w, tp_reference_date_w,qt_month_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				if(tp_reference_date_w IS NOT NULL AND tp_reference_date_w::text <> '' AND qt_month_w IS NOT NULL AND qt_month_w::text <> '') then
					if ( tp_reference_date_w = 'R' ) then
						dt_type_of_date_w:= 'dt_validade_conselho';
					elsif ( tp_reference_date_w= 'A' ) then
						dt_type_of_date_w:= 'dt_admissao_hosp';
					end if;
					
				open c03;
				loop
				fetch c03 into cd_pessoa_fisica_w, ds_codigo_prof_w, ie_tipo_pessoa_w;
				EXIT WHEN NOT FOUND; /* apply on c03 */
				
					if ( coalesce(ds_codigo_prof_list_w::text, '') = '') then
						ds_codigo_prof_list_w:= ds_codigo_prof_list_w||'{"professionnumber":"'||ds_codigo_prof_w||'"}';
					else
						ds_codigo_prof_list_w:= ds_codigo_prof_list_w||',{"professionnumber":"'||ds_codigo_prof_w||'"}';
					end if;
					
				end loop;
				close c03;
					 := pie_generate_request(nr_seq_pie_rule_p=> nr_sequencia_w, nr_professional_p => null, nr_professional_list_p=> ds_codigo_prof_list_w, ds_bifrost_flow_p=> 'pie.registration.details', cd_estabelecimento_p=>cd_estabelecimento_p, nm_usuario_p=>nm_usuario_p, nr_seq_msg_generated_p => nr_msg_generated_p);
				end if;
			end loop;
			close c02;
		end;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pie_process_request ( tp_rule_p pie_rule.tp_rule%type , cd_estabelecimento_p bigint, nm_usuario_p text, nr_msg_generated_p INOUT pie_message.nr_sequencia%type) FROM PUBLIC;

