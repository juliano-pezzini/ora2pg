-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lote_frasco_pato_loc ( nr_seq_laboratorio_p bigint, ie_itens_p text, nm_usuario_p text, ds_observacao_p text) AS $body$
DECLARE


nr_seq_frasco_pato_loc_w	bigint;
nr_seq_lote_w			bigint;
nr_atendimento_w		bigint;
nr_seq_lote_atend_w		bigint;

C01 CURSOR FOR
SELECT	b.nr_sequencia
from	frasco_pato_loc b,
	prescr_medica a
where  	obter_se_contido(b.nr_sequencia,ie_itens_p) = 'S'
and	b.nr_prescricao = a.nr_prescricao
and	a.nr_atendimento = nr_atendimento_w
order 	by 1;


C02 CURSOR FOR
SELECT	distinct a.nr_atendimento
from	frasco_pato_loc b,
	prescr_medica a
where	a.nr_atendimento = b.nr_atendimento
and  	obter_se_contido(b.nr_sequencia,ie_itens_p) = 'S'
order 	by 1;


BEGIN

select	nextval('pato_lote_rastreabilidade_seq')
into STRICT	nr_seq_lote_w
;

insert into pato_lote_rastreabilidade(
			nr_sequencia,
			nm_usuario,
			nm_usuario_nrec,
			dt_atualizacao,
			dt_atualizacao_nrec,
			nr_seq_laboratorio,
			cd_pessoa_recebimento,
			dt_recebimento,
			nm_usuario_recebimento,
			ds_observacao)
		values (	nr_seq_lote_w,
			nm_usuario_p,
			nm_usuario_p,
			clock_timestamp(),
			clock_timestamp(),
			CASE WHEN nr_seq_laboratorio_p=0 THEN null  ELSE nr_seq_laboratorio_p END ,
			null,
			null,
			null,
			ds_observacao_p);

open C02;
loop
fetch C02 into
	nr_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin



	select	nextval('pato_lote_atend_rastreabi_seq')
	into STRICT	nr_seq_lote_atend_w
	;

	insert into pato_lote_atend_rastreabi(
			nr_sequencia,
			nm_usuario,
			nm_usuario_nrec,
			dt_atualizacao,
			dt_atualizacao_nrec,
			nr_seq_lote,
			ie_status,
			nr_atendimento)
		values (nr_seq_lote_atend_w,
			nm_usuario_p,
			nm_usuario_p,
			clock_timestamp(),
			clock_timestamp(),
			nr_seq_lote_w,
			'G',
			nr_atendimento_w);


		open C01;
		loop
		fetch C01 into
			nr_seq_frasco_pato_loc_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin



			insert into amost_lote_atend_rastreabi(
				nr_sequencia,
				nm_usuario,
				nm_usuario_nrec,
				dt_atualizacao,
				dt_atualizacao_nrec,
				nr_seq_amostra,
				ie_status,
				nr_seq_lote_atend)
			values (nextval('amost_lote_atend_rastreabi_seq'),
				nm_usuario_p,
				nm_usuario_p,
				clock_timestamp(),
				clock_timestamp(),
				nr_seq_frasco_pato_loc_w,
				'G',
				nr_seq_lote_atend_w);



			insert into frasco_pato_loc_status(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_status,
				nr_seq_frasco_pato_loc,
				cd_setor_atendimento)
			values (	nextval('frasco_pato_loc_status_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				50,
				nr_seq_frasco_pato_loc_w,
				null);


				update	frasco_pato_loc
				set	ie_status      = 50,
					dt_atualizacao = clock_timestamp(),
					nm_usuario     = nm_usuario_p
				where	nr_sequencia   = nr_seq_frasco_pato_loc_w;

			end;
		end loop;
		close C01;





	end;
end loop;
close C02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lote_frasco_pato_loc ( nr_seq_laboratorio_p bigint, ie_itens_p text, nm_usuario_p text, ds_observacao_p text) FROM PUBLIC;

