-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_calculate_occupancy ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) AS $body$
DECLARE


c01_tasy CURSOR FOR
SELECT	d.cd_setor_atendimento cd_department,
	d.ds_setor_atendimento ds_department,
	c.cd_unidade_basica || ' ' || c.cd_unidade_compl ds_location,
	substr(obter_valor_dominio(82, c.ie_status_unidade),1,255) ds_status,
	c.ie_status_unidade cd_status,
	c.ie_temporario ie_temporary,
	c.cd_unidade_basica,
	e.qt_time rule_time,
	coalesce((select max(round(clock_timestamp() - x.dt_historico))
					from unidade_atend_hist x
					where x.nr_seq_unidade = c.nr_seq_interno
					and x.ie_status_unidade = c.ie_status_unidade),0) qt_time_hist,
	c.cd_unidade_compl
FROM setor_atendimento d, unidade_atendimento c
LEFT OUTER JOIN pfcs_time_unit_bed e ON (c.ie_status_unidade = e.cd_rule)
WHERE c.cd_setor_atendimento	= d.cd_setor_atendimento and c.ie_situacao		= 'A' and d.ie_situacao		= 'A' and d.cd_classif_setor	in ('1','3','4','9','11','12')  and d.ie_ocup_hospitalar	<> 'N' and d.cd_estabelecimento_base = (cd_estabelecimento_p)::numeric and coalesce(c.nr_seq_location::text, '') = '';

c01_fhir CURSOR FOR
SELECT	d.cd_setor_atendimento cd_department,
	d.ds_setor_atendimento ds_department,
	c.cd_unidade_basica || ' ' || c.cd_unidade_compl ds_location,
	substr(obter_valor_dominio(82, c.ie_status_unidade),1,255) ds_status,
	c.ie_status_unidade cd_status,
	c.ie_temporario ie_temporary,
	c.cd_unidade_basica,
	e.qt_time rule_time,
	coalesce((clock_timestamp() - c.dt_atualizacao),0) qt_time_hist,
	c.cd_unidade_compl
FROM setor_atendimento d, unidade_atendimento c
LEFT OUTER JOIN pfcs_time_unit_bed e ON (c.ie_status_unidade = e.cd_rule)
WHERE c.cd_setor_atendimento	= d.cd_setor_atendimento and c.ie_situacao		= 'A' and d.ie_situacao		= 'A' and d.cd_classif_setor	in ('1','3','4','9','11','12')  and d.ie_ocup_hospitalar	<> 'N' and d.cd_estabelecimento_base = (cd_estabelecimento_p)::numeric and (c.nr_seq_location IS NOT NULL AND c.nr_seq_location::text <> '');

c02_tasy CURSOR(cd_setor_atendimento_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text) FOR
SELECT	b.dt_entrada_unidade dt_entry_unit,
	a.cd_pessoa_fisica id_patient,
	coalesce(get_formatted_person_name(a.cd_pessoa_fisica, 'list'), obter_nome_pf(a.cd_pessoa_fisica)) nm_patient,
	pfcs_obter_lista_dados_classif(a.cd_pessoa_fisica) ds_classification,
	obter_sexo_pf(a.cd_pessoa_fisica, 'D') ds_gender,
	pf.dt_nascimento dt_birthdate,
    obter_dados_pf(a.cd_pessoa_fisica, 'I') qt_idade_paciente,
	a.nr_atendimento nr_encounter,
	a.dt_entrada dt_entrance
from	unidade_atendimento	c,
	atend_paciente_unidade	b,
	atendimento_paciente	a,
	pessoa_fisica pf
where	a.nr_atendimento	= b.nr_atendimento
and	c.cd_setor_atendimento	= cd_setor_atendimento_p
and	c.cd_unidade_basica	= cd_unidade_basica_p
and	c.cd_unidade_compl	= cd_unidade_compl_p
and	c.cd_setor_atendimento	= b.cd_setor_atendimento
and	c.cd_unidade_basica	= b.cd_unidade_basica
and	c.cd_unidade_compl	= b.cd_unidade_compl
and	b.nr_seq_interno	= obter_atepacu_paciente(c.nr_atendimento,'A')
and	c.ie_situacao		= 'A'
and	a.cd_pessoa_fisica	= pf.cd_pessoa_fisica
and coalesce(a.dt_alta::text, '') = '';

c02_fhir CURSOR(cd_setor_atendimento_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text) FOR
SELECT	uni.dt_entrada_unidade dt_entry_unit,
	pat.patient_id id_patient,
	pfcs_get_human_name(enc.nr_seq_patient, 'Patient') nm_patient,
	enc.ds_classification ds_classification,
	pat.gender ds_gender,
	pat.birthdate dt_birthdate,
    trunc(months_between(coalesce(pat.deceased_date, clock_timestamp()), pat.birthdate)/12) qt_idade_paciente,
	enc.id_encounter nr_encounter,
	enc.period_start dt_entrance,
    uni.cd_setor_atendimento,
    uni.cd_unidade_basica,
    uni.cd_unidade_compl
from
    pfcs_service_request ser,
    pfcs_encounter enc,
    pfcs_patient pat,
    unidade_atendimento uni,
    setor_atendimento sec
where
    enc.nr_seq_patient = pat.nr_sequencia
    and ser.nr_seq_encounter = enc.nr_sequencia
    and ser.nr_seq_location = uni.nr_seq_location
    and uni.cd_setor_atendimento = sec.cd_setor_atendimento
    and (ser.cd_service = 'E0402' OR (ser.cd_service = 'E0401' and ser.si_status = 'COMPLETED'  and ser.si_intent = 'ORDER') OR (ser.cd_service = 'E0405' and ser.si_status = 'ACTIVE'  and ser.si_intent = 'PLAN'))
    and enc.si_classif = 'inpatient'
    and uni.ie_situacao = 'A'
    and	uni.cd_setor_atendimento = cd_setor_atendimento_p
    and	uni.cd_unidade_basica	= cd_unidade_basica_p
    and	uni.cd_unidade_compl	= cd_unidade_compl_p
    and coalesce(enc.period_end::text, '') = '';


pfcs_panel_detail_seq_w			pfcs_panel_detail.nr_sequencia%type;
pfcs_detail_bed_seq_w			pfcs_detail_bed.nr_sequencia%type;
pfcs_panel_seq_w			pfcs_panel.nr_sequencia%type;
nr_seq_operational_level_w		pfcs_operational_level.nr_sequencia%type;
qt_unit_w				numeric(20) := 0;
qt_temp_unit_w				numeric(20) := 0;
qt_occupied_unit_w			numeric(20) := 0;
qt_occupied_temp_unit_w			numeric(20) := 0;
qt_blocked_unit_w			numeric(20) := 0;
pfcs_flag_settings_w        pfcs_general_rule.ie_table_origin%type;
BEGIN

	nr_seq_operational_level_w := pfcs_get_structure_level(
		cd_establishment_p => cd_estabelecimento_p,
		ie_level_p => 'O',
		ie_info_p => 'C');

	select ie_table_origin
    into STRICT pfcs_flag_settings_w
    from pfcs_general_rule;

if (pfcs_flag_settings_w = 0 or pfcs_flag_settings_w = 2) then

	for c01_w in c01_tasy loop
		begin

		if ((c01_w.cd_status not in ('I','U')) OR (c01_w.rule_time <= c01_w.qt_time_hist)) then
			qt_unit_w := qt_unit_w + 1;

			if (c01_w.ie_temporary = 'S') then
				qt_temp_unit_w := qt_temp_unit_w + 1;
				if (c01_w.cd_status = 'P') then
					qt_occupied_temp_unit_w := qt_occupied_temp_unit_w + 1;
				end if;
			else

				if (c01_w.cd_status = 'P') then
					qt_occupied_unit_w := qt_occupied_unit_w + 1;
				elsif (c01_w.cd_status in ('I','U')) then
					qt_blocked_unit_w := qt_blocked_unit_w + 1;
				end if;
			end if;

			select	nextval('pfcs_panel_detail_seq')
			into STRICT	pfcs_panel_detail_seq_w
			;

			insert into pfcs_panel_detail(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				ie_situation,
				nr_seq_indicator,
				nr_seq_operational_level)
			values (
				pfcs_panel_detail_seq_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				'T',
				nr_seq_indicator_p,
				nr_seq_operational_level_w);

			select	nextval('pfcs_detail_bed_seq')
			into STRICT	pfcs_detail_bed_seq_w
			;

			insert into pfcs_detail_bed(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_detail,
				ds_location,
				cd_department,
				ds_department,
				ds_status,
				cd_status,
				ie_temporary)
			values (
				pfcs_detail_bed_seq_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				pfcs_panel_detail_seq_w,
				c01_w.ds_location,
				c01_w.cd_department,
				c01_w.ds_department,
				c01_w.ds_status,
				c01_w.cd_status,
				c01_w.ie_temporary);


			for c02_w in c02_tasy(c01_w.cd_department, c01_w.cd_unidade_basica, c01_w.cd_unidade_compl) loop
				begin

				insert into pfcs_detail_patient(
					nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_detail,
					nr_encounter_varchar,
					dt_entrance,
					id_patient,
					nm_patient,
					ds_gender,
					ds_classification,
					dt_birthdate,
					ds_age_range)
				values (
					nextval('pfcs_detail_patient_seq'),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					pfcs_panel_detail_seq_w,
					c02_w.nr_encounter,
					c02_w.dt_entrance,
					c02_w.id_patient,
					c02_w.nm_patient,
					c02_w.ds_gender,
					c02_w.ds_classification,
					c02_w.dt_birthdate,
					c02_w.qt_idade_paciente);

				update pfcs_detail_bed
				set dt_entry_unit = c02_w.dt_entry_unit
				where nr_sequencia = pfcs_detail_bed_seq_w;

				end;
			end loop;

			commit;
		end if;

		end;
	end loop;
end if;

if (pfcs_flag_settings_w = 1 or pfcs_flag_settings_w = 2) then

	for c01_w in c01_fhir loop
		begin

		if ((c01_w.cd_status not in ('I','U')) OR (c01_w.rule_time <= c01_w.qt_time_hist)) then
			qt_unit_w := qt_unit_w + 1;

			if (c01_w.ie_temporary = 'S') then
				qt_temp_unit_w := qt_temp_unit_w + 1;
				if (c01_w.cd_status = 'P') then
					qt_occupied_temp_unit_w := qt_occupied_temp_unit_w + 1;
				end if;
			else

				if (c01_w.cd_status = 'P') then
					qt_occupied_unit_w := qt_occupied_unit_w + 1;
				elsif (c01_w.cd_status in ('I','U')) then
					qt_blocked_unit_w := qt_blocked_unit_w + 1;
				end if;
			end if;

			select	nextval('pfcs_panel_detail_seq')
			into STRICT	pfcs_panel_detail_seq_w
			;

			insert into pfcs_panel_detail(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				ie_situation,
				nr_seq_indicator,
				nr_seq_operational_level)
			values (
				pfcs_panel_detail_seq_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				'T',
				nr_seq_indicator_p,
				nr_seq_operational_level_w);

			select	nextval('pfcs_detail_bed_seq')
			into STRICT	pfcs_detail_bed_seq_w
			;

			insert into pfcs_detail_bed(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_detail,
				ds_location,
				cd_department,
				ds_department,
				ds_status,
				cd_status,
				ie_temporary)
			values (
				pfcs_detail_bed_seq_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				pfcs_panel_detail_seq_w,
				c01_w.ds_location,
				c01_w.cd_department,
				c01_w.ds_department,
				c01_w.ds_status,
				c01_w.cd_status,
				c01_w.ie_temporary);


			for c02_w in c02_fhir(c01_w.cd_department, c01_w.cd_unidade_basica, c01_w.cd_unidade_compl) loop
				begin

				insert into pfcs_detail_patient(
					nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_detail,
					nr_encounter_varchar,
					dt_entrance,
					id_patient,
					nm_patient,
					ds_gender,
					ds_classification,
					dt_birthdate,
					ds_age_range)
				values (
					nextval('pfcs_detail_patient_seq'),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					pfcs_panel_detail_seq_w,
					c02_w.nr_encounter,
					c02_w.dt_entrance,
					c02_w.id_patient,
					c02_w.nm_patient,
					c02_w.ds_gender,
					c02_w.ds_classification,
					c02_w.dt_birthdate,
					c02_w.qt_idade_paciente);

				update pfcs_detail_bed
				set dt_entry_unit = c02_w.dt_entry_unit
				where nr_sequencia = pfcs_detail_bed_seq_w;

				end;
			end loop;

			commit;
		end if;

		end;
	end loop;
end if;

 := pfcs_pck.pfcs_generate_results(
		vl_indicator_p => qt_unit_w, vl_indicator_aux_p => qt_temp_unit_w, vl_indicator_help_p => qt_occupied_unit_w, vl_indicator_assist_p => qt_occupied_temp_unit_w, vl_indicator_collab_p => qt_blocked_unit_w, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => pfcs_panel_seq_w);

CALL pfcs_pck.pfcs_update_detail(
		nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_panel_p => pfcs_panel_seq_w,
		nr_seq_operational_level_p => nr_seq_operational_level_w,
		nm_usuario_p => nm_usuario_p);

CALL pfcs_pck.pfcs_activate_records(
		nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_operational_level_p => nr_seq_operational_level_w,
		nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_calculate_occupancy ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) FROM PUBLIC;

