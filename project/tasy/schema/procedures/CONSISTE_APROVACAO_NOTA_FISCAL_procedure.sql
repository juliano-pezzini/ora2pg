-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_aprovacao_nota_fiscal ( nr_sequencia_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


qt_existe_w			bigint;
ds_erro_w			varchar(255);
ie_entrada_saida_w			varchar(1);
nr_contrato_w			bigint;
nr_ordem_compra_w		bigint;
cd_estabelecimento_w		bigint;
cd_setor_atendimento_w		bigint;
cd_perfil_w			bigint;
cd_processo_aprov_w		bigint;
nr_item_nf_w			bigint;
cd_material_w			bigint;
cd_centro_custo_w			bigint;
cd_local_estoque_w		bigint;
nr_seq_proj_rec_w			bigint;
dt_liberacao_w			timestamp;
dt_aprovacao_w			timestamp;
cd_cgc_emitente_w		varchar(14);
cd_conta_contabil_w		varchar(20);
cd_pessoa_fisica_w		varchar(10);
ie_autorizado_w 		varchar(2);
ie_tipo_processo_w 		varchar(2);
ie_consiste_perfil_w	funcao_parametro.vl_parametro%type;

C01 CURSOR FOR
SELECT	nr_item_nf,
	cd_material,
	cd_centro_custo,
	cd_local_estoque,
	nr_seq_proj_rec,
	cd_conta_contabil
from	nota_fiscal_item
where	nr_sequencia = nr_sequencia_p
and	(cd_material IS NOT NULL AND cd_material::text <> '')
order by nr_item_nf;


BEGIN

ds_erro_w	:= '';

ie_consiste_perfil_w := substr(coalesce(obter_valor_param_usuario(40, 510, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N'),1,1);

select	b.ie_entrada_saida,
	n.nr_contrato,
	n.nr_ordem_compra,
	n.cd_estabelecimento,
	dt_aprovacao,
	dt_liberacao,
	cd_setor_digitacao,
	obter_perfil_ativo,
	cd_cgc_emitente,
	cd_pessoa_fisica
into STRICT	ie_entrada_saida_w,
	nr_contrato_w,
	nr_ordem_compra_w,
	cd_estabelecimento_w,
	dt_aprovacao_w,
	dt_liberacao_w,
	cd_setor_atendimento_w,
	cd_perfil_w,
	cd_cgc_emitente_w,
	cd_pessoa_fisica_w
from	nota_fiscal n,
	operacao_estoque b,
	operacao_nota a
where	a.cd_operacao_estoque	= b.cd_operacao_estoque
and	a.cd_operacao_nf		= n.cd_operacao_nf
and	n.nr_sequencia		= nr_sequencia_p;

if (cd_cgc_emitente_w IS NOT NULL AND cd_cgc_emitente_w::text <> '') then
	cd_pessoa_fisica_w	:= null;
end if;

if (ie_consiste_perfil_w = 'S') then
	cd_perfil_w := null;
end if;

ie_autorizado_w := 'N';

if (ie_entrada_saida_w = 'E') and (coalesce(nr_contrato_w,0) = 0) and (coalesce(nr_ordem_compra_w,0) = 0) then
	ie_autorizado_w := 'S';
	ie_tipo_processo_w := 'N';
elsif (ie_entrada_saida_w = 'E') and (nr_contrato_w IS NOT NULL AND nr_contrato_w::text <> '') and (coalesce(nr_ordem_compra_w,0) = 0)  then
	ie_autorizado_w := 'S';
	ie_tipo_processo_w := 'NC';
end if;
	
if (ie_autorizado_w = 'S') then
	select	count(*)
	into STRICT	qt_existe_w
	from	nota_fiscal_item
	where	nr_sequencia = nr_Sequencia_p
	and	(dt_reprovacao IS NOT NULL AND dt_reprovacao::text <> '');
	
	if (qt_existe_w > 0) then
		ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(281092);
	end if;
	
	select	count(*)
	into STRICT	qt_existe_w
	from	processo_aprovacao a,
		processo_aprov_resp b
	where	a.cd_processo_aprov = b.cd_processo_aprov
	and	a.ie_situacao = 'A'
	and (coalesce(b.ie_nota_fiscal,'N') = 'S'
		or coalesce(b.ie_nota_fiscal_contrato,'N') = 'S');
	
	if (qt_existe_w > 0) then
	
		open C01;
		loop
		fetch C01 into	
			nr_item_nf_w,
			cd_material_w,
			cd_centro_custo_w,
			cd_local_estoque_w,
			nr_seq_proj_rec_w,
			cd_conta_contabil_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			
			 -- nr_documento_p
				cd_processo_aprov_w := obter_processo_aprovacao(
				cd_material_w, cd_centro_custo_w, cd_setor_atendimento_w, cd_local_estoque_w, null,  -- cd_local_estoque_destino_p - Usado somente na requisicao
				null,  -- cd_operacao_estoque_p       - Usado somente na requisicao
				cd_conta_contabil_w, cd_cgc_emitente_w, cd_pessoa_fisica_w, ie_tipo_processo_w,  -- ie_tipo_processo_p
				'N', cd_estabelecimento_w, cd_perfil_w, nr_seq_proj_rec_w, nr_Sequencia_p, 
				cd_processo_aprov_w);
			
			if (cd_processo_aprov_w > 0) and (coalesce(dt_liberacao_w::text, '') = '') then
				ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(281093);
			elsif (cd_processo_aprov_w > 0) and (coalesce(dt_aprovacao_w::text, '') = '') then
				ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(281094);
			end if;
						
			end;
		end loop;
		close C01;
	end if;

end if;

ds_erro_p	:= ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_aprovacao_nota_fiscal ( nr_sequencia_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

