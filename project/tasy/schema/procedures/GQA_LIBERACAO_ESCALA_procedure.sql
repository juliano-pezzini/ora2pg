-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gqa_liberacao_escala ( nr_atendimento_p bigint, nr_sequencia_p bigint, nm_usuario_p text, nm_tabela_p text, nr_regras_atendidas_p INOUT text, ie_opcao_sepsis_p text default 'X', nr_restrigir_regras_p text default null, qt_horas_retroativa_p bigint default 0) AS $body$
DECLARE

				
nr_seq_pend_regra_w	        bigint;
vl_minimo_w		            double precision;
vl_maximo_w		            double precision;
nr_seq_sinal_vital_w	    bigint := 0;
nr_atendimento_w	        bigint;
nm_atributo_w		        varchar(1000);
nr_sequencia_w		        bigint;
vl_atributo_w		        double precision;
cd_pessoa_fisica_w	        varchar(10);
qt_idade_w		            bigint;
cd_setor_atendimento_w	    bigint;
cd_escala_dor_w		        varchar(10);
nr_seq_result_dor_w	        bigint;
nm_tabela_w		            varchar(80);
ie_escala_w		            bigint;
nr_seq_result_w		        bigint;
nr_seq_regra_result_w	    bigint;
ie_informacao_w		        varchar(1000);
ie_tipo_atributo_w	        varchar(50);
ie_informacao_ret_w	        varchar(255);
qt_idade_dias_w		        integer;
qt_peso_gramas_w		    double precision;
ie_protocolo_assistencial_w boolean;
v_valor_escala              varchar(255);
ds_function_w               varchar(1000);
cd_resposta_w               bigint;
ie_restricao_complementar_w varchar(80);
ie_versao_sepse_w           varchar(10);
ie_status_w					varchar(255);
nr_seq_score_flex_w 		gqa_pendencia_regra.nr_seq_score_flex%type;
nr_seq_score_flex_ii_w 		gqa_pendencia_regra.nr_seq_score_flex_ii%type;
nr_seq_escala_w 		gqa_pend_pac_acao.nr_seq_escala%type;
nr_seq_pend_pac_acao_w 		gqa_pend_pac_acao.nr_sequencia%type;
ie_valor_comparacao_w		gqa_pendencia_regra.ie_valor_comparacao%type;
vl_diferenca_w			gqa_pendencia_regra.vl_diferenca%type;
vl_maior_sofa_w			integer;
vl_menor_sofa_w			integer;
vl_atual_sofa_w			integer;
vl_primeiro_sofa_w		integer;
vl_penultimo_sofa_w		integer;
gerar_alerta_sofa_w		boolean := true;

SQLEscalaLiberado   varchar(2000)      := null;
SQLEscalaAtendimento   varchar(2000)   := null;
C01 CURSOR FOR
    -- Escala que nao sejam escore flex nem sepse
	SELECT  a.nr_sequencia,
            coalesce(a.vl_minimo,0),
            coalesce(a.vl_maximo,999),
            d.nm_tabela,
            d.nm_atributo_inf,
            d.ie_escala,
            coalesce(a.nr_seq_result,0),
            coalesce(a.ie_informacao,a.nr_seq_tev_resposta),
            d.ie_tipo_atributo,
            d.ds_function,
            a.cd_resposta,
	    a.ie_valor_comparacao,
	    a.vl_diferenca		
	from    gqa_pendencia_regra a,
            gqa_pendencia       b,
            vice_escala         d
	where   b.nr_sequencia      = a.nr_seq_pendencia
    and	    d.nr_sequencia      = a.nr_seq_escala
    and	    b.ie_tipo_pendencia	= 4
    and	    b.ie_situacao 		= 'A'
    and	    a.ie_situacao		= 'A'
    and	    obter_se_gqa_regra_liberada(a.nr_sequencia) = 'S'
    and	    qt_idade_w 		 between coalesce(a.qt_idade_min,0) and coalesce(a.qt_idade_max,999)
    and     qt_idade_dias_w  between coalesce(a.qt_dias_min,0) and coalesce(a.qt_dias_max,99999)
    and	    qt_peso_gramas_w between coalesce(a.qt_peso_gramas_min,0) and coalesce(a.qt_peso_gramas_max,999999999)
    and	    coalesce(a.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0)
    and	    upper(d.nm_tabela)   = coalesce(upper(nm_tabela_p), upper(d.nm_tabela))
    and	    upper(d.nm_tabela)	<> 'ESCALA_EIF'
    and	    upper(d.nm_tabela)	<> 'ESCALA_EIF_II'
    and	    upper(d.nm_tabela)	<> 'ESCALA_SEPSE'
	and	    upper(d.nm_tabela)	<> 'ESCALA_SEPSE_INFANTIL'
    and     coalesce(ie_opcao_sepsis_p::text, '') = ''
    and (coalesce(nr_restrigir_regras_p::text, '') = '' or position(a.nr_sequencia in nr_restrigir_regras_p) > 0)

union all

    -- Escala quem sejam sepse
	SELECT  a.nr_sequencia,
            coalesce(a.vl_minimo,0),
            coalesce(a.vl_maximo,999),
            d.nm_tabela,
            d.nm_atributo_inf,
            d.ie_escala,
            coalesce(a.nr_seq_result,0),
            coalesce(a.ie_informacao,a.nr_seq_tev_resposta),
            d.ie_tipo_atributo,
            d.ds_function,
            a.cd_resposta,
	    a.ie_valor_comparacao,
	    a.vl_diferenca	
	from    gqa_pendencia_regra a,
            gqa_pendencia       b,
            vice_escala         d
	where   b.nr_sequencia      = a.nr_seq_pendencia
    and	    d.nr_sequencia      = a.nr_seq_escala
    and	    b.ie_tipo_pendencia	= 4
    and	    b.ie_situacao 		= 'A'
    and	    a.ie_situacao		= 'A'
    and	    obter_se_gqa_regra_liberada(a.nr_sequencia) = 'S'
    and	    qt_idade_w 		 between coalesce(a.qt_idade_min,0) and coalesce(a.qt_idade_max,999)
    and     qt_idade_dias_w  between coalesce(a.qt_dias_min,0) and coalesce(a.qt_dias_max,99999)
    and	    qt_peso_gramas_w between coalesce(a.qt_peso_gramas_min,0) and coalesce(a.qt_peso_gramas_max,999999999)
    and	    coalesce(a.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0)
    and	    upper(d.nm_tabela)   = coalesce(upper(nm_tabela_p), upper(d.nm_tabela))
    and	    ((upper(d.nm_tabela)	= 'ESCALA_SEPSE' 
    and     ((ie_versao_sepse_w = '1' and coalesce(ie_regra_sepse,'X') = coalesce(ie_opcao_sepsis_p,'X'))
	or (ie_versao_sepse_w = '2' and OBTER_SE_CONTIDO_ENTRE_VIRGULA(ie_status_w,ie_regra_sepse) = 'S' and (ie_opcao_sepsis_p <> 'CS' or (ie_opcao_sepsis_p = 'CS' and coalesce(NR_SEQ_EVENTO::text, '') = ''))) ))
	or 	    upper(d.nm_tabela) = 'ESCALA_SEPSE_INFANTIL' and coalesce(ie_regra_sepse,'X') = coalesce(ie_opcao_sepsis_p,'X'))
    and (coalesce(nr_restrigir_regras_p::text, '') = '' or position(a.nr_sequencia in nr_restrigir_regras_p) > 0)
	and     obter_se_sepsis_gqa(nr_sequencia_p,a.QT_VAR_SUSPEITA,a.QT_VAR_CONFIRMADA, coalesce(ie_regra_sepse,'X'), upper(d.nm_tabela)) = 'S'
    
union all

    -- Escala que sejam escore flex 
	select  a.nr_sequencia,
            coalesce(a.vl_minimo,0),
            coalesce(a.vl_maximo,999),
            d.nm_tabela,
            d.nm_atributo_inf,
            d.ie_escala,
            coalesce(a.nr_seq_result,0),
            a.ie_informacao,
            d.ie_tipo_atributo,
            d.ds_function,
            a.cd_resposta,
	    a.ie_valor_comparacao,
	    a.vl_diferenca	
	from    gqa_pendencia_regra a,
            gqa_pendencia       b,
            vice_escala         d
	where   b.nr_sequencia	= a.nr_seq_pendencia
	and	    d.nr_sequencia      = a.nr_seq_escala
	and	    b.ie_tipo_pendencia	= 4
	and	    b.ie_situacao 		= 'A'
	and	    a.ie_situacao		= 'A'
	and	    obter_se_gqa_regra_liberada(a.nr_sequencia) = 'S'
	and	    qt_idade_w       between coalesce(a.qt_idade_min,0) and coalesce(a.qt_idade_max,999)
	and     qt_idade_dias_w  between coalesce(a.qt_dias_min,0) and coalesce(a.qt_dias_max,99999)
	and	    qt_peso_gramas_w between coalesce(a.qt_peso_gramas_min,0) and coalesce(a.qt_peso_gramas_max,999999999)
	and	    coalesce(a.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0)
	and	    upper(d.nm_tabela)  = coalesce(upper(nm_tabela_p), upper(d.nm_tabela))
	and	    upper(d.nm_tabela)  = 'ESCALA_EIF'
    and     exists (select 1 
                    from   escala_eif x 
                    where  x.nr_seq_escala = a.nr_seq_score_flex
                    and    x.nr_atendimento = nr_atendimento_p)
    and (coalesce(nr_restrigir_regras_p::text, '') = '' or position(a.nr_sequencia in nr_restrigir_regras_p) > 0)                                  
	
union all

    -- Escala que sejam escore flex II
	select	a.nr_sequencia,
			coalesce(a.vl_minimo,0),
			coalesce(a.vl_maximo,999),
			d.nm_tabela,
			d.nm_atributo_inf,
			d.ie_escala,
			coalesce(a.nr_seq_result_ii,0),
			a.ie_informacao,
			d.ie_tipo_atributo,
            d.ds_function,
            a.cd_resposta,
	    a.ie_valor_comparacao,
	    a.vl_diferenca		    
	from	gqa_pendencia_regra a,
			gqa_pendencia       b,
			vice_escala         d
	where	b.nr_sequencia	= a.nr_seq_pendencia
	and	    d.nr_sequencia      = a.nr_seq_escala
	and	    b.ie_tipo_pendencia	= 4
	and	    b.ie_situacao 		= 'A'
	and	    a.ie_situacao		= 'A'
	and	    obter_se_gqa_regra_liberada(a.nr_sequencia) = 'S'
	and	    qt_idade_w       between coalesce(a.qt_idade_min,0) and coalesce(a.qt_idade_max,999)
	and     qt_idade_dias_w  between coalesce(a.qt_dias_min,0) and coalesce(a.qt_dias_max,99999)
	and	    qt_peso_gramas_w between coalesce(a.qt_peso_gramas_min,0) and coalesce(a.qt_peso_gramas_max,999999999)
	and	    coalesce(a.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0)
	and	    upper(d.nm_tabela)     = coalesce(upper(nm_tabela_p), upper(d.nm_tabela))
	and	    upper(d.nm_tabela)     = 'ESCALA_EIF_II'
    and     exists (select 1 
                    from   escala_eif_ii x 
                    where  x.nr_seq_escala = a.nr_seq_score_flex_ii
                    and    x.nr_atendimento = nr_atendimento_p)    
    and (coalesce(nr_restrigir_regras_p::text, '') = '' or position(a.nr_sequencia in nr_restrigir_regras_p) > 0);

CursorEscala    REFCURSOR;

C02 CURSOR FOR
  SELECT  a.nr_sequencia,
          a.nr_seq_escala,
          a.nr_seq_score_flex,
          a.nr_seq_score_flex_ii
  from    gqa_pend_pac_acao a,
          gqa_pendencia_pac b,
          vice_escala c,
          gqa_acao d
  where   (a.nr_seq_escala IS NOT NULL AND a.nr_seq_escala::text <> '')
  and     b.nr_sequencia = a.nr_seq_pend_pac
  and     c.nr_sequencia = a.nr_seq_escala
  and     b.nr_atendimento = nr_atendimento_p 
  and     b.nr_seq_pend_regra = d.nr_seq_pend_regra
  and     upper(c.nm_tabela) = upper(nm_tabela_p)
  and     not exists (SELECT 1 from escala_pend_pac_acao e where e.nr_seq_pend_pac_acao = a.nr_sequencia and e.nr_seq_escala = a.nr_seq_escala);


BEGIN
ie_protocolo_assistencial_w := (nr_restrigir_regras_p IS NOT NULL AND nr_restrigir_regras_p::text <> '');

nr_atendimento_w	    := nr_atendimento_p;
cd_setor_atendimento_w	:= obter_setor_atendimento(nr_atendimento_p);
cd_pessoa_fisica_w	    := obter_pessoa_atendimento(nr_atendimento_p,'C');
qt_idade_w		        := obter_idade_pf(cd_pessoa_fisica_w,clock_timestamp(),'A');
qt_idade_dias_w		    := obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'DIA');
qt_peso_gramas_w	    := (coalesce(obter_peso_pf(cd_pessoa_fisica_w),0) * 1000);

select coalesce(max(ie_versao_sepse),'1')
into STRICT   ie_versao_sepse_w
from   parametro_medico
where  cd_estabelecimento = coalesce(obter_dados_atendimento(nr_atendimento_p,'EST'), obter_estabelecimento_ativo);

if (ie_versao_sepse_w = '2') then
	if (ie_opcao_sepsis_p in ('SC','RE')) then
		ie_status_w := ('SC,RE');
	elsif (ie_opcao_sepsis_p in ('D','RD','RF','SN')) then
		ie_status_w := ('D,RD,RF,SN');
	else
		ie_status_w := ie_opcao_sepsis_p||',';
	end if;
end if;

	
open C01;
loop
fetch C01 into	
	nr_seq_pend_regra_w,
	vl_minimo_w,
	vl_maximo_w,
	nm_tabela_w,
	nm_atributo_w,
	ie_escala_w,
	nr_seq_regra_result_w,
	ie_informacao_w,
	ie_tipo_atributo_w,
	ds_function_w,
	cd_resposta_w,
        ie_valor_comparacao_w,
        vl_diferenca_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin	
	if  length(coalesce(trim(both ds_function_w), '')) > 0 then
      nm_atributo_w := ds_function_w;
    end if;	
	RAISE NOTICE '%', nr_sequencia_w;
                		
    if ie_protocolo_assistencial_w then

        if (upper(nm_tabela_p) = 'ESCALA_EIF') then 
            
            SQLEscalaAtendimento   :=
            ' select somente_numero(obter_resultado_escala_eif(e.nr_sequencia,''T'')), '            ||
            ' 		 somente_numero(obter_resultado_escala_eif(e.nr_sequencia,''S'')), '            ||
            '        '''' ie_informacao_ret '                                                       ||
            ' from	 escala_eif  e '                                                                ||
            ' where	 e.nr_atendimento =  ' || nr_atendimento_p                                      ||
            ' and    e.ie_situacao = ''A'' '                                                        ||
            ' and    e.dt_liberacao is not null '                                                   ||
            ' and    upper(''escala_eif'') = upper(''' || nm_tabela_w || ''')'                          ||
            ' and     (' || qt_horas_retroativa_p || ' = 0 or dt_liberacao >= sysdate - ' || qt_horas_retroativa_p || ')';
        
        elsif (upper(nm_tabela_p) = 'ESCALA_EIF_II' or upper(nm_tabela_w) = 'ESCALA_EIF_II') then 
        
            SQLEscalaAtendimento   :=
            ' select somente_numero(e.qt_pontos), '                                                 ||
            ' 		 somente_numero(obter_nr_resul_score_flex_2(e.qt_pontos, e.nr_sequencia)), '    ||
            '        '''' ie_informacao_ret '                                                       ||
            ' from	 escala_eif_ii   e '                                                            ||
            ' where	 e.nr_atendimento =  ' || nr_atendimento_p                                      ||
            ' and    e.ie_situacao = ''A'' '                                                        ||
            ' and    e.dt_liberacao is not null '                                                   ||
            ' and    upper(''escala_eif_ii'') = upper(''' || nm_tabela_w || ''')'                           ||
            ' and     (' || qt_horas_retroativa_p || ' = 0 or dt_liberacao >= sysdate - ' || qt_horas_retroativa_p || ')';

        else
            SQLEscalaAtendimento   :=
            ' select -999, '                                                                        ||
            '        -999, '                                                                        ||
                    nm_atributo_w                                                                   ||
            ' from   ' || nm_tabela_w                                                               ||
            ' where  nr_atendimento =  ' || nr_atendimento_p                                        ||
            ' and    ie_situacao = ''A'' '                                                          ||
            ' and    dt_liberacao is not null '                                                     ||
            ' and    upper(''escala_eif_ii'') <> upper(''' || nm_tabela_w || ''')'                  ||
            ' and    upper(''escala_eif'')    <> upper(''' || nm_tabela_w || ''')'                  ||
            ' and     (' || qt_horas_retroativa_p || ' = 0 or dt_liberacao >= sysdate - ' || qt_horas_retroativa_p || ')';

       end if;
       
       open CursorEscala for EXECUTE SQLEscalaAtendimento;

    else
            
                if (upper(nm_tabela_p) = 'ESCALA_EIF') then 
                    
                    SQLEscalaLiberado   :=
                    ' select somente_numero(obter_resultado_escala_eif(e.nr_sequencia,''T'')), '            ||
                    ' 		 somente_numero(obter_resultado_escala_eif(e.nr_sequencia,''S'')), '            ||
                    '        '''' ie_informacao_ret '                                                       ||
                    ' from	 escala_eif  e '                                                                ||
                    ' where	 e.nr_sequencia =  ' || nr_sequencia_p;

                elsif (upper(nm_tabela_p) = 'ESCALA_EIF_II') then 
                
                    SQLEscalaLiberado   :=
                    ' select somente_numero(e.qt_pontos), '                                                 ||
                    ' 		 somente_numero(obter_nr_resul_score_flex_2(e.qt_pontos, e.nr_sequencia)), '    ||
                    '        '''' ie_informacao_ret '                                                       ||
                    ' from	 escala_eif_ii   e '                                                            ||
                    ' where	 e.nr_sequencia = ' || nr_sequencia_p;

                else
                 
                    SQLEscalaLiberado  :=
                    ' select -999, '                                                                        ||
                    '        -999, '                                                                        ||
                    '        to_char(' || nm_atributo_w || ') '                                             ||
                    ' from   ' || nm_tabela_w                                                               ||
                    ' where  nr_sequencia = '   || nr_sequencia_p;
                end if;

            

        open CursorEscala for EXECUTE SQLEscalaLiberado;

    end if;	

    loop
    fetch CursorEscala into
            vl_atributo_w,
            nr_seq_result_w,
            v_valor_escala;
    EXIT WHEN NOT FOUND; /* apply on CursorEscala */
    begin
        
        gerar_alerta_sofa_w := true;

        if (nm_tabela_w <> 'ESCALA_EIF') and (nm_tabela_w <> 'ESCALA_EIF_II') then
            if (ie_tipo_atributo_w	= 'VARCHAR2' and length(coalesce(trim(both ds_function_w), '')) > 0) then --Se tiver valor de function
                ie_informacao_ret_w := v_valor_escala;
                ie_informacao_w     := substr(obter_desc_expressao(cd_resposta_w), 1, 1000);
            elsif (ie_tipo_atributo_w	= 'VARCHAR2') then
                ie_informacao_ret_w := v_valor_escala;
            else
                vl_atributo_w       := v_valor_escala;
            end if;
        end if;

        if	(
              (coalesce(vl_atributo_w,-999) > -999) and (vl_atributo_w	>= vl_minimo_w) and (vl_atributo_w	<= vl_maximo_w) and (upper(nm_atributo_w) <> 'NR_SEQ_RESPOSTA') and
               nr_seq_regra_result_w = 0
            ) or
            (
              (upper(nm_atributo_w) = 'NR_SEQ_RESPOSTA') and (vl_atributo_w = ie_informacao_w)
            ) or
            (nr_seq_regra_result_w > 0 AND nr_seq_regra_result_w = nr_seq_result_w) or
            (
              (upper(ie_informacao_ret_w) = upper(ie_informacao_w)) and (ie_tipo_atributo_w	= 'VARCHAR2')
            ) then
            
            
            if (nm_tabela_w = 'ESCALA_SEPSE') then
            
                select	max(nr_seq_sv)
                into STRICT	nr_seq_sinal_vital_w
                from	escala_sepse
                where	nr_sequencia = nr_sequencia_p;
			
			elsif (nm_tabela_w = 'ESCALA_SEPSE_INFANTIL') then
			
				select max(nr_seq_sv)
				into STRICT   nr_seq_sinal_vital_w
				from   escala_sepse_infantil
				where  nr_sequencia = nr_sequencia_p;

            elsif (nm_tabela_w = 'ESCALA_MEWS') then
				select max(nr_seq_sinal_vital)
				into STRICT   nr_seq_sinal_vital_w
				from   escala_mews
				where  nr_sequencia = nr_sequencia_p;

            end if;
	
            if	((nm_tabela_w = 'ESCALA_SOFA') and (ie_valor_comparacao_w IS NOT NULL AND ie_valor_comparacao_w::text <> '') and (vl_diferenca_w IS NOT NULL AND vl_diferenca_w::text <> ''))  then		
		gerar_alerta_sofa_w := false;

		select 	max(coalesce(QT_PONTUACAO,0))
		into STRICT	vl_maior_sofa_w
		from 	ESCALA_SOFA
		where 	nr_atendimento = nr_atendimento_p
		and 	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

		select 	min(coalesce(QT_PONTUACAO,0))
		into STRICT	vl_menor_sofa_w
		from 	ESCALA_SOFA
		where 	nr_atendimento = nr_atendimento_p
		and 	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');		

		select  max(coalesce(qt_pontuacao,0))
		into STRICT	vl_atual_sofa_w
		from 	ESCALA_SOFA
		where 	nr_atendimento = nr_atendimento_p
		and	dt_liberacao = (SELECT max(dt_liberacao) from ESCALA_SOFA where nr_atendimento = nr_atendimento_p);

		select  max(coalesce(qt_pontuacao,0))
		into STRICT	vl_primeiro_sofa_w
		from 	ESCALA_SOFA
		where 	nr_atendimento = nr_atendimento_p
		and	dt_liberacao = (SELECT min(dt_liberacao) from ESCALA_SOFA where nr_atendimento = nr_atendimento_p);

		select  max(coalesce(qt_pontuacao,0))
		into STRICT	vl_penultimo_sofa_w
		from 	ESCALA_SOFA
		where 	nr_atendimento = nr_atendimento_p
		and	dt_liberacao = (SELECT max(dt_liberacao) from ESCALA_SOFA
					where nr_atendimento = nr_atendimento_p
					and dt_liberacao <> (select max(dt_liberacao) from ESCALA_SOFA 
							    where nr_atendimento = nr_atendimento_p));
		
		if (ie_valor_comparacao_w = 'MM') then		
			if ((vl_maior_sofa_w - vl_menor_sofa_w) >= vl_diferenca_w) then			
				gerar_alerta_sofa_w := true;
			end if;
		elsif (ie_valor_comparacao_w = 'PA') then		
			if ((vl_primeiro_sofa_w - vl_atual_sofa_w) >= vl_diferenca_w) then			
				gerar_alerta_sofa_w := true;
			end if;		
		elsif (ie_valor_comparacao_w = 'UA') then
	
			if ((vl_penultimo_sofa_w - vl_atual_sofa_w) >= vl_diferenca_w) then			
				gerar_alerta_sofa_w := true;
			end if;
		end if;
		
	    end if;

            select GQA_regra_complementar(nm_usuario_p, nr_atendimento_w, nr_seq_pend_regra_w) 
            into STRICT ie_restricao_complementar_w
;

            if (ie_restricao_complementar_w = 'X' AND gerar_alerta_sofa_w) then		
                if ie_protocolo_assistencial_w then
                
                    if (nr_regras_atendidas_p IS NOT NULL AND nr_regras_atendidas_p::text <> '') then
                        nr_regras_atendidas_p := nr_regras_atendidas_p || ',';
                    end if;

                    nr_regras_atendidas_p := nr_regras_atendidas_p || nr_seq_pend_regra_w;
                else

                    select	nextval('gqa_pendencia_pac_seq')
                    into STRICT	nr_sequencia_w
;

                    if (nr_seq_sinal_vital_w <= 0) then
                        nr_seq_sinal_vital_w := null;
                    end if;

                    insert into gqa_pendencia_pac(	nr_sequencia,
                                    dt_atualizacao,
                                    nm_usuario,
                                    dt_atualizacao_nrec,
                                    nm_usuario_nrec,
                                    cd_pessoa_fisica,
                                    nr_atendimento,
                                    ie_escala,
                                    nr_seq_escala,
                                    nr_seq_pend_regra,
                                    nr_seq_sinal_vital)
                    values (	nr_sequencia_w,
                                    clock_timestamp(),
                                    nm_usuario_p,
                                    clock_timestamp(),
                                    nm_usuario_p,
                                    cd_pessoa_fisica_w,
                                    nr_atendimento_w,
                                    ie_escala_w,
                                    nr_sequencia_p,
                                    nr_seq_pend_regra_w,
                                    nr_seq_sinal_vital_w);

                    commit;
					RAISE NOTICE '%', nr_sequencia_w;
					CALL gerar_consulta_reg_mentor(nm_usuario_p, nm_tabela_p , nr_seq_pend_regra_w, nr_sequencia_p, nr_sequencia_w, vl_atributo_w, nm_atributo_w);
                    CALL GQA_GERAR_ACAO_REGRA(nr_seq_pend_regra_w,nr_sequencia_w,nr_atendimento_w,cd_pessoa_fisica_w,nm_usuario_p);
                end if;
            end if;
        end if;

        end;
    end loop;
    close CursorEscala;
	
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
  nr_seq_pend_pac_acao_w,
  nr_seq_escala_w,
  nr_seq_score_flex_w,
  nr_seq_score_flex_ii_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
		insert into escala_pend_pac_acao(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_pend_pac_acao,
			nr_seq_escala,
			nr_seq_score_flex,
			nr_seq_score_flex_ii)
		 values ( nextval('escala_pend_pac_acao_seq'),
			clock_timestamp(),
			wheb_usuario_pck.get_nm_usuario,
			clock_timestamp(),
			wheb_usuario_pck.get_nm_usuario,
			nr_seq_pend_pac_acao_w,
			nr_seq_escala_w,
			nr_seq_score_flex_w,
			nr_seq_score_flex_ii_w);
	end;
end loop;
close C02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gqa_liberacao_escala ( nr_atendimento_p bigint, nr_sequencia_p bigint, nm_usuario_p text, nm_tabela_p text, nr_regras_atendidas_p INOUT text, ie_opcao_sepsis_p text default 'X', nr_restrigir_regras_p text default null, qt_horas_retroativa_p bigint default 0) FROM PUBLIC;

