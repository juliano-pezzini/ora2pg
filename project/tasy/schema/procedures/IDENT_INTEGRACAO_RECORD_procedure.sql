-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ident_integracao_record (tipo_integracao_p text default 'SV', categoria_integracao_p text default 'SVI', nr_atendimento_value_p bigint default null) AS $body$
DECLARE

  c2_w CURSOR FOR
  -- ESTABELECIMENTO
  SELECT distinct to_char(u.cd_pessoa_fisica) as cd_usuario
  from REGRA_NOT_INTEGRACAO r
  inner join usuario u on u.cd_estabelecimento = r.cd_estabelecimento
  where
  (u.cd_pessoa_fisica IS NOT NULL AND u.cd_pessoa_fisica::text <> '')
  and u.ie_situacao = 'A'
  and (r.cd_estabelecimento IS NOT NULL AND r.cd_estabelecimento::text <> '')
  and coalesce(r.cd_perfil::text, '') = ''
  and coalesce(r.cd_pessoa_fisica::text, '') = ''
  and coalesce(r.ie_tipo_evolucao::text, '') = ''
  and r.cd_notificacao_integracao = categoria_integracao_p
  and r.cd_registro_notificacao = tipo_integracao_p

UNION

  -- USUARIO
  SELECT distinct to_char(u.cd_pessoa_fisica) as cd_usuario
  from REGRA_NOT_INTEGRACAO rr
  inner join USUARIO u on u.cd_pessoa_fisica = rr.cd_pessoa_fisica
  where (rr.cd_pessoa_fisica IS NOT NULL AND rr.cd_pessoa_fisica::text <> '')
  and rr.cd_notificacao_integracao = categoria_integracao_p
  and rr.cd_registro_notificacao = tipo_integracao_p
  
UNION

  -- PERFIL
  select distinct to_char(u.cd_pessoa_fisica) as cd_usuario
  from PERFIL p
  inner join USUARIO_PERFIL up on up.cd_perfil = p.cd_perfil
  inner join USUARIO u on u.nm_usuario = up.nm_usuario
  inner join regra_not_integracao rr on rr.cd_perfil = p.cd_perfil
  where p.ie_situacao='A' and u.ie_situacao = 'A'
  and rr.cd_notificacao_integracao = categoria_integracao_p
  and rr.cd_registro_notificacao = tipo_integracao_p
  and (rr.cd_perfil IS NOT NULL AND rr.cd_perfil::text <> '')
  and coalesce(rr.cd_pessoa_fisica::text, '') = ''
  and coalesce(rr.ie_tipo_evolucao::text, '') = ''
  and (u.cd_pessoa_fisica IS NOT NULL AND u.cd_pessoa_fisica::text <> '')
  
UNION

  --- FUNCAO EVOLUCAO
  select distinct to_char(u.cd_pessoa_fisica) as cd_usuario
  from REGRA_NOT_INTEGRACAO rr
  inner join USUARIO u on rr.ie_tipo_evolucao = u.ie_tipo_evolucao
  where (u.cd_pessoa_fisica IS NOT NULL AND u.cd_pessoa_fisica::text <> '')
  and u.ie_situacao = 'A'
  and (rr.ie_tipo_evolucao IS NOT NULL AND rr.ie_tipo_evolucao::text <> '')
  and coalesce(rr.cd_pessoa_fisica::text, '') = ''
  and coalesce(rr.cd_perfil::text, '') = ''
  and rr.cd_notificacao_integracao = categoria_integracao_p
  and rr.cd_registro_notificacao = tipo_integracao_p;

  r2_w c2_w%rowtype;

BEGIN
  open c2_w;
  <<loop_insert>> loop
    fetch c2_w into r2_w;
    EXIT WHEN NOT FOUND; /* apply on c2_w */
    begin
      insert into integration_notifications(nr_sequencia,
      dt_record,
      dt_atualizacao,
      nm_usuario,
      cd_person,
      nr_encounter,
      ie_type_record,
      nr_seq_record,
      ds_stack,
      ie_viewed,
      nr_seq_record_comp,
      ds_mensagem)
      values (nextval('integration_notifications_seq'),
      clock_timestamp(),
      clock_timestamp(),
      'tasy',
      r2_w.cd_usuario,
      nr_atendimento_value_p,
      tipo_integracao_p,
      0,
      '',
      'N',
      0,
      categoria_integracao_p);
      exception
        when others then
          CALL gravar_log_sistema(20304, 'ident_integracao_record: Atendimento: ' || to_char(nr_atendimento_value_p)
             || ' Usuario(cd_pessoa_fisica): ' || to_char(r2_w.cd_usuario) || ' - '
             || SUBSTR(SQLERRM, 1, 200), 'Tasy');
          goto loop_insert;
    end;

  end loop;
  close c2_w;
  commit;
  RAISE NOTICE 'ident_integracao_record: Executado com sucesso.';

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ident_integracao_record (tipo_integracao_p text default 'SV', categoria_integracao_p text default 'SVI', nr_atendimento_value_p bigint default null) FROM PUBLIC;

