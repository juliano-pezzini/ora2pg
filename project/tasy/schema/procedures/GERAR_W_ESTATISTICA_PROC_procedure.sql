-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_estatistica_proc ( dt_inicial_p timestamp, dt_final_p timestamp, cd_convenio_p bigint, cd_setor_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_proc_princ_w	bigint;
nr_seq_atepacu_w		bigint;
nr_interno_conta_w		bigint;
cd_setor_atendimento_w	bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
vl_procedimento_w		double precision;
vl_material_w		double precision;
nr_sequencia_w		bigint;
nr_interno_conta_anterior_w	bigint;
cd_convenio_w		integer;
qt_procedimento_w		double precision;
nr_seq_proc_interno_w	bigint;	/* Rafael em 20/07/06 OS36504 */
cd_estabelecimento_w	smallint;	/*Geliard em 11/09/08 OS108244*/
 
 
/* 
Edgar 11/07/2005 
Procedure para gerar relatório CI - Estatística dos procedimentos realizados CATE02353 
*/
 
c01 CURSOR FOR 
SELECT	a.nr_seq_atepacu, 
	a.nr_interno_conta, 
	a.cd_setor_atendimento, 
	a.cd_procedimento, 
	a.ie_origem_proced, 
	a.vl_procedimento, 
	a.nr_sequencia, 
	b.cd_convenio_parametro, 
	a.qt_procedimento, 
	a.nr_seq_proc_interno 
from	setor_atendimento d, 
	procedimento c, 
	conta_paciente b, 
	procedimento_paciente a 
where	trunc(a.dt_procedimento, 'dd') between dt_inicial_p and dt_final_p 
and	a.nr_interno_conta		= b.nr_interno_conta 
and	b.cd_estabelecimento		= cd_estabelecimento_p 
and	coalesce(a.cd_motivo_exc_conta::text, '') = '' 
and	c.cd_procedimento		= a.cd_procedimento 
and	c.ie_origem_proced		= a.ie_origem_proced 
and	a.cd_setor_atendimento		= d.cd_setor_atendimento 
order by a.nr_interno_conta, 
	d.cd_setor_atendimento, 
	c.cd_procedimento;

c02 CURSOR FOR 
SELECT	a.nr_seq_atepacu, 
	a.nr_interno_conta, 
	a.cd_setor_atendimento, 
	a.cd_procedimento, 
	a.ie_origem_proced, 
	a.vl_procedimento, 
	a.nr_sequencia, 
	b.cd_convenio_parametro, 
	a.qt_procedimento, 
	a.nr_seq_proc_interno 
from	setor_atendimento d, 
	procedimento c, 
	conta_paciente b, 
	procedimento_paciente a 
where	trunc(a.dt_procedimento, 'dd') between dt_inicial_p and dt_final_p 
and	a.nr_interno_conta		= b.nr_interno_conta 
and	b.cd_estabelecimento		= cd_estabelecimento_p 
and	b.cd_convenio_parametro		<> 32 
and	coalesce(a.cd_motivo_exc_conta::text, '') = '' 
and	c.cd_procedimento		= a.cd_procedimento 
and	c.ie_origem_proced		= a.ie_origem_proced 
and	a.cd_setor_atendimento		= d.cd_setor_atendimento 
and	a.nr_sequencia <> coalesce(a.nr_seq_proc_pacote,0) 
--and 	a.vl_procedimento <> 0 
union all
 
SELECT	a.nr_seq_atepacu, 
	a.nr_interno_conta, 
	a.cd_setor_atendimento, 
	a.cd_procedimento, 
	a.ie_origem_proced, 
	a.vl_procedimento, 
	a.nr_sequencia, 
	b.cd_convenio_parametro, 
	a.qt_procedimento, 
	a.nr_seq_proc_interno 
from	setor_atendimento d, 
	procedimento c, 
	conta_paciente b, 
	procedimento_paciente a 
where	trunc(a.dt_procedimento, 'dd') between dt_inicial_p and dt_final_p 
and	a.nr_interno_conta		= b.nr_interno_conta 
and	b.cd_estabelecimento		= 1 
and	b.cd_convenio_parametro		= 32 
and	coalesce(a.cd_motivo_exc_conta::text, '') = '' 
and	c.cd_procedimento		= a.cd_procedimento 
and	c.ie_origem_proced		= a.ie_origem_proced 
and	a.cd_setor_atendimento		= d.cd_setor_atendimento 
and	a.nr_sequencia = coalesce(a.nr_seq_proc_pacote,a.nr_sequencia) 
--and 	a.vl_procedimento <> 0 
order	by nr_interno_conta, 
	cd_setor_atendimento, 
	cd_procedimento;


BEGIN 
 
delete	from w_estatistica_proc 
where	nm_usuario		= nm_usuario_p 
or	dt_atualizacao	< clock_timestamp() - interval '1 days';
 
-- Tratamento para imprimir somente uma vez 
nr_interno_conta_anterior_w	:= 0;
 
/*Obter estabelcimento corrente*/
 
select 	wheb_usuario_pck.get_cd_estabelecimento 
into STRICT	cd_estabelecimento_w
;
 
/*Para o estabelecimento 1 não buscar Pacotes*/
 
if (cd_estabelecimento_w = 1) then 
	open c02;
	loop 
	fetch c02 into	nr_seq_atepacu_w, 
			nr_interno_conta_w, 
			cd_setor_atendimento_w, 
			cd_procedimento_w, 
			ie_origem_proced_w, 
			vl_procedimento_w, 
			nr_sequencia_w, 
			cd_convenio_w, 
			qt_procedimento_w, 
			nr_seq_proc_interno_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
 
		select	coalesce(max(nr_sequencia), 0) 
		into STRICT	nr_seq_proc_princ_w 
		from	procedimento_paciente 
		where	nr_interno_conta	= nr_interno_conta_w 
		and	nr_seq_atepacu	= nr_seq_atepacu_w 
		and	coalesce(cd_motivo_exc_conta::text, '') = '' 
		and	ie_proc_princ_atend	= 'S';
 
		if (nr_seq_proc_princ_w = 0) or (nr_sequencia_w = nr_seq_proc_princ_w) then 
 
			vl_material_w	:= 0;
			if (nr_interno_conta_anterior_w <> nr_interno_conta_w) then 
 
				select	coalesce(sum(vl_material),0) 
				into STRICT	vl_material_w 
				from	material_atend_paciente 
				where	nr_interno_conta	= nr_interno_conta_w 
				and	coalesce(cd_motivo_exc_conta::text, '') = '';
 
				nr_interno_conta_anterior_w	:= nr_interno_conta_w;
 
			end if;
 
			insert	into w_estatistica_proc(	nr_sequencia, 
							cd_setor_atendimento, 
							cd_procedimento, 
							ie_origem_proced, 
							cd_convenio, 
							qt_procedimento, 
							vl_material, 
							vl_procedimento, 
							vl_total, 
							nm_usuario, 
							dt_atualizacao, 
							nr_seq_proc_interno) 
						values (	nextval('w_estatistica_proc_seq'), 
							cd_setor_atendimento_w, 
							cd_procedimento_w, 
							ie_origem_proced_w, 
							cd_convenio_w, 
							qt_procedimento_w, 
							vl_material_w, 
							vl_procedimento_w, 
							vl_material_w + vl_procedimento_w, 
							nm_usuario_p, 
							clock_timestamp(), 
							nr_seq_proc_interno_w);
 
		end if;
	end loop;
	close c02;
else 
	open c01;
	loop 
	fetch c01 into	nr_seq_atepacu_w, 
				nr_interno_conta_w, 
				cd_setor_atendimento_w, 
				cd_procedimento_w, 
				ie_origem_proced_w, 
				vl_procedimento_w, 
				nr_sequencia_w, 
				cd_convenio_w, 
				qt_procedimento_w, 
				nr_seq_proc_interno_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
 
		/*select	nvl(max(nr_sequencia), 0) 
		into	nr_seq_proc_princ_w 
		from	procedimento_paciente 
		where	nr_interno_conta	= nr_interno_conta_w 
		and	nr_seq_atepacu	= nr_seq_atepacu_w 
		and	cd_motivo_exc_conta	is null; 
		--and	ie_proc_princ_atend	= 'S'; 
 
		if	(nr_seq_proc_princ_w = 0) or 
			(nr_sequencia_w = nr_seq_proc_princ_w) then*/
 
 
		vl_material_w	:= 0;
		if (nr_interno_conta_anterior_w <> nr_interno_conta_w) then 
 
			select	coalesce(sum(vl_material),0) 
			into STRICT	vl_material_w 
			from	material_atend_paciente 
			where	nr_interno_conta	= nr_interno_conta_w 
			and	coalesce(cd_motivo_exc_conta::text, '') = '';
 
			nr_interno_conta_anterior_w	:= nr_interno_conta_w;
 
		end if;
 
		insert	into w_estatistica_proc(	nr_sequencia, 
						cd_setor_atendimento, 
						cd_procedimento, 
						ie_origem_proced, 
						cd_convenio, 
						qt_procedimento, 
						vl_material, 
						vl_procedimento, 
						vl_total, 
						nm_usuario, 
						dt_atualizacao, 
						nr_seq_proc_interno) 
					values (	nextval('w_estatistica_proc_seq'), 
						cd_setor_atendimento_w, 
						cd_procedimento_w, 
						ie_origem_proced_w, 
						cd_convenio_w, 
						qt_procedimento_w, 
						vl_material_w, 
						vl_procedimento_w, 
						vl_material_w + vl_procedimento_w, 
						nm_usuario_p, 
						clock_timestamp(), 
						nr_seq_proc_interno_w);
 
		--end if; 
	end loop;
	close c01;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_estatistica_proc ( dt_inicial_p timestamp, dt_final_p timestamp, cd_convenio_p bigint, cd_setor_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

