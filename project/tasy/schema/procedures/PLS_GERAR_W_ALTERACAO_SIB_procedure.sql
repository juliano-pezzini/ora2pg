-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_w_alteracao_sib ( nr_seq_lote_sib_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


dt_referencia_w			timestamp;
ie_tipo_reg_w			smallint;
nr_seq_segurado_w		bigint;
cd_pessoa_fisica_w		varchar(10);
nm_segurado_w			varchar(255);
dt_nascimento_w			timestamp;
ie_sexo_w			smallint;
nr_cpf_w			varchar(11);
nr_pis_pasep_w			varchar(11);
nm_mae_segurado_w		varchar(255);
cd_cns_w			varchar(15);
nr_identidade_w			varchar(15);
ds_orgao_emissor_ci_w		pessoa_fisica.ds_orgao_emissor_ci%type;
cd_nacionalidade_w		varchar(8);
nr_seq_titular_w		bigint;
ie_regulamentacao_w		varchar(2);
cd_plano_ans_w			varchar(20);
cd_plano_ans_pre_w		varchar(20);
dt_liberacao_w			timestamp;
ds_logradouro_w			varchar(50);
ds_numero_w			varchar(5);
ds_complemento_w		varchar(15);
ds_bairro_w			varchar(50);
ds_municipio_w			varchar(50);
uf_w				pls_segurado_sib.sg_estado%type;
cep_w				varchar(15);
dt_mesano_referencia_w		timestamp;
dt_reinclusao_w			timestamp;
nr_seq_portabilidade_w		bigint;
nr_cco_w			bigint;
ie_digito_cco_w			smallint;
dt_referencia_fim_w		timestamp;
ie_tipo_beneficiario_W		varchar(10);
dt_reativacao_w			timestamp;
qt_endereco_residencial_w	bigint;
nr_seq_contrato_w		bigint;
nr_seq_segurado_sib_w		bigint;
nr_seq_seg_sib_ant_w		bigint;
nm_pessoa_fisica_ant_w		varchar(255);
dt_nascimento_ant_w		timestamp;
ie_sexo_ant_w			smallint;
nm_mae_pessoa_fisica_ant_w	varchar(255);
ds_endereco_ant_w		varchar(50);
nr_endereco_ant_w		varchar(5);
ds_bairro_ant_w			varchar(50);
cd_municipio_ibge_ant_w		varchar(50);
sg_estado_ant_w			pls_segurado_sib.sg_estado%type;
cd_cep_ant_w			varchar(15);
nr_cartao_nac_sus_ant_w		varchar(15);
nr_identidade_ant_w		varchar(15);
ds_orgao_emissor_ci_ant_w	pessoa_fisica.ds_orgao_emissor_ci%type;
cd_nacionalidade_ant_w		varchar(8);
nr_pis_pasep_ant_w		varchar(11);
nr_cpf_ant_w			varchar(11);
ie_alteracao_w			bigint;
qt_exitir_alteracao_w		bigint;
nr_seq_alteracao_sib_w		bigint;
qt_registros_w			bigint;
ie_w				bigint;
dt_mesano_referencia_ant_w	timestamp;
ie_scpa_contrato_w		varchar(10);
ie_tipo_logradouro_w		varchar(10);
cd_municipio_ibge_resid_w	varchar(10);
ie_tipo_historico_w		varchar(10);
cd_estabelecimento_w		bigint;
ds_alteracao_w			w_pls_alteracao_sib.ds_alteracoes%type;
ie_logradouro_sib_w		pls_parametros.ie_logradouro_sib%type;
nr_seq_parentesco_ant_w		pls_segurado_historico.nr_seq_parentesco_ant%type;
nr_seq_parentesco_w		pls_segurado.nr_seq_parentesco%type;
cd_sib_w			grau_parentesco.cd_sib%type := null;
nr_seq_plano_w  		pls_segurado.nr_seq_plano%type;
nr_seq_alt_plano_seg_w		pls_segurado_alt_plano.nr_sequencia%type;
nr_seq_plano_ant_w		pls_segurado_alt_plano.nr_seq_plano_ant%type;
cd_scpa_contrato_w		pls_contrato.cd_scpa%type;
ds_historico_w			pls_segurado_historico.ds_historico%type;
nr_seq_motivo_cancelamento_w	pls_segurado.nr_seq_motivo_cancelamento%type;
dt_referencia_lote_w		timestamp;

C01 CURSOR FOR
	SELECT	2 ie_tipo_reg,
		a.nr_sequencia,
		a.cd_pessoa_fisica,
		substr(coalesce(l.nm_pessoa_fisica,b.nm_pessoa_fisica),1,69),
		b.dt_nascimento,
		CASE WHEN b.ie_sexo='M' THEN 1  ELSE CASE WHEN b.ie_sexo='F' THEN 3  ELSE 0 END  END ,
		coalesce(b.nr_cpf,'00000000000'),
		coalesce(b.nr_pis_pasep,'00000000000'),
		coalesce(substr(b.nr_cartao_nac_sus,1,15),'000000000000000') cd_cns,
		b.nr_identidade,
		b.ds_orgao_emissor_ci,
		b.cd_nacionalidade,
		a.nr_seq_titular,
		c.ie_regulamentacao,
		CASE WHEN ie_regulamentacao='P' THEN coalesce(c.nr_protocolo_ans,'000000000')  ELSE '000000000' END ,
		CASE WHEN ie_regulamentacao='P' THEN  ' '  ELSE CASE WHEN ie_scpa_contrato_w='S' THEN coalesce(e.cd_scpa,c.cd_scpa)  ELSE c.cd_scpa END  END ,
		a.dt_contratacao,
		null,
		a.dt_rescisao,
		coalesce(a.nr_seq_portabilidade,0),
		a.nr_cco,
		a.ie_digito_cco,
		e.ie_tipo_beneficiario,
		a.dt_reativacao,
		e.nr_sequencia,
		d.ie_tipo_historico,
		d.nr_seq_parentesco_ant,
		a.nr_seq_parentesco,
		c.nr_sequencia,
		e.cd_scpa,
		d.ds_historico
	FROM pls_contrato e, pls_segurado_historico d, pls_plano c, pls_segurado a, pessoa_fisica b
LEFT OUTER JOIN pls_pessoa_fisica l ON (b.cd_pessoa_fisica = l.cd_pessoa_fisica)
WHERE a.nr_sequencia		= d.nr_seq_segurado and a.cd_pessoa_fisica	= b.cd_pessoa_fisica  and a.nr_seq_plano		= c.nr_sequencia and a.nr_seq_contrato	= e.nr_sequencia and e.cd_estabelecimento	= cd_estabelecimento_p and a.ie_tipo_segurado in ('B','R') and c.ie_tipo_operacao	= 'B' and d.ie_tipo_historico in ('9','8','10','12','14','19','20','71') and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and coalesce(a.dt_cancelamento::text, '') = '' and a.dt_contratacao <= dt_referencia_w and d.dt_ocorrencia_sib >= dt_referencia_w and d.dt_ocorrencia_sib <= dt_referencia_fim_w;

C02 CURSOR FOR
	SELECT 	2 ie_tipo_reg,
		a.nr_sequencia,
		a.cd_pessoa_fisica,
		a.nr_seq_titular,
		c.ie_regulamentacao,
		CASE WHEN ie_regulamentacao='P' THEN coalesce(c.nr_protocolo_ans,'000000000')  ELSE '000000000' END ,
		CASE WHEN ie_regulamentacao='P' THEN  ' '  ELSE CASE WHEN ie_scpa_contrato_w='S' THEN coalesce(e.cd_scpa,c.cd_scpa)  ELSE c.cd_scpa END  END ,
		a.dt_contratacao,
		a.dt_reativacao,
		coalesce(a.nr_seq_portabilidade,0),
		a.nr_seq_motivo_cancelamento,
		a.nr_cco,
		a.ie_digito_cco,
		c.nr_sequencia,
		e.cd_scpa
	from	pls_segurado a,
		pls_plano c,
		pls_contrato e
	where	a.nr_seq_plano		= c.nr_sequencia
	and	a.nr_seq_contrato	= e.nr_sequencia
	and	e.cd_estabelecimento	= cd_estabelecimento_p
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	coalesce(a.dt_cancelamento::text, '') = ''
	and	e.ie_tipo_beneficiario	<> 'ENB'
	and 	((a.dt_reativacao <> dt_referencia_w) or (coalesce(a.dt_reativacao::text, '') = ''))
	and	((trunc(a.dt_rescisao,'Month') > dt_referencia_w) or (coalesce(a.dt_rescisao::text, '') = '') or (trunc(a.dt_rescisao,'Month') = dt_referencia_w and trunc(a.dt_migracao,'Month') = dt_referencia_lote_w)) 
	and	a.dt_contratacao < dt_referencia_w
	and	a.ie_tipo_segurado in ('B','R')
	and	c.ie_tipo_operacao	= 'B'
	and	exists (SELECT	1
			from	pls_pessoa_fisica_sib x
			where	x.cd_pessoa_fisica	= a.cd_pessoa_fisica
			and	x.dt_ocorrencia_sib	= dt_referencia_w);


BEGIN
delete	from	w_pls_alteracao_sib
where	nr_seq_lote_sib	= nr_seq_lote_sib_p;

select	trunc(add_months(dt_mesano_referencia,-1),'month'),
	trunc(dt_mesano_referencia,'month'),
	cd_estabelecimento
into STRICT	dt_referencia_w,
	dt_referencia_lote_w,
	cd_estabelecimento_w
from	pls_lote_sib
where	nr_sequencia	= nr_seq_lote_sib_p;

select	fim_mes(dt_referencia_w)
into STRICT	dt_referencia_fim_w
;

select	max(ie_scpa_contrato),
	max(ie_logradouro_sib)
into STRICT	ie_scpa_contrato_w,
	ie_logradouro_sib_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_w;

if (coalesce(ie_scpa_contrato_w::text, '') = '') then
	ie_scpa_contrato_w	:= 'N';
end if;

if (coalesce(ie_logradouro_sib_w::text, '') = '') then
	ie_logradouro_sib_w	:= '1';
end if;

open C01;
loop
fetch C01 into
	ie_tipo_reg_w, nr_seq_segurado_w, cd_pessoa_fisica_w, nm_segurado_w, dt_nascimento_w, ie_sexo_w, nr_cpf_w, nr_pis_pasep_w,
	cd_cns_w, nr_identidade_w, ds_orgao_emissor_ci_w, cd_nacionalidade_w, nr_seq_titular_w, ie_regulamentacao_w,
	cd_plano_ans_w, cd_plano_ans_pre_w, dt_liberacao_w, dt_mesano_referencia_w, dt_reinclusao_w, nr_seq_portabilidade_w,
	nr_cco_w, ie_digito_cco_w,ie_tipo_beneficiario_w,dt_reativacao_w,nr_seq_contrato_w,
	ie_tipo_historico_w, nr_seq_parentesco_ant_w, nr_seq_parentesco_w,nr_seq_plano_w, cd_scpa_contrato_w, ds_historico_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (ie_tipo_historico_w = '20') then
		select	max(x.cd_sib)
		into STRICT 	cd_sib_w
		from	grau_parentesco x
		where 	x.nr_sequencia = nr_seq_parentesco_w
		and 	x.cd_sib = (	SELECT	y.cd_sib
					from	grau_parentesco y
					where	y.nr_sequencia = nr_seq_parentesco_ant_w);
		if (cd_sib_w IS NOT NULL AND cd_sib_w::text <> '') then
			goto final;
		end if;
	end if;
	
	if (ie_tipo_beneficiario_w	= 'ENB') then
		goto final;
	end if;
	
	if (dt_reinclusao_w IS NOT NULL AND dt_reinclusao_w::text <> '') and (trunc(dt_reinclusao_w,'month') >= dt_referencia_w) then
		goto final;
	end if;
	
	if (ie_tipo_historico_w <> '14') and (trunc(dt_liberacao_w,'Month') = dt_referencia_w) then
		goto final;
	end if;
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_alt_plano_seg_w
	from 	pls_segurado_alt_plano
	where 	nr_seq_plano_atual	= nr_seq_plano_w
	and 	nr_seq_segurado		= nr_seq_segurado_w
	and	ie_situacao		= 'A'
	and last_day(trunc(dt_referencia_w, 'dd')) + 0.99999 < dt_alteracao;
	
	if (coalesce(nr_seq_alt_plano_seg_w,0) <> 0) then
		select 	nr_seq_plano_ant
		into STRICT	nr_seq_plano_ant_w
		from 	pls_segurado_alt_plano
		where 	nr_sequencia = nr_seq_alt_plano_seg_w;
		
		select  CASE WHEN ie_regulamentacao='R' THEN  CASE WHEN ie_scpa_contrato_w='S' THEN coalesce(cd_scpa_contrato_w,cd_scpa)  ELSE cd_scpa END   ELSE nr_protocolo_ans END
		into STRICT	cd_plano_ans_w
		from 	pls_plano a 	
		where 	nr_sequencia = nr_seq_plano_ant_w;
	end if;
	
	if (ie_tipo_historico_w = '14') then
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_interf_sib
		where	nr_seq_lote_sib	= nr_seq_lote_sib_p
		and	nr_seq_segurado	= nr_seq_segurado_w
		and	IE_TIPO_REG	= 1  LIMIT 1;
		
		if (qt_registros_w > 0) then
			goto final;
		end if;
	end if;
	
	if (ie_tipo_historico_w <> '71') then
		ds_historico_w := obter_valor_dominio(1899,ie_tipo_historico_w);
	end if;
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_alteracao_sib_w
	from	w_pls_alteracao_sib
	where	nr_seq_segurado	= nr_seq_segurado_w
	and	nr_seq_lote_sib	= nr_seq_lote_sib_p;
	
	if (nr_seq_alteracao_sib_w IS NOT NULL AND nr_seq_alteracao_sib_w::text <> '') then
		update	w_pls_alteracao_sib
		set	ds_alteracoes	= ds_alteracoes || chr(10) || ds_historico_w
		where	nr_sequencia	= nr_seq_alteracao_sib_w;
	else
		SELECT * FROM pls_obter_enderecos_benef_sib(	cd_pessoa_fisica_w, nr_seq_contrato_w, 'S', ie_logradouro_sib_w, ie_tipo_logradouro_w, ds_logradouro_w, ds_numero_w, ds_complemento_w, ds_bairro_w, ds_municipio_w, cd_municipio_ibge_resid_w, uf_w, cep_w) INTO STRICT ie_tipo_logradouro_w, ds_logradouro_w, ds_numero_w, ds_complemento_w, ds_bairro_w, ds_municipio_w, cd_municipio_ibge_resid_w, uf_w, cep_w;
		
		select	max(a.nm_pessoa_fisica)
		into STRICT	nm_mae_segurado_w
		from	pessoa_fisica a,
			compl_pessoa_fisica b
		where	b.cd_pessoa_fisica_ref	= a.cd_pessoa_fisica
		and	b.cd_pessoa_fisica	= cd_pessoa_fisica_w
		and	b.ie_tipo_complemento	= 5;
		
		if (nm_mae_segurado_w	= '') then
			select	max(a.nm_contato)
			into STRICT	nm_mae_segurado_w
			from	compl_pessoa_fisica a
			where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	a.ie_tipo_complemento	= 5;
		end if;
		
		select	nextval('w_pls_alteracao_sib_seq')
		into STRICT	nr_seq_alteracao_sib_w
		;
		
		insert into w_pls_alteracao_sib(nr_sequencia, nr_seq_lote_sib, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
						nr_seq_segurado, cd_pessoa_fisica, nm_beneficiario, dt_nascimento, ie_sexo, nr_cpf, nr_pis_pasep,
						nm_mae_segurado, cd_cns, nr_identidade, ds_orgao_emissor_ci, cd_nacionalidade, nr_seq_titular,
						ie_regulamentacao, cd_plano_ans, cd_plano_ans_pre, dt_liberacao, ds_logradouro, ds_numero,
						ds_complemento, ds_bairro, ds_municipio, sg_uf, cd_cep,ie_tipo_alteracao, ds_alteracoes)
					values (nr_seq_alteracao_sib_w, nr_seq_lote_sib_p, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
						nr_seq_segurado_w, cd_pessoa_fisica_w, nm_segurado_w, dt_nascimento_w, ie_sexo_w, nr_cpf_w, nr_pis_pasep_w,
						nm_mae_segurado_w, cd_cns_w, nr_identidade_w, ds_orgao_emissor_ci_w, cd_nacionalidade_w, nr_seq_titular_w,
						ie_regulamentacao_w, cd_plano_ans_w, cd_plano_ans_pre_w, dt_liberacao_w, ds_logradouro_w, ds_numero_w,
						ds_complemento_w, ds_bairro_w, ds_municipio_w, uf_w, cep_w,0, ds_historico_w);
	end if;
	
	<<final>>
	nr_seq_segurado_w	:= nr_seq_segurado_w;
	end;
end loop;
close C01;

ie_w	:= 0;

open C02;
loop
fetch C02 into
	ie_tipo_reg_w, nr_seq_segurado_w, cd_pessoa_fisica_w,  nr_seq_titular_w, ie_regulamentacao_w,
	cd_plano_ans_w, cd_plano_ans_pre_w, dt_liberacao_w, dt_reinclusao_w, nr_seq_portabilidade_w,
	nr_seq_motivo_cancelamento_w, nr_cco_w,	ie_digito_cco_w, nr_seq_plano_w, cd_scpa_contrato_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	
	select	count(1)
	into STRICT	qt_exitir_alteracao_w
	from	pls_segurado_historico
	where	dt_ocorrencia_sib	= dt_referencia_w
	and	nr_seq_segurado		= nr_seq_segurado_w;
	
	select	count(1)
	into STRICT	qt_registros_w
	from	w_pls_alteracao_sib
	where	nr_seq_segurado	= nr_seq_segurado_w
	and	nr_seq_lote_sib	= nr_seq_lote_sib_p;
	
	if (qt_exitir_alteracao_w	= 0) and (qt_registros_w = 0) then
		ie_alteracao_w	:= 0;
		
		begin
		select	max(x.nr_sequencia)
		into STRICT	nr_seq_segurado_sib_w
		from	pls_segurado_sib x
		where	x.nr_seq_segurado	= nr_seq_segurado_w;
		exception
		when others then
			nr_seq_segurado_sib_w	:= 0;
		end;
		
		if (coalesce(nr_seq_segurado_sib_w,0) <> 0) then
			ie_w := ie_w + 1;
			
			select	upper(substr(b.nm_pessoa_fisica,1,69)) nm_beficiario,
				b.dt_nascimento,
				CASE WHEN b.ie_sexo='M' THEN 1  ELSE CASE WHEN b.ie_sexo='F' THEN 3  ELSE 0 END  END ,
				b.nr_cpf,
				b.nr_pis_pasep,
				upper(b.nm_mae_pessoa_fisica),
				substr(b.nr_cartao_nac_sus,1,15),
				b.nr_identidade,
				upper(b.ds_orgao_emissor_ci),
				b.cd_nacionalidade,
				upper(b.ds_endereco),
				to_char(b.nr_endereco),
				upper(b.ds_complemento),
				upper(b.ds_bairro),
				b.cd_municipio_ibge,
				b.sg_estado,
				b.cd_cep,
				b.dt_geracao
			into STRICT	nm_segurado_w,
				dt_nascimento_w,
				ie_sexo_w,
				nr_cpf_w,
				nr_pis_pasep_w,
				nm_mae_segurado_w,
				cd_cns_w,
				nr_identidade_w,
				ds_orgao_emissor_ci_w,
				cd_nacionalidade_w,
				ds_logradouro_w,
				ds_numero_w,
				ds_complemento_w,
				ds_bairro_w,
				ds_municipio_w,
				uf_w,
				cep_w,
				dt_mesano_referencia_w
			from	pls_segurado_sib b
			where	nr_sequencia	= nr_seq_segurado_sib_w;
			
			ds_municipio_w	:= ds_municipio_w || Calcula_Digito('MODULO10',substr(ds_municipio_w,1,10));
			
			dt_mesano_referencia_ant_w	:= add_months(dt_mesano_referencia_w,-1);
			
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_segurado_sib
			where	nr_seq_segurado = nr_seq_segurado_w
			and	dt_geracao	= dt_mesano_referencia_ant_w;
			
			/*Verificar se existe registro para o mes anterior, caso nao existir buscar o ultimo mes gerado*/

			if (qt_registros_w = 0) then
				select	max(dt_geracao)
				into STRICT	dt_mesano_referencia_ant_w
				from	pls_segurado_sib
				where	nr_seq_segurado = nr_seq_segurado_w
				and	nr_sequencia	<> nr_seq_segurado_sib_w;
			end if;
			
			select	max(nr_sequencia)
			into STRICT	nr_seq_seg_sib_ant_w
			from	pls_segurado_sib
			where	nr_seq_segurado = nr_seq_segurado_w
			and	dt_geracao 	= dt_mesano_referencia_ant_w;
			
			if (coalesce(nr_seq_seg_sib_ant_w,0) > 0) then
				select	upper(a.nm_pessoa_fisica),
					a.dt_nascimento,
					CASE WHEN a.ie_sexo='M' THEN 1  ELSE CASE WHEN a.ie_sexo='F' THEN 3  ELSE 0 END  END ,
					a.nr_cpf,
					upper(a.nm_mae_pessoa_fisica),
					upper(a.ds_endereco),
					a.nr_endereco,
					upper(a.ds_bairro),
					a.cd_municipio_ibge,
					a.sg_estado,
					a.cd_cep,
					a.nr_cartao_nac_sus,
					a.nr_identidade,
					upper(a.ds_orgao_emissor_ci),
					a.cd_nacionalidade,
					a.nr_pis_pasep
				into STRICT	nm_pessoa_fisica_ant_w,
					dt_nascimento_ant_w,
					ie_sexo_ant_w,
					nr_cpf_ant_w,
					nm_mae_pessoa_fisica_ant_w,
					ds_endereco_ant_w,
					nr_endereco_ant_w,
					ds_bairro_ant_w,
					cd_municipio_ibge_ant_w,
					sg_estado_ant_w,
					cd_cep_ant_w,
					nr_cartao_nac_sus_ant_w,
					nr_identidade_ant_w,
					ds_orgao_emissor_ci_ant_w,
					cd_nacionalidade_ant_w,
					nr_pis_pasep_ant_w
				from	pls_segurado_sib a
				where	nr_sequencia	= nr_seq_seg_sib_ant_w;
				
				cd_municipio_ibge_ant_w	:= cd_municipio_ibge_ant_w || Calcula_Digito('MODULO10',substr(cd_municipio_ibge_ant_w,1,10));
				ds_alteracao_w		:= '';
				
				/*Em algumas conexoes, percebi que o sistema mandava a alteracao de nomes apenas quando alterado a acentuacao, porem no envio do arquivo ele retornava como erro, 
						pois a acentuacao nao ia no XML e ficava com nenhuma alteracao*/
				nm_pessoa_fisica_ant_w	:= elimina_acentos(nm_pessoa_fisica_ant_w);
				nm_segurado_w		:= elimina_acentos(nm_segurado_w);
				
				nm_mae_pessoa_fisica_ant_w	:= elimina_acentos(nm_mae_pessoa_fisica_ant_w);
				nm_mae_segurado_w	:= elimina_acentos(nm_mae_segurado_w);
				
				ds_endereco_ant_w	:= elimina_acentos(ds_endereco_ant_w);
				ds_logradouro_w		:= elimina_acentos(ds_logradouro_w);
				
				ds_bairro_ant_w		:= elimina_acentos(ds_bairro_ant_w);
				ds_bairro_w		:= elimina_acentos(ds_bairro_w);
				
				
				/*Caso houver alteracao no cadastro do beneficiario, continua o tratamento*/

				if (coalesce(nm_pessoa_fisica_ant_w,'X') <> coalesce(nm_segurado_w,'X')) then
					ie_alteracao_w	:= 1;
					ds_alteracao_w	:= 'Nome anterior : ' || nm_pessoa_fisica_ant_w || ' - Nome atual:  ' || nm_segurado_w || chr(10);
				end if;
				
				if (dt_nascimento_ant_w <> dt_nascimento_w) then
					ie_alteracao_w	:= 2;
					ds_alteracao_w	:= ds_alteracao_w || 'Dt nascimento anterior : ' || dt_nascimento_ant_w || ' - Dt nascimento atual:  ' || dt_nascimento_w|| chr(10);
				end if;
				
				if (coalesce(ie_sexo_ant_w,0) <> coalesce(ie_sexo_w,0)) then
					ie_alteracao_w	:= 3;
					ds_alteracao_w	:= ds_alteracao_w || 'Sexo anterior : ' || ie_sexo_ant_w || ' - Sexo atual:  ' || ie_sexo_w|| chr(10);
				end if;
				
				if (coalesce(nm_mae_pessoa_fisica_ant_w,'X') <> coalesce(nm_mae_segurado_w,'X')) then
					ie_alteracao_w	:= 4;
					ds_alteracao_w	:= ds_alteracao_w || wheb_mensagem_pck.get_texto(1109030)||' anterior : ' || nm_mae_pessoa_fisica_ant_w || ' - '||wheb_mensagem_pck.get_texto(1109030)||' atual:  ' || nm_mae_segurado_w|| chr(10);
				end if;
				
				if (coalesce(ds_endereco_ant_w,'X') <> coalesce(ds_logradouro_w,'X')) then
					ie_alteracao_w	:= 5;
					ds_alteracao_w	:= ds_alteracao_w || wheb_mensagem_pck.get_texto(1109031)||' anterior : ' || ds_endereco_ant_w || ' - '||wheb_mensagem_pck.get_texto(1109031)||' atual:  ' || ds_logradouro_w|| chr(10);
				end if;
				
				if (coalesce(nr_endereco_ant_w,'X') <> coalesce(ds_numero_w,'X')) then
					ie_alteracao_w	:= 6;
					ds_alteracao_w	:= ds_alteracao_w || 'Nr endereco anterior : ' || nr_endereco_ant_w || ' - Nr endereco atual:  ' || ds_numero_w|| chr(10);
				end if;
				
				if (coalesce(ds_bairro_ant_w,'X') <> coalesce(ds_bairro_w,'X')) then
					ie_alteracao_w	:= 7;
					ds_alteracao_w	:= ds_alteracao_w || 'Bairro anterior : ' || ds_bairro_ant_w || ' - Bairro atual:  ' || ds_bairro_w|| chr(10);
				end if;
				
				if (coalesce(cd_municipio_ibge_ant_w,'X') <> coalesce(ds_municipio_w,'X')) then
					ie_alteracao_w	:= 8;
					ds_alteracao_w	:= ds_alteracao_w || wheb_mensagem_pck.get_texto(1109032)||' anterior : ' || cd_municipio_ibge_ant_w || ' - '||wheb_mensagem_pck.get_texto(1109032)||' atual:  ' || ds_municipio_w|| chr(10);
				end if;
				
				if (coalesce(sg_estado_ant_w,'X') <> coalesce(uf_w,'X')) then
					ie_alteracao_w	:= 9;
					ds_alteracao_w	:= ds_alteracao_w || 'UF anterior : ' || sg_estado_ant_w || ' - UF atual:  ' || uf_w|| chr(10);
				end if;
				
				if (coalesce(cd_cep_ant_w,'X') <> coalesce(cep_w,'X')) then
					ie_alteracao_w	:= 10;
					ds_alteracao_w	:= ds_alteracao_w || 'CEP anterior : ' || cd_cep_ant_w || ' - CEP atual:  ' || cep_w|| chr(10);
				end if;				
				
				if (coalesce(nr_cartao_nac_sus_ant_w,'X') <> coalesce(cd_cns_w,'X')) then
					ie_alteracao_w	:= 11;
					ds_alteracao_w	:= ds_alteracao_w || 'CNS anterior : ' || nr_cartao_nac_sus_ant_w || ' - CNS atual:  ' || cd_cns_w|| chr(10);
				end if;
				/*Em algumas conexoes, verifiquei que esse campo nao deve ser alterado
				if	(nvl(ds_orgao_emissor_ci_ant_w,'X') <> nvl(ds_orgao_emissor_ci_w,'X')) then
					ie_alteracao_w	:= 12;
					ds_alteracao_w	:= ds_alteracao_w || 'Orgao emissor anterior : ' || ds_orgao_emissor_ci_ant_w || ' - Orgao emissor atual:  ' || ds_orgao_emissor_ci_w|| chr(10);
				end if;
				
				if	(nvl(cd_nacionalidade_ant_w,'X') <> nvl(cd_nacionalidade_w,'X')) then
					ie_alteracao_w	:= 13;
					ds_alteracao_w	:= ds_alteracao_w || 'Nacionalidade anterior : ' || cd_nacionalidade_ant_w || ' - Nacionalidade atual:  ' || cd_nacionalidade_w|| chr(10);
				end if;
				*/
				if (coalesce(nr_pis_pasep_ant_w,'X') <> coalesce(nr_pis_pasep_w,'X')) then
					ie_alteracao_w	:= 14;
					ds_alteracao_w	:= ds_alteracao_w || 'PIS/PASEP anterior : ' || nr_pis_pasep_ant_w || ' - PIS/PASEP atual:  ' || nr_pis_pasep_w|| chr(10);
				end if;
				
				if (coalesce(nr_cpf_ant_w,'X') <> coalesce(nr_cpf_w,'X')) then
					ie_alteracao_w	:= 15;
					ds_alteracao_w	:= ds_alteracao_w || 'CPF anterior : ' || nr_cpf_ant_w || ' - CPF atual:  ' || nr_cpf_w|| chr(10);
				end if;
				
				select	max(nr_sequencia)
				into STRICT	nr_seq_alt_plano_seg_w
				from 	pls_segurado_alt_plano
				where 	nr_seq_plano_atual	= nr_seq_plano_w
				and 	nr_seq_segurado		= nr_seq_segurado_w
				and	ie_situacao 		= 'A'
				and last_day(trunc(dt_referencia_w, 'dd')) + 0.99999 < dt_alteracao;
				
				if (coalesce(nr_seq_alt_plano_seg_w,0) <> 0) then
					select 	nr_seq_plano_ant
					into STRICT	nr_seq_plano_ant_w
					from 	pls_segurado_alt_plano
					where 	nr_sequencia = nr_seq_alt_plano_seg_w;
					
					select  CASE WHEN ie_regulamentacao='P' THEN coalesce(nr_protocolo_ans,'000000000')  ELSE '000000000' END
					into STRICT	cd_plano_ans_w
					from 	pls_plano a
					where 	nr_sequencia = nr_seq_plano_ant_w;
				end if;
				
				--if	(ie_alteracao_w > 0) then
					ds_alteracao_w	:= substr(ds_alteracao_w,1,length(ds_alteracao_w)-1);
					
					select	nextval('w_pls_alteracao_sib_seq')
					into STRICT	nr_seq_alteracao_sib_w
					;
					
					insert into w_pls_alteracao_sib(		nr_sequencia, nr_seq_lote_sib, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							nr_seq_segurado, cd_pessoa_fisica, nm_beneficiario, dt_nascimento, ie_sexo, nr_cpf, nr_pis_pasep,
							nm_mae_segurado, cd_cns, nr_identidade, ds_orgao_emissor_ci, cd_nacionalidade, nr_seq_titular,
							ie_regulamentacao, cd_plano_ans, cd_plano_ans_pre, dt_liberacao, ds_logradouro, ds_numero,
							ds_complemento, ds_bairro, ds_municipio, sg_uf, cd_cep, dt_geracao, ie_tipo_alteracao,
							ds_alteracoes)
					values (	nr_seq_alteracao_sib_w, nr_seq_lote_sib_p, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							nr_seq_segurado_w, cd_pessoa_fisica_w, nm_segurado_w, dt_nascimento_w, ie_sexo_w, nr_cpf_w, nr_pis_pasep_w,
							nm_mae_segurado_w, cd_cns_w, nr_identidade_w, ds_orgao_emissor_ci_w, cd_nacionalidade_w, nr_seq_titular_w,
							ie_regulamentacao_w, cd_plano_ans_w, cd_plano_ans_pre_w, dt_liberacao_w, ds_logradouro_w, ds_numero_w,
							ds_complemento_w, ds_bairro_w, ds_municipio_w, uf_w, cep_w, dt_mesano_referencia_w, ie_alteracao_w,
							ds_alteracao_w);
				--end if;
				if (ie_w = 100) then
					ie_w	:= 0;
					commit;
				end if;
			end if;
		end if;
	end if;
	end;
end loop;
close C02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_w_alteracao_sib ( nr_seq_lote_sib_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

