-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_texto_padrao ( cd_medico_p text, ie_tipo_texto_p bigint, nr_seq_texto_p bigint, nr_sequencia_p INOUT bigint, cd_pessoa_fisica_p text, nr_seq_cliente_p bigint, isSubstituirMacro text, nm_usuario_p text ) AS $body$
DECLARE

 
/** 
 ie_tipo_texto_p 
 1 - Texto		  (MED_TEXTO_ADICIONAL) 
 2 - Receita Médica    (MED_RECEITA) 
 3 - Solicitação de Exames (MED_PEDIDO_EXAME) 
 4 - Atestado		  (MED_ATESTADO) 
 8 - Evolução 		  (MED_EVOLUCAO) 
 9 - Diagnóstico -     (MED_PAC_DIAGNOSTICO) 
 
 (MED_CONSULTA) 
 5 - Anamnese 
 6 - Exame físico 
 7 - Conduta 
 12 - Medicamentos em Uso 
 13 - Observação 
 
*/
 
 
 
dados_clinicos_w 	varchar(255);
ds_texto_w		text;
ds_texto_banco_w	text			:= ' ';
ds_macro_w		varchar(4000);
nm_atrib_macro_w	varchar(50);
ds_valor_w		varchar(100);
pos_macro_w		integer;
qtd 			bigint		:= 0;
nr_sequencia_w		bigint;
nr_seq_texto_w		bigint;
qt_peso_w		real;
qt_altura_cm_w		real;
qt_imc_w		real;
count_w			bigint;
ie_tipo_consulta_w	smallint;

expressao1_w	varchar(255) := obter_desc_expressao_idioma(327119, null, wheb_usuario_pck.get_nr_seq_idioma);--Não Informado 
C01 CURSOR FOR 
		SELECT	ds_macro, 
			nm_atributo 
		from	med_macro_texto 
		where	1 = 1 
		order by ds_macro;
		
BEGIN 
--execute inserir_texto_padrao('740015', 3, 1432, '4', 2736, '740015', 'Juliane') 
nr_seq_texto_w		:= nr_seq_texto_p;
-- Buscar o texto Padrão 
if ( coalesce(nr_seq_texto_w::text, '') = '' ) then 
	select	coalesce(max(nr_sequencia),0) 
	into STRICT	nr_seq_texto_w 
	from  med_texto_padrao 
	where  ie_tipo_texto 		= ie_tipo_texto_p	 
	and   cd_medico   		= cd_medico_p;
end if;
 
if ( nr_seq_texto_w <> 0 ) then 
	select	ds_dados_clinicos, 
		ds_texto 
	into STRICT	 
		dados_clinicos_w, 
		ds_texto_w 
	from  med_texto_padrao 
	where  ie_tipo_texto 		= ie_tipo_texto_p	 
	and   cd_medico   		= cd_medico_p 
	and	nr_sequencia		= nr_seq_texto_w;
else 
	dados_clinicos_w 	:= ' ';
	ds_texto_w		:= ' ';
end if;
 
 
--verrificar se já existe registro para o dia 
if ( ie_tipo_texto_p	= 8 )	then 
	select	count(*) 
	into STRICT	count_w 
	from  med_evolucao 
	where  nr_seq_cliente 				= nr_seq_cliente_p	 
	and   to_date(dt_evolucao, 'dd/mm/yyyy') 	= to_date(clock_timestamp(), 'dd/mm/yyyy');
 
	if ( count_w > 0 ) then 
		select	nr_sequencia 
		into STRICT	nr_sequencia_w 
		from  med_evolucao 
		where  nr_seq_cliente 				= nr_seq_cliente_p	 
		and   to_date(dt_evolucao, 'dd/mm/yyyy') 	= to_date(clock_timestamp(), 'dd/mm/yyyy');
	end if;
elsif ( ie_tipo_texto_p	= 4 )	then 
	select	count(*) 
	into STRICT	count_w 
	from  med_atestado 
	where  nr_seq_cliente 				= nr_seq_cliente_p	 
	and   to_date(dt_atestado, 'dd/mm/yyyy') 	= to_date(clock_timestamp(), 'dd/mm/yyyy');
 
	if ( count_w > 0 ) then 
		select	nr_sequencia 
		into STRICT	nr_sequencia_w 
		from  med_atestado 
		where  nr_seq_cliente 				= nr_seq_cliente_p	 
		and   to_date(dt_atestado, 'dd/mm/yyyy') 	= to_date(clock_timestamp(), 'dd/mm/yyyy');
	end if;
elsif ( ie_tipo_texto_p	= 1 )	then 
	select	count(*) 
	into STRICT	count_w 
	from  med_texto_adicional 
	where  nr_seq_cliente 				= nr_seq_cliente_p	 
	and   to_date(dt_texto, 'dd/mm/yyyy') 	= to_date(clock_timestamp(), 'dd/mm/yyyy');
 
	if ( count_w > 0 ) then 
		select	nr_sequencia 
		into STRICT	nr_sequencia_w 
		from  med_texto_adicional 
		where  nr_seq_cliente 				= nr_seq_cliente_p	 
		and   to_date(dt_texto, 'dd/mm/yyyy') 	= to_date(clock_timestamp(), 'dd/mm/yyyy');
	end if;	
elsif ( ie_tipo_texto_p	= 2 )	then 
	select	count(*) 
	into STRICT	count_w 
	from  med_receita 
	where  nr_seq_cliente 				= nr_seq_cliente_p	 
	and   to_date(dt_receita, 'dd/mm/yyyy') 	= to_date(clock_timestamp(), 'dd/mm/yyyy');
 
	if ( count_w > 0 ) then 
		select	nr_sequencia 
		into STRICT	nr_sequencia_w 
		from  med_receita 
		where  nr_seq_cliente 				= nr_seq_cliente_p	 
		and   to_date(dt_receita, 'dd/mm/yyyy') 	= to_date(clock_timestamp(), 'dd/mm/yyyy');
	end if;	
elsif ( ie_tipo_texto_p	= 3 )	then 
	select	count(*) 
	into STRICT	count_w 
	from  med_pedido_exame 
	where  nr_seq_cliente 				= nr_seq_cliente_p	 
	and   to_date(dt_solicitacao, 'dd/mm/yyyy') 	= to_date(clock_timestamp(), 'dd/mm/yyyy');
 
	if ( count_w > 0 ) then 
		select	nr_sequencia 
		into STRICT	nr_sequencia_w 
		from  med_pedido_exame 
		where  nr_seq_cliente 				= nr_seq_cliente_p	 
		and   to_date(dt_solicitacao, 'dd/mm/yyyy') 	= to_date(clock_timestamp(), 'dd/mm/yyyy');
	end if;	
elsif ( ie_tipo_texto_p	= 9 )	then 
	select	count(*) 
	into STRICT	count_w 
	from  med_pac_diagnostico 
	where  nr_seq_cliente 				= nr_seq_cliente_p;
	if ( count_w > 0 ) then 
		nr_sequencia_w	:= nr_seq_cliente_p;
	end if;	
elsif	( (ie_tipo_texto_p	= 5) or (ie_tipo_texto_p	= 12) or (ie_tipo_texto_p	= 6) or (ie_tipo_texto_p	= 7) or (ie_tipo_texto_p	= 13))	then	 
	 
	if ( ie_tipo_texto_p = 5 )  then 
		ie_tipo_consulta_w	:= 1;
	elsif (ie_tipo_texto_p = 12) then 
		ie_tipo_consulta_w	:= 2;
	elsif (ie_tipo_texto_p = 6) then 
		ie_tipo_consulta_w	:= 3;
	elsif (ie_tipo_texto_p = 7) then 
		ie_tipo_consulta_w	:= 4;
	elsif (ie_tipo_texto_p = 13) then 
		ie_tipo_consulta_w	:= 5;
	end if;
	 
	select	count(*) 
	into STRICT	count_w 
	from  med_consulta 
	where  nr_seq_cliente 				= nr_seq_cliente_p	 
	and   ie_tipo_consulta  			= ie_tipo_consulta_w;
 
	if ( count_w > 0 ) then 
		select	nr_sequencia 
		into STRICT	nr_sequencia_w 
		from  med_consulta 
		where  nr_seq_cliente 			= nr_seq_cliente_p	 
		and   ie_tipo_consulta  		= ie_tipo_consulta_w;
	end if;
end if;
 
if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then 
	-- MED_PEDIDO_EXAME 
	if ( ie_tipo_texto_p	= 3 )	then 
		-- Buscar o texto do banco 
		select	ds_solicitacao 
		into STRICT	ds_texto_banco_w 
		from	med_pedido_exame 
		where	nr_sequencia	=	nr_sequencia_w;
	-- MED_EVOLUCAO 
	elsif ( ie_tipo_texto_p	= 8 )	then 
		select 	ds_evolucao 
		into STRICT	ds_texto_banco_w 
		from 	med_evolucao 
		where	nr_sequencia	=	nr_sequencia_w;
	-- MED_RECEITA 
	elsif ( ie_tipo_texto_p	= 2 )	then 
		select 	ds_receita 
		into STRICT	ds_texto_banco_w 
		from 	med_receita 
		where	nr_sequencia	=	nr_sequencia_w;
	--MED_ATESTADO	 
	elsif ( ie_tipo_texto_p	= 4 )	then 
		select 	ds_atestado 
		into STRICT	ds_texto_banco_w 
		from 	med_atestado 
		where	nr_sequencia	=	nr_sequencia_w;
	--MED_TEXTO_ADICIONAL 
	elsif ( ie_tipo_texto_p	= 1 )	then 
		select 	ds_texto 
		into STRICT	ds_texto_banco_w 
		from 	med_texto_adicional 
		where	nr_sequencia	=	nr_sequencia_w;
	--MED_PAC_DIAGNOSTICO	 
	elsif ( ie_tipo_texto_p	= 9 )	then 
		select 	ds_diagnostico 
		into STRICT	ds_texto_banco_w 
		from 	med_pac_diagnostico 
		where	nr_seq_cliente	=	nr_sequencia_w;
	--MED_CONSULTA	 
	elsif	( (ie_tipo_texto_p	= 5) or (ie_tipo_texto_p	= 12) or (ie_tipo_texto_p	= 6) or (ie_tipo_texto_p	= 7) or (ie_tipo_texto_p	= 13))	then	 
		select 	ds_consulta 
		into STRICT	ds_texto_banco_w 
		from 	med_consulta 
		where	nr_sequencia		= nr_sequencia_w 
		and   ie_tipo_consulta  	= ie_tipo_consulta_w;
	end if;	
end if;
 
if ( ds_texto_banco_w = ' ') then 
	ds_texto_banco_w := '{\rtf1\ansi\deff0{\fonttbl{\f0\fnil\fcharset0 MS Sans Serif;}}{\colortbl ;\red0\green0\blue0;}\viewkind4\uc1\pard\cf1\lang1046\f0\fs24 ';
else 
	-- Tirar a última chave 
	for contador IN REVERSE length(ds_texto_banco_w)..1 loop 
		qtd := qtd + 1;	
		if ( substr(ds_texto_banco_w,contador,1) = '}' ) then 
			exit;
		end if;
	end loop;
	ds_texto_banco_w := substr(ds_texto_banco_w, 0, length(ds_texto_banco_w) - qtd) || '\par';
end if;
 
 
--juntar os dois textos 
ds_texto_banco_w :=	ds_texto_banco_w || ds_texto_w ||' \par }';
 
 
 
 
if ( isSubstituirMacro	= 'S' ) then 
	OPEN C01;
	LOOP 
	FETCH C01 into 
		ds_macro_w, 
		nm_atrib_macro_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
			pos_macro_w	:= position(ds_macro_w in ds_texto_banco_w);
		 
		if (upper(nm_atrib_macro_w) = 'CD_PESSOA_FISICA')	then 
				ds_valor_w	:=	cd_pessoa_fisica_p;
		elsif (upper(nm_atrib_macro_w) = 'NR_SEQ_CLIENTE') then 
				ds_valor_w	:=	nr_seq_cliente_p;
		else 
				ds_valor_w	:=	clock_timestamp();
		end if;
 
		if (pos_macro_w > 0) then 
			select coalesce(max(substituir_macro_texto(upper(ds_macro_w), upper(nm_atrib_macro_w), ds_valor_w)),expressao1_w) 
			into STRICT	ds_valor_w		 
			;
			ds_texto_banco_w := replace(ds_texto_banco_w, ds_macro_w, ds_valor_w);
		end if;
		end;
	END LOOP;
	CLOSE C01;
end if;
 
	-- Atualizar no banco 
	if ( ie_tipo_texto_p	= 3 )	then 
		if ( coalesce(nr_sequencia_w::text, '') = '') then 
			select 	max(nr_sequencia) +1 
			into STRICT	nr_sequencia_w 
			from	med_pedido_exame;
	 
			insert	into	med_pedido_exame( 
						NR_SEQUENCIA, 
						DT_SOLICITACAO, 
						DS_SOLICITACAO, 
						DS_DADOS_CLINICOS, 
						NR_SEQ_CLIENTE, 
						IE_FICHA_UNIMED, 
						DT_ATUALIZACAO, 
						NM_USUARIO 
					) 
					values ( 
						nr_sequencia_w, 
						clock_timestamp(), 
						ds_texto_banco_w, 
						dados_clinicos_w, 
						nr_seq_cliente_p, 
						'N', 
						clock_timestamp(), 
						nm_usuario_p 
					);
		else 
			update 	med_pedido_exame 
			set	ds_dados_clinicos 	= 	dados_clinicos_w, 
				ds_solicitacao		= 	ds_texto_banco_w, 
				dt_atualizacao		=	clock_timestamp(), 
				nm_usuario		=	nm_usuario_p 
			where	nr_sequencia		=	nr_sequencia_w;
		end if;
	elsif ( ie_tipo_texto_p = 8 ) then 
	 
		if ( coalesce(nr_sequencia_w::text, '') = '') then 
			select 	max(nr_sequencia) +1 
			into STRICT	nr_sequencia_w 
			from	med_evolucao;
			 
			--Setar o ultimo peso e altura 
			begin 
				select	qt_peso, 
					qt_altura_cm, 
					qt_imc 
				into STRICT	qt_peso_w, 
					qt_altura_cm_w, 
					qt_imc_w 
				from  	med_evolucao 
				where 	nr_sequencia =( SELECT max(nr_sequencia) 
						from  med_evolucao 
						where  nr_seq_cliente = nr_seq_cliente_p);
			exception 
			when others then 
				qt_peso_w 	:= 0;
				qt_altura_cm_w	:= 0;
			end;
			insert	into	med_evolucao( 
						NR_SEQUENCIA, 
						DT_EVOLUCAO, 
						DS_EVOLUCAO, 
						NR_SEQ_CLIENTE, 
						QT_IMC, 
						QT_PESO, 
						QT_ALTURA_CM, 
						QT_VARIACAO_PESO, 
						DT_ATUALIZACAO, 
						NM_USUARIO 
					) 
					values ( 
						nr_sequencia_w, 
						clock_timestamp(), 
						ds_texto_banco_w, 
						nr_seq_cliente_p, 
						qt_imc_w, 
						qt_peso_w, 
						qt_altura_cm_w, 
						0, 
						clock_timestamp(), 
						nm_usuario_p 
					);
		else 
			update 	med_evolucao 
			set	ds_evolucao		= 	ds_texto_banco_w, 
				dt_atualizacao		=	clock_timestamp(), 
				nm_usuario		=	nm_usuario_p 
			where	nr_sequencia		=	nr_sequencia_w;
		end if;
	elsif ( ie_tipo_texto_p = 2 ) then 
		if ( coalesce(nr_sequencia_w::text, '') = '') then 
			select 	max(nr_sequencia) +1 
			into STRICT	nr_sequencia_w 
			from	med_receita;
	 
			insert	into	med_receita( 
						NR_SEQUENCIA, 
						DT_RECEITA, 
						DS_RECEITA, 
						CD_PESSOA_FISICA, 
						NR_SEQ_CLIENTE, 
						DT_ATUALIZACAO, 
						NM_USUARIO 
					) 
					values ( 
						nr_sequencia_w, 
						clock_timestamp(), 
						ds_texto_banco_w, 
						cd_pessoa_fisica_p, 
						nr_seq_cliente_p, 
						clock_timestamp(), 
						nm_usuario_p 
					);
		else 
			update 	med_receita 
			set	ds_receita		= 	ds_texto_banco_w, 
				dt_atualizacao		=	clock_timestamp(), 
				nm_usuario		=	nm_usuario_p 
			where	nr_sequencia		=	nr_sequencia_w;
		end if;
	elsif ( ie_tipo_texto_p = 4 ) then 
	 
		if ( coalesce(nr_sequencia_w::text, '') = '') then 
			select 	max(nr_sequencia) +1 
			into STRICT	nr_sequencia_w 
			from	med_atestado;
	 
			insert	into	med_atestado( 
						NR_SEQUENCIA, 
						DT_ATESTADO, 
						DS_ATESTADO, 
						NR_SEQ_CLIENTE, 
						DT_ATUALIZACAO, 
						NM_USUARIO 
					) 
					values ( 
						nr_sequencia_w, 
						clock_timestamp(), 
						ds_texto_banco_w, 
						nr_seq_cliente_p, 
						clock_timestamp(), 
						nm_usuario_p 
					);
		else 
			update 	med_atestado 
			set	ds_atestado		= 	ds_texto_banco_w, 
				dt_atualizacao		=	clock_timestamp(), 
				nm_usuario		=	nm_usuario_p 
			where	nr_sequencia		=	nr_sequencia_w;
		end if;
	elsif ( ie_tipo_texto_p = 1 ) then 
		if ( coalesce(nr_sequencia_w::text, '') = '') then 
			select 	max(nr_sequencia) +1 
			into STRICT	nr_sequencia_w 
			from	med_texto_adicional;
	 
			insert	into	med_texto_adicional( 
						NR_SEQUENCIA, 
						DT_TEXTO, 
						DS_TEXTO, 
						NR_SEQ_CLIENTE, 
						DT_ATUALIZACAO, 
						NM_USUARIO 
					) 
					values ( 
						nr_sequencia_w, 
						clock_timestamp(), 
						ds_texto_banco_w, 
						nr_seq_cliente_p, 
						clock_timestamp(), 
						nm_usuario_p 
					);
		else 
			update 	med_texto_adicional 
			set	ds_texto		= 	ds_texto_banco_w, 
				dt_atualizacao		=	clock_timestamp(), 
				nm_usuario		=	nm_usuario_p 
			where	nr_sequencia		=	nr_sequencia_w;
		end if;
	elsif ( ie_tipo_texto_p = 9) then 
		if ( coalesce(nr_sequencia_w::text, '') = '') then 
			insert into	med_pac_diagnostico( 
						nr_seq_cliente,     
						ds_diagnostico, 
						dt_atualizacao, 
						nm_usuario, 
						dt_diagnostico	 
						) 
						values ( 
						nr_seq_cliente_p, 
						ds_texto_banco_w, 
						clock_timestamp(), 
						nm_usuario_p, 
						clock_timestamp() 
						);
		else	 
			update 	med_pac_diagnostico 
			set	ds_diagnostico		= 	ds_texto_banco_w, 
				dt_atualizacao		=	clock_timestamp(), 
				nm_usuario		=	nm_usuario_p 
			where	nr_seq_cliente		=	nr_sequencia_w;
		end if;
	elsif	( (ie_tipo_texto_p	= 5) or (ie_tipo_texto_p	= 12) or (ie_tipo_texto_p	= 6) or (ie_tipo_texto_p	= 7) or (ie_tipo_texto_p	= 13))	then	 
		 
		if ( coalesce(nr_sequencia_w::text, '') = '') then 
			select 	max(nr_sequencia) +1 
			into STRICT	nr_sequencia_w 
			from	med_consulta;
	 
			insert	into	med_consulta( 
						NR_SEQUENCIA, 
						IE_TIPO_CONSULTA, 
						IE_PRESSAO, 
						DS_CONSULTA, 
						NR_SEQ_CLIENTE, 
						DT_ATUALIZACAO, 
						NM_USUARIO 
					) 
					values ( 
						nr_sequencia_w, 
						ie_tipo_consulta_w, 
						'S', 
						ds_texto_banco_w, 
						nr_seq_cliente_p, 
						clock_timestamp(), 
						nm_usuario_p 
					);
		else 
			update 	med_consulta 
			set	ds_consulta		= 	ds_texto_banco_w, 
				dt_atualizacao		=	clock_timestamp(), 
				nm_usuario		=	nm_usuario_p 
			where	nr_sequencia		=	nr_sequencia_w 
			and   ie_tipo_consulta  	= 	ie_tipo_consulta_w;
		end if;
	end if;
commit;
nr_sequencia_p := nr_sequencia_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_texto_padrao ( cd_medico_p text, ie_tipo_texto_p bigint, nr_seq_texto_p bigint, nr_sequencia_p INOUT bigint, cd_pessoa_fisica_p text, nr_seq_cliente_p bigint, isSubstituirMacro text, nm_usuario_p text ) FROM PUBLIC;

