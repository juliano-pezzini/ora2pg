-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_analise_alterar_info_item ( nr_seq_w_analise_item_p w_pls_analise_item.nr_sequencia%type, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_item_ref_p bigint, nr_seq_analise_p bigint, ie_acao_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_id_transacao_p bigint, nr_seq_grupo_p pls_auditoria_conta_grupo.nr_seq_grupo%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  ]  Objetos do dicionário [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_nota_fiscal_w		varchar(255);
dt_atendimento_w		varchar(255);
ie_via_acesso_w			varchar(255);
ie_tecnica_utilizada_w		varchar(255);
dt_procedimento_w		varchar(255);
dt_inicio_proc_w		varchar(255);
dt_fim_proc_w			varchar(255);
ie_autogerado_w			varchar(255);
ie_cobranca_prevista_w		varchar(255);
ie_criterio_horario_w		varchar(255);
dt_inicio_atend_w		varchar(255);
vl_material_imp_w		double precision;
vl_apresentado_w		double precision;
qt_material_imp_w		double precision;
qt_apresentada_w		double precision;
cd_procedimento_w		bigint;
nr_seq_setor_atend_w		bigint;
nr_seq_prest_fornec_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_conta_proc_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_material_w		bigint;
tx_item_w			double precision;
tx_custo_operacional_w		pls_conta_proc.tx_custo_operacional%type;
tx_material_w			pls_conta_proc.tx_material%type;
tx_medico_w			pls_conta_proc.tx_medico%type;
dt_emissao_nf_w			timestamp;
dt_recebimento_nf_w		timestamp;
ie_consistir_analise_w		varchar(2);
cd_ref_fabricante_w		pls_conta_mat.cd_ref_fabricante%type;
ds_aut_funcionamento_w          pls_conta_mat.ds_aut_funcionamento%type;
nr_registro_anvisa_w            pls_conta_mat.nr_registro_anvisa%type;
cd_unidade_medida_w             pls_conta_mat.cd_unidade_medida%type;
det_reg_anvisa_w		pls_conta_mat.det_reg_anvisa%type;
ds_justificativa_w		pls_conta_proc.ds_justificativa%type;
ds_especif_material_w		pls_conta_proc.ds_especif_material%type;
cd_dente_w 				pls_conta_proc.cd_dente%type;
cd_face_dente_w			pls_conta_proc.cd_face_dente%type;
cd_regiao_boca_w		pls_conta_proc.cd_regiao_boca%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		nr_seq_setor_atend,
		qt_procedimento_imp,
		vl_procedimento_imp
	from	pls_conta_proc	a
	where	a.nr_seq_agrup_analise	= nr_seq_conta_proc_p
	and	a.nr_sequencia		<> nr_seq_conta_proc_p
	and	exists (	SELECT	1
			from	w_pls_analise_item x
			where	x.nr_sequencia		= nr_seq_w_analise_item_p
			and	x.nr_id_transacao	= nr_id_transacao_p
			and	x.ie_tipo_linha		= 'A');


BEGIN



if (ie_acao_p = 'D') then
	if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
		delete	from w_pls_conta_proc
		where	nr_seq_conta_proc	= nr_seq_conta_proc_p;
	else
		delete	from w_pls_conta_mat
		where	nr_seq_conta_mat	= nr_seq_conta_mat_p;
	end if;
elsif (ie_acao_p = 'G') then

	if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then

		insert into w_pls_conta_proc(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_setor_atend,
			ie_via_acesso,
			ie_tecnica_utilizada,
			dt_procedimento,
			dt_inicio_proc,
			dt_fim_proc,
			tx_item,
			tx_custo_operacional,
			tx_material,
			tx_medico,
			ie_autogerado,
			ie_cobranca_prevista,
			ie_criterio_horario,
			qt_apresentada,
			vl_apresentado,
			nr_seq_conta_proc,
			cd_procedimento,			
			ie_origem_proced,
			ds_justificativa,
			ds_especif_material,
			cd_dente,
			cd_face_dente, 
			cd_regiao_boca)
		(SELECT	nextval('w_pls_conta_proc_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			a.nr_seq_setor_atend,
			a.ie_via_acesso,
			a.ie_tecnica_utilizada,
			to_char(a.dt_procedimento, 'dd/mm/yyyy'),
			a.dt_inicio_proc,
			a.dt_fim_proc,--
			a.tx_item,
			coalesce(a.tx_custo_operacional,100),
			coalesce(a.tx_material,100),
			coalesce(a.tx_medico,100),
			coalesce(a.ie_autogerado,'N') ie_autogerado,
			coalesce(a.ie_cobranca_prevista,'N') ie_cobranca_prevista,
			coalesce(a.ie_criterio_horario,'N') ie_criterio_horario,
			coalesce(a.qt_procedimento_imp,0),--
			coalesce(a.vl_procedimento_imp,0),
			a.nr_sequencia,
			cd_procedimento,
			ie_origem_proced,
			ds_justificativa,
			ds_especif_material,
			cd_dente, 
			cd_face_dente, 
			cd_regiao_boca
		from	pls_conta_proc	a,
			pls_conta	b
		where	a.nr_sequencia	= nr_seq_conta_proc_p
		and     a.nr_seq_conta	= b.nr_sequencia);
	else
		insert into w_pls_conta_mat(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_emissao_nf,
			nr_seq_setor_atend,
			dt_recebimento_nf,
			nr_nota_fiscal,
			dt_atendimento,
			nr_seq_prest_fornec,
			vl_material_imp,
			qt_material_imp,
			nr_seq_conta_mat,
			dt_inicio_atend,
			nr_seq_material,
			ie_cobranca_prevista,
			cd_ref_fabricante,
			ds_aut_funcionamento,
			nr_registro_anvisa,
			det_reg_anvisa,
			cd_unidade_medida,
			ds_justificativa,
			ds_especif_material)
		(SELECT	nextval('w_pls_conta_mat_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			a.dt_emissao_nf,
			a.nr_seq_setor_atend,
			a.dt_recebimento_nf,
			a.nr_nota_fiscal,
			a.dt_atendimento,
			a.nr_seq_prest_fornec,
			coalesce(a.vl_material_imp,0),
			coalesce(a.qt_material_imp,0),
			a.nr_sequencia,
			a.dt_inicio_atend,
			a.nr_seq_material,
			a.ie_cobranca_previa_servico,
			a.cd_ref_fabricante,
			a.ds_aut_funcionamento,
			a.nr_registro_anvisa,
			a.det_reg_anvisa,
			a.cd_unidade_medida,
			ds_justificativa,
			ds_especif_material
		from	pls_conta_mat	a,
			pls_conta	b
		where	a.nr_seq_conta	= b.nr_sequencia
		and	a.nr_sequencia	= nr_seq_conta_mat_p);
	end if;
elsif (ie_acao_p = 'A') then

	ie_consistir_analise_w := Obter_Param_Usuario(1365, 16, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, cd_estabelecimento_p, ie_consistir_analise_w);
	if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
		select	nr_seq_setor_atend,
			ie_via_acesso,
			ie_tecnica_utilizada,
			to_char(dt_procedimento,'dd/mm/yyyy'),
			to_char(dt_inicio_proc,'hh24:mi:ss'),
			to_char(dt_fim_proc,'hh24:mi:ss'),
			tx_item,
			tx_custo_operacional,
			tx_material,
			tx_medico,
			ie_autogerado,
			ie_cobranca_prevista,
			ie_criterio_horario,
			coalesce(qt_apresentada,0),
			coalesce(vl_apresentado,0),
			cd_procedimento,
			ie_origem_proced,
			ds_justificativa,
			ds_especif_material,
			cd_dente,
			cd_face_dente, 
			cd_regiao_boca
		into STRICT	nr_seq_setor_atend_w,
			ie_via_acesso_w,
			ie_tecnica_utilizada_w,
			dt_procedimento_w,
			dt_inicio_proc_w,
			dt_fim_proc_w,
			tx_item_w,
			tx_custo_operacional_w,
			tx_material_w,
			tx_medico_w,
			ie_autogerado_w,
			ie_cobranca_prevista_w,
			ie_criterio_horario_w,
			qt_apresentada_w,
			vl_apresentado_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			ds_justificativa_w,
			ds_especif_material_w,
			cd_dente_w, 
			cd_face_dente_w, 
			cd_regiao_boca_w
		from	w_pls_conta_proc
		where	nr_seq_conta_proc	= nr_seq_conta_proc_p
		and	nm_usuario		= nm_usuario_p;

		begin
			select	nr_seq_conta
			into STRICT	nr_seq_conta_w
			from	pls_conta_proc a
			where	a.nr_sequencia	= nr_seq_conta_proc_p;
		exception
		when others then
			nr_seq_conta_w	:= null;
		end;

		CALL pls_alterar_proc_analise(	nr_seq_conta_proc_p, nr_seq_item_ref_p, nr_seq_analise_p, ie_tecnica_utilizada_w, ie_autogerado_w,
						tx_item_w, tx_custo_operacional_w, tx_material_w, tx_medico_w, ie_cobranca_prevista_w, ie_via_acesso_w,
						dt_procedimento_w, dt_fim_proc_w, dt_inicio_proc_w, nr_seq_setor_atend_w, nr_seq_grupo_p, cd_estabelecimento_p,
						ie_criterio_horario_w, vl_apresentado_w, qt_apresentada_w, cd_procedimento_w, ie_origem_proced_w, ds_justificativa_w,
						ds_especif_material_w, cd_dente_w, cd_face_dente_w, cd_regiao_boca_w, nm_usuario_p);


		if (ie_consistir_analise_w = 'N') then
			CALL pls_analise_consistir_item(nr_seq_analise_p,
				'M',
				null,
				nr_seq_conta_w,
				nr_seq_conta_proc_p,
				null,
				cd_estabelecimento_p,
				nm_usuario_p);
		end if;

		open C01;
		loop
		fetch C01 into
			nr_seq_conta_proc_w,
			nr_seq_setor_atend_w,
			qt_apresentada_w,
			vl_apresentado_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			begin
			select	nr_seq_conta
			into STRICT	nr_seq_conta_w
			from	pls_conta_proc a
			where	a.nr_sequencia	= nr_seq_conta_proc_w;
			exception
			when others then
				nr_seq_conta_w	:= null;
			end;

			CALL pls_alterar_proc_analise(nr_seq_conta_proc_w, null, nr_seq_analise_p, ie_tecnica_utilizada_w, ie_autogerado_w,
						tx_item_w, tx_custo_operacional_w, tx_material_w, tx_medico_w,ie_cobranca_prevista_w, ie_via_acesso_w,
						dt_procedimento_w, dt_fim_proc_w, dt_inicio_proc_w, nr_seq_setor_atend_w, nr_seq_grupo_p, cd_estabelecimento_p,
						ie_criterio_horario_w, vl_apresentado_w, qt_apresentada_w, cd_procedimento_w, ie_origem_proced_w, ds_justificativa_w,
						ds_especif_material_w, cd_dente_w, cd_face_dente_w, cd_regiao_boca_w, nm_usuario_p);

			if (ie_consistir_analise_w = 'N') then
				CALL pls_analise_consistir_item(	nr_seq_analise_p,
								'M',
								null,
								nr_seq_conta_w,
								nr_seq_conta_proc_w,
								null,
								cd_estabelecimento_p,
								nm_usuario_p);
			end if;

			end;
		end loop;
		close C01;
		
		-- marca todas as contas da analise que estão fechadas como pendente, evitando casos onde dois usuarios distintos

		-- possam fechar a conta e alterar o item, deixando a analise pendente de consistencia e com contas fechadas
		update	pls_conta	a
		set	a.ie_status	= 'P'
		where	a.nr_seq_analise	in (	SELECT	z.nr_seq_analise
							from	pls_conta_proc	x,
								pls_conta	z
							where	z.nr_sequencia	= x.nr_seq_conta
							and	x.nr_sequencia	= nr_seq_conta_proc_p)
		and	a.ie_status	= 'F';

		delete	from w_pls_conta_proc
		where	nm_usuario		= nm_usuario_p
		and	nr_seq_conta_proc	= nr_seq_conta_proc_p;
	else
		select	dt_emissao_nf,
			nr_seq_setor_atend,
			dt_recebimento_nf,
			nr_nota_fiscal,
			to_char(dt_atendimento, 'dd/mm/yyyy'),
			nr_seq_prest_fornec,
			coalesce(vl_material_imp,0),
			coalesce(qt_material_imp,0),
			to_char(dt_inicio_atend,'hh24:mi:ss'),
			nr_seq_material,
			coalesce(ie_cobranca_prevista,'N') ie_cobranca_previa_servico,
			cd_ref_fabricante,
			ds_aut_funcionamento,
			nr_registro_anvisa,
			det_reg_anvisa,
			cd_unidade_medida,
			ds_justificativa,
			ds_especif_material
		into STRICT	dt_emissao_nf_w,
			nr_seq_setor_atend_w,
			dt_recebimento_nf_w,
			nr_nota_fiscal_w,
			dt_atendimento_w,
			nr_seq_prest_fornec_w,
			vl_material_imp_w,
			qt_material_imp_w,
			dt_inicio_atend_w,
			nr_seq_material_w,
			ie_cobranca_prevista_w,
			cd_ref_fabricante_w,
			ds_aut_funcionamento_w,
			nr_registro_anvisa_w,
			det_reg_anvisa_w,
			cd_unidade_medida_w,
			ds_justificativa_w,
			ds_especif_material_w
		from	w_pls_conta_mat
		where	nr_seq_conta_mat	= nr_seq_conta_mat_p
		and	nm_usuario		= nm_usuario_p;

		begin
		select	nr_seq_conta
		into STRICT	nr_seq_conta_w
		from	pls_conta_mat a
		where	a.nr_sequencia	= nr_seq_conta_mat_p;
		exception
			when others then
			nr_seq_conta_w	:= null;
		end;

		CALL pls_alterar_material_analise(nr_seq_conta_mat_p, nr_seq_analise_p, ie_cobranca_prevista_w, nr_nota_fiscal_w, dt_emissao_nf_w,
						dt_recebimento_nf_w, dt_atendimento_w, nr_seq_grupo_p, nr_seq_prest_fornec_w,
						cd_estabelecimento_p, nr_seq_setor_atend_w, vl_material_imp_w,
						qt_material_imp_w, dt_inicio_atend_w, nr_seq_material_w, nm_usuario_p, ds_justificativa_w,
						ds_especif_material_w, cd_ref_fabricante_w, ds_aut_funcionamento_w, nr_registro_anvisa_w, 
						cd_unidade_medida_w, det_reg_anvisa_w);

		if (ie_consistir_analise_w = 'N') then
			CALL pls_analise_consistir_item(nr_seq_analise_p,
				'M',
				null,
				nr_seq_conta_w,
				null,
				nr_seq_conta_mat_p,
				cd_estabelecimento_p,
				nm_usuario_p);
		end if;
		
		-- marca todas as contas da analise que estão fechadas como pendente, evitando casos onde dois usuarios distintos

		-- possam fechar a conta e alterar o item, deixando a analise pendente de consistencia e com contas fechadas
		update	pls_conta	a
		set	a.ie_status	= 'P'
		where	a.nr_seq_analise	in (	SELECT	z.nr_seq_analise
							from	pls_conta_mat	x,
								pls_conta	z
							where	z.nr_sequencia	= x.nr_seq_conta
							and	x.nr_sequencia	= nr_seq_conta_mat_p)
		and	a.ie_status	= 'F';
		

		delete	from w_pls_conta_mat
		where	nm_usuario		= nm_usuario_p
		and	nr_seq_conta_mat	= nr_seq_conta_mat_p;
	end if;
end if;



commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_analise_alterar_info_item ( nr_seq_w_analise_item_p w_pls_analise_item.nr_sequencia%type, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_item_ref_p bigint, nr_seq_analise_p bigint, ie_acao_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_id_transacao_p bigint, nr_seq_grupo_p pls_auditoria_conta_grupo.nr_seq_grupo%type) FROM PUBLIC;

