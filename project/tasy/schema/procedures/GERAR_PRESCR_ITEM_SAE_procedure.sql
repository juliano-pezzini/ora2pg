-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prescr_item_sae ( nr_prescr_sae_p bigint, nr_seq_item_p bigint, nm_usuario_p text, ie_platform_p text default null) AS $body$
DECLARE




dt_prescricao_w			timestamp;

cd_intervalo_w			varchar(7);

cd_medico_w			varchar(10);

cd_pessoa_fisica_w		varchar(10);

cd_prescritor_w			varchar(10);

cd_unidade_medida_dose_w	varchar(30);

cd_unidade_medida_w		varchar(30);

ds_horarios_w			varchar(2000);

ds_justificativa_w		varchar(2000);

ie_agrupador_w			varchar(2);

ie_funcao_prescritor_w		varchar(3);

ie_tipo_material_w		varchar(3);

ie_via_aplicacao_w		varchar(5);

vl_prim_hor_w			varchar(15);

cd_estabelecimento_w		smallint;

cd_material_w			integer;

cd_motivo_baixa_w		smallint;

cd_protocolo_w			bigint;

cd_setor_atendimento_w		integer;

nr_atendimento_w		bigint;

nr_ocorrencia_w			bigint;

nr_prescricao_w			bigint;

nr_seq_acum_w			bigint;

nr_seq_presc_material_w		integer;

nr_seq_proc_w			bigint;

nr_seq_protocolo_w		bigint;

nr_sequencia_protocolo_w	bigint;

qt_conversao_w			double precision;

qt_dose_w			double precision;

ds_erro_regra_prescr_mat_w      varchar(1);
ie_abortar_regra_prescr_mat_w   varchar(1) := 'N';
ds_mensagem_regra_prescr_mat_w  varchar(4000);



c01 CURSOR FOR

	SELECT	a.cd_intervalo,

		a.nr_sequencia,

		b.cd_material,

		b.ie_via_aplicacao,

		b.cd_unidade_medida_dose,

		coalesce(b.qt_dose, 0),

		b.ds_justificativa,

		nr_seq_acum_w + row_number() OVER () AS rownum,

		coalesce(obter_ocorrencia_intervalo(a.cd_intervalo, 24, 'O'),1) nr_ocorrencia, --obter_ocorrencias_horarios_rep(a.ds_horarios) nr_ocorrencia,
		b.cd_motivo_baixa,

		ds_horarios

	from	pe_prescr_proc a,

		pe_material_proced b

	where	b.nr_seq_proc	= a.nr_seq_proc

	and	a.nr_seq_prescr	= nr_prescr_sae_p

	and	a.nr_sequencia	= nr_seq_item_p

	
union all


	SELECT	a.cd_intervalo,

		a.nr_sequencia,

		b.cd_material,

		b.ie_via_aplicacao,

		b.cd_unidade_medida_dose,

		coalesce(b.qt_dose,0),

		b.ds_justificativa,

		nr_seq_acum_w + row_number() OVER () AS rownum,

		obter_ocorrencia_intervalo(a.cd_intervalo, 24, 'O') nr_ocorrencia, --obter_ocorrencias_horarios_rep(a.ds_horarios) nr_ocorrencia,
		b.cd_motivo_baixa,

		ds_horarios

	from	pe_prescr_proc a,

		pe_material_proced b

	where	b.nr_seq_prot_proc = a.nr_seq_prot_proc

	and	a.nr_seq_prescr	   = nr_prescr_sae_p

	and	a.nr_sequencia	= nr_seq_item_p;


BEGIN

if (nr_prescr_sae_p IS NOT NULL AND nr_prescr_sae_p::text <> '') and (nr_seq_item_p IS NOT NULL AND nr_seq_item_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then

	/* obter dados sae x atend */

	select	cd_pessoa_fisica,

		nr_atendimento,

		substr(obter_medico_resp_atend(nr_atendimento, 'C'), 1, 10) cd_medico,

		dt_prescricao,

		(substr(obter_unidade_atendimento(nr_atendimento, 'A', 'CS'), 1, 5))::numeric  cd_setor_atendimento,

		obter_estab_atend(nr_atendimento) cd_estabelecimento,

		substr(obter_dados_usuario_opcao(nm_usuario_p, 'C'), 1, 10) cd_prescritor,

		substr(obter_funcao_usuario_orig(nm_usuario_p), 1, 3) ie_funcao_prescritor,

		nr_prescricao

	into STRICT	cd_pessoa_fisica_w,

		nr_atendimento_w,

		cd_medico_w,

		dt_prescricao_w,

		cd_setor_atendimento_w,

		cd_estabelecimento_w,

		cd_prescritor_w,

		ie_funcao_prescritor_w,

		nr_prescricao_w

	from	pe_prescricao

	where	nr_sequencia = nr_prescr_sae_p

	and	coalesce(ie_situacao, 'A') = 'A';	



	select  coalesce(max(nr_sequencia), 0)

	into STRICT	nr_seq_acum_w

	from	prescr_material

	where	nr_prescricao = nr_prescricao_w;



	open c01;

	loop

		fetch c01 into			

			cd_intervalo_w,

			nr_seq_proc_w,

			cd_material_w,

			ie_via_aplicacao_w,

			cd_unidade_medida_dose_w,

			qt_dose_w,

			ds_justificativa_w,

			nr_seq_presc_material_w,

			nr_ocorrencia_w,

			cd_motivo_baixa_w,

			ds_horarios_w;

		EXIT WHEN NOT FOUND; /* apply on c01 */

		

		select	coalesce(cd_unidade_medida_dose_w,substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w, 'UMS'), 1, 30)) cd_unidade_medida_consumo,

			ie_tipo_material

		into STRICT	cd_unidade_medida_w,

			ie_tipo_material_w

		from	material

		where	cd_material = cd_material_w;



		if (ie_tipo_material_w = '1') then

			ie_agrupador_w	:= '2';

		elsif (ie_tipo_material_w in ('2', '3')) then

			ie_agrupador_w	:= '1';

		end if;

	

		select	coalesce(max(qt_conversao),1)

		into STRICT	qt_conversao_w

		from	material_conversao_unidade

		where	cd_material		= cd_material_w

		and	cd_unidade_medida	= cd_unidade_medida_w;

		

		select  coalesce(max(nr_sequencia), 0) + 1

		into STRICT	nr_seq_presc_material_w

		from	prescr_material

		where	nr_prescricao = nr_prescricao_w;

		
    if ( ie_platform_p = 'H' ) then
      begin
      SELECT * FROM cpoe_consist_regra_prescr_mat(	nr_atendimento_w, cd_material_w, 'N', ie_via_aplicacao_w, Obter_Tipo_Atendimento(nr_atendimento_w), cd_setor_atendimento_w, obter_perfil_ativo, Obter_Convenio_Atendimento(nr_atendimento_w), nm_usuario_p, cd_estabelecimento_w, cd_pessoa_fisica_w, dt_prescricao_w, ds_erro_regra_prescr_mat_w, ds_mensagem_regra_prescr_mat_w, ie_abortar_regra_prescr_mat_w) INTO STRICT ds_erro_regra_prescr_mat_w, ds_mensagem_regra_prescr_mat_w, ie_abortar_regra_prescr_mat_w;
      exception WHEN OTHERS THEN
          ds_erro_regra_prescr_mat_w := 'S';
          ie_abortar_regra_prescr_mat_w := 'S';
      end;
    else
      ds_erro_regra_prescr_mat_w := 'N';
      ie_abortar_regra_prescr_mat_w := 'N';
    end if;

    if (ds_erro_regra_prescr_mat_w <> 'S') or (ie_abortar_regra_prescr_mat_w <> 'S') then

      insert	into Prescr_material(	
  
        nr_prescricao,
  
        nr_sequencia,
  
        ie_origem_inf,
  
        cd_material,
  
        cd_unidade_medida_dose,
  
        cd_unidade_medida,
  
        qt_dose,
  
        qt_unitaria,
  
        qt_material,
  
        dt_atualizacao,
  
        nm_usuario,
  
        cd_intervalo,
  
        ds_observacao,
  
        nr_seq_pe_proc,
  
        ie_agrupador,
  
        ie_medicacao_paciente,
  
        ie_se_necessario,
  
        ie_urgencia,
  
        ie_suspenso,
  
        ie_utiliza_kit,
  
        ie_status_cirurgia,
  
        ie_bomba_infusao, 
  
        ie_aplic_bolus, 
  
        ie_aplic_lenta, 
  
        ie_acm,
  
        cd_motivo_baixa,
  
        dt_baixa,
  
        qt_conversao_dose,
  
        ds_horarios,
  
        nr_ocorrencia,
  
        ie_via_aplicacao,
  
        ie_recons_diluente_fixo,
  
        ie_sem_aprazamento,
  
        ie_cobra_paciente,
  
        ie_intervalo_dif,
  
        hr_prim_horario,
  
        nr_agrupamento,
  
        ds_justificativa,
  
        qt_total_dispensar)
  
      values (		
  
        nr_prescricao_w,
  
        nr_seq_presc_material_w,
  
        'A',
  
        cd_material_w,
  
        cd_unidade_medida_w,
  
        cd_unidade_medida_w,
  
        qt_dose_w,
  
        obter_conversao_unid_med_cons(cd_material_w, cd_unidade_medida_w, qt_dose_w),
  
        coalesce(CASE WHEN nr_ocorrencia_w=0 THEN  1  ELSE nr_ocorrencia_w END  * qt_dose_w, 1),
  
        clock_timestamp(),
  
        nm_usuario_p,
  
        cd_intervalo_w,
  
        null,
  
        nr_seq_proc_w,
  
        ie_agrupador_w,
  
        'N',
  
        'N',
  
        'N',
  
        'N',
  
        'N',
  
        'GI',
  
        'N',
  
        'N',
  
        'N',
  
        'N',
  
        coalesce(cd_motivo_baixa_w, 0),
  
        null,
  
        qt_conversao_w,
  
        ds_horarios_w,
  
        nr_ocorrencia_w,
  
        ie_via_aplicacao_w,
  
        'N',
  
        'N',		
  
        null,
  
        null,
  
        null,
  
        CASE WHEN ie_agrupador_w='1' THEN  Obter_proximo_agrup_medic(nr_prescricao_w)  ELSE null END ,
  
        ds_justificativa_w,
  
        coalesce(CASE WHEN nr_ocorrencia_w=0 THEN  1  ELSE nr_ocorrencia_w END  * qt_dose_w, 1));
    end if;

	end loop;

	close c01;	

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescr_item_sae ( nr_prescr_sae_p bigint, nr_seq_item_p bigint, nm_usuario_p text, ie_platform_p text default null) FROM PUBLIC;

