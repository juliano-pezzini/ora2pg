-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_consiste_profissional_aih ( nr_interno_conta_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, ie_tipo_consiste_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


/* IE_TIPO_CONSISTE_P
	- 1 Fechamento da conta
	- 2 Saída do campo
*/
ds_detalhe_w		varchar(255)	:= '';
cd_estabelecimento_w	smallint;
ds_erro_w		varchar(255)	:= '';
nr_cpf_w			varchar(11);
cd_medico_solic_w		varchar(10);
cd_medico_resp_w		varchar(10);
cd_medico_aut_w		varchar(10);
nr_cpf_solic_w		varchar(11);
nr_cpf_resp_w		varchar(11);
nr_cpf_aut_w		varchar(11);
qt_med_solic_w		bigint;
qt_med_resp_w		bigint;
nr_atendimento_w		bigint;


BEGIN

ds_detalhe_w	:=	WHEB_MENSAGEM_PCK.get_texto(277157) || nr_interno_conta_p;

/* Obter dados da pessoa fisica caso */

if (ie_tipo_consiste_p = 2) then
	begin
	select	nr_cpf
	into STRICT	nr_cpf_w
	from	pessoa_fisica
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p;
	exception
		when others then
		nr_cpf_w	:= '';
	end;
end if;

/* Obter dados da AIH */

begin
nr_atendimento_w	:= obter_atendimento_conta(nr_interno_conta_p);
select	cd_medico_solic,
	substr(obter_dados_pf(cd_medico_solic,WHEB_MENSAGEM_PCK.get_texto(277158)),1,11) nr_cpf_medico_solic,
	cd_medico_responsavel,
	substr(obter_dados_pf(cd_medico_responsavel,WHEB_MENSAGEM_PCK.get_texto(277158)),1,11) nr_cpf_medico_resp,
	cd_medico_autorizador,
	substr(obter_dados_pf(cd_medico_autorizador,WHEB_MENSAGEM_PCK.get_texto(277158)),1,11) nr_cpf_medico_aut,
	cd_estabelecimento
into STRICT	cd_medico_solic_w,
	nr_cpf_solic_w,
	cd_medico_resp_w,
	nr_cpf_resp_w,
	cd_medico_aut_w,
	nr_cpf_aut_w,
	cd_estabelecimento_w
from	sus_aih_unif
where	nr_interno_conta	= nr_interno_conta_p
and	nr_atendimento		= nr_atendimento_w;
exception
	when others then
	cd_medico_solic_w	:= '';
	cd_medico_resp_w	:= '';
	cd_medico_aut_w		:= '';
	nr_cpf_solic_w		:= '';
	nr_cpf_resp_w		:= '';
	nr_cpf_aut_w		:= '';
end;

/* 32 - CPF do profissional solicitante da AIH não informado */

if (ie_tipo_consiste_p	= 1) then
	nr_cpf_w	:= nr_cpf_solic_w;
end if;
if (sus_obter_inco_ativa(32)) and (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and
	((coalesce(nr_cpf_w::text, '') = '') or (nr_cpf_w = '')) then
	ds_detalhe_w	:= substr(ds_detalhe_w || WHEB_MENSAGEM_PCK.get_texto(277159) || cd_medico_solic_w || WHEB_MENSAGEM_PCK.get_texto(277160) || nr_cpf_w,1,255);
	if (ie_tipo_consiste_p = 1) then
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 32, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	elsif (ie_tipo_consiste_p = 2) then
		ds_erro_w	:= ds_erro_w || '32, ';
	end if;
end if;

/* 33 - CPF do profissional responsável da AIH não informado */

if (ie_tipo_consiste_p	= 1) then
	nr_cpf_w	:= nr_cpf_resp_w;
end if;

if (sus_obter_inco_ativa(33)) and (cd_medico_resp_w IS NOT NULL AND cd_medico_resp_w::text <> '') and
	((coalesce(nr_cpf_w::text, '') = '') or (nr_cpf_w = '')) then
	ds_detalhe_w	:= substr(ds_detalhe_w || WHEB_MENSAGEM_PCK.get_texto(277159) || cd_medico_resp_w || WHEB_MENSAGEM_PCK.get_texto(277160)  || nr_cpf_w,1,255);
	if (ie_tipo_consiste_p = 1) then
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 33, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	elsif (ie_tipo_consiste_p = 2) then
		ds_erro_w	:= ds_erro_w || '33, ';
	end if;
end if;

/* 77 - CPF do profissional responsável da AIH não informado */

if (sus_obter_inco_ativa(77)) and
	((nr_cpf_aut_w = nr_cpf_solic_w) or (nr_cpf_aut_w = nr_cpf_resp_w)) then
	ds_detalhe_w	:= substr(WHEB_MENSAGEM_PCK.get_texto(277161) || cd_medico_aut_w || '/ ' || nr_cpf_aut_w ||
				WHEB_MENSAGEM_PCK.get_texto(277162) || cd_medico_solic_w || '/ ' || nr_cpf_solic_w ||
				WHEB_MENSAGEM_PCK.get_texto(277163) || cd_medico_resp_w || '/ ' || nr_cpf_resp_w,1,255);
	if (ie_tipo_consiste_p = 1) then
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 77, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
end if;

if (sus_obter_inco_ativa(165))  and
	((coalesce(cd_medico_solic_w,'X') <> 'X') or (coalesce(cd_medico_resp_w,'X') <> 'X')) then

	select	count(*)
	into STRICT	qt_med_solic_w
	from	sus_medico_credenciamento
	where	cd_medico = cd_medico_solic_w
	and	ie_conveniado = 'S'
	and	coalesce(ie_situacao,'A') = 'A'
	and	coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w;

	select	count(*)
	into STRICT	qt_med_resp_w
	from	sus_medico_credenciamento
	where	cd_medico = cd_medico_resp_w
	and	ie_conveniado = 'S'
	and	coalesce(ie_situacao,'A') = 'A'
	and	coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w;

	if	((qt_med_solic_w = 0) or (qt_med_resp_w = 0)) then
	ds_detalhe_w	:= substr(WHEB_MENSAGEM_PCK.get_texto(277164) || cd_medico_solic_w || WHEB_MENSAGEM_PCK.get_texto(277163) || cd_medico_resp_w,1,255);
		if (ie_tipo_consiste_p = 1) then
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 165, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end if;
	end if;
end if;

/* 191 - CPF do profissional autozizador da AIH não informado  */

if (ie_tipo_consiste_p	= 1) then
	nr_cpf_w	:= nr_cpf_aut_w;
end if;

if (sus_obter_inco_ativa(191)) and (coalesce(cd_medico_aut_w,'X') <> 'X') and
	((coalesce(nr_cpf_w::text, '') = '') or (nr_cpf_w = '')) then
	ds_detalhe_w	:= substr(ds_detalhe_w ||  WHEB_MENSAGEM_PCK.get_texto(277159) || cd_medico_aut_w || WHEB_MENSAGEM_PCK.get_texto(277160) || nr_cpf_w,1,255);
	if (ie_tipo_consiste_p = 1) then
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 191, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	elsif (ie_tipo_consiste_p = 2) then
		ds_erro_w	:= ds_erro_w || '191, ';
	end if;
end if;

ds_erro_p	:= ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_consiste_profissional_aih ( nr_interno_conta_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, ie_tipo_consiste_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

