-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE bsc_gerar_result_indicador ( cd_empresa_p bigint, cd_estabelecimento_p bigint, nr_sequencia_p bigint, nr_seq_indicador_p bigint, nr_seq_edicao_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_ano_w			smallint;
cd_periodo_w			smallint;
cd_estab_calculo_w		bigint;
nr_seq_calculo_w			bigint	:= nr_sequencia_p;
nr_seq_indicador_w			bigint;
nr_seq_ind_inf_w			bigint;
nr_seq_origem_w			bigint;
nr_seq_result_w			bigint;
nr_seq_edicao_w			bigint;
qt_limite_w			double precision;
qt_meta_w			double precision;
qt_real_w				double precision;
ie_informada_w			varchar(1);
ie_periodo_w			varchar(1);
nm_indicador_w			varchar(255);
qt_regra_sumario_w			bigint;
qt_registro_w			bigint;
ie_inf_real_w			varchar(1);

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.nm_indicador,
	a.nr_seq_origem
from	bsc_indicador a
where	a.ie_situacao	= 'A'
and (a.ie_periodo	= ie_periodo_w or coalesce(ie_periodo_w::text, '') = '')
and	a.nr_sequencia	= coalesce(nr_seq_indicador_p,a.nr_sequencia) /* Se for recalculo, identifica o indicador especifico*/
and	nr_seq_edicao_w = 0

union

SELECT	a.nr_sequencia,
	a.nm_indicador,
	a.nr_seq_origem
from	bsc_indicador a
where	a.ie_situacao	= 'A'
and (a.ie_periodo	= ie_periodo_w or coalesce(ie_periodo_w::text, '') = '')
and	a.nr_sequencia	= coalesce(nr_seq_indicador_p,a.nr_sequencia)
and	nr_seq_edicao_w <> 0
and	exists (	select	1
		from	ple_objetivo y,
			bsc_ind_obj x
		where	x.nr_seq_objetivo	= y.nr_sequencia
		and	x.nr_seq_indicador	= a.nr_sequencia
		and	y.nr_seq_edicao	= nr_seq_edicao_w);

C02 CURSOR FOR
SELECT	a.nr_sequencia,
	a.qt_limite,
	a.qt_real,
	a.qt_meta,
	a.ie_informado
from	bsc_ind_inf a
where	a.nr_seq_indicador	= nr_seq_indicador_w
and	a.cd_ano		= cd_ano_w
and	a.cd_periodo		= cd_periodo_w
and	coalesce(cd_estab_calculo_w::text, '') = ''

union

SELECT	a.nr_sequencia,
	a.qt_limite,
	a.qt_real,
	a.qt_meta,
	a.ie_informado
from	bsc_ind_inf a
where	a.nr_seq_indicador	= nr_seq_indicador_w
and	a.cd_ano		= cd_ano_w
and	a.cd_periodo		= cd_periodo_w
and	a.cd_estabelecimento	= cd_estab_calculo_w;


BEGIN
CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(279470),'BSC_GERAR_RESULT_INDICADOR',-1); -- 279470 = 'Iniciando calculo do resultado'
nr_seq_edicao_w		:= coalesce(nr_seq_edicao_p, 0);

select	count(*)
into STRICT	qt_registro_w
from	bsc_regra_calc a
where	clock_timestamp() between a.dt_inicio_validade and coalesce(a.dt_validade,clock_timestamp());

if (qt_registro_w = 0) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(279482);
end if;

select	max(ie_periodo),
	max(cd_ano),
	max(cd_periodo),
	max(cd_estabelecimento)
into STRICT	ie_periodo_w,
	cd_ano_w,
	cd_periodo_w,
	cd_estab_calculo_w
from	bsc_calculo
where	nr_sequencia	= nr_seq_calculo_w;

CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(279472),'BSC_GERAR_RESULT_INDICADOR',-1); -- 279472 = 'Desfaz valores calculados anteriormente',
/* Desfaz a classificacao do resultado das informacoes se ja calculadas*/

update	bsc_ind_inf a
set	a.nr_seq_result  = NULL
where	a.nr_sequencia in (	SELECT	b.nr_seq_inf
			from	bsc_calc_indicador b
			where	b.nr_seq_calc	= nr_seq_calculo_w)
and	a.nr_seq_indicador	= coalesce(nr_seq_indicador_p,a.nr_seq_indicador)			
and	(a.nr_seq_result IS NOT NULL AND a.nr_seq_result::text <> '');

/* Limpa o registro dos calculos*/
				
delete	FROM bsc_calc_indicador
where	nr_seq_calc		= nr_seq_calculo_w
and	nr_seq_indicador	= coalesce(nr_seq_indicador_p, nr_seq_indicador);
commit;

CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(279471),'BSC_GERAR_RESULT_INDICADOR',-1); -- 279471 = 'Limpa registros do calculo'
open C01;
loop
fetch C01 into	
	nr_seq_indicador_w,
	nm_indicador_w,
	nr_seq_origem_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(279473, 'NM_INDICADOR_P=' || nm_indicador_w ||
								';NR_SEQ_INDICADOR_P=' || nr_seq_indicador_w),'BSC_GERAR_RESULT_INDICADOR',-1);
	select	coalesce(max(a.ie_informada),'N')
	into STRICT	ie_informada_w
	from	bsc_origem_indic a
	where	a.nr_sequencia	= nr_seq_origem_w;
	
	select	count(*)
	into STRICT	qt_regra_sumario_w
	from	bsc_ind_regra_inf
	where	nr_seq_indicador	= nr_seq_indicador_w;
	
	open C02;
	loop
	fetch C02 into	
		nr_seq_ind_inf_w,
		qt_limite_w,
		qt_real_w,
		qt_meta_w,
		ie_inf_real_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		
		if (ie_informada_w = 'N') then
			/* Calcula o valor real do indicador atraves da BSC_REGRA_CALC_IND*/

			qt_real_w := bsc_calcular_indicador(nr_seq_indicador_w, nr_seq_ind_inf_w, qt_real_w, nm_usuario_p);
		end if;
		/* Classifica o resultado se bom ruim ou medio */


		/*if	(ie_inf_real_w = 'S') then*/

			nr_seq_result_w	:= bsc_obter_result_indicador(nr_seq_indicador_w,qt_limite_w, qt_real_w, qt_meta_w);
		/*end if;*/

		select	count(*)
		into STRICT	qt_registro_w
		from	bsc_ind_inf_acum
		where	nr_seq_inf	= nr_seq_ind_inf_w;
		
		if (qt_regra_sumario_w > 0) or (qt_registro_w > 0) then
			CALL bsc_calcular_inf_acum(nr_seq_indicador_w, nr_seq_ind_inf_w, nm_usuario_p);
		end if;
		/* Atualiza a informacao com novo valor e a sequencia da cor*/
	
		if (ie_informada_w = 'S') then
			begin
			update	bsc_ind_inf
			set	nr_seq_result	= coalesce(nr_seq_result_w,null),
				dt_atualizacao  =  clock_timestamp(),
                nm_usuario      =  nm_usuario_p,
                qt_real		    =  coalesce(qt_real_w,0)
			where	nr_sequencia	= nr_seq_ind_inf_w;
			end;
		elsif (ie_informada_w = 'N') then
			begin
			update	bsc_ind_inf
			set	nr_seq_result	= nr_seq_result_w,
                dt_atualizacao  = clock_timestamp(),
                nm_usuario      = nm_usuario_p,
				qt_real		    = coalesce(qt_real_w,0),
				ie_informado	= 'S'
			where	nr_sequencia	= nr_seq_ind_inf_w;
			end;
		end if;

		/* Registra o calculo que sera usado para a arvore*/
		
		insert into bsc_calc_indicador(
			nr_sequencia,
			nr_seq_calc,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_indicador,
			nr_seq_inf)
		values (	nextval('bsc_calc_indicador_seq'),
			nr_seq_calculo_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_indicador_w,
			nr_seq_ind_inf_w);
		end;
	end loop;
	close C02;
	
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE bsc_gerar_result_indicador ( cd_empresa_p bigint, cd_estabelecimento_p bigint, nr_sequencia_p bigint, nr_seq_indicador_p bigint, nr_seq_edicao_p bigint, nm_usuario_p text) FROM PUBLIC;

