-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_elemento_mat_sne (( nr_prescricao_p prescr_medica.nr_prescricao%type, nr_seq_material_p prescr_material.nr_sequencia%type, ie_alterando_gerando_p text, nm_usuario_p text) is nr_sequencia_w prescr_prod_elem.nr_sequencia%type) RETURNS bigint AS $body$
DECLARE


	ie_tipo_elemento_w		nut_elemento.ie_tipo_elemento%type;
	qt_total_nut_elem_W		prescr_prod_elem.qt_total_nut_elem%type;
	qt_fator_calculo_w		double precision;
	
BEGIN
	qt_total_nut_elem_w	:= 0;
	ie_tipo_elemento_w	:= obter_tipo_elemento(nr_seq_elemento_p);

	qt_fator_calculo_w 	:= 0;
	if (ie_tipo_elemento_w = 'P') then
		qt_fator_calculo_w := 4;
	elsif (ie_tipo_elemento_w = 'C') then
		qt_fator_calculo_w := Obter_Param_Usuario(924, 1035, obter_perfil_ativo, nm_usuario_p, 0, qt_fator_calculo_w);
	elsif (ie_tipo_elemento_w = 'L') then
		qt_fator_calculo_w := Obter_Param_Usuario(924, 1034, obter_perfil_ativo, nm_usuario_p, 0, qt_fator_calculo_w);
	end if;

	qt_total_nut_elem_w := (dividir((qt_ml_p * qt_dose_ml_p),100) * qt_fator_calculo_w);

	return qt_total_nut_elem_w;

	end;


begin

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then

	select	max(cd_material),
			max(qt_solucao)
	into STRICT	cd_material_w,
			qt_solucao_w
	from	prescr_material
	where	nr_prescricao = nr_prescricao_p
	and		nr_sequencia = nr_seq_material_p;


	if (ie_alterando_gerando_p = 'G') then

	open c01;
	loop
	fetch c01 into	nr_seq_elemento_w,
					qt_grama_w,
					qt_ml_w,
					qt_idr_w,
					qt_conversao_kcal_w,
					qt_conversao_ml_w,
					qt_conv_unid_cons_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		qt_total_nut_elem_w := obter_qt_total_kcal_elem( nr_seq_elemento_w, qt_solucao_w, qt_ml_w);

		select	nextval('prescr_prod_elem_seq')
		into STRICT	nr_sequencia_w
		;

		insert into prescr_prod_elem(
						nr_sequencia,
						nr_seq_elemento,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						qt_conversao_kcal,
						qt_conversao_ml,
						qt_conv_unid_cons,
						qt_grama,
						qt_idr,
						qt_ml,
						qt_total_nut_elem,
						nr_prescricao,
						nr_seq_material)
					values (
						nr_sequencia_w,
						nr_seq_elemento_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_p,
						nm_usuario_p,
						qt_conversao_kcal_w,
						qt_conversao_ml_W,
						qt_conv_unid_cons_w,
						qt_grama_W,
						qt_idr_W,
						qt_ml_w,
						qt_total_nut_elem_w,
						nr_prescricao_p,
						nr_seq_material_p);

		end;
	end loop;
	close c01;

	elsif (ie_alterando_gerando_p = 'A') then

		open c02;
		loop
		fetch c02 into	nr_seq_elemento_w,
						qt_grama_w,
						qt_ml_w,
						qt_idr_w,
						qt_conversao_kcal_w,
						qt_conversao_ml_w,
						qt_conv_unid_cons_w,
						nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

			qt_total_nut_elem_w := obter_qt_total_kcal_elem( nr_seq_elemento_w, qt_solucao_w, qt_ml_w);

			update	prescr_prod_elem
			set		nm_usuario = nm_usuario_p,
					dt_atualizacao = clock_timestamp(),
					qt_total_nut_elem = qt_total_nut_elem_w
			where	nr_sequencia = nr_sequencia_w
			and		nr_prescricao = nr_prescricao_p
			and		nr_seq_material = nr_seq_material_p;

			end;
		end loop;
		close c02;

	end if;
end if;

commit;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_elemento_mat_sne (( nr_prescricao_p prescr_medica.nr_prescricao%type, nr_seq_material_p prescr_material.nr_sequencia%type, ie_alterando_gerando_p text, nm_usuario_p text) is nr_sequencia_w prescr_prod_elem.nr_sequencia%type) FROM PUBLIC;

