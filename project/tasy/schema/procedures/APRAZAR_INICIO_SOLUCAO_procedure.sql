-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE aprazar_inicio_solucao ( ie_tipo_solucao_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, dt_inicio_p timestamp, nr_seq_motivo_p bigint, ds_observacao_p text, nm_usuario_p text, ie_somente_gedipa_p text, cd_funcao_origem_p bigint, ie_gedipa_p text, ie_gera_kit_sol_acm_p text, nr_seq_assinatura_p bigint default 0) AS $body$
DECLARE


nr_sequencia_w			bigint;
nr_seq_horario_w		bigint;
nr_seq_material_w		integer;
cd_material_w			integer;
qt_dispensar_w			double precision;
nr_seq_lote_w			bigint;
qt_dispensar_hor_w		double precision;
cd_unidade_medida_w		varchar(30);
qt_dose_w				double precision;
cd_unidade_medida_dose_w	varchar(30);
ie_data_validade_w		varchar(3);
nr_atendimento_w		bigint;
cd_estab_prescr_w		smallint;
cd_setor_prescr_w		integer;
cd_local_estoque_w		smallint;
ie_gerar_todos_sol_w		varchar(10);
varie_cursor_w			varchar(1) := 'N';
nr_seq_processo_w		bigint;
nr_etapas_gerar_w		smallint;
qt_horas_etapa_w		double precision;
nr_seq_etapa_ww			bigint;
ie_gerar_necessidade_disp_w	 varchar(15);
nr_etapas_geradas_w		smallint := 0;
dt_etapa_w			timestamp;
dt_inicio_prescr_w		timestamp;
cd_local_estoque_baixa_w	smallint;
dt_validade_prescr_w		timestamp;
ie_acm_w			varchar(1);
ie_sn_w				varchar(1);
ie_registro_w			bigint;
cd_estabelecimento_w		bigint;
ie_horario_acm_w		varchar(1);
ie_horario_sn_w			varchar(1);
ajustar_disp_hor_farm_w		varchar(2);
qt_total_dispensar_w		double precision;
ie_controlado_w			varchar(1);
nr_ocorrencia_w			double precision;
nr_seq_classif_w		bigint;
ie_classif_urgente_w		varchar(3);
ie_padronizado_w		varchar(1);
ie_classif_nao_padrao_w		varchar(15);
dt_liberacao_w			timestamp;
dt_limite_agora_w		timestamp;
dt_limite_especial_w		timestamp;
qt_min_agora_w			bigint;
qt_min_especial_w		bigint;
dt_horario_w			timestamp;
nr_agrupamento_w		double precision;
dt_prescricao_w			timestamp;
ie_gerar_processo_w		varchar(1);
nr_seq_classif_param_w		bigint;
dt_hora_atual_w			timestamp;
ie_gerar_classif_agora_w	varchar(1);
ie_agora_impressao_w		varchar(15);
qt_min_antes_atend_w		integer;
hr_turno_agora_w		varchar(15);
nr_seq_turno_hor_ag_w		bigint;
ie_dose_especial_w		varchar(1);
ie_local_estoque_mat_hor_w	varchar(1);
nr_seq_item_w			bigint;
ds_horario_w			varchar(4000);
hr_final_turno_agora_w		varchar(15);
ie_define_agora_w		regra_tempo_disp.ie_define_agora%type;
ie_gerar_lote_w			varchar(1);
nr_seq_hor_w			prescr_mat_hor.nr_sequencia%type;
ie_setor_gedipa_w		varchar(1);
cd_pessoa_fisica_w		atendimento_paciente.cd_pessoa_fisica%type;
ie_gera_integracao_w		varchar(1);
ie_gera_sem_certificado_w	varchar(1);
nr_seq_cpoe_w				cpoe_material.nr_sequencia%type;
dt_inicio_cpoe_w			cpoe_material.dt_liberacao%type;
qt_horario_w                prescr_mat_hor.qt_horario%type;
ie_tipo_sol_reg_w			varchar(3);
ie_apraz_regra_w			varchar(1);
nr_atendimento_reg_w		prescr_medica.nr_atendimento%type;
ie_gerar_log_kit_w    varchar(1);
ie_prescr_emergencia_w	prescr_medica.ie_prescr_emergencia%type;

c01 CURSOR FOR
SELECT	1 ie_registro,
	c.nr_sequencia,
	d.cd_material,
	d.qt_dispensar,
	d.qt_dispensar_hor,
	d.cd_unidade_medida,
	d.qt_dose,
	d.cd_unidade_medida_dose,
	a.nr_atendimento,
	a.cd_estabelecimento,
	a.cd_setor_atendimento,
	c.cd_local_estoque,
	c.qt_total_dispensar,
	c.nr_ocorrencia,
	c.nr_agrupamento
from	prescr_mat_hor d,
	prescr_material c,
	prescr_solucao b,
	prescr_medica a
where	d.nr_prescricao		= c.nr_prescricao
and	d.nr_seq_material	= c.nr_sequencia
and	d.nr_prescricao		= a.nr_prescricao
and	c.nr_prescricao		= b.nr_prescricao
and	c.nr_sequencia_solucao	= b.nr_seq_solucao
and	c.nr_prescricao		= a.nr_prescricao
and	b.nr_prescricao		= a.nr_prescricao
and	b.nr_seq_solucao	= nr_seq_solucao_p
and	a.nr_prescricao		= nr_prescricao_p
and	c.ie_agrupador		= 4
and	coalesce(c.ie_suspenso,'N')	<> 'S'
and	coalesce(b.dt_suspensao::text, '') = ''
and	coalesce(a.dt_suspensao::text, '') = ''
--and	Obter_se_horario_liberado(d.dt_lib_horario, d.dt_horario) = 'S'
group by
	c.nr_sequencia,
	d.cd_material,
	d.qt_dispensar,
	d.qt_dispensar_hor,
	d.cd_unidade_medida,
	d.qt_dose,
	d.cd_unidade_medida_dose,
	a.nr_atendimento,
	a.cd_estabelecimento,
	a.cd_setor_atendimento,
	c.cd_local_estoque,
	c.qt_total_dispensar,
	c.nr_ocorrencia,
	c.nr_agrupamento

union

select	2 ie_registro,
	c.nr_sequencia,
	c.cd_material,
	c.qt_total_dispensar,
	null,--c.qt_dose,
	c.cd_unidade_medida,
	c.qt_dose,
	c.cd_unidade_medida_dose,
	a.nr_atendimento,
	a.cd_estabelecimento,
	a.cd_setor_atendimento,
	c.cd_local_estoque,
	c.qt_total_dispensar,
	c.nr_ocorrencia,
	c.nr_agrupamento
from	prescr_material c,
	prescr_solucao b,
	prescr_medica a
where	a.nr_prescricao		= c.nr_prescricao
and	c.nr_prescricao		= b.nr_prescricao
and	c.nr_sequencia_solucao	= b.nr_seq_solucao
and	b.nr_prescricao		= a.nr_prescricao
and	b.nr_seq_solucao	= nr_seq_solucao_p
and	a.nr_prescricao		= nr_prescricao_p
and	not exists (	select	1
			from	prescr_mat_hor x
			where	x.nr_prescricao		= c.nr_prescricao
			and	x.nr_seq_material	= c.nr_sequencia)
			--and	Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S')
and	(((b.ie_acm			= 'S') and (coalesce(ie_horario_acm_w,'S')	= 'N')) or
	((b.ie_se_necessario		= 'S') and (coalesce(ie_horario_sn_w,'S')	= 'N')))
and	c.ie_agrupador		= 4
and	coalesce(c.ie_suspenso,'N')	<> 'S'
and	coalesce(b.dt_suspensao::text, '') = ''
and	coalesce(a.dt_suspensao::text, '') = ''
group by
	c.nr_sequencia,
	c.cd_material,
	c.qt_dose,
	c.qt_dose,
	c.cd_unidade_medida,
	c.qt_dose,
	c.cd_unidade_medida_dose,
	a.nr_atendimento,
	a.cd_estabelecimento,
	a.cd_setor_atendimento,
	c.cd_local_estoque,
	c.qt_total_dispensar,
	c.nr_ocorrencia,
	c.nr_agrupamento;
	
C02 CURSOR FOR
	SELECT	nr_sequencia,
		ie_classif_urgente,
		ie_controlado,
		ie_padronizado
	from	classif_lote_disp_far
	where	cd_estabelecimento = cd_estabelecimento_w
	and	ie_situacao = 'A'
	order by ie_classif_urgente,
		ie_controlado desc,
		ie_padronizado desc;

C21 CURSOR FOR
	SELECT	a.nr_sequencia,
		b.cd_local_estoque,
		a.ds_horario,
		a.nr_seq_material,
		c.cd_estabelecimento,
		c.cd_setor_atendimento
	from	prescr_mat_hor a,
		prescr_material b,
		prescr_medica c
	where	a.nr_prescricao	= nr_prescricao_p
	and	a.nr_prescricao = b.nr_prescricao
	and	a.nr_seq_material = b.nr_sequencia
	and	a.nr_prescricao = c.nr_prescricao
	and	(a.dt_lib_horario IS NOT NULL AND a.dt_lib_horario::text <> '');


BEGIN

ie_gerar_log_kit_w := obter_rastreabilidade_adep(nr_prescricao_p, 'APR');
if (ie_gerar_log_kit_w = 'S') then
  CALL adep_gerar_log_rastr(substr('Log aprazar itens dependentes' || chr(10) ||
    '{ cd_estabelecimento_w: ' || cd_estabelecimento_w || ',' || chr(10) ||
    ' cd_setor_prescr_w: ' || cd_setor_prescr_w || ',' || chr(10) ||
    ' nr_atendimento_w: ' || nr_atendimento_w || ',' || chr(10) ||
    ' nr_prescricao_p: ' || nr_prescricao_p || ',' || chr(10) ||
    ' nr_seq_material_w: ' || nr_seq_material_w || ',' || chr(10) ||
    ' dt_horario_w: ' || dt_horario_w || ',' || chr(10) ||
    ' nm_usuario_p: ' || nm_usuario_p || chr(10) ||
    '}'
  , 1, 1500));
end if;

if (ie_tipo_solucao_p IS NOT NULL AND ie_tipo_solucao_p::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') and (dt_inicio_p IS NOT NULL AND dt_inicio_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then	
	
	if (ie_tipo_solucao_p in (1, 4, 5)) then
		if (ie_tipo_solucao_p = 1) then
			ie_tipo_sol_reg_w := 'SOL';
		elsif (ie_tipo_solucao_p = 4) then
			ie_tipo_sol_reg_w := 'NAN';
		else
			ie_tipo_sol_reg_w := 'NPP';
		end if;
		
		select 	max(a.nr_atendimento)
		into STRICT	nr_atendimento_reg_w
		from	prescr_medica a
		where	a.nr_prescricao = nr_prescricao_p;
		
		ie_apraz_regra_w := obter_apraz_reapraz_regra(	ie_tipo_item_p => ie_tipo_sol_reg_w,
														nr_atendimento_p => nr_atendimento_reg_w,
														ie_acao_p => 'A',
														nm_usuario_p => nm_usuario_p);
		if (ie_apraz_regra_w <> 'S') then
			-- Voce nao tem permissao para efetuar essa acao. Cadastros gerais / ADEP - Regra permissao de aprazamento/reaprazamento
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1134375);
		end if;
	end if;
	
	dt_inicio_cpoe_w := null;
		
	select	dt_inicio_prescr,
			dt_validade_prescr,
			cd_estabelecimento,
			dt_liberacao,
			dt_prescricao,
			nr_atendimento,
			coalesce(ie_prescr_emergencia,'N')
	into STRICT	dt_inicio_prescr_w,
			dt_validade_prescr_w,
			cd_estabelecimento_w,
			dt_liberacao_w,
			dt_prescricao_w,
			nr_atendimento_w,
			ie_prescr_emergencia_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;
	
	nr_seq_cpoe_w := obter_nr_seq_cpoe_sol(nr_prescricao_p, nr_seq_solucao_p);
	
	if (nr_seq_cpoe_w IS NOT NULL AND nr_seq_cpoe_w::text <> '') then
		select 	CASE WHEN ie_prescr_emergencia_w='S' THEN  max(dt_inicio)  ELSE max(dt_liberacao) END
		into STRICT	dt_inicio_cpoe_w
		from 	cpoe_material
		where	nr_sequencia = nr_seq_cpoe_w;
	end if;
	
	if (ie_gedipa_p = 'N') then
		ie_setor_gedipa_w	:= obter_se_setor_processo_gedipa(obter_unidade_atendimento(nr_atendimento_w,'IAA','CS'));
	else
		ie_setor_gedipa_w 	:= ie_gedipa_p;
	end if;
	
	select	coalesce(max(ie_horario_acm),'S'),
		coalesce(max(ie_horario_sn),'S'),
		max(ie_classif_urgencia),
		coalesce(max(IE_GERAR_TODOS_SOL),'S'),
		coalesce(max(ie_forma_agora), 'N'),
		coalesce(max(ie_gera_integracao),'N')
	into STRICT	ie_horario_acm_w,
		ie_horario_sn_w,
		ie_classif_nao_padrao_w,
		ie_gerar_todos_sol_w,
		ie_agora_impressao_w,
		ie_gera_integracao_w
	from	parametros_farmacia
	where	cd_estabelecimento	= cd_estabelecimento_w;

	select	coalesce(max(ie_acm), 'N'),
		coalesce(max(ie_se_necessario),'N')
	into STRICT	ie_acm_w,
		ie_sn_w
	from	prescr_solucao
	where	nr_prescricao = nr_prescricao_p
	and	nr_seq_solucao = nr_seq_solucao_p;
	
	select	coalesce(max(qt_min_agora),0),
		coalesce(max(qt_min_especial),0),
		max(ie_classif_urgencia)
	into STRICT	qt_min_agora_w,
		qt_min_especial_w,
		ie_classif_nao_padrao_w
	from	parametros_farmacia
	where	cd_estabelecimento = cd_estabelecimento_w;
	
	dt_horario_w := to_date(to_char(dt_inicio_p,'dd/mm/yyyy hh24:mi') || ':00','dd/mm/yyyy hh24:mi:ss');
	
	dt_limite_agora_w	:= dt_liberacao_w + qt_min_agora_w/1440;
	dt_limite_especial_w	:= dt_liberacao_w + qt_min_especial_w/1440;
	
	ie_gerar_necessidade_disp_w := obter_param_usuario(1113, 70, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_necessidade_disp_w);
	ie_data_validade_w := obter_param_usuario(1113, 276, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_data_validade_w);
	ie_gerar_processo_w := obter_param_usuario(1113, 279, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_processo_w);
	nr_seq_classif_param_w := obter_param_usuario(1113, 498, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, nr_seq_classif_param_w);	
	ie_gerar_classif_agora_w := Obter_Param_Usuario(1113, 529, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_classif_agora_w);
	ie_gerar_lote_w := obter_param_usuario(1113, 342, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_lote_w);
	ie_local_estoque_mat_hor_w := obter_param_usuario(924, 851, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_local_estoque_mat_hor_w);		
	
	if (coalesce(ie_gerar_classif_agora_w,'N') = 'S') then
		dt_hora_atual_w := clock_timestamp();
		dt_limite_agora_w	:=  dt_hora_atual_w + qt_min_agora_w/1440; 			
	end if;
	
	if (ie_gerar_necessidade_disp_w = 'S') then

		update	prescr_material
		set	cd_motivo_baixa	= 0,
			dt_baixa		 = NULL
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia_solucao	= nr_seq_solucao_p;
			
	end if;
	
	if	((ie_acm_w = 'S') or (ie_sn_w = 'S')) then
		if (dt_inicio_p < dt_prescricao_w and (coalesce(dt_inicio_cpoe_w::text, '') = '' or (dt_inicio_p < dt_inicio_cpoe_w))) then
			--Nao e permitido aprazar o inicio de uma solucao para um horario anterior a data da prescricao!'||'#@#@');
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(182407);
		elsif (ie_data_validade_w = 'S') and (dt_inicio_p < coalesce(dt_inicio_cpoe_w, dt_inicio_prescr_w)) then
			--Nao e permitido aprazar o inicio de uma solucao para um horario anterior a data de inicio da prescricao! Parametro [276]'||'#@#@');
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(182408);
		elsif (dt_inicio_p > dt_validade_prescr_w) then
			--Nao e permitido aprazar o inicio de uma solucao para um horario posterior ao termino da validade da prescricao!'||'#@#@');	
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(182409);
		end if;
		
	end if;
	
	CALL define_local_disp_prescr(nr_prescricao_p, 0, obter_perfil_ativo, nm_usuario_p);
	
	if (ie_tipo_solucao_p = 1) then
		update	prescr_solucao
		set	dt_status 	= trunc(dt_inicio_p,'mi'),
			ie_status	= 'N'
		where	nr_prescricao	= nr_prescricao_p
		and	nr_seq_solucao	= nr_seq_solucao_p;

		select	coalesce(max(CASE WHEN nr_etapas=0 THEN 1  ELSE nr_etapas END ),1),
			coalesce(max(qt_hora_fase),0)
		into STRICT	nr_etapas_gerar_w,
			qt_horas_etapa_w
		from	prescr_solucao
		where	nr_prescricao	= nr_prescricao_p
		and	nr_seq_solucao	= nr_seq_solucao_p;
		
		if (qt_horas_etapa_w = 0) then
			qt_horas_etapa_w	:= dividir(24, nr_etapas_gerar_w);
		end if;

		dt_etapa_w	:= dt_inicio_p;
		
		if	((ie_acm_w = 'S') or (ie_sn_w = 'S')) and (ie_gerar_todos_sol_w = 'N') then
			nr_etapas_gerar_w	:= 1;
		end if;
		
		while(nr_etapas_geradas_w < nr_etapas_gerar_w) loop
			begin						
			open c01;
			loop
			fetch c01 into	ie_registro_w,
					nr_seq_material_w,
					cd_material_w,
					qt_dispensar_w,
					qt_dispensar_hor_w,
					cd_unidade_medida_w,
					qt_dose_w,
					cd_unidade_medida_dose_w,
					nr_atendimento_w,
					cd_estab_prescr_w,
					cd_setor_prescr_w,
					cd_local_estoque_w,
					qt_total_dispensar_w,
					nr_ocorrencia_w,
					nr_agrupamento_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
				begin

                select  coalesce(max(a.qt_horario), 0)
                into STRICT    qt_horario_w
                from	prescr_mat_hor a,
                        prescr_material b
                where	a.nr_prescricao = b.nr_prescricao
                and	    a.nr_seq_material = b.nr_sequencia
                and     b.nr_prescricao = nr_prescricao_p
                and     b.nr_sequencia_solucao = nr_seq_solucao_p
				and 	b.cd_material = cd_material_w;
				
				select	coalesce(max(substr(Obter_se_medic_controlado(cd_material_w),1,1)),'N'),
					coalesce(max(substr(obter_se_material_padronizado(cd_estab_prescr_w,cd_material_w),1,1)),'N')
				into STRICT	ie_controlado_w,
					ie_padronizado_w
				;
				
				/*	Fabio e JonasJonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

				if (ie_agora_impressao_w = 'S') then
					nr_seq_turno_hor_ag_w	:= obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_prescr_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
					select	max(to_char(b.hr_inicial,'hh24:mi')),
						max(to_char(b.hr_final,'hh24:mi'))
					into STRICT	hr_turno_agora_w,
						hr_final_turno_agora_w
					from	regra_turno_disp_param b,
						regra_turno_disp a
					where	a.nr_sequencia		= b.nr_seq_turno
					and	a.cd_estabelecimento	= cd_estabelecimento_w
					and	a.nr_sequencia		= nr_seq_turno_hor_ag_w
					and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_prescr_w,0))	= coalesce(cd_setor_prescr_w,0));

					select	coalesce(max(qt_min_antes_atend), 0),
						coalesce(max(ie_define_agora), 'N')
					into STRICT	qt_min_antes_atend_w,
						ie_define_agora_w
					from	regra_tempo_disp
					where	cd_estabelecimento	= cd_estabelecimento_w
					and (coalesce(cd_setor_atendimento,coalesce(cd_setor_prescr_w,0)) = coalesce(cd_setor_prescr_w,0))
					and	nr_seq_turno = nr_seq_turno_hor_ag_w
					and	ie_situacao = 'A';

					if (hr_turno_agora_w > hr_final_turno_agora_w) then
						if (to_char(dt_horario_w,'dd/mm/yyyy') > to_char(dt_inicio_prescr_w,'dd/mm/yyyy')) then
							dt_limite_agora_w := to_date(to_char(dt_horario_w-1,'dd/mm/yyyy')||' '||hr_turno_agora_w||':00','dd/mm/yyyy hh24:mi:ss') - (qt_min_antes_atend_w/1440);
						else
							dt_limite_agora_w := to_date(to_char(dt_horario_w,'dd/mm/yyyy')||' '||hr_turno_agora_w||':00','dd/mm/yyyy hh24:mi:ss') - (qt_min_antes_atend_w/1440);
						end if;
					else
						dt_limite_agora_w := to_date(to_char(dt_horario_w,'dd/mm/yyyy')||' '||hr_turno_agora_w||':00','dd/mm/yyyy hh24:mi:ss') - (qt_min_antes_atend_w/1440);
					end if;
				end if;
					/*	Fabio e Jonas - 19/01/2010 = Final da alteracao*/

		
				if (coalesce(ie_classif_nao_padrao_w::text, '') = '') or (ie_padronizado_w = 'S') then
					begin
					ie_classif_urgente_w	:= 'N';
					if (dt_horario_w <= dt_limite_agora_w) then
						ie_classif_urgente_w	:= 'A';
					elsif	((dt_limite_agora_w <= clock_timestamp()) and (ie_agora_impressao_w = 'S') and (ie_define_agora_w = 'N')) then
						ie_classif_urgente_w	:= 'A';
					elsif (ie_agora_impressao_w = 'S' and ie_define_agora_w = 'S') and
						(dt_horario_w <= (clock_timestamp() + (qt_min_antes_atend_w /1440))) then
						ie_classif_urgente_w	:= 'A';
					elsif (dt_horario_w <= dt_limite_especial_w) then
						ie_classif_urgente_w	:= 'E';
					end if;
					end;
				else
					ie_classif_urgente_w	:= ie_classif_nao_padrao_w;
				end if;
				
				select	nextval('prescr_mat_hor_seq')
				into STRICT	nr_seq_horario_w
				;
				
				cd_local_estoque_baixa_w	:= null;
	
				if (coalesce(cd_setor_prescr_w,0) > 0) then	
					select	coalesce(max(cd_local_estoque),0)
					into STRICT	cd_local_estoque_baixa_w
					from	setor_local
					where	cd_setor_atendimento = cd_setor_prescr_w
					and	ie_loca_estoque_pac = 'S';				
						
					if (cd_local_estoque_baixa_w = 0) then
						cd_local_estoque_baixa_w := null;
					end if;
				end if;
				
				--Pegar a sequencia da primeira etapa aprazada.
				--Depois irei precisar desta sequencia para gerar o evento.
				if (coalesce(nr_seq_hor_w::text, '') = '') then
					nr_seq_hor_w	:= nr_seq_horario_w;
				end if;
				
				insert into prescr_mat_hor(
					nr_sequencia,
					nr_seq_digito,
					nr_prescricao,
					nr_seq_material,
					ie_agrupador,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_material,
					qt_dose,
					qt_dispensar,
					qt_dispensar_hor,
					ds_horario,
					dt_horario,
					cd_unidade_medida,
					cd_unidade_medida_dose,
					ie_urgente,
					dt_emissao_farmacia,
					dt_fim_horario,
					dt_suspensao,
					ie_horario_especial,
					qt_hor_reaprazamento,
					nm_usuario_reaprazamento,
					nr_seq_turno,
					dt_disp_farmacia,
					ie_aprazado,
					nr_seq_solucao,
					nr_etapa_sol,
					ie_classif_urgente,
					ie_padronizado,
					ie_controlado,
					dt_lib_horario,
					nr_atendimento,
					cd_local_estoque_baixa,
					qt_horario
					)
				values (
					nr_seq_horario_w,
					calcula_digito('MODULO11',nr_seq_horario_w),
					nr_prescricao_p,
					nr_seq_material_w, --nr_seq_solucao_p,
					4,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_material_w,
					qt_dose_w,
					qt_dispensar_w,
					dividir(qt_total_dispensar_w,nr_ocorrencia_w), --qt_dispensar_hor_w, OS 
					to_char(dt_etapa_w,'hh24:mi'),
					trunc(dt_etapa_w,'mi'),
					cd_unidade_medida_w,
					cd_unidade_medida_dose_w,
					'N',
					null, --decode(ie_gerar_necessidade_disp_w,'S',null,sysdate),
					null,
					null,
					'N',
					null,
					null,
					obter_turno_horario_prescr(cd_estab_prescr_w, cd_setor_prescr_w, to_char(dt_etapa_w,'hh24:mi'), cd_local_estoque_w),
					clock_timestamp(),
					'S',
					nr_seq_solucao_p,
					nr_etapas_geradas_w + 1,
					ie_classif_urgente_w,
					ie_padronizado_w,
					ie_controlado_w,
					clock_timestamp(),
					nr_atendimento_w,
					cd_local_estoque_baixa_w,
					qt_horario_w);									
					
					if (coalesce(ie_gera_kit_sol_acm_p, 'N') = 'S') then
						CALL aprazar_itens_dependentes(cd_estabelecimento_w, cd_setor_prescr_w, nr_atendimento_w, nr_prescricao_p, nr_seq_material_w, 0, dt_horario_w, 'S', nm_usuario_p, null, null, null, null, 'AIS');
					end if;
					
					
					/*if	(ie_gera_integracao_w = 'S') then
						disp_prescr_mat_hor(nr_prescricao_p,nr_seq_horario_w,nm_usuario_p);
					end if;*/
					
				varie_cursor_w := 'S';	

				if (ie_registro_w		= 2) and
					((ie_horario_acm_w	= 'N') or (ie_horario_sn_w	= 'N')) then
					begin
					select	coalesce(max(obter_valor_param_usuario(924, 179, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)),'N')
					into STRICT	ajustar_disp_hor_farm_w
					;
					exception
						when others then
						ajustar_disp_hor_farm_w := 'N';
					end;

					begin
					if (ajustar_disp_hor_farm_w <> 'N') then
						CALL calcular_dispensar_horario(nr_prescricao_p, nr_seq_horario_w);
					end if;
					exception
						when others then
						ajustar_disp_hor_farm_w := 'N';
					end;
				end if;
				
				if (coalesce(nr_seq_classif_param_w ,0) > 0)	then
					begin
											
					update	prescr_mat_hor
					set	nr_seq_classif		= nr_seq_classif_param_w
					where	nr_prescricao		= nr_prescricao_p	
					and	nr_sequencia		= nr_seq_horario_w;
					end;
				else	
					open C02;
					loop
					fetch C02 into	
						nr_seq_classif_w,
						ie_classif_urgente_w,
						ie_controlado_w,
						ie_padronizado_w;
					EXIT WHEN NOT FOUND; /* apply on C02 */
						begin
					
						if (ie_controlado_w = 'A') and (ie_padronizado_w = 'A') then
							update	prescr_mat_hor
							set	nr_seq_classif		= nr_seq_classif_w
							where	nr_prescricao		= nr_prescricao_p	
							and	nr_sequencia		= nr_seq_horario_w
							--and	nr_seq_lote		is not null
							and	ie_classif_urgente	= ie_classif_urgente_w;
						elsif (ie_controlado_w = 'A') and (ie_padronizado_w = 'S') then
							update	prescr_mat_hor
							set	nr_seq_classif		= nr_seq_classif_w
							where	nr_prescricao		= nr_prescricao_p
							and	ie_padronizado		= 'S'
							and	nr_sequencia		= nr_seq_horario_w
							--and	nr_seq_lote		is not null
							and	ie_classif_urgente	= ie_classif_urgente_w;
						elsif (ie_controlado_w = 'A') and (ie_padronizado_w = 'N') then
							update	prescr_mat_hor
							set	nr_seq_classif		= nr_seq_classif_w
							where	nr_prescricao		= nr_prescricao_p
							and	ie_padronizado		= 'N'
							and	nr_sequencia		= nr_seq_horario_w
							--and	nr_seq_lote		is not null
							and	ie_classif_urgente	= ie_classif_urgente_w;
						elsif (ie_controlado_w = 'N') and (ie_padronizado_w = 'A') then
							update	prescr_mat_hor
							set	nr_seq_classif		= nr_seq_classif_w
							where	nr_prescricao		= nr_prescricao_p
							and	ie_controlado		= 'N'
							and	nr_sequencia		= nr_seq_horario_w
							--and	nr_seq_lote		is not null
							and	ie_classif_urgente	= ie_classif_urgente_w;
						elsif (ie_controlado_w = 'N') and (ie_padronizado_w = 'N') then
							update	prescr_mat_hor
							set	nr_seq_classif		= nr_seq_classif_w
							where	nr_prescricao		= nr_prescricao_p
							and	ie_controlado		= 'N'
							and	ie_padronizado		= 'N'
							and	nr_sequencia		= nr_seq_horario_w
							--and	nr_seq_lote		is not null
							and	ie_classif_urgente	= ie_classif_urgente_w;
						elsif (ie_controlado_w = 'N') and (ie_padronizado_w = 'S') then
							update	prescr_mat_hor
							set	nr_seq_classif		= nr_seq_classif_w
							where	nr_prescricao		= nr_prescricao_p
							and	ie_controlado		= 'N'
							and	ie_padronizado		= 'S'
							--and	nr_seq_lote		is not null
							and	nr_sequencia		= nr_seq_horario_w
							and	ie_classif_urgente	= ie_classif_urgente_w;
						elsif (ie_controlado_w = 'S') and (ie_padronizado_w = 'A') then
							update	prescr_mat_hor
							set	nr_seq_classif		= nr_seq_classif_w
							where	nr_prescricao		= nr_prescricao_p
							and	ie_controlado		= 'S'
							--and	nr_seq_lote		is not null
							and	nr_sequencia		= nr_seq_horario_w
							and	ie_classif_urgente	= ie_classif_urgente_w;
						elsif (ie_controlado_w = 'S') and (ie_padronizado_w = 'N') then
							update	prescr_mat_hor
							set	nr_seq_classif		= nr_seq_classif_w
							where	nr_prescricao		= nr_prescricao_p
							and	ie_controlado		= 'S'
							and	ie_padronizado		= 'N'
							--and	nr_seq_lote		is not null
							and	nr_sequencia		= nr_seq_horario_w
							and	ie_classif_urgente	= ie_classif_urgente_w;
						elsif (ie_controlado_w = 'S') and (ie_padronizado_w = 'S') then
							update	prescr_mat_hor
							set	nr_seq_classif		= nr_seq_classif_w
							where	nr_prescricao		= nr_prescricao_p
							and	ie_controlado		= 'S'
							and	ie_padronizado		= 'S'
							--and	nr_seq_lote		is not null
							and	nr_sequencia		= nr_seq_horario_w
							and	ie_classif_urgente	= ie_classif_urgente_w;
						end if;
						end;
					end loop;
					close C02;
				end if;	
				end;
			end loop;
			close c01;
			
			open C21;
			loop
			fetch C21 into	
				nr_seq_horario_w,
				cd_local_estoque_w,
				ds_horario_w,
				nr_seq_item_w,
				cd_estab_prescr_w,
				cd_setor_prescr_w;
			EXIT WHEN NOT FOUND; /* apply on C21 */
				if (ie_local_estoque_mat_hor_w	= 'S') then
					
					CALL define_disp_prescr_mat_hor(nr_seq_horario_w, nr_prescricao_p, nr_seq_item_w, obter_perfil_ativo, nm_usuario_p);
				
					select	coalesce(max(cd_local_estoque),cd_local_estoque_w)
					into STRICT	cd_local_estoque_w
					from	prescr_mat_hor
					where	nr_sequencia	= nr_seq_horario_w;
					
					update	prescr_mat_hor
					set	nr_seq_turno	= coalesce(Obter_turno_horario_prescr(cd_estab_prescr_w, cd_setor_prescr_w, ds_horario_w, cd_local_estoque_w),nr_seq_turno)
					where	nr_sequencia	= nr_seq_horario_w;
				end if;
			end loop;
			close C21;
			
			if (varie_cursor_w = 'S') and (ie_gerar_processo_w = 'S') then
				CALL adep_gerar_area_prep(nr_prescricao_p, null, nm_usuario_p);
				nr_seq_processo_w := gerar_processo_adep_sol(nr_atendimento_w, nr_prescricao_p, nr_seq_solucao_p, nr_etapas_geradas_w + 1, trunc(dt_etapa_w,'mi'), nm_usuario_p, nr_seq_processo_w, ie_setor_gedipa_w, cd_funcao_origem_p, 'AIS', ie_gedipa_p, null, null);
				
				update	prescr_mat_hor a
				set	a.nr_seq_processo	= nr_seq_processo_w
				where	a.nr_prescricao	= nr_prescricao_p
				and	coalesce(a.ie_horario_especial,'N') <> 'S'
				and	a.dt_horario	= trunc(dt_etapa_w,'mi')
				and	a.ie_agrupador	= 4
				and 	exists (
						SELECT	1
						from	prescr_material b
						where	b.nr_prescricao		= a.nr_prescricao
						and	b.nr_sequencia		= a.nr_seq_material
						and	b.ie_agrupador		= 4
						and	b.nr_sequencia_solucao	= nr_seq_solucao_p);
						
				CALL atual_proc_area_kit_comp_sol(nr_seq_processo_w, nr_prescricao_p, nr_seq_solucao_p, trunc(dt_etapa_w,'mi'),null,'N');
				if (ie_setor_gedipa_w = 'S') then
					begin
					CALL gerar_frac_proc_sol(nr_seq_processo_w, nr_prescricao_p, nr_seq_solucao_p,'S', nm_usuario_p,null,'N');
					end;
				end if;
			end if;			
			dt_etapa_w		:= dt_etapa_w + qt_horas_etapa_w / 24;
			nr_etapas_geradas_w	:= nr_etapas_geradas_w + 1;	

			
			end;
		end loop;			
	end if;
	
	if (varie_cursor_w = 'S')	then
		begin
		if	((ie_gerar_lote_w not in ('N','A')) or (trunc(dt_horario_w,'mi') >= trunc(clock_timestamp(),'mi'))) then			
			CALL Gerar_Lote_Atend_Prescricao(nr_prescricao_p,0, null, 'N', nm_usuario_p, 'AIS');    /* Jonas - OS 143817 */
		end if;		
		
		select	nextval('prescr_solucao_evento_seq')
		into STRICT	nr_sequencia_w
		;
		
		select	max(nr_seq_lote)
		into STRICT	nr_seq_lote_w
		from	prescr_mat_hor
		where	nr_prescricao	= nr_prescricao_p
		and		nr_seq_solucao	= nr_seq_solucao_p
		and		coalesce(ie_aprazado, 'N') = 'S';
		--and		nr_sequencia 	= nvl(nr_seq_hor_w, nr_sequencia);
		insert into prescr_solucao_evento(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_prescricao,
			nr_seq_solucao,
			nr_seq_material,
			nr_seq_procedimento,
			nr_seq_nut,
			nr_seq_nut_neo,
			ie_forma_infusao,
			ie_tipo_dosagem,
			qt_dosagem,
			qt_vol_infundido,
			qt_vol_desprezado,
			cd_pessoa_fisica,
			ie_alteracao,
			dt_alteracao,
			ie_evento_valido,
			nr_seq_motivo,
			ds_observacao,
			ie_tipo_solucao,
			dt_aprazamento,
			nr_seq_lote,
			nr_seq_assinatura,
			cd_funcao)
		values (
			nr_sequencia_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_prescricao_p,
			CASE WHEN ie_tipo_solucao_p=1 THEN nr_seq_solucao_p  ELSE null END ,
			CASE WHEN ie_tipo_solucao_p=2 THEN nr_seq_solucao_p  ELSE null END ,
			CASE WHEN ie_tipo_solucao_p=3 THEN nr_seq_solucao_p  ELSE null END ,
			CASE WHEN ie_tipo_solucao_p=4 THEN nr_seq_solucao_p  ELSE null END ,
			CASE WHEN ie_tipo_solucao_p=5 THEN nr_seq_solucao_p  ELSE null END ,
			null,
			null,
			null,
			null,
			null,
			obter_dados_usuario_opcao(nm_usuario_p, 'C'),
			16,
			clock_timestamp(),
			'S',
			nr_seq_motivo_p,
			ds_observacao_p,
			ie_tipo_solucao_p,
			dt_inicio_p,
			nr_seq_lote_w,
			nr_seq_assinatura_p,
			cd_funcao_origem_p);
			
			ie_gera_sem_certificado_w	:= 'N';
		
			if (wheb_assist_pck.get_gerar_sem_certificado = 'S') then
				ie_gera_sem_certificado_w := adep_obter_se_assin_perfil(50592, obter_perfil_ativo); --ADEP - Aprazamento de itens
			end if;
				
			if	((wheb_assist_pck.get_cd_certificado IS NOT NULL AND wheb_assist_pck.get_cd_certificado::text <> '') OR (ie_gera_sem_certificado_w = 'S')) AND (coalesce(obter_data_assinatura_digital(nr_seq_assinatura_p)::text, '') = '') then
			
	            select	max(cd_pessoa_fisica)
				into STRICT	cd_pessoa_fisica_w
				from	atendimento_paciente
				where	nr_atendimento = nr_atendimento_w;
	
				CALL Gerar_registro_pendente_PEP('ADEP',nr_prescricao_p, cd_pessoa_fisica_w, nr_atendimento_w, nm_usuario_p, 'A', nr_seq_horario_w, 'SOL',null,null,null,null,null,null,null,null,null,null,null,null,null,null,nr_sequencia_w);

			end if;	
		
		exception when others then
			CALL gravar_log_tasy(13298,
							substr('LOG ERRO - APRAZAR_INICIO_SOLUCAO'||chr(10)||
							'nr_prescricao_p = '||nr_prescricao_p||chr(10)||
							'nr_seq_solucao_p = '||nr_seq_solucao_p||chr(10)||
							'ie_tipo_solucao_p = '||ie_tipo_solucao_p||chr(10)||
							'nr_seq_lote_w = '||nr_seq_lote_w||chr(10)||
							'nm_usuario_p = '||nm_usuario_p||chr(10)||
							'nr_seq_assinatura_p = '||nr_seq_assinatura_p||chr(10)||
							'ie_gerar_lote_w = '||ie_gerar_lote_w||chr(10)||
							'dt_horario_w = '||dt_horario_w||chr(10)||
							'nr_seq_horario_w = '||nr_seq_horario_w||chr(10)||
							'erro = '||sqlerrm||chr(10)||
							'stack erro = '||substr(dbms_utility.format_error_backtrace,1,1500)||chr(10)||
							'seq evento = '||nr_sequencia_w,1,2000),
							wheb_usuario_pck.get_nm_usuario);
		end;
			
	elsif (varie_cursor_w = 'N') then

		update	prescr_solucao
		set	dt_status 		 = NULL
		where	nr_prescricao	= nr_prescricao_p
		and	nr_seq_solucao	= nr_seq_solucao_p;
		
	end if;		
		
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE aprazar_inicio_solucao ( ie_tipo_solucao_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, dt_inicio_p timestamp, nr_seq_motivo_p bigint, ds_observacao_p text, nm_usuario_p text, ie_somente_gedipa_p text, cd_funcao_origem_p bigint, ie_gedipa_p text, ie_gera_kit_sol_acm_p text, nr_seq_assinatura_p bigint default 0) FROM PUBLIC;

