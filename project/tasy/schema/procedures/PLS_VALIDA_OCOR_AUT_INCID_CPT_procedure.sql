-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_valida_ocor_aut_incid_cpt ( nr_seq_ocor_combinada_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_utiliza_filtro_p text, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Verificar se o beneficiario possui declaracao de saude liberada. Se tiver declaracao de saude e nao gerou a glsoa 1421, deve gerar analise para verificacao
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao: Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_segurado_w		bigint;
cd_pessoa_fisica_w		varchar(10);
dt_liberacao_w			timestamp;
nr_seq_proc_w			bigint;
cd_procedimento_w		varchar(10);
ie_origem_proced_w		varchar(2);
qt_glosa_proced_w		bigint;
nr_seq_motivo_glosa_w		bigint;
cd_motivo_tiss_w		bigint;
ie_gerou_glosa_1421		varchar(1) := 'N';
ie_tipo_tempo_w			varchar(255);	
qt_tempo_contratacao_w		bigint;
dt_regra_w			timestamp;
ie_gerou_ocor_cabecalho_w	varchar(2);
qt_dias_contrato_w		bigint;
dt_inclusao_operadora_w		timestamp;
ie_gerar_ocorrencia_w		varchar(2);
ie_tipo_item_w			varchar(2);
ie_regra_w			varchar(2);
nr_seq_oc_benef_w		bigint;
ie_tipo_ocorrencia_w		varchar(2);
nr_seq_contrato_w		bigint;

C01 CURSOR FOR
	SELECT 	nr_sequencia,
		cd_procedimento,
		ie_origem_proced
	from 	pls_guia_plano_proc
	where 	nr_seq_guia = nr_seq_guia_p;
	
C02 CURSOR FOR
	SELECT 	nr_seq_motivo_glosa
	from 	pls_guia_glosa
	where 	nr_seq_guia_proc 	= nr_seq_proc_w;
	
C03 CURSOR FOR
	SELECT	qt_tempo_contratacao,
		ie_tipo_tempo
	from	pls_validacao_aut_decl_cpt
	where	nr_seq_ocor_aut_combinada	= nr_seq_ocor_combinada_p
	and	ie_situacao 	= 'A';
	
C11 CURSOR FOR
	SELECT 	nr_sequencia,
		cd_procedimento,
		ie_origem_proced
	from 	pls_requisicao_proc
	where 	nr_seq_requisicao = nr_seq_requisicao_p;
	
C12 CURSOR FOR
	SELECT 	nr_seq_motivo_glosa
	from 	pls_requisicao_glosa
	where 	nr_seq_req_proc 	= nr_seq_proc_w;
	

BEGIN
if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	begin
		select	nr_seq_segurado
		into STRICT	nr_seq_segurado_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_p;
	exception
	when others then
		nr_seq_segurado_w		:= null;
	end;

elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	begin
		select	nr_seq_segurado
		into STRICT	nr_seq_segurado_w
		from	pls_requisicao
		where	nr_sequencia	= nr_seq_requisicao_p;
	exception
	when others then
		nr_seq_segurado_w		:= null;
	end;
end if;

begin
	select	cd_pessoa_fisica,
		nr_seq_contrato
	into STRICT	cd_pessoa_fisica_w,
		nr_seq_contrato_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
exception
when others then
	cd_pessoa_fisica_w	:= null;
end;

begin
	select	max(dt_liberacao)
	into STRICT	dt_liberacao_w
	from	pls_declaracao_segurado
	where	nr_seq_segurado		= nr_seq_segurado_w;
exception
when others then
	dt_liberacao_w		:= null;
end;

if (coalesce(dt_liberacao_w::text, '') = '') then
	begin
		select	max(dt_liberacao)
		into STRICT	dt_liberacao_w
		from	pls_declaracao_segurado
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w
		and	nr_seq_contrato		= nr_seq_contrato_w;
	exception
	when others then
		dt_liberacao_w		:= null;
	end;
end if;

if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then
	if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
		open C01;
		loop
		fetch C01 into	
			nr_seq_proc_w,
			cd_procedimento_w,
			ie_origem_proced_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin	
			ie_gerou_glosa_1421	:= 'N';
			
			select 	count(1)
			into STRICT	qt_glosa_proced_w
			from 	pls_guia_glosa
			where 	nr_seq_guia_proc 	= nr_seq_proc_w;
			
			if (qt_glosa_proced_w > 0) then				
				open C02;
				loop
				fetch C02 into	
					nr_seq_motivo_glosa_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin						
						select 	cd_motivo_tiss
						into STRICT	cd_motivo_tiss_w
						from 	tiss_motivo_glosa
						where	nr_sequencia = 	nr_seq_motivo_glosa_w;
						
						if (cd_motivo_tiss_w	= 1421) then
							ie_gerou_glosa_1421	:= 'S';
							exit;
						end if;							
					end;
				end loop;
				close C02;
			end if;
			
			if (ie_gerou_glosa_1421	= 'N') then
				open C03;
				loop
				fetch C03 into	
					qt_tempo_contratacao_w,
					ie_tipo_tempo_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin
					if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
					begin
						select	dt_inclusao_operadora
						into STRICT	dt_inclusao_operadora_w
						from	pls_segurado
						where	nr_sequencia	= nr_seq_segurado_w;
					exception
					when others then
						dt_inclusao_operadora_w	:= null;
					end;
					end if;
					
					if (ie_tipo_tempo_w	= 'D') then
						dt_regra_w	:= trunc(clock_timestamp() - (qt_tempo_contratacao_w));
					elsif (ie_tipo_tempo_w	= 'M') then
						dt_regra_w	:= (add_months(clock_timestamp(), - qt_tempo_contratacao_w));
					elsif (ie_tipo_tempo_w	= 'A') then
						dt_regra_w	:= (add_months(clock_timestamp(), - qt_tempo_contratacao_w * 12)); /* Vezes 12 meses ao ano */
					end if;
					
					if (dt_inclusao_operadora_w	> dt_regra_w) then
						ie_gerar_ocorrencia_w := 'S';

						if (ie_utiliza_filtro_p = 'S') then
						/* Tratamento para filtros */

						SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, nr_seq_proc_w, null, null, null, null, cd_procedimento_w, ie_origem_proced_w, null, ie_gerou_ocor_cabecalho_w, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;

							if (ie_regra_w	= 'S') then
								ie_gerar_ocorrencia_w	:= 'S';
							elsif (ie_regra_w	in ('E','N')) then
								ie_gerar_ocorrencia_w	:= 'N';
								exit;
							end if;
						end if;

						if (ie_gerar_ocorrencia_w	= 'S')	then
							if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
								ie_tipo_item_w	:= 1;
							end if;

							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, nr_seq_proc_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, ie_tipo_item_w, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
										
							 CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
												nr_seq_guia_p, null, null,
												nr_seq_proc_w, null, null,
												null, null, null,
												nm_usuario_p, cd_estabelecimento_p);
						end if;
					end if;	
					end;
				end loop;
				close C03;
			end if;
			end;
		end loop;
		close C01;
		
	elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
		open C11;
		loop
		fetch C11 into	
			nr_seq_proc_w,
			cd_procedimento_w,
			ie_origem_proced_w;
		EXIT WHEN NOT FOUND; /* apply on C11 */
			begin	
			ie_gerou_glosa_1421	:= 'N';
			
			select 	count(1)
			into STRICT	qt_glosa_proced_w
			from 	pls_requisicao_glosa
			where 	nr_seq_req_proc 	= nr_seq_proc_w;
			
			if (qt_glosa_proced_w > 0) then				
				open C12;
				loop
				fetch C12 into	
					nr_seq_motivo_glosa_w;
				EXIT WHEN NOT FOUND; /* apply on C12 */
					begin						
						select 	cd_motivo_tiss
						into STRICT	cd_motivo_tiss_w
						from 	tiss_motivo_glosa
						where	nr_sequencia = 	nr_seq_motivo_glosa_w;
						
						if (cd_motivo_tiss_w	= 1421) then
							ie_gerou_glosa_1421	:= 'S';
							exit;
						end if;							
					end;
				end loop;
				close C12;
			end if;
			
			if (ie_gerou_glosa_1421	= 'N') then
				open C03;
				loop
				fetch C03 into	
					qt_tempo_contratacao_w,
					ie_tipo_tempo_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin
					if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
					begin
						select	dt_inclusao_operadora
						into STRICT	dt_inclusao_operadora_w
						from	pls_segurado
						where	nr_sequencia	= nr_seq_segurado_w;
					exception
					when others then
						dt_inclusao_operadora_w	:= null;
					end;
					end if;
					
					if (ie_tipo_tempo_w	= 'D') then
						dt_regra_w	:= trunc(clock_timestamp() - (qt_tempo_contratacao_w));
					elsif (ie_tipo_tempo_w	= 'M') then
						dt_regra_w	:= (add_months(clock_timestamp(), - qt_tempo_contratacao_w));
					elsif (ie_tipo_tempo_w	= 'A') then
						dt_regra_w	:= (add_months(clock_timestamp(), - qt_tempo_contratacao_w * 12)); /* Vezes 12 meses ao ano */
					end if;
					
					if (dt_inclusao_operadora_w	> dt_regra_w) then
						ie_gerar_ocorrencia_w := 'S';

						if (ie_utiliza_filtro_p = 'S') then
						/* Tratamento para filtros */

						SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, nr_seq_proc_w, null, null, cd_procedimento_w, ie_origem_proced_w, null, ie_gerou_ocor_cabecalho_w, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;

							if (ie_regra_w	= 'S') then
								ie_gerar_ocorrencia_w	:= 'S';
							elsif (ie_regra_w	in ('E','N')) then
								ie_gerar_ocorrencia_w	:= 'N';
								exit;
							end if;
						end if;

						if (ie_gerar_ocorrencia_w	= 'S')	then
							if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
								ie_tipo_item_w	:= 9;
							end if;

							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, nr_seq_proc_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, ie_tipo_item_w, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
										
							 CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
												null, nr_seq_requisicao_p, null,
												null, null, nr_seq_proc_w,
												null, null, null,
												nm_usuario_p, cd_estabelecimento_p);
						end if;
					end if;	
					end;
				end loop;
				close C03;
			end if;
			end;
		end loop;
		close C11;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_valida_ocor_aut_incid_cpt ( nr_seq_ocor_combinada_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_utiliza_filtro_p text, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

