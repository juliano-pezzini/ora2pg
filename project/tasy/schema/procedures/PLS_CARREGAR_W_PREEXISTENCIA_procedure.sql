-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_carregar_w_preexistencia ( nr_seq_analise_p bigint, nr_seq_pergunta_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_preexistencia_w		bigint;
qt_registro_w			bigint;
ie_inserir_w			varchar(10);
cd_classificacao_w		bigint;
ie_acao_preexistencia_w		varchar(10);
ie_classificacao_dlp_w		varchar(10);
nr_seq_proposta_w		pls_proposta_adesao.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_classificacao
	from	pls_preexistencia	a
	where	(((nr_seq_pergunta_p IS NOT NULL AND nr_seq_pergunta_p::text <> '')
		and exists (	SELECT	1
					from	pls_quest_resp_dlp	b,
						pergunta_result		c,
						pls_declaracao_resposta d,
						pls_declaracao_segurado e
					where	b.nr_seq_preexistencia	= a.nr_sequencia
					and	b.nr_seq_pergunta	= c.nr_sequencia
					and	c.nr_seq_pergunta	= d.nr_seq_pergunta
					and	d.nr_seq_declaracao	= e.nr_sequencia
					and	e.nr_seq_proposta_adesao = nr_seq_proposta_w
					and	d.ds_resultado		= c.cd_item
					and	c.nr_seq_pergunta	= nr_seq_pergunta_p)) or (coalesce(nr_seq_pergunta_p::text, '') = ''));


BEGIN

delete	from w_pls_preexistencia
where	nr_seq_analise	= nr_seq_analise_p;

select	max(nr_seq_proposta)
into STRICT	nr_seq_proposta_w
from	pls_analise_adesao
where	nr_sequencia	= nr_seq_analise_p;

open C01;
loop
fetch C01 into
	nr_seq_preexistencia_w,
	cd_classificacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_analise_preexistencia
	where	nr_seq_preexistencia	= nr_seq_preexistencia_w
	and	nr_seq_analise		= nr_seq_analise_p;

	if (qt_registro_w > 0) then
		ie_inserir_w	:= 'S';

		select	max(ie_acao_sugerida),
			max(ie_classificacao_dlp)
		into STRICT	ie_acao_preexistencia_w,
			ie_classificacao_dlp_w
		from	pls_analise_preexistencia
		where	nr_seq_preexistencia	= nr_seq_preexistencia_w
		and	nr_seq_analise		= nr_seq_analise_p;
	else
		ie_inserir_w		:= 'N';
		ie_acao_preexistencia_w	:= null;
		ie_classificacao_dlp_w	:= null;
	end if;

	insert into w_pls_preexistencia(nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					ie_inserir, nr_seq_classificacao, nr_seq_dlp, ie_acao_preexistencia, ie_classificacao_dlp,
					nr_seq_analise)
				values (	nextval('w_pls_preexistencia_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
					ie_inserir_w, cd_classificacao_w, nr_seq_preexistencia_w, ie_acao_preexistencia_w, ie_classificacao_dlp_w,
					nr_seq_analise_p);
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_carregar_w_preexistencia ( nr_seq_analise_p bigint, nr_seq_pergunta_p bigint, nm_usuario_p text) FROM PUBLIC;

