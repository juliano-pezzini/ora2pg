-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_saldo_caixa ( cd_estabelecimento_p bigint, nr_seq_lote_p bigint, nr_seq_caixa_p bigint, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE


dt_referencia_saldo_w			timestamp;
dt_referencia_saldo_diario_w		timestamp;
ie_saldo_caixa_w			varchar(01);
vl_atualizado_w				double precision	:= 0;
nr_seq_caixa_w				bigint	:= 0;
nr_seq_movto_w				bigint	:= 0;
vl_saldo_titulo_bordero_w		double precision	:= 0;
ie_caixa_w				varchar(01)	:= null;
ie_banco_w				varchar(01)	:= null;
nr_seq_trans_monet_w			bigint	:= 0;
nr_seq_trans_transf_w			bigint	:= 0;
nr_seq_saldo_banco_w			bigint;
ie_exige_monet_w			varchar(1);
qt_reg_w				bigint;
ie_saldo_negativo_w			varchar(1);
ie_saldo_neg_cheque_w			varchar(1);
ie_saldo_neg_cartao_w			varchar(1);
ie_saldo_neg_especie_w			varchar(1);
vl_saldo_atual_w			double precision;
ie_cheque_pre_w				varchar(1);
ie_cartao_cr_w				varchar(1);
vl_cheque_pre_w				double precision	:= 0;
vl_cartao_cr_w				double precision	:= 0;
vl_saldo_avista_w			double precision	:= 0;
vl_saldo_pre_w				double precision	:= 0;
vl_cheque_vista_w			double precision	:= 0;
vl_especie_w				double precision	:= 0;
vl_saldo_cartao_w			double precision	:= 0;
vl_saldo_especie_w			double precision	:= 0;
nr_seq_movto_origem_w			bigint;
nr_seq_movto_transf_w			bigint;
nr_seq_movto_cartao_transf_w		bigint;
ie_cartao_debito_w			varchar(1);
ie_cheque_vista_w			varchar(1);
ie_especie_w				varchar(1);
vl_cheque_vista_dep_w			double precision;
vl_cheque_pre_dep_w			double precision;
ie_saldo_dep_cheque_w			varchar(255);
ie_acao_w				varchar(1) := 'I';
ds_transacao_w				varchar(255)	:= '';
ie_saldo_caixa_origem_w			varchar(2);
vl_especie_dep_w			double precision;

nr_sequencia_w				bigint;
nr_seq_trans_banco_w			bigint;
ie_permite_titulo_sem_nf_w		varchar(255)	:= 'S';
qt_registro_w				bigint;

nr_seq_banco_od_w			bigint;
dt_transacao_w				timestamp;
nr_seq_trans_financ_w			bigint;
vl_transacao_w				double precision;
cd_pessoa_fisica_w			varchar(255);
cd_cgc_w				varchar(255);
nr_seq_titulo_pagar_w			bigint;
nr_seq_titulo_receber_w			bigint;
nr_bordero_w				bigint;
nr_adiantamento_w			bigint;
nr_seq_caixa_od_w			bigint;
cd_conta_contabil_w			varchar(255);
cd_centro_custo_w			bigint;
nr_seq_nota_fiscal_w			bigint;
nr_interno_conta_w			bigint;
nr_documento_w				varchar(255);
ds_historico_w				varchar(255);
cd_tipo_recebimento_w			bigint;
cd_tipo_baixa_cpa_w			bigint;
nr_seq_cheque_w				bigint;
nr_seq_conv_receb_w			bigint;
nr_seq_deposito_w			bigint;
nr_seq_banco_escrit_w			bigint;
nr_lote_contabil_w			bigint;
nr_adiant_pago_w			bigint;
ie_conciliacao_w			varchar(255);
nr_seq_cheque_cp_w			bigint;
cd_historico_w				varchar(255);
nr_bordero_rec_w			bigint;
nr_seq_movto_cartao_w			bigint;
nr_seq_motivo_dev_w			bigint;
dt_conferencia_w			timestamp;
nr_seq_movto_cartao_cr_w		bigint;
vl_despesa_w				double precision;
vl_saldo_sem_desp_w			double precision;
vl_total_desp_w				double precision	:= 0;
ie_rejeitado_w				varchar(15);
nr_seq_saldo_caixa_w			bigint;
ie_saldo_retroativo_w			varchar(1);
ie_alterar_pagador_eup_w		varchar(20);
nr_atendimento_w			bigint;
nr_seq_trans_w				bigint;
cd_pessoa_fisica_ww			bigint;
/* Projeto Multimoeda - Variaveis */

cd_moeda_empresa_w			integer;
ie_caixa_estrang_w			varchar(1);
ie_considera_vl_despesa_w	varchar(1);
nr_seq_lote_cartao_w	movto_trans_financ.nr_seq_lote_cartao%type;
nr_seq_movto_tf_cartao_w	movto_trans_financ.nr_sequencia%type;
ds_lista_movto_cartao_w		varchar(1000);
ie_deposito_direto_w		transacao_financeira.ie_deposito_direto%type;
vl_deposito_direto_w		movto_trans_financ.vl_transacao%type := 0;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.nr_seq_trans_financ,
	a.vl_transacao,
	a.dt_referencia_saldo,
	a.nr_seq_caixa,
	coalesce(b.ie_caixa,'N'),
	coalesce(b.ie_banco,'N'),
	a.nr_seq_banco_od,
	coalesce(b.ie_saldo_caixa,'N'),
	CASE WHEN b.ie_cheque_cr='P' THEN 'S'  ELSE 'N' END ,
	CASE WHEN b.ie_cartao_cr='S' THEN 'S'  ELSE 'N' END ,
	CASE WHEN b.ie_cartao_debito='S' THEN 'S'  ELSE 'N' END ,
	CASE WHEN b.ie_cheque_cr='V' THEN 'S'  ELSE 'N' END ,
	CASE WHEN b.ie_especie='S' THEN 'S'  ELSE 'N' END ,
	a.nr_seq_deposito,
	b.ds_transacao,
	b.nr_seq_trans_banco,
	a.nr_seq_movto_cartao,
	a.nr_seq_lote_cartao,
	coalesce(a.ie_rejeitado,'N'),
	CASE WHEN b.ie_deposito_direto='S' THEN 'S'  ELSE 'N' END
from	transacao_financeira b,
	movto_trans_financ a
where	a.nr_seq_trans_financ	= b.nr_sequencia
and	a.nr_seq_lote		= nr_seq_lote_p
and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = cd_moeda_empresa_w  -- Projeto Multimoeda - Busca apenas o que e moeda nacional
and	a.nr_seq_caixa		= nr_seq_caixa_p;

c02 CURSOR FOR
SELECT	nr_seq_movto_cartao,
		nr_sequencia
from	movto_trans_financ
where	(nr_seq_movto_transf	= nr_seq_movto_w or
         nr_seq_movto_transf	= (SELECT max(nr_seq_movto_orig) from movto_trans_financ where nr_sequencia  = nr_seq_movto_w and (nr_seq_movto_orig IS NOT NULL AND nr_seq_movto_orig::text <> '') and ie_estorno = 'E') --Caso for um estorno de uma transf de entrada
		);
		
C03 CURSOR FOR
	SELECT  a.nr_seq_movto_cartao
	from	movto_trans_financ a
	where	a.nr_seq_movto_transf = nr_seq_movto_tf_cartao_w;		



BEGIN

begin
select	coalesce(ie_saldo_negativo,'S'),
	coalesce(ie_saldo_dep_cheque,'N'),
	coalesce(ie_saldo_neg_cheque,'N'),
	coalesce(ie_saldo_neg_cartao,'N'),
	coalesce(ie_saldo_neg_especie,'N')
into STRICT	ie_saldo_negativo_w,
	ie_saldo_dep_cheque_w,
	ie_saldo_neg_cheque_w,
	ie_saldo_neg_cartao_w,
	ie_saldo_neg_especie_w
from	parametro_tesouraria
where	cd_estabelecimento	= cd_estabelecimento_p;
exception
when no_data_found then
	/*Os parametros da tesouraria nao estao cadastrados!*/

	CALL wheb_mensagem_pck.exibir_mensagem_abort(220466);
end;

/* Projeto Multimoeda - Busca a moeda padrao da empresa */

select	obter_moeda_padrao_empresa(cd_estabelecimento_p,'E')
into STRICT	cd_moeda_empresa_w
;

/* Projeto Multimoeda - Verifica se o caixa permite moeda estrangeira */

select	obter_se_caixa_estrang(nr_seq_caixa_p)
into STRICT	ie_caixa_estrang_w
;

/* Projeto Multimoeda - Busca a data do saldo para encontrar o saldo diario  e atualizar os valores quando nao 
	houver transacao em moeda nacional no lote. */
select	max(dt_referencia_saldo)
into STRICT	dt_referencia_saldo_diario_w
from	movto_trans_financ
where	nr_seq_lote	= nr_seq_lote_p
and	nr_seq_caixa	= nr_seq_caixa_p;

select	coalesce(vl_parametro, vl_parametro_padrao)
into STRICT	ie_exige_monet_w
from 	funcao_parametro
where	cd_funcao	= 813
and	nr_sequencia	= 2;

select	count(*)
into STRICT	nr_seq_trans_monet_w
from	transacao_financeira b,
	movto_trans_financ a
where	b.nr_sequencia	= a.nr_seq_trans_financ
and	b.ie_caixa	= 'M'
and	a.nr_seq_lote	= nr_seq_lote_p
and	a.nr_seq_caixa		= nr_seq_caixa_p;

select	count(*)
into STRICT	nr_seq_trans_transf_w
from	transacao_financeira b,
	movto_trans_financ a
where	b.nr_sequencia	= a.nr_seq_trans_financ
and	b.ie_caixa	= 'T'
and	a.nr_seq_lote	= nr_seq_lote_p
and	a.nr_seq_caixa	= nr_seq_caixa_p;

if (nr_seq_trans_monet_w = 0) and (nr_seq_trans_transf_w = 0) and (ie_exige_monet_w = 'S') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(220475);
end if;

select	count(*)
into STRICT	qt_reg_w
from	bordero_pagamento c,
	transacao_financeira b,
	movto_trans_financ a
where	a.nr_seq_trans_financ	= b.nr_sequencia
and	a.nr_seq_lote			= nr_seq_lote_p
and	a.nr_seq_caixa		= nr_seq_caixa_p
and	a.nr_bordero			= c.nr_bordero
and	(c.nr_seq_conta_banco IS NOT NULL AND c.nr_seq_conta_banco::text <> '');

if (qt_reg_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(220476);
end if;

ie_permite_titulo_sem_nf_w	:= coalesce(obter_valor_param_usuario(813,58,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p),'S');

/* Verificar parametro 58, OS 151530 */

if (ie_permite_titulo_sem_nf_w = 'N') then
	select	count(*)
	into STRICT	qt_registro_w
	from	titulo_receber b,
		movto_trans_financ a
	where	a.nr_seq_titulo_receber	= b.nr_titulo
	and	a.nr_seq_caixa		= nr_seq_caixa_p
	and	a.nr_seq_lote		= nr_seq_lote_p
	and	coalesce(b.nr_seq_nf_saida::text, '') = '';

	if (qt_registro_w	> 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(303462); -- O lote nao pode ser fechado pois existem titulos no lote que nao possuem nota fiscal associada. Parametro [58].
	end if;
end if;

OPEN	c01;
LOOP
FETCH	c01 into
	nr_seq_movto_w,
	nr_seq_trans_financ_w,
	vl_transacao_w,
	dt_referencia_saldo_w,
	nr_seq_caixa_w,
	ie_caixa_w,
	ie_banco_w,
	nr_seq_banco_od_w,
	ie_saldo_caixa_w,
	ie_cheque_pre_w,
	ie_cartao_cr_w,
	ie_cartao_debito_w,
	ie_cheque_vista_w,
	ie_especie_w,
	nr_seq_deposito_w,
	ds_transacao_w,
	nr_seq_trans_banco_w,
	nr_seq_movto_cartao_cr_w,
	nr_seq_lote_cartao_w,
	ie_rejeitado_w,
	ie_deposito_direto_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	/* Francisco - OS  71633 - 19/02/2008 - Estorno de lote  para a Atualizar_transacao_financeira */

	if (vl_transacao_w < 0) then
		ie_acao_w	:= 'E';
	else
		ie_acao_w	:= 'I';
	end if;

	CALL atualizar_transacao_financeira(cd_estabelecimento_p,
					nr_seq_movto_w,
					nm_usuario_p,
					ie_acao_w);
					
	if (ie_caixa_w	= 'D') or (ie_caixa_w	= 'T') or (ie_caixa_w	= 'A') then
		if (ie_saldo_caixa_w	= 'S') and (coalesce(ie_rejeitado_w,'N') <> 'S') then
			vl_atualizado_w		:= coalesce(vl_atualizado_w,0) + coalesce(vl_transacao_w,0);
		elsif (ie_saldo_caixa_w	= 'E') or (coalesce(ie_rejeitado_w,'N') = 'S') then
			vl_atualizado_w		:= coalesce(vl_atualizado_w,0) + (coalesce(vl_transacao_w,0) * -1);
		end if;
	end if;

	if (ie_banco_w <> 'N') and (nr_seq_banco_od_w IS NOT NULL AND nr_seq_banco_od_w::text <> '') then

		select	nextval('movto_trans_financ_seq')
		into STRICT	nr_sequencia_w
		;


		select	nr_seq_banco_od,
			dt_transacao,
			nr_seq_trans_financ,
			vl_transacao,
			cd_pessoa_fisica,
			cd_cgc,
			nr_seq_titulo_pagar,
			nr_seq_titulo_receber,
			nr_bordero,
			nr_adiantamento,
			nr_seq_banco_od,
			nr_seq_caixa_od,
			cd_conta_contabil,
			cd_centro_custo,
			nr_seq_nota_fiscal,
			nr_interno_conta,
			nr_documento,
			ds_historico,
			cd_tipo_recebimento,
			cd_tipo_baixa_cpa,
			nr_seq_cheque,
			nr_seq_conv_receb,
			nr_seq_deposito,
			nr_seq_banco_escrit,
			nr_lote_contabil,
			nr_adiant_pago,
			ie_conciliacao,
			nr_seq_cheque_cp,
			cd_historico,
			nr_bordero_rec,
			nr_seq_movto_cartao,
			nr_seq_motivo_dev,
			dt_conferencia
		into STRICT	nr_seq_banco_od_w,
			dt_transacao_w,
			nr_seq_trans_financ_w,
			vl_transacao_w,
			cd_pessoa_fisica_w,
			cd_cgc_w,
			nr_seq_titulo_pagar_w,
			nr_seq_titulo_receber_w,
			nr_bordero_w,
			nr_adiantamento_w,
			nr_seq_banco_od_w,
			nr_seq_caixa_od_w,
			cd_conta_contabil_w,
			cd_centro_custo_w,
			nr_seq_nota_fiscal_w,
			nr_interno_conta_w,
			nr_documento_w,
			ds_historico_w,
			cd_tipo_recebimento_w,
			cd_tipo_baixa_cpa_w,
			nr_seq_cheque_w,
			nr_seq_conv_receb_w,
			nr_seq_deposito_w,
			nr_seq_banco_escrit_w,
			nr_lote_contabil_w,
			nr_adiant_pago_w,
			ie_conciliacao_w,
			nr_seq_cheque_cp_w,
			cd_historico_w,
			nr_bordero_rec_w,
			nr_seq_movto_cartao_w,
			nr_seq_motivo_dev_w,
			dt_conferencia_w
		from	movto_trans_financ
		where	nr_sequencia	= nr_seq_movto_w;

		--  ATENcaO !!! NaO CHAMAR ATUALIZAR_TRANSACAO_FINANCEIRA NESTE INSERT POIS A TRANSACAO Ja FOI ATUALIZADO NA TRANSAcaO DE ORIGEM
		insert	into movto_trans_financ(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nr_seq_banco,
			dt_transacao,
			nr_seq_trans_financ,
			vl_transacao,
			cd_pessoa_fisica,
			cd_cgc,
			nr_seq_titulo_pagar,
			nr_seq_titulo_receber,
			nr_bordero,
			nr_adiantamento,
			nr_seq_banco_od,
			nr_seq_caixa_od,
			cd_conta_contabil,
			cd_centro_custo,
			nr_seq_nota_fiscal,
			nr_interno_conta,
			nr_documento,
			ds_historico,
			cd_tipo_recebimento,
			cd_tipo_baixa_cpa,
			nr_seq_cheque,
			nr_seq_conv_receb,
			nr_seq_deposito,
			nr_seq_banco_escrit,
			nr_lote_contabil,
			nr_adiant_pago,
			ie_conciliacao,
			nr_seq_cheque_cp,
			ie_origem_lancamento,
			cd_historico,
			nr_bordero_rec,
			nr_seq_movto_cartao,
			nr_seq_motivo_dev,
			dt_conferencia)
		VALUES (nr_sequencia_w,
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_banco_od_w,
			dt_transacao_w,
			nr_seq_trans_financ_w,
			vl_transacao_w,
			cd_pessoa_fisica_w,
			cd_cgc_w,
			nr_seq_titulo_pagar_w,
			nr_seq_titulo_receber_w,
			nr_bordero_w,
			nr_adiantamento_w,
			nr_seq_banco_od_w,
			nr_seq_caixa_od_w,
			cd_conta_contabil_w,
			cd_centro_custo_w,
			nr_seq_nota_fiscal_w,
			nr_interno_conta_w,
			nr_documento_w,
			ds_historico_w,
			cd_tipo_recebimento_w,
			cd_tipo_baixa_cpa_w,
			nr_seq_cheque_w,
			nr_seq_conv_receb_w,
			nr_seq_deposito_w,
			nr_seq_banco_escrit_w,
			nr_lote_contabil_w,
			nr_adiant_pago_w,
			ie_conciliacao_w,
			nr_seq_cheque_cp_w,
			'T',
			cd_historico_w,
			nr_bordero_rec_w,
			nr_seq_movto_cartao_w,
			nr_seq_motivo_dev_w,
			dt_conferencia_w);
		--  ATENcaO !!! NaO CHAMAR ATUALIZAR_TRANSACAO_FINANCEIRA NESTE INSERT POIS A TRANSACAO Ja FOI ATUALIZADO NA TRANSAcaO DE ORIGEM
	end if;
	
	/* Francisco - OS 119268 - 13/03/2009 */

	if (nr_seq_trans_banco_w IS NOT NULL AND nr_seq_trans_banco_w::text <> '') and (nr_seq_banco_od_w IS NOT NULL AND nr_seq_banco_od_w::text <> '') then

		select	nextval('movto_trans_financ_seq')
		into STRICT	nr_sequencia_w
		;

		--  ATENcaO !!! NaO CHAMAR ATUALIZAR_TRANSACAO_FINANCEIRA NESTE INSERT POIS A TRANSACAO Ja FOI ATUALIZADO NA TRANSAcaO DE ORIGEM
		insert	into movto_trans_financ(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nr_seq_banco,
			dt_transacao,
			nr_seq_trans_financ,
			vl_transacao,
			cd_pessoa_fisica,
			cd_cgc,
			nr_seq_titulo_pagar,
			nr_seq_titulo_receber,
			nr_bordero,
			nr_adiantamento,
			nr_seq_banco_od,
			nr_seq_caixa_od,
			cd_conta_contabil,
			cd_centro_custo,
			nr_seq_nota_fiscal,
			nr_interno_conta,
			nr_documento,
			ds_historico,
			cd_tipo_recebimento,
			cd_tipo_baixa_cpa,
			nr_seq_cheque,
			nr_seq_conv_receb,
			nr_seq_deposito,
			nr_seq_banco_escrit,
			nr_lote_contabil,
			nr_adiant_pago,
			ie_conciliacao,
			nr_seq_cheque_cp,
			ie_origem_lancamento,
			cd_historico,
			nr_bordero_rec,
			nr_seq_movto_cartao,
			nr_seq_motivo_dev,
			dt_conferencia)
		SELECT	nr_sequencia_w,
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_banco_od,
			dt_transacao,
			nr_seq_trans_banco_w,
			vl_transacao,
			cd_pessoa_fisica,
			cd_cgc,
			nr_seq_titulo_pagar,
			nr_seq_titulo_receber,
			nr_bordero,
			nr_adiantamento,
			nr_seq_banco_od,
			nr_seq_caixa_od,
			cd_conta_contabil,
			cd_centro_custo,
			nr_seq_nota_fiscal,
			nr_interno_conta,
			nr_documento,
			ds_historico,
			cd_tipo_recebimento,
			cd_tipo_baixa_cpa,
			nr_seq_cheque,
			nr_seq_conv_receb,
			nr_seq_deposito,
			nr_seq_banco_escrit,
			nr_lote_contabil,
			nr_adiant_pago,
			ie_conciliacao,
			nr_seq_cheque_cp,
			'T',
			cd_historico,
			nr_bordero_rec,
			nr_seq_movto_cartao,
			nr_seq_motivo_dev,
			dt_conferencia
		from	movto_trans_financ
		where	nr_sequencia	= nr_seq_movto_w;
		--  ATENcaO !!! NaO CHAMAR ATUALIZAR_TRANSACAO_FINANCEIRA NESTE INSERT POIS A TRANSACAO Ja FOI ATUALIZADO NA TRANSAcaO DE ORIGEM
	end if;

	if (ie_saldo_dep_cheque_w = 'S') and (nr_seq_deposito_w IS NOT NULL AND nr_seq_deposito_w::text <> '') then

		select	coalesce(sum(CASE WHEN obter_se_cheque_cr_avista(a.nr_seq_cheque)='S' THEN a.vl_cheque  ELSE 0 END ),0),
			coalesce(sum(CASE WHEN obter_se_cheque_cr_avista(a.nr_seq_cheque)='N' THEN a.vl_cheque  ELSE 0 END ),0)
		into STRICT	vl_cheque_vista_dep_w,
			vl_cheque_pre_dep_w
		from	deposito_cheque b,
			cheque_cr a
		where	a.nr_seq_cheque		= b.nr_seq_cheque
		and	b.nr_seq_deposito	= nr_seq_deposito_w;

		if (sign(vl_transacao_w) < 0) then
			vl_cheque_pre_dep_w	:= vl_cheque_pre_dep_w * -1;
			vl_cheque_vista_dep_w	:= vl_cheque_vista_dep_w * -1;
		end if;

		if (ie_saldo_caixa_w = 'S') then
			vl_cheque_pre_w		:= vl_cheque_pre_w + vl_cheque_pre_dep_w * -1;
			vl_cheque_vista_w	:= vl_cheque_vista_w + vl_cheque_vista_dep_w * -1;
		elsif (ie_saldo_caixa_w = 'E') then
			vl_cheque_pre_w		:= vl_cheque_pre_w + vl_cheque_pre_dep_w;
			vl_cheque_vista_w	:= vl_cheque_vista_w + vl_cheque_vista_dep_w;
		end if;

		select	coalesce(max(vl_especie),0)
		into STRICT	vl_especie_dep_w
		from	deposito
		where	nr_sequencia	= nr_seq_deposito_w;

		if (sign(vl_transacao_w) < 0) then
			vl_especie_dep_w	:= vl_especie_dep_w * -1;
		end if;

		if (ie_saldo_caixa_w = 'S') then
			vl_especie_w		:= vl_especie_w + vl_especie_dep_w * -1;
		elsif (ie_saldo_caixa_w = 'E') then
			vl_especie_w		:= vl_especie_w + vl_especie_dep_w;
		end if;
	end if;
	
	-- dsantos em 19/05/2010 OS 217832 begin
	
	ie_considera_vl_despesa_w := obter_param_usuario(813, 206, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_considera_vl_despesa_w);	


	if (ie_caixa_w = 'T') and (coalesce(ie_considera_vl_despesa_w,'S') = 'S') then


		OPEN c02;
		LOOP
		FETCH c02 into
			nr_seq_movto_cartao_transf_w,
			nr_seq_movto_tf_cartao_w; --OS 1908016 se nao tiver movimento de cartao vinculado ao movimento de transferencia de entrada, vamos pegar a seq desse movimento e procurar pela transacao  de saida no caixa origem que originou essa entrada, pois nessa de saida do caixa de origem estara o vinculo com a TF do cartao
		EXIT WHEN NOT FOUND; /* apply on c02 */

			if (nr_seq_movto_tf_cartao_w IS NOT NULL AND nr_seq_movto_tf_cartao_w::text <> '') and ( coalesce(nr_seq_movto_cartao_transf_w::text, '') = '') then
				--OS 1908016 Com a seq do movimento de saida no caixa origem, podemos pegar o movto de cartao da TF que gerou essa transferencia de saida.

				/*select  max(a.nr_seq_movto_cartao) 
				into	nr_seq_movto_cartao_transf_w
				from	movto_trans_financ a
				where	a.nr_seq_movto_transf = nr_seq_movto_tf_cartao_w;*/
				open C03;
				loop
				fetch C03 into	
					nr_seq_movto_cartao_transf_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin
					if (coalesce(ds_lista_movto_cartao_w::text, '') = '') then
						ds_lista_movto_cartao_w := nr_seq_movto_cartao_transf_w;
					else
						ds_lista_movto_cartao_w := substr(ds_lista_movto_cartao_w || ' ' || nr_seq_movto_cartao_transf_w,1,1000);
					end if;
					end;
				end loop;
				close C03;	
				
			else
			
				ds_lista_movto_cartao_w := nr_seq_movto_cartao_transf_w;
		
			end if;

			if (nr_seq_movto_cartao_transf_w IS NOT NULL AND nr_seq_movto_cartao_transf_w::text <> '') then

				select	coalesce(sum(a.vl_despesa),0)
				into STRICT	vl_despesa_w
				from	movto_cartao_cr_parcela a,
					movto_cartao_cr b
				
				where	' ' || ds_lista_movto_cartao_w || ' ' like '% ' || b.nr_sequencia || ' %'
				and	b.nr_sequencia	= a.nr_seq_movto;

				if (vl_transacao_w >= 0) then
					if (ie_saldo_caixa_w = 'S') then
						vl_total_desp_w	:= vl_total_desp_w + vl_despesa_w * -1;
					elsif (ie_saldo_caixa_w = 'E') then
						vl_total_desp_w	:= vl_total_desp_w + vl_despesa_w;
					end if;
				else
					if (ie_saldo_caixa_w = 'S') then
						vl_total_desp_w	:= vl_total_desp_w - vl_despesa_w * -1;
					elsif (ie_saldo_caixa_w = 'E') then
						vl_total_desp_w	:= vl_total_desp_w - vl_despesa_w;
					end if;
				end if;
			

			end if;
		
		end loop;
		close c02;

	end if;

	-- dsantos em 19/05/2010 OS 217832 end


	/* Francisco - 09/06/07 - Saldos de cheque pre e cartao credito */
	
	if (ie_caixa_w in ('A','M')) then
		if (ie_cheque_pre_w = 'S') then
			if (ie_saldo_caixa_w = 'S') then
				vl_cheque_pre_w	:= vl_cheque_pre_w - vl_transacao_w;
			else
				vl_cheque_pre_w	:= vl_cheque_pre_w + vl_transacao_w;
			end if;
		elsif (ie_cartao_cr_w	= 'S') or (ie_cartao_debito_w = 'S') then
			if (ie_saldo_caixa_w = 'S') then
				vl_cartao_cr_w	:= vl_cartao_cr_w - vl_transacao_w;
			else
				vl_cartao_cr_w	:= vl_cartao_cr_w + vl_transacao_w;
			end if;
		elsif (ie_cheque_vista_w = 'S') then
			if (ie_saldo_caixa_w = 'S') then
				vl_cheque_vista_w	:= vl_cheque_vista_w - vl_transacao_w;
			else
				vl_cheque_vista_w	:= vl_cheque_vista_w + vl_transacao_w;
			end if;
		elsif (ie_especie_w = 'S') then
			if (ie_saldo_caixa_w = 'S') then
				vl_especie_w	:= vl_especie_w - vl_transacao_w;
			else
				vl_especie_w	:= vl_especie_w + vl_transacao_w;
			end if;	
		elsif (ie_deposito_direto_w = 'S') then
			if (ie_saldo_caixa_w = 'S') then
				vl_deposito_direto_w := vl_deposito_direto_w - vl_transacao_w;
			else
				vl_deposito_direto_w := vl_deposito_direto_w + vl_transacao_w;
			end if;	
		end if;

		if (nr_seq_movto_cartao_cr_w IS NOT NULL AND nr_seq_movto_cartao_cr_w::text <> '') then
			select	coalesce(sum(a.vl_despesa),0)
			into STRICT	vl_despesa_w
			from	movto_cartao_cr_parcela a,
				movto_cartao_cr b
			where	b.nr_sequencia	= nr_seq_movto_cartao_cr_w
			and	b.nr_sequencia	= a.nr_seq_movto;
			
      if (vl_transacao_w >= 0) then
        if (ie_saldo_caixa_w = 'S') then
          vl_total_desp_w	:= vl_total_desp_w + vl_despesa_w * -1;
        elsif (ie_saldo_caixa_w = 'E') then
          vl_total_desp_w	:= vl_total_desp_w + vl_despesa_w;
        end if;
      else
        if (ie_saldo_caixa_w = 'S') then
          vl_total_desp_w	:= vl_total_desp_w - vl_despesa_w * -1;
        elsif (ie_saldo_caixa_w = 'E') then
          vl_total_desp_w	:= vl_total_desp_w - vl_despesa_w;
        end if;
      end if;
		end if;
		
		if (nr_seq_lote_cartao_w IS NOT NULL AND nr_seq_lote_cartao_w::text <> '') then
			select	coalesce(sum(a.vl_despesa),0)
			into STRICT	vl_despesa_w
			from	movto_cartao_cr_parcela a
			where	a.nr_seq_lote	= nr_seq_lote_cartao_w;
			
				if (vl_transacao_w >= 0) then
					if (ie_saldo_caixa_w = 'S') then
						vl_total_desp_w	:= vl_total_desp_w + vl_despesa_w * -1;
					elsif (ie_saldo_caixa_w = 'E') then
						vl_total_desp_w	:= vl_total_desp_w + vl_despesa_w;
					end if;
				else
					if (ie_saldo_caixa_w = 'S') then
						vl_total_desp_w	:= vl_total_desp_w - vl_despesa_w * -1;
					elsif (ie_saldo_caixa_w = 'E') then
						vl_total_desp_w	:= vl_total_desp_w - vl_despesa_w;
					end if;
				end if;
		end if;
		
	elsif (ie_caixa_w = 'T') and (coalesce(nr_seq_deposito_w::text, '') = '' or ie_saldo_dep_cheque_w = 'N') then /* Francisco - 23/04/2008 - Deposito eh tratado separado */
		
		if (ie_saldo_caixa_w = 'S') then
			
			select	max(nr_sequencia)
			into STRICT	nr_seq_movto_origem_w
			from	movto_trans_financ
			where	nr_seq_movto_transf	= nr_seq_movto_w;

			if (nr_seq_movto_origem_w IS NOT NULL AND nr_seq_movto_origem_w::text <> '') then

				select	CASE WHEN b.ie_cheque_cr='P' THEN 'S'  ELSE 'N' END ,
					CASE WHEN b.ie_cartao_cr='S' THEN 'S'  ELSE 'N' END ,
					CASE WHEN b.ie_cartao_debito='S' THEN 'S'  ELSE 'N' END ,
					CASE WHEN b.ie_cheque_cr='V' THEN 'S'  ELSE 'N' END ,
					CASE WHEN b.ie_especie='S' THEN 'S'  ELSE 'N' END ,
					CASE WHEN b.ie_deposito_direto='S' THEN 'S'  ELSE 'N' END
				into STRICT	ie_cheque_pre_w,
					ie_cartao_cr_w,
					ie_cartao_debito_w,
					ie_cheque_vista_w,
					ie_especie_w,
					ie_deposito_direto_w
				from	transacao_financeira b,
					movto_trans_financ a
				where	a.nr_seq_trans_financ	= b.nr_sequencia
				and	a.nr_sequencia		= nr_seq_movto_origem_w;

			end if;

			if (ie_cheque_pre_w = 'S') then
				vl_cheque_pre_w		:= vl_cheque_pre_w + (vl_transacao_w * -1);	
			elsif (ie_cartao_cr_w = 'S') or (ie_cartao_debito_w = 'S') then
				vl_cartao_cr_w		:= vl_cartao_cr_w + (vl_transacao_w * -1);
			elsif (ie_cheque_vista_w = 'S') then
				vl_cheque_vista_w	:= vl_cheque_vista_w + (vl_transacao_w * -1);
			elsif (ie_especie_w = 'S') then
				vl_especie_w		:= vl_especie_w + (vl_transacao_w * -1);
			elsif (ie_deposito_direto_w = 'S') then
				vl_deposito_direto_w	:= vl_deposito_direto_w + (vl_transacao_w * -1);
			end if;
			
		elsif (ie_saldo_caixa_w	= 'E') then
		
			select	max(nr_sequencia)
			into STRICT	nr_seq_movto_transf_w
			from	movto_trans_financ
			where	nr_seq_movto_transf	= nr_seq_movto_w;

			if (nr_seq_movto_transf_w IS NOT NULL AND nr_seq_movto_transf_w::text <> '') then
				select	max(nr_sequencia)
				into STRICT	nr_seq_movto_origem_w
				from	movto_trans_financ
				where	nr_seq_movto_transf	= nr_seq_movto_transf_w;
			end if;

			if (nr_seq_movto_origem_w IS NOT NULL AND nr_seq_movto_origem_w::text <> '') then

				select	CASE WHEN b.ie_cheque_cr='P' THEN 'S'  ELSE 'N' END ,
					CASE WHEN b.ie_cartao_cr='S' THEN 'S'  ELSE 'N' END ,
					CASE WHEN b.ie_cartao_debito='S' THEN 'S'  ELSE 'N' END ,
					CASE WHEN b.ie_cheque_cr='V' THEN 'S'  ELSE 'N' END ,
					CASE WHEN b.ie_especie='S' THEN 'S'  ELSE 'N' END ,
					CASE WHEN b.ie_deposito_direto='S' THEN 'S'  ELSE 'N' END
				into STRICT	ie_cheque_pre_w,
					ie_cartao_cr_w,
					ie_cartao_debito_w,
					ie_cheque_vista_w,
					ie_especie_w,
					ie_deposito_direto_w
				from	transacao_financeira b,
					movto_trans_financ a
				where	a.nr_seq_trans_financ	= b.nr_sequencia
				and	a.nr_sequencia		= nr_seq_movto_origem_w;
			end if;

			if (ie_cheque_pre_w = 'S') then
				vl_cheque_pre_w		:= vl_cheque_pre_w + vl_transacao_w;	
			elsif (ie_cartao_cr_w = 'S') or (ie_cartao_debito_w = 'S') then
				vl_cartao_cr_w		:= vl_cartao_cr_w + vl_transacao_w;
			elsif (ie_cheque_vista_w = 'S') then
				vl_cheque_vista_w 	:= vl_cheque_vista_w + vl_transacao_w;
			elsif (ie_especie_w = 'S') then
				vl_especie_w		:= vl_especie_w + vl_transacao_w;
			elsif (ie_deposito_direto_w = 'S') then
				vl_deposito_direto_w	:= vl_deposito_direto_w + vl_transacao_w;
			end if;	
		end if;	
	end if;
	end;
end loop;
close c01;

if (ie_saldo_negativo_w = 'N') then
	
	select	vl_saldo,
		coalesce(vl_cheque_vista_atual,0),
		coalesce(vl_cheque_pre_atual,0),
		coalesce(vl_cartao_cr_atual,0),
		coalesce(vl_especie_atual,0)
	into STRICT	vl_saldo_atual_w,
		vl_saldo_avista_w,
		vl_saldo_pre_w,
		vl_saldo_cartao_w,
		vl_saldo_especie_w
	from	caixa_saldo_diario
	where	trunc(dt_saldo,'dd')	= trunc(dt_referencia_saldo_diario_w,'dd')
	and	nr_seq_caixa		= nr_seq_caixa_p;

	if	((vl_saldo_atual_w - vl_atualizado_w) < 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(220480,'VL_SALDO_ATUAL_W='||vl_saldo_atual_w||';VL_SALDO_FECHAMENTO_W='||(vl_saldo_atual_w - vl_atualizado_w));
	end if;
	
	if (coalesce(ie_saldo_neg_cheque_w,'N') = 'S') then
		if	((vl_saldo_avista_w + coalesce(vl_cheque_vista_w,0)) < 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(354262,'VL_SALDO_ATUAL_W='||vl_saldo_avista_w||';VL_SALDO_FECHAMENTO_W='||(vl_saldo_avista_w + coalesce(vl_cheque_vista_w,0)));
		end if;
		
		if	((vl_saldo_pre_w + coalesce(vl_cheque_pre_w,0)) < 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(354262,'VL_SALDO_ATUAL_W='||vl_saldo_pre_w||';VL_SALDO_FECHAMENTO_W='||(vl_saldo_pre_w + coalesce(vl_cheque_pre_w,0)));
		end if;
	end if;
	
	if (coalesce(ie_saldo_neg_cartao_w,'N') = 'S') then
		if	((vl_saldo_cartao_w + coalesce(vl_cartao_cr_w,0)) < 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1116257,'VL_SALDO_ATUAL_W='||vl_saldo_cartao_w||';VL_SALDO_FECHAMENTO_W='||(vl_saldo_cartao_w + coalesce(vl_cartao_cr_w,0)));
		end if;
	end if;
	
	if (coalesce(ie_saldo_neg_especie_w,'N') = 'S') then
		if	((vl_saldo_especie_w + coalesce(vl_especie_w,0)) < 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1116256,'VL_SALDO_ATUAL_W='||vl_saldo_especie_w||';VL_SALDO_FECHAMENTO_W='||(vl_saldo_especie_w + coalesce(vl_especie_w,0)));
		end if;
	end if;	
	
end if;

update	caixa_saldo_diario
set	vl_saldo				= vl_saldo - vl_atualizado_w,
	vl_cheque_pre_atual		= coalesce(vl_cheque_pre_atual,0) + coalesce(vl_cheque_pre_w,0),
	vl_cartao_cr_atual			= coalesce(vl_cartao_cr_atual,0) + coalesce(vl_cartao_cr_w,0),
	vl_cheque_vista_atual		= coalesce(vl_cheque_vista_atual,0) + coalesce(vl_cheque_vista_w,0),
	vl_especie_atual			= coalesce(vl_especie_atual,0) + coalesce(vl_especie_w,0),
	vl_saldo_sem_desp_cartao		= coalesce(vl_saldo_sem_desp_cartao,vl_saldo) - vl_atualizado_w - vl_total_desp_w,
	vl_deposito_direto_atual		= coalesce(vl_deposito_direto_atual,0) + coalesce(vl_deposito_direto_w,0)
where	trunc(dt_saldo,'dd')		= trunc(dt_referencia_saldo_diario_w,'dd')
and	nr_seq_caixa			= nr_seq_caixa_p;

update	caixa_saldo_diario
set	vl_saldo_avista	= vl_saldo - coalesce(vl_cheque_pre_atual,0) - coalesce(vl_cartao_cr_atual,0) - coalesce(vl_deposito_direto_w,0)
where	trunc(dt_saldo,'dd')		= trunc(dt_referencia_saldo_diario_w,'dd')
and	nr_seq_caixa			= nr_seq_caixa_p;

begin
select	max(nr_sequencia)
into STRICT	nr_seq_saldo_caixa_w
from	caixa_saldo_diario
where	trunc(dt_saldo,'dd')		= trunc(dt_referencia_saldo_diario_w,'dd')
and	nr_seq_caixa			= nr_seq_caixa_p;
end;

/* Projeto Multimoeda - Caso o caixa permita moeda estrangeira, chama a procedure para atualizar o saldo em moeda estrangeira.
	Este processo foi saperado para nao gerar impacto no desempenho da rotina atual, nao realizando consultas sem necessidade
	quando o caixa nao possuir saldo em moeda estrangeira. */
if (coalesce(ie_caixa_estrang_w,'N') = 'S') then
	CALL atualizar_saldo_caixa_estrang(cd_estabelecimento_p,
					nr_seq_lote_p,
					nr_seq_caixa_p,
					nr_seq_saldo_caixa_w,
					nm_usuario_p);
end if;

update	movto_trans_financ
set	dt_fechamento_lote	= clock_timestamp()
where	nr_seq_lote		= nr_seq_lote_p
and	nr_seq_caixa		= nr_seq_caixa_p;

ie_saldo_retroativo_w		:= coalesce(obter_valor_param_usuario(813,160,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p),'N');

if (ie_saldo_retroativo_w = 'S') then
	begin
	CALL Recalcular_Caixa_Saldo_Diario(nr_seq_saldo_caixa_w, 'S', 'N');
	end;
end if;

ie_alterar_pagador_eup_w := obter_param_usuario(813, 162, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_alterar_pagador_eup_w);

if (ie_alterar_pagador_eup_w = 'S') then
	select	max(a.cd_pessoa_fisica), /*buscar PF, PF e titulo do lote*/
		max(a.cd_cgc),
		max(a.nr_seq_titulo_receber)
	into STRICT	cd_pessoa_fisica_w,
		cd_cgc_w,
		nr_seq_titulo_receber_w
	from	movto_trans_financ a
	where	a.nr_seq_lote		= nr_seq_lote_p
	and	a.nr_seq_caixa		= nr_seq_caixa_p;
	if (nr_seq_titulo_receber_w IS NOT NULL AND nr_seq_titulo_receber_w::text <> '') then
	
		select	nr_interno_conta, /*buscar nr_atendimento e nr_interno_conta do titulo do lote*/
			nr_atendimento
		into STRICT	nr_interno_conta_w,
			nr_atendimento_w
		from	titulo_receber a
		where 	a.nr_titulo = nr_seq_titulo_receber_w;
		
		if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then

		delete
		from	atendimento_pagador
		where	nr_atendimento = nr_atendimento_w;
				
		insert into atendimento_pagador(nr_sequencia,
						 dt_atualizacao,
						 nm_usuario,
						 dt_atualizacao_nrec,
						 nm_usuario_nrec,
						 cd_pessoa_fisica,
						 cd_cgc,
						 nr_atendimento,
						 ds_acordo)
		values (nextval('atendimento_pagador_seq'),
						 clock_timestamp(),
						 nm_usuario_p,
						 clock_timestamp(),
						 nm_usuario_p,
						 cd_pessoa_fisica_w,
						 cd_cgc_w,
						 nr_atendimento_w,
						 '');
				
		end if;
	end if;

end if;
	--Francisco 10/01/07
if (ie_commit_p = 'S') then
	commit;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_saldo_caixa ( cd_estabelecimento_p bigint, nr_seq_lote_p bigint, nr_seq_caixa_p bigint, nm_usuario_p text, ie_commit_p text) FROM PUBLIC;

