-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE update_billable_procedure (nr_interno_conta_p bigint default 0, cd_convenio_p bigint DEFAULT NULL, cd_categoria_p text DEFAULT NULL, cd_autorizacao_p text DEFAULT NULL, nm_usuario_p text DEFAULT NULL, cd_plano_convenio_p text DEFAULT NULL, dt_validade_carteira_p timestamp DEFAULT NULL, cd_usuario_convenio_p text DEFAULT NULL, cd_senha_p text DEFAULT NULL, ie_todas_contas_atend_p text default 'S', nr_seq_cobertura_p bigint DEFAULT NULL, cd_tipo_acomodacao_p bigint DEFAULT NULL, nr_atendimento_p bigint DEFAULT NULL, cd_empresa_p bigint default null, nr_seq_categoria_iva_p bigint default null) AS $body$
DECLARE


dt_atualizacao_w	       		 timestamp := clock_timestamp();
qt_categoria_w			integer;
nr_atendimento_w		conta_paciente.nr_atendimento%type;
ie_tipo_conv_origem_w		convenio.ie_tipo_convenio%type;
ie_tipo_conv_dest_w		convenio.ie_tipo_convenio%type;
cont_w				smallint;
qt_reg_w				bigint;
nr_sequencia_w			procedimento_paciente.nr_sequencia%type;
cd_procedimento_w		bigint;
cd_estabelecimento_w		conta_paciente.cd_estabelecimento%type;
dt_procedimento_w		procedimento_paciente.dt_procedimento%type;
nr_seq_proc_interno_w		procedimento_paciente.nr_seq_proc_interno%type;
ie_origem_proced_w		bigint;
ie_tipo_convenio_w			smallint;
nr_prescricao_w			procedimento_paciente.nr_prescricao%type;
cd_convenio_origem_w		conta_paciente.cd_convenio_parametro%type;
cd_categoria_origem_w		conta_paciente.cd_categoria_parametro%type;
ds_motivo_w			varchar(2000);
nr_seq_alerta_w			bigint;
ie_enviar_alerta_w			varchar(1);
ie_enviar_email_w			varchar(1);
ds_email_w			varchar(255);
ds_assunto_w			varchar(255);
ds_email_origem_w			varchar(255);
qt_plano_lib_categ_w		bigint;
cd_plano_w			atend_categoria_convenio.cd_plano_convenio%type;
cd_estab_atend_w		atendimento_paciente.cd_estabelecimento%type;
dt_entrada_w			atendimento_paciente.dt_entrada%type;
nr_interno_conta_w		conta_paciente.nr_interno_conta%type;
nr_interno_conta_ww		conta_paciente.nr_interno_conta%type;
cd_proced_conta_w		procedimento_paciente.cd_procedimento%type;
ie_origem_conta_w		procedimento_paciente.ie_origem_proced%type;
ie_gerar_autor_conv_w		varchar(10) := 'N';
ie_atualiza_doc_part_w		varchar(10) := 'N';
nr_seq_item_w			procedimento_paciente.nr_sequencia%type;
ie_proc_mat_w			varchar(10);
nr_seq_partic_w			procedimento_paciente.nr_sequencia%type;
ie_consiste_regra_lib_setor_w	varchar(1);
ie_atualiza_valor_gestao_w	varchar(1);
cd_empresa_cat_w		atend_categoria_convenio.cd_empresa%type;
nr_seq_classificacao_w		atendimento_paciente.nr_seq_classificacao%type;
ie_clinica_w			atendimento_paciente.ie_clinica%type;
cd_procedencia_w		atendimento_paciente.cd_procedencia%type;
nr_seq_tipo_acidente_w		atendimento_paciente.nr_seq_tipo_acidente%type;
nr_seq_queixa_w			atendimento_paciente.nr_seq_queixa%type;
nr_atendimento_ant_w		atendimento_paciente.nr_atendimento%type;
ie_tipo_convenio_ant_w		atendimento_paciente.ie_tipo_convenio%type;
nr_seq_queixa_ant_w		atendimento_paciente.nr_seq_queixa%type;
cd_pessoa_fisica_w		atendimento_paciente.cd_pessoa_fisica%type;
qt_idade_w			bigint;
ie_tipo_atendimento_w		atendimento_paciente.ie_tipo_atendimento%type;
ds_mensagem_w			varchar(255);
ie_bloq_atendimento_w		varchar(1);
cd_medico_w			atendimento_paciente.cd_medico_resp%type;
ie_tipo_alerta_w		bigint;
vl_anterior_w			double precision := 0;
vl_atual_w			double precision := 0;
qt_conta_w			bigint;
ie_altera_item_repasse_w	varchar(1) := 'S';
qt_proc_mat_repasse_w		bigint := 0;

cd_setor_item_w			procedimento_paciente.cd_setor_atendimento%type;
dt_conta_w			procedimento_paciente.dt_conta%type;
nr_seq_proc_w procedimento_paciente.nr_sequencia%type;
nr_seq_material_w material_atend_paciente.nr_sequencia%type;

c01 CURSOR FOR
	SELECT	nr_sequencia,
		dt_procedimento,
		nr_seq_proc_interno,
		nr_prescricao,
		cd_procedimento,
		ie_origem_proced,
		cd_setor_atendimento,
		dt_conta
	from	procedimento_paciente
	where	nr_interno_conta	= nr_interno_conta_p;

c02 CURSOR FOR
	SELECT	coalesce(ds_email_envio,obter_compl_pf(cd_pessoa_fisica,2,'M'))
	from	regra_aviso_troca_convenio
	where	ie_situacao 	= 'A';

c03 CURSOR FOR
	SELECT 	nr_interno_conta
	from	conta_paciente
	where	nr_atendimento = nr_atendimento_p
	and	nr_interno_conta <> nr_interno_conta_p
	and	ie_status_acerto = 1;

c04 CURSOR FOR
	SELECT	1 ie_proc_mat,
		nr_sequencia
	from	procedimento_paciente
	where	nr_interno_conta = nr_interno_conta_p
	
union

	SELECT	2,
		nr_sequencia
	from	material_atend_paciente
	where	nr_interno_conta = nr_interno_conta_p;

c05 CURSOR FOR
	SELECT	nr_sequencia
	from	procedimento_paciente
	where	nr_interno_conta	= nr_interno_conta_ww;


BEGIN

	select	count(*)
	into STRICT	cont_w
	from	atendimento_pacote b,
		procedimento_paciente a
	where	a.nr_sequencia	= b.nr_seq_proc_origem
	and	a.nr_interno_conta	= nr_interno_conta_p;
	
	
		select	
			max(coalesce(a.nr_atendimento,0)),
			max(coalesce(b.ie_tipo_convenio,0)),
			max(coalesce(a.cd_estabelecimento,0)),
			max(coalesce(a.cd_convenio_parametro,0)),
			max(coalesce(a.cd_categoria_parametro,0))
		into STRICT	nr_atendimento_w,
			ie_tipo_conv_origem_w,
			cd_estabelecimento_w,
			cd_convenio_origem_w,
			cd_categoria_origem_w
		from	convenio b,
			conta_paciente a
		where	a.nr_interno_conta	= nr_interno_conta_p
		and	b.cd_convenio		= a.cd_convenio_parametro;
		
	
	
	ie_gerar_autor_conv_w		:= coalesce(obter_valor_param_usuario(67,551,obter_perfil_ativo,nm_usuario_p,coalesce(cd_estabelecimento_w,0)),'N');
	ie_consiste_regra_lib_setor_w	:= coalesce(obter_valor_param_usuario(67,603,obter_perfil_ativo,nm_usuario_p,coalesce(cd_estabelecimento_w,0)),'N');
	ie_atualiza_valor_gestao_w	:= coalesce(obter_valor_param_usuario(67,621,obter_perfil_ativo,nm_usuario_p,coalesce(cd_estabelecimento_w,0)),'N');

	select	max(coalesce(ie_tipo_convenio,0))
	into STRICT	ie_tipo_conv_dest_w
	from	convenio
	where	cd_convenio		= cd_convenio_p;


	if (ie_consiste_regra_lib_setor_w = 'S')
		--and (ie_altera_atendimento_p = 'S') 
		then

			select	max(cd_empresa)
			into STRICT	cd_empresa_cat_w
			from	atend_categoria_convenio
			where	nr_seq_interno = obter_atecaco_atendimento(nr_atendimento_w);

			select	max(nr_seq_classificacao),
				max(ie_clinica),
				max(cd_procedencia),
				max(nr_seq_tipo_acidente),
				max(nr_seq_queixa),
				max(cd_pessoa_fisica),
				max(ie_tipo_atendimento),
				max(cd_medico_resp)
			into STRICT	nr_seq_classificacao_w,
				ie_clinica_w,
				cd_procedencia_w,
				nr_seq_tipo_acidente_w,
				nr_seq_queixa_w,
				cd_pessoa_fisica_w,
				ie_tipo_atendimento_w,
				cd_medico_w
			from	atendimento_paciente
			where	nr_atendimento = nr_atendimento_w;

			select	max(b.nr_atendimento)
			into STRICT	nr_atendimento_ant_w
			from	atendimento_paciente b
			where	nr_atendimento < nr_atendimento_w;

			begin
			select	a.ie_tipo_convenio,
					a.nr_seq_queixa
			into STRICT	ie_tipo_convenio_ant_w,
					nr_seq_queixa_ant_w
			from	atendimento_paciente a
			where	a.nr_atendimento = nr_atendimento_ant_w;
			exception
			when others then
				ie_tipo_convenio_ant_w := null;
				nr_seq_queixa_ant_w := null;
			end;

			qt_idade_w := substr(obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'A'), 1, 3);

			SELECT * FROM Obter_Se_Lib_Setor_Conv(
					cd_estabelecimento_w, cd_convenio_p, cd_categoria_p, ie_tipo_atendimento_w, 0, cd_plano_convenio_p, nr_seq_classificacao_w, ds_mensagem_w, ie_bloq_atendimento_w, ie_clinica_w, coalesce(cd_empresa_p, cd_empresa_cat_w), cd_procedencia_w, nr_seq_cobertura_p, nr_seq_tipo_acidente_w, cd_tipo_acomodacao_p, cd_medico_w, qt_idade_w, ie_tipo_convenio_ant_w, nr_seq_queixa_w, nr_seq_queixa_ant_w, clock_timestamp(), cd_pessoa_fisica_w) INTO STRICT ds_mensagem_w, ie_bloq_atendimento_w;

			if (ie_bloq_atendimento_w = 'B') then
				if (coalesce(ds_mensagem_w::text, '') = '') then
					CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(150769);
				else
					--#@DS_MENSAGEM#@
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(175911, 'DS_MENSAGEM='||ds_mensagem_w);
				end if;
			end if;
	end if;

	nr_interno_conta_ww := nr_interno_conta_p;
	
	/*
	if	(dt_inicial_p is not null) then
		desdobrar_conta_paciente(nr_interno_conta_p,dt_inicial_p,null,null,null,nm_usuario_p,nr_interno_conta_ww,null);
	end if;
	*/
	/*  atualizar a conta do paciente */

	begin
			update conta_paciente
			set	cd_convenio_parametro	= cd_convenio_p,
				cd_autorizacao			= cd_autorizacao_p,
				cd_categoria_parametro	= cd_categoria_p,
				dt_atualizacao			= dt_atualizacao_w,
				nm_usuario				= nm_usuario_p,
				cd_convenio_calculo		= cd_convenio_p,
				cd_categoria_calculo	= cd_categoria_p,
				nr_seq_categoria_iva	= nr_seq_categoria_iva_p
			where nr_interno_conta		= nr_interno_conta_ww;
	
	end;

	/*  atualizar os procedimentos */

	begin
		update procedimento_paciente
		set	cd_convenio     	= cd_convenio_p,
			cd_categoria    	= cd_categoria_p,
			nr_doc_convenio 	= coalesce(cd_autorizacao_p, nr_doc_convenio),
			cd_senha			= coalesce(cd_senha_p,cd_senha)
		where nr_interno_conta  = nr_interno_conta_ww;
		
		select max(nr_sequencia) into STRICT nr_seq_proc_w
		from procedimento_paciente
		where nr_interno_conta  	= nr_interno_conta_ww;
	
		CALL atualiza_preco_procedimento(nr_seq_proc_w ,cd_convenio_p,nm_usuario_p);
	
		/* Edgar 28/05/2004 - Trocar os procedimentos do laboratorio conforme o convenio */

		if nr_interno_conta_ww > 0 then
			CALL trocar_convenio_exame_lab(nr_interno_conta_ww, nm_usuario_p);
		end if;
	end;

	/*  atualizar os materiais */

	begin
		update material_atend_paciente
		set	cd_convenio			= cd_convenio_p,
			cd_categoria		= cd_categoria_p,
			nr_doc_convenio		= coalesce(cd_autorizacao_p, nr_doc_convenio),
			cd_senha			= coalesce(cd_senha_p,cd_senha)
		where nr_interno_conta  = nr_interno_conta_ww;
		
		select max(nr_sequencia) into STRICT nr_seq_material_w
		from material_atend_paciente
		where nr_interno_conta  	= nr_interno_conta_ww;
		
		CALL atualiza_preco_material(nr_seq_material_w, nm_usuario_p);
	
	end;

	/* atualizar Gestao de Cirurgias e Gestao de Agenda Cirurgica */

	if (coalesce(ie_atualiza_valor_gestao_w,'N') = 'S') then
	
		CALL atualiza_cat_conv_cirurgia(nr_atendimento_w, cd_convenio_p, cd_categoria_p, nm_usuario_p);
	
		CALL atualiza_cat_conv_agenda(nr_atendimento_w, cd_convenio_p, cd_categoria_p, nm_usuario_p);
	
	end if;

	begin
		open c01;
		loop
		fetch c01 into
			nr_sequencia_w,
			dt_procedimento_w,
			nr_seq_proc_interno_w,
			nr_prescricao_w,
			cd_proced_conta_w,
			ie_origem_conta_w,
			cd_setor_item_w,
			dt_conta_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
				SELECT * FROM obter_proc_tab_interno(	nr_seq_proc_interno_w, nr_prescricao_w, nr_atendimento_w, nr_interno_conta_ww, cd_procedimento_w, ie_origem_proced_w, cd_setor_item_w, dt_conta_w) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
	
				if (cd_procedimento_w <> 0) then
	
					update	procedimento_paciente
					set	cd_procedimento		= cd_procedimento_w,
						ie_origem_proced		= ie_origem_proced_w
					where	nr_sequencia		= nr_sequencia_w;
				end if;
			end;
		end loop;
		close c01;
	end;

	commit;
/*
ds_motivo_w		:= '';
ds_assunto_w		:= '';
ie_enviar_alerta_w	:= nvl(obter_valor_param_usuario(67,245,obter_perfil_ativo,nm_usuario_p,nvl(cd_estabelecimento_w,0)),'N');
ie_enviar_email_w	:= nvl(obter_valor_param_usuario(67,246,obter_perfil_ativo,nm_usuario_p,nvl(cd_estabelecimento_w,0)),'N');
ie_tipo_alerta_w	:= obter_valor_param_usuario(67,685,obter_perfil_ativo,nm_usuario_p,nvl(cd_estabelecimento_w,0));

begin
       Verifica se ie_tipo_alerta_w e uma sequencia valida de TIPO_ALERTA_ATEND
        if (nvl(ie_tipo_alerta_w,0) >0) then 
                select 	nr_sequencia
                into 	ie_tipo_alerta_w
                from   	tipo_alerta_atend
                where  	nr_sequencia = ie_tipo_alerta_w;
        end if;
exception
when others then
	Wheb_mensagem_pck.exibir_mensagem_abort(396481);        
end;
*/
	/*  recalcular a conta do paciente */

	if nr_interno_conta_ww > 0 then
		CALL recalcular_conta_paciente(nr_interno_conta_ww, nm_usuario_p);
	end if;
	
	select	count(1)
	into STRICT	qt_conta_w
	from	conta_paciente
	where	nr_interno_conta = nr_interno_conta_ww;
	
	if (qt_conta_w > 0) then
		vl_atual_w := coalesce(obter_valor_Conta(nr_interno_conta_ww,0),0);
	end if;

/*
if	(ie_enviar_alerta_w	<> 'N') or
	(ie_enviar_email_w	= 'S') then

	ds_motivo_w 	:= Wheb_mensagem_pck.get_Texto(303724); 'Alteracao convenio da conta paciente';
	if	(ie_altera_atendimento_p	= 'S') then
		ds_motivo_w	:= Wheb_mensagem_pck.get_Texto(303725, 'DS_MOTIVO_W='|| DS_MOTIVO_W); /*ds_motivo_w||' e convenio do atendimento';

	end if;

	ds_motivo_w := ds_motivo_w ||'.';
	ds_assunto_w := Wheb_mensagem_pck.get_Texto(303726); Troca convenio conta.
	ds_assunto_w	:= ds_assunto_w	|| Wheb_mensagem_pck.get_Texto(303728) ||nr_atendimento_w;
	ds_assunto_w	:= ds_assunto_w	|| Wheb_mensagem_pck.get_Texto(303729) ||nr_interno_conta_ww;
	ds_motivo_w 	:= ds_motivo_w 	|| chr(13) || chr(10)	|| Wheb_mensagem_pck.get_Texto(303730) ||nr_interno_conta_ww;
	ds_motivo_w 	:= ds_motivo_w 	|| chr(13) || chr(10) 	|| Wheb_mensagem_pck.get_Texto(303731) ||obter_nome_convenio(cd_convenio_origem_w)
					|| Wheb_mensagem_pck.get_Texto(303732) ||obter_categoria_convenio(cd_convenio_origem_w,cd_categoria_origem_w);
	ds_motivo_w 	:= ds_motivo_w 	|| chr(13)||chr(10)	|| Wheb_mensagem_pck.get_Texto(303733) ||obter_nome_convenio(cd_convenio_p)
					|| Wheb_mensagem_pck.get_Texto(303734)	||obter_categoria_convenio(cd_convenio_p,cd_categoria_p);
	ds_motivo_w	:= ds_motivo_w	||chr(13)||chr(10)
					|| Wheb_mensagem_pck.get_Texto(303735) ||ds_motivo_p;
	ds_motivo_w	:= ds_motivo_w	||chr(13)||chr(10)
					|| Wheb_mensagem_pck.get_Texto(303736) ||  campo_mascara(vl_anterior_w,2);
	ds_motivo_w	:= ds_motivo_w	||chr(13)||chr(10)
					|| Wheb_mensagem_pck.get_Texto(303737) || campo_mascara(vl_atual_w,2);					



	if	(ie_enviar_alerta_w	<> 'N') then

		select	atendimento_alerta_seq.nextval
		into	nr_seq_alerta_w
		from	dual;

		insert into atendimento_alerta 	(nr_sequencia,
						nr_atendimento,
						dt_alerta,
						dt_atualizacao,
						nm_usuario,
						ds_alerta,
						ie_situacao,
						dt_fim_alerta,
						dt_liberacao,
						nr_seq_tipo_alerta)
				values 	(	nr_seq_alerta_w,
						nr_atendimento_w,
						sysdate,
						sysdate,
						nm_usuario_p,
						substr(ds_motivo_w,1,2000),
						'A',
						null,
						decode(ie_enviar_alerta_w,'L',sysdate,null),
						ie_tipo_alerta_w);
	end if;

	if	(ie_enviar_email_w	= 'S') then
		open c02;
		loop
		fetch c02 into
			ds_email_w;
		exit when c02%notfound;
			begin
			if	(ds_email_w	is not null) then
				enviar_email(ds_assunto_w,ds_motivo_w,ds_email_origem_w,ds_email_w,nm_usuario_p,'M');
			end if;
			end;
		end loop;
		close c02;
	end if;


end if;
*/
	if nr_interno_conta_ww > 0 then
	begin
		CALL gerar_conta_paciente_guia(nr_interno_conta_ww, 1);
		/*  Fabricio em 26/05/2008 OS 93370 */

		CALL gerar_conta_auditoria(nr_atendimento_w, nr_interno_conta_ww, nm_usuario_p);
		/*Felipe Martini em 23/09/2008 OS109196*/

		CALL atualiza_codigo_convenio(nr_interno_conta_ww,null);
		/* Fabricio em 25/09/2009  OS 168069 Pro - Evento Alterar convenio da conta*/

		/*gerar_lancamento_automatico(nr_atendimento_w, null, 281, nm_usuario_p, null, null,null, null, null, nr_interno_conta_ww);*/

    end;
    end if;

   
	if (coalesce(ie_gerar_autor_conv_w,'N') = 'S') then
		begin
		open c04;
		loop
		fetch c04 into
			ie_proc_mat_w,
			nr_seq_item_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			begin
			if (ie_proc_mat_w = 1) then
				begin
				CALL gerar_autor_regra(nr_atendimento_w,null,nr_seq_item_w,null,null,null,'CP',nm_usuario_p,null,null,null,null,null,null,'','','');
				end;
			elsif (ie_proc_mat_w = 2) then
				begin
				CALL gerar_autor_regra(nr_atendimento_w,nr_seq_item_w,null,null,null,null,'CP',nm_usuario_p,null,null,null,null,null,null,'','','');
				end;
			end if;
			end;
		end loop;
		close c04;
		end;
	end if;


	if (coalesce(ie_todas_contas_atend_p,'N') = 'S') then
	open c03;
	loop
	fetch c03 into
		nr_interno_conta_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		CALL UPDATE_BILLABLE_PROCEDURE(nr_interno_conta_w,
					cd_convenio_p,
					cd_categoria_p,
					cd_autorizacao_p,
					nm_usuario_p,
					cd_plano_convenio_p,
					dt_validade_carteira_p,
					cd_usuario_convenio_p,
					cd_senha_p,
					'N',
					nr_seq_cobertura_p,
					cd_tipo_acomodacao_p,
					cd_empresa_p);
		end;
	end loop;
	close c03;
	end if;
	
	commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE update_billable_procedure (nr_interno_conta_p bigint default 0, cd_convenio_p bigint DEFAULT NULL, cd_categoria_p text DEFAULT NULL, cd_autorizacao_p text DEFAULT NULL, nm_usuario_p text DEFAULT NULL, cd_plano_convenio_p text DEFAULT NULL, dt_validade_carteira_p timestamp DEFAULT NULL, cd_usuario_convenio_p text DEFAULT NULL, cd_senha_p text DEFAULT NULL, ie_todas_contas_atend_p text default 'S', nr_seq_cobertura_p bigint DEFAULT NULL, cd_tipo_acomodacao_p bigint DEFAULT NULL, nr_atendimento_p bigint DEFAULT NULL, cd_empresa_p bigint default null, nr_seq_categoria_iva_p bigint default null) FROM PUBLIC;

