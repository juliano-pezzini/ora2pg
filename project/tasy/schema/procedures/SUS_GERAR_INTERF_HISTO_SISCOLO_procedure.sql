-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_gerar_interf_histo_siscolo ( nr_seq_protocolo_p bigint , nm_usuario_p text ) AS $body$
DECLARE

 
cd_cnpj_unidade_saude_w	varchar(14);
cd_profissional_w		varchar(10);
nr_interno_conta_w		bigint;
nr_atendimento_w		bigint;
nr_seq_siscolo_w		bigint;
dt_emissao_w		timestamp;
dt_liberacao_w		timestamp;
nr_seq_unidade_saude_w	bigint;
cd_estabelecimento_w	integer;
cd_pessoa_fisica_w	varchar(10);
c_cnes_w		varchar(7);
c_exame_w		varchar(14);
c_id_nome_w		varchar(70);
c_nomemae_w		varchar(70);
c_id_apel_w		varchar(30);
d_dtnasc_w		timestamp;
c_id_idad_w		varchar(2);
c_id_ident_w		varchar(12);
c_id_emis_w		varchar(5);
c_id_ufide_w		varchar(2);
c_id_cic_w		varchar(11);
c_id_esco_w		varchar(1);
c_endereco_w		varchar(35);
c_numero_w		varchar(6);
c_complem_w		varchar(15);
c_bairro_w		varchar(15);
c_id_uf_w		varchar(2);
c_ibge_w			varchar(7);
c_id_cep_w		varchar(8);
c_id_refe_w		varchar(35);
c_id_fone_w		varchar(11);
c_id_sus_w		varchar(15);
c_us_uf_w		varchar(2);
c_us_ibge_w		varchar(7);
c_us_cnes_w		varchar(7);
c_us_nome_w		varchar(40);
c_pron_w			varchar(12);
c_cit_esc_w		varchar(1);
c_cit_gla_w		varchar(1);
c_cit_ind_w		varchar(1);
c_cit_esca_w		varchar(1);
c_cit_glan_w		varchar(1);
c_cit_outr_w		varchar(40);
c_col_colp_w		varchar(1);
c_col_pnic_w		varchar(1);
c_col_pinv_w		varchar(1);
c_col_frio_w		varchar(1);
c_col_cure_w		varchar(1);
c_col_caf_w		varchar(1);
c_col_exer_w		varchar(1);
c_col_rcan_w		varchar(1);
c_col_biop_w		varchar(1);
c_col_adic_w		varchar(50);
c_res_tipo_w		varchar(1);
c_res_macr_w		varchar(100);
c_res_biop_w		varchar(1);
c_res_frag_w		varchar(2);
c_res_peca_w		varchar(1);
c_res_tam1_w		varchar(4);
c_res_tam2_w		varchar(4);
c_res_marg_w		varchar(4);
c_res_loca_w		varchar(1);
c_ben_meta_w		varchar(1);
c_ben_poli_w		varchar(1);
c_ben_cerv_w		varchar(1);
c_ben_alte_w		varchar(1);
c_neo_nica_w		varchar(1);
c_neo_aden_w		varchar(1);
c_neo_outr_w		varchar(40);
c_dif_grau_w		varchar(1);
c_ext_prof_w		varchar(4);
c_ext_vasc_w		varchar(1);
c_ext_peri_w		varchar(1);
c_ext_para_w		varchar(1);
c_ext_corp_w		varchar(1);
c_ext_vagi_w		varchar(1);
c_ext_lexa_w		varchar(2);
c_ext_lcom_w		varchar(2);
c_mar_marg_w		varchar(1);
c_diag_des_w		varchar(100);
c_com_frag_w		varchar(2);
c_com_bloc_w		varchar(2);
c_mat_ins_w		varchar(1);
c_mat_insa_w		varchar(70);
d_exame_w		timestamp;
d_recebe_w		timestamp;
d_libera_w		timestamp;
c_pat_cns_w		varchar(15);
c_pat_cic_w		varchar(11);
c_erro_w			varchar(100);
c_id_raca_w		varchar(2);
c_etnia_w		varchar(3);
c_nacional_w		varchar(3);

c01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		substr(a.cd_cnpj_unidade_saude,1,14), 
		a.cd_estabelecimento, 
		substr(a.cd_profissional,1,10), 
		trunc(a.dt_emissao), 
		trunc(a.dt_liberacao), 
		a.nr_seq_unidade_saude, 
		a.nr_atendimento, 
		b.nr_interno_conta 
	from	conta_paciente b, 
		siscolo_atendimento a 
	where	a.nr_atendimento 	= b.nr_atendimento 
	and	a.dt_liberacao  	= (	SELECT 	max(x.dt_liberacao) 
					from	siscolo_atendimento x 
					where	x.nr_atendimento = a.nr_atendimento) 
	and	b.nr_seq_protocolo	= nr_seq_protocolo_p 
	and	(((select	count(*) 
		from	siscolo_histo_result_cito t 
		where	t.nr_seq_siscolo = a.nr_sequencia) > 0) and 
		((select	count(*) 
		from	siscolo_histo_result r 
		where	r.nr_seq_siscolo = a.nr_sequencia) > 0) and 
		((select	count(*) 
		from	siscolo_histo_continuacao n 
		where	n.nr_seq_siscolo = a.nr_sequencia) > 0)) 
	order by nr_sequencia;


BEGIN 
 
delete 	from w_interf_hiscolo 
where	nr_seq_protocolo = nr_seq_protocolo_p;
 
open c01;
loop 
fetch c01 into 
	nr_seq_siscolo_w, 
	cd_cnpj_unidade_saude_w, 
	cd_estabelecimento_w, 
	cd_profissional_w, 
	dt_emissao_w, 
	dt_liberacao_w, 
	nr_seq_unidade_saude_w, 
	nr_atendimento_w, 
	nr_interno_conta_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
 
	begin 
	select	lpad(max(substr(sus_obter_cnes_estab_unif(a.cd_estabelecimento,'B'),1,7)),7,'0') c_cnes, 
		max(a.nr_sequencia) c_exame, 
		max(upper(substr(obter_nome_pf(c.cd_pessoa_fisica),1,70))) c_id_nome, 
		max(upper(substr(obter_compl_pf(c.cd_pessoa_fisica,5,'N'),1,60))) c_nomemae, 
		' ' c_id_apel, 
		max(to_date(obter_dados_pf(c.cd_pessoa_fisica,'DN'),'dd/mm/yyyy')) d_dtnasc, 
		max(substr(obter_dados_pf(c.cd_pessoa_fisica,'I'),1,2)) c_id_idad, 
		max(substr(obter_dados_pf(c.cd_pessoa_fisica,'RG'),1,12)) c_id_ident, 
		max(substr(obter_dados_pf(c.cd_pessoa_fisica,'O'),1,5)) c_id_emis, 
		max(CASE WHEN obter_dados_pf(c.cd_pessoa_fisica,'RG')='' THEN ''  ELSE upper(substr(sus_obter_codigo_uf(obter_compl_pf(c.cd_pessoa_fisica,1,'UF')),1,2)) END ) c_id_ufide, 
		max(substr(obter_dados_pf(c.cd_pessoa_fisica,'CPF'),1,11)) c_id_cic, 
		max(CASE WHEN obter_dados_pf(c.cd_pessoa_fisica,'GI')='Analfabeto' THEN '1' WHEN obter_dados_pf(c.cd_pessoa_fisica,'GI')='Primeiro Grau Incompleto' THEN '2' WHEN obter_dados_pf(c.cd_pessoa_fisica,'GI')='Primeiro Grau' THEN '3' WHEN obter_dados_pf(c.cd_pessoa_fisica,'GI')='Segundo Grau' THEN '4' WHEN obter_dados_pf(c.cd_pessoa_fisica,'GI')='Superior' THEN '5'  ELSE '0' END ) c_id_esco, 
		max(upper(substr(elimina_caractere_especial(obter_compl_pf(c.cd_pessoa_fisica,1,'EN')),1,35))) c_endereco, 
		max(substr(elimina_caractere_especial(obter_compl_pf(c.cd_pessoa_fisica,1,'NR')),1,6)) c_id_numero, 
		max(upper(substr(elimina_caractere_especial(obter_compl_pf(c.cd_pessoa_fisica,1,'CO')),1,15))) c_complem, 
		max(upper(substr(obter_compl_pf(c.cd_pessoa_fisica,1,'B'),1,15))) c_bairro, 
		max(upper(substr(sus_obter_codigo_uf(obter_compl_pf(c.cd_pessoa_fisica,1,'UF')),1,2))) c_id_uf, 
		max(substr(obter_compl_pf(c.cd_pessoa_fisica,1,'CDM')||calcula_digito('MODULO10',obter_compl_pf(c.cd_pessoa_fisica,1,'CDM')),1,7)) c_ibge, 
		max(substr(obter_compl_pf(c.cd_pessoa_fisica,1,'CEP'),1,8)) c_id_cep, 
		' ' c_id_refe, 
		max(substr(obter_compl_pf(c.cd_pessoa_fisica,1,'T'),1,11)) c_id_fone, 
		max(substr(obter_dados_pf(c.cd_pessoa_fisica,'CNS'),1,15)) c_id_sus, 
		max(substr(sus_obter_codigo_uf(obter_dados_unid_saude_colo(a.nr_sequencia,'UF')),1,2)) c_us_uf, 
		max(substr(obter_dados_unid_saude_colo(a.nr_sequencia,'CDM'),1,7)) c_us_ibge, 
		lpad(max(substr(obter_dados_unid_saude_colo(a.nr_sequencia,'CNES'),1,7)),7,'0') c_us_cnes, 
		max(substr(obter_dados_unid_saude_colo(a.nr_sequencia,'NM'),1,40)) c_us_nome, 
		max(obter_prontuario_paciente(c.cd_pessoa_fisica)) c_pron, 
		max(c.cd_pessoa_fisica), 
		max(coalesce(CASE WHEN obter_dados_pf(c.cd_pessoa_fisica,'CP')='Amarela' THEN '04' WHEN obter_dados_pf(c.cd_pessoa_fisica,'CP')='Branca' THEN '01' WHEN obter_dados_pf(c.cd_pessoa_fisica,'CP')='Indio' THEN '05' WHEN obter_dados_pf(c.cd_pessoa_fisica,'CP')='Negra' THEN '02' WHEN obter_dados_pf(c.cd_pessoa_fisica,'CP')='Parda' THEN '03' WHEN obter_dados_pf(c.cd_pessoa_fisica,'CP')='Sem informação' THEN '99' END ,'99')) c_id_raca, 
		coalesce(max(substr(CASE WHEN obter_dados_pf(c.cd_pessoa_fisica,'CP')='5' THEN sus_obter_etnia(c.cd_pessoa_fisica, 'C')  ELSE '0' END ,2,3)),'0') c_etnia, 
		lpad(max(obter_dados_pf(c.cd_pessoa_fisica,'NC')),3,'0') c_nacional 
	into STRICT	c_cnes_w, 
		c_exame_w, 
		c_id_nome_w, 
		c_nomemae_w, 
		c_id_apel_w, 
		d_dtnasc_w, 
		c_id_idad_w, 
		c_id_ident_w, 
		c_id_emis_w, 
		c_id_ufide_w, 
		c_id_cic_w, 
		c_id_esco_w, 
		c_endereco_w, 
		c_numero_w, 
		c_complem_w, 
		c_bairro_w, 
		c_id_uf_w, 
		c_ibge_w, 
		c_id_cep_w, 
		c_id_refe_w, 
		c_id_fone_w, 
		c_id_sus_w, 
		c_us_uf_w, 
		c_us_ibge_w, 
		c_us_cnes_w, 
		c_us_nome_w, 
		c_pron_w, 
		cd_pessoa_fisica_w, 
		c_id_raca_w, 
		c_etnia_w, 
		c_nacional_w 
	from	atendimento_paciente c, 
		conta_paciente b, 
		siscolo_atendimento a 
	where	a.nr_atendimento = b.nr_atendimento 
	and	b.nr_atendimento = c.nr_atendimento 
	and	a.nr_sequencia  = nr_seq_siscolo_w;
	exception 
	when others then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(223246,'NR_SEQ_SISCOLO='||nr_seq_siscolo_w||';NR_ATENDIMENTO='||nr_atendimento_w);
		/*Problemas em obter os dados do paciente do laudo: '||nr_seq_siscolo_w||' no antedimento: '||nr_atendimento_w*/
 
	end;
 
	begin 
	select	CASE WHEN ie_atipicas_escamosas='P' THEN '1' WHEN ie_atipicas_escamosas='N' THEN '2'  ELSE '0' END , 
		CASE WHEN ie_atipicas_glandulares='P' THEN '1' WHEN ie_atipicas_glandulares='N' THEN '2'  ELSE '0' END , 
		CASE WHEN ie_atipicas_indefinidas='P' THEN '1' WHEN ie_atipicas_indefinidas='N' THEN '2'  ELSE '0' END , 
		CASE WHEN ie_atipias_escamosas='H' THEN '1' WHEN ie_atipias_escamosas='N' THEN '2' WHEN ie_atipias_escamosas='M' THEN '3' WHEN ie_atipias_escamosas='C' THEN '4'  ELSE '0' END , 
		CASE WHEN ie_atipias_gla_adeno='A' THEN '1' WHEN ie_atipias_gla_adeno='C' THEN '2' WHEN ie_atipias_gla_adeno='E' THEN '3' WHEN ie_atipias_gla_adeno='S' THEN '4'  ELSE '0' END , 
		substr(ds_outro_diagnostico,1,40), 
		CASE WHEN ie_coloscopia='N' THEN '3' WHEN ie_coloscopia='A' THEN '2' WHEN ie_coloscopia='I' THEN '1'  ELSE '0' END , 
		CASE WHEN ie_sugestiva_nic='S' THEN '3'  ELSE '0' END , 
		CASE WHEN ie_sugestiva_inv='S' THEN '3'  ELSE '0' END , 
		CASE WHEN ie_biopsia_fio='S' THEN '3'  ELSE '0' END , 
		CASE WHEN ie_curetagem_endo='S' THEN '3'  ELSE '0' END , 
		CASE WHEN ie_proc_caf='S' THEN '3'  ELSE '0' END , 
		CASE WHEN ie_exerese_alargada='S' THEN '3'  ELSE '0' END , 
		CASE WHEN ie_retirada_canal='S' THEN '3'  ELSE '0' END , 
		CASE WHEN ie_caf_biopsia='S' THEN '3'  ELSE '0' END , 
		substr(ds_info_adicionais,1,50), 
		trunc(dt_exame_histo) 
	into STRICT	c_cit_esc_w, 
		c_cit_gla_w, 
		c_cit_ind_w, 
		c_cit_esca_w, 
		c_cit_glan_w, 
		c_cit_outr_w, 
		c_col_colp_w, 
		c_col_pnic_w, 
		c_col_pinv_w, 
		c_col_frio_w, 
		c_col_cure_w, 
		c_col_caf_w, 
		c_col_exer_w, 
		c_col_rcan_w, 
		c_col_biop_w, 
		c_col_adic_w, 
		d_exame_w 
	from	siscolo_histo_result_cito 
	where	nr_seq_siscolo = nr_seq_siscolo_w;
	exception 
	when others then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(223247,'NR_SEQ_SISCOLO='||nr_seq_siscolo_w||';NR_ATENDIMENTO='||nr_atendimento_w);
		/*Problemas em obter os dados do resultado citopatológico do laudo: '||nr_seq_siscolo_w||' no antedimento: '||nr_atendimento_w*/
 
	end;
 
	begin 
	select	CASE WHEN ie_biopsia='S' THEN '1' END , 
		substr(ds_macroscopia,1,100), 
		CASE WHEN ie_biopsia_fragmento='S' THEN '3'  ELSE '0' END , 
		substr(nr_fragmento_biopsia,1,2), 
		CASE WHEN ie_cicurgia_tumor='S' THEN '3'  ELSE '0' END , 
		substr(qt_tamanho_tumor1,1,4), 
		substr(qt_tamanho_tumor2,1,4), 
		substr(qt_distancia_margem,1,4), 
		CASE WHEN ie_localizacao='T' THEN '1' WHEN ie_localizacao='D' THEN '2' WHEN ie_localizacao='J' THEN '3'  ELSE '0' END , 
		CASE WHEN ie_metaplasia_esc='S' THEN '3'  ELSE '0' END , 
		CASE WHEN ie_polipo_endocer='S' THEN '3'  ELSE '0' END , 
		CASE WHEN ie_cervicite_cro='S' THEN '3'  ELSE '0' END , 
		CASE WHEN ie_citoarquiteturais='S' THEN '3'  ELSE '0' END , 
		CASE WHEN ie_lesao_carater='L' THEN '1' WHEN ie_lesao_carater='M' THEN '3' WHEN ie_lesao_carater='A' THEN '3' WHEN ie_lesao_carater='E' THEN '4' WHEN ie_lesao_carater='I' THEN '5' WHEN ie_lesao_carater='C' THEN '6' WHEN ie_lesao_carater='V' THEN '7' WHEN ie_lesao_carater='Z' THEN '8'  ELSE '0' END , 
		CASE WHEN ie_adenocarcionoma='S' THEN '1' WHEN ie_adenocarcionoma='M' THEN '2' WHEN ie_adenocarcionoma='V' THEN '3'  ELSE '0' END , 
		substr(ds_neoplasia_maligna,1,40) 
	into STRICT	c_res_tipo_w, 
		c_res_macr_w, 
		c_res_biop_w, 
		c_res_frag_w, 
		c_res_peca_w, 
		c_res_tam1_w, 
		c_res_tam2_w, 
		c_res_marg_w, 
		c_res_loca_w, 
		c_ben_meta_w, 
		c_ben_poli_w, 
		c_ben_cerv_w, 
		c_ben_alte_w, 
		c_neo_nica_w, 
		c_neo_aden_w, 
		c_neo_outr_w 
	from	siscolo_histo_result 
	where	nr_seq_siscolo = nr_seq_siscolo_w;
	exception 
	when others then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(223248,'NR_SEQ_SISCOLO='||nr_seq_siscolo_w||';NR_ATENDIMENTO='||nr_atendimento_w);
		/*Problemas em obter os dados do resultado histopatológico do laudo: '||nr_seq_siscolo_w||' no antedimento: '||nr_atendimento_w*/
 
	end;
 
	begin 
	select	CASE WHEN ie_grau_deferenciacao='N' THEN '0' WHEN ie_grau_deferenciacao='B' THEN '1' WHEN ie_grau_deferenciacao='M' THEN '2' WHEN ie_grau_deferenciacao='P' THEN '3' WHEN ie_grau_deferenciacao='I' THEN '4'  ELSE '5' END , 
		substr(nr_profundidade,1,4), 
		CASE WHEN ie_vascular='S' THEN '3' WHEN ie_vascular='N' THEN '1'  ELSE '0' END , 
		CASE WHEN ie_peri_neural='S' THEN '3' WHEN ie_peri_neural='N' THEN '1'  ELSE '0' END , 
		CASE WHEN ie_parametrial='S' THEN '3' WHEN ie_parametrial='N' THEN '1'  ELSE '0' END , 
		CASE WHEN ie_corpo_uterino='S' THEN '3' WHEN ie_corpo_uterino='N' THEN '1'  ELSE '0' END , 
		CASE WHEN ie_vagina='S' THEN '3' WHEN ie_vagina='N' THEN '1'  ELSE '0' END , 
		substr(nr_linf_examinados,1,2), 
		substr(nr_linf_comprometidos,1,2), 
		CASE WHEN ie_margem_cirurgica='L' THEN '1' WHEN ie_margem_cirurgica='C' THEN '2' WHEN ie_margem_cirurgica='I' THEN '3'  ELSE '0' END , 
		substr(ds_desc_diagnostico,1,100), 
		substr(nr_fragmentos,1,2), 
		substr(nr_blocos,1,2), 
		CASE WHEN ie_mat_insatisfatorio='S' THEN '3'  ELSE '0' END , 
		substr(DS_MOTIVO_INSTISF,1,70), 
		trunc(dt_liberacao), 
		substr(cd_cns_resp_result,1,15), 
		substr(cd_cpf_resp_result,1,11), 
		'' c_erro 
	into STRICT	c_dif_grau_w, 
		c_ext_prof_w, 
		c_ext_vasc_w, 
		c_ext_peri_w, 
		c_ext_para_w, 
		c_ext_corp_w, 
		c_ext_vagi_w, 
		c_ext_lexa_w, 
		c_ext_lcom_w, 
		c_mar_marg_w, 
		c_diag_des_w, 
		c_com_frag_w, 
		c_com_bloc_w, 
		c_mat_ins_w, 
		c_mat_insa_w, 
		d_libera_w, 
		c_pat_cns_w, 
		c_pat_cic_w, 
		c_erro_w 
	from	siscolo_histo_continuacao 
	where	nr_seq_siscolo = nr_seq_siscolo_w;
	exception 
	when others then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(223250,'NR_SEQ_SISCOLO='||nr_seq_siscolo_w||';NR_ATENDIMENTO='||nr_atendimento_w);
		/*Problemas em obter os dados da continuação I do resultado histopatológico do laudo: '||nr_seq_siscolo_w||' no antedimento: '||nr_atendimento_w*/
 
	end;
 
	insert into w_interf_hiscolo( 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		cd_pessoa_fisica, 
		nr_seq_protocolo, 
		nr_seq_siscolo, 
		nr_interno_conta, 
		nr_atendimento, 
		cd_profissional, 
		cd_cnpj_unidade_saude, 
		dt_emissao, 
		dt_liberacao, 
		nr_seq_unidade_saude, 
		c_cnes, 
		c_exame, 
		c_id_nome, 
		c_nomemae, 
		c_id_apel, 
		d_dtnasc, 
		c_id_idad, 
		c_id_ident, 
		c_id_emis, 
		c_id_ufide, 
		c_id_cic, 
		c_id_esco, 
		c_endereco, 
		c_numero, 
		c_complem, 
		c_bairro, 
		c_id_uf, 
		c_ibge, 
		c_id_cep, 
		c_id_refe, 
		c_id_fone, 
		c_id_sus, 
		c_us_uf, 
		c_us_ibge, 
		c_us_cnes, 
		c_us_nome, 
		c_pron, 
		c_cit_esc, 
		c_cit_gla, 
		c_cit_ind, 
		c_cit_esca, 
		c_cit_glan, 
		c_cit_outr, 
		c_col_colp, 
		c_col_pnic, 
		c_col_pinv, 
		c_col_frio, 
		c_col_cure, 
		c_col_caf, 
		c_col_exer, 
		c_col_rcan, 
		c_col_biop, 
		c_col_adic, 
		c_res_tipo, 
		c_res_macr, 
		c_res_biop, 
		c_res_frag, 
		c_res_peca, 
		c_res_tam1, 
		c_res_tam2, 
		c_res_marg, 
		c_res_loca, 
		c_ben_meta, 
		c_ben_poli, 
		c_ben_cerv, 
		c_ben_alte, 
		c_neo_nica, 
		c_neo_aden, 
		c_neo_outr, 
		c_dif_grau, 
		c_ext_prof, 
		c_ext_vasc, 
		c_ext_peri, 
		c_ext_para, 
		c_ext_corp, 
		c_ext_vagi, 
		c_ext_lexa, 
		c_ext_lcom, 
		c_mar_marg, 
		c_diag_des, 
		c_com_frag, 
		c_com_bloc, 
		c_mat_ins, 
		c_mat_insa, 
		d_exame, 
		d_recebe, 
		d_libera, 
		c_pat_cns, 
		c_pat_cic, 
		c_erro, 
		c_id_raca, 
		c_etnia, 
		c_nacional) 
	values (	nextval('w_interf_hiscolo_seq'), 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		cd_pessoa_fisica_w, 
		nr_seq_protocolo_p, 
		nr_seq_siscolo_w, 
		nr_interno_conta_w, 
		nr_atendimento_w, 
		cd_profissional_w, 
		cd_cnpj_unidade_saude_w, 
		dt_emissao_w, 
		dt_liberacao_w, 
		nr_seq_unidade_saude_w, 
		c_cnes_w, 
		c_exame_w, 
		c_id_nome_w, 
		c_nomemae_w, 
		c_id_apel_w, 
		d_dtnasc_w, 
		c_id_idad_w, 
		c_id_ident_w, 
		c_id_emis_w, 
		c_id_ufide_w, 
		c_id_cic_w, 
		c_id_esco_w, 
		c_endereco_w, 
		c_numero_w, 
		c_complem_w, 
		c_bairro_w, 
		c_id_uf_w, 
		c_ibge_w, 
		c_id_cep_w, 
		c_id_refe_w, 
		c_id_fone_w, 
		c_id_sus_w, 
		c_us_uf_w, 
		c_us_ibge_w, 
		c_us_cnes_w, 
		c_us_nome_w, 
		c_pron_w, 
		c_cit_esc_w, 
		c_cit_gla_w, 
		c_cit_ind_w, 
		c_cit_esca_w, 
		c_cit_glan_w, 
		c_cit_outr_w, 
		c_col_colp_w, 
		c_col_pnic_w, 
		c_col_pinv_w, 
		c_col_frio_w, 
		c_col_cure_w, 
		c_col_caf_w, 
		c_col_exer_w, 
		c_col_rcan_w, 
		c_col_biop_w, 
		c_col_adic_w, 
		c_res_tipo_w, 
		c_res_macr_w, 
		c_res_biop_w, 
		c_res_frag_w, 
		c_res_peca_w, 
		c_res_tam1_w, 
		c_res_tam2_w, 
		c_res_marg_w, 
		c_res_loca_w, 
		c_ben_meta_w, 
		c_ben_poli_w, 
		c_ben_cerv_w, 
		c_ben_alte_w, 
		c_neo_nica_w, 
		c_neo_aden_w, 
		c_neo_outr_w, 
		c_dif_grau_w, 
		c_ext_prof_w, 
		c_ext_vasc_w, 
		c_ext_peri_w, 
		c_ext_para_w, 
		c_ext_corp_w, 
		c_ext_vagi_w, 
		c_ext_lexa_w, 
		c_ext_lcom_w, 
		c_mar_marg_w, 
		c_diag_des_w, 
		c_com_frag_w, 
		c_com_bloc_w, 
		c_mat_ins_w, 
		c_mat_insa_w, 
		d_exame_w, 
		dt_emissao_w, 
		d_libera_w, 
		c_pat_cns_w, 
		c_pat_cic_w, 
		c_erro_w, 
		c_id_raca_w, 
		c_etnia_w, 
		c_nacional_w);
	end;
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_gerar_interf_histo_siscolo ( nr_seq_protocolo_p bigint , nm_usuario_p text ) FROM PUBLIC;

