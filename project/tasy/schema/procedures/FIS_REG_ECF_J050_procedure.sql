-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_reg_ecf_j050 ( nr_seq_controle_p text, ds_separador_p text, cd_estabelecimento_p text, nm_usuario_p text, cd_empresa_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint, ie_scp_p text) AS $body$
DECLARE


				
nr_seq_registro_w		bigint := nr_sequencia_p;	
nr_linha_w			bigint := qt_linha_p;
ds_arquivo_w			varchar(4000);	
ds_arquivo_compl_w		varchar(4000);	
ds_linha_w			varchar(4000);
sep_w				varchar(2) := ds_separador_p;

tp_registro_w			varchar(5);
cd_classificacao_w		bigint;
cd_conta_sup_w			varchar(40);
dt_inicio_apuracao_w		timestamp;
dt_fim_apuracao_w		timestamp;
ie_gerar_J051_w			varchar(01);
cd_conta_contabil_w		varchar(40);
ie_apres_conta_ctb_w		fis_lote_ecf.ie_apres_conta_ctb%type;

c_plano_contas CURSOR FOR
	SELECT	coalesce(dt_inicio_vigencia,dt_inicio_apuracao_w)dt_inicio_vigencia,
		cd_grupo_ecd,
		ie_tipo_ecd,
		substr(ctb_obter_classif_conta(a.cd_conta_contabil, a.cd_classificacao, to_char(dt_fim_apuracao_w,'dd/mm/yyyy')),1,40) cd_classificacao,
		cd_conta_contabil,
		ds_conta_contabil
	from	ecd_plano_conta_v	a
	where	a.tp_registro	= 1
	and	a.cd_empresa	= cd_empresa_p
	and (substr(obter_se_conta_vigente2(a.cd_conta_contabil, a.dt_inicio_vigencia, a.dt_fim_vigencia,to_char(dt_fim_apuracao_w,'dd/mm/yyyy')),1,1) = 'S')
	order by	cd_classificacao;

vet01	c_plano_contas%RowType;

c_plano_contas_ref CURSOR FOR
	SELECT	a.cd_centro_custo cd_centro_custo,
		a.cd_classif_ecd cd_classif_ecd
	from	ecd_plano_conta_v a
	where	a.tp_registro		= 2
	and	a.cd_empresa		= cd_empresa_p
	and	coalesce(a.cd_versao,'0.0')	=  '3.1'
	and	a.cd_conta_contabil	= cd_conta_contabil_w
	and	exists (SELECT 1
			from 	conta_contabil_referencial x
			where	a.cd_classif_ecd = x.cd_classificacao)
	and	(a.cd_classif_ecd IS NOT NULL AND a.cd_classif_ecd::text <> '')
	and	ie_gerar_J051_w		= 'S'
	and	substr(obter_se_periodo_vigente(a.dt_inicio_validade, a.dt_fim_validade, dt_inicio_apuracao_w),1,1) = 'S'
	order by cd_classificacao;

vet02	c_plano_contas_ref%RowType;


BEGIN

select  max(dt_inicio_apuracao),
	max(dt_fim_apuracao)
into STRICT	dt_inicio_apuracao_w,
	dt_fim_apuracao_w
from	fis_controle_ecf
where	nr_sequencia = nr_seq_controle_p;

select	coalesce(max(a.ie_apres_conta_ctb),'CD')
into STRICT	ie_apres_conta_ctb_w
from	fis_lote_ecf a,
	fis_controle_ecf b
where	a.nr_sequencia = b.nr_seq_lote
and	b.nr_sequencia = nr_seq_controle_p;

select	coalesce(max(ie_gerar),'N')
into STRICT	ie_gerar_J051_w
from	fis_reg_apuracao_ecf
where	 nr_seq_lote	= 	(	SELECT 	max(nr_seq_lote)
					from 	fis_controle_ecf
					where	nr_sequencia = nr_seq_controle_p)
and	ie_gerar	= 'S'
and	ds_registro_ecf	= 'J051';

tp_registro_w	:= 'J001';
ds_linha_w  	:=  substr( 	sep_w || tp_registro_w	|| -- Texto Fixo Contendo a Identificação do Registro.
				sep_w || 0 		|| -- Indicador de movimento: 0 - Bloco com dados informados; 1 - Bloco sem dados informados.
				sep_w,1,8000);

ds_arquivo_w		:= substr(ds_linha_w,1,4000);
ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
nr_seq_registro_w		:= nr_seq_registro_w + 1;
nr_linha_w		:= nr_linha_w + 1;

insert into fis_ecf_arquivo(
	nr_sequencia,
	nm_usuario,
	dt_atualizacao,
	nm_usuario_nrec,
	dt_atualizacao_nrec,
	nr_seq_controle_ecf,
	nr_linha,
	cd_registro,
	ds_arquivo,
	ds_arquivo_compl)
values (	nr_seq_registro_w,
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nr_seq_controle_p,
	nr_linha_w,
	tp_registro_w,
	ds_arquivo_w,
	ds_arquivo_compl_w);	

open c_plano_contas;
loop
fetch c_plano_contas into	
	vet01;
EXIT WHEN NOT FOUND; /* apply on c_plano_contas */
	begin
		tp_registro_w		:= 'J050';
		cd_classificacao_w	:= ctb_obter_nivel_classif_conta(vet01.cd_classificacao);
		
		cd_conta_sup_w		:= ctb_obter_codigo_classif_vig(cd_empresa_p,
									substr(ctb_obter_classif_conta_sup(vet01.cd_classificacao, dt_inicio_apuracao_w, cd_empresa_p),1,40),
								dt_inicio_apuracao_w);
						
		cd_conta_contabil_w	:= vet01.cd_conta_contabil;

		if (ie_apres_conta_ctb_w = 'CL') then
			cd_conta_contabil_w := vet01.cd_classificacao;
		        cd_conta_sup_w	    := substr(ctb_obter_classif_conta_sup(vet01.cd_classificacao, dt_inicio_apuracao_w, cd_empresa_p),1,40);
		elsif (ie_apres_conta_ctb_w = 'CP') then
			cd_conta_contabil_w := substr(replace(vet01.cd_classificacao, '.', ''), 1, 40);
		        cd_conta_sup_w	    := substr(replace(substr(ctb_obter_classif_conta_sup(vet01.cd_classificacao, dt_inicio_apuracao_w, cd_empresa_p),1,40),'.',''),1,40);
		end if;									

		ds_linha_w  :=   substr(sep_w || tp_registro_w	 				|| -- Registro (1)
					sep_w || to_char(vet01.dt_inicio_vigencia,'ddmmyyyy')	|| -- Data de Atualização (Inclusão/ Alteração) (2)
					sep_w || vet01.cd_grupo_ecd				|| -- Código da Natureza da Conta Analítica ou Sintética (3)
					sep_w || vet01.ie_tipo_ecd				|| -- Indicador do Tipo de Conta (4)
					sep_w || cd_classificacao_w				|| -- Nível da Conta Analítica/Sintética (5)
					sep_w || cd_conta_contabil_w				|| -- Código da Conta Analítica/Sintética (6)
					sep_w || cd_conta_sup_w					|| -- Código da Conta Sintética de Nível Imediatamente Superior (7)
					sep_w || vet01.ds_conta_contabil			|| sep_w,1,8000); -- Nome da Conta Analítica/Sintética (8)
		
		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w	:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;

		insert into fis_ecf_arquivo(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_controle_ecf,
			nr_linha,
			cd_registro,
			ds_arquivo,
			ds_arquivo_compl)
		values (	nr_seq_registro_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_controle_p,
			nr_linha_w,
			tp_registro_w,
			ds_arquivo_w,
			ds_arquivo_compl_w);
				
		-- Verifica geração dos registros J051
		if (ie_gerar_J051_w = 'S') then
		   begin
			cd_conta_contabil_w	:= vet01.cd_conta_contabil;
			
			open c_plano_contas_ref;
			loop
			fetch c_plano_contas_ref into
				vet02;
			EXIT WHEN NOT FOUND; /* apply on c_plano_contas_ref */
				begin
				tp_registro_w	:=	'J051';
				ds_linha_w	:= substr(	sep_w || tp_registro_w 		|| -- Registro (1)
								sep_w || vet02.cd_centro_custo	|| -- Código do Centro de Custos (2)
								sep_w || vet02.cd_classif_ecd 	|| -- Código da Conta no Plano de Contas Referencial (3)
								sep_w,1,8000);
			
				ds_arquivo_w		:= substr(ds_linha_w,1,4000);
				ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
				nr_seq_registro_w	:= nr_seq_registro_w + 1;
				nr_linha_w		:= nr_linha_w + 1;
				
				insert into fis_ecf_arquivo(
					nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_controle_ecf,
					nr_linha,
					cd_registro,
					ds_arquivo,
					ds_arquivo_compl)
				values (	nr_seq_registro_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nr_seq_controle_p,
					nr_linha_w,
					tp_registro_w,
					ds_arquivo_w,
					ds_arquivo_compl_w);
				
				end;
			end loop;
			close c_plano_contas_ref;
		   end;
		end if; -- End: c_plano_contas_ref
			
	end; -- End: c_plano_contas
end loop;
close c_plano_contas;

commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_reg_ecf_j050 ( nr_seq_controle_p text, ds_separador_p text, cd_estabelecimento_p text, nm_usuario_p text, cd_empresa_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint, ie_scp_p text) FROM PUBLIC;

