-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_consistir_regra_ex_adic ( nr_seq_ageint_p bigint, nr_seq_proc_interno_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_regra_p INOUT bigint, ds_retorno_p INOUT text) AS $body$
DECLARE


cd_convenio_w		integer;
cd_categoria_w		varchar(10);
nr_seq_item_regra_w	bigint;
nr_seq_regra_w		bigint;
qt_exames_regra_w	bigint;
qt_exames_w		bigint;
ds_retorno_w		varchar(255);
nr_seq_grupo_w		bigint;
nr_seq_proc_interno_w	bigint;
qt_regra_tempo_exames_w	bigint := 0;
qt_regra_tempo_exames_pinc_w	bigint := 0;
nr_seq_proc_interno_adic_w	bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_grupo_selec,
		nr_seq_proc_interno
	from	agenda_integrada_item
	where	nr_seq_regra_ex_adic	= nr_seq_regra_w
	and	nr_seq_agenda_int	= nr_seq_ageint_p
	and	coalesce(ds_retorno_w::text, '') = '';
	
C02 CURSOR FOR
	SELECT	nr_seq_proc_interno
	from	ageint_exame_adic_item
	where	nr_seq_item	= nr_seq_item_Regra_w;
			

BEGIN

if (nr_seq_proc_interno_p IS NOT NULL AND nr_seq_proc_interno_p::text <> '') then
	select	max(cd_convenio),
		max(cd_categoria)
	into STRICT	cd_convenio_w,
		cd_categoria_w
	from	agenda_integrada
	where	nr_sequencia	= nr_seq_Ageint_p;
	
	nr_seq_regra_w	:= Ageint_Obter_Seq_Regra_Ex_Adic(nr_seq_proc_interno_p, cd_convenio_w, cd_categoria_w, cd_estabelecimento_p, nm_usuario_p);

	if (coalesce(nr_seq_regra_w,0)	> 0) then
		select	qt_exames
		into STRICT	qt_exames_regra_w
		from	ageint_qtd_exames_adic
		where	nr_sequencia	= nr_seq_regra_w;

		open C01;
		loop
		fetch C01 into	
			nr_seq_item_regra_w,
			nr_seq_grupo_w,
			nr_seq_proc_interno_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			
			if (qt_regra_tempo_exames_pinc_w = 0) then
				select	count(*)
				into STRICT	qt_regra_tempo_exames_pinc_w
				from	ageint_tempo_entre_exames
				where	((cd_exame_pri	= nr_seq_proc_interno_w)
				or (cd_exame_seg	= nr_seq_proc_interno_w))
				and	((cd_exame_pri	= nr_seq_proc_interno_p)
				or (cd_exame_seg	= nr_seq_proc_interno_p))
				and	ie_situacao	= 'A';
			end if;
			
			select	count(*)
			into STRICT	qt_exames_w
			from	ageint_exame_adic_item
			where	nr_seq_item	= nr_seq_item_Regra_w;
			
			open C02;
			loop
			fetch C02 into	
				nr_seq_proc_interno_adic_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				/*begin*/

				begin				
				if (qt_regra_tempo_exames_w = 0) then
					select	count(*)
					into STRICT	qt_regra_tempo_exames_w
					from	ageint_tempo_entre_exames
					where	((cd_exame_pri	= nr_seq_proc_interno_adic_w)
					or (cd_exame_seg	= nr_seq_proc_interno_adic_w))
					and	((cd_exame_pri	= nr_seq_proc_interno_p)
					or (cd_exame_seg	= nr_seq_proc_interno_p))
					and	ie_situacao	= 'A';
				end if;
				/*exception
				when no_data_found then
					qt_regra_tempo_exames_w	:= 0;
				end;*/
				end;
			end loop;
			close C02;
			
			if (qt_regra_tempo_exames_pinc_w = 0) and (qt_regra_tempo_exames_w = 0) then
			
			
				if (qt_exames_w + 1 >= qt_exames_regra_w) then
					nr_seq_regra_p	:= nr_seq_regra_w;
				else
					insert into ageint_exame_adic_item(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_proc_interno,
							nr_seq_item,
							nr_seq_grupo_selec)
						values (nextval('ageint_exame_adic_item_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_proc_interno_p,
							nr_seq_item_regra_w,
							nr_seq_grupo_w);
					commit;
					ds_retorno_w	:= wheb_mensagem_pck.get_texto(790854);
				end if;
			
			end if;
			end;
		end loop;
		close C01;
		if (coalesce(ds_retorno_w::text, '') = '') then
			nr_seq_regra_p	:= nr_seq_regra_w;
		end if;
	end if;

	ds_retorno_p	:= ds_retorno_w;
end if;
	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_consistir_regra_ex_adic ( nr_seq_ageint_p bigint, nr_seq_proc_interno_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_regra_p INOUT bigint, ds_retorno_p INOUT text) FROM PUBLIC;

