-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ehro_valid_dispensation ( nr_cirurgia_p bigint, cd_material_p bigint, qt_dispensacao_p bigint, ie_origem_gasto_bipada_p text, ds_questiona_alergia_p INOUT text, ds_questiona_origem_gasto_p INOUT text, ie_origem_padrao_p INOUT text, ds_aviso_qtd_disp_p INOUT text, ds_questiona_cavidade_p INOUT text, ds_questiona_qtd_alta_p INOUT text) AS $body$
DECLARE



cd_perfil_w				integer;
nm_usuario_w				varchar(15);
cd_estabelecimento_w			integer;
ie_ajusta_origem_padrao_w			varchar(15);
ie_consiste_qte_w				varchar(15);
ie_perm_disp_nao_prescr_w			varchar(15);
ie_disp_pepo_w				varchar(15);
ds_material_w				varchar(255);
ds_origem_gasto_bipada_w			varchar(255);
ie_exibe_qt_min_w				varchar(15);
nr_seq_proc_interno_w			bigint;
cd_pessoa_fisica_w			varchar(10);
cd_material_w				integer;
ds_item_w				varchar(2000);
ie_retorno_w				varchar(15);
ie_possui_regra_w				varchar(15);
ie_permite_alterar_w			varchar(15);
ds_origem_gasto_padrao_w			varchar(255);
ie_origem_padrao_w			varchar(15);
ds_inconsistencia_w			varchar(2000);
ie_controla_cavidade_w			varchar(15);
nr_seq_item_controle_w			bigint;


BEGIN
cd_perfil_w			:= wheb_usuario_pck.get_cd_perfil;
nm_usuario_w			:= wheb_usuario_pck.get_nm_usuario;
cd_estabelecimento_w		:= wheb_usuario_pck.get_cd_estabelecimento;


ie_ajusta_origem_padrao_w := obter_param_usuario(872, 209, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_ajusta_origem_padrao_w);
ie_consiste_qte_w := obter_param_usuario(872, 429, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_consiste_qte_w);
ie_perm_disp_nao_prescr_w := obter_param_usuario(872, 510, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_perm_disp_nao_prescr_w);

cd_material_w	:= cd_material_p;

select		max(obter_se_material_disp_pepo(cd_material)),
		max(ds_material),
	         	max(obter_valor_dominio(1815,ie_origem_gasto_bipada_p))
into STRICT		ie_disp_pepo_w,
		ds_material_w,
		ds_origem_gasto_bipada_w
from		material
where		cd_material = cd_material_w;

select		max(nr_seq_proc_interno),
		max(cd_pessoa_fisica)
into STRICT		nr_seq_proc_interno_w,
		cd_pessoa_fisica_w
from		cirurgia
where		nr_cirurgia = nr_cirurgia_p;

if (ie_disp_pepo_w = 'N') then
	CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(122797,DS_MATERIAL_W);
end if;

SELECT * FROM Verifica_Paciente_Alergico(cd_pessoa_fisica_w, cd_material_w, ds_item_w, ie_retorno_w) INTO STRICT ds_item_w, ie_retorno_w;
if (ie_retorno_w = 'S') and (ds_item_w IS NOT NULL AND ds_item_w::text <> '') then
	ds_questiona_alergia_p := obter_texto_dic_objeto(29405,philips_param_pck.get_nr_seq_idioma,'DS_ITEM_P=' || substr(ds_item_w,1,255));
end if;

SELECT * FROM Obter_Se_Regra_Disp_Pepo(cd_material_w, ie_origem_gasto_bipada_p, ie_possui_regra_w, ie_permite_alterar_w, ds_origem_gasto_padrao_w, ie_origem_padrao_w) INTO STRICT ie_possui_regra_w, ie_permite_alterar_w, ds_origem_gasto_padrao_w, ie_origem_padrao_w;
if (ie_possui_regra_w = 'S') then
	if (ie_permite_alterar_w = 'S') then
		ds_questiona_origem_gasto_p := obter_texto_dic_objeto(216894,philips_param_pck.get_nr_seq_idioma,'DS_ORIGEM=' ||ds_origem_gasto_padrao_w|| ';DS_RESP='||ds_origem_gasto_bipada_w);
   elsif (ie_possui_regra_w = 'S') then
      if (ie_ajusta_origem_padrao_w = 'N') then
         CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(obter_texto_dic_objeto(216902,philips_param_pck.get_nr_seq_idioma,'DS_ORIGEM=' ||ds_origem_gasto_padrao_w|| ';DS_RESP='||ds_origem_gasto_bipada_w));
      else
         ie_origem_padrao_p := ie_origem_padrao_w;
      end if;
   end if;
end if;

if (ie_consiste_qte_w <> 'N') then
   ds_inconsistencia_w := consistir_qtde_dispensada(nr_cirurgia_p, cd_material_w, qt_dispensacao_p, ds_inconsistencia_w);
   if (ds_inconsistencia_w IS NOT NULL AND ds_inconsistencia_w::text <> '') then
      if (ie_consiste_qte_w = 'S') then
         CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(ds_inconsistencia_w);
      elsif (ie_consiste_qte_w = 'A')	then
         ds_aviso_qtd_disp_p	:= ds_inconsistencia_w;
      end if;
   end if;
end if;

if (ie_perm_disp_nao_prescr_w = 'N') then
	ds_inconsistencia_w := consistir_se_mat_prescr_cir(nr_cirurgia_p, cd_material_w, ds_inconsistencia_w);
end if;


select 	coalesce(max(ie_controla_cavidade),'S')
into STRICT		ie_controla_cavidade_w
from   	proc_interno
where  	nr_sequencia = nr_seq_proc_interno_w;

if (ie_controla_cavidade_w = 'S') then
	select  	max(a.nr_seq_item)
	into STRICT	nr_seq_item_controle_w
	from    	material_item_controle a,
		pepo_item_controle b
	where   	a.nr_seq_item = b.nr_sequencia
	and     	coalesce(b.ie_situacao,'A') = 'A'
	and 	((b.cd_estabelecimento = cd_estabelecimento_w) or (coalesce(b.cd_estabelecimento::text, '') = ''))
	and     	a.cd_material = cd_material_w;

	if (nr_seq_item_controle_w IS NOT NULL AND nr_seq_item_controle_w::text <> '') then
		ds_questiona_cavidade_p	:= obter_texto_dic_objeto(28096,philips_param_pck.get_nr_seq_idioma,null);
	end if;
end if;

if (coalesce(qt_dispensacao_p,1) > 10000) then
	ds_questiona_qtd_alta_p := obter_texto_dic_objeto(28237,philips_param_pck.get_nr_seq_idioma,null);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ehro_valid_dispensation ( nr_cirurgia_p bigint, cd_material_p bigint, qt_dispensacao_p bigint, ie_origem_gasto_bipada_p text, ds_questiona_alergia_p INOUT text, ds_questiona_origem_gasto_p INOUT text, ie_origem_padrao_p INOUT text, ds_aviso_qtd_disp_p INOUT text, ds_questiona_cavidade_p INOUT text, ds_questiona_qtd_alta_p INOUT text) FROM PUBLIC;

