-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE reprovar_compra ( nr_seq_aprovacao_p bigint, nr_seq_processo_p bigint, nm_usuario_p text, ie_motivo_p text, ie_reprovar_todos_p text, ds_observacao_p text) AS $body$
DECLARE


nr_ordem_compra_w		bigint;			
nr_ordem_compra_venc_w	bigint;			
nm_usuarios_w			varchar(255);
ds_titulo_w			    varchar(80);
ds_comunicado_w			varchar(2000);
ds_motivo_w			    varchar(255);
ds_motivo_ww			varchar(255);
ie_tipo_w				varchar(20);
nr_documento_w			bigint;
nr_sequencia_w			bigint;
nr_seq_classif_w		bigint;
nr_itens_w			    bigint;
cd_estabelecimento_w	integer;
qt_regra_usuario_w		bigint;
qt_existe_padronizado_w	bigint;
nr_seq_regra_w			bigint;
cd_setor_atendimento_w	integer;
cd_evento_w			    smallint;
nr_cot_compra_w			bigint;
ds_email_pessoa_ordem_w	varchar(255);
ds_email_pessoa_cotacao_w varchar(255);
ds_email_pessoa_solic_w	 varchar(255);
ds_lista_email_w			varchar(255);
nr_solic_compra_w			bigint;
ds_assunto_w			varchar(255);
ds_mensagem_w			varchar(2000);
ie_usuario_w			varchar(3);
ds_email_origem_w			varchar(255);
ds_usuario_origem_w		varchar(255);
ds_email_comprador_w		varchar(255);
ds_usuario_comprador_w		varchar(255);
ds_email_adicional_w		varchar(2000);
qt_existe_w			bigint 	:= 0;
ie_aprov_regra_minimo_w		varchar(1) 	:= 'N';
cd_perfil_disparar_w		bigint;
cd_perfil_w			varchar(10);
ie_ci_lida_w			varchar(1);
ie_momento_envio_w		varchar(1);
ie_cancela_email_aprov_w		varchar(1);
/* se tiver setor na regra, envia ci para os setores */

ds_setor_adicional_w                    	varchar(2000) := '';
/* campos da regra usuario da regra */

cd_setor_regra_usuario_w		integer;
nr_requisicao_w			bigint;
ie_tipo_documento_w		varchar(15);
ds_email_remetente_w		varchar(255);
ds_cond_pagto_w			condicao_pagamento.ds_condicao_pagamento%type;
ds_observacao_w			processo_aprov_compra.ds_observacao%type;
nm_pessoa_fisica_w		pessoa_fisica.nm_pessoa_fisica%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
ie_delegado_w			varchar(1);

c01 CURSOR FOR
SELECT	distinct
	'O',
	nr_ordem_compra
from	ordem_compra_item
where	nr_seq_aprovacao	= nr_seq_aprovacao_p

union

select	distinct
	'S',
	nr_solic_compra
from	solic_compra_item
where	nr_seq_aprovacao	= nr_seq_aprovacao_p

union

select	distinct
	'R',
	nr_requisicao
from	item_requisicao_material
where	nr_seq_aprovacao	= nr_seq_aprovacao_p

union

select	distinct
	'C',
	nr_cot_compra
from	cot_compra_item
where	nr_seq_aprovacao	= nr_seq_aprovacao_p

union

select	distinct
	'N',
	nr_sequencia
from	nota_fiscal_item
where	nr_seq_aprovacao	= nr_seq_aprovacao_p

union

select	distinct
	'L',
	nr_seq_licitacao
from	reg_lic_item
where	nr_seq_aprovacao	= nr_seq_aprovacao_p

union

select	distinct
	'G',
	nr_sequencia
from	contrato
where	nr_seq_aprovacao	= nr_seq_aprovacao_p

union

select	distinct
	'A',
	nr_sequencia
from	processo_aprov_compra
where	nr_sequencia = nr_seq_aprovacao_p
and	nr_seq_proc_aprov	= nr_seq_processo_p

union

select distinct
	'E',
	nr_sequencia
from projeto_recurso
where nr_seq_aprovacao = nr_seq_aprovacao_p
order by 1;

c02 CURSOR FOR

SELECT	b.nr_sequencia,
	b.cd_perfil
from	regra_envio_comunic_compra a,
	regra_envio_comunic_evento b
where	a.nr_sequencia = b.nr_seq_regra
and	a.cd_funcao = 267
and	b.cd_evento = cd_evento_w
and	b.ie_situacao = 'A'
and	a.cd_estabelecimento = cd_estabelecimento_w
and	((cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '' AND b.cd_setor_destino = cd_setor_atendimento_w) or
	((coalesce(cd_setor_atendimento_w::text, '') = '') and (coalesce(b.cd_setor_destino::text, '') = '')) or (coalesce(b.cd_setor_destino::text, '') = ''))
and	((upper(ie_tipo_w) like '%SOLIC%') or (upper(ie_tipo_w) like '%ORDEM%') or (upper(ie_tipo_w) like '%REQUISICAO%'))
and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,nr_documento_w,ie_tipo_documento_w,obter_perfil_ativo,nm_usuario_p,null),1,1) = 'S';
	
c03 CURSOR FOR
SELECT	distinct
	nr_solic_compra
from (
	SELECT	nr_solic_compra
	from	cot_compra_item
	where	nr_cot_compra = nr_cot_compra_w
	
union

	select	nr_solic_compra
	from	cot_compra_solic_agrup
	where	nr_cot_compra = nr_cot_compra_w) alias0
where	(nr_solic_compra IS NOT NULL AND nr_solic_compra::text <> '');

c05 CURSOR FOR
SELECT	coalesce(a.cd_setor_atendimento,0) cd_setor_atendimento
from	regra_envio_comunic_usu a
where	a.nr_seq_evento = nr_seq_regra_w;


BEGIN

select	coalesce(max(obter_estab_processo_aprov(nr_seq_aprovacao_p)),0)
into STRICT	cd_estabelecimento_w
;

CALL consiste_se_compra_aprovada(nr_seq_aprovacao_p);

if (cd_estabelecimento_w > 0) then
	select	coalesce(ie_aprov_regra_minimo, 'N'),
            coalesce(ie_cancela_email_aprov,'N')
	into STRICT	ie_aprov_regra_minimo_w,
		ie_cancela_email_aprov_w
	from	parametro_compras
	where	cd_estabelecimento	= cd_estabelecimento_w;
end if;

select	coalesce(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),'0')
into STRICT	cd_pessoa_fisica_w
;

select	substr(obter_se_pessoa_delegacao(nr_seq_aprovacao_p,nr_seq_processo_p,cd_pessoa_fisica_w,'AC',clock_timestamp()),1,1)
into STRICT	ie_delegado_w
;

select	max(ds_observacao)
into STRICT	ds_observacao_w
from	processo_aprov_compra
where	nr_sequencia		= nr_seq_aprovacao_p
and	nr_seq_proc_aprov 	= nr_seq_processo_p;

if (coalesce(length(trim(both ds_observacao_w)),0) = 0) then
	ds_observacao_w := substr(ds_observacao_p,1,2000);
else
	ds_observacao_w := substr(ds_observacao_w || chr(13) || chr(10) || ds_observacao_p,1,2000);
end if;

if (ie_delegado_w = 'S') then

	select	obter_nome_pf(cd_pessoa_fisica_w)
	into STRICT	nm_pessoa_fisica_w
	;

	if (coalesce(length(trim(both ds_observacao_w)),0) = 0) then
		ds_observacao_w := substr(wheb_mensagem_pck.get_Texto(377074, 'NM_DELEGADO_W='|| nm_pessoa_fisica_w),1,2000); /*Reprovado pelo usuario delegado: #@NM_DELEGADO_W#@*/
	else
		ds_observacao_w := substr(ds_observacao_w || chr(13) || chr(10) || wheb_mensagem_pck.get_Texto(377074, 'NM_DELEGADO_W='|| nm_pessoa_fisica_w),1,2000);
														/*Reprovado pelo usuario delegado: #@NM_DELEGADO_W#@*/

	end if;
end if;

/*fabio 30/01/2006 os26514 - aprova todo o processo nao importando se existe outros*/

if (ie_aprov_regra_minimo_w in ('N','T')) then
	update	processo_aprov_compra
	set	dt_definicao 		= clock_timestamp(),
		ie_aprov_reprov 	= 'R',
		nm_usuario		= nm_usuario_p,
		nm_usuario_aprov	= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		ie_motivo_reprovacao	= ie_motivo_p,
		ds_observacao		= ds_observacao_w
	where	nr_sequencia		= nr_seq_aprovacao_p
	and	ie_aprov_reprov		<> 'R';
	
	CALL grava_hist_proc_aprov(nr_seq_aprovacao_p,nr_seq_processo_p,nm_usuario_p);
	
elsif (ie_aprov_regra_minimo_w = 'S') then
	update	processo_aprov_compra
	set	dt_definicao 		= clock_timestamp(),
		ie_aprov_reprov 	= 'R',
		nm_usuario		= nm_usuario_p,
		nm_usuario_aprov	= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		ie_motivo_reprovacao	= ie_motivo_p,
		ds_observacao		= ds_observacao_w
	where	nr_sequencia		= nr_seq_aprovacao_p
	and	nr_seq_proc_aprov	= nr_seq_processo_p;
	
	CALL grava_hist_proc_aprov(nr_seq_aprovacao_p,nr_seq_processo_p,nm_usuario_p);
	
elsif (ie_aprov_regra_minimo_w = 'A') then
	update	processo_aprov_compra
	set	dt_definicao 		= clock_timestamp(),
		ie_aprov_reprov 	= 'R',
		nm_usuario		= nm_usuario_p,
		nm_usuario_aprov	= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		ie_motivo_reprovacao	= ie_motivo_p,
		ds_observacao		= ds_observacao_w
	where	nr_sequencia		= nr_seq_aprovacao_p
	and	ie_aprov_reprov		<> 'A'; /*Nao deve mudar o status dos aprovados. Muda somente o que esta pendente*/
	
	CALL grava_hist_proc_aprov(nr_seq_aprovacao_p,nr_seq_processo_p,nm_usuario_p);

end if;

if (ie_cancela_email_aprov_w = 'S') then
	CALL cancelar_email_pend_proc_aprov(nr_seq_aprovacao_p,nr_seq_processo_p);
end if;

nm_usuarios_w			:= null;

open c01;
loop
fetch c01 into 	
	ie_tipo_w,
	nr_documento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	select	substr(Obter_Valor_Dominio_idioma(cd_dominio,vl_dominio,philips_param_pck.get_nr_seq_idioma),1,255)
	into STRICT	ds_motivo_w
	from	valor_dominio_v
	where	cd_dominio = 1015
	and	vl_dominio = ie_motivo_p;
	exception
	when no_data_found then
		ds_motivo_w 	:= '';
	end;
	
	if (ie_tipo_w = 'O') then
		nr_ordem_compra_w	:= nr_documento_w;
	end if;
	
	ds_motivo_ww 	:= substr(ds_motivo_w,1,255);
	ds_motivo_w 	:= substr(wheb_mensagem_pck.get_texto(306881,'DS_MOTIVO_W='||ds_motivo_w),1,255);
	
	if (ie_tipo_w	= 'R') then
	
		ie_tipo_w	:= wheb_mensagem_pck.get_Texto(388959); 	
	
		if (ie_aprov_regra_minimo_w = 'S') then
			select	count(*)
			into STRICT	qt_existe_w
			from	processo_aprov_compra
			where	nr_sequencia	= nr_seq_aprovacao_p
			and	ie_aprov_reprov	in ('P','E');
		end if;
		
		if	((ie_aprov_regra_minimo_w in ('N','A')) or
			(ie_aprov_regra_minimo_w = 'S' AND qt_existe_w = 0)) then

			update	item_requisicao_material
			set 	dt_reprovacao		= clock_timestamp(),
				cd_motivo_baixa		= 2,
				ie_motivo_reprovacao	= ie_motivo_p,
				ds_justificativa_reprov = substr(ds_observacao_p,1,255)
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;		

			select	count(*)
			into STRICT	nr_itens_w
			from	item_requisicao_material
			where	nr_requisicao = nr_documento_w
			and	obter_tipo_motivo_baixa_req(cd_motivo_baixa) = 0;

			if (nr_documento_w > 0) and (ie_tipo_w = wheb_mensagem_pck.get_Texto(388959)) then /*'Requisicao'*/
				CALL gerar_historico_requisicao(
					nr_documento_w,
					wheb_mensagem_pck.get_texto(306882),
					substr(wheb_mensagem_pck.get_Texto(356887, 'DS_OBSERVACAO_W='|| coalesce(ds_observacao_p,'-')),1,4000), /*Esta requisicao foi reprovada no processo de aprovacao. Observacao: #@DS_OBSERVACAO_W#@*/
					'RE',
					nm_usuario_p);
			end if;
			
			if (coalesce(nr_itens_w::text, '') = '') or (nr_itens_w = 0) then
				update	requisicao_material
				set	dt_baixa = clock_timestamp(),
					ds_observacao = substr(ds_observacao || CASE WHEN coalesce(ds_observacao,'0')='0' THEN  ''  ELSE chr(10) END  || ds_motivo_w,1,255)
				where nr_requisicao = nr_documento_w;
			end if;
		end if;	
	
	elsif (ie_tipo_w	= 'S') then

		ie_tipo_w	:= wheb_mensagem_pck.get_Texto(299882); /*'Solicitacao';*/
		
		if (ie_aprov_regra_minimo_w = 'S') then
			select	count(*)
			into STRICT	qt_existe_w
			from	processo_aprov_compra
			where	nr_sequencia	= nr_seq_aprovacao_p
			and	ie_aprov_reprov	in ('P','E');
		end if;
		
		if	((ie_aprov_regra_minimo_w in ('N','A')) or
			(ie_aprov_regra_minimo_w = 'S' AND qt_existe_w = 0)) then
			begin
			update	solic_compra_item
			set 	dt_baixa		= clock_timestamp(),
				dt_reprovacao		= clock_timestamp(),
				ie_motivo_reprovacao	= ie_motivo_p,
				ds_justificativa_reprov = substr(ds_observacao_p,1,255)
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;	

			select	count(*)
			into STRICT	nr_itens_w
			from	solic_compra_item
			where	nr_solic_compra = nr_documento_w
			and	coalesce(dt_baixa::text, '') = '';
			
			select	cd_setor_atendimento
			into STRICT	cd_setor_atendimento_w
			from	solic_compra
			where	nr_solic_compra = nr_documento_w;
			
			if (coalesce(nr_itens_w::text, '') = '') or (nr_itens_w = 0) then
				update	solic_compra
				set	dt_baixa = clock_timestamp(),
					ds_observacao = substr(substr(ds_observacao,1,2000) || CASE WHEN coalesce(ds_observacao,'0')='0' THEN  ''  ELSE chr(10) END  || ds_motivo_w,1,4000)
				where nr_solic_compra = nr_documento_w;
			end if;
		
			if (nr_documento_w > 0) and (ie_tipo_w = wheb_mensagem_pck.get_Texto(299882))  then
			
				CALL gerar_historico_solic_compra(
					nr_documento_w,
					wheb_mensagem_pck.get_texto(306882),
					substr(wheb_mensagem_pck.get_texto(356900,'DS_OBSERVACAO_W='|| coalesce(ds_observacao_p,'-')),1,4000), /*Esta solicitacao foi reprovada no processo de aprovacao. Observacao: #@DS_OBSERVACAO_W#@*/
					'O',
					nm_usuario_p);
			end if;
			
			select	coalesce(max(nr_requisicao),0)
			into STRICT	nr_requisicao_w
			from	solic_compra_item
			where	nr_seq_aprovacao = nr_seq_aprovacao_p;
			
			if (nr_requisicao_w > 0) then
				CALL gerar_historico_requisicao(
					nr_requisicao_w,
					wheb_mensagem_pck.get_texto(306886),
					wheb_mensagem_pck.get_texto(306888,'NR_DOCUMENTO_W='||nr_documento_w),
					'RS',
					nm_usuario_p);
			end if;
			end;
		end if;

		CALL envia_email_solic_reprov(nr_seq_aprovacao_p,nr_seq_processo_p,cd_estabelecimento_w,nm_usuario_p);
	
	elsif (ie_tipo_w	= 'N') then

		ie_tipo_w	:= wheb_mensagem_pck.get_Texto(388952); /*'Nota';*/
		
		if (ie_aprov_regra_minimo_w = 'S') then
			select	count(*)
			into STRICT	qt_existe_w
			from	processo_aprov_compra
			where	nr_sequencia	= nr_seq_aprovacao_p
			and	ie_aprov_reprov	in ('P','E');
		end if;
		
		if	((ie_aprov_regra_minimo_w in ('N','A')) or
			(ie_aprov_regra_minimo_w = 'S' AND qt_existe_w = 0)) then
			begin
			update	nota_fiscal_item
			set 	dt_reprovacao		= clock_timestamp(),
				ie_motivo_reprovacao	= ie_motivo_p,
				ds_justificativa_reprov = substr(ds_observacao_p,1,255)
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;	

						
			if (nr_documento_w > 0) and (ie_tipo_w = wheb_mensagem_pck.get_Texto(388952))  then
			
				 CALL gerar_historico_nota_fiscal(
					nr_documento_w,
					nm_usuario_p,
					'45',
					substr(wheb_mensagem_pck.get_Texto(356901, 'DS_OBSERVACAO_W='|| coalesce(ds_observacao_p,'-')),1,255)); /*Esta nota fiscal foi reprovada no processo de aprovacao. Observacao: #@DS_OBSERVACAO_W#@*/
				
			end if;
			end;
		end if;
	
	elsif (ie_tipo_w	= 'L') then

		ie_tipo_w	:= wheb_mensagem_pck.get_Texto(388955); /*'Licitacao';*/
		
		if (ie_aprov_regra_minimo_w = 'S') then
			select	count(*)
			into STRICT	qt_existe_w
			from	processo_aprov_compra
			where	nr_sequencia	= nr_seq_aprovacao_p
			and	ie_aprov_reprov	in ('P','E');
		end if;
		
		if	((ie_aprov_regra_minimo_w in ('N','A')) or
			(ie_aprov_regra_minimo_w = 'S' AND qt_existe_w = 0)) then
			begin
			update	reg_lic_item
			set 	dt_reprovacao		= clock_timestamp(),
				ie_motivo_reprovacao	= ie_motivo_p,
				ds_justificativa_reprov = substr(ds_observacao_p,1,255)
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;	

						
			if (nr_documento_w > 0) and (ie_tipo_w = wheb_mensagem_pck.get_Texto(388955))  then
				
				insert into reg_lic_historico(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					ie_tipo_historico,
					ds_observacao,
					nr_seq_licitacao)
				values (	nextval('reg_lic_historico_seq'),
					clock_timestamp(),
					nm_usuario_p,
					'RE',
					substr(wheb_mensagem_pck.get_Texto(356902, 'DS_OBSERVACAO_W='|| coalesce(ds_observacao_p,'-')),1,255), /*Esta licitacao foi reprovada no processo de aprovacao. Observacao: #@DS_OBSERVACAO_W#@*/
					nr_documento_w);
				
				
			end if;
			end;
		end if;
	
	elsif (ie_tipo_w	= 'C') then

		ie_tipo_w	:= wheb_mensagem_pck.get_Texto(388958);	/*'Cotacao';*/
		
		if (ie_aprov_regra_minimo_w = 'S') then
			select	count(*)
			into STRICT	qt_existe_w
			from	processo_aprov_compra
			where	nr_sequencia	= nr_seq_aprovacao_p
			and	ie_aprov_reprov	in ('P','E');
		end if;
		
		if	((ie_aprov_regra_minimo_w in ('N','A')) or
			(ie_aprov_regra_minimo_w = 'S' AND qt_existe_w = 0)) then

			update	cot_compra_item
			set 	dt_reprovacao		= clock_timestamp(),
				ie_motivo_reprovacao	= ie_motivo_p,
				ds_justificativa_reprov = substr(ds_observacao_p,1,255)
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
			
			if (nr_documento_w > 0)  and (ie_tipo_w = wheb_mensagem_pck.get_Texto(388958)) then
				CALL gerar_hist_cotacao_sem_commit(
					nr_documento_w,
					wheb_mensagem_pck.get_texto(306882),
					substr(wheb_mensagem_pck.get_Texto(356903, 'DS_OBSERVACAO_W='|| coalesce(ds_observacao_p,'-')),1,4000),/*Esta cotacao foi reprovada no processo de aprovacao. Observacao: #@DS_OBSERVACAO_W#@*/
					'S',
					nm_usuario_p);			
			end if;			
		end if;

		CALL envia_email_cot_reprov(nr_seq_aprovacao_p,nr_seq_processo_p,cd_estabelecimento_w,nm_usuario_p);

	elsif (ie_tipo_w	= 'O') then
		begin
		
		select	coalesce(cd_setor_atendimento,0),
			substr(obter_dados_usuario_opcao(obter_usuario_pessoa(cd_pessoa_solicitante),'E'),1,255),
			substr(obter_desc_cond_pagto(cd_condicao_pagamento),1,255)
		into STRICT	cd_setor_atendimento_w,
			ds_email_pessoa_ordem_w,
			ds_cond_pagto_w
		from	ordem_compra
		where	nr_ordem_compra = nr_documento_w;
		
		ie_tipo_w	:= wheb_mensagem_pck.get_Texto(388956); /*'Ordem';*/
		
		if (ie_aprov_regra_minimo_w = 'S') then
			select	count(*)
			into STRICT	qt_existe_w
			from	processo_aprov_compra
			where	nr_sequencia	= nr_seq_aprovacao_p
			and	ie_aprov_reprov	in ('P','E');
		end if;
		
		if	((ie_aprov_regra_minimo_w in ('N','A')) or
			(ie_aprov_regra_minimo_w = 'S' AND qt_existe_w = 0)) then
			begin
			update	ordem_compra_item
			set	dt_reprovacao		= clock_timestamp(),
				dt_reprovacao_orig	= clock_timestamp(),
				ie_motivo_reprovacao	= ie_motivo_p,
				ds_justificativa_reprov = substr(ds_observacao_p,1,255)
			where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
		
			select	coalesce(max(nr_ordem_compra),0)
			into STRICT	nr_ordem_compra_venc_w
			from	ordem_compra_item
			where	nr_seq_aprovacao = nr_seq_aprovacao_p;
		
			begin
				CALL Gerar_Ordem_Compra_Venc(nr_ordem_compra_w, nm_usuario_p);
			exception
			when others then
				nr_ordem_compra_venc_w := nr_ordem_compra_venc_w;
			end;			

			select	count(*)
			into STRICT	nr_itens_w
			from	ordem_compra_item
			where	nr_ordem_compra = nr_documento_w
			  and (coalesce(dt_reprovacao::text, '') = '' and coalesce(dt_aprovacao::text, '') = '')
			  and	nr_seq_aprovacao <> nr_seq_aprovacao_p;
			
			if (coalesce(nr_itens_w::text, '') = '') or (nr_itens_w = 0) then
				update	ordem_compra
				set	dt_baixa = clock_timestamp(),
					ds_observacao = substr(substr(ds_observacao,1,3970) || CASE WHEN coalesce(ds_observacao,'0')='0' THEN  ''  ELSE chr(10) END  || ds_motivo_w,1,4000)
				where	nr_ordem_compra = nr_documento_w;
			end if;
			
			if (nr_documento_w > 0)  and (ie_tipo_w = wheb_mensagem_pck.get_Texto(388956)) then
				
				begin				
				CALL inserir_historico_ordem_compra(
					nr_documento_w,
					'S',
					wheb_mensagem_pck.get_texto(306882),
					substr(wheb_mensagem_pck.get_Texto(356904, 'DS_OBSERVACAO_W='|| coalesce(ds_observacao_p,'-')),1,4000),/*Esta ordem foi reprovada no processo de aprovacao. Observacao: #@DS_OBSERVACAO_W#@*/
					nm_usuario_p);
				exception when others then
					nr_documento_w := nr_documento_w;
				end;
			end if;			
			end;
		end if;
		end;

    	
    -- pensei que para o contrato nao vai precisar de ie_aprov_regra_minimo_w e mais simples pegar qual o tipo do documento para reprovar ou aprovar (?)
    elsif (ie_tipo_w = 'G') then
    
        update	processo_aprov_compra
        set	dt_definicao 		= clock_timestamp(),
            ie_aprov_reprov 	= 'R',
            nm_usuario		= nm_usuario_p,
            nm_usuario_aprov	= nm_usuario_p,
            dt_atualizacao		= clock_timestamp(),
            ie_motivo_reprovacao	= ie_motivo_p,
            ds_observacao		= ds_observacao_w
        where	nr_sequencia		= nr_seq_aprovacao_p
        and	ie_aprov_reprov		<> 'R';

        update	contrato
        set	dt_reprovacao		= clock_timestamp(),
            ds_justificativa_reprov = ds_observacao_w,
            ie_motivo_reprovacao	= ie_motivo_p,
            nm_usuario_aprov 	= nm_usuario_p,
            nr_seq_proc_aprov	= nr_seq_processo_p,
	    ie_estagio = 'E',
	    dt_fim = dt_inicio
        where	nr_seq_aprovacao = nr_seq_aprovacao_p;

        CALL grava_hist_proc_aprov(nr_seq_aprovacao_p,nr_seq_processo_p,nm_usuario_p);

	elsif (ie_tipo_w = 'E') then
	
        update	processo_aprov_compra
        set	dt_definicao 		= clock_timestamp(),
            ie_aprov_reprov 	= 'R',
            nm_usuario		= nm_usuario_p,
            nm_usuario_aprov	= nm_usuario_p,
            dt_atualizacao		= clock_timestamp(),
            ie_motivo_reprovacao	= ie_motivo_p,
            ds_observacao		= ds_observacao_w
        where	nr_sequencia		= nr_seq_aprovacao_p
        and	ie_aprov_reprov		<> 'R';
		
		update projeto_recurso
		set dt_reprovacao		= clock_timestamp(),
			ie_motivo_reprovacao	= ie_motivo_p,
			ds_justificativa_reprov = ds_observacao_w,
			nm_usuario_aprov 	= nm_usuario_p,
			dt_suspensa			= clock_timestamp()
		where nr_seq_aprovacao = nr_seq_aprovacao_p;
		
		CALL grava_hist_proc_aprov(nr_seq_aprov_compra_p => nr_seq_aprovacao_p,nr_seq_proc_aprov_p => nr_seq_processo_p,nm_usuario_p => nm_usuario_p);
	end if;

end loop;
close c01;

select	CASE WHEN ie_tipo_w='O' THEN 'OC' WHEN ie_tipo_w='S' THEN 'SC' WHEN ie_tipo_w='R' THEN 'RM' WHEN ie_tipo_w='C' THEN 'CC' WHEN ie_tipo_w='N' THEN 'NF' WHEN ie_tipo_w='L' THEN 'L' WHEN ie_tipo_w='X' THEN  'G' END
into STRICT	ie_tipo_documento_w
;

cd_evento_w := 2;

open c02;
loop
fetch c02 into	
	nr_seq_regra_w,
	cd_perfil_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	ds_titulo_w	:= '';
	ds_comunicado_w	:= '';

	select	substr(obter_dados_regra_com_compra(nr_seq_aprovacao_p, nr_seq_processo_p, 267, 2, nr_seq_regra_w,'T'),1,2000) ds_titulo,
		substr(obter_dados_regra_com_compra(nr_seq_aprovacao_p, nr_seq_processo_p, 267, 2, nr_seq_regra_w,'M'),1,2000) ds_comunicado
	into STRICT	ds_titulo_w,
		ds_comunicado_w
	;
	
	select	count(*)
	into STRICT	qt_regra_usuario_w
	from	regra_envio_comunic_compra a,
		regra_envio_comunic_evento b,
		regra_envio_comunic_usu c
	where	a.nr_sequencia = b.nr_seq_regra
	and	b.nr_sequencia = c.nr_seq_evento
	and	b.nr_sequencia = nr_seq_regra_w;

	select	coalesce(ie_ci_lida,'N')
	into STRICT	ie_ci_lida_w
	from 	regra_envio_comunic_evento
	where 	nr_sequencia = nr_seq_regra_w;

	if (qt_regra_usuario_w > 0) then
		begin
			nm_usuarios_w := obter_usuarios_comunic_compras(nr_seq_aprovacao_p,nr_seq_processo_p,2,nr_seq_regra_w,'');		
		exception when others then
			nm_usuarios_w := '';
		end;
	end if;
	
	if (nm_usuarios_w IS NOT NULL AND nm_usuarios_w::text <> '') then
	
		select	obter_classif_comunic('F')
		into STRICT	nr_seq_classif_w
		;
		
		select	nextval('comunic_interna_seq')
		into STRICT	nr_sequencia_w	
		;
		
		if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then
			cd_perfil_w := cd_perfil_w ||',';
		end if;
				
		insert	into comunic_interna(
			dt_comunicado,			ds_titulo,			ds_comunicado,
			nm_usuario,			dt_atualizacao,		ie_geral,
			nm_usuario_destino,		nr_sequencia,		ie_gerencial,
			nr_seq_classif,			dt_liberacao,		ds_perfil_adicional)
		values (clock_timestamp(),				ds_titulo_w,		ds_comunicado_w,
			nm_usuario_p,			clock_timestamp(),			'N',
			nm_usuarios_w,			nr_sequencia_w,		'N',
			nr_seq_classif_w,			clock_timestamp(),	cd_perfil_w);

		/*para que a comunicacao seja gerada como lida ao proprio usuario */

		if (ie_ci_lida_w = 'S') then
			insert into comunic_interna_lida(nr_sequencia,nm_usuario,dt_atualizacao)values (nr_sequencia_w,nm_usuario_p,clock_timestamp());
		end if;
	end if;

	end;
end loop;
close c02;

if (ie_tipo_w = wheb_mensagem_pck.get_Texto(388956)) then /*Ordem*/
	select	count(*)
	into STRICT	qt_existe_padronizado_w
	from	ordem_compra_item
	where	nr_ordem_compra = nr_documento_w
	and	obter_se_material_padronizado(cd_estabelecimento_w,cd_material) = 'N';

	if (qt_existe_padronizado_w > 0) then
	
		cd_evento_w := 12;
		open c02;
		loop
		fetch c02 into	
			nr_seq_regra_w,
			cd_perfil_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			
			ds_titulo_w := '';
			ds_comunicado_w := '';
			
			select	substr(obter_dados_regra_com_compra(nr_seq_aprovacao_p, nr_seq_processo_p, 267, 12, nr_seq_regra_w,'T'),1,2000) ds_titulo,
				substr(obter_dados_regra_com_compra(nr_seq_aprovacao_p, nr_seq_processo_p, 267, 12, nr_seq_regra_w,'M'),1,2000) ds_comunicacao
			into STRICT	ds_titulo_w,
				ds_comunicado_w
			;

			select	count(*)
			into STRICT	qt_regra_usuario_w
			from	regra_envio_comunic_compra a,
				regra_envio_comunic_evento b,
				regra_envio_comunic_usu c
			where	a.nr_sequencia = b.nr_seq_regra
			and	b.nr_sequencia = c.nr_seq_evento
			and	b.nr_sequencia = nr_seq_regra_w;

			open c05;
			loop
			fetch c05 into
				cd_setor_regra_usuario_w;
			EXIT WHEN NOT FOUND; /* apply on c05 */
				begin
				if (cd_setor_regra_usuario_w <> 0) and (obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N') then
					ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
				end if;
				end;
			end loop;
			close c05;

			select	coalesce(ie_ci_lida,'N')
			into STRICT	ie_ci_lida_w
			from 	regra_envio_comunic_evento
			where 	nr_sequencia = nr_seq_regra_w;

			nm_usuarios_w := '';
			
			if (qt_regra_usuario_w > 0) then
				begin
					nm_usuarios_w := obter_usuarios_comunic_compras(nr_seq_aprovacao_p,null,12,nr_seq_regra_w,'');
				exception when others then
					nm_usuarios_w := '';
				end;
			end if;

			if (nm_usuarios_w IS NOT NULL AND nm_usuarios_w::text <> '') then
	
				select	obter_classif_comunic('F')
				into STRICT	nr_seq_classif_w
				;
				
				
				select	nextval('comunic_interna_seq')
				into STRICT	nr_sequencia_w	
				;
			
				if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then
					cd_perfil_w := cd_perfil_w ||',';
				end if;
				
				insert	into comunic_interna(
					dt_comunicado,				ds_titulo,				ds_comunicado,
					nm_usuario,				dt_atualizacao,			ie_geral,
					nm_usuario_destino,			nr_sequencia,			ie_gerencial,
					nr_seq_classif,				dt_liberacao,			ds_perfil_adicional,
					ds_setor_adicional)
				values (	clock_timestamp(),					ds_titulo_w,			ds_comunicado_w,		
					nm_usuario_p,				clock_timestamp(),				'N',
					nm_usuarios_w,				nr_sequencia_w,			'N',
					nr_seq_classif_w,				clock_timestamp(),		cd_perfil_w,
					ds_setor_adicional_w);

				if (ie_ci_lida_w = 'S') then
					insert into comunic_interna_lida(nr_sequencia,nm_usuario,dt_atualizacao)values (nr_sequencia_w,nm_usuario_p,clock_timestamp());
				end if;	

			end if;			
			end;
		end loop;
		close c02;
	end if;	
	
	/*procedimento de envio de email*/

	select	coalesce(max(nr_sequencia),0),
		max(replace(ds_email_adicional,',',';')),
		coalesce(max(ds_email_remetente),'X'),
		coalesce(max(ie_momento_envio),'I')
	into STRICT	nr_seq_regra_w,
		ds_email_adicional_w,
		ds_email_remetente_w,
		ie_momento_envio_w
	from	regra_envio_email_compra
	where	ie_tipo_mensagem = 25
	and	ie_situacao = 'A'
	and	cd_estabelecimento = cd_estabelecimento_w
	and	obter_se_envia_email_regra(nr_documento_w, 'AP', 25, cd_estabelecimento_w, 0, nr_seq_aprovacao_p, nr_seq_processo_p) = 'S';
	
	if (nr_seq_regra_w > 0) then
	
		select	max(coalesce(nr_cot_compra,0))
		into STRICT	nr_cot_compra_w
		from	ordem_compra_item
		where	nr_ordem_compra = nr_documento_w;
		
		if (nr_cot_compra_w > 0) then
			select	substr(obter_dados_usuario_opcao(obter_usuario_pessoa(cd_pessoa_solicitante),'E'),1,255)
			into STRICT	ds_email_pessoa_cotacao_w
			from	cot_compra
			where	nr_cot_compra = nr_cot_compra_w;
		
			open c03;
			loop
			fetch c03 into	
				nr_solic_compra_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				begin
				select	substr(obter_dados_usuario_opcao(obter_usuario_pessoa(cd_pessoa_solicitante),'E'),1,255)
				into STRICT	ds_email_pessoa_solic_w
				from	solic_compra
				where	nr_solic_compra = nr_solic_compra_w;
				
				if (ds_email_pessoa_solic_w IS NOT NULL AND ds_email_pessoa_solic_w::text <> '') and (obter_se_contido_char(ds_email_pessoa_solic_w,replace(ds_lista_email_w,';',',')) = 'N') then
					ds_lista_email_w := substr(ds_lista_email_w || ds_email_pessoa_solic_w || ';',1,255);
				end if;
				end;
			end loop;
			close c03;
			
			if (ds_email_pessoa_cotacao_w IS NOT NULL AND ds_email_pessoa_cotacao_w::text <> '') and (obter_se_contido_char(ds_email_pessoa_cotacao_w,replace(ds_lista_email_w,';',',')) = 'N') then
				ds_lista_email_w := substr(ds_lista_email_w || ds_email_pessoa_cotacao_w || ';',1,255);
			end if;		
		end if;
		
		if (ds_email_pessoa_ordem_w IS NOT NULL AND ds_email_pessoa_ordem_w::text <> '') and (obter_se_contido_char(ds_email_pessoa_ordem_w,replace(ds_lista_email_w,';',',')) = 'N') then
			ds_lista_email_w := substr(ds_lista_email_w || ds_email_pessoa_ordem_w || ';',1,255);
		end if;

		select	substr(
		replace(
		replace(
		replace(
		replace(ds_assunto,
			'@ordem',coalesce(nr_ordem_compra_w,nr_documento_w)),
			'@motivo',ds_motivo_ww),
			'@ds_cond_pagto',ds_cond_pagto_w),
			'@observacao',ds_observacao_p),1,255),
		substr(
		replace(
		replace(
		replace(
		replace(ds_mensagem_padrao,
			'@ordem',coalesce(nr_ordem_compra_w,nr_documento_w)),
			'@motivo',ds_motivo_ww),
			'@ds_cond_pagto',ds_cond_pagto_w),
			'@observacao',ds_observacao_p),1,2000)
		into STRICT	ds_assunto_w,
			ds_mensagem_w
		from	regra_envio_email_compra
		where	nr_sequencia = nr_seq_regra_w;
		
		select	coalesce(max(ie_usuario),'U'),
			max(cd_perfil_disparar)
		into STRICT	ie_usuario_w,
			cd_perfil_disparar_w
		from	regra_envio_email_compra
		where	nr_sequencia = nr_seq_regra_w;

		if (ie_usuario_w = 'U') then --usuario
			select	ds_email,
				nm_usuario
			into STRICT	ds_email_origem_w,
				ds_usuario_origem_w
			from	usuario
			where	nm_usuario = nm_usuario_p;
		elsif (ie_usuario_w = 'C') then --setor compras
			select	ds_email
			into STRICT	ds_email_origem_w
			from	parametro_compras
			where	cd_estabelecimento = cd_estabelecimento_w;
			
			select	coalesce(ds_fantasia,ds_razao_social)
			into STRICT	ds_usuario_origem_w
			from	estabelecimento_v
			where	cd_estabelecimento = cd_estabelecimento_w;
		elsif (ie_usuario_w = 'O') then --comprador
			ds_email_origem_w		:= ds_email_comprador_w;
			ds_usuario_origem_w	:= ds_usuario_comprador_w;
		end if;		
					
		ds_lista_email_w := substr(ds_lista_email_w,1,length(ds_lista_email_w) -1);

		if (ds_email_adicional_w IS NOT NULL AND ds_email_adicional_w::text <> '') and
			((coalesce(cd_perfil_disparar_w::text, '') = '') or
			(cd_perfil_disparar_w IS NOT NULL AND cd_perfil_disparar_w::text <> '' AND cd_perfil_disparar_w = obter_perfil_ativo)) then
			ds_lista_email_w := substr(ds_lista_email_w || ';' || ds_email_adicional_w,1,255);
		end if;

		if (ds_email_remetente_w <> 'X') then
			ds_email_origem_w	:= ds_email_remetente_w;
		end if;
		
		if (ie_momento_envio_w = 'A') then
			begin

			CALL sup_grava_envio_email(
				'OC',
				'25',
				nr_documento_w,
				null,
				null,
				ds_lista_email_w,
				ds_usuario_origem_w,
				ds_email_origem_w,
				ds_assunto_w,
				ds_mensagem_w,
				cd_estabelecimento_w,
				nm_usuario_p);

			end;
		else
			CALL enviar_email(ds_assunto_w,ds_mensagem_w,ds_email_origem_w,ds_lista_email_w,ds_usuario_origem_w,'M');	
		end if;
	end if;	
	/*fim do procedimento de envio de email*/
		
end if;

CALL aprovar_solic_ordem_compra(nr_seq_aprovacao_p, nm_usuario_p);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE reprovar_compra ( nr_seq_aprovacao_p bigint, nr_seq_processo_p bigint, nm_usuario_p text, ie_motivo_p text, ie_reprovar_todos_p text, ds_observacao_p text) FROM PUBLIC;

