-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_gerar_w_guia_solic_int (nr_sequencia_autor_p bigint, nr_atendimento_p bigint, nr_seq_gestao_vaga_p bigint, nr_seq_agenda_p bigint, ds_dir_padrao_p text, nm_usuario_p text, nr_seq_exame_p bigint, nr_prescr_tiss_p bigint, ie_dados_autorizados_p text DEFAULT 'N', nr_prescricoes_p text DEFAULT NULL, ie_mensagem_proc_p text default 'S') AS $body$
DECLARE


cd_pessoa_fisica_w	varchar(10);
nm_pessoa_fisica_w	varchar(150);
nr_cartao_nac_sus_w	numeric(22);
ds_plano_w		varchar(40);
dt_validade_carteira_w	timestamp;
cd_usuario_convenio_w	varchar(30);
cd_ans_w		varchar(100);
nr_seq_protocolo_w	bigint;
nr_atendimento_w		bigint;
nr_interno_conta_w	bigint;
cd_autorizacao_w		varchar(100);
cd_procedimento_w	varchar(200);
qt_proc_guia_w		smallint;
cd_senha_w		varchar(100);
cd_medico_executor_w	varchar(10);
dt_inicio_vigencia_w	timestamp;
dt_final_vigencia_w	timestamp;
nr_seq_guia_w		bigint;
nr_cpf_w			varchar(15);
nm_medico_executor_w	varchar(255);
sg_conselho_w		varchar(15);
nr_crm_w		varchar(20);
uf_crm_w		valor_dominio.vl_dominio%type;
cd_cbo_saude_w		varchar(20);
ie_tipo_atendimento_w	varchar(20);
ie_tipo_saida_w		varchar(20);
cd_edicao_amb_w		varchar(100);
qt_procedimento_w	double precision;
vl_reducao_acrescimo_w	double precision;
ds_observacao_w		varchar(4000);
ds_obs_w		varchar(4000);
vl_procedimento_w		double precision;
cd_categoria_conv_w	varchar(20);
dt_entrada_w		timestamp;
dt_alta_w			timestamp;
ie_via_acesso_w		varchar(20);
vl_unitario_w		double precision;
ds_procedimento_w	varchar(255);
dt_procedimento_w	timestamp;
vl_total_w		double precision := 0;
cont_w			integer := 0;
ds_razao_social_w		varchar(255);
cd_cnes_w		varchar(20);
cd_cgc_w			varchar(20);
qt_solicitada_w		double precision;
qt_autorizada_w		double precision;
dt_autorizacao_w		timestamp;
cd_doenca_cid_w		varchar(20);
cd_doenca_cid_autor_w	varchar(20);
ds_indicacao_w		w_tiss_solicitacao.ds_indicacao%type;
ie_tipo_autorizacao_w	varchar(3);
ds_arquivo_logo_w		varchar(140);
cd_opm_w		varchar(20);
cd_edicao_w		varchar(20);
ds_opm_w		varchar(255);
cont_proced_W		bigint;
nr_seq_apresentacao_w	bigint;
nr_seq_guia_prorrog_w	bigint;
nr_sequencia_autor_w	bigint;
cont_opm_w		bigint;
cont_proc_w		bigint;
qt_prorrog_guia_w		smallint;
cd_interno_w		varchar(15);
cd_convenio_w		integer;
cd_medico_convenio_w	varchar(20);
ie_tipo_doenca_w		varchar(40);
ie_unidade_tempo_w	varchar(40);
qt_tempo_w		bigint;
ie_tipo_acidente_w		varchar(40);
cd_estabelecimento_w	bigint;
cd_cgc_fabricante_w	varchar(14);
ie_clinica_w		bigint;
ds_arquivo_logo_comp_w	varchar(255);
cd_medico_solic_tiss_w	varchar(10);
ie_gerar_tiss_w		varchar(10);
nr_seq_classif_atend_w	bigint;
vl_opm_w		double precision;
cd_setor_entrada_w	bigint;
ie_guia_solic_inte_proc_w	varchar(255);
ds_versao_w		varchar(20);
ie_atendimento_rn_w	varchar(10);
cd_autorizacao_prest_w	autorizacao_convenio.cd_autorizacao_prest%type;
im_logo_convenio_w	tiss_logo_convenio.im_logo_convenio%type;

c05 CURSOR FOR
SELECT	a.nr_sequencia
from	autorizacao_convenio a,
	estagio_autorizacao b
where	a.nr_seq_estagio	= b.nr_sequencia
and	b.ie_interno		not in ('70') --Cancelado
and	a.nr_sequencia		= nr_sequencia_autor_p
and	((a.ie_tipo_autorizacao	= '1') or
	 ((a.ie_tipo_autorizacao 	in ('3','5')) and (ie_guia_solic_inte_proc_w = 'S') and (exists (SELECT	1 from procedimento_autorizado x where x.nr_sequencia_autor = a.nr_sequencia))))

union

select	a.nr_sequencia
from	autorizacao_convenio a,
	estagio_autorizacao b
where	a.nr_seq_estagio		= b.nr_sequencia
and	b.ie_interno			not in ('70') --Cancelado
and (a.nr_atendimento		= nr_atendimento_p and
	 coalesce(nr_sequencia_autor_p, -1) 	<= 0 and
	 coalesce(nr_prescr_tiss_p,-1)	<= 0)
and	((a.ie_tipo_autorizacao	= '1') or
	 ((a.ie_tipo_autorizacao 	in ('3','5')) and (ie_guia_solic_inte_proc_w = 'S') and (exists (select	1 from procedimento_autorizado x where x.nr_sequencia_autor = a.nr_sequencia))))

union

select	a.nr_sequencia
from	autorizacao_convenio a,
	estagio_autorizacao b
where	a.nr_seq_estagio		= b.nr_sequencia
and	b.ie_interno			not in ('70') --Cancelado
and (a.nr_seq_gestao			= nr_seq_gestao_vaga_p and 
	coalesce(nr_atendimento_p,-1) 	<= 0 and	
	coalesce(nr_prescr_tiss_p,-1)	<= 0)
and	((a.ie_tipo_autorizacao	= '1') or
	 ((a.ie_tipo_autorizacao 	in ('3','5')) and (ie_guia_solic_inte_proc_w = 'S') and (exists (select	1 from procedimento_autorizado x where x.nr_sequencia_autor = a.nr_sequencia))))

union

select	a.nr_sequencia
from	autorizacao_convenio a,
	estagio_autorizacao b
where	a.nr_seq_estagio		= b.nr_sequencia
and	b.ie_interno			not in ('70') --Cancelado
and (a.nr_seq_agenda		= nr_seq_agenda_p and 
	coalesce(nr_atendimento_p,-1) 	<= 0 and
	coalesce(nr_prescr_tiss_p,-1)	<= 0)
and	((a.ie_tipo_autorizacao	= '1') or
	 ((a.ie_tipo_autorizacao 	in ('3','5')) and (ie_guia_solic_inte_proc_w = 'S') and (exists (select	1 from procedimento_autorizado x where x.nr_sequencia_autor = a.nr_sequencia))))

union

select	a.nr_sequencia
from	autorizacao_convenio a,
	estagio_autorizacao b
where	a.nr_seq_estagio		= b.nr_sequencia
and	b.ie_interno			not in ('70') --Cancelado
and	a.nr_prescricao			= nr_prescr_tiss_p
and (coalesce(nr_prescricoes_p, '-1')  = '-1'
	or to_char(nr_prescr_tiss_p) = nr_prescricoes_p)
and	a.ie_tipo_autorizacao 		in ('3','5')
and 	ie_guia_solic_inte_proc_w 	= 'S'
and	exists (select 1 from procedimento_autorizado x where x.nr_sequencia_autor = a.nr_sequencia)

union

select	a.nr_sequencia
from	autorizacao_convenio a,
	estagio_autorizacao b
where	a.nr_seq_estagio		= b.nr_sequencia
and	b.ie_interno			not in ('70') --Cancelado
and	coalesce(nr_prescr_tiss_p,-1)	<= 0
and	Obter_Se_Contido(a.nr_prescricao, nr_prescricoes_p) = 'S'
and	a.ie_tipo_autorizacao 		in ('3','5')
and 	ie_guia_solic_inte_proc_w 	= 'S'
and	exists (select 1 from procedimento_autorizado x where x.nr_sequencia_autor = a.nr_sequencia);


c01 CURSOR FOR
SELECT	cd_procedimento_convenio,
	ds_procedimento,
	qt_solicitada,
	qt_autorizada,
	cd_edicao_relat
from	tiss_proc_solicitado_v
where	nr_sequencia_autor	= nr_sequencia_autor_w
and	ds_versao		= '2.01.01';

c02 CURSOR FOR
SELECT	cd_procedimento_convenio,
	cd_edicao_amb,
	ds_procedimento,
	qt_solicitada,
	qt_autorizada,
	cd_cgc_fabricante,
	vl_unitario
from	tiss_opm_solicitado_v
where	ds_versao		= '2.01.01'
and	ie_origem		= 'AC'
and	nr_sequencia_autor	= nr_sequencia_autor_w;

c03 CURSOR FOR
SELECT	nr_sequencia
from	autorizacao_convenio
where	(nr_seq_autor_origem IS NOT NULL AND nr_seq_autor_origem::text <> '')
and	nr_seq_autor_origem	= nr_sequencia_autor_w
order by dt_autorizacao desc;

c04 CURSOR FOR
SELECT	cd_procedimento,
	ds_procedimento,
	qt_solicitada,
	qt_autorizada,
	cd_edicao_relat
from	tiss_proc_solicitado_v
where	nr_sequencia_autor	= nr_sequencia_autor_w
and	ds_versao		= '2.01.01'  LIMIT 2;

c06 CURSOR FOR
SELECT	coalesce(substr(TISS_OBTER_PROCED_CONVERSAO(e.cd_convenio,a.cd_procedimento,a.ie_origem_proced,'C'),1,50),
		coalesce(coalesce(coalesce(a.cd_procedimento, b.cd_procedimento),
		coalesce(Obter_Cod_Proc_Interno_conv(b.nr_proc_interno, e.cd_convenio, e.cd_categoria, clock_timestamp(), j.cd_estabelecimento),
		    Obter_Cod_Proc_Interno_conv(a.nr_proc_interno, e.cd_convenio, e.cd_categoria, clock_timestamp(), j.cd_estabelecimento))),
	        Lab_Obter_Dados_Exame(a.NR_SEQ_EXAME_LAB, 'P'))) cd_procedimento,
	substr(coalesce(TISS_OBTER_PROCED_CONVERSAO(e.cd_convenio,a.cd_procedimento,a.ie_origem_proced,'D'),
		coalesce(Obter_Med_Exame_Externo(a.nr_sequencia),
		coalesce(obter_descricao_procedimento(a.cd_procedimento, a.ie_origem_proced),
		obter_descricao_procedimento(b.cd_procedimento, b.ie_origem_proced)))),1,254) ds_procedimento,
	sum(a.qt_exame) qt_solicitada,
	sum(a.qt_exame) qt_autorizada,
	TISS_OBTER_TABELA(Obter_Edicao(j.cd_estabelecimento,e.cd_convenio,e.cd_categoria,clock_timestamp(),a.cd_procedimento),j.cd_estabelecimento,e.cd_convenio,e.cd_categoria,clock_timestamp(),'R',null,a.cd_procedimento,a.ie_origem_proced,null,null,j.nr_atendimento,a.nr_proc_interno, a.nr_seq_exame, null) cd_edicao_am	
FROM convenio n, atendimento_paciente j, atend_categoria_convenio e, estabelecimento d, pedido_exame_externo c, pedido_exame_externo_item a
LEFT OUTER JOIN med_exame_padrao b ON (a.nr_seq_exame = b.nr_sequencia)
WHERE j.nr_atendimento				= e.nr_atendimento and obter_atecaco_atendimento(j.nr_atendimento) 	= e.nr_seq_interno and d.cd_estabelecimento				= j.cd_estabelecimento and n.cd_convenio					= e.cd_convenio and e.nr_atendimento				= c.nr_atendimento and c.nr_sequencia					= a.nr_seq_pedido and c.nr_sequencia					= nr_seq_exame_p group by coalesce(substr(TISS_OBTER_PROCED_CONVERSAO(e.cd_convenio,a.cd_procedimento,a.ie_origem_proced,'C'),1,50),
		coalesce(coalesce(coalesce(a.cd_procedimento, b.cd_procedimento), 
		coalesce(Obter_Cod_Proc_Interno_conv(b.nr_proc_interno, e.cd_convenio, e.cd_categoria, clock_timestamp(), j.cd_estabelecimento),
		    Obter_Cod_Proc_Interno_conv(a.nr_proc_interno, e.cd_convenio, e.cd_categoria, clock_timestamp(), j.cd_estabelecimento))),
	        Lab_Obter_Dados_Exame(a.NR_SEQ_EXAME_LAB, 'P'))),
	substr(coalesce(TISS_OBTER_PROCED_CONVERSAO(e.cd_convenio,a.cd_procedimento,a.ie_origem_proced,'D'),
		coalesce(Obter_Med_Exame_Externo(a.nr_sequencia),
		coalesce(obter_descricao_procedimento(a.cd_procedimento, a.ie_origem_proced),
		obter_descricao_procedimento(b.cd_procedimento, b.ie_origem_proced)))),1,254),	
	TISS_OBTER_TABELA(Obter_Edicao(j.cd_estabelecimento,e.cd_convenio,e.cd_categoria,clock_timestamp(),a.cd_procedimento),j.cd_estabelecimento,e.cd_convenio,e.cd_categoria,clock_timestamp(),'R',null,a.cd_procedimento,a.ie_origem_proced,null,null,j.nr_atendimento,a.nr_proc_interno, a.nr_seq_exame, null);



BEGIN

delete	from w_tiss_guia
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_dados_atendimento
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_beneficiario
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_proc_solic
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_solicitacao
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_contratado_solic
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_totais
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_relatorio
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_opm
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_autorizacao
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_contratado_exec
where	nm_usuario		= nm_usuario_p;

commit;

nr_sequencia_autor_w	:= nr_sequencia_autor_p;

select	coalesce(max(a.IE_TIPO_AUTORIZACAO),'0'),
	max(b.ie_tipo_atendimento),
	max(c.cd_categoria)
into STRICT	ie_tipo_autorizacao_w,
	ie_tipo_atendimento_w,
	cd_categoria_conv_w
from	autorizacao_convenio a,
	atendimento_paciente b,
	atend_categoria_convenio c
where	a.nr_sequencia	= nr_sequencia_autor_p
and	a.nr_atendimento	= b.nr_atendimento
and	c.nr_atendimento	= b.nr_atendimento;

if (coalesce(ie_tipo_autorizacao_w::text, '') = '') then
	select	coalesce(max(a.IE_TIPO_AUTORIZACAO),'0'),
		max(b.cd_categoria)
	into STRICT	ie_tipo_autorizacao_w,
		cd_categoria_conv_w
	from	autorizacao_convenio a,
		gestao_vaga b
	where	a.nr_sequencia	= nr_sequencia_autor_p
	and	a.nr_seq_gestao	= b.nr_sequencia;
end if;

if (coalesce(nr_sequencia_autor_p,0) > 0) then
	
	select	max(cd_convenio),
		max(coalesce(cd_estabelecimento,obter_dados_autor_convenio(a.nr_sequencia, 'E'))),
		max(a.ie_tipo_autorizacao)
	into STRICT	cd_convenio_w,
		cd_estabelecimento_w,
		ie_tipo_autorizacao_w
	from	autorizacao_convenio a
	where	nr_sequencia	= nr_sequencia_autor_p;
	
elsif (coalesce(nr_atendimento_p, 0) > 0) then

	if (coalesce(nr_prescr_tiss_p,-1) > 0) then
		select	max(cd_convenio),
			max(coalesce(cd_estabelecimento,obter_dados_autor_convenio(a.nr_sequencia, 'E')))
		into STRICT	cd_convenio_w,
			cd_estabelecimento_w
		from	autorizacao_convenio a
		where	nr_atendimento	= nr_atendimento_p
		and	nr_prescricao	= nr_prescr_tiss_p;
	end if;
	
	if (coalesce(cd_convenio_w::text, '') = '') then
		select	max(cd_convenio),
			max(coalesce(cd_estabelecimento,obter_dados_autor_convenio(a.nr_sequencia, 'E')))
		into STRICT	cd_convenio_w,
			cd_estabelecimento_w
		from	autorizacao_convenio a
		where	nr_atendimento	= nr_atendimento_p;
	end if;
	
elsif (coalesce(nr_seq_gestao_vaga_p,0) > 0) then

	select	max(cd_convenio),
		max(coalesce(cd_estabelecimento,obter_dados_autor_convenio(a.nr_sequencia, 'E')))
	into STRICT	cd_convenio_w,
		cd_estabelecimento_w
	from	autorizacao_convenio a
	where	nr_seq_gestao	= nr_seq_gestao_vaga_p;
	
elsif (coalesce(nr_seq_agenda_p,0) > 0) then	

	select	max(cd_convenio),
		max(coalesce(cd_estabelecimento,obter_dados_autor_convenio(a.nr_sequencia, 'E')))
	into STRICT	cd_convenio_w,
		cd_estabelecimento_w
	from	autorizacao_convenio a
	where	nr_seq_agenda	= nr_seq_agenda_p;

end if;

if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') and (cd_estabelecimento_w IS NOT NULL AND cd_estabelecimento_w::text <> '') then
	
	select	coalesce(max(ie_guia_solic_inte_proc), 'N')
	into STRICT	ie_guia_solic_inte_proc_w
	from	tiss_parametros_convenio
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_convenio		= cd_convenio_w;
	
end if;

if	((coalesce(nr_sequencia_autor_p,0) > 0) and
	((ie_tipo_autorizacao_w	= '1') or ((ie_tipo_autorizacao_w in ('3','5')) and (ie_guia_solic_inte_proc_w = 'S')))) or
	((coalesce(nr_atendimento_p, 0) > 0) and (coalesce(nr_sequencia_autor_p, -1) <= 0) and (coalesce(nr_seq_exame_p, -1) <= 0)) or
	((coalesce(nr_seq_gestao_vaga_p,0) > 0) and (coalesce(nr_atendimento_p,-1) <= 0)) or
	((coalesce(nr_seq_agenda_p,0) > 0) and (coalesce(nr_atendimento_p,-1) <= 0)) then

	open c05;
	loop
	fetch c05 into
		nr_sequencia_autor_w;
	EXIT WHEN NOT FOUND; /* apply on c05 */
		
		select	coalesce(d.cd_ans,c.cd_ans),
			b.ds_arquivo_logo_tiss,
			b.cd_convenio,
			coalesce(a.cd_estabelecimento,obter_dados_autor_convenio(a.nr_sequencia, 'E'))
		into STRICT	cd_ans_w,
			ds_arquivo_logo_w,
			cd_convenio_w,
			cd_estabelecimento_w
		from	pessoa_juridica c,			
			convenio_estabelecimento d,
			convenio b,
			autorizacao_convenio a
		where	a.cd_convenio		= b.cd_convenio
		and	d.cd_convenio		= b.cd_convenio
		and	d.cd_estabelecimento	= coalesce(a.cd_estabelecimento,(obter_dados_autor_convenio(a.nr_sequencia, 'E'))::numeric )
		and	b.cd_cgc		= c.cd_cgc
		and	a.nr_sequencia		= nr_sequencia_autor_w;

		select	max(ds_arquivo_logo_comp),
			coalesce(max(ie_gerar_tiss), 'S')
		into STRICT	ds_arquivo_logo_comp_w,
			ie_gerar_tiss_w
		from	tiss_parametros_convenio
		where	cd_estabelecimento	= cd_estabelecimento_w
		and	cd_convenio		= cd_convenio_w;
		
		select	coalesce(max(ds_versao),'2.02.03')
		into STRICT	ds_versao_w
		from	tiss_convenio a,
			xml_projeto b
		where	a.nr_seq_xml_projeto	= b.nr_sequencia
		and	a.nr_sequencia		= OBTER_TISS_CONVENIO(cd_convenio_w,cd_estabelecimento_w,'1');
		
		begin
			select	im_logo_convenio
			into STRICT	im_logo_convenio_w
			from	tiss_logo_convenio
			where	cd_convenio	   = cd_convenio_w
			and 	coalesce(ie_situacao,'N') = 'A';
		exception
		when others then
			im_logo_convenio_w := null;
		end;
		
		if (coalesce(im_logo_convenio_w::text, '') = '') and (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') then
			ds_arquivo_logo_w := tiss_diretorio_logo(ds_arquivo_logo_comp_w, ds_dir_padrao_p) || ds_arquivo_logo_w;
		end if;
		

		if (coalesce(ie_gerar_tiss_w,'S') = 'S') then

			if (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') and (coalesce(im_logo_convenio_w::text, '') = '') then

				insert	into w_tiss_relatorio(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ds_arquivo_logo,
					im_logo_convenio)
				values (nextval('w_tiss_relatorio_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					ds_arquivo_logo_w,
					null);
			else
				RAISE NOTICE 'w_tiss_relatorio';
				insert	into w_tiss_relatorio(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ds_arquivo_logo,
					im_logo_convenio)
				values (nextval('w_tiss_relatorio_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					null,
					im_logo_convenio_w);
			end if;

			select	max(cd_autorizacao),
				max(dt_autorizacao),
				max(cd_senha),
				max(dt_fim_vigencia),
				max(nr_atendimento),
				substr(max(ds_indicacao), 1, 500),
				max(ds_observacao),
				max(tiss_obter_se_atend_rn(nr_atendimento)),
				max(cd_autorizacao_prest)
			into STRICT	cd_autorizacao_w,
				dt_autorizacao_w,
				cd_senha_w,
				dt_final_vigencia_w,
				nr_atendimento_w,
				ds_indicacao_w,
				ds_obs_w,
				ie_atendimento_rn_w,
				cd_autorizacao_prest_w
			from	autorizacao_convenio
			where	nr_sequencia		= nr_sequencia_autor_w;
			
			if (coalesce(nr_atendimento_w::text, '') = '') then
				select	coalesce(max(tiss_obter_se_autor_rn(b.ie_cod_usuario_mae_resp, a.nr_sequencia,a.nr_seq_agenda, a.nr_seq_agenda_consulta)),'N')
				into STRICT	ie_atendimento_rn_w
				FROM autorizacao_convenio a
LEFT OUTER JOIN autorizacao_convenio_tiss b ON (a.nr_sequencia = b.nr_sequencia_autor)
WHERE a.nr_sequencia		= nr_sequencia_autor_w;
			end if;
		

			select	max((obter_clinica_atend(nr_atendimento_w, 'C'))::numeric ),
				max((Obter_Classificacao_Atend(nr_atendimento_w,'C'))::numeric ),
				max(obter_setor_atendimento(nr_atendimento_w))
			into STRICT	ie_clinica_w,
				nr_seq_classif_atend_w,
				cd_setor_entrada_w
			;
			
			select	count(*)
			into STRICT	cont_proced_w
			from	tiss_proc_solicitado_v
			where	nr_sequencia_autor	= nr_sequencia_autor_w
			and	ds_versao		= '2.01.01';



			if (cont_proced_W = 0) and (ie_mensagem_proc_p = 'S')then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(188276);
			end if;
			
			qt_proc_guia_w 	:= 0;
			
			if (cont_proced_w > 0) then
			
				open c01;
				loop
				fetch c01 into
					cd_procedimento_w,
					ds_procedimento_w,
					qt_solicitada_w,
					qt_autorizada_w,
					cd_edicao_amb_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */

					qt_proc_guia_w		:= qt_proc_guia_w + 1;
					
					RAISE NOTICE 'apos ler 01 CURSOR';
					if (qt_proc_guia_w = 1) then
						RAISE NOTICE 'insert wtiss_guia';
						select	nextval('w_tiss_guia_seq')
						into STRICT	nr_seq_guia_w
						;

						insert	into w_tiss_guia(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							cd_ans,
							cd_autorizacao,
							dt_autorizacao,
							cd_senha,
							dt_validade_senha,
							dt_emissao_guia,
							nr_interno_conta,
							nr_seq_protocolo,
							nr_sequencia_autor,
							nr_atendimento,
							ie_tiss_tipo_guia,
							ds_observacao,
							ds_versao,
							ie_atendimento_rn,
							nr_guia_prestador)
						values (nr_seq_guia_w,
							clock_timestamp(),
							nm_usuario_p,
							cd_ans_w,
							cd_autorizacao_w,
							coalesce(dt_inicio_vigencia_w, dt_autorizacao_w),
							cd_senha_w,
							dt_final_vigencia_w,
							dt_autorizacao_w,
							null,
							null,
							nr_sequencia_autor_w,
							nr_atendimento_w,
							'1',
							coalesce(tiss_obter_regra_campo(1, 'DS_OBSERVACAO', CD_CONVENIO_W, ds_observacao_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null), ds_obs_w),
							ds_versao_w,
							ie_atendimento_rn_w,
							coalesce(cd_autorizacao_prest_w, nr_sequencia_autor_w));

						if (coalesce(nr_seq_gestao_vaga_p,-1) = -1) and (coalesce(nr_seq_agenda_p,-1) = -1) and
							 ((coalesce(nr_sequencia_autor_p,-1) = -1) or (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '')) then

							/*lhalves OS305885 em 30/03/2011 - substituido a view pelo select - Performance*/

							
							select	c.cd_pessoa_fisica,
								substr(coalesce(tiss_obter_nome_abreviado(b.cd_convenio, a.cd_estabelecimento, c.cd_pessoa_fisica), c.nm_pessoa_fisica),1,150),
								c.nr_cartao_nac_sus,
								substr(obter_desc_plano(b.cd_convenio, b.cd_plano_convenio),1,40),
								b.dt_validade_carteira,
								b.cd_usuario_convenio
							into STRICT	cd_pessoa_fisica_w,
								nm_pessoa_fisica_w,
								nr_cartao_nac_sus_w,
								ds_plano_w,
								dt_validade_carteira_w,
								cd_usuario_convenio_w
							from	pessoa_fisica c,
								atend_categoria_convenio b,
								atendimento_paciente a
							where	b.nr_seq_interno	= obter_atecaco_atendimento(b.nr_atendimento)
							and	a.nr_atendimento	= b.nr_atendimento
							and	a.cd_pessoa_fisica	= c.cd_pessoa_fisica
							and	a.nr_atendimento	= nr_atendimento_w;
							

						else	
							select	max(cd_pessoa_fisica),
								max(nm_pessoa_fisica),
								max(nr_cartao_nac_sus),
								max(ds_plano),
								max(dt_validade_carteira),
								max(cd_usuario_convenio)
							into STRICT	cd_pessoa_fisica_w,
								nm_pessoa_fisica_w,
								nr_cartao_nac_sus_w,
								ds_plano_w,
								dt_validade_carteira_w,
								cd_usuario_convenio_w
							from (
								SELECT	cd_pessoa_fisica,
									nm_pessoa_fisica,
									nr_cartao_nac_sus,
									ds_plano,
									dt_validade_carteira,
									cd_usuario_convenio
								from	tiss_dados_paciente_v
								where	ds_versao			= '2.01.01'
								and	nr_sequencia_autor		= nr_sequencia_autor_p
								and (coalesce(nr_seq_gestao_vaga_p,0)	> 0)
								and	ie_origem			= 'GV'
								
union

								SELECT	cd_pessoa_fisica,
									nm_pessoa_fisica,
									nr_cartao_nac_sus,
									ds_plano,
									dt_validade_carteira,
									cd_usuario_convenio
								from	tiss_dados_paciente_v
								where	ds_versao		= '2.01.01'
								and	nr_sequencia_autor	= nr_sequencia_autor_p
								and (coalesce(nr_seq_agenda_p,0) 	> 0)
								and	ie_origem		= 'AC'
								
union

								select	cd_pessoa_fisica,
									nm_pessoa_fisica,
									nr_cartao_nac_sus,
									ds_plano,
									dt_validade_carteira,
									cd_usuario_convenio
								from	tiss_dados_paciente_v
								where	ds_versao		= '2.01.01'
								and	nr_sequencia_autor	= nr_sequencia_autor_p
								and (coalesce(nr_seq_agenda_p,-1) 	= -1)
								and (coalesce(nr_seq_gestao_vaga_p,-1)	= -1)
								and	ie_origem		= 'AC') alias14;
						end if;


						insert	into w_tiss_beneficiario(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_guia,
							cd_pessoa_fisica,
							nm_pessoa_fisica,
							nr_cartao_nac_sus,
							ds_plano,
							dt_validade_carteira,
							cd_usuario_convenio)
						values (nextval('w_tiss_beneficiario_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_w,
							cd_pessoa_fisica_w,
							nm_pessoa_fisica_w,
							nr_cartao_nac_sus_w,
							ds_plano_w,
							dt_validade_carteira_w,
							cd_usuario_convenio_w);

						select 	max(cd_medico_solic_tiss)
						into STRICT 	cd_medico_solic_tiss_w
						from 	tiss_dados_solicitante_v
						where	nr_sequencia_autor	= nr_sequencia_autor_w
							and	ds_versao		= '2.01.01'
							and	ie_origem		= 'AC';

						if (cd_medico_solic_tiss_w IS NOT NULL AND cd_medico_solic_tiss_w::text <> '') then

							insert into w_tiss_contratado_solic(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_guia,
								cd_cgc,
								cd_interno,
								nr_cpf,
								nm_contratado,
								nm_solicitante,
								cd_cnes,
								sg_conselho,
								nr_crm,
								uf_crm,
								cd_cbo_saude,
								cd_interno_internacao,
								cd_cgc_internacao,
								nm_contratado_internacao)
							SELECT	nextval('w_tiss_contratado_solic_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_guia_w,
								null,
								cd_medico_solic_tiss,
								nr_cpf,
								obter_nome_pf_pj(cd_medico_solic_tiss,null),
								nm_medico_solicitante,
								null,
								sg_conselho,
								nr_crm,
								uf_crm,
								cd_cbo_saude,
								coalesce(tiss_obter_regra_campo(1, 'CD_CGC', cd_convenio_w, cd_interno, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null), ''),	
								coalesce(tiss_obter_regra_campo(1, 'CD_CGC', cd_convenio_w, cd_cgc, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null), ''),							
								coalesce(tiss_obter_regra_campo(1, 'NM_CONTRATADO', cd_convenio_w, ds_razao_social, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null), '')							
							from	tiss_dados_solicitante_v
							where	nr_sequencia_autor	= nr_sequencia_autor_w
							and	ds_versao		= '2.01.01'
							and	ie_origem		= 'AC';

						else

							insert into w_tiss_contratado_solic(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_guia,
								cd_cgc,
								cd_interno,
								nr_cpf,
								nm_contratado,
								nm_solicitante,
								cd_cnes,
								sg_conselho,
								nr_crm,
								uf_crm,
								cd_cbo_saude,
								cd_interno_internacao,
								cd_cgc_internacao,
								nm_contratado_internacao)
							SELECT	nextval('w_tiss_contratado_solic_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_guia_w,
								cd_cgc,
								cd_interno,
								nr_cpf,
								ds_razao_social,
								nm_medico_solicitante,
								cd_cnes,
								sg_conselho,
								nr_crm,
								uf_crm,
								cd_cbo_saude,
								coalesce(tiss_obter_regra_campo(1, 'CD_CGC', cd_convenio_w, cd_interno, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null), ''),	
								coalesce(tiss_obter_regra_campo(1, 'CD_CGC', cd_convenio_w, cd_cgc, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null), ''),							
								coalesce(tiss_obter_regra_campo(1, 'NM_CONTRATADO', cd_convenio_w, ds_razao_social, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null), '')							
							from	tiss_dados_solicitante_v
							where	nr_sequencia_autor	= nr_sequencia_autor_w
							and	ds_versao		= '2.01.01'
							and	ie_origem		= 'AC';

						end if;

						select	max(cd_doenca_cid)
						into STRICT	cd_doenca_cid_autor_w
						from	tiss_diagnostico_v
						where	ds_versao		= '2.01.01'
						and	ie_origem		= 'ACD'
						and	nr_sequencia_autor 	= nr_sequencia_autor_p
						and	ie_classificacao_doenca 	= 'P';
						
						if (coalesce(cd_doenca_cid_autor_w::text, '') = '') then
							select	max(cd_doenca_cid),
								max(ie_tipo_doenca),
								max(ie_unidade_tempo),
								max(qt_tempo)
							into STRICT	cd_doenca_cid_w,
								ie_tipo_doenca_w,
								ie_unidade_tempo_w,
								qt_tempo_w
							from	tiss_diagnostico_v
							where	ds_versao		= '2.01.01'
							and	ie_origem		= 'AC'
							and	nr_sequencia_autor 	= nr_sequencia_autor_w
							and	ie_classificacao_doenca = 'P';
						else
							cd_doenca_cid_w	:= cd_doenca_cid_autor_w;
						end if;

						select	max(c.ie_tipo_acidente)
						into STRICT	ie_tipo_acidente_w
						from	atendimento_paciente a,
							tipo_acidente b,
							tiss_tipo_acidente c
						where	a.nr_seq_tipo_acidente	= b.nr_sequencia
						and	b.nr_sequencia		= c.nr_seq_acidente
						and	a.nr_atendimento		= nr_atendimento_w;

						insert into w_tiss_solicitacao(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_guia,
							dt_solicitacao,
							ie_carater_solic,
							cd_cid,
							ds_indicacao,
							ie_tipo_internacao,
							ie_regime_internacao,
							qt_dia_solicitado,
							ie_tipo_doenca,
							ie_unidade_tempo,
							qt_tempo,
							ie_tipo_acidente,
							ie_previsao_uso_quimio,
							ie_previsao_uso_opme
							)
						SELECT	nextval('w_tiss_solicitacao_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_w,
							dt_autorizacao,
							ie_carater_inter_sus,
							cd_doenca_cid_w,
							tiss_obter_regra_campo(1, 'DS_INDICACAO', CD_CONVENIO_W, ds_indicacao_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null),						
							substr(IE_TIPO_INTERNACAO,1,2),
							IE_REGIME_INTERNACAO,
							QT_DIA_SOLICITADO,
							ie_tipo_doenca_w,
							ie_unidade_tempo_w,
							qt_tempo_w,
							coalesce(ie_tiss_tipo_acidente,ie_tipo_acidente_w),
							ie_previsao_uso_quimio,
							ie_previsao_uso_opme   
						from	tiss_dados_solicitacao_v a
						where	a.nr_sequencia_autor	= nr_sequencia_autor_w
						and	ie_origem		= 'AC'
						and	ds_versao		= '2.01.01';

						select	coalesce(max(Obter_Valor_Conv_Estab(a.cd_convenio, cd_estabelecimento_w, 'CD_INTERNO')), 0)
						into STRICT	cd_interno_w
						from	convenio a,
							autorizacao_convenio b
						where	a.cd_convenio	= b.cd_convenio
						and	b.nr_sequencia	= nr_sequencia_autor_w;

						select	max(ds_razao_social),
							max(cd_cnes),
							max(cd_cgc)
						into STRICT	ds_razao_social_w,
							cd_cnes_w,
							cd_cgc_w
						from	tiss_dados_solicitante_v
						where	nr_sequencia_autor	= nr_sequencia_autor_w
						and	ds_versao		= '2.01.01'
						and	ie_origem		= 'AC';

						insert into w_tiss_autorizacao(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_guia,
							dt_admissao,
							qt_dia_autorizado,
							ds_tipo_acomodacao,
							cd_cgc,
							nm_contratado,
							cd_cnes,
							cd_interno)
						SELECT	nextval('w_tiss_autorizacao_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_w,
							dt_entrada_prevista,
							qt_dia_autorizado,
							cd_tipo_acomod_autor,
							cd_cgc_w,
							ds_razao_social_w,
							cd_cnes_w,
							cd_interno_w
						from	tiss_dados_solicitacao_v a
						where	a.nr_sequencia_autor	= nr_sequencia_autor_w
						and	ie_origem		= 'AC'
						and	ds_versao		= '2.01.01'
						and 	((coalesce(ie_dados_autorizados_p, 'N') = 'N') or (ie_interno = 10));

					end if;

					insert into w_tiss_proc_solic(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						cd_procedimento,
						cd_edicao_amb,
						ds_procedimento,
						qt_solicitada,
						qt_autorizada)
					values (nextval('w_tiss_proc_solic_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						cd_procedimento_w,
						cd_edicao_amb_w,
						ds_procedimento_w,
						qt_solicitada_w,
						qt_autorizada_w);

					if	((qt_proc_guia_w = 5) and (obter_se_projeto_versao(0,12,ds_versao_w,0) = 'N')) or (qt_proc_guia_w = 12) then

						insert into w_tiss_contratado_exec(NR_SEQUENCIA,
							dt_ATUALIZACAO,
							nm_usUARIO,
							nr_seq_GUIA)
						values (nextval('w_tiss_contratado_exec_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_w);
			
						insert	into w_tiss_totais(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_guia)
						values (nextval('w_tiss_totais_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_w);

						qt_proc_guia_w	:= 0;
					end if;

				end loop;
				close c01;

				if (qt_proc_guia_w > 0) and (qt_proc_guia_w < 5) then
			
					insert into w_tiss_contratado_exec(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia)
					values (nextval('w_tiss_contratado_exec_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w);
			
					insert	into w_tiss_totais(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia)
					values (nextval('w_tiss_totais_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w);

				end if;

				qt_proc_guia_w 	:= 0;

				open c02;
				loop
				fetch c02 into
					cd_opm_w,
					cd_edicao_w,
					ds_opm_w,
					qt_solicitada_w,
					qt_autorizada_w,
					cd_cgc_fabricante_w,
					vl_opm_w;
				EXIT WHEN NOT FOUND; /* apply on c02 */
			
					qt_proc_guia_w 	:= qt_proc_guia_w + 1;

					insert into w_tiss_opm(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						cd_opm,
						cd_edicao,
						ds_opm,
						qt_solicitada,
						qt_autorizada,
						ds_fabricante,
						vl_opm)
					values (nextval('w_tiss_opm_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						cd_opm_w,
						cd_edicao_w,
						ds_opm_w,
						qt_solicitada_w,
						qt_autorizada_w,
						obter_nome_pf_pj(null, cd_cgc_fabricante_w),
						vl_opm_w);

				end loop;
				close c02;

				CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);
			
				/* Prorrogacoes */

				cont_w := 0;
			
				while(cont_w < 3) loop

					cont_w := cont_w + 1;

					select	nextval('w_tiss_guia_seq')
					into STRICT	nr_seq_guia_prorrog_w
					;

					insert	into w_tiss_guia(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia_origem,
						ie_tiss_tipo_guia,
						nr_seq_apresentacao,
						ds_observacao)
					values (nr_seq_guia_prorrog_w,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						'1',
						cont_w,
						coalesce(tiss_obter_regra_campo(1, 'DS_OBSERVACAO', CD_CONVENIO_W, ds_observacao_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null), ds_obs_w));
					
					insert into w_tiss_autorizacao(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia)
					SELECT	nextval('w_tiss_autorizacao_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_prorrog_w
					from	tiss_dados_solicitacao_v a
					where	a.nr_sequencia_autor	= nr_sequencia_autor_w
					and	ie_origem		= 'AC'
					and	ds_versao		= '2.01.01'
					and 	((coalesce(ie_dados_autorizados_p, 'N') = 'N') or (ie_interno = 10));

					cont_proc_w := 0;

					while(cont_proc_w < 2) loop
			
						insert	into w_tiss_proc_solic(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_guia)
						values (nextval('w_tiss_proc_solic_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_prorrog_w);

						cont_proc_w		:= cont_proc_w + 1;

					end loop;

					cont_opm_w := 0;

					while(cont_opm_w < 2) loop

						insert	into w_tiss_opm(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_guia)
						values (nextval('w_tiss_opm_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_prorrog_w);

						cont_opm_w		:= cont_opm_w + 1;

					end loop;

				end loop;
			
			end if;
		
		end if;
	end loop;
	close c05;

end if;

if (coalesce(nr_sequencia_autor_p,0) > 0) and (ie_tipo_autorizacao_w = '2') then

	select	nr_seq_autor_origem
	into STRICT	nr_sequencia_autor_w
	from	autorizacao_convenio
	where	nr_sequencia	= nr_sequencia_autor_p;

	if (coalesce(nr_sequencia_autor_w,0) > 0) then
		
		select	coalesce(d.cd_ans,c.cd_ans),
			b.ds_arquivo_logo_tiss,
			b.cd_convenio,
			obter_dados_autor_convenio(a.nr_sequencia, 'E'),
			tiss_obter_se_atend_rn(nr_atendimento)
		into STRICT	cd_ans_w,
			ds_arquivo_logo_w,
			cd_convenio_w,
			cd_estabelecimento_w,
			ie_atendimento_rn_w
		from	pessoa_juridica c,			
			convenio_estabelecimento d,
			convenio b,
			autorizacao_convenio a
		where	a.cd_convenio		= b.cd_convenio
		and	d.cd_convenio		= b.cd_convenio
		and	d.cd_estabelecimento	= (obter_dados_autor_convenio(a.nr_sequencia, 'E'))::numeric
		and	b.cd_cgc			= c.cd_cgc
		and	a.nr_sequencia		= nr_sequencia_autor_w;
		
		if (coalesce(nr_atendimento_w::text, '') = '') then
			select	coalesce(max(tiss_obter_se_autor_rn(b.ie_cod_usuario_mae_resp, a.nr_sequencia,a.nr_seq_agenda, a.nr_seq_agenda_consulta)),'N')
			into STRICT	ie_atendimento_rn_w
			FROM autorizacao_convenio a
LEFT OUTER JOIN autorizacao_convenio_tiss b ON (a.nr_sequencia = b.nr_sequencia_autor)
WHERE a.nr_sequencia		= nr_sequencia_autor_w;
		end if;
		
		select	max(ds_versao)
		into STRICT	ds_versao_w
		from	tiss_convenio a,
			xml_projeto b
		where	a.nr_seq_xml_projeto	= b.nr_sequencia
		and	a.nr_sequencia		= OBTER_TISS_CONVENIO(cd_convenio_w,cd_estabelecimento_w,'2');

		if (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') then

			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ds_dir_padrao_p || chr(92) || ds_arquivo_logo_w);
		else
			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				null);
		end if;

		select	dt_autorizacao,
			cd_senha,
			dt_fim_vigencia,
			nr_atendimento,
			ds_indicacao
		into STRICT	dt_autorizacao_w,
			cd_senha_w,
			dt_final_vigencia_w,
			nr_atendimento_w,
			ds_indicacao_w
		from	autorizacao_convenio
		where	nr_sequencia		= nr_sequencia_autor_w;

		select	max(cd_autorizacao)
		into STRICT	cd_autorizacao_w
		from	autorizacao_convenio
		where	nr_sequencia	= nr_sequencia_autor_p;
		
		select	count(*)
		into STRICT	cont_proced_w
		from	tiss_proc_solicitado_v
		where	nr_sequencia_autor	= nr_sequencia_autor_w
		and	ds_versao		= '2.01.01';

		if (cont_proced_W = 0) and (ie_mensagem_proc_p = 'S') then			
			CALL wheb_mensagem_pck.exibir_mensagem_abort(188276);
		end if;

		qt_proc_guia_w 	:= 0;
		
		if (cont_proced_w > 0) then
		
			open c01;
			loop
			fetch c01 into
				cd_procedimento_w,
				ds_procedimento_w,
				qt_solicitada_w,
				qt_autorizada_w,
				cd_edicao_amb_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */

				qt_proc_guia_w		:= qt_proc_guia_w + 1;
				if (qt_proc_guia_w = 1) then

					select	nextval('w_tiss_guia_seq')
					into STRICT	nr_seq_guia_w
					;

					insert	into w_tiss_guia(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						cd_ans,
						cd_autorizacao,
						dt_autorizacao,
						cd_senha,
						dt_validade_senha,
						dt_emissao_guia,
						nr_interno_conta,
						nr_seq_protocolo,
						nr_sequencia_autor,
						nr_atendimento,
						ie_tiss_tipo_guia,
						ds_observacao,
						ds_versao,
						nr_guia_prestador)
					values (nr_seq_guia_w,
						clock_timestamp(),
						nm_usuario_p,
						cd_ans_w,
						cd_autorizacao_w,
						coalesce(dt_inicio_vigencia_w, dt_autorizacao_w),
						cd_senha_w,
						dt_final_vigencia_w,
						dt_autorizacao_w,
						null,
						null,
						nr_sequencia_autor_w,
						nr_atendimento_w,
						'1',
						coalesce(tiss_obter_regra_campo(1, 'DS_OBSERVACAO', CD_CONVENIO_W, ds_observacao_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null), ds_obs_w),
						ds_versao_w,
						coalesce(cd_autorizacao_prest_w, nr_sequencia_autor_w));

					insert	into w_tiss_beneficiario(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						cd_pessoa_fisica,
						nm_pessoa_fisica,
						nr_cartao_nac_sus,
						ds_plano,
						dt_validade_carteira,
						cd_usuario_convenio)
					SELECT	nextval('w_tiss_beneficiario_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						cd_pessoa_fisica,
						nm_pessoa_fisica,
						nr_cartao_nac_sus,
						ds_plano,
						dt_validade_carteira,
						cd_usuario_convenio
					from	tiss_dados_paciente_v
					where	ds_versao		= '2.01.01'
					and	(
							(
								(nr_atendimento = nr_atendimento_w) and (ie_origem = 'AP') and (coalesce(nr_seq_gestao_vaga_p,0) = 0)
							)
							or
							(
								(nr_sequencia_autor = nr_sequencia_autor_p) and (ie_origem = 'GV') and (coalesce(nr_seq_gestao_vaga_p,0) > 0)
							)
						);

					select	max(cd_medico_convenio)
					into STRICT	cd_medico_convenio_w
					from	tiss_dados_solicitante_v
					where	(	(
								(nr_atendimento = nr_atendimento_w) and (coalesce(nr_seq_gestao_vaga_p,0) = 0)
							)
							or (coalesce(nr_seq_gestao_vaga_p,0) > 0)
						)
					and	nr_sequencia_autor	= nr_sequencia_autor_w
					and	cd_convenio		= cd_convenio_w
					and	ds_versao		= '2.01.01'
					and	ie_origem		= 'AC';

					if (cd_medico_convenio_w IS NOT NULL AND cd_medico_convenio_w::text <> '') then

						insert into w_tiss_contratado_solic(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_guia,
							cd_cgc,
							cd_interno,
							nr_cpf,
							nm_contratado,
							nm_solicitante,
							cd_cnes,
							sg_conselho,
							nr_crm,
							uf_crm,
							cd_cbo_saude,
							cd_interno_internacao,
							cd_cgc_internacao,
							nm_contratado_internacao)
						SELECT	nextval('w_tiss_contratado_solic_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_w,
							cd_cgc,
							cd_medico_convenio_w,
							nr_cpf,
							nm_medico_solicitante,
							nm_medico_solicitante,
							null,
							sg_conselho,
							nr_crm,
							uf_crm,
							cd_cbo_saude,
							coalesce(tiss_obter_regra_campo(1, 'CD_CGC', cd_convenio_w, cd_interno, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null), ''),	
							coalesce(tiss_obter_regra_campo(1, 'CD_CGC', cd_convenio_w, cd_cgc, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null), ''),							
							coalesce(tiss_obter_regra_campo(1, 'NM_CONTRATADO', cd_convenio_w, ds_razao_social, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null), '')							
						from	tiss_dados_solicitante_v
						where	nr_sequencia_autor	= nr_sequencia_autor_w
						and	ds_versao		= '2.01.01'
						and	ie_origem		= 'AC';

					else

						insert into w_tiss_contratado_solic(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_guia,
							cd_cgc,
							cd_interno,
							nr_cpf,
							nm_contratado,
							nm_solicitante,
							cd_cnes,
							sg_conselho,
							nr_crm,
							uf_crm,
							cd_cbo_saude,
							cd_interno_internacao,
							cd_cgc_internacao,
							nm_contratado_internacao)
						SELECT	nextval('w_tiss_contratado_solic_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_w,
							cd_cgc,
							cd_interno,
							nr_cpf,
							ds_razao_social,
							nm_medico_solicitante,
							cd_cnes,
							sg_conselho,
							nr_crm,
							uf_crm,
							cd_cbo_saude,
							coalesce(tiss_obter_regra_campo(1, 'CD_CGC', cd_convenio_w, cd_interno, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null), ''),	
							coalesce(tiss_obter_regra_campo(1, 'CD_CGC', cd_convenio_w, cd_cgc, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null), ''),							
							coalesce(tiss_obter_regra_campo(1, 'NM_CONTRATADO', cd_convenio_w, ds_razao_social, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null), '')
						from	tiss_dados_solicitante_v
						where	nr_sequencia_autor	= nr_sequencia_autor_w
						and	ds_versao		= '2.01.01'
						and	ie_origem		= 'AC';

					end if;

					select	max(cd_doenca_cid)
					into STRICT	cd_doenca_cid_autor_w
					from	tiss_diagnostico_v
					where	ds_versao		= '2.01.01'
					and	ie_origem		= 'ACD'
					and	nr_sequencia_autor 	= nr_sequencia_autor_p
					and	ie_classificacao_doenca 	= 'P';
					
					if (coalesce(cd_doenca_cid_autor_w::text, '') = '') then
						select	max(cd_doenca_cid),
							max(ie_tipo_doenca),
							max(ie_unidade_tempo),
							max(qt_tempo)
						into STRICT	cd_doenca_cid_w,
							ie_tipo_doenca_w,
							ie_unidade_tempo_w,
							qt_tempo_w
						from	tiss_diagnostico_v
						where	ds_versao		= '2.01.01'
						and	ie_origem		= 'AC'
						and	nr_sequencia_autor 	= nr_sequencia_autor_w
						and	ie_classificacao_doenca = 'P';
					else
						cd_doenca_cid_w	:= cd_doenca_cid_autor_w;
					end if;

					select	max(c.ie_tipo_acidente)
					into STRICT	ie_tipo_acidente_w
					from	atendimento_paciente a,
						tipo_acidente b,
						tiss_tipo_acidente c
					where	a.nr_seq_tipo_acidente	= b.nr_sequencia
					and	b.nr_sequencia		= c.nr_seq_acidente
					and	a.nr_atendimento		= nr_atendimento_w;

					insert into w_tiss_solicitacao(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						dt_solicitacao,
						ie_carater_solic,
						cd_cid,
						ds_indicacao,
						ie_tipo_internacao,
						ie_regime_internacao,
						qt_dia_solicitado,
						ie_tipo_doenca,
						ie_unidade_tempo,
						qt_tempo,
						ie_tipo_acidente,
						ie_previsao_uso_quimio,
						ie_previsao_uso_opme)
					SELECT	nextval('w_tiss_solicitacao_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						dt_autorizacao,
						ie_carater_inter_sus,
						cd_doenca_cid_w,
						tiss_obter_regra_campo(1, 'DS_INDICACAO', CD_CONVENIO_W, ds_indicacao_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null),
						substr(IE_TIPO_INTERNACAO,1,2),
						IE_REGIME_INTERNACAO,
						QT_DIA_SOLICITADO,
						ie_tipo_doenca_w,
						ie_unidade_tempo_w,
						qt_tempo_w,
						coalesce(ie_tiss_tipo_acidente,ie_tipo_acidente_w),
						ie_previsao_uso_quimio,
						ie_previsao_uso_opme
					from	tiss_dados_solicitacao_v a
					where	a.nr_sequencia_autor	= nr_sequencia_autor_w
					and	ie_origem		= 'AC'
					and	ds_versao		= '2.01.01';

					select	coalesce(max(Obter_Valor_Conv_Estab(a.cd_convenio, cd_estabelecimento_w, 'CD_INTERNO')), 0)
					into STRICT	cd_interno_w
					from	convenio a,
						autorizacao_convenio b
					where	a.cd_convenio	= b.cd_convenio
					and	b.nr_sequencia	= nr_sequencia_autor_w;
		
					insert into w_tiss_autorizacao(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						dt_admissao,
						qt_dia_autorizado,
						ds_tipo_acomodacao,
						cd_cgc,
						nm_contratado,
						cd_cnes,
						cd_interno)
					SELECT	nextval('w_tiss_autorizacao_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						dt_entrada_prevista,
						qt_dia_autorizado,
						cd_tipo_acomod_autor,
						cd_cgc,
						ds_razao_social,
						cd_cnes,
						cd_interno_w
					from	tiss_dados_solicitacao_v a
					where	a.nr_sequencia_autor	= nr_sequencia_autor_w
					and	ie_origem		= 'AC'
					and	ds_versao		= '2.01.01'
					and 	((coalesce(ie_dados_autorizados_p, 'N') = 'N') or (ie_interno = 10));

				end if;

				insert into w_tiss_proc_solic(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia,
					cd_procedimento,
					cd_edicao_amb,
					ds_procedimento,
					qt_solicitada,
					qt_autorizada)
				values (nextval('w_tiss_proc_solic_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w,
					cd_procedimento_w,
					cd_edicao_amb_w,
					ds_procedimento_w,
					qt_solicitada_w,
					qt_autorizada_w);

				if (qt_proc_guia_w = 5) then

					insert into w_tiss_contratado_exec(NR_SEQUENCIA,
						dt_ATUALIZACAO,
						nm_usUARIO,
						nr_seq_GUIA)
					values (nextval('w_tiss_contratado_exec_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w);

					insert	into w_tiss_totais(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia)
					values (nextval('w_tiss_totais_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w);

					qt_proc_guia_w	:= 0;

				end if;

			end loop;
			close c01;

			if (qt_proc_guia_w > 0) and (qt_proc_guia_w < 5) then

				insert into w_tiss_contratado_exec(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia)
				values (nextval('w_tiss_contratado_exec_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w);

				insert	into w_tiss_totais(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia)
				values (nextval('w_tiss_totais_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w);

			end if;

			qt_proc_guia_w 	:= 0;

			open c02;
			loop
			fetch c02 into
				cd_opm_w,
				cd_edicao_w,
				ds_opm_w,
				qt_solicitada_w,
				qt_autorizada_w,
				cd_cgc_fabricante_w,
				vl_opm_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */

				qt_proc_guia_w 	:= qt_proc_guia_w + 1;

				insert into w_tiss_opm(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia,
					cd_opm,
					cd_edicao,
					ds_opm,
					qt_solicitada,
					qt_autorizada,
					ds_fabricante,
					vl_opm)
				values (nextval('w_tiss_opm_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w,
					cd_opm_w,
					cd_edicao_w,
					ds_opm_w,
					qt_solicitada_w,
					qt_autorizada_w,
					obter_nome_pf_pj(null, cd_cgc_fabricante_w),
					vl_opm_w
					);

			end loop;
			close c02;

			CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);

			/* Prorrogacoes */

			qt_prorrog_guia_w := 0;
			open c03;
			loop
			fetch c03 into
				nr_sequencia_autor_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */

				qt_prorrog_guia_w := qt_prorrog_guia_w + 1;
				
				select	count(*)
				into STRICT	cont_proced_w
				from	tiss_proc_solicitado_v
				where	nr_sequencia_autor	= nr_sequencia_autor_w
				and	ds_versao		= '2.01.01';

				if (cont_proced_W = 0) and (ie_mensagem_proc_p = 'S')then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(188276);
				end if;
				
				if (cont_proced_w > 0) then
				
					select	nextval('w_tiss_guia_seq')
					into STRICT	nr_seq_guia_prorrog_w
					;

					insert	into w_tiss_guia(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_autorizacao,
						cd_senha,
						nr_sequencia_autor,
						nr_seq_guia_origem,
						ie_tiss_tipo_guia,
						ds_observacao,
						nr_seq_apresentacao)
					values (nr_seq_guia_prorrog_w,
						clock_timestamp(),
						nm_usuario_p,
						coalesce(dt_inicio_vigencia_w, dt_autorizacao_w),
						cd_senha_w,
						nr_sequencia_autor_w,
						nr_seq_guia_w,
						'1',
						coalesce(tiss_obter_regra_campo(1, 'DS_OBSERVACAO', CD_CONVENIO_W, ds_observacao_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null), ds_obs_w),
						qt_prorrog_guia_w);

					select	coalesce(max(Obter_Valor_Conv_Estab(a.cd_convenio, cd_estabelecimento_w, 'CD_INTERNO')), 0)
					into STRICT	cd_interno_w
					from	convenio a,
						autorizacao_convenio b
					where	a.cd_convenio	= b.cd_convenio
					and	b.nr_sequencia	= nr_sequencia_autor_w;

					insert into w_tiss_autorizacao(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						dt_admissao,
						qt_dia_autorizado,
						ds_tipo_acomodacao,
						cd_cgc,
						nm_contratado,
						cd_cnes,
						cd_interno)
					SELECT	nextval('w_tiss_autorizacao_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_prorrog_w,
						dt_entrada_prevista,
						qt_dia_autorizado,
						cd_tipo_acomod_autor,
						cd_cgc,
						ds_razao_social,
						cd_cnes,
						cd_interno_w
					from	tiss_dados_solicitacao_v a
					where	a.nr_sequencia_autor	= nr_sequencia_autor_w
					and	ie_origem		= 'AC'
					and	ds_versao		= '2.01.01'
					and 	((coalesce(ie_dados_autorizados_p, 'N') = 'N') or (ie_interno = 10));

					qt_proc_guia_w 	:= 0;

					open c04;
					loop
					fetch c04 into
						cd_procedimento_w,
						ds_procedimento_w,
						qt_solicitada_w,
						qt_autorizada_w,
						cd_edicao_amb_w;
					EXIT WHEN NOT FOUND; /* apply on c04 */

						qt_proc_guia_w		:= qt_proc_guia_w + 1;

						insert into w_tiss_proc_solic(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_guia,
							cd_procedimento,
							cd_edicao_amb,
							ds_procedimento,
							qt_solicitada,
							qt_autorizada)
						values (nextval('w_tiss_proc_solic_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_prorrog_w,
							cd_procedimento_w,
							cd_edicao_amb_w,
							ds_procedimento_w,
							qt_solicitada_w,
							qt_autorizada_w);

					end loop;
					close c04;

					if (qt_proc_guia_w > 0) and (qt_proc_guia_w <= 2) then

						select	count(*)
						into STRICT	cont_w
						from	w_tiss_proc_solic
						where	nr_seq_guia	= nr_seq_guia_prorrog_w;

						while(cont_w < 2) loop
							insert	into w_tiss_proc_solic(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_guia)
							values (nextval('w_tiss_proc_solic_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_guia_prorrog_w);
							cont_w		:= cont_w + 1;

						end loop;
					end if;

					qt_proc_guia_w 	:= 0;

					open c02;
					loop
					fetch c02 into
						cd_opm_w,
						cd_edicao_w,
						ds_opm_w,
						qt_solicitada_w,
						qt_autorizada_w,
						cd_cgc_fabricante_w,
						vl_opm_w;
					EXIT WHEN NOT FOUND; /* apply on c02 */

						qt_proc_guia_w 	:= qt_proc_guia_w + 1;

						insert into w_tiss_opm(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_guia,
							cd_opm,
							cd_edicao,
							ds_opm,
							qt_solicitada,
							qt_autorizada,
							ds_fabricante,
							vl_opm)
							values (nextval('w_tiss_opm_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_prorrog_w,
							cd_opm_w,
							cd_edicao_w,
							ds_opm_w,
							qt_solicitada_w,
							qt_autorizada_w,
							obter_nome_pf_pj(null, cd_cgc_fabricante_w),
							vl_opm_w
							);

					end loop;
					close c02;
				
					if (qt_proc_guia_w < 2) then

						select	count(*)
						into STRICT	cont_w
						from	w_tiss_opm
						where	nr_seq_guia	= nr_seq_guia_prorrog_w;

						while(cont_w < 2) loop

							insert	into w_tiss_opm(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_guia)
							values (nextval('w_tiss_opm_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_guia_prorrog_w);

							cont_w		:= cont_w + 1;

						end loop;

					end if;
				end if;
			
			end loop;
			close c03;

			select	count(*)
			into STRICT	cont_w
			from	w_tiss_guia
			where	nm_usuario		= nm_usuario_p
			and	(nr_seq_guia_origem IS NOT NULL AND nr_seq_guia_origem::text <> '');

			nr_seq_apresentacao_w	:= cont_w + 1;

			if (cont_w > 3) then
				while(cont_w > 3) loop
					cont_w	:= mod(cont_w, 3);
				end loop;
			end if;

			if (cont_w <> 0) then

				while(cont_w < 3) loop

					select	nextval('w_tiss_guia_seq')
					into STRICT	nr_seq_guia_prorrog_w
					;

					insert	into w_tiss_guia(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia_origem,
						ie_tiss_tipo_guia,
						nr_seq_apresentacao)
					values (nr_seq_guia_prorrog_w,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						'1',
						nr_seq_apresentacao_w);

					insert into w_tiss_autorizacao(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia)
					SELECT	nextval('w_tiss_autorizacao_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_prorrog_w
					from	tiss_dados_solicitacao_v a
					where	a.nr_sequencia_autor	= nr_sequencia_autor_w
					and	ie_origem		= 'AC'
					and	ds_versao		= '2.01.01'
					and 	((coalesce(ie_dados_autorizados_p, 'N') = 'N') or (ie_interno = 10));

					cont_proc_w := 0;
					nr_seq_apresentacao_w	:= nr_seq_apresentacao_w + 1;

					while(cont_proc_w < 2) loop

						insert	into w_tiss_proc_solic(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_guia)
						values (nextval('w_tiss_proc_solic_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_prorrog_w);

						cont_proc_w		:= cont_proc_w + 1;

					end loop;

					cont_opm_w := 0;

					while(cont_opm_w < 2) loop

						insert	into w_tiss_opm(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_guia)
						values (nextval('w_tiss_opm_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_prorrog_w);

						cont_opm_w		:= cont_opm_w + 1;

					end loop;

					cont_w := cont_w + 1;

				end loop;
			
			end if;

		end if;

	end if;

end if;

if (coalesce(nr_seq_exame_p, -1) > 0) then

	select	max(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	pedido_exame_externo
	where	nr_sequencia	= nr_seq_exame_p;
	
	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then

		select	cd_ans,
			b.ds_arquivo_logo_tiss,
			b.cd_convenio,
			a.cd_estabelecimento
		into STRICT	cd_ans_w,
			ds_arquivo_logo_w,
			cd_convenio_w,
			cd_estabelecimento_w
		from	pessoa_juridica c,
			convenio b,
			atend_categoria_convenio d,
			atendimento_paciente a
		where	d.cd_convenio		= b.cd_convenio
		and	b.cd_cgc		= c.cd_cgc
		and	d.nr_atendimento	= a.nr_atendimento
		and	d.nr_seq_interno	= obter_atecaco_atendimento(a.nr_atendimento)
		and	a.nr_atendimento	= nr_atendimento_w;

		select	max(ds_arquivo_logo_comp),
			coalesce(max(ie_gerar_tiss), 'S')
		into STRICT	ds_arquivo_logo_comp_w,
			ie_gerar_tiss_w
		from	tiss_parametros_convenio
		where	cd_estabelecimento	= cd_estabelecimento_w
		and	cd_convenio		= cd_convenio_w;
		
		select	max(ds_versao)
		into STRICT	ds_versao_w
		from	tiss_convenio a,
			xml_projeto b
		where	a.nr_seq_xml_projeto	= b.nr_sequencia
		and	a.nr_sequencia		= OBTER_TISS_CONVENIO(cd_convenio_w,cd_estabelecimento_w,'1');

		if (coalesce(ie_gerar_tiss_w,'S') = 'S') then

			if (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') then

				insert	into w_tiss_relatorio(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ds_arquivo_logo)
				values (nextval('w_tiss_relatorio_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					coalesce(ds_arquivo_logo_comp_w, ds_dir_padrao_p) || chr(92) || ds_arquivo_logo_w);
			else
				insert	into w_tiss_relatorio(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ds_arquivo_logo)
				values (nextval('w_tiss_relatorio_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					null);
			end if;	
			

			select	coalesce(max(c.cd_autorizacao),max(b.nr_doc_convenio)),
				max(c.dt_solicitacao),
				max(b.cd_senha),
				max(b.dt_final_vigencia),
				max(a.nr_atendimento),
				substr(max(c.ds_diagnostico_cid), 1, 500),
				max(c.ds_justificativa),
				max((obter_clinica_atend(nr_atendimento_w, 'C'))::numeric ),
				max((Obter_Classificacao_Atend(nr_atendimento_w,'C'))::numeric ),
				max(obter_setor_atendimento(nr_atendimento_w)),
				max(tiss_obter_se_atend_rn(a.nr_atendimento)),
				max(c.cd_doenca)
			into STRICT	cd_autorizacao_w,
				dt_autorizacao_w,
				cd_senha_w,
				dt_final_vigencia_w,
				nr_atendimento_w,
				ds_indicacao_w,
				ds_obs_w,
				ie_clinica_w,
				nr_seq_classif_atend_w,
				cd_setor_entrada_w,
				ie_atendimento_rn_w,
				cd_doenca_cid_w
			from	atend_categoria_convenio b,
				atendimento_paciente a,
				pedido_exame_externo c			
			where	a.nr_atendimento	= c.nr_atendimento
			and	a.nr_atendimento	= b.nr_atendimento
			and	b.nr_seq_interno	= obter_atecaco_atendimento(a.nr_atendimento)
			and	c.nr_sequencia		= nr_seq_exame_p;			

			qt_proc_guia_w 	:= 0;
			open c06;
			loop
			fetch c06 into
				cd_procedimento_w,
				ds_procedimento_w,
				qt_solicitada_w,
				qt_autorizada_w,
				cd_edicao_amb_w;
			EXIT WHEN NOT FOUND; /* apply on c06 */				

				qt_proc_guia_w		:= qt_proc_guia_w + 1;
				if (qt_proc_guia_w = 1) then

					select	nextval('w_tiss_guia_seq')
					into STRICT	nr_seq_guia_w
					;

					insert	into w_tiss_guia(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						cd_ans,
						cd_autorizacao,
						dt_autorizacao,
						cd_senha,
						dt_validade_senha,
						dt_emissao_guia,
						nr_interno_conta,
						nr_seq_protocolo,
						nr_sequencia_autor,
						nr_atendimento,
						ie_tiss_tipo_guia,
						ds_observacao,
						ds_versao,
						ie_atendimento_rn,
						nr_guia_prestador)
					values (nr_seq_guia_w,
						clock_timestamp(),
						nm_usuario_p,
						cd_ans_w,
						cd_autorizacao_w,
						coalesce(dt_inicio_vigencia_w, dt_autorizacao_w),
						cd_senha_w,
						dt_final_vigencia_w,
						dt_autorizacao_w,
						null,
						null,
						nr_sequencia_autor_w,
						nr_atendimento_w,
						'1',
						coalesce(tiss_obter_regra_campo(1, 'DS_OBSERVACAO', CD_CONVENIO_W, ds_observacao_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null), ds_obs_w),
						ds_versao_w,
						ie_atendimento_rn_w,
						nr_seq_exame_p);

					select	c.cd_pessoa_fisica,
						substr(coalesce(tiss_obter_nome_abreviado(b.cd_convenio, a.cd_estabelecimento, c.cd_pessoa_fisica), c.nm_pessoa_fisica),1,150),
						c.nr_cartao_nac_sus,
						substr(obter_desc_plano(b.cd_convenio, b.cd_plano_convenio),1,40),
						b.dt_validade_carteira,
						b.cd_usuario_convenio
					into STRICT	cd_pessoa_fisica_w,
						nm_pessoa_fisica_w,
						nr_cartao_nac_sus_w,
						ds_plano_w,
						dt_validade_carteira_w,
						cd_usuario_convenio_w
					from	pessoa_fisica c,
						atend_categoria_convenio b,
						atendimento_paciente a
					where	b.nr_seq_interno	= obter_atecaco_atendimento(b.nr_atendimento)
					and	a.nr_atendimento	= b.nr_atendimento
					and	a.cd_pessoa_fisica	= c.cd_pessoa_fisica
					and	a.nr_atendimento	= nr_atendimento_w;
					
					insert	into w_tiss_beneficiario(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						cd_pessoa_fisica,
						nm_pessoa_fisica,
						nr_cartao_nac_sus,
						ds_plano,
						dt_validade_carteira,
						cd_usuario_convenio)
					values (nextval('w_tiss_beneficiario_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						cd_pessoa_fisica_w,
						nm_pessoa_fisica_w,
						nr_cartao_nac_sus_w,
						ds_plano_w,
						dt_validade_carteira_w,
						cd_usuario_convenio_w);					
					
					insert into w_tiss_contratado_solic(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						cd_cgc,
						cd_interno,
						nr_cpf,
						nm_contratado,
						nm_solicitante,
						cd_cnes,
						sg_conselho,
						nr_crm,
						uf_crm,
						cd_cbo_saude,
						cd_cgc_internacao,
						cd_interno_internacao,
						nm_contratado_internacao)
					SELECT	nextval('w_tiss_contratado_solic_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						f.cd_cgc,
						obter_valor_conv_estab(g.cd_convenio, f.cd_estabelecimento, 'CD_INTERNO'),
						i.nr_cpf,
						substr(tiss_eliminar_caractere(h.ds_razao_social),1,100),
						i.nm_pessoa_fisica,
						coalesce(f.cd_cns, h.cd_cnes),	
						substr(OBTER_DADOS_MEDICO(i.cd_pessoa_fisica,'SGCRM'),1,15),
						substr(OBTER_DADOS_MEDICO(i.cd_pessoa_fisica,'CRM'),1,15),
						substr(OBTER_DADOS_MEDICO(i.cd_pessoa_fisica,'UFCRM'),1,2),
						k.cd_cbo,
						f.cd_cgc,
						obter_valor_conv_estab(g.cd_convenio, f.cd_estabelecimento, 'CD_INTERNO'),
						substr(tiss_eliminar_caractere(h.ds_razao_social),1,100)
					FROM pessoa_juridica h, convenio g, estabelecimento f, atend_categoria_convenio c, pessoa_fisica i
LEFT OUTER JOIN cbo_saude k ON (i.nr_seq_cbo_saude = k.nr_sequencia)
, atendimento_paciente a
LEFT OUTER JOIN medico b ON (a.cd_medico_resp = b.cd_pessoa_fisica)
WHERE a.nr_atendimento			= c.nr_atendimento and obter_atecaco_atendimento(a.nr_atendimento) = c.nr_seq_interno  and a.cd_estabelecimento 			= f.cd_estabelecimento and c.cd_convenio				= g.cd_convenio and f.cd_cgc				= h.cd_cgc and b.cd_pessoa_fisica			= i.cd_pessoa_fisica  and a.nr_atendimento			= nr_atendimento_w;

					SELECT	coalesce(max(a.cd_doenca),cd_doenca_cid_w) cd_doenca_cid,	
						max(a.ie_tipo_doenca),
						max(a.ie_unidade_tempo),
						max(a.qt_tempo)
					into STRICT	cd_doenca_cid_w,
						ie_tipo_doenca_w,
						ie_unidade_tempo_w,
						qt_tempo_w							
					FROM 	atendimento_paciente b,
						diagnostico_doenca a,
						diagnostico_medico c	
					WHERE	c.nr_atendimento		= a.nr_atendimento
					AND	c.dt_diagnostico		= a.dt_diagnostico
					and	b.nr_atendimento		= nr_atendimento_w
					AND	a.ie_classificacao_doenca	= 'P'
					AND	c.dt_diagnostico		=
							(SELECT		MAX(x.dt_diagnostico)
							FROM		diagnostico_doenca y,
									diagnostico_medico x
							WHERE		x.nr_atendimento	= b.nr_atendimento
							AND		x.nr_atendimento	= y.nr_atendimento
							AND		x.dt_diagnostico	= y.dt_diagnostico
							AND		y.ie_classificacao_doenca	= 'P');					

					select	max(c.ie_tipo_acidente)
					into STRICT	ie_tipo_acidente_w
					from	atendimento_paciente a,
						tipo_acidente b,
						tiss_tipo_acidente c
					where	a.nr_seq_tipo_acidente	= b.nr_sequencia
					and	b.nr_sequencia		= c.nr_seq_acidente
					and	a.nr_atendimento	= nr_atendimento_w;

					insert into w_tiss_solicitacao(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						dt_solicitacao,
						ie_carater_solic,
						cd_cid,
						ds_indicacao,
						ie_tipo_internacao,
						ie_regime_internacao,
						qt_dia_solicitado,
						ie_tipo_doenca,
						ie_unidade_tempo,
						qt_tempo,
						ie_tipo_acidente)
					SELECT	nextval('w_tiss_solicitacao_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						clock_timestamp(),
						TISS_OBTER_CARATER_INTERN(b.IE_CARATER_INTER_SUS),
						cd_doenca_cid_w,
						substr(tiss_obter_regra_campo(1, 'DS_INDICACAO', CD_CONVENIO_W, ds_indicacao_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null),1,255),
						substr(TISS_OBTER_CLINICA(b.ie_clinica, b.nr_seq_classificacao),1,2),
						substr(tiss_obter_regime_atend(b.nr_atendimento, f.cd_convenio),1,5),
						null,
						ie_tipo_doenca_w,
						ie_unidade_tempo_w,
						qt_tempo_w,
						ie_tipo_acidente_w
					from	atend_categoria_convenio f,
						atendimento_paciente b	
					where	b.nr_atendimento	= f.nr_atendimento
					and	f.nr_seq_interno	= obter_atecaco_atendimento(b.nr_atendimento)
					and	b.nr_atendimento	= nr_atendimento_w;										

					select	coalesce(max(Obter_Valor_Conv_Estab(a.cd_convenio, cd_estabelecimento_w, 'CD_INTERNO')), 0)
					into STRICT	cd_interno_w
					from	convenio a,
						autorizacao_convenio b
					where	a.cd_convenio	= b.cd_convenio
					and	b.nr_sequencia	= nr_sequencia_autor_w;

					select	max(ds_razao_social),
						max(cd_cnes),
						max(cd_cgc)
					into STRICT	ds_razao_social_w,
						cd_cnes_w,
						cd_cgc_w
					from	tiss_dados_solicitante_v
					where	nr_sequencia_autor	= nr_sequencia_autor_w
					and	ds_versao		= '2.01.01'
					and	ie_origem		= 'AC';

					insert into w_tiss_autorizacao(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						dt_admissao,
						qt_dia_autorizado,
						ds_tipo_acomodacao,
						cd_cgc,
						nm_contratado,
						cd_cnes,
						cd_interno)
					SELECT	nextval('w_tiss_autorizacao_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						clock_timestamp(),
						null,
						substr(tiss_obter_tipo_acomod(c.cd_tipo_acomodacao),1,40),
						f.cd_cgc,
						substr(tiss_eliminar_caractere(h.ds_razao_social),1,100),
						coalesce(f.cd_cns, h.cd_cnes),
						obter_valor_conv_estab(g.cd_convenio, f.cd_estabelecimento, 'CD_INTERNO')
					from	pessoa_juridica h,
						convenio g,
						estabelecimento f,		
						atend_categoria_convenio c,
						atendimento_paciente a
					where	a.nr_atendimento			= c.nr_atendimento
					and	obter_atecaco_atendimento(a.nr_atendimento) = c.nr_seq_interno
					and	a.cd_estabelecimento 			= f.cd_estabelecimento
					and	c.cd_convenio				= g.cd_convenio
					and	f.cd_cgc				= h.cd_cgc
					and	a.nr_atendimento			= nr_atendimento_w;

				end if;

				insert into w_tiss_proc_solic(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia,
					cd_procedimento,
					cd_edicao_amb,
					ds_procedimento,
					qt_solicitada,
					qt_autorizada)
				values (nextval('w_tiss_proc_solic_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w,
					cd_procedimento_w,
					cd_edicao_amb_w,
					ds_procedimento_w,
					qt_solicitada_w,
					qt_autorizada_w);

				if (qt_proc_guia_w = 5) then

					insert into w_tiss_contratado_exec(NR_SEQUENCIA,
						dt_ATUALIZACAO,
						nm_usUARIO,
						nr_seq_GUIA)
					values (nextval('w_tiss_contratado_exec_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w);
		
					insert	into w_tiss_totais(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia)
					values (nextval('w_tiss_totais_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w);

					qt_proc_guia_w	:= 0;
				end if;

			end loop;
			close c06;
			
			CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);
			
		end if;
	end if;
end if;	

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_gerar_w_guia_solic_int (nr_sequencia_autor_p bigint, nr_atendimento_p bigint, nr_seq_gestao_vaga_p bigint, nr_seq_agenda_p bigint, ds_dir_padrao_p text, nm_usuario_p text, nr_seq_exame_p bigint, nr_prescr_tiss_p bigint, ie_dados_autorizados_p text DEFAULT 'N', nr_prescricoes_p text DEFAULT NULL, ie_mensagem_proc_p text default 'S') FROM PUBLIC;

