-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_taxas_conta_drg (nr_interno_conta_p bigint) AS $body$
DECLARE


nr_atendimento_w	conta_paciente.nr_atendimento%type;
ie_gerar_ajuste_dias_w	parametro_drg.ie_gerar_ajuste_dias%type;
cd_proc_desconto_w	parametro_drg.cd_proc_desconto%type;
cd_proc_ajuste_dias_w	parametro_drg.cd_proc_ajuste_dias%type;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
dt_alta_w		atendimento_paciente.dt_alta%type;
dt_entrada_w		atendimento_paciente.dt_entrada%type;
vl_procedimento_w	procedimento_paciente.vl_procedimento%type;
cd_procedimento_w	procedimento_paciente.cd_procedimento%type;
vl_proc_desc_min_w	procedimento_paciente.vl_procedimento%type;
vl_proc_desc_max_w	procedimento_paciente.vl_procedimento%type;
cd_proc_princ_w		procedimento_paciente.cd_procedimento%type;

cd_setor_atendimento_w	procedimento_paciente.cd_setor_atendimento%type;
dt_atualizacao_w	procedimento_paciente.dt_atualizacao%type;
dt_entrada_unidade_w	procedimento_paciente.dt_entrada_unidade%type;
dt_procedimento_w	procedimento_paciente.dt_procedimento%type;
ie_origem_proced_w	procedimento_paciente.ie_origem_proced%type;
nm_usuario_w		procedimento_paciente.nm_usuario%type;
nr_seq_atepacu_w	procedimento_paciente.nr_seq_atepacu%type;
qt_procedimento_w	procedimento_paciente.qt_procedimento%type;
nr_seq_proc_w		procedimento_paciente.nr_sequencia%type;
nr_seq_proc_drg_w	procedimento_paciente.nr_sequencia%type;

qt_estadia_min_w	drg_procedimento.qt_estadia_min%type;
qt_estadia_max_w	drg_procedimento.qt_estadia_max%type;
tx_estadia_min_w	drg_procedimento.tx_estadia_min%type;
tx_estadia_max_w	drg_procedimento.tx_estadia_max%type;

vl_proc_min_w		procedimento_paciente.vl_procedimento%type;
vl_proc_max_w	procedimento_paciente.vl_procedimento%type;

ie_origem_proc_ajuste_w	parametro_drg.ie_origem_proc_ajuste%type;
ie_origem_proc_desconto_w parametro_drg.ie_origem_proc_desconto%type;

vl_dr_w		episodio_paciente_drg.vl_liquido%type;

dt_dias_int_w		bigint;


C01 CURSOR FOR
SELECT	a.cd_procedimento,
	coalesce(vl_liquido,0) + coalesce(vl_desconto,0) vl_procedimento,
	a.cd_setor_atendimento,
	a.dt_atualizacao,
	a.dt_entrada_unidade,
	a.dt_procedimento,
	a.ie_origem_proced,
	a.nm_usuario,
	a.nr_atendimento,
	a.nr_seq_atepacu,
	a.qt_procedimento,
	b.qt_estadia_min,
	b.qt_estadia_max,
	b.tx_estadia_min,
	b.tx_estadia_max
from	procedimento_paciente a,
	drg_procedimento b,
	procedimento c,
	episodio_paciente_drg d
where	a.nr_sequencia	= d.nr_seq_propaci
and	d.ie_situacao		= 'A'
and	a.cd_procedimento	= c.cd_procedimento
and	a.ie_origem_proced	= c.ie_origem_proced
and	b.cd_procedimento	= c.cd_procedimento
and	b.ie_origem_proced	= c.ie_origem_proced
and	a.dt_procedimento	between b.dt_inicio_vigencia and coalesce(b.dt_final_vigencia, a.dt_procedimento+1)
and	nr_interno_conta 	= nr_interno_conta_p;


BEGIN
vl_proc_min_w := 0;
vl_proc_max_w := 0;
cd_estabelecimento_w	:= obter_estabelecimento_ativo;

select	ie_gerar_ajuste_dias,
	cd_proc_desconto,
	cd_proc_ajuste_dias,
	ie_origem_proc_ajuste,
	ie_origem_proc_desconto
into STRICT	ie_gerar_ajuste_dias_w,
	cd_proc_desconto_w,
	cd_proc_ajuste_dias_w,
	ie_origem_proc_ajuste_w,
	ie_origem_proc_desconto_w
from	parametro_drg
where	cd_estabelecimento = cd_estabelecimento_w;

if (coalesce(ie_gerar_ajuste_dias_w,'N') = 'S') then
	select	max(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	conta_paciente
	where	nr_interno_conta = nr_interno_conta_p;	
	
	select	dt_alta,
		dt_entrada
	into STRICT	dt_alta_w,
		dt_entrada_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_w;
	
	if (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') then
		select	trunc(dt_alta_w - dt_entrada_w)
		into STRICT	dt_dias_int_w
		;
	else
		select trunc(clock_timestamp() - dt_entrada_w)
		into STRICT	dt_dias_int_w
		;
	end if;

	open C01;
	loop
	fetch C01 into
		cd_procedimento_w,
		vl_procedimento_w,
		cd_setor_atendimento_w,
		dt_atualizacao_w,
		dt_entrada_unidade_w,
		dt_procedimento_w,
		ie_origem_proced_w,
		nm_usuario_w,
		nr_atendimento_w,
		nr_seq_atepacu_w,
		qt_procedimento_w,
		qt_estadia_min_w,
		qt_estadia_max_w,
		tx_estadia_min_w,
		tx_estadia_max_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */	
	
		select	coalesce(max(tx_estadia_max),tx_estadia_max_w),
			coalesce(max(tx_estadia_min),tx_estadia_min_w)
		into STRICT	tx_estadia_max_w,
			tx_estadia_min_w
		from	drg_valor_percentual
		where	cd_procedimento = cd_procedimento_w
		and	dt_entrada_w between coalesce(dt_inicio_vigencia,dt_entrada_w) and fim_dia(dt_fim_vigencia);

		if (dt_dias_int_w < qt_estadia_min_w) then
			select	((tx_estadia_min_w * vl_procedimento_w) * (qt_estadia_min_w - dt_dias_int_w))
			into STRICT	vl_proc_desc_min_w
			;

			vl_proc_min_w := vl_proc_min_w + vl_proc_desc_min_w;

		end if;
		
		if (dt_dias_int_w > qt_estadia_max_w) then
			select	((tx_estadia_max_w * vl_procedimento_w) * (dt_dias_int_w - qt_estadia_max_w))
			into STRICT	vl_proc_desc_max_w
			;
			
			vl_proc_max_w := vl_proc_max_w + vl_proc_desc_max_w;
			
		end if;
	end loop;
	close C01;
	
	if (dt_dias_int_w < qt_estadia_min_w) then
		select	max(nr_sequencia)
		into STRICT	nr_seq_proc_drg_w
		from	procedimento_paciente
		where	nr_interno_conta = nr_interno_conta_p
		and	cd_procedimento = cd_proc_desconto_w;
		
		CALL BILLING_I18N_PCK.set_inativar_drg('N');

		if (nr_seq_proc_drg_w > 0) then
			update 	procedimento_paciente
			set	vl_procedimento = vl_proc_min_w
			where	nr_sequencia = nr_seq_proc_drg_w;
		else
			select	nextval('procedimento_paciente_seq')
			into STRICT	nr_seq_proc_w
			;

			insert into procedimento_paciente(cd_procedimento,
							cd_setor_atendimento,
							dt_atualizacao,
							dt_entrada_unidade,
							dt_procedimento,
							ie_origem_proced,
							nm_usuario,
							nr_atendimento,
							nr_seq_atepacu,
							nr_sequencia,
							qt_procedimento,
							vl_procedimento,
							nr_interno_conta,
							ie_valor_informado)
					values (	cd_proc_desconto_w,
							cd_setor_atendimento_w,
							dt_atualizacao_w,
							dt_entrada_unidade_w,
							dt_procedimento_w,
							ie_origem_proc_desconto_w,
							nm_usuario_w,
							nr_atendimento_w,
							nr_seq_atepacu_w,
							nr_seq_proc_w,
							qt_procedimento_w,
							vl_proc_min_w,
							nr_interno_conta_p,
							'S');
		end if;
		
		CALL BILLING_I18N_PCK.set_inativar_drg('S');
	end if;
	
	if (dt_dias_int_w > qt_estadia_max_w) then
		select	max(nr_sequencia)
		into STRICT	nr_seq_proc_drg_w
		from	procedimento_paciente
		where	nr_interno_conta = nr_interno_conta_p
		and	cd_procedimento = cd_proc_ajuste_dias_w;
		
		CALL BILLING_I18N_PCK.set_inativar_drg('N');
		
		if (nr_seq_proc_drg_w > 0) then
			update 	procedimento_paciente
			set	vl_procedimento = vl_proc_max_w
			where	nr_sequencia = nr_seq_proc_drg_w;
		else
			select	nextval('procedimento_paciente_seq')
			into STRICT	nr_seq_proc_w
			;

			insert into procedimento_paciente(cd_procedimento,
							cd_setor_atendimento,
							dt_atualizacao,
							dt_entrada_unidade,
							dt_procedimento,
							ie_origem_proced,
							nm_usuario,
							nr_atendimento,
							nr_seq_atepacu,
							nr_sequencia,
							qt_procedimento,
							vl_procedimento,
							nr_interno_conta,
							ie_valor_informado)
					values (	cd_proc_ajuste_dias_w,
							cd_setor_atendimento_w,
							dt_atualizacao_w,
							dt_entrada_unidade_w,
							dt_procedimento_w,
							ie_origem_proc_ajuste_w,
							nm_usuario_w,
							nr_atendimento_w,
							nr_seq_atepacu_w,
							nr_seq_proc_w,
							qt_procedimento_w,
							vl_proc_max_w,
							nr_interno_conta_p,
							'S');
		end if;
		
		CALL BILLING_I18N_PCK.set_inativar_drg('S');
	end if;
	
	


commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_taxas_conta_drg (nr_interno_conta_p bigint) FROM PUBLIC;

