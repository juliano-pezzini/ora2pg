-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_pro_rata_dia ( nr_seq_mensalidade_p bigint) AS $body$
DECLARE


qt_dias_pro_rata_w		integer;
vl_pro_rata_dia_w		double precision;
vl_antecipado_w			double precision;
qt_dias_cobertura_w		bigint;
qt_dias_antecipado_w		bigint;
dt_antecipacao_w		timestamp;
dt_antecipacao_baixa_w		timestamp;
vl_pro_rata_mens_w		double precision;
vl_antec_mens_w			double precision;
ie_mensalidade_proporcional_w	varchar(1);
vl_pro_rata_ato_coop_w		double precision;
vl_pro_rata_ato_aux_w		double precision;
vl_pro_rata_ato_nao_coop_w	double precision;
vl_antec_ato_coop_w		double precision;
vl_antec_ato_aux_w		double precision;
vl_antec_ato_nao_coop_w		double precision;
qt_regra_pro_rata_w		bigint;
ie_zerar_valor_ato_w		varchar(1);
ie_operacao_motivo_w		pls_tipo_lanc_adic.ie_operacao_motivo%type;
ie_considera_receita_w		pls_tipo_lanc_adic.ie_considera_receita%type;
ie_considera_despesa_w		pls_tipo_lanc_adic.ie_considera_despesa%type;
qt_excecao_w			integer;

C01 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_item,
		coalesce(a.vl_item,0) vl_item,
		coalesce(a.vl_ato_cooperado,0) vl_ato_cooperado,
		coalesce(a.vl_ato_auxiliar,0) vl_ato_auxiliar,
		coalesce(a.vl_ato_nao_cooperado,0) vl_ato_nao_cooperado,
		b.nr_seq_segurado,
		c.dt_referencia,
		b.dt_mesano_referencia,
		a.nr_seq_tipo_lanc,
		coalesce(a.dt_inicio_cobertura,b.dt_inicio_cobertura) dt_inicio_cobertura,
		coalesce(a.dt_fim_cobertura,b.dt_fim_cobertura) dt_fim_cobertura,
		(	SELECT	max(nr_sequencia)
			from	pls_regra_pro_rata_dia x
			where	x.ie_tipo_item_mensalidade	= a.ie_tipo_item) nr_seq_regra_pro_rata,
		(	select 	coalesce(max(x.ie_calculo_proporcional), 'A')
			from	pls_contrato_pagador x
			where 	x.nr_sequencia 			= c.nr_seq_pagador) ie_calculo_proporcional,
		(	select	max(x.dt_dia_vencimento)
			from	pls_contrato_pagador_fin x
			where	x.nr_sequencia			= c.nr_seq_pagador_fin) dt_dia_vencimento
	from	pls_mensalidade_seg_item a,
		pls_mensalidade_segurado b,
		pls_mensalidade		c
	where	b.nr_sequencia	= a.nr_seq_mensalidade_seg
	and	c.nr_sequencia	= b.nr_seq_mensalidade
	and	c.nr_sequencia	= nr_seq_mensalidade_p;

C02 CURSOR(	nr_seq_item_pc	bigint) FOR
	SELECT	nr_sequencia nr_seq_item_aprop,
		vl_apropriacao
	from	pls_mens_seg_item_aprop
	where	nr_seq_item	= nr_seq_item_pc;

BEGIN


for r_c01_w in C01 loop
	begin
	if	((r_c01_w.vl_ato_cooperado = 0) and (r_c01_w.vl_ato_auxiliar = 0) and (r_c01_w.vl_ato_nao_cooperado = 0)) then
		ie_zerar_valor_ato_w	:= 'S';
	else
		ie_zerar_valor_ato_w	:= 'N';
	end if;
	
	if (r_c01_w.nr_seq_regra_pro_rata IS NOT NULL AND r_c01_w.nr_seq_regra_pro_rata::text <> '') then
		if (r_c01_w.nr_seq_tipo_lanc IS NOT NULL AND r_c01_w.nr_seq_tipo_lanc::text <> '') then
			select	ie_operacao_motivo,
				ie_considera_receita,
				ie_considera_despesa
			into STRICT	ie_operacao_motivo_w,
				ie_considera_receita_w,
				ie_considera_despesa_w
			from	pls_tipo_lanc_adic
			where	nr_sequencia	= r_c01_w.nr_seq_tipo_lanc;
			
			select	count(1)
			into STRICT	qt_excecao_w
			from	pls_regra_pro_rata_excecao
			where	nr_seq_regra	= r_c01_w.nr_seq_regra_pro_rata
			and	((nr_seq_tipo_lanc = r_c01_w.nr_seq_tipo_lanc) or (coalesce(nr_seq_tipo_lanc::text, '') = ''))
			and	ie_operacao_motivo = ie_operacao_motivo_w
			and	ie_considera_receita = ie_considera_receita_w
			and	ie_considera_despesa = ie_considera_despesa_w;
			
			if (qt_excecao_w > 0) then
				qt_regra_pro_rata_w	:= 0;
			else
				qt_regra_pro_rata_w	:= 1;
			end if;
		else
			qt_regra_pro_rata_w	:= 1;
		end if;
	else
		qt_regra_pro_rata_w	:= 0;
	end if;
	
	begin
	select	ie_mensalidade_proporcional
	into STRICT	ie_mensalidade_proporcional_w
	from	pls_segurado
	where	nr_sequencia	= r_c01_w.nr_seq_segurado;
	exception
	when others then
		ie_mensalidade_proporcional_w	:= 'N';
	end;

	qt_dias_cobertura_w	:= r_c01_w.dt_fim_cobertura - r_c01_w.dt_inicio_cobertura + 1;
	
	if (trunc(r_c01_w.dt_inicio_cobertura,'month') = trunc(r_c01_w.dt_fim_cobertura,'month')) then
		qt_dias_pro_rata_w	:= obter_dias_entre_datas(r_c01_w.dt_inicio_cobertura,r_c01_w.dt_fim_cobertura)+1;
	else
		qt_dias_pro_rata_w	:= obter_dias_entre_datas(r_c01_w.dt_inicio_cobertura,fim_mes(r_c01_w.dt_inicio_cobertura))+1;
	end if;
	
	if (qt_dias_pro_rata_w < 0) then
		qt_dias_pro_rata_w	:= 0;
	end if;

	qt_dias_antecipado_w	:= (obter_dias_entre_datas(r_c01_w.dt_inicio_cobertura,r_c01_w.dt_fim_cobertura)+1) - qt_dias_pro_rata_w;
	
	dt_antecipacao_w	:= add_months(r_c01_w.dt_referencia,1);
	dt_antecipacao_baixa_w	:= add_months(r_c01_w.dt_referencia,1);
	
	if	(ie_mensalidade_proporcional_w = 'S' and
		 ((r_c01_w.ie_calculo_proporcional = 'A') or (r_c01_w.ie_calculo_proporcional = 'M' and r_c01_w.dt_dia_vencimento = '1'))) or (qt_regra_pro_rata_w = 0) then
		vl_antecipado_w			:= 0;
		vl_pro_rata_dia_w		:= r_c01_w.vl_item;
		
		if (ie_zerar_valor_ato_w = 'S') then
			vl_pro_rata_ato_coop_w		:= 0;
			vl_pro_rata_ato_aux_w		:= 0;
			vl_pro_rata_ato_nao_coop_w	:= 0;			
		else
			vl_pro_rata_ato_coop_w		:= r_c01_w.vl_ato_cooperado;
			vl_pro_rata_ato_aux_w		:= r_c01_w.vl_ato_auxiliar;
			vl_pro_rata_ato_nao_coop_w	:= r_c01_w.vl_ato_nao_cooperado;
		end if;
		
		vl_antec_ato_coop_w		:= 0;
		vl_antec_ato_aux_w		:= 0;
		vl_antec_ato_nao_coop_w		:= 0;
		qt_dias_antecipado_w		:= 0;
	else
		if (ie_zerar_valor_ato_w = 'S') then
			vl_antecipado_w 		:= dividir(r_c01_w.vl_item,qt_dias_cobertura_w) * qt_dias_antecipado_w;
			vl_antec_ato_coop_w		:= 0;
			vl_antec_ato_aux_w		:= 0;
			vl_antec_ato_nao_coop_w		:= 0;
			
			vl_pro_rata_dia_w		:= dividir(r_c01_w.vl_item,qt_dias_cobertura_w) * qt_dias_pro_rata_w;
			vl_pro_rata_ato_coop_w		:= 0;
			vl_pro_rata_ato_aux_w		:= 0;
			vl_pro_rata_ato_nao_coop_w	:= 0;
			
			if	(r_c01_w.vl_item <> (coalesce(vl_pro_rata_dia_w,0) + coalesce(vl_antecipado_w,0))) then
				vl_pro_rata_dia_w	:= vl_pro_rata_dia_w + (r_c01_w.vl_item - coalesce(vl_pro_rata_dia_w,0) - coalesce(vl_antecipado_w,0));
			end if;
		else
			vl_antecipado_w 		:= dividir(r_c01_w.vl_item,qt_dias_cobertura_w) * qt_dias_antecipado_w;
			vl_antec_ato_coop_w		:= dividir(r_c01_w.vl_ato_cooperado,qt_dias_cobertura_w) * qt_dias_antecipado_w;
			vl_antec_ato_aux_w		:= dividir(r_c01_w.vl_ato_auxiliar,qt_dias_cobertura_w) * qt_dias_antecipado_w;
			vl_antec_ato_nao_coop_w		:= dividir(r_c01_w.vl_ato_nao_cooperado,qt_dias_cobertura_w) * qt_dias_antecipado_w;
			
			vl_pro_rata_dia_w		:= dividir(r_c01_w.vl_item,qt_dias_cobertura_w) * qt_dias_pro_rata_w;
			vl_pro_rata_ato_coop_w		:= dividir(r_c01_w.vl_ato_cooperado,qt_dias_cobertura_w) * qt_dias_pro_rata_w;
			vl_pro_rata_ato_aux_w		:= dividir(r_c01_w.vl_ato_auxiliar,qt_dias_cobertura_w) * qt_dias_pro_rata_w;
			vl_pro_rata_ato_nao_coop_w	:= dividir(r_c01_w.vl_ato_nao_cooperado,qt_dias_cobertura_w) * qt_dias_pro_rata_w;
			
			if	(r_c01_w.vl_item <> (coalesce(vl_pro_rata_dia_w,0) + coalesce(vl_antecipado_w,0))) or
				(r_c01_w.vl_ato_cooperado <> (coalesce(vl_pro_rata_ato_coop_w,0) + coalesce(vl_antec_ato_coop_w,0))) or
				(r_c01_w.vl_ato_auxiliar <> (coalesce(vl_pro_rata_ato_aux_w,0) + coalesce(vl_antec_ato_aux_w,0))) or
				(r_c01_w.vl_ato_nao_cooperado <> (coalesce(vl_pro_rata_ato_nao_coop_w,0) + coalesce(vl_antec_ato_nao_coop_w,0))) then
				vl_pro_rata_dia_w		:= vl_pro_rata_dia_w + (r_c01_w.vl_item - coalesce(vl_pro_rata_dia_w,0) - coalesce(vl_antecipado_w,0));
				vl_pro_rata_ato_coop_w		:= vl_pro_rata_ato_coop_w + (r_c01_w.vl_ato_cooperado - coalesce(vl_pro_rata_ato_coop_w,0) - coalesce(vl_antec_ato_coop_w,0));
				vl_pro_rata_ato_aux_w		:= vl_pro_rata_ato_aux_w + (r_c01_w.vl_ato_auxiliar - coalesce(vl_pro_rata_ato_aux_w,0) - coalesce(vl_antec_ato_aux_w,0));
				vl_pro_rata_ato_nao_coop_w	:= vl_pro_rata_ato_nao_coop_w + (r_c01_w.vl_ato_nao_cooperado - coalesce(vl_pro_rata_ato_nao_coop_w,0) - coalesce(vl_antec_ato_nao_coop_w,0));
			end if;
			
			if	(vl_pro_rata_dia_w <> (vl_pro_rata_ato_coop_w + vl_pro_rata_ato_aux_w + vl_pro_rata_ato_nao_coop_w)) then
				if (r_c01_w.vl_ato_nao_cooperado <> 0) then
					vl_pro_rata_ato_nao_coop_w := vl_pro_rata_ato_nao_coop_w + (vl_pro_rata_dia_w - (vl_pro_rata_ato_coop_w + vl_pro_rata_ato_aux_w + vl_pro_rata_ato_nao_coop_w));
				elsif (r_c01_w.vl_ato_auxiliar <> 0) then
					vl_pro_rata_ato_aux_w := vl_pro_rata_ato_aux_w + (vl_pro_rata_dia_w - (vl_pro_rata_ato_coop_w + vl_pro_rata_ato_aux_w + vl_pro_rata_ato_nao_coop_w));
				else
					vl_pro_rata_ato_coop_w := vl_pro_rata_ato_coop_w + (vl_pro_rata_dia_w - (vl_pro_rata_ato_coop_w + vl_pro_rata_ato_aux_w + vl_pro_rata_ato_nao_coop_w));
				end if;
			end if;
			
			if	(vl_antecipado_w <> (vl_antec_ato_coop_w + vl_antec_ato_aux_w + vl_antec_ato_nao_coop_w)) then
				if (r_c01_w.vl_ato_nao_cooperado <> 0) then
					vl_antec_ato_nao_coop_w := vl_antec_ato_nao_coop_w + (vl_antecipado_w - (vl_antec_ato_coop_w + vl_antec_ato_aux_w + vl_antec_ato_nao_coop_w));
				elsif (r_c01_w.vl_ato_auxiliar <> 0) then
					vl_antec_ato_aux_w := vl_antec_ato_aux_w + (vl_antecipado_w - (vl_antec_ato_coop_w + vl_antec_ato_aux_w + vl_antec_ato_nao_coop_w));
				else
					vl_antec_ato_coop_w := vl_antec_ato_coop_w + (vl_antecipado_w - (vl_antec_ato_coop_w + vl_antec_ato_aux_w + vl_antec_ato_nao_coop_w));
				end if;
			end if;
		end if;
	end if;
	
	vl_antecipado_w			:= coalesce(vl_antecipado_w,0);
	vl_pro_rata_dia_w		:= coalesce(vl_pro_rata_dia_w,0);
	vl_pro_rata_ato_coop_w		:= coalesce(vl_pro_rata_ato_coop_w,0);
	vl_pro_rata_ato_aux_w		:= coalesce(vl_pro_rata_ato_aux_w,0);
	vl_pro_rata_ato_nao_coop_w	:= coalesce(vl_pro_rata_ato_nao_coop_w,0);
	vl_antec_ato_coop_w		:= coalesce(vl_antec_ato_coop_w,0);
	vl_antec_ato_aux_w		:= coalesce(vl_antec_ato_aux_w,0);
	vl_antec_ato_nao_coop_w		:= coalesce(vl_antec_ato_nao_coop_w,0);
	
	update	pls_mensalidade_seg_item
	set	vl_antecipacao			= vl_antecipado_w,
		vl_ato_cooperado_antec		= vl_antec_ato_coop_w,
		vl_ato_auxiliar_antec		= vl_antec_ato_aux_w,
		vl_ato_nao_coop_antec		= vl_antec_ato_nao_coop_w,
		vl_pro_rata_dia			= vl_pro_rata_dia_w,
		vl_ato_cooperado_pro_rata	= vl_pro_rata_ato_coop_w,
		vl_ato_auxiliar_pro_rata	= vl_pro_rata_ato_aux_w,
		vl_ato_nao_coop_pro_rata	= vl_pro_rata_ato_nao_coop_w,
		dt_antecipacao			= dt_antecipacao_w,
		qt_dias_antecipacao		= qt_dias_antecipado_w,
		qt_dias_pro_rata_dia		= qt_dias_pro_rata_w,
		dt_antecipacao_baixa		= dt_antecipacao_baixa_w
	where	nr_sequencia			= r_c01_w.nr_seq_item;
	
	for r_c02_w in C02(r_c01_w.nr_seq_item) loop
		begin
		if	(ie_mensalidade_proporcional_w = 'S' and
			 ((r_c01_w.ie_calculo_proporcional = 'A') or (r_c01_w.ie_calculo_proporcional = 'M' and r_c01_w.dt_dia_vencimento = '1'))) or (qt_regra_pro_rata_w = 0) then
			vl_antecipado_w			:= 0;
			vl_pro_rata_dia_w		:= r_c02_w.vl_apropriacao;
		else
			vl_antecipado_w 		:= dividir(r_c02_w.vl_apropriacao,qt_dias_cobertura_w) * qt_dias_antecipado_w;
			vl_pro_rata_dia_w		:= dividir(r_c02_w.vl_apropriacao,qt_dias_cobertura_w) * qt_dias_pro_rata_w;
			
			if	(r_c01_w.vl_item <> (coalesce(vl_pro_rata_dia_w,0) + coalesce(vl_antecipado_w,0))) then
				vl_pro_rata_dia_w		:= vl_pro_rata_dia_w + (r_c02_w.vl_apropriacao - coalesce(vl_pro_rata_dia_w,0) - coalesce(vl_antecipado_w,0));
			end if;
		end if;
		
		update	pls_mens_seg_item_aprop
		set	vl_antecipacao	= vl_antecipado_w,
			vl_pro_rata_dia	= vl_pro_rata_dia_w
		where	nr_sequencia	= r_c02_w.nr_seq_item_aprop;
		end;
	end loop; --C02
	
	end;
end loop; --C01
select	sum(c.vl_pro_rata_dia),
	sum(c.vl_antecipacao)
into STRICT	vl_pro_rata_mens_w,
	vl_antec_mens_w
from	pls_mensalidade_seg_item c,
	pls_mensalidade_segurado b,
	pls_mensalidade		a
where	b.nr_sequencia	= c.nr_seq_mensalidade_seg
and	a.nr_sequencia	= b.nr_seq_mensalidade
and	a.nr_sequencia	= nr_seq_mensalidade_p;

if (coalesce(vl_pro_rata_mens_w::text, '') = '') then
	vl_pro_rata_mens_w	:= 0;
end if;

if (coalesce(vl_antec_mens_w::text, '') = '') then
	vl_antec_mens_w	:= 0;
end if;

update	pls_mensalidade
set	vl_pro_rata_dia	= vl_pro_rata_mens_w,
	vl_antecipacao	= vl_antec_mens_w
where	nr_sequencia	= nr_seq_mensalidade_p;

--Nao pode dar commit

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_pro_rata_dia ( nr_seq_mensalidade_p bigint) FROM PUBLIC;

