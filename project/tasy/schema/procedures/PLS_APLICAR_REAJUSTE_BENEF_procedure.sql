-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_aplicar_reajuste_benef ( nr_seq_reajuste_p bigint, ie_opcao_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
nr_seq_tabela_w			pls_tabela_preco.nr_sequencia%type;
qt_idade_w			bigint;
dt_reajuste_w			pls_reajuste.dt_reajuste%type;
ds_mes_reajuste_w		varchar(2);
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
ie_geracao_valores_w		pls_contrato.ie_geracao_valores%type;
nr_seq_titular_w		pls_segurado.nr_sequencia%type;
nr_seq_regra_w			bigint;
ie_geracao_valores_sca_w	pls_sca_vinculo.ie_geracao_valores%type;
ie_titularidade_w		varchar(1);
nr_seq_plano_preco_w		pls_plano_preco.nr_sequencia%type;
vl_preco_sca_w			double precision;
ie_origem_sca_w			varchar(2);
nr_seq_plano_w			bigint;
nr_seq_reajuste_sca_w		bigint;
vl_preco_ant_sca_w		double precision;
nr_seq_vinculo_sca_w		bigint;
nr_seq_segurado_preco_sca_w	pls_segurado_preco_origem.nr_sequencia%type;
ie_reajustar_benef_cancelado_w	pls_parametros.ie_reajustar_benef_cancelado%type;
dt_rescisao_w			pls_segurado.dt_rescisao%type;
dt_nascimento_w			pessoa_fisica.dt_nascimento%type;
ie_preco_vidas_contrato_w	pls_tabela_preco.ie_preco_vidas_contrato%type;
ie_calculo_vidas_w		pls_tabela_preco.ie_calculo_vidas%type;
ie_grau_parentesco_w		varchar(2);
qt_vidas_w			integer;
qt_reaj_aplicado_w		integer;
nm_pessoa_fisica_w		pessoa_fisica.nm_pessoa_fisica%type;
nr_seq_seg_preco_sca_w		pls_segurado_preco_origem.nr_sequencia%type;
ie_mes_cobranca_reaj_w		pls_parametros.ie_mes_cobranca_reaj%type;
ie_mes_cobranca_reaj_regulam_w	pls_parametros.ie_mes_cobranca_reaj_reg%type;
ie_mes_cobranca_reajuste_w	pls_parametros.ie_mes_cobranca_reaj%type;
ie_regulamentacao_w		pls_plano.ie_regulamentacao%type;
ie_mes_cobranca_reaj_cont_w	pls_contrato.ie_mes_cobranca_reaj%type;
qt_mensalidade_w		bigint;

c01 CURSOR FOR
	SELECT  c.nr_sequencia,
		c.nr_seq_tabela,
		b.nr_sequencia,
		b.ie_geracao_valores,
		c.nr_seq_titular,
		d.dt_nascimento,
		c.dt_rescisao,
		a.ie_regulamentacao,
		b.ie_mes_cobranca_reaj
	from	pessoa_fisica	d,
		pls_segurado	c,
		pls_contrato	b,
		pls_plano	a
	where	c.cd_pessoa_fisica	= d.cd_pessoa_fisica
	and	b.nr_sequencia		= c.nr_seq_contrato
	and	a.nr_sequencia		= c.nr_seq_plano
	and	(c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')
	and	a.ie_preco in ('1','4')
	and	((a.ie_tipo_contratacao	= 'I') or (coalesce(a.ie_tipo_contratacao::text, '') = ''))
	and	pls_obter_mes_reaj_segurado(c.nr_sequencia,'mm') = ds_mes_reajuste_w
	and	c.nr_sequencia not in (	SELECT	x.nr_seq_segurado
						from	pls_segurado_preco x,
							pls_reajuste y
						where	x.nr_seq_lote_reajuste	= y.nr_sequencia
						and	y.nr_sequencia		= nr_seq_reajuste_p
						and	y.nr_seq_regra	= nr_seq_regra_w)
	and	c.nr_seq_tabela in (	select	nr_seq_tabela
						from	pls_reajuste_tabela
						where	nr_seq_reajuste	= nr_seq_reajuste_p);

C02 CURSOR FOR
	SELECT  b.nr_sequencia,
		c.nr_seq_tabela,
		e.nr_sequencia,
		c.ie_geracao_valores,
		d.dt_nascimento,
		CASE WHEN coalesce(b.nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END ,
		a.nr_sequencia,
		c.nr_sequencia,
		b.dt_rescisao,
		d.nm_pessoa_fisica,
		b.nr_seq_titular,
		a.ie_regulamentacao,
		e.ie_mes_cobranca_reaj
	from	pessoa_fisica	d,
		pls_segurado	b,
		pls_sca_vinculo	c,
		pls_contrato	e,
		pls_plano	a
	where	b.cd_pessoa_fisica	= d.cd_pessoa_fisica
	and	c.nr_seq_segurado	= b.nr_sequencia
	and	e.nr_sequencia		= b.nr_seq_contrato
	and	a.nr_sequencia		= c.nr_seq_plano
	and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and	a.ie_preco in ('1','4')
	and	((a.ie_tipo_contratacao	= 'I') or (coalesce(a.ie_tipo_contratacao::text, '') = ''))
	and	(((c.dt_reajuste IS NOT NULL AND c.dt_reajuste::text <> '') and (to_char(c.dt_reajuste,'mm') = to_char(dt_reajuste_w,'mm')) and (to_char(dt_reajuste_w,'yyyy') <> to_char(c.dt_reajuste,'yyyy')))
		or	((coalesce(c.dt_reajuste::text, '') = '') and (pls_obter_mes_reaj_segurado(b.nr_sequencia,'mm') = ds_mes_reajuste_w)))
	and	c.nr_seq_tabela in (	SELECT	nr_seq_tabela
						from	pls_reajuste_tabela
						where	nr_seq_reajuste	= nr_seq_reajuste_p);

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_plano_preco
	where	qt_idade_w	>= qt_idade_inicial
	and	qt_idade_w	<= qt_idade_final
	and	nr_seq_tabela	= nr_seq_tabela_w
	and	coalesce(ie_grau_titularidade,ie_grau_parentesco_w)	= ie_grau_parentesco_w
	and	qt_vidas_w between coalesce(qt_vidas_inicial,qt_vidas_w) and coalesce(qt_vidas_final,qt_vidas_w)
	order	by	coalesce(ie_grau_titularidade,' ');


BEGIN

select	max(ie_reajustar_benef_cancelado),
	max(ie_mes_cobranca_reaj),
	max(ie_mes_cobranca_reaj_reg)
into STRICT	ie_reajustar_benef_cancelado_w,
	ie_mes_cobranca_reaj_w,
	ie_mes_cobranca_reaj_regulam_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;

ie_reajustar_benef_cancelado_w	:= coalesce(ie_reajustar_benef_cancelado_w,'T');
ie_mes_cobranca_reaj_w		:= coalesce(ie_mes_cobranca_reaj_w,'P');
ie_mes_cobranca_reaj_regulam_w	:= coalesce(ie_mes_cobranca_reaj_regulam_w,'P');

if (ie_opcao_p	= 'A') then
	select	trunc(dt_reajuste,'month'),
		to_char(dt_reajuste,'mm'),
		nr_seq_regra
	into STRICT	dt_reajuste_w,
		ds_mes_reajuste_w,
		nr_seq_regra_w
	from	pls_reajuste
	where	nr_sequencia	= nr_seq_reajuste_p;

	open c01;
	loop
	fetch c01 into
		nr_seq_segurado_w,
		nr_seq_tabela_w,
		nr_seq_contrato_w,
		ie_geracao_valores_w,
		nr_seq_titular_w,
		dt_nascimento_w,
		dt_rescisao_w,
		ie_regulamentacao_w,
		ie_mes_cobranca_reaj_cont_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		if	((coalesce(dt_rescisao_w::text, '') = '') or (dt_rescisao_w > dt_reajuste_w)) or
			((dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') and (ie_reajustar_benef_cancelado_w in ('T','I'))) then

			if 	((ie_geracao_valores_w = 'T' and coalesce(nr_seq_titular_w::text, '') = '')
					or (ie_geracao_valores_w = 'D' and (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> ''))
					or (ie_geracao_valores_w = 'B')) then
				CALL pls_preco_beneficiario_pck.atualizar_reajuste_benef(nr_seq_segurado_w, dt_reajuste_w, nr_seq_reajuste_p, null, 'N', nm_usuario_p, cd_estabelecimento_p);
			end if;
		end if;
		end;
	end loop;
	close c01;

	open C02;
	loop
	fetch C02 into
		nr_seq_segurado_w,
		nr_seq_tabela_w,
		nr_seq_contrato_w,
		ie_geracao_valores_sca_w,
		dt_nascimento_w,
		ie_titularidade_w,
		nr_seq_plano_w,
		nr_seq_vinculo_sca_w,
		dt_rescisao_w,
		nm_pessoa_fisica_w,
		nr_seq_titular_w,
		ie_regulamentacao_w,
		ie_mes_cobranca_reaj_cont_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		if	((coalesce(dt_rescisao_w::text, '') = '') or (dt_rescisao_w > dt_reajuste_w)) or
			((dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') and (ie_reajustar_benef_cancelado_w in ('T','I'))) then
			if (ie_geracao_valores_sca_w = ie_titularidade_w) or (ie_geracao_valores_sca_w = 'B') then
				qt_idade_w	:= trunc(trunc(months_between(dt_reajuste_w, dt_nascimento_w)) / 12);

				if (coalesce(ie_mes_cobranca_reaj_cont_w,'R') = 'R') then /* Se no contrato estiver "Conforme regra", pega pela regulamentação */
					if (ie_regulamentacao_w = 'R') then
						ie_mes_cobranca_reajuste_w	:= ie_mes_cobranca_reaj_w;
					else
						ie_mes_cobranca_reajuste_w	:= ie_mes_cobranca_reaj_regulam_w;
					end if;
				else
					ie_mes_cobranca_reajuste_w	:= ie_mes_cobranca_reaj_cont_w;
				end if;

				/* Retornar a idade do último reajuste do beneficiário */

				select	max(nr_sequencia)
				into STRICT	nr_seq_seg_preco_sca_w
				from	pls_segurado_preco_origem
				where	nr_seq_vinculo_sca = nr_seq_vinculo_sca_w
				and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
				and	nr_seq_segurado	= nr_seq_segurado_w
				and	dt_reajuste = (SELECT	max(x.dt_reajuste)
							from	pls_segurado_preco_origem x
							where	x.nr_seq_vinculo_sca = nr_seq_vinculo_sca_w
							and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')
							and	x.nr_seq_segurado	= nr_seq_segurado_w
							and	(((dt_reajuste_w >= trunc(x.dt_reajuste, 'month')) and ((x.cd_motivo_reajuste	<> 'E') or (ie_mes_cobranca_reajuste_w = 'M')))
							or	(((x.cd_motivo_reajuste	= 'E') and (dt_reajuste_w >= trunc(add_months(x.dt_reajuste,1), 'month'))) and (ie_mes_cobranca_reajuste_w = 'P'))));

				if (coalesce(nr_seq_seg_preco_sca_w,0) <> 0) then
					select	qt_idade
					into STRICT	qt_idade_w
					from	pls_segurado_preco_origem
					where	nr_sequencia	= nr_seq_seg_preco_sca_w;
				end if;

				if (qt_idade_w > 999) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort( 186269, 'NR_SEQ_SEGURADO='||nr_seq_segurado_w||';NM_SEGURADO='||nm_pessoa_fisica_w||';QT_IDADE='||qt_idade_w );
				end if;

				begin
				select	coalesce(ie_preco_vidas_contrato,'N'),
					coalesce(ie_calculo_vidas,'A')
				into STRICT	ie_preco_vidas_contrato_w,
					ie_calculo_vidas_w
				from	pls_tabela_preco
				where	nr_sequencia	= nr_seq_tabela_w;
				exception
				when others then
					ie_preco_vidas_contrato_w	:= 'N';
					ie_calculo_vidas_w		:= 'A';
				end;

				if (ie_preco_vidas_contrato_w = 'S') then
					if (ie_calculo_vidas_w = 'A') then
						select	count(1)
						into STRICT	qt_vidas_w
						from	pls_segurado
						where	nr_seq_contrato = nr_seq_contrato_w
						and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
						and	((coalesce(dt_rescisao::text, '') = '') or (dt_rescisao > dt_reajuste_w));
					elsif (ie_calculo_vidas_w = 'T') then
						select	count(1)
						into STRICT	qt_vidas_w
						from	pls_segurado
						where	nr_seq_contrato = nr_seq_contrato_w
						and	coalesce(nr_seq_titular::text, '') = ''
						and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
						and	((coalesce(dt_rescisao::text, '') = '') or (dt_rescisao > dt_reajuste_w));
					elsif (ie_calculo_vidas_w = 'D') then
						select	count(1)
						into STRICT	qt_vidas_w
						from	pls_segurado
						where	nr_seq_contrato = nr_seq_contrato_w
						and	(nr_seq_titular IS NOT NULL AND nr_seq_titular::text <> '')
						and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
						and	((coalesce(dt_rescisao::text, '') = '') or (dt_rescisao > dt_reajuste_w));
					elsif (ie_calculo_vidas_w = 'TD') then
						select	count(1)
						into STRICT	qt_vidas_w
						from	pls_segurado a
						where	a.nr_seq_contrato = nr_seq_contrato_w
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and	((coalesce(a.dt_rescisao::text, '') = '') or (a.dt_rescisao > dt_reajuste_w))
						and	((coalesce(nr_seq_titular::text, '') = '') or ((nr_seq_titular IS NOT NULL AND nr_seq_titular::text <> '') and ((SELECT	count(1)
															from	grau_parentesco x
															where	x.nr_sequencia = a.nr_seq_parentesco
															and	x.ie_tipo_parentesco = '1') > 0)));
					elsif (ie_calculo_vidas_w = 'F') then
						qt_vidas_w	:= coalesce(pls_obter_qt_familia_benef(nr_seq_segurado_w,nr_seq_titular_w,'N',dt_reajuste_w),0);
					end if;
				else
					qt_vidas_w	:= 1;
				end if;

				ie_grau_parentesco_w	:= coalesce(substr(pls_obter_garu_dependencia_seg(nr_seq_segurado_w,'C'),1,2),'X');
				nr_seq_plano_preco_w	:= null;

				open C03;
				loop
				fetch C03 into
					nr_seq_plano_preco_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
				end loop;
				close C03;

				if (coalesce(nr_seq_plano_preco_w,0) <> 0) then
					select	vl_preco_atual
					into STRICT	vl_preco_sca_w
					from	pls_plano_preco
					where	nr_sequencia	= nr_seq_plano_preco_w;

					select	max(nr_sequencia)
					into STRICT	nr_seq_reajuste_sca_w
					from	pls_reajuste_preco
					where	nr_seq_preco	= nr_seq_plano_preco_w
					and	dt_reajuste_w between dt_periodo_inicial and fim_dia(dt_periodo_final)
					and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

					select	coalesce(vl_base,0)
					into STRICT	vl_preco_ant_sca_w
					from	pls_reajuste_preco
					where	nr_sequencia	= nr_seq_reajuste_sca_w;

					if (coalesce(vl_preco_sca_w,0) > 0) then
						ie_origem_sca_w	:= 'SB';
						select	nextval('pls_segurado_preco_origem_seq')
						into STRICT	nr_seq_segurado_preco_sca_w
						;

						insert	into	pls_segurado_preco_origem(	nr_sequencia, cd_estabelecimento, dt_atualizacao, nm_usuario, nr_seq_segurado,
								nr_seq_plano, dt_atualizacao_nrec, nm_usuario_nrec, vl_preco_atual,
								nr_seq_tabela, ie_origem_preco, nr_seq_reajuste, cd_motivo_reajuste,
								dt_reajuste, nr_seq_preco, qt_idade, vl_preco_ant, nr_seq_reajuste_preco,
								nr_seq_vinculo_sca)
							values (nr_seq_segurado_preco_sca_w, cd_estabelecimento_p, clock_timestamp(), nm_usuario_p, nr_seq_segurado_w,
								nr_seq_plano_w, clock_timestamp(), nm_usuario_p, vl_preco_sca_w,
								nr_seq_tabela_w, ie_origem_sca_w, nr_seq_reajuste_p, 'I',
								dt_reajuste_w, nr_seq_plano_preco_w, qt_idade_w, vl_preco_ant_sca_w, nr_seq_reajuste_sca_w,
								nr_seq_vinculo_sca_w);
					end if;
				end if;
			end if;
		end if;
		end;
	end loop;
	close C02;

	select	count(1)
	into STRICT	qt_reaj_aplicado_w
	from	pls_segurado_preco
	where	nr_seq_lote_reajuste	= nr_seq_reajuste_p  LIMIT 1;

	if (qt_reaj_aplicado_w = 0) then
		select	count(1)
		into STRICT	qt_reaj_aplicado_w
		from	pls_segurado_preco_origem
		where	nr_seq_reajuste	= nr_seq_reajuste_p  LIMIT 1;
	end if;

	if (qt_reaj_aplicado_w > 0) then
		update	pls_reajuste
		set	ie_status_benef	= '3'
		where	nr_sequencia	= nr_seq_reajuste_p;
	end if;
elsif (ie_opcao_p	= 'D') then
	delete from pls_segurado_preco
	where	nr_seq_lote_reajuste	= nr_seq_reajuste_p;

	select  count(1)
	into STRICT	qt_mensalidade_w
	from    pls_mensalidade_sca a,
		pls_segurado_preco_origem b,
		pls_reajuste c
	where   b.nr_sequencia = a.nr_seq_segurado_preco
	and     b.nr_seq_reajuste = c.nr_sequencia
	and     c.nr_sequencia = nr_seq_reajuste_p;

	if (qt_mensalidade_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(337360,null); --Não será possível desfazer a aplicação do reajuste, pois já foi gerada mensalidade com o novo preço para o beneficiário.
	else
		delete from pls_segurado_preco_origem
		where	nr_seq_reajuste		= nr_seq_reajuste_p;
	end if;

	update	pls_reajuste
	set	ie_status_benef	= '1'
	where	nr_sequencia	= nr_seq_reajuste_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_aplicar_reajuste_benef ( nr_seq_reajuste_p bigint, ie_opcao_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

