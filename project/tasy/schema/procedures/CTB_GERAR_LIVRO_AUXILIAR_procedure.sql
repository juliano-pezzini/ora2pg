-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_livro_auxiliar (nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_livro_w             ctb_livro_auxiliar.ds_livro%type;
cd_estab_exclusivo_w   ctb_livro_auxiliar.cd_estab_exclusivo%type;
ie_tipo_livro_ecd_w    ctb_livro_auxiliar.ie_tipo_livro_ecd%type;
cd_cnpj_w              ctb_livro_auxiliar.cd_cnpj%type;
cd_pessoa_fisica_w     ctb_livro_auxiliar.cd_pessoa_fisica%type;
dt_inicial_w           ctb_livro_auxiliar.dt_inicial%type;
dt_final_w             ctb_livro_auxiliar.dt_final%type;
nr_seq_info_w          ctb_livro_auxiliar.nr_seq_info%type;
nr_livro_w             ctb_livro_auxiliar.nr_livro%type;
nr_documento_w         ctb_livro_auxiliar.nr_documento%type;
nm_tabela_w            ctb_livro_auxiliar.nm_tabela%type;
nm_atributo_w	       ctb_livro_auxiliar.nm_atributo%type;
cd_conta_contabil_w    varchar(20);
cd_conta_contabil_atual_w varchar(20);
dt_movimento_w         timestamp;
vl_movimento_w         double precision;
ie_debito_credito_w    varchar(1);
nr_documento_ctb_w     bigint;
nr_lancamento_w        bigint;
nr_seq_doc_compl_w     bigint;
nr_seq_info_doc_w      bigint;
vl_credito_w           double precision;
vl_debito_w            double precision;
vl_saldo_w             double precision;
nr_seq_movto_w         bigint;
vl_saldo_anterior_w    double precision;


C01 CURSOR FOR
SELECT  a.nr_sequencia,
	a.dt_movimento,
	a.vl_movimento,
        b.ie_debito_credito,
    	b.nr_lancamento,
	b.cd_conta_contabil,
        c.nr_seq_doc_compl,
        c.nr_seq_info,
        c.nr_documento
from  	ctb_movimento a,
	movimento_contabil b,
	movimento_contabil_doc c
where 	b.nr_seq_ctb_movto = a.nr_sequencia
and   	c.nr_seq_movimento = b.nr_sequencia
and   	a.dt_movimento between dt_inicial_w and dt_final_w;



BEGIN

select 	ds_livro,
	cd_estab_exclusivo,
	ie_tipo_livro_ecd,
	cd_cnpj,
	cd_pessoa_fisica,
	dt_inicial,
	dt_final,
	nr_seq_info,
	nr_livro,
	nr_documento,
	nm_tabela,
	nm_atributo
into STRICT 	ds_livro_w,
	cd_estab_exclusivo_w,
	ie_tipo_livro_ecd_w,
	cd_cnpj_w,
	cd_pessoa_fisica_w,
	dt_inicial_w,
	dt_final_w,
	nr_seq_info_w,
	nr_livro_w,
	nr_documento_w,
	nm_tabela_w,
	nm_atributo_w
from   	ctb_livro_auxiliar
where 	nr_sequencia = nr_sequencia_p;




        open c01;
	loop
	fetch c01 into
	        nr_seq_movto_w,
		dt_movimento_w,
		vl_movimento_w,
		ie_debito_credito_w,
		nr_lancamento_w,
		cd_conta_contabil_w,
		nr_seq_doc_compl_w,
                nr_seq_info_doc_w,
                nr_documento_ctb_w;
        EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

                if (ie_debito_credito_w = 'C') then

			vl_credito_w := vl_movimento_w;
		else

			vl_debito_w := vl_movimento_w;

	        end if;


		if (cd_conta_contabil_w <>  cd_conta_contabil_atual_w) then

		vl_saldo_anterior_w :=	ctb_obter_saldo_data(
					cd_estab_exclusivo_w,
					cd_conta_contabil_w,
					null,
					dt_inicial_w);




			insert into ctb_livro_aux_movto(nr_sequencia,
				dt_atualizacao,
				cd_conta_contabil,
				dt_movimento,
				nm_usuario,
				ie_debito_credito,
				ie_linha,
				nr_documento,
				nr_lancamento,
				nr_seq_info,
				nr_seq_movto,
				nr_seq_doc_compl,
				ds_linha,
				vl_credito,
				vl_debito,
				vl_movimento,
				vl_saldo,
				nr_seq_livro)
			values (nextval('ctb_livro_aux_movto_seq'),
				clock_timestamp(),
				cd_conta_contabil_w,
				dt_movimento_w,
				nm_usuario_p,
				ie_debito_credito_w,
			        'SANT',
				nr_documento_ctb_w,
				nr_lancamento_w,
				nr_seq_info_doc_w,
				nr_seq_movto_w,
				nr_seq_doc_compl_w,
				wheb_mensagem_pck.get_texto(379157),
				vl_credito_w,
				vl_debito_w,
				vl_movimento_w,
				vl_saldo_anterior_w,
				nr_sequencia_p);

				cd_conta_contabil_atual_w := cd_conta_contabil_w;

				vl_saldo_w	:= vl_saldo_anterior_w;

		else

		vl_saldo_w := vl_saldo_w + vl_movimento_w;

                insert into ctb_livro_aux_movto(nr_sequencia,
						dt_atualizacao,
						cd_conta_contabil,
						dt_movimento,
						nm_usuario,
						ie_debito_credito,
						ie_linha,
						nr_documento,
						nr_lancamento,
						nr_seq_info,
						nr_seq_movto,
						nr_seq_doc_compl,
						ds_linha,
						vl_credito,
						vl_debito,
						vl_movimento,
						vl_saldo,
						nr_seq_livro)
					values (nextval('ctb_livro_aux_movto_seq'),
						clock_timestamp(),
						cd_conta_contabil_w,
						dt_movimento_w,
						nm_usuario_p,
						ie_debito_credito_w,
						'M',
						nr_documento_ctb_w,
						nr_lancamento_w,
						nr_seq_info_doc_w,
						nr_seq_movto_w,
						nr_seq_doc_compl_w,
						wheb_mensagem_pck.get_texto(379121),
						vl_credito_w,
						vl_debito_w,
						vl_movimento_w,
						vl_saldo_w,
						nr_sequencia_p);

		end if;

	end;

    end loop;
close c01;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_livro_auxiliar (nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

