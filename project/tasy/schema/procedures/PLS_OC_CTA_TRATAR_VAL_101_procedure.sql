-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_101 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: 	Verificar quais são os tipos de tabela aceitos para o material
-------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_valido_w		pls_selecao_ocor_cta.ie_valido%type;
i			integer;

tb_seq_selecao_w	dbms_sql.number_table;
tb_observacao_w		dbms_sql.varchar2_table;
tb_valido_w		dbms_sql.varchar2_table;

C01 CURSOR(nr_seq_oc_cta_comb_pc	pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	a.ie_tipo_tabela_pode
	from	pls_oc_cta_val_tab_mat a
	where	a.nr_seq_oc_cta_comb = nr_seq_oc_cta_comb_pc;

C02 CURSOR(	nr_id_transacao_pc		pls_selecao_ocor_cta.nr_id_transacao%type) FOR
	SELECT	sel.nr_sequencia nr_seq_selecao,
		mat.cd_simpro,
		mat.cd_tiss_brasindice
	from	pls_selecao_ocor_cta sel,
		pls_material mat
	where	sel.nr_id_transacao = nr_id_transacao_pc
	and	sel.ie_valido = 'S'
	and	mat.nr_sequencia = sel.nr_seq_material;
BEGIN

if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '') then

	-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
	CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);

	-- Inicializar vetor usado para gravar na seleção
	tb_seq_selecao_w	:= pls_tipos_ocor_pck.num_table_vazia;
	tb_observacao_w		:= pls_tipos_ocor_pck.vchr2_table_vazia;
	tb_valido_w		:= pls_tipos_ocor_pck.vchr2_table_vazia;
	i			:= 0;

	-- Abre o cursor da regra
	for r_C01_w in C01(dados_regra_p.nr_sequencia) loop

		-- abre o cursor com os itens
		for r_C02_w in C02(nr_id_transacao_p) loop

			-- por padrão sempre gera ocorrência
			ie_valido_w := 'S';

			-- se for Simpro ou Brasíndice
			if (r_C01_w.ie_tipo_tabela_pode = '1') then
				if ((r_C02_w.cd_simpro IS NOT NULL AND r_C02_w.cd_simpro::text <> '') or (r_C02_w.cd_tiss_brasindice IS NOT NULL AND r_C02_w.cd_tiss_brasindice::text <> '')) then
					ie_valido_w := 'N';
				end if;
			-- se for Simpro e Brasíndice
			elsif (r_C01_w.ie_tipo_tabela_pode = '2') then
				if (r_C02_w.cd_simpro IS NOT NULL AND r_C02_w.cd_simpro::text <> '' AND r_C02_w.cd_tiss_brasindice IS NOT NULL AND r_C02_w.cd_tiss_brasindice::text <> '') then
					ie_valido_w := 'N';
				end if;
			end if;

			-- se for para gerar
			if (ie_valido_w = 'S') then

				tb_seq_selecao_w(i) := r_C02_w.nr_seq_selecao;
				tb_observacao_w(i) := null;
				tb_valido_w(i) := ie_valido_w;

				-- se atingiu a quantidade manda para o banco, senão só incrementa o contador i
				if (i >= pls_util_pck.qt_registro_transacao_w) then
					CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
											pls_tipos_ocor_pck.clob_table_vazia,
											'SEQ',
											tb_observacao_w,
											tb_valido_w,
											nm_usuario_p);

					tb_seq_selecao_w	:= pls_tipos_ocor_pck.num_table_vazia;
					tb_observacao_w		:= pls_tipos_ocor_pck.vchr2_table_vazia;
					tb_valido_w		:= pls_tipos_ocor_pck.vchr2_table_vazia;
					i			:= 0;
				else
					-- Caso não, alimenta o contador
					i := i + 1;
				end if;

			end if;
		end loop;

		-- se sobrou alguma coisa manda para o banco
		CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
								pls_tipos_ocor_pck.clob_table_vazia,
								'SEQ',
								tb_observacao_w,
								tb_valido_w,
								nm_usuario_p);

		-- seta os registros que serão válidos ou inválidos após o processamento
		CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);
	end loop;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_101 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

