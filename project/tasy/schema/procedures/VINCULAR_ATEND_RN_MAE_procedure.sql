-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE vincular_atend_rn_mae (nr_atend_rn_p bigint, nr_atend_mae_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
dt_final_vigencia_w	timestamp;
dt_nascimento_rn_w	timestamp;
dt_entrada_w		timestamp;
cd_convenio_w		bigint;
ie_trat_conta_rn_w	varchar(15);
qt_conv_rn_w		bigint;
nr_seq_interno_w	bigint;


BEGIN 
if (nr_atend_rn_p IS NOT NULL AND nr_atend_rn_p::text <> '') and (nr_atend_mae_p IS NOT NULL AND nr_atend_mae_p::text <> '') then 
 
	cd_convenio_w	:= obter_convenio_atendimento(nr_atend_mae_p);
 
	 
	select	coalesce(max(ie_trat_conta_rn),wheb_mensagem_pck.get_texto(306993)) 
	into STRICT	ie_trat_conta_rn_w 
	from	convenio_estabelecimento 
	where	cd_convenio		= cd_convenio_w 
	and	cd_estabelecimento	= cd_estabelecimento_p;
 
	update	atendimento_paciente 
	set	nr_atendimento_mae	= nr_atend_mae_p, 
		ie_trat_conta_rn	= ie_trat_conta_rn_w 
	where	nr_atendimento		= nr_atend_rn_p;
 
	select	coalesce(max(obter_data_nascto_pf(cd_pessoa_Fisica)), clock_timestamp()), 
		max(dt_entrada) 
	into STRICT	dt_nascimento_rn_w, 
		dt_entrada_w 
	from	atendimento_paciente_v 
	where	nr_atendimento = nr_atend_rn_p;
 
	select	coalesce(max(dt_final_vigencia), clock_timestamp()) 
	into STRICT	dt_final_vigencia_w 
	from	atendimento_paciente_v 
	where	nr_atendimento = nr_atend_mae_p;
 
	if (dt_final_vigencia_w IS NOT NULL AND dt_final_vigencia_w::text <> '') and (coalesce(dt_nascimento_rn_w, clock_timestamp()) > dt_final_vigencia_w) then 
		dt_final_vigencia_w := coalesce(dt_nascimento_rn_w, clock_timestamp());
	end if;
 
	select	count(*) 
	into STRICT	qt_conv_rn_w 
	from	atend_categoria_convenio 
	where	nr_atendimento = nr_atend_rn_p;	
	 
	 
	begin 
		select	a.nr_seq_interno 
		into STRICT	nr_seq_interno_w 
		from	atend_categoria_convenio a, 
			atend_categoria_convenio b 
		where	a.nr_atendimento = nr_Atend_mae_p 
		and	b.nr_atendimento = nr_atend_rn_p 
		and	a.cd_convenio = b.cd_convenio 
		and	a.cd_categoria = b.cd_categoria 
		and	b.dt_inicio_vigencia = greatest(coalesce(dt_nascimento_rn_w, clock_timestamp()), dt_entrada_w)  LIMIT 1;
	exception 
		when	no_data_found then 
			nr_seq_interno_w := 0;
	end;
 
	if (nr_seq_interno_w = 0) then 
	 
		if (qt_conv_rn_w > 0) then 
			insert	into atend_categoria_convenio( 
				nr_seq_interno, 
				nr_atendimento, 
				cd_convenio, 
				cd_categoria, 
				dt_inicio_vigencia, 
				dt_final_vigencia, 
				dt_atualizacao, 
				cd_usuario_convenio, 
				cd_empresa, 
				nm_usuario, 
				nr_doc_convenio, 
				cd_tipo_acomodacao, 
				cd_municipio_convenio, 
				cd_convenio_glosa, 
				cd_categoria_glosa, 
				dt_validade_carteira, 
				nr_acompanhante, 
				cd_plano_convenio, 
				cd_dependente, 
				nr_seq_origem, 
				cd_senha, 
				ie_tipo_guia, 
				ds_observacao, 
				qt_dia_internacao, 
				dt_ultimo_pagto, 
				cd_complemento, 
				dt_aceite_dif_acomod, 
				nm_usuario_aceite, 
				ds_observacao_aceite, 
				qt_dieta_acomp, 
				ie_lib_dieta) 
			(SELECT	nextval('atend_categoria_convenio_seq'), 
				nr_atend_rn_p, 
				cd_convenio, 
				cd_categoria, 
				coalesce(greatest(coalesce(dt_nascimento_rn_w, clock_timestamp()), dt_entrada_w), clock_timestamp()), 
				dt_final_vigencia_w, 
				dt_atualizacao, 
				cd_usuario_convenio, 
				cd_empresa, 
				nm_usuario, 
				nr_doc_convenio, 
				cd_tipo_acomodacao, 
				cd_municipio_convenio, 
				cd_convenio_glosa, 
				cd_categoria_glosa, 
				dt_validade_carteira, 
				nr_acompanhante, 
				cd_plano_convenio, 
				cd_dependente, 
				nr_seq_origem, 
				cd_senha, 
				ie_tipo_guia, 
				ds_observacao, 
				qt_dia_internacao, 
				dt_ultimo_pagto, 
				cd_complemento, 
				dt_aceite_dif_acomod, 
				nm_usuario_aceite, 
				ds_observacao_aceite, 
				qt_dieta_acomp, 
				ie_lib_dieta 
			from	atend_categoria_convenio 
			where	nr_atendimento	= nr_Atend_mae_p 
			and	nr_seq_interno = (select max(nr_seq_interno) from atend_categoria_convenio where nr_atendimento = nr_Atend_mae_p));
		end if;
	end if;
	 
commit;
 
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vincular_atend_rn_mae (nr_atend_rn_p bigint, nr_atend_mae_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

