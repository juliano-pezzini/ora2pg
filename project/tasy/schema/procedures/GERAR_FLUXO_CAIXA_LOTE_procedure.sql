-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_fluxo_caixa_lote (dt_referencia_p timestamp, cd_conta_financ_p bigint, ds_observacao_p text, ie_identificacao_p text, ie_integracao_p text, nm_usuario_p text, cd_agenda_p bigint, nr_interno_conta_p bigint, nr_ordem_compra_p bigint, nr_repasse_terceiro_p bigint, nr_seq_cheque_cp_p bigint, nr_seq_cheque_cr_p bigint, nr_seq_contrato_p bigint, nr_seq_conv_receb_p bigint, nr_seq_lote_fluxo_p bigint, nr_seq_movto_cartao_p bigint, nr_seq_movto_trans_p bigint, nr_seq_proj_recurso_p bigint, nr_seq_protocolo_p bigint, nr_seq_regra_p bigint, nr_titulo_pagar_p bigint, nr_titulo_receber_p bigint, vl_fluxo_p bigint) AS $body$
DECLARE

 
nr_seq_fluxo_item_w	fluxo_caixa_item.nr_sequencia%type;
ie_acumular_fluxo_w	regra_fluxo_caixa.ie_acumular_fluxo%type	:= 'S';
dt_referencia_w		timestamp;
cd_moeda_fluxo_w	integer;
ds_pessoa_w		fluxo_caixa_item.ds_nome%type;

/*--------------------------------------------------------------- ATENÇÃO ----------------------------------------------------------------*/
 
/* Cuidado ao realizar alterações no fluxo de caixa em lote. Toda e qualquer alteração realizada em qualquer uma */
 
/* das procedures do fluxo de caixa em lote deve ser cuidadosamente verificada e realizada no fluxo de caixa   */
 
/* convencional. Devemos garantir que os dois fluxos de caixa tragam os mesmos valores no resultado, evitando   */
 
/* assim que existam diferenças entre os fluxos de caixa.                                                */
 
/*--------------- AO ALTERAR O FLUXO DE CAIXA EM LOTE ALTERAR TAMBÉM O FLUXO DE CAIXA ---------------*/
 
 
/*IE_IENTIFICACAO_P 
1P até 11P	- procedure gerar_fluxo_caixa_lote_passado 
1R até 9R 	- procedure gerar_fluxo_caixa_lote_real 
1V até 3V	- procedure gerar_fluxo_caixa_lot_vencido 
12 - procedure gerar_fluxo_lote_saldo_banco 
13 - procedure gerar_fluxo_caixa_lote_agrup 
14 - procedure gerar_fluxo_caixa_lote_externo 
15 - procedure gerar_fluxo_caixa_lote_agenda 
16 - procedure gerar_fluxo_caixa_lote_contrat 
17 - procedure gerar_fluxo_lote_prev_contrato 
18 - procedure gerar_fluxo_caixa_lote_oc 
19 - procedure gerar_fluxo_caixa_lote_sus 
20 - procedure gerar_fluxo_caixa_lote_repasse 
21 - procedure gerar_fluxo_caixa_lote_vl_fixo 
22 - procedure gerar_fluxo_caixa_lote_vl_regr 
23 - procedure acumula_fluxo_caixa_lote_nivel 
24 - procedure calcular_fluxo_caixa_lote 
25 - procedure gerar_fluxo_caixa_lote_mes_ant 
26 - procedure gerar_fluxo_regra_saldo 
*/
 
 

BEGIN 
 
dt_referencia_w	:= trunc(dt_referencia_p);
 
/* Projeto Multimoeda - Busca a moeda do fluxo. */
 
select	max(cd_moeda) 
into STRICT	cd_moeda_fluxo_w 
from 	fluxo_caixa_lote 
where	nr_sequencia = nr_seq_lote_fluxo_p;
 
select	coalesce(max(nr_sequencia),0) 
into STRICT	nr_seq_fluxo_item_w 
from	fluxo_caixa_item 
where	cd_conta_financ			= cd_conta_financ_p 
and	dt_referencia			= dt_referencia_w 
and	ie_integracao			= ie_integracao_p 
and	coalesce(nr_interno_conta,0)		= coalesce(nr_interno_conta_p,0) 
and	coalesce(nr_ordem_compra,0)		= coalesce(nr_ordem_compra_p,0) 
and	coalesce(nr_repasse_terceiro,0)	= coalesce(nr_repasse_terceiro_p,0) 
and	coalesce(cd_agenda,0)		= coalesce(cd_agenda_p,0) 
and	coalesce(nr_seq_cheque_cp,0)		= coalesce(nr_seq_cheque_cp_p,0) 
and	coalesce(nr_seq_cheque_cr,0)		= coalesce(nr_seq_cheque_cr_p,0) 
and	coalesce(nr_seq_contrato,0)		= coalesce(nr_seq_contrato_p,0) 
and	coalesce(nr_seq_conv_receb,0)	= coalesce(nr_seq_conv_receb_p,0) 
and	coalesce(nr_seq_lote_fluxo,0)	= coalesce(nr_seq_lote_fluxo_p,0) 
and	coalesce(nr_seq_movto_cartao,0)	= coalesce(nr_seq_movto_cartao_p,0) 
and	coalesce(nr_seq_movto_trans,0)	= coalesce(nr_seq_movto_trans_p,0) 
and	coalesce(nr_seq_proj_recurso,0)	= coalesce(nr_seq_proj_recurso_p,0) 
and	coalesce(nr_seq_protocolo,0)		= coalesce(nr_seq_protocolo_p,0) 
and	coalesce(nr_seq_regra,0)		= coalesce(nr_seq_regra_p,0) 
and	coalesce(nr_titulo_pagar,0)		= coalesce(nr_titulo_pagar_p,0) 
and	coalesce(nr_titulo_receber,0)	= coalesce(nr_titulo_receber_p,0) 
and	coalesce(cd_moeda,0) 		= coalesce(cd_moeda_fluxo_w,0);
 
if (nr_seq_fluxo_item_w = 0) then 
	 
	if (coalesce(nr_titulo_pagar_p,0) > 0) then 
		select	substr(obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc), 1,100) 
		into STRICT	ds_pessoa_w 
		from	titulo_pagar 
		where	nr_titulo = nr_titulo_pagar_p;
	elsif (coalesce(nr_titulo_receber_p,0) > 0) then 
		select	substr(obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc), 1,100) 
		into STRICT	ds_pessoa_w 
		from	titulo_receber 
		where	nr_titulo = nr_titulo_receber_p;
	elsif (coalesce(nr_seq_cheque_cp_p,0) > 0) then 
		select	substr(coalesce(ds_destinatario,obter_nome_pf_pj(cd_pessoa_destinatario, cd_cgc_destinatario)), 1,100) 
		into STRICT	ds_pessoa_w 
		from	cheque 
		where	nr_sequencia = nr_seq_cheque_cp_p;
	elsif (coalesce(nr_seq_cheque_cr_p,0) > 0) then 
		select	substr(obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc), 1,100) 
		into STRICT	ds_pessoa_w 
		from	cheque_cr 
		where	nr_seq_cheque = nr_seq_cheque_cr_p;
	elsif (coalesce(nr_interno_conta_p,0) > 0) then 
		select	substr(obter_nome_pf_pj(max(cd_pessoa_fisica), max(cd_cgc)), 1,100) 
		into STRICT	ds_pessoa_w 
		from	titulo_receber 
		where	nr_interno_conta = nr_interno_conta_p;
	elsif (coalesce(nr_seq_protocolo_p,0) > 0) then 
		select	substr(wheb_mensagem_pck.get_texto(296585) || ' ' || a.nr_protocolo || ' - ' || b.ds_convenio,1,100) 
		into STRICT	ds_pessoa_w 
		from	protocolo_convenio a, 
			convenio b 
		where	a.nr_seq_protocolo = nr_seq_protocolo_p 
		and	a.cd_convenio = b.cd_convenio;
	elsif (coalesce(nr_seq_contrato_p,0) > 0) then 
		select (substr(ds_objeto_contrato,1,100) || ' - ' || substr(obter_nome_pf_pj(cd_pessoa_contratada,cd_cgc_contratado),1,60)) 
		into STRICT	ds_pessoa_w 
		from	contrato 
		where	nr_sequencia = nr_seq_contrato_p;
	elsif (coalesce(nr_ordem_compra_p,0) > 0) then 
		select	substr(obter_nome_pf_pj(cd_pessoa_fisica,cd_cgc_fornecedor),1,100) 
		into STRICT	ds_pessoa_w 
		from	ordem_compra 
		where	nr_ordem_compra = nr_ordem_compra_p;
	elsif (coalesce(nr_seq_conv_receb_p,0) > 0) then 
		select	substr(b.ds_convenio,1,100) 
		into STRICT	ds_pessoa_w 
		from	convenio_receb a, 
			convenio b 
		where	a.cd_convenio = b.cd_convenio 
		and	a.nr_sequencia = nr_seq_conv_receb_p;
	elsif (coalesce(nr_seq_movto_cartao_p,0) > 0) then 
		select	substr(obter_nome_pf_pj(cd_pessoa_fisica,cd_cgc),1,100) 
		into STRICT	ds_pessoa_w 
		from	movto_cartao_cr 
		where	nr_sequencia = nr_seq_movto_cartao_p;
	elsif (coalesce(nr_seq_movto_trans_p,0) > 0) then 
		select	case 	when (a.nr_seq_caixa IS NOT NULL AND a.nr_seq_caixa::text <> '') then substr(c.ds_caixa||' - '||b.ds_transacao||' - '||obter_nome_pf_pj(null,a.cd_cgc),1,255) 
				when (a.nr_seq_banco IS NOT NULL AND a.nr_seq_banco::text <> '') then substr(d.ds_banco||' - '||b.ds_transacao||' - '||obter_nome_pf_pj(null,a.cd_cgc),1,255) 
				else substr(obter_nome_pf_pj(a.cd_pessoa_fisica,a.cd_cgc),1,100) end 
		into STRICT	ds_pessoa_w 
		FROM transacao_financeira b, movto_trans_financ a
LEFT OUTER JOIN caixa c ON (a.nr_seq_caixa = c.nr_sequencia)
LEFT OUTER JOIN banco_estabelecimento_v d ON (a.nr_seq_banco = d.nr_sequencia)
WHERE a.nr_seq_trans_financ = b.nr_sequencia   and a.nr_sequencia = nr_seq_movto_trans_p;
	elsif (coalesce(nr_seq_proj_recurso_p,0) > 0) then 
		ds_pessoa_w := '';
	elsif (coalesce(nr_repasse_terceiro_p,0) > 0) then 
		ds_pessoa_w := '';
	elsif (coalesce(cd_agenda_p,0) > 0) then 
		ds_pessoa_w := '';
	elsif (coalesce(nr_seq_regra_p,0) > 0) then 
		select	substr(ds_titulo,1,100) 
		into STRICT	ds_pessoa_w 
		from	regra_fluxo_caixa 
		where	nr_sequencia = nr_seq_regra_p;
	end if;
	 
	insert into fluxo_caixa_item( 
		nr_sequencia, 
		cd_conta_financ, 
		ds_observacao, 
		dt_atualizacao, 
		dt_atualizacao_nrec, 
		dt_referencia, 
		ie_identificacao, 
		ie_integracao, 
		nm_usuario, 
		nm_usuario_nrec, 
		nr_interno_conta, 
		nr_ordem_compra, 
		nr_repasse_terceiro, 
		cd_agenda, 
		nr_seq_cheque_cp, 
		nr_seq_cheque_cr, 
		nr_seq_contrato, 
		nr_seq_conv_receb, 
		nr_seq_lote_fluxo, 
		nr_seq_movto_cartao, 
		nr_seq_movto_trans, 
		nr_seq_proj_recurso, 
		nr_seq_protocolo, 
		nr_seq_regra, 
		nr_titulo_pagar, 
		nr_titulo_receber, 
		vl_fluxo, 
		cd_moeda, 
		ds_nome) 
	values (nextval('fluxo_caixa_item_seq'), 
		cd_conta_financ_p, 
		ds_observacao_p, 
		clock_timestamp(), 
		clock_timestamp(), 
		dt_referencia_w, 
		ie_identificacao_p, 
		ie_integracao_p, 
		nm_usuario_p, 
		nm_usuario_p, 
		cd_agenda_p, 
		nr_interno_conta_p, 
		nr_ordem_compra_p, 
		nr_repasse_terceiro_p, 
		nr_seq_cheque_cp_p, 
		nr_seq_cheque_cr_p, 
		nr_seq_contrato_p, 
		nr_seq_conv_receb_p, 
		nr_seq_lote_fluxo_p, 
		nr_seq_movto_cartao_p, 
		nr_seq_movto_trans_p, 
		nr_seq_proj_recurso_p, 
		nr_seq_protocolo_p, 
		nr_seq_regra_p, 
		nr_titulo_pagar_p, 
		nr_titulo_receber_p, 
		vl_fluxo_p, 
		cd_moeda_fluxo_w, 
		ds_pessoa_w);
else 
	if (nr_seq_regra_p IS NOT NULL AND nr_seq_regra_p::text <> '') then 
		select	ie_acumular_fluxo 
		into STRICT	ie_acumular_fluxo_w 
		from	regra_fluxo_caixa 
		where	nr_sequencia = nr_seq_regra_p;
	end if;
	/* Atenção! Quando o fluxo for referente a saldo diário de conta bancária, ie_identificacao_p = 12, 
		não deve ocorrer acumulo do fluxo de caixa, uma vez que saldo bancário não acumula. 
		O mesmo vale para o ie_identificacao_p = 26, onde é gerado o saldo diário de banco + saldo diário de caixa, onde não deve acumular valores. */
 
	update	fluxo_caixa_item 
	set	vl_fluxo	= CASE WHEN ie_identificacao_p='12' THEN coalesce(vl_fluxo_p,0) WHEN ie_identificacao_p='26' THEN coalesce(vl_fluxo_p,0)  ELSE CASE WHEN ie_acumular_fluxo_w='S' THEN  coalesce(vl_fluxo,0) + coalesce(vl_fluxo_p,0)  ELSE coalesce(vl_fluxo_p,0) END  END  
	where	nr_sequencia	= nr_seq_fluxo_item_w;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_fluxo_caixa_lote (dt_referencia_p timestamp, cd_conta_financ_p bigint, ds_observacao_p text, ie_identificacao_p text, ie_integracao_p text, nm_usuario_p text, cd_agenda_p bigint, nr_interno_conta_p bigint, nr_ordem_compra_p bigint, nr_repasse_terceiro_p bigint, nr_seq_cheque_cp_p bigint, nr_seq_cheque_cr_p bigint, nr_seq_contrato_p bigint, nr_seq_conv_receb_p bigint, nr_seq_lote_fluxo_p bigint, nr_seq_movto_cartao_p bigint, nr_seq_movto_trans_p bigint, nr_seq_proj_recurso_p bigint, nr_seq_protocolo_p bigint, nr_seq_regra_p bigint, nr_titulo_pagar_p bigint, nr_titulo_receber_p bigint, vl_fluxo_p bigint) FROM PUBLIC;

