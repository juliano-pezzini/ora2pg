-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE estornar_enc_contas_abat_nc ( nr_sequencia_nf_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*NÂO DAR COMMIT NESSA PROC. Ela é chamada dentro da estornar_nota_fiscal, e lá  é dado o commit.*/

nr_sequencia_nf_origem_w			nota_fiscal.nr_sequencia_ref%type;
nr_titulo_nf_orig_w					bigint;
ie_tipo_titulo_nf_orig_w			varchar(1);
nr_titulo_nf_credito_w				bigint;
ie_tipo_titulo_nf_credito_w			varchar(1);

nr_titulo_pagar_w					titulo_pagar_baixa.nr_titulo%type;
nr_sequencia_baixa_pg_w				titulo_pagar_baixa.nr_sequencia%type;
nr_seq_baixa_rec_w					titulo_pagar_baixa.nr_seq_baixa_rec%type;
nr_tit_receber_w					titulo_pagar_baixa.nr_tit_receber%type;

nr_titulo_receber_w					titulo_receber_liq.nr_titulo%type;
nr_sequencia_baixa_rec_w			titulo_receber_liq.nr_sequencia%type;
nr_seq_baixa_pagar_w				titulo_receber_liq.nr_seq_baixa_pagar%type;
nr_tit_pagar_w						titulo_receber_liq.nr_tit_pagar%type;
nr_seq_baixa_w						titulo_receber_liq.nr_sequencia%type;

ie_situacao_w						titulo_pagar.ie_situacao%type;
vl_saldo_tit_pg_w					titulo_pagar.vl_saldo_titulo%type;

nr_seq_tit_trib_w					titulo_receber_trib.nr_sequencia%type;
qt_estorno_trib_w					bigint;

vl_tit_baixa_w						titulo_receber_trib_baixa.vl_baixa%type;
vl_saldo_tributo_w					titulo_receber_trib.vl_saldo%type;


/*Cursor para buscar titulos gerados a partir da nota de entrada/saída vinculados a nota de crédito que está sendo cancelada.*/

C01 CURSOR FOR
	SELECT	a.nr_titulo,
			'P'
	from	titulo_pagar a
	where   a.nr_seq_nota_fiscal = nr_sequencia_nf_p
	
union

	SELECT	a.nr_titulo,
			'R'
	from	titulo_receber a
	where   a.nr_seq_nf_saida    = nr_sequencia_nf_p;


/*Cursor para buscar as baixas dos títulos a pagar da nota de origem vinculados ao titulo da nota de credito para estornar*/

C02 CURSOR FOR
	SELECT	a.nr_titulo,
			a.nr_sequencia,
			a.nr_seq_baixa_rec,
			a.nr_tit_receber
	from	titulo_pagar_baixa a,
			titulo_pagar b
	where	a.nr_titulo				= b.nr_titulo
	and		b.nr_seq_nota_fiscal 	= nr_sequencia_nf_origem_w
	and		a.nr_tit_receber		= nr_titulo_nf_orig_w;


/*Cursor para buscar as baixas dos títulos a receber da nota de origem vinculados ao titulo da nota de credito para estornar*/

C03 CURSOR FOR
	SELECT	a.nr_titulo,
			a.nr_sequencia,
			a.nr_seq_baixa_pagar,
			a.nr_tit_pagar
	from	titulo_receber_liq a,
			titulo_receber b
	where   a.nr_titulo				= b.nr_titulo
	and		b.nr_seq_nf_saida  		= nr_sequencia_nf_origem_w
	and		a.nr_tit_pagar			= nr_titulo_nf_orig_w;

C04 CURSOR FOR
	SELECT	nr_sequencia
	from	titulo_receber_trib
	where	nr_titulo = nr_titulo_receber_w;


BEGIN

/*Somente para o México*/

if (philips_param_pck.get_cd_pais = 2) then

	/*Buscar a nota fiscal original vinculada a nota de credito que esta sendo cancelada*/

	select	max(a.nr_sequencia_ref)
	into STRICT	nr_sequencia_nf_origem_w
	from	nota_fiscal a
	where	a.nr_sequencia = nr_sequencia_nf_p;
	if (nr_sequencia_nf_origem_w IS NOT NULL AND nr_sequencia_nf_origem_w::text <> '') then

		open C01;
		loop
		fetch C01 into
			nr_titulo_nf_orig_w,
			ie_tipo_titulo_nf_orig_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			/*Se for um Títulos a pagar*/

			if (ie_tipo_titulo_nf_orig_w = 'P') then

				open C03;
				loop
				fetch C03 into
					nr_titulo_receber_w,
					nr_sequencia_baixa_rec_w,
					nr_seq_baixa_pagar_w,
					nr_tit_pagar_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin

					/*OS 1393171 - O cancelamento do título pode ocorrer no estorno da nota, então aqui não pode tentar fazer isso novamente..*/

					select	max(ie_situacao),
							max(vl_saldo_titulo)
					into STRICT	ie_situacao_w,
							vl_saldo_tit_pg_w
					from	titulo_pagar
					where	nr_titulo = nr_tit_pagar_w;

					if ( coalesce(ie_situacao_w,'C' ) <> 'C') and (coalesce(vl_saldo_tit_pg_w,0) <> 0) then
						CALL Estornar_tit_pagar_baixa( nr_tit_pagar_w,
												   nr_seq_baixa_pagar_w,
												   clock_timestamp(),
												   nm_usuario_p,
												   'N');

						CALL Atualizar_Saldo_Tit_Pagar(	nr_tit_pagar_w, nm_usuario_p);

						CALL cancelar_titulo_pagar(	nr_tit_pagar_w,
												nm_usuario_p,
												clock_timestamp());
					elsif (ie_situacao_w = 'L') and (vl_saldo_tit_pg_w = 0) then
						/*OS 1393171 - O cancelamento do título pode ocorrer no estorno da nota, então aqui não pode tentar fazer isso novamente..SO muda para cancelado, igual qdo estorna a NF e o titulo ja tem baixa...*/

						update 	titulo_pagar
						set		ie_situacao = 'C'
						where	nr_titulo = nr_tit_pagar_w;

					end if;

					/*Não da pra chamar a Estornar_tit_receber_liq  aqui pq entra em loop, ja existe rotinas dentro dessa que vao acabar chaando a estornar_nota_fiscal novamente, que acabaria chamando essa novamente*/

					select	coalesce(max(nr_sequencia),0) + 1
					into STRICT	nr_seq_baixa_w
					from	titulo_receber_liq
					where	nr_titulo = nr_titulo_receber_w;

					insert into titulo_receber_liq(nr_titulo,
													nr_sequencia,
													dt_recebimento,
													vl_recebido,
													vl_descontos,
													vl_juros,
													vl_multa,
													cd_moeda,
													dt_atualizacao,
													nm_usuario,
													cd_tipo_recebimento,
													ie_acao,
													cd_serie_nf_devol,
													nr_nota_fiscal_devol,
													cd_banco,
													cd_agencia_bancaria,
													nr_documento,
													nr_lote_banco,
													cd_cgc_emp_cred,
													nr_cartao_cred,
													nr_adiantamento,
													nr_lote_contabil,
													nr_seq_trans_fin,
													vl_rec_maior,
													vl_glosa,
													nr_seq_retorno,
													vl_adequado,
													nr_seq_ret_item,
													nr_seq_conta_banco,
													vl_despesa_bancaria,
													ds_observacao,
													ie_lib_caixa,
													nr_seq_trans_caixa,
													cd_centro_custo_desc,
													nr_seq_motivo_desc,
													nr_bordero,
													vl_perdas,
													vl_outros_acrescimos,
													nr_tit_pagar,
													nr_seq_baixa_pagar,
													nr_seq_lote_hist_guia,
													vl_nota_credito,
													vl_cambial_passivo,
													vl_cambial_ativo,
													nr_lote_contab_antecip,
													nr_lote_contab_pro_rata,
													nr_seq_liq_origem,
													nr_seq_lote_enc_contas,
													vl_glosa_ato_coop_aux,
													vl_glosa_ato_coop_princ,
													vl_glosa_ato_nao_coop,
													nr_seq_pls_lote_camara,
													vl_recebido_estrang,
													vl_complemento,
													vl_cotacao,
													nr_seq_cobranca,
													ie_gerar_baixa_trib)
											SELECT	nr_titulo_receber_w,
													nr_seq_baixa_w,
													coalesce(clock_timestamp(),dt_recebimento),
													vl_recebido * -1,
													vl_descontos * -1,
													vl_juros * -1,
													vl_multa * -1,
													cd_moeda,
													clock_timestamp(),
													nm_usuario_p,
													cd_tipo_recebimento,
													ie_acao,
													cd_serie_nf_devol,
													nr_nota_fiscal_devol,
													cd_banco,
													cd_agencia_bancaria,
													nr_documento,
													nr_lote_banco,
													cd_cgc_emp_cred,
													nr_cartao_cred,
													nr_adiantamento,
													0,
													nr_seq_trans_fin,
													vl_rec_maior * -1,
													vl_glosa * -1,
													null,
													vl_adequado * -1,
													null,
													nr_seq_conta_banco,
													vl_despesa_bancaria * -1,
													null, --observacao
													ie_lib_caixa,
													nr_seq_trans_caixa,
													cd_centro_custo_desc,
													nr_seq_motivo_desc,
													nr_bordero,
													vl_perdas * -1,
													vl_outros_acrescimos * -1,
													nr_tit_pagar,
													nr_seq_baixa_pagar,
													nr_seq_lote_hist_guia,
													vl_nota_credito * -1,
													vl_cambial_passivo * -1,
													vl_cambial_ativo * -1,
													0,
													0,
													nr_sequencia,
													nr_seq_lote_enc_contas,
													vl_glosa_ato_coop_aux * -1,
													vl_glosa_ato_coop_princ  * -1,
													vl_glosa_ato_nao_coop  * -1,
													nr_seq_pls_lote_camara,
													CASE WHEN coalesce(vl_recebido_estrang::text, '') = '' THEN null  ELSE vl_recebido_estrang * -1 END , -- Projeto Multimoeda - inverte os valores quando moeda estrangeira
													CASE WHEN coalesce(vl_recebido_estrang::text, '') = '' THEN null  ELSE vl_complemento * -1 END ,
													CASE WHEN coalesce(vl_recebido_estrang::text, '') = '' THEN null  ELSE vl_cotacao END ,
													nr_seq_cobranca,
													ie_gerar_baixa_trib
											from	titulo_receber_liq
											where	nr_titulo	= nr_titulo_receber_w
											and	nr_sequencia	= nr_sequencia_baixa_rec_w;

					/*OS 1477033 - Gerar estorno da classif da baixa se houver*/

					insert into titulo_rec_liq_cc(nr_sequencia,
												nr_titulo,
												nr_seq_baixa,
												dt_atualizacao,
												nm_usuario,
												cd_centro_custo,
												vl_baixa,
												vl_amaior,
												dt_atualizacao_nrec,
												nm_usuario_nrec,
												cd_cta_ctb_origem,
												cd_conta_contabil,
												vl_recebido,
												cd_conta_deb_pls,
												cd_conta_rec_pls,
												nr_seq_mens_seg_item,
												cd_historico_pls,
												nr_seq_conta_pls,
												nr_seq_produto,
												cd_conta_antec_pls,
												cd_historico_antec_pls,
												vl_antecipacao_mens,
												vl_pro_rata,
												ie_lote_pro_rata,
												vl_contab_pro_rata,
												cd_conta_rec_antecip,
												cd_conta_deb_antecip,
												cd_historico_rev_antec,
												ie_origem_classif,
												vl_perdas,
												vl_recebido_estrang,
												vl_complemento,
												vl_cotacao,
												cd_moeda,
												vl_desconto,
												vl_juros,
												vl_multa)
										SELECT	nextval('titulo_rec_liq_cc_seq'),
												nr_titulo_receber_w,
												nr_seq_baixa_w,
												clock_timestamp(),
												nm_usuario_p,
												cd_centro_custo,
												vl_baixa * -1,
												vl_amaior * -1,
												clock_timestamp(),
												nm_usuario_p,
												cd_cta_ctb_origem,
												cd_conta_contabil,
												vl_recebido * -1,
												cd_conta_deb_pls,
												cd_conta_rec_pls,
												nr_seq_mens_seg_item,
												cd_historico_pls,
												nr_seq_conta_pls,
												nr_seq_produto,
												cd_conta_antec_pls,
												cd_historico_antec_pls,
												vl_antecipacao_mens * - 1,
												vl_pro_rata * - 1,
												ie_lote_pro_rata,
												vl_contab_pro_rata * - 1,
												cd_conta_rec_antecip,
												cd_conta_deb_antecip,
												cd_historico_rev_antec,
												ie_origem_classif,
												CASE WHEN coalesce(vl_perdas::text, '') = '' THEN null  ELSE (vl_perdas*-1) END ,
												CASE WHEN coalesce(vl_recebido_estrang::text, '') = '' THEN null  ELSE vl_recebido_estrang * -1 END , -- Projeto Multimoeda - inverte os valores quando moeda estrangeira
												CASE WHEN coalesce(vl_recebido_estrang::text, '') = '' THEN null  ELSE vl_complemento * -1 END ,
												CASE WHEN coalesce(vl_recebido_estrang::text, '') = '' THEN null  ELSE vl_cotacao END ,
												cd_moeda,
												vl_desconto * -1,
												vl_juros * -1,
												vl_multa * -1
										from	titulo_rec_liq_cc
										where	nr_titulo		= nr_titulo_receber_w
										and		nr_seq_baixa	= nr_sequencia_baixa_rec_w;


					open C04;
					loop
					fetch C04 into
						nr_seq_tit_trib_w;
					EXIT WHEN NOT FOUND; /* apply on C04 */
						begin

						/*Excluir tributo no valor 0 que foi gerado apos o insert na trigger. Ele é gerado com valor 0 pois o vl_recebido da baixa estornada é 0.*/

						delete 	FROM titulo_receber_trib_baixa
						where	nr_titulo 			= nr_titulo_receber_w
						and		nr_seq_tit_liq 		= nr_seq_baixa_w
						and		nr_seq_tit_trib		= nr_seq_tit_trib_w
						and		vl_baixa 			= 0;

						select	count(*)
						into STRICT	qt_estorno_trib_w
						from	titulo_receber_trib_baixa
						where	nr_titulo 			= nr_titulo_receber_w
						and		nr_seq_tit_liq 		= nr_seq_baixa_w
						and		nr_seq_tit_trib		= nr_seq_tit_trib_w
						and		vl_baixa 			= 0;
						/*Se nao tiver baixa de estorno para esse tributo, gerar!*/

						if (qt_estorno_trib_w = 0) then
							insert into titulo_receber_trib_baixa( nr_sequencia,
																vl_baixa,
																dt_atualizacao,
																nm_usuario,
																nr_seq_tit_trib,
																nr_titulo,
																nr_seq_tit_liq,
																nr_seq_trans_financ)
													SELECT		nextval('titulo_receber_trib_baixa_seq'),
																vl_baixa *-1,
																clock_timestamp(),
																nm_usuario_p,
																nr_seq_tit_trib_w,
																nr_titulo_receber_w,
																nr_seq_baixa_w,
																nr_seq_trans_financ
													from		titulo_receber_trib_baixa
													where		nr_titulo		= nr_titulo_receber_w
													and			nr_seq_tit_liq	= nr_sequencia_baixa_rec_w
													and			nr_seq_tit_trib = nr_seq_tit_trib_w;

							select	sum(vl_baixa)
							into STRICT	vl_tit_baixa_w
							from 	titulo_receber_trib_baixa
							where 	nr_seq_tit_trib	= nr_seq_tit_trib_w
							and		nr_titulo		= nr_titulo_receber_w;

							update	titulo_receber_trib
							set		vl_saldo 		= vl_tributo - coalesce(vl_tit_baixa_w,0)
							where	nr_sequencia 	= nr_seq_tit_trib_w
							and		nr_titulo		= nr_titulo_receber_w;

							/* Verifica o saldo para atualizar a data contabil do tributo */

							select	max(a.vl_saldo)
							into STRICT	vl_saldo_tributo_w
							from	titulo_receber_trib a
							where	a.nr_sequencia	= nr_seq_tit_trib_w
							and		a.nr_titulo		= nr_titulo_receber_w;

							if (coalesce(vl_saldo_tributo_w,0) <= 0) then
								update	titulo_receber_trib
								set		dt_contabil = clock_timestamp()
								where	nr_sequencia	= nr_seq_tit_trib_w
								and		nr_titulo		= nr_titulo_receber_w;
							else
								update	titulo_receber_trib
								set		dt_contabil  = NULL
								where	nr_sequencia	= nr_seq_tit_trib_w
								and		nr_titulo		= nr_titulo_receber_w;
							end if;

						end if;

						end;
					end loop;
					close C04;

					CALL atualizar_saldo_tit_rec(nr_titulo_receber_w, nm_usuario_p);

					end;
				end loop;
				close C03;

			/*Títulos a receber*/

			elsif (ie_tipo_titulo_nf_orig_w = 'R') then

				open C02;
				loop
				fetch C02 into
					nr_titulo_pagar_w,
					nr_sequencia_baixa_pg_w,
					nr_seq_baixa_rec_w,
					nr_tit_receber_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin

					/*Não da pra chamar a Estornar_tit_receber_liq  aqui pq entra em loop, ja existe rotinas dentro dessa que vao acabar chaando a estornar_nota_fiscal novamente, que acabaria chamando essa novamente*/

					select	coalesce(max(nr_sequencia),0) + 1
					into STRICT	nr_seq_baixa_w
					from	titulo_receber_liq
					where	nr_titulo = nr_tit_receber_w;

					insert into titulo_receber_liq(nr_titulo,
													nr_sequencia,
													dt_recebimento,
													vl_recebido,
													vl_descontos,
													vl_juros,
													vl_multa,
													cd_moeda,
													dt_atualizacao,
													nm_usuario,
													cd_tipo_recebimento,
													ie_acao,
													cd_serie_nf_devol,
													nr_nota_fiscal_devol,
													cd_banco,
													cd_agencia_bancaria,
													nr_documento,
													nr_lote_banco,
													cd_cgc_emp_cred,
													nr_cartao_cred,
													nr_adiantamento,
													nr_lote_contabil,
													nr_seq_trans_fin,
													vl_rec_maior,
													vl_glosa,
													nr_seq_retorno,
													vl_adequado,
													nr_seq_ret_item,
													nr_seq_conta_banco,
													vl_despesa_bancaria,
													ds_observacao,
													ie_lib_caixa,
													nr_seq_trans_caixa,
													cd_centro_custo_desc,
													nr_seq_motivo_desc,
													nr_bordero,
													vl_perdas,
													vl_outros_acrescimos,
													nr_tit_pagar,
													nr_seq_baixa_pagar,
													nr_seq_lote_hist_guia,
													vl_nota_credito,
													vl_cambial_passivo,
													vl_cambial_ativo,
													nr_lote_contab_antecip,
													nr_lote_contab_pro_rata,
													nr_seq_liq_origem,
													nr_seq_lote_enc_contas,
													vl_glosa_ato_coop_aux,
													vl_glosa_ato_coop_princ,
													vl_glosa_ato_nao_coop,
													nr_seq_pls_lote_camara,
													vl_recebido_estrang,
													vl_complemento,
													vl_cotacao,
													nr_seq_cobranca)
											SELECT	nr_tit_receber_w,
													nr_seq_baixa_w,
													coalesce(clock_timestamp(),dt_recebimento),
													vl_recebido * -1,
													vl_descontos * -1,
													vl_juros * -1,
													vl_multa * -1,
													cd_moeda,
													clock_timestamp(),
													nm_usuario_p,
													cd_tipo_recebimento,
													ie_acao,
													cd_serie_nf_devol,
													nr_nota_fiscal_devol,
													cd_banco,
													cd_agencia_bancaria,
													nr_documento,
													nr_lote_banco,
													cd_cgc_emp_cred,
													nr_cartao_cred,
													nr_adiantamento,
													0,
													nr_seq_trans_fin,
													vl_rec_maior * -1,
													vl_glosa * -1,
													null,
													vl_adequado * -1,
													null,
													nr_seq_conta_banco,
													vl_despesa_bancaria * -1,
													null, --observacao
													ie_lib_caixa,
													nr_seq_trans_caixa,
													cd_centro_custo_desc,
													nr_seq_motivo_desc,
													nr_bordero,
													vl_perdas * -1,
													vl_outros_acrescimos * -1,
													nr_tit_pagar,
													nr_seq_baixa_pagar,
													nr_seq_lote_hist_guia,
													vl_nota_credito * -1,
													vl_cambial_passivo * -1,
													vl_cambial_ativo * -1,
													0,
													0,
													nr_sequencia,
													nr_seq_lote_enc_contas,
													vl_glosa_ato_coop_aux * -1,
													vl_glosa_ato_coop_princ  * -1,
													vl_glosa_ato_nao_coop  * -1,
													nr_seq_pls_lote_camara,
													CASE WHEN coalesce(vl_recebido_estrang::text, '') = '' THEN null  ELSE vl_recebido_estrang * -1 END , -- Projeto Multimoeda - inverte os valores quando moeda estrangeira
													CASE WHEN coalesce(vl_recebido_estrang::text, '') = '' THEN null  ELSE vl_complemento * -1 END ,
													CASE WHEN coalesce(vl_recebido_estrang::text, '') = '' THEN null  ELSE vl_cotacao END ,
													nr_seq_cobranca
											from	titulo_receber_liq
											where	nr_titulo	= nr_tit_receber_w
											and	nr_sequencia	= nr_seq_baixa_rec_w;

					CALL atualizar_saldo_tit_rec(nr_tit_receber_w, nm_usuario_p);

					CALL cancelar_titulo_receber(nr_tit_receber_w,
											 nm_usuario_p,
											'N',
											clock_timestamp());

					CALL Estornar_tit_pagar_baixa( nr_titulo_pagar_w,
											   nr_sequencia_baixa_pg_w,
											   clock_timestamp(),
											   nm_usuario_p,
											   'N');

					CALL Atualizar_Saldo_Tit_Pagar(	nr_titulo_pagar_w, nm_usuario_p);

					end;
				end loop;
				close C02;

			end if;

			end;
		end loop;
		close C01;

	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE estornar_enc_contas_abat_nc ( nr_sequencia_nf_p bigint, nm_usuario_p text) FROM PUBLIC;

