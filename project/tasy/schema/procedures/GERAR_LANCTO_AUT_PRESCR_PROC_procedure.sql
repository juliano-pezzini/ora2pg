-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lancto_aut_prescr_proc ( nr_prescricao_p bigint, nr_seq_proced_p bigint, NR_SEQ_EVENTO_P bigint, NM_USUARIO_P text, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, nr_seq_exame_p bigint, ie_regra_lanc_aut_p text) AS $body$
DECLARE


ds_erro_w			varchar(255);
cd_estabelecimento_w		smallint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
cd_Local_Estoque_w		smallint;
ie_tipo_atendimento_w		smallint;
ie_Medico_atendimento_w		varchar(1);
ie_Local_Estoque_w		varchar(1);
cd_cgc_w			varchar(14);
cd_cgc_regra_w			varchar(14);
nr_doc_convenio_w		varchar(20);
nr_doc_propaci_w		varchar(20);
cd_procedimento_w          	bigint		:= 0;
ie_origem_proced_w		bigint		:= 0;
cd_material_w      		integer		:= 0;
nr_sequencia_w         		bigint		:= 0;
nr_seq_regra_w         		bigint		:= 0;
nr_seq_acao_regra_w		bigint		:= 0;
nr_seq_exame_propaci_w     	bigint		:= 0;
cd_unid_medida_w		varchar(30);
cd_medico_executor_w		varchar(10);
cd_medico_req_w			varchar(10);
cd_medico_resp_w		varchar(10);
cd_setor_regra_w		integer	:= 0;
cd_setor_atendimento_w		integer	:= 0;
qt_lancamento_w			double precision	:= 0;
dt_entrada_unidade_w		timestamp;
dt_entrada_unidade_intern_w	timestamp;
dt_entrada_w			timestamp;
qt_registro_w			bigint	:= 0;
qt_passagem_setor_w		bigint	:= 0;
nr_atend_original_w		bigint;
nr_interno_conta_w		bigint;

nr_seq_propaci_w		bigint;
cd_proc_propaci_w		bigint;
dt_proc_propaci_w		timestamp;
ie_origem_propaci_w		bigint;
nr_seq_exame_w			bigint;
cd_medico_propaci_w		varchar(10);
cd_medico_filtro_w		varchar(10);
cd_area_proc_w			bigint;
cd_especial_proc_w		bigint;
cd_grupo_proc_w			bigint;
tx_proc_propaci_w		double precision	:= 100;
dt_execucao_w			timestamp;
dt_alta_w			timestamp;
qt_porte_anestesico_w		smallint;
nr_seq_atepacu_w		bigint;
nr_seq_atepacu_intern_w		bigint;
cd_edicao_amb_w			integer;
qt_proc_alta_w			integer;
qt_proc_lib_evolucao_w		integer;
qt_mat_alta_w			integer;
qt_procedimento_w		double precision := 1;
ie_tipo_convenio_w		smallint;
qt_reg_w			bigint;
ie_funcao_medico_w		smallint;
nr_seq_proc_interno_w		bigint	:= 0;
nr_seq_proc_interno_ww		bigint	:= 0;
cd_senha_w			varchar(20);
cd_motivo_alta_w		bigint	:= null;
ie_medico_executor_w		varchar(1);
cd_medico_regra_w		varchar(10)	:= null;
ie_clinica_w			bigint;
tx_procedimento_w		double precision;
cd_tipo_acomodacao_w		bigint;
nr_anos_w			bigint;
cd_atividade_prof_bpa_w		smallint;
ie_regra_guia_w			varchar(5);
ie_consiste_item_w		varchar(1);
ie_consiste_item_ww		varchar(1);
dt_liberacao_evolucao_w		timestamp;
nr_prescricao_w			bigint;
cd_medico_prescr_w		varchar(10);
cd_medico_exec_item_w		varchar(10);
cd_especialidade_w		integer;
nr_seq_classificacao_w		bigint;
cd_tipo_anestesia_w		varchar(10);
cd_funcao_w			integer;
ie_tipo_atend_bpa_w		smallint;
ie_grupo_atend_bpa_w		smallint;
cd_plano_convenio_w		varchar(10);
IE_PROC_PRINC_ATEND_w		varchar(10);
ie_evolucao_clinica_w		varchar(3)	:= null;
ie_via_acesso_w			varchar(1);
cont_w				bigint;
ie_integracao_w			varchar(01)	:= 'N';
ie_tipo_guia_w			varchar(02);
nr_atendimento_w		bigint;

nr_seq_prescr_proc_w		bigint;
dt_prescricao_w			timestamp;
nr_seq_interno_w		bigint;
ds_dado_clinico_w		varchar(2000);
cd_setor_atend_w		integer	:= 0;
qt_regras_w			bigint;	
dt_prev_execucao_w		timestamp;	
cd_intervalo_w			varchar(7);
ds_horarios_w			varchar(2000);
dt_atual_trunc_w		timestamp	:= PKG_DATE_UTILS.start_of(clock_timestamp(), 'dd', 0);
ie_prescr_proc_sem_lib_w	varchar(30);

dia_feriado_w			varchar(1) := 'N';
dia_semana_w			smallint	:= 0;

ie_situacao_w  varchar(1);

C01 CURSOR FOR
SELECT a.nr_sequencia,
	a.cd_setor_atendimento
from 	regra_Lanc_Automatico a
where	a.cd_estabelecimento					= cd_estabelecimento_w
and	coalesce(a.cd_convenio, cd_convenio_w)			= cd_convenio_w
and	coalesce(a.ie_tipo_convenio, ie_tipo_convenio_w)		= ie_tipo_convenio_w
and (coalesce(a.ie_tipo_atendimento,ie_tipo_atendimento_w)	= ie_tipo_atendimento_w or	coalesce(ie_tipo_atendimento_w::text, '') = '')
and (a.nr_seq_evento					= nr_seq_evento_p)
and (coalesce(a.nr_seq_proc_interno, nr_seq_proc_interno_p) 	= nr_seq_proc_interno_p)
and	((coalesce(a.cd_medico, cd_medico_filtro_w)			= cd_medico_filtro_w) or (coalesce(cd_medico_filtro_w::text, '') = ''))
and (coalesce(a.cd_procedimento,cd_proc_propaci_w)		= cd_proc_propaci_w or coalesce(cd_proc_propaci_w::text, '') = '')
and (coalesce(a.cd_area_procedimento,cd_area_proc_w)		= cd_area_proc_w 	or coalesce(cd_area_proc_w::text, '') = '')
and (coalesce(a.cd_especialidade_proc,cd_especial_proc_w) 	= cd_especial_proc_w or coalesce(cd_especial_proc_w::text, '') = '')
and (coalesce(a.cd_grupo_proc,cd_grupo_proc_w)			= cd_grupo_proc_w or coalesce(cd_grupo_proc_w::text, '') = '')
and	((coalesce(a.cd_edicao_amb,cd_edicao_amb_w)			= cd_edicao_amb_w) or (coalesce(cd_edicao_amb_w::text, '') = ''))
and (coalesce(a.nr_seq_exame,nr_seq_exame_propaci_w)		= nr_seq_exame_propaci_w)
and	coalesce(a.cd_categoria, cd_categoria_w)			= cd_categoria_w
and	coalesce(cd_setor_atendimento, coalesce(cd_setor_atend_w,0))	= coalesce(cd_setor_atend_w,0)
and	((coalesce(ie_clinica::text, '') = '') or (ie_clinica = ie_clinica_w))
and	((coalesce(cd_tipo_acomodacao::text, '') = '') or (coalesce(cd_tipo_acomodacao_w::text, '') = '') or (cd_tipo_acomodacao = cd_tipo_acomodacao_w))
and	((coalesce(cd_tipo_anestesia::text, '') = '') or (coalesce(cd_tipo_anestesia_w::text, '') = '') or (cd_tipo_anestesia = cd_tipo_anestesia_w))
and	((coalesce(cd_especialidade::text, '') = '') or (coalesce(cd_especialidade_w::text, '') = '') or (cd_especialidade = cd_especialidade_w))
and	((coalesce(nr_seq_classificacao::text, '') = '') or (coalesce(nr_seq_classificacao_w::text, '') = '') or (nr_seq_classificacao = nr_seq_classificacao_w))
and	((nr_anos_w = 999) or (nr_anos_w between coalesce(qt_ano_min,0) and coalesce(qt_ano_max,999)))
and	((coalesce(a.cd_funcao::text, '') = '') or (cd_funcao_w = 0) or (a.cd_funcao = cd_funcao_w))
and	coalesce(cd_plano_convenio, cd_plano_convenio_w)	= cd_plano_convenio_w
and	((coalesce(ie_evolucao_clinica_w::text, '') = '') or (coalesce(a.ie_evolucao_clinica,ie_evolucao_clinica_w) = ie_evolucao_clinica_w))
and	qt_reg_w					= 0
and	ie_situacao					= 'A'
and	dt_atual_trunc_w between coalesce(dt_inicio_vigencia,dt_atual_trunc_w) and fim_dia(coalesce(dt_final_vigencia,dt_atual_trunc_w))
and (coalesce(dt_execucao_w, clock_timestamp()) between
		to_date(to_char(coalesce(dt_execucao_w, clock_timestamp()),'dd/mm/yyyy') || ' ' ||
			coalesce(to_char(hr_inicial,'hh24:mi:ss'), '00:00:00'),
			'dd/mm/yyyy hh24:mi:ss')
				and
		to_date(to_char(coalesce(dt_execucao_w, clock_timestamp()),'dd/mm/yyyy') || ' ' ||
			coalesce(to_char(hr_final,'hh24:mi:ss'), '23:59:59'),
			'dd/mm/yyyy hh24:mi:ss'))
and (coalesce(ie_feriado,'N') = 'N' or coalesce(ie_feriado,'N') = dia_feriado_w)
and	((coalesce(dt_dia_semana, dia_semana_w) = dia_semana_w) or (dt_dia_semana = 9))
order by
	coalesce(a.cd_medico,0),
	coalesce(a.cd_setor_atendimento,0),
	coalesce(a.ie_tipo_atendimento,0),
	coalesce(a.cd_convenio,0),
	coalesce(a.ie_tipo_convenio,0),
	coalesce(a.cd_edicao_amb,0),
	coalesce(a.cd_procedimento,0),
	coalesce(a.cd_grupo_proc,0),
	coalesce(a.cd_especialidade_proc,0),
	coalesce(a.cd_area_procedimento,0),
	coalesce(a.nr_seq_exame,0),
	coalesce(a.ie_clinica,0),
	coalesce(a.cd_funcao,0);

C02 CURSOR FOR
	SELECT	a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_exame,
		a.cd_material,
		substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo,
		CASE WHEN a.ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * qt_procedimento_w END ,
		coalesce(ie_medico_atendimento,'N'),
		coalesce(ie_local_estoque,'N'),
		CASE WHEN ie_forma_func_medico='P' THEN coalesce(ie_funcao_medico, ie_funcao_medico_w)  ELSE ie_funcao_medico END ,
		coalesce(a.tx_procedimento,100),
		coalesce(a.ie_regra_guia,'RC'),
		a.nr_seq_proc_interno,
		coalesce(a.ie_consiste_item,'N'),
		coalesce(a.ie_proc_princ_atend, 'N'),
		a.nr_seq_lanc
	from 	material		b,
		regra_Lanc_Aut_pac	a
	where	a.nr_seq_regra 	= nr_seq_regra_w
	and	nr_seq_regra_w 	<> 0
	and	b.ie_situacao 	= 'A'
	and 	coalesce(a.ie_adic_orcamento,'N') = 'N'
	and	(a.cd_material IS NOT NULL AND a.cd_material::text <> '')
	and	a.cd_material 	= b.cd_material
	and	((coalesce(ie_retorno,'N') = 'S') or (coalesce(nr_atend_original_w::text, '') = ''))
	and	((nr_anos_w = 999) or (nr_anos_w between coalesce(qt_ano_min,0) and coalesce(qt_ano_max,999)))
	and	qt_reg_w	= 0
	
union all

	SELECT	cd_procedimento,
		ie_origem_proced,
		nr_seq_exame,
		cd_material,
		'XX',
		CASE WHEN ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * qt_procedimento_w END ,
		coalesce(ie_medico_atendimento,'N'),
		coalesce(ie_local_estoque,'N'),
		CASE WHEN ie_forma_func_medico='P' THEN coalesce(ie_funcao_medico, ie_funcao_medico_w)  ELSE ie_funcao_medico END ,
		coalesce(tx_procedimento,100),
		coalesce(ie_regra_guia,'RC'),
		nr_seq_proc_interno,
		coalesce(ie_consiste_item,'N'),
		coalesce(ie_proc_princ_atend, 'N'),
		nr_seq_lanc
	from 	regra_Lanc_Aut_pac
	where	nr_seq_regra  	= nr_seq_regra_w
	and	nr_seq_regra_w <> 0
	and 	coalesce(ie_adic_orcamento,'N') = 'N'
	and	((coalesce(ie_retorno,'N') = 'S') or (coalesce(nr_atend_original_w::text, '') = ''))
	and	((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '' AND ie_origem_proced IS NOT NULL AND ie_origem_proced::text <> '') or
		(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> ''))
	and	((nr_anos_w = 999) or (nr_anos_w between coalesce(qt_ano_min,0) and coalesce(qt_ano_max,999)))
	and	qt_reg_w		= 0;



BEGIN


nr_seq_regra_w		:= 0;
cd_tipo_acomodacao_w	:= null;
cd_especialidade_w	:= null;
nr_seq_exame_propaci_w	:= coalesce(nr_seq_exame_p,0);

select	max(nr_atendimento)
into STRICT	nr_atendimento_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

begin
select	a.ie_tipo_atendimento,
	a.nr_atend_original,
	a.cd_estabelecimento,
	b.cd_cgc,
	a.cd_setor_atendimento,
	a.cd_medico_resp,
	a.cd_convenio,
	c.ie_tipo_convenio,
	a.cd_categoria,
	a.dt_entrada_unidade,
	a.dt_entrada,
	CASE WHEN Obter_Valor_Conv_Estab(c.cd_convenio, b.cd_estabelecimento, 'IE_DOC_CONVENIO')='N' THEN  null WHEN Obter_Valor_Conv_Estab(c.cd_convenio, b.cd_estabelecimento, 'IE_DOC_CONVENIO')='S' THEN  coalesce(a.cd_senha, a.nr_doc_convenio)  ELSE a.nr_doc_convenio END ,
	a.dt_alta,
	a.nr_seq_atepacu,
	a.cd_senha,
	a.ie_clinica,
	a.cd_tipo_acomod_unid,
	coalesce(nr_anos,999),
	a.nr_seq_classificacao,
	coalesce(a.cd_plano_convenio,'0'),
	ie_tipo_guia
into STRICT	ie_tipo_atendimento_w,
	nr_atend_original_w,
	cd_estabelecimento_w,
	cd_cgc_w,
	cd_setor_atendimento_w,
	cd_medico_Resp_w,
	cd_convenio_w,
	ie_tipo_convenio_w,
	cd_categoria_w,
	dt_entrada_unidade_w,
	dt_entrada_w,
	nr_doc_convenio_w,
	dt_alta_w,
	nr_seq_atepacu_w,
	cd_senha_w,
	ie_clinica_w,
	cd_tipo_acomodacao_w,
	nr_anos_w,
	nr_seq_classificacao_w,
	cd_plano_convenio_w,
	ie_tipo_guia_w
from 	estabelecimento b,
	convenio c,
	atendimento_paciente_v a
where	a.cd_estabelecimento	= b.cd_estabelecimento
and	c.cd_convenio		= a.cd_convenio
and	a.nr_atendimento	= nr_atendimento_w;
exception
	when others then
		cd_estabelecimento_w := 9999;
end;

ie_prescr_proc_sem_lib_w := Obter_Param_Usuario(924, 530, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_prescr_proc_sem_lib_w);

select	max(cd_funcao_medico)
into STRICT	ie_funcao_medico_w
from	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_w;

qt_reg_w		:= 0;

/* Buscar dados do procedimento prescrito */

select	max(b.cd_procedimento),
	max(b.ie_origem_proced),
	max(b.cd_area_procedimento),
	max(b.cd_especialidade),
	max(b.cd_grupo_proc)
into STRICT	cd_proc_propaci_w,
	ie_origem_propaci_w,
	cd_area_proc_w,
	cd_especial_proc_w,
	cd_grupo_proc_w
from	estrutura_procedimento_v b
where	b.cd_procedimento	= cd_procedimento_p
and	b.ie_origem_proced	= ie_origem_proced_p;

select		max(cd_medico),
		max(dt_prescricao)
into STRICT		cd_medico_prescr_w,
		dt_prescricao_w
from		prescr_medica
where		nr_prescricao	= nr_prescricao_p;

select	max(ds_dado_clinico),
	coalesce(max(cd_setor_atendimento), cd_setor_atendimento_w),
	coalesce(max(dt_prev_execucao),dt_prescricao_w),
	max(cd_intervalo),
	max(ds_horarios)
into STRICT	ds_dado_clinico_w,
	cd_setor_atend_w,
	dt_prev_execucao_w,
	cd_intervalo_w,
	ds_horarios_w
from 	prescr_procedimento
where 	nr_sequencia  = nr_seq_proced_p
and 	nr_prescricao = nr_prescricao_p;

dt_execucao_w	:= dt_prev_execucao_w;

/* obter feriado */

begin
select 	'S'
into STRICT 	dia_feriado_w
from 	feriado
where 	cd_estabelecimento 			= cd_estabelecimento_w
and 	to_char(dt_feriado,'dd/mm/yyyy')  	= to_char(coalesce(dt_execucao_w, clock_timestamp()),'dd/mm/yyyy');
exception
            when others then
		dia_feriado_w	:= 'N';
end;

dia_semana_w	:= PKG_DATE_UTILS.get_WeekDay(coalesce(dt_execucao_w, clock_timestamp()));

select	max(cd_edicao_amb)
into STRICT	cd_edicao_amb_w
from	convenio_amb
where (cd_estabelecimento	= cd_estabelecimento_w)
  and (cd_convenio		= cd_convenio_w)
  and (cd_categoria		= cd_categoria_w)
  and (coalesce(ie_situacao,'A')	= 'A')
  and	(dt_inicio_vigencia	=
	(SELECT max(dt_inicio_vigencia)
	from	convenio_amb a
	where (a.cd_estabelecimento	= cd_estabelecimento_w)
	and (a.cd_convenio		= cd_convenio_w)
	and (a.cd_categoria		= cd_categoria_w)
	and (coalesce(a.ie_situacao,'A')	= 'A')
	and (a.dt_inicio_vigencia	<= dt_execucao_w)));

cd_medico_filtro_w    := cd_medico_resp_w;

select	coalesce(max(obter_funcao_Ativa),0)
into STRICT	cd_funcao_w
;

OPEN C01;
LOOP
FETCH C01 into
	nr_sequencia_w,
	cd_setor_regra_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	BEGIN

	nr_seq_regra_w	:= nr_sequencia_w;

	END;
END LOOP;
CLOSE C01;

RAISE NOTICE '%', nr_seq_regra_w;

qt_proc_lib_evolucao_w	:= 0;
qt_regras_w		:= 0;

select	coalesce(max(qt_procedimento),1)
into STRICT	qt_procedimento_w
from 	prescr_procedimento
where 	nr_sequencia  = nr_seq_proced_p
and 	nr_prescricao = nr_prescricao_p;

OPEN C02;
LOOP
FETCH C02 into
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_exame_w,
		cd_material_w,
		cd_unid_medida_w,
		qt_lancamento_w,
		ie_Medico_atendimento_w,
		ie_Local_Estoque_w,
		ie_funcao_medico_w,
		tx_procedimento_w,
		ie_regra_guia_w,
		nr_seq_proc_interno_ww,
		ie_consiste_item_w,
		ie_proc_princ_atend_w,
		nr_seq_acao_regra_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
	BEGIN	

	select	nextval('prescr_procedimento_seq')
	into STRICT	nr_seq_interno_w
	;

	select 	coalesce(max(nr_sequencia), 0) + 1
	into STRICT	nr_seq_prescr_proc_w
	from 	prescr_procedimento
	where	nr_prescricao		= nr_prescricao_p;

  /*tratar para ir para o final caso o proc interno da ação da regra esteja inativo*/

  if (nr_seq_proc_interno_ww IS NOT NULL AND nr_seq_proc_interno_ww::text <> '') then
    select	coalesce(max(ie_situacao),'A')
    into STRICT	ie_situacao_w
    from	proc_interno
    where	nr_sequencia = nr_seq_proc_interno_ww;

    if (ie_situacao_w = 'I') then
      goto continue_loop;
    end if;
  end if;

	if (nr_seq_proc_interno_ww IS NOT NULL AND nr_seq_proc_interno_ww::text <> '') then
		SELECT * FROM obter_proc_tab_interno(nr_seq_proc_interno_ww, nr_prescricao_p, nr_atendimento_w, null, cd_procedimento_w, ie_origem_proced_w, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
	end if;

  /*Após obter o código do procedimento através do proc interno ou exame de laboratório testar novamente para ver se o código está ativo.*/

  if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
    select 	coalesce(max(ie_situacao),'A')
    into STRICT	ie_situacao_w
    from	procedimento
    where	cd_procedimento	 = cd_procedimento_w
    and	ie_origem_proced = ie_origem_proced_w;
		
    if (ie_situacao_w = 'I') then
      goto continue_loop;
    end if;
  end if;
	
	RAISE NOTICE '% - % - %', cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_ww;
	
	if (cd_procedimento_w > 0) then
	
		insert into prescr_procedimento(nr_prescricao,
			nr_sequencia,
			cd_procedimento, 
			ie_origem_proced, 
			qt_procedimento, 
			dt_atualizacao,
			nm_usuario, 
			cd_motivo_baixa, 
			cd_intervalo,
			ie_urgencia, 
			ie_suspenso, 
			cd_setor_atendimento, 
			dt_prev_execucao,
			cd_material_exame, 
			nr_seq_exame, 
			ie_status_atend, 
			ie_amostra, 
			ie_origem_inf,
			ie_executar_leito,
			ie_se_necessario,
			ds_material_especial,
			nr_seq_interno,
			nr_seq_proc_interno,
			ie_avisar_result,
			cd_protocolo,
			nr_seq_protocolo,
			nr_seq_proc_protocolo,
			ie_lado,
			ds_dado_clinico,
			ds_horarios)
		values (nr_prescricao_p, 
			nr_seq_prescr_proc_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			qt_lancamento_w,
			dt_prescricao_w,
			nm_usuario_p, 
			0, 
			cd_intervalo_w, 
			'N', 
			'N', 
			cd_setor_atend_w,
			dt_prev_execucao_w, 
			null, 
			nr_seq_exame_w, 
			5, 
			'N', 
			'1',
			'N',
			'N',
			null,
			nr_seq_interno_w,
			nr_seq_proc_interno_ww,
			'N',
			null,
			null,
			null,
			null,
			ds_dado_clinico_w,
			ds_horarios_w);

	end if;
	
	if (ie_prescr_proc_sem_lib_w = 'S') then
		CALL Gerar_prescr_proc_sem_dt_lib(nr_prescricao_p,nr_seq_prescr_proc_w,obter_perfil_ativo,'N',nm_usuario_p);
	end if;	

	qt_regras_w:=	qt_regras_w + 1;

	END;
	<<continue_loop>>
	ie_situacao_w := null;
END LOOP;
CLOSE C02;

if (ie_regra_lanc_aut_p = 'E') and (qt_regras_w > 0) then

	delete 	from 	prescr_procedimento
	where  	nr_prescricao 	= nr_prescricao_p
	and    	nr_sequencia  	= nr_seq_proced_p;

end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lancto_aut_prescr_proc ( nr_prescricao_p bigint, nr_seq_proced_p bigint, NR_SEQ_EVENTO_P bigint, NM_USUARIO_P text, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, nr_seq_exame_p bigint, ie_regra_lanc_aut_p text) FROM PUBLIC;

