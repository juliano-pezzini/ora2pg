-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_copart_rec_glosa ( nr_seq_rec_glosa_prot_p pls_rec_glosa_protocolo.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_status_w			pls_rec_glosa_protocolo.ie_status%type;
ie_status_coparticipacao_w	pls_conta_coparticipacao.ie_status_coparticipacao%type;
ie_status_mensalidade_w		pls_conta_coparticipacao.ie_status_mensalidade%type;
ie_controle_coparticipacao_w	pls_parametros.ie_controle_coparticipacao%type;

C01 CURSOR(	nr_seq_rec_glosa_prot_p		pls_rec_glosa_protocolo.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_conta_proc,
		null nr_seq_conta_mat,
		o.nr_sequencia,
		o.nr_seq_segurado,
		o.ie_tipo_segurado,
		i.vl_acatado vl_acatado,
		a.qt_procedimento_imp qt_item_imp,
		a.qt_procedimento qt_item
	from	pls_rec_glosa_conta	c,
		pls_rec_glosa_proc	i,
		pls_conta_proc		a,
		pls_conta		o
	where	c.nr_sequencia		= i.nr_seq_conta_rec
	and	a.nr_sequencia		= i.nr_seq_conta_proc
	and	o.nr_sequencia		= c.nr_seq_conta
	and	c.nr_seq_protocolo	= nr_seq_rec_glosa_prot_p
	
union all

	SELECT	null nr_seq_conta_proc,
		a.nr_sequencia nr_seq_conta_mat,
		o.nr_sequencia,
		o.nr_seq_segurado,
		o.ie_tipo_segurado,
		i.vl_acatado vl_acatado,
		a.qt_material_imp qt_item_imp,
		a.qt_material qt_item
	from	pls_rec_glosa_conta	c,
		pls_rec_glosa_mat	i,
		pls_conta_mat		a,
		pls_conta		o
	where	c.nr_sequencia		= i.nr_seq_conta_rec
	and	a.nr_sequencia		= i.nr_seq_conta_mat
	and	o.nr_sequencia		= c.nr_seq_conta
	and	c.nr_seq_protocolo	= nr_seq_rec_glosa_prot_p;

BEGIN
select	max(ie_status)
into STRICT	ie_status_w
from	pls_rec_glosa_protocolo
where	nr_sequencia = nr_seq_rec_glosa_prot_p;

select	max(ie_controle_coparticipacao)
into STRICT	ie_controle_coparticipacao_w
from	pls_parametros;
ie_controle_coparticipacao_w	:= coalesce(ie_controle_coparticipacao_w,'N');

for r_C01_w in C01(nr_seq_rec_glosa_prot_p) loop
	if (r_C01_w.nr_seq_conta_proc IS NOT NULL AND r_C01_w.nr_seq_conta_proc::text <> '') then
		select	max(ie_status_coparticipacao),
			max(ie_status_mensalidade)
		into STRICT	ie_status_coparticipacao_w,
			ie_status_mensalidade_w
		from	pls_conta_coparticipacao
		where	nr_seq_conta_proc		= r_C01_w.nr_seq_conta_proc
		and	ie_status_mensalidade not in ('G','C')
		and	coalesce(nr_seq_disc_proc::text, '') = ''
		and	coalesce(nr_seq_mensalidade_seg::text, '') = '';

	elsif (r_C01_w.nr_seq_conta_mat IS NOT NULL AND r_C01_w.nr_seq_conta_mat::text <> '') then
		select	max(ie_status_coparticipacao),
			max(ie_status_mensalidade)
		into STRICT	ie_status_coparticipacao_w,
			ie_status_mensalidade_w
		from	pls_conta_coparticipacao
		where	nr_seq_conta_mat		= r_C01_w.nr_seq_conta_mat
		and	ie_status_mensalidade not in ('G','C')
		and	coalesce(nr_seq_disc_mat::text, '') = ''
		and	coalesce(nr_seq_mensalidade_seg::text, '') = '';
	end if;

	if (ie_status_w in ('3','6')) then -- Liberado pra pagamento
		if (r_C01_w.vl_acatado > 0) then
			ie_status_coparticipacao_w 	:= 'S';
		else
			ie_status_coparticipacao_w 	:= 'N';
		end if;
	elsif (ie_status_w in ('5','2')) then -- Analisando e aguardando liberação para pagamento / Em analise
		ie_status_coparticipacao_w 	:= 'P';
	end if;

	if (ie_controle_coparticipacao_w = 'N') then
		if (ie_status_coparticipacao_w = 'S') then
			ie_status_mensalidade_w 	:= 'L';
		elsif (ie_status_coparticipacao_w = 'N') then
			ie_status_mensalidade_w		:= 'C';
		elsif (ie_status_coparticipacao_w = 'P') then
			ie_status_mensalidade_w		:= 'P';
		end if;
	end if;

	if (r_C01_w.nr_seq_conta_proc IS NOT NULL AND r_C01_w.nr_seq_conta_proc::text <> '') then
		update	pls_conta_coparticipacao
		set	ie_status_mensalidade		= ie_status_mensalidade_w,
			ie_status_coparticipacao	= ie_status_coparticipacao_w
		where	nr_seq_conta_proc		= r_C01_w.nr_seq_conta_proc
		and	coalesce(nr_seq_disc_proc::text, '') = ''
		and	coalesce(nr_seq_mensalidade_seg::text, '') = '';

	elsif (r_C01_w.nr_seq_conta_mat IS NOT NULL AND r_C01_w.nr_seq_conta_mat::text <> '') then
		update	pls_conta_coparticipacao
		set	ie_status_mensalidade		= ie_status_mensalidade_w,
			ie_status_coparticipacao	= ie_status_coparticipacao_w
		where	nr_seq_conta_mat		= r_C01_w.nr_seq_conta_mat
		and	coalesce(nr_seq_disc_mat::text, '') = ''
		and	coalesce(nr_seq_mensalidade_seg::text, '') = '';
	end if;
end loop;

if (coalesce(ie_commit_p,'N') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_copart_rec_glosa ( nr_seq_rec_glosa_prot_p pls_rec_glosa_protocolo.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p text, ie_commit_p text) FROM PUBLIC;

