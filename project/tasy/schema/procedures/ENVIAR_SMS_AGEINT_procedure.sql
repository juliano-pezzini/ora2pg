-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_sms_ageint ( ds_remetente_p text, ds_destinatario_p text, ds_mensagem_p text, cd_agenda_p bigint, nr_seq_agenda_p bigint, nm_usuario_p text) AS $body$
DECLARE

				
nr_sequencia_w		bigint;
id_sms_w		bigint;
ds_mensagem_w		varchar(255);
cd_tipo_agenda_w	bigint;
nr_seq_ageint_W		bigint;
qt_existe_log_seq_w	bigint;
ie_status_agenda_w 	varchar(3);
dt_cancelamento_w  	timestamp;



BEGIN
if (ds_remetente_p IS NOT NULL AND ds_remetente_p::text <> '') and (ds_destinatario_p IS NOT NULL AND ds_destinatario_p::text <> '') and (ds_mensagem_p IS NOT NULL AND ds_mensagem_p::text <> '') and (cd_agenda_p IS NOT NULL AND cd_agenda_p::text <> '') and (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	
	/* enviar sms */

	id_sms_w := wheb_sms.enviar_sms(ds_remetente_p, ds_destinatario_p, ds_mensagem_p, nm_usuario_p, id_sms_w);
	
	select 	coalesce(max(cd_tipo_agenda),0)
	into STRICT	cd_tipo_agenda_w
	from	agenda
	where	cd_agenda = cd_agenda_p;
	
	if (coalesce(cd_tipo_agenda_w,0) = 2) then
		
		select	coalesce(max(nr_seq_agenda_int),'')
		into STRICT	nr_seq_ageint_W
		from	agenda_integrada_item
		where 	nr_seq_agenda_exame = nr_seq_agenda_p;
		
		select 	coalesce(max(ie_status_agenda),''), coalesce(max(dt_cancelamento),clock_timestamp())
    		into STRICT 	ie_status_agenda_w, dt_cancelamento_w
    		from 	agenda_paciente
		where 	nr_sequencia = nr_seq_agenda_p;
		
	elsif (coalesce(cd_tipo_agenda_w,0) in (3,4,5)) then
	
		select	coalesce(max(nr_seq_agenda_int),'')
		into STRICT	nr_seq_ageint_W
		from	agenda_integrada_item
		where 	nr_seq_agenda_cons = nr_seq_agenda_p;
		
		select 	coalesce(max(ie_status_agenda),''), coalesce(max(dt_cancelamento),clock_timestamp())
    		into STRICT 	ie_status_agenda_w, dt_cancelamento_w
    		from 	agenda_consulta
    		where 	nr_sequencia = nr_seq_agenda_p;
		
	end if;
	
	/*Verificar se já não existe um log gravado para o NR_SEQ_AGENDA_P passado por parâmetro*/

	select	count(*)
	into STRICT	qt_existe_log_seq_w
	from	log_envio_sms
	where	nr_seq_agenda = nr_seq_agenda_p;
	
	if (qt_existe_log_seq_w > 0 and ie_status_agenda_w = 'C') then

    		select 	count(*)
    		into STRICT 	qt_existe_log_seq_w
    		from 	log_envio_sms
    		where 	nr_seq_agenda = nr_seq_agenda_p
  		and   	dt_envio between dt_cancelamento_w and clock_timestamp();

  	end if;
	
	if (qt_existe_log_seq_w = 0) then
		/* gravar log */

		select	nextval('log_envio_sms_seq')
		into STRICT	nr_sequencia_w
		;
		
		ds_mensagem_w	:= ds_mensagem_p;
		insert into log_envio_sms(
			nr_sequencia,
			dt_atualizacao_nrec,
			nm_usuario_nrec,	
			dt_atualizacao,
			nm_usuario,
			dt_envio,
			cd_agenda,
			nr_seq_agenda,
			nr_telefone,
			ds_mensagem,
			id_sms,
			nr_seq_ageint,
			ie_envio_regra)
		values (
			nr_sequencia_w,
			clock_timestamp(), 
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			cd_agenda_p,
			nr_seq_agenda_p,
			ds_destinatario_p,
			obter_desc_expressao(511715)||' '||substr(ds_mensagem_w, 1, length(ds_mensagem_w)),
			id_sms_w,
			nr_seq_ageint_W,
			'S');
	end if;
	
end if;
	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_sms_ageint ( ds_remetente_p text, ds_destinatario_p text, ds_mensagem_p text, cd_agenda_p bigint, nr_seq_agenda_p bigint, nm_usuario_p text) FROM PUBLIC;

