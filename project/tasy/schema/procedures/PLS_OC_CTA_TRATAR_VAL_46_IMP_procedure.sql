-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_46_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) AS $body$
DECLARE


_ora2pg_r RECORD;
tb_seq_selecao_w			pls_util_cta_pck.t_number_table;
tb_valido_w				pls_util_cta_pck.t_varchar2_table_1;
tb_observacao_w				pls_util_cta_pck.t_varchar2_table_4000;
nr_indice_w				integer;
ie_gerar_ocorrencia_w			varchar(1);

-- Obter as regras da validação.
C01 CURSOR(	nr_seq_oc_cta_combinada_pc	pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	qt_minima,
		qt_maxima
	from	pls_oc_cta_val_v46
	where	nr_seq_oc_cta_comb		= nr_seq_oc_cta_combinada_pc;

--cursor com os procedimentos e materiais selecionados
C02 CURSOR(	nr_id_transacao_pc		pls_oc_cta_selecao_imp.nr_id_transacao%type) FOR
	SELECT	sel.nr_sequencia		nr_seq_selecao,
		coalesce(proc.qt_executado, 0)	qt_executado
	from	pls_oc_cta_selecao_imp		sel,
		pls_conta_proc_imp		proc
	where	sel.nr_id_transacao		= nr_id_transacao_pc
	and	sel.ie_valido			= 'S'
	and	proc.nr_sequencia		= sel.nr_seq_conta_proc
	
union all

	SELECT	sel.nr_sequencia		nr_seq_selecao,
		coalesce(mat.qt_executado, 0)	qt_executado
	from	pls_oc_cta_selecao_imp		sel,
		pls_conta_mat_imp		mat
	where	sel.nr_id_transacao		= nr_id_transacao_pc
	and	sel.ie_valido			= 'S'
	and	mat.nr_sequencia		= sel.nr_seq_conta_mat;
BEGIN

-- Deve exisitr informação da regra para executar a validação
if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '') and (nr_id_transacao_p IS NOT NULL AND nr_id_transacao_p::text <> '')  then

	--Abre o cursor da regra de validação
	for	r_C01_w in C01(nr_seq_combinada_p) loop
		-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
		CALL pls_ocor_imp_pck.atualiza_campo_auxiliar('V', 'N', nr_id_transacao_p, null);
		--limpa as variáveis
		SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
		nr_indice_w := 0;
		--Abre cursor com os materiais e procedimentos
		for	r_C02_w in C02(nr_id_transacao_p) loop

			ie_gerar_ocorrencia_w := 'N';
			--Verifica se quantidade mínima foi informada
			if (r_C01_w.qt_minima IS NOT NULL AND r_C01_w.qt_minima::text <> '') then
				--Se quantidade executada for menor que a quantidade mínima então gera ocorrência
				if (r_C02_w.qt_executado < r_C01_w.qt_minima) then
					ie_gerar_ocorrencia_w := 'S';
				end if;
			end if;
			--Verifica se quantidade máxima foi informada e também se ocorrência já será gerada para não precisar fazer uma verificação de forma desnecessária
			if ((r_C01_w.qt_maxima IS NOT NULL AND r_C01_w.qt_maxima::text <> '') and ie_gerar_ocorrencia_w != 'S') then
				--Se quantidade executada for maior que a quantidade máxima então gera ocorrência
				if (r_C02_w.qt_executado > r_C01_w.qt_maxima) then
					ie_gerar_ocorrencia_w := 'S';
				end if;
			end if;

			if (ie_gerar_ocorrencia_w = 'S') then

				tb_seq_selecao_w(nr_indice_w) := r_C02_w.nr_seq_selecao;
				tb_valido_w(nr_indice_w)      := 'S';
				tb_observacao_w(nr_indice_w)  := null;

				if (nr_indice_w >= pls_cta_consistir_pck.qt_registro_transacao_w ) then
					--Grava o que restar nas variáveis na tabela
					CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w, tb_valido_w,
											tb_observacao_w, nr_id_transacao_p,
											'SEQ');
					--limpa as variáveis
					SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
					nr_indice_w := 0;
				else
					nr_indice_w := nr_indice_w + 1;
				end if;
			end if;
		end loop;--C02
	end loop; -- C01
	--Grava o que restar nas variáveis na tabela
	CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w, tb_valido_w,
							tb_observacao_w, nr_id_transacao_p,
							'SEQ');
	-- seta os registros que serão válidos ou inválidos após o processamento
	CALL pls_ocor_imp_pck.atualiza_campo_valido('V', 'N',
						ie_regra_excecao_p, null,
						nr_id_transacao_p, null);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_46_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) FROM PUBLIC;

