-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eventos_cirur_pepo ( nr_seq_pepo_p bigint, dt_evento_p timestamp, nm_usuario_p text) AS $body$
DECLARE

data_evento_w	timestamp := null;
cd_profissional_w	varchar(10);
nr_sequencia_w		bigint;
ie_tipo_item_w		varchar(15);
nr_cirurgia_w		bigint;	
nr_sequencia_ww		bigint;
cd_estabelecimento_w		bigint := wheb_usuario_pck.get_cd_estabelecimento;

C01 CURSOR FOR 
	SELECT	nr_sequencia, 
		ie_tipo_item 
	from	evento_cirurgia a 
	where	not exists (	SELECT	1 
				from	evento_cirurgia_paciente x 
				where	x.nr_seq_pepo = nr_seq_pepo_p 
				and	x.nr_seq_evento = a.nr_sequencia 
				and	coalesce(x.ie_situacao,'A') = 'A') 
	and	((a.cd_estabelecimento = cd_estabelecimento_w) or (coalesce(a.cd_estabelecimento::text, '') = '')) 
	and	coalesce(a.ie_situacao,'A') = 'A'			 
	and   coalesce(ie_exibicao, 'A') IN ('A', 'P') 
	order by nr_seq_execucao;

C02 CURSOR FOR 
	SELECT nr_cirurgia 
	from	cirurgia 
	where 	nr_seq_pepo 	=	nr_seq_pepo_p;	
					 

BEGIN 
 
select	obter_pessoa_fisica_usuario(nm_usuario_p,'C') 
into STRICT	cd_profissional_w
;
 
open C01;
loop 
fetch C01 into	 
	nr_sequencia_w, 
	ie_tipo_item_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
			 
	select	max(dt_registro)		 
	into STRICT	data_evento_w		 
	from 	evento_cirurgia_paciente 
	where	nr_seq_evento	= (	SELECT 	max(nr_seq_evento_dep) 
					from	evento_cirurgia 
					where	nr_sequencia 	= nr_sequencia_w 
					and	coalesce(ie_situacao,'A') = 'A') 
	and	nr_seq_pepo	=	nr_seq_pepo_p 
	and	coalesce(ie_situacao,'A') = 'A';
			 
	if (coalesce(data_evento_w::text, '') = '')	then 
				 
		data_evento_w := dt_evento_p;
	end if;
	if ( ie_tipo_item_w = 'A') or (ie_tipo_item_w = 'C') or (coalesce(ie_tipo_item_w::text, '') = '') then 
		/*insert into logx_tasy values(sysdate,nm_usuario_p,68955,'Procedure = gerar_eventos_cirurgia if 1; Sequencia = '||nr_sequencia_ww||' Evento = '||nr_sequencia_w||' Cirurgia = '||nr_cirurgia_w||' Numero do processo ='||nr_seq_pepo_p||' data do evento = '||data_evento_w); */
 
		 
		select	nextval('evento_cirurgia_paciente_seq') 
		into STRICT 	nr_sequencia_ww 
		;
 
		insert into evento_cirurgia_paciente( 
			nr_sequencia, 
			nr_seq_evento, 
			nr_cirurgia, 
			nr_seq_pepo, 
			ds_observacao, 
			dt_registro, 
			cd_profissional, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			dt_final_evento, 
			ie_situacao) 
		SELECT nr_sequencia_ww, 
			nr_sequencia_w, 
			null, 
			nr_seq_pepo_p, 
			null, 
			data_evento_w, 
			cd_profissional_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			null, 
			'A' 
		;
	end if;
	open C02;
	loop 
	fetch C02 into 
		nr_cirurgia_w;	
	EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
		if ( ie_tipo_item_w = 'A') or (ie_tipo_item_w = 'P') or (coalesce(ie_tipo_item_w::text, '') = '') then 
			/*insert into logx_tasy values(sysdate,nm_usuario_p,68955,'Procedure = gerar_eventos_cirurgia if 2; Sequencia = '||nr_sequencia_ww||' Evento = '||nr_sequencia_w||' Cirurgia = '||nr_cirurgia_w||' Numero do processo ='||nr_seq_pepo_p||' data do evento = '||data_evento_w); */
 
			 
			select	nextval('evento_cirurgia_paciente_seq') 
			into STRICT	nr_sequencia_ww 
			;
		 
			insert into evento_cirurgia_paciente( 
				nr_sequencia, 
				nr_seq_evento, 
				nr_cirurgia, 
				nr_seq_pepo, 
				ds_observacao, 
				dt_registro, 
				cd_profissional, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				dt_final_evento, 
				ie_situacao) 
			SELECT 	nr_sequencia_ww, 
				nr_sequencia_w, 
				nr_cirurgia_w, 
				null, 
				null, 
				data_evento_w, 
				cd_profissional_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				null, 
				'A' 
			;
		end if;
 
	end;
	end loop;
	close C02;
	commit;
	end;
end loop;
close C01;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eventos_cirur_pepo ( nr_seq_pepo_p bigint, dt_evento_p timestamp, nm_usuario_p text) FROM PUBLIC;

