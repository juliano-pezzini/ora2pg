-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_interf_i350_ecd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


cd_classificacao_w		varchar(40);
cd_conta_contabil_w		varchar(40);
cd_centro_custo_w		centro_custo.cd_centro_custo%type;
dt_resultado_w			timestamp;
dt_referencia_w			timestamp;
ie_apres_conta_ctb_w		varchar(15);
nr_seq_mes_ref_w		bigint;
vl_saldo_w			varchar(80);
ie_debito_credito_w		varchar(2);
nr_linha_w			bigint	:= qt_linha_p;
nr_seq_registro_w		bigint	:= nr_sequencia_p;
ds_arquivo_w			varchar(4000);
ds_compl_arquivo_w		varchar(4000);
ds_linha_w			varchar(8000);
sep_w				varchar(1)	:= '|';
tp_registro_w			varchar(15);
ie_periodo_w			varchar(1);
ie_consolida_empresa_w		ctb_regra_sped.ie_consolida_empresa%type;
dt_resultado_ant_w		timestamp;
cd_empresa_w			ctb_regra_sped.cd_empresa%type;
dt_fim_contabil_w		centro_custo.dt_fim_contabil%type;

c_data_apuracao CURSOR FOR
	SELECT	distinct
		b.nr_sequencia,
		b.dt_referencia
	from	ctb_mes_ref	b,
			ctb_saldo	a
	where	a.nr_seq_mes_ref	= b.nr_sequencia
	and	b.cd_empresa		= cd_empresa_p
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	b.dt_referencia		= dt_referencia_w
	and	ie_periodo_w		in ('A','M')
	and	ie_consolida_empresa_w	= 'N'
	
union all

	SELECT	distinct
		b.nr_sequencia,
		b.dt_referencia
	from	ctb_mes_ref	b,
		ctb_saldo	a,
		estabelecimento c
	where	a.nr_seq_mes_ref	= b.nr_sequencia
	and	b.cd_empresa		= cd_empresa_p
	and	a.cd_estabelecimento	= c.cd_estabelecimento
	and	coalesce(ie_gerar_sped,'S')	=	'S'
	and	b.dt_referencia		= dt_referencia_w
	and	ie_periodo_w		in ('A','M')
	and	ie_consolida_empresa_w	= 'S'
	
union all

	select	nr_sequencia,
		fim_mes(b.dt_referencia) dt_referencia
	from	ctb_mes_ref b
	where	b.dt_referencia	between  dt_inicio_p and dt_fim_p
	and	b.cd_empresa				= cd_empresa_p
	and	ie_periodo_w				= 'T'
	and	substr(to_char(b.dt_referencia,'mm'),1,2) in ('03','06','09','12')
	order by 2;

c_detalhe_saldo CURSOR FOR
	SELECT	a.cd_conta_contabil,
		a.cd_classificacao,
		CASE WHEN c.ie_centro_custo='S' THEN  a.cd_centro_custo  ELSE null END  cd_centro_custo,
		(coalesce(sum(a.vl_saldo),0) - coalesce(sum(vl_encerramento),0)) vl_saldo,
		substr(ctb_obter_situacao_saldo(a.cd_conta_contabil,  coalesce(sum(a.vl_saldo),0) - coalesce(sum(vl_encerramento),0)),1,1) ie_debito_credito
	from	ctb_grupo_conta	d,
		conta_contabil	c,
		ctb_saldo	a
	where	c.cd_conta_contabil	= a.cd_conta_contabil
	and	d.cd_grupo		= c.cd_grupo
	and	c.ie_tipo		= 'A'
	and	d.ie_tipo in ('R','C','D')
	and	a.nr_seq_mes_ref	= nr_seq_mes_ref_w
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	ie_consolida_empresa_w	= 'N'
	and	substr(obter_se_conta_vigente2(c.cd_conta_contabil,c.dt_inicio_vigencia,c.dt_fim_vigencia,dt_fim_p),1,1) = 'S'
	and	((c.ie_centro_custo = 'N') or exists (
			SELECT 	1
			from 	centro_custo f
			where 	f.cd_centro_custo = a.cd_centro_custo
			and	f.cd_estabelecimento = a.cd_estabelecimento
			 LIMIT 1))
	and	exists (
		select	1
		from	ctb_saldo x
		where	x.cd_conta_contabil = a.cd_conta_contabil
		and	x.cd_estabelecimento = a.cd_estabelecimento
		and	CASE WHEN c.ie_centro_custo='S' THEN x.cd_centro_custo  ELSE 0 END  = CASE WHEN c.ie_centro_custo='S' THEN a.cd_centro_custo  ELSE 0 END 
		and (x.vl_credito <> 0 or x.vl_debito <> 0 or x.vl_saldo <> 0)
		and	x.nr_seq_mes_ref in (
					select	z.nr_sequencia
					from	ctb_mes_ref z
					where	z.cd_empresa = cd_empresa_p
					and	z.dt_referencia between pkg_date_utils.start_of(dt_inicio_p,'yyyy') and pkg_date_utils.end_of(dt_inicio_p, 'YEAR',0)) 
		 LIMIT 1)
	group by
		a.cd_conta_contabil,
		a.cd_classificacao,
		CASE WHEN ie_centro_custo='S' THEN  a.cd_centro_custo  ELSE null END 
	
union all

	select	a.cd_conta_contabil,
		a.cd_classificacao,
		CASE WHEN ie_centro_custo='S' THEN  a.cd_centro_custo  ELSE null END  cd_centro_custo,
		(coalesce(sum(a.vl_saldo),0) - coalesce(sum(vl_encerramento),0)) vl_saldo,
		substr(ctb_obter_situacao_saldo(a.cd_conta_contabil,  coalesce(sum(a.vl_saldo),0) - coalesce(sum(vl_encerramento),0)),1,1) ie_debito_credito
	from	ctb_grupo_conta	d,
		conta_contabil	c,
		ctb_saldo	a,
		estabelecimento e
	where	c.cd_conta_contabil	= a.cd_conta_contabil
	and	d.cd_grupo		= c.cd_grupo
	and	e.cd_estabelecimento	= a.cd_estabelecimento
	and	coalesce(e.ie_gerar_sped,'S')	=	'S'
	and	c.ie_tipo		= 'A'
	and	d.ie_tipo in ('R','C','D')
	and	a.nr_seq_mes_ref	= nr_seq_mes_ref_w
	and	ie_consolida_empresa_w	= 'S'
	and coalesce(e.ie_scp, 'N')		!= 'S'
	and	substr(obter_se_conta_vigente2(c.cd_conta_contabil,c.dt_inicio_vigencia,c.dt_fim_vigencia,dt_fim_p),1,1) = 'S'
	and	exists (
		select	1
		from	ctb_saldo x
		where	x.cd_conta_contabil = a.cd_conta_contabil
		and	CASE WHEN c.ie_centro_custo='S' THEN x.cd_centro_custo  ELSE 0 END  = CASE WHEN c.ie_centro_custo='S' THEN a.cd_centro_custo  ELSE 0 END 
		and (x.vl_credito <> 0 or x.vl_debito <> 0 or x.vl_saldo <> 0)
		and	x.nr_seq_mes_ref in (
					select	z.nr_sequencia
					from	ctb_mes_ref z
					where	z.cd_empresa = cd_empresa_p
					and	z.dt_referencia between pkg_date_utils.start_of(dt_inicio_p,'yyyy') and pkg_date_utils.end_of(dt_inicio_p, 'YEAR',0)) 
		 LIMIT 1)
	group by a.cd_conta_contabil,
		 a.cd_classificacao,
		 CASE WHEN ie_centro_custo='S' THEN  a.cd_centro_custo  ELSE null END 
	order by cd_classificacao;

nr_vetor_w			bigint	:= 0;
type registro is table of ctb_sped_registro%RowType index by integer;
ctb_sped_registro_w		registro;


BEGIN
dt_referencia_w	:= trunc(dt_fim_p,'mm');

select	coalesce(max(a.ie_apres_conta_ctb), 'CD'),
	coalesce(max(a.ie_periodo), 'A'),
	coalesce(max(a.ie_consolida_empresa), 'N'),
	max(a.cd_empresa)
into STRICT	ie_apres_conta_ctb_w,
	ie_periodo_w,
	ie_consolida_empresa_w,
	cd_empresa_w
from	ctb_regra_sped		a,
	ctb_sped_controle	b
where	a.nr_sequencia	= b.nr_seq_regra_sped
and	b.nr_sequencia	= nr_seq_controle_p;

open c_data_apuracao;
loop
fetch c_data_apuracao into
	nr_seq_mes_ref_w,
	dt_resultado_w;
EXIT WHEN NOT FOUND; /* apply on c_data_apuracao */
	begin
	tp_registro_w 		:= 'I350';
	dt_resultado_w		:= trunc(fim_mes(dt_resultado_w));

	if (dt_resultado_ant_w <> dt_resultado_w) or (coalesce(dt_resultado_ant_w::text, '') = '') then
		ds_linha_w		:= substr(	sep_w || tp_registro_w 				||
							sep_w || to_char(dt_fim_p,'ddmmyyyy')	||
							sep_w,1,8000);

		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_compl_arquivo_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w	:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;

		nr_vetor_w		:= nr_vetor_w + 1;

		ctb_sped_registro_w[nr_vetor_w].nr_sequencia		:= nr_seq_registro_w;
		ctb_sped_registro_w[nr_vetor_w].ds_arquivo		:= ds_arquivo_w;
		ctb_sped_registro_w[nr_vetor_w].dt_atualizacao		:= clock_timestamp();
		ctb_sped_registro_w[nr_vetor_w].nm_usuario		:= nm_usuario_p;
		ctb_sped_registro_w[nr_vetor_w].dt_atualizacao_nrec	:= clock_timestamp();
		ctb_sped_registro_w[nr_vetor_w].nm_usuario_nrec		:= nm_usuario_p;
		ctb_sped_registro_w[nr_vetor_w].nr_seq_controle_sped	:= nr_seq_controle_p;
		ctb_sped_registro_w[nr_vetor_w].ds_arquivo_compl	:= ds_compl_arquivo_w;
		ctb_sped_registro_w[nr_vetor_w].cd_registro		:= tp_registro_w;
		ctb_sped_registro_w[nr_vetor_w].nr_linha		:= nr_linha_w;
		ctb_sped_registro_w[nr_vetor_w].nr_doc_origem		:= nr_seq_mes_ref_w;
	end if;

	tp_registro_w	:= 'I355';

	open c_detalhe_saldo;
	loop
	fetch c_detalhe_saldo into
		cd_conta_contabil_w,
		cd_classificacao_w,
		cd_centro_custo_w,
		vl_saldo_w,
		ie_debito_credito_w;
	EXIT WHEN NOT FOUND; /* apply on c_detalhe_saldo */
		begin
		if (ie_apres_conta_ctb_w = 'CL') then
			cd_conta_contabil_w	:= cd_classificacao_w;
		elsif (ie_apres_conta_ctb_w = 'CP') then
			cd_conta_contabil_w	:= substr(replace(cd_classificacao_w,'.',''),1,40);
		end if;

		select	max(dt_fim_contabil)
		into STRICT	dt_fim_contabil_w
		from	centro_custo
		where	cd_centro_custo	= cd_centro_custo_w;

		if 	((coalesce(cd_centro_custo_w,0) = 0) or (coalesce(dt_fim_contabil_w::text, '') = '') or
			((coalesce(cd_centro_custo_w,0) <> 0) and (trunc(dt_resultado_w) <= trunc(dt_fim_contabil_w)))) then
			ds_linha_w	:= substr(	sep_w || tp_registro_w				||
							sep_w || cd_conta_contabil_w 			||
							sep_w || cd_centro_custo_w			||
							sep_w || sped_obter_campo_valor(vl_saldo_w) 	||
							sep_w || ie_debito_credito_w			||
							sep_w,1,8000);

			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_compl_arquivo_w	:= substr(ds_linha_w,4001,4000);
			nr_seq_registro_w	:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;

			nr_vetor_w		:= nr_vetor_w + 1;

			ctb_sped_registro_w[nr_vetor_w].nr_sequencia		:= nr_seq_registro_w;
			ctb_sped_registro_w[nr_vetor_w].ds_arquivo		:= ds_arquivo_w;
			ctb_sped_registro_w[nr_vetor_w].dt_atualizacao		:= clock_timestamp();
			ctb_sped_registro_w[nr_vetor_w].nm_usuario		:= nm_usuario_p;
			ctb_sped_registro_w[nr_vetor_w].dt_atualizacao_nrec	:= clock_timestamp();
			ctb_sped_registro_w[nr_vetor_w].nm_usuario_nrec		:= nm_usuario_p;
			ctb_sped_registro_w[nr_vetor_w].nr_seq_controle_sped	:= nr_seq_controle_p;
			ctb_sped_registro_w[nr_vetor_w].ds_arquivo_compl	:= ds_compl_arquivo_w;
			ctb_sped_registro_w[nr_vetor_w].cd_registro		:= tp_registro_w;
			ctb_sped_registro_w[nr_vetor_w].nr_linha		:= nr_linha_w;
			ctb_sped_registro_w[nr_vetor_w].nr_doc_origem		:= nr_seq_mes_ref_w;

			if (nr_vetor_w >= 1000) then
				forall m in ctb_sped_registro_w.first..ctb_sped_registro_w.last
					insert into ctb_sped_registro values ctb_sped_registro_w(m);

				nr_vetor_w	:= 0;
				ctb_sped_registro_w.delete;

				commit;
			end if;
		end if;
		end;
	end loop;
	close c_detalhe_saldo;

	if (nr_vetor_w >= 1000) then
		forall m in ctb_sped_registro_w.first..ctb_sped_registro_w.last
			insert into ctb_sped_registro values ctb_sped_registro_w(m);

		nr_vetor_w	:= 0;
		ctb_sped_registro_w.delete;

		commit;
	end if;

	dt_resultado_ant_w	:= dt_resultado_w;
	end;
end loop;
close c_data_apuracao;

forall m in ctb_sped_registro_w.first..ctb_sped_registro_w.last
	insert into ctb_sped_registro values ctb_sped_registro_w(m);

nr_vetor_w	:= 0;
ctb_sped_registro_w.delete;

commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_interf_i350_ecd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

