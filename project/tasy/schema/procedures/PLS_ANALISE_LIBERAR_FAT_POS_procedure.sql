-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_analise_liberar_fat_pos ( nr_seq_analise_p bigint, nr_seq_w_item_p bigint, nr_seq_mot_liberacao_p bigint, nr_seq_grupo_atual_p bigint, ds_observacao_p text, nr_id_transacao_p w_pls_analise_item.nr_id_transacao%type, nm_usuario_p text, cd_estabelecimento_p bigint ) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionário [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_novo_pos_estab_w		pls_visible_false.ie_novo_pos_estab%type;

C01 CURSOR FOR
	SELECT	CASE WHEN coalesce(a.nr_seq_conta_mat::text, '') = '' THEN  'P'  ELSE 'M' END  	ie_tipo_item,
		a.nr_sequencia					nr_seq_w_item,					
		a.nr_seq_conta,	
		a.nr_seq_conta_proc,                            	
		a.nr_seq_conta_mat,                             	
		a.nr_seq_proc_partic,                           	
		a.ie_selecionado,                               	
		a.nr_seq_conta_pos_estab                      	
	from	w_pls_analise_item	a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	a.ie_selecionado	= 'S'
	and	a.ie_status_analise	<> 'I'
	and a.nr_id_transacao = nr_id_transacao_p
	
union all

	SELECT	CASE WHEN coalesce(a.nr_seq_conta_mat::text, '') = '' THEN  'P'  ELSE 'M' END  	ie_tipo_item,
		a.nr_sequencia					nr_seq_w_item,
		a.nr_seq_conta,
		a.nr_seq_conta_proc,
		a.nr_seq_conta_mat,
		a.nr_seq_proc_partic,
		a.ie_selecionado,
		a.nr_seq_conta_pos_estab
	from	w_pls_analise_item	a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	a.nr_sequencia	  = nr_seq_w_item_p
	and a.nr_id_transacao = nr_id_transacao_p
	and (a.ie_selecionado = 'N' or coalesce(a.ie_selecionado::text, '') = '')
	and	a.ie_status_analise	<> 'I'
	order by
		ie_selecionado;

BEGIN

select 	coalesce(max(ie_novo_pos_estab),'N')
into STRICT	ie_novo_pos_estab_w
from	pls_visible_false;

for r_c01_w in C01 loop
	
	if (ie_novo_pos_estab_w = 'N') then
		CALL pls_analise_lib_fat_total_pos(nr_seq_analise_p, r_c01_w.nr_seq_conta_pos_estab, r_c01_w.nr_seq_conta_proc, r_c01_w.nr_seq_conta_mat, r_c01_w.nr_seq_proc_partic,
						nr_seq_mot_liberacao_p, ds_observacao_p, cd_estabelecimento_p, nr_seq_grupo_atual_p, nm_usuario_p);
	else
		CALL pls_an_lib_fat_total_pos_estab(nr_seq_analise_p, r_c01_w.nr_seq_conta_pos_estab, r_c01_w.nr_seq_conta_proc, r_c01_w.nr_seq_conta_mat, r_c01_w.nr_seq_proc_partic,
						nr_seq_mot_liberacao_p, ds_observacao_p, cd_estabelecimento_p, nr_seq_grupo_atual_p, r_c01_w.ie_tipo_item, nm_usuario_p);
						
	end if;				
		
	CALL pls_gerar_w_analise_selec_item(nr_seq_analise_p, r_c01_w.nr_seq_w_item, null, 'D', nm_usuario_p, 'N', nr_id_transacao_p);
					
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_analise_liberar_fat_pos ( nr_seq_analise_p bigint, nr_seq_w_item_p bigint, nr_seq_mot_liberacao_p bigint, nr_seq_grupo_atual_p bigint, ds_observacao_p text, nr_id_transacao_p w_pls_analise_item.nr_id_transacao%type, nm_usuario_p text, cd_estabelecimento_p bigint ) FROM PUBLIC;

