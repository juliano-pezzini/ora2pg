-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_aceita_fatura ( nr_seq_fatura_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_mensagem_w			varchar(4000);
qt_contas_analise_w		bigint := 1;
nr_seq_lote_w			bigint;
nr_seq_acao_w			bigint;
nr_titulo_w			bigint;
nr_seq_analise_w		bigint;
nr_seq_grupo_w			bigint;
nr_titulo_ndc_w			bigint;
ie_param_37_a500_w		varchar(2) := 'N';
ie_origem_finalizacao_w		pls_auditoria_conta_grupo.ie_origem_finalizacao%type;
qt_analise_w			integer;

C01 CURSOR FOR
	SELECT	a.nr_seq_analise,
		c.nr_seq_grupo,
		coalesce(c.ie_origem_finalizacao,'X') ie_origem_finalizacao,
		b.ie_status
	from    pls_conta 			a,
		pls_analise_conta 		b,
		pls_auditoria_conta_grupo 	c
	where   a.nr_seq_analise		= b.nr_sequencia
	and	c.nr_seq_analise		= b.nr_sequencia
	and	a.nr_seq_fatura     		= nr_seq_fatura_p
	and	coalesce(c.ie_pre_analise,'N')	= 'S'
	group by	a.nr_seq_analise,
			c.nr_seq_grupo,
			coalesce(c.ie_origem_finalizacao,'X'),
			b.ie_status;
-- Crusro criado para gerar log, caso a analise esteja encerrada mas ainda está na etapa de pre-analise
C02 CURSOR FOR
	SELECT	a.nr_seq_analise,
		c.nr_seq_grupo,
		coalesce(c.ie_origem_finalizacao,'X') ie_origem_finalizacao,
		b.ie_status
	from    pls_conta 			a,
		pls_analise_conta 		b,
		pls_auditoria_conta_grupo 	c
	where   a.nr_seq_analise		= b.nr_sequencia
	and	c.nr_seq_analise		= b.nr_sequencia
	and	a.nr_seq_fatura     		= nr_seq_fatura_p
	and	coalesce(c.ie_pre_analise,'N')	= 'S'
	and	b.ie_status			= 'T'
	group by	a.nr_seq_analise,
			c.nr_seq_grupo,
			coalesce(c.ie_origem_finalizacao,'X'),
			b.ie_status;

BEGIN
ie_param_37_a500_w := Obter_Param_Usuario(1293, 37, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_param_37_a500_w);

select	max(b.nr_seq_lote_conta)
into STRICT	nr_seq_lote_w
from	ptu_fatura a,
	pls_protocolo_conta b
where	a.nr_sequencia 	   = nr_seq_fatura_p
and	a.nr_seq_protocolo = b.nr_sequencia;

select	max(a.nr_titulo),
	max(a.nr_titulo_ndc)
into STRICT	nr_titulo_w,
	nr_titulo_ndc_w
from	ptu_fatura a
where	a.nr_sequencia = nr_seq_fatura_p;

CALL pls_finalizar_pre_analise(nr_seq_lote_w, cd_estabelecimento_p, nm_usuario_p);

if (ie_param_37_a500_w = 'S') then
	select	count(1)
	into STRICT	qt_contas_analise_w
	from	pls_analise_conta	a,
		pls_conta		b
	where	b.nr_seq_analise	= a.nr_sequencia
	and	b.nr_seq_fatura		= nr_seq_fatura_p
	and	a.ie_status		!= 'T';
	
	select	count(1)
	into STRICT	qt_analise_w
	from	pls_analise_conta	a,
		pls_conta		b
	where	b.nr_seq_analise	= a.nr_sequencia
	and	b.nr_seq_fatura		= nr_seq_fatura_p;	
end if;

if (qt_contas_analise_w	= 0) and (qt_analise_w		> 0) then
	CALL ptu_atualizar_status_fatura(nr_seq_fatura_p, 'AF', null, nm_usuario_p, ie_param_37_a500_w);
else
	CALL ptu_atualizar_status_fatura(nr_seq_fatura_p, 'A', null, nm_usuario_p);
end if;

update	ptu_fatura
set	dt_aceite	= clock_timestamp()
where	nr_sequencia	= nr_seq_fatura_p;

nr_seq_acao_w := pls_obter_acao_intercambio(	'8',  -- Aceite da fatura/Encaminhamento da análise
				'2',  -- Gerar título a pagar 
				nr_seq_fatura_p, null, null, null, clock_timestamp(), 'A500', 'N', nr_seq_acao_w);
				
if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') then
	CALL ptu_gerar_tit_pagar_fatura(nr_seq_fatura_p,nr_seq_acao_w,'G',cd_estabelecimento_p,nm_usuario_p);
end if;

nr_seq_acao_w := pls_obter_acao_intercambio(	'8',  -- Aceite da fatura/Encaminhamento da análise
				'8',  -- Mudar status do título a pagar
				nr_seq_fatura_p, null, null, null, clock_timestamp(), 'A500', 'N', nr_seq_acao_w);			
	
if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') then
	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
		CALL pls_alterar_status_fatura_pag(nr_titulo_w,nm_usuario_p);
	end if;
	
	if (nr_titulo_ndc_w IS NOT NULL AND nr_titulo_ndc_w::text <> '') then
		CALL pls_alterar_status_fatura_pag(nr_titulo_ndc_w,nm_usuario_p);
	end if;
end if;

nr_seq_acao_w := pls_obter_acao_intercambio(	'8',  -- Aceite da fatura/Encaminhamento da análise
				'5',  -- Liberar pagamento do título
				nr_seq_fatura_p, null, null, null, clock_timestamp(), 'A500', 'N', nr_seq_acao_w);

if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') then	
	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
		CALL pls_liberar_fatura_pagamento(nr_titulo_w,nm_usuario_p);
	end if;
	
	if (nr_titulo_ndc_w IS NOT NULL AND nr_titulo_ndc_w::text <> '') then
		CALL pls_liberar_fatura_pagamento(nr_titulo_ndc_w,nm_usuario_p);
	end if;
end if;

for r_c01_w in C01() loop
	begin
	if (r_c01_w.ie_origem_finalizacao <> 'G') and (r_c01_w.ie_status	!= 'T')then
		ds_mensagem_w := pls_finalizar_analise_grupo(r_c01_w.nr_seq_analise, nm_usuario_p, r_c01_w.nr_seq_grupo, 'N', 'N', cd_estabelecimento_p, 'N', 'N', 'N', 'A', ds_mensagem_w);
	end if;
	update	pls_analise_conta
	set	ie_pre_analise	= 'N'
	where	nr_sequencia	= r_c01_w.nr_seq_analise;
	
	update	pls_analise_glo_ocor_grupo
	set	ie_status	= 'M',
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where	nr_seq_grupo	= r_c01_w.nr_seq_grupo
	and	nr_seq_analise	= r_c01_w.nr_seq_analise
	and	ie_status	= 'P';
	end;
end loop;


for r_c02_w in c02() loop

		insert into pls_hist_analise_conta(	ds_observacao,					dt_atualizacao,		dt_atualizacao_nrec,
							ie_tipo_historico,				ie_tipo_item,		nm_usuario,
							nm_usuario_nrec,				nr_seq_analise,		nr_seq_conta,
							nr_seq_conta_glosa,				nr_seq_conta_mat,	nr_seq_conta_proc,
							nr_seq_glosa,					nr_seq_grupo,		nr_seq_item,
							nr_seq_ocor_benef,				nr_seq_ocorrencia,	nr_seq_proc_partic,
							nr_sequencia,					ds_call_stack)
				values (	'Análise encerrada ainda na etapa de pré-analise',	clock_timestamp(),		clock_timestamp(),
						'1',							null,			nm_usuario_p,
						nm_usuario_p,						r_c02_w.nr_seq_analise,	null,
						null,							null,			null,
						null, 							r_c02_w.nr_seq_grupo,	null,	
						null,							null,			null,
						nextval('pls_hist_analise_conta_seq'),			dbms_utility.format_call_stack);
end loop;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_aceita_fatura ( nr_seq_fatura_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

