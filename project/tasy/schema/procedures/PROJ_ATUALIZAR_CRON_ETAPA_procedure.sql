-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE proj_atualizar_cron_etapa (nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_interno_w	bigint;
nr_predecessora_w	bigint;
dt_inicio_prev_w	timestamp;
dt_fim_prev_w		timestamp;
dt_fim_prev_ww		timestamp;
nr_sequencia_sup_w	bigint; --  Sequência da atividade posterior
nr_seq_cronograma_w	bigint;
qt_hora_prev_w		double precision;
qt_hora_prev_etapa_w	double precision;
nr_seq_sup_fase_w	bigint;
qt_calendario_w		bigint;
ie_regra_ini_fim_w	varchar(1);
nr_sequencia_w		bigint;

dt_inicio_ativ_w	timestamp;
dt_fim_ativ_w		timestamp;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	proj_cron_etapa
	where	nr_predecessora = nr_seq_interno_w
	and	nr_seq_cronograma = nr_seq_cronograma_w
	order by 1;

TYPE 		fetch_array IS TABLE OF c01%ROWTYPE;
s_array 	fetch_array;
i		integer := 1;
type Vetor is table of fetch_array index by integer;
Vetor_c01_w	Vetor;

BEGIN

-- Buscar os dados da atividade atualizada
select	nr_seq_interno,
	dt_inicio_prev,
	dt_fim_prev,
	nr_seq_cronograma,
	nr_seq_superior,
	substr(obter_horas_etapa_recurso(nr_sequencia),1,255),
	--qt_hora_prev,
	nr_predecessora,
	ie_regra_ini_fim
into STRICT	nr_seq_interno_w,
	dt_inicio_prev_w,
	dt_fim_prev_w,
	nr_seq_cronograma_w,
	nr_seq_sup_fase_w,
	qt_hora_prev_etapa_w,
	nr_predecessora_w,
	ie_regra_ini_fim_w
from	proj_cron_etapa
where	nr_sequencia = nr_sequencia_p
order by 1;

select	count(*)
into STRICT	qt_calendario_w
from	proj_cron_calendario
where	nr_seq_cronograma = nr_seq_cronograma_w;

if (qt_calendario_w = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(173564);
end if;

if ((nr_predecessora_w IS NOT NULL AND nr_predecessora_w::text <> '') or (dt_inicio_prev_w IS NOT NULL AND dt_inicio_prev_w::text <> '')) then

	if (nr_predecessora_w IS NOT NULL AND nr_predecessora_w::text <> '') then
		select	max(a.dt_fim_prev)
		into STRICT	dt_inicio_prev_w
		from	proj_cron_etapa a
		where	nr_seq_interno = nr_predecessora_w
		and	nr_seq_cronograma = nr_seq_cronograma_w;
	end if;

	if (dt_inicio_prev_w IS NOT NULL AND dt_inicio_prev_w::text <> '') then

		if (ie_regra_ini_fim_w = 'B') then

			SELECT * FROM proj_verifica_calendario_cron(dt_inicio_prev_w, qt_hora_prev_etapa_w, dt_inicio_ativ_w, dt_fim_ativ_w, nr_seq_cronograma_w, nm_usuario_p, nr_sequencia_p) INTO STRICT dt_inicio_ativ_w, dt_fim_ativ_w;

			update	proj_cron_etapa
			set	dt_fim_prev = dt_fim_ativ_w,
				dt_inicio_prev = dt_inicio_ativ_w
			where	nr_sequencia = nr_sequencia_p;

		else
			select	dt_inicio_prev
			into STRICT	dt_inicio_prev_w
			from	proj_cron_etapa
			where	nr_sequencia = nr_sequencia_p;

			SELECT * FROM proj_verifica_calendario_cron(dt_inicio_prev_w, qt_hora_prev_etapa_w, dt_inicio_ativ_w, dt_fim_ativ_w, nr_seq_cronograma_w, nm_usuario_p, nr_sequencia_p) INTO STRICT dt_inicio_ativ_w, dt_fim_ativ_w;

			update	proj_cron_etapa
			set	dt_fim_prev = dt_fim_ativ_w
			where	nr_sequencia = nr_sequencia_p;

		end if;

		commit;

	end if;
--  Abre cursor que irá varrer as atividades posteriores (com o NR_SEQ_INTERNO da atividade informado na NR_PREDECESSORA)
	CALL Proj_atualizar_tempo_fase(nr_sequencia_p, nm_usuario_p);

	open c01;
	loop
	FETCH C01 BULK COLLECT INTO s_array LIMIT 1000;
		Vetor_c01_w(i) := s_array;
		i := i + 1;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	END LOOP;
	CLOSE C01;

	for i in 1..Vetor_c01_w.COUNT loop
		s_array := Vetor_c01_w(i);
		for z in 1..s_array.COUNT loop
		nr_sequencia_sup_w := s_array[z].nr_sequencia;
			begin
			CALL proj_atual_hr_etapa_superior(nr_sequencia_p);
			CALL Proj_atualizar_tempo_fase(nr_sequencia_p, nm_usuario_p);
			CALL proj_atualizar_cron_etapa(nr_sequencia_sup_w ,nm_usuario_p);
			commit;

			end;
		end loop;
	end loop;

	commit;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE proj_atualizar_cron_etapa (nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

