-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_horarios_livres_medico ( cd_medico_p text, cd_estabelecimento_p bigint, dt_agenda_p timestamp, dt_final_p timestamp, nm_usuario_p text, nr_seq_proc_interno_p bigint, cd_agenda_p bigint, cd_perfil_p bigint) AS $body$
DECLARE

cd_agenda_w	bigint;
dt_agenda_w	timestamp;
ds_retorno_w	varchar(255);
ie_lib_sala_w	varchar(1) := 'S';

c00 CURSOR FOR
	SELECT	distinct a.cd_agenda
	from	agenda_medico a
	where	obter_se_lib_agenda_medico(a.cd_agenda,cd_medico_p) = 'S'
	and	((coalesce(cd_agenda_p::text, '') = '') or (cd_agenda	= cd_agenda_p))
	and	'S'		= (	SELECT	coalesce(max(x.ie_permite), 'S')
                     			from	proc_interno_agenda x
	                  		where	x.nr_seq_proc_interno  	= nr_seq_proc_interno_p
                  			and	x.cd_agenda		= a.cd_agenda)
	and (obter_se_lib_agenda_perfil(a.cd_agenda,cd_perfil_p) = 'S')
	and	exists (select 1 from agenda x where a.cd_agenda = x.cd_agenda and coalesce(x.ie_situacao,'A') = 'A')
	
union

	select	distinct c.cd_agenda
	from	agenda c
	where	ie_situacao 	= 'A'
	and	cd_tipo_agenda	= 1
	and	((coalesce(cd_agenda_p::text, '') = '') or (cd_agenda	= cd_agenda_p))
	and	'S'		= (	select	coalesce(max(x.ie_permite), 'S')
                     			from	proc_interno_agenda x
	                  		where	x.nr_seq_proc_interno  	= nr_seq_proc_interno_p
                  			and	x.cd_agenda		= c.cd_agenda)
	and	ie_lib_sala_w = 'N'
	and (obter_se_lib_agenda_perfil(c.cd_agenda,cd_perfil_p) = 'S');


BEGIN

ie_lib_sala_w := obter_param_usuario(870, 8, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_lib_sala_w);

dt_agenda_w	:=	dt_agenda_p;

open c00;
loop
	fetch c00	into
		cd_agenda_w;
	EXIT WHEN NOT FOUND; /* apply on c00 */
	begin

	dt_agenda_w	:=	dt_agenda_p;

	while	((trunc(dt_agenda_w) < trunc(dt_final_p)) or (trunc(dt_agenda_w) = trunc(dt_final_p))) loop
		ds_retorno_w := Obter_Horarios_Livres_cirurgia(cd_estabelecimento_p, cd_agenda_w, trunc(dt_agenda_w,'dd'), trunc(dt_agenda_w,'dd'), 0, '', '', '', nm_usuario_p, 'S', ds_retorno_w);
		dt_agenda_w	:=	dt_agenda_w + 1;
	end loop;

	end;

end loop;
close c00;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_horarios_livres_medico ( cd_medico_p text, cd_estabelecimento_p bigint, dt_agenda_p timestamp, dt_final_p timestamp, nm_usuario_p text, nr_seq_proc_interno_p bigint, cd_agenda_p bigint, cd_perfil_p bigint) FROM PUBLIC;

