-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_ajustar_migracao_benef_sib (( cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) is nr_seq_status_exclusao_w pls_segurado_status.nr_sequencia%type) RETURNS varchar AS $body$
DECLARE


ie_plano_diferente_w	varchar(1);
BEGIN

select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_plano_diferente_w
from	pls_plano a
where	a.nr_sequencia	= nr_seq_plano_atual_p
and	exists (	SELECT	1
		from	pls_plano b
		where	b.nr_sequencia	= nr_seq_plano_ant_p
		and (a.nr_protocolo_ans <> b.nr_protocolo_ans or
			 a.cd_scpa <> b.cd_scpa or
			 a.ie_regulamentacao <> b.ie_regulamentacao)
		);

return	ie_plano_diferente_w;

end;

function obter_se_grupo_contratual(	nr_seq_contrato_atual_p		pls_contrato.nr_sequencia%type,
				nr_seq_contrato_ant_p		pls_contrato.nr_sequencia%type)
 		    	return varchar2 is

ie_grupo_contratual_w	varchar2(1);

begin

select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_grupo_contratual_w
from	pls_contrato_grupo a
where	a.nr_seq_contrato	= nr_seq_contrato_atual_p
and	exists (	SELECT	1
		from	pls_contrato_grupo x
		where	x.nr_seq_contrato	= nr_seq_contrato_ant_p
		and	x.nr_seq_grupo		= a.nr_seq_grupo);

return	ie_grupo_contratual_w;

end;

begin

for r_c01_w in c01 loop
	begin

	select	max(a.nr_sequencia),
		max(b.dt_rescisao),
		max(b.cd_cco),
		max(b.nr_seq_plano),
		max(b.nr_seq_contrato)
	into STRICT	nr_seq_status_exclusao_w,
		dt_rescisao_w,
		cd_cco_w,
		nr_seq_plano_ant_w,
		nr_seq_contrato_ant_w
	from	pls_segurado_status a,
		pls_segurado b
	where	b.nr_sequencia	= a.nr_seq_segurado
	and	b.nr_sequencia	= r_c01_w.nr_seq_segurado_anterior
	and	(a.dt_final IS NOT NULL AND a.dt_final::text <> '');

	if	(dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '' AND cd_cco_w IS NOT NULL AND cd_cco_w::text <> '') then

		qt_dias_intervalo_migracao_w	:= trunc(r_c01_w.dt_contratacao_benef_atual,'dd') - trunc(dt_rescisao_w,'dd');
		ie_codigo_plano_diferente_w	:= obter_se_plano_diferente(r_c01_w.nr_seq_plano,nr_seq_plano_ant_w);
		ie_mesmo_grupo_contratual_w	:= obter_se_grupo_contratual(nr_seq_contrato_ant_w,r_c01_w.nr_seq_contrato_atual);

		for r_c02_w in C02(qt_dias_intervalo_migracao_w, ie_codigo_plano_diferente_w, ie_mesmo_grupo_contratual_w) loop
			begin
			ie_envio_sib_w	:= r_c02_w.ie_movimento_sib;
			end;
		end loop; --C01
		if (ie_envio_sib_w in (2,3)) then
			update	pls_segurado_status
			set	ie_envio_sib	= ie_envio_sib_w
			where	nr_sequencia	= r_c01_w.nr_seq_seg_status_benef_atual;

			if (coalesce(pls_sib_obter_lote_status(nr_seq_status_exclusao_w, 'E')::text, '') = '') then
				update	pls_segurado_status
				set	ie_exclusao_sib	= ie_envio_sib_w
				where	nr_sequencia	= nr_seq_status_exclusao_w;
			end if;

			if (coalesce(r_c01_w.cd_cco_atual::text, '') = '') then
				update	pls_segurado
				set	cd_cco		= cd_cco_w
				where	nr_sequencia	= r_c01_w.nr_seq_segurado_atual;
			end if;

			delete from pls_sib_segurado
			where	nr_seq_segurado = r_c01_w.nr_seq_segurado_atual;

			CALL pls_sib_segurado_pck.inserir_sib_segurado_migracao(r_c01_w.nr_seq_segurado_atual, r_c01_w.nr_seq_segurado_anterior, 'N', nm_usuario_p);
		end if;
	end if;

	end;
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ajustar_migracao_benef_sib (( cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) is nr_seq_status_exclusao_w pls_segurado_status.nr_sequencia%type) FROM PUBLIC;

