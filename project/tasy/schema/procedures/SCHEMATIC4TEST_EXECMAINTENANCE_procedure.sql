-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE schematic4test_execmaintenance (NR_SEQ_PRESET_P bigint, NR_SEQ_SUITE_P bigint, NM_USUARIO_P text) AS $body$
DECLARE

NR_SEQ_SCRIPT_W bigint;
NR_SEQ_SUITE_W bigint;
NR_SEQ_PRESET_W bigint;
NR_SEQ_BROWSER_W bigint;
NR_SEQ_GRID_W bigint;
NR_SEQ_ROBOT_W bigint;
NR_SEQ_SERVICE_W bigint;
NR_SEQ_URL_W bigint;
NM_SUITE_W varchar(255);
QTD bigint;
QTD_W bigint;
QTD_W2 bigint;
NR_SEQ_EXECUTION_W bigint;
NR_SEQ_EXECUTION_W2 bigint;
NEWSEQUENCETEST bigint;
NEWSEQUENCESCHEDULE bigint;
NR_SEQ_PRESET_W2 bigint;
NR_SEQ_ROBOT_W2 bigint;

--loop script in MAINTENANCE
C01 CURSOR FOR
  SELECT DISTINCT manu.NR_SEQ_SCRIPT NR_SEQ_SCRIPT
     INTO STRICT NR_SEQ_SCRIPT_W
  FROM SCHEM_TEST_MAINTENANCE manu 
  WHERE manu.IE_PRIORITY = '1'
  AND manu.IE_STATUS = '1'
  AND manu.NR_SEQ_SCRIPT IN (SELECT NR_SEQ_SCRIPT FROM SCHEM_TEST_TEST WHERE NR_SEQ_SUITE = NR_SEQ_SUITE_P)
  AND manu.NM_USUARIO_NREC NOT LIKE 'Robot';


BEGIN
    --procedure that execute script in MAINTENANCE
	INSERT INTO SCHEM_TEST_BEHOLDER(nr_sequencia, nm_usuario, dt_atualizacao, nm_usuario_nrec, dt_atualizacao_nrec, ds_interaction, ds_param_a, ds_param_b)
	VALUES (nextval('schem_test_beholder_seq'), NM_USUARIO_P, clock_timestamp(), 'Robot', clock_timestamp(), 'SCHEMATIC4TEST_EXECMAINTENANCE', 
	'NR_SEQ_PRESET_P as '||NR_SEQ_PRESET_P, 
	'NR_SEQ_SUITE_P as '||NR_SEQ_SUITE_P);

  SELECT DISTINCT COUNT(manu.NR_SEQ_SCRIPT) NR_SEQ_SCRIPT
     INTO STRICT QTD
  FROM SCHEM_TEST_MAINTENANCE manu 
  WHERE manu.IE_PRIORITY = '1'
  AND manu.IE_STATUS = '1'
  AND manu.NR_SEQ_SCRIPT IN (SELECT NR_SEQ_SCRIPT FROM SCHEM_TEST_TEST WHERE NR_SEQ_SUITE = NR_SEQ_SUITE_P)
  AND manu.NM_USUARIO_NREC NOT LIKE 'Auto Robot';

  IF (QTD <> 0) THEN    
    SELECT NR_SEQUENCIA, NR_SEQ_BROWSER, NR_SEQ_GRID, NR_SEQ_ROBOT, NR_SEQ_SERVICE, NR_SEQ_URL
        INTO STRICT NR_SEQ_PRESET_W, NR_SEQ_BROWSER_W, NR_SEQ_GRID_W, NR_SEQ_ROBOT_W, NR_SEQ_SERVICE_W, NR_SEQ_URL_W
    FROM SCHEM_TEST_PRESET
    WHERE NR_SEQUENCIA = NR_SEQ_PRESET_P;
  
  IF (NR_SEQ_PRESET_W IS NOT NULL AND NR_SEQ_PRESET_W::text <> '') THEN      
      NM_SUITE_W := 'Test - Scripting maintenance';

      INSERT INTO SCHEM_TEST_SUITE(nr_sequencia, nm_suite, ds_version, ie_runtype, nm_owner, dt_last, dt_atualizacao, nm_usuario, nm_usuario_nrec, dt_atualizacao_nrec, nr_seq_preset, ds_repo, ie_jobs, ie_test_local, ie_situacao) 
          VALUES (nextval('schem_test_suite_seq'), NM_SUITE_W, '0', 1, NM_USUARIO_P, clock_timestamp(), clock_timestamp(), NM_USUARIO_P, NM_USUARIO_P, clock_timestamp(), NR_SEQ_PRESET_W, '1', '0', '0', 'I');
      COMMIT;
            
      IF (coalesce(NR_SEQ_EXECUTION_W::text, '') = '') THEN 
          NR_SEQ_EXECUTION_W := 0;
      END IF;

      SELECT MAX(suite.NR_SEQUENCIA) NR_SEQUENCIA
         INTO STRICT NR_SEQ_SUITE_W
      FROM SCHEM_TEST_SUITE suite 
      WHERE suite.NM_SUITE like NM_SUITE_W;

      OPEN C01;
      LOOP
        FETCH C01 INTO	
          NR_SEQ_SCRIPT_W;
      EXIT WHEN NOT FOUND; /* apply on C01 */
      BEGIN	
              SELECT COUNT(teste.NR_SEQ_ROBOT) QTD_W3
                  INTO STRICT QTD_W2
              FROM SCHEM_TEST_TEST teste
              WHERE teste.NR_SEQ_SUITE = NR_SEQ_SUITE_W
              AND teste.NR_SEQ_SCRIPT =  NR_SEQ_SCRIPT_W;

              IF (QTD_W2 = 0) THEN					     
                SELECT nextval('schem_test_test_seq')     
                  INTO STRICT NEWSEQUENCETEST
;
                
                SELECT NR_SEQ_PRESET
                    INTO STRICT NR_SEQ_PRESET_W2
                FROM SCHEM_TEST_SCRIPT WHERE NR_SEQUENCIA = NR_SEQ_SCRIPT_W;
                
               SELECT NR_SEQ_ROBOT
                  INTO STRICT NR_SEQ_ROBOT_W2
                FROM SCHEM_TEST_PRESET
                WHERE NR_SEQUENCIA = NR_SEQ_PRESET_W2;
              
                INSERT INTO SCHEM_TEST_TEST(nr_sequencia, nr_seq_execution, nr_seq_script, nr_seq_suite, nr_seq_robot, nr_seq_grid, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ie_jobs, ie_switch) 
                    VALUES (NEWSEQUENCETEST, NR_SEQ_EXECUTION_W+5, NR_SEQ_SCRIPT_W, NR_SEQ_SUITE_W, NR_SEQ_ROBOT_W2, NR_SEQ_GRID_W, clock_timestamp(), NM_USUARIO_P, clock_timestamp(), NM_USUARIO_P, '0', '1');
                COMMIT;

                SELECT NR_SEQ_EXECUTION   
                  INTO STRICT NR_SEQ_EXECUTION_W
				FROM SCHEM_TEST_TEST
				WHERE NR_SEQUENCIA = NEWSEQUENCETEST;
            END IF;
      END;
      END LOOP;
      CLOSE C01;
      
      SELECT test.NR_SEQ_EXECUTION 
          INTO STRICT NR_SEQ_EXECUTION_W2
      FROM SCHEM_TEST_TEST test
      WHERE test.NR_SEQUENCIA = NEWSEQUENCETEST;

      IF (NR_SEQ_EXECUTION_W2 IS NOT NULL AND NR_SEQ_EXECUTION_W2::text <> '') THEN 
          SELECT nextval('schem_test_schedule_seq')
              INTO STRICT NEWSEQUENCESCHEDULE
;
              
          INSERT INTO SCHEM_TEST_SCHEDULE(nr_sequencia, dt_schedule, ie_status, nm_owner, nr_seq_suite, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_url, nr_seq_service, nr_seq_browser, ie_jobs)
					     VALUES (NEWSEQUENCESCHEDULE, clock_timestamp(), '1', NM_USUARIO_P, NR_SEQ_SUITE_W, clock_timestamp(), NM_USUARIO_P, clock_timestamp(), NM_USUARIO_P, NR_SEQ_URL_W, NR_SEQ_SERVICE_W, NR_SEQ_BROWSER_W, '2');
          COMMIT;
      END IF;
    END IF;
  END IF;
  EXCEPTION
  WHEN no_data_found THEN
    RAISE NOTICE 'Erro: Data not found';
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE schematic4test_execmaintenance (NR_SEQ_PRESET_P bigint, NR_SEQ_SUITE_P bigint, NM_USUARIO_P text) FROM PUBLIC;

