-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE generate_int_serial_number ( nr_seq_document_p bigint, ie_type_document_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_serial_p INOUT int_serial_number.nr_serial%type, nr_seq_evento_int_p bigint ) AS $body$
DECLARE


    nr_serial_w         int_serial_number.nr_serial%type;
    ie_reset_w          int_serial_number_rule.ie_reset%type;
    ie_reset_sequence   varchar(4);


BEGIN

    select coalesce(max(ie_reset), 'N')
    into STRICT ie_reset_w
    from int_serial_number_rule
    where cd_estabelecimento = cd_estabelecimento_p
    and nr_seq_evento_int = nr_seq_evento_int_p;

    if ( ie_reset_w = 'N' ) then
        ie_reset_sequence := null;
    elsif ( ie_reset_w = 'D' ) then
        ie_reset_sequence := 'DD';
    elsif ( ie_reset_w = 'M' ) then
        ie_reset_sequence := 'MM';
    elsif ( ie_reset_w = 'A' ) then
        ie_reset_sequence := 'YYYY';
    end if;

    select coalesce(max(nr_serial), 0) + 1
    into STRICT nr_serial_w
    from int_serial_number
    where ie_type_document = ie_type_document_p
    and nr_seq_document = nr_seq_document_p
    and (coalesce(ie_reset_sequence::text, '') = ''
    or (pkg_date_utils.start_of(dt_serial, ie_reset_sequence, null) = pkg_date_utils.start_of(clock_timestamp(), ie_reset_sequence, null)));

    if ( nr_serial_w = 1 ) then
        insert into int_serial_number(
            nr_sequencia,
            dt_atualizacao,
            nm_usuario,
            dt_atualizacao_nrec,
            nm_usuario_nrec,
            nr_serial,
            nr_seq_document,
            ie_type_document,
            dt_serial
        ) values (
            nextval('int_serial_number_seq'),
            clock_timestamp(),
            nm_usuario_p,
            clock_timestamp(),
            nm_usuario_p,
            nr_serial_w,
            nr_seq_document_p,
            ie_type_document_p, 
            clock_timestamp()
        );

    else
        update int_serial_number
        set
            nr_serial = nr_serial_w,
            nm_usuario = nm_usuario_p,
            dt_atualizacao = clock_timestamp()
        where
            ie_type_document = ie_type_document_p
            and nr_seq_document = nr_seq_document_p
            and ( coalesce(ie_reset_sequence::text, '') = ''
            or ( pkg_date_utils.start_of(dt_serial, ie_reset_sequence, null) = pkg_date_utils.start_of(clock_timestamp(), ie_reset_sequence, null) ) );

    end if;

    nr_serial_p := nr_serial_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE generate_int_serial_number ( nr_seq_document_p bigint, ie_type_document_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_serial_p INOUT int_serial_number.nr_serial%type, nr_seq_evento_int_p bigint ) FROM PUBLIC;

