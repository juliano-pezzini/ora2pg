-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_insere_lote_protocolo ( nr_protocolo_p text, nr_seq_protocolo_p bigint, nr_lote_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ie_tipo_lote_w		smallint;
nr_interno_conta_w	bigint;					
					 
C01 CURSOR FOR 
	SELECT	a.nr_interno_conta 
	from	sus_laudo_paciente a, 
		conta_paciente b, 
		sus_lote_autor c, 
		sus_aih_unif d 
	where	(d.nr_aih IS NOT NULL AND d.nr_aih::text <> '') 
	and	b.ie_status_acerto = 2 
	and	coalesce(b.nr_seq_protocolo,0) = 0 
	and	b.nr_interno_conta = d.nr_interno_conta 
	and	a.nr_interno_conta = b.nr_interno_conta 
	and	a.nr_seq_lote = c.nr_sequencia 
	and	c.nr_sequencia = nr_lote_p;
	
C02 CURSOR FOR 
	SELECT	a.nr_interno_conta 
	from	sus_laudo_paciente a, 
		conta_paciente b, 
		sus_lote_autor c, 
		sus_apac_unif d 
	where	(d.nr_apac IS NOT NULL AND d.nr_apac::text <> '') 
	and	b.ie_status_acerto = 2 
	and	coalesce(b.nr_seq_protocolo,0) = 0 
	and	b.nr_interno_conta = d.nr_interno_conta 
	and	a.nr_interno_conta = b.nr_interno_conta 
	and	a.nr_seq_lote = c.nr_sequencia 
	and	c.nr_sequencia = nr_lote_p;	
	 
C03 CURSOR FOR 
	SELECT	a.nr_interno_conta 
	from	sus_laudo_paciente a, 
		conta_paciente b, 
		sus_lote_autor c 
	where	b.ie_status_acerto = 2 
	and	coalesce(b.nr_seq_protocolo,0) = 0 
	and	a.nr_interno_conta = b.nr_interno_conta 
	and	a.nr_seq_lote = c.nr_sequencia 
	and	c.nr_sequencia = nr_lote_p;	
					 

BEGIN 
 
select	ie_tipo_lote 
into STRICT	ie_tipo_lote_w 
from	sus_lote_autor 
where	nr_sequencia = nr_lote_p;
 
if (ie_tipo_lote_w = 1) then 
	begin 
	 
	open C01;
	loop 
	fetch C01 into	 
		nr_interno_conta_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		update	conta_paciente 
		set	dt_atualizacao 	= clock_timestamp(), 
			nm_usuario 	= nm_usuario_p, 
			nr_protocolo 	= nr_protocolo_p, 
			nr_seq_protocolo = nr_seq_protocolo_p 
		where	nr_interno_conta = nr_interno_conta_w;
		 
		end;
	end loop;
	close C01;
	 
	end;
elsif (ie_tipo_lote_w = 2) then 
	begin 
	 
	open C02;
	loop 
	fetch C02 into	 
		nr_interno_conta_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		update	conta_paciente 
		set	dt_atualizacao 	= clock_timestamp(), 
			nm_usuario 	= nm_usuario_p, 
			nr_protocolo 	= nr_protocolo_p, 
			nr_seq_protocolo = nr_seq_protocolo_p 
		where	nr_interno_conta = nr_interno_conta_w;
		 
		end;
	end loop;
	close C02;
	 
	end;
else	 
	begin 
	 
	open C03;
	loop 
	fetch C03 into	 
		nr_interno_conta_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		 
		update	conta_paciente 
		set	dt_atualizacao 	= clock_timestamp(), 
			nm_usuario 	= nm_usuario_p, 
			nr_protocolo 	= nr_protocolo_p, 
			nr_seq_protocolo = nr_seq_protocolo_p 
		where	nr_interno_conta = nr_interno_conta_w;
		 
		end;
	end loop;
	close C03;
	 
	end;	
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_insere_lote_protocolo ( nr_protocolo_p text, nr_seq_protocolo_p bigint, nr_lote_p bigint, nm_usuario_p text) FROM PUBLIC;

