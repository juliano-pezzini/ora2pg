-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_reg_ecf_0010 ( nr_seq_controle_p text, ds_separador_p text, cd_estabelecimento_p text, nm_usuario_p text, cd_empresa_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint, ie_scp_p text) AS $body$
DECLARE



nr_seq_registro_w		bigint := nr_sequencia_p;
nr_linha_w			bigint := qt_linha_p;
ds_arquivo_w			varchar(4000);
ds_arquivo_compl_w		varchar(4000);
ds_linha_w			varchar(4000);
sep_w				varchar(2) := ds_separador_p;

tp_registro_w			varchar(5);
ie_opt_refis_w			varchar(2);
ie_opt_paes_w			varchar(255);
ie_forma_tributacao_w		smallint;
ie_forma_apuracao_w		varchar(2);
ie_tipo_entidade_w		varchar(2);
ie_cod_qualif_pj_w		varchar(2);
ie_tip_esc_pre_w		varchar(2);
nr_count_w			bigint;
ie_forma_apur_i_w		varchar(2);
ie_apur_csll_w			varchar(2);
ie_anual_trimestral_w 		fis_estrutura_calculo.ie_anual_trimestral%type;
ie_opt_ext_rtt_w		varchar(255);
ie_dif_fcont_w			varchar(2);
dt_inicio_apuracao_w		timestamp;
dt_fim_apuracao_w		timestamp;
ie_forma_trib_per_aux_w		varchar(2);
ie_forma_trib_per_w		varchar(4);
ie_mes_bal_red_w		varchar(26);
ie_forma_apuracao_per_w		varchar(2);
ie_forma_apuracao_tip_w		varchar(2);
ind_rec_receita_w		fis_regra_ecf_0020.ind_rec_receita%type;

c01 CURSOR FOR
	SELECT  distinct(b.dt_mes_apuracao),
			a.ie_anual_trimestral,
			a.ie_forma_apuracao
	from	fis_estrutura_calculo a,
			fis_lote_apuracao b
	where	a.nr_sequencia 	= b.nr_seq_estrutura
	and 	b.dt_mes_apuracao	between dt_inicio_apuracao_w and dt_fim_apuracao_w
	and	b.cd_empresa = cd_empresa_p
	and	(((ie_scp_p = 'S')
		and (coalesce(a.ie_scp, 'N') = 'S')
		and (a.cd_estabelecimento_scp = cd_estabelecimento_p))
	or	((ie_scp_p = 'N') 
		and (coalesce(a.ie_scp, 'N') = 'N')))		
	order by	b.dt_mes_apuracao;
vet01	c01%RowType;


BEGIN


begin
select	max('0010') tp_registro,
	max(a.ie_opt_refis),
	max(a.ie_opt_paes),
	max(a.ie_forma_tributacao),
	max(a.ie_forma_apuracao),
	max(a.ie_tipo_entidade),
	max(a.ie_opt_ext_rtt),
	max(a.ie_dif_fcont),
	max(a.ie_tipo_escrituracao),
	max(a.ind_rec_receita)
into STRICT	tp_registro_w,
	ie_opt_refis_w,		--3
	ie_opt_paes_w,		--4
	ie_forma_tributacao_w,	--5
	ie_forma_apuracao_w,	--6
	ie_tipo_entidade_w,
	ie_opt_ext_rtt_w, 	--14 <2016
	ie_dif_fcont_w, 	--15 <2016
	ie_tip_esc_pre_w,	--10
	ind_rec_receita_w	--14 >=2016
from	fis_regra_ecf_0020 a,
	fis_controle_ecf b
where	a.nr_seq_lote	= b.nr_seq_lote
and 	a.cd_empresa	= cd_empresa_p
and 	b.nr_sequencia	= nr_seq_controle_p
and		((	(ie_scp_p = 'S')
		and (coalesce(coalesce(b.ie_scp, 'N'), 'N') = 'S')
		and (b.cd_estabelecimento_scp = cd_estabelecimento_p))
		or(	(ie_scp_p = 'N')
		and (coalesce(coalesce(b.ie_scp, 'N'), 'N') = 'N')
		and (coalesce(b.cd_estabelecimento_scp::text, '') = '')));
exception
when no_data_found then
	-- No existe regra cadastrada para o lote. Verifique!
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(187638);
end;


ds_linha_w  	:=  substr( 	sep_w || '0001'	|| -- Texto Fixo Contendo a Identificao do Registro.
				sep_w || 0 	|| sep_w,1,8000); -- Indicador de movimento: 0 - Bloco com dados informados; 1 - Bloco sem dados informados.
ds_arquivo_w		:= substr(ds_linha_w,1,4000);
ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
nr_seq_registro_w	:= nr_seq_registro_w + 1;
nr_linha_w		:= nr_linha_w + 1;

insert into fis_ecf_arquivo(
	nr_sequencia,
	nm_usuario,
	dt_atualizacao,
	nm_usuario_nrec,
	dt_atualizacao_nrec,
	nr_seq_controle_ecf,
	nr_linha,
	cd_registro,
	ds_arquivo,
	ds_arquivo_compl)
values (	nr_seq_registro_w,
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nr_seq_controle_p,
	nr_linha_w,
	'0001',
	ds_arquivo_w,
	ds_arquivo_compl_w);

select  	max(dt_inicio_apuracao),
	max(dt_fim_apuracao)
into STRICT	dt_inicio_apuracao_w,
	dt_fim_apuracao_w
from	fis_controle_ecf
where	nr_sequencia = nr_seq_controle_p;

ie_forma_apuracao_per_w := ie_forma_apuracao_w;

--7
ie_cod_qualif_pj_w := '01';
if ie_forma_tributacao_w in (8,9) then
	ie_forma_apuracao_w := '';
	ie_cod_qualif_pj_w := '';
end if;

if ie_forma_tributacao_w in (1,2,3,4) then
	ie_forma_trib_per_aux_w := 'R';
end if;

if ie_forma_tributacao_w in (5,6,7) then
	ie_forma_trib_per_aux_w := 'P';
end if;

ie_forma_trib_per_w := null;
--8
if ie_forma_tributacao_w in (1,2,3,4,5,6,7) then
	open c01;
	loop
	fetch c01 into
		vet01;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		if (vet01.ie_anual_trimestral = 'A') then

			if (length(ie_forma_trib_per_w) = 0) or (coalesce(ie_forma_trib_per_w::text, '') = '')  then
				if (to_char(vet01.dt_mes_apuracao, 'MM')  = '01') or (to_char(vet01.dt_mes_apuracao, 'MM')  = '02') or (to_char(vet01.dt_mes_apuracao, 'MM')  = '03') then
					ie_forma_trib_per_w := ie_forma_trib_per_aux_w;
				end if;
			end if;

			if (length(ie_forma_trib_per_w) <= 1) or (coalesce(ie_forma_trib_per_w::text, '') = '') then
				if (to_char(vet01.dt_mes_apuracao, 'MM')  = '04') or (to_char(vet01.dt_mes_apuracao, 'MM')  = '05') or (to_char(vet01.dt_mes_apuracao, 'MM')  = '06') then
					if (coalesce(ie_forma_trib_per_w::text, '') = '') then
						ie_forma_trib_per_w := lpad(ie_forma_trib_per_aux_w,2,'0');
					else
						ie_forma_trib_per_w := ie_forma_trib_per_w || ie_forma_trib_per_aux_w;
					end if;
				end if;
			end if;

			if (length(ie_forma_trib_per_w) <= 2) or (coalesce(ie_forma_trib_per_w::text, '') = '') then
				if (to_char(vet01.dt_mes_apuracao, 'MM')  = '07') or (to_char(vet01.dt_mes_apuracao, 'MM')  = '08') or (to_char(vet01.dt_mes_apuracao, 'MM')  = '09') then
					if (coalesce(ie_forma_trib_per_w::text, '') = '') then
						ie_forma_trib_per_w := lpad(ie_forma_trib_per_aux_w,3,'0');
					else
						if length(ie_forma_trib_per_w) = 1 then
							ie_forma_trib_per_w := ie_forma_trib_per_w || lpad(ie_forma_trib_per_aux_w,2,'0');
						else
							ie_forma_trib_per_w := ie_forma_trib_per_w || ie_forma_trib_per_aux_w;
						end if;
					end if;
				end if;
			end if;

			if (length(ie_forma_trib_per_w) <= 3) or (coalesce(ie_forma_trib_per_w::text, '') = '') then
				if (to_char(vet01.dt_mes_apuracao, 'MM')  = '10') or (to_char(vet01.dt_mes_apuracao, 'MM')  = '11') or (to_char(vet01.dt_mes_apuracao, 'MM')  = '12') then
					if (coalesce(ie_forma_trib_per_w::text, '') = '') then
						ie_forma_trib_per_w := lpad(ie_forma_trib_per_aux_w,4,'0');
					else
						if length(ie_forma_trib_per_w) = 1 then
							ie_forma_trib_per_w := ie_forma_trib_per_w || lpad(ie_forma_trib_per_aux_w,3,'0');
						else
							if length(ie_forma_trib_per_w) = 2 then
								ie_forma_trib_per_w := ie_forma_trib_per_w || lpad(ie_forma_trib_per_aux_w,2,'0');
							else
								ie_forma_trib_per_w := ie_forma_trib_per_w || ie_forma_trib_per_aux_w;
							end if;
						end if;
					end if;
				end if;
			end if;

		else

			if (to_char(vet01.dt_mes_apuracao, 'MM')  = '03') then
				ie_forma_trib_per_w := ie_forma_trib_per_aux_w;
			end if;

			if (to_char(vet01.dt_mes_apuracao, 'MM')  = '06') then
				if (coalesce(ie_forma_trib_per_w::text, '') = '') then
					ie_forma_trib_per_w := lpad(ie_forma_trib_per_aux_w,2,'0');
				else
					ie_forma_trib_per_w := ie_forma_trib_per_w || ie_forma_trib_per_aux_w;
				end if;
			end if;

			if (to_char(vet01.dt_mes_apuracao, 'MM')  = '09') then
				if (coalesce(ie_forma_trib_per_w::text, '') = '') then
					ie_forma_trib_per_w := lpad(ie_forma_trib_per_aux_w,3,'0');
				else
					if length(ie_forma_trib_per_w) = 1 then
						ie_forma_trib_per_w := ie_forma_trib_per_w || lpad(ie_forma_trib_per_aux_w,2,'0');
					else
						ie_forma_trib_per_w := ie_forma_trib_per_w || ie_forma_trib_per_aux_w;
					end if;
				end if;
			end if;

			if (to_char(vet01.dt_mes_apuracao, 'MM')  = '12') then
				if (coalesce(ie_forma_trib_per_w::text, '') = '') then
					ie_forma_trib_per_w := lpad(ie_forma_trib_per_aux_w,4,'0');
				else
					if length(ie_forma_trib_per_w) = 1 then
						ie_forma_trib_per_w := ie_forma_trib_per_w || lpad(ie_forma_trib_per_aux_w,3,'0');
					else
						if length(ie_forma_trib_per_w) = 2 then
							ie_forma_trib_per_w := ie_forma_trib_per_w || lpad(ie_forma_trib_per_aux_w,2,'0');
						else
							ie_forma_trib_per_w := ie_forma_trib_per_w || ie_forma_trib_per_aux_w;
						end if;
					end if;
				end if;
			end if;

		end if;
		end;
	end loop;
	close c01;

	ie_forma_trib_per_w := rpad(ie_forma_trib_per_w,4,'0');
end if;

ie_mes_bal_red_w := null;
--9
if (ie_forma_apuracao_per_w  = 'A') and (ie_forma_trib_per_aux_w = 'R') then
	open c01;
	loop
	fetch c01 into
		vet01;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		ie_forma_apuracao_tip_w := vet01.ie_forma_apuracao;
		if ie_forma_apuracao_tip_w = 'R' then
			ie_forma_apuracao_tip_w := 'E';
		end if;
				
		if (to_char(vet01.dt_mes_apuracao, 'MM')  = '01') then
			ie_mes_bal_red_w := ie_forma_apuracao_tip_w;
		end if;

		if (to_char(vet01.dt_mes_apuracao, 'MM')  = '02') then
			if (coalesce(ie_mes_bal_red_w::text, '') = '') then
				ie_mes_bal_red_w := lpad(ie_forma_apuracao_tip_w,2,'0');
			else
				ie_mes_bal_red_w := ie_mes_bal_red_w || ie_forma_apuracao_tip_w;
			end if;
		end if;

		if (to_char(vet01.dt_mes_apuracao, 'MM')  = '03') then
			if (coalesce(ie_mes_bal_red_w::text, '') = '') then
				ie_mes_bal_red_w := lpad(ie_forma_apuracao_tip_w,3,'0');
			else
				ie_mes_bal_red_w := ie_mes_bal_red_w || ie_forma_apuracao_tip_w;
			end if;
		end if;

		if (to_char(vet01.dt_mes_apuracao, 'MM')  = '04') then
			if (coalesce(ie_mes_bal_red_w::text, '') = '') then
				ie_mes_bal_red_w := lpad(ie_forma_apuracao_tip_w,4,'0');
			else
				ie_mes_bal_red_w := ie_mes_bal_red_w || ie_forma_apuracao_tip_w;
			end if;
		end if;

		if (to_char(vet01.dt_mes_apuracao, 'MM')  = '05') then
			if (coalesce(ie_mes_bal_red_w::text, '') = '') then
				ie_mes_bal_red_w := lpad(ie_forma_apuracao_tip_w,5,'0');
			else
				ie_mes_bal_red_w := ie_mes_bal_red_w || ie_forma_apuracao_tip_w;
			end if;
		end if;

		if (to_char(vet01.dt_mes_apuracao, 'MM')  = '06') then
			if (coalesce(ie_mes_bal_red_w::text, '') = '') then
				ie_mes_bal_red_w := lpad(ie_forma_apuracao_tip_w,6,'0');
			else
				ie_mes_bal_red_w := ie_mes_bal_red_w || ie_forma_apuracao_tip_w;
			end if;
		end if;

		if (to_char(vet01.dt_mes_apuracao, 'MM')  = '07') then
			if (coalesce(ie_mes_bal_red_w::text, '') = '') then
				ie_mes_bal_red_w := lpad(ie_forma_apuracao_tip_w,7,'0');
			else
				ie_mes_bal_red_w := ie_mes_bal_red_w || ie_forma_apuracao_tip_w;
			end if;
		end if;

		if (to_char(vet01.dt_mes_apuracao, 'MM')  = '08') then
			if (coalesce(ie_mes_bal_red_w::text, '') = '') then
				ie_mes_bal_red_w := lpad(ie_forma_apuracao_tip_w,8,'0');
			else
				ie_mes_bal_red_w := ie_mes_bal_red_w || ie_forma_apuracao_tip_w;
			end if;
		end if;

		if (to_char(vet01.dt_mes_apuracao, 'MM')  = '09') then
			if (coalesce(ie_mes_bal_red_w::text, '') = '') then
				ie_mes_bal_red_w := lpad(ie_forma_apuracao_tip_w,9,'0');
			else
				ie_mes_bal_red_w := ie_mes_bal_red_w || ie_forma_apuracao_tip_w;
			end if;
		end if;

		if (to_char(vet01.dt_mes_apuracao, 'MM')  = '10') then
			if (coalesce(ie_mes_bal_red_w::text, '') = '') then
				ie_mes_bal_red_w := lpad(ie_forma_apuracao_tip_w,10,'0');
			else
				ie_mes_bal_red_w := ie_mes_bal_red_w || ie_forma_apuracao_tip_w;
			end if;
		end if;

		if (to_char(vet01.dt_mes_apuracao, 'MM')  = '11') then
			if (coalesce(ie_mes_bal_red_w::text, '') = '') then
				ie_mes_bal_red_w := lpad(ie_forma_apuracao_tip_w,11,'0');
			else
				ie_mes_bal_red_w := ie_mes_bal_red_w || ie_forma_apuracao_tip_w;
			end if;
		end if;

		if (to_char(vet01.dt_mes_apuracao, 'MM')  = '12') then
			if (coalesce(ie_mes_bal_red_w::text, '') = '') then
				ie_mes_bal_red_w := lpad(ie_forma_apuracao_tip_w,12,'0');
			else
				ie_mes_bal_red_w := ie_mes_bal_red_w || ie_forma_apuracao_tip_w;
			end if;
		end if;

		end;
	end loop;
	close c01;

	ie_mes_bal_red_w := rpad(ie_mes_bal_red_w,12,'0');
end if;

/*if ie_forma_tributacao_w in (3,4,5,7,8,9) then
	select 	count(*)
	into	nr_count_w
	from 	fis_lote_apuracao 		a,
		fis_estrutura_calculo 	b
	where 	a.nr_seq_estrutura 		= b.nr_sequencia
	and 	b.ie_lalur_lacs 		in ('CS','IR')
	and 	a.dt_geracao		is not null;

	if nr_count_w > 0 then
		ie_tip_esc_pre_w := 'C';
	else
		ie_tip_esc_pre_w := 'L';
	end if;
end if;*/

--11
if ie_forma_tributacao_w not in (8,9) then
	ie_tipo_entidade_w := '';
end if;

if ie_forma_tributacao_w in (8,9) then
	select 	count(*),
		max(b.ie_anual_trimestral)
	into STRICT	nr_count_w,
		ie_anual_trimestral_w
	from 	fis_lote_apuracao	a,
		fis_estrutura_calculo 	b,
		fis_controle_ecf	c
	where 	a.nr_seq_estrutura	= b.nr_sequencia
	and 	b.ie_lalur_lacs 	in ('IR')
	and	(((ie_scp_p = 'S')
		and (coalesce(b.ie_scp, 'N') = 'S')
		and (coalesce(c.ie_scp, 'N') = 'S')
		and (b.cd_estabelecimento_scp 	= c.cd_estabelecimento_scp)
		and (cd_estabelecimento_p		= b.cd_estabelecimento_scp))
	or	((ie_scp_p = 'N') 
		and (coalesce(b.ie_scp, 'N') = 'N')
		and (coalesce(c.ie_scp, 'N') = 'N')
		and (coalesce(b.cd_estabelecimento_scp::text, '') = '')
		and (coalesce(c.cd_estabelecimento_scp::text, '') = '')))
	and 	a.nr_sequencia		= c.nr_seq_lote
	and	b.cd_empresa 		= cd_empresa_p
	and 	(a.dt_geracao IS NOT NULL AND a.dt_geracao::text <> '');
	--12
	if nr_count_w > 0 then
		ie_forma_apur_i_w := ie_anual_trimestral_w;
	else
		ie_forma_apur_i_w := 'D';
	end if;

	select 	count(*),
		max(b.ie_anual_trimestral)
	into STRICT	nr_count_w,
		ie_anual_trimestral_w
	from 	fis_lote_apuracao 	a,
		fis_estrutura_calculo 	b,
		fis_controle_ecf	c
	where 	a.nr_seq_estrutura 	= b.nr_sequencia
	and 	b.ie_lalur_lacs 	in ('CS')
	and	(((ie_scp_p = 'S')
		and (coalesce(b.ie_scp, 'N') = 'S')
		and (coalesce(c.ie_scp, 'N') = 'S')
		and (b.cd_estabelecimento_scp 	= c.cd_estabelecimento_scp)
		and (cd_estabelecimento_p 		= b.cd_estabelecimento_scp))
	or	((ie_scp_p = 'N') 
		and (coalesce(b.ie_scp, 'N') = 'N')
		and (coalesce(c.ie_scp, 'N') = 'N')
		and (coalesce(b.cd_estabelecimento_scp::text, '') = '')
		and (coalesce(c.cd_estabelecimento_scp::text, '') = '')))
	and 	a.nr_sequencia		= c.nr_seq_lote
	and	b.cd_empresa		= cd_empresa_p
	and 	(a.dt_geracao IS NOT NULL AND a.dt_geracao::text <> '');
	--13
	if nr_count_w > 0 then
		ie_apur_csll_w := ie_anual_trimestral_w;
	else
		ie_apur_csll_w := 'D';
	end if;
end if;

if  to_char(dt_fim_apuracao_w, 'yyyy') = '2014' then
	--14
	if ie_forma_tributacao_w in (5,6,7,8,9) or (ie_forma_apuracao_per_w = 'T') then
		ie_opt_ext_rtt_w := '';
		ie_dif_fcont_w := '';
	end if;
	--15
	if (ie_opt_ext_rtt_w = 'N') then
		ie_dif_fcont_w := '';
	end if;
end if;

if ie_forma_tributacao_w not in (3,4,5,7) then
	ind_rec_receita_w := '';
end if;

if to_char(dt_fim_apuracao_w, 'yyyy') < '2016' then
	ie_opt_ext_rtt_w := sep_w || ie_opt_ext_rtt_w	||      -- Optante pela extino do RTT no ano-calendrio de 2014 (14)
			                sep_w || ie_dif_fcont_w;          -- Existe diferenas entre a contabilidade societria e Fcont (15)
else	
	ie_opt_ext_rtt_w := sep_w || ind_rec_receita_w;       -- Critrio de reconhecimento de receitas para empresas tributadas pelo Lucro Presumido (14)
end if;	

if to_char(dt_fim_apuracao_w, 'yyyy') >= '2020' then
  ie_opt_paes_w := '';
else
  ie_opt_paes_w := sep_w || ie_opt_paes_w;
end if;

ds_linha_w := substr( sep_w ||  tp_registro_w	 		          || -- Registro (1)
                      sep_w ||  ''				                  || -- Hashcode da ECF do Perodo Imediatamente Anterior a Ser Recuperado (2)
                      sep_w ||  ie_opt_refis_w			        || -- Indicador de Optante pelo Refis (3)
                                ie_opt_paes_w			          || -- Indicador de Optante pelo Paes (4)
                      sep_w ||  ie_forma_tributacao_w		    || -- Forma de Tributao (5)
                      sep_w ||  ie_forma_apuracao_w		      || -- Indicador do Perodo de Apurao do IRPJ e da CSLL (6)
                      sep_w ||  ie_cod_qualif_pj_w		      || -- Qualificao da Pessoa Jurdica (7)
                      sep_w ||  ie_forma_trib_per_w		      || -- Forma de Tributao no Perodo (8)
                      sep_w ||  ie_mes_bal_red_w		        || -- Forma de Apurao da Estimativa Mensal (9)
                      sep_w ||  ie_tip_esc_pre_w		        || -- Escriturao (10)
                      sep_w ||  ie_tipo_entidade_w		      || -- Tipo de Pessoa Jurdica Imune ou Isenta (11)
                      sep_w ||  ie_forma_apur_i_w 		      || -- Apurao do IRPJ para Imunes ou Isentas (12)
                      sep_w ||  ie_apur_csll_w			        ||  -- Apurao da CSLL para Imunes ou Isentas (13)
                                ie_opt_ext_rtt_w		        ||
                      sep_w,1,8000);

ds_arquivo_w		:= substr(ds_linha_w,1,4000);
ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
nr_seq_registro_w	:= nr_seq_registro_w + 1;
nr_linha_w		:= nr_linha_w + 1;

insert into fis_ecf_arquivo(
	nr_sequencia,
	nm_usuario,
	dt_atualizacao,
	nm_usuario_nrec,
	dt_atualizacao_nrec,
	nr_seq_controle_ecf,
	nr_linha,
	cd_registro,
	ds_arquivo,
	ds_arquivo_compl)
values (	nr_seq_registro_w,
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nr_seq_controle_p,
	nr_linha_w,
	tp_registro_w,
	ds_arquivo_w,
	ds_arquivo_compl_w);

commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_reg_ecf_0010 ( nr_seq_controle_p text, ds_separador_p text, cd_estabelecimento_p text, nm_usuario_p text, cd_empresa_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint, ie_scp_p text) FROM PUBLIC;

