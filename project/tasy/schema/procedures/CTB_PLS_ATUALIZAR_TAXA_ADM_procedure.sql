-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_atualizar_taxa_adm ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_pos_taxa_contab_p pls_conta_pos_taxa_contab.nr_sequencia%type, nr_seq_atualizacao_p pls_movimento_contabil.nr_seq_atualizacao%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, qt_movimento_p INOUT integer) AS $body$
DECLARE

					
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
-------------------------------------------------------------------------------------------------------------------

Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_conta_credito_w		conta_contabil.cd_conta_contabil%type;
cd_conta_debito_w		conta_contabil.cd_conta_contabil%type;
ie_preco_w			pls_plano.ie_preco%type;
ie_tipo_segurado_w		pls_segurado.ie_tipo_segurado%type;
ie_regulamentacao_w		pls_plano.ie_regulamentacao%type;
ie_tipo_contratacao_w		pls_plano.ie_tipo_contratacao%type;
ie_segmentacao_w		pls_plano.ie_segmentacao%type;
nr_seq_plano_w			pls_plano.nr_sequencia%type;
nr_seq_esquema_w		pls_esquema_contabil.nr_sequencia%type;
nr_seq_esquema_ww		pls_esquema_contabil.nr_sequencia%type;
cd_historico_padrao_w		pls_esquema_contabil.cd_historico_padrao%type;
cd_historico_padrao_ww		pls_esquema_contabil.cd_historico_padrao%type;
cd_historico_rev_fat_w		pls_esquema_contabil.cd_historico_rev_fat%type;
ie_tipo_diferenca_w		pls_esquema_contabil.ie_tipo_diferenca%type;
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
nr_seq_conta_pos_contab_w	pls_conta_pos_estabelecido.nr_sequencia%type;
nr_seq_grupo_ans_w		ans_grupo_despesa.nr_sequencia%type;
ie_tipo_grupo_ans_w		ans_grupo_despesa.ie_tipo_grupo_ans%type;
nr_seq_grupo_superior_w		ans_grupo_despesa.nr_seq_grupo_superior%type;
ie_tipo_relacao_w		pls_prestador.ie_tipo_relacao%type;
ie_tipo_relacao_ww		pls_prestador.ie_tipo_relacao%type;
ie_tipo_relacao_atend_w		pls_prestador.ie_tipo_relacao%type;
ie_tipo_relacao_exec_w		pls_prestador.ie_tipo_relacao%type;
ie_tipo_relacao_solic_w		pls_prestador.ie_tipo_relacao%type;
nr_seq_tipo_atendimento_w	pls_conta.nr_seq_tipo_atendimento%type;
cd_medico_executor_w		pls_conta.cd_medico_executor%type;
ie_regime_internacao_w		pls_conta.ie_regime_internacao%type;
nr_seq_conselho_w		pessoa_fisica.nr_seq_conselho%type;
ie_tipo_guia_w			pls_conta.ie_tipo_guia%type;
ie_ato_cooperado_w		pls_conta_proc.ie_ato_cooperado%type;
ie_codificacao_w		pls_esquema_contabil_seg.ie_codificacao%type;
vl_fixo_w			pls_esquema_contabil_seg.vl_fixo%type;
cd_conta_contabil_w		pls_esquema_contabil_seg.cd_conta_contabil%type;
ie_debito_credito_w		pls_esquema_contabil_seg.ie_debito_credito%type;
ie_tipo_outorgante_w		pls_outorgante.ie_tipo_outorgante%type;
ie_tipo_operacao_w		pls_plano.ie_tipo_operacao%type;
ds_mascara_w			pls_esquema_contabil_seg.ds_mascara%type;
ie_tipo_vinculo_operadora_w	pls_segurado.ie_tipo_vinculo_operadora%type;
nr_seq_intercambio_w		pls_intercambio.nr_sequencia%type;
nr_seq_classificacao_sca_w	pls_plano.nr_seq_classificacao%type;
ie_opcao_conta_w		valor_dominio.vl_dominio%type;
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;
nr_seq_prestador_ww		pls_prestador.nr_sequencia%type;
nr_seq_prestador_atend_w	pls_protocolo_conta.nr_seq_prestador%type;
nr_seq_prestador_exec_w		pls_conta.nr_seq_prestador_exec%type;
nr_seq_prestador_solic_w	pls_conta.nr_seq_prestador%type;
nr_seq_prestador_pgto_w		pls_prestador.nr_sequencia%type;
nr_seq_tipo_prestador_w		pls_prestador.nr_seq_tipo_prestador%type;
nr_seq_tipo_prestador_ww	pls_prestador.nr_seq_tipo_prestador%type;
nr_seq_tipo_prestador_atend_w	pls_prestador.nr_seq_tipo_prestador%type;
nr_seq_tipo_prestador_exec_w	pls_prestador.nr_seq_tipo_prestador%type;
nr_seq_tipo_prestador_solic_w	pls_prestador.nr_seq_tipo_prestador%type;
ie_tipo_prestador_w		pls_tipo_prestador.ie_tipo_ptu%type;
ie_tipo_prestador_ww		pls_tipo_prestador.ie_tipo_ptu%type;
ie_tipo_prestador_atend_w	pls_tipo_prestador.ie_tipo_ptu%type;
ie_tipo_prestador_exec_w	pls_tipo_prestador.ie_tipo_ptu%type;
ie_tipo_prestador_solic_w	pls_tipo_prestador.ie_tipo_ptu%type;
ie_prestador_codificacao_w	pls_esquema_contabil.ie_prestador_codificacao%type;		
cd_classificacao_credito_w	varchar(255);
cd_classificacao_debito_w	varchar(255);
cd_classificacao_item_w		varchar(30);
ie_classif_grupo_w		varchar(5);
ie_classif_grupo_ww		varchar(5);
ie_tipo_contrato_w		varchar(2);
ie_proc_mat_w			varchar(1);
qt_movimento_w			bigint;
dt_referencia_w			timestamp;
dt_mesano_ref_w			pls_lote_faturamento.dt_mesano_referencia%type;
nr_id_w				oid;
ie_status_w			pls_conta_proc.ie_status%type;
qt_registros_w			pls_ajuste_fatura_conta.nr_sequencia%type;
nr_seq_mat_w			pls_conta_mat.nr_sequencia%type;
nr_seq_proc_w			pls_conta_proc.nr_sequencia%type;
vl_diferenca_w			pls_conta_pos_estab_contab.vl_provisao%type;
ie_tipo_protocolo_w		pls_protocolo_conta.ie_tipo_protocolo%type;
ie_tipo_repasse_w		pls_esquema_contabil.ie_tipo_repasse%type;
ie_tipo_compartilhamento_w	pls_esquema_contabil.ie_tipo_compartilhamento%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
ie_benef_remido_w		pls_esquema_contabil.ie_benef_remido%type;
nr_seq_congenere_w		pls_protocolo_conta.nr_seq_congenere%type;
nr_seq_pos_estab_taxa_w		pls_conta_pos_estab_taxa.nr_sequencia%type;
nr_seq_pos_taxa_contab_w	pls_conta_pos_taxa_contab.nr_sequencia%type;
nr_seq_conta_pos_estab_w	pls_conta_pos_estabelecido.nr_sequencia%type;
dt_ref_repasse_w		timestamp;
dt_repasse_w			timestamp;
dt_fim_repasse_w		timestamp;
nr_seq_resumo_w			pls_conta_medica_resumo.nr_sequencia%type;
ie_no_data_found_w		varchar(1);
ie_data_tipo_segurado_w		pls_parametros.ie_data_tipo_segurado%type;

c_pos_estab CURSOR FOR
	SELECT	'R',
		e.ie_tipo_contratacao,
		e.ie_preco,
		e.ie_segmentacao,
		e.ie_regulamentacao,
		coalesce(c.ie_tipo_segurado,d.ie_tipo_segurado) ie_tipo_segurado,
		f.dt_mes_competencia,
		CASE WHEN ie_data_tipo_segurado_w='P' THEN  f.dt_mes_competencia  ELSE (coalesce((	SELECT	p.dt_procedimento											from    pls_conta_proc p											where   p.nr_sequencia	= g.nr_seq_conta_proc											
union
											select  m.dt_atendimento											from    pls_conta_mat m											where   m.nr_sequencia	= g.nr_seq_conta_mat), f.dt_mes_competencia)) END  dt_ref_repasse,
		d.nr_seq_contrato,
		c.nr_sequencia nr_seq_conta,
		e.ie_tipo_operacao,
		e.nr_sequencia nr_seq_plano_seg,
		(select	p.ie_ato_cooperado
		from	pls_conta_proc p
		where	g.nr_seq_conta_proc	= p.nr_sequencia
		
union

		select	m.ie_ato_cooperado
		from	pls_conta_mat m
		where	g.nr_seq_conta_mat	= m.nr_sequencia) ie_ato_cooperado,
		c.ie_tipo_guia,
		c.nr_seq_tipo_atendimento,
		c.cd_medico_executor,
		c.ie_regime_internacao,
		d.ie_tipo_vinculo_operadora,
		d.nr_seq_intercambio,
		e.nr_seq_classificacao,
		CASE WHEN ie_prestador_codificacao_w='E' THEN c.nr_seq_prestador_exec WHEN ie_prestador_codificacao_w='S' THEN c.nr_seq_prestador  ELSE f.nr_seq_prestador END  nr_seq_prestador,
		(select	p.nr_seq_grupo_ans
		from	pls_conta_proc p
		where	g.nr_seq_conta_proc	= p.nr_sequencia
		
union

		select	m.nr_seq_grupo_ans
		from	pls_conta_mat m
		where	g.nr_seq_conta_mat	= m.nr_sequencia) nr_seq_grupo_ans,
		x.oid nr_id,
		null ie_status,
		null nr_seq_conta_proc,
		null nr_seq_conta_mat,
		f.ie_tipo_protocolo,
		d.nr_sequencia nr_seq_segurado,
		pls_obter_se_benef_remido(d.nr_sequencia,f.dt_mes_competencia) ie_benef_remido,
		f.nr_seq_congenere,
		x.nr_seq_pos_estab_taxa,
		x.nr_sequencia nr_seq_estab_taxa_contab,
		g.nr_sequencia nr_seq_conta_pos_estab,
		x.nr_seq_conta_resumo nr_seq_resumo
	from	pls_conta			c,
		pls_segurado			d,
		pls_plano			e,
		pls_protocolo_conta		f,
		pls_conta_pos_estabelecido	g,
		pls_conta_pos_estab_taxa	t,
		pls_conta_pos_taxa_contab	x
	where	c.nr_sequencia	= g.nr_seq_conta
	and	d.nr_sequencia	= c.nr_seq_segurado
	and	e.nr_sequencia	= c.nr_seq_plano
	and	f.nr_sequencia	= c.nr_seq_protocolo
	and	g.nr_sequencia	= t.nr_seq_conta_pos_estab
	and	t.nr_sequencia	= x.nr_seq_pos_estab_taxa
	and	c.nr_sequencia	= nr_seq_conta_p
	and	((x.nr_sequencia = nr_seq_pos_taxa_contab_p) or (coalesce(nr_seq_pos_taxa_contab_p::text, '') = ''))
	and	coalesce(g.ie_situacao,'A')	= 'A'
	and     coalesce(g.ie_status_faturamento, 'A') <> 'A'
	and	f.ie_tipo_protocolo	= 'C'
	
union all

	select	'P',
		e.ie_tipo_contratacao,
		e.ie_preco,
		e.ie_segmentacao,
		e.ie_regulamentacao,
		coalesce(c.ie_tipo_segurado,d.ie_tipo_segurado) ie_tipo_segurado,
		f.dt_mes_competencia,
		CASE WHEN ie_data_tipo_segurado_w='A' THEN  coalesce(b.dt_procedimento, f.dt_mes_competencia)  ELSE f.dt_mes_competencia END  dt_ref_repasse,
		d.nr_seq_contrato,
		c.nr_sequencia nr_seq_conta,
		e.ie_tipo_operacao,
		e.nr_sequencia nr_seq_plano_seg,
		b.ie_ato_cooperado,
		c.ie_tipo_guia,
		c.nr_seq_tipo_atendimento,
		c.cd_medico_executor,
		c.ie_regime_internacao,
		d.ie_tipo_vinculo_operadora,
		d.nr_seq_intercambio,
		e.nr_seq_classificacao,
		CASE WHEN ie_prestador_codificacao_w='S' THEN c.nr_seq_prestador WHEN ie_prestador_codificacao_w='A' THEN f.nr_seq_prestador  ELSE c.nr_seq_prestador_exec END  nr_seq_prestador,
		b.nr_seq_grupo_ans,
		x.oid nr_id,
		b.ie_status,
		b.nr_sequencia nr_seq_proc,
		null,
		f.ie_tipo_protocolo,
		d.nr_sequencia nr_seq_segurado,
		pls_obter_se_benef_remido(d.nr_sequencia,f.dt_mes_competencia) ie_benef_remido,
		f.nr_seq_congenere,
		x.nr_seq_pos_estab_taxa,
		x.nr_sequencia nr_seq_estab_taxa_contab,
		g.nr_sequencia nr_seq_conta_pos_estab,
		x.nr_seq_conta_resumo nr_seq_resumo
	from	pls_conta_proc			b,
		pls_conta			c,
		pls_segurado			d,
		pls_plano			e,
		pls_protocolo_conta		f,
		pls_conta_pos_estabelecido	g,
		pls_conta_pos_estab_taxa	t,
		pls_conta_pos_taxa_contab	x	
	where	c.nr_sequencia	= g.nr_seq_conta
	and	b.nr_sequencia	= g.nr_seq_conta_proc
	and	c.nr_sequencia	= b.nr_seq_conta
	and	d.nr_sequencia	= c.nr_seq_segurado
	and	e.nr_sequencia	= c.nr_seq_plano
	and	f.nr_sequencia	= c.nr_seq_protocolo
	and	g.nr_sequencia	= t.nr_seq_conta_pos_estab
	and	t.nr_sequencia	= x.nr_seq_pos_estab_taxa
	and	c.nr_sequencia	= nr_seq_conta_p
	and	((x.nr_sequencia = nr_seq_pos_taxa_contab_p) or (coalesce(nr_seq_pos_taxa_contab_p::text, '') = ''))
	and	coalesce(g.ie_situacao,'A')	= 'A'
	and     coalesce(g.ie_status_faturamento, 'A') <> 'A'
	and (f.ie_tipo_protocolo	= 'I'
	or	b.ie_status = 'M')
	
union all

	select	'M',
		e.ie_tipo_contratacao,
		e.ie_preco,
		e.ie_segmentacao,
		e.ie_regulamentacao,
		coalesce(c.ie_tipo_segurado,d.ie_tipo_segurado) ie_tipo_segurado,
		f.dt_mes_competencia,
		CASE WHEN ie_data_tipo_segurado_w='A' THEN  coalesce(b.dt_atendimento, f.dt_mes_competencia)  ELSE f.dt_mes_competencia END  dt_ref_repasse,
		d.nr_seq_contrato,
		c.nr_sequencia nr_seq_conta,
		e.ie_tipo_operacao,
		e.nr_sequencia nr_seq_plano_seg,
		b.ie_ato_cooperado,
		c.ie_tipo_guia,
		c.nr_seq_tipo_atendimento,
		c.cd_medico_executor,
		c.ie_regime_internacao,
		d.ie_tipo_vinculo_operadora,
		d.nr_seq_intercambio,
		e.nr_seq_classificacao,
		CASE WHEN ie_prestador_codificacao_w='S' THEN c.nr_seq_prestador WHEN ie_prestador_codificacao_w='A' THEN f.nr_seq_prestador  ELSE c.nr_seq_prestador_exec END  nr_seq_prestador,
		b.nr_seq_grupo_ans,
		x.oid nr_id,
		b.ie_status,
		null,
		b.nr_sequencia	nr_seq_mat,
		f.ie_tipo_protocolo,
		d.nr_sequencia nr_seq_segurado,
		pls_obter_se_benef_remido(d.nr_sequencia,f.dt_mes_competencia) ie_benef_remido,
		f.nr_seq_congenere,
		x.nr_seq_pos_estab_taxa,
		x.nr_sequencia nr_seq_estab_taxa_contab,
		g.nr_sequencia nr_seq_conta_pos_estab,
		x.nr_seq_conta_resumo nr_seq_resumo
	from	pls_conta_mat			b,
		pls_conta			c,
		pls_segurado			d,
		pls_plano			e,
		pls_protocolo_conta		f,
		pls_conta_pos_estabelecido	g,
		pls_conta_pos_estab_taxa	t,
		pls_conta_pos_taxa_contab	x		
	where	c.nr_sequencia	= g.nr_seq_conta
	and	b.nr_sequencia	= g.nr_seq_conta_mat
	and	c.nr_sequencia	= b.nr_seq_conta
	and	d.nr_sequencia	= c.nr_seq_segurado
	and	e.nr_sequencia	= c.nr_seq_plano
	and	f.nr_sequencia	= c.nr_seq_protocolo
	and	g.nr_sequencia	= t.nr_seq_conta_pos_estab
	and	t.nr_sequencia	= x.nr_seq_pos_estab_taxa
	and	c.nr_sequencia	= nr_seq_conta_p
	and	((x.nr_sequencia = nr_seq_pos_taxa_contab_p) or (coalesce(nr_seq_pos_taxa_contab_p::text, '') = ''))
	and	coalesce(g.ie_situacao,'A')	= 'A'
	and     coalesce(g.ie_status_faturamento, 'A') <> 'A'
	and (f.ie_tipo_protocolo	= 'I'
	or	b.ie_status = 'M');

c_esquema CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_historico_padrao,
		a.cd_historico_rev_fat,
		a.ie_prestador_codificacao,
		a.nr_seq_prestador,
		a.ie_tipo_relacao,
		a.ie_tipo_ptu,
		a.nr_seq_tipo_prestador
	from	pls_esquema_contabil	a
	where	a.ie_tipo_regra		= 'PF'
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	dt_referencia_w between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,dt_referencia_w)
	and	((exists (SELECT	1
				from	pls_grupo_seg_item	l,
					pls_grupo_segmentacao	k
				where	l.nr_seq_grupo		= k.nr_sequencia
				and	k.nr_sequencia		= a.nr_seq_grupo_segmentacao
				and	l.ie_segmentacao	= ie_segmentacao_w)) or (coalesce(a.nr_seq_grupo_segmentacao::text, '') = ''))
	and	((a.nr_seq_plano = nr_seq_plano_w) or (coalesce(a.nr_seq_plano::text, '') = ''))
	and	((a.ie_tipo_outorgante = ie_tipo_outorgante_w) or (coalesce(a.ie_tipo_outorgante::text, '') = ''))
	and	((a.ie_tipo_segurado = ie_tipo_segurado_w) or (coalesce(a.ie_tipo_segurado::text, '') = ''))
	and	((ie_tipo_repasse = ie_tipo_repasse_w) or (coalesce(ie_tipo_repasse::text, '') = ''))
	and	((ie_tipo_compartilhamento = ie_tipo_compartilhamento_w) or (coalesce(ie_tipo_compartilhamento::text, '') = ''))
	and	((a.ie_tipo_plano = ie_tipo_operacao_w) or (coalesce(a.ie_tipo_plano::text, '') = ''))
	and	((a.ie_tipo_vinculo_operadora = ie_tipo_vinculo_operadora_w) or (coalesce(a.ie_tipo_vinculo_operadora::text, '') = ''))
	and	((a.nr_seq_contrato = nr_seq_contrato_w) or (coalesce(a.nr_seq_contrato::text, '') = ''))
	and	((a.nr_seq_intercambio = nr_seq_intercambio_w) or (coalesce(a.nr_seq_intercambio::text, '') = ''))
	and	((a.ie_tipo_contratacao = ie_tipo_contratacao_w) or (coalesce(a.ie_tipo_contratacao::text, '') = ''))
	and	((a.nr_seq_classif_sca = nr_seq_classificacao_sca_w) or (coalesce(a.nr_seq_classif_sca::text, '') = ''))
	and	((a.ie_tipo_valor = 'VTA') or (coalesce(a.ie_tipo_valor::text, '') = ''))
	and	((a.ie_tipo_relacao = ie_tipo_relacao_w) or (coalesce(a.ie_tipo_relacao::text, '') = ''))
	and	((a.ie_tipo_diferenca = ie_tipo_diferenca_w) or (coalesce(a.ie_tipo_diferenca::text, '') = ''))
	and	((a.ie_tipo_protocolo = ie_tipo_protocolo_w) or (coalesce(a.ie_tipo_protocolo::text, '') = ''))
	and	((coalesce(a.ie_origem_pos_estab,'A') = 'A')
	or	((coalesce(a.ie_origem_pos_estab,'A') = 'N') and (coalesce(ie_status_w,'X') not in ('M','R')))
	or	((coalesce(a.ie_origem_pos_estab,'A') = 'R') and (coalesce(ie_status_w,'X') = 'R'))
	or	((coalesce(a.ie_origem_pos_estab,'A') = 'M') and (coalesce(ie_status_w,'X') = 'M')))
	and	((a.ie_benef_remido = ie_benef_remido_w) or (coalesce(a.ie_benef_remido::text, '') = ''))
	order by
		coalesce(ie_tipo_compartilhamento,0),
		coalesce(ie_tipo_repasse,' '),
		coalesce(a.ie_tipo_segurado,' '),
		coalesce(a.nr_seq_contrato,0),
		coalesce(a.nr_seq_intercambio,0),
		coalesce(a.ie_tipo_plano,' '),
		coalesce(a.nr_seq_classif_sca,0),
		coalesce(a.nr_seq_plano,0),
		coalesce(a.ie_tipo_vinculo_operadora,0),
		coalesce(a.ie_tipo_outorgante,' '),
		coalesce(a.ie_origem_pos_estab,' '),
		coalesce(a.ie_tipo_diferenca,' '),
		coalesce(a.ie_tipo_relacao, ' '),
		coalesce(a.ie_benef_remido,' '),
		coalesce(a.nr_seq_grupo_segmentacao,0),
		coalesce(a.ie_tipo_contratacao,' '),
		coalesce(a.ie_tipo_valor,' '),
		coalesce(a.ie_tipo_protocolo,' '),
		coalesce(a.dt_inicio_vigencia,clock_timestamp());

c_segmentacao CURSOR FOR
	SELECT	ie_codificacao,
		vl_fixo,
		cd_conta_contabil,
		ie_debito_credito,
		ds_mascara
	from	pls_esquema_contabil_seg
	where	nr_seq_regra_esquema	= nr_seq_esquema_w
	order by
		ie_debito_credito,
		nr_seq_apresentacao;


BEGIN
CALL wheb_usuario_pck.set_ie_atualizacao_contabil('S');

qt_movimento_w	:= qt_movimento_p;

select	max(ie_tipo_outorgante)
into STRICT	ie_tipo_outorgante_w
from	pls_outorgante
where	cd_estabelecimento	= cd_estabelecimento_p;

select	max(a.dt_mes_competencia)
into STRICT	dt_mesano_ref_w
from	pls_protocolo_conta		a,
	pls_conta			b,
	pls_conta_pos_estabelecido	e,
	pls_conta_pos_estab_taxa	t,
	pls_conta_pos_taxa_contab	c
where	a.nr_sequencia		= b.nr_seq_protocolo
and	b.nr_sequencia		= e.nr_seq_conta
and	e.nr_sequencia		= t.nr_seq_conta_pos_estab
and	t.nr_sequencia		= c.nr_seq_pos_estab_taxa
and	c.nr_sequencia		= nr_seq_pos_taxa_contab_p;
	
select	max(a.ie_prestador_codificacao)
into STRICT	ie_prestador_codificacao_w
from	pls_esquema_contabil	a
where	a.ie_tipo_regra		= 'PF'
and	a.cd_estabelecimento	= cd_estabelecimento_p
and	dt_mesano_ref_w between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,dt_mesano_ref_w);

open c_pos_estab;
loop
fetch c_pos_estab into	
	ie_proc_mat_w,
	ie_tipo_contratacao_w,
	ie_preco_w,
	ie_segmentacao_w,
	ie_regulamentacao_w,
	ie_tipo_segurado_w,
	dt_referencia_w,
	dt_ref_repasse_w,
	nr_seq_contrato_w,
	nr_seq_conta_w,
	ie_tipo_operacao_w,
	nr_seq_plano_w,
	ie_ato_cooperado_w,
	ie_tipo_guia_w,
	nr_seq_tipo_atendimento_w,
	cd_medico_executor_w,
	ie_regime_internacao_w,
	ie_tipo_vinculo_operadora_w,
	nr_seq_intercambio_w,
	nr_seq_classificacao_sca_w,
	nr_seq_prestador_w,
	nr_seq_grupo_ans_w,
	nr_id_w,
	ie_status_w,
	nr_seq_proc_w,
	nr_seq_mat_w,
	ie_tipo_protocolo_w,
	nr_seq_segurado_w,
	ie_benef_remido_w,
	nr_seq_congenere_w,
	nr_seq_pos_estab_taxa_w,
	nr_seq_pos_taxa_contab_w,
	nr_seq_conta_pos_estab_w,
	nr_seq_resumo_w;
EXIT WHEN NOT FOUND; /* apply on c_pos_estab */
	begin
	ie_no_data_found_w := 'N';

	if (ie_proc_mat_w = 'R') then
		begin
			select	max(a.nr_sequencia),
				coalesce(b.ie_ato_cooperado, ie_ato_cooperado_w) ie_ato_cooperado,
				coalesce(b.nr_seq_grupo_ans, nr_seq_grupo_ans_w) nr_seq_grupo_ans,
				b.nr_seq_conta_proc,
				b.nr_seq_conta_mat,
				CASE WHEN ie_prestador_codificacao_w='P' THEN b.nr_seq_prestador_pgto  ELSE nr_seq_prestador_w END  nr_seq_prestador,
				(pls_obter_vl_pag_fat_pos(max(a.nr_sequencia),'T'))::numeric  vl_diferenca
			into STRICT	nr_seq_conta_pos_contab_w,
				ie_ato_cooperado_w,
				nr_seq_grupo_ans_w,
				nr_seq_proc_w,
				nr_seq_mat_w,
				nr_seq_prestador_w,
				vl_diferenca_w
			from	pls_conta_pos_estab_contab	a,
				pls_conta_medica_resumo		b
			where	a.nr_seq_conta_pos	= nr_seq_conta_pos_estab_w
			and	b.nr_sequencia		= a.nr_seq_conta_resumo
			and	b.nr_seq_conta		= nr_seq_conta_w
			and	b.nr_sequencia  	= nr_seq_resumo_w
			group by 	coalesce(b.ie_ato_cooperado, ie_ato_cooperado_w),
					coalesce(b.nr_seq_grupo_ans, nr_seq_grupo_ans_w),
					b.nr_seq_conta_proc,
					b.nr_seq_conta_mat,
					b.nr_seq_prestador_pgto,
					nr_seq_prestador_w;
		exception when no_data_found then
			ie_no_data_found_w := 'S';
		end;
	
	else
		begin
		select	(pls_obter_vl_pag_fat_pos(a.nr_sequencia,'T'))::numeric  vl_diferenca
		into STRICT	vl_diferenca_w
		from	pls_conta_pos_estab_contab	a
		where	a.nr_seq_conta_pos	= nr_seq_conta_pos_estab_w;
		exception when no_data_found then
			ie_no_data_found_w := 'S';
		end;
	end if;
	
	if (ie_no_data_found_w = 'N') then
		SELECT * FROM pls_obter_dados_repasse(	dt_ref_repasse_w, nr_seq_segurado_w, nr_seq_congenere_w, ie_tipo_repasse_w, ie_tipo_compartilhamento_w, dt_repasse_w, dt_fim_repasse_w) INTO STRICT ie_tipo_repasse_w, ie_tipo_compartilhamento_w, dt_repasse_w, dt_fim_repasse_w;
		
		if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then
			select	ie_tipo_relacao,
				nr_seq_tipo_prestador
			into STRICT	ie_tipo_relacao_w,
				nr_seq_tipo_prestador_w
			from	pls_prestador
			where	nr_sequencia	= nr_seq_prestador_w  LIMIT 1;
			
			if (nr_seq_tipo_prestador_w IS NOT NULL AND nr_seq_tipo_prestador_w::text <> '') then
				select	ie_tipo_ptu
				into STRICT	ie_tipo_prestador_w
				from	pls_tipo_prestador
				where	nr_sequencia	= nr_seq_tipo_prestador_w  LIMIT 1;
			end if;
		end if;
		
		if (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
			begin
			select	CASE WHEN coalesce(cd_cgc::text, '') = '' THEN 'PF'  ELSE 'PJ' END
			into STRICT	ie_tipo_contrato_w
			from	pls_intercambio
			where	nr_sequencia	= nr_seq_intercambio_w;
			exception
			when others then
				ie_tipo_contrato_w	:= null;
			end;
		else
			begin
			select	CASE WHEN coalesce(cd_cgc_estipulante::text, '') = '' THEN 'PF'  ELSE 'PJ' END
			into STRICT	ie_tipo_contrato_w
			from	pls_contrato
			where	nr_sequencia	= nr_seq_contrato_w;
			exception
			when others then
				ie_tipo_contrato_w	:= null;
			end;
		end if;
		
		if (coalesce(nr_seq_grupo_ans_w,0) > 0) then
			select	max(nr_seq_grupo_superior)
			into STRICT	nr_seq_grupo_superior_w
			from	ans_grupo_despesa
			where	nr_sequencia	= nr_seq_grupo_ans_w;
		end if;
		
		if (coalesce(nr_seq_grupo_superior_w,0) = 0) then
			select	max(ie_tipo_grupo_ans)
			into STRICT	ie_tipo_grupo_ans_w
			from	ans_grupo_despesa
			where	nr_sequencia	= nr_seq_grupo_ans_w;
		else
			select	max(ie_tipo_grupo_ans)
			into STRICT	ie_tipo_grupo_ans_w
			from	ans_grupo_despesa
			where	nr_sequencia	= nr_seq_grupo_superior_w;
		end if;
		
		if (vl_diferenca_w > 0) then
			ie_tipo_diferenca_w	:= '1';
		else
			ie_tipo_diferenca_w	:= '2';
		end if;
		
		if (coalesce(ie_status_w,'X') = 'M') then
			qt_registros_w := 0;
			
			select	sum(x.qt_registros)
			into STRICT	qt_registros_w
			from (SELECT count(*) qt_registros
				from	pls_ajuste_fatura_conta	a,
					pls_conta		b,
					pls_conta_mat		c
				where	a.nr_sequencia	= b.nr_seq_ajuste_fat
				and	b.nr_sequencia 	= c.nr_seq_conta
				and	c.nr_sequencia	= nr_seq_mat_w
				and	c.ie_status = 'M'
				
union all

				SELECT	count(*) qt_registros
				from	pls_ajuste_fatura_conta	a,
					pls_conta		b,
					pls_conta_proc		c
				where	a.nr_sequencia	= b.nr_seq_ajuste_fat
				and	b.nr_sequencia 	= c.nr_seq_conta
				and	c.nr_sequencia	= nr_seq_proc_w
				and	c.ie_status = 'M') x;
		
			if (qt_registros_w > 0) then
				ie_status_w := 'R';	
			end if;
			
		end if;	
		
		cd_classificacao_credito_w	:= null;
		cd_classificacao_debito_w	:= null;
		cd_historico_padrao_w		:= null;
		cd_historico_rev_fat_w		:= null;
		nr_seq_esquema_w		:= null;
		cd_conta_credito_w		:= null;
		cd_conta_debito_w		:= null;
		
		open c_esquema;
		loop
		fetch c_esquema into	
			nr_seq_esquema_ww,
			cd_historico_padrao_ww,
			cd_historico_rev_fat_w,
			ie_prestador_codificacao_w,
			nr_seq_prestador_ww,
			ie_tipo_relacao_ww,
			ie_tipo_prestador_ww,
			nr_seq_tipo_prestador_ww;
		EXIT WHEN NOT FOUND; /* apply on c_esquema */
			begin
			if (coalesce(ie_tipo_relacao_ww,coalesce(ie_tipo_relacao_w,'X')) = coalesce(ie_tipo_relacao_w,'X')) then
				
				nr_seq_esquema_w	:= nr_seq_esquema_ww;
				cd_historico_padrao_w	:= cd_historico_padrao_ww;
			end if;
			end;
		end loop;
		close c_esquema;
		
		if (ie_tipo_grupo_ans_w = 10) then /* 1 - Consultas */
			ie_classif_grupo_w	:= '1';
			ie_classif_grupo_ww	:= '0';
		elsif (ie_tipo_grupo_ans_w = 20) then /* 49 - Exames */
			ie_classif_grupo_w	:= '2';
			ie_classif_grupo_ww	:= '0';
		elsif (ie_tipo_grupo_ans_w = 30) then /* 51 - Terapias */
			ie_classif_grupo_w	:= '3';
			ie_classif_grupo_ww	:= '0';
		elsif (ie_tipo_grupo_ans_w = 41) then /* 7 - Internacao - Honorario medico */
			ie_classif_grupo_w	:= '4';
			ie_classif_grupo_ww	:= '1';
		elsif (ie_tipo_grupo_ans_w = 42) then /* 8 - Internacao - Exames */
			ie_classif_grupo_w	:= '4';
			ie_classif_grupo_ww	:= '2';
		elsif (ie_tipo_grupo_ans_w = 43) then /* 9 - Internacao - Terapias*/
			ie_classif_grupo_w	:= '4';
			ie_classif_grupo_ww	:= '3';
		elsif (ie_tipo_grupo_ans_w = 44) then /* 10 - Internacao - Materiais medicos */
			ie_classif_grupo_w	:= '4';
			ie_classif_grupo_ww	:= '4';
		elsif (ie_tipo_grupo_ans_w = 45) then /* 11 - Internacao - Medicamentos */
			ie_classif_grupo_w	:= '4';
			ie_classif_grupo_ww	:= '5';
		elsif (ie_tipo_grupo_ans_w = 46) then /* 11 - Internacao - Procedimentos com preco fixo */
			ie_classif_grupo_w	:= '4';
			ie_classif_grupo_ww	:= '6';
		elsif (ie_tipo_grupo_ans_w = 49) then /* 12 - Internacao - Outras despesas */
			ie_classif_grupo_w	:= '4';
			ie_classif_grupo_ww	:= '9';
		elsif (ie_tipo_grupo_ans_w = 50) then /* 6 - Outros atendimentos - Ambulatoriais */
			ie_classif_grupo_w	:= '5';
			ie_classif_grupo_ww	:= '0';
		elsif (ie_tipo_grupo_ans_w = 60) then /* 16 - Demais despesas assistenciais */
			ie_classif_grupo_w	:= '6';
			ie_classif_grupo_ww	:= '0';
		end if;
		
		open c_segmentacao;
		loop
		fetch c_segmentacao into	
			ie_codificacao_w,
			vl_fixo_w,
			cd_conta_contabil_w,
			ie_debito_credito_w,
			ds_mascara_w;
		EXIT WHEN NOT FOUND; /* apply on c_segmentacao */
			begin
			cd_classificacao_item_w	:= null;
			
			if (ie_debito_credito_w = 'C') then /* Classificacao CREDITO */
				if (ie_codificacao_w = 'CR') then /* Codigo reduzido */
					select	cd_classificacao_atual
					into STRICT	cd_classificacao_credito_w
					from	conta_contabil
					where	cd_conta_contabil	= cd_conta_contabil_w;
					
					cd_conta_credito_w	:= cd_conta_contabil_w;
				elsif (ie_codificacao_w = 'FX') then /* Fixo */
					cd_classificacao_item_w	:= vl_fixo_w;
				elsif (ie_codificacao_w = 'GA') then /* Grupo ANS */
					if (ie_classif_grupo_w IS NOT NULL AND ie_classif_grupo_w::text <> '') then
						cd_classificacao_item_w	:= ie_classif_grupo_w;
					else
						cd_classificacao_item_w	:= 'GA';
					end if;
				elsif (ie_codificacao_w = 'FP') then /* Formacao de Preco */
					cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_formacao_preco(ie_preco_w);
				elsif (ie_codificacao_w = 'R') then /* Regulamentacao */
					cd_classificacao_item_w 	:= pls_atualizar_codificacao_pck.get_regulamentacao(ie_regulamentacao_w);
				elsif (ie_codificacao_w = 'TC') then /* Tipo de contratacao */
					if (ie_tipo_contratacao_w in ('I','CE','CA')) then
						cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_contratacao(ie_tipo_contratacao_w);
					else
						cd_classificacao_item_w	:= 'TC';
					end if;
				elsif (ie_codificacao_w = 'TP') then /* Tipo de Contrato (Pessoa fisica ou Juridica) */
					if (ie_tipo_contrato_w in ('PF','PJ')) then
						cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_pessoa_contrato(ie_tipo_contrato_w);
					else
						cd_classificacao_item_w	:= 'TP';
					end if;
				elsif (ie_codificacao_w = 'S') then /* Segmentacao */
					cd_classificacao_item_w	:= lpad(ie_segmentacao_w,2,'0');
				elsif (ie_codificacao_w = 'TR') then /* Tipo de relacao com a OPS */
					cd_classificacao_item_w 	:= pls_atualizar_codificacao_pck.get_tipo_relacao(ie_tipo_relacao_w);
				elsif (ie_codificacao_w = 'TA') then /* Tipo de ato cooperado */
					if (ie_ato_cooperado_w in ('1','2','3')) then
						cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_ato_cooperado(ie_ato_cooperado_w);
					else
						cd_classificacao_item_w	:= 'A';
					end if;
				elsif (ie_codificacao_w = 'CG') then /* Complemento grupo ANS */
					if (ie_classif_grupo_ww IS NOT NULL AND ie_classif_grupo_ww::text <> '') then
						cd_classificacao_item_w	:= ie_classif_grupo_ww;
					else
						cd_classificacao_item_w	:= 'CG';
					end if;
				elsif (ie_codificacao_w = 'RC') then /* Tipo de contratacao / Regulamentacao */
					cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_contratacao_regulamentacao(ie_tipo_contratacao_w,ie_regulamentacao_w);			
				end if;
				
				if (cd_classificacao_item_w IS NOT NULL AND cd_classificacao_item_w::text <> '') then
					if (ds_mascara_w = '00') then
						cd_classificacao_item_w	:= lpad(cd_classificacao_item_w,2,'0') || '.';
					elsif (ds_mascara_w = '0.0') then
						cd_classificacao_item_w	:= substr(lpad(cd_classificacao_item_w,2,'0'),1,1) ||'.'||substr(lpad(cd_classificacao_item_w,2,'0'),2,1) || '.';
					elsif (ds_mascara_w = '0_') then
						cd_classificacao_item_w	:= cd_classificacao_item_w;
					else
						cd_classificacao_item_w	:= cd_classificacao_item_w || '.';
					end if;
					
					cd_classificacao_credito_w	:= cd_classificacao_credito_w || cd_classificacao_item_w;
				end if;
			elsif (ie_debito_credito_w = 'D') then /* Classificacao DEBITO */
				if (ie_codificacao_w = 'CR') then /* Codigo reduzido */
					select	cd_classificacao_atual
					into STRICT	cd_classificacao_debito_w
					from	conta_contabil
					where	cd_conta_contabil	= cd_conta_contabil_w;
					
					cd_conta_debito_w	:= cd_conta_contabil_w;
				elsif (ie_codificacao_w = 'FX') then /* Fixo */
					cd_classificacao_item_w	:= vl_fixo_w;
				elsif (ie_codificacao_w = 'GA') then /* Grupo ANS */
					if (ie_classif_grupo_w IS NOT NULL AND ie_classif_grupo_w::text <> '') then
						cd_classificacao_item_w	:= ie_classif_grupo_w;
					else
						cd_classificacao_item_w	:= 'GA';
					end if;
				elsif (ie_codificacao_w = 'FP') then /* Formacao de Preco */
					cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_formacao_preco(ie_preco_w);
				elsif (ie_codificacao_w = 'R') then /* Regulamentacao */
					cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_regulamentacao(ie_regulamentacao_w);
				elsif (ie_codificacao_w = 'TC') then /* Tipo de contratacao */
					if (ie_tipo_contratacao_w in ('I','CE','CA')) then
						cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_contratacao(ie_tipo_contratacao_w);
					else
						cd_classificacao_item_w	:= 'TC';
					end if;
				elsif (ie_codificacao_w = 'S') then /* Segmentacao */
					cd_classificacao_item_w	:= lpad(ie_segmentacao_w,2,'0');
				elsif (ie_codificacao_w = 'TP') then /* Tipo de Contrato (Pessoa fisica ou Juridica) */
					if (ie_tipo_contrato_w in ('PF','PJ')) then
						cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_pessoa_contrato(ie_tipo_contrato_w);
					else
						cd_classificacao_item_w	:= 'TP';
					end if;
				elsif (ie_codificacao_w = 'TR') then /* Tipo de relacao com a OPS */
					cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_tipo_relacao(ie_tipo_relacao_w);
				elsif (ie_codificacao_w = 'TA') then /* Tipo de ato cooperado */
					if (ie_ato_cooperado_w in ('1','2','3')) then
						cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_ato_cooperado(ie_ato_cooperado_w);
					else
						cd_classificacao_item_w	:= 'A';
					end if;
				elsif (ie_codificacao_w = 'CG') then /* Complemento grupo ANS */
					if (ie_classif_grupo_ww IS NOT NULL AND ie_classif_grupo_ww::text <> '') then
						cd_classificacao_item_w	:= ie_classif_grupo_ww;
					else
						cd_classificacao_item_w	:= 'CG';
					end if;
				elsif (ie_codificacao_w = 'RC') then /* Tipo de contratacao / Regulamentacao */
					cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_contratacao_regulamentacao(ie_tipo_contratacao_w,ie_regulamentacao_w);
				end if;
				
				if (cd_classificacao_item_w IS NOT NULL AND cd_classificacao_item_w::text <> '') then
					if (ds_mascara_w = '00') then
						cd_classificacao_item_w	:= lpad(cd_classificacao_item_w,2,'0') || '.';
					elsif (ds_mascara_w = '0.0') then
						cd_classificacao_item_w	:= substr(lpad(cd_classificacao_item_w,2,'0'),1,1) ||'.'||substr(lpad(cd_classificacao_item_w,2,'0'),2,1) || '.';
					elsif (ds_mascara_w = '0_') then
						cd_classificacao_item_w	:= cd_classificacao_item_w;
					else
						cd_classificacao_item_w	:= cd_classificacao_item_w || '.';
					end if;
					
					cd_classificacao_debito_w	:= cd_classificacao_debito_w || cd_classificacao_item_w;
				end if;
			end if;
			end;
		end loop;
		close c_segmentacao;
		
		/* Remover o ultimo ponto da classificacao */

		if (substr(cd_classificacao_credito_w,length(cd_classificacao_credito_w),length(cd_classificacao_credito_w)) = '.') then
			cd_classificacao_credito_w	:= substr(cd_classificacao_credito_w,1,length(cd_classificacao_credito_w)-1);
		end if;
		
		if (substr(cd_classificacao_debito_w,length(cd_classificacao_debito_w),length(cd_classificacao_debito_w)) = '.') then
			cd_classificacao_debito_w	:= substr(cd_classificacao_debito_w,1,length(cd_classificacao_debito_w)-1);
		end if;

		if (coalesce(cd_conta_credito_w::text, '') = '') then
			cd_conta_credito_w	:= ctb_obter_conta_classif(cd_classificacao_credito_w,dt_referencia_w,cd_estabelecimento_p);
		end if;

		if (coalesce(cd_conta_debito_w::text, '') = '') then
			cd_conta_debito_w	:= ctb_obter_conta_classif(cd_classificacao_debito_w,dt_referencia_w,cd_estabelecimento_p);
		end if;
		
		if (nr_seq_atualizacao_p IS NOT NULL AND nr_seq_atualizacao_p::text <> '') then
			if (coalesce(nr_seq_esquema_w::text, '') = '') then			
				CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,
							1,
							null,
							null,
							null,
							null,
							null,
							nr_seq_conta_pos_contab_w,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							nm_usuario_p,
							nr_seq_esquema_w,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							nr_seq_pos_taxa_contab_w);
			elsif	((coalesce(cd_conta_credito_w::text, '') = '') or (coalesce(cd_conta_debito_w::text, '') = '')) then
				CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,
							2,
							null,
							null,
							null,
							null,
							null,
							nr_seq_conta_pos_contab_w,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							nm_usuario_p,
							nr_seq_esquema_w,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							nr_seq_pos_taxa_contab_w);
			elsif (coalesce(nr_seq_plano_w, 0) = 0) then
				CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,
							8,
							null,
							null,
							null,
							null,
							null,
							nr_seq_conta_pos_contab_w,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							nm_usuario_p,
							nr_seq_esquema_w,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							nr_seq_pos_taxa_contab_w);
			end if;
		end if;
		
		update	pls_conta_pos_taxa_contab
		set	cd_conta_cred		= cd_conta_credito_w,
			cd_conta_deb		= cd_conta_debito_w,
			cd_historico		= cd_historico_padrao_w,
			cd_classif_cred		= cd_classificacao_credito_w,
			cd_classif_deb		= cd_classificacao_debito_w,
			nr_seq_esquema		= nr_seq_esquema_w,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	rowid			= nr_id_w;
		
		qt_movimento_w	:= qt_movimento_w +1;
	end if;
	end;
end loop;
close c_pos_estab;

qt_movimento_p	:= qt_movimento_w;

CALL wheb_usuario_pck.set_ie_atualizacao_contabil('N');

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_atualizar_taxa_adm ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_pos_taxa_contab_p pls_conta_pos_taxa_contab.nr_sequencia%type, nr_seq_atualizacao_p pls_movimento_contabil.nr_seq_atualizacao%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, qt_movimento_p INOUT integer) FROM PUBLIC;

