-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (		nm_sinal_vital	varchar(100),
				vl_sinal_vital	varchar(100),
				ds_unidade_medida	varchar(100),
				nm_codigo			varchar(100),
				ds_lista		varchar(255));


CREATE OR REPLACE PROCEDURE gerar_sinal_vital_dixtal ( cd_pessoa_fisica_p text, dt_sinal_vital_p text, ds_lista_parametros_p text, ds_lista_parametros2_p text default null, nm_usuario_p text DEFAULT NULL, cd_setor_atendimento_p bigint default null, cd_unidade_basica_p text default null, cd_unidade_compl_p text default null) AS $body$
DECLARE

type Vetor is table of campos index 	by integer;
Vetor_w			Vetor;



nr_atendimento_w	        bigint;
dt_sinal_vital_w	        timestamp;
nr_seq_sinal_vital_w	    bigint	:= 0;
ds_sep_w		            varchar(100)	:= ';';
nr_pos_separador_w	        bigint;
qt_parametros_w		        bigint;
qt_contador_w		        bigint;
ds_parametros_w		        varchar(32000);
i			                integer;
ds_lista_aux_w		        varchar(255);
ds_sep_bv_w		            varchar(30)	:= obter_separador_bv;
nr_seq_monit_resp_w	        bigint	:= 0;
nr_seq_monit_hemo_w	        bigint	:= 0;
cd_modalidade_w		        varchar(15);
ie_respiracao_w		        varchar(7);
ds_erro_w		            varchar(4000);
nr_cirurgia_w		        bigint;
nr_seq_pepo_w		        bigint;
nr_cirurgia_ww		        bigint;
nr_seq_pepo_ww		        bigint;
nr_seq_age_anest_ocor_w	    bigint;
cd_estabelecimento_w	    bigint;
cd_setor_atendimento_w	    integer;
cd_unidade_basica_w	        varchar(10);
cd_unidade_compl_w	        varchar(10);
nr_seq_interno_w	        bigint;
nr_seq_interno_old_w	    bigint;
ds_param_integ_hl7_w	    varchar(4000);
nr_atendimento_cirur_w	    bigint;
cd_pessoa_fisica_w		    varchar(10):= cd_pessoa_fisica_p;
ie_momento_integracao_w     varchar(15);
ie_exige_aprovacao_w        varchar(2);
ie_sinal_vital_liberado_w   char(1) := 'N';
ie_retorno_w                varchar(10)   := '';
ds_retorno_w                varchar(2000) := '';
executarByClassifLeito  varchar(10);
nls_numeric_characters_w	varchar(255);
nm_usuario_w varchar(255) := coalesce(nm_usuario_p, 'DIXTAL');

-- Constantes   
ExigeAprovacaoNao                varchar(2) := 'N';
ExigeAprovacaoSim                varchar(2) := 'S';
ExigeAprovacaoForaFaixa          varchar(2) := 'C';

	procedure inserir_sv is
	;
BEGIN
	if (nr_seq_sinal_vital_w	= 0) then

		select	nextval('atendimento_sinal_vital_seq')
		into STRICT	nr_seq_sinal_vital_w
		;


		insert into atendimento_sinal_vital(	nr_sequencia,
							nr_atendimento,
							dt_sinal_vital,
							dt_atualizacao,
							nm_usuario,
							CD_PESSOA_FISICA,
							ie_importado,
							nr_cirurgia,
							nr_seq_pepo,
							ie_situacao,
							IE_INTEGRACAO)
				values (	nr_seq_sinal_vital_w,
							nr_atendimento_w,
							dt_sinal_vital_w,
							clock_timestamp(),
							nm_usuario_w,
							null,
							'S',
							nr_cirurgia_w,
							nr_seq_pepo_w,
							'A',
							'S');
	end if;
	end;

	procedure inserir_resp is
	begin
	if (nr_seq_monit_resp_w	= 0) then

		select	nextval('atendimento_monit_resp_seq')
		into STRICT	nr_seq_monit_resp_w
		;

		insert into ATENDIMENTO_MONIT_RESP(	nr_sequencia,
							nr_atendimento,
							DT_MONITORIZACAO,
							dt_atualizacao,
							nm_usuario,
							CD_PESSOA_FISICA,
							ie_importado,
							nr_cirurgia,
							nr_seq_pepo,
              IE_SITUACAO)
				values (	nr_seq_monit_resp_w,
							nr_atendimento_w,
							dt_sinal_vital_w,
							clock_timestamp(),
							nm_usuario_w,
							null,
							'S',
							nr_cirurgia_w,
							nr_seq_pepo_w,
              'A');
	end if;
	end;


	procedure inserir_hemo is
	begin
	if (nr_seq_monit_hemo_w	= 0) then

		select	nextval('atend_monit_hemod_seq')
		into STRICT	nr_seq_monit_hemo_w
		;

		insert into ATEND_MONIT_HEMOD(	nr_sequencia,
							nr_atendimento,
							DT_MONITORACAO,
							dt_atualizacao,
							nm_usuario,
							CD_PESSOA_FISICA,
							ie_importado,
							nr_cirurgia,
							nr_seq_pepo)
				values (	nr_seq_monit_hemo_w,
							nr_atendimento_w,
							dt_sinal_vital_w,
							clock_timestamp(),
							nm_usuario_w,
							null,
							'S',
							nr_cirurgia_w,
							nr_seq_pepo_w);
	end if;
	end;


	procedure atualizar_valor_sv(	nm_tabela_p	varchar2,
					nm_atributo_p	varchar2,
					vl_parametro_p	varchar2) is
	ds_comando_w	varchar2(2000);
	ds_parametros_w	varchar2(2000);
	vl_parametro_w	varchar2(2000);
	begin
	ds_comando_w	:= 	'	update	'||nm_tabela_p	||
				'	set	'||nm_atributo_p||' = :vl_parametro'||
				'	where	nr_sequencia	= :nr_sequencia ';
	begin
	vl_parametro_w	:= vl_parametro_p;
	if	((substr(nm_atributo_p,1,2)	= 'QT') or (substr(nm_atributo_p,1,2)	= 'PR') or (substr(nm_atributo_p,1,2)	= 'VL') or (substr(nm_atributo_p,1,2)	= 'TX')) then
			if (nls_numeric_characters_w <> '.,') then 		
				vl_parametro_w	:= replace(vl_parametro_w,'.',',');		
			else
				vl_parametro_w	:= replace(vl_parametro_w,',','.');
			end if;
	end if;

	if (nm_tabela_p	= 'ATENDIMENTO_SINAL_VITAL') and (vl_parametro_p IS NOT NULL AND vl_parametro_p::text <> '') and (lower(vl_parametro_p)	<> 'null')then
		inserir_sv;
		ds_parametros_w:=	'vl_parametro='||vl_parametro_w||ds_sep_bv_w||
					'nr_sequencia='||nr_seq_sinal_vital_w||ds_sep_bv_w;

		CALL Exec_sql_Dinamico_bv(nm_usuario_w,ds_comando_w,ds_parametros_w);
	elsif (nm_tabela_p	= 'ATENDIMENTO_MONIT_RESP') and (vl_parametro_p IS NOT NULL AND vl_parametro_p::text <> '') and (lower(vl_parametro_p)	<> 'null')then
		inserir_resp;
		ds_parametros_w:=	'vl_parametro='||vl_parametro_w||ds_sep_bv_w||
					'nr_sequencia='||nr_seq_monit_resp_w||ds_sep_bv_w;

		CALL Exec_sql_Dinamico_bv(nm_usuario_w,ds_comando_w,ds_parametros_w);
	elsif (nm_tabela_p	= 'ATEND_MONIT_HEMOD') and (vl_parametro_p IS NOT NULL AND vl_parametro_p::text <> '') and (lower(vl_parametro_p)	<> 'null')then
		inserir_hemo;
		ds_parametros_w:=	'vl_parametro='||vl_parametro_w||ds_sep_bv_w||
					'nr_sequencia='||nr_seq_monit_hemo_w||ds_sep_bv_w;

		CALL Exec_sql_Dinamico_bv(nm_usuario_w,ds_comando_w,ds_parametros_w);
	end if;

	exception
		when others then
		ds_erro_w		:= sqlerrm(SQLSTATE);
		
	end;

	end;
	
	
	
	function obter_se_existe_agente(ie_tipo_agente number, nr_cirurgia_param number) return;
	ie_possui_reg_w			varchar2(1);
	begin
	

	if (ie_tipo_agente = 1) then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_agente_anest_w
		from	agente_anestesico
		where	ie_integracao = 'AIR';
	elsif (ie_tipo_agente = 2) then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_agente_anest_w
		from	agente_anestesico
		where	ie_integracao = 'N2O';
	elsif (ie_tipo_agente = 3) then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_agente_anest_w
		from	agente_anestesico
		where	ie_integracao = 'O2';
	end if;

	
	select 	coalesce(max('S'),'N')
	into STRICT	ie_possui_reg_w
	from	cirurgia_agente_anestesico
	where 	nr_seq_agente 	=	nr_seq_agente_anest_w
	and		nr_cirurgia		=	nr_cirurgia_param;
	
	return;
	
	end;
	
	function obter_se_agente_ja_adm(ie_tipo_agente number, nr_cirurgia_param number) return;
	nr_sequencia_ww			number(10);
	ie_possui_reg_w			varchar2(1);
	begin
	

	if (ie_tipo_agente = 1) then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_agente_anest_w
		from	agente_anestesico
		where	ie_integracao = 'AIR';
	elsif (ie_tipo_agente = 2) then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_agente_anest_w
		from	agente_anestesico
		where	ie_integracao = 'N2O';
	elsif (ie_tipo_agente = 3) then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_agente_anest_w
		from	agente_anestesico
		where	ie_integracao = 'O2';
	end if;
	
	select 	max(nr_sequencia)
	into STRICT	nr_sequencia_ww
	from	cirurgia_agente_anestesico
	where 	nr_seq_agente 	=	nr_seq_agente_anest_w
	and		nr_cirurgia		=	nr_cirurgia_param;
	
	
	select 	coalesce(max('S'),'N')
	into STRICT	ie_possui_reg_w
	from	cirurgia_agente_anest_ocor
	where	nr_seq_cirur_agente = nr_sequencia_ww
	and		coalesce(dt_final_adm::text, '') = '';
	
	return;
	
	end;
	
	procedure inserir_adm_agente_anestesico(ie_tipo_agente number, nr_cirurgia_param number, qt_vel_p varchar2)  is
	
	nr_seq_agente_anest_w  		number(10);
	nr_sequencia_ww				number(10);
	nr_seq_agent_anest_ocor_w	number(10);

	begin

	if (ie_tipo_agente = 1) then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_agente_anest_w
		from	agente_anestesico
		where	ie_integracao = 'AIR';
	elsif (ie_tipo_agente = 2) then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_agente_anest_w
		from	agente_anestesico
		where	ie_integracao = 'N2O';
	elsif (ie_tipo_agente = 3) then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_agente_anest_w
		from	agente_anestesico
		where	ie_integracao = 'O2';
	end if;
	
	select 	max(nr_sequencia)
	into STRICT	nr_sequencia_ww
	from	cirurgia_agente_anestesico
	where 	nr_seq_agente 	=	nr_seq_agente_anest_w
	and		nr_cirurgia		=	nr_cirurgia_param;
	
	select  nextval('cirurgia_agente_anest_ocor_seq')
	into STRICT	nr_seq_agent_anest_ocor_w
	;
	
	insert into cirurgia_agente_anest_ocor(	
				nr_sequencia,
				nr_seq_cirur_agente,
				dt_inicio_adm,
				dt_atualizacao,
				nm_usuario,
				dt_liberacao,
				ie_modo_registro,
				ie_aplic_bolus,
				qt_velocidade_inf,
				ie_situacao)
	values (	nr_seq_agent_anest_ocor_w,
				nr_sequencia_ww,
				clock_timestamp(),
				clock_timestamp(),
				nm_usuario_w,
				clock_timestamp(),
				'V',
				'N',
				campo_numerico(qt_vel_p),
				'A');
	
	end;
	
	function obter_vl_agente_adm(ie_tipo_agente number, nr_cirurgia_param number) return;
	nr_sequencia_ww			number(10);
	qt_velocidade_w			varchar2(10);
	begin
	

	if (ie_tipo_agente = 1) then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_agente_anest_w
		from	agente_anestesico
		where	ie_integracao = 'AIR';
	elsif (ie_tipo_agente = 2) then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_agente_anest_w
		from	agente_anestesico
		where	ie_integracao = 'N2O';
	elsif (ie_tipo_agente = 3) then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_agente_anest_w
		from	agente_anestesico
		where	ie_integracao = 'O2';
	end if;
	
	select 	max(nr_sequencia)
	into STRICT	nr_sequencia_ww
	from	cirurgia_agente_anestesico
	where 	nr_seq_agente 	=	nr_seq_agente_anest_w
	and		nr_cirurgia		=	nr_cirurgia_param;
	
	
	select 	max(qt_velocidade_inf)
	into STRICT	qt_velocidade_w
	from	cirurgia_agente_anest_ocor
	where	nr_seq_cirur_agente = nr_sequencia_ww
	and		coalesce(dt_final_adm::text, '') = '';
	
	return;
	
	end;
	
	
	procedure atualizar_adm_agente_anest(ie_tipo_agente number, nr_cirurgia_param number)  is
	nr_seq_agente_anest_w  	number(10);
	nr_sequencia_ww			number(10);
	qt_velocidade_w			number(10);
	begin
	

	if (ie_tipo_agente = 1) then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_agente_anest_w
		from	agente_anestesico
		where	ie_integracao = 'AIR';
	elsif (ie_tipo_agente = 2) then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_agente_anest_w
		from	agente_anestesico
		where	ie_integracao = 'N2O';
	elsif (ie_tipo_agente = 3) then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_agente_anest_w
		from	agente_anestesico
		where	ie_integracao = 'O2';
	end if;
	
	select 	max(nr_sequencia)
	into STRICT	nr_sequencia_ww
	from	cirurgia_agente_anestesico
	where 	nr_seq_agente 	=	nr_seq_agente_anest_w
	and		nr_cirurgia		=	nr_cirurgia_param;
	
	
	update 	cirurgia_agente_anest_ocor
	set		dt_final_adm	=	clock_timestamp() - (1 / 86400)
	where	nr_seq_cirur_agente = nr_sequencia_ww
	and		coalesce(dt_final_adm::text, '') = '';	
	
	end;
	
	procedure 	inserir_cir_agente_anest(ie_tipo_agente number,
										 nr_cirurgia_param number, 
										 vl_velocidade varchar2,
										 cd_estabelecimento_param number)  is
	cd_material_w 			number(15);
	nr_seq_agente_anest_w  	number(10);
	cd_unidade_medida_w		varchar2(30);
	ie_via_aplicacao_w		varchar2(5);
	cd_profissional_w		varchar2(10);
	nr_sequencia_w			number(10);
	cd_estabelecimento_w	number(4);
	begin
	
	cd_profissional_w 		:= 	substr(obter_pessoa_fisica_usuario(nm_usuario_w,'C'),1,10);
	cd_estabelecimento_w 	:=	wheb_usuario_pck.get_cd_estabelecimento;
	
	
	if (ie_tipo_agente = 1) then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_agente_anest_w
		from	agente_anestesico
		where	ie_integracao = 'AIR';
	elsif (ie_tipo_agente = 2) then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_agente_anest_w
		from	agente_anestesico
		where	ie_integracao = 'N2O';
	elsif (ie_tipo_agente = 3) then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_agente_anest_w
		from	agente_anestesico
		where	ie_integracao = 'O2';
	end if;
	
	select  max(cd_material),
			max(ie_via_aplicacao),
			max(cd_unidade_medida)
	into STRICT	cd_material_w,
			ie_via_aplicacao_w,
			cd_unidade_medida_w
	from	agente_anest_material
	where	nr_seq_agente	=	nr_seq_agente_anest_w;

	
	nr_sequencia_w := gerar_agentes_medicamentos(cd_estabelecimento_param, nr_seq_agente_anest_w, nr_cirurgia_param, cd_material_w, cd_profissional_w, nm_usuario_w, nr_sequencia_w, ie_via_aplicacao_w, cd_unidade_medida_w, null, null, 'CO');	
	end;
	
	
	procedure gerar_passagem_setor(nr_atendimento_param number, nr_seq_interno_param number, cd_setor_param_p number) is
	
	begin

	
	ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_param || ds_sep_bv_w ||
					'nr_seq_interno=' || nr_seq_interno_param || ds_sep_bv_w||
					'cd_pessoa_fisica=' || cd_pessoa_fisica_w || ds_sep_bv_w;
	CALL gravar_agend_integracao(67, ds_param_integ_hl7_w, cd_setor_param_p);
	
	commit;
	end;
	
begin

begin
	select 	max(value)
	into STRICT	nls_numeric_characters_w
	from 	v$nls_parameters
	where	parameter = 'NLS_NUMERIC_CHARACTERS';
exception
when others then
	nls_numeric_characters_w	:= null;
end;

begin
dt_sinal_vital_w := to_date(dt_sinal_vital_p, 'yyyymmddhh24miss');
exception
	when others then
	dt_sinal_vital_w	:= clock_timestamp();
end;

select 	max(nr_atendimento)
into STRICT 	nr_atendimento_w
from 	atendimento_paciente
where 	cd_pessoa_fisica  = cd_pessoa_fisica_w
and	dt_alta_interno  = TO_DATE('30/12/2999','dd/mm/yyyy')
and	ie_tipo_atendimento in (1,3);

if (coalesce(nr_atendimento_w::text, '') = '') then
	select 	max(nr_atendimento)
	into STRICT 	nr_atendimento_w
	from 	atendimento_paciente
	where 	cd_pessoa_fisica  = cd_pessoa_fisica_w
	and	dt_alta_interno  = TO_DATE('30/12/2999','dd/mm/yyyy');
end if;

select obter_regra_classif_pac_leito(nr_atendimento_w, dt_sinal_vital_w) into STRICT executarByClassifLeito;

if (executarByClassifLeito = 'S') then

if (obter_classif_setor(cd_setor_atendimento_p)	= 2) then

	cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
	if (coalesce(cd_estabelecimento_w,0) <= 0) then
		select	max(cd_estabelecimento)
		into STRICT	cd_estabelecimento_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_w;
	end if;
	
	if (coalesce(cd_estabelecimento_w,0) <= 0) then
	
		select	max(b.cd_estabelecimento)
		into STRICT	cd_estabelecimento_w
		from	atend_paciente_unidade a,
				cirurgia b
		where	a.nr_atendimento 	= b.nr_atendimento
		and	a.dt_entrada_unidade 	= b.dt_entrada_unidade
		and	a.cd_setor_atendimento 	= cd_setor_atendimento_p
		and	a.cd_unidade_basica	= cd_unidade_basica_p
		and	a.cd_unidade_compl	= cd_unidade_compl_p
		and	a.DT_SAIDA_INTERNO	= to_date('30/12/2999','dd/mm/yyyy')
		and	b.dt_entrada_unidade between dt_sinal_vital_w - 2 and dt_sinal_vital_w;
	end if;
	
	select	max(ie_momento_integracao)
	into STRICT	ie_momento_integracao_w
	from	parametros_pepo
	where	cd_estabelecimento = cd_estabelecimento_w;
	
	if (ie_momento_integracao_w = 'TM') then
		select	max(a.nr_atendimento)
		into STRICT	nr_atendimento_cirur_w
		from	atend_paciente_unidade a,
			cirurgia b,
			evento_cirurgia_paciente c,
			evento_cirurgia d
		where	a.nr_atendimento 	= b.nr_atendimento
		and	a.dt_entrada_unidade 	= b.dt_entrada_unidade
		and	b.nr_cirurgia		= c.nr_cirurgia
		and	c.nr_seq_evento		= d.nr_sequencia
		and	coalesce(c.ie_situacao,'A')	= 'A'
		and	coalesce(d.ie_situacao,'A')	= 'A'
		and	coalesce(ie_inicia_integracao,'N') = 'S'
		and	a.cd_setor_atendimento 	= cd_setor_atendimento_p
		and	a.cd_unidade_basica	= cd_unidade_basica_p
		and	a.cd_unidade_compl	= cd_unidade_compl_p
		--and	a.DT_SAIDA_INTERNO	= to_date('30/12/2999','dd/mm/yyyy')
		and	c.dt_registro 		between dt_sinal_vital_w - 2 and dt_sinal_vital_w
		and	not exists (	SELECT	1
					from 	evento_cirurgia_paciente x,
						evento_cirurgia y
					where 	x.nr_seq_evento = y.nr_sequencia
					and	x.nr_cirurgia 	= b.nr_cirurgia 
					and	coalesce(ie_finaliza_integracao,'N') = 'S'
					and	coalesce(x.ie_situacao,'A')	= 'A'
					and	coalesce(y.ie_situacao,'A')	= 'A');
	else
		select	max(a.nr_atendimento)
		into STRICT	nr_atendimento_cirur_w
		from	atend_paciente_unidade a,
			cirurgia b
		where	a.nr_atendimento 	= b.nr_atendimento
		and	a.dt_entrada_unidade 	= b.dt_entrada_unidade
		and	a.cd_setor_atendimento 	= cd_setor_atendimento_p
		and	a.cd_unidade_basica	= cd_unidade_basica_p
		and	a.cd_unidade_compl	= cd_unidade_compl_p
		and	a.DT_SAIDA_INTERNO	= to_date('30/12/2999','dd/mm/yyyy')
		and	b.dt_entrada_unidade between dt_sinal_vital_w - 2 and dt_sinal_vital_w;
	end if;	
	

	
	if (nr_atendimento_cirur_w IS NOT NULL AND nr_atendimento_cirur_w::text <> '') and
		((nr_atendimento_w	<> nr_atendimento_cirur_w) or (coalesce(nr_atendimento_w::text, '') = '')) then
		
		nr_atendimento_w	:= nr_atendimento_cirur_w;
		nr_seq_interno_w	:= obter_atepacu_paciente(nr_atendimento_cirur_w,'A');
		cd_pessoa_fisica_w	:= obter_pessoa_atendimento(nr_atendimento_cirur_w,'C');
		
		gerar_passagem_setor(nr_atendimento_cirur_w,nr_seq_interno_w, cd_setor_atendimento_p);
	end if;
	
	
end if;


select 	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_w;

select	max(nr_cirurgia),
		max(nr_seq_pepo)
into STRICT	nr_cirurgia_w,
		nr_seq_pepo_w
from	cirurgia
where	nr_atendimento = nr_atendimento_w
and		dt_sinal_vital_w between dt_inicio_real and coalesce(dt_termino, dt_sinal_vital_w);

select	max(nr_cirurgia),
		max(nr_seq_pepo)
into STRICT	nr_cirurgia_ww,
		nr_seq_pepo_ww
from	cirurgia
where	nr_atendimento = nr_atendimento_w;








ds_parametros_w    := ds_lista_parametros_p||ds_lista_parametros2_p;
ds_parametros_w	   := replace(ds_parametros_w,'null','');
i	:= 0;

while(length(ds_parametros_w) > 0) loop
	begin
	i	:= i+1;
	if (position(';' in ds_parametros_w)	>0)  then
		Vetor_w[i].ds_lista	:= substr(ds_parametros_w,1,position(';' in ds_parametros_w)-1 );
		ds_parametros_w	:= substr(ds_parametros_w,position(';' in ds_parametros_w)+1,40000);

	else
		Vetor_w[i].ds_lista	:=substr(ds_parametros_w,1,length(ds_parametros_w) - 1);
		ds_parametros_w	:= null;
	end if;

	end;
end loop;

--dbms_output.put_line(Vetor_w.count);
for j in 1..Vetor_w.count loop
	begin

	ds_lista_aux_w	:= Vetor_w[j].ds_lista;

	Vetor_w[j].nm_sinal_vital	:= substr(ds_lista_aux_w,1,position('#@#@' in ds_lista_aux_w)-1 );
	
	ds_lista_aux_w	:= substr(ds_lista_aux_w,position('#@#@' in ds_lista_aux_w)+4,40000);
	Vetor_w[j].nm_codigo	:= substr(ds_lista_aux_w,1,position('#@#@' in ds_lista_aux_w)- 1 );	

	ds_lista_aux_w	:= substr(ds_lista_aux_w,position('#@#@' in ds_lista_aux_w)+4,40000);
	Vetor_w[j].ds_unidade_medida	:= substr(ds_lista_aux_w,1,position('#@#@' in ds_lista_aux_w)- 1 );
	ds_lista_aux_w	:= substr(ds_lista_aux_w,position('#@#@' in ds_lista_aux_w)+4,40000);

	Vetor_w[j].vl_sinal_vital	:= substr(ds_lista_aux_w,1,4000 );

	end;
end loop;

if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then

	for i in 1..Vetor_w.count loop
		begin

		if (Vetor_w[i].nm_sinal_vital	= 'fTot') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_FREQ_RESP',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_FREQ_RESP',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'MnAwP') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_PVA',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'TV') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_VCI',Vetor_w[i].vl_sinal_vital);	
		elsif (Vetor_w[i].nm_sinal_vital	= 'ExpTi') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_TE',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'InsTi') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_TI',Vetor_w[i].vl_sinal_vital);	
		elsif (Vetor_w[i].nm_sinal_vital	= 'PEEP') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_PEEP',Vetor_w[i].vl_sinal_vital);	
		elsif (Vetor_w[i].nm_sinal_vital	= 'PIF') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_FLUXO_INSP',Vetor_w[i].vl_sinal_vital);	
		elsif (Vetor_w[i].nm_sinal_vital	= 'PIP') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_PIP',Vetor_w[i].vl_sinal_vital);		
		elsif (Vetor_w[i].nm_sinal_vital	= 'sMode') then
			begin
			if (Vetor_w[i].vl_sinal_vital	= 'D002-0001') then
				select	max(cd_modalidade)
				into STRICT	cd_modalidade_w
				from	MODALIDADE_VENTILATORIA
				where	CD_MOD_INTEGRACAO = 'VCV';
			elsif (Vetor_w[i].vl_sinal_vital	= 'D002-0002') then	
				select	max(cd_modalidade)
				into STRICT	cd_modalidade_w
				from	MODALIDADE_VENTILATORIA
				where	CD_MOD_INTEGRACAO = 'PVC';
			elsif (Vetor_w[i].vl_sinal_vital	= 'D002-0003') then	
				select	max(cd_modalidade)
				into STRICT	cd_modalidade_w
				from	MODALIDADE_VENTILATORIA
				where	CD_MOD_INTEGRACAO = 'PSV + CPAP';
			elsif (Vetor_w[i].vl_sinal_vital	= 'D002-0004') then	
				select	max(cd_modalidade)
				into STRICT	cd_modalidade_w
				from	MODALIDADE_VENTILATORIA
				where	CD_MOD_INTEGRACAO = 'SIMVV';
			elsif (Vetor_w[i].vl_sinal_vital	= 'D002-0005') then	
				select	max(cd_modalidade)
				into STRICT	cd_modalidade_w
				from	MODALIDADE_VENTILATORIA
				where	CD_MOD_INTEGRACAO = 'SIMVP';
			elsif (Vetor_w[i].vl_sinal_vital	= 'D002-0006') then	
				select	max(cd_modalidade)
				into STRICT	cd_modalidade_w
				from	MODALIDADE_VENTILATORIA
				where	CD_MOD_INTEGRACAO = 'MMV + PSV';
			elsif (Vetor_w[i].vl_sinal_vital	= 'D002-0007') then	
				select	max(cd_modalidade)
				into STRICT	cd_modalidade_w
				from	MODALIDADE_VENTILATORIA
				where	CD_MOD_INTEGRACAO = 'PSV + VTA';
			elsif (Vetor_w[i].vl_sinal_vital	= 'D002-0008') then	
				select	max(cd_modalidade)
				into STRICT	cd_modalidade_w
				from	MODALIDADE_VENTILATORIA
				where	CD_MOD_INTEGRACAO = 'APRV';
			elsif (Vetor_w[i].vl_sinal_vital	= 'D002-0009') then	
				atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','IE_RESPIRACAO','VMNI');
			elsif (Vetor_w[i].vl_sinal_vital	= 'D002-000A') then	
				select	max(cd_modalidade)
				into STRICT	cd_modalidade_w
				from	MODALIDADE_VENTILATORIA
				where	CD_MOD_INTEGRACAO = 'TCPL';
			elsif (Vetor_w[i].vl_sinal_vital	= 'D002-000B') then	
				select	max(cd_modalidade)
				into STRICT	cd_modalidade_w
				from	MODALIDADE_VENTILATORIA
				where	CD_MOD_INTEGRACAO = 'TCPL + SIMVP';
			elsif (Vetor_w[i].vl_sinal_vital	= 'D002-000C') then	
				select	max(cd_modalidade)
				into STRICT	cd_modalidade_w
				from	MODALIDADE_VENTILATORIA
				where	CD_MOD_INTEGRACAO = 'CPAP';
			elsif (Vetor_w[i].vl_sinal_vital	= 'D002-000D') then	
				select	max(cd_modalidade)
				into STRICT	cd_modalidade_w
				from	MODALIDADE_VENTILATORIA
				where	CD_MOD_INTEGRACAO = 'VCV RESP';
			elsif (Vetor_w[i].vl_sinal_vital	= 'D002-000E') then	
				select	max(cd_modalidade)
				into STRICT	cd_modalidade_w
				from	MODALIDADE_VENTILATORIA
				where	CD_MOD_INTEGRACAO = 'PCV RESP';
			elsif (Vetor_w[i].vl_sinal_vital	= 'D002-000F') then	
				select	max(cd_modalidade)
				into STRICT	cd_modalidade_w
				from	MODALIDADE_VENTILATORIA
				where	CD_MOD_INTEGRACAO = 'TCPL RESP';
			elsif (Vetor_w[i].vl_sinal_vital	= 'D002-0010') then	
				select	max(cd_modalidade)
				into STRICT	cd_modalidade_w
				from	MODALIDADE_VENTILATORIA
				where	CD_MOD_INTEGRACAO = 'EMERG';
			elsif (Vetor_w[i].vl_sinal_vital	= 'D002-0011') then	
				select	max(cd_modalidade)
				into STRICT	cd_modalidade_w
				from	MODALIDADE_VENTILATORIA
				where	CD_MOD_INTEGRACAO = 'PRVC';
			elsif (Vetor_w[i].vl_sinal_vital	= 'D002-0012') then	
				select	max(cd_modalidade)
				into STRICT	cd_modalidade_w
				from	MODALIDADE_VENTILATORIA
				where	CD_MOD_INTEGRACAO = 'ESPERA';
			elsif (Vetor_w[i].vl_sinal_vital	= 'D002-0014') then	
				select	max(cd_modalidade)
				into STRICT	cd_modalidade_w
				from	MODALIDADE_VENTILATORIA
				where	CD_MOD_INTEGRACAO = 'PSV';
			end if;
			if (cd_modalidade_w IS NOT NULL AND cd_modalidade_w::text <> '') then	
				atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','CD_MOD_VENT',cd_modalidade_w);
			end if;
			end;
		elsif (Vetor_w[i].nm_sinal_vital	= 'BIS') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_MAEC',Vetor_w[i].vl_sinal_vital);	
		elsif (Vetor_w[i].nm_sinal_vital	= 'C.O.') then
			atualizar_valor_sv('ATEND_MONIT_HEMOD','QT_DEBITO_CARD',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'ST-I') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_DERIVACAO_SEG_ST','D1');
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_SEGMENTO_ST',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'ST-II') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_DERIVACAO_SEG_ST','D2');
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_SEGMENTO_ST',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'ST-III') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_DERIVACAO_SEG_ST','D3');
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_SEGMENTO_ST',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'ST-V1') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_DERIVACAO_SEG_ST','V1');
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_SEGMENTO_ST',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'ST-V2') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_DERIVACAO_SEG_ST','V2');
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_SEGMENTO_ST',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'ST-V3') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_DERIVACAO_SEG_ST','V3');
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_SEGMENTO_ST',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'ST-V4') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_DERIVACAO_SEG_ST','V4');
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_SEGMENTO_ST',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'ST-V5') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_DERIVACAO_SEG_ST','V5');
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_SEGMENTO_ST',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'ST-V6') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_DERIVACAO_SEG_ST','V6');
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_SEGMENTO_ST',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'ST-aVR') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_DERIVACAO_SEG_ST','aVR');
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_SEGMENTO_ST',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'ST-aVL') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_DERIVACAO_SEG_ST','aVL');	
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_SEGMENTO_ST',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'ST-aVF') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_DERIVACAO_SEG_ST','aVF');	
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_SEGMENTO_ST',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'HR') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_FREQ_CARD_MONIT',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'etCO2') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_CO2',Vetor_w[i].vl_sinal_vital);
			--atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_SATURACAO_O2',Vetor_w(i).vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'FIO2') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_FIO2',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'etN2O') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_OXIDO_NITROSO_EXP',Vetor_w[i].vl_sinal_vital);	
		elsif (Vetor_w[i].nm_sinal_vital	= 'inN2O') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_OXIDO_NITROSO_INSP',Vetor_w[i].vl_sinal_vital);	
/* 		elsif	(Vetor_w(i).nm_sinal_vital	= 'inO2') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_OXIDO_NITROSO_INSP',Vetor_w(i).vl_sinal_vital);	
		elsif	(Vetor_w(i).nm_sinal_vital	= 'etO2') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_OXIDO_NITROSO_EXP',Vetor_w(i).vl_sinal_vital);	 */
		elsif (Vetor_w[i].nm_sinal_vital	= 'etAGT') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_HALOG_EXP',Vetor_w[i].vl_sinal_vital);	
		elsif (Vetor_w[i].nm_sinal_vital	= 'inAGT') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_HALOG_INS',Vetor_w[i].vl_sinal_vital);		
		elsif (Vetor_w[i].nm_sinal_vital	= 'ABPs') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_PA_SISTOLICA',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_APARELHO_PA','I');	
		elsif (Vetor_w[i].nm_sinal_vital	= 'ABPd') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_PA_DIASTOLICA',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_APARELHO_PA','I');	
		elsif (Vetor_w[i].nm_sinal_vital	= 'ABPm') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_PAM',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_APARELHO_PA','I');
		elsif (Vetor_w[i].nm_sinal_vital	= 'PAPs') then
			atualizar_valor_sv('ATEND_MONIT_HEMOD','QT_PA_SIST_AP',Vetor_w[i].vl_sinal_vital);	
		elsif (Vetor_w[i].nm_sinal_vital	= 'PAPd') then
			atualizar_valor_sv('ATEND_MONIT_HEMOD','QT_PA_DIAST_AP',Vetor_w[i].vl_sinal_vital);	
		elsif (Vetor_w[i].nm_sinal_vital	= 'PAPm') then
			atualizar_valor_sv('ATEND_MONIT_HEMOD','QT_PA_MEDIA_AP',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'LAPm') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_PAE',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'CVPm') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_PVC',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'CPP') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_PPC',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'IC1m') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_PRESSAO_INTRA_CRANIO',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'PVDd') then
			atualizar_valor_sv('ATEND_MONIT_HEMOD','QT_PVD_DIAST_FINAL',Vetor_w[i].vl_sinal_vital);	
		elsif (Vetor_w[i].nm_sinal_vital	= 'PVDs') then
			atualizar_valor_sv('ATEND_MONIT_HEMOD','QT_PVD_SIST',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'PCPm') then
			atualizar_valor_sv('ATEND_MONIT_HEMOD','QT_PA_OCLUIDA_AP',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'NBPs') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_PA_SISTOLICA',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_APARELHO_PA','A');		
		elsif (Vetor_w[i].nm_sinal_vital	= 'NBPd') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_PA_DIASTOLICA',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_APARELHO_PA','A');
		elsif (Vetor_w[i].nm_sinal_vital	= 'NBPm') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_PAM',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_APARELHO_PA','A');
		elsif (Vetor_w[i].nm_sinal_vital	= 'SVRI') then
			atualizar_valor_sv('ATEND_MONIT_HEMOD','TX_RV_SISTEMICA',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'C.I.') then
			atualizar_valor_sv('ATEND_MONIT_HEMOD','TX_INDICE_CARD',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'ARTs') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_PA_SISTOLICA',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_APARELHO_PA','I');
		elsif (Vetor_w[i].nm_sinal_vital	= 'ARTd') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_PA_DIASTOLICA',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_APARELHO_PA','I');
		elsif (Vetor_w[i].nm_sinal_vital	= 'ARTm') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_PAM',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_APARELHO_PA','I');
		elsif (Vetor_w[i].nm_sinal_vital	= 'SVR') then
			atualizar_valor_sv('ATEND_MONIT_HEMOD','QT_RV_SISTEMICA',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'SV') then
			atualizar_valor_sv('ATEND_MONIT_HEMOD','QT_VOLUME_SIST',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'PPV') then
			atualizar_valor_sv('ATEND_MONIT_HEMOD','QT_DELTA_PP',Vetor_w[i].vl_sinal_vital);	
		elsif (Vetor_w[i].nm_sinal_vital	= 'SVI') then
			atualizar_valor_sv('ATEND_MONIT_HEMOD','TX_INDICE_SIST',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'Resp') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_FREQ_RESP',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_FREQ_RESP',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'Pulse') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_FREQ_CARDIACA',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'SpO2') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_SATURACAO_O2',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'ScvO2') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_SAT_VENOSA_O2',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'Tesoph') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_TEMP',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_SITIO',2);
		elsif (Vetor_w[i].nm_sinal_vital	= 'Tnaso') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_TEMP',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_SITIO',6);
		elsif (Vetor_w[i].nm_sinal_vital	= 'Tskin') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_TEMP',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_SITIO',4);
		elsif (Vetor_w[i].nm_sinal_vital	= 'Tven') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_TEMP',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_SITIO',10);
		elsif (Vetor_w[i].nm_sinal_vital	= 'Trect') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_TEMP',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_SITIO',3);
		elsif (Vetor_w[i].nm_sinal_vital	= 'pToral') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_TEMP',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_SITIO',9);
		elsif (Vetor_w[i].nm_sinal_vital	= 'TOFrat') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_TOF_BLOQ_NEURO_MUSC',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'awRR') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_FREQ_RESP',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_FREQ_RESP',Vetor_w[i].vl_sinal_vital);	
		elsif (Vetor_w[i].nm_sinal_vital	= 'Pplat') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_PPLATO',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'iPEEP') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_AUTO_PEEP',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'Rdyn') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_RSR',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'Mvet') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_VMIN',Vetor_w[i].vl_sinal_vital);	
		elsif (Vetor_w[i].nm_sinal_vital	= 'SvO2') then
			atualizar_valor_sv('ATEND_MONIT_HEMOD','QT_SATUR_VEN_MISTA_OXIGENIO',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'Tblood') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_TEMP',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_SITIO',10);
		elsif (Vetor_w[i].nm_sinal_vital	= 'TB') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_TEMP',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_SITIO',1);
		elsif (Vetor_w[i].nm_sinal_vital	= 'TA') then
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_TEMP',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','IE_SITIO',1);

/* PARAMETROS QUE A DIXTAL ENVIA E QUE NAO GRAVAMOS NO TASY.
		elsif	(Vetor_w(i).nm_sinal_vital	= 'WOBi') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'F/VT') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'PVC') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'VCO2') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'EMG') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'SEF') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'TP') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';	
		elsif	(Vetor_w(i).nm_sinal_vital	= 'SQI') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'SR') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'imCO2') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'LAPs') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'LAPd') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'RAPm') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'IC1d') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'IC1s') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';	
		elsif	(Vetor_w(i).nm_sinal_vital	= 'SPV') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'PVDm') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'PCPs') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'PCPd') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'CCO') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'dPmax') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'ITBV') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'ITBVI') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'EVLW') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'EVLWI') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'GEDV') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'GEDVI') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'CFI') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'CCI') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'SVV') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'GEF') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'PVPI') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'CPI') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'CP') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'Perf') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'SQI(Scv)') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'Tart') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= '?Temp') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'PTC') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'TOFrat') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'TOF1') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'TOF2') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'TOF3') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'TOF4') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'TOFcnt') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'TNMDBr') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'TNMStr') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'TNMT1r') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'Cdyn') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'Vtet') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'EDV') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'O2EI') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'EDVI') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
		elsif	(Vetor_w(i).nm_sinal_vital	= 'EF') then
			ds_erro_w	:= 'Dixtal envia esse parametro na integracao, porem Dr Haertel quer esperar demanda de cliente para inserir o mesmo no Tasy';
*/
			
		elsif (Vetor_w[i].nm_sinal_vital	= 'RR') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_FREQ_RESP',Vetor_w[i].vl_sinal_vital);
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_FREQ_RESP',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'FRt') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_FREQ_RESP',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'VTMP') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_VMIN',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'Pmean') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_PVA',Vetor_w[i].vl_sinal_vital);	
		elsif (Vetor_w[i].nm_sinal_vital	= 'AAi') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_HALOG_INS',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'dPP') then
			atualizar_valor_sv('ATEND_MONIT_HEMOD','QT_DELTA_PP_MMHG',Vetor_w[i].vl_sinal_vital);
		
		/*elsif	(Vetor_w(i).nm_sinal_vital	= 'SIMVV') then 
			select	max(cd_modalidade)
			into	cd_modalidade_w
			from	MODALIDADE_VENTILATORIA
			where	CD_MOD_INTEGRACAO = 'SIMVV';		
		elsif (Vetor_w(i).nm_sinal_vital	= 'SIMVP') then 
			select	max(cd_modalidade)
			into	cd_modalidade_w
			from	MODALIDADE_VENTILATORIA
			where	CD_MOD_INTEGRACAO = 'SIMVP';
		elsif (Vetor_w(i).nm_sinal_vital	= 'PCV') then 
			select	max(cd_modalidade)
			into	cd_modalidade_w
			from	MODALIDADE_VENTILATORIA
			where	CD_MOD_INTEGRACAO = 'PCV';
		elsif (Vetor_w(i).nm_sinal_vital	= 'VCV') then 
			select	max(cd_modalidade)
			into	cd_modalidade_w
			from	MODALIDADE_VENTILATORIA
			where	CD_MOD_INTEGRACAO = 'VCV';
		elsif (Vetor_w(i).nm_sinal_vital	= 'PSV') then 
			select	max(cd_modalidade)
			into	cd_modalidade_w
			from	MODALIDADE_VENTILATORIA
			where	CD_MOD_INTEGRACAO = 'PSV';*/
		elsif (Vetor_w[i].nm_sinal_vital	= 'Rdyn') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_RSR',Vetor_w[i].vl_sinal_vital);			
		elsif (Vetor_w[i].nm_sinal_vital	= 'Cdyn') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_CDYN',Vetor_w[i].vl_sinal_vital);			
		elsif (Vetor_w[i].nm_sinal_vital	= 'MnAwP') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_PVA',Vetor_w[i].vl_sinal_vital);			
		elsif (Vetor_w[i].nm_sinal_vital	= 'Pplat') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_PPLATO',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'FIO2') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_FIO2',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'MVexp') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_VMIN',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'TV') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_VCI',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'PIP') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_PIP',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'LimitPressure') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_LIMITE_PA_MAX',Vetor_w[i].vl_sinal_vital);
/* 		elsif	(Vetor_w(i).nm_sinal_vital	= 'Peep') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_PEEP',Vetor_w(i).vl_sinal_vital); */
		elsif (Vetor_w[i].nm_sinal_vital	= 'IE') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_TI_TE',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'FR') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_FREQ_VENT',Vetor_w[i].vl_sinal_vital);
/* 		elsif	(Vetor_w(i).nm_sinal_vital	= 'Flow') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_FLUXO_INSP',Vetor_w(i).vl_sinal_vital); */
		elsif (Vetor_w[i].nm_sinal_vital	= 'TriggerInsPress') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_SENSIB_RESP',Vetor_w[i].vl_sinal_vital);
				elsif (Vetor_w[i].nm_sinal_vital	= 'TriggerInsFlow') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_SENSIB_FLUXO',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'Volume') then
			atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_VC_PROG',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_codigo	= '0002-5284') then
			--atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_OXIGENIO_INSP',Vetor_w(i).vl_sinal_vital);
			null;
		elsif (Vetor_w[i].nm_codigo	= '0002-5378') then
			--atualizar_valor_sv('ATENDIMENTO_MONIT_RESP','QT_OXIGENIO_EXP',Vetor_w(i).vl_sinal_vital);
			null;
			/*1 - AIR
			   2 - N2O
			   3 - O2 */
			
			elsif (Vetor_w[i].nm_sinal_vital	= 'Air') then
			if (somente_numero(Vetor_w[i].vl_sinal_vital) > 0) and (obter_se_existe_agente(1,nr_cirurgia_ww) = 'S') and (obter_se_agente_ja_adm(1,nr_cirurgia_ww) = 'N') then
				CALL inserir_adm_agente_anestesico(1,nr_cirurgia_ww, Vetor_w[i].vl_sinal_vital);	
			elsif (somente_numero(Vetor_w[i].vl_sinal_vital) > 0) and (obter_se_existe_agente(1,nr_cirurgia_ww) = 'S') and (obter_se_agente_ja_adm(1,nr_cirurgia_ww) = 'S') and (Vetor_w[i].vl_sinal_vital <> obter_vl_agente_adm(1,nr_cirurgia_ww)) then
				CALL atualizar_adm_agente_anest(1,nr_cirurgia_ww);
				CALL inserir_adm_agente_anestesico(1,nr_cirurgia_ww, Vetor_w[i].vl_sinal_vital);	
			elsif (somente_numero(Vetor_w[i].vl_sinal_vital) > 0) and (obter_se_existe_agente(1,nr_cirurgia_ww) = 'N') then
												CALL inserir_cir_agente_anest(1,	nr_cirurgia_ww,
												Vetor_w[i].vl_sinal_vital,
												cd_estabelecimento_w);
				CALL inserir_adm_agente_anestesico(1,nr_cirurgia_ww, Vetor_w[i].vl_sinal_vital);	
			elsif (somente_numero(Vetor_w[i].vl_sinal_vital) = 0) and (obter_se_existe_agente(1,nr_cirurgia_ww) = 'S') and (obter_se_agente_ja_adm(1,nr_cirurgia_ww) = 'S') then
				CALL atualizar_adm_agente_anest(1,nr_cirurgia_ww);	
			end if;
			
		elsif (Vetor_w[i].nm_sinal_vital	= 'N2O') then
			if (somente_numero(Vetor_w[i].vl_sinal_vital) > 0) and (obter_se_existe_agente(2,nr_cirurgia_ww) = 'S') and (obter_se_agente_ja_adm(2,nr_cirurgia_ww) = 'N') then
				CALL inserir_adm_agente_anestesico(2,nr_cirurgia_ww, Vetor_w[i].vl_sinal_vital);	
			elsif (somente_numero(Vetor_w[i].vl_sinal_vital) > 0) and (obter_se_existe_agente(2,nr_cirurgia_ww) = 'S') and (obter_se_agente_ja_adm(2,nr_cirurgia_ww) = 'S') and (Vetor_w[i].vl_sinal_vital <> obter_vl_agente_adm(2,nr_cirurgia_ww)) then
				CALL atualizar_adm_agente_anest(2,nr_cirurgia_ww);
				CALL inserir_adm_agente_anestesico(2,nr_cirurgia_ww, Vetor_w[i].vl_sinal_vital);	
			elsif (somente_numero(Vetor_w[i].vl_sinal_vital) > 0) and (obter_se_existe_agente(2,nr_cirurgia_ww) = 'N') then
				CALL inserir_cir_agente_anest(2,	nr_cirurgia_ww,
										 Vetor_w[i].vl_sinal_vital,
										 cd_estabelecimento_w);
				CALL inserir_adm_agente_anestesico(2,nr_cirurgia_ww, Vetor_w[i].vl_sinal_vital);	
			elsif (somente_numero(Vetor_w[i].vl_sinal_vital) = 0) and (obter_se_existe_agente(2,nr_cirurgia_ww) = 'S') and (obter_se_agente_ja_adm(2,nr_cirurgia_ww) = 'S') then
				CALL atualizar_adm_agente_anest(2,nr_cirurgia_ww);	
			end if;	

			
		elsif (Vetor_w[i].nm_sinal_vital	= 'O2') then
			if (somente_numero(Vetor_w[i].vl_sinal_vital) > 0) and (obter_se_existe_agente(3,nr_cirurgia_ww) = 'S') and (obter_se_agente_ja_adm(3,nr_cirurgia_ww) = 'N') then
				CALL inserir_adm_agente_anestesico(3,nr_cirurgia_ww, Vetor_w[i].vl_sinal_vital);
			elsif (somente_numero(Vetor_w[i].vl_sinal_vital) > 0) and (obter_se_existe_agente(3,nr_cirurgia_ww) = 'S') and (obter_se_agente_ja_adm(3,nr_cirurgia_ww) = 'S') and (Vetor_w[i].vl_sinal_vital <> obter_vl_agente_adm(3,nr_cirurgia_ww)) then
				CALL atualizar_adm_agente_anest(3,nr_cirurgia_ww);
				CALL inserir_adm_agente_anestesico(3,nr_cirurgia_ww, Vetor_w[i].vl_sinal_vital);	
			elsif (somente_numero(Vetor_w[i].vl_sinal_vital) > 0) and (obter_se_existe_agente(3,nr_cirurgia_ww) = 'N') then
				CALL inserir_cir_agente_anest(3,	nr_cirurgia_ww,
										Vetor_w[i].vl_sinal_vital,
										cd_estabelecimento_w);
				CALL inserir_adm_agente_anestesico(3,nr_cirurgia_ww, Vetor_w[i].vl_sinal_vital);	
			elsif (somente_numero(Vetor_w[i].vl_sinal_vital) = 0) and (obter_se_existe_agente(3,nr_cirurgia_ww) = 'S') and (obter_se_agente_ja_adm(3,nr_cirurgia_ww) = 'S') then
				CALL atualizar_adm_agente_anest(3,nr_cirurgia_ww);	
			end if;
				
		
		end if;
		
		end;
	end loop;

end if;

if (coalesce(nr_seq_sinal_vital_w,0) > 0) then
  CALL release_vital_sign_integration(nr_seq_sinal_vital_w, nr_seq_monit_hemo_w, nr_seq_monit_resp_w, nr_atendimento_w, cd_estabelecimento_w);
end if;
end if;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_sinal_vital_dixtal ( cd_pessoa_fisica_p text, dt_sinal_vital_p text, ds_lista_parametros_p text, ds_lista_parametros2_p text default null, nm_usuario_p text DEFAULT NULL, cd_setor_atendimento_p bigint default null, cd_unidade_basica_p text default null, cd_unidade_compl_p text default null) FROM PUBLIC;

