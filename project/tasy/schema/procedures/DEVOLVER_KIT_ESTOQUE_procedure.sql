-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE devolver_kit_estoque ( nr_seq_kit_estoque_p bigint, nr_atendimento_p bigint, nr_seq_atepacu_p bigint, ie_local_estoque_p text, nm_usuario_p text, cd_local_estoque_p bigint, ds_retorno_p INOUT text) AS $body$
DECLARE



nr_sequencia_w			bigint;
cd_local_estoque_w		smallint;
cd_material_w			integer;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
qt_material_w			double precision;
cd_unidade_medida_w		varchar(30);
ie_tipo_material_w			varchar(3);
dt_entrada_unidade_w		timestamp;
ie_via_aplicacao_w			varchar(5);
cd_setor_atendimento_w		integer;
cd_perfil_w			bigint;
ds_observacao_w			varchar(2000);
nr_doc_convenio_w		varchar(20);
ie_tipo_guia_w			varchar(2);
cd_senha_w			varchar(20);
nr_seq_lote_fornec_w		bigint;
cd_kit_material_w			integer;
cd_local_estoque_ww		smallint;
ds_erro_w			varchar(255);
ie_local_estoque_w			varchar(255);
cd_setor_usuario_w			integer;
qt_existe_w			bigint;
dt_atendimento_w			timestamp;
dt_conta_w			timestamp;
nr_prescricao_w			bigint;
ie_local_estoque_geracao_w		varchar(1);
ie_consiste_devol_w		varchar(1);
qt_mat_saldo_w			double precision;
nr_seq_item_kit_w			kit_estoque_comp.nr_seq_item_kit%type;
cd_material_prescricao_w	material_atend_paciente.cd_material_prescricao%type;
nr_sequencia_prescricao_w	material_atend_paciente.nr_sequencia_prescricao%type;
dt_prescricao_w				material_atend_paciente.dt_prescricao%type;
ie_consiste_qt_mat_saldo_w			bigint;


c01 CURSOR FOR
	SELECT	a.cd_material,
		a.qt_material,
		d.cd_unidade_medida_consumo,
		d.ie_via_aplicacao,		
		d.ie_tipo_material,
		a.nr_seq_lote_fornec,
		b.cd_kit_material,
		a.nr_seq_item_kit
	from	material d,
		kit_estoque b,
		kit_estoque_comp a
	where 	b.nr_sequencia = a.nr_seq_kit_estoque
	and 	a.cd_material = d.cd_material
	and 	a.nr_seq_kit_estoque = nr_seq_kit_estoque_p
	and 	(b.dt_utilizacao IS NOT NULL AND b.dt_utilizacao::text <> '')
	and		coalesce(a.dt_exclusao::text, '') = ''
	and 	coalesce(nr_seq_kit_estoque_p,0) > 0
	and 	d.ie_situacao = 'A';


BEGIN

select	count(*)
into STRICT	qt_existe_w
from	material_atend_paciente
where	nr_seq_kit_estoque = nr_seq_kit_estoque_p
and	nr_atendimento      = nr_atendimento_p;

if (coalesce(qt_existe_w, 0) = 0) then
	goto final;
end if;
	
cd_perfil_w			:= obter_perfil_ativo;
ie_local_estoque_geracao_w 	:= coalesce(obter_valor_param_usuario(24, 314, cd_perfil_w, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');
ie_consiste_devol_w		:= coalesce(obter_valor_param_usuario(24, 317, cd_perfil_w, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');

ds_observacao_w:= WHEB_MENSAGEM_PCK.get_texto(306004,'CD_PERFIL_W='|| CD_PERFIL_W ||';NR_SEQ_KIT_ESTOQUE_P='|| NR_SEQ_KIT_ESTOQUE_P);
		/*Perfil: #@CD_PERFIL_W#@ Kit de estoque: #@NR_SEQ_KIT_ESTOQUE_P#@*/

ie_local_estoque_w	:= elimina_acentuacao(upper(ie_local_estoque_p));
cd_setor_usuario_w	:= wheb_usuario_pck.get_cd_setor_atendimento;
if (coalesce(cd_setor_usuario_w,0)	<= 0) then
	cd_setor_usuario_w	:= null;
end if;

select 	dt_entrada_unidade,
	cd_setor_atendimento,
	obter_convenio_atendimento(nr_atendimento)
into STRICT	dt_entrada_unidade_w,
	cd_setor_atendimento_w,
	cd_convenio_w
from 	atend_paciente_unidade
where 	nr_atendimento = nr_atendimento_p
and 	nr_seq_interno = nr_seq_atepacu_p;

select	max(cd_categoria)
into STRICT	cd_categoria_w
from 	Atend_categoria_convenio a
where 	a.nr_atendimento	= nr_atendimento_p
and 	a.cd_convenio 		= cd_convenio_w
and 	a.dt_inicio_vigencia	= (	SELECT 	max(dt_inicio_vigencia)
					from 	Atend_categoria_convenio b
					where 	nr_atendimento = nr_atendimento_p
					and 	b.cd_convenio = cd_convenio_w);

begin
select 	nr_doc_convenio,
	ie_tipo_guia,
	cd_senha
into STRICT	nr_doc_convenio_w,
	ie_tipo_guia_w,
	cd_senha_w
from 	atend_categoria_convenio
where 	nr_atendimento = nr_atendimento_p
and 	dt_inicio_vigencia = 	(SELECT max(dt_inicio_vigencia)
				 from 	atend_categoria_convenio b
			         where 	nr_atendimento = nr_atendimento_p);
exception
	when others then
		nr_doc_convenio_w	:= '';
		cd_senha_w		:= '';
		ie_tipo_guia_w		:= '';
end;

cd_local_estoque_w	:= cd_local_estoque_p;

ds_erro_w  := 	'';

select	max(dt_atendimento),
	max(dt_conta)
into STRICT	dt_atendimento_w,
	dt_conta_w
from	material_atend_paciente
where	nr_seq_kit_estoque = nr_seq_kit_estoque_p
and	nr_atendimento = nr_atendimento_p;

open c01;
loop
fetch c01 into
	cd_material_w,
	qt_material_w,
	cd_unidade_medida_w,
	ie_via_aplicacao_w,		
	ie_tipo_material_w,
	nr_seq_lote_fornec_w,
	cd_kit_material_w,
	nr_seq_item_kit_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	if (coalesce(ds_erro_w, 'X') = 'X') then
		begin
		ie_consiste_qt_mat_saldo_w := 1;
		if (ie_consiste_devol_w = 'S') then
			begin
			select	sum(qt_material)
			into STRICT	qt_mat_saldo_w
			from	material_atend_paciente
			where	nr_seq_kit_estoque = nr_seq_kit_estoque_p
			and	nr_atendimento = nr_atendimento_p
			and 	cd_material = cd_material_w;			
			exception
				when others then
					qt_mat_saldo_w := 1;
			end;
			
			if (qt_mat_saldo_w < qt_material_w) then
				ie_consiste_qt_mat_saldo_w := 0;
			else
        ie_consiste_qt_mat_saldo_w := 1;
				qt_material_w:= qt_mat_saldo_w;
			end if;			
		end if;
    if (ie_consiste_qt_mat_saldo_w = 1) then

      begin
      select	max(nr_prescricao),
        max(cd_material_prescricao),
              max(nr_sequencia_prescricao),        
              max(dt_prescricao)
      into STRICT	nr_prescricao_w,
        cd_material_prescricao_w,
        nr_sequencia_prescricao_w,
        dt_prescricao_w
      from	material_atend_paciente
      where	nr_seq_kit_estoque = nr_seq_kit_estoque_p
      and	nr_atendimento = nr_atendimento_p
      and (coalesce(cd_material_prescricao, cd_material_exec) = cd_material_w or cd_material = cd_material_w)
      having	sum(qt_material) > 0;
      exception
        when others then
          nr_prescricao_w 		:= 0;
          cd_material_prescricao_w	:= null;
          nr_sequencia_prescricao_w	:= null;
          dt_prescricao_w			:= null;				
      end;

      select	nextval('material_atend_paciente_seq')
      into STRICT	nr_sequencia_w
;

      cd_local_estoque_ww		:= cd_local_estoque_w;
      if (obter_se_matkit_baixa_estoque(cd_material_w, cd_kit_material_w, nr_seq_item_kit_w) = 'N') then
        cd_local_estoque_ww	:= null;
      end if;

      if (ie_local_estoque_geracao_w = 'S') then
        select 	coalesce(max(cd_local_estoque),cd_local_estoque_ww)
        into STRICT	cd_local_estoque_ww
        from	material_atend_paciente
        where	nr_seq_kit_estoque  = nr_seq_kit_estoque_p
        and	nr_atendimento      = nr_atendimento_p
        and 	cd_material	    = cd_material_w
        and 	(nr_interno_conta IS NOT NULL AND nr_interno_conta::text <> '');			
      end if;


      begin	
      insert into material_atend_paciente(
        nr_sequencia,
        nr_atendimento,
        dt_entrada_unidade,
        cd_material,
        cd_material_exec,
        dt_conta,
        dt_atendimento,
        qt_material,
        qt_executada,
        dt_atualizacao,
        nm_usuario,
        cd_unidade_medida,
        cd_convenio,
        cd_categoria,
        cd_acao,
        cd_local_estoque,
        cd_setor_atendimento,
        ie_valor_informado,
        nm_usuario_original,
        cd_setor_receita,
        cd_situacao_glosa,
        nr_seq_atepacu,
        ie_auditoria,
        ie_via_aplicacao,
        ds_observacao,
        ie_guia_informada,
        ie_tipo_guia,
        nr_doc_convenio,
        nr_seq_lote_fornec,
        cd_senha,
        nr_seq_kit_estoque,
        nr_prescricao,
        cd_material_prescricao,
        nr_sequencia_prescricao,
        dt_prescricao)
      values (
        nr_sequencia_w,
        nr_atendimento_p,
        dt_entrada_unidade_w,
        cd_material_w,
        cd_material_w,
        dt_conta_w,
        dt_atendimento_w,
        qt_material_w * (-1),
        qt_material_w * (-1),
        clock_timestamp(),
        nm_usuario_p,
        cd_unidade_medida_w,
        cd_convenio_w,
        cd_categoria_w,
        '1',
        cd_local_estoque_ww,
        cd_setor_atendimento_w,
        'N',
        nm_usuario_p,
        cd_setor_atendimento_w,
        0,
        nr_seq_atepacu_p,
        'N',
        ie_via_aplicacao_w,
        ds_observacao_w,
        'N',
        ie_tipo_guia_w,
        nr_doc_convenio_w,
        nr_seq_lote_fornec_w,
        cd_senha_w,
        nr_seq_kit_estoque_p,
        CASE WHEN nr_prescricao_w=0 THEN null  ELSE nr_prescricao_w END ,
        cd_material_prescricao_w,
        nr_sequencia_prescricao_w,
        dt_prescricao_w);	
      exception
        when 	others then
        begin
        ds_erro_w  := substr(sqlerrm,1,255);
        nr_sequencia_w := 0;
        end;
      end;

    
      if (nr_sequencia_w > 0) then
        update	material_atend_paciente /*apos inserir deve atualizar o campo 'Kit' para n o ocorrer problemas nas rotinas da conta*/
        set	cd_kit_material		= cd_kit_material_w
        where	nr_sequencia		= nr_sequencia_w;

        CALL atualiza_preco_material(nr_sequencia_w, nm_usuario_p);
      end if;

      CALL gerar_autor_regra(nr_atendimento_p, nr_sequencia_w, null, null, null, null, 'EP', nm_usuario_p, null, null, null, null, null, null,'','','');
		
    end if;
		end;
	end if;
	end;
end loop;
close c01;

/* colocado por f bio e jonas, estorna o lan amento dos itens, caso em que o  ltimo item n o tenha estoque, por exemplo*/

if (coalesce(ds_erro_w, 'X') <> 'X') then
	rollback;
end if;

if (coalesce(nr_seq_kit_estoque_p,0) > 0) and (coalesce(ds_erro_w, 'X') = 'X') then
	update	kit_estoque
	set	dt_utilizacao	 = NULL,
		nm_usuario_util  = NULL,
		nr_atendimento	 = NULL
	where	nr_sequencia 	= nr_seq_kit_estoque_p;	
end if;

<<final>>

if (coalesce(qt_existe_w,0) = 0) then
	ds_retorno_p := Wheb_mensagem_pck.get_Texto(306006); /*'Este kit de estoque n o est  sendo utilizado neste atendimento !';*/
elsif (coalesce(ds_erro_w, 'X') <> 'X') then
	ds_retorno_p	:= substr(ds_erro_w,1,255);
elsif (coalesce(nr_sequencia_w,0)	> 0) then
	ds_retorno_p	:= Wheb_mensagem_pck.get_Texto(306008); /*'Kit de estoque devolvido com sucesso!!';*/
else
	ds_retorno_p	:= Wheb_mensagem_pck.get_Texto(306010); /*'Kit de estoque j  foi devolvido!!';*/
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE devolver_kit_estoque ( nr_seq_kit_estoque_p bigint, nr_atendimento_p bigint, nr_seq_atepacu_p bigint, ie_local_estoque_p text, nm_usuario_p text, cd_local_estoque_p bigint, ds_retorno_p INOUT text) FROM PUBLIC;

