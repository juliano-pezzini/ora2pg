-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_pls_conta_reemb ( nr_seq_fatura_p pls_fatura.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type default null, nr_seq_segurado_p pls_segurado.nr_sequencia%type DEFAULT NULL, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type DEFAULT NULL, nm_usuario_p usuario.nm_usuario%type DEFAULT NULL) AS $body$
DECLARE

	
nr_seq_conta_w			pls_conta.nr_sequencia%type;
cd_cooperativa_w		ptu_fatura.cd_unimed_destino%type;
cd_usuario_plano_imp_w		pls_conta.cd_usuario_plano_imp%type;
ie_tipo_guia_w			pls_conta.ie_tipo_guia%type := '4'; -- SP/SADT
ie_tipo_guia_tiss_w		pls_conta.ie_tipo_guia%type;
vl_material_imp_w		pls_conta_mat.vl_material_imp%type;
vl_procedimento_imp_w		pls_conta_proc.vl_procedimento_imp%type;
nr_versao_transacao_w		ptu_fatura.nr_versao_transacao%type;
ie_carater_atendimento_w	pls_conta.ie_carater_internacao%type;

C01 CURSOR(	nr_seq_fatura_pc	ptu_fatura.nr_sequencia%type,
			nr_seq_segurado_pc	pls_segurado.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_nota_cobr_rrs, --conta
		nr_lote, --conta
		nr_nota, --conta
		pls_obter_segurado_carteira(lpad(to_char(cd_unimed),4,'0')||id_benef,cd_estabelecimento_p) nr_seq_segurado, --conta
		cd_unimed, --conta
		id_benef, --conta
		nm_beneficiario, --conta
		dt_nasc, --conta
		tp_sexo, --conta
		id_rn, --conta
		dt_reembolso, -- conta
		tp_carater_atend, --conta
		tp_pessoa, --participante
		nr_cnpj_cpf, --participante
		nm_prestador, --participante
		null nr_autoriz, -- conta/servico
		nr_seq_prest_inter  -- conta
	from	ptu_nota_cobranca_rrs
	where	nr_seq_fatura	= nr_seq_fatura_pc
	and	pls_obter_segurado_carteira(lpad(to_char(cd_unimed),4,'0')||id_benef,cd_estabelecimento_p) = nr_seq_segurado_pc;

BEGIN

select	cd_unimed_destino,
	nr_versao_transacao
into STRICT	cd_cooperativa_w,
	nr_versao_transacao_w
from	ptu_fatura
where	nr_sequencia = nr_seq_fatura_p;

for r_C01_w in C01( nr_seq_fatura_p, nr_seq_segurado_p ) loop

	-- Se o PTU for da versão igual ou menor de 22, o tratamento será o antigo
	if (nr_versao_transacao_w <= 22) then
		select 	CASE WHEN r_C01_w.tp_carater_atend=1 THEN 'U'  ELSE 'E' END
		into STRICT 	ie_carater_atendimento_w 
		;
		
	--Se o PTU for da igual ou maior de 23, deverá ser realizado um novo tratamento para o campo ie_tipo_consulta e tratar o ie_carater_atendimento com seus respectivos valores novos.
	elsif (nr_versao_transacao_w >= 23) then
		select 	CASE WHEN r_C01_w.tp_carater_atend=1 THEN 'E' WHEN r_C01_w.tp_carater_atend=2 THEN 'U' END
		into STRICT 	ie_carater_atendimento_w 
		;
	end if;

	if (cd_cooperativa_w IS NOT NULL AND cd_cooperativa_w::text <> '') then
		cd_usuario_plano_imp_w	:= lpad(cd_cooperativa_w,4,'0') || r_C01_w.id_benef;
	end if;
	
	insert into pls_conta(nr_sequencia,			nm_usuario,			dt_atualizacao,
		nm_usuario_nrec,		dt_atualizacao_nrec,		nr_seq_protocolo,
		cd_estabelecimento,		cd_guia,			nr_seq_segurado,
		cd_usuario_plano_imp,		ie_status,			ie_tipo_guia,
		ie_recem_nascido,		ie_carater_internacao,		cd_senha,
		cd_senha_externa,		nm_segurado_imp,		dt_atendimento_referencia,
		nr_seq_nota_cobr_rrs,		nr_seq_fatura,			nr_seq_prest_inter,
		dt_emissao,			dt_documento)
	values (nextval('pls_conta_seq'),		nm_usuario_p,			clock_timestamp(),
		nm_usuario_p,			clock_timestamp(),			nr_seq_protocolo_p,
		cd_estabelecimento_p,		r_C01_w.nr_nota,		r_C01_w.nr_seq_segurado,
		cd_usuario_plano_imp_w,		'U',				ie_tipo_guia_w,
		r_C01_w.id_rn,			ie_carater_atendimento_w,	r_C01_w.nr_autoriz,
		r_C01_w.nr_autoriz,		r_C01_w.nm_beneficiario,	r_C01_w.dt_reembolso,
		r_C01_w.nr_seq_nota_cobr_rrs,	nr_seq_fatura_p,		r_C01_w.nr_seq_prest_inter,
		r_C01_w.dt_reembolso,		r_C01_w.dt_reembolso		) returning nr_sequencia into nr_seq_conta_w;
	
	CALL ptu_gerar_pls_proced_reemb( nr_seq_conta_w, r_C01_w.nr_seq_nota_cobr_rrs, nm_usuario_p, cd_estabelecimento_p);	

	select	sum(vl_procedimento_imp)
	into STRICT	vl_procedimento_imp_w
	from	pls_conta_proc
	where	nr_seq_conta	= nr_seq_conta_w;
	
	select	sum(vl_material_imp)
	into STRICT	vl_material_imp_w
	from	pls_conta_mat
	where	nr_seq_conta	= nr_seq_conta_w;

	-- Rotina para verificar a regra de qual o tipo da guia que sera a conta
	ie_tipo_guia_tiss_w := pls_obter_guia_tiss( nr_seq_conta_w, ie_tipo_guia_tiss_w);
	
	update	pls_conta
	set	vl_materiais_imp	= vl_material_imp_w,
		vl_procedimentos_imp	= vl_procedimento_imp_w,
		vl_total_imp		= coalesce(vl_procedimento_imp_w,0) + coalesce(vl_material_imp_w,0),
		ie_tipo_guia		= coalesce(ie_tipo_guia_tiss_w,ie_tipo_guia)
	where	nr_sequencia		= nr_seq_conta_w;
	
	update	pls_protocolo_conta
	set	nr_seq_segurado	= r_C01_w.nr_seq_segurado
	where	nr_sequencia	= nr_seq_protocolo_p;
	
	CALL pls_atualiza_valor_conta( nr_seq_conta_w, nm_usuario_p);
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_pls_conta_reemb ( nr_seq_fatura_p pls_fatura.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type default null, nr_seq_segurado_p pls_segurado.nr_sequencia%type DEFAULT NULL, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type DEFAULT NULL, nm_usuario_p usuario.nm_usuario%type DEFAULT NULL) FROM PUBLIC;

