-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_regra_wbarras_html5 ( nr_seq_regra_p bigint, cd_material_p bigint, qt_material_p bigint, nr_id_p bigint, ds_mensagem_p INOUT text, ie_regra_p INOUT text) AS $body$
DECLARE


ie_regra_valida_w				varchar(1);
cd_grupo_material_w				smallint;
cd_subgrupo_material_w			smallint;
cd_classe_material_w			integer;
ie_regra_w						varchar(1) 	:= null;
ds_mensagem_w					varchar(255)	:= null;
qt_material_w       			smallint;
qt_material_regra_w				smallint;
cd_grupo_material_cursor_w		smallint;
cd_subgrupo_material_cursor_w	smallint;
cd_classe_material_cursor_w		integer;
cd_material_cursor_w		    integer;
qt_material_tabela_w            double precision;

C03 CURSOR FOR
	SELECT	qt_material,
		ie_regra
	from	item_adic_cod_barra
	where	nr_seq_regra = nr_seq_regra_p
	order by qt_material,
		coalesce(cd_grupo_material,'99999999999'),
		coalesce(cd_subgrupo_material,'99999999999'),
		coalesce(cd_classe_material,'99999999999'),
		coalesce(cd_material,'99999999999');

c02 CURSOR FOR
SELECT	ie_regra,
        cd_grupo_material,
        cd_subgrupo_material,
        cd_classe_material,
        cd_material
from	item_adic_cod_barra
where	nr_seq_regra	= nr_seq_regra_p
and     (qt_material IS NOT NULL AND qt_material::text <> '')
order by
	coalesce(cd_grupo_material,'99999999999'),
	coalesce(cd_subgrupo_material,'99999999999'),
	coalesce(cd_classe_material,'99999999999'),
	coalesce(cd_material,'99999999999');

c01 CURSOR FOR
SELECT	ie_regra
from	item_adic_cod_barra
where	nr_seq_regra							= nr_seq_regra_p
and	coalesce(cd_grupo_material, cd_grupo_material_w)		= cd_grupo_material_w
and	coalesce(cd_subgrupo_material, cd_subgrupo_material_w)	= cd_subgrupo_material_w
and	coalesce(cd_classe_material, cd_classe_material_w)		= cd_classe_material_w
and	coalesce(cd_material, cd_material_p)				= cd_material_p
and coalesce(qt_material::text, '') = ''
and	ie_regra <> 'N'
order by
	nr_sequencia;


BEGIN
if (nr_seq_regra_p IS NOT NULL AND nr_seq_regra_p::text <> '') and (cd_material_p IS NOT NULL AND cd_material_p::text <> '') then

    insert into material_nrec_wbarras( nr_id,
                                        cd_material,
                                        qt_material,
                                        ds_material)
                               values (nr_id_p,
                                        cd_material_p,
                                        qt_material_p,
                                        substr(obter_desc_material(cd_material_p),1,255));

	/* obter se existe regra e regra ativa*/

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_regra_valida_w
	from	regra_item_adic_cod_barra
	where	nr_sequencia	= nr_seq_regra_p
	and	ie_situacao	= 'A';

	if (ie_regra_valida_w = 'S') then

		/* obter estrutura material */

		select	max(cd_grupo_material),
			max(cd_subgrupo_material),
			max(cd_classe_material)
		into STRICT	cd_grupo_material_w,
			cd_subgrupo_material_w,
			cd_classe_material_w
		from	estrutura_material_v
		where	cd_material = cd_material_p;

		open C03;
		loop
		fetch C03 into
			qt_material_regra_w,
			ie_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			if (qt_material_regra_w IS NOT NULL AND qt_material_regra_w::text <> '') then
				/* consistir regra qunatidade*/

				open c02;
				loop
				fetch c02 into
					ie_regra_w,
					cd_grupo_material_cursor_w,
					cd_subgrupo_material_cursor_w,
					cd_classe_material_cursor_w,
					cd_material_cursor_w;
				EXIT WHEN NOT FOUND; /* apply on c02 */
					begin

					select  sum(qt_material)
					into STRICT    qt_material_tabela_w
					from    material_nrec_wbarras
					where   obter_dados_material(cd_material_p,'CGRU')	= coalesce(cd_grupo_material_cursor_w,obter_dados_material(cd_material_p,'CGRU'))
					and	    obter_dados_material(cd_material_p,'CSUB')	= coalesce(cd_subgrupo_material_cursor_w,obter_dados_material(cd_material_p,'CSUB'))
					and	    obter_dados_material(cd_material_p,'CCLA')	= coalesce(cd_classe_material_cursor_w,obter_dados_material(cd_material_p,'CCLA'))
					and	    cd_material 								= coalesce(cd_material_p, cd_material)
					and     nr_ID = nr_id_p;

					select  max(qt_material),
							max(ie_regra)
					into STRICT    qt_material_w,
							ie_regra_w
					from	item_adic_cod_barra
					where	nr_seq_regra	= nr_seq_regra_p
					and     (qt_material IS NOT NULL AND qt_material::text <> '')
					and	    coalesce(cd_grupo_material,cd_grupo_material_w)                = cd_grupo_material_w
					and	    coalesce(cd_subgrupo_material , cd_subgrupo_material_w)        = cd_subgrupo_material_w
					and	    coalesce(cd_classe_material,cd_classe_material_w)              = cd_classe_material_w
					and	    coalesce(cd_material,cd_material_p) 		                      = cd_material_p;

					if (qt_material_w > 0) then
						if (ie_regra_w = 'N')then
							ie_regra_w := 'N';
							rollback;
							goto Sair;
						elsif (qt_material_tabela_w > qt_material_w) then
							rollback;
							ie_regra_w := 'N';
							goto Sair;
						else
							goto Sair;
						end if;
					else
						ie_regra_w := 'S';
					end if;
					end;
				end loop;
				close c02;

			else

				ie_regra_w := 'N';

				/* consistir regra */

				open c01;
				loop
				fetch c01 into
					ie_regra_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
					begin
					ie_regra_w := ie_regra_w;

					if (ie_regra_w in ('S','Q')) then
						goto Sair;
					elsif (ie_regra_w = 'N') then
						rollback;
						goto Sair;
					end if;
					end;
				end loop;
				close c01;

			end if;
			end;
		end loop;
		close C03;

        <<Sair>>
		/* obter mensagem regra */

		if (ie_regra_w = 'N') or (coalesce(ie_regra_w::text, '') = '') then
            rollback;
			select	max(ds_mensagem)
			into STRICT	ds_mensagem_w
			from	regra_item_adic_cod_barra
			where	nr_sequencia = nr_seq_regra_p;

		elsif (ie_regra_w = 'Q') then
			ie_regra_p	:= 'Q';
		else
			ds_mensagem_w := null;

		end if;

	end if;

end if;

ds_mensagem_p := ds_mensagem_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_regra_wbarras_html5 ( nr_seq_regra_p bigint, cd_material_p bigint, qt_material_p bigint, nr_id_p bigint, ds_mensagem_p INOUT text, ie_regra_p INOUT text) FROM PUBLIC;

