-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importa_fornecedor_sintese ( nr_cot_compra_p bigint, nm_usuario_p text) AS $body$
DECLARE



cd_tipo_pessoa_juridica_w     smallint;
nr_seq_fornecedor_w     bigint;
nr_cnpj_fornecedor_w      varchar(14);
nm_razao_social_w       varchar(50);
nm_fantasia_w       varchar(50);
nr_inscricao_estadual_w     varchar(20);
nr_inscricao_municipal_w      varchar(20);
ds_website_w        varchar(40);
ds_email_w        varchar(255);
qt_registros_w        bigint;
nr_seq_endereco_w     bigint;
nr_seq_telefone_w       bigint;
nm_logradouro_w       varchar(40);
id_unidade_federativa_w     varchar(2);
ds_complemento_logradouro_w   varchar(50);
nm_bairro_w       varchar(40);
nm_cidade_w       varchar(40);
nr_cep_w          varchar(15);
nr_telefone_w       varchar(40);
nr_ramal_w        bigint;
cd_estabelecimento_w      bigint;
ie_erro_w         varchar(1) := 'N';
cd_regra_w        smallint;
ie_atualiza_forn_w	varchar(1);

c01 CURSOR FOR
SELECT  nr_sequencia,
  nr_cnpj_fornecedor,
  nm_razao_social,
  nm_fantasia,
  nr_inscricao_estadual,
  nr_inscricao_municipal,
  substr(ds_website,1,40),
  ds_email,
  ie_atualiza_forn
from  w_sintese_fornec;

c02 CURSOR FOR
SELECT  cd_estabelecimento
from  estabelecimento
where ie_situacao = 'A';


BEGIN

delete from log_sintese
where coalesce(nr_cot_compra,0)  = coalesce(nr_cot_compra_p,0)
and ds_entidade = 'FORNECEDOR';

select  max(cd_tipo_pessoa_bionexo)
into STRICT  cd_tipo_pessoa_juridica_w
from  parametro_compras a;

if (coalesce(cd_tipo_pessoa_juridica_w,0) = 0) then
  select  min(cd_tipo_pessoa)
  into STRICT  cd_tipo_pessoa_juridica_w
  from  tipo_pessoa_juridica
  where ie_situacao = 'A';
end if;

if (cd_tipo_pessoa_juridica_w > 0) then

  open C01;
  loop
  fetch C01 into
    nr_seq_fornecedor_w,
    nr_cnpj_fornecedor_w,
    nm_razao_social_w,
    nm_fantasia_w,
    nr_inscricao_estadual_w,
    nr_inscricao_municipal_w,
    ds_website_w,
    ds_email_w,
    ie_atualiza_forn_w;
  EXIT WHEN NOT FOUND; /* apply on C01 */
    begin

    select  coalesce(max(nr_sequencia),0)
    into STRICT  nr_seq_endereco_w
    from  w_sintese_fornec_end
    where nr_seq_fornecedor = nr_seq_fornecedor_w;

    if (nr_seq_endereco_w > 0) then

      if (coalesce(length(nr_cnpj_fornecedor_w),0) <> 14) then
        CALL inserir_log_sintese('ERRO','FORNECEDOR',substr(wheb_mensagem_pck.get_texto(313430),1,255),'00001', null, nr_cnpj_fornecedor_w, nm_usuario_p);
        ie_erro_w := 'S';
      end if;

      if (coalesce(nm_razao_social_w::text, '') = '') then
        CALL inserir_log_sintese('ERRO','FORNECEDOR',substr(wheb_mensagem_pck.get_texto(313432),1,255), '00002', null, nr_cnpj_fornecedor_w, nm_usuario_p);
        ie_erro_w := 'S';
      end if;

      if (coalesce(nm_fantasia_w::text, '') = '') then
        CALL inserir_log_sintese('ERRO','FORNECEDOR',substr(wheb_mensagem_pck.get_texto(313433),1,255), '00003', null, nr_cnpj_fornecedor_w, nm_usuario_p);
        ie_erro_w := 'S';
      end if;

      select  substr(nm_logradouro,1,40),
        ds_complemento_logradouro,
        substr(nm_bairro,1,40),
        substr(nm_cidade,1,40),
        nr_cep,
        id_unidade_federativa
      into STRICT  nm_logradouro_w,
        ds_complemento_logradouro_w,
        nm_bairro_w,
        nm_cidade_w,
        nr_cep_w,
        id_unidade_federativa_w
      from  w_sintese_fornec_end
      where nr_sequencia = nr_seq_endereco_w;

      if (coalesce(nr_cep_w::text, '') = '') then
        CALL inserir_log_sintese('ERRO','FORNECEDOR',substr(wheb_mensagem_pck.get_texto(313434),1,255), '00004', null, nr_cnpj_fornecedor_w, nm_usuario_p);
        ie_erro_w := 'S';
      end if;

      if (coalesce(nm_logradouro_w::text, '') = '') then
        CALL inserir_log_sintese('ERRO','FORNECEDOR',substr(wheb_mensagem_pck.get_texto(313435),1,255), '00004', null, nr_cnpj_fornecedor_w, nm_usuario_p);
        ie_erro_w := 'S';
      end if;

      if (coalesce(nm_cidade_w::text, '') = '') then
        CALL inserir_log_sintese('ERRO','FORNECEDOR',substr(wheb_mensagem_pck.get_texto(313436),1,255), '00004', null, nr_cnpj_fornecedor_w, nm_usuario_p);
        ie_erro_w := 'S';
      end if;

      if (coalesce(id_unidade_federativa_w::text, '') = '') then
        CALL inserir_log_sintese('ERRO','FORNECEDOR',substr(wheb_mensagem_pck.get_texto(313437),1,255), '00004', null, nr_cnpj_fornecedor_w, nm_usuario_p);
        ie_erro_w := 'S';
      end if;

      select  coalesce(max(nr_sequencia),0)
      into STRICT  nr_seq_telefone_w
      from  w_sintese_fornec_tel
      where nr_seq_endereco = nr_seq_endereco_w;

      if (nr_seq_telefone_w > 0) then

        select  substr(nr_telefone,1,15),
          substr(somente_numero(nr_ramal),1,5)
        into STRICT  nr_telefone_w,
          nr_ramal_w
        from  w_sintese_fornec_tel
        where nr_sequencia = nr_seq_telefone_w;
      end if;
    else
      CALL inserir_log_sintese('ERRO','FORNECEDOR',substr(wheb_mensagem_pck.get_texto(313438),1,255), '00004', null, nr_cnpj_fornecedor_w, nm_usuario_p);
      ie_erro_w := 'S';
    end if;

    select  count(*)
    into STRICT  qt_registros_w
    from  pessoa_juridica
    where cd_cgc = nr_cnpj_fornecedor_w;

    if (qt_registros_w = 0) then

      if (ie_erro_w = 'N') then

        -- Verifica se há regra de pré cadastro para o tipo de pessoa juridica
        select coalesce(max(cd_tipo_pessoa),0)
          into STRICT cd_regra_w
          from ( SELECT cd_tipo_pessoa
                   from regra_pre_cad_pj
                  where cd_tipo_pessoa = cd_tipo_pessoa_juridica_w
                    and ie_exige_aprov_cadastro = 'S'

union

                 SELECT cd_tipo_pessoa
                   from regra_pre_cad_pj
                  where coalesce(cd_tipo_pessoa::text, '') = ''
                    and ie_exige_aprov_cadastro = 'S' ) alias5;

        -- Se houver, insere na tabela PRE_PESSOA_JURIDICA
        if cd_regra_w <> 0 then

          insert into pre_pessoa_juridica(
            cd_cgc,
            ds_razao_social,
            nm_fantasia,
            cd_cep,
            ds_endereco,
            ds_bairro,
            ds_municipio,
            sg_estado,
            dt_atualizacao,
            nm_usuario,
            ds_complemento,
            nr_telefone,
            nr_inscricao_estadual,
            cd_tipo_pessoa,
            ie_prod_fabric,
            ds_site_internet,
            ie_situacao,
            nr_inscricao_municipal,
            dt_atualizacao_nrec,
            nm_usuario_nrec,
            nm_usuario_lib,
            dt_liberacao,
            nr_sequencia)
          values ( nr_cnpj_fornecedor_w,
            nm_razao_social_w,
            nm_fantasia_w,
            nr_cep_w,
            nm_logradouro_w,
            nm_bairro_w,
            nm_cidade_w,
            id_unidade_federativa_w,
            clock_timestamp(),
            nm_usuario_p,
            ds_complemento_logradouro_w,
            nr_telefone_w,
            nr_inscricao_estadual_w,
            cd_tipo_pessoa_juridica_w,
            'N',
            ds_website_w,
            'A',
            nr_inscricao_estadual_w,
            clock_timestamp(),
            nm_usuario_p,
            nm_usuario_p,
            clock_timestamp(),
            nextval('pre_pessoa_juridica_seq'));

        else

          insert into pessoa_juridica(
            cd_cgc,
            ds_razao_social,
            nm_fantasia,
            cd_cep,
            ds_endereco,
            ds_bairro,
            ds_municipio,
            sg_estado,
            dt_atualizacao,
            nm_usuario,
            ds_complemento,
            nr_telefone,
            nr_inscricao_estadual,
            cd_tipo_pessoa,
            ie_prod_fabric,
            ds_site_internet,
            ie_situacao,
            nr_inscricao_municipal,
            dt_atualizacao_nrec,
            nm_usuario_nrec)
          values ( nr_cnpj_fornecedor_w,
            nm_razao_social_w,
            nm_fantasia_w,
            nr_cep_w,
            nm_logradouro_w,
            nm_bairro_w,
            nm_cidade_w,
            id_unidade_federativa_w,
            clock_timestamp(),
            nm_usuario_p,
            ds_complemento_logradouro_w,
            nr_telefone_w,
            nr_inscricao_estadual_w,
            cd_tipo_pessoa_juridica_w,
            'N',
            ds_website_w,
            'A',
            nr_inscricao_estadual_w,
            clock_timestamp(),
            nm_usuario_p);

        end if;

        open C02;
        loop
        fetch C02 into
          cd_estabelecimento_w;
        EXIT WHEN NOT FOUND; /* apply on C02 */

          if cd_regra_w <> 0 then

            begin
            insert into pre_pessoa_juridica_estab(
              nr_sequencia,
              cd_cgc,
              cd_estabelecimento,
              dt_atualizacao,
              nm_usuario,
              nr_ramal_contato,
              ds_email,
              dt_atualizacao_nrec,
              nm_usuario_nrec,
              ie_conta_dif_nf,
              nr_seq_pre_pj)
            values (nextval('pre_pessoa_juridica_estab_seq'),
              nr_cnpj_fornecedor_w,
              cd_estabelecimento_w,
              clock_timestamp(),
              nm_usuario_p,
              nr_ramal_w,
              ds_email_w,
              clock_timestamp(),
              nm_usuario_p,
              'N',
              currval('pre_pessoa_juridica_seq'));
            end;

          else

            begin
            insert into pessoa_juridica_estab(
              nr_sequencia,
              cd_cgc,
              cd_estabelecimento,
              dt_atualizacao,
              nm_usuario,
              nr_ramal_contato,
              ds_email,
              dt_atualizacao_nrec,
              nm_usuario_nrec,
              ie_conta_dif_nf)
            values ( nextval('pessoa_juridica_estab_seq'),
              nr_cnpj_fornecedor_w,
              cd_estabelecimento_w,
              clock_timestamp(),
              nm_usuario_p,
              nr_ramal_w,
              ds_email_w,
              clock_timestamp(),
              nm_usuario_p,
              'N');
            end;

          end if;

        end loop;
        close C02;
      end if;

    else
      if (ie_atualiza_forn_w = 'S' and ie_erro_w = 'N') then

        update  pessoa_juridica
        set ds_razao_social   = nm_razao_social_w,
          nm_fantasia   = nm_fantasia_w,
          cd_cep      = nr_cep_w,
          ds_endereco   = nm_logradouro_w,
          ds_bairro     = nm_bairro_w,
          ds_municipio    = nm_cidade_w,
          sg_estado   = id_unidade_federativa_w,
          dt_atualizacao    = clock_timestamp(),
          nm_usuario    = nm_usuario_p,
          ds_complemento    = ds_complemento_logradouro_w,
          nr_telefone   = nr_telefone_w,
          nr_inscricao_estadual = nr_inscricao_estadual_w,
          ds_site_internet    = ds_website_w,
          nr_inscricao_municipal  = nr_inscricao_estadual_w
        where cd_cgc      = nr_cnpj_fornecedor_w;

        update  pessoa_juridica_estab
        set dt_atualizacao    = clock_timestamp(),
          nm_usuario    = nm_usuario_p,
          nr_ramal_contato    = nr_ramal_w,
          ds_email      = ds_email_w
        where cd_cgc      = nr_cnpj_fornecedor_w;
      end if;
    end if;

    end;

  if (ie_erro_w = 'N') then
    CALL inserir_log_sintese('OK','FORNECEDOR',substr(wheb_mensagem_pck.get_texto(313439,'NR_CNPJ_FORNECEDOR=' || nr_cnpj_fornecedor_w),1,255), '', null, nr_cnpj_fornecedor_w, nm_usuario_p);
  end if;

  end loop;
  close C01;
end if;

delete  from w_sintese_fornec;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importa_fornecedor_sintese ( nr_cot_compra_p bigint, nm_usuario_p text) FROM PUBLIC;

