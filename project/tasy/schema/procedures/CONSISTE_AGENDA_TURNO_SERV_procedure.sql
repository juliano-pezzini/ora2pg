-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_agenda_turno_serv (nm_usuario_p text, cd_estabelecimento_p bigint, ie_dia_semana_p bigint, hr_inicial_p timestamp, hr_final_p timestamp, nr_seq_sala_p bigint, nr_seq_turno_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


ie_consiste_sala_turno_w varchar(1);
cd_agenda_w              agenda_turno.cd_agenda%type;
ds_erro_w                varchar(255) := '';
ds_agenda_w              agenda.ds_agenda%type;


BEGIN

ie_consiste_sala_turno_w := obter_param_usuario(866, 314, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_sala_turno_w);

if (ie_consiste_sala_turno_w = 'S') and (nr_seq_sala_p IS NOT NULL AND nr_seq_sala_p::text <> '') then
	select coalesce(max(cd_agenda),0)
	into STRICT cd_agenda_w
	from agenda_turno at
	where ((at.nr_sequencia <> nr_seq_turno_p) or (coalesce(nr_seq_turno_p::text, '') = ''))
	and ((at.ie_dia_semana = ie_dia_semana_p)
		 or ((at.ie_dia_semana = 9) and (ie_dia_semana_p not in (1,7)))
		 or ((ie_dia_semana_p = 9) and (at.ie_dia_semana not in (1,7)))
		 or (coalesce(ie_dia_semana_p::text, '') = ''))
	and at.nr_seq_sala = nr_seq_sala_p
	and (to_char(hr_inicial_p, 'hh24:mi:ss') >= (to_char(at.hr_inicial, 'hh24:mi:ss'))
		 or (to_char(hr_final_p, 'hh24:mi:ss')	>= to_char(at.hr_inicial, 'hh24:mi:ss')))
	and (to_char(hr_final_p, 'hh24:mi:ss')	<= (to_char(at.hr_final, 'hh24:mi:ss'))
		 or (to_char(hr_inicial_p, 'hh24:mi:ss') <= to_char(at.hr_final, 'hh24:mi:ss')))
	and ((coalesce(trunc(at.dt_inicio_vigencia)::text, '') = '' and coalesce(trunc(at.dt_final_vigencia)::text, '') = '')
		 or (trunc(at.dt_inicio_vigencia) <= trunc(clock_timestamp()) and coalesce(trunc(at.dt_final_vigencia)::text, '') = '')
		 or (coalesce(trunc(at.dt_inicio_vigencia)::text, '') = '' and trunc(at.dt_final_vigencia) >= trunc(clock_timestamp()))
		 or (trunc(at.dt_inicio_vigencia) <= trunc(clock_timestamp()) and trunc(at.dt_final_vigencia) >= trunc(clock_timestamp())));
		
	if (cd_agenda_w > 0) then
		select ds_agenda
		into STRICT ds_agenda_w
		from agenda
		where cd_agenda = cd_agenda_w;	
	
		ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(1096603,'DS_AGENDA='||ds_agenda_w||';CD_AGENDA_OCUP='||cd_agenda_w);
	end if;
end if;

ds_erro_p := ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_agenda_turno_serv (nm_usuario_p text, cd_estabelecimento_p bigint, ie_dia_semana_p bigint, hr_inicial_p timestamp, hr_final_p timestamp, nr_seq_sala_p bigint, nr_seq_turno_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

