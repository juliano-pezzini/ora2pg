-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE mprev_salvar_indicacao_web ( nr_seq_segurado_p bigint, nr_seq_prestador_web_p bigint, ds_observacao_p text, nr_ddd_contato_p bigint, nr_telefone_contato_p bigint, nr_seq_prest_indic_p bigint, ie_tipo_login_p text, nm_usuario_p text, ds_programas_p text, ds_campanhas_p text, ds_patologias_p text, ds_fatores_p text, nr_seq_indicacao_p INOUT bigint, nr_seq_demanda_p INOUT bigint) AS $body$
DECLARE




/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Salvar informações na indicação da medicina preventiva feitas pelo acesso do 
prestador e do beneficiário.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionário [ } Tasy (Delphi/Java) [  x] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


/*
IE_TIPO_LOGIN
P - Prestador
B - Beneficiário

NR_SEQ_PRESTADOR_WEB_P
Sequência do usuário prestador que esta logado no portal
*/
nr_seq_indicacao_w	mprev_indicacao_paciente.nr_sequencia%type;
nr_seq_demanda_w	mprev_demanda_espont.nr_sequencia%type;
cd_pessoa_fisica_w	pessoa_fisica.cd_pessoa_fisica%type;
nr_seq_captacao_w	mprev_captacao.nr_sequencia%type;
ds_sequencia_w		varchar(20);
ds_temp_w		varchar(2);

nr_seq_demanda_old_w	mprev_captacao.nr_sequencia%type;
nr_seq_indicacao_old_w	mprev_indicacao_paciente.nr_sequencia%type;

c01 CURSOR FOR
	SELECT	nr_sequencia
	from	mprev_demanda_espont 
	where	nm_usuario = nm_usuario_p 
	and	coalesce(dt_confirmacao::text, '') = '' 
	and	nr_seq_segurado = nr_seq_segurado_p
	and	ie_origem = 'P';
	
c02 CURSOR FOR
	SELECT	nr_sequencia
	from	mprev_indicacao_paciente
	where	nm_usuario = nm_usuario_p
	and	coalesce(dt_confirmacao::text, '') = '' 
	and	cd_pessoa_fisica = cd_pessoa_fisica_w
	and	nr_seq_prestador_web = nr_seq_prestador_web_p;

BEGIN

select	cd_pessoa_fisica
into STRICT	cd_pessoa_fisica_w
from 	pls_segurado
where	nr_sequencia = nr_seq_segurado_p;

if (coalesce(nr_seq_prestador_web_p::text, '') = '') then
	
	open c01;
	loop
	fetch c01 into
		nr_seq_demanda_old_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		delete 	FROM mprev_captacao_diagnostico
		where	nr_seq_captacao in (	SELECT	nr_sequencia
						from	mprev_captacao
						where	nr_seq_demanda_espont = nr_seq_demanda_old_w);

		delete 	FROM mprev_captacao_destino
		where	nr_seq_captacao in (	SELECT	nr_sequencia
						from	mprev_captacao
						where	nr_seq_demanda_espont = nr_seq_demanda_old_w);

		delete	FROM mprev_captacao
		where	nr_seq_demanda_espont = nr_seq_demanda_old_w;

		delete  FROM mprev_demanda_espont
		where	nr_sequencia = nr_seq_demanda_old_w;
		
		end;
	end loop;
	close c01;
	
	commit;
	
	select  nextval('mprev_demanda_espont_seq')
	into STRICT	nr_seq_demanda_w
	;
	
	insert into  	mprev_demanda_espont(  nr_sequencia, dt_atualizacao, nm_usuario,
						dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_segurado,
						cd_pessoa_fisica, dt_solicitacao, nr_ddd_contato,
						nr_telefone_contato, ds_observacao, ie_origem)
					values ( nr_seq_demanda_w, clock_timestamp(), nm_usuario_p,
						clock_timestamp(), nm_usuario_p, nr_seq_segurado_p,
						cd_pessoa_fisica_w, clock_timestamp(), nr_ddd_contato_p,
						nr_telefone_contato_p, ds_observacao_p, 'P');

	nr_seq_captacao_w := mprev_gerar_captacao_demanda(nr_seq_demanda_w, nm_usuario_p, nr_seq_captacao_w, 'S');
else
	
	open c02;
	loop
	fetch c02 into
		nr_seq_indicacao_old_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		
		delete 	FROM mprev_captacao_diagnostico
		where	nr_seq_captacao in (	SELECT	nr_sequencia
						from	mprev_captacao
						where	nr_seq_indicacao = nr_seq_indicacao_old_w);

		delete 	FROM mprev_captacao_destino
		where	nr_seq_captacao in (	SELECT	nr_sequencia
						from	mprev_captacao
						where	nr_seq_indicacao = nr_seq_indicacao_old_w);

		delete	FROM mprev_captacao
		where	nr_seq_indicacao = nr_seq_indicacao_old_w;

		delete  FROM mprev_indicacao_paciente
		where	nr_sequencia = nr_seq_indicacao_old_w;		
			
		end;
	end loop;
	close c02;
	commit;
	
	select	nextval('mprev_indicacao_paciente_seq')
	into STRICT	nr_seq_indicacao_w
	;

	insert into  mprev_indicacao_paciente(  nr_sequencia, dt_atualizacao, nm_usuario,
						dt_atualizacao_nrec, nm_usuario_nrec, cd_pessoa_fisica,
						nr_ddd_contato, nr_telefone_contato, dt_indicacao,
						nr_seq_prest_indic, cd_setor_indic, cd_pessoa_indicante,
						ds_observacao, dt_confirmacao, nm_usuario_confirmacao,
						nr_seq_prestador_web)
					values (	nr_seq_indicacao_w, clock_timestamp(), nm_usuario_p,
						clock_timestamp(), nm_usuario_p, cd_pessoa_fisica_w,
						nr_ddd_contato_p, nr_telefone_contato_p, clock_timestamp(),			
						nr_seq_prest_indic_p, null, null,			
						ds_observacao_p, null, null, 
						nr_seq_prestador_web_p);
					
	nr_seq_captacao_w  := mprev_gerar_captacao_indicacao(nr_seq_indicacao_w, nm_usuario_p, nr_seq_captacao_w );
end if;
										
commit;

if ((ds_programas_p IS NOT NULL AND ds_programas_p::text <> '') and coalesce(length(ds_programas_p), 0) > 0) then
	-- Programas
	for i in 1..length(ds_programas_p) loop
		begin

			ds_temp_w := substr(ds_programas_p, i, 1);
			if (ds_temp_w = ';') then
				insert	into	mprev_captacao_destino( nr_sequencia, dt_atualizacao, nm_usuario,
									dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_captacao,
									nr_seq_programa)
								values (nextval('mprev_captacao_destino_seq'), clock_timestamp(), nm_usuario_p,
									clock_timestamp(), nm_usuario_p, nr_seq_captacao_w,
									(ds_sequencia_w)::numeric );
			
				ds_sequencia_w := '';
			else
				ds_sequencia_w := ds_sequencia_w ||ds_temp_w;
			end if;
		end;
	end loop;
end if;

if ((ds_campanhas_p IS NOT NULL AND ds_campanhas_p::text <> '') and coalesce(length(ds_campanhas_p), 0) > 0) then
	-- Campanhas
	ds_sequencia_w := '';
	
	for i in 1..length(ds_campanhas_p) loop
		begin
			ds_temp_w := substr(ds_campanhas_p, i, 1);
			if (ds_temp_w = ';') then
				insert	into	mprev_captacao_destino( nr_sequencia, dt_atualizacao, nm_usuario,
									dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_captacao,
									nr_seq_campanha)
								values (nextval('mprev_captacao_destino_seq'), clock_timestamp(), nm_usuario_p,
									clock_timestamp(), nm_usuario_p, nr_seq_captacao_w,
									(ds_sequencia_w)::numeric );
			
				ds_sequencia_w := '';
			else
				ds_sequencia_w := ds_sequencia_w ||ds_temp_w;
			end if;
		end;
	end loop;
end if;

if ( (ds_patologias_p IS NOT NULL AND ds_patologias_p::text <> '') and coalesce(length(ds_patologias_p), 0) > 0) then
	-- Patologia
	ds_sequencia_w := '';
	
	for i in 1..length(ds_patologias_p) loop
		begin
			ds_temp_w := substr(ds_patologias_p, i, 1);
			if (ds_temp_w = ';') then
				insert	into mprev_captacao_diagnostico( nr_sequencia, dt_atualizacao, nm_usuario,
									 dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_captacao,
									 ie_patologia_fator_risco, nr_seq_diagnostico_int)
								 values ( nextval('mprev_captacao_diagnostico_seq'), clock_timestamp(), nm_usuario_p,
									 clock_timestamp(), nm_usuario_p, nr_seq_captacao_w,
									 'P', (ds_sequencia_w)::numeric );
				ds_sequencia_w := '';
			else
				ds_sequencia_w := ds_sequencia_w ||ds_temp_w;
			end if;
		end;
	end loop;
end if;

if ( (ds_fatores_p IS NOT NULL AND ds_fatores_p::text <> '') and coalesce(length(ds_fatores_p), 0) > 0) then
	-- Fator de risco
	ds_sequencia_w := '';
	
	for i in 1..length(ds_fatores_p) loop
		begin
			ds_temp_w := substr( ds_fatores_p , i, 1);
			if (ds_temp_w = ';') then			
				insert	into	mprev_captacao_diagnostico( nr_sequencia, dt_atualizacao, nm_usuario,
									    dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_captacao,
									    ie_patologia_fator_risco, nr_seq_diagnostico_int)
								    values ( nextval('mprev_captacao_diagnostico_seq'), clock_timestamp(), nm_usuario_p,
									    clock_timestamp(), nm_usuario_p, nr_seq_captacao_w,
									    'F', (ds_sequencia_w)::numeric );
				ds_sequencia_w := '';
				
			else
				ds_sequencia_w := ds_sequencia_w ||ds_temp_w;
			end if;
		end;
	end loop;
end if;

commit;

nr_seq_demanda_p := nr_seq_demanda_w;
nr_seq_indicacao_p := nr_seq_indicacao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_salvar_indicacao_web ( nr_seq_segurado_p bigint, nr_seq_prestador_web_p bigint, ds_observacao_p text, nr_ddd_contato_p bigint, nr_telefone_contato_p bigint, nr_seq_prest_indic_p bigint, ie_tipo_login_p text, nm_usuario_p text, ds_programas_p text, ds_campanhas_p text, ds_patologias_p text, ds_fatores_p text, nr_seq_indicacao_p INOUT bigint, nr_seq_demanda_p INOUT bigint) FROM PUBLIC;

