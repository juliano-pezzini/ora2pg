-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE conv_ret_item_t AS (	
				nr_sequencia			convenio_retorno_item.nr_sequencia%type,				
				vl_pago 			convenio_retorno_item.vl_pago%type,
				vl_adicional			convenio_retorno_item.vl_adicional%type,
				vl_vinculacao			double precision,
				vl_saldo			double precision);
CREATE TYPE conv_ret_receb_t AS (	
				nr_seq_receb			convenio_ret_receb.nr_seq_receb%type,				
				VL_VINCULACAO 			convenio_ret_receb.VL_VINCULACAO%type,
				vl_saldo_receb			double precision,
				vl_total_notas			double precision);
CREATE TYPE retorno_receb_nota_t AS (	
				nr_seq_receb			convenio_ret_receb.nr_seq_receb%type,				
				vl_total_nota			nota_fiscal.vl_total_nota%type,
				vl_saldo_nota			double precision,
				vl_vinculado			double precision,
				nr_nota_fiscal			nota_fiscal.nr_nota_fiscal%type,
				nr_seq_nota			nota_fiscal.nr_sequencia%type);


CREATE OR REPLACE PROCEDURE gerar_ret_receb_guia (NR_SEQ_RETORNO_P bigint, ie_estorno_p text default 'N', nm_usuario_p text DEFAULT NULL) AS $body$
DECLARE


type	conv_ret_item_v is table of conv_ret_item_t index by integer;
conv_ret_item_w		conv_ret_item_v;

type	conv_ret_receb_v is table of conv_ret_receb_t index by integer;
conv_ret_receb_w		conv_ret_receb_v;

type	retorno_receb_nota_v is table of retorno_receb_nota_t index by integer;
retorno_receb_nota_w		retorno_receb_nota_v;

i integer;
j integer;
x integer;
vl_soma_nota_w		double precision := 0;
qt_conv_ret_receb_w 	integer := 0;
vl_descontos_tributos_w		double precision := 0;
								
  r RECORD;

BEGIN
i := 0;
conv_ret_receb_w.delete;
conv_ret_item_w.delete;


if	ie_estorno_p = 'N' then

	for	r in (	SELECT	nr_sequencia,
				coalesce(vl_pago,0) vl_pago,
				coalesce(vl_adicional,0) vl_adicional
			from 	convenio_retorno_item
			where 	nr_seq_retorno = nr_seq_retorno_p
			and	coalesce(vl_pago,0) + coalesce(vl_adicional,0) > 0
			order by nr_titulo, coalesce(vl_pago,0) + coalesce(vl_adicional,0) desc) loop
			
			
		conv_ret_item_w[i].nr_sequencia 	:= r.nr_sequencia;
		conv_ret_item_w[i].vl_pago 		:= r.vl_pago;
		conv_ret_item_w[i].vl_adicional 	:= r.vl_adicional;
		conv_ret_item_w[i].vl_saldo 		:= r.vl_pago + r.vl_adicional;
		conv_ret_item_w[i].vl_vinculacao 	:= 0;
		i := i + 1;
	end loop;

	i := 0;
	j := 0;
	if	conv_ret_item_w.count > 0 then
		
		for	x in (	SELECT 	nr_seq_receb,
					vl_vinculacao
				from	convenio_ret_receb
				where	nr_seq_retorno = nr_seq_retorno_p
				order by vl_vinculacao desc) loop
			
			
			conv_ret_receb_w[i].nr_seq_receb   := x.nr_seq_receb;
			conv_ret_receb_w[i].vl_vinculacao  := x.vl_vinculacao;
			conv_ret_receb_w[i].vl_saldo_receb := x.vl_vinculacao;
			conv_ret_receb_w[i].vl_total_notas := 0;
			
			vl_soma_nota_w  := 0;
			
			for	r in (	SELECT 	N.NR_SEQUENCIA,
						N.NR_NOTA_FISCAL,
						N.VL_MERCADORIA,
						N.VL_TOTAL_NOTA,
						(substr(obter_dados_nota_fiscal(N.NR_SEQUENCIA,'6'),1,15))::numeric  vl_nota
					FROM	NOTA_FISCAL N,
						CONVENIO_RECEB_NF C
					WHERE	C.NR_SEQ_NOTA_FISCAL = N.NR_SEQUENCIA
					AND	C.NR_SEQ_RECEB = x.nr_seq_receb
					order by vl_nota desc) loop
					
					vl_descontos_tributos_w := r.vl_mercadoria - r.vl_total_nota;
					
					if (vl_descontos_tributos_w < 0) then
						vl_descontos_tributos_w := 0;
					end if;
					
					vl_soma_nota_w := vl_soma_nota_w + r.vl_nota + vl_descontos_tributos_w;
					
					if	vl_soma_nota_w > conv_ret_receb_w[i].vl_vinculacao then
						
						if	r.vl_nota = vl_soma_nota_w then
							
							retorno_receb_nota_w[j].vl_saldo_nota 	:= conv_ret_receb_w[i].vl_vinculacao;
							
						else
						
							retorno_receb_nota_w[j].vl_saldo_nota 	:= conv_ret_receb_w[i].vl_vinculacao - (vl_soma_nota_w - r.vl_nota);	
							
						end if;
					else	
						retorno_receb_nota_w[j].vl_saldo_nota 	:= r.vl_nota;
					end if;
					
					retorno_receb_nota_w[j].nr_seq_receb 	:= x.nr_seq_receb;
					retorno_receb_nota_w[j].vl_total_nota	:= r.vl_nota;
					retorno_receb_nota_w[j].vl_vinculado	:= 0;
					retorno_receb_nota_w[j].nr_nota_fiscal	:= r.nr_nota_fiscal;
					retorno_receb_nota_w[j].nr_seq_nota	:= r.NR_SEQUENCIA;
					j := j + 1;
			end loop;
			conv_ret_receb_w[i].vl_total_notas := conv_ret_receb_w[i].vl_total_notas + vl_soma_nota_w;
			
			i := i + 1;
		end loop;
		i := 0;
		j := 0;
		x := 0;
		qt_conv_ret_receb_w := conv_ret_receb_w.count;
		if	qt_conv_ret_receb_w > 0 then
		
			FOR i IN conv_ret_receb_w.first ..conv_ret_receb_w.last LOOP
			
				
				if	conv_ret_receb_w[i].vl_saldo_receb > 0 then
					
					if (retorno_receb_nota_w.count > 0 and
						conv_ret_receb_w[i].vl_total_notas >= conv_ret_receb_w[i].vl_vinculacao) then
					
					
						for	x in retorno_receb_nota_w.first .. retorno_receb_nota_w.last loop
						
							if	conv_ret_receb_w[i].nr_seq_receb = retorno_receb_nota_w[x].nr_seq_receb and
								retorno_receb_nota_w[x].vl_saldo_nota > 0 then
						
								for	j in conv_ret_item_w.first ..conv_ret_item_w.last LOOP
								
									if	conv_ret_item_w[j].vl_saldo > 0 then	
										
										if	retorno_receb_nota_w[x].vl_saldo_nota > 	conv_ret_item_w[j].vl_saldo then
											retorno_receb_nota_w[x].vl_saldo_nota := retorno_receb_nota_w[x].vl_saldo_nota - conv_ret_item_w[j].vl_saldo;
											conv_ret_item_w[j].vl_vinculacao := conv_ret_item_w[j].vl_saldo;
											conv_ret_receb_w[i].vl_saldo_receb := conv_ret_receb_w[i].vl_saldo_receb - conv_ret_item_w[j].vl_vinculacao;
											conv_ret_item_w[j].vl_saldo := 0;
										else
											conv_ret_item_w[j].vl_saldo := conv_ret_item_w[j].vl_saldo - retorno_receb_nota_w[x].vl_saldo_nota;
											conv_ret_item_w[j].vl_vinculacao := retorno_receb_nota_w[x].vl_saldo_nota;
											conv_ret_receb_w[i].vl_saldo_receb := conv_ret_receb_w[i].vl_saldo_receb - conv_ret_item_w[j].vl_vinculacao;
											retorno_receb_nota_w[x].vl_saldo_nota := 0;
										end if;
										
										if	conv_ret_item_w[j].vl_vinculacao > 0 then
										
											insert	into convenio_ret_receb_guia(
												NR_SEQUENCIA,
												DT_ATUALIZACAO,
												NM_USUARIO,
												NR_SEQ_RET_ITEM,
												VL_VINCULADO,
												NR_SEQ_RECEBIMENTO,
												NR_SEQ_NOTA_RECEB)
											VALUES (	nextval('convenio_ret_receb_guia_seq'),
												clock_timestamp(), 
												nm_usuario_p,
												conv_ret_item_w[j].nr_sequencia,
												conv_ret_item_w[j].vl_vinculacao,
												conv_ret_receb_w[i].nr_seq_receb,
												retorno_receb_nota_w[x].nr_seq_nota);
										
										end if;

									end if;
								
								end loop;
							
							end if;
						
						end loop;
					else
					
						FOR i IN conv_ret_receb_w.first ..conv_ret_receb_w.last LOOP

				
						if	conv_ret_receb_w[i].vl_saldo_receb > 0 then
							
							
							for	j in conv_ret_item_w.first ..conv_ret_item_w.last LOOP
							
								if	conv_ret_item_w[j].vl_saldo > 0 then	
									
									if	conv_ret_receb_w[i].vl_saldo_receb > 	conv_ret_item_w[j].vl_saldo then
										conv_ret_receb_w[i].vl_saldo_receb := conv_ret_receb_w[i].vl_saldo_receb - conv_ret_item_w[j].vl_saldo;
										conv_ret_item_w[j].vl_vinculacao := conv_ret_item_w[j].vl_saldo;
										
										conv_ret_item_w[j].vl_saldo := 0;
									else
										conv_ret_item_w[j].vl_saldo := conv_ret_item_w[j].vl_saldo - conv_ret_receb_w[i].vl_saldo_receb;
										conv_ret_item_w[j].vl_vinculacao := conv_ret_receb_w[i].vl_saldo_receb;
										
										conv_ret_receb_w[i].vl_saldo_receb := 0;
									end if;
									
									if	conv_ret_item_w[j].vl_vinculacao > 0 then
									
										insert	into convenio_ret_receb_guia(
											NR_SEQUENCIA,
											DT_ATUALIZACAO,
											NM_USUARIO,
											NR_SEQ_RET_ITEM,
											VL_VINCULADO,
											NR_SEQ_RECEBIMENTO)
										VALUES (	nextval('convenio_ret_receb_guia_seq'),
											clock_timestamp(), 
											nm_usuario_p,
											conv_ret_item_w[j].nr_sequencia,
											conv_ret_item_w[j].vl_vinculacao,
											conv_ret_receb_w[i].nr_seq_receb);
									
									end if;

								end if;
							
							end loop;
						end if;	
					
					END LOOP;	
					
					end if;
				end if;	
			
			END LOOP;	
				
			
		end if;

	end if;
else

	for r in (select a.VL_VINCULADO,
			 x.nr_sequencia,
			 a.NR_SEQ_RECEBIMENTO,
			 a.nr_seq_nota_receb
		from	convenio_ret_receb_guia a,
			convenio_retorno_item x
		where	a.nr_seq_ret_item = x.nr_seq_ret_item_est
		and	x.nr_seq_retorno = nr_seq_retorno_p
		order by a.nr_sequencia) loop
		
		
		insert	into convenio_ret_receb_guia(
			NR_SEQUENCIA,
			DT_ATUALIZACAO,
			NM_USUARIO,
			NR_SEQ_RET_ITEM,
			VL_VINCULADO,
			NR_SEQ_RECEBIMENTO,
			NR_SEQ_NOTA_RECEB)
		VALUES (	nextval('convenio_ret_receb_guia_seq'),
			clock_timestamp(), 
			nm_usuario_p,
			r.nr_sequencia,
			r.vl_vinculado * -1,
			r.NR_SEQ_RECEBIMENTO,
			r.nr_seq_nota_receb);
	
	end loop;
end if;



END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ret_receb_guia (NR_SEQ_RETORNO_P bigint, ie_estorno_p text default 'N', nm_usuario_p text DEFAULT NULL) FROM PUBLIC;

