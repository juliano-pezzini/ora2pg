-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_calc_tele_occupancy ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) AS $body$
DECLARE


-- Variables
pfcs_panel_seq_w						  pfcs_panel.nr_sequencia%type;
ds_active_status_w						varchar(15)  := 'ACTIVE';
ds_inactive_status_w					varchar(15)  := 'INACTIVE';
ds_dev_unknown_status_w				varchar(15)  := 'UNKNOWN';
ds_planned_status_w						varchar(15)  := 'PLANNED';
ds_arrived_status_w						varchar(15)  := 'ARRIVED';
ds_monitor_dev_type_w					varchar(10)  := 'Monitor';
ds_service_requested_w				varchar(10)  := 'E0403';
ie_active_w								    varchar(1)   := '1';
qt_available_beds_w						numeric(20)    := 0; --> Available Beds
qt_occupied_beds_w						numeric(20)    := 0; --> Occupied Beds
qt_blocked_unit_w						  numeric(20)    := 0; --> Blocked Beds
qt_total_w								    numeric(20)    := 0; --> Total Capacity
qt_discharge_unit_w						numeric(20)    := 0; --> Discharge Count
c01_fhir_status CURSOR FOR
    SELECT 'U' cd_status_fhir
    
union
 SELECT 'I' cd_status_fhir 
    
union
 select 'C' cd_status_fhir 
    
union
 select 'K' cd_status_fhir 
    
union
 select 'H' cd_status_fhir;

BEGIN
	qt_available_beds_w := 0; --> Available Beds
	qt_occupied_beds_w 	:= 0; --> Occupied Beds
	qt_blocked_unit_w 	:= 0; --> Blocked Beds
	qt_total_w			    := 0; --> Total Capacity
	qt_discharge_unit_w	:= 0; --> Discharge
  qt_occupied_beds_w	:= pfcs_get_tele_device_intg_v2(ds_monitor_dev_type_w, 'U', cd_estabelecimento_p);
  qt_total_w := qt_total_w + qt_occupied_beds_w;

  for c01_w in c01_fhir_status loop
    if (pfcs_get_bed_status(c01_w.cd_status_fhir, 'T', cd_estabelecimento_p, 'Y') = 'Y') then
      qt_total_w := qt_total_w + pfcs_get_tele_device_intg_v2(ds_monitor_dev_type_w, replace(c01_w.cd_status_fhir, 'U', 'Unoccupied'), cd_estabelecimento_p);
    end if;

     if (pfcs_get_bed_status(c01_w.cd_status_fhir, 'C', cd_estabelecimento_p, 'Y') = 'A') then
      qt_available_beds_w := qt_available_beds_w + pfcs_get_tele_device_intg_v2(ds_monitor_dev_type_w, replace(c01_w.cd_status_fhir, 'U', 'Unoccupied'), cd_estabelecimento_p);
    end if;

    if (pfcs_get_bed_status(c01_w.cd_status_fhir, 'C', cd_estabelecimento_p, 'Y') = 'B') then
      qt_blocked_unit_w := qt_blocked_unit_w + pfcs_get_tele_device_intg_v2(ds_monitor_dev_type_w, replace(c01_w.cd_status_fhir, 'U', 'Unoccupied'), cd_estabelecimento_p);
    end if;
  end loop;

	select	count(*) into STRICT qt_discharge_unit_w
	from	pfcs_service_request sr,
			pfcs_encounter enc,
			pfcs_patient pat,
			pfcs_encounter_identifier eid,
			pfcs_device pd,
			pfcs_organization org,
			pfcs_location loc
	where	sr.si_status = ds_active_status_w
	and		sr.cd_service = ds_service_requested_w
	and		sr.nr_seq_encounter = enc.nr_sequencia
	and		enc.si_status in (ds_planned_status_w, ds_arrived_status_w)
	and		eid.nr_seq_encounter = enc.nr_sequencia
	and		enc.nr_seq_patient = pat.nr_sequencia
	and		pat.ie_active = ie_active_w
	and		pat.nr_seq_organization = org.nr_sequencia
	and		org.cd_estabelecimento = (cd_estabelecimento_p)::numeric
	and		pat.nr_sequencia = pd.nr_seq_patient
	and		pd.si_status = ds_active_status_w
	and		pd.ds_device_type = ds_monitor_dev_type_w
	and     pd.nr_seq_location = loc.nr_sequencia;

     := pfcs_pck_v2.pfcs_generate_results(
		vl_indicator_p => qt_available_beds_w, vl_indicator_aux_p => qt_occupied_beds_w, vl_indicator_help_p => qt_blocked_unit_w, vl_indicator_assist_p => qt_discharge_unit_w, vl_indicator_collab_p => qt_total_w, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => cd_estabelecimento_p, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => pfcs_panel_seq_w);

	commit;

CALL pfcs_pck_v2.pfcs_activate_records(
        nr_seq_indicator_p => nr_seq_indicator_p,
        nr_seq_operational_level_p => cd_estabelecimento_p,
        nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_calc_tele_occupancy ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) FROM PUBLIC;

