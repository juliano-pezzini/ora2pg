-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_plano_agregado ( nr_seq_segurado_p bigint, nr_seq_beneficiario_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_plano_w			bigint;
nr_seq_tabela_w			bigint;
cd_estabelecimento_w		bigint;
cd_tipo_produto_w		varchar(3);
dt_contratacao_w		timestamp;
dt_reajuste_sca_w		timestamp;
ie_geracao_valores_w		varchar(10);
ie_lancamento_mensalidade_w	varchar(10);
qt_registros_w			bigint;
nr_seq_vinculo_sca_novo_w	bigint;

C01 CURSOR FOR
	SELECT	cd_tipo_produto
	from	ptu_benef_plano_agregado
	where	nr_seq_beneficiario	= nr_seq_segurado_p;
	
C02 CURSOR FOR
	SELECT	nr_seq_plano,
		nr_seq_tabela
	from	pls_regra_sca_imp_a100
	where	ie_tipo_classificacao_sca	= cd_tipo_produto_w
	and	dt_contratacao_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia,dt_contratacao_w);


BEGIN

select	dt_contratacao,
	cd_estabelecimento
into STRICT	dt_contratacao_w,
	cd_estabelecimento_w
from	pls_segurado
where	nr_sequencia	= nr_seq_beneficiario_p;

open C01;
loop
fetch C01 into
	cd_tipo_produto_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	nr_seq_plano_w		:= null;
	nr_seq_tabela_w		:= null;
	
	open c02;
	loop
	fetch c02 into	
		nr_seq_plano_w,
		nr_seq_tabela_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
	end loop;
	close c02;
	
	if (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') then
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_sca_vinculo
		where	nr_seq_segurado	= nr_seq_beneficiario_p
		and	nr_seq_plano	= nr_seq_plano_w  LIMIT 1;
		
		if (qt_registros_w = 0) then		
			select	dt_reajuste,
				ie_lancamento_mensalidade
			into STRICT	dt_reajuste_sca_w,
				ie_lancamento_mensalidade_w
			from	pls_plano
			where	nr_sequencia = nr_seq_plano_w;

			select	nextval('pls_sca_vinculo_seq')
			into STRICT	nr_seq_vinculo_sca_novo_w
			;
		
			insert into pls_sca_vinculo(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					nr_seq_segurado, nr_seq_tabela, ie_dependente, dt_inicio_vigencia, nr_seq_plano, 
					ds_observacao, ie_embutido_produto, dt_reajuste, ie_geracao_valores, 
					ie_lancamento_mensalidade, dt_inclusao_benef)
			values (	nr_seq_vinculo_sca_novo_w, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
					nr_seq_beneficiario_p, nr_seq_tabela_w, 'N', dt_contratacao_w, nr_seq_plano_w, 
					wheb_mensagem_pck.get_texto(1104293), 'N', dt_reajuste_sca_w, 'B', 
					ie_lancamento_mensalidade_w, dt_contratacao_w);
						
			CALL pls_duplicar_tabela_preco_sca(null,nr_seq_vinculo_sca_novo_w,nr_seq_tabela_w,'N',nm_usuario_p);
			CALL pls_liberar_vinculo_sca(null, null, nr_seq_vinculo_sca_novo_w, 'L', 'N', 'N', nm_usuario_p, cd_estabelecimento_w);
			CALL pls_gerar_valor_sca_segurado(nr_seq_beneficiario_p, 'C', null, nm_usuario_p, cd_estabelecimento_w);
		end if;
	end if;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_plano_agregado ( nr_seq_segurado_p bigint, nr_seq_beneficiario_p bigint, nm_usuario_p text) FROM PUBLIC;

