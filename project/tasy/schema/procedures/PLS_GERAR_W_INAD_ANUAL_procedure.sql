-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_w_inad_anual (nr_ano_p text, nr_mes_inicio_p text, nr_mes_fim_p text, ie_analitico_p text, nm_usuario_p text) AS $body$
DECLARE

				 
dt_mes_w		timestamp;
ie_ordem_w		bigint;
ie_tipo_receita_w	varchar(5);
ds_receita_w		varchar(80);
vl_receita_w		double precision;	
vl_jan_w	double precision;
vl_fev_w	double precision;
vl_mar_w	double precision;
vl_abr_w	double precision;
vl_mai_w	double precision;
vl_jun_w	double precision;
vl_jul_w	double precision;
vl_ago_w	double precision;
vl_set_w	double precision;
vl_out_w	double precision;
vl_nov_w	double precision;
vl_dez_w	double precision;

c01 CURSOR FOR 
SELECT	a.dt_mes 
from	mes_v a 
where	a.dt_mes between to_date('01/01/' || nr_ano_p,'dd/mm/yyyy') and to_date('31/12/' || nr_ano_p,'dd/mm/yyyy') 
and	a.dt_mes between to_date('01/' || nr_mes_inicio_p || '/' || nr_ano_p,'dd/mm/yyyy') and to_date('01/' || nr_mes_fim_p || '/' || nr_ano_p,'dd/mm/yyyy');

c02 CURSOR FOR 
SELECT	1 ie_ordem, 
	'VDPJ' ie_tipo_receita, 
	'Receitas VD - PJ' ds_tipo_receita 
 

union all
 
SELECT	2 ie_ordem, 
	'VDPF' ie_tipo_receita, 
	'Receitas VD - PF' ds_tipo_receita 
 

union all
 
select	3 ie_ordem, 
	'SP' ie_tipo_receita, 
	'Receitas SP' ds_tipo_receita 
 

union all
 
select	4 ie_ordem, 
	'TM' ie_tipo_receita, 
	'Total mês' ds_tipo_receita 
 

union all
 
select	5 ie_ordem, 
	'R12' ie_tipo_receita, 
	'Receitas últimos 12 meses' ds_tipo_receita 
 

union all
 
select	5 ie_ordem, 
	'I12' ie_tipo_receita, 
	'Inadimplência últimos 12 meses' ds_tipo_receita
;


BEGIN 
 
delete from w_pls_inad_anual 
where	nm_usuario	= nm_usuario_P;
 
if	((coalesce(nr_ano_p::text, '') = '') or (length(nr_ano_p) < 4)) then 
	RAISE EXCEPTION '%', 'Deve ser informado o ano com 4 dígitos.#@#@' USING ERRCODE = '45011';
end if;
 
if (coalesce(nr_mes_inicio_p::text, '') = '') then 
	RAISE EXCEPTION '%', 'Deve ser informado o mês de início#@#@' USING ERRCODE = '45011';
end if;
 
if (coalesce(nr_mes_fim_p::text, '') = '') then 
	RAISE EXCEPTION '%', 'Deve ser informado o mês final.#@#@' USING ERRCODE = '45011';
end if;
 
if (coalesce(ie_analitico_p,'N') = 'N') then 
 
	open c02;
	loop 
	fetch c02 into 
		ie_ordem_w, 
		ie_tipo_receita_w, 
		ds_receita_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
		open c01;
		loop 
		fetch c01 into	 
			dt_mes_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin 
			if (ie_tipo_receita_w = 'VDPJ') then 
				select	coalesce(sum(a.vl_resultado),0) 
				into STRICT	vl_receita_w 
				from	pls_resultado a 
				where	a.ie_tipo_valor	= 1 
				and	(a.cd_cgc_estipulante IS NOT NULL AND a.cd_cgc_estipulante::text <> '') 
				and	a.ie_preco = '1' 
				and	a.dt_mes_referencia	= dt_mes_w;
			elsif (ie_tipo_receita_w = 'VDPF') then 
				select	coalesce(sum(a.vl_resultado),0) 
				into STRICT	vl_receita_w 
				from	pls_resultado a 
				where	a.ie_tipo_valor	= 1 
				and	(a.cd_pf_estipulante IS NOT NULL AND a.cd_pf_estipulante::text <> '') 
				and	a.ie_preco = '1' 
				and	a.dt_mes_referencia	= dt_mes_w;
			elsif (ie_tipo_receita_w = 'SP') then 
				select	coalesce(sum(a.vl_resultado),0) 
				into STRICT	vl_receita_w 
				from	pls_resultado a 
				where	a.ie_tipo_valor	= 1 
				and	a.ie_preco <> '1' 
				and	a.dt_mes_referencia	= dt_mes_w;
			elsif (ie_tipo_receita_w = 'TM') then 
				select	coalesce(sum(a.vl_resultado),0) 
				into STRICT	vl_receita_w 
				from	pls_resultado a 
				where	a.ie_tipo_valor	= 1 
				and	a.dt_mes_referencia	= dt_mes_w;
			elsif (ie_tipo_receita_w = 'R12') then 
				select	coalesce(sum(a.vl_resultado),0) 
				into STRICT	vl_receita_w 
				from	pls_resultado a 
				where	a.ie_tipo_valor	= 1 
				and	a.dt_mes_referencia	>= add_months(dt_mes_w,-12);
			elsif (ie_tipo_receita_w = 'I12') then 
				select	coalesce(sum(vl_resultado),0) 
				into STRICT	vl_receita_w 
				from (SELECT	sum(obter_saldo_titulo_receber(a.nr_titulo,dt_mes_w)) vl_resultado 
					from	pls_mensalidade b, 
						titulo_receber a 
					where	a.nr_seq_mensalidade	= b.nr_sequencia 
					and	obter_saldo_titulo_receber(a.nr_titulo,dt_mes_w) > 0 
					and	b.dt_referencia	>= add_months(dt_mes_w,-12) 
					and	b.dt_referencia	<= last_day(dt_mes_w) 
					
union all
 
					SELECT	sum(obter_saldo_titulo_receber(a.nr_titulo,dt_mes_w)) vl_resultado 
					from	pls_mensalidade b, 
						titulo_receber a 
					where	a.nr_seq_mensalidade	= b.nr_sequencia 
					and	a.ie_situacao	= '2' 
					and	a.ie_liq_inadimplencia = 'S' 
					and	b.dt_referencia	>= add_months(dt_mes_w,-12) 
					and	b.dt_referencia	<= last_day(dt_mes_w) 
					) alias12;
			end if;
			 
			if (to_char(dt_mes_w,'mm') = '01') then 
				vl_jan_w	:= vl_receita_w;
			elsif (to_char(dt_mes_w,'mm') = '02') then 
				vl_fev_w	:= vl_receita_w;
			elsif (to_char(dt_mes_w,'mm') = '03') then 
				vl_mar_w	:= vl_receita_w;
			elsif (to_char(dt_mes_w,'mm') = '04') then 
				vl_abr_w	:= vl_receita_w;
			elsif (to_char(dt_mes_w,'mm') = '05') then 
				vl_mai_w	:= vl_receita_w;
			elsif (to_char(dt_mes_w,'mm') = '06') then 
				vl_jun_w	:= vl_receita_w;
			elsif (to_char(dt_mes_w,'mm') = '07') then 
				vl_jul_w	:= vl_receita_w;
			elsif (to_char(dt_mes_w,'mm') = '08') then 
				vl_ago_w	:= vl_receita_w;
			elsif (to_char(dt_mes_w,'mm') = '09') then 
				vl_set_w	:= vl_receita_w;
			elsif (to_char(dt_mes_w,'mm') = '10') then 
				vl_out_w	:= vl_receita_w;
			elsif (to_char(dt_mes_w,'mm') = '11') then 
				vl_nov_w	:= vl_receita_w;
			elsif (to_char(dt_mes_w,'mm') = '12') then 
				vl_dez_w	:= vl_receita_w;
			end if;
			end;
		end loop;
		close c01;
		 
		insert into w_pls_inad_anual(nr_sequencia, 
			nm_usuario, 
			dt_atualizacao, 
			nm_usuario_nrec, 
			dt_atualizacao_nrec, 
			ie_tipo_receita, 
			ds_receita, 
			vl_jan, 
			vl_fev, 
			vl_mar, 
			vl_abr, 
			vl_mai, 
			vl_jun, 
			vl_jul, 
			vl_ago, 
			vl_set, 
			vl_out, 
			vl_nov, 
			vl_dez, 
			ie_ordem) 
		values (nextval('w_pls_inad_anual_seq'), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			ie_tipo_receita_w, 
			ds_receita_w, 
			vl_jan_w, 
			vl_fev_w, 
			vl_mar_w, 
			vl_abr_w, 
			vl_mai_w, 
			vl_jun_w, 
			vl_jul_w, 
			vl_ago_w, 
			vl_set_w, 
			vl_out_w, 
			vl_nov_w, 
			vl_dez_w, 
			ie_ordem_w);
		end;
	end loop;
	close c02;
end if;	
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_w_inad_anual (nr_ano_p text, nr_mes_inicio_p text, nr_mes_fim_p text, ie_analitico_p text, nm_usuario_p text) FROM PUBLIC;

