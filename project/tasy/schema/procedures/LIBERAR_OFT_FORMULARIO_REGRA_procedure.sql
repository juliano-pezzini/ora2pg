-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_oft_formulario_regra ( nr_seq_regra_form_p bigint) AS $body$
DECLARE



required CURSOR FOR
	SELECT	substr(obter_desc_expressao(b.cd_exp_titulo) || ' ('||obter_desc_expressao(301758,'Visão')||': '||b.nr_sequencia||')',1,254) nm_tabela, a.nm_atributo
	from   	tabela_visao_atributo a,
				tabela_visao b,
				oft_formulario_item c
	where  	a.nr_sequencia = b.nr_sequencia
	and	   (a.nr_seq_apresent IS NOT NULL AND a.nr_seq_apresent::text <> '')
	and ((a.cd_exp_label IS NOT NULL AND a.cd_exp_label::text <> '') or (a.ds_label IS NOT NULL AND a.ds_label::text <> ''))
	and    	((obter_desc_expressao(a.cd_exp_label) <> ' ') or (a.ds_label <> ' '))
	and	   coalesce(a.ie_readonly,'N') = 'N'
	and	   a.nm_atributo not in ('IE_SITUACAO','NM_USUARIO_INATIVACAO','DT_LIBERACAO','NM_USUARIO','DT_ATUALIZACAO','DT_INATIVACAO','DS_JUSTIFICATIVA','DT_REGISTRO','DT_EXAME','DT_ANAMNESE')
	and (upper(substr(obter_tipo_atributo(a.nr_sequencia,a.nm_atributo),1,15)) in ('NUMBER','VARCHAR2','DATE') or (upper(ie_componente) in ('MTXOM','MTXPU','MTX','MTXOG','MTXPA','MTXIR','MTXMO','MTXME')))
	and	   not exists (	SELECT 	1
									from   	integridade_atributo c,
												integridade_referencial d
									where  	c.nm_tabela = d.nm_tabela
									and	   c.nm_integridade_referencial = d.nm_integridade_referencial
									and	   d.nm_tabela_referencia in ('ATENDIMENTO_PACIENTE','CIRURGIA','OFT_CONSULTA','PESSOA_FISICA','MEDICO','PRESCR_MEDICA')
									and	   c.nm_atributo = a.nm_atributo
									and    	c.nm_tabela = b.nm_tabela)
	and	  b.nr_sequencia = c.nr_seq_visao
	and	  c.nr_seq_regra_form = nr_seq_regra_form_p
	and	  coalesce(a.ie_obrigatorio,'N') = 'S'
	and	  coalesce(a.vl_padrao::text, '') = ''
	and	  not exists (select 1 from oft_formulario_item g where g.nr_seq_visao = c.nr_seq_visao and g.nm_atributo = a.nm_atributo and g.nr_seq_regra_form = c.nr_seq_regra_form);

duplicidy_diag CURSOR FOR
   SELECT count(1) qt_registro, 
         substr(obter_desc_expressao(b.cd_exp_titulo) || ' ('||obter_desc_expressao(301758,'Visão')||': '||b.nr_sequencia||')',1,254) nm_titulo,
         a.nm_atributo, 
         a.nr_seq_identificacao
   from   oft_formulario_item a,
         tabela_visao b
   where  nr_seq_regra_form = nr_seq_regra_form_p
   and    nr_seq_visao      = 86093
   group by a.nm_atributo, b.cd_exp_titulo, b.nr_sequencia, a.nr_seq_identificacao
   having count(1) > 1;

duplicidy CURSOR FOR
  SELECT count(1) qt_registro, 
         substr(obter_desc_expressao(b.cd_exp_titulo) || ' ('||obter_desc_expressao(301758,'Visão')||': '||b.nr_sequencia||')',1,254) nm_titulo,
         nm_atributo
  from   oft_formulario_item a,
         tabela_visao b
  where  a.nr_seq_regra_form  = nr_seq_regra_form_p
  and	   b.nr_sequencia       = a.nr_seq_visao
  and    a.nr_seq_visao       <> 86093
  group by a.nm_atributo, b.cd_exp_titulo, b.nr_sequencia
  having count(1) > 1;

   

dt_liberacao_w		timestamp;
nm_usuario_w		usuario.nm_usuario%type := wheb_usuario_pck.get_nm_usuario;
												
BEGIN

select	max(dt_liberacao)
into STRICT		dt_liberacao_w
from		oft_formulario_regra
where		nr_sequencia	=	nr_seq_regra_form_p;

if (coalesce(dt_liberacao_w::text, '') = '') then
	FOR c_required IN required LOOP
		begin
		CALL exibir_erro_abortar(wheb_mensagem_pck.get_texto(1038284,'nm_atributo_p=' || c_required.nm_atributo||';nm_tabela_p=' || c_required.nm_tabela),null);
		end;
	end loop;

   FOR c_duplicidy IN duplicidy LOOP
		begin
      if (c_duplicidy.qt_registro > 1) then
         CALL exibir_erro_abortar(wheb_mensagem_pck.get_texto(1087044,'nm_atributo_p=' || c_duplicidy.nm_atributo||';nm_titulo_p=' || c_duplicidy.nm_titulo),null);
      end if;
		end;
	end loop;

   FOR c_duplicidy_diag IN duplicidy_diag LOOP
		begin
      if (c_duplicidy_diag.qt_registro > 1) then
         CALL exibir_erro_abortar(wheb_mensagem_pck.get_texto(1087047,'nm_atributo_p=' || c_duplicidy_diag.nm_atributo||';nm_tabela_p=' || c_duplicidy_diag.nm_titulo||';nr_identificacao_p=' ||c_duplicidy_diag.nr_seq_identificacao),null);
      end if;
		end;
	end loop;
end if;
		

update	oft_formulario_regra
set		dt_liberacao 	=	CASE WHEN dt_liberacao_w = NULL THEN clock_timestamp()  ELSE null END ,
			nm_usuario		=	nm_usuario_w
where		nr_sequencia	=	nr_seq_regra_form_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_oft_formulario_regra ( nr_seq_regra_form_p bigint) FROM PUBLIC;

