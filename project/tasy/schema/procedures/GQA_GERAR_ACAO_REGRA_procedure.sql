-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gqa_gerar_acao_regra ( nr_seq_pend_regra_p bigint, nr_seq_pend_pac_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, ie_evento_p text default '0') AS $body$
DECLARE



nr_seq_acao_w			bigint;
nr_seq_protocolo_w		bigint;
nr_seq_proc_w			bigint;
nr_seq_proc_saps_w		bigint;
nr_seq_qua_doc_w		bigint;
ds_link_w				varchar(255);
ds_acao_w				varchar(255);		
nr_seq_pend_pac_acao_w	bigint;
ie_pessoa_destino_w		varchar(15);
nr_seq_equipe_w		bigint;
cd_especialidade_w		bigint;
cd_pessoa_fisica_dest_w	varchar(10);
nr_seq_evento_w		bigint;
nr_seq_superior_w		bigint;
nr_seq_superior_saps_w	bigint;
nr_seq_sup_proc_w		bigint;
nr_seq_sup_proc_saps_w	bigint;
cd_protocolo_w			bigint;
nr_prescricao_w		bigint;
nr_horas_validade_w		integer;
ie_profissional_w		varchar(10);
cd_pf_destino_w		varchar(10);
cd_pessoa_fisica_w		varchar(50);
ds_erro_w				varchar(2000);
ie_executar_w			varchar(5);
qt_sae_w				bigint;
qt_reg_saps_w			bigint;
nr_seq_sae_w			bigint;
qt_reg_w				bigint;
qt_itens_associados_w	bigint;
ie_gerar_prescr_sae_w	varchar(1) := 'N';
ie_liberar_prescr_farm_w	varchar(5);
nm_usuario_w             varchar(255) := null;
nr_seq_saps_w			bigint;
nr_seq_modelo_w			bigint;
ie_existe_pend_w		varchar(1) := 'N';
ie_verificar_pend_w		varchar(1);
ie_utilizado_pa_w		varchar(1) := 'N';
nr_prescricao_pa_w			bigint;
cd_doenca_w				gqa_acao.cd_doenca%TYPE;
nr_seq_interno_w		diagnostico_doenca.nr_seq_interno%TYPE;
data_diagnostico_w		timestamp;
NR_SEQ_MPREV_PROGRAMA_w	bigint;
qt_reg_mprev_w			bigint;
nr_seq_escala_w         bigint;
nr_seq_score_flex_w		bigint;
nr_seq_score_flex_ii_w	bigint;
nr_seq_protocolo_ger_w	bigint;
nr_seq_meta_w	bigint;
qt_meta_w	bigint;
ie_profissional_medico_w varchar(1) := 'N';
nr_seq_prt_int_pac_evt_w bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		CASE WHEN ie_evento_p=8 THEN  null  ELSE nr_seq_protocolo END ,
		CASE WHEN ie_evento_p=8 THEN  null  ELSE nr_seq_proc END ,
		CASE WHEN ie_evento_p=8 THEN  null  ELSE nr_seq_qua_doc END ,
		CASE WHEN ie_evento_p=8 THEN  null  ELSE ds_link END ,
		ds_acao,
		nr_seq_evento,
		CASE WHEN ie_evento_p=8 THEN  null  ELSE cd_protocolo END ,
		CASE WHEN ie_evento_p=8 THEN  'S'  ELSE ie_executar END ,
		CASE WHEN ie_evento_p=8 THEN  null  ELSE nr_seq_proc_saps END ,
		CASE WHEN ie_evento_p=8 THEN  null  ELSE cd_doenca END ,
		CASE WHEN ie_evento_p=8 THEN  null  ELSE nr_seq_mprev_programa END ,		
        CASE WHEN ie_evento_p=8 THEN  null  ELSE nr_seq_escala END ,
		CASE WHEN ie_evento_p=8 THEN  null  ELSE nr_seq_score_flex END ,
		CASE WHEN ie_evento_p=8 THEN  null  ELSE nr_seq_score_flex_ii END ,
		nr_seq_protocolo_ger,
		CASE WHEN ie_evento_p=8 THEN  null  ELSE nr_seq_meta END
	from	gqa_acao
	where	nr_seq_pend_regra	= nr_seq_pend_regra_p
	and	ie_situacao = 'A';



c02 CURSOR FOR
	SELECT	ie_pessoa_destino,
		nr_seq_equipe,
		cd_especialidade,
		cd_pf_destino
	from	gqa_acao_regra_prof
	where	nr_seq_acao	= nr_seq_acao_w;


c03 CURSOR FOR
	SELECT	x.cd_medico
	from	prescr_medica x
	where	x.nr_atendimento	= nr_atendimento_p
	and	x.dt_prescricao  between clock_timestamp() - interval '36 days'/24 and clock_timestamp()
	
union

	SELECT	x.cd_medico
	from	evolucao_paciente x
	where	x.nr_atendimento	= nr_atendimento_p
	and	x.dt_evolucao  between clock_timestamp() - interval '36 days'/24 and clock_timestamp();


c04 CURSOR FOR
	SELECT	a.cd_pessoa_fisica
	from	medico_especialidade a
	where 	a.cd_especialidade = cd_especialidade_w;

c05 CURSOR FOR
	SELECT	a.cd_pessoa_fisica
	from	PF_EQUIPE a
	where	a.nr_sequencia = nr_seq_equipe_w
	
union

	SELECT	a.CD_PESSOA_FISICA
	from	PF_EQUIPE_PARTIC a
	where	a.NR_SEQ_EQUIPE = nr_seq_equipe_w;



c06 CURSOR FOR
	SELECT	a.CD_PESSOA_FISICA
	from	atend_profissional a
	where	a.nr_atendimento = nr_atendimento_p
	and		a.ie_profissional = ie_profissional_w
	and		a.nr_sequencia	= (	SELECT	max(x.nr_sequencia)
								from	atend_profissional x
							 	where	x.nr_atendimento = nr_atendimento_p
								and		x.ie_profissional = ie_profissional_w);

C07 CURSOR FOR
	SELECT	nr_seq_proc
	from	gqa_pend_pac_acao
	where	nr_seq_superior = nr_seq_superior_w;

C08 CURSOR FOR
	SELECT	nr_seq_proc_saps
	from	gqa_pend_pac_acao
	where	nr_seq_superior_saps = nr_seq_superior_saps_w;


	procedure inserir_pf(	cd_pessoa_fisica_p	text,
							ie_profissional_medico_w text := 'N') is
	;
BEGIN
	if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '')then

		insert into gqa_pend_pac_acao_dest(	nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							cd_pessoa_fisica,
							NR_SEQ_PEND_PAC_ACAO,
							ie_profissional_medico)
				values (	nextval('gqa_pend_pac_acao_dest_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							cd_pessoa_fisica_p,
							nr_seq_pend_pac_acao_w,
							ie_profissional_medico_w);
	end if;
	end;

	procedure obter_superior( nr_seq_superior_p in out number) is
	begin
	nr_seq_superior_p	:= null;
	if ((nr_seq_proc_w IS NOT NULL AND nr_seq_proc_w::text <> '') and coalesce(ie_evento_p,'0') <> '8') then

		if (coalesce(nr_seq_sup_proc_w::text, '') = '') then
			select	nextval('gqa_pend_pac_acao_seq')
			into STRICT	nr_seq_sup_proc_w
			;

			insert into gqa_pend_pac_acao(	nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_protocolo,
							nr_seq_proc,
							nr_seq_qua_doc,
							ds_link,
							ds_acao,
							nr_seq_pend_pac,
							ie_tipo,
							nr_seq_regra_acao,
							nr_seq_protocolo_ger)
				values (	nr_seq_sup_proc_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							null,
							nr_seq_proc_w,
							null,
							null,
							ds_acao_w,
							nr_seq_pend_pac_p,
							'INTERV',
							nr_seq_acao_w,
							nr_seq_protocolo_ger_w);
		end if;

		nr_seq_superior_p	:= nr_seq_sup_proc_w;
	end if;

	end;

	procedure obter_superior_saps( nr_seq_superior_saps_p in out number) is
	begin
	nr_seq_superior_saps_p	:= null;
	if ((nr_seq_proc_saps_w IS NOT NULL AND nr_seq_proc_saps_w::text <> '') and coalesce(ie_evento_p,'0') <> '8') then

		if (coalesce(nr_seq_sup_proc_saps_w::text, '') = '') then
			select	nextval('gqa_pend_pac_acao_seq')
			into STRICT	nr_seq_sup_proc_saps_w
			;

			insert into gqa_pend_pac_acao(	nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_proc_saps ,
							nr_seq_protocolo,
							nr_seq_proc,
							nr_seq_qua_doc,							
							ds_link,
							ds_acao,
							nr_seq_pend_pac,
							ie_tipo,
							nr_seq_regra_acao,
							nr_seq_protocolo_ger)
				values (nr_seq_sup_proc_saps_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_proc_saps_w,
							null,
							null,
							null,
							null,
							ds_acao_w,
							nr_seq_pend_pac_p,
							'SAPS',
							nr_seq_acao_w,
							nr_seq_protocolo_ger_w);
		end if;

		nr_seq_superior_saps_p	:= nr_seq_sup_proc_saps_w;
	end if;

	end;

begin

ie_liberar_prescr_farm_w := obter_param_usuario(281, 397, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_liberar_prescr_farm_w);
ie_verificar_pend_w := obter_param_usuario(355, 5, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_verificar_pend_w);

if (ie_verificar_pend_w = 'S') then	

		Select  Obter_se_pendencia_mentor(nr_atendimento_p,null,null,null,nr_seq_pend_regra_p)
		into STRICT	ie_existe_pend_w
		;

end if;

if (ie_existe_pend_w = 'N') then

	open C01;
	loop
	fetch C01 into	
		nr_seq_acao_w,
		nr_seq_protocolo_w,
		nr_seq_proc_w,
		nr_seq_qua_doc_w,
		ds_link_w,
		ds_acao_w,
		nr_seq_evento_w,
		cd_protocolo_w,
		ie_executar_w,
		nr_seq_proc_saps_w,
		cd_doenca_w,
		nr_seq_mprev_programa_w,
        nr_seq_escala_w,
		nr_seq_score_flex_w,
		nr_seq_score_flex_ii_w,
		nr_seq_protocolo_ger_w,
		nr_seq_meta_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		nr_seq_superior_w	:=	null;	
		obter_superior(nr_seq_superior_w);

		nr_seq_superior_saps_w	:=	null;	
		obter_superior_saps(nr_seq_superior_saps_w);		

		select	nextval('gqa_pend_pac_acao_seq')
		into STRICT	nr_seq_pend_pac_acao_w
		;

		RAISE NOTICE 'nr_seq_pend_pac_p = %', nr_seq_pend_pac_p;		
		insert into gqa_pend_pac_acao(	nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_proc_saps,
						nr_seq_protocolo,
						nr_seq_proc,
						nr_seq_qua_doc,
						ds_link,
						ds_acao,
						nr_seq_pend_pac,
						nr_seq_superior,
						nr_seq_regra_acao,
							 nr_seq_superior_saps,
							 nr_seq_mprev_programa,
						nr_seq_escala,
							 nr_seq_score_flex,
							 nr_seq_score_flex_ii,
							 nr_seq_protocolo_ger,
						nr_seq_meta)
			values (	nr_seq_pend_pac_acao_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_proc_saps_w,
						nr_seq_protocolo_w,
						nr_seq_proc_w,
						nr_seq_qua_doc_w,
						ds_link_w,
						ds_acao_w,
						nr_seq_pend_pac_p,
						nr_seq_superior_w,
						nr_seq_acao_w,
						nr_seq_superior_saps_w,
					    nr_seq_mprev_programa_w,
                        nr_seq_escala_w,
						nr_seq_score_flex_w,
						nr_seq_score_flex_ii_w,
						nr_seq_protocolo_ger_w,
						nr_seq_meta_w);



		if (nr_seq_evento_w IS NOT NULL AND nr_seq_evento_w::text <> '') then
			CALL gerar_evento_paciente(nr_seq_evento_w,nr_atendimento_p,obter_pessoa_atendimento(nr_atendimento_p,'C'),null,nm_usuario_p);
		end if;

		if (cd_doenca_w IS NOT NULL AND cd_doenca_w::text <> '') then		
			select	max(CASE WHEN obter_se_usuario_medico(nm_usuario_p)='S' THEN obter_pessoa_fisica_usuario(nm_usuario_p,'C')  ELSE cd_medico_resp END )
			into STRICT	cd_pessoa_fisica_dest_w	
			from	atendimento_paciente
			where	nr_atendimento	= nr_atendimento_p;

			data_diagnostico_w := clock_timestamp();
			CALL gerar_diagnostico_doenca(nr_atendimento_p,
									cd_doenca_w,
									data_diagnostico_w,
									cd_pessoa_fisica_dest_w,
									nm_usuario_p);

			select	max(nr_seq_interno)
			into STRICT	nr_seq_interno_w
			from	diagnostico_doenca
			where	nr_atendimento	= nr_atendimento_p
			and		dt_diagnostico	= data_diagnostico_w
			and		cd_doenca		= cd_doenca_w;

			update	diagnostico_doenca
			set		NR_SEQ_PEND_PAC_ACAO 	= nr_seq_pend_pac_acao_w
			where	nr_atendimento 			= nr_atendimento_p
			and 	nr_seq_interno 			= nr_seq_interno_w;			

			if (ie_executar_w = 'S' and (nr_seq_interno_w IS NOT NULL AND nr_seq_interno_w::text <> '')) then										
				CALL liberar_diagnostico_doenca(nm_usuario_p,
											nr_atendimento_p,
											nr_seq_interno_w);
			end if;
		end if;

		open C02;
		loop
		fetch C02 into
			ie_pessoa_destino_w,
			nr_seq_equipe_w,
			cd_especialidade_w,
			cd_pf_destino_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			if (ie_pessoa_destino_w	= 1) and (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then

				select	max(cd_medico_resp)
				into STRICT	cd_pessoa_fisica_dest_w	
				from	atendimento_paciente
				where	nr_atendimento	= nr_atendimento_p;

				inserir_pf(cd_pessoa_fisica_dest_w);

			elsif (ie_pessoa_destino_w	= 2) and (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then

				open C03;
				loop
				fetch C03 into	
					cd_pessoa_fisica_dest_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin
					inserir_pf(cd_pessoa_fisica_dest_w);
					end;
				end loop;
				close C03;

			elsif (ie_pessoa_destino_w	= 3) then

				select	max(cd_pessoa_fisica)
				into STRICT	cd_pessoa_fisica_dest_w
				from	usuario
				where	nm_usuario	= nm_usuario_p;	

				inserir_pf(cd_pessoa_fisica_dest_w);
			elsif (ie_pessoa_destino_w	= 4) then

				ie_profissional_w	:= 'E';
				open C06;
				loop
				fetch C06 into	
					cd_pessoa_fisica_dest_w;
				EXIT WHEN NOT FOUND; /* apply on C06 */
					begin
					inserir_pf(cd_pessoa_fisica_dest_w);
					end;
				end loop;
				close C06;
			elsif (ie_pessoa_destino_w	= 6) and (cd_pf_destino_w IS NOT NULL AND cd_pf_destino_w::text <> '') then

				ie_profissional_w	:= 'E';
				inserir_pf(cd_pf_destino_w);
				cd_pessoa_fisica_dest_w	:= cd_pf_destino_w;
			elsif (ie_pessoa_destino_w	= 8) and (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then

				select	obter_pessoa_escala_gqa(nr_atendimento_p)
				into STRICT	cd_pessoa_fisica_dest_w
				;

				if (cd_pessoa_fisica_dest_w IS NOT NULL AND cd_pessoa_fisica_dest_w::text <> '') then
					inserir_pf(cd_pessoa_fisica_dest_w);			

				end if;

			elsif (ie_pessoa_destino_w	= 12) and (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then

				select	max(cd_medico_resp)
				into STRICT	cd_pessoa_fisica_dest_w
				from	atendimento_paciente
				where	nr_atendimento	= nr_atendimento_p;

				if (cd_pessoa_fisica_dest_w IS NOT NULL AND cd_pessoa_fisica_dest_w::text <> '') then
					inserir_pf(cd_pessoa_fisica_dest_w, 'S');
                end if;

			end if;


			if (cd_especialidade_w IS NOT NULL AND cd_especialidade_w::text <> '') then

				open C04;
				loop
				fetch C04 into	
					cd_pessoa_fisica_dest_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin
					inserir_pf(cd_pessoa_fisica_dest_w);
					end;
				end loop;
				close C04;
			end if;

			if (nr_seq_equipe_w IS NOT NULL AND nr_seq_equipe_w::text <> '') then

				open C05;
				loop
				fetch C05 into	
					cd_pessoa_fisica_dest_w;
				EXIT WHEN NOT FOUND; /* apply on C05 */
					begin
					inserir_pf(cd_pessoa_fisica_dest_w);
					end;
				end loop;
				close C05;
			end if;

			end;
		end loop;
		close C02;

    select nr_seq_protocolo_int_pac_even
    into STRICT nr_seq_prt_int_pac_evt_w
    from gqa_pendencia_pac
    where nr_sequencia = nr_seq_pend_pac_p;

    if (coalesce(nr_seq_prt_int_pac_evt_w,0) > 0) then

        select	max(cd_pessoa_fisica)
				into STRICT	cd_pessoa_fisica_dest_w
				from	usuario
				where	nm_usuario	= nm_usuario_p;	

				inserir_pf(cd_pessoa_fisica_dest_w);

    end if;

		if (coalesce(cd_protocolo_w,0) > 0) and (ie_executar_w = 'S') then

			if (coalesce(nr_atendimento_p,0) > 0) then
				select	max(cd_pessoa_fisica)
				into STRICT	cd_pessoa_fisica_w
				from	atendimento_paciente
				where	nr_atendimento	= nr_atendimento_p;
			else
				cd_pessoa_fisica_w := cd_pessoa_fisica_p;
			end if;

			nr_prescricao_w	:= 0;

			nm_usuario_w := null;
			if	((ie_pessoa_destino_w	= 1) or (ie_pessoa_destino_w	= 6) and (cd_pf_destino_w IS NOT NULL AND cd_pf_destino_w::text <> '') ) then

				select  coalesce(max(nm_usuario), '')
				into STRICT	nm_usuario_w	
				from	usuario
				where	cd_pessoa_fisica	= cd_pessoa_fisica_dest_w;
			end if;

                nr_prescricao_w := GQA_Gerar_Acao( nr_seq_pend_regra_p, nr_atendimento_p, cd_pessoa_fisica_w, coalesce(nm_usuario_w, nm_usuario_p), cd_pessoa_fisica_dest_w, nr_seq_pend_pac_acao_w, 1, 'S', nr_prescricao_w);

		end if;

		if ((ds_acao_w IS NOT NULL AND ds_acao_w::text <> '') and (coalesce(ie_evento_p,'0') = '8') and coalesce(nr_seq_evento_w::text, '') = '') then
        CALL duplicar_sae_sdc(nr_atendimento_p, nm_usuario_p);
		end if;

		end;
	end loop;
	close C01;	


	select	count(*)
	into STRICT	qt_reg_w
	from	gqa_acao
	where	nr_seq_pend_regra	= nr_seq_pend_regra_p
	and		(nr_seq_proc IS NOT NULL AND nr_seq_proc::text <> '')
	and		ie_executar = 'S'
	and		ie_situacao = 'A';

	if (qt_reg_w > 0  and coalesce(ie_evento_p,'0') <> '8') then

		 select	max(nr_sequencia)
		 into STRICT	nr_seq_pend_pac_acao_w
		 from	gqa_pend_pac_acao
		 where	nr_seq_pend_pac = nr_seq_pend_pac_p
		 and    (nr_seq_proc IS NOT NULL AND nr_seq_proc::text <> '')
		 and    coalesce(nr_seq_superior::text, '') = '';

		if (coalesce(nr_atendimento_p,0) > 0) then
			select	max(cd_pessoa_fisica)
			into STRICT	cd_pessoa_fisica_w
			from	atendimento_paciente
			where	nr_atendimento	= nr_atendimento_p;
		else
			cd_pessoa_fisica_w := cd_pessoa_fisica_p;
		end if;												

		CALL gerar_sae_mentor(nr_atendimento_p,nr_seq_pend_pac_acao_w,nm_usuario_p,cd_pessoa_fisica_w);

		select	coalesce(max(a.nr_sequencia),0)
		into STRICT	nr_seq_sae_w
		from	pe_prescricao a
		where	a.nr_seq_pend_pac_acao = nr_seq_pend_pac_acao_w;

		select	max(nr_seq_superior)
		into STRICT	nr_seq_superior_w
		from	gqa_pend_pac_acao
		where	nr_seq_pend_pac = nr_seq_pend_pac_p;

		if (nr_seq_sae_w > 0) then

			open C07;
			loop
			fetch C07 into	
				nr_seq_proc_w;
			EXIT WHEN NOT FOUND; /* apply on C07 */
				begin

				CALL GQA_Gerar_Interv_Padrao(nr_seq_sae_w,nr_seq_proc_w,nm_usuario_p);

				Select 	count(*)
				into STRICT	qt_itens_associados_w
				from	pe_material_proced
				where	nr_seq_proc = nr_seq_proc_w;

				if (qt_itens_associados_w > 0) then

					ie_gerar_prescr_sae_w := 'S';				

				end if;

				end;
			end loop;
			close C07;

			nr_seq_modelo_w := obter_modelo_intervencao(nr_seq_sae_w);

			if (coalesce(nr_seq_modelo_w,0) > 0) then

				update pe_prescricao
				set	   nr_seq_modelo = nr_seq_modelo_w
				where  nr_sequencia = nr_seq_sae_w;

			end if;		

			if (ie_gerar_prescr_sae_w = 'S') then
			   CALL gerar_prescricao_sae(nr_seq_sae_w,nm_usuario_p);
			end if;

		end if;

		select	coalesce(max(nr_prescricao),0)
		into STRICT	nr_prescricao_w
		from	pe_prescricao
		where	nr_sequencia = nr_seq_sae_w;

		if (nr_prescricao_w > 0) then
			ds_erro_w := liberar_prescricao(	nr_prescricao_w, nr_atendimento_p, 'S', coalesce(obter_perfil_ativo,0), nm_usuario_p, 'S', ds_erro_w);

			if (ie_liberar_prescr_farm_w = 'S') then									
				CALL liberar_prescricao_farmacia( nr_prescricao_w, 0, nm_usuario_p, 'N');
			end if;
		end if;

		CALL liberar_prescricao_enfemagem(nr_seq_sae_w,nm_usuario_p);	

	end if;

	select	count(*)
	into STRICT	qt_reg_saps_w
	from	gqa_acao
	where	nr_seq_pend_regra	= nr_seq_pend_regra_p
	and		(nr_seq_proc_saps IS NOT NULL AND nr_seq_proc_saps::text <> '')
	and		ie_executar = 'S'
	and		ie_situacao = 'A';

	if (qt_reg_saps_w > 1 and coalesce(ie_evento_p,'0') <> '8') then

		 select	max(nr_sequencia)
		 into STRICT	nr_seq_pend_pac_acao_w
		 from	gqa_pend_pac_acao
		 where	nr_seq_pend_pac = nr_seq_pend_pac_p
		 and    (nr_seq_proc_saps IS NOT NULL AND nr_seq_proc_saps::text <> '')
		 and    coalesce(nr_seq_superior_saps::text, '') = '';

		if (coalesce(nr_atendimento_p,0) > 0) then
			select	max(cd_pessoa_fisica)
			into STRICT	cd_pessoa_fisica_w
			from	atendimento_paciente
			where	nr_atendimento	= nr_atendimento_p;
		else
			cd_pessoa_fisica_w := cd_pessoa_fisica_p;
		end if;		

		CALL gerar_saps_mentor(nr_atendimento_p,nr_seq_pend_pac_acao_w,nm_usuario_p,cd_pessoa_fisica_w);

		select	coalesce(max(a.nr_sequencia),0)
		into STRICT	nr_seq_saps_w
		from	pe_prescricao a
		where	a.nr_seq_pend_pac_acao = nr_seq_pend_pac_acao_w;

		select	max(nr_seq_superior_saps)
		into STRICT	nr_seq_superior_saps_w
		from	gqa_pend_pac_acao
		where	nr_seq_pend_pac = nr_seq_pend_pac_p;

		if (nr_seq_saps_w > 0) then

			open C08;
			loop
			fetch C08 into	
				nr_seq_proc_saps_w;
			EXIT WHEN NOT FOUND; /* apply on C08 */
				begin
				CALL GQA_Gerar_Interv_Padrao(nr_seq_saps_w,nr_seq_proc_saps_w,nm_usuario_p);	

				end;
			end loop;
			close C08;

			nr_seq_modelo_w := obter_modelo_intervencao(nr_seq_saps_w);

			if (coalesce(nr_seq_modelo_w,0) >  0) then

				update pe_prescricao
				set	   nr_seq_modelo = nr_seq_modelo_w
				where  nr_sequencia = nr_seq_saps_w;

			end if;

		end if;	

		CALL liberar_prescricao_enfemagem(nr_seq_saps_w,nm_usuario_p);	

	end if;

	select	count(*)
	into STRICT	qt_reg_mprev_w
	from	gqa_acao
	where	nr_seq_pend_regra	= nr_seq_pend_regra_p
	and	(nr_seq_mprev_programa IS NOT NULL AND nr_seq_mprev_programa::text <> '')
	and	ie_executar = 'S'
	and	ie_situacao = 'A';

	if (qt_reg_mprev_w > 0 and coalesce(ie_evento_p,'0') <> '8') then		

		CALL GQA_Gerar_programa(NR_SEQ_MPREV_PROGRAMA_w,nr_atendimento_p,cd_pessoa_fisica_p,nm_usuario_p,nr_seq_pend_pac_acao_w);

	end if;	


	select	count(*)
	into STRICT	qt_meta_w
	from	gqa_acao
	where	nr_seq_pend_regra	= nr_seq_pend_regra_p	
	and	(nr_seq_meta IS NOT NULL AND nr_seq_meta::text <> '')	
	and	ie_executar = 'S'	
	and	ie_situacao = 'A';			

	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gqa_gerar_acao_regra ( nr_seq_pend_regra_p bigint, nr_seq_pend_pac_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, ie_evento_p text default '0') FROM PUBLIC;

