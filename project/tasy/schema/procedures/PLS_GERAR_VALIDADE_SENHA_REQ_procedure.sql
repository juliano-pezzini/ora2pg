-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_validade_senha_req ( nr_seq_requisicao_p bigint, nr_seq_segurado_p bigint, dt_requisicao_p timestamp, ie_tipo_guia_p text, nm_usuario_p text) AS $body$
DECLARE


dt_rescisao_w			timestamp;
dt_limite_utilizacao_w		timestamp;
qt_dias_param_w			smallint;
dt_validade_senha_w		timestamp;
cd_senha_w			varchar(20);
ie_tipo_processo_w		varchar(2);
ie_tipo_intercambio_w		varchar(2);
ie_scs_w			varchar(2)	:= 'N';
nr_seq_regra_senha_w		pls_aut_regra_gera_senha.nr_sequencia%type;
dt_validade_senha_ww		timestamp;
nr_seq_motivo_cancelamento_w		pls_segurado.nr_seq_motivo_cancelamento%type;
ie_iniciativa_beneficiario_w		pls_motivo_cancelamento.ie_iniciativa_beneficiario%type := 'N';
ie_validar_cancelamento_w		pls_param_requisicao.ie_validar_motivo_cancelamento%type := 'N';
cd_estabelecimento_w			pls_requisicao.cd_estabelecimento%type;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Valida senha na requisição.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ x]    Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
BEGIN

/*Verificação da data de recisão do segurado*/

begin
	select	dt_rescisao,
		dt_limite_utilizacao,
		nr_seq_motivo_cancelamento
	into STRICT	dt_rescisao_w,
		dt_limite_utilizacao_w,
		nr_seq_motivo_cancelamento_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_p;
exception
when others then
	dt_rescisao_w		:= null;
	dt_limite_utilizacao_w	:= null;
end;

if (dt_limite_utilizacao_w IS NOT NULL AND dt_limite_utilizacao_w::text <> '') then
	dt_rescisao_w := dt_limite_utilizacao_w;
end if;

begin
	select	ie_tipo_processo,
		ie_tipo_intercambio,
		dt_validade_senha,
		cd_estabelecimento
	into STRICT	ie_tipo_processo_w,
		ie_tipo_intercambio_w,
		dt_validade_senha_ww,
		cd_estabelecimento_w
	from	pls_requisicao
	where	nr_sequencia	= nr_seq_requisicao_p;
exception
when others then
	ie_tipo_processo_w	:= 'X';
	ie_tipo_intercambio_w	:= 'X';
end;

if (coalesce(ie_tipo_processo_w,'X')	= 'I') and (coalesce(ie_tipo_intercambio_w,'X')	= 'E') then
	ie_scs_w	:= 'S';
end if;

qt_dias_param_w	:= obter_valor_param_usuario(1271, 6, Obter_Perfil_Ativo, nm_usuario_p, 0);

if (coalesce(qt_dias_param_w::text, '') = '') and (ie_scs_w	<> 'S') then
	qt_dias_param_w	:= coalesce((pls_obter_param_padrao_funcao(6, 1271))::numeric ,0);
elsif (ie_scs_w	= 'S') then
	qt_dias_param_w	:= 0;
end if;

select	coalesce(max(ie_validar_motivo_cancelamento),'N')
into STRICT	ie_validar_cancelamento_w
from	pls_param_requisicao
where	cd_estabelecimento = cd_estabelecimento_w;

if (ie_validar_cancelamento_w = 'S') then
	if (nr_seq_motivo_cancelamento_w IS NOT NULL AND nr_seq_motivo_cancelamento_w::text <> '') then
		begin
			select	coalesce(ie_iniciativa_beneficiario, 'N')
			into STRICT	ie_iniciativa_beneficiario_w
			from	pls_motivo_cancelamento
			where	nr_sequencia	= nr_seq_motivo_cancelamento_w;
		exception
		when others then
			ie_iniciativa_beneficiario_w	:= 'N';
		end;

		if (ie_iniciativa_beneficiario_w = 'N') then
			dt_rescisao_w := null;
		end if;
	end if;
end if;

if (qt_dias_param_w	<> 0) then
	dt_validade_senha_w	:= dt_requisicao_p + qt_dias_param_w;
	if (dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') then
		if (dt_validade_senha_w	> dt_rescisao_w) then
			--Djavan OS 478404 -  Solicitação da Unimed São José do Rio Preto para tirar o dt_rescisao_w - 1
			dt_validade_senha_w	:= dt_rescisao_w;
		end if;
	end if;
elsif (qt_dias_param_w	= 0) then
	dt_validade_senha_w	:= to_date(pls_obter_regra_validade_senha('R',nr_seq_requisicao_p,dt_requisicao_p,nr_seq_segurado_p,ie_tipo_guia_p),'DD/MM/YYYY');
	if (dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') then
		if (dt_validade_senha_w	> dt_rescisao_w) then
			--Djavan OS 478404 -  Solicitação da Unimed São José do Rio Preto para tirar o dt_rescisao_w - 1
			dt_validade_senha_w	:= dt_rescisao_w;
		end if;	
	end if;
end if;

if (dt_validade_senha_w IS NOT NULL AND dt_validade_senha_w::text <> '') then
	if (pls_obter_se_controle_estab('RE') = 'S') then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_regra_senha_w
		from	pls_aut_regra_gera_senha
		where	dt_inicio_vigencia		<= clock_timestamp()
		and	coalesce(dt_fim_vigencia,clock_timestamp())	>= clock_timestamp()
		and (cd_estabelecimento = coalesce(wheb_usuario_pck.get_cd_estabelecimento, cd_estabelecimento_w));
	else
		select 	max(nr_sequencia)
		into STRICT	nr_seq_regra_senha_w
		from	pls_aut_regra_gera_senha
		where	dt_inicio_vigencia		<= clock_timestamp()
		and	coalesce(dt_fim_vigencia,clock_timestamp())	>= clock_timestamp();
	end if;

	if (nr_seq_regra_senha_w IS NOT NULL AND nr_seq_regra_senha_w::text <> '') then
	
		cd_senha_w := pls_gerar_senha_aut_regra(nr_seq_regra_senha_w, null, nr_seq_requisicao_p, nm_usuario_p, cd_senha_w);
		
		if (cd_senha_w	= '') then
			cd_senha_w := Obter_Numero_Randomico;
		end if;	
	else
		cd_senha_w := Obter_Numero_Randomico;
	end if;
end if;

update	pls_requisicao
set	cd_senha		= cd_senha_w,
	dt_validade_senha	= CASE WHEN dt_validade_senha_ww = NULL THEN  dt_validade_senha_w  ELSE dt_validade_senha_ww END ,
	dt_atualizacao		= clock_timestamp(),
	nm_usuario		= nm_usuario_p
where	nr_sequencia		= nr_seq_requisicao_p;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_validade_senha_req ( nr_seq_requisicao_p bigint, nr_seq_segurado_p bigint, dt_requisicao_p timestamp, ie_tipo_guia_p text, nm_usuario_p text) FROM PUBLIC;

