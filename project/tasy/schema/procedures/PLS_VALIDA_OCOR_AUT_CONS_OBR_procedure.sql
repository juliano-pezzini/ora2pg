-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_valida_ocor_aut_cons_obr ( nr_seq_ocor_combinada_p pls_ocor_aut_combinada.nr_sequencia%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, nr_seq_motivo_glosa_p tiss_motivo_glosa.nr_sequencia%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, ie_utiliza_filtro_p pls_ocor_aut_combinada.ie_utiliza_filtro%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type ) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade:	Validar se a guia que está sendo consistida é de SP/SADT 
	e se possui uma guia de consulta informada no campo Guia referência 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[X] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção:Performance. 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
ie_tipo_guia_w			pls_guia_plano.ie_tipo_guia%type;
nr_seq_guia_principal_w		pls_guia_plano.nr_seq_guia_principal%type;
nr_seq_regra_w			pls_validacao_aut_cons_obr.nr_sequencia%type;
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
ie_gerar_ocorrencia_w		varchar(2)	:= 'N';
ie_regra_w			varchar(10);
ie_tipo_ocorrencia_w		varchar(10);
ie_gerou_ocor_cabecalho_w	varchar(1);
nr_seq_oc_benef_w		bigint;
cd_procedimento_w		procedimento.cd_procedimento%type;
ie_origem_proced_w		procedimento.ie_origem_proced%type;
nr_seq_material_w		pls_material.nr_sequencia%type;
nr_seq_guia_proc_w		pls_guia_plano_proc.nr_sequencia%type;
nr_seq_req_proc_w		pls_requisicao_proc.nr_sequencia%type;
nr_seq_guia_mat_w		pls_guia_plano_mat.nr_sequencia%type;
nr_seq_req_mat_w		pls_requisicao_mat.nr_sequencia%type;

C01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_validacao_aut_cons_obr 
	where	nr_seq_ocor_aut_combinada	= nr_seq_ocor_combinada_p 
	and	ie_situacao			= 'A' 
	and	ie_obriga_consulta		= 'S';

C02 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced 
	from	pls_guia_plano_proc 
	where	nr_seq_guia			= nr_seq_guia_p;
	
C03 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_material 
	from	pls_guia_plano_mat 
	where	nr_seq_guia			= nr_seq_guia_p;
	
C04 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced 
	from	pls_requisicao_proc 
	where	nr_seq_requisicao		= nr_seq_requisicao_p;
	
C05 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_material 
	from	pls_requisicao_mat 
	where	nr_seq_requisicao		= nr_seq_requisicao_p;


BEGIN 
 
if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then 
	begin 
		select	nr_seq_guia_principal, 
			nr_seq_prestador, 
			nr_seq_segurado 
		into STRICT	nr_seq_guia_principal_w, 
			nr_seq_prestador_w, 
			nr_seq_segurado_w 
		from	pls_guia_plano 
		where	nr_sequencia	=	nr_seq_guia_p 
		and	ie_tipo_guia	=	'2';
	exception 
	when others then 
		nr_seq_guia_principal_w	:= null;
		nr_seq_prestador_w	:= null;
		nr_seq_segurado_w	:= null;
	end;
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
	begin 
		select	nr_seq_guia_principal, 
			nr_seq_prestador, 
			nr_seq_segurado 
		into STRICT	nr_seq_guia_principal_w, 
			nr_seq_prestador_w, 
			nr_seq_segurado_w 
		from	pls_requisicao 
		where	nr_sequencia	=	nr_seq_requisicao_p 
		and	ie_tipo_guia	=	'2';
	exception 
	when others then 
		nr_seq_guia_principal_w	:= null;
		nr_seq_prestador_w	:= null;
		nr_seq_segurado_w	:= null;
	end;
end if;
 
if (nr_seq_guia_principal_w IS NOT NULL AND nr_seq_guia_principal_w::text <> '') then 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin		 
			begin 
				select	ie_tipo_guia 
				into STRICT	ie_tipo_guia_w 
				from	pls_guia_plano 
				where	nr_sequencia	=	nr_seq_guia_principal_w;
			exception 
			when others then 
				ie_tipo_guia_w		:= null;
			end;
			 
			if (ie_tipo_guia_w <> '3') then 
				ie_gerar_ocorrencia_w	:= 'S';
			end if;
			 
			if (ie_gerar_ocorrencia_w = 'S') then 
				if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then 
					open C02;
					loop 
					fetch C02 into	 
						nr_seq_guia_proc_w, 
						cd_procedimento_w, 
						ie_origem_proced_w;
					EXIT WHEN NOT FOUND; /* apply on C02 */
						begin 
						if (ie_utiliza_filtro_p	= 'S') then 
							/* Tratamento para filtros */
 
							SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, nr_seq_guia_proc_w, null, null, null, null, cd_procedimento_w, ie_origem_proced_w, null, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
											 
							if (ie_regra_w	= 'S') then 
								ie_gerar_ocorrencia_w	:= 'S';
							elsif (ie_regra_w	in ('E','N')) then 
								ie_gerar_ocorrencia_w	:= 'N';
								exit;
							end if;
						end if;
 
						if (ie_gerar_ocorrencia_w	= 'S') then 
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, null, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 7, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
									 
							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
											nr_seq_guia_p, null, null, 
											nr_seq_guia_proc_w, null, null, 
											null, null, null, 
											nm_usuario_p, cd_estabelecimento_p);
						end if;
						end;
					end loop;
					close C02;
 
					open C03;
					loop 
					fetch C03 into 
						nr_seq_guia_mat_w, 
						nr_seq_material_w;
					EXIT WHEN NOT FOUND; /* apply on C03 */
						begin 
						if (ie_utiliza_filtro_p	= 'S') then 
							/* Tratamento para filtros */
 
							SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, null, nr_seq_guia_mat_w, null, null, null, null, null, nr_seq_material_w, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
							 
							if (ie_regra_w	= 'S') then 
								ie_gerar_ocorrencia_w	:= 'S';
							elsif (ie_regra_w	in ('E','N')) then 
								ie_gerar_ocorrencia_w	:= 'N';
								exit;
							end if;
						end if;
 
						if (ie_gerar_ocorrencia_w	= 'S') then 
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, null, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 7, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
									 
							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
											nr_seq_guia_p, null, null, 
											null, nr_seq_guia_mat_w, null, 
											null, null, null, 
											nm_usuario_p, cd_estabelecimento_p);
						end if;
						end;
					end loop;
					close C03;
				elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
					open C04;
					loop 
					fetch C04 into	 
						nr_seq_req_proc_w, 
						cd_procedimento_w, 
						ie_origem_proced_w;
					EXIT WHEN NOT FOUND; /* apply on C04 */
						begin 
						if (ie_utiliza_filtro_p	= 'S') then 
							/* Tratamento para filtros */
 
							SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, nr_seq_req_proc_w, null, null, cd_procedimento_w, ie_origem_proced_w, null, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
							if (ie_regra_w	= 'S') then 
								ie_gerar_ocorrencia_w	:= 'S';
							elsif (ie_regra_w	in ('E','N')) then 
								ie_gerar_ocorrencia_w	:= 'N';
								exit;
							end if;
						end if;
 
						if (ie_gerar_ocorrencia_w	= 'S') then 
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, null, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 9, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
									 
							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
											null, nr_seq_requisicao_p, null, 
											null, null, nr_seq_req_proc_w, 
											null, null, null, 
											nm_usuario_p, cd_estabelecimento_p);
						end if;
						end;
					end loop;
					close C04;
 
					open C05;
					loop 
					fetch C05 into 
						nr_seq_req_mat_w, 
						nr_seq_material_w;
					EXIT WHEN NOT FOUND; /* apply on C05 */
						begin 
						if (ie_utiliza_filtro_p	= 'S') then 
							/* Tratamento para filtros */
 
							SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, null, nr_seq_req_mat_w, null, null, null, nr_seq_material_w, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
							if (ie_regra_w	= 'S') then 
								ie_gerar_ocorrencia_w	:= 'S';
							elsif (ie_regra_w	in ('E','N')) then 
								ie_gerar_ocorrencia_w	:= 'N';
								exit;
							end if;
						end if;
 
						if (ie_gerar_ocorrencia_w	= 'S') then 
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, null, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 9, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
										 
							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
											null, nr_seq_requisicao_p, null, 
											null, null, null, 
											nr_seq_req_mat_w, null, null, 
											nm_usuario_p, cd_estabelecimento_p);
						end if;
						end;
					end loop;
					close C05;
				end if;
			end if;
		end;
	end loop;
	close C01;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_valida_ocor_aut_cons_obr ( nr_seq_ocor_combinada_p pls_ocor_aut_combinada.nr_sequencia%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, nr_seq_motivo_glosa_p tiss_motivo_glosa.nr_sequencia%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, ie_utiliza_filtro_p pls_ocor_aut_combinada.ie_utiliza_filtro%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type ) FROM PUBLIC;

