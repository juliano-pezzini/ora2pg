-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copiar_padroes_estoque (cd_local_estoque_p bigint, cd_estabelecimento_p bigint, cd_material_p bigint, ie_tipo_p text, ie_copia_controlado_p text, nm_usuario_p text) AS $body$
DECLARE


cd_local_estoque_w		smallint;
cd_material_w			integer;
cd_material_controlado_w	integer;
nr_sequencia_w			bigint;
qt_existe_liberacao_w		integer;
qt_existe_localizacao_w		bigint;
nr_seq_estrut_mat_w		bigint;
ds_localizacao_w		varchar(80);
ie_substitui_localizacao_w	varchar(1);

C01 CURSOR FOR
SELECT	a.cd_material
from	padrao_estoque_local a
where	a.cd_local_estoque = cd_local_estoque_w
and	a.cd_estabelecimento = cd_estabelecimento_p
and	coalesce(cd_material_p, a.cd_material) = a.cd_material
and	not exists (	select	b.cd_material
			from	loc_estoque_estrut_materiais b
			where	b.cd_local_estoque = a.cd_local_estoque
			and	b.cd_material = a.cd_material);

c02 CURSOR FOR
SELECT	a.cd_material
from	loc_estoque_estrut_materiais a
where	a.cd_local_estoque = cd_local_estoque_w
and	(a.cd_material IS NOT NULL AND a.cd_material::text <> '')
and	not exists (	select	b.cd_material
			from	padrao_estoque_local b
			where	b.cd_local_estoque = a.cd_local_estoque
			and	b.cd_material = a.cd_material
			and	b.cd_estabelecimento = cd_estabelecimento_p);

C03 CURSOR FOR
SELECT	distinct a.cd_material
from	regra_ressup_estab a
where	a.cd_local_estoque = cd_local_estoque_w
and	a.cd_estabelecimento = cd_estabelecimento_p
and	not exists (	select	b.cd_material
			from	loc_estoque_estrut_materiais b
			where	b.cd_local_estoque = a.cd_local_estoque
			and	b.cd_material = a.cd_material);

C04 CURSOR FOR
SELECT	a.cd_material,
	substr(a.ds_localizacao,1,80),
	a.nr_seq_estrut_mat
from	padrao_estoque_local a
where	a.cd_local_estoque = cd_local_estoque_w
and	a.cd_estabelecimento = cd_estabelecimento_p
and	((ie_substitui_localizacao_w = 'S') or (not exists (select	b.cd_material
			from	localizacao_estoque_local b
			where	b.cd_local_estoque = a.cd_local_estoque
			and	b.cd_material = a.cd_material)));

C05 CURSOR FOR
SELECT	a.cd_material
from	material a
where	a.cd_material_estoque = cd_material_w
and	not exists (	select	b.cd_material
			from	loc_estoque_estrut_materiais b
			where	b.cd_local_estoque = cd_local_estoque_p
			and	b.cd_material = a.cd_material);


BEGIN
qt_existe_liberacao_w	:=	0;
cd_local_estoque_w	:= 	cd_local_estoque_p;
ie_substitui_localizacao_w := Obter_Param_Usuario(143, 330, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_substitui_localizacao_w);

if	substr(obter_regra_local_usuario(cd_estabelecimento_p, cd_local_estoque_p, '10', nm_usuario_p),1,1) = 'N' then
	/*Você não tem permissão para alterar os padrões do local de estoque selecionado!*/

	CALL wheb_mensagem_pck.exibir_mensagem_abort(670131);
end if;

if (ie_tipo_p = 'L') then
	begin
	open	c01;
	loop
	fetch	c01 into
		cd_material_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select	max(nr_sequencia) + 1
		into STRICT	nr_sequencia_w
		from	loc_estoque_estrut_materiais;

		insert into loc_estoque_estrut_materiais(nr_sequencia,
			 cd_local_estoque,
			 cd_grupo_material,
			 cd_subgrupo_material,
			 cd_classe_material,
			 cd_material,
			 ie_origem_documento,
			 ie_liberar,
			 nm_usuario,
			 dt_atualizacao)
		values (nr_sequencia_w,
			 cd_local_estoque_w,
			 null,
			 null,
			 null,
			 cd_material_w,
			 null,
			 'S',
			 nm_usuario_p,
			 clock_timestamp());

		if (ie_copia_controlado_p = 'S') then
			open C05;
			loop
			fetch C05 into
				cd_material_controlado_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin

				nr_sequencia_w := nr_sequencia_w + 1;

				insert into loc_estoque_estrut_materiais(nr_sequencia,
					 cd_local_estoque,
					 cd_grupo_material,
					 cd_subgrupo_material,
					 cd_classe_material,
					 cd_material,
					 ie_origem_documento,
					 ie_liberar,
					 nm_usuario,
					 dt_atualizacao)
				values (nr_sequencia_w,
					 cd_local_estoque_w,
					 null,
					 null,
					 null,
					 cd_material_controlado_w,
					 null,
					 'S',
					 nm_usuario_p,
					 clock_timestamp());

				end;
			end loop;
			close C05;
		end if;

		end;
	end loop;
	close c01;
	end;
elsif (ie_tipo_p = 'P') then
	begin
	open	c02;
	loop
	fetch	c02 into
		cd_material_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		insert into padrao_estoque_local(cd_local_estoque,
			 cd_material,
			 dt_atualizacao,
			 nm_usuario,
			 qt_estoque_maximo,
			 qt_estoque_minimo,
			 cd_local_atende,
			 cd_estabelecimento,
			 ie_situacao,
			 nr_seq_contagem,
			 ds_localizacao,
 			 ie_atualiza_padrao_local)
		values (cd_local_estoque_w,
			 cd_material_w,
			 clock_timestamp(),
			 nm_usuario_p,
			 null,
			 null,
			 cd_local_estoque_w,
			 cd_estabelecimento_p,
			 'A',
			 null,
			 null,
			 'N');
		end;
	end loop;
	close c02;
	end;
elsif (ie_tipo_p = 'LT') then
	begin
	open	c03;
	loop
	fetch	c03 into
		cd_material_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin

		select	max(nr_sequencia) + 1
		into STRICT	nr_sequencia_w
		from	loc_estoque_estrut_materiais;

		insert into loc_estoque_estrut_materiais(nr_sequencia,
			 cd_local_estoque,
			 cd_grupo_material,
			 cd_subgrupo_material,
			 cd_classe_material,
			 cd_material,
			 ie_origem_documento,
			 ie_liberar,
			 nm_usuario,
			 dt_atualizacao)
		values (nr_sequencia_w,
			 cd_local_estoque_w,
			 null,
			 null,
			 null,
			 cd_material_w,
			 null,
			 'S',
			 nm_usuario_p,
			 clock_timestamp());
			end;
	end loop;
	close c03;
	end;
elsif (ie_tipo_p = 'LC') then
	begin
	open C04;
	loop
	fetch C04 into
		cd_material_w,
		ds_localizacao_w,
		nr_seq_estrut_mat_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin

		select 	count(*)
		into STRICT	qt_existe_localizacao_w
		from	localizacao_estoque_local
		where	cd_material = cd_material_w
		and	cd_local_estoque = cd_local_estoque_w;

		if (qt_existe_localizacao_w = 0) then
			insert into localizacao_estoque_local(
				cd_estabelecimento,
				cd_local_estoque,
				cd_material,
				ds_localizacao,
				dt_atualizacao,
				nm_usuario,
				nr_seq_estrut_mat,
				nr_seq_local,
				nr_sequencia)
			values (cd_estabelecimento_p,
				cd_local_estoque_w,
				cd_material_w,
				ds_localizacao_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_estrut_mat_w,
				null,
				nextval('localizacao_estoque_local_seq'));
		elsif (ie_substitui_localizacao_w = 'S') then
			update	localizacao_estoque_local
			set	ds_localizacao = ds_localizacao_w
			where	cd_material = cd_material_w
			and	cd_local_estoque = cd_local_estoque_w;
		end if;

		end;
	end loop;
	close C04;
	end;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_padroes_estoque (cd_local_estoque_p bigint, cd_estabelecimento_p bigint, cd_material_p bigint, ie_tipo_p text, ie_copia_controlado_p text, nm_usuario_p text) FROM PUBLIC;

