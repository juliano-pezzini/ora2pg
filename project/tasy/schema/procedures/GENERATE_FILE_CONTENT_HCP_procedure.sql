-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE generate_file_content_hcp (nr_seq_file_p bigint, nm_usuario_p text, ds_file_type text, cd_convenio_p text, batch_type_p text) AS $body$
DECLARE

  ds_conteudo_unb_w     varchar(255);
  ds_conteudo_unz_w     varchar(255);
  ds_dataset_conteudo_w text := '';
  ds_content_w          text := empty_clob;
  --ds_insurer_iden_w     VARCHAR2(3); 
  store_file_type_space varchar(100);
  --fetch the data set contents   
  c_dataset_content CURSOR(
    nr_seq_arquio_pc bigint) FOR 
    SELECT a.ds_dataset_contents 
    FROM   hcp_dataset_content a, 
           hcp_dataset_send b 
    WHERE  a.nr_seq_dataset_send = b.nr_sequencia 
           AND b.nr_seq_file = nr_seq_arquio_pc 
    ORDER  BY b.nr_atendimento;
BEGIN
    --ds_insurer_iden_w := generate_data_hcp_pkg.Get_insurer_identifier(cd_convenio_p); 
    IF ( position('.HCP' in ds_file_type) > 0 ) THEN 
      store_file_type_space := Concat('1000', '1011');
    ELSE 
      IF ( position('.SNAP' in ds_file_type) > 0 ) THEN 
        store_file_type_space := Concat('0500    ', 'SNAP');
      END IF;
    END IF;

    -- fetch the header contents   
    IF ( ds_file_type LIKE '%HCP%' ) THEN 
      SELECT Lpad(a.nr_seq_facility, 8, '0') 
             -- || Lpad(ds_insurer_iden_w, 3, ' ')  
             || substr((SELECT cd_externo FROM   convenio a WHERE  a.cd_convenio = (select b.cd_convenio from hcp_files a, hcp_batch_sending b  
								where a.nr_sequencia=nr_seq_file_p and a.nr_file_batch_seq = b.nr_sequencia)),1,3) 
             || Rpad(( nr_seq_file_p ), 8, ' ') 
             || To_char(clock_timestamp(), 'ddmmyyyy') -- date prepared  
             || Lpad(a.number_of_records, 4, '0') -- number of records  
             || batch_type_p -- test flag  
             || 'N' 
             || To_char(a.dt_extract_end, 'ddmmyyyy') 
             || To_char(a.dt_extract_start, 'ddmmyyyy') 
             || '1000' 
             || '1011' 
      --  || store_file_type_space 
      INTO STRICT   ds_content_w 
      FROM   hcp_segment_header a
      WHERE  a.nr_seq_file = nr_seq_file_p;
	  
	ELSIF ( ds_file_type LIKE '%PHDB%' ) THEN

      SELECT Lpad(a.nr_seq_facility, 8, '0') 
             -- || Lpad(ds_insurer_iden_w, 3, ' ')  
             || ( '   ' ) 
             || Rpad(( nr_seq_file_p ), 8, ' ') 
             || To_char(clock_timestamp(), 'ddmmyyyy') -- date prepared  
             || Lpad(a.number_of_records, 4, '0') -- number of records  
             || batch_type_p -- test flag  
             || ' ' 
             || To_char(a.dt_extract_end, 'ddmmyyyy') 
             || To_char(a.dt_extract_start, 'ddmmyyyy') 
             || '1000' 
             || '1011' 
      INTO STRICT   ds_content_w 
      FROM   hcp_segment_header a 
      WHERE  a.nr_seq_file = nr_seq_file_p;	
	  
    ELSE 
      
      SELECT Lpad(a.nr_seq_facility, 8, '0') 
             -- || Lpad(ds_insurer_iden_w, 3, ' ')  
             || ( 'AHS' ) 
             || Rpad(' ', 8) 
             || To_char(clock_timestamp(), 'ddmmyyyy') -- date prepared  
             || Lpad(a.number_of_records, 4, '0') -- number of records  
             || batch_type_p -- test flag  
             || 'N' 
             || To_char(a.dt_extract_end, 'ddmmyyyy') 
             || To_char(a.dt_extract_start, 'ddmmyyyy') 
             || '1000' 
             || '1011' 
             || store_file_type_space 
      INTO STRICT   ds_content_w 
      FROM   hcp_segment_header a 
      WHERE  a.nr_seq_file = nr_seq_file_p;
    END IF;

    FOR r_c_conteudo_dataset IN c_dataset_content(nr_seq_file_p) LOOP 
        SELECT ds_content_w 
               || Chr(10) 
               ||( r_c_conteudo_dataset.ds_dataset_contents ) 
        INTO STRICT   ds_content_w 
;
    END LOOP;

    INSERT INTO hcp_file_data(nr_sequencia, 
                 dt_atualizacao, 
                 nm_usuario, 
                 dt_atualizacao_nrec, 
                 nm_usuario_nrec, 
                 nr_seq_file, 
                 ds_file_content) 
    VALUES (nextval('hcp_file_data_seq'), 
                 clock_timestamp(), 
                 nm_usuario_p, 
                 clock_timestamp(), 
                 nm_usuario_p, 
                 nr_seq_file_p, 
                 ds_content_w);
-- commit;  
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE generate_file_content_hcp (nr_seq_file_p bigint, nm_usuario_p text, ds_file_type text, cd_convenio_p text, batch_type_p text) FROM PUBLIC;

