-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tasy_dropar_dicionario (nr_sequencia_p bigint) AS $body$
DECLARE


nm_tabela_w	varchar(50);
ds_comando_w	varchar(255);
ds_sql_w	varchar(60);
qt_reg_w	bigint;
c001		integer;
retorno_w	integer;

dt_geracao_versao_w	timestamp;

qt_processo_w	integer :=0;


BEGIN

begin

	select	obter_data_geracao_versao
	into STRICT	dt_geracao_versao_w
	;
exception
when others then
		dt_geracao_versao_w := to_date('27/11/2008','dd/mm/yyyy');
end;

CALL gravar_processo_longo('Dropar Tabelas Tasy_Versao' ,'TASY_DROPAR_DICIONARIO',0);

/* Executar somente se n√£o conseguiu executar a procedure TASY_VERSAO_DROPAR_DICIONARIO*/

if ( nr_sequencia_p < 0 ) or ( dt_geracao_versao_w <= to_date('27/11/2008','dd/mm/yyyy')) then

	begin
		select	count(*)
		into STRICT	qt_reg_w
		from	all_tables
		where	owner	= 'TASY_VERSAO';

		ds_comando_w	:= 	' select	table_name	' ||
					' from		all_tables	' ||
					' where		owner	= 	' || chr(39) || 'TASY_VERSAO' || chr(39);

	exception
		when	others	then
			ds_comando_w	:= ' select tname from tab ';

			Insert into log_atualizacao_erro(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				ds_comando,
				ds_erro,
				nr_seq_log)
			values (
				nextval('log_atualizacao_erro_seq'),
				'Tasy',
				clock_timestamp(),
				'',
				'Erro ao executar Select na Tabela ALL_TABLES',
				nr_sequencia_p);
			commit;
	end;

	C001 := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(C001, ds_comando_W, dbms_sql.Native);
	--Registra a coluna
	DBMS_SQL.DEFINE_COLUMN(c001, 1, nm_tabela_w, 50);
	retorno_w := DBMS_SQL.execute(c001);
	while(DBMS_SQL.FETCH_ROWS(c001) <> 0 ) loop
		-- pega retorno sql e armazena na variavel
	        DBMS_SQL.COLUMN_VALUE(c001, 1, nm_tabela_w);

		if (nm_tabela_w <> 'TASY_SEG') then
			ds_comando_w		:= 'drop table tasy_versao.' || nm_tabela_w || ' cascade constraint';
			qt_processo_w := qt_processo_w + 1;
			CALL gravar_processo_longo(ds_comando_w ,'TASY_DROPAR_DICIONARIO',qt_processo_w);
			CALL Exec_Sql_Dinamico(nr_sequencia_p,ds_comando_w);
		end if;

	end loop;
	DBMS_SQL.CLOSE_CURSOR(C001);
end if;

CALL Exec_Sql_Dinamico(nr_sequencia_p,'truncate table W_RELATORIO');
CALL Exec_Sql_Dinamico(nr_sequencia_p,'truncate table W_BANDA_RELATORIO');
CALL Exec_Sql_Dinamico(nr_sequencia_p,'truncate table W_BANDA_RELAT_CAMPO');
CALL Exec_Sql_Dinamico(nr_sequencia_p,'truncate table W_BANDA_RELAT_CAMPO_LONGO');
CALL Exec_Sql_Dinamico(nr_sequencia_p,'truncate table W_RELATORIO_PARAMETRO');
CALL Exec_Sql_Dinamico(nr_sequencia_p,'truncate table W_RELATORIO_FUNCAO');
CALL Exec_Sql_Dinamico(nr_sequencia_p,'truncate table W_ETIQUETA');
CALL Exec_Sql_Dinamico(nr_sequencia_p,'truncate table W_RELATORIO_DOCUMENTACAO');
CALL Exec_Sql_Dinamico(nr_sequencia_p,'truncate table W_USUARIO_RELATORIO');

END	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasy_dropar_dicionario (nr_sequencia_p bigint) FROM PUBLIC;

