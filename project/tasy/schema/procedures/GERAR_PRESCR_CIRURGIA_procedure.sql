-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prescr_cirurgia (cd_estabelecimento_p bigint, nr_cirurgia_p bigint, nr_seq_agenda_p bigint, nm_usuario_p text, nr_prescricao_p INOUT bigint) AS $body$
DECLARE


nr_prescricao_w		bigint;
cd_setor_atendimento_w	bigint;
cd_setor_atend_agenda_w bigint;
dt_inicio_prevista_w	timestamp;
cd_medico_cirurgiao_w	varchar(10);
cd_pessoa_fisica_w	varchar(10);
ie_tipo_pessoa_w		smallint;
cd_pessoa_agenda_w	varchar(10);
ie_forma_adep_w		varchar(10);
ie_adep_w		varchar(10);
ie_utiliza_med_req_w	varchar(1);
cd_medico_req_w		varchar(10);
nr_cirurgia_w		varchar(10);
ds_erro_w			varchar(255);
cd_setor_Agenda_ww	varchar(255);
ie_existe_regra_w		varchar(1);
cd_perfil_w				bigint;
ie_cirurgiao_prescritor_w	varchar(1);
dt_primeiro_horario_w	prescr_medica.dt_primeiro_horario%type;
cd_medico_w				varchar(10);



BEGIN

ie_utiliza_med_req_w := Obter_Param_Usuario(871, 174, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_utiliza_med_req_w);
cd_setor_Agenda_ww := Obter_Param_Usuario(871, 154, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_setor_Agenda_ww);
ie_cirurgiao_prescritor_w := Obter_Param_Usuario(871, 831, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_cirurgiao_prescritor_w);

select	coalesce(max(nr_prescricao), 0)
into STRICT	nr_prescricao_w
from	prescr_medica
where	nr_seq_agenda = nr_seq_agenda_p
and	coalesce(ie_tipo_prescr_cirur::text, '') = '';


if (nr_prescricao_w <> 0) and (nr_cirurgia_p <> 0) then
	select	coalesce(max(cd_pessoa_fisica), '0')
	into STRICT	cd_pessoa_agenda_w
	from	agenda_paciente
	where	nr_sequencia = nr_seq_agenda_p;


	if (cd_pessoa_agenda_w <> '0') then
		update	prescr_medica
		set	cd_pessoa_fisica	= cd_pessoa_agenda_w
		where	nr_prescricao	= nr_prescricao_w
		and (coalesce(cd_pessoa_fisica,'0') <> cd_pessoa_agenda_w);
	end if;


end if;

nr_cirurgia_w := nr_cirurgia_p;

begin
	select	dt_inicio_prevista,
			cd_medico_cirurgiao,
			cd_pessoa_fisica,
			cd_setor_atendimento,
			cd_medico_req
	into STRICT	dt_inicio_prevista_w,
			cd_medico_cirurgiao_w,
			cd_pessoa_fisica_w,
			cd_setor_atendimento_w,
			cd_medico_req_w
	from	cirurgia
	where	nr_cirurgia = nr_cirurgia_w;
exception
when others then
	nr_cirurgia_w := 0;
end;

if (nr_prescricao_w = 0) and (nr_cirurgia_w <> 0) then
	begin

	if (coalesce(cd_setor_Agenda_ww::text, '') = '') then
		select	coalesce(max(cd_setor_exclusivo),0)
		into STRICT		cd_setor_atend_agenda_w
		from		Agenda b,
				agenda_paciente a
		where 	a.cd_agenda	= b.cd_agenda
		  and	a.nr_sequencia	= nr_seq_agenda_p;

		if (cd_setor_atend_agenda_w = 0) then
			select cd_setor_atendimento
			into STRICT	cd_setor_atend_agenda_w
			from usuario
			where nm_usuario = nm_usuario_p;
		end if;
	end if;

	select	coalesce(max(b.ie_tipo_pessoa),'1')
	into STRICT	ie_tipo_pessoa_w
	from	pessoa_fisica b,
		usuario a
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	a.nm_usuario	= nm_usuario_p;

	select	nextval('prescr_medica_seq')
	into STRICT	nr_prescricao_w
	;

	ie_forma_adep_w := Obter_Param_Usuario(924, 246, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_forma_adep_w);

	if (ie_forma_adep_w = 'DS') then
		select	coalesce(max(ie_adep),'N')
		into STRICT	ie_adep_w
		from	setor_atendimento
		where	cd_setor_atendimento = cd_setor_atendimento_w;
	elsif (ie_forma_adep_w = 'NV') then
		ie_adep_w   := 'N';
	elsif (ie_forma_adep_w = 'PV') then
		ie_adep_w := 'S';
	elsif (ie_forma_adep_w = 'PNV') then
		ie_adep_w := 'N';
	else
		ie_adep_w := 'S';
	end if;

	cd_perfil_w	:= coalesce(Obter_perfil_ativo,0);

	select	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
	into STRICT	ie_existe_regra_w
	from	prescr_horario_setor
	where	coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0)
	and	coalesce(nm_usuario_regra, coalesce(nm_usuario_p, 0))			= coalesce(nm_usuario_p, 0)
	and	coalesce(cd_estabelecimento, cd_estabelecimento_p)	= cd_estabelecimento_p
	and	coalesce(cd_perfil, cd_perfil_w)			= cd_perfil_w
	and	(('R'	= coalesce(ie_funcao,'A')) or (coalesce(ie_funcao,'A')	= 'A'));

	select	coalesce(max(Obter_Prim_Horario_Prescricao(a.nr_atendimento, cd_setor_atendimento_w, to_date(to_char(a.dt_agenda,'dd/mm/yyyy') || ' ' || to_char(hr_inicio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'), nm_usuario_p, 'R')),clock_timestamp()),
			max(a.cd_medico)
	into STRICT	dt_primeiro_horario_w,
			cd_medico_w
	from	agenda_paciente a
	where	a.nr_sequencia = nr_seq_agenda_p;

	begin
	insert	into prescr_medica(
		dt_prescricao,
		cd_medico,
		cd_pessoa_fisica,
		cd_estabelecimento,
		nm_usuario_original,
		nr_horas_validade,
		nr_prescricao,
		ie_recem_nato,
		ie_origem_inf,
		dt_primeiro_horario,
		nm_usuario,
		dt_atualizacao,
		cd_prescritor,
		nr_seq_agenda,
		ie_adep,
		CD_SETOR_ATENDIMENTO,
		CD_SETOR_entrega)
	values (	dt_inicio_prevista_w,
		CASE WHEN ie_utiliza_med_req_w='S' THEN coalesce(cd_medico_req_w, cd_medico_cirurgiao_w)  ELSE cd_medico_cirurgiao_w END ,
		cd_pessoa_fisica_w,
		cd_estabelecimento_p,
		nm_usuario_p,
		24,
		nr_prescricao_w,
		'N',
		ie_tipo_pessoa_w,
		CASE WHEN ie_existe_regra_w='S' THEN  dt_primeiro_horario_w  ELSE clock_timestamp() END ,
		nm_usuario_p,
		clock_timestamp(),
		CASE WHEN ie_cirurgiao_prescritor_w='S' THEN  cd_medico_w  ELSE obter_dados_usuario_opcao(nm_usuario_p, 'C') END ,
		CASE WHEN nr_seq_agenda_p=0 THEN null  ELSE nr_seq_agenda_p END ,
		ie_adep_w,
		cd_setor_atend_agenda_w,
		cd_setor_atend_agenda_w);
	exception
	when others then
		ds_erro_w 	:= substr(SQLERRM(SQLSTATE),1,255);
		CALL gerar_cirurgia_hist(nr_cirurgia_w,'GP',wheb_usuario_pck.get_nm_usuario,ds_erro_w || ' - '||nr_prescricao_w ||' - '||nr_seq_agenda_p,'S');
	end;
	end;

end if;

commit;

nr_prescricao_p	:= nr_prescricao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescr_cirurgia (cd_estabelecimento_p bigint, nr_cirurgia_p bigint, nr_seq_agenda_p bigint, nm_usuario_p text, nr_prescricao_p INOUT bigint) FROM PUBLIC;

