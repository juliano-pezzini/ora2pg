-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_aprovar_contrato ( nr_seq_contrato_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text, ie_permite_tab_dif_p text, ie_consiste_tab_contr_p text, ie_gerar_cartao_p text, ie_consistir_sib_p text, ie_tipo_erro_p INOUT text, ie_att_mes_reajuste_p text default null) AS $body$
DECLARE

/* ie_tipo_erro_p
	N = Nao realiza acao
	S = Abrir inconsistencia SIB
*/
qt_registros_w			integer	:= 0;
qt_odontologia_w		integer	:= 0;
qt_documento_w			integer	:= 0;
ds_erro_w			varchar(4000);
nr_seq_segurado_w		bigint;
nr_seq_titular_w		bigint;
vl_parametro_w        		varchar(255);
cd_usuario_plano_w		varchar(30);
nr_seq_plano_w			bigint;
nr_seq_tabela_w			bigint;
nr_seq_plano_tab_w		bigint;
nr_seq_segurado_ant_w		bigint;
nm_segurado_w			varchar(255);
nr_seq_plano_seg_w		bigint;
ie_preco_w			varchar(2);
ie_tabela_contrato_w		varchar(1);
ie_tabela_base_w		varchar(1);
nr_contrato_w			bigint;
dt_contrato_w			timestamp;
dt_inicio_vigencia_w		timestamp;
dt_contratacao_w		timestamp;
ie_tipo_contratacao_w		varchar(3);
nr_seq_tabela_origem_w		bigint;
nr_seq_seg_desc_w		bigint;
vl_preco_atual_w		double precision;
vl_desconto_atual_w		double precision;
vl_desconto_w			double precision;
nr_seq_regra_atual_w 		bigint;
nr_seq_regra_desconto_w		bigint;
nr_seq_seg_preco_w		bigint;
ie_mes_fechado_w		varchar(1);
ie_aprovar_contrato_w		varchar(1)	:= 'S';
ie_permite_prod_dif_w		varchar(1);
ie_gerar_documento_w		varchar(1);
ie_acao_contrato_w		varchar(2);
ie_tipo_erro_w			varchar(2)	:= 'N';
nr_contrato_principal_w		bigint;
ds_erro_pagador_w		varchar(100);
nr_seg_vin_tabela_w		bigint;
ie_copiar_regra_copartic_w	varchar(1);
cd_operadora_empresa_w		pls_contrato.cd_operadora_empresa%type;
ie_permit_aprova_sem_cod_emp_w	varchar(1);
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
ie_permit_aprova_sem_benef_w    varchar(1);
ie_copiar_regra_carencias_w	varchar(1);
cd_classif_contrato_w		pls_contrato.cd_classif_contrato%type;
qt_vidas_minimo_aprovacao_w	pls_classificacao_contrato.qt_vidas_minimo_aprovacao%type;
qt_benef_contrato_w		bigint;
nr_seq_classificacao_w		pls_contrato.nr_seq_classificacao%type;
ds_classificacao_w		pls_classificacao_contrato.ds_classificacao%type;

c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_titular,
		a.nr_seq_segurado_ant,
		b.nm_pessoa_fisica,
		a.nr_seq_plano,
		a.nr_seq_tabela,
		a.dt_contratacao,
		a.ie_acao_contrato,
		a.nr_seq_tabela_origem,
		b.cd_pessoa_fisica
	from	pessoa_fisica	b,
		pls_segurado	a
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	a.nr_seq_contrato	= nr_seq_contrato_p
	order by nr_seq_titular desc;

c02 CURSOR FOR
	SELECT	a.nr_seq_plano,
		a.nr_seq_tabela,
		b.ie_tipo_contratacao
	from	pls_plano b,
		pls_contrato_plano a
	where	a.nr_seq_plano		= b.nr_sequencia
	and	a.nr_seq_contrato	= nr_seq_contrato_p;

c03 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_segurado a,
		pls_contrato b
	where	b.nr_sequencia	= a.nr_seq_contrato
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	coalesce(a.dt_rescisao::text, '') = ''
	and	((b.nr_sequencia(nr_seq_contrato_p, nr_contrato_principal_w)) or (b.nr_contrato_principal in (nr_seq_contrato_p, nr_contrato_principal_w)));
	--and	nr_seq_contrato	= nr_seq_contrato_p;
C04 CURSOR FOR
	SELECT	nr_sequencia nr_seq_regra_copartic
	from	pls_regra_copartic
	where	nr_seq_contrato	= nr_seq_contrato_p
	and	coalesce(dt_liberacao::text, '') = '';

BEGIN

ds_erro_w	:= coalesce(ds_erro_p,'');

select	dt_contrato,
	ie_permite_prod_dif,
	coalesce(nr_contrato_principal, nr_seq_contrato_p),
	cd_classif_contrato,
	nr_seq_classificacao
into STRICT	dt_contrato_w,
	ie_permite_prod_dif_w,
	nr_contrato_principal_w,
	cd_classif_contrato_w,
	nr_seq_classificacao_w
from	pls_contrato
where	nr_sequencia = nr_seq_contrato_p;

-- se tiver classificacao, buscar a qtd minima de vidas
if (cd_classif_contrato_w IS NOT NULL AND cd_classif_contrato_w::text <> '') then
	select	qt_vidas_minimo_aprovacao,
		ds_classificacao
	into STRICT	qt_vidas_minimo_aprovacao_w,
		ds_classificacao_w
	from	pls_classificacao_contrato
	where	nr_sequencia = nr_seq_classificacao_w;
end if;
-- se tiver informada a qtd minima de vidas, faz select para buscar a qtd de beneficiarios do contrato (PLS_SEGURADO.NR_SEQ_CONTRATO)
if (qt_vidas_minimo_aprovacao_w IS NOT NULL AND qt_vidas_minimo_aprovacao_w::text <> '') then
	select	count(nr_seq_contrato)
	into STRICT	qt_benef_contrato_w
	from	pls_segurado
	where	nr_seq_contrato = nr_seq_contrato_p
	and	(nr_seq_contrato IS NOT NULL AND nr_seq_contrato::text <> '')
	and	coalesce(dt_cancelamento::text, '') = '';
	-- se qtd de beneficiario do contrato for menor que a qtd minima, exibe mensagem e aborta o processo
	if (qt_benef_contrato_w < qt_vidas_minimo_aprovacao_w) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1109325, 'DS_CLASSIFICACAO='||ds_classificacao_w||';'||'QT_VIDAS_MINIMO='||qt_vidas_minimo_aprovacao_w);
	end if;
end if;

select	pls_obter_se_mes_fechado(dt_contrato_w,'T', cd_estabelecimento_p)
into STRICT	ie_mes_fechado_w
;

select	obter_valor_param_usuario(1202,25,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p),
	obter_valor_param_usuario(1202,28,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p),
	obter_valor_param_usuario(1202,124,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p),
	obter_valor_param_usuario(1202,125,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p),
	coalesce(obter_valor_param_usuario(1202,140,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p),'N'),
	obter_valor_param_usuario(1202,144,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p)
into STRICT	ie_aprovar_contrato_w,
	ie_gerar_documento_w,
	ie_copiar_regra_copartic_w,
	ie_permit_aprova_sem_cod_emp_w,
	ie_permit_aprova_sem_benef_w,
	ie_copiar_regra_carencias_w
;

if (ie_aprovar_contrato_w	= 'S') and (ie_mes_fechado_w = 'S') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(192390, null);
end if;

select	count(1)
into STRICT	qt_registros_w
from	pls_contrato
where	nr_sequencia	= nr_seq_contrato_p
and	coalesce(cd_pf_estipulante::text, '') = ''
and	coalesce(cd_cgc_estipulante::text, '') = '';

if (qt_registros_w > 0) then
	ds_erro_w	:= ds_erro_w || substr(obter_desc_expressao(619629),1,255) || chr(13);
	if (coalesce(ie_tipo_erro_w,'N') <> 'S') then
		ie_tipo_erro_w	:= 'N';
	end if;
end if;

if (ie_permit_aprova_sem_benef_w = 'N') then
	select	count(1)
	into STRICT	qt_registros_w
	from	pls_segurado
	where	nr_seq_contrato	= nr_seq_contrato_p;
	if (qt_registros_w = 0) then
		ds_erro_w	:= ds_erro_w || substr(obter_desc_expressao(619633),1,255) || chr(13);
		if (coalesce(ie_tipo_erro_w,'N') <> 'S') then
			ie_tipo_erro_w	:= 'N';
		end if;
	end if;
end if;

select	count(1)
into STRICT	qt_registros_w
from	pls_segurado
where	nr_seq_contrato	= nr_seq_contrato_p
and	coalesce(nr_seq_pagador::text, '') = '';
if (qt_registros_w > 0) then
	ds_erro_w	:= ds_erro_w || substr(obter_desc_expressao(619634),1,255) || chr(13);
	if (coalesce(ie_tipo_erro_w,'N') <> 'S') then
		ie_tipo_erro_w	:= 'N';
	end if;
end if;

select	count(1)
into STRICT	qt_registros_w
from	pls_segurado
where	nr_seq_contrato	= nr_seq_contrato_p
and	coalesce(nr_seq_vendedor_canal::text, '') = '';
if (qt_registros_w > 0) then
	ds_erro_w	:= ds_erro_w || substr(obter_desc_expressao(963501),1,255) || chr(13);
	if (coalesce(ie_tipo_erro_w,'N') <> 'S') then
		ie_tipo_erro_w	:= 'N';
	end if;
end if;

select	count(1)
into STRICT	qt_registros_w
from	pls_contrato_plano
where	nr_seq_contrato	= nr_seq_contrato_p;
if (qt_registros_w = 0) then
	ds_erro_w	:= ds_erro_w || substr(obter_desc_expressao(619632),1,255) || chr(13);
	if (coalesce(ie_tipo_erro_w,'N') <> 'S') then
		ie_tipo_erro_w	:= 'N';
	end if;
end if;

select	count(1)
into STRICT	qt_registros_w
from	pls_segurado
where	nr_seq_contrato	= nr_seq_contrato_p
and	coalesce(nr_seq_plano::text, '') = '';
if (qt_registros_w > 0) then
	ds_erro_w	:= ds_erro_w || substr(obter_desc_expressao(619635),1,255) || chr(13);
	if (coalesce(ie_tipo_erro_w,'N') <> 'S') then
		ie_tipo_erro_w	:= 'N';
	end if;
end if;

if (ie_consistir_sib_p = 'S') then
	select	count(1)
	into STRICT	qt_registros_w
	from	table(pls_sib_validacao_pck.validar_sib_contrato(nr_seq_contrato_p,null,null,null));
	
	if (qt_registros_w > 0) then
		ds_erro_w	:= ds_erro_w || substr(obter_desc_expressao(622892),1,255) || chr(13);
		ie_tipo_erro_w	:= 'S';
	end if;
end if;

ds_erro_pagador_w := pls_obter_registros_info_pag(nr_seq_contrato_p, ds_erro_pagador_w);
ds_erro_w	:= ds_erro_w || ds_erro_pagador_w;

CALL pls_gerar_regra_autom(nr_seq_contrato_p, 0, 0, nm_usuario_p, cd_estabelecimento_p);

CALL pls_regra_lanc_aprov_contr(nr_seq_contrato_p,'1',cd_estabelecimento_p,nm_usuario_p);

CALL pls_gerar_identificacao_estip(nr_seq_contrato_p,cd_estabelecimento_p,nm_usuario_p);

if (ie_permit_aprova_sem_cod_emp_w = 'N') then
	select	max(cd_operadora_empresa)
	into STRICT	cd_operadora_empresa_w
	from	pls_contrato
	where	nr_sequencia	= nr_seq_contrato_p;
	
	if (coalesce(cd_operadora_empresa_w::text, '') = '') then
		ds_erro_w	:= ds_erro_w || substr(obter_desc_expressao(963503),1,255) || chr(13);
		ie_tipo_erro_w	:= 'N';
	end if;
end if;

open c02;
loop
fetch c02 into
	nr_seq_plano_w,
	nr_seq_tabela_w,
	ie_tipo_contratacao_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	if (nr_seq_tabela_w IS NOT NULL AND nr_seq_tabela_w::text <> '') then
		select	nr_seq_plano,
			dt_inicio_vigencia
		into STRICT	nr_seq_plano_tab_w,
			dt_inicio_vigencia_w
		from	pls_tabela_preco
		where	nr_sequencia	= nr_seq_tabela_w;
		
		if (nr_seq_plano_w	<> nr_seq_plano_tab_w) then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(1109334,'NR_SEQ_TABELA=' || nr_seq_tabela_w || ';' ||'NR_SEQ_PLANO='|| nr_seq_plano_w);
			if (coalesce(ie_tipo_erro_w,'N') <> 'S') then
				ie_tipo_erro_w	:= 'N';
			end if;
		end if;
		
		select	coalesce(nr_contrato,0)
		into STRICT	nr_contrato_w
		from	pls_tabela_preco
		where	nr_sequencia	= nr_seq_tabela_w;
		
		if (nr_seq_contrato_p <> nr_contrato_w) and (ie_tipo_contratacao_w <> 'I') then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(1109335,'NR_SEQ_TABELA=' || nr_seq_tabela_w);
			if (coalesce(ie_tipo_erro_w,'N') <> 'S') then
				ie_tipo_erro_w	:= 'N';
			end if;
		end if;
	end if;
	end;
end loop;
close c02;

if (coalesce(ds_erro_w::text, '') = '') then
	select 	count(1)
	into STRICT	qt_odontologia_w
	
	where	exists (SELECT	1
			from	pls_plano 		a,
				pls_contrato 		b,
				pls_contrato_plano 	c
			where  	a.nr_sequencia 		= c.nr_seq_plano
			and	b.nr_sequencia 		= c.nr_seq_contrato
			and	a.ie_segmentacao 	= '6'
			and	b.nr_sequencia 		= nr_seq_contrato_p);

	open c01;
	loop
	fetch c01 into
		nr_seq_segurado_w,
		nr_seq_titular_w,
		nr_seq_segurado_ant_w,
		nm_segurado_w,
		nr_seq_plano_seg_w,
		nr_seq_tabela_w,
		dt_contratacao_w,
		ie_acao_contrato_w,
		nr_seq_tabela_origem_w,
		cd_pessoa_fisica_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		CALL pls_consiste_data_sib(dt_contratacao_w, nm_usuario_p, cd_estabelecimento_p);
		
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_contrato_plano a
		where	a.nr_seq_contrato	= nr_seq_contrato_p
		and	a.nr_seq_plano		= nr_seq_plano_seg_w  LIMIT 1;
		
		if (qt_registros_w = 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(192391, 'NR_SEQ_SEGURADO='||nr_seq_segurado_w||';'||'NM_SEGURADO='||nm_segurado_w);
		end if;
		
		if (nr_seq_tabela_w IS NOT NULL AND nr_seq_tabela_w::text <> '') then
			select	ie_tabela_base,
				coalesce(nr_contrato,0),
				dt_inicio_vigencia
			into STRICT	ie_tabela_base_w,
				nr_contrato_w,
				dt_inicio_vigencia_w
			from	pls_tabela_preco
			where	nr_sequencia	= nr_seq_tabela_w;
			
			select	ie_tipo_contratacao
			into STRICT	ie_tipo_contratacao_w
			from	pls_plano
			where	nr_sequencia = nr_seq_plano_seg_w;
			
			if (ie_tabela_base_w = 'S') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(192392, 'NR_SEQ_SEGURADO='||nr_seq_segurado_w||';'||'NM_SEGURADO='||nm_segurado_w);
			end if;
			
			vl_parametro_w := Obter_Param_Usuario(1202, 10, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, vl_parametro_w);
			if (vl_parametro_w		= 'S') and (ie_tipo_contratacao_w	<> 'I') and (nr_seq_contrato_p <> nr_contrato_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(192394, 'NR_SEQ_SEGURADO='||nr_seq_segurado_w||';'||'NM_SEGURADO='||nm_segurado_w);
			end if;
			
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_contrato_plano a
			where	a.nr_seq_contrato	= nr_seq_contrato_p
			and	a.nr_seq_tabela		= nr_seq_tabela_w  LIMIT 1;
			
			if (qt_registros_w = 0) then
				vl_parametro_w := Obter_Param_Usuario(1202, 9, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, vl_parametro_w);
				if (vl_parametro_w		= 'N') then
					
					select	max(nr_segurado)
					into STRICT	nr_seg_vin_tabela_w
					from	pls_tabela_preco
					where	nr_sequencia = nr_seq_tabela_w;
					
					select	count(1)
					into STRICT	qt_registros_w
					from	pls_contrato_plano a
					where	a.nr_seq_contrato	= nr_seq_contrato_p
					and	a.nr_seq_tabela		= nr_seq_tabela_origem_w;
					
					if	((coalesce(nr_seg_vin_tabela_w::text, '') = '') or
						(nr_seg_vin_tabela_w IS NOT NULL AND nr_seg_vin_tabela_w::text <> '' AND qt_registros_w = 0)) then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(192395, 'NR_SEQ_SEGURADO='||nr_seq_segurado_w||';'||'NM_SEGURADO='||nm_segurado_w );
					end if;
				end if;
			end if;
		else
			select	ie_preco
			into STRICT	ie_preco_w
			from	pls_plano
			where	nr_sequencia	= nr_seq_plano_seg_w;
			
			if (ie_preco_w = '1') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(192396, 'NR_SEQ_SEGURADO='||nr_seq_segurado_w||';'||'NM_SEGURADO='||nm_segurado_w );
			end if;
		end if;

		CALL pls_gerar_valor_segurado(null, nr_seq_segurado_w, 'C',
				cd_estabelecimento_p, nm_usuario_p, 'N',
				null, ie_permite_tab_dif_p, ie_consiste_tab_contr_p,
				ie_gerar_cartao_p, 'N');

		if (coalesce(ie_acao_contrato_w,'A')	<> 'M') then
			ie_acao_contrato_w	:= 'A';
		end if;

		CALL pls_gerar_ultima_carencia(nr_seq_segurado_w, nm_usuario_p);
		CALL pls_desbloquear_auto_cartao(nr_seq_segurado_w, 'A', nm_usuario_p, cd_estabelecimento_p);
		
		if (qt_odontologia_w > 0) then
			CALL gerar_boca_pes_fisica(cd_pessoa_fisica_w, dt_contratacao_w, nm_usuario_p);
		end if;

		end;
	end loop;
	close c01;

	open c03;
	loop
	fetch c03 into
		nr_seq_seg_desc_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		select	max(nr_sequencia)
		into STRICT	nr_seq_seg_preco_w
		from	pls_segurado_preco
		where	nr_Seq_segurado = nr_seq_seg_desc_w;
		
		if (coalesce(nr_seq_seg_preco_w,0) > 0) then
			select	coalesce(vl_preco_atual,0),
				coalesce(vl_desconto,0),
				coalesce(nr_Seq_regra,0)
			into STRICT	vl_preco_atual_w,
				vl_desconto_atual_w,
				nr_seq_regra_atual_w
			from	pls_segurado_preco
			where 	nr_sequencia = nr_seq_seg_preco_w
			and	nr_seq_segurado = nr_seq_seg_desc_w;
			
			CALL pls_gerar_desc_beneficiario(nr_seq_seg_preco_w, vl_preco_atual_w, nm_usuario_p, cd_estabelecimento_p, 'N');
		end if;
		end;
	end loop;
	close c03;

	CALL pls_liberar_vinculo_sca(nr_seq_contrato_p, null, null, 'L', 'N', 'N', nm_usuario_p, cd_estabelecimento_p);
	CALL pls_aplicar_renovacao_via_adic(nr_seq_contrato_p,cd_estabelecimento_p,nm_usuario_p);
	CALL pls_gerar_contrato_grupo(nr_seq_contrato_p, 'O', nm_usuario_p,cd_estabelecimento_p);
	CALL pls_vincular_grupo_relac(nr_seq_contrato_p,cd_estabelecimento_p,nm_usuario_p,'N');
	CALL pls_envio_comunic_contrato(nm_usuario_p, '2', nr_seq_contrato_p);
	
	update	pls_contrato
	set	dt_aprovacao	= clock_timestamp(),
		ie_situacao	= CASE WHEN ie_situacao='3' THEN '3'  ELSE '2' END ,
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where	nr_sequencia	= nr_seq_contrato_p;
end if;

select	count(1)
into STRICT	qt_documento_w
from	pls_contrato_documento
where	nr_seq_contrato = nr_seq_contrato_p;

if (qt_documento_w = 0) and (ie_permite_prod_dif_w = 'N') and (ie_gerar_documento_w = 'S') then
	CALL pls_gerar_documento_contrato(nr_seq_contrato_p, null, 'N', nm_usuario_p);
end if;

if (ie_copiar_regra_copartic_w = 'S') then
	select	count(1)
	into STRICT	qt_registros_w
	from	pls_regra_coparticipacao
	where	nr_seq_contrato	= nr_seq_contrato_p;
	
	if (qt_registros_w = 0) then
		CALL pls_carregar_regra_copar_contr(nr_seq_contrato_p, null, cd_estabelecimento_p, nm_usuario_p);
	end if;
end if;

if (ie_copiar_regra_carencias_w = 'S') then
	
	CALL pls_copiar_carencia_contrato(nr_seq_contrato_p, null, nm_usuario_p);
elsif (ie_copiar_regra_carencias_w = 'A') then

	select	count(1)
	into STRICT	qt_registros_w
	from	pls_carencia
	where	nr_seq_contrato	= nr_seq_contrato_p;
	
	if (qt_registros_w = 0) then
		CALL pls_copiar_carencia_contrato(nr_seq_contrato_p, null, nm_usuario_p);
	end if;
end if;

for r_c04_w in C04 loop
	begin
	CALL pls_liberar_regra_copartic(r_c04_w.nr_seq_regra_copartic, nm_usuario_p, 'N');
	end;
end loop;

CALL pls_regra_lanc_auto_ame(nr_seq_contrato_p, nm_usuario_p, 'N');

if (coalesce(ie_att_mes_reajuste_p,'N') = 'S') then
	CALL pls_atualizar_mes_reaj_pck.aprovar_contrato(nr_seq_contrato_p, nm_usuario_p, cd_estabelecimento_p);
end if;

ds_erro_p	:= substr(ds_erro_w,1,255);
ie_tipo_erro_p	:= ie_tipo_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_aprovar_contrato ( nr_seq_contrato_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text, ie_permite_tab_dif_p text, ie_consiste_tab_contr_p text, ie_gerar_cartao_p text, ie_consistir_sib_p text, ie_tipo_erro_p INOUT text, ie_att_mes_reajuste_p text default null) FROM PUBLIC;

