-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_regra_sae_diag ( cd_perfil_p bigint, nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_prescricao_w		timestamp;
qt_registro_w		bigint;
nr_seq_proc_w		bigint;
nr_atendimento_w	 	bigint;
ie_liberar_w		varchar(10);
nr_seq_sae_w		bigint;
nr_seq_erro_w		bigint;
nr_seq_modelo_w		bigint;
cd_setor_pac_w		bigint;
nr_seq_item_w		bigint;
nr_seq_w			bigint;
qt_reg_w			bigint;
qt_horas_noc_w		bigint	:= 0;
cd_estabelecimento_w	bigint;
ie_tipo_w     		pe_prescricao.ie_tipo%type;
ie_plano_cuidado_w     	regra_consiste_sae.ie_plano_cuidado%type;

C01 CURSOR FOR
	SELECT	a.nr_seq_diag
	from	PE_PRESCR_DIAG a
	where	a.NR_SEQ_PRESCR	= nr_sequencia_p
	and	coalesce(a.DT_CONFIRMACAO_NOC::text, '') = ''
	and	exists (	SELECT	1
				from	PE_PRESCR_DIAG_LIKERT x
				where	x.nr_seq_diag	= a.nr_sequencia);

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
			a.nr_seq_diag
	from	PE_PRESCR_DIAG a
	where	a.NR_SEQ_PRESCR	= nr_sequencia_p;


BEGIN

delete	FROM pe_prescricao_erro
where	nr_seq_prescr	= nr_sequencia_p
and	(NR_SEQ_DIAG IS NOT NULL AND NR_SEQ_DIAG::text <> '');
begin
select	nr_seq_modelo,
	coalesce(cd_setor_atendimento,0),
	nr_atendimento,
	coalesce(ie_tipo, 'X')
into STRICT	nr_seq_modelo_w,
	cd_setor_pac_w,
	nr_atendimento_w,
  ie_tipo_w
from	pe_prescricao
where	nr_sequencia	= nr_sequencia_p;
exception
	when others then
	null;
end;

if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
	select	max(cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_w;

	select	coalesce(max(qt_horas_noc),0)
	into STRICT	qt_horas_noc_w
	from	parametro_medico
	where	cd_estabelecimento	= cd_estabelecimento_w;

end if;

if ie_tipo_w = 'CP' then
  select coalesce(max(ie_plano_cuidado), 'N')
  into STRICT ie_plano_cuidado_w
  from regra_consiste_sae
  where nr_sequencia = 3;
end if;

if	(((ie_tipo_w = 'CP' and ie_plano_cuidado_w = 'S') or (coalesce(ie_tipo_w, 'X') <> 'CP')) and obter_se_consistir_regra_sae(3,cd_perfil_p)	<> 'X') and (qt_horas_noc_w	> 0) then
	ie_liberar_w	:= obter_se_consistir_regra_sae(3,cd_perfil_p);



	open C01;
	loop
	fetch C01 into
		nr_seq_item_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select	count(*)
		into STRICT	qt_reg_w
		from	pe_prescricao a,
			pe_prescr_diag b
		where	a.nr_atendimento	= nr_atendimento_w
		and	a.nr_sequencia		= b.nr_seq_prescr
		and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and	coalesce(a.dt_inativacao::text, '') = ''
		and	b.nr_seq_diag	= nr_seq_item_w
		and	(b.dt_confirmacao_noc IS NOT NULL AND b.dt_confirmacao_noc::text <> '')
		and	b.dt_confirmacao_noc > clock_timestamp() - (qt_horas_noc_w/24);

		if (qt_reg_w	= 0) then
			nr_seq_erro_w := gerar_erro_interv_sae(nr_sequencia_p, null, 3, ie_liberar_w, null, null, nm_usuario_p, nr_seq_erro_w, null, nr_seq_item_w);
		end if;

		end;
	end loop;
	close C01;


end if;

if ie_tipo_w = 'CP' then
  select coalesce(max(ie_plano_cuidado), 'N')
  into STRICT ie_plano_cuidado_w
  from regra_consiste_sae
  where nr_sequencia = 7;
end if;

if	(((ie_tipo_w = 'CP' and ie_plano_cuidado_w = 'S') or (coalesce(ie_tipo_w, 'X') <> 'CP')) and obter_se_consistir_regra_sae(7,cd_perfil_p)	<> 'X') and (qt_horas_noc_w	> 0) then
	ie_liberar_w	:= obter_se_consistir_regra_sae(7,cd_perfil_p);

	open C02;
	loop
	fetch C02 into
		nr_seq_w,
		nr_seq_item_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		select	count(*)
		into STRICT	qt_reg_w
		from 	pe_prescr_diag_res_esp c
		where 	c.NR_SEQ_DIAG = nr_seq_w;

		if (qt_reg_w	= 0) then
			nr_seq_erro_w := gerar_erro_interv_sae(nr_sequencia_p, null, 7, ie_liberar_w, null, null, nm_usuario_p, nr_seq_erro_w, null, nr_seq_item_w);
		end if;

		end;
	end loop;
	close C02;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_regra_sae_diag ( cd_perfil_p bigint, nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

