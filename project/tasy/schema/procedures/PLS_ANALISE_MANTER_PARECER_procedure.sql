-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_analise_manter_parecer ( nr_seq_analise_p bigint, nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_proc_partic_p bigint, nr_seq_grupo_atual_p bigint, cd_estabelecimento_p bigint, ds_parecer_p text, ie_finalizacao_p text, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Manter o parecer atual do item na análise nova
- Se o item estiver para pagar total, mantem como pagamento total
- Se o item estiver com quantidade parcial ou valor parcial, mantém com essa quantidade/valor
- Se o item estiver como totalmente glosado, mantém a glosa com os mesmos motivos
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_fluxo_mantido_w		varchar(255);
nr_seq_conta_proc_w		bigint;
qt_parecer_ocor_w		bigint;
qt_parecer_glosa_w		bigint;
qt_parecer_ocor_def_w		bigint;
qt_parecer_glosa_def_w		bigint;
nr_id_w				bigint;
nr_seq_glo_ocor_grupo_w		bigint;
nr_seq_ocor_benef_w		bigint;
nr_seq_glosa_w			bigint;
qt_parecer_w			bigint;
qt_registro_w			bigint;
nr_seq_fluxo_w			bigint;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		b.nr_sequencia,
		b.nr_seq_glosa
	from	pls_ocorrencia_benef		b,
		pls_analise_glo_ocor_grupo	a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	a.nr_seq_grupo		= nr_seq_grupo_atual_p
	and	a.nr_seq_ocor_benef	= b.nr_sequencia
	and	b.nr_seq_proc_partic	= nr_seq_proc_partic_p
	and	(nr_seq_proc_partic_p IS NOT NULL AND nr_seq_proc_partic_p::text <> '')
	and	a.ie_status		= 'P'
	
union all

	SELECT	a.nr_sequencia,
		b.nr_sequencia,
		b.nr_seq_glosa
	from	pls_ocorrencia_benef		b,
		pls_analise_glo_ocor_grupo	a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	a.nr_seq_grupo		= nr_seq_grupo_atual_p
	and	a.nr_seq_ocor_benef	= b.nr_sequencia
	and	b.nr_seq_conta_proc	= nr_seq_conta_proc_p
	and	(nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '')
	and	a.ie_status		= 'P'
	
union all

	select	a.nr_sequencia,
		b.nr_sequencia,
		b.nr_seq_glosa
	from	pls_ocorrencia_benef		b,
		pls_analise_glo_ocor_grupo	a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	a.nr_seq_grupo		= nr_seq_grupo_atual_p
	and	a.nr_seq_ocor_benef	= b.nr_sequencia
	and	b.nr_seq_conta_mat	= nr_seq_conta_mat_p
	and	(nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '')
	and	a.ie_status		= 'P'
	
union all

	select	a.nr_sequencia,
		b.nr_sequencia,
		b.nr_seq_glosa
	from	pls_ocorrencia_benef		b,
		pls_analise_glo_ocor_grupo	a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	a.nr_seq_grupo		= nr_seq_grupo_atual_p
	and	a.nr_seq_ocor_benef	= b.nr_sequencia
	and	b.nr_seq_conta		= nr_seq_conta_p
	and	coalesce(b.nr_seq_proc_partic::text, '') = ''
	and	coalesce(b.nr_seq_conta_proc::text, '') = ''
	and	coalesce(b.nr_seq_conta_mat::text, '') = ''
	and	coalesce(nr_seq_conta_proc_p::text, '') = ''
	and	coalesce(nr_seq_conta_mat_p::text, '') = ''
	and	coalesce(nr_seq_proc_partic_p::text, '') = ''
	and	a.ie_status		= 'P';


BEGIN
if (nr_seq_analise_p IS NOT NULL AND nr_seq_analise_p::text <> '') and (nr_seq_grupo_atual_p IS NOT NULL AND nr_seq_grupo_atual_p::text <> '') then
	nr_seq_conta_proc_w	:= nr_seq_conta_proc_p;

	if (nr_seq_proc_partic_p IS NOT NULL AND nr_seq_proc_partic_p::text <> '') then
		nr_seq_conta_proc_w	:= null;

		select	count(1),
			count(CASE WHEN a.ie_status='P' THEN  0 WHEN a.ie_status='M' THEN  0  ELSE 1 END )
		into STRICT	qt_parecer_ocor_w,
			qt_parecer_ocor_def_w
		from	pls_ocorrencia_benef		b,
			pls_analise_glo_ocor_grupo	a
		where	a.nr_seq_analise	= nr_seq_analise_p
		and	a.nr_seq_ocor_benef	= b.nr_sequencia
		and	b.nr_seq_proc_partic	= nr_seq_proc_partic_p
		and	((coalesce(a.ie_fluxo_adic::text, '') = '') or (a.ie_fluxo_adic = 'N'));

		select	count(1),
			count(CASE WHEN a.ie_status='P' THEN  0 WHEN a.ie_status='M' THEN  0  ELSE 1 END )
		into STRICT	qt_parecer_glosa_w,
			qt_parecer_glosa_def_w
		from	pls_conta_glosa			b,
			pls_analise_glo_ocor_grupo	a
		where	a.nr_seq_analise	= nr_seq_analise_p
		and	a.nr_seq_conta_glosa	= b.nr_sequencia
		and	b.nr_seq_proc_partic	= nr_seq_proc_partic_p
		and	((coalesce(a.ie_fluxo_adic::text, '') = '') or (a.ie_fluxo_adic = 'N'));

		select	count(1)
		into STRICT	qt_parecer_w
		from	pls_analise_fluxo_item
		where	nr_seq_proc_partic	= nr_seq_proc_partic_p;
	elsif (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
		select	count(1),
			count(CASE WHEN a.ie_status='P' THEN  0 WHEN a.ie_status='M' THEN  0  ELSE 1 END )
		into STRICT	qt_parecer_ocor_w,
			qt_parecer_ocor_def_w
		from	pls_ocorrencia_benef		b,
			pls_analise_glo_ocor_grupo	a
		where	a.nr_seq_analise	= nr_seq_analise_p
		and	a.nr_seq_ocor_benef	= b.nr_sequencia
		and	b.nr_seq_conta_proc	= nr_seq_conta_proc_p
		and	((coalesce(a.ie_fluxo_adic::text, '') = '') or (a.ie_fluxo_adic = 'N'));

		select	count(1),
			count(CASE WHEN a.ie_status='P' THEN  0 WHEN a.ie_status='M' THEN  0  ELSE 1 END )
		into STRICT	qt_parecer_glosa_w,
			qt_parecer_glosa_def_w
		from	pls_conta_glosa			b,
			pls_analise_glo_ocor_grupo	a
		where	a.nr_seq_analise	= nr_seq_analise_p
		and	a.nr_seq_conta_glosa	= b.nr_sequencia
		and	b.nr_seq_conta_proc	= nr_seq_conta_proc_p
		and	((coalesce(a.ie_fluxo_adic::text, '') = '') or (a.ie_fluxo_adic = 'N'));

		select	count(1)
		into STRICT	qt_parecer_w
		from	pls_analise_fluxo_item
		where	nr_seq_conta_proc	= nr_seq_conta_proc_p;
	elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
		select	count(1),
			count(CASE WHEN a.ie_status='P' THEN  0 WHEN a.ie_status='M' THEN  0  ELSE 1 END )
		into STRICT	qt_parecer_ocor_w,
			qt_parecer_ocor_def_w
		from	pls_ocorrencia_benef		b,
			pls_analise_glo_ocor_grupo	a
		where	a.nr_seq_analise	= nr_seq_analise_p
		and	a.nr_seq_ocor_benef	= b.nr_sequencia
		and	b.nr_seq_conta_mat	= nr_seq_conta_mat_p
		and	((coalesce(a.ie_fluxo_adic::text, '') = '') or (a.ie_fluxo_adic = 'N'));

		select	count(1),
			count(CASE WHEN a.ie_status='P' THEN  0 WHEN a.ie_status='M' THEN  0  ELSE 1 END )
		into STRICT	qt_parecer_glosa_w,
			qt_parecer_glosa_def_w
		from	pls_conta_glosa			b,
			pls_analise_glo_ocor_grupo	a
		where	a.nr_seq_analise	= nr_seq_analise_p
		and	a.nr_seq_conta_glosa	= b.nr_sequencia
		and	b.nr_seq_conta_mat	= nr_seq_conta_mat_p
		and	((coalesce(a.ie_fluxo_adic::text, '') = '') or (a.ie_fluxo_adic = 'N'));

		select	count(1)
		into STRICT	qt_parecer_w
		from	pls_analise_fluxo_item
		where	nr_seq_conta_mat	= nr_seq_conta_mat_p;
	elsif (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then
		select	count(1),
			count(CASE WHEN a.ie_status='P' THEN  0 WHEN a.ie_status='M' THEN  0  ELSE 1 END )
		into STRICT	qt_parecer_ocor_w,
			qt_parecer_ocor_def_w
		from	pls_ocorrencia_benef		b,
			pls_analise_glo_ocor_grupo	a
		where	a.nr_seq_analise	= nr_seq_analise_p
		and	a.nr_seq_ocor_benef	= b.nr_sequencia
		and	b.nr_seq_conta		= nr_seq_conta_p
		and	coalesce(b.nr_seq_conta_proc::text, '') = ''
		and	coalesce(b.nr_seq_conta_mat::text, '') = ''
		and	coalesce(b.nr_seq_proc_partic::text, '') = '';

		select	count(1),
			count(CASE WHEN a.ie_status='P' THEN  0 WHEN a.ie_status='M' THEN  0  ELSE 1 END )
		into STRICT	qt_parecer_glosa_w,
			qt_parecer_glosa_def_w
		from	pls_conta_glosa			b,
			pls_analise_glo_ocor_grupo	a
		where	a.nr_seq_analise	= nr_seq_analise_p
		and	a.nr_seq_conta_glosa	= b.nr_sequencia
		and	b.nr_seq_conta		= nr_seq_conta_p
		and	coalesce(b.nr_seq_conta_proc::text, '') = ''
		and	coalesce(b.nr_seq_conta_mat::text, '') = ''
		and	coalesce(b.nr_seq_proc_partic::text, '') = ''
		and	((coalesce(a.ie_fluxo_adic::text, '') = '') or (a.ie_fluxo_adic = 'N'));

		select	count(1)
		into STRICT	qt_parecer_w
		from	pls_analise_fluxo_item
		where	nr_seq_conta	= nr_seq_conta_p;
	end if;

	if	((qt_parecer_ocor_w > 0 AND qt_parecer_ocor_def_w = 0) or qt_parecer_ocor_w = 0) and
		((qt_parecer_glosa_w > 0 AND qt_parecer_glosa_def_w = 0) or qt_parecer_glosa_w = 0) then
		select	max(nr_identificador)
		into STRICT	nr_id_w
		from	w_pls_analise_item a
		where	a.nr_seq_analise	= nr_seq_analise_p
		and	((a.nr_seq_conta_proc	= nr_seq_conta_proc_p) 	or (a.nr_seq_conta_mat	= nr_seq_conta_mat_p) 	or (a.nr_seq_proc_partic	= nr_seq_proc_partic_p) or (a.nr_seq_conta	= nr_seq_conta_p
			and	coalesce(a.nr_seq_proc_partic::text, '') = ''
			and	coalesce(a.nr_seq_conta_proc::text, '') = ''
			and	coalesce(a.nr_seq_conta_mat::text, '') = ''));

		CALL wheb_mensagem_pck.exibir_mensagem_abort(210155,'NR_ID=' || coalesce(nr_id_w,0));
	end if;

	ie_fluxo_mantido_w	:= 'N';

	open C01;
	loop
	fetch C01 into
		nr_seq_glo_ocor_grupo_w,
		nr_seq_ocor_benef_w,
		nr_seq_glosa_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_analise_glo_ocor_grupo	x
		where	x.nr_seq_ocor_benef	= nr_seq_ocor_benef_w
		and	x.ie_status		= 'G'
		and	x.nr_seq_analise	= nr_seq_analise_p
		and	x.nr_seq_grupo	<> nr_seq_grupo_atual_p;

		/*Talvez não tenha uma glosa vinculada a ocorrência(nr_seq_glosa na tabela pls_ocorrencia_benef) ,  porém a ocorrência
		pode estar vinculada a uma glosa e nesse caso é preciso verificar na tabela pls_conta_glosa(e inativa a mesma*/
		if (coalesce(nr_seq_glosa_w::text, '') = '') then
			select	max(nr_sequencia) nr_seq_glosa
			into STRICT	nr_seq_glosa_w
			from	pls_conta_glosa
			where	nr_seq_ocorrencia_benef = nr_seq_ocor_benef_w;
		end if;

		/* Alterar  o status de todas ocorrências*/

		update	pls_analise_glo_ocor_grupo a
		set	ie_status		= 'M',
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			ie_finalizacao		= ie_finalizacao_p,
			nm_usuario_analise	= nm_usuario_p,
			dt_analise		= clock_timestamp()
		where	nr_sequencia		= nr_seq_glo_ocor_grupo_w;

		if (qt_parecer_w > 0) then
			if (ie_fluxo_mantido_w = 'N') then
				/* Gravar o fluxo de análise do item - histórico */

				nr_seq_fluxo_w := pls_gravar_fluxo_analise_item(	nr_seq_analise_p, nr_seq_conta_p, nr_seq_conta_proc_w, nr_seq_conta_mat_p, nr_seq_proc_partic_p, null, nr_seq_grupo_atual_p, 'M', null, ds_parecer_p, 'N', ie_finalizacao_p, nm_usuario_p, 'N', null, '3', nr_seq_fluxo_w);
			end if;

			if (qt_registro_w = 0) then
				/* Inativar as ocorrências */

				if (nr_seq_ocor_benef_w IS NOT NULL AND nr_seq_ocor_benef_w::text <> '') then
					update	pls_ocorrencia_benef
					set	ie_situacao		= 'I',
						nm_usuario		= nm_usuario_p,
						dt_atualizacao		= clock_timestamp(),
						ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='S' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'U' END
					where	nr_sequencia		= nr_seq_ocor_benef_w;
				end if;

				if (nr_seq_glosa_w IS NOT NULL AND nr_seq_glosa_w::text <> '') then
					update	pls_conta_glosa
					set	ie_situacao		= 'I',
						nm_usuario		= nm_usuario_p,
						dt_atualizacao		= clock_timestamp(),
						ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='S' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'U' END
					where	nr_sequencia		= nr_seq_glosa_w;

				end if;
			end if;

			ie_fluxo_mantido_w	:= 'S';
		else
			if (qt_registro_w > 0) then
				/* Inativar as ocorrências */

				if (nr_seq_ocor_benef_w IS NOT NULL AND nr_seq_ocor_benef_w::text <> '') then
					update	pls_ocorrencia_benef
					set	ie_situacao		= 'I',
						nm_usuario		= nm_usuario_p,
						dt_atualizacao		= clock_timestamp(),
						ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='S' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'U' END
					where	nr_sequencia		= nr_seq_ocor_benef_w;
				end if;

				if (nr_seq_glosa_w IS NOT NULL AND nr_seq_glosa_w::text <> '') then
					update	pls_conta_glosa
					set	ie_situacao		= 'I',
						nm_usuario		= nm_usuario_p,
						dt_atualizacao		= clock_timestamp(),
						ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='S' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'U' END
					where	nr_sequencia		= nr_seq_glosa_w;
				end if;
			end if;
		end if;
		end;
	end loop;
	close C01;
end if;

/* Não pode ter commit */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_analise_manter_parecer ( nr_seq_analise_p bigint, nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_proc_partic_p bigint, nr_seq_grupo_atual_p bigint, cd_estabelecimento_p bigint, ds_parecer_p text, ie_finalizacao_p text, nm_usuario_p text) FROM PUBLIC;

