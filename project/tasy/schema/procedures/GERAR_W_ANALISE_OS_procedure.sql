-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_analise_os (dt_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE

 
dt_mes_referencia_w				timestamp;
nr_seq_gerencia_des_w			bigint;
ie_classificacao_w				varchar(03);
nr_seq_classif_w				bigint;
nr_seq_grupo_des_w				bigint;
nr_seq_grupo_sup_w				bigint;
qt_ocorrencia_w					bigint;
nr_sequencia_w					bigint;
cd_funcao_w						bigint;

C00 CURSOR FOR 
		SELECT PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_referencia_p, 'month', 0), -6, 0) dt_referencia 
		 
		
union
 
		SELECT PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_referencia_p, 'month', 0), -5, 0) 
		 
		
union
 
		select PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_referencia_p, 'month', 0), -4, 0) 
		 
		
union
 
		select PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_referencia_p, 'month', 0), -3, 0) 
		 
		
union
 
		select PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_referencia_p, 'month', 0), -2, 0) 
		 
		
union
 
		select PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_referencia_p, 'month', 0), -1, 0) 
		 
		
union
 
		select PKG_DATE_UTILS.start_of(dt_referencia_p, 'month', 0) 
		 
		order by 1 desc;

 
C01 CURSOR FOR 
		SELECT	a.nr_seq_gerencia_des, 
				coalesce(b.IE_CLASSIF_PRINC, a.ie_classificacao), 
				a.nr_seq_classif, 
				a.nr_seq_grupo_des, 
				a.nr_seq_grupo_sup, 
				a.cd_funcao, 
				count(*) 
		from	man_classificacao b, 
				man_ordem_servico_v a 
		where	PKG_DATE_UTILS.start_of(a.dt_ordem_servico, 'month', 0)	= dt_mes_referencia_w 
		and		a.nr_seq_classif					= b.nr_sequencia 
		and		(a.IE_CLASSIFICACAO IS NOT NULL AND a.IE_CLASSIFICACAO::text <> '') 
		and		exists (SELECT 1 
				from	man_estagio_processo y, 
						man_ordem_serv_estagio x 
				where	x.nr_seq_estagio	= y.nr_sequencia 
				and		x.nr_seq_ordem		= a.nr_sequencia 
				and		y.ie_desenv			= 'S') 
		group by a.nr_seq_gerencia_des, 
				coalesce(b.IE_CLASSIF_PRINC, a.ie_classificacao), 
				a.cd_funcao, 
				a.nr_seq_classif, 
				a.nr_seq_grupo_des, 
				a.nr_seq_grupo_sup;

			 

BEGIN 
 
open C00;
loop 
fetch C00 into	 
	dt_mes_referencia_w;
EXIT WHEN NOT FOUND; /* apply on C00 */
	begin 
 
	delete	from W_ANALISE_OS 
	where	dt_referencia	= dt_mes_referencia_w;
 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_gerencia_des_w, 
		ie_classificacao_w, 
		nr_seq_classif_w, 
		nr_seq_grupo_des_w, 
		nr_seq_grupo_sup_w, 
		cd_funcao_w, 
		qt_ocorrencia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		select	nextval('w_analise_os_seq') 
		into STRICT	nr_sequencia_w 
		;
		 
		if (ie_classificacao_w		in ('T', 'S')) then 
				ie_classificacao_w		:= 'X';
		end if;
		 
		insert into W_ANALISE_OS(NR_SEQUENCIA, 
				DT_ATUALIZACAO, 
				NM_USUARIO, 
				DT_ATUALIZACAO_NREC, 
				NM_USUARIO_NREC, 
				NR_SEQ_GERENCIA, 
				DT_REFERENCIA, 
				IE_CLASSIFICACAO, 
				NR_SEQ_CLASSIF, 
				QT_OCORRENCIA, 
				NR_SEQ_GRUPO_DES, 
				NR_SEQ_GRUPO_SUP, 
				cd_funcao) 
		values (nr_sequencia_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_gerencia_des_w, 
				dt_mes_referencia_w, 
				ie_classificacao_w, 
				nr_seq_classif_w, 
				qt_ocorrencia_w, 
				nr_seq_grupo_des_w, 
				nr_seq_grupo_sup_w, 
				cd_funcao_w);
		 
		end;
	end loop;
	close C01;
 
 
	 
	end;
end loop;
close C00;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_analise_os (dt_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

