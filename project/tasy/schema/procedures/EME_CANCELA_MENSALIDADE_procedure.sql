-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE eme_cancela_mensalidade ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_titulo_w          	bigint;
nr_seq_nota_fiscal_w		bigint;
ie_excluir_mensalidade_w	varchar(1);
ie_forma_canc_tit_conta_w	varchar(1);
vl_fatura_w			bigint;
cd_tipo_recebimento_w		bigint;
nr_seq_trans_fin_w		bigint;
cd_moeda_w			bigint;
cd_estabelecimento_w		bigint;
nr_seq_titulo_w			bigint;
vl_saldo_titulo_w		double precision;
nr_chamado_hist_fat_w		bigint;
nr_seq_chamado_w		eme_chamado.nr_sequencia%type;
dt_atualizacao_estoque_w    nota_fiscal.dt_atualizacao_estoque%type;

C01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	eme_chamado 
	where	nr_seq_faturamento = nr_sequencia_p;

 

BEGIN 
 
ie_excluir_mensalidade_w := obter_param_usuario(929, 27, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_excluir_mensalidade_w);
 
select nr_titulo, 
    nr_seq_nota_fiscal, 
    coalesce(vl_fatura,0) 
into STRICT  nr_titulo_w, 
    nr_seq_nota_fiscal_w, 
    vl_fatura_w 
from  eme_faturamento 
where  nr_sequencia  = nr_sequencia_p;
 
select max(cd_moeda), 
    max(cd_estabelecimento), 
	coalesce(max(vl_saldo_titulo),0) 
into STRICT  cd_moeda_w, 
    cd_estabelecimento_w, 
	vl_saldo_titulo_w 
from  titulo_receber 
where  nr_titulo    = nr_titulo_w;
 
select coalesce(max(nr_sequencia),0) + 1 
into STRICT  nr_seq_titulo_w 
from  titulo_receber_liq 
where  nr_titulo = nr_titulo_w;
 
select coalesce(min(cd_tipo_recebimento),4) 
into STRICT  cd_tipo_recebimento_w 
from  tipo_recebimento 
where  ie_tipo_consistencia = 0 
and   ((cd_estabelecimento = cd_estabelecimento_w) or (coalesce(cd_estabelecimento::text, '') = ''));
 
select max(nr_seq_trans_fin) 
into STRICT  nr_seq_trans_fin_w 
from  tipo_recebimento 
where  cd_tipo_recebimento   = cd_tipo_recebimento_w;
 
select coalesce(max(ie_forma_canc_tit_conta),'B') 
into STRICT  ie_forma_canc_tit_conta_w 
from  parametro_contas_receber 
where  cd_estabelecimento = cd_estabelecimento_w;
 
select max(nr_sequencia) 
into STRICT  nr_seq_chamado_w 
from  eme_chamado 
where  nr_seq_faturamento = nr_sequencia_p;
 
if (ie_excluir_mensalidade_w = 'S') and (coalesce(nr_titulo_w::text, '') = '') and (coalesce(nr_seq_nota_fiscal_w::text, '') = '') and (coalesce(nr_seq_chamado_w::text, '') = '') then 
    delete 
    from  eme_faturamento 
    where  nr_sequencia      = nr_sequencia_p;
else 
    begin 
 
    if (coalesce(ie_forma_canc_tit_conta_w,'B') = 'B') then 
 
 
		if (coalesce(nr_titulo_w,0) > 0) then 
			insert into titulo_receber_liq(nr_titulo, 
				nr_sequencia, 
				dt_recebimento, 
				vl_recebido, 
				vl_descontos, 
				vl_juros, 
				vl_multa, 
				cd_moeda, 
				dt_atualizacao, 
				nm_usuario, 
				cd_tipo_recebimento, 
				ie_acao, 
				vl_rec_maior, 
				vl_glosa, 
				ie_lib_caixa, 
				nr_seq_trans_fin, 
				nr_lote_contab_antecip, 
				nr_lote_contab_pro_rata, 
				nr_lote_contabil) 
			values (nr_titulo_w, 
				nr_seq_titulo_w, 
				clock_timestamp(), 
				vl_saldo_titulo_w, --vl_fatura_w, a baixa deve ser no valor do saldo do t√≠tulo. 
				0, 
				0, 
				0, 
				cd_moeda_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				cd_tipo_recebimento_w, 
				'I', 
				0, 
				0, 
				'S', 
				nr_seq_trans_fin_w, 
				0, 
				0, 
				0);
 
			CALL gerar_titulo_rec_liq_cc(cd_estabelecimento_w, null, nm_usuario_p, nr_titulo_w, nr_seq_titulo_w);
 
			CALL atualizar_saldo_tit_rec(nr_titulo_w, nm_usuario_p);
 
			update titulo_receber 
			set   ie_situacao       = '3' 
			where  nr_titulo        = nr_titulo_w 
			and   vl_saldo_titulo     = 0;
		end if;
    else 
 
        if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then 
            CALL cancelar_titulo_receber(nr_titulo_w, nm_usuario_p, 'S',clock_timestamp());
        end if;
 
    end if;
 
    if (nr_seq_nota_fiscal_w IS NOT NULL AND nr_seq_nota_fiscal_w::text <> '') then 
        begin 
 
        select max(dt_atualizacao_estoque) 
        into STRICT  dt_atualizacao_estoque_w 
        from  nota_fiscal 
        where  nr_sequencia = nr_seq_nota_fiscal_w;
 
        if (dt_atualizacao_estoque_w IS NOT NULL AND dt_atualizacao_estoque_w::text <> '') then 
            CALL estornar_nota_fiscal(nr_seq_nota_fiscal_w, nm_usuario_p);
        else 
 
            update nota_fiscal 
            set   ie_situacao = 9, 
                nr_seq_protocolo  = NULL, 
                nr_interno_conta  = NULL 
            where  nr_sequencia = nr_seq_nota_fiscal_w;
 
 
        end if;
 
        end;
    end if;
 
	update eme_faturamento 
	set   nm_usuario_cancelamento = nm_usuario_p, 
		dt_cancelamento     = clock_timestamp() 
	where  nr_sequencia      = nr_sequencia_p;
 
	open c01;
	loop 
	fetch c01 into 
		nr_seq_chamado_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
 
			update	eme_chamado 
			set	nr_seq_faturamento 	 = NULL, 
				ie_faturamento 		= 'S' 
			where	nr_sequencia = nr_seq_chamado_w;
 
			SELECT	nextval('eme_chamado_hist_fat_seq') 
			INTO STRICT	nr_chamado_hist_fat_w 
			;
 
			INSERT	INTO eme_chamado_hist_fat( 
				nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				ie_operacao, 
				dt_operacao, 
				nr_seq_faturamento, 
				nr_seq_chamado) 
			VALUES ( 
				nr_chamado_hist_fat_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				'C', 
				clock_timestamp(), 
				nr_sequencia_p, 
				nr_seq_chamado_w);
 
		end;
	end loop;
	close c01;
 
    end;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eme_cancela_mensalidade ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

