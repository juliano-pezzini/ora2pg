-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pre_analise_insert_ativ_prev (nr_ordem_serv_p bigint, nr_seq_atividade_prev_p bigint, nm_usuario_p text, ie_prioridade_p text, qt_min_prev_p bigint, qt_prior_ativ_p bigint, nm_usuario_prev_p text, dt_ativ_prev_p timestamp, ds_mensagem_prog_p text, ds_mensagem_cli_p text, nr_complexidade_p bigint, ie_obriga_news_p text, ie_atualizacao_migracao_p text, ds_just_ret_news_p text, nr_seq_severidade_p bigint, ie_grupo_p text, ie_plataforma_p text, ie_ambiente_p text default 'P', nr_versao_cli_abertura_p text default '', ie_encerrar_ativ_p text default 'N', nr_seq_grupo_des_p bigint default null, ie_resp_teste_p text default null, nr_seq_sintoma_p bigint default null, ds_just_severidade_p text default null, ie_classificacao_p text default null, ie_tipo_ordem_p bigint default null, nr_seq_tipo_ordem_p bigint default null, nr_seq_intencao_uso_p bigint default null) AS $body$
DECLARE


ie_analista_w			varchar(1) := 'N';
nr_seq_tipo_exec_w		bigint := 2;
nr_seq_estagio_w			bigint := 1191;
qt_prioriodade_w			smallint := 5;
ie_classificacao_w			varchar(1);
ie_status_ordem_w			varchar(1);
qt_registro_w			bigint;
nr_seq_loc_w			bigint;
nr_seq_idioma_loc_w		bigint;
cd_pessoa_fisica_w		varchar(10);
ie_area_gerencia_w		varchar(5);
nm_usuario_exec_w		varchar(15);
dt_fim_execucao_w			timestamp;
ie_obriga_news_w			man_ordem_servico.ie_obriga_news%type;
nm_usuario_lib_news_w		man_ordem_servico.nm_usuario_lib_news%type;
dt_libera_news_w			man_ordem_servico.dt_libera_news%type;
ie_status_complaint_w		varchar(50);


BEGIN
	
if (nr_ordem_serv_p IS NOT NULL AND nr_ordem_serv_p::text <> '') then
	begin
	select	max(ie_classificacao),
		max(ie_status_ordem),
		max(nr_seq_localizacao),
		max(ie_obriga_news),
		max(nm_usuario_lib_news),
		max(dt_libera_news)
	into STRICT	ie_classificacao_w,
		ie_status_ordem_w,
		nr_seq_loc_w,
		ie_obriga_news_w,
		nm_usuario_lib_news_w,
		dt_libera_news_w
	from	man_ordem_servico
	where	nr_sequencia = nr_ordem_serv_p;
	
	if (ie_grupo_p = 'SUP') then
	
		nr_seq_estagio_w := 2113; /* Triada */
	
		if (nm_usuario_prev_p IS NOT NULL AND nm_usuario_prev_p::text <> '') then
			
			if (ie_status_ordem_w not in ('2', '3')) then
				update 	man_ordem_servico
				set 	ie_status_ordem		= '2',
						dt_inicio_previsto	= coalesce(dt_inicio_previsto, dt_inicio_desejado),
						dt_inicio_real		= coalesce(dt_inicio_real, clock_timestamp())
				where 	nr_sequencia		= nr_ordem_serv_p;
			end if;
			
			select	max(nm_usuario_exec),
					max(dt_fim_execucao)
			into STRICT	nm_usuario_exec_w,
					dt_fim_execucao_w
			from	man_ordem_servico_exec 
			where	nr_seq_ordem	= nr_ordem_serv_p
			and		nm_usuario_exec	= nm_usuario_prev_p;

			if (coalesce(nm_usuario_exec_w::text, '') = '') then

				insert into man_ordem_servico_exec(nr_sequencia,
						nr_seq_ordem,
						dt_atualizacao,
						nm_usuario,
						nm_usuario_exec,
						nm_usuario_prev,
						nr_seq_tipo_exec,
						qt_min_prev)
					values (	nextval('man_ordem_servico_exec_seq'),
						nr_ordem_serv_p,
						clock_timestamp(),
						nm_usuario_p,
						nm_usuario_prev_p,
						obter_usuario_ativo,
						nr_seq_tipo_exec_w,
						qt_min_prev_p);

			elsif (dt_fim_execucao_w IS NOT NULL AND dt_fim_execucao_w::text <> '') then

				update	man_ordem_servico_exec
				set 	dt_fim_execucao  = NULL,
						dt_atualizacao	= clock_timestamp(),
						nm_usuario		= nm_usuario_p
				where 	nr_seq_ordem	= nr_ordem_serv_p
				and		nm_usuario_exec = nm_usuario_prev_p;

			end if;

		
			if	((nr_seq_atividade_prev_p IS NOT NULL AND nr_seq_atividade_prev_p::text <> '')
				and (ie_prioridade_p IS NOT NULL AND ie_prioridade_p::text <> '')
				and (qt_min_prev_p IS NOT NULL AND qt_min_prev_p::text <> '')
				and (dt_ativ_prev_p IS NOT NULL AND dt_ativ_prev_p::text <> '')) then
				
				insert into man_ordem_ativ_prev(nr_sequencia,
						nr_seq_ordem_serv,
						dt_atualizacao,
						nm_usuario,
						nr_seq_ativ_exec,
						dt_prevista,
						qt_min_prev,
						ie_prioridade_desen,
						nm_usuario_prev,
						ie_prioridade_sup)
					values (	nextval('man_ordem_ativ_prev_seq'),
						nr_ordem_serv_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_atividade_prev_p,
						dt_ativ_prev_p,
						qt_min_prev_p,
						qt_prioriodade_w,
						nm_usuario_prev_p,
						qt_prioriodade_w);

				CALL man_gerar_previsao_dia(dt_ativ_prev_p, nm_usuario_prev_p);
				
			end if;
			
			if ((obter_setor_usuario(nm_usuario_p) = 4) and (obter_setor_usuario(nm_usuario_prev_p) = 4)) then
				update 	man_ordem_servico
				set 	nm_usuario_exec = nm_usuario_prev_p
				where 	nr_sequencia	= nr_ordem_serv_p;
			else
				update 	man_ordem_servico
				set 	nm_usuario_exec = nm_usuario_p
				where 	nr_sequencia	= nr_ordem_serv_p
				and		coalesce(nm_usuario_exec::text, '') = '';
			end if;
		end if;
		
		
	elsif	((nr_seq_atividade_prev_p IS NOT NULL AND nr_seq_atividade_prev_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') and (ie_prioridade_p IS NOT NULL AND ie_prioridade_p::text <> '') and (qt_min_prev_p IS NOT NULL AND qt_min_prev_p::text <> '') and (nm_usuario_prev_p IS NOT NULL AND nm_usuario_prev_p::text <> '') and (dt_ativ_prev_p IS NOT NULL AND dt_ativ_prev_p::text <> '')) then		
		begin
			if (ie_grupo_p = 'SUP') then
				nr_seq_estagio_w := 2113;		
			else
				select	max(CASE WHEN ie_funcao_usuario='S' THEN 'S' WHEN ie_funcao_usuario='N' THEN 'S' WHEN ie_funcao_usuario='M' THEN 'S'  ELSE 'N' END )
				into STRICT	ie_analista_w
				from	usuario_grupo_des
				where	nm_usuario_grupo = nm_usuario_prev_p;
				
				select	max(ie_area_gerencia)
				into STRICT	ie_area_gerencia_w	
				from	gerencia_wheb a,
				grupo_desenvolvimento b
				where	a.nr_sequencia = b.nr_seq_gerencia
				and		b.nr_sequencia = nr_seq_grupo_des_p;
				
				if (ie_analista_w = 'S') then						
					nr_seq_tipo_exec_w := 1;
					if ('TEC' = ie_area_gerencia_w) then
						nr_seq_estagio_w := 131; --Tec pendente analise
					else
						nr_seq_estagio_w := 4; -- Desenvolvimento pendete analise
					end if;	
				elsif ('TEC' = ie_area_gerencia_w) then
					nr_seq_estagio_w := 1534; -- Tec aguardando programacao
				end if;
			end if;
					
			if (ie_status_ordem_w not in ('2', '3')) then
				update 	man_ordem_servico
				set 	ie_status_ordem = '2',
						dt_inicio_previsto = coalesce(dt_inicio_previsto, dt_inicio_desejado),
						dt_inicio_real = coalesce(dt_inicio_real, clock_timestamp())				
				where 	nr_sequencia	= nr_ordem_serv_p;
			end if;
		
			if (coalesce(qt_prior_ativ_p,0) = 0) then
				begin
				qt_prioriodade_w := 5;
		
				if (ie_classificacao_w = 'E') then
					qt_prioriodade_w := 10;
				end if;		
				end;
			else
				qt_prioriodade_w := qt_prior_ativ_p;
			end if;
			
			select	max(nm_usuario_exec),
					max(DT_FIM_EXECUCAO)
			into STRICT	nm_usuario_exec_w, dt_fim_execucao_w
			from	man_ordem_servico_exec 
			where	NR_SEQ_ORDEM = nr_ordem_serv_p
			and		nm_usuario_exec = nm_usuario_prev_p;
			
			if (coalesce(nm_usuario_exec_w::text, '') = '') then 		   		

				insert into man_ordem_servico_exec(nr_sequencia,
						nr_seq_ordem,
						dt_atualizacao,
						nm_usuario,
						nm_usuario_exec,
						nm_usuario_prev,
						nr_seq_tipo_exec,
						qt_min_prev)
					values (	nextval('man_ordem_servico_exec_seq'),
						nr_ordem_serv_p,
						clock_timestamp(),
						nm_usuario_p,
						nm_usuario_prev_p,
						obter_usuario_ativo,
						nr_seq_tipo_exec_w,
						qt_min_prev_p);
					
			elsif (dt_fim_execucao_w IS NOT NULL AND dt_fim_execucao_w::text <> '') then		
				update	man_ordem_servico_exec 
				set 	DT_FIM_EXECUCAO  = NULL,
						dt_atualizacao	= clock_timestamp(),
						nm_usuario	= nm_usuario_p	
				where 	NR_SEQ_ORDEM = nr_ordem_serv_p
				and		nm_usuario_exec = nm_usuario_prev_p;	
			end if;
			
			insert into man_ordem_ativ_prev(nr_sequencia,
					nr_seq_ordem_serv,
					dt_atualizacao,
					nm_usuario,
					nr_seq_ativ_exec,
					dt_prevista,
					qt_min_prev,
					ie_prioridade_desen,
					nm_usuario_prev,
					ie_prioridade_sup)
				values (	nextval('man_ordem_ativ_prev_seq'),
					nr_ordem_serv_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_atividade_prev_p,
					dt_ativ_prev_p,
					qt_min_prev_p,
					qt_prioriodade_w,
					nm_usuario_prev_p,
					qt_prioriodade_w);		
					
					if ((obter_setor_usuario(nm_usuario_p) = 4) and (obter_setor_usuario(nm_usuario_prev_p) = 4)) then
						update 	man_ordem_servico
						set 	nm_usuario_exec = nm_usuario_prev_p
						where 	nr_sequencia	= nr_ordem_serv_p;
					else
						update 	man_ordem_servico
						set 	nm_usuario_exec = nm_usuario_p
						where 	nr_sequencia	= nr_ordem_serv_p
						and		coalesce(nm_usuario_exec::text, '') = '';
					end if;

			CALL man_gerar_previsao_dia(dt_ativ_prev_p, nm_usuario_prev_p);

		end;
	end if;
	
	if (ds_mensagem_prog_p IS NOT NULL AND ds_mensagem_prog_p::text <> '') then
		insert into man_ordem_serv_tecnico(nr_sequencia,
			nr_seq_ordem_serv,
			dt_atualizacao,
			nm_usuario,
			nr_seq_tipo,
			ds_relat_tecnico,
			dt_liberacao,
			dt_historico,
			nm_usuario_lib,
			ie_origem)
		values (	nextval('man_ordem_serv_tecnico_seq'),
			nr_ordem_serv_p,
			clock_timestamp(),
			nm_usuario_p,
			7,
			ds_mensagem_prog_p,
			clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p,
			'I');
	end if;
		
	if (ds_mensagem_cli_p IS NOT NULL AND ds_mensagem_cli_p::text <> '') then
		
		select	max(b.nr_seq_idioma)
		into STRICT	nr_seq_idioma_loc_w
		from	man_localizacao a,
				pessoa_juridica b
		where	a.cd_cnpj = b.cd_cgc
		and		a.nr_sequencia = nr_seq_loc_w
		and		b.nr_seq_idioma <> 1
		order by	1;
		
		SELECT	max(cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_w
		FROM	cadastro_revisor_historico
		WHERE	nr_seq_idioma = nr_seq_idioma_loc_w
		AND SUBSTR(obter_usuario_pessoa(cd_pessoa_fisica), 1, 15)  = nm_usuario_p
		ORDER BY 	1;
		
		if (coalesce(nr_seq_idioma_loc_w::text, '') = '' or (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '')) then		
			insert into man_ordem_serv_tecnico(nr_sequencia,
				nr_seq_ordem_serv,
				dt_atualizacao,
				nm_usuario,
				nr_seq_tipo,
				ds_relat_tecnico,
				dt_liberacao,
				dt_historico,
				nm_usuario_lib,
				ie_origem)
			values (	nextval('man_ordem_serv_tecnico_seq'),
				nr_ordem_serv_p,
				clock_timestamp(),
				nm_usuario_p,
				1,
				ds_mensagem_cli_p,
				clock_timestamp(),
				clock_timestamp(),
				nm_usuario_p,
				'I');
		else
			insert into man_ordem_serv_tecnico(nr_sequencia,
				nr_seq_ordem_serv,
				dt_atualizacao,
				nm_usuario,
				nr_seq_tipo,
				ds_relat_tecnico,
				dt_liberacao,
				dt_historico,
				nm_usuario_lib,
				ie_origem)
			values (	nextval('man_ordem_serv_tecnico_seq'),
				nr_ordem_serv_p,
				clock_timestamp(),
				nm_usuario_p,
				1,
				ds_mensagem_cli_p,
				null,
				clock_timestamp(),
				null,
				'I');
		end if;	
	end if;
	
	if (ie_obriga_news_w <> ie_obriga_news_p) then
		if (ie_obriga_news_p = 'N') then
			nm_usuario_lib_news_w	:= nm_usuario_p;
			dt_libera_news_w		:= clock_timestamp();
		elsif (ie_obriga_news_p = 'S') then
			nm_usuario_lib_news_w	:= null;
			dt_libera_news_w		:= null;
		end if;
	end if;

	select	man_complaint_pck.obter_status_complaint(nr_ordem_serv_p)
	into STRICT	ie_status_complaint_w
	;
	
	if (ie_status_complaint_w = 'WT') then
		nr_seq_estagio_w := 2577;
	end if;
	
	update 	man_ordem_servico
	set 	ie_prioridade		= coalesce(ie_prioridade_p, ie_prioridade),
		nr_seq_complex		= coalesce(nr_complexidade_p, 2), 
		nr_seq_estagio		= coalesce(nr_seq_estagio_w, nr_seq_estagio),
		ie_obriga_news		= coalesce(ie_obriga_news_p, ie_obriga_news),
		nm_usuario_lib_news	= nm_usuario_lib_news_w,
		dt_libera_news		= dt_libera_news_w,
		ds_just_ret_news	= ds_just_ret_news_p,
		ie_atualizacao_migracao	= coalesce(ie_atualizacao_migracao_p, ie_atualizacao_migracao),
		ds_just_migr_neg	= coalesce(ds_just_migr_neg, CASE WHEN ie_atualizacao_migracao_p='N' THEN  obter_desc_expressao(790594, 'Necessidade de revisao dos projetos/componentes(Ordem de servico de migracao).')  ELSE null END ),
		nr_seq_severidade_wheb 	= coalesce(nr_seq_severidade_p, nr_seq_severidade_wheb),
		ie_plataforma		= coalesce(ie_plataforma_p, ie_plataforma),
		ie_ambiente		= coalesce(ie_ambiente_p, ie_ambiente),
		nr_versao_cliente_abertura = coalesce(nr_versao_cli_abertura_p, nr_versao_cliente_abertura),
		nr_seq_grupo_des	= coalesce(nr_seq_grupo_des_p, nr_seq_grupo_des),
		ie_resp_teste		= coalesce(ie_resp_teste_p, 'A'),
		ie_classificacao		= coalesce(ie_classificacao_p, ie_classificacao),
		ie_tipo_ordem			= coalesce(ie_tipo_ordem_p, ie_tipo_ordem),
		nr_seq_tipo_ordem		= coalesce(nr_seq_tipo_ordem_p, nr_seq_tipo_ordem),
		ds_just_severidade 		= ds_just_severidade_p,
		nr_seq_intencao_uso		= nr_seq_intencao_uso_p,
		nm_usuario			= nm_usuario_p,
		dt_atualizacao			= clock_timestamp()
	where 	nr_sequencia		= nr_ordem_serv_p;
	
	if (nr_seq_tipo_ordem_p IS NOT NULL AND nr_seq_tipo_ordem_p::text <> '') then
		CALL man_atualiza_tipo_ordem_filha(nr_ordem_serv_p, nr_seq_tipo_ordem_p, nm_usuario_p);
	end if;
	
	/* FINALIZAR EXECUCAO ANALISTA CASO MARCADO */

	if (ie_encerrar_ativ_p = 'S') then
		update	man_ordem_servico_exec
		set	dt_fim_execucao	= clock_timestamp()
		where	nr_seq_ordem	= nr_ordem_serv_p
		and	nm_usuario_exec	= nm_usuario_p;
		
		select	count(*)
		into STRICT	qt_registro_w
		from	usuario_grupo_des b,
			man_ordem_servico_exec a
		where	a.nm_usuario_exec = b.nm_usuario_grupo
		and	a.nr_seq_ordem	= nr_ordem_serv_p
		and	coalesce(a.dt_fim_execucao::text, '') = '';
		
		if (qt_registro_w = 0) then
			CALL wheb_mensagem_pck.EXIBIR_MENSAGEM_ABORT(187461);
		end if;
	end if;
	
	commit;		
	
	end;
end if;	
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pre_analise_insert_ativ_prev (nr_ordem_serv_p bigint, nr_seq_atividade_prev_p bigint, nm_usuario_p text, ie_prioridade_p text, qt_min_prev_p bigint, qt_prior_ativ_p bigint, nm_usuario_prev_p text, dt_ativ_prev_p timestamp, ds_mensagem_prog_p text, ds_mensagem_cli_p text, nr_complexidade_p bigint, ie_obriga_news_p text, ie_atualizacao_migracao_p text, ds_just_ret_news_p text, nr_seq_severidade_p bigint, ie_grupo_p text, ie_plataforma_p text, ie_ambiente_p text default 'P', nr_versao_cli_abertura_p text default '', ie_encerrar_ativ_p text default 'N', nr_seq_grupo_des_p bigint default null, ie_resp_teste_p text default null, nr_seq_sintoma_p bigint default null, ds_just_severidade_p text default null, ie_classificacao_p text default null, ie_tipo_ordem_p bigint default null, nr_seq_tipo_ordem_p bigint default null, nr_seq_intencao_uso_p bigint default null) FROM PUBLIC;

