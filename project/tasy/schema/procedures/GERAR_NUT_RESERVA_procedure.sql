-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nut_reserva (nr_seq_servico_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, cd_pessoa_fisica_p text, nm_usuario_p text, nr_seq_restaurante_p bigint, cd_estabelecimento_p bigint, ds_observacao_p text, nr_seq_local_refeicao_p bigint default null, ds_mensagem_p INOUT text DEFAULT NULL, hr_entrega_p timestamp default null) AS $body$
DECLARE


nr_seq_perfil_pf_w              bigint;
ie_escala_w                     varchar(10);
ie_periodo_w                    varchar(1);
ie_gerar_funcionario_w          varchar(1);
ds_mensagem_w                   varchar(2000);
dt_servico_w                    timestamp;
ds_datas_servicos_w             varchar(1000);
qt_registros_w                  bigint;
ie_informa_hora_entrega_w       varchar(1);
qt_reserva_w                    integer;

C01 CURSOR FOR
        SELECT  dt_servico
        FROM    nut_reserva a
        WHERE   nr_seq_servico = nr_seq_servico_p
        AND     ((nr_seq_restaurante = nr_seq_restaurante_p) OR (nr_seq_restaurante_p = 0))
        AND     dt_servico BETWEEN dt_inicial_p AND fim_dia(dt_final_p)
        AND     (TO_DATE(TO_CHAR(dt_servico,'dd/mm/yyyy') || ' ' || TO_CHAR(hr_inicio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') < (clock_timestamp() + (coalesce(qt_min_antecedencia,0) / 1440)))
        AND     'S' = obter_se_perfil_nut_liberado(nr_seq_perfil_pf_w, nr_sequencia)
        AND     ((ie_gerar_funcionario_w = 'S')
        or (((ie_gerar_funcionario_w = 'V')
        and     not exists (    SELECT  1
                                from    nut_reserva_pf b
                                where   b.nr_seq_nut_reserva = a.nr_sequencia
                                and     b.cd_pessoa_fisica = cd_pessoa_fisica_p
                                and     a.nr_seq_servico = nr_seq_servico_p
                                and     a.dt_servico BETWEEN dt_inicial_p AND fim_dia(dt_final_p)
        and     coalesce(b.nr_seq_tipo_refeicao::text, '') = '')) 
        or  ((ie_gerar_funcionario_w = 'N')
        and not exists (select  1
                        from  nut_reserva_pf b
                        where  b.nr_seq_nut_reserva = a.nr_sequencia
                        and  b.cd_pessoa_fisica = cd_pessoa_fisica_p
                        and  a.nr_seq_servico = nr_seq_servico_p
                        and  a.dt_servico BETWEEN dt_inicial_p AND fim_dia(dt_final_p)))));

C02 CURSOR FOR
        SELECT  dt_servico
        FROM    nut_reserva a
        WHERE   nr_seq_servico = nr_seq_servico_p
        AND     ((nr_seq_restaurante = nr_seq_restaurante_p) OR (nr_seq_restaurante_p = 0))
        AND     TO_CHAR(dt_servico,'dd/mm/yyyy') IN (   SELECT  TO_CHAR(dt_inicio,'dd/mm/yyyy')
                                                        FROM    escala_diaria
                                                        WHERE   dt_inicio BETWEEN dt_inicial_p AND fim_dia(dt_final_p)
                                                        AND     cd_pessoa_fisica = cd_pessoa_fisica_p

UNION ALL

                                                        SELECT  TO_CHAR(dt_inicio,'dd/mm/yyyy') FROM escala_diaria a,escala_diaria_adic b
                                                        WHERE   a.dt_inicio BETWEEN dt_inicial_p AND fim_dia(dt_final_p)
                                                        AND     a.nr_sequencia = b.NR_SEQ_ESCALA_DIARIA
                                                        AND     b.cd_pessoa_fisica = cd_pessoa_fisica_p)
        AND     dt_servico BETWEEN dt_inicial_p AND fim_dia(dt_final_p)
        AND     (TO_DATE(TO_CHAR(dt_servico,'dd/mm/yyyy') || ' ' || TO_CHAR(hr_inicio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') < (clock_timestamp() + (coalesce(qt_min_antecedencia,0) / 1440)))
        AND     'S' = obter_se_perfil_nut_liberado(nr_seq_perfil_pf_w, nr_sequencia)
        AND     ((ie_gerar_funcionario_w = 'S') 
        or      (((ie_gerar_funcionario_w = 'V')
        and     not exists (    select  1
                                from  nut_reserva_pf b
                                where  b.nr_seq_nut_reserva = a.nr_sequencia
                                and  b.cd_pessoa_fisica = cd_pessoa_fisica_p
                                and  a.nr_seq_servico = nr_seq_servico_p
                                and  a.dt_servico BETWEEN dt_inicial_p AND fim_dia(dt_final_p)
                                and  coalesce(b.nr_seq_tipo_refeicao::text, '') = ''))
        or      ((ie_gerar_funcionario_w = 'N')
        and not exists (select  1
                        from  nut_reserva_pf b
                        where  b.nr_seq_nut_reserva = a.nr_sequencia
                        and  b.cd_pessoa_fisica = cd_pessoa_fisica_p
                        and  a.nr_seq_servico = nr_seq_servico_p
                        and  a.dt_servico BETWEEN dt_inicial_p AND fim_dia(dt_final_p)))));


BEGIN

qt_reserva_w := Obter_Param_Usuario(7026, 2, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, qt_reserva_w); -- 0
ie_escala_w := Obter_Param_Usuario(7026, 15, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_escala_w);  -- N
ie_periodo_w := Obter_Param_Usuario(7026, 24, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_periodo_w);  -- S
ie_gerar_funcionario_w := Obter_Param_Usuario(7026, 25, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_gerar_funcionario_w);  -- N
ie_informa_hora_entrega_w := Obter_Param_Usuario(7026, 34, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_informa_hora_entrega_w); -- N
IF (nr_seq_servico_p IS NOT NULL AND nr_seq_servico_p::text <> '') AND (dt_inicial_p IS NOT NULL AND dt_inicial_p::text <> '') AND (dt_final_p IS NOT NULL AND dt_final_p::text <> '') AND (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') THEN

        SELECT  coalesce(nr_seq_nut_perfil, 0)
        INTO STRICT  nr_seq_perfil_pf_w
        FROM  pessoa_fisica
        WHERE  cd_pessoa_fisica = cd_pessoa_fisica_p;

        IF (ie_escala_w = 'S') THEN
                INSERT INTO nut_reserva_pf(
                        nr_sequencia,
                        nr_seq_nut_reserva,
                        qt_reserva,
                        cd_pessoa_fisica,
                        dt_atualizacao_nrec,
                        nm_usuario_nrec,
                        dt_atualizacao,
                        nm_usuario,
                        cd_setor_atendimento,
                        cd_estabelecimento,
                        ds_observacao,
                        ie_status,
                        nr_seq_local_refeicao,
                        hr_entrega)
                        SELECT  nextval('nut_reserva_pf_seq'),
                        nr_sequencia,
                        qt_reserva_w,
                        cd_pessoa_fisica_p,
                        clock_timestamp(),
                        nm_usuario_p,
                        clock_timestamp(),
                        nm_usuario_p,
                        wheb_usuario_pck.get_cd_setor_atendimento,
                        cd_estabelecimento_p,
                        ds_observacao_p,
                        'P',
                        nr_seq_local_refeicao_p,
                        hr_entrega_p
                FROM    nut_reserva a
                WHERE  nr_seq_servico = nr_seq_servico_p
                AND     ((nr_seq_restaurante = nr_seq_restaurante_p) OR (nr_seq_restaurante_p = 0))
                AND     TO_CHAR(dt_servico,'dd/mm/yyyy') IN (   SELECT  TO_CHAR(dt_inicio,'dd/mm/yyyy')
                                                                FROM    escala_diaria
                                                                WHERE   dt_inicio BETWEEN dt_inicial_p AND fim_dia(dt_final_p)
                                                                AND     cd_pessoa_fisica = cd_pessoa_fisica_p

UNION ALL

                                                                SELECT  TO_CHAR(dt_inicio,'dd/mm/yyyy') FROM escala_diaria a,escala_diaria_adic b
                                                                WHERE   a.dt_inicio BETWEEN dt_inicial_p AND fim_dia(dt_final_p)
                                                                AND     a.nr_sequencia = b.NR_SEQ_ESCALA_DIARIA
                                                                AND     b.cd_pessoa_fisica = cd_pessoa_fisica_p)
                AND     (((TO_DATE(TO_CHAR(dt_servico,'dd/mm/yyyy') || ' ' || TO_CHAR(hr_inicio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') > (clock_timestamp() + (coalesce(qt_min_antecedencia,0) / 1440)))
                and (ie_periodo_w = 'N'))
                or      ((to_char(dt_servico,'dd/mm/yyyy') = to_char(clock_timestamp(),'dd/mm/yyyy')) and (ie_periodo_w = 'S')))
                AND     'S' = obter_se_perfil_nut_liberado(nr_seq_perfil_pf_w, nr_sequencia)
                AND     ((hr_entrega_p IS NOT NULL AND hr_entrega_p::text <> '')
                AND (ie_informa_hora_entrega_w = 'S')
                AND     hr_entrega_p BETWEEN TO_DATE(TO_CHAR(dt_servico,'dd/mm/yyyy') || ' ' || TO_CHAR(hr_inicio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
                AND     TO_DATE(TO_CHAR(dt_servico,'dd/mm/yyyy') || ' ' || TO_CHAR(hr_final,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
                OR (ie_informa_hora_entrega_w = 'N'))
                AND     ((ie_gerar_funcionario_w = 'S') 
                        or (((ie_gerar_funcionario_w = 'V')
                        and not exists (select  1
                                        from    nut_reserva_pf b
                                        where  b.nr_seq_nut_reserva = a.nr_sequencia
                                        and     b.cd_pessoa_fisica = cd_pessoa_fisica_p
                                        and     a.nr_seq_servico = nr_seq_servico_p
                                        and     a.dt_servico BETWEEN dt_inicial_p AND fim_dia(dt_final_p)
                                        and     coalesce(b.nr_seq_tipo_refeicao::text, '') = ''))
                        or  ((ie_gerar_funcionario_w = 'N')
                        and not exists (select  1
                                        from    nut_reserva_pf b
                                        where  b.nr_seq_nut_reserva = a.nr_sequencia
                                        and     b.cd_pessoa_fisica = cd_pessoa_fisica_p
                                        and     a.nr_seq_servico = nr_seq_servico_p
                                        and     a.dt_servico BETWEEN dt_inicial_p AND fim_dia(dt_final_p)))));

                if (ie_periodo_w = 'N') then
                        qt_registros_w := 0;

                        open C02;
                        loop
                        fetch C02 into
                                dt_servico_w;
                        EXIT WHEN NOT FOUND; /* apply on C02 */
                        begin
                                ds_datas_servicos_w   := substr(ds_datas_servicos_w || to_char(dt_servico_w,'dd/mm/yyyy') || ', ',1,1000);
                                qt_registros_w    := qt_registros_w + 1;
                        end;
                        end loop;
                        close C02;

                        if (qt_registros_w > 1) then
                        ds_mensagem_w := wheb_mensagem_pck.get_texto(307844, 'DS_DATAS_SERVICOS_W=' || substr(ds_datas_servicos_w,1,length(ds_datas_servicos_w)-2));
                        -- As reservas dos dias #@DS_DATAS_SERVICOS_W#@ não foram geradas devido ao tempo limite ter sido excedido
                        elsif (qt_registros_w = 1) then
                        ds_mensagem_w := wheb_mensagem_pck.get_texto(307846, 'DS_DATAS_SERVICOS_W=' || substr(ds_datas_servicos_w,1,length(ds_datas_servicos_w)-2));
                        -- A reserva do dia #@DS_DATAS_SERVICOS_W#@ não foi gerada devido ao tempo limite ter sido excedido
                        end if;

                end if;

        ELSE
                INSERT INTO nut_reserva_pf(
                        nr_sequencia,
                        nr_seq_nut_reserva,
                        qt_reserva,
                        cd_pessoa_fisica,
                        dt_atualizacao_nrec,
                        nm_usuario_nrec,
                        dt_atualizacao,
                        nm_usuario,
                        cd_setor_atendimento,
                        cd_estabelecimento,
                        ds_observacao,
                        ie_status,
                        nr_seq_local_refeicao,
                        hr_entrega)
                SELECT  nextval('nut_reserva_pf_seq'),
                        nr_sequencia,
                        qt_reserva_w,
                        cd_pessoa_fisica_p,
                        clock_timestamp(),
                        nm_usuario_p,
                        clock_timestamp(),
                        nm_usuario_p,
                        wheb_usuario_pck.get_cd_setor_atendimento,
                        cd_estabelecimento_p,
                        ds_observacao_p,
                        'P',
                        nr_seq_local_refeicao_p,
                        hr_entrega_p
                FROM    nut_reserva a
                WHERE  nr_seq_servico = nr_seq_servico_p
                AND     ((nr_seq_restaurante = nr_seq_restaurante_p) OR (nr_seq_restaurante_p = 0))
                AND     dt_servico BETWEEN dt_inicial_p AND fim_dia(dt_final_p)
                AND     (((TO_DATE(TO_CHAR(dt_servico,'dd/mm/yyyy') || ' ' || TO_CHAR(hr_inicio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') > (clock_timestamp() + (coalesce(qt_min_antecedencia,0) / 1440)))
                and (ie_periodo_w = 'N'))
                or      ((to_char(dt_servico,'dd/mm/yyyy') >= to_char(clock_timestamp(),'dd/mm/yyyy')) and (ie_periodo_w = 'S')))
                AND     'S' = obter_se_perfil_nut_liberado(nr_seq_perfil_pf_w, nr_sequencia)
                AND     ((hr_entrega_p IS NOT NULL AND hr_entrega_p::text <> '')
                AND (ie_informa_hora_entrega_w = 'S')
                AND     hr_entrega_p BETWEEN TO_DATE(TO_CHAR(dt_servico,'dd/mm/yyyy') || ' ' || TO_CHAR(hr_inicio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
                AND     TO_DATE(TO_CHAR(dt_servico,'dd/mm/yyyy') || ' ' || TO_CHAR(hr_final,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
                OR (ie_informa_hora_entrega_w = 'N'))
                AND     ((ie_gerar_funcionario_w = 'S') or (((ie_gerar_funcionario_w = 'V')
                and not exists (SELECT  1
                                from  nut_reserva_pf b
                                where  b.nr_seq_nut_reserva = a.nr_sequencia
                                and  b.cd_pessoa_fisica = cd_pessoa_fisica_p
                                and  a.nr_seq_servico = nr_seq_servico_p
                                and  a.dt_servico BETWEEN dt_inicial_p AND fim_dia(dt_final_p)
                                and  coalesce(b.nr_seq_tipo_refeicao::text, '') = ''))
                or  ((ie_gerar_funcionario_w = 'N')
                and not exists (select  1
                                from  nut_reserva_pf b
                                where  b.nr_seq_nut_reserva = a.nr_sequencia
                                and  b.cd_pessoa_fisica = cd_pessoa_fisica_p
                                and  a.nr_seq_servico = nr_seq_servico_p
                                and  a.dt_servico BETWEEN dt_inicial_p AND fim_dia(dt_final_p)))));

                if (ie_periodo_w = 'N') then
                        qt_registros_w := 0;
                        open C01;
                        loop
                        fetch C01 into
                                dt_servico_w;
                        EXIT WHEN NOT FOUND; /* apply on C01 */
                        begin
                                ds_datas_servicos_w   := substr(ds_datas_servicos_w || to_char(dt_servico_w,'dd/mm/yyyy') || ', ',1,1000);
                                qt_registros_w    := qt_registros_w + 1;
                        end;
                        end loop;
                        close C01;

                        if (qt_registros_w > 1) then
                                ds_mensagem_w := wheb_mensagem_pck.get_texto(307844, 'DS_DATAS_SERVICOS_W=' || substr(ds_datas_servicos_w,1,length(ds_datas_servicos_w)-2));
                                -- As reservas dos dias #@DS_DATAS_SERVICOS_W#@ não foram geradas devido ao tempo limite ter sido excedido
                        elsif (qt_registros_w = 1) then
                                ds_mensagem_w := wheb_mensagem_pck.get_texto(307846, 'DS_DATAS_SERVICOS_W=' || substr(ds_datas_servicos_w,1,length(ds_datas_servicos_w)-2));
                                -- A reserva do dia #@DS_DATAS_SERVICOS_W#@ não foi gerada devido ao tempo limite ter sido excedido
                        end if;

                end if;

        END IF;
END IF;

ds_mensagem_p := substr(ds_mensagem_w,1,2000);

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nut_reserva (nr_seq_servico_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, cd_pessoa_fisica_p text, nm_usuario_p text, nr_seq_restaurante_p bigint, cd_estabelecimento_p bigint, ds_observacao_p text, nr_seq_local_refeicao_p bigint default null, ds_mensagem_p INOUT text DEFAULT NULL, hr_entrega_p timestamp default null) FROM PUBLIC;

