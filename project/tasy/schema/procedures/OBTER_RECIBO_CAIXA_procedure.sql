-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_recibo_caixa (nr_seq_caixa_rec_p bigint, nr_recibo_p INOUT bigint, nm_usuario_p text) AS $body$
DECLARE


-- Não dar commit
nr_sequencia_w		bigint;
cd_estabelecimento_w	bigint;
nr_recibo_atual_w		bigint;
nr_seq_caixa_w		bigint;
nr_recibo_max_w		bigint;
ie_origem_recibo_w	varchar(5);
nr_recibo_w		varchar(20);

c01 CURSOR FOR
SELECT	nr_sequencia,
	nr_recibo_atual,
	nr_recibo_max,
	ie_origem_recibo
from	regra_recibo_caixa
where	coalesce(cd_estabelecimento,cd_estabelecimento_w)	= cd_estabelecimento_w
and	coalesce(nr_seq_caixa, nr_seq_caixa_w) = nr_seq_caixa_w
order by cd_estabelecimento,
	nr_seq_caixa;


BEGIN

select	max(c.cd_estabelecimento),
	max(c.nr_sequencia)
into STRICT	cd_estabelecimento_w,
	nr_seq_caixa_w
from	caixa c,
	caixa_saldo_diario b,
	caixa_receb a
where	a.nr_sequencia		= nr_seq_caixa_rec_p
and	a.nr_seq_saldo_caixa	= b.nr_sequencia
and	b.nr_seq_caixa		= c.nr_sequencia;

nr_sequencia_w		:= null;
nr_recibo_atual_w	:= null;
/*lhalves OS 445102 em 29/06/2012*/

lock table regra_recibo_caixa in exclusive mode;

open c01;
loop
fetch c01 into
	nr_sequencia_w,
	nr_recibo_atual_w,
	nr_recibo_max_w,
	ie_origem_recibo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;

if (ie_origem_recibo_w = '1') then

	select	max(nr_recibo)
	into STRICT	nr_recibo_w
	from (SELECT	c.nr_recibo
		from	nota_fiscal c,
			titulo_receber b,
			titulo_receber_liq a
		where	b.nr_seq_nf_saida		= c.nr_sequencia
		and	a.nr_titulo		= b.nr_titulo
		and	a.nr_seq_caixa_rec	= nr_seq_caixa_rec_p
		
union

		SELECT	c.nr_recibo
		from	nota_fiscal c,
			titulo_receber b,
			titulo_receber_liq a
		where	b.nr_seq_protocolo		= c.nr_seq_protocolo
		and	a.nr_titulo		= b.nr_titulo
		and	a.nr_seq_caixa_rec	= nr_seq_caixa_rec_p) alias2;

end if;

if (nr_recibo_w IS NOT NULL AND nr_recibo_w::text <> '') then

	nr_recibo_atual_w	:= (nr_recibo_w)::numeric;

elsif (nr_recibo_atual_w IS NOT NULL AND nr_recibo_atual_w::text <> '') then

	if (coalesce(nr_recibo_max_w,0) > 0) and (nr_recibo_atual_w > nr_recibo_max_w) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(195471,'NR_RECIBO_ATUAL_W='||nr_recibo_atual_w);
		/*r.aise_application_error(-20011,	'O número máximo do recibo foi atingido! Verifique a Regra número recibo de caixa.' || chr(13) || chr(10) ||
						'Cadastros (SHIFT + F11) / Aplicação principal / Financeiro' || chr(13) || chr(10) ||
						'Recibo: ' || nr_recibo_atual_w);*/
	end if;

	nr_recibo_atual_w := nr_recibo_atual_w + 1;

	update	regra_recibo_caixa
	set	nr_recibo_atual		= nr_recibo_atual_w,
		nm_usuario		= nm_usuario_p
	where	nr_sequencia		= nr_sequencia_w;
else
	select	coalesce(max(nr_recibo),0) + 1
	into STRICT	nr_recibo_atual_w
	from	caixa_receb;
end if;

nr_recibo_p		:= nr_recibo_atual_w;

-- Não dar commit
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_recibo_caixa (nr_seq_caixa_rec_p bigint, nr_recibo_p INOUT bigint, nm_usuario_p text) FROM PUBLIC;

