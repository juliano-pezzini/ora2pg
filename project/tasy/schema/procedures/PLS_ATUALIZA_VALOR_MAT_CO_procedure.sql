-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualiza_valor_mat_co ( nr_sequencia_p bigint, ie_gravar_log_p text, ie_pos_estab_faturamento_p pls_parametros.ie_pos_estab_faturamento%type, ie_geracao_pos_estabelecido_p pls_parametros.ie_geracao_pos_estabelecido%type, nm_usuario_p text, dados_regra_preco_material_p INOUT pls_cta_valorizacao_pck.dados_regra_preco_material) AS $body$
DECLARE


_ora2pg_r RECORD;
nr_seq_conta_w			bigint;
cd_estabelecimento_w		integer;
dt_preco_w			timestamp;
qt_material_w			double precision;
nr_seq_cod_material_w		bigint;
ie_tipo_despesa_w		varchar(10);
ie_origem_preco_w		smallint;
nr_seq_outorgante_w		bigint;
nr_seq_segurado_w		bigint;
vl_beneficiario_w		double precision	:= 0;
ds_retorno_w			varchar(100);
nr_seq_regra_pos_estab_w	bigint;
nr_seq_plano_w			bigint;
tx_ajuste_benef_lib_w		double precision;
nr_seq_categoria_w		bigint;
nr_seq_tipo_atendimento_w	bigint;
nr_seq_clinica_w		bigint;
ie_tipo_guia_w			varchar(2);
nr_seq_tipo_acomodacao_w	bigint;
cd_guia_referencia_w		varchar(20);
qt_autorizacao_espec_w		bigint;
ie_autorizacao_espec_w		varchar(10)	:= 'N';
nr_seq_plano_espec_w		bigint;
nr_seq_intercambio_w		bigint;
nr_seq_prestador_exec_w		bigint;
ie_internado_w			varchar(2);
nr_seq_pos_cabecalho_w		pls_conta_pos_cabecalho.nr_sequencia%type;
dados_regra_preco_material_w	pls_cta_valorizacao_pck.dados_regra_preco_material;
ie_tipo_log_w			pls_log_calculo_proc.ie_tipo_log%type := 'C';
nr_seq_ultimo_pos_w			pls_conta_pos_estabelecido.nr_sequencia%type;
ie_regime_atendimento_w		pls_regra_preco_mat.ie_regime_atendimento%type;
ie_saude_ocupacional_w		pls_regra_preco_mat.ie_saude_ocupacional%type;


BEGIN

if (ie_pos_estab_faturamento_p = 'N') or (ie_geracao_pos_estabelecido_p != 'F') then
	
	/* Obter dados do material */

	select	nr_seq_conta,
		nr_seq_material,
		ie_tipo_despesa,
		ie_origem_preco,
		coalesce(qt_material_imp,0)
	into STRICT	nr_seq_conta_w,
		nr_seq_cod_material_w,
		ie_tipo_despesa_w,
		ie_origem_preco_w,
		qt_material_w
	from	pls_conta_mat
	where	nr_sequencia	= nr_sequencia_p;

	/* Obter dados da conta */

	select	nr_seq_segurado,
		cd_estabelecimento,
		coalesce(nr_seq_tipo_acomodacao,0),
		coalesce(nr_seq_tipo_atendimento,0),
		nr_seq_clinica,
		ie_tipo_guia,
		cd_guia_referencia,
		nr_seq_prestador_exec,
		nr_seq_guia,
		ie_regime_atendimento,
		ie_saude_ocupacional
	into STRICT	nr_seq_segurado_w,
		cd_estabelecimento_w,
		nr_seq_tipo_acomodacao_w,
		nr_seq_tipo_atendimento_w,
		nr_seq_clinica_w,
		ie_tipo_guia_w,
		cd_guia_referencia_w,
		nr_seq_prestador_exec_w,
		nr_seq_plano_espec_w,
		ie_regime_atendimento_w,
		ie_saude_ocupacional_w
	from	pls_conta
	where	nr_sequencia	= nr_seq_conta_w;
else
	
	select max(a.nr_sequencia)
	into STRICT	nr_seq_ultimo_pos_w
	FROM pls_conta_mat b
LEFT OUTER JOIN pls_conta_pos_estabelecido a ON (b.nr_sequencia = a.nr_seq_conta_mat)
WHERE b.nr_sequencia	= nr_sequencia_p  and coalesce(a.nr_seq_disc_mat::text, '') = '' and ( );
	
	/* Obter dados do material */

	select	b.nr_seq_conta,
		coalesce(a.nr_seq_material,b.nr_seq_material),
		b.ie_tipo_despesa,
		b.ie_origem_preco,
		coalesce(b.qt_material_imp,0)
	into STRICT	nr_seq_conta_w,
		nr_seq_cod_material_w,
		ie_tipo_despesa_w,
		ie_origem_preco_w,
		qt_material_w
	FROM pls_conta_mat b
LEFT OUTER JOIN pls_conta_pos_estabelecido a ON (b.nr_sequencia = a.nr_seq_conta_mat AND nr_seq_ultimo_pos_w = a.nr_sequencia)
WHERE b.nr_sequencia	= nr_sequencia_p  and coalesce(a.nr_seq_disc_mat::text, '') = '' and ( );
	
	select	max(c.nr_sequencia)
	into STRICT	nr_seq_pos_cabecalho_w
	from	pls_conta		a,
		pls_segurado		b,
		pls_conta_pos_cabecalho c
	where	a.nr_seq_segurado	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_conta_w
	and	a.nr_sequencia		= c.nr_seq_conta;
	
	if (nr_seq_pos_cabecalho_w IS NOT NULL AND nr_seq_pos_cabecalho_w::text <> '') then
		/* Obter dados da conta */

		select	nr_seq_segurado,
			cd_estabelecimento,
			coalesce(nr_seq_tipo_acomodacao,0),
			coalesce(nr_seq_tipo_atendimento,0),
			nr_seq_clinica,
			ie_tipo_guia,
			cd_guia_referencia,
			nr_seq_prestador_exec,
			ie_regime_atendimento,
			ie_saude_ocupacional
		into STRICT	nr_seq_segurado_w,
			cd_estabelecimento_w,
			nr_seq_tipo_acomodacao_w,
			nr_seq_tipo_atendimento_w,
			nr_seq_clinica_w,
			ie_tipo_guia_w,
			cd_guia_referencia_w,
			nr_seq_prestador_exec_w,
			ie_regime_atendimento_w,
			ie_saude_ocupacional_w
		from	pls_conta_pos_cabecalho
		where	nr_sequencia	= nr_seq_pos_cabecalho_w;
	end if;
	
	select	nr_seq_guia
	into STRICT	nr_seq_plano_espec_w
	from	pls_conta
	where	nr_sequencia	= nr_seq_conta_w;
end if;

ie_internado_w	:= pls_obter_se_internado(nr_seq_conta_w,'C');

if (ie_internado_w	= 'N') then
	ie_internado_w	:= 'S';
end if;

/*Obter se existe material especial*/

select	count(1)
into STRICT	qt_autorizacao_espec_w
from	pls_solic_lib_mat_med	a,
	pls_guia_plano		b
where	a.nr_seq_guia	= b.nr_sequencia
and	b.nr_sequencia	= nr_seq_plano_espec_w;

if (qt_autorizacao_espec_w	> 0) then
	ie_autorizacao_espec_w	:= 'S';
end if;

if (nr_seq_tipo_acomodacao_w IS NOT NULL AND nr_seq_tipo_acomodacao_w::text <> '') then
	select	max(nr_seq_categoria)
	into STRICT	nr_seq_categoria_w
	from	pls_regra_categoria
	where	nr_seq_tipo_acomodacao	= nr_seq_tipo_acomodacao_w;
end if;

/* Obter dados do segurado */

select	max(nr_seq_plano),
	max(nr_seq_intercambio)
into STRICT	nr_seq_plano_w,
	nr_seq_intercambio_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_w;

/* Obter dados do plano */

select	max(nr_seq_outorgante)
into STRICT	nr_seq_outorgante_w
from	pls_plano
where	nr_sequencia	= nr_seq_plano_w;

dt_preco_w	:= pls_obter_data_preco_item(nr_sequencia_p, 'M');

SELECT * FROM pls_define_preco_material(cd_estabelecimento_w, nr_seq_prestador_exec_w, dt_preco_w, nr_seq_cod_material_w, 4, ie_tipo_despesa_w, ie_origem_preco_w, 'O', nr_seq_outorgante_w, nr_seq_segurado_w, nr_seq_intercambio_w, '', nr_seq_categoria_w, nr_seq_tipo_acomodacao_w, nr_seq_tipo_atendimento_w, nr_seq_clinica_w, ie_tipo_guia_w, ie_autorizacao_espec_w, nr_seq_plano_espec_w, ie_gravar_log_p, nm_usuario_p, nr_sequencia_p, '', null, null, null, null, null, null, null, null, null, null, ie_internado_w, null, null, null, null, vl_beneficiario_w, ds_retorno_w, ds_retorno_w, ds_retorno_w, ds_retorno_w, ds_retorno_w, dados_regra_preco_material_w, null, ie_regime_atendimento_w, ie_saude_ocupacional_w) INTO STRICT _ora2pg_r;
 vl_beneficiario_w := _ora2pg_r.vl_material_p; ds_retorno_w := _ora2pg_r.dt_ult_vigencia_p; ds_retorno_w := _ora2pg_r.nr_seq_material_preco_p; ds_retorno_w := _ora2pg_r.vl_material_simpro_p; ds_retorno_w := _ora2pg_r.vl_material_brasindice_p; ds_retorno_w := _ora2pg_r.vl_material_tabela_p; dados_regra_preco_material_w := _ora2pg_r.dados_regra_preco_material_p;

nr_seq_regra_pos_estab_w	:= dados_regra_preco_material_w.nr_sequencia;
	
vl_beneficiario_w	:= (coalesce(vl_beneficiario_w,0) * qt_material_w);

if (nr_seq_regra_pos_estab_w > 0) then
	select	coalesce(tx_ajuste_benef_lib,1)
	into STRICT	tx_ajuste_benef_lib_w
	from	pls_regra_preco_mat
	where	nr_sequencia	= nr_seq_regra_pos_estab_w;

	if (tx_ajuste_benef_lib_w > 0) and (tx_ajuste_benef_lib_w <> 1) then	
		vl_beneficiario_w	:= vl_beneficiario_w * tx_ajuste_benef_lib_w;
	end if;
	
	update	pls_conta_mat
	set	vl_beneficiario		= vl_beneficiario_w,
		nr_seq_regra_pos_estab	= nr_seq_regra_pos_estab_w
	where	nr_sequencia		= nr_sequencia_p;
else
	update	pls_conta_mat
	set	vl_beneficiario		= vl_beneficiario_w,
		nr_seq_regra_pos_estab	= nr_seq_regra_pos_estab_w
	where	nr_sequencia		= nr_sequencia_p;
end if;

dados_regra_preco_material_p	:= dados_regra_preco_material_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualiza_valor_mat_co ( nr_sequencia_p bigint, ie_gravar_log_p text, ie_pos_estab_faturamento_p pls_parametros.ie_pos_estab_faturamento%type, ie_geracao_pos_estabelecido_p pls_parametros.ie_geracao_pos_estabelecido%type, nm_usuario_p text, dados_regra_preco_material_p INOUT pls_cta_valorizacao_pck.dados_regra_preco_material) FROM PUBLIC;

