-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE oft_insere_capsulotomia ( nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, nr_seq_consulta_form_ant_p bigint, vListaCapsulotomia strRecTypeFormOft) AS $body$
DECLARE


nr_sequencia_w					oft_capsulotomia.nr_sequencia%type;
dt_exame_w						oft_capsulotomia.dt_registro%type;
ds_observacao_w				oft_capsulotomia.ds_observacao%type;
ie_olho_w						oft_capsulotomia.ie_olho%type;
nr_potencia_w					oft_capsulotomia.nr_potencia%type;
qt_disparos_w					oft_capsulotomia.qt_disparos%type;
qt_energia_utilizada_w		oft_capsulotomia.qt_energia_utilizada%type;
qt_tamanho_w					oft_capsulotomia.qt_tamanho%type;
cd_profissional_w				oft_capsulotomia.cd_profissional%type;
nm_usuario_w					usuario.nm_usuario%type := wheb_usuario_pck.get_nm_usuario;
ie_registrado_w				varchar(1) := 'N';
ds_erro_w						varchar(4000);

BEGIN
begin

if (coalesce(nr_seq_consulta_p,0) > 0) and (vListaCapsulotomia.count > 0) then
	for i in 1..vListaCapsulotomia.count loop
		begin
		if (vListaCapsulotomia[i](.ds_valor IS NOT NULL AND .ds_valor::text <> '')) or (vListaCapsulotomia[i](.nr_valor IS NOT NULL AND .nr_valor::text <> '')) then
			case upper(vListaCapsulotomia[i].nm_campo)
				when 'CD_PROFISSIONAL' then
					cd_profissional_w				:= vListaCapsulotomia[i].ds_valor;
				when 'DT_REGISTRO' then
					dt_exame_w 						:= pkg_date_utils.get_DateTime(vListaCapsulotomia[i].ds_valor);
				when 'DS_OBSERVACAO' then
					ds_observacao_w				:= vListaCapsulotomia[i].ds_valor;
					ie_registrado_w				:= 'S';
				when 'IE_OLHO' then
					ie_olho_w						:= vListaCapsulotomia[i].ds_valor;
				when 'NR_POTENCIA' then
					nr_potencia_w					:= vListaCapsulotomia[i].nr_valor;
					ie_registrado_w				:= 'S';
				when 'QT_DISPAROS' then
					qt_disparos_w					:= vListaCapsulotomia[i].nr_valor;
					ie_registrado_w				:= 'S';
				when 'QT_ENERGIA_UTILIZADA' then
					qt_energia_utilizada_w		:= vListaCapsulotomia[i].nr_valor;
					ie_registrado_w				:= 'S';
				when 'QT_TAMANHO' then
					qt_tamanho_w					:= vListaCapsulotomia[i].nr_valor;
					ie_registrado_w				:= 'S';
				else
					null;
			end case;
		end if;
	end;
	end loop;

	select	max(nr_sequencia)
	into STRICT		nr_sequencia_w
	from		oft_capsulotomia
	where		nr_seq_consulta_form = nr_seq_consulta_form_p
	and		nr_seq_consulta		= nr_seq_consulta_p
	and		coalesce(dt_liberacao::text, '') = ''
	and		nm_usuario				= nm_usuario_w;

	if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		update	oft_capsulotomia
		set		dt_atualizacao				=	clock_timestamp(),
					nm_usuario					=	nm_usuario_w,
					cd_profissional			= coalesce(cd_profissional_w,cd_profissional),
					dt_registro					=	coalesce(dt_exame_w,dt_registro),
					ds_observacao				=	ds_observacao_w,
					ie_olho						=	ie_olho_w,
					nr_potencia					=	nr_potencia_w,
					qt_disparos					=	qt_disparos_w,
					qt_energia_utilizada		=	qt_energia_utilizada_w,
					qt_tamanho					=	qt_tamanho_w
		where		nr_sequencia				=	nr_sequencia_w;
		CALL wheb_usuario_pck.set_ie_commit('S');
	else
		if (ie_registrado_w = 'S') then
			CALL wheb_usuario_pck.set_ie_commit('S');
			select	nextval('oft_capsulotomia_seq')
			into STRICT		nr_sequencia_w
			;

			insert	into oft_capsulotomia(	nr_sequencia,
														dt_atualizacao,
														nm_usuario,
														dt_atualizacao_nrec,
														nm_usuario_nrec,
														cd_profissional,
														dt_registro,
														ds_observacao,
														nr_seq_consulta,
														ie_situacao,
														ie_olho,
														nr_potencia,
														qt_disparos,
														qt_energia_utilizada,
														qt_tamanho,
														nr_seq_consulta_form)
			values (	nr_sequencia_w,
														clock_timestamp(),
														nm_usuario_w,
														clock_timestamp(),
														nm_usuario_w,
														coalesce(cd_profissional_w,obter_pf_usuario(nm_usuario_w,'C')),
														coalesce(dt_exame_w,clock_timestamp()),
														ds_observacao_w,
														nr_seq_consulta_p,
														'A',
														ie_olho_w,
														nr_potencia_w,
														qt_disparos_w,
														qt_energia_utilizada_w,
														qt_tamanho_w,
														nr_seq_consulta_form_p);

			if (coalesce(nr_seq_consulta_form_ant_p,0) > 0) then
				insert	into oft_consulta_imagem(	nr_sequencia,
																dt_atualizacao,
																nm_usuario,
																dt_atualizacao_nrec,
																nm_usuario_nrec,
																ds_titulo,
																ds_arquivo,
																ds_arquivo_backup,
																nr_seq_capsulotomia)
																SELECT	nextval('oft_consulta_imagem_seq'),
																			clock_timestamp(),
																			nm_usuario_w,
																			clock_timestamp(),
																			nm_usuario_w,
																			ds_titulo,
																			ds_arquivo,
																			ds_arquivo_backup,
																			nr_sequencia_w
																from		oft_consulta_imagem a,
																			oft_capsulotomia b
																where		a.nr_seq_capsulotomia 	= 	b.nr_sequencia
																and		b.nr_seq_consulta_form	= 	nr_seq_consulta_form_ant_p
																and		b.nr_seq_consulta			=	nr_seq_consulta_p;
			end if;
		end if;
	end if;
end if;

exception
when others then
	ds_erro_w	:= substr(sqlerrm,1,4000);
	update	OFT_CONSULTA_FORMULARIO
	set		ds_stack			=	substr(dbms_utility.format_call_stack||ds_erro_w,1,4000)
	where		nr_sequencia	= 	nr_seq_consulta_form_p;
end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE oft_insere_capsulotomia ( nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, nr_seq_consulta_form_ant_p bigint, vListaCapsulotomia strRecTypeFormOft) FROM PUBLIC;

