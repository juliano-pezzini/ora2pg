-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_atualizar_etapa_amostra (nr_prescricao_p bigint, ie_status_atend_p bigint, nr_seq_amostra_p bigint, sql_item_p text, nm_usuario_p text) AS $body$
DECLARE

nr_seq_proc_mat_item_w	bigint;
nr_seq_prescr_w		bigint;
qt_etapa_amostra_w	smallint;
qt_total_amostra_w	smallint;
Ie_data_amostra_w	varchar(1);
cd_estabelecimento_w	smallint;
ie_atualiza_dt_coleta_dist_w	varchar(1);
data_atual timestamp;

c01 CURSOR FOR
SELECT 	nr_sequencia,
	nr_seq_prescr
from 	prescr_proc_mat_item
where	nr_prescricao = nr_prescricao_p
and	NR_SEQ_PRESCR_PROC_MAT = nr_seq_amostra_p
and	' ' || sql_item_p || ' ' like '% ' || nr_seq_prescr || ' %';


BEGIN

data_atual := clock_timestamp();

select	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	prescR_medica
where	nr_prescricao = nr_prescricao_p;

Ie_data_amostra_w := Obter_Param_Usuario(722, 123, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, Ie_data_amostra_w);
ie_atualiza_dt_coleta_dist_w := Obter_Param_Usuario(722, 367, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_dt_coleta_dist_w);

open c01;
loop
fetch c01 into
	nr_seq_proc_mat_item_w,
	nr_seq_prescr_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	
	update 	prescr_proc_mat_item
	set 	ie_status = ie_status_atend_p,
		dt_atualizacao = clock_timestamp(),
		nm_usuario = nm_usuario_p
	where 	nr_sequencia = nr_seq_proc_mat_item_w;
	
	/*insert into log  tasy
		(DT_ATUALIZACAO,
		NM_USUARIO,
		CD_LOG,
		DS_LOG)
	values	(sysdate,
		nm_usuario_p,
		-7706,
		'lab_atualizar_etapa_amostra - nr_seq_proc_mat_item_w='||nr_seq_proc_mat_item_w||' ie_status_atend_p: '||ie_status_atend_p||' nr_prescricao_p: '||nr_prescricao_p);*/
		
	select  count(*)
	into STRICT	qt_total_amostra_w
	from	prescr_proc_mat_item
	where	nr_prescricao = nr_prescricao_p
	and	nr_seq_prescr = nr_seq_prescr_w;

	select count(*)
	into STRICT	qt_etapa_amostra_w
	from	prescr_proc_mat_item
	where	nr_prescricao = nr_prescricao_p
	and	ie_status = ie_status_atend_p
	and	nr_seq_prescr = nr_seq_prescr_w;

	if (qt_total_amostra_w = qt_etapa_amostra_w) and (qt_etapa_amostra_w > 0) then
	
		if ((ie_status_atend_p in (20,25) and ie_atualiza_dt_coleta_dist_w = 'S') or (ie_status_atend_p = 20 and ie_atualiza_dt_coleta_dist_w = 'N')) then
			update prescr_procedimento
			set ie_status_atend = ie_status_atend_p,
			    nm_usuario = nm_usuario_p,
			    dt_atualizacao = clock_timestamp(),
			    ie_amostra = 'S',
                            dt_coleta = CASE WHEN Ie_data_amostra_w='S' THEN Lab_obter_data_coleta_amostra(nr_prescricao,nr_sequencia)  ELSE data_atual END
			where nr_prescricao = nr_prescricao_p
			and nr_sequencia = nr_seq_prescr_w
			and ie_status_atend < ie_status_atend_p;	
			

		elsif (ie_status_atend_p <> 35) then
			update prescr_procedimento
			set ie_status_atend = ie_status_atend_p,
			    nm_usuario = nm_usuario_p,
			    dt_atualizacao = clock_timestamp()
			where nr_prescricao = nr_prescricao_p
			and nr_sequencia = nr_seq_prescr_w
			and ie_status_atend < ie_status_atend_p;
		else
			update prescr_procedimento a
			set ie_status_atend = ie_status_atend_p,
			    nm_usuario = nm_usuario_p,
			    dt_atualizacao = clock_timestamp()
			where nr_prescricao = nr_prescricao_p
			and nr_sequencia = nr_seq_prescr_w
			and ie_status_atend < ie_status_atend_p
			and exists (SELECT 1 from result_laboratorio x where x.nr_prescricao = a.nr_prescricao and x.nr_seq_prescricao = a.nr_sequencia);

		end if;

	end if;
	end;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_atualizar_etapa_amostra (nr_prescricao_p bigint, ie_status_atend_p bigint, nr_seq_amostra_p bigint, sql_item_p text, nm_usuario_p text) FROM PUBLIC;

