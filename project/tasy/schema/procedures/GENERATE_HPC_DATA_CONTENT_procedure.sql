-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE generate_hpc_data_content (nr_seq_dataset_p bigint, nm_usuario_p text , cd_convenio_p text, returned_value_p INOUT bigint, other_exception_p INOUT text) AS $body$
DECLARE

  ds_segment_w                 varchar(32767);
  ds_segment_clob_w            text := '';
  is_clob_insertion_successful bigint := 0;
  excp_caught_dataset_clob_ins varchar(500 );
  ds_insurer_iden_w            varchar(15);
  misc_codes                   varchar(200 ) := NULL;
  codes                        varchar(200 );

BEGIN
    BEGIN 
        SELECT CASE WHEN coalesce(cd_insurer_membership::text, '') = '' THEN  Rpad(' ', 15)  ELSE Rpad(cd_insurer_membership, 15, ' '                                              ) END  
               -- Insurer Membership Identifier 
               || CASE WHEN coalesce(cd_insurer::text, '') = '' THEN  Rpad(' ', 3)  ELSE Rpad(cd_insurer, 3, ' ') END  
               -- Insurer Identifier 
               || CASE WHEN coalesce(nr_atendimento::text, '') = '' THEN  Rpad(' ', 15)  ELSE Rpad(nr_atendimento, 15, ' ') END  
               -- Episode number 
               || CASE WHEN coalesce(nm_family_name::text, '') = '' THEN  Rpad(' ', 28)  ELSE Rpad(nm_family_name, 28, ' ') END  
               -- Family name 
               || CASE WHEN coalesce(nm_given_name::text, '') = '' THEN  Rpad(' ', 20)  ELSE Rpad(nm_given_name, 20, ' ') END  
               -- Given name 
               || CASE WHEN coalesce(To_char(dt_dob, 'ddmmyyyy')::text, '') = '' THEN  Rpad(' ', 8)  ELSE To_char(dt_dob, 'ddmmyyyy') END  -- Date of birth 
               || Lpad(trim(both coalesce(cd_postal_code,9999)), 4, 0) -- Postal code 
               || trim(both ie_gender) --  Gender 
               || CASE WHEN coalesce(dt_admission::text, '') = '' THEN  Rpad(' ', 8)  ELSE To_char(dt_admission, 'ddmmyyyy') END  
               -- admission date 
               || CASE WHEN coalesce(dt_discharge::text, '') = '' THEN  Rpad(' ', 8)  ELSE To_char(dt_discharge, 'ddmmyyyy') END  
               -- discharge date 
               || trim(both cd_hosp_type) -- type of hosital 
               || CASE WHEN coalesce(nr_icu_days::text, '') = '' THEN  '000'  ELSE Lpad(nr_icu_days, 3, '0') END  -- ICU days 
               || CASE WHEN coalesce(nr_icu_hours::text, '') = '' THEN  '0000'  ELSE Lpad(nr_icu_hours, 4, '0') END  -- ICU hours 
               || CASE WHEN coalesce(nr_psyc_care_days::text, '') = '' THEN  '00000'  ELSE Lpad(nr_psyc_care_days, 5, '0') END  
               -- Psychiatric care days 
               || CASE WHEN coalesce(cd_drg::text, '') = '' THEN  Lpad(' ', 4)  ELSE Lpad(cd_drg, 4, ' ') END  
               -- DRG code / diagnosis Related Group 
               || '  '
               -- DRG VERSION 
               || CASE WHEN coalesce(To_char(dt_admission_time, 'hh24mi')::text, '') = '' THEN  Lpad(' ', 4)  ELSE To_char(dt_admission_time, 'hh24mi') END  -- Admission time 
               || CASE WHEN coalesce(trim(both ie_adm_urgency)::text, '') = '' THEN  9  ELSE trim(both ie_adm_urgency) END  
               --Urgency of Admission 
               || CASE WHEN coalesce(cd_trnsfr_hosp::text, '') = '' THEN  Lpad(' ', 8)  ELSE Lpad(cd_trnsfr_hosp, 8, ' ') END  
               -- Hospital transfer 
               || Rpad(cd_care_type, 3, ' ')  
               || CASE WHEN coalesce(trim(both ie_src_ref)::text, '') = '' THEN  9  ELSE trim(both ie_src_ref) END  
               --- source of referal 
               || CASE WHEN ie_discharge_reason=0 THEN ' '  ELSE ie_discharge_reason END  -- discharge reason 
               || trim(both ie_contract_patient) --  
               || trim(both ie_mental_health) 
               || CASE WHEN ie_palliative_care=0 THEN  2  ELSE 1 END  -- palliative care status 
               || trim(both ie_readm_28) -- Readmission with in 28 days --revisit 
               || trim(both ie_theatre_visit) -- is Theatre visit 
               || CASE WHEN coalesce(nr_birth_weight::text, '') = '' THEN  '0000'  ELSE Lpad(nr_birth_weight, 4, '0') END  
               -- birth weight 
               || CASE WHEN coalesce(nr_vent_hrs::text, '') = '' THEN  '0000'  ELSE Lpad(nr_vent_hrs, 4, '0') END  
               --  Mechanical Ventilation 
               || CASE WHEN coalesce(ie_sepa_mode::text, '') = '' THEN  Lpad(' ', 2)  ELSE Lpad(ie_sepa_mode, 2, ' ') END  
               -- sepration mode 
               || CASE WHEN coalesce(nr_sep_time::text, '') = '' THEN  Lpad(' ', 4)  ELSE Lpad(nr_sep_time, 4, ' ') END  
               --  Sepration time 
               || CASE WHEN coalesce(nr_leave_days::text, '') = '' THEN  '0000'  ELSE Lpad(nr_leave_days, 4, '0') END  
               -- total leave days 
               || CASE WHEN coalesce(cd_trnsfr_hosp_to::text, '') = '' THEN  Lpad(' ', 8)  ELSE Lpad(cd_trnsfr_hosp_to, 8, ' ') END  
               -- Provider Number of Hospital to which transferred 
               || CASE WHEN coalesce(nr_nc_days_of_stay::text, '') = '' THEN  '0000'  ELSE Lpad(nr_nc_days_of_stay, 4, '0') END  
               -- Non certified days of stay 
               || CASE WHEN coalesce(nr_home_care_days::text, '') = '' THEN  '0000'  ELSE Lpad(nr_home_care_days, 4, '0') END  
               --Number of Days of Hospital 
               || CASE WHEN coalesce(cd_main_diag::text, '') = '' THEN  Rpad(' ', 6)  ELSE Rpad(cd_main_diag, 6, ' ') END  
               --  Left justify Strip hyphen, dots  morphology codes 
               || CASE WHEN coalesce(cd_addi_diag::text, '') = '' THEN  Rpad(' ', 294)  ELSE Rpad(cd_addi_diag, 294, ' ') END  
               --  Left justify Strip hyphen, dots  morphology codes 
               || CASE WHEN coalesce(cd_procedure::text, '') = '' THEN  Rpad(' ', 350)  ELSE Rpad(cd_procedure, 350, ' ') END  
               --- -- NANNNN Left justify Strip hyphen 
               || CASE WHEN coalesce(ie_day_status::text, '') = '' THEN  2  ELSE trim(both ie_day_status) END  -- Re-visit query 
               || CASE WHEN coalesce(cd_main_mbs::text, '') = '' THEN  Rpad(' ', 14)  ELSE Rpad(cd_main_mbs, 14, ' ') END  
               || CASE WHEN coalesce(cd_mbs_date::text, '') = '' THEN  Rpad(' ', 8)  ELSE To_char(cd_mbs_date, 'ddmmyyyy') END  
               || CASE WHEN coalesce(nr_min_in_ot::text, '') = '' THEN  '0000'  ELSE Lpad(nr_min_in_ot, 4, '0') END  
               || CASE WHEN coalesce(cd_second_mbs::text, '') = '' THEN  Rpad(' ', 126)  ELSE Rpad(cd_second_mbs, 126, ' ') END  
               || Lpad(vl_accom_charge, 9, '0') 
               --Right justify Zero prefix $$$$$$$cc (omit decimal point) Must be = 0 
               || Lpad(vl_theatre_charge, 9, '0') --  Theatre charge  
               || Lpad(vl_ward_charge, 9, '0') -- Labour care unit charge 
               || Lpad(vl_icu_charge, 9, '0') -- icu charges 
               || Lpad(vl_pros_chrg, 9, '0') -- Prosthesis Charge 
               || Lpad(vl_phar_chrg, 9, '0') -- Pharmacy Charge 
               || Lpad(vl_othr_chrg, 9, '0')-- Other charges 
               || Lpad(vl_bundle_chrg, 9, '0') -- bundled charges 
               || CASE WHEN coalesce(nr_mrn::text, '') = '' THEN  Rpad(' ', 20)  ELSE Rpad(nr_mrn, 20, ' ') END  
               || CASE WHEN coalesce(cd_misc_srvc::text, '') = '' THEN  Rpad(' ', 110)  ELSE Rpad(cd_misc_srvc, 110, ' ') END  
               || CASE WHEN coalesce(vl_hmcare_chrg::text, '') = '' THEN  Lpad(0, 9)  ELSE Lpad(vl_hmcare_chrg, 9, '0') END  
               -- Same " "  
               || CASE WHEN coalesce(vl_scn_chrg::text, '') = '' THEN  Lpad(0, 9)  ELSE Lpad(vl_scn_chrg, 9, '0') END  -- Same " "  
               || CASE WHEN coalesce(vl_ccu_chrg::text, '') = '' THEN  Lpad(9, 0)  ELSE Lpad(vl_ccu_chrg, 9, '0') END  -- Same " "  
               || CASE WHEN coalesce(nr_scn_hrs::text, '') = '' THEN  '0000'  ELSE Lpad(nr_scn_hrs, 4, '0') END  
               || CASE WHEN coalesce(nr_ccu_hrs::text, '') = '' THEN  '0000'  ELSE Lpad(nr_ccu_hrs, 4, '0') END  
               || CASE WHEN coalesce(nr_scn_days::text, '') = '' THEN  '000'  ELSE Lpad(nr_scn_days, 3, '0') END  
               || CASE WHEN coalesce(nr_ccu_days::text, '') = '' THEN  '000'  ELSE Lpad(nr_ccu_days, 3, '0') END  
               || CASE WHEN coalesce(nr_newborn_days::text, '') = '' THEN  '00000'  ELSE Lpad(nr_newborn_days, 5, '0') END  
               || CASE WHEN coalesce(dt_hhc_start::text, '') = '' THEN  Lpad(' ', 8)  ELSE To_char(dt_hhc_start, 'ddmmyyyy') END  
               || CASE WHEN coalesce(dt_hhc_end::text, '') = '' THEN  Lpad(' ', 8)  ELSE To_char(dt_hhc_end, 'ddmmyyyy') END  
               || CASE WHEN coalesce(nr_paltv_care_days::text, '') = '' THEN  '0000'  ELSE Lpad(nr_paltv_care_days, 4, '0') END  
               || CASE WHEN coalesce(trim(both cd_drg_version)::text, '') = '' THEN  '   '  ELSE Rpad(trim(both cd_drg_version), 3,' ') END                                
        INTO STRICT   ds_segment_w 
        FROM   hcp_segment_data a 
        WHERE  nr_seq_dataset = nr_seq_dataset_p;
    EXCEPTION 
        WHEN OTHERS THEN 
          ds_segment_w := NULL;
    END;

	if (ds_segment_w IS NOT NULL AND ds_segment_w::text <> '') then
		SELECT Concat(ds_segment_clob_w, ds_segment_w) 
		INTO STRICT   ds_segment_clob_w 
		;

		SELECT * FROM Insert_hcp_dataset_content(nm_usuario_p, nr_seq_dataset_p, ds_segment_clob_w, is_clob_insertion_successful, excp_caught_dataset_clob_ins) INTO STRICT is_clob_insertion_successful, excp_caught_dataset_clob_ins;

	end if;

    IF ( is_clob_insertion_successful = 1 ) THEN
      returned_value_p := 1;

      other_exception_p := NULL;
    ELSE 
      IF (excp_caught_dataset_clob_ins IS NOT NULL AND excp_caught_dataset_clob_ins::text <> '') THEN 
        returned_value_p := 0;

        other_exception_p := excp_caught_dataset_clob_ins;
      END IF;
    END IF;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE generate_hpc_data_content (nr_seq_dataset_p bigint, nm_usuario_p text , cd_convenio_p text, returned_value_p INOUT bigint, other_exception_p INOUT text) FROM PUBLIC;

