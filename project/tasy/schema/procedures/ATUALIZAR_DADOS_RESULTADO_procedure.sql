-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_dados_resultado (nr_interno_conta_p bigint) AS $body$
DECLARE


/*
O Objetivo dessa rotina é atualizar informações que serão usados na EIS Resultado, dessa forma não precisam estar como Function no EIS Resultado, onerando a performance.
OS 619839

 Tipo de Item Resultado (IE_PROC_MAT)

D               Diárias
S               Taxas e Serviços
P               Exames e Procedimentos
M               Medicamentos
A               Alimentos
T               Materiais
C               Consignados
O               Outros



*/
cd_material_w		integer;
nr_sequencia_w		bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
ie_tipo_w		varchar(1);
ie_consignado_w		varchar(1);
ie_tipo_material_w	varchar(3);
ie_classificacao_w	varchar(1);

cd_forma_organizacao_w	integer;
ds_forma_organizacao_w  varchar(100);
cd_subgrupo_w           smallint;
ds_subgrupo_w           varchar(100);
cd_grupo_w              smallint;
ds_grupo_w              varchar(100);
ie_complexidade_w	varchar(2);
ds_complexidade_w	varchar(255);
ie_tipo_financiamento_w	varchar(4);
ds_tipo_financiamento_w	varchar(255);


C01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_material,
		cd_procedimento,
		ie_origem_proced
	from 	conta_paciente_resumo
	where	nr_interno_conta		= nr_interno_conta_p
	Order By 1,2,3;

BEGIN

OPEN C01;
LOOP
FETCH C01 into
	nr_sequencia_w,
	cd_material_w,
	cd_procedimento_w,
	ie_origem_proced_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	ie_tipo_w		:= 'O';
	cd_forma_organizacao_w	:= 0;
	cd_subgrupo_w		:= 0;
	cd_grupo_w		:= 0;
	ie_tipo_financiamento_w	:= '0';
	ie_complexidade_w	:= '0';
	ds_forma_organizacao_w	:= null;
	ds_subgrupo_w		:= null;
	ds_grupo_w		:= null;
	ds_tipo_financiamento_w := null;
	ds_complexidade_w	:= null;

	if (coalesce(cd_material_w,0) > 0) then
		begin

		select	coalesce(max(ie_tipo_material),9),
			coalesce(max(ie_consignado),'0')
		into STRICT	ie_tipo_material_w,
			ie_consignado_w
		from	material
		where	cd_material = cd_material_w;

		if (ie_consignado_w <> '0') then
			ie_tipo_w		:= 'C';
		elsif (ie_tipo_material_w	= '5') then
			ie_tipo_w		:= 'A';
		elsif (ie_tipo_material_w	= '1') then
			ie_tipo_w		:= 'T';
		elsif (ie_tipo_material_w in ('2','3')) then
			ie_tipo_w		:= 'M';
		end if;

		end;

	elsif (coalesce(cd_procedimento_w,0) > 0) then

		begin

		select coalesce(max(ie_classificacao),'1')
		into STRICT	ie_classificacao_w
		from	Procedimento
		where	cd_procedimento 	= cd_procedimento_w
		 and	ie_origem_proced	= ie_origem_proced_w;

		if (ie_classificacao_w = '3') then
			ie_tipo_w		:= 'D';
		elsif (ie_classificacao_w = '2') then
			ie_tipo_w		:= 'S';
		elsif (ie_classificacao_w = '1') then
			ie_tipo_w		:= 'P';
		end if;

		if (coalesce(ie_origem_proced_w,0) = 7) then

			begin
			select  coalesce(b.cd_forma_organizacao,0),
				coalesce(b.ds_forma_organizacao,''),
				coalesce(c.cd_subgrupo,0),
				coalesce(c.ds_subgrupo,''),
				coalesce(d.cd_grupo,0),
				coalesce(d.ds_grupo,''),
				coalesce(a.ie_tipo_financiamento,'0'),
				coalesce(obter_valor_dominio(2135, a.ie_tipo_financiamento),''),
				coalesce(a.ie_complexidade,'0'),
				coalesce(substr(obter_valor_dominio(1763,a.ie_complexidade),1,120),'')
			into STRICT    cd_forma_organizacao_w,
				ds_forma_organizacao_w,
				cd_subgrupo_w,
				ds_subgrupo_w,
				cd_grupo_w,
				ds_grupo_w,
				ie_tipo_financiamento_w,
				ds_tipo_financiamento_w,
				ie_complexidade_w,
				ds_complexidade_w
			from    sus_procedimento a,
				sus_forma_organizacao b,
				sus_subgrupo c,
				sus_grupo d
			where   c.nr_seq_grupo		= d.nr_sequencia
			and	b.nr_seq_subgrupo	= c.nr_sequencia
			and	a.nr_seq_forma_org	= b.nr_sequencia
			and   	a.cd_procedimento	= cd_procedimento_w
			and     a.ie_origem_proced	= ie_origem_proced_w  LIMIT 1;
			exception
			when others then
				cd_forma_organizacao_w	:= 0;
				ds_forma_organizacao_w	:= '';
				cd_subgrupo_w		:= 0;
				ds_subgrupo_w		:= '';
				cd_grupo_w		:= 0;
				ds_grupo_w		:= '';
				ie_tipo_financiamento_w	:= '0';
				ds_tipo_financiamento_w	:= '';
				ie_complexidade_w	:= '0';
				ds_complexidade_w	:= '';
			end;

		end if;


		end;
	end if;

	update 	conta_paciente_resumo
	set 	ie_proc_mat		= ie_tipo_w,
		cd_forma_organizacao	= cd_forma_organizacao_w,
		ds_forma_organizacao	= ds_forma_organizacao_w,
		cd_subgrupo		= cd_subgrupo_w,
		ds_subgrupo		= ds_subgrupo_w,
		cd_grupo		= cd_grupo_w,
		ds_grupo		= ds_grupo_w,
		ie_tipo_financiamento	= ie_tipo_financiamento_w,
		ds_tipo_financiamento	= ds_tipo_financiamento_w,
		ie_complexidade		= ie_complexidade_w,
		ds_complexidade		= ds_complexidade_w
	where	nr_interno_conta	= nr_interno_conta_p
	and	nr_sequencia		= nr_sequencia_w;

	end;
end loop;
close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_dados_resultado (nr_interno_conta_p bigint) FROM PUBLIC;

