-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_conta_particular_valor ( nr_sequencia_p bigint, vl_particular_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_interno_conta_w	bigint;
cd_convenio_w		integer;
ie_tipo_convenio_w	smallint;
nr_sequencia_w		bigint;
pr_valor_w		double precision;
vl_procedimento_w	double precision;
cd_estabelecimento_w	smallint;
cd_convenio_glosa_w	integer;
cd_categoria_glosa_w	varchar(10);

vl_medico_w		double precision;
vl_custo_operacional_w	double precision;
vl_materiais_w		double precision;
					

BEGIN 
 
begin 
select 	coalesce(max(b.nr_interno_conta),0), 
	coalesce(max(b.cd_convenio_parametro),0), 
	coalesce(sum(a.vl_procedimento),0), 
	coalesce(max(b.cd_estabelecimento),0) 
into STRICT	nr_interno_conta_w, 
	cd_convenio_w, 
	vl_procedimento_w, 
	cd_estabelecimento_w 
from 	procedimento_paciente	a, 
	conta_paciente		b 
where 	a.nr_sequencia = nr_sequencia_p 
and 	a.nr_interno_conta = b.nr_interno_conta;
exception 
	when others then 
		cd_convenio_w		:= 0;
		nr_interno_conta_w	:= 0;
		vl_procedimento_w	:= 0;
		cd_estabelecimento_w	:= 0;
end;
 
select 	coalesce(max(ie_tipo_convenio),0) 
into STRICT	ie_tipo_convenio_w 
from 	convenio 
where 	cd_convenio = cd_convenio_w;
 
if (ie_tipo_convenio_w = 1) then --Conta Particular 
	-- O Procedimento já está em uma conta Particular 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(230456);	
end if;
 
SELECT * FROM obter_convenio_particular(cd_estabelecimento_w, cd_convenio_glosa_w, cd_categoria_glosa_w) INTO STRICT cd_convenio_glosa_w, cd_categoria_glosa_w;
 
if (vl_procedimento_w <> 0) then 
	pr_valor_w := 	round((vl_particular_p / vl_procedimento_w)::numeric, 8);
else 
	pr_valor_w := 0;
end if;
 
nr_sequencia_w := duplicar_proc_paciente(nr_sequencia_p, nm_usuario_p, nr_sequencia_w);
 
update 	procedimento_paciente 
set	ie_valor_informado	= 'S', 
	vl_medico		= round((vl_medico 		* pr_valor_w)::numeric, 2), 
	vl_custo_operacional	= round((vl_custo_operacional 	* pr_valor_w)::numeric, 2), 
	vl_materiais		= round((vl_materiais 		* pr_valor_w)::numeric, 2), 
	vl_procedimento		= vl_particular_p, 
	cd_situacao_glosa	= 0, 
	qt_procedimento		= 0, 
	cd_convenio		= cd_convenio_glosa_w, 
	cd_categoria		= cd_categoria_glosa_w, 
	nr_seq_proc_princ	= nr_sequencia_p, 
	nr_interno_conta	 = NULL, 
	ds_observacao		= substr(wheb_mensagem_pck.get_texto(305920,'PR_PARTICULAR=' || vl_particular_p),1,255) 
where	nr_sequencia		= nr_sequencia_w;
 
CALL Atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_glosa_w, nm_usuario_p);
 
select 	vl_medico, 
	vl_custo_operacional, 
	vl_materiais 
into STRICT	vl_medico_w, 
	vl_custo_operacional_w, 
	vl_materiais_w 
from 	procedimento_paciente 
where 	nr_sequencia = nr_sequencia_w;
 
update procedimento_paciente 
set	ie_valor_informado	= 'S', 
	vl_medico		= vl_medico - vl_medico_w, 
	vl_custo_operacional	= vl_custo_operacional - vl_custo_operacional_w, 
	vl_materiais		= vl_materiais - vl_materiais_w, 
	vl_Procedimento		= vl_procedimento - (vl_medico_w + vl_custo_operacional_w + vl_materiais_w), 
	ds_observacao		= substr(wheb_mensagem_pck.get_texto(305920,'PR_PARTICULAR=' || vl_particular_p),1,255) 
where	nr_sequencia		= nr_sequencia_p;
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_conta_particular_valor ( nr_sequencia_p bigint, vl_particular_p bigint, nm_usuario_p text) FROM PUBLIC;

