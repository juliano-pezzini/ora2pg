-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_valores_solucao (nr_prescricao_p bigint, nr_seq_solucao_p bigint, qt_velocidade_infusao_p bigint, ie_unidade_velocidade_p text, ie_calcular_etapa_p text, ie_volume_velocidade_p text, ie_calcula_total_p text, ie_arredondar_p text, nm_usuario_p text, qt_tempo_aplicacao_p bigint, qt_volume_solucao_p INOUT bigint, nr_etapas_solucao_p INOUT bigint, qt_tempo_total_p INOUT bigint, ie_calc_etapas_vol_p text default 'N') AS $body$
DECLARE


qt_tempo_aplicacao_w		double precision;
qt_velocidade_infusao_w		double precision;
qt_velocidade_infusao_ml_w	double precision;
ie_unidade_velocidade_w		varchar(15);
ie_unidade_igual_w			varchar(15);
ie_bomba_infusao_w			varchar(50);
qt_volume_componentes_w		double precision;
qt_volume_componentes_ml_w	double precision;
qt_volume_solucao_w			double precision	:= null;
qt_tempo_total_w			double precision	:= null;
nr_etapas_solucao_w			smallint		:= null;
ie_validade_prescr_w		varchar(5);
nr_horas_validade_w			integer;	
qt_solucao_total_w			double precision;
ie_urgencia_w				prescr_solucao.ie_urgencia%type;
				

BEGIN

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') and (qt_velocidade_infusao_p IS NOT NULL AND qt_velocidade_infusao_p::text <> '') and (ie_unidade_velocidade_p IS NOT NULL AND ie_unidade_velocidade_p::text <> '') then
	
	ie_validade_prescr_w := Obter_Param_Usuario(924, 322, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_validade_prescr_w);
	
	select	max(qt_tempo_aplicacao),
			max(qt_velocidade_infusao_p), --max(qt_dosagem),
			max(ie_unidade_velocidade_p),--max(ie_tipo_dosagem)
			max(ie_bomba_infusao),
			max(qt_solucao_total),
			max(ie_urgencia)
	into STRICT	qt_tempo_aplicacao_w,
			qt_velocidade_infusao_w,
			ie_unidade_velocidade_w,
			ie_bomba_infusao_w,
			qt_solucao_total_w,
			ie_urgencia_w
	from	prescr_solucao
	where	nr_prescricao	= nr_prescricao_p
	and		nr_seq_solucao	= nr_seq_solucao_p;
	
	select	sum(qt_dose),
			sum(qt_solucao)
	into STRICT	qt_volume_componentes_w,
			qt_volume_componentes_ml_w
	from	prescr_material
	where	nr_prescricao			= nr_prescricao_p
	and		nr_sequencia_solucao	= nr_seq_solucao_p
	and		ie_agrupador			= 4;	
	
	select 	max(nr_horas_validade)
	into STRICT	nr_horas_validade_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;
	
	if (coalesce(qt_tempo_aplicacao_w::text, '') = '') then
		qt_tempo_aplicacao_w := qt_tempo_aplicacao_p;
	end if;
	if (qt_tempo_aplicacao_w IS NOT NULL AND qt_tempo_aplicacao_w::text <> '') and (qt_velocidade_infusao_w IS NOT NULL AND qt_velocidade_infusao_w::text <> '') and (ie_unidade_velocidade_w IS NOT NULL AND ie_unidade_velocidade_w::text <> '') and (qt_volume_componentes_ml_w IS NOT NULL AND qt_volume_componentes_ml_w::text <> '') then
		
		--qt_velocidade_infusao_ml_w	:= converte_vel_infusao(ie_unidade_velocidade_w, 'mlh', qt_velocidade_infusao_w);
		
		if (lower(ie_unidade_velocidade_w) = 'gtm') then
			qt_velocidade_infusao_ml_w	:= dividir(qt_velocidade_infusao_w * 60, 20);
		elsif (lower(ie_unidade_velocidade_w) = 'mgm') then
			qt_velocidade_infusao_ml_w	:= dividir(qt_velocidade_infusao_w * 60, 60);
		else
			qt_velocidade_infusao_ml_w	:= qt_velocidade_infusao_w;
		end if;
		
		if ( qt_velocidade_infusao_ml_w > 0) then
		
			qt_volume_solucao_w	:= qt_tempo_aplicacao_w * qt_velocidade_infusao_ml_w;
			nr_etapas_solucao_w	:= 0;
			if (ie_calcular_etapa_p = 'S') then
				if (ie_arredondar_p = 'N') then
					nr_etapas_solucao_w	:= round(dividir(qt_volume_solucao_w, qt_volume_componentes_ml_w));
				else
					nr_etapas_solucao_w	:= ceil(dividir(qt_volume_solucao_w, qt_volume_componentes_ml_w));
				end if;
			elsif (ie_calc_etapas_vol_p	= 'S') then	
					if (coalesce(qt_solucao_total_w,0)	> 0) then
						nr_etapas_solucao_w	:= ceil(dividir(qt_solucao_total_w, qt_volume_componentes_ml_w));					
					else
						nr_etapas_solucao_w	:= ceil(dividir(qt_volume_solucao_w, qt_volume_componentes_ml_w));
					end if;
			end if;
			
			if (nr_etapas_solucao_w = 0) or (coalesce(ie_urgencia_w, 'N') = 'S' )then
				nr_etapas_solucao_w	:= 1;
			end if;
			
			qt_volume_solucao_w	:= qt_volume_componentes_ml_w * nr_etapas_solucao_w;
			qt_tempo_total_w	:= round(dividir(qt_volume_solucao_w, qt_velocidade_infusao_ml_w));
			
			if (ie_calcula_total_p = 'A') and (lower(ie_unidade_velocidade_w) = 'gtm') then
				qt_tempo_total_w	:= round(dividir(qt_volume_componentes_ml_w, qt_velocidade_infusao_ml_w));
			elsif (ie_validade_prescr_w = 'S') then
				qt_tempo_total_w	:= nr_horas_validade_w;
			end if;
			
			if	((coalesce(ie_bomba_infusao_w,'N') 	<> 'N') and (ie_volume_velocidade_p	= 'S')) or (ie_volume_velocidade_p		= 'T') then
				if (lower(ie_unidade_velocidade_w)	= 'mlh') then
					if (ie_calcula_total_p <> 'N') then
						qt_volume_solucao_w	:= (qt_velocidade_infusao_ml_w * qt_tempo_total_w);
					else	
						qt_volume_solucao_w	:= (qt_velocidade_infusao_ml_w * qt_tempo_aplicacao_w);
					end if;
				else
					ie_unidade_igual_w := Obter_Param_Usuario(924, 765, obter_perfil_ativo, nm_usuario_p, 0, ie_unidade_igual_w);
					
					if (ie_unidade_igual_w = 'N') then
					
						if (ie_calcula_total_p <> 'N') then
							qt_volume_solucao_w	:= (qt_velocidade_infusao_ml_w * (qt_tempo_total_w/1440));
						else
							qt_volume_solucao_w	:= (qt_velocidade_infusao_ml_w * (qt_tempo_aplicacao_w/1440));
						end if;
					else
						if (ie_calcula_total_p <> 'N') then
							qt_volume_solucao_w	:= (qt_velocidade_infusao_ml_w * qt_tempo_total_w);
						else	
							qt_volume_solucao_w	:= (qt_velocidade_infusao_ml_w * qt_tempo_aplicacao_w);
						end if;
					end if;
				end if;
			end if;
			
		end if;
		
	end if;
	
end if;

if (ie_calcular_etapa_p = 'N') and (coalesce(ie_calc_etapas_vol_p,'N')	<> 'S') then
	nr_etapas_solucao_w	:= null;
end if;

qt_tempo_total_p	:= qt_tempo_total_w;
qt_volume_solucao_p	:= qt_volume_solucao_w;
nr_etapas_solucao_p	:= nr_etapas_solucao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_valores_solucao (nr_prescricao_p bigint, nr_seq_solucao_p bigint, qt_velocidade_infusao_p bigint, ie_unidade_velocidade_p text, ie_calcular_etapa_p text, ie_volume_velocidade_p text, ie_calcula_total_p text, ie_arredondar_p text, nm_usuario_p text, qt_tempo_aplicacao_p bigint, qt_volume_solucao_p INOUT bigint, nr_etapas_solucao_p INOUT bigint, qt_tempo_total_p INOUT bigint, ie_calc_etapas_vol_p text default 'N') FROM PUBLIC;

