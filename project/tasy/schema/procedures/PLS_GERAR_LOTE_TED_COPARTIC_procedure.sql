-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lote_ted_copartic ( nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


dt_competencia_w		pls_lote_ted_copartic.dt_competencia%type;
dt_competencia_inicio_w		pls_lote_ted_copartic.dt_competencia%type;
dt_competencia_fim_w		pls_lote_ted_copartic.dt_competencia%type;
nr_seq_lib_copartic_w		pls_lib_coparticipacao.nr_sequencia%type;
nr_seq_conta_copartic_w		pls_lib_coparticipacao.nr_seq_conta_coparticipacao%type;
nr_seq_material_w		pls_lib_coparticipacao.nr_seq_material%type;
cd_procedimento_w		pls_lib_coparticipacao.cd_procedimento%type;
ie_origem_proced_w		pls_lib_coparticipacao.ie_origem_proced%type;
vl_item_w			double precision;
nr_seq_lib_tx_atend_w		pls_lib_taxa_atend.nr_sequencia%type;
nr_seq_tx_atend_w		pls_conta_val_atend.nr_sequencia%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
nr_seq_segurado_ant_w		pls_segurado.nr_sequencia%type;
nr_seq_pagador_w		pls_contrato_pagador.nr_sequencia%type;
nr_seq_pagador_ant_w		pls_contrato_pagador.nr_sequencia%type;
ie_envia_cobranca_w		pls_contrato_pagador.ie_envia_cobranca%type;
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
nr_contrato_w			pls_contrato.nr_contrato%type;
nr_seq_ted_pagador_w		pls_ted_copartic_pagador.nr_sequencia%type;
nr_seq_ted_benef_w		pls_ted_copartic_benef.nr_sequencia%type;
nr_seq_regra_w			pls_regra_ted.nr_sequencia%type;
ie_incluir_lote_w		pls_ted_regra_copartic.ie_incluir_lote%type;
ie_tipo_pagador_w		varchar(2);
count_w				bigint;

C01 CURSOR FOR
	SELECT	a.nr_seq_segurado,
		coalesce(d.nr_seq_pagador,c.nr_seq_pagador),
		c.nr_seq_contrato,
		a.nr_sequencia nr_seq_lib_copartic,
		a.nr_seq_conta_coparticipacao,
		null nr_seq_lib_tx_atend,
		null nr_seq_tx_atend,
		a.nr_seq_material,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.vl_coparticipacao vl_item
	from	pls_conta_coparticipacao	d,
		pls_lib_coparticipacao		a,
		pls_lote_coparticipacao		b,
		pls_segurado			c
	where	a.nr_seq_lote			= b.nr_sequencia
	and	a.nr_seq_segurado 		= c.nr_sequencia
	and	a.nr_seq_conta_coparticipacao 	= d.nr_sequencia
	and	b.ie_status		= 'D'
	and	b.dt_competencia between dt_competencia_inicio_w and dt_competencia_fim_w
	
union all

	SELECT	a.nr_seq_segurado,
		c.nr_seq_pagador,
		c.nr_seq_contrato,
		null nr_seq_lib_copartic,
		null nr_seq_conta_coparticipacao,
		a.nr_sequencia nr_seq_lib_tx_atend,
		a.nr_seq_tx_atend nr_seq_tx_atend,
		a.nr_seq_material,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.vl_taxa_atendimento vl_item
	from	pls_lib_taxa_atend	a,
		pls_lote_taxa_atend	b,
		pls_segurado		c
	where	a.nr_seq_lote		= b.nr_sequencia
	and	a.nr_seq_segurado	= c.nr_sequencia
	and	b.ie_status		= 'D'
	and	b.dt_competencia between dt_competencia_inicio_w and dt_competencia_fim_w
	order by 2,4;

C02 CURSOR FOR
	SELECT	a.ie_incluir_lote
	from	pls_ted_regra_copartic a
	where	((a.nr_contrato = nr_contrato_w) or (coalesce(a.nr_contrato::text, '') = ''))
	and	((a.ie_tipo_pagador = ie_tipo_pagador_w) or (a.ie_tipo_pagador = 'A'))
	and	((a.ie_pagador_envio_email = 'S' and ie_envia_cobranca_w in ('A','E')) or (a.ie_pagador_envio_email = 'N'))
	order by coalesce(a.nr_contrato,0),
		ie_tipo_pagador;


BEGIN

select	nr_seq_regra_ted,
	dt_competencia
into STRICT	nr_seq_regra_w,
	dt_competencia_w
from	pls_lote_ted_copartic
where	nr_sequencia	= nr_seq_lote_p;

dt_competencia_inicio_w	:= trunc(dt_competencia_w,'month');
dt_competencia_fim_w	:= fim_dia(last_day(dt_competencia_w));

nr_seq_segurado_ant_w	:= 0;
nr_seq_pagador_ant_w	:= 0;
open C01;
loop
fetch C01 into
	nr_seq_segurado_w,
	nr_seq_pagador_w,
	nr_seq_contrato_w,
	nr_seq_lib_copartic_w,
	nr_seq_conta_copartic_w,
	nr_seq_lib_tx_atend_w,
	nr_seq_tx_atend_w,
	nr_seq_material_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	vl_item_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	max(nr_contrato)
	into STRICT	nr_contrato_w
	from	pls_contrato
	where	nr_sequencia	= nr_seq_contrato_w;

	select	CASE WHEN coalesce(cd_cgc::text, '') = '' THEN 'PF'  ELSE 'PJ' END ,
		ie_envia_cobranca
	into STRICT	ie_tipo_pagador_w,
		ie_envia_cobranca_w
	from	pls_contrato_pagador
	where	nr_sequencia	= nr_seq_pagador_w;

	ie_incluir_lote_w	:= 'N';
	open C02;
	loop
	fetch C02 into
		ie_incluir_lote_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
	end loop;
	close C02;

	if (ie_incluir_lote_w = 'S') then
		if (nr_seq_pagador_w <> nr_seq_pagador_ant_w) then
			select	nextval('pls_ted_copartic_pagador_seq')
			into STRICT	nr_seq_ted_pagador_w
			;

			insert	into	pls_ted_copartic_pagador(	nr_sequencia, nr_seq_lote, nr_seq_pagador,
					dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					ie_email_enviado)
				values (	nr_seq_ted_pagador_w, nr_seq_lote_p, nr_seq_pagador_w,
					clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
					'N');
		end if;

		if (nr_seq_segurado_w <> nr_seq_segurado_ant_w) then
			select	nextval('pls_ted_copartic_benef_seq')
			into STRICT	nr_seq_ted_benef_w
			;

			insert	into	pls_ted_copartic_benef(	nr_sequencia, nr_seq_ted_pagador, nr_seq_segurado,
					dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec)
				values (	nr_seq_ted_benef_w, nr_seq_ted_pagador_w, nr_seq_segurado_w,
					clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p);
		end if;


		insert	into	pls_ted_copartic_item(	nr_sequencia, nr_seq_ted_benef, nr_seq_conta_copartic,
				nr_seq_tx_atend, nr_seq_lib_copartic, nr_seq_lib_tx_atend,
				dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				nr_seq_material, cd_procedimento, ie_origem_proced, vl_coparticipacao)
			values (	nextval('pls_ted_copartic_item_seq'), nr_seq_ted_benef_w, nr_seq_conta_copartic_w,
				nr_seq_tx_atend_w, nr_seq_lib_copartic_w, nr_seq_lib_tx_atend_w,
				clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
				nr_seq_material_w, cd_procedimento_w, ie_origem_proced_w, vl_item_w);

		nr_seq_segurado_ant_w	:= nr_seq_segurado_w;
		nr_seq_pagador_ant_w	:= nr_seq_pagador_w;
	end if;
	end;
end loop;
close C01;

select	count(1)
into STRICT	count_w
from	pls_ted_copartic_pagador
where	nr_seq_lote = nr_seq_lote_p;

if (count_w > 0) then
	update	pls_lote_ted_copartic
	set	ie_status	= '2',
		dt_geracao_lote	= clock_timestamp()
	where	nr_sequencia	= nr_seq_lote_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lote_ted_copartic ( nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

