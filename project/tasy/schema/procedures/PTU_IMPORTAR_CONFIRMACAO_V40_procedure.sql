-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_importar_confirmacao_v40 ( ds_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Rotina utilizada nas transações ptu via SCS homologadas com a unimed brasil. 
Quando for alterar, favor verificar com o análista responsável para a realização de testes. 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ X ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: Performance. 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
cd_transacao_w			varchar(10);
ie_tipo_cliente_w		varchar(15);
cd_unimed_executora_w		smallint;
cd_unimed_beneficiario_w	smallint;
nr_seq_execucao_w		bigint;
nr_seq_origem_w			bigint;
nr_seq_guia_w			bigint;
nr_seq_requisicao_w		bigint;
ds_conteudo_w			varchar(4000);
ie_tipo_identifica_w		smallint;
nr_seq_import_w			smallint;
qt_reg_canelamento_w		smallint;
qt_reg_insistencia_w		smallint;
ie_tipo_resposta_w		varchar(2);
nr_seq_pedido_compl_w		bigint;
nr_seq_pedido_aut_w		bigint;
qt_reg_confir_cancel_w		bigint;
qt_reg_confir_insist_w		bigint;
qt_reg_resp_aud_w		bigint;
qt_reg_confir_aud_w		bigint;

c01 CURSOR FOR 
	SELECT	nr_seq_importacao, 
		ds_valores 
	from	w_scs_importacao 
	where	nm_usuario	= nm_usuario_p 
	order by nr_seq_importacao;


BEGIN 
 
open c01;
loop 
fetch c01 into 
	nr_seq_import_w, 
	ds_conteudo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	if (substr(ds_conteudo_w,1,4)	<> 'FIM$') then 
		if (nr_seq_import_w	= 1) then 
			select substr(ds_conteudo_w,1,5), 
				trim(both substr(ds_conteudo_w,6,15)), 
				CASE WHEN (substr(ds_conteudo_w,21,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,21,4))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,25,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,25,4))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,29,10))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,29,10))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,39,10))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,39,10))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,49,1))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,49,1))::numeric  END  
			into STRICT	cd_transacao_w, 
				ie_tipo_cliente_w, 
				cd_unimed_executora_w, 
				cd_unimed_beneficiario_w, 
				nr_seq_execucao_w, 
				nr_seq_origem_w, 
				ie_tipo_identifica_w 
			;
			 
			begin 
				select	coalesce(nr_seq_pedido_compl,0), 
					coalesce(nr_seq_pedido_aut,0) 
				into STRICT	nr_seq_pedido_compl_w, 
					nr_seq_pedido_aut_w 
				from	ptu_controle_execucao 
				where	nr_sequencia	= nr_seq_execucao_w;
			exception 
			when others then 
				select	coalesce(nr_seq_pedido_compl,0), 
					coalesce(nr_seq_pedido_aut,0) 
				into STRICT	nr_seq_pedido_compl_w, 
					nr_seq_pedido_aut_w 
				from	ptu_controle_execucao 
				where	nr_sequencia	= nr_seq_origem_w;	
			end;
 
			if (nr_seq_pedido_aut_w	<> 0) then 
				select	max(nr_seq_guia), 
					max(nr_seq_requisicao) 
				into STRICT	nr_seq_guia_w, 
					nr_seq_requisicao_w 
				from	ptu_pedido_autorizacao 
				where	nr_sequencia	= nr_seq_pedido_aut_w;
			elsif (nr_seq_pedido_compl_w	<> 0) then 
				select	max(nr_seq_guia), 
					max(nr_seq_requisicao) 
				into STRICT	nr_seq_guia_w, 
					nr_seq_requisicao_w 
				from	ptu_pedido_compl_aut 
				where	nr_sequencia	= nr_seq_pedido_compl_w;
			end if;
			 
			if (ie_tipo_cliente_w	= 'UNIMED') then 
				ie_tipo_cliente_w	:= 'U';
			elsif (ie_tipo_cliente_w	= 'PORTAL') then 
				ie_tipo_cliente_w	:= 'P';
			elsif (ie_tipo_cliente_w	= 'PRESTADOR') then 
				ie_tipo_cliente_w	:= 'R';
			end if;
			 
			select	count(1) 
			into STRICT	qt_reg_canelamento_w 
			from	ptu_cancelamento	a 
			where	a.nr_seq_execucao	= nr_seq_execucao_w;
			 
			if (qt_reg_canelamento_w	= 0) and (nr_seq_execucao_w	= nr_seq_origem_w) then 
				select	count(1) 
				into STRICT	qt_reg_canelamento_w 
				from	ptu_cancelamento		a 
				where	a.nr_seq_origem			= nr_seq_origem_w 
				and	a.cd_unimed_beneficiario	= cd_unimed_beneficiario_w;
			end if;
			 
			select	count(1) 
			into STRICT	qt_reg_confir_cancel_w 
			from	ptu_confirmacao	x 
			where	x.nr_seq_execucao	= nr_seq_execucao_w 
			and	x.ie_tipo_resposta	= 'C';
			 
			if (qt_reg_confir_cancel_w	= 0) and (nr_seq_execucao_w	= nr_seq_origem_w) then 
				select	count(1) 
				into STRICT	qt_reg_confir_cancel_w 
				from	ptu_confirmacao	x 
				where	x.nr_seq_origem			= nr_seq_origem_w 
				and	x.cd_unimed_beneficiario	= cd_unimed_beneficiario_w 
				and	x.ie_tipo_resposta		= 'C';
			end if;
 
			if (qt_reg_canelamento_w	<> qt_reg_confir_cancel_w ) then 
				ie_tipo_resposta_w	:= 'C';
			end if;
			 
			select	count(1) 
			into STRICT	qt_reg_insistencia_w 
			from	ptu_pedido_insistencia	a 
			where	a.nr_seq_execucao	= nr_seq_execucao_w;
			 
			select 	count(1) 
			into STRICT	qt_reg_confir_insist_w 
			from	ptu_confirmacao	x 
			where	x.nr_seq_execucao	= nr_seq_execucao_w 
			and	x.ie_tipo_resposta	= 'PI';
			 
			if (qt_reg_insistencia_w	<> qt_reg_confir_insist_w ) then 
				ie_tipo_resposta_w	:= 'PI';
			end if;
 
			select	count(1) 
			into STRICT	qt_reg_resp_aud_w 
			from	ptu_resposta_auditoria	a 
			where	a.nr_seq_execucao	= nr_seq_execucao_w;
			 
			select	count(1) 
			into STRICT	qt_reg_confir_aud_w 
			from	ptu_confirmacao	x 
			where	x.nr_seq_execucao	= nr_seq_execucao_w 
			and	x.ie_tipo_resposta	= 'RA';
			 
			if (qt_reg_resp_aud_w	<> qt_reg_confir_aud_w ) then 
				ie_tipo_resposta_w	:= 'RA';
			end if;
			 
			if (cd_transacao_w	= '00309') then 
				if (ie_tipo_resposta_w	= 'C') then 
					if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then 
						CALL pls_cancelar_autorizacao(nr_seq_guia_w, 1, nm_usuario_p,null);
					elsif (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then 
						CALL pls_cancelar_requisicao(nr_seq_requisicao_w, null, '', nm_usuario_p, cd_estabelecimento_p);
					end if;
				elsif (ie_tipo_resposta_w	= 'PI') then 
					if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then 
						update	pls_guia_plano_proc 
						set	ie_status	= 'A', 
							dt_atualizacao	= clock_timestamp(), 
							nm_usuario	= nm_usuario_p 
						where	nr_seq_guia	= nr_seq_guia_w;
						 
						update	pls_guia_plano_mat 
						set	ie_status	= 'A', 
							dt_atualizacao	= clock_timestamp(), 
							nm_usuario	= nm_usuario_p 
						where	nr_seq_guia	= nr_seq_guia_w;
						 
						update	pls_guia_plano 
						set	ie_estagio	= 11, 
							ie_status	= '2', 
							dt_atualizacao	= clock_timestamp(), 
							nm_usuario	= nm_usuario_p 
						where	nr_sequencia	= nr_seq_guia_w;
 
						CALL pls_gerar_auditoria_guia(nr_seq_guia_w, nm_usuario_p);
						CALL ptu_gerar_grupo_aud_padrao(nr_seq_guia_w,null,'GC',nm_usuario_p);
					elsif (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then 
						update	pls_requisicao 
						set	ie_estagio	= 5, 
							ie_status	= 'P', 
							dt_atualizacao	= clock_timestamp(), 
							nm_usuario	= nm_usuario_p 
						where	nr_sequencia	= nr_seq_requisicao_w;
						 
						update	pls_requisicao_proc 
						set	ie_status		= 'A', 
							ie_estagio		= 'AA', 
							dt_atualizacao		= clock_timestamp(), 
							nm_usuario		= nm_usuario_p 
						where	nr_seq_requisicao	= nr_seq_requisicao_w;
						 
						update	pls_requisicao_mat 
						set	ie_status		= 'A', 
							ie_estagio		= 'AA', 
							dt_atualizacao		= clock_timestamp(), 
							nm_usuario		= nm_usuario_p 
						where	nr_seq_requisicao	= nr_seq_requisicao_w;
						 
						CALL pls_gerar_auditoria_requisicao(nr_seq_requisicao_w, nm_usuario_p,'AE');
						CALL ptu_gerar_grupo_aud_padrao(null,nr_seq_requisicao_w,'GC',nm_usuario_p);
					end if;
				end if;
 
				insert	into ptu_confirmacao(nr_sequencia, cd_transacao, ie_tipo_cliente, 
					 cd_unimed_executora, cd_unimed_beneficiario, nr_seq_execucao, 
					 dt_atualizacao, nm_usuario, nr_seq_origem, 
					 nr_seq_requisicao, nr_seq_guia, ie_tipo_identificador, 
					 ie_tipo_resposta, ds_arquivo_pedido, nm_usuario_nrec, 
					 dt_atualizacao_nrec) 
				values (nextval('ptu_confirmacao_seq'), cd_transacao_w, ie_tipo_cliente_w, 
					 cd_unimed_executora_w, cd_unimed_beneficiario_w, nr_seq_execucao_w, 
					 clock_timestamp(), nm_usuario_p, nr_seq_origem_w, 
					 nr_seq_requisicao_w, nr_seq_guia_w, ie_tipo_identifica_w, 
					 ie_tipo_resposta_w, ds_arquivo_p, nm_usuario_p, 
					 clock_timestamp());			
				 
				if (ie_tipo_resposta_w	in ('PI','C')) then 
					if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then 
						CALL pls_guia_gravar_historico(nr_seq_guia_w,2,'Recebida e processada a confirmação de recebimento da Unimed '||cd_unimed_beneficiario_w,'',nm_usuario_p);
					elsif (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then 
						CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w,'L','Recebida e processada a confirmação de recebimento da Unimed '||cd_unimed_beneficiario_w,null,nm_usuario_p);
					end if;
				elsif (ie_tipo_resposta_w	= 'RA') then 
					if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then 
						CALL pls_guia_gravar_historico(nr_seq_guia_w,2,'Recebida e processada a confirmação de recebimento da Unimed '||cd_unimed_executora_w,'',nm_usuario_p);
					elsif (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then 
						CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w,'L','Recebida e processada a confirmação de recebimento da Unimed '||cd_unimed_executora_w,null,nm_usuario_p);
					end if;
				end if;
			end if;
		end if;
	end if;
	end;
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_importar_confirmacao_v40 ( ds_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

