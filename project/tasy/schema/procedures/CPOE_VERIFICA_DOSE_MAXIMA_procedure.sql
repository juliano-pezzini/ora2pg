-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_verifica_dose_maxima ( nr_atendimento_p bigint, cd_pessoa_fisica_p text, qt_peso_p bigint, cd_material_p bigint, cd_unidade_medida_p text, nr_ocorrencia_p bigint, ie_via_aplicacao_p text, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, cd_prescritor_p text, ds_erro_p INOUT text, ds_erro2_p INOUT text) AS $body$
DECLARE

					 
qt_dose_w						prescr_material.qt_dose%type;
qt_dose_ww						prescr_material.qt_dose%type;
qt_dose_limite_w				prescr_material.qt_dose%type;
nr_ocorrencia_w					prescr_material.nr_ocorrencia%type;

cd_setor_atendimento_w			setor_atendimento.cd_setor_atendimento%type;
nr_seq_agrupamento_w			setor_atendimento.nr_seq_agrupamento%type;

qt_max_prescricao_w				material.qt_max_prescricao%type;
cd_unidade_medida_consumo_w		material.cd_unidade_medida_consumo%type;
cd_unid_med_limite_w			material.cd_unid_med_limite%type;
qt_limite_pessoa_w				material.qt_limite_pessoa%type;
ie_dose_limite_w				material.ie_dose_limite%type;

qt_conversao_dose_limite_w		material_conversao_unidade.qt_conversao%type;
qt_conversao_dose_w				material_conversao_unidade.qt_conversao%type;

ie_justificativa_w				material_prescr.ie_justificativa%type;
ds_observacao_w					material_prescr.ds_observacao%type;
ds_mensagem_regra_w				material_prescr.ds_mensagem_regra%type;

qt_idade_w						double precision;
qt_idade_dia_w					double precision;
qt_idade_mes_w					double precision;
qt_regra_w						bigint;
					
c01 CURSOR FOR 
	SELECT	coalesce(qt_limite_pessoa,0), 
			coalesce(ie_dose_limite,'DOSE'), 
			cd_unid_med_limite, 
			coalesce(ie_justificativa,'S'), 
			ds_observacao, 
			ds_mensagem_regra 
	from	material_prescr 
	where	cd_material = cd_material_p 
	and		coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0) 
	and		coalesce(ie_via_aplicacao, coalesce(ie_via_aplicacao_p,0)) = coalesce(ie_via_aplicacao_p,0) 
	and		(qt_limite_pessoa IS NOT NULL AND qt_limite_pessoa::text <> '') 
	and		qt_idade_w between coalesce(qt_idade_min,0) and coalesce(qt_idade_max,999) 
	and		qt_idade_dia_w between coalesce(qt_idade_min_dia,0) and coalesce(qt_idade_max_dia,55000) 
	and		qt_idade_mes_w between coalesce(qt_idade_min_mes,0) and coalesce(qt_idade_max_mes,55000) 
	and		((coalesce(nr_seq_agrupamento::text, '') = '') or (nr_seq_agrupamento = nr_seq_agrupamento_w)) 
	and		qt_peso_p between coalesce(qt_peso_min,0) and coalesce(qt_peso_max,999) 
	and		coalesce(cd_protocolo::text, '') = '' 
	and		ie_tipo = '2' 
	and 	coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p 
	and		Obter_se_setor_regra_prescr(nr_sequencia, cd_setor_atendimento_w) = 'S' 
	and		((coalesce(cd_especialidade::text, '') = '') or (obter_se_especialidade_medico(cd_prescritor_p, cd_especialidade) = 'S')) 
	and		((coalesce(cd_doenca_cid::text, '') = '') or (obter_se_cid_atendimento(nr_atendimento_p,cd_doenca_cid) = 'S')) 
	order by	nr_sequencia, 
				cd_especialidade;


BEGIN 
 
ds_erro_p	:= '';
ds_erro2_p	:= '';
	 
select	coalesce(sum(obter_dose_convertida(cd_material, qt_dose, cd_unidade_medida, cd_unidade_medida_p)),0), 
		coalesce(sum(nr_ocorrencia),0) 
into STRICT	qt_dose_w, 
		nr_ocorrencia_w 
from	cpoe_material_vig_v 
where	cd_material		= cd_material_p 
and		nr_atendimento	= nr_atendimento_p;
 
if (coalesce(cd_material_p,0) > 0) and (cd_unidade_medida_p IS NOT NULL AND cd_unidade_medida_p::text <> '') and (coalesce(qt_dose_w,0) > 0) then 
	 
	cd_setor_atendimento_w := cpoe_obter_setor_atend_prescr(nr_atendimento_p,cd_estabelecimento_p,cd_perfil_p,nm_usuario_p);
 
	select	max(nr_seq_agrupamento) 
	into STRICT	nr_seq_agrupamento_w 
	from	setor_atendimento 
	where	cd_setor_atendimento	= cd_setor_atendimento_w;
	 
	qt_idade_w 		:= coalesce((obter_idade_pf(cd_pessoa_fisica_p, clock_timestamp(), 'A'))::numeric ,0);
	qt_idade_dia_w 	:= coalesce((obter_idade_pf(cd_pessoa_fisica_p, clock_timestamp(), 'DIA'))::numeric ,0);
	qt_idade_mes_w 	:= coalesce((obter_idade_pf(cd_pessoa_fisica_p, clock_timestamp(), 'M'))::numeric ,0);
	 
	select	coalesce(max(qt_max_prescricao),0), 
			max(cd_unidade_medida_consumo), 
			max(cd_unid_med_limite), 
			coalesce(max(qt_limite_pessoa),0), 
			coalesce(max(ie_dose_limite),'DOSE') 
	into STRICT	qt_max_prescricao_w, 
			cd_unidade_medida_consumo_w, 
			cd_unid_med_limite_w, 
			qt_limite_pessoa_w, 
			ie_dose_limite_w 
	from	material 
	where	cd_material	= cd_material_p;
 
	select	count(*) 
	into STRICT	qt_regra_w 
	from	material where		(qt_limite_pessoa IS NOT NULL AND qt_limite_pessoa::text <> '') 
	and		cd_material	= cd_material_p LIMIT 1;
 
	if (qt_regra_w > 0) then 
		if (cd_unidade_medida_consumo_w = cd_unidade_medida_p) then 
			qt_conversao_dose_w	:= 1;
		else 
			begin 
			select	coalesce(max(qt_conversao),1) 
			into STRICT	qt_conversao_dose_w 
			from	material_conversao_unidade 
			where	cd_material			= cd_material_p 
			and		cd_unidade_medida	= cd_unidade_medida_p;
			exception 
				when others then 
				qt_conversao_dose_w	:= 1;
			end;
		end if;
		 
		qt_dose_ww	:= dividir(trunc(dividir(qt_dose_w * 1000, qt_conversao_dose_w)), 1000);
 
		if (qt_max_prescricao_w > 0) and (qt_max_prescricao_w < coalesce(qt_dose_ww,0)) then 
			-- A dose unitária é maior que a usual prevista #@QT_MAX_PRESCRICAO_P#@ #@CD_UNIDADE_MEDIDA_CONSUMO_P#@ 
			ds_erro_p	:= wheb_mensagem_pck.get_texto(277286, 'QT_MAX_PRESCRICAO_P=' || qt_max_prescricao_w || ';CD_UNIDADE_MEDIDA_CONSUMO_P=' || cd_unidade_medida_consumo_w);
		end if;
 
		if (cd_unidade_medida_consumo_w = cd_unid_med_limite_w) then 
			qt_conversao_dose_limite_w	:= 1;
		else 
			begin 
			select	coalesce(max(qt_conversao),1) 
			into STRICT	qt_conversao_dose_limite_w 
			from	material_conversao_unidade 
			where	cd_material			= cd_material_p 
			and		cd_unidade_medida	= cd_unid_med_limite_w;
			exception 
				when others then 
					qt_conversao_dose_limite_w	:= 1;
			end;
		end if;
 
		qt_dose_ww		 := dividir(trunc(dividir(qt_dose_w * 1000, qt_conversao_dose_limite_w)), 1000);
		qt_dose_limite_w := dividir(trunc(dividir(qt_limite_pessoa_w * 1000, qt_conversao_dose_limite_w)), 1000);
		 
		RAISE NOTICE '% - % - % - %', qt_dose_ww, qt_dose_w, qt_conversao_dose_limite_w, nr_ocorrencia_w;
		 
		if (ie_dose_limite_w = 'DIA') then 
			qt_dose_ww	:= qt_dose_ww * coalesce(nr_ocorrencia_w,1);
		elsif (ie_dose_limite_w = 'AT') then 
			qt_dose_ww	:= qt_dose_ww * coalesce(nr_ocorrencia_w,1);
			qt_dose_ww	:= qt_dose_ww + cpoe_obter_dose_medic_atend( nr_atendimento_p, cd_material_p, cd_unid_med_limite_w);
		elsif (ie_dose_limite_w = 'PF') then 
			qt_dose_ww	:= qt_dose_ww * coalesce(nr_ocorrencia_w,1);
			qt_dose_ww	:= qt_dose_ww + cpoe_obter_dose_medic_pac( cd_pessoa_fisica_p, cd_material_p, cd_unid_med_limite_w);
		elsif (qt_peso_p > 0) and (ie_dose_limite_w = 'KG/DIA') then 
			qt_dose_ww	:= dividir(qt_dose_ww, coalesce(qt_peso_p,1));
			qt_dose_ww	:= qt_dose_ww * coalesce(nr_ocorrencia_w,1);
		elsif (qt_peso_p > 0) and (ie_dose_limite_w = 'KG/D') then 
			qt_dose_ww	:= dividir(qt_dose_ww, coalesce(qt_peso_p,1));
		end if;
 
		if (qt_dose_limite_w > 0) and (qt_dose_limite_w < coalesce(qt_dose_ww,0)) then 
			-- A dose unitária é maior que a dose limite #@QT_LIMITE_PESSOA_P#@ #@CD_UNID_MED_LIMITE_P#@ por #@DS_DOSE_LIMITE_P#@ 
			ds_erro2_p	:= wheb_mensagem_pck.get_texto(277256, 'QT_LIMITE_PESSOA_P=' || qt_limite_pessoa_w || ';CD_UNID_MED_LIMITE_P=' || cd_unid_med_limite_w || ';DS_DOSE_LIMITE_P=' || lower(ie_dose_limite_w));
		end if;
	else 
		-- Verifica se tem alguma regra para os dados informados 
		open c01;
		loop 
		fetch c01 into 
			qt_limite_pessoa_w, 
			ie_dose_limite_w, 
			cd_unid_med_limite_w, 
			ie_justificativa_w, 
			ds_observacao_w, 
			ds_mensagem_regra_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin 
			 
			ds_erro2_p := null;
			 
			if (cd_unidade_medida_consumo_w = cd_unidade_medida_p) then 
				qt_conversao_dose_w	:= 1;
			else 
				begin 
				select	coalesce(max(qt_conversao),1) 
				into STRICT	qt_conversao_dose_w 
				from	material_conversao_unidade 
				where	cd_material		= cd_material_p 
				and		cd_unidade_medida	= cd_unidade_medida_p;
				exception 
					when others then 
						qt_conversao_dose_w	:= 1;
				end;
			end if;
			 
			qt_dose_ww	:= dividir(trunc(dividir(qt_dose_w * 1000, qt_conversao_dose_w)), 1000);
 
			if (qt_max_prescricao_w > 0) and (qt_max_prescricao_w < coalesce(qt_dose_ww,0)) then 
				-- A dose unitária é maior que a usual prevista #@QT_MAX_PRESCRICAO_P#@ #@CD_UNIDADE_MEDIDA_CONSUMO_P#@ #@DS_OBSERVACAO_P#@ 
				ds_erro_p	:= substr(wheb_mensagem_pck.get_texto(278059, 'QT_MAX_PRESCRICAO_P=' || qt_max_prescricao_w ||';CD_UNIDADE_MEDIDA_CONSUMO_P=' || cd_unidade_medida_consumo_w ||';DS_OBSERVACAO_P=' || coalesce(ds_observacao_w, ' ')),1,255);
				if (ds_mensagem_regra_w IS NOT NULL AND ds_mensagem_regra_w::text <> '') then 
					ds_erro_p := ds_mensagem_regra_w;
				end if;
			end if;
 
			if (cd_unidade_medida_consumo_w = cd_unid_med_limite_w) then 
				qt_conversao_dose_limite_w	:= 1;
			else 
				begin 
				select	coalesce(max(qt_conversao),1) 
				into STRICT	qt_conversao_dose_limite_w 
				from	material_conversao_unidade 
				where	cd_material		= cd_material_p 
				and		cd_unidade_medida	= cd_unid_med_limite_w;
				exception 
					when others then 
						qt_conversao_dose_limite_w	:= 1;
				end;
			end if;
			 
			qt_dose_ww	:= dividir(trunc(dividir(qt_dose_w * 1000, qt_conversao_dose_limite_w)), 1000);
			qt_dose_limite_w	:= dividir(trunc(dividir(qt_limite_pessoa_w * 1000, qt_conversao_dose_limite_w)), 1000);
 
			if (ie_dose_limite_w = 'DIA') then 
				qt_dose_ww		:= qt_dose_ww	 * coalesce(nr_ocorrencia_w,1);
			elsif (ie_dose_limite_w = 'AT') then 
				qt_dose_ww	:= qt_dose_ww * coalesce(nr_ocorrencia_w,1);
				qt_dose_ww	:= qt_dose_ww + cpoe_obter_dose_medic_atend( nr_atendimento_p, cd_material_p, cd_unid_med_limite_w);
			elsif (ie_dose_limite_w = 'PF') then 
				qt_dose_ww	:= qt_dose_ww * coalesce(nr_ocorrencia_w,1);
				qt_dose_ww	:= qt_dose_ww + cpoe_obter_dose_medic_pac( cd_pessoa_fisica_p, cd_material_p, cd_unid_med_limite_w);
			elsif (qt_peso_p > 0) then 
				if (ie_dose_limite_w = 'KG') then 
					qt_dose_ww := dividir(qt_dose_ww , coalesce(qt_peso_p,1));
				elsif (ie_dose_limite_w = 'KG/DIA') then 
					qt_dose_ww	:= dividir(qt_dose_ww, coalesce(qt_peso_p,1));
					qt_dose_ww	:= qt_dose_ww * coalesce(nr_ocorrencia_w,1);
				elsif (ie_dose_limite_w = 'KG/D') then 
					qt_dose_ww	:= dividir(qt_dose_ww, coalesce(qt_peso_p,1));/*por KG*/
				end if;
			end if;
 
			if (qt_dose_limite_w > 0) and (qt_dose_limite_w < coalesce(qt_dose_ww,0)) then 
				-- A dose unitária é maior que a dose limite #@QT_LIMITE_PESSOA_P#@ #@CD_UNID_MED_LIMITE_P#@ por #@IE_DOSE_LIMITE_P#@ 
				-- #@DS_OBSERVACAO_P#@ 
				ds_erro2_p	:= substr(wheb_mensagem_pck.get_texto(278070, 'QT_LIMITE_PESSOA_P='||QT_LIMITE_PESSOA_W||';CD_UNID_MED_LIMITE_P=' ||CD_UNID_MED_LIMITE_W||';IE_DOSE_LIMITE_P='||lower(IE_DOSE_LIMITE_W)||';DS_OBSERVACAO_P='||coalesce(DS_OBSERVACAO_W, ' ')),1,255);
				if (ds_mensagem_regra_w IS NOT NULL AND ds_mensagem_regra_w::text <> '') then 
					ds_erro2_p := ds_mensagem_regra_w;
				end if;
			end if;
 
			end;
		end loop;
		close c01;
	end if;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_verifica_dose_maxima ( nr_atendimento_p bigint, cd_pessoa_fisica_p text, qt_peso_p bigint, cd_material_p bigint, cd_unidade_medida_p text, nr_ocorrencia_p bigint, ie_via_aplicacao_p text, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, cd_prescritor_p text, ds_erro_p INOUT text, ds_erro2_p INOUT text) FROM PUBLIC;

