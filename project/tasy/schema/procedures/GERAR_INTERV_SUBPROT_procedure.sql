-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_interv_subprot ( nr_sequencia_p text, nr_sequencia_SAE_p bigint, cd_setor_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

				 
nr_seq_proc_w		bigint;
nr_seq_protocolo_w	bigint;
nr_seq_subproc_w	bigint;
lista_informacao_w	varchar(4000)	:= nr_sequencia_p;
tam_lista_w		bigint;
ie_pos_virgula_w	smallint;
lista_inf_w		varchar(100);
ds_observacao_w		varchar(255);
cd_intervalo_w		varchar(10);
ds_horarios_padrao_w	varchar(255);
				
c01 CURSOR FOR 
	SELECT	 distinct nr_seq_protocolo, 
			  nr_sequencia 
	from	 pe_protocolo_subtipo 
	where	 nr_sequencia = (lista_inf_w)::numeric;

C02 CURSOR FOR 
	SELECT	nr_seq_proc, 
		a.nr_sequencia, 
		a.ds_observacao_padr, 
		a.cd_intervalo, 
		a.ds_horario_padrao 
	from	pe_protocolo_proc a 
	where 	Obter_se_intervencao_lib(a.nr_sequencia,Obter_Perfil_Ativo,cd_setor_Atendimento_p,nm_usuario_p,'I')	= 'S' 
	and	coalesce(ie_situacao,'A') = 'A' 
	and	nr_seq_subtipo = nr_seq_subproc_w;


BEGIN 
if (substr(lista_informacao_w, length(lista_informacao_w))	<> ',') then 
	lista_informacao_w	:= lista_informacao_w ||',';
end if;
 
 
while(lista_informacao_w IS NOT NULL AND lista_informacao_w::text <> '') loop 
	begin 
	tam_lista_w			:= length(lista_informacao_w);
	ie_pos_virgula_w		:= position(',' in lista_informacao_w);
	lista_inf_w			:= substr(lista_informacao_w,1,ie_pos_virgula_w - 1);
	lista_informacao_w		:= substr(lista_informacao_w,ie_pos_virgula_w + 1,tam_lista_w);
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_protocolo_w, 
		nr_seq_subproc_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		open C02;
		loop 
		fetch C02 into 
			nr_seq_proc_w, 
			nr_seq_protocolo_w , 
			ds_observacao_w, 
			cd_intervalo_w, 
			ds_horarios_padrao_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			CALL gerar_intervencao_protocolo(nr_sequencia_SAE_p,nr_seq_proc_w,nr_seq_protocolo_w,nm_usuario_p,ds_observacao_w,cd_intervalo_w,ds_horarios_padrao_w);
			end;
		end loop;
		close C02;
		end;
	end loop;
	close C01;
	end;
end loop;
	 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_interv_subprot ( nr_sequencia_p text, nr_sequencia_SAE_p bigint, cd_setor_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

