-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_guia_consulta_nom ( dt_inicio_p timestamp, dt_fim_p timestamp, nm_usuario_p text) AS $body$
DECLARE


qt_linha_w    numeric(38);

C01 CURSOR FOR
	SELECT 	pessoa_juridica.cd_internacional clues,
		coalesce(substr(upper(pessoa_juridica.cd_curp),1,18), 'XXXX999999XXXXXX99') curpprestador,
		coalesce(substr(upper(pessoa_juridica.ds_razao_social),1,50), 'XX') nombreprestador,
		coalesce(substr(upper(pessoa_juridica.nm_fantasia),1,50), 'XX') primerapellidoprestador,
		coalesce(substr(upper(pessoa_juridica.ds_nome_abrev),1,50), 'XX') segundoapellidoprestador,
		obter_dados_tipo_profissional(b.nr_atendimento, 'codigo') tipopersonal,
		obter_dados_tipo_profissional(b.nr_atendimento, 'tipo') especificatipopersonal,
		obter_dados_tipo_profissional(b.nr_atendimento, 'cedula') cedulaprofesional,
		CASE WHEN b.ie_clinica=2 THEN 3 WHEN b.ie_clinica=1 THEN 4 WHEN b.ie_clinica=3 THEN 5 WHEN b.ie_clinica=1000 THEN 6 WHEN b.ie_clinica=1001 THEN 7 WHEN b.ie_clinica=1002 THEN 8 WHEN b.ie_clinica=1004 THEN 9 WHEN b.ie_clinica=1005 THEN 13 WHEN b.ie_clinica=1006 THEN 14 WHEN b.ie_clinica=4 THEN 16 WHEN b.ie_clinica=1007 THEN 17 WHEN b.ie_clinica=1008 THEN 22 WHEN b.ie_clinica=1009 THEN 23  ELSE 88 END  servicioatencion,
		--dados paciente--
		coalesce(substr(upper(pf_p.cd_curp),1,18), 'XXXX999999XXXXXX99') curppaciente,
		substr(upper(y.ds_given_name),1,50) nombre,
		coalesce(substr(upper(y.ds_family_name),1,50), 'XX') primerapellido,
		coalesce(substr(upper(y.ds_component_name_1),1,50), 'XX') segundoapellido,
		coalesce(to_char(pf_p.dt_nascimento, 'dd/mm/yyyy'), null) fechanacimiento,
		CASE WHEN i.ie_brasileiro='S' THEN  obter_dados_cat_entidade(pf_p.cd_pessoa_fisica, 'CD_ENTIDADE') END  entidadnacimiento,
		case
			when (obter_idade(pf_p.dt_nascimento, b.dt_inicio_atendimento, 'A') IS NOT NULL AND (obter_idade(pf_p.dt_nascimento, b.dt_inicio_atendimento, 'A'))::text <> '')
			then coalesce(obter_idade_imc_nom(b.nr_atendimento,pf_p.dt_nascimento,b.dt_inicio_atendimento,'EDAD'),-1)
			else 999
		end as edad,
		case
			when (obter_idade(pf_p.dt_nascimento, b.dt_inicio_atendimento, 'A') IS NOT NULL AND (obter_idade(pf_p.dt_nascimento, b.dt_inicio_atendimento, 'A'))::text <> '')
			then obter_idade_imc_nom(b.nr_atendimento,pf_p.dt_nascimento,b.dt_inicio_atendimento,'CLAVEEDAD')
			else 9
		end as claveedad,
		CASE WHEN pf_p.ie_sexo='M' THEN  1  WHEN pf_p.ie_sexo='F' THEN  2  ELSE 9 END  sexo,
		CASE WHEN pf_p.nr_seq_cor_pele=201 THEN  1  ELSE 0 END  seconsideraindigena,
		--derechohaniencia--
		(CASE WHEN (pf_p.nr_spss IS NOT NULL AND pf_p.nr_spss::text <> '') THEN 1 ELSE 0 END) spss,
		case
			when (pf_p.nr_spss IS NOT NULL AND pf_p.nr_spss::text <> '')
			then substr(pf_p.nr_spss,1,13)
		end as numeroafiliacionspss,
		CASE WHEN n.cd_tipo_convenio_mx=13 THEN  1  ELSE 0 END  prospera,
		CASE WHEN n.cd_tipo_convenio_mx=13 THEN  elimina_caractere_especial(substr(p.nr_doc_convenio,1,16)) END  folioprospera,
		CASE WHEN n.cd_tipo_convenio_mx=2 THEN  1  ELSE 0 END  imss,
		CASE WHEN n.cd_tipo_convenio_mx=2 THEN  substr(p.nr_doc_convenio,1,11) END  numeroafiliacionimss,
		CASE WHEN n.cd_tipo_convenio_mx=3 THEN  1  ELSE 0 END  issste,
		CASE WHEN n.cd_tipo_convenio_mx=3 THEN  substr(p.nr_doc_convenio,1,13) END  numeroafiliacionissste,
		CASE WHEN n.cd_tipo_convenio_mx=15 THEN  1  ELSE 0 END  otraafiliacion,
		CASE WHEN n.cd_tipo_convenio_mx=15 THEN  substr(p.nr_doc_convenio,1,15) END  numerootraafiliacion,

		coalesce(coalesce(obter_sinal_vital(b.nr_atendimento, 'PESO'), pf_p.qt_peso), '999') peso,
		coalesce(coalesce(obter_sinal_vital(b.nr_atendimento,'ALTURA'), pf_p.qt_altura_cm), '999') talla,
		obter_dados_deficiencia(pf_p.cd_pessoa_fisica, 'tipo') tipodificultad,
		obter_dados_deficiencia(pf_p.cd_pessoa_fisica, 'grau') gradodificultad,
		obter_dados_deficiencia(pf_p.cd_pessoa_fisica, 'origem') origendificultad,

		-1 migrante,
		--consulta--
		to_char(b.dt_entrada, 'dd/mm/yyyy') fechaconsulta,
		case
			when(SELECT count(*) from atendimento_paciente ap where (to_char(ap.dt_inicio_atendimento, 'yyyy') = extract(year from b.dt_inicio_atendimento)) and b.nr_atendimento = ap.nr_atendimento) > 1
			then 1
			else 0
		end as relaciontemporal,
		elimina_caractere_especial(substr( obter_diagnost_doenca_nom(b.nr_atendimento) ,1, 255)) as descripciondiagnostico1,
		case
			when ((select count(*) from diagnostico_doenca ddp where to_char(ddp.dt_diagnostico, 'yyyy') = extract(year from b.dt_entrada) and ddp.nr_atendimento = b.nr_atendimento and ddp.ie_classificacao_doenca = 'P') > 1)
			then 0
			else 1
		end as primeravezdiagnostico1,
		case
			when(select max(cd.ds_doenca_cid) from diagnostico_doenca dd, cid_doenca cd where dd.nr_atendimento = b.nr_atendimento and dd.cd_doenca = cd.cd_doenca_cid and dd.ie_classificacao_doenca = 'P') is not null
			then coalesce((select CASE WHEN coalesce(ie_suive_morb, ie_causa)='S' THEN  0  ELSE 1 END  from cid_doenca a2
				where a2.cd_doenca_cid = (select max(cd_doenca)
							from diagnostico_doenca
							where nr_atendimento = b.nr_atendimento
							and ie_classificacao_doenca = 'P')), 0)
		end as suivecausesdiagnostico1,
		(select max(cd.cd_doenca_cid) from diagnostico_doenca dd, cid_doenca cd where dd.nr_atendimento = b.nr_atendimento and dd.cd_doenca = cd.cd_doenca_cid and dd.ie_classificacao_doenca = 'P') codigociediagnostico1,
		elimina_caractere_especial(substr(upper((select max(cd.ds_doenca_cid)
							from diagnostico_doenca dd, cid_doenca cd
							where dd.nr_atendimento = b.nr_atendimento
							and dd.cd_doenca = cd.cd_doenca_cid
							and dd.ie_classificacao_doenca = 'S')),1, 255)) descripciondiagnostico2,
		case
			when ((select count(*) from diagnostico_doenca ddp where to_char(ddp.dt_diagnostico, 'yyyy') = extract(year from b.dt_entrada) and ddp.nr_atendimento = b.nr_atendimento and ddp.ie_classificacao_doenca = 'S') > 1)
			then 0
			else 1
		end as primeravezdiagnostico2,
		case
			when(select max(ds_diagnostico) from diagnostico_doenca where nr_atendimento = b.nr_atendimento and ie_classificacao_doenca = 'S') is not null
			then coalesce((select CASE WHEN coalesce(ie_suive_morb, ie_causa)='S' THEN  0  ELSE 1 END  from cid_doenca a2
					where a2.cd_doenca_cid = (select max(cd_doenca)
					from diagnostico_doenca
					where nr_atendimento = b.nr_atendimento
					and ie_classificacao_doenca = 'S')), 'N')
		end as suivecausesdiagnostico2,
		(select max(cd.cd_doenca_cid) from diagnostico_doenca dd, cid_doenca cd where dd.nr_atendimento = b.nr_atendimento and dd.cd_doenca = cd.cd_doenca_cid and dd.ie_classificacao_doenca = 'S') codigociediagnostico2,
		0 primeravezanio,
		coalesce(obter_idade_imc_nom(b.nr_atendimento,null,null,'IMC'),-1) imc10,
		nvl2((select cc1.cd_doenca_cid
			from cid_doenca cc1, diagnostico_doenca ddp
			where cc1.cd_categoria_cid in ('A15', 'A16', 'A17', 'A18', 'A19')
			and cc1.cd_doenca_cid like ddp.cd_doenca
			and ddp.nr_atendimento = b.nr_atendimento), 1, 0) sintomaticorespiratoriotb,
		--salud reproductiva--
		CASE WHEN(select max(coalesce(b.ie_paciente_gravida,ag.ie_pac_gravida))			from atendimento_gravidez ag			where to_char(ag.dt_liberacao, 'yyyy') = extract(year from b.dt_inicio_atendimento)			and ag.nr_atendimento = b.nr_atendimento			and ag.ie_situacao = 'A' )='N' THEN 0 WHEN(select max(coalesce(b.ie_paciente_gravida,ag.ie_pac_gravida))			from atendimento_gravidez ag			where to_char(ag.dt_liberacao, 'yyyy') = extract(year from b.dt_inicio_atendimento)			and ag.nr_atendimento = b.nr_atendimento			and ag.ie_situacao = 'A' )='S' THEN 1  ELSE -1 END  relaciontemporalembarazo,
		obter_trimestre_gestacional(b.nr_atendimento, b.dt_inicio_atendimento, b.ie_paciente_gravida) as trimestregestacional,
		(select max(CASE WHEN coalesce(coalesce(b.ie_paciente_gravida,ag.ie_pac_gravida)::text, '') = '' THEN  0  ELSE CASE WHEN ag.ie_risco_gravidez='S' THEN 1  ELSE 0 END  END )
		from atendimento_gravidez ag where ie_situacao = 'A' and ag.nr_atendimento  = b.nr_atendimento)  primeravezaltoriesgo,
		(select max(CASE WHEN coalesce(coalesce(b.ie_paciente_gravida,ag.ie_pac_gravida)::text, '') = '' THEN  0  ELSE CASE WHEN pp.ie_diabetes='S' THEN 1  ELSE 0 END  END )
		from atendimento_gravidez ag where ie_situacao = 'A' and ag.nr_atendimento  = b.nr_atendimento) complicacionpordiabetes,
		(select max(CASE WHEN coalesce(coalesce(b.ie_paciente_gravida,ag.ie_pac_gravida)::text, '') = '' THEN  0  ELSE CASE WHEN pp.ie_infeccao_urinaria='S' THEN 1  ELSE 0 END  END )
		from atendimento_gravidez ag where ie_situacao = 'A' and ag.nr_atendimento  = b.nr_atendimento) complicacioninfeccionurinaria,
		-1 complicacioneclamsiaeclamsia,
		0 complicacionporhemorragia,
		0 otrasaccanalisisclinicos,
		0 otrasaccprescacidofolico,
		0 otrasaccapoyotranslado,
		--puerperio--
		-1 puerpera,
		-1 infeccionpuerperal,
		-1 aceptapf,
		--terapia hormonal--
		-1 peripostmenopausia,
		nvl2((select cc1.cd_doenca_cid
			from cid_doenca cc1, diagnostico_doenca ddp
			where cc1.cd_categoria_cid in ('A50', 'A51', 'A52', 'A53', 'A54', 'A55', 'A56', 'A57', 'A58', 'A59','A60', 'A61', 'A62', 'A63', 'A64')
			and cc1.cd_doenca_cid like ddp.cd_doenca
			and ddp.nr_atendimento = b.nr_atendimento), 1, 0) its,
		-1 apoyopsicoemocional,
		case
			when pf_p.ie_sexo = 'F'
			then
				case
				when exists (select * from cid_doenca cc1, diagnostico_doenca ddp where cc1.cd_categoria_cid in ('N60') and cc1.cd_doenca_cid like ddp.cd_doenca and ddp.nr_atendimento = b.nr_atendimento)
				then 1
				else 0
			end
			else -1
		end as patologiamamariabenigna,
		-1 cancermamario,
		-1 colposcopia,
		-1 cancercervicouterino,
		--salud de nino--
		case
			when(obter_idade(pf_p.dt_nascimento, b.dt_inicio_atendimento, 'A') > 10)
			then
				case
				when(select count(nr_atendimento) from atendimento_paciente ap where ap.cd_pessoa_fisica = pf_p.cd_pessoa_fisica) > 1
				then 1
				else 0
			end
			else -1
		end as ninosanort,
		-1 pesoparatalla,
		case
			when(obter_idade(pf_p.dt_nascimento, b.dt_inicio_atendimento, 'A')) between 5 and 19
			then coalesce(obter_idade_imc_nom(b.nr_atendimento,null,null,'IMC'),-1)
			else -1
		end as imc5,
		-1 pruebaedi,
		-1 resultadoedi,
		-1 resultadobatelle,
		--cáncer en menores de 18 años--
		-1 aplicacioncedulacancer,
		-1 confirmacioncancer,
		--enfermedades diarreicas agudas (eda’s)--
		-1 edasrt,
		-1 edasplantratamiento,
		0 recuperadodeshidratacion,
		0 numerosobresvsotratamiento,
		0 numerosobresvsopromocion,
		--enfermedades respiratorias agudas ira´s --
		case
			when(obter_idade(pf_p.dt_nascimento, b.dt_inicio_atendimento, 'A') < 5)
			then
				case
					when exists (select * from cid_doenca cc1, diagnostico_doenca ddp where cc1.cd_categoria_cid in ('J00', 'J02', 'J03', 'J04', 'J05', 'J06', 'J09', 'J10', 'J11', 'J12', 'J13', 'J14','J15', 'J16', 'J17', 'J18', 'J19', 'J20','J21','J22') and cc1.cd_doenca_cid like ddp.cd_doenca and ddp.nr_atendimento = b.nr_atendimento)
					then 1
					else 0
				end
			else -1
		end as irasrt,
		case
			when(obter_idade(pf_p.dt_nascimento, b.dt_inicio_atendimento, 'A') < 5)
			then
				case
					when(select max(ddp.ie_sintomatico) from diagnostico_doenca ddp where ddp.nr_atendimento = b.nr_atendimento) = 'S'
					then 1
					else 0
				end
			else -1
		end as irasplantratamiento,
		-1 neumoniart,
		0 informaprevencionaccidentes,
		0 lineavida,
		0 cartillavacunacion,
		-1 referidopor,
		0 contrarreferido,
		0 telemedicina,
		/* campos superiores */

		b.dt_entrada dt_entrada,
		pf_p.cd_pessoa_fisica cd_pessoa_fisica,
		b.nr_atendimento nr_atendimento

	FROM table(pkg_name_utils.search_names_legacy('', 'main')) y, pessoa_fisica pf_p, pessoa_juridica, pessoa_fisica pessoa_fisica_medico, atend_categoria_convenio p, medico m, nacionalidade i, estabelecimento e, categoria_convenio cc, atendimento_paciente b
LEFT OUTER JOIN parto pp ON (b.nr_atendimento = pp.nr_atendimento)
, convenio n
LEFT OUTER JOIN cat_derechohabiencia k ON (n.cd_tipo_convenio_mx = k.nr_sequencia)
WHERE b.cd_estabelecimento 	= e.cd_estabelecimento and pf_p.cd_pessoa_fisica 		= b.cd_pessoa_fisica and pessoa_fisica_medico.cd_pessoa_fisica 	= b.cd_medico_resp and pessoa_fisica_medico.cd_pessoa_fisica 	= m.cd_pessoa_fisica and pessoa_juridica.cd_cgc 		= e.cd_cgc and p.nr_atendimento 			= b.nr_atendimento and p.cd_convenio 				= cc.cd_convenio and p.cd_categoria 				= cc.cd_categoria and n.cd_convenio 				= cc.cd_convenio   and i.cd_nacionalidade 			= pf_p.cd_nacionalidade and b.ie_tipo_atendimento 	= 7 and y.nr_sequencia				= pf_p.nr_seq_person_name and b.dt_entrada between dt_inicio_p and dt_fim_p;

BEGIN

  delete from w_geracao_guia;

  commit;

    for r_c01 in C01 loop
    begin

      qt_linha_w := C01%ROWCOUNT;

	CALL grava_campos_nom(qt_linha_w, 'clues', r_c01.clues, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'curpprestador', r_c01.curpprestador, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'nombreprestador', r_c01.nombreprestador, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'primerapellidoprestador', r_c01.primerapellidoprestador, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'segundoapellidoprestador', r_c01.segundoapellidoprestador, 28, nm_usuario_p);
	CALL grava_campos_nom(qt_linha_w, 'tipopersonal', r_c01.tipopersonal, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'especificatipopersonal', r_c01.especificatipopersonal, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'cedulaprofesional', r_c01.cedulaprofesional, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'servicioatencion', r_c01.servicioatencion, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'curppaciente' , r_c01.curppaciente, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'nombre' , r_c01.nombre, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'primerapellido', r_c01.primerapellido, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'segundoapellido' , r_c01.segundoapellido, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'fechanacimiento' , r_c01.fechanacimiento, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'entidadnacimiento' , r_c01.entidadnacimiento , 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'edad' , r_c01.edad, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'claveedad' , r_c01.claveedad, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'sexo' , r_c01.sexo, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'seconsideraindigena', r_c01.seconsideraindigena , 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'spss' , r_c01.spss, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'numeroafiliacionspss', r_c01.numeroafiliacionspss, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'prospera', r_c01.prospera, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'folioprospera', r_c01.folioprospera , 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'imss', r_c01.imss, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'numeroafiliacionimss', r_c01.numeroafiliacionimss, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'issste', r_c01.issste, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'numeroafiliacionissste', r_c01.numeroafiliacionissste, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'otraafiliacion', r_c01.otraafiliacion, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'numerootraafiliacion', r_c01.numerootraafiliacion, 28, nm_usuario_p);
	CALL grava_campos_nom(qt_linha_w, 'peso', r_c01.peso, 28, nm_usuario_p);
	CALL grava_campos_nom(qt_linha_w, 'talla', r_c01.talla, 28, nm_usuario_p);
	CALL grava_campos_nom(qt_linha_w, 'tipodificultad', r_c01.tipodificultad, 28, nm_usuario_p);
	CALL grava_campos_nom(qt_linha_w, 'gradodificultad', r_c01.gradodificultad, 28, nm_usuario_p);
	CALL grava_campos_nom(qt_linha_w, 'origendificultad', r_c01.origendificultad, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'migrante', r_c01.migrante, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'fechaconsulta', r_c01.fechaconsulta, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'relaciontemporal', r_c01.relaciontemporal, 28, nm_usuario_p);
	CALL grava_campos_nom(qt_linha_w, 'descripciondiagnostico1', r_c01.descripciondiagnostico1, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'primeravezdiagnostico1', r_c01.primeravezdiagnostico1, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'suivecausesdiagnostico1',  r_c01.suivecausesdiagnostico1 , 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'codigociediagnostico1', r_c01.codigociediagnostico1, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'descripciondiagnostico2', r_c01.descripciondiagnostico2, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'primeravezdiagnostico2', r_c01.primeravezdiagnostico2, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'suivecausesdiagnostico2', r_c01.suivecausesdiagnostico2, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'codigociediagnostico2', r_c01.codigociediagnostico2, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'primeravezanio', r_c01.primeravezanio, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'imc10', r_c01.imc10, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'sintomaticorespiratoriotb', r_c01.sintomaticorespiratoriotb , 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'relaciontemporalembarazo', r_c01.relaciontemporalembarazo, 28, nm_usuario_p);
	CALL grava_campos_nom(qt_linha_w, 'trimestregestacional', r_c01.trimestregestacional, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'primeravezaltoriesgo', r_c01.primeravezaltoriesgo, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'complicacionpordiabetes', r_c01.complicacionpordiabetes, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'complicacioninfeccionurinaria', r_c01.complicacioninfeccionurinaria, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'complicacioneclamsiaeclamsia', r_c01.complicacioneclamsiaeclamsia, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'complicacionporhemorragia', r_c01.complicacionporhemorragia, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'otrasaccanalisisclinicos', r_c01.otrasaccanalisisclinicos, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'otrasaccprescacidofolico', r_c01.otrasaccprescacidofolico, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'otrasaccapoyotranslado', r_c01.otrasaccapoyotranslado, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'puerpera', r_c01.puerpera, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'infeccionpuerperal', r_c01.infeccionpuerperal, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'aceptapf', r_c01.aceptapf, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'peripostmenopausia', r_c01.peripostmenopausia, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'its', r_c01.its, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'apoyopsicoemocional', r_c01.apoyopsicoemocional, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'patologiamamariabenigna', r_c01.patologiamamariabenigna, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'cancermamario', r_c01.cancermamario, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'colposcopia', r_c01.colposcopia, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'cancercervicouterino', r_c01.cancercervicouterino , 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'ninosanort', r_c01.ninosanort , 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'pesoparatalla', r_c01.pesoparatalla, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'imc5', r_c01.imc5, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'pruebaedi', r_c01.pruebaedi, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'resultadoedi', r_c01.resultadoedi, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'resultadobatelle', r_c01.resultadobatelle, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'aplicacioncedulacancer', r_c01.aplicacioncedulacancer, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'confirmacioncancer', r_c01.confirmacioncancer, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'edasrt', r_c01.edasrt, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'edasplantratamiento', r_c01.edasplantratamiento, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'recuperadodeshidratacion', r_c01.recuperadodeshidratacion, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'numerosobresvsotratamiento', r_c01.numerosobresvsotratamiento, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'numerosobresvsopromocion', r_c01.numerosobresvsopromocion, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'irasrt', r_c01.irasrt, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'irasplantratamiento', r_c01.irasplantratamiento, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'neumoniart', r_c01.neumoniart, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'informaprevencionaccidentes', r_c01.informaprevencionaccidentes, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'lineavida', r_c01.lineavida, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'cartillavacunacion', r_c01.cartillavacunacion, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'referidopor', r_c01.referidopor, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'contrarreferido', r_c01.contrarreferido, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'telemedicina', r_c01.telemedicina, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'dt_entrada', r_c01.dt_entrada, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'cd_pessoa_fisica', r_c01.cd_pessoa_fisica, 28, nm_usuario_p);
        CALL grava_campos_nom(qt_linha_w, 'nr_atendimento', r_c01.nr_atendimento, 28, nm_usuario_p);


   end;

   END LOOP;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_guia_consulta_nom ( dt_inicio_p timestamp, dt_fim_p timestamp, nm_usuario_p text) FROM PUBLIC;

