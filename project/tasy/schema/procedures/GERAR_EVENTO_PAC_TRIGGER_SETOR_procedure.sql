-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_evento_pac_trigger_setor (nr_seq_evento_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, nr_seq_laudo_p bigint, nm_usuario_p text, cd_unidade_basica_p text, cd_unidade_compl_p text, cd_setor_Atendimento_p bigint) AS $body$
DECLARE


ie_forma_ev_w					varchar(15);
ie_pessoa_destino_w				varchar(15);
cd_pf_destino_w					varchar(10);
ds_mensagem_w					varchar(4000);
ds_titulo_w					varchar(100);
cd_pessoa_destino_w				varchar(10);
nr_sequencia_w					bigint;
ds_maquina_w					varchar(80);
nm_paciente_w					varchar(60);
ds_unidade_w					varchar(60);
ds_setor_atendimento_w				varchar(60);
ie_usuario_aceite_w				varchar(1);
qt_corresp_w					integer;
cd_setor_atendimento_w				integer;
cd_perfil_w					integer;
cd_pessoa_regra_w				varchar(10);
nr_ramal_w					varchar(10);
nr_telefone_w					varchar(10);
cd_convenio_w					bigint;
nm_usuario_destino_w				varchar(15);
cd_setor_atend_pac_w				integer;
ds_cid_w					varchar(240);
cd_cid_w					varchar(10);
nm_paciente_abrev_w				varchar(60);
ie_paciente_biobanco_w				varchar(100);
ie_assinou_termo_biobanco_w			varchar(1);

C01 CURSOR FOR
	SELECT	ie_forma_ev,
		ie_pessoa_destino,
		cd_pf_destino,
		coalesce(ie_usuario_aceite,'N'),
		cd_setor_atendimento,
		cd_perfil
	from	ev_evento_regra_dest
	where	nr_seq_evento	= nr_seq_evento_p
	and	coalesce(cd_convenio, coalesce(cd_convenio_w,0))	= coalesce(cd_convenio_w,0)
	and	coalesce(cd_setor_atend_pac, coalesce(cd_setor_atend_pac_w,0))	= coalesce(cd_setor_atend_pac_w,0)	
	and	coalesce(ie_assinou_termo_biobanco,ie_assinou_termo_biobanco_w) = ie_assinou_termo_biobanco_w
	order by ie_forma_ev;

C02 CURSOR FOR
	SELECT	obter_dados_usuario_opcao(a.nm_usuario,'C')
	from	usuario_setor_v a,
		usuario b
	where	a.nm_usuario = b.nm_usuario
	and	b.ie_situacao = 'A'
	and	a.cd_setor_atendimento = cd_setor_atendimento_w
	and	ie_forma_ev_w in (2,3)
	and	(obter_dados_usuario_opcao(a.nm_usuario,'C') IS NOT NULL AND (obter_dados_usuario_opcao(a.nm_usuario,'C'))::text <> '');

C03 CURSOR FOR
	SELECT	obter_dados_usuario_opcao(a.nm_usuario,'C'),
			a.nm_usuario
	from	usuario_perfil a,
		usuario b
	where	a.nm_usuario = b.nm_usuario
	and	b.ie_situacao = 'A'
	and	a.cd_perfil = cd_perfil_w
	and	ie_forma_ev_w in (2,3)
	and	(obter_dados_usuario_opcao(a.nm_usuario,'C') IS NOT NULL AND (obter_dados_usuario_opcao(a.nm_usuario,'C'))::text <> '');


BEGIN
select	substr(obter_inf_sessao(0),1,80)
into STRICT	ds_maquina_w
;


select	coalesce(max(obter_convenio_atendimento(nr_atendimento_p)), 0)
into STRICT	cd_convenio_w
;


select	ds_titulo,
	ds_mensagem
into STRICT	ds_titulo_w,
	ds_mensagem_w
from	ev_evento
where	nr_sequencia	= nr_seq_evento_p;

select 	substr(obter_pessoa_atendimento(nr_atendimento_p, 'N'),1,60),
	substr(abrevia_nome_pf(cd_pessoa_fisica_p,'M'),1,60),
		cd_unidade_basica_p || ' ' || cd_unidade_compl_p,
		substr(obter_ramal_unidade(cd_unidade_basica_p, cd_unidade_compl_p),1,10),
		substr(obter_dados_setor(cd_setor_atendimento_p, 'TL'),1,10),
		substr(obter_nome_setor(cd_setor_atendimento_p),1,60)	
into STRICT	nm_paciente_w,
	nm_paciente_abrev_w,
		ds_unidade_w,
		nr_ramal_w,
		nr_telefone_w,
		ds_setor_atendimento_w
;

select	substr(obter_cid_atendimento(nr_atendimento_p, 'P'),1,10),
	substr(obter_desc_cid_doenca(obter_cid_atendimento(nr_atendimento_p, 'P')),1,240)
into STRICT	cd_cid_w,
	ds_cid_w
;

cd_setor_atend_pac_w	:= cd_setor_atendimento_p;

select	CASE WHEN coalesce(max(ie_assinou_termo_biobanco), 'N')='S' THEN wheb_mensagem_pck.get_texto(793549)  ELSE ' ' END ,
	coalesce(max(ie_assinou_termo_biobanco),'N')
into STRICT	ie_paciente_biobanco_w,
	ie_assinou_termo_biobanco_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_p;

ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@paciente',nm_paciente_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@pac_abreviado',nm_paciente_abrev_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@quarto',ds_unidade_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@setor',ds_setor_atendimento_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@atendimento',nr_atendimento_p),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ramal',nr_ramal_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@telefone',nr_telefone_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@convenio',cd_convenio_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@cd_cid',cd_cid_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_cid',ds_cid_w),1,4000);
ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@pac_biobanco',ie_paciente_biobanco_w),1,4000);


select	nextval('ev_evento_paciente_seq')
into STRICT	nr_sequencia_w
;

insert into ev_evento_paciente(
	nr_sequencia,
	nr_seq_evento,
	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	cd_pessoa_fisica,
	nr_atendimento,
	ds_titulo,
	ds_mensagem,
	ie_status,
	ds_maquina,
	dt_evento,
	dt_liberacao)
values (	nr_sequencia_w,
	nr_seq_evento_p,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	cd_pessoa_fisica_p,
	nr_atendimento_p,
	ds_titulo_w,
	ds_mensagem_w,
	'G',
	ds_maquina_w,
	clock_timestamp(),
	clock_timestamp());

open C01;
loop
fetch C01 into
	ie_forma_ev_w,
	ie_pessoa_destino_w,
	cd_pf_destino_w,
	ie_usuario_aceite_w,
	cd_setor_atendimento_w,
	cd_perfil_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	cd_pessoa_destino_w	:= null;
	qt_corresp_w	:= 1;
	if (ie_pessoa_destino_w = '1') then
		begin
		select	max(cd_medico_atendimento)
		into STRICT	cd_pessoa_destino_w
		from	atendimento_paciente
		where	nr_atendimento	= nr_atendimento_p;
		end;
	elsif (ie_pessoa_destino_w = '2') then
		begin
		select	max(cd_medico_resp)
		into STRICT	cd_pessoa_destino_w
		from	atendimento_paciente
		where	nr_atendimento	= nr_atendimento_p;
		end;
	elsif (ie_pessoa_destino_w = '3') then
		begin
		select	max(cd_medico_resp)
		into STRICT	cd_pessoa_destino_w
		from	laudo_paciente
		where	nr_sequencia	= nr_seq_laudo_p;
		end;
	elsif (ie_pessoa_destino_w = '4') then
		begin
		select	max(cd_medico_referido)
		into STRICT	cd_pessoa_destino_w
		from	atendimento_paciente
		where	nr_atendimento	= nr_atendimento_p;
		end;
	elsif (ie_pessoa_destino_w = '5') or (ie_pessoa_destino_w = '12') then
		cd_pessoa_destino_w	:= cd_pf_destino_w;
	elsif (ie_pessoa_destino_w = '23') then
		begin
		select	max(CD_PESSOA_RESPONSAVEL)
		into STRICT	cd_pessoa_destino_w
		from	atendimento_paciente
		where	nr_atendimento	= nr_atendimento_p;
		end;
	end if;

	if (ie_usuario_aceite_w = 'S') and (cd_pessoa_destino_w IS NOT NULL AND cd_pessoa_destino_w::text <> '') and (ie_forma_ev_w = '1') then
		begin
		select	count(*)
		into STRICT	qt_corresp_w
		from	pessoa_fisica_corresp
		where	cd_pessoa_fisica	= cd_pessoa_destino_w
		and	ie_tipo_corresp		= 'MCel'
		and	ie_tipo_doc		= 'AE';
		end;
	elsif (ie_usuario_aceite_w = 'S') and (cd_pessoa_destino_w IS NOT NULL AND cd_pessoa_destino_w::text <> '') and (ie_forma_ev_w = '3') then
		begin
		select	count(*)
		into STRICT	qt_corresp_w
		from	pessoa_fisica_corresp
		where	cd_pessoa_fisica	= cd_pessoa_destino_w
		and	ie_tipo_corresp		= 'CI'
		and	ie_tipo_doc		= 'AE';
		end;
	elsif (ie_usuario_aceite_w = 'S') and (cd_pessoa_destino_w IS NOT NULL AND cd_pessoa_destino_w::text <> '') and (ie_forma_ev_w = '4') then
		begin
		select	count(*)
		into STRICT	qt_corresp_w
		from	pessoa_fisica_corresp
		where	cd_pessoa_fisica	= cd_pessoa_destino_w
		and	ie_tipo_corresp		= 'Email'
		and	ie_tipo_doc		= 'AE';
		end;
	end if;

	if (cd_pessoa_destino_w IS NOT NULL AND cd_pessoa_destino_w::text <> '') and (qt_corresp_w > 0) then
		begin
		insert into ev_evento_pac_destino(
			nr_sequencia,
			nr_seq_ev_pac,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_pessoa_fisica,
			ie_forma_ev,
			ie_status,
			dt_ciencia,
			ie_pessoa_destino,
			dt_evento)
		values (	nextval('ev_evento_pac_destino_seq'),
			nr_sequencia_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_pessoa_destino_w,
			ie_forma_ev_w,
			'G',
			null,
			ie_pessoa_destino_w,
			clock_timestamp());
		end;
	end if;

	open C02;
	loop
	fetch C02 into
		cd_pessoa_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		if (cd_pessoa_regra_w IS NOT NULL AND cd_pessoa_regra_w::text <> '') then
		
			insert into ev_evento_pac_destino(
				nr_sequencia,
				nr_seq_ev_pac,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_pessoa_fisica,
				ie_forma_ev,
				ie_status,
				dt_ciencia,
				ie_pessoa_destino,
				dt_evento)
			values (	nextval('ev_evento_pac_destino_seq'),
				nr_sequencia_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_pessoa_regra_w,
				ie_forma_ev_w,
				'G',
				null,
				ie_pessoa_destino_w,
				clock_timestamp());
		end if;
		end;
	end loop;
	close C02;

	open C03;
	loop
	fetch C03 into
		cd_pessoa_regra_w,
		nm_usuario_destino_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		if (cd_pessoa_regra_w IS NOT NULL AND cd_pessoa_regra_w::text <> '') then
			insert into ev_evento_pac_destino(
				nr_sequencia,
				nr_seq_ev_pac,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_pessoa_fisica,
				ie_forma_ev,
				ie_status,
				dt_ciencia,
				nm_usuario_dest,
				ie_pessoa_destino,
				dt_evento)
			values (	nextval('ev_evento_pac_destino_seq'),
				nr_sequencia_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_pessoa_regra_w,
				ie_forma_ev_w,
				'G',
				null,
				nm_usuario_destino_w,
				ie_pessoa_destino_w,
				clock_timestamp());
		end if;
		end;
	end loop;
	close C03;

	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_evento_pac_trigger_setor (nr_seq_evento_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, nr_seq_laudo_p bigint, nm_usuario_p text, cd_unidade_basica_p text, cd_unidade_compl_p text, cd_setor_Atendimento_p bigint) FROM PUBLIC;

