-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_gerar_assinatura ( nr_dialise_dialisador_p bigint, nr_lista_concentrado_p text, nr_seq_dialise_p bigint, nr_seq_dial_teste_p bigint, nr_seq_controle_p bigint, nr_seq_lista_eventos_p text, nr_seq_dial_retirada_p bigint, nr_lista_concentrado_ret_p text, nr_seq_alteracao_dialise_p bigint, ie_opcao_p text, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE


ie_assinatura_digital_w		hd_parametro.ie_assinatura_digital%type;
nr_sequencia_w			hd_assinatura_digital.nr_sequencia%type;
lista_eventos_w			dbms_sql.varchar2_table;
lista_concentrado_w		dbms_sql.varchar2_table;
lista_concentrado_ret_w		dbms_sql.varchar2_table;
nr_seq_evento_w			hd_dialise_evento.nr_sequencia%type;
nr_seq_concentrado_w		hd_dialise_concentrado.nr_sequencia%type;
nr_seq_concentrado_ret_w	hd_dialise_concentrado.nr_sequencia%type;
BEGIN
	select	max(ie_assinatura_digital)
	into STRICT	ie_assinatura_digital_w
	from	hd_parametro
	where 	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
	
	if (ie_assinatura_digital_w IS NOT NULL AND ie_assinatura_digital_w::text <> '') and (ie_assinatura_digital_w = 'S') then
	
		select 	nextval('hd_assinatura_digital_seq')
		into STRICT	nr_sequencia_w
		;
		
		insert into hd_assinatura_digital(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ie_opcao,
			dt_liberacao,
			nm_usuario_lib,
			nr_dialise_dialisador,
			nr_seq_dialise,
			nr_seq_dial_teste,
			nr_seq_controle,
			nr_seq_dial_retirada,
			nr_seq_alt_dial)
		values (
			nr_sequencia_w,
			clock_timestamp(),			
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,			
			ie_opcao_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_dialise_dialisador_p,
			nr_seq_dialise_p,
			nr_seq_dial_teste_p,
			nr_seq_controle_p,
			nr_seq_dial_retirada_p,
			nr_seq_alteracao_dialise_p);
			
		if (nr_seq_lista_eventos_p IS NOT NULL AND nr_seq_lista_eventos_p::text <> '') then

			lista_eventos_w := obter_lista_string(nr_seq_lista_eventos_p, ',');
			for	i in lista_eventos_w.first..lista_eventos_w.last loop
				nr_seq_evento_w := (lista_eventos_w(i))::numeric;
				
				insert into hd_assinatura_item(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_assinatura,
					nr_seq_evento)
				values (
					nextval('hd_assinatura_item_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_sequencia_w,
					nr_seq_evento_w);

			end loop;
			
		end if;
		
		if (nr_lista_concentrado_p IS NOT NULL AND nr_lista_concentrado_p::text <> '') then
			
			lista_concentrado_w := obter_lista_string(nr_lista_concentrado_p, ',');
			for	i in lista_concentrado_w.first..lista_concentrado_w.last loop
				nr_seq_concentrado_w := (lista_concentrado_w(i))::numeric;
				
				insert into hd_assinatura_item(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_assinatura,
					nr_seq_concentrado)
				values (
					nextval('hd_assinatura_item_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_sequencia_w,
					nr_seq_concentrado_w);

			end loop;
			
		end if;
		
		if (nr_lista_concentrado_ret_p IS NOT NULL AND nr_lista_concentrado_ret_p::text <> '') then

			lista_concentrado_ret_w := obter_lista_string(nr_lista_concentrado_ret_p, ',');
			for	i in lista_concentrado_ret_w.first..lista_concentrado_ret_w.last loop
				nr_seq_concentrado_ret_w := (lista_concentrado_ret_w(i))::numeric;
				
				insert into hd_assinatura_item(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_assinatura,
					nr_seq_concentrado_ret)
				values (
					nextval('hd_assinatura_item_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_sequencia_w,
					nr_seq_concentrado_ret_w);

			end loop;
			
		end if;
			
	end if;		

if (ie_commit_p = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_gerar_assinatura ( nr_dialise_dialisador_p bigint, nr_lista_concentrado_p text, nr_seq_dialise_p bigint, nr_seq_dial_teste_p bigint, nr_seq_controle_p bigint, nr_seq_lista_eventos_p text, nr_seq_dial_retirada_p bigint, nr_lista_concentrado_ret_p text, nr_seq_alteracao_dialise_p bigint, ie_opcao_p text, nm_usuario_p text, ie_commit_p text) FROM PUBLIC;

