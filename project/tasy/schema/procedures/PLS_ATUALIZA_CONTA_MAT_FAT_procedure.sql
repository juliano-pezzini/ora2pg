-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualiza_conta_mat_fat ( nr_seq_conta_mat_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ie_excluir_fat_p text) AS $body$
DECLARE


nr_seq_conta_w			bigint;
vl_liberado_w			double precision;
nr_seq_segurado_w		bigint;
cd_estabelecimento_w		bigint;
ie_preco_plano_w			varchar(10);
ie_calcula_preco_benef_w		varchar(10);
qt_pos_estabelecido_w		bigint;
vl_tot_beneficiario_w		double precision;
ie_calculo_pos_estab_w		varchar(3);
qt_liberada_w			pls_conta_mat.qt_material%type;

nr_seq_plano_w			bigint;
nr_seq_contrato_w			bigint;
nr_seq_intercambio_w		bigint;
dt_contratacao_w			timestamp;
qt_idade_w			bigint;
ie_titularidade_w			varchar(2);
ie_glosa_w			varchar(1);
ie_geracao_pos_estabelecido_w	varchar(1);
dt_atendimento_referencia_w 		timestamp;


BEGIN

/* Obter dados do procedimento */

select	nr_seq_conta,
	coalesce(vl_liberado,0),
	coalesce(ie_glosa,'N'),
	coalesce(qt_material,0)
into STRICT	nr_seq_conta_w,
	vl_liberado_w,
	ie_glosa_w,
	qt_liberada_w
from	pls_conta_mat
where	nr_sequencia	= nr_seq_conta_mat_p;

select	ie_geracao_pos_estabelecido
into STRICT	ie_geracao_pos_estabelecido_w
from	pls_parametros
where	cd_estabelecimento = cd_estabelecimento_p;

/* Obter dados da conta */

begin
select	nr_seq_segurado,
	cd_estabelecimento,
	dt_atendimento_referencia
into STRICT	nr_seq_segurado_w,
	cd_estabelecimento_w,
	dt_atendimento_referencia_w
from	pls_conta
where	nr_sequencia	= nr_seq_conta_w;
exception
when others then
	nr_seq_segurado_w	:= null;
end;

begin
--select	nr_seq_plano,
select	pls_obter_produto_benef(nr_sequencia,dt_atendimento_referencia_w),
	nr_seq_contrato,
	nr_seq_intercambio,
	dt_contratacao,
	obter_idade_pf(cd_pessoa_fisica,clock_timestamp(),'A'),
	CASE WHEN coalesce(nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END
into STRICT	nr_seq_plano_w,
	nr_seq_contrato_w,
	nr_seq_intercambio_w,
	dt_contratacao_w,
	qt_idade_w,
	ie_titularidade_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_w;
exception
when others then
	nr_seq_contrato_w	:= 0;
	nr_seq_intercambio_w	:= 0;
	nr_seq_plano_w		:= 0;			
end;

if (ie_glosa_w <> 'S') then

	/* Verificar se existe valor de custo operacional para o item */

	select	count(1)
	into STRICT	qt_pos_estabelecido_w
	from	pls_conta_pos_estabelecido
	where	nr_seq_conta_mat	= nr_seq_conta_mat_p
	and	((ie_situacao		= 'A')or (coalesce(ie_situacao::text, '') = ''));

	if (qt_pos_estabelecido_w	> 0) then
		ie_calcula_preco_benef_w	:= pls_obter_dados_conta(nr_seq_conta_w, 'CPO');
		/* Se o calculo do custo operacional segue a tabela de preço da operadora, então não precisa atualizar nada */

		select	coalesce(max(ie_calculo_pos_estab),'O')
		into STRICT	ie_calculo_pos_estab_w
		from	pls_parametros
		where	cd_estabelecimento	= cd_estabelecimento_p;
		
		if	((ie_calcula_preco_benef_w <> 'S') and (ie_calculo_pos_estab_w in ('C','P','O'))) then
			update	pls_conta_pos_estabelecido
			set	vl_beneficiario		= vl_liberado_w,
				qt_item			= qt_liberada_w,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_seq_conta_mat	= nr_seq_conta_mat_p
			and	((ie_situacao		= 'A')or (coalesce(ie_situacao::text, '') = ''));

			update	pls_conta_mat
			set	vl_beneficiario	= vl_liberado_w
			where	nr_sequencia	= nr_seq_conta_mat_p;

			select 	sum(vl_beneficiario)
			into STRICT	vl_tot_beneficiario_w
			from	pls_conta_pos_estabelecido
			where	nr_seq_conta	= nr_seq_conta_w
			and	((ie_situacao		= 'A')or (coalesce(ie_situacao::text, '') = ''));	
		
			if (vl_tot_beneficiario_w	> 0) then
				update	pls_conta
				set	vl_total_beneficiario	= vl_tot_beneficiario_w
				where	nr_sequencia		= nr_seq_conta_w;
			end if;
		end if;
		if (ie_geracao_pos_estabelecido_w = 'C' ) then
			CALL pls_gerar_valor_pos_estab(nr_seq_conta_w,nm_usuario_p,'C',null,nr_seq_conta_mat_p,'A');
		end if;
	end if;
else	
	if (coalesce(ie_excluir_fat_p,'S') = 'S') then
		delete	FROM pls_conta_mat_aprop
		where	nr_seq_conta_mat = nr_seq_conta_mat_p;
		
		delete	FROM pls_conta_copartic_aprop
		where	NR_SEQ_CONTA_COPARTICIPACAO in (SELECT	nr_sequencia
							from	pls_conta_coparticipacao
							where	nr_seq_conta_mat = nr_seq_conta_mat_p);	
		
		
		CALL pls_deletar_coparticipacao(nr_seq_conta_w,null,'S', 'N', null, null, nm_usuario_p,cd_estabelecimento_p);
		
		CALL pls_delete_pls_conta_pos_estab(	null, nr_seq_conta_mat_p, null,
						null);

	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualiza_conta_mat_fat ( nr_seq_conta_mat_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ie_excluir_fat_p text) FROM PUBLIC;

