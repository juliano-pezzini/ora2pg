-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_acceptable_times ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) is --queue
 C01 CURSOR FOR SELECT a.cd_pessoa_fisica id_patient, nvl(get_formatted_person_name(a.cd_pessoa_fisica, 'list'), obter_nome_pf(a.cd_pessoa_fisica)) nm_patient, pfcs_obter_lista_dados_classif(a.cd_pessoa_fisica) ds_classification, obter_sexo_pf(a.cd_pessoa_fisica, 'D') ds_gender, pf.dt_nascimento dt_birthdate, obter_dados_pf(pf.cd_pessoa_fisica, 'I') qt_idade_paciente, a.dt_geracao_senha dt_entrance, null nr_encounter, round((sysdate - a.dt_geracao_senha) * 1440) as qt_time_stage_pa, '1' ie_stage_pa from paciente_senha_fila a, pessoa_fisica pf where a.dt_primeira_chamada is null and a.dt_utilizacao is null and a.dt_inutilizacao is null and a.cd_estabelecimento = to_number(cd_estabelecimento_p) and a.cd_pessoa_fisica = pf.cd_pessoa_fisica (+) RETURNS bigint AS $body$
DECLARE


		qt_rule_time_w			pfcs_time_stage_pa.qt_time%type;

		
BEGIN

			select coalesce(qt_time, 0)
			into STRICT qt_rule_time_w
			from pfcs_time_stage_pa
			where cd_rule = cd_stage_p;

			return	qt_rule_time_w;

		end;

begin

	nr_seq_operational_level_w := pfcs_get_structure_level(
		cd_establishment_p => cd_estabelecimento_p,
		ie_level_p => 'O',
		ie_info_p => 'C');

	for c01_w in c01 loop
		begin

			if (pfcs_stages_times(1) < c01_w.qt_time_stage_pa) then
				ie_excedeu_w := 'S';
			end if;

			if (ie_excedeu_w = 'S') then
				qt_total_w := qt_total_w + 1;

				select	nextval('pfcs_panel_detail_seq')
				into STRICT	pfcs_panel_detail_seq_w
				;

				insert into pfcs_panel_detail(
					nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					ie_situation,
					nr_seq_indicator,
					nr_seq_operational_level)
				values (
					pfcs_panel_detail_seq_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					'T',
					nr_seq_indicator_p,
					nr_seq_operational_level_w);

				insert into pfcs_detail_patient(
					nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_detail,
					nr_encounter,
					dt_entrance,
					id_patient,
					nm_patient,
					ds_gender,
					ds_classification,
					dt_birthdate,
                    ds_age_range,
					qt_time_stage_pa,
					ie_stage_pa,
					ie_over_threshold)
				values (
					nextval('pfcs_detail_patient_seq'),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					pfcs_panel_detail_seq_w,
					c01_w.nr_encounter,
					c01_w.dt_entrance,
					c01_w.id_patient,
					c01_w.nm_patient,
					c01_w.ds_gender,
					c01_w.ds_classification,
					c01_w.dt_birthdate,
                    c01_w.qt_idade_paciente,
					c01_w.qt_time_stage_pa,
					c01_w.ie_stage_pa,
					ie_excedeu_w);

				ie_excedeu_w := 'N';

			end if;
		end;
	end loop;

	for c02_w in c02 loop
		begin

			if (pfcs_stages_times(2) < c02_w.qt_time_stage_pa) then
				ie_excedeu_w := 'S';
			end if;

			if (ie_excedeu_w = 'S') then
				qt_total_w := qt_total_w + 1;

				select	nextval('pfcs_panel_detail_seq')
				into STRICT	pfcs_panel_detail_seq_w
				;

				insert into pfcs_panel_detail(
					nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					ie_situation,
					nr_seq_indicator,
					nr_seq_operational_level)
				values (
					pfcs_panel_detail_seq_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					'T',
					nr_seq_indicator_p,
					nr_seq_operational_level_w);

				insert into pfcs_detail_patient(
					nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_detail,
					nr_encounter,
					dt_entrance,
					id_patient,
					nm_patient,
					ds_gender,
					ds_classification,
					dt_birthdate,
                    ds_age_range,
					qt_time_stage_pa,
					ie_stage_pa,
					ie_over_threshold)
				values (
					nextval('pfcs_detail_patient_seq'),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					pfcs_panel_detail_seq_w,
					c02_w.nr_encounter,
					c02_w.dt_entrance,
					c02_w.id_patient,
					c02_w.nm_patient,
					c02_w.ds_gender,
					c02_w.ds_classification,
					c02_w.dt_birthdate,
                    c02_w.qt_idade_paciente,
					c02_w.qt_time_stage_pa,
					c02_w.ie_stage_pa,
					ie_excedeu_w);

				ie_excedeu_w := 'N';

			end if;
		end;
	end loop;

	for c03_w in c03 loop
		begin

			if (pfcs_stages_times(3) < c03_w.qt_time_stage_pa) then
				ie_excedeu_w := 'S';
			end if;

			if (ie_excedeu_w = 'S') then
				qt_total_w := qt_total_w + 1;

				select	nextval('pfcs_panel_detail_seq')
				into STRICT	pfcs_panel_detail_seq_w
				;

				insert into pfcs_panel_detail(
					nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					ie_situation,
					nr_seq_indicator,
					nr_seq_operational_level)
				values (
					pfcs_panel_detail_seq_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					'T',
					nr_seq_indicator_p,
					nr_seq_operational_level_w);

				insert into pfcs_detail_patient(
					nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_detail,
					nr_encounter,
					dt_entrance,
					id_patient,
					nm_patient,
					ds_gender,
					ds_classification,
					dt_birthdate,
                    ds_age_range,
					qt_time_stage_pa,
					ie_stage_pa,
					ie_over_threshold)
				values (
					nextval('pfcs_detail_patient_seq'),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					pfcs_panel_detail_seq_w,
					c03_w.nr_encounter,
					c03_w.dt_entrance,
					c03_w.id_patient,
					c03_w.nm_patient,
					c03_w.ds_gender,
					c03_w.ds_classification,
					c03_w.dt_birthdate,
                    c03_w.qt_idade_paciente,
					c03_w.qt_time_stage_pa,
					c03_w.ie_stage_pa,
					ie_excedeu_w);

				ie_excedeu_w := 'N';

			end if;
		end;
	end loop;

	for c04_w in c04 loop
		begin

			if (pfcs_stages_times(4) < c04_w.qt_time_stage_pa) then
				ie_excedeu_w := 'S';
			end if;

			if (ie_excedeu_w = 'S') then
				qt_total_w := qt_total_w + 1;

				select	nextval('pfcs_panel_detail_seq')
				into STRICT	pfcs_panel_detail_seq_w
				;

				insert into pfcs_panel_detail(
					nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					ie_situation,
					nr_seq_indicator,
					nr_seq_operational_level)
				values (
					pfcs_panel_detail_seq_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					'T',
					nr_seq_indicator_p,
					nr_seq_operational_level_w);

				insert into pfcs_detail_patient(
					nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_detail,
					nr_encounter,
					dt_entrance,
					id_patient,
					nm_patient,
					ds_gender,
					ds_classification,
					dt_birthdate,
                    ds_age_range,
					qt_time_stage_pa,
					ie_stage_pa,
					ie_over_threshold)
				values (
					nextval('pfcs_detail_patient_seq'),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					pfcs_panel_detail_seq_w,
					c04_w.nr_encounter,
					c04_w.dt_entrance,
					c04_w.id_patient,
					c04_w.nm_patient,
					c04_w.ds_gender,
					c04_w.ds_classification,
					c04_w.dt_birthdate,
                    c04_w.qt_idade_paciente,
					c04_w.qt_time_stage_pa,
					c04_w.ie_stage_pa,
					ie_excedeu_w);

				ie_excedeu_w := 'N';

			end if;
		end;
	end loop;

	for c05_w in c05 loop
		begin

			if (pfcs_stages_times(5) < c05_w.qt_time_stage_pa) then
				ie_excedeu_w := 'S';
			end if;

			if (ie_excedeu_w = 'S') then
				qt_total_w := qt_total_w + 1;

				select	nextval('pfcs_panel_detail_seq')
				into STRICT	pfcs_panel_detail_seq_w
				;

				insert into pfcs_panel_detail(
					nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					ie_situation,
					nr_seq_indicator,
					nr_seq_operational_level)
				values (
					pfcs_panel_detail_seq_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					'T',
					nr_seq_indicator_p,
					nr_seq_operational_level_w);

				insert into pfcs_detail_patient(
					nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_detail,
					nr_encounter,
					dt_entrance,
					id_patient,
					nm_patient,
					ds_gender,
					ds_classification,
					dt_birthdate,
                    ds_age_range,
					qt_time_stage_pa,
					ie_stage_pa,
					ie_over_threshold)
				values (
					nextval('pfcs_detail_patient_seq'),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					pfcs_panel_detail_seq_w,
					c05_w.nr_encounter,
					c05_w.dt_entrance,
					c05_w.id_patient,
					c05_w.nm_patient,
					c05_w.ds_gender,
					c05_w.ds_classification,
					c05_w.dt_birthdate,
                    c05_w.qt_idade_paciente,
					c05_w.qt_time_stage_pa,
					c05_w.ie_stage_pa,
					ie_excedeu_w);

				ie_excedeu_w := 'N';

			end if;
		end;
	end loop;

	for c06_w in c06 loop
		begin

			if (pfcs_stages_times(6) < c06_w.qt_time_stage_pa) then
				ie_excedeu_w := 'S';
			end if;

			if (ie_excedeu_w = 'S') then
				qt_total_w := qt_total_w + 1;

				select	nextval('pfcs_panel_detail_seq')
				into STRICT	pfcs_panel_detail_seq_w
				;

				insert into pfcs_panel_detail(
					nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					ie_situation,
					nr_seq_indicator,
					nr_seq_operational_level)
				values (
					pfcs_panel_detail_seq_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					'T',
					nr_seq_indicator_p,
					nr_seq_operational_level_w);

				insert into pfcs_detail_patient(
					nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_detail,
					nr_encounter,
					dt_entrance,
					id_patient,
					nm_patient,
					ds_gender,
					ds_classification,
					dt_birthdate,
                    ds_age_range,
					qt_time_stage_pa,
					ie_stage_pa,
					ie_over_threshold)
				values (
					nextval('pfcs_detail_patient_seq'),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					pfcs_panel_detail_seq_w,
					c06_w.nr_encounter,
					c06_w.dt_entrance,
					c06_w.id_patient,
					c06_w.nm_patient,
					c06_w.ds_gender,
					c06_w.ds_classification,
					c06_w.dt_birthdate,
                    c06_w.qt_idade_paciente,
					c06_w.qt_time_stage_pa,
					c06_w.ie_stage_pa,
					ie_excedeu_w);

				ie_excedeu_w := 'N';

			end if;
		end;
	end loop;

	for c07_w in c07 loop
		begin

			if (pfcs_stages_times(7) < c07_w.qt_time_stage_pa) then
				ie_excedeu_w := 'S';
			end if;

			if (ie_excedeu_w = 'S') then
				qt_total_w := qt_total_w + 1;

				select	nextval('pfcs_panel_detail_seq')
				into STRICT	pfcs_panel_detail_seq_w
				;

				insert into pfcs_panel_detail(
					nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					ie_situation,
					nr_seq_indicator,
					nr_seq_operational_level)
				values (
					pfcs_panel_detail_seq_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					'T',
					nr_seq_indicator_p,
					nr_seq_operational_level_w);

				insert into pfcs_detail_patient(
					nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_detail,
					nr_encounter,
					dt_entrance,
					id_patient,
					nm_patient,
					ds_gender,
					ds_classification,
					dt_birthdate,
                    ds_age_range,
					qt_time_stage_pa,
					ie_stage_pa,
					ie_over_threshold)
				values (
					nextval('pfcs_detail_patient_seq'),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					pfcs_panel_detail_seq_w,
					c07_w.nr_encounter,
					c07_w.dt_entrance,
					c07_w.id_patient,
					c07_w.nm_patient,
					c07_w.ds_gender,
					c07_w.ds_classification,
					c07_w.dt_birthdate,
                    c07_w.qt_idade_paciente,
					c07_w.qt_time_stage_pa,
					c07_w.ie_stage_pa,
					ie_excedeu_w);

				ie_excedeu_w := 'N';

			end if;
		end;
	end loop;

	commit;

	 := pfcs_pck.pfcs_generate_results(
		vl_indicator_p => qt_total_w, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => nr_seq_panel_w);

	CALL pfcs_pck.pfcs_update_detail(
			nr_seq_indicator_p => nr_seq_indicator_p,
			nr_seq_panel_p => nr_seq_panel_w,
			nr_seq_operational_level_p => nr_seq_operational_level_w,
			nm_usuario_p => nm_usuario_p);

	CALL pfcs_pck.pfcs_activate_records(
			nr_seq_indicator_p => nr_seq_indicator_p,
			nr_seq_operational_level_p => nr_seq_operational_level_w,
			nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_acceptable_times ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) is  C01 CURSOR FOR SELECT a.cd_pessoa_fisica id_patient, nvl(get_formatted_person_name(a.cd_pessoa_fisica, 'list'), obter_nome_pf(a.cd_pessoa_fisica)) nm_patient, pfcs_obter_lista_dados_classif(a.cd_pessoa_fisica) ds_classification, obter_sexo_pf(a.cd_pessoa_fisica, 'D') ds_gender, pf.dt_nascimento dt_birthdate, obter_dados_pf(pf.cd_pessoa_fisica, 'I') qt_idade_paciente, a.dt_geracao_senha dt_entrance, null nr_encounter, round((sysdate - a.dt_geracao_senha) * 1440) as qt_time_stage_pa, '1' ie_stage_pa from paciente_senha_fila a, pessoa_fisica pf where a.dt_primeira_chamada is null and a.dt_utilizacao is null and a.dt_inutilizacao is null and a.cd_estabelecimento = to_number(cd_estabelecimento_p) and a.cd_pessoa_fisica = pf.cd_pessoa_fisica (+) FROM PUBLIC;

