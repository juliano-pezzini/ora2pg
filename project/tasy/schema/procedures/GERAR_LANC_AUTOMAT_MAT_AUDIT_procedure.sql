-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lanc_automat_mat_audit ( nr_atendimento_p bigint, cd_local_estoque_p bigint, nr_seq_evento_p bigint, nm_usuario_p text, nr_sequencia_p bigint, nr_seq_auditoria_p bigint, ds_adicional_1_p text, ds_adicional_2_p text) AS $body$
DECLARE


cd_estabelecimento_w		smallint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
ie_tipo_atendimento_w		smallint;
cd_cgc_w			varchar(14);
nr_doc_convenio_w		varchar(20);
cd_material_w			integer	:= 0;
nr_sequencia_w			bigint	:= 0;
nr_seq_regra_w			bigint	:= 0;
nr_seq_acao_regra_w		bigint	:= 0;
cd_setor_regra_w			integer	:= 0;
cd_setor_atendimento_w		integer	:= 0;
dt_entrada_unidade_w		timestamp;
dt_entrada_w			timestamp;
nr_atend_original_w			bigint;
nr_seq_matpaci_w			bigint;
cd_mat_matpaci_w			integer;
cd_grupo_mat_w			smallint;
cd_subgrupo_mat_w		smallint;
cd_classe_mat_w			integer;
dt_alta_w				timestamp;
ie_tipo_convenio_w			smallint;
ie_clinica_w			bigint;
cd_tipo_acomodacao_w		bigint;
nr_anos_w			bigint;
nr_prescricao_w			bigint;
qt_reg_w				bigint;
cd_medico_resp_w			varchar(10);
cd_medico_executor_w		varchar(10);
cd_medico_propaci_w		varchar(10);
cd_medico_regra_w		varchar(10)	:= null;
cd_medico_req_w			varchar(10);
ie_funcao_medico_w		smallint;
ie_medico_atendimento_w		varchar(1);
qt_material_w			double precision;
nr_seq_atepacu_w			bigint;
cd_senha_w			varchar(20);
cd_procedimento_w		bigint	:= 0;
ie_origem_proced_w		bigint	:= 0;
tx_procedimento_w			double precision;
qt_proc_alta_w			integer;
qt_proc_lib_evolucao_w		integer;
nr_seq_exame_w			bigint;
cd_atividade_prof_bpa_w		smallint;
ie_medico_executor_w		varchar(1);
qt_mat_alta_w			integer;
cd_unid_medida_w			varchar(30);
ie_local_estoque_w			varchar(1);
qt_lancamento_w			double precision	:= 0;
cd_local_estoque_w		smallint;
ie_regra_guia_w			varchar(5);
cd_proc_propaci_w			bigint;
dt_execucao_w			timestamp;
qt_porte_anestesico_w		smallint;
nr_doc_propaci_w			varchar(20);
tx_proc_propaci_w			double precision	:= 100;
ie_via_aplicacao_w			varchar(5);
nr_seq_classificacao_w		bigint;
ie_consiste_item_w			varchar(1);
ie_consiste_proc_int_w		varchar(1);
nr_seq_lanc_proc_interno_w		bigint	:= 0;
ie_consiste_item_ww		varchar(1);
nr_interno_conta_w			bigint;
nr_interno_conta_w1		bigint;
nr_interno_conta_audit_w		bigint;
ie_tipo_atend_bpa_w		smallint;
ie_grupo_atend_bpa_w		smallint;
cd_profissional_w			varchar(10);
cd_funcao_w			integer;
cd_setor_ativo_w			integer;
ie_proc_princ_atend_w		varchar(10);
ie_material_pai_w			varchar(1)	:= 'S';
ds_erro_w			varchar(4000);
cd_kit_material_w		 	bigint;
ie_dispara_kit_mat_w		varchar(10);
dt_atual_trunc_w			timestamp	:= trunc(clock_timestamp());
nr_seq_auditoria_w			bigint;
nr_sequencia_auditoria_w		bigint;
qt_item_w			double precision := 0;
cd_cnpj_prestador_w		varchar(14);/*Geliard 07/11/2009 OS165332*/
cd_cid_doenca_w			varchar(10);/*Geliard OS178910*/
nr_seq_proc_interno_w		bigint;
nr_seq_familia_w		material.nr_seq_familia%type;


c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_setor_atendimento
	from	regra_lanc_automatico a
	where	a.cd_estabelecimento					= cd_estabelecimento_w
	and	coalesce(a.cd_convenio, cd_convenio_w)			= cd_convenio_w
	and	coalesce(a.ie_tipo_convenio, ie_tipo_convenio_w)		= ie_tipo_convenio_w
	and (coalesce(a.ie_tipo_atendimento,ie_tipo_atendimento_w)	= ie_tipo_atendimento_w	or coalesce(ie_tipo_atendimento_w::text, '') = '')
	and (a.nr_seq_evento					= nr_seq_evento_p)
	and (coalesce(a.cd_material,cd_mat_matpaci_w)			= cd_mat_matpaci_w 	or coalesce(cd_mat_matpaci_w::text, '') = '')
	and (coalesce(a.cd_grupo_material,cd_grupo_mat_w)		= cd_grupo_mat_w 	or coalesce(cd_grupo_mat_w::text, '') = '')
	and (coalesce(a.cd_subgrupo_material,cd_subgrupo_mat_w) 		= cd_subgrupo_mat_w 	or coalesce(cd_subgrupo_mat_w::text, '') = '')
	and (coalesce(a.cd_classe_material,cd_classe_mat_w)		= cd_classe_mat_w 	or coalesce(cd_classe_mat_w::text, '') = '')
	and	coalesce(a.nr_seq_familia,coalesce(nr_seq_familia_w,0))		= coalesce(nr_seq_familia_w,0)
	and	coalesce(a.cd_categoria, cd_categoria_w)			= cd_categoria_w
	and	((coalesce(ie_clinica::text, '') = '') or (ie_clinica = ie_clinica_w))
	and	((coalesce(cd_tipo_acomodacao::text, '') = '') or (coalesce(cd_tipo_acomodacao_w::text, '') = '') or (cd_tipo_acomodacao = cd_tipo_acomodacao_w))
	and	((coalesce(nr_seq_classificacao::text, '') = '') or (coalesce(nr_seq_classificacao_w::text, '') = '') or (nr_seq_classificacao = nr_seq_classificacao_w))
	and	((coalesce(ie_via_aplicacao::text, '') = '') or (coalesce(ie_via_aplicacao_w::text, '') = '') or (ie_via_aplicacao = ie_via_aplicacao_w))
	and	((nr_anos_w = 999) or (nr_anos_w between coalesce(qt_ano_min,0) and coalesce(qt_ano_max,999)))
	and	((coalesce(a.cd_funcao::text, '') = '') or (cd_funcao_w = 0) or (a.cd_funcao = cd_funcao_w))
	and	ie_situacao						= 'A'
	and	dt_atual_trunc_w between coalesce(dt_inicio_vigencia,dt_atual_trunc_w) and fim_dia(coalesce(dt_final_vigencia,dt_atual_trunc_w))
	order by
		coalesce(a.cd_setor_atendimento,0),
		coalesce(a.ie_tipo_atendimento,0),
		coalesce(a.cd_convenio,0),
		coalesce(a.ie_tipo_convenio,0),
		coalesce(a.cd_material,0),
		coalesce(a.nr_seq_familia,0),
		coalesce(a.cd_grupo_material,0),
		coalesce(a.cd_subgrupo_material,0),
		coalesce(a.cd_classe_material,0),
		coalesce(a.ie_clinica,0),
		coalesce(a.cd_funcao,0);
		

c02 CURSOR FOR
	SELECT	a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_exame,
		a.cd_material,
		substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo,
		CASE WHEN a.ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * qt_material_w END ,
		coalesce(ie_medico_atendimento,'N'),
		coalesce(ie_local_estoque,'N'),
		coalesce(a.ie_funcao_medico, ie_funcao_medico_w),
		coalesce(a.tx_procedimento,100),
		coalesce(a.ie_regra_guia,'RC'),
		coalesce(a.ie_consiste_item,'N'),
    	coalesce(a.ie_consiste_proc_int,'N'),
		coalesce(a.nr_seq_proc_interno, 0),
		a.nr_seq_lanc,
		coalesce(ie_proc_princ_atend, 'N'),
		a.cd_cnpj_prestador,
		a.cd_cid_doenca,
		null nr_seq_proc_interno
	from 	material		b,
		regra_lanc_aut_pac	a
	where	a.nr_seq_regra  	= nr_seq_regra_w
	and	nr_seq_regra_w 		<> 0
	and	b.ie_situacao 		= 'A'
	and 	coalesce(a.ie_adic_orcamento,'N') = 'N'
	and	(a.cd_material IS NOT NULL AND a.cd_material::text <> '')
	and	a.cd_material 		= b.cd_material
	and	((coalesce(ie_retorno,'N') = 'S') or (coalesce(nr_atend_original_w::text, '') = ''))
	and	((nr_anos_w = 999) or (nr_anos_w between coalesce(qt_ano_min,0) and coalesce(qt_ano_max,999)))
	
union all

	SELECT	cd_procedimento,
		ie_origem_proced,
		nr_seq_exame,
		cd_material,
		'XX',
		CASE WHEN ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * qt_material_w END ,
		coalesce(ie_medico_atendimento,'N'),
		coalesce(ie_local_estoque,'N'),
		coalesce(ie_funcao_medico, ie_funcao_medico_w),
		coalesce(tx_procedimento,100),
		coalesce(ie_regra_guia,'RC'),
		coalesce(ie_consiste_item,'N'),
    	coalesce(ie_consiste_proc_int,'N'),
		coalesce(nr_seq_proc_interno, 0),
		nr_seq_lanc,
		coalesce(ie_proc_princ_atend, 'N'),
		cd_cnpj_prestador,
		cd_cid_doenca,
		nr_seq_proc_interno
	from 	regra_lanc_aut_pac
	where	nr_seq_regra  	= nr_seq_regra_w
	and 	coalesce(ie_adic_orcamento,'N') = 'N'
	and	nr_seq_regra_w <> 0
	and	((coalesce(ie_retorno,'N') = 'S') or (coalesce(nr_atend_original_w::text, '') = ''))
	and	((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '' AND ie_origem_proced IS NOT NULL AND ie_origem_proced::text <> '') or (nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> ''))
	and	((nr_anos_w = 999) or (nr_anos_w between coalesce(qt_ano_min,0) and coalesce(qt_ano_max,999)));


BEGIN

nr_seq_matpaci_w	:= nr_sequencia_p;
nr_seq_regra_w		:= 0;
cd_tipo_acomodacao_w	:= null;

begin
select	a.ie_tipo_atendimento,
	a.nr_atend_original,
	a.cd_estabelecimento,
	b.cd_cgc,
	a.cd_setor_atendimento,
	a.cd_medico_resp,
	a.cd_convenio,
	c.ie_tipo_convenio,
	a.cd_categoria,
	a.dt_entrada_unidade,
	a.dt_entrada,
	CASE WHEN obter_valor_conv_estab(c.cd_convenio, b.cd_estabelecimento, 'IE_DOC_CONVENIO')='N' THEN  null WHEN obter_valor_conv_estab(c.cd_convenio, b.cd_estabelecimento, 'IE_DOC_CONVENIO')='S' THEN  coalesce(a.cd_senha, a.nr_doc_convenio)  ELSE a.nr_doc_convenio END ,

/* edgar 

06/10/2004 , os 11672 */
	a.dt_alta,
	a.nr_seq_atepacu,
	a.cd_senha,
	a.ie_clinica,
	a.cd_tipo_acomod_unid,
	coalesce(nr_anos,999),
	a.nr_seq_classificacao
into STRICT	ie_tipo_atendimento_w,
	nr_atend_original_w,
	cd_estabelecimento_w,
	cd_cgc_w,
	cd_setor_atendimento_w,
	cd_medico_resp_w,
	cd_convenio_w,
	ie_tipo_convenio_w,
	cd_categoria_w,
	dt_entrada_unidade_w,
	dt_entrada_w,
	nr_doc_convenio_w,
	dt_alta_w,
	nr_seq_atepacu_w,
	cd_senha_w,
	ie_clinica_w,
	cd_tipo_acomodacao_w,
	nr_anos_w,
	nr_seq_classificacao_w
from	estabelecimento 	b,
	convenio 		c,
	atendimento_paciente_v	a
where	a.cd_estabelecimento	= b.cd_estabelecimento
and	c.cd_convenio		= a.cd_convenio
and	a.nr_atendimento	= nr_atendimento_p;
exception
	when others then
		cd_estabelecimento_w := 9999;
end;

select	coalesce(max(cd_funcao_medico),0)
into STRICT	ie_funcao_medico_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;

if (coalesce(nr_seq_matpaci_w,0) > 0) then
	begin
	/* buscar dados do material executado */

	begin
	select	a.cd_material,
		b.cd_grupo_material,
		b.cd_subgrupo_material,
		b.cd_classe_material,
		a.cd_setor_atendimento,
		a.qt_material,
		a.nr_doc_convenio,
		a.nr_prescricao,
		a.ie_via_aplicacao,
		a.nr_interno_conta,
		a.dt_entrada_unidade,
		a.nr_seq_atepacu,
		b.nr_seq_familia
	into STRICT	cd_mat_matpaci_w,
		cd_grupo_mat_w,
		cd_subgrupo_mat_w,
		cd_classe_mat_w,
		cd_setor_atendimento_w,
		qt_material_w,
		nr_doc_convenio_w,
		nr_prescricao_w,
		ie_via_aplicacao_w,
		nr_interno_conta_w,
		dt_entrada_unidade_w,
		nr_seq_atepacu_w,
		nr_seq_familia_w
	from	material_atend_paciente	a,
		estrutura_material_v	b
	where	a.nr_sequencia	= nr_seq_matpaci_w
	and	a.cd_material	= b.cd_material;
	exception
		when others then
		cd_mat_matpaci_w	:= null;
	end;
	end;
end if;

nr_seq_regra_w	:= 0;

select	coalesce(max(obter_funcao_ativa),0)
into STRICT	cd_funcao_w
;

if (coalesce(cd_mat_matpaci_w,0)	<> 0) then
	open c01;
	loop
	fetch c01 into
		nr_sequencia_w,
		cd_setor_regra_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		if (cd_setor_regra_w IS NOT NULL AND cd_setor_regra_w::text <> '') then
			if (cd_setor_regra_w = cd_setor_atendimento_w) then
				nr_seq_regra_w	:= nr_sequencia_w;
			end if;
		else
			nr_seq_regra_w	:= nr_sequencia_w;
		end if;
		end;
	end loop;
	close c01;
end if;

RAISE NOTICE '%', nr_seq_regra_w;

open c02;
loop
fetch c02 into
	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_exame_w,
	cd_material_w,
	cd_unid_medida_w,
	qt_lancamento_w,
	ie_medico_atendimento_w,
	ie_local_estoque_w,
	ie_funcao_medico_w,
	tx_procedimento_w,
	ie_regra_guia_w,
	ie_consiste_item_w,
  	ie_consiste_proc_int_w,
	nr_seq_lanc_proc_interno_w,
	nr_seq_acao_regra_w,
	ie_proc_princ_atend_w,
	cd_cnpj_prestador_w,
	cd_cid_doenca_w,
	nr_seq_proc_interno_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	
	if (coalesce(nr_seq_proc_interno_w,0) > 0) then
		SELECT * FROM obter_proc_tab_interno(nr_seq_proc_interno_w, 0, nr_atendimento_p, nr_interno_conta_w, cd_procedimento_w, ie_origem_proced_w, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
	end if;
	
	if (coalesce(tx_procedimento_w::text, '') = '') or (tx_procedimento_w	= 0) then
		tx_procedimento_w	:= 100;
	end if;	

	/* inicializa medico quando ie_medico_atendimento = 'S' */


	/* primeiro = medico executor, segundo = medico do atendimento */

	cd_medico_executor_w		:= '';
	if (ie_medico_atendimento_w = 'S') then
		begin
		if (cd_medico_propaci_w IS NOT NULL AND cd_medico_propaci_w::text <> '') and (length(cd_medico_propaci_w) > 0) then
			cd_medico_executor_w    := cd_medico_propaci_w;
		else
			cd_medico_executor_w    := cd_medico_resp_w;
		end if;
		end;
	end if;

	/* verifica se procedimento de alta ja foi executado    bola 08072002 */

	begin
	qt_proc_alta_w		:= 0;
	qt_proc_lib_evolucao_w	:= 0;
	end;

	ie_consiste_item_ww	:= consiste_regra_lanc_aut_pac(nr_atendimento_p, nr_interno_conta_w, cd_procedimento_w, ie_origem_proced_w,
				ie_consiste_item_w, ie_consiste_proc_int_w, nr_seq_lanc_proc_interno_w, coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())), nr_seq_regra_w, nr_seq_acao_regra_w, nm_usuario_p,
				cd_estabelecimento_w, null, 0,cd_setor_atendimento_w);

	if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (qt_proc_alta_w	= 0) 		and (qt_proc_lib_evolucao_w = 0) and (ie_consiste_item_ww = 'S') then
		begin
		RAISE NOTICE '%', cd_procedimento_w;
		select nextval('procedimento_paciente_seq')
		into STRICT nr_sequencia_w;

		cd_atividade_prof_bpa_w	:= null;
		if (ie_origem_proced_w	= 3) then
			begin
			select 	max(cd_atividade_prof_bpa)
			into STRICT	cd_atividade_prof_bpa_w
			from	procedimento
			where	cd_procedimento	= cd_procedimento_w
			and	ie_origem_proced	= ie_origem_proced_w;

			if (ie_tipo_convenio_w = 3) and (cd_atividade_prof_bpa_w IS NOT NULL AND cd_atividade_prof_bpa_w::text <> '') then
				begin
				select	ie_tipo_atend_bpa
				into STRICT	ie_tipo_atend_bpa_w
				from	sus_atividade_prof_proc
				where	cd_procedimento			= cd_procedimento_w
				and	cd_atividade_profissional	= cd_atividade_prof_bpa_w;
				exception
					when others then
					ie_tipo_atend_bpa_w	:= null;
				end;

				begin
				select	ie_grupo_atend_bpa
				into STRICT	ie_grupo_atend_bpa_w
				from	sus_atividade_prof_proc
				where	cd_procedimento			= cd_procedimento_w
				and	cd_atividade_profissional	= cd_atividade_prof_bpa_w;
				exception
					when others then
					ie_grupo_atend_bpa_w	:= null;
				end;
			end if;

			end;
		end if;

		SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, nr_seq_exame_w, null, ie_medico_executor_w, cd_cgc_w, cd_medico_regra_w, cd_profissional_w, null, dt_execucao_w, nr_seq_classificacao_w, 'N', null, null) INTO STRICT ie_medico_executor_w, cd_cgc_w, cd_medico_regra_w, cd_profissional_w;

		insert into procedimento_paciente(
			nr_sequencia,
			nr_atendimento,
			dt_entrada_unidade,
			cd_procedimento,
			dt_conta,
			dt_procedimento,
			qt_procedimento,
			dt_atualizacao,
			nm_usuario,
			cd_medico,
			cd_convenio,
			cd_categoria,
			tx_medico,
			tx_anestesia,
			tx_procedimento,
			cd_acao,
			cd_medico_executor,
			cd_setor_atendimento,
			ie_origem_proced,
			ie_valor_informado,
			nm_usuario_original,
			cd_setor_receita,
			cd_situacao_glosa,
			ie_funcao_medico,
			cd_cgc_prestador,
			nr_doc_convenio,
			nr_seq_proc_princ,
			qt_porte_anestesico,
			cd_procedimento_princ,
			dt_procedimento_princ,
			nr_seq_atepacu,
			ie_auditoria,
			ds_observacao,
			nr_seq_exame,
			cd_senha,
			cd_atividade_prof_bpa,
			cd_medico_req,
			nr_prescricao,
			nr_seq_regra_lanc,
			ie_tipo_atend_bpa,
			ie_grupo_atend_bpa,
			cd_pessoa_fisica,
			ie_proc_princ_atend,
			cd_doenca_cid)
		values (
			nr_sequencia_w,
			nr_atendimento_p,
			dt_entrada_unidade_w,
			cd_procedimento_w,
			coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),
			coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),
			qt_lancamento_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_medico_executor_w,
			cd_convenio_w,
			cd_categoria_w,
			100,
			100,
			CASE WHEN tx_procedimento_w=100 THEN tx_proc_propaci_w  ELSE tx_procedimento_w END ,
			'1',
			coalesce(cd_medico_regra_w,cd_medico_executor_w),
			cd_setor_atendimento_w,
			ie_origem_proced_w,
			'N',
			nm_usuario_p,
			cd_setor_atendimento_w,
			0,
			ie_funcao_medico_w,
			coalesce(cd_cnpj_prestador_w,cd_cgc_w),
			CASE WHEN ie_regra_guia_w='RC' THEN nr_doc_convenio_w  ELSE nr_doc_propaci_w END ,
			null,
			null,
			null,
			null,
			nr_seq_atepacu_w,
			'S',
			--'LA Regra: '  || nr_seq_regra_w || ' Evento: ' || nr_seq_evento_p,
			wheb_mensagem_pck.get_texto(304246, 'NR_SEQ_REGRA=' || nr_seq_regra_w || ';' || 'NR_SEQ_EVENTO=' || nr_seq_evento_p),
			nr_seq_exame_w,
			cd_senha_w,
			cd_atividade_prof_bpa_w,
			cd_medico_req_w,
			CASE WHEN nr_seq_evento_p=34 THEN  nr_prescricao_w  ELSE null END ,
			nr_seq_regra_w,
			ie_tipo_atend_bpa_w,
			ie_grupo_atend_bpa_w,
			cd_profissional_w,
			ie_proc_princ_atend_w,
			substr(cd_cid_doenca_w,1,4));
		if (nr_sequencia_w > 0) then
			CALL atualiza_preco_procedimento(
				nr_sequencia_w, cd_convenio_w, nm_usuario_p);
				
			nr_interno_conta_w1 := 0;
			nr_interno_conta_audit_w := 0;
						
			select	coalesce(max(nr_interno_conta), 0),
				coalesce(max(qt_procedimento),0)
			into STRICT	nr_interno_conta_w1,
				qt_item_w
			from	procedimento_paciente
			where	nr_sequencia = nr_sequencia_w;

			select	coalesce(max(nr_interno_conta),0)
			into STRICT	nr_interno_conta_audit_w
			from	auditoria_conta_paciente
			where	nr_sequencia = nr_seq_auditoria_p;

			if (coalesce(nr_seq_auditoria_p, 0) > 0) and (nr_interno_conta_w1 = nr_interno_conta_audit_w) then
				CALL Atualizar_Lista_Itens_Audit(nr_interno_conta_audit_w, nr_sequencia_w, 2, qt_item_w, nm_usuario_p, null,
					nr_seq_auditoria_p, 'N');
			else
				select 	coalesce(max(nr_sequencia),0)
				into STRICT	nr_seq_auditoria_w
				from 	auditoria_conta_paciente
				where 	coalesce(dt_liberacao::text, '') = ''
				and 	nr_interno_conta = nr_interno_conta_w1
				and 	dt_execucao_w between dt_periodo_inicial and dt_periodo_final;
				
				if (coalesce(nr_seq_auditoria_w,0) = 0) then

					select 	nextval('auditoria_conta_paciente_seq')
					into STRICT	nr_sequencia_auditoria_w
					;

					insert into auditoria_conta_paciente(			
							nr_sequencia,
							nr_interno_conta,
							cd_auditor,
							dt_auditoria,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							dt_liberacao,
							nr_atendimento,
							dt_periodo_inicial,
							dt_periodo_final,
							ie_tipo_auditoria,
							cd_auditor_externo)
						SELECT 	nr_sequencia_auditoria_w,
							nr_interno_conta_w1,
							cd_auditor,
							dt_auditoria,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							null,
							nr_atendimento,
							dt_periodo_inicial,
							dt_periodo_final,
							ie_tipo_auditoria,
							cd_auditor_externo
						from 	auditoria_conta_paciente
						where 	nr_sequencia = nr_seq_auditoria_p;
						
					CALL Atualizar_Lista_Itens_Audit(nr_interno_conta_w1, nr_sequencia_w, 2, qt_item_w, nm_usuario_p, null,
						nr_sequencia_auditoria_w, 'N');
				else
					CALL Atualizar_Lista_Itens_Audit(nr_interno_conta_w1, nr_sequencia_w, 2, qt_item_w, nm_usuario_p, null,
						nr_seq_auditoria_w, 'N');
				end if;
			end if;	
		end if;
		end;
	else
		begin
		/* verifica se procedimento de alta ja foi executado    bola 08072002 */

		qt_mat_alta_w	:= 0;
		
		ie_consiste_item_ww	:= consiste_regra_lanc_aut_pac(nr_atendimento_p, nr_interno_conta_w, cd_material_w, null,
					ie_consiste_item_w, ie_consiste_proc_int_w, nr_seq_lanc_proc_interno_w, coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())), nr_seq_regra_w, nr_seq_acao_regra_w, nm_usuario_p,
					cd_estabelecimento_w, null, 0,cd_setor_atendimento_w);
	
		if (qt_mat_alta_w	= 0) and (ie_consiste_item_ww = 'S') then
			begin
			if (ie_local_estoque_w = 'N') then
				cd_local_estoque_w	:= null;
			elsif (ie_local_estoque_w = 'S') then
				cd_local_estoque_w	:= cd_local_estoque_p;
			elsif (ie_local_estoque_w = 'U') then
				begin
				select	b.cd_local_estoque
				into STRICT	cd_local_estoque_w
				from 	setor_atendimento	b,
					usuario 		a
				where	b.cd_setor_atendimento 	= a.cd_setor_atendimento
			  	and 	a.nm_usuario		= nm_usuario_p;
				exception
					when others then
					cd_local_estoque_w	:= null;
				end;
			elsif (ie_local_estoque_w = 'A') then				
				
				select 	wheb_usuario_pck.get_cd_setor_atendimento
				into STRICT	cd_setor_ativo_w
				;
				
				begin
				select	cd_local_estoque
				into STRICT	cd_local_estoque_w
				from 	setor_atendimento
				where	cd_setor_atendimento 	= cd_setor_ativo_w;  	
				exception
					when others then
					cd_local_estoque_w	:= null;
				end;
				
			elsif (ie_local_estoque_w = 'P') then
				begin
				select	cd_local_estoque
				into STRICT 	cd_local_estoque_w
				from 	setor_atendimento
				where 	cd_setor_atendimento = cd_setor_atendimento_w;
				exception
					when others then
					cd_local_estoque_w	:= null;
				end;
			end if;
			
			
			
			select	coalesce(max(ie_dispara_kit_mat),'N')
			into STRICT	ie_dispara_kit_mat_w
			from	regra_lanc_automatico
			where	nr_sequencia	= nr_seq_regra_w;
			
			
			if (coalesce(ie_dispara_kit_mat_w,'N') = 'S') then
			
				select 	coalesce(max(cd_kit_material),0)
				into STRICT	cd_kit_material_w
				from 	material_estab
				where 	cd_material = cd_material_w
				and 	cd_estabelecimento = cd_estabelecimento_w;

				if (cd_kit_material_w > 0) then
											
					select	coalesce(max(ie_material_pai), 'S')
					into STRICT	ie_material_pai_w
					from	kit_material
					where	cd_kit_material		= cd_kit_material_w;

					ds_erro_w := gerar_kit_material_lanc(cd_kit_material_w, coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())), nr_prescricao_w, 'N', cd_local_estoque_w, null, nr_seq_atepacu_w, 'N', nm_usuario_p, qt_lancamento_w, ds_erro_w);
				end if;
			
			end if;
			
			if (coalesce(cd_kit_material_w, 0) = 0) or
				((coalesce(cd_kit_material_w, 0) > 0) and (ie_material_pai_w = 'S')) then
				
				select	nextval('material_atend_paciente_seq')
				into STRICT 	nr_sequencia_w
				;
				begin
				insert into material_atend_paciente(
					nr_sequencia,
					nr_atendimento,
					dt_entrada_unidade,
					cd_material,
					dt_conta,
					dt_atendimento,
					qt_material,
					qt_executada,
					dt_atualizacao,
					nm_usuario,
					cd_unidade_medida,
					cd_convenio,
					cd_categoria,
					cd_acao,
					cd_local_estoque,
					cd_setor_atendimento,
					ie_valor_informado,
					nm_usuario_original,
					cd_setor_receita,
					cd_situacao_glosa,
					nr_doc_convenio,
					nr_seq_proc_princ,
					cd_proced_referencia,
					nr_seq_atepacu,
					ie_auditoria,
					ds_observacao,
					nr_seq_regra_lanc,
					cd_cgc_prestador)
				values (
					nr_sequencia_w,
					nr_atendimento_p,
					dt_entrada_unidade_w,
					cd_material_w,
					coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),
					coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),
	 				qt_lancamento_w,
					qt_lancamento_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_unid_medida_w,
					cd_convenio_w,
					cd_categoria_w,
					'1',
					cd_local_estoque_w,
					cd_setor_atendimento_w,
					'N',
					nm_usuario_p,
					cd_setor_atendimento_w,
					0,
					nr_doc_convenio_w,
					null,
					null,
					nr_seq_atepacu_w,
					'S',
					--'LA Regra: '  || nr_seq_regra_w || ' Evento: ' || nr_seq_evento_p,
					wheb_mensagem_pck.get_texto(304246, 'NR_SEQ_REGRA=' || nr_seq_regra_w || ';' || 'NR_SEQ_EVENTO=' || nr_seq_evento_p),
					nr_seq_regra_w,
					cd_cnpj_prestador_w);
				exception
					when 	others then
					nr_sequencia_w := 0;
				end;
			end if;
			
			if (nr_sequencia_w > 0) then
				CALL atualiza_preco_material(nr_sequencia_w, nm_usuario_p);

				nr_interno_conta_w1 := 0;
				nr_interno_conta_audit_w := 0;
			
				select	coalesce(max(nr_interno_conta), 0),
					coalesce(max(qt_material),0)
				into STRICT	nr_interno_conta_w1,
					qt_item_w
				from	material_atend_paciente
				where	nr_sequencia = nr_sequencia_w;

				select	coalesce(max(nr_interno_conta),0)
				into STRICT	nr_interno_conta_audit_w
				from	auditoria_conta_paciente
				where	nr_sequencia = nr_seq_auditoria_p;
				
				if (coalesce(nr_seq_auditoria_p, 0) > 0) and (nr_interno_conta_w1 = nr_interno_conta_audit_w) then
					CALL Atualizar_Lista_Itens_Audit(nr_interno_conta_audit_w, nr_sequencia_w, 1, qt_item_w, nm_usuario_p, null,
						nr_seq_auditoria_p, 'N');
				else
					select 	coalesce(max(nr_sequencia),0)
					into STRICT	nr_seq_auditoria_w
					from 	auditoria_conta_paciente
					where 	coalesce(dt_liberacao::text, '') = ''
					and 	nr_interno_conta = nr_interno_conta_w1
					and 	dt_execucao_w between dt_periodo_inicial and dt_periodo_final;
			
					if (coalesce(nr_seq_auditoria_w,0) = 0) then

						select 	nextval('auditoria_conta_paciente_seq')
						into STRICT	nr_sequencia_auditoria_w
						;

						insert into auditoria_conta_paciente(			
								nr_sequencia,
								nr_interno_conta,
								cd_auditor,
								dt_auditoria,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								dt_liberacao,
								nr_atendimento,
								dt_periodo_inicial,
								dt_periodo_final,
								ie_tipo_auditoria,
								cd_auditor_externo)
							SELECT 	nr_sequencia_auditoria_w,
								nr_interno_conta_w1,
								cd_auditor,
								dt_auditoria,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								null,
								nr_atendimento,
								dt_periodo_inicial,
								dt_periodo_final,
								ie_tipo_auditoria,
								cd_auditor_externo
							from 	auditoria_conta_paciente
							where 	nr_sequencia = nr_seq_auditoria_p;
							
						CALL Atualizar_Lista_Itens_Audit(nr_interno_conta_w1, nr_sequencia_w, 1, qt_item_w, nm_usuario_p, null,
							nr_sequencia_auditoria_w, 'N');
					else
						CALL Atualizar_Lista_Itens_Audit(nr_interno_conta_w1, nr_sequencia_w, 1, qt_item_w, nm_usuario_p, null,
							nr_seq_auditoria_w, 'N');
					end if;
					
				end if;

			end if;
			end;
		end if;
		end;
	end if;
	end;
end loop;
close c02;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lanc_automat_mat_audit ( nr_atendimento_p bigint, cd_local_estoque_p bigint, nr_seq_evento_p bigint, nm_usuario_p text, nr_sequencia_p bigint, nr_seq_auditoria_p bigint, ds_adicional_1_p text, ds_adicional_2_p text) FROM PUBLIC;

