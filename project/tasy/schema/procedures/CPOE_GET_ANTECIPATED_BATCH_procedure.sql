-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_get_antecipated_batch (( dt_horario_p timestamp, cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, si_anticipation_p out text, dt_inicio_p out timestamp, dt_fim_p out timestamp) is si_anticipation_w varchar(1) DEFAULT 'N') AS $body$
DECLARE


qt_holiday_ww bigint;

BEGIN
	if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') then
		return;
	else
		select count(*)
		into STRICT qt_holiday_ww
		from feriado
		where dt_feriado = establishment_timezone_utils.startofday(dt_holiday_p);

		return;
	end if;
end;

begin

si_anticipation_p	:= null;
dt_reference_w	:= null;

dt_reference_w	:= dt_horario_p;
if (dt_horario_p IS NOT NULL AND dt_horario_p::text <> '') then
	for r_c01 in c01 loop

		if (si_anticipation_w <> 'Y') then

			if (r_c01.si_action = '1') then
				dt_weekstart_w	:= trunc(dt_reference_w, 'iw');

				if (pkg_date_utils.get_weekday(dt_weekstart_w) = 2) then
					dt_start_w	:= dt_weekstart_w + coalesce(r_c01.si_dispensation_day -2,0);
				else
					dt_start_w	:= dt_weekstart_w + coalesce(r_c01.si_dispensation_day -1,0);
				end if;

				dt_start_w := pkg_date_utils.get_DateTime(dt_start_w, pkg_date_utils.get_Time(
																	coalesce(pkg_date_utils.extract_field('HOUR', r_c01.hr_dispensation_time, 0), 0),
																	coalesce(pkg_date_utils.extract_field('MINUTE', r_c01.hr_dispensation_time, 0), 0)));
																	
				si_weekday_w := pkg_date_utils.get_weekday(dt_start_w);
				qt_days_w	:= 0;
				dt_end_w	:= null;
				while(coalesce(dt_end_w::text, '') = '') and (qt_days_w <= 7) loop
					si_weekday_w	:= si_weekday_w + 1;
					qt_days_w		:= qt_days_w + 1;

					if (si_weekday_w > 7) then
						si_weekday_w	:= 1;
					end if;

					if (si_weekday_w = r_c01.si_dispensation_end_day) then
						dt_end_w	:= trunc(dt_start_w,'dd') + qt_days_w;
					end if;
				end loop;
				
				dt_end_w := pkg_date_utils.get_DateTime(dt_end_w, pkg_date_utils.get_Time(
																	coalesce(pkg_date_utils.extract_field('HOUR', r_c01.hr_dispensation_end_time, 0), 0),
																	coalesce(pkg_date_utils.extract_field('MINUTE', r_c01.hr_dispensation_end_time, 0), 0)));


				if (r_c01.si_action_on_holiday = 'Y') then

					qt_holiday_w := obter_se_feriado_w(dt_start_w);
					while(qt_holiday_w > 0) loop
						dt_start_w	:= dt_start_w - 1;
						qt_holiday_w := obter_se_feriado_w(dt_start_w);
					end loop;

					qt_holiday_w := obter_se_feriado_w(dt_end_w);
					while(qt_holiday_w > 0) loop
						dt_end_w	:= dt_end_w + 1;
						qt_holiday_w := obter_se_feriado_w(dt_end_w);
					end loop;
					
				end if;

				if (dt_reference_w between dt_start_w and dt_end_w) then
					dt_reference_w	:= dt_start_w;
					si_anticipation_w	:= 'Y';
				elsif (r_c01.si_action_on_holiday = 'Y') then
					
					qt_holiday_w := obter_se_feriado_w(dt_reference_w);
					
					dt_start_w := pkg_date_utils.start_of(dt_reference_w, 'DAY');
					dt_end_w := pkg_date_utils.end_of(dt_reference_w, 'DAY');
					
					while(qt_holiday_w > 0) loop
						si_anticipation_w	:= 'Y';
						
						dt_end_holiday_w := dt_end_w + 1;
						
						qt_holiday_w := obter_se_feriado_w(dt_end_holiday_w);
						
						if (qt_holiday_w > 0) then
							dt_end_w := dt_end_holiday_w;
						end if;
					end loop;
				
				end if;
				
			end if;
		end if;
	end loop;
end if;

if (si_anticipation_w <> 'Y') then
	dt_start_w := null;
	dt_end_w := null;
end if;

si_anticipation_p	:= si_anticipation_w;
dt_inicio_p 		:= dt_start_w;
dt_fim_p			:= dt_end_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_get_antecipated_batch (( dt_horario_p timestamp, cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, si_anticipation_p out text, dt_inicio_p out timestamp, dt_fim_p out timestamp) is si_anticipation_w varchar(1) DEFAULT 'N') FROM PUBLIC;

