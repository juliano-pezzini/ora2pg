-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_local_valido ( cd_estabelecimento_p bigint, cd_local_estoque_p bigint, cd_material_p bigint, ie_origem_documento_p text, ie_local_valido_p INOUT text) AS $body$
DECLARE


cd_grupo_material_w	integer;
cd_subgrupo_material_w	integer;
cd_classe_material_w	integer;
ie_local_valido_w	varchar(1) := 'N';
ie_origem_doc_w		varchar(15);
nr_seq_familia_w	bigint;

/*	Tipos de documento
	1	Notas Fiscais
	2	Requisições
	3	Prescrição
	5	Inventário
	7	Produção
	8	Empréstimo
	9	Digitação Movimento
	10	Ordem de produção*/
c01 CURSOR FOR
	SELECT	coalesce(ie_liberar,'S')
	from	loc_estoque_estrut_materiais
	where 	cd_local_estoque					= cd_local_estoque_p
	and	coalesce(cd_material,cd_material_p)			= cd_material_p
	and 	coalesce(cd_classe_material,cd_classe_material_w)	= cd_classe_material_w
	and 	coalesce(cd_subgrupo_material,cd_subgrupo_material_w)= cd_subgrupo_material_w
	and 	coalesce(cd_grupo_material,cd_grupo_material_w)	= cd_grupo_material_w
	and 	coalesce(nr_seq_familia,nr_seq_familia_w)		= nr_seq_familia_w
	and	coalesce(ie_origem_documento, ie_origem_doc_w)		= ie_origem_doc_w
	order by coalesce(cd_material,0),
		coalesce(nr_seq_familia,0),
		coalesce(cd_classe_material,0),
		coalesce(cd_subgrupo_material,0),
		coalesce(cd_grupo_material,0);


BEGIN
select	coalesce(max(a.cd_classe_material),0),
	coalesce(max(b.cd_subgrupo_material),0),
	coalesce(max(c.cd_grupo_material),0),
	coalesce(max(a.nr_seq_familia),0)
into STRICT	cd_classe_material_w,
	cd_subgrupo_material_w,
	cd_grupo_material_w,
	nr_seq_familia_w
from	material a,
	classe_material b,
	subgrupo_material c
where	a.cd_material 		= cd_material_p
and	a.cd_classe_material 	= b.cd_classe_material
and	b.cd_subgrupo_material 	= c.cd_subgrupo_material;

ie_origem_doc_w			:= coalesce(ie_origem_documento_p,'All');
ie_local_valido_w			:= 'N';

OPEN C01;
LOOP
FETCH C01 into
	ie_local_valido_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	ie_local_valido_w	:= ie_local_valido_w;
END LOOP;
CLOSE C01;

ie_local_valido_p := ie_local_valido_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_local_valido ( cd_estabelecimento_p bigint, cd_local_estoque_p bigint, cd_material_p bigint, ie_origem_documento_p text, ie_local_valido_p INOUT text) FROM PUBLIC;

