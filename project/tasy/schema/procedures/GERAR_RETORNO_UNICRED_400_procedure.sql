-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_retorno_unicred_400 ( nr_seq_cobr_escrit_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_reg_T_w        bigint;
nr_seq_reg_U_w        bigint;
nr_titulo_w        bigint;
vl_titulo_w        double precision;
vl_acrescimo_w        double precision;
vl_desconto_w        double precision;
vl_abatimento_w        double precision;
vl_liquido_w        double precision;
vl_outras_despesas_w      double precision;
dt_liquidacao_w        varchar(6);
ds_titulo_w        varchar(255);
vl_cobranca_w        double precision;
vl_alterar_w        double precision;
cd_ocorrencia_w        varchar(10);
nr_seq_ocorrencia_ret_w      bigint;
nr_nosso_numero_w      titulo_receber.nr_nosso_numero%type;
cd_banco_w				banco_escritural.cd_banco%type;
dt_liquidacao_ajustado_w	timestamp;

c01 CURSOR FOR
  SELECT  trim(both substr(ds_string,117,10)),
      (substr(ds_string,153,13))::numeric /100,
      (substr(ds_string,267,13))::numeric /100,
      (substr(ds_string,241,13))::numeric /100,
      (substr(ds_string,228,13))::numeric /100,
      (substr(ds_string,254,13))::numeric /100,
      (substr(ds_string,176,13))::numeric /100,
      substr(ds_string,296,6),
      substr(ds_string,109,2),
      trim(both substr(ds_string,127,20))
  from  w_retorno_banco
  where  nr_seq_cobr_escrit  = nr_seq_cobr_escrit_p
  and  substr(ds_string,1,1)  = '1';

BEGIN

select	max(a.cd_banco)
into STRICT	cd_banco_w
from	banco_estabelecimento a,
		cobranca_escritural b
where	a.nr_sequencia = b.nr_seq_conta_banco
and		b.nr_sequencia = nr_seq_cobr_escrit_p;

open C01;
loop
fetch C01 into
  ds_titulo_w,
  vl_cobranca_w,
  vl_acrescimo_w,
  vl_desconto_w,
  vl_abatimento_w,
  vl_liquido_w,
  vl_outras_despesas_w,
  dt_liquidacao_w,
  cd_ocorrencia_w,
  nr_nosso_numero_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
  begin

  vl_alterar_w  := 0;


  select  max(a.nr_titulo) /*Primeiro tenta achar o nr_titulo pelas 10 posicoes  */
  into STRICT  nr_titulo_w
  from  titulo_receber a
  where  a.nr_titulo  = somente_numero(ds_titulo_w);


  if (coalesce(nr_titulo_w::text, '') = '') then --Se não achou o título pelo número do título
    select  max(a.nr_titulo)
    into STRICT  nr_titulo_w
    from  titulo_receber a
    where  nr_nosso_numero  = ds_titulo_w; -- Procura pelo título que tenha o nosso numero igual ao titulo retornado pelo banco.
    if (coalesce(nr_titulo_w::text, '') = '') then /*se ainda nao axou, procurar  pelo nosso numero do arquivo com titulos que tenham esse nosso numero*/
      select  max(a.nr_titulo)
      into STRICT  nr_titulo_w
      from  titulo_receber a
      where  nr_nosso_numero  = nr_nosso_numero_w;

    end if;

  end if;

  /* Se encontrou o título importa, senão grava no log */

  if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then

    select  coalesce(MAX(vl_titulo),0)
    into STRICT  vl_titulo_w
    from  titulo_receber
    where  nr_titulo  = nr_titulo_w;


    select   to_char(max(a.nr_sequencia))
    into STRICT  nr_seq_ocorrencia_ret_w
    from  banco_ocorr_escrit_ret a
    where  a.cd_banco = cd_banco_w
    and  a.cd_ocorrencia = cd_ocorrencia_w;

    /* Tratar acrescimos/descontos */

    if (vl_titulo_w <> vl_liquido_w) then
      vl_alterar_w  := vl_liquido_w - vl_titulo_w;

      if (vl_alterar_w > 0) then
        vl_acrescimo_w  := vl_alterar_w;
      else
        vl_desconto_w  := abs(vl_alterar_w);
      end if;
    end if;

	if (coalesce(dt_liquidacao_w::text, '') = '') or (dt_liquidacao_w = '000000') or (dt_liquidacao_w = '      ') then
		dt_liquidacao_ajustado_w := null;
	else
		begin
			dt_liquidacao_ajustado_w := to_date(dt_liquidacao_w,'dd/mm/rrrr');
		exception when others then
			dt_liquidacao_ajustado_w := clock_timestamp();
		end;
	end if;

    insert  into titulo_receber_cobr(  NR_SEQUENCIA,
              NR_TITULO,
              CD_BANCO,
              VL_COBRANCA,
              VL_DESCONTO,
              VL_ACRESCIMO,
              VL_DESPESA_BANCARIA,
              VL_LIQUIDACAO,
              DT_LIQUIDACAO,
              DT_ATUALIZACAO,
              NM_USUARIO,
              NR_SEQ_COBRANCA,
              nr_seq_ocorrencia_ret)
          values (  nextval('titulo_receber_cobr_seq'),
              nr_titulo_w,

              cd_banco_w,
              vl_titulo_w,
              vl_desconto_w,
              vl_acrescimo_w,
              vl_outras_despesas_w,
              vl_liquido_w,

              dt_liquidacao_ajustado_w,
              clock_timestamp(),
              nm_usuario_p,
              nr_seq_cobr_escrit_p,
              nr_seq_ocorrencia_ret_w);
  else
    --fin_gerar_log_controle_banco(3,substr('não foi importado o título ' || ds_titulo_w || ', pois não foi encontrado no Tasy',1,4000),nm_usuario_p,'N');
    --fin_gerar_log_controle_banco(3,substr(wheb_mensagem_pck.get_texto(303945,'DS_TITULO=' || ds_titulo_w),1,4000),nm_usuario_p,'N');
    CALL gerar_log_escritural('C',nr_seq_cobr_escrit_p,nm_usuario_p,'O título ' || ds_titulo_w || ' não consta no sistema!','S');
  end if;

  end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_retorno_unicred_400 ( nr_seq_cobr_escrit_p bigint, nm_usuario_p text) FROM PUBLIC;

