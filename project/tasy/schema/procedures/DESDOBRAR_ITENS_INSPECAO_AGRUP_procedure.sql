-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE desdobrar_itens_inspecao_agrup ( nr_seq_registro_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_inspecao_w			bigint;
nr_ordem_compra_w		bigint;
cd_material_w			bigint;
ds_material_w			varchar(255);
dt_enterga_w			timestamp;
qt_material_ordem_w		double precision;
qt_material_ordem_ww		double precision;
qt_inspecionar_item_w		double precision;
qt_inspecionar_item_ww		double precision;
qt_inspecao_ordem_w		double precision;

/*Campos do Lote*/

qt_existe_lote_w			bigint;
nr_seq_insp_lote_w			bigint;
dt_validade_w                		timestamp;
qt_material_w			double precision;
cd_lote_fabricacao_w           		varchar(20);
ie_indeterminada_w              		varchar(1);
ds_barras_w                     		varchar(4000);
ie_gera_lote_w			varchar(1);
ie_consiste_qt_cega_w		varchar(1);
cd_barra_material_w		inspecao_rec_contagem.cd_barra_material%type;

C01 CURSOR FOR
SELECT	a.cd_material,
	substr(obter_desc_material(a.cd_material),1,100) ds_material,
	obter_qtd_convertida_sem_round(a.cd_material, a.qt_inspecao, obter_dados_material(a.cd_material, 'UME'), 'UMP'),
	a.ds_barras,
	a.cd_lote_fabricacao,
	a.dt_validade,
	a.ie_indeterminada,
	a.cd_barra_material
from	inspecao_rec_contagem a
where	a.nr_seq_registro = nr_seq_registro_p
and	a.qt_inspecao > 0
order by	a.cd_material,
	a.qt_inspecao desc;

C02 CURSOR FOR
SELECT	a.nr_sequencia,
	a.nr_ordem_compra,
	coalesce(obter_qt_prev_oci_inspecao(a.nr_sequencia),0) qt_material_ordem
from	inspecao_recebimento a
where  	a.nr_seq_registro = nr_seq_registro_p
and	a.cd_material = cd_material_w
and	coalesce(obter_qt_prev_oci_inspecao(a.nr_sequencia),0) <> qt_inspecao
order by	obter_dt_prev_oci_inspecao(a.nr_sequencia) asc;


BEGIN

select (max(obter_valor_param_usuario(270, 49, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)))
into STRICT	ie_consiste_qt_cega_w
;

/* Realizado o  update, pois pode haver  um momento em que o usuário estorne a liberação, desta forma alterando as quantidades. */

update	inspecao_recebimento
set	qt_inspecao = 0
where	nr_seq_registro = nr_seq_registro_p;

begin

delete  FROM inspecao_recebimento_lote
where   nr_seq_inspecao in (	SELECT	nr_sequencia
				from    inspecao_recebimento
				where   nr_seq_registro = nr_seq_registro_p);
exception
when others then
	qt_existe_lote_w := 0;
end;

open C01;
loop
fetch C01 into
	cd_material_w,
	ds_material_w,
	qt_inspecionar_item_w,
	ds_barras_w,
	cd_lote_fabricacao_w,
	dt_validade_w,
	ie_indeterminada_w,
	cd_barra_material_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (ie_consiste_qt_cega_w <> 'N') then

		select	sum(qt_prevista_entrega) - coalesce(sum(qt_real_entrega),0)
		into STRICT	qt_inspecao_ordem_w
		from	ordem_compra_item a,
			ordem_compra_item_entrega c,
			inspecao_recebimento b
		where	a.nr_ordem_compra = b.nr_ordem_compra
		and	b.nr_ordem_compra = c.nr_ordem_compra
		and	b.nr_item_oci = c.nr_item_oci
		and	a.cd_material = b.cd_material
		and	b.nr_seq_registro = nr_seq_registro_p
		and	a.cd_material = cd_material_w
		and	coalesce(c.dt_cancelamento::text, '') = '';



		if (ie_consiste_qt_cega_w = 'S') and (qt_inspecao_ordem_w > 0) and (qt_inspecionar_item_w <> qt_inspecao_ordem_w) then
			/*A quantidade da contagem cega do material #@CD_MATERIAL_P#@, é diferente da quantidade do item nas ordens de compras  inspecionadas.*/

			CALL wheb_mensagem_pck.exibir_mensagem_abort(183244,'CD_MATERIAL_P='||cd_material_w);
		end if;

		if (ie_consiste_qt_cega_w = 'A') and (qt_inspecao_ordem_w > 0) and (qt_inspecionar_item_w > qt_inspecao_ordem_w) then
			/*A quantidade da contagem cega do material #@CD_MATERIAL_P#@, é maior que a quantidade do item nas ordens de compras  inspecionadas.*/

			CALL wheb_mensagem_pck.exibir_mensagem_abort(183245,'CD_MATERIAL_P='||cd_material_w);
		end if;

		if (ie_consiste_qt_cega_w = 'B') and (qt_inspecao_ordem_w > 0) and (qt_inspecionar_item_w < qt_inspecao_ordem_w) then
			/*A quantidade da contagem cega do material #@CD_MATERIAL_P#@, é menor que a quantidade do item nas ordens de compras  inspecionadas.*/

			CALL wheb_mensagem_pck.exibir_mensagem_abort(183246,'CD_MATERIAL_P='||cd_material_w);
		end if;
	end if;

	open C02;
	loop
	fetch C02 into
		nr_seq_inspecao_w,
		nr_ordem_compra_w,
		qt_material_ordem_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		/*Verifica se o material possui regra para informa lote ( Regra de geração do lote fornecedor )  */

		select	obter_regra_lote_inspecao(cd_estabelecimento_p,cd_material_w)
		into STRICT	ie_gera_lote_w
		;

		if (ie_gera_lote_w = 'O') and (coalesce(cd_lote_fabricacao_w::text, '') = '') then
			/*(-20011,	'É obrigatório a informação do lote fornecedor para este material.' || chr(13) || chr(10) ||
							cd_material_w || ' - ' || ds_material_w || '.' || chr(13) || chr(10) ||
							'Favor verificar  no agrupamento do material se o lote fornecedor foi informado.');*/
			CALL wheb_mensagem_pck.exibir_mensagem_abort(183252,	'CD_MATERIAL_P='||cd_material_w||';'||
									'DS_MATERIAL_P='||ds_material_w);
		end if;

		if (qt_inspecionar_item_w > 0) then
			begin
			if (qt_inspecionar_item_w > qt_material_ordem_w) then
				begin
				update	inspecao_recebimento
				set	qt_inspecao   = qt_inspecao + qt_material_ordem_w,
					nm_usuario    = nm_usuario_p
				where	nr_sequencia = nr_seq_inspecao_w;


				if (cd_lote_fabricacao_w IS NOT NULL AND cd_lote_fabricacao_w::text <> '') then
					begin
					select	nextval('inspecao_recebimento_lote_seq')
					into STRICT	nr_seq_insp_lote_w
					;

					select	obter_qtd_convertida_sem_round(cd_material_w, qt_material_ordem_w, obter_dados_material(cd_material_w, 'UMP'), obter_dados_material(cd_material_w, 'UME'), 'UME')
					into STRICT	qt_material_ordem_ww
					;

					insert into inspecao_recebimento_lote(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_inspecao,
						dt_validade,
						qt_material,
						cd_lote_fabricacao,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ie_indeterminada,
						ds_barras,
						cd_barra_material)
					values (nr_seq_insp_lote_w,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_inspecao_w,
						dt_validade_w,
						qt_material_ordem_ww,
						cd_lote_fabricacao_w,
						clock_timestamp(),
						nm_usuario_p,
						CASE WHEN coalesce(dt_validade_w::text, '') = '' THEN  'S'  ELSE 'N' END ,
						ds_barras_w,
						cd_barra_material_w);
					end;
				end if;

				qt_inspecionar_item_w := (qt_inspecionar_item_w - qt_material_ordem_w);
				end;
			else
				begin
				update	inspecao_recebimento
				set	qt_inspecao   = qt_inspecao + qt_inspecionar_item_w,
					nm_usuario    = nm_usuario_p
				where	nr_sequencia = nr_seq_inspecao_w;

				select	nextval('inspecao_recebimento_lote_seq')
				into STRICT	nr_seq_insp_lote_w
				;

				if (cd_lote_fabricacao_w IS NOT NULL AND cd_lote_fabricacao_w::text <> '') then
					begin

					select	obter_qtd_convertida_sem_round(cd_material_w, qt_inspecionar_item_w, obter_dados_material(cd_material_w, 'UMP'), obter_dados_material(cd_material_w, 'UME'), 'UME')
					into STRICT	qt_inspecionar_item_ww
					;

					insert into inspecao_recebimento_lote(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_inspecao,
						dt_validade,
						qt_material,
						cd_lote_fabricacao,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ie_indeterminada,
						ds_barras,
						cd_barra_material)
					values (nr_seq_insp_lote_w,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_inspecao_w,
						dt_validade_w,
						qt_inspecionar_item_ww,
						cd_lote_fabricacao_w,
						clock_timestamp(),
						nm_usuario_p,
						CASE WHEN coalesce(dt_validade_w::text, '') = '' THEN  'S'  ELSE 'N' END ,
						ds_barras_w,
						cd_barra_material_w);
					end;
				end if;

				qt_inspecionar_item_w := (qt_inspecionar_item_w - qt_inspecionar_item_w);
				end;
			end if;
			end;
		end if;

		end;
	end loop;
	close C02;
	end;

end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desdobrar_itens_inspecao_agrup ( nr_seq_registro_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

