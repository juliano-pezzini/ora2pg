-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_segurado_sib ( nr_seq_lote_sib_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
dt_referencia_w			timestamp;
nm_beneficiario_w		pls_pessoa_fisica.nm_pessoa_fisica%type;
dt_nascimento_w			timestamp;
ie_sexo_benef_w			varchar(1);
nr_cpf_w			varchar(11);
nm_mae_benef_w			varchar(60);
ds_logradouro_w			varchar(255);
ds_numero_w			varchar(5);
ds_complemento_w		varchar(255);
ds_bairro_w			varchar(50);
ds_municipio_w			varchar(50);
uf_w				compl_pessoa_fisica.sg_estado%type;
cep_w				varchar(15);
cd_cns_w			varchar(30);
nr_identidade_w			varchar(15);
ds_orgao_emissor_ci_w		pessoa_fisica.ds_orgao_emissor_ci%type;
cd_nacionalidade_w		varchar(8);
nr_seq_segurado_w		bigint;
cd_pessoa_fisica_w		varchar(10);
nr_pis_pasep_w			varchar(11);
nr_seq_pais_w			bigint;
nr_seq_segurado_sib_w		bigint;
ie_tipo_logradouro_w		varchar(1);
qt_endereco_residencial_w	bigint;
qt_endereco_comercial_w		bigint;
nr_seq_contrato_w		bigint;
cd_municipio_ibge_resid_w	varchar(10);
ie_logradouro_sib_w		pls_parametros.ie_logradouro_sib%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_usuario_plano_w		pls_segurado_carteira.cd_usuario_plano%type;
dt_contratacao_w		pls_segurado.dt_contratacao%type;
dt_rescisao_w			pls_segurado.dt_rescisao%type;
nr_seq_motivo_cancelamento_w	pls_segurado.nr_seq_motivo_cancelamento%type;
nr_seq_parentesco_w		pls_segurado.nr_seq_parentesco%type;
dt_movimentacao_w		pls_lote_sib.dt_mes_competencia%type;

C01 CURSOR FOR 
	SELECT 	substr(coalesce(l.nm_pessoa_fisica,b.nm_pessoa_fisica),1,69), 
		b.dt_nascimento, 
		b.ie_sexo, 
		coalesce(b.nr_cpf,'00000000000'), 
		coalesce(substr(b.nr_cartao_nac_sus,1,15),'000000000000000') cd_cns, 
		b.nr_identidade, 
		b.ds_orgao_emissor_ci, 
		coalesce(b.cd_nacionalidade,'000'), 
		a.nr_sequencia, 
		a.cd_pessoa_fisica, 
		coalesce(b.nr_pis_pasep,'00000000000'), 
		b.nr_seq_pais, 
		d.nr_sequencia, 
		pls_obter_dados_segurado(a.nr_sequencia,'C') cd_usuario_plano, 
		a.dt_contratacao, 
		a.dt_rescisao, 
		a.nr_seq_motivo_cancelamento, 
		a.nr_seq_parentesco 
	FROM pls_contrato d, pls_segurado a, pessoa_fisica b
LEFT OUTER JOIN pls_pessoa_fisica l ON (b.cd_pessoa_fisica = l.cd_pessoa_fisica)
WHERE a.cd_pessoa_fisica	= b.cd_pessoa_fisica  and a.nr_seq_contrato	= d.nr_sequencia and d.cd_estabelecimento	= cd_estabelecimento_w and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and coalesce(a.dt_cancelamento::text, '') = '' and ((coalesce(a.dt_rescisao::text, '') = '') or (a.dt_rescisao >= dt_movimentacao_w)) and a.ie_tipo_segurado in ('B','R');


BEGIN 
 
select	dt_mesano_referencia, 
	trunc(dt_mes_competencia,'month'), 
	cd_estabelecimento 
into STRICT	dt_referencia_w, 
	dt_movimentacao_w, 
	cd_estabelecimento_w 
from	pls_lote_sib 
where	nr_sequencia	= nr_seq_lote_sib_p;
 
delete	FROM pls_segurado_sib 
where	nr_seq_lote_sib	= nr_seq_lote_sib_p;
 
select	MAX(ie_logradouro_sib) 
into STRICT	ie_logradouro_sib_w 
from	pls_parametros 
where	cd_estabelecimento	= cd_estabelecimento_w;
 
if (coalesce(ie_logradouro_sib_w::text, '') = '') then 
	ie_logradouro_sib_w	:= '1';
end if;
 
open C01;
loop 
fetch C01 into 
	nm_beneficiario_w, 
	dt_nascimento_w, 
	ie_sexo_benef_w, 
	nr_cpf_w, 
	cd_cns_w, 
	nr_identidade_w, 
	ds_orgao_emissor_ci_w, 
	cd_nacionalidade_w, 
	nr_seq_segurado_w, 
	cd_pessoa_fisica_w, 
	nr_pis_pasep_w, 
	nr_seq_pais_w, 
	nr_seq_contrato_w, 
	cd_usuario_plano_w, 
	dt_contratacao_w, 
	dt_rescisao_w, 
	nr_seq_motivo_cancelamento_w, 
	nr_seq_parentesco_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	ie_tipo_logradouro_w	:= '';
	 
	/*aaschlote 26/09/2012 OS - 463181*/
 
	SELECT * FROM pls_obter_enderecos_benef_sib(	cd_pessoa_fisica_w, nr_seq_contrato_w, 'N', ie_logradouro_sib_w, ie_tipo_logradouro_w, ds_logradouro_w, ds_numero_w, ds_complemento_w, ds_bairro_w, ds_municipio_w, cd_municipio_ibge_resid_w, uf_w, cep_w) INTO STRICT ie_tipo_logradouro_w, ds_logradouro_w, ds_numero_w, ds_complemento_w, ds_bairro_w, ds_municipio_w, cd_municipio_ibge_resid_w, uf_w, cep_w;
	 
	begin 
	select	a.nm_pessoa_fisica 
	into STRICT	nm_mae_benef_w 
	from	pessoa_fisica a, 
		compl_pessoa_fisica b 
	where	b.cd_pessoa_fisica_ref	= a.cd_pessoa_fisica 
	and	b.cd_pessoa_fisica	= cd_pessoa_fisica_w 
	and	b.ie_tipo_complemento	= 5  LIMIT 1;
	exception 
	when others then 
		nm_mae_benef_w	:= '';
	end;
	 
	if (coalesce(nm_mae_benef_w::text, '') = '') then 
		begin 
		select	a.nm_contato 
		into STRICT	nm_mae_benef_w 
		from	compl_pessoa_fisica a 
		where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w 
		and	a.ie_tipo_complemento	= 5  LIMIT 1;
		exception 
		when others then 
			nm_mae_benef_w	:= '';
		end;
	end if;
	 
	nm_mae_benef_w	:= substr(nm_mae_benef_w,1,59);
	 
	if (uf_w = 'IN') then 
		uf_w	:= 'EX';
	end if;
	 
	select	nextval('pls_segurado_sib_seq') 
	into STRICT	nr_seq_segurado_sib_w 
	;
	 
	insert into pls_segurado_sib(nr_sequencia, nm_pessoa_fisica, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, 
					nm_usuario_nrec, dt_nascimento, ie_sexo, nr_cpf, nm_mae_pessoa_fisica, ds_endereco, 
					nr_endereco, ds_complemento, ds_bairro, cd_municipio_ibge, sg_estado, cd_cep, 
					nr_cartao_nac_sus, nr_identidade, ds_orgao_emissor_ci, dt_geracao, nr_seq_segurado, 
					cd_pessoa_fisica, nr_pis_pasep, nr_seq_lote_sib, nr_seq_pais, cd_nacionalidade, 
					cd_usuario_plano, dt_contratacao, dt_rescisao, nr_seq_motivo_cancelamento, nr_seq_parentesco) 
	values (nr_seq_segurado_sib_w, nm_beneficiario_w, clock_timestamp(), nm_usuario_p, clock_timestamp(), 
					nm_usuario_p, dt_nascimento_w, ie_sexo_benef_w, nr_cpf_w, nm_mae_benef_w, ds_logradouro_w, 
					ds_numero_w, ds_complemento_w, ds_bairro_w, ds_municipio_w, uf_w, cep_w, 
					cd_cns_w, nr_identidade_w, ds_orgao_emissor_ci_w, dt_referencia_w, nr_seq_segurado_w, 
					cd_pessoa_fisica_w, nr_pis_pasep_w, nr_seq_lote_sib_p, nr_seq_pais_w, cd_nacionalidade_w, 
					cd_usuario_plano_w, dt_contratacao_w, dt_rescisao_w, nr_seq_motivo_cancelamento_w, nr_seq_parentesco_w);
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_segurado_sib ( nr_seq_lote_sib_p bigint, nm_usuario_p text) FROM PUBLIC;

