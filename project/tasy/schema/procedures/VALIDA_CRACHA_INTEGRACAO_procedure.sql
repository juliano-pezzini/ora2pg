-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function valida_cracha_integracao as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE valida_cracha_integracao ( NM_USUARIO_P text, NR_SEQ_CONTROLE_P bigint) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL valida_cracha_integracao_atx ( ' || quote_nullable(NM_USUARIO_P) || ',' || quote_nullable(NR_SEQ_CONTROLE_P) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE valida_cracha_integracao_atx ( NM_USUARIO_P text, NR_SEQ_CONTROLE_P bigint) AS $body$
DECLARE
/* 
	IE_TIPO_VISITA 
	P = Paciente 
	S = Visitante Setor 
	A = Acompanhante 
	AP = Acompanhante Paciente 
	V = Visitante 
*/
 
DS_MENSAGEM_ABORT_W	varchar(255);

C_VISITAS_EM_ABERTO CURSOR FOR 
	SELECT	'P' IE_TIPO_VISITA, SUBSTR(coalesce(OBTER_NOME_PACIENTE(NR_ATENDIMENTO), obter_desc_expressao(491538,'Sem atendimento vinculado')),1,255) NM_PACIENTE	 
	FROM	ATENDIMENTO_VISITA 
	WHERE	NR_SEQ_CONTROLE	= NR_SEQ_CONTROLE_P	 
	AND	coalesce(CD_SETOR_ATENDIMENTO::text, '') = '' 
	AND	coalesce(IE_PACIENTE,'N') = 'S' 
	AND	coalesce(DT_SAIDA_REAL::text, '') = '' 
	AND	coalesce(DT_SAIDA::text, '') = '' 
	
UNION ALL
 
	SELECT	'S', SUBSTR(coalesce(OBTER_NOME_PACIENTE(NR_ATENDIMENTO), obter_desc_expressao(491538,'Sem atendimento vinculado')),1,255) 
	FROM	ATENDIMENTO_VISITA 
	WHERE	NR_SEQ_CONTROLE	= NR_SEQ_CONTROLE_P 
	AND	(CD_SETOR_ATENDIMENTO IS NOT NULL AND CD_SETOR_ATENDIMENTO::text <> '') 
	AND	coalesce(DT_SAIDA_REAL::text, '') = '' 
	AND	coalesce(DT_SAIDA::text, '') = '' 
	
UNION ALL
 
	SELECT	'A', SUBSTR(coalesce(OBTER_NOME_PACIENTE(NR_ATENDIMENTO), obter_desc_expressao(491538,'Sem atendimento vinculado')),1,255) 
	FROM	ATENDIMENTO_ACOMPANHANTE 
	WHERE	NR_CONTROLE = TO_CHAR( NR_SEQ_CONTROLE_P ) 
	AND	coalesce(DT_SAIDA_REAL::text, '') = '' 
	AND	coalesce(DT_SAIDA::text, '') = '' 
	
UNION ALL
 
	SELECT	'AP', SUBSTR(obter_desc_expressao(491538,'Sem atendimento vinculado'),1,255) 
	FROM	ACOMPANHANTE_PACIENTE 
	WHERE	NR_CONTROLE = TO_CHAR( NR_SEQ_CONTROLE_P ) 
	AND	coalesce(DT_SAIDA_REAL::text, '') = '' 
	
UNION ALL
 
	SELECT	'V', SUBSTR(coalesce(OBTER_NOME_PACIENTE(NR_ATENDIMENTO), obter_desc_expressao(491538,'Sem atendimento vinculado')),1,255) 
	FROM	ATENDIMENTO_VISITA 
	WHERE	NR_SEQ_CONTROLE	= NR_SEQ_CONTROLE_P	 
	AND	coalesce(CD_SETOR_ATENDIMENTO::text, '') = '' 
	AND	coalesce(IE_PACIENTE,'N') = 'N' 
	AND	coalesce(DT_SAIDA_REAL::text, '') = '' 
	AND	coalesce(DT_SAIDA::text, '') = '';
BEGIN
 
IF (OBTER_VALOR_PARAM_USUARIO(8014 , 93, OBTER_PERFIL_ATIVO, NM_USUARIO_P, OBTER_ESTABELECIMENTO_ATIVO) = 'E') THEN /* Sênior */
	 
	FOR R_C_VISITAS_EM_ABERTO IN C_VISITAS_EM_ABERTO LOOP 
		IF (C_VISITAS_EM_ABERTO%ROWCOUNT = 1) THEN 
			DS_MENSAGEM_ABORT_W := obter_desc_expressao(762091,'Este crachá já esta em uso por') || ': ';
		END IF;
		DS_MENSAGEM_ABORT_W := DS_MENSAGEM_ABORT_W || CHR(13) || CHR(10) || obter_desc_expressao(295156, 'Paciente') || ': ' || R_C_VISITAS_EM_ABERTO.NM_PACIENTE;
	END LOOP;
	 
	IF (DS_MENSAGEM_ABORT_W IS NOT NULL AND DS_MENSAGEM_ABORT_W::text <> '') THEN 
		CALL WHEB_MENSAGEM_PCK.EXIBIR_MENSAGEM_ABORT( DS_MENSAGEM_ABORT_W );
	END IF;
END IF;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE valida_cracha_integracao ( NM_USUARIO_P text, NR_SEQ_CONTROLE_P bigint) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE valida_cracha_integracao_atx ( NM_USUARIO_P text, NR_SEQ_CONTROLE_P bigint) FROM PUBLIC;

