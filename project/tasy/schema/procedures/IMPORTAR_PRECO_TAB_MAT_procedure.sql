-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importar_preco_tab_mat ( cd_material_p bigint, vl_item_p bigint, dt_vigencia_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, cd_tab_preco_mat_p bigint) AS $body$
DECLARE


cd_estabelecimento_w	smallint;
cd_tab_preco_mat_w      smallint;
cd_material_w	        integer;
dt_inicio_vigencia_w    timestamp;
vl_preco_venda_w	double precision;
nr_seq_hist_w		bigint;
qt_registro_w		bigint := 0;

C01 CURSOR FOR
	SELECT	a.cd_estabelecimento,
	        a.cd_tab_preco_mat,
	        a.cd_material,
	        a.dt_inicio_vigencia,
		a.vl_preco_venda
	from	preco_material a
	where	a.cd_material 	      = cd_material_p
	and	a.cd_tab_preco_mat    = cd_tab_preco_mat_p
	and	substr(obter_status_item_tab_preco(a.cd_material,a.cd_tab_preco_mat,a.cd_estabelecimento,a.dt_inicio_vigencia),1,5)  = 2
	order by a.dt_inicio_vigencia;



BEGIN

open C01;
loop
fetch C01 into
	cd_estabelecimento_w,
	cd_tab_preco_mat_w,
	cd_material_w,
	dt_inicio_vigencia_w,
	vl_preco_venda_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	qt_registro_w:= 1;
	cd_estabelecimento_w	:= cd_estabelecimento_w;
	cd_tab_preco_mat_w  	:= cd_tab_preco_mat_w;
	cd_material_w	    	:= cd_material_w;
	dt_inicio_vigencia_w	:= dt_inicio_vigencia_w;
	end;
end loop;
close C01;


select	nextval('preco_mat_status_hist_seq')
into STRICT	nr_seq_hist_w
;


if (qt_registro_w > 0) then
	if (vl_item_p >= vl_preco_venda_w) then

		update 	preco_material
		set	dt_inicio_vigencia = dt_vigencia_p,
			vl_preco_venda 	   = vl_item_p,
			dt_atualizacao 	   = clock_timestamp(),
			nm_usuario	   =  nm_usuario_p
		where	cd_estabelecimento	= cd_estabelecimento_w
		and	cd_tab_preco_mat        = cd_tab_preco_mat_w
		and     cd_material             = cd_material_w
		and     dt_inicio_vigencia      = dt_inicio_vigencia_w;

		update	preco_mat_status_hist
		set	dt_vigencia		= dt_vigencia_p
		where	cd_estabelecimento	= cd_estabelecimento_w
		and	cd_tab_preco_mat        = cd_tab_preco_mat_w
		and     cd_material             = cd_material_w
		and     dt_vigencia      	= dt_inicio_vigencia_w;

		insert	into preco_mat_status_hist(	cd_estabelecimento       ,
							cd_material              ,
							cd_tab_preco_mat         ,
							dt_atualizacao           ,
							dt_atualizacao_nrec      ,
							dt_vigencia              ,
							ie_status_item           ,
							nm_usuario               ,
							nm_usuario_nrec          ,
							nr_sequencia             ,
							vl_material		)
				values (	cd_estabelecimento_p,
						cd_material_p,
						cd_tab_preco_mat_p,
						clock_timestamp(),
						clock_timestamp(),
						dt_vigencia_p,
						1,
						nm_usuario_p,
						nm_usuario_p,
						nr_seq_hist_w,
						vl_item_p);
	else

		insert	into preco_mat_status_hist(	cd_estabelecimento       ,
							cd_material              ,
							cd_tab_preco_mat         ,
							dt_atualizacao           ,
							dt_atualizacao_nrec      ,
							dt_vigencia              ,
							ie_status_item           ,
							nm_usuario               ,
							nm_usuario_nrec          ,
							nr_sequencia             ,
							vl_material)
				values (	cd_estabelecimento_w,
						cd_material_w,
						cd_tab_preco_mat_w,
						clock_timestamp(),
						clock_timestamp(),
						dt_inicio_vigencia_w,
						3,
						nm_usuario_p,
						nm_usuario_p,
						nr_seq_hist_w,
						vl_preco_venda_w);

	end if;
end if;


commit;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importar_preco_tab_mat ( cd_material_p bigint, vl_item_p bigint, dt_vigencia_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, cd_tab_preco_mat_p bigint) FROM PUBLIC;

