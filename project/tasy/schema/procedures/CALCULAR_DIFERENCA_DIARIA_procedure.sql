-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_diferenca_diaria ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_plano_p text, cd_tipo_acomod_convenio_p bigint, cd_tipo_acomodacao_p bigint, dt_referencia_p timestamp, qt_dia_Int_p bigint, ie_paciente_isolado_p text, cd_procedimento_p INOUT bigint, ie_origem_proced_p INOUT bigint, vl_Categoria_p INOUT bigint, vl_diferenca_p INOUT bigint, ie_calculo_diferenca_p INOUT text) AS $body$
DECLARE


cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_tipo_acomodacao_w		integer;
vl_Alternativo_w		double precision;
cd_convenio_base_w		integer;
cd_categoria_base_w		varchar(10);
cd_procedimento_base_w	bigint;
ie_origem_proc_base_w	bigint;
ie_clinica_w			bigint;
cd_plano_w			varchar(20);
cd_usuario_convenio_w	varchar(40);
cd_empresa_ref_w		bigint;
ie_tipo_convenio_w		bigint;
nr_seq_proc_interno_w		bigint;
nr_seq_proc_interno_ww		bigint;
ie_paciente_isolado_w		varchar(1);
nr_seq_ajuste_proc_w		bigint;

c01 CURSOR FOR
SELECT 	cd_procedimento,
	coalesce(ie_origem_proced,1),
	coalesce(ie_calculo_diferenca ,'D'),
	cd_convenio_base,
	cd_categoria_base,
	cd_procedimento_base,
	coalesce(ie_origem_proc_base,1)
from 	tipo_acomod_diferenca
where	cd_tipo_acomodacao 				= cd_tipo_acomodacao_w
and	coalesce(cd_convenio,cd_convenio_p)			= cd_convenio_p
and	coalesce(cd_tipo_acomod_dif, cd_tipo_acomodacao_p) 	= cd_tipo_acomodacao_p
and	((coalesce(ie_paciente_isolado,'A') = 'A') or (coalesce(ie_paciente_isolado,'A') = ie_paciente_isolado_w))
and	coalesce(ie_tipo_convenio, ie_tipo_convenio_w)	= ie_tipo_convenio_w
order by
	cd_convenio desc,
	cd_tipo_acomod_dif desc;

C02 CURSOR FOR
	SELECT	coalesce(cd_procedimento, cd_procedimento_w),
		coalesce(ie_origem_proced, ie_origem_proced_w),
		coalesce(nr_seq_proced_int, nr_seq_proc_interno_w)
	from	tipo_acomod_convenio
	where	cd_tipo_acomodacao 	= cd_tipo_acomodacao_w
  	and	((coalesce(cd_convenio::text, '') = '') or (cd_convenio	= cd_convenio_p))
  	and	((coalesce(cd_categoria::text, '') = '') or (cd_categoria = coalesce(cd_categoria_p, '0')))
	and	coalesce(cd_plano, coalesce(cd_plano_p,'0')) = coalesce(cd_plano_p,'0')
	and	coalesce(qt_dia_int_p,0) 	between qt_dia_inicio and qt_dia_fim
	order by qt_dia_inicio;



BEGIN

vl_diferenca_p			:= 0;
ie_calculo_diferenca_p		:= '';
cd_procedimento_p		:= 0;
ie_origem_proced_p		:= 0;
cd_convenio_base_w		:= 0;
cd_categoria_base_w		:= '';
cd_procedimento_base_w		:= 0;
ie_origem_proc_base_w		:= 0;


ie_paciente_isolado_w:= coalesce(ie_paciente_isolado_p,'A');


---- Obter o tipo de acomodação/procedimento/valor padrão para o convenio/categoria
if (coalesce(cd_tipo_acomod_convenio_p,0) > 0) then
	cd_tipo_acomodacao_w	:= cd_tipo_acomod_convenio_p;
else
	select 	max(cd_tipo_acomodacao)
	into STRICT	cd_tipo_acomodacao_w
	from 	categoria_convenio
	where	cd_convenio 	= cd_convenio_p
	and	cd_categoria	= cd_categoria_p;
end if;

select  max(cd_procedimento),
	max(ie_origem_proced),
	max(nr_seq_proced_int)
into STRICT	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_proc_interno_w
from	tipo_acomodacao
where	cd_tipo_acomodacao = cd_tipo_acomodacao_w;


select	max(ie_tipo_convenio)
into STRICT	ie_tipo_convenio_w
from	convenio
where	cd_convenio		= cd_convenio_p;

OPEN C02;
loop
	fetch C02 into
			cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_proc_interno_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		cd_procedimento_w	:= cd_procedimento_w;
END LOOP;
CLOSE C02;

if (coalesce(cd_procedimento_w,0) > 0) then
	nr_seq_proc_interno_w	:= null;
elsif (coalesce(cd_procedimento_w,0) = 0) and (coalesce(nr_seq_proc_interno_w,0) > 0) then
	SELECT * FROM Obter_Proc_Tab_Interno_Conv(nr_seq_proc_interno_w, cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, coalesce(dt_referencia_p,clock_timestamp()), cd_tipo_acomod_convenio_p, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
end if;

if (coalesce(cd_procedimento_w,0) > 0) then
	SELECT * FROM define_Preco_Servico(
			cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, dt_referencia_p, cd_procedimento_w, 0, 0, cd_tipo_acomodacao_w, cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w, null, vl_Categoria_p, nr_seq_ajuste_proc_w, null, 0, null, nr_seq_proc_interno_w, null, null, null, null, null, null, null, null, null, null) INTO STRICT vl_Categoria_p, nr_seq_ajuste_proc_w;
end if;
---- Obter a regra para gerar a diferença de diaria ----
OPEN C01;
LOOP
	FETCH C01 into
		cd_procedimento_p,
		ie_origem_proced_p,
		ie_calculo_diferenca_p,
		cd_convenio_base_w,
		cd_categoria_base_w,
		cd_procedimento_base_w,
		ie_origem_proc_base_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
END LOOP;
CLOSE C01;

---- Obter o tipo de acomodação/codigo/valor padrão para o convenio/categoria base-
if (ie_calculo_diferenca_p = 'B') then
	begin
	if (coalesce(cd_convenio_base_w::text, '') = '') or (coalesce(cd_categoria_base_w::text, '') = '') then
		SELECT * FROM obter_convenio_particular(cd_estabelecimento_p, cd_convenio_base_w, cd_categoria_base_w) INTO STRICT cd_convenio_base_w, cd_categoria_base_w;
	end if;
	if (cd_procedimento_base_w > 0) then
		begin
		cd_procedimento_w		:= cd_procedimento_base_w;
		ie_origem_proced_w	:= ie_origem_proc_base_w;
		end;
	else
		begin
		select 	max(cd_tipo_acomodacao)
		into STRICT	cd_tipo_acomodacao_w
		from	categoria_convenio
		where	cd_convenio 	= cd_convenio_base_w
		and	cd_categoria	= cd_categoria_base_w;

		select 	max(cd_procedimento),
			max(ie_origem_proced),
			max(nr_seq_proced_int)
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w		,
			nr_seq_proc_interno_ww
		from	tipo_acomodacao
		where	cd_tipo_acomodacao = cd_tipo_acomodacao_w;

		if (coalesce(cd_procedimento_w,0) > 0) then
			nr_seq_proc_interno_ww	:= null;
		elsif (coalesce(cd_procedimento_w,0) = 0) and (coalesce(nr_seq_proc_interno_ww,0) > 0) then
			SELECT * FROM Obter_Proc_Tab_Interno_Conv(nr_seq_proc_interno_ww, cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, coalesce(dt_referencia_p,clock_timestamp()), cd_tipo_acomod_convenio_p, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
		end if;

		end;
	end if;

	if (coalesce(cd_procedimento_w,0) > 0) then
		SELECT * FROM define_Preco_Servico(
			cd_estabelecimento_p, cd_convenio_base_w, cd_categoria_base_w, dt_referencia_p, cd_procedimento_w, 0, 0, cd_tipo_acomodacao_w, cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w, null, vl_Alternativo_w, nr_seq_ajuste_proc_w, null, 0, null, nr_seq_proc_interno_ww, null, null, null, null, null, null, null, null, null, null) INTO STRICT vl_Alternativo_w, nr_seq_ajuste_proc_w;
	end if;
	vl_diferenca_p	:= vl_alternativo_w - vl_categoria_p;
	end;
end if;

---- Obter o tipo de acomodação/codigo/valor padrão para o convenio/categoria informado----
if (ie_calculo_diferenca_p = 'D') then
	begin
	select 	max(cd_procedimento),
		max(ie_origem_proced),
		max(nr_seq_proced_int)
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w		,
		nr_seq_proc_interno_ww
	from	tipo_acomodacao
	where	cd_tipo_acomodacao = cd_tipo_acomodacao_p;

	if (coalesce(cd_procedimento_w,0) > 0) then
		nr_seq_proc_interno_ww	:= null;
	elsif (coalesce(cd_procedimento_w,0) = 0) and (coalesce(nr_seq_proc_interno_ww,0) > 0) then
		SELECT * FROM Obter_Proc_Tab_Interno_Conv(nr_seq_proc_interno_ww, cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, coalesce(dt_referencia_p,clock_timestamp()), cd_tipo_acomod_convenio_p, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
	end if;

	if (coalesce(cd_procedimento_w,0) > 0) then
		SELECT * FROM define_Preco_Servico(
				cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, dt_referencia_p, cd_procedimento_w, 0, 0, cd_tipo_acomodacao_p, cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w, null, vl_Alternativo_w, nr_seq_ajuste_proc_w, null, 0, null, nr_seq_proc_interno_ww, null, null, null, null, null, null, null, null, null, null) INTO STRICT vl_Alternativo_w, nr_seq_ajuste_proc_w;
	end if;
	vl_diferenca_p	:= vl_alternativo_w - vl_categoria_p;
	end;
end if;

---- Obter o valor do procedimento específico para a diferenca ----
if (ie_calculo_diferenca_p = 'V') and (coalesce(cd_procedimento_p,0) > 0) then
	begin
	SELECT * FROM define_Preco_Servico(
			cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, dt_referencia_p, cd_procedimento_p, 0, 0, cd_tipo_acomodacao_p, cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w, null, vl_diferenca_p, nr_seq_ajuste_proc_w, null, 0, null, null, null, null, null, null, null, null, null, null, null, null) INTO STRICT vl_diferenca_p, nr_seq_ajuste_proc_w;
	end;
end if;

---- Obter o valor do procedimento específico para no convenio base ----
if (ie_calculo_diferenca_p = 'P') and (coalesce(cd_procedimento_base_w,0) > 0) then
	begin
	SELECT * FROM define_Preco_Servico(
			cd_estabelecimento_p, cd_convenio_base_w, cd_categoria_base_w, dt_referencia_p, cd_procedimento_base_w, 0, 0, cd_tipo_acomodacao_w, cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w, null, vl_diferenca_p, nr_seq_ajuste_proc_w, null, 0, null, null, null, null, null, null, null, null, null, null, null, null) INTO STRICT vl_diferenca_p, nr_seq_ajuste_proc_w;
	cd_procedimento_p		:= cd_procedimento_base_w;
	ie_origem_proced_p	:= ie_origem_proc_base_w;
	end;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_diferenca_diaria ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_plano_p text, cd_tipo_acomod_convenio_p bigint, cd_tipo_acomodacao_p bigint, dt_referencia_p timestamp, qt_dia_Int_p bigint, ie_paciente_isolado_p text, cd_procedimento_p INOUT bigint, ie_origem_proced_p INOUT bigint, vl_Categoria_p INOUT bigint, vl_diferenca_p INOUT bigint, ie_calculo_diferenca_p INOUT text) FROM PUBLIC;

