-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prescr_hor_sem_lib ( nr_prescricao_p bigint, nr_Seq_item_p bigint, cd_perfil_p bigint, ie_liberacao_p text, nm_ususario_p text, ie_tipo_item_p text default null) AS $body$
DECLARE



ds_horarios_w			varchar(2000);
ds_horarios_padr_w		varchar(2000);
ds_hora_w			varchar(2000);
dt_liberacao_w			timestamp;
dt_horario_w			timestamp;	
k				integer;
y				integer;
nr_sequencia_w			bigint;
nr_seq_prescr_w			integer;
qt_dose_w			double precision;
qt_total_dispensar_w		double precision;
cd_material_w			integer;
dt_primeiro_horario_w		timestamp;
ie_agrupador_w			smallint;
cd_intervalo_w			varchar(7);
ie_urgencia_w			varchar(1);
ie_prescricao_dieta_w		varchar(1);
nr_ocorrencia_w			double precision;
ie_esquema_alternado_w		varchar(1);
nr_seq_solucao_w		integer;

ie_agrupador_dil_w		smallint;
nr_sequencia_dil_w		bigint;
qt_dose_dil_w			double precision;
qt_total_disp_dil_w		double precision;
nr_ocorrencia_dil_w		double precision;
cd_material_dil_w		integer;
hr_prim_horario_w		varchar(5);
ie_urgente_w			varchar(1);
qt_conversao_w			double precision;
qt_dose_especial_w		double precision;
hr_dose_especial_w		varchar(5);

/* Rafael em 12/09/06 Funcionalidades da Administracao da Prescricao (ATEPAC_PG) */

nr_seq_procedimento_w		integer;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_proc_interno_w		bigint;
nr_ocor_proc_w			double precision;
ie_proc_urgente_w		varchar(1);
dt_prev_execucao_w		timestamp;
ds_hora_proc_w			varchar(2000);
dt_horario_proc_w		timestamp;
ds_horarios_proc_w		varchar(2000);
ds_horarios_padrao_proc_w	varchar(2000);
cd_material_exame_w		varchar(20);

nr_seq_recomendacao_w		integer;
cd_recomendacao_w		bigint;
ds_hora_rec_w			varchar(2000);
dt_horario_rec_w		timestamp;
nr_seq_classif_rec_w		bigint;
ds_horarios_rec_w		varchar(2000);
ds_horarios_padrao_rec_w	varchar(2000);
/* Fim Rafael em 12/09/06 */



/* Rafael em 07/10/2006 Funcionalidades da Administracao da Prescricao -> Identificar horarios especiais (SN, ACM e sem Horario) */

ie_se_necessario_w		varchar(1);
ie_acm_w			varchar(1);
ie_horario_especial_w		varchar(1) := 'N';
qt_dieta_w			bigint;
cd_setor_atendimento_w		integer;
cd_estabelecimento_w		smallint;
dt_prescricao_w			timestamp;
dt_prescricao_ww		timestamp;
qT_dia_adic_w			bigint := 0;
qt_registro_w			bigint;
dt_inicio_prescr_w		timestamp;

nr_seq_procedimento_novo_w	integer;
nr_seq_exame_w			bigint;
ie_status_atend_w		smallint;
ie_status_execucao_w		varchar(3);
cd_setor_atendimento_proc_w	integer;
cd_setor_coleta_w		integer;
cd_setor_entrega_w      	integer;
cd_setor_exec_fim_w      	integer;
cd_setor_exec_inic_w      	integer;
nr_seq_lab_w			varchar(20);
ie_gerar_proc_intervalo_w	varchar(1);
ie_suspenso_w			varchar(1);
ds_observacao_w			varchar(2000);
ds_dado_clinico_w		varchar(2000);
ds_material_especial_w		varchar(255);
ie_controlado_w			varchar(1);

nr_seq_prescr_hor_w		integer;
dt_horario_proc_prev_w		timestamp;
ie_proc_atual_w			varchar(1);
qt_min_agora_w			bigint;
qt_min_especial_w		bigint;
ie_classif_urgente_w		varchar(3);
dt_limite_agora_w		timestamp;
dt_limite_especial_w		timestamp;
nr_seq_classif_w		bigint;
dt_liberacao_farmacia_w		timestamp;
ie_lib_individual_w		varchar(1);
dt_suspensao_progr_w		timestamp;
qt_hor_w			bigint;
qt_dia_prim_hor_w		bigint;
cd_funcao_origem_w		funcao.cd_funcao%type;

/* Rafael em 12/09/06 - Funcionalidades da Administracao da Prescricao */

c14 CURSOR FOR
SELECT	b.nr_sequencia,
	b.cd_recomendacao,
	b.nr_seq_classif,
	b.ds_horarios,
	--padroniza_horario(b.ds_horarios)
	padroniza_horario_prescr(b.ds_horarios, CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END ),
	coalesce(b.ie_urgencia,'N'),
	b.dt_suspensao_progr,
	coalesce(b.ie_se_necessario,'N'),
	coalesce(qt_dia_prim_hor,0)
from	prescr_recomendacao b,
	prescr_medica a
where	a.nr_prescricao	= nr_prescricao_p
and	((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and	a.nr_prescricao	= b.nr_prescricao
and	coalesce(a.dt_suspensao::text, '') = ''
and	((ie_tipo_item_p = 'R') or (coalesce(ie_tipo_item_p::text, '') = ''))
and		coalesce(b.ie_suspenso,'N') <> 'S'
and		coalesce(b.ie_gerar_horario, 'S') <> 'N';


BEGIN

select	coalesce(dt_liberacao,dt_liberacao_medico),
	dt_primeiro_horario,
	cd_setor_atendimento,
	coalesce(cd_estabelecimento,1),
	trunc(dt_prescricao,'mi'),
	dt_inicio_prescr,
	dt_liberacao_farmacia,
	cd_funcao_origem
into STRICT	dt_liberacao_w,
	dt_primeiro_horario_w,
	cd_setor_atendimento_w,
	cd_estabelecimento_w,
	dt_prescricao_w,
	dt_inicio_prescr_w,
	dt_liberacao_farmacia_w,
	cd_funcao_origem_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

delete
from	prescr_rec_hor
where	nr_prescricao  = nr_prescricao_p
and 	coalesce(dt_lib_horario::text, '') = ''
and	((nr_seq_recomendacao = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0));
	
ie_gerar_proc_intervalo_w := obter_Param_Usuario(924, 192, cd_perfil_p, nm_ususario_p, cd_estabelecimento_w, ie_gerar_proc_intervalo_w);
ie_lib_individual_w := obter_param_usuario(924, 530, cd_perfil_p, nm_ususario_p, cd_estabelecimento_w, ie_lib_individual_w);

qt_dia_adic_w	:= 0;

open c14;
loop
fetch c14 into	nr_seq_recomendacao_w,
		cd_recomendacao_w,
		nr_seq_classif_rec_w,
		ds_horarios_rec_w,
		ds_horarios_padrao_rec_w,
		ie_urgencia_w,
		dt_suspensao_progr_w,
		ie_se_necessario_w,
		qt_dia_prim_hor_w;
	EXIT WHEN NOT FOUND; /* apply on c14 */
	begin
	
	qt_dia_adic_w	:= qt_dia_prim_hor_w;

	if (ds_horarios_padrao_rec_w IS NOT NULL AND ds_horarios_padrao_rec_w::text <> '') then
		begin
		while	(ds_horarios_padrao_rec_w IS NOT NULL AND ds_horarios_padrao_rec_w::text <> '') loop
			begin
			select	position(' ' in ds_horarios_padrao_rec_w)
			into STRICT	k
			;

			if (k > 1) and ((substr(ds_horarios_padrao_rec_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padrao_rec_w, 1, k -1))::text <> '')) then
				ds_hora_rec_w			:= substr(ds_horarios_padrao_rec_w, 1, k-1);
				ds_hora_rec_w			:= replace(ds_hora_rec_w, ' ','');
				ds_horarios_padrao_rec_w	:= substr(ds_horarios_padrao_rec_w, k + 1, 2000);
			elsif (ds_horarios_padrao_rec_w IS NOT NULL AND ds_horarios_padrao_rec_w::text <> '') then
				ds_hora_rec_w			:= replace(ds_horarios_padrao_rec_w,' ','');
				ds_horarios_padrao_rec_w	:= '';
			end if;
			
			if (position('A' in ds_hora_rec_w) > 0) and (qt_dia_adic_w = 0) and (ie_urgencia_w = 'N') then
				qt_dia_adic_w	:= 1;
			elsif (position('AA' in ds_hora_rec_w) > 0) and (ie_urgencia_w = 'N') then
				qt_dia_adic_w	:= 2;
			end if;

			ds_hora_rec_w	:= replace(ds_hora_rec_w,'A','');
			ds_hora_rec_w	:= replace(ds_hora_rec_w,'A','');
			begin
			dt_horario_rec_w	:= trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_inicio_prescr_w, coalesce(replace(ds_hora_rec_w,'A',''), '00:00')), 'mi') + qt_dia_adic_w;			
			exception
			when others then
			exit;
			end;

			if (dt_suspensao_progr_w > dt_horario_rec_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then							
			
				select	count(*)
				into STRICT	qt_hor_w
				from	prescr_rec_hor
				where	nr_prescricao 		= nr_prescricao_p
				and	nr_seq_recomendacao	= nr_seq_recomendacao_w
				and	dt_horario		= dt_horario_rec_w;
			
				if (qt_hor_w	= 0) then

					select	nextval('prescr_rec_hor_seq')
					into STRICT	nr_sequencia_w
					;

					/* Rafael em 07/10/2006 Identificar horarios especiais */

					ie_horario_especial_w	:= ie_se_necessario_w;
			
					insert into prescr_rec_hor(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_prescricao,
						nr_seq_recomendacao,
						cd_recomendacao,
						ds_horario,
						dt_horario,
						nr_seq_classificacao,
						ie_horario_especial,
						ie_aprazado)
					values (
						nr_sequencia_w,
						clock_timestamp(),
						nm_ususario_p,
						clock_timestamp(),
						nm_ususario_p,
						nr_prescricao_p,
						nr_seq_recomendacao_w,
						cd_recomendacao_w,
						ds_hora_rec_w,
						dt_horario_rec_w,
						nr_seq_classif_rec_w,
						coalesce(ie_horario_especial_w,'N'),
						'N');

						-- Only first hour may be processed as urgent in CPOE
						if (ie_urgencia_w = 'S') and (cd_funcao_origem_w = 2314) then 	
							ie_urgencia_w := 'N';
						end if;
				
				end if;

			end if;		
			end;
		end loop;
		end;
	else		
		ds_hora_rec_w		:= coalesce(hr_prim_horario_w, substr(to_char(dt_primeiro_horario_w,'dd/mm/yyyy hh24:mi:ss'),12,5));
		dt_horario_rec_w	:= trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(coalesce(dt_inicio_prescr_w, dt_prescricao_w), coalesce(ds_hora_rec_w, '00:00')), 'mi') + qt_dia_prim_hor_w;

		if (dt_suspensao_progr_w > dt_horario_rec_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then									

			select	count(*)
			into STRICT	qt_hor_w
			from	prescr_rec_hor
			where	nr_prescricao 		= nr_prescricao_p
			and	nr_seq_recomendacao	= nr_seq_recomendacao_w
			and	dt_horario		= dt_horario_rec_w;
			
			if (qt_hor_w	= 0) then

				select	nextval('prescr_rec_hor_seq')
				into STRICT	nr_sequencia_w
				;
	
				ie_horario_especial_w	:= 'S';
				
				insert into prescr_rec_hor(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_prescricao,
					nr_seq_recomendacao,
					cd_recomendacao,
					ds_horario,
					dt_horario,
					nr_seq_classificacao,
					ie_horario_especial,
					ie_aprazado)
				values (
					nr_sequencia_w,
					clock_timestamp(),
					nm_ususario_p,
					clock_timestamp(),
					nm_ususario_p,
					nr_prescricao_p,
					nr_seq_recomendacao_w,
					cd_recomendacao_w,
					ds_hora_rec_w,
					dt_horario_rec_w,
					nr_seq_classif_rec_w,
					coalesce(ie_horario_especial_w,'S'),
					'N');
			end if;
		end if;		
	end if;
	end;
end loop;
close c14;

if (ie_liberacao_p = 'S') and (ie_lib_individual_w = 'S') then
	update	prescr_rec_hor
	set	dt_lib_horario = clock_timestamp()
	where	nr_prescricao = nr_prescricao_p
	and	((nr_seq_recomendacao = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
	and	coalesce(dt_lib_horario::text, '') = '';
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescr_hor_sem_lib ( nr_prescricao_p bigint, nr_Seq_item_p bigint, cd_perfil_p bigint, ie_liberacao_p text, nm_ususario_p text, ie_tipo_item_p text default null) FROM PUBLIC;

