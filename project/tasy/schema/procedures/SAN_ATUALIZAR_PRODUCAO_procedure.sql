-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_atualizar_producao ( nr_seq_producao_p bigint, data_producao_p timestamp, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE

 
ie_grava_realizado_por_w	varchar(1);
cd_pf_realizou_w		varchar(10);
ie_inicia_prod_todos_w		varchar(1);
nr_seq_doacao_w			san_doacao.nr_sequencia%type;


BEGIN 
 
if (nr_seq_producao_p IS NOT NULL AND nr_seq_producao_p::text <> '') then 
 
--Forma de atualizar as informações de início e fim de produção do hemocomponente. S: Apenas do hemocomponente selecionado [valor padrão] - T: Todos os hemocomponentes de uma só vez 
ie_inicia_prod_todos_w := obter_param_usuario(450, 500, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_inicia_prod_todos_w);
 
	 
 
	if (ie_opcao_p = 'I') then 
	 
		ie_grava_realizado_por_w := obter_param_usuario(450, 292, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_grava_realizado_por_w);
		 
		if (ie_grava_realizado_por_w = 'S') then 
			cd_pf_realizou_w := Obter_Pf_Usuario(nm_usuario_p,'C');
		end if;
		 
		if (coalesce(ie_inicia_prod_todos_w, 'S') = 'T') then 
			 
			select	max(nr_seq_doacao) 
			into STRICT	nr_seq_doacao_w 
			from	san_producao 
			where 	nr_sequencia = nr_seq_producao_p;
			 
			update 	san_producao 
			set	dt_inicio_producao 	= clock_timestamp(), 
				nm_usuario_ini_producao	= nm_usuario_p, 
				cd_pf_realizou		= coalesce(cd_pf_realizou_w, cd_pf_realizou) 
			where 	nr_seq_doacao		= nr_seq_doacao_w 
			and	coalesce(nr_seq_inutil::text, '') = '' 
			and	coalesce(dt_inicio_producao::text, '') = '';
			 
		else 
		 
			update 	san_producao 
			set	dt_inicio_producao 	= clock_timestamp(), 
				nm_usuario_ini_producao	= nm_usuario_p, 
				cd_pf_realizou		= coalesce(cd_pf_realizou_w, cd_pf_realizou) 
			where 	nr_sequencia		= nr_seq_producao_p;
			 
		end if;
	 
	else 
	 
		if (coalesce(ie_inicia_prod_todos_w, 'S') = 'T') then 
		 
			select	max(nr_seq_doacao) 
			into STRICT	nr_seq_doacao_w 
			from	san_producao 
			where 	nr_sequencia = nr_seq_producao_p;
		 
			update 	san_producao 
			set	dt_fim_producao		= clock_timestamp(), 
				nm_usuario_fim_producao	= nm_usuario_p 
			where	nr_seq_doacao = nr_seq_doacao_w 
			and	coalesce(nr_seq_inutil::text, '') = '' 
			and	(dt_inicio_producao IS NOT NULL AND dt_inicio_producao::text <> '') 
			and 	coalesce(dt_fim_producao::text, '') = '';
		 
		else 
		 
			update 	san_producao 
			set	dt_fim_producao		= clock_timestamp(), 
				nm_usuario_fim_producao	= nm_usuario_p 
			where 	nr_sequencia		= nr_seq_producao_p;
			 
		end if;
	end if;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_atualizar_producao ( nr_seq_producao_p bigint, data_producao_p timestamp, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

