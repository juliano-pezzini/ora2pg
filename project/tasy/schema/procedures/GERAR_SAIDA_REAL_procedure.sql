-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_saida_real ( nm_usuario_p text, nr_atendimento_p bigint, dt_saida_real_p timestamp, ds_justificativa_p text) AS $body$
DECLARE


ie_gera_eritel_w		varchar(3);
cd_estabelecimento_w		integer;
cd_setor_atendimento_w		bigint;
cd_unidade_basica_w		varchar(10);
cd_unidade_compl_w		varchar(10);
nr_seq_unidade_w		bigint;
ie_data_alta_saida_real_w	varchar(3);
dt_alta_w			timestamp;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
nr_seq_evento_w			regra_envio_sms.nr_seq_evento%type;
ds_origem_w			varchar(1800);
ds_erro_w			varchar(2000);
ie_gerar_checkout_voice_w varchar(40);
ie_gerar_adt_a03_w		  varchar(5);
ie_gerar_adt_a03_evn4_w varchar(2);
nr_resultado_w            integer;
ie_setor_rothman_w			varchar(1);
ie_leito_monit_w			varchar(1);
qt_reg_w				bigint;
ds_param_integ_hl7_w		varchar(4000);
ds_sep_bv_w			varchar(100);
nr_seq_interno_w			bigint;
cd_classif_setor_w			varchar(2);


c01 CURSOR FOR
	SELECT	a.nr_seq_evento
	from	regra_envio_sms a
	where	a.cd_estabelecimento	= obter_estabelecimento_ativo
	and	a.ie_evento_disp	= 'ASR'
	and	coalesce(ie_situacao,'A')	= 'A';


BEGIN
CALL atualizar_status_leito_se(nr_atendimento_p,nm_usuario_p);
ds_sep_bv_w 				:= obter_separador_bv;

begin

	select 	cd_setor_atendimento,
		cd_unidade_basica,
		cd_unidade_compl
	into STRICT	cd_setor_atendimento_w,
		cd_unidade_basica_w,
		cd_unidade_compl_w
	from	atend_paciente_unidade
	where	nr_atendimento = nr_atendimento_p
	and	nr_seq_interno = (	SELECT	max(nr_seq_interno)
					from	atend_paciente_unidade
					where 	nr_atendimento = nr_atendimento_p
					and	coalesce(ie_passagem_setor,'N') <> 'S');
exception
	when	no_data_found then
			cd_setor_atendimento_w	:= 0;
			cd_unidade_basica_w	:= 0;
			cd_unidade_compl_w	:= 0;
end;
				
begin
	select	nr_seq_interno
	into STRICT	nr_seq_unidade_w
	from	unidade_atendimento
	where	cd_setor_atendimento 	= cd_setor_atendimento_w
	and	cd_unidade_basica 	= cd_unidade_basica_w
	and	cd_unidade_compl  	= cd_unidade_compl_w
	and	nr_atendimento    	= nr_atendimento_p;
exception
	when	no_data_found then
			nr_seq_unidade_w := 0;
end;

if (nr_seq_unidade_w > 0) then	
	CALL wheb_mensagem_pck.exibir_mensagem_abort(203704);
end if;

select coalesce(max(b.ie_data_alta_saida_real),'N'),
	max(a.dt_alta)
into STRICT	ie_data_alta_saida_real_w,
	dt_alta_w
from	atendimento_paciente a,
	motivo_alta b
where 	a.cd_motivo_alta = b.cd_motivo_alta
and	a.nr_atendimento = nr_atendimento_p;

if (ie_data_alta_saida_real_w = 'S') and (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') 	then
	update	atendimento_paciente
	set	dt_saida_real	 	=	dt_alta,
		nm_usuario_saida 	= 	nm_usuario_p,
		nm_usuario	 	=	nm_usuario_p,
		dt_atualizacao	 	= 	clock_timestamp(),
		ds_justif_saida_real 	=	substr(ds_justificativa_p,1,255)
	where	nr_atendimento		=	nr_atendimento_p
	and	coalesce(dt_saida_real::text, '') = '';

else

	update	atendimento_paciente
	set	dt_saida_real	 	=	coalesce(dt_saida_real_p,clock_timestamp()),
		nm_usuario_saida 	= 	nm_usuario_p,
		nm_usuario	 	=	nm_usuario_p,
		dt_atualizacao	 	= 	clock_timestamp(),
		ds_justif_saida_real 	=	substr(ds_justificativa_p,1,255)
	where	nr_atendimento		=	nr_atendimento_p
	and	coalesce(dt_saida_real::text, '') = '';

end if;

CALL Gravar_Hist_Alta_Saida_Real(nr_atendimento_p, SUBSTR(ds_justificativa_p,1,255), coalesce(dt_saida_real_p,clock_timestamp()), nm_usuario_p);

ie_gera_eritel_w := 	Obter_Valor_Param_Usuario(3111,109, obter_perfil_ativo, nm_usuario_p,0);

IF 	((ie_gera_eritel_w = 'AT') or (ie_gera_eritel_w = 'AR')) AND (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then

	select cd_estabelecimento
	into STRICT   cd_estabelecimento_w
	from   atendimento_paciente
	where  nr_atendimento = nr_atendimento_p;
		
	begin
	
		SELECT 	cd_setor_atendimento,
			cd_unidade_basica,
			cd_unidade_compl
		INTO STRICT	cd_setor_atendimento_w,
			cd_unidade_basica_w,
			cd_unidade_compl_w
		FROM	atend_paciente_unidade
		WHERE	nr_atendimento = nr_atendimento_p
		AND	nr_seq_interno = (	SELECT	MAX(nr_seq_interno)
						FROM	atend_paciente_unidade
						WHERE 	nr_atendimento = nr_atendimento_p
						and	coalesce(ie_passagem_setor,'N') <> 'S');
	exception
	when	no_data_found then
			cd_setor_atendimento_w	:= 0;
			cd_unidade_basica_w	:= 0;
			cd_unidade_compl_w	:= 0;
	end;
	
	if (coalesce(cd_setor_atendimento_w,0) > 0) and (cd_unidade_basica_w IS NOT NULL AND cd_unidade_basica_w::text <> '') and (cd_unidade_compl_w IS NOT NULL AND cd_unidade_compl_w::text <> '') then
		
		CALL Insere_W_integracao_eritel(cd_setor_atendimento_w,
						cd_unidade_basica_w,
						cd_unidade_compl_w,
						nr_atendimento_p,
						'N',
						nm_usuario_p,
						cd_estabelecimento_w);
						
	end if;
END IF;

ie_gerar_checkout_voice_w := Obter_param_Usuario(3111, 331, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_checkout_voice_w);

if (coalesce(ie_gerar_checkout_voice_w, 'A') = 'S') and (coalesce(nr_atendimento_p,0) > 0) then

	select  count(*)
	into STRICT    nr_resultado_w
	from    integra_voice_hcs
	where   ie_evento = 'CO'
	and     nr_atendimento = nr_atendimento_p;
	
	if (nr_resultado_w = 0) then

		select max(cd_estabelecimento)
		into STRICT   cd_estabelecimento_w
		from   atendimento_paciente
		where  nr_atendimento = nr_atendimento_p;
		
		begin
		
			SELECT 	cd_setor_atendimento,
				cd_unidade_basica,
				cd_unidade_compl
			INTO STRICT	cd_setor_atendimento_w,
				cd_unidade_basica_w,
				cd_unidade_compl_w
			FROM	atend_paciente_unidade
			WHERE	nr_atendimento = nr_atendimento_p
			AND	nr_seq_interno = (	SELECT	MAX(nr_seq_interno)
							FROM	atend_paciente_unidade
							WHERE 	nr_atendimento = nr_atendimento_p
							and	coalesce(ie_passagem_setor,'N') <> 'S');
		exception
		when	no_data_found then
				cd_setor_atendimento_w	:= 0;
				cd_unidade_basica_w	:= 0;
				cd_unidade_compl_w	:= 0;
		end;

		if (coalesce(cd_setor_atendimento_w,0) > 0) and (cd_unidade_basica_w IS NOT NULL AND cd_unidade_basica_w::text <> '') and (cd_unidade_compl_w IS NOT NULL AND cd_unidade_compl_w::text <> '') then
			insert into integra_voice_hcs(NR_SEQUENCIA,
				DT_ATUALIZACAO,
				NM_USUARIO,
				DT_ATUALIZACAO_NREC,
				NM_USUARIO_NREC,
				NR_ATENDIMENTO,
				CD_SETOR_ATEND_ANT,
				CD_UNID_BASIC_ANT,
				CD_UNID_COMPL_ANT,
				CD_SETOR_ATENDIMENTO,
				CD_UNIDADE_BASICA,
				CD_UNIDADE_COMPL,
				IE_STATUS_UNIDADE,
				IE_EVENTO,
				DS_MENSAGEM)
			values (
				nextval('integra_voice_hcs_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_atendimento_p,
				null,
				null,
				null,
				cd_setor_atendimento_w,
				cd_unidade_basica_w,
				cd_unidade_compl_w,
				null,
				'CO',
				null);
		end if;
	end if;
	
end if;

begin
	select	max(cd_pessoa_fisica)
	into STRICT 	cd_pessoa_fisica_w
	from 	atendimento_paciente
	where 	nr_atendimento = nr_atendimento_p;

	open c01;
	loop
	fetch c01 into	
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		CALL gerar_evento_paciente_trigger(nr_seq_evento_w,nr_atendimento_p,cd_pessoa_fisica_w,null,nm_usuario_p);
		end;
	end loop;
	close c01;
	
exception
when others then
	ds_erro_w	:= SQLERRM(SQLSTATE);
	ds_origem_w := substr(dbms_utility.format_call_stack,1,1800);
	insert into log_mov(
		dt_atualizacao,
		nm_usuario,
		cd_log,
		ds_log)
	values (	clock_timestamp(),
		'SaidaReal',
		1428,
		nr_atendimento_p || '-' || cd_pessoa_fisica_w || '-' || chr(13) ||
		'Erro: ' || chr(13) || 
		ds_erro_w || chr(13) ||
		'Stack: ' || chr(13) || 
		ds_origem_w);
end;

select	max(ie_setor_rothman), max(cd_classif_setor)
into STRICT	ie_setor_rothman_w, cd_classif_setor_w
from	setor_atendimento
where	cd_setor_atendimento	= cd_setor_atendimento_w;

select	coalesce(obter_se_leito_atual_monit(nr_atendimento_p),'N')
into STRICT	ie_leito_monit_w
;

select	count(*)
into STRICT	qt_reg_w
from	atend_paciente_unidade a,
		unidade_atendimento b
where	a.nr_atendimento	= nr_atendimento_p
and		a.cd_setor_atendimento = b.cd_setor_atendimento
and		a.CD_UNIDADE_BASICA = b.CD_UNIDADE_BASICA
and		a.CD_UNIDADE_COMPL =  b.CD_UNIDADE_COMPL
and		b.IE_LEITO_MONITORADO = 'S';

select	coalesce(max(nr_seq_interno),0)
into STRICT	nr_seq_interno_w
from 	atend_paciente_unidade a
where	a.nr_atendimento 		= nr_atendimento_p
and coalesce(a.dt_saida_unidade, a.dt_entrada_unidade + 9999)	=
(SELECT max(coalesce(b.dt_saida_unidade, b.dt_entrada_unidade + 9999))
		from atend_paciente_unidade b
		where b.nr_atendimento 	= nr_atendimento_p);

ie_gerar_adt_a03_w := Obter_param_Usuario(3111, 337, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_adt_a03_w);

	/* ADT_A03 */

if ((ie_leito_monit_w = 'S')	or (ie_setor_rothman_w	= 'S') or (qt_reg_w	> 0)) and (coalesce(ie_gerar_adt_a03_w, 'A') = 'S') then

			ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_p || ds_sep_bv_w ||
						'nr_seq_interno=' || nr_seq_interno_w || ds_sep_bv_w||
						'cd_pessoa_fisica=' || cd_pessoa_fisica_w || ds_sep_bv_w;
			CALL wheb_usuario_pck.set_ie_commit('N');
			CALL gravar_agend_integracao(69, ds_param_integ_hl7_w,cd_setor_atendimento_w);
			CALL wheb_usuario_pck.set_ie_commit('S');
			
			CALL call_bifrost_content('patient.discharge.monitor','encounter_json_pck.get_encounter_message_clob('||nr_atendimento_p||')', nm_usuario_p);
			CALL wheb_usuario_pck.set_ie_commit('S');
			
end if;

ie_gerar_adt_a03_evn4_w := Obter_param_Usuario(3111, 338, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_adt_a03_evn4_w);

if (cd_classif_setor_w in (3,4,5)
	and coalesce(ie_gerar_adt_a03_evn4_w, 'A') = 'S') then
			begin
			ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_p || ds_sep_bv_w ||
						'nr_seq_interno=' || nr_seq_interno_w || ds_sep_bv_w||
						'cd_pessoa_fisica=' || cd_pessoa_fisica_w || ds_sep_bv_w;
			CALL wheb_usuario_pck.set_ie_commit('N');
			CALL gravar_agend_integracao(4, ds_param_integ_hl7_w,cd_setor_atendimento_w);
			CALL wheb_usuario_pck.set_ie_commit('S');
			end;
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_saida_real ( nm_usuario_p text, nr_atendimento_p bigint, dt_saida_real_p timestamp, ds_justificativa_p text) FROM PUBLIC;

