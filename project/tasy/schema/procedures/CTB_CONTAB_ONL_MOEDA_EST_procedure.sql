-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_contab_onl_moeda_est ( nm_usuario_p text, nr_seq_mes_ref_p bigint, cd_estabelecimento_p bigint ) AS $body$
DECLARE

/*
===============================================================================
Purpose: Indentacao

Remarks: n/a

Who         When            What
----------  -----------     --------------------------------------------------
chjreinert  13/mai/2021     OS 2444975 - Indentacao

===============================================================================
*/
dt_atualizacao_saldo_w          lote_contabil.dt_atualizacao_saldo%type;
dt_referencia_lote_w            lote_contabil.dt_referencia%type;
cd_empresa_w                    estabelecimento.cd_empresa%type;
nr_seq_mes_ref_w                ctb_mes_ref.nr_sequencia%type;
vl_saldo_w                      ctb_saldo.vl_saldo%type;
cd_conta_credito_w              conta_contabil.cd_conta_contabil%type;
cd_conta_debito_w               conta_contabil.cd_conta_contabil%type;
vl_cotacao_w                    cotacao_moeda.vl_cotacao%type;
cd_tipo_lote_contabil_w         lote_contabil.cd_tipo_lote_contabil%type  := 53;/* Lote Moeda Est */
nr_lote_contabil_w              lote_contabil.nr_lote_contabil%type;
qt_registro_w                   bigint;
ctb_movimento_doc_w             ctb_online_pck.ctb_movimento_doc;
sequencia_w                     dbms_sql.number_table;
ds_erro_w                       varchar(255)   := null;
vl_recebimento_estrang_w        double precision;
vl_saldo_auxiliar_w             double precision;
vl_saldo_rec_aux_w              double precision;
vl_saldo_rec_cotacao_w          double precision;
vl_saldo_moeda_w                double precision;
vl_movimento_w                  double precision;

c010 CURSOR FOR
    SELECT  cd_conta_auxiliar,
            cd_conta_cred_perda,
            cd_conta_cred_receita,
            cd_conta_deb_perda,
            cd_conta_deb_receita,
            cd_conta_rec_estrang,
            cd_empresa,
            cd_estabelecimento,
            cd_historico,
            ds_titulo,
            dt_fim_vigencia,
            dt_inicio_vigencia,
            nr_sequencia,
            cd_moeda
    from    ctb_regra_lote_moeda_est a
    where   a.cd_estabelecimento    = cd_estabelecimento_p
    and     substr(obter_se_periodo_vigente(a.dt_inicio_vigencia, a.dt_fim_vigencia, dt_referencia_lote_w),1,1) = 'S';

c010_w          c010%rowtype;

procedure get_sequence is

  vet RECORD;

BEGIN

if (sequencia_w.count > 0) then
        ctb_movimento_doc_w.nr_sequencia        := sequencia_w(sequencia_w.count);
        sequencia_w.delete(sequencia_w.count);
else
        ctb_movimento_doc_w.nr_sequencia        := null;
end if;
exception when others then
        ctb_movimento_doc_w.nr_sequencia        := null;
end;

begin
cd_empresa_w    := obter_empresa_estab(cd_estabelecimento_p);

<<atribuir_data_referencia>>
begin
	select  fim_mes(a.dt_referencia)
	into STRICT    dt_referencia_lote_w
	from    ctb_mes_ref a
	where   a.nr_sequencia  = nr_seq_mes_ref_p
	and     a.cd_empresa    = cd_empresa_w;
	exception when no_data_found then
        	dt_referencia_lote_w  := null;
end;

/* Gera Lote Contabil */

nr_lote_contabil_w := ctb_online_pck.get_lote_contabil( cd_tipo_lote_contabil_w,
                                        cd_estabelecimento_p,
                                        dt_referencia_lote_w,
                                        nm_usuario_p);

select  count(nr_sequencia)
into STRICT    qt_registro_w
from    ctb_movimento
where   nr_lote_contabil        = nr_lote_contabil_w;

begin
select  dt_atualizacao_saldo
into STRICT    dt_atualizacao_saldo_w
from    lote_contabil
where   nr_lote_contabil        = nr_lote_contabil_w;
exception when others then
        dt_atualizacao_saldo_w  := null;
end;

if (dt_atualizacao_saldo_w IS NOT NULL AND dt_atualizacao_saldo_w::text <> '') then
        ds_erro_w := ctb_desatualizar_lote(nr_lote_contabil_w, nm_usuario_p, ds_erro_w);
else
    for vet in (    SELECT  a.nr_sequencia
                    from    ctb_movimento a
                    where   a.nr_lote_contabil  = nr_lote_contabil_w
                    and (a.dt_atualizacao_saldo IS NOT NULL AND a.dt_atualizacao_saldo::text <> '')
                    and a.ie_status_origem = 'SO') loop

        CALL ctb_online_pck.ctb_desatualizar_saldo_movto(vet.nr_sequencia,'N',nm_usuario_p);
    end loop;
end if;

if (qt_registro_w > 0) then
    begin
    qt_registro_w   := sequencia_w.count;

    for vet in (SELECT a.nr_sequencia
                from    ctb_movimento a
                where   a.nr_lote_contabil      = nr_lote_contabil_w
                order by 1 desc) loop
            begin
            qt_registro_w   := qt_registro_w + 1;
            sequencia_w(qt_registro_w)      := vet.nr_sequencia;
            end;
    end loop;
    end;
end if;

delete  FROM ctb_movimento
where   nr_lote_contabil        = nr_lote_contabil_w;
commit;

open c010;
loop
fetch c010 into
        c010_w;
EXIT WHEN NOT FOUND; /* apply on c010 */
    begin
    /*Soma do saldo da conta de Recebimento Estrangeiro */

    /*Soma do saldo da conta Auxiliar */

    select  coalesce(sum(a.vl_movimento),0) vl_recebimento_estrang
    into STRICT    vl_recebimento_estrang_w
    from    ctb_saldo a
    where   a.nr_seq_mes_ref        = nr_seq_mes_ref_p
    and     a.cd_estabelecimento    = cd_estabelecimento_p
    and     a.cd_conta_contabil     = C010_w.cd_conta_rec_estrang;

    select  coalesce(sum(a.vl_movimento),0) vl_saldo_auxiliar
    into STRICT    vl_saldo_auxiliar_w
    from    ctb_saldo a
    where   a.nr_seq_mes_ref        = nr_seq_mes_ref_p
    and     a.cd_estabelecimento    = cd_estabelecimento_p
    and     a.cd_conta_contabil     = C010_w.cd_conta_auxiliar;

    /*Obter o valor de cotacao da moeda */

    vl_cotacao_w    := coalesce(obter_valor_cotacao_moeda_data(C010_w.cd_moeda,coalesce(dt_referencia_lote_w,clock_timestamp())),1);
    if (vl_cotacao_w = 0) then
            vl_cotacao_w    := 1;
    end if;

    vl_saldo_rec_cotacao_w  := (vl_cotacao_w * vl_recebimento_estrang_w);
    vl_saldo_rec_aux_w      := (vl_saldo_auxiliar_w + vl_recebimento_estrang_w);
    vl_saldo_moeda_w        :=  vl_saldo_rec_cotacao_w - vl_saldo_rec_aux_w;

    if (vl_saldo_moeda_w > 0) then
            cd_conta_debito_w       := C010_w.cd_conta_deb_receita;
            cd_conta_credito_w      := C010_w.cd_conta_cred_receita;
    elsif (vl_saldo_moeda_w < 0) then
            cd_conta_debito_w       := C010_w.cd_conta_deb_perda;
            cd_conta_credito_w      := C010_w.cd_conta_cred_perda;

    end if;

    vl_movimento_w  := coalesce(abs(vl_saldo_moeda_w),0);

    if (vl_movimento_w <> 0) then
            begin
            /* DEBITO */

            get_sequence;
            ctb_movimento_doc_w := null;
            ctb_movimento_doc_w.nr_lote_contabil            := nr_lote_contabil_w;
            ctb_movimento_doc_w.cd_tipo_lote_contabil       := cd_tipo_lote_contabil_w;
            ctb_movimento_doc_w.cd_estabelecimento          := C010_w.cd_estabelecimento;
            ctb_movimento_doc_w.dt_movimento                := dt_referencia_lote_w;
            ctb_movimento_doc_w.vl_movimento                := vl_movimento_w;
            ctb_movimento_doc_w.cd_conta_debito             := cd_conta_debito_w;
            ctb_movimento_doc_w.cd_historico                := C010_w.cd_historico;
            ctb_movimento_doc_w.ds_compl_historico          := C010_w.ds_titulo;
            ctb_movimento_doc_w.nr_seq_agrupamento          := C010_w.nr_sequencia;
            ctb_movimento_doc_w.nr_seq_tab_orig             := C010_w.nr_sequencia;
            ctb_movimento_doc_w.nm_tabela                   := 'CTB_SALDO';
            ctb_movimento_doc_w.nm_atributo                 := 'VL_SALDO_MOEDA';
            ctb_movimento_doc_w.ie_transitorio              := 'N';
            ctb_movimento_doc_w.nr_seq_info                 := 71;

              ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(  ctb_movimento_doc_w, nm_usuario_p, 'N', 'S', 'N');
            /* CREDITO */

            ctb_movimento_doc_w.nr_sequencia                := null;
            get_sequence;
            ctb_movimento_doc_w.cd_conta_debito             := null;
            ctb_movimento_doc_w.cd_conta_credito            := cd_conta_credito_w;


              ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(  ctb_movimento_doc_w, nm_usuario_p, 'S', 'S', 'N');
            end;
    end if;
    end;
end loop;
close c010;

update  lote_contabil
set     ie_situacao      = 'A',
        dt_geracao_lote  = clock_timestamp(),
        dt_integracao    = clock_timestamp()
where   nr_lote_contabil = nr_lote_contabil_w;

/*ctb_atualizar_saldo(  nr_lote_contabil_w,
                'S',
                nm_usuario_p,
                'N',
                ds_erro_w,
                'S');*/
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_contab_onl_moeda_est ( nm_usuario_p text, nr_seq_mes_ref_p bigint, cd_estabelecimento_p bigint ) FROM PUBLIC;

