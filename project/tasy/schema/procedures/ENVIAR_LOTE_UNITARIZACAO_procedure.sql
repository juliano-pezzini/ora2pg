-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_lote_unitarizacao ( nr_seq_lote_fornec_p bigint, cd_unidade_medida_p text, qt_material_p bigint, qt_unitarizacao_p bigint, qt_manual_p bigint, cd_pessoa_envio_p text, cd_pessoa_transporte_p text, dt_envio_p timestamp, dt_transporte_p timestamp, cd_local_estoque_p bigint, nm_usuario_p text, ie_urgente_p text, nr_seq_motivo_unit_p bigint, ie_gera_recebimento_p text, cd_local_destino_p bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


nr_sequencia_w		bigint;
ie_estoque_lote_w	varchar(1);
qt_estoque_lote_w	double precision;
ie_permite_unitarizar_w	varchar(1);
cd_local_destino_w	smallint;
dt_recebimento_w	timestamp;
cd_pessoa_recebimento_w	varchar(10);

cd_estabelecimento_w	smallint := wheb_usuario_pck.get_cd_estabelecimento;

cd_operacao_estoque_w	smallint;


BEGIN

if (ie_gera_recebimento_p = 'S') and (cd_local_destino_p IS NOT NULL AND cd_local_destino_p::text <> '') then
	dt_recebimento_w := clock_timestamp();
	cd_pessoa_recebimento_w := cd_pessoa_envio_p;
end if;

select	coalesce(max(c.ie_estoque_lote),'N')
into STRICT	ie_estoque_lote_w
from	material_lote_fornec a,
	material b,
	material_estab c
where	a.cd_material = b.cd_material
and	c.cd_material = b.cd_material_estoque
and	c.cd_estabelecimento = cd_estabelecimento_w
and	a.nr_sequencia = nr_seq_lote_fornec_p;

ie_permite_unitarizar_w := substr(sup_obter_permite_unitarizar(cd_estabelecimento_w,nr_seq_lote_fornec_p,nm_usuario_p),1,1);

if (ie_permite_unitarizar_w = 'N') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(190860);
elsif (ie_estoque_lote_w = 'S') then
	begin
	qt_estoque_lote_w := obter_saldo_lote_fornec(nr_seq_lote_fornec_p);

	if (qt_estoque_lote_w < qt_material_p) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(189897);
	end if;
	end;
end if;

select	nextval('solic_unitarizacao_seq')
into STRICT	nr_sequencia_w
;

nr_sequencia_p	:= nr_sequencia_w;

insert into solic_unitarizacao(
	nr_sequencia,
	nr_seq_lote_fornec,
	dt_envio,
	cd_pessoa_envio,
	cd_pessoa_transporte,
	dt_transporte,
	qt_material,
	qt_unitarizar,
	qt_manual,
	cd_unidade_medida,
	dt_atualizacao,
	dt_atualizacao_nrec,
	nm_usuario,
	nm_usuario_nrec,
	cd_local_estoque_origem,
	cd_local_estoque_destino,
	ie_urgente,
	nr_seq_motivo_unit,
	dt_recebimento,
	cd_pessoa_recebimento)
values (nr_sequencia_w,
	nr_seq_lote_fornec_p,
	dt_envio_p,
	cd_pessoa_envio_p,
	cd_pessoa_transporte_p,
	dt_transporte_p,
	qt_material_p,
	qt_unitarizacao_p,
	qt_manual_p,
	cd_unidade_medida_p,
	clock_timestamp(),
	clock_timestamp(),
	nm_usuario_p,
	nm_usuario_p,
	cd_local_estoque_p,
	cd_local_destino_p,
	ie_urgente_p,
	nr_seq_motivo_unit_p,
	dt_recebimento_w,
	cd_pessoa_recebimento_w);

if (cd_local_estoque_p <> coalesce(cd_local_destino_p,'0')) then
	if (ie_gera_recebimento_p <> 'S') then
		cd_operacao_estoque_w := sup_obter_operacao_unit('ST');
		CALL gerar_movto_estoque_trans_unit(nr_sequencia_w, cd_operacao_estoque_w, '1', 'O', nm_usuario_p);
	else
		CALL gerar_movto_estoque_trans_unit(nr_sequencia_w, cd_operacao_estoque_w, '1', 'TE', nm_usuario_p);
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_lote_unitarizacao ( nr_seq_lote_fornec_p bigint, cd_unidade_medida_p text, qt_material_p bigint, qt_unitarizacao_p bigint, qt_manual_p bigint, cd_pessoa_envio_p text, cd_pessoa_transporte_p text, dt_envio_p timestamp, dt_transporte_p timestamp, cd_local_estoque_p bigint, nm_usuario_p text, ie_urgente_p text, nr_seq_motivo_unit_p bigint, ie_gera_recebimento_p text, cd_local_destino_p bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

