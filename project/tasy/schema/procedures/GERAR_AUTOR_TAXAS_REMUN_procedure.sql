-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_autor_taxas_remun ( dt_parametro_p timestamp default clock_timestamp(), nm_usuario_p text default 'job', cd_estabelecimento_p estabelecimento.cd_estabelecimento%type DEFAULT NULL, cd_perfil_p perfil.cd_perfil%type default null) AS $body$
DECLARE


char_seven_c    	constant autorizacao_convenio.ie_tipo_autorizacao%type  := '7';
char_three_c    	constant autorizacao_convenio.ie_tipo_autorizacao%type 	:= '3';

nr_seq_estagio_w	estagio_autorizacao.nr_sequencia%type;


/*

objeto utilizado para ler todas autorizacoes do tipo procedimento = 3, 
que estao com vigencia expirada, mas que a autorizacao principal do tipo 7, ainda esta vigente.


*/
taxas CURSOR FOR
        SELECT	a.nr_sequencia,
		a.dt_fim_vigencia + 1/1440 dt_fim_vigencia,
		a.nr_seq_dados_mod_remun,
		a.nr_seq_autor_origem,
		a.cd_convenio,
		a.ie_tipo_dia,
		a.ie_tipo_autorizacao,
		a.cd_pessoa_fisica,
		a.cd_autorizacao,
		a.cd_autorizacao_prest,
		a.nr_seq_classif,
		a.cd_medico_solicitante
        FROM	autorizacao_convenio a, estagio_autorizacao b
        WHERE	a.ie_tipo_autorizacao = char_three_c
	and	a.cd_estabelecimento = cd_estabelecimento_p
	and	a.nr_seq_estagio = b.nr_sequencia
	and	b.ie_interno = '10'
	AND 	(a.nr_seq_dados_mod_remun IS NOT NULL AND a.nr_seq_dados_mod_remun::text <> '')
	AND 	dt_fim_vigencia < dt_parametro_p
	AND 	a.nr_sequencia = (	SELECT	MAX(x.nr_sequencia)
					FROM	autorizacao_convenio x
					WHERE	x.nr_seq_dados_mod_remun = a.nr_seq_dados_mod_remun)
	AND EXISTS (	SELECT	1
			FROM	autorizacao_convenio y
			WHERE	y.nr_seq_dados_mod_remun = a.nr_seq_dados_mod_remun
			AND 	y.ie_tipo_autorizacao = char_seven_c
                        AND 	dt_parametro_p BETWEEN y.dt_inicio_vigencia AND coalesce(y.dt_fim_vigencia,dt_parametro_p + 999))
	order by a.dt_inicio_vigencia;

taxas_w		taxas%rowtype;			


BEGIN


open taxas;
loop
fetch taxas into
	taxas_w;
EXIT WHEN NOT FOUND; /* apply on taxas */
	BEGIN


	select 	max(nr_sequencia)
	into STRICT	nr_seq_estagio_w
	from   	estagio_autorizacao
	where  	ie_interno = '1'
	and 	ie_situacao = 'A'
	and	IE_UTILIZA_MODELO_REMUN = 'S';


	insert into autorizacao_convenio(nm_usuario,
		ie_tipo_dia,
		nr_sequencia,
		dt_atualizacao,
		cd_convenio,
		dt_autorizacao,
		cd_pessoa_fisica,
		cd_autorizacao,
		ie_tipo_autorizacao,
		nr_seq_estagio,
		cd_medico_solicitante,
		nr_seq_dados_mod_remun,
		nr_seq_classif,
		nr_seq_autor_origem,
		dt_inicio_vigencia,
		dt_fim_vigencia,
		cd_autorizacao_prest,
		cd_estabelecimento)
	values (nm_usuario_p,
		taxas_w.ie_tipo_dia,
		nextval('autorizacao_convenio_seq'),
		dt_parametro_p,
		taxas_w.cd_convenio,
		dt_parametro_p,
		taxas_w.cd_pessoa_fisica,
		taxas_w.cd_autorizacao,
		taxas_w.ie_tipo_autorizacao,
		nr_seq_estagio_w,
		taxas_w.cd_medico_solicitante,
		taxas_w.nr_seq_dados_mod_remun,
		taxas_w.nr_seq_classif,
		taxas_w.nr_seq_autor_origem,
		taxas_w.dt_fim_vigencia,
		taxas_w.dt_fim_vigencia + 30,
		taxas_w.cd_autorizacao_prest,
		cd_estabelecimento_p);



	END;
end loop;
close taxas;

commit;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_autor_taxas_remun ( dt_parametro_p timestamp default clock_timestamp(), nm_usuario_p text default 'job', cd_estabelecimento_p estabelecimento.cd_estabelecimento%type DEFAULT NULL, cd_perfil_p perfil.cd_perfil%type default null) FROM PUBLIC;

