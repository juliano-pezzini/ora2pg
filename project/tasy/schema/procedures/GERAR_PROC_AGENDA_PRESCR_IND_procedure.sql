-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_proc_agenda_prescr_ind ( nr_seq_agenda_p bigint, nr_prescricao_p bigint, cd_setor_atendimento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_autorizacao_p text, cd_medico_agenda_p text, ie_lado_p text, nr_seq_proc_interno_p bigint, hr_inicio_p timestamp, nm_usuario_p text, nr_seq_topografia_p bigint default null, ie_anestesia_p text default null, vl_coparticipacao_p bigint default null) AS $body$
DECLARE


nr_sequencia_w		bigint;
dt_resultado_w		timestamp;
ds_setor_param_w		varchar(100);
cd_setor_proc_w		bigint;
cd_estabelecimento_w	smallint;
ie_gerar_proc_adic_w	varchar(1);
cd_intervalo_w			varchar(255);
DT_PRIMEIRO_HORARIO_w		timestamp;
NR_HORAS_VALIDADE_w		bigint;
nr_intervalos_w			bigint;
ds_horarios_w			varchar(255);
ds_horarios_2_w			varchar(255);
nr_acesso_dicom_w		varchar(10);
cd_medico_agenda_w		varchar(10);
ie_considera_regra_med_exame_w	varchar(1);
nr_atendimento_w		bigint;
ie_medico_executor_w		varchar(10);
cd_cgc_w			varchar(14);
cd_medico_executor_w		varchar(10);
cd_pessoa_fisica_w		varchar(10);
qt_procedimento_w		integer;
cd_equipamento_w		prescr_procedimento.cd_equipamento%type;
ie_utilizar_equip_presc_w	varchar(1);	
ds_dado_clinico_w		prescr_medica.ds_dado_clinico%type;
nr_Seq_inf_add_w		prescr_proced_inf_adic.nr_sequencia%type;
nr_seq_contraste_w		procedimento_guia_wint.nr_seq_contraste%type;
nr_crm_w            procedimento_guia_wint.nr_crm%type;
nr_ano_guia_w            procedimento_guia_wint.nr_ano_guia%type;

C02 CURSOR FOR
	SELECT	cd_setor_atendimento
	from	procedimento_setor_atend
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p
	and	cd_estabelecimento	= cd_estabelecimento_w
	order by ie_prioridade desc;


BEGIN

ie_utilizar_equip_presc_w := Obter_Param_Usuario(869, 417, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_utilizar_equip_presc_w);

cd_setor_proc_w	:= null;
cd_medico_agenda_w := cd_medico_agenda_p;

select	coalesce(max(b.cd_estabelecimento),1),
	max(a.DT_PRIMEIRO_HORARIO),
	max(NR_HORAS_VALIDADE),
	max(b.nr_atendimento)
into STRICT	cd_estabelecimento_w,
	DT_PRIMEIRO_HORARIO_w,
	NR_HORAS_VALIDADE_w,
	nr_atendimento_w
from	atendimento_paciente b,
	prescr_medica a
where	a.nr_atendimento	= b.nr_atendimento
and	a.nr_prescricao		= nr_prescricao_p;

ie_gerar_proc_adic_w := Obter_Param_Usuario(916, 301, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_proc_adic_w);
cd_intervalo_w := Obter_Param_Usuario(916, 537, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, cd_intervalo_w);
ie_considera_regra_med_exame_w := Obter_Param_Usuario(916, 838, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_considera_regra_med_exame_w);

/* Obter o valor do parametro na funcao Entrada unica de Pacientes - EUP */

select	Obter_Valor_Param_Usuario(916, 47, obter_perfil_ativo, nm_usuario_p, 0)
into STRICT	ds_setor_param_w
;

Select	max(b.nr_acesso_dicom)
into STRICT	nr_acesso_dicom_w
from	agenda_paciente a,
	agenda_lista_espera b
where	a.nr_seq_lista	= b.nr_sequencia
and	a.nr_sequencia	= nr_seq_agenda_p;

if (Upper(ds_setor_param_w) = 'PROCEDIMENTO') then
	begin

	open	c02;
	loop
	fetch	c02 into
		cd_setor_proc_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
			
		cd_setor_proc_w	:= cd_setor_proc_w;

		end;
	end loop;
	close c02;

	end;
end if;


	if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
	
		SELECT * FROM Calcular_Horario_Prescricao(	nr_prescricao_p, cd_intervalo_w, DT_PRIMEIRO_HORARIO_w, DT_PRIMEIRO_HORARIO_w, NR_HORAS_VALIDADE_w, cd_procedimento_p, 0, 0, nr_intervalos_w, ds_horarios_w, ds_horarios_2_w, 'N', null) INTO STRICT nr_intervalos_w, ds_horarios_w, ds_horarios_2_w;
		
	end if;

select	coalesce(max(nr_sequencia),0) + 1
into STRICT	nr_sequencia_w
from	prescr_procedimento
where	nr_prescricao	= nr_prescricao_p;
	
dt_resultado_w := obter_entrega_laudo(	nr_prescricao_p, coalesce(hr_inicio_p,clock_timestamp()), nr_seq_proc_interno_p, cd_procedimento_p, ie_origem_proced_p, cd_setor_atendimento_p, nm_usuario_p, dt_resultado_w);

if (ie_considera_regra_med_exame_w = 'S') then
	SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, obter_convenio_atendimento(nr_atendimento_w), coalesce(cd_setor_proc_w, cd_setor_atendimento_p), cd_procedimento_p, ie_origem_proced_p, obter_tipo_atendimento(nr_atendimento_w), null, nr_seq_proc_interno_p, ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w, null, coalesce(hr_inicio_p,clock_timestamp()), obter_classif_atendimento(nr_atendimento_w), 'N', null, null) INTO STRICT ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w;
	if (coalesce(cd_medico_executor_w,0) > 0) then
		cd_medico_agenda_w := cd_medico_executor_w;
	end if;
end if;

qt_procedimento_w:=	coalesce(Obter_Quantidade_prescr_proced(cd_intervalo_w,ie_lado_p,
                                       cd_procedimento_p,
				       ie_origem_proced_p,
				       nr_seq_proc_interno_p,
				       nr_atendimento_w),1);
				
if	coalesce(ie_utilizar_equip_presc_w,'N') = 'S' then
	select	max(cd_equipamento)
	into STRICT 	cd_equipamento_w
	from	agenda_pac_equip
	where	nr_seq_agenda = nr_seq_agenda_p;
end if;
		
select	substr(obter_desc_indicacao_ageint(nr_seq_agenda_p,'P'),0,255)
into STRICT	ds_dado_clinico_w
;
		
select	max(x.nr_seq_contraste), max(a.crm_medico_externo), max(a.nr_ano_guia)
into STRICT	nr_seq_contraste_w, nr_crm_w, nr_ano_guia_w
from	agenda_integrada_item a,
	procedimento_guia_wint x
where	a.nr_seq_agenda_exame	= nr_seq_agenda_p
and	x.nr_seq_ageint_item 	= a.nr_sequencia;

insert into Prescr_Procedimento(
		nr_prescricao, nr_sequencia, cd_procedimento,
		qt_procedimento, dt_atualizacao, nm_usuario,
		cd_motivo_baixa, ie_origem_proced, ie_urgencia,
		cd_setor_atendimento, dt_prev_execucao, ie_suspenso, 
		ie_status_atend, ie_origem_inf, dt_resultado, 
		cd_medico_exec, ie_autorizacao, nr_seq_interno, 
		ie_lado, ie_avisar_result, nr_seq_proc_interno,cd_intervalo,ds_horarios, nr_acesso_dicom,
		nr_seq_topografia, cd_equipamento, nr_seq_agenda, ds_dado_clinico,ie_anestesia,nr_seq_contraste)
values (
		nr_prescricao_p, nr_sequencia_w, cd_procedimento_p,
		qt_procedimento_w, clock_timestamp(), nm_usuario_p,
		0, ie_origem_proced_p, 'N',
		coalesce(cd_setor_proc_w, cd_setor_atendimento_p), coalesce(hr_inicio_p,clock_timestamp()), 'N',
		5, '1', dt_resultado_w, 
		cd_medico_agenda_w, ie_autorizacao_p, nextval('prescr_procedimento_seq'), 
		ie_lado_p, 'N', nr_seq_proc_interno_p,cd_intervalo_w,ds_horarios_w, nr_acesso_dicom_w,
		nr_seq_topografia_p, cd_equipamento_w, nr_seq_agenda_p, case when pkg_i18n.get_user_locale in ('de_DE', 'de_AT') then ds_dado_clinico_w else null end,
		ie_anestesia_p,nr_seq_contraste_w);

if (coalesce(vl_coparticipacao_p,0) > 0) and (cd_medico_agenda_w IS NOT NULL AND cd_medico_agenda_w::text <> '') then
	select 	max(nr_sequencia)
	into STRICT	nr_Seq_inf_add_w
	from 	prescr_proced_inf_adic
	where 	nr_prescricao		= nr_prescricao_p
	and	nr_seq_prescricao	= nr_sequencia_w;
	
	if (coalesce(nr_Seq_inf_add_w,0) = 0) then
		insert into prescr_proced_inf_adic(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_registro,
					nr_prescricao,
					nr_seq_prescricao,
					cd_pessoa_fisica, 
					ie_situacao,
					vl_coparticipacao,
					cd_crm_medico,
					nr_ano_guia)
				values ( nextval('prescr_proced_inf_adic_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nr_prescricao_p,
					nr_sequencia_w,
					cd_medico_agenda_w,
					'A',
					vl_coparticipacao_p,
					nr_crm_w, 
					nr_ano_guia_w);
				
	else
		update 	prescr_proced_inf_adic
		set	vl_coparticipacao = vl_coparticipacao_p	
		where 	nr_sequencia = nr_Seq_inf_add_w;
	end if;	
end if;

if (ie_gerar_proc_adic_w = 'S') then
	CALL Gerar_Prescr_Proc_Assoc(Nr_prescricao_p, nr_sequencia_w, nm_usuario_p);
end if;

CALL Gerar_med_mat_assoc(nr_prescricao_p, nr_sequencia_w);

update	prescr_medica
set	nr_seq_agenda	= nr_seq_agenda_p
where	nr_prescricao	= nr_prescricao_p
and	coalesce(nr_seq_agenda::text, '') = '';

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_proc_agenda_prescr_ind ( nr_seq_agenda_p bigint, nr_prescricao_p bigint, cd_setor_atendimento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_autorizacao_p text, cd_medico_agenda_p text, ie_lado_p text, nr_seq_proc_interno_p bigint, hr_inicio_p timestamp, nm_usuario_p text, nr_seq_topografia_p bigint default null, ie_anestesia_p text default null, vl_coparticipacao_p bigint default null) FROM PUBLIC;

