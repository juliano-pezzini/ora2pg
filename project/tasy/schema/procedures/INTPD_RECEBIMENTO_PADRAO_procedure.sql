-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intpd_recebimento_padrao ( xml_p text, id_event_p text, id_application_p text, nr_sequencia_p INOUT bigint, nr_seq_origem_p bigint default null) AS $body$
DECLARE


/*'
014 - Receber ordem de compra
015 - Receber fabricante
016 - Receber cadastro de materiais
017 - Receber bloqueio nota fiscal
018 - Receber nota fiscal
'*/
xml_w			xml;
nr_sequencia_w		bigint;
id_event_w		varchar(10);
id_application_w		varchar(10);
nr_seq_evento_sistema_w	intpd_eventos_sistema.nr_sequencia%type;
ie_envio_recebe_w		intpd_fila_transmissao.ie_envio_recebe%type;
ds_procedure_w		intpd_eventos_sistema.ds_procedure%type;
ds_classe_java_w		intpd_eventos_sistema.ds_classe_java%type;
ie_criou_xml_w		varchar(1)	:=	'N';
ie_status_w		intpd_fila_transmissao.ie_status%type;
ds_erro_w		varchar(4000);


BEGIN
			
/*necessario para um to_char nao retirar a hora da data nas rotinas que recebem valores desse tipo de dado*/

EXECUTE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD/MM/YYYY HH24:MI:SS''';

begin
	if (coalesce(nr_sequencia_p,0) > 0) then
		nr_sequencia_w := nr_sequencia_p;
	else
		select	nr_sequencia
		into STRICT	nr_sequencia_w
		from	intpd_fila_transmissao
		where	nr_sequencia = nr_seq_origem_p
		for	update;
	end if;

	select	ie_status
	into STRICT	ie_status_w
	from	intpd_fila_transmissao
	where	nr_sequencia = nr_sequencia_w;
exception
when others then
	nr_sequencia_w	:=	null;
end;

if (nr_sequencia_w > 0) then
	CALL intpd_inicializacao(nr_sequencia_w);
end if;

if (coalesce(nr_sequencia_w::text, '') = '') or
	((nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') and (ie_status_w not in ('S','E'))) then
	begin
	begin	
	id_event_w		:= id_event_p;
	id_application_w	:= id_application_p;

	if (coalesce(id_event_w,'null') = 'null') or (coalesce(id_application_w,'null') = 'null') then


		begin
		id_event_w	:=	'null';

		if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
			begin
			select	a.ie_evento,
				b.nr_seq_sistema
			into STRICT	id_event_w,
				id_application_w
			from	intpd_fila_transmissao a,
				intpd_eventos_sistema b
			where	a.nr_seq_evento_sistema = b.nr_sequencia
			and	a.nr_sequencia = nr_sequencia_w;
			exception
			when others then
				id_event_w	:=	'null';
			end;
		end if;

		if (id_event_w = 'null') then
			begin
			ie_criou_xml_w	:=	'S';
			xml_w := xmlparse(DOCUMENT, convert_from(, 'utf-8'));

			select	id_event,
				id_application
			into STRICT	id_event_w,
				id_application_w
			from	xmltable('/STRUCTURE' passing xml_w
				columns id_event	varchar2(10) path 'ID_EVENT',
				id_application	varchar2(10) path 'ID_APPLICATION');
			end;
		end if;
		end;
	end if;

	if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		begin
		select	nr_seq_evento_sistema, ie_envio_recebe
		into STRICT	nr_seq_evento_sistema_w, ie_envio_recebe_w
		from	intpd_fila_transmissao
		where	nr_sequencia	= nr_sequencia_w  LIMIT 1;
		exception
		when others then
			nr_seq_evento_sistema_w := 0;
		end;
	else
		begin
		select	b.nr_sequencia
		into STRICT	nr_seq_evento_sistema_w
		from	intpd_eventos a,
			intpd_eventos_sistema b
		where	b.nr_seq_evento = a.nr_sequencia
		and	exists (SELECT	1
				from	intpd_config_eventos x
				where	x.ie_evento = a.ie_evento
				and	x.ie_envia_recebe in ('R','C'))
		and	a.ie_situacao = 'A'
		and	b.ie_situacao = 'A'
		and	a.ie_evento = id_event_w
		and	b.nr_seq_sistema = id_application_w  LIMIT 1;

		exception
		when others then
			nr_seq_evento_sistema_w	:= 0;
		end;
	end if;

	exception
	when others then
		nr_seq_evento_sistema_w	:= 0;
	end;

	if (nr_seq_evento_sistema_w > 0) then
		begin
		if (coalesce(nr_sequencia_w::text, '') = '') then
			begin
			select	nextval('intpd_fila_transmissao_seq')
			into STRICT	nr_sequencia_w
			;

			insert into intpd_fila_transmissao(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_evento,
				nr_seq_documento,
				ie_status,
				ds_log,
				nr_seq_evento_sistema,
				ie_operacao,
				nr_doc_externo,
				ds_xml,
				ds_xml_retorno,
				ie_envio_recebe,
				nr_seq_origem)
			values (	nr_sequencia_w,
				clock_timestamp(),
				'INTPDTASY',
				clock_timestamp(),
				'INTPDTASY',
				id_event_w,
				0,
				'P',
				null,
				nr_seq_evento_sistema_w,
				null,
				null,
				xml_p,
				null,
				'R',
				nr_seq_origem_p);
			end;
		elsif (ie_envio_recebe_w = 'R') then
			update	intpd_fila_transmissao
			set	ds_xml = xml_p,
				ie_response_procedure = 'S'
			where	nr_sequencia = nr_sequencia_w;
		else
			update	intpd_fila_transmissao
			set	ds_xml_retorno = xml_p,
				ie_response_procedure = 'S'
			where	nr_sequencia = nr_seq_origem_p;
		end if;
		commit;

		begin
		
		CALL gerar_int_padrao.set_executando_recebimento('S');
		
		select	ds_procedure, ds_classe_java
		into STRICT	ds_procedure_w, ds_classe_java_w
		from	intpd_eventos_sistema
		where	nr_sequencia = nr_seq_evento_sistema_w;

		if (coalesce(ds_classe_java_w,'NULL') = 'NULL') then

			if (coalesce(ds_procedure_w,'NULL') <> 'NULL') then
				CALL exec_sql_dinamico('INTPDTASY', 'declare begin ' || ds_procedure_w || '(' || nr_sequencia_w || '); end;');
			else
				begin
				if (ie_criou_xml_w = 'N') then
					xml_w := xmlparse(DOCUMENT, convert_from(, 'utf-8'));
				end if;
				

				if (id_event_w = '14') then
					CALL intpd_recebe_ordem_compra(nr_sequencia_w, xml_w);
				elsif (id_event_w = '15') then
					intpd_recebe_marca(nr_sequencia_w, xml_w);
				elsif (id_event_w = '16') then
					CALL intpd_recebe_material(nr_sequencia_w, xml_w);
				elsif (id_event_w = '17') then
					CALL intpd_recebe_bloqueio_fiscal(nr_sequencia_w, xml_w);
				elsif (id_event_w in ('18','404')) then
					CALL intpd_recebimento_nota_fiscal(nr_sequencia_w, xml_w,id_event_w);
				elsif (id_event_w = '22') then
					CALL intpd_recebe_pessoa_fisica(nr_sequencia_w, xml_w);
				elsif (id_event_w = '23') then
					--intpd_recebe_pessoa_juridica(nr_sequencia_w, xml_w);
					CALL intpd_receiving_legal_entity(nr_sequencia_w, xml_w);
				elsif (id_event_w = '24') then
					CALL intpd_recebe_pagto_conv(nr_sequencia_w, xml_w);
				elsif (id_event_w = '28') then
					CALL intpd_recebe_movimento_estoque(nr_sequencia_w, xml_w);
				elsif (id_event_w = '34') then
					CALL intpd_recebe_material_med(nr_sequencia_w, xml_w);
				elsif (id_event_w = '35') then
					CALL intpd_recebe_moeda(nr_sequencia_w, xml_w);
				elsif (id_event_w = '36') then
					CALL intpd_recebe_motivo_desconto(nr_sequencia_w, xml_w);
				elsif (id_event_w = '37') then
					CALL intpd_recebe_motivo_glosa(nr_sequencia_w, xml_w);
				elsif (id_event_w = '38') then
					CALL intpd_recebe_tipo_recebimento(nr_sequencia_w, xml_w);
				elsif (id_event_w = '39') then
					CALL intpd_recebe_transacao_financ(nr_sequencia_w, xml_w);
				elsif (id_event_w = '40') then
					CALL intpd_recebe_banco_carteira(nr_sequencia_w, xml_w);
				elsif (id_event_w = '41') then
					CALL intpd_recebe_banco_estab(nr_sequencia_w, xml_w);
				elsif (id_event_w = '42') then
					CALL intpd_recebe_portador(nr_sequencia_w, xml_w);
				elsif (id_event_w = '43') then
					CALL intpd_recebe_tipo_taxa(nr_sequencia_w, xml_w);
				elsif (id_event_w = '44') then
					CALL intpd_recebe_forma_pagto_cart(nr_sequencia_w, xml_w);
				elsif (id_event_w = '45') then
					CALL intpd_recebe_bandeira_cartao(nr_sequencia_w, xml_w);
				elsif (id_event_w = '46') then
					CALL intpd_recebe_titulo_pagar(nr_sequencia_w, xml_w);
				elsif (id_event_w = '47') then
					CALL intpd_receb_caixa_receb(nr_sequencia_w, xml_w);
				elsif (id_event_w = '49') then
					CALL intpd_recebe_tit_pagar_baixa(nr_sequencia_w, xml_w);
					null;
				elsif (id_event_w = '50') then
					CALL intpd_recebe_titulo_receber(nr_sequencia_w, xml_w);
					null;
				elsif (id_event_w = '52') then
					CALL intpd_recebe_titulo_rec_liq(nr_sequencia_w, xml_w);
					null;
				elsif (id_event_w = '55') then
					CALL intpd_recebe_requisicao_matmed(nr_sequencia_w, xml_w);
				elsif (id_event_w = '58') then
					CALL intpd_recebe_doc_externo_oc(nr_sequencia_w, xml_w);
				elsif (id_event_w = '59') then
					CALL intpd_recebe_agecons(nr_sequencia_w, xml_w);
				elsif (id_event_w = '60') then
					CALL intpd_recebe_bloqueia_horario(nr_sequencia_w, xml_w);
				elsif (id_event_w = '61') then
					CALL intpd_recebe_canc_agecons(nr_sequencia_w, xml_w);
				elsif (id_event_w in ('66','405')) then
					CALL intpd_recebe_conf_fisica_nf(nr_sequencia_w, xml_w, id_event_w);
				elsif (id_event_w = '76') then
					CALL intpd_recebe_inventario_mat(nr_sequencia_w, xml_w);
				elsif (id_event_w = '80') then
					CALL intpd_recebe_contagem_inv_mat(nr_sequencia_w, xml_w);
				elsif (id_event_w = '87') then
					CALL intpd_recebe_filtro_cons_saldo(nr_sequencia_w, xml_w);
				elsif (id_event_w = '103') then
					CALL intpd_recebe_respostas_cotacao(nr_sequencia_w, xml_w);
				elsif (id_event_w = '109') then
					CALL intpd_recebimento_cupom_fiscal(nr_sequencia_w, xml_w);
				elsif (id_event_w = '137') then
					CALL intpd_recebe_convenio(nr_sequencia_w, xml_w);
				elsif (id_event_w = '138') then
					intpd_receive_ins_company(nr_sequencia_w, xml_w);
				elsif (id_event_w = '139') then
					CALL intpd_receber_broker(nr_sequencia_w, xml_w);
				elsif (id_event_w = '140') then
					CALL intpd_recebe_categoria_conv(nr_sequencia_w, xml_w);
				elsif (id_event_w = '141') then
					CALL intpd_receber_grupo_material(nr_sequencia_w, xml_w);
				elsif (id_event_w = '142') then
					CALL intpd_receber_subgrupo_mat(nr_sequencia_w, xml_w);
				elsif (id_event_w = '145') then
					CALL intpd_receber_classe_material(nr_sequencia_w, xml_w);
				elsif (id_event_w = '153') then
					CALL intpd_receive_async_status(nr_sequencia_w, xml_w);
				elsif (id_event_w = '157') then
					CALL intpd_receber_area_proced(nr_sequencia_w, xml_w);
				elsif (id_event_w = '158') then
					CALL intpd_receber_espec_proced(nr_sequencia_w, xml_w);
				elsif (id_event_w = '159') then
					CALL intpd_receber_grupo_proced(nr_sequencia_w, xml_w);
				elsif (id_event_w = '163') then
					CALL intpd_atualiza_status_fila(nr_sequencia_w, xml_w);
				elsif (id_event_w = '164') then
					CALL intpd_receber_procedimento(nr_sequencia_w, xml_w);
				elsif (id_event_w = '165') then
					CALL intpd_receber_pacotes(nr_sequencia_w, xml_w);
				elsif (id_event_w = '170') then
					CALL intpd_treasurer_receiver(nr_sequencia_w, xml_w);
				elsif (id_event_w = '171') then
					CALL intpd_receber_blacklist(nr_sequencia_w, xml_w);
				elsif (id_event_w = '172') then
					CALL intpd_recebe_pre_venda(nr_sequencia_w, xml_w);
				elsif (id_event_w = '173') then
					CALL intpd_atualiza_status_fila(nr_sequencia_w, xml_w);
				elsif (id_event_w = '210') then
					CALL intpd_recebe_solic_compra(nr_sequencia_w, xml_w);
				elsif (id_event_w = '211') then
					CALL intpd_recebe_contrato(nr_sequencia_w, xml_w);
				elsif (id_event_w = '246') then
					CALL intpd_recebe_man_equipamento(nr_sequencia_w, xml_w);
				elsif (id_event_w = '249') then
					CALL intpd_recebe_reg_parada_equip(nr_sequencia_w, xml_w);
				elsif (id_event_w = '265') then
					CALL intpd_recebe_lote_prescricao(nr_sequencia_w, xml_w);
				elsif (id_event_w = '270') then
					CALL intpd_recebe_item_atendido(nr_sequencia_w, xml_w);
				elsif (id_event_w = '285') then
					CALL intpd_recebe_agrupamento_lote(nr_sequencia_w, xml_w);
				elsif (id_event_w = '295') then
					CALL intpd_recebe_baixa_devolucao(nr_sequencia_w, xml_w);
				elsif (id_event_w = '296') then
					CALL intpd_recebe_usuario(nr_sequencia_w, xml_w);
				elsif (id_event_w = '298') then
					CALL intpd_recebe_repasse_terceiro(nr_sequencia_w, xml_w);
				elsif (id_event_w = '315') then
					CALL intpd_recebe_numero_nf(nr_sequencia_w, xml_w);
				elsif (id_event_w = '331') then
					CALL intpd_atualiza_status_fila(nr_sequencia_w, xml_w);
				elsif (id_event_w = '332') then
					CALL intpd_atualiza_status_fila(nr_sequencia_w, xml_w);
				elsif (id_event_w = '333') then
					CALL intpd_atualiza_status_fila(nr_sequencia_w, xml_w);
				elsif (id_event_w = '391') then
					CALL intpd_recebe_ativ_bloq_usuario(nr_sequencia_w, xml_w);
				elsif (id_event_w = '410') then
					CALL intpd_receb_inicio_baixa_dev(nr_sequencia_w, xml_w);
				elsif (id_event_w = '424') then
					CALL intpd_desdobrar_lote_prescr(nr_sequencia_w, xml_w);
				elsif (id_event_w = '423') then
					CALL intpd_cancelar_lote(nr_sequencia_w, xml_w);
				elsif (id_event_w = '500') then
					CALL intpd_dispensar_lote(nr_sequencia_w, xml_w);
				end if;
				end;
			end if;
		end if;

		if (nr_seq_origem_p > 0) then
			begin
			select	ie_status
			into STRICT	ie_status_w
			from	intpd_fila_transmissao
			where	nr_sequencia = nr_sequencia_w;

			update	intpd_fila_transmissao
			set	ie_status = ie_status_w,
				ie_response_procedure = 'S'
			where	nr_sequencia = nr_seq_origem_p;
			end;
		end if;
		exception
		when others then
			begin
			
			ds_erro_w	:=	substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);	
			rollback;

			if (SQLSTATE = -4061) then
			--Tratamento para o erro do estado atual da package. Desta forma atualiza o registro original como erro tecnico (ie_tipo_erro) 

			--e assim a rotina de reprocessamento ira reprocessar esta mensagem.
				update	intpd_fila_transmissao
				set	ie_status = 'E',
					cd_default_message = '0005',
					ie_response_procedure = 'S',
					ie_tipo_erro = 'T'
				where	nr_sequencia = nr_seq_origem_p;	
			else
				update	intpd_fila_transmissao
				set	ie_status = 'E',
					cd_default_message = '0005',
					ie_response_procedure = 'S'
				where	nr_sequencia = nr_seq_origem_p;		
			end if;
			
			update	intpd_fila_transmissao
			set	ie_status = 'E',
				cd_default_message 	= CASE WHEN ds_erro_w = NULL THEN null  ELSE '0005' END ,
				ds_log = ds_erro_w,
				ie_response_procedure = 'S'
			where	nr_sequencia = nr_sequencia_w;

			intpd_gravar_log_recebimento(nr_sequencia_w,ds_erro_w,'INTPDTASY');

			commit;

			CALL gerar_int_padrao.set_executando_recebimento('N');
			CALL wheb_mensagem_pck.exibir_mensagem_abort(sqlerrm);
			end;
		end;
		end;
	end if;
	CALL gerar_int_padrao.set_executando_recebimento('N');
	end;
end if;

commit;

nr_sequencia_p := nr_sequencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intpd_recebimento_padrao ( xml_p text, id_event_p text, id_application_p text, nr_sequencia_p INOUT bigint, nr_seq_origem_p bigint default null) FROM PUBLIC;

