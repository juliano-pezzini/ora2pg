-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE registrar_incon_farm_html ( nr_prescricao_p bigint, nr_seq_cpoe_p bigint, nr_seq_inconsistencia_p bigint, ie_tipo_item_p text, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE

						
cd_material_w				cpoe_material.cd_material%type;
ie_controle_tempo_w			cpoe_material.ie_controle_tempo%type;
nr_seq_solucao_w			prescr_material.nr_sequencia_solucao%type;
nr_prescricao_vigente_w		prescr_medica.nr_prescricao%type;
ie_lib_prot_onc_w			gpt_presentation_rule.ie_lib_prot_onc%type;
nr_seq_atend_w				prescr_medica.nr_seq_atend%type;
ie_consiste_prot_onc_w		prescr_medica_compl.ie_consiste_prot_onc%type;

c01 CURSOR FOR
SELECT	a.nr_prescricao,
		a.nr_sequencia,
		a.nr_sequencia_solucao
from	prescr_material a
where	a.nr_prescricao >= nr_prescricao_vigente_w
and		a.nr_seq_mat_cpoe = nr_seq_cpoe_p
and		a.cd_material = cd_material_w;

c02 CURSOR FOR
SELECT	a.nr_seq_solucao,
		a.nr_prescricao
from	prescr_solucao a
where	a.nr_seq_dialise_cpoe = nr_seq_cpoe_p
and		a.nr_prescricao >= nr_prescricao_vigente_w;

BEGIN

nr_prescricao_vigente_w := gpt_obter_prescricao_vigente(nr_seq_cpoe_p, ie_tipo_item_p);

select	coalesce(max(ie_lib_prot_onc), 'N')
into STRICT	ie_lib_prot_onc_w
from	gpt_presentation_rule
where	cd_perfil = wheb_usuario_pck.get_cd_perfil;

if (ie_tipo_item_p in ('M', 'SOL')) then

	select 	max(cd_material),
			max(coalesce(ie_controle_tempo,'N'))
	into STRICT	cd_material_w,
			ie_controle_tempo_w
	from	cpoe_material
	where	nr_sequencia =  nr_seq_cpoe_p;

	for r_c01_w in c01
	loop
		if (ie_controle_tempo_w = 'S') then
			CALL registrar_incons_farm_soluc(	nr_prescricao_p => r_c01_w.nr_prescricao,
											nr_seq_solucao_p => r_c01_w.nr_sequencia_solucao,
											nr_seq_inconsistencia_p => nr_seq_inconsistencia_p,
											ie_opcao_p => ie_opcao_p,
											nm_usuario_p => nm_usuario_p);
		else
			CALL registrar_inconsistencias_farm(	nr_prescricao_p => r_c01_w.nr_prescricao,
											nr_sequencia_p => r_c01_w.nr_sequencia,
											nr_seq_inconsistencia_p => nr_seq_inconsistencia_p,
											ie_opcao_p => ie_opcao_p,
											nm_usuario_p => nm_usuario_p);
		end if;

		if (ie_lib_prot_onc_w = 'S') then

			select	max(a.nr_seq_atend),
					coalesce(max(b.ie_consiste_prot_onc), 'N')
			into STRICT	nr_seq_atend_w,
					ie_consiste_prot_onc_w
			from	prescr_medica a,
					prescr_medica_compl b
			where	a.nr_prescricao = b.nr_prescricao
			and		a.nr_prescricao = r_c01_w.nr_prescricao;

			if (ie_consiste_prot_onc_w = 'N') and (nr_seq_atend_w IS NOT NULL AND nr_seq_atend_w::text <> '') then

				update	prescr_medica_compl
				set		ie_consiste_prot_onc = 'S'
				where	nr_prescricao = r_c01_w.nr_prescricao;

			end if;

		end if;

	end loop;


elsif (ie_tipo_item_p = 'DI') then
	
	for r_c02_w in c02
	loop
		CALL registrar_incons_farm_soluc(nr_prescricao_p => r_c02_w.nr_prescricao,
									nr_seq_solucao_p => r_c02_w.nr_seq_solucao,
									nr_seq_inconsistencia_p => nr_seq_inconsistencia_p,
									ie_opcao_p => ie_opcao_p,
									nm_usuario_p => nm_usuario_p);
	end loop;

end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE registrar_incon_farm_html ( nr_prescricao_p bigint, nr_seq_cpoe_p bigint, nr_seq_inconsistencia_p bigint, ie_tipo_item_p text, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

