-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_regra_lib_acm_sn (nr_prescricao_p bigint) AS $body$
DECLARE


ie_acm_w		integer;
nr_seq_tipo_baixa_acm_w	bigint;
ie_se_necessario_w	integer;
nr_seq_tipo_baixa_sn_w	bigint;
nr_seq_solucao_w		bigint;
ie_aplicar_solucao_w	varchar(10);
nr_seq_material_w		bigint;
cd_setor_atendimento_w	bigint;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;

c01 CURSOR FOR
SELECT	nr_seq_solucao
from	prescr_solucao
where	nr_prescricao	= nr_prescricao_p
and	ie_acm		= 'S';

c02 CURSOR FOR
SELECT	nr_seq_solucao
from	prescr_solucao
where	nr_prescricao	 = nr_prescricao_p
and	ie_se_necessario = 'S';

c03 CURSOR FOR
SELECT	nr_sequencia
from	prescr_material
where	nr_prescricao		= nr_prescricao_p
and	nr_sequencia_solucao	= nr_seq_solucao_w;


BEGIN

select	max(cd_setor_atendimento),
	max(cd_estabelecimento)
into STRICT	cd_setor_atendimento_w,
	cd_estabelecimento_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

select	max(coalesce(nr_seq_tipo_baixa, 0))
into STRICT 	nr_seq_tipo_baixa_acm_w
from	regra_lib_prescr_acm_sn
where	ie_acm = 'S'
and	cd_estabelecimento = cd_estabelecimento_w
and	((coalesce(cd_setor_atendimento::text, '') = '') or (cd_setor_atendimento = cd_setor_atendimento_w))
and	((coalesce(cd_perfil::text, '') = '') or (cd_perfil = obter_perfil_ativo));

if (nr_seq_tipo_baixa_acm_w > 0) then
	begin

	select	nr_seq_tipo_baixa,
		coalesce(ie_aplicar_solucao,'N')
	into STRICT	ie_acm_w,
		ie_aplicar_solucao_w
	from	regra_lib_prescr_acm_sn
	where	nr_seq_tipo_baixa = nr_seq_tipo_baixa_acm_w
	and	cd_estabelecimento = cd_estabelecimento_w
	and	((coalesce(cd_setor_atendimento::text, '') = '') or (cd_setor_atendimento = cd_setor_atendimento_w))
	and	((coalesce(cd_perfil::text, '') = '') or (cd_perfil = obter_perfil_ativo));

	select	max(cd_tipo_baixa)
	into STRICT	ie_acm_w
	from	tipo_baixa_prescricao
	where	nr_sequencia = ie_acm_w;

	if (coalesce(ie_aplicar_solucao_w,'N')	= 'N') then
		update	prescr_material
		set 	cd_motivo_baixa	= ie_acm_w
		where 	ie_acm = 'S'
		and 	nr_prescricao = nr_prescricao_p;
	else
		update	prescr_material
		set 	cd_motivo_baixa	= ie_acm_w
		where 	ie_acm = 'S'
		and 	nr_prescricao = nr_prescricao_p
		and	(nr_sequencia_solucao IS NOT NULL AND nr_sequencia_solucao::text <> '');
	end if;

	open c01;
	loop
	fetch c01 into
		nr_seq_solucao_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		update	prescr_material
		set 	cd_motivo_baixa		= ie_acm_w
		where 	nr_prescricao		= nr_prescricao_p
		and	nr_sequencia_solucao	= nr_seq_solucao_w;

		if (coalesce(ie_aplicar_solucao_w,'N')	= 'S') then
			open C03;
			loop
			fetch C03 into
				nr_seq_material_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				update	prescr_material
				set 	cd_motivo_baixa		= ie_acm_w
				where 	nr_prescricao		= nr_prescricao_p
				and	ie_acm			= 'S'
				and	nr_seq_kit		= nr_seq_material_w;
			end loop;
			close C03;
		end if;

	end loop;
	close c01;

	end;
end if;


select	max(coalesce(nr_seq_tipo_baixa, 0))
into STRICT 	nr_seq_tipo_baixa_sn_w
from	regra_lib_prescr_acm_sn
where	ie_se_necessario = 'S'
and	cd_estabelecimento = cd_estabelecimento_w
and	((coalesce(cd_setor_atendimento::text, '') = '') or (cd_setor_atendimento = cd_setor_atendimento_w))
and	((coalesce(cd_perfil::text, '') = '') or (cd_perfil = obter_perfil_ativo));

if (nr_seq_tipo_baixa_sn_w > 0) then
	begin

	select	nr_seq_tipo_baixa,
		coalesce(ie_aplicar_solucao,'N')
	into STRICT	ie_se_necessario_w,
		ie_aplicar_solucao_w
	from	regra_lib_prescr_acm_sn
	where	nr_seq_tipo_baixa = nr_seq_tipo_baixa_sn_w
	and	cd_estabelecimento = cd_estabelecimento_w
	and	((coalesce(cd_setor_atendimento::text, '') = '') or (cd_setor_atendimento = cd_setor_atendimento_w))
	and	((coalesce(cd_perfil::text, '') = '') or (cd_perfil = obter_perfil_ativo));

	select	max(cd_tipo_baixa)
	into STRICT	ie_se_necessario_w
	from	tipo_baixa_prescricao
	where	nr_sequencia = ie_se_necessario_w;

	if (coalesce(ie_aplicar_solucao_w,'N')	= 'N') then
		update	prescr_material
		set 	cd_motivo_baixa	= ie_se_necessario_w
		where 	ie_se_necessario = 'S'
		and 	nr_prescricao = nr_prescricao_p;
	else
		update	prescr_material
		set 	cd_motivo_baixa	= ie_se_necessario_w
		where 	ie_se_necessario = 'S'
		and 	nr_prescricao = nr_prescricao_p
		and	(nr_sequencia_solucao IS NOT NULL AND nr_sequencia_solucao::text <> '');
	end if;

	open c02;
	loop
	fetch c02 into
		nr_seq_solucao_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */

		update	prescr_material
		set 	cd_motivo_baixa		= ie_se_necessario_w
		where 	nr_prescricao		= nr_prescricao_p
		and	nr_sequencia_solucao	= nr_seq_solucao_w;

		if (coalesce(ie_aplicar_solucao_w,'N')	= 'S') then
			open C03;
			loop
			fetch C03 into
				nr_seq_material_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				update	prescr_material
				set 	cd_motivo_baixa		= ie_acm_w
				where 	nr_prescricao		= nr_prescricao_p
				and	ie_se_necessario	= 'S'
				and	nr_seq_kit		= nr_seq_material_w;
			end loop;
			close C03;
		end if;

	end loop;
	close c02;

	end;
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_regra_lib_acm_sn (nr_prescricao_p bigint) FROM PUBLIC;

