-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE plt_consiste_extensao_item ( dt_inicio_extensao_p timestamp, dt_fim_extensao_p timestamp, nr_prescricao_p bigint, nr_seq_item_p bigint, ie_tipo_item_p text, nr_seq_regra_p bigint, nm_usuario_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint) AS $body$
DECLARE


VarBancoSangue_w			varchar(1);
ie_tipo_item_regra_w			varchar(15);
ie_copiar_w				varchar(10) := 'N';
ds_item_w				varchar(255);
nr_prescr_estendido_w			bigint	:= 0;
dt_suspensao_progr_w			timestamp;
dt_suspensao_w				timestamp;
dt_susp_agora_w				timestamp;
cd_pessoa_fisica_w			varchar(10);
cd_pessoa_usuario_w			varchar(10);
nr_seq_derivado_w				bigint;
cd_procedimento_w			bigint;
ie_suspenso_w				varchar(1)	:= 'N';
cd_dieta_w				bigint;
nr_seq_gas_w				bigint;
nr_seq_tipo_w				bigint;
nr_seq_leite_deriv_w			bigint;
cd_intervalo_w				varchar(7);
cd_intervalo_regra_w			varchar(7);
ie_via_aplicacao_w				varchar(15);
ie_via_leite_w				varchar(15);
nm_usuario_estendido_w			varchar(15);
nr_seq_disp_succao_w			bigint;
ie_se_necessario_w			varchar(1);
cd_material_w				integer;
cd_material_regra_w			integer;
ie_agora_regra_w				varchar(1);
nr_seq_proc_interno_regra_w			bigint;
nr_seq_proc_interno_w			bigint;
ie_origem_proced_w			bigint;
ds_recomendacao_w			varchar(4000);
cd_recomendacao_w			bigint;
ie_copia_w				varchar(1);
ie_solucao_pca_w				varchar(1);
ie_liberada_estendido_w			varchar(1);
ie_esquema_alternado_w			varchar(1);
ds_solucao_w				varchar(100);
ie_acm_w				varchar(1);
ie_repete_copia_w				varchar(1);
ie_urgencia_w				varchar(1);
ie_urgencia_sol_w				varchar(1);
ie_liberado_w				varchar(1);
qt_inconsistencia_w			bigint;
nr_seq_prot_glic_w				bigint;
cd_unidade_medida_dose_w			varchar(30);
qt_dose_w				double precision;
ds_componentes_w				varchar(2000);
ie_identica_w				varchar(15);
cd_setor_copia_w				varchar(2000);
ds_classif_setor_w				varchar(2000);
cd_classif_prescr_w			varchar(10);
cd_setor_prescr_w				integer;
ie_copia_funcao_dif_w			varchar(1);
ie_copia_outra_funcao_w			varchar(1);
ie_funcao_prescritor_w			varchar(3);
ie_origem_inf_w				varchar(1);
ie_tipo_pessoa_w				varchar(5);
ie_tipo_evolucao_w				varchar(5);
nr_seq_apres_w				bigint;
cd_grupo_material_w			bigint;
cd_subgrupo_material_w 			bigint;
cd_classe_material_w 			bigint;
nr_seq_atend_w				bigint;
ie_copia_coleta_w				varchar(1);
nr_seq_exame_w				bigint;
nr_seq_interno_w				bigint;
ie_copiar_rep_w				varchar(2) := 'S';
ds_medic_nao_padrao_w			varchar(255);
VarQtdDietaOral_w				bigint;
QtdDietaOralPrescr_w			bigint;
nr_atendimento_w				bigint;
ie_respiracao_w				prescr_gasoterapia.ie_respiracao%type;
ie_disp_resp_esp_w			prescr_gasoterapia.ie_disp_resp_esp%type;
ie_modo_adm_w				prescr_gasoterapia.ie_modo_adm%type;
ie_copia_interv_w				varchar(1);
ie_funcao_copiar_w			varchar(2000);
ie_emergencia_w				varchar(1);
ie_prescricao_w				varchar(1) := 'S';
qt_gasoterapia_w			prescr_gasoterapia.qt_gasoterapia%type;
cd_intervalo_sol_w			prescr_solucao.cd_intervalo%type;
ie_padronizado_w		varchar(1);
ie_nao_padronizado_parametro_w	varchar(1);
qt_solucao_w				prescr_material.qt_solucao%type;

-- Controle de liberacao do CIH --
ie_ciclo_reprov_w				varchar(1) := 'S';



c01 CURSOR FOR
SELECT	CASE WHEN coalesce(ie_copiar,'N')='S' THEN CASE WHEN ie_ciclo_reprov_w='S' THEN coalesce(ie_copiar_reprov_cih,'S')  ELSE 'S' END   ELSE 'N' END  ie_copiar,
	cd_material,
	cd_intervalo,
	ie_agora,
	coalesce(nr_seq_apres,99) nr_seq_apres
from	rep_regra_copia_crit
where	ie_tipo_item	= ie_tipo_item_regra_w
and		((nr_seq_regra	= nr_seq_regra_p) or (coalesce(nr_seq_regra_p,0) = 0))
and		coalesce(cd_material,cd_material_w)	= cd_material_w
and		((cd_intervalo		= cd_intervalo_w) or (coalesce(cd_intervalo::text, '') = ''))
and		((coalesce(ie_agora,'S')	= 'S') or (ie_agora		= ie_urgencia_w))
and		((coalesce(ie_acm,'S')	= 'S') or (ie_acm		= ie_acm_w))
and		((coalesce(ie_se_necessario,'S')	= 'S') or (ie_se_necessario		= ie_se_necessario_w))
and     coalesce(cd_classe_material,cd_classe_material_w) = cd_classe_material_w
and     coalesce(cd_grupo_material,cd_grupo_material_w)   = cd_grupo_material_w
and     coalesce(cd_subgrupo_material,cd_subgrupo_material_w) = cd_subgrupo_material_w
order by  coalesce(cd_material,0),
	  coalesce(cd_grupo_material,0),
 	  coalesce(cd_subgrupo_material,0),
	  coalesce(cd_classe_material,0),
	  nr_seq_apres,
	  coalesce(cd_intervalo,'AAA'),
	  ie_agora;

c02 CURSOR FOR
SELECT	coalesce(ie_copiar,'N'),
		coalesce(nr_seq_proc_interno,0) nr_seq_proc_interno,
		coalesce(cd_intervalo,'AAAAAAA') cd_intervalo,
		ie_proced_agora
from	rep_regra_copia_crit
where	ie_tipo_item	= ie_tipo_item_regra_w
and		((nr_seq_regra	= nr_seq_regra_p) or (coalesce(nr_seq_regra_p,0) = 0))
and		coalesce(nr_seq_proc_interno,coalesce(nr_seq_proc_interno_w,0))	= coalesce(nr_seq_proc_interno_w,0)
and		coalesce(nr_seq_exame,coalesce(nr_seq_exame_w,0))	= coalesce(nr_seq_exame_w,0)
and		((cd_intervalo		= cd_intervalo_w) or (coalesce(cd_intervalo::text, '') = ''))
order by nr_seq_proc_interno,
	cd_intervalo,
	ie_agora;

C03 CURSOR FOR
SELECT	coalesce(ie_copiar,'N')
from	rep_regra_copia_crit
where	nr_seq_regra	= nr_seq_regra_p
and		ie_tipo_item	= ie_tipo_item_regra_w
and		((coalesce(ie_pca, 'S') = 'S') or (coalesce(ie_solucao_pca_w, 'N') =  coalesce(ie_pca, 'S')))
and		((coalesce(ie_se_necessario, 'S') = 'S') or (coalesce(ie_se_necessario_w, 'N') =  coalesce(ie_se_necessario, 'S')))
and		((coalesce(ie_ACM, 'S') = 'S') or (coalesce(ie_acm_w, 'N') =  coalesce(ie_ACM, 'S')))
and		((coalesce(ie_esquema_alternado, 'S') = 'S') or (coalesce(ie_esquema_alternado_w, 'N') =  coalesce(ie_esquema_alternado, 'S')))
and		((coalesce(ie_agora,'S') = 'S') or (ie_agora = ie_urgencia_sol_w))
order by coalesce(nr_seq_apres, 99);

C04 CURSOR FOR
SELECT	coalesce(ie_copiar,'N')
from	rep_regra_copia_crit
where	nr_seq_regra	= nr_seq_regra_p
and		ie_tipo_item	= ie_tipo_item_regra_w
and		((coalesce(ie_se_necessario, 'S') = 'S') or (coalesce(ie_se_necessario_w, 'N') =  coalesce(ie_se_necessario, 'S')))
and		((coalesce(ie_ACM, 'S') = 'S') or (coalesce(ie_acm_w, 'N') =  coalesce(ie_ACM, 'S')))
and		((coalesce(ie_agora,'S') = 'S') or (ie_agora = ie_urgencia_w))
order by coalesce(nr_seq_apres, 99);


BEGIN

CALL Wheb_assist_pck.set_informacoes_usuario(cd_estabelecimento_p, cd_perfil_p, nm_usuario_p);

VarBancoSangue_w 		:= Wheb_assist_pck.obterParametroFuncao(924,60);
ie_copia_funcao_dif_w 	:= Wheb_assist_pck.obterParametroFuncao(924,62);
ie_copia_outra_funcao_w := Wheb_assist_pck.obterParametroFuncao(924,107);
ie_funcao_copiar_w		:= Wheb_assist_pck.obterParametroFuncao(924,497);
ds_classif_setor_w		:= Wheb_assist_pck.obterParametroFuncao(924,699);
cd_setor_copia_w		:= Wheb_assist_pck.obterParametroFuncao(924,846);
VarQtdDietaOral_w		:= Wheb_assist_pck.obterParametroFuncao(924,298);

ie_copia_coleta_w := Obter_Param_Usuario(950, 159, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_copia_coleta_w);
ie_nao_padronizado_parametro_w := Obter_Param_Usuario(924, 111, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_nao_padronizado_parametro_w);

select	CASE WHEN coalesce(dt_liberacao_medico,coalesce(dt_liberacao,dt_liberacao_farmacia)) IS NULL THEN 'N'  ELSE 'S' END ,
		cd_pessoa_fisica,
		cd_setor_atendimento,
		substr(obter_classif_setor(cd_setor_atendimento),1,10),
		ie_funcao_prescritor,
		ie_origem_inf,
		nr_seq_atend,
		nr_atendimento,
		coalesce(ie_emergencia,'N')
into STRICT		ie_liberado_w,
		cd_pessoa_fisica_w,
		cd_setor_prescr_w,
		cd_classif_prescr_w,
		ie_funcao_prescritor_w,
		ie_origem_inf_w,
		nr_seq_atend_w,
		nr_atendimento_w,
		ie_emergencia_w
from		prescr_medica
where		nr_prescricao	= nr_prescricao_p  LIMIT 1;

select	max(ie_tipo_evolucao),
		max(cd_pessoa_fisica)
into STRICT	ie_tipo_evolucao_w,
		cd_pessoa_usuario_w
from	usuario
where	nm_usuario	= nm_usuario_p  LIMIT 1;

if (ie_tipo_item_p = 'L') then
	select	max(nr_seq_exame)
	into STRICT	nr_seq_exame_w
	from	prescr_procedimento
	where	nr_prescricao	= nr_prescricao_p
	and		nr_sequencia	= nr_seq_item_p  LIMIT 1;
end if;


if (ie_tipo_item_p = 'M') then
	select	substr(coalesce(max(obter_se_material_padronizado(cd_estabelecimento_p,a.cd_material)),'N'),1,1)
	into STRICT	ie_padronizado_w
	from	prescr_material a
	where	a.nr_prescricao	= nr_prescricao_p
	and		a.nr_sequencia	= nr_seq_item_p;
end if;

if (ie_copia_funcao_dif_w = 'N') then
	ie_tipo_pessoa_w	:= substr(obter_tipo_pessoa(cd_pessoa_usuario_w),1,5);
end if;

ds_item_w	:= plt_obter_desc_item(nr_prescricao_p, nr_seq_item_p, ie_tipo_item_p, 'I');
if (coalesce(ds_item_w::text, '') = '') then
	ds_item_w	:= ie_tipo_item_p||' '||wheb_mensagem_pck.get_texto(309753)||'='||nr_prescricao_p||' '||wheb_mensagem_pck.get_texto(309754)||'='||nr_prescricao_p||'.'; -- Prescr	--Seq
end if;

select	coalesce(count(*),0)
into STRICT	QtdDietaOralPrescr_w
from	Prescr_dieta a,
		prescr_medica b
where	a.nr_prescricao		= b.nr_prescricao
and		b.nr_atendimento	= nr_atendimento_w
and		obter_se_prescr_vig_adep(b.dt_inicio_prescr,b.dt_validade_prescr,dt_inicio_extensao_p,dt_fim_extensao_p) = 'S'
and		(((obter_datas_prescricao(b.nr_prescricao,'L') IS NOT NULL AND (obter_datas_prescricao(b.nr_prescricao,'L'))::text <> '')) or (b.nm_usuario_original	= nm_usuario_p))
and		coalesce(a.dt_suspensao::text, '') = ''
and		coalesce(b.dt_suspensao::text, '') = '';

if (nr_seq_atend_w IS NOT NULL AND nr_seq_atend_w::text <> '') then

	CALL plt_avisar_nao_copiado(ds_item_w, 'TO', ie_tipo_item_p,nr_prescricao_p,0,nm_usuario_p,nr_seq_item_p, null, 'N', null,cd_perfil_p,cd_estabelecimento_p);

elsif (ie_copia_outra_funcao_w	= 'N') and (ie_funcao_prescritor_w IS NOT NULL AND ie_funcao_prescritor_w::text <> '') and (ie_tipo_evolucao_w IS NOT NULL AND ie_tipo_evolucao_w::text <> '') and (ie_funcao_prescritor_w		<> ie_tipo_evolucao_w) then

	CALL plt_avisar_nao_copiado(ds_item_w, 'PA', ie_tipo_item_p,nr_prescricao_p,0,nm_usuario_p,nr_seq_item_p, wheb_mensagem_pck.get_texto(309755), 'N', null,cd_perfil_p,cd_estabelecimento_p);
	-- Parametro [107] Prescricao Eletronica Paciente - "Permite fazer copia de prescricao feita por usuario de outra funcao"
elsif (ie_copia_funcao_dif_w		= 'N') and (coalesce(ie_origem_inf_w,'0')	<> coalesce(ie_tipo_pessoa_w,'0')) then

	CALL plt_avisar_nao_copiado(ds_item_w, 'PA', ie_tipo_item_p,nr_prescricao_p,0,nm_usuario_p,nr_seq_item_p, wheb_mensagem_pck.get_texto(309756), 'N', null,cd_perfil_p,cd_estabelecimento_p);
	-- Parametro [62] Prescricao Eletronica Paciente - "Permite medico copiar prescricao de profissionais nao medicos e vice-versa"
elsif (ie_funcao_copiar_w IS NOT NULL AND ie_funcao_copiar_w::text <> '') and (obter_se_contido_char(ie_funcao_prescritor_w,ie_funcao_copiar_w) = 'N') then

	CALL plt_avisar_nao_copiado(ds_item_w, 'PA', ie_tipo_item_p,nr_prescricao_p,0,nm_usuario_p,nr_seq_item_p, wheb_mensagem_pck.get_texto(309757), 'N', null,cd_perfil_p,cd_estabelecimento_p);
	-- Parametro [497] Prescricao Eletronica Paciente - "Funcoes de usuario que devem ser consideradas ao copiar prescricoes agrupando por dia"
elsif	((ds_classif_setor_w IS NOT NULL AND ds_classif_setor_w::text <> '') and (obter_se_contido(cd_classif_prescr_w, ds_classif_setor_w) = 'N')) then

	CALL plt_avisar_nao_copiado(ds_item_w, 'PA', ie_tipo_item_p,nr_prescricao_p,0,nm_usuario_p,nr_seq_item_p, wheb_mensagem_pck.get_texto(309758), 'N', null,cd_perfil_p,cd_estabelecimento_p);
	-- Parametro [699] Prescricao Eletronica Paciente - "Classificacao dos setores a serem considerados na copia da prescricao"
elsif	((cd_setor_copia_w IS NOT NULL AND cd_setor_copia_w::text <> '') and (obter_se_contido(cd_setor_prescr_w, cd_setor_copia_w) = 'N')) then

	CALL plt_avisar_nao_copiado(ds_item_w, 'PA', ie_tipo_item_p,nr_prescricao_p,0,nm_usuario_p,nr_seq_item_p, wheb_mensagem_pck.get_texto(309759), 'N', null,cd_perfil_p,cd_estabelecimento_p);
	-- Parametro [846] Prescricao Eletronica Paciente - "Setores a serem considerados na copia da prescricao"
elsif	 ((ie_copia_coleta_w = 'N')  and (ie_tipo_item_p = 'L') and (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '')) then
	  CALL plt_avisar_nao_copiado(ds_item_w, 'PA', 'L',nr_prescricao_p,0,nm_usuario_p,nr_seq_item_p, wheb_mensagem_pck.get_texto(309760), 'N', null,cd_perfil_p,cd_estabelecimento_p);
	  -- Parametro [159] Plano Terapeutico - "Permite estender os exames laboratoriais"
elsif	((ie_tipo_item_p  = 'M') and (ie_padronizado_w = 'N') and (ie_nao_padronizado_parametro_w = 'N')) then
		CALL plt_avisar_nao_copiado(ds_item_p => ds_item_w,
								ie_motivo_p => 'PA', 
								ie_tipo_item_p => ie_tipo_item_p,
								nr_prescricao_p => nr_prescricao_p,
								qt_registros_p => 0,
								nm_usuario_p => nm_usuario_p,
								nr_seq_item_p => nr_seq_item_p, 
								ds_observacao_p => substr(wheb_mensagem_pck.get_texto(1076195),1,255),
								ie_permite_p => 'N',
								cd_intervalo_p => null,
								cd_perfil_p => cd_perfil_p,
								cd_estabelecimento_p => cd_estabelecimento_p);
	  -- Parametro [111] Plano Terapeutico - "Copiar materiais/medicamentos nao padronizados"
elsif (ie_tipo_item_p = 'D') and (VarQtdDietaOral_w > 0) and (coalesce(QtdDietaOralPrescr_w,0) >= VarQtdDietaOral_w) then
	CALL plt_avisar_nao_copiado(ds_item_w, 'PA', ie_tipo_item_p,nr_prescricao_p,0,nm_usuario_p,nr_seq_item_p, wheb_mensagem_pck.get_texto(309761, 'VARQTDDIETAORAL_W='||VarQtdDietaOral_w), 'N', null,cd_perfil_p,cd_estabelecimento_p);
	-- Parametro [298] Prescricao Eletronica Paciente - "Quantidade maxima de dietas orais que podem ser prescritas: #@VARQTDDIETAORAL_W#@"
else

	if (ie_tipo_item_p	= 'HM') then
		ie_tipo_item_regra_w	:= 'BS';
	elsif (ie_tipo_item_p	= 'D') then
		ie_tipo_item_regra_w	:= 'DO';
	elsif (ie_tipo_item_p	= 'O') then
		ie_tipo_item_regra_w	:= 'GAS';
	elsif (ie_tipo_item_p	= 'J') then
		ie_tipo_item_regra_w	:= 'JE';
	elsif (ie_tipo_item_p	= 'M') then
		ie_tipo_item_regra_w	:= 'MED';
	elsif (ie_tipo_item_p	= 'NAN') then
		ie_tipo_item_regra_w	:= 'NPA';
	elsif (ie_tipo_item_p	in ('P','L','CCG','CIG','I','SADT')) then
		ie_tipo_item_regra_w	:= 'PRO';
	elsif (ie_tipo_item_p = 'R') then
		ie_tipo_item_regra_w	:= 'REC';
	elsif (ie_tipo_item_p = 'S') then
		ie_tipo_item_regra_w	:= 'SUP';
	elsif (ie_tipo_item_p = 'DI') then	
		ie_tipo_item_regra_w    := 'DIA';
	else
		ie_tipo_item_regra_w	:= ie_tipo_item_p;
	end if;

	if (ie_tipo_item_p	in ('HM','P','L','CCG','CIG','I','SADT')) then

		select	max(cd_procedimento),
				max(nr_seq_derivado),
				max(dt_suspensao_progr),
				max(dt_suspensao),
				coalesce(max(ie_suspenso),'N'),
				max(nr_seq_proc_interno),
				max(ie_origem_proced),
				max(nr_seq_prot_glic),
				max(cd_intervalo),
				max(nr_seq_exame)
		into STRICT	cd_procedimento_w,
				nr_seq_derivado_w,
				dt_suspensao_progr_w,
				dt_suspensao_w,
				ie_suspenso_w,
				nr_seq_proc_interno_w,
				ie_origem_proced_w,
				nr_seq_prot_glic_w,
				cd_intervalo_w,
				nr_seq_exame_w
		from	prescr_procedimento
		where	nr_prescricao = nr_prescricao_p
		and		nr_sequencia = nr_seq_item_p  LIMIT 1;


		if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
			select	coalesce(ie_copiar_rep,'S'),
					nr_sequencia
			into STRICT	ie_copiar_rep_w,
					nr_seq_interno_w
			from	proc_interno

			where	nr_sequencia = nr_seq_proc_interno_w  LIMIT 1;
		end if;

	elsif (ie_tipo_item_p	in ('S','SNE','M','MAT', 'IA', 'IAG','LD')) then

		select	max(nr_seq_leite_deriv),
				max(cd_material),
				max(dt_suspensao_progr),
				max(cd_intervalo),
				max(ie_se_necessario),
				max(ie_urgencia),
				coalesce(max(ie_acm), 'N'),
				max(dt_suspensao),
				coalesce(max(ie_suspenso),'N'),
				max(qt_dose),
				max(ie_via_aplicacao),
				max(cd_unidade_medida_dose),
				max(Obter_estrutura_material(cd_material,'G')),
				max(Obter_estrutura_material(cd_material,'S')),
				max(Obter_estrutura_material(cd_material,'C')),
				max(ds_medic_nao_padrao),
				max(dt_susp_agora),
				coalesce(max(ie_ciclo_reprov),'N'),
				coalesce(max(qt_solucao),0)
		into STRICT	nr_seq_leite_deriv_w,
				cd_material_w,
				dt_suspensao_progr_w,
				cd_intervalo_w,
				ie_se_necessario_w,
				ie_urgencia_w,
				ie_acm_w,
				dt_suspensao_w,
				ie_suspenso_w,
				qt_dose_w,
				ie_via_aplicacao_w,
				cd_unidade_medida_dose_w,
				cd_grupo_material_w,
				cd_subgrupo_material_w,
				cd_classe_material_w,
				ds_medic_nao_padrao_w,
				dt_susp_agora_w,
				ie_ciclo_reprov_w,
				qt_solucao_w
		from	prescr_material
		where	nr_prescricao	= nr_prescricao_p
		and		nr_sequencia	= nr_seq_item_p  LIMIT 1;

		select	coalesce(max(ie_prescricao),'S')
		into STRICT	ie_prescricao_w
		from	material
		where	cd_material	= cd_material_w;

		if (ie_prescricao_w	= 'S') then

			select	coalesce(max(ie_prescricao),'S')
			into STRICT	ie_prescricao_w
			from	material_estab
			where	cd_material		= cd_material_w
			and	cd_estabelecimento	= cd_estabelecimento_p;

		end if;

	elsif (ie_tipo_item_p in ('SOL')) then

		select	max(ie_solucao_pca),
				coalesce(max(ie_se_necessario),'N'),
				coalesce(max(ie_acm),'N'),
				max(ie_esquema_alternado),
				max(dt_suspensao),
				coalesce(max(ie_suspenso),'N'),
				coalesce(max(ds_solucao),'XPTO'),
				max(obter_componentes_solucao(nr_prescricao, nr_seq_solucao, 'N', nm_usuario_p, cd_estabelecimento_p)),
				coalesce(max(ie_urgencia),'N'),
				coalesce(max(cd_intervalo),'XPTO')
		into STRICT	ie_solucao_pca_w,
				ie_se_necessario_w,
				ie_acm_w,
				ie_esquema_alternado_w,
				dt_suspensao_w,
				ie_suspenso_w,
				ds_solucao_w,
				ds_componentes_w,
				ie_urgencia_sol_w,
				cd_intervalo_sol_w
		from	prescr_solucao
		where	nr_prescricao	= nr_prescricao_p
		and		nr_seq_solucao	= nr_seq_item_p  LIMIT 1;

	elsif (ie_tipo_item_p in ('NAN','NPN','NPP')) then

		select	max(dt_suspensao),
				coalesce(max(ie_suspenso),'N')
		into STRICT	dt_suspensao_w,
				ie_suspenso_w
		from	nut_pac
		where	nr_sequencia	= nr_seq_item_p
		and		nr_prescricao	= nr_prescricao_p  LIMIT 1;

	end if;

	if (ie_tipo_item_p	in ('M','MAT')) then

		open C01;
		loop
		fetch C01 into
			ie_copiar_w,
			cd_material_regra_w,
			cd_intervalo_regra_w,
			ie_agora_regra_w,
			nr_seq_apres_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			ie_copiar_w				:= ie_copiar_w;


		end loop;
		close C01;

	elsif (ie_tipo_item_p	in ('P','L','CCG','CIG','I','SADT')) then

		open C02;
		loop
		fetch C02 into
			ie_copiar_w,
			nr_seq_proc_interno_regra_w,
			cd_intervalo_regra_w,
			ie_agora_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			ie_copiar_w		:= ie_copiar_w;
		end loop;
		close C02;

	elsif (ie_tipo_item_p	in ('SOL')) then

		open C03;
		loop
		fetch C03 into
			ie_copiar_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			ie_copiar_w := ie_copiar_w;
		end loop;
		close C03;

	elsif (ie_tipo_item_p	in ('NPP')) then

		--ie_copiar_w	:= 'S';
		select	coalesce(MAX(ie_copiar),'N')
		into STRICT	ie_copiar_w
		from	rep_regra_copia_crit
		where	nr_seq_regra	= nr_seq_regra_p
		and	ie_tipo_item	= ie_tipo_item_regra_w;
		

	elsif (ie_tipo_item_p	in ('LD')) then

		select	coalesce(MAX(ie_copiar),'N')
		into STRICT	ie_copiar_w
		from	rep_regra_copia_crit
		where	nr_seq_regra	= nr_seq_regra_p
		and		ie_tipo_item	= ie_tipo_item_regra_w;

	elsif (ie_tipo_item_p	in ('R')) then

		select	coalesce(max(ie_urgencia),'N')
		into STRICT	ie_urgencia_w
		from	prescr_recomendacao
		where	nr_prescricao	= nr_prescricao_p
		and		nr_sequencia	= nr_seq_item_p  LIMIT 1;

		select	coalesce(MAX(ie_copiar),'N')
		into STRICT	ie_copiar_w
		from	rep_regra_copia_crit
		where	nr_seq_regra	= nr_seq_regra_p
		and		ie_tipo_item	= ie_tipo_item_regra_w
		and		((coalesce(ie_agora,'S')	= 'S') or (ie_agora		= ie_urgencia_w));

	elsif (ie_tipo_item_p	in ('S','SNE')) then

		open C04;
		loop
		fetch C04 into
			ie_copiar_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			ie_copiar_w := ie_copiar_w;
		end loop;
		close C04;	
	
	else
		
		select	coalesce(MAX(ie_copiar),'N')
		into STRICT	ie_copiar_w
		from	rep_regra_copia_crit
		where	nr_seq_regra	= nr_seq_regra_p
		and		ie_tipo_item	= ie_tipo_item_regra_w;

	end if;

	if (ie_tipo_item_p	= 'HM') then

		if (nr_seq_derivado_w IS NOT NULL AND nr_seq_derivado_w::text <> '') then
			select	coalesce(max(a.nr_prescricao),0),
					max(CASE WHEN coalesce(coalesce(a.dt_liberacao_medico, a.dt_liberacao)::text, '') = '' THEN  'N'  ELSE 'S' END ),
					max(a.nm_usuario_original)
			into STRICT	nr_prescr_estendido_w,
					ie_liberada_estendido_w,
					nm_usuario_estendido_w
			from	prescr_procedimento b,
					prescr_medica a
			where	a.nr_prescricao = b.nr_prescricao
			and		coalesce(b.dt_extensao, a.dt_validade_prescr) = dt_fim_extensao_p
			and		a.cd_pessoa_fisica = cd_pessoa_fisica_w
			and		b.cd_procedimento = cd_procedimento_w
			and		b.nr_seq_derivado = nr_seq_derivado_w
			and		coalesce(b.ie_suspenso,'N') <> 'S';
		else
			nr_prescr_estendido_w := 0;
			ie_liberada_estendido_w := 'N';
		end if;

	elsif (ie_tipo_item_p	= 'D') then

		select	coalesce(max(ie_suspenso),'N'),
				max(dt_suspensao_progr),
				max(cd_dieta),
				max(dt_suspensao)
		into STRICT	ie_suspenso_w,
				dt_suspensao_progr_w,
				cd_dieta_w,
				dt_suspensao_w
		from	prescr_dieta
		where	nr_prescricao	= nr_prescricao_p
		and		nr_sequencia	= nr_seq_item_p  LIMIT 1;

		if (cd_dieta_w IS NOT NULL AND cd_dieta_w::text <> '') then
			select	coalesce(max(a.nr_prescricao),0),
					max(CASE WHEN coalesce(coalesce(a.dt_liberacao_medico, a.dt_liberacao)::text, '') = '' THEN  'N'  ELSE 'S' END ),
					max(a.nm_usuario_original)
			into STRICT	nr_prescr_estendido_w,
					ie_liberada_estendido_w,
					nm_usuario_estendido_w
			from	prescr_dieta b,
					prescr_medica a
			where	a.nr_prescricao		= b.nr_prescricao
			and		coalesce(b.dt_extensao, a.dt_validade_prescr) = dt_fim_extensao_p
			and		a.cd_pessoa_fisica	= cd_pessoa_fisica_w
			and		b.cd_dieta		= cd_dieta_w
			and		coalesce(b.ie_suspenso,'N')	<> 'S';
		else
			nr_prescr_estendido_w := 0;
			ie_liberada_estendido_w := 'N';
		end if;

	elsif (ie_tipo_item_p = 'O') then

		select	max(nr_seq_gas),
				max(dt_suspensao_progr),
				coalesce(max(ie_suspenso),'N'),
				max(dt_suspensao),
				coalesce(max(ie_respiracao),'XPTO'),
				coalesce(max(ie_disp_resp_esp),'XPTO'),
				coalesce(max(ie_modo_adm),'XPTO'),
				coalesce(max(cd_intervalo),'XPTO'),
				coalesce(max(qt_gasoterapia),0)
		into STRICT	nr_seq_gas_w,
				dt_suspensao_progr_w,
				ie_suspenso_w,
				dt_suspensao_w,
				ie_respiracao_w,
				ie_disp_resp_esp_w,
				ie_modo_adm_w,
				cd_intervalo_w,
				qt_gasoterapia_w
		from	prescr_gasoterapia
		where	nr_prescricao	= nr_prescricao_p
		and		nr_sequencia	= nr_seq_item_p  LIMIT 1;

		if (nr_seq_gas_w IS NOT NULL AND nr_seq_gas_w::text <> '') then
			select	coalesce(max(b.nr_prescricao),0),
					max(CASE WHEN coalesce(coalesce(b.dt_liberacao_medico, b.dt_liberacao)::text, '') = '' THEN  'N'  ELSE 'S' END ),
					max(b.nm_usuario_original)
			into STRICT	nr_prescr_estendido_w,
					ie_liberada_estendido_w,
					nm_usuario_estendido_w
			from	prescr_gasoterapia a,
					prescr_medica b
			where	a.nr_prescricao = b.nr_prescricao
			and		b.cd_pessoa_fisica = cd_pessoa_fisica_w
			and		coalesce(a.dt_extensao, b.dt_validade_prescr) = dt_fim_extensao_p
			and		a.nr_seq_gas	= nr_seq_gas_w
			and		coalesce(a.ie_respiracao,ie_respiracao_w)  = ie_respiracao_w
			and		coalesce(ie_disp_resp_esp,ie_disp_resp_esp_w) = ie_disp_resp_esp_w
			and		coalesce(ie_modo_adm,ie_modo_adm_w) = ie_modo_adm_w
			and		coalesce(cd_intervalo,'XPTO') = coalesce(cd_intervalo_w,'XPTO')
			and		coalesce(qt_gasoterapia,0) = qt_gasoterapia_w
			and		coalesce(a.ie_suspenso,'N') <> 'S';
		else
			nr_prescr_estendido_w := 0;
			ie_liberada_estendido_w := 'N';
		end if;

	elsif (ie_tipo_item_p	= 'J') then

		select	max(nr_seq_tipo),
				coalesce(max(ie_suspenso),'N'),
				coalesce(max(ie_repete_copia),'N')
		into STRICT	nr_seq_tipo_w,
				ie_suspenso_w,
				ie_repete_copia_w
		from	rep_jejum
		where	nr_sequencia	= nr_seq_item_p
		and		nr_prescricao	= nr_prescricao_p  LIMIT 1;

		if (nr_seq_tipo_w IS NOT NULL AND nr_seq_tipo_w::text <> '') then
			select	coalesce(max(b.nr_prescricao),0),
					max(CASE WHEN coalesce(coalesce(b.dt_liberacao_medico, b.dt_liberacao)::text, '') = '' THEN  'N'  ELSE 'S' END ),
					max(b.nm_usuario_original)
			into STRICT	nr_prescr_estendido_w,
					ie_liberada_estendido_w,
					nm_usuario_estendido_w
			from	rep_jejum a,
					prescr_medica b
			where	a.nr_prescricao	= b.nr_prescricao
			and		coalesce(a.dt_extensao, b.dt_validade_prescr) = dt_fim_extensao_p
			and		b.cd_pessoa_fisica = cd_pessoa_fisica_w
			and		coalesce(a.ie_suspenso,'N')	<> 'S'
			and		a.nr_seq_tipo	= nr_seq_tipo_w  LIMIT 1;
		else
			nr_prescr_estendido_w := 0;
			ie_liberada_estendido_w := 'N';
		end if;

	elsif (ie_tipo_item_p	= 'LD') then

		select	max(cd_intervalo),
				max(nr_seq_disp_succao),
				max(ie_via_aplicacao),
				max(ie_se_necessario)
		into STRICT	cd_intervalo_w,
				nr_seq_disp_succao_w,
				ie_via_leite_w,
				ie_se_necessario_w
		from	prescr_leite_deriv
		where	nr_prescricao	= nr_prescricao_p
		and		nr_sequencia	= nr_seq_leite_deriv_w  LIMIT 1;

		if (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
			select	coalesce(max(b.nr_prescricao),0),
					max(CASE WHEN coalesce(coalesce(b.dt_liberacao_medico, b.dt_liberacao)::text, '') = '' THEN  'N'  ELSE 'S' END ),
					max(b.nm_usuario_original)
			into STRICT	nr_prescr_estendido_w,
					ie_liberada_estendido_w,
					nm_usuario_estendido_w
			from	prescr_material a,
					prescr_leite_deriv c,
					prescr_medica b
			where	b.nr_prescricao	= a.nr_prescricao
			and		b.nr_prescricao	= c.nr_prescricao
			and		a.nr_prescricao	= c.nr_prescricao
			and		a.nr_seq_leite_deriv = c.nr_sequencia
			and		coalesce(a.dt_extensao, b.dt_validade_prescr) = dt_fim_extensao_p
			and		coalesce(c.cd_intervalo,'XPTO')	= coalesce(cd_intervalo_w,'XPTO')
			and		coalesce(c.ie_via_aplicacao,'XPTO') = coalesce(ie_via_leite_w,'XPTO')
			and		coalesce(c.ie_se_necessario,'N') = coalesce(ie_se_necessario_w,'N')
			and		coalesce(c.nr_seq_disp_succao,0) = coalesce(nr_seq_disp_succao_w,0)
			and		b.cd_pessoa_fisica	= cd_pessoa_fisica_w
			and		a.cd_material	= cd_material_w
			and		coalesce(a.ie_suspenso,'N')	<> 'S';
		else
			nr_prescr_estendido_w := 0;
			ie_liberada_estendido_w := 'N';
		end if;

	elsif (ie_tipo_item_p	in ('S','SNE','M')) then

		if (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
			select	coalesce(max(b.nr_prescricao),0),
					max(CASE WHEN coalesce(coalesce(b.dt_liberacao_medico, b.dt_liberacao)::text, '') = '' THEN  'N'  ELSE 'S' END ),
					max(b.nm_usuario_original)
			into STRICT	nr_prescr_estendido_w,
					ie_liberada_estendido_w,
					nm_usuario_estendido_w
			from	prescr_material a,
					prescr_medica b
			where	b.nr_prescricao	= a.nr_prescricao
			and		b.cd_pessoa_fisica	= cd_pessoa_fisica_w
			and		coalesce(a.dt_extensao, b.dt_validade_prescr) = dt_fim_extensao_p
			and		a.cd_material	= cd_material_w
			and		coalesce(a.cd_intervalo,'XPTO')	= coalesce(cd_intervalo_w,'XPTO')
			and		a.qt_dose	= qt_dose_w
			and		coalesce(a.qt_solucao,0)	= coalesce(qt_solucao_w,0)
			and		a.cd_unidade_medida_dose	= cd_unidade_medida_dose_w
			and		coalesce(a.ie_via_aplicacao,'XPTO')		= coalesce(ie_via_aplicacao_w,'XPTO')
			and		coalesce(a.ds_medic_nao_padrao,'XPTO')	= coalesce(ds_medic_nao_padrao_w,'XPTO')
			and		coalesce(a.ie_suspenso,'N')	<> 'S';
		else
			nr_prescr_estendido_w := 0;
			ie_liberada_estendido_w := 'N';
		end if;

	elsif (ie_tipo_item_p	= 'NAN') then

		select	coalesce(max(b.nr_prescricao),0),
				max(CASE WHEN coalesce(coalesce(b.dt_liberacao_medico, b.dt_liberacao)::text, '') = '' THEN  'N'  ELSE 'S' END ),
				max(b.nm_usuario_original)
		into STRICT	nr_prescr_estendido_w,
				ie_liberada_estendido_w,
				nm_usuario_estendido_w
		from	nut_pac a,
				prescr_medica b
		where	a.nr_prescricao 	= b.nr_prescricao
		and		a.ie_npt_adulta 	= 'S'
		and		coalesce(a.dt_extensao, b.dt_validade_prescr) = dt_fim_extensao_p
		and		b.cd_pessoa_fisica 	= cd_pessoa_fisica_w
		and		coalesce(a.ie_suspenso,'N')	<> 'S';

	elsif (ie_tipo_item_p	= 'NPN') then

		select	coalesce(max(b.nr_prescricao),0),
				max(CASE WHEN coalesce(coalesce(b.dt_liberacao_medico, b.dt_liberacao)::text, '') = '' THEN  'N'  ELSE 'S' END ),
				max(b.nm_usuario_original)
		into STRICT	nr_prescr_estendido_w,
				ie_liberada_estendido_w,
				nm_usuario_estendido_w
		from	nut_pac a,
				prescr_medica b
		where	a.nr_prescricao 	= b.nr_prescricao
		and		a.ie_npt_adulta 	= 'N'
		and		coalesce(a.dt_extensao, b.dt_validade_prescr) = dt_fim_extensao_p
		and		b.cd_pessoa_fisica 	= cd_pessoa_fisica_w
		and		coalesce(a.ie_suspenso,'N')	<> 'S';


	elsif (ie_tipo_item_p	= 'NPP') then

		select	coalesce(max(b.nr_prescricao),0),
				max(CASE WHEN coalesce(coalesce(b.dt_liberacao_medico, b.dt_liberacao)::text, '') = '' THEN  'N'  ELSE 'S' END ),
				max(b.nm_usuario_original)
		into STRICT	nr_prescr_estendido_w,
				ie_liberada_estendido_w,
				nm_usuario_estendido_w
		from	nut_pac a,
				prescr_medica b
		where	a.nr_prescricao 	= b.nr_prescricao
		and		a.ie_npt_adulta 	= 'P'
		and		coalesce(a.dt_extensao, b.dt_validade_prescr) = dt_fim_extensao_p
		and		b.cd_pessoa_fisica 	= cd_pessoa_fisica_w
		and		coalesce(a.ie_suspenso,'N')	<> 'S';

	elsif (ie_tipo_item_p	in ('P','L','CCG','CIG','I')) then

		if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
			select	coalesce(max(a.nr_prescricao),0),
					max(CASE WHEN coalesce(coalesce(a.dt_liberacao_medico, a.dt_liberacao)::text, '') = '' THEN  'N'  ELSE 'S' END ),
					max(a.nm_usuario_original)
			into STRICT	nr_prescr_estendido_w,
					ie_liberada_estendido_w,
					nm_usuario_estendido_w
			from	prescr_procedimento b,
					prescr_medica a
			where	a.nr_prescricao		= b.nr_prescricao
			and		coalesce(b.dt_extensao, a.dt_validade_prescr) = dt_fim_extensao_p
			and		a.cd_pessoa_fisica 	= cd_pessoa_fisica_w
			and		b.cd_procedimento	= cd_procedimento_w
			and		b.ie_origem_proced	= ie_origem_proced_w
			and		coalesce(b.nr_seq_proc_interno,0)	= coalesce(nr_seq_proc_interno_w,0)
			and		coalesce(b.ie_suspenso,'N')	<> 'S'
			and		coalesce(b.nr_seq_solic_sangue::text, '') = ''
			and		coalesce(b.cd_intervalo,'XPTO')	= coalesce(cd_intervalo_w,'XPTO')
			and		coalesce(b.nr_seq_prot_glic,0)	= coalesce(nr_seq_prot_glic_w,0)
			and		coalesce(b.nr_seq_exame,0)		= coalesce(nr_seq_exame_w,0);
		else
			nr_prescr_estendido_w := 0;
			ie_liberada_estendido_w := 'N';
		end if;

	elsif (ie_tipo_item_p = 'R') then

		select 	max(substr(coalesce(b.ds_tipo_recomendacao,a.ds_recomendacao),1,4000)),
				max(a.cd_recomendacao),
				max(a.dt_suspensao_progr),
				max(a.dt_suspensao),
				max(coalesce(a.ie_suspenso,'N')),
				max(coalesce(b.ie_copia,'S'))
		into STRICT	ds_recomendacao_w,
				cd_recomendacao_w,
				dt_suspensao_progr_w,
				dt_suspensao_w,
				ie_suspenso_w,
				ie_copia_w
		FROM prescr_recomendacao a
LEFT OUTER JOIN tipo_recomendacao b ON (a.cd_recomendacao = b.cd_tipo_recomendacao)
WHERE a.nr_prescricao		= nr_prescricao_p and a.nr_sequencia		= nr_seq_item_p   LIMIT 1;

		select	coalesce(max(a.nr_prescricao),0),
				max(CASE WHEN coalesce(coalesce(a.dt_liberacao_medico, a.dt_liberacao)::text, '') = '' THEN  'N'  ELSE 'S' END ),
				max(a.nm_usuario_original)
		into STRICT	nr_prescr_estendido_w,
				ie_liberada_estendido_w,
				nm_usuario_estendido_w
		from	prescr_recomendacao b,
				prescr_medica a
		where	a.nr_prescricao = b.nr_prescricao
		and		coalesce(b.dt_extensao, a.dt_validade_prescr) = dt_fim_extensao_p
		and		a.cd_pessoa_fisica = cd_pessoa_fisica_w
		and		((b.cd_recomendacao = cd_recomendacao_w) or
				 ((coalesce(b.cd_recomendacao::text, '') = '') and (b.ds_recomendacao = ds_recomendacao_w)))
		and		coalesce(b.ie_suspenso,'N') <> 'S';

	elsif (ie_tipo_item_p	= 'SOL') then

		select	coalesce(max(CASE WHEN ie_solucao_continua='CDVF' THEN 'A'  ELSE ie_solucao_continua END ),'A') -- Identificacao Sol continua
		into STRICT	ie_identica_w
		from	parametro_medico
		where	cd_estabelecimento = cd_estabelecimento_p;

		select	coalesce(max(a.nr_prescricao),0),
				max(CASE WHEN coalesce(coalesce(a.dt_liberacao_medico, a.dt_liberacao)::text, '') = '' THEN  'N'  ELSE 'S' END ),
				max(a.nm_usuario_original)
		into STRICT	nr_prescr_estendido_w,
				ie_liberada_estendido_w,
				nm_usuario_estendido_w
		from	atendimento_paciente c,
				prescr_medica a,
				prescr_solucao b
		where	a.nr_prescricao = b.nr_prescricao
		and		a.nr_atendimento = c.nr_atendimento
		and		c.cd_pessoa_fisica = a.cd_pessoa_fisica
		and		coalesce(b.dt_extensao, a.dt_validade_prescr) = dt_fim_extensao_p
		and		a.cd_pessoa_fisica = cd_pessoa_fisica_w
		and 	coalesce(cd_intervalo,cd_intervalo_sol_w) = cd_intervalo_sol_w
		and	(((coalesce(b.ds_solucao,'XPTO') = ds_solucao_w) and (b.ds_solucao IS NOT NULL AND b.ds_solucao::text <> '') and (ie_identica_w = 'T')) or
			 ((coalesce(b.ds_solucao,'XPTO') = ds_solucao_w) and (obter_componentes_solucao(b.nr_prescricao, b.nr_seq_solucao, 'N', nm_usuario_p, cd_estabelecimento_p) = ds_componentes_w) and (ie_identica_w = 'A')) or
			 ((obter_componentes_solucao(b.nr_prescricao, b.nr_seq_solucao, 'N', nm_usuario_p, cd_estabelecimento_p) = ds_componentes_w) and (ie_identica_w = 'C')))
		and	coalesce(b.ie_suspenso,'N') <> 'S';

	end if;

	if (nr_prescr_estendido_w	> 0) then
		if (ie_liberada_estendido_w	= 'S') or (nm_usuario_estendido_w		= nm_usuario_p) then
			CALL plt_avisar_nao_copiado(ds_item_w, 'IE',ie_tipo_item_p,nr_prescricao_p,0,nm_usuario_p,nr_seq_item_p,wheb_mensagem_pck.get_texto(308847) ||': '||nr_prescr_estendido_w, 'N', -- prescricao
cd_intervalo_w,cd_perfil_p,cd_estabelecimento_p);
		else
			CALL plt_avisar_nao_copiado(ds_item_w, 'IE',ie_tipo_item_p,nr_prescricao_p,0,nm_usuario_p,nr_seq_item_p,
			wheb_mensagem_pck.get_texto(309798) ||'. '||wheb_mensagem_pck.get_texto(308847)||': '||nr_prescr_estendido_w, 'S', cd_intervalo_w,cd_perfil_p,cd_estabelecimento_p); -- Item ja estendido, mas nao liberado	-- prescricao
		end if;
	end if;

	if (ie_suspenso_w = 'S') or
		(dt_suspensao_progr_w IS NOT NULL AND dt_suspensao_progr_w::text <> '' AND dt_inicio_extensao_p	>= dt_suspensao_progr_w) or (dt_suspensao_w IS NOT NULL AND dt_suspensao_w::text <> '') or (dt_susp_agora_w IS NOT NULL AND dt_susp_agora_w::text <> '') then
		CALL plt_avisar_nao_copiado(ds_item_w, 'IS',ie_tipo_item_p,nr_prescricao_p,0,nm_usuario_p,nr_seq_item_p,null, 'N', cd_intervalo_w,cd_perfil_p,cd_estabelecimento_p);
	end if;

	if (ie_copiar_w	= 'N') then
		CALL plt_avisar_nao_copiado(ds_item_w, 'RC', ie_tipo_item_p,nr_prescricao_p,0,nm_usuario_p,nr_seq_item_p, null, 'N', cd_intervalo_w,cd_perfil_p,cd_estabelecimento_p);
	end if;

	if (ie_repete_copia_w	= 'N') and (ie_tipo_item_p		= 'J') then
		CALL plt_avisar_nao_copiado(ds_item_w, 'NM',ie_tipo_item_p,nr_prescricao_p,0,nm_usuario_p,nr_seq_item_p,wheb_mensagem_pck.get_texto(309802), 'N', -- Campo "Manter o jejum na copia da REP" desmarcado!
cd_intervalo_w,cd_perfil_p,cd_estabelecimento_p);
	end if;

	if (VarBancoSangue_w	= 'N') and (ie_tipo_item_p		= 'HM') then
		CALL plt_avisar_nao_copiado(ds_item_w, 'PA', ie_tipo_item_p,nr_prescricao_p,0,nm_usuario_p,nr_seq_item_p, wheb_mensagem_pck.get_texto(309803), 'N' , cd_intervalo_w,cd_perfil_p,cd_estabelecimento_p);
		-- Parametro [60] Prescricao Eletronica Paciente - "Copiar a solicitacao de banco de sangue na copia da prescricao"
	end if;

	if (ie_copia_w = 'N') and (ie_tipo_item_p	= 'R') then
		CALL plt_avisar_nao_copiado(ds_item_w, 'CA',ie_tipo_item_p,nr_prescricao_p,0,nm_usuario_p,nr_seq_item_p,wheb_mensagem_pck.get_texto(309804), 'N' , cd_intervalo_w,cd_perfil_p,cd_estabelecimento_p);
		-- Cadastrado para nao copiar
	end if;

	if (nr_seq_interno_w IS NOT NULL AND nr_seq_interno_w::text <> '') and (ie_copiar_rep_w = 'C') then
		CALL plt_avisar_nao_copiado(ds_item_w, 'CA','P',nr_prescricao_p,0,nm_usuario_p,nr_seq_item_p,wheb_mensagem_pck.get_texto(309805), 'N' , cd_intervalo_w,cd_perfil_p,cd_estabelecimento_p);
		-- Nao copiado conforme cadastro do procedimento!
	end if;

	if (ie_liberado_w = 'N') then
		CALL plt_avisar_nao_copiado(ds_item_w, 'IP',ie_tipo_item_p,nr_prescricao_p,0,nm_usuario_p,nr_seq_item_p,null, 'N' , cd_intervalo_w,cd_perfil_p,cd_estabelecimento_p);
	end if;

	if (ie_prescricao_w = 'N') then
		CALL plt_avisar_nao_copiado(ds_item_w, 'IN',ie_tipo_item_p,nr_prescricao_p,0,nm_usuario_p,nr_seq_item_p,null, 'N' , cd_intervalo_w,cd_perfil_p,cd_estabelecimento_p);
	end if;

	if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then

		select	coalesce(max(ie_copiar),'S')
		into STRICT	ie_copia_interv_w
		from	intervalo_prescricao
		where	cd_intervalo = cd_intervalo_w;

		if (ie_copia_interv_w	= 'N') then
			CALL plt_avisar_nao_copiado(ds_item_w, 'CA',ie_tipo_item_p,nr_prescricao_p,0,nm_usuario_p,nr_seq_item_p,wheb_mensagem_pck.get_texto(309806), 'N' , cd_intervalo_w,cd_perfil_p,cd_estabelecimento_p);
			-- Intervalo cadastrado para nao copiar
		end if;
	end if;
end if;

select	count(nr_sequencia)
into STRICT	qt_inconsistencia_w
from	w_copia_plano
where	nr_prescricao	= nr_prescricao_p
and		nr_seq_item	= nr_seq_item_p
and		ie_tipo_item	= ie_tipo_item_p
and		nm_usuario	= nm_usuario_p
and		ie_motivo	not in ('OU','PE')  LIMIT 1;

if (qt_inconsistencia_w > 0) then
	CALL plt_deletar_erro_copia(nr_prescricao_p, nr_seq_item_p, ie_tipo_item_p, '''OU'',''PE''', nm_usuario_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_consiste_extensao_item ( dt_inicio_extensao_p timestamp, dt_fim_extensao_p timestamp, nr_prescricao_p bigint, nr_seq_item_p bigint, ie_tipo_item_p text, nr_seq_regra_p bigint, nm_usuario_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint) FROM PUBLIC;

