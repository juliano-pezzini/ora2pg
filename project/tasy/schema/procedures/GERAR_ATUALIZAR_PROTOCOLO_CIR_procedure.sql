-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_atualizar_protocolo_cir ( nr_seq_protocolo_p bigint, nr_seq_cirurgia_desc_p bigint, nm_cirurgia_p text, ie_opcao_p text, cd_medico_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE

 
/* 
ie_opcao_p 
 
I - Novo protocolo 
A - Atualizar protocolo 
*/
 
 
ds_diagnostico_w	varchar(2000);
ds_resumo_cirurgia_w	varchar(2000);
ds_diagnostico_pos_w	varchar(2000);
ds_exame_rad_w		varchar(2000);
ds_exame_anatomo_w	varchar(2000);
ds_achados_operat_w	varchar(2000);
ds_cirurgia_w		varchar(32000);
cd_especialidade_w	integer;
ie_gravar_espec_w	varchar(1);
ie_gravar_estab_w	varchar(1);
cd_estabebecimento_w	smallint;


BEGIN 
begin 
ds_erro_p := '';
 
ie_gravar_espec_w := Obter_Param_Usuario(281, 379, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gravar_espec_w);
ie_gravar_estab_w := Obter_Param_Usuario(872, 407, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gravar_estab_w);
 
if (ie_gravar_estab_w = 'S') then 
	cd_estabebecimento_w	:=	cd_estabelecimento_p;
end if;
 
SELECT	ds_diagnostico, 
	ds_resumo_cirurgia, 
	ds_diagnostico_pos, 
	ds_exame_rad, 
	ds_exame_anatomo, 
	ds_achados_operatorios, 
	ds_cirurgia, 
	obter_especialidade_medico(cd_medico_p,'C') 
INTO STRICT	ds_diagnostico_w, 
	ds_resumo_cirurgia_w, 
	ds_diagnostico_pos_w, 
	ds_exame_rad_w, 
	ds_exame_anatomo_w, 
	ds_achados_operat_w, 
	ds_cirurgia_w, 
	cd_especialidade_w 
FROM	cirurgia_descricao 
WHERE	nr_sequencia	= nr_seq_cirurgia_desc_p;
 
IF (ie_opcao_p = 'A') THEN 
	UPDATE	cirurgia_protocolo 
	SET	ds_diagnostico		=	ds_diagnostico_w, 
		ds_resumo_cirurgia	=	ds_resumo_cirurgia_w, 
		ds_diagnostico_pos	=	ds_diagnostico_pos_w, 
		ds_exame_rad		=	ds_exame_rad_w, 
		ds_exame_anatomo	=	ds_exame_anatomo_w, 
		ds_achados_operatorios	=	ds_achados_operat_w, 
		ds_cirurgia		=	ds_cirurgia_w, 
		cd_especialidade 	= 	CASE WHEN ie_gravar_espec_w='S' THEN cd_especialidade_w  ELSE null END  
	WHERE	nr_sequencia		=	nr_seq_protocolo_p;
ELSE 
	INSERT INTO cirurgia_protocolo( 
		nr_sequencia, 
		nm_cirurgia, 
		dt_atualizacao, 
		nm_usuario, 
		ds_diagnostico, 
		ds_resumo_cirurgia, 
		ds_diagnostico_pos, 
		ds_exame_rad, 
		ds_exame_anatomo, 
		ds_achados_operatorios, 
		ds_cirurgia, 
		cd_especialidade, 
		cd_medico, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		cd_estabelecimento, 
		ie_situacao) 
	VALUES ( 
		nextval('cirurgia_protocolo_seq'), 
		nm_cirurgia_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		ds_diagnostico_w, 
		ds_resumo_cirurgia_w, 
		ds_diagnostico_pos_w, 
		ds_exame_rad_w, 
		ds_exame_anatomo_w, 
		ds_achados_operat_w, 
		ds_cirurgia_w, 
		CASE WHEN ie_gravar_espec_w='S' THEN cd_especialidade_w  ELSE null END , 
		cd_medico_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		cd_estabebecimento_w, 
		'A');
END IF;
 
 
COMMIT;
 
exception 
	when others then 
		ds_erro_p := wheb_mensagem_pck.get_texto(279499);
end;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_atualizar_protocolo_cir ( nr_seq_protocolo_p bigint, nr_seq_cirurgia_desc_p bigint, nm_cirurgia_p text, ie_opcao_p text, cd_medico_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

