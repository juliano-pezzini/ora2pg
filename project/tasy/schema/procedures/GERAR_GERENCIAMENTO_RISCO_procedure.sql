-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_gerenciamento_risco ( nr_atendimento_p bigint, nr_prescricao_p bigint, nm_usuario_p text) AS $body$
DECLARE

						

qt_reg_w			bigint;
qt_uso_panorama_w		bigint;
cd_classif_setor_w		varchar(2);
nr_seq_registro_w		bigint;
nr_sequencia_w			bigint;

						
IE_PROFILAXIA_TEV_w		varchar(1);						
IE_PROFILAXIA_LAMG_w		varchar(1);
IE_DECUBITO_ELEV_w		varchar(1);
IE_MUDANCA_DECUBITO_w		varchar(1);
IE_DESMAME_VINI_w		varchar(1);
IE_SEDACAO_w			varchar(1);


qt_mat_tev_w			integer;
qt_rec_tev_w			integer;
qt_mat_lamg_w			integer;
qt_rec_mat_lamg_w		integer;
qt_recomend_cab_elevada_w	bigint;
qt_recomend_decubito_w		bigint;
qt_recomend_sedacao_w		bigint;
qt_recomend_desmame_w	    	bigint;



		procedure Gerar_registro_tev( nr_atendimento_p	bigint,
									  nr_prescricao_p	bigint,
									  nr_seq_registro_p bigint) is
		;
BEGIN
		
		
		select 	count(1)
		into STRICT	qt_mat_tev_w
		from   	prescr_medica a,
				prescr_material b,
				material c
		where  	a.nr_prescricao = b.nr_prescricao
		and    	b.cd_material = c.cd_material
		and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and     a.nr_prescricao = nr_prescricao_p
		and    	a.nr_atendimento = nr_atendimento_p
		and    	c.ie_protocolo_tev = 'S';


		if ( qt_mat_tev_w > 0) then
			
			update	W_GERENCIAMENTO_RISCO
			set		IE_PROFILAXIA_TEV = 'S'
			where	nr_sequencia = nr_seq_registro_p;
			
			commit;
			
		else
				
			select 	count(1)
			into STRICT	qt_rec_tev_w
			from   	prescr_medica a,
					prescr_recomendacao b,
					tipo_recomendacao d,
					classificacao_recomendacao e
			where  	a.nr_prescricao  = b.nr_prescricao
			and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
			and     a.nr_prescricao = nr_prescricao_p
			and		b.cd_recomendacao = d.cd_tipo_recomendacao
			and    	a.nr_atendimento = nr_atendimento_p
			and		d.nr_seq_classif = e.nr_sequencia
			and		e.nr_sequencia = 31 -- Ok
			and		d.cd_tipo_recomendacao = 123; -- Paciente sem indicacao de profilaxia para TEV
			if (qt_rec_tev_w > 0)  then

				update	W_GERENCIAMENTO_RISCO
				set		IE_PROFILAXIA_TEV = 'S'
				where	nr_sequencia = nr_seq_registro_p;
				
				commit;

			end if;
		end if;	
		
		end;

		procedure Gerar_registro_lamg( nr_atendimento_p	number,
									   nr_prescricao_p	number,
									   nr_seq_registro_p number) is
		begin
		
		select 	count(1)
		into STRICT	qt_mat_lamg_w
		from   	prescr_medica a,
				prescr_material b,
				material c
		where  	a.nr_prescricao = b.nr_prescricao
		and    	b.cd_material = c.cd_material
		and    	a.nr_atendimento = nr_atendimento_p
		and     a.nr_prescricao = nr_prescricao_p
		and	    c.cd_material in (51646,51935,509,484,51654,51646,51744,25721,51905,51853,51856,51860,51923,51927,51932,51935);

		if (qt_mat_lamg_w > 0) then

			update	W_GERENCIAMENTO_RISCO
			set		IE_PROFILAXIA_LAMG = 'S'
			where	nr_sequencia = nr_seq_registro_p;
			
			commit;			

		else


			select	count(1)
			into STRICT	qt_rec_mat_lamg_w
			from	prescr_medica a,
					prescr_recomendacao b,
					tipo_recomendacao d,
					classificacao_recomendacao e
			where  	a.nr_prescricao  = b.nr_prescricao
			and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
			and     a.nr_prescricao = nr_prescricao_p
			and		b.cd_recomendacao = d.cd_tipo_recomendacao
			and    	a.nr_atendimento = nr_atendimento_p
			and		d.nr_seq_classif = e.nr_sequencia
			and		e.nr_sequencia = 31 -- Ok
			and		d.cd_tipo_recomendacao = 122;	-- Paciente sem indicacao de profilaxia para LAMG
			if (qt_rec_mat_lamg_w > 0) then

				update	W_GERENCIAMENTO_RISCO
				set		IE_PROFILAXIA_LAMG = 'S'
				where	nr_sequencia = nr_seq_registro_p;
				
				commit;	

			end if;

		end if;
		
		end;	
		
		
		procedure Gerar_registro_decubito_elev(nr_atendimento_p	number,
												nr_prescricao_p	number,
												nr_seq_registro_p number) is
		begin
		
		select 	count(1)
		into STRICT	qt_recomend_cab_elevada_w
		from   	prescr_medica a,
				prescr_recomendacao b,
				tipo_recomendacao d,
				classificacao_recomendacao e
		where  	a.nr_prescricao  = b.nr_prescricao
		and		b.cd_recomendacao = d.cd_tipo_recomendacao
		and    	a.nr_atendimento = nr_atendimento_p
		and     a.nr_prescricao = nr_prescricao_p
		and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and		d.nr_seq_classif = e.nr_sequencia
		and		e.nr_sequencia = 2 -- Ok
		and		d.cd_tipo_recomendacao in (83,84,85,97,86,86,86,83,84,85); --Arquivo DE-PARA
		if (qt_recomend_cab_elevada_w > 0) then

			
			update	W_GERENCIAMENTO_RISCO
			set		IE_DECUBITO_ELEV = 'S'
			where	nr_sequencia = nr_seq_registro_p;
			
			commit;			

		end if;
				
		
		end;	
		
		
		procedure Gerar_registro_mud_decub(	nr_atendimento_p	number,
													nr_prescricao_p	number,
													nr_seq_registro_p number) is
		begin
		
		select 	count(1)
		into STRICT	qt_recomend_decubito_w
		from   	prescr_medica a,
				prescr_recomendacao b,
				tipo_recomendacao d,
				classificacao_recomendacao e
		where  	a.nr_prescricao  = b.nr_prescricao
		and		b.cd_recomendacao = d.cd_tipo_recomendacao
		and    	a.nr_atendimento = nr_atendimento_p
		and		d.nr_seq_classif = e.nr_sequencia
		and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and     a.nr_prescricao = nr_prescricao_p
		and		e.nr_sequencia = 2 --Ok
		and		d.cd_tipo_recomendacao in (15, 16); --Arquivo DE-PARA
		if (qt_recomend_decubito_w > 0) then

			update	W_GERENCIAMENTO_RISCO
			set		IE_MUDANCA_DECUBITO = 'S'
			where	nr_sequencia = nr_seq_registro_p;
			
			commit;
			

		end if;
				
		
		end;
		
		procedure Gerar_registro_vmi(	nr_atendimento_p	number,
										nr_prescricao_p	number,
										nr_seq_registro_p number) is
													
		dt_prescricao_vmi_w			date;
		nr_prescricao_vmi_w			number(10);

		dt_prescricao_vmi_ant_w		date;
		nr_prescricao_vmi_ant_w		number(10);											
													
													
		begin
		
		select 	max(a.dt_prescricao)
		into STRICT    dt_prescricao_vmi_w
		from   	prescr_medica a,
				prescr_gasoterapia b,
				gas c
		where  	a.nr_prescricao = b.nr_prescricao
		and    	a.nr_atendimento = nr_atendimento_p
		and     b.nr_seq_gas = c.nr_sequencia
		and     a.nr_prescricao = nr_prescricao_p
		and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and 	b.nr_seq_gas = 13; -- Arquivo DE-PARA
		
		
		
		
		if (dt_prescricao_vmi_w IS NOT NULL AND dt_prescricao_vmi_w::text <> '') then

			select 	max(a.nr_prescricao),
					max(a.dt_prescricao)
			into STRICT    nr_prescricao_vmi_ant_w,
					dt_prescricao_vmi_ant_w
			from   	prescr_medica a,
					prescr_gasoterapia b,
					gas c
			where  	a.nr_prescricao = b.nr_prescricao
			and    	a.nr_atendimento = nr_atendimento_p
			and		a.nr_prescricao < nr_prescricao_p
			and     a.dt_prescricao between(dt_prescricao_vmi_w - 1) and dt_prescricao_vmi_w
			and     b.nr_seq_gas = c.nr_sequencia
			and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
			and 	b.nr_seq_gas = 13; -- Arquivo DE-PARA
			
			
			if ((dt_prescricao_vmi_w - dt_prescricao_vmi_ant_w) > 1) then
			
			
				select 	count(1)
				into STRICT	qt_recomend_sedacao_w
				from   	prescr_medica a,
						prescr_recomendacao b,
						tipo_recomendacao d,
						classificacao_recomendacao e
				where  	a.nr_prescricao  = b.nr_prescricao
						and		b.cd_recomendacao = d.cd_tipo_recomendacao
						and    	a.nr_atendimento = nr_atendimento_p
						and		d.nr_seq_classif = e.nr_sequencia
						and		a.nr_prescricao = nr_prescricao_p
						and		e.nr_sequencia = 31 -- Arquivo DE-PARA
						and		d.cd_tipo_recomendacao in (101,102,103); --Arquivo DE-PARA
				if (qt_recomend_sedacao_w > 0) then
					
					update	W_GERENCIAMENTO_RISCO
					set		IE_SEDACAO = 'S'
					where	nr_sequencia = nr_seq_registro_p;
					
					commit;

				end if;
				
				
				select 	count(1)
				into STRICT	qt_recomend_desmame_w
				from   	prescr_medica a,
						prescr_recomendacao b,
						tipo_recomendacao d,
						classificacao_recomendacao e
				where  	a.nr_prescricao  = b.nr_prescricao
				and		a.nr_prescricao = nr_prescricao_p
				and		b.cd_recomendacao = d.cd_tipo_recomendacao
				and    	a.nr_atendimento = nr_atendimento_p
				and		d.nr_seq_classif = e.nr_sequencia
				and		e.nr_sequencia = 31 -- Arquivo DE-PARA
				and		d.cd_tipo_recomendacao  = 87; --Arquivo DE-PARA
				if (qt_recomend_desmame_w = 0) then

					
					update	W_GERENCIAMENTO_RISCO
					set		IE_DESMAME_VINI = 'S'
					where	nr_sequencia = nr_seq_registro_p;
					
					commit;

				end if;
			
			else
			
				update	W_GERENCIAMENTO_RISCO
				set		IE_SEDACAO = 'S',
						IE_DESMAME_VINI = 'S'
				where	nr_sequencia = nr_seq_registro_p;
					
				commit;
			
			
			
			end if;
			
			
		else
		
			update	W_GERENCIAMENTO_RISCO
			set		IE_SEDACAO = 'S',
					IE_DESMAME_VINI = 'S'
			where	nr_sequencia = nr_seq_registro_p;
				
			commit;
		
		end if;
		
		end;			
						
begin


Select  count(*)
into STRICT	qt_uso_panorama_w
from	REGRA_PERM_PANORAMA_ICONE
where	CD_ICONE_PANORAMA = 7;

if (qt_uso_panorama_w > 0) then


	delete	from W_GERENCIAMENTO_RISCO
	where	dt_atualizacao < clock_timestamp() - interval '3 days';

	commit;


	if (nr_atendimento_p > 0) and (nr_prescricao_p > 0) then
		
		
		Select  Obter_classif_setor_atend(nr_atendimento_p)
		into STRICT	cd_classif_setor_w
		;

		if (cd_classif_setor_w = '4') then
		
			Select  count(*)
			into STRICT	qt_reg_w
			from	W_GERENCIAMENTO_RISCO
			where	nr_atendimento = nr_atendimento_p
			and		ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_atualizacao) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp());

			if (qt_reg_w > 0) then
			

				Select  coalesce(max(IE_PROFILAXIA_TEV),'N'),
						coalesce(max(IE_PROFILAXIA_LAMG),'N'),
						coalesce(max(IE_DECUBITO_ELEV),'N'),
						coalesce(max(IE_MUDANCA_DECUBITO),'N'),
						coalesce(max(IE_DESMAME_VINI),'N'),
						coalesce(max(IE_SEDACAO),'N'),
						max(nr_sequencia)
				into STRICT	IE_PROFILAXIA_TEV_w,
						IE_PROFILAXIA_LAMG_w,
						IE_DECUBITO_ELEV_w,
						IE_MUDANCA_DECUBITO_w,
						IE_DESMAME_VINI_w,
						IE_SEDACAO_w,
						nr_seq_registro_w
				from	W_GERENCIAMENTO_RISCO
				where	nr_atendimento = nr_atendimento_p;
				
				
				if (IE_PROFILAXIA_TEV_w = 'N') then
				
					Gerar_registro_tev(nr_atendimento_p,nr_prescricao_p,nr_seq_registro_w);	
				
				end if;
				
				if (IE_PROFILAXIA_LAMG_w = 'N') then
				
					Gerar_registro_lamg(nr_atendimento_p,nr_prescricao_p,nr_seq_registro_w);
				
				end if;		
		
			
				if (IE_DECUBITO_ELEV_w = 'N') then
				
					Gerar_registro_decubito_elev(nr_atendimento_p,nr_prescricao_p,nr_seq_registro_w);
				
				end if;
				
				if (IE_MUDANCA_DECUBITO_w = 'N') then
				
					Gerar_registro_mud_decub(nr_atendimento_p,nr_prescricao_p,nr_seq_registro_w);
				
				end if;
				
				if (IE_DESMAME_VINI_w = 'N') or (IE_SEDACAO_w = 'N') then
				
					Gerar_registro_vmi(nr_atendimento_p,nr_prescricao_p,nr_seq_registro_w);
				
				end if;			
				
			else

			
				Select  nextval('w_gerenciamento_risco_seq')
				into STRICT	nr_sequencia_w
				;
				
				insert into W_GERENCIAMENTO_RISCO(   nr_sequencia,
													    nr_atendimento,
														dt_atualizacao,
														dt_atualizacao_nrec,
														nm_usuario,
														nm_usuario_nrec)
											values (   nr_sequencia_w,
														nr_atendimento_p,
														clock_timestamp(),
														clock_timestamp(),
														nm_usuario_p,
														nm_usuario_p);
					
					
				commit;
				
				Gerar_registro_tev(nr_atendimento_p,nr_prescricao_p,nr_sequencia_w);
				Gerar_registro_lamg(nr_atendimento_p,nr_prescricao_p,nr_sequencia_w);
				Gerar_registro_decubito_elev(nr_atendimento_p,nr_prescricao_p,nr_sequencia_w);
				Gerar_registro_mud_decub(nr_atendimento_p,nr_prescricao_p,nr_sequencia_w);
				Gerar_registro_vmi(nr_atendimento_p,nr_prescricao_p,nr_sequencia_w);			

			end if;

		end if;
		
	end if;
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_gerenciamento_risco ( nr_atendimento_p bigint, nr_prescricao_p bigint, nm_usuario_p text) FROM PUBLIC;

