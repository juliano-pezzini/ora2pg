-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE reentrada_atend_acomp_consiste ( nr_atendimento_p bigint, nr_atendimento_acomp_p bigint, dt_acompanhante_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ds_msg_p INOUT text, dt_acompanhante_out_p INOUT timestamp, nr_acompanhante_p bigint default null) AS $body$
DECLARE


ie_acompanhante_w		varchar(1);
ie_posisionar_acomp_w		varchar(1);
qt_acomp_visitando_w		bigint;
qt_acomp_w			bigint;
ie_forma_consiste_acomp_w	varchar(3);
cd_setor_w			bigint;
cd_unidade_basica_w		varchar(10);
cd_unidade_compl_w		varchar(10);
ie_validar_retorno_w 		varchar(1);
ie_acompanhante_sem_saida_w	varchar(1);
nm_acompanhante_w			varchar(80);
cd_pessoa_fisica_w			varchar(20):=0;


BEGIN

/* obter dados Acompanhante */

select 	max(cd_pessoa_fisica),
	max(nm_acompanhante)
into STRICT	cd_pessoa_fisica_w,
	nm_acompanhante_w
from   	atendimento_acompanhante
where	nr_atendimento = nr_atendimento_p
and	nr_acompanhante = nr_acompanhante_p;

/* Parâmetro que Verifica se o paciente ou acompanhante possui retorno sem saída. */

ie_validar_retorno_w := Obter_Param_Usuario(8014, 127, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_validar_retorno_w);

if (coalesce(ie_validar_retorno_w,'N') = 'S') then
	
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_acompanhante_sem_saida_w
	from	atendimento_acompanhante
	where	coalesce(dt_saida::text, '') = ''
	and	nr_acompanhante <> nr_acompanhante_p
	and	((cd_pessoa_fisica = cd_pessoa_fisica_w) 
	or (coalesce(cd_pessoa_fisica_w::text, '') = ''
	and 	nr_atendimento = nr_atendimento_p));

	if (ie_acompanhante_sem_saida_w = 'S') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(228404);
	end if;
	
end if;

if (coalesce(nr_atendimento_p,0) > 0) and (coalesce(nr_atendimento_acomp_p,0) > 0) and (dt_acompanhante_p IS NOT NULL AND dt_acompanhante_p::text <> '') then
	begin
	select	count(*)
	into STRICT	qt_acomp_visitando_w
	from	atendimento_acompanhante
	where	nr_atendimento	= nr_atendimento_p
	and	coalesce(dt_saida::text, '') = '';

	select	q.cd_setor_atendimento,
			q.cd_unidade_basica,
			q.cd_unidade_compl
	into STRICT	cd_setor_w,
			cd_unidade_basica_w,
			cd_unidade_compl_w
	from 	atend_paciente_unidade q
	where 	q.nr_atendimento   	 = 	nr_atendimento_p
	and 	q.dt_entrada_unidade = (SELECT 	max(x.dt_entrada_unidade)
									from 	atend_paciente_unidade x
									where 	x.nr_atendimento = q.nr_atendimento);

	
	--  Controle de visitas - Parâmetro [38] - 
	ie_forma_consiste_acomp_w := obter_param_usuario(8014, 38, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_forma_consiste_acomp_w);
	
	if (ie_forma_consiste_acomp_w = 'EA') then
		select 	sum(qt_max_acomp)
		into STRICT	qt_acomp_w	
		from 	unidade_atendimento 
		where 	cd_setor_atendimento = cd_setor_w
        and 	cd_unidade_basica = cd_unidade_basica_w
		and 	cd_unidade_compl = cd_unidade_compl_w;
	else
		select	coalesce(sum(nr_acompanhante), 0)
		into STRICT	qt_acomp_w
		from	atend_categoria_convenio
		where	nr_atendimento	= nr_atendimento_p;
	end if;

	-- Ocupação hospitalar - Parâmetro [23] - Ação sistema quanto ao número de acompanhantes
	ie_acompanhante_w := obter_param_usuario(44, 23, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_acompanhante_w);
	
	if (qt_acomp_visitando_w >= qt_acomp_w) then
		if (ie_acompanhante_w = 'B') then
			ds_msg_p	:= substr(obter_texto_tasy(42048, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		elsif (ie_acompanhante_w = 'A') then
			ds_msg_p	:= substr(obter_texto_tasy(42049, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		end if;
	end if;

	if (ie_acompanhante_w <> 'B') then
		CALL reentrada_atend_acomp(
			nr_atendimento_acomp_p,
			dt_acompanhante_p,
			nm_usuario_p);
	end if;
	end;
end if;

-- Gestão de Visitas - Parâmetro [39] - Ao registrar a reentrada de um acompanhante, deixar o registro em modo de edição
ie_posisionar_acomp_w := obter_param_usuario(8014, 39, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_posisionar_acomp_w);

if (ie_posisionar_acomp_w = 'S') then
	select	max(dt_acompanhante)
	into STRICT	dt_acompanhante_out_p
	from	atendimento_acompanhante
	where nr_atendimento = nr_atendimento_p;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE reentrada_atend_acomp_consiste ( nr_atendimento_p bigint, nr_atendimento_acomp_p bigint, dt_acompanhante_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ds_msg_p INOUT text, dt_acompanhante_out_p INOUT timestamp, nr_acompanhante_p bigint default null) FROM PUBLIC;

