-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_proc_pac_prescricao ( nr_prescricao_p bigint, nr_sequencia_p bigint, cd_perfil_p bigint, cd_funcao_p bigint, nm_usuario_p text, cd_categoria_p text, ie_tipo_atend_tiss_p text, cd_medico_lab_p text, ie_execucao_relatorio_p text default null, ds_observacao_p text default null) AS $body$
DECLARE


nr_sequencia_w			bigint;
nr_seq_prescr_w			bigint;
nr_atendimento_w		bigint;
dt_entrada_unidade_w		timestamp;
dt_prescricao_w			timestamp;
nr_seq_interno_w		bigint;
cd_convenio_w			integer;
cd_especialidade_prescr_w	bigint;
cd_categoria_w			varchar(10);
cd_cgc_prestador_w		varchar(14);
nr_interno_conta_ww		bigint;
cd_convenio_glosa_w		bigint;
cd_categoria_glosa_w		bigint;
qt_lancamento_w			double precision;
qt_excedida_w			double precision;
nr_cirurgia_propaci_w		bigint;
ie_gerar_setor_prescr_w	varchar(10);
cd_cgc_prest_regra_w		varchar(14);
vardatalibprescr_w		varchar(14);
ie_regra_uso_w			varchar(14);
ie_acao_excesso_w		varchar(14);
dt_execucao_w			timestamp;
dt_lib_w			timestamp;
ie_data_evento_w		varchar(10);
cd_unidade_basica_w		varchar(10);
cd_unidade_compl_w		varchar(10);
VarIE_executar_todos_w		varchar(10);
ie_tipo_data_w			varchar(10);
cd_tipo_acomodacao_w		smallint;
nr_seq_unidade_w		integer;
cd_procedimento_w		bigint;
qt_procedimento_w		double precision;
ie_origem_proced_w		bigint;
cd_setor_atendimento_w		integer;
ie_data_ok_w			boolean;
dt_procedimento_w		timestamp;
dt_entrada_w			timestamp;
qt_setores_w			smallint;
ds_erro_w			varchar(255);
nr_doc_convenio_w		varchar(20);
cd_senha_w			varchar(20);
ie_doc_convenio_w		varchar(3);
cd_local_estoque_w		smallint;
cd_medico_exec_w		varchar(10);
ie_tipo_convenio_w		smallint;
ie_tipo_atendimento_w		smallint;
cd_atividade_profissional_w	smallint;
ie_tipo_atend_bpa_w		smallint;
ie_grupo_atend_bpa_w		smallint;
ie_tipo_servico_sus_w		smallint;
ie_tipo_ato_sus_w		smallint;
nr_seq_agenda_w			agenda_consulta.nr_sequencia%type;
ie_status_agenda_w		varchar(03);
nr_seq_exame_w			bigint;
ie_amostra_w			varchar(1);
ie_tipo_guia_w			varchar(2);
ie_permite_gerar_definitivo_w	varchar(15);
ie_permite_gerar_atend_defin_w	varchar(15);
qt_conta_prov_w			bigint;
qt_conta_def_w			bigint;
nr_seq_proc_interno_w		bigint;
cd_estabelecimento_w		bigint;
ie_medico_executor_w		varchar(10);
cd_medico_executor_w		varchar(10);
ie_medico_req_proc_w		varchar(01) := 'N';
ie_medico_req_proc_resp_w	varchar(01) := 'N';
cd_medico_prescr_w		varchar(10);
dt_prev_execucao_w		timestamp;
dt_inicio_prescr_w		timestamp;
ie_atualiza_func_w		varchar(1) := 'N';
cd_pessoa_fisica_w		varchar(10);
nr_seq_pq_proc_w		bigint;/* rafael em 26/07/06 os37066 */
ie_intervalo_prescr_w		varchar(1);
cd_especialidade_w		integer;
ie_funcao_medico_w		varchar(10);
ie_via_acesso_w			varchar(10);

ie_agenda_nova_w		varchar(1);
ie_agecons_nova_w		varchar(1);
ie_gestao_agenda_w		varchar(1);
cd_tipo_agenda_w		bigint;
ie_evento_agenda_w		varchar(1) := 'N';
ie_evento_agecons_w		varchar(1) := 'N';
ie_evento_gestao_w		varchar(1) := 'N';
ie_consiste_execucao_w		varchar(1) := 'N';
ie_data_conta_w			smallint;
ie_dt_exec_alta_w		varchar(1);
dt_alta_w			timestamp;
nr_interno_conta_w		bigint;
ie_doc_autorizacao_w		varchar(1);

nr_sequencia_autor_w		bigint;
nr_seq_proc_autor_w		bigint;
nr_seq_mat_autor_w		bigint;
nr_doc_conv_autor_w		varchar(20);
cd_senha_autor_w		varchar(20);
ie_autorizado_w			varchar(1);
ie_atual_bioquimico_conta_w	varchar(1);

ds_erro_autor_w			varchar(255) := '';
ie_regra_w			varchar(3) := '';
nr_seq_regra_w			bigint;
ie_autorizacao_w		prescr_procedimento.ie_autorizacao%type;
cd_plano_w			varchar(10);
ie_consiste_autor_exec_w	varchar(2) := 'N';

cd_cbo_w			varchar(6) := '';
cd_cid_w			varchar(4);
ie_atual_cid_w			varchar(1) := 'N';
cd_pessoa_usuario_w		varchar(10);
dt_entrada_unidade_nova_w 	timestamp;
nr_seq_interno_unid_w		bigint;
ie_lado_w			varchar(1);
cd_medico_resp_w		varchar(10);
cd_medico_req_w			varchar(10);
ie_clinica_w			integer;
dt_agenda_w			timestamp;
cd_agenda_w			bigint;
hr_inicio_w			timestamp;
ds_contraste_w			varchar(60);
ie_medico_profissional_w	varchar(1) := 'N';
sg_conselho_w			varchar(10);
cd_profissional_w		varchar(10);
cd_profissional_regra_w	procedimento_paciente.cd_pessoa_fisica%type;
nr_seq_conselho_w		bigint;
cd_medico_laudo_sus_w		varchar(10);
qt_autorizada_w			double precision;
ie_glosa_autorizada_w		varchar(10) := 'N';
qt_glosa_w			double precision;
cd_convenio_particular_w	bigint;
cd_categoria_particular_w	varchar(10);
cd_material_exame_w		varchar(20);
ie_taxa_exame_w			varchar(1) := 'N';
ie_excluir_prof_sus_w		varchar(10) := 'N';
ie_fim_conta_w			varchar(1);
cd_setor_entrega_w		integer;
ie_atual_data_real_w		varchar(1);

ie_considerer_setores_w		varchar(1):= 'N';
ie_consiste_tipo_atend_w	varchar(1):= 'N';
ie_consistencia_sus_w		varchar(1):= 'N';
cd_profissional_exec_w		varchar(10);/*Geliard OS182164 01/01/2010*/
ie_profissional_exec_w		varchar(1):= 'N';

nr_seq_classificacao_w		bigint;
ie_consiste_cbo_compativel_w	varchar(1):= 'N';
nr_seq_atecaco_w		bigint;
nr_seq_checkup_etapa_w		bigint;
nr_seq_etapa_checkup_w		bigint;
ie_glosa_partic_autor_negada_w	varchar(1) := 'N';
qt_reg_w			bigint;
cd_motivo_exc_conta_w		smallint;
ie_executa_excluidos_w		varchar(1) :=	'S';
ie_executar_excluidos_w		varchar(1) :=  'N';
ie_tasy_lab_w			varchar(1);
ie_dt_conta_inicio_w      varchar(1) := 'N';

ie_vincular_cirurgia_w		varchar(1) :=  'N';
nr_cirurgia_w			bigint := 0;
ie_origem_inf_w			varchar(1);
cd_cgc_laboratorio_w		varchar(14);
nr_seq_material_w		bigint;
ie_grava_log_exec_w		varchar(1) := 'N';
ds_log_exec_w 			varchar(2000) := '';
cd_convenio_excesso_w		integer;
cd_categoria_excesso_w		varchar(10);
ie_regra_horario_exec_w		varchar(1);
ie_valida_exec_w		varchar(1);
cd_prescritor_w			varchar(10);
ie_prior_alta_dtconta_w		varchar(1);
dt_inicio_exame_w		timestamp;
cd_pessoa_atend_w		varchar(10);
dt_liberacao_prescr_w		timestamp;
cd_setor_proc_w			integer;
cd_medico_exec_proc_w		varchar(10);
cd_setor_prescricao_w		integer;
cd_equipamento_w bigint;
cd_medico_prev_laudo_w		varchar(10);
nr_seq_agenda_exame_w		agenda_paciente.nr_sequencia%type;
ie_executar_la_w		smallint;
ie_estab_usuario_logado_w		varchar(1)	:= 'N';
cd_estab_logado_w			bigint;
ie_atualiza_guia_w 		varchar(1);
ie_atualiza_senha_w 		varchar(1);
ie_autor_qtde_w 		varchar(1);
ie_atualiza_dt_execucao_w    varchar(1) := 'N';
ie_glosa_w			regra_ajuste_proc.ie_glosa%type;
nr_seq_regra_preco_w		regra_ajuste_proc.nr_sequencia%type;
nr_seq_proc_excesso_w		procedimento_paciente.nr_sequencia%type;
ie_nao_exec_ageexa_w		parametro_agenda.ie_nao_exec_ageexa%type;
dt_inicio_prescricao_w timestamp;
ie_agenda_w varchar(2);
ie_user_as_physian_w varchar(1) := 'N';
ie_prescr_exec_physian_w varchar(1) := 'N';


c01 CURSOR FOR
SELECT	a.cd_procedimento,
	a.ie_origem_proced,
	coalesce(a.cd_setor_atendimento,coalesce(b.cd_setor_entrega,b.cd_setor_atendimento)),
	CASE WHEN ie_intervalo_prescr_w='S' THEN a.qt_procedimento * coalesce(a.nr_ocorrencia,1)  ELSE a.qt_procedimento END ,
	b.nr_atendimento,
	b.dt_prescricao,
	c.cd_convenio,
	c.cd_categoria,
	a.nr_sequencia,
	coalesce(a.nr_doc_convenio,coalesce(b.nr_doc_conv,c.nr_doc_convenio)),
	coalesce(a.cd_senha,coalesce(b.cd_senha,c.cd_senha)),
	coalesce(a.cd_pessoa_coleta,a.cd_medico_exec),
	obter_valor_conv_estab(d.cd_convenio, e.cd_estabelecimento, 'IE_DOC_CONVENIO'),
	d.ie_tipo_convenio,
	e.ie_tipo_atendimento,
	e.dt_entrada,
	a.nr_seq_exame,
	a.ie_amostra,
	a.nr_seq_proc_interno,
	CASE WHEN coalesce(b.nr_doc_conv::text, '') = '' THEN c.ie_tipo_guia  ELSE 'E' END ,
	b.cd_medico,
	a.cd_atividade_prof_bpa,
	a.ie_tipo_atend_bpa,
	a.ie_grupo_atend_bpa,
	a.dt_prev_execucao,
	a.nr_seq_pq_proc,
	obter_valor_conv_estab(d.cd_convenio, e.cd_estabelecimento, 'IE_DOC_AUTORIZACAO'),
	a.ie_autorizacao,
	c.cd_plano_convenio,
	coalesce(a.ie_lado,'A'),
	e.cd_medico_resp,
	e.ie_clinica,
	a.cd_material_exame,
	e.ie_fim_conta,
	b.cd_setor_entrega,
	a.cd_profissional,
	e.nr_seq_classificacao,
	b.nr_seq_atecaco,
	a.nr_seq_checkup_etapa,
	b.cd_prescritor,
	a.dt_inicio_exame,
	b.dt_liberacao,
	a.cd_equipamento,
	a.nr_seq_agenda,
	b.dt_inicio_prescr
from	atendimento_paciente e,
	convenio d,
	atend_categoria_convenio c,
	prescr_procedimento a,
	prescr_medica b
where	a.nr_prescricao	= b.nr_prescricao
and	b.nr_atendimento	= c.nr_atendimento
and	b.nr_atendimento	= e.nr_atendimento
and	c.cd_convenio	= d.cd_convenio
and	a.ie_suspenso <> 'S'
and	c.nr_seq_interno	= obter_atecaco_atendimento(b.nr_atendimento)
and	b.nr_prescricao	= nr_prescricao_p
and	coalesce(a.cd_motivo_baixa,0) 	= 0
and	coalesce(cd_motivo_baixa_exame::text, '') = ''
and	((ie_considerer_setores_w = 'N') or ((ie_considerer_setores_w = 'S') and (obter_se_setor_usuario(coalesce(a.cd_setor_atendimento,coalesce(b.cd_setor_entrega,b.cd_setor_atendimento)) , nm_usuario_p)  = 'S')))
and	((a.nr_sequencia = nr_sequencia_p) or (nr_sequencia_p	= 0) or (a.nr_seq_proc_quant = nr_sequencia_p AND VarIE_executar_todos_w = 'S'))
and	not exists (
	SELECT 1
	from	procedimento_paciente x
	where	a.nr_prescricao	= x.nr_prescricao
	and	a.nr_sequencia	= x.nr_sequencia_prescricao
	and	(((ie_executa_excluidos_w = 'S') and (coalesce(x.cd_motivo_exc_conta::text, '') = '')) or
		((ie_executa_excluidos_w = 'N') and ((x.cd_motivo_exc_conta IS NOT NULL AND x.cd_motivo_exc_conta::text <> '') or (coalesce(x.cd_motivo_exc_conta::text, '') = ''))))
	and	((ie_consiste_execucao_w = 'N') or (coalesce(a.nr_ocorrencia,1) < 2)));

c02 CURSOR FOR
	SELECT	ds_contraste
	from	proc_interno_contraste
	where	nr_seq_proc_interno = nr_seq_proc_interno_w
	and 	ie_situacao = 'A'
	order by ds_contraste;


BEGIN

begin


select 	wheb_usuario_pck.get_cd_estabelecimento
into STRICT	cd_estab_logado_w
;
-- Realizar a leitura do parametro do usuario logado ao realizar a execucao do exame.
ie_estab_usuario_logado_w	:=	obter_valor_param_usuario(942, 387, cd_perfil_p, nm_usuario_p, 0);

select	dt_prescricao,
		CASE WHEN ie_estab_usuario_logado_w='S' THEN cd_estab_logado_w  ELSE cd_estabelecimento END
into STRICT	dt_entrada_unidade_w,
		cd_estabelecimento_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;
exception
when others then
	dt_entrada_unidade_w	:= null;
end;

ie_tasy_lab_w := Obter_param_Usuario(0, 26, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_tasy_lab_w);

/* leitura do parametro 41 da funcao gestao de exames */

if (cd_funcao_p	= 942) then
	select	coalesce(max(obter_valor_param_usuario(cd_funcao_p, 41, cd_perfil_p, nm_usuario_p, 0)), 'N')
	into STRICT	ie_medico_req_proc_w
	
	where	cd_funcao_p	= 942;

  select	coalesce(max(obter_valor_param_usuario(cd_funcao_p, 400, cd_perfil_p, nm_usuario_p, 0)), 'N')
	into STRICT	ie_atualiza_dt_execucao_w
	
	where	cd_funcao_p	= 942;

	select	coalesce(max(obter_valor_param_usuario(cd_funcao_p, 63, cd_perfil_p, nm_usuario_p, 0)), 'N')
	into STRICT	ie_consiste_execucao_w
	
	where	cd_funcao_p	= 942;

	select	coalesce(max(obter_valor_param_usuario(cd_funcao_p, 68, cd_perfil_p, nm_usuario_p, 0)), 'N')
	into STRICT	ie_dt_exec_alta_w
	
	where	cd_funcao_p	= 942;

	select	coalesce(max(obter_valor_param_usuario(cd_funcao_p, 122, cd_perfil_p, nm_usuario_p, 0)), 'N')
	into STRICT	ie_consiste_tipo_atend_w
	
	where	cd_funcao_p	= 942;

	select	coalesce(max(obter_valor_param_usuario(cd_funcao_p, 41, cd_perfil_p, nm_usuario_p, 0)), 'N')
	into STRICT	ie_medico_req_proc_w
	
	where	cd_funcao_p	= 942;

	select	coalesce(max(obter_valor_param_usuario(cd_funcao_p, 137, cd_perfil_p, nm_usuario_p, 0)), 'N')
	into STRICT	ie_intervalo_prescr_w
	
	where	cd_funcao_p	= 942;

	select	coalesce(max(obter_valor_param_usuario(cd_funcao_p, 273, cd_perfil_p, nm_usuario_p, 0)), 'N')
	into STRICT	ie_glosa_partic_autor_negada_w
	
	where	cd_funcao_p	= 942;

	select	coalesce(max(obter_valor_param_usuario(cd_funcao_p, 406, cd_perfil_p, nm_usuario_p, 0)), 'N')
	into STRICT	ie_dt_conta_inicio_w
	
	where	cd_funcao_p	= 942;

	select	coalesce(max(obter_valor_param_usuario(cd_funcao_p, 318, cd_perfil_p, nm_usuario_p, 0)), 'N')
	into STRICT	ie_user_as_physian_w
	
	where	cd_funcao_p	= 942;

	select	coalesce(max(obter_valor_param_usuario(cd_funcao_p, 450, cd_perfil_p, nm_usuario_p, 0)), 'N')
	into STRICT	ie_prescr_exec_physian_w
	
	where	cd_funcao_p	= 942;

	ie_taxa_exame_w		:= coalesce(obter_valor_param_usuario(cd_funcao_p,104, cd_perfil_p, nm_usuario_p, 0),'N');

	ie_excluir_prof_sus_w	:= coalesce(obter_valor_param_usuario(cd_funcao_p,105, cd_perfil_p, nm_usuario_p, 0),'N');

	ie_executar_la_w	:= coalesce(obter_valor_param_usuario(cd_funcao_p,57, cd_perfil_p, nm_usuario_p, 0),0);

/* leitura do parametro 133 da funcao prescricao eletronica do paciente - rep - felipe os 50090 em 13/02/2007 */

elsif (cd_funcao_p	= 924) then
	select	coalesce(max(obter_valor_param_usuario(cd_funcao_p, 133, cd_perfil_p, nm_usuario_p, 0)), 'N')
	into STRICT	ie_medico_req_proc_w
	
	where	cd_funcao_p	= 924;
	ie_medico_profissional_w	:= obter_valor_param_usuario(916, 302, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w);

	select	coalesce(max(obter_valor_param_usuario(cd_funcao_p, 520, cd_perfil_p, nm_usuario_p, 0)), 'N')
	into STRICT	ie_intervalo_prescr_w
	
	where	cd_funcao_p	= 924;

	select	coalesce(max(obter_valor_param_usuario(cd_funcao_p, 764, cd_perfil_p, nm_usuario_p, 0)), 'N')
	into STRICT	VarIE_executar_todos_w
	
	where	cd_funcao_p	= 924;

	VarDataLibPrescr_w	:= obter_valor_param_usuario(cd_funcao_p, 782, cd_perfil_p, nm_usuario_p, 0);

	ie_gerar_setor_prescr_w := obter_param_usuario(1113, 496, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_gerar_setor_prescr_w);

elsif (cd_funcao_p	= 916) then

	ie_vincular_cirurgia_w := Obter_param_Usuario(916, 916, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_vincular_cirurgia_w);

	select	coalesce(max(obter_valor_param_usuario(cd_funcao_p, 179, cd_perfil_p, nm_usuario_p, 0)), 'N')
	into STRICT	ie_medico_req_proc_w
	
	where	cd_funcao_p	= 916;

	ie_dt_exec_alta_w		:= obter_valor_param_usuario(942, 68, cd_perfil_p, nm_usuario_p, 0);
	ie_medico_req_proc_resp_w	:= obter_valor_param_usuario(cd_funcao_p, 280, cd_perfil_p, nm_usuario_p, 0);
	ie_medico_profissional_w	:= obter_valor_param_usuario(cd_funcao_p, 302, cd_perfil_p, nm_usuario_p, 0);
	ie_glosa_autorizada_w		:= obter_valor_param_usuario(cd_funcao_p, 313, cd_perfil_p, nm_usuario_p, 0);

	ie_considerer_setores_w		:= obter_valor_param_usuario(cd_funcao_p, 354, cd_perfil_p, nm_usuario_p, 0);
	ie_profissional_exec_w		:= obter_valor_param_usuario(cd_funcao_p, 444, cd_perfil_p, nm_usuario_p, 0);
	ie_consiste_cbo_compativel_w	:= obter_valor_param_usuario(cd_funcao_p, 550, cd_perfil_p, nm_usuario_p, 0);

	if (coalesce(ie_execucao_relatorio_p,'N') = 'S') then

		ie_executar_excluidos_w		:= obter_valor_param_usuario(cd_funcao_p, 2, cd_perfil_p, nm_usuario_p, 0);

		if (coalesce(ie_executar_excluidos_w,'N') = 'E') then
			ie_executa_excluidos_w :=	'N';
		end if;

	end if;

elsif (cd_funcao_p	= 722) then
	select	coalesce(max(obter_valor_param_usuario(cd_funcao_p, 184, cd_perfil_p, nm_usuario_p, 0)), 'N')
	into STRICT	ie_medico_req_proc_w
	
	where	cd_funcao_p	= 722;

end if;

ie_atual_data_real_w	:= 'N';

/* rafael em 02/09/06 os39723 */

if (cd_funcao_p = 866) then
	ie_medico_req_proc_w	:= 'S';
	ie_medico_profissional_w	:= obter_valor_param_usuario(916, 302, cd_perfil_p, nm_usuario_p, 0);

	select	coalesce(max(obter_valor_param_usuario(cd_funcao_p, 48, cd_perfil_p, nm_usuario_p, 0)), 'N')
	into STRICT	ie_atual_data_real_w
	
	where	cd_funcao_p	= 866;

end if;

select	coalesce(max(obter_valor_param_usuario(cd_funcao_p, 43, cd_perfil_p, nm_usuario_p, coalesce(OBTER_ESTABELECIMENTO_ATIVO,0))), 'N')
into STRICT	ie_atualiza_func_w

where	cd_funcao_p	= 942;

if (ie_atualiza_func_w = 'S') then
	begin
	select	max(cd_pessoa_fisica)
	into STRICT	cd_pessoa_usuario_w
	from	usuario
	where	nm_usuario = nm_usuario_p;
	exception
	when others then
		cd_pessoa_usuario_w	:= null;
	end;
end if;

select	coalesce(max(obter_valor_param_usuario(916, 80, cd_perfil_p, nm_usuario_p, 0)), 'S')
into STRICT	ie_permite_gerar_definitivo_w
;

select	coalesce(max(obter_valor_param_usuario(916, 335, cd_perfil_p, nm_usuario_p, 0)), 'S')
into STRICT	ie_permite_gerar_atend_defin_w
;

select	coalesce(max(nr_atendimento), 0),
	max(coalesce(dt_liberacao,dt_liberacao_medico))
into STRICT	nr_atendimento_w,
	dt_lib_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

if (nr_prescricao_p = 16560474) then
CALL wheb_mensagem_pck.exibir_mensagem_abort(178374);
end if;


if (ie_permite_gerar_atend_defin_w = 'N') then

	select	max(ie_fim_conta)
	into STRICT	ie_fim_conta_w
	from	atendimento_paciente
	where 	nr_atendimento = nr_atendimento_w;

	if (ie_fim_conta_w = 'F') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(178374);
	end if;

end if;

if (ie_permite_gerar_definitivo_w = 'N') and (nr_atendimento_w > 0) then
	begin

	select	count(*)
	into STRICT	qt_conta_prov_w
	from	conta_paciente
	where	nr_atendimento		= nr_atendimento_w
	and	ie_status_acerto	= 1;

	select	count(*)
	into STRICT	qt_conta_def_w
	from	conta_paciente
	where	nr_atendimento		= nr_atendimento_w
	and	ie_status_acerto	= 2;

	if (qt_conta_prov_w = 0) and (qt_conta_def_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(178375);
	end if;

	end;
end if;


begin
select	dt_prescricao,
		CASE WHEN ie_estab_usuario_logado_w='S' THEN cd_estab_logado_w  ELSE cd_estabelecimento END
into STRICT	dt_entrada_unidade_w,
		cd_estabelecimento_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;
exception
when others then
	dt_entrada_unidade_w	:= null;
end;

/* rafael em 08/09/06 - inclui o 'MAX'. gerava erro no data found */

select	coalesce(CASE WHEN coalesce(ie_intervalo_prescr_w,'N')='N' THEN max(ie_intervalo_prescr)  ELSE ie_intervalo_prescr_w END ,'N'),
	coalesce(max(ie_consiste_autor_exec),'N')
into STRICT	ie_intervalo_prescr_w,
	ie_consiste_autor_exec_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;


select	coalesce(max(ie_regra_horario_exec),'N')
into STRICT	ie_regra_horario_exec_w
from	lab_parametro
where	cd_estabelecimento	= cd_estabelecimento_w;


select	coalesce(max(ie_nao_exec_ageexa),'N')
into STRICT	ie_nao_exec_ageexa_w
from	parametro_agenda
where 	cd_estabelecimento = cd_estabelecimento_w;


open c01;
loop
fetch c01 	into
		cd_procedimento_w,
	 	ie_origem_proced_w,
	 	cd_setor_atendimento_w,
	 	qt_procedimento_w,
	 	nr_atendimento_w,
	 	dt_prescricao_w,
	 	cd_convenio_w,
	 	cd_categoria_w,
		nr_seq_prescr_w,
		nr_doc_convenio_w,
		cd_senha_w,
		cd_medico_exec_w,
		ie_doc_convenio_w,
		ie_tipo_convenio_w,
		ie_tipo_atendimento_w,
		dt_entrada_w,
		nr_seq_exame_w,
		ie_amostra_w,
		nr_seq_proc_interno_w,
		ie_tipo_guia_w,
		cd_medico_prescr_w,
		cd_atividade_profissional_w,
		ie_tipo_atend_bpa_w,
		ie_grupo_atend_bpa_w,
		dt_prev_execucao_w,
		nr_seq_pq_proc_w,
		ie_doc_autorizacao_w,
		ie_autorizacao_w,
		cd_plano_w,
		ie_lado_w,
		cd_medico_resp_w,
		ie_clinica_w,
		cd_material_exame_w,
		ie_fim_conta_w,
		cd_setor_entrega_w,
		cd_profissional_exec_w,
		nr_seq_classificacao_w,
		nr_seq_atecaco_w,
		nr_seq_checkup_etapa_w,
		cd_prescritor_w,
		dt_inicio_exame_w,
		dt_liberacao_prescr_w,
		cd_equipamento_w,
		nr_seq_agenda_exame_w,
		dt_inicio_prescr_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		if (ie_gerar_setor_prescr_w = 'T') and (coalesce(nr_prescricao_p,0) > 0) then

			select	coalesce(max(cd_setor_atendimento),cd_setor_atendimento_w)
			into STRICT	cd_setor_atendimento_w
			from	usuario
			where	nm_usuario = nm_usuario_p;

		end if;

		if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and
			((consiste_atend_proc_conta(cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_w)) = 'S') then

			select	coalesce(obter_setor_atendimento(nr_atendimento_w),cd_setor_atendimento_w)
			into STRICT	cd_setor_atendimento_w
			;

		end if;

		if (coalesce(cd_setor_atendimento_w::text, '') = '') then

			CALL wheb_mensagem_pck.exibir_mensagem_abort(192745);

		end if;


		if (nr_seq_atecaco_w IS NOT NULL AND nr_seq_atecaco_w::text <> '') then
			select	max(cd_convenio),
					max(cd_categoria),
					max(CD_PLANO_CONVENIO)
			into STRICT	cd_convenio_w,
					cd_categoria_w,
					cd_plano_w
			from	atend_categoria_convenio
			where	nr_seq_interno	= nr_seq_atecaco_w;
		end if;

		/* francisco - os 75776 - 15/03/2008 - inicio alteracao */

		if (ie_consiste_autor_exec_w = 'S') then

			select	max(cd_pessoa_fisica)
			into STRICT	cd_pessoa_atend_w
			from	atendimento_paciente
			where 	nr_atendimento = nr_atendimento_w;

			SELECT * FROM consiste_plano_convenio(nr_atendimento_w, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, dt_prev_execucao_w, qt_procedimento_w, ie_tipo_atendimento_w, cd_plano_w, null, ds_erro_autor_w, cd_setor_atendimento_w, nr_seq_exame_w, ie_regra_w, null, nr_seq_regra_w, nr_seq_proc_interno_w, cd_categoria_w, cd_estabelecimento_w, cd_setor_entrega_w, cd_medico_exec_w, cd_pessoa_atend_w, ie_glosa_w, nr_seq_regra_preco_w) INTO STRICT ds_erro_autor_w, ie_regra_w, nr_seq_regra_w, ie_glosa_w, nr_seq_regra_preco_w;
			if (ie_regra_horario_exec_w = 'S') then

				ie_valida_exec_w := verificar_regra_exec_exame(nr_prescricao_p, ie_valida_exec_w);

				if (ie_autorizacao_w != 'A' and ie_valida_exec_w = 'N') then

					if (ie_regra_w = '7' and ie_autorizacao_w != 'B') then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(178502,'DS_PROCED_P='||substr(obter_descricao_procedimento(cd_procedimento_w,ie_origem_proced_w),1,255));
					end if;

					if (ie_regra_w = '2') then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(349280);
					end if;

				end if;
			else
				if (ie_autorizacao_w != 'A') then

					if (ie_regra_w = '7' and ie_autorizacao_w != 'B') then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(178502,'DS_PROCED_P='||substr(obter_descricao_procedimento(cd_procedimento_w,ie_origem_proced_w),1,255));
					end if;

					if (ie_regra_w = '2') then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(349280);
					end if;

				end if;
			end if;
		end if;
		/* fim alteracao francisco - 15/03/2008 */

		if (dt_entrada_w > dt_entrada_unidade_w) then   	/*os 26508 edilson em 29/11/05*/
			dt_entrada_unidade_w	:= dt_entrada_w;
		end if;

		if (ie_doc_convenio_w = 'S') then
			nr_doc_convenio_w := coalesce(cd_senha_w, nr_doc_convenio_w);
		elsif (ie_doc_convenio_w in ('N', 'T')) then
			nr_doc_convenio_w := null;
		end if;

		/* buscar atividade profissional para atendimento externo sus */

		if (ie_consiste_tipo_atend_w = 'S') and (ie_tipo_convenio_w = 3) then

			select 	sus_consiste_proced_atend(nr_atendimento_w,cd_procedimento_w,ie_origem_proced_w)
			into STRICT	ie_consistencia_sus_w
			;

			if (ie_consistencia_sus_w = 'N') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(178379);
			end if;
		end if;

		if (ie_tipo_atendimento_w	<> 1)	and (ie_tipo_convenio_w		= 3) and (coalesce(cd_atividade_profissional_w::text, '') = '') then
			begin
			/* fabio 10/11/2004 - para buscar atividade do procedimento quando existir */

			select	coalesce(max(cd_atividade_prof_bpa), 0)
			into STRICT	cd_atividade_profissional_w
			from	procedimento
			where	cd_procedimento		= cd_procedimento_w
			and	ie_origem_proced	= ie_origem_proced_w;

			if (cd_atividade_profissional_w <> 0) then
				begin
				select	ie_tipo_atend_bpa,
					ie_grupo_atend_bpa
				into STRICT	ie_tipo_atend_bpa_w,
					ie_grupo_atend_bpa_w
				from	sus_atividade_prof_proc
				where	cd_procedimento	= cd_procedimento_w
				and	ie_origem_proced = ie_origem_proced_w
				and	cd_atividade_profissional = cd_atividade_profissional_w;
				exception
					when others then
					begin
					ie_tipo_atend_bpa_w	:= null;
					ie_grupo_atend_bpa_w	:= null;
					end;
				end;
			end if;

			/* se tiver mais de uma atividade para mesmo procedimento, nao pode ser sugerido pelo sistema */

			if (cd_atividade_profissional_w = 0) then
				begin
				select	cd_atividade_profissional,
					ie_tipo_atend_bpa,
					ie_grupo_atend_bpa
				into STRICT	cd_atividade_profissional_w,
					ie_tipo_atend_bpa_w,
					ie_grupo_atend_bpa_w
				from	sus_atividade_prof_proc
				where	cd_procedimento	= cd_procedimento_w
				and	ie_origem_proced	= ie_origem_proced_w;
				exception
					when others then
					begin
					cd_atividade_profissional_w	:= null;
					ie_tipo_atend_bpa_w	:= null;
					ie_grupo_atend_bpa_w	:= null;
					end;
				end;
			end if;
			end;
		end if;

		begin
		select	b.cd_cgc
		into STRICT	cd_cgc_prestador_w
		from	estabelecimento b,
			atendimento_paciente a
		where	a.nr_atendimento	= nr_atendimento_w
		and	a.cd_estabelecimento	= b.cd_estabelecimento;
		exception
			when others then
				cd_cgc_prestador_w := '';
		end;

		if (coalesce(nr_prescricao_p,0) > 0) then

			select	max(cd_setor_atendimento)
			into STRICT	cd_setor_prescricao_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_p;

			if (coalesce(nr_sequencia_p,0) > 0) then
				select	max(ie_origem_inf),
					max(cd_cgc_laboratorio)
				into STRICT	ie_origem_inf_w,
					cd_cgc_laboratorio_w
				from	prescr_procedimento
				where	nr_prescricao = nr_prescricao_p
				and	nr_sequencia = nr_sequencia_p;
			end if;

		end if;

		ds_log_exec_w := substr(wheb_mensagem_pck.get_texto(307516,'NR_PRESCRICAO=' || nr_prescricao_p ||
				';CD_MEDICO_EXEC=' || cd_medico_exec_w || ';CD_MEDICO_PRESCR=' || cd_medico_prescr_w ||
				';CD_MEDICO_RESP=' || cd_medico_resp_w || ';CD_PROFISSIONAL_EXEC=' || cd_profissional_exec_w),1,2000);

		/* ricardo 02/08/2005 - incluida a rotina abaixo para tratar o cgc prestador */

		SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, nr_seq_exame_w, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_prest_regra_w, cd_medico_executor_w, cd_pessoa_fisica_w, coalesce(cd_medico_exec_w,cd_medico_prescr_w), clock_timestamp(), nr_seq_classificacao_w, ie_origem_inf_w, cd_cgc_laboratorio_w, cd_setor_prescricao_w, 'S') INTO STRICT ie_medico_executor_w, cd_cgc_prest_regra_w, cd_medico_executor_w, cd_pessoa_fisica_w;

		ds_log_exec_w := substr(ds_log_exec_w||wheb_mensagem_pck.get_texto(307519,'IE_MEDICO_EXECUTOR=' || ie_medico_executor_w ||
				';CD_MEDICO_EXECUTOR=' || cd_medico_executor_w || ';CD_PESSOA_FISICA=' || cd_pessoa_fisica_w),1,2000);

		/* edilson em 15/02/06 os 29672 inclui o if abaixo.*/

		if (cd_medico_executor_w IS NOT NULL AND cd_medico_executor_w::text <> '') and (coalesce(cd_medico_exec_w::text, '') = '') then
			cd_medico_exec_w	:= cd_medico_executor_w;
		end if;

		/* ricardo em 20/03/2008 - os 84554  */

		if (coalesce(cd_medico_executor_w::text, '') = '') and (ie_medico_executor_w = 'N') then
			cd_medico_exec_w	:= null;
		end if;
		/*felipe martini em 08/10/2008      os111788 */

		if (ie_medico_executor_w		= 'P') then
			cd_medico_exec_w	:= coalesce(cd_medico_exec_w,cd_medico_prescr_w);
		end if;

		/*Fabricio     521539 */

		if (ie_medico_executor_w		= 'R') then
			cd_medico_exec_w	:= cd_prescritor_w;
		end if;

		if (ie_medico_executor_w		= 'S') then
			select	max(cd_medico_requisitante)
			into STRICT	cd_medico_laudo_sus_w
			from	sus_laudo_paciente
			where	nr_atendimento	= nr_atendimento_w
			and	cd_procedimento_solic	= cd_procedimento_w
			and	ie_origem_proced 	= ie_origem_proced_w;

			cd_medico_exec_w	:= coalesce(cd_medico_laudo_sus_w,cd_medico_exec_w);
		end if;

		if (ie_medico_executor_w		= 'M') then
			begin
			cd_medico_laudo_sus_w	:= sus_obter_dados_sismama_atend(nr_atendimento_w,'M','CMR');
			cd_medico_exec_w 	:= coalesce(cd_medico_laudo_sus_w,cd_medico_exec_w);
			end;
		end if;

		if (ie_medico_executor_w		= 'L') then
			select	max(cd_medico_resp)
			into STRICT	cd_medico_laudo_sus_w
			from	laudo_paciente
			where	nr_prescricao	= nr_prescricao_p
			and		nr_sequencia	= nr_seq_prescr_w;
			cd_medico_exec_w	:= coalesce(cd_medico_laudo_sus_w,cd_medico_exec_w);
		end if;

		if (ie_medico_executor_w = 'A') and (coalesce(cd_medico_exec_w::text, '') = '') then
			select	max(cd_medico_resp)
			into STRICT	cd_medico_exec_w
			from	atendimento_paciente
			where	nr_atendimento = nr_atendimento_w;
		end if;
		/*bruna em 07/03/2008, atualizar o bioquimico de acordo com parametro*/

		select	coalesce(max(ie_atual_bioquimico_conta),'N')
		into STRICT	ie_atual_bioquimico_conta_w
		from	lab_parametro
		where	cd_estabelecimento = cd_estabelecimento_w;

		if (cd_medico_lab_p IS NOT NULL AND cd_medico_lab_p::text <> '') and
			((ie_atual_bioquimico_conta_w = 'S') or
			((ie_atual_bioquimico_conta_w	= 'B') and (ie_tipo_convenio_w	= 3) and (ie_tipo_atendimento_w	<> 1))) and (obter_se_medico(cd_medico_lab_p, 'M') = 'S') and (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
			cd_medico_exec_w	:= cd_medico_lab_p;
		end if;

		/*felipe martini em 22/08/2008 - os 104729*/

		if (ie_medico_executor_w	= 'F') and (cd_medico_executor_w IS NOT NULL AND cd_medico_executor_w::text <> '') then
			cd_medico_exec_w	:= cd_medico_executor_w;
		end if;

		if (ie_medico_executor_w = 'B') then

			select	max(cd_medico_exec)
			into STRICT	cd_medico_exec_proc_w
			from	prescr_procedimento
			where	nr_prescricao = nr_prescricao_p
			and	((nr_sequencia = nr_sequencia_p) or (nr_sequencia_p	= 0));

			cd_medico_exec_w := coalesce(cd_medico_exec_proc_w,cd_medico_executor_w);


			select	max(coalesce(cd_cgc,cd_cgc_prestador_w))
			into STRICT	cd_cgc_prest_regra_w
			from	medico
			where	cd_pessoa_fisica = cd_medico_exec_w;


		end if;

		begin
		select	cd_local_estoque
		into STRICT	cd_local_estoque_w
		from	setor_atendimento
		where	cd_setor_atendimento	= cd_setor_atendimento_w;
		exception
			when others then
			cd_local_estoque_w := null;
		end;

		/* elemar - 26/11/2004 - os13225 */

		if (dt_entrada_unidade_w > clock_timestamp()) then
			dt_entrada_unidade_w := clock_timestamp();
		end if;

		/* bruna - 19/06/2008 - os95760 */

		select 	coalesce(max(nr_seq_interno),0)
		into STRICT	nr_seq_interno_unid_w
		from	atend_paciente_unidade
		where 	cd_setor_atendimento	= cd_setor_atendimento_w
		and	nr_atendimento 		= nr_atendimento_w
		and	trunc(dt_entrada_unidade,'dd')	= trunc(dt_entrada_unidade_w,'dd')
		and	dt_entrada_unidade	>=  dt_entrada_unidade_w;

		if (nr_seq_interno_unid_w > 0) then

			select 	max(dt_entrada_unidade)
			into STRICT   	dt_entrada_unidade_nova_w
			from   	atend_paciente_unidade
			where	nr_seq_interno = nr_seq_interno_unid_w;

			if (dt_entrada_unidade_nova_w IS NOT NULL AND dt_entrada_unidade_nova_w::text <> '') then
				dt_entrada_unidade_w	:= dt_entrada_unidade_nova_w;
			end if;


		end if;

		/* rafael em 21/2/8 os76992 */

		begin
		select	max(nr_seq_interno)
		into STRICT	nr_seq_interno_w
		from 	atend_paciente_unidade
		where 	cd_setor_atendimento	= cd_setor_atendimento_w
		and	nr_atendimento 		= nr_atendimento_w
		and	dt_entrada_unidade_w between dt_entrada_unidade and coalesce(dt_saida_unidade, clock_timestamp());
		exception
		when others then
			nr_seq_interno_w := 0;
		end;

		if (coalesce(nr_seq_interno_w,0) = 0) then /* rafael em 21/2/8 os76992 incluido o if */
        if (ie_atualiza_dt_execucao_w = 'S') then
           dt_entrada_unidade_w := clock_timestamp();
         end if;

			CALL gerar_passagem_setor_atend(nr_atendimento_w, cd_setor_atendimento_w, dt_entrada_unidade_w, 'N', nm_usuario_p); /* elemar - 08/10/2003 - os3786 */
			select	max(nr_seq_interno)
			into STRICT	nr_seq_interno_w
			from	atend_paciente_unidade
			where	nr_atendimento 			= nr_atendimento_w
			and	cd_setor_atendimento		= cd_setor_atendimento_w
			and	trunc(dt_entrada_unidade,'dd')	= trunc(dt_entrada_unidade_w,'dd');
			--and	dt_entrada_unidade_w between dt_entrada_unidade and nvl(dt_saida_unidade, sysdate);
		end if;

		select	max(dt_entrada_unidade)
		into STRICT		dt_entrada_unidade_w
		from		atend_paciente_unidade
		where	nr_seq_interno = nr_seq_interno_w;


		ie_data_ok_w		:= false;
		if (VarDataLibPrescr_w = 'S') and (cd_funcao_p	= 924) then
			dt_procedimento_w	:= coalesce(dt_lib_w,dt_prescricao_w);
			ie_data_ok_w		:= True;
		elsif (VarDataLibPrescr_w = 'D') and (cd_funcao_p	= 924) then
			dt_procedimento_w	:= coalesce(dt_prev_execucao_w,dt_prescricao_w);
			ie_data_ok_w		:= True;
		else
			dt_procedimento_w	:= dt_prescricao_w;
			ie_data_ok_w		:= True;
		end if;

		if (cd_funcao_p in (916,942)) then
			begin

			/* edgar 07/11/2003 - inclusao do parametro 45 na entrada unica (atepac_f8) */

			/* obter o tipo de data para o procedimento_paciente ('E': data de entrada, 'S': data do sistema) */

	/*		begin
			select	obter_valor_param_usuario(cd_funcao_p, decode(cd_funcao_p,916,45,22), cd_perfil_p, nm_usuario_p, 0)
			into	ie_tipo_data_w
			from	dual;
			exception
				when others then
					ie_tipo_data_w	:= 'S';
			end;*/
      if (cd_funcao_p = 942) then
        ie_tipo_data_w := obter_param_usuario(942, 22, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_tipo_data_w);
      end if;

      if (cd_funcao_p = 916) then
        ie_tipo_data_w := obter_param_usuario(916, 45, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_tipo_data_w);
      end if;

      if coalesce(ie_tipo_data_w::text, '') = '' then
      ie_tipo_data_w := 'S';
      end if;

			if (ie_tipo_data_w = 'S') then
				dt_procedimento_w := clock_timestamp();
			elsif (ie_tipo_data_w = 'E') then
				dt_procedimento_w := dt_entrada_w;
			elsif (ie_tipo_data_w = 'P') then
				dt_procedimento_w := dt_prescricao_w;
			elsif (ie_tipo_data_w = 'PE') then
				dt_procedimento_w := dt_prev_execucao_w;
			elsif (ie_tipo_data_w = 'IE') then
				dt_procedimento_w := coalesce(dt_inicio_exame_w,clock_timestamp());
			elsif (ie_tipo_data_w = 'LP') then
				dt_procedimento_w := coalesce(dt_liberacao_prescr_w,clock_timestamp());
			end if;

			ie_data_ok_w		:= true;

			end;
		end if;

		select	max(dt_alta)
		into STRICT	dt_alta_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_w;

		select 	coalesce(max(ie_data_conta),0),
			coalesce(max(ie_prior_alta_dtconta),'N')
		into STRICT	ie_data_conta_w,
			ie_prior_alta_dtconta_w
		from	lab_parametro
		where 	cd_estabelecimento = cd_estabelecimento_w;

		if (cd_funcao_p = 722 AND ie_data_conta_w = 3) then
			if (ie_prior_alta_dtconta_w = 'S') then
				if	((dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') and (dt_alta_w < clock_timestamp())) then
					dt_procedimento_w := dt_alta_w;
				else
					dt_procedimento_w := clock_timestamp();
				end if;
			else
				dt_procedimento_w := clock_timestamp();
			end if;
			ie_data_ok_w	  := true;
		elsif (cd_funcao_p = 722 AND ie_data_conta_w = 1) then
			if (ie_prior_alta_dtconta_w = 'S') then
				if	(dt_alta_w IS NOT NULL AND dt_alta_w::text <> '' AND dt_alta_w < dt_prev_execucao_w) then
					dt_procedimento_w := dt_alta_w;
				else
					dt_procedimento_w := dt_prev_execucao_w;
				end if;
			else
				dt_procedimento_w := dt_prev_execucao_w;
			end if;
			ie_data_ok_w	  := true;
		elsif (cd_funcao_p = 722 AND ie_data_conta_w = 5) then
			if (ie_prior_alta_dtconta_w = 'S') then
				if	(dt_alta_w IS NOT NULL AND dt_alta_w::text <> '' AND dt_alta_w < dt_inicio_prescr_w) then
					dt_procedimento_w := dt_alta_w;
				else
					dt_procedimento_w := dt_inicio_prescr_w;
				end if;
			else
				dt_procedimento_w := dt_inicio_prescr_w;
			end if;
			ie_data_ok_w	  := true;
		end if;

		while not ie_data_ok_w loop
			select	coalesce(max(dt_procedimento), dt_prescricao_w + 1/86400)
			into STRICT	dt_procedimento_w
			from	procedimento_paciente
			where	nr_atendimento		= nr_atendimento_w
			and	cd_setor_atendimento 	= cd_setor_atendimento_w
			and	dt_entrada_unidade	= dt_entrada_unidade_w
			and	cd_procedimento		= cd_procedimento_w
			and	ie_origem_proced	= ie_origem_proced_w
			and	dt_procedimento		= dt_prescricao_w;

			ie_data_ok_w	:= (dt_procedimento_w = dt_prescricao_w + 1/86400);
			if (not ie_data_ok_w) then
				dt_prescricao_w			:= dt_prescricao_w + 1/86400;
			end if;
		end loop;

		if (cd_funcao_p	= 1113) then
			ie_data_evento_w := Obter_Param_Usuario(cd_funcao_p, 223, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_data_evento_w);

			if (ie_data_evento_w = 'S') then
				select	coalesce(max(dt_alteracao),dt_procedimento_w)
				into STRICT	dt_procedimento_w
				from	prescr_mat_alteracao
				where	nr_prescricao		= nr_prescricao_p
				and	nr_seq_procedimento	= nr_sequencia_p
				and	ie_alteracao		= 3;
			end if;
		end if;

		dt_prescricao_w	:= dt_procedimento_w;

		/* caso o atendimento ja contenha alta informada, gerar a data de execucao com a data de alta do atendimento
		   ivan em 23/11/2007 os75231 */
		if (ie_dt_exec_alta_w in ('P','S')) then

			select	max(dt_alta)
			into STRICT		dt_alta_w
			from		atendimento_paciente
			where	nr_atendimento 		= nr_atendimento_w;

			if (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') then
				dt_procedimento_w	:= dt_alta_w;
			end if;

		end if;

		ie_tipo_servico_sus_w	:= null;
		ie_tipo_ato_sus_w	:= null;

		if (ie_origem_proced_w = 2) then
			SELECT * FROM definir_tipo_ato_servico(cd_estabelecimento_w, cd_procedimento_w, cd_convenio_w, cd_medico_exec_w, coalesce(cd_cgc_prest_regra_w, cd_cgc_prestador_w), ie_tipo_ato_sus_w, ie_tipo_servico_sus_w) INTO STRICT ie_tipo_ato_sus_w, ie_tipo_servico_sus_w;
		end if;

		/* felipe - 02/06/2007 - os58977 */

		SELECT * FROM obter_proced_espec_medica(cd_estabelecimento_w, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, null, null, null, ie_clinica_w, cd_setor_atendimento_w, cd_especialidade_w, ie_funcao_medico_w, cd_medico_exec_w, nr_seq_proc_interno_w, ie_tipo_atendimento_w) INTO STRICT cd_especialidade_w, ie_funcao_medico_w;


		select	max(cd_especialidade)
		into STRICT	cd_especialidade_prescr_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;

		if (cd_especialidade_prescr_w IS NOT NULL AND cd_especialidade_prescr_w::text <> '') then
			cd_especialidade_w	:= cd_especialidade_prescr_w;
		end if;

		if (coalesce(wheb_usuario_pck.get_cd_especialidade,0) <> 0) then
			cd_especialidade_w	:= wheb_usuario_pck.get_cd_especialidade;
		end if;

		if (cd_pessoa_usuario_w IS NOT NULL AND cd_pessoa_usuario_w::text <> '') then
			cd_pessoa_fisica_w	:= cd_pessoa_usuario_w;
		end if;

		begin
		select	obter_regra_via_acesso(cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_w, cd_convenio_w)
		into STRICT	ie_via_acesso_w
		;
		exception
			when others then
				ie_via_acesso_w	:= null;
				end;
		/*felipe martini em 04/02/2009 os125959*/

		cd_profissional_w	:= null;
		/*Geliard OS182164 01/01/2010*/

		if (ie_profissional_exec_w = 'S') and (coalesce(cd_medico_exec_w::text, '') = '') and (coalesce(cd_pessoa_fisica_w::text, '') = '' )then
			begin
			cd_pessoa_fisica_w := cd_profissional_exec_w;
			end;
		elsif (ie_profissional_exec_w = 'C') then
			select	max(cd_profissional)
			into STRICT	cd_profissional_w
			from	prescr_procedimento
			where	nr_prescricao	= nr_prescricao_p
			and	nr_sequencia	= nr_seq_prescr_w;
		end if;

		if (ie_origem_proced_w = 7) then
			begin

			cd_cbo_w := coalesce(sus_obter_cbo_medico(coalesce(cd_medico_exec_w,coalesce(cd_profissional_w,cd_pessoa_fisica_w)),cd_procedimento_w,clock_timestamp(),'1'),''); --OS 692696 Geliard 03/03/2014
			if (ie_consiste_cbo_compativel_w = 'S') and (coalesce(cd_cbo_w,'X') = 'X') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(178380);
			end if;

			select	coalesce(max(obter_valor_param_usuario(1125, 18, cd_perfil_p, nm_usuario_p, 0)), 'N')
			into STRICT	ie_atual_cid_w
			;

			if (ie_atual_cid_w = 'S') then
				begin
				select	coalesce(max(b.cd_doenca),'')
				into STRICT	cd_cid_w
				from	diagnostico_doenca	b,
					diagnostico_medico	a
				where	a.nr_atendimento	= b.nr_atendimento
				and	a.dt_diagnostico	= b.dt_diagnostico
				and	a.cd_medico		= cd_medico_exec_w
				and	a.nr_atendimento	= nr_atendimento_w;
				end;
			end if;

			if (cd_medico_exec_w IS NOT NULL AND cd_medico_exec_w::text <> '') then
				cd_pessoa_fisica_w	:= null;
			end if;

			end;
		end if;

		cd_medico_req_w	:= null;

		if (ie_medico_req_proc_resp_w	= 'S') and (ie_tipo_atendimento_w		= 7) then
			cd_medico_req_w			:= cd_medico_resp_w;
		elsif (ie_medico_req_proc_w		= 'S') then
			cd_medico_req_w			:= cd_medico_prescr_w;
		end if;

		if (ie_medico_profissional_w	= 'S') then
			select	coalesce(max(nr_seq_conselho),0)
			into STRICT	nr_seq_conselho_w
			from	pessoa_fisica
			where	cd_pessoa_fisica	= cd_medico_exec_w;

			select	trim(both upper(max(sg_conselho)))
			into STRICT	sg_conselho_w
			from	conselho_profissional
			where	nr_sequencia	= nr_seq_conselho_w;

			if (coalesce(sg_conselho_w,'X')	<> 'CRM') then
				cd_profissional_w	:= cd_medico_exec_w;
				cd_medico_exec_w	:= null;
			end if;
		end if;

		ds_log_exec_w := substr(ds_log_exec_w||wheb_mensagem_pck.get_texto(307520,'IE_MEDICO_PROFISSIONAL=' || ie_medico_profissional_w ||
				';CD_PROFISSIONAL=' || cd_profissional_w || ';CD_MEDICO_EXEC=' || cd_medico_exec_w),1,2000);

		if (ie_glosa_autorizada_w	= 'S') then
			select 	coalesce(sum(coalesce(a.qt_autorizada,0)),0)
			into STRICT	qt_autorizada_w
			FROM procedimento_autorizado a, autorizacao_convenio b
LEFT OUTER JOIN estagio_autorizacao c ON (b.nr_seq_estagio = c.nr_sequencia)
WHERE (b.nr_atendimento 		= nr_atendimento_w) and b.cd_convenio			= cd_convenio_w and dt_procedimento_w between coalesce(b.dt_inicio_vigencia, dt_procedimento_w) and coalesce(b.dt_fim_vigencia,dt_procedimento_w) and a.nr_sequencia_autor		= b.nr_sequencia  and a.cd_procedimento	 	= cd_procedimento_w and a.ie_origem_proced		= ie_origem_proced_w and coalesce(c.ie_interno,'10')		= '10';
			qt_glosa_w	:= 0;
			if (qt_procedimento_w	> qt_autorizada_w) and (qt_autorizada_w > 0) then
				qt_glosa_w			:= qt_procedimento_w - qt_autorizada_w;
				qt_procedimento_w	:= qt_autorizada_w;

				SELECT * FROM obter_convenio_particular_pf(	cd_estabelecimento_w, cd_convenio_w, null, dt_procedimento_w, cd_convenio_particular_w, cd_categoria_particular_w) INTO STRICT cd_convenio_particular_w, cd_categoria_particular_w;

				nr_sequencia_w := inserir_procedimento_paciente(	cd_procedimento_w, qt_glosa_w, nr_seq_exame_w, nr_seq_proc_interno_w, ie_origem_proced_w, cd_setor_atendimento_w, nr_atendimento_w, cd_estabelecimento_w, nm_usuario_p, null, 'N', cd_medico_exec_w, nr_seq_interno_w, dt_procedimento_w, cd_convenio_particular_w, cd_categoria_particular_w, nr_sequencia_w);

			end if;

		end if;
		/*Geliard OS408457 28/01/2012*/

		if (ie_medico_executor_w = 'Y') and
			((cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') or (cd_profissional_w IS NOT NULL AND cd_profissional_w::text <> '')) then
			cd_pessoa_fisica_w	:= null;
			cd_profissional_w	:= null;
		end if;

		if (ie_excluir_prof_sus_w	= 'S') and (cd_medico_exec_w IS NOT NULL AND cd_medico_exec_w::text <> '') and (ie_origem_proced_w		= 7) then
			cd_profissional_w	:= null;
			cd_pessoa_fisica_w	:= null;

		end if;

		if (cd_funcao_p	= 1113) and (coalesce(cd_medico_exec_w::text, '') = '') then
			begin
			select	max(coalesce(cd_pessoa_fisica,cd_profissional_w))
			into STRICT	cd_profissional_w
			from	usuario
			where	nm_usuario = nm_usuario_p;
			end;
		end if;

		if (nr_seq_checkup_etapa_w IS NOT NULL AND nr_seq_checkup_etapa_w::text <> '') then
			select	max(nr_seq_Etapa)
			into STRICT	nr_seq_etapa_checkup_w
			from	checkup_etapa
			where	nr_sequencia	= nr_seq_checkup_etapa_w;
		end if;

		if (coalesce(ie_glosa_partic_autor_negada_w,'N') = 'S') then
			begin

			select	count(*)
			into STRICT	qt_reg_w
			from	procedimento_autorizado a,
				autorizacao_convenio b,
				estagio_autorizacao c
			where	a.nr_prescricao		= nr_prescricao_p
			and	a.nr_seq_prescricao	= nr_seq_prescr_w
			and	a.nr_sequencia_autor	= b.nr_sequencia
			and	b.nr_seq_estagio	= c.nr_sequencia
			and	c.ie_interno		= '90';

			if (qt_reg_w > 0) then
				SELECT * FROM obter_convenio_particular_pf( cd_estabelecimento_w, cd_convenio_w, null, dt_procedimento_w, cd_convenio_w, cd_categoria_w) INTO STRICT cd_convenio_w, cd_categoria_w;
			end if;

			end;
		end if;

		if (ie_vincular_cirurgia_w = 'S') then
			select	max(nr_cirurgia)
			into STRICT	nr_cirurgia_w
			from	cirurgia
			where	nr_prescricao = nr_prescricao_p;
		else
			nr_cirurgia_w := null;
		end if;

		select	coalesce(max(obter_valor_param_usuario(1125, 138, cd_perfil_p, nm_usuario_p, 0)), 'N')
		into STRICT	ie_grava_log_exec_w
		;

		if (obter_valor_param_usuario(1113, 696, cd_perfil_p, nm_usuario_p, 0) = 'S') then

			select 	coalesce(max(cd_pessoa_fisica),0)
			into STRICT	cd_profissional_regra_w
			from   	consiste_setor_proc
			where  	cd_procedimento = cd_procedimento_w;

			if (cd_profissional_regra_w > 0) then
				cd_profissional_w := cd_profissional_regra_w;
			end if;

		end if;

		ds_log_exec_w := substr(ds_log_exec_w||wheb_mensagem_pck.get_texto(307524,'CD_MEDICO_EXEC=' || cd_medico_exec_w ||
				';CD_PROFISSIONAL=' || cd_profissional_w || ';CD_PESSOA_FISICA=' || cd_pessoa_fisica_w),1,2000);

		if (ie_grava_log_exec_w = 'S') then
			begin
			CALL gravar_log_tasy(10,substr(ds_log_exec_w,1,2000),nm_usuario_p);
			end;
		end if;

		select	max(cd_medico_prev_laudo)
		into STRICT	cd_medico_prev_laudo_w
		from	agenda_integrada_item
		where	nr_seq_agenda_exame = nr_seq_agenda_exame_w;

		select	max(nr_sequencia)
		INTO STRICT	nr_seq_material_w
		from 	material_exame_lab
		where 	cd_material_exame = cd_material_exame_w;

        if (ie_prescr_exec_physian_w = 'N') and (ie_user_as_physian_w = 'S') and (cd_pessoa_usuario_w IS NOT NULL AND cd_pessoa_usuario_w::text <> '') then
                select CASE WHEN obter_se_medico(cd_pessoa_usuario_w,'M')='S' THEN cd_pessoa_usuario_w  ELSE cd_medico_exec_w END
                into STRICT cd_medico_exec_w
;
        end if;

		select	nextval('procedimento_paciente_seq')
		into STRICT	nr_sequencia_w
		;

		insert into procedimento_paciente(nr_sequencia,
			nr_atendimento,
			dt_entrada_unidade,
			cd_procedimento,
			dt_procedimento,
			qt_procedimento,
			dt_atualizacao,
			nm_usuario,
			cd_convenio,
			cd_categoria,
			dt_prescricao,
			nr_prescricao,
			nr_sequencia_prescricao,
			cd_acao,
			cd_setor_atendimento,
			ie_origem_proced,
			tx_procedimento,
			cd_cgc_prestador,
			nm_usuario_original,
			nr_doc_convenio,
			nr_seq_atepacu,
			ie_auditoria,
			cd_medico_executor,
			cd_atividade_prof_bpa,
			ie_tipo_servico_sus,
			ie_tipo_ato_sus,
			nr_seq_exame,
			ie_tipo_guia,
			cd_senha,
			nr_seq_proc_interno,
			cd_medico_req,
			ie_tipo_atend_bpa,
			ie_grupo_atend_bpa,
			cd_pessoa_fisica,
			nr_seq_pq_proc,
			cd_especialidade,
			ie_funcao_medico,
			ie_tecnica_utilizada,
			ie_via_acesso,
			ds_observacao,
			ie_integracao,
			cd_cbo,
			cd_doenca_cid,
			nr_seq_etapa_checkup,
			nr_seq_checkup_etapa,
			nr_cirurgia,
			nr_seq_material,
			cd_equipamento,
			cd_medico_prev_laudo,
			cd_funcao,
			ie_lado)
		values (nr_sequencia_w,
			nr_atendimento_w,
			dt_entrada_unidade_w,
			cd_procedimento_w,
			dt_procedimento_w,
			qt_procedimento_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_convenio_w,
			coalesce(cd_categoria_p, cd_categoria_w),
			dt_prescricao_w,
			nr_prescricao_p,
			nr_seq_prescr_w,
			1,
			cd_setor_atendimento_w,
			ie_origem_proced_w,
			100,
			coalesce(cd_cgc_prest_regra_w, cd_cgc_prestador_w),
			nm_usuario_p,
			nr_doc_convenio_w,
			nr_seq_interno_w,
			'N',
			cd_medico_exec_w,
			cd_atividade_profissional_w,
			ie_tipo_servico_sus_w,
			ie_tipo_ato_sus_w,
			nr_seq_exame_w,
			ie_tipo_guia_w,
			cd_senha_w,
			nr_seq_proc_interno_w,
			cd_medico_req_w,
			ie_tipo_atend_bpa_w,
			ie_grupo_atend_bpa_w,
			coalesce(cd_profissional_w,cd_pessoa_fisica_w),
			nr_seq_pq_proc_w,
			cd_especialidade_w,
			ie_funcao_medico_w,
			null,
			ie_via_acesso_w,
			substr(wheb_mensagem_pck.get_texto(307526,'CD_FUNCAO=' || cd_funcao_p || ';CD_PERFIL=' || cd_perfil_p ||
					';IE_TIPO_DATA=' || ie_tipo_data_w||';')|| ' '||DS_observacao_p,1,255),
			CASE WHEN cd_funcao_p=0 THEN  'N'  ELSE 'S' END ,
			cd_cbo_w,
			cd_cid_w,
			nr_seq_etapa_checkup_w,
			nr_seq_checkup_etapa_w,
			nr_cirurgia_w,
			nr_seq_material_w,
			cd_equipamento_w,
			cd_medico_prev_laudo_w,
			cd_funcao_p,
			ie_lado_w);

		CALL gerar_laudo_padrao(nr_atendimento_w, nr_prescricao_p, nr_seq_prescr_w, nm_usuario_p);

		/* caso o atendimento ja contenha alta informada, gerar a data da conta com a data de alta do atendimento
		   ivan em 29/11/2007 os75231 */
		if (ie_dt_exec_alta_w in ('P','S')) and (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') then

			update	procedimento_paciente
			set	dt_conta	= dt_procedimento_w
			where	nr_sequencia	= nr_sequencia_w;

		end if;

		if (ie_dt_exec_alta_w = 'P') and (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') then

			update	procedimento_paciente
			set	dt_procedimento	= clock_timestamp()
			where	nr_sequencia	= nr_sequencia_w;

		end if;

		if (ie_atual_data_real_w = 'S') then

			update	procedimento_paciente
			set	dt_conta	= clock_timestamp()
			where	nr_sequencia	= nr_sequencia_w;

		end if;
		if(cd_funcao_p = 942 AND ie_dt_conta_inicio_w = 'S') then

			select DT_INICIO_PRESCR
			into STRICT    dt_inicio_prescricao_w
			from prescr_medica
			where nr_prescricao = nr_prescricao_p;

			update	procedimento_paciente
			set	dt_conta	= dt_inicio_prescricao_w
			where	nr_sequencia	= nr_sequencia_w;

		end if;

		if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') and (ie_amostra_w  = 'N') and (ie_tasy_lab_w = 'S') then
			update prescr_procedimento
			set	dt_baixa  = NULL,
				cd_motivo_baixa = 0
			where nr_prescricao	= nr_prescricao_p
			  and nr_sequencia	= nr_seq_prescr_w
			  and ie_status_atend < 30;
		end if;

		ds_erro_w := consiste_exec_procedimento(nr_sequencia_w, ds_erro_w);
		CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);

		ie_regra_uso_w := obter_param_usuario(916, 745, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_regra_uso_w);

		if (ie_regra_uso_w = 'S') then

			select	max(nr_atendimento),
				max(qt_procedimento),
				max(dt_procedimento),
				max(cd_medico_executor),
				max(cd_categoria),
				max(nr_cirurgia),
				max(nr_interno_conta),
				max(cd_setor_atendimento)
			into STRICT	nr_atendimento_w,
				qt_lancamento_w,
				dt_execucao_w,
				cd_medico_executor_w,
				cd_categoria_w,
				nr_cirurgia_propaci_w,
				nr_interno_conta_ww,
				cd_setor_proc_w
			from	procedimento_paciente
			where	nr_sequencia = nr_sequencia_w;

			SELECT * FROM obter_regra_qtde_proc_exec(nr_atendimento_w, cd_procedimento_w, ie_origem_proced_w, 0, dt_execucao_w, cd_medico_executor_w, ie_acao_excesso_w, qt_excedida_w, ds_erro_w, cd_convenio_excesso_w, cd_categoria_excesso_w, nr_seq_proc_interno_w, cd_categoria_w, NULL, nr_interno_conta_ww, nr_cirurgia_propaci_w, null, cd_setor_proc_w, null) INTO STRICT ie_acao_excesso_w, qt_excedida_w, ds_erro_w, cd_convenio_excesso_w, cd_categoria_excesso_w;

			if (ie_acao_excesso_w = 'E') then
				if (qt_excedida_w   > 0) then

					select	coalesce(max(cd_motivo_exc_conta),12)
					into STRICT	cd_motivo_exc_conta_w
					from	parametro_faturamento
					where	cd_estabelecimento = cd_estabelecimento_w;

					if (qt_excedida_w >= qt_lancamento_w) then
						CALL excluir_matproc_conta(nr_sequencia_w, nr_interno_conta_ww, cd_motivo_exc_conta_w, substr(wheb_mensagem_pck.get_texto(302543),1,255), 'P', nm_usuario_p);
					else
						update	procedimento_paciente
						set	qt_procedimento = qt_lancamento_w - qt_excedida_w
						where	nr_sequencia  = nr_sequencia_w;

						nr_seq_proc_excesso_w := Duplicar_Proc_Paciente(	nr_sequencia_w, nm_usuario_p, nr_seq_proc_excesso_w);

						update	procedimento_paciente
						set	qt_procedimento = qt_excedida_w
						where	nr_sequencia  = nr_seq_proc_excesso_w;

						CALL excluir_matproc_conta(nr_seq_proc_excesso_w, nr_interno_conta_ww, cd_motivo_exc_conta_w, substr(wheb_mensagem_pck.get_texto(302543),1,255), 'P', nm_usuario_p);
						CALL atualiza_preco_procedimento(nr_seq_proc_excesso_w, cd_convenio_w, nm_usuario_p);

					end if;

					CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);
					CALL Ajustar_Conta_Vazia(nr_atendimento_w, nm_usuario_p);

				end if;

			elsif (ie_acao_excesso_w = 'P') then
				if (qt_excedida_w   > 0) then

					SELECT * FROM obter_convenio_particular_pf(cd_estabelecimento_w, cd_convenio_w, '', dt_execucao_w, cd_convenio_glosa_w, cd_categoria_glosa_w) INTO STRICT cd_convenio_glosa_w, cd_categoria_glosa_w;

					if (qt_excedida_w >= qt_lancamento_w) then

						update	procedimento_paciente
						set	nr_interno_conta	 = NULL,
							cd_convenio		= cd_convenio_glosa_w,
							cd_categoria		= cd_categoria_glosa_w
						where	nr_sequencia 		= nr_sequencia_w;
					else

						update	procedimento_paciente
						set	qt_procedimento = qt_lancamento_w - qt_excedida_w
						where	nr_sequencia  = nr_sequencia_w;

						nr_seq_proc_excesso_w := Duplicar_Proc_Paciente(	nr_sequencia_w, nm_usuario_p, nr_seq_proc_excesso_w);

						update	procedimento_paciente
						set	nr_interno_conta	 = NULL,
							cd_convenio		= cd_convenio_glosa_w,
							cd_categoria		= cd_categoria_glosa_w,
							qt_procedimento		= qt_excedida_w
						where	nr_sequencia 		= nr_seq_proc_excesso_w;

						CALL atualiza_preco_procedimento(nr_seq_proc_excesso_w, cd_convenio_w, nm_usuario_p);
					end if;

					if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

					CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);
					CALL Ajustar_Conta_Vazia(nr_atendimento_w, nm_usuario_p);

				end if;

			elsif (ie_acao_excesso_w = 'Z') then
				if (qt_excedida_w   > 0) then

					if (qt_excedida_w >= qt_lancamento_w) then
						update	procedimento_paciente
						set	vl_anestesista		= 0,
							vl_auxiliares		= 0,
							vl_custo_operacional	= 0,
							vl_materiais		= 0,
							vl_medico		= 0,
							vl_procedimento		= 0,
							ie_valor_informado	= 'S'
						where	nr_sequencia 		= nr_sequencia_w;
					else
						update	procedimento_paciente
						set	qt_procedimento = qt_lancamento_w - qt_excedida_w
						where	nr_sequencia  = nr_sequencia_w;

						nr_seq_proc_excesso_w := Duplicar_Proc_Paciente(nr_sequencia_w, nm_usuario_p, nr_seq_proc_excesso_w);

						update	procedimento_paciente
						set	vl_anestesista		= 0,
							vl_auxiliares		= 0,
							vl_custo_operacional	= 0,
							vl_materiais		= 0,
							vl_medico		= 0,
							vl_procedimento		= 0,
							ie_valor_informado	= 'S',
							qt_procedimento		= qt_excedida_w
						where	nr_sequencia 		= nr_seq_proc_excesso_w;

						CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);

					end if;

					if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

				end if;

			elsif (ie_acao_excesso_w = 'C') then

				if (qt_excedida_w   > 0) and
					(cd_convenio_excesso_w IS NOT NULL AND cd_convenio_excesso_w::text <> '' AND cd_categoria_excesso_w IS NOT NULL AND cd_categoria_excesso_w::text <> '') then

					if (qt_excedida_w >= qt_lancamento_w) then
						update	procedimento_paciente
						set	nr_interno_conta	 = NULL,
							cd_convenio		= cd_convenio_excesso_w,
							cd_categoria		= cd_categoria_excesso_w
						where	nr_sequencia 		= nr_sequencia_w;
					else

						update	procedimento_paciente
						set	qt_procedimento = qt_lancamento_w - qt_excedida_w
						where	nr_sequencia  = nr_sequencia_w;

						nr_seq_proc_excesso_w := Duplicar_Proc_Paciente(	nr_sequencia_w, nm_usuario_p, nr_seq_proc_excesso_w);

						update	procedimento_paciente
						set	nr_interno_conta	 = NULL,
							cd_convenio		= cd_convenio_excesso_w,
							cd_categoria		= cd_categoria_excesso_w,
							qt_procedimento 	= qt_excedida_w
						where	nr_sequencia 		= nr_seq_proc_excesso_w;

						CALL atualiza_preco_procedimento(nr_seq_proc_excesso_w, cd_convenio_w, nm_usuario_p);
					end if;

					CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_excesso_w, nm_usuario_p);

					CALL Ajustar_Conta_Vazia(nr_atendimento_w, nm_usuario_p);
				end if;

			end if;

			CALL philips_fat_pck.set_executar_regra_uso('N');

		end if;


		CALL Gerar_Gatilho_Pacote(nr_sequencia_w, cd_convenio_w, 'N',nm_usuario_p); -- OS 231603
		if (ie_taxa_exame_w	= 'S') then
			CALL gerar_taxa_sala_porte(	nr_atendimento_w,
									dt_entrada_unidade_w,
									dt_procedimento_w,
									cd_procedimento_w,
									nr_sequencia_w,
									nm_usuario_p);
		end if;

		if	not(coalesce(ie_tipo_atend_tiss_p::text, '') = '') then
			select 	max(coalesce(nr_interno_conta,0))
			into STRICT	nr_interno_conta_w
			from 	procedimento_paciente
			where 	nr_sequencia = nr_sequencia_w;

			if (nr_interno_conta_w <> 0) then
				update	conta_paciente
				set	ie_tipo_atend_tiss = ie_tipo_atend_tiss_p
				where 	nr_interno_conta   = nr_interno_conta_w;
			end if;
		end if;

		if	((cd_funcao_p	<> 942) or
			(cd_funcao_p = 942 AND ie_executar_la_w = 0)) then /* felipe - os58559 - criado o parametro de geracao automatica na funcao */
			CALL gerar_lancamento_automatico(nr_atendimento_w, cd_local_estoque_w, 34, nm_usuario_p, nr_sequencia_w,null,cd_material_exame_w,null,ie_lado_w,null);
		end if;

		end;

		SELECT * FROM obter_regra_senha_guia_conta( 	cd_estabelecimento_w, cd_convenio_w, ie_tipo_atendimento_w, ie_doc_autorizacao_w, ie_atualiza_guia_w, ie_atualiza_senha_w, ie_autor_qtde_w) INTO STRICT ie_doc_autorizacao_w, ie_atualiza_guia_w, ie_atualiza_senha_w, ie_autor_qtde_w;

		/* francisco - os 79510 - 06/02/2008 */

		if (ie_doc_autorizacao_w in ('S','C')) then
			SELECT * FROM obter_autor_item_conta(	nr_sequencia_w, null, nr_sequencia_autor_w, nr_seq_proc_autor_w, nr_seq_mat_autor_w, nr_doc_conv_autor_w, cd_senha_autor_w, ie_autorizado_w, ie_doc_autorizacao_w, ie_autor_qtde_w) INTO STRICT nr_sequencia_autor_w, nr_seq_proc_autor_w, nr_seq_mat_autor_w, nr_doc_conv_autor_w, cd_senha_autor_w, ie_autorizado_w;


			if (nr_sequencia_autor_w IS NOT NULL AND nr_sequencia_autor_w::text <> '') and (nr_seq_proc_autor_w IS NOT NULL AND nr_seq_proc_autor_w::text <> '') then

				update	procedimento_paciente
				set	nr_seq_proc_autor	= nr_seq_proc_autor_w
				where	nr_sequencia		= nr_sequencia_w;

				/* se tiver autorizacao e ainda nao estiver autorizada deve deixar guia e senha aguardando retorno*/

				nr_doc_convenio_w	:= null;
				cd_senha_w		:= null;

				/* se ja foi autorizado, ja insere com guia e senha da autorizacao */

				if (ie_autorizado_w	= 'S') then
					if (ie_atualiza_guia_w	= 'S') then
						nr_doc_convenio_w	:= nr_doc_conv_autor_w;
					end if;

					if (ie_atualiza_senha_w	= 'S') then
						cd_senha_w		:= cd_senha_autor_w;
					end if;
				end if;
			end if;

			/* feito dessa forma para caso o procedimento nem tenha autorizacao, continuar como antes */

			update	procedimento_paciente
			set	nr_doc_convenio		= nr_doc_convenio_w,
				cd_senha		= cd_senha_w,
				cd_senha_autor		= cd_senha_autor_w,
				cd_autor_convenio	= nr_doc_conv_autor_w
			where	nr_sequencia		= nr_sequencia_w;
		end if;
end loop;
close c01;

/* validar execucao agenda x agendas novas x eventos -> rafael em 1/9/2007 os's: 63777,65703 */

select	coalesce(max(obter_valor_param_usuario(0, 75, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N')
into STRICT	ie_agenda_nova_w
;

/* validar execucao agenda x agendas novas x eventos -> Rafael em 1/9/2007 OS's: 63777,65703 */

select	coalesce(max(obter_valor_param_usuario(0, 78, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N')
into STRICT	ie_gestao_agenda_w
;

/* validar execucao agenda x agendas novas x eventos -> rafael em 11/04/2008 os: 87702 */

ie_agecons_nova_w := obter_param_usuario(898, 102, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_agecons_nova_w);

/* incluido por marcus em 09/09/2003 para atualizar a agenda com executada */

begin
select	a.nr_seq_agenda
into STRICT	nr_seq_agenda_w
from	prescr_medica a
where	a.nr_prescricao = nr_prescricao_p
and	exists (SELECT 1 from agenda_paciente b where b.nr_sequencia = a.nr_seq_agenda); /* rafael em 27/06/2007 os60939 */
exception
when others then
	nr_seq_agenda_w	:= 0;
end;

if (nr_seq_agenda_w = 0) then
	begin
	select	max(a.nr_sequencia)
	into STRICT	nr_seq_agenda_w
	from	agenda_paciente a,
		prescr_medica b
	where	a.nr_atendimento = b.nr_atendimento
	and	b.nr_prescricao = nr_prescricao_p
	and	exists (SELECT 1 from prescr_procedimento c where c.nr_prescricao = b.nr_prescricao and
								  c.cd_procedimento = a.cd_procedimento and
								  c.nr_sequencia = coalesce(nr_sequencia_p, c.nr_sequencia))
	and	a.ie_status_agenda <> 'E'
	and	obter_tipo_agenda(cd_agenda) = 2;
	exception
	when others then
		nr_seq_agenda_w	:= 0;
	end;
end if;

/* rafael em 1/9/2007 os's: 63777,65703 */

select	coalesce(max(obter_tipo_agenda_seq(nr_seq_agenda_w,'E')),0)
into STRICT	cd_tipo_agenda_w
;

/* Rafael em 1/9/2007 OS's: 63777,65703 */

if (cd_tipo_agenda_w = 1) then
	select	obter_se_existe_evento_agenda(cd_estabelecimento_w,'EP','CI')
	into STRICT	ie_evento_gestao_w
	;
elsif (cd_tipo_agenda_w = 2) then
	select	obter_se_existe_evento_agenda(cd_estabelecimento_w,'EP','E')
	into STRICT	ie_evento_agenda_w
	;
end if;

if (coalesce(nr_seq_agenda_w,0) > 0) then
	select	ie_status_agenda,
			dt_agenda,
			cd_agenda,
			hr_inicio
	into STRICT	ie_status_agenda_w,
			dt_agenda_w,
			cd_agenda_w,
			hr_inicio_w
	from	agenda_paciente
	where	nr_sequencia	= nr_seq_agenda_w;

	if (ie_status_agenda_w in ('N','EE','AD','O')) then
		if	((cd_tipo_agenda_w = 2) and (ie_nao_exec_ageexa_w = 'N') and
			 ((ie_agenda_nova_w = 'N') or (ie_evento_agenda_w = 'S'))) or
			((cd_tipo_agenda_w = 1) and
			 ((ie_gestao_agenda_w = 'N') or (ie_evento_gestao_w = 'N'))) then

			begin

        update agenda_paciente
           set ie_status_agenda = 'E', dt_executada = clock_timestamp()
         where nr_sequencia = nr_seq_agenda_w;
        exception when others then

        update agenda_paciente set hr_inicio = hr_inicio + 1/ 86400
         where cd_agenda = cd_agenda_w and dt_agenda = dt_agenda_w and to_char(hr_inicio, 'hh24:mi') = to_char(hr_inicio_w, 'hh24:mi') and ie_status_agenda = 'E';

        update agenda_paciente set ie_status_agenda = 'E', dt_executada = clock_timestamp() where nr_sequencia = nr_seq_agenda_w;
			end;

      select CASE WHEN cd_tipo_agenda_w=1 THEN  'CI' WHEN cd_tipo_agenda_w=2 THEN  'E'  ELSE 0 END
        into STRICT ie_agenda_w
;

      CALL ALTERA_STATUS_AGENDA_ATEND(nm_usuario_p,
                                 cd_estabelecimento_w,
                                 nr_seq_agenda_w,
                                 ie_agenda_w,
                                 'E');

  		end if;
	end if;
end if;

if (coalesce(nr_seq_proc_interno_w,0) > 0) then
	open c02;
	loop
	fetch c02 into
		ds_contraste_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		insert into proc_paciente_contraste(nr_sequencia,
				nr_seq_propaci,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				vl_contraste,
				ds_contraste)
			values (nextval('proc_paciente_contraste_seq'),
				nr_sequencia_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				0,
				ds_contraste_w);
		end;
	end loop;
	close c02;
end if;

/* rafael em 14/09/06 os40640 */

select	coalesce(max(a.nr_seq_agecons),0)
into STRICT	nr_seq_agenda_w
from	prescr_medica a
where	a.nr_prescricao = nr_prescricao_p
and	exists (SELECT 1 from agenda_consulta b where b.nr_sequencia = a.nr_seq_agecons); /* rafael em 27/06/2007 os60939 */
if (coalesce(nr_seq_agenda_w,0) > 0) then

	select	max(b.cd_tipo_agenda)
	into STRICT	cd_tipo_agenda_w
	from	agenda_consulta a,
		agenda b
	where	a.cd_agenda = b.cd_agenda
	and	a.nr_sequencia = nr_seq_agenda_w;

	if (cd_tipo_agenda_w = 5) then
		select	obter_se_existe_evento_agenda(cd_estabelecimento_w,'EP','S')
		into STRICT	ie_evento_agecons_w
		;

		if (ie_evento_agecons_w = 'N') then
			update	agenda_consulta
			set	ie_status_agenda	= 'E'
			where	nr_sequencia		= nr_seq_agenda_w;
			--if (nvl(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if; comentado pois e chamado na trigger do laboratorio
		end if;
	else
		select	obter_se_existe_evento_agenda(cd_estabelecimento_w,'EP','C')
		into STRICT	ie_evento_agecons_w
		;

		if	((ie_agecons_nova_w = 'N') or (ie_evento_agecons_w = 'N')) then

			update	agenda_consulta
			set	ie_status_agenda	= 'E'
			where	nr_sequencia		= nr_seq_agenda_w;
			--if (nvl(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if; comentado pois e chamado na trigger do laboratorio
		end if;
	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_proc_pac_prescricao ( nr_prescricao_p bigint, nr_sequencia_p bigint, cd_perfil_p bigint, cd_funcao_p bigint, nm_usuario_p text, cd_categoria_p text, ie_tipo_atend_tiss_p text, cd_medico_lab_p text, ie_execucao_relatorio_p text default null, ds_observacao_p text default null) FROM PUBLIC;

