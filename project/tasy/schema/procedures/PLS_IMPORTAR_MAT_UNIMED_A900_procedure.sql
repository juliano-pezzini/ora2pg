-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_importar_mat_unimed_a900 ( nm_usuario_p text, dt_vigencia_p timestamp, ds_versao_tiss_p text ) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Importar os materiais/medicamentos A900
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Utilizado apenas em:	- Função OPS - Cadastro de Materiais, pasta Materiais Unimed >> A900 >> Materiais
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_conteudo_pai_w	varchar(4000);
ie_tipo_w		varchar(4000);
nr_seq_temp_pai_w	bigint;
ie_versao_w		bigint;
qt_registro_w		integer := 0;
nr_seq_mat_unimed_w	pls_material_unimed.nr_sequencia%type;
nm_material_w		pls_material_unimed.nm_material%type;
ie_tipo_pai_w		varchar(3);
qt_linha_filha_w	integer;
cd_material_w		pls_material_unimed.cd_material%type;

--Cursor Registros Pai
C01 CURSOR FOR
	SELECT	nr_sequencia,
		ds_conteudo,
		substr(ds_conteudo, 9, 3) ie_tipo
	from	w_import_mat_unimed
	order by
		nr_sequencia;

TYPE 		fetch_array IS TABLE OF C01%ROWTYPE;
s_array 	fetch_array;
i		integer := 1;
type Vetor is table of fetch_array index by integer;
Vetor_c01_w	Vetor;

BEGIN
CALL gravar_processo_longo('Importar materiais' , 'PLS_IMPORTAR_MAT_UNIMED_A900', 0);

open c01;
loop
FETCH C01 BULK COLLECT INTO s_array LIMIT 1000;
	Vetor_c01_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on C01 */
END LOOP;
CLOSE C01;

for i in 1..Vetor_c01_w.COUNT loop
	s_array	:= Vetor_c01_w(i);
	for z in 1..s_array.COUNT loop
		begin
		nr_seq_temp_pai_w	:= s_array[z].nr_sequencia;
		ds_conteudo_pai_w	:= s_array[z].ds_conteudo;
		ie_tipo_w		:= s_array[z].ie_tipo;
		qt_registro_w		:= qt_registro_w + 1;

		if (ie_tipo_w = '901') then
			ie_versao_w := (substr(ds_conteudo_pai_w,25,2))::numeric;
		end if;

		if (ie_versao_w <= 3) then -- PTU 5.0 ou menos
			SELECT * FROM pls_importar_mat_unimed_v50(	ds_conteudo_pai_w, ie_tipo_w, dt_vigencia_p, ds_versao_tiss_p, nm_usuario_p, cd_material_w, nr_seq_mat_unimed_w, nm_material_w, ie_tipo_pai_w, qt_linha_filha_w) INTO STRICT cd_material_w, nr_seq_mat_unimed_w, nm_material_w, ie_tipo_pai_w, qt_linha_filha_w;

		elsif (ie_versao_w = 4) then -- PTU 6.2
			SELECT * FROM pls_importar_mat_unimed_v62(	ds_conteudo_pai_w, ie_tipo_w, dt_vigencia_p, ds_versao_tiss_p, nm_usuario_p, cd_material_w, nr_seq_mat_unimed_w, nm_material_w, ie_tipo_pai_w, qt_linha_filha_w) INTO STRICT cd_material_w, nr_seq_mat_unimed_w, nm_material_w, ie_tipo_pai_w, qt_linha_filha_w;

		elsif (ie_versao_w = 5) then -- PTU 6.3
			SELECT * FROM pls_importar_mat_unimed_v63(	ds_conteudo_pai_w, ie_tipo_w, dt_vigencia_p, ds_versao_tiss_p, nm_usuario_p, cd_material_w, nr_seq_mat_unimed_w, nm_material_w, ie_tipo_pai_w, qt_linha_filha_w) INTO STRICT cd_material_w, nr_seq_mat_unimed_w, nm_material_w, ie_tipo_pai_w, qt_linha_filha_w;

		elsif (ie_versao_w = 6) then -- PTU 7.0
			SELECT * FROM pls_importar_mat_unimed_v70(	ds_conteudo_pai_w, ie_tipo_w, dt_vigencia_p, ds_versao_tiss_p, nm_usuario_p, cd_material_w, nr_seq_mat_unimed_w, nm_material_w, ie_tipo_pai_w, qt_linha_filha_w) INTO STRICT cd_material_w, nr_seq_mat_unimed_w, nm_material_w, ie_tipo_pai_w, qt_linha_filha_w;

		elsif (ie_versao_w = 7) then -- PTU 9.0
			SELECT * FROM pls_importar_mat_unimed_v90(	ds_conteudo_pai_w, ie_tipo_w, dt_vigencia_p, ds_versao_tiss_p, nm_usuario_p, cd_material_w, nr_seq_mat_unimed_w, nm_material_w, ie_tipo_pai_w, qt_linha_filha_w) INTO STRICT cd_material_w, nr_seq_mat_unimed_w, nm_material_w, ie_tipo_pai_w, qt_linha_filha_w;

		elsif (ie_versao_w = 8) then -- PTU 10a
			pls_importar_mat_unimed_v10a(	ds_conteudo_pai_w, ie_tipo_w, dt_vigencia_p, ds_versao_tiss_p, nm_usuario_p,
							cd_material_w, nr_seq_mat_unimed_w, nm_material_w, ie_tipo_pai_w, qt_linha_filha_w);
		end if;

		if (qt_registro_w = 300) then
			commit;
			qt_registro_w	:= 0;
		end if;
		end;
	end loop;
end loop;

if (qt_registro_w < 300) then
	commit;
	qt_registro_w	:= 0;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_importar_mat_unimed_a900 ( nm_usuario_p text, dt_vigencia_p timestamp, ds_versao_tiss_p text ) FROM PUBLIC;

