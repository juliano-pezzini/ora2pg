-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prescricao_rotina ( nr_atendimento_p bigint, nr_seq_rotina_p bigint, ie_tipo_item_p text, cd_pessoa_fisica_p text, dt_primeiro_horario_p text, dt_prescricao_p timestamp, cd_medico_p text, nr_horas_validade_p bigint, cd_estabelecimento_p bigint, cd_intervalo_p text, qt_protocolo_p bigint, nr_prescricao_p INOUT bigint, nm_usuario_p text, ie_recem_nato_p text, cd_rn_p text, qt_dose_p bigint, nr_cirurgia_p bigint default 0, nr_seq_pepo_p bigint default 0, nr_seq_consulta_oft_p bigint default 0, cd_unidade_medida_p text DEFAULT NULL, ie_via_aplicacao_p text DEFAULT NULL, ds_observacao_p text DEFAULT NULL, hr_prim_horario_p text DEFAULT NULL,--- Este é para passar direto para o medicamento 
 ie_lado_p text DEFAULT NULL, ds_justificativa_p text DEFAULT NULL, qt_dias_util_p bigint DEFAULT NULL, ie_objetivo_p text DEFAULT NULL, ie_indicacao_p text DEFAULT NULL, cd_topografia_cih_p bigint DEFAULT NULL, cd_doenca_cid_p text DEFAULT NULL) AS $body$
DECLARE

			 
 
qt_hora_w				bigint;
VarConsisteDataFutura_w			varchar(1);
cd_convenio_w				integer;
nr_prescricao_w				bigint;
ie_origem_inf_w				varchar(1);
ie_setor_rep_w				varchar(1);
dt_primeiro_horario_w			timestamp;
ds_erro_w				varchar(255);
cd_pessoa_fisica_w			varchar(10);
ie_RN_w					varchar(10);
ie_estender_w			varchar(3);
qt_altura_cm_w				real;
qt_peso_w				real;
nr_seq_exame_w			bigint;
ie_adep_w				varchar(1);
var_pac_usu_w				varchar(2);
cd_setor_usuario_w			integer;
nr_horas_validade_w			integer;
cd_setor_prescr_w			integer := null;
qt_registro_w				bigint;
nr_seq_protocolo_w			bigint;
cd_protocolo_w				bigint;
cd_estabelecimento_w			bigint;
nr_sequencia_item_w			varchar(2000);
ie_calcula_validade_w			varchar(15);
VarIdentPrescrADEP_w			varchar(15);
erro_w					varchar(2000);
nr_seq_rec_w				bigint;
nr_seq_material_w			bigint;
nr_seq_dieta_w				bigint;
nr_cirurgia_w				bigint:=null;
nr_seq_pepo_w				bigint:=null;
ie_tipo_prescr_cirur_w			bigint:=null;
nr_seq_consulta_oft_w			bigint:=null;
ds_exame_dia_w				varchar(80) := null;
ie_prescr_mat_sem_lib_w		varchar(30);
ie_hemodialise_w			prescr_medica.ie_hemodialise%type;


BEGIN 
 
if (coalesce(nr_cirurgia_p,0) > 0) then 
	nr_cirurgia_w 		:= nr_cirurgia_p;
	ie_tipo_prescr_cirur_w	:= 2;
end if;	
 
if (coalesce(nr_seq_pepo_p,0) > 0) then 
	nr_seq_pepo_w 		:= nr_seq_pepo_p;
	ie_tipo_prescr_cirur_w	:= 2;
end if;
 
if (coalesce(nr_seq_consulta_oft_p,0) > 0) then 
	nr_seq_consulta_oft_w 	:= nr_seq_consulta_oft_p;
end if;	
 
cd_estabelecimento_w	:= cd_estabelecimento_p;
 
			-- 698681 - Modificado de local pois deve ser lido o parãmetro sempre -- 
ie_prescr_mat_sem_lib_w := Obter_Param_Usuario(924, 530, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_prescr_mat_sem_lib_w);
 
if (coalesce(nr_prescricao_p,0) = 0) then 
	var_pac_usu_w := Obter_Param_Usuario(924, 42, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, var_pac_usu_w);
	ie_calcula_validade_w := Obter_Param_Usuario(924, 98, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_calcula_validade_w);
	VarIdentPrescrADEP_w := obter_param_usuario(924, 246, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, VarIdentPrescrADEP_w);
	ie_estender_w := Obter_Param_Usuario(924, 249, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_estender_w);
	ie_setor_rep_w := obter_param_usuario(924, 559, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_setor_rep_w);
	ie_RN_w := obter_param_usuario(924, 629, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_RN_w);
	 
	 
	if (var_pac_usu_w = 'U') then 
		begin 
		select	obter_setor_usuario(nm_usuario_p) 
		into STRICT	cd_setor_usuario_w 
		;
 
		select	count(*)  
		into STRICT	qt_registro_w 
		from	setor_atendimento a  
		where	a.cd_setor_atendimento in (	SELECT	b.cd_setor_atendimento   
							from	atend_paciente_unidade b   
							where	b.nr_atendimento	= NR_ATENDIMENTO_P 
							and	b.cd_setor_atendimento	= cd_setor_usuario_w);
		exception 
		when others then 
			qt_registro_w	:= 0;
		end;
	end if;
	 
	if (var_pac_usu_w = 'U') and (NR_ATENDIMENTO_P > 0) and (qt_registro_w > 0) then 
		cd_setor_prescr_w	:= cd_setor_usuario_w;	
	elsif (NR_ATENDIMENTO_P > 0) then 
		Select	coalesce(obter_unidade_atendimento(NR_ATENDIMENTO_P,'IA','CS'), obter_unidade_atendimento(NR_ATENDIMENTO_P,'A','CS')) 
		into STRICT	cd_setor_prescr_w	 
		;
	end if;
	 
	if (var_pac_usu_w = 'R') then 
		cd_setor_prescr_w	:= Obter_setor_prescr_regra(obter_perfil_ativo);
	end if;
 
	if (ie_calcula_validade_w	= 'R') then 
		ie_calcula_validade_w	:= obter_se_calcula_validade(cd_setor_prescr_w);
	end if;
	 
	select	Campo_Numerico(coalesce(vl_parametro, vl_parametro_padrao)) 
	into STRICT	qt_hora_w 
	from	funcao_parametro 
	where	cd_funcao = 924 
	and	nr_sequencia = 22;
 
	select	coalesce(vl_parametro, vl_parametro_padrao) 
	into STRICT	VarConsisteDataFutura_w 
	from	funcao_parametro 
	where	cd_funcao = 924 
	and	nr_sequencia = 44;
 
	if	((nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') or (VarConsisteDataFutura_w = 'S')) and 
		((clock_timestamp() + qt_hora_w / 24) < dt_prescricao_p) then 
		--A data da prescrição não pode ser superior a #@QT_HORAS#@ horas a partir deste momento! 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(173469, 'QT_HORAS=' || qt_hora_w);
	end if;
	 
	-- Obter_Convênio do Atendimento 
	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then 
		begin 
		select	cd_convenio 
		into STRICT	cd_convenio_w 
		from	atend_categoria_convenio 
		where	nr_atendimento		= nr_atendimento_p 
		and	dt_inicio_vigencia	= 
				(SELECT	max(dt_inicio_vigencia) 
				from	atend_categoria_convenio 
				where	nr_atendimento = nr_atendimento_p);
		exception 
			when others then 
				cd_convenio_w := null;
		end;
	end if;
 
	-- Obter numero da proxima prescrição 
	select	nextval('prescr_medica_seq') 
	into STRICT	nr_prescricao_w 
	;
 
	-- Obter ie_origem_inf se é médico ou não 
	select 	coalesce(max('1'),'3') 
	into STRICT	ie_origem_inf_w 
	from	Medico b, 
		Usuario a 
	where 	a.nm_usuario		= nm_usuario_p 
	and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;
 
	begin 
	dt_primeiro_horario_w	:= to_date(to_char(dt_prescricao_p,'dd/mm/yyyy ') || 
				substr(dt_Primeiro_horario_p,1,5),'dd/mm/yyyy hh24:mi');
	exception 
		when others then 
			dt_primeiro_horario_w	:= clock_timestamp();
	end;
	 
	begin 
	select	cd_pessoa_fisica 
	into STRICT	cd_pessoa_fisica_w 
	from	usuario 
	where	nm_usuario	= nm_usuario_p;
	exception 
		when others then 
			cd_pessoa_fisica_w	:= null;
	end;
 
	begin 
	select	obter_sinal_vital_RN(nr_atendimento_P,obter_desc_expressao(283402)), 
		obter_sinal_vital_RN(nr_atendimento_P,obter_desc_expressao(295698)) 
	into STRICT	qt_altura_cm_w, 
		qt_peso_w 
	;
	exception 
		when others then 
			qt_altura_cm_w	:= null;
			qt_peso_w	:= null;
	end;
 
	if (cd_setor_prescr_w > 0) then 
		select	coalesce(max(ie_adep),ie_adep_w) 
		into STRICT	ie_adep_w 
		from	setor_atendimento 
		where	cd_setor_atendimento = cd_setor_prescr_w;
	end if;
	 
	if (ie_tipo_item_p		= 'P') then 
		select	max(cd_protocolo), 
				max(nr_sequencia), 
				max(ie_hemodialise) 
		into STRICT	cd_protocolo_w, 
				nr_seq_protocolo_w, 
				ie_hemodialise_w 
		from	protocolo_medicacao 
		where	nr_seq_interna	= nr_seq_rotina_p;	
	end if;
	 
	/* Dalcastagne em 25/09/2008 OS 107843 */
 
	if (VarIdentPrescrADEP_w = 'NV') or (VarIdentPrescrADEP_w = 'PNV')then 
		ie_adep_w := 'N';
	elsif (VarIdentPrescrADEP_w = 'SV') then 
		ie_adep_w := 'S';
	end if;
	 
	nr_horas_validade_w	:= coalesce(nr_horas_validade_w,nr_horas_validade_p);
	 
	if (ie_calcula_validade_w <> 'N') then 
		nr_horas_validade_w	:= coalesce(obter_horas_validade_prescr(dt_primeiro_horario_w,nr_atendimento_p, ie_estender_w,null, clock_timestamp(),null),nr_horas_validade_p);
	end if;
	 
	if (ie_recem_nato_p = 'S') then 
		ie_RN_w	:= 'S';
	end if;
	 
	insert into prescr_medica( 
		nr_prescricao, 
		cd_pessoa_fisica, 
		nr_atendimento, 
		cd_medico, 
		dt_prescricao, 
		dt_atualizacao, 
		nm_usuario, 
		nr_horas_validade, 
		dt_primeiro_horario, 
		ie_origem_inf, 
		ie_recem_nato, 
		nm_usuario_original, 
		cd_protocolo, 
		nr_seq_protocolo, 
		cd_estabelecimento, 
		cd_prescritor, 
		qt_altura_cm, 
		qt_peso, 
		ie_adep, 
		ie_prescr_emergencia, 
		ie_prescricao_alta, 
		cd_setor_atendimento, 
		cd_recem_nato, 
		nr_cirurgia, 
		nr_seq_pepo, 
		ie_tipo_prescr_cirur, 
		nr_seq_consulta_oft, 
		ie_hemodialise, 
		cd_funcao_origem) 
	values (	somente_numero(nr_prescricao_w), 
		somente_numero(cd_pessoa_fisica_p), 
		nr_atendimento_p, 
		somente_numero(cd_medico_p), 
		dt_prescricao_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		somente_numero(nr_horas_validade_w), 
		dt_primeiro_horario_w, 
		Somente_numero(ie_origem_inf_w), 
		ie_RN_w, 
		nm_usuario_p, 
		Somente_numero(cd_protocolo_w), 
		nr_seq_protocolo_w, 
		cd_estabelecimento_w, 
		cd_pessoa_fisica_w, 
		qt_altura_cm_w, 
		qt_peso_w, 
		ie_adep_w, 
		'N', 
		'N', 
		cd_setor_prescr_w, 
		cd_rn_p, 
		nr_cirurgia_w, 
		nr_seq_pepo_w, 
		ie_tipo_prescr_cirur_w, 
		nr_seq_consulta_oft_w, 
		ie_hemodialise_w, 
		Obter_Funcao_Ativa);
		commit;
	update	w_item_prescr 
	set	nr_prescricao = nr_prescricao_w 
	where	coalesce(nr_prescricao::text, '') = '' 
	and 	nm_usuario = nm_usuario_p;
	commit;
else 
	nr_prescricao_w	:= nr_prescricao_p;
end if;
 
if (coalesce(nr_prescricao_w,0) > 0) then 
	if (ie_setor_rep_w	= 'N') then 
		cd_setor_prescr_w	:= null;
	end if;
	if (ie_tipo_item_p		= 'P') then -- Protocolo 
		select	max(cd_protocolo), 
			max(nr_sequencia) 
		into STRICT	cd_protocolo_w, 
			nr_seq_protocolo_w 
		from	protocolo_medicacao 
		where	nr_seq_interna	= nr_seq_rotina_p;
 
		CALL Inserir_item_protocolo_prescr(nr_prescricao_w, cd_protocolo_w, nr_seq_protocolo_w, cd_intervalo_p, qt_protocolo_p, nm_usuario_p, null, dt_prescricao_p,null,null,qt_peso_w);
		 
	elsif (ie_tipo_item_p		= 'SR') then	-- Soluções 
		CALL Gerar_Solucao_Rotina_prescr(nr_seq_rotina_p, nr_prescricao_w, nm_usuario_p, cd_intervalo_p);
	elsif (ie_tipo_item_p		= 'REE') then	-- Rotina especialidade 
		SELECT * FROM Gerar_Exame_Rotina_Prescricao(nr_prescricao_w, nr_seq_rotina_p, 4, dt_prescricao_p, cd_intervalo_p, null, null, null, null, nm_usuario_p, '0', cd_medico_p, qt_protocolo_p, '0', 0, 0, -2050, cd_setor_prescr_w, null, 'N', 'N', null, nr_sequencia_item_w, 'N', null, null, null, null, null, null, 'N', null, null, null, null, null, null, ds_exame_dia_w, 0, null, null, 'N', null) INTO STRICT nr_sequencia_item_w, ds_exame_dia_w;
 
	elsif (ie_tipo_item_p		= 'ER') then	-- Exame Rotina 
		begin 
		/* 
		Select feito dentro da rotina abaixo. 
		é desncessário fazer aqui e impossibilita pegar o material do exame cadastrado na "exame rotina" 
		select	max(nr_seq_exame) 
		into	nr_seq_exame_w 
		from	exame_lab_rotina 
		where	nr_sequencia	= nr_seq_rotina_p; */
 
		 
		SELECT * FROM Gerar_Exame_Rotina_Prescricao(nr_prescricao_w, nr_seq_rotina_p, 2, dt_prescricao_p, cd_intervalo_p, null, null, null, null, nm_usuario_p, '0', cd_medico_p, qt_protocolo_p, '0', 0, 0, -2050, null, null, 'N', 'N', null, nr_sequencia_item_w, 'N', ds_justificativa_p, null, null, null, null, null, 'N', null, null, null, null, null, null, ds_exame_dia_w, 0, null, nr_seq_rotina_p, 'N', null) INTO STRICT nr_sequencia_item_w, ds_exame_dia_w;
				 
 
		exception when others then 
			delete from prescr_medica where nr_prescricao = nr_prescricao_w;
			commit;
			erro_w	:= sqlerrm;
			--Item selecionado não possui todos os dados informados no cadastro, verifique! #@DS_ERRO#@ 
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(174316, 'DS_ERRO=' || erro_w);
		end;
	elsif (ie_tipo_item_p		= 'PR') then	-- Exame Rotina	 
		SELECT * FROM Gerar_Exame_Rotina_Prescricao(nr_prescricao_w, nr_seq_rotina_p, 1, dt_prescricao_p, cd_intervalo_p, null, null, null, null, nm_usuario_p, '0', cd_medico_p, qt_protocolo_p, coalesce(ie_lado_p,'0'), cd_topografia_cih_p, 0, -2050, null, null, 'N', 'N', null, nr_sequencia_item_w, 'N', ds_justificativa_p, null, null, null, null, null, 'N', null, null, null, null, null, null, ds_exame_dia_w, 0, null, null, 'N', null) INTO STRICT nr_sequencia_item_w, ds_exame_dia_w;
	elsif (ie_tipo_item_p		= 'GAS') then	-- Gasoterapia 
		CALL Gerar_gasoterapia_rotina(nr_seq_rotina_p,nr_prescricao_w,nm_usuario_p,null, null,cd_intervalo_p,cd_intervalo_p);
	elsif (ie_tipo_item_p		= 'REC') and (nr_seq_rotina_p IS NOT NULL AND nr_seq_rotina_p::text <> '') then	-- Recomendação 
		begin	 
		select	cd_protocolo, 
			nr_seq_prot, 
			nr_seq_rec 
		into STRICT	cd_protocolo_w, 
			nr_seq_protocolo_w, 
			nr_seq_rec_w 
		from	rep_rotina_item 
		where 	nr_sequencia = nr_seq_rotina_p;
		 
		if (cd_protocolo_w IS NOT NULL AND cd_protocolo_w::text <> '') and (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') and (nr_seq_rec_w IS NOT NULL AND nr_seq_rec_w::text <> '') then 
			CALL Gerar_recomemdacao_rotina(cd_protocolo_w, nr_prescricao_w, nr_seq_protocolo_w, nr_seq_rec_w, nm_usuario_p, cd_intervalo_p );	
		end if;
		end;
	elsif (ie_tipo_item_p		= 'MER') and (nr_seq_rotina_p IS NOT NULL AND nr_seq_rotina_p::text <> '') then	-- Medicamento rotina 
		begin 
		select	cd_protocolo, 
				nr_seq_prot, 
				nr_seq_material 
		into STRICT		cd_protocolo_w, 
				nr_seq_protocolo_w, 
				nr_seq_material_w 
		from		rep_rotina_item 
		where 	nr_sequencia = nr_seq_rotina_p;
		CALL Inserir_mat_prot_rotina(nr_prescricao_w,cd_protocolo_w,nr_seq_protocolo_w,nr_seq_material_w,nm_usuario_p, qt_dose_p, cd_intervalo_p,cd_unidade_medida_p, ie_via_aplicacao_p, hr_prim_horario_p,ds_observacao_p,ds_justificativa_p,qt_dias_util_p,ie_objetivo_p,ie_indicacao_p,cd_topografia_cih_p,cd_doenca_cid_p);
		end;
	elsif (ie_tipo_item_p		= 'DIE') and (nr_seq_rotina_p IS NOT NULL AND nr_seq_rotina_p::text <> '') then	-- Dietas de Rotina 
		begin 
		select	cd_protocolo, 
			nr_seq_prot, 
			nr_seq_dieta 
		into STRICT	cd_protocolo_w, 
			nr_seq_protocolo_w, 
			nr_seq_dieta_w 
		from	rep_rotina_item 
		where 	nr_sequencia = nr_seq_rotina_p;
		CALL Gerar_dieta_protocolo(nr_prescricao_w, cd_protocolo_w,nr_seq_protocolo_w, nr_seq_dieta_w, cd_intervalo_p, qt_protocolo_p, nm_usuario_p, qt_dose_p);
		end;
	elsif (ie_tipo_item_p = 'MR') and (nr_seq_rotina_p IS NOT NULL AND nr_seq_rotina_p::text <> '') then	-- Materiais de Rotina 
		CALL Gerar_Mat_Rotina_Prescr(cd_estabelecimento_p, Wheb_Usuario_pck.Get_cd_perfil, nr_prescricao_w, nr_seq_rotina_p, qt_dose_p, nm_usuario_p, cd_intervalo_p, ds_justificativa_p);
	elsif	((ie_tipo_item_p = 'NR') or (ie_tipo_item_p = 'SNR')) and (nr_seq_rotina_p IS NOT NULL AND nr_seq_rotina_p::text <> '') then	-- Suplemento e SNE de Rotina 
		CALL gerar_produto_nutricao(nr_prescricao_w,null,null,nm_usuario_p,null,null,null,nr_seq_rotina_p, null, null, null, null, null);
	end if;
 
	if (ie_prescr_mat_sem_lib_w = 'S') then 
		CALL gerar_horarios_sem_lib(nr_prescricao_w,nm_usuario_p);
				 
	end if;
end if;
 
nr_prescricao_p	:= nr_prescricao_w;
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescricao_rotina ( nr_atendimento_p bigint, nr_seq_rotina_p bigint, ie_tipo_item_p text, cd_pessoa_fisica_p text, dt_primeiro_horario_p text, dt_prescricao_p timestamp, cd_medico_p text, nr_horas_validade_p bigint, cd_estabelecimento_p bigint, cd_intervalo_p text, qt_protocolo_p bigint, nr_prescricao_p INOUT bigint, nm_usuario_p text, ie_recem_nato_p text, cd_rn_p text, qt_dose_p bigint, nr_cirurgia_p bigint default 0, nr_seq_pepo_p bigint default 0, nr_seq_consulta_oft_p bigint default 0, cd_unidade_medida_p text DEFAULT NULL, ie_via_aplicacao_p text DEFAULT NULL, ds_observacao_p text DEFAULT NULL, hr_prim_horario_p text DEFAULT NULL, ie_lado_p text DEFAULT NULL, ds_justificativa_p text DEFAULT NULL, qt_dias_util_p bigint DEFAULT NULL, ie_objetivo_p text DEFAULT NULL, ie_indicacao_p text DEFAULT NULL, cd_topografia_cih_p bigint DEFAULT NULL, cd_doenca_cid_p text DEFAULT NULL) FROM PUBLIC;

