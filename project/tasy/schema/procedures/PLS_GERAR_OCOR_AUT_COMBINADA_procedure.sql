-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_ocor_aut_combinada ( nr_seq_segurado_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade:Rotina utilizada para consistir as regras de ocorrência combinada. 
Nesta rotina é controlada a sequência de validação da ocorrência, onde é verificado validações e filtros. 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ x] Tasy (Delphi/Java) [ x] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
Na tabela PLS_OCOR_AUT_COMBINADA só pode haver uma regra em vigência para cada ocorrência 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
/* 
IE_TIPO_OCORRENCIA_W	= C - Gera a ocorrência para o cabeçalho 
			= I - Gera ocorrência para os itens 
*/
			 
ie_aplicacao_regra_w		smallint;
ie_utiliza_filtro_w		varchar(1) 	:= 'S';
ie_restringe_estab_w		varchar(1);
nr_seq_ocor_combinada_w		bigint;
nr_seq_ocorrencia_w		bigint;
nr_seq_motivo_glosa_w		bigint;

C01 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_motivo_glosa 
	from	pls_ocorrencia 
	where	ie_situacao		= 'A' 
	and	ie_regra_combinada	= 'S' 
	and	((ie_restringe_estab_w	= 'N') 
	or	(ie_restringe_estab_w	= 'S' AND cd_estabelecimento = cd_estabelecimento_p));
	
C02 CURSOR FOR 
	SELECT 	nr_sequencia, 
		ie_aplicacao_regra, 
		ie_utiliza_filtro 
	from 	pls_ocor_aut_combinada 
	where	nr_seq_ocorrencia	= nr_seq_ocorrencia_w 
	and	dt_inicio_vigencia	<= clock_timestamp() 
	and (coalesce(dt_fim_vigencia::text, '') = ''	or dt_fim_vigencia >= clock_timestamp()) 
	and	((ie_funcao_ocorrencia	= 'A') 
	or	(ie_funcao_ocorrencia	= 'E' AND nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') 
	or	((ie_funcao_ocorrencia	= 'AR')	and ((nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') or (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '')))) 
	order by dt_inicio_vigencia asc;


BEGIN 
ie_restringe_estab_w	:= pls_obter_se_controle_estab('GO');
open C01;
loop 
fetch C01 into	 
	nr_seq_ocorrencia_w, 
	nr_seq_motivo_glosa_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	/*begin 
		select 	nr_sequencia, 
			ie_aplicacao_regra, 
			ie_utiliza_filtro 
		into	nr_seq_ocor_combinada_w, 
			ie_aplicacao_regra_w, 
			ie_utiliza_filtro_w 
		from 	pls_ocor_aut_combinada 
		where	nr_seq_ocorrencia	= nr_seq_ocorrencia_w 
		and	dt_inicio_vigencia	<= sysdate 
		and 	(dt_fim_vigencia 	is null	or dt_fim_vigencia >= sysdate) 
		and	((ie_funcao_ocorrencia	= 'A') 
		or	((ie_funcao_ocorrencia	= 'E')	and (nr_seq_execucao_p	is not null)) 
		or	((ie_funcao_ocorrencia	= 'AR')	and ((nr_seq_guia_p	is not null) or (nr_seq_requisicao_p	is not null)))); 
	exception 
	when others then 
		nr_seq_ocor_combinada_w	:= null; 
		ie_aplicacao_regra_w	:= null; 
		ie_utiliza_filtro_w	:= null; 
	end;*/
 
	 
	open C02;
	loop 
	fetch C02 into	 
		nr_seq_ocor_combinada_w, 
		ie_aplicacao_regra_w, 
		ie_utiliza_filtro_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then 
			CALL pls_gerar_ocor_aut_comb_guia(	nr_seq_ocorrencia_w, nr_seq_ocor_combinada_w, ie_aplicacao_regra_w, 
							ie_utiliza_filtro_w, nr_seq_segurado_p, nr_seq_motivo_glosa_w, 
							nr_seq_guia_p, null, null, 
							null, null, null, 
							nm_usuario_p, cd_estabelecimento_p);
		elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
			CALL pls_gerar_ocor_aut_comb_req(	nr_seq_ocorrencia_w, nr_seq_ocor_combinada_w, ie_aplicacao_regra_w, 
							ie_utiliza_filtro_w, nr_seq_segurado_p, nr_seq_motivo_glosa_w, 
							nr_seq_requisicao_p, null, null, 
							null, null, null, 
							nm_usuario_p, cd_estabelecimento_p);
		elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then 
			CALL pls_gerar_ocor_aut_comb_exec(	nr_seq_ocorrencia_w, nr_seq_ocor_combinada_w, ie_aplicacao_regra_w, 
							ie_utiliza_filtro_w, nr_seq_segurado_p, nr_seq_motivo_glosa_w, 
							nr_seq_execucao_p, null, null, 
							null, null, null, 
							nm_usuario_p, cd_estabelecimento_p);
		end if;
		end;
	end loop;
	close C02;
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_ocor_aut_combinada ( nr_seq_segurado_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

