-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE contabiliza_pre_fatur ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


dt_referencia_w                                 timestamp;
dt_referencia_mesano_w                          bigint;
cd_estabelecimento_w                            bigint;
cd_empresa_w                                    bigint;
cd_conta_receita_w                              varchar(40);
cd_centro_receita_w                             bigint;
cd_conta_debito_w                               varchar(40);
cd_conta_despesa_w                              varchar(40);
cd_conta_debito_ww                              varchar(40);
vl_receita_w                                    double precision;
vl_repasse_w                                    double precision;
cd_convenio_w                                   bigint;
cd_convenio_ww                                  bigint    := 999999999;
cd_conta_repasse_w                              varchar(40);
nr_sequencia_movto_w                            bigint;
cd_historico_w                                  bigint:= 602;
cd_historico_reversao_w                         lote_contabil_parametro.vl_parametro%type;
ds_compl_historico_w                            varchar(255);
ds_retorno_w                                    varchar(20);
dt_movimento_w                                  timestamp;
dt_estorno_w                                    timestamp;
ds_doc_agrupamento_w                            varchar(50)    := '0';
nr_seq_agrupamento_w                            w_movimento_contabil.nr_seq_agrupamento%type    := 0;
ie_contab_rep_prefatur_w                        varchar(15);
ie_compl_hist_w                                 varchar(03);
cd_tipo_lote_contabil_w                         bigint;
ds_conteudo_w                                   varchar(255) := '';
ds_compl_historico_ww                           varchar(255);
ds_convenio_w                                   varchar(255);
ds_mesano_referencia_w                          varchar(30);
ie_contab_cc_debito_w                           varchar(1);
nr_interno_conta_w                              bigint;
nr_atendimento_w                                bigint;
qt_registro_w                                   bigint;
ie_tipo_atendimento_w                           smallint;
nr_seq_interno_w                                bigint;
cd_categoria_w                                  conta_paciente.cd_categoria_parametro%type;
dt_mesano_referencia_w                          timestamp;
cd_setor_atendimento_w                          bigint;
cd_centro_custo_debito_w                        bigint;
qt_regra_cta_prefatur_w                         bigint;
ie_contab_sus_prefatur_w                        varchar(1);
nm_paciente_w                                   varchar(80);
cd_plano_convenio_w                             varchar(10);
nr_seq_atecaco_w                                bigint;
ie_despesa_pre_fatur_w                          varchar(1);
vl_receita_orig_w                               double precision;
nm_agrupador_w                                  varchar(255);
ds_atributos_w                                  varchar(4000);
ie_regra_w                                      varchar(255);
ie_ctb_estab_centro_w                           parametro_faturamento.ie_ctb_estab_centro%type;
cd_estab_movto_debito_w                         movimento_contabil.cd_estabelecimento%type;
cd_estab_movto_receita_w                        movimento_contabil.cd_estabelecimento%type;
cd_estab_movto_receita_ww                       movimento_contabil.cd_estabelecimento%type;
nr_documento_ww                                 movimento_contabil.nr_documento%type := null;
ie_origem_documento_w                           movimento_contabil.ie_origem_documento%type := null;
cd_estab_movto_w                                estabelecimento.cd_estabelecimento%type;
ie_regra_centro_estab_w                         varchar(1) := 'N';
ie_centro_custo_w                               conta_contabil.ie_centro_custo%type;
nr_seq_classif_movto_w                          movimento_contabil.nr_seq_classif_movto%type;
ie_tipo_convenio_w                              convenio.ie_tipo_convenio%type;
vl_desc_item_neg_w								pre_faturamento.vl_desc_item_neg%type;
cd_conta_contabil_conv_w       					conta_contabil.cd_conta_contabil%type;
cd_sequencia_parametro_w						pre_faturamento.cd_sequencia_parametro%type;
nm_tabela_w                                     w_movimento_contabil.nm_tabela%type;
nm_atributo_w                                   w_movimento_contabil.nm_atributo%type;
nr_seq_tab_orig_w                               pre_faturamento.nr_interno_conta%type;

c010 CURSOR FOR
        SELECT  a.cd_convenio,
                d.ie_tipo_convenio,
                a.cd_conta_contabil,
                c.cd_centro_custo_receita,
                a.nr_interno_conta,
                a.cd_setor_atendimento,
                a.cd_conta_desp_pre_fatur,
                sum(coalesce(a.vl_procedimento,0) + coalesce(a.vl_material,0)) vl_receita,
                sum(coalesce(a.vl_repasse_calc,0)) vl_repasse_calc,
				sum(coalesce(a.vl_desc_item_neg,0)) vl_desc_item_neg,
				a.cd_sequencia_parametro,
                'PRE_FATURAMENTO',
                'VL_RECEITA',
                a.nr_interno_conta nr_seq_tab_orig
        from    convenio d,
                Setor_Atendimento c,
                pre_faturamento a
        where   a.dt_referencia         = dt_referencia_w
        and     a.cd_setor_atendimento  = c.cd_setor_atendimento
        and     a.cd_convenio           = d.cd_convenio
        and     ((ie_contab_sus_prefatur_w = 'S') or (d.ie_tipo_convenio <> 3))
        and     coalesce(a.cd_conta_contabil,'0')    <> '0'
        and     a.cd_estabelecimento    = cd_estabelecimento_w
        and     not exists (     SELECT  1
                                from    pre_fatur_perda x,
                                        pre_fatur_perda_conta y
                                where   x.nr_sequencia  = y.nr_seq_perda
                                and     y.nr_interno_conta      = a.nr_interno_conta
                                and     (x.dt_baixa IS NOT NULL AND x.dt_baixa::text <> ''))
        group by
                a.cd_convenio,
                d.ie_tipo_convenio,
                a.cd_conta_contabil,
                c.cd_centro_custo_receita,
                a.nr_interno_conta,
                a.cd_setor_atendimento,
                a.cd_conta_desp_pre_fatur,
				a.cd_sequencia_parametro
        order by 1;


BEGIN
/*Validacao para impedir a geracao em lotes incorretos */

if (ie_exclusao_p <> 'S') then
        select b.cd_tipo_lote_contabil
        into STRICT cd_tipo_lote_contabil_w
        from lote_contabil b
        where b.nr_lote_contabil = nr_lote_contabil_p;
        if (cd_tipo_lote_contabil_w <> 8) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
        end if;
end if;
ds_retorno_p := null;

select  trunc(dt_referencia,'month'),
        cd_estabelecimento,
        obter_se_compl_tipo_lote(cd_estabelecimento, cd_tipo_lote_contabil),
        cd_tipo_lote_contabil
into STRICT    dt_referencia_w,
        cd_estabelecimento_w,
        ie_compl_hist_w,
        cd_tipo_lote_contabil_w
from    lote_contabil
where   nr_lote_contabil        = nr_lote_contabil_p;

select  coalesce(max(ie_contab_repasse_prefatur),'N'),
        coalesce(max(ie_contab_cc_debito),'N'),
        coalesce(max(ie_contab_sus_prefatur),'S'),
        coalesce(max(ie_despesa_pre_fatur),'N'),
        coalesce(max(ie_ctb_estab_centro),'N'),
        coalesce(max(ie_regra_centro_estab),'N')
into STRICT    ie_contab_rep_prefatur_w,
        ie_contab_cc_debito_w,
        ie_contab_sus_prefatur_w,
        ie_despesa_pre_fatur_w,
        ie_ctb_estab_centro_w,
        ie_regra_centro_estab_w
from    parametro_faturamento
where   cd_estabelecimento      = cd_estabelecimento_w;

dt_movimento_w          := pkg_date_utils.get_datetime(pkg_date_utils.end_of(dt_referencia_w, 'MONTH'), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')));
dt_referencia_mesano_w  := somente_numero(to_char(dt_referencia_w, 'MMYYYY'));
/* Leitura para identificar o codigo do historico */

select  vl_parametro
into STRICT    cd_historico_w
from    lote_contabil_parametro
where   nr_lote_contabil        = nr_lote_contabil_p
  and   nr_seq_parametro        = 1;

/* Leitura para identificar o codigo da conta devedora */

select  ds_valor_parametro
into STRICT    cd_conta_debito_ww
from    lote_contabil_parametro
where   nr_lote_contabil = nr_lote_contabil_p
  and   nr_seq_parametro        = 2;


/* Leitura para identificar o codigo da conta devedora  Marcus 04/01/2008 SDP*/

select  max(ds_valor_parametro)
into STRICT    cd_conta_repasse_w
from    lote_contabil_parametro
where   nr_lote_contabil                = nr_lote_contabil_p
and     nr_seq_parametro                = 3
and     ie_contab_rep_prefatur_w        = 'S';

/* Leitura para identificar o codigo do historico padrao para reversao*/

begin
        select  vl_parametro
        into STRICT    cd_historico_reversao_w
        from    lote_contabil_parametro
        where   nr_lote_contabil        = nr_lote_contabil_p
        and     nr_seq_parametro        = 4;
exception when others then
        cd_historico_reversao_w := null;
end;

if (ie_exclusao_p = 'N') and
        ((coalesce(cd_historico_w::text, '') = '') or (coalesce(cd_conta_debito_ww::text, '') = '')) then
        --Os parametros nao foram informados'||'#@#@');
        CALL wheb_mensagem_pck.exibir_mensagem_abort(182379);
end if;

cd_empresa_w            := obter_empresa_estab(cd_estabelecimento_w);
nr_sequencia_movto_w    := 0;
cd_estab_movto_debito_w := cd_estabelecimento_w;
cd_estab_movto_receita_w := cd_estabelecimento_w;

select  count(*)
into STRICT    qt_regra_cta_prefatur_w
from    ctb_regra_cta_prefatur
where   cd_empresa      = cd_empresa_w;

/*select para buscar a conta cd_conta_desconto_pre_fatur da tabela parametro_faturamento*/

begin
	select 	max(cd_conta_desconto_pre_fatur)
	into STRICT	cd_conta_contabil_conv_w
	from	parametro_faturamento a
	where	a.cd_estabelecimento = obter_estabelecimento_ativo();
exception
	when no_data_found then
			cd_conta_contabil_conv_w := null;
end;

/* Identifica se e exclusao do lote */

if (ie_exclusao_p          = 'S') then
        CALL ctb_regras_contabil.comprovante_cache_storage(nr_lote_contabil_p, nm_usuario_p);
        delete from movimento_contabil
        where  nr_lote_contabil = nr_lote_contabil_p;
        Update lote_contabil
        set      vl_credito = 0,
                 vl_debito  = 0
        where    nr_lote_contabil = nr_lote_contabil_p;
        commit;
else
        delete from w_movimento_contabil
        where   nr_lote_contabil        = nr_lote_contabil_p;

        nm_agrupador_w  := coalesce(trim(both obter_agrupador_contabil(8)),'NR_INTERNO_CONTA');

        open c010;
        loop
        fetch c010 into
                cd_convenio_w,
                ie_tipo_convenio_w,
                cd_conta_receita_w,
                cd_centro_receita_w,
                nr_interno_conta_w,
                cd_setor_atendimento_w,
                cd_conta_despesa_w,
                vl_receita_w,
                vl_repasse_w,
				vl_desc_item_neg_w,
				cd_sequencia_parametro_w,
                nm_tabela_w,
                nm_atributo_w,
                nr_seq_tab_orig_w;
        EXIT WHEN NOT FOUND; /* apply on c010 */

                vl_receita_orig_w := vl_receita_w;

                cd_categoria_w  := '';
                cd_centro_custo_debito_w        := null;
                select  coalesce(max(nr_atendimento),0),
                        max(dt_mesano_referencia),
                        max(cd_categoria_parametro)
                into STRICT    nr_atendimento_w,
                        dt_mesano_referencia_w,
                        cd_categoria_w
                from    conta_paciente
                where   nr_interno_conta        = nr_interno_conta_w;

                nr_seq_classif_movto_w  := ctb_obter_classif_financ(cd_convenio_w, ie_tipo_convenio_w);

                if (nm_agrupador_w = 'NR_INTERNO_CONTA')then
                        nr_seq_agrupamento_w    := nr_interno_conta_w;
                elsif (nm_agrupador_w = 'NR_ATENDIMENTO')then
                        nr_seq_agrupamento_w    := nr_atendimento_w;
                elsif (nm_agrupador_w = 'DS_MESANO')then
                        nr_seq_agrupamento_w    := dt_referencia_mesano_w;
                elsif (nm_agrupador_w = 'CD_CONVENIO')then
                        nr_seq_agrupamento_w    := cd_convenio_w;
                end if;

                if (coalesce(nr_seq_agrupamento_w,0) = 0)then
                        nr_seq_agrupamento_w    :=       nr_interno_conta_w;
                end if;

                if (coalesce(nr_atendimento_w,0) <> 0) then

                        ie_tipo_atendimento_w   := obter_tipo_atendimento(nr_atendimento_w);
                end if;

                if (cd_convenio_w <> cd_convenio_ww) then
                        cd_convenio_ww  := cd_convenio_w;
                        select  max(cd_conta_pre_fatur)
                        into STRICT    cd_conta_debito_w
                        from    convenio_estabelecimento b
                        where   cd_convenio             = cd_convenio_w
                        and     cd_estabelecimento              = cd_estabelecimento_w;
                end if;

                cd_conta_debito_w               := coalesce(cd_conta_debito_w, cd_conta_debito_ww);
                nr_sequencia_movto_w    := nr_sequencia_movto_w + 1;
                ds_compl_historico_w    := null;
                ds_compl_historico_w    := '';

                if (cd_centro_receita_w IS NOT NULL AND cd_centro_receita_w::text <> '') and (coalesce(ie_ctb_estab_centro_w,'X') = 'S') then
                        select  coalesce(max(cd_estabelecimento), cd_estabelecimento_w)
                        into STRICT    cd_estab_movto_receita_w
                        from    centro_custo
                        where   cd_centro_custo = cd_centro_receita_w;
                        cd_estab_movto_debito_w := cd_estab_movto_receita_w;
                end if;

                /* Se o parametro do faturamento ie_contab_rep_prefatur_w = 'D' - Desconta o repasse da receita e do convenio */

                if (ie_contab_rep_prefatur_w = 'D') then
                        vl_receita_w            := vl_receita_w - vl_repasse_w;
                end if;

                if (ie_compl_hist_w = 'S') then    /*Anderson 09/07/2008 - OS 96576*/
                        select  substr(obter_nome_convenio(cd_convenio_w),1,40),
                                substr(obter_desc_mes_ano(dt_referencia_w, 'ABM2'),1,30)
                        into STRICT    ds_convenio_w,
                                ds_mesano_referencia_w
;

                        if (nr_atendimento_w <> 0) and (nr_interno_conta_w <> 0) then
                                begin
                                nm_paciente_w   := substr(obter_paciente_conta(nr_interno_conta_w, 'D'),1,80);
                                exception when others then
                                        --'Erro ao obter o nome do paciente! Conta: ' || nr_interno_conta_w||'#@#@');
                                        CALL wheb_mensagem_pck.exibir_mensagem_abort(182384, 'NR_INTERNO_CONTA_W='||nr_interno_conta_w);
                                end;
                        end if;

                        if (nr_atendimento_w = 0) then

                                select  max(nr_atendimento)
                                into STRICT    nr_atendimento_w
                                from    pre_fatur_conta
                                where   dt_referencia           = dt_referencia_w
                                and     nr_interno_conta        = nr_interno_conta_w
                                and     cd_estabelecimento      = cd_estabelecimento_w;

                        end if;

                        ds_conteudo_w   := substr(ds_convenio_w         || '#@' ||
                                                ds_mesano_referencia_w  || '#@' ||
                                                nr_interno_conta_w      || '#@' ||
                                                nr_atendimento_w        || '#@' ||
                                                nm_paciente_w           ,1,255);

                        select  substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_conteudo_w),1,255)
                        into STRICT    ds_compl_historico_ww
;

                        ds_compl_historico_w    := substr(coalesce(ds_compl_historico_ww, ds_compl_historico_w),1,255);
                end if;

                ds_compl_historico_w            := substr(ds_compl_historico_w,1,255);

                select  count(*)
                into STRICT    qt_registro_w
                from    convenio_conta_contabil
                where   (cd_categoria IS NOT NULL AND cd_categoria::text <> '')
                and     cd_convenio     = cd_convenio_w
                and     ie_tipo_conta   = 'P';

                if (qt_registro_w > 0) and (coalesce(nr_atendimento_w,0) <> 0) then
                        begin
                        nr_seq_atecaco_w        := coalesce(obter_atecaco_atendimento(nr_atendimento_w),0);
                        exception when others then
                                nr_seq_atecaco_w        := null;
                        end;

                        if (coalesce(nr_seq_atecaco_w,0) <> 0) then
                                select  max(cd_plano_convenio)
                                into STRICT    cd_plano_convenio_w
                                from    atend_categoria_convenio
                                where   nr_atendimento  = nr_atendimento_W
                                and     nr_seq_interno  = nr_seq_atecaco_w;
                        end if;

                        cd_conta_debito_w       := coalesce(obter_conta_convenio(cd_estabelecimento_w,
                                                                        cd_convenio_w,
                                                                        ie_tipo_atendimento_w,
                                                                        'P',
                                                                        dt_mesano_referencia_w,
                                                                        null,
                                                                        cd_categoria_w,
                                                                        cd_plano_convenio_w,
                                                                        cd_setor_atendimento_w,
                                                                        null,
                                                                        null),cd_conta_debito_w);

                        if (ie_contab_cc_debito_w = 'S') then /*Matheus OS 123021  8/1/2009*/
                                select  coalesce(max(ie_centro_custo),'N')
                                into STRICT    ie_centro_custo_w
                                from    conta_contabil
                                where   cd_conta_contabil = cd_conta_debito_w;

                                if (ie_centro_custo_w = 'S') then
                                        select  max(cd_centro_custo)
                                        into STRICT    cd_centro_custo_debito_w
                                        from    setor_atendimento
                                        where   cd_setor_atendimento    = cd_setor_atendimento_w;

                                        if (coalesce(ie_ctb_estab_centro_w,'X') = 'S') then
                                                if (cd_centro_custo_debito_w IS NOT NULL AND cd_centro_custo_debito_w::text <> '') then
                                                        select  coalesce(max(cd_estabelecimento), cd_estabelecimento_w)
                                                        into STRICT    cd_estab_movto_debito_w
                                                        from    centro_custo
                                                        where   cd_centro_custo = cd_centro_custo_debito_w;
                                                else
                                                        cd_estab_movto_debito_w := cd_estab_movto_receita_w;
                                                end if;
                                        end if;
                                end if;
                        end if;
                end if;

                /* Inserir o registro na conta de debito */

                if (coalesce(nr_interno_conta_w,'0') <> '0') then --aqui
                        nr_documento_ww := null;
                        ie_origem_documento_w := null;
                end if;

                ds_atributos_w  := null;

                ds_atributos_w  :=      'NR_INTERNO_CONTA=' || nr_interno_conta_w;

                ctb_obter_doc_movto(    cd_tipo_lote_contabil_w,
                                        null,
                                        'VR',
                                        dt_movimento_w,
                                        null,
                                        null,
                                        ds_atributos_w,
                                        nm_usuario_p,
                                        ie_regra_w,
                                        nr_documento_ww,
                                        ie_origem_documento_w);

                insert into w_movimento_contabil(
                                nr_lote_contabil,
                                nr_sequencia,
                                cd_conta_contabil,
                                ie_debito_credito,
                                cd_historico,
                                dt_movimento,
                                vl_movimento,
                                ds_compl_historico,
                                ds_doc_agrupamento,
                                nr_seq_agrupamento,
                                cd_centro_custo,
                                ie_transitorio,
                                nr_documento,
                                ie_origem_documento,
                                cd_estabelecimento,
                                nr_seq_classif_movto,
                                cd_sequencia_parametro,
								nr_seq_info,
                                nm_tabela,
                                nm_atributo,
                                nr_seq_tab_orig)
                values (
                                nr_lote_contabil_p,
                                nr_sequencia_movto_w,
                                cd_conta_debito_w,
                                'D',
                                cd_historico_w,
                                dt_movimento_w,
                                vl_receita_w,
                                ds_compl_historico_w,
                                ds_doc_agrupamento_w,
                                nr_seq_agrupamento_w,
                                cd_centro_custo_debito_w,
                                'N',
                                nr_documento_ww,
                                ie_origem_documento_w,
                                cd_estab_movto_debito_w,
                                nr_seq_classif_movto_w,
                                null,
								89,
                                nm_tabela_w,
                                nm_atributo_w,
                                nr_seq_tab_orig_w);
				
				if (coalesce(cd_conta_contabil_conv_w,'0') <> '0') then
					if (ie_contab_cc_debito_w = 'S') then
							select  coalesce(max(ie_centro_custo),'N')
							into STRICT    ie_centro_custo_w
							from    conta_contabil
							where   cd_conta_contabil = cd_conta_contabil_conv_w;

							if (ie_centro_custo_w = 'S') then
									select  max(cd_centro_custo)
									into STRICT    cd_centro_custo_debito_w
									from    setor_atendimento
									where   cd_setor_atendimento    = cd_setor_atendimento_w;

									if (coalesce(ie_ctb_estab_centro_w,'X') = 'S') then
											if (cd_centro_custo_debito_w IS NOT NULL AND cd_centro_custo_debito_w::text <> '') then
													select  coalesce(max(cd_estabelecimento), cd_estabelecimento_w)
													into STRICT    cd_estab_movto_debito_w
													from    centro_custo
													where   cd_centro_custo = cd_centro_custo_debito_w;
											else
													cd_estab_movto_debito_w := cd_estab_movto_receita_w;
											end if;
									end if;
							end if;
					end if;
					
					insert into w_movimento_contabil(
                                nr_lote_contabil,
                                nr_sequencia,
                                cd_conta_contabil,
                                ie_debito_credito,
                                cd_historico,
                                dt_movimento,
                                vl_movimento,
                                ds_compl_historico,
                                ds_doc_agrupamento,
                                nr_seq_agrupamento,
                                cd_centro_custo,
                                ie_transitorio,
                                nr_documento,
                                ie_origem_documento,
                                cd_estabelecimento,
                                nr_seq_classif_movto,
                                cd_sequencia_parametro,
								nr_seq_info,
                                nm_tabela,
                                nm_atributo,
                                nr_seq_tab_orig)
					values (
                                nr_lote_contabil_p,
                                nr_sequencia_movto_w,
                                cd_conta_contabil_conv_w,
                                'D',
                                cd_historico_w,
                                dt_movimento_w,
                                vl_desc_item_neg_w,
                                ds_compl_historico_w,
                                ds_doc_agrupamento_w,
                                nr_seq_agrupamento_w,
                                cd_centro_custo_debito_w,
                                'N',
                                nr_documento_ww,
                                ie_origem_documento_w,
                                cd_estab_movto_debito_w,
                                nr_seq_classif_movto_w,
                                null,
								89,
                                nm_tabela_w,
                                nm_atributo_w,
                                nr_seq_tab_orig_w);	
				end if;


                if (coalesce(cd_centro_receita_w,0) <> 0) and (ie_regra_centro_estab_w = 'S') then
                        begin
                        cd_estab_movto_w := obter_estab_centro_custo(cd_centro_receita_w);
                        if (cd_estab_movto_w <> cd_estab_movto_receita_w) then
                                cd_centro_receita_w     := coalesce(ctb_obter_centro_contab(cd_estab_movto_w, cd_centro_receita_w, cd_estab_movto_receita_w),cd_centro_receita_w);
                                cd_estab_movto_receita_ww := obter_estab_centro_custo(cd_centro_receita_w);
                        end if;
                        exception
                        when others then
                                cd_centro_receita_w := cd_centro_receita_w;
                                cd_estab_movto_receita_ww := cd_estab_movto_receita_w;
                        end;
                end if;

                /* Inserir o registro na conta de credito - Repasse ie_contab_rep_prefatur_w = 'S' Separa o valor do repasse em conta informa */

                if (ie_contab_rep_prefatur_w = 'S') and (cd_conta_repasse_w IS NOT NULL AND cd_conta_repasse_w::text <> '') and (vl_repasse_w <> 0) then
                        vl_receita_w            := vl_receita_w - vl_repasse_w;
                        nr_sequencia_movto_w    := nr_sequencia_movto_w + 1;

                        insert into w_movimento_contabil(
                                nr_lote_contabil,
                                nr_sequencia,
                                cd_conta_contabil,
                                ie_debito_credito,
                                cd_historico,
                                dt_movimento,
                                vl_movimento,
                                ds_compl_historico,
                                ds_doc_agrupamento,
                                nr_seq_agrupamento,
                                ie_transitorio,
                                nr_documento,
                                ie_origem_documento,
                                nr_seq_classif_movto,
                                cd_sequencia_parametro,
								nr_seq_info,
                                nm_tabela,
                                nm_atributo,
                                nr_seq_tab_orig)
                        values ( nr_lote_contabil_p,
                                nr_sequencia_movto_w,
                                cd_conta_Repasse_w,
                                'C',
                                cd_historico_w,
                                dt_movimento_w,
                                vl_repasse_w,
                                ds_compl_historico_w,
                                ds_doc_agrupamento_w,
                                nr_seq_agrupamento_w,
                                'N',
                                nr_documento_ww,
                                ie_origem_documento_w,
                                nr_seq_classif_movto_w,
                                null,
								89,
                                nm_tabela_w,
                                nm_atributo_w,
                                nr_seq_tab_orig_w);

                        if (ie_despesa_pre_fatur_w = 'S') and (coalesce(cd_conta_despesa_w,'0') <> '0') then


                                begin
                                select  ie_centro_custo
                                into STRICT    ie_centro_custo_w
                                from    conta_contabil
                                where   cd_conta_contabil       = cd_conta_despesa_w;
                                exception
                                when others then
                                        ie_centro_custo_w       := 'N';
                                end;

                                vl_receita_w            := vl_receita_orig_w - vl_repasse_w;
                                insert into w_movimento_contabil(
                                        nr_lote_contabil,
                                        nr_sequencia,
                                        cd_conta_contabil,
                                        ie_debito_credito,
                                        cd_historico,
                                        dt_movimento,
                                        vl_movimento,
                                        cd_centro_custo,
                                        ds_compl_historico,
                                        ds_doc_agrupamento,
                                        nr_seq_agrupamento,
                                        ie_transitorio,
                                        nr_documento,
                                        ie_origem_documento,
                                        cd_estabelecimento,
                                        nr_seq_classif_movto,
                                        cd_sequencia_parametro,
										nr_seq_info,
                                nm_tabela,
                                nm_atributo,
                                nr_seq_tab_orig)
                                values ( nr_lote_contabil_p,
                                        nr_sequencia_movto_w,
                                        cd_conta_despesa_w,
                                        'D',
                                        cd_historico_w,
                                        dt_movimento_w,
                                        vl_repasse_w,
                                        CASE WHEN ie_centro_custo_w='S' THEN cd_centro_receita_w  ELSE null END ,
                                        ds_compl_historico_w,
                                        ds_doc_agrupamento_w,
                                        nr_seq_agrupamento_w,
                                        'N',
                                        nr_documento_ww,
                                        ie_origem_documento_w,
                                        CASE WHEN ie_centro_custo_w='S' THEN cd_estab_movto_receita_ww  ELSE null END ,
                                        nr_seq_classif_movto_w,
                                        null,
										89,
                                nm_tabela_w,
                                nm_atributo_w,
                                nr_seq_tab_orig_w);
                end if;

                end if;

                if (qt_regra_cta_prefatur_w > 0) then
                        cd_conta_receita_w      := ctb_obter_cta_prefatur(cd_empresa_w,cd_estabelecimento_w,cd_conta_receita_w,dt_movimento_w);
						cd_sequencia_parametro_w:= null;
                end if;
                nr_sequencia_movto_w    := nr_sequencia_movto_w + 1;
/* Inserir o registro na conta de credito - Receita */

                if (ie_despesa_pre_fatur_w = 'N') then
                        vl_receita_w            := vl_receita_w;
                else
                        vl_receita_w            := vl_receita_orig_w;
                end if;

                begin
                select  ie_centro_custo
                into STRICT    ie_centro_custo_w
                from    conta_contabil
                where   cd_conta_contabil       = cd_conta_Receita_w;
                exception when others then
                        ie_centro_custo_w       := 'N';
                end;

                insert into w_movimento_contabil(
                        nr_lote_contabil,
                        nr_sequencia,
                        cd_conta_contabil,
                        ie_debito_credito,
                        cd_historico,
                        dt_movimento,
                        vl_movimento,
                        cd_centro_custo,
                        ds_compl_historico,
                        ds_doc_agrupamento,
                        nr_seq_agrupamento,
                        ie_transitorio,
                        nr_documento,
                        ie_origem_documento,
                        cd_estabelecimento,
                        nr_seq_classif_movto,
                        cd_sequencia_parametro,
						nr_seq_info,
                                nm_tabela,
                                nm_atributo,
                                nr_seq_tab_orig)
                values ( nr_lote_contabil_p,
                        nr_sequencia_movto_w,
                        cd_conta_Receita_w,
                        'C',
                        cd_historico_w,
                        dt_movimento_w,
                        vl_receita_w,
                        CASE WHEN ie_centro_custo_w='S' THEN cd_centro_receita_w  ELSE null END ,
                        ds_compl_historico_w,
                        ds_doc_agrupamento_w,
                        nr_seq_agrupamento_w,
                        'N',
                        nr_documento_ww,
                        ie_origem_documento_w,
                        CASE WHEN ie_centro_custo_w='S' THEN cd_estab_movto_receita_ww  ELSE null END ,
                        nr_seq_classif_movto_w,
                        cd_sequencia_parametro_w,
						89,
                                nm_tabela_w,
                                nm_atributo_w,
                                nr_seq_tab_orig_w);
						
				if (coalesce(cd_conta_contabil_conv_w,'0') <> '0') then
					insert into w_movimento_contabil(
							nr_lote_contabil,
							nr_sequencia,
							cd_conta_contabil,
							ie_debito_credito,
							cd_historico,
							dt_movimento,
							vl_movimento,
							cd_centro_custo,
							ds_compl_historico,
							ds_doc_agrupamento,
							nr_seq_agrupamento,
							ie_transitorio,
							nr_documento,
							ie_origem_documento,
							cd_estabelecimento,
							nr_seq_classif_movto,
							cd_sequencia_parametro,
							nr_seq_info,
                                nm_tabela,
                                nm_atributo,
                                nr_seq_tab_orig)
					values ( nr_lote_contabil_p,
							nr_sequencia_movto_w,
							cd_conta_Receita_w,
							'C',
							cd_historico_w,
							dt_movimento_w,
							vl_desc_item_neg_w,
							CASE WHEN ie_centro_custo_w='S' THEN cd_centro_receita_w  ELSE null END ,
							ds_compl_historico_w,
							ds_doc_agrupamento_w,
							nr_seq_agrupamento_w,
							'N',
							nr_documento_ww,
							ie_origem_documento_w,
							CASE WHEN ie_centro_custo_w='S' THEN cd_estab_movto_receita_ww  ELSE null END ,
							nr_seq_classif_movto_w,
							cd_sequencia_parametro_w,
							89,
                                nm_tabela_w,
                                nm_atributo_w,
                                nr_seq_tab_orig_w);		
				end if;
        end loop;
        close c010;
		
		

        if (pkg_i18n.get_user_locale = 'es_BO' AND ie_exclusao_p = 'N') then
            BEGIN
                CALL ctb_regras_contabil.ctb_gerar_cd_controle_pre_fat(nr_lote_contabil_p, ie_exclusao_p, nm_usuario_p);
            EXCEPTION WHEN OTHERS THEN
                CALL ctb_gravar_log_lote(nr_lote_contabil_p, 1, SQLERRM, nm_usuario_p);
            END;
        end if;

        CALL agrupa_movimento_contabil(nr_lote_contabil_p, nm_usuario_p);

/*      Reverter os lancamentos no primeiro dia do mes subsequente */

        dt_estorno_w    := pkg_date_utils.start_of(pkg_date_utils.add_month(dt_referencia_w,1,0),'month',0);
        select  max(nr_sequencia)
        into STRICT    nr_sequencia_movto_w
        from    movimento_contabil
        where   nr_lote_contabil        = nr_lote_contabil_p;

        insert into movimento_contabil(
                nr_lote_contabil,
                nr_sequencia,
                cd_conta_contabil,
                ie_debito_credito,
                cd_historico,
                dt_movimento,
                vl_movimento,
                dt_atualizacao,
                nm_usuario,
                cd_centro_custo,
                ds_compl_historico,
                nr_seq_trans_fin,
                nr_documento,
                nr_seq_agrupamento,
                ie_transitorio,
                cd_estabelecimento,
                cd_classificacao,
                nr_seq_classif_movto)
        SELECT  nr_lote_contabil,
                nr_sequencia_movto_w + row_number() OVER () AS rownum,
                cd_conta_contabil,
                CASE WHEN ie_debito_credito='D' THEN 'C'  ELSE 'D' END ,
                coalesce(cd_historico_reversao_w, cd_historico),
                dt_estorno_w,
                vl_movimento,
                dt_atualizacao,
                nm_usuario,
                cd_centro_custo,
                substr(ds_compl_historico || wheb_mensagem_pck.get_texto(299564),1,255),
                nr_seq_trans_fin,
                null,
                nr_seq_agrupamento,
                'N',
                cd_estabelecimento,
                cd_classificacao,
                nr_seq_classif_movto
        from    movimento_contabil
        where   nr_lote_contabil        = nr_lote_contabil_p;


end if;
if (ie_exclusao_p = 'S') then
        ds_retorno_p            := wheb_mensagem_pck.get_texto(165188);
        CALL ctb_gravar_log_lote( nr_lote_contabil_p, 2, '', nm_usuario_p);
else
        ds_retorno_p            := wheb_mensagem_pck.get_texto(165187);
        CALL ctb_gravar_log_lote( nr_lote_contabil_p, 1, '', nm_usuario_p);
end if;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE contabiliza_pre_fatur ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

