-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_90 (( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) is /* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Validar número da guia
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
*/
 dados_tb_sel_w pls_tipos_ocor_pck.dados_table_selecao_ocor) RETURNS varchar AS $body$
DECLARE


ds_guia_w	varchar(100);
BEGIN
if (ie_tipo_guia_p = 'G') then
	ds_guia_w := 'Guia operadora';
elsif (ie_tipo_guia_p = 'GP') then
	ds_guia_w := 'Guia prestador';
elsif (ie_tipo_guia_p = 'GF') then
	ds_guia_w := 'Guia referência';
end if;

if (ie_observacao_p = 'N') then
	if (ie_tipo_guia_p = 'G') then
		return ds_guia_w || ' informada errada';
	elsif (ie_tipo_guia_p = 'GP') then
		return ds_guia_w || ' informada errada';
	elsif (ie_tipo_guia_p = 'GF') then
		return ds_guia_w || ' informada errada';
	end if;
elsif (ie_observacao_p = 'D') then
	if (ie_guia_diferente_p = 'G') then
		return ds_guia_w || ' igual à guia operadora. ' || ds_guia_w || ': ';
	elsif (ie_guia_diferente_p = 'GP') then
		return ds_guia_w || ' igual à guia prestador. ' || ds_guia_w || ': ';
	elsif (ie_guia_diferente_p = 'GF') then
		return ds_guia_w || ' igual à guia referência. ' || ds_guia_w || ': ';
	end if;
end if;

end;

begin

-- Deve existir informação da regra para aplicar a validação
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '') then

	for	r_C01_w in C01(dados_regra_p.nr_sequencia) loop

		/*Verifica se é para validar a ocorrência*/

		if (r_C01_w.ie_tipo_guia IS NOT NULL AND r_C01_w.ie_tipo_guia::text <> '') then

			CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);
			pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_sel_w);

			for r_C02_w in C02(nr_id_transacao_p) loop

				/*Campo guia operadora*/

				if (r_C01_w.ie_tipo_guia = 'G') then
					if (dados_regra_p.ie_evento <> 'IMP') then
						cd_guia_valida_w := r_C02_w.cd_guia;
					else
						cd_guia_valida_w := r_C02_w.cd_guia_imp;
					end if;
				/*Campo guia prestador*/

				elsif (r_C01_w.ie_tipo_guia = 'GP') then
					if (dados_regra_p.ie_evento <> 'IMP') then
						cd_guia_valida_w := r_C02_w.cd_guia_prestador;
					else
						cd_guia_valida_w := r_C02_w.cd_guia_prestador_imp;
					end if;
				/*Campo guia referência*/

				elsif (r_C01_w.ie_tipo_guia = 'GF') then
					if (dados_regra_p.ie_evento <> 'IMP') then
						cd_guia_valida_w := r_C02_w.cd_guia_referencia;
					else
						cd_guia_valida_w := r_C02_w.cd_guia_solic_imp;
					end if;
				end if;

				if (cd_guia_valida_w IS NOT NULL AND cd_guia_valida_w::text <> '') then
					ds_observacao_w	 := '';

					/*Valida a quantidade mínima de caracteres*/

					if (r_C01_w.qt_min_caracteres IS NOT NULL AND r_C01_w.qt_min_caracteres::text <> '') then
						if (length(cd_guia_valida_w) < r_C01_w.qt_min_caracteres) then
							ds_observacao_w		:= obter_observacao_ocorrencia(r_C01_w.ie_tipo_guia, null) || '. Ela deve possuir no mínimo ' || r_C01_w.qt_min_caracteres || ' caracteres!';
						end if;
					end if;

					if (r_C01_w.qt_max_caracteres IS NOT NULL AND r_C01_w.qt_max_caracteres::text <> '') then
						if (length(cd_guia_valida_w) > r_C01_w.qt_max_caracteres) then
							ds_observacao_w		:= obter_observacao_ocorrencia(r_C01_w.ie_tipo_guia, null) || '. Ela deve possuir no máximo ' || r_C01_w.qt_max_caracteres || ' caracteres!';
						end if;
					end if;

					/*Valida a expressão conforme definido pelo cliente*/

					if (r_c01_w.ds_carac_valido IS NOT NULL AND r_c01_w.ds_carac_valido::text <> '') then
						cd_guia_alterada_w	:= regexp_replace(cd_guia_valida_w, '[^'||r_c01_w.ds_carac_valido ||']', '');

						if	((cd_guia_alterada_w <> cd_guia_valida_w) or (coalesce(cd_guia_alterada_w::text, '') = '')) then
							ds_observacao_w		:= obter_observacao_ocorrencia(r_C01_w.ie_tipo_guia, null) || '. Existem caracteres inválidos!';
						end if;
					end if;

					/*Valida se o número da guia não é permitido conforme o cadastro*/

					if (r_c01_w.nr_seq_regra_nguia IS NOT NULL AND r_c01_w.nr_seq_regra_nguia::text <> '') then
						select	count(1)
						into STRICT	qt_registros_w
						from	pls_itens_regra_nguia
						where	nr_seq_regra_nguia 	= r_c01_w.nr_seq_regra_nguia
						and	cd_guia			= cd_guia_valida_w  LIMIT 1;

						if (qt_registros_w > 0) then
							ds_observacao_w		:= obter_observacao_ocorrencia(r_C01_w.ie_tipo_guia, null) || '. O código ' || cd_guia_valida_w || ' não é permitido!';
						end if;
					end if;

					/*Verifica se o número da guia é igual a guia cadastrada na regra para comparação*/

					if (r_c01_w.ie_guia_diferente <> 'N') then
						/*Campo guia operadora*/

						if (r_c01_w.ie_guia_diferente = 'G') then
							ds_guia_diferente_w := 'Guia operadora';
							if (dados_regra_p.ie_evento = 'IMP') then
								cd_guia_diferente_w := r_C02_w.cd_guia_imp;
							else
								cd_guia_diferente_w := r_C02_w.cd_guia;
							end if;
						/*Campo guia prestador*/

						elsif (r_c01_w.ie_guia_diferente = 'GP') then
							ds_guia_diferente_w := 'Guia prestador';
							if (dados_regra_p.ie_evento = 'IMP') then
								cd_guia_diferente_w := r_C02_w.cd_guia_prestador_imp;
							else
								cd_guia_diferente_w := r_C02_w.cd_guia_prestador;
							end if;
						/*Campo guia referência*/

						elsif (r_c01_w.ie_guia_diferente = 'GF') then
							ds_guia_diferente_w := 'Guia referência';
							if (dados_regra_p.ie_evento = 'IMP') then
								cd_guia_diferente_w := r_C02_w.cd_guia_solic_imp;
							else
								cd_guia_diferente_w := r_C02_w.cd_guia_referencia;
							end if;
						end if;

						if (cd_guia_diferente_w IS NOT NULL AND cd_guia_diferente_w::text <> '') then
							/*Caso sejam iguais, gera ocorrência*/

							if (cd_guia_valida_w = cd_guia_diferente_w) then
								ds_observacao_w := obter_observacao_ocorrencia(r_C01_w.ie_tipo_guia, r_c01_w.ie_guia_diferente, 'D') || cd_guia_valida_w || '. ' || ds_guia_diferente_w || ': ' || cd_guia_diferente_w;
							end if;
						end if;
					end if;

					/*Caso tiver observação lança a ocorrência*/

					if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then

						dados_tb_selecao_w.ie_valido(nr_idx_w)		:= 'S';
						dados_tb_selecao_w.nr_seq_selecao(nr_idx_w)	:= r_C02_w.nr_seq_selecao;
						dados_tb_selecao_w.ds_observacao(nr_idx_w)	:= ds_observacao_w;

						if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
							CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
													'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
							nr_idx_w := 0;
							pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
						else
							nr_idx_w := nr_idx_w + 1;
						end if;
					end if;
				end if;
			end loop;

			/*Lança as glosas caso existir registros que não foram gerados*/

			if (nr_idx_w > 0)	then
				CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
										'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
			end if;

			CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);
		end if;

	end loop;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_90 (( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) is  dados_tb_sel_w pls_tipos_ocor_pck.dados_table_selecao_ocor) FROM PUBLIC;

