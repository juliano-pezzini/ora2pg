-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixar_prescr_emergencia (nr_prescricao_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_prescr_w			bigint;
nr_seq_mat_atend_w		bigint;
nr_atendimento_w		bigint;
cd_setor_atendimento_w		integer;
cd_material_w			integer;
dt_entrada_unidade_w		timestamp;
cd_unidade_medida_w		varchar(30);
qt_material_w			double precision;
cd_convenio_w			integer;
nr_seq_lote_fornec_w		bigint;
cd_categoria_w			varchar(10);
nr_doc_convenio_w		varchar(20);
ie_tipo_guia_w			varchar(2);
dt_prescricao_w			timestamp;
nr_seq_atepacu_w		bigint;
nr_sequencia_w			integer;
dt_atualizacao_w		timestamp;
cd_local_estoque_w		smallint;
cd_senha_w			varchar(20);
ds_erro_w			varchar(4000);
ie_data_prescricao_w	varchar(1);
dt_item_w				timestamp;
nr_seq_tipo_baixa_w		bigint;
cd_cgc_fornecedor_w		varchar(14);

c01 CURSOR FOR
SELECT	a.nr_atendimento,
	b.cd_material,
	b.cd_unidade_medida,
	b.qt_total_dispensar,
	a.dt_prescricao,
	b.nr_sequencia,
	b.dt_atualizacao,
	coalesce(a.cd_local_estoque, coalesce(b.cd_local_estoque, c.cd_local_estoque)),
	b.nr_seq_lote_fornec,
	a.cd_setor_atendimento
from	setor_atendimento c,
	prescr_material b,
	prescr_medica a
where	a.nr_prescricao		= b.nr_prescricao
and	a.cd_setor_atendimento	= c.cd_setor_atendimento
and	a.nr_prescricao 	= nr_prescricao_p
and	b.cd_motivo_baixa 	= 0;


BEGIN

ie_data_prescricao_w	:=  coalesce(Obter_valor_param_usuario(924, 759, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');

update	prescr_medica
set	dt_emissao_farmacia	= clock_timestamp()
where	nr_prescricao		= nr_prescricao_p;

select	max(a.nr_atendimento),
	max(a.cd_setor_atendimento)
into STRICT	nr_atendimento_w,
	cd_setor_atendimento_w
from	setor_atendimento c,
	prescr_material b,
	prescr_medica a
where	a.nr_prescricao		= b.nr_prescricao
and	a.cd_setor_atendimento	= c.cd_setor_atendimento
and	a.nr_prescricao 	= nr_prescricao_p
and	b.cd_motivo_baixa 	= 0;

select	coalesce(max(nr_seq_interno),0)
into STRICT	nr_seq_atepacu_w		
from 	atend_paciente_unidade a
where	a.nr_atendimento = nr_atendimento_w
and	a.cd_setor_atendimento = cd_setor_atendimento_w;

select	max(cd_setor_atendimento),
	max(dt_entrada_unidade)
into STRICT	cd_setor_atendimento_w,
	dt_entrada_unidade_w
from 	atend_paciente_unidade
where 	nr_seq_interno = nr_seq_atepacu_w;

CALL gravar_Log_tasy(90302,
	' nr_prescricao_p = ' || nr_prescricao_p || chr(10) ||
	' ie_data_prescricao_w = ' || ie_data_prescricao_w || chr(10) ||
	' nr_atendimento_w = ' || nr_atendimento_w || chr(10) ||
	' nr_seq_atepacu_w = ' || nr_seq_atepacu_w || chr(10) ||
	' cd_setor_atendimento_w = ' || cd_setor_atendimento_w || chr(10) ||
	' dt_entrada_unidade_w = ' || dt_entrada_unidade_w || chr(10) ||
	' Abertura c01 BAIXAR_PRESCR_EMERGENCIA',
	nm_usuario_p);

open	c01;
loop
fetch	c01 into
	nr_atendimento_w,
	cd_material_w,
	cd_unidade_medida_w,
	qt_material_w,
	dt_prescricao_w,
	nr_sequencia_w,
	dt_atualizacao_w,
	cd_local_estoque_w,
	nr_seq_lote_fornec_w,
	cd_setor_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	/*
	select	Obter_Atepacu_paciente(nr_atendimento_w,'A')
	into	nr_seq_atepacu_w
	from	dual;

	select	cd_setor_atendimento,
		dt_entrada_unidade
	into	cd_setor_atendimento_w,
		dt_entrada_unidade_w
	from 	atend_paciente_unidade
	where 	nr_seq_interno = nr_seq_atepacu_w;
	
	*/
	
	
	CALL gravar_Log_tasy(90302,
		' nr_atendimento_w = ' || nr_atendimento_w || chr(10) ||
		' cd_material_w = ' || cd_material_w || chr(10) ||
		' cd_unidade_medida_w = ' || cd_unidade_medida_w || chr(10) ||
		' qt_material_w = ' || qt_material_w || chr(10) ||
		' dt_prescricao_w = ' || dt_prescricao_w || chr(10) ||
		' nr_sequencia_w = ' || nr_sequencia_w || chr(10) ||
		' dt_atualizacao_w = ' || dt_atualizacao_w || chr(10) ||
		' cd_local_estoque_w = ' || cd_local_estoque_w || chr(10) ||
		' nr_seq_lote_fornec_w = ' || nr_seq_lote_fornec_w || chr(10) ||
		' cd_setor_atendimento_w = ' || cd_setor_atendimento_w || chr(10) ||
		' Valores c01 BAIXAR_PRESCR_EMERGENCIA',
		nm_usuario_p);
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_tipo_baixa_w
	from   	tipo_baixa_prescricao
	where  	cd_tipo_baixa = 1
	and    	ie_prescricao_devolucao = 'P';

	SELECT * FROM obter_convenio_execucao(nr_atendimento_w, clock_timestamp(), cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;
	
	if (ie_data_prescricao_w = 'S') then
		dt_item_w := dt_prescricao_w;
	end if;

	select	nextval('material_atend_paciente_seq')
	into STRICT	nr_seq_mat_atend_w
	;
	
	if (coalesce(cd_cgc_fornecedor_w::text, '') = '') then
		select	max(CASE WHEN a.ie_consignado='1' THEN  b.cd_cgc_fornec  ELSE null END )
		into STRICT	cd_cgc_fornecedor_w
		from	material a,
				material_lote_fornec b
		where	a.cd_material 	= b.cd_material
		and		b.nr_sequencia 	= nr_seq_lote_fornec_w;
		
	/*para ambos (material.ie_consignado = '2'): obter_fornec_consig_ambos*/

	end if;

	CALL gravar_Log_tasy(90302,
		' nr_seq_mat_atend_w = ' || nr_seq_mat_atend_w || chr(10) ||
		' cd_convenio_w = ' || cd_convenio_w || chr(10) ||
		' cd_categoria_w = ' || cd_categoria_w || chr(10) ||
		' nr_doc_convenio_w = ' || nr_doc_convenio_w || chr(10) ||
		' ie_tipo_guia_w = ' || ie_tipo_guia_w || chr(10) ||
		' cd_senha_w = ' || cd_senha_w || chr(10) ||
		' Valores Insert MATERIAL_ATEND_PACINETE BAIXAR_PRESCR_EMERGENCIA',
		nm_usuario_p);
	
	begin
	insert	into material_atend_paciente(nr_sequencia,
		nr_atendimento,
		dt_entrada_unidade,
		cd_material,
		dt_atendimento,
		dt_conta,
		cd_unidade_medida,
		qt_material,
		dt_atualizacao,
		nm_usuario,
		cd_convenio,
		cd_categoria,
		nr_doc_convenio,
		ie_tipo_guia,
		dt_prescricao,
		cd_material_prescricao,
		cd_material_exec,
		nr_prescricao,
		nr_sequencia_prescricao,
		cd_acao,
		cd_setor_atendimento,
		qt_executada,
		vl_unitario,
		qt_ajuste_conta,
		ie_valor_informado,
		ie_guia_informada,
		ie_auditoria,
		nm_usuario_original,
		cd_situacao_glosa,
		nr_seq_atepacu,
		nr_seq_cor_exec,
		cd_local_estoque,
		cd_senha,
		nr_seq_lote_fornec,
		nr_seq_tipo_baixa,
		cd_cgc_fornecedor)
	values (nr_seq_mat_atend_w,
		nr_atendimento_w,
		dt_entrada_unidade_w,
		cd_material_w,
		coalesce(dt_item_w, dt_atualizacao_w),
		coalesce(dt_item_w, dt_atualizacao_w),
		cd_unidade_medida_w,
		qt_material_w,		
		clock_timestamp(),
		nm_usuario_p,
		cd_convenio_w,
		cd_categoria_w,
		nr_doc_convenio_w,
		ie_tipo_guia_w,
		dt_prescricao_w,
		cd_material_w,
		cd_material_w,
		nr_prescricao_p,
		nr_sequencia_w,
		'1',
		cd_setor_atendimento_w,
		qt_material_w, 
		0, 
		0,
		'N', 
		'N', 
		'N', 
		nm_usuario_p, 
		0,
		nr_seq_atepacu_w,
		159,
		cd_local_estoque_w,
		cd_senha_w,
		nr_seq_lote_fornec_w,
		nr_seq_tipo_baixa_w,
		cd_cgc_fornecedor_w);
	
	update	prescr_material
	set	dt_baixa	= clock_timestamp(),
		nm_usuario	= nm_usuario_p,
		cd_motivo_baixa	= 1
	where	nr_prescricao	= nr_prescricao_p	
	and	nr_sequencia 	= nr_sequencia_w;
	
	CALL Atualiza_Preco_Material(nr_seq_mat_atend_w,nm_usuario_p);
	
	exception when others then
		ds_erro_w	:= ds_erro_w || sqlerrm;
	end;
	
	end;
end loop;
close c01;

if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
	CALL gravar_log_tasy(90302,
		' nr_prescricao_p= ' || nr_prescricao_p || chr(10) ||
		' ERRO= ' || ds_erro_w,
		nm_usuario_p);
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(261396, 'ERRO='|| ds_erro_w);
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixar_prescr_emergencia (nr_prescricao_p bigint, nm_usuario_p text) FROM PUBLIC;

