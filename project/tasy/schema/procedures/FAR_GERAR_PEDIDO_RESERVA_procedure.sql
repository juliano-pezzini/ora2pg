-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE far_gerar_pedido_reserva (cd_pessoa_fisica_p text, nr_seq_pedido_p INOUT bigint, nr_seq_reserva_p bigint, nr_seq_vendedor_p bigint, ie_gerar_todos_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
nr_sequencia_w			bigint;
nr_seq_item_w			bigint;
cd_material_w			integer;
qt_material_w			double precision;
vl_total_item_w 			double precision;
vl_unitario_item_w 			double precision;
cd_unidade_venda_w 		varchar(30);
nr_seq_reserva_w			bigint;
nr_seq_promocao_w		bigint;

c01 CURSOR FOR 
SELECT	nr_sequencia, 
	cd_material, 
	qt_material 
from	far_reserva_mat 
where	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
and	coalesce(dt_baixa::text, '') = '' 
and	((ie_gerar_todos_p = 'N' and nr_sequencia = nr_seq_reserva_p) or (ie_gerar_todos_p = 'S' and cd_pessoa_fisica = cd_pessoa_fisica_p));

 

BEGIN 
 
nr_sequencia_w	:= coalesce(nr_seq_pedido_p,0);
 
if (nr_seq_pedido_p = 0) then 
	begin 
	 
	select	nextval('far_pedido_seq') 
	into STRICT	nr_sequencia_w 
	;
 
	insert into far_pedido( 
		nr_sequencia, 
		cd_estabelecimento, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		dt_pedido, 
		nr_atendimento, 
		cd_pessoa_fisica, 
		dt_fechamento, 
		nr_seq_vendedor, 
		vl_total, 
		vl_mercadoria, 
		ie_entregar, 
		ie_cpf_nota, 
		ie_troco_entrega, 
		ie_classificacao) values ( 
			nr_sequencia_w, 
			cd_estabelecimento_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			null, 
			cd_pessoa_fisica_p, 
			null, 
			nr_seq_vendedor_p, 
			0, 
			0, 
			'N','N','N','P');
 
	nr_seq_pedido_p	:= nr_sequencia_w;
	end;
end if;
 
open c01;
loop 
fetch c01 into 
	nr_seq_reserva_w, 
	cd_material_w, 
	qt_material_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
 
	--far_obter_preco_mat(cd_material_w,cd_estabelecimento_p,nr_seq_pedido_p,vl_unitario_item_w,nr_seq_promocao_w); 
	vl_unitario_item_w:= far_obter_preco_mat2(cd_material_w,cd_estabelecimento_p,0);
 
	select 	cd_unidade_venda 
	into STRICT	cd_unidade_venda_w 
	from 	material_estab 
	where	cd_material 		= cd_material_w 
	and	cd_estabelecimento 	= cd_estabelecimento_p;
 
	vl_total_item_w 	:= round((vl_unitario_item_w * qt_material_w)::numeric,2);
		 
	select 	max(coalesce(nr_seq_item,0)) + 1 
	into STRICT	nr_seq_item_w 
	from 	far_pedido_item 
	where	nr_seq_pedido = nr_seq_pedido_p;
 
	if (coalesce(nr_seq_item_w::text, '') = '') then 
		nr_seq_item_w := 1;
	end if;
			 
	insert into far_pedido_item( 
		nr_seq_item, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		nr_seq_pedido, 
		qt_material, 
		cd_material, 
		vl_unitario_item, 
		vl_total_item, 
		vl_liquido_item, 
		cd_unidade_medida, 
		nr_seq_promocao) values ( 
				nr_seq_item_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_sequencia_w, 
				qt_material_w, 
				cd_material_w, 
				vl_unitario_item_w, 
				vl_total_item_w, 
				vl_total_item_w, 
				cd_unidade_venda_w, 
				CASE WHEN nr_seq_promocao_w=0 THEN null  ELSE nr_seq_promocao_w END );
 
	update	far_reserva_mat 
	set	dt_baixa = clock_timestamp() 
	where	nr_sequencia = nr_seq_reserva_w;		
 
	end;
end loop;
close c01;
 
commit;
 
CALL far_atualizar_vl_total_ped(nr_sequencia_w);
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE far_gerar_pedido_reserva (cd_pessoa_fisica_p text, nr_seq_pedido_p INOUT bigint, nr_seq_reserva_p bigint, nr_seq_vendedor_p bigint, ie_gerar_todos_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

