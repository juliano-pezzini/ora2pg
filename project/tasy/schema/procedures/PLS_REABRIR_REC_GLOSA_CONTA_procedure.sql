-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_reabrir_rec_glosa_conta (nr_seq_rec_glosa_conta_p pls_rec_glosa_conta.nr_sequencia%type, nr_seq_protocolo_p pls_rec_glosa_protocolo.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

		
cont_w  		integer;
ie_status_w		pls_rec_glosa_protocolo.ie_status%type;
ie_gerar_val_adic_w	pls_parametros_rec_glosa.ie_gerar_val_adic%type;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
		
C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_rec_glosa_conta
	where	nr_seq_protocolo	= nr_seq_protocolo_p
	and	ie_status		!= '3';
		
BEGIN
cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;

select	coalesce(max(ie_gerar_val_adic), 'L')
into STRICT	ie_gerar_val_adic_w
from	pls_parametros_rec_glosa
where	cd_estabelecimento = cd_estabelecimento_w;

if (nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') then
	select	max(ie_status)
	into STRICT	ie_status_w
	from	pls_rec_glosa_protocolo
	where	nr_sequencia	= nr_seq_protocolo_p;
	
	-- Encerrado sem pagamento

	-- Pagamento efetuado
	if (ie_status_w in ('4','6')) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(391538);
	end if;

	select	count(1)
	into STRICT	cont_w
	from	pls_rec_glosa_conta	rc,
		pls_analise_conta	ac
	where	ac.nr_sequencia		= rc.nr_seq_analise
	and	rc.nr_seq_protocolo	= nr_seq_protocolo_p
	and	ac.ie_status in ('L','T');
	
	if (cont_w > 0) then
		-- Este protocolo possui analises deste recurso de glosa finalizadas. Favor reabrir as analises.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(391526);
	end if;

	for r_C01_w in C01 loop
		begin
		
		update	pls_rec_glosa_conta
		set	ie_status	= '1',
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	nr_sequencia	= r_C01_w.nr_sequencia;
		
		if (ie_gerar_val_adic_w = 'F') then
			CALL pls_excluir_val_adic_rec_glo(null, r_C01_w.nr_sequencia);
		end if;
		
		CALL pls_gerar_log_rec_glosa( 'R', null, r_C01_w.nr_sequencia, nm_usuario_p, 'C', null, null);
		end;
	end loop;

	select	count(1)
	into STRICT	cont_w
	from	pls_rec_glosa_conta
	where	nr_seq_protocolo 	= nr_seq_protocolo_p
	and	ie_status 		= '1'  LIMIT 1;
	
	if (cont_w > 0) then	
		update	pls_rec_glosa_protocolo
		set	ie_status	= '2'
		where	nr_sequencia	= nr_seq_protocolo_p;
	end if;
else
	select	max(rp.ie_status)
	into STRICT	ie_status_w
	from	pls_rec_glosa_protocolo	rp,
		pls_rec_glosa_conta	rc
	where	rp.nr_sequencia	= rc.nr_seq_protocolo
	and	rc.nr_sequencia	= nr_seq_rec_glosa_conta_p;
	
	-- Encerrado sem pagamento

	-- Pagamento efetuado
	if (ie_status_w in ('4','6')) then
	
		CALL wheb_mensagem_pck.exibir_mensagem_abort(391538);
	end if;

	select	count(1)
	into STRICT	cont_w
	from	pls_rec_glosa_conta	rc,
		pls_analise_conta	ac
	where	ac.nr_sequencia	= rc.nr_seq_analise
	and	rc.nr_sequencia	= nr_seq_rec_glosa_conta_p
	and	ac.ie_status in ('L','T');
	
	if (cont_w > 0) then
	
		CALL wheb_mensagem_pck.exibir_mensagem_abort(391524);
	end if;
	
	update	pls_rec_glosa_conta
	set	ie_status	= '1',
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where	nr_sequencia	= nr_seq_rec_glosa_conta_p;
	
	update	pls_rec_glosa_protocolo
	set	ie_status	= '2'
	where	nr_sequencia	in ( 	SELECT 	nr_seq_protocolo
					from	pls_rec_glosa_conta
					where	nr_sequencia = nr_seq_rec_glosa_conta_p);
	
	if (ie_gerar_val_adic_w = 'F') then
		CALL pls_excluir_val_adic_rec_glo(null, nr_seq_rec_glosa_conta_p);
	end if;
	
	CALL pls_gerar_log_rec_glosa( 'R', null, nr_seq_rec_glosa_conta_p, nm_usuario_p, 'C', null, null);

end if;
commit;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_reabrir_rec_glosa_conta (nr_seq_rec_glosa_conta_p pls_rec_glosa_conta.nr_sequencia%type, nr_seq_protocolo_p pls_rec_glosa_protocolo.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

