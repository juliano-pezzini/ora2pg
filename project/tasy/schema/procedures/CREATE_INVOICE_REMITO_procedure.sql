-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE create_invoice_remito ( cd_estabelecimento_p bigint, nr_nota_fiscal_p nota_fiscal.nr_nota_fiscal%type, cd_serie_nf_p text, nr_ordem_compra_p bigint, nm_usuario_p text, cd_operacao_nota_p bigint, cd_natureza_operacao_p bigint, vl_cotacao_p bigint, dt_emissao_p timestamp, dt_entrega_ordem_p timestamp, ie_data_prevista_menor_p text, ie_restricao_p text, ie_grava_observacao_p text, ie_retorna_frete_p text, nr_sequencia_p INOUT bigint, ie_venc_ordem_p text, ie_inspecionado_p text, cd_setor_digitacao_p bigint, ie_gerar_itens_oc_p text, dt_entrada_saida_p timestamp, ds_lista_itens_p text, ds_lista_entrega_p text, cd_cgc_emitente_p text default '') AS $body$
DECLARE


nr_seq_nota_antiga_w		bigint;
nr_sequencia_nf_w			bigint;
nr_sequencia_w			bigint;
nr_sequencia_nota_w		bigint;
dt_atualizacao_w           		timestamp 		:= clock_timestamp();
vl_mercadoria_w			double precision	:= 0;
vl_total_nota_w			double precision	:= 0;
vl_ipi_w				double precision	:= 0;
vl_descontos_w			double precision	:= 0;
vl_seguro_w			double precision	:= 0;
vl_seguro_ww			double precision	:= 0;
vl_despesa_acessoria_w		double precision	:= 0;
vl_despesa_doc_w			double precision	:= 0;
vl_despesa_acessoria_nota_w	double precision	:= 0;
vl_desconto_rateio_w		double precision	:= 0;
vl_desconto_rateio_nf_w		double precision	:= 0;
vl_unitario_item_nf_w		double precision	:= 0;
vl_total_item_nf_w			double precision	:= 0;
vl_frete_w			double precision	:= 0;
vl_desconto_w			double precision	:= 0;
vl_liquido_w			double precision	:= 0;
qt_peso_bruto_w			double precision	:= 0;
qt_peso_liquido_w			double precision	:= 0;
qt_item_nf_w			double precision	:= 0;
qt_item_estoque_w			double precision	:= 0;
cd_unidade_medida_estoque_w	varchar(30);
qt_conv_compra_estoque_w		double precision;
qt_prevista_entrega_w		double precision;
dt_prevista_entrega_w		timestamp;
nr_item_oci_w			integer;
cd_cgc_emitente_w		varchar(14);
cd_cgc_estabelecimento_w		varchar(14);
cd_cgc_nota_w			varchar(14);
cd_material_w			integer;
cd_local_direto_w			integer;
nr_ordem_compra_w		bigint;
nr_item_nf_w			integer;
cd_conta_contabil_w		varchar(20)	:= null;
cd_conta_contabil_ww		varchar(20)	:= null;
cd_conta_ordem_w			varchar(20)	:= null;
cd_lote_fabricacao_w		varchar(20);
cd_material_estoque_w		integer	:= null;
cd_natureza_operacao_ne_w		smallint;
cd_natureza_operacao_fe_w		smallint;
cd_natureza_operacao_w		smallint;
cd_natureza_operacao_cad_w	smallint;
cd_natureza_op_nf_w		smallint;
cd_operacao_estoque_w		bigint;
cd_setor_atendimento_w		bigint	:= 0;
dt_validade_w			timestamp		:= null;
dt_atualizacao_estoque_w		timestamp		:= null;
ie_tipo_conta_w			integer	:= 2;
ie_tipo_local_w			varchar(5);
cd_cgc_emitente_estab_w		varchar(14);
nr_seq_lote_fornec_w		bigint;
ie_grava_lote_consig_w		varchar(1);
ie_valor_frete_inf_adic_ww		varchar(1);
ie_valor_seguro_inf_adic_ww		varchar(1);
nr_seq_motivo_solic_w		solic_compra.nr_seq_motivo_solic%type;

ie_tipo_atendimento_w		bigint	:= 0;
ie_classif_convenio_w		varchar(5)	:= null;
nr_seq_conta_financeira_w		bigint	:= null;
ie_consignado_w			varchar(01);
cd_centro_conta_w			integer;
sg_estado_fornec_w		pessoa_juridica.sg_estado%type;
sg_estado_estab_w			pessoa_juridica.sg_estado%type;
cd_moeda_w			integer;
vl_cotacao_w			cotacao_moeda.vl_cotacao%type;
dt_liberacao_w			timestamp;
dt_aprovacao_w			timestamp;
nr_solic_compra_w			bigint;
nr_atendimento_w			bigint;
nr_atendimento_ww			bigint;

ie_pais_w				valor_dominio.vl_dominio%type;
vl_unit_estrangeiro_w			nota_fiscal_item.vl_unit_estrangeiro%type	:= 0;
vl_total_estrangeiro_w			nota_fiscal_item.vl_total_estrangeiro%type	:= 0;

/*	inspecao recebimento 	*/

qt_material_lote_w			double precision;
nr_seq_inspecao_w			bigint;
qt_registro_lote_w			integer;
ds_lote_fornecedor_w		varchar(20);
dt_validade_lote_w			timestamp;
qt_inspecao_w			double precision;
vl_inspecao_w			double precision;
ie_indeterminada_w			varchar(1);

/*	ordem_compra 	*/

cd_cgc_fornecedor_w		varchar(14);
cd_estab_transf_w			smallint;
cd_pessoa_fisica_w		varchar(10);
cd_condicao_pagamento_w		bigint;
ie_frete_w			varchar(1);
ie_forma_pagamento_w		smallint;
ie_tipo_ordem_w			varchar(1);
qt_conversao_w			double precision;
nr_seq_unidade_adic_w		bigint;
nr_seq_nota_transf_w		bigint;
cd_cgc_transportador_w		ordem_compra.cd_cgc_transportador%type;
cd_cnpj_seguradora_w		ordem_compra.cd_cnpj_seguradora%type;

/* ordem compra anexo  */

ds_arquivo_w ordem_compra_anexo.ds_arquivo%type;
ds_arquivo_banco_w ordem_compra_anexo.ds_arquivo_banco%type;

/*	ordem compra item 	*/

cd_unidade_medida_compra_w	varchar(30);
vl_unitario_material_w		double precision;
pr_descontos_w			double precision;
vl_desconto_oci_w			double precision;
cd_local_estoque_w		integer;
ds_material_direto_w		varchar(255);
ds_observacao_item_w		varchar(255);
ds_observacao_w			varchar(4000);
cd_centro_custo_w			integer;
pr_desc_financ_w			double precision;
nr_seq_criterio_rateio_w		bigint;
nr_seq_ordem_serv_w		bigint;
nr_seq_proj_gpi_w			bigint;
nr_seq_etapa_gpi_w		bigint;
nr_seq_conta_gpi_w		bigint;
nr_seq_orc_item_gpi_w		bigint;
nr_contrato_w			bigint;
qt_existe_convert_w		integer;
qt_conv_compra_est_w		double precision;
ds_lista_itens_w			varchar(4000);
ds_lista_entrega_w			varchar(4000);
nr_seq_marca_w			bigint;
dt_inicio_garantia_w		timestamp;
dt_fim_garantia_w			timestamp;
qt_dias_garantia_w			bigint;
nr_item_solic_compra_w		bigint;
nr_seq_regra_contrato_w		bigint;
nr_seq_preco_pj_w			bigint;
nr_serie_material_w		ordem_compra_item.nr_serie_material%type;
/*	tributos		*/

cd_tributo_w			integer;
pr_tributo_w			double precision;
vl_tributo_w			double precision;
nr_seq_proj_rec_w			bigint;

/* data entrega */

dt_entrega_w ordem_compra.dt_entrega%type;
ie_data_campo_w varchar(1);
/*	vencimentos		*/

dt_vencimento_w			timestamp;
vl_vencimento_w			double precision;
qt_nota_ordem_w			integer;
vl_vencto_w			double precision;
vl_liquido_ordem_w			double precision;
vl_total_item_ordem_w		double precision;
ds_observacao_venc_w		varchar(255);
ds_erro_w			varchar(500);

vl_desc_financ_w			double precision;
vl_desc_fin_venc_w		double precision;
vl_tot_venc_w			double precision;
ie_atualiza_conta_cont_oc_w		varchar(2);
cd_barra_material_w		inspecao_recebimento_lote.cd_barra_material%type;
ds_barras_w			varchar(4000);
dt_entrada_saida_w		timestamp;

/*	Rateio		*/

cd_centro_custo_rat_w		integer;
cd_conta_contabil_rat_w		varchar(20);
cd_conta_financ_rat_w		bigint;
vl_rateio_rat_w			double precision;
vl_frete_rat_w			double precision;
vl_desconto_rat_w			double precision;
vl_seguro_rat_w			double precision;
vl_despesa_acessoria_rat_w		double precision;
ie_situacao_rat_w			varchar(1);
qt_rateio_w			double precision;

/* Shift  + F11 = 'Regra para consistencia do item disp. mercado' */

qt_existe_regra_disp_mer_w		bigint;
ie_acao_disp_mercado_w		varchar(1) := 'N';
dt_entrega_ordem_w		timestamp;

/* Regras de local da NF por centro de custo */

ie_gerar_local_cc_regra_w		varchar(1)	:= 'N';
cd_local_estoque_ww		integer := null;
cd_centro_custo_ww		integer := null;
qt_registro_w			bigint;

/*Adiantamento da OC*/

ie_gerar_adiant_oc_w		varchar(1) := 'N';
ie_param_40_w	         	varchar(1) := 'N';
nr_adiant_oc_w			ordem_compra_adiant_pago.nr_adiantamento%type;
vl_vinculado_oc_w		ordem_compra_adiant_pago.vl_vinculado%type;

cd_unidade_medida_item_w	ordem_compra_item.cd_unidade_medida_compra%type;
ie_consiste_pj_w		varchar(1);
cd_natureza_operacao_ww		smallint;
ie_calcula_desc_auto_w	varchar(1);
ie_local_valido_w		varchar(2) := 'S';
ie_copia_anexos_ordem_compra_w varchar(1);
qt_real_entrega_w		ordem_compra_item_entrega.qt_real_entrega%type;
cd_paciente_ordem_compra_w	ordem_compra_item.cd_paciente_ordem_compra%type;

nr_seq_forma_pagto_w	ordem_compra.nr_seq_forma_pagto%type;
cd_sequencia_parametro_w nota_fiscal_item.cd_sequencia_parametro%type;

c01 CURSOR FOR
SELECT	cd_cgc_fornecedor,
	cd_pessoa_fisica,
	cd_condicao_pagamento,
	coalesce(ie_frete,'F'),
	cd_moeda,
	CASE WHEN ie_grava_observacao_p='S' THEN ds_observacao  ELSE '' END
	ds_observacao,
	coalesce(CASE WHEN ie_retorna_frete_p='S' THEN vl_frete  ELSE 0 END ,0) vl_frete,
	coalesce(vl_despesa_acessoria, 0),
	coalesce(vl_despesa_doc, 0),
	coalesce(ie_tipo_ordem,'N'),
	cd_estab_transf,
	vl_seguro,
	cd_cgc_transportador,
	cd_cnpj_seguradora,
	nr_seq_forma_pagto
from	ordem_compra
where	nr_ordem_compra = nr_ordem_compra_p;

c02 CURSOR FOR
SELECT	a.nr_item_oci,
	a.cd_material,
	a.cd_unidade_medida_compra,
	a.vl_unitario_material,
	coalesce(a.pr_descontos,0),
	coalesce(a.cd_local_estoque,cd_local_direto_w),
	substr(a.ds_material_direto,1,255),
	CASE WHEN ie_grava_observacao_p='S' THEN a.ds_observacao  ELSE '' END ,
	a.cd_centro_custo,
	a.cd_conta_contabil,
	a.nr_seq_proj_rec,
	coalesce(a.pr_desc_financ,0),
	a.nr_solic_compra,
	trunc(b.dt_prevista_entrega,'dd'),
	a.nr_seq_unidade_adic,
	a.nr_seq_criterio_rateio,
	coalesce(a.vl_desconto,0),
	a.nr_seq_ordem_serv,
	a.nr_seq_proj_gpi,
	a.nr_seq_etapa_gpi,
	a.nr_seq_conta_gpi,
	a.nr_contrato,
	a.dt_inicio_garantia,
	a.dt_fim_garantia,
	nr_seq_marca,
	a.nr_seq_orc_item_gpi,
	a.nr_atendimento,
	a.qt_dias_garantia,
	a.nr_item_solic_compra,
	a.nr_seq_regra_contrato,
	a.nr_seq_preco_pj,
	a.cd_paciente_ordem_compra
from 	ordem_compra_item_entrega b,
	ordem_compra_item a,
        ordem_compra c
where	a.nr_ordem_compra = b.nr_ordem_compra
and	a.nr_item_oci = b.nr_item_oci
and     c.nr_ordem_compra = a.nr_ordem_compra
and	a.nr_ordem_compra	= nr_ordem_compra_p
and	((coalesce(ds_lista_itens_w::text, '') = '') or
	((ds_lista_itens_w IS NOT NULL AND ds_lista_itens_w::text <> '') and (obter_se_contido_char(a.nr_item_oci, ds_lista_itens_w) = 'S')))
and	((coalesce(ds_lista_entrega_w::text, '') = '') or
	((ds_lista_entrega_w IS NOT NULL AND ds_lista_entrega_w::text <> '') and (obter_se_contido_char(b.nr_sequencia, ds_lista_entrega_w) = 'S')))
and	(c.dt_baixa IS NOT NULL AND c.dt_baixa::text <> '')
and	coalesce(a.dt_reprovacao::text, '') = ''
and (ie_restricao_p = 'IA' and (a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '') or ie_restricao_p <> 'IA')
and	coalesce(b.dt_cancelamento::text, '') = ''
and (coalesce(ie_gerar_itens_oc_p,'S') = 'S')
and	(((ie_inspecionado_p = 'S') and (obter_se_entrega_inspecionada(b.nr_sequencia) = 'S')) or (ie_inspecionado_p = 'N') or (ie_inspecionado_p = 'A'))
and   	((coalesce(b.dt_inicio_pendencia::text, '') = '') or
	(b.dt_inicio_pendencia IS NOT NULL AND b.dt_inicio_pendencia::text <> '' AND b.dt_fim_pendencia IS NOT NULL AND b.dt_fim_pendencia::text <> ''))
order by a.nr_item_oci asc;

c03 CURSOR FOR
SELECT	cd_tributo,
	pr_tributo,
	vl_tributo
from	ordem_compra_item_trib
where	nr_ordem_compra	= nr_ordem_compra_p
and	nr_item_oci = nr_item_oci_w
and	coalesce(ie_corpo_item,'I') = 'I';

c04 CURSOR FOR
SELECT	a.dt_vencimento,
	a.vl_vencimento,
	a.ds_observacao
from	ordem_compra_venc a
where	a.nr_ordem_compra = nr_ordem_compra_p;

c05 CURSOR FOR
SELECT	a.nr_sequencia,
	coalesce(a.qt_inspecao,0),
	coalesce(a.vl_unitario_material,0)
from	inspecao_recebimento a
where	a.nr_ordem_compra = nr_ordem_compra_p
and	a.nr_item_oci = nr_item_oci_w;

c06 CURSOR FOR
SELECT	b.dt_validade,
	b.cd_lote_fabricacao,
	b.qt_material,
	b.ie_indeterminada,
	b.cd_barra_material,
	b.ds_barras
from	inspecao_recebimento_lote b,
	inspecao_recebimento a
where	a.nr_sequencia = b.nr_seq_inspecao
and	nr_seq_inspecao = nr_seq_inspecao_w;

c07 CURSOR FOR
SELECT	cd_tributo,
	max(pr_tributo)
from	ordem_compra_item_trib
where	nr_ordem_compra	= nr_ordem_compra_p
and	coalesce(ie_corpo_item,'I') = 'C'
group by cd_tributo;

c08 CURSOR FOR
SELECT	cd_centro_custo,
	cd_conta_contabil,
	cd_conta_financ,
	vl_rateio,
	vl_frete,
	vl_desconto,
	vl_seguro,
	vl_despesa_acessoria,
	ie_situacao,
	qt_rateio
from	solic_compra_item_rateio
where	nr_solic_compra = nr_solic_compra_w
and	nr_item_solic_compra = nr_item_solic_compra_w;

c09 CURSOR FOR
SELECT	cd_centro_custo,
	cd_conta_contabil,
	cd_conta_financ,
	vl_rateio,
	vl_frete,
	vl_desconto,
	vl_seguro,
	vl_despesa_acessoria,
	ie_situacao,
	qt_rateio
from	ordem_compra_item_rateio
where	nr_ordem_compra = nr_ordem_compra_p
and	nr_item_oci = nr_item_oci_w;

C10 CURSOR FOR  -- AAMFIRMO OS 649980 em 15/01/2014 - Buscar os adiantamentos vinculados a OC.
SELECT	nr_adiantamento,
	vl_vinculado
from	ordem_compra_adiant_pago
where	nr_ordem_compra = nr_ordem_compra_p;

C11 CURSOR FOR
SELECT 	nr_item_nf,
	coalesce(vl_liquido,0) vl_liquido,
	coalesce(qt_item_nf,0) qt_item_nf
from   	nota_fiscal_item
where  	nr_sequencia = nr_sequencia_w;

Vet11	C11%RowType;

C12 CURSOR FOR
SELECT ds_arquivo,
       ds_arquivo_banco
from ordem_compra_anexo
where nr_ordem_compra = nr_ordem_compra_p;


BEGIN

dt_entrega_ordem_w	:= trunc(dt_entrega_ordem_p,'dd');
ie_gerar_adiant_oc_w := Obter_Param_Usuario(40, 441, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_adiant_oc_w);
ie_param_40_w := obter_param_usuario(40, 40, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_param_40_w);
ie_copia_anexos_ordem_compra_w := obter_param_usuario(40, 496, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_copia_anexos_ordem_compra_w);

/* Shift  + F11 = 'Regra para consistencia do item disp. mercado' */

delete from w_consist_disp_mercado
where nm_usuario = nm_usuario_p
and   cd_funcao = 40;
commit;

if (dt_entrada_saida_p IS NOT NULL AND dt_entrada_saida_p::text <> '') then
	dt_entrada_saida_w	:= to_date(to_char(dt_entrada_saida_p, 'dd/mm/yyyy') || ' ' ||  to_char(clock_timestamp(),'hh24:mi:ss') ,'dd/mm/yyyy hh24:mi:ss');
end if;

ds_lista_itens_w	:= substr(substr(ds_lista_itens_p,1,length(ds_lista_itens_p)-1),1,4000);
ds_lista_entrega_w	:= substr(substr(ds_lista_entrega_p,1,length(ds_lista_entrega_p)-1),1,4000);

select	coalesce(max(cd_nat_oper_compra_ne),1102),
	coalesce(max(cd_nat_oper_compra_fe),2102)
into STRICT	cd_natureza_operacao_ne_w,
	cd_natureza_operacao_fe_w
from	parametro_compras
where	cd_estabelecimento	= cd_estabelecimento_p;

select	substr(coalesce(obter_valor_param_usuario(40, 41, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'S'),1,2),
	coalesce(obter_valor_param_usuario(40, 395, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N'),
	coalesce(obter_valor_param_usuario(40, 415, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N'),
	coalesce(obter_valor_param_usuario(40, 438, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N'),
	coalesce(obter_valor_param_usuario(40, 439, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N'),
	coalesce(obter_valor_param_usuario(40, 346, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N'),
	coalesce(pkg_i18n.get_user_locale, 'pt_BR'),
	coalesce(obter_valor_param_usuario(917, 195, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N'),
	coalesce(obter_valor_param_usuario(40, 495, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N')
into STRICT	ie_atualiza_conta_cont_oc_w,
	ie_gerar_local_cc_regra_w,
	ie_grava_lote_consig_w,
	ie_valor_frete_inf_adic_ww,
	ie_valor_seguro_inf_adic_ww,
	ie_consiste_pj_w,
	ie_pais_w,
	ie_calcula_desc_auto_w,
	ie_data_campo_w
;

select	dt_liberacao,
	dt_aprovacao,
	nr_atendimento
into STRICT	dt_liberacao_w,
	dt_aprovacao_w,
	nr_atendimento_w
from	ordem_compra
where	nr_ordem_compra = nr_ordem_compra_p;

if (ie_restricao_p = 'L') and (coalesce(dt_liberacao_w::text, '') = '') then
	/*(-20011,'Esta ordem de compra nao foi liberada');*/

	CALL wheb_mensagem_pck.exibir_mensagem_abort(187470);

elsif (ie_restricao_p = 'A') and (coalesce(dt_aprovacao_w::text, '') = '') then
	/*(-20011,'Esta ordem de compra nao foi Aprovada');*/

	CALL wheb_mensagem_pck.exibir_mensagem_abort(187471);
end if;

select	coalesce(max(vl_cotacao_p),1)
into STRICT	vl_cotacao_w
;

select	a.cd_cgc,
	b.sg_estado
into STRICT	cd_cgc_estabelecimento_w,
	sg_estado_estab_w
from	estabelecimento a,
	pessoa_juridica b
where	a.cd_estabelecimento = cd_estabelecimento_p
and	a.cd_cgc	= b.cd_cgc;

begin
select	min(cd_local_estoque)
into STRICT	cd_local_direto_w
from	local_estoque
where	ie_tipo_local = 8
and	cd_estabelecimento = cd_estabelecimento_p;
exception
	when others then
		cd_local_direto_w := 1;
end;

begin

select	coalesce(max(b.ie_consignado),0),
	coalesce(max(b.cd_operacao_estoque),0)
into STRICT	ie_consignado_w,
	cd_operacao_estoque_w
from	operacao_estoque b,
	operacao_nota a
where	a.cd_operacao_estoque = b.cd_operacao_estoque
and	a.cd_operacao_nf = cd_operacao_nota_p;

select	nextval('nota_fiscal_seq')
into STRICT	nr_sequencia_w
;
end;

open c01;
loop
fetch	c01 into
	cd_cgc_emitente_w,
	cd_pessoa_fisica_w,
	cd_condicao_pagamento_w,
	ie_frete_w,
	cd_moeda_w,
	ds_observacao_w,
	vl_frete_w,
	vl_despesa_acessoria_nota_w,
	vl_despesa_doc_w,
	ie_tipo_ordem_w,
	cd_estab_transf_w,
	vl_seguro_ww,
	cd_cgc_transportador_w,
	cd_cnpj_seguradora_w,
	nr_seq_forma_pagto_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	/* selecionar a proxima sequencia da nota */

	if (coalesce(cd_cgc_emitente_p,'X') <> 'X') then
		cd_cgc_emitente_w := cd_cgc_emitente_p;
	end if;

	cd_natureza_operacao_w := cd_natureza_operacao_ne_w;

	cd_cgc_emitente_estab_w := cd_cgc_estabelecimento_w;
	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		cd_cgc_emitente_estab_w := '';
	end if;

	if (cd_cgc_emitente_w IS NOT NULL AND cd_cgc_emitente_w::text <> '') then
		begin

		select	sg_estado
		into STRICT	sg_estado_fornec_w
		from	pessoa_juridica
		where	cd_cgc = cd_cgc_emitente_w;

		if (sg_estado_fornec_w <> sg_estado_estab_w) then
			cd_natureza_operacao_w := cd_natureza_operacao_fe_w;
		end if;
		end;
	end if;

	if (ie_pais_w <> 'es_MX') then

		select	coalesce(max(cd_natureza_operacao), 0)
		into STRICT	cd_natureza_op_nf_w
		from	operacao_nota
		where	cd_operacao_nf = cd_operacao_nota_p;
		if (cd_natureza_op_nf_w > 0) then
			cd_natureza_operacao_w	:= cd_natureza_op_nf_w;
		end if;

		select	coalesce(max(cd_natureza_operacao),0)
		into STRICT	cd_natureza_operacao_cad_w
		from	natureza_operacao
		where	cd_natureza_operacao = cd_natureza_operacao_w;

		if (coalesce(cd_natureza_operacao_cad_w,0) = 0) and (cd_natureza_operacao_p = 0) then
			/*(-20011,	'* Nao foi selecionado nenhuma natureza operacao.' || chr(13) || chr(10) ||
				'* A operacao da nota utilizada nao possui natureza operacao  padrao.' || chr(13) || chr(10) ||
				'* Nao existe natureza padrao nos parametros de compras.');*/
			CALL wheb_mensagem_pck.exibir_mensagem_abort(187472);
		end if;
	end if;

	cd_cgc_nota_w := coalesce(cd_cgc_emitente_w, cd_cgc_emitente_estab_w);

	select (coalesce(max(nr_sequencia_nf),0)+1)
	into STRICT	nr_sequencia_nf_w
	from	nota_fiscal
	where	cd_estabelecimento = cd_estabelecimento_p
	and	((coalesce(cd_cgc_nota_w::text, '') = '') or (cd_cgc_emitente = cd_cgc_nota_w))
	and	((cd_cgc_nota_w IS NOT NULL AND cd_cgc_nota_w::text <> '') or (cd_pessoa_fisica = cd_pessoa_fisica_w))
	and	nr_nota_fiscal = to_char(nr_nota_fiscal_p)
	and	cd_serie_nf = cd_serie_nf_p;

	/* buscar o valor do desconto para lancar na nota fiscal */

	select	coalesce(obter_valor_desconto_ordem(nr_ordem_compra_p),0)
	into STRICT	vl_descontos_w
	;

	if (ie_tipo_ordem_w = 'T') and (cd_estab_transf_w IS NOT NULL AND cd_estab_transf_w::text <> '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_nota_transf_w
		from	nota_fiscal
		where	cd_estabelecimento	= cd_estab_transf_w
		and	nr_ordem_compra		= nr_ordem_compra_p;
	end if;

	begin
		vl_frete_w := vl_frete_w * vl_cotacao_p;
	exception
	when others then
		vl_frete_w := vl_frete_w;
	end;

	select	CASE WHEN cd_natureza_operacao_p=0 THEN cd_natureza_operacao_w  ELSE cd_natureza_operacao_p END
	into STRICT	cd_natureza_operacao_ww
	;

	if (coalesce(ie_consiste_pj_w,'N') = 'S') and (coalesce(cd_natureza_operacao_ww,0) > 0) and (coalesce(coalesce(cd_cgc_emitente_w,cd_cgc_emitente_estab_w),0) > 0) and (obter_se_cnpj_natureza_oper_nf(cd_estabelecimento_p,coalesce(cd_cgc_emitente_w, cd_cgc_emitente_estab_w), cd_natureza_operacao_p) = 'N') then

		CALL wheb_mensagem_pck.exibir_mensagem_abort(293694);
	end if;

	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then

		select	coalesce(max(nr_sequencia_nf),0) + 1
		into STRICT	nr_sequencia_nf_w
		from	nota_fiscal
		where	cd_estabelecimento = cd_estabelecimento_p
		and	coalesce(cd_cgc_emitente::text, '') = ''
		and	cd_serie_nf = cd_serie_nf_p
		and	nr_nota_fiscal = nr_nota_fiscal_p;

	end if;
	
	select 	dt_entrega
	into STRICT 	dt_entrega_w
	from 	ordem_compra
	where 	nr_ordem_compra = nr_ordem_compra_p;
	
	if (ie_data_campo_w = 'S')then
		if (dt_entrega_w IS NOT NULL AND dt_entrega_w::text <> '') then
			if (coalesce(ds_observacao_w::text, '') = '') then
				ds_observacao_w := wheb_mensagem_pck.get_texto(1108686) || ': ' || to_char(dt_entrega_w,'DD/MON/YYYY');
			else
				ds_observacao_w := ds_observacao_w || ' ' || wheb_mensagem_pck.get_texto(1108686) ||': '|| to_char(dt_entrega_w,'DD/MON/YYYY');
			end if;
		end if;
	end if;
	
	insert into nota_fiscal(
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_nota_fiscal,
		nr_sequencia_nf,
		cd_operacao_nf,
		dt_emissao,
		dt_entrada_saida,
		ie_acao_nf,
		ie_emissao_nf,
		ie_tipo_frete,
		vl_mercadoria,
		vl_total_nota,
		qt_peso_bruto,
		qt_peso_liquido,
		dt_atualizacao,
		nm_usuario,
		cd_condicao_pagamento,
		dt_contabil,
		cd_cgc,
		cd_pessoa_fisica,
		vl_ipi,
		vl_descontos,
		vl_frete,
		vl_seguro,
		vl_despesa_acessoria,
		vl_despesa_doc,
		ds_observacao,
		nr_nota_referencia,
		cd_serie_referencia,
		cd_natureza_operacao,
		dt_atualizacao_estoque,
		vl_desconto_rateio,
		ie_situacao,
		nr_ordem_compra,
		nr_lote_contabil,
		nr_sequencia,
		nr_sequencia_ref,
		cd_moeda,
		vl_conv_moeda,
		ie_entregue_bloqueto,
		ie_tipo_nota,
		cd_setor_digitacao,
		nr_danfe,
		nr_seq_forma_pagto)
	values (	cd_estabelecimento_p,
		coalesce(cd_cgc_emitente_w, cd_cgc_emitente_estab_w),
		cd_serie_nf_p,
		nr_nota_fiscal_p,
		nr_sequencia_nf_w,
		cd_operacao_nota_p,
		coalesce(dt_emissao_p, trunc(clock_timestamp())),
		coalesce(dt_entrada_saida_w, clock_timestamp()),
		'1',
		'0',
		ie_frete_w,
		vl_mercadoria_w,
		vl_total_nota_w,
		qt_peso_bruto_w,
		qt_peso_liquido_w,
		clock_timestamp(),
		nm_usuario_p,
		cd_condicao_pagamento_w,
		null,
		cd_cgc_emitente_w,
		cd_pessoa_fisica_w,
		vl_ipi_w,
		vl_descontos_w,
		vl_frete_w,
		vl_seguro_ww,
		coalesce(vl_despesa_acessoria_nota_w, 0),
		coalesce(vl_despesa_doc_w,0),
		ds_observacao_w,
		null,
		null,
		CASE WHEN cd_natureza_operacao_p=0 THEN cd_natureza_operacao_w  ELSE cd_natureza_operacao_p END ,
		null,
		vl_desconto_rateio_nf_w,
		'1',
		nr_ordem_compra_p,
		0,
		nr_sequencia_w,
		null,
		cd_moeda_w,
		vl_cotacao_w,
		'N',
		CASE WHEN coalesce(cd_pessoa_fisica_w::text, '') = '' THEN 'EN'  ELSE 'EF' END ,
		cd_setor_digitacao_p,
		null,
		nr_seq_forma_pagto_w);

	begin
	open c02;
	loop
	fetch c02 into
		nr_item_oci_w,
		cd_material_w,
		cd_unidade_medida_compra_w,
		vl_unitario_item_nf_w,
		pr_descontos_w,
		cd_local_estoque_w,
		ds_material_direto_w,
		ds_observacao_item_w,
		cd_centro_custo_w,
		cd_conta_ordem_w,
		nr_seq_proj_rec_w,
		pr_desc_financ_w,
		nr_solic_compra_w,
		dt_prevista_entrega_w,
		nr_seq_unidade_adic_w,
		nr_seq_criterio_rateio_w,
		vl_desconto_oci_w,
		nr_seq_ordem_serv_w,
		nr_seq_proj_gpi_w,
		nr_seq_etapa_gpi_w,
		nr_seq_conta_gpi_w,
		nr_contrato_w,
		dt_inicio_garantia_w,
		dt_fim_garantia_w,
		nr_seq_marca_w,
		nr_seq_orc_item_gpi_w,
		nr_atendimento_ww,
		qt_dias_garantia_w,
		nr_item_solic_compra_w,
		nr_seq_regra_contrato_w,
		nr_seq_preco_pj_w,
		cd_paciente_ordem_compra_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		cd_conta_contabil_w := null;
		cd_conta_contabil_ww := null;
		cd_centro_custo_ww := null;
		cd_sequencia_parametro_w := null;
		select	qt_conv_compra_estoque,
			cd_material_estoque
		into STRICT	qt_conv_compra_estoque_w,
			cd_material_estoque_w
		from 	material
		where	cd_material = cd_material_w;

		cd_unidade_medida_estoque_w	:= substr(obter_dados_material_estab(cd_material_w, cd_estabelecimento_p, 'UME'),1,30);

/*		select	min(dt_prevista_entrega)
		into	dt_prevista_entrega_w
		from	ordem_compra_item_entrega
		where	nr_ordem_compra = nr_ordem_compra_p
		and	nr_item_oci = nr_item_oci_w
		and	(nvl(qt_prevista_entrega,0) - nvl(qt_real_entrega,0)) > 0
		and	dt_prevista_entrega = nvl(dt_entrega_ordem_p, dt_prevista_entrega)
		and	dt_cancelamento is null; fabio 15/03/2004 para nao trazer entregas canceladas*/
		/* Verifica se possui evento na 'Regra para consistencia do item disp. mercado' */

		select	count(*)
		into STRICT	qt_existe_regra_disp_mer_w
		from	consiste_disp_mercado
		where	cd_evento = 'NO';

		if (qt_existe_regra_disp_mer_w > 0) then
			begin
			/* Verifica se possui evento na 'Regra para consistencia do item disp. mercado', e se o material esta disponivel no mercado */

			select  substr(obter_acao_regra_disp_mercado('NO', cd_material_w, null, cd_estabelecimento_p),1,1) ie_acao_regra
			into STRICT	ie_acao_disp_mercado_w
			;

			if (ie_acao_disp_mercado_w <> 'N') then
				begin
				CALL grava_consiste_disp_mercado( 40,
							     cd_material_w,
							     nm_usuario_p,
							     ie_acao_disp_mercado_w);
				end;
			end if;

			end;
		end if;

		if (dt_entrega_w IS NOT NULL AND dt_entrega_w::text <> '') then

			select	coalesce(max(coalesce(qt_prevista_entrega,0) - coalesce(qt_real_entrega,0)),0)
			into STRICT	qt_prevista_entrega_w
			from	ordem_compra_item_entrega
			where	nr_ordem_compra			= nr_ordem_compra_p
			and	nr_item_oci			= nr_item_oci_w
	        	and	trunc(dt_prevista_entrega,'dd')	= dt_prevista_entrega_w
			and	coalesce(dt_cancelamento::text, '') = '';

			select	count(*)
			into STRICT	qt_existe_convert_w
			from	material_marca
			where	coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
			and	cd_material	= cd_material_w
			and	coalesce(cd_cnpj, cd_cgc_emitente_w) 	= cd_cgc_emitente_w
			and	cd_unidade_medida	= cd_unidade_medida_compra_w
			and	nr_sequencia		= nr_seq_marca_w
			and	coalesce(qt_conv_compra_est, 0) > 0;

			if (qt_existe_convert_w = 0) then
				select	count(*)
				into STRICT	qt_existe_convert_w
				from	material_fornec
				where	cd_estabelecimento	= cd_estabelecimento_p
				and	cd_material		= cd_material_w
				and	cd_cgc			= cd_cgc_emitente_w
				and	cd_unid_medida		= cd_unidade_medida_compra_w
				and	coalesce(ie_nota_fiscal,'S') = 'S';
			end if;

			if (cd_unidade_medida_compra_w = cd_unidade_medida_estoque_w) and (qt_existe_convert_w = 0) then
				qt_item_estoque_w	:= qt_prevista_entrega_w;
			elsif (cd_unidade_medida_compra_w <> cd_unidade_medida_estoque_w) and (qt_existe_convert_w = 0) then
				qt_item_estoque_w	:= obter_quantidade_convertida(cd_material_w, qt_prevista_entrega_w, cd_unidade_medida_compra_w, 'UME');
			elsif (qt_existe_convert_w > 0) then
				qt_conv_compra_est_w := obter_qt_conv_compra_est(cd_material_w, cd_cgc_emitente_w, cd_unidade_medida_compra_w, cd_estabelecimento_p, nr_seq_marca_w, qt_conv_compra_est_w);
				qt_item_estoque_w := qt_prevista_entrega_w * qt_conv_compra_est_w;
			end if;

			if (coalesce(nr_seq_unidade_adic_w, 0) > 0) then
				select	qt_conversao
				into STRICT	qt_conversao_w
				from	unidade_medida_adic_compra
				where	nr_sequencia = nr_seq_unidade_adic_w;
				qt_item_estoque_w	:= qt_prevista_entrega_w * qt_conversao_w;
			end if;

			if (nr_seq_nota_transf_w IS NOT NULL AND nr_seq_nota_transf_w::text <> '') then /*Matheus OS 100334 04/08/2008*/
				select	coalesce(max(vl_unitario_item_nf),0)
				into STRICT	vl_unitario_item_nf_w
				from	nota_fiscal_item
				where	nr_sequencia	= nr_seq_nota_transf_w
				and	nr_item_oci	= nr_item_oci_w;
			end if;

			vl_unit_estrangeiro_w	:= vl_unitario_item_nf_w;
			vl_total_estrangeiro_w	:= (qt_prevista_entrega_w * vl_unitario_item_nf_w);

			vl_unitario_item_nf_w	:= (vl_unitario_item_nf_w * vl_cotacao_w);
			vl_total_item_nf_w	:= (qt_prevista_entrega_w * vl_unitario_item_nf_w);
			if (coalesce(pr_descontos_w,0) > 0) then
				vl_desconto_w		:= (vl_total_item_nf_w * pr_descontos_w) / 100;
			elsif (coalesce(vl_desconto_oci_w,0) > 0) then
				vl_desconto_w		:= 	vl_desconto_oci_w;
				pr_descontos_w	:=	(vl_desconto_w * 100) / vl_total_item_nf_w;
			else
				vl_desconto_w := 0;
				pr_descontos_w := 0;
			end if;
			

			vl_liquido_w		:=  vl_total_item_nf_w - vl_desconto_w;

			select (coalesce(max(nr_item_nf),0)+1)
 			into STRICT	nr_item_nf_w
			from	nota_fiscal_item
			where nr_sequencia = nr_sequencia_w;

			if (ie_gerar_local_cc_regra_w = 'S') then
				begin

				SELECT * FROM obter_local_estoque_cc_item_nf(
						cd_estabelecimento_p, cd_operacao_nota_p, cd_material_w, cd_local_estoque_ww, cd_centro_custo_ww) INTO STRICT cd_local_estoque_ww, cd_centro_custo_ww;

				if (coalesce(cd_local_estoque_ww,0) > 0) then
					cd_local_estoque_w	:= cd_local_estoque_ww;
				end if;

				if (coalesce(cd_centro_custo_ww,0) > 0) then
					cd_centro_custo_w	:= cd_centro_custo_ww;
				end if;

				end;
			end if;

			nr_seq_conta_financeira_w := obter_conta_financeira(	'S', cd_estabelecimento_p, cd_material_w, null, null, null, null, cd_cgc_emitente_w, cd_centro_custo_w, nr_seq_conta_financeira_w, null, cd_operacao_nota_p, null, null, null, nr_seq_proj_rec_w, null, cd_pessoa_fisica_w, null, null, null, null, cd_local_estoque_w, null, null, null, null, null, null);

			if (nr_seq_conta_financeira_w = 0) then
				nr_seq_conta_financeira_w := null;
			end if;

			select	coalesce(max(ie_tipo_local),0)
			into STRICT	ie_tipo_local_w
			from	local_estoque
			where	cd_local_estoque = cd_local_estoque_w;

			ie_tipo_conta_w	:= 3;
			if (coalesce(cd_centro_custo_w::text, '') = '') and (ie_tipo_local_w <> '8')then
				ie_tipo_conta_w	:= 2;
			end if;

			if (coalesce(nr_solic_compra_w,0) <> 0) then
				select	max(nr_seq_motivo_solic)
				into STRICT	nr_seq_motivo_solic_w
				from	solic_compra
				where	nr_solic_compra = nr_solic_compra_w;
			end if;

			if (ie_tipo_ordem_w = 'G') then
				select	nr_serie_material
				into STRICT	nr_serie_material_w
				from	ordem_compra_item
				where	nr_ordem_compra = nr_ordem_compra_p
				and		nr_item_oci = nr_item_oci_w;	
			end if;

			SELECT * FROM define_conta_material(
					cd_estabelecimento_p, cd_material_w, ie_tipo_conta_w, 0, 0, 0, 0, 0, 0, 0, cd_local_estoque_w, cd_operacao_estoque_w, trunc(dt_atualizacao_w), cd_conta_contabil_ww, cd_centro_custo_w, null, null, nr_seq_motivo_solic_w) INTO STRICT cd_conta_contabil_ww, cd_centro_custo_w;
			cd_sequencia_parametro_w := philips_contabil_pck.get_parametro_conta_contabil();


/*			if	(nvl(cd_conta_contabil_w, 'X') = 'X') or
				(nvl(cd_conta_contabil_w, 'X') <> nvl(cd_conta_contabil_ww, 'X')) and
				(ie_atualiza_conta_cont_oc_w = 'S') then
				cd_conta_contabil_w	:= cd_conta_contabil_ww;
			end if;*/
			if (qt_dias_garantia_w IS NOT NULL AND qt_dias_garantia_w::text <> '') then
				dt_inicio_garantia_w	:= coalesce(dt_emissao_p, trunc(clock_timestamp()));
				dt_fim_garantia_w 		:= (coalesce(dt_emissao_p, trunc(clock_timestamp())) + qt_dias_garantia_w);
			end if;

			if (ie_atualiza_conta_cont_oc_w = 'S') then
				cd_conta_contabil_w	:= cd_conta_contabil_ww;

				if (coalesce(cd_conta_contabil_ww, 'X') = 'X') and (ie_atualiza_conta_cont_oc_w = 'S') then
					cd_conta_contabil_w	:= cd_conta_ordem_w;
					cd_sequencia_parametro_w := null;
				end if;
			elsif (ie_atualiza_conta_cont_oc_w = 'P') then
				cd_conta_contabil_w := cd_conta_contabil_ww;
			elsif (ie_atualiza_conta_cont_oc_w = 'O') then
				cd_conta_contabil_w := cd_conta_ordem_w;
				cd_sequencia_parametro_w := null;
			elsif (ie_atualiza_conta_cont_oc_w = 'OP') then
				cd_conta_contabil_w := cd_conta_ordem_w;
				cd_sequencia_parametro_w := null;

				if (coalesce(cd_conta_ordem_w, 'X') = 'X') then
					cd_conta_contabil_w := cd_conta_contabil_ww;
				end if;
			end if;


			if (nr_solic_compra_w IS NOT NULL AND nr_solic_compra_w::text <> '') and (coalesce(nr_seq_ordem_serv_w::text, '') = '') then
				select	nr_seq_ordem_serv
				into STRICT	nr_seq_ordem_serv_w
				from	solic_compra
				where	nr_solic_compra	= nr_solic_compra_w;
			end if;

			if (coalesce(nr_seq_proj_gpi_w::text, '') = '') and (nr_solic_compra_w IS NOT NULL AND nr_solic_compra_w::text <> '')then
				select	max(nr_seq_proj_gpi)
				into STRICT	nr_seq_proj_gpi_w
				from	solic_compra
				where	nr_solic_compra = nr_solic_compra_w;
			end if;

			if (ie_grava_lote_consig_w = 'S') and (coalesce(ie_consignado_w,'0') <> '0') then
				select	substr(coalesce(obter_dados_lote_fornec(nr_seq_lote_fornec, 'D'),ds_lote),1,25),
					to_date(substr(obter_dados_lote_fornec(nr_seq_lote_fornec, 'V'),1,20),'DD/MM/YYYY'),
					nr_seq_lote_fornec
				into STRICT	cd_lote_fabricacao_w,
					dt_validade_w,
					nr_seq_lote_fornec_w
				from	ordem_compra_item
				where	nr_ordem_compra = nr_ordem_compra_p
				and	nr_item_oci = nr_item_oci_w;
			end if;
			
			IF (ie_param_40_w = 'S') Then
			    ie_local_valido_w := Obter_Local_Valido(cd_estabelecimento_p, cd_local_estoque_w, cd_material_w, 1, ie_local_valido_w);
		            IF (ie_local_valido_w = 'N') Then
            	               CALL wheb_mensagem_pck.exibir_mensagem_abort(150587);	   			   							
			    END IF;
			END IF;

			insert into nota_fiscal_item(
				cd_estabelecimento,
				cd_cgc_emitente,
				cd_serie_nf,
				nr_nota_fiscal,
				nr_sequencia_nf,
				nr_item_nf,
				cd_natureza_operacao,
				qt_item_nf,
				vl_unitario_item_nf,
				vl_total_item_nf,
				dt_atualizacao,
				nm_usuario,
				vl_frete,
				vl_desconto,
				vl_despesa_acessoria,
				cd_material,
				cd_procedimento,
				cd_setor_atendimento,
				cd_conta,
				cd_local_estoque,
				ds_observacao,
				ds_complemento,
				qt_peso_bruto,
				qt_peso_liquido,
				cd_unidade_medida_compra,
				qt_item_estoque,
				cd_unidade_medida_estoque,
				cd_lote_fabricacao,
				dt_validade,
				nr_seq_lote_fornec,
				dt_atualizacao_estoque,
				cd_conta_contabil,
				vl_desconto_rateio,
				vl_seguro,
				cd_centro_custo,
				cd_material_estoque,
				ie_origem_proced,
				nr_ordem_compra,
				nr_sequencia,
				vl_liquido,
				pr_desconto,
				nr_item_oci,
				dt_entrega_ordem,
				nr_seq_conta_financ,
				nr_seq_proj_rec,
				pr_desc_financ,
				nr_seq_ordem_serv,
				nr_atendimento,
				nr_seq_unidade_adic,
				nr_seq_proj_gpi,
				nr_seq_etapa_gpi,
				nr_seq_conta_gpi,
				nr_contrato,
				dt_inicio_garantia,
				dt_fim_garantia,
				nr_seq_marca,
				nr_seq_orc_item_gpi,
				nr_solic_compra,
				nr_item_solic_compra,
				nr_seq_regra_contrato,
				nr_seq_preco_pj,
				vl_unit_estrangeiro,
				vl_total_estrangeiro,
				nr_serie_material,
				cd_sequencia_parametro,
				nr_oc_cobranca,
				nr_item_oc_cobranca,
				cd_paciente)
			values (	cd_estabelecimento_p,
	 			coalesce(cd_cgc_emitente_w,cd_cgc_estabelecimento_w),
 				cd_serie_nf_p,
	 			nr_nota_fiscal_p,
 				nr_sequencia_nf_w,
 				nr_item_nf_w,
	 			CASE WHEN cd_natureza_operacao_p=0 THEN cd_natureza_operacao_w  ELSE cd_natureza_operacao_p END ,
 				qt_prevista_entrega_w,
	 			vl_unitario_item_nf_w,
 				vl_total_item_nf_w,
	 			dt_atualizacao_w,
 				nm_usuario_p,
	 			vl_frete_w,
 				coalesce(vl_desconto_w,0),
	 			vl_despesa_acessoria_w,
 				cd_material_w,
	 			null,
 				null,
	 			null,
 				cd_local_estoque_w,
	 			ds_observacao_item_w,
 				ds_material_direto_w,
				null,
 				null,
 				cd_unidade_medida_compra_w,
	 			qt_item_estoque_w,
 				cd_unidade_medida_estoque_w,
 				cd_lote_fabricacao_w,
	 			dt_validade_w,
				nr_seq_lote_fornec_w,
 				dt_atualizacao_estoque_w,
 				cd_conta_contabil_w,
 				vl_desconto_rateio_w,
	 			vl_seguro_w,
 				cd_centro_custo_w,
 				cd_material_estoque_w,
 				null,
	 			null,
 				nr_sequencia_w,
 				vl_liquido_w,
				pr_descontos_w,
				null,
				dt_prevista_entrega_w,
				nr_seq_conta_financeira_w,
				nr_seq_proj_rec_w,
				pr_desc_financ_w,
				nr_seq_ordem_serv_w,
				coalesce(nr_atendimento_ww, nr_atendimento_w),
				nr_seq_unidade_adic_w,
				nr_seq_proj_gpi_w,
				nr_seq_etapa_gpi_w,
				nr_seq_conta_gpi_w,
				nr_contrato_w,
				dt_inicio_garantia_w,
				dt_fim_garantia_w,
				nr_seq_marca_w,
				nr_seq_orc_item_gpi_w,
				nr_solic_compra_w,
				nr_item_solic_compra_w,
				nr_seq_regra_contrato_w,
				nr_seq_preco_pj_w,
				vl_unit_estrangeiro_w,
				vl_total_estrangeiro_w,
				nr_serie_material_w,
				cd_sequencia_parametro_w,
				nr_ordem_compra_p,
				nr_item_oci_w,
				cd_paciente_ordem_compra_w);
			commit;

			if (nr_seq_criterio_rateio_w IS NOT NULL AND nr_seq_criterio_rateio_w::text <> '') then
				CALL ratear_item_nf(nr_sequencia_w, nr_item_nf_w, nr_seq_criterio_rateio_w, nm_usuario_p, trunc(dt_atualizacao_w));
			else
				select	count(*)
				into STRICT	qt_registro_w
				from	ordem_compra_item_rateio
				where	nr_ordem_compra = nr_ordem_compra_p;

				if (qt_registro_w > 0) then

					open C09;
					loop
					fetch C09 into
						cd_centro_custo_rat_w,
						cd_conta_contabil_rat_w,
						cd_conta_financ_rat_w,
						vl_rateio_rat_w,
						vl_frete_rat_w,
						vl_desconto_rat_w,
						vl_seguro_rat_w,
						vl_despesa_acessoria_rat_w,
						ie_situacao_rat_w,
						qt_rateio_w;
					EXIT WHEN NOT FOUND; /* apply on C09 */
						begin

						if (qt_rateio_w > 0) then
							vl_rateio_rat_w := coalesce(vl_unitario_item_nf_w,0) * qt_rateio_w;
						end if;

						insert into nota_fiscal_item_rateio(
							nr_sequencia,
							nr_seq_nota,
							nr_item_nf,
							dt_atualizacao,
							nm_usuario,
							cd_centro_custo,
							cd_conta_contabil,
							cd_conta_financ,
							vl_rateio,
							vl_frete,
							vl_desconto,
							vl_seguro,
							vl_despesa_acessoria,
							ie_situacao,
							qt_rateio)
						values (nextval('nota_fiscal_item_rateio_seq'),
							nr_sequencia_w,
							nr_item_nf_w,
							clock_timestamp(),
							nm_usuario_p,
							cd_centro_custo_rat_w,
							cd_conta_contabil_rat_w,
							cd_conta_financ_rat_w,
							vl_rateio_rat_w,
							vl_frete_rat_w,
							vl_desconto_rat_w,
							vl_seguro_rat_w,
							vl_despesa_acessoria_rat_w,
							ie_situacao_rat_w,
							qt_rateio_w);

						end;
					end loop;
					close C09;

				else
					open c08;
					loop
					fetch c08 into
						cd_centro_custo_rat_w,
						cd_conta_contabil_rat_w,
						cd_conta_financ_rat_w,
						vl_rateio_rat_w,
						vl_frete_rat_w,
						vl_desconto_rat_w,
						vl_seguro_rat_w,
						vl_despesa_acessoria_rat_w,
						ie_situacao_rat_w,
						qt_rateio_w;
					EXIT WHEN NOT FOUND; /* apply on c08 */
						begin

						if (qt_rateio_w > 0) then
							vl_rateio_rat_w := coalesce(vl_unitario_item_nf_w,0) * qt_rateio_w;
						end if;

						insert into nota_fiscal_item_rateio(
							nr_sequencia,
							nr_seq_nota,
							nr_item_nf,
							dt_atualizacao,
							nm_usuario,
							cd_centro_custo,
							cd_conta_contabil,
							cd_conta_financ,
							vl_rateio,
							vl_frete,
							vl_desconto,
							vl_seguro,
							vl_despesa_acessoria,
							ie_situacao,
							qt_rateio)
						values (nextval('nota_fiscal_item_rateio_seq'),
							nr_sequencia_w,
							nr_item_nf_w,
							clock_timestamp(),
							nm_usuario_p,
							cd_centro_custo_rat_w,
							cd_conta_contabil_rat_w,
							cd_conta_financ_rat_w,
							vl_rateio_rat_w,
							vl_frete_rat_w,
							vl_desconto_rat_w,
							vl_seguro_rat_w,
							vl_despesa_acessoria_rat_w,
							ie_situacao_rat_w,
							qt_rateio_w);
						end;
					end loop;
					close c08;
				end if;
			end if;

			if (ie_inspecionado_p = 'S') then

				open c05;
				loop
				fetch c05 into
					nr_seq_inspecao_w,
					qt_inspecao_w,
					vl_inspecao_w;
				EXIT WHEN NOT FOUND; /* apply on c05 */
					begin
					select	count(*)
					into STRICT	qt_registro_lote_w
					from	inspecao_recebimento_lote
					where	nr_seq_inspecao = nr_seq_inspecao_w;

					vl_total_item_nf_w		:= (qt_inspecao_w * vl_inspecao_w);
					vl_desconto_w		:= (vl_total_item_nf_w * pr_descontos_w) / 100 + coalesce(vl_desconto_oci_w,0);
					vl_liquido_w		:=  vl_total_item_nf_w - vl_desconto_w;
					qt_item_estoque_w		:= (qt_inspecao_w * obter_conversao_material(cd_material_w,'CE'));

					update	nota_fiscal_item
					set	qt_item_nf		= qt_inspecao_w,
						vl_unitario_item_nf		= vl_inspecao_w,
						qt_item_estoque		= qt_item_estoque_w,
						vl_total_item_nf		= vl_total_item_nf_w,
						vl_desconto		= coalesce(vl_desconto_w,0),
						vl_liquido			= vl_liquido_w
					where	nr_sequencia 		= nr_sequencia_w
					and	nr_item_nf 		= nr_item_nf_w;

					if (coalesce(nr_ordem_compra_p,0) > 0) and (coalesce(nr_item_oci_w,0) > 0) then
						cd_unidade_medida_item_w := obter_dados_item_ordem(nr_ordem_compra_p, nr_item_oci_w,'UMC');
					end if;

					open c06;
					loop
					fetch c06 into
						dt_validade_lote_w,
						ds_lote_fornecedor_w,
						qt_material_lote_w,
						ie_indeterminada_w,
						cd_barra_material_w,
						ds_barras_w;
					EXIT WHEN NOT FOUND; /* apply on c06 */
						begin
						if (cd_unidade_medida_item_w IS NOT NULL AND cd_unidade_medida_item_w::text <> '') then
							qt_material_lote_w := obter_quantidade_convertida(cd_material_w,qt_material_lote_w,cd_unidade_medida_item_w,'UME');
						end if;

						if (qt_registro_lote_w > 1) then
							insert into nota_fiscal_item_lote(
								nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_nota,
								nr_item_nf,
								dt_validade,
								qt_material,
								cd_lote_fabricacao,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_marca,
								nr_seq_lote_fornec,
								ie_indeterminado,
								cd_barra_material,
								ds_barras)
							values (nextval('nota_fiscal_item_lote_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_sequencia_w,
								nr_item_nf_w,
								dt_validade_lote_w,
								qt_material_lote_w,
								ds_lote_fornecedor_w,
								clock_timestamp(),
								nm_usuario_p,
								null,
								null,
								ie_indeterminada_w,
								cd_barra_material_w,
								ds_barras_w);
						else
							update	nota_fiscal_item
							set	dt_validade		= dt_validade_lote_w,
								cd_lote_fabricacao		= ds_lote_fornecedor_w,
								ie_indeterminado		= ie_indeterminada_w,
								cd_barra_material		= cd_barra_material_w,
								ds_barras			= ds_barras
							where	nr_sequencia 		= nr_sequencia_w
							and	nr_item_nf 		= nr_item_nf_w;
						end if;
						end;
					end loop;
					close c06;
					end;

				end loop;
				close c05;
			end if;

			open c03;
			loop
			fetch c03 into
				cd_tributo_w,
				pr_tributo_w,
				vl_tributo_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				begin
				
				vl_tributo_w := (vl_tributo_w * vl_cotacao_w);
				
				insert into nota_fiscal_item_trib(
					cd_estabelecimento	,
					cd_cgc_emitente,
					cd_serie_nf,
					nr_nota_fiscal,
					nr_sequencia_nf,
					nr_item_nf,
					cd_tributo	,
					vl_tributo,
					dt_atualizacao,
					nm_usuario,
					vl_base_calculo,
					tx_tributo,
					vl_reducao_base,
					nr_sequencia,
					ie_rateio,
					vl_trib_nao_retido,
					vl_base_nao_retido,
					vl_trib_adic,
					vl_base_adic)
				values (	cd_estabelecimento_p,
			 		coalesce(cd_cgc_emitente_w,
					cd_cgc_estabelecimento_w),
 					cd_serie_nf_p,
 					nr_nota_fiscal_p,
	 				nr_sequencia_nf_w,
 					nr_item_nf_w,
 					cd_tributo_w,
	 				vl_tributo_w,
 					dt_atualizacao_w,
 					nm_usuario_p,
 					vl_liquido_w,
 					pr_tributo_w,
	 				0,
 					nr_sequencia_w,
					'N',
					0,
					0,
					0,
					0);
				end;
			end loop;
			close c03;
			
			select	coalesce(max(qt_real_entrega),0)
			into STRICT	qt_real_entrega_w
			from	ordem_compra_item_entrega
			where	nr_ordem_compra			= nr_ordem_compra_p
			and	nr_item_oci			= nr_item_oci_w
			and	trunc(dt_prevista_entrega,'dd')	= dt_prevista_entrega_w
			and	coalesce(dt_cancelamento::text, '') = '';
	
			if (coalesce(nr_seq_criterio_rateio_w::text, '') = '') and (qt_real_entrega_w > 0) then
				
				select	count(*)
				into STRICT	qt_registro_w
				from	nota_fiscal_item_rateio
				where	nr_seq_nota = nr_sequencia_w
				and     nr_item_nf = nr_item_nf_w;
				
				if (qt_registro_w > 0) then
					
					select 	coalesce(vl_liquido,0),
						coalesce(qt_item_nf,0)
					into STRICT    vl_liquido_w,
						qt_item_nf_w
					from   	nota_fiscal_item
					where  	nr_sequencia = nr_sequencia_w
					and     nr_item_nf = nr_item_nf_w;
					
					CALL fis_recalcular_rateio_item_nf(nr_sequencia_w, nr_item_nf_w, nm_usuario_p, vl_liquido_w, qt_item_nf_w);
					
				end if;
			
			end if;
		end if;
	end loop;
	close c02;
	end;

	/* para gerar os vencimentos na nota */

	select	ie_forma_pagamento
	into STRICT	ie_forma_pagamento_w
	from	condicao_pagamento
	where	cd_condicao_pagamento = cd_condicao_pagamento_w;

	/* francisco - os 87540 - 28/03/2008 - calcular desconto financeiro */

	select	coalesce(sum(vl_desc_financ),0)
	into STRICT	vl_desc_financ_w
	from	nota_fiscal_item
	where	nr_sequencia	= nr_sequencia_w;

	select	coalesce(sum(a.vl_vencimento),0)
	into STRICT	vl_tot_venc_w
	from	ordem_compra_venc a
	where	a.nr_ordem_compra = nr_ordem_compra_p;
	/* francisco - os 87540 - 28/03/2008 - fim alteracao */

	select	coalesce(sum(obter_valor_liquido_ordem(nr_ordem_compra)),0)
	into STRICT	vl_liquido_ordem_w
	from	ordem_compra
	where	nr_ordem_compra = nr_ordem_compra_p;

	select	coalesce(sum(vl_liquido),0)
	into STRICT	vl_liquido_w
	from	nota_fiscal_item
	where	nr_sequencia = nr_sequencia_w;

	open C07;
	loop
	fetch C07 into
		cd_tributo_w,
		pr_tributo_w;
	EXIT WHEN NOT FOUND; /* apply on C07 */
		begin

		/*
		Nao pode ser sobre o valor liquido da ordem pois se o tributo ja existe nela,
		a base de calculo sera sobre o valor com o desconto do tributo ja
		*/
		vl_tributo_w	:= 0;
		vl_tributo_w	:= dividir((vl_liquido_w * pr_tributo_w) , 100);

		insert into nota_fiscal_trib(
			nr_sequencia,
			cd_tributo,
			vl_tributo,
			dt_atualizacao,
			nm_usuario,
			vl_base_calculo,
			tx_tributo,
			vl_reducao_base,
			vl_trib_nao_retido,
			vl_base_nao_retido,
			vl_trib_adic,
			vl_base_adic,
			vl_reducao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			ie_pago_prev,
			nr_seq_interno)
		values (	nr_sequencia_w,
			cd_tributo_w,
			vl_tributo_w,
			clock_timestamp(),
			nm_usuario_p,
			vl_liquido_w,
			pr_tributo_w,
			0,
			0,
			0,
			0,
			0,
			0,
			nm_usuario_p,
			clock_timestamp(),
			'V',
			 nextval('nota_fiscal_trib_seq'));
		end;
	end loop;
	close C07;

	if (ie_forma_pagamento_w <> 1) and (ie_venc_ordem_p = 'S') then
		open c04;
		loop

		fetch	c04 into
			dt_vencimento_w,
			vl_vencimento_w,
			ds_observacao_venc_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
		begin

		select	coalesce(sum(vl_item_liquido),0)
		into STRICT	vl_total_item_ordem_w
		from 	ordem_compra_item
		where	nr_ordem_compra	= nr_ordem_compra_p
		and	coalesce(qt_material,0) > coalesce(qt_material_entregue,0);

		vl_vencto_w	:= dividir((vl_vencimento_w * vl_total_item_ordem_w), vl_liquido_ordem_w) * vl_cotacao_w;

		/* francisco - os 87540 - 28/03/2008 - calcular desconto financeiro */

		vl_desc_fin_venc_w	:=  dividir_sem_round(vl_vencto_w,vl_tot_venc_w) * vl_desc_financ_w;
		/* francisco - os 87540 - 28/03/2008 - fim alteracao */

		begin
		insert into nota_fiscal_venc(
			nr_sequencia,
			cd_estabelecimento,
			cd_cgc_emitente,
			cd_serie_nf,
			nr_nota_fiscal,
			nr_sequencia_nf,
			dt_vencimento,
			vl_vencimento,
			dt_atualizacao,
			nm_usuario,
			vl_desc_financ,
			ds_observacao,
			ie_origem)
		values ( nr_sequencia_w,
			cd_estabelecimento_p,
			coalesce(cd_cgc_emitente_w, cd_cgc_estabelecimento_w),
			cd_serie_nf_p,
			nr_nota_fiscal_p,
			nr_sequencia_nf_w,
			dt_vencimento_w,
			vl_vencto_w,
			clock_timestamp(),
			nm_usuario_p,
			vl_desc_fin_venc_w,
			ds_observacao_venc_w,
			'N');
		exception when others then
			ds_erro_w	:= sqlerrm(SQLSTATE);
			/*(-20011,'Erro ao gerar o vencimento da Nota.' || chr(13) || 'Ordem: ' || nr_ordem_compra_p || ' Dt vencto: ' || dt_vencimento_w || ' Valor: ' || vl_vencimento_w || chr(13) || ds_erro_w);*/

			CALL wheb_mensagem_pck.exibir_mensagem_abort(187473,	'NR_ORDEM_COMPRA_W='||nr_ordem_compra_p||';'||
									'DT_VENCIMENTO_W='||dt_vencimento_w||';'||
									'VL_VENCIMENTO_W='||vl_vencimento_w||';'||
									'DS_ERRO_W='||ds_erro_w);
		end;
		end;
	end loop;
	close c04;
	end if;

	if (ie_valor_frete_inf_adic_ww = 'S') and (coalesce(vl_frete_w,0) > 0) then

		--vl_frete_w := (vl_frete_w * vl_cotacao_w);
		insert into nota_fiscal_desp_adic(
			nr_sequencia,
			nr_seq_nf,
			nr_documento,
			dt_emissao,
			vl_documento,
			dt_vencimento,
			cd_cgc,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ie_rateia_valor_itens,
			ie_origem)
		values(	nextval('nota_fiscal_desp_adic_seq'),
			nr_sequencia_w,
			nr_ordem_compra_p,
			clock_timestamp(),
			vl_frete_w,
			(SELECT coalesce(min(x.dt_vencimento),clock_timestamp()) from nota_fiscal_venc x where x.nr_sequencia = nr_sequencia_w),
			cd_cgc_transportador_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			'N',
			'F');
	end if;

	if (ie_valor_seguro_inf_adic_ww = 'S') and (coalesce(vl_seguro_ww,0) > 0) then

		vl_seguro_ww := (vl_seguro_ww * vl_cotacao_w);

		insert into nota_fiscal_desp_adic(
			nr_sequencia,
			nr_seq_nf,
			nr_documento,
			dt_emissao,
			vl_documento,
			dt_vencimento,
			cd_cgc,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ie_rateia_valor_itens,
			ie_origem)
		values(	nextval('nota_fiscal_desp_adic_seq'),
			nr_sequencia_w,
			nr_ordem_compra_p,
			clock_timestamp(),
			vl_seguro_ww,
			(SELECT coalesce(min(x.dt_vencimento),clock_timestamp()) from nota_fiscal_venc x where x.nr_sequencia = nr_sequencia_w),
			cd_cnpj_seguradora_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			'N',
			'S');
	end if;

end;
end loop;
close c01;

if ( coalesce(ie_gerar_adiant_oc_w,'N') = 'S' ) then

	open C10;
	loop
	fetch C10 into
		nr_adiant_oc_w,
		vl_vinculado_oc_w;
	EXIT WHEN NOT FOUND; /* apply on C10 */
		begin

		if (nr_adiant_oc_w IS NOT NULL AND nr_adiant_oc_w::text <> '') and (vl_vinculado_oc_w IS NOT NULL AND vl_vinculado_oc_w::text <> '') then

			insert into nota_fiscal_adiant_pago(
							     nr_sequencia,
							     dt_atualizacao,
							     dt_atualizacao_nrec,
							     nm_usuario,
							     nm_usuario_nrec,
							     nr_adiantamento,
							     nr_seq_trans_financ,
							     nr_sequencia_nf,
							     vl_vinculado)
						     values (
							     nextval('nota_fiscal_adiant_pago_seq'),
							     clock_timestamp(),
							     clock_timestamp(),
							     nm_usuario_p,
							     nm_usuario_p,
							     nr_adiant_oc_w,
							     null,
							     nr_sequencia_w,
							     vl_vinculado_oc_w);
		end if;

		end;
	end loop;
	close C10;

end if;

if (coalesce(ie_copia_anexos_ordem_compra_w, 'N') = 'S') then
	open C12;
	loop
	fetch C12 into
	     ds_arquivo_w,
	     ds_arquivo_banco_w;
	EXIT WHEN NOT FOUND; /* apply on C12 */
	    begin
		insert into nota_fiscal_anexo(
		    nr_sequencia,
		    dt_atualizacao,
		    nm_usuario,
		    dt_atualizacao_nrec,
		    nm_usuario_nrec,
		    ds_arquivo,
		    ds_arquivo_banco,
		    nr_seq_nota)
		values (
		    nextval('nota_fiscal_anexo_seq'),
		    dt_atualizacao_w,
		    nm_usuario_p,
		    dt_atualizacao_w,
		    nm_usuario_p,
		    ds_arquivo_w,
		    ds_arquivo_banco_w,
		    nr_sequencia_w);
	    end;
	end loop;
	close C12;
end if;

CALL gerar_historico_nota_fiscal(nr_sequencia_w, nm_usuario_p, '7', WHEB_MENSAGEM_PCK.get_texto(301607,'NR_ORDEM_COMPRA_P='||nr_ordem_compra_p));

nr_sequencia_p 		 := nr_sequencia_w;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE create_invoice_remito ( cd_estabelecimento_p bigint, nr_nota_fiscal_p nota_fiscal.nr_nota_fiscal%type, cd_serie_nf_p text, nr_ordem_compra_p bigint, nm_usuario_p text, cd_operacao_nota_p bigint, cd_natureza_operacao_p bigint, vl_cotacao_p bigint, dt_emissao_p timestamp, dt_entrega_ordem_p timestamp, ie_data_prevista_menor_p text, ie_restricao_p text, ie_grava_observacao_p text, ie_retorna_frete_p text, nr_sequencia_p INOUT bigint, ie_venc_ordem_p text, ie_inspecionado_p text, cd_setor_digitacao_p bigint, ie_gerar_itens_oc_p text, dt_entrada_saida_p timestamp, ds_lista_itens_p text, ds_lista_entrega_p text, cd_cgc_emitente_p text default '') FROM PUBLIC;

