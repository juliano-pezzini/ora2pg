-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE montar_mapa_prp_npi ( nm_usuario_p text, nr_seq_projeto_p bigint) AS $body$
DECLARE


nr_seq_fase_processo_w	bigint;
nr_seq_processo_w	bigint;
nr_seq_processo_fase_w	bigint;
nr_seq_fase_w		bigint;
nr_seq_etapa_w		bigint;
nr_seq_area_w		bigint;
nr_seq_area_partic	bigint;
nr_seq_grupo_w		bigint;
nr_seq_funcao_pf_w	bigint;
nr_seq_processo_etapa_w	bigint;
nr_seq_proc_etapa_partic_w	bigint;
nr_seq_apresentacao_w	smallint;
nr_ordem_grupo_w	bigint;
nr_seq_area_processo_w	bigint;
nr_seq_proj_equipe_w	bigint;
nr_seq_equipe_funcao_w	bigint;
nr_seq_tipo_projeto_w	bigint;
nr_seq_funcao_w		bigint;
nr_seq_area_partic_w	bigint;
nr_seq_etapa_princ_w	bigint;
nr_seq_mielstone_prox_w	bigint;
nr_seq_mielstone_ant_w	bigint;
cd_pessoa_fisica_w	varchar(10);
ds_setor_atendimento_w	varchar(80);
ds_fone_w		varchar(40);
ds_email_w		varchar(255);
qt_existe_equipe_w	smallint;
ie_possui_profissionais_w	varchar(1);


C01 CURSOR FOR

	SELECT	a.nr_sequencia,
		b.nr_sequencia nr_seq_mielstone_prox_w
	from	prp_fase_processo a,
		prp_milestone_processo b
	where	b.nr_seq_fase_ant = a.nr_sequencia
	and	a.ie_situacao = 'A'
	order 	by a.nr_seq_apresentacao;

C02 CURSOR FOR
	SELECT	b.nr_seq_etapa_processo,
		b.nr_seq_area_processo,
		(SELECT	x.nr_seq_grupo
		from	prp_area_processo_partic x
		where	x.nr_sequencia = b.nr_seq_area_proc_partic) nr_seq_grupo,
		(select	x.nr_seq_funcao_pf
		from	prp_area_processo_partic x
		where	x.nr_sequencia = b.nr_seq_area_proc_partic) nr_seq_funcao,
		b.nr_seq_area_proc_partic,
		b.nr_seq_apresentacao,
		(select	x.nr_seq_apresentacao
		from	prp_area_processo_partic x
		where	x.nr_sequencia = b.nr_seq_area_proc_partic) nr_ordem_grupo,
		p.nr_seq_tipo_projeto
	from	prp_fase_processo_etapa b,
		prp_etapa_necessaria c,
		proj_projeto p
	where	b.nr_seq_fase_processo = nr_seq_fase_w
	and	c.nr_seq_etapa_processo = b.nr_seq_etapa_processo
	and	c.nr_seq_projeto = p.nr_sequencia
	and	p.nr_sequencia = nr_seq_projeto_p
	order by b.nr_seq_apresentacao;

C03 CURSOR FOR
	SELECT	distinct b.nr_seq_area_processo,
		a.nr_seq_equipe_funcao,
		p.nr_seq_tipo_projeto
	from	prp_fase_processo_etapa b,
		prp_etapa_necessaria c,
		prp_area_processo a,
		proj_projeto p
	where	c.nr_seq_etapa_processo = b.nr_seq_etapa_processo
	and	a.nr_sequencia = b.nr_seq_area_processo
	and	(a.nr_seq_equipe_funcao IS NOT NULL AND a.nr_seq_equipe_funcao::text <> '')
	and	c.nr_seq_projeto = p.nr_sequencia
	and	p.nr_sequencia = nr_seq_projeto_p;

C04 CURSOR FOR
	SELECT	a.cd_pessoa_fisica,
		a.nr_seq_funcao
	from	prp_regra_equipe_partic a,
		prp_regra_equipe_padrao b
	where	a.nr_seq_equipe_padrao = b.nr_sequencia
	and	b.nr_seq_area_processo = nr_seq_area_processo_w
	and	coalesce(b.nr_seq_tipo_projeto,nr_seq_tipo_projeto_w) = nr_seq_tipo_projeto_w
	and	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '');

C05 CURSOR FOR
	SELECT	a.cd_pessoa_fisica,
		a.nr_seq_funcao
	from	prp_regra_equipe_partic a,
		prp_regra_equipe_padrao b
	where	a.nr_seq_equipe_padrao = b.nr_sequencia
	and	b.nr_seq_area_processo = nr_seq_area_w
	and	coalesce(b.nr_seq_area_proc_partic,0) = coalesce(nr_seq_area_partic_w,0)
	and	coalesce(b.nr_seq_tipo_projeto,nr_seq_tipo_projeto_w) = nr_seq_tipo_projeto_w;

C06 CURSOR FOR
	SELECT	a.nr_sequencia
	from	prp_etapa_processo a
	where	a.ie_situacao = 'A'
	and	not exists (	SELECT	1
				from	prp_necessidade_etapa x
				where	x.nr_seq_etapa_processo = a.nr_sequencia)
	and	exists (select	1
				from	prp_necessidade_etapa x,
						proj_projeto y
				where	x.nr_seq_tipo_projeto = y.nr_seq_tipo_projeto
				and		x.nr_seq_etapa_processo = a.nr_sequencia
				and		y.nr_sequencia = nr_seq_projeto_p);


BEGIN

select	nr_seq_fase_ant
into STRICT	nr_seq_mielstone_ant_w
from	prp_milestone_processo
where	coalesce(nr_seq_fase_ant::text, '') = '';

delete from PRP_PROCESSO_ETAPA_PARTIC where nr_sequencia in (	SELECT	d.nr_sequencia
							from	prp_processo a,
								prp_processo_fase b,
								prp_processo_etapa c,
								prp_processo_etapa_partic d
							where	a.nr_sequencia = b.nr_seq_processo
							and	b.nr_sequencia = c.nr_seq_processo_fase
							and	c.nr_sequencia = d.nr_seq_processo_etapa
							and	a.nr_seq_projeto = nr_seq_projeto_p);

delete from PRP_PROCESSO_ETAPA where nr_sequencia in (	SELECT	c.nr_sequencia
							from	prp_processo a,
								prp_processo_fase b,
								prp_processo_etapa c
							where	a.nr_sequencia = b.nr_seq_processo
							and	b.nr_sequencia = c.nr_seq_processo_fase
							and	a.nr_seq_projeto = nr_seq_projeto_p);
commit;

delete from PRP_PROCESSO_FASE where nr_sequencia in (	SELECT	b.nr_sequencia
							from	prp_processo a,
								prp_processo_fase b
							where	a.nr_sequencia = b.nr_seq_processo
							and	a.nr_seq_projeto = nr_seq_projeto_p);
commit;

delete from PRP_PROCESSO where nr_seq_projeto = nr_seq_projeto_p;
commit;

open C06;
loop
fetch C06 into
	nr_seq_etapa_princ_w;
EXIT WHEN NOT FOUND; /* apply on C06 */
	begin

	insert into prp_etapa_necessaria(	nr_sequencia,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						nr_seq_projeto,
						nr_seq_etapa_processo)
					values (	nextval('prp_etapa_necessaria_seq'),
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_p,
						nm_usuario_p,
						nr_seq_projeto_p,
						nr_seq_etapa_princ_w);

	end;
end loop;
close C06;

commit;

select	min(nr_seq_apresentacao)
into STRICT	nr_seq_fase_processo_w
from	prp_fase_processo
where	ie_situacao = 'A';

select	nextval('prp_processo_seq')
into STRICT	nr_seq_processo_w
;

insert into PRP_PROCESSO(	dt_atualizacao,
				nm_usuario,
				nr_sequencia,
				dt_atualizacao_nrec,
				dt_fim_previsto_atual,
				dt_fim_previsto_orig,
				dt_fim_real,
				dt_inicio_processo,
				nm_usuario_nrec,
				nr_seq_fase_processo,
				nr_seq_projeto)
			values (	clock_timestamp(),
				nm_usuario_p,
				nr_seq_processo_w,
				clock_timestamp(),
				null,
				null,
				null,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_fase_processo_w,
				nr_seq_projeto_p);

open C01;
loop
fetch C01 into
	nr_seq_fase_w,
	nr_seq_mielstone_prox_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	nextval('prp_processo_fase_seq')
	into STRICT	nr_seq_processo_fase_w
	;

	insert into PRP_PROCESSO_FASE(	nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_processo,
					dt_fim_real,
					nr_seq_fase_processo,
					dt_inicio_prev_orig,
					dt_inicio_prev_atual,
					dt_fim_prev_orig,
					dt_fim_prev_atual,
					dt_inicio_real,
					nr_seq_milestone_inicio,
					nr_seq_milestone_fim)
				values (	nr_seq_processo_fase_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_processo_w,
					null,
					nr_seq_fase_w,
					null,
					null,
					null,
					null,
					null,
					nr_seq_mielstone_ant_w,
					nr_seq_mielstone_prox_w);

	nr_seq_mielstone_ant_w:= nr_seq_mielstone_prox_w;

	open C02;
	loop
	fetch C02 into
		nr_seq_etapa_w,
		nr_seq_area_w,
		nr_seq_grupo_w,
		nr_seq_funcao_pf_w,
		nr_seq_area_partic_w,
		nr_seq_apresentacao_w,
		nr_ordem_grupo_w,
		nr_seq_tipo_projeto_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		select	nextval('prp_processo_etapa_seq')
		into STRICT	nr_seq_processo_etapa_w
		;

		insert into PRP_PROCESSO_ETAPA(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_processo_fase,
						nr_seq_etapa_processo,
						nr_seq_area_processo,
						nr_seq_grupo_cargo,
						nr_seq_apresentacao,
						nr_ordem_grupo,
						nr_seq_funcao_pf)
					values (nr_seq_processo_etapa_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_processo_fase_w,
						nr_seq_etapa_w,
						nr_seq_area_w,
						nr_seq_grupo_w,
						nr_seq_apresentacao_w,
						nr_ordem_grupo_w,
						nr_seq_funcao_pf_w);

		open C05;
		loop
		fetch C05 into
			cd_pessoa_fisica_w,
			nr_seq_funcao_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin

			select	nextval('prp_processo_etapa_partic_seq')
			into STRICT	nr_seq_proc_etapa_partic_w
			;

			insert into PRP_PROCESSO_ETAPA_PARTIc(	nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_processo_etapa,
								cd_pessoa_fisica,
								nr_seq_funcao)
							values (	nr_seq_proc_etapa_partic_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_processo_etapa_w,
								cd_pessoa_fisica_w,
								nr_seq_funcao_w);
			end;
		end loop;
		close C05;

		end;
	end loop;
	close C02;
	end;

end loop;
close C01;

commit;

open C03;
loop
fetch C03 into
	nr_seq_area_processo_w,
	nr_seq_equipe_funcao_w,
	nr_seq_tipo_projeto_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin

	--evita a inserção da mesma equipe no mesmo projeto
	select	count(1)
	into STRICT	qt_existe_equipe_w
	from	PROJ_EQUIPE
	where	nr_Seq_proj = nr_seq_projeto_p
	and	nr_seq_equipe_funcao = nr_seq_equipe_funcao_w  LIMIT 1;

	if (qt_existe_equipe_w < 1) then

		select	nextval('proj_equipe_seq')
		into STRICT	nr_seq_proj_equipe_W
		;

		insert into PROJ_EQUIPE(	nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_equipe_funcao,
					ds_objetivo,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_proj,
					ie_interna_externa)
				values (	nr_seq_proj_equipe_w,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_equipe_funcao_w,
					'',
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_projeto_p,
					'M');

		--verifica se existe profissionais com o tipo de projeto, se não, seleciona o que não tiver tipo de projeto informado

		/*select	decode(count(1),0,'N','S')
		into	ie_possui_profissionais_w
		from	prp_regra_equipe_partic a,
			prp_regra_equipe_padrao b
		where	a.nr_seq_equipe_padrao = b.nr_sequencia
		and	b.nr_seq_area_processo = nr_seq_area_processo_w
		and	b.nr_seq_tipo_projeto = nr_seq_tipo_projeto_w
		and	a.cd_pessoa_fisica is not null;			*/
		open C04;
		loop
		fetch C04 into
			cd_pessoa_fisica_w,
			nr_seq_funcao_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin

			select	substr(obter_desc_expressao(max(b.cd_exp_setor_atend),coalesce(max(b.ds_setor_atendimento),'')),1,100) ds_setor_atendimento
			into STRICT	ds_setor_atendimento_w
			from 	setor_atendimento b,
				usuario a
			where 	a.cd_setor_atendimento = b.cd_setor_atendimento
			and  	a.cd_pessoa_fisica = cd_pessoa_fisica_w;

		select	CASE WHEN coalesce(obter_compl_pf(a.cd_pessoa_fisica,2,'DDT')::text, '') = '' THEN null  ELSE '(' ||obter_compl_pf(a.cd_pessoa_fisica,2,'DDT') || ')' END  || obter_compl_pf(a.cd_pessoa_fisica,2,'T')
			|| ' / ' ||
			CASE WHEN coalesce(a.nr_ddd_celular::text, '') = '' THEN null  ELSE '(' || a.nr_ddd_celular || ')' END  ||
			a.nr_telefone_celular
			into STRICT	ds_fone_w
			from  pessoa_fisica a
			where a.cd_pessoa_fisica = cd_pessoa_fisica_w;

			select	substr(obter_compl_pf(cd_pessoa_fisica_w,2,'M'),1,255)
			into STRICT	ds_email_w
			;

			insert into PROJ_EQUIPE_PAPEL(	nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_apres,
							nr_seq_equipe,
							ie_situacao,
							cd_pessoa_fisica,
							nr_seq_funcao,
							ds_setor,
							ds_fone,
							ds_email)
						values (	nextval('proj_equipe_papel_seq'),
							clock_timestamp(),
							nm_usuario_p,
							1,
							nr_seq_proj_equipe_w,
							'A',
							cd_pessoa_fisica_w,
							nr_seq_funcao_w,
							ds_setor_atendimento_w,
							ds_fone_w,
							ds_email_w);



			end;
		end loop;
		close C04;
	end if;
	end;
end loop;
close C03;


commit;

end;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE montar_mapa_prp_npi ( nm_usuario_p text, nr_seq_projeto_p bigint) FROM PUBLIC;

