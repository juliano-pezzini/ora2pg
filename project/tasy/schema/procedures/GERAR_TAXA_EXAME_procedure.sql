-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_taxa_exame (CD_ESTABELECIMENTO_P bigint, NR_ATENDIMENTO_P bigint, DT_ENTRADA_UNIDADE_P timestamp, CD_PROCEDIMENTO_P bigint, DT_PROCEDIMENTO_P timestamp, QT_PROCEDIMENTO_P bigint, CD_SETOR_ATENDIMENTO_P bigint, NR_DOC_CONVENIO_P text, CD_CONVENIO_P bigint, CD_CATEGORIA_P text) AS $body$
DECLARE

dt_atualizacao_w        timestamp          := clock_timestamp();
cd_taxa_exame_w         bigint     := 0;
ie_flag_ok              varchar(1)   := 'S';
nr_sequencia_w       	bigint     := 0;
tx_procedimento_w	double precision	:= 0;
ie_criterio_taxa_w	smallint		:= 0;
ie_classificacao_w	varchar(1);
nr_sequencia_org_w      bigint     	:= 0;
vl_procedimento_w      	double precision   	:= 0;
vl_medico_w      	double precision   		:= 0;
vl_anestesista_w      	double precision   	:= 0;
vl_materiais_w      	double precision   	:= 0;
vl_auxiliares_w      	double precision   	:= 0;
vl_custo_operacional_w  double precision   	:= 0;
ie_evento_calculo_w	smallint		:= 0;
ie_origem_proced_w	bigint;
nr_seq_atepacu_w	bigint		:= 0;
nr_sequencia_Orig_w	bigint		:= 0;


BEGIN
select coalesce(max(nr_seq_interno),0)
into STRICT	nr_seq_atepacu_w
from 	atend_paciente_unidade
where nr_atendimento 		= nr_atendimento_p
  and dt_entrada_unidade	= dt_entrada_unidade_p;


select 	coalesce(max(nr_sequencia),0)
into STRICT	nr_sequencia_Orig_w
from 	Procedimento_Paciente
where 	nr_atendimento		= nr_atendimento_p
  and 	dt_procedimento		= dt_Procedimento_p
  and	cd_procedimento		= cd_procedimento_p;
/* Verificar se deve gerar taxa para o procedimento */

begin
	select 	a.cd_taxa_exame,
			a.tx_procedimento,
			a.ie_criterio_taxa,
			b.ie_classificacao,
			coalesce(a.ie_origem_taxa,a.ie_origem_proced)
  	into STRICT 		cd_taxa_exame_w,
			tx_procedimento_w,
			ie_criterio_taxa_w,
			ie_classificacao_w,
			ie_origem_proced_w
  	from 		convenio_taxa_exame a,
			procedimento b
	where		a.cd_taxa_exame		= b.cd_procedimento
	and		a.ie_origem_proced	= b.ie_origem_proced
 	and 		a.cd_estabelecimento 	= cd_estabelecimento_p
   	and 		a.cd_convenio        	= cd_convenio_p
   	and 		a.cd_categoria       	= cd_categoria_p
   	and 		a.cd_procedimento    	= cd_procedimento_p
	and		a.ie_evento_calculo	= 1
	and		coalesce(a.ie_situacao,'A')  = 'A';
	exception
     			when others then
          		ie_flag_ok := 'N';
end;

/* Gravar taxa do exame */

if (ie_flag_ok = 'S') then
	begin
     	select 	nextval('procedimento_paciente_seq')
     		into STRICT 		nr_sequencia_w
     		;

     	insert  into procedimento_paciente(nr_sequencia,nr_atendimento, dt_entrada_unidade, cd_procedimento,
		 dt_procedimento, qt_procedimento,dt_atualizacao, nm_usuario, cd_convenio,
		 cd_categoria, vl_procedimento, vl_medico,vl_anestesista, vl_materiais,
		 dt_acerto_conta, vl_auxiliares, vl_custo_operacional,tx_medico, tx_anestesia,
		 nr_doc_convenio, dt_conta, cd_setor_atendimento, ie_origem_proced, nr_seq_atepacu,
		nr_seq_proc_princ)
     	values (nr_sequencia_w,nr_atendimento_p, dt_entrada_unidade_p, cd_taxa_exame_w,
		 dt_procedimento_p, qt_procedimento_p,dt_atualizacao_w, 'Tasy', cd_convenio_p,
		 cd_categoria_p, 0, 0, 0, 0,null, 0, 0, 0, 0, nr_doc_convenio_p,
		 dt_procedimento_p, cd_setor_atendimento_p,ie_origem_proced_w, nr_seq_atepacu_w,
		nr_sequencia_Orig_w);

     	if	ie_classificacao_w = '1' then
		CALL Atualiza_Preco_Procedimento(nr_sequencia_w, cd_convenio_p,	'Tasy');
	else
		CALL Atualiza_Preco_Servico(nr_sequencia_w, 'Tasy');
	end if;
	exception
        	when others then
               		ie_flag_ok := 'N';
     	end;
end if;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_taxa_exame (CD_ESTABELECIMENTO_P bigint, NR_ATENDIMENTO_P bigint, DT_ENTRADA_UNIDADE_P timestamp, CD_PROCEDIMENTO_P bigint, DT_PROCEDIMENTO_P timestamp, QT_PROCEDIMENTO_P bigint, CD_SETOR_ATENDIMENTO_P bigint, NR_DOC_CONVENIO_P text, CD_CONVENIO_P bigint, CD_CATEGORIA_P text) FROM PUBLIC;

