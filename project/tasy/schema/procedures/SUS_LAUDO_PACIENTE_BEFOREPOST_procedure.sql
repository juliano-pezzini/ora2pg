-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_laudo_paciente_beforepost ( ie_consiste_campos_laudo_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, ds_condicao_justif_p text, cd_medico_requisitante_p text, ds_resumo_exame_fis_p text, cd_estabelecimento_p bigint, tipo_laudo_obriga_dt_trans_p text, dt_transplante_p timestamp, ie_tipo_laudo_apac_p bigint, consiste_dt_trans_apac_p text, cd_pessoa_fisica_p text) AS $body$
DECLARE

 
cd_subgrupo_w	smallint	:= 0;
ie_situacao_w	varchar(1)	:= 'A';
ds_mensagem_w	varchar(255)	:= '';
ds_retorno_w	varchar(255)	:= '';
ie_consiste_w	varchar(1)		:= 'N';
qt_pac_w		bigint;
						

BEGIN 
 
if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (ie_origem_proced_p IS NOT NULL AND ie_origem_proced_p::text <> '') then 
	begin 
	cd_subgrupo_w	:= Sus_Obter_Estrut_Proc(cd_procedimento_p, ie_origem_proced_p, 'C', 'S');
	 
	select	coalesce(max(ie_situacao), 'A') 
	into STRICT	ie_situacao_w 
	from	procedimento 
	where	cd_procedimento	 = cd_procedimento_p 
	and	ie_origem_proced = ie_origem_proced_p;
	end;
end if;
 
if	((ie_consiste_campos_laudo_p = 'S') and (cd_subgrupo_w = 206) and 
	 ((coalesce(ds_condicao_justif_p::text, '') = '') or (coalesce(cd_medico_requisitante_p::text, '') = '') or (coalesce(ds_resumo_exame_fis_p::text, '') = ''))) then 
 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(21225);
end if;
 
if (ie_situacao_w = 'I') then 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(15779);
end if;
 
ds_retorno_w := sus_consiste_regra_laudo(cd_estabelecimento_p, cd_procedimento_p, ie_origem_proced_p, ds_retorno_w);
if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') then 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(262328 , 'DS_MENSAGEM='||ds_retorno_w);
end if;
 
 
if (tipo_laudo_obriga_dt_trans_p IS NOT NULL AND tipo_laudo_obriga_dt_trans_p::text <> '') then 
 
	select	substr(obter_se_contido_char(ie_tipo_laudo_apac_p,tipo_laudo_obriga_dt_trans_p),1,1) 
	into STRICT	ie_consiste_w 
	;
 
	if (coalesce(dt_transplante_p::text, '') = '') and (ie_consiste_w = 'S') then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(323431);
		 
	end if;
end if;	
 
if (consiste_dt_trans_apac_p = 'S') then 
	begin 
	 
	select	count(*) 
	into STRICT	qt_pac_w 
	from	atendimento_paciente a, 
			sus_apac_unif b, 
			conta_paciente c, 
			procedimento_paciente d 
	where	d.qt_procedimento > 0 
	and		trunc(b.dt_competencia,'month') >= trunc((clock_timestamp() - interval '30 days'),'month') 
	and		b.cd_procedimento = 506010023 
	and		b.cd_procedimento = d.cd_procedimento 
	and		c.nr_interno_conta = d.nr_interno_conta 
	and		c.nr_interno_conta = b.nr_interno_conta 
	and		c.nr_atendimento = a.nr_atendimento 
	and		a.nr_atendimento = b.nr_atendimento 
	and		a.cd_pessoa_fisica = cd_pessoa_fisica_p;
 
	if (cd_procedimento_p = 506010023) and 
		(dt_transplante_p < (clock_timestamp() - interval '365 days')) and (qt_pac_w > 0) then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(231810);
	end if;
	end;
end if;	
	 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_laudo_paciente_beforepost ( ie_consiste_campos_laudo_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, ds_condicao_justif_p text, cd_medico_requisitante_p text, ds_resumo_exame_fis_p text, cd_estabelecimento_p bigint, tipo_laudo_obriga_dt_trans_p text, dt_transplante_p timestamp, ie_tipo_laudo_apac_p bigint, consiste_dt_trans_apac_p text, cd_pessoa_fisica_p text) FROM PUBLIC;

