-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_matmed_assoc (nr_prescricao_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_prescricao_w			bigint;
nr_sequencia_w			bigint;
cd_motivo_baixa_w		bigint;

ie_atualiza_estoque_w		varchar(01);
ie_conta_paciente_w		varchar(01);

nr_seq_mat_atend_w		bigint;
nr_atendimento_w		bigint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
nr_doc_convenio_w		varchar(20);
ie_tipo_guia_w			varchar(2);
nr_seq_atepacu_w		bigint;
dt_entrada_unidade_w		timestamp;
cd_senha_w			varchar(20);
cd_setor_atendimento_w		bigint;
dt_prescricao_w			timestamp;
cd_material_w			bigint;
cd_unidade_medida_w		varchar(30);
qt_material_w			double precision;
cd_local_estoque_w		smallint;
nr_seq_tipo_baixa_w		bigint;
cd_estabelecimento_w		bigint;
IE_GERAR_MAT_ASSOC_LIB_w	varchar(01);
sql_err_w			varchar(2000);
dt_passagem_w			timestamp;

c01 CURSOR FOR
	SELECT	b.nr_prescricao,
		b.nr_sequencia,
		b.cd_motivo_baixa,
		b.cd_material,
		b.cd_unidade_medida,
		b.qt_material
	from	prescr_material b,
		prescr_medica a
	where	a.nr_prescricao	= nr_prescricao_p
	and	a.nr_prescricao	= b.nr_prescricao
	and	b.ie_origem_inf	= 'A'
	and	coalesce(b.cd_motivo_baixa,0)  = 0;


BEGIN

select	nr_atendimento,
	cd_setor_atendimento,
	dt_prescricao,
	cd_estabelecimento
into STRICT	nr_atendimento_w,
	cd_setor_atendimento_w,
	dt_prescricao_w,
	cd_estabelecimento_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

select	coalesce(max(IE_GERAR_MAT_ASSOC_LIB_PRESCR), 'N')
into STRICT	IE_GERAR_MAT_ASSOC_LIB_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_W;

if (IE_GERAR_MAT_ASSOC_LIB_w = 'S')  then
	begin
	if (coalesce(nr_atendimento_w,0) > 0) then
		SELECT * FROM obter_convenio_execucao(nr_atendimento_w, clock_timestamp(), cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;
	end if;

	begin
	/* Rafael em 25/2/8 OS76992, substituído pela rotina abaixo;
	select	nr_seq_interno,
		dt_entrada_unidade
	into	nr_seq_atepacu_w,
		dt_entrada_unidade_w
	from 	atend_paciente_unidade
	where 	cd_setor_atendimento	= cd_setor_atendimento_w
	and 	nr_atendimento 		= nr_atendimento_w
	and 	to_date(dt_prescricao_w,'dd/mm/yyyy') between dt_entrada_unidade and 	nvl(dt_saida_unidade, sysdate);
	exception
	when others then
		nr_seq_atepacu_w:= 0;
	end;

	if	(nr_seq_atepacu_w = 0) then
		begin
		GERAR_PASSAGEM_SETOR_ATEND(nr_atendimento_w, cd_setor_atendimento_w, sysdate,'S', nm_usuario_p);

		select	nvl(max(nr_seq_interno),0)
		into	nr_seq_atepacu_w
		from	atend_paciente_unidade
		where	nr_atendimento		= nr_atendimento_w
		and	cd_setor_atendimento	= cd_setor_atendimento_w;

		select	dt_entrada_unidade
		into	dt_entrada_unidade_w
		from	atend_paciente_unidade
		where	nr_seq_interno = nr_seq_atepacu_w;
		end;
	end if;
	*/
	if (dt_prescricao_w > clock_timestamp()) then /* Rafael 1/3/8 -> Tratar prescrições futuras */
		dt_passagem_w := dt_prescricao_w;
	else
		dt_passagem_w := clock_timestamp();
	end if;

	/* Rafael em 25/2/8 OS76992 */

	select	coalesce(max(nr_seq_interno),0)
	into STRICT	nr_seq_atepacu_w
	from 	atend_paciente_unidade
	where 	cd_setor_atendimento	= cd_setor_atendimento_w
	and 	nr_atendimento 	= nr_atendimento_w
	--and 	trunc(dt_prescricao_w,'dd') between dt_entrada_unidade and nvl(dt_saida_unidade, sysdate);
	--and 	trunc(dt_prescricao_w,'dd') between dt_entrada_unidade and nvl(dt_saida_unidade, dt_passagem_w); Rafael em 24/3/8 OS76992
	--and 	dt_prescricao_w between dt_entrada_unidade and nvl(dt_saida_unidade, dt_passagem_w);
	and 	dt_passagem_w between dt_entrada_unidade and coalesce(dt_saida_unidade, dt_passagem_w);
	exception
	when others then
		nr_seq_atepacu_w	:= 0;
		sql_err_w 		:= substr(SQLERRM, 1, 1800);
	end;

	if (nr_seq_atepacu_w = 0) and (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '')then
		/* Rafael em 3/4/8, substituido pela linha abaixo;
		gerar_passagem_setor_atend(nr_atendimento_w, cd_setor_atendimento_w, sysdate, 'S', nm_usuario_p);*/
		CALL gerar_passagem_setor_atend(nr_atendimento_w, cd_setor_atendimento_w, dt_passagem_w, 'S', nm_usuario_p);

		/* Rafael em 24/3/8 OS76992 */

		select	coalesce(max(nr_seq_interno),0)
		into STRICT	nr_seq_atepacu_w
		from	atend_paciente_unidade
		where	nr_atendimento	= nr_atendimento_w
		and	cd_setor_atendimento	= cd_setor_atendimento_w
		--and 	trunc(dt_prescricao_w,'dd') between dt_entrada_unidade and nvl(dt_saida_unidade, sysdate);
		--and 	trunc(dt_prescricao_w,'dd') between dt_entrada_unidade and nvl(dt_saida_unidade, dt_passagem_w); Rafael em 24/3/8 OS76992
		--and 	dt_prescricao_w between dt_entrada_unidade and nvl(dt_saida_unidade, dt_passagem_w);
		and 	dt_passagem_w between dt_entrada_unidade and coalesce(dt_saida_unidade, dt_passagem_w);
	end if;

	/* Rafael em 24/3/8 OS76992 incluí este comando dentro do if acima
	select	nvl(max(nr_seq_interno),0)
	into	nr_seq_atepacu_w
	from	atend_paciente_unidade
	where	nr_atendimento	= nr_atendimento_w
	and	cd_setor_atendimento	= cd_setor_atendimento_w
	--and 	trunc(dt_prescricao_w,'dd') between dt_entrada_unidade and nvl(dt_saida_unidade, sysdate);
	and 	trunc(dt_prescricao_w,'dd') between dt_entrada_unidade and nvl(dt_saida_unidade, dt_passagem_w);
	*/
	if (nr_seq_atepacu_w > 0) then
		select	max(dt_entrada_unidade)
		into STRICT	dt_entrada_unidade_w
		from	atend_paciente_unidade
		where	nr_seq_interno = nr_seq_atepacu_w;
	end if;
	/* Fim Rafael em 25/2/8 OS76992 */

	if (nr_seq_atepacu_w	= 0) then
		nr_seq_atepacu_w	:= null;
	end if;
	open	c01;
	loop
	fetch	c01 into
		nr_prescricao_w,
		nr_sequencia_w,
		cd_motivo_baixa_w,
		cd_material_w,
		cd_unidade_medida_w,
		qt_material_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select	max(ie_atualiza_estoque),
			max(ie_conta_paciente),
			max(nr_sequencia)
		into STRICT	ie_atualiza_estoque_w,
			ie_conta_paciente_w,
			nr_seq_tipo_baixa_w
		from	tipo_baixa_prescricao
		where	CD_TIPO_BAIXA			= cd_motivo_baixa_w
		and	IE_PRESCRICAO_DEVOLUCAO		= 'P';

		if (ie_atualiza_estoque_w = 'N') then
			cd_local_estoque_w	:= null;
		elsif (ie_atualiza_estoque_w = 'S') then
			select	a.cd_local_estoque
			into STRICT	cd_local_estoque_w
			from	local_estoque a,
				setor_atendimento b
			where	a.cd_local_estoque	= b.cd_local_estoque
			and	b.cd_setor_atendimento	= cd_setor_atendimento_w;
		end if;

		if (ie_conta_paciente_w	= 'S') and (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '')then

			select	nextval('material_atend_paciente_seq')
			into STRICT	nr_seq_mat_atend_w
			;

			insert	into material_atend_paciente(
				nr_sequencia,
				nr_atendimento,
				dt_entrada_unidade,
				cd_material,
				dt_atendimento,
				dt_conta,
				cd_unidade_medida,
				qt_material,
				dt_atualizacao,
				nm_usuario,
				cd_convenio,
				cd_categoria,
				nr_doc_convenio,
				ie_tipo_guia,
				dt_prescricao,
				cd_material_prescricao,
				cd_material_exec,
				nr_prescricao,
				nr_sequencia_prescricao,
				cd_acao,
				cd_setor_atendimento,
				qt_executada,
				vl_unitario,
				qt_ajuste_conta,
				ie_valor_informado,
				ie_guia_informada,
				ie_auditoria,
				nm_usuario_original,
				cd_situacao_glosa,
				nr_seq_atepacu,
				nr_seq_cor_exec,
				cd_local_estoque,
				nr_seq_tipo_baixa,
				nr_interno_conta,
				cd_senha)
			values (
				nr_seq_mat_atend_w,
				nr_atendimento_w,
				dt_entrada_unidade_w,
				cd_material_w,
				clock_timestamp(),
				clock_timestamp(),
				cd_unidade_medida_w,
				qt_material_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_convenio_w,
				cd_categoria_w,
				nr_doc_convenio_w,
				ie_tipo_guia_w,
				null,
				cd_material_w,
				cd_material_w,
				nr_prescricao_w,
				nr_sequencia_w,
				'1',
				cd_setor_atendimento_w,
				qt_material_w,
				0,
				0,
				'N',
				'N',
				'N',
				nm_usuario_p,
				0,
				nr_seq_atepacu_w,
				231,
				cd_local_estoque_w,
				nr_seq_tipo_baixa_w,
				null,
				cd_senha_w);

			CALL Atualiza_Preco_Material(nr_seq_mat_atend_w, nm_usuario_p);
		elsif (ie_atualiza_estoque_w = 'S') then
			CALL Gerar_Prescricao_estoque(
				cd_estabelecimento_w,
				nr_atendimento_w,
				dt_prescricao_w,
				cd_material_w,
				dt_prescricao_w,
				1,
				cd_local_estoque_w,
				qt_material_w,
				cd_setor_atendimento_w,
				cd_unidade_medida_w,
				nm_usuario_p, 'I',
				nr_prescricao_w,
       		           	nr_sequencia_w,
				null,
				nr_sequencia_w,
				null,
				null,
				null,
				null,
				null,
				null, '','','');


		end if;

		end;
	end loop;
	close c01;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_matmed_assoc (nr_prescricao_p bigint, nm_usuario_p text) FROM PUBLIC;

