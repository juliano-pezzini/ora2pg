-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_excluir_protocolo_imp ( nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


nr_seq_conta_w			pls_conta.nr_sequencia%type;
nr_seq_conta_mat_w		pls_conta_mat.nr_sequencia%type;
nr_seq_conta_proc_w		pls_conta_proc.nr_sequencia%type;
qt_mensalidade_w		integer;
qt_prot_contab_w		integer;
ie_mes_fechado_w		varchar(5);
ie_situacao_w			pls_protocolo_conta.ie_situacao%type;
nr_seq_mensalidade_w		pls_mensalidade.nr_sequencia%type;
nr_titulo_w			titulo_pagar.nr_titulo%type;
nr_seq_item_analise_w		pls_analise_conta_item.nr_sequencia%type; --glosas e ocorrencias na analise
qt_analise_conta_item_w		integer;
nr_seq_analise_w		pls_conta.nr_seq_analise%type;
nr_seq_aud_conta_grupo_w	pls_auditoria_conta_grupo.nr_sequencia%type;
qt_contas_analise_w		integer;
nr_seq_analise_pos_estab_w	pls_conta_pos_estabelecido.nr_seq_analise%type;
nr_seq_participante_hi_w	pls_conta_proc.nr_seq_participante_hi%type;
nr_seq_partic_proc_w		pls_proc_participante.nr_sequencia%type;
qt_pos_estab_w			integer;
qt_registro_w			integer;
nr_seq_dic_objeto_w		dic_objeto.nr_sequencia%type;
nr_seq_prot_referenciado_w	pls_protocolo_conta.nr_sequencia%type;
qt_contab_vinc_lote_w		integer := 0;


c01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_conta
	where 	nr_seq_protocolo = nr_seq_protocolo_p;

c02 CURSOR FOR
	SELECT 	a.nr_sequencia,
		a.nr_seq_participante_hi
	from   	pls_conta_proc a
	where  	a.nr_seq_conta = nr_seq_conta_w;

c03 CURSOR FOR
	SELECT a.nr_sequencia
	from   pls_conta_mat a
	where  a.nr_seq_conta = nr_seq_conta_w;
	
C05 CURSOR FOR
	SELECT	b.nr_titulo
	from	pls_protocolo_conta	a,
		titulo_pagar		b
	where	a.nr_sequencia		= b.nr_seq_reembolso
	and	a.nr_sequencia 		= nr_seq_protocolo_p;
	
C06 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_analise_conta_item
	where	nr_seq_conta = nr_seq_conta_w;
	
C07 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_auditoria_conta_grupo
	where	nr_seq_analise	 = nr_seq_analise_w;
	
c08 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_proc_participante a
	where	a.nr_seq_conta_proc = nr_seq_conta_proc_w;
	
	

BEGIN

select	count(1)
into STRICT	qt_mensalidade_w
from	pls_mensalidade a,
	pls_mensalidade_segurado b,
	pls_mensalidade_seg_item c
where	a.nr_sequencia	= b.nr_seq_mensalidade
and	b.nr_sequencia	= c.nr_seq_mensalidade_seg
and	c.nr_seq_conta in (	SELECT	nr_sequencia
				from	pls_conta
				where 	nr_seq_protocolo = nr_seq_protocolo_p)
and	coalesce(a.ie_cancelamento::text, '') = '';
				
if (qt_mensalidade_w > 0 ) then
	--Se alguma conta presente no protocolo estiver em mensalidade, entao devera abortar a exclusao do mesmo.

	--wheb_mensagem_pck.exibir_mensagem_abort('Ja existe mensalidade gerada para o protocolo '||nr_seq_protocolo_p||'  Nao e possivel excluir o mesmo.');
	CALL wheb_mensagem_pck.exibir_mensagem_abort(739804, 'NR_SEQ_PROTOCOLO=' || nr_seq_protocolo_p);
end if;

--Validar se o protocolo pode ser excluida.
CALL pls_obter_se_exclui_reg_desp(null,null,null,null,nr_seq_protocolo_p,null,'P');
pls_util_pck.ie_exec_trig_conta_obs_w := 'N'; -- Inativa a trigger pls_conta_obs_a500_atual
select	count(1)
into STRICT	qt_prot_contab_w
from	pls_protocolo_conta
where	nr_sequencia = nr_seq_protocolo_p
and	coalesce(nr_lote_contabil,0) <> 0;

if (qt_prot_contab_w > 0) then

	--O protocolo nao pode ser excluido pois foi contabilizado.
	CALL wheb_mensagem_pck.exibir_mensagem_abort(173280);
end if;

begin
	select	pls_obter_se_mes_fechado(dt_mes_competencia,'T', cd_estabelecimento_p),
		ie_situacao
	into STRICT	ie_mes_fechado_w,
		ie_situacao_w
	from	pls_protocolo_conta
	where	nr_sequencia	= nr_seq_protocolo_p;
exception
	when others then
		ie_situacao_w	:= null;
		ie_mes_fechado_w:= null;
end;

if (ie_mes_fechado_w = 'S') and (ie_situacao_w in ('D','T')) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(173282);
	--'O mes de competencia ou contabilidade do mes esta fechado. Verifique!	
end if;

select	max(nr_sequencia)
into STRICT	nr_seq_prot_referenciado_w
from	pls_protocolo_conta
where	nr_seq_prot_referencia = nr_seq_protocolo_p;

if (nr_seq_prot_referenciado_w IS NOT NULL AND nr_seq_prot_referenciado_w::text <> '') then
	--Nao e possivel excluir o protocolo, pois e referenciado pelo protocolo #@NR_SEQ_LOTE#@ (processo de abertura de contas medicas). Entre em contato com a Operadora.
    CALL wheb_mensagem_pck.exibir_mensagem_abort(1150663, 'NR_SEQ_LOTE='||nr_seq_prot_referenciado_w);
end if;

open c01;
loop
fetch c01 into
	nr_seq_conta_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	select 	count(1)
	into STRICT	qt_contab_vinc_lote_w
	from 	pls_conta a,
		pls_conta_pos_estab_prev b,
		pls_conta_pos_estab_contab c
	where 	a.nr_sequencia = nr_seq_conta_w
	and 	a.nr_sequencia = b.nr_seq_conta
	and	c.nr_seq_previa_pos = b.nr_sequencia
	and 	(c.nr_lote_contabil_prov IS NOT NULL AND c.nr_lote_contabil_prov::text <> '')
	and 	c.nr_lote_contabil_prov != 0;

	if ( qt_contab_vinc_lote_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1127711);
	end if;
	
	CALL pls_excluir_previa_pos(nr_seq_conta_w, 'T');
	
	delete from pls_conta_anexo where nr_seq_conta = nr_seq_conta_w;
	
	delete	FROM pls_cta_lote_proc_conta
	where	nr_seq_conta	= nr_seq_conta_w;
	
	commit;
	select	count(1)
	into STRICT	qt_mensalidade_w
	from	pls_mensalidade_seg_item
	where	nr_seq_conta	= nr_seq_conta_w;
	
	select	max(nr_seq_analise)
	into STRICT	nr_seq_analise_w
	from	pls_conta
	where	nr_sequencia = nr_seq_conta_w;
	
	if (coalesce(nr_seq_analise_w,0) <> 0) then
		begin
		/* Francisco - 27/11/2012 - OS 523011 - Limpar as tabelas novas da analise */

		delete from pls_analise_glo_ocor_grupo
		where nr_seq_analise	= nr_seq_analise_w;
		
		delete from pls_analise_fluxo_ocor
		where	nr_seq_analise	= nr_seq_analise_w;
		
		delete from pls_analise_fluxo_item
		where	nr_seq_analise	= nr_seq_analise_w;
		
		delete from pls_analise_log_acesso
		where nr_seq_analise	= nr_seq_analise_w;
		/* Fim Francisco - 27/11/2012 */

		
		open C06;
		loop
		fetch C06 into	
			nr_seq_item_analise_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin
			delete FROM pls_analise_fluxo_item
			where  nr_seq_glosa_item = nr_seq_item_analise_w;	
			
			delete	FROM pls_analise_parecer_item
			where	nr_seq_item	= nr_seq_item_analise_w;
		
			delete  FROM pls_analise_conta_item_log
			where  nr_seq_analise_item = nr_seq_item_analise_w;
		
			delete 	FROM pls_analise_conta_item
			where	nr_sequencia 	= nr_seq_item_analise_w;
		
			end;
		end loop;
		close C06;
		
		select	count(1)
		into STRICT	qt_analise_conta_item_w
		from	w_pls_resumo_conta
		where	nr_seq_analise = nr_seq_analise_w;
			
		if (qt_analise_conta_item_w = 0) then
		
			open C07;
			loop
			fetch C07 into	
				nr_seq_aud_conta_grupo_w;
			EXIT WHEN NOT FOUND; /* apply on C07 */
				begin
				
				delete	FROM pls_tempo_conta_grupo
				where	nr_seq_auditoria = nr_seq_aud_conta_grupo_w;
				
				delete	FROM pls_auditoria_conta_grupo
				where	nr_sequencia 	 = nr_seq_aud_conta_grupo_w;
				
				end;
			end loop;
			close C07;		

			update	pls_conta
			set	nr_seq_analise	 = NULL
			where	nr_sequencia = nr_seq_conta_w;
			
			begin
				delete	FROM pls_hist_analise_conta
				where	nr_seq_analise = nr_seq_analise_w;
			exception
			when others then
				begin
				delete	FROM pls_hist_analise_conta
				where	nr_seq_analise = nr_seq_analise_w;
				exception
				when others then
				delete	FROM pls_hist_analise_conta
				where	nr_seq_analise = nr_seq_analise_w;	
				end;
			end;
			
			select	count(1)
			into STRICT	qt_contas_analise_w
			from	pls_conta
			where	nr_seq_analise = nr_seq_analise_w;
			
			if (qt_contas_analise_w = 0) then
				delete FROM pls_analise_fluxo_item
				where  nr_seq_analise = nr_seq_analise_w;

				delete	FROM w_pls_proc_participante
				where	nr_seq_analise	 = nr_seq_analise_w;

				delete	FROM pls_log_lib_valor_analise
				where	nr_seq_analise	 = nr_seq_analise_w;
				
				delete	FROM pls_analise_conta_anexo
				where	nr_seq_analise	 = nr_seq_analise_w;
				
				delete	FROM pls_analise_conta
				where	nr_sequencia	 = nr_seq_analise_w;
				
			end if;
		end if;
		end;
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	w_pls_resumo_conta
	where	nr_seq_conta = nr_seq_conta_w  LIMIT 1;

	if (qt_registro_w > 0) then
		begin
			delete	FROM w_pls_resumo_conta
			where	nr_seq_conta = nr_seq_conta_w;	
		exception
		when others then
			delete	FROM w_pls_resumo_conta
			where	nr_seq_conta = nr_seq_conta_w;				
		end;
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	pls_documento
	where	nr_seq_conta = nr_seq_conta_w  LIMIT 1;

	if (qt_registro_w > 0) then
		
		delete  FROM pls_documento_glosa
		where nr_seq_documento in (	SELECT	nr_seq_documento
						from	pls_documento
						where	nr_seq_conta = nr_seq_conta_w);
					
		delete	FROM pls_documento
		where	nr_seq_conta = nr_seq_conta_w;
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_analise_glosa_original
	where	nr_seq_conta = nr_seq_conta_w  LIMIT 1;
	
	if (qt_registro_w > 0) then
		delete	FROM pls_analise_glosa_original
		where	nr_seq_conta = nr_seq_conta_w;
	end if;

	select	max(nr_seq_analise)
	into STRICT	nr_seq_analise_pos_estab_w
	from	pls_conta_pos_estabelecido
	where	nr_seq_conta	= nr_seq_conta_w;
	
	nr_seq_analise_w := nr_seq_analise_pos_estab_w;
	
	select	count(1)
	into STRICT	qt_pos_estab_w
	from	pls_conta_pos_estabelecido
	where	nr_seq_conta = nr_seq_conta_w;
	
	if (qt_pos_estab_w > 0) then
	
		delete	FROM pls_conta_pos_estab_taxa
		where	nr_seq_conta_pos_estab in (SELECT 	nr_sequencia
						   from		pls_conta_pos_estabelecido
						   where	nr_seq_conta	= nr_seq_conta_w);
		delete	FROM pls_conta_pos_estabelecido
		where	nr_seq_conta	= nr_seq_conta_w;
	end if;
	
	delete	FROM pls_diagnostico_conta_pos
	where	nr_seq_conta	= nr_seq_conta_w;
	
	delete	FROM pls_diagnostico_conta_pos	x
	where	x.nr_seq_cabecalho		in (	SELECT	a.nr_sequencia
							from	pls_conta_pos_cabecalho	a
							where	a.nr_seq_conta		= nr_seq_conta_w);
							
	
	delete 	FROM pls_conta_pos_cabecalho
	where	nr_seq_conta	= nr_seq_conta_w;
	
	if (coalesce(nr_seq_analise_w,0) <> 0) then
		/* Francisco - 27/11/2012 - OS 523011 - Limpar as tabelas novas da analise */

		delete from pls_analise_glo_ocor_grupo
		where nr_seq_analise	= nr_seq_analise_w;
		
		delete from pls_analise_fluxo_item
		where	nr_seq_analise	= nr_seq_analise_w;
		
		delete from pls_analise_log_acesso
		where	nr_seq_analise	= nr_seq_analise_w;
		/* Fim Francisco - 27/11/2012 */

	
		select	count(1)
		into STRICT	qt_analise_conta_item_w
		from	w_pls_resumo_conta
		where	nr_seq_analise = nr_seq_analise_w;
			
		if (qt_analise_conta_item_w = 0) then
		
			open C07;
			loop
			fetch C07 into	
				nr_seq_aud_conta_grupo_w;
			EXIT WHEN NOT FOUND; /* apply on C07 */
				begin
				
				delete	FROM pls_tempo_conta_grupo
				where	nr_seq_auditoria = nr_seq_aud_conta_grupo_w;
				
				delete	FROM pls_auditoria_conta_grupo
				where	nr_sequencia 	 = nr_seq_aud_conta_grupo_w;
				
				end;
			end loop;
			close C07;
			
			delete	FROM pls_hist_analise_conta
			where	nr_seq_analise = nr_seq_analise_w;
			
			delete	FROM pls_conta_pos_estab_taxa
			where	nr_seq_conta_pos_estab in (	SELECT	nr_sequencia
								from	pls_conta_pos_estabelecido
								where	nr_seq_analise	= nr_seq_analise_w);
								
			delete	FROM pls_conta_pos_estabelecido
			where	nr_seq_analise	= nr_seq_analise_w;
			
			begin
				delete	FROM pls_analise_conta
				where	nr_sequencia	 = nr_seq_analise_w;
			exception
			when others then
				begin
					delete	FROM pls_analise_conta
					where	nr_sequencia	 = nr_seq_analise_w;
				exception
				when others then
					delete	FROM pls_analise_conta
					where	nr_sequencia	 = nr_seq_analise_w;	
				end;
			end;
			
		end if;	
	end if;
	
	open c02;
	loop
	fetch c02 into
		nr_seq_conta_proc_w,
		nr_seq_participante_hi_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin		
		delete	FROM pls_selecao_ocor_cta
		where	nr_seq_conta_proc = nr_seq_conta_proc_w;
		
		delete	FROM pls_conta_proc_aprop
		where	nr_seq_conta_proc = nr_seq_conta_proc_w;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_ocorrencia_benef
		where	nr_seq_conta_proc = nr_seq_conta_proc_w  LIMIT 1;
		
		if (qt_registro_w > 0) then
			delete	FROM pls_ocorrencia_benef
			where	nr_seq_conta_proc = nr_seq_conta_proc_w;
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_conta_glosa
		where	nr_seq_conta_proc = nr_seq_conta_proc_w  LIMIT 1;
		
		if (qt_registro_w > 0) then
			begin
				delete	FROM pls_conta_glosa
				where	nr_seq_conta_proc = nr_seq_conta_proc_w;
			exception
			when others then
				begin
					delete	FROM pls_conta_glosa
					where	nr_seq_conta_proc = nr_seq_conta_proc_w;
				exception
				when others then
					delete	FROM pls_conta_glosa
					where	nr_seq_conta_proc = nr_seq_conta_proc_w;	
				end;
			end;
		end if;

		commit;
		/* Excluir ocorrencias e glosas dos participantes */

		open c08;
		loop
		fetch c08 into	
			nr_seq_partic_proc_w;
		EXIT WHEN NOT FOUND; /* apply on c08 */
			begin
			select	count(1)
			into STRICT	qt_registro_w
			from	pls_conta_glosa
			where 	nr_seq_proc_partic = nr_seq_partic_proc_w  LIMIT 1;
			
			if (qt_registro_w > 0) then
				delete FROM pls_ocorrencia_benef x
				where  x.nr_seq_glosa in (SELECT a.nr_sequencia
							from	pls_conta_glosa a
							where	a.nr_seq_proc_partic = nr_seq_partic_proc_w);
				
				delete FROM pls_conta_glosa
				where nr_seq_proc_partic = nr_seq_partic_proc_w;
			end if;

			end;
		end loop;
		close c08;
		commit;
		end;
	end loop;
	close c02;

	open c03;
	loop
	fetch c03 into
		nr_seq_conta_mat_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin		
		delete	FROM pls_selecao_ocor_cta
		where	nr_seq_conta_mat = nr_seq_conta_mat_w;
		
		delete	FROM pls_conta_mat_aprop
		where	nr_seq_conta_mat = nr_seq_conta_mat_w;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_ocorrencia_benef
		where	nr_seq_conta_mat = nr_seq_conta_mat_w  LIMIT 1;
		
		if (qt_registro_w > 0) then
			delete	FROM pls_ocorrencia_benef
			where	nr_seq_conta_mat = nr_seq_conta_mat_w;
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_conta_glosa
		where	nr_seq_conta_mat = nr_seq_conta_mat_w  LIMIT 1;
		
		if (qt_registro_w > 0) then
			delete	FROM pls_conta_glosa
			where	nr_seq_conta_mat = nr_seq_conta_mat_w;
		end if;

		end;
	end loop;
	close c03;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_ocorrencia_benef
	where	nr_seq_conta = nr_seq_conta_w  LIMIT 1;
	
	if (qt_registro_w > 0) then
		begin
			delete	FROM pls_ocorrencia_benef
			where	nr_seq_conta = nr_seq_conta_w;
		exception
		when others then
			begin
				delete	FROM pls_ocorrencia_benef
				where	nr_seq_conta = nr_seq_conta_w;
			exception
			when others then
				delete	FROM pls_ocorrencia_benef
				where	nr_seq_conta = nr_seq_conta_w;	
			end;	
		end;
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	sip_mov_item_assistencial
	where	nr_seq_conta = nr_seq_conta_w  LIMIT 1;
	
	if (qt_registro_w > 0) then
		delete	FROM sip_mov_item_assistencial
		where	nr_seq_conta = nr_seq_conta_w;
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_conta_glosa
	where	nr_seq_conta = nr_seq_conta_w  LIMIT 1;
	
	if (qt_registro_w > 0) then
		begin
			delete	FROM pls_conta_glosa
			where	nr_seq_conta = nr_seq_conta_w;
		exception
		when others then
			begin
				delete	FROM pls_conta_glosa
				where	nr_seq_conta = nr_seq_conta_w;
			exception
			when others then
				delete	FROM pls_conta_glosa
				where	nr_seq_conta = nr_seq_conta_w;	
			end;
		end;
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	pls_diagnostico_conta
	where	nr_seq_conta = nr_seq_conta_w  LIMIT 1;
	
	if (qt_registro_w > 0) then
		delete	FROM pls_diagnostico_conta
		where	nr_seq_conta = nr_seq_conta_w;
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_resumo_conta
	where	nr_seq_conta = nr_seq_conta_w  LIMIT 1;
	
	if (qt_registro_w > 0) then
		delete	FROM pls_resumo_conta
		where	nr_seq_conta = nr_seq_conta_w;
	end if;

	delete 	FROM pls_conta_co
	where	nr_seq_conta = nr_seq_conta_w;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_conta_coparticipacao
	where	nr_seq_conta = nr_seq_conta_w  LIMIT 1;
	
	if (qt_registro_w > 0) then
		delete	FROM pls_conta_copartic_aprop
		where	nr_seq_conta_coparticipacao in (SELECT	nr_sequencia
							from	pls_conta_coparticipacao
							where	nr_seq_conta	= nr_seq_conta_w);
		
		CALL pls_deletar_coparticipacao(	nr_seq_conta_w, null, 'S', 'N', null, null,
						nm_usuario_p, cd_estabelecimento_p);
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	pls_beneficiario_internado
	where	nr_seq_conta = nr_seq_conta_w  LIMIT 1;
	
	if (qt_registro_w > 0) then
		delete	FROM pls_beneficiario_internado
		where	nr_seq_conta = nr_seq_conta_w;
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	pls_diagnost_conta_obito
	where	nr_seq_conta = nr_seq_conta_w  LIMIT 1;
	
	if (qt_registro_w > 0) then
		delete	FROM pls_diagnost_conta_obito
		where	nr_seq_conta = nr_seq_conta_w;
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_diagnostico_nasc_vivo
	where	nr_seq_conta = nr_seq_conta_w  LIMIT 1;
	
	if (qt_registro_w > 0) then
		delete	FROM pls_diagnostico_nasc_vivo
		where	nr_seq_conta = nr_seq_conta_w;
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_conta_medica_resumo
	where	nr_seq_conta = nr_seq_conta_w  LIMIT 1;
	
	if (qt_registro_w > 0) then
		CALL pls_delete_conta_medica_resumo(	nr_seq_conta_w, null, null,
						nm_usuario_P);
	end if;
	
	delete	FROM pls_cta_lote_proc_conta_l
	where	nr_seq_conta	= nr_seq_conta_w;

	delete	FROM pls_conta_medica_resumo
	where	nr_seq_conta = nr_seq_conta_w;
	
	update	pls_conta_proc
	set	nr_seq_agrup_analise  = NULL
	where	nr_seq_agrup_analise in (SELECT nr_sequencia
					from	pls_conta_proc
					where	nr_seq_conta	= nr_seq_conta_w);
	
	begin
		delete FROM pls_conta_proc
		where	nr_seq_conta = nr_seq_conta_w;
		
		delete	FROM pls_conta_mat
		where	nr_seq_conta = nr_seq_conta_w;
		
		CALL pls_atualizar_utilizacao_guia(nr_seq_conta_w, cd_estabelecimento_p, nm_usuario_p );
	exception
	when others then
		null;
	end;

        begin   -- Exclui registros em tabelas que referenciam pls_conta - 25/07/2019 - gfurlan - OS 1940141
                delete  FROM w_pls_diagnostico_conta
                where   nr_seq_conta = nr_seq_conta_w;

        exception
          when others then
            null;
        end;
	
	update	pls_conta
	set	nr_seq_conta_princ  = NULL
	where	nr_seq_conta_princ = nr_seq_conta_w;
	
	begin


		delete 	FROM pls_conta
		where	nr_sequencia = nr_seq_conta_w;
	exception
	when others then
		begin
			delete 	FROM pls_conta
			where	nr_sequencia = nr_seq_conta_w;
	
		end;	
	end;	
	
	commit;
end loop;
close c01;

delete 	FROM pls_prot_conta_hist
where	nr_seq_protocolo = nr_seq_protocolo_p;

delete	FROM pls_prot_conta_titulo
where	nr_seq_protocolo = nr_seq_protocolo_p;

delete 	FROM pls_protocolo_reg_doc
where	nr_seq_protocolo = nr_seq_protocolo_p;

open C05;
loop
fetch C05 into	
	nr_titulo_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	begin
	CALL Cancelar_Titulo_Pagar(nr_titulo_w, nm_usuario_p, clock_timestamp());

	end;
end loop;
close C05;

begin
	delete	FROM pls_protocolo_conta
	where	nr_sequencia = nr_seq_protocolo_p;
exception
when others then
	begin
	delete	FROM pls_protocolo_conta
	where	nr_sequencia = nr_seq_protocolo_p;
	exception
	when others then
	delete	FROM pls_protocolo_conta
	where	nr_sequencia = nr_seq_protocolo_p;	
	end;
end;

pls_util_pck.ie_exec_trig_conta_obs_w := 'S'; -- ativa novamente a trigger
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_excluir_protocolo_imp ( nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

