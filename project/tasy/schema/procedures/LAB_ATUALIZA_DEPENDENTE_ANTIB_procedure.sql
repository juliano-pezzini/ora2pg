-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_atualiza_dependente_antib (nr_prescricao_p text, nm_usuario_p text) AS $body$
DECLARE


nr_seq_superior_w				prescr_procedimento.nr_seq_superior%type;
nr_seq_result_item_dep_w		exame_lab_result_item.nr_sequencia%type;
cd_medicamento_w				cih_microorg_medic.cd_medicamento%type;
nr_seq_material_w				material_exame_lab.nr_sequencia%type;
cd_setor_entrega_w				prescr_medica.cd_setor_entrega%type;


ie_entrou_cursor2_w				varchar(1);
ie_entrou_cursor3_w				varchar(1);
ie_existe_medica_antib_w		varchar(1);



c01 CURSOR FOR
	SELECT distinct
		   substr(a.ds_resultado,1,255) ds_resultado,
		   b.cd_microorganismo,
		   b.cd_medicamento,
		   coalesce(b.ie_resultado,'N') ie_resultado,
		   b.ie_micro_sem_antib,
		   d.nr_sequencia,
		   a.nr_seq_resultado,
		   b.qt_microorganismo,
		   b.ds_obs_microorganismo,
		   b.nr_cultura_microorg
	from   exame_lab_result_item a,
		   exame_lab_result_antib b,
		   exame_lab_resultado c,
		   prescr_procedimento d,
		   exame_laboratorio e
	where  a.nr_seq_resultado = b.nr_seq_resultado
	and	   a.nr_sequencia = b.nr_seq_result_item
	and	   a.nr_seq_resultado = c.nr_seq_resultado
	and	   c.nr_prescricao = d.nr_prescricao
	and	   d.nr_seq_exame = e.nr_seq_exame
	and	   a.nr_seq_prescr = d.nr_sequencia
	and	   e.ie_formato_resultado in ('SDM','SM','S')
	and	   coalesce(d.nr_seq_superior::text, '') = ''
	and	   coalesce(b.cd_medicamento::text, '') = ''
	and	   lab_obter_se_atual_micro(d.nr_seq_exame, b.cd_microorganismo) = 'S'
	and	   d.nr_prescricao = nr_prescricao_p;

c01_w	c01%rowtype;

C02 CURSOR FOR
	SELECT 	a.cd_medicamento
	into STRICT 	cd_medicamento_w
	from  	cih_medicamento b,
			cih_microorg_medic a
	where 	cd_microorganismo = c01_w.cd_microorganismo
	  and 	nr_seq_material = nr_seq_material_w
	  AND (coalesce(cd_setor_atendimento,0) = coalesce(cd_setor_entrega_w,0) or (coalesce(cd_setor_atendimento::text, '') = ''))
	  and 	a.cd_medicamento = b.cd_medicamento
	  and 	b.ie_situacao = 'A';

c02_w	c02%rowtype;

c03 CURSOR FOR
	SELECT cd_medicamento
	from   cih_medicamento
	where  ie_utiliza_result_lab ='S'
	and    ie_situacao = 'A'
	and	   ie_entrou_cursor2_w = 'N';

c03_w	c03%rowtype;

c04 CURSOR FOR
	SELECT distinct
		   substr(a.ds_resultado,1,255) ds_resultado,
		   b.cd_microorganismo,
		   b.cd_medicamento,
		   coalesce(b.ie_resultado,'N') ie_resultado,
		   b.ie_micro_sem_antib,
		   d.nr_sequencia,
		   a.nr_seq_resultado,
		   b.qt_microorganismo,
		   b.ds_obs_microorganismo,
		   b.nr_cultura_microorg
	from   exame_lab_result_item a,
		   exame_lab_result_antib b,
		   exame_lab_resultado c,
		   prescr_procedimento d,
		   exame_laboratorio e
	where  a.nr_seq_resultado = b.nr_seq_resultado
	and	   a.nr_sequencia = b.nr_seq_result_item
	and	   a.nr_seq_resultado = c.nr_seq_resultado
	and	   c.nr_prescricao = d.nr_prescricao
	and	   a.nr_seq_prescr = d.nr_sequencia
	and	   d.nr_seq_exame = e.nr_seq_exame
	and	   e.ie_formato_resultado in ('SDM','SM','S')
	and	   coalesce(d.nr_seq_superior::text, '') = ''
	and	   (b.cd_medicamento IS NOT NULL AND b.cd_medicamento::text <> '')
	and	   lab_obter_se_atual_micro(d.nr_seq_exame, b.cd_microorganismo) = 'S'
	and	   d.nr_prescricao = nr_prescricao_p;

c04_w	c04%rowtype;


BEGIN
ie_existe_medica_antib_w := 'N';

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then

select 	MAX(cd_setor_entrega)
into STRICT	cd_setor_entrega_w
from 	prescr_medica
where 	nr_prescricao = nr_prescricao_p;

open C01;
loop
fetch C01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_entrou_cursor2_w := 'N';
	ie_entrou_cursor3_w := 'N';

	select 	MAX(nr_sequencia)
	into STRICT	nr_seq_superior_w
	from 	prescr_procedimento
	where 	nr_prescricao = nr_prescricao_p
	and		nr_seq_superior  = c01_w.nr_sequencia;

	select	MAX(nr_sequencia),
			MAX(nr_seq_material)
	into STRICT	nr_seq_result_item_dep_w,
			nr_seq_material_w
	from	exame_lab_result_item
	where	nr_seq_resultado = c01_w.nr_seq_resultado
	and		nr_seq_prescr = nr_seq_superior_w
	and		(nr_seq_material IS NOT NULL AND nr_seq_material::text <> '')
	and		(nr_seq_formato IS NOT NULL AND nr_seq_formato::text <> '');

	if (nr_seq_result_item_dep_w IS NOT NULL AND nr_seq_result_item_dep_w::text <> '')  then

		update  exame_lab_result_item
		set	    ds_resultado = c01_w.ds_resultado
		where 	nr_seq_resultado = c01_w.nr_seq_resultado
		and		nr_sequencia = nr_seq_result_item_dep_w;

		open C02;
		loop
		fetch C02 into
			c02_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			ie_entrou_cursor2_w := 'S';

			select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_existe_medica_antib_w
			from 	exame_lab_result_antib
			where 	nr_seq_resultado	= c01_w.nr_seq_resultado
			and		nr_seq_result_item 	= nr_seq_result_item_dep_w
			and		cd_medicamento 		= c02_w.cd_medicamento
			and		cd_microorganismo 	= c01_w.cd_microorganismo;

			if (ie_existe_medica_antib_w = 'N') then

				insert into exame_lab_result_antib(nr_sequencia,
												nr_seq_resultado,
												nr_seq_result_item,
												cd_microorganismo,
												cd_medicamento,
												ie_resultado,
												dt_atualizacao,
												nm_usuario,
												qt_microorganismo,
												ds_obs_microorganismo,
												ie_micro_sem_antib,
												nr_cultura_microorg )
										values (nextval('exame_lab_result_antib_seq'),
												c01_w.nr_seq_resultado,
												nr_seq_result_item_dep_w,
												c01_w.cd_microorganismo,
												c02_w.cd_medicamento,
												c01_w.ie_resultado,
												clock_timestamp(),
												nm_usuario_p,
												c01_w.qt_microorganismo,
												c01_w.ds_obs_microorganismo,
												c01_w.ie_micro_sem_antib,
												c01_w.nr_cultura_microorg);


			end if;

			end;
		end loop;
		close C02;

		open C03;
		loop
		fetch C03 into
			c03_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			ie_entrou_cursor3_w := 'S';

			select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_existe_medica_antib_w
			from 	exame_lab_result_antib
			where 	nr_seq_resultado	= c01_w.nr_seq_resultado
			and		nr_seq_result_item 	= nr_seq_result_item_dep_w
			and		cd_medicamento 		= c03_w.cd_medicamento
			and		cd_microorganismo 	= c01_w.cd_microorganismo;

			if (ie_existe_medica_antib_w = 'N') then

				insert into exame_lab_result_antib(nr_sequencia,
												nr_seq_resultado,
												nr_seq_result_item,
												cd_microorganismo,
												cd_medicamento,
												ie_resultado,
												dt_atualizacao,
												nm_usuario,
												qt_microorganismo,
												ds_obs_microorganismo,
												ie_micro_sem_antib,
												nr_cultura_microorg )
										values (nextval('exame_lab_result_antib_seq'),
												c01_w.nr_seq_resultado,
												nr_seq_result_item_dep_w,
												c01_w.cd_microorganismo,
												c03_w.cd_medicamento,
												c01_w.ie_resultado,
												clock_timestamp(),
												nm_usuario_p,
												c01_w.qt_microorganismo,
												c01_w.ds_obs_microorganismo,
												c01_w.ie_micro_sem_antib,
												c01_w.nr_cultura_microorg);

			end if;

			end;
		end loop;
		close C03;

		if (ie_entrou_cursor2_w = 'N')  and (ie_entrou_cursor3_w = 'N') then
			insert into exame_lab_result_antib(nr_sequencia,
												nr_seq_resultado,
												nr_seq_result_item,
												cd_microorganismo,
												cd_medicamento,
												ie_resultado,
												dt_atualizacao,
												nm_usuario,
												qt_microorganismo,
												ds_obs_microorganismo,
												ie_micro_sem_antib,
												nr_cultura_microorg )
										values (nextval('exame_lab_result_antib_seq'),
												c01_w.nr_seq_resultado,
												nr_seq_result_item_dep_w,
												c01_w.cd_microorganismo,
												c01_w.cd_medicamento,
												c01_w.ie_resultado,
												clock_timestamp(),
												nm_usuario_p,
												c01_w.qt_microorganismo,
												c01_w.ds_obs_microorganismo,
												c01_w.ie_micro_sem_antib,
												c01_w.nr_cultura_microorg);

			end if;

	end if;

	end;
end loop;
close C01;

open C04;
loop
fetch C04 into
	c04_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin


	select	MAX(nr_sequencia),
			MAX(nr_seq_material)
	into STRICT	nr_seq_result_item_dep_w,
			nr_seq_material_w
	from	exame_lab_result_item
	where	nr_seq_resultado = c04_w.nr_seq_resultado
	and		nr_seq_prescr = nr_seq_superior_w
	and		(nr_seq_material IS NOT NULL AND nr_seq_material::text <> '')
	and		(nr_seq_formato IS NOT NULL AND nr_seq_formato::text <> '');

	if (nr_seq_result_item_dep_w IS NOT NULL AND nr_seq_result_item_dep_w::text <> '')  then

		update  exame_lab_result_item
		set	    ds_resultado = c04_w.ds_resultado
		where 	nr_seq_resultado = c04_w.nr_seq_resultado
		and		nr_sequencia = nr_seq_result_item_dep_w;

		insert into exame_lab_result_antib(nr_sequencia,
											nr_seq_resultado,
											nr_seq_result_item,
											cd_microorganismo,
											cd_medicamento,
											ie_resultado,
											dt_atualizacao,
											nm_usuario,
											qt_microorganismo,
											ds_obs_microorganismo,
											ie_micro_sem_antib,
											nr_cultura_microorg )
									values (nextval('exame_lab_result_antib_seq'),
											c04_w.nr_seq_resultado,
											nr_seq_result_item_dep_w,
											c04_w.cd_microorganismo,
											c04_w.cd_medicamento,
											c04_w.ie_resultado,
											clock_timestamp(),
											nm_usuario_p,
											c04_w.qt_microorganismo,
											c04_w.ds_obs_microorganismo,
											c04_w.ie_micro_sem_antib,
											c04_w.nr_cultura_microorg);


	end if;

	end;
end loop;
close C04;

end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_atualiza_dependente_antib (nr_prescricao_p text, nm_usuario_p text) FROM PUBLIC;

