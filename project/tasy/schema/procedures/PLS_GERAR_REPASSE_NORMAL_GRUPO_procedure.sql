-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_repasse_normal_grupo ( dt_mesano_referencia_p timestamp, nr_seq_vendedor_principal_p bigint, nr_seq_vendedor_grupo_p bigint, nr_reg_parc_inicial_p bigint, nr_reg_parc_final_p bigint, nr_seq_regra_ven_p bigint, nm_usuario_p text) AS $body$
DECLARE

				
nr_seq_mensalidade_w		bigint;
nr_seq_contrato_w		bigint;
nr_seq_intercambio_w		bigint;
ie_proporcional_w		varchar(2);	
ie_proporcional_mens_w		varchar(2);
ie_tipo_pessoa_w		varchar(2);
qt_ativos_w			bigint;
qt_aprovados_contrato_w		bigint;
nr_seq_segurado_w		bigint;
nr_parcela_w			bigint;
vl_tot_mensalidade_w		double precision;
nr_seq_mens_seg_w		bigint;
qt_idade_w			bigint;
nr_seq_motivo_inclusao_w	bigint;
nr_seq_vendedor_w		bigint;
ie_acao_contrato_w		varchar(2);
dt_adesao_w			timestamp;
nr_seq_plano_w			bigint;
ie_tipo_impacto_w		varchar(2);
nr_seq_vendedor_seg_w		bigint;
vl_mensalidade_w		double precision;
vl_total_item_w			double precision;
vl_total_comissao_w		double precision;
vl_incremento_total_w		double precision;
qt_repasse_gerado_w		bigint;
qt_itens_liberados_w		bigint;
ie_tipo_item_w			varchar(2);
vl_item_w			double precision;
nr_seq_bonificacao_vinculo_w	bigint;
nr_seq_vinculo_sca_w		bigint;
nr_parcela_sca_w		bigint;
nr_seq_item_w			bigint;
ie_sca_embutido_w		varchar(1);
nr_seq_sca_vinculo_w		bigint;
nr_seq_repasse_w		bigint;
nr_seq_sca_w			bigint;
ie_bonus_w			varchar(1);
ds_tipo_item_bonificacao_w	varchar(255);
nr_seq_bonificacao_w		bigint;
nr_seq_plano_item_w		bigint;
vl_comissao_w			double precision;
nr_seq_sca_ww			bigint;
ie_tipo_item_bonificacao_w	varchar(255);
tx_premios_w			double precision;
nr_seq_regra_ven_w		bigint;
ie_acao_contrato_regra_w	varchar(2);
ie_recebe_valores_w		varchar(1);
vl_premio_w			double precision;
tx_premio_w			double precision;
ie_tipo_item_mensalidade_w	varchar(50);
pr_incremento_w			double precision;
vl_adic_mensalidade_w		double precision;
vl_incremento_w			double precision;
qt_reg_mens_w			smallint;
nr_seq_repasse_sca_w		bigint;
nr_seq_item_sca_w		bigint;
qt_dias_contrato_adesao_w	bigint;
nr_seq_pagador_w		bigint;
nr_parcela_integral_w		bigint;
ie_primeira_parc_integral_w	varchar(2);
dt_mesano_referencia_w		timestamp;
nr_seq_grupo_produto_w		bigint;
qt_registros_w			bigint;
dt_referencia_lote_w		timestamp;
ie_referencia_vidas_w		pls_regra_adic_benef.ie_referencia_vidas%type;
qt_vidas_min_w			pls_regra_adic_benef.qt_vidas_min%type;
qt_vidas_max_w			pls_regra_adic_benef.qt_vidas_max%type;
ie_considerar_ativos_w		pls_regra_adic_benef.ie_considerar_ativos%type;
qt_vidas_w			integer;
nr_contrato_principal_w		pls_contrato.nr_contrato_principal%type;
ie_incremento_restritivo_w	pls_vendedor_regra.ie_incremento_restritivo%type;
nr_seq_grupo_relac_w		varchar(255);

				
C01 CURSOR FOR
	SELECT	distinct a.nr_sequencia,
		b.nr_seq_contrato,
		b.nr_seq_pagador_intercambio,
		c.nr_seq_segurado,
		c.nr_parcela,
		c.vl_mensalidade,
		c.nr_sequencia,
		c.qt_idade,
		coalesce(d.nr_seq_motivo_inclusao,0),
		d.nr_seq_vendedor_canal,
		d.ie_acao_contrato,
		trunc(d.dt_contratacao,'dd'),
		d.nr_seq_plano,
		a.nr_seq_pagador,
		e.dt_mesano_referencia,
		coalesce(pls_dados_grupo_relac_contr(d.nr_seq_contrato,'S'),0)	
	from	pls_mensalidade_segurado 	c,
		pls_segurado			d,
		pls_mensalidade 		a,
		pls_contrato_pagador 		b,
		pls_lote_mensalidade		e
	where	b.nr_sequencia			= a.nr_seq_pagador
	and	c.nr_seq_mensalidade		= a.nr_sequencia
	and	c.nr_seq_segurado		= d.nr_sequencia
	and	e.nr_sequencia 			= a.nr_seq_lote
	and	trunc(e.dt_mesano_referencia,'month') = trunc(dt_mesano_referencia_p,'month')
	and (c.nr_parcela >= coalesce(nr_reg_parc_inicial_p, c.nr_parcela) and c.nr_parcela <= coalesce(nr_reg_parc_final_p, c.nr_parcela))
	and	coalesce(b.nr_seq_pagador_intercambio::text, '') = ''
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and	nr_seq_vendedor_grupo_p = d.nr_seq_vendedor_canal
	
union all

	SELECT	distinct a.nr_sequencia,
		b.nr_seq_contrato,
		b.nr_seq_pagador_intercambio,
		c.nr_seq_segurado,
		c.nr_parcela,
		c.vl_mensalidade,
		c.nr_sequencia,
		c.qt_idade,
		coalesce(d.nr_seq_motivo_inclusao,0),
		e.nr_seq_vendedor_canal,
		d.ie_acao_contrato,
		trunc(d.dt_contratacao,'dd'),
		d.nr_seq_plano,
		a.nr_seq_pagador,
		f.dt_mesano_referencia,
		coalesce(pls_dados_grupo_relac_contr(d.nr_seq_contrato,'S'),0)		
	from	pls_mensalidade_segurado 	c,
		pls_segurado			d,
		pls_segurado_canal_compl	e,
		pls_mensalidade 		a,
		pls_contrato_pagador 		b,
		pls_lote_mensalidade		f
	where	b.nr_sequencia			= a.nr_seq_pagador
	and	c.nr_seq_mensalidade		= a.nr_sequencia
	and	c.nr_seq_segurado		= d.nr_sequencia
	and	e.nr_seq_segurado		= d.nr_sequencia
	and	f.nr_sequencia 			= a.nr_seq_lote
	and	trunc(f.dt_mesano_referencia,'month') = trunc(dt_mesano_referencia_p,'month')
	and (c.nr_parcela >= coalesce(nr_reg_parc_inicial_p, c.nr_parcela) and c.nr_parcela <= coalesce(nr_reg_parc_final_p, c.nr_parcela))
	and	coalesce(b.nr_seq_pagador_intercambio::text, '') = '' 
	and	coalesce(a.ie_cancelamento::text, '') = ''	
	and	nr_seq_vendedor_grupo_p = e.nr_seq_vendedor_canal;
	
C02 CURSOR FOR
	SELECT	a.ie_tipo_item,
		a.vl_item,
		a.nr_seq_bonificacao_vinculo,
		a.nr_seq_vinculo_sca,
		a.nr_parcela_sca,
		a.nr_sequencia,
		'N' ie_sca_embutido
	FROM pls_segurado d, pls_mensalidade_segurado c, pls_mensalidade_seg_item a
LEFT OUTER JOIN pls_sca_vinculo b ON (a.nr_seq_vinculo_sca = b.nr_sequencia)
WHERE a.nr_seq_mensalidade_seg	= c.nr_sequencia and c.nr_seq_segurado		= d.nr_sequencia  and a.ie_tipo_mensalidade 		= 'N' and c.nr_sequencia			= nr_seq_mens_seg_w and ((coalesce(b.nr_seq_vendedor_canal::text, '') = '') or (b.nr_seq_vendedor_canal = d.nr_seq_vendedor_canal))
	
union all

	SELECT	'15', /* buscar os SCAs embutidos no preco pre-estabelecido */
		e.vl_parcela,
		null,
		e.nr_seq_vinculo_sca,
		e.nr_parcela,
		a.nr_sequencia,
		'S' ie_sca_embutido
	FROM pls_mensalidade_sca e, pls_segurado d, pls_mensalidade_segurado c, pls_mensalidade_seg_item a
LEFT OUTER JOIN pls_sca_vinculo b ON (a.nr_seq_vinculo_sca = b.nr_sequencia)
WHERE a.nr_seq_mensalidade_seg	= c.nr_sequencia and c.nr_seq_segurado		= d.nr_sequencia and e.nr_seq_item_mens		= a.nr_sequencia  and a.ie_tipo_item			= '1' and a.ie_tipo_mensalidade 		= 'N' and c.nr_sequencia			= nr_seq_mens_seg_w and ((coalesce(b.nr_seq_vendedor_canal::text, '') = '') or (b.nr_seq_vendedor_canal = d.nr_seq_vendedor_canal));
	
C03 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_acao_contrato,
		a.ie_recebe_valores,
		coalesce(a.vl_premio,0),
		coalesce(a.tx_premio,0),
		a.ie_tipo_item_mensalidade,
		a.nr_seq_grupo_produto
	from	pls_vendedor_regra	a,
		pls_vendedor		b
	where	a.nr_sequencia = nr_seq_regra_ven_p
	and (trunc(a.dt_inicio_vigencia,'dd') <= dt_mesano_referencia_w)
	and (coalesce(a.dt_fim_vigencia::text, '') = '' or trunc(a.dt_fim_vigencia,'dd') >= trunc(dt_mesano_referencia_p,'dd'))
	and	((coalesce(ie_primeira_parc_integral,'N') = 'N' and coalesce(nr_parcela_w,a.nr_parcela_inicial) >= a.nr_parcela_inicial and coalesce(nr_parcela_w,a.nr_parcela_final) <= a.nr_parcela_final)
	or (coalesce(ie_primeira_parc_integral,'N') = 'S' and coalesce(nr_parcela_integral_w, a.nr_parcela_inicial) >= a.nr_parcela_inicial and coalesce(nr_parcela_integral_w, a.nr_parcela_final) <= a.nr_parcela_final))
	and	((ie_tipo_item_w <> '15') or ((ie_tipo_item_w = '15') and (nr_parcela_sca_w >= coalesce(a.nr_parcela_inicial_sca,nr_parcela_sca_w) and nr_parcela_sca_w <= coalesce(a.nr_parcela_final_sca,nr_parcela_sca_w))))
	and	((a.ie_acao_contrato = ie_acao_contrato_w) or (coalesce(a.ie_acao_contrato::text, '') = ''))
	and	(((a.ie_tipo_pessoa = ie_tipo_pessoa_w) or (coalesce(a.ie_tipo_pessoa::text, '') = '')) or (a.ie_tipo_pessoa = 'A'))
	and	((a.ie_aprovacao_benef_ativo = 'S' and coalesce(qt_ativos_w,0) >= coalesce(qt_aprovados_contrato_w,0)) or (a.ie_aprovacao_benef_ativo = 'N'))
	and	((a.nr_seq_motivo_inclusao = nr_seq_motivo_inclusao_w) or (coalesce(a.nr_seq_motivo_inclusao::text, '') = ''))
	and	((a.nr_seq_plano = nr_seq_plano_w) or (coalesce(a.nr_seq_plano::text, '') = ''))
	and	((a.nr_seq_sca = nr_seq_sca_w) or (coalesce(a.nr_seq_sca::text, '') = ''))
	and	((a.nr_seq_grupo_produto IS NOT NULL AND a.nr_seq_grupo_produto::text <> '' AND nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') 
	or (coalesce(a.nr_seq_grupo_produto::text, '') = ''))
	and	qt_idade_w between coalesce(a.qt_idade_inicial,qt_idade_w) and coalesce(a.qt_idade_final,qt_idade_w)
	and (qt_dias_contrato_adesao_w between coalesce(qt_dias_contrato, qt_dias_contrato_adesao_w) and coalesce(qt_dias_contrato_fim, qt_dias_contrato_adesao_w))
	and    	((coalesce(a.nr_seq_grupo_contrato::text, '') = '') or (exists (	SELECT    1
								from    pls_preco_grupo_contrato x,
									pls_preco_contrato y
								where   x.nr_sequencia = y.nr_seq_grupo		
								and    	x.nr_sequencia = a.nr_seq_grupo_contrato
								and    	y.nr_seq_contrato = nr_seq_contrato_w)))
	and	((a.nr_seq_grupo_relac = nr_seq_grupo_relac_w) or (coalesce(a.nr_seq_grupo_relac::text, '') = ''))
	and	a.ie_situacao = 'A'
	order by	coalesce(a.nr_seq_sca,0),
			coalesce(a.nr_seq_plano,0),
			coalesce(a.nr_seq_grupo_produto,0),
			coalesce(a.nr_seq_motivo_inclusao,0), 
			coalesce(a.ie_acao_contrato,'9') desc,
			coalesce(a.ie_tipo_item_mensalidade,'A'),
			coalesce(a.nr_parcela_inicial,0),
			coalesce(a.nr_parcela_final,0),
			coalesce(a.nr_parcela_inicial_sca,0),
			coalesce(a.nr_parcela_final_sca,0),
			coalesce(a.nr_seq_grupo_relac,0),
			a.dt_inicio_vigencia,
			a.dt_fim_vigencia;
			
	
C04 CURSOR FOR
	SELECT	coalesce(a.pr_incremento,0),
		coalesce(a.ie_referencia_vidas,'G'),
		a.qt_vidas_min,
		a.qt_vidas_max,
		coalesce(a.ie_considerar_ativos,'N'),
		coalesce(b.ie_incremento_restritivo,'N')
	from	pls_regra_adic_benef	a,
		pls_vendedor_regra	b
	where	a.nr_seq_regra_ven	= b.nr_sequencia
	and	b.nr_sequencia		= nr_seq_regra_ven_w
	and (qt_idade_w between coalesce(a.qt_idade_min,qt_idade_w) and coalesce(a.qt_idade_max,qt_idade_w))
	and	((a.ie_tipo_impacto_cpt = ie_tipo_impacto_w) or (coalesce(a.ie_tipo_impacto_cpt::text, '') = ''))
	and	(((a.ie_tipo_pessoa = ie_tipo_pessoa_w) or (coalesce(a.ie_tipo_pessoa::text, '') = '')) or (a.ie_tipo_pessoa = 'A'))
	and	((a.ie_acao_contrato = ie_acao_contrato_w) or (coalesce(a.ie_acao_contrato::text, '') = ''))
	and	a.ie_situacao = 'A'
	and	b.ie_situacao = 'A'
	order by	a.ie_referencia_vidas,
			a.ie_acao_contrato,
			a.ie_tipo_impacto_cpt,
			a.qt_vidas_min,
			a.qt_vidas_max,
			a.ie_tipo_pessoa;
	
C05 CURSOR FOR
	SELECT	b.ie_tipo_impacto
	from	pls_carencia		a,
		pls_tipo_carencia	b,
		pls_segurado		c
	where	a.nr_seq_tipo_carencia	= b.nr_sequencia
	and	a.nr_seq_segurado	= c.nr_sequencia
	and	c.nr_sequencia		= nr_seq_segurado_w
	order by CASE WHEN b.ie_tipo_impacto='N' THEN 0 WHEN b.ie_tipo_impacto='B' THEN 1 WHEN b.ie_tipo_impacto='M' THEN 2 WHEN b.ie_tipo_impacto='A' THEN 3 END;
	
C06 CURSOR FOR
	SELECT	a.ie_tipo_item
	from	pls_bonificacao_regra	a,
		pls_bonificacao		b
	where	a.nr_seq_bonificacao	= b.nr_sequencia
	and	a.ie_tipo_regra		= 'M'
	and	b.nr_sequencia		= nr_seq_bonificacao_w;
	
C07 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_tipo_item,
		a.vl_item,
		a.nr_seq_bonificacao_vinculo,
		a.nr_seq_vinculo_sca,
		a.nr_parcela_sca
	FROM pls_segurado d, pls_mensalidade_segurado c, pls_mensalidade_seg_item a
LEFT OUTER JOIN pls_sca_vinculo b ON (a.nr_seq_vinculo_sca = b.nr_sequencia)
WHERE a.nr_seq_mensalidade_seg	= c.nr_sequencia and c.nr_seq_segurado		= d.nr_sequencia and c.nr_sequencia			= nr_seq_mens_seg_w and a.ie_tipo_mensalidade 		= 'N' and a.ie_tipo_item			= 15 and (b.nr_seq_vendedor_canal IS NOT NULL AND b.nr_seq_vendedor_canal::text <> '') and b.nr_seq_vendedor_canal = nr_seq_vendedor_w and b.nr_seq_vendedor_canal <> d.nr_seq_vendedor_canal;
	
C08 CURSOR FOR
	SELECT	distinct a.nr_sequencia,
		b.nr_seq_contrato,
		b.nr_seq_pagador_intercambio,
		c.nr_seq_segurado,
		c.nr_parcela,
		c.vl_mensalidade,
		c.nr_sequencia,
		c.qt_idade,
		coalesce(d.nr_seq_motivo_inclusao,0),
		d.ie_acao_contrato,
		trunc(d.dt_contratacao,'dd'),
		d.nr_seq_plano,
		e.nr_seq_vendedor_canal,
		a.nr_seq_pagador,
		f.dt_mesano_referencia
	from	pls_mensalidade_segurado	c,
		pls_segurado			d,
		pls_mensalidade 		a,
		pls_contrato_pagador 		b,
		pls_sca_vinculo			e,
		pls_lote_mensalidade		f
	where	b.nr_sequencia			= a.nr_seq_pagador
	and	c.nr_seq_mensalidade		= a.nr_sequencia
	and	c.nr_seq_segurado		= d.nr_sequencia
	and	d.nr_sequencia 			= e.nr_seq_segurado
	and	f.nr_sequencia			= a.nr_seq_lote
	and	d.nr_seq_vendedor_canal 	<> e.nr_seq_vendedor_canal
	and	coalesce(b.nr_seq_pagador_intercambio::text, '') = ''
	and	coalesce(a.ie_cancelamento::text, '') = ''	
	and	(e.nr_seq_vendedor_canal IS NOT NULL AND e.nr_seq_vendedor_canal::text <> '')
	and	trunc(f.dt_mesano_referencia,'month') = trunc(dt_mesano_referencia_p,'month')
	and	((coalesce(nr_seq_vendedor_grupo_p::text, '') = '') or (nr_seq_vendedor_grupo_p = e.nr_seq_vendedor_canal))
	group by a.nr_sequencia,
		 b.nr_seq_contrato,
		 b.nr_seq_pagador_intercambio,
		 c.nr_seq_segurado,
		 c.nr_parcela,
		 c.vl_mensalidade,
		 c.nr_sequencia,
		 c.qt_idade,
		 d.nr_seq_motivo_inclusao,
		 d.ie_acao_contrato,
		 d.dt_contratacao,
		 d.nr_seq_plano,
		 e.nr_seq_vendedor_canal,
		 a.nr_seq_pagador,
		 f.dt_mesano_referencia;									
	

BEGIN

ie_tipo_impacto_w	:= 'N';
ie_bonus_w		:= 'S';
dt_mesano_referencia_w	:= trunc(dt_mesano_referencia_p,'dd');

open C01;
loop
fetch C01 into	
	nr_seq_mensalidade_w,
	nr_seq_contrato_w,
	nr_seq_intercambio_w,
	nr_seq_segurado_w,
	nr_parcela_w,
	vl_tot_mensalidade_w,
	nr_seq_mens_seg_w,
	qt_idade_w,
	nr_seq_motivo_inclusao_w,
	nr_seq_vendedor_w,
	ie_acao_contrato_w,
	dt_adesao_w,
	nr_seq_plano_w,
	nr_seq_pagador_w,
	dt_referencia_lote_w,
	nr_seq_grupo_relac_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	select	count(*)
	into STRICT	qt_reg_mens_w
	from	pls_repasse_mens
	where	nr_seq_mens_seg = nr_seq_mens_seg_w
	and	nr_seq_vendedor = nr_seq_vendedor_principal_p;	
	
	select	count(1)
	into STRICT	qt_registros_w
	FROM pls_mensalidade_segurado x, pls_mensalidade_seg_item w, pls_segurado z
LEFT OUTER JOIN pls_sca_vinculo y ON (z.nr_sequencia = y.nr_seq_segurado)
WHERE z.nr_sequencia		= x.nr_seq_segurado and x.nr_sequencia		= w.nr_seq_mensalidade_seg and x.nr_seq_mensalidade	= nr_seq_mensalidade_w and nr_seq_vendedor_grupo_p = z.nr_seq_vendedor_canal;
			
	if (qt_reg_mens_w = 0) and (qt_registros_w > 0) then
		begin	
		nr_contrato_principal_w := null;
		
		if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
			select	CASE WHEN coalesce(cd_pf_estipulante::text, '') = '' THEN 'PJ'  ELSE 'PF' END ,
				nr_contrato_principal
			into STRICT	ie_tipo_pessoa_w,
				nr_contrato_principal_w
			from	pls_contrato
			where	nr_sequencia	= nr_seq_contrato_w;
		elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
			select	CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN 'PJ'  ELSE 'PF' END
			into STRICT	ie_tipo_pessoa_w
			from	pls_intercambio
			where	nr_sequencia	= nr_seq_intercambio_w;
		end if;
		
		if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
			select	count(*)
			into STRICT	qt_ativos_w
			from	pls_segurado	a,
				pls_contrato	b
			where	a.nr_seq_contrato	= b.nr_sequencia
			and	b.nr_sequencia		= nr_seq_contrato_w
			and	coalesce(a.dt_rescisao::text, '') = ''
			and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '');
		elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
			select	count(*)
			into STRICT	qt_ativos_w
			from	pls_segurado	a,
				pls_intercambio	b
			where	a.nr_seq_intercambio	= b.nr_sequencia
			and	b.nr_sequencia		= nr_seq_intercambio_w
			and	coalesce(a.dt_rescisao::text, '') = ''
			and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '');
		end if;
		
		if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
			select	count(*)
			into STRICT	qt_aprovados_contrato_w
			from	pls_segurado	a,
				pls_contrato	b
			where	a.nr_seq_contrato	= b.nr_sequencia
			and	b.nr_sequencia		= nr_seq_contrato_w
			and	a.ie_acao_contrato	= 'A';
		elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
			select	count(*)
			into STRICT	qt_aprovados_contrato_w
			from	pls_segurado	a,
				pls_intercambio	b
			where	a.nr_seq_intercambio	= b.nr_sequencia
			and	b.nr_sequencia		= nr_seq_intercambio_w
			and	a.ie_acao_contrato	= 'A';
		end if;	

		if (coalesce(qt_idade_w::text, '') = '') then
			select	trunc(months_between(dt_mesano_referencia_p, b.dt_nascimento) / 12)
			into STRICT	qt_idade_w
			from	pls_segurado	a,
				pessoa_fisica	b
			where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
			and	a.nr_sequencia		= nr_seq_segurado_w;
		end if;		
		
		/*Obter a quantidade de dias entre a data de contratacao e a data de adesao do beneficiario. */

		if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
			select	b.dt_contratacao - a.dt_contrato
			into STRICT	qt_dias_contrato_adesao_w
			from	pls_segurado	b,
				pls_contrato	a
			where	a.nr_sequencia = b.nr_seq_contrato
			and	b.nr_sequencia = nr_seq_segurado_w;
		end if;	
		
		nr_parcela_integral_w := -1;
		
		begin
		select	CASE WHEN a.ie_proporcional='S' THEN 'P' WHEN a.ie_proporcional='N' THEN 'I' END
		into STRICT	ie_proporcional_w
		from	pls_mensalidade_segurado	b,
			pls_mensalidade			a
		where	a.nr_sequencia = b.nr_seq_mensalidade
		and	b.nr_parcela = 1
		and	a.nr_sequencia = nr_seq_mensalidade_w;	
		exception
		when others then
			ie_proporcional_w := null;
		end;
		
		if (ie_proporcional_w IS NOT NULL AND ie_proporcional_w::text <> '') then
			ie_primeira_parc_integral_w := ie_proporcional_w;
		else	
			begin
			select	a.ie_calc_primeira_mens
			into STRICT	ie_primeira_parc_integral_w
			from	pls_mensalidade_segurado	c,
				pls_mensalidade			b,
				pls_contrato_pagador		a
			where	a.nr_sequencia 		= b.nr_seq_pagador
			and	b.nr_sequencia 		= c.nr_seq_mensalidade
			and	a.nr_sequencia 		= nr_seq_pagador_w
			and	c.nr_seq_segurado 	= nr_seq_segurado_w
			and	c.nr_parcela = 1
			group by a.ie_calc_primeira_mens;	
			exception
			when others then
				ie_primeira_parc_integral_w := 'I';
			end;			
		end if;
		
		if (ie_primeira_parc_integral_w = 'P') then
			nr_parcela_integral_w := nr_parcela_w - 1;
		elsif (ie_primeira_parc_integral_w = 'I') then
			nr_parcela_integral_w := nr_parcela_w;
		end if;		
		
		open C05; /* Impacto do CPT */
		loop
		fetch C05 into	
			ie_tipo_impacto_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
		end loop;
		close C05;
		
		nr_seq_vendedor_seg_w	:= nr_seq_vendedor_w;
		
		vl_mensalidade_w	:= 0;
		vl_total_item_w		:= 0;
		vl_total_comissao_w	:= 0;
		vl_incremento_total_w	:= 0;
		
		select	count(*)
		into STRICT	qt_repasse_gerado_w
		from	pls_repasse_mens a,
			pls_repasse_vend b
		where	a.nr_seq_repasse	= b.nr_sequencia
		and	a.nr_seq_mens_seg	= nr_seq_mens_seg_w
		and	b.nr_seq_vendedor 	= nr_seq_vendedor_principal_p
		and	b.ie_tipo_repasse	= 'N';	
		
		select	count(*)
		into STRICT	qt_itens_liberados_w
		from	pls_repasse_mens
		where	nr_seq_mens_seg = nr_seq_mens_seg_w
		and	nr_seq_vendedor = nr_seq_vendedor_principal_p
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
		
		if (qt_repasse_gerado_w = 0 AND qt_itens_liberados_w = 0) then
		
			select	nextval('pls_repasse_mens_seq')
			into STRICT	nr_seq_repasse_w
			;	
			
			insert	into	pls_repasse_mens(	nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_vendedor,
					nr_seq_repasse,
					nr_seq_mens_seg,
					vl_repasse,
					vl_origem,
					ie_status,
					ie_acao_contrato,
					nr_seq_segurado,
					nr_seq_plano,
					nr_seq_plano_sca,
					nr_parcela_benef)
				values (	nr_seq_repasse_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_vendedor_principal_p,
					null,
					nr_seq_mens_seg_w,
					0,
					0,
					'A',
					ie_acao_contrato_w,
					nr_seq_segurado_w,
					nr_seq_plano_w,
					nr_seq_sca_w,
					nr_parcela_w);
					
			CALL pls_atual_campos_repasse_mens(nr_seq_repasse_w,nm_usuario_p);
		
			open C02;
			loop
			fetch C02 into	
				ie_tipo_item_w,
				vl_item_w,
				nr_seq_bonificacao_vinculo_w,
				nr_seq_vinculo_sca_w,
				nr_parcela_sca_w,
				nr_seq_item_w,
				ie_sca_embutido_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin	
				
				begin
				select	coalesce(b.nr_sequencia,0)
				into STRICT	nr_seq_sca_vinculo_w
				from	pls_sca_vinculo		b,
					pls_segurado		a
				where	a.nr_sequencia = b.nr_seq_segurado
				and	a.nr_sequencia = nr_seq_segurado_w
				and	b.nr_sequencia = nr_seq_vinculo_sca_w
				and	b.nr_seq_vendedor_canal = nr_seq_vendedor_grupo_p
				and	b.nr_seq_vendedor_canal <> a.nr_seq_vendedor_canal;	
				exception
				when others then
					nr_seq_sca_vinculo_w	:= 0;
				end;				
				
				if (coalesce(nr_seq_vinculo_sca_w,0) <> nr_seq_sca_vinculo_w or nr_seq_sca_vinculo_w = 0) then	

					ie_bonus_w			:= 'N';
					ds_tipo_item_bonificacao_w	:= '';
					nr_seq_sca_w			:= null;
					nr_seq_bonificacao_w		:= null;
					nr_seq_plano_item_w		:= null;
					vl_comissao_w			:= 0;
					
					if (ie_tipo_item_w = '15') then
						select	max(nr_seq_plano),
							coalesce(max(nr_seq_vendedor_canal),nr_seq_vendedor_w)
						into STRICT	nr_seq_sca_w,
							nr_seq_vendedor_w
						from	pls_sca_vinculo
						where	nr_sequencia	= nr_seq_vinculo_sca_w;
						
						nr_seq_sca_ww	:= nr_seq_sca_w;
					elsif (ie_tipo_item_w	in ('1','12')) then
						nr_seq_plano_item_w	:= nr_seq_plano_w;
					end if;
					
					if (nr_seq_vendedor_seg_w = nr_seq_vendedor_w) then

						if 	((coalesce(nr_seq_bonificacao_vinculo_w,0) <> 0) and (ie_tipo_item_w ='14')) then
							select	nr_seq_bonificacao
							into STRICT	nr_seq_bonificacao_w
							from	pls_bonificacao_vinculo
							where	nr_sequencia	= nr_seq_bonificacao_vinculo_w;
							
							open C06;
							loop
							fetch C06 into	
								ie_tipo_item_bonificacao_w;
							EXIT WHEN NOT FOUND; /* apply on C06 */
								begin
								ds_tipo_item_bonificacao_w	:= ds_tipo_item_bonificacao_w || ',' || ie_tipo_item_bonificacao_w;
								end;
							end loop;
							close C06;
							ds_tipo_item_bonificacao_w	:= substr(ds_tipo_item_bonificacao_w,2,length(ds_tipo_item_bonificacao_w));
							ie_bonus_w	:= 'S';
						end if;
						
						tx_premios_w := 0;
								
						open C03;
						loop
						fetch C03 into
							nr_seq_regra_ven_w,
							ie_acao_contrato_regra_w,
							ie_recebe_valores_w,
							vl_premio_w,
							tx_premio_w,
							ie_tipo_item_mensalidade_w,
							nr_seq_grupo_produto_w;
						EXIT WHEN NOT FOUND; /* apply on C03 */
						end loop;
						close C03;
						
						open C04; /* Itens adicionais */
						loop
						fetch C04 into
							pr_incremento_w,
							ie_referencia_vidas_w,	
							qt_vidas_min_w,
							qt_vidas_max_w,
							ie_considerar_ativos_w,
							ie_incremento_restritivo_w;
						EXIT WHEN NOT FOUND; /* apply on C04 */
							qt_vidas_w := pls_obter_qt_vidas_comissao(nr_seq_contrato_w, nr_seq_intercambio_w, dt_mesano_referencia_w, ie_acao_contrato_w,
													nr_contrato_principal_w, ie_referencia_vidas_w, ie_considerar_ativos_w);
							
							if (qt_vidas_w between coalesce(qt_vidas_min_w,qt_vidas_w) and coalesce(qt_vidas_max_w,qt_vidas_w)) then
								tx_premios_w := tx_premios_w + tx_premio_w + pr_incremento_w;
								if (ie_incremento_restritivo_w = 'S') then 
									exit;
								end if;								
							end if;
						end loop;
						close c04;
						
						if (tx_premios_w = 0) then
							tx_premios_w := tx_premio_w;
						end if;	
						
						if (coalesce(nr_seq_regra_ven_w,0) > 0) then	
						if	(((nr_seq_grupo_produto_w IS NOT NULL AND nr_seq_grupo_produto_w::text <> '') and (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') and pls_se_grupo_preco_produto(nr_seq_grupo_produto_w,nr_seq_plano_w) = 'S') or (coalesce(nr_seq_grupo_produto_w::text, '') = '')) then
						if (pls_obter_item_mens(ie_tipo_item_mensalidade_w,ie_tipo_item_w) = 'S') then
						if	((ie_bonus_w = 'S' and pls_obter_item_mens(ie_tipo_item_mensalidade_w,ds_tipo_item_bonificacao_w) = 'S') or (ie_bonus_w = 'N'))	then
							
							if (ie_recebe_valores_w = 'S') then
								select	sum(a.vl_item)
								into STRICT	vl_adic_mensalidade_w
								from	pls_mensalidade_seg_item	a,
									pls_mensalidade_segurado	b
								where	a.nr_seq_mensalidade_seg = b.nr_sequencia
								and	b.nr_sequencia		= nr_seq_mens_seg_w
								and	a.ie_tipo_mensalidade = 'A';
								
								vl_comissao_w := (vl_comissao_w + coalesce(vl_adic_mensalidade_w,0));
							end if;	
							
							if 	((tx_premios_w > 0) or (vl_premio_w > 0)) then
								vl_mensalidade_w := (round((vl_item_w * tx_premio_w) / 100,2) + vl_premio_w);
								vl_incremento_w	:= coalesce((round((vl_item_w * pr_incremento_w) / 100,2)),0);
								vl_comissao_w := coalesce(vl_comissao_w,0) + coalesce(vl_mensalidade_w,0) + coalesce(vl_incremento_w,0);
								
								vl_incremento_total_w	:= coalesce(vl_incremento_total_w,0) + vl_incremento_w;
								vl_total_item_w	:= coalesce(vl_total_item_w,0) + coalesce(vl_item_w,0);
								vl_total_comissao_w := coalesce(vl_total_comissao_w,0) + coalesce(vl_comissao_w,0);	

								insert	into	pls_repasse_mens_item(
										nr_sequencia,
										nr_seq_repasse,
										ie_tipo_item,
										dt_atualizacao,
										dt_atualizacao_nrec,
										nm_usuario,
										nm_usuario_nrec,
										pr_repasse,
										vl_repasse,
										vl_origem,
										nr_seq_mensalidade_seg_item,
										nr_seq_plano_sca,
										nr_seq_bonificacao,
										vl_item,
										nr_seq_plano,
										vl_incremento,
										vl_premio,
										ie_sca_embutido)
									values (	nextval('pls_repasse_mens_item_seq'),
										nr_seq_repasse_w,
										ie_tipo_item_w,
										clock_timestamp(),
										clock_timestamp(),
										nm_usuario_p,
										nm_usuario_p,
										tx_premios_w,
										vl_comissao_w,
										vl_comissao_w,
										nr_seq_item_w,
										nr_seq_sca_w,
										nr_seq_bonificacao_w,
										vl_item_w,
										nr_seq_plano_item_w,
										vl_incremento_w,
										vl_premio_w,
										ie_sca_embutido_w);												
										
							end if;
							
							tx_premio_w 		:= 0;
							vl_premio_w 		:= 0;
							nr_seq_regra_ven_w	:= 0;
							pr_incremento_w		:= 0;
							
						end if;
						end if;		
						end if;
						end if;	
					end if;					
				end if;					
				end;
			end loop;
			close C02;	
			
			if (vl_total_comissao_w > 0) then
				update	pls_repasse_mens
				set	vl_item_comissao = vl_total_item_w,
					vl_repasse	= vl_total_comissao_w,
					vl_origem	= vl_total_comissao_w,
					vl_incremento	= vl_incremento_total_w,
					pr_comissao	= tx_premios_w,
					nr_seq_plano_sca = nr_seq_sca_ww
				where	nr_sequencia	= nr_seq_repasse_w;
			else
				delete from pls_repasse_mens_item
				where	nr_seq_repasse = nr_seq_repasse_w;
				
				delete from pls_repasse_mens
				where nr_sequencia = nr_seq_repasse_w;
			end if;
			
		end if;
		end;
	end if;
end loop;
close C01;

open C08; /* Comissao para vendedor com vinculo SCA */
loop
fetch C08 into	
	nr_seq_mensalidade_w,
	nr_seq_contrato_w,
	nr_seq_intercambio_w,
	nr_seq_segurado_w,
	nr_parcela_w,
	vl_tot_mensalidade_w,
	nr_seq_mens_seg_w,
	qt_idade_w,
	nr_seq_motivo_inclusao_w,
	ie_acao_contrato_w,
	dt_adesao_w,
	nr_seq_plano_w,
	nr_seq_vendedor_w,
	nr_seq_pagador_w,
	dt_referencia_lote_w;
EXIT WHEN NOT FOUND; /* apply on C08 */	
	begin
	
	select	count(*)
	into STRICT	qt_reg_mens_w
	from	pls_repasse_mens
	where	nr_seq_mens_seg = nr_seq_mens_seg_w
	and	nr_seq_vendedor = nr_seq_vendedor_principal_p;	
	
	select	count(1)
	into STRICT	qt_registros_w
	from	pls_mensalidade_segurado	x,
		pls_segurado			z,
		pls_sca_vinculo			y
	where	y.nr_seq_segurado	= z.nr_sequencia
	and	z.nr_sequencia		= x.nr_seq_segurado
	and	x.nr_seq_mensalidade	= nr_seq_mensalidade_w
	and	((coalesce(nr_seq_vendedor_grupo_p::text, '') = '') or (nr_seq_vendedor_grupo_p = y.nr_seq_vendedor_canal and nr_seq_vendedor_grupo_p <> z.nr_seq_vendedor_canal));
	
	if (qt_reg_mens_w = 0) and (qt_registros_w > 0) then
		begin
		nr_contrato_principal_w := null;
		
		if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
			select	CASE WHEN coalesce(cd_pf_estipulante::text, '') = '' THEN 'PJ'  ELSE 'PF' END ,
				nr_contrato_principal
			into STRICT	ie_tipo_pessoa_w,
				nr_contrato_principal_w
			from	pls_contrato
			where	nr_sequencia	= nr_seq_contrato_w;
		elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
			select	CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN 'PJ'  ELSE 'PF' END
			into STRICT	ie_tipo_pessoa_w
			from	pls_intercambio
			where	nr_sequencia	= nr_seq_intercambio_w;
		end if;	
		
		/*Obter a quantidade de dias entre a data de contratacao e a data de adesao do beneficiario. */

		if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
			select	b.dt_contratacao - a.dt_contrato
			into STRICT	qt_dias_contrato_adesao_w
			from	pls_segurado	b,
				pls_contrato	a
			where	a.nr_sequencia = b.nr_seq_contrato
			and	b.nr_sequencia = nr_seq_segurado_w;
		end if;	
		
		nr_parcela_integral_w := -1;
				
		begin
		select	CASE WHEN a.ie_proporcional='S' THEN 'P' WHEN a.ie_proporcional='N' THEN 'I' END
		into STRICT	ie_proporcional_w
		from	pls_mensalidade_segurado	b,
			pls_mensalidade			a
		where	a.nr_sequencia = b.nr_seq_mensalidade
		and	b.nr_parcela = 1
		and	a.nr_sequencia = nr_seq_mensalidade_w;	
		exception
		when others then
			ie_proporcional_w := null;
		end;
		
		if (ie_proporcional_w IS NOT NULL AND ie_proporcional_w::text <> '') then
			ie_primeira_parc_integral_w := ie_proporcional_w;
		else		
			begin
			select	a.ie_calc_primeira_mens
			into STRICT	ie_primeira_parc_integral_w
			from	pls_mensalidade_segurado	c,
				pls_mensalidade			b,
				pls_contrato_pagador		a
			where	a.nr_sequencia 		= b.nr_seq_pagador
			and	b.nr_sequencia 		= c.nr_seq_mensalidade
			and	a.nr_sequencia 		= nr_seq_pagador_w
			and	c.nr_seq_segurado 	= nr_seq_segurado_w
			and	c.nr_parcela = 1
			group by a.ie_calc_primeira_mens;	
			exception
			when others then
				ie_primeira_parc_integral_w := 'I';
			end;			
		end if;
		
		if (ie_primeira_parc_integral_w = 'P') then
			nr_parcela_integral_w := nr_parcela_w - 1;
		elsif (ie_primeira_parc_integral_w = 'I') then
			nr_parcela_integral_w := nr_parcela_w;
		end if;			
		
		vl_total_comissao_w 	:= 0;
		vl_incremento_total_w	:= 0;
		vl_total_item_w		:= 0;		
		
		select	count(*)
		into STRICT	qt_itens_liberados_w
		from	pls_repasse_mens
		where	nr_seq_mens_seg = nr_seq_mens_seg_w
		and	nr_seq_vendedor = nr_seq_vendedor_w
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
		
		if (qt_itens_liberados_w = 0) then	
		
			select	nextval('pls_repasse_mens_seq')
			into STRICT	nr_seq_repasse_sca_w
			;	
		
			insert	into 	pls_repasse_mens(	nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_vendedor,
				nr_seq_repasse,
				nr_seq_mens_seg,
				ie_status,
				ie_acao_contrato,
				nr_seq_segurado,
				nr_seq_plano,
				vl_mensalidade,
				vl_repasse,
				vl_origem,
				nr_parcela_benef )
			values (	nr_seq_repasse_sca_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_vendedor_principal_p,
				null,
				nr_seq_mens_seg_w,
				'A',
				ie_acao_contrato_w,
				nr_seq_segurado_w,
				nr_seq_plano_w,
				vl_total_item_w,
				vl_total_comissao_w,
				vl_total_comissao_w,
				nr_parcela_w );
			
			CALL pls_atual_campos_repasse_mens(nr_seq_repasse_sca_w,nm_usuario_p);

			open C07;
			loop
			fetch C07 into	
				nr_seq_item_sca_w,
				ie_tipo_item_w,
				vl_item_w,
				nr_seq_bonificacao_vinculo_w,
				nr_seq_vinculo_sca_w,
				nr_parcela_sca_w;
			EXIT WHEN NOT FOUND; /* apply on C07 */
				begin			
				ie_bonus_w			:= 'N';
				ds_tipo_item_bonificacao_w	:= '';
				vl_mensalidade_w		:= 0;
				vl_comissao_w			:= 0;
				
				select	max(nr_seq_plano)
				into STRICT	nr_seq_sca_w
				from	pls_sca_vinculo
				where	nr_sequencia	= nr_seq_vinculo_sca_w;
				
				tx_premios_w := 0;
				pr_incremento_w := 0;
					
				open C03;
				loop
				fetch C03 into
					nr_seq_regra_ven_w,
					ie_acao_contrato_regra_w,
					ie_recebe_valores_w,
					vl_premio_w,
					tx_premio_w,
					ie_tipo_item_mensalidade_w,
					nr_seq_grupo_produto_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
				end loop;
				close C03;

				if (coalesce(nr_seq_regra_ven_w,0) > 0) then	
				if	(((nr_seq_grupo_produto_w IS NOT NULL AND nr_seq_grupo_produto_w::text <> '') and (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') and pls_se_grupo_preco_produto(nr_seq_grupo_produto_w,nr_seq_plano_w) = 'S') or (coalesce(nr_seq_grupo_produto_w::text, '') = '')) then
				if (pls_obter_item_mens(ie_tipo_item_mensalidade_w,ie_tipo_item_w) = 'S') then
				if	((ie_bonus_w = 'S' and pls_obter_item_mens(ie_tipo_item_mensalidade_w,ds_tipo_item_bonificacao_w) = 'S') or (ie_bonus_w = 'N'))	then
						
					open C04;
					loop
					fetch C04 into
						pr_incremento_w,
						ie_referencia_vidas_w,	
						qt_vidas_min_w,
						qt_vidas_max_w,
						ie_considerar_ativos_w,
						ie_incremento_restritivo_w;
					EXIT WHEN NOT FOUND; /* apply on C04 */			
						qt_vidas_w := pls_obter_qt_vidas_comissao(nr_seq_contrato_w, nr_seq_intercambio_w, dt_mesano_referencia_w, ie_acao_contrato_w,
												nr_contrato_principal_w, ie_referencia_vidas_w, ie_considerar_ativos_w);
					
						if (qt_vidas_w between coalesce(qt_vidas_min_w,qt_vidas_w) and coalesce(qt_vidas_max_w,qt_vidas_w)) then
							tx_premios_w := tx_premios_w + tx_premio_w + pr_incremento_w;
							if (ie_incremento_restritivo_w = 'S') then 
								exit;
							end if;								
						end if;
					end loop;
					close c04;
					
					if (tx_premios_w = 0) then
						tx_premios_w := tx_premio_w;
					end if;
					
					if (ie_recebe_valores_w = 'S') then
						select	sum(vl_item)
						into STRICT	vl_adic_mensalidade_w
						from	pls_mensalidade_seg_item
						where	nr_seq_mensalidade_seg = nr_seq_mens_seg_w
						and	ie_tipo_mensalidade = 'A';
						
						vl_comissao_w := (vl_comissao_w + coalesce(vl_adic_mensalidade_w,0));
					end if;
					
					if 	((tx_premios_w > 0) or (vl_premio_w > 0)) then	
						vl_mensalidade_w := (round((vl_item_w * tx_premio_w) / 100,2) + vl_premio_w);
						vl_incremento_w	:= coalesce((round((vl_item_w * pr_incremento_w) / 100,2)),0);
						vl_comissao_w := coalesce(vl_comissao_w,0) + coalesce(vl_mensalidade_w,0) + coalesce(vl_incremento_w,0);
						
						vl_incremento_total_w	:= coalesce(vl_incremento_total_w,0) + vl_incremento_w;
						vl_total_item_w	:= coalesce(vl_total_item_w,0) + coalesce(vl_item_w,0);
						vl_total_comissao_w := coalesce(vl_total_comissao_w,0) + coalesce(vl_comissao_w,0);
						
						select	count(*)
						into STRICT	qt_repasse_gerado_w
						from	pls_repasse_mens_item	c,
							pls_repasse_mens	a,
							pls_repasse_vend	b
						where	c.nr_seq_repasse	= a.nr_sequencia
						and	a.nr_seq_repasse	= b.nr_sequencia
						and	a.nr_seq_mens_seg	= nr_seq_mens_seg_w
						and	c.nr_seq_mensalidade_seg_item	= nr_seq_item_sca_w
						and	b.ie_tipo_repasse	= 'N';				
						
						/* Obs: a variavel vl_comissao_w nao pode ser restringida para serem gerados somente os itens cujo valor e maior que zero porque existe os casos de 
						     itens de bonificacao em que os valores sao negativos e mesmo assim devem ser apresentados no comissionamento. */
						if (vl_comissao_w <> 0) and (qt_repasse_gerado_w = 0) then
							insert	into	pls_repasse_mens_item(	nr_sequencia,
									nr_seq_repasse,
									ie_tipo_item,
									dt_atualizacao,
									dt_atualizacao_nrec,
									nm_usuario,
									nm_usuario_nrec,
									pr_repasse,
									vl_repasse,
									vl_origem,
									nr_seq_mensalidade_seg_item,
									nr_seq_plano_sca,
									nr_seq_bonificacao,
									vl_item,
									vl_incremento,
									vl_premio)
								values (	nextval('pls_repasse_mens_item_seq'),
									nr_seq_repasse_sca_w,
									ie_tipo_item_w,
									clock_timestamp(),
									clock_timestamp(),
									nm_usuario_p,
									nm_usuario_p,
									tx_premios_w,
									vl_comissao_w,
									vl_comissao_w,
									nr_seq_item_sca_w,
									nr_seq_sca_w,
									nr_seq_bonificacao_w,
									vl_item_w,
									vl_incremento_w,
									vl_premio_w);
						end if;
					end if;	
					
				tx_premio_w 		:= 0;
				vl_premio_w 		:= 0;
				nr_seq_regra_ven_w	:= 0;	
				
				end if;
				end if;
				end if;
				end if;
				end;
			end loop;
			close C07;	

			if (vl_total_comissao_w > 0) then
				update	pls_repasse_mens
				set	vl_item_comissao 	= vl_total_item_w,
					vl_repasse		= vl_total_comissao_w,
					vl_origem		= vl_total_comissao_w,
					vl_incremento		= vl_incremento_total_w,
					pr_comissao		= tx_premios_w,
					nr_seq_plano_sca 	= nr_seq_sca_w
				where	nr_sequencia		= nr_seq_repasse_sca_w;
			else
				delete from pls_repasse_mens_item
				where	nr_seq_repasse = nr_seq_repasse_sca_w;
				
				delete from pls_repasse_mens
				where nr_sequencia = nr_seq_repasse_sca_w;
			end if;		
			
		end if;		
		end;
	end if;	
	end;
end loop;
close C08;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_repasse_normal_grupo ( dt_mesano_referencia_p timestamp, nr_seq_vendedor_principal_p bigint, nr_seq_vendedor_grupo_p bigint, nr_reg_parc_inicial_p bigint, nr_reg_parc_final_p bigint, nr_seq_regra_ven_p bigint, nm_usuario_p text) FROM PUBLIC;

