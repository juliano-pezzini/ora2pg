-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE regulacao_atendimento_grava ( nr_atendimento_p bigint, nr_seq_laudo_p bigint, cd_cidadao_p text, nr_regulacao_p bigint, cd_cnes_solicitante_p bigint, cd_cnes_executante_p bigint, nm_pessoa_fisica_p text, nm_mae_p text, dt_nascimento_p timestamp, nr_cartao_nac_sus_p text default null, nr_cpf_p text default null, ie_sexo_p text default null, ds_endereco_p text default null) AS $body$
DECLARE

 
cd_pessoa_fisica_w	varchar(10);
qt_registro_reg_w	smallint;
qt_registro_pf_w	smallint;
qt_registro_usuario_w	smallint;
nm_usuario_w		varchar(15);
nr_sequencia_w		compl_pessoa_fisica.nr_sequencia%type;


BEGIN 
if (coalesce(nr_regulacao_p,0) > 0) then 
 
	nm_usuario_w := 'tasy'; --obter_usuario_ativo; 
	select	max(cd_pessoa_fisica) 
	into STRICT	cd_pessoa_fisica_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_p;
 
	if (coalesce(cd_pessoa_fisica_w::text, '') = '') then 
 
		select	max(cd_pessoa_fisica) 
		into STRICT	cd_pessoa_fisica_w 
		from	pessoa_fisica 
		where	cd_pessoa_cross = cd_cidadao_p;
 
		if (coalesce(cd_pessoa_fisica_w::text, '') = '') then 
			select	max(cd_pessoa_fisica) 
			into STRICT	cd_pessoa_fisica_w 
			from	pessoa_fisica 
			where	trunc(dt_nascimento) = trunc(dt_nascimento_p) 
			and	regulacao_obter_nome_pesquisa(nm_pessoa_fisica) = regulacao_obter_nome_pesquisa(nm_pessoa_fisica_p) 
			and	regulacao_obter_nome_pesquisa(obter_nome_mae_pf(cd_pessoa_fisica)) = regulacao_obter_nome_pesquisa(nm_mae_p);
		end if;
 
		if (coalesce(cd_pessoa_fisica_w::text, '') = '') then 
			select	nextval('pessoa_fisica_seq') 
			into STRICT	cd_pessoa_fisica_w 
			;
 
			insert into pessoa_fisica( 
				cd_pessoa_fisica, 
				ie_tipo_pessoa, 
				nm_pessoa_fisica, 
				dt_atualizacao, 
				nm_usuario, 
				dt_nascimento, 
				nr_cartao_nac_sus, 
                nr_cpf, 
                ie_sexo 
			) values ( 
				cd_pessoa_fisica_w, 
				2, 
				nm_pessoa_fisica_p, 
				clock_timestamp(), 
				nm_usuario_w, 
				dt_nascimento_p, 
				nr_cartao_nac_sus_p, 
                nr_cpf_p, 
                ie_sexo_p 
				);
 
			-- insere o complemento m√£e 
			select	coalesce(max(nr_sequencia),0) + 1 
			into STRICT	nr_sequencia_w 
			from	compl_pessoa_fisica 
			where	cd_pessoa_fisica = cd_pessoa_fisica_w;
 
			insert into compl_pessoa_fisica( 
				cd_pessoa_fisica, 
				nr_sequencia, 
				ie_tipo_complemento, 
				nm_usuario, 
				dt_atualizacao, 
				nm_contato, 
				ds_endereco 
			) values ( 
				cd_pessoa_fisica_w, 
				nr_sequencia_w, 
				5, -- mae 
				nm_usuario_w, 
				clock_timestamp(), 
				nm_mae_p, 
				ds_endereco_p 
				);
		end if;
 
	end if;
 
	select	count(*) 
	into STRICT	qt_registro_reg_w 
	from	regulacao_atendimento 
	where	nr_regulacao = nr_regulacao_p;
 
	if (cd_cidadao_p IS NOT NULL AND cd_cidadao_p::text <> '') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then 
 
		select	count(*) 
		into STRICT	qt_registro_pf_w 
		from	pessoa_fisica 
		where	cd_pessoa_cross	= cd_cidadao_p 
		and	cd_pessoa_fisica = cd_pessoa_fisica_w;
 
		if (qt_registro_pf_w = 0) then 
			update 	pessoa_fisica 
			set	cd_pessoa_cross	= cd_cidadao_p, 
				nm_usuario	= nm_usuario_w, 
				dt_atualizacao = clock_timestamp() 
			where	cd_pessoa_fisica = cd_pessoa_fisica_w;
		end if;
	end if;
 
	if (qt_registro_reg_w = 0) then 
 
		insert into regulacao_atendimento( 
				nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_regulacao, 
				nr_atendimento_original, 
				cd_pessoa_fisica, 
				nr_seq_laudo, 
				ie_status_regulacao, 
                cd_cnes_solicitante, 
				cd_cnes_executante, 
				nm_paciente_regulacao 
			) values ( 
				nextval('regulacao_atendimento_seq'), 
				clock_timestamp(), 
				nm_usuario_w, 
				clock_timestamp(), 
				nm_usuario_w, 
				nr_regulacao_p, 
				nr_atendimento_p, 
				cd_pessoa_fisica_w, 
				nr_seq_laudo_p, 
				'1', 
                cd_cnes_solicitante_p, 
				cd_cnes_executante_p, 
				CASE WHEN coalesce(cd_pessoa_fisica_w::text, '') = '' THEN  nm_pessoa_fisica_p  ELSE null END  
			);
			commit;
	end if;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE regulacao_atendimento_grava ( nr_atendimento_p bigint, nr_seq_laudo_p bigint, cd_cidadao_p text, nr_regulacao_p bigint, cd_cnes_solicitante_p bigint, cd_cnes_executante_p bigint, nm_pessoa_fisica_p text, nm_mae_p text, dt_nascimento_p timestamp, nr_cartao_nac_sus_p text default null, nr_cpf_p text default null, ie_sexo_p text default null, ds_endereco_p text default null) FROM PUBLIC;

