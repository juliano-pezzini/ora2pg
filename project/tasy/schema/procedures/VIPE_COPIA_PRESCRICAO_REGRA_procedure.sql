-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE vipe_copia_prescricao_regra ( nr_prescricao_p bigint, nr_atendimento_p bigint, nr_seq_regra_p bigint, nm_usuario_p text, cd_medico_p text, dt_prescricao_p timestamp, ie_procedimento_p text, nr_prescricoes_p text, dt_primeiro_horario_p text, ie_ajustar_qt_p text, cd_perfil_P bigint, ie_agrupamento_p bigint, ds_ind_clinica_p text, hr_prescr_inicial_p text, hr_prescr_final_p text, dt_procedimento_p timestamp, nr_horas_validade_p bigint, nr_seq_transcricao_p bigint default 0, nr_nova_prescricao_p INOUT bigint DEFAULT NULL, cd_medic_posicionar_p INOUT bigint DEFAULT NULL) AS $body$
DECLARE

 
dt_prescricao_w  		timestamp := dt_prescricao_p;
nr_prescricao_w  		bigint;
nr_prescricao_orig_w	bigint;
nr_seq_material_w		bigint;
nr_sequencia_w			bigint;
nr_sequencia_orig_w		bigint;
nr_seq_bco_w			bigint;
cd_pessoa_fisica_w		varchar(10);
cd_pessoa_fisica_ww		varchar(10);
ie_recalcular_hor_sol_w	varchar(10);
ie_funcao_agrupar_w		varchar(2000);
ds_horarios_2w			varchar(2000);
ds_classif_setor_w		varchar(2000);
ie_copia_nao_liberada_w	varchar(10);
ie_copia_farm_clinica_w	varchar(10);
ie_motivo_prescr_w		varchar(5);
dt_prescricao_ww		timestamp;
dt_entrada_w			timestamp;
ie_origem_inf_w			varchar(1);
ie_copia_rep_motivo_w	varchar(1);
dt_validade_prescr_w	timestamp;
qt_hora_intervalo_ww	double precision;
ie_exame_w				varchar(1);
cd_material_w			integer;
qt_medico_w				integer;
nr_seq_solucao_mat_w  	bigint;
ie_horario_sem_apraso_w	varchar(1);
ie_controle_medico_w	bigint;
varcopiajust_w			varchar(1);
ie_esquema_alternado_w	varchar(1);
nr_seq_solucao_w		bigint;
dt_proxima_dose_w		timestamp;
varbancosangue_w		varchar(1);
qt_tempo_aplicacao_w	double precision;
nr_dia_util_w			bigint;
dt_inicio_prescr_w		timestamp;
qt_hora_w				bigint;
qt_dias_liberado_w		bigint;
qt_hor_fut_sem_atend_w	bigint;
ie_hora_sne_w			varchar(255);
qt_dias_lib_atend_w		bigint;
nr_prescricoes_w		varchar(2000);
ie_nao_padronizado_w	varchar(1);
cd_estabelecimento_w	smallint;
nr_horas_validade_w		integer;
nr_etapas_w				smallint;

dt_primeiro_horario_w	timestamp;
dt_prim_horario_w		varchar(20);
ie_copia_agora_w		varchar(1);
cd_classif_setor_w		varchar(2);
cd_prescritor_w			varchar(10);
varconsistedatafutura_w	varchar(1);
ie_calcula_validade_w	varchar(1);
ie_inf_validade_copia_w	varchar(1);

var_pac_usu_w			varchar(2);
var_setores_usuario_w	varchar(1);
cd_perfil_w				integer;
cd_setor_atendimento_w	bigint;
ie_adep_w				varchar(1)	:= 'N';
ie_estender_w			varchar(3);
ie_prescr_agora_pa_w	varchar(1);
qt_registro_w			bigint;
cd_setor_usuario_w		integer;
cd_setor_prescr_w		integer := null;
ie_peso_prescr_org_w	varchar(1);
nr_horas_copia_w		bigint;
ds_horarios_w			varchar(2000);
Prescr_dia_w			varchar(1) := 'S';
ie_agrup_prescr_atend_w varchar(1)	:= 'S';
ds_erro_w				varchar(2000);
ie_copiar_altura_w		varchar(1) := 'S';
ie_copiar_peso_w		varchar(1) := 'S';
ie_nao_liberadas_w		varchar(1);
hr_prim_horario_w		varchar(5);
hr_prim_hora_solucao_w		varchar(5);
dt_prim_hor_sol_w		timestamp;
nr_prescrioes_ww		varchar(2000) := '';
ie_alter_dt_prox_dose_w	varchar(1);
ie_copia_dieta_w		varchar(1);
ie_copia_jejum_w		varchar(1);
ie_copiar_sup_nut_w		varchar(1);
ie_copiar_npt_neonatal_w varchar(1);
ie_copiar_recomendacao_w varchar(1);
ie_copiar_bco_sangue_w	varchar(1);
ie_copiar_gasoterapia_w	varchar(1);
ie_copiar_hemodialise_w	varchar(1);
ie_horario_rep_ant_w	varchar(1);
nr_prescr_ant_w			bigint;
cd_intervalo_w			varchar(10);
ie_operacao_w			varchar(1);
ie_via_aplicacao_w		varchar(10);
nr_ocorrencia_w			bigint;
ie_mesmo_zerado_w		varchar(1);
ie_se_necessario_w		varchar(1);
ie_agora_w				varchar(1);
ie_acm_w				varchar(1);
ie_solucao_pca_w		varchar(1);
nr_seq_anterior_w		bigint;

ie_adep_ww				varchar(1);
ie_considera_adep_w		varchar(1);
dt_inicial_w			timestamp;
dt_final_w				timestamp;
dt_horario_w			timestamp;
qt_dia_prim_hor_w		bigint;
dt_proxima_dose_orig_w	timestamp;
qt_unitaria_w			double precision;
ie_regra_disp_w			varchar(1);
cd_unidade_medida_dose_w varchar(30);
qt_material_w			double precision;
qt_total_dispensar_w	double precision;
cd_medic_posicionar_w	bigint;
ie_hemodialise_w		prescr_solucao.ie_hemodialise%type;

 
C01 REFCURSOR;

c05 CURSOR FOR 
SELECT	nr_sequencia 
from	prescr_material a 
where	a.ie_agrupador	in (1,2,5) 
and		coalesce(a.dt_suspensao::text, '') = '' 
and		a.nr_prescricao = nr_prescricao_w;

c07 CURSOR FOR 
SELECT	nr_sequencia 
from	prescr_material 
where	coalesce(dt_suspensao::text, '') = '' 
and		ie_agrupador	= 8 
and		nr_prescricao	= nr_prescricao_w;

C08 CURSOR FOR 
SELECT	b.nr_seq_solucao, 
		b.nr_etapas, 
		b.qt_tempo_aplicacao, 
		coalesce(b.ie_esquema_alternado,'N'), 
		b.hr_prim_horario, 
		b.nr_prescricao_anterior, 
		coalesce(b.ie_se_necessario,'N'), 
		coalesce(b.ie_acm,'N'), 
		coalesce(b.ie_urgencia,'N'), 
		coalesce(b.ie_solucao_pca,'N'), 
		b.nr_sequencia_anterior, 
		coalesce(b.ie_hemodialise,'N') 
from	prescr_solucao b, 
		prescr_medica a 
where	coalesce(b.ie_calc_aut,'S')	= 'S' 
and		coalesce(b.dt_suspensao::text, '') = '' 
and		a.nr_prescricao = b.nr_prescricao 
and		a.nr_prescricao	= nr_prescricao_w;

C09 CURSOR FOR 
SELECT	b.nr_sequencia, 
		obter_ocorrencia_intervalo(b.cd_intervalo,coalesce(a.nr_horas_validade,24),'H'), 
		b.dt_proxima_dose, 
		b.nr_sequencia_anterior, 
		coalesce(b.nr_prescricao_anterior,b.nr_prescricao_original), 
		b.cd_material, 
		b.cd_intervalo, 
		b.hr_prim_horario 
from	prescr_material b, 
		prescr_medica a 
where	obter_se_interv_superior_24h(b.cd_intervalo,null) = 'S' 
and		b.ie_origem_inf	<> 'K' 
and		b.ie_agrupador	in (1, 2) 
and		a.nr_prescricao	= b.nr_prescricao 
and		a.nr_prescricao	= nr_prescricao_w;

C012 CURSOR FOR 
SELECT	a.cd_material, 
		a.nr_sequencia 
from	prescr_material a		 
where	coalesce(a.dt_suspensao::text, '') = '' 
and		a.nr_sequencia_solucao	= nr_seq_Solucao_w 
and		a.nr_prescricao 	= nr_prescricao_w;

C13 CURSOR FOR 
SELECT	coalesce(ie_horario_rep_ant,'N') 
from	rep_regra_copia_crit 
where	((coalesce(ie_pca, 'S') = 'S') or (coalesce(ie_solucao_pca_w, 'N') = coalesce(ie_pca, 'S'))) 
and		((coalesce(ie_se_necessario, 'S') = 'S') or (coalesce(ie_se_necessario_w, 'N') = coalesce(ie_se_necessario, 'S'))) 
and		((coalesce(ie_ACM, 'S') = 'S') or (coalesce(ie_acm_w, 'N') = coalesce(ie_ACM, 'S'))) 
and		((coalesce(ie_agora, 'S') = 'S') or (coalesce(ie_agora_w, 'N') = coalesce(ie_agora, 'S'))) 
and		((coalesce(ie_esquema_alternado, 'S') = 'S') or (coalesce(ie_esquema_alternado_w, 'N') = coalesce(ie_esquema_alternado, 'S'))) 
and		ie_tipo_item	= 'SOL' 
and		nr_seq_regra	= nr_seq_regra_p 
order by coalesce(nr_seq_apres, 99);


BEGIN 
 
select	coalesce(max(cd_estabelecimento),1), 
		max(cd_setor_atendimento) 
into STRICT	cd_estabelecimento_w, 
		cd_setor_atendimento_w 
from	prescr_medica 
where	nr_prescricao = nr_prescricao_p;
 
nr_prescricoes_w	:= ' ' || nr_prescricoes_p || ' ';
nr_prescricoes_w	:= replace(nr_prescricoes_w, ',',' ');
nr_prescricoes_w	:= replace(nr_prescricoes_w, ' ',' ');
 
cd_perfil_w	:= cd_perfil_P;
 
CALL Wheb_assist_pck.set_informacoes_usuario(coalesce(Wheb_usuario_pck.get_cd_estabelecimento, cd_estabelecimento_w), cd_perfil_w, nm_usuario_p);
 
var_pac_usu_w			:= Wheb_assist_pck.obterParametroFuncao(924,42);
VarConsisteDataFutura_w	:= Wheb_assist_pck.obterParametroFuncao(924,44);
Prescr_dia_w			:= Wheb_assist_pck.obterParametroFuncao(924,52);
VarBancoSangue_w		:= Wheb_assist_pck.obterParametroFuncao(924,60);
ie_copia_agora_w		:= Wheb_assist_pck.obterParametroFuncao(924,85);
ie_calcula_validade_w	:= Wheb_assist_pck.obterParametroFuncao(924,98);
ie_nao_padronizado_w	:= Wheb_assist_pck.obterParametroFuncao(924,111);
VarCopiaJust_w			:= Wheb_assist_pck.obterParametroFuncao(924,135);
var_setores_usuario_w	:= Wheb_assist_pck.obterParametroFuncao(924,136);
ie_hora_sne_w			:= Wheb_assist_pck.obterParametroFuncao(924,146);
ie_horario_sem_apraso_w	:= Wheb_assist_pck.obterParametroFuncao(924,207);
ie_estender_w			:= Wheb_assist_pck.obterParametroFuncao(924,249);
ie_agrup_prescr_atend_w	:= Wheb_assist_pck.obterParametroFuncao(924,254);
ie_prescr_agora_pa_w	:= Wheb_assist_pck.obterParametroFuncao(924,311);
ie_peso_prescr_org_w	:= Wheb_assist_pck.obterParametroFuncao(924,319);
ie_copia_nao_liberada_w	:= Wheb_assist_pck.obterParametroFuncao(924,370);
ie_copiar_peso_w		:= Wheb_assist_pck.obterParametroFuncao(924,380);
ie_copiar_altura_w		:= Wheb_assist_pck.obterParametroFuncao(924,381);
ie_copia_farm_clinica_w	:= Wheb_assist_pck.obterParametroFuncao(924,434);
ie_copia_REP_motivo_w	:= Wheb_assist_pck.obterParametroFuncao(924,496);
ie_funcao_agrupar_w		:= Wheb_assist_pck.obterParametroFuncao(924,497);
ie_inf_validade_copia_w	:= Wheb_assist_pck.obterParametroFuncao(924,523);
ie_alter_dt_prox_dose_w	:= Wheb_assist_pck.obterParametroFuncao(924,694);
ds_classif_setor_w		:= Wheb_assist_pck.obterParametroFuncao(924,699);
ie_motivo_prescr_w		:= Wheb_assist_pck.obterParametroFuncao(924,724);
 
nr_horas_copia_w := obter_param_usuario(8030, 35, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, nr_horas_copia_w);
ie_nao_liberadas_w := Obter_Param_Usuario(8030, 39, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_nao_liberadas_w);
ie_recalcular_hor_sol_w := Obter_Param_Usuario(8030, 64, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_recalcular_hor_sol_w);
 
if	((coalesce(nr_atendimento_p,0) > 0) or (VarConsisteDataFutura_w = 'S')) then 
	 
	if (coalesce(nr_atendimento_p,0) = 0) then 
		qt_hor_fut_sem_atend_w		:= coalesce(Wheb_assist_pck.obterParametroFuncao(924,1091),0);
		 
		if (qt_hor_fut_sem_atend_w > 0) then 
			qt_hora_w	:= qt_hor_fut_sem_atend_w;
		end if;
	else 
		qt_hora_w	:= Wheb_assist_pck.obterParametroFuncao(924,22);	
	end if;
	 
	qt_hora_w	:= coalesce(qt_hora_w,0);
	 
	if	((clock_timestamp() + qt_hora_w / 24) < dt_prescricao_p) then 
		--A data da prescrição não pode ser superior a #@QT_HORAS#@ horas a partir deste momento! 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(173469, 'QT_HORAS=' || qt_hora_w);
	end if;
end if;
 
if (var_pac_usu_w = 'U') then 
	begin 
	select	obter_setor_usuario(nm_usuario_p) 
	into STRICT	cd_setor_usuario_w 
	;
 
	select	count(*) 
	into STRICT	qt_registro_w 
	from	atend_paciente_unidade b where		b.cd_setor_atendimento	= cd_setor_usuario_w 
	and		b.nr_atendimento	= nr_atendimento_p LIMIT 1;
	exception 
	when others then 
		qt_registro_w	:= 0;
	end;
end if;
 
if (var_pac_usu_w = 'R') then 
	cd_setor_prescr_w	:= Obter_setor_prescr_regra(cd_perfil_p);
elsif (var_pac_usu_w = 'A') then 
	cd_setor_prescr_w		:= Obter_unidade_atendimento(nr_atendimento_p,'A','CS');
elsif (var_pac_usu_w = 'B') then 
	cd_setor_prescr_w		:= null;
elsif (var_pac_usu_w = 'U') and 
		((nr_atendimento_p > 0 AND qt_registro_w > 0) or (var_setores_usuario_w = 'S')) then 
	cd_setor_prescr_w	:=	cd_setor_usuario_w;
elsif (nr_atendimento_p > 0) then 
	cd_setor_prescr_w	:= coalesce(obter_unidade_atendimento(nr_atendimento_p,'IA','CS'), obter_unidade_atendimento(nr_atendimento_p,'A','CS'));
end if;
 
if (ie_calcula_validade_w	= 'R') then 
	ie_calcula_validade_w	:= obter_se_calcula_validade(cd_setor_prescr_w);
end if;
 
if (trunc(dt_prescricao_p) = trunc(clock_timestamp())) then 
	qt_hora_w	:= Wheb_assist_pck.obterParametroFuncao(924,23);
	qt_hora_w := coalesce(qt_hora_w,14);
	 
	if (to_char(dt_prescricao_p,'hh24') >= to_char(qt_hora_w)) then 
		--Prescrições para o mesmo dia só podem ser feitas até às #@QT_HORA#@ horas! 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(173474, 'QT_HORA=' || qt_hora_w);
	end if;
end if;
 
if (nr_atendimento_p > 0) then 
	select	dt_entrada 
	into STRICT	dt_entrada_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_p;
 
	if (dt_entrada_w > dt_prescricao_p) then 
		--A data da prescrição não pode ser menor que a data de entrada do atendimento. #@DT_ENTRADA#@ 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(173486, 'DT_ENTRADA=' || dt_entrada_w);
	end if;
end if;
 
Select	nextval('prescr_medica_seq') 
into STRICT	nr_prescricao_w
;
 
nr_nova_prescricao_p	:= nr_prescricao_w;
 
select 	coalesce(max('1'),'3') 
into STRICT	ie_origem_inf_w 
from	Medico b, 
		Usuario a where		b.ie_situacao		= 'A' 
and		a.cd_pessoa_fisica	= b.cd_pessoa_fisica 
and		a.nm_usuario		= nm_usuario_p LIMIT 1;
 
select	max(cd_pessoa_fisica) 
into STRICT	cd_prescritor_w 
from	usuario 
where	nm_usuario = nm_usuario_p;
 
begin 
Select	cd_pessoa_fisica, 
		trunc(dt_prescricao,'dd') 
into STRICT	cd_pessoa_fisica_ww, 
		dt_prescricao_ww 
from	prescr_medica 
where	nr_prescricao = nr_prescricao_p;
exception 
when others then 
	--Não existe a prescrição informada! 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(173465);
end;
 
if (nr_atendimento_p > 0) then 
	select	cd_pessoa_fisica 
	into STRICT	cd_pessoa_fisica_w 
	from	atendimento_paciente 
	where	nr_atendimento	= nr_atendimento_p;
else 
	cd_pessoa_fisica_w	:= cd_pessoa_fisica_ww;
end if;
 
dt_primeiro_horario_w	:= to_date('30/12/1899 ' || substr(dt_primeiro_horario_p,1,5),'dd/mm/yyyy hh24:mi');
 
if (cd_setor_prescr_w > 0) then 
	select	coalesce(max(ie_adep),'N') 
	into STRICT	ie_adep_w 
	from	setor_atendimento 
	where	cd_setor_atendimento = cd_setor_prescr_w;
end if;
 
if (ie_calcula_validade_w <> 'N') then 
	nr_horas_validade_w	:= obter_horas_validade_prescr(dt_primeiro_horario_w, nr_atendimento_p, ie_estender_w,null, clock_timestamp(),null);
elsif (ie_inf_validade_copia_w = 'S') and (nr_horas_validade_p IS NOT NULL AND nr_horas_validade_p::text <> '') then 
	nr_horas_validade_w := nr_horas_validade_p;
end if;
 
select	count(*) 
into STRICT	qt_medico_w 
from	medico where		cd_pessoa_fisica	= cd_medico_p LIMIT 1;
 
insert into prescr_medica( 
		nr_prescricao, 
		cd_pessoa_fisica, 
		nr_atendimento, 
		cd_medico, 
		dt_prescricao, 
		dt_atualizacao, 
		nm_usuario, 
		nm_usuario_original, 
		ds_observacao, 
		nr_horas_validade, 
		cd_motivo_baixa, 
		dt_baixa, 
		dt_primeiro_horario, 
		dt_liberacao, 
		dt_emissao_setor, 
		dt_emissao_farmacia, 
		cd_setor_atendimento, 
		dt_entrada_unidade, 
		ie_recem_nato, 
		ie_origem_inf, 
		nr_prescricao_anterior, 
		nr_prescricao_mae, 
		cd_protocolo, 
		nr_seq_protocolo, 
		nr_cirurgia, 
		nr_seq_agenda, 
		cd_estabelecimento, 
		ds_medicacao_uso, 
		cd_prescritor, 
		qt_altura_cm, 
		qt_peso, 
		ie_adep, 
		ie_prescr_emergencia, 
		ie_prescricao_alta, 
		ie_hemodialise, 
		nr_prescricoes, 
		nr_seq_transcricao, 
		ie_motivo_prescricao, 
		nr_seq_regra_copia) 
SELECT	nr_prescricao_w, 
		cd_pessoa_fisica_w, 
		CASE WHEN nr_atendimento_p=0 THEN null  ELSE nr_atendimento_p END , 
		CASE WHEN qt_medico_w=0 THEN cd_medico  ELSE cd_medico_p END , 
		dt_prescricao_p, 
		dt_prescricao_w, 
		nm_usuario_p, 
		nm_usuario_p, 
		ds_observacao, 
		coalesce(nr_horas_validade_w,24), 
		null, 
		null, 
		dt_primeiro_horario_w, 
		null, 
		null, 
		null, 
		cd_setor_prescr_w, 
		null, 
		'N', 
		ie_origem_inf_w, 
		nr_prescricao_p, 
		nr_prescricao_mae, 
		cd_protocolo, 
		nr_seq_protocolo, 
		nr_cirurgia, 
		nr_seq_agenda, 
		cd_estabelecimento, 
		ds_medicacao_uso, 
		cd_prescritor_w, 
		CASE WHEN ie_copiar_altura_w='S' THEN  obter_sinal_vital(nr_atendimento_P,obter_desc_expressao(283402))  ELSE 0 END ,	 
		CASE WHEN ie_copiar_peso_w='S' THEN  CASE WHEN ie_peso_prescr_org_w='S' THEN  qt_peso  ELSE obter_sinal_vital(nr_atendimento_P,'Peso') END   ELSE 0 END ,	 
		ie_adep_w, 
		'N', 
		'N', 
		ie_hemodialise, 
		nr_prescricoes_p, 
		CASE WHEN nr_seq_transcricao_p=0 THEN null  ELSE nr_seq_transcricao_p END , 
		ie_motivo_prescr_w, 
		CASE WHEN coalesce(nr_seq_regra_p,0)=0 THEN null  ELSE nr_seq_regra_p END  
from	prescr_medica 
where	nr_prescricao = nr_prescricao_p;
 
select	max(dt_inicio_prescr), 
		max(dt_validade_prescr) 
into STRICT	dt_inicio_prescr_w, 
		dt_validade_prescr_w 
from	prescr_medica 
where	nr_prescricao = nr_prescricao_w;
 
insert into prescr_nutricao( 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		nr_prescricao, 
		ie_delegacao_total, 
		ie_dieta_oral, 
		ie_npt, 
		ie_enteral, 
		ie_suplemento, 
		ds_observacao) 
SELECT	nextval('prescr_nutricao_seq'), 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_prescricao_w, 
		ie_delegacao_total, 
		ie_dieta_oral, 
		ie_npt, 
		ie_enteral, 
		ie_suplemento, 
		ds_observacao 
from	prescr_nutricao 
where	nr_prescricao	= nr_prescricao_p;
 
ie_exame_w	:= ie_procedimento_p;
 
commit;
 
nr_seq_material_w	:= 0;
 
select	coalesce(max(ie_considera_ADEP),'S') 
into STRICT	ie_considera_adep_w 
from	Regra_copia_rep 
where	nr_sequencia	= nr_seq_regra_p;
 
select	coalesce(max(ie_copiar),'S') 
into STRICT	ie_copia_dieta_w 
from	rep_regra_copia_crit 
where	ie_tipo_item	= 'DO' 
and		nr_seq_regra	= nr_seq_regra_p;
 
select	coalesce(max(ie_copiar),'N') 
into STRICT	ie_copia_jejum_w 
from	rep_regra_copia_crit 
where	ie_tipo_item	= 'JE' 
and		nr_seq_regra	= nr_seq_regra_p;
 
select	coalesce(max(ie_copiar),'N') 
into STRICT	ie_copiar_sup_nut_w 
from	rep_regra_copia_crit 
where	ie_tipo_item	= 'NPA' 
and		nr_seq_regra	= nr_seq_regra_p;
 
select	coalesce(max(ie_copiar),'N') 
into STRICT	ie_copiar_npt_neonatal_w 
from	rep_regra_copia_crit 
where	ie_tipo_item	= 'NPN' 
and		nr_seq_regra	= nr_seq_regra_p;
 
select	coalesce(max(ie_copiar),'S') 
into STRICT	ie_copiar_recomendacao_w 
from	rep_regra_copia_crit 
where	ie_tipo_item	= 'REC' 
and		nr_seq_regra	= nr_seq_regra_p;
 
select	coalesce(max(ie_copiar),'N') 
into STRICT	ie_copiar_bco_sangue_w 
from	rep_regra_copia_crit 
where	ie_tipo_item	= 'BS' 
and		nr_seq_regra	= nr_seq_regra_p;
 
select	coalesce(max(ie_copiar),'N') 
into STRICT	ie_copiar_gasoterapia_w 
from	rep_regra_copia_crit 
where	ie_tipo_item	= 'GAS' 
and		nr_seq_regra	= nr_seq_regra_p;
 
select	coalesce(max(ie_copiar),'N') 
into STRICT	ie_copiar_hemodialise_w 
from	rep_regra_copia_crit 
where	ie_tipo_item	= 'DIA' 
and		nr_seq_regra	= nr_seq_regra_p;
 
if (nr_horas_copia_w > 0) then 
	begin 
	dt_inicial_w	:= clock_timestamp() - nr_horas_copia_w /24;
	dt_final_w	:= clock_timestamp() + interval '1 days';
	 
	open c01 for 
	SELECT	a.nr_prescricao, 
			coalesce(a.ie_adep,'S') 
	from	prescr_medica a 
	where	coalesce(a.ie_emergencia,'N') <> 'S' 
	and		coalesce(a.dt_suspensao::text, '') = '' 
	and		((coalesce(ds_classif_setor_w::text, '') = '') or (obter_se_contido(obter_classif_setor(a.cd_setor_atendimento), ds_classif_setor_w) = 'S')) 
	and		not exists (	SELECT 1 from cirurgia b where a.nr_prescricao = b.nr_prescricao LIMIT 1) 
	and		((ie_nao_liberadas_w = 'S') or (a.dt_liberacao_medico IS NOT NULL AND a.dt_liberacao_medico::text <> '') or (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') or (a.dt_liberacao_farmacia IS NOT NULL AND a.dt_liberacao_farmacia::text <> '')) 
	and		a.nr_prescricao		<> nr_prescricao_w 
	and		a.dt_inicio_prescr between dt_inicial_w and dt_final_w 
	and		a.nr_atendimento	= nr_atendimento_p;
	end;
else 
	begin 
	open c01 for 
	SELECT	a.nr_prescricao, 
			coalesce(a.ie_adep,'S') 
	from	prescr_medica a 
	where	coalesce(ie_emergencia,'N')	<> 'S' 
	and		coalesce(a.dt_suspensao::text, '') = '' 
	and		((coalesce(ds_classif_setor_w::text, '') = '') or (obter_se_contido(obter_classif_setor(a.cd_setor_atendimento), ds_classif_setor_w) = 'S')) 
	and		not exists (	SELECT 1 from cirurgia b where a.nr_prescricao = b.nr_prescricao LIMIT 1) 
	and		((ie_nao_liberadas_w = 'S') or (a.dt_liberacao_medico IS NOT NULL AND a.dt_liberacao_medico::text <> '') or (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') or (a.dt_liberacao_farmacia IS NOT NULL AND a.dt_liberacao_farmacia::text <> '')) 
	and		a.nr_prescricao	<> nr_prescricao_w 
	and		a.nr_atendimento	= nr_atendimento_p 
	and		a.nr_prescricao = nr_prescricao_p;
	end;
end if;
 
loop 
fetch c01 into 
	nr_prescricao_orig_w, 
	ie_adep_ww;
EXIT WHEN NOT FOUND; /* apply on c01 */
 
	if (ie_considera_adep_w = 'S') or (ie_adep_ww <> 'N') then 
		if (ie_copia_dieta_w = 'S') then 
			CALL REP_copia_dieta(nr_prescricao_orig_w, nr_prescricao_w, dt_prescricao_w, nr_seq_regra_p, nm_usuario_p);
		end if;
		if (ie_copia_jejum_w = 'S') then 
			CALL REP_copia_jejum(nr_prescricao_orig_w, nr_prescricao_w, nr_seq_regra_p, nm_usuario_p);
		end if;
		if (ie_copiar_sup_nut_w = 'S') then 
			CALL REP_copia_sup_nutricional(nr_prescricao_orig_w, nr_prescricao_w, nr_seq_regra_p, nm_usuario_p);
		end if;
		if (ie_copiar_npt_neonatal_w = 'S') then 
			CALL REP_copia_npt_neonatal(nr_prescricao_orig_w, nr_prescricao_w, nr_seq_regra_p, nm_usuario_p);
		end if;
		CALL REP_copia_npt_pediatrica(nr_prescricao_orig_w, nr_prescricao_w, nr_seq_regra_p, nm_usuario_p);
		CALL REP_copia_suplemento(nr_prescricao_orig_w, nr_prescricao_w, dt_prescricao_p, nr_seq_regra_p, nr_seq_material_w, nm_usuario_p);
		CALL rep_copia_npt_adulta_prot(nr_prescricao_orig_w, nr_prescricao_w, nr_seq_regra_p, nm_usuario_p);
		CALL REP_copia_suporte_nut(nr_prescricao_orig_w, nr_prescricao_w, dt_prescricao_p, nr_seq_regra_p, nr_seq_material_w, nm_usuario_p);
		CALL REP_copia_solucao(nr_prescricao_orig_w, nr_prescricao_w, nr_seq_regra_p, ie_copia_agora_w, dt_prescricao_w, ie_nao_padronizado_w, VarCopiaJust_w, nr_seq_material_w, nm_usuario_p);
		if (ie_copiar_recomendacao_w = 'S') then 
			CALL REP_copia_recomendacao(nr_prescricao_orig_w, nr_prescricao_w, nr_seq_regra_p, dt_prescricao_w,nm_usuario_p);
		end if;
		if (ie_copiar_bco_sangue_w = 'S') then 
			nr_seq_bco_w := REP_copia_banco_sangue(nr_prescricao_orig_w, nr_prescricao_w, VarBancoSangue_w, nr_seq_bco_w, nr_seq_regra_p, nm_usuario_p);
		end if;
		if (ie_copiar_gasoterapia_w = 'S') then 
			CALL REP_copia_gasoterapia(nr_prescricao_orig_w, nr_prescricao_w, dt_prescricao_w, nr_seq_regra_p, nr_seq_material_w, nm_usuario_p);
		end if;
		CALL REP_copia_avaliacao_cito(nr_prescricao_orig_w, nr_prescricao_w, nm_usuario_p);
		CALL REP_copia_histopatologia(nr_prescricao_orig_w, nr_prescricao_w, nm_usuario_p);
		CALL REP_copia_procedimento( nr_prescricao_orig_w, nr_prescricao_w, nr_seq_regra_p, clock_timestamp(), clock_timestamp(), ds_ind_clinica_p, cd_perfil_p, cd_prescritor_w, 
					cd_setor_prescr_w, VarBancoSangue_w, ie_procedimento_p, ie_exame_w, nr_seq_bco_w, nr_seq_material_w, nm_usuario_p);
		cd_medic_posicionar_w := REP_copia_medicamento(nr_prescricao_w, nr_seq_regra_p, nr_prescricoes_p, nr_prescricao_orig_w, ie_procedimento_p, dt_prescricao_p, substr(dt_primeiro_horario_p,1,5), ie_ajustar_qt_p, cd_perfil_p, nr_seq_material_w, nm_usuario_p, 8030, cd_medic_posicionar_w);
		if (coalesce(cd_medic_posicionar_p::text, '') = '') then 
			cd_medic_posicionar_p	:= cd_medic_posicionar_w;
		end if;
		CALL REP_copia_prescr_proc_glic(nr_prescricao_orig_w, nr_prescricao_w, nm_usuario_p);
		if (ie_copiar_hemodialise_w = 'S') then 
			CALL REP_copia_hemodialise(nr_prescricao_orig_w, nr_prescricao_w, dt_prescricao_p, nr_seq_regra_p, nr_seq_material_w, nm_usuario_p);
		end if;
		 
		select	coalesce(max(nr_sequencia),0) 
		into STRICT	nr_seq_material_w 
		from	prescr_material 
		where	nr_prescricao	= nr_prescricao_w;
		 
		nr_prescrioes_ww := nr_prescrioes_ww||','||nr_prescricao_orig_w;
	end if;
end loop;
close c01;
 
CALL Reordenar_Medicamento(nr_prescricao_w);
CALL Reordenar_Materiais_Pos_Copia(nr_prescricao_w);
 
open c05;
loop 
fetch c05 into 
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on c05 */
	ds_erro_w := consistir_prescr_material(nr_prescricao_w, nr_sequencia_w, nm_usuario_p, cd_perfil_w, ds_erro_w);
end loop;
close c05;
 
if (ie_hora_sne_w = 'S') then 
	open c07;
	loop 
	fetch c07 into 
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on c07 */
		update	prescr_material 
		set		hr_prim_horario	 = NULL, 
				ds_horarios	 = NULL 
		where	nr_sequencia	= nr_sequencia_w 
		and		nr_prescricao	= nr_prescricao_w;
	end loop;
	close c07;
end if;
 
if (ie_horario_sem_apraso_w = 'S') then 
	update	prescr_material 
	set		hr_prim_horario	 = NULL, 
			ds_horarios	 = NULL 
	where	coalesce(ie_sem_aprazamento,'N')	= 'S' 
	and		ie_agrupador	= 1 
	and		nr_prescricao	= nr_prescricao_w;
end if;
 
ds_horarios_w	:= '';
 
open C08;
loop 
fetch C08 into 
	nr_seq_Solucao_w, 
	nr_etapas_w, 
	qt_tempo_aplicacao_w, 
	ie_esquema_alternado_w, 
	hr_prim_horario_w, 
	nr_prescr_ant_w, 
	ie_se_necessario_w, 
	ie_acm_w, 
	ie_agora_w, 
	ie_solucao_pca_w, 
	nr_seq_anterior_w, 
	ie_hemodialise_w;
EXIT WHEN NOT FOUND; /* apply on C08 */
	begin 
	 
	open C13;
	loop 
	fetch C13 into	 
		ie_horario_rep_ant_w;
	EXIT WHEN NOT FOUND; /* apply on C13 */
		ie_horario_rep_ant_w := ie_horario_rep_ant_w;
	end loop;
	close C13;
	 
	if (ie_horario_rep_ant_w = 'S') then 
			 
		select	coalesce(hr_prim_horario,''), 
				coalesce(cd_intervalo,'XPTO') 
		into STRICT	hr_prim_hora_solucao_w, 
				cd_intervalo_w 
		from	prescr_solucao 
		where	nr_seq_solucao = nr_seq_anterior_w 
		and		nr_prescricao = nr_prescr_ant_w;
		 
		if (hr_prim_hora_solucao_w = '') then 
			hr_prim_hora_solucao_w		:= obter_primeiro_horario(cd_intervalo_w,nr_prescr_ant_w,0,null);
		end if;
		 
		select	max(ie_operacao) 
		into STRICT	ie_operacao_w 
		from	intervalo_prescricao 
		where	cd_intervalo	= cd_intervalo_w;
 
		if (ie_operacao_w in ('F','V')) then 
			hr_prim_hora_solucao_w	:= obter_primeiro_horario(cd_intervalo_w,nr_prescr_ant_w,0,null);
		end if;
		 
		 
		dt_prim_hor_sol_w := To_date(to_char(dt_inicio_prescr_w,'dd/mm/yyyy ')||hr_prim_hora_solucao_w, 'dd/mm/yyyy hh24:mi');
		if not(obter_se_lib_prescr_vig_disp(dt_inicio_prescr_w, dt_validade_prescr_w, to_date(to_char(clock_timestamp(), 'dd/mm/yyyy ')||hr_prim_hora_solucao_w, 'dd/mm/yyyy hh24:mi')) = 'S') and (ie_recalcular_hor_sol_w = 'S') then 
			dt_prim_hor_sol_w := dt_inicio_prescr_w;
		elsif (dt_prim_hor_sol_w < dt_inicio_prescr_w )then 
			dt_prim_hor_sol_w := dt_prim_hor_sol_w +1;
		end if;	
		 
		SELECT * FROM Calcula_Horarios_Etapas(dt_prim_hor_sol_w, nr_etapas_w, dividir(qt_tempo_aplicacao_w,nr_etapas_w), nm_usuario_p, 'N', qt_tempo_aplicacao_w, ds_horarios_w, ds_horarios_2w, 'N', ie_hemodialise_w) INTO STRICT ds_horarios_w, ds_horarios_2w;
 
		ds_horarios_w	:= ds_horarios_w || ds_horarios_2w;
		 
		if (ie_se_necessario_w = 'S') then 
			select	coalesce(max(b.qt_se_necessario),0), 
					coalesce(max(b.ie_mesmo_zerado),'N') 
			into STRICT	nr_ocorrencia_w, 
					ie_mesmo_zerado_w 
			from	intervalo_prescricao a, 
					intervalo_setor b 
			where	a.cd_intervalo 		= b.cd_intervalo 
			and		((b.cd_material = cd_material_w) or (coalesce(b.cd_material::text, '') = '')) 
			and		((b.ie_via_aplicacao = coalesce(ie_via_aplicacao_w,b.ie_via_aplicacao)) or (coalesce(b.ie_via_aplicacao::text, '') = '')) 
			and		((b.cd_unidade_basica = coalesce(obter_unid_atend_setor_atual(nr_atendimento_p,cd_setor_atendimento_w,'UB'),b.cd_unidade_basica)) or (coalesce(b.cd_unidade_basica::text, '') = '')) 
			and		coalesce(b.cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w 
			and		coalesce(b.cd_estab, cd_estabelecimento_w)			= cd_estabelecimento_w 
			and		a.cd_intervalo 		= cd_intervalo_w;
 
			if (coalesce(nr_ocorrencia_w,0) = 0) and (ie_mesmo_zerado_w = 'N') then 
				select	coalesce(max(qt_se_necessario),1) 
				into STRICT	nr_ocorrencia_w 
				from	intervalo_prescricao 
				where	cd_intervalo	= cd_intervalo_w;
			end if;
 
			ds_horarios_w	:= 'SN';
 
		elsif (ie_acm_w = 'S') then 
			select	coalesce(max(b.qt_se_necessario),0), 
					coalesce(max(b.ie_mesmo_zerado),'N') 
			into STRICT	nr_ocorrencia_w, 
					ie_mesmo_zerado_w 
			from	intervalo_prescricao a, 
					intervalo_setor b 
			where	a.cd_intervalo 		= b.cd_intervalo 
			and		((b.cd_material = cd_material_w) or (coalesce(b.cd_material::text, '') = '')) 
			and		((b.ie_via_aplicacao = coalesce(ie_via_aplicacao_w,b.ie_via_aplicacao)) or (coalesce(b.ie_via_aplicacao::text, '') = '')) 
			and		((b.cd_unidade_basica = coalesce(obter_unid_atend_setor_atual(nr_atendimento_p,cd_setor_atendimento_w,'UB'),b.cd_unidade_basica)) or (coalesce(b.cd_unidade_basica::text, '') = '')) 
			and		coalesce(b.cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w 
			and		coalesce(b.cd_estab, cd_estabelecimento_w)			= cd_estabelecimento_w 
			and		a.cd_intervalo 		= cd_intervalo_w;
			 
			if (coalesce(nr_ocorrencia_w,0) = 0) and (ie_mesmo_zerado_w = 'N') then 
		 
				select	coalesce(max(qt_se_necessario),1) 
				into STRICT	nr_ocorrencia_w 
				from	intervalo_prescricao 
				where	cd_intervalo	= cd_intervalo_w;
			end if;
 
			ds_horarios_w	:= 'ACM';
		end if;
		 
		 
		if (ds_horarios_w <> 'ACM') and (ds_horarios_w <> 'SN') then 
			update	prescr_solucao 
			set		ds_horarios	= substr(ds_horarios_w,1,255), 
					hr_prim_horario	= to_char(dt_prim_hor_sol_w,'hh24:mi') 
			where	nr_seq_solucao 	 = nr_seq_solucao_w 
			and		nr_prescricao	 = nr_prescricao_w;
		else 
			update	prescr_solucao 
			set		ds_horarios	= substr(ds_horarios_w,1,255) 
			where	nr_seq_solucao	= nr_seq_Solucao_w 
			and		nr_prescricao	= nr_prescricao_w;
		end if;	
		 
	else 
		dt_prim_hor_sol_w := To_date(to_char(dt_inicio_prescr_w,'dd/mm/yyyy ')||hr_prim_horario_w, 'dd/mm/yyyy hh24:mi');
		if not(obter_se_lib_prescr_vig_disp(dt_inicio_prescr_w, dt_validade_prescr_w, to_date(to_char(clock_timestamp(), 'dd/mm/yyyy ')||hr_prim_horario_w, 'dd/mm/yyyy hh24:mi')) = 'S') and (ie_recalcular_hor_sol_w = 'S') then 
			dt_prim_hor_sol_w := dt_inicio_prescr_w;
		elsif (dt_prim_hor_sol_w < dt_inicio_prescr_w )then 
			dt_prim_hor_sol_w := dt_prim_hor_sol_w +1;
		end if;	
		SELECT * FROM Calcula_Horarios_Etapas(dt_prim_hor_sol_w, nr_etapas_w, dividir(qt_tempo_aplicacao_w,nr_etapas_w), nm_usuario_p, 'N', qt_tempo_aplicacao_w, ds_horarios_w, ds_horarios_2w, 'N', ie_hemodialise_w) INTO STRICT ds_horarios_w, ds_horarios_2w;
 
		update	prescr_solucao 
		set		ds_horarios	= substr(ds_horarios_w,1,255), 
				hr_prim_horario	= to_char(dt_prim_hor_sol_w,'hh24:mi') 
		where	nr_seq_solucao	= nr_seq_Solucao_w 
		and		nr_prescricao	= nr_prescricao_w;
		 
	end if;
	commit;
	end;
end loop;
close C08;
 
open C09;
loop 
fetch C09 into 
	nr_sequencia_w, 
	qt_hora_intervalo_ww, 
	dt_proxima_dose_w, 
	nr_sequencia_orig_w, 
	nr_prescricao_orig_w, 
	cd_material_w, 
	cd_intervalo_w, 
	hr_prim_horario_w;
EXIT WHEN NOT FOUND; /* apply on C09 */
	begin 
	 
	if (qt_hora_intervalo_ww > 24) then 
		if (dt_proxima_dose_w IS NOT NULL AND dt_proxima_dose_w::text <> '') and (dt_proxima_dose_w not between dt_inicio_prescr_w and dt_validade_prescr_w) then 
			begin 
			qt_dia_prim_hor_w := to_char(dt_inicio_prescr_w,'dd') - to_char(dt_proxima_dose_w,'dd');
			 
			if (qt_dia_prim_hor_w not between 0 and 1) then 
				qt_dia_prim_hor_w	:= 0;
			end if;
			 
			update	prescr_material 
			set		ie_administrar	= 'N', 
					hr_prim_horario	= to_char(dt_proxima_dose_w,'hh24:mi'), 
					ds_horarios	= to_char(dt_proxima_dose_w,'hh24:mi'), 
					qt_dia_prim_hor = qt_dia_prim_hor_w 
			where	nr_sequencia	= nr_sequencia_w 
			and		nr_prescricao	= nr_prescricao_w;
			end;
		end if;
 
		dt_proxima_dose_orig_w	:= dt_proxima_dose_w;
		dt_horario_w			:= null;
			 
		if (nr_sequencia_orig_w IS NOT NULL AND nr_sequencia_orig_w::text <> '') then 
			 
			select	max(dt_proxima_dose), 
					coalesce(max(hr_prim_horario), hr_prim_horario_w) 
			into STRICT	dt_proxima_dose_w, 
					hr_prim_horario_w 
			from	prescr_material 
			where	/*nvl(hr_prim_horario, hr_prim_horario_w) = hr_prim_horario_w 
			and		*/
cd_intervalo = cd_intervalo_w 
			and		cd_material = cd_material_w 
			and		nr_sequencia = nr_sequencia_orig_w 
			and		nr_prescricao = nr_prescricao_orig_w;
			 
			hr_prim_horario_w	:= coalesce(hr_prim_horario_w, to_char(dt_inicio_prescr_w, 'hh24:mi'));
			 
			if (coalesce(dt_proxima_dose_w::text, '') = '') then 
				dt_proxima_dose_w	:= dt_proxima_dose_orig_w;
				 
				select	max(dt_horario) 
				into STRICT	dt_horario_w 
				from	prescr_mat_hor 
				where	nr_seq_material	= nr_sequencia_w 
				and		nr_prescricao	= nr_prescricao_w;
			else 
				 
				update	prescr_material 
				set		dt_proxima_dose	= dt_proxima_dose_w, 
						dt_administrar 	= dt_proxima_dose_w 
				where	nr_sequencia	= nr_sequencia_w 
				and		nr_prescricao	= nr_prescricao_w;
			end if;
		else 
		 
			select	max(dt_horario) 
			into STRICT	dt_horario_w 
			from	prescr_mat_hor 
			where	nr_seq_material	= nr_sequencia_w 
			and		nr_prescricao	= nr_prescricao_w;
		 
			dt_proxima_dose_w	:= dt_horario_w;
		end if;
		 
		if	((coalesce(dt_proxima_dose_w::text, '') = '') or (dt_proxima_dose_w between dt_inicio_prescr_w and dt_validade_prescr_w)) then 
			begin 
			 
			if (dt_proxima_dose_w IS NOT NULL AND dt_proxima_dose_w::text <> '') then 
				if (dt_inicio_prescr_w > dt_proxima_dose_w) then 
					qt_dia_prim_hor_w := to_char(dt_inicio_prescr_w,'dd') - to_char(dt_proxima_dose_w,'dd');
				else 
					qt_dia_prim_hor_w := to_char(dt_proxima_dose_w,'dd') - to_char(dt_inicio_prescr_w,'dd');
				end if;
			end if;
			 
			if (qt_dia_prim_hor_w not between 0 and 1) then 
				qt_dia_prim_hor_w	:= 0;
			end if;
			 
			dt_proxima_dose_w	:= coalesce(dt_horario_w, dt_proxima_dose_w) + qt_hora_intervalo_ww/24;
			 
			update	prescr_material 
			set		hr_prim_horario	= to_char(dt_proxima_dose_w,'hh24:mi'), 
					ds_horarios	= to_char(dt_proxima_dose_w,'hh24:mi '), 
					dt_proxima_dose	= dt_proxima_dose_w, 
					dt_administrar 	= dt_proxima_dose_w, 
					ie_administrar	 = NULL, 
					qt_dia_prim_hor	= qt_dia_prim_hor_w 
			where	nr_sequencia	= nr_sequencia_w 
			and		nr_prescricao	= nr_prescricao_w;
			 
			end;
		elsif (ie_alter_dt_prox_dose_w = 'S') and (dt_proxima_dose_w IS NOT NULL AND dt_proxima_dose_w::text <> '') and (dt_proxima_dose_w < dt_inicio_prescr_w) then 
			begin 
			 
			if	((dt_horario_w IS NOT NULL AND dt_horario_w::text <> '') and (dt_horario_w	>= dt_inicio_prescr_w) and (dt_horario_w	< dt_validade_prescr_w)) then 
				dt_proxima_dose_w	:= dt_horario_w + qt_hora_intervalo_ww/24;
			else 
				dt_proxima_dose_w	:= dt_inicio_prescr_w + qt_hora_intervalo_ww/24;
			end if;	
			 
			qt_dia_prim_hor_w := to_char(dt_inicio_prescr_w,'dd') - to_char(dt_proxima_dose_w,'dd');
 
			if (qt_dia_prim_hor_w not between 0 and 1) then 
				qt_dia_prim_hor_w	:= 0;
			end if;
		 
			update	prescr_material 
			set		hr_prim_horario = to_char(dt_proxima_dose_w, 'hh24:mi'), 
					dt_proxima_dose	= dt_proxima_dose_w, 
					dt_administrar 	= dt_proxima_dose_w, 
					ds_horarios		= to_char(dt_proxima_dose_w, 'hh24:mi'), 
					qt_dia_prim_hor = qt_dia_prim_hor_w, 
					ie_administrar	 = NULL 
			where	nr_sequencia	= nr_sequencia_w 
			and		nr_prescricao	= nr_prescricao_w;
			 
			end;		
		elsif (dt_proxima_dose_w IS NOT NULL AND dt_proxima_dose_w::text <> '') then 
			begin 
			 
			qt_dia_prim_hor_w := to_char(dt_inicio_prescr_w,'dd') - to_char(dt_proxima_dose_w,'dd');
 
			if (qt_dia_prim_hor_w not between 0 and 1) then 
				qt_dia_prim_hor_w	:= 0;
			end if;
			 
			update	prescr_material 
			set		ie_administrar	= 'N', 
					ie_regra_disp	= 'N', 
					qt_dia_prim_hor	= qt_dia_prim_hor_w 
			where	nr_sequencia	= nr_sequencia_w 
			and		nr_prescricao	= nr_prescricao_w;
 
			update	prescr_material 
			set		ie_administrar		= 'N', 
					ie_regra_disp		= 'N' 
			where	nr_sequencia_diluicao	= nr_sequencia_w 
			and		nr_prescricao		= nr_prescricao_w;
 
			update	prescr_mat_hor 
			set		ie_situacao	= 'I' 
			where	nr_seq_material	= nr_sequencia_w 
			and		nr_prescricao	= nr_prescricao_w;
			 
			update	prescr_mat_hor 
			set		ie_situacao	= 'I' 
			where	nr_seq_superior	= nr_sequencia_w 
			and		nr_prescricao	= nr_prescricao_w;
			 
			end;
		end if;
	elsif (ie_alter_dt_prox_dose_w = 'S') then 
			dt_proxima_dose_orig_w	:= dt_proxima_dose_w;
			dt_horario_w			:= null;
				 
			if (nr_sequencia_orig_w IS NOT NULL AND nr_sequencia_orig_w::text <> '') then 
				 
				hr_prim_horario_w	:= coalesce(hr_prim_horario_w, to_char(dt_inicio_prescr_w, 'hh24:mi'));
				 
				select	max(dt_proxima_dose) 
				into STRICT	dt_proxima_dose_w 
				from	prescr_material 
				where	coalesce(hr_prim_horario, hr_prim_horario_w) = hr_prim_horario_w 
				and		cd_intervalo = cd_intervalo_w 
				and		cd_material = cd_material_w 
				and		nr_sequencia = nr_sequencia_orig_w 
				and		nr_prescricao = nr_prescricao_orig_w;
				 
				if (coalesce(dt_proxima_dose_w::text, '') = '') then 
					dt_proxima_dose_w	:= dt_proxima_dose_orig_w;
					 
					select	max(dt_horario) 
					into STRICT	dt_horario_w 
					from	prescr_mat_hor 
					where	nr_seq_material	= nr_sequencia_w 
					and		nr_prescricao	= nr_prescricao_w;
				else 
					 
					update	prescr_material 
					set		dt_proxima_dose	= dt_proxima_dose_w, 
							dt_administrar 	= dt_proxima_dose_w 
					where	nr_sequencia	= nr_sequencia_w 
					and		nr_prescricao	= nr_prescricao_w;
				end if;
			else 
			 
				select	max(dt_horario) 
				into STRICT	dt_horario_w 
				from	prescr_mat_hor 
				where	nr_seq_material	= nr_sequencia_w 
				and		nr_prescricao	= nr_prescricao_w;
			 
				dt_proxima_dose_w	:= dt_horario_w;
			end if;
	 
			if (dt_proxima_dose_w IS NOT NULL AND dt_proxima_dose_w::text <> '') and (dt_proxima_dose_w < dt_inicio_prescr_w) then 
				begin 
				 
				if	((dt_horario_w IS NOT NULL AND dt_horario_w::text <> '') and (dt_horario_w	>= dt_inicio_prescr_w) and (dt_horario_w	< dt_validade_prescr_w)) then 
					dt_proxima_dose_w	:= dt_horario_w + qt_hora_intervalo_ww/24;
				else 
					dt_proxima_dose_w	:= dt_inicio_prescr_w + qt_hora_intervalo_ww/24;
				end if;	
					 
				hr_prim_horario_w	:= to_char(dt_proxima_dose_w, 'hh24:mi');
				 
				select	max(ie_via_aplicacao), 
						max(qt_unitaria), 
						max(nr_ocorrencia), 
						max(ie_origem_inf), 
						max(cd_unidade_medida_dose), 
						max(qt_material), 
						max(qt_total_dispensar), 
						coalesce(max(ie_se_necessario), 'N'), 
						coalesce(max(ie_acm), 'N') 
				into STRICT	ie_via_aplicacao_w, 
						qt_unitaria_w, 
						nr_ocorrencia_w, 
						ie_origem_inf_w, 
						cd_unidade_medida_dose_w, 
						qt_material_w, 
						qt_total_dispensar_w, 
						ie_se_necessario_w, 
						ie_acm_w 
				from	prescr_material 
				where	nr_sequencia = nr_sequencia_w 
				and		nr_prescricao = nr_prescricao_w;
					 
				SELECT * FROM Obter_Quant_Dispensar(cd_estabelecimento_w, cd_material_w, nr_prescricao_w, nr_sequencia_w, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, 0, nr_ocorrencia_w, '', ie_origem_inf_w, cd_unidade_medida_dose_w, 1, qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w;
				 
				qt_dia_prim_hor_w	:= 0;
				if (hr_prim_horario_w <> '') and (hr_prim_horario_w <> ' : ') and (hr_prim_horario_w < to_char(dt_inicio_prescr_w,'hh24:mi')) then 
					qt_dia_prim_hor_w	:= 1;
				end if;
				 
				update	prescr_material 
				set 	hr_prim_horario		= hr_prim_horario_w, 
						dt_proxima_dose		= dt_proxima_dose_w, 
						dt_administrar		= dt_proxima_dose_w, 
						ds_horarios			= to_char(dt_proxima_dose_w, 'hh24:mi'), 
						nr_ocorrencia		= nr_ocorrencia_w, 
						qt_total_dispensar	= qt_total_dispensar_w, 
						qt_material			= coalesce(qt_material_w,1), 
						ie_regra_disp		= CASE WHEN coalesce(ie_regra_disp,'X')='D' THEN  ie_regra_disp  ELSE ie_regra_disp_w END , 
						qt_dia_prim_hor		= qt_dia_prim_hor_w 
				where	nr_sequencia		= nr_sequencia_w 
				and		nr_prescricao 		= nr_prescricao_w;
				 
				end;
			end if;
	end if;
	end;
end loop;
close C09;
 
/*Update para chamar a trigger da prescr_solucao para ajustar caso o volume da etapa estiver zerada.*/
 
update	prescr_solucao 
set		dt_atualizacao	= dt_atualizacao 
where	nr_prescricao	= nr_prescricao_w;
 
update	prescr_medica 
set		ds_observacao_copia = 	Wheb_mensagem_pck.get_texto(306080, 'DT_COPIA=' || to_char(clock_timestamp(),'dd/mm/yyyy hh24:mi:ss') || ';' || 
																	'FUNCAO_ATIVA=' || obter_funcao_ativa || ';' || 
																	'NR_PRESCRICOES=' || nr_prescrioes_ww || ';' || 
																	'CALL_STACK=' || substr(dbms_utility.format_call_stack,1,2000)) 
where	nr_prescricao = nr_prescricao_w;
 
commit;
 
nr_nova_prescricao_p	:= nr_prescricao_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vipe_copia_prescricao_regra ( nr_prescricao_p bigint, nr_atendimento_p bigint, nr_seq_regra_p bigint, nm_usuario_p text, cd_medico_p text, dt_prescricao_p timestamp, ie_procedimento_p text, nr_prescricoes_p text, dt_primeiro_horario_p text, ie_ajustar_qt_p text, cd_perfil_P bigint, ie_agrupamento_p bigint, ds_ind_clinica_p text, hr_prescr_inicial_p text, hr_prescr_final_p text, dt_procedimento_p timestamp, nr_horas_validade_p bigint, nr_seq_transcricao_p bigint default 0, nr_nova_prescricao_p INOUT bigint DEFAULT NULL, cd_medic_posicionar_p INOUT bigint DEFAULT NULL) FROM PUBLIC;

