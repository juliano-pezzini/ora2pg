-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_identificacao_estip ( nr_seq_contrato_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_cgc_estipulante_w		varchar(14);
nr_seq_regra_w			bigint;
cd_atual_w			bigint;
cd_atual_ww			bigint	:= null;
cd_inicial_w			bigint;
cd_final_w			bigint;
ie_valor_valido_w		varchar(1)	:= 'N';
ie_tipo_pessoa_w		varchar(2);
cd_operadora_empresa_w		bigint;
ie_gerar_codigo_w		varchar(1)	:= 'S';
qt_registros_w			bigint;
cd_fixo_w			bigint;
ie_abrangencia_w		varchar(3);
ie_abrangencia_ww		varchar(3);
qt_registros_pj_w		bigint;
nr_seq_plano_w			bigint;
ie_novo_codigo_emp_pj_w		pls_parametros.ie_novo_codigo_emp_pj%type;
ie_tipo_contratacao_w		pls_plano.ie_tipo_contratacao%type;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_carteira_controle_iden
	where	((ie_tipo_pessoa = ie_tipo_pessoa_w) or (ie_tipo_pessoa = 'A'))
	and	ie_situacao	= 'A'
	and	ie_tipo_regra	= 'E'
	and	coalesce(ie_abrangencia,coalesce(ie_abrangencia_w,'0'))	= coalesce(ie_abrangencia_w,'0')
	and	cd_estabelecimento	= cd_estabelecimento_p
	and	((ie_tipo_contrato = 'O') or (coalesce(ie_tipo_contrato::text, '') = ''))
	and	coalesce(nr_seq_plano,coalesce(nr_seq_plano_w,0)) = coalesce(nr_seq_plano_w,0)
	and	((coalesce(ie_tipo_contratacao::text, '') = '') or (ie_tipo_contratacao = ie_tipo_contratacao_w))
	order by CASE WHEN coalesce(nr_seq_plano::text, '') = '' THEN -1  ELSE 1 END ,
		CASE WHEN coalesce(ie_abrangencia::text, '') = '' THEN -1  ELSE 1 END ,
		ie_tipo_pessoa,
		ie_tipo_contratacao,
		ie_tipo_contrato;


BEGIN

select	cd_operadora_empresa,
	cd_cgc_estipulante,
	CASE WHEN coalesce(cd_pf_estipulante::text, '') = '' THEN 'PJ'  ELSE 'PF' END
into STRICT	cd_atual_ww,
	cd_cgc_estipulante_w,
	ie_tipo_pessoa_w
from	pls_contrato
where	nr_sequencia	= nr_seq_contrato_p;

begin
select 	coalesce(ie_novo_codigo_emp_pj,'N')
into STRICT 	ie_novo_codigo_emp_pj_w
from  	pls_parametros
where  	cd_estabelecimento = cd_estabelecimento_p;
exception
when others then
	ie_novo_codigo_emp_pj_w := 'N';
end;


if (coalesce(cd_atual_ww::text, '') = '') then
	begin
	select	a.ie_abrangencia, --informa qual a abrangencia do produto
		a.nr_sequencia,
		a.ie_tipo_contratacao
	into STRICT	ie_abrangencia_w,
		nr_seq_plano_w,
		ie_tipo_contratacao_w
	from	pls_plano		a,
		pls_contrato_plano	b
	where	b.nr_seq_plano		= a.nr_sequencia
	and	b.nr_seq_contrato	= nr_seq_contrato_p
	and	b.nr_sequencia		= (	SELECT	max(nr_sequencia)
						from	pls_contrato_plano x
						where	x.nr_seq_contrato = b.nr_seq_contrato);
	exception
	when others then
		nr_seq_plano_w 		:= null;
		ie_abrangencia_w	:= null;
		ie_tipo_contratacao_w	:= null;
	end;
	
	open C01;
	loop
	fetch C01 into
		nr_seq_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
	
	if (coalesce(nr_seq_regra_w,0) <> 0) then
		select	cd_atual,
			cd_inicial,
			cd_final,
			cd_fixo,
			ie_abrangencia
		into STRICT	cd_atual_w,
			cd_inicial_w,
			cd_final_w,
			cd_fixo_w,
			ie_abrangencia_ww
		from	pls_carteira_controle_iden
		where	nr_sequencia	= nr_seq_regra_w;
		
		if (ie_tipo_pessoa_w	= 'PJ') then
			if (ie_novo_codigo_emp_pj_w = 'N') then
				begin
				select	max(cd_operadora_empresa)
				into STRICT	cd_operadora_empresa_w
				from	pessoa_juridica
				where	cd_cgc	= cd_cgc_estipulante_w;
				
				if (coalesce(cd_operadora_empresa_w,0) > 0) then
					ie_gerar_codigo_w	:= 'N';
					cd_atual_ww		:= cd_operadora_empresa_w;
				end if;
				end;
			end if;
		end if;
		
		if (ie_gerar_codigo_w	= 'S') then
			if (coalesce(cd_fixo_w,-999) <> -999) then
				cd_atual_ww	:= cd_fixo_w;
			else
				if (coalesce(cd_atual_w,0)	= 0) then
					cd_atual_ww	:= cd_inicial_w;
				else
					cd_atual_ww	:= cd_atual_w + 1;
				end if;
				
				--Verificar se o valor nao esta sendo utilizado em outros contratos
				while(ie_valor_valido_w = 'N') loop
					begin
					if (cd_atual_ww < cd_inicial_w) then
						cd_atual_ww	:= cd_inicial_w;
					end if;
					
					select	count(1)
					into STRICT	qt_registros_w
					from	pls_contrato
					where	cd_operadora_empresa	= cd_atual_ww;
					
					if (qt_registros_w = 0) then
						select	count(*)
						into STRICT	qt_registros_w
						from	pls_pj_empresa
						where	cd_empresa	= to_char(cd_atual_ww);
						
						if (qt_registros_w = 0) then
							select	count(1)
							into STRICT	qt_registros_w
							from	pessoa_juridica
							where	cd_operadora_empresa	= cd_atual_ww;
						end if;
					end if;
					
					select	count(1)
					into STRICT	qt_registros_pj_w
					from	pessoa_juridica
					where	cd_operadora_empresa	= cd_atual_ww;
					
					if (qt_registros_w > 0) or (qt_registros_pj_w > 0) then
						cd_atual_ww		:= cd_atual_ww + 1;
					else
						ie_valor_valido_w	:= 'S';
					end if;
					end;
				end loop;
				
				if	not(cd_atual_ww >= cd_inicial_w AND cd_atual_ww <= cd_final_w) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(313207);
					--Mensagem: O codigo empresarial gerado para o contrato esta fora da faixa permitida (Cod inicial e Cod final). Favor verificar o cadastro da regra na funcao OPS - Cadastro de Regras / OPS - Contratos e beneficiarios / Controle de identificacao.
				end if;
				
				update	pls_carteira_controle_iden
				set	cd_atual	= cd_atual_ww
				where	nr_sequencia	= nr_seq_regra_w;
			end if;
			
			if (coalesce(cd_cgc_estipulante_w,'0') <> '0') then
				update	pessoa_juridica
				set	cd_operadora_empresa	= cd_atual_ww
				where	cd_cgc			= cd_cgc_estipulante_w
				and	coalesce(cd_operadora_empresa::text, '') = '';
			end if;
		end if;
		
		update	pls_contrato
		set	cd_operadora_empresa	= cd_atual_ww
		where	nr_sequencia		= nr_seq_contrato_p;
	end if;
end if;

if (cd_cgc_estipulante_w IS NOT NULL AND cd_cgc_estipulante_w::text <> '') then
	CALL pls_inserir_cod_empresa(cd_cgc_estipulante_w, cd_atual_ww, nm_usuario_p, 'N');
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_identificacao_estip ( nr_seq_contrato_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

