-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_valores_ret_glosa ( nr_seq_ret_item_p bigint, nr_seq_ret_glosa_p bigint, ie_glosa_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* ie_glosa_p

0	Sim
1	Não
2	Pendente

*/
vl_guia_w		double precision;
vl_glosa_item_w		double precision;
vl_glosa_guia_w		double precision;
vl_item_w		double precision;
qt_item_w		bigint;


BEGIN

select	sum(b.vl_guia)
into STRICT	vl_guia_w
from	conta_paciente_guia b,
	convenio_retorno_item a
where	a.cd_autorizacao	= b.cd_autorizacao
and	a.nr_interno_conta	= b.nr_interno_conta
and	a.nr_sequencia		= nr_seq_ret_item_p;

if (ie_glosa_p = 0) then

	select	max(a.vl_glosa),
		max(b.vl_glosado)
	into STRICT	vl_glosa_item_w,
		vl_glosa_guia_w
	from	convenio_retorno_item b,
		convenio_retorno_glosa a
	where	b.nr_sequencia		= nr_seq_ret_item_p
	and	a.nr_seq_ret_item	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_ret_glosa_p;

	if (coalesce(vl_glosa_item_w,0) <> 0) then	/* se o item tem glosa, atualiza o valor da guia */
		vl_glosa_guia_w	:= coalesce(vl_glosa_guia_w,0) + coalesce(vl_glosa_item_w,0);

	elsif (coalesce(vl_glosa_guia_w,0) <> 0) then	/* se só a guia tem glosa, atualiza o valor do item */
		select	count(*)
		into STRICT	qt_item_w
		from	convenio_retorno_glosa a
		where	a.nr_seq_ret_item	= nr_seq_ret_item_p;

		vl_glosa_item_w	:= dividir_sem_round(vl_glosa_guia_w,qt_item_w);

	else	/* se ainda não há glosa informada, determina a glosa do item e acrescenta na guia */
		select	max(vl_item)
		into STRICT	vl_item_w
		from (SELECT	b.vl_procedimento vl_item
			from	procedimento_paciente b,
				convenio_retorno_glosa a
			where	a.nr_seq_propaci	= b.nr_sequencia
			and	a.nr_seq_ret_item	= nr_seq_ret_item_p
			and	a.nr_sequencia		= nr_seq_ret_glosa_p
			
union all

			SELECT	b.vl_material vl_item
			from	material_atend_paciente b,
				convenio_retorno_glosa a
			where	a.nr_seq_matpaci	= b.nr_sequencia
			and	a.nr_seq_ret_item	= nr_seq_ret_item_p
			and	a.nr_sequencia		= nr_seq_ret_glosa_p) alias1;

		vl_glosa_item_w	:= vl_item_w;
		vl_glosa_guia_w	:= vl_item_w;

	end if;

	update	convenio_retorno_glosa
	set	vl_glosa	= vl_glosa_item_w
	where	nr_seq_ret_item	= nr_seq_ret_item_p
	and	nr_sequencia	= nr_seq_ret_glosa_p;

	update 	convenio_retorno_item
	set	vl_glosado	= coalesce(vl_glosado,0) + coalesce(vl_glosa_guia_w,0),
		vl_pago		= coalesce(vl_guia_w,0) - coalesce(vl_glosa_guia_w,0) - coalesce(vl_amenor,0),

		ie_glosa	= 'S'
	where	nr_sequencia	= nr_seq_ret_item_p;

elsif (ie_glosa_p = 1 ) then

	select	max(a.vl_glosa),
		max(b.vl_amenor)
	into STRICT	vl_glosa_item_w,
		vl_glosa_guia_w
	from	convenio_retorno_item b,
		convenio_retorno_glosa a
	where	b.nr_sequencia		= nr_seq_ret_item_p
	and	a.nr_seq_ret_item	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_ret_glosa_p;


	if (coalesce(vl_glosa_item_w,0) <> 0) then	/* se o item tem glosa, atualiza o valor da guia */
		vl_glosa_guia_w	:= coalesce(vl_glosa_guia_w,0) + coalesce(vl_glosa_item_w,0);

	elsif (coalesce(vl_glosa_guia_w,0) <> 0) then	/* se só a guia tem glosa, atualiza o valor do item */
		select	count(*)
		into STRICT	qt_item_w
		from	convenio_retorno_glosa a
		where	a.nr_seq_ret_item	= nr_seq_ret_item_p;

		vl_glosa_item_w	:= dividir_sem_round(vl_glosa_guia_w,qt_item_w);

	else	/* se ainda não há glosa informada, determina a glosa do item e acrescenta na guia */
		select	max(vl_item)
		into STRICT	vl_item_w
		from (SELECT	b.vl_procedimento vl_item
			from	procedimento_paciente b,
				convenio_retorno_glosa a
			where	a.nr_seq_propaci	= b.nr_sequencia
			and	a.nr_seq_ret_item	= nr_seq_ret_item_p
			and	a.nr_sequencia		= nr_seq_ret_glosa_p
			
union all

			SELECT	b.vl_material vl_item
			from	material_atend_paciente b,
				convenio_retorno_glosa a
			where	a.nr_seq_matpaci	= b.nr_sequencia
			and	a.nr_seq_ret_item	= nr_seq_ret_item_p
			and	a.nr_sequencia		= nr_seq_ret_glosa_p) alias1;

		vl_glosa_item_w	:= vl_item_w;
		vl_glosa_guia_w	:= vl_item_w;

	end if;

	update	convenio_retorno_glosa
	set	vl_glosa	= vl_glosa_item_w
	where	nr_seq_ret_item	= nr_seq_ret_item_p
	and	nr_sequencia	= nr_seq_ret_glosa_p;

	update 	convenio_retorno_item
	set	vl_amenor	= coalesce(vl_amenor,0) + coalesce(vl_glosa_guia_w,0),
		vl_pago		= coalesce(vl_guia_w,0) - coalesce(vl_glosa_guia_w,0) - coalesce(vl_glosado,0),

		ie_glosa	= 'N'
	where	nr_sequencia	= nr_seq_ret_item_p;

elsif (ie_glosa_p = 2 ) then

	select	max(vl_glosa)
	into STRICT	vl_glosa_item_w
	from	convenio_retorno_glosa
	where	nr_sequencia	= nr_seq_ret_glosa_p;

	if (coalesce(vl_glosa_item_w,0) = 0) then

		select	max(vl_item)
		into STRICT	vl_glosa_item_w
		from (SELECT	b.vl_procedimento vl_item
			from	procedimento_paciente b,
				convenio_retorno_glosa a
			where	a.nr_seq_propaci	= b.nr_sequencia
			and	a.nr_seq_ret_item	= nr_seq_ret_item_p
			and	a.nr_sequencia		= nr_seq_ret_glosa_p
			
union all

			SELECT	b.vl_material vl_item
			from	material_atend_paciente b,
				convenio_retorno_glosa a
			where	a.nr_seq_matpaci	= b.nr_sequencia
			and	a.nr_seq_ret_item	= nr_seq_ret_item_p
			and	a.nr_sequencia		= nr_seq_ret_glosa_p) alias3;

	end if;

	delete 	from convenio_retorno_glosa
	where	nr_sequencia	= nr_seq_ret_glosa_p;

	update 	convenio_retorno_item
	set	vl_amenor	= coalesce(vl_amenor,0) + coalesce(vl_glosa_item_w,0),
		vl_pago		= coalesce(vl_pago,0) - coalesce(vl_glosa_item_w,0),
		ie_glosa	= 'P'
	where	nr_sequencia	= nr_seq_ret_item_p;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_valores_ret_glosa ( nr_seq_ret_item_p bigint, nr_seq_ret_glosa_p bigint, ie_glosa_p bigint, nm_usuario_p text) FROM PUBLIC;

