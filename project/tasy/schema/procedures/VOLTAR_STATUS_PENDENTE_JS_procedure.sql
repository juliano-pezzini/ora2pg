-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE voltar_status_pendente_js ( nr_prescricao_p bigint, ie_status_exame_p bigint, nr_seq_amostra_p bigint, nr_seq_prescr_p bigint, ie_considera_amostra_p text, ie_atualiza_data_p text, ie_pendente_amostra_p text, ie_retirar_lotes_p text, nr_seq_motivo_alt_status_p text, nm_usuario_p text) AS $body$
DECLARE


ie_pendente_amostra_w	varchar(1);
ie_desfaz_coleta_w	varchar(255);
ieCurvaGlic_w		varchar(1);
nr_seq_exame_w		exame_laboratorio.nr_seq_exame%type;


BEGIN


ie_pendente_amostra_w	:= 'N';
if (ie_pendente_amostra_p = 'S' and
	ie_status_exame_p < 20) then
	ie_pendente_amostra_w := 'S';
end if;

if (ie_considera_amostra_p = 'S') then
	begin
	CALL lab_voltar_etapa_amostra(
		nr_prescricao_p,
		ie_status_exame_p,
		nr_seq_amostra_p,
		nr_seq_prescr_p,
		nm_usuario_p);
	end;
else
	begin

	ieCurvaGlic_w	:= 'N';

	if (ie_considera_amostra_p = 'C') then

		select	max(nr_seq_exame)
		into STRICT	nr_seq_exame_w
		from	prescr_procedimento a
		where	a.nr_prescricao = nr_prescricao_p
		and	a.nr_sequencia = nr_seq_prescr_p;

		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ieCurvaGlic_w
		from	exame_laboratorio a
		where	a.nr_seq_superior = nr_seq_exame_w
		and	(a.nr_ordem_amostra IS NOT NULL AND a.nr_ordem_amostra::text <> '');

		if (ieCurvaGlic_w = 'S') then
			CALL Lab_voltar_etapa_amostra(nr_prescricao_p, ie_status_exame_p, nr_seq_amostra_p, nr_seq_prescr_p, nm_usuario_p);
		end if;
	end if;

	if (ieCurvaGlic_w = 'N') then

		ie_desfaz_coleta_w	:= substr(obter_valor_param_usuario(722, 253, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),1,255);

		if (ie_desfaz_coleta_w = 'S') and (ie_status_exame_p < 20) then
			begin
			update	prescr_procedimento
			set	ie_status_atend			= ie_status_exame_p,
				nm_usuario			= nm_usuario_p,
				ie_pendente_amostra		= ie_pendente_amostra_w,
				ie_amostra 			= 'N',
				dt_atualizacao			= clock_timestamp(),
				nr_seq_motivo_alt_status	= coalesce(nr_seq_motivo_alt_status_p, nr_seq_motivo_alt_status)
			where	nr_prescricao			= nr_prescricao_p
			and	nr_sequencia			= nr_seq_prescr_p
			and	ie_status_exame_p		<= ie_status_atend
			and	ie_status_exame_p		< 35;
			end;
		else
			begin
			update	prescr_procedimento
			set	ie_status_atend			= ie_status_exame_p,
				nm_usuario			= nm_usuario_p,
				ie_pendente_amostra		= ie_pendente_amostra_w,
				dt_atualizacao			= clock_timestamp(),
				nr_seq_motivo_alt_status	= coalesce(nr_seq_motivo_alt_status_p, nr_seq_motivo_alt_status)
			where	nr_prescricao			= nr_prescricao_p
			and	nr_sequencia			= nr_seq_prescr_p
			and	ie_status_exame_p		<= ie_status_atend
			and	ie_status_exame_p		< 35;
			end;
		end if;

		if (ie_atualiza_data_p = 'S') then
			begin

			update	prescr_procedimento
			set	dt_coleta			 = NULL,
				nr_seq_motivo_alt_status	= coalesce(nr_seq_motivo_alt_status_p, nr_seq_motivo_alt_status)
			where	nr_prescricao		= nr_prescricao_p
			and	nr_sequencia		= nr_seq_prescr_p
			and	ie_status_exame_p		<= ie_status_atend
			and	ie_status_exame_p		< 20;

			end;
		end if;
		end if;
	end;

	if (ie_retirar_lotes_p = 'S') then
		CALL lab_retirar_exame_lote_prescr(
			nr_prescricao_p,
			nr_seq_prescr_p,
			'N');
	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE voltar_status_pendente_js ( nr_prescricao_p bigint, ie_status_exame_p bigint, nr_seq_amostra_p bigint, nr_seq_prescr_p bigint, ie_considera_amostra_p text, ie_atualiza_data_p text, ie_pendente_amostra_p text, ie_retirar_lotes_p text, nr_seq_motivo_alt_status_p text, nm_usuario_p text) FROM PUBLIC;

