-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_area_atuacao_med ( nr_seq_plano_p bigint, nr_seq_operadora_p bigint, nr_seq_prestador_p bigint, nr_seq_cooperativa_p bigint, ie_tipo_segurado_p text, ie_area_coberta_p INOUT text) AS $body$
DECLARE


cd_municipio_prest_w		varchar(6);
sg_estado_prest_w		pls_prestador_area.sg_estado%type;
nr_seq_regiao_prest_w		bigint;
cd_municipio_plano_w		varchar(6);
sg_estado_plano_w		pls_plano_area.sg_estado%type;
nr_seq_regiao_plano_w		bigint;
cd_municipio_oper_w		varchar(6);
sg_estado_oper_w		pls_regiao_atuacao.sg_uf_municipio%type;
nr_seq_regiao_oper_w		bigint;
qt_registro_plano_w		bigint;
qt_registro_prestador_w		bigint;
qt_registro_coop_w		bigint;
cd_municipio_coop_w		varchar(10);
sg_estado_coop_w		pls_cooperativa_area.sg_estado%type;
nr_seq_regiao_coop_w		bigint;
ie_abrangencia_w		varchar(4);

/* Áreas de atuação do prestador */

c01 CURSOR FOR
	SELECT	a.cd_municipio_ibge,
		a.sg_estado,
		a.nr_seq_regiao
	from	pls_prestador_area a
	where	a.nr_seq_prestador	= nr_seq_prestador_p;

/* Áreas de atuação do plano */

c02 CURSOR FOR
	SELECT	a.cd_municipio_ibge,
		a.sg_estado,
		a.nr_seq_regiao
	from	pls_plano_area a
	where	a.nr_seq_plano	= nr_seq_plano_p;

/* Áreas de atuação da operadora */

c03 CURSOR FOR
	SELECT	a.cd_municipio_ibge,
		a.sg_uf_municipio,
		a.nr_seq_regiao
	from	pls_regiao_atuacao a
	where	a.nr_seq_operadora	= nr_seq_operadora_p;

C04 CURSOR FOR
	SELECT	a.cd_municipio_ibge,
		a.sg_estado,
		a.nr_seq_regiao
	from	pls_cooperativa_area	a
	where	a.nr_seq_cooperativa	= nr_seq_cooperativa_p;

-- Tratar a área de atuação da operadora executora do atendimento nas  transações de intercâmbio
C05 CURSOR FOR
	SELECT	a.cd_municipio_ibge,
		a.sg_estado,
		a.nr_seq_regiao
	from	pls_cooperativa_area	a
	where	a.nr_seq_cooperativa	= nr_seq_operadora_p;


BEGIN

select	count(1)
into STRICT	qt_registro_plano_w
from	pls_plano_area
where	nr_seq_plano	= nr_seq_plano_p;

select	count(1)
into STRICT	qt_registro_prestador_w
from	pls_prestador_area
where	nr_seq_prestador	= nr_seq_prestador_p;

select	count(1)
into STRICT	qt_registro_coop_w
from	pls_cooperativa_area
where	nr_seq_cooperativa	= nr_seq_cooperativa_p;


/*if	(qt_registro_plano_w > 0) and
	((qt_registro_prestador_w > 0) or (qt_registro_coop_w > 0)) then*/
ie_area_coberta_p	:= 'N';
/*else
	ie_area_coberta_p	:= 'S';
end if;*/
/* Verificar se município do prestador está na área de atuação do plano */

/*Retirado os tratamentos para usuarios eventuais*/

if (nr_seq_plano_p IS NOT NULL AND nr_seq_plano_p::text <> '') 	  and (nr_seq_prestador_p IS NOT NULL AND nr_seq_prestador_p::text <> '')  and (ie_tipo_segurado_p not in ('I','H')) then
	Open c01;
	loop
	fetch c01 into
		cd_municipio_prest_w,
		sg_estado_prest_w,
		nr_seq_regiao_prest_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		open c02;
		loop
		fetch c02 into
			cd_municipio_plano_w,
			sg_estado_plano_w,
			nr_seq_regiao_plano_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			if (cd_municipio_plano_w = cd_municipio_prest_w) then
				ie_area_coberta_p	:= 'S';
				exit;
			/*Se o município do plano esta no estado do prestador*/

			elsif (pls_obter_se_municipio_em_uf(cd_municipio_plano_w, sg_estado_prest_w)	= 'S') then
				ie_area_coberta_p	:= 'S';
				exit;
			/*Se o município do prestador esta no estado do plano*/

			elsif (pls_obter_se_municipio_em_uf(cd_municipio_prest_w, sg_estado_plano_w)	= 'S') then
				ie_area_coberta_p	:= 'S';
				exit;
			elsif (sg_estado_plano_w = sg_estado_prest_w) and (coalesce(cd_municipio_plano_w::text, '') = '') and (coalesce(cd_municipio_prest_w::text, '') = '') then
				ie_area_coberta_p	:= 'S';
				exit;
			elsif (nr_seq_regiao_plano_w = nr_seq_regiao_prest_w) then
				ie_area_coberta_p	:= 'S';
				exit;
			/* Se o município ou estado  do plano está na região do prestador */

			elsif (pls_obter_se_mun_uf_regiao(cd_municipio_plano_w,sg_estado_plano_w,nr_seq_regiao_prest_w) = 'S') then
				ie_area_coberta_p	:= 'S';
				exit;
			/* Se o município ou estado  do prestador está na região do plano */

			elsif (pls_obter_se_mun_uf_regiao(cd_municipio_prest_w,sg_estado_prest_w,nr_seq_regiao_plano_w) = 'S') then
				ie_area_coberta_p	:= 'S';
				exit;
			end if;
			end;
		end loop;
		close c02;
		end;
	end loop;
	close c01;

/* Verificar se município do prestador está na área de atuação da operadora */

elsif (nr_seq_operadora_p IS NOT NULL AND nr_seq_operadora_p::text <> '') and (nr_seq_prestador_p IS NOT NULL AND nr_seq_prestador_p::text <> '') and (ie_tipo_segurado_p not in ('I','H')) then
	open c01;
	loop
	fetch c01 into
		cd_municipio_prest_w,
		sg_estado_prest_w,
		nr_seq_regiao_prest_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		open c03;
		loop
		fetch c03 into
			cd_municipio_oper_w,
			sg_estado_oper_w,
			nr_seq_regiao_oper_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin
			ie_area_coberta_p	:= 'S';
			end;
		end loop;
		close c03;
		end;
	end loop;
	close c01;
elsif (nr_seq_plano_p IS NOT NULL AND nr_seq_plano_p::text <> '') and (nr_seq_cooperativa_p IS NOT NULL AND nr_seq_cooperativa_p::text <> '') and (coalesce(nr_seq_operadora_p::text, '') = '') and (ie_tipo_segurado_p not in ('I','H')) then
	select	coalesce(ie_abrangencia,'X')
	into STRICT	ie_abrangencia_w
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_p;
	open C04;
	loop
	fetch C04 into
		cd_municipio_coop_w,
		sg_estado_coop_w,
		nr_seq_regiao_coop_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		open c02;
		loop
		fetch c02 into
			cd_municipio_plano_w,
			sg_estado_plano_w,
			nr_seq_regiao_plano_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			if (ie_abrangencia_w	= 'N') then
				ie_area_coberta_p	:= 'S';
				exit;
			elsif (ie_abrangencia_w	= 'E') then
				if (sg_estado_plano_w = sg_estado_coop_w) then
					ie_area_coberta_p	:= 'S';
					exit;
				end if;
			elsif (ie_abrangencia_w	= 'M') then
				if (cd_municipio_plano_w = cd_municipio_coop_w) then
					ie_area_coberta_p	:= 'S';
					exit;
				end if;
			elsif (ie_abrangencia_w	= 'GM') then
				if (nr_seq_regiao_plano_w = nr_seq_regiao_coop_w) then
					ie_area_coberta_p	:= 'S';
					exit;
				/*Se o município ou estado da operadora executora está na região da cooperativa*/

				elsif (pls_obter_se_mun_uf_regiao(cd_municipio_plano_w, null, nr_seq_regiao_coop_w) = 'S') then
					ie_area_coberta_p	:= 'S';
					exit;
				/*Se o município ou estado da cooperativa está na região da operadora executora*/

				elsif (pls_obter_se_mun_uf_regiao(cd_municipio_coop_w, null, nr_seq_regiao_plano_w) = 'S') then
					ie_area_coberta_p	:= 'S';
					exit;
				/*Se o município da operadora executora esta no estado da cooperativa */

				elsif (pls_obter_se_municipio_em_uf(cd_municipio_plano_w, sg_estado_coop_w)	= 'S') then
					ie_area_coberta_p	:= 'S';
					exit;
				/*Se o município da cooperativa esta no estado da operadora executora*/

				elsif (pls_obter_se_municipio_em_uf(cd_municipio_coop_w, sg_estado_plano_w)	= 'S') then
					ie_area_coberta_p	:= 'S';
					exit;
				end if;
			end if;
			end;
		end loop;
		close c02;
		end;
	end loop;
	close C04;
/*Tratamento realizado para o intercâmbio entre cooperativas, onde será verificada a área de atuação da operadora do beneficiário com a área de atuação da operadora executora. Este tratamento se faz necessário pois existêm operadoras que cadastram um
único produto para os beneficiários eventuais com abrângencia Estadual ou Regional, por exemplo, e não cadastram a sua área de atução, sendo assim deve ser verificado a área de atuação da operadora de origem do beneficiário com a área de atuação da
operadora que irá executar o atendimento.*/
elsif (nr_seq_cooperativa_p IS NOT NULL AND nr_seq_cooperativa_p::text <> '') and (nr_seq_operadora_p IS NOT NULL AND nr_seq_operadora_p::text <> '') and (nr_seq_plano_p IS NOT NULL AND nr_seq_plano_p::text <> '') then

	select	coalesce(ie_abrangencia,'X')
	into STRICT	ie_abrangencia_w
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_p;

	open C04;
	loop
	fetch C04 into
		cd_municipio_coop_w,
		sg_estado_coop_w,
		nr_seq_regiao_coop_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		open c05;
		loop
		fetch c05 into
			cd_municipio_oper_w,
			sg_estado_oper_w,
			nr_seq_regiao_oper_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
			begin
			/*necessário limpar o parametro*/

			ie_area_coberta_p	:= 'N';
			if (ie_abrangencia_w	= 'N') then
				ie_area_coberta_p	:= 'S';
				exit;
			elsif (ie_abrangencia_w	= 'E') then

				if (sg_estado_oper_w = sg_estado_coop_w) then
					ie_area_coberta_p	:= 'S';
					exit;
				end if;
			elsif (ie_abrangencia_w	= 'M') then
				if (cd_municipio_oper_w = cd_municipio_coop_w) then
					ie_area_coberta_p	:= 'S';
					exit;
				end if;
			elsif (ie_abrangencia_w	= 'GM') and (ie_tipo_segurado_p 	not in ('I','H')) then
				if (nr_seq_regiao_oper_w = nr_seq_regiao_coop_w) then
					ie_area_coberta_p	:= 'S';
					exit;
				/*Se o município ou estado da operadora executora está na região da cooperativa*/

				elsif (pls_obter_se_mun_uf_regiao(cd_municipio_oper_w, null, nr_seq_regiao_coop_w) = 'S') then
					ie_area_coberta_p	:= 'S';
					exit;
				/*Se o município ou estado da cooperativa está na região da operadora executora*/

				elsif (pls_obter_se_mun_uf_regiao(cd_municipio_coop_w, null, nr_seq_regiao_oper_w) = 'S') then
					ie_area_coberta_p	:= 'S';
					exit;
				/*Se o município da operadora executora esta no estado da cooperativa */

				elsif (pls_obter_se_municipio_em_uf(cd_municipio_oper_w, sg_estado_coop_w)	= 'S') then
					ie_area_coberta_p	:= 'S';
					exit;
				/*Se o município da cooperativa esta no estado da operadora executora*/

				elsif (pls_obter_se_municipio_em_uf(cd_municipio_coop_w, sg_estado_oper_w)	= 'S') then
					ie_area_coberta_p	:= 'S';
					exit;
				end if;

				if (ie_tipo_segurado_p in ('I','H')) then -- se for usuario eventual e a abrangencia for Grupo de Mun. deverá sempre gerar a glosa
					ie_area_coberta_p := 'N';
				end if;
			end if;

			end;
		end loop;
		close c05;
		end;
	end loop;
	close C04;
end if;

/* Não pode dar commit nesta procedure */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_area_atuacao_med ( nr_seq_plano_p bigint, nr_seq_operadora_p bigint, nr_seq_prestador_p bigint, nr_seq_cooperativa_p bigint, ie_tipo_segurado_p text, ie_area_coberta_p INOUT text) FROM PUBLIC;

