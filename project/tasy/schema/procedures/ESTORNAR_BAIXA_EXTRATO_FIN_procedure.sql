-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE estornar_baixa_extrato_fin ( nr_seq_extrato_arq_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_gerar_movto_banco_w		varchar(1);
ie_movto_banco_w		extrato_cartao_cr.ie_movto_banco%type;
ie_tipo_cartao_w 		movto_cartao_cr.ie_tipo_cartao%type;
ie_valor_movto_bco_w 		bandeira_cartao_cr.ie_valor_movto_bco%type;
nr_sequencia_w		bandeira_cartao_cr.nr_sequencia%type;
vl_lote_w		movto_cartao_cr_parcela.vl_parcela%type;
nr_seq_trans_financ_w 		bandeira_cartao_cr.nr_seq_trans_financ%type;
nr_seq_trans_fin_desp_w		bandeira_cartao_cr.nr_seq_trans_fin_desp%type;
nr_seq_movto_trans_w		movto_trans_financ.nr_sequencia%type;
nr_seq_conta_banco_res_w	extrato_cartao_cr_res.nr_seq_conta_banco%type;
dt_prev_pagto_w			timestamp;
vl_despesa_w			extrato_cartao_cr_desp.vl_liquido%type;
nr_seq_parcela_w      extrato_cartao_cr_movto.nr_seq_parcela%type;
nr_seq_baixa_w        movto_cartao_cr_baixa.nr_sequencia%type;
ds_bandeira_w			bandeira_cartao_cr.ds_bandeira%type;
nr_seq_conta_regra_w		bandeira_cartao_cr.nr_seq_conta_banco%type;
nr_seq_movto_orig_w		movto_trans_financ.nr_sequencia%type;

c01 CURSOR FOR
SELECT  b.nr_seq_parcela
from  extrato_cartao_cr_movto b,
    extrato_cartao_cr_res a
where (b.nr_seq_parcela IS NOT NULL AND b.nr_seq_parcela::text <> '')
and   a.nr_sequencia      = b.nr_seq_extrato_res
and   a.nr_seq_extrato_arq  = nr_seq_extrato_arq_p

union

SELECT  d.nr_sequencia
from  movto_cartao_cr_parcela d,
    extrato_cartao_cr_parcela c,
    extrato_cartao_cr_movto b,
    extrato_cartao_cr_res a
where c.nr_sequencia        = d.nr_seq_extrato_parcela
and   b.nr_seq_extrato_parcela  = c.nr_sequencia
and   a.nr_sequencia        = b.nr_seq_extrato_res
and   a.nr_seq_extrato_arq    = nr_seq_extrato_arq_p;

c02 CURSOR FOR
	SELECT d.ie_tipo_cartao,
			coalesce(f.ie_valor_movto_bco, 'N'),
			f.nr_sequencia,
			a.nr_seq_conta_banco,
            a.dt_prev_pagto
	from    extrato_cartao_cr_res a
	join    extrato_cartao_cr_movto b on a.nr_sequencia  =  b.nr_seq_extrato_res
	join    movto_cartao_cr_parcela c on b.nr_seq_parcela = c.nr_sequencia
	join    movto_cartao_cr d on c.nr_seq_movto = d.nr_sequencia
	join    bandeira_cartao_cr f on d.nr_seq_bandeira = f.nr_sequencia
	where   d.ie_tipo_cartao = 'D' and a.nr_seq_extrato_arq      =   nr_seq_extrato_arq_p
	group by   d.ie_tipo_cartao,
			f.ie_valor_movto_bco,
			f.nr_sequencia,
			a.nr_seq_conta_banco,
            a.dt_prev_pagto
	
union all

	SELECT d.ie_tipo_cartao,
			f.ie_valor_movto_bco,
			f.nr_sequencia,
			a.nr_seq_conta_banco,
            a.dt_prev_pagto
	from    extrato_cartao_cr_res a
	join    extrato_cartao_cr_movto b on a.nr_sequencia  =  b.nr_seq_extrato_res
	join    movto_cartao_cr_parcela c on b.nr_seq_parcela = c.nr_sequencia
	join    movto_cartao_cr d on c.nr_seq_movto = d.nr_sequencia
	join    bandeira_cartao_cr f on d.nr_seq_bandeira = f.nr_sequencia
	where   d.ie_tipo_cartao = 'C' and a.nr_seq_extrato_arq      =   nr_seq_extrato_arq_p
	group by   d.ie_tipo_cartao,
			f.ie_valor_movto_bco,
			f.nr_sequencia,
			a.nr_seq_conta_banco,
            a.dt_prev_pagto;

BEGIN

select	coalesce(max(b.ie_movto_banco),'P')
into STRICT	ie_movto_banco_w
from	extrato_cartao_cr b,
	extrato_cartao_cr_arq a
where	a.nr_seq_extrato	= b.nr_sequencia
and	a.nr_sequencia		= nr_seq_extrato_arq_p;

if (ie_movto_banco_w = 'P') then
	ie_gerar_movto_banco_w	:= 'S';
else
	ie_gerar_movto_banco_w	:= 'N';
end if;
/* Estorno das parcelas */

open  c01;
loop
fetch c01 into
  nr_seq_parcela_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

  select  max(a.nr_sequencia)
  into STRICT  nr_seq_baixa_w
  from  movto_cartao_cr_baixa a
  where a.nr_seq_parcela = nr_seq_parcela_w
  and   a.vl_baixa > 0 --  A baixa tem que ser de valor positivo, pois se for negativo ja e uma baixa de estorno.
  and   coalesce(a.nr_seq_baixa_orig::text, '') = '' -- Nao pode ser uma baixa que tenha origem, pois se tiver origem quer dizer que e estorno
  and   not exists (SELECT 1 --Nao pode existir uma baixa gerada nessa parcela que a origem da mesma seja essa, pois indica que ela ja foi estornada.
            from   movto_cartao_cr_baixa x
            where  x.nr_seq_baixa_orig  = a.nr_sequencia
            and    x.nr_seq_parcela   = nr_seq_parcela_w);

if (nr_seq_baixa_w IS NOT NULL AND nr_seq_baixa_w::text <> '') then

  CALL Estornar_movto_cartao_baixa( nr_seq_baixa_w,
                  nm_usuario_p,
                  ie_gerar_movto_banco_w,
                  'N', -- O commit vai ocorrer apenas no final dessa proc, e nao a cada  estorno.
                  null);
end if;
end loop;
close c01;
if (ie_movto_banco_w = 'L') then
		open	c02;
		loop
		fetch	c02 into
			ie_tipo_cartao_w ,
			ie_valor_movto_bco_w ,
			nr_sequencia_w,
			nr_seq_conta_banco_res_w,
			dt_prev_pagto_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */

			if (ie_valor_movto_bco_w = 'S') then

				select	(obter_valor_bandeira_estab(f.nr_sequencia,d.cd_estabelecimento,'NR_SEQ_TRANS_FINANC'))::numeric ,
					(obter_valor_bandeira_estab(f.nr_sequencia,d.cd_estabelecimento,'NR_SEQ_TRANS_FIN_DESP'))::numeric ,
					(obter_valor_bandeira_estab(f.nr_sequencia,d.cd_estabelecimento,'NR_SEQ_CONTA_BANCO'))::numeric ,
					sum(c.vl_parcela) ,
					sum(c.vl_despesa),
					f.ds_bandeira
				 into STRICT   nr_seq_trans_financ_w ,
					nr_seq_trans_fin_desp_w ,
					nr_seq_conta_regra_w,
					vl_lote_w,
					vl_despesa_w,
					ds_bandeira_w
				from    extrato_cartao_cr_res a
				join    extrato_cartao_cr_movto b on a.nr_sequencia  =  b.nr_seq_extrato_res
				join    movto_cartao_cr_parcela c on b.nr_seq_parcela = c.nr_sequencia
				join    movto_cartao_cr d on c.nr_seq_movto = d.nr_sequencia
				join    bandeira_cartao_cr f on d.nr_seq_bandeira = f.nr_sequencia
				where   d.ie_tipo_cartao = ie_tipo_cartao_w
				and a.nr_seq_extrato_arq      =   nr_seq_extrato_arq_p
				and d.nr_seq_bandeira = nr_sequencia_w
				group by (obter_valor_bandeira_estab(f.nr_sequencia,d.cd_estabelecimento,'NR_SEQ_TRANS_FINANC'))::numeric ,
					 (obter_valor_bandeira_estab(f.nr_sequencia,d.cd_estabelecimento,'NR_SEQ_TRANS_FIN_DESP'))::numeric ,
					 (obter_valor_bandeira_estab(f.nr_sequencia,d.cd_estabelecimento,'NR_SEQ_CONTA_BANCO'))::numeric ,
					 f.ds_bandeira;

			else

				select	sum(vl_baixa),
					sum(vl_despesa),
					max(nr_seq_trans_financ),
					max(nr_seq_trans_financ_desp),
					max(nr_seq_conta_banco),
					max(ds_bandeira)
				into STRICT	vl_lote_w,
					vl_despesa_w,
					nr_seq_trans_financ_w,
					nr_seq_trans_fin_desp_w,
					nr_seq_conta_regra_w,
					ds_bandeira_w
				from (SELECT	obter_valor_baixa_cartao(c.nr_seq_movto, c.nr_sequencia, 'UE') vl_baixa,
						obter_valor_baixa_cartao(c.nr_seq_movto, c.nr_sequencia, 'DE') vl_despesa,
						g.ds_bandeira,
						(obter_valor_bandeira_estab(g.nr_sequencia,f.cd_estabelecimento,'NR_SEQ_TRANS_FINANC'))::numeric  nr_seq_trans_financ,
						(obter_valor_bandeira_estab(g.nr_sequencia,f.cd_estabelecimento,'NR_SEQ_TRANS_FIN_DESP'))::numeric nr_seq_trans_financ_desp,
						(obter_valor_bandeira_estab(g.nr_sequencia,f.cd_estabelecimento,'NR_SEQ_CONTA_BANCO'))::numeric  nr_seq_conta_banco
					from	extrato_cartao_cr_res a ,
						extrato_cartao_cr_movto b,
						movto_cartao_cr_parcela c,
						movto_cartao_cr f,
						bandeira_cartao_cr g
					where	a.nr_seq_extrato_arq	= nr_seq_extrato_arq_p
					and	a.nr_sequencia		=  b.nr_seq_extrato_res
					and	b.nr_seq_parcela	= c.nr_sequencia
					and	c.nr_seq_movto		= f.nr_sequencia
					and	f.nr_seq_bandeira	= g.nr_sequencia
					and	a.nr_seq_bandeira	= nr_sequencia_w
					and	f.ie_tipo_cartao	= ie_tipo_cartao_w) alias14;

			end if;

			if (coalesce(nr_seq_trans_financ_w::text, '') = '') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(1199949,ds_bandeira_w);
			end if;
			
			/* obter a movimentacao de origem do estorno */

			select	max(a.nr_sequencia)
			into STRICT	nr_seq_movto_orig_w
			from	movto_trans_financ a
			where	a.nr_seq_trans_financ	= nr_seq_trans_financ_w
			and	not exists (SELECT	1
				from	movto_trans_financ x
				where	a.nr_seq_movto_orig	= a.nr_sequencia)
			and	vl_transacao = abs(vl_lote_w);

			select	nextval('movto_trans_financ_seq')
			into STRICT	nr_seq_movto_trans_w
			;

			insert	into movto_trans_financ(nr_sequencia,
				dt_transacao,
				nr_seq_trans_financ,
				vl_transacao,
				dt_atualizacao,
				nm_usuario,
				nr_lote_contabil,
				ie_conciliacao,
				nr_seq_lote_cartao,
				nr_seq_banco,
				dt_referencia_saldo,
				ie_estorno,
				nr_seq_movto_orig)
			values (nr_seq_movto_trans_w,
				dt_prev_pagto_w,
				nr_seq_trans_financ_w,
				CASE WHEN ie_valor_movto_bco_w='S' THEN  vl_lote_w *-1  ELSE vl_lote_w END ,
				clock_timestamp(),
				nm_usuario_p,
				0,
				'N',
				null,
				nr_seq_conta_banco_res_w,
				clock_timestamp(),
				'E',
				nr_seq_movto_orig_w);
				
				nr_seq_movto_orig_w := null;

			if (vl_despesa_w <> 0) and (nr_seq_trans_fin_desp_w IS NOT NULL AND nr_seq_trans_fin_desp_w::text <> '') then
			
				/* obter a movimentacao de origem do estorno */

				select	max(a.nr_sequencia)
				into STRICT	nr_seq_movto_orig_w
				from	movto_trans_financ a
				where	a.nr_seq_trans_financ	= nr_seq_trans_fin_desp_w
				and	not exists (SELECT	1
					from	movto_trans_financ x
					where	a.nr_seq_movto_orig	= a.nr_sequencia)
				and	vl_transacao = abs(vl_despesa_w);

				insert	into movto_trans_financ(nr_sequencia,
					dt_transacao,
					nr_seq_trans_financ,
					vl_transacao,
					dt_atualizacao,
					nm_usuario,
					nr_lote_contabil,
					ie_conciliacao,
					nr_seq_lote_cartao,
					nr_seq_banco,
					dt_referencia_saldo,
					ie_estorno,
					nr_seq_movto_orig)
				values (nextval('movto_trans_financ_seq'),
					dt_prev_pagto_w,
					nr_seq_trans_fin_desp_w,
					CASE WHEN ie_valor_movto_bco_w='S' THEN  vl_despesa_w *-1  ELSE vl_despesa_w END ,
					clock_timestamp(),
					nm_usuario_p,
					0,
					'N',
					null,
					nr_seq_conta_banco_res_w,
					clock_timestamp(),
					'E',
					nr_seq_movto_orig_w);

			end if;

		end loop;
	close c02;
end if;
update  extrato_cartao_cr_arq
set   dt_baixa   = NULL,
    dt_atualizacao  = clock_timestamp(),
    nm_usuario  = nm_usuario_p
where nr_sequencia  = nr_seq_extrato_arq_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE estornar_baixa_extrato_fin ( nr_seq_extrato_arq_p bigint, nm_usuario_p text) FROM PUBLIC;

