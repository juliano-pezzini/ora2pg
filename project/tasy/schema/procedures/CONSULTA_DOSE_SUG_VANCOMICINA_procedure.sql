-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consulta_dose_sug_vancomicina ( nr_prescricao_p bigint, cd_material_p bigint, nm_usuario_p text, qt_dias_reinicio_p bigint, qt_dose_ataque_sug_p INOUT bigint, qt_dose_sug_p INOUT bigint, cd_unid_med_sug_p INOUT text, cd_interv_sug_p INOUT text, ds_interv_sug_p INOUT text, qt_dose_anterior_p INOUT bigint, cd_interv_anterior_p INOUT text, cd_unid_med_anterior_p INOUT text, ds_interv_anterior_p INOUT text, ie_clearance_p INOUT text, qt_horas_proced_p INOUT bigint, qt_horas_proced_cfr_p INOUT bigint, qt_horas_proced_sfr_p INOUT bigint, nr_regra_serica_p INOUT bigint, ie_ajuste_dose_p INOUT text, ds_ajuste_dose_p INOUT text, qt_nivel_serico_p INOUT bigint, ds_unid_med_resultado_p INOUT text, dt_resultado_serico_p INOUT text, ie_fatores_risco_p INOUT text, ie_protocolo_vanco_p INOUT text) AS $body$
DECLARE


ie_regra_w				varchar(60);
qt_peso_w				real;
qt_clearance_w			double precision;
qt_dose_sugerida_w		double precision;
cd_intervalo_w			varchar(10);
ds_intervalo_w			varchar(40);
ie_dialise_w			varchar(15);
ie_novo_resultado_w		varchar(1);
nr_atendimento_w		bigint;
dt_inicio_prescr_w		timestamp;
nr_sequencia_w			bigint;
nr_seq_regra_pai_w		bigint;
pr_ajuste_dose_w		double precision;
qt_horas_proced_w		varchar(7);
nr_prescricao_sug_w		bigint;
dt_resultado_serico_w	timestamp;
cd_pessoa_fisica_w		varchar(20);
qt_altura_w				double precision;
qt_idade_w				double precision;
dt_prescricao_w			timestamp;
dt_inicio_vig_result_w	timestamp;
dt_fim_protocolo_w		timestamp;
ie_possui_manut_w		varchar(1);

c01 CURSOR FOR
	SELECT	qt_dose,
			cd_unidade_medida,
			cd_intervalo
	from	regra_dose_vancomicina
	where	qt_clearance_w between qt_clearance_min and qt_clearance_max
	and		qt_peso_w between qt_peso_min and qt_peso_max
	and		coalesce(ie_paciente_dialise,'N') = coalesce(ie_dialise_w, 'N')
	order by
		nr_sequencia;

C02 CURSOR FOR
	SELECT	nr_sequencia,
			qt_nivel_serico,
			dt_resultado
	from	rep_result_vanco
	where	1 = 1
	and		dt_resultado > dt_inicio_vig_result_w
	and		ie_novo_resultado = 'S'
	and		nr_atendimento = nr_atendimento_w
	order by dt_resultado;

C03 CURSOR FOR
	SELECT	ie_ajuste_dose,
			pr_ajuste_dose,
			qt_horas_proced,
			nr_sequencia
	from	rep_nivel_serico
	where	ie_risco in ('I', 'C')
	and		(((coalesce(nr_seq_superior::text, '') = '') and (coalesce(nr_seq_regra_pai_w::text, '') = '')) or (nr_seq_superior = nr_seq_regra_pai_w))
	and		qt_nivel_serico_p between qt_inicial and qt_final
	and		coalesce(ie_paciente_dialise,'N') = coalesce(ie_dialise_w, 'N')
	order by nr_sequencia;


BEGIN
ie_clearance_p			:= 'S';
ie_protocolo_vanco_p	:= '';

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (cd_material_p IS NOT NULL AND cd_material_p::text <> '') then

	-- Verifica se material cadastrado como vancomicina
	select	coalesce(max(ie_vancomicina), 'N')
	into STRICT	ie_regra_w
	from	material
	where	cd_material = cd_material_p;

	if (ie_regra_w = 'S') then
		-- Verificar se possui cadastro de doses de manutenção para a vancomicina
		select	coalesce(max('S'), 'N')
		into STRICT	ie_regra_w
		from	regra_dose_vancomicina;
	end if;

	if (ie_regra_w = 'S') then

		select	coalesce(max(qt_peso), coalesce(obter_peso_pf(max(cd_pessoa_fisica)),0)),
				max(qt_clearence),
				coalesce(max(ie_paciente_dialise), 'N'),
				max(nr_atendimento),
				max(dt_inicio_prescr),
				max(cd_pessoa_fisica),
				coalesce(max(qt_altura_cm), coalesce(obter_qt_altura_pf(max(cd_pessoa_fisica)),0)),
				coalesce(Obter_idade_pf(max(cd_pessoa_fisica), clock_timestamp(), 'A'),0),
				max(dt_prescricao)
		into STRICT	qt_peso_w,
				qt_clearance_w,
				ie_dialise_w,
				nr_atendimento_w,
				dt_inicio_prescr_w,
				cd_pessoa_fisica_w,
				qt_altura_w,
				qt_idade_w,
				dt_prescricao_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;

		-- Caso não possua atendimento na prescrição, não deverá ser sugerido o protocolo
		if (coalesce(nr_atendimento_w::text, '') = '') then
			ie_protocolo_vanco_p	:= 'N';
			return;
		end if;

		-- Verifica se após último encerramento do protocolo, houve reinício do mesmo ou se deve questionar o protocolo
		ie_protocolo_vanco_p	:= Obter_se_em_protocolo_vanco(nr_atendimento_w, '', qt_dias_reinicio_p);

		-- Verifica se possui atendimento, e caso possua, verifica se protocolo assumido
		if (ie_protocolo_vanco_p = 'N') then
			return;
		elsif (ie_protocolo_vanco_p = 'Q') then
			-- Grava evento de sugestão do protocolo, conforme parâmetro [1156] da REP
			CALL Gravar_acao_protocolo_vanco(nm_usuario_p, nr_atendimento_w, nr_prescricao_p, null, null, null, null, null, null, null, null, null, null, null, 'Q');
			ie_protocolo_vanco_p	:= '';
		end if;

		-- Retorna para questionamento de registro de clearance para seguir com protocolo
		if (coalesce(qt_clearance_w::text, '') = '') then
			ie_clearance_p	:= 'N';
			return;
		end if;

		-- Busca a última data de encerramento do protocolo
		select	max(dt_atualizacao_nrec)
		into STRICT	dt_fim_protocolo_w
		from	rep_dialogo_vancomicina
		where	ie_situacao = 'A'
		and		ie_tipo_evento = 'F'
		and		nr_atendimento = nr_atendimento_w;

		-- Define a data inicial de busca das dosagens sugeridas anteriormente
		select	trunc(dt_inicio_prescr_w) - round(coalesce(max(qt_horas_proced), 168)+1/24)
		into STRICT	dt_inicio_vig_result_w
		from	rep_nivel_serico;

		dt_fim_protocolo_w	:= coalesce(dt_fim_protocolo_w, dt_inicio_vig_result_w);

		-- Verifica se existe prescrição no protocolo atual com dose sugerida
		select	coalesce(max(nr_prescricao),0)
		into STRICT	nr_prescricao_sug_w
		from	rep_dialogo_vancomicina
		where	(qt_dose_manut_sugerida IS NOT NULL AND qt_dose_manut_sugerida::text <> '')
		and		ie_situacao = 'A'
		and		ie_tipo_evento = 'SM'
		and		dt_atualizacao_nrec > dt_fim_protocolo_w
		and		nr_atendimento = nr_atendimento_w;

		-- Busca a última dosagem dugerida para o atendimento neste protocolo
		if (nr_prescricao_sug_w > 0) then
			select	max(a.qt_dose_manut_sugerida),
					max(a.cd_unidade_medida),
					max(a.cd_intervalo_sugerido)
			into STRICT	qt_dose_sug_p,
					cd_unid_med_sug_p,
					cd_interv_sug_p
			from	rep_dialogo_vancomicina a
			where	a.nr_sequencia = (		SELECT	max(nr_sequencia)
											from	rep_dialogo_vancomicina b
											where	b.ie_situacao = 'A'
											and		b.ie_tipo_evento = 'SM'
											and		b.dt_atualizacao > dt_fim_protocolo_w
											and		b.nr_prescricao = a.nr_prescricao
											and		b.nr_prescricao = nr_prescricao_sug_w
											and		b.nr_atendimento = nr_atendimento_w
											)
			and		a.nr_atendimento = nr_atendimento_w;
		end if;

		-- Caso não exista última sugestão de dosagem, verifica a dose sugerida conforme clearance
		if (coalesce(qt_dose_sug_p::text, '') = '') then
			open C01;
			loop
			fetch C01 into
				qt_dose_sug_p,
				cd_unid_med_sug_p,
				cd_interv_sug_p;
			EXIT WHEN NOT FOUND; /* apply on C01 */
			end loop;
			close C01;
		end if;

		-- Verificar se existe última sugestão ou por clearance
		if (qt_dose_sug_p IS NOT NULL AND qt_dose_sug_p::text <> '') then

			-- Verifica se possui resultado de vancomicinemia/vancocinemia
			select	coalesce(max('S'), 'N')
			into STRICT	ie_novo_resultado_w
			from	rep_result_vanco
			where	dt_resultado > dt_inicio_vig_result_w
			and		ie_novo_resultado = 'S'
			and		nr_atendimento = nr_atendimento_w;

			if (ie_novo_resultado_w = 'S') then

				-- Busca novos resultados do atendimento
				open C02;
				loop
				fetch C02 into
					nr_sequencia_w,
					qt_nivel_serico_p,
					dt_resultado_serico_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin

					-- Verificar qual regra assumida para o último resultado
					select	max(nr_seq_regra_resultado)
					into STRICT	nr_seq_regra_pai_w
					from	rep_result_vanco
					where	dt_resultado > dt_inicio_vig_result_w
					and		ie_novo_resultado = 'N'
					and		nr_atendimento = nr_atendimento_w
					and		dt_atualizacao = (	SELECT	max(dt_atualizacao)
												from	rep_result_vanco
												where	dt_resultado > dt_inicio_vig_result_w
												and		ie_novo_resultado = 'N'
												and		nr_atendimento = nr_atendimento_w);

					-- Verificar se a regra assumida possui regras dependentes
					select	max(nr_seq_superior)
					into STRICT	nr_seq_regra_pai_w
					from	rep_nivel_serico
					where	qt_nivel_serico_p between qt_inicial and qt_final
					and		ie_paciente_dialise = ie_dialise_w
					and		nr_seq_superior = nr_seq_regra_pai_w;

					-- Buscar regras conforme resultado // Regras pais || ou || Regras filhas
					open C03;
					loop
					fetch C03 into
						ie_ajuste_dose_p,
						pr_ajuste_dose_w,
						qt_horas_proced_w,
						nr_regra_serica_p;
					EXIT WHEN NOT FOUND; /* apply on C03 */
						begin

						ds_ajuste_dose_p		:= obter_desc_regra_vanco_nsv(nr_regra_serica_p);
						qt_dose_anterior_p		:= qt_dose_sug_p;
						cd_interv_anterior_p	:= cd_interv_sug_p;
						cd_unid_med_anterior_p	:= cd_unid_med_sug_p;
						ds_unid_med_resultado_p	:= 'mg/dl';
						dt_resultado_serico_p	:= to_char(dt_resultado_serico_w, 'dd/mm/yyyy hh24:mi:ss');

						-- Atualizar resultado utilizado
						-- Conforme acordado, será atualizado o valor do resultado na liberação da prescrição.
						update	rep_result_vanco
						set		dt_atualizacao = clock_timestamp(),
								nm_usuario = nm_usuario_p,
								--ie_novo_resultado = 'N',
								nr_seq_regra_resultado = nr_regra_serica_p
						where	nr_atendimento = nr_atendimento_w
						and		nr_sequencia = nr_sequencia_w;

						-- Verificar forma de ajuste da regra // Ajustar a dosagem // Definir horário para geração do próximo exame
						if (ie_ajuste_dose_p = 'A') then
							qt_dose_sug_p	:= qt_dose_sug_p + (qt_dose_sug_p*(pr_ajuste_dose_w/100));
							qt_horas_proced_p	:= qt_horas_proced_w;

						elsif (ie_ajuste_dose_p = 'R') then
							qt_dose_sug_p	:= qt_dose_sug_p - (qt_dose_sug_p*(pr_ajuste_dose_w/100));
							qt_horas_proced_p	:= qt_horas_proced_w;

						elsif (ie_ajuste_dose_p = 'M') then
							qt_horas_proced_p	:= qt_horas_proced_w;

						elsif (ie_ajuste_dose_p = 'N') then
							qt_horas_proced_p	:= qt_horas_proced_w;
						end if;

						ie_fatores_risco_p	:= 'N';

						-- Clearance de Creatinina(CLCr) < 40 ml/min
						if (coalesce(qt_nivel_serico_p,40) < 40) or
							-- Pessoas >= 60 anos
							(coalesce(qt_idade_w,0) >= 60) or
							-- Pacientes Obesos (IMC > 30)
							(coalesce(Obter_IMC(qt_peso_w, qt_altura_w, cd_pessoa_fisica_w),0) > 30) or
							-- Pacientes em uso de altas doses [(> 2g/dia) / (> 2000 mg/dia)]
							(coalesce(qt_dose_sug_p,0) > 2000) then
							ie_fatores_risco_p	:= 'S';
						end if;

						if (ie_ajuste_dose_p = 'M') then
							select	coalesce(max(qt_horas_proced), qt_horas_proced_p)
							into STRICT	qt_horas_proced_cfr_p
							from	rep_nivel_serico
							where	ie_risco = 'C'
							and		(((coalesce(nr_seq_superior::text, '') = '') and (coalesce(nr_seq_regra_pai_w::text, '') = '')) or (nr_seq_superior = nr_seq_regra_pai_w))
							and		qt_nivel_serico_p between qt_inicial and qt_final
							and		ie_paciente_dialise = ie_dialise_w;

							select	coalesce(max(qt_horas_proced), qt_horas_proced_p)
							into STRICT	qt_horas_proced_sfr_p
							from	rep_nivel_serico
							where	ie_risco = 'S'
							and		(((coalesce(nr_seq_superior::text, '') = '') and (coalesce(nr_seq_regra_pai_w::text, '') = '')) or (nr_seq_superior = nr_seq_regra_pai_w))
							and		qt_nivel_serico_p between qt_inicial and qt_final
							and		ie_paciente_dialise = ie_dialise_w;
						end if;


						end;
					end loop;
					close C03;

					end;
				end loop;
				close C02;

				commit;
			end if;

			select	max(coalesce(ds_prescricao, ds_intervalo))
			into STRICT	ds_interv_sug_p
			from	intervalo_prescricao
			where	cd_intervalo = cd_interv_sug_p;

			select	max(coalesce(ds_prescricao, ds_intervalo))
			into STRICT	ds_interv_anterior_p
			from	intervalo_prescricao
			where	cd_intervalo = cd_interv_anterior_p;

		end if;

		-- Caso já possua dose de manutenção sugerida por protocolo de vancomicina na prescrição, não sugerir novamente.
		select	coalesce(max('S'), 'N')
		into STRICT	ie_possui_manut_w
		from	prescr_material a
		where	coalesce(coalesce(a.nr_sequencia_solucao, a.nr_sequencia_dieta, a.nr_sequencia_diluicao)::text, '') = ''
		and		coalesce(a.ie_urgencia, 'N') = 'N'
		and     obter_se_mat_vancomicina(a.cd_material) = 'S'
		and		a.ie_em_protocolo_vanco = 'S'
		and     a.ie_agrupador = 1
		and		a.nr_prescricao = nr_prescricao_p;

		if (ie_possui_manut_w = 'S') then
			qt_dose_sug_p := null;
		end if;

		if (coalesce(nr_regra_serica_p::text, '') = '') then
			select	coalesce(max('S'),'N')
			into STRICT	ie_regra_w
			from	prescr_material a
			where	coalesce(coalesce(a.nr_sequencia_solucao, a.nr_sequencia_dieta, a.nr_sequencia_diluicao)::text, '') = ''
			and		a.ie_urgencia = 'S'
			and		a.ie_em_protocolo_vanco = 'S'
			and		a.cd_material = cd_material_p
			and		a.nr_prescricao = nr_prescricao_p;

			if (ie_regra_w = 'N') then
				qt_dose_ataque_sug_p	:= Obter_dose_espec_ataque_vanco(nm_usuario_p, nr_prescricao_p, null, null, null, null, null, cd_material_p, cd_unid_med_sug_p);
			end if;
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consulta_dose_sug_vancomicina ( nr_prescricao_p bigint, cd_material_p bigint, nm_usuario_p text, qt_dias_reinicio_p bigint, qt_dose_ataque_sug_p INOUT bigint, qt_dose_sug_p INOUT bigint, cd_unid_med_sug_p INOUT text, cd_interv_sug_p INOUT text, ds_interv_sug_p INOUT text, qt_dose_anterior_p INOUT bigint, cd_interv_anterior_p INOUT text, cd_unid_med_anterior_p INOUT text, ds_interv_anterior_p INOUT text, ie_clearance_p INOUT text, qt_horas_proced_p INOUT bigint, qt_horas_proced_cfr_p INOUT bigint, qt_horas_proced_sfr_p INOUT bigint, nr_regra_serica_p INOUT bigint, ie_ajuste_dose_p INOUT text, ds_ajuste_dose_p INOUT text, qt_nivel_serico_p INOUT bigint, ds_unid_med_resultado_p INOUT text, dt_resultado_serico_p INOUT text, ie_fatores_risco_p INOUT text, ie_protocolo_vanco_p INOUT text) FROM PUBLIC;

