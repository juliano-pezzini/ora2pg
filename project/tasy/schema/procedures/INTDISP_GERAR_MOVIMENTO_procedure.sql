-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intdisp_gerar_movimento ( nr_atendimento_p bigint, ie_tipo_movimento_p text, cd_setor_atendimento_p bigint default null, nr_cirurgia_p bigint default null, ie_alta_automatica_p text default 'N') AS $body$
DECLARE


nm_pessoa_fisica_w      	varchar(60);
nr_atendimento_w       		bigint;
ds_setor_atendimento_w		varchar(100);
ds_unidade_atendimento_w	varchar(100);
dt_entrada_w           		timestamp;
ie_sexo_w               	varchar(1);
dt_nascimento_w				timestamp;
cd_estabelecimento_w		smallint;
nm_usuario_w				varchar(15);
cd_setor_atendimento_w		integer;
cd_unidade_basica_w			varchar(20);
cd_medico_atendimento_w		varchar(10);
nr_crm_medico_w				varchar(20);
cd_pessoa_usuario_w			varchar(10);
nm_pessoa_usuario_w			varchar(60);
nr_prontuario_w				bigint;
dt_entrada_unidade_w		timestamp;
nr_sequencia_w				bigint;
cd_setor_atend_w			bigint;
qt_leito_disp_w				bigint;
ie_gerar_sem_leito_w		varchar(1);
nr_seq_proc_interno_w		proc_interno.nr_sequencia%type;
ds_procedimento_w			procedimento.ds_procedimento%type;
dt_inicio_prevista_w		timestamp;
nr_prescricao_w				prescr_medica.nr_prescricao%type;
ds_log_w					log_tasy.ds_log%type;

c02 CURSOR FOR
	SELECT	substr(c.nm_pessoa_fisica,1,60) nm_pessoa_fisica,
			a.nr_atendimento,
			cd_setor_atend_w cd_setor_atendimento,
			substr(obter_ds_descricao_setor(cd_setor_atend_w),1,100) ds_setor_atendimento,
			a.cd_unidade_basica,
			b.dt_entrada,
			c.ie_sexo,
			c.dt_nascimento,
			b.cd_medico_atendimento,
			obter_crm_medico(b.cd_medico_atendimento),
			obter_prontuario_atendimento(a.nr_atendimento),
			a.dt_entrada_unidade
	from    ocupacao_hospitalar a,
			atendimento_paciente b,
			pessoa_fisica c
	where   a.nr_atendimento = b.nr_atendimento
	and     a.nr_atendimento = nr_atendimento_p
	and     b.cd_pessoa_fisica = c.cd_pessoa_fisica
	and 	a.cd_setor_atendimento = cd_setor_atend_w
	order by c.nm_pessoa_fisica;
	

BEGIN

select	coalesce(max(cd_estabelecimento),wheb_usuario_pck.get_cd_estabelecimento),
		max(nm_usuario)
into STRICT	cd_estabelecimento_w,
		nm_usuario_w
from	atendimento_paciente
where 	nr_atendimento = nr_atendimento_p;

if (nr_cirurgia_p IS NOT NULL AND nr_cirurgia_p::text <> '') and (coalesce(nr_atendimento_p::text, '') = '') then
	select	max(nm_usuario)
	into STRICT	nm_usuario_w
	from	cirurgia
	where	nr_cirurgia = nr_cirurgia_p;
end if;

cd_pessoa_usuario_w := obter_pessoa_fisica_usuario(nm_usuario_w,'C');
nm_pessoa_usuario_w := obter_pessoa_fisica_usuario(nm_usuario_w,'X');
cd_setor_atend_w	:= obter_setor_atendimento(nr_atendimento_p);

if (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then
	cd_setor_atend_w := cd_setor_atendimento_p;
end if;

select	coalesce(max(nr_sequencia),0) + 1
into STRICT	nr_sequencia_w
from	int_disp_movt_pac;

select	max(a.dt_entrada_unidade)
into STRICT	dt_entrada_unidade_w
from 	atend_paciente_unidade a
where 	a.nr_atendimento 		= nr_atendimento_p
and 	a.cd_setor_atendimento 	= cd_setor_atend_w;

select	max(substr(p.nm_pessoa_fisica,1,60)) nm_pessoa_fisica,
		max(a.nr_atendimento),
		max(cd_setor_atend_w) cd_setor_atendimento,
		max(substr(obter_ds_descricao_setor(cd_setor_atend_w),1,100)) ds_setor_atendimento,
		max(b.cd_unidade_basica),
		max(w.dt_entrada),
		max(p.ie_sexo),
		max(p.dt_nascimento),
		max(w.cd_medico_atendimento),
		max(obter_crm_medico(w.cd_medico_atendimento)),
		max(obter_prontuario_atendimento(a.nr_atendimento)),
		max(a.dt_entrada_unidade)
into STRICT	nm_pessoa_fisica_w,
		nr_atendimento_w,
		cd_setor_atendimento_w,
		ds_setor_atendimento_w,
		cd_unidade_basica_w,
		dt_entrada_w,
		ie_sexo_w,
		dt_nascimento_w,
		cd_medico_atendimento_w,
		nr_crm_medico_w,
		nr_prontuario_w,
		dt_entrada_unidade_w
from	setor_atendimento 	c,
		unidade_atendimento b,
		atend_paciente_unidade a,
		atendimento_paciente w,
		pessoa_fisica p
where 	a.cd_unidade_basica     = b.cd_unidade_basica
and 	a.cd_unidade_compl      = b.cd_unidade_compl
and	 	c.cd_setor_atendimento  = b.cd_setor_atendimento
and 	a.nr_atendimento 		= w.nr_atendimento
and     w.cd_pessoa_fisica 		= p.cd_pessoa_fisica
and 	a.cd_setor_atendimento 	= cd_setor_atend_w
and 	a.dt_entrada_unidade 	= dt_entrada_unidade_w
and     a.nr_atendimento 		= nr_atendimento_p;

select	coalesce(max(ie_gerar_transf_sem_leito),'N')
into STRICT	ie_gerar_sem_leito_w
from	parametros_farmacia
where	cd_estabelecimento = cd_estabelecimento_w;

if (nr_cirurgia_p IS NOT NULL AND nr_cirurgia_p::text <> '') then
	select	max(nr_seq_proc_interno),
		max(substr(obter_exame_agenda(cd_procedimento_princ,ie_origem_proced,nr_seq_proc_interno),1,240)),
		max(dt_inicio_prevista),
		max(nr_prescricao)
	into STRICT	nr_seq_proc_interno_w,
		ds_procedimento_w,
		dt_inicio_prevista_w,
		nr_prescricao_w
	from	cirurgia
	where	nr_cirurgia  = nr_cirurgia_p;
end if;

ds_log_w:= 'nr_atendimento_p='||nr_atendimento_p||';ie_tipo_movimento_p='||ie_tipo_movimento_p||
	';cd_setor_atendimento_p='||cd_setor_atendimento_p||';nr_cirurgia_p='||nr_cirurgia_p||
	';ie_alta_automatica_p='||ie_alta_automatica_p||';cd_setor_atend_w='||cd_setor_atend_w;
	
if (nr_cirurgia_p IS NOT NULL AND nr_cirurgia_p::text <> '') then
	
	dt_entrada_unidade_w := dt_inicio_prevista_w;

	/*2875891 Na geracao da cirurgia nao e informado sala. Unidade apenas deve ser definida no momento da movimentacao para o CC*/

	if (coalesce(cd_setor_atendimento_p::text, '') = '') then
		cd_unidade_basica_w := null;
	end if;
	
	select	max(substr(obter_nome_pf(a.cd_pessoa_fisica),1,60)) nm_pessoa_fisica,
			max(a.nr_atendimento),
			max(a.cd_setor_atendimento) cd_setor_atendimento,
			max(substr(obter_ds_descricao_setor(cd_setor_atendimento),1,100)) ds_setor_atendimento,
			--max(b.cd_unidade_basica),

			--max(w.dt_entrada),
			max(p.ie_sexo),
			max(p.dt_nascimento),
			max(a.cd_medico_cirurgiao),
			max(obter_crm_medico(a.cd_medico_cirurgiao)),
			max(p.nr_prontuario)
			--max(a.dt_entrada_unidade)
	into STRICT	nm_pessoa_fisica_w,
			nr_atendimento_w,
			cd_setor_atendimento_w,
			ds_setor_atendimento_w,
			--cd_unidade_basica_w,

			--dt_entrada_w,
			ie_sexo_w,
			dt_nascimento_w,
			cd_medico_atendimento_w,
			nr_crm_medico_w,
			nr_prontuario_w
			--dt_entrada_unidade_w,
	from	cirurgia a,
			pessoa_fisica p
	where 	p.cd_pessoa_fisica	= a.cd_pessoa_fisica
	and		a.nr_cirurgia 		= nr_cirurgia_p;

end if;

if (coalesce(ie_tipo_movimento_p,'X') = 'EPA') then
	
	insert into int_disp_movt_pac(
				nr_sequencia,
				nr_atendimento,
				nm_pessoa_fisica,
				cd_setor_internacao,
				cd_unidade_basica,
				cd_estabelecimento,
				dt_entrada,
				ie_tipo_movimentacao,
				dt_movimento,
				ie_sexo,
				dt_nascimento,
				cd_medico,
				crm_medico,
				cd_usuario,
				nm_usuario,
				ds_setor,
				dt_atendimento,
				nr_prontuario,
				dt_entrada_unidade,
				nr_cirurgia,
				nr_seq_proc_interno,
				ds_procedimento,
				dt_inicio_prevista,
				nr_prescricao)
			values (nr_sequencia_w,
				nr_atendimento_w,
				nm_pessoa_fisica_w,
				cd_setor_atendimento_w,
				cd_unidade_basica_w,
				cd_estabelecimento_w,
				dt_entrada_w,
				ie_tipo_movimento_p,
				clock_timestamp(),
				ie_sexo_w,
				dt_nascimento_w,
				cd_medico_atendimento_w,
				nr_crm_medico_w,
				cd_pessoa_usuario_w,
				nm_pessoa_usuario_w,
				ds_setor_atendimento_w,
				clock_timestamp(),
				nr_prontuario_w,
				dt_entrada_unidade_w,
				nr_cirurgia_p,
				nr_seq_proc_interno_w,
				ds_procedimento_w,
				dt_inicio_prevista_w,
				nr_prescricao_w);
else
	select 	count(*)
	into STRICT	qt_leito_disp_w
	from    ocupacao_hospitalar a,
			atendimento_paciente b,
			pessoa_fisica c
	where   a.nr_atendimento = b.nr_atendimento
	and     a.nr_atendimento = nr_atendimento_p
	and     b.cd_pessoa_fisica = c.cd_pessoa_fisica
	and 	a.cd_setor_atendimento = cd_setor_atend_w
	and 	ie_tipo_movimento_p = 'EPD';
	
	ds_log_w := ds_log_w || ';qt_leito_disp_w='||qt_leito_disp_w;
	
	if	((coalesce(ie_gerar_sem_leito_w,'N') = 'S') and (qt_leito_disp_w = 0) or
			((coalesce(ie_gerar_sem_leito_w,'N') = 'A') and ie_alta_automatica_p = 'S')) then

		insert into int_disp_movt_pac(
			nr_sequencia,
			nr_atendimento,
			nm_pessoa_fisica,
			cd_setor_internacao,
			cd_unidade_basica,
			cd_estabelecimento,
			dt_entrada,
			ie_tipo_movimentacao,
			dt_movimento,
			ie_sexo,
			dt_nascimento,
			cd_medico,
			crm_medico,
			cd_usuario,
			nm_usuario,
			ds_setor,
			dt_atendimento,
			nr_prontuario,
			dt_entrada_unidade,
			nr_cirurgia,
			nr_seq_proc_interno,
			ds_procedimento,
			dt_inicio_prevista,
			nr_prescricao)
		values (nr_sequencia_w,
			nr_atendimento_w,
			nm_pessoa_fisica_w,
			cd_setor_atendimento_w,
			cd_unidade_basica_w,
			cd_estabelecimento_w,
			dt_entrada_w,
			ie_tipo_movimento_p,
			clock_timestamp(),
			ie_sexo_w,
			dt_nascimento_w,
			cd_medico_atendimento_w,
			nr_crm_medico_w,
			cd_pessoa_usuario_w,
			nm_pessoa_usuario_w,
			ds_setor_atendimento_w,
			clock_timestamp(),
			nr_prontuario_w,
			dt_entrada_unidade_w,
			nr_cirurgia_p,
			nr_seq_proc_interno_w,
			ds_procedimento_w,
			dt_inicio_prevista_w,
			nr_prescricao_w);
	end if;
	
	open c02;
	loop
	fetch c02 into	
		nm_pessoa_fisica_w,
		nr_atendimento_w,
		cd_setor_atendimento_w,
		ds_setor_atendimento_w,
		cd_unidade_basica_w,
		dt_entrada_w,
		ie_sexo_w,
		dt_nascimento_w,
		cd_medico_atendimento_w,
		nr_crm_medico_w,
		nr_prontuario_w,
		dt_entrada_unidade_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		
		ds_log_w := ds_log_w || ';dt_entrada_unidade_w='||dt_entrada_unidade_w;
		
		if (ie_tipo_movimento_p IS NOT NULL AND ie_tipo_movimento_p::text <> '') then
			insert into int_disp_movt_pac(
				nr_sequencia,
				nr_atendimento,
				nm_pessoa_fisica,
				cd_setor_internacao,
				cd_unidade_basica,
				cd_estabelecimento,
				dt_entrada,
				ie_tipo_movimentacao,
				dt_movimento,
				ie_sexo,
				dt_nascimento,
				cd_medico,
				crm_medico,
				cd_usuario,
				nm_usuario,
				ds_setor,
				dt_atendimento,
				nr_prontuario,
				dt_entrada_unidade,
				nr_cirurgia,
				nr_seq_proc_interno,
				ds_procedimento,
				dt_inicio_prevista)
			values (nr_sequencia_w,
				nr_atendimento_w,
				nm_pessoa_fisica_w,
				cd_setor_atendimento_w,
				cd_unidade_basica_w,
				cd_estabelecimento_w,
				dt_entrada_w,
				ie_tipo_movimento_p,
				clock_timestamp(),
				ie_sexo_w,
				dt_nascimento_w,
				cd_medico_atendimento_w,
				nr_crm_medico_w,
				cd_pessoa_usuario_w,
				nm_pessoa_usuario_w,
				ds_setor_atendimento_w,
				clock_timestamp(),
				nr_prontuario_w,
				dt_entrada_unidade_w,
				nr_cirurgia_p,
				nr_seq_proc_interno_w,
				ds_procedimento_w,
				dt_inicio_prevista_w);
		end if;
		end;
	end loop;
	close c02;
end if;

CALL grava_log_tasy(42798, substr(ds_log_w || ' - ' || dbms_utility.format_call_stack,1,2000), nr_atendimento_p);

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intdisp_gerar_movimento ( nr_atendimento_p bigint, ie_tipo_movimento_p text, cd_setor_atendimento_p bigint default null, nr_cirurgia_p bigint default null, ie_alta_automatica_p text default 'N') FROM PUBLIC;

