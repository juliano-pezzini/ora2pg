-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_sus_valor_proc_pac ( nr_seq_protocolo_p conta_paciente.nr_seq_protocolo%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE



nr_sequencia_w		procedimento_paciente.nr_sequencia%type;
cd_procedimento_w		procedimento_paciente.cd_procedimento%type;
ie_origem_proced_w	procedimento_paciente.ie_origem_proced%type;
cd_medico_executor_w	procedimento_paciente.cd_medico_executor%type;
cd_medico_executor_ww	procedimento_paciente.cd_medico_executor%type;
cd_pessoa_fisica_w	procedimento_paciente.cd_pessoa_fisica%type;
cd_cbo_w			procedimento_paciente.cd_cbo%type;
cd_cbo_ww		procedimento_paciente.cd_cbo%type;
cd_estabelecimento_w	conta_paciente.cd_estabelecimento%type;
cd_cns_medico_exec_w	varchar(15);
qt_reg_commit_w		bigint := 1000;
qt_reg_w			bigint := 0;
dt_procedimento_w		procedimento_paciente.dt_procedimento%type;
nr_atendimento_w	conta_paciente.nr_atendimento%type;
ie_tipo_atendimento_w	atendimento_paciente.ie_tipo_atendimento%type;
cd_pessoa_fis_atend_w	atendimento_paciente.cd_pessoa_fisica%type;
nr_idade_pac_proc_w		sus_valor_proc_paciente.nr_idade_pac_proc%type := null;
cd_registro_proc_w		sus_valor_proc_paciente.cd_registro_proc%type := null;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.cd_medico_executor,
		a.cd_pessoa_fisica,
		a.cd_cbo,
		b.cd_estabelecimento,
		a.dt_procedimento,
		b.nr_atendimento,
		s.cd_registro_proc
	from	procedimento_paciente a,
		conta_paciente b,
		sus_valor_proc_paciente s
	where	a.nr_interno_conta 	= b.nr_interno_conta
	and	b.nr_seq_protocolo 	= nr_seq_protocolo_p
	and	a.nr_sequencia 		= s.nr_sequencia
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.ie_origem_proced 	= 7
	and	(((coalesce(s.cd_cns_medico_exec,'X') = 'X') or (coalesce(s.cd_medico_exec_exp ,'X') = 'X') or (coalesce(s.cd_cbo_exp ,'X') = 'X') or (coalesce(s.nr_idade_pac_proc,0) = 0)) or
		((coalesce(s.cd_registro_proc,0) <> 2) and (coalesce(s.nr_idade_pac_proc,0) > 0)));

type 		fetch_array is table of c01%rowtype;
s_array 	fetch_array;
i		integer := 1;
type vetor is table of fetch_array index by integer;
vetor_c01_w	vetor;
			
BEGIN

begin
qt_reg_commit_w		:= coalesce((obter_valor_param_usuario(1125,167,obter_perfil_ativo,nm_usuario_p,0))::numeric ,1000);
exception
when others then
	qt_reg_commit_w := 1000;
end;

open c01;
loop
fetch c01 bulk collect into s_array limit 100;
	vetor_c01_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;

qt_reg_w := 0;

for i in 1..vetor_c01_w.count loop
	begin
	s_array := vetor_c01_w(i);
	for z in 1..s_array.count loop
		begin
		
		nr_idade_pac_proc_w		:= null;
		
		nr_sequencia_w			:= s_array[z].nr_sequencia;
		cd_procedimento_w			:= s_array[z].cd_procedimento;
		ie_origem_proced_w		:= s_array[z].ie_origem_proced;
		cd_medico_executor_w		:= s_array[z].cd_medico_executor;
		cd_pessoa_fisica_w		:= s_array[z].cd_pessoa_fisica;
		cd_cbo_w				:= s_array[z].cd_cbo;
		cd_estabelecimento_w		:= s_array[z].cd_estabelecimento;
		dt_procedimento_w		:= s_array[z].dt_procedimento;
		nr_atendimento_w		:= s_array[z].nr_atendimento;
		cd_registro_proc_w		:= s_array[z].cd_registro_proc;
		
		if (coalesce(cd_medico_executor_w,'X') = 'X') then
			cd_medico_executor_w := cd_pessoa_fisica_w;
		end if;
		
		cd_cns_medico_exec_w 	:= substr(sus_obter_regra_exp_exec(	cd_procedimento_w,
									ie_origem_proced_w,
									cd_medico_executor_w,
									cd_cbo_w,
									cd_estabelecimento_w,
									'N','S','N','CNS'),1,15);
		
		if (coalesce(cd_cns_medico_exec_w,'X') = 'X') then
			cd_cns_medico_exec_w := substr(obter_dados_pf(cd_medico_executor_w,'CNS'),1,15);
		end if;	
		
		cd_medico_executor_ww := 	substr(sus_obter_regra_exp_exec(	cd_procedimento_w,
									ie_origem_proced_w,
									cd_medico_executor_w,
									cd_cbo_w,
									cd_estabelecimento_w,
									'N','S','N','M'),1,10);
							
		if (coalesce(cd_medico_executor_ww,'X') = 'X') then
			cd_medico_executor_ww := cd_medico_executor_w;
		end if;	
		
		if (coalesce(cd_cbo_w,'X') = 'X') then
			cd_cbo_w := substr(sus_obter_cbo_medico(cd_medico_executor_w,cd_procedimento_w,clock_timestamp(),0),1,6);
		end if;
		
		cd_cbo_ww := substr(sus_obter_regra_exp_exec(cd_procedimento_w,
							ie_origem_proced_w,
							cd_medico_executor_w,
							cd_cbo_w,
							cd_estabelecimento_w,
							'N','S','N','C'),1,6);
						
		if (coalesce(cd_cbo_ww,'X') = 'X') then
			cd_cbo_ww := cd_cbo_w;
		end if;
		
		begin		
		select	ie_tipo_atendimento,
			cd_pessoa_fisica
		into STRICT  	ie_tipo_atendimento_w,
			cd_pessoa_fis_atend_w
		from	atendimento_paciente
		where	nr_atendimento	= nr_atendimento_w;
		exception
		when others then
			ie_tipo_atendimento_w := 1;
		end;	
				
		if (coalesce(cd_registro_proc_w,0) = 0) then
			cd_registro_proc_w	:= sus_obter_tiporeg_proc(cd_procedimento_w, ie_origem_proced_w, 'C', 1);
		end if;
		
		if (cd_registro_proc_w = 1) then
			nr_idade_pac_proc_w	:= (substr(sus_obter_idade_pac_bpa(cd_pessoa_fis_atend_w, cd_procedimento_w, ie_origem_proced_w, dt_procedimento_w, 'A'),1,3))::numeric;
		elsif (cd_registro_proc_w = 2) then
			nr_idade_pac_proc_w	:= (substr(obter_idade_pf(cd_pessoa_fis_atend_w, dt_procedimento_w, 'A'),1,3))::numeric;
		end if;			
		
		update 	sus_valor_proc_paciente
		set	cd_cbo_exp 		= cd_cbo_ww,
			cd_medico_exec_exp 	= cd_medico_executor_ww,
			cd_cns_medico_exec 	= cd_cns_medico_exec_w,
			nr_idade_pac_proc	= nr_idade_pac_proc_w,
			cd_registro_proc	= cd_registro_proc_w,
			nm_usuario 		= nm_usuario_p,
			dt_atualizacao 		= clock_timestamp()
		where 	nr_sequencia 		= nr_sequencia_w;
		
		qt_reg_w := qt_reg_w + 1;						
		if (qt_reg_w = qt_reg_commit_w) then
			qt_reg_w := 0;
			commit;
		end if;
		
		end;
	end loop;
	end;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_sus_valor_proc_pac ( nr_seq_protocolo_p conta_paciente.nr_seq_protocolo%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

