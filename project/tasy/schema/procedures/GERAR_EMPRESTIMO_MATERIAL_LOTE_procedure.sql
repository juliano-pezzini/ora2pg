-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_emprestimo_material_lote ( nr_emprestimo_p bigint, nr_seq_item_p bigint, nr_seq_lote_fornec_p bigint, qt_devolucao_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_lote_fornec_w	material_lote_fornec.ds_lote_fornec%type;
dt_validade_w		material_lote_fornec.dt_validade%type;
ie_indeterminada_w	material_lote_fornec.ie_validade_indeterminada%type;
nr_seq_item_w		emprestimo_material.nr_sequencia%type;
saldo_sequencia_w	emprestimo_material.qt_emprestimo%type;
qt_devolucao_saldo_w emprestimo_material.qt_material%type;
qt_devolucao_baixa_w emprestimo_material.qt_material%type := 0;
qt_lote_item_w		emprestimo_material.qt_material%type;
ie_devolucao_parcial_w boolean := false;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.qt_material,
	(SELECT	coalesce(sum(b.qt_material),0)
	from	emprestimo_material_lote b
	where	b.nr_emprestimo = a.nr_emprestimo
	and	b.nr_seq_item_emprest = a.nr_sequencia) qt_lote_item
from 	emprestimo_material a
where	a.nr_emprestimo = nr_emprestimo_p
and	a.cd_material = (
	select	c.cd_material
	from 	emprestimo_material c
	where	c.nr_emprestimo = nr_emprestimo_p
	and	c.nr_sequencia = nr_seq_item_p)
order by nr_sequencia;


BEGIN

qt_devolucao_saldo_w := qt_devolucao_p;

select	ds_lote_fornec,
	dt_validade,
	ie_validade_indeterminada
into STRICT	ds_lote_fornec_w,
	dt_validade_w,
	ie_indeterminada_w
from	material_lote_fornec
where	nr_sequencia = nr_seq_lote_fornec_p;

open c01;
loop
fetch c01 into
	nr_seq_item_w,
	saldo_sequencia_w,
	qt_lote_item_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	
	/*Caso criado para a OS , pois ocorria problema ao realizar uma devolucao com o mesmo material porem 2 lotes diferentes e quando a quantidade baixada era maior que a metade da quantidade total a baixa*/
	
	if (saldo_sequencia_w < qt_lote_item_w) then
	
	saldo_sequencia_w := qt_lote_item_w - saldo_sequencia_w;
	
	else
	
	saldo_sequencia_w := saldo_sequencia_w - qt_lote_item_w;
	
	end if;
		

	if ((qt_devolucao_saldo_w - saldo_sequencia_w) >= 0) then
		begin
	
					
		qt_devolucao_baixa_w := saldo_sequencia_w;
					 		      
		qt_devolucao_saldo_w := (qt_devolucao_saldo_w - saldo_sequencia_w);
		end;
	else
		begin
		qt_devolucao_baixa_w := qt_devolucao_saldo_w;
		ie_devolucao_parcial_w := true;
		end;
	end if;

	
	if (qt_devolucao_baixa_w > 0) then
	begin	

	insert into emprestimo_material_lote(
		ds_lote_fornec,
		dt_atualizacao,
		dt_atualizacao_nrec,
		dt_validade,
		ie_indeterminada,
		nm_usuario,
		nm_usuario_nrec,
		nr_emprestimo,
		nr_seq_item_emprest,
		nr_seq_lote_fornec,
		nr_sequencia,
		qt_material)
	values (
		ds_lote_fornec_w,
		clock_timestamp(),
		clock_timestamp(),
		dt_validade_w,
		ie_indeterminada_w,
		nm_usuario_p,
		nm_usuario_p,
		nr_emprestimo_p,
		nr_seq_item_p,
		nr_seq_lote_fornec_p,
		nextval('emprestimo_material_lote_seq'),
		qt_devolucao_baixa_w);
	end;
	end if;
	
	exit when ie_devolucao_parcial_w;
		
	end;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_emprestimo_material_lote ( nr_emprestimo_p bigint, nr_seq_item_p bigint, nr_seq_lote_fornec_p bigint, qt_devolucao_p bigint, nm_usuario_p text) FROM PUBLIC;

