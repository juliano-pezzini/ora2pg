-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_inserir_recom_prescr_reg ( nr_atendimento_p atendimento_paciente.nr_atendimento%type, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, nr_prescricao_p prescr_medica.nr_prescricao%type, nr_sequencia_p cpoe_recomendacao.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_perfil_p perfil.cd_perfil%type, nm_usuario_p usuario.nm_usuario%type, cd_setor_atendimento_p setor_atendimento.cd_setor_atendimento%type, nr_seq_agrupamento_p agrupamento_setor.nr_sequencia%type, cd_convenio_p convenio.cd_convenio%type, dt_inicio_prescr_p timestamp, dt_inicio_ret_p INOUT timestamp, ie_copia_diaria_p char default 'N') AS $body$
DECLARE


ds_erro_w					varchar(2000);
ds_parametro_w                 varchar(2000);
dt_atualizacao_w 			cpoe_recomendacao.dt_atualizacao%type;
nr_seq_topografia_w			cpoe_recomendacao.nr_seq_topografia%type;
nr_sequencia_w				cpoe_recomendacao.nr_sequencia%type;
ds_recomendacao_w 			cpoe_recomendacao.ds_recomendacao%type;
hr_prim_horario_w			cpoe_recomendacao.hr_prim_horario%type;
ie_urgencia_w 				cpoe_recomendacao.ie_urgencia%type;
ie_administracao_w 			cpoe_recomendacao.ie_urgencia%type;
ie_retrogrado_w				cpoe_recomendacao.ie_retrogrado%type;
dt_fim_rec_w				cpoe_recomendacao.dt_fim%type;

nr_seq_classif_w			tipo_recomendacao.nr_seq_classif%type;
cd_recomendacao_w 			tipo_recomendacao.cd_tipo_recomendacao%type;

cd_kit_w					kit_mat_recomendacao.cd_kit%type;

nr_prescricao_orig_w		prescr_medica.nr_prescricao%type;

nr_sequencia_orig_w			prescr_recomendacao.nr_sequencia%type;
nr_seq_recomendacao_w		prescr_recomendacao.nr_sequencia%type;
nr_ocorrencia_w				prescr_recomendacao.nr_ocorrencia%type;

cd_intervalo_w				intervalo_prescricao.cd_intervalo%type;
qt_operacao_w				intervalo_prescricao.qt_operacao%type;
ie_operacao_w				intervalo_prescricao.ie_operacao%type;

ds_horarios_w 				varchar(4000);
ds_horarios_aux_w 			varchar(4000);
ds_horarios_aux2_w 			varchar(4000);
ie_recomendacao_alta_w		char(1);
ie_prescricao_alta_w		char(1) := 'N';
ie_se_necessario_w			char(1);
ie_acm_w					char(1);
dt_inicio_w					timestamp;
dt_fim_w					timestamp;
dt_inicio_base_w			timestamp;
dt_inicio_orig_w			timestamp;
nr_horas_prox_geracao_w		bigint;
ie_calcula_horarios_w		boolean;
sql_w                       varchar(200);
dt_inicio_aux_w   			timestamp;
dt_prox_geracao_w           timestamp;




c01 CURSOR FOR
SELECT	a.dt_atualizacao, 
		a.ds_recomendacao, 
		a.cd_intervalo,
		a.ds_horarios, 
		a.cd_recomendacao,
		a.hr_prim_horario, 
		a.nr_seq_topografia,
		a.nr_sequencia,
		a.dt_inicio,
		a.ie_urgencia,
		a.dt_fim,
		coalesce(a.ie_administracao,'P'),
		coalesce(ie_retrogrado,'N'),
		a.cd_kit,
		CASE WHEN coalesce(a.dt_lib_suspensao::text, '') = '' THEN  a.dt_fim  ELSE coalesce(a.dt_suspensao,a.dt_fim) END  dt_fim_rec
from	cpoe_recomendacao a
where	a.nr_sequencia = nr_sequencia_p
and		((CASE WHEN coalesce(a.dt_lib_suspensao::text, '') = '' THEN  a.dt_fim  ELSE coalesce(a.dt_suspensao,a.dt_fim) END  >= clock_timestamp()) or (CASE WHEN coalesce(a.dt_lib_suspensao::text, '') = '' THEN  a.dt_fim  ELSE coalesce(a.dt_suspensao,a.dt_fim) coalesce(END::text, '') = '') or (coalesce(a.ie_retrogrado,'N') = 'S' AND a.dt_inicio >= dt_inicio_prescr_p)) -- retrograde/backward item
order by
		a.nr_sequencia;

	procedure Calcular_horarios_item is
	;
BEGIN
		if (ie_administracao_w = 'P') then
			SELECT * FROM CPOE_Prever_horarios_futuros(	nr_atendimento_p, nr_prescricao_p, nr_sequencia_p, 'prescr_recomendacao', 'nr_seq_rec_cpoe', 'prescr_rec_hor', 'nr_seq_recomendacao', 'cpoe_recomendacao', dt_inicio_base_w, dt_inicio_w, dt_fim_w, cd_intervalo_w, ds_horarios_w, nr_ocorrencia_w, hr_prim_horario_w, cd_estabelecimento_p, cd_perfil_p, nm_usuario_p) INTO STRICT dt_inicio_w, dt_fim_w, ds_horarios_w, nr_ocorrencia_w, hr_prim_horario_w;
		end if;
	end;

	procedure Localizar_ultimo_item is
	begin
		nr_prescricao_orig_w	:= null;
		nr_sequencia_orig_w		:= null;

		if (ie_calcula_horarios_w) and (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
			-- Localizar ultima prescricao
			select	max(a.nr_prescricao)
			into STRICT	nr_prescricao_orig_w
			from	prescr_medica a
			where	a.nr_atendimento = nr_atendimento_p
			and		a.dt_prescricao > dt_inicio_base_w - 10
			and		exists (	SELECT	1
							from	prescr_recomendacao b
							where	b.nr_prescricao = a.nr_prescricao
							and		b.nr_seq_rec_cpoe = nr_sequencia_p );

			if (nr_prescricao_orig_w IS NOT NULL AND nr_prescricao_orig_w::text <> '') then
				-- Itens copiados nao devem ser gerados como agora
				ie_urgencia_w	:= null;

				-- Localizar ultimo item
				select	min(b.nr_sequencia)
				into STRICT	nr_sequencia_orig_w
				from	prescr_recomendacao b
				where	b.nr_prescricao = nr_prescricao_orig_w
				and		b.nr_seq_rec_cpoe = nr_sequencia_p;
			end if;
		end if;
	end;

begin

select	coalesce(max(nr_sequencia),0)
into STRICT	nr_seq_recomendacao_w
from	prescr_recomendacao
where	nr_prescricao = nr_prescricao_p;

dt_inicio_base_w		:= trunc(dt_inicio_prescr_p,'mi');
nr_horas_prox_geracao_w	:= get_qt_hours_after_copy_cpoe(cd_perfil_p, nm_usuario_p, cd_estabelecimento_p);

open c01;
loop
fetch c01 into	
	dt_atualizacao_w,
	ds_recomendacao_w, 
	cd_intervalo_w, 
	ds_horarios_w, 
	cd_recomendacao_w, 
	hr_prim_horario_w,
	nr_seq_topografia_w,
	nr_sequencia_w,
	dt_inicio_orig_w,
	ie_urgencia_w,
	dt_fim_w,
	ie_administracao_w,
	ie_retrogrado_w,
	cd_kit_w,
	dt_fim_rec_w;	
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	nr_seq_recomendacao_w	:= nr_seq_recomendacao_w+1;

	ie_calcula_horarios_w	:= false;
	dt_inicio_w				:= dt_inicio_orig_w;

	-- Itens ACM e SN nao possuem 1 horario, definir inicio do item para execucao da geracao.
	if (ie_administracao_w <> 'P') then
		if (trunc(dt_inicio_w) > trunc(dt_inicio_base_w)) then
			hr_prim_horario_w	:= '00:00';
		else
			hr_prim_horario_w		:= to_char(dt_inicio_base_w,'hh24:mi');
		end if;
	end if;

	-- Atualiza a data inicio com dia e horario.
	dt_inicio_w		:= to_date(to_char(dt_inicio_w,'dd/mm/yyyy ') || hr_prim_horario_w,'dd/mm/yyyy hh24:mi');

	-- Atualizar data de inicio com a data atual, para itens que a data de inicio ja tenha sido ultrapassada.

	-- E se for nao for a primeira prescricao de um item retrogrado
	if (dt_inicio_w < dt_inicio_base_w) and
		(((ie_copia_diaria_p = 'N')  and (coalesce(ie_retrogrado_w,'N') <> 'S')) or (ie_copia_diaria_p = 'S')) then
		-- Assumir data da prescricao para o item
		dt_inicio_w		:= to_date(to_char(dt_inicio_base_w,'dd/mm/yyyy ') || hr_prim_horario_w, 'dd/mm/yyyy hh24:mi');
		-- Adicionar um dia, caso o inicio do item, nao caia na data de hoje
        BEGIN
            sql_w := 'CALL obter_dt_ini_prescr_reg_md(:1, :2) INTO :dt_inicio_aux_w';
            EXECUTE sql_w
                USING IN dt_inicio_w, IN dt_inicio_base_w, OUT dt_inicio_aux_w;

        EXCEPTION
            WHEN OTHERS THEN
                dt_inicio_aux_w := NULL;
                ds_erro_w := sqlerrm;ds_parametro_w := 'nr_atendimento_p: ' || nr_atendimento_p || ' - cd_pessoa_fisica_p: ' || cd_pessoa_fisica_p || ' - nr_prescricao_p: ' || nr_prescricao_p || ' - dt_inicio_prescr_p: ' || dt_inicio_prescr_p || ' - dt_inicio_ret_p: ' || dt_inicio_ret_p || ' - ie_copia_diaria_p: ' || ie_copia_diaria_p || ' - dt_atualizacao_w: ' || dt_atualizacao_w || ' - ie_urgencia_w: ' || ie_urgencia_w;
                ds_parametro_w := ds_parametro_w || 'dt_inicio_w: ' || dt_inicio_w || ' - dt_inicio_base_w: ' || dt_inicio_base_w || ' - dt_inicio_aux_w: ' || dt_inicio_aux_w;
                CALL gravar_log_medical_device('CPOE_GERAR_ORIENTACAO_PREPARO', 'obter_dt_ini_prescr_reg_md', ds_parametro_w, ds_erro_w, wheb_usuario_pck.get_nm_usuario, 'S');
        END;

        dt_inicio_w := dt_inicio_aux_w;

		ie_calcula_horarios_w	:= true;
	end if;


	-- Localizar ultima prescricao e item principal vinculado ao registro da CPOE
	Localizar_ultimo_item;

	if (ie_copia_diaria_p = 'S' and (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') and (nr_prescricao_orig_w IS NOT NULL AND nr_prescricao_orig_w::text <> '')) then

		select	max(qt_operacao),
			max(ie_operacao)
		into STRICT	qt_operacao_w,
			ie_operacao_w
		from	intervalo_prescricao
		where	cd_intervalo = cd_intervalo_w;

		if (ie_operacao_w = 'H' and qt_operacao_w > 12) then

			dt_inicio_w := cpoe_obter_inicio_interv_horas(cd_intervalo_w, dt_inicio_w, dt_inicio_base_w);
			hr_prim_horario_w	:= to_char(dt_inicio_w,'hh24:mi');
			dt_inicio_base_w	:= dt_inicio_w;
			ds_horarios_w		:= hr_prim_horario_w;

			if (qt_operacao_w < 24) then
				SELECT * FROM cpoe_calcular_horario_prescr(nr_atendimento_p, cd_intervalo_w, null, dt_inicio_w, null, 0, nr_ocorrencia_w, ds_horarios_aux_w, ds_horarios_aux2_w, nm_usuario_p, cd_estabelecimento_p, cd_perfil_p, '', null, null, null, null, 24) INTO STRICT nr_ocorrencia_w, ds_horarios_aux_w, ds_horarios_aux2_w;

				ds_horarios_w := ds_horarios_aux_w||ds_horarios_aux2_w;
				ds_horarios_w := replace(padroniza_horario_prescr(ds_horarios_w,NULL),'A','');
			end if;

			update	cpoe_recomendacao
			set		hr_prim_horario = hr_prim_horario_w,
					ds_horarios = ds_horarios_w
			where	nr_sequencia = nr_sequencia_p;	

			ie_calcula_horarios_w := false;
		end if;
	end if;

	-- Recalcula os horarios do item, caso a data de inicio, nao seja a mesma da tabela de CPOE_RECOMENDACAO
	if (ie_calcula_horarios_w) then
		Calcular_horarios_item;
	end if;


	-- Caso a data de inicio do item seja maior que a data base de inicio, reprogramar a geracao para o futuro
	if (dt_inicio_w > dt_inicio_base_w + 1 - 1/86400) then

        BEGIN
            sql_w := 'CALL obter_dt_prox_geracao_cpoe_md(:1, :2) INTO :dt_prox_geracao_w';
            EXECUTE sql_w
                USING IN dt_inicio_w, IN nr_horas_prox_geracao_w, OUT dt_prox_geracao_w;

        EXCEPTION
            WHEN OTHERS THEN
                dt_prox_geracao_w := NULL;
                ds_erro_w := sqlerrm;ds_parametro_w := 'nr_atendimento_p: ' || nr_atendimento_p || ' - cd_pessoa_fisica_p: ' || cd_pessoa_fisica_p || ' - nr_prescricao_p: ' || nr_prescricao_p || ' - dt_inicio_prescr_p: ' || dt_inicio_prescr_p || ' - dt_inicio_ret_p: ' || dt_inicio_ret_p || ' - ie_copia_diaria_p: ' || ie_copia_diaria_p || ' - dt_atualizacao_w: ' || dt_atualizacao_w || ' - ie_urgencia_w: ' || ie_urgencia_w;
                ds_parametro_w := ds_parametro_w || 'dt_inicio_w: ' || dt_inicio_w || ' - nr_horas_prox_geracao_w: ' || nr_horas_prox_geracao_w || ' - dt_prox_geracao_w: ' || dt_prox_geracao_w;
                CALL gravar_log_medical_device('CPOE_GERAR_ORIENTACAO_PREPARO', 'obter_dt_prox_geracao_cpoe_md', ds_parametro_w, ds_erro_w, wheb_usuario_pck.get_nm_usuario, 'S');
        END;


		update	cpoe_recomendacao
		set		dt_prox_geracao = dt_prox_geracao_w
		where	nr_sequencia = nr_sequencia_p;

		CALL gravar_log_cpoe(substr('CPOE_INSERIR_RECOM_PRESCR_REG LOG DT_INICIO_W > DT_INICIO_BASE_W:'
			||'//dt_inicio_base_w : ' || to_char(dt_inicio_base_w,'dd/mm/yyyy hh24:mi:ss')
			||' dt_inicio_w : ' || to_char(dt_inicio_w,'dd/mm/yyyy hh24:mi:ss')
			||' dt_prox_geracao : ' || to_char((trunc(dt_inicio_w,'hh24')-nr_horas_prox_geracao_w/24),'dd/mm/yyyy hh24:mi:ss')
			||' nr_prescricao_p : ' || nr_prescricao_p
			||' nr_seq_rec_cpoe_w :' || nr_sequencia_p
			||' cd_perfil_p: ' || cd_perfil_p,1,2000),
			nr_atendimento_p, 'R', nr_sequencia_p);
		goto proximo_item;
	end if;

	-- Se o inicio do item for apos a data de fim, definida para o mesmo, este item nao deve ser mais copiado.
	if (dt_fim_w IS NOT NULL AND dt_fim_w::text <> '') and (dt_fim_w <= dt_inicio_w) then
		CALL gravar_log_cpoe(substr('CPOE_INSERIR_RECOM_PRESCR_REG LOG DT_FIM_W <= DT_INICIO_W:'
			||'//dt_inicio_base_w : ' || to_char(dt_inicio_base_w,'dd/mm/yyyy hh24:mi:ss')
			||' dt_inicio_w : ' || to_char(dt_inicio_w,'dd/mm/yyyy hh24:mi:ss')
			||' dt_fim_w : ' || to_char(dt_fim_w,'dd/mm/yyyy hh24:mi:ss')
			||' nr_prescricao_p : ' || nr_prescricao_p
			||' nr_seq_rec_cpoe_w :' || nr_sequencia_p
			||' cd_perfil_p: ' || cd_perfil_p,1,2000),
			nr_atendimento_p, 'R', nr_sequencia_p);
		goto proximo_item;
	end if;

	-- Retornar a maior data de inicio dos itens.
	if (coalesce(dt_inicio_ret_p::text, '') = '') or (dt_inicio_w > dt_inicio_ret_p) then
		dt_inicio_ret_p	:= dt_inicio_w;
	end if;

	ie_se_necessario_w	:= 'N';
	ie_acm_w			:= 'N';

	if (ie_administracao_w = 'N') then
		ie_se_necessario_w	:= 'S';
		ie_acm_w			:= 'N';
		hr_prim_horario_w	:= null;
		ds_horarios_w		:= 'SN';
		ie_urgencia_w		:= null;
	elsif (ie_administracao_w = 'C') then
		ie_se_necessario_w	:= 'N';
		ie_acm_w			:= 'S';
		hr_prim_horario_w	:= null;
		ds_horarios_w		:= 'ACM';
		ie_urgencia_w		:= null;
	end if;

	begin
		if (ie_copia_diaria_p = 'S' AND dt_fim_rec_w IS NOT NULL AND dt_fim_rec_w::text <> '') then
			ds_horarios_w := cpoe_recalcula_horarios_copia(ds_horarios_w, dt_inicio_w, dt_fim_rec_w, ie_acm_w, ie_se_necessario_w, cd_intervalo_w);
			nr_ocorrencia_w := obter_ocorrencias_horarios_rep(ds_horarios_w);
		end if;
	exception when others then
		CALL gravar_log_cpoe(substr('CPOE_INSERIR_RECOM_PRESCR_REG EXCEPTION CPOE_RECALCULA_HORARIOS_COPIA ASSOC: ' || substr(to_char(sqlerrm), 1, 2000)
			|| '-nr_atendimento_p: ' || nr_atendimento_p
			|| '-nr_prescricao_p: ' || nr_prescricao_p
			|| '-cd_estabelecimento_p: ' || cd_estabelecimento_p
			|| '-cd_perfil_p: ' || cd_perfil_p
			|| '-nm_usuario_p: ' || nm_usuario_p
			|| '-cd_setor_atendimento_p' || cd_setor_atendimento_p
			|| '-nr_seq_agrupamento_p: '|| nr_seq_agrupamento_p
			|| '-cd_convenio_p: ' || cd_convenio_p
			|| '-dt_inicio_prescr_p : ' || to_char(dt_inicio_prescr_p,'dd/mm/yyyy hh24:mi:ss')
			|| '-dt_inicio_ret_p: ' || to_char(dt_inicio_ret_p,'dd/mm/yyyy hh24:mi:ss')
			|| '-ds_horarios_w: ' || ds_horarios_w
			|| '-dt_inicio_w: ' || to_char(dt_inicio_w,'dd/mm/yyyy hh24:mi:ss')
			|| '-dt_fim_rec_w: ' || to_char(dt_fim_rec_w,'dd/mm/yyyy hh24:mi:ss')
			|| '-ie_acm_w: ' || ie_acm_w
			|| '-ie_se_necessario_w: ' || ie_se_necessario_w
			|| '-cd_intervalo_w: ' || cd_intervalo_w
			, 1, 2000),
			nr_atendimento_p, 'R', nr_sequencia_p);
	end;

	select	max(nr_seq_classif),
			coalesce(max(ie_recomendacao_alta),'N')
	into STRICT	nr_seq_classif_w,
			ie_recomendacao_alta_w
	from	tipo_recomendacao
	where	cd_tipo_recomendacao = cd_recomendacao_w;

	if (ie_recomendacao_alta_w = 'S') then
		ie_prescricao_alta_w	:= 'S';
	end if;

	insert into prescr_recomendacao(
				nr_prescricao,
				nr_sequencia, 
				ie_destino_rec, 
				dt_atualizacao, 
				nm_usuario, 
				ds_recomendacao,
				cd_intervalo,
				ds_horarios,
				cd_recomendacao,
				nr_seq_classif,
				ie_urgencia,
				ie_acm,
				ie_se_necessario,
				hr_prim_horario,
				ie_suspenso,
				ie_alterar_horario,
				ie_horario_susp,
				ie_erro,
				ie_auxiliar,
				ie_encaminhar,
				ie_fazer,
				ie_orientar,
				ie_supervisionar,
				nr_seq_topografia,
				cd_perfil_ativo,
				nr_seq_rec_cpoe,
				nr_ocorrencia,
				qt_dia_prim_hor,
				dt_inicio,
				nr_prescricao_original,
				nr_seq_anterior,
				cd_kit
			) values (
				nr_prescricao_p,
				nr_seq_recomendacao_w,
				'E',
				dt_atualizacao_w, 
				nm_usuario_p, 
				ds_recomendacao_w, 
				cd_intervalo_w, 
				ds_horarios_w, 
				cd_recomendacao_w,
				nr_seq_classif_w,				
				CASE WHEN coalesce(ie_urgencia_w::text, '') = '' THEN 'N'  ELSE 'S' END ,
				ie_acm_w, 
				ie_se_necessario_w, 
				hr_prim_horario_w, 
				'N',
				'S',
				'N',
				0,
				'X',
				'X',	
				'X',
				'X',
				'X',
				nr_seq_topografia_w,
				cd_perfil_p,
				nr_sequencia_w,
				nr_ocorrencia_w,
				0,
				dt_inicio_w,
				nr_prescricao_orig_w,
				nr_sequencia_orig_w,
				cd_kit_w );
	commit;

    CALL gerar_nut_orientacao_list(nr_sequencia_w, nr_atendimento_p, cd_pessoa_fisica_p, cd_setor_atendimento_p, nm_usuario_p, cd_recomendacao_w, dt_inicio_w);
	
	if (coalesce(cd_kit_w::text, '') = '') then
		-- Conforme alinhamento com Felipe Martini (OS 751592), sera gerado 1 unico kit, da forma mais restritiva
		select	max(cd_kit)
		into STRICT	cd_kit_w
		from	kit_mat_recomendacao
		where	((coalesce(cd_convenio::text, '') = '') or (cd_convenio = cd_convenio_p))
		and		((coalesce(cd_perfil::text, '') = '') or (cd_perfil = cd_perfil_p))
		and		coalesce(cd_setor_atendimento, cd_setor_atendimento_p) = cd_setor_atendimento_p
		and		((coalesce(nr_seq_agrupamento::text, '') = '') or (nr_seq_agrupamento = nr_seq_agrupamento_p))
		and		Obter_se_gera_kit_rec_setor(nr_sequencia, cd_setor_atendimento_p) = 'S'
		and		cd_recomendacao		= cd_recomendacao_w
		and		cd_estabelecimento	= cd_estabelecimento_p;
	end if;

	if (cd_kit_w IS NOT NULL AND cd_kit_w::text <> '')then
		CALL Inserir_kit_recomendacao( nm_usuario_p, nr_prescricao_p, nr_seq_recomendacao_w, cd_recomendacao_w, cd_kit_w );
	end if;

	end;

	<<proximo_item>>
	commit;
end loop;
close c01;

if (ie_prescricao_alta_w = 'S') then
	update	prescr_medica
	set		ie_prescricao_alta = ie_prescricao_alta_w
	where	nr_prescricao = nr_prescricao_p;
	commit;
end if;

exception when others then
	CALL gravar_log_cpoe(substr('CPOE_INSERIR_RECOM_PRESCR_REG EXCEPTION:'|| substr(to_char(sqlerrm),1,2000)
		||'//nr_sequencia_p:'||nr_sequencia_p||'nr_prescricao_p:'||nr_prescricao_p
		||'nr_atendimento_p:'||nr_atendimento_p||'cd_estabelecimento_p'||cd_estabelecimento_p
		||'cd_perfil_p:'||cd_perfil_p||'nm_usuario_p : '||nm_usuario_p||'cd_setor_atendimento_p:'||cd_setor_atendimento_p
		||'nr_seq_agrupamento_p : '||nr_seq_agrupamento_p||'cd_convenio_p:'|| cd_convenio_p
		||'dt_inicio_prescr_p :'||to_char(dt_inicio_prescr_p,'dd/mm/yyyy hh24:mi:ss')
		||'dt_inicio_ret_p :'||to_char(dt_inicio_ret_p,'dd/mm/yyyy hh24:mi:ss'),1,2000), 
		nr_atendimento_p, 'R', nr_sequencia_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_inserir_recom_prescr_reg ( nr_atendimento_p atendimento_paciente.nr_atendimento%type, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, nr_prescricao_p prescr_medica.nr_prescricao%type, nr_sequencia_p cpoe_recomendacao.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_perfil_p perfil.cd_perfil%type, nm_usuario_p usuario.nm_usuario%type, cd_setor_atendimento_p setor_atendimento.cd_setor_atendimento%type, nr_seq_agrupamento_p agrupamento_setor.nr_sequencia%type, cd_convenio_p convenio.cd_convenio%type, dt_inicio_prescr_p timestamp, dt_inicio_ret_p INOUT timestamp, ie_copia_diaria_p char default 'N') FROM PUBLIC;

