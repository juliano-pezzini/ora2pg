-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function log_expression_import_stg as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE log_expression_import_stg ( import_id_p w_expression_import_log.import_id%type, cd_expressao_p w_expression_import_log.cd_expressao%type, nm_usuario_p w_expression_import_log.nm_usuario%type, stage_p w_expression_import_log.stage%type, error_code_p w_expression_import_log.error_code%type, error_desc_p w_expression_import_log.error_desc%type ) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL log_expression_import_stg_atx ( ' || quote_nullable(import_id_p) || ',' || quote_nullable(cd_expressao_p) || ',' || quote_nullable(nm_usuario_p) || ',' || quote_nullable(stage_p) || ',' || quote_nullable(error_code_p) || ',' || quote_nullable(error_desc_p) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE log_expression_import_stg_atx ( import_id_p w_expression_import_log.import_id%type, cd_expressao_p w_expression_import_log.cd_expressao%type, nm_usuario_p w_expression_import_log.nm_usuario%type, stage_p w_expression_import_log.stage%type, error_code_p w_expression_import_log.error_code%type, error_desc_p w_expression_import_log.error_desc%type ) AS $body$
BEGIN
    if (coalesce(stage_p::text, '') = '') then
        RAISE EXCEPTION 'invalid_param_e' USING ERRCODE = '50007';
    end if;

    INSERT INTO w_expression_import_log(
        nr_sequencia,
        import_id,
        created_on,
        nm_usuario,
        stage,
        error_desc,
        error_code,
        cd_expressao
    ) VALUES (
        nextval('w_expression_import_log_seq'),
        import_id_p,
        clock_timestamp(),
        nm_usuario_p,
        stage_p,
        error_desc_p,
        error_code_p,
        cd_expressao_p
    );


EXCEPTION
    WHEN SQLSTATE '50007' THEN
        CALL log_expression_import_stg(import_id_p, NULL, nm_usuario_p, 'Insertion failed in Log table', NULL,
                                  '1073417');
    WHEN OTHERS THEN
        CALL log_expression_import_stg(import_id_p, NULL, nm_usuario_p, 'Insertion failed in Log table', SQLSTATE,
                                  sqlerrm);
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE log_expression_import_stg ( import_id_p w_expression_import_log.import_id%type, cd_expressao_p w_expression_import_log.cd_expressao%type, nm_usuario_p w_expression_import_log.nm_usuario%type, stage_p w_expression_import_log.stage%type, error_code_p w_expression_import_log.error_code%type, error_desc_p w_expression_import_log.error_desc%type ) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE log_expression_import_stg_atx ( import_id_p w_expression_import_log.import_id%type, cd_expressao_p w_expression_import_log.cd_expressao%type, nm_usuario_p w_expression_import_log.nm_usuario%type, stage_p w_expression_import_log.stage%type, error_code_p w_expression_import_log.error_code%type, error_desc_p w_expression_import_log.error_desc%type ) FROM PUBLIC;

