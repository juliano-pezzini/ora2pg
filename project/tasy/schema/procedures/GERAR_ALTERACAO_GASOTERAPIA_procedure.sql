-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_alteracao_gasoterapia ( nr_seq_gasoterapia_p bigint, ie_alteracao_p text, qt_gasoterapia_p bigint, ie_unidade_medida_p text, dt_alteracao_p timestamp, nr_prescricao_p bigint, ie_dispositivo_p text, nr_seq_motivo_p bigint, nm_usuario_p text, ds_justificativa_p text, nr_seq_horario_p bigint, nr_seq_assinatura_p bigint default null, ie_java_p text default null, ds_mensagem_p INOUT text DEFAULT NULL, nr_seq_gas_cpoe_p cpoe_gasoterapia.nr_sequencia%type default null, nr_seq_equipamento_p equipamento_resp.nr_sequencia%type default null) AS $body$
DECLARE


nr_seq_evento_w			bigint;
nr_etapa_evento_w		bigint;
nr_seq_gas_w			bigint;
qt_hor_pendente_w		bigint;
dt_inicio_w				timestamp;
dt_entrada_w			timestamp;
ie_status_ant_w			varchar(5);
ie_evento_w				varchar(5);
ie_unidade_medida_w		varchar(15);
qt_gasoterapia_w		double precision;
cont_w					bigint;
dt_ultimo_evento_w		timestamp;
qt_min_rev_w			bigint;
dt_status_ant_w			timestamp;
ie_evento_ww			varchar(15);
nr_sequencia_ev_w		bigint;
dt_atualizacao_w		timestamp;
nr_seq_horario_w		bigint;
nr_seq_horario_ww		bigint;
cd_pessoa_fisica_w		varchar(10);
ie_horario_especial_w	varchar(10);
ie_verifica_w			bigint;
ie_hor_supenso_w		varchar(2);
ds_mensagem_w			varchar(255);
nr_atendimento_w		bigint;
ds_item_w				varchar(255);
dt_horario_w			timestamp;
dt_horario_alteracao_w	timestamp;
cd_evolucao_w			bigint;
ie_tipo_item_cpoe_w		varchar(1);
nr_seq_item_cpoe_w		cpoe_gasoterapia.nr_sequencia%type;
ie_continua_etapa_w		varchar(1);
ie_param_538_w			varchar(3);
nr_seq_gasoterapia_w	prescr_gasoterapia_hor.nr_sequencia%type;
nr_prescricao_w			prescr_medica.nr_prescricao%type;
nm_usuario_adm_w		prescr_gasoterapia_evento.nm_usuario%type;
ie_param682_w			varchar(1);
ie_param8_cpoe_w		varchar(50);
ie_consistir_pend_w		varchar(1);
dt_fim_w				cpoe_gasoterapia.dt_fim%type;
cd_funcao_origem_w		prescr_medica.cd_funcao_origem%type;
ie_gera_sem_certificado_w	varchar(1);
ie_gas_separada_w		varchar(1);
ie_gerar_evolucao_emar_w varchar(1);
ds_param_integration_w   varchar(100);
json_data_w              text;
ie_evento_rv_w          varchar(3);
rv_count_w              varchar(100);
rv_second_w             varchar(100);
i_first_w               varchar(100);
t_first_w               varchar(100);
t_count_w               varchar(100);
ie_param716_w       	varchar(1);
ie_susp_nurse_w 		varchar(2);


BEGIN

CALL Wheb_assist_pck.set_informacoes_usuario(coalesce(wheb_usuario_pck.get_cd_estabelecimento,1), obter_perfil_ativo, nm_usuario_p);

qt_min_rev_w := obter_param_usuario(1113, 447, obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento,1), qt_min_rev_w);
ie_param_538_w := obter_param_usuario(1113, 538, obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento,1), ie_param_538_w);
ie_param682_w := obter_param_usuario(1113, 682, obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento,1), ie_param682_w);
ie_gas_separada_w := obter_param_usuario(1113, 704, obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento,1), ie_gas_separada_w);
ie_param8_cpoe_w := obter_param_usuario(2314, 8, obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento,1), ie_param8_cpoe_w);

nr_prescricao_w		:= nr_prescricao_p;
nr_seq_item_cpoe_w	:= nr_seq_gas_cpoe_p;

if (coalesce(nr_seq_gasoterapia_p,0) > 0) then
	nr_seq_gasoterapia_w	:= nr_seq_gasoterapia_p;
end if;

if (coalesce(nr_seq_horario_p,0) > 0) and (coalesce(nr_seq_gasoterapia_w, 0) = 0) then
	select	max(nr_seq_gasoterapia),
			max(nr_prescricao)
	into STRICT	nr_seq_gasoterapia_w,
			nr_prescricao_w
	from	prescr_gasoterapia_hor
	where	nr_sequencia = nr_seq_horario_p;
end if;

--Verificar se a gasoterapia esta no modo agrupado
if (coalesce(nr_seq_item_cpoe_w,0) > 0  and
	coalesce(nr_seq_gasoterapia_w,0) = 0 and
	coalesce(nr_seq_horario_p,0) = 0 and
	ie_gas_separada_w = 'N') then
	--Obter a sequencia correta da gasoterapia para realizar a alteracao
	nr_seq_gasoterapia_w	:= obter_seq_gas_vigente(nr_seq_item_cpoe_w,ie_alteracao_p);
	
	--Obtem a prescricao conforme sequencia da gasoterapia
	select	max(nr_prescricao)
	into STRICT	nr_prescricao_w
	from	prescr_gasoterapia	a
	where	a.nr_sequencia	= nr_seq_gasoterapia_w;
end if;

select	max(a.dt_entrada),
		max(b.nr_atendimento),
		max(a.cd_pessoa_fisica),
		max(b.cd_funcao_origem)
into STRICT	dt_entrada_w,
		nr_atendimento_w,
		cd_pessoa_fisica_w,
		cd_funcao_origem_w
from	atendimento_paciente 	a,
		prescr_medica 			b
where	a.nr_atendimento	= b.nr_atendimento
and		b.nr_prescricao		= nr_prescricao_w;

if (dt_alteracao_p < dt_entrada_w) then
	-- A data informada e menor que a data de entrada do paciente!
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(210909);
end if;

select	max(nr_seq_gas)
into STRICT	nr_seq_gas_w
from	prescr_gasoterapia	a
where	a.nr_sequencia	= nr_seq_gasoterapia_w;

ds_item_w	:= substr(obter_descricao_padrao('GAS', 'DS_GAS',nr_seq_gas_w),1,254);

-- Iniciar gasoterapia
if (ie_alteracao_p	= 'I') then

	if (coalesce(nr_seq_horario_p::text, '') = '') or (nr_seq_horario_p = 0) or (nr_seq_horario_p <> '') then		
		select	min(nr_sequencia)
		into STRICT	nr_seq_horario_w
		from	prescr_gasoterapia_hor
		where	nr_seq_gasoterapia	= nr_seq_gasoterapia_w
		and 	nr_prescricao		= nr_prescricao_w
        and     coalesce(ie_horario_especial,'N') = 'N'
		and		coalesce(dt_fim_horario::text, '') = ''
		and 	coalesce(dt_suspensao::text, '') = '';
	else
		nr_seq_horario_w := nr_seq_horario_p;
	end if;
	
	ie_consistir_pend_w	:= coalesce(obter_valor_param_usuario(1113,52, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento,1)), 'N');

	begin
	
   if (ie_consistir_pend_w = 'S') then
		CALL adep_consistir_alter_horario(nr_seq_horario_w,'O');		
	end if;
		
	exception when others then
		ds_mensagem_p	:= substr(sqlerrm,1,255);
		CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_mensagem_p);
	end;	
	
	cd_evolucao_w := Gerar_evolPaci_automa(	'GA', nm_usuario_p, nr_atendimento_w, ds_item_w, nr_seq_horario_w, 'A', Wheb_mensagem_pck.get_texto(1056061),  -- Iniciar gasoterapia
							null, null, null, null, null, cd_evolucao_w);

	--- Proxima sequencia da tabela
	select	nextval('prescr_gasoterapia_evento_seq')
	into STRICT	nr_seq_evento_w
	;

	--- Busca a etapa mais 1
	select	coalesce(max(nr_etapa_evento),0) + 1
	into STRICT	nr_etapa_evento_w
	from	prescr_gasoterapia_evento
	where	nr_seq_gasoterapia = nr_seq_gasoterapia_w;
		
	--- Insere o evento de inicio da gasoterapia
	insert into prescr_gasoterapia_evento(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_gasoterapia,
		ie_evento,
		qt_gasoterapia,
		ie_unidade_medida,
		dt_evento,
		ie_evento_valido,
		ie_disp_resp_esp,
		nr_seq_assinatura,
		nr_etapa_evento,
		nr_seq_horario,
		ds_justificativa,
		nr_seq_gas_cpoe,
		cd_evolucao,
    nr_seq_equipamento)
	values (nr_seq_evento_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_gasoterapia_w,
		'I',
		qt_gasoterapia_p,
		ie_unidade_medida_p,
		coalesce(dt_alteracao_p, clock_timestamp()),
		'S',
		ie_dispositivo_p,
		nr_seq_assinatura_p,
		nr_etapa_evento_w,
		nr_seq_horario_w,
		ds_justificativa_p,
		nr_seq_gas_cpoe_p,
		cd_evolucao_w,
    nr_seq_equipamento_p);
		
	CALL Gerar_cobranca_gasoterapia(nr_seq_gas_w,nr_prescricao_w, nr_seq_gasoterapia_w, dt_inicio_w, coalesce(dt_alteracao_p,clock_timestamp()), nm_usuario_p,'X');

-- Interromper gasoterapia
elsif (ie_alteracao_p	= 'IN') then
	
	select	max(dt_evento)
	into STRICT	dt_ultimo_evento_w
	from	prescr_gasoterapia_evento
	where	nr_sequencia in ( 	SELECT	max(nr_sequencia)
								from	prescr_gasoterapia_evento
								where	nr_seq_gasoterapia 	= nr_seq_gasoterapia_w
								and		coalesce(ie_evento_valido,'S') = 'S');	
			
    if (dt_alteracao_p <= dt_ultimo_evento_w) and (coalesce(ie_java_p,'N') = 'S') then		
		-- 'A data de interrupcao e inferior a data do ultimo evento.';
		ds_mensagem_p := wheb_mensagem_pck.get_texto(1052852);
	else
    if (coalesce(nr_seq_horario_p::text, '') = '') or (nr_seq_horario_p = 0) or (nr_seq_horario_p <> '') then		
      select	min(nr_sequencia)
      into STRICT	nr_seq_horario_w
      from	prescr_gasoterapia_hor
      where	nr_seq_gasoterapia	= nr_seq_gasoterapia_w
      and 	nr_prescricao		= nr_prescricao_w
      and		coalesce(dt_fim_horario::text, '') = ''
      and 	coalesce(dt_suspensao::text, '') = '';		
    else
      nr_seq_horario_w := nr_seq_horario_p;
    end if;

    select	coalesce(max(ie_troca_etapa), 'S')	
    into STRICT	ie_continua_etapa_w
    from	motivo_evento_gas
    where	nr_sequencia = nr_seq_motivo_p;

    if (ie_continua_etapa_w = 'S') then
    

      select	count(a.nr_sequencia)
      into STRICT	qt_hor_pendente_w
      from	prescr_gasoterapia b,
          prescr_gasoterapia_hor a
      where	a.nr_prescricao			= b.nr_prescricao
      and		a.nr_seq_gasoterapia	= b.nr_sequencia
      and 		b.nr_sequencia = nr_seq_gasoterapia_w
      and 		a.nr_sequencia <> nr_seq_horario_w 
      and		coalesce(a.dt_suspensao::text, '') = ''
      and		coalesce(a.dt_fim_horario::text, '') = ''
      and		coalesce(a.ie_horario_especial, 'N') = 'N' LIMIT 1;

      if (qt_hor_pendente_w = 0) then
        wheb_mensagem_pck. exibir_mensagem_abort(949873);
      end if;
    end if;

    select	max(nr_etapa_evento)
    into STRICT	nr_etapa_evento_w
    from	prescr_gasoterapia_evento
    where	nr_seq_gasoterapia = nr_seq_gasoterapia_w;	

    update	prescr_gasoterapia_hor
    set		dt_interrupcao = clock_timestamp()
    where	nr_seq_gasoterapia = nr_seq_gasoterapia_w
    and		nr_etapa = nr_etapa_evento_w;

	cd_evolucao_w := Gerar_evolPaci_automa(	'GA', nm_usuario_p, nr_atendimento_w, ds_item_w, nr_seq_horario_w, 'A', Wheb_mensagem_pck.get_texto(1056063),  --Interromper gasoterapia
							null, null, null, null, null, cd_evolucao_w);

    select	nextval('prescr_gasoterapia_evento_seq')
    into STRICT	nr_seq_evento_w
;

    insert into prescr_gasoterapia_evento(nr_sequencia,
      dt_atualizacao,
      nm_usuario,
      dt_atualizacao_nrec,
      nm_usuario_nrec,
      nr_seq_gasoterapia,
      ie_evento,
      dt_evento,
      ie_evento_valido,
      ie_disp_resp_esp,
      nr_seq_motivo,
      nr_seq_assinatura,
      nr_etapa_evento,
      nr_seq_horario,
      ds_justificativa,
	  nr_seq_gas_cpoe,
	  cd_evolucao,
    nr_seq_equipamento)
    values (nr_seq_evento_w,
      clock_timestamp(),
      nm_usuario_p,
      clock_timestamp(),
      nm_usuario_p,
      nr_seq_gasoterapia_w,
      'IN',
      coalesce(dt_alteracao_p, clock_timestamp()),
      'S',
      ie_dispositivo_p,
      nr_seq_motivo_p,
      nr_seq_assinatura_p,
      nr_etapa_evento_w,
      nr_seq_horario_w,
      ds_justificativa_p,
	  nr_seq_gas_cpoe_p,
	  cd_evolucao_w,
    nr_seq_equipamento_p);

    select	min(dt_evento)
    into STRICT	dt_inicio_w
    from	prescr_gasoterapia_evento
    where	nr_seq_gasoterapia	= nr_seq_gasoterapia_w
    and		ie_evento		= 'I';

    CALL Gerar_cobranca_gasoterapia(nr_seq_gas_w,nr_prescricao_w, nr_seq_gasoterapia_w, dt_inicio_w, coalesce(dt_alteracao_p,clock_timestamp()), nm_usuario_p,'I');
	if (ie_continua_etapa_w = 'S') then

		select	max(a.dt_horario)
		into STRICT	dt_horario_w				
		from	prescr_gasoterapia_hor a
		where	a.nr_seq_gasoterapia = nr_seq_gasoterapia_w
		and		a.nr_etapa = nr_etapa_evento_w;

		CALL gerar_alter_horario_item_assoc(	nr_atendimento_p => nr_atendimento_w,
										ie_tipo_item_p 	=> 'IAO',
										nr_prescricao_p	=> nr_prescricao_w,
										nr_seq_item_p 	=> nr_seq_gasoterapia_w,
										cd_item_p 		=> nr_seq_gasoterapia_w,
										dt_horario_p 	=> dt_horario_w,
										dt_evento_p 	=> coalesce(dt_alteracao_p, clock_timestamp()),
										ie_alteracao_p 	=> 3,
										nm_usuario_p 	=> nm_usuario_p);
	end if;
  end if;

-- Reiniciar
elsif (ie_alteracao_p	= 'R') then 

    select	max(a.dt_evento)
	into STRICT	dt_ultimo_evento_w
	from	prescr_gasoterapia_evento a
	where	a.nr_sequencia in ( 	SELECT	max(b.nr_sequencia)
								from	prescr_gasoterapia_evento b
								where	b.nr_seq_gasoterapia 	= nr_seq_gasoterapia_w
								and		coalesce(b.ie_evento_valido,'S') = 'S');	
	
    if (dt_alteracao_p <= dt_ultimo_evento_w) and (coalesce(ie_java_p,'N') = 'S') then		
		-- 'A data de reinicio e inferior a data do ultimo evento.';
		ds_mensagem_p := wheb_mensagem_pck.get_texto(1044157);
	else

	    select 	max(nr_sequencia)
		into STRICT	nr_seq_evento_w
		from	prescr_gasoterapia_evento
		where	ie_evento = 'IN'
		and		ie_evento_valido = 'S'
		and		nr_seq_gasoterapia = nr_seq_gasoterapia_w;	
	
     	select	coalesce(max(ie_troca_etapa), 'S')	
		into STRICT	ie_continua_etapa_w
		from	motivo_evento_gas
		where	nr_sequencia in (	SELECT	coalesce(max(nr_seq_motivo),0)
								from	prescr_gasoterapia_evento
								where	nr_sequencia = nr_seq_evento_w);
					
	    if (ie_continua_etapa_w = 'N') and (ie_param_538_w = 'S') then
		
		    select	max(nr_etapa_evento)
			into STRICT	nr_etapa_evento_w
			from	prescr_gasoterapia_evento
			where	nr_seq_gasoterapia = nr_seq_gasoterapia_w;
				
			update	prescr_gasoterapia_hor
			set		dt_interrupcao  = NULL,
					nm_usuario_adm = nm_usuario_p
			where	nr_seq_gasoterapia = nr_seq_gasoterapia_w
			and		nr_etapa = nr_etapa_evento_w;
	
		else	
	
	    	select	max(nr_etapa_evento)+1
			into STRICT	nr_etapa_evento_w
			from	prescr_gasoterapia_evento
			where	nr_seq_gasoterapia = nr_seq_gasoterapia_w;
				
			update	prescr_gasoterapia_hor
			set		dt_fim_horario = clock_timestamp(),
					nm_usuario_adm = nm_usuario_p
			where	nr_seq_gasoterapia = nr_seq_gasoterapia_w
			and		nr_etapa = (nr_etapa_evento_w - 1);
		
		end if;	
	
	    if (coalesce(nr_seq_horario_p::text, '') = '') or (nr_seq_horario_p = 0) or (nr_seq_horario_p <> '') or
			((ie_continua_etapa_w = 'S') or (ie_param_538_w = 'N')) then		
			
		    select	min(nr_sequencia)
			into STRICT	nr_seq_horario_w
			from	prescr_gasoterapia_hor
			where	nr_seq_gasoterapia	= nr_seq_gasoterapia_w
			and 	nr_prescricao		= nr_prescricao_w
			and		coalesce(dt_fim_horario::text, '') = ''
			and 	coalesce(dt_suspensao::text, '') = '';		
		else
			nr_seq_horario_w := nr_seq_horario_p;
		end if;		
		
		cd_evolucao_w := Gerar_evolPaci_automa(	'GA', nm_usuario_p, nr_atendimento_w, ds_item_w, nr_seq_horario_w, 'A', Wheb_mensagem_pck.get_texto(1056064),  -- Reiniciar gasoterapia
								null, null, null, null, null, cd_evolucao_w);

	    select	nextval('prescr_gasoterapia_evento_seq')
		into STRICT	nr_seq_evento_w
		;
	
	    insert into prescr_gasoterapia_evento(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_gasoterapia,
			ie_evento,
			dt_evento,
			ie_evento_valido,
			ie_disp_resp_esp,
			nr_seq_assinatura,
			nr_etapa_evento,
			nr_seq_horario,
			ds_justificativa,
			ie_unidade_medida,
			qt_gasoterapia,
			nr_seq_gas_cpoe,
			cd_evolucao,
      nr_seq_equipamento)
		values (nr_seq_evento_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_gasoterapia_w,
			'R',
			coalesce(dt_alteracao_p, clock_timestamp()),
			'S',
			ie_dispositivo_p,
			nr_seq_assinatura_p,
			nr_etapa_evento_w,
			nr_seq_horario_w,
			ds_justificativa_p,
			ie_unidade_medida_p,
			qt_gasoterapia_p,
			nr_seq_gas_cpoe_p,
			cd_evolucao_w,
      nr_seq_equipamento_p);
	end if;

elsif (ie_alteracao_p	= 'T') then
-- Terminar
	select	max(a.nr_etapa_evento)
	into STRICT	nr_etapa_evento_w
	from	prescr_gasoterapia_evento a
	where	a.nr_seq_gasoterapia = nr_seq_gasoterapia_w
	and		a.ie_evento in ('I', 'V', 'R');

	select	max(a.dt_evento)
	into STRICT	dt_ultimo_evento_w
	from	prescr_gasoterapia_evento a
	where	a.nr_sequencia in ( 	SELECT	max(b.nr_sequencia)
								from	prescr_gasoterapia_evento b
								where	b.nr_seq_gasoterapia 	= nr_seq_gasoterapia_w
								and		coalesce(b.ie_evento_valido,'S') = 'S');	
	
	if (dt_alteracao_p < dt_ultimo_evento_w) and (coalesce(ie_java_p,'N') = 'N') then
		--A data de termino e inferior a data do ultimo evento.
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(210910);
	end if;
	
	if (dt_alteracao_p < dt_ultimo_evento_w) and (coalesce(ie_java_p,'N') = 'S') then		
		-- 'A data de termino e inferior a data do ultimo evento.';
		ds_mensagem_p := wheb_mensagem_pck.get_texto(210910);
	else	
		begin
		
		if (coalesce(nr_seq_horario_p::text, '') = '') or (nr_seq_horario_p = 0) or (nr_seq_horario_p <> '') then		
			select	min(nr_sequencia)
			into STRICT	nr_seq_horario_w
			from	prescr_gasoterapia_hor
			where	nr_seq_gasoterapia	= nr_seq_gasoterapia_w
			and 	nr_prescricao		= nr_prescricao_w
			and		coalesce(dt_fim_horario::text, '') = ''
			and 	coalesce(dt_suspensao::text, '') = '';		
		else
			nr_seq_horario_w := nr_seq_horario_p;
		end if;	
		
		update	prescr_gasoterapia_hor a
		set	dt_fim_horario = clock_timestamp(),
			nm_usuario_adm = nm_usuario_p
		where	nr_seq_gasoterapia = nr_seq_gasoterapia_w
		and 	nr_etapa = nr_etapa_evento_w
		and 	nr_prescricao = nr_prescricao_w
		and	coalesce(dt_fim_horario::text, '') = ''
		and	coalesce(dt_suspensao::text, '') = '';

		select	max(dt_horario),
				max(dt_fim_horario)
		into STRICT	dt_horario_w,
				dt_horario_alteracao_w
		from	prescr_gasoterapia_hor		
		where	nr_seq_gasoterapia = nr_seq_gasoterapia_w
		and 	nr_etapa = nr_etapa_evento_w
		and 	nr_prescricao  = nr_prescricao_w
		and		(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '')
		and		nm_usuario_adm	= nm_usuario_p
		and		coalesce(dt_suspensao::text, '') = '';		
		
		select	count(*)
		into STRICT	cont_w
		from	prescr_gasoterapia_hor a
		where	nr_seq_gasoterapia = nr_seq_gasoterapia_w;	
		
------------------------TriggerPoint for TreatmentInterfaceStart---------------------------
		if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'ja_JP') then	
            ds_param_integration_w := '{"recordId" : "' ||nr_seq_gasoterapia_p|| '"' || '}';
            json_data_w := bifrost.send_integration_content('nais.mla.treatment', ds_param_integration_w, wheb_usuario_pck.get_nm_usuario);
        end if;

------------------------TriggerPoint for TreatmentInterfaceEnd---------------------------
		ie_evento_w	:= 'T';

		if (cont_w > 0) then
			select	count(*)
			into STRICT	cont_w
			from	prescr_gasoterapia_hor a
			where	nr_seq_gasoterapia = nr_seq_gasoterapia_w
			and	coalesce(dt_fim_horario::text, '') = ''
			and	coalesce(dt_suspensao::text, '') = ''
			and 	ie_horario_especial <> 'S'
			and 	(nr_etapa IS NOT NULL AND nr_etapa::text <> '');

			if (cont_w > 0) then
				ie_evento_w	:= 'TE';
			end if;
		end if;	
		
		if (coalesce(nr_seq_item_cpoe_w,0) > 0) and (coalesce(cd_funcao_origem_w,0) = 2314) then

			dt_fim_w :=	clock_timestamp();
			
			if (dt_fim_w < dt_horario_w) then	
				dt_fim_w :=	dt_horario_w;
			end if;
			
			if (ie_param8_cpoe_w = 'A') then
				update	cpoe_gasoterapia
				set 	dt_fim =  trunc(dt_fim_w + 1/24,'hh24') - 1/1440,
						nm_usuario = nm_usuario_p,
						dt_atualizacao = clock_timestamp()
				where	nr_sequencia = nr_seq_item_cpoe_w
				and 	coalesce(ie_evento_unico,'N') = 'S'
				and		ie_administracao = 'P';
			end if;						
		end if;
		
		cd_evolucao_w := Gerar_evolPaci_automa(	'GA', nm_usuario_p, nr_atendimento_w, ds_item_w, nr_seq_horario_w, 'A', Wheb_mensagem_pck.get_texto(1056065), -- Terminar gasoterapia
							null, null, null, null, null, cd_evolucao_w);

		select	nextval('prescr_gasoterapia_evento_seq')
		into STRICT	nr_seq_evento_w
		;
		
		insert into prescr_gasoterapia_evento(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_gasoterapia,
			ie_evento,
			dt_evento,
			ie_evento_valido,
			nr_seq_assinatura,
			nr_etapa_evento,
			nr_seq_horario,
			ds_justificativa,
			nr_seq_gas_cpoe,
			cd_evolucao,
      nr_seq_equipamento)
		values (nr_seq_evento_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_gasoterapia_w,
			ie_evento_w,
			coalesce(dt_alteracao_p,clock_timestamp()),
			'S',
			nr_seq_assinatura_p,
			nr_etapa_evento_w,
			nr_seq_horario_w,
			ds_justificativa_p,
			nr_seq_gas_cpoe_p,
			cd_evolucao_w,
      nr_seq_equipamento_p);

		select	min(dt_evento)
		into STRICT	dt_inicio_w
		from	prescr_gasoterapia_evento
		where	nr_seq_gasoterapia	= nr_seq_gasoterapia_w
		and		ie_evento		= 'I';

		CALL Gerar_cobranca_gasoterapia(nr_seq_gas_w,nr_prescricao_w, nr_seq_gasoterapia_w, dt_inicio_w, coalesce(dt_alteracao_p,clock_timestamp()), nm_usuario_p,'T');
		CALL gerar_alter_horario_item_assoc(nr_atendimento_w, 'IAO', nr_prescricao_w, nr_seq_gasoterapia_w, nr_seq_gasoterapia_w, dt_horario_w, dt_horario_alteracao_w, 3, nm_usuario_p);
		end;
	end if;
-- Suspender
elsif (ie_alteracao_p	= 'S') then

	ie_hor_supenso_w	:= obter_se_gas_hor_susp(nr_prescricao_p,coalesce(nr_seq_gasoterapia_p,nr_seq_gasoterapia_w));	

	if (coalesce(nr_seq_horario_p::text, '') = '') or (nr_seq_horario_p = 0) or (nr_seq_horario_p <> '') then		
		select	min(nr_sequencia)
		into STRICT	nr_seq_horario_ww
		from	prescr_gasoterapia_hor
		where	nr_seq_gasoterapia	= nr_seq_gasoterapia_w
		and 	nr_prescricao		= nr_prescricao_w
		and		coalesce(dt_fim_horario::text, '') = ''
		and 	coalesce(dt_suspensao::text, '') = '';		
	else
		nr_seq_horario_ww := nr_seq_horario_p;
	end if;
	
	if (ie_hor_supenso_w = 'S') then
		update	prescr_gasoterapia_hor
		set		dt_suspensao = clock_timestamp(),
				nm_usuario_susp = nm_usuario_p
		where	nr_seq_gasoterapia	= nr_seq_gasoterapia_w
		and 	nr_prescricao		= nr_prescricao_w
		and		coalesce(dt_fim_horario::text, '') = '';
		
		-- Check if there is CPOE record to suspend
		select	max(nr_seq_gas_cpoe)
		into STRICT	nr_seq_item_cpoe_w
		from	prescr_gasoterapia
		where	nr_sequencia	= nr_seq_gasoterapia_w;
		
		if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
			update	cpoe_gasoterapia
			set		dt_suspensao = clock_timestamp(),
					dt_lib_suspensao = clock_timestamp(),
					nm_usuario_susp = nm_usuario_p
			where	nr_sequencia = nr_seq_item_cpoe_w;
		end if;
		
		ie_evento_ww := 'S';
		
	elsif (ie_hor_supenso_w = 'N') then
		select	max(ie_horario_especial)
		into STRICT	ie_horario_especial_w
		from 	prescr_gasoterapia_hor
		where 	nr_prescricao = nr_prescricao_w
		and 	nr_seq_gasoterapia = nr_seq_gasoterapia_w
		and 	nr_sequencia	 = nr_seq_horario_ww
		and 	coalesce(dt_suspensao::text, '') = '';
		
		-- Se houver  um horario selecionado, suspende aquele horario
		if (nr_seq_horario_ww IS NOT NULL AND nr_seq_horario_ww::text <> '') and (nr_seq_horario_ww > 0) and (ie_horario_especial_w = 'N') then
			select 	max(nr_Etapa)
			into STRICT	nr_etapa_evento_w
			from 	prescr_gasoterapia_hor
			where	nr_prescricao = nr_prescricao_w
			and 	nr_sequencia	= nr_seq_horario_ww
			and	nr_seq_gasoterapia	= nr_seq_gasoterapia_w;

			update	prescr_gasoterapia_hor
			set	dt_suspensao = clock_timestamp(),
				nm_usuario_susp = nm_usuario_p
			where	nr_seq_gasoterapia	= nr_seq_gasoterapia_w
			and 	nr_sequencia		= nr_seq_horario_ww
			and 	nr_prescricao		= nr_prescricao_w
			and	coalesce(dt_fim_horario::text, '') = '';
			ie_evento_ww  := 'SH';
			nr_seq_horario_w := nr_seq_horario_ww;
		--- Se nao suspende o item todo
		elsif (ie_horario_especial_w = 'S') then
			update	prescr_gasoterapia_hor
			set	dt_suspensao = clock_timestamp(),
				nm_usuario_susp = nm_usuario_p
			where	nr_seq_gasoterapia	= nr_seq_gasoterapia_w
			and 	nr_prescricao		= nr_prescricao_w
			and	coalesce(dt_fim_horario::text, '') = '';
			ie_evento_ww := 'S';
		else
			select	count(*)
			into STRICT	ie_verifica_w
			from 	prescr_gasoterapia_hor
			where 	nr_prescricao = nr_prescricao_w
			and 	nr_seq_gasoterapia = nr_seq_gasoterapia_w
			and	ie_horario_especial <> 'S';

			if (ie_verifica_w > 0) then
				select	min(nr_sequencia)
				into STRICT	nr_seq_horario_w
				from 	prescr_gasoterapia_hor
				where	nr_seq_gasoterapia = nr_seq_gasoterapia_w
				and 	nr_prescricao	= nr_prescricao
				and 	ie_horario_especial <> 'S';

				update	prescr_gasoterapia_hor
				set	dt_suspensao = clock_timestamp(),
					nm_usuario_susp = nm_usuario_p
				where	nr_seq_gasoterapia	= nr_seq_gasoterapia_w
				and 	nr_sequencia		= nr_seq_horario_w
				and 	nr_prescricao		= nr_prescricao_w
				and		coalesce(dt_fim_horario::text, '') = '';
				ie_evento_ww  := 'SH';
			else
				update	prescr_gasoterapia_hor
				set		dt_suspensao = clock_timestamp(),
						nm_usuario_susp = nm_usuario_p
				where	coalesce(dt_fim_horario::text, '') = ''
				and		nr_seq_gasoterapia	= nr_seq_gasoterapia_w
				and 	nr_prescricao		= nr_prescricao_w;
				ie_evento_ww := 'S';
			end if;
		end if;
	end if;
	select	nextval('prescr_gasoterapia_evento_seq')
	into STRICT	nr_seq_evento_w
	;

	insert into prescr_gasoterapia_evento(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_gasoterapia,
		ie_evento,
		dt_evento,
		ie_evento_valido,
		nr_seq_assinatura,
		nr_seq_horario,
		ds_justificativa,
		nr_etapa_evento,
		nr_seq_gas_cpoe,
		cd_evolucao,
    nr_seq_equipamento)
	values (nr_seq_evento_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_gasoterapia_w,
		ie_evento_ww,
		coalesce(dt_alteracao_p, clock_timestamp()),
		'S',
		nr_seq_assinatura_p,
		nr_seq_horario_w,
		ds_justificativa_p,
		nr_etapa_evento_w,
		nr_seq_gas_cpoe_p,
		cd_evolucao_w,
    nr_seq_equipamento_p);
	
	select	max(dt_horario)
	into STRICT	dt_horario_w				
	from	prescr_gasoterapia_hor		
	where	nr_sequencia = nr_seq_horario_w;
	
	CALL gerar_alter_horario_item_assoc(nr_atendimento_w, 'IAO', nr_prescricao_w, nr_seq_gasoterapia_w, nr_seq_gasoterapia_w, dt_horario_w, coalesce(dt_alteracao_p, clock_timestamp()), 5, nm_usuario_p);
-- alterar velocidade
elsif (ie_alteracao_p	= 'V') then

	if (coalesce(nr_seq_horario_p::text, '') = '') or (nr_seq_horario_p = 0) or (nr_seq_horario_p <> '') then		
		select	min(nr_sequencia)
		into STRICT	nr_seq_horario_w
		from	prescr_gasoterapia_hor
		where	nr_seq_gasoterapia	= nr_seq_gasoterapia_w
		and 	nr_prescricao		= nr_prescricao_w
		and		coalesce(dt_fim_horario::text, '') = ''
		and 	coalesce(dt_suspensao::text, '') = '';		
	else
		nr_seq_horario_w := nr_seq_horario_p;
	end if;	

	select	nextval('prescr_gasoterapia_evento_seq')
	into STRICT	nr_seq_evento_w
	;

	insert into prescr_gasoterapia_evento(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_gasoterapia,
		ie_evento,
		qt_gasoterapia,
		ie_unidade_medida,
		dt_evento,
		ie_evento_valido,
		ie_disp_resp_esp,
		ds_justificativa,
		nr_seq_horario,
		nr_seq_assinatura,
		nr_seq_gas_cpoe,
    nr_seq_equipamento)
	values (nr_seq_evento_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_gasoterapia_w,
		'V',
		qt_gasoterapia_p,
		ie_unidade_medida_p,
		coalesce(dt_alteracao_p, clock_timestamp()),
		'S',
		ie_dispositivo_p,
		ds_justificativa_p,
		nr_seq_horario_w,
		nr_seq_assinatura_p,
		nr_seq_gas_cpoe_p,
    nr_seq_equipamento_p);

-- Reversao
elsif (ie_alteracao_p = 'RV') then
--- Guilherme Pereira 07/11/2011


	--- Busca o ultimo evento realizado
	ie_status_ant_w	:= Obter_Status_Gas_anterior(nr_seq_gasoterapia_w, 'CC');
	
	--- Verifica se e considerado algum tempo antes de reverter
	if (coalesce(qt_min_rev_w,0) > 0) then
		Select	max(dt_evento)
		into STRICT	dt_status_ant_w
		from	prescr_gasoterapia_evento a
		where	a.nr_sequencia		= (SELECT	max(b.nr_sequencia)
							   from		prescr_gasoterapia_evento b
							   where	b.nr_seq_gasoterapia	= nr_seq_gasoterapia_w
							   and 		b.ie_evento <> 'RV'
							   and		coalesce(b.ie_evento_valido,'S') = 'S')
		and		a.nr_seq_gasoterapia	= nr_seq_gasoterapia_w
		and		coalesce(a.ie_evento_valido,'S') = 'S';

		--- Se a data do status nao estiver no periodo mostra a mensagem
		if	(dt_status_ant_w < clock_timestamp() - (qt_min_rev_w/1440)) then
			-- O ultimo evento foi registrado fora da margem de #@QT_MINUTOS#@ minuto(s). Nao e possivel reverter! Parametro[447]
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(210911, 'QT_MINUTOS=' || qt_min_rev_w);
		end if;
	end if;

	--- Seleciona a etapa do evento
	select	max(nr_etapa_evento),
			max(nm_usuario)
	into STRICT	nr_etapa_evento_w,
			nm_usuario_adm_w
	from	prescr_gasoterapia_evento
	where	nr_sequencia = (SELECT 	max(nr_sequencia)
							from	prescr_gasoterapia_evento
							where	nr_seq_gasoterapia = nr_seq_gasoterapia_w
							and		ie_evento = ie_status_ant_w
							and 	coalesce(ie_evento_valido, 'S') 	= 'S'
							and 	ie_evento  <> 'RV')
	and		nr_seq_gasoterapia = nr_seq_gasoterapia_w;
	
	if	((ie_status_ant_w = 'I') or (ie_status_ant_w = 'R')) and (ie_param682_w = 'N') and (nm_usuario_adm_w <> nm_usuario_p) then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(452717);
	end if;
		
	--- Quando feito  a reversao limpa a etapa
	if (ie_status_ant_w <> 'A') then
		update	prescr_gasoterapia_evento
		set		nr_etapa_evento		 = NULL
		where	nr_etapa_evento		= nr_etapa_evento_w
		and		nr_seq_gasoterapia	= nr_seq_gasoterapia_w
		and 	ie_evento 			= ie_status_ant_w
		and		nr_sequencia	    = (	SELECT 	max(nr_sequencia)
										from	prescr_gasoterapia_evento
										where	nr_seq_gasoterapia = nr_seq_gasoterapia_w
										and		ie_evento = ie_status_ant_w
										and 	coalesce(ie_evento_valido, 'S') 	= 'S'
										and 	ie_evento  <> 'RV');
	end if;
		
	--- Se o ultimo evento era um aprazamento apaga os horarios gerados
	if (ie_status_ant_w = 'A') then
		 select	max(dt_atualizacao),
				max(nr_seq_horario)
		into STRICT	dt_atualizacao_w,
				nr_seq_horario_w
		from	prescr_gasoterapia_evento
		where	ie_evento		<> 'RV'
		and 	ie_evento		= ie_status_ant_w
		and		nr_seq_gasoterapia 	= nr_seq_gasoterapia_w;

		delete	from prescr_gasoterapia_hor
		where	nr_seq_gasoterapia	= nr_seq_gasoterapia_w
		and 	nr_sequencia		= nr_seq_horario_w;
	--- Se o ultimo evento for de suspender um horario, desfaz a suspensao do mesmo
	elsif (ie_status_ant_w = 'SH' ) then
		select	max(dt_atualizacao),
				max(nr_seq_horario)
		into STRICT 	dt_atualizacao_w,
				nr_seq_horario_w
		from	prescr_gasoterapia_evento
		where	ie_evento		= ie_status_ant_w
		and 	coalesce(ie_evento_valido, 'S') = 'S'
		and		nr_seq_gasoterapia	= nr_seq_gasoterapia_w
		and 	nr_sequencia 	= (SELECT 	max(nr_sequencia)
								   from 	prescr_gasoterapia_evento 
								   where 	nr_seq_gasoterapia 	= nr_seq_gasoterapia_w
								   and 	ie_evento 	= ie_status_ant_w
								   and 	coalesce(ie_evento_valido, 'S') = 'S'
								   and 	ie_evento 	<> 'RV');

		update	prescr_gasoterapia_hor
		set		dt_suspensao 		 = NULL,
				nm_usuario_susp 	 = NULL
		where	nr_seq_gasoterapia 	= nr_seq_gasoterapia_w
		and 	nr_sequencia 		= nr_seq_horario_w
		and 	nr_prescricao		= nr_prescricao_w;
	---  Se o ultimo evento era de Terminado ele retira as datas de administracao e o usuario que as fez
	elsif ((ie_status_ant_w = 'T') or (ie_status_ant_w = 'TE')) then
		update	prescr_gasoterapia_hor
		set		dt_fim_horario		 = NULL,
				nm_usuario_adm		 = NULL
		where	nr_etapa			= nr_etapa_evento_w
		and		nr_seq_gasoterapia 	= nr_seq_gasoterapia_w
		and 	nr_prescricao		= nr_prescricao_w;
		
	elsif (ie_status_ant_w = 'IN')then

			update	prescr_gasoterapia_hor
			set		dt_interrupcao		 = NULL,
					dt_fim_horario		 = NULL,
					nm_usuario_adm		 = NULL
			where	nr_etapa			= nr_etapa_evento_w
			and		nr_seq_gasoterapia 	= nr_seq_gasoterapia_w
			and 	nr_prescricao		= nr_prescricao_w;	
	
	elsif (ie_status_ant_w = 'R')then

			update	prescr_gasoterapia_hor
			set		dt_fim_horario		 = NULL,
					nm_usuario_adm		 = NULL
			where	nr_etapa			= (nr_etapa_evento_w - 1)
			and		nr_seq_gasoterapia 	= nr_seq_gasoterapia_w
			and 	nr_prescricao		= nr_prescricao_w;					
			
	end if;

	--- Altera o indicador de validade do evento da gasoterapia para N
	update	prescr_gasoterapia_evento
	set		ie_evento_valido = 'N'
	where	nr_sequencia = (SELECT 	max(nr_sequencia)
							from	prescr_gasoterapia_evento
							where	nr_seq_gasoterapia = nr_seq_gasoterapia_w
							and (coalesce(ie_evento_valido,'S') = 'S')
							and		ie_evento = ie_status_ant_w
							and 	ie_evento <> 'RV')
	and		nr_seq_gasoterapia = nr_seq_gasoterapia_w;

	if (coalesce(nr_seq_horario_w::text, '') = '') or (nr_seq_horario_w = 0) or (nr_seq_horario_w <> '') then
		
		if (coalesce(nr_seq_horario_p::text, '') = '') or (nr_seq_horario_p = 0) or (nr_seq_horario_p <> '')  then		
			select	min(nr_sequencia)
			into STRICT	nr_seq_horario_w
			from	prescr_gasoterapia_hor
			where	nr_seq_gasoterapia	= nr_seq_gasoterapia_w
			and 	nr_prescricao		= nr_prescricao_w
			and		coalesce(dt_fim_horario::text, '') = ''
			and 	coalesce(dt_suspensao::text, '') = '';		
		else
			nr_seq_horario_w := nr_seq_horario_p;
		end if;				
	end if;		
	
	--- Busca a proxima sequencia para gerar o evento
	select	nextval('prescr_gasoterapia_evento_seq')
	into STRICT	nr_seq_evento_w
	;

	--- Insere o evento de Reversao
	insert into prescr_gasoterapia_evento(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_gasoterapia,
		ie_evento,
		dt_evento,
		ie_evento_valido,
		nr_seq_motivo,
		nr_seq_assinatura,
		nr_seq_horario,
		ds_justificativa,
		nr_seq_gas_cpoe,
    nr_seq_equipamento)
	values (nr_seq_evento_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_gasoterapia_w,
		'RV',
		clock_timestamp(),
		'N',
		nr_seq_motivo_p,
		nr_seq_assinatura_p,
		nr_seq_horario_w,
		ds_justificativa_p,
		nr_seq_gas_cpoe_p,
    nr_seq_equipamento_p);


------------------------TriggerPoint for ReverseGas TreatmentInterfaceStart---------------------------
    select  ie_evento
    into STRICT    ie_evento_rv_w
    from    prescr_gasoterapia_evento 
    where   nr_sequencia = nr_seq_evento_w;

    select  count(nr_sequencia) 
    into STRICT    rv_count_w 
    from    prescr_gasoterapia_evento 
    where   ie_evento = 'RV' 
    and     nr_seq_gasoterapia = nr_seq_gasoterapia_p;

    select  max(nr_sequencia) 
    into STRICT    rv_second_w 
    from    prescr_gasoterapia_evento                                                                         
    where   ie_evento = 'RV' 
    and     nr_seq_gasoterapia = nr_seq_gasoterapia_p 
    and     nr_sequencia < (SELECT  max(nr_sequencia) 
                            from    prescr_gasoterapia_evento 
                            where   ie_evento = 'RV'    
                            and     nr_seq_gasoterapia = nr_seq_gasoterapia_p);

    select  max(nr_sequencia) 
    into STRICT    i_first_w 
    from    prescr_gasoterapia_evento 
    where   ie_evento = 'I' 
    and     nr_seq_gasoterapia = nr_seq_gasoterapia_p;

    select  max(nr_sequencia) 
    into STRICT    t_first_w 
    from    prescr_gasoterapia_evento 
    where   ie_evento = 'T' 
    and     nr_seq_gasoterapia = nr_seq_gasoterapia_p;
    
    select  count(ie_evento) 
    into STRICT    t_count_w 
    from    prescr_gasoterapia_evento 
    where   ie_evento = 'T' 
    and     nr_seq_gasoterapia = nr_seq_gasoterapia_p;

    if((rv_count_w <=1 and T_count_w <> 0) or (ie_evento_rv_w = 'RV' and rv_second_w < t_first_w))then
        ds_param_integration_w := '{"recordId" : "' ||nr_seq_gasoterapia_p|| '"' || '}';
        json_data_w := bifrost.send_integration_content('nais.mla.treatmentgas.reverse', ds_param_integration_w, wheb_usuario_pck.get_nm_usuario);
    end if;

------------------------TriggerPoint for ReverseGas TreatmentInterfaceEnd---------------------------    



	--- Se o evento for Terminar ele estorna a gasoterapia
	if (ie_status_ant_w in ('I','T')) then
		CALL Estornar_ProPaci_Prescr_gas(nr_prescricao_w, nr_seq_gas_w, nm_usuario_p);
	end if;
	
	-- Check if there is CPOE record to suspend
	if (ie_status_ant_w = 'S') then
		select	max(nr_seq_gas_cpoe)
		into STRICT	nr_seq_item_cpoe_w
		from	prescr_gasoterapia
		where	nr_sequencia	= nr_seq_gasoterapia_w;
		
		if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
			update	cpoe_gasoterapia
			set		dt_suspensao  = NULL,
					dt_lib_suspensao  = NULL,
					nm_usuario_susp  = NULL
			where	nr_sequencia = nr_seq_item_cpoe_w;
			if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
		end if;
	end if;
	
	select	max(dt_horario)
	into STRICT	dt_horario_w				
	from	prescr_gasoterapia_hor		
	where	nr_sequencia = nr_seq_horario_w;
		
	CALL gerar_alter_horario_item_assoc(nr_atendimento_w, 'IAO', nr_prescricao_w, nr_seq_gasoterapia_w, nr_seq_gasoterapia_w, dt_horario_w, coalesce(dt_alteracao_p, clock_timestamp()), 4, nm_usuario_p);
    CALL gerar_alter_horario_item_assoc(nr_atendimento_w, 'IAO', nr_prescricao_w, nr_seq_gasoterapia_w, nr_seq_gasoterapia_w, dt_horario_w, coalesce(dt_alteracao_p, clock_timestamp()), 6, nm_usuario_p);
	
	if (ie_status_ant_w in ('I','R')) then
		CALL reverter_lote_fornec_adm(nr_seq_horario_p, nr_prescricao_w, nr_seq_gasoterapia_w, dt_horario_w, nm_usuario_p, 'GAS');
	end if;
end if;

ie_gera_sem_certificado_w	:= 'N';

if (wheb_assist_pck.get_gerar_sem_certificado = 'S') then
	ie_gera_sem_certificado_w := adep_obter_se_assin_perfil(50573, obter_perfil_ativo); --ADEP - Alteracao do item (suspensao/reversao/aprazamento)
end if;
	
if (coalesce(obter_data_assinatura_digital(nr_seq_assinatura_p)::text, '') = '') and
	((wheb_assist_pck.get_cd_certificado IS NOT NULL AND wheb_assist_pck.get_cd_certificado::text <> '') or (ie_gera_sem_certificado_w = 'S')) then

	CALL Gerar_registro_pendente_PEP('ADEP',nr_prescricao_w,cd_pessoa_fisica_w,nr_atendimento_w,nm_usuario_p,'A',nr_seq_horario_p,'O',null,null,null,null,null,null,null,nr_seq_gasoterapia_w,null,null,null,null,null,null,nr_seq_evento_w);
end if;
ie_gerar_evolucao_emar_w := obter_param_usuario(1113, 727, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_gerar_evolucao_emar_w);
if (ie_gerar_evolucao_emar_w = 'S' and ie_alteracao_p in ('I', 'IN', 'R', 'T')) then
	cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_w, nr_seq_evento_w, 'CPOE_ITEMS', 3, 'P', 2, cd_evolucao_w);
	if (cd_evolucao_w IS NOT NULL AND cd_evolucao_w::text <> '') then
		update prescr_gasoterapia_hor
		set cd_evolucao = cd_evolucao_w
		where nr_sequencia	= nr_seq_evento_w;
	end if;
end if;

CALL gqa_atualiza_etapas_mentor(nr_atendimento_w);

ie_param716_w := obter_param_usuario(1113, 716, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo(), ie_param716_w);

if (ie_param716_w <> 'N') then
    ie_susp_nurse_w := 'N';
    if (ie_alteracao_p = 'S') then
        ie_susp_nurse_w := 'S';
    end if;
	CALL generate_nurse_ack(ie_susp_nurse_w, 'O', nr_atendimento_w, nr_seq_gas_cpoe_p, nr_seq_gasoterapia_w);
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_alteracao_gasoterapia ( nr_seq_gasoterapia_p bigint, ie_alteracao_p text, qt_gasoterapia_p bigint, ie_unidade_medida_p text, dt_alteracao_p timestamp, nr_prescricao_p bigint, ie_dispositivo_p text, nr_seq_motivo_p bigint, nm_usuario_p text, ds_justificativa_p text, nr_seq_horario_p bigint, nr_seq_assinatura_p bigint default null, ie_java_p text default null, ds_mensagem_p INOUT text DEFAULT NULL, nr_seq_gas_cpoe_p cpoe_gasoterapia.nr_sequencia%type default null, nr_seq_equipamento_p equipamento_resp.nr_sequencia%type default null) FROM PUBLIC;

