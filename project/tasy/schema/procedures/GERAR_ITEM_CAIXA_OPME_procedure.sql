-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_item_caixa_opme ( nr_sequencia_nf_p bigint, nr_seq_caixa_p bigint, cd_local_estoque_p bigint, ie_vl_ultima_compra_p text, nm_usuario_p text) AS $body$
DECLARE


cd_material_w				integer;
cd_material_estoque_w			integer;
cd_conta_contabil_w			varchar(20);
cd_centro_custo_w				integer;
nr_seq_conta_financ_w			bigint;
ds_observacao_w				varchar(255);
cd_estabelecimento_w			smallint;
cd_cgc_emitente_w			varchar(14);
cd_serie_nf_w				nota_fiscal.cd_serie_nf%type;
nr_nota_fiscal_w				varchar(255);
nr_sequencia_nf_w				bigint;
cd_natureza_operacao_w			smallint;
nr_item_nf_w				integer;
cd_unid_med_estoque_w			varchar(30);
cd_unid_med_compra_w			varchar(30);
ds_erro_w				varchar(2000);
cd_operacao_nf_w				bigint;
ie_tipo_conta_w				smallint;
cd_condicao_pagamento_w			bigint;
qt_item_estoque_w				double precision;
qt_conv_compra_estoque_w			double precision;
qt_saldo_w				bigint;
vl_item_w					double precision;
vl_total_item_nf_w				double precision := 0;
vl_liquido_w				double precision := 0;
ds_caixa_opme_w				varchar(255);

dt_validade_anvisa_w			timestamp;
nr_registro_anvisa_w			varchar(60);
nr_seq_marca_w				bigint;
ie_origem_titulo_w			varchar(10);
nr_seq_classe_tit_rec_w			bigint;
ie_tipo_titulo_rec_w			titulo_receber.ie_tipo_titulo%type;

c01 CURSOR FOR
SELECT	cd_material,
	qt_saldo
from	opme_caixa_item
where	nr_seq_caixa = nr_seq_caixa_p;


BEGIN
select	cd_estabelecimento,
	cd_cgc_emitente,
	cd_serie_nf,
	nr_nota_fiscal,
	nr_sequencia_nf,
	cd_natureza_operacao,
	cd_operacao_nf_w,
	cd_condicao_pagamento
into STRICT	cd_estabelecimento_w,
	cd_cgc_emitente_w,
	cd_serie_nf_w,
	nr_nota_fiscal_w,
	nr_sequencia_nf_w,
	cd_natureza_operacao_w,
	cd_operacao_nf_w,
	cd_condicao_pagamento_w
from	nota_fiscal
where	nr_sequencia = nr_sequencia_nf_p;

select	max(a.ie_origem_titulo),
	max(a.nr_seq_classe),
	max(a.ie_tipo_titulo)
into STRICT	ie_origem_titulo_w,
	nr_seq_classe_tit_rec_w,
	ie_tipo_titulo_rec_w
from	titulo_receber a
where	a.nr_seq_nf_saida	= nr_sequencia_nf_p;

open C01;
loop
fetch C01 into	
	cd_material_w,
	qt_saldo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque,
		substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UMC'),1,30) cd_unidade_medida_compra,
		cd_material_estoque,
		qt_conv_compra_estoque,
		coalesce(obter_reg_anvisa_mat(cd_estabelecimento_w, cd_material, obter_marca_material(cd_material,'C'),'DV'),obter_dados_material_estab(cd_material, cd_estabelecimento_w, 'VA')) dt_validade_anvisa,
		coalesce(obter_reg_anvisa_mat(cd_estabelecimento_w, cd_material, obter_marca_material(cd_material,'C'),'RA'),obter_dados_material_estab(cd_material, cd_estabelecimento_w, 'RA')) nr_registro_anvisa,
		obter_marca_material(cd_material, 'C') nr_seq_marca
	into STRICT  	cd_unid_med_estoque_w,
		cd_unid_med_compra_w,
		cd_material_estoque_w,
		qt_conv_compra_estoque_w,
		dt_validade_anvisa_w,
		nr_registro_anvisa_w,
		nr_seq_marca_w
	from	material
	where	cd_material = cd_material_w;	
	
	qt_item_estoque_w := qt_saldo_w;
	
	if (cd_unid_med_estoque_w <> cd_unid_med_compra_w) then
		qt_item_estoque_w := qt_saldo_w * qt_conv_compra_estoque_w;
	end if;
	
	if (coalesce(cd_conta_contabil_w, 'X') = 'X') then
		begin
		ie_tipo_conta_w	:= 3;
		if (coalesce(cd_centro_custo_w::text, '') = '') then
			ie_tipo_conta_w	:= 2;
		end if;

		SELECT * FROM define_conta_material(
			cd_estabelecimento_w, cd_material_w, ie_tipo_conta_w, 0, 0, 0, 0, 0, 0, 0, cd_local_estoque_p, cd_operacao_nf_w, trunc(clock_timestamp()), cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
		end;
	end if;
	
	nr_seq_conta_financ_w := obter_conta_financeira(
			'S', cd_estabelecimento_w, cd_material_w, null, null, null, null, cd_cgc_emitente_w, cd_centro_custo_w, nr_seq_conta_financ_w, null, cd_operacao_nf_w, null, null, null, null, null, null, ie_origem_titulo_w, null, nr_seq_classe_tit_rec_w, null, null, null, null, null, null, ie_tipo_titulo_rec_w, null);
	
	select (coalesce(max(nr_item_nf),0)+1)
	into STRICT	nr_item_nf_w
	from	nota_fiscal_item
	where	nr_sequencia	 = nr_sequencia_nf_p;
	
	vl_item_w		:= 0;

	if (ie_vl_ultima_compra_p = 'S') then
		begin
		vl_item_w := obter_vl_ultima_compra_forn(
						cd_estabelecimento_w,
						90,
						cd_material_w,
						cd_local_estoque_p,
						cd_cgc_emitente_w,
						'N');
		VL_LIQUIDO_w := coalesce(vl_item_w,0) * coalesce(qt_saldo_w,0);
		VL_TOTAL_ITEM_NF_w := VL_LIQUIDO_w;
		vl_item_w := dividir(VL_LIQUIDO_w,qt_saldo_w);
		end;
	end if;

	begin

	select	substr(obter_descricao_caixa_opme(nr_seq_caixa_p,'D'),1,255) ds_tipo_caixa
	into STRICT	ds_caixa_opme_w
	;

	insert into nota_fiscal_item(
		nr_sequencia,
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_nota_fiscal,
		nr_sequencia_nf,
		nr_item_nf,
		cd_natureza_operacao,
		qt_item_nf,
		qt_item_estoque,
		vl_unitario_item_nf,
		vl_total_item_nf,
		dt_atualizacao,
		nm_usuario,
		vl_frete,
		vl_desconto,
		vl_despesa_acessoria,
		cd_material,
		cd_material_estoque,
		cd_conta_contabil,
		vl_desconto_rateio,
		vl_seguro,
		cd_centro_custo,
		vl_liquido,
		ds_observacao,
		pr_desconto,
		cd_unidade_medida_compra,
		cd_unidade_medida_estoque,
		nr_seq_conta_financ,
		cd_local_estoque,
		nr_seq_marca,
		cd_sequencia_parametro)
	values (	nr_sequencia_nf_p,
		cd_estabelecimento_w,
		cd_cgc_emitente_w,
		cd_serie_nf_w,
		nr_nota_fiscal_w,
		nr_sequencia_nf_w,
		nr_item_nf_w,
		cd_natureza_operacao_w,
		qt_saldo_w,
		qt_item_estoque_w,
		vl_item_w,
		VL_TOTAL_ITEM_NF_w,
		clock_timestamp(),
		nm_usuario_p,
		0,
		0,
		0,
		cd_material_w,
		cd_material_estoque_w,
		cd_conta_contabil_w,
		0,
		0,
		cd_centro_custo_w,
		VL_LIQUIDO_w,
		substr(WHEB_MENSAGEM_PCK.get_texto(818056, 'NR_SEQ_CAIXA_P=' || nr_seq_caixa_p || ';DS_CAIXA_OPME_W=' || ds_caixa_opme_w) || chr(13) || chr(10) ||
							WHEB_MENSAGEM_PCK.get_texto(818060) || ': '|| coalesce(nr_registro_anvisa_w,  WHEB_MENSAGEM_PCK.get_texto(818063) /*'Sem registro'*/) || '  ' || 
							WHEB_MENSAGEM_PCK.get_texto(818061) || ': ' || dt_validade_anvisa_w,1,255),
		0,
		cd_unid_med_compra_w,
		cd_unid_med_estoque_w,
		CASE WHEN nr_seq_conta_financ_w=0 THEN null  ELSE nr_seq_conta_financ_w END ,
		cd_local_estoque_p,
		nr_seq_marca_w,
		philips_contabil_pck.get_parametro_conta_contabil);
	exception
	when others then
		ds_erro_w	:= sqlerrm(SQLSTATE);
		CALL wheb_mensagem_pck.exibir_mensagem_abort(265997,'DS_ERRO=' || ds_erro_w);
		--'Erro Inclus√£o ' || chr(10) || ds_erro_w);
	end;	
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_item_caixa_opme ( nr_sequencia_nf_p bigint, nr_seq_caixa_p bigint, cd_local_estoque_p bigint, ie_vl_ultima_compra_p text, nm_usuario_p text) FROM PUBLIC;

