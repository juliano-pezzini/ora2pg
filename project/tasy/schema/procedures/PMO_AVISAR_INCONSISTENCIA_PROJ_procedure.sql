-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pmo_avisar_inconsistencia_proj (nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_projeto_w		bigint;
nr_seq_gerencia_w		bigint;
ds_gerencia_w		varchar(255);
ds_email_w		varchar(200);
ds_inconsistencia_w	varchar(255);
ds_dados_w		varchar(32000);
ds_enter_w       	varchar(10) := chr(13) || chr(10);
qt_inconsistencias_w	double precision;
QT_PROJETOS_W		double precision;
nr_seq_analise_w	bigint;

C01 CURSOR FOR 
	SELECT	a.nr_sequencia 
	from	proj_projeto a 
	where	a.ie_origem = 'D'	 
	and	a.nr_seq_classif NOT IN (14, 22) -- Migração, Controle Gerêncial 
	and	coalesce(a.dt_cancelamento::text, '') = '' 
	and 	coalesce(a.ie_nivel_projeto,0) <> '3'; -- Controle interno 
C02 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.ds_gerencia, 
		substr(obter_compl_pf(a.cd_responsavel,1,'M'),1,200)||',' ds_email 
	from	gerencia_wheb a 
	where	a.ie_situacao = 'A' 
	and 	ie_area_gerencia in ('DES', 'TEC');

C03 CURSOR FOR 
	SELECT	a.nr_sequencia 
	from 	proj_projeto a 
	where	a.nr_seq_gerencia = nr_seq_gerencia_w 
	and	a.ie_origem = 'D' 
	--and	a.ie_status <> 'F' 
	and	a.nr_seq_classif NOT IN (14, 22) -- Migração, Controle Gerêncial 
	and	coalesce(a.dt_cancelamento::text, '') = '' 
	and 	coalesce(a.ie_nivel_projeto,0) <> '3' -- Controle interno 
	and	exists (SELECT	1 
			from 	w_inconsistencia_proj x 
			where	x.nr_seq_projeto = a.nr_sequencia) 
	order 	by a.nr_sequencia;

C04 CURSOR FOR 
	SELECT	a.ds_inconsistencia 
	from 	w_inconsistencia_proj a 
	where	a.nr_seq_projeto = nr_seq_projeto_w;


BEGIN 
 
open C01;
loop 
fetch C01 into 
	nr_seq_projeto_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	-- Gera as inconsistências dos projetos 
	CALL consiste_projeto_desenv_tec(nr_seq_projeto_w);
	end;
end loop;
close C01;
 
open C02;
loop 
fetch C02 into 
	nr_seq_gerencia_w, 
	ds_gerencia_w, 
	ds_email_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
	ds_dados_w := '';
	qt_projetos_w		:= 0;
	qt_inconsistencias_w	:= 0;
 
 
	delete	from w_inconsistencia_proj_dia 
	where 	dt_analise	= trunc(clock_timestamp(), 'dd') 
	and	nr_seq_gerencia	= nr_seq_gerencia_w;
 
	open C03;
	loop 
	fetch C03 into 
		nr_seq_projeto_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		ds_dados_w := substr(ds_dados_w || 'Projeto: ' || nr_seq_projeto_w || ds_enter_w,1,32000);
		ds_dados_w := substr(ds_dados_w || 'Inconsistências: ' || ds_enter_w,1,32000);
		qt_projetos_w		:= qt_projetos_w + 1;
 
		open C04;
		loop 
		fetch C04 into 
			ds_inconsistencia_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin 
			qt_inconsistencias_w	:= qt_inconsistencias_w + 1;
			-- Captura as inconsistências do projeto informado 
			ds_dados_w := substr(ds_dados_w || '	- ' || ds_inconsistencia_w,1,32000);
			ds_dados_w := substr(ds_dados_w || ds_enter_w,1,32000);
			end;
		end loop;
		close C04;
 
		ds_dados_w := substr(ds_dados_w ||'--------------------------------------------------------------------------'||ds_enter_w,1,32000);
		end;
	end loop;
	close C03;
 
	select	nextval('w_inconsistencia_proj_dia_seq') 
	into STRICT	nr_seq_analise_w 
	;
 
	insert 	into w_inconsistencia_proj_dia(NR_SEQUENCIA, 
			NR_SEQ_GERENCIA, 
			dt_analise,    
			QT_PROJETOS,       
			QT_INCONSISTENCIAS) 
	values (nr_seq_analise_w, 
			nr_seq_gerencia_w, 
			trunc(clock_timestamp(), 'dd'), 
			qt_projetos_w, 
			qt_inconsistencias_w);
			 
	if (coalesce(ds_dados_w, 'X') <> 'X') then 
		CALL enviar_email(  'Inconsistências projetos - '|| ds_gerencia_w, 
				ds_dados_w, 
				'pmo_desenvolvimento@wheb.com.br',				 
				ds_email_w || 'pmo_desenvolvimento@wheb.com.br',				 
				nm_usuario_p, 
				'A');
	end if;
 
	end;
end loop;
close C02;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pmo_avisar_inconsistencia_proj (nm_usuario_p text) FROM PUBLIC;

