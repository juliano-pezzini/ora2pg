-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE com_enviar_comunicado_dest ( nr_seq_comunicado_p bigint, ds_lista_anexos_p INOUT text, ds_lista_destinos_p INOUT text, nm_usuario_p text) AS $body$
DECLARE


ds_lista_anexos_w	varchar(4000);
ds_lista_destinos_w	varchar(4000);
nr_seq_comunic_dest_w	bigint;
ds_arquivo_w		varchar(255);
ds_destinatario_w	varchar(2000);
ie_todos_enviados_w	varchar(1) := 'N';
c01 CURSOR FOR
	SELECT	ds_arquivo
	from	comercial_comunicado_anexo
	where	nr_seq_comunicado = nr_seq_comunicado_p;
c02 CURSOR FOR
	SELECT	distinct nr_sequencia
	from	comercial_comunicado_dest
	where   nr_seq_comunicado = nr_seq_comunicado_p
	order by 1;


BEGIN
if (nr_seq_comunicado_p IS NOT NULL AND nr_seq_comunicado_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	begin
	open c01;
	loop
		fetch C01 into
			ds_arquivo_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		ds_lista_anexos_w := ds_lista_anexos_w || ',' || ds_arquivo_w;
		end;
	end loop;
	close c01;

	open c02;
	loop
		fetch c02 into
			nr_seq_comunic_dest_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		ds_destinatario_w := com_obter_destinatario_email(nr_seq_comunicado_p, nr_seq_comunic_dest_w);

		ds_lista_destinos_w := ds_lista_destinos_w || ',' || ds_destinatario_w;

		update	comercial_comunicado_dest
		set	ie_enviar_email 	= 'N',
			nm_usuario		= nm_usuario_p
		where	nr_seq_comunicado	= nr_seq_comunicado_p
		and	nr_sequencia 		= nr_seq_comunic_dest_w;
		end;
	end loop;
	close c02;

	select 	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
	into STRICT	ie_todos_enviados_w
	from 	comercial_comunicado_dest
	where 	ie_enviar_email = 'S'
	and  	nr_seq_comunicado = nr_seq_comunicado_p;

	if (ie_todos_enviados_w = 'S') then
		begin
		update	comercial_comunicado
		set	dt_envio 		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_sequencia 		= nr_seq_comunicado_p;
		end;
	end if;
	end;
end if;
ds_lista_anexos_p 	:= ds_lista_anexos_w;
ds_lista_destinos_p 	:= ds_lista_destinos_w;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE com_enviar_comunicado_dest ( nr_seq_comunicado_p bigint, ds_lista_anexos_p INOUT text, ds_lista_destinos_p INOUT text, nm_usuario_p text) FROM PUBLIC;

