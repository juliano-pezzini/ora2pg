-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_calcular_custo_os ( nr_seq_ordem_serv_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_requisicao_w			bigint;
cd_estabelecimento_w		smallint;
cd_material_w			integer;
qt_material_w			double precision;
vl_custo_mat_w			double precision;
vl_material_w			double precision;
nr_sequencia_w			bigint;
vl_total_item_nf_w			double precision;
nr_seq_funcao_w			bigint;
vl_cobranca_w			double precision;
vl_previsto_ativ_w			double precision;
vl_previsto_orc_w			double precision;
vl_total_previsto_w			double precision;
qt_custo_div_w			bigint;

C01 CURSOR FOR
	SELECT	a.nr_requisicao,
		a.cd_estabelecimento,
		b.cd_material,
		coalesce(b.qt_material_atendida,0)
	from	item_requisicao_material b,
		requisicao_material a
	where	a.nr_requisicao	= b.nr_requisicao
	and	a.nr_seq_ordem_serv	= nr_seq_ordem_serv_p
	and	(b.dt_atendimento IS NOT NULL AND b.dt_atendimento::text <> '')
	and	b.cd_motivo_baixa	= 1;

C02 CURSOR FOR
	SELECT	nr_seq_funcao,
		sum(vl_cobranca)
	from	man_ordem_serv_ativ
	where	nr_seq_ordem_serv	= nr_seq_ordem_serv_p
	and	(vl_cobranca IS NOT NULL AND vl_cobranca::text <> '')
	group 	by nr_seq_funcao;

C03 CURSOR FOR
	SELECT	nr_seq_funcao,
		sum(vl_cobranca)
	from	man_ordem_serv_ativ_pj
	where	nr_seq_ordem_servico	= nr_seq_ordem_serv_p
	and	(vl_cobranca IS NOT NULL AND vl_cobranca::text <> '')
	group 	by nr_seq_funcao;


BEGIN

/* Limpar custo atual da ordem de serviço */

delete	from man_ordem_serv_custo
where	nr_seq_ordem_serv	= nr_seq_ordem_serv_p;

/* Calcular custo dos materiais requisitados */

vl_material_w	:= 0;
OPEN C01;
LOOP
FETCH C01 into
		nr_requisicao_w,
		cd_estabelecimento_w,
		cd_material_w,
		qt_material_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		select	coalesce(obter_custo_reposicao_material(cd_material_w,clock_timestamp() - interval '180 days',clock_timestamp()),0)
		into STRICT	vl_custo_mat_w
		;

		if (vl_custo_mat_w = 0) then
			begin
			select	coalesce(obter_custo_medio_material(cd_estabelecimento_w, clock_timestamp(), cd_material_w),0)
			into STRICT	vl_custo_mat_w
			;
			end;
		end if;
		vl_material_w	:= vl_material_w + (vl_custo_mat_w * qt_material_w);
		end;
END LOOP;
CLOSE C01;

If (vl_material_w > 0) then
	begin
	select	nextval('man_ordem_serv_custo_seq')
	into STRICT	nr_sequencia_w
	;

	insert into man_ordem_serv_custo(
		NR_SEQUENCIA,
		NR_SEQ_ORDEM_SERV,
		DT_ATUALIZACAO,
		NM_USUARIO,
		DT_ATUALIZACAO_NREC,
		NM_USUARIO_NREC,
		IE_TIPO,
		NR_SEQ_FUNCAO,
		VL_CUSTO)
	values (nr_sequencia_w,
		nr_seq_ordem_serv_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		'Req',
		null,
		vl_material_w);
	end;
end if;

/* Calcular custo das notas fiscais */

select	sum(b.vl_total_item_nf)
into STRICT	vl_total_item_nf_w
from	nota_fiscal a,
	nota_fiscal_item b
where	a.nr_sequencia		= b.nr_sequencia
and	b.nr_seq_ordem_serv	= nr_seq_ordem_serv_p
and	a.ie_situacao		= '1';

If (vl_total_item_nf_w > 0) then
	begin
	select	nextval('man_ordem_serv_custo_seq')
	into STRICT	nr_sequencia_w
	;

	insert	into man_ordem_serv_custo(
		NR_SEQUENCIA,
		NR_SEQ_ORDEM_SERV,
		DT_ATUALIZACAO,
		NM_USUARIO,
		DT_ATUALIZACAO_NREC,
		NM_USUARIO_NREC,
		IE_TIPO,
		NR_SEQ_FUNCAO,
		VL_CUSTO)
	values (nr_sequencia_w,
		nr_seq_ordem_serv_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		'NF',
		null,
		vl_total_item_nf_w);
	end;
end if;

/* Calcular custo das atividades */

OPEN C02;
LOOP
FETCH C02 into
		nr_seq_funcao_w,
		vl_cobranca_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		if (vl_cobranca_w > 0) then
			begin
			select	nextval('man_ordem_serv_custo_seq')
			into STRICT	nr_sequencia_w
			;

			insert into man_ordem_serv_custo(
				NR_SEQUENCIA,
				NR_SEQ_ORDEM_SERV,
				DT_ATUALIZACAO,
				NM_USUARIO,
				DT_ATUALIZACAO_NREC,
				NM_USUARIO_NREC,
				IE_TIPO,
				NR_SEQ_FUNCAO,
				VL_CUSTO)
			values (nr_sequencia_w,
				nr_seq_ordem_serv_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				'A',
				nr_seq_funcao_w,
				vl_cobranca_w);
			end;
		end if;
		end;
END LOOP;
CLOSE C02;

OPEN C03;
LOOP
FETCH C03 into
		nr_seq_funcao_w,
		vl_cobranca_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		if (vl_cobranca_w > 0) then
			begin
			select	nextval('man_ordem_serv_custo_seq')
			into STRICT	nr_sequencia_w
			;

			insert into man_ordem_serv_custo(
				NR_SEQUENCIA,
				NR_SEQ_ORDEM_SERV,
				DT_ATUALIZACAO,
				NM_USUARIO,
				DT_ATUALIZACAO_NREC,
				NM_USUARIO_NREC,
				IE_TIPO,
				--NR_SEQ_FUNCAO,
				VL_CUSTO)
			values (nr_sequencia_w,
				nr_seq_ordem_serv_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				'A',
				--nr_seq_funcao_w,
				vl_cobranca_w);
			end;
		end if;
		end;
END LOOP;
CLOSE C03;

/* Lançar custo diverso*/

select	count(*),
	coalesce(sum(vl_item),0)
into STRICT	qt_custo_div_w,
	vl_cobranca_w
from	man_custo_diverso
where	nr_seq_ordem_serv	= nr_seq_ordem_serv_p;

if (qt_custo_div_w > 0) and (vl_cobranca_w <> 0) then

	select	nextval('man_ordem_serv_custo_seq')
	into STRICT	nr_sequencia_w
	;

	insert into man_ordem_serv_custo(
		NR_SEQUENCIA,
		NR_SEQ_ORDEM_SERV,
		DT_ATUALIZACAO,
		NM_USUARIO,
		DT_ATUALIZACAO_NREC,
		NM_USUARIO_NREC,
		IE_TIPO,
		NR_SEQ_FUNCAO,
		VL_CUSTO)
	values (	nr_sequencia_w,
		nr_seq_ordem_serv_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		'D',
		null,
		vl_cobranca_w);
end if;

/* Lançar total previsto */

vl_total_previsto_w := 0;

select	coalesce(sum(coalesce(b.vl_item,0)),0)
into STRICT	vl_previsto_orc_w
from	man_ordem_servico_orc a,
	man_ord_serv_orc_item b
where	a.nr_sequencia = b.nr_seq_orc_ordem
and	(b.cd_material IS NOT NULL AND b.cd_material::text <> '')
and	(a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '')
and	a.nr_seq_ordem = nr_seq_ordem_serv_p;

select	coalesce(sum(coalesce(vl_cobranca,0)),0)
into STRICT	vl_previsto_ativ_w
from	man_ordem_ativ_prev
where	nr_seq_ordem_serv = nr_seq_ordem_serv_p
and	(vl_cobranca IS NOT NULL AND vl_cobranca::text <> '');

vl_total_previsto_w := vl_previsto_orc_w + vl_previsto_ativ_w;

	if (coalesce(vl_total_previsto_w,0) > 0) then
		begin
		select	nextval('man_ordem_serv_custo_seq')
		into STRICT	nr_sequencia_w
		;

		insert into man_ordem_serv_custo(
			NR_SEQUENCIA,
			NR_SEQ_ORDEM_SERV,
			DT_ATUALIZACAO,
			NM_USUARIO,
			DT_ATUALIZACAO_NREC,
			NM_USUARIO_NREC,
			IE_TIPO,
			NR_SEQ_FUNCAO,
			VL_CUSTO)
		values (nr_sequencia_w,
			nr_seq_ordem_serv_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			'TP',
			null,
			vl_total_previsto_w);
		end;
	end if;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_calcular_custo_os ( nr_seq_ordem_serv_p bigint, nm_usuario_p text) FROM PUBLIC;

