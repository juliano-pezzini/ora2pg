-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consiste_faixa_etaria ( nr_seq_tabela_p bigint, nr_seq_preco_p bigint, qt_idade_inicial_p bigint, qt_idade_final_p bigint, ie_grau_titularidade_p text, qt_vidas_inicial_p bigint, qt_vidas_final_p bigint, vl_preco_inicial_p bigint, vl_preco_nao_subsidiado_p bigint ) AS $body$
DECLARE


qt_idade_inicial_w		integer;
qt_idade_final_w		integer;
nr_sequencia_w			bigint;
ie_grau_titularidade_w		varchar(2);
ie_grau_titularidade_atual_w	varchar(2);
qt_vidas_inicial_w		bigint;
qt_vidas_final_w		bigint;
ie_preco_vidas_contrato_w	varchar(1);

c01 CURSOR FOR
	SELECT	nr_sequencia,
		qt_idade_inicial,
		qt_idade_final,
		ie_grau_titularidade,
		qt_vidas_inicial,
		qt_vidas_final
	from	pls_plano_preco
	where	nr_seq_tabela	= nr_seq_tabela_p
	and	nr_sequencia	<> nr_seq_preco_p;


BEGIN

if (vl_preco_nao_subsidiado_p > vl_preco_inicial_p) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(288695);/*O Preço não subsidiado não pode ser maior que o Preço atual*/
end if;

select	max(ie_preco_vidas_contrato)
into STRICT	ie_preco_vidas_contrato_w
from	pls_tabela_preco
where	nr_sequencia	= nr_seq_tabela_p;

open c01;
loop
fetch c01 into
	nr_sequencia_w,
	qt_idade_inicial_w,
	qt_idade_final_w,
	ie_grau_titularidade_w,
	qt_vidas_inicial_w,
	qt_vidas_final_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	if (qt_idade_inicial_p >= qt_idade_inicial_w) and (qt_idade_inicial_p <= qt_idade_final_w) and (coalesce(ie_grau_titularidade_w,'X') = coalesce(ie_grau_titularidade_p,'X')) and (coalesce(qt_vidas_inicial_p,0)	= coalesce(qt_vidas_inicial_w,0)) and (coalesce(qt_vidas_final_p,0)	= coalesce(qt_vidas_final_w,0)) then

		CALL wheb_mensagem_pck.exibir_mensagem_abort(243440); /* Faixa etária em conflito com outra já cadastrada. Verifique! */
	end if;

	if (qt_idade_final_p >= qt_idade_inicial_w) and (qt_idade_final_p <= qt_idade_final_w) and (coalesce(ie_grau_titularidade_w,'X') = coalesce(ie_grau_titularidade_p,'X')) and (coalesce(qt_vidas_inicial_p,0)	= coalesce(qt_vidas_inicial_w,0)) and (coalesce(qt_vidas_final_p,0)	= coalesce(qt_vidas_final_w,0)) then

		CALL wheb_mensagem_pck.exibir_mensagem_abort(243440); /* Faixa etária em conflito com outra já cadastrada. Verifique! */
	end if;

	if (qt_idade_inicial_p > qt_idade_final_p) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(243441); /* Idade final não pode ser menor que a idade inicial. Verifique! */
	end if;

	if (qt_idade_inicial_p <= qt_idade_inicial_w) and (qt_idade_final_p   >= qt_idade_final_w) and (coalesce(ie_grau_titularidade_w,'X') = coalesce(ie_grau_titularidade_p,'X')) and (coalesce(qt_vidas_inicial_p,0)	= coalesce(qt_vidas_inicial_w,0)) and (coalesce(qt_vidas_final_p,0)	= coalesce(qt_vidas_final_w,0)) then

		CALL wheb_mensagem_pck.exibir_mensagem_abort(243440); /* Faixa etária em conflito com outra já cadastrada. Verifique! */
	end if;

	if (ie_preco_vidas_contrato_w = 'S') then
		/* Quantidade de vidas */

		if (coalesce(qt_vidas_inicial_p,0) >= coalesce(qt_vidas_inicial_w,0)) and (coalesce(qt_vidas_inicial_p,0) <= coalesce(qt_vidas_final_w,0)) and (coalesce(ie_grau_titularidade_w,'X') = coalesce(ie_grau_titularidade_p,'X')) and (qt_idade_inicial_p	= qt_idade_inicial_w) and (qt_idade_final_p	= qt_idade_final_w) then

			CALL wheb_mensagem_pck.exibir_mensagem_abort(243442); /* Quantidade de vidas em conflito com outra já cadastrada. Verifique! */
		end if;

		if (coalesce(qt_vidas_final_p,0) >= coalesce(qt_vidas_inicial_w,0)) and (coalesce(qt_vidas_final_p,0) <= coalesce(qt_vidas_final_w,0)) and (coalesce(ie_grau_titularidade_w,'X') = coalesce(ie_grau_titularidade_p,'X')) and (qt_idade_inicial_p	= qt_idade_inicial_w) and (qt_idade_final_p	= qt_idade_final_w) then

			CALL wheb_mensagem_pck.exibir_mensagem_abort(243442); /* Quantidade de vidas em conflito com outra já cadastrada. Verifique! */
		end if;

		if (coalesce(qt_vidas_inicial_p,0) <= coalesce(qt_vidas_inicial_w,0)) and (coalesce(qt_vidas_final_p,0)   >= coalesce(qt_vidas_final_w,0)) and (coalesce(ie_grau_titularidade_w,'X') = coalesce(ie_grau_titularidade_p,'X')) and (qt_idade_inicial_p	= qt_idade_inicial_w) and (qt_idade_final_p	= qt_idade_final_w) then

			CALL wheb_mensagem_pck.exibir_mensagem_abort(243442); /* Quantidade de vidas em conflito com outra já cadastrada. Verifique! */
		end if;

		if (coalesce(qt_vidas_inicial_p,0) > coalesce(qt_vidas_final_p,0)) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(243443); /* Quantidade de vidas final não pode ser menor que a quantidade inicial. Verifique! */
		end if;
	end if;
end loop;
close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consiste_faixa_etaria ( nr_seq_tabela_p bigint, nr_seq_preco_p bigint, qt_idade_inicial_p bigint, qt_idade_final_p bigint, ie_grau_titularidade_p text, qt_vidas_inicial_p bigint, qt_vidas_final_p bigint, vl_preco_inicial_p bigint, vl_preco_nao_subsidiado_p bigint ) FROM PUBLIC;

