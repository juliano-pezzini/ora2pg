-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_copiar_preco_procbpa ( dt_competencia_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_versao_dest_p text, nm_usuario_p text, ie_opcao_p text) AS $body$
DECLARE


dt_competencia_w	timestamp;

VL_TPH_W			double precision;
VL_TAXA_SALA_W		double precision;
VL_HONORARIO_MEDICO_W	double precision;
VL_ANESTESIA_W		double precision;
VL_MATMED_W			double precision;
VL_CONTRASTE_W		double precision;
VL_FILME_RX_W			double precision;
VL_GESSO_W			double precision;
VL_QUIMIOTERAPIA_W		double precision;
VL_DIALISE_W			double precision;
VL_SADT_RX_W			double precision;
VL_SADT_PC_W			double precision;
VL_SADT_OUTROS_W		double precision;
VL_FILME_RESSONANCIA_W	double precision;
VL_OUTROS_W			double precision;
VL_PROCEDIMENTO_W		double precision;
VL_PLANTONISTA_W		double precision;
IE_CESSAO_CREDITO_W		varchar(1);
IE_PAB_W			varchar(1);
IE_FAEC_W			varchar(1);
CD_RUB_W 			varchar(4);
DS_AUX_W			varchar(20);
except_w				varchar(1);
vl_procedimento_ww		double precision;



BEGIN

select	max(dt_competencia)
into STRICT	dt_competencia_w
from	sus_preco_procbpa
where	ie_versao = ie_versao_dest_p;

if (coalesce(dt_competencia_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(281242);
end if;

if (ie_opcao_p = 'N') then
	begin
	insert into sus_preco_procbpa(	DT_COMPETENCIA, CD_PROCEDIMENTO, IE_ORIGEM_PROCED,
					VL_TPH, VL_TAXA_SALA, VL_HONORARIO_MEDICO,
					VL_ANESTESIA, VL_MATMED, VL_CONTRASTE,
					VL_FILME_RX, VL_GESSO, VL_QUIMIOTERAPIA,
					VL_DIALISE, VL_SADT_RX, VL_SADT_PC,
					VL_SADT_OUTROS, VL_FILME_RESSONANCIA, VL_OUTROS,
					VL_PROCEDIMENTO, DT_ATUALIZACAO, NM_USUARIO,
					VL_PLANTONISTA, IE_VERSAO, IE_CESSAO_CREDITO,
					IE_PAB, IE_FAEC, CD_RUB, DS_AUX)
	SELECT	dt_competencia_w, CD_PROCEDIMENTO, IE_ORIGEM_PROCED,
		VL_TPH, VL_TAXA_SALA, VL_HONORARIO_MEDICO,
		VL_ANESTESIA, VL_MATMED, VL_CONTRASTE,
		VL_FILME_RX, VL_GESSO, VL_QUIMIOTERAPIA,
		VL_DIALISE, VL_SADT_RX, VL_SADT_PC,
		VL_SADT_OUTROS, VL_FILME_RESSONANCIA, VL_OUTROS,
		VL_PROCEDIMENTO, clock_timestamp(), nm_usuario_p,
		VL_PLANTONISTA, ie_versao_dest_p, IE_CESSAO_CREDITO,
		IE_PAB, IE_FAEC, CD_RUB, DS_AUX
	from	sus_preco_procbpa
	where	dt_competencia	 = dt_competencia_p
	  and	cd_procedimento	 = cd_procedimento_p
	  and	ie_origem_proced = ie_origem_proced_p;
	exception
	when others then
		except_w := '';
	end;
else
	select	VL_TPH,
		VL_TAXA_SALA,
		VL_HONORARIO_MEDICO,
		VL_ANESTESIA,
		VL_MATMED,
		VL_CONTRASTE,
		VL_FILME_RX,
		VL_GESSO,
		VL_QUIMIOTERAPIA,
		VL_DIALISE,
		VL_SADT_RX,
		VL_SADT_PC,
		VL_SADT_OUTROS,
		VL_FILME_RESSONANCIA,
		VL_OUTROS,
		VL_PROCEDIMENTO,
		VL_PLANTONISTA,
		IE_CESSAO_CREDITO,
		IE_PAB,
		IE_FAEC,
		CD_RUB,
		DS_AUX
	into STRICT	VL_TPH_W,
		VL_TAXA_SALA_W,
		VL_HONORARIO_MEDICO_W,
		VL_ANESTESIA_W,
		VL_MATMED_W,
		VL_CONTRASTE_W,
		VL_FILME_RX_W,
		VL_GESSO_W,
		VL_QUIMIOTERAPIA_W,
		VL_DIALISE_W,
		VL_SADT_RX_W,
		VL_SADT_PC_W,
		VL_SADT_OUTROS_W,
		VL_FILME_RESSONANCIA_W,
		VL_OUTROS_W,
		VL_PROCEDIMENTO_W,
		VL_PLANTONISTA_W,
		IE_CESSAO_CREDITO_W,
		IE_PAB_W,
		IE_FAEC_W,
		CD_RUB_W,
		DS_AUX_W
	from	sus_preco_procbpa
	where	dt_competencia		= dt_competencia_p
	and	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p;

	select	vl_procedimento
	into STRICT	vl_procedimento_ww
	from	sus_preco_procbpa
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p
	and	ie_versao		= ie_Versao_Dest_p;

	if (vl_procedimento_ww = 0) then
	update sus_preco_procbpa set
		VL_TPH			= VL_TPH_W,
		VL_TAXA_SALA		= VL_TAXA_SALA_W,
		VL_HONORARIO_MEDICO	= VL_HONORARIO_MEDICO_W,
		VL_ANESTESIA		= VL_ANESTESIA_W,
		VL_MATMED		= VL_MATMED_W,
		VL_CONTRASTE		= VL_CONTRASTE_W,
		VL_FILME_RX		= VL_FILME_RX_W,
		VL_GESSO		= VL_GESSO_W,
		VL_QUIMIOTERAPIA	= VL_QUIMIOTERAPIA_W,
		VL_DIALISE		= VL_DIALISE_W,
		VL_SADT_RX		= VL_SADT_RX_W,
		VL_SADT_PC		= VL_SADT_PC_w,
		VL_SADT_OUTROS		= VL_SADT_OUTROS_w,
		VL_FILME_RESSONANCIA	= VL_FILME_RESSONANCIA_W,
		VL_OUTROS		= VL_OUTROS_W,
		VL_PROCEDIMENTO		= VL_PROCEDIMENTO_W,
		DT_ATUALIZACAO		= clock_timestamp(),
		NM_USUARIO		= NM_USUARIO_P,
		VL_PLANTONISTA		= VL_PLANTONISTA_W,
		IE_CESSAO_CREDITO	= IE_CESSAO_CREDITO_W,
		IE_PAB			= IE_PAB_W,
		IE_FAEC			= IE_FAEC_W,
		CD_RUB			= CD_RUB_W,
		DS_AUX			= DS_AUX_W
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p
	and	ie_versao		= ie_versao_dest_p;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_copiar_preco_procbpa ( dt_competencia_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_versao_dest_p text, nm_usuario_p text, ie_opcao_p text) FROM PUBLIC;

