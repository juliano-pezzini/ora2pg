-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE release_note_sp_html5 (cd_version_p text, cd_service_pack_p bigint, ds_hotfix_p text, addressee_p text) AS $body$
DECLARE

  
  message_w varchar(32767);
  new_line_w varchar(2) := chr(13) || chr(10);
  cd_negative_build_w bigint := null;
  cd_prior_negative_build_w bigint := null;
  ds_subject_w varchar(4000);
  ds_localizacao_w man_localizacao.ds_localizacao%TYPE;
  ds_classificacao_w varchar(1);
  cd_nr_seq_regra varchar(10);
  nr_pacote_w varchar(10);

  
  c_cursor REFCURSOR;
  empRecReleaseNote varchar(1000);
  empRecReleaseOS varchar(25);
  empRecReleaseCustomer varchar(25);
  empRecReleaseCNPJ varchar(30);

  sql_string varchar(32767);
  sql_where_build_string varchar(32767);

BEGIN
  begin
    if (cd_service_pack_p - 1 < 0) then
        select nr_old_build
          into STRICT cd_negative_build_w 
          from man_service_pack_versao
         where cd_versao = cd_version_p 
           and nr_service_pack = cd_service_pack_p 
           and ie_status_build = 'L'
           and coalesce(ds_hotfix,'0') = coalesce(ds_hotfix_p,'0');
        cd_prior_negative_build_w := -1;
    else
        select coalesce(min(nr_old_build),0), coalesce(max(nr_old_build-1),0)
          into STRICT cd_prior_negative_build_w, cd_negative_build_w
          from man_service_pack_versao
         where cd_versao = cd_version_p 
           and nr_service_pack between cd_service_pack_p-1 and cd_service_pack_p
           and ie_status_build = 'L'
           and coalesce(ds_hotfix,'0') = coalesce(ds_hotfix_p,'0');
    end if;
  EXCEPTION
    when no_data_found then
    begin
        cd_negative_build_w := null;
        cd_prior_negative_build_w := null;
    end;
  end;

  if (cd_negative_build_w IS NOT NULL AND cd_negative_build_w::text <> '') and (cd_prior_negative_build_w IS NOT NULL AND cd_prior_negative_build_w::text <> '') then
    sql_where_build_string := 'and b.cd_build between :cd_prior_negative_build_w and :cd_negative_build_w ';
  else
    sql_where_build_string := 'and b.cd_build = :cd_negative_build_w ';
  end if;

  sql_string := 'select	DISTINCT ''SO: '' || c.nr_seq_ordem_serv || chr(13) || chr(10) ||
          ''Function: '' || obter_nome_funcao(x.cd_funcao) || chr(13) || chr(10) ||
          ''Description: '' ||  c.ds_alteracao || chr(13) || chr(10) ||
          ''Customer: '' || substr( obter_nome_pj(cli.cd_cnpj),1,120) - cli.cd_cnpj || chr(13) || chr(10) || chr(13) || chr(10) note_txt,
          c.nr_seq_ordem_serv os,
          x.nr_seq_cliente customer,
          cli.cd_cnpj cd_cnpj
      from 	man_os_ctrl_desc c,
          man_ordem_servico x,
          man_os_ctrl_build b,
          com_cliente cli
      where 	c.nr_seq_ordem_serv = x.nr_sequencia
      and 	b.nr_seq_man_os_ctrl_desc = c.nr_sequencia
      and 	c.dt_inativacao is null
      and 	c.dt_liberacao is not null
      and 	c.ie_aplicacao = ''H''
      and 	b.cd_versao = :cd_version_p
      and   x.nr_seq_cliente = cli.nr_sequencia
      '|| sql_where_build_string ||'
      and     nvl(b.ds_hotfix,''0'') = nvl(:ds_hotfix_p,''0'')
    UNION
      SELECT DISTINCT ''SO: ''|| C.nr_seq_ordem_serv || chr(13) || chr(10) ||
                  ''Function: ''|| Obter_Desc_Funcao(x.cd_funcao) || chr(13) || chr(10) ||
               ''Description: ''|| C.ds_alteracao || chr(13) || chr(10) ||
               ''Customer: '' || cli.cd_cnpj || chr(13) || chr(10) || chr(13) || chr(10) note_txt,
          c.nr_seq_ordem_serv os,
          x.nr_seq_cliente customer,
          cli.cd_cnpj cd_cnpj
      FROM MAN_OS_CTRL_BUILD b,
          MAN_OS_CTRL_DESC C,
          MAN_ORDEM_SERVICO x,
          tasy.ajuste_versao@whebl02_orcl w,
          com_cliente cli
      WHERE b.nr_seq_man_os_ctrl_desc = C.nr_sequencia
      AND x.nr_sequencia = C.nr_seq_ordem_serv
      AND C.ie_aplicacao in (''H'',''S'')
      AND b.cd_versao = :cd_version_p
      and   x.nr_seq_cliente = cli.nr_sequencia
      '|| sql_where_build_string ||'
      AND b.cd_versao = w.cd_versao
      and W.NR_RELEASE is not null
      AND C.nr_seq_ordem_serv = w.NR_SEQ_ORDEM_SERV
      and nvl(b.ds_hotfix,''0'') = nvl(:ds_hotfix_p,''0'')';

  $if dbms_db_version.version > 10 $then
    if (cd_negative_build_w IS NOT NULL AND cd_negative_build_w::text <> '') and (cd_prior_negative_build_w IS NOT NULL AND cd_prior_negative_build_w::text <> '') then
        open c_cursor for EXECUTE sql_string
        using cd_version_p, cd_prior_negative_build_w, cd_negative_build_w, ds_hotfix_p
            , cd_version_p, cd_prior_negative_build_w, cd_negative_build_w, ds_hotfix_p;
    else
        open c_cursor for EXECUTE sql_string
        using cd_version_p, cd_negative_build_w, ds_hotfix_p
            , cd_version_p, cd_negative_build_w, ds_hotfix_p;
    end if;

    begin
      select ie_classificacao, nr_pacote
        into STRICT ds_classificacao_w, nr_pacote_w
      from man_service_pack_versao
      where cd_versao = cd_version_p and
        nr_service_pack = cd_service_pack_p;
    exception
      when no_data_found then
        ds_classificacao_w := null;
    end;

    if (ds_classificacao_w != 'S' and  (ds_classificacao_w IS NOT NULL AND ds_classificacao_w::text <> '')) then
      cd_nr_seq_regra := nextval('regra_versao_pacote_sp_seq');
      insert into regra_versao_pacote_sp(
        nr_sequencia,
        nr_pacote,
        nr_service_pack,
        cd_versao,
        ds_hotfix,
        nr_build,
        dt_atualizacao,
        nm_usuario
      ) values (
        cd_nr_seq_regra,
        nr_pacote_w,
        cd_service_pack_p,
        cd_version_p,
        ds_hotfix_p,
        cd_negative_build_w,
        clock_timestamp(),
        'Tasy'
      );
    end if;

    loop
        fetch c_cursor into empRecReleaseNote, empRecReleaseOS, empRecReleaseCustomer, empRecReleaseCNPJ;
        EXIT WHEN NOT FOUND; /* apply on c_cursor */
        message_w := message_w||empRecReleaseNote;
        if (ds_classificacao_w != 'S' and  (ds_classificacao_w IS NOT NULL AND ds_classificacao_w::text <> '')) then
          insert into regra_cliente_os_sp(
            nr_sequencia,
            nr_seq_rgr_ver_pac,
            nr_seq_os,
            cd_cnpj,
            dt_liberacao,
            nr_seq_cliente,
            dt_atualizacao,
            nm_usuario
          ) values (
            nextval('regra_cliente_os_sp_seq'),
            cd_nr_seq_regra,
            empRecReleaseOS,
            empRecReleaseCNPJ,
            clock_timestamp(),
            empRecReleaseCustomer,
            clock_timestamp(),
            'Tasy'
          );
        end if;
    end loop;
    close c_cursor;

    if (ds_hotfix_p IS NOT NULL AND ds_hotfix_p::text <> '') then
    begin
      select ml.ds_localizacao 
        into STRICT ds_localizacao_w
        from service_pack_hotfix sph 
       inner join man_ordem_servico mos on (mos.nr_sequencia = sph.nr_service_order) 
       inner join man_localizacao ml ON (ml.nr_sequencia = mos.nr_seq_localizacao)
       where sph.ds_hotfix = ds_hotfix_p;
    exception
      when no_data_found then ds_localizacao_w := null;
    end;
    end if;

    ds_subject_w := 'Release notes - SP#@#SPNUMBER@# Version: @#VERSION@#';
    ds_subject_w := replace(ds_subject_w,'@#SPNUMBER@#',cd_service_pack_p);
    ds_subject_w := replace(ds_subject_w,'@#VERSION@#',cd_version_p);

    if (ds_classificacao_w IS NOT NULL AND ds_classificacao_w::text <> '') then
        ds_subject_w := ds_subject_w || ' - ' || Obter_valor_dominio(9905, ds_classificacao_w);
    end if;

    if (ds_localizacao_w IS NOT NULL AND ds_localizacao_w::text <> '') then
      message_w := ds_subject_w || new_line_w ||new_line_w ||
                   'Customer: '|| ds_localizacao_w || new_line_w || new_line_w ||
                   message_w;
      ds_subject_w := ds_subject_w||' - '||ds_localizacao_w;
    end if;
    if (ds_subject_w IS NOT NULL AND ds_subject_w::text <> '' AND message_w IS NOT NULL AND message_w::text <> '') then
      CALL enviar_email(ds_subject_w, message_w, 'support.informatics@philips.com', addressee_p,'Tasy',null);
    end if;

    commit;
  $end
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE release_note_sp_html5 (cd_version_p text, cd_service_pack_p bigint, ds_hotfix_p text, addressee_p text) FROM PUBLIC;

