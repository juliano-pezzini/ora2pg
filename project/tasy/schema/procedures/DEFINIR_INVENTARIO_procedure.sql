-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE definir_inventario ( nr_sequencia_p bigint, nr_seq_item_invent_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w			bigint;
qt_contagem_w			double precision;
qt_recontagem_w			double precision;
qt_seg_recontagem_w		double precision;
qt_terc_recontagem_w		double precision;
qt_definido_w			double precision;
qt_saldo_w			double precision;

nr_sequencia_ww			bigint;
cd_material_w			integer;
qt_contagem_ww			double precision;
qt_recontagem_ww			double precision;
qt_seg_recontagem_ww		double precision;
qt_terc_recontagem_ww		double precision;
qt_definido_ww			double precision;
qt_saldo_ww			double precision;
qt_lotes_w			bigint;

qt_max_contagem_w		bigint;
qt_max_definir_w			bigint;
cd_estabelecimento_w		integer;
ie_considera_saldo_igual_w		varchar(1);
ie_diferenca_lote_w			varchar(1);

ie_estoque_lote_w			varchar(1);
ie_permite_definir_dif_lote_w		varchar(1);

c01 CURSOR FOR
	SELECT	nr_sequencia,
		qt_contagem,
		qt_recontagem,
		qt_seg_recontagem,
		qt_terc_recontagem,
		qt_saldo,
		cd_material
	from	inventario_material a
	where	nr_seq_inventario = nr_sequencia_p
	and	nr_sequencia = coalesce(nr_seq_item_invent_p,nr_sequencia)
	and	((qt_contagem IS NOT NULL AND qt_contagem::text <> '') or (substr(coalesce(obter_se_material_estoque_lote(cd_estabelecimento_w,cd_material),'N'),1,1) = 'S' and not exists (
		SELECT	1
		from 	inventario_material_lote 
		where 	nr_seq_inventario = a.nr_seq_inventario
		and	nr_seq_item = a.nr_sequencia)))
	and	coalesce(qt_inventario::text, '') = '';
	
C02 CURSOR FOR
	SELECT	nr_sequencia,
		qt_contagem,
		qt_recontagem,
		qt_seg_recontagem,
		qt_terc_recontagem,
		qt_saldo
	from	inventario_material_lote
	where	nr_seq_item = nr_sequencia_w
	and	coalesce(qt_inventario::text, '') = '';

BEGIN

select	coalesce(max(qt_max_contagem),4),
	coalesce(max(qt_max_definir),0),
	max(cd_estabelecimento)
into STRICT	qt_max_contagem_w,
	qt_max_definir_w,
	cd_estabelecimento_w
from	inventario
where	nr_sequencia		= nr_sequencia_p;

ie_considera_saldo_igual_w 	:= coalesce(obter_valor_param_usuario(143, 118, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'S');
ie_permite_definir_dif_lote_w	:= coalesce(obter_valor_param_usuario(143, 318, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'S');

open c01;
loop
fetch c01 into	
	nr_sequencia_w,
	qt_contagem_w,
	qt_recontagem_w,
	qt_seg_recontagem_w,
	qt_terc_recontagem_w,
	qt_saldo_w,
	cd_material_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	qt_definido_w		:= null;
	ie_diferenca_lote_w	:= null;
	qt_lotes_w		:= 0;
	ie_estoque_lote_w := substr(coalesce(obter_se_material_estoque_lote(cd_estabelecimento_w,cd_material_w),'N'),1,1);
	
	if (ie_estoque_lote_w = 'S') then
		begin
		open C02;
		loop
		fetch C02 into	
			nr_sequencia_ww,
			qt_contagem_ww,
			qt_recontagem_ww,
			qt_seg_recontagem_ww,
			qt_terc_recontagem_ww,
			qt_saldo_ww;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			qt_definido_ww	:= null;
			
			if (qt_max_contagem_w = 1) and (qt_contagem_ww IS NOT NULL AND qt_contagem_ww::text <> '') then
				qt_definido_ww		:= qt_contagem_ww;
			elsif (qt_contagem_ww = qt_recontagem_ww)  then
				qt_definido_ww		:= qt_recontagem_ww;
			elsif (qt_contagem_ww = qt_seg_recontagem_ww) or (qt_recontagem_ww = qt_seg_recontagem_ww) then
				 qt_definido_ww		:= qt_seg_recontagem_ww;
			elsif (qt_contagem_ww = qt_terc_recontagem_ww) or (qt_recontagem_ww = qt_terc_recontagem_ww) or (qt_seg_recontagem_ww = qt_terc_recontagem_ww) then
				 qt_definido_ww		:= qt_terc_recontagem_ww;
			elsif (qt_contagem_ww = qt_saldo_ww) and (ie_considera_saldo_igual_w = 'S') then
				qt_definido_ww		:= qt_saldo_ww;
			elsif (qt_recontagem_ww = qt_saldo_ww) and (ie_considera_saldo_igual_w = 'S') then
				qt_definido_ww		:= qt_saldo_ww;
			elsif (qt_seg_recontagem_ww = qt_saldo_ww) and (ie_considera_saldo_igual_w = 'S') then
				qt_definido_ww		:= qt_saldo_ww;
			elsif (qt_terc_recontagem_ww = qt_saldo_ww) and (ie_considera_saldo_igual_w = 'S') then
				qt_definido_ww		:= qt_saldo_ww;
			elsif (qt_max_definir_w = 2) and (qt_recontagem_ww IS NOT NULL AND qt_recontagem_ww::text <> '') then
				qt_definido_ww		:= qt_recontagem_ww;
			elsif (qt_max_definir_w = 3) and (qt_seg_recontagem_ww IS NOT NULL AND qt_seg_recontagem_ww::text <> '') then
				qt_definido_ww		:= qt_seg_recontagem_ww;
			elsif (qt_max_definir_w = 4)  and (qt_terc_recontagem_ww IS NOT NULL AND qt_terc_recontagem_ww::text <> '') then
				qt_definido_ww		:= qt_terc_recontagem_ww;
			end if;

			if (qt_definido_ww IS NOT NULL AND qt_definido_ww::text <> '') then
				update	inventario_material_lote
				set	qt_inventario		= coalesce(qt_definido_ww,0),
					qt_diferenca		= (coalesce(qt_definido_ww,0) - qt_saldo),
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_sequencia		= nr_sequencia_ww;
			elsif (ie_permite_definir_dif_lote_w = 'N') or (coalesce(qt_contagem_ww::text, '') = '' and
					coalesce(qt_recontagem_ww::text, '') = '' and
					coalesce(qt_seg_recontagem_ww::text, '') = '' and
					coalesce(qt_terc_recontagem_ww::text, '') = '') then
				ie_diferenca_lote_w := 'S';
			end if;
			
			qt_lotes_w := qt_lotes_w + 1;
			end;
		end loop;
		close C02;
		
		
			select 	sum(qt_contagem),
				sum(qt_recontagem),
				sum(qt_seg_recontagem),
				sum(qt_terc_recontagem)
			into STRICT	qt_contagem_w,
				qt_recontagem_w,
				qt_seg_recontagem_w,
				qt_terc_recontagem_w
			from 	inventario_material_lote
			where	nr_seq_item = nr_sequencia_w;
			
			update	inventario_material
			set	qt_contagem		= qt_contagem_w,
				qt_recontagem		= qt_recontagem_w,
				qt_seg_recontagem	= qt_seg_recontagem_w,
				qt_terc_recontagem	= qt_terc_recontagem_w,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where	nr_sequencia		= nr_sequencia_w;
			
			if (ie_diferenca_lote_w = 'S') then
				qt_definido_w := null;
			else
				select	sum(qt_inventario)
				into STRICT	qt_definido_w
				from	inventario_material_lote
				where	nr_seq_item = nr_sequencia_w;
				
				if (qt_lotes_w = 0) and (coalesce(qt_definido_w::text, '') = '') then
					qt_definido_w := 0;
				end if;
			end if;

		end;
	else
		begin
		
		if (qt_max_contagem_w = 1) and (qt_contagem_w IS NOT NULL AND qt_contagem_w::text <> '') then
			qt_definido_w		:= qt_contagem_w;
		elsif (qt_contagem_w = qt_recontagem_w)  then
			qt_definido_w		:= qt_recontagem_w;
		elsif (qt_contagem_w = qt_seg_recontagem_w) or (qt_recontagem_w = qt_seg_recontagem_w) then
			 qt_definido_w	:= qt_seg_recontagem_w;
		elsif (qt_contagem_w = qt_terc_recontagem_w) or (qt_recontagem_w = qt_terc_recontagem_w) or (qt_seg_recontagem_w = qt_terc_recontagem_w) then
			 qt_definido_w	:= qt_terc_recontagem_w;
		elsif (qt_contagem_w = qt_saldo_w) and (ie_considera_saldo_igual_w = 'S') then
			qt_definido_w		:= qt_saldo_w;
		elsif (qt_recontagem_w = qt_saldo_w) and (ie_considera_saldo_igual_w = 'S') then
			qt_definido_w		:= qt_saldo_w;
		elsif (qt_seg_recontagem_w = qt_saldo_w) and (ie_considera_saldo_igual_w = 'S') then
			qt_definido_w		:= qt_saldo_w;
		elsif (qt_terc_recontagem_w = qt_saldo_w) and (ie_considera_saldo_igual_w = 'S') then
			qt_definido_w		:= qt_saldo_w;
		elsif (qt_max_definir_w = 2) and (qt_recontagem_w IS NOT NULL AND qt_recontagem_w::text <> '') then
			qt_definido_w		:= qt_recontagem_w;
		elsif (qt_max_definir_w = 3) and (qt_seg_recontagem_w IS NOT NULL AND qt_seg_recontagem_w::text <> '') then
			qt_definido_w		:= qt_seg_recontagem_w;
		elsif (qt_max_definir_w = 4)  and (qt_terc_recontagem_w IS NOT NULL AND qt_terc_recontagem_w::text <> '') then
			qt_definido_w		:= qt_terc_recontagem_w;
		end if;
		end;	
	end if;
	
	if (qt_definido_w IS NOT NULL AND qt_definido_w::text <> '') then
		update	inventario_material
		set	qt_inventario		= coalesce(qt_definido_w,0),
			qt_diferenca		= (coalesce(qt_definido_w,0) - qt_saldo),
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_sequencia_w;		
	end if;	
	commit;
	end;
end loop;
close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE definir_inventario ( nr_sequencia_p bigint, nr_seq_item_invent_p bigint, nm_usuario_p text) FROM PUBLIC;

