-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importa_nota_fiscal ( ie_tipo_registro_p text, nr_ordem_compra_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_operacao_nf_p bigint, cd_local_estoque_p bigint, cd_conta_contabil_p text, cd_centro_custo_p bigint, cd_serie_nf_p text, nr_nota_fiscal_p bigint, qt_mercadoria_p bigint, vl_preco_unitario_liquido_p bigint, vl_preco_total_item_p bigint, cd_mercadoria_p bigint, dt_emissao_p timestamp, vl_descontos_p bigint, pr_desconto_p bigint, vl_total_nota_p bigint, tx_tributo_p bigint, vl_tributo_p bigint, cd_cfop_p bigint, nr_seq_item_p bigint, cd_cliente_p text) AS $body$
DECLARE

 
nr_seq_nota_w				bigint;
nr_item_nf_w				bigint;
dt_atualizacao_estoque_w			timestamp;
nr_seq_item_trib_w				bigint;
cd_cgc_w				varchar(14);
vl_frete_w				bigint;
cd_natureza_w				smallint;
nr_sequencia_nf_w				bigint;
cd_material_estoque_w			integer;
cd_material_w				integer;
cd_unidade_compra_ordem_w		varchar(30);
cd_unidade_compra_cadastro_w		varchar(30);
cd_unidade_medida_estoque_w		varchar(30);
cd_unidade_medida_compra_w		varchar(30);
cd_condicao_pagamento_w			bigint;
cd_tributo_item_w				smallint;
cd_tributo_nota_w				smallint;
vl_desconto_w				double precision;
vl_liquido_w				double precision;
cd_centro_custo_w				integer;
cd_local_estoque_w			smallint;
cd_conta_contabil_w			varchar(20);
qt_item_estoque_w				double precision;
qt_conv_compra_estoque_w			double precision;
qt_conversao_w				double precision;


BEGIN 
 
if (cd_cliente_p IS NOT NULL AND cd_cliente_p::text <> '') then 
	cd_cgc_w := cd_cliente_p;
end if;
 
if (coalesce(nr_ordem_compra_p,0) > 0) then 
	select	coalesce(max(cd_cgc_fornecedor),null), 
		coalesce(max(cd_condicao_pagamento),null), 
		coalesce(max(vl_frete),null) 
	into STRICT	cd_cgc_w, 
		cd_condicao_pagamento_w, 
		vl_frete_w 
	from	ordem_compra 
	where	nr_ordem_compra = nr_ordem_compra_p;
end if;
 
if (coalesce(cd_condicao_pagamento_w,0) = 0) then 
	select	coalesce(max(cd_condicao_pagamento_padrao),0) 
	into STRICT	cd_condicao_pagamento_w 
	from	parametro_compras 
	where	cd_estabelecimento = cd_estabelecimento_p;
end if;
 
if (cd_condicao_pagamento_w = 0) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(266060);
	--'Não encontrada nenhuma condição de pagamento cadastrada.' || Chr(13) || 
	--'Verifique a Ordem de compras informada ou o cadastro dos parâmetros de compras - condição de pagamento padrão.'); 
end if;
 
select	coalesce(max(cd_natureza_operacao),0) 
into STRICT	cd_natureza_w 
from	natureza_operacao 
where	cd_natureza_operacao = cd_cfop_p;
 
if (cd_natureza_w = 0) then 
	select	coalesce(max(cd_natureza_operacao),0) 
	into STRICT	cd_natureza_w 
	from	operacao_nota 
	where	cd_operacao_nf = cd_operacao_nf_p;
end if;	
 
if (cd_natureza_w = 0) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(266061);
	--'Não encontrada nenhuma natureza de operação para a operação da nota fiscal.' || Chr(13) || 
	--'Verifique cadastro da operação da nota fiscal.'); 
end if;
 
select (coalesce(max(nr_sequencia_nf),0)+1) 
into STRICT 	nr_sequencia_nf_w 
from 	nota_fiscal 
where 	cd_estabelecimento = cd_estabelecimento_p 
and 	cd_cgc_emitente  = cd_cgc_w 
and 	nr_nota_fiscal   = nr_nota_fiscal_p 
and 	cd_serie_nf    = cd_serie_nf_p;
 
if (coalesce(cd_cgc_w::text, '') = '') then 
 
	select	coalesce(max(cd_cgc),0) 
	into STRICT	cd_cgc_w 
	from	nota_fiscal 
	where 	cd_estabelecimento = cd_estabelecimento_p 
	and	nr_nota_fiscal   = nr_nota_fiscal_p 
	and 	cd_serie_nf    = cd_serie_nf_p;
end if;
 
select	coalesce(max(nr_sequencia),0) 
into STRICT	nr_seq_nota_w 
from	nota_fiscal 
where 	cd_estabelecimento = cd_estabelecimento_p 
and 	cd_cgc_emitente  = cd_cgc_w 
and 	nr_nota_fiscal   = nr_nota_fiscal_p 
and 	cd_serie_nf    = cd_serie_nf_p;
 
if (nr_seq_nota_w = 0) then 
	begin 
 
	select	nextval('nota_fiscal_seq') 
	into STRICT	nr_seq_nota_w 
	;
 
	insert into nota_fiscal( 
		nr_sequencia, 
		cd_estabelecimento, 
		cd_cgc_emitente, 
		cd_serie_nf, 
		nr_nota_fiscal, 
		nr_sequencia_nf, 
		cd_operacao_nf, 
		dt_emissao, 
		dt_entrada_saida, 
		ie_acao_nf, 
		ie_emissao_nf, 
		ie_tipo_frete, 
		vl_frete, 
		vl_mercadoria, 
		vl_total_nota, 
		qt_peso_bruto, 
		qt_peso_liquido, 
		dt_atualizacao, 
		nm_usuario, 
		cd_cgc, 
		cd_natureza_operacao, 
		cd_condicao_pagamento, 
		ie_situacao, 
		nr_ordem_compra, 
		ie_tipo_nota) 
	values (nr_seq_nota_w, 
		cd_estabelecimento_p, 
		cd_cgc_w, 
		cd_serie_nf_p, 
		nr_nota_fiscal_p, 
		nr_sequencia_nf_w, 
		cd_operacao_nf_p, 
		clock_timestamp(), 
		clock_timestamp(), 
		1, 
		0, 
		'0', 
		vl_frete_w, 
		0, 
		0, 
		0, 
		'0', 
		clock_timestamp(), 
		nm_usuario_p, 
		cd_cgc_w, 
		cd_natureza_w, 
		cd_condicao_pagamento_w, 
		'1', 
		CASE WHEN nr_ordem_compra_p=0 THEN null  ELSE nr_ordem_compra_p END , 
		'EN');
	exception when others then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266064,'NR_SEQ_NOTA=' || nr_seq_nota_w || ';' || 
								'CD_CGC=' || cd_cgc_w || ';' || 
								'CD_SERIE_NF=' || cd_serie_nf_p || ';' || 
								'NR_NOTA_FISCAL=' || nr_nota_fiscal_p || ';' || 
								'NR_SEQUENCIA_NF=' || nr_sequencia_nf_w || ';' || 
								'CD_OPERACAO_NF=' || cd_operacao_nf_p || ';' || 
								'CD_CONDICAO_PAGAMENTO=' || cd_condicao_pagamento_w || ';' || 
								'VL_FRETE=' || vl_frete_w);
		--'Erro na importação da nota fiscal:' || 
		--'Seq: ' 		|| nr_seq_nota_w 			|| chr(13) || chr(10) || 
		--'CNPJ: ' 		|| cd_cgc_w 			|| chr(13) || chr(10) || 
		--'Série: '		|| cd_serie_nf_p 			|| chr(13) || chr(10) || 
		--'NF nº: ' 		|| nr_nota_fiscal_p			|| chr(13) || chr(10) || 
		--'Seq NF: '		|| nr_sequencia_nf_w 		|| chr(13) || chr(10) || 
		--'Operação: ' 	|| cd_operacao_nf_p		|| chr(13) || chr(10) || 
		--'Cond pagto: ' 	|| cd_condicao_pagamento_w 	|| chr(13) || chr(10) || 
		--'Vl Frete: ' 	|| vl_frete_w); 
	end;
end if;
 
select	dt_atualizacao_estoque 
into STRICT	dt_atualizacao_estoque_w 
from	nota_fiscal 
where	nr_sequencia = nr_seq_nota_w;
 
select	coalesce(max(nr_item_nf),0) 
into STRICT	nr_item_nf_w 
from	nota_fiscal_item 
where 	nr_sequencia		= nr_seq_nota_w 
and	nr_item_nf		= nr_seq_item_p;
 
 
if (nr_item_nf_w = 0) and (coalesce(dt_atualizacao_estoque_w::text, '') = '') then 
	begin 
	if (ie_tipo_registro_p = 'I') then 
		begin 
 
		select	coalesce(max(cd_material),0) 
		into STRICT	cd_material_w 
		from	preco_pj 
		where	cd_cgc	= cd_cgc_w 
		and	cd_item	= cd_mercadoria_p 
		and	cd_estabelecimento = cd_estabelecimento_p;
 
		if (cd_material_w = 0) then 
			begin 
			select	coalesce(max(cd_material_import),0) 
			into STRICT	cd_material_w 
			from	parametro_compras 
			where	cd_estabelecimento = cd_estabelecimento_p;
			end;
		else 
			begin 
			select	coalesce(max(cd_centro_custo), null), 
				coalesce(max(cd_local_estoque), null), 
				coalesce(max(cd_conta_contabil), null), 
				coalesce(max(cd_unidade_medida_compra), null) 
			into STRICT	cd_centro_custo_w, 
				cd_local_estoque_w, 
				cd_conta_contabil_w, 
				cd_unidade_compra_ordem_w 
			from	ordem_compra_item 
			where	nr_ordem_compra = nr_ordem_compra_p 
			and	cd_material = cd_material_w;
			end;		
		end if;
		 
		if (coalesce(cd_centro_custo_w::text, '') = '') and (cd_centro_custo_p > 0) then 
			cd_centro_custo_w := cd_centro_custo_p;
		end if;
 
		if (cd_material_w = 0) then 
			select	coalesce(max(cd_material),0) 
			into STRICT	cd_material_w 
			from	material 
			where	cd_material = cd_mercadoria_p;
		end if;
		 
		 
		if (cd_local_estoque_p <> 0) then 
			cd_local_estoque_w := cd_local_estoque_p;
		end if;	
		 
		if (cd_conta_contabil_p IS NOT NULL AND cd_conta_contabil_p::text <> '') then 
			cd_conta_contabil_w := cd_conta_contabil_p;
		end if;
 
		if (cd_material_w = 0) then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(266062);
			--'Não encontrado material vinculado ao fornecedor.' || Chr(13) || 
			--'Verifique pasta preços no cadastro do fornecedor.' 
		end if;
 
		begin 
		select	cd_material_estoque, 
			substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UMC'),1,255) cd_unidade_medida_compra, 
			substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UME'),1,30) cd_unidade_medida_estoque, 
			qt_conv_compra_estoque 
		into STRICT	cd_material_estoque_w, 
			cd_unidade_compra_cadastro_w, 
			cd_unidade_medida_estoque_w, 
			qt_conv_compra_estoque_w 
		from	material 
		where	cd_material = cd_material_w;
		exception 
			when others then 
				CALL wheb_mensagem_pck.exibir_mensagem_abort(266063,'CD_MATERIAL=' || cd_material_w);
				--'Não localizados os dados do material: ' || cd_material_w); 
		end;
 
		cd_unidade_medida_compra_w		:= cd_unidade_compra_cadastro_w;
		if (cd_unidade_compra_ordem_w IS NOT NULL AND cd_unidade_compra_ordem_w::text <> '') then 
			cd_unidade_medida_compra_w	:= cd_unidade_compra_ordem_w;
		end if;
 
		qt_conversao_w := obter_qt_conv_compra_est(cd_material_w, cd_cgc_w, cd_unidade_medida_compra_w, cd_estabelecimento_p, null, qt_conversao_w);
		qt_item_estoque_w	:= qt_mercadoria_p * qt_conversao_w;
 
		if (pr_desconto_p <> 0) then 
			vl_desconto_w	:= dividir((pr_desconto_p * vl_preco_total_item_p), 100);
		else 
			vl_desconto_w	:= 0;
		end if;
 
		if (vl_desconto_w > 0) then 
			vl_liquido_w	:= qt_mercadoria_p * vl_preco_unitario_liquido_p;
		else 
			vl_liquido_w	:= (qt_mercadoria_p * vl_preco_unitario_liquido_p) - vl_desconto_w;
		end if;
 
		insert into nota_fiscal_item( 
			nr_sequencia, 
			cd_estabelecimento, 
			cd_cgc_emitente, 
			cd_serie_nf, 
			nr_nota_fiscal, 
			nr_sequencia_nf, 
			nr_item_nf, 
			cd_natureza_operacao, 
			qt_item_nf, 
			qt_item_estoque, 
			vl_unitario_item_nf, 
			vl_total_item_nf, 
			dt_atualizacao, 
			nm_usuario, 
			cd_material, 
			vl_desconto_rateio, 
			vl_seguro, 
			vl_frete, 
			pr_desconto, 
			vl_desconto, 
			vl_despesa_acessoria, 
			vl_liquido, 
			cd_material_estoque, 
			cd_unidade_medida_compra, 
			cd_unidade_medida_estoque, 
			cd_local_estoque, 
			cd_conta_contabil, 
			cd_centro_custo, 
			nr_ordem_compra)			 
		values (	nr_seq_nota_w, 
			cd_estabelecimento_p, 
			cd_cgc_w, 
			cd_serie_nf_p, 
			nr_nota_fiscal_p, 
			nr_sequencia_nf_w, 
			nr_seq_item_p, 
			cd_natureza_w, 
			qt_mercadoria_p, 
			qt_item_estoque_w, 
			vl_preco_unitario_liquido_p, 
			vl_preco_total_item_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_material_w, 
			0, 
			0, 
			0, 
			pr_desconto_p, 
			vl_desconto_w, 
			0, 
			vl_liquido_w, 
			cd_material_estoque_w, 
			cd_unidade_medida_compra_w, 
			cd_unidade_medida_estoque_w, 
			cd_local_estoque_w, 
			cd_conta_contabil_w, 
			cd_centro_custo_w, 
			CASE WHEN nr_ordem_compra_p=0 THEN null  ELSE nr_ordem_compra_p END );
 
		if (tx_tributo_p > 0) then 
			begin 
			select (coalesce(max(nr_sequencia),0)+1) 
			into STRICT	nr_seq_item_trib_w 
			from	nota_fiscal_item_trib;
 
			select	coalesce(max(cd_tributo),0) 
			into STRICT	cd_tributo_item_w 
			from	tributo 
			where	ie_tipo_tributo = 'ICMS' 
			and	ie_corpo_item = 'I';
 			if (cd_tributo_item_w <> 0) then 
				begin 
				insert into nota_fiscal_item_trib( 
					nr_sequencia, 
					cd_estabelecimento, 
					cd_cgc_emitente, 
					cd_serie_nf, 
					nr_nota_fiscal, 
					nr_sequencia_nf, 
					nr_item_nf, 
					cd_tributo, 
					vl_tributo, 
					dt_atualizacao, 
					nm_usuario, 
					vl_base_calculo, 
					tx_tributo, 
					vl_reducao_base, 
					VL_TRIB_NAO_RETIDO, 
					VL_BASE_NAO_RETIDO, 
					VL_TRIB_ADIC, 
					VL_BASE_ADIC, 
					IE_RATEIO) 
				values (	nr_seq_nota_w, 
					cd_estabelecimento_p, 
					cd_cgc_w, 
					cd_serie_nf_p, 
					nr_nota_fiscal_p, 
					nr_sequencia_nf_w, 
					nr_seq_item_p, 
					cd_tributo_item_w, 
					dividir((vl_liquido_w * tx_tributo_p), 100), 
					clock_timestamp(), 
					nm_usuario_p, 
					vl_liquido_w, 
					tx_tributo_p, 
					0, 
					0, 
					0, 
					0, 
					0, 
					'N');
				end;
			end if;
			end;
		end if;
		end;
	end if;
	end;
end if;
 
	if (ie_tipo_registro_p = 'N') then 
		begin 
 
		update	nota_fiscal 
		  set	dt_emissao	= DT_EMISSAO_P, 
			vl_descontos	= VL_DESCONTOS_P, 
			vl_total_nota	= VL_TOTAL_NOTA_P 
		where	nr_sequencia	= nr_seq_nota_w;
 
		select	coalesce(max(cd_tributo),0) 
		into STRICT	cd_tributo_nota_w 
		from	tributo 
		where	ie_tipo_tributo = 'ICMS' 
		and	ie_corpo_item = 'C';
 
		if (cd_tributo_nota_w <> 0) then 
			begin 
 
			insert into nota_fiscal_trib( 
				nr_sequencia, 
				cd_tributo, 
				vl_tributo, 
				dt_atualizacao, 
				nm_usuario, 
				vl_base_calculo, 
				tx_tributo, 
				vl_reducao_base, 
				VL_TRIB_NAO_RETIDO, 
				VL_BASE_NAO_RETIDO, 
				VL_TRIB_ADIC, 
				VL_BASE_ADIC, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_seq_interno) 
			values (nr_seq_nota_w, 
				cd_tributo_nota_w, 
				vl_tributo_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				vl_total_nota_p, 
				dividir((vl_tributo_p * 100),vl_total_nota_p), 
				0, 
				0, 
				0, 
				0, 
				0, 
				clock_timestamp(), 
				nm_usuario_p, 
				nextval('nota_fiscal_trib_seq'));
			end;
		end if;
		end;
	end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importa_nota_fiscal ( ie_tipo_registro_p text, nr_ordem_compra_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_operacao_nf_p bigint, cd_local_estoque_p bigint, cd_conta_contabil_p text, cd_centro_custo_p bigint, cd_serie_nf_p text, nr_nota_fiscal_p bigint, qt_mercadoria_p bigint, vl_preco_unitario_liquido_p bigint, vl_preco_total_item_p bigint, cd_mercadoria_p bigint, dt_emissao_p timestamp, vl_descontos_p bigint, pr_desconto_p bigint, vl_total_nota_p bigint, tx_tributo_p bigint, vl_tributo_p bigint, cd_cfop_p bigint, nr_seq_item_p bigint, cd_cliente_p text) FROM PUBLIC;

