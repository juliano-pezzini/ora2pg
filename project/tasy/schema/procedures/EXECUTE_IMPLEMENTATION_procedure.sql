-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE execute_implementation ( nr_sequencia_p bigint, cd_pessoa_fisica_p text, cd_estabelecimento_p bigint, block_out_p INOUT bigint, ds_message_out INOUT text ) AS $body$
DECLARE


    nr_count_w                  integer;
    nr_count_ww                 integer := 0;
    cd_agenda_w                 rp_implementation_reab.nr_seq_therapist%TYPE;
    dt_start_implementation_w   rp_implementation_reab.dt_start_implementation%TYPE;
    qt_permisson_w              rp_implementation_rule.qt_permisson%TYPE;
    ie_error_w                  rp_implementation_rule.ie_error_type%TYPE;
    nr_tratamento_w             rp_implementation_reab.nr_seq_tratamento%TYPE;
    ds_category_w               rp_implementation_reab.ds_implementation_category%TYPE;
    ds_message_w                rp_implementation_rule.ds_message%TYPE;
    dt_diagnostico_w            rp_tratamento.dt_diagnostico%TYPE;
    nr_seq_dis_classif_w        rp_tratamento.nr_seq_dis_classif%TYPE;
    nr_count_td_w               integer := 0;
    nr_count_tid_w              integer := 0;
    nr_count_ai_w               integer := 0;
    nr_count_td_ww              integer := 0;
    nr_count_tid_ww             integer := 0;
    nr_count_ai_ww              integer := 0;
    block_w                     varchar(15);
    nr_week_day_w               smallint;
    ie_period_w                 varchar(1) := 'N';
    ie_block_w                  smallint   := 1;
    ie_first_time               varchar(1) := 'S';
    ds_therapist_w              varchar(200);
    nr_seq_impl_agenda_w        rp_implementation_reab.nr_seq_impl_agenda%TYPE;
    ie_exec_status_w		varchar(2);
    nr_prescricao_w		bigint;
    ds_param_integration_w      varchar(4000);
    json_data_w                 text;
    ie_gerar_evol_med_aval_w varchar(1) := 'N';
    cd_evolucao_w   bigint;
   c01 CURSOR FOR
    SELECT	coalesce(MAX(qt_permisson), 0) qt_per,
            MAX(ie_error_type) ie_error,
            MAX(ds_message) ds_msg
    FROM 	(SELECT	qt_permisson,
                    ie_error_type,
                    ds_message
            FROM	rp_implementation_rule
            WHERE	cd_estabelecimento = cd_estabelecimento_p
            AND		((ie_block_w < 4 and cd_agenda = cd_agenda_w) or ie_block_w > 3)
            AND		((ie_period_w = 'D' and (ie_week_days = nr_week_day_w OR coalesce(ie_week_days, 9) = 9)) or ie_period_w in ('S', 'M'))
            AND		ie_period = ie_period_w
            AND		((ie_block_w = 1 and ds_implementation_category = ds_category_w) or ie_block_w != 1)
            AND		((ie_block_w in (4, 7) and ie_traction_direct = 'S') or (ie_block_w in (5, 8) and ie_traction_indirect = 'S') or (ie_block_w in (6, 9) and ie_anti_inflamatory = 'S') or (ie_block_w in (11, 12) and ie_mesmo_pac = 'S')
                        or (ie_block_w not in (4, 5, 6, 7, 8, 9, 11, 12)))
            ORDER BY	qt_permisson ASC, dt_atualizacao DESC
            ) alias24 LIMIT 1;

    c02 CURSOR FOR
    SELECT 	COUNT(*) cnt,
            COUNT(CASE WHEN ds_item_category = 'D' THEN 1 END) d_cnt,
            COUNT(CASE WHEN ds_item_category = 'I' THEN 1 END) i_cnt,
            COUNT(CASE WHEN ds_item_category = 'A' THEN 1 END) a_cnt
    FROM    rp_implemen_item_reab a,
            rp_implementation_reab b
    WHERE   a.nr_seq_impl_reab = b.nr_sequencia
    AND     a.ds_excl_unit = 'I'
    AND     b.ie_exec_status = 'S'
    and     b.nr_seq_therapist = cd_agenda_w
    AND     ((ie_block_w = 1 and b.ds_implementation_category = ds_category_w) or ie_block_w != 1)
    AND     ((ie_block_w in (1, 3, 4, 5, 6) and pkg_date_utils.start_of(b.dt_start_implementation, 'DAY') = pkg_date_utils.start_of(dt_start_implementation_w, 'DAY'))
            or (ie_block_w = 2 and b.dt_start_implementation BETWEEN dt_start_implementation_w - nr_week_day_w AND dt_start_implementation_w - nr_week_day_w + 7)
            or (ie_block_w in (7, 8, 9) and b.dt_start_implementation BETWEEN pkg_date_utils.start_of(dt_start_implementation_w, 'MONTH', 0) AND dt_start_implementation_w)
            or (ie_block_w in (11, 12) and
                    b.nr_seq_tratamento IN (SELECT x.nr_seq_tratamento
                        FROM
                            agenda_consulta_adic   x,
                            agenda_consulta        y
                        WHERE
                            y.nr_sequencia = x.nr_seq_agenda
                            AND (x.nr_seq_tratamento IS NOT NULL AND x.nr_seq_tratamento::text <> '')
                            AND y.cd_pessoa_fisica = cd_pessoa_fisica_p
                            and (ie_block_w = 12 and (pkg_date_utils.start_of(b.dt_start_implementation, 'DAY') = pkg_date_utils.start_of(dt_start_implementation_w, 'DAY'))
                                or (ie_block_w = 11 and dt_start_implementation BETWEEN dt_start_implementation_w - nr_week_day_w AND dt_start_implementation_w - nr_week_day_w + 7))
                    ))
            );
    c03 CURSOR FOR
    SELECT  COUNT(CASE WHEN ds_item_category = 'D' THEN 1 END) d_cnt,
            COUNT(CASE WHEN ds_item_category = 'I' THEN 1 END) i_cnt,
            COUNT(CASE WHEN ds_item_category = 'A' THEN 1 END) a_cnt
    FROM    rp_implemen_item_reab    a
    WHERE   a.nr_seq_impl_reab = nr_sequencia_p
    AND     ds_excl_unit = 'I';
BEGIN

    SELECT
        nr_seq_therapist,
        dt_start_implementation,
        ds_implementation_category,
        nr_seq_tratamento,
        nr_seq_impl_agenda
    INTO STRICT
        cd_agenda_w,
        dt_start_implementation_w,
        ds_category_w,
        nr_tratamento_w,
        nr_seq_impl_agenda_w
    FROM
        rp_implementation_reab
    WHERE
        nr_sequencia = nr_sequencia_p;
    nr_week_day_w   := obter_cod_dia_semana(dt_start_implementation_w);
    ds_therapist_w  := obter_desc_agenda(cd_agenda_w);

    <<gotoblocks>>

    if ie_first_time = 'N' then
        if ( ie_error_w = 'E' ) then
            CALL wheb_mensagem_pck.abort_msg_without_log(ds_message_w);
        elsif ( ie_error_w = 'W' ) then
            ds_message_out := ds_message_w;
            block_out_p := ie_block_w + 1;
            GOTO finale;
        end if;
    end if;

    ie_first_time := 'N';
    IF block_out_p = 0 THEN
        GOTO block0;
    ELSIF block_out_p = 1 THEN
        GOTO block1;
    ELSIF block_out_p = 2 THEN
        GOTO block2;
    ELSIF block_out_p = 3 THEN
        GOTO block3;
    ELSIF block_out_p = 4 THEN
        GOTO block4;
    ELSIF block_out_p = 5 THEN
        GOTO block5;
    ELSIF block_out_p = 6 THEN
        GOTO block6;
    ELSIF block_out_p = 7 THEN
        GOTO block7;
    ELSIF block_out_p = 8 THEN
        GOTO block8;
    ELSIF block_out_p = 9 THEN
        GOTO block9;
    ELSIF block_out_p = 10 THEN
        GOTO block10;
    ELSIF block_out_p = 11 THEN
        GOTO block11;
    ELSIF block_out_p = 12 THEN
        GOTO block12;
    ELSIF block_out_p = 13 THEN
        GOTO block13;
    END IF;

--Patient insurance check for workers compensation category
    <<block0>>
    ie_block_w := 0;
     select count(*)
     into STRICT   nr_count_w 
     from   convenio c,
            pessoa_titular_convenio p 
     where  c.cd_convenio = p.cd_convenio 
     and    p.cd_pessoa_fisica = cd_pessoa_fisica_p 
     and    c.ie_tipo_convenio = 18;

     if (nr_count_w > 0) then
        block_out_p := 13;
        goto block13;
     end if;

--Therapist Category check rule on selected date
    << block1 >> 
    ie_block_w := 1;
    ie_period_w := 'D';
    SELECT
                    COUNT(*)
                INTO STRICT nr_count_ww
                FROM
                    rp_implemen_item_reab
                WHERE
                    nr_seq_impl_reab = nr_sequencia_p
                    AND ds_excl_unit = 'I'
                    AND ds_item_category = ds_category_w;

    for	r_c01_w in c01 loop
        qt_permisson_w  := r_c01_w.qt_per;
        ie_error_w      := r_c01_w.ie_error;
        ds_message_w    := r_c01_w.ds_msg;
    end loop;
    for r_c02_w in c02 loop
        nr_count_w  := r_c02_w.cnt;
    end loop;

    ds_message_w := substr(replace_macro(ds_message_w, '@allowedAmounts', qt_permisson_w), 1, 255);
    ds_message_w := substr(replace_macro(ds_message_w,'@durationType', to_char(dt_start_implementation_w, 'dd/mm/yyyy')),1,255);
    ds_message_w := substr(replace_macro(ds_message_w, '@therapist', ds_therapist_w), 1, 255);

    IF ( qt_permisson_w != 0 AND nr_count_w + nr_count_ww > qt_permisson_w ) THEN
        goto gotoblocks;
    END IF;

--Therapist weekly units check rule 
    << block2 >>
    ie_block_w  := 2;
    ie_period_w := 'S';
    SELECT
                    COUNT(*)
                INTO STRICT nr_count_ww
                FROM
                    rp_implemen_item_reab
                WHERE
                    nr_seq_impl_reab = nr_sequencia_p
                    AND ds_excl_unit = 'I';

    for	r_c01_w in c01 loop
        qt_permisson_w  := r_c01_w.qt_per;
        ie_error_w      := r_c01_w.ie_error;
        ds_message_w    := r_c01_w.ds_msg;
    end loop;
    for r_c02_w in c02 loop
        nr_count_w  := r_c02_w.cnt;
    end loop;

    ds_message_w := substr(replace_macro(ds_message_w, '@allowedAmounts', qt_permisson_w), 1, 255);
    ds_message_w := substr(replace_macro(ds_message_w,'@durationType', to_char(dt_start_implementation_w-nr_week_day_w, 'dd/mm/yyyy')||' and '||to_char(dt_start_implementation_w-nr_week_day_w+7, 'dd/mm/yyyy')),1,255);
    ds_message_w := substr(replace_macro(ds_message_w, '@therapist', ds_therapist_w), 1, 255);

    IF ( qt_permisson_w != 0 AND nr_count_w + nr_count_ww > qt_permisson_w ) THEN
        goto gotoblocks;
    END IF;

--Therapist Daily units check rule 
    << block3 >>
    ie_block_w  := 3;
    ie_period_w := 'D';
    for	r_c01_w in c01 loop
        qt_permisson_w  := r_c01_w.qt_per;
        ie_error_w      := r_c01_w.ie_error;
        ds_message_w    := r_c01_w.ds_msg;
    end loop;
    for r_c02_w in c02 loop
        nr_count_w  := r_c02_w.cnt;
    end loop;
	
	SELECT
		COUNT(*)
	INTO STRICT nr_count_ww
	FROM
		rp_implemen_item_reab
	WHERE
		nr_seq_impl_reab = nr_sequencia_p
		AND ds_excl_unit = 'I';

    ds_message_w := substr(replace_macro(ds_message_w, '@allowedAmounts', qt_permisson_w), 1, 255);
    ds_message_w := substr(replace_macro(ds_message_w,'@durationType', to_char(dt_start_implementation_w, 'dd/mm/yyyy')),1,255);
    ds_message_w := substr(replace_macro(ds_message_w, '@therapist', ds_therapist_w), 1, 255);

    IF ( qt_permisson_w != 0 AND nr_count_w + nr_count_ww > qt_permisson_w ) THEN
        goto gotoblocks;
    END IF;

--direct traction units daily check
    << block4 >>
    ie_block_w  := 4;
    ie_period_w := 'D';
    for	r_c03_w in c03 loop
        nr_count_td_ww  := r_c03_w.d_cnt;
    end loop;

    for	r_c01_w in c01 loop
        qt_permisson_w  := r_c01_w.qt_per;
        ie_error_w      := r_c01_w.ie_error;
        ds_message_w    := r_c01_w.ds_msg;
    end loop;

    for r_c02_w in c02 loop
        nr_count_td_w   := r_c02_w.d_cnt;
    end loop;

    ds_message_w := substr(replace_macro(ds_message_w, '@allowedAmounts', qt_permisson_w), 1, 255);
    ds_message_w := substr(replace_macro(ds_message_w,'@durationType', to_char(dt_start_implementation_w, 'dd/mm/yyyy')),1,255);
    ds_message_w := substr(replace_macro(ds_message_w, '@therapist', ds_therapist_w), 1, 255);

    IF ( qt_permisson_w != 0 AND nr_count_td_ww + nr_count_td_w > qt_permisson_w ) THEN
        goto gotoblocks;
    END IF;

--Indirect traction units daily check
    << block5 >>
    ie_block_w  := 5;
    ie_period_w := 'D';

    for	r_c03_w in c03 loop
        nr_count_tid_ww := r_c03_w.i_cnt;
    end loop;

    for	r_c01_w in c01 loop
        qt_permisson_w  := r_c01_w.qt_per;
        ie_error_w      := r_c01_w.ie_error;
        ds_message_w    := r_c01_w.ds_msg;
    end loop;

    for r_c02_w in c02 loop
        nr_count_tid_w  := r_c02_w.i_cnt;
    end loop;

    ds_message_w := substr(replace_macro(ds_message_w, '@allowedAmounts', qt_permisson_w), 1, 255);
    ds_message_w := substr(replace_macro(ds_message_w,'@durationType', to_char(dt_start_implementation_w, 'dd/mm/yyyy')),1,255);
    ds_message_w := substr(replace_macro(ds_message_w, '@therapist', ds_therapist_w), 1, 255);

    IF ( qt_permisson_w != 0 AND nr_count_tid_ww + nr_count_tid_w > qt_permisson_w ) THEN
        goto gotoblocks;
    END IF;

--Anti-inflamatory units daily check
    << block6 >>
    ie_block_w  := 6;
    ie_period_w := 'D';

    for	r_c03_w in c03 loop
        nr_count_ai_ww  := r_c03_w.a_cnt;
    end loop;

    for	r_c01_w in c01 loop
        qt_permisson_w  := r_c01_w.qt_per;
        ie_error_w      := r_c01_w.ie_error;
        ds_message_w    := r_c01_w.ds_msg;
    end loop;

    for r_c02_w in c02 loop
        nr_count_ai_w   := r_c02_w.a_cnt;
    end loop;

    ds_message_w := substr(replace_macro(ds_message_w, '@allowedAmounts', qt_permisson_w), 1, 255);
    ds_message_w := substr(replace_macro(ds_message_w,'@durationType', to_char(dt_start_implementation_w, 'dd/mm/yyyy')),1,255);
    ds_message_w := substr(replace_macro(ds_message_w, '@therapist', ds_therapist_w), 1, 255);

    IF ( qt_permisson_w != 0 AND nr_count_ai_ww + nr_count_ai_w > qt_permisson_w ) THEN
        goto gotoblocks;
    END IF;

--direct traction units montly check
    << block7 >>
    ie_block_w  := 7;
    ie_period_w := 'M';

    for	r_c03_w in c03 loop
        nr_count_td_ww  := r_c03_w.d_cnt;
    end loop;

    for	r_c01_w in c01 loop
        qt_permisson_w  := r_c01_w.qt_per;
        ie_error_w      := r_c01_w.ie_error;
        ds_message_w    := r_c01_w.ds_msg;
    end loop;

    for r_c02_w in c02 loop
        nr_count_td_w   := r_c02_w.d_cnt;
    end loop;

    ds_message_w := substr(replace_macro(ds_message_w, '@allowedAmounts', qt_permisson_w), 1, 255);
    ds_message_w := substr(replace_macro(ds_message_w,'@durationType', to_char(dt_start_implementation_w, 'dd/mm/yyyy')),1,255);
    ds_message_w := substr(replace_macro(ds_message_w, '@therapist', ds_therapist_w), 1, 255);

    IF ( qt_permisson_w != 0 AND nr_count_td_ww + nr_count_td_w > qt_permisson_w ) THEN
        goto gotoblocks;
    END IF;

--Indirect traction units monthly chec
    << block8 >>
    ie_block_w  := 8;
    ie_period_w := 'M';

    for	r_c03_w in c03 loop
        nr_count_tid_ww := r_c03_w.i_cnt;
    end loop;

    for	r_c01_w in c01 loop
        qt_permisson_w  := r_c01_w.qt_per;
        ie_error_w      := r_c01_w.ie_error;
        ds_message_w    := r_c01_w.ds_msg;
    end loop;

    for r_c02_w in c02 loop
        nr_count_tid_w  := r_c02_w.i_cnt;
    end loop;

    ds_message_w := substr(replace_macro(ds_message_w, '@allowedAmounts', qt_permisson_w), 1, 255);
    ds_message_w := substr(replace_macro(ds_message_w,'@durationType', to_char(dt_start_implementation_w, 'dd/mm/yyyy')),1,255);
    ds_message_w := substr(replace_macro(ds_message_w, '@therapist', ds_therapist_w), 1, 255);

    IF ( qt_permisson_w != 0 AND nr_count_tid_ww + nr_count_tid_w > qt_permisson_w ) THEN
        goto gotoblocks;
    END IF;

--anti - inflamatory units monthly check
    << block9 >>
    ie_block_w  := 9;
    ie_period_w := 'M';
    for	r_c03_w in c03 loop
        nr_count_ai_ww  := r_c03_w.a_cnt;
    end loop;

    for	r_c01_w in c01 loop
        qt_permisson_w  := r_c01_w.qt_per;
        ie_error_w      := r_c01_w.ie_error;
        ds_message_w    := r_c01_w.ds_msg;
    end loop;

    for r_c02_w IN c02 LOOP
        nr_count_ai_w := r_c02_w.a_cnt;
    end loop;

    ds_message_w := substr(replace_macro(ds_message_w, '@allowedAmounts', qt_permisson_w), 1, 255);
    ds_message_w := substr(replace_macro(ds_message_w,'@durationType', to_char(dt_start_implementation_w, 'dd/mm/yyyy')),1,255);
    ds_message_w := substr(replace_macro(ds_message_w, '@therapist', ds_therapist_w), 1, 255);

    IF ( qt_permisson_w != 0 AND nr_count_ai_ww + nr_count_ai_w > qt_permisson_w ) THEN
        GOTO gotoblocks;
    END IF;

--Acute illness, inpatient and (recovery and rehablitation check)
    << block10 >>
    ie_block_w  := 10;
    ie_period_w := '';

    SELECT  coalesce(dt_diagnostico, dt_start_implementation_w),
            nr_seq_dis_classif
    INTO STRICT    dt_diagnostico_w,
            nr_seq_dis_classif_w
    FROM    rp_tratamento
    WHERE   nr_sequencia = nr_tratamento_w;

-- Patient weekly units check 
    << block11 >>
    ie_block_w  := 11;
    ie_period_w := 'S';

    SELECT COUNT(*)
    INTO STRICT   nr_count_ww
    FROM   rp_implemen_item_reab
    WHERE  nr_seq_impl_reab = nr_sequencia_p
    AND    ds_excl_unit = 'I';

    for	r_c01_w in c01 loop
        qt_permisson_w  := r_c01_w.qt_per;
        ie_error_w      := r_c01_w.ie_error;
        ds_message_w    := r_c01_w.ds_msg;
    end loop;

    for r_c02_w in c02 loop
        nr_count_w      := r_c02_w.cnt;
    end loop;

    ds_message_w := substr(replace_macro(ds_message_w, '@allowedAmounts', qt_permisson_w), 1, 255);
    ds_message_w := substr(replace_macro(ds_message_w,'@durationType', to_char(dt_start_implementation_w-nr_week_day_w, 'dd/mm/yyyy')||' and '||to_char(dt_start_implementation_w-nr_week_day_w+7, 'dd/mm/yyyy')),1,255);
    ds_message_w := substr(replace_macro(ds_message_w, '@therapist', ds_therapist_w), 1, 255);

    IF ( qt_permisson_w != 0 AND nr_count_w + nr_count_ww > qt_permisson_w ) THEN
        goto gotoblocks;
    END IF;

--Patient daily units check
    << block12 >>
    ie_block_w  := 12;
    ie_period_w := 'D';
    SELECT COUNT(*)
    INTO STRICT   nr_count_ww
    FROM   rp_implemen_item_reab
    WHERE  nr_seq_impl_reab = nr_sequencia_p
    AND    ds_excl_unit = 'I';

    for	r_c01_w in c01 loop
        qt_permisson_w  := r_c01_w.qt_per;
        ie_error_w      := r_c01_w.ie_error;
        ds_message_w    := r_c01_w.ds_msg;
    end loop;

    for r_c02_w in c02 loop
        nr_count_w      := r_c02_w.cnt;
    end loop;

    ds_message_w := substr(replace_macro(ds_message_w, '@allowedAmounts', qt_permisson_w), 1, 255);
    ds_message_w := substr(replace_macro(ds_message_w,'@durationType', to_char(dt_start_implementation_w, 'dd/mm/yyyy')),1,255);
    ds_message_w := substr(replace_macro(ds_message_w, '@therapist', ds_therapist_w), 1, 255);

    IF ( qt_permisson_w != 0 AND nr_count_w + nr_count_ww > qt_permisson_w ) THEN
        goto gotoblocks;
	ELSE
		block_out_p := 13;
    END IF;

	<< block13 >>
	block_out_p := 14;
    update agenda_consulta
    set    ie_status_agenda = 'E'
    where  nr_sequencia = nr_seq_impl_agenda_w;

    update rp_implementation_reab
    set    ie_exec_status = 'S'
    where nr_sequencia = nr_sequencia_p;

	 /*SOAP Generation - Start*/

    ie_gerar_evol_med_aval_w := obter_param_usuario(281, 1667, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_gerar_evol_med_aval_w);
	if ( ie_gerar_evol_med_aval_w = 'S' ) then
	cd_evolucao_w := clinical_notes_pck.gerar_soap(null, nr_sequencia_p, 'REHAB', '2', 'P', 1, cd_evolucao_w, null, cd_pessoa_fisica_p);
	update rp_implementation_reab
	set cd_evolucao = cd_evolucao_w
	where nr_sequencia = nr_sequencia_p;
	end if;
    /*SOAP Generation - End */

	
	<<finale>>

/* Rehabilitation trigger point start */
    if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'ja_JP') then
        select ie_exec_status into STRICT ie_exec_status_w from rp_implementation_reab where nr_sequencia = nr_sequencia_p;
        select max(b.nr_prescricao) into STRICT nr_prescricao_w from cpoe_procedimento a, rp_tratamento c, rp_implementation_reab g, prescr_procedimento b
            where g.nr_seq_tratamento = c.nr_sequencia
                and c.nr_seq_cpoe_procedimento = a.nr_sequencia
                and a.nr_sequencia = b.nr_seq_proc_cpoe
                and g.nr_sequencia = nr_sequencia_p;
        if (ie_exec_status_w = 'S' and (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '')) then
            ds_param_integration_w := '{"recordid : "' || nr_prescricao_w || '"' || '}';
			json_data_w := bifrost.send_integration_content('nais.rehabilitation', ds_param_integration_w, wheb_usuario_pck.get_nm_usuario);
        end if;
    end if;
/* Rehabilitation trigger point end */
    
    commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE execute_implementation ( nr_sequencia_p bigint, cd_pessoa_fisica_p text, cd_estabelecimento_p bigint, block_out_p INOUT bigint, ds_message_out INOUT text ) FROM PUBLIC;

