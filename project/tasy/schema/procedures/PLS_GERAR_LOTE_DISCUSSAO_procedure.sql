-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lote_discussao ( nr_seq_camara_contest_p ptu_camara_contestacao.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

 
ie_tipo_w			varchar(1);
vl_acordo_w			double precision;
vl_apresentado_w		double precision;
vl_glosa_w			double precision;
vl_liberado_w			double precision;
qt_apresentada_w		double precision;
qt_glosa_w			double precision;
qt_liberada_w			double precision;
nr_seq_conta_proc_mat_w		bigint;
nr_fatura_w			ptu_camara_contestacao.nr_fatura%type;
nr_seq_a500_w			bigint;
nr_seq_conta_w			bigint;
nr_seq_lote_discussao_w		bigint;
nr_seq_contestacao_w		bigint;
nr_seq_discussao_w		bigint;
vl_ndc_w			double precision:= 0;
qt_ndc_w			double precision:= 0;
vl_reconh_orig_w		double precision:= 0;
qt_reconh_orig_w		double precision:= 0;

C01 CURSOR FOR 
	SELECT	nr_seq_a500 
	from (SELECT	nr_seq_a500, 
			nr_seq_contestacao 
		from	ptu_questionamento 
		where	nr_seq_contestacao	= nr_seq_camara_contest_p 
		and	ie_tipo_acordo('01','02') 
		
union
 
		select	s.nr_seq_a500, 
			c.nr_seq_contestacao 
		from	ptu_questionamento_rrs	c, 
			ptu_quest_serv_rrs	s 
		where	c.nr_sequencia		= s.nr_seq_quest_rrs 
		and	c.nr_seq_contestacao	= nr_seq_camara_contest_p 
		and	s.tp_acordo in ('01','02')) alias2 
	order by nr_seq_contestacao;
	
C02 CURSOR FOR 
	SELECT	d.nr_sequencia, 
		d.qt_procedimento_imp, 
		d.vl_procedimento_imp, 
		d.qt_procedimento_imp - CASE WHEN d.vl_procedimento_imp=d.vl_glosa THEN 0  ELSE d.qt_procedimento END , 
		d.vl_glosa, 
		CASE WHEN d.vl_procedimento_imp=d.vl_glosa THEN 0  ELSE d.qt_procedimento END , 
		d.vl_liberado, 
		d.nr_seq_conta, 
		'P' ie_tipo 
	from	pls_conta_proc		d, 
		ptu_nota_servico	c, 
		ptu_nota_cobranca	b, 
		ptu_fatura		a 
	where	c.nr_seq_nota_cobr	= b.nr_sequencia 
	and	b.nr_seq_fatura		= a.nr_sequencia 
	and	d.nr_sequencia		= c.nr_seq_conta_proc 
	and	a.nr_fatura		= nr_fatura_w 
	and	c.nr_seq_a500		= nr_seq_a500_w 
	
union all
 
	SELECT	d.nr_sequencia, 
		d.qt_material_imp, 
		d.vl_material_imp, 
		d.qt_material_imp - CASE WHEN d.vl_material_imp=d.vl_glosa THEN 0  ELSE d.qt_material END , 
		d.vl_glosa, 
		CASE WHEN d.vl_material_imp=d.vl_glosa THEN 0  ELSE d.qt_material END , 
		d.vl_liberado, 
		d.nr_seq_conta, 
		'M' ie_tipo 
	from	pls_conta_mat		d, 
		ptu_nota_servico	c, 
		ptu_nota_cobranca	b, 
		ptu_fatura		a 
	where	c.nr_seq_nota_cobr	= b.nr_sequencia 
	and	b.nr_seq_fatura		= a.nr_sequencia 
	and	d.nr_sequencia		= c.nr_seq_conta_mat 
	and	a.nr_fatura		= nr_fatura_w 
	and	c.nr_seq_a500		= nr_seq_a500_w;
	
C03 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_contestacao_discussao 
	where	nr_seq_contestacao	= nr_seq_contestacao_w;


BEGIN 
select	max(nr_fatura), 
	max(nr_seq_lote_contest) 
into STRICT	nr_fatura_w, 
	nr_seq_contestacao_w 
from	ptu_camara_contestacao 
where	nr_sequencia	= nr_seq_camara_contest_p;
	 
open C01;
loop 
fetch C01 into	 
	nr_seq_a500_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	open C02;
	loop 
	fetch C02 into	 
		nr_seq_conta_proc_mat_w, 
		qt_apresentada_w, 
		vl_apresentado_w, 
		qt_glosa_w, 
		vl_glosa_w, 
		qt_liberada_w, 
		vl_liberado_w, 
		nr_seq_conta_w, 
		ie_tipo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		if (coalesce(nr_seq_lote_discussao_w::text, '') = '') then 
			select	nextval('pls_lote_discussao_seq') 
			into STRICT	nr_seq_lote_discussao_w 
			;
 
			insert into pls_lote_discussao(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				dt_referencia, 
				ie_status, 
				nr_seq_lote_contest, 
				nr_lote_contabil) 
			values (nr_seq_lote_discussao_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				'A', 
				nr_seq_contestacao_w, 
				0);
		end if;
		 
		select	max(a.nr_sequencia) 
		into STRICT	nr_seq_discussao_w 
		from	pls_contestacao_discussao a 
		where	substr(pls_obter_dados_contestacao(a.nr_seq_contestacao,'NC'),1,10)	= nr_seq_conta_w 
		and	a.nr_seq_lote	= nr_seq_lote_discussao_w;
		 
		if (coalesce(nr_seq_discussao_w::text, '') = '') then 
			select	nextval('pls_contestacao_discussao_seq') 
			into STRICT	nr_seq_discussao_w 
			;
		 
			insert into pls_contestacao_discussao(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_seq_lote, 
				vl_recurso, 
				vl_negado, 
				nr_seq_contestacao, 
				ie_status) 
			values (nr_seq_discussao_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_lote_discussao_w, 
				0, 
				0, 
				nr_seq_contestacao_w, 
				'A');
		end if;
		 
			vl_reconh_orig_w := abs(vl_glosa_w - vl_apresentado_w);
		 
			if (vl_reconh_orig_w > 0) then 
				qt_reconh_orig_w := qt_glosa_w;
			end if;
		 
		if (ie_tipo_w = 'P') then		 
			insert into pls_discussao_proc(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_seq_discussao, 
				nr_seq_conta_proc, 
				qt_contestada, 
				vl_contestado, 
				qt_recurso, 
				vl_recurso, 
				qt_aceita, 
				vl_aceito, 
				nr_lote_contabil, 
				vl_ndc, 
				qt_ndc, 
				vl_reconh_orig, 
				qt_reconh_orig) 
			values (nextval('pls_discussao_proc_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_discussao_w, 
				nr_seq_conta_proc_mat_w, 
				qt_apresentada_w, 
				vl_apresentado_w, 
				qt_glosa_w, 
				vl_glosa_w, 
				0,--qt_liberada_w, 
				0,--vl_liberado_w, 
				0, 
				vl_ndc_w, 
				qt_ndc_w, 
				vl_reconh_orig_w, 
				qt_reconh_orig_w);
		else 
			insert into pls_discussao_mat(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_seq_discussao, 
				nr_seq_conta_mat, 
				qt_contestada, 
				vl_contestado, 
				qt_recurso, 
				vl_recurso, 
				qt_aceita, 
				vl_aceito, 
				nr_lote_contabil, 
				vl_ndc, 
				qt_ndc, 
				vl_reconh_orig, 
				qt_reconh_orig) 
			values (nextval('pls_discussao_mat_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_discussao_w, 
				nr_seq_conta_proc_mat_w, 
				qt_apresentada_w, 
				vl_apresentado_w, 
				qt_glosa_w, 
				vl_glosa_w, 
				0,--qt_liberada_w, 
				0,--vl_liberado_w, 
				0, 
				vl_ndc_w, 
				qt_ndc_w, 
				vl_reconh_orig_w, 
				qt_reconh_orig_w);
		end if;
		end;
	end loop;
	close C02;
	end;
end loop;
close C01;
 
open C03;
loop 
fetch C03 into	 
	nr_seq_discussao_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin 
	CALL pls_atualiza_valores_discussao(nr_seq_discussao_w);
	end;
end loop;
close C03;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lote_discussao ( nr_seq_camara_contest_p ptu_camara_contestacao.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

