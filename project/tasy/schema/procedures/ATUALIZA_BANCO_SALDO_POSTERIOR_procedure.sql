-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_banco_saldo_posterior (nr_seq_conta_p bigint, dt_referencia_p timestamp) AS $body$
DECLARE


vl_atualizacao_w		double precision;
vl_saldo_inicial_w		double precision;
vl_transacao_w			double precision;
NR_SEQ_SALDO_BANCO_W		bigint;
dt_referencia_w			timestamp;
ie_banco_w			varchar(1);
dt_referencia_anterior_w	timestamp;
dt_referencia_dia_w		timestamp;
/* Projeto Multimoeda - VariÃ¡veis */

vl_atualizacao_estrang_w	double precision;
vl_transacao_estrang_w		double precision;
vl_saldo_ini_estrang_w		double precision;
vl_cotacao_w			cotacao_moeda.vl_cotacao%type;

c02 CURSOR FOR
SELECT	nr_sequencia,
	dt_referencia,
	vl_cotacao
from	banco_saldo
where	nr_seq_conta	= nr_seq_conta_p
and	dt_referencia	>= dt_referencia_dia_w
order by	dt_referencia;

c01 CURSOR FOR
SELECT	coalesce(a.vl_transacao,0) vl_transacao,
	coalesce(a.vl_transacao_estrang,0) vl_transacao_estrang,
	b.ie_banco
from 	transacao_financeira b,
	movto_trans_financ a
where	b.nr_sequencia 		= a.nr_seq_trans_financ
and	a.nr_seq_saldo_banco	= nr_seq_saldo_banco_w;


BEGIN
/* Colocado esse tratamento de data a pedido do Edgar por haver clientes com saldos muito antigos abertos */

if (trunc(dt_referencia_p,'month') >= to_date('01/02/2007','dd/mm/yyyy')) then

	dt_referencia_dia_w	:= trunc(dt_referencia_p,'dd');

	open	c02;
	loop
	fetch	c02 into
		nr_seq_saldo_banco_w,
		dt_referencia_w,
		vl_cotacao_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */

		select	max(b.dt_referencia)
		into STRICT	dt_referencia_anterior_w
		from	banco_saldo b
		where	b.nr_seq_conta	= nr_seq_conta_p
		and	b.dt_referencia	< dt_referencia_w;

		select	coalesce(max(a.vl_saldo),0)
		into STRICT	vl_saldo_inicial_w
		from	banco_saldo a
		where	a.nr_seq_conta	= nr_seq_conta_p
		and	a.dt_referencia	= dt_referencia_anterior_w;

		select	coalesce(max(a.vl_saldo_estrang),0)
		into STRICT	vl_saldo_ini_estrang_w
		from	banco_saldo a
		where	a.nr_seq_conta	= nr_seq_conta_p
		and	a.dt_referencia	= dt_referencia_anterior_w;

		update	banco_saldo
		set	vl_saldo	= vl_saldo_inicial_w
		where	nr_sequencia	= nr_seq_saldo_banco_w;

		if (coalesce(vl_cotacao_w,0) <> 0) then
			update	banco_saldo
			set	vl_saldo_estrang = vl_saldo_ini_estrang_w
			where	nr_sequencia = nr_seq_saldo_banco_w;
		end if;

		vl_atualizacao_w := 0;
		vl_atualizacao_estrang_w := 0;

		open	c01;
		loop
		fetch	c01 into
			vl_transacao_w,
			vl_transacao_estrang_w,
			ie_banco_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

			if (ie_banco_w = 'C') then
				vl_atualizacao_w := vl_atualizacao_w + (vl_transacao_w * -1);
				if (coalesce(vl_cotacao_w,0) <> 0) then
					vl_atualizacao_estrang_w := vl_atualizacao_estrang_w + (vl_transacao_estrang_w * -1);
				end if;
			elsif (ie_banco_w = 'D') then
				vl_atualizacao_w := vl_atualizacao_w + vl_transacao_w;
				if (coalesce(vl_cotacao_w,0) <> 0) then
					vl_atualizacao_estrang_w := vl_atualizacao_estrang_w + vl_transacao_estrang_w;
				end if;
			end if;

		end	loop;
		close	c01;

		update	banco_saldo
		set	vl_saldo	= vl_saldo + vl_atualizacao_w
		where	nr_sequencia	= nr_seq_saldo_banco_w;

		if (coalesce(vl_cotacao_w,0) <> 0) then
			update banco_saldo
			set	vl_saldo_estrang = vl_saldo_estrang + vl_atualizacao_estrang_w
			where 	nr_sequencia = nr_seq_saldo_banco_w;
		end if;

	end	loop;
	close	c02;

	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_banco_saldo_posterior (nr_seq_conta_p bigint, dt_referencia_p timestamp) FROM PUBLIC;

