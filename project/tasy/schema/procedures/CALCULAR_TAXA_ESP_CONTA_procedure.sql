-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_taxa_esp_conta (nr_interno_conta_p bigint, nr_sequencia_p bigint, ie_proc_mat_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
nr_sequencia_w			bigint;
nr_seq_regra_preco_w		bigint;
VL_SERVICO_W			double precision := 0;
pr_total_w			double precision;

cd_area_procedimento_w		bigint;
cd_especialidade_w		bigint;
cd_grupo_proc_w			bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;

cd_grupo_material_w		bigint;
cd_subgrupo_material_w		bigint;
cd_classe_material_w		bigint;
cd_material_w			bigint;

 
cd_area_procedimento_ww		bigint;
cd_especialidade_ww		bigint;
cd_grupo_proc_ww		bigint;
cd_procedimento_ww		bigint;
ie_origem_proced_ww		bigint;

cd_grupo_material_ww		bigint;
cd_subgrupo_material_ww		bigint;
cd_classe_material_ww		bigint;
cd_material_ww			bigint;

nr_seq_regra_taxa_w		bigint;

vl_item_w			double precision;
vl_ajuste_w			double precision;
nr_atendimento_w		bigint;
nr_seq_item_w			bigint;
nr_seq_proc_pacote_w		bigint;
nr_seq_proc_interno_w		bigint;
nr_seq_mat_proc_w		bigint;
ie_proc_mat_w			smallint;
cd_motivo_exc_conta_w		bigint;
ie_pacote_w			varchar(1);
nr_seq_pacote_w			bigint;
ie_consignado_w			varchar(1);
ie_consignado_ww		varchar(1);

cd_estabelecimento_w		smallint;
ie_responsavel_credito_w	varchar(5);
vl_limite_w			regra_preco_proc_crit.vl_limite%type;
cd_convenio_w			regra_preco_proc_crit.cd_convenio%type;

c01 CURSOR FOR 
	SELECT a.nr_sequencia, 
		a.nr_seq_regra_preco, 
		a.cd_convenio 
	from 	procedimento_paciente a 
	where 	a.nr_interno_conta  	= nr_interno_conta_p 
	and	(a.nr_seq_regra_preco IS NOT NULL AND a.nr_seq_regra_preco::text <> '');

 
c09 CURSOR FOR 
SELECT 	pr_total, 
	coalesce(cd_area_procedimento,0) cd_area_procedimento, 
	coalesce(cd_especialidade, 0) cd_especialidade, 
	coalesce(cd_grupo_proc, 0) cd_grupo_proc, 
	coalesce(cd_procedimento, 0) cd_procedimento, 
	coalesce(ie_origem_proced, 0) ie_origem_proced, 
	coalesce(cd_grupo_material, 0) cd_grupo_material, 
	coalesce(cd_subgrupo_material, 0) cd_subgrupo_material, 
	coalesce(cd_classe_material, 0) cd_classe_material, 
	coalesce(cd_material, 0) cd_material, 
	coalesce(ie_consignado, '2') ie_consignado, 
	coalesce(vl_limite,0) vl_limite 
from 	regra_preco_proc_crit a 
where 	nr_seq_regra 						= nr_seq_regra_preco_w 
and	coalesce(cd_area_procedimento, cd_area_procedimento_w)	= cd_area_procedimento_w 
and	coalesce(cd_especialidade, cd_especialidade_w)		= cd_especialidade_w 
and	coalesce(cd_grupo_proc, cd_grupo_proc_w)			= cd_grupo_proc_w 
and	coalesce(cd_area_procedimento, cd_area_procedimento_w)	= cd_area_procedimento_w 
and	coalesce(cd_procedimento, cd_procedimento_w)			= cd_procedimento_w 
and 	coalesce(vl_item_w,0) between coalesce(a.vl_inicial, coalesce(vl_item_w,0)) and coalesce(a.vl_final, coalesce(vl_item_w,0)) 
and	coalesce(ie_origem_proced, ie_origem_proced_w)		= ie_origem_proced_w 
	and	(((coalesce(a.ie_consignado,'2')	= '0') and (ie_consignado_w = '0')) or 
		((coalesce(a.ie_consignado,'2') 	= '1') and (ie_consignado_w = '1')) or 
		((coalesce(a.ie_consignado,'2') 	= '3') and (ie_consignado_w = '2')) or 	 --Criada nova opcao OS821589		 
		(coalesce(a.ie_consignado,'2')	= '2')) 
and	coalesce(nr_seq_proc_interno, coalesce(nr_seq_proc_interno_w,0))		= coalesce(nr_seq_proc_interno_w,0) 
and (coalesce(cd_area_procedimento,0) + 
		coalesce(cd_especialidade,0) + 
		coalesce(cd_grupo_proc,0) + 
		coalesce(cd_procedimento,0) + 
		coalesce(nr_seq_proc_interno,0))				<> 0 
and	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') 
and	coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_w,0)) = coalesce(cd_estabelecimento_w,0) 
and 	coalesce(a.ie_responsavel_credito, coalesce(ie_responsavel_credito_w,'0')) = coalesce(ie_responsavel_credito_w,'0') 
and	((a.ie_pacote		= 'A') or 
	 (a.ie_pacote		= 'S' AND nr_seq_proc_pacote_w IS NOT NULL AND nr_seq_proc_pacote_w::text <> '') or 
	 ((a.ie_pacote		= 'N') and (coalesce(nr_seq_proc_pacote_w::text, '') = ''))) 
and	vl_item_w <> 0 
and	coalesce(a.cd_convenio, coalesce(cd_convenio_w, 0)) = coalesce(cd_convenio_w, 0) 

union
 
SELECT 	pr_total, 
	coalesce(cd_area_procedimento,0) cd_area_procedimento, 
	coalesce(cd_especialidade, 0) cd_especialidade, 
	coalesce(cd_grupo_proc, 0) cd_grupo_proc, 
	coalesce(cd_procedimento, 0) cd_procedimento, 
	coalesce(ie_origem_proced, 0) ie_origem_proced, 
	coalesce(cd_grupo_material, 0) cd_grupo_material, 
	coalesce(cd_subgrupo_material, 0) cd_subgrupo_material, 
	coalesce(cd_classe_material, 0) cd_classe_material, 
	coalesce(cd_material, 0) cd_material, 
	coalesce(ie_consignado, '2') ie_consignado, 
	coalesce(vl_limite,0) vl_limite 
from 	regra_preco_proc_crit a 
where 	nr_seq_regra 						= nr_seq_regra_preco_w 
and	coalesce(cd_grupo_material, cd_grupo_material_w)		= cd_grupo_material_w 
and	coalesce(cd_subgrupo_material, cd_subgrupo_material_w)	= cd_subgrupo_material_w 
and	coalesce(cd_classe_material, cd_classe_material_w)		= cd_classe_material_w 
and 	coalesce(cd_material, cd_material_w)				= cd_material_w 
and 	coalesce(vl_item_w,0) between coalesce(a.vl_inicial, coalesce(vl_item_w,0)) and coalesce(a.vl_final, coalesce(vl_item_w,0)) 
and	(((coalesce(a.ie_consignado,'2')	= '0') and (ie_consignado_w = '0')) or 
		((coalesce(a.ie_consignado,'2') 	= '1') and (ie_consignado_w = '1')) or 
		((coalesce(a.ie_consignado,'3') 	= '1') and (ie_consignado_w = '2')) or 		 --Criada nova opcao OS821589	 
		(coalesce(a.ie_consignado,'2')	= '2')) 
and	coalesce(cd_grupo_material,0) + 
		coalesce(cd_subgrupo_material,0) + 
		coalesce(cd_classe_material,0) + 
		coalesce(cd_material,0)				<> 0 
and	(cd_material_w IS NOT NULL AND cd_material_w::text <> '') 
and	coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_w,0)) = coalesce(cd_estabelecimento_w,0) 
and 	coalesce(a.ie_responsavel_credito, coalesce(ie_responsavel_credito_w,'0')) = coalesce(ie_responsavel_credito_w,'0') 
and	((a.ie_pacote		= 'A') or 
	 (a.ie_pacote		= 'S' AND nr_seq_proc_pacote_w IS NOT NULL AND nr_seq_proc_pacote_w::text <> '') or 
	 ((a.ie_pacote		= 'N') and (coalesce(nr_seq_proc_pacote_w::text, '') = ''))) 
and	vl_item_w <> 0 
and	coalesce(a.cd_convenio, coalesce(cd_convenio_w, 0)) = coalesce(cd_convenio_w, 0) 
order by cd_area_procedimento, 
		cd_especialidade, 
		cd_grupo_proc, 
		cd_procedimento, 
		ie_origem_proced, 
		cd_grupo_material, 
		cd_subgrupo_material, 
		cd_classe_material, 
		cd_material, 
		ie_consignado;
		
C04 CURSOR FOR 
	SELECT	nr_seq_mat_proc, 
		ie_proc_mat 
	from	taxa_resumo_conta 
	where	nr_atendimento = nr_atendimento_w 
	order by 2,1;
	
C05 CURSOR FOR 
	SELECT	nr_seq_mat_proc, 
		ie_proc_mat 
	from	taxa_resumo_conta 
	where	nr_atendimento = nr_atendimento_w 
	and 	ie_pacote_w = 'N' 
	order by 2,1;

 

BEGIN 
 
if (ie_proc_mat_p	= 1) then 
	select	max(b.cd_area_procedimento), 
		max(b.cd_especialidade), 
		max(b.cd_grupo_proc), 
		max(b.cd_procedimento), 
		max(b.ie_origem_proced), 
		sum(a.vl_procedimento), 
		max(nr_atendimento), 
		max(nr_sequencia), 
		max(nr_seq_proc_pacote), 
		max(nr_seq_proc_interno), 
		max(ie_responsavel_credito) 
	into STRICT	cd_area_procedimento_w, 
		cd_especialidade_w, 
		cd_grupo_proc_w, 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		vl_item_w, 
		nr_atendimento_w, 
		nr_seq_item_w, 
		nr_seq_proc_pacote_w, 
		nr_seq_proc_interno_w, 
		ie_responsavel_credito_w 
	from	estrutura_procedimento_v b, 
		procedimento_paciente a 
	where	a.cd_procedimento	= b.cd_procedimento 
	and	a.ie_origem_proced	= b.ie_origem_proced 
	and	a.nr_sequencia		= nr_sequencia_p 
	and 	a.nr_interno_conta	= nr_interno_conta_p 
	and 	coalesce(a.cd_motivo_exc_conta::text, '') = '';
else 
	select	max(b.cd_grupo_material), 
		max(b.cd_subgrupo_material), 
		max(b.cd_classe_material), 
		max(b.cd_material), 
		sum(a.vl_material), 
		max(nr_atendimento), 
		max(nr_sequencia), 
		max(nr_seq_proc_pacote), 
		coalesce(max(ie_consignado),2), 
		max(ie_responsavel_credito) 
	into STRICT	cd_grupo_material_w, 
		cd_subgrupo_material_w, 
		cd_classe_material_w, 
		cd_material_w, 
		vl_item_w, 
		nr_atendimento_w, 
		nr_seq_item_w, 
		nr_seq_proc_pacote_w, 
		ie_consignado_w, 
		ie_responsavel_credito_w 
	from	estrutura_material_v b, 
		material_atend_paciente a 
	where	a.cd_material		= b.cd_material 
	and	a.nr_sequencia		= nr_sequencia_p 
	and 	a.nr_interno_conta 	= nr_interno_conta_p 
	and 	coalesce(a.cd_motivo_exc_conta::text, '') = '';
end if;
 
select	max(cd_estabelecimento) 
into STRICT	cd_estabelecimento_w 
from	conta_paciente 
where	nr_interno_conta = nr_interno_conta_p;
 
open C04;
loop 
fetch C04 into	 
	nr_seq_mat_proc_w, 
	ie_proc_mat_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin 
	 
	if (ie_proc_mat_w = 1) then 
		--Procedimento 
		begin 
		select 	cd_motivo_exc_conta 
		into STRICT	cd_motivo_exc_conta_w 
		from 	procedimento_paciente 
		where 	nr_sequencia = nr_seq_mat_proc_w;
		exception 
			when others then 
			delete	from TAXA_RESUMO_CONTA 
			where	nr_atendimento	= nr_atendimento_w 
			and	nr_seq_mat_proc	= nr_seq_mat_proc_w;
		end;
		 
		if (cd_motivo_exc_conta_w IS NOT NULL AND cd_motivo_exc_conta_w::text <> '') then 
			delete	from TAXA_RESUMO_CONTA 
			where	nr_atendimento	= nr_atendimento_w 
			and	nr_seq_mat_proc	= nr_seq_mat_proc_w;
		end if;		
	else 
		--Material 
		begin 
		select 	cd_motivo_exc_conta 
		into STRICT	cd_motivo_exc_conta_w 
		from 	material_atend_paciente 
		where 	nr_sequencia = nr_seq_mat_proc_w;
		exception 
			when others then 
			delete	from TAXA_RESUMO_CONTA 
			where	nr_atendimento	= nr_atendimento_w 
			and	nr_seq_mat_proc	= nr_seq_mat_proc_w;
		end;
		 
		if (cd_motivo_exc_conta_w IS NOT NULL AND cd_motivo_exc_conta_w::text <> '') then 
			delete	from TAXA_RESUMO_CONTA 
			where	nr_atendimento	= nr_atendimento_w 
			and	nr_seq_mat_proc	= nr_seq_mat_proc_w;
		end if;
	end if;
	 
	end;	
end loop;
close C04;
 
open	c01;
loop 
fetch	c01 into 
	nr_sequencia_w, 
	nr_seq_regra_preco_w, 
	cd_convenio_w;
	begin 
	EXIT WHEN NOT FOUND; /* apply on C01 */	
	 
	 
	--Quando a regra for "FORA PACOTE" Apagar todos os registros que estão na tabela TAXA_RESUMO_CONTA e que estão no pacote 
	select 	coalesce(max(ie_pacote),'A') 
	into STRICT	ie_pacote_w 
	from 	regra_preco_proc_crit 
	where 	nr_seq_regra = nr_seq_regra_preco_w;
	 
	-- Procedimento 
	open C05;
	loop 
	fetch C05 into	 
		nr_seq_mat_proc_w, 
		ie_proc_mat_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin 
 
		if (ie_proc_mat_w = 1) then 
			 
			--Procedimento 
			select 	max(nr_seq_proc_pacote) 
			into STRICT	nr_seq_pacote_w 
			from 	procedimento_paciente 
			where 	nr_sequencia = nr_seq_mat_proc_w;
 
		 
			if (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '') then 
				delete	from TAXA_RESUMO_CONTA 
				where	nr_atendimento	= nr_atendimento_w 
				and	nr_seq_mat_proc	= nr_seq_mat_proc_w;
			end if;		
		else 
			--Material 
			select 	max(nr_seq_proc_pacote) 
			into STRICT	nr_seq_pacote_w 
			from 	material_atend_paciente 
			where 	nr_sequencia = nr_seq_mat_proc_w;
					 
			if (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '') then 
				delete	from TAXA_RESUMO_CONTA 
				where	nr_atendimento	= nr_atendimento_w 
				and	nr_seq_mat_proc	= nr_seq_mat_proc_w;
			end if;
		end if;
		 
		end;
	end loop;
	close C05;
	 
		 
	if (coalesce(nr_seq_regra_preco_w,0) <> 0) and (nr_seq_item_w <> nr_sequencia_w) then 
		begin		 
		 
		delete	from TAXA_RESUMO_CONTA 
		where	nr_seq_servico	= nr_sequencia_w 
		and	nr_seq_mat_proc	= nr_sequencia_p;
 
		pr_total_w:= null;
		 
		open	c09;
		loop 
		fetch	c09 into 
			pr_total_w, 
			cd_area_procedimento_w, 
			cd_especialidade_ww, 
			cd_grupo_proc_ww, 
			cd_procedimento_ww, 
			ie_origem_proced_ww, 
			cd_grupo_material_ww, 
			cd_subgrupo_material_ww, 
			cd_classe_material_ww, 
			cd_material_ww, 
			ie_consignado_ww, 
			vl_limite_w;
		EXIT WHEN NOT FOUND; /* apply on c09 */
			begin 
		 
			pr_total_w	:= pr_total_w;
			vl_limite_w	:= vl_limite_w;
 
			end;
		end loop;
		close c09;		
 
		if (pr_total_w IS NOT NULL AND pr_total_w::text <> '') then 
 
			select	nextval('taxa_resumo_conta_seq') 
			into STRICT	nr_seq_regra_taxa_w 
			;
 
			vl_ajuste_w	:= (vl_item_w * pr_total_w / 100);
 
			if (coalesce(vl_limite_w,0) > 0) and (vl_ajuste_w > vl_limite_w) then 
				vl_ajuste_w := vl_limite_w;
			end if;
 
			insert	into TAXA_RESUMO_CONTA(NR_SEQUENCIA,      
				NR_atendimento, 
				NR_SEQ_MAT_PROC, 
				DT_ATUALIZACAO, 
				NM_USUARIO, 
				DT_ATUALIZACAO_NREC, 
				NM_USUARIO_NREC, 
				NR_SEQ_REGRA, 
				PR_TAXA, 
				IE_PROC_MAT, 
				vl_item, 
				vl_ajuste,	 
				nr_seq_servico) 
			values (nr_seq_regra_taxa_w, 
				NR_atendimento_w, 
				nr_sequencia_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_regra_preco_w, 
				pr_total_w, 
				ie_proc_mat_p, 
				vl_item_w, 
				vl_ajuste_w, 
				nr_sequencia_w);
		end if;
 
		end;	
 
	select	coalesce(sum(vl_ajuste),0) 
	into STRICT	vl_servico_w 
	from	TAXA_RESUMO_CONTA 
	where	nr_seq_servico		= nr_sequencia_w 
	and 	nr_atendimento		= nr_atendimento_w;
	 
	begin 
	update	procedimento_paciente 
	set	vl_procedimento		= vl_servico_w 
	where	nr_sequencia		= nr_sequencia_w;
	exception 
		when others then	 
			vl_servico_w	:= vl_servico_w;
	end;
			 
	end if;
	end;
end loop;
close c01;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_taxa_esp_conta (nr_interno_conta_p bigint, nr_sequencia_p bigint, ie_proc_mat_p bigint, nm_usuario_p text) FROM PUBLIC;

