-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_dados_relat_3149 ( nr_seq_requisicao_p bigint, nr_seq_guia_p bigint, cd_juridico_liminar_p text, nr_seq_segurado_p bigint, nr_seq_contrato_p bigint, dt_requisicao_p timestamp, dt_guia_p timestamp, nm_usuario_p text) AS $body$
DECLARE

 
 
ds_sql_requisicoes_w		varchar(5000) := '';
bind_sql_requisicoes_w		sql_pck.t_dado_bind;
cursor_requisicoes_w		sql_pck.t_cursor;
nr_seq_processo_w			processo_judicial_liminar.nr_sequencia%type;
cd_juridico_liminar_w		processo_judicial_liminar.cd_juridico_liminar%type;
ds_liminar_w				processo_judicial_liminar.ds_liminar%type;
nm_orgao_expedidor_w		processo_judicial_org_expe.nm_orgao_expedidor%type;
dt_inicio_validade_w		processo_judicial_liminar.dt_inicio_validade%type;
dt_fim_validade_w			processo_judicial_liminar.dt_fim_validade%type;
dt_encerramento_w			processo_judicial_liminar.dt_encerramento%type;
nr_seq_segurado_w			pls_segurado.nr_sequencia%type;
nr_seq_contrato_w			pls_contrato.nr_sequencia%type;
nr_seq_req_w				pls_requisicao.nr_sequencia%type;
dt_requisicao_w				pls_requisicao.dt_requisicao%type;
cd_usuario_plano_w			varchar(255);
nm_beneficiario_w			pessoa_fisica.nm_pessoa_fisica%type;
cd_prestador_solic_w		pls_prestador.cd_prestador%type;
nm_prestador_solic_w		varchar(255);
cd_medico_solicitante_w		pessoa_fisica.cd_pessoa_fisica%type;
nm_medico_solic_w			pessoa_fisica.nm_pessoa_fisica%type;
ie_tipo_guia_w				pls_requisicao.ie_tipo_guia%type;
ie_estagio_w				pls_requisicao.ie_estagio%type;

C01 CURSOR FOR 
	SELECT 	'Procedimento' ds_tipo_item, 
			cd_procedimento cd_proc_mat, 
			substr(obter_descricao_procedimento(cd_procedimento,ie_origem_proced),1,255) ds_proc_mat, 
			qt_solicitado qt_solicitada, 
			qt_procedimento qt_aprovada, 
			qt_proc_executado qt_executada, 
			pls_quant_itens_pendentes_exec(qt_procedimento,qt_proc_executado) qt_pendente, 
			vl_procedimento vl_item, 
			ie_status 
	from	pls_requisicao_proc 
	where	nr_seq_requisicao	=	nr_seq_req_w 
	
union all
 
	SELECT 	'Material' ds_tipo_item, 
			(coalesce(substr(pls_obter_seq_codigo_material(nr_seq_material,''),1,255), nr_seq_material))::numeric  cd_proc_mat, 
			substr(pls_obter_desc_material(nr_seq_material),1,255) ds_proc_mat, 
			qt_solicitado qt_solicitado, 
			qt_material qt_aprovada, 
			qt_mat_executado qt_executada, 
			pls_quant_itens_pendentes_exec(qt_material, qt_mat_executado) qt_pendente, 
			vl_material vl_item, 
			ie_status 
	from	pls_requisicao_mat 
	where	nr_seq_requisicao	=	nr_seq_req_w;
		
C02 CURSOR FOR 
	SELECT	nr_sequencia nr_seq_analise, 
			to_char(dt_auditoria, 'dd/mm/yyyy') dt_auditoria, 
			to_char(dt_liberacao, 'dd/mm/yyyy') dt_liberacao, 
			nr_telef_beneficiario, 
			nr_telef_celular_benef 
	from	pls_auditoria 
	where	nr_seq_requisicao	= nr_seq_req_w;
		
C03 CURSOR(nr_seq_analise_pc	bigint) FOR 
	SELECT	'Procedimento' ds_tipo_item, 
			cd_procedimento cd_proc_mat, 
			substr(Obter_Descricao_Procedimento(cd_procedimento,ie_origem_proced),1,255) ds_proc_mat,		 
			qt_original, 
			qt_ajuste, 
			vl_item vl_item 
	from	pls_auditoria_item 
	where	nr_seq_auditoria = nr_seq_analise_pc 
	and		(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '') 
	
union
 
	SELECT	'Material' ds_tipo_item, 
			(CASE WHEN pls_obter_dados_material(nr_seq_material,'CO')='' THEN nr_seq_material  ELSE pls_obter_dados_material(nr_seq_material,'CO') END )::numeric  cd_proc_mat, 
			substr(pls_obter_desc_material(nr_seq_material),1,255) ds_proc_mat,		 
			qt_original, 
			qt_ajuste, 
			vl_item vl_item 
	from	pls_auditoria_item 
	where	nr_seq_auditoria = nr_seq_analise_pc 
	and		(nr_seq_material IS NOT NULL AND nr_seq_material::text <> '');

C04 CURSOR FOR 
	SELECT	a.nr_sequencia	nr_seq_processo, 
			a.cd_juridico_liminar, 
			a.ds_liminar, 
			(SELECT substr(b.nm_orgao_expedidor,1,255) from processo_judicial_org_expe b where b.nr_sequencia = a.nr_seq_orgao_exped) nm_orgao_expedidor, 
			to_char(a.dt_inicio_validade, 'dd/mm/yyyy') dt_inicio_val, 	 
			to_char(a.dt_fim_validade, 'dd/mm/yyyy') dt_fim_validade, 	 
			to_char(a.dt_encerramento, 'dd/mm/yyyy') dt_encerramento 
	from	processo_judicial_liminar a 
	where	nr_sequencia	= nr_seq_processo_w;

C05 CURSOR FOR 
	SELECT 	'P' ds_tipo_item, 
			a.cd_procedimento cd_proc_mat, 
			substr(obter_descricao_procedimento(a.cd_procedimento,a.ie_origem_proced),1,255) ds_proc_mat, 
			a.qt_item, 
			a.nr_seq_guia, 
			b.cd_guia, 
			to_char(c.dt_execucao, 'dd/mm/yyyy') dt_execucao, 
			b.nr_seq_prestador, 
			substr(pls_obter_dados_prestador(b.nr_seq_prestador,'N'),1,255) nm_prestador 
	from	pls_execucao_req_item a, 
			pls_guia_plano		b, 
			pls_execucao_requisicao	c 
	where	a.nr_seq_execucao	= c.nr_sequencia 
	and		a.nr_seq_guia 		= b.nr_sequencia 
	and		c.nr_seq_requisicao	= nr_seq_req_w 
	and		(nr_seq_req_proc IS NOT NULL AND nr_seq_req_proc::text <> '') 
	and (coalesce(nr_seq_guia_p::text, '') = '' 
	or ((nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') 
	and		b.nr_sequencia		= nr_seq_guia_p)) 
	and (coalesce(dt_guia_p::text, '') = '' 
	or ((dt_guia_p IS NOT NULL AND dt_guia_p::text <> '') 
	and 	trunc(b.dt_autorizacao) = dt_guia_p)) 
	
union
 
	SELECT	'M' ds_tipo_item, 
			(coalesce(substr(pls_obter_seq_codigo_material(a.nr_seq_material,''),1,255), a.nr_seq_material))::numeric  cd_proc_mat, 
			substr(pls_obter_desc_material(a.nr_seq_material),1,255) ds_proc_mat, 
			a.qt_item, 
			a.nr_seq_guia, 
			b.cd_guia, 
			to_char(c.dt_execucao, 'dd/mm/yyyy') dt_execucao, 
			b.nr_seq_prestador, 
			substr(pls_obter_dados_prestador(b.nr_seq_prestador,'N'),1,255) nm_prestador 
	from	pls_execucao_req_item a, 
			pls_guia_plano		b, 
			pls_execucao_requisicao	c 
	where	a.nr_seq_execucao	= c.nr_sequencia 
	and		a.nr_seq_guia 		= b.nr_sequencia 
	and		c.nr_seq_requisicao	= nr_seq_req_w 
	and		(nr_seq_req_mat IS NOT NULL AND nr_seq_req_mat::text <> '') 
	and (coalesce(nr_seq_guia_p::text, '') = '' 
	or ((nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') 
	and		b.nr_sequencia		= nr_seq_guia_p)) 
	and (coalesce(dt_guia_p::text, '') = '' 
	or ((dt_guia_p IS NOT NULL AND dt_guia_p::text <> '') 
	and 	trunc(b.dt_autorizacao) = dt_guia_p));

BEGIN 
 
delete	from w_pls_processo_judicial 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_pls_requisicao 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_pls_requisicao_itens 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_pls_analise_autorizacao 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_pls_analise_aut_item 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_proc_solic 
where	nm_usuario		= nm_usuario_p;
 
-- Busca as requisições 
ds_sql_requisicoes_w	:=	' select	distinct b.nr_seq_processo, ' || 
							'	 		a.nr_sequencia nr_seq_req, ' || 
							'			a.dt_requisicao, ' || 
							'			substr(pls_obter_dados_segurado(a.nr_seq_segurado,''C''),1,255) cd_usuario_plano,	' || 
							'			substr(pls_obter_dados_segurado(a.nr_seq_segurado,''N''),1,255) nm_beneficiario, ' || 
							'			substr(pls_obter_dados_prestador(a.nr_seq_prestador, ''CD''),1,255) cd_prestador_solic, ' || 
							'			substr(pls_obter_dados_prestador(a.nr_seq_prestador, ''N''),1,255) nm_prestador_solic, ' || 
							'			a.cd_medico_solicitante, ' || 
							'			substr(obter_nome_medico(a.cd_medico_solicitante,''N''),1,255) nm_medico_solic, ' || 
							'			a.ie_tipo_guia, ' || 
							'			a.ie_estagio ';
 
ds_sql_requisicoes_w	:= ds_sql_requisicoes_w ||' from 		pls_requisicao a, ' || 
													'			pls_req_liminar_judicial b ';
													 
if ((nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') or (dt_guia_p IS NOT NULL AND dt_guia_p::text <> ''))	then 
	ds_sql_requisicoes_w	:= ds_sql_requisicoes_w || 	' , pls_guia_plano c,' || 
														'	pls_execucao_requisicao d ';
end if;						
if ((cd_juridico_liminar_p IS NOT NULL AND cd_juridico_liminar_p::text <> '') 
	or (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') 
	or (nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '')) then 
	ds_sql_requisicoes_w	:= ds_sql_requisicoes_w || 	' , processo_judicial_liminar e ';					
end if;
 
ds_sql_requisicoes_w	:= ds_sql_requisicoes_w || 	' where	a.nr_sequencia	= b.nr_seq_requisicao ';
 
if ((nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') or (dt_guia_p IS NOT NULL AND dt_guia_p::text <> ''))	then 
	ds_sql_requisicoes_w	:= ds_sql_requisicoes_w || 	'	and	d.nr_seq_requisicao = a.nr_sequencia ' || 
														'	and	d.nr_seq_guia		= c.nr_sequencia ';
	if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then 
		ds_sql_requisicoes_w	:= ds_sql_requisicoes_w || ' and c.nr_sequencia	= :nr_seq_guia ';
		bind_sql_requisicoes_w := sql_pck.bind_variable(':nr_seq_guia', nr_seq_guia_p, bind_sql_requisicoes_w);
	end if;
	if (dt_guia_p IS NOT NULL AND dt_guia_p::text <> '') then 
		ds_sql_requisicoes_w	:= ds_sql_requisicoes_w || ' and trunc(c.dt_autorizacao) = :dt_guia ';
		bind_sql_requisicoes_w := sql_pck.bind_variable(':dt_guia', dt_guia_p, bind_sql_requisicoes_w);
	end if;
end if;	
if ((cd_juridico_liminar_p IS NOT NULL AND cd_juridico_liminar_p::text <> '') 
	or (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') 
	or (nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '')) then 
	 
	ds_sql_requisicoes_w	:= ds_sql_requisicoes_w || 	' and e.nr_sequencia = b.nr_seq_processo ';					
						 
	if (cd_juridico_liminar_p IS NOT NULL AND cd_juridico_liminar_p::text <> '') then 
		ds_sql_requisicoes_w	:= ds_sql_requisicoes_w || ' and e.cd_juridico_liminar like :cd_juridico_liminar ';
		bind_sql_requisicoes_w := sql_pck.bind_variable(':cd_juridico_liminar', cd_juridico_liminar_p, bind_sql_requisicoes_w);
	end if;	
	if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then 
		ds_sql_requisicoes_w	:= ds_sql_requisicoes_w || ' and e.nr_seq_segurado	= :nr_seq_segurado ';
		bind_sql_requisicoes_w := sql_pck.bind_variable(':nr_seq_segurado', nr_seq_segurado_p, bind_sql_requisicoes_w);
	end if;	
	if (nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '') then 
		ds_sql_requisicoes_w	:= ds_sql_requisicoes_w || ' and e.nr_seq_contrato	= :nr_seq_contrato ';
		bind_sql_requisicoes_w := sql_pck.bind_variable(':nr_seq_contrato', nr_seq_contrato_p, bind_sql_requisicoes_w);
	end if;	
end if;	
if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
	ds_sql_requisicoes_w	:= ds_sql_requisicoes_w || ' and a.nr_sequencia	= :nr_seq_requisicao ';
	bind_sql_requisicoes_w := sql_pck.bind_variable(':nr_seq_requisicao', nr_seq_requisicao_p, bind_sql_requisicoes_w);
end if;	
if (dt_requisicao_p IS NOT NULL AND dt_requisicao_p::text <> '') then 
	ds_sql_requisicoes_w	:= ds_sql_requisicoes_w || ' and trunc(a.dt_requisicao)	= :dt_requisicao ';	
	bind_sql_requisicoes_w := sql_pck.bind_variable(':dt_requisicao', dt_requisicao_p, bind_sql_requisicoes_w);
end if;
 
ds_sql_requisicoes_w	:= ds_sql_requisicoes_w || ' order by b.nr_seq_processo, a.nr_sequencia ';
 
bind_sql_requisicoes_w := sql_pck.executa_sql_cursor(ds_sql_requisicoes_w, bind_sql_requisicoes_w);
begin 
	loop 
		fetch cursor_requisicoes_w into 	nr_seq_processo_w, nr_seq_req_w, dt_requisicao_w,	 
											cd_usuario_plano_w, nm_beneficiario_w, cd_prestador_solic_w, 
											nm_prestador_solic_w, cd_medico_solicitante_w, nm_medico_solic_w, 
											ie_tipo_guia_w, ie_estagio_w;
		EXIT WHEN NOT FOUND; /* apply on cursor_requisicoes_w */
		 
		insert 	into w_pls_requisicao( 
											nr_sequencia, 
											nm_usuario, 
											nm_usuario_nrec, 
											dt_atualizacao, 
											dt_atualizacao_nrec, 
											nr_seq_processo, 
											nr_seq_requisicao, 
											dt_requisicao, 
											cd_usuario_plano, 
											nm_beneficiario, 
											cd_prestador_solic,		 
											nm_prestador_solic, 
											cd_medico_solicitante, 
											nm_medico_solicitante, 
											ie_tipo_guia, 
											ie_estagio			 
								) values (	 
											nextval('w_pls_requisicao_seq'), 
											nm_usuario_p, 
											nm_usuario_p, 
											clock_timestamp(), 
											clock_timestamp(), 
											nr_seq_processo_w, 
											nr_seq_req_w, 
											dt_requisicao_w, 
											cd_usuario_plano_w, 
											nm_beneficiario_w, 
											cd_prestador_solic_w, 
											nm_prestador_solic_w, 
											cd_medico_solicitante_w, 
											nm_medico_solic_w, 
											ie_tipo_guia_w, 
											ie_estagio_w 
										);
		commit;
							 
		for C04_w in C04 loop --busca os dados dos processos judiciais 
		begin 
			insert 	into w_pls_processo_judicial(	 
												nr_sequencia, 
												nm_usuario, 
												nm_usuario_nrec, 
												dt_atualizacao, 
												dt_atualizacao_nrec, 
												nr_seq_processo, 
												cd_juridico_liminar, 
												ds_juridico_liminar, 
												nm_orgao_expeditor, 
												dt_inicio_validade, 
												dt_fim_validade, 
												dt_encerramento 
									) values (										 
												nextval('w_pls_processo_judicial_seq'), 
												nm_usuario_p, 
												nm_usuario_p, 
												clock_timestamp(), 
												clock_timestamp(), 
												nr_seq_processo_w,	 
												C04_w.cd_juridico_liminar,		 
												C04_w.ds_liminar,			 
												C04_w.nm_orgao_expedidor,		 
												C04_w.dt_inicio_val, 
												C04_w.dt_fim_validade,		 
												C04_w.dt_encerramento 
											);
			commit;
								 
			for C01_w in C01 loop --busca os itens de cada requisição 
			begin 
				insert 	into w_pls_requisicao_itens( 
														nr_sequencia, 
														nm_usuario, 
														nm_usuario_nrec, 
														dt_atualizacao, 
														dt_atualizacao_nrec, 
														nr_seq_processo, 
														nr_seq_requisicao, 
														ie_tipo_item, 
														cd_proc_mat, 
														ds_proc_mat, 
														qt_proc_mat_solic, 
														qt_proc_mat_aprovado, 
														qt_proc_mat_executado, 
														qt_proc_mat_pendente, 
														vl_item, 
														ie_status 
											) values (	 
														nextval('w_pls_requisicao_itens_seq'), 
														nm_usuario_p, 
														nm_usuario_p, 
														clock_timestamp(), 
														clock_timestamp(), 
														nr_seq_processo_w, 
														nr_seq_req_w, 
														C01_w.ds_tipo_item, 
														C01_w.cd_proc_mat, 
														C01_w.ds_proc_mat, 
														C01_w.qt_solicitada, 
														C01_w.qt_aprovada, 
														C01_w.qt_executada, 
														C01_w.qt_pendente, 
														C01_w.vl_item, 
														C01_w.ie_status 
													);
				commit;
			end;
			end loop;
					 
			for C02_w in C02 loop --busca as análises 
			begin 
				insert 	into w_pls_analise_autorizacao( 
														nr_sequencia, 
														nm_usuario, 
														nm_usuario_nrec, 
														dt_atualizacao, 
														dt_atualizacao_nrec, 
														nr_seq_processo, 
														nr_seq_analise, 
														nr_seq_requisicao, 
														dt_auditoria, 
														dt_liberacao, 
														nr_telef_beneficiario, 
														nr_telef_celular_benef 
											) values (	 
														nextval('w_pls_analise_autorizacao_seq'), 
														nm_usuario_p, 
														nm_usuario_p, 
														clock_timestamp(), 
														clock_timestamp(), 
														nr_seq_processo_w, 
														C02_w.nr_seq_analise, 
														nr_seq_req_w,																		 
														C02_w.dt_auditoria, 
														C02_w.dt_liberacao, 
														C02_w.nr_telef_beneficiario, 
														C02_w.nr_telef_celular_benef 
													);
					commit;
					 
				for C03_w in C03(C02_w.nr_seq_analise) loop --busca os itens da análise 
				begin 
					insert 	into w_pls_analise_aut_item( 
															nr_sequencia, 
															nm_usuario, 
															nm_usuario_nrec, 
															dt_atualizacao, 
															dt_atualizacao_nrec, 
															nr_seq_processo, 
															nr_seq_analise, 
															ie_tipo_item, 
															cd_proc_mat, 
															ds_proc_mat, 
															qt_original, 
															qt_ajuste, 
															vl_item 
												) values (	 
															nextval('w_pls_analise_aut_item_seq'), 
															nm_usuario_p, 
															nm_usuario_p, 
															clock_timestamp(), 
															clock_timestamp(), 
															nr_seq_processo_w, 
															C02_w.nr_seq_analise, 
															C03_w.ds_tipo_item, 
															C03_w.cd_proc_mat, 
															C03_w.ds_proc_mat,		 
															C03_w.qt_original, 
															C03_w.qt_ajuste, 
															C03_w.vl_item 
														);
					commit;
				end;
				end loop;					
			end;
			end loop;	
		 
			for C05_w in C05 loop --busca os autorizações			 
			begin 
				insert 	into w_tiss_proc_solic( 
												nr_sequencia, 
												nm_usuario, 
												dt_atualizacao, 
												nr_seq_guia, 
												ie_opcao_fabricante, 
												cd_procedimento, 
												ds_procedimento, 
												qt_solicitada, 
												nr_seq_apresentacao, 
												nr_seq_conta 
									) values (	 
												nextval('w_tiss_proc_solic_seq'), 
												nm_usuario_p, 
												clock_timestamp(), 
												C05_w.nr_seq_guia, 
												C05_w.ds_tipo_item, 
												C05_w.cd_proc_mat, 
												C05_w.ds_proc_mat, 
												C05_w.qt_item, 
												nr_seq_processo_w, 
												nr_seq_req_w 
											);
				commit;	
			end;
			end loop;
		end;
		end loop;				
	end loop;
close cursor_requisicoes_w;
exception 
	when others then 
	if (cursor_requisicoes_w%isopen) then 
		close cursor_requisicoes_w;
	end if;	
end;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_dados_relat_3149 ( nr_seq_requisicao_p bigint, nr_seq_guia_p bigint, cd_juridico_liminar_p text, nr_seq_segurado_p bigint, nr_seq_contrato_p bigint, dt_requisicao_p timestamp, dt_guia_p timestamp, nm_usuario_p text) FROM PUBLIC;

