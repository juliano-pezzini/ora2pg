-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_honorario_proc ( nr_seq_conta_proc_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_grau_partic_p bigint, ie_tipo_guia_p text, nr_seq_tipo_atendimento_p bigint, ie_tipo_conta_p text, nr_seq_prestador_p bigint, ie_tipo_protocolo_p text, nr_auxiliares_p bigint, ie_status_p text, ie_repassa_medico_p text, vl_anestesista_p bigint, vl_medico_p bigint, vl_auxiliares_p bigint, cd_estabelecimento_p bigint, dt_procedimento_p timestamp, nm_usuario_p text, nr_seq_categoria_p bigint, dt_preco_p timestamp, nr_seq_tipo_acomodacao_p bigint, nr_seq_clinica_p bigint, nr_seq_plano_p bigint, ie_tipo_tabela_p text, nr_seq_contrato_p bigint, cd_convenio_p bigint, cd_categoria_p text, ie_tipo_contratacao_p text, qt_dias_internacao_p bigint, nr_seq_segurado_p bigint, nr_seq_intercambio_p bigint, ie_conta_interacao_p text, ie_tecnica_utilizada_p text, ie_tipo_intercambio_p text, sg_estado_int_p text, ie_carater_internacao_p text, ie_origem_calc_p text, vl_total_partic_p INOUT bigint, ie_tipo_partic_prof_p INOUT text, nr_seq_prestador_pgto_p bigint, ie_repassa_medico_pgto_p text, ie_acao_p text default 'A') AS $body$
DECLARE


					
/*ie_origem_calc_p identifica se a origem do cálculo é o pós estabelecido ou a definição de valor para o procedimento
P - Pós estabelecido - pls_atualiza_valor_proc_co 
CO - Coparticipação pls_atualiza_valor_proc
C - Cálculo procedimento pls_atualiza_valor_ proc */



/*ie_forma_calculo_w
C - Prestador Conta
P - Prestador participante
Depende do parametro da função OPS - Gestão de Operadoras > Parametros OPS > Contas médicas Cálcular vl. participante baseado no prestador do mesmo
anulado o parâmetro modificado para que caso haja nr_seq_prestador informado na pls_proc_participante este fique com o status cancelado e a seja criada um nova conta*/
			
ie_tipo_tabela_partic_w		varchar(1);
nr_seq_participante_w		bigint;
cd_medico_w			varchar(10);
ie_anestesista_w		varchar(1)	:= 1;
ie_medico_w			varchar(1)	:= 1;
ie_auxiliar_w			varchar(1)	:= 1;
nr_seq_grau_partic_ww		bigint;
nr_seq_prestador_partic_w	bigint;
ie_vinculado_w			varchar(1)	:= 'N';
ie_criterio_pgto_w		varchar(1);
vl_participante_w		double precision;
vl_pag_medico_conta_w		double precision;
nr_aux_w			integer	:= 0;
vl_total_partic_w		double precision	:= 0;
ie_tipo_partic_prof_w		varchar(10);

vl_procedimento_partic_w	double precision;
vl_custo_operacional_partic_w	double precision;
vl_anestesista_partic_w		double precision;
vl_medico_partic_w		double precision;
vl_filme_partic_w		double precision;
vl_auxiliares_partic_w		double precision;
nr_seq_regra_partic_w		bigint;
cd_edicao_amb_w			integer;
ie_preco_informado_w		varchar(1);
cd_porte_anestesico_w		varchar(10);
ds_retorno_w			varchar(255);
nr_aux_regra_w			bigint;
nr_seq_regra_autogerado_w	bigint;
nr_seq_prestador_exec_w		pls_conta.nr_seq_prestador_exec%type;

nr_seq_classificacao_prest_w	bigint;
nr_seq_regra_hono_partic_w	bigint;
ie_calcula_valor_w		varchar(10);
ie_repassa_medico_partic_w	varchar(10) := 'N';
nr_seq_prest_pgto_medico_w	bigint;
nr_seq_regra_pgto_w		bigint;
ie_anestesista_conta_w		varchar(1);
ie_medico_conta_w		varchar(1);
ie_auxiliar_conta_w		varchar(1);
cd_medico_executor_imp_w	varchar(255)	:= null;
vl_calc_participante_w		double precision;
nr_seq_prestador_pgto_w		bigint;
nr_seq_regra_w			bigint;
ie_origem_conta_w		varchar(1);
vl_calculado_w			double precision;
vl_apresentado_w		double precision;
nr_seq_conta_w			bigint;
nr_seq_prestador_prot_w		bigint;
ie_forma_calculo_w		varchar(1)	:= 'C';
ie_preco_prestador_partic_w	varchar(1);
nr_seq_cbo_saude_w		bigint;
vl_anestesista_w		double precision;
vl_medico_w			double precision;
vl_auxiliares_w			double precision;
cd_cgc_w			varchar(14);
vl_calculado_ant_w		double precision;
ie_define_pagamento_w		varchar(1);
ie_cobrar_material_w		varchar(1);
ie_cobrar_co_w			varchar(1);
ie_repassa_medico_w		varchar(1);
ie_ptu_vl_honorario_w		varchar(1);	
ie_ptu_vl_co_w			varchar(1);
ie_ptu_vl_filme_w		varchar(1);
vl_co_ptu_imp_w			double precision;
vl_procedimento_ptu_imp_w	double precision;
vl_medico_ptu_imp_w		double precision;
vl_material_ptu_imp_w		double precision;
qt_partic_cancel_w		bigint;
cd_medico_executor_w		varchar(255);
ie_honorario_pos_w		pls_parametros.ie_honorario_pos%type;
ie_respeita_cad_prest_w		pls_parametros.ie_respeita_cadastro_prof%type;
ie_status_w			pls_conta_proc.ie_status%type;
ie_tipo_vinculo_medico_w	pls_prestador_medico.ie_tipo_vinculo%type;
dt_conta_w			pls_conta.dt_atendimento_referencia%type;
ie_glosa_w			pls_proc_participante.ie_glosa%type;
vl_posicao_auxiliar_w		pls_grau_participacao.vl_posicao_auxiliar%type;
qt_pagamento_fat_w		integer;
ie_val_participante_w		pls_parametros.ie_val_participante%type;

C01 CURSOR FOR
	SELECT	'P' ie_tipo_tabela_partic,
		b.nr_sequencia nr_sequencia,
		b.cd_medico,
		c.ie_anestesista,
		c.ie_medico,
		c.ie_auxiliar ie_auxiliar,
		c.nr_sequencia,
		b.nr_seq_prestador,
		b.vl_calculado,
		a.vl_procedimento_imp,
		b.nr_seq_cbo_saude,
		b.vl_calculado,
		a.vl_material_ptu_imp,
		a.vl_co_ptu_imp,
		a.vl_procedimento_ptu_imp,
		a.ie_status
	FROM pls_conta_proc a, pls_proc_participante b
LEFT OUTER JOIN pls_grau_participacao c ON (b.nr_seq_grau_partic = c.nr_sequencia)
WHERE a.nr_sequencia		= b.nr_seq_conta_proc  and a.nr_sequencia		= nr_seq_conta_proc_p and ((coalesce(b.ie_status::text, '') = '') or (b.ie_status != 'C')) and ((coalesce(b.ie_gerada_cta_honorario::text, '') = '') or (b.ie_gerada_cta_honorario <> 'S'))
	
union

	SELECT	'P' ie_tipo_tabela_partic,
		b.nr_sequencia nr_sequencia,
		coalesce(d.cd_medico, b.cd_medico) cd_medico,
		coalesce(e.ie_anestesista, c.ie_anestesista) ie_anestesista,
		coalesce(e.ie_medico, c.ie_medico) ie_medico,
		coalesce(e.ie_auxiliar, c.ie_auxiliar) ie_auxiliar,
		coalesce(e.nr_sequencia, c.nr_sequencia) nr_sequencia,
		b.nr_seq_prestador,
		b.vl_calculado,
		a.vl_procedimento_imp,
		coalesce(d.nr_seq_cbo_saude, b.nr_seq_cbo_saude) nr_seq_cbo_saude,
		b.vl_calculado,
		a.vl_material_ptu_imp,
		a.vl_co_ptu_imp,
		a.vl_procedimento_ptu_imp,
		a.ie_status
	FROM pls_conta_proc a, pls_proc_participante b
LEFT OUTER JOIN pls_grau_participacao c ON (b.nr_seq_grau_partic = c.nr_sequencia)
, pls_conta_pos_estab_partic d
LEFT OUTER JOIN pls_grau_participacao e ON (d.nr_seq_grau_partic = e.nr_sequencia)
WHERE a.nr_sequencia			= b.nr_seq_conta_proc  and d.nr_seq_proc_partic		= b.nr_sequencia  and a.nr_sequencia			= nr_seq_conta_proc_p and ((coalesce(b.ie_gerada_cta_honorario::text, '') = '') or (b.ie_gerada_cta_honorario <> 'S')) -- somente quando for pós-estabelecido
  and ie_origem_calc_p		= 'P' -- será considerado apenas os cancelados que estão vinculados diretamente em um participante do pós, inserido manualmente
  and b.ie_status			= 'C' and b.ie_incluido_pos_estab		= 'S'
	 
union

	select	'C' ie_tipo_tabela_partic,
		0,
		b.cd_medico_executor,
		coalesce(e.ie_anestesista, c.ie_anestesista) ie_anestesista,
		coalesce(e.ie_medico, c.ie_medico) ie_medico,
		coalesce(e.ie_auxiliar, c.ie_auxiliar) ie_auxiliar,
		coalesce(e.nr_sequencia, c.nr_sequencia) nr_sequencia,
		null,
		a.vl_procedimento,
		a.vl_procedimento_imp,
		null,
		a.vl_procedimento,
		a.vl_material_ptu_imp,
		a.vl_co_ptu_imp,
		a.vl_procedimento_ptu_imp,
		a.ie_status
	FROM pls_conta_proc a, pls_conta b
LEFT OUTER JOIN pls_grau_participacao c ON (b.nr_seq_grau_partic = c.nr_sequencia)
LEFT OUTER JOIN pls_conta_pos_cabecalho d ON (b.nr_sequencia = d.nr_seq_conta)
LEFT OUTER JOIN pls_grau_participacao e ON (d.nr_seq_grau_partic = e.nr_sequencia)
WHERE a.nr_seq_conta		= b.nr_sequencia    and a.nr_sequencia		= nr_seq_conta_proc_p and not exists (select 1 from pls_proc_participante x where x.nr_seq_conta_proc = nr_seq_conta_proc_p) order by 4, 3, 5, 1;								


BEGIN

/* Obter médico complementar da conta para comparar com participante */

select	coalesce(cd_medico_executor_imp,cd_medico_executor),
	ie_origem_conta,
	nr_seq_conta,
	nr_seq_prestador_prot,
	cd_medico_executor,
	cd_cgc_prest_exec
into STRICT	cd_medico_executor_imp_w,
	ie_origem_conta_w,
	nr_seq_conta_w,
	nr_seq_prestador_prot_w,
	cd_medico_executor_w,
	cd_cgc_w
from	pls_conta_proc_v
where	nr_sequencia	= nr_seq_conta_proc_p;

select	dt_atendimento_referencia,
	nr_seq_prestador_exec
into STRICT	dt_conta_w,
	nr_seq_prestador_exec_w
from	pls_conta
where	nr_sequencia = nr_seq_conta_w;

select	ie_preco_prestador_partic,
	ie_honorario_pos,
	ie_respeita_cadastro_prof,
	ie_val_participante
into STRICT	ie_preco_prestador_partic_w,
	ie_honorario_pos_w,
	ie_respeita_cad_prest_w,
	ie_val_participante_w
from	table(pls_parametros_pck.f_retorna_param(cd_estabelecimento_p));

if (coalesce(ie_preco_prestador_partic_w,'N') = 'S') then
	ie_forma_calculo_w := 'P';
else
	ie_forma_calculo_w	:= 'C';
	vl_anestesista_w	:= vl_anestesista_p;
	vl_medico_w		:= vl_medico_p;
	vl_auxiliares_w		:= vl_auxiliares_p;
end if;

open C01;
loop
fetch C01 into
	ie_tipo_tabela_partic_w,
	nr_seq_participante_w,
	cd_medico_w,
	ie_anestesista_w,
	ie_medico_w,
	ie_auxiliar_w,
	nr_seq_grau_partic_ww,
	nr_seq_prestador_partic_w,
	vl_calculado_w,
	vl_apresentado_w,
	nr_seq_cbo_saude_w,
	vl_calculado_ant_w,
	vl_material_ptu_imp_w,
	vl_co_ptu_imp_w,
	vl_procedimento_ptu_imp_w,
	ie_status_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	ie_repassa_medico_partic_w := 'N';
	if (vl_procedimento_ptu_imp_w > 0) and (vl_procedimento_ptu_imp_w IS NOT NULL AND vl_procedimento_ptu_imp_w::text <> '') then
		vl_medico_ptu_imp_w := vl_procedimento_ptu_imp_w - coalesce(vl_co_ptu_imp_w,0) - coalesce(vl_material_ptu_imp_w,0);
	end if;
	vl_posicao_auxiliar_w	:= null;
	nr_seq_prest_pgto_medico_w := null;
	vl_auxiliares_partic_w := 0;
	vl_medico_partic_w := 0;
	vl_anestesista_partic_w := 0;
	/* Se não tem o grau de participanção informado, o sistema deve tratar como sendo médico */

	if (coalesce(nr_seq_grau_partic_ww,0) = 0) then
		ie_anestesista_w	:= 'N';
		ie_medico_w		:= 'S';
		ie_auxiliar_w		:= 'N';
	end if;
	/* O médico tem que estar credenciado ou vinculado com o prestador */

	ie_vinculado_w	:= pls_obter_vinc_medico_prest(cd_medico_w, nr_seq_prestador_p, dt_procedimento_p);
	
	if (ie_vinculado_w in ('C','V')) or (nr_seq_prestador_partic_w IS NOT NULL AND nr_seq_prestador_partic_w::text <> '')then
		SELECT * FROM pls_obter_regra_honorario(ie_tipo_guia_p, 'N', cd_medico_w, nr_seq_tipo_atendimento_p, cd_procedimento_p, ie_origem_proced_p, nm_usuario_p, cd_estabelecimento_p, nr_seq_prestador_p, null, 'PO', ie_tipo_conta_p, nr_seq_grau_partic_ww, dt_procedimento_p, vl_medico_ptu_imp_w, vl_co_ptu_imp_w, vl_material_ptu_imp_w, nr_seq_regra_hono_partic_w, ie_calcula_valor_w, ie_repassa_medico_partic_w, ie_ptu_vl_honorario_w, ie_ptu_vl_co_w, ie_ptu_vl_filme_w, nr_seq_conta_proc_p) INTO STRICT nr_seq_regra_hono_partic_w, ie_calcula_valor_w, ie_repassa_medico_partic_w, ie_ptu_vl_honorario_w, ie_ptu_vl_co_w, ie_ptu_vl_filme_w;

		select	coalesce(max(ie_criterio_pgto),'N')
		into STRICT	ie_criterio_pgto_w
		from	pls_regra_honorario
		where	nr_sequencia	= nr_seq_regra_hono_partic_w;

		vl_participante_w	:= 0;
		
		if (ie_repassa_medico_partic_w in ('S','H')) then
			vl_participante_w	:= 0;
			if (ie_origem_proced_p = 4) or
				(ie_auxiliar_w = 'S' AND ie_anestesista_w = 'N') then
				nr_aux_w	:= nr_aux_w + 1;
			end if;
		end if;
	end if;
	
	if (ie_origem_proced_p = 4) or (ie_anestesista_w = 'S') or (ie_medico_w = 'S') or (ie_auxiliar_w = 'S') or (ie_tipo_protocolo_p = 'R') or (nr_aux_w <= nr_auxiliares_p) then

		vl_auxiliares_w := vl_auxiliares_p;
		vl_medico_w	:= vl_medico_p;
		vl_anestesista_w:= vl_anestesista_p;
		
		if (ie_auxiliar_w	= 'S') then
			select 	max(VL_POSICAO_AUXILIAR)
			into STRICT	vl_posicao_auxiliar_w
			from	pls_grau_participacao
			where	nr_sequencia = nr_seq_grau_partic_ww;
		end if;
		
		if (coalesce(vl_posicao_auxiliar_w::text, '') = '') or (vl_posicao_auxiliar_w <= nr_auxiliares_p) then
			vl_participante_w := pls_define_valor_partic(nr_seq_conta_proc_p, nr_seq_participante_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, nm_usuario_p, ie_tipo_tabela_partic_w, nr_seq_plano_p, vl_participante_w);
		else
			vl_participante_w	:= 0;
		end if;
		
	else
		vl_participante_w	:= 0;
	end if;
	
	if (ie_criterio_pgto_w	= 'S') and (ie_vinculado_w = 'C') then
		/* Felipe - 09/12/2011 - OS 370695 - Solicitado pelo cliente para essa regra verificar em relação ao prestador executor da conta e não do protocolo */


		/*Diogo - 09/01/2011 - OS 370695 - Solicitado pelo cliente para caso o prestador da conta for PF usar como referência o Prestador do protocolo */

	
		if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
			
			SELECT * FROM pls_obter_prest_pgto_prof(nr_seq_prestador_p, cd_medico_w, cd_procedimento_p, ie_origem_proced_p, nm_usuario_p, null, dt_procedimento_p, nr_seq_prest_pgto_medico_w, nr_seq_regra_pgto_w) INTO STRICT nr_seq_prest_pgto_medico_w, nr_seq_regra_pgto_w;

		else		
			SELECT * FROM pls_obter_prest_pgto_prof(nr_seq_prestador_prot_w, cd_medico_w, cd_procedimento_p, ie_origem_proced_p, nm_usuario_p, null, dt_procedimento_p, nr_seq_prest_pgto_medico_w, nr_seq_regra_pgto_w) INTO STRICT nr_seq_prest_pgto_medico_w, nr_seq_regra_pgto_w;
	
		end if;
	
	end if;

	if (nr_seq_regra_pgto_w IS NOT NULL AND nr_seq_regra_pgto_w::text <> '') then
		begin
			select	coalesce(ie_repassa_medico,'S')
			into STRICT	ie_repassa_medico_w
			from	pls_prestador_prof_pgto
			where	nr_sequencia = nr_seq_regra_pgto_w;
		exception
		when others then
			ie_repassa_medico_w := null;
		end;
		
	end if;
	
	if (ie_repassa_medico_w in ('S','H')) then
		nr_seq_prest_pgto_medico_w := nr_seq_prest_pgto_medico_w;
	else
		nr_seq_prest_pgto_medico_w := nr_seq_prestador_partic_w;
	end if;
	
	if	((coalesce(nr_seq_prest_pgto_medico_w,0) = 0 ) and (ie_vinculado_w = 'C') and (coalesce(nr_seq_prestador_partic_w::text, '') = '')and
		(nr_seq_regra_hono_partic_w IS NOT NULL AND nr_seq_regra_hono_partic_w::text <> '')) then	
		nr_seq_prest_pgto_medico_w :=  pls_obter_seq_prestador_pf(cd_medico_w, cd_estabelecimento_p, nr_seq_prestador_p);
	end if;
	
	if	((coalesce(nr_seq_prest_pgto_medico_w,0) = 0 ) and (coalesce(nr_seq_prestador_partic_w::text, '') = '') and
		((nr_seq_prestador_pgto_p IS NOT NULL AND nr_seq_prestador_pgto_p::text <> '') and (ie_repassa_medico_pgto_p in ('S','H')))) then
		begin
			nr_seq_prest_pgto_medico_w := nr_seq_prestador_pgto_p;
		end;
	end if;
	
	nr_seq_prestador_pgto_w := nr_seq_prestador_partic_w;
	SELECT * FROM pls_obter_prestador_pgto(	nr_seq_prestador_prot_w, nr_seq_prestador_p, nr_seq_prestador_pgto_w, vl_apresentado_w, vl_calculado_w, cd_procedimento_p, ie_origem_proced_p, null, null, nm_usuario_p, ie_origem_conta_w, ie_tipo_guia_p, 'S', dt_conta_w, 'CM', nr_seq_prestador_pgto_w, nr_seq_regra_w, ie_define_pagamento_w, ie_cobrar_material_w, ie_cobrar_co_w) INTO STRICT nr_seq_prestador_pgto_w, nr_seq_regra_w, ie_define_pagamento_w, ie_cobrar_material_w, ie_cobrar_co_w;
					
	if (coalesce(nr_seq_regra_w,0) > 0)then
		nr_seq_prest_pgto_medico_w := nr_seq_prestador_pgto_w;
	end if;
	if (coalesce(nr_seq_prest_pgto_medico_w,0) = 0) then
		nr_seq_prest_pgto_medico_w	:= nr_seq_prestador_p;
	end if;
	vl_participante_w	:= round((vl_participante_w)::numeric,4);
	
	--OS 1031406 - Início
	if (coalesce(ie_respeita_cad_prest_w,'N') = 'S') then
		select 	coalesce(max(ie_tipo_vinculo),'X')
		into STRICT	ie_tipo_vinculo_medico_w
		from	pls_prestador_medico
		where	nr_seq_prestador = nr_seq_prestador_p
		and	cd_medico = cd_medico_w;
		
		if ie_tipo_vinculo_medico_w = 'C' then
			nr_seq_prest_pgto_medico_w := coalesce(pls_obter_seq_prestador_pf(cd_medico_w, cd_estabelecimento_p, nr_seq_prestador_p),coalesce(nr_seq_prestador_partic_w, nr_seq_prestador_exec_w));
		elsif ie_tipo_vinculo_medico_w = 'V' then
			nr_seq_prest_pgto_medico_w := coalesce(nr_seq_prestador_exec_w,nr_seq_prestador_prot_w);
		end if;		
	end if;
	--OS 1031406 - Fim
	
	if (ie_status_p <> 'M') or (coalesce(ie_origem_calc_p,'C') != 'C')then
		if (nr_seq_participante_w > 0) then
			/* Francisco - 10/05/2012 - Se o participante for o próprio médico executor da conta (complementar no XML), não deve liberar valor para o participante
			para evitar duplicidade OS 393204 
*/
		
			if	not(ie_repassa_medico_partic_w in ('S','H')) and
				not(ie_repassa_medico_p in ('S','H')) and
				((coalesce(ie_origem_calc_p,'C') = 'C') or (ie_honorario_pos_w = 'S'))then
				vl_participante_w	:= 0;
			end if;
			
			if (coalesce(ie_origem_calc_p,'C') = 'C') then
				
				update	pls_proc_participante
				set	/* Tive que comentar essa linha, poi senão não consegue liberar item pela análise
					Quando recalcula, estava zerando tudo
					vl_participante		= 0,*/
					vl_calculado		= vl_participante_w,
					nr_seq_honorario_crit	= nr_seq_regra_hono_partic_w,
					nr_seq_prestador_pgto	= nr_seq_prest_pgto_medico_w,
					nr_seq_regra		= nr_seq_regra_partic_w,
					ie_status		= CASE WHEN coalesce(ie_status,'U')='U' THEN 'P'  ELSE ie_status END ,
					vl_calculado_ant	= vl_calculado_ant_w
				where	nr_seq_conta_proc	= nr_seq_conta_proc_p
				and	nr_sequencia		= nr_seq_participante_w;
			else --incluída a linha abaixo para que seja gravado corretamente o valor de pós-estabelecido gerado para o participante
				
				select	ie_glosa
				into STRICT	ie_glosa_w
				from	pls_proc_participante
				where	nr_sequencia = nr_seq_participante_w;
				
				if (ie_glosa_w = 'S') and (ie_acao_p <> 'RC') and (ie_val_participante_w = 'S') then
				
					select	count(1)
					into STRICT	qt_pagamento_fat_w
					from	pls_ocorrencia_benef	b,
						pls_ocorrencia		a
					where	b.nr_seq_proc_partic	= nr_seq_participante_w
					and	b.ie_situacao		= 'A'
					and	a.nr_sequencia		= b.nr_seq_ocorrencia
					and 	a.ie_glosar_faturamento	= 'S'
					and	a.ie_auditoria_conta	= 'S';
					
					if (qt_pagamento_fat_w = 0) then
						
						select	count(1)
						into STRICT	qt_pagamento_fat_w
						from	pls_ocorrencia_benef	b,
							pls_ocorrencia		a
						where	b.nr_seq_conta_proc	= nr_seq_conta_proc_p
						and	coalesce(b.nr_seq_proc_partic::text, '') = ''
						and	b.ie_situacao		= 'A'
						and	a.nr_sequencia		= b.nr_seq_ocorrencia
						and 	a.ie_glosar_faturamento	= 'S'
						and	a.ie_auditoria_conta	= 'S';
						
						if (qt_pagamento_fat_w = 0) then
							select	count(1)
							into STRICT	qt_pagamento_fat_w
							from	pls_conta_glosa		c
							where	c.nr_seq_proc_partic	= nr_seq_participante_w
							and	c.ie_situacao		= 'A'
							and	not exists (SELECT	1
										from	pls_ocorrencia_benef	b,
											pls_ocorrencia		a
										where	b.nr_sequencia		= c.nr_seq_ocorrencia_benef
										and	b.ie_situacao		= 'A'
										and	a.nr_sequencia		= b.nr_seq_ocorrencia
										and 	coalesce(a.ie_glosar_faturamento,'N')	= 'N');
										
							if (qt_pagamento_fat_w = 0) then
								select	count(1)
								into STRICT	qt_pagamento_fat_w
								from	pls_conta_glosa		c
								where	c.nr_seq_conta_proc	= nr_seq_conta_proc_p
								and	coalesce(c.nr_seq_proc_partic::text, '') = ''
								and	c.ie_situacao		= 'A'
								and	not exists (SELECT	1
											from	pls_ocorrencia_benef	b,
												pls_ocorrencia		a
											where	b.nr_sequencia		= c.nr_seq_ocorrencia_benef
											and	b.ie_situacao		= 'A'
											and	a.nr_sequencia		= b.nr_seq_ocorrencia
											and 	coalesce(a.ie_glosar_faturamento,'N')	= 'N');
							end if;
						end if;
					end if;
					
					if (qt_pagamento_fat_w > 0) then
						vl_participante_w := 0;
					end if;
				end if;
				
				update	pls_proc_participante
				set	vl_pos_estab		= vl_participante_w
				where	nr_seq_conta_proc	= nr_seq_conta_proc_p
				and	nr_sequencia		= nr_seq_participante_w;
			end if;
			
			vl_total_partic_w	:= vl_total_partic_w + vl_participante_w;
		else
			/* Se a regra de honorário do médico não repassa valor, ou a regra de honorário do prestador repassa honorário médico,
			então não deve pagar o médico da conta, se não os valores ficam duplicados*/
			
			if (coalesce(ie_repassa_medico_partic_w,'N') = 'N') and
				(ie_repassa_medico_p = ('N'))and
				((coalesce(ie_origem_calc_p,'C') = 'C') or (ie_honorario_pos_w = 'S')) then
				vl_participante_w	:= 0;
				nr_seq_prest_pgto_medico_w	:= null;
			end if;
			vl_pag_medico_conta_w := vl_participante_w;
			vl_total_partic_w	:= vl_total_partic_w + vl_participante_w;
			if (coalesce(ie_origem_calc_p,'C') = 'C') then
				if (ie_status_w	!= 'L') then
					update	pls_conta_proc
					set	vl_pag_medico_conta		= vl_participante_w,
						vl_medico_original		= vl_participante_w,
						nr_seq_hon_crit_medico		= nr_seq_regra_hono_partic_w,
						nr_seq_prest_pgto_medico	= nr_seq_prest_pgto_medico_w
					where	nr_sequencia			= nr_seq_conta_proc_p;
				else
					update	pls_conta_proc
					set	vl_medico_original		= vl_participante_w,
						nr_seq_hon_crit_medico		= nr_seq_regra_hono_partic_w,
						nr_seq_prest_pgto_medico	= nr_seq_prest_pgto_medico_w
					where	nr_sequencia			= nr_seq_conta_proc_p;
				end if;
			end if;
		end if;
	end if;
	vl_participante_w	:= 0;
	end;
end loop;
close C01;

select	count(1)
into STRICT	qt_partic_cancel_w
from	pls_proc_participante
where	nr_seq_conta_proc 	= nr_seq_conta_proc_p
and	ie_gerada_cta_honorario	= 'S';

/* Se não for guia de HI e não tem participante lançado então o valor de participante écomposta das somas do anestesista, auxiliares e médico (Depe
ndenddo do que esta cadastradao no s Cadastros GErais - Graiu de PArticipação profissional. )*/
if (ie_tipo_guia_p <> '6') and (coalesce(nr_seq_participante_w,0) = 0) and (ie_repassa_medico_p in ('S','H')) and (coalesce(vl_total_partic_w,0) = 0 ) and (qt_partic_cancel_w = 0) then
	
	begin
	select	coalesce(ie_anestesista,'N'),
		coalesce(ie_medico,'N'),
		coalesce(ie_auxiliar,'N')
	into STRICT	ie_anestesista_conta_w,
		ie_medico_conta_w,
		ie_auxiliar_conta_w
	from	pls_grau_participacao
	where	nr_sequencia = nr_seq_grau_partic_p;
	exception
	when others then
		ie_anestesista_conta_w	:= 'N';
		ie_medico_conta_w	:= 'N';
		ie_auxiliar_conta_w 	:= 'N';
	end;

	/* Se não existir o grau de participação informado na conta, então é tratado como Médico */

	if (nr_seq_grau_partic_p	= 0) then
		ie_medico_conta_w	:= 'S';
	end if;

	if (ie_anestesista_conta_w = 'S') or (ie_medico_conta_w = 'S') or (ie_auxiliar_conta_w = 'S') then
		vl_total_partic_w := 0;
	end if;
	
	if (ie_anestesista_conta_w = 'S') then
		vl_total_partic_w 	:= vl_total_partic_w + vl_anestesista_p;
		ie_tipo_partic_prof_w	:= ie_tipo_partic_prof_w || 'A';
	end if;
	if (ie_medico_conta_w = 'S') then
		vl_total_partic_w 	:= vl_total_partic_w + vl_medico_p;
		ie_tipo_partic_prof_w	:= ie_tipo_partic_prof_w || 'M';
	end if;
	if (ie_auxiliar_conta_w = 'S') then
		vl_total_partic_w 	:= vl_total_partic_w + vl_auxiliares_p;
		ie_tipo_partic_prof_w	:= ie_tipo_partic_prof_w || 'X';
	end if;
end if;

vl_total_partic_p		:= vl_total_partic_w;
ie_tipo_partic_prof_p	:= ie_tipo_partic_prof_w;

/* Não pode ter commit */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_honorario_proc ( nr_seq_conta_proc_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_grau_partic_p bigint, ie_tipo_guia_p text, nr_seq_tipo_atendimento_p bigint, ie_tipo_conta_p text, nr_seq_prestador_p bigint, ie_tipo_protocolo_p text, nr_auxiliares_p bigint, ie_status_p text, ie_repassa_medico_p text, vl_anestesista_p bigint, vl_medico_p bigint, vl_auxiliares_p bigint, cd_estabelecimento_p bigint, dt_procedimento_p timestamp, nm_usuario_p text, nr_seq_categoria_p bigint, dt_preco_p timestamp, nr_seq_tipo_acomodacao_p bigint, nr_seq_clinica_p bigint, nr_seq_plano_p bigint, ie_tipo_tabela_p text, nr_seq_contrato_p bigint, cd_convenio_p bigint, cd_categoria_p text, ie_tipo_contratacao_p text, qt_dias_internacao_p bigint, nr_seq_segurado_p bigint, nr_seq_intercambio_p bigint, ie_conta_interacao_p text, ie_tecnica_utilizada_p text, ie_tipo_intercambio_p text, sg_estado_int_p text, ie_carater_internacao_p text, ie_origem_calc_p text, vl_total_partic_p INOUT bigint, ie_tipo_partic_prof_p INOUT text, nr_seq_prestador_pgto_p bigint, ie_repassa_medico_pgto_p text, ie_acao_p text default 'A') FROM PUBLIC;

