-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE converte_proc_convenio (cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_especialidade_med_p bigint, cd_medico_p text, ie_tipo_atendimento_p bigint, dt_execucao_p timestamp, cd_proc_convenio_p INOUT text, cd_grupo_p INOUT text, nr_sequencia_p INOUT bigint, cd_setor_atendimento_p bigint, cd_tipo_acomodacao_p bigint, nr_seq_proc_interno_p bigint, ie_pacote_p text, cd_plano_p text, ie_clinica_p bigint, vl_procedimento_p bigint, ie_funcao_medico_p text, cd_tipo_acomod_conv_p bigint, qt_idade_p bigint, ie_sexo_p text, cd_empresa_ref_p bigint, ie_carater_inter_sus_p text, nr_seq_pacote_p bigint, nr_seq_exame_p bigint, ie_tipo_atend_tiss_p text, cd_dependente_p bigint default null) AS $body$
DECLARE

	
cd_grupo_w			bigint		:= 0;
cd_especialidade_w		bigint		:= 0;
cd_area_w			bigint		:= 0;
cd_proc_convenio_w    		varchar(20)		:= '0';
nr_sequencia_w			bigint		:= 0;
cd_grupo_convenio_w		varchar(10);
cd_grupo_conversao_w		varchar(10);
cd_especial_medica_w		integer;
ie_tipo_atendimento_w		integer;
cd_setor_atendimento_w		integer;
ie_classificacao_w			varchar(05);
nr_seq_proc_interno_w		bigint;
cd_estabelecimento_w		bigint;
dia_semana_w			smallint		:= 0;
dia_feriado_w			smallint		:= 0;
ie_feriado_w			varchar(1)		:= 'N';
cd_categoria_w			varchar(10);
ie_clinica_w			integer;
qt_existe_w			bigint;
ie_credenciado_w		varchar(1);

C01 CURSOR FOR
SELECT 	cd_proc_convenio,
	nr_sequencia,
	cd_grupo
from	conversao_proc_convenio
where	cd_convenio							= cd_convenio_p
and	coalesce(cd_Categoria,cd_categoria_w)					= cd_categoria_w
and	coalesce(cd_procedimento, cd_procedimento_p) 				= cd_procedimento_p
and	((coalesce(cd_procedimento::text, '') = '') or coalesce(ie_origem_proced, ie_origem_proced_p)	= ie_origem_proced_p)
and (coalesce(ie_funcao_medico, coalesce(ie_funcao_medico_p,0))			= coalesce(ie_funcao_medico_p,0))
and 	coalesce(cd_area_proced, cd_area_w)					= cd_area_w
and 	coalesce(cd_grupo_proced, cd_grupo_w)					= cd_Grupo_w
and 	coalesce(cd_especial_proced,cd_especialidade_w)				= cd_Especialidade_w
and 	coalesce(nr_seq_proc_interno,nr_seq_proc_interno_w)			= nr_seq_proc_interno_w
and	coalesce(nr_seq_exame, coalesce(nr_seq_exame_p,0)) = coalesce(nr_seq_exame_p,0)
and	upper(ie_situacao)							= 'A'
and (coalesce(cd_especialidade_medica, coalesce(cd_especial_medica_w,0))		= coalesce(cd_especial_medica_w,0))
and (coalesce(ie_tipo_atendimento, ie_tipo_atendimento_w)			= ie_tipo_atendimento_w)
and	coalesce(ie_clinica,ie_clinica_w)						= ie_clinica_w
and (coalesce(cd_setor_atendimento, cd_setor_atendimento_w)			= cd_setor_atendimento_w)
and (coalesce(ie_classif_acomod, coalesce(ie_classificacao_w, 0))			= coalesce(ie_classificacao_w, 0))
and 	coalesce(cd_plano, coalesce(cd_plano_p, 0))					= coalesce(cd_plano_p,0)
and	coalesce(cd_estabelecimento, cd_estabelecimento_w)				= cd_estabelecimento_w
and	((coalesce(upper(ie_pacote),'A') = 'A') or (upper(ie_pacote)			= ie_pacote_p))
and	((coalesce(ie_feriado,'A')				= ie_feriado_w ) or (coalesce(ie_feriado,'A')	='A'))
and (coalesce(cd_tipo_acomodacao, coalesce(cd_tipo_acomodacao_p,0))				= coalesce(cd_tipo_acomodacao_p,0))
and (coalesce(cd_tipo_acomod_conv, coalesce(cd_tipo_acomod_conv_p,0))				= coalesce(cd_tipo_acomod_conv_p,0))
and	((coalesce(dt_execucao_p::text, '') = '')
	 or (dt_execucao_p between coalesce(dt_inicio_vigencia, dt_execucao_p)
	 and coalesce(dt_vigencia_final, dt_execucao_p) + 86399/86400))
and	((coalesce(dt_dia_semana, dia_semana_w) = dia_semana_w)
	 or ((dt_dia_semana = 9) and (dia_semana_w not in (1,7))))
and 	(((coalesce(hr_final::text, '') = '') or (coalesce(hr_inicial::text, '') = '')) or (coalesce(dt_execucao_p,clock_timestamp()) between 
				to_date(to_char(coalesce(dt_execucao_p,clock_timestamp()),'dd/mm/yyyy') || ' ' ||
					coalesce(to_char(hr_inicial,'hh24:mi:ss'), '00:00:01'), 
					'dd/mm/yyyy hh24:mi:ss')
						and
				to_date(to_char(coalesce(dt_execucao_p,clock_timestamp()),'dd/mm/yyyy') || ' ' ||
					coalesce(to_char(hr_final,'hh24:mi:ss'), '23:59:59'), 
					'dd/mm/yyyy hh24:mi:ss')))
and	vl_procedimento_p	 between coalesce(vl_proc_inicial,vl_procedimento_p) and coalesce(vl_proc_final,vl_procedimento_p)
and	coalesce(qt_idade_p,0)  between coalesce(obter_idade_conversao_proc(nr_sequencia, qt_ano_min, qt_ano_min_mes, qt_ano_min_dia, qt_ano_max, qt_ano_max_mes, qt_ano_max_dia, 'MIN'),0) and 
		coalesce(obter_idade_conversao_proc(nr_sequencia, qt_ano_min, qt_ano_min_mes, qt_ano_min_dia, qt_ano_max, qt_ano_max_mes, qt_ano_max_dia, 'MAX'),9999999999)
and	coalesce(ie_sexo, coalesce(ie_sexo_p,'A')) = coalesce(ie_sexo_p,'A')
and	coalesce(cd_empresa_ref, coalesce(cd_empresa_ref_p,0)) = coalesce(cd_empresa_ref_p,0)
and	coalesce(ie_carater_inter_sus, coalesce(ie_carater_inter_sus_p,'0')) = coalesce(ie_carater_inter_sus_p,'0')
and	coalesce(nr_seq_pacote, coalesce(nr_seq_pacote_p,0)) = coalesce(nr_seq_pacote_p,0)
and	((coalesce(ie_credenciado,'T') = 'T') or (coalesce(ie_credenciado,'T') = ie_credenciado_w))
and	coalesce(ie_tipo_atend_tiss, coalesce(ie_tipo_atend_tiss_p, '0')) = coalesce(ie_tipo_atend_tiss_p, '0')
and	coalesce(cd_dependente, coalesce(cd_dependente_p, 0)) = coalesce(cd_dependente_p, 0)
order by coalesce(nr_seq_pacote,0),
	coalesce(nr_seq_proc_interno,0), 
	coalesce(nr_seq_exame, 0),
	coalesce(cd_procedimento,0),
	coalesce(cd_grupo_proced,0),
	coalesce(cd_especial_Proced,0),
	coalesce(cd_area_proced,0),
	coalesce(cd_estabelecimento,0),
	coalesce(ie_clinica,0),
	coalesce(cd_plano,'0'),
	coalesce(cd_especialidade_medica,0),
	coalesce(dt_dia_semana,0),
	coalesce(ie_sexo,'A'),
	coalesce(ie_tipo_atendimento,0),
	coalesce(cd_setor_atendimento,0),
	coalesce(cd_tipo_acomodacao,0),
	coalesce(cd_tipo_acomod_conv,0),
	coalesce(ie_classif_acomod,0),
	coalesce(cd_empresa_ref,0),
	coalesce(ie_funcao_medico,'0'),
	coalesce(ie_carater_inter_sus,'0'),
	coalesce(ie_credenciado,'A'),
	coalesce(ie_tipo_atend_tiss, '0'),
	coalesce(cd_dependente, 0);
	

C02 CURSOR FOR
	SELECT	cd_proc_convenio,
		nr_sequencia
	from	proc_interno_conversao
	where	cd_estabelecimento = cd_estabelecimento_p
	and	nr_seq_proc_interno = nr_seq_proc_interno_p
	and	((coalesce(dt_execucao_p::text, '') = '') or (dt_execucao_p between coalesce(dt_inicio_vigencia, dt_execucao_p) and coalesce(dt_final_vigencia, dt_execucao_p) + 86399/89400))
	order by	dt_inicio_vigencia,
			dt_final_vigencia;
	


BEGIN

cd_especial_medica_w		:= coalesce(cd_especialidade_med_p, 0);
ie_tipo_atendimento_w		:= coalesce(ie_tipo_atendimento_p, 0);
cd_setor_atendimento_w		:= coalesce(cd_setor_atendimento_p, 0);
nr_seq_proc_interno_w		:= coalesce(nr_seq_proc_interno_p, 0);
cd_estabelecimento_w		:= coalesce(cd_estabelecimento_p, 0);
cd_categoria_w			:= coalesce(cd_categoria_p,'0');
ie_clinica_w			:= coalesce(ie_clinica_p,0);


begin
select	max(ie_classificacao)
into STRICT	ie_classificacao_w
from	tipo_acomodacao
where	cd_tipo_acomodacao	= cd_tipo_acomodacao_p;
exception
	when others then
		ie_classificacao_w	:= null;
end;



dia_semana_w := pkg_date_utils.get_WeekDay(dt_execucao_p);


/* Obter Feriado */

select 	count(*)
into STRICT 	dia_feriado_w
from 	feriado
where 	cd_estabelecimento = coalesce(cd_estabelecimento_p, cd_estabelecimento)
and		to_char(dt_feriado,'dd/mm/yyyy')  	= to_char(dt_execucao_p,'dd/mm/yyyy');

if (dia_feriado_w > 0) then
	ie_feriado_w:= 'S';
else
	ie_feriado_w:= 'N';
end if;

/* Obter Estrutura do procedimento */

begin
select 	cd_grupo_proc,
		cd_especialidade,
		cd_area_procedimento
into STRICT		cd_grupo_w,
		cd_especialidade_w,
		cd_area_w
from		Estrutura_Procedimento_V
where		cd_procedimento 	= cd_procedimento_p
and		ie_origem_proced	= ie_origem_proced_p;
exception
     		when others then
		begin
		cd_grupo_w			:= 0;
		cd_especialidade_w	:= 0;
		cd_area_w			:= 0;
		end;
end;

cd_grupo_p					:= null;

select	obter_se_medico_credenciado(cd_estabelecimento_p, cd_medico_p, cd_convenio_p, null, cd_especialidade_med_p, cd_categoria_p, cd_setor_atendimento_p, cd_plano_p,
		coalesce(dt_execucao_p,clock_timestamp()), ie_tipo_atendimento_p, ie_funcao_medico_p, ie_carater_inter_sus_p)
into STRICT	ie_credenciado_w
;

begin

if (coalesce(cd_proc_convenio_w, '0') = '0') then

	OPEN C01;
	LOOP
	FETCH C01 into
		cd_proc_convenio_w,
		nr_sequencia_w,
		cd_grupo_conversao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		if (cd_grupo_conversao_w IS NOT NULL AND cd_grupo_conversao_w::text <> '') then
			cd_grupo_p := cd_grupo_conversao_w;
		end if;
	END LOOP;
	CLOSE C01;
end if;


if (coalesce(nr_seq_proc_interno_p,0) > 0) and (coalesce(cd_proc_convenio_w, '0') = '0') then
	
	open C02;
	loop
	fetch C02 into	
		cd_proc_convenio_w,
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		cd_proc_convenio_w := cd_proc_convenio_w;
		nr_sequencia_w := nr_sequencia_w;
		end;
	end loop;
	close C02;

end if;
	
end;

cd_proc_convenio_p 	:= cd_proc_convenio_w;
nr_sequencia_p		:= nr_sequencia_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE converte_proc_convenio (cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_especialidade_med_p bigint, cd_medico_p text, ie_tipo_atendimento_p bigint, dt_execucao_p timestamp, cd_proc_convenio_p INOUT text, cd_grupo_p INOUT text, nr_sequencia_p INOUT bigint, cd_setor_atendimento_p bigint, cd_tipo_acomodacao_p bigint, nr_seq_proc_interno_p bigint, ie_pacote_p text, cd_plano_p text, ie_clinica_p bigint, vl_procedimento_p bigint, ie_funcao_medico_p text, cd_tipo_acomod_conv_p bigint, qt_idade_p bigint, ie_sexo_p text, cd_empresa_ref_p bigint, ie_carater_inter_sus_p text, nr_seq_pacote_p bigint, nr_seq_exame_p bigint, ie_tipo_atend_tiss_p text, cd_dependente_p bigint default null) FROM PUBLIC;

