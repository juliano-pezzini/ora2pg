-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_servico_nutricao_jejum ( ds_lista_servico_p text, nr_seq_servico_p bigint, nr_atendimento_p bigint, cd_setor_atendimento_p bigint, ie_status_gestao_p text, dt_referencia_p timestamp, dt_inicio_jejum_p timestamp, dt_fim_jejum_p timestamp, nm_usuario_p text, nr_prescricao_p bigint, cd_estabelecimento_p bigint) AS $body$
DECLARE

					
nr_atendimento_w			bigint;	
cd_setor_Atendimento_w			integer;
ds_lista_servico_w			varchar(4000);	
ie_pos_virgula_w			smallint;
tam_lista_w				bigint;		
nr_seq_servico_w			bigint;	
nr_seq_serv_dia_w			bigint;
dt_servico_w				timestamp;
qt_servicos_w				bigint;
ie_jejum_w				varchar(1);
nm_pessoa_fisica_w			varchar(255);
nr_Seq_acompanhante_w			bigint;
qt_dieta_acomp_w			bigint;

i					bigint;

/*Parametros*/

ie_gera_servico_Acompanhante_w		varchar(1);

C01 CURSOR FOR
SELECT	b.nr_atendimento,
	a.cd_setor_atendimento
from    	atendimento_paciente b,
	ocupacao_unidade_v a,
        	setor_atendimento s
where   	a.cd_setor_atendimento = s.cd_setor_atendimento
and	a.nr_atendimento = b.nr_atendimento
and     	(a.nr_atendimento IS NOT NULL AND a.nr_atendimento::text <> '')
and 	((substr(Nut_Obter_Status_Atend(a.nr_atendimento, a.cd_setor_atendimento, dt_referencia_p),1,30) = ie_status_gestao_p) or (ie_status_gestao_p = 'T'))
and	((cd_setor_atendimento_p = 0) or (a.cd_setor_atendimento = cd_setor_atendimento_p))
and	((a.nr_atendimento = nr_atendimento_p) or (nr_atendimento_p = 0));

c02 CURSOR FOR
SELECT	nr_sequencia
from	nut_atend_serv_dia
where	nr_atendimento = nr_atendimento_w
and	cd_setor_atendimento = cd_setor_atendimento_w
and	nr_Seq_servico = nr_seq_servico_w
and	coalesce(dt_liberacao::text, '') = ''
and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_servico) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_p);
					

BEGIN

ie_gera_servico_Acompanhante_w	:= Obter_Valor_Param_Usuario(1003, 50, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p);

open c01;
	loop
	fetch c01 into	nr_atendimento_w,
			cd_setor_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		if (ds_lista_servico_p IS NOT NULL AND ds_lista_servico_p::text <> '') then
			ds_lista_servico_w := ds_lista_servico_p;
		
			while (ds_lista_servico_w IS NOT NULL AND ds_lista_servico_w::text <> '') loop
				begin
				tam_lista_w	:= length(ds_lista_servico_w);
				ie_pos_virgula_w	:= position(',' in ds_lista_servico_w);
		
				if (ie_pos_virgula_w <> 0) then
					nr_seq_servico_w	:= substr(ds_lista_servico_w,1,(ie_pos_virgula_w - 1));
				else
					nr_seq_servico_w	:= ds_lista_servico_w;
				end if;
		
				ds_lista_servico_w	:= substr(ds_lista_servico_w,(ie_pos_virgula_w + 1),tam_lista_w);
		
				select	count(*)	
				into STRICT	qt_servicos_w
				from	nut_atend_serv_dia
				where	nr_atendimento = nr_atendimento_w
				and	cd_setor_atendimento = cd_setor_atendimento_w
				and	nr_Seq_servico = nr_seq_servico_w
				--and	dt_liberacao is null
				and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_servico) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_p);
				if (qt_servicos_w = 0) then
		
					select 	nextval('nut_atend_serv_dia_seq')
					into STRICT	nr_seq_serv_dia_w
					;
			
          if coalesce(ds_lista_servico_p::text, '') = '' then
            select	trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_referencia_p, coalesce(to_char(dt_inicio_jejum_p, 'hh24:mi'), obter_horario_servico(nr_seq_servico_w, cd_setor_atendimento_w))), 'mi')
            into STRICT	dt_servico_w
;
          else
            select	trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_referencia_p, obter_horario_servico(nr_seq_servico_w, cd_setor_atendimento_w)), 'mi')
            into STRICT	dt_servico_w
;
          end if;
					
					
					
					
					if (dt_servico_w >= dt_inicio_jejum_p and
					    dt_servico_w <= dt_fim_jejum_p) then
						insert into nut_atend_serv_dia(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_Seq_servico,
							dt_servico,
							cd_setor_atendimento,
							nr_atendimento,
							ie_status
							)
						values (nr_seq_serv_dia_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_servico_w,
								dt_servico_w,
								cd_setor_atendimento_w,
								nr_atendimento_w,
								'A');
						CALL inserir_serv_prescr_aval(nr_prescricao_p,nr_seq_serv_dia_w,nm_usuario_p);
						
						if (ie_gera_servico_Acompanhante_w = 'S') then
						
							select	coalesce(max(b.qt_dieta_acomp),0),
								max(SUBSTR(OBTER_NOME_PF(c.CD_PESSOA_FISICA),0,255))
							into STRICT	qt_dieta_acomp_w,
								nm_pessoa_fisica_w
							from	atendimento_paciente a,
								atend_categoria_convenio b,
								pessoa_fisica c
							where	a.nr_Atendimento = b.nr_Atendimento
							and	b.nr_seq_interno = (	SELECT 	max(d.nr_seq_interno)
											from	atend_categoria_convenio d
											where	d.nr_atendimento = a.nr_atendimento
											/*and	nvl(d.dt_final_vigencia,dt_servico_w) >= dt_servico_w
											and	dt_servico_w >= nvl(d.dt_inicio_vigencia,dt_servico_w)*/
											)
							and	a.cd_pessoa_Fisica = c.cd_pessoa_fisica
							and	a.nr_atendimento = nr_atendimento_p;
							
							i := 0;
							
							for i in 1..qt_dieta_acomp_w loop
								begin
								
								 := inserir_acompanhante_nutricao(	nr_seq_servico_w, dt_servico_w, nr_atendimento_w, cd_setor_atendimento_w, null, OBTER_DESC_EXPRESSAO(330453) || ' '||nm_pessoa_fisica_w,					-- 330453: 'Acompanhante de'
												nm_usuario_p, nr_Seq_acompanhante_w);
								end;
							end loop;
							
						end if;	
						
					else
						open c02;
						loop
						fetch c02 into nr_seq_Serv_dia_w;
						EXIT WHEN NOT FOUND; /* apply on c02 */
							begin
							CALL inserir_serv_prescr_aval(nr_prescricao_p,nr_seq_serv_dia_w,nm_usuario_p);
							end;				
						end loop;
						close c02;
					end if;
				end if;	

				
				
				end;
				end loop;
		else
			
			select	count(*)	
			into STRICT	qt_servicos_w
			from	nut_atend_serv_dia
			where	nr_atendimento = nr_atendimento_w
			and	cd_setor_atendimento = cd_setor_atendimento_w
			and	nr_Seq_servico = nr_seq_servico_p
			--and	dt_liberacao is null
			and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_servico) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_p);
			
			if (qt_servicos_w = 0) and (nr_seq_servico_p > 0) then
		
				select 	nextval('nut_atend_serv_dia_seq')
				into STRICT	nr_seq_serv_dia_w
				;
			
				if coalesce(ds_lista_servico_p::text, '') = '' then
					select	trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_referencia_p, coalesce(to_char(dt_inicio_jejum_p, 'hh24:mi'), obter_horario_servico(nr_seq_servico_w, cd_setor_atendimento_w))), 'mi')
					into STRICT	dt_servico_w
					;
				else
					select	trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_referencia_p, obter_horario_servico(nr_seq_servico_p, cd_setor_atendimento_w)), 'mi')
					into STRICT	dt_servico_w
					;
				end if;
			
				insert into nut_atend_serv_dia(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_Seq_servico,
					dt_servico,
					cd_setor_atendimento,
					nr_atendimento,
					ie_status
					)
				values (nr_seq_serv_dia_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_servico_p,
					dt_servico_w,
					cd_setor_atendimento_w,
					nr_atendimento_w,
					'A');
				CALL inserir_serv_prescr_aval(nr_prescricao_p,nr_seq_serv_dia_w,nm_usuario_p);
			end if;
		end if;
	
		end;
	end loop;
close c01;


if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_servico_nutricao_jejum ( ds_lista_servico_p text, nr_seq_servico_p bigint, nr_atendimento_p bigint, cd_setor_atendimento_p bigint, ie_status_gestao_p text, dt_referencia_p timestamp, dt_inicio_jejum_p timestamp, dt_fim_jejum_p timestamp, nm_usuario_p text, nr_prescricao_p bigint, cd_estabelecimento_p bigint) FROM PUBLIC;

