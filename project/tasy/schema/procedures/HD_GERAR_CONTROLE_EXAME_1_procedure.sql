-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE colunas AS (nm_coluna_w varchar(100));


CREATE OR REPLACE PROCEDURE hd_gerar_controle_exame_1 (cd_pessoa_fisica_p text, nr_seq_protocolo_p bigint, dt_referencia_p timestamp, dt_inicial_p timestamp, dt_final_p timestamp, ds_itens_p text, ie_atualizar_todos_p text, nr_unidade_p bigint, nm_usuario_p text) AS $body$
DECLARE



/*Ordem:
1 -> Titulo
5 -> Data
*/
/* vetor */

type vetor is table of colunas index by integer;


/* globais */

vetor_w					vetor;
vetor1_w				vetor;

ds_item_w				varchar(2000);
ds_item_ant_w			varchar(2000);
ds_formula_w			varchar(2000);
ds_cores_w				varchar(2000);
ds_itens_w				varchar(2000);
ds_cor_item_w			varchar(20);
ds_cor_w				varchar(20);
ds_cor_fora_padrao_w	varchar(15);

ivet					integer;
ind						integer;

qt_valor_minimo_w		double precision;
qt_valor_maximo_w		double precision;
nr_seq_nova_w			bigint;
nr_seq_exame_w			bigint;
nr_seq_apresent_w		bigint;
nr_sequencia_w			bigint;
qt_casas_decimais_w		bigint;
qt_itens_w				integer;

dt_referencia_w			timestamp;
dt_referencia_ant_w		timestamp;


c01 CURSOR FOR
	SELECT	ds_item
	from (
		SELECT	ds_item,
				1 ie_ordem,
				nr_seq_apresent,
				nr_sequencia
		from	hd_item_controle_exame
		where	1 = 1
		and		Hd_obter_se_item_protocolo(coalesce(nr_seq_protocolo_p, 0), nr_sequencia) = 'S'
		and		obter_se_contido(nr_sequencia, ',17,37,3,31,15,19,39,29,38,68,') = 'S'
		
union

		select	ds_item,
				2,
				nr_seq_apresent,
				nr_sequencia
		from	hd_item_controle_exame
		where	1 = 1
		and		Hd_obter_se_item_protocolo(coalesce(nr_seq_protocolo_p, 0), nr_sequencia) = 'S'
		and		obter_se_contido(nr_sequencia, ds_itens_w) = 'S'
		and		obter_se_contido(nr_sequencia, ',17,37,3,31,15,19,39,29,38,68,') <> 'S'
		order by 2, 3, 4) alias7 LIMIT 49;


/* atualiza os antigos */

c03 CURSOR FOR
	SELECT	distinct
		dt_referencia
	from	HD_EXAME_GRID_CONTROLE
	where	nm_usuario = nm_usuario_p
	and	ie_ordem = 5;

c02 CURSOR FOR
	SELECT	ds_formula,
			nr_seq_exame,
			nr_seq_apresent,
			ds_cor,
			coalesce(qt_casas_decimais,2),
			qt_valor_minimo,
			qt_valor_maximo	,
			ds_cor_fora_padrao
	from (
		SELECT	1 ie_ordem,
			ds_formula,
			nr_seq_exame,
			nr_sequencia,
			nr_seq_apresent,
			ds_cor,
			qt_casas_decimais,
			qt_valor_minimo,
			qt_valor_maximo	,
			ds_cor_fora_padrao
		from	hd_item_controle_exame
		where	Hd_obter_se_item_protocolo(coalesce(nr_seq_protocolo_p, 0), nr_sequencia) = 'S'
		and		obter_se_contido(nr_sequencia, ',17,37,3,31,15,19,39,29,38,68,') = 'S'
		
union

		select	2 ie_ordem,
			ds_formula,
			nr_seq_exame,
			nr_sequencia,
			nr_seq_apresent,
			ds_cor,
			qt_casas_decimais,
			qt_valor_minimo,
			qt_valor_maximo	,
			ds_cor_fora_padrao
		from	hd_item_controle_exame
		where	Hd_obter_se_item_protocolo(coalesce(nr_seq_protocolo_p, 0), nr_sequencia) = 'S'
		and		obter_se_contido(nr_sequencia, ds_itens_w) = 'S'
		and		obter_se_contido(nr_sequencia, ',17,37,3,31,15,19,39,29,38,68,') <> 'S'
		order by ie_ordem, nr_seq_apresent, nr_sequencia) alias8 LIMIT 49;


BEGIN
ds_itens_w	:= ds_itens_p;

select	count(*)
into STRICT	qt_itens_w
from	HD_PAC_RENAL_CRONICO
where	cd_pessoa_fisica	=	cd_pessoa_fisica_p;

if (qt_itens_w = 0) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(264148);
end if;

dt_referencia_w	:= trunc(dt_referencia_p,'month');

delete 	FROM hd_exame_grid_controle
where	ie_ordem = 1
and		nm_usuario = nm_usuario_p;

ivet	:= 0;
begin
open	c01;
loop
fetch c01 into
	ds_item_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	ivet := ivet + 1;
	vetor_w[ivet].nm_coluna_w 	  := ds_item_w;
	end;
end loop;
close c01;
end;

ind := ivet;
while(ind < 50) loop
	begin
	ind := ind + 1;
	vetor_w[ind].nm_coluna_w := null;
	end;
end loop;

select	nextval('hd_exame_grid_controle_seq')
into STRICT	nr_sequencia_w
;

insert into hd_exame_grid_controle(
	nr_sequencia,
	nm_usuario,
	ie_ordem,
	dt_referencia,
	cd_pessoa_fisica,
	ds_resultado1,
	ds_resultado2,
	ds_resultado3,
	ds_resultado4,
	ds_resultado5,
	ds_resultado6,
	ds_resultado7,
	ds_resultado8,
	ds_resultado9,
	ds_resultado10,
	ds_resultado11,
	ds_resultado12,
	ds_resultado13,
	ds_resultado14,
	ds_resultado15,
	ds_resultado16,
	ds_resultado17,
	ds_resultado18,
	ds_resultado19,
	ds_resultado20,
	ds_resultado21,
	ds_resultado22,
	ds_resultado23,
	ds_resultado24,
	ds_resultado25,
	ds_resultado26,
	ds_resultado27,
	ds_resultado28,
	ds_resultado29,
	ds_resultado30,
	ds_resultado31,
	ds_resultado32,
	ds_resultado33,
	ds_resultado34,
	ds_resultado35,
	ds_resultado36,
	ds_resultado37,
	ds_resultado38,
	ds_resultado39,
	ds_resultado40,
	ds_resultado41,
	ds_resultado42,
	ds_resultado43,
	ds_resultado44,
	ds_resultado45,
	ds_resultado46,
	ds_resultado47,
	ds_resultado48,
	ds_resultado49,
	ds_resultado50,
	dt_atualizacao)
Values ( nr_sequencia_w,
	nm_usuario_p,
	1,
	dt_referencia_w,
	cd_pessoa_fisica_p,
	vetor_w[1].nm_coluna_w,
	vetor_w[2].nm_coluna_w,
	vetor_w[3].nm_coluna_w,
	vetor_w[4].nm_coluna_w,
	vetor_w[5].nm_coluna_w,
	vetor_w[6].nm_coluna_w,
	vetor_w[7].nm_coluna_w,
	vetor_w[8].nm_coluna_w,
	vetor_w[9].nm_coluna_w,
	vetor_w[10].nm_coluna_w,
	vetor_w[11].nm_coluna_w,
	vetor_w[12].nm_coluna_w,
	vetor_w[13].nm_coluna_w,
	vetor_w[14].nm_coluna_w,
	vetor_w[15].nm_coluna_w,
	vetor_w[16].nm_coluna_w,
	vetor_w[17].nm_coluna_w,
	vetor_w[18].nm_coluna_w,
	vetor_w[19].nm_coluna_w,
	vetor_w[20].nm_coluna_w,
	vetor_w[21].nm_coluna_w,
	vetor_w[22].nm_coluna_w,
	vetor_w[23].nm_coluna_w,
	vetor_w[24].nm_coluna_w,
	vetor_w[25].nm_coluna_w,
	vetor_w[26].nm_coluna_w,
	vetor_w[27].nm_coluna_w,
	vetor_w[28].nm_coluna_w,
	vetor_w[29].nm_coluna_w,
	vetor_w[30].nm_coluna_w,
	vetor_w[31].nm_coluna_w,
	vetor_w[32].nm_coluna_w,
	vetor_w[33].nm_coluna_w,
	vetor_w[34].nm_coluna_w,
	vetor_w[35].nm_coluna_w,
	vetor_w[36].nm_coluna_w,
	vetor_w[37].nm_coluna_w,
	vetor_w[38].nm_coluna_w,
	vetor_w[39].nm_coluna_w,
	vetor_w[40].nm_coluna_w,
	vetor_w[41].nm_coluna_w,
	vetor_w[42].nm_coluna_w,
	vetor_w[43].nm_coluna_w,
	vetor_w[44].nm_coluna_w,
	vetor_w[45].nm_coluna_w,
	vetor_w[46].nm_coluna_w,
	vetor_w[47].nm_coluna_w,
	vetor_w[48].nm_coluna_w,
	vetor_w[49].nm_coluna_w,
	vetor_w[50].nm_coluna_w,
	clock_timestamp());
open	c03;
loop
fetch c03 into
	dt_referencia_ant_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	begin
	select 	nextval('hd_exame_grid_controle_seq')
	into STRICT	nr_seq_nova_w
	;

	insert into HD_EXAME_GRID_CONTROLE(
		nr_sequencia,
		nm_usuario,
		ie_ordem,
		dt_referencia,
		cd_pessoa_fisica,
		dt_atualizacao)
	Values ( nr_seq_nova_w,
		nm_usuario_p,
		5,
		dt_referencia_ant_w,
		cd_pessoa_fisica_p,
		clock_timestamp()
	);

	ind 		:= 0;
	ds_cores_w	:= null;
	open	c02;
	loop
	fetch c02 into
		ds_formula_w,
		nr_seq_exame_w,
		nr_seq_apresent_w,
		ds_cor_item_w,
		qt_casas_decimais_w,
		qt_valor_minimo_w,
		qt_valor_maximo_w,
		ds_cor_fora_padrao_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		ds_item_w	:= null;

		if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then

			ds_item_w	:= obter_ult_resultado_data_lab(cd_pessoa_fisica_p, nr_seq_nova_w, nr_seq_exame_w);
			ds_item_ant_w	:= ds_item_w;

			begin

			select	campo_mascara_virgula_casas((ds_item_w)::numeric , qt_casas_decimais_w)
			into STRICT	ds_item_w
			;

			exception
				when others then
				ds_item_w := ds_item_ant_w;
			end;

			--ds_item_w := ds_item_w||'+'||vetor1_w(ind).qt_casas_decimais_w;
		elsif (ds_formula_w IS NOT NULL AND ds_formula_w::text <> '') then

			ds_item_w	:= 	hd_obter_formula(cd_pessoa_fisica_p, nr_seq_nova_w, ds_formula_w,qt_casas_decimais_w,'N');

			--ds_item_w := ds_item_w||'*';
		end if;

		ind := ind + 1;
		vetor1_w[ind].nm_coluna_w := ds_item_w;

		begin
			select	CASE WHEN length(to_char(ind))=1 THEN '0'||to_char(ind)  ELSE to_char(ind) END
			into STRICT	ds_cor_w
			;

			if ((ds_item_w)::numeric  < qt_valor_minimo_w) or ((ds_item_w)::numeric  > qt_valor_maximo_w) and (ds_cor_fora_padrao_w IS NOT NULL AND ds_cor_fora_padrao_w::text <> '') then
				ds_cores_w	:= ds_cores_w || ds_cor_w || ds_cor_fora_padrao_w ||',';
			else
				ds_cores_w	:= ds_cores_w || ds_cor_w || ds_cor_item_w ||',';
			end if;
		exception
			WHEN OTHERS THEN
				ds_cores_w	:= ds_cores_w || ds_cor_w || ds_cor_item_w ||',';

		end;

		end;
	end loop;
	close c02;

	ind := ivet;
	while(ind < 50) loop
		begin
		ind := ind + 1;
		vetor1_w[ind].nm_coluna_w := null;
		end;
	end loop;

	update hd_exame_grid_controle
	set	ds_cor			= ds_cores_w,
		ds_resultado1	= vetor1_w[1].nm_coluna_w,
		ds_resultado2	= vetor1_w[2].nm_coluna_w,
		ds_resultado3	= vetor1_w[3].nm_coluna_w,
		ds_resultado4	= vetor1_w[4].nm_coluna_w,
		ds_resultado5	= vetor1_w[5].nm_coluna_w,
		ds_resultado6	= vetor1_w[6].nm_coluna_w,
		ds_resultado7	= vetor1_w[7].nm_coluna_w,
		ds_resultado8	= vetor1_w[8].nm_coluna_w,
		ds_resultado9	= vetor1_w[9].nm_coluna_w,
		ds_resultado10	= vetor1_w[10].nm_coluna_w,
		ds_resultado11	= vetor1_w[11].nm_coluna_w,
		ds_resultado12	= vetor1_w[12].nm_coluna_w,
		ds_resultado13	= vetor1_w[13].nm_coluna_w,
		ds_resultado14	= vetor1_w[14].nm_coluna_w,
		ds_resultado15	= vetor1_w[15].nm_coluna_w,
		ds_resultado16	= vetor1_w[16].nm_coluna_w,
		ds_resultado17	= vetor1_w[17].nm_coluna_w,
		ds_resultado18	= vetor1_w[18].nm_coluna_w,
		ds_resultado19	= vetor1_w[19].nm_coluna_w,
		ds_resultado20	= vetor1_w[20].nm_coluna_w,
		ds_resultado21	= vetor1_w[21].nm_coluna_w,
		ds_resultado22	= vetor1_w[22].nm_coluna_w,
		ds_resultado23	= vetor1_w[23].nm_coluna_w,
		ds_resultado24	= vetor1_w[24].nm_coluna_w,
		ds_resultado25	= vetor1_w[25].nm_coluna_w,
		ds_resultado26	= vetor1_w[26].nm_coluna_w,
		ds_resultado27	= vetor1_w[27].nm_coluna_w,
		ds_resultado28	= vetor1_w[28].nm_coluna_w,
		ds_resultado29	= vetor1_w[29].nm_coluna_w,
		ds_resultado30	= vetor1_w[30].nm_coluna_w,
		ds_resultado31	= vetor1_w[31].nm_coluna_w,
		ds_resultado32	= vetor1_w[32].nm_coluna_w,
		ds_resultado33	= vetor1_w[33].nm_coluna_w,
		ds_resultado34	= vetor1_w[34].nm_coluna_w,
		ds_resultado35	= vetor1_w[35].nm_coluna_w,
		ds_resultado36	= vetor1_w[36].nm_coluna_w,
		ds_resultado37	= vetor1_w[37].nm_coluna_w,
		ds_resultado38	= vetor1_w[38].nm_coluna_w,
		ds_resultado39	= vetor1_w[39].nm_coluna_w,
		ds_resultado40	= vetor1_w[40].nm_coluna_w,
		ds_resultado41	= vetor1_w[41].nm_coluna_w,
		ds_resultado42	= vetor1_w[42].nm_coluna_w,
		ds_resultado43	= vetor1_w[43].nm_coluna_w,
		ds_resultado44	= vetor1_w[44].nm_coluna_w,
		ds_resultado45	= vetor1_w[45].nm_coluna_w,
		ds_resultado46	= vetor1_w[46].nm_coluna_w,
		ds_resultado47	= vetor1_w[47].nm_coluna_w,
		ds_resultado48	= vetor1_w[48].nm_coluna_w,
		ds_resultado49	= vetor1_w[49].nm_coluna_w,
		ds_resultado50	= vetor1_w[50].nm_coluna_w
	where	nr_sequencia = nr_seq_nova_w;

	delete	FROM hd_exame_grid_controle
	where	dt_referencia = dt_referencia_ant_w
	and		nm_usuario = nm_usuario_p
	and		ie_ordem = 5
	and		nr_sequencia <> nr_seq_nova_w
	and		ie_atualizar_todos_p = 'S';

	delete	FROM hd_exame_grid_controle
	where	dt_referencia = dt_referencia_ant_w
	and		nm_usuario = nm_usuario_p
	and		ie_ordem = 5
	and		nr_sequencia <> nr_seq_nova_w
	and		cd_pessoa_fisica = cd_pessoa_fisica_p
	and		ie_atualizar_todos_p = 'N';

	end;
end loop;
close c03;

select 	coalesce(count(*),0)
into STRICT	qt_itens_w
from	hd_exame_grid_controle
where	trunc(dt_referencia) = trunc(dt_referencia_w)
and		cd_pessoa_fisica = cd_pessoa_fisica_p
and		nm_usuario = nm_usuario_p
and		ie_ordem = 5;

if (qt_itens_w = 0) then

	select 	nextval('hd_exame_grid_controle_seq')
	into STRICT	nr_seq_nova_w
	;

	insert into hd_exame_grid_controle(
		nr_sequencia,
		nm_usuario,
		ie_ordem,
		dt_referencia,
		cd_pessoa_fisica,
		dt_atualizacao)
	Values ( nr_seq_nova_w,
		nm_usuario_p,
		5,
		dt_referencia_w,
		cd_pessoa_fisica_p,
		clock_timestamp()
	);

	ind := 0;
	ds_cores_w	:= null;

	open	c02;
	loop
	fetch c02 into
		ds_formula_w,
		nr_seq_exame_w,
		nr_seq_apresent_w,
		ds_cor_item_w,
		qt_casas_decimais_w,
		qt_valor_minimo_w,
		qt_valor_maximo_w,
		ds_cor_fora_padrao_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		ds_item_w	:= 0;

		if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then

			ds_item_w	:= 	obter_ult_resultado_data_lab(cd_pessoa_fisica_p, nr_seq_nova_w, nr_seq_exame_w);
			ds_item_ant_w	:= 	ds_item_w;



		elsif (ds_formula_w IS NOT NULL AND ds_formula_w::text <> '') then

			ds_item_w	:= 	hd_obter_formula(cd_pessoa_fisica_p, nr_seq_nova_w, ds_formula_w,qt_casas_decimais_w,'N');

		end if;

		begin

			--select 	campo_mascara_virgula(to_number(ds_item_w))
			select	campo_mascara_virgula_casas((ds_item_w)::numeric , qt_casas_decimais_w)
			into STRICT	ds_item_w
			;

		exception
			when others then
			ds_item_w := ds_item_ant_w;
		end;


		ind := ind + 1;
		vetor1_w[ind].nm_coluna_w := ds_item_w;

		begin
			select	CASE WHEN length(to_char(ind))=1 THEN '0'||to_char(ind)  ELSE to_char(ind) END
			into STRICT	ds_cor_w
			;

			if ((ds_item_w)::numeric  < qt_valor_minimo_w) or ((ds_item_w)::numeric  > qt_valor_maximo_w) and (ds_cor_fora_padrao_w IS NOT NULL AND ds_cor_fora_padrao_w::text <> '') then
				ds_cores_w	:= ds_cores_w || ds_cor_w || ds_cor_fora_padrao_w ||',';
			else
				ds_cores_w	:= ds_cores_w || ds_cor_w || ds_cor_item_w ||',';
			end if;
		exception
			when others then
				ds_cores_w	:= ds_cores_w || ds_cor_w || ds_cor_item_w ||',';
		end;

		end;
	end loop;
	close c02;

	ind := ind;
	while(ind < 50) loop
		begin
		ind := ind + 1;
		vetor1_w[ind].nm_coluna_w := null;
		end;
	end loop;

	update hd_exame_grid_controle
	set	ds_cor		= ds_cores_w,
		ds_resultado1	= vetor1_w[1].nm_coluna_w,
		ds_resultado2	= vetor1_w[2].nm_coluna_w,
		ds_resultado3	= vetor1_w[3].nm_coluna_w,
		ds_resultado4	= vetor1_w[4].nm_coluna_w,
		ds_resultado5	= vetor1_w[5].nm_coluna_w,
		ds_resultado6	= vetor1_w[6].nm_coluna_w,
		ds_resultado7	= vetor1_w[7].nm_coluna_w,
		ds_resultado8	= vetor1_w[8].nm_coluna_w,
		ds_resultado9	= vetor1_w[9].nm_coluna_w,
		ds_resultado10	= vetor1_w[10].nm_coluna_w,
		ds_resultado11	= vetor1_w[11].nm_coluna_w,
		ds_resultado12	= vetor1_w[12].nm_coluna_w,
		ds_resultado13	= vetor1_w[13].nm_coluna_w,
		ds_resultado14	= vetor1_w[14].nm_coluna_w,
		ds_resultado15	= vetor1_w[15].nm_coluna_w,
		ds_resultado16	= vetor1_w[16].nm_coluna_w,
		ds_resultado17	= vetor1_w[17].nm_coluna_w,
		ds_resultado18	= vetor1_w[18].nm_coluna_w,
		ds_resultado19	= vetor1_w[19].nm_coluna_w,
		ds_resultado20	= vetor1_w[20].nm_coluna_w,
		ds_resultado21	= vetor1_w[21].nm_coluna_w,
		ds_resultado22	= vetor1_w[22].nm_coluna_w,
		ds_resultado23	= vetor1_w[23].nm_coluna_w,
		ds_resultado24	= vetor1_w[24].nm_coluna_w,
		ds_resultado25	= vetor1_w[25].nm_coluna_w,
		ds_resultado26	= vetor1_w[26].nm_coluna_w,
		ds_resultado27	= vetor1_w[27].nm_coluna_w,
		ds_resultado28	= vetor1_w[28].nm_coluna_w,
		ds_resultado29	= vetor1_w[29].nm_coluna_w,
		ds_resultado30	= vetor1_w[30].nm_coluna_w,
		ds_resultado31	= vetor1_w[31].nm_coluna_w,
		ds_resultado32	= vetor1_w[32].nm_coluna_w,
		ds_resultado33	= vetor1_w[33].nm_coluna_w,
		ds_resultado34	= vetor1_w[34].nm_coluna_w,
		ds_resultado35	= vetor1_w[35].nm_coluna_w,
		ds_resultado36	= vetor1_w[36].nm_coluna_w,
		ds_resultado37	= vetor1_w[37].nm_coluna_w,
		ds_resultado38	= vetor1_w[38].nm_coluna_w,
		ds_resultado39	= vetor1_w[39].nm_coluna_w,
		ds_resultado40	= vetor1_w[40].nm_coluna_w,
		ds_resultado41	= vetor1_w[41].nm_coluna_w,
		ds_resultado42	= vetor1_w[42].nm_coluna_w,
		ds_resultado43	= vetor1_w[43].nm_coluna_w,
		ds_resultado44	= vetor1_w[44].nm_coluna_w,
		ds_resultado45	= vetor1_w[45].nm_coluna_w,
		ds_resultado46	= vetor1_w[46].nm_coluna_w,
		ds_resultado47	= vetor1_w[47].nm_coluna_w,
		ds_resultado48	= vetor1_w[48].nm_coluna_w,
		ds_resultado49	= vetor1_w[49].nm_coluna_w,
		ds_resultado50	= vetor1_w[50].nm_coluna_w
	where	nr_sequencia = nr_seq_nova_w;

end if;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_gerar_controle_exame_1 (cd_pessoa_fisica_p text, nr_seq_protocolo_p bigint, dt_referencia_p timestamp, dt_inicial_p timestamp, dt_final_p timestamp, ds_itens_p text, ie_atualizar_todos_p text, nr_unidade_p bigint, nm_usuario_p text) FROM PUBLIC;

