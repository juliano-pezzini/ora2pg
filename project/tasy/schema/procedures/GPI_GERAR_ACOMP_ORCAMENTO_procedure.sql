-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gpi_gerar_acomp_orcamento ( nr_seq_orcamento_p bigint, ie_material_p text, ie_conta_gpi_p text, nm_usuario_p text) AS $body$
DECLARE


cd_classificacao_w				varchar(40);
cd_classif_conta_w				varchar(40);
cd_classif_conta_mat_w				varchar(40);
cd_material_w				bigint;
ds_conta_w				varchar(80);
ds_estrutura_w				varchar(120);
ds_material_w				varchar(255);
ie_material_w				varchar(1);
nm_etapa_w				varchar(120);
nr_nivel_conta_w			bigint := 0;
nr_nivel_mat_w				bigint := 0;
nr_seq_conta_w				bigint;
nr_seq_apres_w				bigint;
nr_seq_etapa_w				bigint;
nr_seq_etapa_ww				bigint;
nr_seq_superior_w			bigint;
nr_seq_cronograma_w			bigint;
qt_registro_w				bigint;
qt_nivel_w				bigint;
vl_orcado_w				double precision;
vl_realizado_w				double precision;

/* Etapas/Atividades vinculadas nos itens - linhas totalizadoras*/

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.nm_etapa,
	coalesce(sum(CASE WHEN c.ie_operacao='S' THEN  b.vl_orcado WHEN c.ie_operacao='D' THEN (b.vl_orcado * -1) END ),0) vl_orcado,
	coalesce(sum(CASE WHEN c.ie_operacao='S' THEN  b.vl_realizado WHEN c.ie_operacao='D' THEN (b.vl_realizado * -1) END ),0) vl_realizado
from	gpi_plano c,
	gpi_orc_item b,
	gpi_cron_etapa a
where	a.nr_sequencia		= b.nr_seq_etapa
and	b.nr_seq_plano		= c.nr_sequencia
and	b.nr_seq_orcamento	= nr_seq_orcamento_p
group by a.nr_sequencia,
	a.nm_etapa;

/* Contas GPi do orçamento (analitico)*/

c02 CURSOR FOR
SELECT	a.nr_seq_plano nr_seq_conta,
	b.ds_conta,
	coalesce(sum(CASE WHEN b.ie_operacao='S' THEN  a.vl_orcado WHEN b.ie_operacao='D' THEN (a.vl_orcado * -1) END ),0) vl_orcado,
	coalesce(sum(CASE WHEN b.ie_operacao='S' THEN  a.vl_realizado WHEN b.ie_operacao='D' THEN (a.vl_realizado * -1) END ),0) vl_realizado
from	gpi_plano b,
	gpi_orc_item a
where	a.nr_seq_plano		= b.nr_sequencia
and	a.nr_seq_orcamento	= nr_seq_orcamento_p
and	a.nr_seq_etapa		= nr_seq_etapa_w
and	b.ie_tipo			= 'A'
and	b.ie_situacao		= 'A'
group by	a.nr_seq_plano,
		b.ds_conta;

c03 CURSOR FOR
SELECT	nr_seq_etapa,
	gpi_obter_nivel_etapa(nr_seq_etapa),
	gpi_obter_classif_etapa(nr_seq_etapa),
	ds_gerencial
from	w_gpi_acomp_orcamento
where	nr_seq_orcamento	= nr_seq_orcamento_p
and	nm_usuario	= nm_usuario_p
and	coalesce(nr_seq_conta::text, '') = ''
order by 2;

/*Materiais orçados para a conta - quando visualização assim requer*/

c04 CURSOR FOR
SELECT	a.cd_material,
	substr(obter_desc_material(a.cd_material),1,255) ds_material,
	coalesce(sum(CASE WHEN b.ie_operacao='S' THEN  a.vl_orcado WHEN b.ie_operacao='D' THEN (a.vl_orcado * -1) END ),0) vl_orcado,
	coalesce(sum(CASE WHEN b.ie_operacao='S' THEN  a.vl_realizado WHEN b.ie_operacao='D' THEN (a.vl_realizado * -1) END ),0) vl_realizado
from	gpi_plano b,
	gpi_orc_item a
where	a.nr_seq_plano	= b.nr_sequencia
and	nr_seq_orcamento	= nr_seq_orcamento_p
and	nr_seq_etapa	= nr_seq_etapa_w
and	nr_seq_plano	= nr_seq_conta_w
group by a.cd_material
order by 2;


BEGIN

ie_material_w	:= ie_material_p;
/*limpa a tabela de acompanhamento de orçamento*/

delete from w_gpi_acomp_orcamento;
commit;


open c01;
loop
fetch c01 into
	nr_seq_etapa_w,
	nm_etapa_w,
	vl_orcado_w,
	vl_realizado_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	cd_classificacao_w	:= substr(gpi_obter_classif_etapa(nr_seq_etapa_w),1,40);

	insert into w_gpi_acomp_orcamento(
		nr_seq_orcamento,
		nr_seq_conta,
		ds_gerencial,
		cd_classificacao,
		vl_orcado,
		dt_atualizacao,
		nm_usuario,
		nr_seq_etapa,
		vl_realizado)
	values (	nr_seq_orcamento_p,
		null,
		nm_etapa_w,
		cd_classificacao_w,
		vl_orcado_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_etapa_w,
		vl_realizado_w);

	select	max(nr_seq_superior)
	into STRICT	nr_seq_superior_w
	from	gpi_cron_etapa
	where	nr_sequencia	= nr_seq_etapa_w;

	select	max(nm_etapa)
	into STRICT	nm_etapa_w
	from	gpi_cron_etapa
	where	nr_sequencia = nr_seq_superior_w;

	while(nr_seq_superior_w IS NOT NULL AND nr_seq_superior_w::text <> '') loop
		begin
		nr_seq_etapa_ww		:= nr_seq_superior_w;

		select	count(*)
		into STRICT	qt_registro_w
		from	w_gpi_acomp_orcamento
		where	nr_seq_orcamento	= nr_seq_orcamento_p
		and	nm_usuario	= nm_usuario_p
		and	nr_seq_etapa	= nr_seq_etapa_ww;

		cd_classificacao_w	:= substr(gpi_obter_classif_etapa(nr_seq_etapa_ww),1,40);

		if (qt_registro_w = 0) then
			insert into w_gpi_acomp_orcamento(
				nr_seq_orcamento,
				nr_seq_conta,
				ds_gerencial,
				cd_classificacao,
				vl_orcado,
				dt_atualizacao,
				nm_usuario,
				nr_seq_etapa,
				vl_realizado)
			values (	nr_seq_orcamento_p,
				null,
				nm_etapa_w,
				cd_classificacao_w,
				vl_orcado_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_etapa_ww,
				vl_realizado_w);
		else
			update	w_gpi_acomp_orcamento
			set	vl_orcado		= vl_orcado + vl_orcado_w,
				vl_realizado	= coalesce(vl_realizado,0) + vl_realizado_w
			where	nr_seq_orcamento	= nr_seq_orcamento_p
			and	nm_usuario	= nm_usuario_p
			and	nr_seq_etapa	= nr_seq_etapa_ww;
		end if;
		select	max(nr_seq_superior)
		into STRICT	nr_seq_superior_w
		from	gpi_cron_etapa
		where	nr_sequencia	= nr_seq_etapa_ww;

		select	max(nm_etapa)
		into STRICT	nm_etapa_w
		from	gpi_cron_etapa
		where	nr_sequencia = nr_seq_superior_w;
		end;
	end loop;
	cd_classificacao_w	:= substr(gpi_obter_classif_etapa(nr_seq_etapa_w),1,40);

	if (ie_conta_gpi_p = 'S') then
		begin
	nr_nivel_conta_w	:= 0;
	/* Início gravar contas orçadas na etapa */

	open c02;
	loop
	fetch c02 into
		nr_seq_conta_w,
		ds_conta_w,
		vl_orcado_w,
		vl_realizado_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */

		nr_nivel_conta_w	:= nr_nivel_conta_w + 1;
		cd_classif_conta_w	:= substr(cd_classificacao_w || '.' || to_char(nr_nivel_conta_w),1,40);

		insert into w_gpi_acomp_orcamento(
			nr_seq_orcamento,
			nr_seq_conta,
			ds_gerencial,
			cd_classificacao,
			vl_orcado,
			dt_atualizacao,
			nm_usuario,
			nr_seq_etapa,
			vl_realizado)
		values (	nr_seq_orcamento_p,
			nr_seq_conta_w,
			substr('          ' || ds_conta_w,1,120),
			cd_classif_conta_w,
			vl_orcado_w,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_etapa_w,
			vl_realizado_w);

		if (ie_material_w = 'S') then
			nr_nivel_mat_w	:= 0;
			open C04;
			loop
			fetch C04 into
				cd_material_w,
				ds_material_w,
				vl_orcado_w,
				vl_realizado_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin

				nr_nivel_mat_w	:= nr_nivel_mat_w + 1;
				cd_classif_conta_mat_w	:= substr(cd_classif_conta_w || '.' || to_char(nr_nivel_mat_w),1,40);

				insert into w_gpi_acomp_orcamento(
					nr_seq_orcamento,
					nr_seq_conta,
					ds_gerencial,
					cd_classificacao,
					vl_orcado,
					dt_atualizacao,
					nm_usuario,
					nr_seq_etapa,
					vl_realizado,
					cd_material)
				values (	nr_seq_orcamento_p,
					nr_seq_conta_w,
					substr('                ' || ds_material_w,1,120),
					cd_classif_conta_w,
					vl_orcado_w,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_etapa_w,
					vl_realizado_w,
					cd_material_w);
				end;
			end loop;
			close C04;

		end if;

	end loop;
	close c02;
	end;
	end if;
	end;
end loop;
close c01;

open c03;
loop
fetch c03 into
	nr_seq_etapa_w,
	qt_nivel_w,
	cd_classificacao_w,
	nm_etapa_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	begin

	ds_estrutura_w	:= substr(lpad(' ',qt_nivel_w * 2) || nm_etapa_w,1,120);

	update	w_gpi_acomp_orcamento
	set	ds_gerencial	= ds_estrutura_w
	where	nr_seq_etapa	= nr_seq_etapa_w
	and	cd_classificacao	= cd_classificacao_w
	and	coalesce(nr_seq_conta::text, '') = '';

	end;
end loop;
close c03;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gpi_gerar_acomp_orcamento ( nr_seq_orcamento_p bigint, ie_material_p text, ie_conta_gpi_p text, nm_usuario_p text) FROM PUBLIC;

