-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_evento_agenda_trigger ( nr_seq_evento_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, nr_seq_laudo_p bigint, nm_usuario_p text, cd_agenda_p bigint, hr_inicio_p timestamp, cd_medico_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_cancelamento_p timestamp, cd_material_p bigint, qt_material_p bigint, ie_autorizado_p text, cd_convenio_p bigint, cd_motivo_p bigint, ie_trigger_p text DEFAULT 'S', nr_seq_agenda_p bigint DEFAULT NULL, dt_origem_p timestamp DEFAULT NULL, nm_paciente_p text DEFAULT NULL, ie_status_agenda_p text DEFAULT NULL, cd_agenda_destino_p bigint DEFAULT NULL, ds_observacao_p text DEFAULT NULL, nr_reserva_p text DEFAULT NULL, dt_agendamento_p timestamp DEFAULT NULL, nr_cirurgia_p bigint DEFAULT NULL, cd_cgc_p text DEFAULT NULL) AS $body$
DECLARE

 
nr_sequencia_w				bigint;
qt_corresp_w			  integer;
cd_setor_atendimento_w	  integer;
cd_setor_atendimento_ww	  integer;
cd_perfil_w				  integer;
cd_perfil_ww			  integer;
cd_convenio_w			  bigint;
cd_setor_atend_pac_w		integer;
qt_material_w				double precision;
cd_material_w				bigint;
cd_procedimento_adic_w		bigint;
cd_agenda_w					bigint;
nr_seq_grupo_usuario_w		bigint;
nr_cirurgia_w				bigint;
dt_nascimento_w				varchar(70);
dt_nascimento_pac_ww		varchar(70);
ie_forma_ev_w			  varchar(15);
ie_pessoa_destino_w		  varchar(15);
cd_pf_destino_w			  varchar(10);
ds_mensagem_w			  varchar(4000);
ds_titulo_w				  varchar(4000);
cd_pessoa_destino_w		  varchar(10);
ds_maquina_w			  varchar(80);
nm_paciente_w			  varchar(60);
ds_unidade_w			  varchar(60);
ds_setor_atendimento_w	  varchar(60);
ie_usuario_aceite_w		  varchar(1);
cd_pessoa_regra_w		  varchar(10);
nr_ramal_w				  varchar(10);
nr_telefone_w			  varchar(10);
ie_excecao_alerta_pessoa_w	varchar(1);
ds_Agenda_w					varchar(50);
nm_pac_Agenda_w				varchar(60);
nm_medico_w					varchar(60);
ds_procedimento_w			varchar(255);
nm_usuario_destino_w		varchar(15);
ds_cid_w					varchar(240);
cd_cid_w					varchar(10);
ds_material_w				varchar(255);
ds_autorizacao_w			varchar(255);
ie_autorizado_w				varchar(3);
ds_autorizado_w				varchar(255);
ds_lista_opme_w				varchar(4000)	:= NULL;
ds_motivo_cancel_w			varchar(255);
ds_convenio_w				varchar(255);
ds_procedimento_adic_w		varchar(255);
ds_proc_adic_w				varchar(4000);
ds_usuario_w				varchar(40);
ie_status_agenda_w			varchar(15);
ds_agenda_destino_w			varchar(100);
nr_reserva_w				varchar(20) := NULL;
nm_prim_medico_w			varchar(255);
nm_paciente_abrev_w			varchar(60);
ds_classif_pessoa_w			varchar(4000);
ds_obs_classif_w			varchar(4000);
ds_ramal_usuario_w			varchar(255);
ds_cgc_w					varchar(255);
hr_inicio_w					timestamp;
dt_cancelamento_w			timestamp;
dt_agendamento_w			timestamp;
dt_copia_trans_w			timestamp;
ds_email_fixo_w				varchar(100);
ds_categoria_w				varchar(255);

C01 CURSOR FOR 
	SELECT	a.ie_forma_ev, 
		a.ie_pessoa_destino, 
		a.cd_pf_destino, 
		coalesce(a.ie_usuario_aceite,'N'), 
		a.cd_setor_atendimento, 
		a.cd_perfil, 
		a.nr_seq_grupo_usuario, 
		a.ds_email_fixo 
	FROM	ev_evento_regra_dest a 
	WHERE	a.nr_seq_evento	= nr_seq_evento_p 
	AND	CASE WHEN coalesce(CD_CONVENIO,0)=0 THEN CASE WHEN coalesce(cd_convenio_w,0)=0 THEN coalesce(cd_convenio_p,0)  ELSE cd_convenio_w END   ELSE CD_CONVENIO END  = CASE WHEN coalesce(cd_convenio_w,0)=0 THEN coalesce(cd_convenio_p,0)  ELSE cd_convenio_w END  
	AND	coalesce(a.cd_setor_atend_pac, coalesce(cd_setor_atend_pac_w,0))		= coalesce(cd_setor_atend_pac_w,0) 
	--	and	nvl(a.cd_setor_atendimento, nvl(cd_setor_atendimento_ww,0))	= nvl(cd_setor_atendimento_ww,0) Retirado - São destinos e não regras de restrição 
	--	and	nvl(a.cd_perfil, nvl(cd_perfil_ww,0))				= nvl(cd_perfil_ww,0) Retirado - São destinos e não regras de restrição 
	AND	coalesce(a.ie_excecao,'N') = 'N' 
	AND	NOT EXISTS (	SELECT	1 
				FROM	ev_evento_regra_dest b 
				WHERE	b.nr_seq_evento	= nr_seq_evento_p 
				AND	CASE WHEN coalesce(b.CD_CONVENIO,0)=0 THEN CASE WHEN coalesce(cd_convenio_w,0)=0 THEN coalesce(cd_convenio_p,0)  ELSE cd_convenio_w END   ELSE b.CD_CONVENIO END  = CASE WHEN coalesce(cd_convenio_w,0)=0 THEN coalesce(cd_convenio_p,0)  ELSE cd_convenio_w END  
				AND	coalesce(b.cd_setor_atend_pac, coalesce(cd_setor_atend_pac_w,0))		= coalesce(cd_setor_atend_pac_w,0) 
				--and	nvl(b.cd_setor_atendimento, nvl(cd_setor_atendimento_ww,0))	= nvl(cd_setor_atendimento_ww,0) Retirado - São destinos e não regras de restrição 
				--and	nvl(b.cd_perfil, nvl(cd_perfil_ww,0))				= nvl(cd_perfil_ww,0) Retirado - São destinos e não regras de restrição 
				AND	coalesce(b.ie_excecao,'N') = 'S') 
	ORDER BY a.ie_forma_ev;

C02 CURSOR FOR 
	SELECT	obter_dados_usuario_opcao(nm_usuario,'C') 
	FROM	usuario_setor_v 
	WHERE	cd_setor_atendimento = cd_setor_atendimento_w 
	AND	ie_forma_ev_w IN (2,3) 
	AND	(obter_dados_usuario_opcao(nm_usuario,'C') IS NOT NULL AND (obter_dados_usuario_opcao(nm_usuario,'C'))::text <> '');

C03 CURSOR FOR 
	SELECT	obter_dados_usuario_opcao(nm_usuario,'C'), 
			nm_usuario 
	FROM	usuario_perfil 
	WHERE	cd_perfil = cd_perfil_w 
	AND	ie_forma_ev_w IN (2,3) 
	AND	(obter_dados_usuario_opcao(nm_usuario,'C') IS NOT NULL AND (obter_dados_usuario_opcao(nm_usuario,'C'))::text <> '');

C04 CURSOR FOR 
	SELECT	cd_material, 
		qt_material, 
		ie_autorizado, 
		SUBSTR(obter_dados_pf_pj(NULL,	cd_cgc, 'N'),1,254) 
	FROM	agenda_pac_opme 
	WHERE	nr_seq_agenda = nr_seq_agenda_p 
	AND	coalesce(ie_origem_inf,'I') = 'I';

C05 CURSOR FOR 
	SELECT	cd_procedimento, 
		SUBSTR(obter_exame_agenda(cd_procedimento, ie_origem_proced, nr_seq_proc_interno),1,240) 
	FROM 	agenda_paciente_proc 
	WHERE	nr_sequencia = nr_seq_agenda_p;

C09 CURSOR FOR 
	SELECT	obter_dados_usuario_opcao(b.nm_usuario_grupo,'C') 
	FROM	usuario_grupo b 
	WHERE	b.ie_situacao = 'A' 
	AND	ie_forma_ev_w IN (2,3) 
	AND	(obter_dados_usuario_opcao(b.nm_usuario_grupo,'C') IS NOT NULL AND (obter_dados_usuario_opcao(b.nm_usuario_grupo,'C'))::text <> '') 
	AND	b.nr_seq_grupo = nr_seq_grupo_usuario_w;


BEGIN 
 
SELECT	SUBSTR(obter_inf_sessao(0),1,80) 
INTO STRICT	ds_maquina_w
;
 
cd_perfil_ww		:= wheb_usuario_pck.get_cd_perfil;
cd_setor_atendimento_ww	:= wheb_usuario_pck.get_cd_setor_atendimento;
 
SELECT	coalesce(MAX(obter_convenio_atendimento(nr_atendimento_p)), 0) 
INTO STRICT	cd_convenio_w
;
 
ds_ramal_usuario_w	:= SUBSTR(obter_dados_usuario_opcao(wheb_usuario_pck.get_nm_usuario,'M'),1,255);
 
SELECT	ds_titulo, 
	ds_mensagem 
INTO STRICT	ds_titulo_w, 
	ds_mensagem_w 
FROM	ev_evento 
WHERE	nr_sequencia	= nr_seq_evento_p;
 
SELECT	SUBSTR(obter_nome_pf(cd_pessoa_fisica_p),1,60), 
	SUBSTR(obter_unidade_atendimento(nr_atendimento_p,'A','U'),1,60), 
	SUBSTR(obter_unidade_atendimento(nr_atendimento_p,'A','RA'),1,60), 
	SUBSTR(obter_unidade_atendimento(nr_atendimento_p,'A','TL'),1,60), 
	SUBSTR(obter_unidade_atendimento(nr_atendimento_p,'A','S'),1,60), 
	SUBSTR(obter_unidade_atendimento(nr_atendimento_p,'A','CS'),1,60), 
	SUBSTR(obter_nome_pf(cd_medico_p),1,60), 
	SUBSTR(Obter_Primeiro_Nome(Obter_medico_resp_atend(nr_atendimento_p,'N')),1,255), 
	SUBSTR(abrevia_nome_pf(cd_pessoa_fisica_p,'M'),1,60), 
	SUBSTR(obter_dados_pf(cd_pessoa_fisica_p, 'DN'),1,100) 
INTO STRICT	nm_paciente_w, 
	ds_unidade_w, 
	nr_ramal_w, 
	nr_telefone_w, 
	ds_setor_atendimento_w, 
	cd_setor_atend_pac_w, 
	nm_medico_w, 
	nm_prim_medico_w, 
	nm_paciente_abrev_w, 
	dt_nascimento_w
;
 
SELECT	MAX(SUBSTR(ds_procedimento,1,255)) 
INTO STRICT	ds_procedimento_w 
FROM	procedimento 
WHERE	cd_procedimento		= cd_procedimento_p 
AND	ie_origem_proced	= ie_origem_proced_p;
 
SELECT	SUBSTR(obter_cid_atendimento(nr_atendimento_p, 'P'),1,10), 
	SUBSTR(obter_desc_cid_doenca(obter_cid_atendimento(nr_atendimento_p, 'P')),1,240) 
INTO STRICT	cd_cid_w, 
	ds_cid_w
;
 
IF (coalesce(cd_agenda_p,0) > 0) THEN 
	SELECT	SUBSTR(MAX(ds_agenda),1,100) 
	INTO STRICT	ds_agenda_destino_w 
	FROM	agenda 
	WHERE	cd_agenda = cd_agenda_p;
END IF;
 
ds_obs_classif_w := obter_lista_dados_classif(cd_pessoa_fisica_p, 'O');
ds_classif_pessoa_w := obter_lista_dados_classif(cd_pessoa_fisica_p, 'D');
 
 
BEGIN 
OPEN C04;
LOOP 
FETCH C04 INTO 
	cd_material_w, 
	qt_material_w, 
	ie_autorizado_w, 
	ds_cgc_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	BEGIN 
	ds_material_w 	:= SUBSTR(obter_desc_material(cd_material_w),1,200);
	ds_autorizado_w := SUBSTR(obter_valor_dominio(1637,ie_autorizado_w),1,200);
	IF (coalesce(ds_lista_opme_w::text, '') = '') THEN 
		ds_lista_opme_w := 'OPME'||CHR(13);
		ds_lista_opme_w	:= wheb_mensagem_pck.get_texto(300726, 'PARAM_MAT_UM=' || ds_lista_opme_w || ';PARAM_MAT_DOIS=' || ds_material_w);
		ds_lista_opme_w	:= wheb_mensagem_pck.get_texto(300728, 'PARAM_STT_UM=' || ds_lista_opme_w || ';PARAM_STT_DOIS=' || ds_autorizado_w);
		ds_lista_opme_w	:= wheb_mensagem_pck.get_texto(300732, 'PARAM_QTD_UM=' || ds_lista_opme_w || ';PARAM_QTD_DOIS=' || qt_material_w);
		ds_lista_opme_w	:= wheb_mensagem_pck.get_texto(300733, 'PARAM_FNC_UM=' || ds_lista_opme_w || ';PARAM_FNC_DOIS=' || ds_cgc_w);
	ELSE 
		ds_lista_opme_w	:= wheb_mensagem_pck.get_texto(300726, 'PARAM_MAT_UM=' || ds_lista_opme_w || ';PARAM_MAT_DOIS=' || ds_material_w);
		ds_lista_opme_w	:= wheb_mensagem_pck.get_texto(300728, 'PARAM_STT_UM=' || ds_lista_opme_w || ';PARAM_STT_DOIS=' || ds_autorizado_w);
		ds_lista_opme_w	:= wheb_mensagem_pck.get_texto(300732, 'PARAM_QTD_UM=' || ds_lista_opme_w || ';PARAM_QTD_DOIS=' || qt_material_w);
		ds_lista_opme_w	:= wheb_mensagem_pck.get_texto(300733, 'PARAM_FNC_UM=' || ds_lista_opme_w || ';PARAM_FNC_DOIS=' || ds_cgc_w);
	END IF;
	END;
END LOOP;
CLOSE C04;
EXCEPTION 
WHEN OTHERS THEN 
	ds_lista_opme_w	:= '';
END;
BEGIN 
 
IF (ie_trigger_p = 'N') AND (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') THEN 
	SELECT	MAX(SUBSTR(obter_nome_convenio(cd_convenio),1,40)), 
		MAX(SUBSTR(obter_motivo_agenda(nr_sequencia),1,255)), 
		coalesce(MAX(ie_status_agenda),ie_status_agenda_p), 
		coalesce(MAX(cd_agenda),cd_agenda_p), 
		coalesce(MAX(hr_inicio),hr_inicio_p), 
		coalesce(MAX(nr_reserva),nr_reserva_p), 
		coalesce(MAX(dt_agendamento),dt_agendamento_p), 
		MAX(dt_copia_trans), 
		MAX(nr_cirurgia), 
		MAX(TO_CHAR(dt_nascimento_pac,'dd/mm/yyyy')), 
		MAX(SUBSTR(OBTER_CATEGORIA_CONVENIO(cd_convenio, cd_categoria),1,255)) 
	INTO STRICT	ds_convenio_w, 
		ds_motivo_cancel_w, 
		ie_status_agenda_w, 
		cd_agenda_w, 
		hr_inicio_w, 
		nr_reserva_w, 
		dt_agendamento_w, 
		dt_copia_trans_w, 
		nr_cirurgia_w, 
		dt_nascimento_pac_ww, 
		ds_categoria_w 
	FROM	agenda_paciente 
	WHERE	nr_sequencia = nr_seq_agenda_p;
 
	IF (coalesce(dt_nascimento_w::text, '') = '') THEN 
		dt_nascimento_w := dt_nascimento_pac_ww;
	END IF;
END IF;
 
EXCEPTION 
WHEN OTHERS THEN 
	ds_motivo_cancel_w	:= '';
END;
 
 
BEGIN 
OPEN C05;
LOOP 
FETCH C05 INTO 
	cd_procedimento_adic_w, 
	ds_procedimento_adic_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	BEGIN 
	IF (coalesce(ds_proc_adic_w::text, '') = '') THEN 
		ds_proc_adic_w := cd_procedimento_adic_w || ' - ' || ds_procedimento_adic_w||CHR(13);
	ELSE 
		ds_proc_adic_w := ds_proc_adic_w || cd_procedimento_adic_w || ' - ' || ds_procedimento_adic_w||CHR(13);
	END IF;
	END;
END LOOP;
CLOSE C05;
EXCEPTION 
WHEN OTHERS THEN 
	ds_proc_adic_w	:= '';
END;
 
 
IF (cd_material_p IS NOT NULL AND cd_material_p::text <> '' AND cd_material_p > 0) THEN 
	ds_material_w 		:= SUBSTR(obter_desc_material(cd_material_p),1,200);
END IF;
 
ds_autorizacao_w	:= SUBSTR(obter_valor_dominio(1637,ie_autorizado_p),1,200);
 
BEGIN 
IF (coalesce(nr_seq_agenda_p,0) > 0) AND (ie_trigger_p = 'N') THEN 
	ds_motivo_cancel_w	:= SUBSTR(obter_motivo_agenda(nr_seq_agenda_p),1,255);
ELSE 
	ds_motivo_cancel_w	:=obter_dados_motivo_cancel(cd_motivo_p,'D');
END IF;
EXCEPTION 
WHEN OTHERS THEN 
	ds_motivo_cancel_w	:= '';
END;
 
ds_convenio_w		:= SUBSTR(obter_nome_convenio(cd_convenio_p),1,40);
 
SELECT	MAX(SUBSTR(ds_usuario,1,40)) 
INTO STRICT	ds_usuario_w 
FROM	usuario 
WHERE	nm_usuario = nm_usuario_p;
 
BEGIN 
IF (coalesce(ds_lista_opme_w::text, '') = '') THEN 
	ds_lista_opme_w := 'OPME'||CHR(13);
	ds_lista_opme_w	:= wheb_mensagem_pck.get_texto(300726, 'PARAM_MAT_UM=' || ds_lista_opme_w || ';PARAM_MAT_DOIS=' || ds_material_w);
	ds_lista_opme_w	:= wheb_mensagem_pck.get_texto(300728, 'PARAM_STT_UM=' || ds_lista_opme_w || ';PARAM_STT_DOIS=' || ds_autorizacao_w);
	ds_lista_opme_w	:= wheb_mensagem_pck.get_texto(300732, 'PARAM_QTD_UM=' || ds_lista_opme_w || ';PARAM_QTD_DOIS=' || qt_material_p);
	ds_lista_opme_w	:= wheb_mensagem_pck.get_texto(300733, 'PARAM_FNC_UM=' || ds_lista_opme_w || ';PARAM_FNC_DOIS=' || SUBSTR(obter_dados_pf_pj(NULL,cd_cgc_p, 'N'),1,254));
END IF;
EXCEPTION 
WHEN OTHERS THEN 
	ds_lista_opme_w	:= '';
END;
 
IF (coalesce(ds_cgc_w::text, '') = '') THEN 
	SELECT	MAX(SUBSTR(obter_dados_pf_pj(NULL,cd_cgc_p, 'N'),1,254)) 
	INTO STRICT	ds_cgc_w 
	;
END IF;
 
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@nascimento',dt_nascimento_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@nomeusuario',ds_usuario_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@paciente',coalesce(nm_paciente_w,nm_paciente_p)),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@quarto',ds_unidade_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@setor',ds_setor_atendimento_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@atendimento',nr_atendimento_p),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@ramal',nr_ramal_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@telefone',nr_telefone_w),1,4000);
 
SELECT	SUBSTR(MAX(Obter_Nome_Agenda(coalesce(cd_agenda_p,cd_agenda_w))),1,50) 
INTO STRICT	ds_agenda_w
;
 
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@agenda',ds_agenda_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@dtinicioagenda',PKG_DATE_FORMATERS.to_varchar(hr_inicio_p, 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@medicoagenda',nm_medico_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@procagenda',ds_procedimento_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@dtcancelagenda',PKG_DATE_FORMATERS.to_varchar(dt_cancelamento_p, 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@cd_cid',cd_cid_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@ds_cid',ds_cid_w),1,4000);
 
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@opme',ds_material_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@qtopme',coalesce(qt_material_p,qt_material_w)),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@autorizacaoopme',coalesce(ds_autorizacao_w,ds_autorizado_w)),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@data_hora_atual',PKG_DATE_FORMATERS.to_varchar(clock_timestamp(), 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@data_atual',PKG_DATE_FORMATERS.to_varchar(clock_timestamp(), 'shortDate', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@listaopme',ds_lista_opme_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@motivo_cancel' ,ds_motivo_cancel_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@convenio' ,ds_convenio_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@dt_transferencia' ,PKG_DATE_FORMATERS.to_varchar(coalesce(hr_inicio_w,hr_inicio_p), 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@procadicagenda',ds_proc_adic_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@statusagenda',obter_valor_dominio(83,coalesce(ie_status_agenda_w,ie_status_agenda_p))),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@agedestino',ds_agenda_destino_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@obsagendamento',ds_observacao_p),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@reserva',coalesce(nr_reserva_w,nr_reserva_p)),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@categoria',ds_categoria_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@med_atend_prim',nm_prim_medico_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@pac_abreviado',nm_paciente_abrev_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@lista_equip_agenda',obter_lista_equip_agenda(nr_seq_agenda_p)),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@classif_pf',ds_classif_pessoa_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@obs_classif_pessoa',ds_obs_classif_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@dt_agendamento',PKG_DATE_FORMATERS.to_varchar(coalesce(dt_agendamento_w,dt_agendamento_p), 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@dtorigemtransf',PKG_DATE_FORMATERS.to_varchar(coalesce(dt_origem_p,dt_copia_trans_w), 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@usuarioramal',ds_ramal_usuario_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@fornec_opme',ds_cgc_w),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@cirurgia',coalesce(nr_cirurgia_p,nr_cirurgia_w)),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@listacme',obter_lista_cme_agenda(nr_seq_agenda_p)),1,4000);
ds_mensagem_w	:= SUBSTR(replace_macro(ds_mensagem_w,'@listaservico',obter_lista_servico_agenda(nr_seq_agenda_p)),1,4000);
 
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@nascimento',dt_nascimento_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@nomeusuario',ds_usuario_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@paciente',coalesce(nm_paciente_w,nm_paciente_p)),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@quarto',ds_unidade_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@setor',ds_setor_atendimento_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@atendimento',nr_atendimento_p),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@ramal',nr_ramal_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@telefone',nr_telefone_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@reserva',coalesce(nr_reserva_w,nr_reserva_p)),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@categoria',ds_categoria_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@dtorigemtransf',PKG_DATE_FORMATERS.to_varchar(coalesce(dt_origem_p,dt_copia_trans_w), 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@usuarioramal',ds_ramal_usuario_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@cirurgia',coalesce(nr_cirurgia_p,nr_cirurgia_w)),1,4000);
 
SELECT	SUBSTR(MAX(Obter_Nome_Agenda(coalesce(cd_agenda_p,cd_agenda_w))),1,50) 
INTO STRICT	ds_agenda_w
;
 
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@agenda',ds_agenda_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@dtinicioagenda',PKG_DATE_FORMATERS.to_varchar(hr_inicio_p, 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@medicoagenda',nm_medico_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@procagenda',ds_procedimento_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@dtcancelagenda',PKG_DATE_FORMATERS.to_varchar(dt_cancelamento_p, 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@cd_cid',cd_cid_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@ds_cid',ds_cid_w),1,4000);
 
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@opme',ds_material_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@qtopme',coalesce(qt_material_p,qt_material_w)),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@autorizacaoopme',ds_autorizacao_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@data_hora_atual',PKG_DATE_FORMATERS.to_varchar(clock_timestamp(), 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@data_atual',PKG_DATE_FORMATERS.to_varchar(clock_timestamp(), 'shortDate', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@listaopme',ds_lista_opme_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@motivo_cancel' ,ds_motivo_cancel_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@convenio' ,ds_convenio_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@dt_transferencia' ,PKG_DATE_FORMATERS.to_varchar(coalesce(hr_inicio_w,hr_inicio_p), 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@procadicagenda',ds_proc_adic_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@statusagenda',obter_valor_dominio(83,coalesce(ie_status_agenda_w,ie_status_agenda_p))),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@med_atend_prim',nm_prim_medico_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@pac_abreviado',nm_paciente_abrev_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@classif_pf',ds_classif_pessoa_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@obs_classif_pessoa',ds_obs_classif_w),1,4000);
ds_titulo_w	:= SUBSTR(replace_macro(ds_titulo_w,'@dt_agendamento',PKG_DATE_FORMATERS.to_varchar(coalesce(dt_agendamento_w,dt_agendamento_p), 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,4000);
 
SELECT	nextval('ev_evento_paciente_seq') 
INTO STRICT	nr_sequencia_w
;
 
INSERT INTO ev_evento_paciente( 
	nr_sequencia, 
	nr_seq_evento, 
	dt_atualizacao, 
	nm_usuario, 
	dt_atualizacao_nrec, 
	nm_usuario_nrec, 
	cd_pessoa_fisica, 
	nr_atendimento, 
	ds_titulo, 
	ds_mensagem, 
	ie_status, 
	ds_maquina, 
	dt_evento, 
	dt_liberacao) 
VALUES (	nr_sequencia_w, 
	nr_seq_evento_p, 
	clock_timestamp(), 
	nm_usuario_p, 
	clock_timestamp(), 
	nm_usuario_p, 
	cd_pessoa_fisica_p, 
	nr_atendimento_p, 
	SUBSTR(ds_titulo_w,1,255), 
	ds_mensagem_w, 
	'G', 
	ds_maquina_w, 
	clock_timestamp(), 
	clock_timestamp());
 
OPEN C01;
LOOP 
FETCH C01 INTO 
	ie_forma_ev_w, 
	ie_pessoa_destino_w, 
	cd_pf_destino_w, 
	ie_usuario_aceite_w, 
	cd_setor_atendimento_w, 
	cd_perfil_w, 
	nr_seq_grupo_usuario_w, 
	ds_email_fixo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	BEGIN 
	BEGIN 
 
	cd_pessoa_destino_w	:= NULL;
	qt_corresp_w	:= 1;
	IF (ie_pessoa_destino_w = '1') THEN /* Médico do atendimento */
 
		BEGIN 
		SELECT	MAX(cd_medico_atendimento) 
		INTO STRICT	cd_pessoa_destino_w 
		FROM	atendimento_paciente 
		WHERE	nr_atendimento	= nr_atendimento_p;
		END;
	ELSIF (ie_pessoa_destino_w = '2') THEN /*Médico responsável pelo paciente*/
 
		BEGIN 
		SELECT	MAX(cd_medico_resp) 
		INTO STRICT	cd_pessoa_destino_w 
		FROM	atendimento_paciente 
		WHERE	nr_atendimento	= nr_atendimento_p;
		END;
	ELSIF (ie_pessoa_destino_w = '3') THEN /*Médico laudante*/
 
		BEGIN 
		SELECT	MAX(cd_medico_resp) 
		INTO STRICT	cd_pessoa_destino_w 
		FROM	laudo_paciente 
		WHERE	nr_sequencia	= nr_seq_laudo_p;
		END;
	ELSIF (ie_pessoa_destino_w = '4') THEN /*Médico referido*/
 
		BEGIN 
		SELECT	MAX(cd_medico_referido) 
		INTO STRICT	cd_pessoa_destino_w 
		FROM	atendimento_paciente 
		WHERE	nr_atendimento	= nr_atendimento_p;
		END;
	ELSIF (ie_pessoa_destino_w = '18') THEN /*Médico da agenda cirúrgica*/
 
		BEGIN 
		cd_pessoa_destino_w	:= cd_medico_p;
		END;
	ELSIF (ie_pessoa_destino_w = '19') THEN 
		cd_pessoa_destino_w := cd_pessoa_fisica_p;
	ELSIF (ie_pessoa_destino_w = '5') OR (ie_pessoa_destino_w = '12') THEN /*Pessoa fixa ou Usuário fixo*/
 
		cd_pessoa_destino_w	:= cd_pf_destino_w;
	END IF;
 
	IF (ie_usuario_aceite_w = 'S') AND (cd_pessoa_destino_w IS NOT NULL AND cd_pessoa_destino_w::text <> '') AND (ie_forma_ev_w = '1') THEN 
		BEGIN 
		SELECT	COUNT(*) 
		INTO STRICT	qt_corresp_w 
		FROM	pessoa_fisica_corresp 
		WHERE	cd_pessoa_fisica	= cd_pessoa_destino_w 
		AND	ie_tipo_corresp		= 'MCel' 
		AND	ie_tipo_doc		= 'AE';
		END;
	ELSIF (ie_usuario_aceite_w = 'S') AND (cd_pessoa_destino_w IS NOT NULL AND cd_pessoa_destino_w::text <> '') AND (ie_forma_ev_w = '3') THEN 
		BEGIN 
		SELECT	COUNT(*) 
		INTO STRICT	qt_corresp_w 
		FROM	pessoa_fisica_corresp 
		WHERE	cd_pessoa_fisica	= cd_pessoa_destino_w 
		AND	ie_tipo_corresp		= 'CI' 
		AND	ie_tipo_doc		= 'AE';
		END;
	ELSIF (ie_usuario_aceite_w = 'S') AND (cd_pessoa_destino_w IS NOT NULL AND cd_pessoa_destino_w::text <> '') AND (ie_forma_ev_w = '4') THEN 
		BEGIN 
		SELECT	COUNT(*) 
		INTO STRICT	qt_corresp_w 
		FROM	pessoa_fisica_corresp 
		WHERE	cd_pessoa_fisica	= cd_pessoa_destino_w 
		AND	ie_tipo_corresp		= 'Email' 
		AND	ie_tipo_doc		= 'AE';
		END;
	END IF;
	EXCEPTION 
	WHEN OTHERS THEN 
		cd_pessoa_destino_w	:= NULL;
	END;
 
	IF (cd_pessoa_destino_w IS NOT NULL AND cd_pessoa_destino_w::text <> '') AND (qt_corresp_w > 0) THEN 
		BEGIN 
		ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_destino_w, ie_forma_ev_w);
		--Não possui exceção entao gravar normalmente o alerta (exceção = pessoa não quer receber alerta) 
		IF (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') THEN 
			INSERT INTO ev_evento_pac_destino( 
				nr_sequencia, 
				nr_seq_ev_pac, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				cd_pessoa_fisica, 
				ie_forma_ev, 
				ie_status, 
				dt_ciencia, 
				ie_pessoa_destino, 
				dt_evento) 
			VALUES (	nextval('ev_evento_pac_destino_seq'), 
				nr_sequencia_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				cd_pessoa_destino_w, 
				ie_forma_ev_w, 
				'G', 
				NULL, 
				ie_pessoa_destino_w, 
				clock_timestamp());
		END IF;
		END;
	END IF;
 
	OPEN C02;
	LOOP 
	FETCH C02 INTO 
		cd_pessoa_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		BEGIN 
		IF (cd_pessoa_regra_w IS NOT NULL AND cd_pessoa_regra_w::text <> '') THEN 
			ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_regra_w, ie_forma_ev_w);
			--Não possui exceção entao gravar normalmente o alerta (exceção = pessoa não quer receber alerta) 
			IF (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') THEN 
				INSERT INTO ev_evento_pac_destino( 
					nr_sequencia, 
					nr_seq_ev_pac, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					cd_pessoa_fisica, 
					ie_forma_ev, 
					ie_status, 
					dt_ciencia, 
					ie_pessoa_destino, 
					dt_evento) 
				VALUES (	nextval('ev_evento_pac_destino_seq'), 
					nr_sequencia_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					cd_pessoa_regra_w, 
					ie_forma_ev_w, 
					'G', 
					NULL, 
					ie_pessoa_destino_w, 
					clock_timestamp());
			END IF;
		END IF;
		END;
	END LOOP;
	CLOSE C02;
 
	OPEN C03;
	LOOP 
	FETCH C03 INTO 
		cd_pessoa_regra_w, 
		nm_usuario_destino_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		BEGIN 
		IF (cd_pessoa_regra_w IS NOT NULL AND cd_pessoa_regra_w::text <> '') THEN 
			ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_regra_w, ie_forma_ev_w);
			--Não possui exceção entao gravar normalmente o alerta (exceção = pessoa não quer receber alerta) 
			IF (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') THEN 
				INSERT INTO ev_evento_pac_destino( 
					nr_sequencia, 
					nr_seq_ev_pac, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					cd_pessoa_fisica, 
					ie_forma_ev, 
					ie_status, 
					dt_ciencia, 
					nm_usuario_Dest, 
					ie_pessoa_destino, 
					dt_evento) 
				VALUES (	nextval('ev_evento_pac_destino_seq'), 
					nr_sequencia_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					cd_pessoa_regra_w, 
					ie_forma_ev_w, 
					'G', 
					NULL, 
					nm_usuario_destino_w, 
					ie_pessoa_destino_w, 
					clock_timestamp());
			END IF;
		END IF;
		END;
	END LOOP;
	CLOSE C03;
 
	OPEN C09;
	LOOP 
	FETCH C09 INTO 
		cd_pessoa_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C09 */
		BEGIN 
		IF (cd_pessoa_regra_w IS NOT NULL AND cd_pessoa_regra_w::text <> '') THEN 
			ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_regra_w, ie_forma_ev_w);
			--Não possui exceção entao gravar normalmente o alerta (exceção = pessoa não quer receber alerta) 
			IF (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') THEN 
				INSERT INTO ev_evento_pac_destino( 
					nr_sequencia, 
					nr_seq_ev_pac, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					cd_pessoa_fisica, 
					ie_forma_ev, 
					ie_status, 
					dt_ciencia, 
					ie_pessoa_destino, 
					dt_evento) 
				VALUES (	nextval('ev_evento_pac_destino_seq'), 
					nr_sequencia_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					cd_pessoa_regra_w, 
					ie_forma_ev_w, 
					'G', 
					NULL, 
					ie_pessoa_destino_w, 
					clock_timestamp());
			END IF;
		END IF;
		END;
	END LOOP;
	CLOSE C09;
 
	IF	((ie_pessoa_destino_w = '22') AND (ie_forma_ev_w = '4') AND 
		(ds_email_fixo_w IS NOT NULL AND ds_email_fixo_w::text <> '')) THEN 
		BEGIN 
		INSERT INTO ev_evento_pac_destino( 
			nr_sequencia, 
			nr_seq_ev_pac, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			cd_pessoa_fisica, 
			ie_forma_ev, 
			ie_status, 
			dt_ciencia, 
			ie_pessoa_destino, 
			dt_evento, 
			ds_email_fixo) 
		VALUES (	nextval('ev_evento_pac_destino_seq'), 
			nr_sequencia_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			NULL, 
			ie_forma_ev_w, 
			'G', 
			NULL, 
			ie_pessoa_destino_w, 
			clock_timestamp(), 
			ds_email_fixo_w);
		END;
	END IF;
 
	END;
END LOOP;
CLOSE C01;
 
IF (ie_trigger_p = 'N') THEN 
	COMMIT;
END IF;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_evento_agenda_trigger ( nr_seq_evento_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, nr_seq_laudo_p bigint, nm_usuario_p text, cd_agenda_p bigint, hr_inicio_p timestamp, cd_medico_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_cancelamento_p timestamp, cd_material_p bigint, qt_material_p bigint, ie_autorizado_p text, cd_convenio_p bigint, cd_motivo_p bigint, ie_trigger_p text DEFAULT 'S', nr_seq_agenda_p bigint DEFAULT NULL, dt_origem_p timestamp DEFAULT NULL, nm_paciente_p text DEFAULT NULL, ie_status_agenda_p text DEFAULT NULL, cd_agenda_destino_p bigint DEFAULT NULL, ds_observacao_p text DEFAULT NULL, nr_reserva_p text DEFAULT NULL, dt_agendamento_p timestamp DEFAULT NULL, nr_cirurgia_p bigint DEFAULT NULL, cd_cgc_p text DEFAULT NULL) FROM PUBLIC;

