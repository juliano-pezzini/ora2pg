-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_propaci_audit_dia ( cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, dt_inicial_p timestamp, nr_dias_p bigint, qt_proc_lanc_dia_p bigint, nr_atendimento_p bigint, nr_interno_conta_p bigint, nr_seq_atepacu_p bigint, cd_medico_executor_p text, nr_seq_auditoria_p bigint, nr_seq_motivo_p bigint, nm_usuario_p text ) AS $body$
DECLARE

				 
nr_sequencia_w			bigint;
dt_entrada_unidade_w		timestamp;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
nr_doc_convenio_w		varchar(20);
ie_tipo_guia_w			varchar(2);
cd_senha_w			varchar(20);
cd_cgc_prestador_w 		varchar(14);	
ie_origem_proced_w		bigint;
dt_procedimento_w		timestamp;
cd_procedimento_w		bigint;
cd_setor_atendimento_w		integer;
i				integer;
qt_procedimento_w		double precision;
ie_convenio_conta_param_w	varchar(1);
cd_estabelecimento_w		smallint;
dt_entrada_w			timestamp;
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;


BEGIN 
 
dt_procedimento_w := dt_inicial_p;
qt_procedimento_w := coalesce(qt_proc_lanc_dia_p,1);
 
select	max(cd_setor_atendimento), 
	max(dt_entrada_unidade) 
into STRICT	cd_setor_atendimento_w, 
	dt_entrada_unidade_w 
from	atend_paciente_unidade 
where	nr_seq_interno = nr_seq_atepacu_p;
 
select	max(a.cd_cgc), 
	max(b.dt_entrada) 
into STRICT	cd_cgc_prestador_w, 
	dt_entrada_w 
from 	estabelecimento a, 
	atendimento_paciente b 
where	a.cd_estabelecimento 	= b.cd_estabelecimento 
and	b.nr_atendimento 	= nr_atendimento_p;
 
select	max(cd_estabelecimento) 
into STRICT	cd_estabelecimento_w 
from 	conta_paciente 
where 	nr_interno_conta = nr_interno_conta_p;
 
select	max(ie_convenio_conta_param) 
into STRICT	ie_convenio_conta_param_w 
from	parametro_faturamento 
where	cd_estabelecimento = cd_estabelecimento_w;
 
select	max(dt_periodo_inicial), 
	max(dt_periodo_final) 
into STRICT	dt_periodo_inicial_w, 
	dt_periodo_final_w 
from	auditoria_conta_paciente 
where	nr_sequencia = nr_seq_auditoria_p;
 
if (ie_convenio_conta_param_w = 'S') then 
	begin 
	select	cd_convenio_parametro, 
			cd_categoria_parametro 
	into STRICT	cd_convenio_w, 
			cd_categoria_w 
	from	conta_paciente 
	where	nr_interno_conta = nr_interno_conta_p;	
	end;
else 
	-- Obter o convênio de execucao 
	SELECT * FROM obter_convenio_execucao(nr_atendimento_p, dt_entrada_unidade_w, cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;
end if;
 
for i in 1..nr_dias_p loop 
	begin 
	-- Obter a máxima sequencia da procedimento_paciente 
	select	nextval('procedimento_paciente_seq') 
	into STRICT	nr_sequencia_w 
	;
	 
	if (dt_entrada_w > dt_procedimento_w) then 
		dt_procedimento_w := dt_entrada_unidade_w;
	end if;
	 
	if (dt_periodo_inicial_w IS NOT NULL AND dt_periodo_inicial_w::text <> '') and (dt_periodo_final_w IS NOT NULL AND dt_periodo_final_w::text <> '') and (dt_periodo_inicial_w < dt_procedimento_w) and (dt_periodo_final_w > dt_procedimento_w) then 
	 
		-- inserir na tabela procedimento_paciente 
		insert into procedimento_paciente( 
					nr_sequencia, 
					nr_atendimento,	 
					dt_entrada_unidade,		 
					cd_procedimento, 
					dt_procedimento, 
					cd_convenio, 
					cd_categoria, 
					nr_doc_convenio, 
					ie_tipo_guia, 
					cd_senha, 
					ie_auditoria, 
					ie_emite_conta, 
					cd_cgc_prestador, 
					ie_origem_proced, 
					nr_seq_exame, 
					nr_seq_proc_interno, 
					qt_procedimento, 
					cd_setor_atendimento, 
					nr_seq_atepacu, 
					nr_seq_cor_exec, 
					ie_funcao_medico, 
					vl_procedimento, 
					ie_proc_princ_atend, 
					ie_video, 
					tx_medico, 
					tx_Anestesia, 
					tx_procedimento, 
					ie_valor_informado, 
					ie_guia_informada, 
					cd_situacao_glosa, 
					nm_usuario_original, 
					ds_observacao, 
					dt_atualizacao, 
					nm_usuario, 
					cd_pessoa_fisica, 
					cd_medico_executor, 
					nr_interno_conta, 
					dt_conta) 
				values ( 
					nr_sequencia_w, 
					nr_atendimento_p, 
					dt_entrada_unidade_w, 
					cd_procedimento_p, 
					dt_procedimento_w, 
					cd_convenio_w, 
					cd_categoria_w, 
					nr_doc_convenio_w, 
					ie_tipo_guia_w, 
					cd_senha_w, 
					'S', 
					null, 
					cd_cgc_prestador_w, 
					ie_origem_proced_p, 
					null, 
					nr_seq_proc_interno_p, 
					qt_procedimento_w, 
					cd_setor_atendimento_w, 
					nr_seq_atepacu_p, 
					null, 
					null, 
					100, 
					'N', 
					'N', 
					100, 
					100, 
					100, 
					'N', 
					'N', 
					0, 
					nm_usuario_p, 
					null, 
					clock_timestamp(), 
					nm_usuario_p, 
					null, 
					cd_medico_executor_p, 
					nr_interno_conta_p, 
					dt_procedimento_w);
		 
		--calcular item 
		CALL atualiza_preco_procedimento(nr_sequencia_w,cd_convenio_w,nm_usuario_p);
		 
		--atualizar a auditoria do item	 
		CALL atualizar_itens_audit_conta(nr_seq_auditoria_p, nr_sequencia_w, 2, qt_procedimento_w, nm_usuario_p, nr_seq_motivo_p);
		 
		dt_procedimento_w := dt_procedimento_w + 1;
		 
	end if;
	 
	end;
end loop;
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_propaci_audit_dia ( cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, dt_inicial_p timestamp, nr_dias_p bigint, qt_proc_lanc_dia_p bigint, nr_atendimento_p bigint, nr_interno_conta_p bigint, nr_seq_atepacu_p bigint, cd_medico_executor_p text, nr_seq_auditoria_p bigint, nr_seq_motivo_p bigint, nm_usuario_p text ) FROM PUBLIC;

