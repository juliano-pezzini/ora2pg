-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_define_exame_coleta ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_grupo_proc_w			bigint;
cd_especialidade_w		bigint;
cd_area_procedimento_w		bigint;
nr_seq_prestador_exec_w		bigint;
nr_seq_regra_w			bigint;
nr_seq_regra_ww			bigint;
nr_seq_grupo_servico_w		bigint;
ie_grupo_servico_w		varchar(1)	:= 'S';
ie_estrutura_w			varchar(1)	:= 'S';
nr_seq_prestador_pgto_w		bigint;
vl_coleta_w			double precision	:= 0;
dt_preco_w			timestamp;
qt_registro_w			bigint	:= 0;
nr_seq_conta_w			bigint;
dt_inicio_proc_w		varchar(255);
dt_fim_proc_w			varchar(255);
cd_guia_referencia_w		varchar(255);
nr_seq_segurado_w		bigint;
dt_procedimento_w		timestamp;
dt_proc_regra_w			timestamp;
qt_regra_coleta_w		bigint;
qt_regra_coleta_prest_w		bigint;

C01 CURSOR FOR
	SELECT	coalesce(a.nr_sequencia,0),
		a.nr_seq_grupo_servico,
		a.ie_estrutura
	from	pls_exame_coleta	a
	where	a.ie_situacao		= 'A'
	and	a.nr_seq_prestador	= nr_seq_prestador_exec_w
	and	((coalesce(a.cd_procedimento::text, '') = '') or (a.cd_procedimento	= cd_procedimento_w and ie_origem_proced = ie_origem_proced_w))
	and	((coalesce(a.cd_grupo_proc::text, '') = '') or (a.cd_grupo_proc	= cd_grupo_proc_w))
	and	((coalesce(a.cd_especialidade::text, '') = '') or (a.cd_especialidade	= cd_especialidade_w))
	and	((coalesce(a.cd_area_procedimento::text, '') = '') or (a.cd_area_procedimento = cd_area_procedimento_w))
	and	dt_proc_regra_w		between coalesce(dt_inicio_vigencia, dt_proc_regra_w - 1) and coalesce(dt_fim_vigencia, dt_proc_regra_w + 1)
	order by a.ie_estrutura desc,
		coalesce(a.cd_procedimento,0),
		coalesce(a.cd_grupo_proc,0),
		coalesce(a.cd_especialidade,0),
		coalesce(a.cd_area_procedimento,0),
		coalesce(a.nr_seq_grupo_servico,0);

C02 CURSOR FOR
	SELECT	a.nr_seq_prestador_pgto,
		a.vl_coleta
	from	pls_exame_coleta_pgto	a
	where	a.nr_seq_prestador	= nr_seq_prestador_exec_w
	and	a.ie_situacao		= 'A'
	and	dt_preco_w between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia, dt_preco_w)
	order by a.dt_inicio_vigencia;


BEGIN

select	count(1)
into STRICT	qt_regra_coleta_w
from	pls_exame_coleta a
where	a.ie_situacao = 'A';

/* Se tem regra de coleta */

if (qt_regra_coleta_w > 0) then

	select	a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_conta,
		b.nr_seq_prestador_exec,
		coalesce(b.cd_guia_referencia,b.cd_guia),
		b.nr_seq_segurado,
		to_char(a.dt_inicio_proc,'hh24:mi:ss'),
		to_char(a.dt_fim_proc,'hh24:mi:ss'),
		a.dt_procedimento,
		coalesce(a.dt_procedimento, clock_timestamp())
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_conta_w,
		nr_seq_prestador_exec_w,
		cd_guia_referencia_w,
		nr_seq_segurado_w,
		dt_inicio_proc_w,
		dt_fim_proc_w,
		dt_procedimento_w,
		dt_proc_regra_w
	from	pls_conta	b,
		pls_conta_proc	a
	where	a.nr_seq_conta	= b.nr_sequencia
	and	a.nr_sequencia	= nr_sequencia_p;

	select	count(1)
	into STRICT	qt_regra_coleta_prest_w
	from	pls_exame_coleta a
	where	a.nr_seq_prestador	= nr_seq_prestador_exec_w
	and	a.ie_situacao = 'A';

	if (qt_regra_coleta_prest_w > 0) then

		/* Felipe - OS 269758 - Verificar se já foi feita a cobrança da taxa para esse procedimento na conta
		     Diego OS 296325 - Esta consistência é realziada na pls_atualizar_conta_resumo*/
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_conta_proc	a,
			pls_conta	b
		where	b.nr_sequencia	= a.nr_seq_conta
		and	((b.cd_guia_referencia			= cd_guia_referencia_w)
		or (b.cd_guia				= cd_guia_referencia_w))
		and	b.nr_seq_segurado			= nr_seq_segurado_w
		and	to_char(a.dt_inicio_proc,'hh24:mi:ss')	= dt_inicio_proc_w
		and	dt_procedimento				= dt_procedimento_w
		and	a.cd_procedimento			= cd_procedimento_w
		and	a.ie_origem_proced			= ie_origem_proced_w
		and	a.nr_sequencia				!= nr_sequencia_p
		and	((coalesce(a.ie_glosa::text, '') = '')	or (a.ie_glosa	= 'N'))
		and	vl_exame_coleta				> 0;


		SELECT * FROM pls_obter_estrut_proc(cd_procedimento_w, ie_origem_proced_w, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w;

		dt_preco_w	:= pls_obter_data_preco_item(nr_sequencia_p, 'P');

		open C01;
		loop
		fetch C01 into
			nr_seq_regra_ww,
			nr_seq_grupo_servico_w,
			ie_estrutura_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			ie_grupo_servico_w	:= 'S';
			/* Grupo de serviços */

			if (coalesce(nr_seq_grupo_servico_w,0) > 0) then
				ie_grupo_servico_w	:= pls_se_grupo_preco_servico(nr_seq_grupo_servico_w, cd_procedimento_w, ie_origem_proced_w);
			end if;

			if (ie_grupo_servico_w	= 'S') then
				if (ie_estrutura_w		= 'S') then
					nr_seq_regra_w	:= nr_seq_regra_ww;
				else
					nr_seq_regra_w	:= 0;
				end if;
			end if;
			end;
		end loop;
		close C01;

		if (coalesce(nr_seq_regra_w,0) > 0) then
			open C02;
			loop
			fetch C02 into
				nr_seq_prestador_pgto_w,
				vl_coleta_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
			end loop;
			close C02;

			if (qt_registro_w <> 0) then
				vl_coleta_w	:= 0;
			end if;

			update	pls_conta_proc
			set	nr_seq_exame_coleta		= nr_seq_regra_w,
				vl_exame_coleta			= vl_coleta_w,
				nr_seq_prest_pgto_coleta	= nr_seq_prestador_pgto_w
			where	nr_sequencia			= nr_sequencia_p;

			commit;
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_define_exame_coleta ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

