-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intpd_recebe_tit_pagar_baixa (nr_sequencia_p bigint, xml_p xml ) AS $body$
DECLARE


_ora2pg_r RECORD;
titulo_pagar_baixa_w		titulo_pagar_baixa%rowtype;
titulo_pagar_baixa_cc_w		titulo_pagar_baixa_cc%rowtype;
titulo_pagar_imposto_w		titulo_pagar_imposto%rowtype;

ie_conversao_w			intpd_eventos_sistema.ie_conversao%type;
nr_seq_sistema_w		intpd_eventos_sistema.nr_seq_sistema%type;
nr_seq_projeto_xml_w		intpd_eventos_sistema.nr_seq_projeto_xml%type;
nr_seq_regra_w			conversao_meio_externo.nr_seq_regra%type;
ie_sistema_externo_w		varchar(15);
reg_integracao_w		gerar_int_padrao.reg_integracao_conv;
ds_erro_w			varchar(4000);
qt_reg_w			bigint;
ds_log_w			varchar(4000) := '';

C01 CURSOR FOR
SELECT	*
from	xmltable('/STRUCTURE/PAYABLE_DOCUMENT_SETTLEMENT' passing xml_p columns
			nr_titulo			bigint	path   	'NR_PAYABLE_DOCUMENT',
			dt_baixa			varchar(40)	path	'DT_SETTLEMENT',
			cd_moeda               		integer	path	'CD_CURRENCY',
			dt_atualizacao         		varchar(40)	path	'DT_UPDATE',
			nm_usuario             		varchar(15)	path	'NM_USER',
			cd_tipo_baixa          		integer	path	'CD_SETTLEMENT_TYPE',
			vl_baixa               		varchar(20)	path	'VL_SETTLEMENT',
			vl_descontos           		varchar(20)	path	'VL_DISCOUNT',
			vl_juros               		varchar(20)	path	'VL_INTEREST',
			vl_multa               		varchar(20)	path	'VL_PENALTY_FEE',
			vl_devolucao			varchar(20)	path	'VL_DEVOLUTION',
			xml_titulo_pagar_baixa_cc	xml		path	'PAYABLE_DOCUMENT_SETTLEMENT_CCS',
			xml_titulo_pagar_imposto	xml		path	'TAX_PAYABLE_DOCUMENTS');
c01_w	c01%rowtype;

C02 CURSOR FOR
SELECT	*
from	xmltable('/PAYABLE_DOCUMENT_SETTLEMENT_CCS/PAYABLE_DOCUMENT_SETTLEMENT_CC' passing c01_w.xml_titulo_pagar_baixa_cc columns
			nr_titulo              		bigint	path	'NR_DOCUMENT',
			cd_centro_custo        		integer	path	'CD_COST_CENTER',
			vl_baixa               		varchar(20)	path	'VL_SETTLEMENT',
			dt_atualizacao         		varchar(40)	path	'DT_UPDATE',
			nm_usuario             		varchar(15)	path	'NM_USER');
c02_w	c02%rowtype;

C03 CURSOR FOR
SELECT	*
from	xmltable('/TAX_PAYABLE_DOCUMENTS/TAX_PAYABLE_DOCUMENT' passing c01_w.xml_titulo_pagar_imposto columns
			nr_titulo      			bigint	path	'NR_PAYABLE_DOCUMENT',
			cd_tributo     			bigint	path	'CD_TAX',
			ie_pago_prev   			varchar(1)	path	'IE_PREVIOUS_PAYMENT',
			dt_atualizacao 			varchar(40)	path	'DT_UPDATE',
			nm_usuario     			varchar(15)	path	'NM_USER',
			dt_imposto     			varchar(40)	path	'DT_TAX',
			vl_base_calculo			varchar(20)	path	'VL_CALCULATION_BASIS',
			vl_imposto     			varchar(20)	path	'VL_TAX',
			vl_nao_retido     		varchar(20)	path	'VL_NOT_WITHHELD',
			ie_vencimento         		varchar(40)	path	'IE_DUE_DATE',
			vl_base_nao_retido		varchar(20)	path	'VL_NOT_WITHHELD_BASIS',
			vl_trib_adic          		varchar(20)	path	'VL_ADDITIONAL_TAX',
			vl_base_adic          		varchar(20)	path	'VL_ADDITIONAL_TAX_BASIS');
c03_w	c03%rowtype;

BEGIN

update	intpd_fila_transmissao
set	ie_status	 = 'R'
where	nr_sequencia = nr_sequencia_p;

commit;

begin

select	coalesce(b.ie_conversao,'I'),
	nr_seq_sistema,
	nr_seq_projeto_xml,
	nr_seq_regra_conv
into STRICT	ie_conversao_w,
	nr_seq_sistema_w,
	nr_seq_projeto_xml_w,
	nr_seq_regra_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia = nr_sequencia_p;

ie_sistema_externo_w	:=	nr_seq_sistema_w;

/*'Alimenta as informações iniciais de controle e consistência de cada atributo do XML'*/

reg_integracao_w.nr_seq_fila_transmissao	:=	nr_sequencia_p;
reg_integracao_w.ie_envio_recebe		:=	'R';
reg_integracao_w.ie_sistema_externo		:=	ie_sistema_externo_w;
reg_integracao_w.ie_conversao			:=	ie_conversao_w;
reg_integracao_w.nr_seq_projeto_xml		:=	nr_seq_projeto_xml_w;
reg_integracao_w.nr_seq_regra_conversao		:=	nr_seq_regra_w;
reg_integracao_w.intpd_log_receb.delete;
reg_integracao_w.qt_reg_log			:=	0;

open C01;
loop
fetch C01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	reg_integracao_w.nm_tabela	:=	'TITULO_PAGAR_BAIXA';
	reg_integracao_w.nm_elemento	:=	'PAYABLE_DOCUMENT_SETTLEMENT';
	reg_integracao_w.nr_seq_visao	:=	'';

	/*Tentar achar o título no Tasy para inserir a baixa.*/

	select 	max(a.nr_titulo)
	into STRICT	titulo_pagar_baixa_w.nr_titulo
	from	titulo_pagar a
	where	coalesce(a.nr_titulo,0) <> 0
	and	trim(both a.nr_titulo) = trim(both c01_w.nr_titulo);

	if (coalesce(titulo_pagar_baixa_w.nr_titulo::text, '') = '') then
		/*Tentar achar o título através de nr_externo no Tasy para inserir a baixa.*/

		select 	max(a.nr_titulo)
		into STRICT	titulo_pagar_baixa_w.nr_titulo
		from	titulo_pagar a
		where	coalesce(a.nr_titulo_externo,'X') <> 'X'
		and	trim(both a.nr_titulo_externo) = trim(both c01_w.nr_titulo);
	end if;

	if (coalesce(titulo_pagar_baixa_w.nr_titulo::text, '') = '') then
		/*Tentar achar o título no Tasy através de nr_sistema_ant para inserir a baixa.*/

		select 	max(a.nr_titulo)
		into STRICT	titulo_pagar_baixa_w.nr_titulo
		from	titulo_pagar a
		where	coalesce(a.nr_sistema_ant,'X') <> 'X'
		and	trim(both a.nr_sistema_ant) = trim(both c01_w.nr_titulo);
	end if;

	if (coalesce(titulo_pagar_baixa_w.nr_titulo::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(790734,'nr_titulo='||c01_w.nr_titulo);
	end if;

	if (coalesce(c01_w.dt_atualizacao::text, '') = '') then
		c01_w.dt_atualizacao := clock_timestamp();
	end if;

	if (coalesce(c01_w.vl_descontos::text, '') = '') then
		c01_w.vl_descontos := 0;
	end if;

	if (coalesce(c01_w.vl_juros::text, '') = '') then
		c01_w.vl_juros := 0;
	end if;

	if (coalesce(c01_w.vl_multa::text, '') = '') then
		c01_w.vl_multa := 0;
	end if;

	if (coalesce(c01_w.vl_devolucao::text, '') = '') then
		c01_w.vl_devolucao := 0;
	end if;

	if (coalesce(c01_w.nm_usuario::text, '') = '') then
		c01_w.nm_usuario := 'TASY';
	end if;

	SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_BAIXA', c01_w.dt_baixa, 'N', titulo_pagar_baixa_w.dt_baixa) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_baixa_w.dt_baixa := _ora2pg_r.ds_valor_retorno_p;
	SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MOEDA', c01_w.cd_moeda, 'S', titulo_pagar_baixa_w.cd_moeda) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_baixa_w.cd_moeda := _ora2pg_r.ds_valor_retorno_p;
	SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', c01_w.dt_atualizacao, 'N', titulo_pagar_baixa_w.dt_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_baixa_w.dt_atualizacao := _ora2pg_r.ds_valor_retorno_p;
	SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c01_w.nm_usuario, 'N', titulo_pagar_baixa_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_baixa_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
	SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_TIPO_BAIXA', c01_w.cd_tipo_baixa, 'S', titulo_pagar_baixa_w.cd_tipo_baixa) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_baixa_w.cd_tipo_baixa := _ora2pg_r.ds_valor_retorno_p;
	SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_BAIXA', c01_w.vl_baixa, 'N', titulo_pagar_baixa_w.vl_baixa) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_baixa_w.vl_baixa := _ora2pg_r.ds_valor_retorno_p;
	SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_DESCONTOS', c01_w.vl_descontos, 'N', titulo_pagar_baixa_w.vl_descontos) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_baixa_w.vl_descontos := _ora2pg_r.ds_valor_retorno_p;
	SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_JUROS', c01_w.vl_juros, 'N', titulo_pagar_baixa_w.vl_juros) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_baixa_w.vl_juros := _ora2pg_r.ds_valor_retorno_p;
	SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_MULTA', c01_w.vl_multa, 'N', titulo_pagar_baixa_w.vl_multa) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_baixa_w.vl_multa := _ora2pg_r.ds_valor_retorno_p;
	SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_DEVOLUCAO', c01_w.vl_devolucao, 'N', titulo_pagar_baixa_w.vl_devolucao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_baixa_w.vl_devolucao := _ora2pg_r.ds_valor_retorno_p;

	if (reg_integracao_w.qt_reg_log = 0) then

		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	titulo_pagar_baixa_w.nr_sequencia
		from	titulo_pagar_baixa
		where	nr_titulo = titulo_pagar_baixa_w.nr_titulo;

		titulo_pagar_baixa_w.ie_acao := 'I'; -- Ação sempre será inclusão, mesmo nos estornos...
		insert into titulo_pagar_baixa	values (titulo_pagar_baixa_w.*);

		CALL atualizar_saldo_tit_pagar(titulo_pagar_baixa_w.nr_titulo, titulo_pagar_baixa_w.nm_usuario);

	end if;

	open C02;
	loop
	fetch C02 into
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		reg_integracao_w.nm_tabela	:=	'TITULO_PAGAR_BAIXA_CC';
		reg_integracao_w.nm_elemento	:=	'PAYABLE_DOCUMENT_SETTLEMENT_CC';
		reg_integracao_w.nr_seq_visao	:=	'';

		titulo_pagar_baixa_cc_w.nr_titulo := titulo_pagar_baixa_w.nr_titulo;
		titulo_pagar_baixa_cc_w.nr_seq_baixa := titulo_pagar_baixa_w.nr_sequencia;

		if (coalesce(c02_w.dt_atualizacao::text, '') = '') then
			c02_w.dt_atualizacao := clock_timestamp();
		end if;

		if (coalesce(c02_w.nm_usuario::text, '') = '') then
			c02_w.nm_usuario := 'TASY';
		end if;

		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CENTRO_CUSTO', c02_w.cd_centro_custo, 'S', titulo_pagar_baixa_cc_w.cd_centro_custo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_baixa_cc_w.cd_centro_custo := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_BAIXA', c02_w.vl_baixa, 'N', titulo_pagar_baixa_cc_w.vl_baixa) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_baixa_cc_w.vl_baixa := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', c02_w.dt_atualizacao, 'N', titulo_pagar_baixa_cc_w.dt_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_baixa_cc_w.dt_atualizacao := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c02_w.nm_usuario, 'N', titulo_pagar_baixa_cc_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_baixa_cc_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;

		if (reg_integracao_w.qt_reg_log = 0) then

			select	nextval('titulo_pagar_baixa_cc_seq')
			into STRICT	titulo_pagar_baixa_cc_w.nr_sequencia
			;

			insert into titulo_pagar_baixa_cc values (titulo_pagar_baixa_cc_w.*);

		end if;
		end;
	end loop;
	close C02;

	open C03;
	loop
	fetch C03 into
		c03_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		reg_integracao_w.nm_tabela	:=	'TITULO_PAGAR_IMPOSTO';
		reg_integracao_w.nm_elemento	:=	'TAX_PAYABLE_DOCUMENT';
		reg_integracao_w.nr_seq_visao	:=	'';

		titulo_pagar_imposto_w.nr_titulo := titulo_pagar_baixa_w.nr_titulo;

		if (coalesce(c03_w.dt_atualizacao::text, '') = '') then
			c03_w.dt_atualizacao := clock_timestamp();
		end if;

		if (coalesce(c03_w.nm_usuario::text, '') = '') then
			c03_w.nm_usuario := 'TASY';
		end if;

		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_TRIBUTO', c03_w.cd_tributo, 'S', titulo_pagar_imposto_w.cd_tributo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_imposto_w.cd_tributo := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_PAGO_PREV', c03_w.ie_pago_prev, 'S', titulo_pagar_imposto_w.ie_pago_prev) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_imposto_w.ie_pago_prev := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', c03_w.dt_atualizacao, 'N', titulo_pagar_imposto_w.dt_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_imposto_w.dt_atualizacao := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c03_w.nm_usuario, 'N', titulo_pagar_imposto_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_imposto_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_IMPOSTO', c03_w.dt_imposto, 'N', titulo_pagar_imposto_w.dt_imposto) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_imposto_w.dt_imposto := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_BASE_CALCULO', c03_w.vl_base_calculo, 'N', titulo_pagar_imposto_w.vl_base_calculo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_imposto_w.vl_base_calculo := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_IMPOSTO', c03_w.vl_imposto, 'N', titulo_pagar_imposto_w.vl_imposto) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_imposto_w.vl_imposto := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_NAO_RETIDO', c03_w.vl_nao_retido, 'N', titulo_pagar_imposto_w.vl_nao_retido) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_imposto_w.vl_nao_retido := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_VENCIMENTO', c03_w.ie_vencimento, 'S', titulo_pagar_imposto_w.ie_vencimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_imposto_w.ie_vencimento := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_BASE_NAO_RETIDO', c03_w.vl_base_nao_retido, 'N', titulo_pagar_imposto_w.vl_base_nao_retido) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_imposto_w.vl_base_nao_retido := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_TRIB_ADIC', c03_w.vl_trib_adic, 'N', titulo_pagar_imposto_w.vl_trib_adic) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_imposto_w.vl_trib_adic := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_BASE_ADIC', c03_w.vl_base_adic, 'N', titulo_pagar_imposto_w.vl_base_adic) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_pagar_imposto_w.vl_base_adic := _ora2pg_r.ds_valor_retorno_p;

		if (reg_integracao_w.qt_reg_log = 0) then

			select	nextval('titulo_pagar_imposto_seq')
			into STRICT	titulo_pagar_imposto_w.nr_sequencia
			;

			insert into titulo_pagar_imposto	values (titulo_pagar_imposto_w.*);

		end if;

		end;
	end loop;
	close C03;

	end;
end loop;
close C01;
exception
when others then
	begin
	/*'Em caso de qualquer falha o sistema captura a mensagem de erro, efetua o rollback, atualiza o status para Erro e registra a falha ocorrida'*/

	ds_erro_w	:= substr(sqlerrm,1,4000);
	rollback;
	update	intpd_fila_transmissao
	set	ie_status 	= 'E',
		ds_log 		= ds_erro_w
	where	nr_sequencia 	= nr_sequencia_p;

	end;
end;

if (reg_integracao_w.qt_reg_log > 0) then
	begin
	/*'Em caso de qualquer consistência o sistema efetua rollback, atualiza o status para Erro e registra todos os logs de consistência'*/

	rollback;

	update	intpd_fila_transmissao
	set	ie_status 	= 'E',
		ds_log 		= ds_erro_w
	where	nr_sequencia 	= nr_sequencia_p;

	for i in 0..reg_integracao_w.qt_reg_log-1 loop
		intpd_gravar_log_recebimento(nr_sequencia_p,reg_integracao_w.intpd_log_receb[i].ds_log,'INTPDTASY');
	end loop;
	end;
else
	update	intpd_fila_transmissao
	set	ie_status = 'S',
		nr_seq_documento = titulo_pagar_baixa_w.nr_titulo,
		nr_seq_item_documento = titulo_pagar_baixa_w.nr_sequencia
	where	nr_sequencia = nr_sequencia_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intpd_recebe_tit_pagar_baixa (nr_sequencia_p bigint, xml_p xml ) FROM PUBLIC;

