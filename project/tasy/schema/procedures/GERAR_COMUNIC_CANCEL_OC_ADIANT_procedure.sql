-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_comunic_cancel_oc_adiant ( nr_ordem_compra_p bigint, nr_seq_motivo_cancel_p bigint, ds_observacao_p text, nm_usuario_p text) AS $body$
DECLARE

 
 
qt_regras_w			bigint;
ds_titulo_w			regra_envio_comunic_evento.ds_titulo%type;
ds_comunicado_w			varchar(4000);
nr_adiantamento_w			ordem_compra_adiant_pago.nr_adiantamento%type;
cd_cgc_fornecedor_w		pessoa_juridica.cd_cgc%type;
ds_fornecedor_w			pessoa_juridica.ds_razao_social%type;
nm_usuario_comprador_w		usuario.nm_usuario%type;
nm_usuario_solicitante_w		usuario.nm_usuario%type;
dt_adiantamento_w			adiantamento_pago.dt_adiantamento%type;
vl_total_ordem_w			ordem_compra_item.vl_unitario_material%type;
ds_motivo_cancel_w		motivo_cancel_sc_oc.ds_motivo%type;
vl_adiantamento_w			adiantamento_pago.vl_adiantamento%type;
nr_titulo_original_w			adiantamento_pago.nr_titulo_original%type;
nr_seq_regra_w			regra_envio_comunic_evento.nr_sequencia%type;
cd_perfil_w			perfil.cd_perfil%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
nr_seq_classif_w			comunic_interna_classif.nr_sequencia%type;
nr_sequencia_w			comunic_interna.nr_sequencia%type;
nm_usuarios_adic_w		regra_envio_comunic_evento.nm_usuarios_adic%type;
qt_existe_w			bigint;
ie_ci_lida_w			varchar(1);
ds_setor_adicional_w     	  	varchar(2000) := '';
ds_lista_adiant_w			varchar(4000) := '';
ds_lista_adiant_valor_w		varchar(4000) := '';
ds_lista_titulos_w			varchar(4000) := '';
nm_usuario_destino_w		varchar(255) := '';
cd_setor_regra_usuario_w		regra_envio_comunic_usu.cd_setor_atendimento%type;
dt_cancelamento_w		varchar(50);
vl_vinculado_w			ordem_compra_adiant_pago.vl_vinculado%type;

c00 CURSOR FOR 
SELECT	b.nr_sequencia, 
	b.cd_perfil, 
	b.nm_usuarios_adic 
into STRICT	nr_seq_regra_w, 
	cd_perfil_w, 
	nm_usuarios_adic_w 
from	regra_envio_comunic_compra a, 
	regra_envio_comunic_evento b 
where	a.nr_sequencia = b.nr_seq_regra 
and	a.cd_funcao = 917 
and	b.cd_evento = 81 
and	b.ie_situacao = 'A' 
and	cd_estabelecimento = cd_estabelecimento_w 
and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,nr_ordem_compra_p,'OC',obter_perfil_ativo,nm_usuario_p,null),1,1) = 'S';
	
c01 CURSOR FOR 
SELECT	nr_adiantamento, 
	vl_vinculado 
from	ordem_compra_adiant_pago 
where	nr_ordem_compra = nr_ordem_compra_p;

c05 CURSOR FOR 
SELECT	coalesce(a.cd_setor_atendimento,0) cd_setor_atendimento 
from	regra_envio_comunic_usu a 
where	a.nr_seq_evento = nr_seq_regra_w;


BEGIN 
 
select	cd_estabelecimento 
into STRICT	cd_estabelecimento_w 
from	ordem_compra 
where	nr_ordem_compra = nr_ordem_compra_p;
 
select	count(*) 
into STRICT	qt_regras_w 
from	regra_envio_comunic_compra a, 
	regra_envio_comunic_evento b 
where	a.nr_sequencia = b.nr_seq_regra 
and	a.cd_funcao = 917 
and	b.cd_evento = 81 
and	b.ie_situacao = 'A' 
and	cd_estabelecimento = cd_estabelecimento_w 
and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,nr_ordem_compra_p,'OC',obter_perfil_ativo,nm_usuario_p,null),1,1) = 'S';
 
select	count(*) 
into STRICT	qt_existe_w 
from	ordem_compra_adiant_pago 
where	nr_ordem_compra = nr_ordem_compra_p;
 
if (qt_existe_w > 0) and (qt_regras_w > 0) then 
 
	open C00;
	loop 
	fetch C00 into	 
		nr_seq_regra_w, 
		cd_perfil_w, 
		nm_usuarios_adic_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */
		begin 
		 
		select	cd_cgc_fornecedor, 
			substr(obter_nome_pf_pj(null,cd_cgc_fornecedor),1,100), 
			substr(obter_usuario_pessoa(cd_comprador),1,15), 
			substr(obter_usuario_pessoa(cd_pessoa_solicitante),1,15), 
			obter_valor_liquido_ordem(nr_ordem_compra) 
		into STRICT	cd_cgc_fornecedor_w, 
			ds_fornecedor_w, 
			nm_usuario_comprador_w, 
			nm_usuario_solicitante_w, 
			vl_total_ordem_w 
		from	ordem_compra 
		where	nr_ordem_compra = nr_ordem_compra_p;
		 
		select	obter_motivo_cancel_oc(nr_seq_motivo_cancel_p) 
		into STRICT	ds_motivo_cancel_w 
		;
		 
		open C01;
		loop 
		fetch C01 into	 
			nr_adiantamento_w, 
			vl_vinculado_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
 
			select	vl_adiantamento, 
				nr_titulo_original 
			into STRICT	vl_adiantamento_w, 
				nr_titulo_original_w 
			from	adiantamento_pago 
			where	nr_adiantamento = nr_adiantamento_w;
			 
					 
			ds_lista_adiant_w		:= substr(ds_lista_adiant_w || nr_adiantamento_w || chr(13) || chr(10),1,4000);
   --344204 = - Valor: 
			ds_lista_adiant_valor_w		:= substr(ds_lista_adiant_valor_w || nr_adiantamento_w || obter_desc_expressao(344204) || campo_mascara_virgula_casas(vl_adiantamento_w,4) || chr(13) || chr(10),1,4000);
			 
			if (nr_titulo_original_w > 0) then 
				ds_lista_titulos_w	:= substr(ds_lista_titulos_w || nr_titulo_original_w || chr(13) || chr(10),1,4000);
			end if;
			 
			 
			open C05;
			loop 
			fetch C05 into	 
				cd_setor_regra_usuario_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin 
				if (cd_setor_regra_usuario_w <> 0) and (obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N') then 
					ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
				end if;
				end;
			end loop;
			close C05;
 
			end;
		end loop;
		close C01;
		 
		nm_usuario_destino_w	:= obter_usuarios_comunic_compras(nr_ordem_compra_p, null, 81, nr_seq_regra_w, nm_usuario_p);
		 
		if (nm_usuarios_adic_w <> '') then 
			nm_usuario_destino_w := substr(nm_usuario_destino_w || ',' || nm_usuarios_adic_w,1,255);
		end if;
		 
		 
		if (nm_usuario_destino_w IS NOT NULL AND nm_usuario_destino_w::text <> '') or (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then 
		 
			dt_cancelamento_w	:= PKG_DATE_FORMATERS.TO_VARCHAR(clock_timestamp(), 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.GET_NM_USUARIO);
		 
			select	max(substr(ds_titulo,1,80)), 
				max(substr(ds_comunicacao,1,4000)) 
			into STRICT	ds_titulo_w, 
				ds_comunicado_w 
			from	regra_envio_comunic_evento 
			where	nr_sequencia = nr_seq_regra_w;
 
			ds_comunicado_w	:= substr(replace_macro(ds_comunicado_w, '@nr_ordem', nr_ordem_compra_p), 1, 4000);
			ds_comunicado_w	:= substr(replace_macro(ds_comunicado_w, '@nr_adiant', ds_lista_adiant_w), 1, 4000);
			ds_comunicado_w	:= substr(replace_macro(ds_comunicado_w, '@nr_valor_adiant', ds_lista_adiant_valor_w), 1, 4000);
			ds_comunicado_w	:= substr(replace_macro(ds_comunicado_w, '@nr_titulo', ds_lista_titulos_w), 1, 4000);
			ds_comunicado_w	:= substr(replace_macro(ds_comunicado_w, '@cg_cnpj_fornecedor', cd_cgc_fornecedor_w), 1, 4000);
			ds_comunicado_w	:= substr(replace_macro(ds_comunicado_w, '@ds_fornecedor', ds_fornecedor_w), 1, 4000);
			ds_comunicado_w	:= substr(replace_macro(ds_comunicado_w, '@vl_ordem', campo_mascara_virgula_casas(vl_total_ordem_w,4)), 1, 4000);
			ds_comunicado_w	:= substr(replace_macro(ds_comunicado_w, '@vl_adiantamento', campo_mascara_virgula_casas(vl_vinculado_w,4)), 1, 4000);
			ds_comunicado_w	:= substr(replace_macro(ds_comunicado_w, '@ds_motivo_cancel',ds_motivo_cancel_w), 1, 4000);
			ds_comunicado_w	:= substr(replace_macro(ds_comunicado_w, '@nm_usuario',nm_usuario_p), 1, 4000);
			ds_comunicado_w	:= substr(replace_macro(ds_comunicado_w, '@ds_motivo_cancel',ds_motivo_cancel_w), 1, 4000);
			ds_comunicado_w	:= substr(replace_macro(ds_comunicado_w, '@dt_cancelamento',dt_cancelamento_w), 1, 4000);
			ds_comunicado_w	:= substr(replace_macro(ds_comunicado_w, '@ds_observacao', ds_observacao_p), 1, 4000);
 
			select	coalesce(ie_ci_lida,'N') 
			into STRICT	ie_ci_lida_w 
			from 	regra_envio_comunic_evento 
			where 	nr_sequencia = nr_seq_regra_w;
 
			select	obter_classif_comunic('F') 
			into STRICT	nr_seq_classif_w 
			;
				 
			select	nextval('comunic_interna_seq') 
			into STRICT	nr_sequencia_w 
			;	
 
			if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then 
				cd_perfil_w := cd_perfil_w ||',';
			end if;	
 
						 
			insert into comunic_interna( 
				dt_comunicado, 
				ds_titulo, 
				ds_comunicado, 
				nm_usuario, 
				dt_atualizacao, 
				ie_geral, 
				nm_usuario_destino, 
				nr_sequencia, 
				ie_gerencial, 
				nr_seq_classif, 
				dt_liberacao, 
				ds_perfil_adicional, 
				ds_setor_adicional) 
			values (	clock_timestamp(), 
				ds_titulo_w, 
				ds_comunicado_w, 
				nm_usuario_p, 
				clock_timestamp(), 
				'N', 
				nm_usuario_destino_w, 
				nr_sequencia_w, 
				'N', 
				nr_seq_classif_w, 
				clock_timestamp(), 
				cd_perfil_w, 
				ds_setor_adicional_w);
 
			/*Para que a comunicação seja gerada como lida ao próprio usuário */
 
			if (ie_ci_lida_w = 'S') then 
				insert into comunic_interna_lida(nr_sequencia,nm_usuario,dt_atualizacao)values (nr_sequencia_w,nm_usuario_p,clock_timestamp());
			end if;
		end if;
		end;
	end loop;
	close C00;
	 
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_comunic_cancel_oc_adiant ( nr_ordem_compra_p bigint, nr_seq_motivo_cancel_p bigint, ds_observacao_p text, nm_usuario_p text) FROM PUBLIC;

