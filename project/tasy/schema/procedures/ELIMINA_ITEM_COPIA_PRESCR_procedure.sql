-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE elimina_item_copia_prescr ( nr_prescricao_p bigint, ds_nutr_dieta_oral_p text, ds_nutr_suplemento_p text, ds_nutr_sne_p text, ds_nutr_npt_p text, ds_solucao_p text, ds_medicamento_p text, ds_material_p text, ds_procedimento_p text, ds_recomendacao_p text, ds_banco_sangue_p text, ds_oxigenioterapia_p text, ds_hemod_prescricao_p text, ds_hemod_solucao_p text, ds_hemod_medicamento_p text, ds_anatomia_patologica_p text, ds_citopatologico_p text, ds_histopatologico_p text, ds_gasoterapia_p text, ds_nutr_npt_ped_p text, ds_nutr_leitderv_p text) AS $body$
DECLARE


nm_usuario_w			varchar(15);
ie_origem_inf_w			varchar(1);
nr_seq_leite_deriv_w	bigint;
nr_sequencia_w			bigint;
ie_verif_w				bigint;
ds_item_w				varchar(255);
ie_tipo_item_w			varchar(15);
ie_possui_dados_w		varchar(1);
nr_seq_registro_w		varchar(15);
qt_registros_w			bigint;
ds_hemod_prescricao_w	varchar(4000);
nr_prescricao_orig_w	bigint;
nr_sequencia_hd_w		bigint;
cd_protocolo_w			bigint;
nr_seq_mat_protocolo_w		integer;
nr_seq_protocolo_w		integer;
ie_princ_grupo_rotina_w	    	varchar(1);
nr_seq_grupo_w			bigint;

/* Tipos de itens */

C00 CURSOR FOR
	SELECT	distinct ie_tipo_item
	from	rep_item_eliminado
	where	nr_prescricao = nr_prescricao_p
	and		IE_FORMA_APRESENTACAO = 'N'
	order by 1;

/* Nutrições - Dieta Oral */

C01 CURSOR FOR
	SELECT	nr_sequencia,
		'         ' || substr(obter_nome_dieta(cd_dieta),1,240) ds_item,
		'D' ie_tipo_item
	from	prescr_dieta
	where	obter_se_contido(nr_sequencia, '('||ds_nutr_dieta_oral_p||')') = 'S'
	and	nr_prescricao = nr_prescricao_p
	order by 2;


/* Nutrições - Suporte Nutricional Enteral */

C02 CURSOR FOR
	SELECT	nr_sequencia,
		'         ' || substr(obter_desc_material(cd_material),1,240) ds_item,
		'S' ie_tipo_item
	from	prescr_material
	where	obter_se_contido(nr_sequencia, '('||ds_nutr_sne_p||')') = 'S'
	and	ie_agrupador = 8
	and	nr_prescricao = nr_prescricao_p
	order by 2;

/* Nutrições - Suplemento Oral */

C03 CURSOR FOR
	SELECT	nr_sequencia,
		'         ' || substr(obter_desc_material(cd_material),1,240) ds_item,
		'SNE' ie_tipo_item
	from	prescr_material
	where	obter_se_contido(nr_sequencia, '('||ds_nutr_suplemento_p||')') = 'S'
	and	ie_agrupador = 12
	and	nr_prescricao = nr_prescricao_p
	order by 2;

/* Nutrições - NPT Adulta (Protocolo) */

C04 CURSOR FOR
	SELECT	nr_sequencia,
		'         ' || substr(CASE WHEN ie_forma='P' THEN  wheb_mensagem_pck.get_texto(307375) || ' ' || obter_desc_prot_npt(nr_seq_protocolo)  ELSE obter_valor_dominio(1988,ie_forma) END ,1,200) ds_item, -- Protocolo
		'NAN' ie_tipo_item
	from	nut_pac
	where	obter_se_contido(nr_sequencia, '('||ds_nutr_npt_p||')') = 'S'
	and	nr_prescricao = nr_prescricao_p
	order by 2;

/* Nutrições - NPT Pediátrica */

C05 CURSOR FOR
	SELECT	nr_sequencia,
		'         ' || 'NPT ' || wheb_mensagem_pck.get_texto(307376) ds_item, -- Pediátrica
		'NAP' ie_tipo_item
	from	nut_pac
	where	obter_se_contido(nr_sequencia, '('||ds_nutr_npt_ped_p||')') = 'S'
	and	nr_prescricao = nr_prescricao_p
	order by 2;

/* Soluções */

C06 CURSOR FOR
	SELECT	nr_seq_solucao,
		'         ' || substr(coalesce(ds_solucao, obter_Concat_comp_sol(nr_prescricao, nr_seq_solucao)),1,240) ds_item,
		'SOL' ie_tipo_item
	from	prescr_solucao
	where	obter_se_contido(nr_seq_solucao, '('||ds_solucao_p||')') = 'S'
	and	coalesce(ie_hemodialise,'N')	= 'N'
	and	nr_prescricao = nr_prescricao_p
	order by 2;

/* Medicamentos */

C07 CURSOR FOR
	SELECT	nr_sequencia,
		'         ' || substr(obter_desc_material(cd_material),1,240) ds_item,
		'M' ie_tipo_item,
		cd_protocolo,
		nr_seq_protocolo,
		nr_seq_mat_protocolo
	from	prescr_material
	where	coalesce(nr_sequencia_solucao::text, '') = ''
	and	coalesce(nr_sequencia_proc::text, '') = ''
	and	coalesce(nr_sequencia_dieta::text, '') = ''
	and	coalesce(nr_sequencia_diluicao::text, '') = ''
	and	obter_se_contido(nr_sequencia, '('||ds_medicamento_p||')') = 'S'
	and	ie_agrupador = 1
	and	nr_prescricao = nr_prescricao_p
	order by 2;

/* Materiais */

C08 CURSOR FOR
	SELECT	nr_sequencia,
		'         ' || substr(obter_desc_material(cd_material),1,240) ds_item,
		'MAT' ie_tipo_item
	from	prescr_material
	where	obter_se_contido(nr_sequencia, '('||ds_material_p||')') = 'S'
	and	ie_agrupador = 2
	and	nr_prescricao = nr_prescricao_p
	order by 2;

/* Procedimentos */

C09 CURSOR FOR
	SELECT	nr_sequencia,
			'         ' || substr(coalesce(obter_protocolo_descricao(cd_protocolo,nr_seq_protocolo,cd_procedimento,ie_origem_proced,'P',null),obter_desc_prescr_proc(cd_procedimento,ie_origem_proced, nr_seq_proc_interno)),1,240) ds_item,
			'P' ie_tipo_item
	from	prescr_procedimento
	where	obter_se_contido(nr_sequencia, '('||ds_procedimento_p||')') = 'S'
	and		nr_prescricao = nr_prescricao_p
	order by 2;

/* Recomendações */

C10 CURSOR FOR
	SELECT	nr_sequencia,
			'         ' || substr(CASE WHEN coalesce(cd_recomendacao::text, '') = '' THEN  ds_recomendacao  ELSE obter_descricao_padrao('TIPO_RECOMENDACAO','DS_TIPO_RECOMENDACAO',cd_recomendacao) END ,1,240) ds_item,
			'R' ie_tipo_item
	from	prescr_recomendacao
	where	obter_se_contido(nr_sequencia, '('||ds_recomendacao_p||')') = 'S'
	and		nr_prescricao = nr_prescricao_p
	order by 2;

/* Banco de sangue */

C11 CURSOR FOR
	SELECT	nr_sequencia,
			'         ' || substr(coalesce(obter_protocolo_descricao(cd_protocolo,nr_seq_protocolo,null,null,'HM',nr_seq_item_prot),wheb_mensagem_pck.get_texto(307378) ||': ' || ds_diagnostico),1,240) ds_item, -- Diagnóstico
			'HM' ie_tipo_item
	from	prescr_solic_bco_sangue
	where	obter_se_contido(nr_sequencia, '('||ds_banco_sangue_p||')') = 'S'
	and		nr_prescricao = nr_prescricao_p
	order by 2;

/* Oxigenioterapia */

C12 CURSOR FOR
	SELECT	nr_sequencia,
			'         ' || substr(obter_desc_prescr_proc(cd_procedimento,ie_origem_proced, nr_seq_proc_interno),1,240) ds_item,
			'O' ie_tipo_item
	from	prescr_procedimento
	where	obter_se_contido(nr_sequencia, '('||ds_oxigenioterapia_p||')') = 'S'
	and		nr_prescricao = nr_prescricao_p
	order by 2;

/* Hemodiálise - Prescrição */

C13 CURSOR FOR
	SELECT	nr_sequencia,
			'         ' || substr(obter_valor_dominio(1934, ie_tipo_hemodialise),1,240) ds_item,
			'DI' ie_tipo_item
	from	hd_prescricao
	where	ds_hemod_prescricao_w like '%' || nr_sequencia || '%'
	and		nr_prescricao = nr_prescricao_p
	order by 2;

/* Hemodiálise - Soluções */

C14 CURSOR FOR
	SELECT	nr_seq_solucao,
			'         ' || substr(coalesce(obter_desc_prot_npt(nr_seq_protocolo),obter_prim_comp_sol(nr_prescricao,nr_seq_solucao)),1,240) ds_item,
			'DIS' ie_tipo_item
	from	prescr_solucao
	where	ds_hemod_solucao_p like '%' || nr_seq_solucao || '%'
	and		coalesce(ie_hemodialise,'N')	= 'S'
	and		nr_prescricao = nr_prescricao_p
	order by 2;

/* Hemodiálise - Medicamentos */

C15 CURSOR FOR
	SELECT	nr_sequencia,
			'         ' || substr(obter_desc_material(cd_material),1,240) ds_item,
			'ME' ie_tipo_item
	from	prescr_material
	where	coalesce(nr_sequencia_solucao::text, '') = ''
	and		coalesce(nr_sequencia_proc::text, '') = ''
	and		coalesce(nr_sequencia_dieta::text, '') = ''
	and		coalesce(nr_sequencia_diluicao::text, '') = ''
	and		obter_se_contido(nr_sequencia, '('||ds_hemod_medicamento_p||')') = 'S'
	and		ie_agrupador		= 14
	and		nr_prescricao = nr_prescricao_p
	order by 2;

/* Exames de anatomia patológica */

C16 CURSOR FOR
	SELECT	nr_sequencia,
			'         ' || substr(obter_desc_prescr_proc(cd_procedimento,ie_origem_proced, nr_seq_proc_interno),1,240) ds_item,
			'EAP' ie_tipo_item
	from	prescr_procedimento
	where	ds_anatomia_patologica_p like '%' || nr_sequencia || '%'
	and		nr_prescricao = nr_prescricao_p
	order by 2;

/* Exame Citopatológico do Colo do Útero */

C17 CURSOR FOR
	SELECT	nr_sequencia,
			'         ' || wheb_mensagem_pck.get_texto(307379) ds_item, -- Colo do Útero
			'ECCU' ie_tipo_item
	from	prescr_citopatologico
	where	ds_citopatologico_p	like '%' || nr_sequencia || '%'
	and		nr_prescricao = nr_prescricao_p
	order by 2;

/* Exame Histopatológico do Colo do Útero */

C18 CURSOR FOR
	SELECT	nr_sequencia,
			'         ' || wheb_mensagem_pck.get_texto(307379) ds_item, -- Colo do Útero
			'EHCU' ie_tipo_item
	from	prescr_histopatologico
	where	ds_histopatologico_p like '%' || nr_sequencia || '%'
	and		nr_prescricao = nr_prescricao_p
	order by 2;

/* Gasoterapia */

C19 CURSOR FOR
	SELECT	nr_sequencia,
			'         ' || substr(obter_descricao_padrao('GAS', 'DS_GAS', nr_seq_gas),1,240) ds_item,
			'O' ie_tipo_item
	from	prescr_gasoterapia
	where	obter_se_contido(nr_sequencia, '('||ds_gasoterapia_p||')') = 'S'
	and		nr_prescricao = nr_prescricao_p
	order by 2;

/* Leites e derivados */

C20 CURSOR FOR
	SELECT	nr_sequencia,
			'         ' || substr(obter_desc_material(cd_material),1,240) ds_item,
			'LDP' ie_tipo_item,
			nr_seq_leite_deriv
	from	prescr_material
	where	obter_se_contido(nr_sequencia, '('||ds_nutr_leitderv_p||')') = 'S'
	and		ie_agrupador = 16
	and		nr_prescricao = nr_prescricao_p
	order by 2;

/* Hemodiálises a serem excluídas - Prescrição */

C21 CURSOR FOR
	SELECT	nr_sequencia
	from	hd_prescricao
	where	nr_sequencia <> nr_sequencia_hd_w
	and		nr_prescricao = nr_prescricao_p
	order by nr_sequencia;

C22 CURSOR FOR
	SELECT	a.nr_sequencia,
		'         ' || SUBSTR(obter_desc_material(a.cd_material),1,240) ds_item,
		'M' ie_tipo_item
	FROM	prescr_material a,
		protocolo_medic_material b
	WHERE	coalesce(a.nr_sequencia_solucao::text, '') = ''
	AND	coalesce(a.nr_sequencia_proc::text, '') = ''
	AND	coalesce(a.nr_sequencia_dieta::text, '') = ''
	AND	coalesce(a.nr_sequencia_diluicao::text, '') = ''
	AND	a.nr_seq_protocolo = b.nr_sequencia
	AND 	a.nr_seq_mat_protocolo =	b.nr_seq_material
	AND	a.cd_protocolo = b.cd_protocolo
	AND	a.ie_agrupador = 1
	AND	a.nr_prescricao =    nr_prescricao_p
	AND	a.cd_protocolo  =    cd_protocolo_w
	AND	a.nr_seq_protocolo =  nr_seq_protocolo_w
	AND	b.nr_seq_grupo =   nr_seq_grupo_w
	AND     coalesce(ie_princ_grupo_rotina,'N') = 'N'
	order by 2;


BEGIN
/* Seleciona o usuário da prescrição para terminar a origem da informação */

select	max(nm_usuario)
into STRICT	nm_usuario_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

/* Nutrições - Dieta Oral */

if (ds_nutr_dieta_oral_p IS NOT NULL AND ds_nutr_dieta_oral_p::text <> '') then

	open C01;
	loop
	fetch C01 into
		nr_sequencia_w,
		ds_item_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

		insert into rep_item_eliminado(
						nr_sequencia,
						nr_prescricao,
						nr_seq_item,
						ds_item,
						ie_tipo_item,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						ie_forma_apresentacao
					) values (
						nr_seq_registro_w,
						nr_prescricao_p,
						nr_sequencia_w,
						ds_item_w,
						ie_tipo_item_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_w,
						nm_usuario_w,
						'N');

		delete from prescr_dieta
		where	nr_sequencia = nr_sequencia_w
		and		nr_prescricao = nr_prescricao_p;

		end;
	end loop;
	close C01;
end if;


/* Nutrições - Suplemento Oral */

if (ds_nutr_sne_p IS NOT NULL AND ds_nutr_sne_p::text <> '') then

	open C02;
	loop
	fetch C02 into
		nr_sequencia_w,
		ds_item_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

		insert into rep_item_eliminado(
			nr_sequencia,
			nr_prescricao,
			nr_seq_item,
			ds_item,
			ie_tipo_item,
			dt_atualizacao,
			dt_atualizacao_nrec,
			nm_usuario,
			nm_usuario_nrec,
			ie_forma_apresentacao
		) values (
			nr_seq_registro_w,
			nr_prescricao_p,
			nr_sequencia_w,
			ds_item_w,
			ie_tipo_item_w,
			clock_timestamp(),
			clock_timestamp(),
			nm_usuario_w,
			nm_usuario_w,
			'N');

		delete from prescr_material
		where	nr_sequencia = nr_sequencia_w
		and	nr_prescricao = nr_prescricao_p;

		end;
	end loop;
	close C02;
end if;

/* Nutrições - Suporte Nutricional Enteral */

if (ds_nutr_suplemento_p IS NOT NULL AND ds_nutr_suplemento_p::text <> '') then
	open C03;
	loop
	fetch C03 into
		nr_sequencia_w,
		ds_item_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

		insert into rep_item_eliminado(
			nr_sequencia,
			nr_prescricao,
			nr_seq_item,
			ds_item,
			ie_tipo_item,
			dt_atualizacao,
			dt_atualizacao_nrec,
			nm_usuario,
			nm_usuario_nrec,
			ie_forma_apresentacao
		) values (
			nr_seq_registro_w,
			nr_prescricao_p,
			nr_sequencia_w,
			ds_item_w,
			ie_tipo_item_w,
			clock_timestamp(),
			clock_timestamp(),
			nm_usuario_w,
			nm_usuario_w,
			'N');

		delete from prescr_material
		where	nr_sequencia = nr_sequencia_w
		and	nr_prescricao = nr_prescricao_p;

		end;
	end loop;
	close C03;
end if;

/* Nutrições - NPT Adulta (Protocolo) */

if (ds_nutr_npt_p IS NOT NULL AND ds_nutr_npt_p::text <> '') then
	open C04;
	loop
	fetch C04 into
		nr_sequencia_w,
		ds_item_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

		insert into rep_item_eliminado(
						nr_sequencia,
						nr_prescricao,
						nr_seq_item,
						ds_item,
						ie_tipo_item,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						ie_forma_apresentacao
					) values (
						nr_seq_registro_w,
						nr_prescricao_p,
						nr_sequencia_w,
						ds_item_w,
						ie_tipo_item_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_w,
						nm_usuario_w,
						'N');

		delete from nut_pac
		where	nr_sequencia = nr_sequencia_w
		and		nr_prescricao = nr_prescricao_p;

		end;
	end loop;
	close C04;
end if;

/* Nutrições - NPT Pediátrica */

if (ds_nutr_npt_ped_p IS NOT NULL AND ds_nutr_npt_ped_p::text <> '') then
	open C05;
	loop
	fetch C05 into
		nr_sequencia_w,
		ds_item_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin
		select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

		insert into rep_item_eliminado(
						nr_sequencia,
						nr_prescricao,
						nr_seq_item,
						ds_item,
						ie_tipo_item,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						ie_forma_apresentacao
					) values (
						nr_seq_registro_w,
						nr_prescricao_p,
						nr_sequencia_w,
						ds_item_w,
						ie_tipo_item_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_w,
						nm_usuario_w,
						'N');

		delete from nut_pac
		where	nr_sequencia = nr_sequencia_w
		and		nr_prescricao = nr_prescricao_p;

		end;
	end loop;
	close C05;
end if;

/* Soluções */

if (ds_solucao_p IS NOT NULL AND ds_solucao_p::text <> '') then
	open C06;
	loop
	fetch C06 into
		nr_sequencia_w,
		ds_item_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		begin
		select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

		insert into rep_item_eliminado(
						nr_sequencia,
						nr_prescricao,
						nr_seq_item,
						ds_item,
						ie_tipo_item,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						ie_forma_apresentacao
					) values (
						nr_seq_registro_w,
						nr_prescricao_p,
						nr_sequencia_w,
						ds_item_w,
						ie_tipo_item_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_w,
						nm_usuario_w,
						'N');

		delete from prescr_solucao
		where	nr_seq_solucao = nr_sequencia_w
		and		nr_prescricao = nr_prescricao_p;

		end;
	end loop;
	close C06;
	/* Reordenações */

	CALL reordenar_solucoes(nr_prescricao_p);
end if;

/* Medicamentos */

if (ds_medicamento_p IS NOT NULL AND ds_medicamento_p::text <> '') then
	open C07;
	loop
	fetch C07 into
		nr_sequencia_w,
		ds_item_w,
		ie_tipo_item_w,
		cd_protocolo_w,
		nr_seq_protocolo_w,
		nr_seq_mat_protocolo_w;
	EXIT WHEN NOT FOUND; /* apply on C07 */
		if (cd_protocolo_w IS NOT NULL AND cd_protocolo_w::text <> '') and (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') and (nr_seq_mat_protocolo_w IS NOT NULL AND nr_seq_mat_protocolo_w::text <> '') then
			Select	max(coalesce(ie_princ_grupo_rotina,'N')),
				max(nr_seq_grupo)
			into STRICT	ie_princ_grupo_rotina_w,
				nr_seq_grupo_w
			from 	protocolo_medic_material
			where	cd_protocolo		= cd_protocolo_w
			and	nr_seq_material		= nr_seq_mat_protocolo_w
			and	nr_sequencia		= nr_seq_protocolo_w;

		end if;


		begin
		select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

		insert into rep_item_eliminado(
						nr_sequencia,
						nr_prescricao,
						nr_seq_item,
						ds_item,
						ie_tipo_item,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						ie_forma_apresentacao
					) values (
						nr_seq_registro_w,
						nr_prescricao_p,
						nr_sequencia_w,
						ds_item_w,
						ie_tipo_item_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_w,
						nm_usuario_w,
						'N');

		delete from prescr_material
		where	nr_sequencia = nr_sequencia_w
		and		nr_prescricao = nr_prescricao_p;

		CALL excluir_medic_kit(nr_prescricao_p, nr_sequencia_w);


		if  ((ie_princ_grupo_rotina_w = 'S') and (obter_se_repres_grupo_prot(cd_protocolo_w,nr_seq_grupo_w,nr_seq_protocolo_w) = 'S')) then

			open C22;
			loop
			fetch C22 into
				nr_sequencia_w,
				ds_item_w,
				ie_tipo_item_w;
			EXIT WHEN NOT FOUND; /* apply on C22 */
				begin
				select	nextval('rep_item_eliminado_seq')
				into STRICT	nr_seq_registro_w
				;

				insert into rep_item_eliminado(
								nr_sequencia,
								nr_prescricao,
								nr_seq_item,
								ds_item,
								ie_tipo_item,
								dt_atualizacao,
								dt_atualizacao_nrec,
								nm_usuario,
								nm_usuario_nrec,
								ie_forma_apresentacao
							) values (
								nr_seq_registro_w,
								nr_prescricao_p,
								nr_sequencia_w,
								ds_item_w,
								ie_tipo_item_w,
								clock_timestamp(),
								clock_timestamp(),
								nm_usuario_w,
								nm_usuario_w,
								'N');

				delete from prescr_material
				where	nr_sequencia = nr_sequencia_w
				and	nr_prescricao = nr_prescricao_p;

				end;
			end loop;
			close C22;
		end if;
		end;
	end loop;
	close C07;
	/* Reordenações */

	CALL reordenar_medicamento(nr_prescricao_p);
end if;

/* Materiais */

if (ds_material_p IS NOT NULL AND ds_material_p::text <> '') then
	open C08;
	loop
	fetch C08 into
		nr_sequencia_w,
		ds_item_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on C08 */
		begin
		select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

		insert into rep_item_eliminado(
						nr_sequencia,
						nr_prescricao,
						nr_seq_item,
						ds_item,
						ie_tipo_item,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						ie_forma_apresentacao
					) values (
						nr_seq_registro_w,
						nr_prescricao_p,
						nr_sequencia_w,
						ds_item_w,
						ie_tipo_item_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_w,
						nm_usuario_w,
						'N');

		delete from prescr_material
		where	nr_sequencia = nr_sequencia_w
		and		nr_prescricao = nr_prescricao_p;

		end;
	end loop;
	close C08;
end if;

/* Procedimentos */

if (ds_procedimento_p IS NOT NULL AND ds_procedimento_p::text <> '') then
	open C09;
	loop
	fetch C09 into
		nr_sequencia_w,
		ds_item_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on C09 */
		begin
		select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

		insert into rep_item_eliminado(
						nr_sequencia,
						nr_prescricao,
						nr_seq_item,
						ds_item,
						ie_tipo_item,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						ie_forma_apresentacao
					) values (
						nr_seq_registro_w,
						nr_prescricao_p,
						nr_sequencia_w,
						ds_item_w,
						ie_tipo_item_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_w,
						nm_usuario_w,
						'N');

		delete from prescr_procedimento
		where	nr_sequencia = nr_sequencia_w
		and		nr_prescricao = nr_prescricao_p;

		end;
	end loop;
	close C09;
	/* Reordenações */

	CALL reordenar_procedimento(nr_prescricao_p);
end if;

/* Recomendações */

if (ds_recomendacao_p IS NOT NULL AND ds_recomendacao_p::text <> '') then
	open C10;
	loop
	fetch C10 into
		nr_sequencia_w,
		ds_item_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on C10 */
		begin
		select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

		insert into rep_item_eliminado(
						nr_sequencia,
						nr_prescricao,
						nr_seq_item,
						ds_item,
						ie_tipo_item,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						ie_forma_apresentacao
					) values (
						nr_seq_registro_w,
						nr_prescricao_p,
						nr_sequencia_w,
						ds_item_w,
						ie_tipo_item_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_w,
						nm_usuario_w,
						'N');

		delete from prescr_recomendacao
		where	nr_sequencia = nr_sequencia_w
		and		nr_prescricao = nr_prescricao_p;

		end;
	end loop;
	close C10;
	/* Reordenações */

	CALL reordenar_recomendacao(nr_prescricao_p);
end if;

/* Banco de Sangue */

if (ds_banco_sangue_p IS NOT NULL AND ds_banco_sangue_p::text <> '') then
	open C11;
	loop
	fetch C11 into
		nr_sequencia_w,
		ds_item_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on C11 */
		begin
		select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

		insert into rep_item_eliminado(
						nr_sequencia,
						nr_prescricao,
						nr_seq_item,
						ds_item,
						ie_tipo_item,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						ie_forma_apresentacao
					) values (
						nr_seq_registro_w,
						nr_prescricao_p,
						nr_sequencia_w,
						ds_item_w,
						ie_tipo_item_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_w,
						nm_usuario_w,
						'N');

		delete from prescr_solic_bco_sangue
		where	nr_sequencia = nr_sequencia_w
		and		nr_prescricao = nr_prescricao_p;

		end;
	end loop;
	close C11;
end if;

/* Oxigenioterapia */

if (ds_oxigenioterapia_p IS NOT NULL AND ds_oxigenioterapia_p::text <> '') then
	open C12;
	loop
	fetch C12 into
		nr_sequencia_w,
		ds_item_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on C12 */
		begin
		select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

		insert into rep_item_eliminado(
						nr_sequencia,
						nr_prescricao,
						nr_seq_item,
						ds_item,
						ie_tipo_item,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						ie_forma_apresentacao
					) values (
						nr_seq_registro_w,
						nr_prescricao_p,
						nr_sequencia_w,
						ds_item_w,
						ie_tipo_item_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_w,
						nm_usuario_w,
						'N');

		delete from prescr_procedimento
		where	nr_sequencia = nr_sequencia_w
		and		nr_prescricao = nr_prescricao_p;

		end;
	end loop;
	close C12;
	CALL reordenar_procedimento(nr_prescricao_p);
end if;

ds_hemod_prescricao_w	:= coalesce(trim(both ds_hemod_prescricao_p), '0');

-- Esta rotina trata para que a prescrição possua somente 1 Hemodiálise --- Hudson 04/04/2013
begin
if (ds_hemod_prescricao_w <> '0') then
	select	count(*)
	into STRICT	qt_registros_w
	from	hd_prescricao
	where	ds_hemod_prescricao_w not like '%' || nr_sequencia || '%'
	and		nr_prescricao = nr_prescricao_p;
else
	select	count(*)
	into STRICT	qt_registros_w
	from	hd_prescricao
	where	nr_prescricao = nr_prescricao_p;
end if;

if (qt_registros_w > 1) then
		select	coalesce(max(a.nr_sequencia),0)
		into STRICT	nr_sequencia_hd_w
		from	hd_prescricao a
		where	a.nr_prescricao_original = (	SELECT	max(b.nr_prescricao_original)
												from	hd_prescricao b
												where	b.nr_prescricao = a.nr_prescricao)
		and		ds_hemod_prescricao_w not like '%' || a.nr_sequencia || '%'
		and		a.nr_prescricao = nr_prescricao_p;

		open C21;
		loop
		fetch C21 into
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on C21 */
			begin
			ds_hemod_prescricao_w	:= ds_hemod_prescricao_w || ',' || nr_sequencia_w;
			end;
		end loop;
		close C21;
end if;
end;

/* Hemodiálise - Prescrição */

if (ds_hemod_prescricao_w <> '0')  then

	open C13;
	loop
	fetch C13 into
		nr_sequencia_w,
		ds_item_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on C13 */
		begin
		select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

		insert into rep_item_eliminado(
						nr_sequencia,
						nr_prescricao,
						nr_seq_item,
						ds_item,
						ie_tipo_item,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						ie_forma_apresentacao
					) values (
						nr_seq_registro_w,
						nr_prescricao_p,
						nr_sequencia_w,
						ds_item_w,
						ie_tipo_item_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_w,
						nm_usuario_w,
						'N');

		delete from hd_prescricao
		where	nr_sequencia = nr_sequencia_w
		and		nr_prescricao = nr_prescricao_p;

		end;
	end loop;
	close C13;
end if;

/* Hemodiálise - Soluções */

if (ds_hemod_solucao_p IS NOT NULL AND ds_hemod_solucao_p::text <> '') then
	open C14;
	loop
	fetch C14 into
		nr_sequencia_w,
		ds_item_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on C14 */
		begin
		select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

		insert into rep_item_eliminado(
						nr_sequencia,
						nr_prescricao,
						nr_seq_item,
						ds_item,
						ie_tipo_item,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						ie_forma_apresentacao
					) values (
						nr_seq_registro_w,
						nr_prescricao_p,
						nr_sequencia_w,
						ds_item_w,
						ie_tipo_item_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_w,
						nm_usuario_w,
						'N');

		delete from prescr_solucao
		where	nr_seq_solucao = nr_sequencia_w
		and		nr_prescricao = nr_prescricao_p;

		end;
	end loop;
	close C14;
end if;

/* Hemodiálise - Medicamentos */

if (ds_hemod_medicamento_p IS NOT NULL AND ds_hemod_medicamento_p::text <> '') then
	open C15;
	loop
	fetch C15 into
		nr_sequencia_w,
		ds_item_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on C15 */
		begin
		select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

		insert into rep_item_eliminado(
						nr_sequencia,
						nr_prescricao,
						nr_seq_item,
						ds_item,
						ie_tipo_item,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						ie_forma_apresentacao
					) values (
						nr_seq_registro_w,
						nr_prescricao_p,
						nr_sequencia_w,
						ds_item_w,
						ie_tipo_item_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_w,
						nm_usuario_w,
						'N');

		delete from prescr_material
		where	nr_sequencia = nr_sequencia_w
		and		nr_prescricao = nr_prescricao_p;

		end;
	end loop;
	close C15;
	/* Reordenações */

	CALL reordenar_medicamento(nr_prescricao_p);
end if;

/* Exames de anatomia patológica */

if (ds_anatomia_patologica_p IS NOT NULL AND ds_anatomia_patologica_p::text <> '') then
	open C16;
	loop
	fetch C16 into
		nr_sequencia_w,
		ds_item_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on C16 */
		begin
		select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

		insert into rep_item_eliminado(
						nr_sequencia,
						nr_prescricao,
						nr_seq_item,
						ds_item,
						ie_tipo_item,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						ie_forma_apresentacao
					) values (
						nr_seq_registro_w,
						nr_prescricao_p,
						nr_sequencia_w,
						ds_item_w,
						ie_tipo_item_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_w,
						nm_usuario_w,
						'N');

		delete from prescr_procedimento
		where	nr_sequencia = nr_sequencia_w
		and		nr_prescricao = nr_prescricao_p;

		end;
	end loop;
	close C16;
	/* Reordenações */

	CALL reordenar_procedimento(nr_prescricao_p);
end if;

/* Exame Citopatológico do Colo do Útero */

if (ds_citopatologico_p IS NOT NULL AND ds_citopatologico_p::text <> '') then
	open C17;
	loop
	fetch C17 into
		nr_sequencia_w,
		ds_item_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on C17 */
		begin
		select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

		insert into rep_item_eliminado(
						nr_sequencia,
						nr_prescricao,
						nr_seq_item,
						ds_item,
						ie_tipo_item,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						ie_forma_apresentacao
					) values (
						nr_seq_registro_w,
						nr_prescricao_p,
						nr_sequencia_w,
						ds_item_w,
						ie_tipo_item_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_w,
						nm_usuario_w,
						'N');

		delete from prescr_citopatologico
		where	nr_sequencia = nr_sequencia_w
		and		nr_prescricao = nr_prescricao_p;

		end;
	end loop;
	close C17;
end if;

/* Exame Histopatológico do Colo do Útero */

if (ds_histopatologico_p IS NOT NULL AND ds_histopatologico_p::text <> '') then
	open C18;
	loop
	fetch C18 into
		nr_sequencia_w,
		ds_item_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on C18 */
		begin
		select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

		insert into rep_item_eliminado(
						nr_sequencia,
						nr_prescricao,
						nr_seq_item,
						ds_item,
						ie_tipo_item,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						ie_forma_apresentacao
					) values (
						nr_seq_registro_w,
						nr_prescricao_p,
						nr_sequencia_w,
						ds_item_w,
						ie_tipo_item_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_w,
						nm_usuario_w,
						'N');

		delete from prescr_histopatologico
		where	nr_sequencia = nr_sequencia_w
		and		nr_prescricao = nr_prescricao_p;

		end;
	end loop;
	close C18;
end if;

/* Gasoterapia */

if (ds_gasoterapia_p IS NOT NULL AND ds_gasoterapia_p::text <> '') then
	open C19;
	loop
	fetch C19 into
		nr_sequencia_w,
		ds_item_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on C19 */
		begin
		select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

		insert into rep_item_eliminado(
						nr_sequencia,
						nr_prescricao,
						nr_seq_item,
						ds_item,
						ie_tipo_item,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						ie_forma_apresentacao
					) values (
						nr_seq_registro_w,
						nr_prescricao_p,
						nr_sequencia_w,
						ds_item_w,
						ie_tipo_item_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_w,
						nm_usuario_w,
						'N');

		delete from prescr_gasoterapia
		where	nr_sequencia = nr_sequencia_w
		and		nr_prescricao = nr_prescricao_p;

		end;
	end loop;
	close C19;
end if;

/* Leites e derivados - Produtos lactários */

if (ds_nutr_leitderv_p IS NOT NULL AND ds_nutr_leitderv_p::text <> '') then
	open C20;
	loop
	fetch C20 into
		nr_sequencia_w,
		ds_item_w,
		ie_tipo_item_w,
		nr_seq_leite_deriv_w;
	EXIT WHEN NOT FOUND; /* apply on C20 */
		begin
		select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

		insert into rep_item_eliminado(
						nr_sequencia,
						nr_prescricao,
						nr_seq_item,
						ds_item,
						ie_tipo_item,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						ie_forma_apresentacao
					) values (
						nr_seq_registro_w,
						nr_prescricao_p,
						nr_sequencia_w,
						ds_item_w,
						ie_tipo_item_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_w,
						nm_usuario_w,
						'N');

		-- Deleta os itens associados ao produto
		delete	from prescr_material
		where	ie_agrupador = 17
		and		nr_seq_material = nr_sequencia_w
		and		nr_prescricao = nr_prescricao_p;

		-- Deleta o produto que não foi selecionado
		delete from prescr_material
		where	nr_sequencia = nr_sequencia_w
		and		nr_prescricao = nr_prescricao_p;

		-- Deleta o produto que não foi selecionado
		delete	from prescr_material
		where	ie_agrupador = 16
		and		nr_sequencia = nr_sequencia_w
		and		nr_prescricao = nr_prescricao_p;

		-- Verifica se existe mais algum produto para leires e derivados
		select	coalesce(max('S'),'N')
		into STRICT	ie_possui_dados_w
		from	prescr_material
		where	ie_agrupador = 16
		and		nr_seq_leite_deriv = nr_seq_leite_deriv_w
		and		nr_prescricao = nr_prescricao_p;

		-- Se não existir apaga o registro da tabela prescr_leite_deriv
		if (ie_possui_dados_w = 'N') then
			delete	from prescr_leite_deriv
			where	nr_sequencia = nr_seq_leite_deriv_w
			and		nr_prescricao = nr_prescricao_p;
		end if;

		end;
	end loop;
	close C20;
end if;

commit;

open C00;
loop
fetch C00 into
	ie_tipo_item_w;
EXIT WHEN NOT FOUND; /* apply on C00 */
	begin
	select	nextval('rep_item_eliminado_seq')
		into STRICT	nr_seq_registro_w
		;

	if (ie_tipo_item_w = 'D') then
		ds_item_w := upper(wheb_mensagem_pck.get_texto(307400)); -- DIETAS ORAIS
	elsif (ie_tipo_item_w = 'S') then
		ds_item_w := upper(wheb_mensagem_pck.get_texto(307381)); -- SUPLEMENTOS ORAIS
	elsif (ie_tipo_item_w = 'SNE') then
		ds_item_w := upper(wheb_mensagem_pck.get_texto(307382)); -- SUPORTE NUTRICIONAL ENTERAL
	elsif (ie_tipo_item_w = 'NAN') then
		ds_item_w := upper(wheb_mensagem_pck.get_texto(307383)); -- NPT ADULTA (PROTOCOLO)
	elsif (ie_tipo_item_w = 'NAP') then
		ds_item_w := upper(wheb_mensagem_pck.get_texto(307384)); -- NPT PEDIÁTRICA
	elsif (ie_tipo_item_w = 'SOL') then
		ds_item_w := upper(wheb_mensagem_pck.get_texto(307385)); -- SOLUÇÕES
	elsif (ie_tipo_item_w = 'M') then
		ds_item_w := upper(wheb_mensagem_pck.get_texto(307386)); -- MEDICAMENTOS
	elsif (ie_tipo_item_w = 'MAT') then
		ds_item_w := upper(wheb_mensagem_pck.get_texto(307387)); -- MATERIAIS
	elsif (ie_tipo_item_w = 'P') then
		ds_item_w := upper(wheb_mensagem_pck.get_texto(307388)); -- PROCEDIMENTOS
	elsif (ie_tipo_item_w = 'R') then
		ds_item_w := upper(wheb_mensagem_pck.get_texto(307390)); -- RECOMENDAÇÕES
	elsif (ie_tipo_item_w = 'HM') then
		ds_item_w := upper(wheb_mensagem_pck.get_texto(307391)); -- HEMOTERAPIA
	elsif (ie_tipo_item_w = '0') then
		ds_item_w := upper(wheb_mensagem_pck.get_texto(307392)); -- GASOTERAPIA
	elsif (ie_tipo_item_w = 'DI') then
		ds_item_w := upper(wheb_mensagem_pck.get_texto(307393)); -- HEMODIÁLISE
	elsif (ie_tipo_item_w = 'DIS') then
		ds_item_w := upper(wheb_mensagem_pck.get_texto(307394)); -- SOLUÇÕES DA HEMODIÁLISE
	elsif (ie_tipo_item_w = 'ME') then
		ds_item_w := upper(wheb_mensagem_pck.get_texto(307395)); -- MEDICAMENTOS DA HEMODIÁLISE
	elsif (ie_tipo_item_w = 'EAP') then
		ds_item_w := upper(wheb_mensagem_pck.get_texto(307396)); -- EXAMES PATOLÓGICOS
	elsif (ie_tipo_item_w = 'ECCU') then
		ds_item_w := upper(wheb_mensagem_pck.get_texto(307397)); -- EXAMES CITOPATOLÓGICOS
	elsif (ie_tipo_item_w = 'EHCU') then
		ds_item_w := upper(wheb_mensagem_pck.get_texto(307398)); -- EXAMES HISTOPATOLÓGICOS
	elsif (ie_tipo_item_w = 'LDP') then
		ds_item_w := upper(wheb_mensagem_pck.get_texto(307399)); -- LEITES E DERIVADOS
	end if;

	insert into rep_item_eliminado(
					nr_sequencia,
					nr_prescricao,
					nr_seq_item,
					ds_item,
					ie_tipo_item,
					dt_atualizacao,
					dt_atualizacao_nrec,
					nm_usuario,
					nm_usuario_nrec,
						ie_forma_apresentacao
				) values (
					nr_seq_registro_w,
					nr_prescricao_p,
					null,
					'-> '||ds_item_w,
					ie_tipo_item_w,
					clock_timestamp(),
					clock_timestamp(),
					nm_usuario_w,
					nm_usuario_w,
					'N');
	end;
end loop;
close C00;

/* Determina a origem da informação */

select	coalesce(max('1'),'3')
into STRICT	ie_origem_inf_w
from	medico b,
		usuario a
where 	a.nm_usuario			= nm_usuario_w
and		a.cd_pessoa_fisica		= b.cd_pessoa_fisica;

/* Atualiza origem da informação na prescrição */

update	prescr_medica
set		ie_origem_inf			= ie_origem_inf_w
where	nr_prescricao			= nr_prescricao_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE elimina_item_copia_prescr ( nr_prescricao_p bigint, ds_nutr_dieta_oral_p text, ds_nutr_suplemento_p text, ds_nutr_sne_p text, ds_nutr_npt_p text, ds_solucao_p text, ds_medicamento_p text, ds_material_p text, ds_procedimento_p text, ds_recomendacao_p text, ds_banco_sangue_p text, ds_oxigenioterapia_p text, ds_hemod_prescricao_p text, ds_hemod_solucao_p text, ds_hemod_medicamento_p text, ds_anatomia_patologica_p text, ds_citopatologico_p text, ds_histopatologico_p text, ds_gasoterapia_p text, ds_nutr_npt_ped_p text, ds_nutr_leitderv_p text) FROM PUBLIC;

