-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ordem_compra_comunic_historico ( nr_sequencia_p bigint, ie_comunic_solic_p text, ie_comunic_aprov_p text, nm_usuario_p text) AS $body$
DECLARE


ds_titulo_w			varchar(50);
ds_comunicado_w			varchar(4000);
nr_ordem_compra_w		bigint;
nr_sequencia_w			bigint;
nr_seq_classif_w			bigint;
nm_usuario_w			varchar(15);
nm_usuario_aprov_w		varchar(15);
ds_lista_usuario_w			varchar(4000);
qt_enviado_w			bigint	:= 0;

c01 CURSOR FOR
SELECT	nm_usuario
from	pessoas_processo_aprovacao_v
where	nr_sequencia in (select	distinct
				x.nr_seq_aprovacao
			from	ordem_compra_item x
			where	x.nr_ordem_compra = nr_ordem_compra_w)
group by	nm_usuario;


BEGIN

select	nr_ordem_compra,
	ds_historico
into STRICT	nr_ordem_compra_w,
	ds_comunicado_w
from	ordem_compra_hist
where	nr_sequencia	= nr_sequencia_p;

/*Histórico da Ordem de compra nº #@NR_ORDEM_COMPRA#@*/

ds_titulo_w	:= wheb_mensagem_pck.get_texto(300265, 'NR_ORDEM_COMPRA=' || nr_ordem_compra_w);

select	obter_classif_comunic('F')
into STRICT	nr_seq_classif_w
;

select	min(b.nm_usuario)
into STRICT	nm_usuario_w
from	usuario b,
	ordem_compra a
where	a.nr_ordem_compra	= nr_ordem_compra_w
and	a.cd_pessoa_solicitante	= b.cd_pessoa_fisica
and a.cd_estabelecimento = b.cd_estabelecimento;

if (nm_usuario_w IS NOT NULL AND nm_usuario_w::text <> '') and (ie_comunic_solic_p = 'S') then
	begin

	select nextval('comunic_interna_seq')
	into STRICT nr_sequencia_w
	;

	insert into comunic_interna(
		dt_comunicado, ds_titulo, ds_comunicado, nm_usuario,
		dt_atualizacao, ie_geral, nm_usuario_destino, nr_sequencia,
		ie_gerencial, nr_seq_classif, dt_liberacao)
	values (
		clock_timestamp(), ds_titulo_w, ds_comunicado_w, nm_usuario_p,
		clock_timestamp(), 'N', nm_usuario_w || ',', nr_sequencia_w, 'N',
		nr_seq_classif_w, clock_timestamp());

	qt_enviado_w	:= qt_enviado_w + 1;

	end;
end if;

if (ie_comunic_aprov_p = 'S') then
	begin

	open c01;
	loop
	fetch c01 into
		nm_usuario_aprov_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		if (coalesce(nm_usuario_aprov_w,'X') <> 'X') then
			ds_lista_usuario_w	:= ds_lista_usuario_w || nm_usuario_aprov_w || ', ';
		end if;

		end;
	end loop;
	close c01;

	if (ds_lista_usuario_w IS NOT NULL AND ds_lista_usuario_w::text <> '') then
		begin

		CALL gerar_comunic_padrao(
			clock_timestamp(),
			ds_titulo_w,
			ds_comunicado_w,
			nm_usuario_p,
			'N',
			ds_lista_usuario_w,
			'N',
			nr_seq_classif_w,
			null,
			null,
			null,
			clock_timestamp(),
			null,
			null);

		qt_enviado_w	:= qt_enviado_w + 1;

		end;
	end if;

	end;
end if;

if (qt_enviado_w > 0) then
	begin

	Insert into ORDEM_COMPRA_ENVIO(
		nr_sequencia, nr_ordem_compra, dt_atualizacao, nm_usuario,
		dt_envio, ie_forma_envio, ds_observacao)
	values (
		nextval('ordem_compra_envio_seq'), nr_ordem_compra_w, clock_timestamp(), nm_usuario_p,
		clock_timestamp(), 'D', wheb_mensagem_pck.get_texto(300266) /*'Aviso de envio da comunicação interna'*/);

	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ordem_compra_comunic_historico ( nr_sequencia_p bigint, ie_comunic_solic_p text, ie_comunic_aprov_p text, nm_usuario_p text) FROM PUBLIC;

