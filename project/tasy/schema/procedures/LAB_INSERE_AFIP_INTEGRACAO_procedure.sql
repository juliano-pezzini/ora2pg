-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_insere_afip_integracao ( nr_prescricao_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE

									  
 
ds_erro_w  		varchar(4000);
ie_status_envio_w	prescr_procedimento.ie_status_atend%type;
ie_status_pos_envio_w prescr_procedimento.ie_status_atend%type;
qt_exames_prescr_w	smallint;
qt_exames_status_w	smallint;
nr_prescricao_w		prescr_procedimento.nr_prescricao%type;
qt_peso_w			real;
qt_altura_cm_w		real;

 
C01 CURSOR FOR 
	SELECT	distinct 
			a.nr_prescricao, 
			ie_status_envio, 
			ie_status_pos_envio 
	from	lab_parametro c, 
			prescr_procedimento a, 
			prescr_medica b 
	where	a.nr_prescricao = b.nr_prescricao 
	and		b.cd_estabelecimento = c.cd_estabelecimento 
	and		a.ie_status_atend = c.ie_status_envio 
	and		coalesce(a.dt_integracao::text, '') = '' 
	and	 	(Obter_Equipamento_Exame(a.nr_seq_exame,null,'AFIP') IS NOT NULL AND (Obter_Equipamento_Exame(a.nr_seq_exame,null,'AFIP'))::text <> '') 
	and		coalesce(a.ie_suspenso,'N') = 'N' 
	and		((coalesce(nr_prescricao_p::text, '') = '' or nr_prescricao_p = 0) or (nr_prescricao_p = nr_prescricao_w)) 
	AND		b.dt_prescricao BETWEEN clock_timestamp() - interval '30 days' AND clock_timestamp() + interval '10 days' 
	and 	a.cd_motivo_baixa = 0 
	order by a.nr_prescricao;
	
--cursor dados para afip 
C02 CURSOR FOR 
	SELECT	a.nr_prescricao, 
			a.nr_sequencia, 
			a.ds_estabelecimento, 
			a.nm_usuario, 
			a.ds_observacao, 
			a.ie_urgencia, 
			a.cd_setor_atendimento, 
			a.cd_medico, 
			a.sg_conselho, 
			a.dt_prescricao, 
			a.dt_liberacao, 
			a.cd_setor_paciente, 
			a.cd_pessoa_fisica, 
			a.nm_paciente, 
			a.dt_nascimento, 
			coalesce(a.ie_sexo,'I') ie_sexo, 
			a.nr_prontuario, 
			a.nm_medico, 
			a.nr_crm, 
			a.uf_crm, 
			a.cd_convenio, 
			a.cd_categoria, 
			a.cd_usuario_convenio, 
			a.dt_validade_carteira, 
			a.nr_doc_convenio, 
			a.ie_tipo_guia, 
			a.ds_convenio, 
			a.cd_cgc_conv, 
			a.cd_regional_conv, 
			a.cd_material_exame, 
			a.ds_material_exame, 
			substr(a.cd_exame,1,8) cd_exame, 
			a.nm_exame, 
			a.ds_setor_paciente, 
			a.cd_unidade, 
			a.cd_unidade_basica, 
			a.cd_unidade_compl, 
			a.cd_estabelecimento, 
			a.cd_exame_integracao, 
---			a.ds_plano_convenio, 
--			a.cd_plano_convenio, 
			a.dt_mestruacao, 
			a.qt_peso, 
			a.qt_altura_cm, 
			a.dt_coleta, 
			a.nm_pessoa_responsavel, 
			a.nr_controle_exame, 
			a.cd_material_integracao, 
			a.dt_cancelamento, 
			a.dt_recoleta 
	from	prescr_laboratorio_afip_v a 
	where	a.nr_prescricao = nr_prescricao_w 
	order by nr_prescricao;

c02_w				C02%rowtype;
 	

BEGIN 
 
/*gravar_log_tasy(30,'wheb_usuario_pck.get_cd_estabelecimento'||wheb_usuario_pck.get_cd_estabelecimento,'AFIP'); 
commit; 
 
select 	MAX(ie_status_envio), 
		MAX(ie_status_pos_envio) 
into 	ie_status_envio_w, 
		ie_status_pos_envio_w 
from	lab_parametro 
where 	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento; 
*/
 
if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then 
	nr_prescricao_w := nr_prescricao_p;
end if;
 
open C01;
loop 
fetch C01 into	 
	nr_prescricao_w, 
	ie_status_envio_w, 
	ie_status_pos_envio_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	--consultar qt exames prescrição 
			 
		--log tasy(89,'dados 1'||qt_exames_prescr_w||' '||qt_exames_status_w||' '||nr_prescricao_w, 'AFIP'); 
		--commit; 
		select 	count(*) 
		into STRICT 	qt_exames_prescr_w 
		from 	prescr_procedimento								 
		where 	nr_prescricao = nr_prescricao_w 
--		and	 	ie_status_atend >= ie_status_envio_w 
		and	 	coalesce(dt_integracao::text, '') = '' 
		and		coalesce(ie_suspenso,'N') = 'N' 
		and		cd_motivo_baixa = 0 
		and	 	(Obter_Equipamento_Exame(nr_seq_exame,null,'AFIP') IS NOT NULL AND (Obter_Equipamento_Exame(nr_seq_exame,null,'AFIP'))::text <> '');
 
		select 	count(*) 
		into STRICT 	qt_exames_status_w 
		from 	prescr_procedimento								 
		where 	nr_prescricao = nr_prescricao_w 
		and	 	ie_status_atend >= ie_status_envio_w 
		and	 	coalesce(dt_integracao::text, '') = '' 
		and		coalesce(ie_suspenso,'N') = 'N' 
		and		cd_motivo_baixa = 0		 
		and	 	(Obter_Equipamento_Exame(nr_seq_exame,null,'AFIP') IS NOT NULL AND (Obter_Equipamento_Exame(nr_seq_exame,null,'AFIP'))::text <> '');			
		 
		--log tasy(89,'dados 2'||qt_exames_prescr_w||' '||qt_exames_status_w||' '||nr_prescricao_w, 'AFIP'); 
		--commit; 
		 
		open C02;
		loop 
		fetch C02 into	 
			c02_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
				 
				if (qt_exames_prescr_w = qt_exames_status_w) then 
					begin 
						--log tasy(89,'Abriu2 '||c02_w.nr_prescricao||'c02_w.cd_exame'||c02_w.cd_exame,'AFIP'); 
						--commit; 
						--qt_peso_w		:= to_char(c02_w.qt_peso,'9D9999'); 
						--qt_altura_cm_w	:= to_char(c02_w.qt_altura_cm,'9D9999'); 
						 
						insert into afip_integracao_tasy(desc_origem, 
										cod_setor, 
										nom_setor, 
										cod_convenio, 
										nom_convenio, 
										nr_os, 
										nrseq_os, 
										exame_id, 
										desc_exame, 
										desc_mnemonico, 
										material, 
										cod_pac, 
										nom_pac, 
										sexo_pac, 
										dt_nascimento, 
										nr_pront_pac, 
										dt_solicitacao, 
										urgente, 
										cod_barras, 
										nr_leito, 
										nr_quarto, 
										cod_medico, 
										nom_medico, 
										nr_cons_medico, 
										nr_crm, 
										situacao, 
										nr_autorizacao, 
										cod_serie_guia, 
										nr_guia, 
										nr_contrato, 
										nr_familia, 
										tp_usuario, 
										dt_recebimento, 
										dt_importacao, 
										dt_coleta, 
										dt_liberacao, 
										dt_cancelamento, 
										dt_nova_coleta, 
										cod_usu_his, 
										nom_usu_his, 
										qtd_exame, 
										url, 
										peso, 
										altura, 
										dt_aplicacao, 
										local_puncao, 
										nom_pai, 
										periodo_ciclo, 
										dum, 
										uso_anticoagulante, 
										observacao, 
										status 
										) 
						values (substr(c02_w.ds_estabelecimento,1,10), 
								c02_w.cd_setor_paciente, 
								c02_w.ds_setor_paciente, 
								c02_w.cd_convenio, 
								c02_w.ds_convenio, 
								c02_w.nr_prescricao, 
								c02_w.nr_sequencia, 
								c02_w.cd_exame, 
								c02_w.nm_exame, 
								c02_w.cd_exame_integracao, 
								c02_w.cd_material_integracao, 
								c02_w.cd_pessoa_fisica, 
								c02_w.nm_paciente, 
								c02_w.ie_sexo, 
								c02_w.dt_nascimento, 
								c02_w.nr_prontuario, 
								c02_w.dt_prescricao, 
								c02_w.ie_urgencia, 
								c02_w.nr_controle_exame, -- barras 
								c02_w.cd_unidade_basica, 
								substr(c02_w.cd_unidade_compl,1,1), 
								c02_w.cd_medico, 
								c02_w.nm_medico, 
								c02_w.sg_conselho, 
								c02_w.nr_crm, 
								'P', -- situação 
								0, -- nr_autorizacao 
								'0', -- COD_SERIE_GUIA 
								0, --NR_GUIA 
								'0', --NR_CONTRATO 
								0,	--nr_familia 
								'', --tp_usuario 
								clock_timestamp(), 
								null, 
								c02_w.dt_coleta, 
								c02_w.dt_liberacao, 
								c02_w.dt_cancelamento, 
								c02_w.dt_recoleta, 
								substr(c02_w.nm_usuario,1,10), 
								c02_w.nm_usuario, 
								to_char(qt_exames_prescr_w), 
								'', 
								null,--qt_peso_w, 
								null,-- qt_altura_cm_w, 
								clock_timestamp(), 
								'', -- local_puncao 
								substr(c02_w.nm_pessoa_responsavel,1,100), 
								c02_w.dt_mestruacao, 
								c02_w.dt_mestruacao, 
								'', 
								substr(c02_w.ds_observacao,1,200), 
								'');
							 
						update 	prescr_procedimento 
						set 	dt_integracao = clock_timestamp(), 
							nm_usuario = nm_usuario_p, 
							dt_atualizacao = clock_timestamp(), 
							ie_status_atend = coalesce(ie_status_pos_envio_w,ie_status_envio_w) 
						where 	nr_prescricao = c02_w.nr_prescricao 
						and	nr_sequencia = c02_w.nr_sequencia;
								 
						commit;
								 
					exception 
					when others then 
						begin 
							ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(278105,'NR_PRESCRICAO='||c02_w.nr_prescricao||';NR_ERRO='||substr(sqlErrm,1,3500));
						end;
					end;
				end if;
			end;
		end loop;
		close C02;
	end;
end loop;
close C01;
 
ds_erro_p := ds_erro_w;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_insere_afip_integracao ( nr_prescricao_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

