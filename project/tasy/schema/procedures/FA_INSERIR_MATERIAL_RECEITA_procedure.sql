-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fa_inserir_material_receita ( nr_atendimento_p bigint, nr_seq_entrega_p bigint, nm_usuario_p text, cd_local_estoque_p bigint, cd_setor_atendimento_p bigint, nr_seq_lote_fornec_p bigint, ie_validou_p INOUT text, ie_medic_conta_p INOUT text ) AS $body$
DECLARE

			
nr_sequencia_w			bigint;
cd_setor_atendimento_w		integer;
dt_entrada_unidade_w		timestamp;
cd_unidade_medida_w		varchar(30);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
nr_seq_atepacu_w			bigint;
dt_cancelamento_w		timestamp;

cd_material_estoque_w		integer;
qt_conv_estoque_consumo_w	double precision;
cd_unidade_medida_estoque_w	varchar(30);
cd_unidade_medida_consumo_w	varchar(30);
ie_consignado_w			varchar(1);
cd_estab_w			integer;
qt_estoque_w			double precision;

cd_material_w			bigint;
cd_material_generico_w	bigint;
qt_material_w			double precision;
cd_unidade_baixa_w		varchar(30);
nr_seq_entrega_item_w		bigint;
nr_atendimento_w			bigint;
ie_status_medicacao_w		varchar(15);
ie_status_mov_estoque_w		varchar(2);
qt_material_em_conta_w		double precision;
qt_medic_conta_w		bigint;
qt_medic_entrega_w		bigint;
dt_alta_w			timestamp;
ie_atend_com_alta_w		varchar(1);
nr_seq_lote_fornec_w		bigint;
qt_item_w			double precision;
cd_cgc_fornecedor_w		varchar(14);
cd_material_lote_forn_w		material_lote_fornec.cd_material%type;
ie_regra_lanc_auto_w		varchar(2);
ie_regra_estoque_negativo_w		varchar(2);


C01 CURSOR FOR
SELECT 	nr_sequencia,
	coalesce(cd_material_subst,cd_material) cd_material,
	cd_material_generico,
	coalesce(qt_material_subst,qt_dispensar) qt_dispensar,
	coalesce(cd_unidade_subst, cd_unidade_baixa) cd_unidade_baixa
from	fa_entrega_medicacao_item
where	nr_seq_fa_entrega = nr_seq_entrega_p
and	coalesce(dt_cancelamento::text, '') = '';
	
C02 CURSOR FOR
	SELECT	a.nr_seq_lote,
		a.qt_item,
		b.cd_material
	from	fa_entrega_medic_item_lote a,
		material_lote_fornec b
	where	a.nr_seq_lote = b.nr_sequencia
	and	a.nr_seq_medic_item = nr_seq_entrega_item_w
	and	(a.nr_seq_lote IS NOT NULL AND a.nr_seq_lote::text <> '');


BEGIN

ie_status_mov_estoque_w	:= Obter_Valor_Param_Usuario(10015, 43, Obter_Perfil_Ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
ie_atend_com_alta_w	:= Obter_Valor_Param_Usuario(10015, 99, Obter_Perfil_Ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
ie_regra_lanc_auto_w	:= Obter_Valor_Param_Usuario(10015, 122, Obter_Perfil_Ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
ie_regra_estoque_negativo_w	:= Obter_Valor_Param_Usuario(10015, 22, Obter_Perfil_Ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);

nr_atendimento_w := nr_atendimento_p;
nr_seq_lote_fornec_w := nr_seq_lote_fornec_p;

if (nr_atendimento_w = 0) then
	SELECT 	MAX(coalesce(b.nr_atendimento,0))
	into STRICT	nr_atendimento_w
	FROM   	fa_paciente_entrega b,
		fa_entrega_medicacao a
	WHERE  	b.nr_sequencia = a.nr_seq_paciente_entrega
	AND	a.nr_sequencia = nr_seq_entrega_p;
	
end if;


SELECT 	MAX(c.dt_cancelamento),
	max(a.ie_status_medicacao)
INTO STRICT	dt_cancelamento_w,
	ie_status_medicacao_w
FROM   	fa_receita_farmacia c,
	fa_paciente_entrega b,
	fa_entrega_medicacao a
WHERE  	b.nr_sequencia = a.nr_seq_paciente_entrega
AND	a.nr_seq_receita_amb = c.nr_sequencia
AND	a.nr_sequencia = nr_seq_entrega_p;


CALL gravar_log_nutricao(85458,'1 - nr_seq_entrega_p = '||nr_seq_entrega_p||' nr_atendimento_w = '||nr_atendimento_w||' cd_local_estoque = '||cd_local_estoque_p||
			' cd_setor_atendimento_p = '||cd_setor_atendimento_p||' ie_status_mov_estoque_w = '||ie_status_mov_estoque_w||
			' ie_status_medicacao_w = '||ie_status_medicacao_w||' nr_seq_atepacu_w = '||OBTER_ATEPACU_PACIENTE(nr_atendimento_w, 'A'),nm_usuario_p);

commit;				
if (ie_status_medicacao_w = 'EM') and (ie_status_mov_estoque_w = 'EM') then
	-- Esta entrega ja esta acom status Entrega da medicacao. Favor atualizar a tela!
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(181172);
end if;

if (ie_status_medicacao_w = 'CM') and (ie_status_mov_estoque_w = 'CM') then	
	-- Esta entrega ja esta com status Conferencia da medicacao. Favor atualizar a tela!
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(181173);
end if;

if (dt_cancelamento_w IS NOT NULL AND dt_cancelamento_w::text <> '') then
	-- Esta receita ja foi cancelada.
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(181174);
end if;

if (nr_atendimento_w = 0) then	
	-- Receita sem atendimento vinculado.
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(181175);
end if;

nr_seq_atepacu_w	:= OBTER_ATEPACU_PACIENTE(nr_atendimento_w, 'A');
cd_convenio_w		:= OBTER_CONVENIO_ATENDIMENTO(nr_atendimento_w);
cd_categoria_w		:= Obter_Categoria_Atendimento(nr_atendimento_w);

select 	max(cd_estabelecimento),
	max(dt_alta)
into STRICT	cd_estab_w,
	dt_alta_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_w;

if (ie_atend_com_alta_w = 'N') and (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') then
	-- O atendimento ja teve alta. Nao e possivel baixar os itens. Parametro [99].
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(221941);
end if;

if (nr_seq_atepacu_w <> 0) then
	select	cd_setor_Atendimento,
		dt_entrada_unidade
	into STRICT	cd_setor_atendimento_w,
		dt_entrada_unidade_w
	from	atend_paciente_unidade
	where	nr_seq_interno	= nr_seq_atepacu_w;
else	
	-- Nao existe uma passagem de setor para o atendimento.
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(181177);
end if;
	
open c01;
loop
fetch c01 into
	nr_seq_entrega_item_w,
	cd_material_w,
	cd_material_generico_w,
	qt_material_w,
	cd_unidade_baixa_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	
	nr_seq_lote_fornec_w 	:= null;
	cd_cgc_fornecedor_w	:= null;
	
	select	coalesce(sum(qt_material),0)
	into STRICT	qt_material_em_conta_w
	from	material_atend_paciente
	where	nr_seq_entrega_medic_fa = nr_seq_entrega_item_w;
	
	CALL gravar_log_nutricao(85458,'2 - nr_seq_entrega_p = '||nr_seq_entrega_p||' nr_atendimento_w = '||nr_atendimento_w||' nr_seq_entrega_item_w = '||nr_seq_entrega_item_w||
			' cd_material_w = '||cd_material_w||' qt_material_w = '||qt_material_w||' qt_material_em_conta_w = '||qt_material_em_conta_w||' cd_local_estoque = '||cd_local_estoque_p||
			' cd_setor_atendimento_p = '||cd_setor_atendimento_p||' ie_status_mov_estoque_w = '||ie_status_mov_estoque_w,nm_usuario_p);
	
	if (qt_material_em_conta_w = 0) then
		
		open C02;
		loop
		fetch C02 into	
			nr_seq_lote_fornec_w,
			qt_item_w,
			cd_material_lote_forn_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			
			select	substr(obter_dados_material_estab(cd_material,cd_estab_w,'UMS'),1,30) cd_unidade_medida_consumo
			into STRICT	cd_unidade_medida_w
			from	material
			where	cd_material	= cd_material_lote_forn_w;

			select	coalesce(ie_consignado,'0'),
				cd_material_estoque,
				qt_conv_estoque_consumo,
				substr(obter_dados_material_estab(cd_material,cd_estab_w,'UME'),1,30) cd_unidade_medida_estoque,
				substr(obter_dados_material_estab(cd_material,cd_estab_w,'UMS'),1,30) cd_unidade_medida_consumo
			into STRICT	ie_consignado_w,
				cd_material_estoque_w,
				qt_conv_estoque_consumo_w,
				cd_unidade_medida_estoque_w,
				cd_unidade_medida_consumo_w
			from	material
			where	cd_material = cd_material_lote_forn_w;
			
			select	nextval('material_atend_paciente_seq')
			into STRICT	nr_sequencia_w
			;

			qt_material_w := qt_material_w - qt_item_w;
			
			if (cd_unidade_baixa_w <> cd_unidade_medida_w) then
				qt_item_w := obter_dose_convertida(cd_material_lote_forn_w,qt_item_w,cd_unidade_baixa_w,cd_unidade_medida_w);
			end if;
						
			CALL gravar_log_nutricao(85458,'3 - nr_seq_entrega_p = '||nr_seq_entrega_p||' cd_material_lote_forn_w = '||cd_material_lote_forn_w||' nr_atendimento_w = '||nr_atendimento_w||
						' nr_seq_entrega_item_w = '||nr_seq_entrega_item_w||' qt_estoque_w = '||qt_estoque_w||' cd_local_estoque = '||cd_local_estoque_p||
						' nr_seq_atepacu_w = '||nr_seq_atepacu_w||' cd_setor_atendimento_p = '||cd_setor_atendimento_p||
						' ie_status_mov_estoque_w = '||ie_status_mov_estoque_w||' qt_material_w = '||qt_material_w,nm_usuario_p);
			
			if (qt_item_w > 0) then
				if (coalesce(cd_local_estoque_p, 0) > 0) then
					qt_estoque_w	:= obter_saldo_disp_estoque(cd_estab_w,cd_material_estoque_w,cd_local_estoque_p,trunc(clock_timestamp(),'mm'),nr_seq_lote_fornec_w);
					
					if (coalesce(qt_estoque_w,0) < dividir(qt_item_w, qt_conv_estoque_consumo_w) and ie_regra_estoque_negativo_w = 'N') then
						ie_validou_p := 'N';
						/*Nao existe Saldo de Estoque:
						Material: #@CD_MATERIAL#@
						Quantidade em Estoque : #@QT_ESTOQUE#@
						Quantidade a baixar: #@QT_MATERIAL#@
						Local de estoque: #@DS_LOCAL_ESTOQUE#@ */
						CALL Wheb_mensagem_pck.exibir_mensagem_abort(181184, 'CD_MATERIAL='||to_char(cd_material_lote_forn_w)||';'||
												'QT_ESTOQUE='||to_char(qt_estoque_w)||';'||
												'QT_MATERIAL='||to_char(qt_item_w)||';'||
												'DS_LOCAL_ESTOQUE='||substr(OBTER_DESC_LOCAL_ESTOQUE(cd_local_estoque_p),1,100));		
					end if;

				end if;
				
				cd_cgc_fornecedor_w := Obter_dados_lote_fornec(nr_seq_lote_fornec_w,'CF');
				
			/*	insert into log_xxxxxxxtasy(cd_log,ds_log,dt_atualizacao,nm_usuario)
				values	(78548, 
					'nr_seq_entrega_p = '||nr_seq_entrega_p||' cd_material_w = '||cd_material_w||' nr_atendimento_w = '||nr_atendimento_w||' nr_seq_entrega_item_w = '||nr_seq_entrega_item_w||' qt_estoque_w = '||qt_estoque_w||' cd_local_estoque = '||cd_local_estoque_p||' nr_seq_atepacu_w = '||nr_seq_atepacu_w||' cd_setor_atendimento_p = '||cd_setor_atendimento_p||' ie_status_mov_estoque_w = '||ie_status_mov_estoque_w,
					sysdate,
					nm_usuario_p);  */
				
				insert into material_atend_paciente(	nr_sequencia,
									cd_material,
									dt_atendimento,
									cd_convenio,
									cd_categoria,
									nr_seq_atepacu,
									cd_setor_atendimento,
									dt_entrada_unidade,
									qt_material,
									cd_local_estoque,
									dt_Atualizacao,
									nm_usuario,
									nr_atendimento,
									cd_unidade_medida,
									cd_acao,
									ie_valor_informado,
									nr_seq_lote_fornec,
									nr_seq_entrega_medic_fa,
									cd_cgc_fornecedor)
							values (	nr_sequencia_w,
									cd_material_lote_forn_w,
									clock_timestamp(),
									cd_convenio_w,
									cd_categoria_w,
									nr_seq_atepacu_w,
									cd_setor_atendimento_w,
									dt_entrada_unidade_w,
									qt_item_w,
									cd_local_estoque_p,
									clock_timestamp(),
									nm_usuario_p,
									nr_atendimento_w,
									cd_unidade_medida_w,
									'1',
									'N',
									nr_seq_lote_fornec_w,
									nr_seq_entrega_item_w,
									cd_cgc_fornecedor_w
									);

				CALL atualiza_preco_material(nr_sequencia_w,nm_usuario_p);
				
				if (ie_regra_lanc_auto_w = 'S') then
					CALL gerar_lanc_automatico_mat(nr_atendimento_w,cd_local_estoque_P,132,nm_usuario_p, nr_sequencia_w,null,null);
				end if;
				
				commit;
			end if;
			end;
		end loop;
		close C02;
		
		nr_seq_lote_fornec_w 	:= null;
		cd_cgc_fornecedor_w	:= null;
		
		select	substr(obter_dados_material_estab(cd_material,cd_estab_w,'UMS'),1,30) cd_unidade_medida_consumo
		into STRICT	cd_unidade_medida_w
		from	material
		where	cd_material	= cd_material_w;

		select	coalesce(ie_consignado,'0'),
			cd_material_estoque,
			qt_conv_estoque_consumo,
			substr(obter_dados_material_estab(cd_material,cd_estab_w,'UME'),1,30) cd_unidade_medida_estoque,
			substr(obter_dados_material_estab(cd_material,cd_estab_w,'UMS'),1,30) cd_unidade_medida_consumo
		into STRICT	ie_consignado_w,
			cd_material_estoque_w,
			qt_conv_estoque_consumo_w,
			cd_unidade_medida_estoque_w,
			cd_unidade_medida_consumo_w
		from	material
		where	cd_material = coalesce(cd_material_generico_w,cd_material_w);

		if (qt_material_w > 0) then
			
			select	nextval('material_atend_paciente_seq')
			into STRICT	nr_sequencia_w
			;

			if (cd_unidade_baixa_w <> cd_unidade_medida_w) then
				qt_material_w := obter_dose_convertida(cd_material_w,qt_material_w,cd_unidade_baixa_w,cd_unidade_medida_w);
			end if;
						
			if (coalesce(cd_local_estoque_p, 0) > 0) then
				qt_estoque_w	:= obter_saldo_disp_estoque(cd_estab_w,cd_material_estoque_w,cd_local_estoque_p,trunc(clock_timestamp(),'mm'));
				
			CALL gravar_log_nutricao(85458,'4 - nr_seq_entrega_p = '||nr_seq_entrega_p||' cd_material_w = '||cd_material_w||' nr_atendimento_w = '||nr_atendimento_w||
						' nr_seq_entrega_item_w = '||nr_seq_entrega_item_w||' qt_estoque_w = '||qt_estoque_w||' cd_local_estoque = '||cd_local_estoque_p||
						' nr_seq_atepacu_w = '||nr_seq_atepacu_w||' cd_setor_atendimento_p = '||cd_setor_atendimento_p||
						' ie_status_mov_estoque_w = '||ie_status_mov_estoque_w||' qt_material_w = '||qt_material_w,nm_usuario_p);
		
				if (coalesce(qt_estoque_w,0) < dividir(qt_material_w, qt_conv_estoque_consumo_w) and ie_regra_estoque_negativo_w = 'N') then
					ie_validou_p := 'N';
					/*Nao existe Saldo de Estoque:
					Material: #@CD_MATERIAL#@
					Quantidade em Estoque : #@QT_ESTOQUE#@
					Quantidade a baixar: #@QT_MATERIAL#@
					Local de estoque: #@DS_LOCAL_ESTOQUE#@ */
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(181184, 'CD_MATERIAL='||to_char(cd_material_w)||';'||
											'QT_ESTOQUE='||to_char(qt_estoque_w)||';'||
											'QT_MATERIAL='||to_char(qt_material_w)||';'||
											'DS_LOCAL_ESTOQUE='||substr(OBTER_DESC_LOCAL_ESTOQUE(cd_local_estoque_p),1,100));		
				end if;

			end if;		
		
		/*
			insert into log_xxxxtasy(cd_log,ds_log,dt_atualizacao,nm_usuario)
			values	(78548, 
				'nr_seq_entrega_p = '||nr_seq_entrega_p||' cd_material_w = '||cd_material_w||' nr_atendimento_w = '||nr_atendimento_w||' nr_seq_entrega_item_w = '||nr_seq_entrega_item_w||' qt_estoque_w = '||qt_estoque_w||' cd_local_estoque = '||cd_local_estoque_p||' nr_seq_atepacu_w = '||nr_seq_atepacu_w||' cd_setor_atendimento_p = '||cd_setor_atendimento_p||' ie_status_mov_estoque_w = '||ie_status_mov_estoque_w,
				sysdate,
				nm_usuario_p); */
		
			insert into material_atend_paciente(	nr_sequencia,
								cd_material,
								cd_material_exec,
								dt_atendimento,
								cd_convenio,
								cd_categoria,
								nr_seq_atepacu,
								cd_setor_atendimento,
								dt_entrada_unidade,
								qt_material,
								cd_local_estoque,
								dt_Atualizacao,
								nm_usuario,
								nr_atendimento,
								cd_unidade_medida,
								cd_acao,
								ie_valor_informado,
								nr_seq_lote_fornec,
								nr_seq_entrega_medic_fa)
						values (	nr_sequencia_w,
								cd_material_w,
								cd_material_generico_w,
								clock_timestamp(),
								cd_convenio_w,
								cd_categoria_w,
								nr_seq_atepacu_w,
								cd_setor_atendimento_w,
								dt_entrada_unidade_w,
								qt_material_w,
								cd_local_estoque_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_atendimento_w,
								cd_unidade_medida_w,
								'1',
								'N',
								nr_seq_lote_fornec_w,
								nr_seq_entrega_item_w
								);

			CALL atualiza_preco_material(nr_sequencia_w,nm_usuario_p);
			
			if (ie_regra_lanc_auto_w = 'S') then
				CALL gerar_lanc_automatico_mat(nr_atendimento_w,cd_local_estoque_P,132,nm_usuario_p, nr_sequencia_w,null,null);
			end if;
			
			commit;
		end if;
	end if;
	end;
end loop;
close C01;
ie_validou_p := 'S';

commit;

select	sum(a.qt_material)
into STRICT	qt_medic_conta_w
from	material_atend_paciente a,
	fa_entrega_medicacao_item b
where	a.nr_seq_entrega_medic_fa = b.nr_sequencia
and	b.nr_seq_fa_entrega = nr_seq_entrega_p
and	coalesce(dt_cancelamento::text, '') = '';

select	sum(qt_dispensar)
into STRICT	qt_medic_entrega_w
from	fa_entrega_medicacao_item
where	nr_seq_fa_entrega = nr_seq_entrega_p
and	coalesce(dt_cancelamento::text, '') = ''
and	qt_dispensar > 0;

if (qt_medic_conta_w <> qt_medic_entrega_w) then
	ie_medic_conta_p := 'N';
else
	ie_medic_conta_p := 'S';
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fa_inserir_material_receita ( nr_atendimento_p bigint, nr_seq_entrega_p bigint, nm_usuario_p text, cd_local_estoque_p bigint, cd_setor_atendimento_p bigint, nr_seq_lote_fornec_p bigint, ie_validou_p INOUT text, ie_medic_conta_p INOUT text ) FROM PUBLIC;

