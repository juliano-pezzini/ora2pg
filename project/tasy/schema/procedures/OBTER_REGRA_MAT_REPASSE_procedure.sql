-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_regra_mat_repasse ( cd_convenio_p bigint, cd_edicao_amb_p bigint, cd_estabelecimento_p bigint, cd_medico_atend_p bigint, ie_tipo_atendimento_p bigint, nm_usuario_p text, nr_seq_matpaci_p bigint, cd_regra_p INOUT bigint, nr_seq_criterio_p INOUT bigint, ie_responsavel_credito_p text) AS $body$
DECLARE


cd_regra_w			bigint;
nr_seq_criterio_w			bigint;
nr_seq_categoria_w             		bigint;

ie_carater_inter_sus_w		varchar(100);
cd_categoria_plano_w		varchar(255);

cd_cgc_fornecedor_w		varchar(255);
cd_cgc_prestador_w		varchar(20);
cd_classe_material_w		integer;
cd_estabelecimento_adic_w	smallint;
cd_estabelecimento_w		smallint;
cd_grupo_material_w		smallint;
cd_material_w			integer;
cd_med_exec_proc_princ_w	varchar(255);
cd_medico_aval_w		varchar(10);
cd_medico_cir_w			varchar(100);
cd_medico_prescritor_w		varchar(100);
cd_medico_prescr_w		varchar(100);
cd_medico_w			varchar(100);
cd_municipio_ibge_w		varchar(100);
cd_pessoa_indic_w		varchar(10);
cd_plano_w			varchar(100);
cd_setor_w			bigint;
cd_subgrupo_material_w		smallint;
cd_tab_preco_material_w		bigint;
cd_tipo_anestesia_w		varchar(255);
cd_tipo_pessoa_w		bigint;
dt_conta_w			timestamp;
ie_atend_retorno_w		varchar(100);
ie_pacote_w			varchar(100);
ie_regra_estab_atend_w		varchar(255);
ie_tipo_convenio_w		bigint;
nr_atendimento_w		bigint;
nr_cirurgia_w			bigint;
nr_interno_conta_w		bigint;
nr_prescricao_w			bigint;
nr_seq_grupo_rec_w		bigint;
nr_seq_lote_fornec_w		bigint;
nr_seq_proc_princ_w		bigint;
ie_repassa_medico_w		varchar(100)	:= 'N';
cd_espec_med_atend_w		integer;
cd_setor_prescr_w		integer;
nr_seq_estagio_conta_w		conta_paciente.nr_seq_estagio_conta%type;
cd_medico_referido_w		atendimento_paciente.cd_medico_referido%type;
nr_seq_indicacao_w		tipo_indicacao.nr_sequencia%type;
cd_convenio_atend_w		convenio.cd_convenio%type;
ie_restrito_w			brasindice_preco.ie_restrito%type;
cd_medicamento_w		material_brasindice.cd_medicamento%type;
ie_vinculo_medico_w		medico.ie_vinculo_medico%type;
nr_seq_terceiro_w		terceiro.nr_sequencia%type;
ie_obtem_regra_crit_w		varchar(1);
nr_seq_familia_w		bigint;
nr_seq_familia_material_w		bigint;

cd_regra_repasse_c_w		regra_repasse_terceiro.cd_regra%type;
nr_seq_crit_c_w			mat_criterio_repasse.nr_sequencia%type;
ie_restrito_cursor_w		mat_criterio_repasse.ie_restrito%type;
cd_apresentacao_w		material_brasindice.cd_apresentacao%type;
cd_convenio_atend_cursor_w	mat_criterio_repasse.cd_convenio_atend%type;
nr_seq_categoria_cursor_w	mat_criterio_repasse.nr_seq_categoria%type;
ie_vinculo_medico_cursror_w	mat_criterio_repasse.ie_vinculo_medico%type;
ie_tipo_convenio_cursror_w	mat_criterio_repasse.ie_tipo_convenio%type;
cd_medico_aval_cursror_w	mat_criterio_repasse.cd_medico_aval%type;
cd_tipo_pessoa_cursor_w		mat_criterio_repasse.cd_tipo_pessoa%type;
ie_honorario_cursror_w		mat_criterio_repasse.ie_honorario%type;
cd_medico_resp_w		atendimento_paciente.cd_medico_resp%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
ie_regra_medico_w		mat_criterio_repasse.ie_regra_medico%type;
ie_corpo_clinico_w		varchar(1);
ie_tipo_terceiro_w		mat_criterio_repasse.ie_tipo_terceiro%type;
ie_clinica_w			mat_criterio_repasse.ie_clinica%type;
qt_proc_princ_w			bigint;
qt_minima_w				mat_criterio_repasse.qt_minima%type;
qt_maxima_w				mat_criterio_repasse.qt_maxima%type;
ie_tipo_data_w			mat_criterio_repasse.ie_tipo_data%type;
ie_tipo_restricao_w		mat_criterio_repasse.ie_tipo_restricao%type;
qt_material_w			bigint;

--Obter o criterio e a regra para gerar o repasse
c02 CURSOR FOR
	SELECT	a.cd_regra,
		b.nr_sequencia,
		b.nr_seq_terceiro,
		b.ie_restrito,
		b.cd_convenio_atend,
		b.nr_seq_categoria,
		b.ie_vinculo_medico,
		b.ie_tipo_convenio,
		b.cd_medico_aval,
		b.cd_tipo_pessoa,
		b.ie_honorario,
		b.ie_regra_medico,
		b.ie_tipo_terceiro,
		b.qt_maxima,
		b.qt_minima,
		b.ie_tipo_data,
		b.ie_tipo_restricao,
    b.nr_seq_familia,
		(SELECT	count(1)
		from	MAT_CRITERIO_REP_PROC x
		where	x.nr_seq_criterio = b.nr_sequencia) qt_proc_princ
	from 	mat_criterio_repasse b,
		regra_repasse_terceiro a
	where	a.cd_regra				= b.cd_regra
	and coalesce(b.ie_tipo_criterio, 0) <> 1
	and	a.cd_estabelecimento			= cd_estabelecimento_w
	and (coalesce(b.cd_material::text, '') = '' or b.cd_material = cd_material_w)
	and (coalesce(b.cd_medico::text, '') = '' or  b.cd_medico = cd_medico_w)
	and (coalesce(b.cd_convenio::text, '') = '' or b.cd_convenio = cd_convenio_p)
	and	coalesce(b.ie_situacao, 'A')			= 'A'
	and	coalesce(b.nr_seq_estagio_conta,coalesce(nr_seq_estagio_conta_w,0))	= coalesce(nr_seq_estagio_conta_w,0)
	and	coalesce(b.cd_grupo_material, cd_grupo_material_w)	= cd_grupo_material_w
	and	coalesce(b.cd_subgrupo_material, cd_subgrupo_material_w)= cd_subgrupo_material_w
	and	coalesce(b.nr_seq_grupo_rec, nr_seq_grupo_rec_w) = nr_seq_grupo_rec_w
	and	coalesce(b.cd_classe_material, cd_classe_material_w)	= cd_classe_material_w
	and (coalesce(b.nr_seq_classificacao::text, '') = '' or (exists (select	1
								from	convenio_classif x
								where	x.cd_convenio	= cd_convenio_p
								and	x.nr_seq_classificacao	= b.nr_seq_classificacao)))
	and	coalesce(b.cd_setor_atendimento, cd_setor_w)	= cd_setor_w
	and	((coalesce(b.cd_edicao_amb, cd_edicao_amb_p)	= cd_edicao_amb_p) or (coalesce(b.cd_edicao_amb::text, '') = ''))
	and	coalesce(b.ie_tipo_atendimento,ie_tipo_atendimento_p)= ie_tipo_atendimento_p
	and	((ie_pacote = 'T') or (ie_pacote 	= ie_pacote_w))
	and	coalesce(a.dt_limite_regra,dt_conta_w + 5)	>= trunc(dt_conta_w,'dd')
	and	coalesce(a.dt_inicio_vigencia, dt_conta_w - 5) <= trunc(dt_conta_w,'dd')
	and	((coalesce(ie_carater_inter_sus::text, '') = '') or (ie_carater_inter_sus = ie_carater_inter_sus_w))	
	and	coalesce(b.cd_cgc_prestador, cd_cgc_prestador_w)	= cd_cgc_prestador_w
	and	coalesce(b.nr_seq_lote_fornec, coalesce(nr_seq_lote_fornec_w, -1))	= coalesce(nr_seq_lote_fornec_w, -1)
	and	((coalesce(cd_municipio_ibge,cd_municipio_ibge_w) = cd_municipio_ibge_w) or (coalesce(cd_municipio_ibge::text, '') = ''))
	and	((b.ie_atend_retorno = 'S') or (ie_atend_retorno_w = 'N'))
	and	dt_conta_w	between coalesce(b.dt_vigencia_inicial, dt_conta_w) and coalesce(b.dt_vigencia_final, dt_conta_w)
	and	((b.cd_tabela_preco	= cd_tab_preco_material_w) or (coalesce(b.cd_tabela_preco::text, '') = ''))
	and	coalesce(b.cd_med_exec_proc_princ, cd_med_exec_proc_princ_w) = cd_med_exec_proc_princ_w
	and	coalesce(b.cd_cgc_fornecedor, cd_cgc_fornecedor_w) = cd_cgc_fornecedor_w
	and	coalesce(b.cd_plano, coalesce(cd_plano_w, '-1'))	= coalesce(cd_plano_w, '-1')
	and	coalesce(b.cd_categoria,cd_categoria_plano_w)	= cd_categoria_plano_w
	and	((coalesce(b.ie_medico_ind_proc_princ, 'N')	= 'N') or (cd_med_exec_proc_princ_w = cd_pessoa_indic_w))
	and	((coalesce(b.ie_medico_ind_corpo_cli, 'N') = 'N') or (ie_corpo_clinico_w = 'S'))
	and	((coalesce(b.ie_med_exec_pp_corpo_cli, 'N') = 'N') or (obter_se_corpo_clinico(cd_med_exec_proc_princ_w) = 'S'))
	and	coalesce(coalesce(b.cd_especialidade,cd_espec_med_atend_w),0)	= coalesce(cd_espec_med_atend_w,0)
	and	coalesce(coalesce(b.CD_SETOR_MAT_PRESCR,cd_setor_prescr_w),0)	= coalesce(cd_setor_prescr_w,0)
	and	coalesce(b.cd_medico_referido,coalesce(cd_medico_referido_w,'0'))	= coalesce(cd_medico_referido_w,'0')
	and	coalesce(b.nr_seq_indicacao,nr_seq_indicacao_w)	= nr_seq_indicacao_w
	and	coalesce(b.ie_clinica, coalesce(ie_clinica_w,0)) = coalesce(ie_clinica_w,0)
	order by	coalesce(b.ie_prioridade,0),
		coalesce(b.nr_seq_estagio_conta,0),
		coalesce(b.cd_medico,'0'),
		coalesce(b.cd_medico_referido,'0'),
		coalesce(cd_material, 0),
		coalesce(cd_grupo_material, 0),
		coalesce(cd_subgrupo_material, 0),
		coalesce(cd_classe_material, 0),
		coalesce(nr_seq_grupo_rec, 0),
		coalesce(cd_convenio, 0),
		coalesce(b.cd_categoria, '0'),
		coalesce(cd_setor_atendimento,0),
		coalesce(ie_tipo_atendimento, 0),
		coalesce(cd_edicao_amb,0),
		ie_carater_inter_sus,
		coalesce(cd_municipio_ibge, '0'),
		coalesce(b.cd_tabela_preco, 0),
		coalesce(cd_cgc_fornecedor, 0),
		coalesce(b.cd_plano, 0),
		coalesce(b.nr_seq_terceiro,0),
		qt_proc_princ;


BEGIN


select 	coalesce(a.dt_conta, a.dt_atendimento),
	a.cd_setor_atendimento,
	a.cd_material,
	b.cd_grupo_material,
	b.cd_subgrupo_material,
	b.cd_classe_material,
	CASE WHEN coalesce(a.nr_seq_proc_pacote::text, '') = '' THEN 'F'  ELSE 'I' END ,
	c.cd_pessoa_indic,
	coalesce(a.cd_cgc_prestador, 'X'),
	c.ie_carater_inter_sus,
	c.cd_pessoa_fisica,
	d.nr_interno_conta,
	CASE WHEN coalesce(c.nr_atend_original::text, '') = '' THEN  'N'  ELSE 'S' END  ie_atend_retorno,
	a.cd_tab_preco_material,
	coalesce(a.cd_cgc_fornecedor, 'X'),
	coalesce(a.cd_categoria, d.cd_categoria_parametro),
	coalesce(a.nr_seq_grupo_rec, 0),
	coalesce(a.nr_seq_lote_fornec, 0),
	c.cd_estabelecimento,
	a.nr_cirurgia,
	a.nr_prescricao,
	a.nr_seq_proc_princ,
	a.cd_medico_prescritor,
	c.cd_medico_resp,
	d.nr_seq_estagio_conta,
	c.cd_medico_referido,
	coalesce(c.nr_seq_indicacao,0),
	c.nr_atendimento,
	c.ie_clinica
into STRICT	dt_conta_w,
	cd_setor_w,
	cd_material_w,
	cd_grupo_material_w,
	cd_subgrupo_material_w,
	cd_classe_material_w,
	ie_pacote_w,
	cd_pessoa_indic_w,
	cd_cgc_prestador_w,
	ie_carater_inter_sus_w,
	cd_pessoa_fisica_w,
	nr_interno_conta_w,
	ie_atend_retorno_w,
	cd_tab_preco_material_w,
	cd_cgc_fornecedor_w,
	cd_categoria_plano_w,
	nr_seq_grupo_rec_w,
	nr_seq_lote_fornec_w,
	cd_estabelecimento_adic_w,
	nr_cirurgia_w,
	nr_prescricao_w,
	nr_seq_proc_princ_w,
	cd_medico_prescritor_w,
	cd_medico_resp_w,
	nr_seq_estagio_conta_w,
	cd_medico_referido_w,
	nr_seq_indicacao_w,
	nr_atendimento_w,
	ie_clinica_w
from	estrutura_material_v b,
	conta_paciente	d,
	atendimento_paciente c,
	material_atend_paciente a
where 	a.nr_interno_conta	= d.nr_interno_conta
and	c.nr_atendimento		= a.nr_atendimento
and	a.cd_material		= b.cd_material
and	a.nr_sequencia     	= nr_seq_matpaci_p;

cd_municipio_ibge_w	:= obter_compl_pf(cd_pessoa_fisica_w,1,'CDM');
cd_espec_med_atend_w	:= (obter_especialidade_medico(cd_medico_resp_w,'XX'))::numeric;
cd_setor_prescr_w	:= substr(obter_setor_prescricao(nr_prescricao_w,'C'),1,100);

select 	coalesce(max(ie_regra_estab_atend),'N')
into STRICT	ie_regra_estab_atend_w
from	parametro_repasse
where	cd_estabelecimento	= cd_estabelecimento_p;

if (ie_regra_estab_atend_w = 'S') then -- afstringari 186033 29/12/2009
	cd_estabelecimento_w	:= cd_estabelecimento_adic_w;
else
	cd_estabelecimento_w	:= cd_estabelecimento_p;
end if;

select	max(cd_medico_cirurgiao),
	max(cd_tipo_anestesia)
into STRICT	cd_medico_cir_w,
	cd_tipo_anestesia_w
from	cirurgia
where	nr_cirurgia	= nr_cirurgia_w;

select	max(cd_medico)
into STRICT	cd_medico_prescr_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_w;

cd_medico_w		:= coalesce(cd_medico_cir_w,coalesce(coalesce(cd_medico_prescr_w,cd_medico_prescritor_w),cd_medico_atend_p));

select	coalesce(max(cd_medico_executor),0)
into STRICT	cd_med_exec_proc_princ_w
from	procedimento_paciente
where	nr_sequencia	= nr_seq_proc_princ_w;	

cd_regra_repasse_c_w	:= null;
nr_seq_crit_c_w		:= null;

ie_corpo_clinico_w	:= obter_se_corpo_clinico(cd_pessoa_indic_w);

--Retorna o criterio e a regra para gerar o repasse
open	C02;
loop
fetch	C02 into
	cd_regra_w,
	nr_seq_criterio_w,
	nr_seq_terceiro_w,
	ie_restrito_cursor_w,
	cd_convenio_atend_cursor_w,
	nr_seq_categoria_cursor_w,
	ie_vinculo_medico_cursror_w,
	ie_tipo_convenio_cursror_w,
	cd_medico_aval_cursror_w,
	cd_tipo_pessoa_cursor_w,
	ie_honorario_cursror_w,
	ie_regra_medico_w,
	ie_tipo_terceiro_w,
	qt_maxima_w,
	qt_minima_w,
	ie_tipo_data_w,
	ie_tipo_restricao_w,
  nr_seq_familia_w,
	qt_proc_princ_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	
	ie_obtem_regra_crit_w	:= 'S';
	
	if (coalesce(qt_minima_w, -1) <> -1 and coalesce(qt_maxima_w, 0) <> 0 and coalesce(ie_tipo_restricao_w, 'X') <> 'X' ) then
		if (coalesce(ie_tipo_restricao_w, 'X') = 'C' ) then
				select
				count(1)
				into STRICT 
				qt_material_w 
				from	material d,
					pessoa_fisica e,
					atendimento_paciente c,
					conta_paciente f,
					material_atend_paciente a
				where	a.nr_atendimento	= c.nr_atendimento
				and	c.cd_pessoa_fisica	= e.cd_pessoa_fisica
				and	a.nr_interno_conta	= f.nr_interno_conta
				and	d.cd_material	= a.cd_material
				and a.nr_interno_conta	= nr_interno_conta_w
				and  d.cd_material = cd_material_w;
		
		end if;
		
		if (coalesce(ie_tipo_restricao_w, 'X') = 'A' ) then
				select
				count(1)
				into STRICT 
				qt_material_w 
				from	material d,
					pessoa_fisica e,
					atendimento_paciente c,
					conta_paciente f,
					material_atend_paciente a
				where	a.nr_atendimento	= c.nr_atendimento
				and	c.cd_pessoa_fisica	= e.cd_pessoa_fisica
				and	a.nr_interno_conta	= f.nr_interno_conta
				and	d.cd_material	= a.cd_material
				and c.nr_atendimento 	= nr_atendimento_w
				and d.cd_material 	= cd_material_w;
		
		end if;
		
		if (coalesce(ie_tipo_restricao_w, 'X') = 'D' ) then
			if (coalesce(ie_tipo_data_w, 'X') = 'E' ) then
					select
					count(1)
					into STRICT 
					qt_material_w 
					from	material d,
						pessoa_fisica e,
						atendimento_paciente c,
						conta_paciente f,
						material_atend_paciente a
					where	a.nr_atendimento	= c.nr_atendimento
					and	c.cd_pessoa_fisica	= e.cd_pessoa_fisica
					and	a.nr_interno_conta	= f.nr_interno_conta
					and d.cd_material 	= cd_material_w
					and a.dt_atendimento between trunc(a.dt_atendimento,'dd') and fim_dia(a.dt_atendimento);
			
			end if;
				if (coalesce(ie_tipo_data_w, 'X') = 'H' ) then
						select
						count(1)
						into STRICT 
							qt_material_w 
						from	material d,
							pessoa_fisica e,
							atendimento_paciente c,
							conta_paciente f,
							material_atend_paciente a
						where	a.nr_atendimento	= c.nr_atendimento
						and	c.cd_pessoa_fisica	= e.cd_pessoa_fisica
						and	a.nr_interno_conta	= f.nr_interno_conta
						and d.cd_material 	= cd_material_w
						and a.dt_atendimento between trunc(clock_timestamp(),'dd') and fim_dia(clock_timestamp());
				
				end if;
			
				if (coalesce(ie_tipo_data_w, 'X') = 'M' ) then
						select
						count(1)
						into STRICT 
							qt_material_w 
						from	material d,
							pessoa_fisica e,
							atendimento_paciente c,
							conta_paciente f,
							material_atend_paciente a
						where	a.nr_atendimento	= c.nr_atendimento
						and	c.cd_pessoa_fisica	= e.cd_pessoa_fisica
						and	a.nr_interno_conta	= f.nr_interno_conta
						and d.cd_material 	= cd_material_w
						and a.dt_atendimento between trunc(clock_timestamp(),'mm') and  last_day(clock_timestamp());
				
				end if;
		
		end if;
		
		if (qt_minima_w >= qt_material_w and qt_maxima_w <= qt_material_w) then
			ie_obtem_regra_crit_w 	:= 'N';
		end if;	
	end if;	
	
	if (nr_seq_terceiro_w IS NOT NULL AND nr_seq_terceiro_w::text <> '') and (ie_obtem_regra_crit_w = 'S') then
		if (coalesce(obter_se_terceiro_pessoa(cd_medico_w,nr_seq_terceiro_w, dt_conta_w),'S') = 'N') then
			ie_obtem_regra_crit_w	:= 'N';
			--go.to final;
		end if;		
	end if;
	
	if (coalesce(obter_se_proced_repasse_valido(nr_interno_conta_w,nr_seq_criterio_w, nr_seq_proc_princ_w, nr_atendimento_w),'S') = 'N') and (ie_obtem_regra_crit_w = 'S') then
		ie_obtem_regra_crit_w	:= 'N';
		--go.to final;
	end if;
	
	if (obter_se_regra_adic_mat(nr_seq_criterio_w, nr_seq_matpaci_p) = 'N') and (ie_obtem_regra_crit_w = 'S') then
		ie_obtem_regra_crit_w	:= 'N';
		--go.to final;
	end if;	
	
	if (ie_restrito_cursor_w = 'S') and (ie_obtem_regra_crit_w = 'S') then
		--obter se material restrito
		begin
		select	a.cd_medicamento,
			a.cd_apresentacao
		into STRICT	cd_medicamento_w,
			cd_apresentacao_w
		from	material_brasindice a
		where	a.cd_material	= cd_material_w
		and	dt_conta_w between coalesce(a.dt_vigencia, dt_conta_w) and coalesce(a.dt_final_vigencia, dt_conta_w);
		exception
		when others then
			cd_medicamento_w	:= null;
			cd_apresentacao_w	:= null;
		end;	

		if (cd_medicamento_w IS NOT NULL AND cd_medicamento_w::text <> '') then
			begin
			select	a.ie_restrito
			into STRICT	ie_restrito_w
			from	brasindice_preco a
			where	a.cd_medicamento = cd_medicamento_w
			and	a.cd_apresentacao = cd_apresentacao_w
			and	a.dt_inicio_vigencia = (SELECT	max(x.dt_inicio_vigencia)
							from	brasindice_preco x
							where	x.cd_medicamento = cd_medicamento_w
							and	a.cd_apresentacao = cd_apresentacao_w);
			exception
			when others then
				ie_restrito_w	:= null;
			end;	
			
			if (coalesce(ie_restrito_w::text, '') = '') then
				ie_restrito_w	:= 'N';
			end if;
		end if;
	
		if (ie_restrito_w = 'N') then
			ie_obtem_regra_crit_w	:= 'N';
			--go.to final;
		end if;
	end if;
	
	if (cd_convenio_atend_cursor_w IS NOT NULL AND cd_convenio_atend_cursor_w::text <> '') and (ie_obtem_regra_crit_w = 'S') then
		--Obter o tipo de acomodacao e o convenio do atendimento.
		begin
		select	cd_convenio
		into STRICT	cd_convenio_atend_w
		from	atend_categoria_convenio
		where	nr_atendimento	= nr_atendimento_w
		and	nr_seq_interno	=  obter_atecaco_atendimento(nr_atendimento_w);
		exception
		when others then
			cd_convenio_atend_w	:= null;
		end;
		if (cd_convenio_atend_cursor_w <> cd_convenio_atend_w) then
			ie_obtem_regra_crit_w	:= 'N';
			--go.to final;
		end if;
	end if;
	
	if (nr_seq_categoria_cursor_w IS NOT NULL AND nr_seq_categoria_cursor_w::text <> '') and (ie_obtem_regra_crit_w = 'S') then
		begin
		select	nr_seq_categoria
		into STRICT    nr_seq_categoria_w
		from    medico
		where   cd_pessoa_fisica = cd_medico_w;
		exception
		when others then
			nr_seq_categoria_w	:= null;
		end;
		
		if (nr_seq_categoria_cursor_w <> nr_seq_categoria_w) then
			ie_obtem_regra_crit_w	:= 'N';
			--go.to final;
		end if;		
	end if;
	
	if (ie_vinculo_medico_cursror_w IS NOT NULL AND ie_vinculo_medico_cursror_w::text <> '') and (ie_obtem_regra_crit_w = 'S') then
		begin
		select	ie_vinculo_medico
		into STRICT    ie_vinculo_medico_w
		from    medico
		where   cd_pessoa_fisica = cd_medico_w;
		exception
		when others then
			ie_vinculo_medico_w	:= null;
		end;
		
		if (ie_vinculo_medico_cursror_w <> ie_vinculo_medico_w) then
			ie_obtem_regra_crit_w	:= 'N';
			--go.to final;
		end if;
	end if;
	
	if (ie_tipo_convenio_cursror_w IS NOT NULL AND ie_tipo_convenio_cursror_w::text <> '') and (ie_obtem_regra_crit_w = 'S') then
		begin
		select	ie_tipo_convenio
		into STRICT	ie_tipo_convenio_w
		from	convenio
		where	cd_convenio		= cd_convenio_p;
		exception
		when others then
			ie_tipo_convenio_w	:= null;
		end;
		if (ie_tipo_convenio_cursror_w	<> ie_tipo_convenio_w) then
			ie_obtem_regra_crit_w	:= 'N';
			--go.to final;
		end if;
	end if;
	
	if (cd_medico_aval_cursror_w IS NOT NULL AND cd_medico_aval_cursror_w::text <> '') and (ie_obtem_regra_crit_w = 'S') then
		begin
		select	b.cd_medico
		into STRICT	cd_medico_aval_w
		from	med_avaliacao_paciente b
		where	b.nr_atendimento	= nr_atendimento_w;
		exception
		when others then
			cd_medico_aval_w	:= null;
		end;
		
		if (cd_medico_aval_cursror_w <> cd_medico_aval_w) then
			ie_obtem_regra_crit_w	:= 'N';
			--go.to final;
		end if;
	end if;
	
	if (cd_tipo_pessoa_cursor_w IS NOT NULL AND cd_tipo_pessoa_cursor_w::text <> '') and (ie_obtem_regra_crit_w = 'S') then
		begin
		select	cd_tipo_pessoa
		into STRICT	cd_tipo_pessoa_w
		from	pessoa_juridica
		where	cd_cgc	= cd_cgc_prestador_w;
		exception
		when others then
			cd_tipo_pessoa_w	:= null;
		end;
		
		if (cd_tipo_pessoa_cursor_w <> cd_tipo_pessoa_w) then
			ie_obtem_regra_crit_w	:= 'N';
			--go.to final;
		end if;
	end if;
	
	if (coalesce(ie_honorario_cursror_w,'N') = 'S') and (ie_obtem_regra_crit_w = 'S') then
		begin
		select	coalesce(ie_repassa_medico,'N')
		into STRICT	ie_repassa_medico_w
		from	regra_honorario
		where	cd_regra	= ie_responsavel_credito_p;
		exception
		when others then
			ie_repassa_medico_w	:= 'N';
		end;
		
		if (ie_repassa_medico_w = 'N') then
			ie_obtem_regra_crit_w	:= 'N';
			--go.to final;
		end if;
	end if;
	
	if (OBTER_SE_REGRA_MED_REPASSE(nr_seq_matpaci_p, null, ie_regra_medico_w) = 'N') and (ie_obtem_regra_crit_w = 'S') then
		ie_obtem_regra_crit_w	:= 'N';
		--go.to final;
	end if;
	
	if (ie_tipo_terceiro_w IS NOT NULL AND ie_tipo_terceiro_w::text <> '') and (ie_obtem_regra_crit_w = 'S') then
		if (ie_tipo_terceiro_w <> coalesce(obter_tipo_pessoa_terceiro(cd_medico_w,dt_conta_w,ie_tipo_terceiro_w),'X')) then
			ie_obtem_regra_crit_w	:= 'N';
			--go.to final;
		end if;
	end if;

  if (nr_seq_familia_w IS NOT NULL AND nr_seq_familia_w::text <> '') and (ie_obtem_regra_crit_w = 'S') then

      select max(nr_seq_familia)
      into STRICT nr_seq_familia_material_w
      from material
      where cd_material = cd_material_w;

    if (coalesce(nr_seq_familia_material_w,0) <> nr_seq_familia_w) then
      ie_obtem_regra_crit_w := 'N';
      --go.to final;
    end if;
  end if;	
	
--	<<fi.nal>>
	
	if (ie_obtem_regra_crit_w = 'S') then
	
		cd_regra_repasse_c_w := cd_regra_w;
		nr_seq_crit_c_w	:= nr_seq_criterio_w;
		
	end if;	
	
end	loop;
close	C02;

cd_regra_p		:= cd_regra_repasse_c_w;
nr_seq_criterio_p	:= nr_seq_crit_c_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_regra_mat_repasse ( cd_convenio_p bigint, cd_edicao_amb_p bigint, cd_estabelecimento_p bigint, cd_medico_atend_p bigint, ie_tipo_atendimento_p bigint, nm_usuario_p text, nr_seq_matpaci_p bigint, cd_regra_p INOUT bigint, nr_seq_criterio_p INOUT bigint, ie_responsavel_credito_p text) FROM PUBLIC;

