-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_comunic_aval_fornec ( nm_usuario_p text) AS $body$
DECLARE


nr_seq_tipo_aval_w			bigint;
qt_dias_frequencia_w		integer;
nr_seq_tipo_pj_w			numeric(20);
cd_cgc_w			varchar(14);
dt_ult_aval_w			timestamp;
ds_comunicado_w			varchar(4000);
nm_fantasia_w			varchar(80);
cd_pessoa_resp_w			varchar(10);
pessoa_envio_w			varchar(15);
nr_sequencia_w			bigint;
ds_titulo_w			varchar(255);
qt_dias_aviso_w			integer;

C01 CURSOR FOR
SELECT	nr_sequencia,
	qt_dias_frequencia,
	cd_pessoa_resp,
	qt_dias_aviso
from 	avf_tipo_avaliacao
where	((coalesce(dt_inicio_vigencia::text, '') = '') or (coalesce(dt_fim_vigencia::text, '') = '') or (trunc(clock_timestamp(),'dd') between dt_inicio_vigencia and dt_fim_vigencia))
and	substr(obter_se_avf_tipo_lib(nr_sequencia),1,1) = 'S';

C02 CURSOR FOR
SELECT	cd_tipo_pessoa
from	avf_tipo_av_pj
where	nr_seq_tipo_aval = nr_seq_tipo_aval_w;

C03 CURSOR FOR
SELECT 	cd_cgc
from	pessoa_juridica
where	cd_tipo_pessoa = nr_seq_tipo_pj_w;

C04 CURSOR FOR
SELECT	nm_fantasia
from	pessoa_juridica
where	cd_cgc = cd_cgc_w;


BEGIN
open C01;
loop
fetch C01 into
	nr_seq_tipo_aval_w,
	qt_dias_frequencia_w,
	cd_pessoa_resp_w,
	qt_dias_aviso_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	ds_tipo_avaliacao
	into STRICT	ds_titulo_w
	from	avf_tipo_avaliacao
	where	nr_sequencia = nr_seq_tipo_aval_w;

	open C02;
	loop
	fetch C02 into
		nr_seq_tipo_pj_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		ds_comunicado_w := substr(wheb_mensagem_pck.get_texto(346041),1,255) || ' ';

		open C03;
		loop
		fetch C03 into
			cd_cgc_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			select	max(trunc(dt_avaliacao))
			into STRICT	dt_ult_aval_w
			from	avf_resultado
			where	cd_cnpj = cd_cgc_w;

			if (qt_dias_frequencia_w <> 0) and (dt_ult_aval_w IS NOT NULL AND dt_ult_aval_w::text <> '') and
					((obter_dias_entre_datas(dt_ult_aval_w, clock_timestamp()) + qt_dias_aviso_w) >= qt_dias_frequencia_w) and (nr_seq_tipo_pj_w IS NOT NULL AND nr_seq_tipo_pj_w::text <> '') then
					begin

					open C04;
					loop
					fetch C04 into
						nm_fantasia_w;
					EXIT WHEN NOT FOUND; /* apply on C04 */
							ds_comunicado_w := substr(ds_comunicado_w || ' ' || nm_fantasia_w,1,4000);
						end loop;
					close C04;
					end;
			end if;
			end;
		end loop;
		close C03;

		if (cd_pessoa_resp_w IS NOT NULL AND cd_pessoa_resp_w::text <> '') and (ds_comunicado_w IS NOT NULL AND ds_comunicado_w::text <> '') then
			select	obter_usuario_pessoa(cd_pessoa_resp_w)
			into STRICT	pessoa_envio_w
			;
			select	nextval('comunic_interna_seq')
			into STRICT	nr_sequencia_w
			;

			insert into comunic_interna(
					dt_comunicado,
					ds_titulo,
					ds_comunicado,
					nm_usuario,
					dt_atualizacao,
					ie_geral,
					nm_usuario_destino,
					nr_sequencia,
					ie_gerencial,
					dt_liberacao)
			values (	clock_timestamp(),
					ds_titulo_w,
					ds_comunicado_w,
					nm_usuario_p,
					clock_timestamp(),
					'N',
					pessoa_envio_w,
					nr_sequencia_w,
					'N',
					clock_timestamp());
		end if;

		end;
	end loop;
	close C02;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_comunic_aval_fornec ( nm_usuario_p text) FROM PUBLIC;

