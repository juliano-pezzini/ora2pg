-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_datas_pa ( nr_atendimento_p bigint, ie_opcao_p text, nm_usuario_p text, ie_commit_p text default 'S') AS $body$
DECLARE

			
status_triagem_pa_w   	varchar(1);
cd_perfil_w		bigint;
nr_seq_local_w		bigint;
qt_regra_lancamento_w		bigint;
ie_existe_aux_w		varchar(1) := 'N';



BEGIN
cd_perfil_w	:= obter_perfil_ativo;

status_triagem_pa_w := Obter_Param_Usuario(935, 153, cd_perfil_w, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, status_triagem_pa_w);
nr_seq_local_w := Obter_Param_Usuario(935, 219, cd_perfil_w, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, nr_seq_local_w);


if (ie_opcao_p = 'AM') then
	begin
	update	atendimento_paciente
	set	dt_atend_medico		= clock_timestamp(),
		nm_usuario     		= nm_usuario_p,
		dt_atualizacao 		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
	
	select count(*)
	into STRICT qt_regra_lancamento_w
	from REGRA_LANC_AUTOMATICO 
	where nr_seq_evento = 611;
	
	if (qt_regra_lancamento_w > 0) then
		CALL gerar_lancamento_automatico(nr_atendimento_p, null, 611, nm_usuario_p, 0, null, null, null, null, null);
	end if;
	
	if (status_triagem_pa_w = 'S') then
		update triagem_pronto_atend
		set 	ie_status_paciente	= 'A',
				nm_usuario     		= nm_usuario_p,
				dt_atualizacao 		= clock_timestamp()
		where  nr_atendimento		= nr_atendimento_p;
	end if;
		
	end;

elsif (ie_opcao_p = 'EAM') then
	begin
	update	atendimento_paciente
	set	dt_atend_medico		 = NULL,
		nm_usuario     		= nm_usuario_p,
		dt_atualizacao 		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
	end;
elsif (ie_opcao_p = 'FC') then
	begin
	update	atendimento_paciente
	set	dt_fim_consulta		= clock_timestamp(),
		nm_usuario     		= nm_usuario_p,
		dt_atualizacao 		= clock_timestamp(),
		nr_seq_local_pa		= CASE WHEN nr_seq_local_w=0 THEN nr_seq_local_pa  ELSE nr_seq_local_w END 
	where	nr_atendimento		= nr_atendimento_p
	and	(dt_atend_medico IS NOT NULL AND dt_atend_medico::text <> '');
	end;
elsif (ie_opcao_p = 'EFC') then
	begin
	update	atendimento_paciente
	set	dt_fim_consulta		 = NULL,
		nm_usuario     		= nm_usuario_p,
		dt_atualizacao 		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
	end;
elsif (ie_opcao_p = 'ELM') then
	begin
	update	atendimento_paciente
	set	dt_lib_medico		 = NULL,
		nm_usuario     		= nm_usuario_p,
		dt_atualizacao 		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
	end;
elsif (ie_opcao_p = 'LM') then
	update	atendimento_paciente
	set	dt_lib_medico	= clock_timestamp(),
		nm_usuario     	= nm_usuario_p,
		dt_atualizacao 	= clock_timestamp()
	where	nr_atendimento	= nr_atendimento_p
	and	coalesce(dt_lib_medico::text, '') = '';
elsif (ie_opcao_p = 'IR') then
	update	atendimento_paciente
	set	dt_inicio_reavaliacao	= clock_timestamp(),
		nm_usuario     		= nm_usuario_p,
		dt_atualizacao 		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
elsif (ie_opcao_p = 'EIR') then
	update	atendimento_paciente
	set	dt_inicio_reavaliacao	 = NULL,
		nm_usuario     		= nm_usuario_p,
		dt_atualizacao 		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
elsif (ie_opcao_p = 'DFC') then
	begin
	update	atendimento_paciente
	set	dt_fim_consulta		= clock_timestamp(),
		dt_lib_medico		= clock_timestamp(),
		nm_usuario     		= nm_usuario_p,
			dt_atualizacao 		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p
	and	(dt_atend_medico IS NOT NULL AND dt_atend_medico::text <> '');
	end;
elsif (ie_opcao_p = 'FR') then
	begin
	update	atendimento_paciente
	set	dt_fim_reavaliacao	= clock_timestamp(),
		nm_usuario     		= nm_usuario_p,
		dt_atualizacao 		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
	end;
elsif (ie_opcao_p = 'EFR') then
	begin
	update	atendimento_paciente
	set	dt_fim_reavaliacao	 = NULL,
		nm_usuario     		= nm_usuario_p,
		dt_atualizacao 		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
	end;
elsif (ie_opcao_p = 'IO') then
	update	atendimento_paciente
	set	dt_inicio_observacao	= clock_timestamp(),
		nm_usuario     		= nm_usuario_p,
		dt_atualizacao 		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
elsif (ie_opcao_p = 'EIO') then
	update	atendimento_paciente
	set	dt_inicio_observacao	 = NULL,
		nm_usuario     		= nm_usuario_p,
		dt_atualizacao 		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
elsif (ie_opcao_p = 'FO') then
	begin
	update	atendimento_paciente
	set	dt_fim_observacao	= clock_timestamp(),
		nm_usuario     		= nm_usuario_p,
		dt_atualizacao 		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
	
	CALL gerar_lancamento_automatico(nr_atendimento_p,null,540,nm_usuario_p,null,null,null,null,null,null);
	end;
elsif (ie_opcao_p = 'EFO') then
	begin
	update	atendimento_paciente
	set	dt_fim_observacao	 = NULL,
		nm_usuario     		= nm_usuario_p,
		dt_atualizacao 		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
	end;
elsif (ie_opcao_p = 'AE') then
	begin	
	update	atendimento_paciente
	set	dt_inicio_esp_exame	= clock_timestamp(),
		dt_fim_esp_exame	 = NULL,
		nm_usuario     		= nm_usuario_p,
		dt_atualizacao 		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
	end;
elsif (ie_opcao_p = 'EE') then
	begin
	update	atendimento_paciente
	set	dt_fim_esp_exame	= clock_timestamp(),
		nm_usuario     		= nm_usuario_p,
		dt_atualizacao 		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
	end;
elsif (ie_opcao_p = 'IMA') then
	begin
	update	atendimento_paciente
	set		dt_inicio_prescr_pa	= clock_timestamp(),
			nm_usuario     		= nm_usuario_p,
			dt_atualizacao 		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
	end;
elsif (ie_opcao_p = 'FMA') then
	begin
	update	atendimento_paciente
	set		dt_fim_prescr_pa	= clock_timestamp(),
			nm_usuario     		= nm_usuario_p,
			dt_atualizacao 		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
	end;
elsif (ie_opcao_p = 'DFE') then
	begin
	update	atendimento_paciente
	set	dt_fim_triagem	 = NULL,
		nm_usuario     		= nm_usuario_p,
		dt_atualizacao 		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
	end;
elsif (ie_opcao_p = 'EAE') then
	begin
	update	atendimento_paciente
	set	dt_inicio_esp_exame	 = NULL,
		dt_fim_esp_exame	 = NULL,
		nm_usuario     		= nm_usuario_p,
		dt_atualizacao 		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
	end;
elsif (ie_opcao_p = 'CPE') then
	begin
	update	atendimento_paciente
	set 	dt_chamada_enfermagem  = NULL,
			nm_usuario     		= nm_usuario_p,
			dt_atualizacao 		= clock_timestamp()		
	where	nr_atendimento = nr_atendimento_p;
	end;
elsif (ie_opcao_p = 'NR') then
	begin
	
	Select 	coalesce(max('S'),'N')
	into STRICT	ie_existe_aux_w
	from	atendimento_paciente_aux
	where 	nr_Atendimento = nr_atendimento_p;
	
	if (ie_existe_aux_w = 'N') then
	
		insert into atendimento_paciente_aux( nr_sequencia,
												dt_atualizacao,
												dt_atualizacao_nrec,
												nm_usuario,
												nm_usuario_nrec,
												nr_atendimento,
												IE_NECESSIDADE_RECONSULTA)
										values (nextval('atendimento_paciente_aux_seq'),
												clock_timestamp(),
												clock_timestamp(),
												nm_usuario_p,
												nm_usuario_p,
												nr_atendimento_p,
												'S');	
	
	else
		
		update	atendimento_paciente_aux
		set 	IE_NECESSIDADE_RECONSULTA = 'S',
				nm_usuario     		= nm_usuario_p,
				dt_atualizacao 		= clock_timestamp()		
		where	nr_atendimento = nr_atendimento_p;
		
	
	end if;
	
	end;
elsif (ie_opcao_p = 'DNR') then
	begin	
		
	update	atendimento_paciente_aux
	set 	IE_NECESSIDADE_RECONSULTA = 'N',
			nm_usuario     		= nm_usuario_p,
			dt_atualizacao 		= clock_timestamp()		
	where	nr_atendimento = nr_atendimento_p;
	end;	
	
end if;

if (coalesce(ie_commit_p,'S') = 'S') then
	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_datas_pa ( nr_atendimento_p bigint, ie_opcao_p text, nm_usuario_p text, ie_commit_p text default 'S') FROM PUBLIC;

