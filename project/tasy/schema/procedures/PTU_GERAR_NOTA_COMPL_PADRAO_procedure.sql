-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_nota_compl_padrao ( nr_seq_cobranca_p ptu_nota_cobranca.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

					
nr_lote_w			ptu_nota_cobranca.nr_lote%type;
nr_nota_w			ptu_nota_complemento.nr_nota%type;
nr_seq_pls_fatura_w		pls_fatura.nr_sequencia%type;
nr_seq_conta_cobr_w		pls_conta.nr_sequencia%type;
qt_registro_w			integer;
ie_tipo_guia_w			pls_conta.ie_tipo_guia%type;
qt_complemento_w		integer;
ds_observacao_w			varchar(4000);
ds_obs_1_w			varchar(100);
ds_obs_2_w			varchar(100);
ds_obs_3_w			varchar(100);
ds_obs_4_w			varchar(100);
ds_obs_5_w			varchar(100);
nr_seq_tipo_atendimento_w	pls_conta.nr_seq_tipo_atendimento%type;
ie_remocao_w			integer;
ds_observacao_a500_w		varchar(500); --pls_conta_observacao_a500.ds_observacao%type;   -- 300
qt_compl_w			integer;
ie_ind_clinica_w		integer := 0;
nr_seq_ptu_fatura_w		ptu_fatura.nr_sequencia%type;
ie_tipo_cobranca_fatura_w	ptu_fatura.ie_tipo_cobranca_fatura%type;

c01 CURSOR(	nr_seq_pls_fatura_pc		pls_fatura.nr_sequencia%type,
		nr_seq_conta_cobr_pc		pls_conta.nr_sequencia%type) FOR
	SELECT	coalesce(trim(both replace(replace(ptu_somente_caracter_permitido(substr(coalesce(trim(both a.ds_indicacao_clinica), trim(both n.ds_indicacao_clinica)), 1, 100), 'ANS'), chr(10), ' '), chr(13), ' ')), 'SEM INDICACAO CLINICA') ds_indicacao_clinica,
		a.nr_sequencia nr_seq_conta
	FROM pls_fatura_evento z, pls_fatura x, pls_fatura_conta w, pls_protocolo_conta c, pls_conta a
LEFT OUTER JOIN pls_guia_plano n ON (a.nr_seq_guia = n.nr_sequencia)
WHERE c.nr_sequencia		= a.nr_seq_protocolo and a.nr_sequencia		= w.nr_seq_conta and z.nr_sequencia		= w.nr_seq_fatura_evento and x.nr_sequencia		= z.nr_seq_fatura  and x.nr_sequencia		= nr_seq_pls_fatura_pc and a.nr_sequencia		= nr_seq_conta_cobr_pc group by
		a.ds_indicacao_clinica,
		a.nr_sequencia,
		n.ds_indicacao_clinica;
		
c02 CURSOR(	nr_seq_conta_pc		pls_conta.nr_sequencia%type) FOR
	SELECT	trim(both replace(replace(ptu_somente_caracter_permitido(ds_especif_material, 'ANS'), chr(10), ' '), chr(13), ' ')) ds_especif_material
	from (SELECT	substr(ds_especif_material, 1, 500) ds_especif_material
		from	pls_conta_proc
		where	nr_seq_conta = nr_seq_conta_pc
		and	(ds_especif_material IS NOT NULL AND ds_especif_material::text <> '')
		
union all

		select	substr(ds_especif_material, 1, 500) ds_especif_material
		from	pls_conta_mat
		where	nr_seq_conta = nr_seq_conta_pc
		and	(ds_especif_material IS NOT NULL AND ds_especif_material::text <> '')) alias11 LIMIT 5;
	
c03 CURSOR(	nr_seq_conta_cobr_pc		pls_conta.nr_sequencia%type) FOR
	SELECT	trim(both replace(replace(ptu_somente_caracter_permitido(ds_observacao, 'ANS'), chr(10), ' '), chr(13), ' ')) ds_observacao
	from	pls_conta_observacao_a500
	where 	nr_seq_conta = nr_seq_conta_cobr_pc;
	
BEGIN

select	count(1)
into STRICT	qt_complemento_w
from	ptu_nota_complemento
where	nr_seq_nota_cobr = nr_seq_cobranca_p;

-- Por causa do agrupamento de contas em registro de cobranca (502)
-- Se ja tiver gerado, nao gerar novamente
if (qt_complemento_w = 0) then


	select	coalesce(max(a.ie_tipo_cobranca_fatura), 'C')
	into STRICT	ie_tipo_cobranca_fatura_w
	from	ptu_fatura		a,
		ptu_nota_cobranca	b
	where	b.nr_seq_fatura		= a.nr_sequencia
	and	b.nr_sequencia		= nr_seq_cobranca_p;


	select	max(t.nr_nota),
		max(t.nr_lote),
		max(t.nr_seq_conta),
		max(t.nr_seq_pls_fatura),
		max(t.ie_tipo_guia),
		max(t.ds_observacao),
		max(t.nr_seq_tipo_atendimento),
		max(t.nr_sequencia)
	into STRICT	nr_nota_w,
		nr_lote_w,
		nr_seq_conta_cobr_w,
		nr_seq_pls_fatura_w,
		ie_tipo_guia_w,
		ds_observacao_w,
		nr_seq_tipo_atendimento_w,
		nr_seq_ptu_fatura_w
	from (	SELECT	c.nr_nota,
			c.nr_lote,
			c.nr_seq_conta,
			b.nr_seq_pls_fatura,
			a.ie_tipo_guia,
			a.ds_observacao,
			a.nr_seq_tipo_atendimento,
			b.nr_sequencia		
		from	ptu_nota_cobranca		c,
			ptu_fatura			b,
			pls_conta_pos_cab_v		a
		where	c.nr_sequencia			= nr_seq_cobranca_p
		and	c.nr_seq_fatura			= b.nr_sequencia
		and	c.nr_seq_conta			= a.nr_sequencia
		and	ie_tipo_cobranca_fatura_w	= 'C'
		
union all

		SELECT	c.nr_nota,
			c.nr_lote,
			c.nr_seq_conta,
			b.nr_seq_pls_fatura,
			a.ie_tipo_guia,
			a.ds_observacao,
			a.nr_seq_tipo_atendimento,
			b.nr_sequencia		
		from	ptu_nota_cobranca		c,
			ptu_fatura			b,
			pls_conta			a
		where	c.nr_sequencia			= nr_seq_cobranca_p
		and	c.nr_seq_fatura			= b.nr_sequencia
		and	c.nr_seq_conta			= a.nr_sequencia
		and	ie_tipo_cobranca_fatura_w	= 'A') t;
	
	select	count(1)
	into STRICT 	qt_compl_w
	from	ptu_nota_complemento	x,
		ptu_nota_cobranca	c
	where	c.nr_sequencia		= x.nr_seq_nota_cobr
	and	c.nr_seq_fatura		= nr_seq_ptu_fatura_w
	and	x.nr_lote		= nr_lote_w
	and	x.nr_nota		= nr_nota_w;
	
	for r_c03_w in C03( nr_seq_conta_cobr_w ) loop
		ds_observacao_a500_w := substr(ds_observacao_a500_w || r_c03_w.ds_observacao || ' - ', 1, 500);
	end loop;
	
	select	count(1)
	into STRICT	ie_ind_clinica_w
	from	pls_tipo_atendimento
	where	nr_sequencia = nr_seq_tipo_atendimento_w
	and	cd_tiss in ('02', '03', '08', '09', '10'); -- Pequena Cirurgia / Terapias / Quimioterapia / Radioterapia / TRS
	
	if (ie_ind_clinica_w = 0) then
		-- Procedimentos com diretriz de utilizacao
		select	sum(CASE WHEN pls_obter_dados_grupo_rol(p.cd_procedimento,p.ie_origem_proced,'DUT')='S' THEN 1  ELSE 0 END )
		into STRICT	ie_ind_clinica_w
		from	pls_conta_proc p
		where	nr_seq_conta = nr_seq_conta_cobr_w;
	end if;			
	
	-- Registro R505 ? Complemento (Opcional) deve existir apos todos os registros R504 da nota. Obrigatorio a existencia de pelo menos 1 registro do tipo 1-Indicacao Clinica para TP_ATENDIMENTO 
	-- (R502 ? Tipo de Atendimento) igual a ?02? (Pequena Cirurgia), ?03? (Terapias), ?08?(Quimioterapia), ?09? (Radioterapia), ?10? (TRS) ou procedimentos com diretriz de utilizacao. 
	-- Tambem sera obrigatorio para internacoes.
	if (ie_ind_clinica_w > 0) or (ie_tipo_guia_w = '5') then
		for r_c01_w in c01( nr_seq_pls_fatura_w , nr_seq_conta_cobr_w ) loop
			select	sum(qt_item)
			into STRICT	qt_registro_w
			from (SELECT	count(1) qt_item
				from	pls_conta_proc
				where	nr_seq_conta = r_c01_w.nr_seq_conta
				and	trim(both replace(replace(ds_especif_material, chr(10), ''), chr(13), '')) is not null
				
union all

				SELECT	count(1) qt_item
				from	pls_conta_mat
				where	nr_seq_conta = r_c01_w.nr_seq_conta
				and	trim(both replace(replace(ds_especif_material, chr(10), ''), chr(13), '')) is not null) alias16;
				
			if (qt_registro_w = 0) then
				if (qt_compl_w = 0) then
					if (r_c01_w.ds_indicacao_clinica IS NOT NULL AND r_c01_w.ds_indicacao_clinica::text <> '') then
						insert into ptu_nota_complemento(	nr_sequencia,				nr_seq_nota_cobr,		nr_lote,
											nr_nota, 				ie_tipo_complemento, 		ds_complemento,
											dt_atualizacao, 			nm_usuario, 			dt_atualizacao_nrec,
											nm_usuario_nrec, 			especif_material)
									values (	nextval('ptu_nota_complemento_seq'), 	nr_seq_cobranca_p, 		nr_lote_w,
											nr_nota_w, 				1, 				r_c01_w.ds_indicacao_clinica,
											clock_timestamp(), 				nm_usuario_p, 			clock_timestamp(),
											nm_usuario_p, 				null);
					end if;
					-- pra nao precisar ficar fazendo select desnecessariamente, quando entrar aqui a primeira vez coloca 1
					qt_compl_w := 1;
				end if;
			elsif (qt_registro_w > 0) then
				for r_c02_w in c02( r_c01_w.nr_seq_conta ) loop
					if (r_c02_w.ds_especif_material IS NOT NULL AND r_c02_w.ds_especif_material::text <> '') then
						insert into ptu_nota_complemento(	nr_sequencia,				nr_seq_nota_cobr,					nr_lote,
											nr_nota,				ie_tipo_complemento,					ds_complemento,
											dt_atualizacao,				nm_usuario,						dt_atualizacao_nrec,
											nm_usuario_nrec,			especif_material)
									values (	nextval('ptu_nota_complemento_seq'),	nr_seq_cobranca_p,					nr_lote_w,
											nr_nota_w,				1,							r_c02_w.ds_especif_material,
											clock_timestamp(),				nm_usuario_p,						clock_timestamp(),
											nm_usuario_p,				upper(elimina_acentuacao(r_c02_w.ds_especif_material)));
					end if;
				end loop;
			end if;
		end loop;
	end if;
	
	select	count(1)
	into STRICT	ie_remocao_w
	from	pls_tipo_atendimento
	where	nr_sequencia = nr_seq_tipo_atendimento_w
	and	cd_tiss = '01'; -- Remocao
	
	if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') and (ie_remocao_w > 0) then
	
		if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then
			ds_observacao_w	:= substr(ds_observacao_w || ds_observacao_a500_w, 1, 500);
		end if;
		
		qt_complemento_w	:= 1;
		ds_obs_1_w		:= substr(ds_observacao_w, 1, 100);
		ds_obs_2_w		:= substr(ds_observacao_w, 101, 100);
		ds_obs_3_w		:= substr(ds_observacao_w, 201, 100);
		ds_obs_4_w		:= substr(ds_observacao_w, 301, 100);
		ds_obs_5_w		:= substr(ds_observacao_w, 401, 100);
		ds_observacao_w		:= null;
		
		-- Tipo 2 pode ter no maximo 5 linhas
		while(qt_complemento_w < 6) loop
			if (qt_complemento_w = 1) then
				ds_observacao_w := ds_obs_1_w;
				qt_complemento_w:= qt_complemento_w + 1;
				
			elsif (qt_complemento_w = 2) then
				ds_observacao_w := ds_obs_2_w;
				qt_complemento_w:= qt_complemento_w + 1;
				
			elsif (qt_complemento_w = 3) then
				ds_observacao_w := ds_obs_3_w;
				qt_complemento_w:= qt_complemento_w + 1;
				
			elsif (qt_complemento_w = 4) then
				ds_observacao_w := ds_obs_4_w;
				qt_complemento_w:= qt_complemento_w + 1;
				
			elsif (qt_complemento_w = 5) then
				ds_observacao_w := ds_obs_5_w;
				qt_complemento_w:= qt_complemento_w + 1;
			end if;
			
			if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then
				insert into ptu_nota_complemento(	nr_sequencia,				nr_seq_nota_cobr,		nr_lote,
									nr_nota,				ie_tipo_complemento,		ds_complemento,
									dt_atualizacao,				nm_usuario,			dt_atualizacao_nrec,
									nm_usuario_nrec,			especif_material)
							values (	nextval('ptu_nota_complemento_seq'),	nr_seq_cobranca_p,		nr_lote_w,
									nr_nota_w,				2,				substr(ds_observacao_w, 1, 100),
									clock_timestamp(),				nm_usuario_p,			clock_timestamp(),
									nm_usuario_p,				null);
			end if;
		end loop;
	elsif (ds_observacao_a500_w IS NOT NULL AND ds_observacao_a500_w::text <> '') then
		ds_observacao_w		:= substr(ds_observacao_a500_w, 1, 500);
		qt_complemento_w	:= 1;
		ds_obs_1_w		:= substr(ds_observacao_w, 1, 100);
		ds_obs_2_w		:= substr(ds_observacao_w, 101, 100);
		ds_obs_3_w		:= substr(ds_observacao_w, 201, 100);
		ds_obs_4_w		:= substr(ds_observacao_w, 301, 100);
		ds_obs_5_w		:= substr(ds_observacao_w, 401, 100);
		ds_observacao_w		:= null;
		
		-- Tipo 2 pode ter no maximo 5 linhas
		while(qt_complemento_w < 6) loop
			if (qt_complemento_w = 1) then
				ds_observacao_w := ds_obs_1_w;
				qt_complemento_w:= qt_complemento_w + 1;
				
			elsif (qt_complemento_w = 2) then
				ds_observacao_w := ds_obs_2_w;
				qt_complemento_w:= qt_complemento_w + 1;
				
			elsif (qt_complemento_w = 3) then
				ds_observacao_w := ds_obs_3_w;
				qt_complemento_w:= qt_complemento_w + 1;
				
			elsif (qt_complemento_w = 4) then
				ds_observacao_w := ds_obs_4_w;
				qt_complemento_w:= qt_complemento_w + 1;
				
			elsif (qt_complemento_w = 5) then
				ds_observacao_w := ds_obs_5_w;
				qt_complemento_w:= qt_complemento_w + 1;
			end if;
			
			if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then
				insert into ptu_nota_complemento(	nr_sequencia,				nr_seq_nota_cobr,		nr_lote,
									nr_nota,				ie_tipo_complemento,		ds_complemento,
									dt_atualizacao,				nm_usuario,			dt_atualizacao_nrec,
									nm_usuario_nrec,			especif_material)
							values (	nextval('ptu_nota_complemento_seq'),	nr_seq_cobranca_p,		nr_lote_w,
									nr_nota_w,				2,				substr(ds_observacao_w, 1, 100),
									clock_timestamp(),				nm_usuario_p,			clock_timestamp(),
									nm_usuario_p,				null);
			end if;
		end loop;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_nota_compl_padrao ( nr_seq_cobranca_p ptu_nota_cobranca.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

