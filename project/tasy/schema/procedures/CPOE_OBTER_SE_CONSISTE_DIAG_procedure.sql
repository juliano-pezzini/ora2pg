-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_obter_se_consiste_diag ( nr_atendimento_p atendimento_paciente.nr_atendimento%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_perfil_p perfil.cd_perfil%type, cd_material_p material.cd_material%type, nm_usuario_p usuario.nm_usuario%type, ie_consiste_cid_p INOUT text, ie_permite_justificar_p INOUT text, ds_doenca_cid_p INOUT text, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type default null, si_form_validation_p INOUT text DEFAULT NULL) AS $body$
DECLARE


C01 CURSOR FOR
SELECT  cd_material_regra,
        chr(10) ||  trim(both cd_doenca_cid) || ' - '||obter_desc_cid_doenca(trim(both cd_doenca_cid))  ds_doenca_cid,
        coalesce(ie_permite_justificar, 'N') ie_permite_justificar,
        cd_perfil,
        coalesce(si_form_validation,'Y') si_form_validation
from    cpoe_rule_consist_diag a
where   (cd_estabelecimento IS NOT NULL AND cd_estabelecimento::text <> '')
and     (cd_doenca_cid IS NOT NULL AND cd_doenca_cid::text <> '')
and     cd_estabelecimento =  cd_estabelecimento_p
and (coalesce(cd_perfil::text, '') = '' or cd_perfil = cd_perfil_p)
and (coalesce(cd_material_regra::text, '') = '' or cd_material_regra = cd_material_p)
and     ((exists (   SELECT    1
					  from      atendimento_paciente y,
								diagnostico_doenca x
						where   x.cd_doenca = a.cd_doenca_cid
						and     x.nr_atendimento = y.nr_atendimento
            and   y.nr_atendimento = nr_atendimento_p
						and		(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')
						and     coalesce(x.ie_situacao,'A') = 'A'
						and (coalesce(x.dt_inativacao::text, '') = '' or x.dt_inativacao > clock_timestamp())) and coalesce(SI_ICD_CHECK,'E') = 'E' and coalesce(si_form_validation,'Y') = 'Y')
or (not exists (   select    1
					  from      atendimento_paciente y,
								diagnostico_doenca x
						where   x.cd_doenca = a.cd_doenca_cid
						and     x.nr_atendimento = y.nr_atendimento
            and   y.nr_atendimento = nr_atendimento_p
						and		(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')
						and     coalesce(x.ie_situacao,'A') = 'A'
						and (coalesce(x.dt_inativacao::text, '') = '' or x.dt_inativacao > clock_timestamp())) and coalesce(SI_ICD_CHECK,'E') = 'E' and coalesce(si_form_validation,'Y') = 'N')
or (exists (   select    1
					  from      atendimento_paciente y,
								diagnostico_doenca x
						where   x.cd_doenca = a.cd_doenca_cid
						and     x.nr_atendimento = y.nr_atendimento
            and   y.cd_pessoa_fisica = cd_pessoa_fisica_p
						and		(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')
						and     coalesce(x.ie_situacao,'A') = 'A'
						and (coalesce(x.dt_inativacao::text, '') = '' or x.dt_inativacao > clock_timestamp())
						
union all

						select	1
						from	paciente_antec_clinico x
						where	x.cd_pessoa_fisica = cd_pessoa_fisica_p
						and		(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')
						and		x.cd_doenca = a.cd_doenca_cid
						and (coalesce(x.dt_inativacao::text, '') = '' or x.dt_inativacao > clock_timestamp())
						and 	clock_timestamp() between coalesce(x.dt_inicio,clock_timestamp()) and coalesce(x.dt_fim,clock_timestamp()))
						and coalesce(SI_ICD_CHECK,'E') = 'P' and coalesce(si_form_validation,'Y') = 'Y')
or (not exists (   select    1
					  from      atendimento_paciente y,
								diagnostico_doenca x
						where   x.cd_doenca = a.cd_doenca_cid
						and     x.nr_atendimento = y.nr_atendimento
            and   y.cd_pessoa_fisica = cd_pessoa_fisica_p
						and		(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')
						and     coalesce(x.ie_situacao,'A') = 'A'
						and (coalesce(x.dt_inativacao::text, '') = '' or x.dt_inativacao > clock_timestamp())
						
union all

						select	1
						from	paciente_antec_clinico x
						where	x.cd_pessoa_fisica = cd_pessoa_fisica_p
						and		(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')
						and		x.cd_doenca = a.cd_doenca_cid
						and (coalesce(x.dt_inativacao::text, '') = '' or x.dt_inativacao > clock_timestamp())
						and 	clock_timestamp() between coalesce(x.dt_inicio,clock_timestamp()) and coalesce(x.dt_fim,clock_timestamp()))
					and coalesce(SI_ICD_CHECK,'E') = 'P' and coalesce(si_form_validation,'Y') = 'N'))
and     coalesce(a.ie_situacao, 'A') = 'A'
and (obter_excessao_usuario_diag(nr_sequencia, nm_usuario_p) = 'S')
and (coalesce(a.nr_seq_ficha_tecnica::text, '') = '' or a.nr_seq_ficha_tecnica = obter_ficha_tecnica_medic(cd_material_p))
order by       coalesce(cd_material_regra, 0),
               coalesce(cd_perfil, 0);

BEGIN

ie_consiste_cid_p := 'N';
ie_permite_justificar_p := 'A';

for c01_w in c01 loop
    ie_consiste_cid_p := 'S';
    if (c01_w.ie_permite_justificar = 'N') then
		ie_permite_justificar_p := 'N';
		ds_doenca_cid_p := obter_desc_expressao(333891) || obter_desc_expressao(709240) || chr(13)||chr(10)|| ds_doenca_cid_p || chr(13)||chr(10) || c01_w.ds_doenca_cid;
    elsif (c01_w.ie_permite_justificar = 'S' and ie_permite_justificar_p <> 'N') then
		ie_permite_justificar_p := 'S';
		ds_doenca_cid_p := obter_desc_expressao(322979) || obter_desc_expressao(709240) || chr(13)||chr(10)|| ds_doenca_cid_p || chr(13)||chr(10) || c01_w.ds_doenca_cid;
    elsif (c01_w.ie_permite_justificar = 'A' and (ie_permite_justificar_p <> 'N' or ie_permite_justificar_p <> 'S')) then
		ie_permite_justificar_p := 'A';
		ds_doenca_cid_p := obter_desc_expressao(283347) || obter_desc_expressao(709240) || chr(13)||chr(10) || ds_doenca_cid_p || chr(13)||chr(10) || c01_w.ds_doenca_cid;
    end if;
	si_form_validation_p := c01_w.si_form_validation;
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_obter_se_consiste_diag ( nr_atendimento_p atendimento_paciente.nr_atendimento%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_perfil_p perfil.cd_perfil%type, cd_material_p material.cd_material%type, nm_usuario_p usuario.nm_usuario%type, ie_consiste_cid_p INOUT text, ie_permite_justificar_p INOUT text, ds_doenca_cid_p INOUT text, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type default null, si_form_validation_p INOUT text DEFAULT NULL) FROM PUBLIC;

