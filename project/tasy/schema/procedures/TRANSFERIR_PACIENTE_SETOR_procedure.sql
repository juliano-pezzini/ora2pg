-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE transferir_paciente_setor ( nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_classif_setor_p bigint, nr_acompanhantes_p bigint, cd_tipo_acomodacao_p bigint, cd_estabelecimento_p bigint, nr_seq_motivo_transf_p bigint, dt_entrada_unidade_p timestamp, cd_unidade_basica_p INOUT text, cd_unidade_compl_p INOUT text, ie_mov_centro_cirurg_p text, ie_setor_sem_acomodacao_p text, ie_ativar_local_destino_p text, ie_isolar_paciente_p text, ds_observacao_p text, ie_trocar_setor_prescricoes_p text, ie_bloquear_p text, ie_restringe_tipo_atend_p text, ie_restringe_tipo_atend_274_p text, ie_encerrar_cig_p text, ie_transf_prescr_pend_p text,-- OS 267552
 ds_classif_setores_transf_p text,-- OS 267552
 ds_classif_setores_origem_p text,-- OS 267552
 ie_atualizar_turno_prescr_p text,-- OS 265314
 cd_motivo_permanencia_p bigint, ds_consist_tipo_acomod_p INOUT text, ie_atendimento_disp_p INOUT text, ie_leito_radioterapia_p INOUT text, cd_setor_anterior_p INOUT bigint, cd_setor_atend_p INOUT bigint, ie_permite_inicio_higien_p INOUT text, ds_erro_p INOUT text, nm_usuario_p text, cd_perfil_p bigint, ie_tipo_movimentacao_lote_p text, ie_gerar_transf_paciente_p text, nr_seq_classif_esp_p bigint default null, cd_departamento_p atend_paciente_unidade.cd_departamento%type default null) AS $body$
DECLARE


cd_setor_anterior_w		integer := 0;
cd_acomodacao_w			varchar(1);
ie_mov_centro_cirurg_w		varchar(1);
ie_permite_passagem_w		varchar(1);
ie_restringe_tipo_w		varchar(1);
ie_restringe_tipo_274_w		varchar(1);
ie_leito_radioterapia_w		varchar(1) := 'N';
ds_erro_w			varchar(2000);
ie_classif_setor_origem_w	varchar(1);--OS 267552
ie_classif_setor_transf_w	varchar(1);--OS 267552
cd_classif_setor_origem_w	integer;--OS 267552
cd_setor_atend_w		integer;
cd_unidade_basica_w		varchar(255);
cd_unidade_compl_w		varchar(255);
qt_minuto_max_w			bigint;
qt_min_perm_setor_w		numeric(20);
ie_permite_inicio_higien_w	varchar(1);
ie_inat_Unid_Agrup_w varchar(1);
ie_situacao_w		unidade_atendimento.ie_situacao%type;
nr_seq_interno_w	unidade_atendimento.nr_seq_interno%type;
ds_origem_w			varchar(1800);
ds_unidade_log_w			varchar(4000);
nr_agrupamento_acom_w		integer;
cd_unid_comp_acom_w		varchar(10);
cd_unidade_basica_acom_w	varchar(10);

c01 CURSOR FOR
SELECT	a.nr_atend_acompanhante
		from	episodio_acompanhante a
		where	obter_se_permite_mov_cc('S', a.nr_atend_acompanhante, cd_setor_atendimento_p) = 'S'
		and a.nr_atend_paciente = nr_atendimento_p
		and a.nr_atend_acompanhante in (
					SELECT	b.nr_atendimento
					from	atendimento_paciente b
					where	b.nr_atendimento = a.nr_atend_acompanhante
					and coalesce(b.dt_alta::text, '') = '');

BEGIN
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	begin
	ie_inat_Unid_Agrup_w := obter_param_usuario(916, 737, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_inat_Unid_Agrup_w);
	
	ie_permite_passagem_w	:= obter_se_permite_passagem(nr_atendimento_p,dt_entrada_unidade_p,cd_estabelecimento_p);
	
	if (ie_permite_passagem_w = 'N') then
		begin
		ds_erro_w := wheb_mensagem_pck.get_texto(278988);
		end;
	end if;
	
	if (coalesce(ds_erro_w::text, '') = '') then
		begin
		select	(coalesce(obter_unidade_atendimento(nr_atendimento_p,'IAA','CS'),0))::numeric
		into STRICT	cd_setor_anterior_w
		;
	
		--OS 267552
		cd_classif_setor_origem_w := (coalesce(obter_classif_setor(cd_setor_anterior_w), 0))::numeric;
		
		ie_classif_setor_transf_w := obter_se_contido_char(cd_classif_setor_p, ds_classif_setores_transf_p);
		ie_classif_setor_origem_w := obter_se_contido_char(cd_classif_setor_origem_w, ds_classif_setores_origem_p);
	
		begin
		select	obter_se_sem_acomodacao(cd_tipo_acomodacao)
		into STRICT	cd_acomodacao_w
		from	atend_paciente_unidade
		where	nr_seq_interno = ( 	
					SELECT	max(nr_seq_interno)
					from	atend_paciente_unidade
					where	nr_atendimento = nr_atendimento_p
					and 	coalesce(dt_saida_unidade::text, '') = '');
		exception
			when others then
			cd_acomodacao_w := 'X';
		end;
		end;
	end if;
	
	if (coalesce(ds_erro_w::text, '') = '') and (ie_setor_sem_acomodacao_p = 'N') and
		((cd_acomodacao_w = '') or (cd_acomodacao_w = 'S')) and (cd_classif_setor_p in (3,4,8)) then
		begin
		ds_erro_w := wheb_mensagem_pck.get_texto(278989);
		end;		
	end if;
	
	if (coalesce(ds_erro_w::text, '') = '') and (ie_mov_centro_cirurg_p = 'S') and (obter_se_permite_mov_cc('S',nr_atendimento_p,cd_setor_atendimento_p) = 'N') then
		begin
		ds_erro_w := wheb_mensagem_pck.get_texto(278991);
		end;
	end if;
	
	if (coalesce(ds_erro_w::text, '') = '') and
		(((ie_restringe_tipo_atend_p IS NOT NULL AND ie_restringe_tipo_atend_p::text <> '') and (ie_restringe_tipo_atend_p     <> '') and (cd_classif_setor_p in (3,4,8))) or
		 ((ie_restringe_tipo_atend_274_p IS NOT NULL AND ie_restringe_tipo_atend_274_p::text <> '') and (ie_restringe_tipo_atend_274_p <> '') and (cd_classif_setor_p = 4))) then
		begin
		
		select	obter_se_contido_char(ie_tipo_atendimento, ie_restringe_tipo_atend_p),
			obter_se_contido_char(ie_tipo_atendimento, ie_restringe_tipo_atend_274_p)
		into STRICT	ie_restringe_tipo_w,
			ie_restringe_tipo_274_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_p;
		
		if (ie_restringe_tipo_w = 'S') then			
			ds_erro_w := wheb_mensagem_pck.get_texto(278992);
		elsif (ie_restringe_tipo_274_w = 'S') then
			ds_erro_w := wheb_mensagem_pck.get_texto(278993);		
		end if;
		end;		
	end if;
	
	if (coalesce(ds_erro_w::text, '') = '') then
		begin
		if (ie_ativar_local_destino_p = 'S') then
			begin
			CALL inativar_ativar_unidade_atend(cd_setor_atendimento_p,cd_unidade_basica_p,cd_unidade_compl_p,'A',nm_usuario_p);
			end;
		end if;		
		
		cd_setor_atend_w		:= obter_unidade_atendimento(nr_atendimento_p,'A','CS');
		cd_unidade_basica_w		:= obter_unidade_atendimento(nr_atendimento_p,'A','UB');
		cd_unidade_compl_w		:= obter_unidade_atendimento(nr_atendimento_p,'A','UC');
		
		if (cd_setor_atend_w IS NOT NULL AND cd_setor_atend_w::text <> '') then
			begin
						
			ds_erro_w := consistir_regra_transf_setor(
				'T', cd_setor_anterior_w, cd_setor_atendimento_p, nr_atendimento_p, ds_erro_w);
			
				if (coalesce(ds_erro_w::text, '') = '') then
					ds_erro_w := consistir_transf_setores(
						cd_setor_atend_w, cd_setor_atendimento_p, cd_estabelecimento_p, nr_atendimento_p, ds_erro_w);
				end if;
			end;
		end if;
		end;
	end if;
	
	if (ie_inat_Unid_Agrup_w = 'S') then
	select 	max(ie_situacao),
			max(nr_seq_interno)
	into STRICT	ie_situacao_w,
			nr_seq_interno_w
	from	unidade_atendimento
	where	cd_setor_atendimento = cd_setor_atendimento_p
	and		cd_unidade_basica	 = cd_unidade_basica_p
	and		cd_unidade_compl	 = cd_unidade_compl_p;
	
	
	ds_erro_w := ATUALIZAR_UNID_ATEND_SIT_EUP(nr_seq_interno_w, ie_situacao_w, nm_usuario_p, cd_estabelecimento_p, ds_erro_w);
	
	end if;
	
	if (coalesce(ie_gerar_transf_paciente_p,'S') = 'S') then
		begin
	
		if (coalesce(ds_erro_w::text, '') = '') then
			begin
		
			if (cd_setor_atend_w IS NOT NULL AND cd_setor_atend_w::text <> '') then
				begin
				select	qt_minuto_max
				into STRICT	qt_minuto_max_w
				from	setor_atendimento
				where	cd_setor_atendimento	= cd_setor_atend_w;
			
				end;
			else
				qt_minuto_max_w	:= 0;
			end if;
		
			if (qt_minuto_max_w <> 0) then
				begin
				qt_min_perm_setor_w	:= obter_min_permanencia_setor(nr_atendimento_p,cd_setor_atend_w,cd_unidade_basica_w,cd_unidade_compl_w);
						
				if (qt_min_perm_setor_w > qt_minuto_max_w) and (coalesce(cd_motivo_permanencia_p::text, '') = '') then
					begin
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(198475);
					end;
				end if;
			
				end;
			
			end if;	
		
			if (cd_motivo_permanencia_p IS NOT NULL AND cd_motivo_permanencia_p::text <> '') then
				begin			
				CALL inserir_motivo_permanencia(
					nm_usuario_p,
					nr_atendimento_p,
					cd_setor_atend_w,
					cd_unidade_basica_w,
					cd_unidade_compl_w,
					cd_motivo_permanencia_p );
				end;
			end if;
			--INICIO Transferencia do acompanhante BDM3 FR6 Austria
			if (Obter_se_leito_livre_acomp(nr_atendimento_p, cd_unidade_basica_p, cd_unidade_compl_p, cd_setor_atendimento_p) = 'S') then
				begin
					for c01_w in c01 loop
						begin
							--Escolha na unidade complementar
							select	max(cd_unidade_compl)
							into STRICT	cd_unid_comp_acom_w
							from	unidade_atendimento
							where   cd_unidade_basica	 = cd_unidade_basica_p
							and     cd_unidade_compl	 <> cd_unidade_compl_p
							and	    cd_setor_atendimento = cd_setor_atendimento_p
							and	    ie_status_unidade in ('L');
							
							if (coalesce(cd_unid_comp_acom_w::text, '') = '') then
							begin
								select 	a.nr_agrupamento
								into STRICT	nr_agrupamento_acom_w
								from	unidade_atendimento a
								where	a.cd_unidade_basica	= cd_unidade_basica_p
								and a.cd_unidade_compl	= cd_unidade_compl_p
								and	a.cd_setor_atendimento	= cd_setor_atendimento_p;
											
								select	max(cd_unidade_basica)
								into STRICT	cd_unidade_basica_acom_w
								from 	unidade_atendimento
								where	cd_unidade_basica	<> cd_unidade_basica_p
								and	nr_agrupamento	= nr_agrupamento_acom_w
								and	cd_setor_atendimento	= cd_setor_atendimento_p
								and ie_status_unidade IN ('L');
										
								CALL gerar_transferencia_paciente(
								c01_w.nr_atend_acompanhante,
								cd_setor_atendimento_p, 
								cd_unidade_basica_acom_w, 
								cd_unid_comp_acom_w, 
								cd_tipo_acomodacao_p, 
								nr_acompanhantes_p, 
								nr_seq_motivo_transf_p, 
								ds_observacao_p, 
								nm_usuario_p, 
								dt_entrada_unidade_p,
								nr_seq_classif_esp_p);
											
							end;
							end if;
							
							if (cd_unid_comp_acom_w IS NOT NULL AND cd_unid_comp_acom_w::text <> '') then
							begin
											
								CALL gerar_transferencia_paciente(
								c01_w.nr_atend_acompanhante,
								cd_setor_atendimento_p, 
								cd_unidade_basica_p, 
								cd_unid_comp_acom_w, 
								cd_tipo_acomodacao_p, 
								nr_acompanhantes_p, 
								nr_seq_motivo_transf_p, 
								ds_observacao_p, 
								nm_usuario_p, 
								dt_entrada_unidade_p,
								nr_seq_classif_esp_p);
										
							end;
							
							else
							CALL Wheb_mensagem_pck.exibir_mensagem_abort(261610);
							end if;
						
						end;
					end loop;
				end;
			end if;
			-- FIM Transferencia do acompanhante BDM3 FR6 Austria
			if (coalesce(pkg_i18n.get_user_locale, 'pt_BR')='ja_JP') then
			CALL gerar_transferencia_paciente(
				nr_atendimento_p =>  nr_atendimento_p,
				cd_setor_atendimento_p =>  cd_setor_atendimento_p,
				cd_unidade_basica_p =>  cd_unidade_basica_p,
				cd_unidade_compl_p =>  cd_unidade_compl_p,
				cd_tipo_acomodacao_p =>  cd_tipo_acomodacao_p,
				nr_acompanhantes_p =>  nr_acompanhantes_p,
				nr_seq_motivo_transf_p =>  nr_seq_motivo_transf_p,
				ds_observacao_p =>  ds_observacao_p,
				nm_usuario_p =>  nm_usuario_p,
				dt_entrada_unidade_p =>  dt_entrada_unidade_p,
				nr_seq_classif_esp_p =>  nr_seq_classif_esp_p,
                cd_departamento_p =>  cd_departamento_p);
            else
            CALL gerar_transferencia_paciente(
				nr_atendimento_p =>  nr_atendimento_p,
				cd_setor_atendimento_p =>  cd_setor_atendimento_p,
				cd_unidade_basica_p =>  cd_unidade_basica_p,
				cd_unidade_compl_p =>  cd_unidade_compl_p,
				cd_tipo_acomodacao_p =>  cd_tipo_acomodacao_p,
				nr_acompanhantes_p =>  nr_acompanhantes_p,
				nr_seq_motivo_transf_p =>  nr_seq_motivo_transf_p,
				ds_observacao_p =>  ds_observacao_p,
				nm_usuario_p =>  nm_usuario_p,
				dt_entrada_unidade_p =>  dt_entrada_unidade_p,
				nr_seq_classif_esp_p =>  nr_seq_classif_esp_p);
            end if;
				

			begin
			ds_origem_w := substr(dbms_utility.format_call_stack,1,1800);
			ds_unidade_log_w := substr(
					'ds_origem_w'||' '||ds_origem_w||' - '
					||' '||'nr_atendimento_p: '||nr_atendimento_p
					||' '||'cd_setor_atendimento_p: '||cd_setor_atendimento_p
					||' '||'cd_unidade_basica_p: '||cd_unidade_basica_p
					||' '||'cd_unidade_compl_p: '||cd_unidade_compl_p
					||' '||'cd_setor_anterior_w: '||cd_setor_anterior_w
					||' '||'cd_setor_atend_w: '||cd_setor_atend_w
					||' '||'cd_estabelecimento_p: '||cd_estabelecimento_p
					||' '||'ie_classif_setor_origem_w: '||ie_classif_setor_origem_w
					||' '||'ie_classif_setor_transf_w: '||ie_classif_setor_transf_w
					||' '||'ie_transf_prescr_pend_p: '||ie_transf_prescr_pend_p
					||' '||'ie_atualizar_turno_prescr_p: '||ie_atualizar_turno_prescr_p
					||' '||'ie_tipo_movimentacao_lote_p: '||ie_tipo_movimentacao_lote_p
					||' '||'dt_entrada_unidade_p: '||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_entrada_unidade_p, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)
					||' '||'nm_usuario_p: '|| nm_usuario_p
					||' '||'obter_funcao_ativa: '|| obter_funcao_ativa
					||' '||'obter_perfil_ativo: '|| obter_perfil_ativo
					||' '||'obter_usuario_ativo: '|| obter_usuario_ativo
					,1,4000);

			insert 	into log_mov(
				DT_ATUALIZACAO,
				NM_USUARIO, 
				CD_LOG, 
				DS_LOG
			) values (
				clock_timestamp(), 
				nm_usuario_p, 
				55841,
				ds_unidade_log_w
			);
					
			exception
			when others then
				null;
			end;
				
			if (cd_classif_setor_p in (3,4)) then
				if (ie_isolar_paciente_p = 'S')  then
					begin
					update	atendimento_paciente
					set 	ie_paciente_isolado = 'S',
						dt_atualizacao = clock_timestamp(),
						nm_usuario = nm_usuario_p
					where	nr_atendimento = nr_atendimento_p;
					end;
				end if;
			end if;
				
			if (ie_classif_setor_origem_w = 'N') and (ie_classif_setor_transf_w = 'S') and (ie_transf_prescr_pend_p = 'S') then
				begin
				if (cd_setor_anterior_w > 0) then
					CALL atualizar_setor_prescricao(nr_atendimento_p,cd_setor_atendimento_p,cd_setor_anterior_w,nm_usuario_p);
				else 	
					CALL atualizar_setor_prescricao(nr_atendimento_p,cd_setor_atendimento_p,null,nm_usuario_p);
				end if;
				end;
			end if;
			
		
			if (ie_atualizar_turno_prescr_p = 'S') then
				begin
				CALL Atualizar_turno_hor_prescr(nr_atendimento_p,cd_setor_atendimento_p,cd_estabelecimento_p,nm_usuario_p);
				end;
			end if;
			
			if (ie_tipo_movimentacao_lote_p = 'S' or (ie_tipo_movimentacao_lote_p = 'T' and cd_setor_atend_w <> cd_setor_atendimento_p)) then
				begin
				CALL gerar_ajustes_ap_lote('M',nr_atendimento_p,nm_usuario_p);
				end;
			end if;
		
			if (ie_bloquear_p = 'S') then
				begin
				ds_consist_tipo_acomod_p := consiste_tipo_acomodacao(nr_atendimento_p, ds_consist_tipo_acomod_p);
				end;
			end if;
		
			select	coalesce(max(ie_radioterapia),'N')
			into STRICT	ie_leito_radioterapia_w
			from	unidade_atendimento
			where	cd_setor_atendimento	= cd_setor_atendimento_p
			and	cd_unidade_basica	= cd_unidade_basica_p
			and	cd_unidade_compl	= cd_unidade_compl_p;
		
			if (ie_encerrar_cig_p = 'S') and (cd_setor_anterior_w <> cd_setor_atendimento_p) then
				begin
				CALL encerar_cig_setor_pac(
					nr_atendimento_p,
					cd_setor_atendimento_p,
					nm_usuario_p);
				end;
			end if;
		
			ie_permite_inicio_higien_w	:= obter_se_regra_lib_setor_higie(cd_setor_anterior_w, cd_perfil_p, nm_usuario_p, 0);
		
			CALL gerar_reconciliacao_paciente(nm_usuario_p, nr_atendimento_p, obter_perfil_ativo, 'T', 'N', null,'N');
		
		
		/*obter_param_usuario(3111, 137, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_aguard_higien_w);
		obter_param_usuario(3111, 167, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_considerar_hig_estr_w);
		
		if	(ie_aguard_higien_w = 'S')then
			begin
			
			ie_controla_hig_w	:= obter_se_higieniza_leito(cd_setor_atend_w,cd_unidade_basica_w,cd_unidade_compl_w);
			
			if	(ie_controla_hig_w = 'H')and
				(ie_considerar_hig_estr_w = 'S')then
				begin
				
				higienizar_js(8, cd_setor_atend_w, cd_unidade_basica_w, cd_unidade_compl_w, '', cd_perfil_p, nm_usuario_p, cd_estabelecimento_p);
				
				end;
			end if;
			
			end;
		end if;*/
		
			end;
		else
			begin
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(214322, 'DS_ERRO=' || ds_erro_w);
			end;
		end if;	
		end;
	end if;
	end;
end if;

ie_leito_radioterapia_p 	:= ie_leito_radioterapia_w;
cd_setor_anterior_p		:= cd_setor_anterior_w;
cd_setor_atend_p		:= cd_setor_atend_w;
cd_unidade_basica_p		:= cd_unidade_basica_w;
cd_unidade_compl_p		:= cd_unidade_compl_w;
ie_permite_inicio_higien_p	:= ie_permite_inicio_higien_w;
ds_erro_p 			:= ds_erro_w;

if (coalesce(wheb_usuario_pck.get_ie_commit, 's') = 's') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE transferir_paciente_setor ( nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_classif_setor_p bigint, nr_acompanhantes_p bigint, cd_tipo_acomodacao_p bigint, cd_estabelecimento_p bigint, nr_seq_motivo_transf_p bigint, dt_entrada_unidade_p timestamp, cd_unidade_basica_p INOUT text, cd_unidade_compl_p INOUT text, ie_mov_centro_cirurg_p text, ie_setor_sem_acomodacao_p text, ie_ativar_local_destino_p text, ie_isolar_paciente_p text, ds_observacao_p text, ie_trocar_setor_prescricoes_p text, ie_bloquear_p text, ie_restringe_tipo_atend_p text, ie_restringe_tipo_atend_274_p text, ie_encerrar_cig_p text, ie_transf_prescr_pend_p text, ds_classif_setores_transf_p text, ds_classif_setores_origem_p text, ie_atualizar_turno_prescr_p text, cd_motivo_permanencia_p bigint, ds_consist_tipo_acomod_p INOUT text, ie_atendimento_disp_p INOUT text, ie_leito_radioterapia_p INOUT text, cd_setor_anterior_p INOUT bigint, cd_setor_atend_p INOUT bigint, ie_permite_inicio_higien_p INOUT text, ds_erro_p INOUT text, nm_usuario_p text, cd_perfil_p bigint, ie_tipo_movimentacao_lote_p text, ie_gerar_transf_paciente_p text, nr_seq_classif_esp_p bigint default null, cd_departamento_p atend_paciente_unidade.cd_departamento%type default null) FROM PUBLIC;

