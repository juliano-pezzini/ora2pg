-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_valida_ocor_aut_qt_incid ( nr_seq_ocor_combinada_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_utiliza_filtro_p text, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:Validar as regras de quantidade incidencia para as ocorrencia combinadas
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
				
nr_seq_clinica_w		bigint;
nr_seq_prestador_w		bigint;
nm_usuario_solic_w		varchar(255);
ie_tipo_processo_w		varchar(1);
dt_ref_inicial_w		timestamp;
dt_ref_final_w			timestamp;
ie_regra_w			varchar(2);
ie_gerar_ocorrencia_w		varchar(2);
ie_gerou_ocor_cabecalho_w	varchar(2);
ie_tipo_ocorrencia_w		varchar(2);
nr_seq_oc_benef_w		bigint;
dt_requisicao_w			timestamp;
dt_execucao_w			timestamp;
dt_solicitacao_w		timestamp;
dt_solic_guia_req_exec_w	timestamp;
nr_seq_requisicao_w		bigint;
cd_medico_solic_w		varchar(10);
ie_valida_regra_w		varchar(1) := 'N';
ds_mensagem_w			varchar(4000);
nr_seq_local_atend_w		bigint;
nr_seq_prestador_regra_w	bigint;
nr_seq_segurado_regra_w		bigint;
dt_lib_hora_w			varchar(255);
ds_observacao_w			varchar(400);
nr_seq_prestador_exec_w		pls_requisicao.nr_seq_prestador_exec%type;

C01 CURSOR FOR
	SELECT	qt_liberada,
		qt_tipo_quantidade,
		ie_tipo_qtde,
		nr_seq_clinica,
		ie_valida_data,
		coalesce(ie_valida_grupo_serv,'N') ie_valida_grupo_serv,
		coalesce(ie_tipo_validacao,'N') ie_tipo_validacao,
		coalesce(ie_valida_conta, 'N') ie_valida_conta,
		ie_valida_local_atend,
		ie_qt_lib_posterior,
		ie_regra_qtde,
		ie_tipo_pessoa_qtde,
		ie_valida_execucao,
		ie_valida_guia_dif,
		coalesce(ie_valida_mesma_espec, 'N') ie_valida_mesma_espec
	from	pls_validacao_aut_qt_incid
	where	nr_seq_ocor_aut_combinada	= nr_seq_ocor_combinada_p
	and	ie_situacao			= 'A';

C02 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		qt_solicitada
	from	pls_guia_plano_proc
	where	nr_seq_guia		= nr_seq_guia_p;
	
C03 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		qt_solicitado
	from	pls_requisicao_proc
	where	nr_seq_requisicao		= nr_seq_requisicao_p
	and	coalesce(qt_proc_executado,0)	= 0;

C04 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		qt_item
	from	pls_execucao_req_item
	where	nr_seq_execucao		= nr_seq_execucao_p
	and	coalesce(nr_seq_material::text, '') = '';


C05 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_material,
		qt_solicitada
	from	pls_guia_plano_mat
	where	nr_seq_guia		= nr_seq_guia_p;
	
C06 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_material,
		qt_solicitado
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_p
	and	coalesce(qt_mat_executado,0)	= 0;

C07 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_material,
		qt_item
	from	pls_execucao_req_item
	where	nr_seq_execucao		= nr_seq_execucao_p
	and	coalesce(cd_procedimento::text, '') = '';


	
BEGIN

if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	begin
		select	nr_seq_prestador,
			nr_seq_clinica,
			dt_solicitacao,
			cd_medico_solicitante,
			nm_usuario_solic,
			ie_tipo_processo
		into STRICT	nr_seq_prestador_w,
			nr_seq_clinica_w,
			dt_solicitacao_w,
			cd_medico_solic_w,
			nm_usuario_solic_w,
			ie_tipo_processo_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_p;
	exception
	when others then
		nr_seq_prestador_w	:= null;
		nr_seq_clinica_w	:= null;
	end;
		
	dt_solic_guia_req_exec_w	:= dt_solicitacao_w;
	
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	begin
		select	nr_seq_prestador_exec,
			nr_seq_prestador,
			nr_seq_clinica,
			dt_requisicao,
			nm_usuario_solic,
			ie_tipo_processo,
			cd_medico_solicitante
		into STRICT	nr_seq_prestador_exec_w,
			nr_seq_prestador_w,
			nr_seq_clinica_w,
			dt_requisicao_w,
			nm_usuario_solic_w,
			ie_tipo_processo_w,
			cd_medico_solic_w
		from	pls_requisicao
		where	nr_sequencia	= nr_seq_requisicao_p;
	exception
	when others then
		nr_seq_prestador_w	:= null;
		nr_seq_clinica_w	:= null;
		nr_seq_prestador_exec_w := null;
	end;
	
	dt_solic_guia_req_exec_w	:= dt_requisicao_w;
	
elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then
	begin
		select	nr_seq_prestador,
			nr_seq_requisicao,
			dt_execucao
		into STRICT	nr_seq_prestador_w,
			nr_seq_requisicao_w,
			dt_execucao_w
		from	pls_execucao_requisicao
		where	nr_sequencia	= nr_seq_execucao_p;
	exception
	when others then
		nr_seq_prestador_w	:= null;
		nr_seq_requisicao_w	:= null;
	end;
	
	begin
		select	nr_seq_clinica,
			nm_usuario_solic,
			ie_tipo_processo,
			cd_medico_solicitante
		into STRICT	nr_seq_clinica_w,
			nm_usuario_solic_w,
			ie_tipo_processo_w,
			cd_medico_solic_w
		from	pls_requisicao
		where	nr_sequencia	= nr_seq_requisicao_w;
	exception
	when others then
		nr_seq_clinica_w	:= null;
	end;
	
	dt_solic_guia_req_exec_w	:= dt_execucao_w;
end if;

dt_ref_inicial_w := coalesce(dt_solic_guia_req_exec_w,clock_timestamp());



for r_C01_w in C01 loop	
	ie_valida_regra_w	:= 'N';	
	
	if (r_C01_w.ie_valida_local_atend = 'S') then
		if (coalesce(nm_usuario_solic_w,'X') <> 'X') and (ie_tipo_processo_w = 'P')then
				nr_seq_local_atend_w := pls_obter_local_atend_usuario(nm_usuario_solic_w,cd_estabelecimento_p);
		else
			nr_seq_local_atend_w := 0;
		end if;
	else
		nr_seq_local_atend_w := null;
	end if;
	
	if (coalesce(r_C01_w.ie_regra_qtde,'N') = 'N') then
		cd_medico_solic_w := null;
	end if;
		
	if (coalesce(r_C01_w.nr_seq_clinica,0) > 0) then	
		if (nr_seq_clinica_w = r_C01_w.nr_seq_clinica) then
			ie_valida_regra_w := 'S';
		end if;
	else
		ie_valida_regra_w := 'S';
	end if;
	
	if (coalesce(r_C01_w.ie_tipo_pessoa_qtde,'B') = 'B') then
		nr_seq_segurado_regra_w		:= nr_seq_segurado_p;
		nr_seq_prestador_regra_w	:= null;
	elsif (coalesce(r_C01_w.ie_tipo_pessoa_qtde,'B') = 'P') then
		nr_seq_prestador_regra_w	:= nr_seq_prestador_w;
		nr_seq_segurado_regra_w		:= null;
	elsif (coalesce(r_C01_w.ie_tipo_pessoa_qtde,'B') = 'A') then
		nr_seq_prestador_regra_w	:= nr_seq_prestador_w;
		nr_seq_segurado_regra_w		:= nr_seq_segurado_p;
	end if;
	
	if (coalesce(r_C01_w.ie_valida_execucao,'N') = 'S') and (coalesce(r_C01_w.ie_tipo_pessoa_qtde,'B') in ('A', 'P'))then
		nr_seq_prestador_regra_w	:= coalesce(nr_seq_prestador_exec_w, nr_seq_prestador_w);
		if (coalesce(nr_seq_prestador_regra_w::text, '') = '') then
			nr_seq_prestador_regra_w := 0;
		end if;
	end if;
	
	if (ie_valida_regra_w = 'S') then
		if (r_C01_w.ie_valida_data	= '2') then
			begin
				select  dt_contratacao
				into STRICT	dt_ref_inicial_w
				from    pls_segurado
				where   nr_sequencia  = nr_seq_segurado_p;			
			exception
			when others then
				dt_ref_inicial_w	:= null;
			end;
			

			if (r_C01_w.ie_tipo_qtde	= 'A') then
				if (coalesce(r_C01_w.qt_tipo_quantidade,0)	> 0) then
					dt_ref_final_w := dt_ref_inicial_w;
	
					while(dt_ref_final_w	< coalesce(dt_solic_guia_req_exec_w, clock_timestamp())) loop
						dt_ref_final_w := add_months(dt_ref_inicial_w, r_C01_w.qt_tipo_quantidade * 12);
						if (dt_ref_final_w	< coalesce(dt_solic_guia_req_exec_w, clock_timestamp())) then	
							dt_ref_inicial_w  := dt_ref_final_w;
						end if;
					end loop;
				end if;			
			
				dt_ref_final_w	:= (add_months( dt_ref_inicial_w, r_C01_w.qt_tipo_quantidade * 12) + 1);
			end if;	

		elsif (r_C01_w.ie_valida_data	= '3') then
			begin
				select	dt_inclusao_operadora
				into STRICT	dt_ref_inicial_w
				from	pls_segurado
				where	nr_sequencia	= nr_seq_segurado_p;
			exception
			when others then
				dt_ref_inicial_w	:= null;
			end;			
			
			if (r_C01_w.ie_tipo_qtde = 'A') then
				dt_ref_final_w	:= (add_months( dt_ref_inicial_w, r_C01_w.qt_tipo_quantidade * 12) + 1);
			end if;
		elsif (r_C01_w.ie_valida_data	= '4') then
			
			begin
				dt_ref_inicial_w := pls_obter_dados_segurado(nr_seq_segurado_p, 'CO');
			exception
			when others then
				dt_ref_inicial_w	:= null;
			end;
			
			if (dt_ref_inicial_w IS NOT NULL AND dt_ref_inicial_w::text <> '') then
				if (r_C01_w.ie_tipo_qtde	= 'D') then
					/* - Tratamento realizado para que seja mantida uma logica quanto a quantiade de dias.
					Ou seja anteriormente se quisesse que o nao pode-se repetir o proedimento duas vezes no mesmo dia eu teria que cadastrar
					a qt_dias como zero o que dificultava o entendimento do cliente.
					dt_ref_inicial_w	:= trunc(dt_ref_inicial_w - qt_tipo_quantidade_p);*/
	   	
					dt_ref_final_w		:= trunc(dt_ref_inicial_w);
					
					if (coalesce(r_C01_w.ie_qt_lib_posterior,'N')	= 'S') then					
						dt_ref_final_w		:= trunc(dt_ref_inicial_w + (r_C01_w.qt_tipo_quantidade - 1));
						dt_ref_inicial_w	:= trunc(dt_ref_inicial_w);
					else
						dt_ref_inicial_w	:= trunc(dt_ref_inicial_w - (r_C01_w.qt_tipo_quantidade - 1));
					end if;
					
				elsif (r_C01_w.ie_tipo_qtde	= 'M') then
					/* - Removi os truncs por month pois pela definicao do cliente deve-se haver a logica de ano precisa.
					    Ou seja existindo a regra de 2 incidencia em 1 ano, eu posso executar hoje a exatamente 366 dias apos.*/
					dt_ref_final_w		:= trunc(dt_ref_inicial_w);				
					
					if (coalesce(r_C01_w.ie_qt_lib_posterior,'N')	= 'S') then
						dt_ref_final_w		:= (add_months(dt_ref_inicial_w, r_C01_w.qt_tipo_quantidade) + 1);
					else
						dt_ref_inicial_w	:= (add_months(dt_ref_inicial_w, -r_C01_w.qt_tipo_quantidade) + 1);
					end if;
					
				elsif (r_C01_w.ie_tipo_qtde	= 'A') then
					-- A logica vista com o Sr Felipe Ambrosio e de que ao executar o procedimento dia 26/01/2011 poderei executa-lo exatamente dia 26/01/2012*/
					dt_ref_final_w		:= trunc( dt_ref_inicial_w );

					if (coalesce(r_C01_w.ie_qt_lib_posterior,'N')	= 'S') then
						dt_ref_final_w		:= (add_months(dt_ref_inicial_w, r_C01_w.qt_tipo_quantidade * 12) + 1); /* Vezes 12 meses ao ano */
					else
						dt_ref_inicial_w	:= (add_months( dt_ref_inicial_w, -r_C01_w.qt_tipo_quantidade * 12) + 1); /* Vezes 12 meses ao ano */
					end if;
				end if;
			end if;
		else		
			if (r_C01_w.ie_tipo_qtde	= 'D') then
				/* - Tratamento realizado para que seja mantida uma logica quanto a quantiade de dias.
				Ou seja anteriormente se quisese que o nao pode-se repetir o proedimento duas vezes no mesmo dia eu teria que cadastrar
				a qt_dias como zero o que dificultava o entendimento do cliente.
				dt_ref_inicial_w	:= trunc(dt_ref_inicial_w - qt_tipo_quantidade_p);*/
	   	
				dt_ref_final_w		:= trunc( dt_ref_inicial_w );
		
				if (coalesce(r_C01_w.ie_qt_lib_posterior,'N')	= 'S') then					
					dt_ref_final_w		:= trunc(dt_ref_inicial_w + (r_C01_w.qt_tipo_quantidade - 1));
					dt_ref_inicial_w	:= trunc(dt_ref_inicial_w);
				else
					dt_ref_inicial_w	:= trunc( dt_ref_inicial_w - (r_C01_w.qt_tipo_quantidade - 1));
				end if;
				
			elsif (r_C01_w.ie_tipo_qtde	= 'M') then
				/* - Removi os truncs por month pois pela definicao do cliente deve-se haver a logica de ano precisa.
				    Ou seja existindo a regra de 2 incidencia em 1 ano, eu posso executar hoje a exatamente 366 dias apos.*/
				dt_ref_final_w		:= trunc( dt_ref_inicial_w );				
				
				if (coalesce(r_C01_w.ie_qt_lib_posterior,'N')	= 'S') then
					dt_ref_final_w		:= (add_months(dt_ref_inicial_w, r_C01_w.qt_tipo_quantidade) + 1);
				else
					dt_ref_inicial_w	:= (add_months( dt_ref_inicial_w, -r_C01_w.qt_tipo_quantidade) + 1);
				end if;
				
			elsif (r_C01_w.ie_tipo_qtde	= 'A') then
				-- A logica vista com o Sr Felipe Ambrosio e de que ao executar o procedimento dia 26/01/2011 poderei executa-lo exatamente dia 26/01/2012*/
				dt_ref_final_w		:= trunc( dt_ref_inicial_w );

				if (coalesce(r_C01_w.ie_qt_lib_posterior,'N')	= 'S') then
					dt_ref_final_w		:= (add_months(dt_ref_inicial_w, r_C01_w.qt_tipo_quantidade * 12) + 1); /* Vezes 12 meses ao ano */
				else
					dt_ref_inicial_w	:= (add_months( dt_ref_inicial_w, -r_C01_w.qt_tipo_quantidade * 12) + 1); /* Vezes 12 meses ao ano */
				end if;
				
			elsif (r_C01_w.ie_tipo_qtde = 'G') then
				dt_ref_final_w		:= trunc( dt_ref_inicial_w );
				dt_ref_inicial_w := clock_timestamp();
				
			elsif (r_C01_w.ie_tipo_qtde = 'H') then
				dt_ref_final_w		:= dt_ref_inicial_w;
				dt_ref_inicial_w	:= dt_ref_final_w-(r_C01_w.qt_tipo_quantidade/24);
			end if;
		end if;

		if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
			for r_C02_w in C02 loop				
				ie_gerar_ocorrencia_w	:= 'S';

				if (ie_utiliza_filtro_p	= 'S') then
					/* Tratamento para filtros */

					SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, r_C02_w.nr_sequencia, null, null, null, null, r_C02_w.cd_procedimento, r_C02_w.ie_origem_proced, null, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
									
					if (ie_regra_w	= 'S') then
						ie_gerar_ocorrencia_w	:= 'S';
					elsif (ie_regra_w	in ('E','N')) then
						ie_gerar_ocorrencia_w	:= 'N';
					end if;
				end if;		
								
				if (ie_gerar_ocorrencia_w	= 'S') then						
					ds_observacao_w := pls_obter_qt_incid_ocorrencia(r_C01_w.qt_liberada, dt_ref_inicial_w, dt_ref_final_w, cd_estabelecimento_p, r_C02_w.qt_solicitada, r_C02_w.cd_procedimento, r_C02_w.ie_origem_proced, null, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, nr_seq_segurado_p, r_C01_w.nr_seq_clinica, r_C01_w.ie_tipo_qtde, nr_seq_ocor_combinada_p, r_C01_w.ie_valida_grupo_serv, r_C01_w.ie_tipo_validacao, r_C01_w.ie_valida_conta, nr_seq_prestador_w, nr_seq_local_atend_w, cd_medico_solic_w, nr_seq_segurado_regra_w, nr_seq_prestador_regra_w, r_C01_w.ie_valida_execucao, r_C01_w.ie_valida_guia_dif, r_C01_w.ie_valida_mesma_espec);
					
					if (ie_gerar_ocorrencia_w	= 'S') then
						nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, r_C02_w.nr_sequencia, null, nr_seq_ocor_combinada_p, nm_usuario_p, ds_observacao_w, nr_seq_motivo_glosa_p, 1, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
								
						CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
										nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p,
										r_C02_w.nr_sequencia, null, null,
										null, null, null,
										nm_usuario_p, cd_estabelecimento_p);
					end if;
				end if;
			end loop;
			for r_C05_w in C05 loop										
				ie_gerar_ocorrencia_w	:= 'S';
				
				if (ie_utiliza_filtro_p	= 'S') then
					/* Tratamento para filtros */

					SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, r_C05_w.nr_sequencia, null, null, null, null, null, r_C05_w.nr_seq_material, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
									
					if (ie_regra_w	= 'S') then
						ie_gerar_ocorrencia_w	:= 'S';
					elsif (ie_regra_w	in ('E','N')) then
						ie_gerar_ocorrencia_w	:= 'N';
					end if;
				end if;
				
				if (ie_gerar_ocorrencia_w	= 'S') then												
					ds_observacao_w := pls_obter_qt_incid_ocorrencia(r_C01_w.qt_liberada, dt_ref_inicial_w, dt_ref_final_w, cd_estabelecimento_p, r_C05_w.qt_solicitada, null, null, r_C05_w.nr_seq_material, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, nr_seq_segurado_p, r_C01_w.nr_seq_clinica, r_C01_w.ie_tipo_qtde, null, r_C01_w.ie_valida_grupo_serv, r_C01_w.ie_tipo_validacao, r_C01_w.ie_valida_conta, nr_seq_prestador_w, nr_seq_local_atend_w, cd_medico_solic_w, nr_seq_segurado_regra_w, nr_seq_prestador_regra_w, r_C01_w.ie_valida_execucao, r_C01_w.ie_valida_guia_dif, r_C01_w.ie_valida_mesma_espec);
													
					if (ie_gerar_ocorrencia_w	= 'S') then
						nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, null, r_C05_w.nr_sequencia, nr_seq_ocor_combinada_p, nm_usuario_p, ds_observacao_w, nr_seq_motivo_glosa_p, 2, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
								
						CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
										nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p,
										null, r_C05_w.nr_sequencia, null,
										null, null, null,
										nm_usuario_p, cd_estabelecimento_p);
					end if;
				end if;
			end loop;			
		elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then				
			for r_C03_w in C03 loop
				ie_gerar_ocorrencia_w	:= 'S';			

				if (ie_utiliza_filtro_p	= 'S') then
					/* Tratamento para filtros */

					SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, r_C03_w.nr_sequencia, null, null, r_C03_w.cd_procedimento, r_C03_w.ie_origem_proced, null, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
									
					if (ie_regra_w	= 'S') then
						ie_gerar_ocorrencia_w	:= 'S';
					elsif (ie_regra_w	in ('E','N')) then
						ie_gerar_ocorrencia_w	:= 'N';
					end if;
				end if;
						
				if (ie_gerar_ocorrencia_w	= 'S') then	
				
					ds_observacao_w := pls_obter_qt_incid_ocorrencia(r_C01_w.qt_liberada, dt_ref_inicial_w, dt_ref_final_w, cd_estabelecimento_p, r_C03_w.qt_solicitado, r_C03_w.cd_procedimento, r_C03_w.ie_origem_proced, null, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, nr_seq_segurado_p, r_C01_w.nr_seq_clinica, r_C01_w.ie_tipo_qtde, nr_seq_ocor_combinada_p, r_C01_w.ie_valida_grupo_serv, r_C01_w.ie_tipo_validacao, r_C01_w.ie_valida_conta, nr_seq_prestador_w, nr_seq_local_atend_w, cd_medico_solic_w, nr_seq_segurado_regra_w, nr_seq_prestador_regra_w, r_C01_w.ie_valida_execucao, r_C01_w.ie_valida_guia_dif, r_C01_w.ie_valida_mesma_espec);
					
					if (ie_gerar_ocorrencia_w	= 'S') then
					
						nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, r_C03_w.nr_sequencia, null, nr_seq_ocor_combinada_p, nm_usuario_p, ds_observacao_w, nr_seq_motivo_glosa_p, 5, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
								
						CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
										nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p,
										null, null, r_C03_w.nr_sequencia,
										null, null, null,
										nm_usuario_p, cd_estabelecimento_p);
					end if;
				end if;
			end loop;
			for r_C06_w in C06 loop					
				
				ie_gerar_ocorrencia_w	:= 'S';

				if (ie_utiliza_filtro_p	= 'S') then
					/* Tratamento para filtros */

					SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, r_C06_w.nr_sequencia, null, null, null, r_C06_w.nr_seq_material, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
									
					if (ie_regra_w	= 'S') then
						ie_gerar_ocorrencia_w	:= 'S';
					elsif (ie_regra_w	in ('E','N')) then
						ie_gerar_ocorrencia_w	:= 'N';
					end if;
				end if;
				
				if (ie_gerar_ocorrencia_w	= 'S') then
					ds_observacao_w := pls_obter_qt_incid_ocorrencia(r_C01_w.qt_liberada, dt_ref_inicial_w, dt_ref_final_w, cd_estabelecimento_p, r_C06_w.qt_solicitado, null, null, r_C06_w.nr_seq_material, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, nr_seq_segurado_p, r_C01_w.nr_seq_clinica, r_C01_w.ie_tipo_qtde, null, r_C01_w.ie_valida_grupo_serv, r_C01_w.ie_tipo_validacao, r_C01_w.ie_valida_conta, nr_seq_prestador_w, nr_seq_local_atend_w, cd_medico_solic_w, nr_seq_segurado_regra_w, nr_seq_prestador_regra_w, r_C01_w.ie_valida_execucao, r_C01_w.ie_valida_guia_dif, r_C01_w.ie_valida_mesma_espec);
													
					if (ie_gerar_ocorrencia_w	= 'S') then
						nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, null, r_C06_w.nr_sequencia, nr_seq_ocor_combinada_p, nm_usuario_p, ds_observacao_w, nr_seq_motivo_glosa_p, 6, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
								
						CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
										nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p,
										null, null, null,
										r_C06_w.nr_sequencia, null, null,
										nm_usuario_p, cd_estabelecimento_p);
					end if;
				end if;
			end loop;
		elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then
			for r_C04_w in C04 loop
				
				ie_gerar_ocorrencia_w	:= 'S';

				if (ie_utiliza_filtro_p	= 'S') then
					/* Tratamento para filtros */

					SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, r_C04_w.nr_sequencia, r_C04_w.cd_procedimento, r_C04_w.ie_origem_proced, null, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
									
					if (ie_regra_w	= 'S') then
						ie_gerar_ocorrencia_w	:= 'S';
					elsif (ie_regra_w	in ('E','N')) then
						ie_gerar_ocorrencia_w	:= 'N';
					end if;
				end if;
				
				if (ie_gerar_ocorrencia_w	= 'S') then
					ds_observacao_w := pls_obter_qt_incid_ocorrencia(r_C01_w.qt_liberada, dt_ref_inicial_w, dt_ref_final_w, cd_estabelecimento_p, r_C04_w.qt_item, r_C04_w.cd_procedimento, r_C04_w.ie_origem_proced, null, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, nr_seq_segurado_p, r_C01_w.nr_seq_clinica, r_C01_w.ie_tipo_qtde, nr_seq_ocor_combinada_p, r_C01_w.ie_valida_grupo_serv, r_C01_w.ie_tipo_validacao, r_C01_w.ie_valida_conta, nr_seq_prestador_w, nr_seq_local_atend_w, cd_medico_solic_w, nr_seq_segurado_regra_w, nr_seq_prestador_regra_w, r_C01_w.ie_valida_execucao, r_C01_w.ie_valida_guia_dif, r_C01_w.ie_valida_mesma_espec);
													
					if (ie_gerar_ocorrencia_w	= 'S') then
						nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, null, null, r_C04_w.nr_sequencia, null, nr_seq_ocor_combinada_p, nm_usuario_p, ds_observacao_w, nr_seq_motivo_glosa_p, 10, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);
							
						CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
										nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p,
										null, null, null,
										null, r_C04_w.nr_sequencia, null,
										nm_usuario_p, cd_estabelecimento_p);
					end if;
				end if;
			end loop;			
			for r_C07_w in C07 loop
				
				ie_gerar_ocorrencia_w	:= 'S';

				if (ie_utiliza_filtro_p	= 'S') then
					/* Tratamento para filtros */

					SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, r_C07_w.nr_sequencia, null, null, r_C07_w.nr_seq_material, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
									
					if (ie_regra_w	= 'S') then
						ie_gerar_ocorrencia_w	:= 'S';
					elsif (ie_regra_w	in ('E','N')) then
						ie_gerar_ocorrencia_w	:= 'N';
					end if;
				end if;
				
				if (ie_gerar_ocorrencia_w	= 'S') then
					ds_observacao_w := pls_obter_qt_incid_ocorrencia(r_C01_w.qt_liberada, dt_ref_inicial_w, dt_ref_final_w, cd_estabelecimento_p, r_C07_w.qt_item, null, null, r_C07_w.nr_seq_material, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, nr_seq_segurado_p, r_C01_w.nr_seq_clinica, r_C01_w.ie_tipo_qtde, null, r_C01_w.ie_valida_grupo_serv, r_C01_w.ie_tipo_validacao, r_C01_w.ie_valida_conta, nr_seq_prestador_w, nr_seq_local_atend_w, cd_medico_solic_w, nr_seq_segurado_regra_w, nr_seq_prestador_regra_w, r_C01_w.ie_valida_execucao, r_C01_w.ie_valida_guia_dif, r_C01_w.ie_valida_mesma_espec);
													
					if (ie_gerar_ocorrencia_w	= 'S') then
						nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, null, null, null, r_C07_w.nr_sequencia, nr_seq_ocor_combinada_p, nm_usuario_p, ds_observacao_w, nr_seq_motivo_glosa_p, 11, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);
							
						CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
										nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p,
										null, null, null,
										null, r_C07_w.nr_sequencia, null,
										nm_usuario_p, cd_estabelecimento_p);
					end if;
				end if;
			end loop;
		end if;
	end if;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_valida_ocor_aut_qt_incid ( nr_seq_ocor_combinada_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_utiliza_filtro_p text, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

