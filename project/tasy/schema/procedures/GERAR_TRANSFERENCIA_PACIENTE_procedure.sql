-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_transferencia_paciente (nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text, cd_tipo_acomodacao_p bigint, nr_acompanhantes_p bigint, nr_seq_motivo_transf_p bigint, ds_observacao_p text, nm_usuario_p text, dt_entrada_unidade_p timestamp, nr_seq_classif_esp_p bigint default null, cd_departamento_p atend_paciente_unidade.cd_departamento%type default null) AS $body$
DECLARE


dt_entrada_w			timestamp;
nr_passagem_setor_w		integer;
nr_seq_interno_w			bigint;
nr_prescricao_w			bigint;
ds_observacao_ww			varchar(2000)	:= substr(ds_observacao_p,1,2000);
nr_sequencia_w			bigint;
nr_seq_mvto_w			bigint;
qt_homecare_w			bigint;
cd_estabelecimento_w		smallint;
nr_seq_evento_w			bigint;
cd_pessoa_fisica_w		varchar(10);
cd_classif_setor_w			varchar(2);
cd_funcao_w			bigint;
ie_transfere_gasto_w		varchar(03)	:= 'N';
nr_seq_atepacu_atual_w		bigint;
nr_seq_propaci_w			bigint;
nr_seq_matpaci_w			bigint;
cd_setor_atendimento_w		bigint;
nr_seq_carestrem_w		carestrem_encounter.nr_sequencia%type;
cd_unidade_basica_w		varchar(255);
cd_unidade_compl_w		varchar(255);
dt_alta_w				timestamp;
nr_agrupamento_w			integer;
qt_idade_w			bigint;
ds_unidade_log_w			varchar(4000);
qt_log_w				bigint;
ds_origem_w			varchar(4000);
ie_libera_leito_ocup_w		varchar(1);
ie_util_integra_informatec_w	varchar(1);
ie_gera_eritel_w		varchar(3);
ds_erro_agrup_w			varchar(255);
ie_status_leito_w		varchar(1);
ie_transf_se_livre_w		varchar(1);
ie_altera_status_gv_w		varchar(1);
ds_observacao_w			varchar(2000);
ie_obs_anteriores_w		varchar(1);
ie_passagem_setor_w		varchar(1) := 'N';
ie_considerar_troca_leito_w	varchar(1);
ie_susp_prescr_pend_w		varchar(1);
cd_setor_atual_w		integer;
ie_arq_pyxis_w			varchar(1);
ie_gerar_hig_dt_saida_w		varchar(1);
nr_seq_local_pa_w		bigint;
cd_Tipo_acomodacao_W		smallint;
ie_trat_conta_rn_w		varchar(10);
ie_define_gastos_rn_w		varchar(1);
qt_existe_regra_w		bigint;
ie_atualiza_sit_agrup_w		varchar(1);
nr_seq_unidade_w		bigint;
nr_atendimento_mae_w		bigint;
ie_bloqueio_sem_orient_pep_w	varchar(1);
qt_pep_orientacao_geral_w	bigint;
qt_perm_transf_cc_w		bigint;
qt_existe_setor_cc_w		bigint;
cd_tipo_acomodacao_www		bigint;
cd_perfil_w			bigint;
ds_item_w			varchar(255);
ie_tipo_convenio_atend_w	smallint;
ie_desconsiderar_w		varchar(1);
ie_integra_aghos_w		varchar(1);
ie_gerar_evento_transf_w	varchar(1);
ie_status_acomodado_w		varchar(1);
ds_log_w			varchar(2000)	:= '';	
qt_perm_mov_param_238_w		varchar(1);
dt_alta_238_w			timestamp;
dt_alta_medico_238_w		timestamp;
ie_controle_faixa_etaria_w	varchar(1);
ie_faixa_etaria_w		varchar(1);
ie_tipo_mvt_w			integer;
ie_susp_prescr_dieta_pend_w	varchar(1);
ie_gerar_hig_leito_CC_w		varchar(1);
ie_transf_entre_setor_hc_w	varchar(1);
ie_transf_estab_setor_w		varchar(1);
nr_seq_unid_ant_w		bigint;
qt_existe_regra_setor_w		bigint;
qt_existe_dips_setor_w		bigint;
ie_gerar_transf_lote_w		parametros_farmacia.ie_gerar_transf_lote%type;
ie_tipo_evolucao_saida_w	varchar(10);
ie_possui_evolucao_pac_w	varchar(1);
dt_entrada_unidade_w		timestamp;
ie_gera_ficha_cih_w		varchar(1);
nr_seq_ficha_ocor_w		bigint;
ie_clinica_atend_w		atendimento_paciente.ie_clinica%type;
cd_medico_resp_w		varchar(10);
ie_permite_intern_desfecho_w	varchar(1);
ie_existe_desfecho_w		smallint;
ie_consistir_disp_w		varchar(1);
ie_susp_rep_transf_w		varchar(1);
nm_tabela_w					varchar(30);
nr_seq_item_w				bigint;
nr_seq_pac_unidade_w		bigint;
cd_departamento_w		bigint;
ie_paciente_isolado_w	atendimento_paciente.ie_paciente_isolado%type;
ie_calcular_dif_diaria_w		varchar(1);

ie_nao_permite_w	varchar(1);
ie_tipo_atend_movimenta_w	varchar(255);

cd_estab_atual_w		setor_atendimento.cd_estabelecimento_base%type;
ds_erro_w			varchar(255);
cd_convenio_w	convenio.cd_convenio%type;
cd_setor_atual_ww		atend_paciente_unidade.cd_setor_atendimento%type;
cd_unidade_basica_ww	atend_paciente_unidade.cd_unidade_basica%type;
cd_unidade_compl_ww		atend_paciente_unidade.cd_unidade_compl%type;

nr_seq_classif_esp_w    atend_paciente_unidade.nr_seq_classif_esp%TYPE;
ds_leito_w				varchar(255);
ds_leito_old_w			varchar(255);

ie_setor_athena_w				varchar(1) := 'N';
ie_setor_athena_old_w			varchar(1) := 'N';
ie_setor_supply_w				varchar(1) := 'N';
ie_setor_supply_old_w			varchar(1) := 'N';
ie_enviar_horarios_disp_w		parametros_farmacia.ie_enviar_horarios_disp%type;
ie_enviar_mat_estoque_w			parametros_farmacia.ie_enviar_mat_estoque%type;
nr_seq_estrut_int_w				regra_local_dispensacao.nr_seq_estrut_int%type;
ie_integracao_dispensario_w		mat_estrutura.ie_integracao_dispensario%type;
ds_param_integ_hl7_w			varchar(4000) := '';

ie_susp_rep_R_w			constant 		setor_atendimento.ie_susp_rep_transf%type := 'R';
ie_susp_rep_M_w			constant 		setor_atendimento.ie_susp_rep_transf%type := 'M';

cd_setor_atend_regra_w	bigint;
ie_risco_w		pan_configuracao_queda_po.ie_risco_queda%type;	

C01 CURSOR FOR
	SELECT	nr_seq_evento
	from	regra_envio_sms
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	ie_evento_disp		= 'T'
	and	coalesce(dt_alta_w::text, '') = ''
	and	((cd_setor_atendimento 	= coalesce(cd_setor_atendimento_w,cd_setor_atendimento)) or (coalesce(cd_setor_atendimento::text, '') = ''))
	and (obter_se_convenio_rec_alerta(cd_convenio_w,nr_sequencia) = 'S')
	and	qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999)
	and	((cd_setor_destino = cd_setor_atendimento_p) or (coalesce(cd_setor_destino::text, '') = ''))
	and	obter_se_regra_envio(nr_sequencia,nr_atendimento_p) = 'S';

C02 CURSOR FOR
	SELECT	nr_seq_evento
	from	regra_envio_sms
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	ie_evento_disp		= 'ECC'
	and	coalesce(dt_alta_w::text, '') = ''
	and	qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999)
	and	obter_se_regra_envio(nr_sequencia,nr_atendimento_p) = 'S';
	
C03 CURSOR FOR
	SELECT 	a.nr_sequencia
	FROM   PROCEDIMENTO_PACIENTE A
	WHERE (A.NR_SEQ_ATEPACU     = nr_seq_atepacu_atual_w)
	AND NOT EXISTS (SELECT NR_ATENDIMENTO
		FROM CONTA_PACIENTE C
		WHERE A.NR_INTERNO_CONTA   = C.NR_INTERNO_CONTA
		AND C.IE_STATUS_ACERTO = 2);
	
C04 CURSOR FOR
	SELECT 	a.nr_sequencia
	FROM   material_atend_paciente A
	WHERE (A.NR_SEQ_ATEPACU     = nr_seq_atepacu_atual_w)
	AND NOT EXISTS (SELECT NR_ATENDIMENTO
		FROM CONTA_PACIENTE C
		WHERE A.NR_INTERNO_CONTA   = C.NR_INTERNO_CONTA
		AND C.IE_STATUS_ACERTO = 2);

C05 CURSOR FOR
	SELECT	 ' - ' || WHEB_MENSAGEM_PCK.get_texto(297915) || ' ' || nr_atendimento
		|| ' ' || WHEB_MENSAGEM_PCK.get_texto(297916) || ' ' || cd_setor_atendimento
		|| ' ' || WHEB_MENSAGEM_PCK.get_texto(297917) || ' ' || cd_unidade_basica
		|| ' ' || WHEB_MENSAGEM_PCK.get_texto(297918) || ' ' || cd_unidade_compl
		|| ' ' || WHEB_MENSAGEM_PCK.get_texto(297919) || ' ' || PKG_DATE_FORMATERS.TO_VARCHAR(dt_entrada_unidade, 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)
		|| ' ' || WHEB_MENSAGEM_PCK.get_texto(297920) || ' ' || ie_status_unidade
		|| ' ' || WHEB_MENSAGEM_PCK.get_texto(297921) || ' ' || nm_usuario
	from	unidade_atendimento
	where	nr_atendimento = nr_atendimento_p;

C06 CURSOR FOR
SELECT	a.nr_prescricao
from	prescr_medica a
where	a.nr_atendimento = nr_atendimento_p
and		coalesce(a.dt_baixa::text, '') = ''
and		(coalesce(a.dt_liberacao_medico,a.dt_liberacao) IS NOT NULL AND (coalesce(a.dt_liberacao_medico,a.dt_liberacao))::text <> '')
and		coalesce(a.dt_suspensao::text, '') = ''
and	(exists (
			SELECT	1
			from	prescr_material b
			where	a.nr_prescricao	= b.nr_prescricao
			and		((coalesce(b.cd_motivo_baixa,0)	= 0) or (coalesce(ie_susp_rep_transf_w,'XPTO') = 'B'))
			and		b.ie_agrupador not in (8,12,16))
or (exists (select	1
			 from	prescr_procedimento s
			 where	a.nr_prescricao	= s.nr_prescricao
			 and 	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '')
			 and	((coalesce(s.cd_motivo_baixa,0)	= 0) or (coalesce(ie_susp_rep_transf_w,'XPTO') = 'B'))
			 and 	coalesce(s.dt_suspensao::text, '') = ''))
or ((ie_susp_prescr_dieta_pend_w = 'S') and
	((exists (
		select	1
		from	nut_paciente b
		where	a.nr_prescricao	= b.nr_prescricao
		and		((coalesce(a.cd_motivo_baixa,0)	= 0) or (coalesce(ie_susp_rep_transf_w,'XPTO') = 'B'))
		and		coalesce(b.ie_suspenso,'N') = 'N')) 
	or
	exists (
		select	1
		from	prescr_dieta_hor b
		where	a.nr_prescricao	= b.nr_prescricao
		and		((coalesce(a.cd_motivo_baixa,0)	= 0) or (coalesce(ie_susp_rep_transf_w,'XPTO') = 'B'))
		and		coalesce(b.dt_suspensao::text, '') = '') 
	or
	exists (
		select	1
		from	prescr_solucao b
		where	a.nr_prescricao	= b.nr_prescricao
		and		((coalesce(a.cd_motivo_baixa,0)	= 0) or (coalesce(ie_susp_rep_transf_w,'XPTO') = 'B'))
		and		coalesce(b.ie_suspenso,'N') = 'N') 
	or
	exists (
		select	1
		from	nut_pac b
		where	a.nr_prescricao	= b.nr_prescricao
		and		((coalesce(a.cd_motivo_baixa,0)	= 0) or (coalesce(ie_susp_rep_transf_w,'XPTO') = 'B'))
		and		coalesce(b.ie_suspenso,'N') = 'N') 
	or
	exists (
		select	1
		from	prescr_material b
		where	a.nr_prescricao	= b.nr_prescricao
		and		b.ie_agrupador in (8,12,16)
		and		((coalesce(a.cd_motivo_baixa,0)	= 0) or (coalesce(ie_susp_rep_transf_w,'XPTO') = 'B'))
		and		coalesce(b.ie_suspenso,'N') = 'N') 
	or
	exists (
		select	1
		from	prescr_dieta b
		where	a.nr_prescricao	= b.nr_prescricao
		and		coalesce(b.ie_suspenso,'N') = 'N'))))
and	not exists (
	select	1
	from	cirurgia x
	where	x.nr_prescricao = a.nr_prescricao);
	
C07 CURSOR FOR
	SELECT	a.nr_seq_evento
	from	regra_envio_sms a
	where	a.cd_estabelecimento	= cd_estabelecimento_w
	and	a.ie_evento_disp	= 'TPAC'
	and	qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999)
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	obter_se_regra_envio(nr_sequencia,nr_atendimento_p) = 'S'
	and	exists (	SELECT	1
					from	agenda_paciente
					where	obter_tipo_agenda(cd_agenda) = 1
					and		nr_atendimento = nr_atendimento_p
					and		ie_status_agenda <> 'E');

C08 CURSOR FOR
	SELECT	b.nr_prescricao,
			b.nr_sequencia,
			'PRESCR_MATERIAL'
	from	prescr_medica a,
			prescr_material b
	where	a.nr_prescricao	= b.nr_prescricao
	and		a.nr_atendimento = nr_atendimento_p
	and		(coalesce(a.dt_liberacao_medico,a.dt_liberacao) IS NOT NULL AND (coalesce(a.dt_liberacao_medico,a.dt_liberacao))::text <> '')
	and		coalesce(a.dt_suspensao::text, '') = ''
	and		coalesce(b.dt_suspensao::text, '') = ''
	and		((ie_susp_prescr_dieta_pend_w = 'S') or (b.ie_agrupador not in (8,12,16)))
	and (coalesce(b.cd_motivo_baixa,0)	= 0)
	and (coalesce(a.dt_baixa::text, '') = '')
	and		not exists (
						SELECT	1
						from	cirurgia x
						where	x.nr_prescricao = a.nr_prescricao)
	and 	(
			(ie_susp_rep_transf_w <> ie_susp_rep_R_w) or
			(
			(b.ie_agrupador = 1 and OBTER_SE_SUSP_TRANSFER_MEDIC(cd_setor_atend_regra_w, b.cd_material, CASE WHEN coalesce(b.cd_protocolo::text, '') = '' THEN  'N'  ELSE 'S' END ) = 'S') or (b.ie_agrupador <> 1 and OBTER_SE_SUSP_TRANSFER(cd_setor_atend_regra_w, 'MA') = 'S')
			)
		)
	
union all

	select	b.nr_prescricao,
			b.nr_sequencia,
			'PRESCR_DIETA'
	from	prescr_medica a,
			prescr_dieta b
	where	a.nr_prescricao	= b.nr_prescricao
	and		a.nr_atendimento = nr_atendimento_p
	and		(coalesce(a.dt_liberacao_medico,a.dt_liberacao) IS NOT NULL AND (coalesce(a.dt_liberacao_medico,a.dt_liberacao))::text <> '')
	and		coalesce(a.dt_suspensao::text, '') = ''
	and		coalesce(b.dt_suspensao::text, '') = ''
	and		coalesce(b.ie_suspenso,'N')	= 'N'
	and		ie_susp_prescr_dieta_pend_w = 'S'
	and (coalesce(b.cd_motivo_baixa,0)	= 0) 
	and (coalesce(a.dt_baixa::text, '') = '')
	and		not exists (
						select	1
						from	cirurgia x
						where	x.nr_prescricao = a.nr_prescricao)
	and 	((ie_susp_rep_transf_w <> ie_susp_rep_R_w) or (OBTER_SE_SUSP_TRANSFER(cd_setor_atend_regra_w, 'N') = 'S'))
	
union all

	select	b.nr_prescricao,
			b.nr_sequencia,
			'REP_JEJUM'
	from	prescr_medica a,
			rep_jejum b
	where	a.nr_prescricao	= b.nr_prescricao
	and		a.nr_atendimento = nr_atendimento_p
	and		(coalesce(a.dt_liberacao_medico,a.dt_liberacao) IS NOT NULL AND (coalesce(a.dt_liberacao_medico,a.dt_liberacao))::text <> '')
	and		coalesce(a.dt_suspensao::text, '') = ''
	and		coalesce(b.ie_suspenso,'N')	= 'N'
	and		ie_susp_prescr_dieta_pend_w = 'S'
	and (coalesce(a.dt_baixa::text, '') = '')
	and		not exists (
						select	1
						from	cirurgia x
						where	x.nr_prescricao = a.nr_prescricao)
	and 	((ie_susp_rep_transf_w <> ie_susp_rep_R_w) or (OBTER_SE_SUSP_TRANSFER(cd_setor_atend_regra_w, 'N') = 'S'))
	
union all

	select	b.nr_prescricao,
			b.nr_sequencia,
			'NUT_PACIENTE'
	from	prescr_medica a,
			nut_paciente b
	where	a.nr_prescricao	= b.nr_prescricao
	and		a.nr_atendimento = nr_atendimento_p
	and		(coalesce(a.dt_liberacao_medico,a.dt_liberacao) IS NOT NULL AND (coalesce(a.dt_liberacao_medico,a.dt_liberacao))::text <> '')
	and		coalesce(a.dt_suspensao::text, '') = ''
	and		coalesce(b.dt_suspensao::text, '') = ''
	and		coalesce(b.ie_suspenso,'N')	= 'N'
	and		ie_susp_prescr_dieta_pend_w = 'S'
	and (coalesce(a.dt_baixa::text, '') = '')
	and		not exists (
						select	1
						from	cirurgia x
						where	x.nr_prescricao = a.nr_prescricao)
	and 	((ie_susp_rep_transf_w <> ie_susp_rep_R_w) or (OBTER_SE_SUSP_TRANSFER(cd_setor_atend_regra_w, 'N') = 'S'))
	
union all

	select	distinct 
			b.nr_prescricao,
			b.nr_seq_solucao,
			'PRESCR_SOLUCAO'
	from	prescr_medica a,
			prescr_solucao b,
			prescr_material c
	where	a.nr_prescricao	= b.nr_prescricao
	and		a.nr_atendimento = nr_atendimento_p
	and		c.nr_sequencia_solucao = b.nr_seq_solucao
	and		c.nr_prescricao = b.nr_prescricao
	and		(coalesce(a.dt_liberacao_medico,a.dt_liberacao) IS NOT NULL AND (coalesce(a.dt_liberacao_medico,a.dt_liberacao))::text <> '')
	and		coalesce(a.dt_suspensao::text, '') = ''
	and		coalesce(b.dt_suspensao::text, '') = ''
	and (coalesce(a.dt_baixa::text, '') = '')
	and		not exists (
						select	1
						from	cirurgia x
						where	x.nr_prescricao = a.nr_prescricao)
	and 	((ie_susp_rep_transf_w <> ie_susp_rep_R_w) or (c.ie_agrupador = 4 and OBTER_SE_SUSP_TRANSFER_MEDIC(cd_setor_atend_regra_w, c.cd_material, CASE WHEN coalesce(c.cd_protocolo::text, '') = '' THEN  'N'  ELSE 'S' END ) = 'S'))
	
union all

	select	b.nr_prescricao,
			b.nr_sequencia,
			'NUT_PAC'
	from	prescr_medica a,
			nut_pac b
	where	a.nr_prescricao	= b.nr_prescricao
	and		a.nr_atendimento = nr_atendimento_p
	and		(coalesce(a.dt_liberacao_medico,a.dt_liberacao) IS NOT NULL AND (coalesce(a.dt_liberacao_medico,a.dt_liberacao))::text <> '')
	and		coalesce(a.dt_suspensao::text, '') = ''
	and		coalesce(b.dt_suspensao::text, '') = ''
	and		coalesce(b.ie_suspenso,'N')	= 'N'
	and		ie_susp_prescr_dieta_pend_w = 'S'
	and (coalesce(a.dt_baixa::text, '') = '')
	and		not exists (
						select	1
						from	cirurgia x
						where	x.nr_prescricao = a.nr_prescricao)
	and 	((ie_susp_rep_transf_w <> ie_susp_rep_R_w) or (OBTER_SE_SUSP_TRANSFER(cd_setor_atend_regra_w, 'N') = 'S'))
	
union all

	select	b.nr_prescricao,
			b.nr_sequencia,
			'PRESCR_PROCEDIMENTO'
	from	prescr_medica a,
			prescr_procedimento b
	where	a.nr_prescricao	= b.nr_prescricao
	and		a.nr_atendimento = nr_atendimento_p
	and		(coalesce(a.dt_liberacao_medico,a.dt_liberacao) IS NOT NULL AND (coalesce(a.dt_liberacao_medico,a.dt_liberacao))::text <> '')
	and		coalesce(a.dt_suspensao::text, '') = ''
	and		coalesce(b.dt_suspensao::text, '') = '' 
	and		coalesce(b.ie_suspenso,'N')	= 'N'
	and (coalesce(a.dt_baixa::text, '') = '')
	and		coalesce(b.cd_motivo_baixa,0)	= 0
	and		not exists (
						select	1
						from	cirurgia x
						where	x.nr_prescricao = a.nr_prescricao)
	and		not exists (
						select	1
						from	prescr_material y
						where	y.nr_prescricao = a.nr_prescricao
						and		y.nr_sequencia_proc = b.nr_sequencia	
						and (coalesce(y.cd_motivo_baixa,0) <> 0))
	and 	((ie_susp_rep_transf_w <> ie_susp_rep_R_w) or (OBTER_SE_SUSP_TRANSFER_PROC(cd_setor_atend_regra_w, b.nr_seq_proc_interno) = 'S'))
	and 	ie_susp_rep_transf_w <> ie_susp_rep_M_w
	
union all

	select	b.nr_prescricao,
			b.nr_sequencia,
			'PRESCR_RECOMENDACAO'
	from	prescr_medica a,
			prescr_recomendacao b
	where	a.nr_prescricao	= b.nr_prescricao
	and		a.nr_atendimento = nr_atendimento_p
	and		(coalesce(a.dt_liberacao_medico,a.dt_liberacao) IS NOT NULL AND (coalesce(a.dt_liberacao_medico,a.dt_liberacao))::text <> '')
	and		coalesce(a.dt_suspensao::text, '') = ''
	and		coalesce(b.dt_suspensao::text, '') = '' 
	and		coalesce(b.ie_suspenso,'N')	= 'N'
	and (coalesce(a.dt_baixa::text, '') = '')
	and		not exists (
						select	1
						from	cirurgia x
						where	x.nr_prescricao = a.nr_prescricao)
	and		not exists (
						select	1
						from	prescr_material y
						where	y.nr_prescricao = a.nr_prescricao
						and		y.nr_seq_recomendacao = b.nr_sequencia	
						and (coalesce(y.cd_motivo_baixa,0) <> 0))
	and 	((ie_susp_rep_transf_w <> ie_susp_rep_R_w) or (OBTER_SE_SUSP_TRANSFER(cd_setor_atend_regra_w, ie_susp_rep_R_w) = 'S'))
	and 	ie_susp_rep_transf_w <> ie_susp_rep_M_w
	
union all

	select	b.nr_prescricao,
			b.nr_sequencia,
			'PRESCR_GASOTERAPIA'
	from	prescr_medica a,
			prescr_gasoterapia b
	where	a.nr_prescricao	= b.nr_prescricao
	and		a.nr_atendimento = nr_atendimento_p
	and		(coalesce(a.dt_liberacao_medico,a.dt_liberacao) IS NOT NULL AND (coalesce(a.dt_liberacao_medico,a.dt_liberacao))::text <> '')
	and		coalesce(a.dt_suspensao::text, '') = ''
	and		coalesce(b.dt_suspensao::text, '') = '' 
	and		coalesce(b.ie_suspenso,'N')	= 'N'
	and (coalesce(a.dt_baixa::text, '') = '')
	and		not exists (
						select	1
						from	cirurgia x
						where	x.nr_prescricao = a.nr_prescricao)
	and		not exists (
						select	1
						from	prescr_material y
						where	y.nr_prescricao = a.nr_prescricao
						and		y.nr_seq_gasoterapia = b.nr_sequencia
						and (coalesce(y.cd_motivo_baixa,0) <> 0))
	and 	((ie_susp_rep_transf_w <> ie_susp_rep_R_w) or (OBTER_SE_SUSP_TRANSFER(cd_setor_atend_regra_w, 'G') = 'S'));

c11 CURSOR FOR
	SELECT	distinct
			c.cd_material,
			a.nr_seq_lote nr_seq_lote_integracao,
			c.nr_sequencia nr_seq_material_hl7,
			c.nr_seq_regra_local
	from   	prescr_mat_hor a,
			prescr_medica b,
			prescr_material c,
			estrutura_material_v s,
			material e
	where  	(a.nr_seq_lote IS NOT NULL AND a.nr_seq_lote::text <> '')
	and  	a.cd_material = s.cd_material
	and  	a.nr_prescricao = b.nr_prescricao
	and  	c.nr_prescricao = b.nr_prescricao
	and  	a.nr_seq_material = c.nr_sequencia
	and 	a.nr_prescricao = nr_prescricao_w
	and  	a.cd_material = e.cd_material
	and  	c.ie_suspenso <> 'S'
	and  	coalesce(a.dt_suspensao::text, '') = ''
	and  exists(  SELECT	1
				  from  	ap_lote x,
							classif_lote_disp_far y
				  where  	x.nr_sequencia = a.nr_seq_lote
				  and   	coalesce(x.ie_integracao, 'N') = 'P'
				  and  		y.nr_sequencia = x.nr_seq_classif
				  and		((ie_enviar_horarios_disp_w = 'S') or (y.ie_classif_urgente = 'A'))
				  and  		coalesce(x.dt_atend_farmacia::text, '') = '')
	and  exists(  select	1
				  from		regra_local_dispensacao x
				  where   	x.cd_estabelecimento  = b.cd_estabelecimento
				  and  		x.cd_setor_atendimento  = b.cd_setor_atendimento
				  and  		x.nr_sequencia   = coalesce(a.nr_regra_local_disp, c.nr_seq_regra_local)
				  and   	coalesce(x.nr_seq_classif,a.nr_seq_classif) = a.nr_seq_classif
				  and   	((x.cd_material   = s.cd_material) or (x.cd_grupo_material  = s.cd_grupo_material) or (x.cd_subgrupo_material = s.cd_subgrupo_material) or (x.cd_classe_material  = s.cd_classe_material) or ((x.nr_seq_estrut_int IS NOT NULL AND x.nr_seq_estrut_int::text <> '') and
							consistir_se_mat_contr_estrut(x.nr_seq_estrut_int, s.cd_material) = 'S')));
c11_list_w	c11%rowtype;


BEGIN
cd_perfil_w	:= Obter_perfil_ativo;

ie_transf_se_livre_w := obter_param_usuario(3111, 147, cd_perfil_w, nm_usuario_p, obter_estabelecimento_ativo, ie_transf_se_livre_w);
ie_transf_entre_setor_hc_w := obter_param_usuario(3111, 265, cd_perfil_w, nm_usuario_p, obter_estabelecimento_ativo, ie_transf_entre_setor_hc_w);
ie_transf_estab_setor_w := obter_param_usuario(3111, 322, cd_perfil_w, nm_usuario_p, obter_estabelecimento_ativo, ie_transf_estab_setor_w);


select	max(coalesce(ie_gerar_alerta_transf,'N'))
into STRICT	ie_gerar_evento_transf_w
from	parametro_atendimento
where	cd_estabelecimento = obter_estabelecimento_ativo;	

if (ie_transf_se_livre_w = 'S') then
	
	select	max(ie_status_unidade)
	into STRICT	ie_status_leito_w	
	from	unidade_atendimento
	where	cd_setor_atendimento = cd_setor_atendimento_p
	and	cd_unidade_basica = cd_unidade_basica_p
	and 	cd_unidade_compl = cd_unidade_compl_p;


	if (ie_status_leito_w in ('H','A','G')) then
		--O leito selecionado encontra-se em processo de alta e/ou ainda nao foi higienizado. Parametro [147]');
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(197117);
	end if;
end if;

if (ie_transf_entre_setor_hc_w = 'N') then
	
	select	count(*)
	into STRICT	qt_homecare_w
	from	setor_atendimento b,
		atend_paciente_unidade a
	where	b.cd_classif_setor	= 8
	and	a.cd_setor_atendimento	= b.cd_setor_atendimento
	and	a.nr_atendimento	= nr_atendimento_p;

	if (qt_homecare_w	> 0)  then
		--Nao podem ser feitas transferencias de atendimentos com o setor Home Care!');
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(197118);
	end if;

end if;

select	dt_entrada,
	cd_pessoa_fisica,
	dt_alta,
	nr_seq_local_pa,
	ie_clinica,
	cd_medico_resp,
	ie_paciente_isolado
into STRICT	dt_entrada_w,
	cd_pessoa_fisica_w,
	dt_alta_w,
	nr_seq_local_pa_w,
	ie_clinica_atend_w,
	cd_medico_resp_w,
	ie_paciente_isolado_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_p;
qt_idade_w	:= coalesce(obter_idade_pf(cd_pessoa_fisica_w,clock_timestamp(),'A'),0);

select	nextval('atend_paciente_unidade_seq')
into STRICT	nr_seq_interno_w
;

select	coalesce(max(nr_sequencia),0) + 1
into STRICT	nr_sequencia_w
from	atend_paciente_unidade
where	nr_atendimento		= nr_atendimento_p;

select	cd_estabelecimento_base,
	cd_classif_setor,
	ie_tipo_evolucao_saida,
	coalesce(IE_GERA_FICHA_OCORRENCIA, 'N')
into STRICT	cd_estabelecimento_w,
	cd_classif_setor_w,
	ie_tipo_evolucao_saida_w,
	ie_gera_ficha_cih_w
from	setor_atendimento
where	cd_setor_atendimento	= cd_setor_atendimento_p;


ie_consistir_disp_w := obter_param_usuario(3111, 57, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_consistir_disp_w);
ie_tipo_atend_movimenta_w := obter_param_usuario(3111, 99, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_tipo_atend_movimenta_w);
ie_libera_leito_ocup_w := obter_param_usuario(3111, 129, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_libera_leito_ocup_w);
ie_util_integra_informatec_w := obter_param_usuario(3111, 139, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_util_integra_informatec_w);
ie_obs_anteriores_w := obter_param_usuario(3111, 164, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_obs_anteriores_w);
ie_considerar_troca_leito_w := obter_param_usuario(3111, 166, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_considerar_troca_leito_w);
ie_susp_prescr_pend_w := obter_param_usuario(3111, 169, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_susp_prescr_pend_w);
ie_gerar_hig_dt_saida_w := obter_param_usuario(3111, 173, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_gerar_hig_dt_saida_w);
--obter_param_usuario(3111, 177, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_limpa_dados_saida_pa_w); consistido dentro da procedure limpar_dados_local_PA_mov
ie_define_gastos_rn_w := obter_param_usuario(3111, 189, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_define_gastos_rn_w);
ie_atualiza_sit_agrup_w := obter_param_usuario(3111, 197, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_sit_agrup_w);
ie_bloqueio_sem_orient_pep_w := obter_param_usuario(3111, 200, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_bloqueio_sem_orient_pep_w);
qt_perm_transf_cc_w := obter_param_usuario(3111, 206, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, qt_perm_transf_cc_w);
ie_gerar_hig_leito_CC_w := obter_param_usuario(3111, 258, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_gerar_hig_leito_CC_w);
qt_perm_mov_param_238_w := obter_param_usuario(3111, 238, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, qt_perm_mov_param_238_w);
ie_susp_prescr_dieta_pend_w := obter_param_usuario(3111, 255, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_susp_prescr_dieta_pend_w);
ie_permite_intern_desfecho_w := obter_param_usuario(3111, 303, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_permite_intern_desfecho_w);

ie_integra_aghos_w := obter_dados_param_atend(cd_estabelecimento_w, 'AG');

/*if (ie_gerar_hig_dt_saida_w = 'S') then
	gerar_higienizacao_leito(sysdate,nm_usuario_p,cd_estabelecimento_w,'TL',null,nr_atendimento_p,cd_tipo_acomodacao_p);
	if (nvl(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
end if;*/
if	((ie_tipo_atend_movimenta_w IS NOT NULL AND ie_tipo_atend_movimenta_w::text <> '') and (substr(obter_classif_setor(cd_setor_atendimento_p),1,1) in (3,4,8))) then
	
	select	substr(obter_se_contido_char(ie_tipo_atendimento, ie_tipo_atend_movimenta_w),1,1)
	into STRICT	ie_nao_permite_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;
	
	if (coalesce(ie_nao_permite_w,'N') = 'S') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(315397);
	end if;
end if;

select	max(ie_controle_faixa_etaria)
into STRICT	ie_controle_faixa_etaria_w
from	unidade_atendimento
where	cd_setor_atendimento = cd_setor_atendimento_p
and	cd_unidade_basica = cd_unidade_basica_p
and	cd_unidade_compl = cd_unidade_compl_p;

if (ie_controle_faixa_etaria_w = 'S') then
	
	ie_faixa_etaria_w 	:=	coalesce(obter_se_faixa_etaria_pac(	cd_pessoa_fisica_w,
									cd_setor_atendimento_p),'S');

	if (ie_faixa_etaria_w  = 'N') then	
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(230794);	
	end if;
end if;
	
if (coalesce(qt_perm_transf_cc_w,0) > 0) then
	
	select	max(ie_tipo_convenio)
	into STRICT	ie_tipo_convenio_atend_w
	from	atendimento_paciente
	where 	nr_atendimento = nr_atendimento_p;
	
	select	count(*)
	into STRICT	qt_existe_setor_cc_w
	from	atend_paciente_unidade
	where	nr_atendimento = nr_atendimento_p
	and	obter_classif_setor(cd_setor_atendimento) = 2;

	if (cd_classif_setor_w = '2') and (ie_tipo_convenio_atend_w = 3) and (qt_existe_setor_cc_w >= qt_perm_transf_cc_w) then
		--Esse paciente ja teve a quantidade de passagens permitidas para um setor de centro cirurgico. Parametro[206].');
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(197120);
	end if;
end if;

if (ie_consistir_disp_w in ('A','T')) and (obter_se_atendimento_disp(nr_atendimento_p) = 'S') then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(291821);
	--Nao e possivel gerar a alta com dispositivos em uso. Parametro [57].	
end if;
	
select 	max(ie_trat_conta_rn),
	max(nr_atendimento_mae)
into STRICT	ie_trat_conta_rn_w,
	nr_atendimento_mae_w
FROM 	atendimento_paciente
where	nr_atendimento = nr_atendimento_p;

if (OBTER_SE_ATEND_RN(nr_atendimento_p) = 'S') and
	((ie_trat_conta_rn_w = obter_desc_expressao(962487)) or (coalesce(ie_trat_conta_rn_w::text, '') = '')) and (obter_classif_setor(cd_setor_atendimento_p) = 4) and (coalesce(ie_define_gastos_rn_w,'N') = 'S') and (nr_atendimento_mae_w IS NOT NULL AND nr_atendimento_mae_w::text <> '') then
	--A transferencia neo pode ser realizada pois o destino dos gastos nao foi definido para o RN na Entrada Unica de Pacientes. Parametro [189].');
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(197122);
end if;	
	
if (qt_perm_mov_param_238_w = 'N') then

	select 	max(dt_alta),
		max(dt_alta_medico)
	into STRICT	dt_alta_238_w,
		dt_alta_medico_238_w
	from	atendimento_paciente	
	where	nr_atendimento = nr_atendimento_p;
	
	if (dt_alta_medico_238_w IS NOT NULL AND dt_alta_medico_238_w::text <> '') and (coalesce(dt_alta_238_w::text, '') = '') then
		-- Voce nao possui permissao para realizar a transferencia do paciente!

		-- Pois o mesmo possui alta medica e nao possui a data de alta informada. Parametro[238].
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(217414);
	end  if;
end if;	

if (ie_transf_estab_setor_w = 'S') then
	select	obter_atepacu_paciente(nr_atendimento_p, 'A')
	into STRICT	nr_seq_atepacu_atual_w
	;
else
	select	obter_atepacu_paciente(nr_atendimento_p, 'IAA')
	into STRICT	nr_seq_atepacu_atual_w
	;
end if;

select	max(obter_funcao_ativa)
into STRICT	cd_funcao_w
;

select	max(cd_setor_atendimento),
	max(nr_agrupamento),
	max(cd_unidade_basica),
	max(cd_unidade_compl)
into STRICT	cd_setor_atendimento_w,
	nr_agrupamento_w,
	cd_unidade_basica_w,
	cd_unidade_compl_w
from	unidade_atendimento
where	nr_atendimento = nr_atendimento_p;

if (nr_agrupamento_w IS NOT NULL AND nr_agrupamento_w::text <> '') then
	update 	unidade_atendimento
	set 	ie_status_unidade = 'L',
		nm_usuario = nm_usuario_p,
		dt_atualizacao = clock_timestamp()
	where 	nr_agrupamento = nr_agrupamento_w 
	and 	cd_setor_atendimento = cd_setor_atendimento_w 
	and 	ie_status_unidade = 'O' 
	and 	coalesce(nr_atendimento::text, '') = '';
	
end if;

if (ie_util_integra_informatec_w = 'S') then
	CALL informatec_cinout_leitos('COUT',nr_atendimento_p);
end if;

if (ie_obs_anteriores_w = 'S') then	
	select obter_obser_setor_atend(nr_atendimento_p)
	into STRICT	ds_observacao_w
	;
	
	if (ds_observacao_ww IS NOT NULL AND ds_observacao_ww::text <> '') then
		ds_observacao_ww := substr(ds_observacao_ww || ' - '|| ds_observacao_w,1,2000);
	else
		ds_observacao_ww := ds_observacao_w;

		 
	end if;
end if;

select	coalesce(max(cd_setor_atendimento),0)
into STRICT	cd_setor_atual_w
from	atend_paciente_unidade
where	nr_seq_interno = nr_seq_atepacu_atual_w;

select	max(ie_tipo_evolucao_saida),
	max(cd_estabelecimento_base)
into STRICT	ie_tipo_evolucao_saida_w,
	cd_estab_atual_w
from	setor_atendimento
where	cd_setor_atendimento = cd_setor_atual_w;

if (ie_permite_intern_desfecho_w = 'N') and (obter_tipo_atendimento(nr_atendimento_p) = 3) and (obter_classif_setor(cd_setor_atendimento_p) in (3,4)) then
	
	begin
		select	1
		into STRICT	ie_existe_desfecho_w
		from	atendimento_alta z, parametro_medico p
		where	z.nr_atendimento = nr_atendimento_p
		and	    z.ie_desfecho = 'I'
		and     p.cd_estabelecimento = obter_estabelecimento_ativo
		and 	((z.ie_tipo_orientacao <> 'P')
		or (coalesce(p.ie_liberar_desfecho,'N')  = 'N')
		or  	((z.dt_liberacao IS NOT NULL AND z.dt_liberacao::text <> '') and (coalesce(z.dt_inativacao::text, '') = '')))  LIMIT 1;
	exception
		when	no_data_found then
			ie_existe_desfecho_w := 0;
	end;	
	
	if (ie_existe_desfecho_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(276597);
	end if;	
end if;

if (cd_setor_atual_w <> cd_setor_atendimento_p) and (ie_tipo_evolucao_saida_w IS NOT NULL AND ie_tipo_evolucao_saida_w::text <> '') then
	
	select	max(dt_entrada_unidade)
	into STRICT	dt_entrada_unidade_w
	from	atend_paciente_unidade
	where	nr_seq_interno = nr_seq_atepacu_atual_w;

	select  CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
	into STRICT	ie_possui_evolucao_pac_w
	from    evolucao_paciente
	where   nr_atendimento = nr_atendimento_p
	and	ie_evolucao_clinica = ie_tipo_evolucao_saida_w
	and	dt_liberacao >= coalesce(dt_entrada_unidade_w, dt_liberacao);
		
	if (coalesce(ie_possui_evolucao_pac_w, 'N') = 'N') then			
		---Nao e possivel gerar a transferencia pois o setor CD_SETOR_ATEND_P precisa de uma evolucao do tipo DS_TIPO_EVOLUCAO liberada apos a data de entrada do setor atual
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(267888,'CD_SETOR_ATEND_P='||  obter_desc_Setor_atend( cd_setor_atendimento_p) || ';'
							|| 'DS_TIPO_EVOLUCAO='||  obter_desc_tipo_evolucao(ie_tipo_evolucao_saida_w));
	end if;	
	
end if;

If (ie_bloqueio_sem_orient_pep_w = 'N') And (cd_setor_atual_w <> cd_setor_atendimento_p) then
	begin	
		select	nr_sequencia
		into STRICT	qt_pep_orientacao_geral_w
		from	pep_orientacao_geral
		where	nr_atendimento = nr_atendimento_p;	
	exception
	when 	no_data_found then
			
			select 	coalesce(max(DS_ITEM_INSTITUICAO),WHEB_MENSAGEM_PCK.get_texto(297923)) --'Orientacoes de alta'
			into STRICT	ds_item_w
			from 	PERFIL_ITEM_PRONT
			where 	coalesce(CD_PERFIL,cd_perfil_w) = cd_perfil_w
			and	NR_SEQ_ITEM_PRONT = 153;			
		
			--E obrigatorio o preenchimento do item ' || ds_item_w || ' no PEP! Parametro [200]');
			if (ds_item_w IS NOT NULL AND ds_item_w::text <> '') then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(197123,'ITEM='||ds_item_w);
			else
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(197123,'ITEM='||WHEB_MENSAGEM_PCK.get_texto(297923)); --'Orientacoes de alta'
			end if;
	end;
End if;

open C07;
loop
fetch C07 into	
	nr_seq_evento_w;
EXIT WHEN NOT FOUND; /* apply on C07 */
	begin
	if (ie_gerar_evento_transf_w = 'N') then
		CALL gerar_evento_paciente(nr_seq_evento_w,nr_atendimento_p,cd_pessoa_fisica_w,null,nm_usuario_p,null);
	elsif (ie_gerar_evento_transf_w = 'S') then
		CALL gerar_evento_transf_setor(nr_seq_evento_w,nr_atendimento_p,cd_pessoa_fisica_w,null,nm_usuario_p,null);	
	end if;
	end;
end loop;
close C07;



if (ie_considerar_troca_leito_w = 'S') and (cd_setor_atendimento_p = cd_setor_atual_w) then
	begin
	ie_passagem_setor_w	:=	'L';	
	end;
end if;

select 	coalesce(max(ie_arq_pyxis),'N')
into STRICT	ie_arq_pyxis_w
from	parametro_atendimento
where	cd_estabelecimento = cd_estabelecimento_w;

if (ie_arq_pyxis_w = 'S') then
	begin
	--insert into jonas values ( 'W - '||cd_setor_atual_w||' P - '||cd_setor_atendimento_p);
	
	if (dis_obter_regra_moviment('T',cd_setor_atual_w,cd_setor_atendimento_p) = 'S') then
		CALL dis_gerar_arq_moviment(nr_atendimento_p);

		insert into dis_log_integracao(
				nr_sequencia,
				cd_estabelecimento,
				dt_atualizacao,    
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_historico)
			values (nextval('dis_log_integracao_seq'),	
				cd_estabelecimento_w,
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				WHEB_MENSAGEM_PCK.get_texto(297925));
	end if;
	end;	
end if;

CALL limpar_dados_local_PA_mov(cd_setor_atendimento_p, nr_atendimento_p, nm_usuario_p);


if ((ie_gerar_hig_leito_CC_w = 'N' AND cd_classif_setor_w <> 2) or (ie_gerar_hig_leito_CC_w = 'S')) then
	CALL gerar_higienizacao_leito(clock_timestamp(),nm_usuario_p,cd_estab_atual_w,'TL',null,nr_atendimento_p,cd_tipo_acomodacao_p);
	if (coalesce(ie_paciente_isolado_w,'N') = 'S') then
		CALL gerar_higienizacao_leito(clock_timestamp(),nm_usuario_p,cd_estab_atual_w,'TLPI',null,nr_atendimento_p,cd_tipo_acomodacao_p);
	elsif (coalesce(ie_paciente_isolado_w,'N') = 'N') then
		CALL gerar_higienizacao_leito(clock_timestamp(),nm_usuario_p,cd_estab_atual_w,'TLPNI',null,nr_atendimento_p,cd_tipo_acomodacao_p);
	end if;
end if;

select	max(cd_tipo_acomodacao)
into STRICT	cd_tipo_acomodacao_w
from	atend_paciente_unidade
where	nr_seq_interno = obter_atepacu_paciente(nr_Atendimento_p, 'IAA');
/*
If	(cd_tipo_acomodacao_w <> cd_tipo_acomodacao_p) then
	
	insert into log_XXtasy values(sysdate,nm_usuario_p,1356,
	chr(13) || chr(10) ||
	'Atendimento: ' || nr_atendimento_p || CHR(13) || CHR(10) || 
	'Acomodacao: ' || substr(obter_desc_tipo_acomodacao(cd_tipo_acomodacao_p),30) || CHR(13) || CHR(10) || 
	'Usuario: ' || nm_usuario_p || CHR(13) || CHR(10) || chr(13) || chr(10));		 	 
end if; 
*/
select	max(a.nr_seq_interno)
into STRICT	nr_seq_unid_ant_w
from	unidade_atendimento a,
		atend_paciente_unidade b
where	a.cd_setor_atendimento  = b.cd_setor_atendimento
and		a.cd_unidade_basica  	= b.cd_unidade_basica
and		a.cd_unidade_compl 		= b.cd_unidade_compl
and		b.nr_seq_interno 		= obter_atepacu_paciente(nr_atendimento_p, 'IAA');

ie_calcular_dif_diaria_w := obter_param_usuario(3111, 332, cd_perfil_w, nm_usuario_p, obter_estabelecimento_ativo, ie_calcular_dif_diaria_w);

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_pac_unidade_w
	from	atend_paciente_unidade
	where	nr_atendimento = nr_atendimento_p;

	begin
		select  dm.cd_departamento
		into STRICT    cd_departamento_w
		from    departamento_medico dm
		where   dm.cd_departamento = cd_departamento_p;
    exception
    when others then
        select  max(cd_departamento),
				max(nr_seq_classif_esp)
        into STRICT    cd_departamento_w,
				nr_seq_classif_esp_w
        from    atend_paciente_unidade
        where   nr_sequencia = nr_seq_pac_unidade_w
        and    	nr_atendimento = nr_atendimento_p;
    end;

end if;



insert	into atend_paciente_unidade(nr_atendimento,
	nr_sequencia,
	cd_setor_atendimento,
	cd_unidade_basica,
	cd_unidade_compl,
	dt_entrada_unidade,
	dt_atualizacao,
	nm_usuario,
	cd_tipo_acomodacao,
	dt_saida_unidade,
	nr_atend_dia,
	ds_observacao,
	nm_usuario_original,
	dt_saida_interno,
	ie_passagem_setor,
	nr_acompanhante,
	nr_seq_interno,
	IE_CALCULAR_DIF_DIARIA,
	nr_seq_motivo_transf,
	nr_seq_unid_ant,
	cd_departamento,
	nr_seq_classif_esp)
values (nr_atendimento_p,
	nr_sequencia_w,
	cd_setor_atendimento_p,
	cd_unidade_basica_p,
	cd_unidade_compl_p,
	dt_entrada_unidade_p,
	clock_timestamp(),
	nm_usuario_p,
	cd_tipo_acomodacao_p,
	null,
	null,
	ds_observacao_ww,
	nm_usuario_p,
	null,
	ie_passagem_setor_w,
	nr_acompanhantes_p,
	nr_seq_interno_w,
	coalesce(ie_calcular_dif_diaria_w,'S'),
	nr_seq_motivo_transf_p,
	nr_seq_unid_ant_w,
	cd_departamento_w,
	coalesce(nr_seq_classif_esp_p, nr_seq_classif_esp_w));

    CALL GERAR_FILA_IMPRESSAO_ADT(nr_atendimento_p, 2);	

ds_log_w	:=	WHEB_MENSAGEM_PCK.get_texto(297933,'NR_ATENDIMENTO_P=' || nr_atendimento_p || ';NR_SEQUENCIA_W=' || nr_sequencia_w || ';CD_SETOR_ATENDIMENTO_P=' || cd_setor_atendimento_p || ';CD_UNIDADE_BASICA_P=' || cd_unidade_basica_p ||
';CD_UNIDADE_COMPL_P=' || cd_unidade_compl_p || ';DT_ENTRADA_UNIDADE_P=' || dt_entrada_unidade_p || ';OBTER_FUNCAO_ATIVA=' || obter_funcao_ativa || ';OBTER_PERFIL_ATIVO=' || Obter_perfil_ativo);


/*				
insert into	log_XXtasy (
		dt_atualizacao,
		nm_usuario,
		cd_log,
		ds_log)
	values (
		sysdate,
		nm_usuario_p,
		99755,
		ds_log_w
		);	*/
if (cd_estab_atual_w <> cd_estabelecimento_w) then
	CALL transferir_atendimento_estab(nr_atendimento_p, cd_estabelecimento_w);
end if;

CALL Atend_Paciente_Unid_AfterPost(nr_seq_interno_w, 'I', nm_usuario_p);

if (nr_seq_atepacu_atual_w IS NOT NULL AND nr_seq_atepacu_atual_w::text <> '') then
	begin
		select	cd_setor_atendimento,
				cd_unidade_basica,
				cd_unidade_compl
		into STRICT	cd_setor_atual_ww,
				cd_unidade_basica_ww,
				cd_unidade_compl_ww
		from 	atend_paciente_unidade
		where	nr_seq_interno = nr_seq_atepacu_atual_w;	
		
		insert into integra_voice_hcs(NR_SEQUENCIA,
			DT_ATUALIZACAO,
			NM_USUARIO,
			DT_ATUALIZACAO_NREC,
			NM_USUARIO_NREC,
			NR_ATENDIMENTO,
			CD_SETOR_ATEND_ANT,
			CD_UNID_BASIC_ANT,
			CD_UNID_COMPL_ANT,
			CD_SETOR_ATENDIMENTO,
			CD_UNIDADE_BASICA,
			CD_UNIDADE_COMPL,
			IE_STATUS_UNIDADE,
			IE_EVENTO,
			DS_MENSAGEM)
		values (
			nextval('integra_voice_hcs_seq'),
			clock_timestamp(),
			nm_usuario_p,		
			clock_timestamp(),	
			nm_usuario_p,		
			nr_atendimento_p,
			cd_setor_atual_ww,
			cd_unidade_basica_ww,
			cd_unidade_compl_ww,
			cd_setor_atendimento_p,
			cd_unidade_basica_p,
			cd_unidade_compl_p,
			null,
			'TL',
			null);	
			
			select 	nextval('carestrem_encounter_seq')
			into STRICT	nr_seq_carestrem_w
			;
			
			insert into	carestrem_encounter(CD_PESSOA_FISICA,
				CD_SETOR_ATENDIMENTO,
				IE_PACIENTE_ISOLADO,
				NR_ATENDIMENTO,
				CD_UNIDADE_BASICA,
				CD_UNIDADE_COMPL,
				NR_ACESSO_DICOM,
				IE_INTEGRADO,
				NR_SEQUENCIA,
				IE_TIPO_MOV,
				DT_ATUALIZACAO,
				NM_USUARIO,
				DT_ATUALIZACAO_NREC,
				NM_USUARIO_NREC,
				DT_INTEGRACAO)
			values (cd_pessoa_fisica_w,
				cd_setor_atendimento_p,
				ie_paciente_isolado_w,
				nr_atendimento_p,
				cd_unidade_basica_p,
				cd_unidade_compl_p,
				null,
				'N',
				nr_seq_carestrem_w,
				'TRANSFERENCIA',
				clock_timestamp(),
				OBTER_USUARIO_ATIVO,
				clock_timestamp(),
				OBTER_USUARIO_ATIVO,
				clock_timestamp());
	exception
	when others then
		null;
	end;
		

end if;
if (cd_setor_atual_w <> cd_setor_atendimento_p) then
		
	if (pkg_i18n.get_user_locale() = 'en_AU') then
		cd_setor_atend_regra_w	:= cd_setor_atual_w;
	else
		cd_setor_atend_regra_w	:= cd_setor_atendimento_p;
	end if;
	ie_susp_rep_transf_w	:= Obter_se_suspen_presc_set(cd_setor_atend_regra_w);
	
	if	((ie_susp_prescr_pend_w = 'S')  or
		 ((ie_susp_prescr_pend_w = 'C') and (ie_susp_rep_transf_w in ('S','B')))) then
		
		open C06;
		loop
		fetch C06 into	
			nr_prescricao_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			CALL Suspender_Prescricao(nr_prescricao_w, 0, null, nm_usuario_p, 'N');
		end loop;
		close C06;
		CALL cpoe_susp_atend_sem_rep(nr_atendimento_p, nm_usuario_p);
		
	elsif (ie_susp_prescr_pend_w = 'C') and (ie_susp_rep_transf_w in ('M','I','R')) then
		
		  open C08;
		  loop
		  fetch C08 into	
		  	nr_prescricao_w,
			nr_seq_item_w,
			nm_tabela_w;
		  EXIT WHEN NOT FOUND; /* apply on C08 */
		  	begin			
			CALL Suspender_item_Prescricao(nr_prescricao_w,nr_seq_item_w,null, WHEB_MENSAGEM_PCK.get_texto(297924),nm_tabela_w,nm_usuario_p,'S',null,null);
		  	end;
		  end loop;
		  close C08;
		
		  CALL cpoe_susp_atend_sem_rep(nr_atendimento_p, nm_usuario_p);
	end if;
end if;	
	
	
select	count(*)
into STRICT	qt_log_w
from	unidade_atendimento
where	nr_atendimento = nr_atendimento_p;

if (qt_log_w > 1) then

	qt_log_w := 0;

	ds_origem_w := substr(dbms_utility.format_call_stack,1,1800);
	
	open C05;
	loop
	fetch C05 into	
		ds_unidade_log_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin
		qt_log_w := qt_log_w + 1;

	/*	insert 	into logXX_tasy
					(DT_ATUALIZACAO, 
					 NM_USUARIO, 
					 CD_LOG, 
					 DS_LOG)
			values	(sysdate, 
				 nm_usuario_p, 
				 55839,
				 'Origem '||ds_origem_w||' '||qt_log_w||ds_unidade_log_w);
				 */
		end;
	end loop;
	close C05;

end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

if (cd_funcao_w	= 3111) then
	ie_transfere_gasto_w := obter_param_usuario(cd_funcao_w, 59, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_transfere_gasto_w);

	if (ie_transfere_gasto_w	= 'S') then
		open C03;
		loop
		fetch C03 into	
			nr_seq_propaci_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin

			CALL Transferir_Gasto_Atendimento(nr_seq_propaci_w,
					1, nr_atendimento_p,
					'S', 'S', nm_usuario_p);
					
			update	procedimento_paciente
			set	nr_seq_atepacu			= nr_seq_interno_w,
				cd_setor_atendimento		= cd_setor_atendimento_p
			where	nr_sequencia			= nr_seq_propaci_w;
			
			end;
		end loop;
		close C03;
	
		open C04;
		loop
		fetch C04 into	
			nr_seq_matpaci_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			
			CALL Transferir_Gasto_Atendimento(nr_seq_matpaci_w,
					2, nr_atendimento_p,
					'S', 'S', nm_usuario_p);
			
						
			update	material_atend_paciente
			set	nr_seq_atepacu			= nr_seq_interno_w,
				cd_setor_atendimento		= cd_setor_atendimento_p
			where	nr_sequencia			= nr_seq_matpaci_w;
			
			
			end;
		end loop;
		close C04;
	
	end if;
end if;	
	
if (cd_classif_setor_w in ('3','4','8')) then
	begin
	cd_convenio_w := Obter_Convenio_Atendimento(nr_atendimento_p);
	open C01;
	loop
	fetch C01 into	
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin		
		if (ie_gerar_evento_transf_w = 'N') then
		CALL gerar_evento_paciente(nr_seq_evento_w,nr_atendimento_p,cd_pessoa_fisica_w,null,nm_usuario_p,null);
		elsif (ie_gerar_evento_transf_w = 'S') then
		CALL gerar_evento_transf_setor(nr_seq_evento_w,nr_atendimento_p,cd_pessoa_fisica_w,null,nm_usuario_p,null);
		end if;
		end;
	end loop;
	close C01;
	end;
elsif (cd_classif_setor_w = '2') then
	begin
	open C02;
	loop
	fetch C02 into	
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		CALL gerar_evento_paciente(nr_seq_evento_w,nr_atendimento_p,cd_pessoa_fisica_w,null,nm_usuario_p,null);
		end;
	end loop;
	close C02;
	end;
end if;

/*Fabio e Jonas 06/05/2009*/


/* gerar_ajustes_ap_lote('M', nr_atendimento_p, nm_usuario_p); Dalcastagne em 03/07/2009 OS 150755 */

select	count(*)
into STRICT	qt_log_w
from	unidade_atendimento
where	nr_atendimento = nr_atendimento_p;


ie_gera_eritel_w := 	Obter_Valor_Param_Usuario(3111,109, cd_perfil_w, nm_usuario_p,0);
if 	((ie_gera_eritel_w = 'AT') or (ie_gera_eritel_w = 'APT'))
and (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
	CALL Insere_W_integracao_eritel(cd_setor_atendimento_w, 
					cd_unidade_basica_w,
					cd_unidade_compl_w,
					nr_atendimento_p,
					'N',
					nm_usuario_p,
					cd_estabelecimento_w);
end if;


if (qt_log_w > 1) and (ie_libera_leito_ocup_w = 'S') then /*Para impedir que o paciente ocupe dois leitos ao mesmo tempo*/
	ds_origem_w := substr(dbms_utility.format_call_stack,1,1800);	
	
	select	max(WHEB_MENSAGEM_PCK.get_texto(297934) || ' ' || nr_atendimento
		|| ' ' || WHEB_MENSAGEM_PCK.get_texto(297916) || ' ' || cd_setor_atendimento
		|| ' ' || WHEB_MENSAGEM_PCK.get_texto(297917) || ' ' || cd_unidade_basica
		|| ' ' || WHEB_MENSAGEM_PCK.get_texto(297918) || ' ' || cd_unidade_compl
		|| ' ' || WHEB_MENSAGEM_PCK.get_texto(297919) || ' ' || PKG_DATE_FORMATERS.TO_VARCHAR(dt_entrada_unidade,'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)
		|| ' ' || WHEB_MENSAGEM_PCK.get_texto(297920) || ' ' || ie_status_unidade
		|| ' ' || WHEB_MENSAGEM_PCK.get_texto(297921) || ' ' || nm_usuario)
	into STRICT	ds_unidade_log_w
	from	unidade_atendimento
	where	nr_atendimento = nr_atendimento_p
	and	((cd_setor_atendimento 	<> cd_setor_atendimento_p) or (cd_unidade_basica 	<> cd_unidade_basica_p) or (cd_unidade_compl 	<> cd_unidade_compl_p));

		 /*
	insert 	into log_XXtasy
			(DT_ATUALIZACAO, 
			 NM_USUARIO, 
			 CD_LOG, 
			 DS_LOG)
	values	(sysdate, 
		 nm_usuario_p, 
		 55839,
		 'Origem '||ds_origem_w||' '||qt_log_w||ds_unidade_log_w);
		 */
		
	update	unidade_atendimento
	set	ie_status_unidade	= 'L',
		NM_USUARIO		= nm_usuario_p,
		DT_ATUALIZACAO		= clock_timestamp(),
		dt_entrada_unidade	 = NULL,
		nr_atendimento		 = NULL
	where	nr_atendimento		= nr_atendimento_p
	and	((cd_setor_atendimento 	<> cd_setor_atendimento_p) or (cd_unidade_basica 	<> cd_unidade_basica_p) or (cd_unidade_compl	<> cd_unidade_compl_p));

	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
		
end if;

if (ie_atualiza_sit_agrup_w = 'S') then

	select	coalesce(max(nr_seq_interno),0)
	into STRICT	nr_seq_unidade_w
	from	unidade_atendimento
	where 	cd_setor_atendimento = cd_setor_atendimento_w
	and   	cd_unidade_basica = cd_unidade_basica_w 
	and   	cd_unidade_compl =  cd_unidade_compl_w;

	if (nr_seq_unidade_w > 0) then
		CALL atualizar_situacao_unidades(nr_seq_unidade_w,nm_usuario_p);
	end if;

end if;

ie_altera_status_gv_w := obter_param_usuario(1002, 71, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_altera_status_gv_w);

select	max(ie_status_acomodado)
into STRICT	ie_status_acomodado_w	
from	setor_atendimento
where	cd_setor_atendimento = cd_setor_atendimento_p;

if (coalesce(ie_altera_status_gv_w,'N') = 'S') and (coalesce(ie_status_acomodado_w,'S') = 'S')	then
	CALL atualiza_status_vaga_acomod(nr_atendimento_p,cd_setor_atendimento_p,cd_tipo_acomodacao_p);
end if;

select	count(*)
into STRICT	qt_existe_regra_w
from	regra_acompanhante_dieta;

if ( qt_existe_regra_w > 0) then
	
	select	obter_tipo_acomodacao(nr_atendimento_p)
	into STRICT	cd_tipo_acomodacao_www
	;
	
	select	coalesce(obter_valor_param_usuario(3111, 211, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'S')
	into STRICT	ie_desconsiderar_w
	;
	
	if (ie_desconsiderar_w = 'S') then
	CALL atualizar_dados_convenio(nr_atendimento_p,cd_setor_atendimento_p,cd_tipo_acomodacao_www);
	end if;
	
	if	(ie_desconsiderar_w = 'N' AND cd_classif_setor_w <> 2)  then
		CALL atualizar_dados_convenio(nr_atendimento_p,cd_setor_atendimento_p,cd_tipo_acomodacao_www);
	end if;
end if;

begin
select	1
into STRICT	qt_existe_regra_setor_w
from	dis_regra_setor
where	cd_setor_atendimento = cd_setor_atendimento_p  LIMIT 1;
exception
when others then
	qt_existe_regra_setor_w := 0;
end;

if (qt_existe_regra_setor_w > 0) then
	CALL intdisp_gerar_movimento(nr_atendimento_p, 'EPA');
end if;	
if (qt_existe_regra_setor_w = 0) then
	begin
		begin
		select	1
		into STRICT	qt_existe_dips_setor_w
		from	int_disp_movt_pac
		where	nr_atendimento = nr_atendimento_p  LIMIT 1;
		exception
		when others then
			qt_existe_dips_setor_w := 0;
		end;	
		if (qt_existe_dips_setor_w > 0) then
		CALL intdisp_gerar_movimento(nr_atendimento_p, 'EPD');
		end if;
	end;	
end if;	

CALL gerar_autor_regra(nr_atendimento_p,null,null,null,null,null,'TP',nm_usuario_p,null,null,null,null,null,null,'','','');

CALL avisar_higienizacao_camareira(cd_setor_atendimento_p, cd_unidade_basica_p, cd_unidade_compl_p, 'T');

select	coalesce(max(ie_gerar_transf_lote), 'N')
into STRICT	ie_gerar_transf_lote_w
from	parametros_farmacia
where	cd_estabelecimento = cd_estabelecimento_w;

if (ie_gerar_transf_lote_w = 'S') then
	CALL gerar_requisicao_transf_pac(nr_atendimento_p, cd_setor_atual_w, cd_setor_atendimento_p, cd_estabelecimento_w, nm_usuario_p);
end if;

if (ie_gera_ficha_cih_w = 'S') then
	CALL ccih_gerar_ficha_ocorrencia(nr_atendimento_p, clock_timestamp(), cd_medico_resp_w, nm_usuario_p, 'N', ie_clinica_atend_w);
end if;

-- Rotina para movimentacao de paciente na integracao
CALL swisslog_movimentacao_pac(nr_atendimento_p, cd_setor_atendimento_p, cd_setor_atual_w, 1, nm_usuario_p);
CALL intpd_lote_movimentacao_pac(nr_atendimento_p, cd_setor_atendimento_p, cd_setor_atual_w, 1, nm_usuario_p);

ds_leito_w 		:= substr(cd_unidade_basica_p || ' - ' || cd_unidade_compl_p,1,10);
ds_leito_old_w 	:= substr(cd_unidade_basica_ww || ' - ' || cd_unidade_compl_ww,1,10);

CALL gerar_int_dankia_pck.dankia_gerar_movimentacao(nr_atendimento_p, cd_setor_atendimento_p, cd_setor_atual_w, ds_leito_w, ds_leito_old_w, cd_estabelecimento_w, nm_usuario_p);

SELECT CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'S' END
INTO STRICT ie_setor_supply_w
FROM far_setores_integracao
WHERE nr_seq_empresa_int = 82
AND cd_setor_atendimento = cd_setor_atendimento_p  LIMIT 1;

SELECT CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'S' END
INTO STRICT ie_setor_supply_old_w
FROM far_setores_integracao
WHERE nr_seq_empresa_int = 82
AND cd_setor_atendimento = cd_setor_atual_w  LIMIT 1;

if (ie_setor_supply_w = 'S' or ie_setor_supply_old_w = 'S') then
	CALL supplypoint_mov_pac(nr_atendimento_p, cd_setor_atendimento_p, cd_setor_atual_w, 1, nm_usuario_p);

	select	coalesce(max(ie_enviar_horarios_disp), 'N'),
			coalesce(max(ie_enviar_mat_estoque), 'N')
	into STRICT 	ie_enviar_horarios_disp_w,
			ie_enviar_mat_estoque_w
	from 	parametros_farmacia
	where 	cd_estabelecimento = cd_estabelecimento_w;

	open C06;
	loop
	fetch C06 into	
		nr_prescricao_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		begin
		open c11;
		loop
		fetch c11 into
			c11_list_w;
		EXIT WHEN NOT FOUND; /* apply on c11 */
			begin
			ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_p || obter_separador_bv ||
				'nr_prescricao=' || nr_prescricao_w || obter_separador_bv ||
				'nr_seq_lote=' || c11_list_w.nr_seq_lote_integracao || obter_separador_bv ||
				'cd_material_presc=' || c11_list_w.cd_material || obter_separador_bv ||
				'ie_aprazado=' || 'GPMH' || obter_separador_bv ||
				'ie_origem=' || 'GLAP' || obter_separador_bv ||
				'nr_seq_material=' || c11_list_w.nr_seq_material_hl7 || obter_separador_bv ||
				'ie_enviar_horarios_disp=' || ie_enviar_horarios_disp_w || obter_separador_bv ||
				'ie_enviar_mat_estoque=' || ie_enviar_mat_estoque_w || obter_separador_bv;
	
			if (c11_list_w.nr_seq_regra_local IS NOT NULL AND c11_list_w.nr_seq_regra_local::text <> '') then
				select	max(nr_seq_estrut_int)
				into STRICT	nr_seq_estrut_int_w
				from	regra_local_dispensacao
				where	nr_sequencia = c11_list_w.nr_seq_regra_local;
				
				if (nr_seq_estrut_int_w IS NOT NULL AND nr_seq_estrut_int_w::text <> '') then
					select	coalesce(max(ie_integracao_dispensario), 'N')
					into STRICT	ie_integracao_dispensario_w
					from	mat_estrutura
					where	nr_sequencia = nr_seq_estrut_int_w;
					
					if (ie_integracao_dispensario_w = 'S') then
						ie_setor_supply_w := 'S';
					elsif (ie_integracao_dispensario_w = 'A') then
						ie_setor_supply_w := 'N';
					end if;
				end if;
			end if;

			if (ie_setor_supply_w = 'S') then		
				CALL gravar_agend_integracao(434,ds_param_integ_hl7_w, cd_setor_atendimento_p);
			end if;
			end;
		end loop;
		close c11;
		end;
	end loop;
	close C06;
end if;

SELECT CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'S' END
INTO STRICT ie_setor_athena_w
FROM far_setores_integracao
WHERE nr_seq_empresa_int = 221
AND cd_setor_atendimento = cd_setor_atendimento_p  LIMIT 1;

SELECT CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'S' END
INTO STRICT ie_setor_athena_old_w
FROM far_setores_integracao
WHERE nr_seq_empresa_int = 221
AND cd_setor_atendimento = cd_setor_atual_w  LIMIT 1;

ie_risco_w := Obter_desc_escala_queda(cd_setor_atendimento_p, nr_atendimento_p,'R');

CALL pfcs_int_special_request('SR131'||nr_atendimento_p, 'SR131', 'Fall Risk', 'inactive', clock_timestamp(),
		cd_pessoa_fisica_w, nr_atendimento_p, wheb_usuario_pck.get_nm_usuario, 'N');
		
if (ie_risco_w IS NOT NULL AND ie_risco_w::text <> '') and (ie_risco_w <> 'N') then
	CALL pfcs_int_special_request('SR131'||nr_atendimento_p, 'SR131', 'Fall Risk', 'active', clock_timestamp(),
			cd_pessoa_fisica_w, nr_atendimento_p, wheb_usuario_pck.get_nm_usuario, 'N');			
end if;


if (ie_setor_athena_w = 'S' or ie_setor_athena_old_w = 'S') then	
	integracao_athena_disp_pck.movimentacao_paciente(nr_atendimento_p, cd_setor_atendimento_p, cd_setor_atual_w, 1, nm_usuario_p);
end if;

if (ie_passagem_setor_w = 'N' OR ie_passagem_setor_w = 'L') then
	if (cd_setor_atual_w <> cd_setor_atendimento_p) then
		CALL gerar_reconciliacao_paciente(nm_usuario_p, nr_atendimento_p, obter_perfil_ativo, 'T', 'N', null,'N');
	end if;	
end if;

CALL gerar_transferencia_pac_quimio(nr_atendimento_p => nr_atendimento_p,
	cd_setor_atendimento_p => cd_setor_atendimento_p,
	cd_unidade_basica_p => cd_unidade_basica_p,
    nm_usuario_p => nm_usuario_p);

CALL ATUALIZAR_EV_LINHA_CUIDADO('MP', 'SETOR_ATENDIMENTO', cd_setor_atendimento_p, cd_classif_setor_w, cd_pessoa_fisica_w, nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_transferencia_paciente (nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text, cd_tipo_acomodacao_p bigint, nr_acompanhantes_p bigint, nr_seq_motivo_transf_p bigint, ds_observacao_p text, nm_usuario_p text, dt_entrada_unidade_p timestamp, nr_seq_classif_esp_p bigint default null, cd_departamento_p atend_paciente_unidade.cd_departamento%type default null) FROM PUBLIC;

