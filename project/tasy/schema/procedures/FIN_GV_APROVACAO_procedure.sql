-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fin_gv_aprovacao ( nr_seq_pend_aprov_p bigint, ie_tipo_p text, nm_usuario_p text, ds_out_p INOUT text) AS $body$
DECLARE

 
/*	ie_tipo_p indica tipo de aprovação: 
	A = Aprovação de Adiantamento 
	D = Aprovação de Despesas	 
	AH = Aprovar Hospedagem 
	AT = Aprovar Transporte 
	AV = Aprovar viagem 
	AP = Aprovar relatório */
 
 
nr_seq_viagem_w			bigint;		
cd_pessoa_fisica_w 		varchar(10);
cd_pessoa_aprov_w 		varchar(10);
nm_usuario_destino_w		varchar(15);
nm_usuario_receb_w		varchar(15);
vl_adiantamento_w		double precision;
ds_usuario_receb_w		varchar(2000);
cd_estab_w			smallint;
vl_dia_w			double precision;
vl_beneficio_w			double precision;
vl_aprov_adia_w			double precision;
qt_dias_w			bigint;
qt_projeto_dest_w		bigint;

nr_reserva_trans_w		varchar(15);
nr_seq_meio_transp_w		bigint;
cd_empresa_reserva_transp_w	varchar(14);
cd_cgc_agencia_transp_w		varchar(14);
dt_saida_prev_transp_w		timestamp;
dt_retorno_prev_transp_w		timestamp;
vl_reserva_transp_w		double precision;
ds_cidade_origem_w		varchar(255);
ds_cidade_destino_w		varchar(255);
ds_aeroporto_ori_w		varchar(255);
ds_aeroporto_des_w		varchar(255);

cd_cgc_agencia_hotel_w		varchar(14);
nr_seq_hotel_w			bigint;
dt_entrada_hotel_w		timestamp;
dt_saida_hotel_w		timestamp;
vl_reserva_hotel_w		double precision;
vl_total_hotel_w		double precision;

ds_comunicado_email_w		varchar(4000);
ds_origem_w			varchar(255);
ds_destino_w			varchar(255);
nm_usuario_confir_w		varchar(15);

qt_comercial_diretoria_w	bigint;
qt_comercial_gerencia_w		bigint;
qt_comerical_usu_w		bigint;

ie_resp_custo_w			varchar(5);
ie_custo_nosso_w		varchar(1) := 'N';

ie_projeto_w			bigint;
ie_recebe_alimentacao_w		varchar(1);
ds_mensagem_fin_w		varchar(4000);

vl_pend_hosp_w			double precision;
vl_pend_transp_w		double precision;
nr_localizador_w		varchar(200);

c01 CURSOR FOR 
SELECT	nm_usuario_receb 
from	fin_regra_receb_ci_gv;

c02 CURSOR FOR 
SELECT	a.nr_voo, 
	b.nr_seq_meio_transp, 
	b.cd_empresa_reserva, 
	b.cd_cgc_agencia, 
	b.dt_saida_prev, 
	b.dt_retorno_prev, 
	b.vl_reserva, 
	substr(Obter_Desc_Loc(a.nr_seq_loc_origem),1,240), 
	substr(Obter_Desc_Loc(a.nr_seq_loc_destino),1,240), 
	substr(via_obter_desc_aeroporto(a.nr_seq_aeroporto_ori,'N'),1,80), 
	substr(via_obter_desc_aeroporto(a.nr_seq_aeroporto_des,'N'),1,80), 
	b.nr_localizador 
from	via_transporte a, 
	via_reserva b 
where	a.nr_seq_viagem = nr_seq_viagem_w 
and	b.nr_seq_itinerario = a.nr_sequencia 
and	(b.nr_seq_meio_transp IS NOT NULL AND b.nr_seq_meio_transp::text <> '');

c03 CURSOR FOR 
SELECT	a.cd_cgc_agencia, 
	a.nr_seq_hotel, 
	a.dt_entrada_hotel, 
	a.dt_saida_hotel, 
	a.vl_reserva, 
	coalesce(obter_valor_total_hotel(a.nr_sequencia),0) 
from	via_reserva a 
where	nr_seq_viagem = nr_seq_viagem_w 
and	(a.nr_seq_hotel IS NOT NULL AND a.nr_seq_hotel::text <> '');

c04 CURSOR FOR 
SELECT	distinct 
	ie_responsavel_custo 
from	via_reserva 
where	nr_seq_viagem = nr_seq_viagem_w;


BEGIN 
select	nr_seq_viagem, cd_pessoa_fisica, cd_pessoa_aprov, nm_usuario, vl_pend_hosp, vl_pend_transp 
into STRICT	nr_seq_viagem_w, cd_pessoa_fisica_w, cd_pessoa_aprov_w, nm_usuario_confir_w, vl_pend_hosp_w, vl_pend_transp_w 
from	fin_gv_pend_aprov 
where	nr_sequencia = nr_seq_pend_aprov_p;
 
select	coalesce(max(cd_estabelecimento),0), 
	coalesce(max(ie_recebe_alimentacao),'N') 
into STRICT	cd_estab_w, 
	ie_recebe_alimentacao_w 
from	via_viagem a 
where	a.nr_sequencia = nr_seq_viagem_w;
 
if (ie_tipo_p = 'A') then -- Aprovação de Adiantamento 
	begin 
	update 	fin_gv_pend_aprov 
	set	nm_usuario = nm_usuario_p, 
		dt_atualizacao = clock_timestamp(), 
		dt_aprov_adia = clock_timestamp(), 
		vl_aprov_adia = coalesce(vl_aprov_adia,0) + vl_pend_adia, 
		vl_pend_adia = 0 
	where	nr_sequencia = nr_seq_pend_aprov_p;
 
	update 	via_adiantamento 
	set	dt_aprovacao = clock_timestamp(), 
		nm_usuario_aprov = nm_usuario_p, 
		ie_aprovado = 'S' 
	where	nr_seq_viagem = nr_seq_viagem_w;
	 
	select	max(a.nm_usuario) 
	into STRICT	nm_usuario_destino_w 
	from	usuario a 
	where	a.cd_pessoa_fisica = cd_pessoa_fisica_w;
	end;
elsif (ie_tipo_p = 'AH') then -- Aprovar Hospedagem 
	begin 
	update 	fin_gv_pend_aprov 
	set	nm_usuario	= nm_usuario_p, 
		dt_atualizacao	= clock_timestamp(), 
		dt_aprov_hosp	= clock_timestamp(), 
		dt_reprov_hosp	 = NULL 
	where	nr_sequencia	= nr_seq_pend_aprov_p;
	end;
elsif (ie_tipo_p = 'AT') then -- Aprovar Transporte 
	begin 
	update 	fin_gv_pend_aprov 
	set	nm_usuario		= nm_usuario_p, 
		dt_atualizacao		= clock_timestamp(), 
		dt_aprov_transp		= clock_timestamp(), 
		dt_reprov_transp	 = NULL 
	where	nr_sequencia		= nr_seq_pend_aprov_p;
	end;
elsif (ie_tipo_p = 'AV') then -- Aprovar viagem 
	begin 
	select	max(a.nm_usuario) 
	into STRICT	nm_usuario_destino_w 
	from	usuario a 
	where	a.cd_pessoa_fisica = cd_pessoa_fisica_w;
	 
	update 	fin_gv_pend_aprov 
	set	nm_usuario	= nm_usuario_p, 
		dt_atualizacao	= clock_timestamp(), 
		dt_aprov_gv	= clock_timestamp(), 
		dt_reprov_gv	 = NULL, 
		ie_situacao_pend = 'AG', 
		vl_hospedagem = (coalesce(vl_hospedagem,0) + coalesce(vl_pend_hosp_w,0)),		 
		vl_transporte = (coalesce(vl_transporte,0) + coalesce(vl_pend_transp_w,0)), 
		vl_pend_hosp = 0, 
		vl_pend_transp = 0 
	where	nr_sequencia	= nr_seq_pend_aprov_p;
 
	update 	via_viagem -- autorizar GV 
	set	nm_usuario = nm_usuario_p, 
		dt_atualizacao = clock_timestamp(), 
		nm_usuario_autor = nm_usuario_p, 
		dt_autorizacao = clock_timestamp(), 
		ie_etapa_viagem = 2 
	where	nr_sequencia = nr_seq_viagem_w;
	 
	select	max(a.nm_usuario_confir) 
	into STRICT	nm_usuario_confir_w 
	from	via_viagem a 
	where	a.nr_sequencia = nr_seq_viagem_w;
	 
	-- Enviar CI solicitante da viagem (Escritório caso for projeto/ ou viajante caso comercial) 
	select 	coalesce(max(ds_email), '') email_origem 
	into STRICT 	ds_origem_w 
	from 	usuario 
	where 	nm_usuario = nm_usuario_p;
 
	select 	coalesce(max(ds_email), '') email_destino 
	into STRICT 	ds_destino_w 
	from 	usuario 
	where 	nm_usuario = nm_usuario_confir_w;
 
	ds_comunicado_email_w := '';
	ds_comunicado_email_w := 'Viagem aprovada!'||chr(13)||chr(10)||chr(13)||chr(10)|| 
				 'Sequência: ' || nr_seq_viagem_w ||chr(13)||chr(10)|| 
				 'Viajante: ' || substr(obter_nome_usuario(nm_usuario_destino_w),1,80) ||chr(13)||chr(10)|| 
				 'Aprovado por: ' || obter_nome_usuario(nm_usuario_p) ||chr(13)||chr(10)|| 
				 'Data: '||to_char(clock_timestamp(),'dd/mm/yyyy hh24:mi:ss')||chr(13)||chr(10)||chr(13)||chr(10);
	-- Transporte 
	open C02;
	loop 
	fetch C02 into	 
		nr_reserva_trans_w, 
		nr_seq_meio_transp_w, 
		cd_empresa_reserva_transp_w, 
		cd_cgc_agencia_transp_w, 
		dt_saida_prev_transp_w, 
		dt_retorno_prev_transp_w, 
		vl_reserva_transp_w, 
		ds_cidade_origem_w, 
		ds_cidade_destino_w, 
		ds_aeroporto_ori_w, 
		ds_aeroporto_des_w, 
		nr_localizador_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		ds_comunicado_email_w := ds_comunicado_email_w || 'Localizador: ' || nr_localizador_w ||chr(13)||chr(10)|| 
					'Nr. voo: ' || nr_reserva_trans_w || chr(13) || chr(10) || 
					'Meio de transporte: ' || Substr(Obter_Desc_Meio_Transp(nr_seq_meio_transp_w),1,80) || chr(13)||chr(10)|| 
					'Cidade origem: '|| ds_cidade_origem_w ||chr(13)||chr(10)|| 
					'Aeroporto de Origem: '|| ds_aeroporto_ori_w ||chr(13)||chr(10)|| 
					'Cidade destino: '|| ds_cidade_destino_w || chr(13)||chr(10)|| 
					'Aeroporto de Destino: '|| ds_aeroporto_des_w || chr(13)||chr(10)|| 
					'Data saida: ' || to_char(dt_saida_prev_transp_w,'dd/mm/yyyy hh24:mi:ss') ||chr(13)||chr(10)|| 
					'Data chegada: ' || to_char(dt_retorno_prev_transp_w,'dd/mm/yyyy hh24:mi:ss') ||chr(13)||chr(10)|| 
					'Valor: '||vl_reserva_transp_w||chr(13)||chr(10)||chr(13)||chr(10);
		end;
	end loop;
	close C02;
	-- Hotel 
	open C03;
	loop 
	fetch C03 into	 
		cd_cgc_agencia_hotel_w, 
		nr_seq_hotel_w, 
		dt_entrada_hotel_w, 
		dt_saida_hotel_w, 
		vl_reserva_hotel_w, 
		vl_total_hotel_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		ds_comunicado_email_w := ds_comunicado_email_w ||'Hotel: '|| substr(obter_nome_hotel(nr_seq_hotel_w),1,100) ||chr(13)||chr(10)|| 
					'Dias de hospedagem: ' || obter_dias_entre_datas(dt_entrada_hotel_w,dt_saida_hotel_w)||chr(13)||chr(10)|| 
					'Data entrada: '|| to_char(dt_entrada_hotel_w,'dd/mm/yyyy hh24:mi:ss') ||chr(13)||chr(10)|| 
					'Data Saida: '|| to_char(dt_saida_hotel_w,'dd/mm/yyyy hh24:mi:ss') ||chr(13)||chr(10)|| 
					'Valor da diaria: '||vl_reserva_hotel_w||chr(13)||chr(10)||chr(13)||chr(10);
		end;
	end loop;
	close C03;
	ds_comunicado_email_w := ds_comunicado_email_w || 'Atenciosamente'||chr(13)||chr(10)||chr(13)||chr(10)||'Philips Clinical Informatics';
	 
	begin 
		CALL enviar_email('Aprovação da GV: '|| nr_seq_viagem_w , ds_comunicado_email_w, ds_origem_w, ds_destino_w, nm_usuario_p, 'M');
	exception 
	when others then 
		ds_out_p := Obter_desc_expressao(766625, 'Aprovação realizada com sucesso, porém não foi possível enviar email.') ||chr(13)|| chr(10)|| chr(13)|| chr(10)|| 
					Obter_desc_expressao(716501, 'Seq viagem') || ': ' || nr_seq_viagem_w ||chr(13)||chr(10)|| 
					Obter_desc_expressao(287625, 'Destinatário') || ': ' ||chr(13)|| chr(10);
					if (nm_usuario_confir_w IS NOT NULL AND nm_usuario_confir_w::text <> '') then 
						ds_out_p := ds_out_p || obter_nome_usuario(nm_usuario_confir_w) ||chr(13)|| chr(10);
					end if;					
					ds_out_p := ds_out_p || Obter_desc_expressao(289121, 'Email') || ': ' || substr(ds_destino_w, 1, 255);
										 
		ds_out_p := substr(ds_out_p, 1, 255);		
	end;
	 
	-- Enviar CI Financeiro 
 
	--Enviar somente se não houver projeto ou se projeto possuir contrato relógio 
	select 	coalesce(max(a.nr_seq_forma_cont),1) 
	into STRICT	ie_projeto_w 
	FROM  	via_destino b, 
		proj_projeto a 
	WHERE 	a.nr_sequencia = b.nr_seq_proj 
	AND	b.nr_seq_viagem = nr_seq_viagem_w;
 
	select 	count(*) 
	into STRICT	qt_projeto_dest_w 
	FROM  	via_destino b, 
		proj_projeto a 
	WHERE	(b.nr_seq_proj IS NOT NULL AND b.nr_seq_proj::text <> '') 
	AND	b.nr_seq_viagem = nr_seq_viagem_w;
 
	select	coalesce(max(a.vl_aprov_adia),0) 
		into STRICT	vl_adiantamento_w 
		from	fin_gv_pend_aprov a 
		where	a.nr_sequencia = nr_seq_pend_aprov_p;
	 
	if 	((vl_adiantamento_w > 0) or (ie_recebe_alimentacao_w = 'S')) then 
		begin 
		 
		ds_usuario_receb_w := '';
		open C01;
		loop 
		fetch C01 into	 
			nm_usuario_receb_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			ds_usuario_receb_w := ds_usuario_receb_w || nm_usuario_receb_w || ',';
			end;
		end loop;
		ds_usuario_receb_w := 'wgbuttendorf,'||ds_usuario_receb_w || nm_usuario_destino_w;
		close C01;
 
		select	coalesce(max(a.vl_dia),0), 
			coalesce(max(a.vl_beneficio_ref),0) 
		into STRICT	vl_dia_w, 
			vl_beneficio_w 
		from	via_regra_alimentacao a 
		where	a.cd_estabelecimento = cd_estab_w 
		and	a.ie_situacao = 'A';
 
		select	coalesce(obter_dias_entre_datas(a.dt_saida_prev,a.dt_retorno_prev),1) + 1 
		into STRICT	qt_dias_w 
		from	via_viagem a 
		where	a.nr_sequencia = nr_seq_viagem_w;
		 
		select	max(a.nm_usuario_confir) 
		into STRICT	nm_usuario_confir_w 
		from	via_viagem a 
		where	a.nr_sequencia = nr_seq_viagem_w;
 
		vl_dia_w := ((vl_dia_w - vl_beneficio_w) * qt_dias_w);
		 
		ds_mensagem_fin_w := 	'Pessoa Solicitante: ' || substr(obter_nome_usuario(nm_usuario_destino_w),1,80) || chr(13) || chr(10) || 
					'CPF: ' || substr(obter_dados_pf(cd_pessoa_fisica_w,'CPF'),1,30) || chr(13) || chr(10) || 
					'Banco/Agência/Conta: ' || substr(obter_dados_pf(cd_pessoa_fisica_w,'BAC'),1,30) || chr(13) || chr(10) || 
					'Confirmada por: ' || obter_nome_usuario(nm_usuario_confir_w) || chr(13) || chr(10) || chr(13) || chr(10) || 
					'Aprovador por: ' || obter_nome_usuario(nm_usuario_p) || chr(13) || chr(10) || chr(13) || chr(10) || chr(13) || chr(10);
					 
		if (vl_adiantamento_w > 0) then 
			ds_mensagem_fin_w := ds_mensagem_fin_w || 'Valor de adiantamento: R$ ' || vl_adiantamento_w || chr(13) || chr(10);
		end if;
		 
		if (ie_recebe_alimentacao_w = 'S') then 
			ds_mensagem_fin_w := ds_mensagem_fin_w || 'Valor calculado da alimentação: R$ ' || vl_dia_w;
		end if;
		 
		update	fin_gv_pend_aprov 
		set	vl_alimentacao = vl_dia_w 
		where	nr_sequencia = nr_seq_pend_aprov_p;
 
		CALL gerar_comunic_padrao(	clock_timestamp(), 
					'Aprovação da GV: '|| nr_seq_viagem_w, 
					ds_mensagem_fin_w, 
					nm_usuario_p, 'N', ds_usuario_receb_w, 'S', null, '', '', '', clock_timestamp(), '', '');
 
		select 	coalesce(max(ds_email), '') email_origem 
		into STRICT 	ds_origem_w 
		from 	usuario 
		where 	nm_usuario = nm_usuario_destino_w;
 
		select 	coalesce(max(ds_email), '') email_destino 
		into STRICT 	ds_destino_w 
		from 	usuario 
		where 	nm_usuario = nm_usuario_p;
 
		begin 
			CALL enviar_email(	'Aprovação da GV: '|| nr_seq_viagem_w, 
				ds_mensagem_fin_w, 
				ds_origem_w, 
				ds_destino_w, 
				nm_usuario_p, 
				'M');			
		end;
		exception 
		when others then 
			ds_out_p := Obter_desc_expressao(766625, 'Aprovação realizada com sucesso, porém não foi possível enviar email.') ||chr(13)|| chr(10)|| chr(13)|| chr(10)|| 
					Obter_desc_expressao(716501, 'Seq viagem') || ': ' || nr_seq_viagem_w ||chr(13)||chr(10)|| 
					Obter_desc_expressao(287625, 'Destinatário') || ': ' ||chr(13)|| chr(10);
					if (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
						ds_out_p := ds_out_p || obter_nome_usuario(nm_usuario_p) ||chr(13)|| chr(10);
					end if;					
					ds_out_p := ds_out_p || Obter_desc_expressao(289121, 'Email') || ': ' || substr(ds_destino_w, 1, 255);
										 
			ds_out_p := substr(ds_out_p, 1, 255);
		end;
		 
	end if;
 
	ds_comunicado_email_w := '';
	 
	select	count(*) 
	into STRICT	qt_comercial_diretoria_w 
	from	departamento_philips a 
	where	a.cd_pessoa_fisica = cd_pessoa_fisica_w 
	and	exists (	SELECT	1 
			from	depto_gerencia_philips b, 
				gerencia_wheb c 
			where	a.nr_sequencia = b.nr_seq_departamento 
			and	c.nr_sequencia = b.nr_seq_gerencia 
			and (c.ie_area_gerencia = 'COM'));
 
	select	count(*) 
	into STRICT	qt_comercial_gerencia_w 
	from	gerencia_wheb a 
	where	a.cd_responsavel = cd_pessoa_fisica_w 
	and (a.ie_area_gerencia = 'COM');
 
	select	count(*) 
	into STRICT	qt_comerical_usu_w 
	from	gerencia_wheb_grupo_usu a 
	where	a.nm_usuario_grupo = nm_usuario_destino_w 
	and	exists (	SELECT	1 
			from	gerencia_wheb_grupo b, 
				gerencia_wheb c 
			where	b.nr_sequencia = a.nr_seq_grupo 
			and	c.nr_sequencia = b.nr_seq_gerencia 
			and (c.ie_area_gerencia = 'COM'));
 
	if (qt_comercial_diretoria_w > 0) or (qt_comercial_gerencia_w > 0) or (qt_comerical_usu_w > 0) then 
		begin 
		ds_comunicado_email_w := 'Viagem aprovada!'||chr(13)||chr(10)||chr(13)||chr(10)|| 
					 'Sequência: ' || nr_seq_viagem_w ||chr(13)||chr(10)|| 
					 'Viajante: ' || substr(obter_nome_usuario(nm_usuario_destino_w),1,80) ||chr(13)||chr(10)|| 
					 'Aprovado por: ' || obter_nome_usuario(nm_usuario_p) ||chr(13)||chr(10)|| 
					 'Data: '||to_char(clock_timestamp(),'dd/mm/yyyy hh24:mi:ss')||chr(13)||chr(10)||chr(13)||chr(10);
		-- Transporte 
		open C02;
		loop 
		fetch C02 into	 
			nr_reserva_trans_w, 
			nr_seq_meio_transp_w, 
			cd_empresa_reserva_transp_w, 
			cd_cgc_agencia_transp_w, 
			dt_saida_prev_transp_w, 
			dt_retorno_prev_transp_w, 
			vl_reserva_transp_w, 
			ds_cidade_origem_w, 
			ds_cidade_destino_w, 
			ds_aeroporto_ori_w, 
			ds_aeroporto_des_w, 
			nr_localizador_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			ds_comunicado_email_w := ds_comunicado_email_w || 'Localizador: ' || nr_localizador_w ||chr(13)||chr(10)|| 
						'Nr. voo: ' || nr_reserva_trans_w || chr(13) || chr(10) || 
						'Meio de transporte: ' || Substr(Obter_Desc_Meio_Transp(nr_seq_meio_transp_w),1,80) || chr(13)||chr(10)|| 
						'Cidade origem: '|| ds_cidade_origem_w ||chr(13)||chr(10)|| 
						'Aeroporto de Origem: '|| ds_aeroporto_ori_w ||chr(13)||chr(10)|| 
						'Cidade destino: '|| ds_cidade_destino_w || chr(13)||chr(10)|| 
						'Aeroporto de Destino: '|| ds_aeroporto_des_w || chr(13)||chr(10)|| 
						'Data saida: ' || to_char(dt_saida_prev_transp_w,'dd/mm/yyyy hh24:mi:ss') ||chr(13)||chr(10)|| 
						'Data chegada: ' || to_char(dt_retorno_prev_transp_w,'dd/mm/yyyy hh24:mi:ss') ||chr(13)||chr(10)|| 
						'Valor: '||vl_reserva_transp_w||chr(13)||chr(10)||chr(13)||chr(10);
			end;
		end loop;
		close C02;
		-- Hotel 
		open C03;
		loop 
		fetch C03 into	 
			cd_cgc_agencia_hotel_w, 
			nr_seq_hotel_w, 
			dt_entrada_hotel_w, 
			dt_saida_hotel_w, 
			vl_reserva_hotel_w, 
			vl_total_hotel_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin 
			ds_comunicado_email_w := ds_comunicado_email_w ||'Hotel: '|| substr(obter_nome_hotel(nr_seq_hotel_w),1,100) ||chr(13)||chr(10)|| 
						'Dias de hospedagem: ' || obter_dias_entre_datas(dt_entrada_hotel_w,dt_saida_hotel_w)||chr(13)||chr(10)|| 
						'Data entrada: '|| to_char(dt_entrada_hotel_w,'dd/mm/yyyy hh24:mi:ss') ||chr(13)||chr(10)|| 
						'Data Saida: '|| to_char(dt_saida_hotel_w,'dd/mm/yyyy hh24:mi:ss') ||chr(13)||chr(10)|| 
						'Valor da diaria: '||vl_reserva_hotel_w||chr(13)||chr(10)||chr(13)||chr(10);
			end;
		end loop;
		close C03;
		ds_comunicado_email_w := ds_comunicado_email_w || 'Atenciosamente'||chr(13)||chr(10)||chr(13)||chr(10)||'Philips Clinical Informatics';
		end;
		 
		begin 
			CALL enviar_email('Aprovação de GV',ds_comunicado_email_w,nm_usuario_p,'esplendor@esplendorviagens.com.br',nm_usuario_p,'M');
		exception 
		when others then 
			ds_out_p := Obter_desc_expressao(766625, 'Aprovação realizada com sucesso, porém não foi possível enviar email.') ||chr(13)|| chr(10)|| chr(13)|| chr(10)|| 
					Obter_desc_expressao(716501, 'Seq viagem') || ': ' || nr_seq_viagem_w ||chr(13)||chr(10)||					 
					Obter_desc_expressao(289121, 'Email') || ': ' || 'esplendor@esplendorviagens.com.br';
										 
			ds_out_p := substr(ds_out_p, 1, 255);
		end;	
		 
	end if;
	end;
elsif (ie_tipo_p = 'AR') then -- Aprovar relatório 
	begin 
	update 	fin_gv_pend_aprov 
	set	nm_usuario		= nm_usuario_p, 
		dt_atualizacao		= clock_timestamp(), 
		dt_aprov_relatorio	= clock_timestamp(), 
		dt_reprov_relatorio	 = NULL, 
		ie_situacao_pend	= 'AR' 
	where	nr_sequencia		= nr_seq_pend_aprov_p;
 
	update 	via_viagem -- aprovar relatorio 
	set	nm_usuario = nm_usuario_p, 
		dt_atualizacao = clock_timestamp(), 
		ie_etapa_viagem = 5 
	where	nr_sequencia = nr_seq_viagem_w;
 
	update	via_relat_desp 
	set	dt_aprovacao = clock_timestamp(), 
		nm_usuario_aprov = nm_usuario_p 
	where	nr_seq_viagem = nr_seq_viagem_w;
	end;
elsif (ie_tipo_p = 'D') then -- Aprovação de Despesas 
	begin 
	update 	fin_gv_pend_aprov 
	set	nm_usuario = nm_usuario_p, 
		dt_atualizacao = clock_timestamp(), 
		dt_aprov_desp = clock_timestamp(), 
		ie_situacao_pend = ie_situacao_pend 
	where	nr_sequencia = nr_seq_pend_aprov_p;
 
	update 	via_viagem 
	set	nm_usuario = nm_usuario_p, 
		dt_atualizacao = clock_timestamp(), 
		ie_etapa_viagem = 2 
	where	nr_sequencia = nr_seq_viagem_w;
 
	select	max(a.vl_adiantamento) 
	into STRICT	vl_adiantamento_w 
	from	via_adiantamento a 
	where	a.nr_sequencia = (	SELECT	max(x.nr_sequencia) 
					from	via_adiantamento x, 
						via_viagem b 
					where	b.nr_sequencia = a.nr_seq_viagem 
					and	b.nr_sequencia = nr_seq_pend_aprov_p);
 
	open C01;
	loop 
	fetch C01 into	 
		nm_usuario_receb_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		CALL gerar_comunic_padrao(	clock_timestamp(), 
				'Adiantamento da GV: '|| nr_seq_viagem_w || ' aprovado.', 
				'Pessoa Solicitante: ' || substr(obter_nome_usuario(nm_usuario_destino_w),1,80) || chr(13) || chr(10) || 
				'CPF: ' || substr(obter_dados_pf(cd_pessoa_fisica_w,'CPF'),1,30) || chr(13) || chr(10) || 
				'Banco/Agência/Conta: ' || substr(obter_dados_pf(cd_pessoa_fisica_w,'BAC'),1,30) || chr(13) || chr(10) || 
				'Aprovador por: ' || obter_nome_usuario(nm_usuario_p) || chr(13) || chr(10) || chr(13) || chr(10) || chr(13) || chr(10) || 
				'Valor de adiantamento:			R$ ' || vl_adiantamento_w || chr(13) || chr(10) || 
				'Valor calculado da alimentação:	R$ ' || vl_dia_w, 
				nm_usuario_p, 'N', nm_usuario_receb_w, 'S', null, '', '', '', clock_timestamp(), '', '');
		end;
	end loop;
	close C01;
 
	CALL gerar_comunic_padrao(	clock_timestamp(), 
				'Aprovação da GV: '|| nr_seq_viagem_w || ' aprovado.', 
				'Aprovador por: ' || obter_nome_usuario(nm_usuario_p), 
				nm_usuario_p, 'N', nm_usuario_destino_w, 'S', null, '', '', '', clock_timestamp(), '', '');
	end;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fin_gv_aprovacao ( nr_seq_pend_aprov_p bigint, ie_tipo_p text, nm_usuario_p text, ds_out_p INOUT text) FROM PUBLIC;

