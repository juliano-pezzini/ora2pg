-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eme_titulo (nr_seq_nota_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_fatura_p bigint, ie_busca_tributo_nf_p text default 'N') AS $body$
DECLARE


cd_estab_financeiro_w		bigint;
nr_seq_titulo_w			bigint;
vl_fatura_w			double precision;
cd_moeda_padrao_w		integer;
nr_seq_nota_fiscal_w		bigint;
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
cd_tipo_taxa_juro_w		bigint;
cd_tipo_taxa_multa_w		bigint;
pr_juros_padrao_w			double precision;
pr_multa_padrao_w			double precision;
qt_dia_vencimento_w		smallint;
nr_seq_conta_banco_w		bigint;
cd_banco_w			banco_estabelecimento.cd_banco%type;
cd_agencia_bancaria_w		varchar(8);
cd_contrato_w			varchar(20);
dt_emissao_w			timestamp;
dt_vencimento_w			timestamp;
dt_pagamento_previsto_w		timestamp;
cd_convenio_w			bigint;
nr_seq_conta_banco_w2		bigint;
nr_seq_carteira_cobr_w		bigint;
tx_multa_w			double precision;
tx_juros_w			double precision;
ie_gera_carteira_cobranca_w		varchar(1);
nr_nota_fiscal_w			varchar(255);
ie_gerar_imposto_w			varchar(1);
vl_trib_titulo_w			double precision;
ie_incidi_tributo_titulo_w		varchar(1);
nr_seq_classe_w			classe_titulo_receb_regra.nr_seq_classe%type;
cd_tipo_recebimento_w		integer;
ie_origem_titulo_w			varchar(10);

cd_portador_w			bigint;
cd_tipo_portador_w			bigint;
nr_seq_trans_fin_nf_w		bigint;
nr_seq_trans_fin_baixa_w		bigint;
nr_seq_tf_baixa_classe_w		classe_titulo_receber.nr_seq_trans_fin_baixa%type;
nr_seq_tf_contab_classe_w		classe_titulo_receber.nr_seq_trans_fin_contab%type;


BEGIN

ie_gera_carteira_cobranca_w := obter_valor_param_usuario(801, 106, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);
ie_incidi_tributo_titulo_w  := obter_valor_param_usuario(929, 41, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);
ie_origem_titulo_w			:= obter_valor_param_usuario(929, 43, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);


begin
select	a.nr_seq_nota_fiscal,
	a.vl_fatura,
	c.cd_cgc,
	c.cd_pessoa_fisica,
	c.qt_dia_vencimento,
	c.cd_contrato,
	a.dt_emissao,
	c.cd_convenio,
	coalesce(a.dt_vencimento,a.dt_emissao),
	c.cd_tipo_recebimento
into STRICT	nr_seq_nota_fiscal_w,
	vl_fatura_w,
	cd_cgc_w,
	cd_pessoa_fisica_w,
	qt_dia_vencimento_w,
	cd_contrato_w,
	dt_emissao_w,
	cd_convenio_w,
	dt_vencimento_w,
	cd_tipo_recebimento_w
from	eme_contrato c,
	eme_faturamento a
where	a.nr_sequencia = nr_seq_fatura_p
and	c.nr_sequencia = a.nr_seq_contrato;
exception
	when no_data_found then
		/*r.aise_application_error(-20011, 'Falta informacoes no cadastro do contrato (' || chr(10) ||
					' Contrato	' || cd_contrato_w);*/
		CALL wheb_mensagem_pck.exibir_mensagem_abort(267344,'cd_contrato_w='||cd_contrato_w);			
end;

if (coalesce(ie_incidi_tributo_titulo_w,'N') = 'S') then

	select 	max(vl_total_nota)
	into STRICT 	vl_fatura_w
	from 	nota_fiscal
	where 	nr_sequencia  = nr_seq_nota_p;

end if;

begin
select	cd_moeda_padrao,
	cd_tipo_taxa_juro,
	cd_tipo_taxa_multa,
	pr_juro_padrao,
	pr_multa_padrao,
	nr_seq_conta_banco
into STRICT	cd_moeda_padrao_w,
	cd_tipo_taxa_juro_w,
	cd_tipo_taxa_multa_w,
	pr_juros_padrao_w,
	pr_multa_padrao_w,
	nr_seq_conta_banco_w
from	parametro_contas_receber
where	cd_estabelecimento  = cd_estabelecimento_p;
exception
	when no_data_found then
		/*r.aise_application_error(-20011, 'Falta informacoes no parametro contas receber ' || chr(10) ||
						'Moeda	' 	|| cd_moeda_padrao_w || chr(10) ||
						'Tp Baixa	' 	|| cd_tipo_taxa_juro_w || chr(10) ||
						'Tp taxa multa '	|| cd_tipo_taxa_multa_w || chr(10) ||
						'Pr Juros	'	|| pr_juros_padrao_w || chr(10) ||
						'Pr Multa	' 	|| pr_multa_padrao_w || chr(10) ||
						'Conta Banco '	|| nr_seq_conta_banco_w);*/
		CALL wheb_mensagem_pck.exibir_mensagem_abort(267345,	'cd_moeda_padrao_w=' || cd_moeda_padrao_w || ';' ||
								'cd_tipo_taxa_juro_w=' || cd_tipo_taxa_juro_w || ';' ||
								'cd_tipo_taxa_multa_w=' || cd_tipo_taxa_multa_w || ';' ||
								'pr_juros_padrao_w=' || pr_juros_padrao_w || ';' ||
								'pr_multa_padrao_w=' || pr_multa_padrao_w || ';' ||
								'nr_seq_conta_banco_w=' || nr_seq_conta_banco_w);				
end;

begin
select	cd_banco,
	cd_agencia_bancaria
into STRICT	cd_banco_w,
	cd_agencia_bancaria_w
from	banco_estabelecimento
where	nr_sequencia = nr_seq_conta_banco_w;
exception
	when no_data_found then
		/*r.aise_application_error(-20011, 'Falta informacoes no cadastro do Banco ' || chr(10) ||
						'Banco	' || cd_banco_w || chr(10) ||
						'Agencia	' || cd_agencia_bancaria_w);*/
		CALL wheb_mensagem_pck.exibir_mensagem_abort(267348,	'cd_banco_w=' || cd_banco_w || ';' ||
								'cd_agencia_bancaria_w=' || cd_agencia_bancaria_w);				
end;

select	coalesce(cd_estab_financeiro, cd_estabelecimento)
into STRICT	cd_estab_financeiro_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_p;

select 	coalesce(max(ie_gerar_imposto_tit_rec),'N')
into STRICT 	ie_gerar_imposto_w
from 	parametro_contas_receber
where	cd_estabelecimento  = cd_estabelecimento_p;

select	max(nr_nota_fiscal)
into STRICT	nr_nota_fiscal_w
from	nota_fiscal
where	nr_sequencia	= nr_seq_nota_p;

dt_pagamento_previsto_w	:= dt_vencimento_w;
if (dt_pagamento_previsto_w < PKG_DATE_UTILS.start_of(clock_timestamp(),'dd',0)) then
	dt_pagamento_previsto_w := PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'DD',0),1,0);
end if;

if (ie_gera_carteira_cobranca_w = 'S') then
	SELECT * FROM obter_carteira_cobranca(cd_estabelecimento_p, cd_convenio_w, vl_fatura_w, dt_emissao_w, nr_seq_conta_banco_w2, nr_seq_carteira_cobr_w, tx_juros_w, tx_multa_w) INTO STRICT nr_seq_conta_banco_w2, nr_seq_carteira_cobr_w, tx_juros_w, tx_multa_w;
end if;

SELECT * FROM obter_portador_pf_pj(cd_estabelecimento_p, cd_pessoa_fisica_w, cd_cgc_w, cd_portador_w, cd_tipo_portador_w) INTO STRICT cd_portador_w, cd_tipo_portador_w;

select	coalesce(max(a.nr_seq_trans_tit_prot),0)
into STRICT	nr_seq_trans_fin_nf_w
from	convenio_estabelecimento a
where	a.cd_convenio		= cd_convenio_w
and	a.cd_estabelecimento	= cd_estabelecimento_p;

if (coalesce(nr_seq_trans_fin_nf_w,0) = 0) then
	select	max(nr_seq_trans_fin_nf)
	into STRICT	nr_seq_trans_fin_nf_w
	from	parametro_contas_receber
	where	cd_estabelecimento = cd_estabelecimento_p;
end if;

select	max(nr_seq_trans_fin_baixa)
into STRICT	nr_seq_trans_fin_baixa_w
from	parametro_contas_receber
where	cd_estabelecimento = cd_estabelecimento_p;

if (nr_seq_nota_fiscal_w <> 0) then
	begin
	select	nextval('titulo_seq')
	into STRICT	nr_seq_titulo_w
	;
	
	begin
	
	insert	into titulo_receber(
		nr_titulo,
		nr_documento,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		dt_emissao,
		dt_vencimento,
		dt_pagamento_previsto,
		vl_titulo,
		vl_saldo_titulo,
		vl_saldo_juros,
		vl_saldo_multa,
		cd_moeda,
		cd_portador,
		cd_tipo_portador,
		tx_juros,
		tx_multa,
		cd_tipo_taxa_juro,
		cd_tipo_taxa_multa,
		tx_desc_antecipacao,
		ie_situacao,
		ie_tipo_emissao_titulo,
		ie_origem_titulo,
		ie_tipo_titulo,
		ie_tipo_inclusao,
		cd_cgc,
		cd_pessoa_fisica,
		nr_nota_fiscal,
		nr_seq_conta_banco,
		cd_banco,
		cd_agencia_bancaria,
		--nr_nosso_numero,
		ds_observacao_titulo,
		nr_seq_nf_saida,
		cd_estab_financeiro,
		nr_seq_trans_fin_contab,
		nr_seq_trans_fin_baixa,		
		nm_usuario_orig,
		dt_inclusao,
		nr_seq_carteira_cobr,
		nr_seq_eme_fatura,
		cd_tipo_recebimento)
		
	values (	nr_seq_titulo_w,
		nr_seq_fatura_p,
		cd_estabelecimento_p,
		clock_timestamp(),
		nm_usuario_p,
		dt_emissao_w,
		dt_vencimento_w,
		dt_pagamento_previsto_w,
		vl_fatura_w,
		vl_fatura_w,
		0,
		0,
		cd_moeda_padrao_w,
		coalesce(cd_portador_w, 0),
		coalesce(cd_tipo_portador_w, 0),
		pr_juros_padrao_w,
		pr_multa_padrao_w,
		cd_tipo_taxa_juro_w,
		cd_tipo_taxa_multa_w,
		0,		--tx_desc_antecipacao
		'1',	--ie_situacao
		2,		--ie_tipo_emissao_titulo
		ie_origem_titulo_w,	--ie_origem_titulo
		'1',	--ie_tipo_titulo
		'2',	--ie_tipo_inclusao
		cd_cgc_w,
		cd_pessoa_fisica_w,
		nr_nota_fiscal_w,
		nr_seq_conta_banco_w,
		cd_banco_w,
		cd_agencia_bancaria_w,
		--82 || retira_caracter_final(to_char(nr_seq_titulo_w, '00000000'),''),
		wheb_mensagem_pck.get_texto(303993,'CD_CONTRATO='||cd_contrato_w),
		nr_seq_nota_p,
		cd_estab_financeiro_w,
		coalesce(nr_seq_tf_contab_classe_w, nr_seq_trans_fin_nf_w),
		coalesce(nr_seq_tf_baixa_classe_w, nr_seq_trans_fin_baixa_w),
		nm_usuario_p,
		clock_timestamp(),
		nr_seq_carteira_cobr_w,
		nr_seq_fatura_p,
		cd_tipo_recebimento_w);
		
--	exception

	--	when others then

		/*r.aise_application_error(-20011,'Erro ao gerar titulo' || ' Contrato = ' || cd_contrato_w || chr(10) 
						|| SQLERRM(sqlcode));*/

		--wheb_mensagem_pck.exibir_mensagem_abort(267349,	'cd_contrato_w=' || cd_contrato_w);	
						
	end;
	
	/*Inicio - AAMFIRMO OS 940613 - Obter classe para o titulo conforme regra.*/

	begin
	select	obter_classe_titulo_receber(null, null, nr_seq_titulo_w)
	into STRICT	nr_seq_classe_w
	;
	exception when others then
		nr_seq_classe_w := null;
	end;
	
	if (nr_seq_classe_w IS NOT NULL AND nr_seq_classe_w::text <> '') and (nr_seq_titulo_w IS NOT NULL AND nr_seq_titulo_w::text <> '') then
		select	max(a.nr_seq_trans_fin_baixa),
			max(a.nr_seq_trans_fin_contab)
		into STRICT	nr_seq_tf_baixa_classe_w,
			nr_seq_tf_contab_classe_w
		from	classe_titulo_receber a
		where	a.nr_sequencia = nr_seq_classe_w;
		
		update	titulo_receber
		set	nr_seq_classe		= nr_seq_classe_w,
			nr_seq_trans_fin_contab	= coalesce(nr_seq_tf_contab_classe_w,nr_seq_trans_fin_contab),
			nr_seq_trans_fin_baixa	= coalesce(nr_seq_tf_baixa_classe_w,nr_seq_trans_fin_baixa)
		where	nr_titulo			= nr_seq_titulo_w;			

	end if;
	/*Fim OS 940613*/

	
	update	eme_faturamento
	set	nr_titulo = nr_seq_titulo_w
	where	nr_sequencia = nr_seq_fatura_p;
	
	if ( coalesce(ie_busca_tributo_nf_p, 'N') = 'S' ) then
		begin
		CALL Buscar_Tributo_Nota(nr_seq_nota_p, nr_seq_titulo_w, nm_usuario_p);		
		end;
	elsif ( ie_gerar_imposto_w = 'S' ) then -- ALTERADO
		begin
		CALL Gerar_Imposto_Tit_Rec(nr_seq_titulo_w, nm_usuario_p);
		
		select	coalesce(sum(CASE WHEN a.ie_soma_diminui='D' THEN (coalesce(b.vl_tributo,0) * - 1) WHEN a.ie_soma_diminui='S' THEN  coalesce(b.vl_tributo,0)  ELSE 0 END ),0)
		into STRICT	vl_trib_titulo_w
		from	tributo a,
		titulo_receber_trib b
		where	coalesce(a.ie_incide_conta,'N')	= 'S'
		and	a.cd_tributo		= b.cd_tributo
		and	b.nr_titulo			= nr_seq_titulo_w;
	
		update	titulo_receber
		set	vl_titulo		= coalesce(vl_titulo,0) + coalesce(vl_trib_titulo_w,0),
			vl_saldo_titulo	= coalesce(vl_saldo_titulo,0) + coalesce(vl_trib_titulo_w,0)
		where	nr_titulo		= nr_seq_titulo_w;
		end;
	end if;	
	CALL atualizar_saldo_tit_rec(nr_seq_titulo_w, nm_usuario_p);	
	if (nr_seq_titulo_w IS NOT NULL AND nr_seq_titulo_w::text <> '') then	
		CALL Gerar_Bloqueto_Tit_Rec(nr_seq_titulo_w, 'SE');
	end if;	
	commit;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eme_titulo (nr_seq_nota_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_fatura_p bigint, ie_busca_tributo_nf_p text default 'N') FROM PUBLIC;

