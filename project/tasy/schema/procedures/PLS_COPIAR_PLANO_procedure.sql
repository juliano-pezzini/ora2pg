-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_copiar_plano ( nr_seq_plano_origem_p bigint, nr_seq_plano_destino_p bigint, ie_excluir_p text, ie_opcao_p text, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


/* ie_opcao_p
	0=	Area atuacao
	1=	Acomodacoes
	2=	Coberturas
	3=	Limitacoes
	4=	Carencias
	5=	Preco comercializacao
	6=	Inscricoes (Regra)
	7=	Co-participacao (Regra)
	8=	Pos-estabelecido (Regra)
	9 = 	Simulador de preco web (Regra)
	10 =	Instrumento juridico
*/
nr_seq_tabela_nova_w		bigint;
nr_seq_instrumento_w		bigint;
nr_seq_plano_instrumento_w	bigint;
nr_seq_limitacao_w		bigint;
ds_erro_w			varchar(255);

C01 CURSOR FOR
	SELECT	nr_sequencia nr_seq_tabela
	from	pls_tabela_preco
	where	nr_seq_plano	= nr_seq_plano_origem_p;

C02 CURSOR FOR
	SELECT	nr_sequencia nr_seq_instr_juridico
	from	pls_instrumento
	where	nr_seq_plano	= nr_seq_plano_origem_p;

C03 CURSOR(	nr_seq_instr_juridico_pc	pls_instrumento.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_plano_instrumento
	from	pls_plano_instrumento
	where	nr_seq_instrumento	= nr_seq_instr_juridico_pc
	order by	nr_sequencia;

C04 CURSOR(	nr_seq_plano_instrumento_pc	 pls_plano_instrumento.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_intrumento_tema
	from	pls_instrumento_tema
	where	nr_seq_instrumento	= nr_seq_plano_instrumento_pc
	order by	nr_sequencia;

C05 CURSOR FOR
	SELECT	nr_sequencia nr_seq_limitacao
	from	pls_limitacao
	where	nr_seq_plano	= nr_seq_plano_origem_p;

BEGIN

ds_erro_w	:= '';

if (ie_opcao_p	= 0) then /* Area atuacao */
	if (ie_excluir_p = 'S') then
		begin
		delete	from pls_plano_area
		where 	nr_seq_plano = nr_seq_plano_destino_p;
		exception
		when others then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(281088);
		end;
	end if;
	
	insert	into	pls_plano_area(	nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			sg_estado,
			nr_seq_plano,
			cd_municipio_ibge,
			nr_seq_regiao,
			nr_seq_sca)
		(SELECT	nextval('pls_plano_area_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			sg_estado,
			nr_seq_plano_destino_p,
			cd_municipio_ibge,
			nr_seq_regiao,
			nr_seq_sca
		from	pls_plano_area
		where	nr_seq_plano	= nr_seq_plano_origem_p);
elsif (ie_opcao_p	= 1) then /* Acomodacoes */
	if (ie_excluir_p = 'S') then
		begin
		delete	from pls_plano_acomodacao
		where 	nr_seq_plano = nr_seq_plano_destino_p;
		exception
		when others then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(281089);
		end;
	end if;
	
	insert	into	pls_plano_acomodacao(	nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_plano,
			nr_seq_tipo_acomodacao,
			nr_seq_categoria,
			ie_acomod_padrao)
		(SELECT	nextval('pls_plano_acomodacao_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_plano_destino_p,
			nr_seq_tipo_acomodacao,
			nr_seq_categoria,
			ie_acomod_padrao
		from	pls_plano_acomodacao
		where	nr_seq_plano	= nr_seq_plano_origem_p);
elsif (ie_opcao_p	= 2) then /* Coberturas */
	if (ie_excluir_p = 'S') then
		begin
		delete	from pls_cobertura
		where 	nr_seq_plano = nr_seq_plano_destino_p;
		exception
		when others then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(281091);
		end;
	end if;
	
	insert	into	pls_cobertura(	nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_plano,
			nr_seq_tipo_cobertura,
			nr_seq_sca,
			ie_tipo_atendimento,
			ie_sexo,
			dt_inicio_vigencia,
			dt_fim_vigencia,
			ie_situacao)
		(SELECT	nextval('pls_cobertura_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_plano_destino_p,
			nr_seq_tipo_cobertura,
			nr_seq_sca,
			ie_tipo_atendimento,
			ie_sexo,
			dt_inicio_vigencia,
			dt_fim_vigencia,
			ie_situacao
		from	pls_cobertura
		where	nr_seq_plano	= nr_seq_plano_origem_p);
elsif (ie_opcao_p	= 3) then /* Limitacoes */
	if (ie_excluir_p = 'S') then
		begin
		delete	FROM pls_limitacao_prestador
		where	nr_seq_limitacao	in (	SELECT	nr_sequencia
							from	pls_limitacao
							where	nr_seq_plano	= nr_seq_plano_destino_p);
		
		delete	from pls_limitacao
		where 	nr_seq_plano = nr_seq_plano_destino_p;
		exception
		when others then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(281095);
		end;
	end if;
	
	for c05_w in C05 loop
		begin
		
		select	nextval('pls_limitacao_seq')
		into STRICT	nr_seq_limitacao_w
		;
		
		insert	into	pls_limitacao(	nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_plano,
				nr_seq_tipo_limitacao,
				qt_permitida,
				qt_meses_intervalo,
				ie_periodo,
				qt_dia_internacao,
				ie_tipo_periodo,
				ie_qt_familia,
				dt_inicio_vigencia,
				dt_fim_vigencia)
			(SELECT	nr_seq_limitacao_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_plano_destino_p,
				nr_seq_tipo_limitacao,
				qt_permitida,
				qt_meses_intervalo,
				ie_periodo,
				qt_dia_internacao,
				ie_tipo_periodo,
				ie_qt_familia,
				dt_inicio_vigencia,
				dt_fim_vigencia
			from	pls_limitacao
			where	nr_sequencia	= c05_w.nr_seq_limitacao);
		
		insert	into	pls_limitacao_prestador(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
			nr_seq_limitacao,nr_seq_prestador)
		(	SELECT	nextval('pls_limitacao_prestador_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				nr_seq_limitacao_w,nr_seq_prestador
			from	pls_limitacao_prestador
			where	nr_seq_limitacao	= c05_w.nr_seq_limitacao);
		end;
	end loop; --C05
	
elsif (ie_opcao_p	= 4) then /* Carencias */
	if (ie_excluir_p = 'S') then
		begin
		delete	from pls_carencia
		where 	nr_seq_plano = nr_seq_plano_destino_p;
		exception
		when others then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(281096);
		end;
	end if;
	
	insert	into	pls_carencia(	nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_plano,
			nr_seq_tipo_carencia,
			qt_dias,
			dt_inicio_vigencia,
			dt_fim_vigencia,
			ds_observacao,
			nr_seq_pessoa_proposta,
			nr_seq_regra_aut,
			ie_origem_carencia_benef,
			ie_isencao_carencia,
			nr_seq_grupo_carencia,
			ie_cpt,
			nr_seq_rede,
			qt_dias_fora_abrang_ant,
			dt_inicio_vig_plano,
			dt_fim_vig_plano,
			ie_mes_posterior,
			cd_sistema_anterior,
			dt_inicio_vig_plano_ref,
			dt_fim_vig_plano_ref)
		(SELECT	nextval('pls_carencia_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_plano_destino_p,
			nr_seq_tipo_carencia,
			qt_dias,
			dt_inicio_vigencia,
			dt_fim_vigencia,
			ds_observacao,
			nr_seq_pessoa_proposta,
			nr_seq_regra_aut,
			'P',
			ie_isencao_carencia,
			nr_seq_grupo_carencia,
			ie_cpt,
			nr_seq_rede,
			qt_dias_fora_abrang_ant,
			dt_inicio_vig_plano,
			dt_fim_vig_plano,
			ie_mes_posterior,
			cd_sistema_anterior,
			dt_inicio_vig_plano_ref,
			dt_fim_vig_plano_ref
		from	pls_carencia
		where	nr_seq_plano	= nr_seq_plano_origem_p);
elsif (ie_opcao_p	= 5) then /* Preco comercializacao */
	if (ie_excluir_p = 'S') then
		begin
		delete	from	pls_plano_preco
		where	nr_seq_tabela in (	SELECT	nr_sequencia
						from	pls_tabela_preco
						where	nr_seq_plano	= nr_seq_plano_destino_p);
		delete	from pls_tabela_preco
		where	nr_seq_plano	= nr_seq_plano_destino_p;
		exception
		when others then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(281097);
		end;
	end if;
		
	for c01_w in C01 loop
		begin
		
		select	nextval('pls_tabela_preco_seq')
		into STRICT	nr_seq_tabela_nova_w
		;
		
		insert	into	pls_tabela_preco(	nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nm_tabela,
				dt_inicio_vigencia,
				dt_fim_vigencia,
				nr_seq_plano,
				dt_liberacao,
				cd_codigo_ant,
				ie_tabela_base,
				ie_tabela_contrato,
				nr_segurado,
				nr_seq_tabela_origem,
				ie_proposta_adesao,
				ie_simulacao_preco,
				nr_seq_faixa_etaria,
				ie_preco_vidas_contrato,
				ie_calculo_vidas,
				tx_adaptacao,
				nr_contrato,
				nr_seq_tabela_ant,
				nr_seq_contrato_inter,
				nr_seq_tabela_original)
			(SELECT	nr_seq_tabela_nova_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nm_tabela,
				dt_inicio_vigencia,
				dt_fim_vigencia,
				nr_seq_plano_destino_p,
				dt_liberacao,
				cd_codigo_ant,
				ie_tabela_base,
				ie_tabela_contrato,
				nr_segurado,
				nr_seq_tabela_origem,
				ie_proposta_adesao,
				ie_simulacao_preco,
				nr_seq_faixa_etaria,
				ie_preco_vidas_contrato,
				ie_calculo_vidas,
				tx_adaptacao,
				nr_contrato,
				nr_seq_tabela_ant,
				nr_seq_contrato_inter,
				nr_seq_tabela_original
			from	pls_tabela_preco
			where	nr_sequencia	= c01_w.nr_seq_tabela);
		
		insert	into	pls_plano_preco(	nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_tabela,
				qt_idade_inicial,
				qt_idade_final,
				vl_preco_inicial,
				vl_preco_atual,
				tx_acrescimo,
				vl_preco_nao_subsidiado,
				vl_preco_nao_subsid_atual,
				vl_minimo,
				ie_grau_titularidade,
				ie_manutencao_preco,
				qt_vidas_inicial,
				qt_vidas_final,
				vl_adaptacao,
				tx_reajuste)
			(SELECT	nextval('pls_plano_preco_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_tabela_nova_w,
				qt_idade_inicial,
				qt_idade_final,
				vl_preco_inicial,
				vl_preco_atual,
				tx_acrescimo,
				vl_preco_nao_subsidiado,
				vl_preco_nao_subsid_atual,
				vl_minimo,
				ie_grau_titularidade,
				ie_manutencao_preco,
				qt_vidas_inicial,
				qt_vidas_final,
				vl_adaptacao,
				tx_reajuste
			from	pls_plano_preco
			where	nr_seq_tabela	= c01_w.nr_seq_tabela);
		end;
	end loop; --C01
elsif (ie_opcao_p	= 6) then /* Inscricoes (Regra) */
	if (ie_excluir_p = 'S') then
		begin
		delete	from pls_regra_inscricao
		where 	nr_seq_plano = nr_seq_plano_destino_p;
		exception
		when others then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(281098);
		end;
	end if;
	
	insert	into	pls_regra_inscricao(	nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			vl_inscricao,
			tx_inscricao,
			qt_parcela_inicial,
			qt_parcela_final,
			nr_seq_plano,
			dt_inicio_vigencia,
			dt_fim_vigencia,
			ie_grau_dependencia,
			ie_tipo_contratacao,
			ie_acao_contrato,
			ie_tipo_proposta,
			nr_seq_subestipulante)
		(SELECT	nextval('pls_regra_inscricao_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			vl_inscricao,
			tx_inscricao,
			qt_parcela_inicial,
			qt_parcela_final,
			nr_seq_plano_destino_p,
			dt_inicio_vigencia,
			dt_fim_vigencia,
			ie_grau_dependencia,
			ie_tipo_contratacao,
			ie_acao_contrato,
			ie_tipo_proposta,
			nr_seq_subestipulante
		from	pls_regra_inscricao
		where	nr_seq_plano	= nr_seq_plano_origem_p);
elsif (ie_opcao_p	= 7) then /* Co-participacao (Regra) */
	if (ie_excluir_p = 'S') then
		begin
		delete	from pls_regra_coparticipacao
		where 	nr_seq_plano = nr_seq_plano_destino_p;
		exception
		when others then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(281099);
		end;
	end if;
	
	insert	into	pls_regra_coparticipacao(	nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_plano,
			tx_coparticipacao,
			nr_seq_tipo_coparticipacao,
			vl_maximo,
			ie_tipo_atendimento,
			ie_situacao,
			vl_coparticipacao,
			dt_inicio_vigencia,
			dt_fim_vigencia,
			dt_contrato_de,
			dt_contrato_ate,
			qt_eventos_minimo,
			qt_meses_intervalo,
			qt_ocorrencias,
			ie_tipo_ocorrencia,
			ie_tipo_data_consistencia,
			ie_prestador_cooperado,
			qt_idade_min,
			qt_idade_max,
			qt_ocorrencia_grupo_serv,
			qt_periodo_ocor,
			ie_tipo_periodo_ocor,
			nr_seq_grupo_serv,
			ie_reajuste,
			ie_titularidade,
			cd_procedimento,
			ie_origem_proced,
			ie_tipo_parentesco,
			qt_diaria_inicial,
			qt_diaria_final,
			nr_seq_prestador,
			nr_seq_tipo_prestador,
			ie_incidencia_valor_maximo,
			IE_PERIODO_VALOR_MAXIMO,
			IE_FORMA_COBR_INTERNACAO,
			IE_ANO_CALENDARIO_OUTRAS_OCOR,
			IE_CONSIDERA_OUTRA_OCOR_REGRA,
			ie_tipo_incidencia,
			ie_incide_vl_fixo_cta,
			IE_INC_DEMAIS_ITENS,
			vl_base_min,
			vl_base_max,
                        ie_incidencia_psiquiatria)
		(SELECT	nextval('pls_regra_coparticipacao_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_plano_destino_p,
			tx_coparticipacao,
			nr_seq_tipo_coparticipacao,
			vl_maximo,
			ie_tipo_atendimento,
			ie_situacao,
			vl_coparticipacao,
			dt_inicio_vigencia,
			dt_fim_vigencia,
			dt_contrato_de,
			dt_contrato_ate,
			qt_eventos_minimo,
			qt_meses_intervalo,
			qt_ocorrencias,
			ie_tipo_ocorrencia,
			ie_tipo_data_consistencia,
			ie_prestador_cooperado,
			qt_idade_min,
			qt_idade_max,
			qt_ocorrencia_grupo_serv,
			qt_periodo_ocor,
			ie_tipo_periodo_ocor,
			nr_seq_grupo_serv,
			ie_reajuste,
			ie_titularidade,
			cd_procedimento,
			ie_origem_proced,
			ie_tipo_parentesco,
			qt_diaria_inicial,
			qt_diaria_final,
			nr_seq_prestador,
			nr_seq_tipo_prestador,
			ie_incidencia_valor_maximo,
			IE_PERIODO_VALOR_MAXIMO,
			IE_FORMA_COBR_INTERNACAO,
			IE_ANO_CALENDARIO_OUTRAS_OCOR,
			IE_CONSIDERA_OUTRA_OCOR_REGRA,
			coalesce(ie_tipo_incidencia,'B'),
			ie_incide_vl_fixo_cta,
			ie_inc_demais_itens,
			vl_base_min,
			vl_base_max,
                        ie_incidencia_psiquiatria
		from	pls_regra_coparticipacao
		where	nr_seq_plano	= nr_seq_plano_origem_p
		and	coalesce(nr_seq_contrato::text, '') = ''
		and	coalesce(nr_seq_proposta::text, '') = '');
elsif (ie_opcao_p	= 8) then /* Pos-estabelecido (Regra) */
	if (ie_excluir_p = 'S') then
		begin
		delete	from pls_regra_pos_estabelecido
		where	nr_seq_plano = nr_seq_plano_destino_p;
		exception
		when others then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(281100);
		end;
	end if;
	
	insert	into	pls_regra_pos_estabelecido(	nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_plano,
			tx_administracao,
			vl_informado,
			dt_vigencia_inicio,
			dt_vigencia_fim,
			ie_cobranca,
			ie_autorizacao_previa,
			ie_repassa_medico,
			nr_seq_grupo_material,
			nr_seq_grupo_servico)
		(SELECT	nextval('pls_regra_pos_estabelecido_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_plano_destino_p,
			tx_administracao,
			vl_informado,
			dt_vigencia_inicio,
			dt_vigencia_fim,
			ie_cobranca,
			ie_autorizacao_previa,
			ie_repassa_medico,
			nr_seq_grupo_material,
			nr_seq_grupo_servico
		from	pls_regra_pos_estabelecido
		where	nr_seq_plano	= nr_seq_plano_origem_p);
elsif (ie_opcao_p	= 9) then /* Simulador de preco web (Regra) */
	if (ie_excluir_p = 'S') then
		begin
		delete	from pls_regra_simulador_web
		where	nr_seq_plano = nr_seq_plano_destino_p;
		exception
		when others then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(281101);
		end;
	end if;
	
	insert	into	pls_regra_simulador_web(	nr_sequencia,
			nr_seq_plano,
			nr_seq_tabela,
			dt_inicio_vigencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_fim_vigencia,
			dt_liberacao,
			nm_usuario_liberacao,
			ds_observacao,
			ie_utiliza_portal)
		(SELECT	nextval('pls_regra_simulador_web_seq'),
			nr_seq_plano_destino_p,
			nr_seq_tabela,
			dt_inicio_vigencia,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			dt_fim_vigencia,
			dt_liberacao,
			nm_usuario_liberacao,
			ds_observacao,
			ie_utiliza_portal
		from	pls_regra_simulador_web
		where	nr_seq_plano	= nr_seq_plano_origem_p);
elsif (ie_opcao_p	= 10) then /* Instrumento juridico */
	if (ie_excluir_p = 'S') then
		begin
		delete	from pls_instrumento_tema
		where	nr_seq_instrumento in (	SELECT	nr_sequencia
						from	pls_plano_instrumento
						where	nr_seq_instrumento in (	select	nr_sequencia
										from	pls_instrumento
										where	nr_seq_plano = nr_seq_plano_destino_p));
		delete	from pls_plano_instrumento
		where	nr_seq_instrumento in (	SELECT	nr_sequencia
						from	pls_instrumento
						where	nr_seq_plano = nr_seq_plano_destino_p);
		delete	from pls_instrumento
		where	nr_seq_plano = nr_seq_plano_destino_p;
		exception
		when others then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(281111);
		end;
	end if;
	
	for c02_w in C02 loop
		begin
		
		select	nextval('pls_instrumento_seq')
		into STRICT	nr_seq_instrumento_w
		;
		
		insert	into	pls_instrumento(	nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_instrumento,
				nr_seq_plano,
				ie_situacao,
				dt_inicio_vigencia,
				dt_fim_vigencia,
				ds_observacao)
			(SELECT	nr_seq_instrumento_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ds_instrumento,
				nr_seq_plano_destino_p,
				ie_situacao,
				dt_inicio_vigencia,
				dt_fim_vigencia,
				ds_observacao
			from	pls_instrumento
			where	nr_sequencia	= c02_w.nr_seq_instr_juridico);		
		
		for c03_w in C03(c02_w.nr_seq_instr_juridico) loop
			begin
			
			select	nextval('pls_plano_instrumento_seq')
			into STRICT	nr_seq_plano_instrumento_w
			;
			
			insert	into	pls_plano_instrumento(	nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nm_dispositivo,
					nr_seq_instrumento,
					ie_gerar_titulo,
					cd_classificacao,
					nr_seq_apresentacao,
					ie_adicionar_termo,
					ie_permite_inclusao_termo,
					nr_seq_tipo_tema,
					ie_quebra_pagina)
				(SELECT	nr_seq_plano_instrumento_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nm_dispositivo,
					nr_seq_instrumento_w,
					ie_gerar_titulo,
					cd_classificacao,
					nr_seq_apresentacao,
					ie_adicionar_termo,
					ie_permite_inclusao_termo,
					nr_seq_tipo_tema,
					ie_quebra_pagina
				from	pls_plano_instrumento
				where	nr_sequencia	= c03_w.nr_seq_plano_instrumento);
			
			CALL copia_campo_long_de_para_novo(
			'PLS_PLANO_INSTRUMENTO',
			'DS_TEMA', 
			' WHERE NR_SEQUENCIA = :NR_SEQUENCIA ',
			'NR_SEQUENCIA='||c03_w.nr_seq_plano_instrumento,
			'PLS_PLANO_INSTRUMENTO',
			'DS_TEMA',
			' WHERE NR_SEQUENCIA = :NR_SEQUENCIA ',
			'NR_SEQUENCIA='||nr_seq_plano_instrumento_w,
			'L');
			
			for c04_w in C04(c03_w.nr_seq_plano_instrumento) loop
				begin
				insert	into	pls_instrumento_tema(	nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_tema,
						nr_seq_instrumento)
					(SELECT	nextval('pls_instrumento_tema_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_tema,
						nr_seq_plano_instrumento_w
					from	pls_instrumento_tema
					where	nr_sequencia	= c04_w.nr_seq_intrumento_tema);
				end;
			end loop; --C04
			
			end;
		end loop; --C03
		
		end;
	end loop; --C02
end if;

ds_erro_p := ds_erro_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_copiar_plano ( nr_seq_plano_origem_p bigint, nr_seq_plano_destino_p bigint, ie_excluir_p text, ie_opcao_p text, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

