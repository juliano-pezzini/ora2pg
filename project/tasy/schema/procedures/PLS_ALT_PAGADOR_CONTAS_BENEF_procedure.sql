-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_alt_pagador_contas_benef ( nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_pagador_p pls_contrato_pagador.nr_sequencia%type, nr_seq_pagador_ant_p pls_contrato_pagador.nr_sequencia%type, ie_tipo_item_p pls_mensalidade_seg_item.ie_tipo_item%type, nr_seq_centro_apropriacao_p pls_centro_apropriacao.nr_sequencia%type, ie_commit_p text, nm_usuario_p text) AS $body$
DECLARE


nr_seq_pagador_copartic_w	pls_pagador_item_mens.nr_seq_pagador_item%type;
nr_seq_pagador_pos_estab_w	pls_pagador_item_mens.nr_seq_pagador_item%type;
nr_seq_pagador_co_w		pls_pagador_item_mens.nr_seq_pagador_item%type;
nr_seq_pagador_copart_aprop_w	pls_contrato_pagador.nr_sequencia%type;
qt_pagador_w			bigint;

C01 CURSOR(	nr_seq_segurado_pc		pls_segurado.nr_sequencia%type,
		nr_seq_pagador_pc		pls_contrato_pagador.nr_sequencia%type,
		nr_seq_centro_apropriacao_pc	pls_centro_apropriacao.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_conta_coparticipacao,
		(SELECT coalesce(sum(mic.vl_item), 0)
		from 	pls_mensalidade_item_conta mic,
			pls_mensalidade_seg_item msi,
			pls_mensalidade_segurado ms,
			pls_mensalidade m
		where 	msi.nr_sequencia 	= mic.nr_seq_item
		and	ms.nr_sequencia		= msi.nr_seq_mensalidade_seg
		and	m.nr_sequencia		= ms.nr_seq_mensalidade
		and	mic.nr_seq_conta_copartic = a.nr_sequencia
		and	coalesce(m.ie_cancelamento::text, '') = '') vl_baixa
	from	pls_conta_coparticipacao a
	where	coalesce(a.nr_seq_mensalidade_seg::text, '') = ''
	and	a.nr_seq_segurado = nr_seq_segurado_pc
	
union

	select	a.nr_sequencia nr_seq_conta_coparticipacao,
		(select coalesce(sum(mic.vl_item), 0)
		from 	pls_mensalidade_item_conta mic,
			pls_mensalidade_seg_item msi,
			pls_mensalidade_segurado ms,
			pls_mensalidade m
		where 	msi.nr_sequencia 	= mic.nr_seq_item
		and	ms.nr_sequencia		= msi.nr_seq_mensalidade_seg
		and	m.nr_sequencia		= ms.nr_seq_mensalidade
		and	mic.nr_seq_conta_copartic = a.nr_sequencia
		and	coalesce(m.ie_cancelamento::text, '') = '') vl_baixa
	from	pls_conta_coparticipacao a
	where	coalesce(a.nr_seq_mensalidade_seg::text, '') = ''
	and	coalesce(nr_seq_centro_apropriacao_pc::text, '') = ''
	and	a.nr_seq_pagador = nr_seq_pagador_pc
	
union

	select	a.nr_sequencia nr_seq_conta_coparticipacao,
		(select coalesce(sum(mic.vl_item), 0)
		from 	pls_mensalidade_item_conta mic,
			pls_mensalidade_seg_item msi,
			pls_mensalidade_segurado ms,
			pls_mensalidade m
		where 	msi.nr_sequencia 	= mic.nr_seq_item
		and	ms.nr_sequencia		= msi.nr_seq_mensalidade_seg
		and	m.nr_sequencia		= ms.nr_seq_mensalidade
		and	mic.nr_seq_conta_copartic = a.nr_sequencia
		and	coalesce(m.ie_cancelamento::text, '') = '') vl_baixa
	from	pls_conta_coparticipacao a
	where	coalesce(a.nr_seq_mensalidade_seg::text, '') = ''
	and	exists (select	1
			from	pls_conta_copartic_aprop x
			where	a.nr_sequencia = x.nr_seq_conta_coparticipacao
			and	x.nr_seq_pagador = nr_seq_pagador_pc
			and	x.nr_seq_centro_apropriacao = nr_seq_centro_apropriacao_pc);

C02 CURSOR(	nr_seq_segurado_pc	pls_segurado.nr_sequencia%type,
		nr_seq_pagador_pc	pls_contrato_pagador.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_conta_pos_estabelecido
	from	pls_conta_pos_estabelecido
	where	coalesce(nr_seq_mensalidade_seg::text, '') = ''
	and	nr_seq_segurado = nr_seq_segurado_pc
	
union

	SELECT	nr_sequencia nr_seq_conta_pos_estabelecido
	from	pls_conta_pos_estabelecido
	where	coalesce(nr_seq_mensalidade_seg::text, '') = ''
	and	nr_seq_pagador = nr_seq_pagador_pc;

C03 CURSOR(	nr_seq_segurado_pc	pls_segurado.nr_sequencia%type,
		nr_seq_pagador_pc	pls_contrato_pagador.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_conta_co
	from	pls_conta_co
	where	coalesce(nr_seq_mensalidade_seg::text, '') = ''
	and	nr_seq_segurado = nr_seq_segurado_pc
	
union

	SELECT	nr_sequencia nr_seq_conta_co
	from	pls_conta_co
	where	coalesce(nr_seq_mensalidade_seg::text, '') = ''
	and	nr_seq_pagador = nr_seq_pagador_pc;

C04 CURSOR(	nr_seq_segurado_pc	pls_segurado.nr_sequencia%type,
		nr_seq_pagador_pc	pls_contrato_pagador.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_conta_pos_proc
	from	pls_conta_pos_proc
	where	ie_status_faturamento <> 'F'
	and	nr_seq_segurado = nr_seq_segurado_pc
	
union

	SELECT	nr_sequencia nr_seq_conta_pos_proc
	from	pls_conta_pos_proc
	where	ie_status_faturamento <> 'F'
	and	nr_seq_pagador = nr_seq_pagador_pc;

C05 CURSOR(	nr_seq_segurado_pc	pls_segurado.nr_sequencia%type,
		nr_seq_pagador_pc	pls_contrato_pagador.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_conta_pos_mat
	from	pls_conta_pos_mat
	where	ie_status_faturamento <> 'F'
	and	nr_seq_segurado = nr_seq_segurado_pc
	
union

	SELECT	nr_sequencia nr_seq_conta_pos_mat
	from	pls_conta_pos_mat
	where	ie_status_faturamento <> 'F'
	and	nr_seq_pagador = nr_seq_pagador_pc;

C06 CURSOR(	nr_seq_conta_copartic_pc	pls_conta_coparticipacao.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_conta_copartic_aprop,
		nr_seq_centro_apropriacao
	from	pls_conta_copartic_aprop
	where	nr_seq_conta_coparticipacao = nr_seq_conta_copartic_pc;
	
BEGIN

if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then
	select	max(nr_seq_pagador_item)
	into STRICT	nr_seq_pagador_copartic_w
	from	pls_pagador_item_mens
	where	nr_seq_pagador	= nr_seq_pagador_p
	and	ie_tipo_item	= '3';

	select	max(nr_seq_pagador_item)
	into STRICT	nr_seq_pagador_pos_estab_w
	from	pls_pagador_item_mens
	where	nr_seq_pagador	= nr_seq_pagador_p
	and	ie_tipo_item	= '6';

	select	max(nr_seq_pagador_item)
	into STRICT	nr_seq_pagador_co_w
	from	pls_pagador_item_mens
	where	nr_seq_pagador	= nr_seq_pagador_p
	and	ie_tipo_item	= '13';
	
	for r_c01_w in c01(	nr_seq_segurado_p, null, null) loop
		begin
		if (r_c01_w.vl_baixa = 0) then
			if (coalesce(nr_seq_pagador_copartic_w::text, '') = '') then
				nr_seq_pagador_copartic_w	:= nr_seq_pagador_p;
			end if;
		
			update	pls_conta_coparticipacao
			set	nr_seq_pagador	= nr_seq_pagador_copartic_w
			where	nr_sequencia	= r_c01_w.nr_seq_conta_coparticipacao;
			
			for r_c06_w in c06(r_c01_w.nr_seq_conta_coparticipacao) loop
				begin				
				select	max(nr_seq_pagador_item)
				into STRICT	nr_seq_pagador_copart_aprop_w
				from	pls_pagador_item_mens
				where	nr_seq_pagador	= nr_seq_pagador_copartic_w
				and	nr_seq_centro_apropriacao = r_c06_w.nr_seq_centro_apropriacao
				and	ie_tipo_item	= '3';
				
				if (coalesce(nr_seq_pagador_copart_aprop_w::text, '') = '') then
					nr_seq_pagador_copart_aprop_w	:= nr_seq_pagador_copartic_w;
				end if;
				
				update	pls_conta_copartic_aprop
				set	nr_seq_pagador = nr_seq_pagador_copart_aprop_w,
					nm_usuario = nm_usuario_p,
					dt_atualizacao = clock_timestamp()
				where	nr_sequencia = r_c06_w.nr_seq_conta_copartic_aprop;
				end;
			end loop;
		end if;
		end;
	end loop;

	for r_c02_w in c02(	nr_seq_segurado_p,
				null) loop
		begin
		update	pls_conta_pos_estabelecido
		set	nr_seq_pagador	= coalesce(nr_seq_pagador_pos_estab_w, nr_seq_pagador_p)
		where	nr_sequencia	= r_c02_w.nr_seq_conta_pos_estabelecido;
		end;
	end loop;
	
	for r_c03_w in c03(	nr_seq_segurado_p,
				null) loop
		begin
		update	pls_conta_co
		set	nr_seq_pagador	= coalesce(nr_seq_pagador_co_w, nr_seq_pagador_p)
		where	nr_sequencia	= r_c03_w.nr_seq_conta_co;
		end;
	end loop;
	
	for r_c04_w in c04(	nr_seq_segurado_p,
				null) loop
		begin
		update	pls_conta_pos_proc
		set	nr_seq_pagador = coalesce(nr_seq_pagador_pos_estab_w, nr_seq_pagador_p)
		where	nr_sequencia = r_c04_w.nr_seq_conta_pos_proc;
		end;
	end loop;

	for r_c05_w in c05(	nr_seq_segurado_p,
				null) loop
		begin
		update	pls_conta_pos_mat
		set	nr_seq_pagador = coalesce(nr_seq_pagador_pos_estab_w, nr_seq_pagador_p)
		where	nr_sequencia = r_c05_w.nr_seq_conta_pos_mat;
		end;
	end loop;
elsif	((nr_seq_pagador_ant_p IS NOT NULL AND nr_seq_pagador_ant_p::text <> '') and (nr_seq_pagador_p IS NOT NULL AND nr_seq_pagador_p::text <> '') and (ie_tipo_item_p IS NOT NULL AND ie_tipo_item_p::text <> '')) then
	--VERIFICAR SE O PAGADOR EXISTE
	select	count(1)
	into STRICT	qt_pagador_w
	from	pls_contrato_pagador
	where	nr_sequencia = nr_seq_pagador_p;

	if (qt_pagador_w > 0) then
		if (ie_tipo_item_p = '3') then
			for r_c01_w in c01(	null,
						nr_seq_pagador_ant_p,
						nr_seq_centro_apropriacao_p) loop
				begin
				if (r_c01_w.vl_baixa = 0) then
					update	pls_conta_coparticipacao
					set	nr_seq_pagador	= nr_seq_pagador_p
					where	nr_sequencia	= r_c01_w.nr_seq_conta_coparticipacao;

					for r_c06_w in c06(	r_c01_w.nr_seq_conta_coparticipacao) loop
						begin
						if (coalesce(nr_seq_centro_apropriacao_p::text, '') = '') then
							select	max(nr_seq_pagador_item)
							into STRICT	nr_seq_pagador_copart_aprop_w
							from	pls_pagador_item_mens
							where	nr_seq_pagador	= nr_seq_pagador_p
							and	nr_seq_centro_apropriacao = r_c06_w.nr_seq_centro_apropriacao
							and	ie_tipo_item	= '3';
							
							if (coalesce(nr_seq_pagador_copart_aprop_w::text, '') = '') then
								nr_seq_pagador_copart_aprop_w	:= nr_seq_pagador_p;
							end if;
						else
							nr_seq_pagador_copart_aprop_w	:= nr_seq_pagador_p;
						end if;
						
						if (nr_seq_centro_apropriacao_p = r_c06_w.nr_seq_centro_apropriacao) or (coalesce(nr_seq_centro_apropriacao_p::text, '') = '') then
							update	pls_conta_copartic_aprop
							set	nr_seq_pagador = nr_seq_pagador_copart_aprop_w,
								nm_usuario = nm_usuario_p,
								dt_atualizacao = clock_timestamp()
							where	nr_sequencia = r_c06_w.nr_seq_conta_copartic_aprop;
						end if;
						end;
					end loop;
				end if;
				end;
			end loop;
		end if;

		if (ie_tipo_item_p = '13') then
			for r_c03_w in c03(	null,
						nr_seq_pagador_ant_p) loop
				begin
				update	pls_conta_co
				set	nr_seq_pagador	= nr_seq_pagador_p
				where	nr_sequencia	= r_c03_w.nr_seq_conta_co;
				end;
			end loop;
		end if;
		
		if (ie_tipo_item_p = '6') then
			for r_c02_w in c02(	null,
						nr_seq_pagador_ant_p) loop
				begin
				update	pls_conta_pos_estabelecido
				set	nr_seq_pagador	= nr_seq_pagador_p
				where	nr_sequencia	= r_c02_w.nr_seq_conta_pos_estabelecido;
				end;
			end loop;
			
			for r_c04_w in c04(	null,
						nr_seq_pagador_ant_p) loop
				begin
				update	pls_conta_pos_proc
				set	nr_seq_pagador 	= nr_seq_pagador_p
				where	nr_sequencia 	= r_c04_w.nr_seq_conta_pos_proc;
				end;
			end loop;
			
			for r_c05_w in c05(	null,
						nr_seq_pagador_ant_p) loop
				begin
				update	pls_conta_pos_mat
				set	nr_seq_pagador 	= nr_seq_pagador_p
				where	nr_sequencia 	= r_c05_w.nr_seq_conta_pos_mat;
				end;
			end loop;
		end if;
	end if;
end if;

if (ie_commit_p = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_alt_pagador_contas_benef ( nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_pagador_p pls_contrato_pagador.nr_sequencia%type, nr_seq_pagador_ant_p pls_contrato_pagador.nr_sequencia%type, ie_tipo_item_p pls_mensalidade_seg_item.ie_tipo_item%type, nr_seq_centro_apropriacao_p pls_centro_apropriacao.nr_sequencia%type, ie_commit_p text, nm_usuario_p text) FROM PUBLIC;

