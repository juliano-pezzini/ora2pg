-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_cobr_escrit_fat ( nr_seq_lote_fat_p pls_lote_faturamento.nr_sequencia%type, nr_seq_pls_fatura_p pls_fatura.nr_sequencia%type, dt_referencia_p timestamp, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


cd_banco_w		banco.cd_banco%type;
nr_seq_cobranca_w	cobranca_escritural.nr_sequencia%type;
nr_remessa_w		cobranca_escritural.nr_remessa%type;
qt_registros_w		integer;
dt_referencia_w		timestamp := trunc(coalesce(dt_referencia_p,clock_timestamp()));

C01 CURSOR(	nr_seq_lote_fat_pc	pls_lote_faturamento.nr_sequencia%type,
		nr_seq_pls_fatura_pc	pls_fatura.nr_sequencia%type) FOR
	-- LOTE - TITULO
	SELECT	fa.nr_seq_lote,
		fa.nr_sequencia nr_seq_pls_fatura,
		fa.nr_seq_pagador,
		cf.nr_seq_forma_cobranca,
		cf.cd_condicao_pagamento,
		coalesce(tr.nr_seq_conta_banco,cf.nr_seq_conta_banco) nr_seq_conta_banco,
		cf.nr_seq_carteira_cobr,
		tr.nr_titulo
	from	titulo_receber			tr,
		pls_fatura			fa,
		pls_contrato_pagador		cp,
		pls_contrato_pagador_fin	cf
	where	tr.nr_titulo	= fa.nr_titulo
	and	cp.nr_sequencia	= fa.nr_seq_pagador
	and	cp.nr_sequencia	= cf.nr_seq_pagador
	and	fa.nr_seq_lote	= nr_seq_lote_fat_pc
	and	(nr_seq_lote_fat_pc IS NOT NULL AND nr_seq_lote_fat_pc::text <> '')
	and	(fa.nr_seq_pagador IS NOT NULL AND fa.nr_seq_pagador::text <> '')
	and	coalesce(fa.ie_cancelamento::text, '') = ''
	and	dt_referencia_w between trunc(coalesce(cf.dt_inicio_vigencia,dt_referencia_w)) and fim_dia(coalesce(cf.dt_fim_vigencia,dt_referencia_w))
	
union all

	-- LOTE - TITULO NDC
	SELECT	fa.nr_seq_lote,
		fa.nr_sequencia nr_seq_pls_fatura,
		fa.nr_seq_pagador,
		cf.nr_seq_forma_cobranca,
		cf.cd_condicao_pagamento,
		coalesce(tr.nr_seq_conta_banco,cf.nr_seq_conta_banco) nr_seq_conta_banco,
		cf.nr_seq_carteira_cobr,
		tr.nr_titulo
	from	titulo_receber			tr,
		pls_fatura			fa,
		pls_contrato_pagador		cp,
		pls_contrato_pagador_fin	cf
	where	tr.nr_titulo	= fa.nr_titulo_ndc
	and	cp.nr_sequencia	= fa.nr_seq_pagador
	and	cp.nr_sequencia	= cf.nr_seq_pagador
	and	fa.nr_seq_lote	= nr_seq_lote_fat_pc
	and	(nr_seq_lote_fat_pc IS NOT NULL AND nr_seq_lote_fat_pc::text <> '')
	and	(fa.nr_seq_pagador IS NOT NULL AND fa.nr_seq_pagador::text <> '')
	and	coalesce(fa.ie_cancelamento::text, '') = ''
	and	dt_referencia_w between trunc(coalesce(cf.dt_inicio_vigencia,dt_referencia_w)) and fim_dia(coalesce(cf.dt_fim_vigencia,dt_referencia_w))
	
union all

	-- FATURA - TITULO
	select	fa.nr_seq_lote,
		fa.nr_sequencia nr_seq_pls_fatura,
		fa.nr_seq_pagador,
		cf.nr_seq_forma_cobranca,
		cf.cd_condicao_pagamento,
		coalesce(tr.nr_seq_conta_banco,cf.nr_seq_conta_banco) nr_seq_conta_banco,
		cf.nr_seq_carteira_cobr,
		tr.nr_titulo
	from	titulo_receber			tr,
		pls_fatura			fa,
		pls_contrato_pagador		cp,
		pls_contrato_pagador_fin	cf
	where	tr.nr_titulo	= fa.nr_titulo
	and	cp.nr_sequencia	= fa.nr_seq_pagador
	and	cp.nr_sequencia	= cf.nr_seq_pagador
	and	fa.nr_sequencia	= nr_seq_pls_fatura_pc
	and	(nr_seq_pls_fatura_pc IS NOT NULL AND nr_seq_pls_fatura_pc::text <> '')
	and	(fa.nr_seq_pagador IS NOT NULL AND fa.nr_seq_pagador::text <> '')
	and	coalesce(fa.ie_cancelamento::text, '') = ''
	and	dt_referencia_w between trunc(coalesce(cf.dt_inicio_vigencia,dt_referencia_w)) and fim_dia(coalesce(cf.dt_fim_vigencia,dt_referencia_w))
	
union all

	-- FATURA - TITULO NDC
	select	fa.nr_seq_lote,
		fa.nr_sequencia nr_seq_pls_fatura,
		fa.nr_seq_pagador,
		cf.nr_seq_forma_cobranca,
		cf.cd_condicao_pagamento,
		coalesce(tr.nr_seq_conta_banco,cf.nr_seq_conta_banco) nr_seq_conta_banco,
		cf.nr_seq_carteira_cobr,
		tr.nr_titulo
	from	titulo_receber			tr,
		pls_fatura			fa,
		pls_contrato_pagador		cp,
		pls_contrato_pagador_fin	cf
	where	tr.nr_titulo	= fa.nr_titulo_ndc
	and	cp.nr_sequencia	= fa.nr_seq_pagador
	and	cp.nr_sequencia	= cf.nr_seq_pagador
	and	fa.nr_sequencia	= nr_seq_pls_fatura_pc
	and	(nr_seq_pls_fatura_pc IS NOT NULL AND nr_seq_pls_fatura_pc::text <> '')
	and	(fa.nr_seq_pagador IS NOT NULL AND fa.nr_seq_pagador::text <> '')
	and	coalesce(fa.ie_cancelamento::text, '') = ''
	and	dt_referencia_w between trunc(coalesce(cf.dt_inicio_vigencia,dt_referencia_w)) and fim_dia(coalesce(cf.dt_fim_vigencia,dt_referencia_w))
	order by nr_seq_conta_banco;

BEGIN
for r_c01_w in c01( nr_seq_lote_fat_p, nr_seq_pls_fatura_p ) loop
	nr_seq_cobranca_w := null;

	-- Verificar se o título já está em lote de cobrança escritural
	select	count(1)
	into STRICT	qt_registros_w
	from	cobranca_escritural	ce,
		titulo_receber_cobr	tc
	where	ce.nr_sequencia		= tc.nr_seq_cobranca
	and	ce.ie_remessa_retorno	= 'R'
	and	tc.nr_titulo		= r_c01_w.nr_titulo;

	-- Obrigatório ter dados do banco
	if (r_c01_w.nr_seq_conta_banco IS NOT NULL AND r_c01_w.nr_seq_conta_banco::text <> '') and (qt_registros_w = 0) then
		-- Obter se existe lote de cobrança escritural
		select	max(nr_sequencia)
		into STRICT	nr_seq_cobranca_w
		from	cobranca_escritural
		where	nr_seq_conta_banco	= r_c01_w.nr_seq_conta_banco
		and	nr_seq_forma_cobranca	= r_c01_w.nr_seq_forma_cobranca
		and	nr_seq_lote_fat		= r_c01_w.nr_seq_lote
		and	cd_estabelecimento	= cd_estabelecimento_p
		and	ie_emissao_bloqueto	= 2
		and	ie_remessa_retorno	= 'R';

		-- Criar novo lote de cobrança escritural
		if (coalesce(nr_seq_cobranca_w::text, '') = '') then
			select	coalesce(max(nr_remessa),0) + 1
			into STRICT	nr_remessa_w
			from	cobranca_escritural
			where	nr_seq_conta_banco = r_c01_w.nr_seq_conta_banco
			and	coalesce(nr_seq_tipo::text, '') = ''
			and	cd_estabelecimento = cd_estabelecimento_p
			and	ie_remessa_retorno = 'R';

			select	max(a.cd_banco)
			into STRICT	cd_banco_w
			from	banco_estabelecimento	a
			where	a.nr_sequencia	= r_c01_w.nr_seq_conta_banco;

			-- Inserir no lote de cobrança escritural
			insert into cobranca_escritural(nr_sequencia,				cd_estabelecimento,		cd_banco,
				ie_remessa_retorno,			dt_remessa_retorno,		dt_atualizacao,
				nm_usuario,				nr_seq_conta_banco,		ie_emissao_bloqueto,
				dt_atualizacao_nrec,			nm_usuario_nrec,		ds_arquivo,
				nr_seq_forma_cobranca,			nr_seq_lote_fat,		nr_remessa,
				nr_seq_carteira_cobr)
			values (nextval('cobranca_escritural_seq'),	cd_estabelecimento_p,		cd_banco_w,
				'R',					clock_timestamp(),			clock_timestamp(),
				nm_usuario_p,				r_c01_w.nr_seq_conta_banco,	2,
				clock_timestamp(),				nm_usuario_p,			null,
				r_c01_w.nr_seq_forma_cobranca,		r_c01_w.nr_seq_lote,		nr_remessa_w,
				r_c01_w.nr_seq_carteira_cobr) returning nr_sequencia into nr_seq_cobranca_w;
		end if;

		-- Vincular o título no lote de cobrança escritural
		if (nr_seq_cobranca_w IS NOT NULL AND nr_seq_cobranca_w::text <> '') then
			-- Vincular título ao lote de cobrança
			CALL vincular_titulo_rec_cobranca( nr_seq_cobranca_w, r_c01_w.nr_titulo, nm_usuario_p, null, null, null, null, null);

			-- Verificar se o lote possui título incluso
			select	count(1)
			into STRICT	qt_registros_w
			from	titulo_receber_cobr	a
			where	a.nr_seq_cobranca	= nr_seq_cobranca_w  LIMIT 1;

			-- Remover lote caso título não seja vinculado título
			if (qt_registros_w = 0) then
				delete	FROM cobranca_escritural
				where	nr_sequencia	= nr_seq_cobranca_w;
			end if;
		end if;
	end if;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_cobr_escrit_fat ( nr_seq_lote_fat_p pls_lote_faturamento.nr_sequencia%type, nr_seq_pls_fatura_p pls_fatura.nr_sequencia%type, dt_referencia_p timestamp, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

