-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE eis_gerar_desempenho_compras ( dt_parametro_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_parametro_w			timestamp;
cd_comprador_w			varchar(10);
nr_ordem_compra_w		bigint;
nr_cot_compra_w			bigint;
nr_solic_compra_w			bigint;
nr_solic_compra_w2		bigint;
ie_consignado_w			varchar(1);
nr_sequencia_w			bigint;
nr_item_cot_compra_w		integer;
nr_solic_compra_ww		bigint;
nr_item_solic_compra_w		integer;
cd_local_estoque_w		integer;
cd_centro_custo_w			integer;
nr_documento_anterior_w		bigint;
qt_quantidade_w			integer;
qt_item_w			integer;
vl_total_ordem_w			double precision;
cd_grupo_material_w		smallint;
qt_dia_aprov_proc_w		bigint;
qt_dia_ordem_compra_w		bigint;
qt_solic_count_w			bigint;
cd_pessoa_solicitante_w		varchar(10);
nr_solic_compra_ww2		bigint := 0;
nr_ordem_compra_w2		bigint := 0;
nr_cot_compra_w2		bigint := 0;
nr_solic_compra_ant_w		bigint := 0;

C01 CURSOR FOR
	SELECT	a.nr_ordem_compra,
		coalesce(sum(vl_item_liquido), 0),
		d.cd_grupo_material,
		a.cd_comprador,
		coalesce(c.ie_consignado,'0'),
		b.cd_local_estoque,
		b.cd_centro_custo,
		a.cd_pessoa_solicitante
	from	estrutura_material_v d,
		material c,
		ordem_compra_item b,
		ordem_compra a
	where	trunc(dt_ordem_compra,'month') = dt_parametro_w
	and	a.nr_ordem_compra		= b.nr_ordem_compra
	and	b.cd_material		= c.cd_material
	and	d.cd_material		= c.cd_material
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	group by
		a.nr_ordem_compra,
		d.cd_grupo_material,
		a.cd_comprador,
		c.ie_consignado,
		b.cd_local_estoque,
		b.cd_centro_custo,
		a.cd_pessoa_solicitante
	order by
		a.nr_ordem_compra;

C02 CURSOR FOR
	SELECT	d.cd_grupo_material,
		a.nr_cot_compra,
		a.cd_comprador,
		coalesce(c.ie_consignado,'0'),
		b.nr_item_cot_compra,
		a.cd_pessoa_solicitante
	from	estrutura_material_v d,
		material c,
		cot_compra_item b,
		cot_compra a
	where	trunc(dt_cot_compra,'month')	= dt_parametro_w
	and	a.nr_cot_compra 		= b.nr_cot_compra
	and	b.cd_material 		= c.cd_material
	and	d.cd_material		= c.cd_material
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	group by
		d.cd_grupo_material,
		a.nr_cot_compra,
		a.cd_comprador,
		c.ie_consignado,
		b.nr_item_cot_compra,
		a.cd_pessoa_solicitante
	order by
		a.nr_cot_compra;

C03 CURSOR FOR
	SELECT	d.cd_grupo_material,
		a.nr_solic_compra,
		coalesce(a.cd_comprador_resp,a.cd_pessoa_solicitante),
		coalesce(c.ie_consignado,'0'),
		a.cd_local_estoque,
		a.cd_centro_custo,
		a.cd_pessoa_solicitante
	from	estrutura_material_v d,
		material c,
		solic_compra_item b,
		solic_compra a
	where	trunc(dt_solicitacao_compra,'month') = dt_parametro_w
	and	a.nr_solic_compra 		= b.nr_solic_compra
	and	b.cd_material 		= c.cd_material
	and	d.cd_material		= c.cd_material
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	group by
		d.cd_grupo_material,
		a.nr_solic_compra,
		coalesce(a.cd_comprador_resp,a.cd_pessoa_solicitante),
		c.ie_consignado,
		a.cd_local_estoque,
		a.cd_centro_custo,
		a.cd_pessoa_solicitante
	order by
		a.nr_solic_compra;

C04 CURSOR FOR
	SELECT	d.cd_grupo_material,
		a.nr_solic_compra,
		y.cd_comprador,
		coalesce(c.ie_consignado,'0'),
		a.cd_local_estoque,
		a.cd_centro_custo,
		max(trunc(y.dt_liberacao,'dd') - trunc(a.dt_autorizacao,'dd')),
		max(trunc(y.dt_ordem_compra,'dd') - trunc(a.dt_autorizacao,'dd')),
		a.cd_pessoa_solicitante
	from	estrutura_material_v d,
		material c,
		ordem_compra y,
		ordem_compra_item x,
		solic_compra a,
		solic_compra_item b
	where	trunc(dt_solicitacao_compra,'month') = dt_parametro_w
	and	a.nr_solic_compra 		= b.nr_solic_compra
	and	b.cd_material 		= c.cd_material
	and	d.cd_material		= c.cd_material
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	x.nr_solic_compra 	= b.nr_solic_compra
	and	x.nr_item_solic_compra 	= b.nr_item_solic_compra
	and	x.nr_ordem_compra 	= y.nr_ordem_compra
	group by
		a.nr_solic_compra,
		d.cd_grupo_material,
		y.cd_comprador,
		c.ie_consignado,
		a.cd_local_estoque,
		a.cd_centro_custo,
		a.cd_pessoa_solicitante
	order by
		a.nr_solic_compra;


BEGIN
dt_parametro_w             	:= trunc(dt_parametro_p,'month');
delete from eis_desempenho_compras
where dt_referencia 	= dt_parametro_w;
commit;

/* Ordens de compras*/

nr_documento_anterior_w	:= 0; /* Para não incrementar quando for o mesmo documento, porem somente com outro local*/
/*Somente para os cursores que precisam buscar do item*/

open c01;
loop
fetch c01 into
	nr_ordem_compra_w,
	vl_total_ordem_w,
	cd_grupo_material_w,
	cd_comprador_w,
	ie_consignado_w,
	cd_local_estoque_w,
	cd_centro_custo_w,
	cd_pessoa_solicitante_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_sequencia_w
	from	eis_desempenho_compras
	where	dt_referencia	= dt_parametro_w
	and	cd_estabelecimento	= cd_estabelecimento_p
	and	cd_grupo_material	= cd_grupo_material_w
	and	cd_comprador	= cd_comprador_w
	and	ie_consignado	= ie_consignado_w
	and	cd_local_estoque	= cd_local_estoque_w
	and	cd_centro_custo	= cd_centro_custo_w
	and	cd_pessoa_solicitante = cd_pessoa_solicitante_w
	and	nr_ordem_compra = nr_ordem_compra_w;

	qt_quantidade_w	:= 1;
	qt_item_w	:= 0;

	if (nr_ordem_compra_w2 <> nr_ordem_compra_w) then

		select	count(*)
		into STRICT	qt_item_w
		from	ordem_compra_item
		where	nr_ordem_compra = nr_ordem_compra_w;

		nr_ordem_compra_w2 := nr_ordem_compra_w;
	end if;

	if (nr_sequencia_w = 0) then

		select	nextval('eis_desempenho_compras_seq')
		into STRICT	nr_sequencia_w
		;

		insert into eis_desempenho_compras(
			nr_sequencia,
			dt_referencia,
			cd_estabelecimento,
			nr_ordem_compra,
			dt_atualizacao,
			nm_usuario,
			cd_comprador,
			ie_consignado,
			qt_solicitacao,
			qt_solic_item,
			qt_cotacao,
			qt_cot_item,
			qt_ordem,
			qt_ordem_item,
			qt_solic_ordem,
			qt_solic_ordem_item,
			qt_hora_proc,
			cd_local_estoque,
			cd_centro_custo,
			vl_ordem,
			cd_grupo_material,
			qt_solic_count,
			cd_pessoa_solicitante)
		values (	nr_sequencia_w,
			dt_parametro_w,
			cd_estabelecimento_p,
			nr_ordem_compra_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_comprador_w,
			ie_consignado_w,
			0,
			0,
			0,
			0,
			qt_quantidade_w,
			qt_item_w,
			0,
			0,
			0,
			cd_local_estoque_w,
			cd_centro_custo_w,
			vl_total_ordem_w,
			cd_grupo_material_w,
			0,
			cd_pessoa_solicitante_w);
	else
		update	eis_desempenho_compras
		set	qt_ordem	= qt_ordem + qt_quantidade_w,
			qt_ordem_item	= qt_ordem_item + qt_item_w,
			vl_ordem	= vl_ordem + vl_total_ordem_w
		where	nr_sequencia	= nr_sequencia_w;
	end if;
	nr_documento_anterior_w	:= nr_ordem_compra_w;
	end;
end loop;
close c01;
commit;

/*Cotações de compras*/

nr_documento_anterior_w	:= 0; /* Para não incrementar quando for o mesmo documento, porem somente com outro local*/
/*Somente para os cursores que precisam buscar do item*/

open c02;
loop
fetch c02 into
	cd_grupo_material_w,
	nr_cot_compra_w,
	cd_comprador_w,
	ie_consignado_w,
	nr_item_cot_compra_w,
	cd_pessoa_solicitante_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	select	coalesce(max(nr_solic_compra),0),
		coalesce(max(nr_item_solic_compra),0)
	into STRICT	nr_solic_compra_ww,
		nr_item_solic_compra_w
	from	solic_compra_item
	where	nr_cot_compra		= nr_cot_compra_w
	and	nr_item_cot_compra	= nr_item_cot_compra_w;

	cd_centro_custo_w	:= null;
	cd_local_estoque_w	:= null;

	if (nr_solic_compra_ww > 0) and (nr_item_solic_compra_w > 0) then

		begin
		select	b.cd_centro_custo,
			b.cd_local_estoque
		into STRICT	cd_centro_custo_w,
			cd_local_estoque_w
		from	solic_compra b,
			solic_compra_item a
		where	a.nr_solic_compra		= nr_solic_compra_ww
		and	a.nr_item_solic_compra	= nr_item_solic_compra_w
		and	a.nr_solic_compra		= b.nr_solic_compra;
		exception when no_data_found then
			cd_centro_custo_w	:= null;
			cd_local_estoque_w	:= null;
		end;

	end if;

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_sequencia_w
	from	eis_desempenho_compras
	where	dt_referencia		= dt_parametro_w
	and	cd_estabelecimento		= cd_estabelecimento_p
	and	cd_comprador		= cd_comprador_w
	and	ie_consignado		= ie_consignado_w
	and	cd_local_estoque		= cd_local_estoque_w
	and	cd_centro_custo		= cd_centro_custo_w
	and	cd_pessoa_solicitante	= cd_pessoa_solicitante_w;

	qt_quantidade_w	:= 1;
	qt_item_w	:= 0;

	if (nr_cot_compra_w2 <> nr_cot_compra_w) then
		select	count(*)
		into STRICT	qt_item_w
		from	cot_compra_item
		where	nr_cot_compra = nr_cot_compra_w;

		nr_cot_compra_w2 := nr_cot_compra_w;
	end if;

	if (nr_documento_anterior_w = nr_cot_compra_w) then
		qt_quantidade_w	:= 0;
		qt_item_w	:= 0;
	end if;

	if (nr_sequencia_w = 0) then

		select	nextval('eis_desempenho_compras_seq')
		into STRICT	nr_sequencia_w
		;

		insert into eis_desempenho_compras(
			nr_sequencia,
			dt_referencia,
			cd_estabelecimento,
			dt_atualizacao,
			nm_usuario,
			cd_comprador,
			ie_consignado,
			qt_solicitacao,
			qt_solic_item,
			qt_cotacao,
			qt_cot_item,
			qt_ordem,
			qt_ordem_item,
			qt_solic_ordem,
			qt_solic_ordem_item,
			qt_hora_proc,
			cd_local_estoque,
			cd_centro_custo,
			vl_ordem,
			cd_grupo_material,
			qt_solic_count,
			cd_pessoa_solicitante)
		values (	nr_sequencia_w,
			dt_parametro_w,
			cd_estabelecimento_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_comprador_w,
			ie_consignado_w,
			0,
			0,
			qt_quantidade_w,
			qt_item_w,
			0,
			0,
			0,
			0,
			0,
			cd_local_estoque_w,
			cd_centro_custo_w,
			0,
			cd_grupo_material_w,
			0,
			cd_pessoa_solicitante_w);
	else
		update	eis_desempenho_compras
		set	qt_cotacao		= qt_cotacao + qt_quantidade_w,
			qt_cot_item		= qt_cot_item + qt_item_w
		where	nr_sequencia 		= nr_sequencia_w;
	end if;
	nr_documento_anterior_w	:= nr_cot_compra_w;
	end;
end loop;
close c02;
commit;

/*Solicitações de compras*/

open c03;
loop
fetch c03 into
	cd_grupo_material_w,
	nr_solic_compra_w,
	cd_comprador_w,
	ie_consignado_w,
	cd_local_estoque_w,
	cd_centro_custo_w,
	cd_pessoa_solicitante_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	begin
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_sequencia_w
	from	eis_desempenho_compras
	where	dt_referencia		= dt_parametro_w
	and	cd_estabelecimento		= cd_estabelecimento_p
	and	cd_comprador		= cd_comprador_w
	and	ie_consignado		= ie_consignado_w
	and	cd_local_estoque		= cd_local_estoque_w
	and	cd_centro_custo		= cd_centro_custo_w
	and	cd_pessoa_solicitante	= cd_pessoa_solicitante_w;

	qt_quantidade_w	:= 0;
	qt_item_w	:= 0;

	if (nr_solic_compra_ww2 <> nr_solic_compra_w) then

		select	count(*)
		into STRICT	qt_item_w
		from	solic_compra_item
		where	nr_solic_compra = nr_solic_compra_w;

		qt_quantidade_w		:= 1;
		nr_solic_compra_ww2 	:= nr_solic_compra_w;
	end if;

	if (nr_sequencia_w = 0) then

		select	nextval('eis_desempenho_compras_seq')
		into STRICT	nr_sequencia_w
		;

		insert into eis_desempenho_compras(
			nr_sequencia,
			dt_referencia,
			cd_estabelecimento,
			dt_atualizacao,
			nm_usuario,
			cd_comprador,
			ie_consignado,
			qt_solicitacao,
			qt_solic_item,
			qt_cotacao,
			qt_cot_item,
			qt_ordem,
			qt_ordem_item,
			qt_solic_ordem,
			qt_solic_ordem_item,
			qt_hora_proc,
			cd_local_estoque,
			cd_centro_custo,
			vl_ordem,
			cd_grupo_material,
			qt_solic_count,
			cd_pessoa_solicitante)
		values (	nr_sequencia_w,
			dt_parametro_w,
			cd_estabelecimento_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_comprador_w,
			ie_consignado_w,
			qt_quantidade_w,
			qt_item_w,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			cd_local_estoque_w,
			cd_centro_custo_w,
			0,
			cd_grupo_material_w,
			0,
			cd_pessoa_solicitante_w);
	else
		update	eis_desempenho_compras
		set	qt_solicitacao		= qt_solicitacao + qt_quantidade_w,
			qt_solic_item		= qt_solic_item + qt_item_w
		where	nr_sequencia		= nr_sequencia_w;
	end if;
	end;
end loop;
close c03;

/*Solicitações de compras Atendidas, ou seja: Que geraram a Ordem de compras*/

open c04;
loop
fetch c04 into
	cd_grupo_material_w,
	nr_solic_compra_w,
	cd_comprador_w,
	ie_consignado_w,
	cd_local_estoque_w,
	cd_centro_custo_w,
	qt_dia_aprov_proc_w,
	qt_dia_ordem_compra_w,
	cd_pessoa_solicitante_w;
EXIT WHEN NOT FOUND; /* apply on c04 */
	begin

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_sequencia_w
	from	eis_desempenho_compras
	where	dt_referencia		= dt_parametro_w
	and	cd_estabelecimento		= cd_estabelecimento_p
	and	cd_comprador		= cd_comprador_w
	and	ie_consignado		= ie_consignado_w
	and	cd_local_estoque		= cd_local_estoque_w
	and	cd_centro_custo		= cd_centro_custo_w
	and	cd_pessoa_solicitante	= cd_pessoa_solicitante_w;


	qt_quantidade_w		:= 0;
	qt_item_w		:= 0;

	if (nr_solic_compra_ant_w <> nr_solic_compra_w) then
		select	count(*)
		into STRICT	qt_item_w
		from	solic_compra_item
		where	nr_solic_compra = nr_solic_compra_w;

		qt_quantidade_w		:= 1;
		nr_solic_compra_ant_w	:= nr_solic_compra_w;
	end if;

	qt_solic_count_w := 0;

	if (coalesce(nr_solic_compra_w2,0) <> nr_solic_compra_w) then
		qt_solic_count_w	:= 1;
		nr_solic_compra_w2	:= nr_solic_compra_w;
	end if;

	if (nr_sequencia_w = 0) then

		select	nextval('eis_desempenho_compras_seq')
		into STRICT	nr_sequencia_w
		;
		insert into eis_desempenho_compras(
			nr_sequencia,
			dt_referencia,
			cd_estabelecimento,
			dt_atualizacao,
			nm_usuario,
			cd_comprador,
			ie_consignado,
			qt_solicitacao,
			qt_solic_item,
			qt_cotacao,
			qt_cot_item,
			qt_ordem,
			qt_ordem_item,
			qt_solic_ordem,
			qt_solic_ordem_item,
			qt_hora_proc,
			qt_dia_aprov_proc,
			qt_dia_ordem_compra,
			cd_local_estoque,
			cd_centro_custo,
			vl_ordem,
			cd_grupo_material,
			qt_solic_count,
			cd_pessoa_solicitante)
		values (	nr_sequencia_w,
			dt_parametro_w,
			cd_estabelecimento_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_comprador_w,
			ie_consignado_w,
			0,
			0,
			0,
			0,
			0,
			0,
			qt_quantidade_w,
			qt_item_w,
			0,
			qt_dia_aprov_proc_w,
			qt_dia_ordem_compra_w,
			cd_local_estoque_w,
			cd_centro_custo_w,
			0,
			cd_grupo_material_w,
			qt_solic_count_w,
			cd_pessoa_solicitante_w);
	else

		update	eis_desempenho_compras
		set	qt_solic_ordem			= qt_solic_ordem + qt_quantidade_w,
			qt_solic_ordem_item		= qt_solic_ordem_item + qt_item_w,
			qt_dia_aprov_proc		= qt_dia_aprov_proc + qt_dia_aprov_proc_w,
			qt_dia_ordem_compra		= qt_dia_ordem_compra + qt_dia_ordem_compra_w,
			qt_solic_count			= qt_solic_count + qt_solic_count_w
		where	nr_sequencia		= nr_sequencia_w;
	end if;
	end;
end loop;
close c04;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eis_gerar_desempenho_compras ( dt_parametro_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

