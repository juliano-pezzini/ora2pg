-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ws_registrar_atendimento ( cd_pessoa_fisica_p text, nr_atendimento_ext_p bigint, cd_procedencia_p text, cd_estabelecimento_p bigint, dt_entrada_p timestamp, ie_tipo_atendimento_p text, ie_tipo_convenio_p text, cd_medico_resp_p text, cd_convenio_p text, cd_plano_convenio_p text, cd_categoria_p text, cd_setor_atendimento_p text, cd_unidade_basica_p text, cd_unidade_compl_p text, cd_tipo_acomodacao_p text, ie_carater_inter_sus_p text, dt_entrada_unidade_p timestamp, dt_inicio_vigencia_p timestamp, dt_validade_carteirinha_p timestamp, cd_usuario_convenio_p text, ie_permite_visita_p text, cd_pessoa_responsavel_p text, cd_convenio_glosa_p text, cd_categoria_glosa_p text, --
 nm_usuario_p text, nr_atendimento_p INOUT bigint, cd_erro_p INOUT text, ds_erro_p INOUT text) AS $body$
DECLARE


qt_idade_pagador_w		bigint;
cd_tipo_acomodacao_w		unidade_atendimento.cd_tipo_acomodacao%type;
cd_convenio_glosa_w		regra_conv_categ_glosa.cd_convenio_glosa%type;
cd_categoria_glosa_w		regra_conv_categ_glosa.cd_categoria_glosa%type;
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
ie_tipo_convenio_w		convenio.ie_tipo_convenio%type;

ie_existe_pessoa_fisica_w	varchar(1);
ie_existe_procedencia_w		varchar(1);
ie_existe_tipo_atendimento_w	varchar(1);
ie_existe_medico_resp_w		varchar(1);
ie_existe_convenio_w		varchar(1);
ie_existe_categoria_w		varchar(1);
ie_existe_plano_w		varchar(1);
ie_existe_estabelecimento_w	varchar(1);
ie_existe_setor_w		varchar(1);
ie_existe_unidade_w		varchar(1);
ie_existe_pessoa_resp_w		varchar(1);


BEGIN

cd_erro_p	:= 0;

qt_idade_pagador_w := Obter_Param_Usuario(916, 149, 0, nm_usuario_p, 0, qt_idade_pagador_w);

if (coalesce(qt_idade_pagador_w,0) = 0) then
	qt_idade_pagador_w	:= 18;
end if;

if (coalesce(cd_pessoa_fisica_p::text, '') = '') then
	cd_erro_p := 1.1;
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(277994,null);
elsif (coalesce(cd_procedencia_p::text, '') = '') then
	cd_erro_p := 1.2;
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(277995,null);
elsif (coalesce(ie_tipo_atendimento_p::text, '') = '') then
	cd_erro_p := 1.3;
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(277996,null);
elsif (coalesce(cd_medico_resp_p::text, '') = '') then
	cd_erro_p := 1.4;
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(277998,null);
elsif (coalesce(cd_convenio_p::text, '') = '') then
	cd_erro_p := 1.5;
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(277999,null);
elsif (coalesce(cd_categoria_p::text, '') = '') then
	cd_erro_p := 1.6;
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(278001,null);
elsif (coalesce(cd_plano_convenio_p::text, '') = '') then
	cd_erro_p := 1.7;
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(278002,null);
elsif (coalesce(dt_inicio_vigencia_p::text, '') = '') then
	cd_erro_p := 1.8;
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(278003,null);
elsif (coalesce(ie_permite_visita_p::text, '') = '') then
	cd_erro_p := 1.9;
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(278004,null);
elsif (coalesce(cd_estabelecimento_p::text, '') = '') then
	cd_erro_p := 1.10;
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(278006,null);
elsif (coalesce(cd_setor_atendimento_p::text, '') = '') then
	cd_erro_p := 1.11;
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(279244,null);
elsif (coalesce(cd_unidade_basica_p::text, '') = '') then
	cd_erro_p := 1.12;
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(279245,null);
elsif (coalesce(cd_unidade_compl_p::text, '') = '') then
	cd_erro_p := 1.13;
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(279246,null);
elsif (coalesce(dt_entrada_unidade_p::text, '') = '') then
	cd_erro_p := 1.14;
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(279247,null);
end if;

if (cd_erro_p = 0) then

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_pessoa_fisica_w
	from	pessoa_fisica a
	where	a.cd_pessoa_fisica = cd_pessoa_fisica_p;

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_procedencia_w
	from	procedencia a
	where	a.ie_situacao = 'A'
	and	a.cd_procedencia = cd_procedencia_p;

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_tipo_atendimento_w
	from	valor_dominio a
	where	a.cd_dominio = 12
	and	a.ie_situacao = 'A'
	and	(a.vl_dominio)::numeric  = ie_tipo_atendimento_p;

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_medico_resp_w
	from	medico a
	where	a.ie_situacao = 'A'
	and	a.cd_pessoa_fisica = cd_medico_resp_p;

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_convenio_w
	from	convenio a
	where	ie_situacao = 'A'
	and	a.cd_convenio = cd_convenio_p;

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_categoria_w
	from	categoria_convenio a
	where	ie_situacao = 'A'
	and	a.cd_convenio = cd_convenio_p
	and	a.cd_categoria = cd_categoria_p;

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_plano_w
	from	convenio_plano a
	where	ie_situacao = 'A'
	and	a.cd_convenio = cd_convenio_p
	and	a.cd_plano = cd_plano_convenio_p;

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_estabelecimento_w
	from	estabelecimento a
	where	a.ie_situacao = 'A'
	and	a.cd_estabelecimento = cd_estabelecimento_p;

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_setor_w
	from	setor_atendimento a
	where	a.cd_setor_atendimento = cd_setor_atendimento_p
	and	coalesce(ie_situacao,'A') = 'A';

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_unidade_w
	from	unidade_atendimento a
	where	a.cd_setor_atendimento = cd_setor_atendimento_p
	and	a.cd_unidade_basica = cd_unidade_basica_p
	and	a.cd_unidade_compl = cd_unidade_compl_p
	and	coalesce(ie_situacao,'A') = 'A';

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_pessoa_resp_w
	from	pessoa_fisica
	where	cd_pessoa_fisica = cd_pessoa_responsavel_p;

	if (ie_existe_pessoa_fisica_w = 'N') then
		cd_erro_p := 4.1;
		ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(278023,'CD_PESSOA_FISICA='||cd_pessoa_fisica_p);
	elsif (ie_existe_procedencia_w = 'N') then
		cd_erro_p := 4.2;
		ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(278024,'CD_PROCEDENCIA='||cd_procedencia_p);
	elsif (ie_existe_tipo_atendimento_w = 'N') then
		cd_erro_p := 4.3;
		ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(278026,'IE_TIPO_ATENDIMENTO='||ie_tipo_atendimento_p);
	elsif (ie_existe_medico_resp_w = 'N') then
		cd_erro_p := 4.4;
		ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(278027,'CD_MEDICO_RESP='||cd_medico_resp_p);
	elsif (ie_existe_convenio_w = 'N') then
		cd_erro_p := 4.5;
		ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(278028,'CD_CONVENIO='||cd_convenio_p);
	elsif (ie_existe_categoria_w = 'N') then
		cd_erro_p := 4.6;
		ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(278029,'CD_CATEGORIA='||to_char(cd_categoria_p));
	elsif (ie_existe_plano_w = 'N') then
		cd_erro_p := 4.7;
		ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(278030,'CD_PLANO_CONVENIO='||to_char(cd_plano_convenio_p));
	elsif (ie_existe_estabelecimento_w = 'N') then
		cd_erro_p := 4.8;
		ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(278031, 'CD_ESTABELECIMENTO='||to_char(cd_estabelecimento_p));
	elsif (ie_existe_setor_w = 'N') then
		cd_erro_p := 4.9;
		ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(279255, 'CD_SETOR_ATENDIMENTO='||to_char(cd_setor_atendimento_p));
	elsif (ie_existe_unidade_w = 'N') then
		cd_erro_p := 4.10;
		ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(279256, 'CD_UNIDADE_BASICA='||cd_unidade_basica_p||';CD_UNIDADE_COMPL='||cd_unidade_compl_p);
	elsif (ie_existe_pessoa_resp_w = 'N') then
		cd_erro_p := 4.11;
		ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(279258, 'CD_PESSOA_RESPONSAVEL='||cd_pessoa_responsavel_p);
	end if;

	if (cd_erro_p = 0) then

		select	max(coalesce(cd_convenio_glosa,0)),
			max(coalesce(cd_categoria_glosa,''))
		into STRICT	cd_convenio_glosa_w,
			cd_categoria_glosa_w
		from	regra_conv_categ_glosa
		where	cd_convenio = cd_convenio_p
		and	coalesce(cd_categoria,cd_categoria_p) = cd_categoria_p
		and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_p) = ie_tipo_atendimento_p;

		if (cd_convenio_glosa_p IS NOT NULL AND cd_convenio_glosa_p::text <> '') then
			cd_convenio_glosa_w := cd_convenio_glosa_p;
		end if;

		if (cd_categoria_glosa_p IS NOT NULL AND cd_categoria_glosa_p::text <> '') then
			cd_categoria_glosa_w := cd_categoria_glosa_p;
		end if;

			begin
			select	nextval('atendimento_paciente_seq')
			into STRICT	nr_atendimento_w
			;

			select	max(ie_tipo_convenio)
			into STRICT	ie_tipo_convenio_w
			from	convenio
			where	cD_convenio = cd_convenio_p;

			insert into atendimento_paciente(nr_atendimento,
							cd_pessoa_fisica,
							dt_entrada,
							cd_procedencia,
							ie_tipo_atendimento,
							cd_medico_resp,
							ie_permite_visita,
							cd_estabelecimento,
							cd_pessoa_responsavel,
							ie_carater_inter_sus,
							dt_atualizacao,
							nm_usuario,
							ie_tipo_convenio,
							nr_atend_original)
					values (		nr_atendimento_w,
							cd_pessoa_fisica_p,
							coalesce(dt_entrada_p,clock_timestamp()),
							cd_procedencia_p,
							ie_tipo_atendimento_p,
							cd_medico_resp_p,
							ie_permite_visita_p,
							cd_estabelecimento_p,
							cd_pessoa_responsavel_p,
							ie_carater_inter_sus_p,
							clock_timestamp(),
							nm_usuario_p,
							ie_tipo_convenio_w,
							nr_atendimento_ext_p);


			exception
			when others then
				cd_erro_p := 2;
				ds_erro_p := substr(sqlerrm,1,2000);
			end;

			if (cd_erro_p = 0) then
				begin

				insert into atend_categoria_convenio(nr_seq_interno,
								nr_atendimento,
								cd_convenio,
								cd_categoria,
								cd_plano_convenio,
								dt_inicio_vigencia,
								cd_usuario_convenio,
								dt_validade_carteira,
								dt_atualizacao,
								nm_usuario/*,
								cd_convenio_glosa,
								cd_categoria_glosa*/
								)
						values (	nextval('atend_categoria_convenio_seq'),
								nr_atendimento_w,
								cd_convenio_p,
								cd_categoria_p,
								cd_plano_convenio_p,
								dt_inicio_vigencia_p,
								cd_usuario_convenio_p,
								dt_validade_carteirinha_p,
								clock_timestamp(),
								nm_usuario_p/*,
								cd_convenio_glosa_w,
								cd_categoria_glosa_w*/
								);
				nr_atendimento_p := nr_atendimento_w;


				exception
				when others then
					cd_erro_p := 3;
					ds_erro_p := substr(sqlerrm,1,2000);
				end;
			end if;

			if (cd_erro_p = 0) then
				begin

				select	max(a.cd_tipo_acomodacao)
				into STRICT	cd_tipo_acomodacao_w
				from	unidade_atendimento a
				where	a.cd_setor_atendimento =  cd_setor_atendimento_p
				and	a.cd_unidade_basica = cd_unidade_basica_p
				and	a.cd_unidade_compl = cd_unidade_compl_p;

				insert into atend_paciente_unidade(	nr_atendimento,
									nr_sequencia,
									cd_setor_atendimento,
									cd_unidade_basica,
									cd_unidade_compl,
									dt_entrada_unidade,
									dt_saida_interno,
									nr_seq_interno,
									dt_atualizacao,
									dt_atualizacao_nrec,
									nm_usuario,
									nm_usuario_nrec,
									cd_tipo_acomodacao)
							values	(	nr_atendimento_w,
									1,
									cd_setor_atendimento_p,
									cd_unidade_basica_p,
									cd_unidade_compl_p,
									coalesce(dt_entrada_unidade_p,dt_entrada_p+(1/1440)),
									to_date('31/12/2999','dd/mm/yyyy'),
									nextval('atend_paciente_unidade_seq'),
									clock_timestamp(),
									clock_timestamp(),
									nm_usuario_p,
									nm_usuario_p,
									coalesce(cd_tipo_acomodacao_p,cd_tipo_acomodacao_w));
				exception
				when others then
					cd_erro_p := 5;
					ds_erro_p := substr(sqlerrm,1,2000);
				end;
			end if;

	end if;

end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ws_registrar_atendimento ( cd_pessoa_fisica_p text, nr_atendimento_ext_p bigint, cd_procedencia_p text, cd_estabelecimento_p bigint, dt_entrada_p timestamp, ie_tipo_atendimento_p text, ie_tipo_convenio_p text, cd_medico_resp_p text, cd_convenio_p text, cd_plano_convenio_p text, cd_categoria_p text, cd_setor_atendimento_p text, cd_unidade_basica_p text, cd_unidade_compl_p text, cd_tipo_acomodacao_p text, ie_carater_inter_sus_p text, dt_entrada_unidade_p timestamp, dt_inicio_vigencia_p timestamp, dt_validade_carteirinha_p timestamp, cd_usuario_convenio_p text, ie_permite_visita_p text, cd_pessoa_responsavel_p text, cd_convenio_glosa_p text, cd_categoria_glosa_p text,  nm_usuario_p text, nr_atendimento_p INOUT bigint, cd_erro_p INOUT text, ds_erro_p INOUT text) FROM PUBLIC;

