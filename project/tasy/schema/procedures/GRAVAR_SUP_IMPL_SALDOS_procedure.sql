-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_sup_impl_saldos ( ie_tipo_p bigint, cd_operacao_estoque_p bigint, cd_operacao_saida_p bigint, dt_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE



/*ie_tipo_virada_p
0	saldo normal
1	saldo consignado
2	cm
5	consumo
6	lote fornecedor
7	saldo estoque lote*/
cd_operacao_estoque_w		smallint;
cd_operacao_saida_w		smallint;
dt_mesano_referencia_w		timestamp;
dt_movimento_estoque_w		timestamp;
dt_processo_w			timestamp;
cd_estabelecimento_w		smallint;
cd_local_estoque_w		smallint;
cd_centro_custo_w			integer;
cd_material_w			integer;
cd_fornecedor_w			varchar(14);
cd_cgc_emitente_w		varchar(14);
cd_material_estoque_w		integer;
qt_estoque_w			double precision;
vl_custo_medio_w			double precision;
vl_ultima_compra_w		double precision;
cd_unidade_medida_movto_w	varchar(30);
cd_unidade_medida_estoque_w	varchar(30);
qt_movimento_w			double precision;
vl_estoque_w			double precision;
nr_movimento_estoque_w		bigint;
ie_erro_w				varchar(255);
ds_erro_w			varchar(255);
qt_existe_w			integer;
ds_lote_fornec_w			varchar(20);
dt_validade_w			timestamp;
ie_indeterminado_w			varchar(1);
nr_seq_lote_w			bigint;
ie_grava_lote_w			varchar(1);
ie_estoque_lote_w			varchar(1);
ds_barras_w			varchar(4000);
dt_movimento_estoque_ww		timestamp;

c01 CURSOR FOR
SELECT	cd_estabelecimento,
	cd_local_estoque,
	cd_centro_custo,
	cd_material,
	cd_fornecedor,
	qt_estoque,
	vl_custo_medio,
	vl_ultima_compra,
	ds_lote_fornec,
	dt_validade,
	ds_barras,
	dt_movimento_estoque
from	sup_impl_estoque;


BEGIN

if (ie_tipo_p = 0) then
	begin
	cd_operacao_estoque_w	:= cd_operacao_estoque_p;
	dt_mesano_referencia_w	:= trunc(dt_referencia_p, 'mm');
	dt_movimento_estoque_w	:= dt_referencia_p;
	dt_processo_w		:= dt_referencia_p;

	open c01;
	loop
	fetch c01 into
		cd_estabelecimento_w,
		cd_local_estoque_w,
		cd_centro_custo_w,
		cd_material_w,
		cd_fornecedor_w,
		qt_estoque_w,
		vl_custo_medio_w,
		vl_ultima_compra_w,
		ds_lote_fornec_w,
		dt_validade_w,
		ds_barras_w,
		dt_movimento_estoque_ww;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin	
		
		select	count(*)
		into STRICT	qt_existe_w
		from	parametro_estoque
		where	cd_estabelecimento		= cd_estabelecimento_w
		and	dt_mesano_vigente		= dt_mesano_referencia_w;
		if (qt_existe_w = 0) then
			update	parametro_estoque
			set	dt_mesano_vigente		= dt_mesano_referencia_w
			where	cd_estabelecimento		= cd_estabelecimento_w;
		end if;

		select	cd_material_estoque,
			substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque
		into STRICT	cd_material_estoque_w,
			cd_unidade_medida_estoque_w
		from	material
		where	cd_material = cd_material_w;

		cd_unidade_medida_movto_w	:= cd_unidade_medida_estoque_w;
		qt_movimento_w			:= qt_estoque_w;
		vl_estoque_w			:= qt_estoque_w * vl_custo_medio_w;

		select	nextval('movimento_estoque_seq')
		into STRICT	nr_movimento_estoque_w
		;

		insert into movimento_estoque(
			nr_movimento_estoque,			cd_estabelecimento,
			cd_local_estoque,				dt_movimento_estoque,
			cd_operacao_estoque,			cd_acao,
			cd_material,				dt_mesano_referencia,
			qt_movimento,				dt_atualizacao,
			nm_usuario,				ie_origem_documento,
			nr_documento,				nr_sequencia_item_docto,
			cd_unidade_medida_estoque,			qt_estoque,
			cd_unidade_med_mov,			cd_material_estoque,
			dt_processo)
		values (	nr_movimento_estoque_w,			cd_estabelecimento_w,
			cd_local_estoque_w,			dt_movimento_estoque_w,
			cd_operacao_estoque_w,			1,
			cd_material_w,				dt_mesano_referencia_w,
			qt_movimento_w,				clock_timestamp(),
			nm_usuario_p,				12,
			nr_movimento_estoque_w,			1,
			cd_unidade_medida_estoque_w,		qt_estoque_w,
			cd_unidade_medida_movto_w,		cd_material_estoque_w,
			dt_processo_w);

		insert into movimento_estoque_valor(
			nr_movimento_estoque,			cd_tipo_valor,
			vl_movimento,				dt_atualizacao,
			nm_usuario)
		values (	nr_movimento_estoque_w,			1,
			vl_estoque_w,				clock_timestamp(),
			nm_usuario_p);
				
		SELECT * FROM atualizar_saldo(
			cd_estabelecimento_w, cd_local_estoque_w, cd_material_estoque_w, dt_mesano_referencia_w, cd_operacao_estoque_w, qt_estoque_w, 1, nm_usuario_p, ie_erro_w, ds_erro_w) INTO STRICT ie_erro_w, ds_erro_w;

		if (coalesce(vl_ultima_compra_w, 0) > 0) then
			update	saldo_estoque
			set	vl_preco_ult_compra	= vl_ultima_compra_w
			where	cd_estabelecimento		= cd_estabelecimento_w
			and	cd_local_estoque		= cd_local_estoque_w
			and	dt_mesano_referencia	= dt_mesano_referencia_w
			and	cd_material		= cd_material_estoque_w;
		end if;
		end;
	end loop;
	close c01;
	end;
elsif (ie_tipo_p = 1) then
	begin
	cd_operacao_estoque_w	:= cd_operacao_estoque_p;
	dt_mesano_referencia_w	:= trunc(dt_referencia_p, 'mm');
	dt_movimento_estoque_w	:= dt_referencia_p;
	dt_processo_w		:= dt_referencia_p;

	open c01;
	loop
	fetch c01 into
		cd_estabelecimento_w,
		cd_local_estoque_w,
		cd_centro_custo_w,
		cd_material_w,
		cd_fornecedor_w,
		qt_estoque_w,
		vl_custo_medio_w,
		vl_ultima_compra_w,
		ds_lote_fornec_w,
		dt_validade_w,
		ds_barras_w,
		dt_movimento_estoque_ww;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select	count(*)
		into STRICT	qt_existe_w
		from	parametro_estoque
		where	cd_estabelecimento		= cd_estabelecimento_w
		and	dt_mesano_vigente		= dt_mesano_referencia_w;
		if (qt_existe_w = 0) then
			update	parametro_estoque
			set	dt_mesano_vigente		= dt_mesano_referencia_w
			where	cd_estabelecimento		= cd_estabelecimento_w;
		end if;

		select	cd_material_estoque,
			substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque
		into STRICT	cd_material_estoque_w,
			cd_unidade_medida_estoque_w
		from	material
		where	cd_material = cd_material_w;

		cd_unidade_medida_movto_w	:= cd_unidade_medida_estoque_w;
		qt_movimento_w			:= qt_estoque_w;
		vl_estoque_w			:= qt_estoque_w * vl_custo_medio_w;
		cd_cgc_emitente_w		:= cd_fornecedor_w;

		select	nextval('movimento_estoque_seq')
		into STRICT	nr_movimento_estoque_w
		;

		insert into movimento_estoque(
			nr_movimento_estoque,			cd_estabelecimento,
			cd_local_estoque,				dt_movimento_estoque,
			cd_operacao_estoque,			cd_acao,
			cd_material,				dt_mesano_referencia,
			qt_movimento,				dt_atualizacao,
			nm_usuario,				ie_origem_documento,
			nr_documento,				nr_sequencia_item_docto,
			cd_unidade_medida_estoque,			qt_estoque,
			cd_unidade_med_mov,			cd_material_estoque,
			dt_processo,				cd_cgc_emitente,
			cd_fornecedor)
		values (	nr_movimento_estoque_w,			cd_estabelecimento_w,
			cd_local_estoque_w,			dt_movimento_estoque_w,
			cd_operacao_estoque_w,			1,
			cd_material_w,				dt_mesano_referencia_w,
			qt_movimento_w,				clock_timestamp(),
			nm_usuario_p,				12,
			nr_movimento_estoque_w,			1,
			cd_unidade_medida_estoque_w,		qt_estoque_w,
			cd_unidade_medida_movto_w,		cd_material_estoque_w,
			dt_processo_w,				cd_cgc_emitente_w,
			cd_cgc_emitente_w);

		insert into movimento_estoque_valor(
			nr_movimento_estoque,			cd_tipo_valor,
			vl_movimento,				dt_atualizacao,
			nm_usuario)
		values (	nr_movimento_estoque_w,			1,
			vl_estoque_w,				clock_timestamp(),
			nm_usuario_p);


		ie_erro_w := atualizar_saldo_consig(
			cd_estabelecimento_w, cd_local_estoque_w, cd_cgc_emitente_w, cd_material_estoque_w, dt_mesano_referencia_w, cd_operacao_estoque_w, qt_estoque_w, 1, nm_usuario_p, ie_erro_w);

		if (coalesce(vl_ultima_compra_w, 0) > 0) then
			update	fornecedor_mat_consignado
			set	vl_preco_ult_compra	= vl_ultima_compra_w
			where	cd_estabelecimento		= cd_estabelecimento_w
			and	cd_local_estoque		= cd_local_estoque_w
			and	dt_mesano_referencia	= dt_mesano_referencia_w
			and	cd_material		= cd_material_estoque_w
			and	cd_fornecedor		= cd_cgc_emitente_w;
		end if;
		end;
	end loop;
	close c01;
	end;
elsif (ie_tipo_p = 2) then
	begin
	delete from sup_impl_cm;
	insert into sup_impl_cm(
		nr_sequencia,
		cd_estabelecimento,
		cd_material,
		cd_material_planilha,
		vl_custo_medio)
	SELECT	nr_sequencia,
		cd_estabelecimento,
		cd_material,
		cd_material_planilha,
		vl_custo_medio
	from	sup_impl_estoque;

	end;
elsif (ie_tipo_p = 5) then
	begin
	cd_operacao_estoque_w	:= cd_operacao_estoque_p;
	cd_operacao_saida_w	:= cd_operacao_saida_p;
	dt_mesano_referencia_w	:= trunc(dt_referencia_p, 'mm');
	dt_movimento_estoque_w	:= dt_referencia_p;
	dt_processo_w		:= dt_referencia_p;

	open c01;
	loop
	fetch c01 into
		cd_estabelecimento_w,
		cd_local_estoque_w,
		cd_centro_custo_w,
		cd_material_w,
		cd_fornecedor_w,
		qt_estoque_w,
		vl_custo_medio_w,
		vl_ultima_compra_w,
		ds_lote_fornec_w,
		dt_validade_w,
		ds_barras_w,
		dt_movimento_estoque_ww;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select	count(*)
		into STRICT	qt_existe_w
		from	parametro_estoque
		where	cd_estabelecimento		= cd_estabelecimento_w
		and	dt_mesano_vigente		= dt_mesano_referencia_w;
		if (qt_existe_w = 0) then
			update	parametro_estoque
			set	dt_mesano_vigente		= dt_mesano_referencia_w
			where	cd_estabelecimento		= cd_estabelecimento_w;
		end if;

		select	cd_material_estoque,
			substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque
		into STRICT	cd_material_estoque_w,
			cd_unidade_medida_estoque_w
		from	material
		where	cd_material = cd_material_w;

		cd_unidade_medida_movto_w	:= cd_unidade_medida_estoque_w;
		qt_movimento_w			:= qt_estoque_w;
		vl_estoque_w			:= qt_estoque_w * vl_custo_medio_w;


		select	nextval('movimento_estoque_seq')
		into STRICT	nr_movimento_estoque_w
		;

		insert into movimento_estoque(
			nr_movimento_estoque,			cd_estabelecimento,
			cd_local_estoque,				dt_movimento_estoque,
			cd_operacao_estoque,			cd_acao,
			cd_material,				dt_mesano_referencia,
			qt_movimento,				dt_atualizacao,
			nm_usuario,				ie_origem_documento,
			nr_documento,				nr_sequencia_item_docto,
			cd_unidade_medida_estoque,			qt_estoque,
			cd_unidade_med_mov,			cd_material_estoque,
			dt_processo,				cd_centro_custo)
		values (	nr_movimento_estoque_w,			cd_estabelecimento_w,
			cd_local_estoque_w,			dt_movimento_estoque_w,
			cd_operacao_estoque_w,			1,
			cd_material_w,				dt_mesano_referencia_w,
			qt_movimento_w,				clock_timestamp(),
			nm_usuario_p,				12,
			nr_movimento_estoque_w,			1,
			cd_unidade_medida_estoque_w,		qt_estoque_w,
			cd_unidade_medida_movto_w,		cd_material_estoque_w,
			dt_processo_w,				cd_centro_custo_w);


		select	nextval('movimento_estoque_seq')
		into STRICT	nr_movimento_estoque_w
		;

		insert into movimento_estoque(
			nr_movimento_estoque,			cd_estabelecimento,
			cd_local_estoque,				dt_movimento_estoque,
			cd_operacao_estoque,			cd_acao,
			cd_material,				dt_mesano_referencia,
			qt_movimento,				dt_atualizacao,
			nm_usuario,				ie_origem_documento,
			nr_documento,				nr_sequencia_item_docto,
			cd_unidade_medida_estoque,			qt_estoque,
			cd_unidade_med_mov,			cd_material_estoque,
			dt_processo,				cd_centro_custo)
		values (	nr_movimento_estoque_w,			cd_estabelecimento_w,
			cd_local_estoque_w,			dt_movimento_estoque_w,
			cd_operacao_saida_w,			1,
			cd_material_w,				dt_mesano_referencia_w,
			qt_movimento_w,				clock_timestamp(),
			nm_usuario_p,				12,
			nr_movimento_estoque_w,			1,
			cd_unidade_medida_estoque_w,		qt_estoque_w,
			cd_unidade_medida_movto_w,		cd_material_estoque_w,
			dt_processo_w,				cd_centro_custo_w);


		end;
	end loop;
	close c01;
	end;
elsif (ie_tipo_p = 8) then
	begin
	cd_operacao_estoque_w	:= cd_operacao_estoque_p;
	cd_operacao_saida_w	:= cd_operacao_saida_p;

	open c01;
	loop
	fetch c01 into
		cd_estabelecimento_w,
		cd_local_estoque_w,
		cd_centro_custo_w,
		cd_material_w,
		cd_fornecedor_w,
		qt_estoque_w,
		vl_custo_medio_w,
		vl_ultima_compra_w,
		ds_lote_fornec_w,
		dt_validade_w,
		ds_barras_w,
		dt_movimento_estoque_ww;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		dt_movimento_estoque_w	:= dt_movimento_estoque_ww;
		dt_processo_w		:= dt_movimento_estoque_ww;
		dt_mesano_referencia_w	:= trunc(dt_movimento_estoque_ww, 'mm');
		
		select	count(*)
		into STRICT	qt_existe_w
		from	parametro_estoque
		where	cd_estabelecimento		= cd_estabelecimento_w
		and	dt_mesano_vigente		= dt_mesano_referencia_w;
		if (qt_existe_w = 0) then
			update	parametro_estoque
			set	dt_mesano_vigente		= dt_mesano_referencia_w
			where	cd_estabelecimento		= cd_estabelecimento_w;
		end if;

		select	cd_material_estoque,
			substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque
		into STRICT	cd_material_estoque_w,
			cd_unidade_medida_estoque_w
		from	material
		where	cd_material = cd_material_w;

		cd_unidade_medida_movto_w	:= cd_unidade_medida_estoque_w;
		qt_movimento_w			:= qt_estoque_w;
		vl_estoque_w			:= qt_estoque_w * vl_custo_medio_w;


		select	nextval('movimento_estoque_seq')
		into STRICT	nr_movimento_estoque_w
		;

		insert into movimento_estoque(
			nr_movimento_estoque,			cd_estabelecimento,
			cd_local_estoque,			dt_movimento_estoque,
			cd_operacao_estoque,			cd_acao,
			cd_material,				dt_mesano_referencia,
			qt_movimento,				dt_atualizacao,
			nm_usuario,				ie_origem_documento,
			nr_documento,				nr_sequencia_item_docto,
			cd_unidade_medida_estoque,		qt_estoque,
			cd_unidade_med_mov,			cd_material_estoque,
			dt_processo,				cd_centro_custo)
		values (	nr_movimento_estoque_w,			cd_estabelecimento_w,
			cd_local_estoque_w,			dt_movimento_estoque_w,
			cd_operacao_estoque_w,			1,
			cd_material_w,				dt_mesano_referencia_w,
			qt_movimento_w,				clock_timestamp(),
			nm_usuario_p,				12,
			nr_movimento_estoque_w,			1,
			cd_unidade_medida_estoque_w,		qt_estoque_w,
			cd_unidade_medida_movto_w,		cd_material_estoque_w,
			dt_processo_w,				cd_centro_custo_w);


		select	nextval('movimento_estoque_seq')
		into STRICT	nr_movimento_estoque_w
		;

		insert into movimento_estoque(
			nr_movimento_estoque,			cd_estabelecimento,
			cd_local_estoque,				dt_movimento_estoque,
			cd_operacao_estoque,			cd_acao,
			cd_material,				dt_mesano_referencia,
			qt_movimento,				dt_atualizacao,
			nm_usuario,				ie_origem_documento,
			nr_documento,				nr_sequencia_item_docto,
			cd_unidade_medida_estoque,			qt_estoque,
			cd_unidade_med_mov,			cd_material_estoque,
			dt_processo,				cd_centro_custo)
		values (	nr_movimento_estoque_w,			cd_estabelecimento_w,
			cd_local_estoque_w,			dt_movimento_estoque_w,
			cd_operacao_saida_w,			1,
			cd_material_w,				dt_mesano_referencia_w,
			qt_movimento_w,				clock_timestamp(),
			nm_usuario_p,				12,
			nr_movimento_estoque_w,			1,
			cd_unidade_medida_estoque_w,		qt_estoque_w,
			cd_unidade_medida_movto_w,		cd_material_estoque_w,
			dt_processo_w,				cd_centro_custo_w);


		end;
	end loop;
	close c01;
	end;
elsif (ie_tipo_p = 6) then	
	begin
	open c01;
	loop
	fetch c01 into	
		cd_estabelecimento_w,
		cd_local_estoque_w,
		cd_centro_custo_w,
		cd_material_w,
		cd_fornecedor_w,
		qt_estoque_w,
		vl_custo_medio_w,
		vl_ultima_compra_w,
		ds_lote_fornec_w,
		dt_validade_w,
		ds_barras_w,
		dt_movimento_estoque_ww;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		ie_grava_lote_w	:= 'N';
		ie_indeterminado_w	:= 'N';
		
		if (coalesce(dt_validade_w::text, '') = '') then
			begin
			ie_indeterminado_w := 'S';
			
			update	material_lote_fornec
			set	qt_material = (qt_material + qt_estoque_w)
			where	ie_origem_lote = 'A'
			and	coalesce(dt_validade::text, '') = ''
			and	cd_cgc_fornec = cd_fornecedor_w
			and	ds_lote_fornec = ds_lote_fornec_w
			and	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estabelecimento_w
			and	ds_barras = ds_barras_w;
			if (NOT FOUND) then
				ie_grava_lote_w	:= 'S';
			end if;
			end;
		else
			begin
			update	material_lote_fornec
			set	qt_material = (qt_material + qt_estoque_w)
			where	ie_origem_lote = 'A'
			and	dt_validade = dt_validade_w
			and	cd_cgc_fornec = cd_fornecedor_w
			and	ds_lote_fornec = ds_lote_fornec_w
			and	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estabelecimento_w
			and	ds_barras = ds_barras_w;
			if (NOT FOUND) then
				ie_grava_lote_w	:= 'S';
			end if;
			end;
		end if;
		
		if (ie_grava_lote_w = 'S') then
			begin
			select	nextval('material_lote_fornec_seq')
			into STRICT	nr_seq_lote_w
			;
			
			insert into material_lote_fornec(
				nr_sequencia,
				cd_material,
				ie_origem_lote,
				nr_digito_verif,
				dt_atualizacao,
				nm_usuario,
				ds_lote_fornec,
				dt_validade,
				cd_cgc_fornec,
				qt_material,
				cd_estabelecimento,
				ie_validade_indeterminada,
				ie_situacao,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_barras)
			values (	nr_seq_lote_w,
				cd_material_w,
				'A',
				calcula_digito('Modulo11', nr_seq_lote_w),
				clock_timestamp(),
				nm_usuario_p,
				ds_lote_fornec_w,
				dt_validade_w,
				cd_fornecedor_w,
				qt_estoque_w,
				cd_estabelecimento_w,
				ie_indeterminado_w,
				'A',
				clock_timestamp(),
				nm_usuario_p,
				ds_barras_w);
			end;
		end if;
		end;
	end loop;
	close c01;
	end;
elsif (ie_tipo_p = 7) then
	begin
	cd_operacao_estoque_w	:= cd_operacao_estoque_p;
	dt_mesano_referencia_w	:= trunc(dt_referencia_p, 'mm');
	dt_movimento_estoque_w	:= dt_referencia_p;
	dt_processo_w		:= dt_referencia_p;

	open c01;
	loop
	fetch c01 into
		cd_estabelecimento_w,
		cd_local_estoque_w,
		cd_centro_custo_w,
		cd_material_w,
		cd_fornecedor_w,
		qt_estoque_w,
		vl_custo_medio_w,
		vl_ultima_compra_w,
		ds_lote_fornec_w,
		dt_validade_w,
		ds_barras_w,
		dt_movimento_estoque_ww;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin	
		ie_indeterminado_w	:= 'N';
		
		if (coalesce(dt_validade_w::text, '') = '') then
			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_lote_w
			from	material_lote_fornec
			where	coalesce(dt_validade::text, '') = ''
			and	cd_cgc_fornec = cd_fornecedor_w
			and	ds_lote_fornec = ds_lote_fornec_w
			and	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estabelecimento_w
			and	ie_situacao = 'A';
		else
			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_lote_w
			from	material_lote_fornec
			where	dt_validade = dt_validade_w
			and	cd_cgc_fornec = cd_fornecedor_w
			and	ds_lote_fornec = ds_lote_fornec_w
			and	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estabelecimento_w
			and	ie_situacao = 'A';
		end if;
		
		if (nr_seq_lote_w = 0) then
			begin
			
			if (coalesce(dt_validade_w::text, '') = '') then
				ie_indeterminado_w := 'S';
			end if;
			
			select	nextval('material_lote_fornec_seq')
			into STRICT	nr_seq_lote_w
			;
			
			insert into material_lote_fornec(
				nr_sequencia,
				cd_material,
				ie_origem_lote,
				nr_digito_verif,
				dt_atualizacao,
				nm_usuario,
				ds_lote_fornec,
				dt_validade,
				cd_cgc_fornec,
				qt_material,
				cd_estabelecimento,
				ie_validade_indeterminada,
				ie_situacao,
				dt_atualizacao_nrec,
				nm_usuario_nrec)
			values (	nr_seq_lote_w,
				cd_material_w,
				'A',
				calcula_digito('Modulo11', nr_seq_lote_w),
				clock_timestamp(),
				nm_usuario_p,
				ds_lote_fornec_w,
				dt_validade_w,
				cd_fornecedor_w,
				qt_estoque_w,
				cd_estabelecimento_w,
				ie_indeterminado_w,
				'A',
				clock_timestamp(),
				nm_usuario_p);			
			end;
		else
			
			update	material_lote_fornec
			set	qt_material = (qt_material + qt_estoque_w)
			where	nr_sequencia = nr_seq_lote_w;
			
		end if;		

		select	count(*)
		into STRICT	qt_existe_w
		from	parametro_estoque
		where	cd_estabelecimento		= cd_estabelecimento_w
		and	dt_mesano_vigente		= dt_mesano_referencia_w;

		if (qt_existe_w = 0) then
			update	parametro_estoque
			set	dt_mesano_vigente		= dt_mesano_referencia_w
			where	cd_estabelecimento		= cd_estabelecimento_w;
		end if;

		select	cd_material_estoque,
			substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque
		into STRICT	cd_material_estoque_w,
			cd_unidade_medida_estoque_w
		from	material
		where	cd_material = cd_material_w;

		cd_unidade_medida_movto_w	:= cd_unidade_medida_estoque_w;
		qt_movimento_w			:= qt_estoque_w;
		vl_estoque_w			:= qt_estoque_w * vl_custo_medio_w;

		select	nextval('movimento_estoque_seq')
		into STRICT	nr_movimento_estoque_w
		;

		insert into movimento_estoque(
			nr_movimento_estoque,		cd_estabelecimento,
			cd_local_estoque,			dt_movimento_estoque,
			cd_operacao_estoque,		cd_acao,
			cd_material,			dt_mesano_referencia,
			qt_movimento,			dt_atualizacao,
			nm_usuario,			ie_origem_documento,
			nr_documento,			nr_sequencia_item_docto,
			cd_unidade_medida_estoque,		qt_estoque,
			cd_unidade_med_mov,		cd_material_estoque,
			dt_processo,			nr_seq_lote_fornec,
			cd_lote_fabricacao,			dt_validade)
		values (	nr_movimento_estoque_w,		cd_estabelecimento_w,
			cd_local_estoque_w,		dt_movimento_estoque_w,
			cd_operacao_estoque_w,		1,
			cd_material_w,			dt_mesano_referencia_w,
			qt_movimento_w,			clock_timestamp(),
			nm_usuario_p,			12,
			nr_movimento_estoque_w,		1,
			cd_unidade_medida_estoque_w,	qt_estoque_w,
			cd_unidade_medida_movto_w,	cd_material_estoque_w,
			dt_processo_w,			nr_seq_lote_w,
			ds_lote_fornec_w,			dt_validade_w);

		insert into movimento_estoque_valor(
			nr_movimento_estoque,		cd_tipo_valor,
			vl_movimento,			dt_atualizacao,
			nm_usuario)
		values (	nr_movimento_estoque_w,		1,
			vl_estoque_w,			clock_timestamp(),
			nm_usuario_p);
				
		SELECT * FROM atualizar_saldo(
			cd_estabelecimento_w, cd_local_estoque_w, cd_material_estoque_w, dt_mesano_referencia_w, cd_operacao_estoque_w, qt_estoque_w, 1, nm_usuario_p, ie_erro_w, ds_erro_w) INTO STRICT ie_erro_w, ds_erro_w;
			
		select	coalesce(max(ie_estoque_lote),'N')
		into STRICT	ie_estoque_lote_w
		from	material_estab
		where	cd_material = cd_material_estoque_w
		and	cd_estabelecimento = cd_estabelecimento_w;
		
		if (ie_estoque_lote_w = 'S') then
			ie_erro_w := atualizar_saldo_lote(
				cd_estabelecimento_w, cd_local_estoque_w, cd_material_estoque_w, dt_mesano_referencia_w, nr_seq_lote_w, cd_operacao_estoque_w, qt_estoque_w, 1, nm_usuario_p, ie_erro_w);
		end if;

		if (coalesce(vl_ultima_compra_w, 0) > 0) then
			update	saldo_estoque
			set	vl_preco_ult_compra	= vl_ultima_compra_w
			where	cd_estabelecimento		= cd_estabelecimento_w
			and	cd_local_estoque		= cd_local_estoque_w
			and	dt_mesano_referencia	= dt_mesano_referencia_w
			and	cd_material		= cd_material_estoque_w;
		end if;
		end;
	end loop;
	close c01;
	end;
elsif (ie_tipo_p = 9) then
	begin
	cd_operacao_estoque_w	:= cd_operacao_estoque_p;
	dt_mesano_referencia_w	:= trunc(dt_referencia_p, 'mm');
	dt_movimento_estoque_w	:= dt_referencia_p;
	dt_processo_w		:= dt_referencia_p;

	open c01;
	loop
	fetch c01 into
		cd_estabelecimento_w,
		cd_local_estoque_w,
		cd_centro_custo_w,
		cd_material_w,
		cd_fornecedor_w,
		qt_estoque_w,
		vl_custo_medio_w,
		vl_ultima_compra_w,
		ds_lote_fornec_w,
		dt_validade_w,
		ds_barras_w,
		dt_movimento_estoque_ww;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select	count(*)
		into STRICT	qt_existe_w
		from	parametro_estoque
		where	cd_estabelecimento		= cd_estabelecimento_w
		and	dt_mesano_vigente		= dt_mesano_referencia_w;
		if (qt_existe_w = 0) then
			update	parametro_estoque
			set	dt_mesano_vigente		= dt_mesano_referencia_w
			where	cd_estabelecimento		= cd_estabelecimento_w;
		end if;

		select	cd_material_estoque,
			substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque
		into STRICT	cd_material_estoque_w,
			cd_unidade_medida_estoque_w
		from	material
		where	cd_material = cd_material_w;

        if (coalesce(dt_validade_w::text, '') = '') then
			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_lote_w
			from	material_lote_fornec
			where	coalesce(dt_validade::text, '') = ''
			and	cd_cgc_fornec = cd_fornecedor_w
			and	ds_lote_fornec = ds_lote_fornec_w
			and	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estabelecimento_w
			and	ie_situacao = 'A';
		else
			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_lote_w
			from	material_lote_fornec
			where	dt_validade = dt_validade_w
			and	cd_cgc_fornec = cd_fornecedor_w
			and	ds_lote_fornec = ds_lote_fornec_w
			and	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estabelecimento_w
			and	ie_situacao = 'A';
		end if;

		cd_unidade_medida_movto_w	:= cd_unidade_medida_estoque_w;
		qt_movimento_w			:= qt_estoque_w;
		vl_estoque_w			:= qt_estoque_w * vl_custo_medio_w;
		cd_cgc_emitente_w		:= cd_fornecedor_w;

		select	nextval('movimento_estoque_seq')
		into STRICT	nr_movimento_estoque_w
		;

		insert into movimento_estoque(
			nr_movimento_estoque,			cd_estabelecimento,
			cd_local_estoque,				dt_movimento_estoque,
			cd_operacao_estoque,			cd_acao,
			cd_material,				dt_mesano_referencia,
			qt_movimento,				dt_atualizacao,
			nm_usuario,				ie_origem_documento,
			nr_documento,				nr_sequencia_item_docto,
			cd_unidade_medida_estoque,			qt_estoque,
			cd_unidade_med_mov,			cd_material_estoque,
			dt_processo,				cd_cgc_emitente,
			cd_fornecedor,				nr_seq_lote_fornec)
		values (	nr_movimento_estoque_w,			cd_estabelecimento_w,
			cd_local_estoque_w,			dt_movimento_estoque_w,
			cd_operacao_estoque_w,			1,
			cd_material_w,				dt_mesano_referencia_w,
			qt_movimento_w,				clock_timestamp(),
			nm_usuario_p,				12,
			nr_movimento_estoque_w,			1,
			cd_unidade_medida_estoque_w,		qt_estoque_w,
			cd_unidade_medida_movto_w,		cd_material_estoque_w,
			dt_processo_w,				cd_cgc_emitente_w,
			cd_cgc_emitente_w,			nr_seq_lote_w);

		insert into movimento_estoque_valor(
			nr_movimento_estoque,			cd_tipo_valor,
			vl_movimento,				dt_atualizacao,
			nm_usuario)
		values (	nr_movimento_estoque_w,			1,
			vl_estoque_w,				clock_timestamp(),
			nm_usuario_p);

		ie_erro_w := atualizar_saldo_consig(
			cd_estabelecimento_w, cd_local_estoque_w, cd_cgc_emitente_w, cd_material_estoque_w, dt_mesano_referencia_w, cd_operacao_estoque_w, qt_estoque_w, 1, nm_usuario_p, ie_erro_w);

        ie_erro_w := atualizar_saldo_consig_lote(
            cd_estabelecimento_w, cd_local_estoque_w, cd_cgc_emitente_w, cd_material_estoque_w, dt_mesano_referencia_w, nr_seq_lote_w, cd_operacao_estoque_w, qt_estoque_w, 1, nm_usuario_p, ie_erro_w);

		if (coalesce(vl_ultima_compra_w, 0) > 0) then
			update	fornecedor_mat_consignado
			set	vl_preco_ult_compra	= vl_ultima_compra_w
			where	cd_estabelecimento		= cd_estabelecimento_w
			and	cd_local_estoque		= cd_local_estoque_w
			and	dt_mesano_referencia	= dt_mesano_referencia_w
			and	cd_material		= cd_material_estoque_w
			and	cd_fornecedor		= cd_cgc_emitente_w;
		end if;
		end;
	end loop;
	close c01;
	end;
end if;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_sup_impl_saldos ( ie_tipo_p bigint, cd_operacao_estoque_p bigint, cd_operacao_saida_p bigint, dt_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

