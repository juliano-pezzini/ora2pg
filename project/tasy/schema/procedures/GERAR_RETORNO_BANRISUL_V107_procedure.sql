-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_retorno_banrisul_v107 (nr_seq_banco_escrit_p bigint, nm_usuario_p text) AS $body$
DECLARE


subtype param_char is varchar(2);

cd_reg_favorecido_w		banco_retorno_cp.cd_reg_favorecido%type;
cd_conf_envio_w			banco_retorno_cp.cd_conf_envio%type;
cd_retorno_liq_w		banco_retorno_cp.cd_retorno_liq%type;

nr_titulo_w				titulo_pagar_escrit.nr_titulo%type;
cd_tipo_baixa_w			parametros_contas_pagar.cd_tipo_baixa_padrao%type;
nr_seq_trans_escrit_w	banco_escritural.nr_seq_trans_financ%type;
nr_seq_conta_banco_w	banco_escritural.nr_seq_conta_banco%type;
nr_sequencia_w			titulo_pagar_baixa.nr_sequencia%type;
dt_pagamento_w			timestamp;
vl_pagamento_w			titulo_pagar_escrit.vl_escritural%type;
vl_real_w				titulo_pagar.vl_titulo%type;
ds_forma_pagto_w		param_char;

cd_estabelecimento_w		banco_escritural.cd_estabelecimento%type;
nr_sequencia_inicial_w		w_retorno_banco.nr_sequencia%type;
nr_sequencia_final_w		w_retorno_banco.nr_sequencia%type;
vl_saldo_titulo_w			titulo_pagar.vl_saldo_titulo%type;
vl_imposto_w				w_titulo_pagar_imposto.vl_imposto%type;
qt_titulo_w					integer;
vl_despesa_w				titulo_pagar.vl_outras_despesas%type;
vl_acrescimo_w				titulo_pagar.vl_outros_acrescimos%type;
ie_vl_associado_w			param_char;
qt_baixa_w					integer;
ie_movto_bco_pag_escrit_w	parametros_contas_pagar.ie_movto_bco_pag_escrit%type;
cd_banco_w				banco_escritural.cd_banco%type;
ie_bloquear_titulo_w		erro_escritural.ie_bloquear_titulo%type;
ie_excluir_titulo_w			erro_escritural.ie_excluir_titulo%type;


c01 CURSOR FOR
SELECT	nr_sequencia nr_sequencia,
	substr(ds_string,12,2) ds_forma_pagto
from	w_retorno_banco
where	substr(ds_string, 8, 1)	= '1'
and	nr_seq_banco_escrit		= nr_seq_banco_escrit_p
order	by nr_sequencia;

c02 CURSOR FOR
SELECT	nr_sequencia,
  substr(ds_string,79,15) ds_nr_titulo,
	substr(ds_string,94,8) ds_dt_pagamento,
	substr(ds_string,120,15) ds_vl_pagamento,
	substr(ds_string,231,2) ds_ocorrencia,
	substr(ds_string,120,15) ds_vl_real
from	w_retorno_banco
where	substr(ds_string, 14, 1)	= 'A'
and	substr(ds_string, 8, 1)	= '3'
and	nr_seq_banco_escrit		= nr_seq_banco_escrit_p
and	ds_forma_pagto_w		in ('01','03','41','07','06','43','05')
and	nr_sequencia			> nr_sequencia_inicial_w
and	nr_sequencia			< nr_sequencia_final_w 		-- pagamento em doc/ted/cc/cp
union

select	nr_sequencia,
  substr(ds_string,183,20) ds_nr_titulo,
	substr(ds_string,145,8) ds_dt_pagamento,
	substr(ds_string,153,15) ds_vl_pagamento,
	substr(ds_string,231,2) ds_ocorrencia,
	null ds_vl_real
from	w_retorno_banco
where	substr(ds_string, 14, 1)	= 'J'
and substr(ds_string,18,2)  <> '52'
and	substr(ds_string, 8, 1)	= '3'
and	nr_seq_banco_escrit		= nr_seq_banco_escrit_p
and	ds_forma_pagto_w		in ('30','31')
and	nr_sequencia			> nr_sequencia_inicial_w
and	nr_sequencia			< nr_sequencia_final_w 		-- pagamento com bloqueto
union

select	nr_sequencia,
  substr(ds_string,123,20) ds_nr_titulo,
	substr(ds_string,100,8) ds_dt_pagamento,
	substr(ds_string,108,15) ds_vl_pagamento,
	substr(ds_string,231,2) ds_ocorrencia,
	null ds_vl_real
from	w_retorno_banco
where	substr(ds_string, 14, 1)	= 'O'
and	substr(ds_string, 8, 1)	= '3'
and	nr_seq_banco_escrit		= nr_seq_banco_escrit_p
and	ds_forma_pagto_w		= '11'
and	nr_sequencia			> nr_sequencia_inicial_w
and	nr_sequencia			< nr_sequencia_final_w 		-- pagamento com bloqueto
union

select	nr_sequencia,
  substr(ds_string,18,20) ds_nr_titulo,
	substr(ds_string,88,8) ds_dt_pagamento,
	substr(ds_string,96,15) ds_vl_pagamento,
	substr(ds_string,231,2) ds_ocorrencia,
	null ds_vl_real
from	w_retorno_banco
where	substr(ds_string, 14, 1)	= 'N'
and	substr(ds_string, 8, 1)	= '3'
and	nr_seq_banco_escrit		= nr_seq_banco_escrit_p
and	ds_forma_pagto_w		in ('16','17')
and	nr_sequencia			> nr_sequencia_inicial_w
and	nr_sequencia			< nr_sequencia_final_w 		-- pagamento sem bloqueto
order	by nr_sequencia;
BEGIN

begin
  select	b.cd_reg_favorecido,
    b.cd_conf_envio,
    b.cd_retorno_liq,
    a.cd_estabelecimento,
    a.nr_seq_conta_banco,
    a.nr_seq_trans_financ,
    a.cd_banco
  into STRICT	cd_reg_favorecido_w,
    cd_conf_envio_w,
    cd_retorno_liq_w,
    cd_estabelecimento_w,
    nr_seq_conta_banco_w,
    nr_seq_trans_escrit_w,
    cd_banco_w
  from	banco_retorno_cp b,
    banco_escritural a
  where	a.cd_banco		= b.cd_banco
  and	a.nr_sequencia		= nr_seq_banco_escrit_p;
  exception
  when no_data_found then
    /* Cadastro do retorno de pagamento escritural nao encontrado! Verifica os cadastros financeiros. */

    CALL wheb_mensagem_pck.exibir_mensagem_abort(198870);
  when too_many_rows then raise;
end;

if (coalesce(nr_seq_trans_escrit_w::text, '') = '') then

	select	nr_seq_trans_escrit
	into STRICT	nr_seq_trans_escrit_w
	from	parametro_tesouraria
	where	cd_estabelecimento	= cd_estabelecimento_w;

end if;

begin
  select	coalesce(cd_tipo_baixa_padrao, 1),
      coalesce(ie_movto_bco_pag_escrit,'T')
  into STRICT	cd_tipo_baixa_w,
      ie_movto_bco_pag_escrit_w
  from	parametros_contas_pagar
  where	cd_estabelecimento	= cd_estabelecimento_w;
  exception
  when no_data_found then raise;
  when too_many_rows then raise;
end;

ie_vl_associado_w := obter_param_usuario(857, 33, Obter_Perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_vl_associado_w);

<<reg_lote01_w>>
for reg_lote01_w in C01
loop

	nr_sequencia_inicial_w := reg_lote01_w.nr_sequencia;
	ds_forma_pagto_w := reg_lote01_w.ds_forma_pagto;

	begin

	select	min(nr_sequencia)
	into STRICT	nr_sequencia_final_w
	from	w_retorno_banco
	where	substr(ds_string, 8, 1)	<> '3'
	and	nr_seq_banco_escrit		= nr_seq_banco_escrit_p
	and	nr_sequencia			> nr_sequencia_inicial_w;

	<<reg_lote02_w>>
	for reg_lote02_w in C02
	loop

		nr_titulo_w		:= (reg_lote02_w.ds_nr_titulo)::numeric;

		if (reg_lote02_w.ds_dt_pagamento	= '00000000') or (reg_lote02_w.ds_dt_pagamento	= '99999999') then
			dt_pagamento_w	:= clock_timestamp();
		else
			dt_pagamento_w	:= to_date(reg_lote02_w.ds_dt_pagamento, 'ddmmyyyy');
		end if;

		vl_pagamento_w		:= dividir_sem_round(((reg_lote02_w.ds_vl_pagamento)::numeric )::numeric, 100);
		vl_real_w		:= somente_numero(reg_lote02_w.ds_vl_real) / 100;

		select	coalesce(max(1),0)
		into STRICT	qt_titulo_w
		from	titulo_pagar_escrit a
		where	a.nr_titulo	= nr_titulo_w
		and	a.nr_seq_escrit	= nr_seq_banco_escrit_p;

		if (qt_titulo_w	= 0) then

			CALL gerar_titulo_escritural(nr_titulo_w,nr_seq_banco_escrit_p,nm_usuario_p);

		end if;

		update	titulo_pagar_escrit --NOSONAR
		set	ds_erro			= reg_lote02_w.ds_ocorrencia
		where	nr_seq_escrit		= nr_seq_banco_escrit_p
		and	nr_titulo		= nr_titulo_w;

		if (cd_retorno_liq_w = reg_lote02_w.ds_ocorrencia and coalesce(ie_movto_bco_pag_escrit_w,'T') = 'T') then
			
				select	sum(a.vl_imposto)
				into STRICT	vl_imposto_w
				from	tributo b,
					w_titulo_pagar_imposto a
				where	coalesce(b.ie_saldo_tit_pagar,'S')	= 'S'
				and	a.cd_tributo	= b.cd_tributo
				and	a.nr_seq_escrit	= nr_seq_banco_escrit_p
				and	a.nr_titulo	= nr_titulo_w;

				select	max(a.vl_saldo_titulo),
					max(a.vl_outras_despesas),
					max(a.vl_outros_acrescimos)
				into STRICT	vl_saldo_titulo_w,
					vl_despesa_w,
					vl_acrescimo_w
				from	titulo_pagar a
				where	a.nr_titulo	= nr_titulo_w;

				if	((coalesce(vl_pagamento_w,0) + coalesce(vl_imposto_w,0)) > coalesce(vl_saldo_titulo_w,0)) then

					vl_pagamento_w	:= coalesce(vl_pagamento_w,0) - coalesce(vl_imposto_w,0);

				end if;

				if (ie_vl_associado_w	= 'S') then

					vl_pagamento_w	:= coalesce(vl_pagamento_w,0) - coalesce(vl_despesa_w,0) - coalesce(vl_acrescimo_w,0);

				end if;

				if (coalesce(vl_pagamento_w,0)	= 0) then

					vl_pagamento_w	:= vl_real_w;

				end if;

				qt_baixa_w	:= coalesce(qt_baixa_w,0) + 1;

				CALL baixa_titulo_pagar(cd_estabelecimento_w,
						cd_tipo_baixa_w,
						nr_titulo_w,
						vl_pagamento_w,
						nm_usuario_p,
						nr_seq_trans_escrit_w,
						null,
						nr_seq_banco_escrit_p,
						dt_pagamento_w,
						nr_seq_conta_banco_w);

				select	max(nr_sequencia)
				into STRICT	nr_sequencia_w
				from	titulo_pagar_baixa
				where	nr_titulo	= nr_titulo_w;

				CALL gerar_movto_tit_baixa(nr_titulo_w,
						nr_sequencia_w,
						'P',
						nm_usuario_p,
						'N');

				CALL atualizar_saldo_tit_pagar(nr_titulo_w, nm_usuario_p);
				CALL Gerar_W_Tit_Pag_imposto(nr_titulo_w, nm_usuario_p);

		else

				SELECT * FROM consistir_erro_escritural(reg_lote02_w.ds_ocorrencia, nr_seq_banco_escrit_p, cd_banco_w, nr_titulo_w, cd_estabelecimento_w, nm_usuario_p, ie_bloquear_titulo_w, ie_excluir_titulo_w
				) INTO STRICT ie_bloquear_titulo_w, ie_excluir_titulo_w
				;
		end if;

	end loop reg_lote02_w;

	exception
	when others then --NOSONAR
		rollback;
		delete	from w_retorno_banco
		where	nr_seq_banco_escrit	= nr_seq_banco_escrit_p;
		commit;
		/* sqlerrm
		nr_titulo_w = nr_titulo_w
		dt_pagamento_w = dt_pagamento_w
		reg_lote02_w.ds_vl_pagamento = reg_lote02_w.ds_vl_pagamento */
		CALL wheb_mensagem_pck.exibir_mensagem_abort(nr_seq_mensagem_p => 198871,	vl_macros_p =>
								'SQL_ERRM=' || sqlerrm ||
								';NR_TITULO_W=' || nr_titulo_w ||
								';DS_DT_PAGAMENTO_W=' || to_char(dt_pagamento_w) ||
								';DS_VL_PAGAMENTO_W=' || to_char(vl_pagamento_w));
	end;
end loop reg_lote01_w;

if	((coalesce(ie_movto_bco_pag_escrit_w,'T') = 'T') and coalesce(qt_baixa_w,0) > 0) then

	update	banco_escritural
	set	dt_baixa	= clock_timestamp()
	where	nr_sequencia	= nr_seq_banco_escrit_p;

end if;

delete	from w_retorno_banco
where	nr_seq_banco_escrit	= nr_seq_banco_escrit_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_retorno_banrisul_v107 (nr_seq_banco_escrit_p bigint, nm_usuario_p text) FROM PUBLIC;

