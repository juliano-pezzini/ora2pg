-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_rel_livro_registro ( dt_inicio_p timestamp, dt_final_p timestamp, nm_usuario_p text) AS $body$
DECLARE

 
nr_atendimento_w			bigint;
nr_seq_registro_w			bigint;
dt_atendimento_w			timestamp;
cd_convenio_w				bigint;
ds_convenio_w				varchar(255);
ie_tipo_atendimento_w			varchar(3);
ds_tipo_atendimento_w			varchar(255);
cd_paciente_w				varchar(10);
nm_paciente_w				varchar(255);
nr_interno_conta_w			bigint;
nr_seq_protocolo_w			bigint;
nr_seq_nota_w				bigint;
cd_pessoa_resp_w			varchar(10);
nm_pessoa_resp_w			varchar(255);
ds_endereco_w				varchar(2000);
nr_telefone_w				varchar(255);
nr_nota_fiscal_w			varchar(255);
vl_total_nota_w				double precision;
dt_emissao_w				timestamp;
ds_observacao_w				varchar(4000);
dt_alta_w				timestamp;
dt_cancelamento_w			timestamp;
nr_seq_lote_prot_w			bigint;
ds_nao_informado_w			varchar(255);

c01 CURSOR FOR 
SELECT	a.nr_atendimento, 
	a.nr_seq_registro, 
	a.dt_entrada, 
	--substr(Obter_Convenio_Atendimento(a.nr_atendimento),1,255) cd_convenio, 
	a.ie_tipo_atend_tiss, 
	substr(obter_valor_dominio(1761,a.ie_tipo_atend_tiss),1,255) ds_tipo_atendimento, 
	a.cd_pessoa_fisica, 
	Obter_data_alta_Atend(a.nr_atendimento) dt_alta, 
	a.dt_cancelamento 
from	atendimento_paciente a 
where	a.dt_entrada between dt_inicio_p and trunc(dt_final_p,'dd') +86399/86400 
and exists ( 
	SELECT	1 
	from	atend_paciente_unidade x 
	where	x.nr_atendimento = a.nr_atendimento);

c02 CURSOR FOR 
SELECT	a.nr_interno_conta, 
	a.nr_seq_protocolo 
from	conta_paciente a 
where	nr_atendimento = nr_atendimento_w 
order by nr_interno_conta desc;


BEGIN 
 
ds_nao_informado_w := substr(wheb_mensagem_pck.get_texto(298637),1,255);
 
delete from w_rel_livro_registro 
where nm_usuario = nm_usuario_p;
 
open C01;
loop 
fetch C01 into	 
	nr_atendimento_w, 
	nr_seq_registro_w, 
	dt_atendimento_w, 
	--cd_convenio_w, 
	ie_tipo_atendimento_w, 
	ds_tipo_atendimento_w, 
	cd_paciente_w, 
	dt_alta_w, 
	dt_cancelamento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
 
	cd_pessoa_resp_w	:= '';
	nm_pessoa_resp_w	:= '';
	ds_endereco_w		:= '';
	nr_telefone_w		:= '';
	nr_nota_fiscal_w	:= '';
	vl_total_nota_w		:= null;
	dt_emissao_w		:= null;
	ds_observacao_w		:= '';
 
	select	max(a.cd_convenio_parametro) 
	into STRICT	cd_convenio_w 
	from	conta_paciente a 
	where	nr_atendimento = nr_atendimento_w;
 
	select	substr(obter_desc_convenio(cd_convenio_w),1,255), 
		substr(obter_nome_pf(cd_paciente_w),1,255) 
	into STRICT	ds_convenio_w, 
		nm_paciente_w 
	;
 
	open C02;
	loop 
	fetch C02 into	 
		nr_interno_conta_w, 
		nr_seq_protocolo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
 
		if (nr_seq_protocolo_w > 0) then 
 
			select	coalesce(max(nr_seq_lote_protocolo),0) 
			into STRICT	nr_seq_lote_prot_w 
			from	protocolo_convenio 
			where	nr_seq_protocolo = nr_seq_protocolo_w;
 
			if (nr_seq_lote_prot_w > 0) then 
				begin 
 
				select	max(nr_sequencia) 
				into STRICT	nr_seq_nota_w 
				from	nota_fiscal 
				where	(nr_seq_lote_prot IS NOT NULL AND nr_seq_lote_prot::text <> '') 
				and	ie_situacao = '1' 
				and	nr_seq_lote_prot = nr_seq_lote_prot_w;
 
				end;
			else 
				begin 
 
				select	max(nr_sequencia) 
				into STRICT	nr_seq_nota_w 
				from	nota_fiscal 
				where	nr_seq_protocolo = nr_seq_protocolo_w;
 
				end;
			end if;
 
			if (nr_seq_nota_w > 0) then 
				exit;
			end if;
		else 
			select	max(nr_sequencia) 
			into STRICT	nr_seq_nota_w 
			from	nota_fiscal 
			where	nr_interno_conta = nr_interno_conta_w;
 
			if (nr_seq_nota_w > 0) then 
				exit;
			end if;
		end if;
		end;
	end loop;
	close C02;
 
	select	substr(obter_dados_pf_pj(cd_paciente_w, null, 'EC'),1,2000) ds_endereco, 
		substr(CASE WHEN obter_dados_pf_pj(cd_paciente_w, null, 'T')='' THEN ds_nao_informado_w  ELSE obter_dados_pf_pj(cd_paciente_w, null, 'DDT') || ' ' || coalesce(obter_dados_pf_pj(cd_paciente_w, null, 'T'),ds_nao_informado_w) END ,1,255) nr_telefone 
	into STRICT	ds_endereco_w, 
		nr_telefone_w 
	;
 
	if (nr_seq_nota_w > 0) then 
		 
		select	cd_pessoa_fisica, 
			substr(obter_nome_pf(cd_pessoa_fisica),1,255) nm_pessoa_resp, 
			nr_nota_fiscal, 
			vl_total_nota, 
			dt_emissao, 
			ds_observacao 
		into STRICT	cd_pessoa_resp_w, 
			nm_pessoa_resp_w, 
			nr_nota_fiscal_w, 
			vl_total_nota_w, 
			dt_emissao_w, 
			ds_observacao_w 
		from	nota_fiscal 
		where	nr_sequencia = nr_seq_nota_w;
	end if;
 
	if (dt_cancelamento_w IS NOT NULL AND dt_cancelamento_w::text <> '') then 
		ds_observacao_w := substr(wheb_mensagem_pck.get_texto(298659),1,255); -- Atendimento cancelado 
	end if;
 
	insert into w_rel_livro_registro( 
		nr_seq_registro, 
		dt_atendimento, 
		nr_atendimento, 
		nr_interno_conta, 
		cd_pessoa_resp, 
		nm_pessoa_fisica, 
		ds_endereco, 
		nr_telefone, 
		cd_convenio, 
		ds_convenio, 
		ie_tipo_atendimento, 
		ds_tipo_atendimento, 
		vl_total_nota, 
		dt_emissao, 
		nr_nota_fiscal, 
		nr_seq_nota, 
		ds_observacao, 
		cd_paciente, 
		nm_paciente, 
		dt_atualizacao, 
		nm_usuario, 
		dt_alta) 
	values (	nr_seq_registro_w, 
		dt_atendimento_w, 
		nr_atendimento_w, 
		nr_interno_conta_w, 
		cd_pessoa_resp_w, 
		nm_pessoa_resp_w, 
		ds_endereco_w, 
		nr_telefone_w, 
		cd_convenio_w, 
		ds_convenio_w, 
		ie_tipo_atendimento_w, 
		ds_tipo_atendimento_w, 
		vl_total_nota_w, 
		dt_emissao_w, 
		nr_nota_fiscal_w, 
		nr_seq_nota_w, 
		ds_observacao_w, 
		cd_paciente_w, 
		nm_paciente_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		dt_alta_w);
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_rel_livro_registro ( dt_inicio_p timestamp, dt_final_p timestamp, nm_usuario_p text) FROM PUBLIC;

