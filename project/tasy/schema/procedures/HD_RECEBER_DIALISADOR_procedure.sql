-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_receber_dialisador (nr_seq_dialisador_p bigint, qt_priming_p bigint, qt_reuso_atual_p bigint, qt_reuso_maximo_p bigint, nm_usuario_p text, ie_tipo_p text, dt_recebimento_p timestamp, ds_erro_p INOUT text) AS $body$
DECLARE

				 
qt_priming_inicial_w		double precision;
pr_perda_w			real;
nr_seq_transf_w			bigint;
nr_seq_unid_destino_w		bigint;
nr_seq_unid_origem_w		bigint;
cd_estabelecimento_w		smallint;
ie_permite_inf_externo_w	varchar(1);

BEGIN
 
begin 
ie_permite_inf_externo_w := obter_param_usuario(7009, 185, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_permite_inf_externo_w);
 
 
 
if (ie_tipo_p = 'I') then 
 
	/* Atualiza os dados do dialisador */
 
	update	hd_dializador 
	set	ie_status		= 'A', 
		dt_atualizacao		= clock_timestamp(), 
		nm_usuario		= nm_usuario_p 
	where	nr_sequencia		= nr_seq_dialisador_p;
	 
elsif (ie_tipo_p = 'E') then 
 
	/* Verifica o priming inicial do dialisador */
 
	begin 
	select	qt_priming 
	into STRICT	qt_priming_inicial_w 
	from	hd_dializador 
	where	nr_sequencia		= nr_seq_dialisador_p;
	exception 
		when others then 
		qt_priming_inicial_w	:= 0;
	end;
 
	/* Caso o priming inicial seja zero, assume o priming passado como inicial */
 
	if (qt_priming_inicial_w = 0) then 
		qt_priming_inicial_w	:= qt_priming_p;
	end if;
	 
	/* Calcula o percentual de perda do dialisador em relação ao priming atual */
 
	pr_perda_w	:= 100 - ((qt_priming_p * 100) / qt_priming_inicial_w);
 
	/* Atualiza os dados do dialisador */
 
	if (ie_permite_inf_externo_w = 'S') then			 
		update	hd_dializador 
		set	qt_reuso		= qt_reuso_atual_p, 
			nr_max_reuso		= qt_reuso_maximo_p, 
			qt_priming_atual	= qt_priming_p, 
			pr_perda		= pr_perda_w, 
			qt_priming		= qt_priming_inicial_w, 
			dt_atualizacao		= clock_timestamp(), 
			nm_usuario		= nm_usuario_p, 
			ie_status		= 'A'	 
		where	nr_sequencia		= nr_seq_dialisador_p;
	else 
		update	hd_dializador 
		set	ie_status		= 'A', 
			dt_atualizacao		= clock_timestamp(), 
			nm_usuario		= nm_usuario_p 
		where	nr_sequencia		= nr_seq_dialisador_p;
	end if;
	 
	/* Verifica a última transferência */
 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_transf_w 
	from	hd_dialisador_transf 
	where	nr_seq_dialisador	= nr_seq_dialisador_p;
	 
	/* Pega as unidades da externa e interve os dados para fazer o retorno */
 
	select	nr_seq_unid_destino, 
		nr_seq_unid_origem, 
		cd_estabelecimento 
	into STRICT	nr_seq_unid_origem_w, 
		nr_seq_unid_destino_w, 
		cd_estabelecimento_w 
	from	hd_dialisador_transf 
	where	nr_sequencia		= nr_seq_transf_w;
	 
	/* Insere uma transferência de retorno */
 
	insert into hd_dialisador_transf( 
		nr_sequencia, 
		cd_estabelecimento, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		nr_seq_dialisador, 
		nr_seq_unid_origem, 
		nr_seq_unid_destino, 
		dt_transferencia, 
		cd_pf_transf, 
		ie_tipo 
	) values ( 
		nextval('hd_dialisador_transf_seq'), 
		cd_estabelecimento_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_seq_dialisador_p, 
		nr_seq_unid_origem_w, 
		nr_seq_unid_destino_w, 
		clock_timestamp(), 
		substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10), 
		ie_tipo_p 
	);	
	 
end if;
 
/* Verifica a última transferência */
 
select	max(nr_sequencia) 
into STRICT	nr_seq_transf_w 
from	hd_dialisador_transf 
where	nr_seq_dialisador	= nr_seq_dialisador_p;
 
/* Atualiza os dados de recebimento */
 
update	hd_dialisador_transf 
set	cd_pf_receb		= substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10), 
	dt_recebimento		= dt_recebimento_p 
where	nr_sequencia		= nr_seq_transf_w;
 
commit;
 
exception 
	when others then 
	rollback;
end;	
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_receber_dialisador (nr_seq_dialisador_p bigint, qt_priming_p bigint, qt_reuso_atual_p bigint, qt_reuso_maximo_p bigint, nm_usuario_p text, ie_tipo_p text, dt_recebimento_p timestamp, ds_erro_p INOUT text) FROM PUBLIC;

