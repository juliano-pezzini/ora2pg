-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_relat_base_ecd ( cd_empresa_p bigint, cd_estab_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text) AS $body$
DECLARE


/*variaveis gerais */

cd_empresa_w				empresa.cd_empresa%type;
cd_estabelecimento_w			estabelecimento.cd_estabelecimento%type;
cd_consistencia_w			w_ctb_sped_consistencia.cd_consistencia%type;
ds_consistencia_w			w_ctb_sped_consistencia.ds_consistencia%type;
i					integer	:= 0;
type registros is table of w_ctb_sped_consistencia%rowtype index by integer;
consistencia_w				registros;


/*variáveis que obtem os dados para consistência */

cd_contabilista_w			empresa.cd_contabilista%type;
cd_titular_w				empresa.cd_titular%type;
qt_registro_null_w			bigint;
qt_cd_versao_w				bigint;
qt_classif_ecd_w			bigint;
qt_demonstrativo_J100_w		bigint;
qt_demonstrativo_J150_w		bigint;
qt_mes_aberto_w				bigint;
qt_coluna_demos_mes_w		bigint;
cd_encerramento_exercicio_w	bigint;
qt_lote_encerramento_w		bigint;
qt_registro_sped_w			bigint;
qt_conta_contabil_w			bigint;

nr_seq_controle_sped_w		ctb_sped_controle.nr_sequencia%type;
nr_seq_demo_bp_w			ctb_sped_controle.nr_seq_demo_bp%type;
nr_crc_w					estabelecimento.nr_crc%type;
cd_pf_auditor_w				estabelecimento.cd_pf_auditor%type;
cd_cnpj_auditor_w			estabelecimento.cd_cnpj_auditor%type;
dt_ref_inicial_w			ctb_sped_controle.dt_ref_inicial%type;
dt_ref_final_w				ctb_sped_controle.dt_ref_final%type;
nr_cpf_w					pessoa_fisica.nr_cpf%type;
ds_email_w					compl_pessoa_fisica.ds_email%type;
nr_telefone_w				compl_pessoa_fisica.nr_telefone%type;
ds_codigo_prof_w			pessoa_fisica.ds_codigo_prof%type;
nr_reg_junta_comercial_w	estabelecimento.nr_reg_junta_comercial%type;
cd_conta_contabil_w			conta_contabil.cd_conta_contabil%type;
cd_localidade_w				estabelecimento.cd_localidade%type;
cd_tipo_lote_w				tipo_lote_contabil.cd_tipo_lote_contabil%type;
nr_lote_contabil_existe_w	lote_contabil.nr_lote_contabil%type;
mes_ref_final_w				timestamp;
nr_seq_mes_ref_w	  		ctb_mes_ref.nr_sequencia%type;
qt_registro_w				bigint;
qt_movimento_periodo_w		bigint;
pr_mov_sem_agrup_w			double precision;



BEGIN
delete	FROM w_ctb_sped_consistencia
where	coalesce(nr_seq_controle_sped::text, '') = ''
and	nm_usuario		= nm_usuario_p;
commit;

cd_empresa_w		:= cd_empresa_p;
cd_estabelecimento_w	:= cd_estab_p;
dt_ref_inicial_w	:= dt_inicial_p;
dt_ref_final_w		:= dt_final_p;
mes_ref_final_w 	:= TRUNC(dt_ref_inicial_w, 'MM');

select	count(*)
into STRICT	qt_mes_aberto_w
from	ctb_mes_ref
where	dt_referencia between dt_inicial_p and dt_final_p
and	coalesce(dt_fechamento::text, '') = '';

begin

select	nr_sequencia
into STRICT	nr_seq_mes_ref_w
from	ctb_mes_ref
where	cd_empresa = cd_empresa_w
and	dt_referencia = mes_ref_final_w;
exception when others then
	nr_seq_mes_ref_w	:= null;
end;

select	count(*)
into STRICT	qt_demonstrativo_J100_w
from	ctb_demonstrativo a,
	ctb_modelo_relat b
where 	a.nr_seq_tipo = b.nr_sequencia
and	a.nr_seq_mes_ref = nr_seq_mes_ref_w
and 	b.cd_registro_sped = 'J100';

select	count(*)
into STRICT	qt_demonstrativo_J150_w
from	ctb_demonstrativo a,
	ctb_modelo_relat b
where 	a.nr_seq_tipo = b.nr_sequencia
and	a.nr_seq_mes_ref = nr_seq_mes_ref_w
and 	b.cd_registro_sped = 'J150';

--#################################
/* 1 - falta informar o contabilista no cadastro da empresa */

select	cd_contabilista,
	cd_titular,
	nr_crc,
	cd_pf_auditor,
	cd_cnpj_auditor
into STRICT	cd_contabilista_w,
	cd_titular_w,
	nr_crc_w,
	cd_pf_auditor_w,
	cd_cnpj_auditor_w
from	empresa
where	cd_empresa =	 cd_empresa_w;


if (coalesce(cd_estabelecimento_w, 0) != 0) then
	select 	coalesce(nr_crc,nr_crc_w),
		coalesce(cd_pf_auditor, cd_pf_auditor_w),
		coalesce(cd_cnpj_auditor, cd_cnpj_auditor_w),
		coalesce(cd_contabilista, cd_contabilista_w),
		nr_reg_junta_comercial,
		cd_localidade
	into STRICT	nr_crc_w,
		cd_pf_auditor_w,
		cd_cnpj_auditor_w,
		cd_contabilista_w,
		nr_reg_junta_comercial_w,
		cd_localidade_w
	from	estabelecimento
	where	cd_estabelecimento =	cd_estabelecimento_w;
end if;




if (coalesce(cd_contabilista_w,'0') <> '0') then
	select 	max(ds_codigo_prof)
	into STRICT	ds_codigo_prof_w
	from	pessoa_fisica
	where	cd_pessoa_fisica = 	cd_contabilista_w;
end if;

select  count(*)
into STRICT	qt_cd_versao_w
from 	conta_contabil_referencial
where	cd_versao = '3.0';

select	count(*)
into STRICT 	qt_classif_ecd_w
from	conta_contabil_classif_ecd a,
	conta_contabil b
where	a.cd_conta_contabil	= b.cd_conta_contabil
and	b.cd_empresa		= cd_empresa_w;

if (coalesce(cd_contabilista_w,'X') = 'X')  then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 1;
	consistencia_w[i].ds_consistencia	:= 'Falta informar o contabilista no cadastro da empresa ou estabelecimento';
	consistencia_w[i].ds_acao		:= 'Cadastrar o contabilista na função Empresa/Estabelecimento/Conta/CC';
	consistencia_w[i].qt_tempo		:= 1;
end if;

if (coalesce(cd_titular_w,'X')  = 'X')then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 2;
	consistencia_w[i].ds_consistencia	:= 'Falta informar o titular da empresa ou estabelecimento';
	consistencia_w[i].ds_acao		:= 'Cadastrar o titular na função Empresa/Estabelecimento/Conta/CC';
	consistencia_w[i].qt_tempo		:= 1;
end if;

select	count(*)
into STRICT	qt_registro_null_w
from	ctb_mes_ref
where	cd_empresa = cd_empresa_w
and  	dt_referencia between	dt_ref_inicial_w and dt_ref_final_w
and	coalesce(dt_reorg_lancto::text, '') = '';

if (qt_registro_null_w > 0) then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 3;
	consistencia_w[i].ds_consistencia	:= 'Falta reorganizar o lançamento contábil do período';
	consistencia_w[i].ds_acao		:= 'Executar a funcionalidade Reorganizar lancamento contábil na função Contabilidade pasta Parâmetros';
	consistencia_w[i].qt_tempo		:= 4;
end if;


if (coalesce(nr_crc_w,'X') = 'X') then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 4;
	consistencia_w[i].ds_consistencia	:= 'Falta informar o CRC do Contador no cadastro da Empresa ou Estabelecimento';
	consistencia_w[i].ds_acao		:= 'Cadastrar o CRC do contador responsável na função Empresa/Estabelecimento/Conta/CC';
	consistencia_w[i].qt_tempo		:= 1;
end if;

if (coalesce(cd_pf_auditor_w,'X') = 'X') and (coalesce(cd_cnpj_auditor_w, 'X') = 'X') then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 5;
	consistencia_w[i].ds_consistencia	:= 'Falta informar o auditor da empresa/estabelecimento';
	consistencia_w[i].ds_acao		:= 'Cadastrar o auditor na função Empresa/Estabelecimento/Conta/CC';
	consistencia_w[i].qt_tempo		:= 1;
end if;

select	max(nr_cpf)
into STRICT	nr_cpf_w
from	pessoa_fisica
where	cd_pessoa_fisica = cd_titular_w;

if (coalesce(nr_cpf_w,'X') = 'X') then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 6;
	consistencia_w[i].ds_consistencia	:= 'Falta informar o CPF no cadastro do Titular';
	consistencia_w[i].ds_acao		:= 'Cadastrar o CPF do titular na função Cadastro Completo de Pessoas';
	consistencia_w[i].qt_tempo		:= 1;
end if;

select	max(nr_cpf)
into STRICT	nr_cpf_w
from	pessoa_fisica
where	cd_pessoa_fisica = cd_contabilista_w;

if (coalesce(cd_contabilista_w,'X') <> 'X') and (coalesce(nr_cpf_w,'X') = 'X') then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 7;
	consistencia_w[i].ds_consistencia	:= 'Falta informar o CPF no cadastro do Contador';
	consistencia_w[i].ds_acao		:= 'Cadastrar o CPF do contador na função Cadastro Completo de Pessoas';
	consistencia_w[i].qt_tempo		:= 1;
end if;


if (coalesce(cd_titular_w,'X') <> 'X') then
	select	max(ds_email),
		max(nr_telefone)
	into STRICT	ds_email_w,
		nr_telefone_w
	from	compl_pessoa_fisica
	where	cd_pessoa_fisica	= cd_titular_w
	and	ie_tipo_complemento	= 2;

end if;

if (coalesce(ds_email_w,'X') = 'X') or (coalesce(nr_telefone_w,'X') = 'X')then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 8;
	consistencia_w[i].ds_consistencia	:= 'Falta informar o Email/telefone no cadastro do Titular';
	consistencia_w[i].ds_acao		:= 'Cadastrar o email/telefone do titular na função Cadastro Completo de Pessoas, Tipo de complemento Comercial';
	consistencia_w[i].qt_tempo		:= 1;
end if;

if (coalesce(cd_contabilista_w, 'X') <> 'X') then
	begin
	select	ds_email,
		nr_telefone
	into STRICT	ds_email_w,
		nr_telefone_w
	from	compl_pessoa_fisica
	where	cd_pessoa_fisica = cd_contabilista_w
	and	ie_tipo_complemento = 2;
	exception when others then
		ds_email_w	:= '';
		nr_telefone_w	:= '';
	end;
end if;

if (coalesce(cd_contabilista_w, 'X') <> 'X') and
	((coalesce(ds_email_w,'X') = 'X') or (coalesce(nr_telefone_w,'X') = 'X')) then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 9;
	consistencia_w[i].ds_consistencia	:= 'Falta informar o Email/telefone no cadastro do Contador';
	consistencia_w[i].ds_acao		:= 'Cadastrar o email/telefone do titular na função Cadastro Completo de Pessoas, Tipo de complemento Comercial';
	consistencia_w[i].qt_tempo		:= 1;
end if;

if (coalesce(ds_codigo_prof_w,'X') = 'X')then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 10;
	consistencia_w[i].ds_consistencia	:= 'Falta informar o código do profissional (Contador) no cadastro de Pessoa física';
	consistencia_w[i].ds_acao		:= 'Cadastrar o código do profissional (contador) na função Cadastro Completo de Pessoas';
	consistencia_w[i].qt_tempo		:= 1;
end if;


if (coalesce(nr_reg_junta_comercial_w,'X') = 'X')then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 11;
	consistencia_w[i].ds_consistencia	:= 'Falta informar o NIRE no cadastro do Estabelecimento';
	consistencia_w[i].ds_acao		:= 'Cadastrar o Registro junta comercial na função Empresa/Estabelecimento/Conta/CC pasta Estabelecimento';
	consistencia_w[i].qt_tempo		:= 1;
end if;

if (qt_cd_versao_w = 0)then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 12;
	consistencia_w[i].ds_consistencia	:= 'Não foi importado o Plano de Contas Referencial Versão 3.0 ';
	consistencia_w[i].ds_acao		:= 'Executar a funcionalidade Importar plano de contas referencial na função Empresa/Estabelecimento/Conta/CC pasta Conta Referencial';
	consistencia_w[i].qt_tempo		:= 2;
end if;


if (qt_classif_ecd_w = 0)then
	i					:= i + 1;
	select	count(*)
	into STRICT 	qt_classif_ecd_w
	from	conta_contabil
	where 	ie_tipo		= 'A'
	and   	ie_situacao	= 'A'
	and	  	cd_empresa	= cd_empresa_w;

	consistencia_w[i].cd_consistencia	:= 13;
	consistencia_w[i].ds_consistencia	:= 'O Plano de contas não foi vinculado ao plano de contas referencial. Total(' || trim(both TO_CHAR(qt_classif_ecd_w, '999G9999G999')) || ')';
	consistencia_w[i].ds_acao		:= 'Vincular o plano de contas na função Empresa/Estabelecimento/Conta/CC pasta Conta Contábil subpasta Conta contábil referencial';
	consistencia_w[i].qt_tempo		:= 1;

end if;

if (coalesce(cd_localidade_w,0) = 0)then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 14;
	consistencia_w[i].ds_consistencia	:= 'Não foi informada a Localidade no Cadastro do Estabelecimento';
	consistencia_w[i].ds_acao		:= 'Cadastrar a localidade função Empresa/Estabelecimento/Conta/CC pasta Estabelecimento';
	consistencia_w[i].qt_tempo		:= 1;
end if;

select	count(*)
into STRICT	qt_registro_w
from	ctb_modelo_relat a
where	a.cd_registro_sped	= 'J100'
and	a.cd_empresa		= cd_empresa_w
and	a.ie_situacao		= 'A';

if (qt_registro_w = 0) then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 15;
	consistencia_w[i].ds_consistencia	:= 'Falta cadastrar modelo de demonstrativo para o Registro J100 - Balanço Patrimonial';
	consistencia_w[i].ds_acao		:= 'Cadastrar um modelo de demonstrativo para o Registro J100 - Balanço Patrimonial';
	consistencia_w[i].qt_tempo		:= 2;
end if;

select	count(*)
into STRICT	qt_registro_w
from	ctb_modelo_relat a
where	a.cd_registro_sped	= 'J150'
and	a.cd_empresa		= cd_empresa_w
and	a.ie_situacao		= 'A';

if (qt_registro_w = 0) then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 16;
	consistencia_w[i].ds_consistencia	:= 'Falta cadastrar modelo de demonstrativo para o Registro J150 - DRE';
	consistencia_w[i].ds_acao		:= 'Cadastrar um modelo de demonstrativo para o Registro J150 - DRE';
	consistencia_w[i].qt_tempo		:= 2;
end if;


if (qt_demonstrativo_J100_w = 0)then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 17;
	consistencia_w[i].ds_consistencia	:= 'Falta cadastrar o Demonstrativo de Balanço Patrimonial no mês de encerramento';
	consistencia_w[i].ds_acao		:= 'Cadastrar e calcular o demonstrativo na função Contabilidade, pasta Demonstrativos, no mês de encerramento do período';
	consistencia_w[i].qt_tempo		:= 1;
end if;

if (qt_demonstrativo_J150_w = 0)then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 18;
	consistencia_w[i].ds_consistencia	:= 'Falta cadastrar o Demonstrativo de Resultado do Exercício no mês de encerramento';
	consistencia_w[i].ds_acao		:= 'Cadastrar e calcular o demonstrativo na função Contabilidade, pasta Demonstrativos, no mês de encerramento do período';
	consistencia_w[i].qt_tempo		:= 1;
end if;

select	count(b.nr_sequencia)
into STRICT	qt_registro_w
from	ctb_mes_ref a,
	ctb_movimento b
where	b.nr_seq_mes_ref	= a.nr_sequencia
and	a.cd_empresa		= cd_empresa_w
and	b.cd_estabelecimento	= coalesce(cd_estabelecimento_w, b.cd_estabelecimento)
and	a.dt_referencia between dt_ref_inicial_w and dt_ref_final_w;

qt_movimento_periodo_w	:= qt_registro_w;

if (qt_registro_w > 0)then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 19;
	consistencia_w[i].ds_consistencia	:= 'Quantidade de movimentos do período: ' || trim(both TO_CHAR(qt_registro_w, '999G9999G999'));
		consistencia_w[i].ds_acao		:= 'Verificar movimentos';

	if (qt_registro_w < 50000) then
		consistencia_w[i].qt_tempo		:= 1;

	elsif (qt_registro_w > 50000) and (qt_registro_w < 200000) then
		consistencia_w[i].qt_tempo		:= 4;
	elsif (qt_registro_w > 200000) then
		consistencia_w[i].qt_tempo		:= 8;
	end if;

end if;

select	count(b.nr_sequencia)
into STRICT	qt_registro_w
from	ctb_mes_ref a,
	ctb_movimento b
where	b.nr_seq_mes_ref	= a.nr_sequencia
and	a.cd_empresa		= cd_empresa_w
and	b.cd_estabelecimento	= coalesce(cd_estabelecimento_w, b.cd_estabelecimento)
and	a.dt_referencia between dt_ref_inicial_w and dt_ref_final_w
and	coalesce(b.nr_seq_agrupamento,0) = 0;

if (qt_registro_w > 0)then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 20;
	consistencia_w[i].ds_consistencia	:= 'Quantidade de movimentos s/agrupador: ' || trim(both TO_CHAR(qt_registro_w, '999G9999G999'));
	consistencia_w[i].ds_acao		:= substr('A falta do agrupador nos movimentos contábeis pode gerar problemas na identificação dos lançamentos contábeis.'
										|| 'Execute na Contabilidade a funcionalidade Reorganizar lançamento contábil. Se após a execução da funcionalidade '
										|| 'ainda tiverem movimentos com problemas de identificação deve ser feito o vinculo das contrapartidas MANUALMENTE '
										|| 'conforme orientações disponíveis no Manual da Escrituração Contábil Digital disponível na extranet',1,4000);

	pr_mov_sem_agrup_w := dividir_sem_round(qt_registro_w,qt_movimento_periodo_w) * 100;

	if (pr_mov_sem_agrup_w >= 50) then
		consistencia_w[i].qt_tempo		:= 16;
	elsif (pr_mov_sem_agrup_w > 25) and (pr_mov_sem_agrup_w < 50) then
		consistencia_w[i].qt_tempo		:= 12;
	elsif (pr_mov_sem_agrup_w > 10) and (pr_mov_sem_agrup_w < 25) then
		consistencia_w[i].qt_tempo		:= 10;
	elsif (pr_mov_sem_agrup_w <= 10) then
		consistencia_w[i].qt_tempo		:= 8;
	end if;


end if;

if (qt_mes_aberto_w > 0)then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 21;
	consistencia_w[i].ds_consistencia	:= 'Quantidade de meses abertos na Contabilidade: ' || trim(both TO_CHAR(qt_mes_aberto_w, '999G9999G999'));
	consistencia_w[i].ds_acao		:= 'Fechar o mês na Contabilidade';
	consistencia_w[i].qt_tempo		:= 2;
end if;


select	max(nr_sequencia)
into STRICT	nr_seq_controle_sped_w
from	ctb_sped_controle
where	cd_empresa = cd_empresa_w
and		cd_estabelecimento = cd_estabelecimento_w
and		dt_ref_inicial = dt_ref_inicial_w
and		dt_ref_final = mes_ref_final_w;

select	max(nr_seq_demo_bp)
into STRICT	nr_seq_demo_bp_w
from	ctb_sped_controle
where   nr_sequencia = nr_seq_controle_sped_w;

select	count(*)
into STRICT	qt_coluna_demos_mes_w
from	ctb_demonstrativo a,
		ctb_demo_mes b
where	a.nr_sequencia = b.nr_seq_demo
and		a.nr_sequencia = nr_seq_demo_bp_w;

if (qt_coluna_demos_mes_w < 2)then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 22;
	consistencia_w[i].ds_consistencia	:= 'A estrutura do demonstrativo de Balanço está incorreta. Verifique se foram adicionadas todas as colunas necessárias';
	consistencia_w[i].ds_acao		:= 'Cadastrar conforme modelo explicado no Manual de Escrituração Contábil Digital disponível na Extranet';
	consistencia_w[i].qt_tempo		:= 2;
end if;

cd_encerramento_exercicio_w := coalesce(obter_valor_param_usuario(923, 6, obter_perfil_ativo,  nm_usuario_p, cd_estabelecimento_w),13);

select count(*)
into STRICT	qt_lote_encerramento_w
from	lote_contabil a,
	estabelecimento b
where	b.cd_estabelecimento		= a.cd_estabelecimento
and	b.cd_empresa			= cd_empresa_w
and	a.cd_estabelecimento		= coalesce(cd_estabelecimento_w, a.cd_estabelecimento)
and	trunc(dt_referencia, 'MM')	= trunc(mes_ref_final_w,'mm')
and	a.cd_tipo_lote_contabil		= cd_encerramento_exercicio_w;

if (qt_lote_encerramento_w = 0)then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 23;
	consistencia_w[i].ds_consistencia	:= 'Não existe lote de encerramento de exercício';
	consistencia_w[i].ds_acao		:= 'Na função Contabilidade, no mês de encerramento deve ser executada a funcionalidade Encerramento Exercício';
	consistencia_w[i].qt_tempo		:= 2;
end if;

/*Consiste diferença de saldo entre as contas do balancete no período */

select	count(*)
into STRICT	qt_registro_w
from	estabelecimento c,
	lote_contabil b,
	ctb_movimento a
where	c.cd_estabelecimento	= b.cd_estabelecimento
and	b.nr_lote_contabil	= a.nr_lote_contabil
and	c.cd_empresa		= cd_empresa_w
and	b.cd_estabelecimento	= coalesce(cd_estabelecimento_w, b.cd_estabelecimento)
and	a.dt_movimento between dt_ref_inicial_w and dt_ref_final_w
and	a.vl_movimento < 0;

if (qt_registro_w > 0) then
	begin
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 24;
	consistencia_w[i].ds_consistencia	:= 'Existem movimentos negativos na contabilidade: ' || qt_registro_w;
	consistencia_w[i].ds_acao		:= substr('Função Contabilidade - pasta Consulta movimento para encontrar o movimento negativo. Depois deve ser ajustado o movimento no lote',1,255);
	consistencia_w[i].qt_tempo		:= 2;
	end;
else
	begin
	select	count(*)
	into STRICT	qt_registro_w
	from	ctb_movto_centro_custo d,
		estabelecimento c,
		lote_contabil b,
		ctb_movimento a
	where	c.cd_estabelecimento	= b.cd_estabelecimento
	and	b.nr_lote_contabil	= a.nr_lote_contabil
	and	d.nr_seq_movimento	= a.nr_sequencia
	and	c.cd_empresa		= cd_empresa_w
	and	b.cd_estabelecimento	= coalesce(cd_estabelecimento_w, b.cd_estabelecimento)
	and	a.dt_movimento between dt_ref_inicial_w and dt_ref_final_w
	and	d.vl_movimento < 0;

	if (qt_registro_w > 0) then
		begin
		i					:= i + 1;
		consistencia_w[i].cd_consistencia	:= 24;
		consistencia_w[i].ds_consistencia	:= 'Existem movimentos negativos na contabilidade: ' || qt_registro_w;
		consistencia_w[i].ds_acao		:= substr('Função Contabilidade - pasta Consulta movimento para encontrar o movimento negativo. Depois deve ser ajustado o movimento no lote',1,255);
		consistencia_w[i].qt_tempo		:= 2;
		end;
	end if;

	end;
end if;

/*Fim consistência de diferença de saldo */

select	count(*)
into STRICT	qt_registro_sped_w
from	ctb_regra_sped;

if (qt_registro_sped_w = 0)then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 25;
	consistencia_w[i].ds_consistencia	:= 'Não existe regra de geração do ECD';
	consistencia_w[i].ds_acao		:= 'Verificar regra de geração do ECD';
	consistencia_w[i].qt_tempo		:= 4;
end if;

select	count(*)
into STRICT	qt_conta_contabil_w
from	conta_contabil a
where 	ie_tipo		= 'A'
and   	ie_situacao	= 'A'
and		cd_empresa	= cd_empresa_w
and		obter_se_conta_vigente2(a.cd_conta_contabil, a.dt_inicio_vigencia, a.dt_fim_vigencia, dt_ref_final_w) = 'S'
and		ctb_obter_nivel_conta(a.cd_conta_contabil) < 4;

if (qt_conta_contabil_w > 0)then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 26;
	consistencia_w[i].ds_consistencia	:= 'Existem contas contábeis analíticas que não estão no quarto nível';
	consistencia_w[i].ds_acao		:= substr('Função Empresa/Estabelecimento - ajustar a classificação das contas analíticas que não estão no 4º nível',1,255);
	consistencia_w[i].qt_tempo		:= ((qt_conta_contabil_w * 5) / 60);
end if;


qt_registro_w := obter_valor_dinamico('select count(*) from v$parameter where name = ''utl_file_dir'' and value = ''*'' ', qt_registro_w);

if (qt_registro_w = 0)then
	i					:= i + 1;
	consistencia_w[i].cd_consistencia	:= 27;
	consistencia_w[i].ds_consistencia	:= 'Falta parametrizar o recurso de UTL_FILE no banco de dados';
	consistencia_w[i].ds_acao		:= 'Contate o DBA imediatamente para configurar o parâmetro UTL_FILE_DIR para *';
	consistencia_w[i].qt_tempo		:= 4;
end if;

for i in 1.. consistencia_w.count  loop

insert into w_ctb_sped_consistencia(
	nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	cd_consistencia,
	ds_consistencia,
	nr_seq_controle_sped,
	ie_tipo,
	ds_acao,
	qt_tempo)
values (	nextval('w_ctb_sped_consistencia_seq'),
	clock_timestamp(),
	nm_usuario_p,
	consistencia_w[i].cd_consistencia,
	consistencia_w[i].ds_consistencia,
	null,
	consistencia_w[i].ie_tipo,
	consistencia_w[i].ds_acao,
	consistencia_w[i].qt_tempo);
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_relat_base_ecd ( cd_empresa_p bigint, cd_estab_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text) FROM PUBLIC;

