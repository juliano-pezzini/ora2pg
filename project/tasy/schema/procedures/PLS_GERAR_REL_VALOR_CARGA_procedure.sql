-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_rel_valor_carga (nr_seq_regra_p pls_cg_regra.nr_sequencia%type, ie_tipo_carga_p pls_cg_tab_tasy.ie_tipo_carga%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


valor_bind_w		sql_pck.t_dado_bind;
cursor_w		sql_pck.t_cursor;
ds_valor_w		varchar(255);
ds_descricao_w		varchar(255);
ie_tipo_carga_w		pls_cg_tab_tasy.ie_tipo_carga%type := ie_tipo_carga_p;

c00 CURSOR(	ie_tipo_carga_pc		pls_cg_regra.ie_tipo_carga%type,
		cd_estabelecimento_pc		estabelecimento.cd_estabelecimento%type) FOR
	SELECT	pls_obter_select_val_atrib( ta.ie_componente, ta.cd_exp_valores, ta.ds_valores, ta.cd_dominio, cd_estabelecimento_pc) ds_comando,
		ta.nm_atributo,
		ta.nm_tabela
	from	pls_cg_tab_tasy		tt,
		tabela_atributo		ta
	where	tt.nm_tabela		= ta.nm_tabela
	and	tt.ie_tipo_carga	= ie_tipo_carga_pc
	and	ta.ie_tipo_atributo not in ('FUNCTION')
	and	ta.nm_atributo not in ('NM_USUARIO','NM_USUARIO_NREC','DT_ATUALIZACAO','DT_ATUALIZACAO_NREC','NR_SEQUENCIA','CD_ESTABELECIMENTO')
	and	not exists (SELECT	1
				from	integridade_referencial	it,
					integridade_atributo	ia
				where	it.nm_tabela			= ia.nm_tabela
				and	it.nm_integridade_referencial	= ia.nm_integridade_referencial
				and	ia.nm_atributo			= ta.nm_atributo
				and	it.nm_tabela			= ta.nm_tabela)
	order by ta.nr_sequencia_criacao;

BEGIN
delete FROM w_pls_cg_rel_valor where nm_usuario = nm_usuario_p;
commit;

if (coalesce(ie_tipo_carga_w::text, '') = '') then
	select	max(ie_tipo_carga)
	into STRICT	ie_tipo_carga_w
	from	pls_cg_regra
	where	nr_sequencia	= nr_seq_regra_p;
end if;

for r_C00_w in C00( ie_tipo_carga_w, cd_estabelecimento_p ) loop
	if (r_C00_w.ds_comando IS NOT NULL AND r_C00_w.ds_comando::text <> '') then
		-- executa o comando sql com os respectivos binds
		begin
		valor_bind_w := sql_pck.executa_sql_cursor(	r_C00_w.ds_comando, valor_bind_w);
		exception
		when others then
			-- #@DS_ERRO_W#@
			CALL wheb_mensagem_pck.exibir_mensagem_abort(685714,	'DS_ERRO_W=' || r_C00_w.nm_atributo||' - '||r_C00_w.ds_comando);
		end;

		begin
		loop
		fetch cursor_w into
			ds_valor_w,
			ds_descricao_w;
		EXIT WHEN NOT FOUND; /* apply on cursor_w */
			begin
			insert into w_pls_cg_rel_valor(nr_sequencia,				dt_atualizacao,		nm_usuario,
				dt_atualizacao_nrec,			nm_usuario_nrec,	ie_tipo_carga,
				nm_atributo,				nm_tabela,		ds_descricao,
				ds_valor)
			values (nextval('w_pls_cg_rel_valor_seq'),	clock_timestamp(),		nm_usuario_p,
				clock_timestamp(),				nm_usuario_p,		ie_tipo_carga_w,
				r_C00_w.nm_atributo,			r_C00_w.nm_tabela,	ds_descricao_w,
				ds_valor_w);
			end;
		end loop;
		close cursor_w;
		exception
		when others then
			-- #@DS_ERRO_W#@
			CALL wheb_mensagem_pck.exibir_mensagem_abort(685714,	'DS_ERRO_W=' || r_C00_w.nm_atributo||' - '||r_C00_w.ds_comando);
		end;
	end if;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_rel_valor_carga (nr_seq_regra_p pls_cg_regra.nr_sequencia%type, ie_tipo_carga_p pls_cg_tab_tasy.ie_tipo_carga%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

