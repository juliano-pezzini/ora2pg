-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_movto_deposito ( nr_seq_deposito_p bigint, dt_transacao_p timestamp, nm_usuario_p text) AS $body$
DECLARE


cd_estabelecimento_w		integer;
ie_movto_bco_deposito_w		varchar(1);
nr_conta_w			bigint;
dt_deposito_w			timestamp;
vl_deposito_w			double precision;
nr_seq_trans_w			bigint;
nr_seq_trans_fin_deposito_w		bigint;
nr_seq_bordero_w			bigint;
nr_seq_cheque_w			bigint;
vl_transacao_w			double precision;
ds_observacao_w			varchar(4000);
nr_seq_movto_orig_w		bigint;
ie_estorno_w			varchar(15);
/* Projeto Multimoeda - Variáveis */

vl_transacao_estrang_w		double precision;
vl_deposito_estrang_w		double precision;
vl_complemento_w		double precision;
vl_cotacao_w			cotacao_moeda.vl_cotacao%type;
cd_moeda_w			integer;

c01 CURSOR FOR
SELECT	b.nr_seq_cheque,
	b.vl_cheque vl_transacao,
	b.vl_cheque_estrang vl_transacao_estrang
from	cheque_cr b,
	deposito_cheque a
where	a.nr_seq_cheque		= b.nr_seq_cheque
and	a.nr_seq_deposito	= nr_seq_deposito_p

union all

select	null nr_seq_cheque,
	a.vl_especie vl_transacao,
	a.vl_especie_estrang vl_transacao_estrang
from	deposito a
where	coalesce(a.vl_especie,0)	<> 0
and	a.nr_sequencia		= nr_seq_deposito_p;


BEGIN

begin
select	b.cd_estabelecimento,
	b.ie_movto_bco_deposito,
	a.nr_conta,
	a.dt_deposito,
	CASE WHEN coalesce(a.dt_deposito::text, '') = '' THEN (a.vl_especie + a.vl_cheque) * -1  ELSE (a.vl_especie + a.vl_cheque) END ,
	a.nr_seq_trans_financ,
	CASE WHEN coalesce(a.dt_deposito::text, '') = '' THEN (a.vl_especie_estrang + a.vl_cheque_estrang) * -1  ELSE (a.vl_especie_estrang + a.vl_cheque_estrang) END ,
	a.vl_cotacao,
	a.cd_moeda
into STRICT	cd_estabelecimento_w,
	ie_movto_bco_deposito_w,
	nr_conta_w,
	dt_deposito_w,
	vl_deposito_w,
	nr_seq_trans_fin_deposito_w,
	vl_deposito_estrang_w,
	vl_cotacao_w,
	cd_moeda_w
from	parametro_contas_receber b,
	deposito a
where	a.cd_estabelecimento	= b.cd_estabelecimento
and	a.nr_sequencia		= nr_seq_deposito_p;
exception when others then
	ie_movto_bco_deposito_w	:= 'N';
	nr_conta_w		:= null;
end;

ie_estorno_w	:= '';
if (coalesce(dt_deposito_w::text, '') = '') then
	ie_estorno_w	:= 'E';
end if;

if (nr_conta_w IS NOT NULL AND nr_conta_w::text <> '') and (coalesce(ie_movto_bco_deposito_w,'N') <> 'N') then

	if (coalesce(nr_seq_trans_fin_deposito_w::text, '') = '') then

		select	coalesce(min(nr_sequencia),0)
		into STRICT	nr_seq_trans_w
		from	transacao_financeira
		where	ie_acao 		= 6
		and	coalesce(ie_banco,'N')	<> 'N'
		and	ie_situacao		= 'A'
		and	cd_estabelecimento	= cd_estabelecimento_w;

	end if;

	if (coalesce(nr_seq_trans_fin_deposito_w,nr_seq_trans_w) = 0) then
		/* Transação de baixa de depósito não cadastrada!
		Verifique o cadastro de transaçãoes financeiras. */
		CALL wheb_mensagem_pck.exibir_mensagem_abort(221527);
	end if;

	if (ie_movto_bco_deposito_w	= 'S') then
		nr_seq_movto_orig_w	:= null;
		select	max(b.nr_seq_bordero)
		into STRICT	nr_seq_bordero_w
		from	cheque_bordero b,
			deposito_cheque a
		where	a.nr_seq_cheque		= b.nr_seq_cheque
		and	a.nr_seq_deposito	= nr_seq_deposito_p;

		if (coalesce(dt_deposito_w::text, '') = '') then
			begin
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_movto_orig_w
			from	movto_trans_financ a
			where	a.nr_seq_trans_financ	= coalesce(nr_seq_trans_fin_deposito_w,nr_seq_trans_w)
			and	a.nr_seq_deposito	= nr_seq_deposito_p
			and	a.nr_seq_banco		= nr_conta_w
			and	a.vl_transacao		> 0;
			end;
		end if;

		/* Projeto Multimoeda - Verifica se o depósito é moeda estrangeira, caso positivo calcula o complemento,
				caso contrário limpa as variáveis antes de gravar o movimento.*/
		if (coalesce(vl_deposito_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
			vl_complemento_w := vl_deposito_w - vl_deposito_estrang_w;
		else
			vl_deposito_estrang_w := null;
			vl_complemento_w := null;
			vl_cotacao_w := null;
			cd_moeda_w := null;
		end if;

		insert into movto_trans_financ(NR_SEQUENCIA,
			DT_TRANSACAO,
			NR_SEQ_TRANS_FINANC,
			VL_TRANSACAO,
			DT_ATUALIZACAO,
			NM_USUARIO,
			nr_seq_deposito,
			dt_referencia_saldo,
			nr_seq_banco,
			nr_lote_contabil,
			ie_conciliacao,
			nr_documento,
			nr_seq_movto_orig,
			ie_estorno,
			vl_transacao_estrang,
			vl_complemento,
			vl_cotacao,
			cd_moeda)
		values (nextval('movto_trans_financ_seq'),
			coalesce(dt_transacao_p, clock_timestamp()),
			coalesce(nr_seq_trans_fin_deposito_w,nr_seq_trans_w),
			vl_deposito_w,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_deposito_p,
			clock_timestamp(),
			nr_conta_w,
			0,
			'N',
			nr_seq_bordero_w,
			nr_seq_movto_orig_w,
			ie_estorno_w,
			vl_deposito_estrang_w,
			vl_complemento_w,
			vl_cotacao_w,
			cd_moeda_w);

	elsif (ie_movto_bco_deposito_w	= 'C') then

		open	c01;
		loop
		fetch	c01 into
			nr_seq_cheque_w,
			vl_transacao_w,
			vl_transacao_estrang_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

			nr_seq_movto_orig_w	:= null;
			if (coalesce(dt_deposito_w::text, '') = '') then
				vl_transacao_w		:= vl_transacao_w * -1;

				if (nr_seq_cheque_w IS NOT NULL AND nr_seq_cheque_w::text <> '') then

					select	max(a.nr_sequencia)
					into STRICT	nr_seq_movto_orig_w
					from	movto_trans_financ a
					where	a.nr_seq_trans_financ	= coalesce(nr_seq_trans_fin_deposito_w,nr_seq_trans_w)
					and	a.nr_seq_deposito	= nr_seq_deposito_p
					and	a.nr_seq_banco		= nr_conta_w
					and	a.nr_seq_cheque		= nr_seq_cheque_w
					and	a.vl_transacao		> 0;
				else
					select	max(a.nr_sequencia)
					into STRICT	nr_seq_movto_orig_w
					from	movto_trans_financ a
					where	a.nr_seq_trans_financ	= coalesce(nr_seq_trans_fin_deposito_w,nr_seq_trans_w)
					and	a.nr_seq_deposito	= nr_seq_deposito_p
					and	a.nr_seq_banco		= nr_conta_w
					and	a.vl_transacao		> 0;
				end if;

			end if;

			if (coalesce(nr_seq_cheque_w::text, '') = '') then
				ds_observacao_w := substr(wheb_mensagem_pck.get_texto(304658),1,255);

				--ds_observacao_w	:=	substr('Valor em espécie do depósito de cheques.' || chr(13) || chr(10) ||
				--			'Gerado com base nos Parâmetros do Contas a Receber (aba Cheques)',1,255);
			else
				ds_observacao_w := substr(wheb_mensagem_pck.get_texto(304659),1,255);
				--ds_observacao_w	:=	substr('Gerado com base nos Parâmetros do Contas a Receber (aba Cheques)',1,255);
			end if;

			select	max(b.nr_seq_bordero)
			into STRICT	nr_seq_bordero_w
			from	cheque_bordero b,
				deposito_cheque a
			where (coalesce(nr_seq_cheque_w::text, '') = '' or b.nr_seq_cheque = nr_seq_cheque_w)
			and	a.nr_seq_cheque		= b.nr_seq_cheque
			and	a.nr_seq_deposito	= nr_seq_deposito_p;

			/* Projeto Multimoeda - Verifica se o depósito é moeda estrangeira, caso positivo calcula os valores, caso contrário limpa as variáveis.*/

			if (coalesce(vl_transacao_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
				if (coalesce(dt_deposito_w::text, '') = '') then
					vl_transacao_estrang_w := vl_transacao_estrang_w * -1;
				end if;
				-- Aplica a cotação do depósito no valor do cheque
				vl_transacao_w := vl_transacao_estrang_w * vl_cotacao_w;
				vl_complemento_w := vl_transacao_w - vl_transacao_estrang_w;
			else
				vl_transacao_estrang_w := null;
				vl_complemento_w := null;
				vl_cotacao_w := null;
				cd_moeda_w := null;
			end if;

			insert into movto_trans_financ(
				NR_SEQUENCIA,
				DT_TRANSACAO,
				NR_SEQ_TRANS_FINANC,
				VL_TRANSACAO,
				DT_ATUALIZACAO,
				NM_USUARIO,
				nr_seq_deposito,
				dt_referencia_saldo,
				nr_seq_banco,
				nr_lote_contabil,
				ie_conciliacao,
				nr_documento,
				ds_observacao,
				nr_seq_cheque,
				nr_seq_movto_orig,
				ie_estorno,
				vl_transacao_estrang,
				vl_complemento,
				vl_cotacao,
				cd_moeda)
			values (nextval('movto_trans_financ_seq'),
				coalesce(dt_transacao_p, clock_timestamp()),
				coalesce(nr_seq_trans_fin_deposito_w,nr_seq_trans_w),
				vl_transacao_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_deposito_p,
				clock_timestamp(),
				nr_conta_w,
				0,
				'N',
				nr_seq_bordero_w,
				ds_observacao_w,
				nr_seq_cheque_w,
				nr_seq_movto_orig_w,
				ie_estorno_w,
				vl_transacao_estrang_w,
				vl_complemento_w,
				vl_cotacao_w,
				cd_moeda_w);

		end	loop;
		close	c01;

	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_movto_deposito ( nr_seq_deposito_p bigint, dt_transacao_p timestamp, nm_usuario_p text) FROM PUBLIC;

