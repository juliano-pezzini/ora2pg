-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_excluir_fatura_camara ( nr_seq_lote_p bigint, nr_titulo_pagar_p bigint, nr_titulo_receber_p bigint, nr_seq_motivo_p bigint, ds_observacao_p text, dt_exclusao_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
ie_acao_w		varchar(3);
nr_seq_fatura_w		bigint;
nr_seq_protocolo_w	bigint;				
 

BEGIN 
 
if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') and 
	((nr_titulo_pagar_p IS NOT NULL AND nr_titulo_pagar_p::text <> '') or (nr_titulo_receber_p IS NOT NULL AND nr_titulo_receber_p::text <> ''))then	 
	 
	if (coalesce(nr_seq_motivo_p::text, '') = '') then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(265552,'');
		--Mensagem: Deve ser informado um motivo de exclusão! 
	elsif (coalesce(dt_exclusao_p::text, '') = '') then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(265553,'');
		--Deve ser informada a data de exclusão! 
	end if;
	 
	if (nr_titulo_pagar_p IS NOT NULL AND nr_titulo_pagar_p::text <> '') then 
		select	a.ie_acao 
		into STRICT	ie_acao_w 
		from	pls_motivo_excl_camara a 
		where	a.nr_sequencia	= nr_seq_motivo_p;
		 
		select	max(a.nr_sequencia) 
		into STRICT	nr_seq_fatura_w 
		from	ptu_fatura a 
		where	a.nr_titulo	= nr_titulo_pagar_p;
		 
		if (nr_seq_fatura_w IS NOT NULL AND nr_seq_fatura_w::text <> '') then 
			select	max(a.nr_seq_protocolo) 
			into STRICT	nr_seq_protocolo_w 
			from	ptu_fatura a 
			where	a.nr_sequencia	= nr_seq_fatura_w;
		end if;
		 
		if (ie_acao_w = 'ET') then 
			CALL cancelar_titulo_pagar(nr_titulo_pagar_p,nm_usuario_p,dt_exclusao_p);
		elsif (ie_acao_w = 'EC') and (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') then 
			CALL pls_excluir_protocolo_imp(nr_seq_protocolo_w,nm_usuario_p,cd_estabelecimento_p);
		elsif (ie_acao_w = 'ECT') and (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') then 
			CALL cancelar_titulo_pagar(nr_titulo_pagar_p,nm_usuario_p,dt_exclusao_p);
			CALL pls_excluir_protocolo_imp(nr_seq_protocolo_w,nm_usuario_p,cd_estabelecimento_p);
		end if;
	end if;
	 
	insert into pls_lote_camara_exclusao(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		nr_seq_lote, 
		nr_titulo_pagar, 
		nr_titulo_receber, 
		dt_exclusao, 
		nr_seq_motivo_exc, 
		ds_observacao) 
	values (nextval('pls_lote_camara_exclusao_seq'), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nr_seq_lote_p, 
		nr_titulo_pagar_p, 
		nr_titulo_receber_p, 
		dt_exclusao_p, 
		nr_seq_motivo_p, 
		ds_observacao_p);
	 
	delete from pls_titulo_lote_camara 
	where	nr_seq_lote_camara = nr_seq_lote_p 
	and	nr_titulo_receber = nr_titulo_receber_p;
	 
	delete from pls_titulo_lote_camara 
	where	nr_seq_lote_camara = nr_seq_lote_p 
	and	nr_titulo_pagar = nr_titulo_pagar_p;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_excluir_fatura_camara ( nr_seq_lote_p bigint, nr_titulo_pagar_p bigint, nr_titulo_receber_p bigint, nr_seq_motivo_p bigint, ds_observacao_p text, dt_exclusao_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

