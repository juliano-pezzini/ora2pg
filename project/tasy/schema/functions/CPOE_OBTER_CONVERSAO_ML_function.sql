-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cpoe_obter_conversao_ml ( cd_material_p cpoe_material.cd_material%type, qt_dose_p cpoe_material.qt_dose%type, cd_unid_med_p cpoe_material.cd_unidade_medida%type, ie_via_aplicacao_p cpoe_material.ie_via_aplicacao%type, cd_pessoa_fisica_p cpoe_material.cd_pessoa_fisica%type, nr_atendimento_p cpoe_material.nr_atendimento%type) RETURNS bigint AS $body$
DECLARE


qt_retorno_w			     double precision;
qt_conversao_w			     double precision;
qt_conversao_ml_w		     double precision;
qt_dose_w					double precision;
cd_unidade_medida_w		     varchar(30);
obter_retorno_conversao_ml_w bigint;
sql_w                        varchar(250);

function converterDoseMLReconst(qt_dose_unitaria_w bigint) return bigint is
    qt_retorno_w               double precision;
    cd_pessoa_fisica_w		   pessoa_fisica.cd_pessoa_fisica%type;
    cd_estabelecimento_w	   estabelecimento.cd_estabelecimento%type := obter_estabelecimento_ativo;
    ie_gerar_reconstituicao_w  varchar(15);
    nr_seq_agrupamento_w	   setor_atendimento.nr_seq_agrupamento%type;
    qt_idade_w				   double precision;
    qt_peso_w				   real;
    cd_setor_atendimento_w	   setor_atendimento.cd_setor_atendimento%type;


BEGIN
    cd_pessoa_fisica_w := cd_pessoa_fisica_p;
    qt_peso_w		   := coalesce(obter_ultimo_sinal_vital_pf(cd_pessoa_fisica_w,'PESO'),coalesce(obter_peso_pf(cd_pessoa_fisica_w),0));

    if (coalesce(nr_atendimento_p::text, '') = '') then	
        qt_idade_w				:= obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'DIA');	
        cd_setor_atendimento_w	:= null;
        cd_estabelecimento_w	:= cd_estabelecimento_w;
    else
        select	max(obter_setor_atendimento(c.nr_atendimento)),
                max(c.cd_estabelecimento),
                max(substr(obter_idade(b.dt_nascimento,coalesce(b.dt_obito,clock_timestamp()),'DIA'),1,5)),
                max(b.cd_pessoa_fisica)
        into STRICT	cd_setor_atendimento_w,
                cd_estabelecimento_w,
                qt_idade_w,
                cd_pessoa_fisica_w
        from	pessoa_fisica b,
                atendimento_paciente c
        where	c.cd_pessoa_fisica	= b.cd_pessoa_fisica
        and		c.nr_atendimento = nr_atendimento_p;
    end if;

    select	coalesce(max(ie_gerar_reconstituicao),'S'),
            max(nr_seq_agrupamento)
    into STRICT	ie_gerar_reconstituicao_w,
            nr_seq_agrupamento_w
    from	setor_atendimento
    where	cd_setor_atendimento = cd_setor_atendimento_w;

    select coalesce(coalesce(max(qt_diluicao), 0) + coalesce(max(qt_volume_adic),0),0) qt_volume_ml
    into STRICT qt_conversao_w
    from material_diluicao
    where cd_material = cd_material_p
    and cd_unid_med_diluente = obter_unid_med_usua('ml')
    and ie_reconstituicao = 'S'
    and coalesce(obter_conversao_unid_med_cons(cd_material_p,cd_unid_med_p, qt_dose_p),0)
        between	coalesce(obter_conversao_unid_med_cons(cd_material_p,cd_unidade_medida,qt_dose_min),0)
            and	coalesce(obter_conversao_unid_med_cons(cd_material_p,cd_unidade_medida,qt_dose_max),9999999)
    and	obter_se_regra_diluicao_setor(nr_seq_interno, cd_setor_atendimento_w) = 'S'
    and	qt_idade_w between obter_idade_diluicao(cd_material,nr_sequencia,'MIN') and obter_idade_diluicao(cd_material,nr_sequencia,'MAX')
    and	qt_peso_w  between coalesce(qt_peso_min,0) and coalesce(qt_peso_max,999999)
    and	((cd_setor_excluir <> cd_setor_atendimento_w) or (coalesce(cd_setor_excluir::text, '') = ''))
    and	((nr_seq_agrupamento = nr_seq_agrupamento_w) or (coalesce(nr_seq_agrupamento::text, '') = ''))
    and	((cd_setor_atendimento = cd_setor_atendimento_w) or (coalesce(cd_setor_atendimento::text, '') = ''))            
    and	((ie_via_aplicacao = ie_via_aplicacao_p) or (coalesce(ie_via_aplicacao::text, '') = ''))
    and	((cd_unidade_medida	= cd_unid_med_p) or (coalesce(cd_unidade_medida::text, '') = ''))
    and	coalesce(cd_perfil,coalesce(obter_perfil_ativo,0)) = coalesce(obter_perfil_ativo,0)
    and	((cd_estabelecimento = cd_estabelecimento_w) or (coalesce(cd_estabelecimento::text, '') = ''))
    and ie_gerar_reconstituicao_w = 'S';
    begin
        sql_w := 'CALL OBTER_QT_CONV_DOSE_UNIT_MD(:1, :2, :3) INTO :qt_retorno_w';
        EXECUTE sql_w USING
            IN qt_conversao_w,
            IN qt_dose_p,            
            IN qt_dose_unitaria_w,
            OUT qt_retorno_w;
    exception
        when others then
            qt_retorno_w := null;
    end;
    return qt_retorno_w;
end;

begin
    cd_unidade_medida_w	:= upper(cd_unid_med_p);

    if (cd_unidade_medida_w = upper(obter_unid_med_usua('ML'))) then
        qt_retorno_w	:= qt_dose_p;
    else
        select	coalesce(max(qt_conversao),0)
        into STRICT	qt_conversao_w
        from	material_conversao_unidade
        where	cd_material = cd_material_p
        and	upper(cd_unidade_medida) = cd_unidade_medida_w;

        if (qt_conversao_w > 0) then
            begin
                sql_w := 'CALL OBTER_QT_DIVIDIR_DOSE_MD(:1, :2) INTO :qt_retorno_w';
                EXECUTE sql_w USING IN qt_dose_p, IN qt_conversao_w, OUT qt_retorno_w;
            exception
                when others then
                    qt_retorno_w := null;
            end;
            select	coalesce(max(qt_conversao),0)
            into STRICT	qt_conversao_ml_w
            from	material_conversao_unidade
            where	cd_material = cd_material_p
            and	upper(cd_unidade_medida) = upper(obter_unid_med_usua('ML'));

            obter_retorno_conversao_ml_w := converterDoseMLReconst(qt_retorno_w);
			qt_dose_w := qt_retorno_w;
            begin
                sql_w := 'CALL OBTER_RETORNO_CONVERSAO_ML_MD(:1, :2, :3) INTO :qt_retorno_w';
                EXECUTE sql_w USING IN qt_conversao_ml_w, IN obter_retorno_conversao_ml_w, IN  qt_dose_w , OUT qt_retorno_w;
            exception
                when others then
                    qt_retorno_w := null;
            end;
        else
            qt_retorno_w := converterDoseMLReconst(qt_retorno_w);
        end if;
    end if;

    return qt_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_obter_conversao_ml ( cd_material_p cpoe_material.cd_material%type, qt_dose_p cpoe_material.qt_dose%type, cd_unid_med_p cpoe_material.cd_unidade_medida%type, ie_via_aplicacao_p cpoe_material.ie_via_aplicacao%type, cd_pessoa_fisica_p cpoe_material.cd_pessoa_fisica%type, nr_atendimento_p cpoe_material.nr_atendimento%type) FROM PUBLIC;

