-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_hemodialise_spktv (cd_pessoa_fisica_p text, seq_grid_p bigint, nr_seq_exame_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


/*
TH - Tempo Hemodiálise
FS - Fluxo sangue
FD - Fluxo dialisato
M - Modelo dialisador
A - Tipo acesso para hemodialise
PR - PA's pré sentado
PO - PA's pós sentado
GP - Ganho de peso interdialítico GPID
T - Temperatura
FC - Frequencia cardíaca
I - Idade
*/
nr_sequencia_w		bigint;
dt_referencia_w		timestamp;
dt_retirada_w		timestamp;
dt_inicio_dialise_w	timestamp;
ds_modelo_w		varchar(100);
ds_acesso_w		varchar(100);
qt_tempo_dialise_w	varchar(10);
pas_pre_sentado_w	varchar(10);
pas_pos_sentado_w	varchar(10);
qt_gpid_w		double precision;
nr_seq_controle_w	bigint;
qt_fluxo_sangue_w	double precision;
qt_fluxo_dialisado_w	double precision;
qt_temp_axiliar_w	double precision;
qt_pulso_w		double precision;
ds_retorno_w		varchar(100);


BEGIN

select 	dt_referencia
into STRICT	dt_referencia_w
from	hd_exame_grid_controle
where 	nr_sequencia = seq_grid_p;

select	max(e.nr_sequencia)
into STRICT	nr_sequencia_w
from	hd_dialise e
where	e.cd_pessoa_fisica = cd_pessoa_fisica_p
and exists (	SELECT	1
		from	exame_laboratorio d,
			exame_lab_resultado a,
			exame_lab_result_item c
		where	a.nr_seq_resultado 	= c.nr_seq_resultado
		and	d.nr_seq_exame 		= c.nr_seq_exame
		and	trunc(coalesce(c.dt_digitacao,a.dt_resultado),'month') = trunc(dt_referencia_w,'month')
		and	a.cd_pessoa_fisica	= e.cd_pessoa_fisica
		and	a.cd_pessoa_fisica	= cd_pessoa_fisica_p
		and	c.nr_seq_exame		= nr_seq_exame_p
		and (coalesce(coalesce(CASE WHEN c.ds_resultado='0' THEN ''  ELSE CASE WHEN d.ie_formato_resultado='V' THEN ''  ELSE c.ds_resultado END  END ,	coalesce(to_char(c.qt_resultado),to_char(CASE WHEN c.pr_resultado=0 THEN ''  ELSE c.pr_resultado END ))),c.ds_resultado)) is not null
		and	e.dt_dialise between trunc(c.dt_coleta) and fim_dia(c.dt_coleta))
or exists (	select	1
		from	exame_laboratorio d,
			exame_lab_resultado a,
			exame_lab_result_item c,
			prescr_medica b
		where	a.nr_seq_resultado 	= c.nr_seq_resultado
		and	d.nr_seq_exame 		= c.nr_seq_exame
		and ((Obter_data_aprov_lab(a.nr_prescricao, c.nr_seq_prescr) IS NOT NULL AND (Obter_data_aprov_lab(a.nr_prescricao, c.nr_seq_prescr))::text <> ''))
		and	trunc(coalesce(c.dt_digitacao,a.dt_resultado),'month') = trunc(dt_referencia_w,'month')
		and	b.cd_pessoa_fisica	= e.cd_pessoa_fisica
		and	b.cd_pessoa_fisica	= cd_pessoa_fisica_p
		and	c.nr_seq_exame		= nr_seq_exame_p
		and	b.nr_prescricao		= a.nr_prescricao
		and (coalesce(coalesce(CASE WHEN c.ds_resultado='0' THEN ''  ELSE CASE WHEN d.ie_formato_resultado='V' THEN ''  ELSE c.ds_resultado END  END ,	coalesce(to_char(c.qt_resultado),to_char(CASE WHEN c.pr_resultado=0 THEN ''  ELSE c.pr_resultado END ))),c.ds_resultado)) is not null
		and	e.dt_dialise between trunc(c.dt_coleta) and fim_dia(c.dt_coleta));

if (coalesce(nr_sequencia_w::text, '') = '') then
	select	max(nr_sequencia)
	into STRICT	nr_sequencia_w
	from	hd_dialise
	where	dt_dialise between dt_referencia_w and last_day(dt_referencia_w);
end if;

if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
	select	max(dt_retirada),
		max(substr(hd_obter_modelo_dialisador(nr_seq_dialisador),1,80)) ds_modelo
	into STRICT	dt_retirada_w,
		ds_modelo_w
	from	hd_dialise_dialisador
	where	nr_seq_dialise = nr_sequencia_w;

	select	dt_inicio_dialise,
		(dt_retirada_w - dt_inicio_dialise)*1440 qt_tempo_dialise,
		qt_pa_sist_pre_deitado||'/'||qt_pa_diast_pre_deitado pas_pre_sentado,
		qt_pa_sist_pos_deitado||'/'||qt_pa_diast_pos_deitado pas_pos_sentado,
		hd_obter_gpid(nr_sequencia_w,cd_pessoa_fisica_p, coalesce(qt_peso_pre,0)) qt_gpid
	into STRICT	dt_inicio_dialise_w,
		qt_tempo_dialise_w,
		pas_pre_sentado_w,
		pas_pos_sentado_w,
		qt_gpid_w
	from	hd_dialise
	where	nr_sequencia = nr_sequencia_w;

	select 	max(substr(hd_obter_desc_acesso(nr_seq_acesso),1,100)) ds_acesso
	into STRICT	ds_acesso_w
	from	hd_dialise_acesso
	where	nr_seq_dialise = nr_sequencia_w;

	select	min(nr_sequencia)
	into STRICT	nr_seq_controle_w
	from	hd_controle
	where	nr_seq_dialise = nr_sequencia_w
	and	nr_sequencia <> (SELECT	min(nr_sequencia)
				 from	hd_controle
				 where	nr_seq_dialise = nr_sequencia_w);

	select	qt_fluxo_sangue,
		qt_fluxo_dialisado,
		qt_temperatura_axiliar,
		qt_pulso
	into STRICT	qt_fluxo_sangue_w,
		qt_fluxo_dialisado_w,
		qt_temp_axiliar_w,
		qt_pulso_w
	from	hd_controle
	where	nr_sequencia = nr_seq_controle_w;

	if (ie_opcao_p = 'TH') then
		ds_retorno_w := qt_tempo_dialise_w;
	elsif (ie_opcao_p = 'FS') then
		ds_retorno_w := qt_fluxo_sangue_w;
	elsif (ie_opcao_p = 'FD') then
		ds_retorno_w := qt_fluxo_dialisado_w;
	elsif (ie_opcao_p = 'M') then
		ds_retorno_w := ds_modelo_w;
	elsif (ie_opcao_p = 'A') then
		ds_retorno_w := ds_acesso_w;
	elsif (ie_opcao_p = 'PR') then
		ds_retorno_w := pas_pre_sentado_w;
	elsif (ie_opcao_p = 'PO') then
		ds_retorno_w := pas_pos_sentado_w;
	elsif (ie_opcao_p = 'GP') then
		ds_retorno_w := qt_gpid_w;
	elsif (ie_opcao_p = 'T') then
		ds_retorno_w := qt_temp_axiliar_w;
	elsif (ie_opcao_p = 'FC') then
		ds_retorno_w := qt_pulso_w;
	elsif (ie_opcao_p = 'I') then
		ds_retorno_w := substr(Obter_Idade_PF(cd_pessoa_fisica_p, dt_inicio_dialise_w, 'A'),1,100);
	end if;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_hemodialise_spktv (cd_pessoa_fisica_p text, seq_grid_p bigint, nr_seq_exame_p bigint, ie_opcao_p text) FROM PUBLIC;

