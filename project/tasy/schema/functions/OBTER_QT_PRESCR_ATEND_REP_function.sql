-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_qt_prescr_atend_rep ( nr_atendimento_p bigint, nr_prescricao_p bigint) RETURNS varchar AS $body$
DECLARE


ds_retorno_w				varchar(2000);
qt_mat_w				integer;
ds_proc_w				varchar(2000);
nm_curto_w				varchar(10);
qt_item_w				bigint;
qt_amostra_w				bigint;
qt_exec_w				bigint;
ds_virgula_w				varchar(02);
qt_proc_w				bigint := 0;
dt_referencia_w				timestamp;
qt_rec_w				bigint	:= 0;
qt_dieta_w				bigint;
qt_soluc_w				bigint;
nr_prescricao_w				bigint;
nr_seq_prescricao_w			bigint;
qt_reg_w				bigint;
qt_reg_ww				bigint;


c01 CURSOR FOR
SELECT	coalesce(nm_curto,'Proc'),
	sum(CASE WHEN coalesce(nr_seq_exame::text, '') = '' THEN  -1  ELSE CASE WHEN coalesce(ie_amostra,'N')='S' THEN 0  ELSE 1 END  END ),
	sum(CASE WHEN coalesce(b.cd_motivo_baixa,0)=0 THEN 0  ELSE qt_procedimento END ) qt_exec,
	count(*)
FROM prescr_medica a, prescr_procedimento b
LEFT OUTER JOIN setor_atendimento c ON (b.cd_setor_atendimento = c.cd_setor_atendimento)
WHERE a.nr_prescricao		= b.nr_prescricao and coalesce(b.nr_seq_origem::text, '') = '' and a.nr_prescricao		= nr_prescricao_p and a.nr_atendimento	= nr_atendimento_p --and	a.dt_prescricao		> dt_referencia_w
  and (coalesce(a.dt_liberacao, a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao, a.dt_liberacao_medico))::text <> '') and b.ie_suspenso		= 'N' group by coalesce(nm_curto,'Proc');


C02 CURSOR FOR
	SELECT	b.nr_prescricao,
		b.nr_sequencia
	from	prescr_procedimento b,
		prescr_medica a
	where	a.nr_prescricao		= b.nr_prescricao
	and	coalesce(b.nr_seq_origem::text, '') = ''
	and	a.nr_atendimento	= nr_atendimento_p
	and	a.nr_prescricao		= nr_prescricao_p
	and	(coalesce(a.dt_liberacao, a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao, a.dt_liberacao_medico))::text <> '')
	and	coalesce(b.cd_motivo_baixa,0)	= 0
	and	b.ie_suspenso		= 'N'
	--and	a.dt_prescricao		> dt_referencia_w
	and	substr(obter_se_proc_enfermagem_pa(b.cd_procedimento,b.ie_origem_proced),1,1) = 'S';



BEGIN

ds_proc_w				:= '';
ds_virgula_w				:= '';
dt_referencia_w				:= clock_timestamp() - interval '2 days';

select	count(*)
into STRICT	qt_mat_w
from 	prescr_material b,
	prescr_medica a
where	a.nr_prescricao	= b.nr_prescricao
and	a.nr_atendimento	= nr_atendimento_p
and	a.nr_prescricao		= nr_prescricao_p
and	coalesce(b.cd_motivo_baixa,0)	= 0
and	b.ie_agrupador		= 1
--and	a.dt_prescricao		> dt_referencia_w
and	(coalesce(a.dt_liberacao, a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao, a.dt_liberacao_medico))::text <> '')
and	coalesce(b.ie_suspenso,'N')		= 'N';

open c01;
loop
fetch c01 into
	nm_curto_w,
	qt_amostra_w,
	qt_exec_w,
	qt_item_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	ds_proc_w		:= ds_proc_w || ds_virgula_w || qt_item_w || nm_curto_w;
	if (qt_amostra_w > -1) then
		ds_proc_w	:= ds_proc_w || '(' || qt_amostra_w || '-' || qt_exec_w ||') ';
	else
		ds_proc_w	:= ds_proc_w || '(' || qt_exec_w ||') ';
	end if;
	ds_virgula_w		:= ', ';
end loop;
close c01;
/*
select	count(b.cd_procedimento)
into	qt_proc_w
from	prescr_procedimento b,
	prescr_medica a
where	a.nr_prescricao		= b.nr_prescricao
and	b.nr_seq_origem is null
and	a.nr_atendimento	= nr_atendimento_p
and	nvl(a.dt_liberacao, a.dt_liberacao_medico) is not null
and	nvl(b.cd_motivo_baixa,0)	= 0
and	b.ie_suspenso		= 'N'
and	a.dt_prescricao		> dt_referencia_w
and	substr(obter_se_proc_enfermagem_pa(b.cd_procedimento,b.ie_origem_proced),1,1) = 'S';

*/
qt_proc_w	 :=0;
open C02;
loop
fetch C02 into
	nr_prescricao_w,
	nr_seq_prescricao_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	qt_proc_w	:= qt_proc_w+1;

	select	count(*)
	into STRICT	qt_reg_w
	from	prescr_proc_hor x
	where	nr_prescricao = nr_prescricao_w
	and	nr_seq_procedimento = nr_seq_prescricao_w;
	--and	OBTER_SE_HORARIO_LIBERADO(x.dt_lib_horario, x.dt_horario) = 'S';
	if (qt_reg_w	>0)then
		select	count(*)
		into STRICT	qt_reg_ww
		from	prescr_proc_hor x
		where	nr_prescricao = nr_prescricao_w
		and	nr_seq_procedimento = nr_seq_prescricao_w
		--and	OBTER_SE_HORARIO_LIBERADO(x.dt_lib_horario, x.dt_horario) = 'S'
		and	coalesce(x.dt_suspensao::text, '') = '';

		if (qt_reg_ww	= 0) then
			qt_proc_w	:= qt_proc_w -1;
		end if;
	end if;

	end;
end loop;
close C02;


select	count(*)
into STRICT	qt_rec_w
from	prescr_recomendacao b,
	prescr_medica a
where	a.nr_prescricao		= b.nr_prescricao
and	a.nr_atendimento	= nr_atendimento_p
and	(coalesce(a.dt_liberacao, a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao, a.dt_liberacao_medico))::text <> '')
and	a.nr_prescricao		= nr_prescricao_p
and	b.ie_suspenso		= 'N';
--and	a.dt_prescricao		> dt_referencia_w;
select	count(*)
into STRICT	qt_dieta_w
from	prescr_dieta b,
	prescr_medica a
where	a.nr_prescricao		= b.nr_prescricao
and	a.nr_atendimento	= nr_atendimento_p
and	a.nr_prescricao		= nr_prescricao_p
and	(coalesce(a.dt_liberacao, a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao, a.dt_liberacao_medico))::text <> '')
and	b.ie_suspenso		= 'N';
--and	a.dt_prescricao		> dt_referencia_w;
select	count(*)
into STRICT	qt_soluc_w
from	prescr_solucao b,
	prescr_medica a
where	a.nr_prescricao		= b.nr_prescricao
and	a.nr_atendimento	= nr_atendimento_p
and	(coalesce(a.dt_liberacao, a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao, a.dt_liberacao_medico))::text <> '')
and	a.nr_prescricao		= nr_prescricao_p
and	b.ie_suspenso		= 'N';
--and	a.dt_prescricao		> dt_referencia_w;
ds_retorno_w	:= ds_proc_w;
if (qt_proc_w > 0) then
	ds_retorno_w	:= ds_retorno_w ||' Enf('||to_char(qt_proc_w)||')';
end if;

if (qt_soluc_w > 0) then
	ds_retorno_w	:= ds_retorno_w ||' Sol('||to_char(qt_proc_w)||')';
end if;

if (qt_mat_w > 0) then
	ds_retorno_w	:= qt_mat_w || 'Med' || ds_virgula_w || ds_retorno_w;
end if;
if (qt_rec_w	> 0) then
	ds_retorno_w	:= ds_retorno_w ||' Rec ('||to_char(qt_rec_w)||')';
end if;

if (qt_dieta_w	> 0) then
	ds_retorno_w	:= ds_retorno_w ||' Die ('||to_char(qt_dieta_w)||')';
end if;

RETURN ds_retorno_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_qt_prescr_atend_rep ( nr_atendimento_p bigint, nr_prescricao_p bigint) FROM PUBLIC;

