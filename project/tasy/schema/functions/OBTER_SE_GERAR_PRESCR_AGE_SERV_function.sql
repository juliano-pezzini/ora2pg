-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_gerar_prescr_age_serv (nr_seq_agenda_p bigint) RETURNS varchar AS $body$
DECLARE

 
ds_erro_w			varchar(255)	:= 'S';

nr_atendimento_w		bigint;
cd_pessoa_fisica_w		varchar(10);
cd_medico_solic_w		varchar(10);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_proc_interno_w	bigint;
qt_total_secao_w		smallint;
nr_secao_w			smallint;
qt_prescricao_w		bigint;
cd_agenda_w		bigint;
ie_exige_sessao_w	varchar(1);


BEGIN 
if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then 
	select	nr_atendimento, 
		cd_pessoa_fisica, 
		cd_medico_solic, 
		cd_procedimento, 
		ie_origem_proced, 
		nr_seq_proc_interno, 
		qt_total_secao, 
		nr_secao, 
		cd_agenda 
	into STRICT	nr_atendimento_w, 
		cd_pessoa_fisica_w, 
		cd_medico_solic_w, 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		nr_seq_proc_interno_w, 
		qt_total_secao_w, 
		nr_secao_w, 
		cd_agenda_w 
	from	agenda_consulta 
	where	nr_sequencia = nr_seq_agenda_p;
 
	select	coalesce(count(*),0) 
	into STRICT	qt_prescricao_w 
	from	prescr_medica 
	where	nr_seq_agecons = nr_seq_agenda_p;
	 
	select	max(coalesce(ie_exige_sessao,'S')) 
	into STRICT	ie_exige_sessao_w 
	from	agenda 
	where	cd_agenda	= cd_agenda_w;
 
	if (coalesce(qt_prescricao_w,0) > 0) then 
		ds_erro_w	:= Wheb_mensagem_pck.get_texto(309823); --'já foram geradas prescrições para esta agenda!'; 
	elsif (coalesce(nr_atendimento_w::text, '') = '') and 
		((cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') or (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '')) and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then 
		ds_erro_w	:= lower(Wheb_mensagem_pck.get_texto(309824)); --'é necessário gerar um atendimento para o vínculo das sessões!'; 
	elsif (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and 
		((cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') or (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '')) and (coalesce(cd_medico_solic_w::text, '') = '') then 
		ds_erro_w	:= lower(Wheb_mensagem_pck.get_texto(309825)); --'é necessário informar o médico solicitante para a geração da prescrição!'; 
	elsif (ie_exige_sessao_w	= 'S') and (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and 
		((cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') or (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '')) and (coalesce(qt_total_secao_w::text, '') = '') then 
		ds_erro_w	:= lower(Wheb_mensagem_pck.get_texto(309826)); --'é necessário informar a quantidade total de sessões previstas!'; 
	elsif (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and 
		((cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') or (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '')) and (qt_total_secao_w IS NOT NULL AND qt_total_secao_w::text <> '') and (nr_secao_w IS NOT NULL AND nr_secao_w::text <> '') and (nr_secao_w			> qt_total_secao_w) then 
		ds_erro_w	:= Wheb_mensagem_pck.get_texto(309827); --'a quantidade total de sessões previstas já foi realizada!'; 
	else
		ds_erro_w	:= 'S';
	end if;
end if;
 
return ds_erro_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_gerar_prescr_age_serv (nr_seq_agenda_p bigint) FROM PUBLIC;

