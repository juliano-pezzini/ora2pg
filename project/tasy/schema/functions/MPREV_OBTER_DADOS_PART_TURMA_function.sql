-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION mprev_obter_dados_part_turma ( nr_seq_participante_p bigint, nr_seq_turma_p bigint, nr_seq_agendamento_p bigint, ie_opcao_p text, dt_referencia_p timestamp) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Obter dados do participante na turma que o mesmo participa
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
NR_SEQ_PARTICIPANTE_P sempre deve ser passado
Pode ser passado NR_SEQ_TURMA_P ou NR_SEQ_AGENDAMENTO_P
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_retorno_w	varchar(255)	:= null;
qt_faltas_w	bigint;
dt_referencia_w	timestamp;
nr_seq_turma_w	bigint;

/* Opções
FM - Faltas no mês
FT - Faltas total
*/
BEGIN
dt_referencia_w	:= coalesce(dt_referencia_p,clock_timestamp());

if (nr_seq_participante_p IS NOT NULL AND nr_seq_participante_p::text <> '') then
	if (nr_seq_agendamento_p IS NOT NULL AND nr_seq_agendamento_p::text <> '') then
		select	a.nr_seq_turma
		into STRICT	nr_seq_turma_w
		from	mprev_agendamento a
		where	a.nr_sequencia	= nr_seq_agendamento_p;
	else
		nr_seq_turma_w	:= nr_seq_turma_p;
	end if;

	if (nr_seq_turma_w IS NOT NULL AND nr_seq_turma_w::text <> '') then
		if (ie_opcao_p = 'FM') then
			select	count(1)
			into STRICT	qt_faltas_w
			from	mprev_sel_partic_agenda a,
				mprev_agendamento b
			where	a.nr_seq_agendamento = b.nr_sequencia
			and	a.nr_seq_participante = nr_seq_participante_p
			and	b.nr_seq_turma	= nr_seq_turma_w
			and	b.ie_tipo_atendimento = 'C' /* Somente coletivos */
			and	b.ie_status_agenda = 'E' /* Somente realizadas */
			and	a.ie_selecionado = 'N'
			and	b.dt_agenda between trunc(dt_referencia_w,'month') and fim_dia(last_day(dt_referencia_w));

			ds_retorno_w	:= qt_faltas_w;
		elsif (ie_opcao_p = 'FT') then
			select	count(1)
			into STRICT	qt_faltas_w
			from	mprev_sel_partic_agenda a,
				mprev_agendamento b
			where	a.nr_seq_agendamento = b.nr_sequencia
			and	a.nr_seq_participante = nr_seq_participante_p
			and	b.nr_seq_turma	= nr_seq_turma_w
			and	b.ie_tipo_atendimento = 'C' /* Somente coletivos */
			and	b.ie_status_agenda = 'E' /* Somente realizadas */
			and	a.ie_selecionado = 'N';

			ds_retorno_w	:= qt_faltas_w;
		end if;
	end if;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION mprev_obter_dados_part_turma ( nr_seq_participante_p bigint, nr_seq_turma_p bigint, nr_seq_agendamento_p bigint, ie_opcao_p text, dt_referencia_p timestamp) FROM PUBLIC;

