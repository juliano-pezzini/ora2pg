-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_regra_mensagem_agecons (cd_agenda_p bigint, ie_regra_apres_p text, ie_tipo_p text, cd_pessoa_fisica_p text, ie_classificacao_p text default null, cd_convenio_p bigint default null, ie_tipo_agenda_p text default null) RETURNS varchar AS $body$
DECLARE


qt_regra_w		bigint;
nr_seq_regra_msg_w	bigint;
cd_medico_w		varchar(10);
ds_mensagem_w		varchar(4000);
ds_titulo_w		varchar(80);
qt_idade_w		bigint;

ds_todas_mensagens_w	varchar(10000);

ds_retorno_w		varchar(10000) := '';

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	agenda_regra_mensagem
	where	coalesce(cd_medico, coalesce(cd_medico_w, '0')) = coalesce(cd_medico_w, '0')
	and	ie_regra_apres			= ie_regra_apres_p
	and	((qt_idade_w between coalesce(qt_idade_min, qt_idade_w) and coalesce(qt_idade_max, qt_idade_w)) or (coalesce(qt_idade_w::text, '') = ''))
	and	coalesce(ie_agenda, coalesce(ie_tipo_agenda_p,'0')) = coalesce(ie_tipo_agenda_p,'0')
	and	((coalesce(dt_inicio_vigencia::text, '') = '') or (trunc(dt_inicio_vigencia) <= trunc(clock_timestamp())))
	and	((coalesce(dt_final_vigencia::text, '') = '') or (trunc(dt_final_vigencia) >= trunc(clock_timestamp())))
	and	coalesce(cd_convenio, coalesce(cd_convenio_p,0)) = coalesce(cd_convenio_p,0)
	and	coalesce(cd_agenda, coalesce(cd_agenda_p, 0)) = coalesce(cd_agenda_p, 0)
	and 	coalesce(ie_grupo_proced,'N') = 'N'
	and coalesce(nr_seq_proc_interno, 0) = 0;
	
C02 CURSOR FOR
	SELECT	substr((ds_mensagem),1,4000),
		(ds_titulo_mensagem)
	from	agenda_regra_mensagem
	where	nr_sequencia	= nr_seq_regra_msg_w
	and	coalesce(ie_classif_agenda,coalesce(ie_classificacao_p,'0')) = coalesce(ie_classificacao_p,'0')
	and	coalesce(ie_agenda, coalesce(ie_tipo_agenda_p,'0')) = coalesce(ie_tipo_agenda_p,'0')
	and	coalesce(cd_convenio, coalesce(cd_convenio_p,0)) = coalesce(cd_convenio_p,0)
	and	coalesce(cd_agenda, coalesce(cd_agenda_p, 0)) = coalesce(cd_agenda_p, 0)
	and coalesce(ie_grupo_proced,'N') = 'N';
	

BEGIN

/* 	Regra Apresentacao 
	S - Salvar agendamento
	C - Confirmacao do agendamento */

	
/*	Tipo
	T - Titulo
	M - Mensagem */
select	count(*)
into STRICT	qt_regra_w
from	agenda_regra_mensagem
where	coalesce(ie_agenda, 'C') = 'C'
and 	coalesce(ie_grupo_proced,'N') = 'N';

if (qt_regra_w > 0) and (cd_agenda_p IS NOT NULL AND cd_agenda_p::text <> '') and (ie_regra_apres_p IS NOT NULL AND ie_regra_apres_p::text <> '') then

	if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
		select	(obter_idade(dt_nascimento, clock_timestamp(), 'A'))::numeric
		into STRICT	qt_idade_w
		from	pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_fisica_p;
	else
		qt_idade_w := null;
	end if;
	
	select	cd_pessoa_fisica
	into STRICT	cd_medico_w
	from	agenda
	where	cd_agenda = cd_agenda_p;
	
	
	open C01;
	loop
	fetch C01 into	
		nr_seq_regra_msg_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		open C02;
		loop
		fetch C02 into	
			ds_mensagem_w,
			ds_titulo_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			ds_todas_mensagens_w := substr(ds_mensagem_w||' '||ds_todas_mensagens_w,1,10000);
			end;
		end loop;
		close C02;
		
		end;
	end loop;
	close C01;
		
	if (ie_tipo_p = 'T') then
		ds_retorno_w	:= substr(ds_titulo_w,1,4000);
	elsif (ie_tipo_p = 'M') then
		ds_retorno_w	:= substr(ds_todas_mensagens_w,1,4000);
	end if;
		
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_regra_mensagem_agecons (cd_agenda_p bigint, ie_regra_apres_p text, ie_tipo_p text, cd_pessoa_fisica_p text, ie_classificacao_p text default null, cd_convenio_p bigint default null, ie_tipo_agenda_p text default null) FROM PUBLIC;

