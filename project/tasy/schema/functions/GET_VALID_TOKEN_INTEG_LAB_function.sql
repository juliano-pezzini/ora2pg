-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION get_valid_token_integ_lab (biofrost_Event_p text, ds_Integration_p text) RETURNS varchar AS $body$
DECLARE


	ds_Token LAB_EXAME_TOKEN.DS_ACCESS_TOKEN%type;
	dt_Token_Expiration LAB_EXAME_TOKEN.dt_expiration%type;

	ds_param_integ_res_w text;
	data_auth_w text;
	json_request_w philips_json;
	i_try_get_token smallint := 0;

	procedure QUERY_LAB_EXAM_TOKEN as
	;
BEGIN
		begin
			select DS_ACCESS_TOKEN,  dt_expiration
			into STRICT ds_Token,  dt_Token_Expiration
			from LAB_EXAME_TOKEN 
			where DS_INTEGRATION = ds_Integration_p;
		exception
		when others then
			begin
				ds_Token := null;
				dt_Token_Expiration := clock_timestamp() - interval '1 days';
			end;
		end;
	end;
begin	
	json_request_w := philips_json();

	QUERY_LAB_EXAM_TOKEN();
		
	if (clock_timestamp() > dt_Token_Expiration) then
		-- call integration that inserts token
		json_request_w.put('user',wheb_usuario_pck.get_nm_usuario);
		json_request_w.put('establishment', wheb_usuario_pck.get_cd_estabelecimento);
		dbms_lob.createtemporary(lob_loc => data_auth_w, cache => true, dur => dbms_lob.call);
		json_request_w.(data_auth_w);
		ds_param_integ_res_w := bifrost.send_integration_content(biofrost_Event_p, data_auth_w, wheb_usuario_pck.get_nm_usuario);
		-- end call integration that inserts token
		LOOP
		    DBMS_LOCK.sleep(3); -- sleep necessary for await bifrost response
		    QUERY_LAB_EXAM_TOKEN();
		    
		    i_try_get_token := i_try_get_token + 1;
		    EXIT WHEN ((clock_timestamp() < dt_Token_Expiration) OR (i_try_get_token = 10));
		END LOOP;
	end if;

	return ds_Token;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION get_valid_token_integ_lab (biofrost_Event_p text, ds_Integration_p text) FROM PUBLIC;

