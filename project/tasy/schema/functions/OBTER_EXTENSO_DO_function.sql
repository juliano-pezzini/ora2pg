-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_extenso_do (valor_p bigint) RETURNS varchar AS $body$
DECLARE


type Unidades is table of varchar(200) index by integer;
type Dezenas is table of varchar(200) index by integer;
type Centenas is table of varchar(200) index by integer;

Unidades_w		Unidades;
Dezenas_w		Dezenas;
Centenas_w		Centenas;
valor_w			integer := 0;
centavos_w		integer := 0;
ds_valor_w		varchar(2000) := '';

ie_moeda_w		varchar(10) := ' Pesos';
ie_centavo_w		varchar(10) := ' Centavos';


BEGIN

Unidades_w(1)	:= 'Uno';
Unidades_w(2)	:= 'Dos';
Unidades_w(3)	:= 'Tres';
Unidades_w(4)	:= 'cuatro';
Unidades_w(5)	:= 'Cinco';
Unidades_w(6)	:= 'Seis';
Unidades_w(7)	:= 'Siete';
Unidades_w(8)	:= 'Ocho';
Unidades_w(9)	:= 'Nueve';
Unidades_w(10)	:= 'Diez';
Unidades_w(11)	:= 'Once';
Unidades_w(12)	:= 'Doce';
Unidades_w(13)	:= 'Trece';
Unidades_w(14)	:= 'Catorce';
Unidades_w(15)	:= 'Quince';
Unidades_w(16)	:= 'Deieciseis';
Unidades_w(17)	:= 'Diecisiete';
Unidades_w(18)	:= 'Dieciocho';
Unidades_w(19)	:= 'Diecinueve';

Dezenas_w(1)	:= 'Diez';
Dezenas_w(2)	:= 'Vente';
Dezenas_w(3)	:= 'Trenta';
Dezenas_w(4)	:= 'Cuarenta';
Dezenas_w(5)	:= 'Cincuenta';
Dezenas_w(6)	:= 'Sesenta';
Dezenas_w(7)	:= 'Setenta';
Dezenas_w(8)	:= 'Ochenta';
Dezenas_w(9)	:= 'Noventa';

Centenas_w(1)	:= 'Cien';
Centenas_w(2)	:= 'Docientos';
Centenas_w(3)	:= 'Trecientos';
Centenas_w(4)	:= 'Cuatrocientos';
Centenas_w(5)	:= 'Quinientos';
Centenas_w(6)	:= 'Seiscientos';
Centenas_w(7)	:= 'Setecientos';
Centenas_w(8)	:= 'Ochoocientos';
Centenas_w(9)	:= 'Novecientos';

valor_w 	:= Trunc(valor_p);
centavos_w	:= trunc((valor_p - trunc(valor_p)) * 100);

if (valor_w = 1) then
	ie_moeda_w := ' Real';
end if;

if (centavos_w = 1) then
	ie_centavo_w := ' Centavo';
end if;

if (valor_w >= 1000000000) then
	if (Trunc(valor_w/1000000000) = 1) then
		ds_valor_w	:= ds_valor_w || ' ' || Unidades_w(Trunc(valor_w/1000000000)) || ' Bilhão';
	else
		ds_valor_w	:= ds_valor_w || ' ' || Unidades_w(Trunc(valor_w/1000000000)) || ' Bilhões';
	end if;
	valor_w := mod(valor_w,1000000000);
end if;

if (valor_w >= 100000000) then
	if (ds_valor_w IS NOT NULL AND ds_valor_w::text <> '') then
		ds_valor_w := ds_valor_w || ' e';
	end if;

	if ((mod(valor_w,1000000000) < 1000000) and (Trunc(valor_w/100000000) = 1)) or (mod(valor_w,100000000) > 1)then
		ds_valor_w	:= ds_valor_w || ' ' || Centenas_w(Trunc(valor_w/100000000));
	else
		ds_valor_w	:= ds_valor_w || ' ' || 'Ciento';
	end if;
	valor_w := mod(valor_w,100000000);
	if (valor_w = 0) or (valor_w < 1000000) then
		ds_valor_w := ds_valor_w || ' Millones';
	end if;
end if;

if (valor_w >= 20000000) then
	if (ds_valor_w IS NOT NULL AND ds_valor_w::text <> '') then
		ds_valor_w := ds_valor_w || ' e';
	end if;
	ds_valor_w := ds_valor_w || ' ' || Dezenas_w(Trunc(valor_w/10000000));
      valor_w := mod(valor_w,10000000);
	if (valor_w = 0) or (valor_w < 1000000) then
		ds_valor_w := ds_valor_w || ' Millones';
	end if;
end if;

if (valor_w >= 1000000) then
	if (ds_valor_w IS NOT NULL AND ds_valor_w::text <> '') then
		ds_valor_w := ds_valor_w || ' e';
	end if;
	if (Trunc(valor_w / 1000000) = 1) then
		ds_valor_w := ds_valor_w || ' ' || Unidades_w(Trunc(valor_w / 1000000)) || ' Millon';
	else
		ds_valor_w := ds_valor_w || ' ' || Unidades_w(Trunc(valor_w / 1000000)) || ' Millones';
	end if;
	valor_w := Mod(valor_w,1000000);
end if;

if (valor_w >= 100000) then
	if (ds_valor_w IS NOT NULL AND ds_valor_w::text <> '') then
		ds_valor_w := ds_valor_w || ' e';
	end if;	

	if ((mod(valor_w,100000) < 1000) and (Trunc(valor_w / 100000) = 1)) or (Trunc(valor_w / 100000) > 1) then
		ds_valor_w := ds_valor_w || ' ' || Centenas_w(Trunc(valor_w / 100000));
	else
		ds_valor_w := ds_valor_w || ' ' || 'Ciento';
	end if;
	valor_w := mod(valor_w, 100000);
	if (valor_w = 0) or (valor_w < 1000) then
		ds_valor_w := ds_valor_w || ' Mil';
	end if;
end if;

if (valor_w >= 20000) then
	if (ds_valor_w IS NOT NULL AND ds_valor_w::text <> '') then
		ds_valor_w := ds_valor_w || ' e';
	end if;

	ds_valor_w := ds_valor_w || ' ' || Dezenas_w(Trunc(valor_w / 10000));
	valor_w := mod(valor_w, 10000);
	if (valor_w = 0) or (valor_w < 1000) then
		ds_valor_w := ds_valor_w || ' Mil';
	end if;
end if;

if (valor_w >= 1000) then
	if (ds_valor_w IS NOT NULL AND ds_valor_w::text <> '') then
		ds_valor_w := ds_valor_w || ' e';
	end if;

	ds_valor_w := ds_valor_w || ' ' || Unidades_w(Trunc(valor_w / 1000));
	valor_w := mod(valor_w, 1000);
	ds_valor_w := ds_valor_w || ' Mil';
end if;

if (valor_w >= 100) then
	if (ds_valor_w IS NOT NULL AND ds_valor_w::text <> '') then
		ds_valor_w := ds_valor_w || ' e';
	end if;	

	if ((valor_w / 100) = 1) or (Trunc(valor_w / 100) > 1) then
		ds_valor_w := ds_valor_w || ' ' || Centenas_w(Trunc(valor_w / 100));
	else
		ds_valor_w := ds_valor_w || ' ' || 'Ciento';
	end if;
	valor_w := mod(valor_w, 100);
end if;

if (valor_w >= 20) then
	if (ds_valor_w IS NOT NULL AND ds_valor_w::text <> '') then
		ds_valor_w := ds_valor_w || ' e';
	end if;
	ds_valor_w := ds_valor_w || ' ' || Dezenas_w(Trunc(valor_w / 10));
	valor_w := mod(valor_w, 10);
end if;

if (valor_w >= 1) then
	if (ds_valor_w IS NOT NULL AND ds_valor_w::text <> '') then
		ds_valor_w := ds_valor_w || ' e';
	end if;
	ds_valor_w := ds_valor_w || ' ' || Unidades_w(valor_w);
end if;

ds_valor_w := ds_valor_w || ie_moeda_w;

if (Centavos_w > 0) then
	if (Centavos_w >= 20) then
		if (ds_valor_w IS NOT NULL AND ds_valor_w::text <> '') then
      	   ds_valor_w := ds_valor_w || ' e';
		end if;
		ds_valor_w := ds_valor_w || ' ' || Dezenas_w(Trunc(Centavos_w / 10));
		Centavos_w := mod(Centavos_w, 10);
	end if;

	if (Centavos_w >= 1) then
		if (ds_valor_w IS NOT NULL AND ds_valor_w::text <> '') then
	         ds_valor_w := ds_valor_w || ' e';
		end if;
		ds_valor_w := ds_valor_w || ' ' || Unidades_w(Centavos_w);
	end if;
	ds_valor_w := ds_valor_w || ie_centavo_w;
end if;

return ds_valor_w || ' .';

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_extenso_do (valor_p bigint) FROM PUBLIC;

