-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION dash_verify_type_permission (nr_seq_dashboard_p bigint) RETURNS varchar AS $body$
DECLARE


ie_permission_type_w		varchar(5);
ie_qt_permissions_w			bigint;
nm_user_w					varchar(255);
nm_new_user_w				varchar(255);



BEGIN

	ie_permission_type_w := 'F';
	nm_user_w := obter_usuario_ativo;

	select	nm_usuario_nrec
	into STRICT	nm_new_user_w
	from	dashboard_base
	where	nr_sequencia = nr_seq_dashboard_p;

	if (nm_new_user_w = nm_user_w) then
	begin
		ie_permission_type_w := 'ADMN';
	end;
	else
	begin

		select ( select	coalesce(ie_permission_type, 'F')
				 from	dashboard_permissions
				 where	nr_seq_dashboard = nr_seq_dashboard_p
				 and		nm_user_permission = nm_user_w
				 and		ie_permission_type = 'ADMN'
				
union all

				 select	coalesce(ie_permission_type, 'F')
				 from	dashboard_permissions
				 where	nr_seq_dashboard = nr_seq_dashboard_p
				 and		(cd_profile_permission IS NOT NULL AND cd_profile_permission::text <> '' AND obter_perfil_ativo = cd_profile_permission)
				 and		ie_permission_type = 'ADMN'
				 and not exists (	select	ie_permission_type
									from	dashboard_permissions
									where	nr_seq_dashboard = nr_seq_dashboard_p
									and		nm_user_permission = nm_user_w
									and		ie_permission_type = 'ADMN' ))
		into STRICT	ie_permission_type_w
		;


		if (ie_permission_type_w = 'F') then
		begin

			select ( select	coalesce(ie_permission_type, 'F')
					from	dashboard_permissions
					where	nr_seq_dashboard = nr_seq_dashboard_p
					and		nm_user_permission = nm_user_w
					and		ie_permission_type = 'ALTE'
					
union all

					select	coalesce(ie_permission_type, 'F')
					from	dashboard_permissions
					where	nr_seq_dashboard = nr_seq_dashboard_p
					and		(cd_profile_permission IS NOT NULL AND cd_profile_permission::text <> '' AND obter_perfil_ativo = cd_profile_permission)
					and		ie_permission_type = 'ALTE'
					and not exists (	select	ie_permission_type
										from	dashboard_permissions
										where	nr_seq_dashboard = nr_seq_dashboard_p
										and		nm_user_permission = nm_user_w
										and		ie_permission_type = 'ALTE' ))
			into STRICT	ie_permission_type_w
			;

			if (ie_permission_type_w = 'F') then
			begin

				select ( select	coalesce(ie_permission_type, 'F')
						from	dashboard_permissions
						where	nr_seq_dashboard = nr_seq_dashboard_p
						and		nm_user_permission = nm_user_w
						and		ie_permission_type = 'VISU'
						
union all

						select	coalesce(ie_permission_type, 'F')
						from	dashboard_permissions
						where	nr_seq_dashboard = nr_seq_dashboard_p
						and		(cd_profile_permission IS NOT NULL AND cd_profile_permission::text <> '' AND obter_perfil_ativo = cd_profile_permission)
						and		ie_permission_type = 'VISU'
						and not exists (	select	ie_permission_type
											from	dashboard_permissions
											where	nr_seq_dashboard = nr_seq_dashboard_p
											and		nm_user_permission = nm_user_w
											and		ie_permission_type = 'VISU' ))
				into STRICT	ie_permission_type_w
				;

				if (ie_permission_type_w = 'F') then
				begin

					select ( select	coalesce(ie_permission_type, 'F')
							from	dashboard_permissions
							where	nr_seq_dashboard = nr_seq_dashboard_p
							and		nm_user_permission = nm_user_w
							and		ie_permission_type = 'NODR'
							
union all

							select	coalesce(ie_permission_type, 'F')
							from	dashboard_permissions
							where	nr_seq_dashboard = nr_seq_dashboard_p
							and		(cd_profile_permission IS NOT NULL AND cd_profile_permission::text <> '' AND obter_perfil_ativo = cd_profile_permission)
							and		ie_permission_type = 'NODR'
							and not exists (	select	ie_permission_type
												from	dashboard_permissions
												where	nr_seq_dashboard = nr_seq_dashboard_p
												and		nm_user_permission = nm_user_w
												and		ie_permission_type = 'NODR' ))
					into STRICT	ie_permission_type_w
					;

				end;
				end if;

			end;
			end if;

		end;
		end if;

	end;
	end if;


	return	ie_permission_type_w;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION dash_verify_type_permission (nr_seq_dashboard_p bigint) FROM PUBLIC;

