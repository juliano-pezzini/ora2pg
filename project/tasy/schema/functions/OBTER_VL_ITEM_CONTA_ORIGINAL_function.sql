-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_vl_item_conta_original ( nr_seq_propaci_p bigint, nr_seq_matpaci_p bigint) RETURNS bigint AS $body$
DECLARE

							
vl_item_original_w		double precision	:= null;
vl_proc_tabela_w		propaci_log_preco.vl_procedimento%type	:= null;
vl_mat_tabela_w			double precision	:= null;
nr_seq_log_w			propaci_log_preco.nr_sequencia%type	:= null;
ie_valor_informado_w		procedimento_paciente.ie_valor_informado%type;
qt_deducao_informada_w		bigint;
qt_deducao_nao_inf_w		bigint;
ie_informado_w			procedimento_paciente.ie_valor_informado%type	:= 'N';
vl_procedimento_w		procedimento_paciente.vl_procedimento%type;
qt_procedimento_w		procedimento_paciente.qt_procedimento%type;
vl_material_w			material_atend_paciente.vl_material%type;
qt_material_w			material_atend_paciente.qt_material%type;
vl_deducao_w			conta_pac_ded_conv_item.vl_rateio%type;
nr_seq_ajuste_proc_w		procedimento_paciente.nr_seq_ajuste_proc%type;
tx_ajuste_proc_w   		regra_ajuste_proc.tx_ajuste%type;
nr_seq_regra_qtde_exec_w	procedimento_paciente.nr_seq_regra_qtde_exec%type;
tx_procedimento_w		procedimento_paciente.tx_procedimento%type;
vl_calculo_proc_w		procedimento_paciente.vl_procedimento%type;

vl_calculo_item_w		double precision;
ie_preco_informado_w		regra_ajuste_proc.ie_preco_informado%type;
vl_proc_ajustado_w		regra_ajuste_proc.vl_proc_ajustado%type;
vl_desconto_w			double precision;

c_propaci_log_preco CURSOR FOR
SELECT	a.nr_sequencia
from	propaci_log_preco a
where	a.nr_seq_propaci	= nr_seq_propaci_p
and	ie_motivo	= 'ORIG'
order by
	a.nr_sequencia;
		
c_matpaci_log_preco CURSOR FOR
SELECT	a.nr_sequencia
from	matpaci_log_preco a
where	a.nr_seq_matpaci	= nr_seq_matpaci_p
and	ie_motivo	= 'ORIG'
order by
	a.nr_sequencia;

BEGIN

if (nr_seq_propaci_p IS NOT NULL AND nr_seq_propaci_p::text <> '') then
	for r_c_propaci_log_preco in c_propaci_log_preco loop
		nr_seq_log_w	:= r_c_propaci_log_preco.nr_sequencia;
	end loop;
	
	if (nr_seq_log_w IS NOT NULL AND nr_seq_log_w::text <> '') then
		select	a.vl_procedimento
		into STRICT	vl_proc_tabela_w
		from	propaci_log_preco a
		where	a.nr_sequencia	= nr_seq_log_w;
	end if;
	
	select	a.ie_valor_informado,
		a.vl_procedimento,
		a.qt_procedimento,
		coalesce(obter_valor_deducao_conv(a.nr_interno_conta,a.nr_sequencia,null,null,null),0) vl_deducao,
		a.nr_seq_ajuste_proc,
		nr_seq_regra_qtde_exec,
		tx_procedimento,
		coalesce(obter_desconto_matproc(a.nr_sequencia,'P'), 0) vl_desconto
	into STRICT	ie_valor_informado_w,
		vl_procedimento_w,
		qt_procedimento_w,
		vl_deducao_w,
		nr_seq_ajuste_proc_w,
		nr_seq_regra_qtde_exec_w,
		tx_procedimento_w,
		vl_desconto_w
	from	procedimento_paciente a
	where	a.nr_sequencia	= nr_seq_propaci_p;
	
	select	count(1)
	into STRICT	qt_deducao_nao_inf_w
	from	proc_paciente_valor a
	where	a.nr_seq_procedimento	= nr_seq_propaci_p
	and	a.ie_tipo_valor = 94;
	
	select	count(1)
	into STRICT	qt_deducao_informada_w
	from	proc_paciente_valor a
	where	a.nr_seq_procedimento	= nr_seq_propaci_p
	and	a.ie_tipo_valor = 95;
	
	if	((ie_valor_informado_w = 'S') or (qt_deducao_informada_w > 0 AND vl_deducao_w <> 0)) and ((qt_deducao_nao_inf_w = 0) or (vl_deducao_w = 0)) then
		ie_informado_w	:= 'S';
	end if;
	
	if (nr_seq_ajuste_proc_w > 0) then
		select 	coalesce(max(tx_ajuste),1),
			coalesce(max(ie_preco_informado),'N'),
			coalesce(max(vl_proc_ajustado),0)
		into STRICT 	tx_ajuste_proc_w,
			ie_preco_informado_w,
			vl_proc_ajustado_w
		from  	regra_ajuste_proc
		where 	nr_sequencia = nr_seq_ajuste_proc_w;
		
		if (ie_preco_informado_w = 'S' and vl_proc_ajustado_w > 0) then
			vl_proc_tabela_w := vl_proc_ajustado_w;
		elsif (tx_ajuste_proc_w > 0 and vl_proc_ajustado_w > 0) then
			vl_proc_tabela_w := dividir(vl_proc_tabela_w,tx_ajuste_proc_w );
		end if;
	end if;
	if (ie_informado_w = 'S') then
		vl_item_original_w	:= dividir(vl_procedimento_w + vl_deducao_w + vl_desconto_w, qt_procedimento_w);
	elsif (vl_proc_tabela_w > 0) then
		vl_proc_tabela_w := trunc(vl_proc_tabela_w,2);
		if ( coalesce(nr_seq_regra_qtde_exec_w,0) > 0 and coalesce(tx_procedimento_w,0) > 0) then
			tx_procedimento_w := (tx_procedimento_w/100);
		else
			tx_procedimento_w := 1;
		end if;
		vl_calculo_proc_w	:= (vl_proc_tabela_w * tx_procedimento_w * qt_procedimento_w);
		vl_calculo_item_w	:= abs(vl_calculo_proc_w - (vl_procedimento_w + vl_deducao_w + vl_desconto_w));
		if (abs(vl_proc_tabela_w * tx_procedimento_w) <= abs(dividir(vl_procedimento_w + vl_deducao_w + vl_desconto_w,qt_procedimento_w))) then
			if (qt_procedimento_w < 0) then
				vl_proc_tabela_w 	:= vl_proc_tabela_w *-1;
				vl_calculo_item_w	:= vl_calculo_item_w *-1;
				vl_proc_tabela_w 	:= abs((vl_proc_tabela_w * tx_procedimento_w) - dividir( vl_calculo_item_w ,qt_procedimento_w));
			else
				vl_proc_tabela_w 	:= (vl_proc_tabela_w * tx_procedimento_w) + dividir(vl_calculo_item_w,qt_procedimento_w);				
			end if;
		elsif (coalesce(tx_procedimento_w,1) <> 1) then
			vl_proc_tabela_w := (vl_proc_tabela_w * tx_procedimento_w);
		end if;
		vl_item_original_w	:= vl_proc_tabela_w;
	end if;	
	
elsif (nr_seq_matpaci_p IS NOT NULL AND nr_seq_matpaci_p::text <> '') then
	for r_c_matpaci_log_preco in c_matpaci_log_preco loop
		nr_seq_log_w	:= r_c_matpaci_log_preco.nr_sequencia;
	end loop;
	
	if (nr_seq_log_w IS NOT NULL AND nr_seq_log_w::text <> '') then
		select	coalesce(a.vl_unitario, a.vl_material) -- considerar valor unitario com 4 casas primeiramente
		into STRICT	vl_mat_tabela_w
		from	matpaci_log_preco a
		where	a.nr_sequencia	= nr_seq_log_w;
	end if;
	
	select	a.ie_valor_informado,
		a.vl_material,
		a.qt_material,
		coalesce(obter_valor_deducao_conv(a.nr_interno_conta,null,a.nr_sequencia,null,null),0) vl_deducao,
		coalesce(obter_desconto_matproc(a.nr_sequencia,'M'), 0) vl_desconto
	into STRICT	ie_valor_informado_w,
		vl_material_w,
		qt_material_w,
		vl_deducao_w,
		vl_desconto_w
	from	material_atend_paciente a
	where	a.nr_sequencia	= nr_seq_matpaci_p;
	
	select	count(1)
	into STRICT	qt_deducao_nao_inf_w
	from	mat_atend_paciente_valor a
	where	a.nr_seq_material	= nr_seq_matpaci_p
	and	a.ie_tipo_valor = 94;
	
	select	count(1)
	into STRICT	qt_deducao_informada_w
	from	mat_atend_paciente_valor a
	where	a.nr_seq_material	= nr_seq_matpaci_p
	and	a.ie_tipo_valor = 95;
	
	if	((ie_valor_informado_w = 'S') or (qt_deducao_informada_w > 0 AND vl_deducao_w <> 0)) and ((qt_deducao_nao_inf_w = 0) or (vl_deducao_w = 0)) then
		ie_informado_w	:= 'S';
	end if;
	
	if (ie_informado_w = 'S') then
		vl_item_original_w	:= dividir(vl_material_w + vl_deducao_w + vl_desconto_w, qt_material_w);
	elsif (vl_mat_tabela_w > 0) then	
		vl_calculo_item_w	:= abs((vl_mat_tabela_w * qt_material_w) - (vl_material_w + vl_deducao_w + vl_desconto_w));
		if (abs( vl_mat_tabela_w ) <= abs(dividir((vl_material_w + vl_deducao_w + vl_desconto_w),qt_material_w))) then
			if (qt_material_w < 0) then -- estorno
				vl_mat_tabela_w 	:= vl_mat_tabela_w *-1;
				vl_calculo_item_w	:= vl_calculo_item_w *-1;	
				vl_mat_tabela_w 	:= abs(vl_mat_tabela_w - dividir(vl_calculo_item_w,qt_material_w));
			else
				vl_mat_tabela_w 	:= vl_mat_tabela_w + dividir(vl_calculo_item_w,qt_material_w);
			end if;
		end if;
		vl_item_original_w	:= vl_mat_tabela_w;
	end if;

end if;

return	vl_item_original_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_vl_item_conta_original ( nr_seq_propaci_p bigint, nr_seq_matpaci_p bigint) FROM PUBLIC;

