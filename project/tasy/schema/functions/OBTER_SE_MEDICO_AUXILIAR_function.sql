-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_medico_auxiliar ( nr_atendimento_p bigint, cd_medico_p text, qt_tempo_aux_p text, ie_parecer_p text, cd_estabelecimento_p bigint, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE


ie_medico_auxiliar_w	varchar(1) := 'N';
qt_registro_w		bigint := 0;

BEGIN
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	begin

	select  /*+index (x presmed_i5) */			count(*)
	into STRICT	qt_registro_w
	from 	prescr_medica x
	where	nr_atendimento_p       = x.nr_atendimento
	and 	x.dt_prescricao  between clock_timestamp() - coalesce(qt_tempo_aux_p,36)/24 and clock_timestamp()
	and 	x.nm_usuario_original  = nm_usuario_p
	and 	x.cd_medico            = cd_medico_p  LIMIT 1;

	if (qt_registro_w = 0) then
		begin

		select /*+index (x evopaci_i4) */				count(*)
		into STRICT	qt_registro_w
		from	evolucao_paciente x
		where 	nr_atendimento_p    = x.nr_atendimento
		and 	x.dt_evolucao  between clock_timestamp() - coalesce(qt_tempo_aux_p,36)/24 and clock_timestamp()
		and 	((x.cd_medico     = cd_medico_p
		and 	x.nm_usuario	 = nm_usuario_p)
		or (x.cd_medico_parecer = cd_medico_p))  LIMIT 1;

		if (qt_registro_w = 0) then
			begin
			select /*+index (x evopaci_i10) */					count(*)
			into STRICT	qt_registro_w
			from	evolucao_paciente x
			where 	nr_atendimento_p      = x.nr_atendimento
			and 	x.dt_evolucao  between clock_timestamp() - coalesce(qt_tempo_aux_p,36)/24 and clock_timestamp()
			and 	coalesce(x.ie_avaliador_aux,'N') = 'S'
			and 	((x.cd_medico = cd_medico_p)
					or (x.nm_usuario_nrec	 = nm_usuario_p))  LIMIT 1;

			if (qt_registro_w = 0) then
				begin
				select	count(*)
				into STRICT	qt_registro_w
				from	parecer_medico_req x
				where	nr_atendimento_p = x.nr_atendimento
				and		x.dt_atualizacao  between clock_timestamp() - coalesce(qt_tempo_aux_p,36)/24 and clock_timestamp()
				and		x.cd_pessoa_parecer = cd_medico_p
				and		coalesce(ie_parecer_p,'N') = 'S'
				and   not exists (
						SELECT   1
						from 	parecer_medico y
						where	y.nr_parecer = x.nr_parecer
						and   	coalesce(y.ie_status,'F') = 'F')  LIMIT 1;

				if (qt_registro_w = 0) then
					begin
					select	count(*)
					into STRICT	qt_registro_w
					from  	parecer_medico_req x
					where 	nr_atendimento_p = x.nr_atendimento
					and 	x.dt_atualizacao  between clock_timestamp() - coalesce(qt_tempo_aux_p,36)/24 and clock_timestamp()
					and		(x.nr_seq_equipe_dest IS NOT NULL AND x.nr_seq_equipe_dest::text <> '')
					and		obter_se_medico_equipe(x.nr_seq_equipe_dest,cd_medico_p) = 'S'
					and		coalesce(ie_parecer_p,'N') = 'S'
					and   	not exists (
								SELECT  1
								from 	parecer_medico y
								where	y.nr_parecer = x.nr_parecer
								and  	coalesce(y.ie_status,'F') = 'F')  LIMIT 1;

					if (qt_registro_w = 0) then
						begin
						select	count(*)
						into STRICT	qt_registro_w
						from	cirurgia x
						where	nr_atendimento_p = x.nr_atendimento
						and		x.dt_inicio_prevista between clock_timestamp() - coalesce(qt_tempo_aux_p,36)/24 and clock_timestamp()
						and		x.cd_medico_cirurgiao = cd_medico_p  LIMIT 1;
						end;
					end if;
					end;
				end if;
				end;
			end if;
			end;
		end if;
		end;
	end if;
	end;
end if;

if (qt_registro_w <> 0) then
	begin
	ie_medico_auxiliar_w := 'S';
	end;
end if;
return	ie_medico_auxiliar_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_medico_auxiliar ( nr_atendimento_p bigint, cd_medico_p text, qt_tempo_aux_p text, ie_parecer_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

