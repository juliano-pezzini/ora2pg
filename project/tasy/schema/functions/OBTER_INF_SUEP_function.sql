-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_inf_suep (nr_seq_suep_p bigint, ie_tipo_item_p text, ie_tipo_inf_p text) RETURNS varchar AS $body$
DECLARE


ds_informacao_w		varchar(255);
ie_evolucao_clinica_w	informacao_suep.ie_evolucao_clinica%type;
ie_tipo_diagnostico_w	informacao_suep.ie_tipo_diagnostico%type;
ie_classif_doenca_w	informacao_suep.ie_classificacao_doenca%type;
ds_informacao_inst_w	varchar(255);
nr_seq_apres_w		informacao_suep.nr_seq_apres%type;


/*	IE_TIPO_INF_P
	I - Informação principal ex : Evolução Clinica.
	C - Classificação.
	D - Informação da instituição.
	S - Sequência de apresentação.
*/
c01 CURSOR FOR
	SELECT 	coalesce(c.ie_evolucao_clinica,'E') ie_evolucao_clinica,
		coalesce(c.ie_tipo_diagnostico,'') ie_tipo_diagnostico,
		coalesce(c.ie_classificacao_doenca,'') ie_classificacao_doenca,
		coalesce(c.ds_informacao_inst, '') ds_informacao_inst,
		coalesce(c.nr_seq_apres,999) nr_seq_apres
	from	item_suep a,
		suep b,
		informacao_suep c
	where	a.nr_seq_suep = b.nr_sequencia
	and	a.ie_tipo_item = ie_tipo_item_p
	and	b.nr_sequencia = nr_seq_suep_p
	and	a.nr_sequencia = c.nr_seq_item
	order by c.nr_sequencia desc;


BEGIN
if (nr_seq_suep_p IS NOT NULL AND nr_seq_suep_p::text <> '') and (ie_tipo_item_p IS NOT NULL AND ie_tipo_item_p::text <> '') and (ie_tipo_inf_p IS NOT NULL AND ie_tipo_inf_p::text <> '') then

	open c01;
	loop
	fetch c01 into
		ie_evolucao_clinica_w,
		ie_tipo_diagnostico_w,
		ie_classif_doenca_w,
		ds_informacao_inst_w,
		nr_seq_apres_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		if (ie_tipo_inf_p = 'I') then

		    if (ie_tipo_item_p = 'EV') then
			ds_informacao_w :=  ds_informacao_w ||','||ie_evolucao_clinica_w;
		    end if;

		    if (ie_tipo_item_p = 'CD') then
			ds_informacao_w :=  ds_informacao_w ||','||ie_tipo_diagnostico_w;
		    end if;

		end if;

		if (length(ds_informacao_w) > 250) then
		     goto final;
		end if;

		end;
	end loop;
	close c01;

end if;

<<final>>

select	substr(ds_informacao_w,2,length(ds_informacao_w))
into STRICT	ds_informacao_w
;

return ds_informacao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_inf_suep (nr_seq_suep_p bigint, ie_tipo_item_p text, ie_tipo_inf_p text) FROM PUBLIC;

