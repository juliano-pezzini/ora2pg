-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_limitacao_conta ( nr_seq_segurado_p bigint, nr_seq_tipo_limitacao_p bigint, qt_permitida_p bigint, qt_intervalo_p bigint, ie_periodo_p text, qt_solicitada_p bigint, nr_seq_conta_p bigint, ie_tipo_periodo_p text) RETURNS varchar AS $body$
DECLARE

				
ie_limitacao_w			varchar(1);
dt_conta_w			timestamp;
nr_seq_titular_w		bigint;
nr_seq_contrato_w		bigint;
dt_contratacao_w		timestamp;
dt_atual_w			timestamp;
dt_inicio_w			timestamp;
dt_inicial_w			timestamp;
dt_final_w			timestamp;
ie_tipo_incidencia_w		varchar(1);
nr_seq_conta_w			bigint;
nr_seq_segurado_w		bigint;
nr_seq_conta_proc_w		bigint;
qt_procedimento_w		double precision;
qt_liberada_w			pls_conta_proc.qt_procedimento%type;
qt_permitida_w			double precision;

/*DIEGO 29/07/2011 - ESTA FUNCTION FOI SUBSTITUIDA PELA PROCEDURE PLS_SE_LIMITACAO_CONTA.*/

C01 CURSOR FOR
	SELECT	b.nr_sequencia,
		a.nr_sequencia
	from	pls_conta	b,
		pls_segurado 	a
	where	a.nr_sequencia	= b.nr_seq_segurado
	and	a.nr_sequencia	= nr_seq_segurado_p
	and	b.ie_glosa	= 'N'
	and 	coalesce(ie_tipo_incidencia_w,'B')	= 'B'
	and	b.dt_atendimento_referencia between dt_inicial_w and fim_dia(dt_final_w)
	
union

	SELECT	b.nr_sequencia,
		a.nr_sequencia
	from	pls_conta	b,
		pls_segurado 	a
	where	a.nr_sequencia		= b.nr_seq_segurado
	and	a.nr_seq_contrato	= nr_seq_contrato_w
	and	b.ie_glosa	= 'N'
	and 	coalesce(ie_tipo_incidencia_w,'B') = 'T'
	and	b.dt_atendimento_referencia between dt_inicial_w and fim_dia(dt_final_w)
	and	((a.nr_sequencia = nr_seq_segurado_p and coalesce(a.nr_Seq_titular::text, '') = '') or (a.nr_seq_titular = nr_seq_segurado_p and pls_obter_se_parente_legal(a.nr_sequencia) = 'S'));
	
C02 CURSOR FOR
	SELECT	pls_obter_regra_limitacao(a.cd_procedimento, null, a.ie_origem_proced, nr_seq_segurado_w, null),
		sum(coalesce(qt_procedimento_imp,0))
	from	pls_conta_proc a
	where	nr_seq_conta	= nr_seq_conta_w
	and	coalesce(a.ie_glosa,'N')	= 'N' --Diego OS 313903 - Historico 23/05/2011 13:14:43 - Para o caso do procedimento ter sido glosado.
	and	pls_obter_regra_limitacao(a.cd_procedimento, null, a.ie_origem_proced, nr_seq_segurado_w, null) = nr_seq_tipo_limitacao_p
	/*and	a.ie_status in ('L','S')*/

	group	by pls_obter_regra_limitacao(a.cd_procedimento, null, a.ie_origem_proced, nr_seq_segurado_w,null);
			


BEGIN

ie_limitacao_w	:= 'N';
qt_permitida_w	:= coalesce(qt_permitida_p,0);

select	coalesce(dt_atendimento_referencia,clock_timestamp())
into STRICT	dt_conta_w
from	pls_conta
where	nr_sequencia	= nr_seq_conta_p;

if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then
	select	nr_seq_titular,
		nr_seq_contrato
	into STRICT	nr_seq_titular_w,
		nr_seq_contrato_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_p;
	
	if (ie_periodo_p = 'CO') then
		select	trunc(a.dt_contrato,'dd'),
			trunc(dt_conta_w)
		into STRICT	dt_contratacao_w,
			dt_atual_w
		from	pls_contrato a
		where	a.nr_sequencia	= nr_seq_contrato_w;
		
		dt_inicio_w	:= dt_contratacao_w;
		
		if (ie_tipo_periodo_p = 'M') then
			while(dt_inicio_w <= dt_atual_w) loop	
				select	add_months(dt_inicio_w,qt_intervalo_p)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	add_months(dt_inicio_w, -qt_intervalo_p),
				dt_inicio_w -1
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		elsif (ie_tipo_periodo_p = 'S') then
			while(dt_inicio_w <= dt_atual_w) loop	
				select	dt_inicio_w + (qt_intervalo_p*7)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - (qt_intervalo_p*7),
				dt_inicio_w -1
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		elsif (ie_tipo_periodo_p = 'D') then
			while(dt_inicio_w <= dt_atual_w) loop	
				select	dt_inicio_w + qt_intervalo_p
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - qt_intervalo_p,
				dt_inicio_w -1
			into STRICT	dt_inicial_w,
				dt_final_w
			;			
		end if;
	elsif (ie_periodo_p = 'CA') then
		dt_atual_w	:= trunc(dt_conta_w);
		dt_inicio_w	:= trunc(dt_conta_w,'year');
		if (ie_tipo_periodo_p = 'M') then
			if (qt_intervalo_p = 1) then
				dt_inicial_w	:= trunc(dt_conta_w,'month');
				dt_final_w	:= last_day(trunc(dt_conta_w,'month'));	
			elsif (qt_intervalo_p in (2,3,4,6)) then
				dt_inicio_w	:= trunc(dt_conta_w,'year');
				
				while(dt_inicio_w <= dt_atual_w) loop
					begin
					select	add_months(dt_inicio_w,qt_intervalo_p)
					into STRICT	dt_inicio_w
					;
					end;
				end loop;
				
				select	add_months(dt_inicio_w,-qt_intervalo_p),
					dt_inicio_w -1
				into STRICT	dt_inicial_w,
					dt_final_w
				;
				
			elsif (qt_intervalo_p = 12) then
				dt_inicial_w	:= trunc(dt_conta_w,'year');
				dt_final_w	:= last_day(add_months(trunc(dt_conta_w,'year'),qt_intervalo_p));
			end if;
		elsif (ie_tipo_periodo_p = 'S') then
			while(dt_inicio_w <= dt_atual_w) loop	
				select	dt_inicio_w + (qt_intervalo_p*7)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - (qt_intervalo_p*7),
				dt_inicio_w -1
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		elsif (ie_tipo_periodo_p = 'D') then
			while(dt_inicio_w <= dt_atual_w) loop	
				select	dt_inicio_w + qt_intervalo_p
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - qt_intervalo_p,
				dt_inicio_w -1
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		end if;
		
	elsif (ie_periodo_p = 'A') then
	
		select	trunc(a.dt_contratacao)
		into STRICT	dt_inicio_w
		from	pls_segurado a
		where	a.nr_sequencia	= nr_seq_segurado_p;
		
		dt_atual_w := trunc(dt_conta_w);
		
		if (ie_tipo_periodo_p = 'M') then
		
			while(dt_inicio_w <= dt_atual_w) loop	
				select	add_months(dt_inicio_w,qt_intervalo_p)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	add_months(dt_inicio_w, -qt_intervalo_p),
				dt_inicio_w -1
			into STRICT	dt_inicial_w,
				dt_final_w
			;
						
		elsif (ie_tipo_periodo_p = 'S') then
		
			while(dt_inicio_w <= dt_atual_w) loop	
				select	dt_inicio_w + (qt_intervalo_p*7)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - (qt_intervalo_p*7),
				dt_inicio_w -1
			into STRICT	dt_inicial_w,
				dt_final_w
			;
			
		elsif (ie_tipo_periodo_p = 'D') then
		
			while(dt_inicio_w <= dt_atual_w) loop	
				select	dt_inicio_w + qt_intervalo_p
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - qt_intervalo_p,
				dt_inicio_w -1
			into STRICT	dt_inicial_w,
				dt_final_w
			;			
		end if;	
		
	end if;	
	
	select	ie_tipo_incidencia
	into STRICT	ie_tipo_incidencia_w
	from	pls_tipo_limitacao
	where	nr_sequencia	= nr_seq_tipo_limitacao_p;
	
	open c01;
	loop
	fetch c01 into	
		nr_seq_conta_w,
		nr_seq_segurado_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		open c02;
		loop
		fetch c02 into
			nr_seq_conta_proc_w,
			qt_procedimento_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */					
			qt_liberada_w	:= coalesce(qt_liberada_w,0) + coalesce(qt_procedimento_w,0);
		end loop;
		close c02;
		end;
	end loop;
	close c01;
	/* Alexandre OS 293195 - Foi documentado a soma do campo qt_solicitada_p, pois conforme a OS 276326 e data do historico 10/02/2011, no cursor 
	nao e tratado o status da conta, e por isso ja trazar , no cursor, a quantidade solicitada do procediemnto da conta que esta sendo consisitida */
	qt_liberada_w	:= qt_liberada_w; --+ nvl(qt_solicitada_p,0);
	
	if (qt_permitida_w < qt_liberada_w) then
		ie_limitacao_w	:= 'S';
	end if;
end if;

return ie_limitacao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_limitacao_conta ( nr_seq_segurado_p bigint, nr_seq_tipo_limitacao_p bigint, qt_permitida_p bigint, qt_intervalo_p bigint, ie_periodo_p text, qt_solicitada_p bigint, nr_seq_conta_p bigint, ie_tipo_periodo_p text) FROM PUBLIC;

