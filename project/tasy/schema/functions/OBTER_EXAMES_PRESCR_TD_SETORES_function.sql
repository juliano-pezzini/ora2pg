-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_exames_prescr_td_setores ( nr_prescricao_p bigint, cd_setor_atendimento_p bigint, ie_opcao_p text, ie_quebra_linha_p text) RETURNS varchar AS $body$
DECLARE

 
ds_tipo_proc_w				varchar(40);
ds_tipo_ant_w				varchar(40)	:= 'xxx';
cd_procedimento_w			bigint;
ds_procedimento_w 			PROCEDIMENTO.DS_PROCEDIMENTO%type;
qt_procedimento_w			double precision;
resultado_w	 			varchar(2000);
quebra_w				varchar(10) 	:= chr(13) || chr(10);
nr_atendimento_w			bigint;
cd_convenio_w				integer;
nr_seq_conversao_w			bigint 		:= 0;
ie_origem_proced_w			bigint;
cd_item_convenio_w			varchar(20) 	:= '';
cd_grupo_w				varchar(10) 	:= '';
nr_sequencia_w				integer;
qt_reg_w				integer	:= 0;
nr_seq_exame_w				bigint;
cd_exame_w				varchar(20);
nm_exame_urgente_w			varchar(80);
nm_exame_nao_urgente_w			varchar(80);
ie_urgencia_w				varchar(1);
qt_lengt_w				bigint;
dt_prev_execucao_w			timestamp;
ds_lado_w				varchar(60);
nr_seq_proc_interno_w			bigint;
cd_plano_w				varchar(10);
cd_tipo_acomod_conv_w			smallint;
qt_idade_w				bigint;
cd_pessoa_fisica_w			varchar(10);
ie_sexo_w				varchar(1);
cd_empresa_ref_w			bigint;
ie_carater_inter_sus_w			varchar(2);
cd_dependente_w				smallint;

c01 CURSOR FOR 
	SELECT a.nr_sequencia, 
		a.cd_procedimento, 
		a.ie_origem_proced, 
		substr(obter_desc_prescr_proc(b.cd_procedimento, b.ie_origem_proced, a.nr_seq_proc_interno),1,240), 
		a.qt_procedimento, 
		a.nr_seq_exame, 
		substr(obter_valor_dominio(95, b.cd_tipo_procedimento),1,40) ds_tipo_proc, 
		a.ie_urgencia, 
		a.dt_prev_execucao, 
		substr(obter_valor_dominio(1372,a.ie_lado),1,60), 
		a.nr_seq_proc_interno 
	from	procedimento b, 

		prescr_procedimento a 
	where a.cd_procedimento		= b.cd_procedimento 
	and	a.ie_origem_proced	= b.ie_origem_proced 
	and 	a.nr_prescricao		= nr_prescricao_p 
/*	and 	((a.cd_setor_atendimento = cd_setor_atendimento_p) 
	or	(c.cd_setor_atendimento = cd_setor_atendimento_p)) 	 
	and	a.nr_prescricao = c.nr_prescricao 
	and	a.nr_sequencia = c.nr_sequencia_prescricao */
 
	order by 4, 2;

BEGIN
 
/* opções 
	cqdl	- código/ quantidade/ descrição/ lado 
	cqd	- código/ quantidade/ descrição 
	cqde	- código/ quantidade/ descrição executados (não excluídos) 
	cqdc	- código/ quantidade/ descrição do convenio 
	d	- descrição 
	c	- código 
	tcr	- tipo com repetição 
	tsr	- tipo sem repetição 
	ei	- codigo de integração do exame 
	eu	- exame laboratório urgente 
	enu	- exame laboratório não-urgente	 
	dcd	- data prevista de execucao / quantidade/ descricao 
*/
 
if (coalesce(ie_quebra_linha_p,'N') <> 'S') then 
	quebra_w		:= ', ';
end if;
if (ie_opcao_p = 'CQDC') then 
	select	nr_atendimento 
	into STRICT	nr_atendimento_w 
	from	prescr_medica 
	where	nr_prescricao = nr_prescricao_p;
	select obter_convenio_atendimento(nr_atendimento_w) 
	into STRICT	cd_convenio_w 
	;
end if;
open c01;
loop 
fetch c01 into	 
	nr_sequencia_w, 
	cd_procedimento_w, 
	ie_origem_proced_w, 
	ds_procedimento_w, 
	qt_procedimento_w, 
	nr_seq_exame_w, 
	ds_tipo_proc_w, 
	ie_urgencia_w, 
	dt_prev_execucao_w, 
	ds_lado_w, 
	nr_seq_proc_interno_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	qt_lengt_w	:= coalesce(length(resultado_w),0);
	if (ie_opcao_p = 'CQD') then 
		if (qt_lengt_w < 1700) then 
			resultado_w	:= 	 
			resultado_w || '(' || cd_procedimento_w || ')' || ' ' || 
	        	to_char(qt_procedimento_w, '9990') || ' - ' || 
			ds_procedimento_w || quebra_w;
		end if;
	elsif (ie_opcao_p = 'CQDL') then 
		if (qt_lengt_w < 1700) then 
			resultado_w	:= 	 
			resultado_w || '(' || cd_procedimento_w || ')' || ' ' || 
	        	to_char(qt_procedimento_w, '9990') || ' - ' || 
			ds_procedimento_w || substr(wheb_mensagem_pck.get_texto(308683),1,255) || ds_lado_w || quebra_w;
		end if;
	elsif (ie_opcao_p = 'CQDE') then 
		begin 
		select count(*) 
		into STRICT	qt_reg_w 
		from 	procedimento_paciente 
		where	nr_prescricao		= nr_prescricao_p 
		and	nr_sequencia_prescricao	= nr_sequencia_w 
		and	coalesce(cd_motivo_exc_conta::text, '') = '';		
 
		if (qt_reg_w	> 0) and (qt_lengt_w < 1700) then 
			resultado_w	:= 	 
			resultado_w || '(' || cd_procedimento_w || ')' || ' ' || 
    	    	to_char(qt_procedimento_w, '9990') || ' - ' || 
			ds_procedimento_w || quebra_w;
		end if;
		end;
 
	elsif (ie_opcao_p = 'CQDC') and (qt_lengt_w < 1700) then 
		begin 
		 
		select 	max(cd_plano_convenio), 
			coalesce(max(cd_empresa),0), 
			max(cd_dependente) 
		into STRICT	cd_plano_w, 
			cd_empresa_ref_w, 
			cd_dependente_w 
		from 	atend_categoria_convenio 
		where 	nr_atendimento = nr_atendimento_w 
		and 	cd_convenio = cd_convenio_w;
		 
		select 	max(cd_tipo_acomodacao) 
		into STRICT	cd_tipo_acomod_conv_w 
		from 	atend_categoria_convenio 
		where 	nr_atendimento = nr_atendimento_w 
		and 	cd_convenio = cd_convenio_w;
		 
		select	max(cd_pessoa_fisica), 
			max(ie_carater_inter_sus) 
		into STRICT	cd_pessoa_fisica_w, 
			ie_carater_inter_sus_w 
		from	atendimento_paciente 
		where	nr_atendimento = nr_atendimento_w;
		 
		begin 
		select	max(obter_idade(dt_nascimento, coalesce(dt_obito,clock_timestamp()),'DIA')), 
			max(ie_sexo) 
		into STRICT	qt_idade_w, 
			ie_sexo_w 
		from	pessoa_fisica 
		where	cd_pessoa_fisica = cd_pessoa_fisica_w;
		exception 
		when others then 
			qt_idade_w	:= 0;
			ie_sexo_w	:= '';
		end;
 
		SELECT * FROM converte_proc_convenio( 
			null, cd_convenio_w, null, cd_procedimento_w, ie_origem_proced_w, null, null, null, dt_prev_execucao_w, cd_item_convenio_w, cd_grupo_w, nr_seq_conversao_w, cd_setor_atendimento_p, null, nr_seq_proc_interno_w, 'A', cd_plano_w, null, 0, null, cd_tipo_acomod_conv_w, qt_idade_w, ie_sexo_w, cd_empresa_ref_w, ie_carater_inter_sus_w, 0, nr_seq_exame_w, null, cd_dependente_w) INTO STRICT cd_item_convenio_w, cd_grupo_w, nr_seq_conversao_w;
		if (nr_seq_conversao_w <> 0) then 
			select coalesce(ds_proc_convenio,ds_procedimento_w) 
			into STRICT	ds_procedimento_w 
			from conversao_proc_convenio 
			where nr_sequencia	= nr_seq_conversao_w;
		end if;
		if (cd_item_convenio_w = '0') then 
			cd_item_convenio_w	:= null;
		end if;
		resultado_w	:= 	 
		resultado_w || '(' || coalesce(cd_item_convenio_w, cd_procedimento_w) || ')' || ' ' || 
        	to_char(qt_procedimento_w, '9990') || ' - ' || 
		ds_procedimento_w || quebra_w;
		end;
	elsif (ie_opcao_p = 'D') and (qt_lengt_w < 1700) then 
		resultado_w	:= resultado_w || ds_procedimento_w || quebra_w;
	elsif (ie_opcao_p = 'C') and (qt_lengt_w < 1700) then 
		resultado_w	:= resultado_w || cd_procedimento_w || quebra_w;
	elsif (ie_opcao_p = 'TCR') and (ds_tipo_proc_w IS NOT NULL AND ds_tipo_proc_w::text <> '') and (qt_lengt_w < 1700) then 
		resultado_w	:= resultado_w || ds_tipo_proc_w || quebra_w;
	elsif (ie_opcao_p = 'TSR') and (ds_tipo_proc_w IS NOT NULL AND ds_tipo_proc_w::text <> '') and (ds_tipo_proc_w <> ds_tipo_ant_w) and (qt_lengt_w < 1700) then 
		resultado_w	:= resultado_w || ds_tipo_proc_w || quebra_w;
	elsif (ie_opcao_p = 'EI') and (qt_lengt_w < 1700) then 
		select	coalesce(cd_exame_integracao,cd_exame) 
		into STRICT	cd_exame_w 
		from	exame_laboratorio 
		where	nr_seq_exame	= nr_seq_exame_w;
		resultado_w	:= resultado_w || cd_exame_w || quebra_w;
	elsif (ie_opcao_p = 'EU') and (qt_lengt_w < 1700) then 
		select 	max(a.nm_exame) 
		into STRICT	nm_exame_urgente_w 
		from	exame_laboratorio a 
		where	a.nr_seq_exame	= nr_seq_exame_w 
		and	ie_urgencia_w 	= 'S';
		if (nm_exame_urgente_w IS NOT NULL AND nm_exame_urgente_w::text <> '') then 
			resultado_w	:= resultado_w || nm_exame_urgente_w || quebra_w;
		end if;
	elsif (ie_opcao_p = 'ENU') and (qt_lengt_w < 1700) then	 
		select 	max(a.nm_exame) 
		into STRICT	nm_exame_nao_urgente_w 
		from	exame_laboratorio a 
		where	a.nr_seq_exame	= nr_seq_exame_w 
		and	ie_urgencia_w 	= 'N';
		if (nm_exame_nao_urgente_w IS NOT NULL AND nm_exame_nao_urgente_w::text <> '') then 
			resultado_w	:= resultado_w || nm_exame_nao_urgente_w || quebra_w;
		end if;
	elsif (ie_opcao_p = 'DQD') and (qt_lengt_w < 1700) then 
		resultado_w	:= 	 
		resultado_w || '(' || to_char(dt_prev_execucao_w,'dd/mm/yyyy hh24:mi:ss') || ')' || ' ' || 
        	to_char(qt_procedimento_w, '9990') || ' - ' || 
		ds_procedimento_w || quebra_w;
	end if;
 
	ds_tipo_ant_w	:= ds_tipo_proc_w;
	end;
end loop;
 
if (coalesce(ie_quebra_linha_p,'N') <> 'S') then 
	resultado_w := substr(resultado_w, 1, length(resultado_w) - 2);
end if;
 
return resultado_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_exames_prescr_td_setores ( nr_prescricao_p bigint, cd_setor_atendimento_p bigint, ie_opcao_p text, ie_quebra_linha_p text) FROM PUBLIC;

