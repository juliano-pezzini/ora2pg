-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cpoe_regra_se_permite_presc (cd_material_p material.cd_material%type, nr_atendimento_p atendimento_paciente.nr_atendimento%type, nm_usuario_p usuario.nm_usuario%type, cd_motivo_prescricao_p regra_prescr_medic.ie_motivo_prescr%type default null) RETURNS varchar AS $body$
DECLARE


cd_setor_atendimento_w	setor_atendimento.cd_setor_atendimento%type;
nr_seq_agrupamento_w	setor_atendimento.nr_seq_agrupamento%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_grupo_material_w		subgrupo_material.cd_grupo_material%type;
cd_subgrupo_material_w	classe_material.cd_subgrupo_material%type;
cd_classe_material_w	material.cd_classe_material%type;
ie_permite_ww			regra_prescr_medic.ie_permite%type;
ie_tipo_material_w		material.ie_tipo_material%type;
cd_material_estoque_w	material.cd_material_estoque%type;
cd_material_w			material.cd_material%type;
count_itens_w       	double precision;
count_consistency_w 	double precision;

rule CURSOR FOR
SELECT	coalesce(ie_permite,'S') ie_permite
from	regra_prescr_medic a
where	((a.cd_material = cd_material_p) or (coalesce(a.cd_material::text, '') = ''))
and 	a.nr_seq_conselho = (SELECT b.nr_seq_conselho from pessoa_fisica b where b.cd_pessoa_fisica = cd_pessoa_fisica_w)
and		((a.cd_pessoa_fisica = cd_pessoa_fisica_w) or (coalesce(a.cd_pessoa_fisica::text, '') = ''))
and		((a.cd_especialidade = obter_especialidade_medico(cd_pessoa_fisica_w, 'C')) or (coalesce(a.cd_especialidade::text, '') = ''))
and		((a.cd_perfil = obter_perfil_ativo) or (coalesce(a.cd_perfil::text, '') = ''))
and		((a.cd_grupo_material = cd_grupo_material_w) or (coalesce(a.cd_grupo_material::text, '') = ''))
and		((a.cd_subgrupo_material = cd_subgrupo_material_W) or (coalesce(a.cd_subgrupo_material::text, '') = ''))
and		((a.cd_classe_material = cd_classe_material_w) or (coalesce(a.cd_classe_material::text, '') = ''))
and		((a.ie_tipo_material = ie_tipo_material_w) or (coalesce(a.ie_tipo_material::text, '') = ''))
and		((coalesce(cd_material_estoque::text, '') = '') or (cd_material_estoque = cd_material_estoque_w))
and     ((coalesce(ie_motivo_prescr::text, '') = '') or (ie_motivo_prescr = cd_motivo_prescricao_p))
and		coalesce(ie_situacao, 'A') = 'A'
order by coalesce(cd_pessoa_fisica, '0'),
         coalesce(cd_perfil, 0),
         coalesce(cd_material, 0),
         coalesce(cd_classe_material, 0),
         coalesce(cd_subgrupo_material, 0),
         coalesce(cd_grupo_material, 0),
         coalesce(cd_especialidade, 0),
		 coalesce(ie_motivo_prescr,0);
BEGIN

cd_setor_atendimento_w := substr(obter_setor_atendimento(nr_atendimento_p),1,55);

select	max(nr_seq_agrupamento)
into STRICT	nr_seq_agrupamento_w
from	setor_atendimento
where	cd_setor_atendimento = cd_setor_atendimento_w;

select	count(*)
into STRICT	count_itens_w
from	material_setor_exclusivo
where	cd_material = cd_material_p
and 	cd_estabelecimento = obter_estabelecimento_ativo()
and 	((nr_seq_agrupamento = nr_seq_agrupamento_w) or (coalesce(nr_seq_agrupamento::text, '') = ''))
and 	((cd_setor_atendimento = cd_setor_atendimento_w) or (coalesce(cd_setor_atendimento::text, '') = ''))
and		ie_permite = 'N';

if (count_itens_w > 0) then
	return 'N';
end if;

cd_pessoa_fisica_w := substr(Obter_dados_usuario_opcao(nm_usuario_p, 'C'),1,255);

select	max(obter_estrutura_material(cd_material, 'G')),
		max(obter_estrutura_material(cd_material, 'S')),
		max(cd_classe_material),
		max(ie_tipo_material),
		max(cd_material_estoque)
into STRICT	cd_grupo_material_w,
		cd_subgrupo_material_w,
		cd_classe_material_w,
		ie_tipo_material_w,
		cd_material_estoque_w
from	material
where	cd_material = cd_material_p;

select	count(*)
into STRICT	count_consistency_w
from	regra_prescr_medic
where	ie_situacao = 'A';

/* Se nao ha consistencia, pode prescrever, se nao verificar regras (abaixo) */

if (count_consistency_w = 0) then
	return 'S';
end if;

for r_rule_w in rule
loop
	ie_permite_ww := r_rule_w.ie_permite;
end loop;

if (ie_permite_ww IS NOT NULL AND ie_permite_ww::text <> '') then
    return ie_permite_ww;
end if;

--Se tiver regra, porem nenhuma se aplica ao usuario.
if (coalesce(count_consistency_w, 0) > 0) then
	return 'S';
end if;

return 'N';

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_regra_se_permite_presc (cd_material_p material.cd_material%type, nr_atendimento_p atendimento_paciente.nr_atendimento%type, nm_usuario_p usuario.nm_usuario%type, cd_motivo_prescricao_p regra_prescr_medic.ie_motivo_prescr%type default null) FROM PUBLIC;

