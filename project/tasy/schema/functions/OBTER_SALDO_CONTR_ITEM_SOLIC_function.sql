-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_saldo_contr_item_solic ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint) RETURNS bigint AS $body$
DECLARE


vl_saldo_w			contrato_regra_nf.vl_pagto%type;
vl_pagto_w			contrato_regra_nf.vl_pagto%type;
pr_permitido_adiant_w		contrato_regra_nf.pr_permitido_adiant%type;
vl_acumulado_w			contrato_regra_nf.vl_pagto%type;
vl_solic_compra_w			solic_compra_item.vl_unit_previsto%type;
nr_contrato_w			contrato.nr_sequencia%type;
cd_material_w			material.cd_material%type;

c01 CURSOR FOR
SELECT	coalesce(vl_pagto,vl_saldo_total),
	coalesce(pr_permitido_adiant,0)
from	contrato_regra_nf
where	nr_seq_contrato = nr_contrato_w
and	ie_permite_adiant = 'S'
and	cd_material = cd_material_w
and	coalesce(vl_pagto,vl_saldo_total) > 0;



BEGIN

vl_saldo_w	:= 0;
vl_acumulado_w	:= 0;

select	nr_contrato,
	cd_material
into STRICT	nr_contrato_w,
	cd_material_w
from	solic_compra_item
where	nr_solic_compra = nr_solic_compra_p
and	nr_item_solic_compra = nr_item_solic_compra_p;

if (nr_contrato_w > 0) then

	open C01;
	loop
	fetch C01 into
		vl_pagto_w,
		pr_permitido_adiant_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		if (pr_permitido_adiant_w = 0) then
			vl_acumulado_w := vl_acumulado_w + vl_pagto_w;
		elsif (pr_permitido_adiant_w > 0) then
			vl_acumulado_w := vl_acumulado_w + dividir((vl_pagto_w * pr_permitido_adiant_w), 100);
		end if;

		end;
	end loop;
	close C01;

	/*Busca os valores das solicitações  liberadas que ainda não tem título para descontar no valor inicial*/

	select	coalesce(sum(b.qt_material * b.vl_unit_previsto),0)
	into STRICT	vl_solic_compra_w
	from	solic_compra a,
		solic_compra_item b
	where	a.nr_solic_compra = b.nr_solic_compra
	and	b.nr_contrato = nr_contrato_w
	and	b.cd_material = cd_material_w
	and	a.ie_tipo_servico = 'SP'
	and exists (
		SELECT	1
		from	titulo_pagar x
		where	x.nr_seq_contrato = b.nr_contrato
		and	x.nr_solic_compra = a.nr_solic_compra);

	vl_saldo_w := vl_acumulado_w - vl_solic_compra_w;

end if;


return	vl_saldo_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_saldo_contr_item_solic ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint) FROM PUBLIC;

