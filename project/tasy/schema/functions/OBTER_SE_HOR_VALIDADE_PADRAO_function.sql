-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (nr_prescricao 	double precision);


CREATE OR REPLACE FUNCTION obter_se_hor_validade_padrao ( nr_prescricao_p text, ds_horarios_p text) RETURNS varchar AS $body$
DECLARE

type Vetor is table of campos index 	by integer;
Vetor_w			Vetor;

ds_horarios_w		varchar(255);
ds_horarios_ww		varchar(255);
ds_hora_w		varchar(255);
ds_horarios_retorno_w	varchar(255) := '';
dt_inicio_prescr_w	timestamp;
dt_validade_prescr_w	timestamp;
dt_prescricao_w		timestamp;
dt_horario_w		timestamp;

dt_inicio_prescr_ww	timestamp;
dt_validade_prescr_ww	timestamp;
dt_prescricao_ww	timestamp;
dt_horario_ww		timestamp;

qt_dia_adic_w		bigint;
k			bigint;
i			bigint;
nr_prescricoes_w	varchar(2000);


BEGIN

nr_prescricoes_w	:= nr_prescricao_p;
i := 0;
while(length(nr_prescricoes_w) > 0) loop
	begin
	i	:= i+1;
	if (position(',' in nr_prescricoes_w)	>0)  then
		Vetor_w[i].nr_prescricao	:= somente_numero(substr(nr_prescricoes_w,1,position(',' in nr_prescricoes_w) ));
		nr_prescricoes_w		:= substr(nr_prescricoes_w,position(',' in nr_prescricoes_w)+1,40000);

	else
		Vetor_w[i].nr_prescricao	:= somente_numero(nr_prescricoes_w);
		nr_prescricoes_w	:= null;
	end if;

	end;
end loop;

/*
select	max(padroniza_horario_prescr(ds_horarios_p, to_char(nvl(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss'))),
	max(a.dt_inicio_prescr),
	max(a.dt_validade_prescr),
	max(trunc(a.dt_inicio_prescr,'mi'))
into	ds_horarios_w,
	dt_inicio_prescr_w,
	dt_validade_prescr_w,
	dt_prescricao_w
from	prescr_medica a
where	obter_se_contido(a.nr_prescricao, '(' || nr_prescricao_p || ')') = 'S';
*/
for i in 1..Vetor_w.Count loop
	begin
	select	padroniza_horario_prescr(ds_horarios_p, to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss')),
		a.dt_inicio_prescr,
		a.dt_validade_prescr,
		trunc(a.dt_inicio_prescr,'mi')
	into STRICT	ds_horarios_ww,
		dt_inicio_prescr_ww,
		dt_validade_prescr_ww,
		dt_prescricao_ww
	from	prescr_medica a
	where	nr_prescricao	= Vetor_w[i].nr_prescricao;

	if (coalesce(dt_inicio_prescr_w::text, '') = '') or (dt_inicio_prescr_ww	> dt_inicio_prescr_w) then
		dt_inicio_prescr_w	:= dt_inicio_prescr_ww;
	end if;


	if (coalesce(dt_validade_prescr_w::text, '') = '') or (dt_validade_prescr_ww	> dt_validade_prescr_w) then
		dt_validade_prescr_w	:= dt_validade_prescr_ww;
	end if;

	if (coalesce(dt_prescricao_w::text, '') = '') or (dt_prescricao_ww	> dt_prescricao_w) then
		dt_prescricao_w		:= dt_prescricao_ww;
	end if;

	if (coalesce(ds_horarios_w::text, '') = '') or (ds_horarios_ww	> ds_horarios_w) then
		ds_horarios_w		:= ds_horarios_ww;
	end if;

	end;
end loop;

qt_dia_adic_w := 0;

if (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
	while(ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') LOOP
		select	position(' ' in ds_horarios_w)
		into STRICT	k
		;

		if (k > 1) and ((substr(ds_horarios_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_w, 1, k -1))::text <> '')) then
			ds_hora_w		:= substr(ds_horarios_w, 1, k-1);
			ds_hora_w		:= replace(ds_hora_w, ' ','');
			ds_horarios_w		:= substr(ds_horarios_w, k + 1, 2000);
		elsif (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
			ds_hora_w 		:= replace(ds_horarios_w,' ','');
			ds_horarios_w		:= null;
		end if;

		if (position('A' in ds_hora_w) > 0) then
			qt_dia_adic_w	:= 1;
		end if;
		if (position('AA' in ds_hora_w) > 0) then
			qt_dia_adic_w	:= qt_dia_adic_w + 1;
		end if;

		ds_hora_w	:= replace(ds_hora_w,'A','');
		ds_hora_w	:= replace(ds_hora_w,'A','');

		dt_horario_w	:= to_date(to_char(dt_prescricao_w + coalesce(qt_dia_adic_w,0),'dd/mm/yyyy')||' '||replace(ds_hora_w,'A','')||':00','dd/mm/yyyy hh24:mi:ss');

		if (dt_horario_w < dt_prescricao_w) then
			dt_horario_w	:= dt_horario_w + 1;
		end if;

		if (dt_horario_w		< dt_inicio_prescr_w) or (dt_horario_w		> dt_validade_prescr_w) then
			ds_horarios_retorno_w	:= ds_horarios_retorno_w || ' - ' ||ds_hora_w;
		end if;

	end loop;
end if;

return	ds_horarios_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_hor_validade_padrao ( nr_prescricao_p text, ds_horarios_p text) FROM PUBLIC;

