-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_impug_tipo_pedido ( nr_seq_conta_p pls_processo_conta.nr_sequencia%type, ie_opcao_p text, nr_seq_formulario_p pls_formulario.nr_sequencia%type default null) RETURNS varchar AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Verificar se a conta se encaixa nos filtros específicos de conta para
as ocorrências combinadas de conta médica.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_retorno_w		varchar(4000);
ie_tipo_pedido_w	pls_proc_conta_pedido.ie_tipo_pedido%type;
vl_pedido_w		pls_proc_conta_pedido.vl_pedido%type;
nr_seq_pedido_w		pls_proc_conta_pedido.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	coalesce(b.ie_tipo_pedido, '0'),
		coalesce(b.vl_pedido,0),
		b.nr_sequencia
	from	pls_processo_conta a,
		pls_proc_conta_pedido b
	where	a.nr_sequencia = b.nr_seq_proc_conta
	and	a.nr_sequencia = nr_seq_conta_p
	and	not exists (SELECT	1
				from	pls_formulario c
				where	c.nr_seq_conta	= nr_seq_conta_p)
	
union

	select	coalesce(c.ie_tipo_pedido, '0'),
		coalesce(c.vl_pedido, 0),
		c.nr_sequencia
	from	pls_formulario c
	where	c.nr_seq_conta	= nr_seq_conta_p
	and (c.nr_sequencia = nr_seq_formulario_p or coalesce(nr_seq_formulario_p::text, '') = '')
	order by 3 desc;


BEGIN
ds_retorno_w := '( )';
open C01;
loop
fetch C01 into
	ie_tipo_pedido_w,
	vl_pedido_w,
	nr_seq_pedido_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
begin
	if (ie_tipo_pedido_w <> '0') then
		if (ie_opcao_p = 'A') then
			if (ie_tipo_pedido_w = 'A') then
				ds_retorno_w := '(x) Anulação da identificação do atendimento.';
				exit;
			else
				ds_retorno_w := '(  ) Anulação da identificação do atendimento.';
			end if;
		elsif (ie_opcao_p = 'R') then
			if (ie_tipo_pedido_w = 'R') then
				ds_retorno_w := '(x) Retificação do valor a ser ressarcido para: R$ '||campo_mascara_virgula(vl_pedido_w);
				exit;
			else
				ds_retorno_w := '(  ) Retificação do valor a ser ressarcido para: R$___________.';
			end if;
		elsif (ie_opcao_p = 'RA') then
			if (ie_tipo_pedido_w = 'RA') then
				ds_retorno_w := '(x) Anulação da identificação do atendimento ou, subsidiariamente, retificação do valor a ser ressarcido para: R$'||campo_mascara_virgula(vl_pedido_w);
				exit;
			else
				ds_retorno_w := '(  ) Anulação da identificação do atendimento ou, subsidiariamente, retificação do valor a ser ressarcido para: R$___________.';
			end if;
		end if;
	end if;
end;
end loop;

close C01;

if (C01%ISOPEN) then
	close C01;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_impug_tipo_pedido ( nr_seq_conta_p pls_processo_conta.nr_sequencia%type, ie_opcao_p text, nr_seq_formulario_p pls_formulario.nr_sequencia%type default null) FROM PUBLIC;

