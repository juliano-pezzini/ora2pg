-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_obrig_anexo_guia ( nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type) RETURNS varchar AS $body$
DECLARE



/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Retornar se o anexo possui campos obrigatórios não estão preenchidos no sistema
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [  x] Tasy (Delphi/Java) [ x  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:  Ocorrência aplicada na requisição e na autorização do portal e do Tasy
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
--Anexos da requisição
C01 CURSOR(	nr_seq_requisicao_pc		pls_requisicao.nr_sequencia%type ) FOR
	SELECT  nr_sequencia,
		qt_peso,
		qt_altura,
		qt_superficie_corporal,
		nr_ciclo_previsto,
		nr_ciclo_atual,
		qt_intervalo_ciclo,
		ie_tipo_anexo,nr_campos,
		qt_dose_dia,
		qt_dose_total,
		qt_dias_previsto,
		dt_inicio_previsto,
		ds_justificativa
	from	pls_lote_anexo_guias_aut
	where	nr_seq_requisicao 	= nr_seq_requisicao_pc;


--Anexos da autorização
C02 CURSOR(	nr_seq_guia_pc			pls_guia_plano.nr_sequencia%type ) FOR
	SELECT nr_sequencia,
		qt_peso,
		qt_altura,
		qt_superficie_corporal,
		nr_ciclo_previsto,
		nr_ciclo_atual,
		qt_intervalo_ciclo,
		ie_tipo_anexo,nr_campos,
		qt_dose_dia,
		qt_dose_total,
		qt_dias_previsto,
		dt_inicio_previsto,
		ds_justificativa
	from	pls_lote_anexo_guias_aut
	where	coalesce(nr_seq_motivo_exc::text, '') = ''
	and	nr_seq_guia 	= nr_seq_guia_pc;



qt_registro_w		bigint := 0;
ds_retorno_w		varchar(500);
ds_retorno_aux_w		varchar(500);
cd_versao_tiss_w		pls_versao_tiss.cd_versao_tiss%type;
BEGIN
cd_versao_tiss_w	:= pls_obter_versao_tiss;

--Verifica os campos obrigatórios da requisição
if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	for	r_C01_w in C01( nr_seq_requisicao_p ) loop

		--Validação para quimioterapia
		if ( r_C01_w.ie_tipo_anexo = 'QU' ) then
			ds_retorno_aux_w := 'Peso,Altura,Superficie corporal,Ciclo previsto,Ciclo atual,Intervalo ciclo,Estadia tumor,Tipo quimioterapia,Finalidade tratamento,Plano terapeutico,Capacidade funcional,Dt provavel adm,Via adm,Frequência adm,Cód procedimento';

			if	(  (coalesce(r_C01_w.qt_peso::text, '') = '' or r_C01_w.qt_peso <= 0)
				or (coalesce(r_C01_w.qt_altura::text, '') = '' or r_C01_w.qt_altura <= 0)
			        or (coalesce(r_C01_w.qt_superficie_corporal::text, '') = '' or r_C01_w.qt_superficie_corporal <= 0)
				or (coalesce(r_C01_w.nr_ciclo_previsto::text, '') = '' or r_C01_w.nr_ciclo_previsto <= 0)
				or (coalesce(r_C01_w.nr_ciclo_atual::text, '') = '' or r_C01_w.nr_ciclo_atual <= 0)
				or (coalesce(r_C01_w.qt_intervalo_ciclo::text, '') = '' or r_C01_w.qt_intervalo_ciclo <= 0)) then
				ds_retorno_w := substr(ds_retorno_aux_w,0,500);
				exit;
			else
				--Validação para o diagnóstico
				select 	count(1)
				into STRICT	qt_registro_w
				from	pls_lote_anexo_diag_aut
				where	nr_seq_lote_anexo_guia = r_C01_w.nr_sequencia;

				--Verifica se existe registro na tabela de diagnóstico, se não existir gera ocorrência, se existir valida se os campos obrigatórios estão preenchidos
				if ( qt_registro_w = 0 ) then
					ds_retorno_w := substr(ds_retorno_aux_w,0,500);
					exit;
				else
					select 	count(1)
					into STRICT	qt_registro_w
					from	pls_lote_anexo_diag_aut
					where	nr_seq_lote_anexo_guia = r_C01_w.nr_sequencia
					and ((ie_estadia_tumor IS NOT NULL AND ie_estadia_tumor::text <> '')
					and	(ie_tipo_quimioterapia IS NOT NULL AND ie_tipo_quimioterapia::text <> '')
					and	(cd_finalidade_tratamento IS NOT NULL AND cd_finalidade_tratamento::text <> '')
					and	(ds_plano_terapeutico IS NOT NULL AND ds_plano_terapeutico::text <> '')
					and	(ie_capacidade_funcional IS NOT NULL AND ie_capacidade_funcional::text <> ''));

					if ( qt_registro_w = 0 ) then
						ds_retorno_w := substr(ds_retorno_aux_w,0,500);
						exit;
					end if;
				end if;


				--Validação para os procedimentos
				select	count(1)
				into STRICT	qt_registro_w
				from	pls_lote_anexo_proc_aut
				where	nr_seq_lote_anexo_guia = r_C01_w.nr_sequencia
				and	coalesce(dt_prev_realizacao::text, '') = '';

				if ( qt_registro_w >= 1 ) then
					ds_retorno_w := substr(ds_retorno_aux_w,0,500);
					exit;
				end if;


				--Validação para materiais e medicamentos
				select 	count(1)
				into STRICT	qt_registro_w
				from	pls_lote_anexo_mat_aut
				where	nr_seq_lote_anexo_guia = r_C01_w.nr_sequencia
				and ( coalesce(dt_prevista::text, '') = ''
				or 	coalesce(ie_via_administracao::text, '') = ''
				or 	coalesce(ie_frequencia_dose::text, '') = '' );

				if ( qt_registro_w >= 1 ) then
					ds_retorno_w := substr(ds_retorno_aux_w,0,500);
					exit;
				end if;
			end if;

		--Validação para OPME
		elsif ( r_C01_w.ie_tipo_anexo = 'OP' ) then
			ds_retorno_aux_w := 'Justificativa,Cód material,Opção fabricante';

			if ( coalesce(trim(both r_C01_w.ds_justificativa)::text, '') = '' ) then
				ds_retorno_w := substr(ds_retorno_aux_w,0,500);
				exit;
			else
				--Validação para materiais e medicamentos
				select 	count(1)
				into STRICT	qt_registro_w
				from	pls_lote_anexo_mat_aut
				where	nr_seq_lote_anexo_guia = r_C01_w.nr_sequencia
				and	coalesce(ie_opcao_fabricante::text, '') = '';

				if ( qt_registro_w >= 1 ) then
					ds_retorno_w := substr(ds_retorno_aux_w,0,500);
					exit;
				end if;
			end if;

		--Validação radioterapia
		elsif ( r_C01_w.ie_tipo_anexo = 'RA' ) then
			ds_retorno_aux_w := 'Número campos,Dose dia,Dose total,Dias previsto,Data prevista,Estadia tumor,Finalidade tratamento,Capacidade funcional,Cód procedimento';

			if	 ((coalesce(r_C01_w.nr_campos::text, '') = '' or r_C01_w.nr_campos <= 0)
			       or (coalesce(r_C01_w.qt_dose_dia::text, '') = '' or r_C01_w.qt_dose_dia <= 0)
			       or (coalesce(r_C01_w.qt_dose_total::text, '') = '' or r_C01_w.qt_dose_total <= 0)
			       or (coalesce(r_C01_w.qt_dias_previsto::text, '') = '' or r_C01_w.qt_dias_previsto <= 0)
			       or  coalesce(r_C01_w.dt_inicio_previsto::text, '') = '') then
				ds_retorno_w := substr(ds_retorno_aux_w,0,500);
				exit;
			else
				--Validação para o diagnóstico
				select 	count(1)
				into STRICT	qt_registro_w
				from	pls_lote_anexo_diag_aut
				where	nr_seq_lote_anexo_guia = r_C01_w.nr_sequencia;

				--Verifica se existe registro na tabela de diagnóstico, se não existir gera ocorrência, se existir valida se os campos obrigatórios estão preenchidos
				if ( qt_registro_w = 0 ) then
					ds_retorno_w := substr(ds_retorno_aux_w,0,500);
					exit;
				else
					select 	count(1)
					into STRICT	qt_registro_w
					from	pls_lote_anexo_diag_aut
					where	nr_seq_lote_anexo_guia = r_C01_w.nr_sequencia
					and ((ie_estadia_tumor IS NOT NULL AND ie_estadia_tumor::text <> '')
					and	(cd_finalidade_tratamento IS NOT NULL AND cd_finalidade_tratamento::text <> '')
					and	(ie_capacidade_funcional IS NOT NULL AND ie_capacidade_funcional::text <> ''));

					if ( qt_registro_w = 0 ) then
						ds_retorno_w := substr(ds_retorno_aux_w,0,500);
						exit;
					end if;
				end if;

				if (cd_versao_tiss_w	= '2.01.03') or (cd_versao_tiss_w	= '2.02.01') or (cd_versao_tiss_w	= '2.02.02') or (cd_versao_tiss_w	= '2.02.03') or (cd_versao_tiss_w	= '3.00.00') or (cd_versao_tiss_w	= '3.00.01') or (cd_versao_tiss_w	= '3.01.00') or (cd_versao_tiss_w	= '3.02.00') or (cd_versao_tiss_w	= '3.02.01') or (cd_versao_tiss_w	= '3.02.02') or (cd_versao_tiss_w	= '3.03.00') then
					--Validação para os procedimentos
					select	count(1)
					into STRICT	qt_registro_w
					from	pls_lote_anexo_proc_aut
					where	nr_seq_lote_anexo_guia = r_C01_w.nr_sequencia
					and	coalesce(dt_prev_realizacao::text, '') = '';

					if ( qt_registro_w >= 1 ) then
						ds_retorno_w := substr(ds_retorno_aux_w,0,500);
						exit;
					end if;
				end if;
			end if;
		end if;
	end loop;
--Verifica os campos obrigatórios da requisição
elsif (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then

	for	r_C02_w in C02( nr_seq_guia_p ) loop

		--Validação para quimioterapia
		if ( r_C02_w.ie_tipo_anexo = 'QU' ) then
			ds_retorno_aux_w := 'Peso,Altura,Superficie corporal,Ciclo previsto,Ciclo atual,Intervalo ciclo,Estadia tumor,Tipo quimioterapia,Finalidade tratamento,Plano terapeutico,Capacidade funcional,Dt provavel adm,Via adm,Frequência adm,Cód procedimento';

			if	(  (coalesce(r_C02_w.qt_peso::text, '') = '' or r_C02_w.qt_peso <= 0)
				or (coalesce(r_C02_w.qt_altura::text, '') = '' or r_C02_w.qt_altura <= 0)
				or (coalesce(r_C02_w.qt_superficie_corporal::text, '') = '' or r_C02_w.qt_superficie_corporal <= 0)
				or (coalesce(r_C02_w.nr_ciclo_previsto::text, '') = '' or r_C02_w.nr_ciclo_previsto <= 0)
				or (coalesce(r_C02_w.nr_ciclo_atual::text, '') = '' or r_C02_w.nr_ciclo_atual <= 0)
				or (coalesce(r_C02_w.qt_intervalo_ciclo::text, '') = '' or r_C02_w.qt_intervalo_ciclo <= 0)) then
				ds_retorno_w := substr(ds_retorno_aux_w,0,500);
				exit;
			else
				--Validação para o diagnóstico
				select 	count(1)
				into STRICT	qt_registro_w
				from	pls_lote_anexo_diag_aut
				where	nr_seq_lote_anexo_guia = r_C02_w.nr_sequencia;

				--Verifica se existe registro na tabela de diagnóstico, se não existir gera ocorrência, se existir valida se os campos obrigatórios estão preenchidos
				if ( qt_registro_w = 0 ) then
					ds_retorno_w := substr(ds_retorno_aux_w,0,500);
					exit;
				else
					select 	count(1)
					into STRICT	qt_registro_w
					from	pls_lote_anexo_diag_aut
					where	nr_seq_lote_anexo_guia = r_C02_w.nr_sequencia
					and ((ie_estadia_tumor IS NOT NULL AND ie_estadia_tumor::text <> '')
					and	(ie_tipo_quimioterapia IS NOT NULL AND ie_tipo_quimioterapia::text <> '')
					and	(cd_finalidade_tratamento IS NOT NULL AND cd_finalidade_tratamento::text <> '')
					and	(ds_plano_terapeutico IS NOT NULL AND ds_plano_terapeutico::text <> '')
					and	(ie_capacidade_funcional IS NOT NULL AND ie_capacidade_funcional::text <> ''));

					if ( qt_registro_w = 0 ) then
						ds_retorno_w := substr(ds_retorno_aux_w,0,500);
						exit;
					end if;
				end if;


				--Validação para os procedimentos
				select	count(1)
				into STRICT	qt_registro_w
				from	pls_lote_anexo_proc_aut
				where	nr_seq_lote_anexo_guia = r_C02_w.nr_sequencia
				and	coalesce(dt_prev_realizacao::text, '') = '';

				if ( qt_registro_w >= 1 ) then
					ds_retorno_w := substr(ds_retorno_aux_w,0,500);
					exit;
				end if;


				--Validação para materiais e medicamentos
				select 	count(1)
				into STRICT	qt_registro_w
				from	pls_lote_anexo_mat_aut
				where	nr_seq_lote_anexo_guia = r_C02_w.nr_sequencia
				and ( coalesce(dt_prevista::text, '') = ''
				or 	coalesce(ie_via_administracao::text, '') = ''
				or 	coalesce(ie_frequencia_dose::text, '') = '' );

				if ( qt_registro_w >= 1 ) then
					ds_retorno_w := substr(ds_retorno_aux_w,0,500);
					exit;
				end if;
			end if;

		--Validação para OPME
		elsif ( r_C02_w.ie_tipo_anexo = 'OP' ) then
			ds_retorno_aux_w := 'Justificativa,Cód material,Opção fabricante';

			if ( coalesce(trim(both r_C02_w.ds_justificativa)::text, '') = '' ) then
				ds_retorno_w := substr(ds_retorno_aux_w,0,500);
				exit;
			else
				--Validação para materiais e medicamentos
				select 	count(1)
				into STRICT	qt_registro_w
				from	pls_lote_anexo_mat_aut
				where	nr_seq_lote_anexo_guia = r_C02_w.nr_sequencia
				and	 coalesce(ie_opcao_fabricante::text, '') = '';

				if ( qt_registro_w >= 1 ) then
					ds_retorno_w := substr(ds_retorno_aux_w,0,500);
					exit;
				end if;
			end if;

		--Validação radioterapia
		elsif ( r_C02_w.ie_tipo_anexo = 'RA' ) then
			ds_retorno_aux_w := 'Número campos,Dose dia,Dose total,Dias previsto,Data prevista,Estadia tumor,Finalidade tratamento,Capacidade funcional,Cód procedimento';

			if	(  (coalesce(r_C02_w.nr_campos::text, '') = '' or r_C02_w.nr_campos <= 0)
				or (coalesce(r_C02_w.qt_dose_dia::text, '') = '' or r_C02_w.qt_dose_dia <= 0)
				or (coalesce(r_C02_w.qt_dose_total::text, '') = '' or r_C02_w.qt_dose_total <= 0)
				or (coalesce(r_C02_w.qt_dias_previsto::text, '') = '' or r_C02_w.qt_dias_previsto <= 0)
				or  coalesce(r_C02_w.dt_inicio_previsto::text, '') = '') then
				ds_retorno_w := substr(ds_retorno_aux_w,0,500);
				exit;
			else
				--Validação para o diagnóstico
				select 	count(1)
				into STRICT	qt_registro_w
				from	pls_lote_anexo_diag_aut
				where	nr_seq_lote_anexo_guia = r_C02_w.nr_sequencia;

				--Verifica se existe registro na tabela de diagnóstico, se não existir gera ocorrência, se existir valida se os campos obrigatórios estão preenchidos
				if ( qt_registro_w = 0 ) then
					ds_retorno_w := substr(ds_retorno_aux_w,0,500);
					exit;
				else
					select 	count(1)
					into STRICT	qt_registro_w
					from	pls_lote_anexo_diag_aut
					where	nr_seq_lote_anexo_guia = r_C02_w.nr_sequencia
					and ((ie_estadia_tumor IS NOT NULL AND ie_estadia_tumor::text <> '')
					and	(cd_finalidade_tratamento IS NOT NULL AND cd_finalidade_tratamento::text <> '')
					and	(ie_capacidade_funcional IS NOT NULL AND ie_capacidade_funcional::text <> ''));

					if ( qt_registro_w = 0 ) then
						ds_retorno_w := substr(ds_retorno_aux_w,0,500);
						exit;
					end if;
				end if;

				if (cd_versao_tiss_w	= '2.01.03') or (cd_versao_tiss_w	= '2.02.01') or (cd_versao_tiss_w	= '2.02.02') or (cd_versao_tiss_w	= '2.02.03') or (cd_versao_tiss_w	= '3.00.00') or (cd_versao_tiss_w	= '3.00.01') or (cd_versao_tiss_w	= '3.01.00') or (cd_versao_tiss_w	= '3.02.00') or (cd_versao_tiss_w	= '3.02.01') or (cd_versao_tiss_w	= '3.02.02') or (cd_versao_tiss_w	= '3.03.00') then
					--Validação para os procedimentos
					select	count(1)
					into STRICT	qt_registro_w
					from	pls_lote_anexo_proc_aut
					where	nr_seq_lote_anexo_guia = r_C02_w.nr_sequencia
					and	coalesce(dt_prev_realizacao::text, '') = '';

					if ( qt_registro_w >= 1 ) then
						ds_retorno_w := substr(ds_retorno_aux_w,0,500);
						exit;
					end if;
				end if;
			end if;
		end if;
	end loop;

end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_obrig_anexo_guia ( nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type) FROM PUBLIC;

