-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dt_fim_adm_med_atb_md (Dt_Inicio_CIH_p timestamp, Dt_Inicio_p timestamp, Qt_Dias_Solicitado_p bigint, Nr_Dia_Util_p bigint ) RETURNS timestamp AS $body$
DECLARE

   result_w timestamp;
   ds_hour_w	integer;
   ds_minute_w	integer;
   ie_recalculate_hour_w	boolean := false;

BEGIN
    if (((Dt_Inicio_CIH_p IS NOT NULL AND Dt_Inicio_CIH_p::text <> '') or (Dt_Inicio_p IS NOT NULL AND Dt_Inicio_p::text <> ''))
     and ((Qt_Dias_Solicitado_p IS NOT NULL AND Qt_Dias_Solicitado_p::text <> '') or (Nr_Dia_Util_p IS NOT NULL AND Nr_Dia_Util_p::text <> ''))) then
        if (Dt_Inicio_CIH_p IS NOT NULL AND Dt_Inicio_CIH_p::text <> '') then 
            result_w := Dt_Inicio_CIH_p;
			ie_recalculate_hour_w := true;
        elsif (Dt_Inicio_p IS NOT NULL AND Dt_Inicio_p::text <> '') then
            result_w := Dt_Inicio_p;
        end if;

		if (ie_recalculate_hour_w and (result_w IS NOT NULL AND result_w::text <> '') and (Dt_Inicio_p IS NOT NULL AND Dt_Inicio_p::text <> '')) then
			ds_hour_w := PKG_DATE_UTILS.extract_field('HOUR', Dt_Inicio_p);
			ds_minute_w := PKG_DATE_UTILS.extract_field('MINUTE', Dt_Inicio_p);
			
			result_w := PKG_DATE_UTILS.get_DateTime(result_w, PKG_DATE_UTILS.get_Time(ds_hour_w, ds_minute_w, 0));
		end if;
		
		if (PKG_DATE_UTILS.extract_field('HOUR', Dt_Inicio_p) = 0 and
		    PKG_DATE_UTILS.extract_field('MINUTE', Dt_Inicio_p) = 0) THEN
			result_w := result_w + 1;
		end if;

        if (Qt_Dias_Solicitado_p > 0) then
            result_w := result_w + Qt_Dias_Solicitado_p;
        elsif (Nr_Dia_Util_p > 0) then
            result_w := result_w + Nr_Dia_Util_p;
        else
            result_w := result_w + 1;
        end if;

        begin
           select (result_w - (1/24/60)) 
           into STRICT result_w
;
        exception
          when others then
            result_w := result_w;
        end;

        return result_w;
    else
        return null;
    end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dt_fim_adm_med_atb_md (Dt_Inicio_CIH_p timestamp, Dt_Inicio_p timestamp, Qt_Dias_Solicitado_p bigint, Nr_Dia_Util_p bigint ) FROM PUBLIC;

