-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION consistir_solicitacao_vaga ( cd_pessoa_fisica_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_sequencia_solic_p bigint, dt_agendamento_p timestamp default null) RETURNS varchar AS $body$
DECLARE


--Parametros nr_sequencia_solic_p somente sera utilizado

--Na alteracao de solicitacao de gestao de vagas
qt_solicitacao_w	integer;
ie_retorno_w		varchar(1);
ie_forma_solic_w	varchar(10);


BEGIN

/* Obter parametro 9 da gestao de vagas que diz a forma de consistir uma solicitacao de vaga */

ie_forma_solic_w := obter_param_usuario(1002, 9, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_forma_solic_w);

if (ie_forma_solic_w = 'PS') then
	if (nr_sequencia_solic_p > 0) then
		begin
		select	count(*)
		into STRICT	qt_solicitacao_w
		from	gestao_vaga
		where	cd_pessoa_fisica = cd_pessoa_fisica_p
		and	(dt_prevista IS NOT NULL AND dt_prevista::text <> '')
		and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prevista) >= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp())
		and	ie_status IN ('A','P','R')
		and	nr_sequencia <> nr_sequencia_solic_p;
		exception
			when others then
			qt_solicitacao_w	:= 0;
		end;
	else
		begin
		select	count(*)
		into STRICT	qt_solicitacao_w
		from	gestao_vaga
		where	cd_pessoa_fisica = cd_pessoa_fisica_p
		and	(dt_prevista IS NOT NULL AND dt_prevista::text <> '')
		and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prevista) >= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp())
		and	ie_status IN ('A','P','R');
		exception
			when others then
			qt_solicitacao_w	:= 0;
		end;	
	end if;
elsif (ie_forma_solic_w = 'S') then	
	if (nr_sequencia_solic_p > 0) then
		begin
		select	count(*)
		into STRICT	qt_solicitacao_w
		from	gestao_vaga
		where	cd_pessoa_fisica = cd_pessoa_fisica_p
		and	ie_status IN ('A','P','R')
		and	nr_sequencia <> nr_sequencia_solic_p;
		exception
			when others then
			qt_solicitacao_w	:= 0;
		end;
	else
		begin
		select	count(*)
		into STRICT	qt_solicitacao_w
		from	gestao_vaga
		where	cd_pessoa_fisica = cd_pessoa_fisica_p
		and	ie_status IN ('A','P','R');
		exception
			when others then
			qt_solicitacao_w	:= 0;
		end;
	end if;
elsif (ie_forma_solic_w = 'SU') then	
	if (nr_sequencia_solic_p > 0) then
		begin
		select	count(*)
		into STRICT	qt_solicitacao_w
		from	gestao_vaga
		where	cd_pessoa_fisica = cd_pessoa_fisica_p
		and	ie_status IN ('A','P','R')
		and	nr_sequencia <> nr_sequencia_solic_p
		and	coalesce(obter_classif_setor(cd_setor_desejado),0) <> 4;
		exception
			when others then
			qt_solicitacao_w	:= 0;
		end;
	else
		begin
		select	count(*)
		into STRICT	qt_solicitacao_w
		from	gestao_vaga
		where	cd_pessoa_fisica = cd_pessoa_fisica_p
		and	ie_status IN ('A','P','R')
		and	coalesce(obter_classif_setor(cd_setor_desejado),0) <> 4;
		exception
			when others then
			qt_solicitacao_w	:= 0;
		end;
	end if;

elsif (ie_forma_solic_w = 'PSA')then

	if (nr_sequencia_solic_p > 0) then
		begin
		select	count(*)
		into STRICT	qt_solicitacao_w
		from	gestao_vaga
		where	cd_pessoa_fisica = cd_pessoa_fisica_p
		and	(dt_prevista IS NOT NULL AND dt_prevista::text <> '')
		and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prevista) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agendamento_p)
		and	ie_status IN ('A','P','R')
		and	nr_sequencia <> nr_sequencia_solic_p;
		exception
			when others then
			qt_solicitacao_w	:= 0;
		end;
	else
		begin
		select	count(*)
		into STRICT	qt_solicitacao_w
		from	gestao_vaga
		where	cd_pessoa_fisica = cd_pessoa_fisica_p
		and	(dt_prevista IS NOT NULL AND dt_prevista::text <> '')
		and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prevista) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agendamento_p)
		and	ie_status IN ('A','P','R');
		exception
			when others then
			qt_solicitacao_w	:= 0;
		end;	
	end if;
	
elsif (ie_forma_solic_w = 'N') then
	qt_solicitacao_w	:= 0;
end if;

if (qt_solicitacao_w > 0) then
	ie_retorno_w	:= 'S';
else
	ie_retorno_w	:= 'N';
end if;

return ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION consistir_solicitacao_vaga ( cd_pessoa_fisica_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_sequencia_solic_p bigint, dt_agendamento_p timestamp default null) FROM PUBLIC;

