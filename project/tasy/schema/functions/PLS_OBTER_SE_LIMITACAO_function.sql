-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_limitacao ( nr_seq_segurado_p bigint, nr_seq_tipo_limitacao_p bigint, qt_permitida_p bigint, qt_intervalo_p bigint, ie_periodo_p text, qt_solicitada_p bigint, ie_tipo_guia_p text, nr_seq_guia_p bigint, ie_tipo_consistencia_p text, ie_tipo_item_p text, ie_tipo_periodo_p text, nr_seq_limitacao_p bigint) RETURNS varchar AS $body$
DECLARE


ie_limitacao_w			varchar(1);
ie_tipo_guia_w			varchar(2);
nr_seq_guia_w			bigint;
nr_seq_guia_proc_w		bigint;
qt_liberada_w			pls_guia_plano_proc.qt_autorizada%type := 0;
qt_autorizada_w			pls_guia_plano_proc.qt_autorizada%type;
qt_permitida_w			pls_guia_plano_proc.qt_autorizada%type;
dt_inicial_w			timestamp;
dt_final_w			timestamp;
dt_contratacao_w		timestamp;
dt_inicio_w			timestamp;
dt_atual_w			timestamp;
dt_guia_w			timestamp;
qt_dias_autorizados_w		integer;
qt_dia_solicitado_w		integer;
nr_seq_diagnostico_w		bigint;
qt_dias_autorizados_ww		integer;
ie_tipo_incidencia_w		varchar(1);
nr_seq_segurado_w		bigint;
nr_seq_titular_w		bigint;
nr_seq_contrato_w		bigint;
nr_seq_guia_mat_w		bigint;
nr_seq_intercambio_w		bigint;

c01 CURSOR FOR
	SELECT	b.nr_sequencia,
		b.qt_dia_solicitado,
		a.nr_sequencia
	from	pls_guia_plano	b,
		pls_segurado	a
	where	a.nr_sequencia	= b.nr_seq_segurado
	and	a.nr_sequencia	= nr_seq_segurado_p
	and	b.ie_estagio in (2,3,5,6)
	and	coalesce(ie_tipo_incidencia_w,'B')	= 'B'
	and	b.ie_status = '1'
	and	b.dt_autorizacao between dt_inicial_w and fim_dia(dt_final_w)
	and	b.nr_sequencia <> nr_seq_guia_p
	
union all

	SELECT	b.nr_sequencia,
		b.qt_dia_solicitado,
		a.nr_sequencia
	from	pls_guia_plano	b,
		pls_segurado	a
	where	a.nr_sequencia		= b.nr_seq_segurado
	and	((a.nr_seq_contrato	= nr_seq_contrato_w  and (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> ''))
	or (a.nr_seq_intercambio	= nr_seq_intercambio_w and (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '')))
	and	b.ie_estagio in (2,3,5,6)
	and	coalesce(ie_tipo_incidencia_w,'B') = 'T'
	and	b.ie_status = '1'
	and	b.dt_autorizacao between dt_inicial_w and fim_dia(dt_final_w)
	and	((a.nr_seq_titular = nr_seq_segurado_p)
	or (a.nr_seq_titular = nr_seq_titular_w)
	or (a.nr_sequencia = nr_seq_titular_w))
	and	b.nr_sequencia <> nr_seq_guia_p
	
union all

	select	b.nr_sequencia,
		b.qt_dia_solicitado,
		a.nr_sequencia
	from	pls_guia_plano	b,
		pls_segurado	a
	where	a.nr_sequencia	= b.nr_seq_segurado
	and	a.nr_sequencia	= nr_seq_segurado_p
	and	coalesce(ie_tipo_incidencia_w,'B')	= 'B'
	and	b.nr_sequencia = nr_seq_guia_p
	
union all

	select	b.nr_sequencia,
		b.qt_dia_solicitado,
		a.nr_sequencia
	from	pls_guia_plano	b,
		pls_segurado	a
	where	a.nr_sequencia		= b.nr_seq_segurado
	and	((a.nr_seq_contrato	= nr_seq_contrato_w  and (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '')) 
	or (a.nr_seq_intercambio	= nr_seq_intercambio_w and (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '')))
	and	coalesce(ie_tipo_incidencia_w,'B') = 'T'
	and	((a.nr_seq_titular = nr_seq_segurado_p)
	or (a.nr_seq_titular = nr_seq_titular_w)
	or (a.nr_sequencia = nr_seq_titular_w))
	and	b.nr_sequencia = nr_seq_guia_p;

c02 CURSOR FOR
	SELECT	pls_obter_regra_limitacao(a.cd_procedimento,null,a.ie_origem_proced,nr_seq_segurado_w,null),
		sum(coalesce(qt_autorizada,0))
	from	pls_guia_plano_proc a
	where	nr_seq_guia	= nr_seq_guia_w
	and	pls_obter_regra_limitacao(a.cd_procedimento,null,a.ie_origem_proced,nr_seq_segurado_w,null) = nr_seq_tipo_limitacao_p
	and	a.ie_status in ('L','S','P')
	group	by pls_obter_regra_limitacao(a.cd_procedimento,null,a.ie_origem_proced,nr_seq_segurado_w,null);

C03 CURSOR FOR
	SELECT	pls_obter_regra_limitacao(null,null,null,nr_seq_segurado_w,a.cd_doenca),
		sum(coalesce(b.qt_dia_solicitado,0))
	from	pls_diagnostico a,
		pls_guia_plano b
	where	a.nr_seq_guia	= b.nr_sequencia
	and	a.nr_seq_guia	= nr_seq_guia_w
	and	pls_obter_regra_limitacao(null,null,null,nr_seq_segurado_w,a.cd_doenca) = nr_seq_tipo_limitacao_p
	group	by pls_obter_regra_limitacao(null,null,null,nr_seq_segurado_w,a.cd_doenca);

C04 CURSOR FOR
	SELECT	pls_obter_regra_limitacao(null,a.nr_seq_material,null,nr_seq_segurado_w,null),
		sum(coalesce(qt_autorizada,0))
	from	pls_guia_plano_mat a
	where	nr_seq_guia	= nr_seq_guia_w
	and	pls_obter_regra_limitacao(null,a.nr_seq_material,null,nr_seq_segurado_w,null) = nr_seq_tipo_limitacao_p
	and	a.ie_status in ('L','S','P')
	group	by pls_obter_regra_limitacao(null,a.nr_seq_material,null,nr_seq_segurado_w,null);

BEGIN

ie_limitacao_w	:= 'N';
qt_permitida_w	:= coalesce(qt_permitida_p,0);
ie_tipo_guia_w	:= coalesce(ie_tipo_guia_p,'X');
qt_dias_autorizados_w	:= 0;

select	coalesce(dt_autorizacao,dt_solicitacao)
into STRICT	dt_guia_w
from	pls_guia_plano
where	nr_sequencia = nr_seq_guia_p;

if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then
	select	coalesce(nr_seq_titular,nr_seq_segurado_p),
		nr_seq_contrato,
		nr_seq_intercambio
		--pls_obter_se_segurado_intercam(null,null,nr_seq_segurado_p)
	into STRICT	nr_seq_titular_w,
		nr_seq_contrato_w,
		nr_seq_intercambio_w
		--ie_intercambio_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_p;
	
	-- Tratamento para verificar o periodo a ser consistido

	-- Consistir pelo ano contratual
	if (ie_periodo_p = 'CO') then
		/*
		ie_tipo_periodo_w 
		M - Meses
		S - Semanas
		D - dias
		Tratamento para definir o periodo de meses apos a data de contratacao
		Tambem e tratado os periodos de dias e semanas
		Ex: 	Contratacao 		= 20/05/2006
			Qt meses periodo 	= 3
			Periodo 1 		= 20/05/2006 ate 19/08/2006
			Periodo 2 		= 20/08/2006 ate 19/11/2006
			Periodo 3 		= 20/11/2006 ate 19/02/2007
			...
		*/
		
		if (coalesce(nr_seq_contrato_w,0) > 0) then
			select	trunc(dt_contrato,'dd'),
				trunc(dt_guia_w)
			into STRICT	dt_contratacao_w,
				dt_atual_w
			from	pls_contrato
			where	nr_sequencia	= nr_seq_contrato_w;
		elsif (coalesce(nr_seq_intercambio_w,0) > 0) then
			select	trunc(dt_inclusao,'dd'),
				trunc(dt_guia_w)
			into STRICT	dt_contratacao_w,
				dt_atual_w
			from	pls_intercambio
			where	nr_sequencia	= nr_seq_intercambio_w;
		end if;
		
		dt_inicio_w		:= dt_contratacao_w;
		
		if (ie_tipo_periodo_p = 'M') then
			while(dt_inicio_w <= dt_atual_w) loop
				select	add_months(dt_inicio_w,qt_intervalo_p)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	add_months(dt_inicio_w, -qt_intervalo_p),
				dt_inicio_w -1
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		elsif (ie_tipo_periodo_p = 'S') then
			while(dt_inicio_w <= dt_atual_w) loop
				select	dt_inicio_w + (qt_intervalo_p*7)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - (qt_intervalo_p*7),
				dt_inicio_w -1
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		elsif (ie_tipo_periodo_p = 'D') then
			while(dt_inicio_w <= dt_atual_w) loop
				select	dt_inicio_w + qt_intervalo_p
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - qt_intervalo_p,
				dt_inicio_w -1
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		end if;
	-- Consistir pelo ano atual
	elsif (ie_periodo_p = 'CA') then
		/*
		Tratamento para definir o periodo de meses do ano calendario
		Ex:	Contratacao 	= 20/05/2006
			Qt meses periodo 	= 3
			Periodo 1 		= 01/01/2006 ate 31/03/2006
			Periodo 2 		= 01/04/2006 ate 31/06/2006
			Periodo 3 		= 01/07/2006 ate 31/09/2007
			Periodo 4 		= 01/10/2006 ate 31/12/2007
			...
		*/
		dt_atual_w	:= trunc(dt_guia_w);
		dt_inicio_w	:= trunc(dt_guia_w,'year');
		if (ie_tipo_periodo_p = 'M') then
			if (qt_intervalo_p = 1) then
				dt_inicial_w	:= trunc(dt_guia_w,'month');
				dt_final_w	:= last_day(trunc(dt_guia_w,'month'));
			elsif (qt_intervalo_p in (2,3,4,6)) then
				dt_inicio_w	:= trunc(dt_guia_w,'year');
				
				while(dt_inicio_w <= dt_atual_w) loop
					begin
					select	add_months(dt_inicio_w,qt_intervalo_p)
					into STRICT	dt_inicio_w
					;
					end;
				end loop;
				
				select	add_months(dt_inicio_w,-qt_intervalo_p),
					dt_inicio_w -1
				into STRICT	dt_inicial_w,
					dt_final_w
				;
				
			elsif (qt_intervalo_p = 12) then
				dt_inicial_w	:= trunc(dt_guia_w,'year');
				dt_final_w	:= last_day(add_months(trunc(dt_guia_w,'year'),qt_intervalo_p));
			end if;
		elsif (ie_tipo_periodo_p = 'S') then
			while(dt_inicio_w <= dt_atual_w) loop
				select	dt_inicio_w + (qt_intervalo_p*7)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - (qt_intervalo_p*7),
				dt_inicio_w -1
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		elsif (ie_tipo_periodo_p = 'D') then
			while(dt_inicio_w <= dt_atual_w) loop
				select	dt_inicio_w + qt_intervalo_p
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - qt_intervalo_p,
				dt_inicio_w -1
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		end if;
	--Data de adesao do beneficiario
	elsif (ie_periodo_p = 'A') then
		select	trunc(dt_contratacao,'dd'),
			trunc(dt_guia_w)
		into STRICT	dt_contratacao_w,
			dt_atual_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_segurado_p;
		
		dt_inicio_w		:= dt_contratacao_w;
		
		if (ie_tipo_periodo_p = 'M') then
			while(dt_inicio_w <= dt_atual_w) loop
				select	add_months(dt_inicio_w,qt_intervalo_p)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	add_months(dt_inicio_w, -qt_intervalo_p),
				dt_inicio_w -1
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		elsif (ie_tipo_periodo_p = 'S') then
			while(dt_inicio_w <= dt_atual_w) loop
				select	dt_inicio_w + (qt_intervalo_p*7)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - (qt_intervalo_p*7),
				dt_inicio_w -1
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		elsif (ie_tipo_periodo_p = 'D') then
			while(dt_inicio_w <= dt_atual_w) loop
				select	dt_inicio_w + qt_intervalo_p
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - qt_intervalo_p,
				dt_inicio_w -1
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		end if;
	--Data da primeira utilizacao
	elsif (ie_periodo_p = 'D') then
		dt_atual_w	:= trunc(dt_guia_w);
		
		/*aaschlote  05/09/2012 - Conforme conversado com o Eder, foi colocado a data atual, pois e a mais proxima da data de autorizacao*/

		CALL pls_gravar_primeira_limi_benef(nr_seq_segurado_p,nr_seq_limitacao_p,nr_seq_guia_p,clock_timestamp(),'TASY');
		
		select	max(dt_primeira_utilizacao)
		into STRICT	dt_inicio_w
		from	pls_segurado_limitacao
		where	nr_seq_segurado		= nr_seq_segurado_p
		and	nr_seq_limitacao	= nr_seq_limitacao_p;
		
		if (ie_tipo_periodo_p = 'M') then
			while(dt_inicio_w <= dt_atual_w) loop
				select	add_months(dt_inicio_w,qt_intervalo_p)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	add_months(dt_inicio_w, -qt_intervalo_p),
				dt_inicio_w -1
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		elsif (ie_tipo_periodo_p = 'S') then
			while(dt_inicio_w <= dt_atual_w) loop
				select	dt_inicio_w + (qt_intervalo_p*7)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - (qt_intervalo_p*7),
				dt_inicio_w -1
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		elsif (ie_tipo_periodo_p = 'D') then
			while(dt_inicio_w <= dt_atual_w) loop
				select	dt_inicio_w + qt_intervalo_p
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - qt_intervalo_p,
				dt_inicio_w -1
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		end if;
	end if;
	
	if (ie_tipo_guia_w = 'X') then
		begin
		
		select	ie_tipo_incidencia
		into STRICT	ie_tipo_incidencia_w
		from	pls_tipo_limitacao
		where	nr_sequencia	= nr_seq_tipo_limitacao_p;
		
		open c01;
		loop
		fetch c01 into
			nr_seq_guia_w,
			qt_dia_solicitado_w,
			nr_seq_segurado_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			
			if (ie_tipo_consistencia_p = 'C') then
				open C03;
				loop
				fetch C03 into
					nr_seq_diagnostico_w,
					qt_dia_solicitado_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					qt_dias_autorizados_w := (qt_dias_autorizados_w + coalesce(qt_dia_solicitado_w,0));
				end loop;
				close C03;
			else
				if (ie_tipo_item_p	= 'P') then
					open c02;
					loop
					fetch c02 into
						nr_seq_guia_proc_w,
						qt_autorizada_w;
					EXIT WHEN NOT FOUND; /* apply on c02 */
						qt_liberada_w	:= coalesce(qt_liberada_w,0) + coalesce(qt_autorizada_w,0);
					end loop;
					close c02;
				elsif (ie_tipo_item_p	= 'M') then
					open c04;
					loop
					fetch c04 into
						nr_seq_guia_mat_w,
						qt_autorizada_w;
					EXIT WHEN NOT FOUND; /* apply on c04 */
						qt_liberada_w	:= coalesce(qt_liberada_w,0) + coalesce(qt_autorizada_w,0);
					end loop;
					close c04;
				end if;
			end if;
		end loop;
		close c01;
		
		if (ie_tipo_consistencia_p = 'Q') then
			qt_liberada_w	:= coalesce(qt_liberada_w,0) + coalesce(qt_solicitada_p,0);
		elsif (ie_tipo_consistencia_p = 'C') then
			qt_dias_autorizados_w := (qt_dias_autorizados_w + coalesce(qt_solicitada_p,0));
		end if;
		
		end;
	else
		if (ie_tipo_consistencia_p = 'Q') then
			select	count(*)
			into STRICT	qt_liberada_w
			from	pls_guia_plano
			where	nr_seq_segurado		= nr_seq_segurado_p
			and	dt_autorizacao between	dt_inicial_w and fim_dia(dt_final_w)
			and	ie_status		= '1'
			and	ie_tipo_guia		= ie_tipo_guia_w;
			
			qt_liberada_w	:= qt_liberada_w + 1;
		elsif (ie_tipo_consistencia_p = 'C') then
			select	coalesce(sum(qt_dia_autorizado),0)
			into STRICT	qt_dias_autorizados_ww
			from	pls_guia_plano
			where	nr_seq_segurado		= nr_seq_segurado_p
			and	dt_autorizacao between	dt_inicial_w and fim_dia(dt_final_w)
			and	ie_status		= '1'
			and	ie_tipo_guia		= ie_tipo_guia_w;
			
			qt_dias_autorizados_w := (qt_dias_autorizados_ww + coalesce(qt_solicitada_p,0));
		end if;
	end if;
	
	if	(qt_permitida_w < qt_liberada_w AND ie_tipo_consistencia_p = 'Q') or
		(qt_permitida_w < qt_dias_autorizados_w AND ie_tipo_consistencia_p = 'C') then
		ie_limitacao_w	:= 'S';
	end if;
end if;

return ie_limitacao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_limitacao ( nr_seq_segurado_p bigint, nr_seq_tipo_limitacao_p bigint, qt_permitida_p bigint, qt_intervalo_p bigint, ie_periodo_p text, qt_solicitada_p bigint, ie_tipo_guia_p text, nr_seq_guia_p bigint, ie_tipo_consistencia_p text, ie_tipo_item_p text, ie_tipo_periodo_p text, nr_seq_limitacao_p bigint) FROM PUBLIC;

