-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION eliminar_hor_vigencia_proc ( ds_horarios_p text, cd_intervalo_p text, dt_Hora_Inicio_p timestamp, dt_prim_horario_presc_p timestamp, qt_hora_intervalo_p bigint, qt_min_intervalo_p bigint, nr_prescricao_p bigint, ie_proc_urgente_p text, dt_prev_execucao_p timestamp) RETURNS varchar AS $body$
DECLARE


ds_hora_w				varchar(07);
ds_horarios_w				varchar(2000);
ds_horarios_fixo_w			varchar(2000);
ie_operacao_w				varchar(1);
mascara_data_w				varchar(10);
ds_horarios_aux_w			varchar(255);
dt_validade_prescr_w			timestamp;
dt_medic_w				timestamp;
dt_prescricao_w				timestamp;
dt_prescricao_ww			timestamp;
dt_horario_w				timestamp;
ds_dt_prescr_w				varchar(10);
k					integer;
qt_dia_adic_w				bigint := 0;
qt_pertence_w				bigint;
dt_inicio_prescr_w			timestamp;
qt_min_intervalo_w			double precision;
dt_liberacao_w				timestamp;


BEGIN

qt_min_intervalo_w	:= (coalesce(qt_hora_intervalo_p,0) * 60) + coalesce(qt_min_intervalo_p,0);

select	to_char(coalesce(dt_inicio_prescr,dt_prescricao),'dd/mm/yyyy'),
	coalesce(dt_validade_prescr,dt_prescricao + nr_horas_validade/24),
	dt_inicio_prescr,
	trunc(dt_prescricao,'mi'),
	coalesce(dt_liberacao,dt_liberacao_medico)
into STRICT	ds_dt_prescr_w,
	dt_validade_prescr_w,
	dt_inicio_prescr_w,
	dt_prescricao_w,
	dt_liberacao_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

dt_medic_w		:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(to_date(ds_dt_prescr_w, 'dd/mm/yyyy hh24:mi:ss'), dt_Hora_Inicio_p);

if (to_char(dt_prim_horario_presc_p,'hh24:mi') > to_char(dt_Hora_Inicio_p,'hh24:mi')) then
	dt_medic_w	:= dt_medic_w + 1;
end if;

select	coalesce(max(ie_operacao),'')
into STRICT	ie_operacao_w
from	intervalo_prescricao
where	cd_intervalo = cd_intervalo_p;

if (to_char(dt_Hora_Inicio_p, 'mi') <> '00') or
	((coalesce(qt_min_intervalo_w,0) > 0) and (ie_operacao_w = 'X')) then
	Mascara_data_w 			:= 'hh24:mi';
else
	Mascara_data_w 			:= 'hh24';
end if;

ds_horarios_w	:= ds_horarios_p;

if (obter_se_somente_numero(ds_horarios_w) = 'S' and ie_operacao_w <> 'F') then

	if (ds_horarios_w <> 'ACM') and (ds_horarios_w <> 'SN') and (dt_prev_execucao_p IS NOT NULL AND dt_prev_execucao_p::text <> '') then
		select	padroniza_horario_prescr(ds_horarios_w, to_char(dt_prev_execucao_p,'dd/mm/yyyy hh24:mi:ss')) || ' '
		into STRICT	ds_horarios_w
		;

		while (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') LOOP
			begin
			select	position(' ' in ds_horarios_w)
			into STRICT	k
			;
			
			if (k > 1) and ((substr(ds_horarios_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_w, 1, k -1))::text <> '')) then
				begin
				ds_hora_w		:= substr(ds_horarios_w, 1, k-1);
				ds_hora_w		:= replace(ds_hora_w, ' ','');
				ds_horarios_w		:= substr(ds_horarios_w, k + 1, 2000);
				
				if (position('A' in ds_hora_w)	> 0) and (ie_proc_urgente_p	= 'N') and (qt_dia_adic_w		= 0) then
					qt_dia_adic_w		:= 1;
				elsif (position('AA' in ds_hora_w)	> 0) and (ie_proc_urgente_p	= 'N') then
					qt_dia_adic_w	:= qt_dia_adic_w + 1;
				end if;
				
				ds_hora_w	:= replace(ds_hora_w,'A','');
				ds_hora_w	:= replace(ds_hora_w,'A','');			

				if (ie_proc_urgente_p	= 'S') then
					dt_prescricao_ww	:= coalesce(dt_liberacao_w,dt_prescricao_ww);
				else
					dt_prescricao_ww	:= dt_prescricao_w;
				end if;			
				
				if (dt_prev_execucao_p >= dt_prescricao_ww) then
					dt_horario_w := trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_prev_execucao_p, replace(ds_hora_w,'A','')), 'mi');
				else
					dt_horario_w := trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_prev_execucao_p + qt_dia_adic_w, replace(ds_hora_w,'A','')), 'mi');
				end if;			

				if	((dt_horario_w < trunc(dt_prescricao_ww,'mi')) or (qt_dia_adic_w > 0)) and (ie_proc_urgente_p = 'N') then
					dt_horario_w := dt_horario_w + qt_dia_adic_w;
				end if;
				
				select	count(*)
				into STRICT	qt_pertence_w
				
				where	dt_horario_w >= dt_prescricao_w
				and 	dt_horario_w < dt_validade_prescr_w;

				if (qt_pertence_w > 0) then
					if (Mascara_data_w = 'hh24') and (length(ds_hora_w) = 5) and (substr(ds_hora_w,3,3) = ':00') then
						ds_hora_w	:= substr(ds_hora_w,1,2);
					end if;
					
					ds_horarios_fixo_w	:= ds_horarios_fixo_w || ds_hora_w ||' ';
				end if;

				end;
			elsif (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
				begin
				ds_horarios_w		:= '';
				end;
			end if;
			
			end;
		END LOOP;

		ds_horarios_w	:= ds_horarios_fixo_w;
	end if;
end if;
	
return	ds_horarios_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION eliminar_hor_vigencia_proc ( ds_horarios_p text, cd_intervalo_p text, dt_Hora_Inicio_p timestamp, dt_prim_horario_presc_p timestamp, qt_hora_intervalo_p bigint, qt_min_intervalo_p bigint, nr_prescricao_p bigint, ie_proc_urgente_p text, dt_prev_execucao_p timestamp) FROM PUBLIC;

