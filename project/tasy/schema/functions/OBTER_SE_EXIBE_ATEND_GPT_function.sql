-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_exibe_atend_gpt (nr_atendimento_p bigint, cd_pessoa_fisica_p text, ie_tipo_gpt_p text, nr_seq_analise_enf_p bigint, nr_seq_analise_farm_p bigint, ie_status_enf_p text, ie_status_farm_p text, cd_setor_atend_p text, ie_revisado_p text, ie_vaga_solicitada_p text, ie_exibe_alta_p text, ds_itens_p text, ie_liberacao_p text, ds_setores_p text default null) RETURNS varchar AS $body$
DECLARE


ie_exibe_w				varchar(1) := 'N';
ie_analise_farm_w		varchar(1) := null;
ie_analise_enf_w		varchar(1) := null;
ie_revisado_w			varchar(1) := null;
cd_setor_atend_w		varchar(10);

	function obter_ie_analise_enf
			return text is
	;
BEGIN
		if (coalesce(ie_analise_enf_w::text, '') = '') then
			select	coalesce(max(CASE WHEN coalesce(dt_fim_analise::text, '') = '' THEN  'A'  ELSE 'F' END ), 'P')
			into STRICT	ie_analise_enf_w
			from	gpt_hist_analise_plano
			where	nr_sequencia = nr_seq_analise_enf_p;
		end if;

		return ie_analise_enf_w;
	end;

	function obter_ie_analise_farm
			return varchar2 is
	begin
		if (coalesce(ie_analise_farm_w::text, '') = '') then
			select  coalesce(max(CASE WHEN coalesce(dt_fim_analise::text, '') = '' THEN  'A'  ELSE 'F' END ), 'P')
			into STRICT	ie_analise_farm_w
			from	gpt_hist_analise_plano
			where	nr_sequencia = nr_seq_analise_farm_p;
		end if;

		return ie_analise_farm_w;
	end;

	function obter_cd_setor_atend
			return varchar2 is
	begin
		if (coalesce(cd_setor_atend_w::text, '') = '') then
			cd_setor_atend_w := coalesce(obter_unidade_atendimento(nr_atendimento_p,'IAA','CS'),'-');
		end if;

		return cd_setor_atend_w;
	end;

	function obter_ie_revisado
			return varchar2 is
		dt_revisado_w varchar2(60);
	begin
		if (coalesce(ie_revisado_w::text, '') = '') then
			dt_revisado_w	:= gpt_obter_info_revisao(nr_atendimento_p,cd_pessoa_fisica_p,'D');

			if (coalesce(dt_revisado_w::text, '') = '') then
				ie_revisado_w := 'P';
			else
				ie_revisado_w := 'R';
			end if;	
		end if;

		return ie_revisado_w;
	end;

begin

if	((ie_status_enf_p	= 'T') or		-- Analysis status - nursing
	    (ie_status_enf_p	= obter_ie_analise_enf())) and
	((ie_status_farm_p	= 'T') or		-- Analysis status - pharmacy
		(ie_status_farm_p	= 'PA' and (obter_ie_analise_farm() = 'A' or obter_ie_analise_farm() = 'P')) or (ie_status_farm_p	= obter_ie_analise_farm())) and (coalesce(cd_setor_atend_p::text, '') = '' or cd_setor_atend_p = obter_cd_setor_atend()) and
	((ie_revisado_p = 'A') or			-- Review - nursing
	    (ie_revisado_p = obter_ie_revisado())) and
    ((cd_setor_atend_p IS NOT NULL AND cd_setor_atend_p::text <> '') or (coalesce(ds_setores_p::text, '') = '') or (obter_se_exibe_setores_gpt(nr_atendimento_p,'IAA','S', ds_setores_p) = 'S')) and
	((ie_vaga_solicitada_p = 'N') or (obter_solic_vaga_atend(nr_atendimento_p, 'IE') = 'S')) and
	(((ie_exibe_alta_p = 'N') and (obter_se_atendimento_alta(nr_atendimento_p) = 'N')) or (ie_exibe_alta_p = 'S')) and
	((coalesce(ds_itens_p::text, '') = '') or (obter_se_exibe_itens_gpt(ds_itens_p,nr_atendimento_p,ie_liberacao_p) = 'S')) then

	ie_exibe_w := 'S';

end if;

return	ie_exibe_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_exibe_atend_gpt (nr_atendimento_p bigint, cd_pessoa_fisica_p text, ie_tipo_gpt_p text, nr_seq_analise_enf_p bigint, nr_seq_analise_farm_p bigint, ie_status_enf_p text, ie_status_farm_p text, cd_setor_atend_p text, ie_revisado_p text, ie_vaga_solicitada_p text, ie_exibe_alta_p text, ds_itens_p text, ie_liberacao_p text, ds_setores_p text default null) FROM PUBLIC;

