-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_cal_aval_number ( ds_lista_p text) RETURNS bigint AS $body$
DECLARE


lista_informacao_w		varchar(4000);
ds_lista_resultado_w	varchar(4000) := '';
ie_contador_w			bigint	:= 0;
tam_lista_w				bigint;
ie_pos_pt_virgula_w		smallint;


qt_resultado_aval_w		bigint;
qt_resultado_w			bigint;

tam_referencia_w		bigint;
ie_pos_referencia_w		smallint;

ds_referencia_w			varchar(4000);
ds_rest_referencia_w	varchar(4000);

qt_min_w				bigint;
qt_max_w				bigint;
qt_pontuacao_w			bigint;



BEGIN

lista_informacao_w	:= ds_lista_p;


tam_lista_w				:= length(lista_informacao_w);
ie_pos_pt_virgula_w		:= position(';' in lista_informacao_w);

qt_resultado_aval_w 	:= 	substr(lista_informacao_w,1,(ie_pos_pt_virgula_w - 1));
lista_informacao_w		:= substr(lista_informacao_w,(ie_pos_pt_virgula_w + 1),tam_lista_w);

if (qt_resultado_aval_w IS NOT NULL AND qt_resultado_aval_w::text <> '')then

	while((lista_informacao_w IS NOT NULL AND lista_informacao_w::text <> '') or ie_contador_w > 30) loop
		begin

		tam_lista_w			:= length(lista_informacao_w);
		ie_pos_pt_virgula_w		:= position(';' in lista_informacao_w);

		/* Obter a sequÃªncia lida */

		if (ie_pos_pt_virgula_w <> 0) then

			ds_referencia_w := substr(lista_informacao_w,1,(ie_pos_pt_virgula_w - 1));
			lista_informacao_w	:= substr(lista_informacao_w,(ie_pos_pt_virgula_w + 1),tam_lista_w);

			ds_rest_referencia_w := '';

			If (ds_referencia_w IS NOT NULL AND ds_referencia_w::text <> '') then

				tam_referencia_w		:= length(ds_referencia_w);
				ie_pos_referencia_w		:= position(',' in ds_referencia_w);

				qt_min_w				:= (substr(ds_referencia_w,1,(ie_pos_referencia_w - 1)))::numeric;
				ds_rest_referencia_w	:= substr(ds_referencia_w,(ie_pos_referencia_w + 1),tam_referencia_w);

				tam_referencia_w		:= length(ds_rest_referencia_w);
				ie_pos_referencia_w		:= position(',' in ds_rest_referencia_w);


				qt_max_w				:= (substr(ds_rest_referencia_w,1,(ie_pos_referencia_w - 1)))::numeric;
				qt_pontuacao_w			:= (substr(ds_rest_referencia_w,(ie_pos_referencia_w + 1),tam_referencia_w))::numeric;

				if (qt_min_w IS NOT NULL AND qt_min_w::text <> '') and (qt_max_w IS NOT NULL AND qt_max_w::text <> '') and (qt_pontuacao_w IS NOT NULL AND qt_pontuacao_w::text <> '') then

					if ( qt_resultado_aval_w >= qt_min_w) and ( qt_resultado_aval_w <= qt_max_w) then

						qt_resultado_w := qt_pontuacao_w;
						return qt_resultado_w;

					end if;
				end if;


			end if;
		end if;

		ie_contador_w	:= ie_contador_w + 1;

		end;
	end loop;

end if;

return	qt_resultado_w;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_cal_aval_number ( ds_lista_p text) FROM PUBLIC;

