-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_adt_a10_varian (nr_seq_rxt_tumor_p bigint) RETURNS text AS $body$
DECLARE


cd_pessoa_fisica_w		varchar(64);
family_name_patient_w		varchar(64);
given_name_patient_w		varchar(64);
middleinitialorname_patient_w	varchar(64);
family_name_mother_w		varchar(64);
given_name_mother_w		varchar(64);
middleinitialorname_mother_w	varchar(64);
date_of_birth_w		 	varchar(30);
sex_w		 		varchar(64);
race_w		 		varchar(64);
street_address_w		varchar(64);
zip_code_w		 	varchar(20);
state_adress_w		 	varchar(64);
city_w		 		varchar(64);
country_w            		varchar(64);
telephone_number_w		varchar(64);
telecommunication_usecode_w 	varchar(10);
email_address_w		 	varchar(64);
ie_estado_civil_w		varchar(15);
point_of_care_w 		varchar(120);
room_w 				varchar(255);
bed_w 				varchar(255);
facility_w 			varchar(120);
id_doctor_w 			varchar(10);
family_name_doctor_pep_w 	varchar(100);
given_name_doctor_pep_w 	varchar(100);
middlename_doctor_pep_w 	varchar(100);
visit_number_w 			bigint;
date_time_message_w            varchar(14);
date_message_w				varchar(10);
hl7_itens_varian_seq_w		numeric(38);
nr_prontuario_w 		bigint;


BEGIN
	declare
	json_aux_w   philips_json;
	ds_message_w text;

	begin
	json_aux_w := philips_json();

	select	
		a.cd_pessoa_fisica,
		substr(elimina_acentuacao(obter_parte_nome_pf(a.nome_pf,'sobrenome')), 1, 64) family_name_patient, 
		substr(elimina_acentuacao(obter_parte_nome_pf(a.nome_pf,'nome')), 1, 64) given_name_patient, 
		substr(elimina_acentuacao(obter_parte_nome_pf(a.nome_pf,'restonome')), 1, 64) middleinitialorname_patient, 
		substr(elimina_acentuacao(obter_parte_nome_pf(a.nome_mae_pf,'sobrenome')), 1, 64) family_name_mother, 
		substr(elimina_acentuacao(obter_parte_nome_pf(a.nome_mae_pf,'nome')), 1, 64) given_name_mother, 
		substr(elimina_acentuacao(obter_parte_nome_pf(a.nome_mae_pf,'restonome')), 1, 64) middleinitialorname_mother, 
		a.data_nascto_pf Date_Of_Birth, 
		sex, 
		race, 
		substr(elimina_acentuacao(street_address), 1, 64) street_address, 
		substr(zip_code, 1, 16) zip_code, 
		substr(elimina_acentuacao(state_adress), 1, 64) state_adress, 
		substr(elimina_acentuacao(city), 1, 64) city, 
		substr(elimina_acentuacao(country), 1, 64) country, 
		substr(telephone_number, 1, 64) telephone_number, 
		telecommunication_usecode, 
		email_address, 
		CASE WHEN a.ie_estado_civil=1 THEN 'S' WHEN a.ie_estado_civil=2 THEN 'M' WHEN a.ie_estado_civil=3 THEN 'D'  ELSE 'U' END , 
		nr_prontuario
	into STRICT  
		cd_pessoa_fisica_w,
		family_name_patient_w,
		given_name_patient_w,
		middleinitialorname_patient_w,
		family_name_mother_w,
		given_name_mother_w,
		middleinitialorname_mother_w,
		date_of_birth_w,
		sex_w,
		race_w,
		street_address_w,
		zip_code_w,
		state_adress_w,
		city_w,
		country_w,
		telephone_number_w,
		telecommunication_usecode_w,
		email_address_w,
		ie_estado_civil_w,
		nr_prontuario_w
	from	(SELECT b.nr_sequencia, 
				b.cd_pessoa_fisica, 
				c.nm_pessoa_fisica nome_pf, 
				obter_nome_mae_pf(b.cd_pessoa_fisica) nome_mae_pf, 
				to_char(obter_data_nascto_pf(b.cd_pessoa_fisica), 'YYYYMMDDHH24MISS') data_nascto_pf, 
				coalesce(ie_sexo,'I') Sex, 
				d.cd_raca_hl7 Race, 
				(e.ds_endereco ||','|| e.nr_endereco || CASE WHEN coalesce(ds_complemento::text, '') = '' THEN  ''  ELSE ',' || e.ds_complemento END ) street_address, 
				e.cd_cep Zip_Code, 
				substr(obter_compl_pf(e.cd_pessoa_fisica, e.ie_tipo_complemento, 'DS_UF'), 1, 50) state_adress, 
				e.ds_municipio City, 
				substr(obter_nome_pais(e.nr_seq_pais),1,20) Country, 
				coalesce(obter_telefone_pf(b.cd_pessoa_fisica, 12), obter_telefone_pf(b.cd_pessoa_fisica, 13)) telephone_number, 
				'HP' telecommunication_usecode, 
				obter_email_pf(b.cd_pessoa_fisica) email_address,
				c.cd_religiao,
				c.ie_estado_civil, 
				b.nr_atendimento,
				c.nr_prontuario,
				c.nr_cep_cidade_nasc
			from	rxt_tumor b, 
				pessoa_fisica c 
				left join cor_pele d on c.nr_seq_cor_pele = d.nr_sequencia 
				left join compl_pessoa_fisica e ON (c.cd_pessoa_fisica = e.cd_pessoa_fisica and e.ie_tipo_complemento = 1) 
				where b.cd_pessoa_fisica = c.cd_pessoa_fisica) a 
				where   a.nr_sequencia = nr_seq_rxt_tumor_p;

	select
		substr(elimina_acentuacao(a.point_of_care),1,255) point_of_care,    
		substr(elimina_acentuacao(a.room),1,255),    
		substr(elimina_acentuacao(a.bed),1,255),    
		substr(elimina_acentuacao(a.facility),1,255),   
		cd_medico,   
		substr(elimina_acentuacao(obter_parte_nome_pf(a.nome_medico_pf_pep,'sobrenome')), 1, 64),    
		substr(elimina_acentuacao(obter_parte_nome_pf(a.nome_medico_pf_pep,'nome')), 1, 64),    
		substr(elimina_acentuacao(obter_parte_nome_pf(a.nome_medico_pf_pep,'restonome')), 1, 64),  
		a.nr_atendimento
	into STRICT	
		point_of_care_w,
		room_w,
		bed_w,
		facility_w,
		id_doctor_w,
		family_name_doctor_pep_w,
		given_name_doctor_pep_w,
		middlename_doctor_pep_w,
		visit_number_w
	from (SELECT	b.nr_sequencia,    
			obter_desc_setor_atend(obter_setor_atendimento(b.nr_atendimento)) point_of_care,    
			obter_unidade_atendimento(b.nr_atendimento, 'A', 'U') room,    
			obter_unidade_atendimento(b.nr_atendimento, 'A', 'UC') bed,    
			b.cd_estabelecimento facility,    
			obter_nome_pf(b.cd_medico) nome_medico_pf_pep,    
			obter_nome_pf(c.cd_medico_resp) nome_medico_pf_eup,    
			b.nr_atendimento, 
			b.cd_medico,
			c.dt_entrada   
		FROM rxt_tumor b
LEFT OUTER JOIN atendimento_paciente c ON (b.nr_atendimento = c.nr_atendimento) ) a    
		where 	a.nr_sequencia = nr_seq_rxt_tumor_p;

	select	to_char(clock_timestamp(), 'YYYYMMDDHH24MISS'),
			to_char(clock_timestamp(), 'YYYYMMDD')
	into STRICT	date_time_message_w,
			date_message_w
	;

	select	nextval('hl7_itens_varian_seq')
	into STRICT	hl7_itens_varian_seq_w
	;

	json_aux_w.put('IDNumber',cd_pessoa_fisica_w);				
	json_aux_w.put('Surname',family_name_patient_w);				
	json_aux_w.put('GivenName',given_name_patient_w);						
	json_aux_w.put('SecondandFurtherGivenName',middleinitialorname_patient_w);	
	json_aux_w.put('MotherSurname',family_name_mother_w);						
	json_aux_w.put('MotherGivenName',given_name_mother_w);				
	json_aux_w.put('MotherSecondandFurtherGivenName',middleinitialorname_mother_w);		
	json_aux_w.put('DateTimeofBirth',date_of_birth_w);							
	json_aux_w.put('AdministrativeSex',sex_w);											
	json_aux_w.put('Race',race_w);											
	json_aux_w.put('StreetName',street_address_w);						
	json_aux_w.put('ZiporPostalCode',zip_code_w); 							
	json_aux_w.put('StateorProvince',state_adress_w);						
	json_aux_w.put('City',city_w);		
	json_aux_w.put('Country',country_w);	
	json_aux_w.put('TelephoneNumber',telephone_number_w);			
	json_aux_w.put('TelecommunicationUseCode',telecommunication_usecode_w);	
	json_aux_w.put('EmailAddress',email_address_w);							
	json_aux_w.put('MaritalStatus',ie_estado_civil_w);						
	json_aux_w.put('PointofCare',coalesce(point_of_care_w,''));
	json_aux_w.put('Room',coalesce(room_w,''));
	json_aux_w.put('Bed',coalesce(bed_w,''));
	json_aux_w.put('Facility',coalesce(facility_w,''));
	json_aux_w.put('AttendingDoctorIDNumber',coalesce(id_doctor_w,''));
	json_aux_w.put('AttendingDoctorSurname',coalesce(family_name_doctor_pep_w,''));
	json_aux_w.put('AttendingDoctorGivenName',coalesce(given_name_doctor_pep_w,''));
	json_aux_w.put('AttendingDoctorSecondandFurtherGivenName',coalesce(middlename_doctor_pep_w,''));
	json_aux_w.put('VisitNumberID',coalesce(visit_number_w,''));
	json_aux_w.put('DateTimeOfMessage', coalesce(date_time_message_w,''));
	json_aux_w.put('DateOfMessage', coalesce(date_message_w,''));
	json_aux_w.put('MessageControlID', coalesce(hl7_itens_varian_seq_w,''));
	json_aux_w.put('PatientID', coalesce(nr_prontuario_w,''));

	dbms_lob.createtemporary(ds_message_w, TRUE);
	json_aux_w.(ds_message_w);

	return ds_message_w;
	end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_adt_a10_varian (nr_seq_rxt_tumor_p bigint) FROM PUBLIC;

