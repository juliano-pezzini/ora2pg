-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_primeiro_horario_prin ( cd_intervalo_p text, nr_prescricao_p bigint, cd_material_p bigint, ie_via_aplicacao_p text, hr_prim_horario_p text) RETURNS varchar AS $body$
DECLARE

										
ds_prim_horario_w		varchar(255);
ds_prim_horario_ww		varchar(255);
ie_prim_hor_validade_w	varchar(255);
dt_prescricao_w			timestamp;
hr_prescricao_w			varchar(05);
hr_inicial_w			varchar(05);
ds_retorno_w			varchar(5);
hr_prim_horario_w		varchar(10);
i						integer;
hr_ref_w				timestamp;
hr_atual_w				timestamp;
ds_horario_w			varchar(5);
ds_hora_inicio_w		varchar(5);
dt_primeiro_horario_w	varchar(5);
dt_inicio_prescr_w		timestamp;
dt_validade_prescr_w	timestamp;
cd_estabelecimento_w	bigint;
ie_dia_w				bigint;
cd_setor_atendimento_w	integer;
ie_prescr_emergencia_w	varchar(1);
cd_intervalo_w			varchar(50);
ie_limpa_prim_hor_w		varchar(1) := 'N';
nr_atendimento_w		bigint;
nr_seq_agrupamento_w	bigint;
qt_peso_w				real;
cd_pessoa_fisica_w		varchar(10);
qt_idade_w				double precision;
cd_unidade_basica_w		varchar(30);
ie_minutos_w			varchar(1);

c01 CURSOR FOR
SELECT	hr_prim_horario,
		cd_intervalo
from		material_prescr a
where	a.cd_material = cd_material_p
and		coalesce(a.cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0)
and		a.ie_tipo = '1'
and		coalesce(a.cd_unidade_basica, coalesce(cd_unidade_basica_w,'0'))	= coalesce(cd_unidade_basica_w,'0')
and		coalesce(qt_peso_w,1) between 	coalesce(a.qt_peso_min,0) and
		coalesce(a.qt_peso_max,999999)
and		((coalesce(nr_seq_agrupamento::text, '') = '') or (nr_seq_agrupamento			= nr_seq_agrupamento_w))
and		coalesce(qt_idade_w,1) between coalesce(Obter_idade_param_prescr2(coalesce(a.qt_idade_min,0),coalesce(a.qt_idade_min_mes,0),coalesce(a.qt_idade_min_dia,0),coalesce(a.qt_idade_max,0),coalesce(a.qt_idade_max_mes,0),coalesce(a.qt_idade_max_dia,0),'MIN'),0) and 
		coalesce(Obter_idade_param_prescr2(coalesce(a.qt_idade_min,0),coalesce(a.qt_idade_min_mes,0),coalesce(a.qt_idade_min_dia,0),coalesce(a.qt_idade_max,0),coalesce(a.qt_idade_max_mes,0),coalesce(a.qt_idade_max_dia,0),'MAX'),9999999)
and 		not exists (	SELECT	1
					from		regra_setor_mat_prescr b
					where	a.nr_sequencia		= b.nr_seq_mat_prescr
					and		b.cd_setor_excluir	= cd_setor_atendimento_w)
and	((coalesce(a.cd_estabelecimento::text, '') = '') or (a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento))
and	((coalesce(a.cd_intervalo_filtro::text, '') = '') or (a.cd_intervalo_filtro = cd_intervalo_p))
and	((coalesce(cd_doenca_cid::text, '') = '') or (obter_se_cid_atendimento(nr_atendimento_w,cd_doenca_cid) = 'S'))
order by coalesce(a.cd_setor_atendimento,99999) desc,
	a.qt_idade_min,
	a.qt_idade_max,
	coalesce(a.ie_via_aplicacao, 'zzzzzzzz') desc, 
	coalesce(a.qt_peso_min, 99999999) desc,
	a.nr_sequencia;
	
c02 CURSOR FOR
SELECT	coalesce(b.ds_prim_horario || ' ', ' ')
from	intervalo_prescricao a,
	intervalo_setor b
where	a.cd_intervalo 		= b.cd_intervalo
and	coalesce(b.cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w
and	coalesce(b.cd_estab, cd_estabelecimento_w)			= cd_estabelecimento_w
and	a.cd_intervalo 		= cd_intervalo_p		
and	((b.cd_material = cd_material_p) or (coalesce(b.cd_material::text, '') = ''))		
and	((b.cd_unidade_basica = coalesce(cd_unidade_basica_w,b.cd_unidade_basica)) or (coalesce(b.cd_unidade_basica::text, '') = ''))
and	((b.ie_via_aplicacao = ie_via_aplicacao_p) or (coalesce(ie_via_aplicacao::text, '') = ''))
order by coalesce(b.cd_material,0),
	 coalesce(b.ie_via_aplicacao,' '),
	 coalesce(b.cd_unidade_basica,0),
	 coalesce(b.cd_setor_atendimento,0),
	 coalesce(b.cd_estab,0);


BEGIN

select	max(coalesce(hr_prim_horario_p,to_char(dt_primeiro_horario,'hh24:mi'))),
		max(dt_prescricao),
		max(to_char(dt_primeiro_horario,'hh24:mi')),
		coalesce(max(cd_setor_atendimento),0),
		coalesce(max(ie_prescr_emergencia),'N'),
		max(cd_estabelecimento),
		max(dt_inicio_prescr),
		max(dt_validade_prescr),
		max(nr_atendimento),
		max(qt_peso),
		max(cd_pessoa_fisica),
		max(obter_unidade_atendimento(nr_atendimento,'A','UB'))
into STRICT		hr_prescricao_w,
		dt_prescricao_w,
		dt_primeiro_horario_w,
		cd_setor_atendimento_w,
		ie_prescr_emergencia_w,
		cd_estabelecimento_w,
		dt_inicio_prescr_w,
		dt_validade_prescr_w,
		nr_atendimento_w,
		qt_peso_w,
		cd_pessoa_fisica_w,
		cd_unidade_basica_w
from		prescr_medica
where	nr_prescricao 	= nr_prescricao_p;

select	coalesce(obter_dados_apraz_interv(max(cd_intervalo), cd_setor_atendimento_w, '1'), coalesce(max(ie_limpa_prim_hor),'N')),
		max(ds_prim_horario),
		coalesce(max(ie_prim_hor_validade),'N')
into STRICT		ie_limpa_prim_hor_w,
		ds_prim_horario_ww,
		ie_prim_hor_validade_w
from		intervalo_prescricao
where	cd_intervalo = cd_intervalo_p;

select	max(nr_seq_agrupamento)
into STRICT		nr_seq_agrupamento_w
from		setor_atendimento
where	cd_setor_atendimento	= cd_setor_atendimento_w;

select	max(obter_idade(b.dt_nascimento,coalesce(b.dt_obito,clock_timestamp()),'DIA'))
into STRICT		qt_idade_w
from		pessoa_fisica b
where	b.cd_pessoa_fisica	= cd_pessoa_fisica_w;

if (coalesce(ie_limpa_prim_hor_w,'N') = 'N') then

	open C01;
	loop
	fetch C01 into	
		hr_prim_horario_w,
		cd_intervalo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		hr_prim_horario_w	:= hr_prim_horario_w;
		cd_intervalo_w		:= cd_intervalo_w;
	end loop;
	close C01;

	select	PKG_DATE_UTILS.start_of(dt_prescricao_w, 'dd', 0) - PKG_DATE_UTILS.start_of(clock_timestamp(), 'dd', 0)
	into STRICT		ie_dia_w
	;

	if (PKG_DATE_UTILS.get_Time(dt_prescricao_w, hr_prescricao_w) > dt_prescricao_w) or (ie_dia_w > 0) then
		hr_inicial_w		:= hr_prescricao_w;
	else
		hr_inicial_w		:= to_char(trunc(dt_prescricao_w,'hh') + 1/24,'hh24:mi');
	end if;

	select	coalesce(max(ds_prim_horario) || ' ', ' ')
	into STRICT	ds_prim_horario_w
	from	intervalo_material
	where	cd_intervalo	= cd_intervalo_p
	and	cd_material	= cd_material_p;

	if (cd_setor_atendimento_w > 0) and (coalesce(ds_prim_horario_w,' ') = ' ') then		
	
		open C02;
		loop
		fetch C02 into	
			ds_prim_horario_w;			
		EXIT WHEN NOT FOUND; /* apply on C02 */
			ds_prim_horario_w	:= ds_prim_horario_w;			
		end loop;
		close C02;			
		
	end if;	
	
	if (coalesce(ds_prim_horario_w::text, '') = '') or (ds_prim_horario_w = ' ') then
		select	coalesce(max(ds_prim_horario) || ' ', ' ')
		into STRICT	ds_prim_horario_w
		from	intervalo_prescricao
		where	cd_intervalo = cd_intervalo_p;
	end if;

	begin
	if (substr(hr_inicial_w,1,2) = '24') then
		hr_ref_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_w,'dd',0) + 1;
	else
		hr_ref_w	:= PKG_DATE_UTILS.get_Time(dt_prescricao_w, hr_inicial_w);
	end if;
	exception
		when others then
		--'A data inicial nao e valida');
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(184005);
	end;
	if (hr_ref_w < dt_prescricao_w) then
		hr_ref_w	:= hr_ref_w + 1;
	end if;

	ds_horario_w		:= '';

	FOR i 	IN 1.. length(ds_prim_horario_w) LOOP
		begin
		if (substr(ds_prim_horario_w,i,1) = ' ') then
			begin
			if (coalesce(ds_hora_inicio_w::text, '') = '') then
				ds_hora_inicio_w	:= ds_horario_w;
			end if;
			if (substr(ds_horario_w,1,2) = '00') or (substr(ds_horario_w,1,2) = '24') then
				hr_atual_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_w,'dd',0) + 1;
			else
				ie_minutos_w	:= 'N';
				if (length(ds_horario_w) = 0) then
					ds_horario_w	:= '00';
				elsif	((length(ds_horario_w) > 2) and (length(ds_horario_w) <> 5)) or
					((length(ds_horario_w) = 5) and
					 ((substr(ds_horario_w,3,1) <> ':') or (substr(ds_horario_w,4,1) > '5'))) then
					ds_horario_w	:= substr(ds_horario_w,1,2);
				end if;

				if (length(ds_horario_w) = 1) then
					ds_horario_w	:= '0' || ds_horario_w;
				elsif (length(ds_horario_w) = 5) then
					ie_minutos_w	:= 'S';
				end if;			
				if (ds_horario_w <> 'SN') and (ds_horario_w <> 'ACM') and (ds_horario_w <> '') then
					if (ie_minutos_w	= 'S') then
						hr_atual_w	:= trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_prescricao_w, coalesce(ds_horario_w, '00:00')),'mi');
					else
						hr_atual_w	:= trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_prescricao_w, coalesce(ds_horario_w, '00:00')),'hh');
					end if;					
				end if;
			end if;

			if (hr_atual_w < dt_prescricao_w) then
				hr_atual_w	:= hr_atual_w + 1;
			end if;
			if (ds_horario_w <> 'SN') then
				if (length(ds_horario_w) = 2) then
					ds_horario_w	:= ds_horario_w || ':00';
				end if;
				if (ds_horario_w >= dt_primeiro_horario_w) then
					begin
					hr_inicial_w	:= ds_horario_w;
					ds_hora_inicio_w:= ds_horario_w;
					exit;
					end;
				end if;
			end if;
			ds_horario_w		:= '';
			end;
		else
			begin
			ds_horario_w	:= substr(ds_horario_w || substr(ds_prim_horario_w,i,1),1,5);
			end;
		end if;
		end;
	END LOOP;

	begin
	if	--(ds_hora_inicio_w	<> 'SN') and            OS (570878)
		((hr_inicial_w <> ds_hora_inicio_w) or
		 ((coalesce(ds_hora_inicio_w::text, '') = '') and (hr_inicial_w IS NOT NULL AND hr_inicial_w::text <> ''))) then
		if	((PKG_DATE_UTILS.get_Time(dt_inicio_prescr_w, coalesce(ds_hora_inicio_w,hr_inicial_w)) < dt_inicio_prescr_w) or (PKG_DATE_UTILS.get_Time(dt_inicio_prescr_w, coalesce(ds_hora_inicio_w,hr_inicial_w)) > dt_validade_prescr_w)) and (PKG_DATE_UTILS.get_Time(dt_inicio_prescr_w, coalesce(ds_hora_inicio_w,hr_inicial_w)) + 1 > dt_validade_prescr_w) then
			hr_inicial_w	:= to_char(dt_inicio_prescr_w,'hh24:mi');		
		else
			hr_inicial_w	:= ds_hora_inicio_w;
		end if;
	end if;
	exception when others then
		hr_inicial_w	:= ds_hora_inicio_w;
	end;

	if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') and
		((cd_intervalo_w = cd_intervalo_p) or (coalesce(cd_intervalo_w::text, '') = '')) then
		hr_inicial_w	:= hr_prim_horario_w;
	end if;

	if (length(hr_inicial_w) = 2) then
		hr_inicial_w	:= hr_inicial_w || ':00';
	end if;

	ds_retorno_w	:= coalesce(hr_inicial_w, hr_prescricao_w);

	if (ds_retorno_w = '24:00') or (ds_retorno_w = '24') then
		ds_retorno_w	:= '00:00';
	end if;

	if (ie_prescr_emergencia_w = 'S') then
		ds_retorno_w	:= dt_primeiro_horario_w;
	end if;

end if;
if (coalesce(ds_prim_horario_ww::text, '') = '') and (ie_prim_hor_validade_w = 'S') then
	if (mod(PKG_DATE_UTILS.extract_field('HOUR',dt_inicio_prescr_w),2) = 0) then
		ds_retorno_w	:= to_char(trunc(dt_inicio_prescr_w,'hh') + 2/24,'hh24:mi');	
	else	
		ds_retorno_w	:= to_char(trunc(dt_inicio_prescr_w,'hh') + 1/24,'hh24:mi');
	end if;
end if;

RETURN ds_retorno_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_primeiro_horario_prin ( cd_intervalo_p text, nr_prescricao_p bigint, cd_material_p bigint, ie_via_aplicacao_p text, hr_prim_horario_p text) FROM PUBLIC;

