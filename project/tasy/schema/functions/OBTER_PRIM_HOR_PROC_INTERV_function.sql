-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_prim_hor_proc_interv ( nr_atendimento_p bigint, nr_prescricoes_p text, dt_inicio_prescr_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_intervalo_p text, ie_recalc_horario_p text, ie_regra_prim_hor_p text) RETURNS timestamp AS $body$
DECLARE


nr_hora_interv_w	double precision;
dt_horario_w		timestamp;
dt_horario_ww		timestamp;
dt_ultima_exec_w	timestamp;
dt_final_w			timestamp;
dt_inicio_w 		timestamp;
hr_prim_horario_w	varchar(5);
nr_prescricoes_w	varchar(255);


BEGIN
nr_prescricoes_w	:= ' ' || nr_prescricoes_p || ' ';
nr_prescricoes_w	:= replace(nr_prescricoes_w, ',',' ');
nr_prescricoes_w	:= replace(nr_prescricoes_w, '  ',' ');

dt_inicio_w 		:= dt_inicio_prescr_p - 5;
dt_final_w			:= dt_inicio_prescr_p + 5;

if (ie_recalc_horario_p = 'I') or (ie_regra_prim_hor_p = 'H') then
	begin
	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (dt_inicio_prescr_p IS NOT NULL AND dt_inicio_prescr_p::text <> '') and (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (ie_origem_proced_p IS NOT NULL AND ie_origem_proced_p::text <> '') and (cd_intervalo_p IS NOT NULL AND cd_intervalo_p::text <> '') then

		nr_hora_interv_w	:= obter_ocorrencia_intervalo(cd_intervalo_p, 24, 'H');
		if (somente_numero(nr_hora_interv_w) = 0) then
			nr_hora_interv_w	:= 1;
		end if;
		
		dt_horario_w		:= dt_inicio_prescr_p - nr_hora_interv_w / 24;

		select	max(c.dt_horario)
		into STRICT	dt_horario_ww
		from	prescr_proc_hor c,
				prescr_procedimento b,
				prescr_medica a
		where	c.nr_prescricao		= b.nr_prescricao
		and		c.nr_seq_procedimento	= b.nr_sequencia
		and		coalesce(c.dt_suspensao::text, '') = ''
		and		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
		and		coalesce(c.ie_situacao,'A')	= 'A'
		and		c.dt_horario		>= dt_horario_w - 220/24
		and		coalesce(b.dt_suspensao::text, '') = ''
		and		b.cd_procedimento	= cd_procedimento_p
		and		b.ie_origem_proced	= ie_origem_proced_p
		--and	b.nr_seq_exame is null
		and		b.nr_prescricao		= a.nr_prescricao
		and		coalesce(a.dt_suspensao::text, '') = ''
		and		(coalesce(a.dt_liberacao,a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao,a.dt_liberacao_medico))::text <> '')
		and		nr_prescricoes_w  like	'% ' || a.nr_prescricao || ' %'
		and		a.dt_inicio_prescr between dt_inicio_w and dt_final_w
		and		a.nr_atendimento	= nr_atendimento_p;
		
		if (dt_horario_ww IS NOT NULL AND dt_horario_ww::text <> '') then
			dt_horario_ww	:= dt_horario_ww + nr_hora_interv_w / 24;
		end if;

	end if;
	end;
elsif (ie_recalc_horario_p = 'H') then
	begin
	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (dt_inicio_prescr_p IS NOT NULL AND dt_inicio_prescr_p::text <> '') and (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (ie_origem_proced_p IS NOT NULL AND ie_origem_proced_p::text <> '') and (cd_intervalo_p IS NOT NULL AND cd_intervalo_p::text <> '') then

		nr_hora_interv_w	:= obter_ocorrencia_intervalo(cd_intervalo_p, 24, 'H');
		if (somente_numero(nr_hora_interv_w) = 0) then
			nr_hora_interv_w	:= 1;
		end if;

		select	min(c.dt_horario)
		into STRICT	dt_horario_ww
		from	prescr_proc_hor c,
			prescr_procedimento b,
			prescr_medica a
		where	c.nr_prescricao		= b.nr_prescricao
		and	c.nr_seq_procedimento	= b.nr_sequencia
		and	b.nr_prescricao		= a.nr_prescricao
		and	coalesce(c.dt_suspensao::text, '') = ''
		and	coalesce(c.ie_situacao,'A')	= 'A'
		and	coalesce(b.dt_suspensao::text, '') = ''
		and	b.cd_procedimento	= cd_procedimento_p
		and	b.ie_origem_proced	= ie_origem_proced_p
		and	a.dt_inicio_prescr between dt_inicio_w and dt_final_w
		and	coalesce(b.nr_seq_exame::text, '') = ''
		and	coalesce(a.dt_suspensao::text, '') = ''
		and	(coalesce(a.dt_liberacao,a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao,a.dt_liberacao_medico))::text <> '')
		and	a.nr_atendimento	= nr_atendimento_p
		and	nr_prescricoes_w  like	'% ' || a.nr_prescricao || ' %'
		and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S';
		
		if (dt_horario_ww IS NOT NULL AND dt_horario_ww::text <> '') then
			begin
			while(establishment_timezone_utils.startofday(dt_horario_ww) >= establishment_timezone_utils.startofday(dt_inicio_prescr_p)) loop
				begin
				dt_horario_ww	:= dt_horario_ww - 1;
				end;
			end loop;
			while(dt_horario_ww < dt_inicio_prescr_p) loop
				begin
				dt_horario_ww	:= dt_horario_ww + (coalesce(nr_hora_interv_w,1) / 24);
				end;
			end loop;
			end;
		end if;

	end if;
	end;
end if;

return dt_horario_ww;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_prim_hor_proc_interv ( nr_atendimento_p bigint, nr_prescricoes_p text, dt_inicio_prescr_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_intervalo_p text, ie_recalc_horario_p text, ie_regra_prim_hor_p text) FROM PUBLIC;

