-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_aut_exec_solic_ocor ( dt_ref_inicial_p timestamp, dt_ref_final_p timestamp, cd_medico_solicitante_p bigint, cd_estabelecimento_p bigint, nr_seq_requisicao_p bigint, ie_tipo_qtde_p text, nr_seq_segurado_p bigint, ie_utiliza_filtro_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Validar a regra  executor guia X solicitante requisição para as ocorrências combinadas
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ x ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [   ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_retorno_w		varchar(1) 	:= 'N';
qt_execucao_w		bigint	:= 0;


BEGIN

if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	if (ie_tipo_qtde_p = 'H') then
		if (ie_utiliza_filtro_p = 'S') then
			select	sum(qt_itens)
			into STRICT	qt_execucao_w
			from (SELECT	count(1) qt_itens
				from	pls_execucao_req_item a,
					pls_execucao_requisicao b
				where	a.nr_seq_execucao	= b.nr_sequencia
				and	a.nr_seq_segurado	= nr_seq_segurado_p
				and	a.cd_procedimento	= cd_procedimento_p
				and	a.ie_origem_proced	= ie_origem_proced_p
				and	a.cd_medico_executor	= cd_medico_solicitante_p
				and	(a.nr_seq_guia IS NOT NULL AND a.nr_seq_guia::text <> '')
				and	a.ie_situacao 		in ('S', 'P')
				and	coalesce(a.nr_seq_material::text, '') = ''
				and	a.nr_seq_requisicao	<> nr_seq_requisicao_p
				and	b.dt_execucao between dt_ref_inicial_p and dt_ref_final_p
				
union all

				SELECT	count(1)
				from	pls_execucao_req_item a,
					pls_execucao_requisicao b
				where	a.nr_seq_execucao	= b.nr_sequencia
				and	a.nr_seq_segurado	= nr_seq_segurado_p
				and	a.nr_seq_material	= nr_seq_material_p
				and	a.cd_medico_executor	= cd_medico_solicitante_p
				and	(a.nr_seq_guia IS NOT NULL AND a.nr_seq_guia::text <> '')
				and	a.ie_situacao 		in ('S', 'P')
				and	coalesce(a.cd_procedimento::text, '') = ''
				and	a.nr_seq_requisicao	<> nr_seq_requisicao_p
				and	b.dt_execucao between dt_ref_inicial_p and dt_ref_final_p) alias12;
		else
			select	count(1)
			into STRICT	qt_execucao_w
			from	pls_execucao_req_item a,
				pls_execucao_requisicao b
			where	a.nr_seq_execucao	= b.nr_sequencia
			and	a.nr_seq_segurado	= nr_seq_segurado_p
			and	a.cd_medico_executor	= cd_medico_solicitante_p
			and	(a.nr_seq_guia IS NOT NULL AND a.nr_seq_guia::text <> '')
			and	a.ie_situacao 		in ('S', 'P')
			and	a.nr_seq_requisicao	<> nr_seq_requisicao_p
			and	b.dt_execucao between dt_ref_inicial_p and dt_ref_final_p;
		end if;
	else
		if (ie_utiliza_filtro_p = 'S') then
			select	sum(qt_itens)
			into STRICT	qt_execucao_w
			from (SELECT count(1) qt_itens
				from	pls_execucao_req_item a,
					pls_execucao_requisicao b
				where	a.nr_seq_execucao	= b.nr_sequencia
				and	a.nr_seq_segurado	= nr_seq_segurado_p
				and	a.cd_procedimento	= cd_procedimento_p
				and	a.ie_origem_proced	= ie_origem_proced_p
				and	a.cd_medico_executor	= cd_medico_solicitante_p
				and	(a.nr_seq_guia IS NOT NULL AND a.nr_seq_guia::text <> '')
				and	a.ie_situacao 		in ('S', 'P')
				and	coalesce(a.nr_seq_material::text, '') = ''
				and	a.nr_seq_requisicao	<> nr_seq_requisicao_p
				and	trunc(b.dt_execucao) 	between dt_ref_inicial_p and dt_ref_final_p
				
union all

				SELECT	count(1) qt_itens
				from	pls_execucao_req_item a,
					pls_execucao_requisicao b
				where	a.nr_seq_execucao	= b.nr_sequencia
				and	a.nr_seq_segurado	= nr_seq_segurado_p
				and	a.nr_seq_material	= nr_seq_material_p
				and	a.cd_medico_executor	= cd_medico_solicitante_p
				and	(a.nr_seq_guia IS NOT NULL AND a.nr_seq_guia::text <> '')
				and	a.ie_situacao 		in ('S', 'P')
				and	coalesce(a.cd_procedimento::text, '') = ''
				and	a.nr_seq_requisicao	<> nr_seq_requisicao_p
				and	trunc(b.dt_execucao) 	between dt_ref_inicial_p and dt_ref_final_p) alias12;
		else
			select	count(1)
			into STRICT	qt_execucao_w
			from	pls_execucao_req_item a,
				pls_execucao_requisicao b
			where	a.nr_seq_execucao	= b.nr_sequencia
			and	a.nr_seq_segurado	= nr_seq_segurado_p
			and	a.cd_medico_executor	= cd_medico_solicitante_p
			and	(a.nr_seq_guia IS NOT NULL AND a.nr_seq_guia::text <> '')
			and	a.ie_situacao 		in ('S', 'P')
			and	a.nr_seq_requisicao	<> nr_seq_requisicao_p
			and	trunc(b.dt_execucao) 	between dt_ref_inicial_p and dt_ref_final_p;
		end if;
	end if;

	if (qt_execucao_w	> 0) then
		ie_retorno_w	:= 'S';
	end if;
end if;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_aut_exec_solic_ocor ( dt_ref_inicial_p timestamp, dt_ref_final_p timestamp, cd_medico_solicitante_p bigint, cd_estabelecimento_p bigint, nr_seq_requisicao_p bigint, ie_tipo_qtde_p text, nr_seq_segurado_p bigint, ie_utiliza_filtro_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint) FROM PUBLIC;

