-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION consiste_regra_obriga_proc ( nr_prescricao_p bigint) RETURNS varchar AS $body$
DECLARE


ie_permite_w			char(1) := 'S';
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
cd_area_procedimento_w	bigint;
cd_especialidade_w		bigint;
cd_grupo_proc_w			bigint;
cd_procedimento_w		procedimento.cd_procedimento%type;
ie_origem_proced_w		procedimento.ie_origem_proced%type;
nr_seq_proc_interno_w	proc_interno.nr_sequencia%type;
cd_setor_atendimento_w	integer;
ie_prim_dia_w			char(1);
ie_prim_atend_w			char(1);
ds_mensagem_w			varchar(255);

c02 CURSOR FOR
SELECT	cd_procedimento,
		ie_origem_proced,
		cd_grupo_proc,
		cd_especialidade,
		cd_area_procedimento,
		ds_mensagem,
		nr_seq_proc_interno
from	regra_obriga_proced_prescr
where	cd_setor_atendimento	= cd_setor_atendimento_w
and		((coalesce(cd_perfil::text, '') = '') or (cd_perfil = obter_perfil_ativo))
and		ie_momento		= 'D';

c03 CURSOR FOR
SELECT	cd_procedimento,
		ie_origem_proced,
		cd_grupo_proc,
		cd_especialidade,
		cd_area_procedimento,
		ds_mensagem,
		nr_seq_proc_interno
from	regra_obriga_proced_prescr
where	cd_setor_atendimento	= cd_setor_atendimento_w
and		((coalesce(cd_perfil::text, '') = '') or (cd_perfil = obter_perfil_ativo))
and		ie_momento		= 'P';


BEGIN

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then
	select	max(nr_atendimento),
			max(cd_setor_atendimento)
	into STRICT	nr_atendimento_w,
			cd_setor_atendimento_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;

	if (coalesce(nr_atendimento_w,0) > 0) then

		select	coalesce(max('N'),'S')
		into STRICT	ie_prim_dia_w
		from	prescr_medica where		nr_atendimento	= nr_atendimento_w
		and		nr_prescricao	< nr_prescricao_p
		and		dt_prescricao	between trunc(clock_timestamp()) and clock_timestamp() LIMIT 1;

		if (ie_prim_dia_w = 'S') then

			open C02;
			loop
			fetch C02 into
				cd_procedimento_w,
				ie_origem_proced_w,
				cd_grupo_proc_w,
				cd_especialidade_w,
				cd_area_procedimento_w,
				ds_mensagem_w,
				nr_seq_proc_interno_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin

				select	coalesce(max('S'),'N')
				into STRICT	ie_permite_w
				from	area_procedimento e,
						especialidade_proc d,
						grupo_proc c,
						procedimento b,
						prescr_procedimento a where		a.nr_prescricao		= nr_prescricao_p
				and		a.cd_procedimento	= b.cd_procedimento
				and		a.ie_origem_proced	= b.ie_origem_proced
				and		b.cd_grupo_proc		= c.cd_grupo_proc
				and		c.cd_especialidade	= d.cd_especialidade
				and		d.cd_area_procedimento	= e.cd_area_procedimento
				and		coalesce(cd_procedimento_w,a.cd_procedimento) 	= a.cd_procedimento
				and		coalesce(ie_origem_proced_w,a.ie_origem_proced)	= a.ie_origem_proced
				and		((coalesce(nr_seq_proc_interno_w::text, '') = '') or (nr_seq_proc_interno_w = a.nr_seq_proc_interno))
				and		coalesce(cd_grupo_proc_w,b.cd_grupo_proc)		= b.cd_grupo_proc
				and		coalesce(cd_especialidade_w,c.cd_especialidade)	= c.cd_especialidade
				and		coalesce(cd_area_procedimento_w,d.cd_area_procedimento)= d.cd_area_procedimento LIMIT 1;

				if (ie_permite_w = 'N') then
					exit;
				end if;

				end;
			end loop;
			close C02;

		end if;

		if (ie_permite_w	 = 'S') then
			select	coalesce(max('N'),'S')
			into STRICT	ie_prim_atend_w
			from	prescr_medica where		nr_atendimento	= nr_atendimento_w
			and		nr_prescricao	< nr_prescricao_p LIMIT 1;

			if (ie_prim_atend_w = 'S') then

				open C03;
				loop
				fetch C03 into
					cd_procedimento_w,
					ie_origem_proced_w,
					cd_grupo_proc_w,
					cd_especialidade_w,
					cd_area_procedimento_w,
					ds_mensagem_w,
					nr_seq_proc_interno_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin

					select	coalesce(max('S'),'N')
					into STRICT	ie_permite_w
					from	area_procedimento e,
							especialidade_proc d,
							grupo_proc c,
							procedimento b,
							prescr_procedimento a where		a.nr_prescricao		= nr_prescricao_p
					and		a.cd_procedimento	= b.cd_procedimento
					and		a.ie_origem_proced	= b.ie_origem_proced
					and		b.cd_grupo_proc		= c.cd_grupo_proc
					and		c.cd_especialidade	= d.cd_especialidade
					and		d.cd_area_procedimento	= e.cd_area_procedimento
					and		coalesce(cd_procedimento_w,a.cd_procedimento) 	= a.cd_procedimento
					and		coalesce(ie_origem_proced_w,a.ie_origem_proced)	= a.ie_origem_proced
					and		((coalesce(nr_seq_proc_interno_w::text, '') = '') or (nr_seq_proc_interno_w = a.nr_seq_proc_interno))
					and		coalesce(cd_grupo_proc_w,b.cd_grupo_proc)		= b.cd_grupo_proc
					and		coalesce(cd_especialidade_w,c.cd_especialidade)	= c.cd_especialidade
					and		coalesce(cd_area_procedimento_w,d.cd_area_procedimento)= d.cd_area_procedimento LIMIT 1;

					if (ie_permite_w = 'N') then
						exit;
					end if;

					end;
				end loop;
				close C03;

			end if;
		end if;

		if (ie_permite_w = 'N') and (coalesce(ds_mensagem_w::text, '') = '') then
			ds_mensagem_w	:= obter_desc_expressao(505978) || chr(13);
		end if;
	end if;
end if;

return	ds_mensagem_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION consiste_regra_obriga_proc ( nr_prescricao_p bigint) FROM PUBLIC;

