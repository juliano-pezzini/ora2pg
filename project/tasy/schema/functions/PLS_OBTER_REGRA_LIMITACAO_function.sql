-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_regra_limitacao ( cd_procedimento_p bigint, nr_seq_material_p bigint, ie_origem_proced_p bigint, nr_seq_segurado_p bigint, cd_doenca_cid_p text) RETURNS bigint AS $body$
DECLARE



ie_origem_proced_w		bigint;
cd_grupo_w			bigint;
cd_especialidade_w		integer;
cd_area_w			bigint;
nr_seq_limitacao_proc_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_contrato_w		bigint;
ie_limitacao_w			varchar(1);
nr_seq_intercambio_w		bigint;
------------------------------------------------------------------------------------
qt_limitacao_contrato_w		bigint;
qt_limitacao_produto_w		bigint;
qt_limitacao_sca_w		bigint;
------------------------------------------------------------------------------------
nr_seq_limitacao_w		bigint;
nr_seq_grupo_servico_w		bigint;
ie_serv_lib_w			varchar(10);
ie_lib_ant_w			varchar(10);
nr_seq_tipo_limitacao_w	pls_limitacao.nr_seq_tipo_limitacao%type;

C00 CURSOR FOR
	SELECT	x.nr_sequencia,
		x.nr_seq_tipo_limitacao
	from	pls_limitacao		x
	where	x.nr_seq_contrato		= nr_seq_contrato_w
	and	((x.NR_SEQ_PLANO_CONTRATO	= nr_seq_plano_w) or (coalesce(x.NR_SEQ_PLANO_CONTRATO::text, '') = ''))
	and	qt_limitacao_contrato_w		> 0
	
union all

	SELECT	x.nr_sequencia,
		x.nr_seq_tipo_limitacao
	from	pls_limitacao		x
	where	x.nr_seq_intercambio		= nr_seq_intercambio_w
	and	qt_limitacao_contrato_w		> 0
	
union all

	select	x.nr_sequencia,
		x.nr_seq_tipo_limitacao
	from	pls_limitacao		x
	where	x.nr_seq_plano			= nr_seq_plano_w
	and	qt_limitacao_produto_w		> 0
	
union all

	select	b.nr_sequencia,
		b.nr_seq_tipo_limitacao
	from	pls_limitacao		b,
		pls_sca_vinculo		a
	where	b.nr_seq_plano			= a.nr_seq_plano
	and	a.nr_seq_segurado		= nr_seq_segurado_p
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	qt_limitacao_sca_w		> 0;


c01 CURSOR(	nr_seq_tipo_limitacao_pc	pls_limitacao.nr_seq_tipo_limitacao%type) FOR
	SELECT	b.nr_sequencia nr_seq_tipo_limitacao,
		a.ie_limitacao,
		a.nr_seq_grupo_servico
	from	pls_tipo_limitacao b,
		pls_limitacao_proc a
	where	a.nr_seq_tipo_limitacao	= b.nr_sequencia
	and	b.nr_sequencia		= nr_seq_tipo_limitacao_pc
	and	((coalesce(a.cd_procedimento::text, '') = '') or (a.cd_procedimento = cd_procedimento_p AND a.ie_origem_proced = ie_origem_proced_w))
	and	((coalesce(a.cd_grupo_proc::text, '') = '') or (a.cd_grupo_proc 	= cd_grupo_w))
	and	((coalesce(a.cd_especialidade::text, '') = '') or (a.cd_especialidade = cd_especialidade_w))
	and	coalesce(a.ie_tipo_guia::text, '') = ''
	and	coalesce(a.cd_doenca_cid::text, '') = ''
	and	((coalesce(a.cd_area_procedimento::text, '') = '') or (a.cd_area_procedimento = cd_area_w))
	and	((coalesce(a.nr_seq_grupo_servico::text, '') = '') or (exists (SELECT	1
								 from	table(pls_grupos_pck.obter_procs_grupo_servico(a.nr_seq_grupo_servico, ie_origem_proced_w,cd_procedimento_p)) grupo)))
	and	b.ie_situacao		= 'A'
	order 	by a.nr_seq_grupo_servico,
		a.cd_area_procedimento,
		a.cd_especialidade,
		a.cd_grupo_proc,
		a.cd_procedimento,
		CASE WHEN a.ie_limitacao='S' THEN  0  ELSE 1 END;

C02 CURSOR FOR
	SELECT	b.nr_sequencia,
		a.ie_limitacao
	from	pls_limitacao c,
		pls_tipo_limitacao b,
		pls_limitacao_proc a
	where	a.nr_seq_tipo_limitacao	= b.nr_sequencia
	and	c.nr_seq_tipo_limitacao	= b.nr_sequencia
	and	coalesce(a.cd_doenca_cid,cd_doenca_cid_p)	= cd_doenca_cid_p
	and	c.nr_sequencia		= nr_seq_limitacao_w
	and	coalesce(a.cd_procedimento::text, '') = ''
	and	coalesce(a.cd_grupo_proc::text, '') = ''
	and	coalesce(a.cd_especialidade::text, '') = ''
	and	coalesce(a.cd_area_procedimento::text, '') = ''
	and	b.ie_situacao		= 'A'
	order by
		a.cd_area_procedimento,
		a.cd_especialidade,
		a.cd_grupo_proc,
		a.cd_procedimento,
		CASE WHEN a.ie_limitacao='S' THEN  0  ELSE 1 END;

C03 CURSOR FOR
	SELECT	b.nr_sequencia,
		a.ie_limitacao
	from	pls_limitacao c,
		pls_tipo_limitacao b,
		pls_limitacao_mat a
	where	a.nr_seq_tipo_limitacao	= b.nr_sequencia
	and	c.nr_seq_tipo_limitacao	= b.nr_sequencia
	and	coalesce(a.nr_seq_material,nr_seq_material_p)	= nr_seq_material_p
	and	coalesce(a.ie_tipo_guia::text, '') = ''
	and	coalesce(a.cd_doenca_cid::text, '') = ''
	and	b.ie_situacao	= 'A'
	and	c.nr_sequencia	= nr_seq_limitacao_w
	order 	by a.nr_seq_material,
		   CASE WHEN a.ie_limitacao='S' THEN  0  ELSE 1 END;
BEGIN

select	max(nr_seq_plano),
	max(nr_seq_contrato),
	max(nr_seq_intercambio)
into STRICT	nr_seq_plano_w,
	nr_seq_contrato_w,
	nr_seq_intercambio_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_p;

qt_limitacao_contrato_w		:= 0;
qt_limitacao_produto_w		:= 0;
qt_limitacao_sca_w		:= 0;

if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
	select	count(1)
	into STRICT	qt_limitacao_contrato_w
	from	pls_limitacao
	where	nr_seq_contrato	= nr_seq_contrato_w
	and	((NR_SEQ_PLANO_CONTRATO	= nr_seq_plano_w) or (coalesce(NR_SEQ_PLANO_CONTRATO::text, '') = ''))  LIMIT 1;
elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
	select	count(1)
	into STRICT	qt_limitacao_contrato_w
	from	pls_limitacao
	where	nr_seq_intercambio	= nr_seq_intercambio_w  LIMIT 1;
end if;

if (qt_limitacao_contrato_w = 0) then
	select	count(1)
	into STRICT	qt_limitacao_produto_w
	from	pls_limitacao
	where	nr_seq_plano	= nr_seq_plano_w  LIMIT 1;

	if (qt_limitacao_produto_w	= 0) then
		select	count(1)
		into STRICT	qt_limitacao_sca_w
		from	pls_limitacao		b,
			pls_sca_vinculo		a
		where	b.nr_seq_plano		= a.nr_seq_plano
		and	a.nr_seq_segurado	= nr_seq_segurado_p
		and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')  LIMIT 1;
	end if;
end if;


SELECT * FROM pls_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w;

nr_seq_limitacao_proc_w			:= null;
ie_lib_ant_w				:= 'N';

if (coalesce(cd_procedimento_p,0) <> 0) then
	for r_c00_w in C00() loop
		begin
		for r_c01_w in C01(r_c00_w.nr_seq_tipo_limitacao) loop
			begin
			nr_seq_limitacao_proc_w	:= r_c01_w.nr_seq_tipo_limitacao;
			ie_limitacao_w		:= r_c01_w.ie_limitacao;
			nr_seq_grupo_servico_w	:= r_c01_w.nr_seq_grupo_servico;
			ie_serv_lib_w		:= 'S';
			end;
		end loop;

		if (nr_seq_limitacao_proc_w IS NOT NULL AND nr_seq_limitacao_proc_w::text <> '') and (ie_serv_lib_w = 'S') then
			exit;
		end if;
		end;
	end loop;

elsif (cd_doenca_cid_p IS NOT NULL AND cd_doenca_cid_p::text <> '') then
	open C00;
	loop
	fetch C00 into
		nr_seq_limitacao_w,
		nr_seq_tipo_limitacao_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */
		begin

		open C02;
		loop
		fetch C02 into
			nr_seq_limitacao_proc_w,
			ie_limitacao_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
		end loop;
		close C02;

		if (nr_seq_limitacao_proc_w IS NOT NULL AND nr_seq_limitacao_proc_w::text <> '') then
			exit;
		end if;

		end;
	end loop;
	close C00;
elsif (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then
	open C00;
	loop
	fetch C00 into
		nr_seq_limitacao_w,
		nr_seq_tipo_limitacao_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */
		begin

		open c03;
		loop
		fetch c03 into
			nr_seq_limitacao_proc_w,
			ie_limitacao_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
		end loop;
		close c03;

		if (nr_seq_limitacao_proc_w IS NOT NULL AND nr_seq_limitacao_proc_w::text <> '') then
			exit;
		end if;

		end;
	end loop;
	close C00;
end if;

if (ie_limitacao_w = 'N') then
	return 0;
else
	return nr_seq_limitacao_proc_w;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_regra_limitacao ( cd_procedimento_p bigint, nr_seq_material_p bigint, ie_origem_proced_p bigint, nr_seq_segurado_p bigint, cd_doenca_cid_p text) FROM PUBLIC;

