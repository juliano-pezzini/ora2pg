-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_inconsistencias_nfse (nr_seq_nota_fiscal_p bigint) RETURNS varchar AS $body$
DECLARE

			 
			 
cd_pessoa_fisica_w 	varchar(10);
cd_cgc_w		varchar(14);
nr_sequencia_w		bigint;
nr_cep_tomador_w 	varchar(15);
nr_ddd_tomador_w 	varchar(40);
nr_telefone_w 		varchar(8);
cd_mun_w 		varchar(8);
contador_w		bigint := 0;	
ds_retorno_w		varchar(1) := 'N';
qt_registro_regra_w	bigint := 0;
nr_cpf_w		varchar(11);
nr_cpf_resp_w		varchar(11);
cd_operacao_nf_w	smallint;
ie_tipo_nota_w		varchar(1);
ds_existe_transp_w	varchar(1) := 'S';
ds_email_tomador_w	varchar(255);
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
cd_empresa_w		empresa.cd_empresa%type;
			
C01 CURSOR FOR 
SELECT 	cd_pessoa_fisica, 
	cd_cgc, 
	nr_sequencia, 
	substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP'),1,15) nr_cep_tomador, 
	obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'DDT') nr_ddd_tomador, 
	substr(Elimina_Caracteres_Especiais(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'T')), 1, 8) nr_telefone,	 
	obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CDM') cd_mun, 
	obter_dados_pf(cd_pessoa_fisica, 'CPF') nr_cpf, 
	obter_compl_pf(cd_pessoa_fisica,3,'C') nr_cpf_resp, 
	a.cd_operacao_nf, 
	nfe_obter_dados_transportadora(nr_sequencia,'EX') ds_existe_transp, 
	cd_estabelecimento, 
	obter_empresa_estab(cd_estabelecimento) cd_empresa, 
	substr(CASE WHEN coalesce(nr_seq_mensalidade::text, '') = '' THEN  				coalesce(CASE WHEN coalesce(cd_cgc::text, '') = '' THEN  CASE WHEN coalesce(nfse_obter_compl_pf(cd_pessoa_fisica,'M')::text, '') = '' THEN obter_dados_pf_pj(cd_pessoa_fisica, null, 'M')  ELSE nfse_obter_compl_pf(cd_pessoa_fisica,'M') END   ELSE obter_dados_pf_pj_estab(cd_estabelecimento, null, cd_cgc, 'M') END ,'')  ELSE coalesce(nfseops_obter_pf_pj_estab(cd_estabelecimento,cd_pessoa_fisica, cd_cgc, nr_seq_mensalidade,'M'),'') END ,1,255) 
from 	nota_fiscal a 
where 	a.nr_sequencia = nr_seq_nota_fiscal_p 
and	((substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP'),1,15) is null) 
or (substr(Elimina_Caracteres_Especiais(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'T')), 1, 8) is null) 
or (coalesce(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'DDT')::text, '') = '')  
or (coalesce(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CDM')::text, '') = '') 
or (length(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP')) > 8) 
or (coalesce(obter_dados_pf(cd_pessoa_fisica, 'CPF')::text, '') = '') 
or (coalesce(obter_compl_pf(cd_pessoa_fisica,3,'C')::text, '') = ''));
			
 

BEGIN 
 
select	count(*) 
into STRICT	qt_registro_regra_w 
from	regra_consistencia_nfe;
 
open C01;
loop 
fetch C01 into 
	cd_pessoa_fisica_w, 
	cd_cgc_w, 
	nr_sequencia_w, 
	nr_cep_tomador_w, 
	nr_ddd_tomador_w, 
	nr_telefone_w, 
	cd_mun_w, 
	nr_cpf_w, 
	nr_cpf_resp_w, 
	cd_operacao_nf_w, 
	ds_existe_transp_w, 
	cd_estabelecimento_w, 
	cd_empresa_w, 
	ds_email_tomador_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
 
if (qt_registro_regra_w > 0) then 
	begin 
 
	select	CASE WHEN ie_nf_eletronica='V' THEN 1 WHEN ie_nf_eletronica='S' THEN 2  ELSE 0 END  
	into STRICT	ie_tipo_nota_w 
	from	operacao_nota 
	where	cd_operacao_nf = cd_operacao_nf_w;		
	 
	if (coalesce(nr_cep_tomador_w::text, '') = '') and (nfe_obter_se_consiste_campo(3,ie_tipo_nota_w,cd_estabelecimento_w,cd_empresa_w) = 'S') then 
		ds_retorno_w := 'S';
	end if;
 
	if (coalesce(nr_DDD_Tomador_w::text, '') = '') and (nfe_obter_se_consiste_campo(4,ie_tipo_nota_w,cd_estabelecimento_w,cd_empresa_w) = 'S') then 
		ds_retorno_w := 'S';
	end if;
 
	if (coalesce(nr_Telefone_w::text, '') = '') and (nfe_obter_se_consiste_campo(5,ie_tipo_nota_w,cd_estabelecimento_w,cd_empresa_w) = 'S') then 
		ds_retorno_w := 'S';
	end if;
	 
	if (coalesce(cd_MUN_w::text, '') = '') and (nfe_obter_se_consiste_campo(6,ie_tipo_nota_w,cd_estabelecimento_w,cd_empresa_w) = 'S') then 
		ds_retorno_w := 'S';
	end if;
 
	if (length(nr_cep_tomador_w) > 8) and (nfe_obter_se_consiste_campo(9,ie_tipo_nota_w,cd_estabelecimento_w,cd_empresa_w) = 'S') then 
		ds_retorno_w := 'S';
	end if;
	 
	if (coalesce(nr_cpf_w::text, '') = '') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and (nfe_obter_se_consiste_campo(12,ie_tipo_nota_w,cd_estabelecimento_w,cd_empresa_w) = 'S') then 
		ds_retorno_w := 'S';
	end if;	
	 
    if (ds_existe_transp_w = 'N') and (nfe_obter_se_consiste_campo(13,ie_tipo_nota_w,cd_estabelecimento_w,cd_empresa_w) = 'S') then 
		ds_retorno_w := 'S';
	end if;		
	 
	if (coalesce(nr_cpf_resp_w::text, '') = '') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and (nfe_obter_se_consiste_campo(15,ie_tipo_nota_w,cd_estabelecimento_w,cd_empresa_w) = 'S') then 
		ds_retorno_w := 'S';
	end if;		
	 
	if	((coalesce(nr_cpf_resp_w::text, '') = '') and (coalesce(nr_cpf_w::text, '') = '')) and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and (nfe_obter_se_consiste_campo(15,ie_tipo_nota_w,cd_estabelecimento_w,cd_empresa_w) = 'S') then 
		ds_retorno_w := 'S';
	end if;			
 
	if (ds_email_tomador_w IS NOT NULL AND ds_email_tomador_w::text <> '') and (nfe_obter_se_consiste_campo(26,ie_tipo_nota_w,cd_estabelecimento_w,cd_empresa_w) = 'S') then 
		ds_retorno_w := 'S';
	end if;	
	 
	 
	end;
else 
	begin 
	if (coalesce(nr_cep_tomador_w::text, '') = '') then 
		ds_retorno_w := 'S';
	end if;
 
	if (coalesce(nr_DDD_Tomador_w::text, '') = '') then 
		ds_retorno_w := 'S';
	end if;
 
	if (coalesce(nr_Telefone_w::text, '') = '') then 
		ds_retorno_w := 'S';
	end if;
	 
	if (coalesce(cd_MUN_w::text, '') = '') then 
		ds_retorno_w := 'S';
	end if;
 
	if (length(nr_cep_tomador_w) > 8) then 
		ds_retorno_w := 'S';
	end if;
 
	if (coalesce(nr_cpf_w::text, '') = '') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then 
		ds_retorno_w := 'S';
	end if;		
	 
	if (coalesce(nr_cpf_resp_w::text, '') = '') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then 
		ds_retorno_w := 'S';
	end if;			
	 
	if	((coalesce(nr_cpf_resp_w::text, '') = '') and (coalesce(nr_cpf_w::text, '') = '')) and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then 
		ds_retorno_w := 'S';
	end if;	
 
	if (ds_existe_transp_w = 'N') then 
		ds_retorno_w := 'S';
	end if;		
 
	end;
end if;
 
end loop;
close C01;
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_inconsistencias_nfse (nr_seq_nota_fiscal_p bigint) FROM PUBLIC;

