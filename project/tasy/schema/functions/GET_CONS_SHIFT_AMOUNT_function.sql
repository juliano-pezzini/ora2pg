-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION get_cons_shift_amount (cd_agenda_p bigint, dt_agenda_p timestamp, cd_tipo_agenda_p bigint) RETURNS bigint AS $body$
DECLARE

qt_amount_w				agenda_turno.nr_amount%type;
dt_agenda_trunc_w		timestamp;
hr_agenda_turnc_w       timestamp;
ie_feriado_w			varchar(0001)	:= 'N';
ie_dia_semana_w			smallint;
nr_seq_turno_w			bigint;
nr_minuto_intervalo_w	bigint;


BEGIN

dt_agenda_trunc_w := PKG_DATE_UTILS.start_of(dt_agenda_p,'dd');
hr_agenda_turnc_w := PKG_DATE_UTILS.start_of(dt_agenda_p,'mi');

	if (cd_agenda_p IS NOT NULL AND cd_agenda_p::text <> '') and (dt_agenda_p IS NOT NULL AND dt_agenda_p::text <> '') then
		ie_dia_semana_w	:= obter_cod_dia_semana(dt_agenda_p);

		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_feriado_w
		from	feriado a,
				agenda b
		where 	a.cd_estabelecimento = b.cd_estabelecimento
		and		trunc(a.dt_feriado) = trunc(dt_agenda_p)
		and 	b.cd_agenda = cd_agenda_p;

		 if (cd_tipo_agenda_p = 3) then
            select	max(a.nr_sequencia),
                            coalesce(max(a.nr_amount), 1),
                            max(a.nr_minuto_intervalo)
                    into STRICT	nr_seq_turno_w,
                            qt_amount_w,
                            nr_minuto_intervalo_w
                    from	agenda_Turno a
                    where	a.cd_agenda = cd_agenda_p
                    and		((a.ie_dia_semana = ie_dia_semana_w) or ((a.ie_dia_semana = 9) and (ie_dia_semana_w not in (7,1))))
                    and		PKG_DATE_UTILS.get_datetime(dt_agenda_p,a.hr_inicial) < PKG_DATE_UTILS.get_datetime(dt_agenda_p,a.hr_final)
                    and		PKG_DATE_UTILS.get_datetime(dt_agenda_p,a.hr_inicial) <= dt_agenda_p and PKG_DATE_UTILS.get_datetime(dt_agenda_p,a.hr_final) >= dt_agenda_p +  a.nr_minuto_intervalo / 1440
                    and		((coalesce(a.dt_inicio_vigencia::text, '') = '') or (PKG_DATE_UTILS.start_of(a.dt_inicio_vigencia,'dd') <= dt_agenda_trunc_w))
                    and		((coalesce(a.dt_final_vigencia::text, '') = '') or (PKG_DATE_UTILS.start_of(a.dt_final_vigencia,'dd') >= dt_agenda_trunc_w))
                    and		coalesce(a.nr_minuto_intervalo,0) > 0
                    and		((((ie_feriado_w <> 'S') and (coalesce(a.ie_feriado,'X') <> 'F')) or (coalesce(ie_feriado,obter_se_agenda_feriado(cd_agenda_p)) = 'S')) or (a.ie_feriado = 'F' AND ie_feriado_w = 'S'))
                    and		obter_se_gerar_turno_agecons(a.dt_inicio_vigencia,a.ie_frequencia,dt_agenda_p) = 'S'
                    and     ((Obter_Semana_Dia_Agecons(dt_agenda_p,a.ie_dia_semana) = coalesce(a.ie_semana,0)) or (coalesce(a.ie_semana,0) = 0));
        else
            select	max(a.nr_sequencia),
                            coalesce(max(a.nr_amount), 1),
                            max(a.nr_minuto_intervalo)
                    into STRICT	nr_seq_turno_w,
                            qt_amount_w,
                            nr_minuto_intervalo_w
                    from	agenda_horario a
                    where	a.cd_agenda = cd_agenda_p
                    and		((a.dt_dia_semana = ie_dia_semana_w) or ((a.dt_dia_semana = 9) and (ie_dia_semana_w not in (7,1))))
                    and		PKG_DATE_UTILS.get_datetime(dt_agenda_p,a.hr_inicial) < PKG_DATE_UTILS.get_datetime(dt_agenda_p,a.hr_final)
                    and		PKG_DATE_UTILS.get_datetime(dt_agenda_p,a.hr_inicial) <= dt_agenda_p and PKG_DATE_UTILS.get_datetime(dt_agenda_p,a.hr_final) >= dt_agenda_p +  a.nr_minuto_intervalo / 1440
                    and		((coalesce(a.hr_inicial_intervalo::text, '') = '') or (PKG_DATE_UTILS.get_datetime(dt_agenda_p, PKG_DATE_UTILS.start_of(hr_inicial_intervalo,'mi')) <= hr_agenda_turnc_w))
                    and		((coalesce(a.hr_final_intervalo::text, '') = '') or (PKG_DATE_UTILS.get_datetime(dt_agenda_p, PKG_DATE_UTILS.start_of(hr_final_intervalo,'mi')) >= hr_agenda_turnc_w))
                    and		coalesce(a.nr_minuto_intervalo,0) > 0
                    and		((((ie_feriado_w <> 'S') and (coalesce(a.ie_feriado,'X') <> 'F')) or (coalesce(ie_feriado,obter_se_agenda_feriado(cd_agenda_p)) = 'S')) or (a.ie_feriado = 'F' AND ie_feriado_w = 'S'))
                    and		obter_se_gerar_turno_agecons(a.dt_inicio_vigencia,a.ie_frequencia,dt_agenda_p) = 'S'
                    and     ((Obter_Semana_Dia_Agecons(dt_agenda_p,a.dt_dia_semana) = coalesce(a.ie_semana,0)) or (coalesce(a.ie_semana,0) = 0));
        end if;

		if (nr_seq_turno_w IS NOT NULL AND nr_seq_turno_w::text <> '') then
			select	coalesce(max(a.qt_permissao), qt_amount_w)
			into STRICT	qt_amount_w
			from	agenda_turno_rules a
			where   ((cd_tipo_agenda_p = 3 and a.nr_seq_age_turno = nr_seq_turno_w)
                               or (cd_tipo_agenda_p != 3 and a.nr_seq_horario = nr_seq_turno_w))
			and     dt_agenda_p >= PKG_DATE_UTILS.get_datetime(dt_agenda_p, a.hr_inicial) and (dt_agenda_p + nr_minuto_intervalo_w / 1440) <= PKG_DATE_UTILS.get_datetime(dt_agenda_p, a.hr_final)
			and     coalesce(a.qt_permissao, 0) > 0
			and     ((coalesce(a.dt_inicio_vigencia::text, '') = '') or (PKG_DATE_UTILS.start_of(a.dt_inicio_vigencia,'dd') <= dt_agenda_trunc_w))
			and     ((coalesce(a.dt_final_vigencia::text, '') = '') or (PKG_DATE_UTILS.start_of(a.dt_final_vigencia,'dd') >= dt_agenda_trunc_w));
		end if;

	end if;
	
	if (coalesce(qt_amount_w, 0) = 0) then
        qt_amount_w := 1;
    end if;

	return	qt_amount_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION get_cons_shift_amount (cd_agenda_p bigint, dt_agenda_p timestamp, cd_tipo_agenda_p bigint) FROM PUBLIC;

