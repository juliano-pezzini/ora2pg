-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION sip_obter_total_registros ( nr_seq_lote_sip_p bigint) RETURNS bigint AS $body$
DECLARE

 
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
qt_retorno_w			bigint	:= 0;

qt_despesa_assist_w		bigint	:= 0;
qt_amb_item_despesa_w		bigint	:= 0;
qt_int_uma_diaria_w		bigint	:= 0;
qt_int_diarias_w		bigint	:= 0;
qt_amb_matmed_w			bigint	:= 0;
qt_int_matmed_uma_diaria_w	bigint	:= 0;
qt_int_matmed_diarias_w		bigint	:= 0;
qt_coparticipacao_w		bigint	:= 0;
qt_grupo_beneficiario_w		bigint	:= 0;
qt_amb_anexo_iii_w		bigint	:= 0;
qt_int_anexo_iii_w		bigint	:= 0;
qt_int_proc_anexo_iii_w		bigint	:= 0;
qt_atencao_saude_w		bigint	:= 0;


BEGIN 
 
begin 
select	dt_periodo_inicial, 
	coalesce(dt_periodo_final, clock_timestamp()) 
into STRICT	dt_periodo_inicial_w, 
	dt_periodo_final_w 
from	pls_lote_sip 
where	nr_sequencia	= nr_seq_lote_sip_p;	
exception 
	when others then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort( 266994, 'NR_SEQ_LOTE_SIP='||nr_seq_lote_sip_p);
end;
 
begin /* SIP_CALCULAR_DESPESA_ASSIST */
 
	select	count(*) 
	into STRICT	qt_despesa_assist_w 
	from 	ctb_mes_ref 		d, 
		ctb_balancete_v 	c, 
		sip_conta_despesa	b, 
		sip_item_despesa 	a 
	where	a.nr_sequencia 	= b.nr_seq_item_despesa 
	and 	b.cd_conta_contabil	= c.cd_conta_contabil 
	and 	c.nr_seq_mes_ref 	= d.nr_sequencia 
	and 	c.ie_normal_encerramento = 'N' 
	and 	d.dt_referencia between dt_periodo_inicial_w and dt_periodo_final_w;
end; /* SIP_CALCULAR_DESPESA_ASSIST */
 
begin /* SIP_GERAR_ITEM_DESPESA */
 
	select	count(*) 
	into STRICT	qt_amb_item_despesa_w 
	from (SELECT	1 
		from	pls_conta_proc		c, 
			pls_conta		b, 
			pls_protocolo_conta	a 
		where	a.nr_sequencia	= b.nr_seq_protocolo 
		and	b.nr_sequencia	= c.nr_seq_conta 
		and	a.ie_status	= '3' 
		and	a.dt_mes_competencia between dt_periodo_inicial_w and dt_periodo_final_w 
		and	pls_obter_se_internado(b.nr_sequencia, 'C')	= 'N' 
		and	(c.cd_conta_deb IS NOT NULL AND c.cd_conta_deb::text <> '') 
		and	coalesce(b.ie_tipo_segurado,'B')	= 'B' 
		group by 
			ie_tipo_beneficiario, 
			ie_tipo_plano, 
			cd_procedimento, 
			ie_origem_proced) alias4;
	select	count(*) 
	into STRICT	qt_int_uma_diaria_w 
	from (SELECT	1 
		from	pls_conta_proc		c, 
			pls_conta		b, 
			pls_protocolo_conta	a 
		where	a.nr_sequencia	= b.nr_seq_protocolo 
		and	b.nr_sequencia	= c.nr_seq_conta 
		and	a.ie_status	= '3' 
		and	a.dt_mes_competencia between dt_periodo_inicial_w and dt_periodo_final_w 
		and	coalesce(b.qt_diarias_sip,2)	= 1 
		and	pls_obter_se_internado(b.nr_sequencia, 'C')	= 'S' 
		and	(c.cd_conta_deb IS NOT NULL AND c.cd_conta_deb::text <> '') 
		and	coalesce(b.ie_tipo_segurado,'B')	= 'B' 
		group by 
			ie_tipo_beneficiario, 
			ie_tipo_plano) alias5;
	select	count(*) 
	into STRICT	qt_int_diarias_w 
	from (SELECT	1 
		from	pls_conta_proc		c, 
			pls_conta		b, 
			pls_protocolo_conta	a 
		where	a.nr_sequencia	= b.nr_seq_protocolo 
		and	b.nr_sequencia	= c.nr_seq_conta 
		and	a.ie_status	= '3' 
		and	a.dt_mes_competencia between dt_periodo_inicial_w and dt_periodo_final_w 
		and	coalesce(b.qt_diarias_sip,2)	<> 1 
		and	pls_obter_se_internado(b.nr_sequencia, 'C')	= 'S' 
		and	(c.cd_conta_deb IS NOT NULL AND c.cd_conta_deb::text <> '') 
		and	coalesce(b.ie_tipo_segurado,'B')	= 'B' 
		group by 
			ie_tipo_beneficiario, 
			ie_tipo_plano) alias5;
	select	count(*) 
	into STRICT	qt_amb_matmed_w 
	from (SELECT	1 
		from	pls_conta_mat		c, 
			pls_conta		b, 
			pls_protocolo_conta	a 
		where	a.nr_sequencia	= b.nr_seq_protocolo 
		and	b.nr_sequencia	= c.nr_seq_conta 
		and	a.ie_status	= '3' 
		and	a.dt_mes_competencia between dt_periodo_inicial_w and dt_periodo_final_w 
		and	pls_obter_se_internado(b.nr_sequencia, 'C')	= 'N' 
		and	c.nr_seq_grupo_ans	= 6 
		and	(c.cd_conta_deb IS NOT NULL AND c.cd_conta_deb::text <> '') 
		and	coalesce(b.ie_tipo_segurado,'B')	= 'B' 
		group by 
			ie_tipo_beneficiario, 
			ie_tipo_plano) alias4;
	select	count(*) 
	into STRICT	qt_int_matmed_uma_diaria_w 
	from (SELECT	1 
		from	pls_conta_mat		c, 
			pls_conta		b, 
			pls_protocolo_conta	a 
		where	a.nr_sequencia	= b.nr_seq_protocolo 
		and	b.nr_sequencia	= c.nr_seq_conta 
		and	a.ie_status	= '3' 
		and	a.dt_mes_competencia between dt_periodo_inicial_w and dt_periodo_final_w 
		and	coalesce(b.qt_diarias_sip,2)	= 1 
		and	pls_obter_se_internado(b.nr_sequencia, 'C')	= 'S' 
		and	c.nr_seq_grupo_ans in (10,11) 
		and	(c.cd_conta_deb IS NOT NULL AND c.cd_conta_deb::text <> '') 
		and	coalesce(b.ie_tipo_segurado,'B')	= 'B' 
		group by 
			ie_tipo_beneficiario, 
			ie_tipo_plano) alias6;
	select	count(*) 
	into STRICT	qt_int_matmed_diarias_w 
	from (SELECT	1 
		from	pls_conta_mat		c, 
			pls_conta		b, 
			pls_protocolo_conta	a 
		where	a.nr_sequencia	= b.nr_seq_protocolo 
		and	b.nr_sequencia	= c.nr_seq_conta 
		and	a.ie_status	= '3' 
		and	a.dt_mes_competencia between dt_periodo_inicial_w and dt_periodo_final_w 
		and	coalesce(b.qt_diarias_sip,2)	<> 1 
		and	pls_obter_se_internado(b.nr_sequencia, 'C')	= 'S' 
		and	c.nr_seq_grupo_ans in (10,11) 
		and	(c.cd_conta_deb IS NOT NULL AND c.cd_conta_deb::text <> '') 
		and	coalesce(b.ie_tipo_segurado,'B')	= 'B' 
		group by 
			ie_tipo_beneficiario, 
			ie_tipo_plano) alias6;
end; /* SIP_GERAR_ITEM_DESPESA */
 
begin /* SIP_CALCULAR_COPARTICIPACAO */
 
	select	count(*) 
	into STRICT	qt_coparticipacao_w 
	from	sip_copartic_conta_contab	b, 
		sip_conta_copartic		a 
	where	a.nr_sequencia		= b.nr_seq_conta_copartic 
	and	a.ie_tipo_conta		= 'M';
end; /* SIP_CALCULAR_COPARTICIPACAO */
 
begin /* SIP_GERAR_GRUPO_BENEFICIARIO */
 
	select	count(*) 
	into STRICT	qt_grupo_beneficiario_w 
	from 	valor_dominio 
	where 	cd_dominio = 1923;
end; /* SIP_GERAR_GRUPO_BENEFICIARIO */
 
begin /* SIP_GERAR_ANEXO_III */
 
	select	count(*) 
	into STRICT	qt_amb_anexo_iii_w 
	from (SELECT	1 
		from	pls_conta_proc		c, 
			pls_conta		b, 
			pls_protocolo_conta	a 
		where	a.nr_sequencia		= b.nr_seq_protocolo 
		and	b.nr_sequencia		= c.nr_seq_conta 
		and	a.ie_status	= '3' 
		and	a.dt_mes_competencia between dt_periodo_inicial_w and dt_periodo_final_w 
		and	pls_obter_se_internado(b.nr_sequencia, 'C')	= 'N' 
		and	(c.cd_conta_deb IS NOT NULL AND c.cd_conta_deb::text <> '') 
		and	coalesce(b.ie_tipo_segurado,'B')	= 'B' 
		group by 
			b.nr_seq_clinica, 
			sip_obter_cbo_anexo_iii(c.nr_sequencia, 'C'), 
			c.cd_procedimento, 
			c.ie_origem_proced) alias5;
	select	count(*) 
	into STRICT	qt_int_anexo_iii_w 
	from (SELECT	1 
		from	pls_beneficiario_internado	c, 
			pls_conta			b, 
			pls_protocolo_conta		a 
		where	a.nr_sequencia		= b.nr_seq_protocolo 
		and	b.nr_sequencia		= c.nr_seq_conta 
		and	a.ie_status	= '3' 
		and	c.dt_mesref_protocolo between dt_periodo_inicial_w and dt_periodo_final_w 
		and	a.ie_situacao in ('D','T') 
		and	(c.nr_seq_segurado IS NOT NULL AND c.nr_seq_segurado::text <> '') 
		and	coalesce(b.ie_tipo_segurado,'B')	= 'B' 
		group by 
			c.nr_seq_clinica) alias4;
	select	count(*) 
	into STRICT	qt_int_proc_anexo_iii_w 
	from (SELECT	1 
		from	pls_conta_proc		c, 
			pls_conta		b, 
			pls_protocolo_conta	a 
		where	a.nr_sequencia		= b.nr_seq_protocolo 
		and	b.nr_sequencia		= c.nr_seq_conta 
		and	a.ie_status	= '3' 
		and	a.dt_mes_competencia between dt_periodo_inicial_w and dt_periodo_final_w 
		and	a.ie_situacao in ('D','T') 
		and	(b.nr_seq_segurado IS NOT NULL AND b.nr_seq_segurado::text <> '') 
		and	pls_obter_se_internado(b.nr_sequencia, 'C')	= 'S' 
		and	c.qt_procedimento	> 0 
		and	coalesce(b.ie_tipo_segurado,'B')	= 'B' 
		group by 
			b.nr_seq_clinica, 
			sip_obter_cbo_anexo_iii(c.nr_sequencia, 'C'), 
			c.cd_procedimento, 
			c.ie_origem_proced) alias6;
end; /* SIP_GERAR_ANEXO_III */
 
begin /* SIP_GERAR_ATENCAO_SAUDE */
 
	select	count(*) 
	into STRICT	qt_atencao_saude_w 
	from	sip_regra;
end; /* SIP_GERAR_ATENCAO_SAUDE */
 
qt_retorno_w	:= qt_despesa_assist_w + qt_amb_item_despesa_w + qt_int_uma_diaria_w + 
			qt_int_diarias_w + qt_amb_matmed_w + qt_int_matmed_uma_diaria_w + 
			qt_int_matmed_diarias_w + qt_coparticipacao_w + qt_grupo_beneficiario_w + 
			qt_amb_anexo_iii_w + qt_int_anexo_iii_w + qt_int_proc_anexo_iii_w + qt_atencao_saude_w;
 
return	qt_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION sip_obter_total_registros ( nr_seq_lote_sip_p bigint) FROM PUBLIC;

