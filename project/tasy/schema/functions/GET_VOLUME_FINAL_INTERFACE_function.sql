-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION get_volume_final_interface (nr_sequencia_interface_p bigint) RETURNS bigint AS $body$
DECLARE


qt_volume_w	                 bomba_infusao_transicao.qt_volume%type;
volume_interface_w	         bomba_infusao_interface.qt_volume%type;
qt_volume_inicial_w	         bomba_infusao_interface.qt_volume_inicial%type;
qt_bolus_w	                 bomba_infusao_interface.qt_bolus%type;
qt_ult_volume_w	             bomba_infusao_interface.qt_ult_volume%type;
qt_volume_final_w	         bomba_infusao_interface.qt_volume%type := 0;

BEGIN

    BEGIN
         SELECT bomba.qt_volume
           INTO STRICT qt_volume_w
           FROM (SELECT bit.qt_volume
                   FROM bomba_infusao_transicao bit
                  INNER JOIN bomba_infusao bombas
                     ON bit.nr_seq_bomba_interface = bombas.nr_seq_bomba_interface
                  WHERE bit.nr_seq_bomba_interface = nr_sequencia_interface_p
                    AND bit.ie_status IN ('DS', 'ST', 'IS')
                    AND (bit.qt_volume IS NOT NULL AND bit.qt_volume::text <> '')
                    AND bit.dt_transicao > bombas.dt_bomba_infusao + (1/1440*1)
                  ORDER BY bit.nr_sequencia DESC) bomba LIMIT 1;
    EXCEPTION
        WHEN no_data_found THEN qt_volume_w := 0;
    END;

    BEGIN
        SELECT qt_volume, qt_volume_inicial, qt_bolus, qt_ult_volume
          INTO STRICT volume_interface_w, qt_volume_inicial_w, qt_bolus_w, qt_ult_volume_w
          FROM bomba_infusao_interface
         WHERE nr_sequencia = nr_sequencia_interface_p;
    END;

    IF qt_volume_w = 0 THEN
        qt_volume_w := volume_interface_w;
    END IF;

    qt_volume_final_w := coalesce(qt_volume_w, 0) - coalesce(qt_volume_inicial_w, 0) + coalesce(qt_bolus_w, 0) + coalesce(qt_ult_volume_w, 0);

    IF qt_volume_final_w < 0 THEN
        qt_volume_final_w := qt_volume_w;
    END IF;

RETURN	qt_volume_final_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION get_volume_final_interface (nr_sequencia_interface_p bigint) FROM PUBLIC;

