-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_pac_agendamento ( nr_seq_agenda_p bigint, cd_pessoa_fisica_p text, cd_agenda_p bigint, dt_agenda_p timestamp, nr_seq_pend_agenda_p bigint default 0) RETURNS varchar AS $body$
DECLARE


qt_agendado_agecon_w		bigint;
qt_agendado_agepac_w		bigint;
qt_agendado_agequi_w		bigint;
cd_tipo_agenda_w		agenda.cd_tipo_agenda%type;
ie_consistir_duracao_pac_w	parametro_agenda.ie_consistir_duracao_paciente%type;
nr_minuto_duracao_w		agenda_paciente.nr_minuto_duracao%type;
ds_retorno_w			varchar(1)	:= 'N';


BEGIN

if (cd_pessoa_Fisica_p IS NOT NULL AND cd_pessoa_Fisica_p::text <> '') and (cd_agenda_p IS NOT NULL AND cd_agenda_p::text <> '') and (dt_Agenda_p IS NOT NULL AND dt_Agenda_p::text <> '') then
	
	select 	coalesce(max(ie_consistir_duracao_paciente),'N')
	into STRICT	ie_consistir_duracao_pac_w
	from	parametro_agenda
	where	cd_estabelecimento = obter_estabelecimento_ativo;
	
	if (ie_consistir_duracao_pac_w = 'S') then
		select	cd_tipo_agenda
		into STRICT	cd_tipo_agenda_w
		from	agenda
		where	cd_agenda = cd_agenda_p;
		
		case	when cd_tipo_agenda_w in (1,2) then 	-- Cirugia, Exames
				select	coalesce(max(nr_minuto_duracao), 0)
				into STRICT	nr_minuto_duracao_w
				from	agenda_paciente
				where	nr_sequencia = nr_seq_agenda_p;
			when cd_tipo_agenda_w in (3,4,5) then	-- Consultas por medico, Consulta servico medico, Agenda de servicos
				select	coalesce(max(nr_minuto_duracao), 0)
				into STRICT	nr_minuto_duracao_w
				from	agenda_consulta
				where	nr_sequencia = nr_seq_agenda_p;
				
				if (cd_tipo_agenda_w = 5) and (nr_minuto_duracao_w = 0) then
					select	pkg_date_utils.get_diffdate(hr_inicial, hr_final, 'MINUTE')
					into STRICT	nr_minuto_duracao_w
					from	agenda_turno
					where	nr_sequencia =	(SELECT	max(x.nr_seq_turno)
								from	agenda_consulta x
								where	x.nr_sequencia = coalesce(nr_seq_agenda_p,0));
				end if;				
			when cd_tipo_agenda_w = 6 then		-- Medicina Preventiva
					null;
			else 					-- Agenda de quimioterapia
				select	coalesce(max(nr_minuto_duracao), 0)
				into STRICT	nr_minuto_duracao_w
				from	agenda_quimio
				where	nr_sequencia = nr_seq_agenda_p;
		end case;
		
		select	count(*)
		into STRICT	qt_agendado_agepac_w
		from	agenda_paciente b,
			agenda a
		where	b.cd_agenda = a.cd_agenda
		and	a.ie_situacao = 'A'
		and	b.nr_sequencia <> coalesce(nr_seq_agenda_p,0)
		and	b.cd_agenda <> cd_agenda_p
		and	b.cd_pessoa_fisica = cd_pessoa_fisica_p
		and	((b.hr_inicio between dt_agenda_p and dt_agenda_p + (nr_minuto_duracao_w - 1)/1440)
				or (dt_agenda_p between b.hr_inicio and b.hr_inicio + (nr_minuto_duracao - 1)/1440))
		and	b.ie_status_agenda not in ('C','LF','F','I','B');
	
		select	count(*)
		into STRICT	qt_agendado_agecon_w
		from	agenda_consulta b,
			agenda a
		where	b.cd_agenda = a.cd_agenda
		and	a.ie_situacao = 'A'
		and	b.nr_sequencia <> coalesce(nr_seq_agenda_p,0)
		and	b.cd_agenda <> cd_agenda_p
		and	b.cd_pessoa_fisica = cd_pessoa_fisica_p
		and	((b.dt_agenda between dt_agenda_p and dt_agenda_p + (nr_minuto_duracao_w - 1)/1440)
				or (dt_agenda_p between b.dt_agenda and b.dt_agenda + (b.nr_minuto_duracao - 1)/1440))
		and	b.ie_status_agenda not in ('C','LF','F','I','B');
		
		if (qt_agendado_agecon_w = 0) then
			select	count(*)
			into STRICT	qt_agendado_agecon_w
			from	agenda_consulta a,
				agenda b
			where	a.nr_sequencia <> coalesce(nr_seq_agenda_p,0)			
			and	a.cd_agenda <> cd_agenda_p
			and	a.cd_pessoa_fisica = cd_pessoa_fisica_p
			and	a.ie_status_agenda not in ('C','LF','F','I','B')
			and	a.cd_agenda = b.cd_agenda
			and	b.ie_situacao = 'A'
			and 	b.cd_tipo_agenda = 5
			and	(dt_agenda_p between a.dt_agenda and a.dt_agenda + (
					(SELECT	coalesce(max(pkg_date_utils.get_diffdate(TO_DATE(TO_CHAR(a.dt_agenda, 'dd/mm/yyyy')||' '||TO_CHAR(hr_inicial,'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss'),	
																TO_DATE(TO_CHAR(a.dt_agenda, 'dd/mm/yyyy')||' '||TO_CHAR(hr_final,'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss'), 'MINUTE')),0)
					from	agenda_turno
					where	nr_sequencia =	a.nr_seq_turno)
					- 1)/1440);
		end if;		
		
		select	count(*)
		into STRICT	qt_agendado_agequi_w
		from	agenda_quimio
		where	((coalesce(nr_seq_agenda_p, 0) > 0
		and 	nr_sequencia <> nr_seq_agenda_p)
		or (coalesce(nr_seq_pend_agenda_p, 0) > 0
		and 	coalesce(nr_seq_pend_agenda,0) <> nr_seq_pend_agenda_p))
		and	cd_pessoa_fisica = cd_pessoa_fisica_p
		and	((dt_agenda between dt_agenda_p and dt_agenda_p + (nr_minuto_duracao_w - 1)/1440) 
				or (dt_agenda_p between dt_agenda and dt_agenda + (nr_minuto_duracao - 1)/1440))
		and	ie_status_agenda not in ('C','LF','F','I','B');
	else
		select	count(*)
		into STRICT	qt_agendado_agepac_w
		from	agenda_paciente b,
			agenda a
		where	b.cd_agenda = a.cd_agenda
		and	a.ie_situacao = 'A'
		and	b.nr_sequencia		<> coalesce(nr_seq_agenda_p,0)
		and	b.cd_agenda		<> cd_agenda_p
		and	b.cd_pessoa_fisica	= cd_pessoa_fisica_p
		and	b.hr_inicio		= dt_agenda_p
		and	b.ie_status_agenda not in ('C','B');
		
		select	count(*)
		into STRICT	qt_agendado_agecon_w
		from	agenda_consulta b,
			agenda a
		where	b.cd_agenda = a.cd_agenda
		and	a.ie_situacao = 'A'		
		and	b.nr_sequencia		<> coalesce(nr_seq_agenda_p,0)
		and	b.cd_agenda		<> cd_agenda_p
		and	b.cd_pessoa_fisica 	= cd_pessoa_fisica_p
		and	b.dt_agenda		= dt_agenda_p
		and	b.ie_status_agenda not in ('C','B');
		
		SELECT	COUNT(*)
		INTO STRICT	qt_agendado_agequi_w
		FROM	agenda_quimio
		WHERE	((coalesce(nr_seq_agenda_p, 0) > 0
		and 	nr_sequencia		<> nr_seq_agenda_p)
		or (coalesce(nr_seq_pend_agenda_p, 0) > 0
		AND 	coalesce(nr_seq_pend_agenda,0) <> nr_seq_pend_agenda_p))
		AND	cd_pessoa_fisica 	= cd_pessoa_fisica_p
		AND	dt_agenda		= dt_agenda_p
		AND	ie_status_agenda NOT IN ('C','B');
	end if;
	
	if (qt_agendado_agepac_w > 0) or (qt_agendado_agecon_w > 0) or (qt_agendado_agequi_w > 0) then
		ds_retorno_w	:= 'S';
	end if;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_pac_agendamento ( nr_seq_agenda_p bigint, cd_pessoa_fisica_p text, cd_agenda_p bigint, dt_agenda_p timestamp, nr_seq_pend_agenda_p bigint default 0) FROM PUBLIC;

