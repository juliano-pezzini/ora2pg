-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_valor_sobra_gedipa ( nr_ordem_p adep_processo_frac.nr_sequencia%type, classe_medic_p funcao_param_usuario.vl_parametro%type) RETURNS varchar AS $body$
DECLARE


ds_retorno_w				varchar(1);
cd_material_w				prescr_mat_hor.cd_material%type;
qt_dose_w					prescr_mat_hor.qt_dose%type;
cd_unidade_medida_dose_w	prescr_mat_hor.cd_unidade_medida_dose%type;
qt_dispensar_hor_w			prescr_mat_hor.qt_dispensar_hor%type;
cd_unidade_medida_w			prescr_mat_hor.cd_unidade_medida%type;
cd_classe_material_w		material.cd_classe_material%type;
cd_unidade_medida_mg_c		varchar(2) := 'mg';

C01 CURSOR FOR
SELECT 	cd_material,
		qt_dose,
		cd_unidade_medida_dose, 
		qt_dispensar_hor, 
		cd_unidade_medida
	from prescr_mat_hor
	where nr_seq_etiqueta = nr_ordem_p
	and ie_agrupador = CASE WHEN obter_tipo_processo_adep(nr_seq_processo)='M' THEN  1 WHEN obter_tipo_processo_adep(nr_seq_processo)='S' THEN  4  ELSE 0 END;
  classe_material_param RECORD;

BEGIN
ds_retorno_w := 'N';

if (nr_ordem_p IS NOT NULL AND nr_ordem_p::text <> '' AND classe_medic_p IS NOT NULL AND classe_medic_p::text <> '') then
	for	c01_w in c01 loop
	begin
	cd_material_w := c01_w.cd_material;
	qt_dose_w := c01_w.qt_dose;
	cd_unidade_medida_dose_w := c01_w.cd_unidade_medida_dose;
	qt_dispensar_hor_w := c01_w.qt_dispensar_hor;
	cd_unidade_medida_w := c01_w.cd_unidade_medida;

			if (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
				cd_classe_material_w := obter_classe_material(cd_material_w);
				for classe_material_param in (SELECT x.cd_registro from table(lista_pck.obter_lista_char(classe_medic_p)) x) loop
					begin
					if (cd_classe_material_w = classe_material_param.cd_registro) then
						if (cd_unidade_medida_dose_w <> cd_unidade_medida_mg_c) then
							qt_dose_w := coalesce(obter_dose_convertida(cd_material_w, qt_dose_w, cd_unidade_medida_dose_w , cd_unidade_medida_mg_c),0);
						end if;
						if (cd_unidade_medida_w <> cd_unidade_medida_mg_c) then
							qt_dispensar_hor_w := coalesce(obter_dose_convertida(cd_material_w, qt_dispensar_hor_w, cd_unidade_medida_w , cd_unidade_medida_mg_c),0);
						end if;
						if (qt_dose_w < qt_dispensar_hor_w ) then
							ds_retorno_w := 'S';
							exit;
						end if;
					end if;
					end;
				end loop;
			end if;
		end;
	end loop;
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_valor_sobra_gedipa ( nr_ordem_p adep_processo_frac.nr_sequencia%type, classe_medic_p funcao_param_usuario.vl_parametro%type) FROM PUBLIC;

