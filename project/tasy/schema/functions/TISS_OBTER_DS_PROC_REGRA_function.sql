-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION tiss_obter_ds_proc_regra ( cd_proc_tabela_p procedimento_paciente.cd_procedimento%type, ds_procedimento_tabela_p text, ie_origem_proced_p procedimento_paciente.ie_origem_proced%type, ie_sadt_autor_sem_proc_p tiss_parametros_convenio.ie_sadt_autor_sem_proc%type, ie_desc_proc_interno_p tiss_parametros_convenio.ie_desc_proc_interno%type, ie_conversao_sadt_solic_p tiss_parametros_convenio.ie_conversao_sadt_solic%type, ie_lado_regra_p tiss_parametros_convenio.ie_lado_rep%type, ie_topo_regra_p tiss_parametros_convenio.ie_topo_rep%type, nr_prescr_item_autor_p procedimento_autorizado.nr_prescricao%type, nr_seq_prescr_item_autor_p procedimento_autorizado.nr_seq_prescricao%type ) RETURNS varchar AS $body$
DECLARE

				
ds_procedimento_w	varchar(255);
ie_lado_w		varchar(255);
ds_topografia_w		varchar(255);


BEGIN

	ds_procedimento_w := ds_procedimento_tabela_p;	
	
	if 	ie_desc_proc_interno_p = 'P' then
		ds_procedimento_w := substr(tiss_eliminar_caractere(obter_descricao_procedimento(cd_proc_tabela_p, ie_origem_proced_p)), 1, 60);
	end if;

	if 	ie_desc_proc_interno_p = 'N'
		and coalesce(ie_conversao_sadt_solic_p, 'S') = 'N' then
		ds_procedimento_w := substr(tiss_eliminar_caractere(obter_descricao_procedimento(cd_proc_tabela_p, ie_origem_proced_p)), 1, 60);
	end if;
	
	if (coalesce(ie_sadt_autor_sem_proc_p,'N') = 'S')
		and (coalesce(cd_proc_tabela_p::text, '') = '') then
		ds_procedimento_w := null;
	end if;	
	
	if	((coalesce(ie_lado_regra_p,'N') = 'S')
		or (coalesce(ie_topo_regra_p,'N') = 'S')) 
		and (nr_prescr_item_autor_p IS NOT NULL AND nr_prescr_item_autor_p::text <> '' AND nr_seq_prescr_item_autor_p IS NOT NULL AND nr_seq_prescr_item_autor_p::text <> '')	then
			
			select  substr(max(obter_valor_dominio(1372, ie_lado)),1,254) ds_lado,
				substr(max(Obter_desc_topografia_dor(nr_seq_topografia)),1,60) ds_topografia
			into STRICT	ie_lado_w,
				ds_topografia_w
			from	prescr_procedimento
			where	nr_prescricao	= nr_prescr_item_autor_p
			and	nr_sequencia	= nr_seq_prescr_item_autor_p;
			
			
			
			
			if (coalesce(ie_lado_regra_p,'N') = 'S')
				and (ie_lado_w IS NOT NULL AND ie_lado_w::text <> '') then
				ds_procedimento_w := ds_procedimento_w || ' - ' || ie_lado_w;
			end if;


			if (coalesce(ie_topo_regra_p,'N') = 'S')
				and (ds_topografia_w IS NOT NULL AND ds_topografia_w::text <> '') then
				ds_procedimento_w := ds_procedimento_w || ' - ' || ds_topografia_w;
			end if;
	end if;	
	
	
	return ds_procedimento_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION tiss_obter_ds_proc_regra ( cd_proc_tabela_p procedimento_paciente.cd_procedimento%type, ds_procedimento_tabela_p text, ie_origem_proced_p procedimento_paciente.ie_origem_proced%type, ie_sadt_autor_sem_proc_p tiss_parametros_convenio.ie_sadt_autor_sem_proc%type, ie_desc_proc_interno_p tiss_parametros_convenio.ie_desc_proc_interno%type, ie_conversao_sadt_solic_p tiss_parametros_convenio.ie_conversao_sadt_solic%type, ie_lado_regra_p tiss_parametros_convenio.ie_lado_rep%type, ie_topo_regra_p tiss_parametros_convenio.ie_topo_rep%type, nr_prescr_item_autor_p procedimento_autorizado.nr_prescricao%type, nr_seq_prescr_item_autor_p procedimento_autorizado.nr_seq_prescricao%type ) FROM PUBLIC;

