-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION fis_obter_se_intermediario (nr_sequencia_p bigint) RETURNS varchar AS $body$
DECLARE


vl_retorno_w			        varchar(1) := 'N';
qt_nf_protocolo_w		      bigint;
qt_nf_conta_paciente_w		bigint;
qt_convenio_nf_w		      bigint;
qt_lote_protocolo_nf_w		bigint;
ie_intermediario_w		    convenio.ie_intermediario%type;


BEGIN

select	count(1)
into STRICT	  qt_nf_protocolo_w
from	  nota_fiscal
where	  ((nr_seq_protocolo IS NOT NULL AND nr_seq_protocolo::text <> '')
or (nr_seq_lote_prot IS NOT NULL AND nr_seq_lote_prot::text <> ''))
and	    (cd_cgc IS NOT NULL AND cd_cgc::text <> '')
and	    nr_sequencia = nr_sequencia_p;

select	count(1)
into STRICT	  qt_nf_conta_paciente_w
from	  nota_fiscal
where	  (nr_interno_conta IS NOT NULL AND nr_interno_conta::text <> '')
and	    (cd_cgc IS NOT NULL AND cd_cgc::text <> '')
and	    nr_sequencia = nr_sequencia_p;

select count(1)
into STRICT   qt_lote_protocolo_nf_w
from   nota_fiscal n,
       lote_protocolo p
where  n.nr_sequencia = nr_sequencia_p
and    n.nr_seq_lote_prot = p.nr_sequencia
and    n.cd_estabelecimento = p.cd_estabelecimento
and    (n.nr_seq_lote_prot IS NOT NULL AND n.nr_seq_lote_prot::text <> '');
 

if (qt_nf_protocolo_w > 0) then
	
  select  max(intermediario)
  into STRICT    ie_intermediario_w
  from    (
    SELECT	coalesce(max(c.ie_intermediario),'N') intermediario
    from	  nota_fiscal a,
            protocolo_convenio b,
            convenio c
    where	  ((a.nr_seq_protocolo = b.nr_seq_protocolo) or (a.nr_seq_lote_prot = b.nr_seq_lote_protocolo))
    and	    b.cd_convenio = c.cd_convenio
    and	    a.nr_sequencia = nr_sequencia_p
    
union

    SELECT	coalesce(max(z.ie_intermediario),'N') intermediario
    from	  nota_fiscal x,
            protocolo_convenio y,
            parametro_nfs z
    where	  ((x.nr_seq_protocolo = y.nr_seq_protocolo) or (x.nr_seq_lote_prot = y.nr_seq_lote_protocolo))
    and	    y.cd_convenio = z.cd_convenio
    and     x.cd_estabelecimento = z.cd_estabelecimento
    and	    x.nr_sequencia = nr_sequencia_p
  ) alias12;
	
	vl_retorno_w := ie_intermediario_w;

elsif (qt_nf_conta_paciente_w > 0) then
	
  select  max(intermediario),
          max(qt_convenio)
  into STRICT    ie_intermediario_w,
          qt_convenio_nf_w
  from    (
    SELECT	coalesce(max(c.ie_intermediario),'N') intermediario,
            coalesce(max((SELECT count(1) from convenio x where x.cd_cgc = b.cd_cgc)),0) qt_convenio
    from	  conta_paciente a,
            nota_fiscal b,
            convenio c
    where	  a.nr_interno_conta = b.nr_interno_conta
    and	    b.nr_sequencia = nr_sequencia_p
    and	    (b.nr_interno_conta IS NOT NULL AND b.nr_interno_conta::text <> '')
    and	    a.cd_convenio_parametro = c.cd_convenio

union

    select	coalesce(max(p.ie_intermediario),'N') intermediario,
            coalesce(max((select count(1) from convenio y where y.cd_cgc = n.cd_cgc)),0) qt_convenio
    from	  conta_paciente ca,
            nota_fiscal n,
            parametro_nfs p
    where	  ca.nr_interno_conta = n.nr_interno_conta
    and	    n.nr_sequencia = nr_sequencia_p
    and	    (n.nr_interno_conta IS NOT NULL AND n.nr_interno_conta::text <> '')
    and	    ca.cd_convenio_parametro = p.cd_convenio
    and     n.cd_estabelecimento = p.cd_estabelecimento
  ) alias17;
	
	if	(ie_intermediario_w = 'S' AND qt_convenio_nf_w > 0) then
		vl_retorno_w := 'S';
	end if;

elsif (qt_lote_protocolo_nf_w > 0) then

  select  max(intermediario)
  into STRICT    ie_intermediario_w
  from (
    SELECT	coalesce(max(c.ie_intermediario),'N') intermediario
    from	  nota_fiscal a,
            lote_protocolo b,
            convenio c
    where	  a.nr_seq_lote_prot = b.nr_sequencia
    and 	  b.cd_convenio = c.cd_convenio
    and	    a.nr_sequencia = nr_sequencia_p
    
union

    SELECT	coalesce(max(p.ie_intermediario),'N') intermediario
    from	  nota_fiscal n,
            lote_protocolo l,
            parametro_nfs p
    where	  n.nr_seq_lote_prot = l.nr_sequencia
    and 	  l.cd_convenio = p.cd_convenio
    and     n.cd_estabelecimento = p.cd_estabelecimento
    and	    n.nr_sequencia = nr_sequencia_p
  ) alias6;

  vl_retorno_w := ie_intermediario_w;
end if;

return	vl_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION fis_obter_se_intermediario (nr_sequencia_p bigint) FROM PUBLIC;

