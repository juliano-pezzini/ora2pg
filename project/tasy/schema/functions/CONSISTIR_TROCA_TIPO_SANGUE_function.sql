-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION consistir_troca_tipo_sangue ( nr_sequencia_p bigint, nr_seq_exame_p bigint, ie_pasta_p bigint, ds_resultado_p text, cd_estabelecimento_p bigint, ds_justificativa_p text) RETURNS varchar AS $body$
DECLARE

 
cd_pessoa_fisica_w		varchar(10);
ie_fator_rh_w			varchar(20);
ie_tipo_sangue_w		varchar(3);
ds_retorno_w			varchar(255);
nr_seq_exame_rh_param_w 	bigint;
nr_seq_exame_tipo_param_w    bigint;
ds_resultado_w			varchar(255);
qt_justificativa_w		bigint;


BEGIN 
 
ds_resultado_w := ds_resultado_p;
 
SELECT 	MAX(nr_seq_exame_RH), 
	MAX(nr_seq_exame_tipo) 
INTO STRICT	nr_seq_exame_rh_param_w, 
	nr_seq_exame_tipo_param_w 
FROM 	san_parametro 
WHERE	cd_estabelecimento = cd_estabelecimento_p;
 
IF (ie_pasta_p = 3) THEN --Transfusão 
 
	SELECT	MAX(cd_pessoa_fisica) 
	INTO STRICT	cd_pessoa_fisica_w 
	FROM	atendimento_paciente 
	WHERE	nr_atendimento = (SELECT MAX(nr_atendimento) 
			  	 FROM 	 san_transfusao 
				 WHERE	 nr_sequencia = nr_sequencia_p);
 
ELSIF (ie_pasta_p = 4) THEN --reserva 
 
		SELECT 	MAX(cd_pessoa_fisica) 
		INTO STRICT	cd_pessoa_fisica_w 
		FROM  	san_reserva 
		WHERE 	nr_sequencia = nr_sequencia_p;
 
ELSIF (ie_pasta_p = 11) THEN --exames 
 
		SELECT 	MAX(cd_pessoa_fisica) 
		INTO STRICT	cd_pessoa_fisica_w 
		FROM  	san_doacao 
		WHERE 	nr_sequencia = nr_sequencia_p;
END IF;
 
IF (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') THEN 
	-- Fator RH 
	SELECT 	coalesce(obter_dados_pf(cd_pessoa_fisica_w,'RH'),'N') 
	INTO STRICT	ie_fator_rh_w 
	;
 
	/*SELECT nvl(max(ds_resultado),'N') 
	into	ie_fator_rh_w 
	FROM 	san_exame_realizado a, 
		san_exame_lote b, 
		san_reserva c 
	WHERE 	a.nr_seq_exame_lote 	= b.nr_sequencia 
	AND	b.nr_seq_reserva	= c.nr_sequencia 
	AND	c.cd_pessoa_fisica 	= cd_pessoa_fisica_w 
	AND	a.nr_seq_exame	 	= nr_seq_exame_rh_param_w 
	AND	a.nr_seq_exame_lote 	= ( 	SELECT MAX(a.nr_seq_exame_lote) 
						FROM 	san_exame_realizado a, 
							san_exame_lote b, 
							san_reserva c 
						 WHERE 	a.nr_seq_exame_lote 	= b.nr_sequencia 
						 AND	b.nr_seq_reserva	= c.nr_sequencia 
						 AND	c.cd_pessoa_fisica 	= cd_pessoa_fisica_w 
						 AND	a.nr_seq_exame	 	= nr_seq_exame_rh_param_w); 
 
	if (ie_fator_rh_w = 'N') then 
		select 	nvl(obter_dados_pf(cd_pessoa_fisica_w,'RH'),'N') 
		into	ie_fator_rh_w 
		from 	dual; 
	else 
		if (upper(ie_fator_rh_w) = 'POSITIVO') then 
			ie_fator_rh_w := '+'; 
		end if; 
		if (upper(ie_fator_rh_w) = 'NEGATIVO') then 
			ie_fator_rh_w := '-'; 
		end if; 
	end if;*/
 
 
	-- Tipo de Sangue 
	SELECT 	coalesce(obter_dados_pf(cd_pessoa_fisica_w,'TS'),'N') 
		INTO STRICT	ie_tipo_sangue_w 
		;
 
	/*SELECT nvl(max(ds_resultado),'N') 
	into	ie_tipo_sangue_w 
	FROM 	san_exame_realizado a, 
		san_exame_lote b, 
		san_reserva c 
	WHERE 	a.nr_seq_exame_lote 	= b.nr_sequencia 
	AND	b.nr_seq_reserva	= c.nr_sequencia 
	AND	c.cd_pessoa_fisica 	= cd_pessoa_fisica_w 
	AND	a.nr_seq_exame	 	= nr_seq_exame_tipo_param_w 
	AND	a.nr_seq_exame_lote 	= ( 	SELECT MAX(a.nr_seq_exame_lote) 
						FROM 	san_exame_realizado a, 
							san_exame_lote b, 
							san_reserva c 
						 WHERE 	a.nr_seq_exame_lote 	= b.nr_sequencia 
						 AND	b.nr_seq_reserva	= c.nr_sequencia 
						 AND	c.cd_pessoa_fisica 	= cd_pessoa_fisica_w 
						 AND	a.nr_seq_exame	 	= nr_seq_exame_tipo_param_w); 
 
	if (ie_tipo_sangue_w = 'N') then 
		select 	nvl(obter_dados_pf(cd_pessoa_fisica_w,'TS'),'N') 
		into	ie_tipo_sangue_w 
		from 	dual; 
	end if;*/
 
 
ELSE 
	ie_fator_rh_w		:= 'N';
	ie_tipo_sangue_w 	:= 'N';
END IF;
 
IF (nr_seq_exame_rh_param_w = nr_seq_exame_p) THEN 
	IF (UPPER(ds_resultado_w) = 'POSITIVO') THEN 
		ds_resultado_w := '+';
	END IF;
	IF (UPPER(ds_resultado_w) = 'NEGATIVO') THEN 
		ds_resultado_w := '-';
	END IF;
END IF;
 
SELECT coalesce(LENGTH(ds_justificativa_p),0) INTO STRICT qt_justificativa_w;
 
 
IF	((nr_seq_exame_rh_param_w = nr_seq_exame_p) AND (ie_fator_rh_w <> 'N') AND (ds_resultado_w <> ie_fator_rh_w) AND (qt_justificativa_w < 30)) THEN 
	--ds_retorno_w	:= 'O Fator RH informado está diferente do último exame realizado pelo paciente. Favor justificar a alteração!'; 
	ds_retorno_w	:= wheb_mensagem_pck.get_texto(348675);
 
ELSIF	((nr_seq_exame_tipo_param_w = nr_seq_exame_p) AND (ie_tipo_sangue_w <> 'N') AND (ds_resultado_w <> ie_tipo_sangue_w) AND (qt_justificativa_w < 30)) THEN 
	--ds_retorno_w	:= 'O tipo de sangue informado está diferente do último exame realizado pelo paciente. Favor justificar a alteração!'; 
	ds_retorno_w	:= wheb_mensagem_pck.get_texto(348676);
 
END IF;
 
 
RETURN	ds_retorno_w;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION consistir_troca_tipo_sangue ( nr_sequencia_p bigint, nr_seq_exame_p bigint, ie_pasta_p bigint, ds_resultado_p text, cd_estabelecimento_p bigint, ds_justificativa_p text) FROM PUBLIC;

