-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_bloq_geral_agenda (cd_estabelecimento_p bigint, cd_agenda_p bigint, ie_classif_agenda_p text, nr_seq_classif_agenda_p bigint, cd_espec_agendamento_p bigint, cd_setor_agendamento_p bigint, nr_seq_proc_interno_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_profissional_agendamento_p text, dt_agenda_p timestamp, ie_geracao_horarios_p text default 'N', ie_valida_agendamento_p text default 'N') RETURNS bigint AS $body$
DECLARE


nr_seq_regra_w			agenda_bloqueio_geral.nr_sequencia%type;
cd_grupo_proc_w			grupo_proc.cd_grupo_proc%type;
cd_especialidade_w		especialidade_proc.cd_especialidade%type;
cd_area_procedimento_w		area_procedimento.cd_area_procedimento%type;
ie_dia_semana_w			smallint;
cd_tipo_agenda_w		agenda.cd_tipo_agenda%type;
cd_espec_agenda_w		agenda.cd_especialidade%type;
cd_setor_agenda_w		setor_atendimento.cd_setor_atendimento%type;
cd_setor_exclusivo_w		setor_atendimento.cd_setor_atendimento%type;
cd_profissional_agenda_w	pessoa_fisica.cd_pessoa_fisica%type;


BEGIN

begin
select	cd_tipo_agenda,
	cd_especialidade,
	cd_setor_agenda,
	cd_setor_exclusivo,
	cd_pessoa_fisica
into STRICT	cd_tipo_agenda_w,
	cd_espec_agenda_w,
	cd_setor_agenda_w,
	cd_setor_exclusivo_w,
	cd_profissional_agenda_w
from	agenda
where	cd_agenda	 = cd_agenda_p;
exception
	when others then
	cd_tipo_agenda_w	:= 0;
end;

begin
select	cd_grupo_proc,
		cd_especialidade,
		cd_area_procedimento
into STRICT	cd_grupo_proc_w,
		cd_especialidade_w,
		cd_area_procedimento_w
from	estrutura_procedimento_v
where	cd_procedimento	 	= cd_procedimento_p
and		ie_origem_proced	= ie_origem_proced_p  LIMIT 1;
exception
	when others then
	cd_grupo_proc_w			:= 0;
	cd_especialidade_w		:= 0;
	cd_area_procedimento_w		:= 0;
end;

ie_dia_semana_w	:= Obter_Cod_Dia_Semana(dt_agenda_p);

select 	coalesce(max(nr_sequencia),0)
into STRICT 	nr_seq_regra_w
from	agenda_bloqueio_geral
where 	ie_situacao = 'A'
and	coalesce(cd_estabelecimento,coalesce(cd_estabelecimento_p,0)) = coalesce(cd_estabelecimento_p,0)
and coalesce(cd_perfil,coalesce(obter_perfil_ativo,0)) = coalesce(obter_perfil_ativo,0)
and	coalesce(cd_agenda,coalesce(cd_agenda_p,0)) = coalesce(cd_agenda_p,0) 
and 	coalesce(cd_especialidade,coalesce(cd_especialidade_w,0)) = coalesce(cd_especialidade_w,0) 
and (coalesce(ie_dia_semana,coalesce(ie_dia_semana_w,0)) = coalesce(ie_dia_semana_w,0) or (ie_dia_semana = 9 and ie_dia_semana_w not in (7,1))) 
and	coalesce(nr_seq_proc_interno,coalesce(nr_seq_proc_interno_p,0)) = coalesce(nr_seq_proc_interno_p,0)
and	coalesce(cd_procedimento,coalesce(cd_procedimento_p,0)) = coalesce(cd_procedimento_p,0) 
and	((coalesce(cd_procedimento,0) = 0) or coalesce(ie_origem_proced,coalesce(ie_origem_proced_p,0)) = coalesce(ie_origem_proced_p,0))
and	coalesce(cd_grupo_proc,coalesce(cd_grupo_proc_w,0)) = coalesce(cd_grupo_proc_w,0) 
and	coalesce(cd_area_procedimento,coalesce(cd_area_procedimento_w,0)) = coalesce(cd_area_procedimento_w,0) 
and	dt_agenda_p between coalesce(dt_inicio_vigencia,dt_agenda_p) and coalesce(dt_fim_vigencia,dt_agenda_p) 
and	dt_agenda_p between pkg_date_utils.get_DateTime(dt_agenda_p, coalesce(hr_inicial,dt_agenda_p))
			and pkg_date_utils.get_DateTime(dt_agenda_p, coalesce(hr_final,dt_agenda_p))
and	((coalesce(ie_setor_agenda,'N') = 'N') or (coalesce(cd_setor_atendimento,coalesce(cd_setor_agenda_w,0)) = coalesce(cd_setor_agenda_w,0)))
and 	((coalesce(ie_setor_agendamento,'N') = 'N') or (coalesce(cd_setor_atendimento,coalesce(cd_setor_agendamento_p,0)) = coalesce(cd_setor_agendamento_p,0)))
and 	((coalesce(ie_setor_exclusivo,'N') = 'N') or (coalesce(cd_setor_atendimento,coalesce(cd_setor_exclusivo_w,0)) = coalesce(cd_setor_exclusivo_w,0)))
and	((coalesce(ie_prof_agenda,'N') = 'N') or (coalesce(cd_pessoa_fisica,coalesce(cd_profissional_agenda_w,'0')) = coalesce(cd_profissional_agenda_w,'0')))
and	((coalesce(ie_prof_agendamento,'N') = 'N') or (coalesce(cd_pessoa_fisica,coalesce(cd_profissional_agendamento_p,'0')) = coalesce(cd_profissional_agendamento_p,'0')))
and 	((coalesce(ie_espec_agenda,'N') = 'N') or (coalesce(cd_espec_medica, coalesce(cd_espec_agenda_w,0)) = coalesce(cd_espec_agenda_w,0)))
and 	((coalesce(ie_espec_agendamento,'N') = 'N') or (coalesce(cd_espec_medica, coalesce(cd_espec_agendamento_p,0)) = coalesce(cd_espec_agendamento_p,0)))
and	((ie_valida_agendamento_p = 'N') or (ie_valida_agendamento = 'S')) -- se valida ao clicar no botao agendar
and	( ((cd_tipo_agenda_w = 2) and (coalesce(nr_seq_classif_agenda,coalesce(nr_seq_classif_agenda_p,0)) = coalesce( nr_seq_classif_agenda_p,0)))
or 	  ((cd_tipo_agenda_w in (3,4,5)) and (coalesce(ie_classif_agenda,coalesce(ie_classif_agenda_p,'0')) = coalesce( ie_classif_agenda_p,'0'))) )
and	coalesce(cd_tipo_agenda,cd_tipo_agenda_w) = cd_tipo_agenda_w
and	((ie_geracao_horarios_p = 'N') or (ie_valida_geracao = 'S')) -- se gera horarios como bloqueados nas rotinas de agenda (menos agenda integrada, que nao gera os horarios)
;

return	coalesce(nr_seq_regra_w,0);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_bloq_geral_agenda (cd_estabelecimento_p bigint, cd_agenda_p bigint, ie_classif_agenda_p text, nr_seq_classif_agenda_p bigint, cd_espec_agendamento_p bigint, cd_setor_agendamento_p bigint, nr_seq_proc_interno_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_profissional_agendamento_p text, dt_agenda_p timestamp, ie_geracao_horarios_p text default 'N', ie_valida_agendamento_p text default 'N') FROM PUBLIC;

