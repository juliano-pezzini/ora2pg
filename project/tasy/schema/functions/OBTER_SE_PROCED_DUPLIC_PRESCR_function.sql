-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_proced_duplic_prescr (nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_proced_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_material_exame_p text, dt_prev_execucao_p timestamp, qt_hora_proced_duplic_p bigint, nr_seq_proc_interno_p bigint, ie_mesma_prescr_p text, nr_seq_exame_p bigint) RETURNS varchar AS $body$
DECLARE

					
ie_proced_duplic_w			varchar(1);
dt_prev_execucao_w			timestamp;
qt_registros_w 				bigint;
qt_registros_2w				bigint := 0;
nr_seq_derivado_w			bigint;
ie_cons_proc_duplic_prescr_w 		varchar(10);
					

BEGIN

ie_cons_proc_duplic_prescr_w := obter_param_usuario(924, 677, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_cons_proc_duplic_prescr_w);

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_proced_p IS NOT NULL AND nr_seq_proced_p::text <> '') and (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (ie_origem_proced_p IS NOT NULL AND ie_origem_proced_p::text <> '') and (dt_prev_execucao_p IS NOT NULL AND dt_prev_execucao_p::text <> '') then
	
	if (coalesce(qt_hora_proced_duplic_p,0) = 0) then
	
		select	max(nr_seq_derivado)
		into STRICT	nr_seq_derivado_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_seq_proced_p;
	
		if (ie_cons_proc_duplic_prescr_w = 'N') then
			select	count(*)
			into STRICT	qt_registros_w
			from	prescr_medica a,
				prescr_procedimento b
			where	b.nr_prescricao			= a.nr_prescricao
			and	a.nr_atendimento		= nr_atendimento_p
			and	b.cd_procedimento		= cd_procedimento_p
			and	b.ie_origem_proced		= ie_origem_proced_p
			and	coalesce(b.nr_seq_origem::text, '') = ''
			and	a.dt_validade_prescr between clock_timestamp() - interval '5 days' and clock_timestamp() + interval '5 days'
			and	b.nr_prescricao			<> nr_prescricao_p
			and	coalesce(b.nr_seq_proc_interno,0)	= coalesce(nr_seq_proc_interno_p,0)
			and	coalesce(b.cd_material_exame,'0')	= coalesce(cd_material_exame_p,'0')
			and	coalesce(b.nr_seq_derivado,0)	= coalesce(nr_seq_derivado_w,0)
			and	coalesce(b.nr_seq_exame,0)		= coalesce(nr_seq_exame_p,0)
			and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_prev_execucao) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prev_execucao_p)
			and	coalesce(b.dt_suspensao::text, '') = ''
			and	coalesce(b.ie_modificado,'N')	<> 'S';	
		
		end if;
		
		if (ie_mesma_prescr_p = 'S') then
			if (ie_cons_proc_duplic_prescr_w = 'S') then
			
				select	count(*)
				into STRICT	qt_registros_2w
				from	prescr_medica a,
					prescr_procedimento b
				where	b.nr_prescricao			= a.nr_prescricao
				and	a.nr_atendimento		= nr_atendimento_p
				and	b.cd_procedimento		= cd_procedimento_p
				and	b.ie_origem_proced		= ie_origem_proced_p
				and	coalesce(b.nr_seq_origem::text, '') = ''	
				and	b.nr_prescricao 		= nr_prescricao_p
				and	b.nr_sequencia 			<> nr_seq_proced_p
				and	coalesce(b.nr_seq_derivado,0)	= coalesce(nr_seq_derivado_w,0)
				and	coalesce(b.nr_seq_proc_interno,0)	= coalesce(nr_seq_proc_interno_p,0)
				and	coalesce(b.nr_seq_exame,0)		= coalesce(nr_seq_exame_p,0)
				and	coalesce(b.cd_material_exame,'0')	= coalesce(cd_material_exame_p,'0')
				and	coalesce(b.dt_suspensao::text, '') = ''
				and	coalesce(b.ie_modificado,'N')	<> 'S';	
				
			elsif (ie_cons_proc_duplic_prescr_w = 'N') then
				select	count(*)
				into STRICT	qt_registros_2w
				from	prescr_medica a,
					prescr_procedimento b
				where	b.nr_prescricao			= a.nr_prescricao
				and	a.nr_atendimento		= nr_atendimento_p
				and	b.cd_procedimento		= cd_procedimento_p
				and	b.ie_origem_proced		= ie_origem_proced_p
				and	coalesce(b.nr_seq_origem::text, '') = ''	
				and	b.nr_prescricao 		= nr_prescricao_p
				and	b.nr_sequencia 			<> nr_seq_proced_p
				and	coalesce(b.nr_seq_derivado,0)	= coalesce(nr_seq_derivado_w,0)
				and	coalesce(b.nr_seq_proc_interno,0)	= coalesce(nr_seq_proc_interno_p,0)
				and	coalesce(b.nr_seq_exame,0)		= coalesce(nr_seq_exame_p,0)
				and	coalesce(b.cd_material_exame,'0')	= coalesce(cd_material_exame_p,'0')
				and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_prev_execucao) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prev_execucao_p)
				and	coalesce(b.dt_suspensao::text, '') = ''
				and	coalesce(b.ie_modificado,'N')	<> 'S';	
			end if;
		end if;
		
		if (coalesce(qt_registros_w,0) = 0) and (coalesce(qt_registros_2w,0) = 0) then
			ie_proced_duplic_w := 'N';
		else
			ie_proced_duplic_w := 'S';
		end if;
		
	else
		dt_prev_execucao_w := ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prev_execucao_p) - qt_hora_proced_duplic_p / 24;
		
		select	max(nr_seq_derivado)
		into STRICT	nr_seq_derivado_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_seq_proced_p;
		
		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_proced_duplic_w
		from	prescr_medica a,
			prescr_procedimento b
		where	b.nr_prescricao		= a.nr_prescricao
		and	a.nr_atendimento		= nr_atendimento_p
		and	b.cd_procedimento		= cd_procedimento_p
		and	b.ie_origem_proced		= ie_origem_proced_p
		and	((a.nr_prescricao <> nr_prescricao_p) or (b.nr_sequencia <> nr_seq_proced_p))
		and	coalesce(b.nr_seq_origem::text, '') = ''
		and	coalesce(b.nr_seq_derivado,0)	= coalesce(nr_seq_derivado_w,0)
		and	coalesce(b.nr_seq_proc_interno,0)	= coalesce(nr_seq_proc_interno_p,0)
		and	coalesce(b.nr_seq_exame,0)		= coalesce(nr_seq_exame_p,0)
		and	coalesce(b.cd_material_exame,'0')	= coalesce(cd_material_exame_p,'0')
		and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_prev_execucao) between 
			ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prev_execucao_w) and 
			ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prev_execucao_p)
		and	coalesce(b.dt_suspensao::text, '') = ''
		and	coalesce(b.ie_modificado,'N')	<> 'S';
		
	end if;	
	
end if;

return ie_proced_duplic_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_proced_duplic_prescr (nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_proced_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_material_exame_p text, dt_prev_execucao_p timestamp, qt_hora_proced_duplic_p bigint, nr_seq_proc_interno_p bigint, ie_mesma_prescr_p text, nr_seq_exame_p bigint) FROM PUBLIC;

