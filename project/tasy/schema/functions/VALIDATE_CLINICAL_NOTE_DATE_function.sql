-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION validate_clinical_note_date (cd_estabelecimento_p bigint, nr_atendimento_p bigint, cd_medico_p text, dt_evolucao_p timestamp, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE


dt_entrada_w            atendimento_paciente.dt_entrada%type;
cd_estabelecimento_w    atendimento_paciente.cd_estabelecimento%type;
ie_medico_w             varchar(1);
qt_hora_w			    double precision;
qt_hora_med_w			double precision;
qt_hora_retroativa_w	double precision;

ds_abort_message_w       varchar(255);


BEGIN
select 	coalesce(max('S'),'N')
into STRICT	ie_medico_w
from	Medico
where 	cd_pessoa_fisica	= cd_medico_p;

if (dt_evolucao_p > clock_timestamp()) and (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
	--A data da evolucao nao pode ser maior que a data atual.#@#@');
    ds_abort_message_w := Wheb_mensagem_pck.get_texto(262188);
end if;

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (nr_atendimento_p > 0) then

	select	dt_entrada,
			cd_estabelecimento
	into STRICT	dt_entrada_w,
			cd_estabelecimento_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_p;
	
	qt_hora_retroativa_w		:= Obter_Valor_Param_Usuario(281,592,obter_Perfil_Ativo,nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
	
	select	coalesce(max(coalesce((qt_hora_retroativa_w)::numeric ,qt_horas_passado_evo)),-1),
			coalesce(max(qt_horas_passado_evo_med),-1)
	into STRICT	qt_hora_w,
			qt_hora_med_w
	from	parametro_medico
	where	cd_estabelecimento	= cd_estabelecimento_w;

	if (qt_hora_w >= 0) and (ie_medico_w = 'N') and
		(dt_evolucao_p < (clock_timestamp() - qt_hora_w/24)) then
		--A data da evolucao nao pode ser menor que '|| to_char(qt_hora_w)||' hora(s) em relacao a data atual.#@#@');
        ds_abort_message_w := Wheb_mensagem_pck.get_texto(262189, 'QT_HORA=' || to_char(qt_hora_w));
	end if;

	if (qt_hora_med_w >= 0) and (ie_medico_w = 'S') and
		(dt_evolucao_p < (clock_timestamp() - qt_hora_med_w/24)) then
		--A data da evolucao nao pode ser menor que '|| to_char(qt_hora_med_w)||' hora(s) em relacao a data atual.#@#@');
        ds_abort_message_w := Wheb_mensagem_pck.get_texto(262190, 'QT_HORA='||to_char(qt_hora_med_w));
	end if;
	
end if;

return ds_abort_message_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION validate_clinical_note_date (cd_estabelecimento_p bigint, nr_atendimento_p bigint, cd_medico_p text, dt_evolucao_p timestamp, nm_usuario_p text) FROM PUBLIC;

