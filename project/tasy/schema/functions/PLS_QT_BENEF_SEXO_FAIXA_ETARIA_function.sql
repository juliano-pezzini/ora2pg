-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_qt_benef_sexo_faixa_etaria ( qt_idade_inicial_p bigint, qt_idade_final_p bigint, ie_tipo_data_p text, dt_inicial_p timestamp, dt_final_p timestamp, ie_situacao_p text, cd_estabelecimento_p bigint, ie_opcao_sexo_p text) RETURNS bigint AS $body$
DECLARE

 
/* 
ie_opcao_sexo_p: 
	M - Masculino 
	F - Feminino 
	T - Total (Masculino + Feminino) 
*/
 
 
qt_beneficiarios_w		bigint;
qt_benef_total_w		bigint;
qt_benef_feminino_w		bigint;
qt_benef_masculino_w		bigint;
cd_pessoa_fisica_w		varchar(10);
qt_idade_benef_w		bigint;
nr_seq_segurado_w		bigint;
dt_nascimento_w			timestamp;

C01 CURSOR FOR 
	SELECT	b.dt_nascimento 
	from	pessoa_fisica	b, 
		pls_segurado	a 
	where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica 
	and	ie_tipo_segurado	in ('A','B','R') 
	and (pls_obter_dados_segurado(a.nr_sequencia,'CS')	= ie_situacao_p) 
	and	((ie_tipo_data_p = 'C' and dt_contratacao between dt_inicial_p and fim_dia(dt_final_p)) or (ie_tipo_data_p	 = 'A' and dt_liberacao between dt_inicial_p and fim_dia(dt_final_p)) or (ie_tipo_data_p	 = 'N')) 
	and	a.cd_estabelecimento	= cd_estabelecimento_p;
	
C02 CURSOR FOR 
	SELECT	b.dt_nascimento 
	from	pessoa_fisica	b, 
		pls_segurado	a 
	where	a.cd_pessoa_fisica 	= b.cd_pessoa_fisica 
	and	ie_tipo_segurado	in ('A','B','R') 
	and (pls_obter_dados_segurado(a.nr_sequencia,'CS')	= ie_situacao_p) 
	and	((ie_tipo_data_p = 'C' and a.dt_contratacao between dt_inicial_p and fim_dia(dt_final_p)) or (ie_tipo_data_p	 = 'A' and a.dt_liberacao between dt_inicial_p and fim_dia(dt_final_p)) or (ie_tipo_data_p	 = 'N')) 
	and	a.cd_estabelecimento	= cd_estabelecimento_p 
	and	b.ie_sexo = 'F';

C03 CURSOR FOR 
	SELECT	b.dt_nascimento 
	from	pessoa_fisica	b, 
		pls_segurado	a 
	where	a.cd_pessoa_fisica 	= b.cd_pessoa_fisica 
	and	ie_tipo_segurado	in ('A','B','R') 
	and (pls_obter_dados_segurado(a.nr_sequencia,'CS')	= ie_situacao_p) 
	and	((ie_tipo_data_p = 'C' and a.dt_contratacao between dt_inicial_p and fim_dia(dt_final_p)) or (ie_tipo_data_p	 = 'A' and a.dt_liberacao between dt_inicial_p and fim_dia(dt_final_p)) or (ie_tipo_data_p	 = 'N')) 
	and	a.cd_estabelecimento	= cd_estabelecimento_p 
	and	b.ie_sexo = 'M';	
	 

BEGIN 
qt_beneficiarios_w	:= 0;
 
if (ie_opcao_sexo_p = 'T') then 
	begin 
	open C01;
	loop 
	fetch C01 into	 
		dt_nascimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
	 
		qt_idade_benef_w	:= trunc(months_between(clock_timestamp(), dt_nascimento_w) / 12);
		 
		if (qt_idade_benef_w between qt_idade_inicial_p and qt_idade_final_p) then 
			qt_beneficiarios_w	:= qt_beneficiarios_w + 1;
		end if;	
	 
		end;
	end loop;
	close C01;
	end;
end if;
 
 
if (ie_opcao_sexo_p = 'F') then 
	begin 
	open C02;
	loop 
	fetch C02 into	 
		dt_nascimento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
	 
		qt_idade_benef_w	:= trunc(months_between(clock_timestamp(), dt_nascimento_w) / 12);
	 
		if (qt_idade_benef_w between qt_idade_inicial_p and qt_idade_final_p) then 
			qt_beneficiarios_w	:= qt_beneficiarios_w + 1;
		end if;	
	 
		end;
	end loop;
	close C02;
	end;
end if;
 
if (ie_opcao_sexo_p = 'M') then 
	begin 
	open C03;
	loop 
	fetch C03 into	 
		dt_nascimento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		 
		qt_idade_benef_w	:= trunc(months_between(clock_timestamp(), dt_nascimento_w) / 12);
	 
		if (qt_idade_benef_w between qt_idade_inicial_p and qt_idade_final_p) then 
			qt_beneficiarios_w	:= qt_beneficiarios_w + 1;
		end if;	
	 
		end;
	end loop;
	close C03;
	end;
end if;
 
return	qt_beneficiarios_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_qt_benef_sexo_faixa_etaria ( qt_idade_inicial_p bigint, qt_idade_final_p bigint, ie_tipo_data_p text, dt_inicial_p timestamp, dt_final_p timestamp, ie_situacao_p text, cd_estabelecimento_p bigint, ie_opcao_sexo_p text) FROM PUBLIC;

