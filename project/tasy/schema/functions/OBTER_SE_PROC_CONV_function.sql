-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_proc_conv ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, dt_conta_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, ie_tipo_atendimento_p bigint, nr_seq_exame_p bigint default null) RETURNS varchar AS $body$
DECLARE


ds_retorno_w			varchar(2);
ie_classificacao_w		smallint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
ie_tipo_convenio_w		convenio.ie_tipo_convenio%type;
ds_erro_w			varchar(255);
cd_setor_w			procedimento.cd_setor_exclusivo%type;
nr_seq_proc_interno_aux_w	exame_laboratorio.nr_seq_proc_interno%type;


BEGIN

cd_procedimento_w	:= cd_procedimento_p;
ie_origem_proced_w	:= ie_origem_proced_p;

if (nr_seq_exame_p IS NOT NULL AND nr_seq_exame_p::text <> '') then
	begin
	select	ie_tipo_convenio
	into STRICT	ie_tipo_convenio_w
	from 	convenio
	where 	cd_convenio = cd_convenio_p;
	exception when others then
		ie_tipo_convenio_w := null;
	end;

	/*converte o exame do convenio para o procedimento do cadastro*/

	SELECT * FROM Obter_Exame_Lab_Convenio(	nr_seq_exame_p, cd_convenio_p, cd_categoria_P, coalesce(ie_tipo_atendimento_p,0), cd_estabelecimento_p, ie_tipo_convenio_w, null,  --nr_seq_proc_interno_p
					null,  --cd_material_exame_p
					null,  --cd_plano_convenio_p
					cd_setor_w,  --out
					cd_procedimento_w,   --out
					ie_origem_proced_w,  --out
					ds_erro_w,   --out
					nr_seq_proc_interno_aux_w) INTO STRICT 
					cd_setor_w, 
					cd_procedimento_w, 
					ie_origem_proced_w, 
					ds_erro_w, 
					nr_seq_proc_interno_aux_w; -- out
elsif (nr_seq_proc_interno_p IS NOT NULL AND nr_seq_proc_interno_p::text <> '') then

	SELECT * FROM Obter_Proc_Tab_Interno_Conv(	nr_seq_proc_interno_p, cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, null, null, cd_procedimento_w, ie_origem_proced_w, null, dt_conta_p, null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
end if;


select	coalesce(max(ie_classificacao),1)
into STRICT	ie_classificacao_w
from	procedimento
where	cd_procedimento		= cd_procedimento_w
and	ie_origem_proced	= ie_origem_proced_w;

if (ie_classificacao_w	= 1) then

	select	obter_se_proc_edicao(cd_estabelecimento_p,cd_convenio_p,cd_categoria_p,dt_conta_p,cd_procedimento_w, ie_tipo_atendimento_p, ie_origem_proced_w, nr_seq_proc_interno_p,nr_seq_exame_p)
	into STRICT	ds_retorno_w
	;

else
	select	Obter_Se_proc_Tab_Serv(cd_estabelecimento_p,cd_convenio_p,cd_categoria_p,dt_conta_p,cd_procedimento_w, ie_origem_proced_w,
			ie_tipo_atendimento_p, 0)
	into STRICT	ds_retorno_w
	;

end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_proc_conv ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, dt_conta_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, ie_tipo_atendimento_p bigint, nr_seq_exame_p bigint default null) FROM PUBLIC;

