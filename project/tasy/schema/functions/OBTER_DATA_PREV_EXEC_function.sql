-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_data_prev_exec (dt_prescricao_p timestamp, dt_procedimento_p timestamp, cd_setor_atendimento_p bigint, nr_prescricao_p bigint, ie_data_atual_p text) RETURNS timestamp AS $body$
DECLARE


dt_retorno_w		timestamp;
dt_inicio_prescr_w	timestamp;
ie_data_ok_w		varchar(1) := 'N';
ie_utilDtProc_w		varchar(1);

C01 CURSOR FOR
	SELECT	pkg_date_utils.get_datetime(coalesce(dt_procedimento_p,dt_prescricao_p), dt_horario)
	from	setor_horario_atend
	where	cd_setor_atendimento = cd_setor_atendimento_p
	and	((coalesce(hr_limite::text, '') = '') or (to_char(CASE WHEN coalesce(ie_utilDtProc_w,'S')='N' THEN  coalesce(dt_procedimento_p,dt_prescricao_p)  ELSE clock_timestamp() END ,'hh24:mi') <= hr_limite))
	order by dt_horario;


BEGIN

ie_utilDtProc_w := obter_param_usuario(924, 544, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, 0, ie_utilDtProc_w);

select	max(dt_inicio_prescr)
into STRICT	dt_inicio_prescr_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

OPEN C01;
LOOP
FETCH C01 into
	dt_retorno_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	if (ie_data_atual_p	= 'A') then
		if (dt_retorno_w >= dt_prescricao_p) then
			begin
			ie_data_ok_w	:= 'S';
			exit;
			end;
		end if;
	else
		if (dt_retorno_w >= coalesce(dt_inicio_prescr_w, dt_prescricao_p)) then
			begin
			ie_data_ok_w	:= 'S';
			exit;
			end;
		end if;
	end if;
	end;
END LOOP;
Close C01;

if (ie_data_ok_w = 'N') then
	OPEN C01;
	LOOP
	FETCH C01 into
		dt_retorno_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		dt_retorno_w	:= dt_retorno_w + 1;
		exit;
		end;
	END LOOP;
	Close C01;
end if;

if (coalesce(dt_retorno_w::text, '') = '') or (dt_retorno_w < dt_prescricao_p) then
	dt_retorno_w	:= trunc(dt_procedimento_p,'hh24');
end if;

if (dt_retorno_w < dt_prescricao_p) then
	if (ie_data_atual_p	= 'A') then
		dt_retorno_w	:= dt_prescricao_p;
	else
		dt_retorno_w	:= dt_inicio_prescr_w;
	end if;
end if;

return	dt_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_data_prev_exec (dt_prescricao_p timestamp, dt_procedimento_p timestamp, cd_setor_atendimento_p bigint, nr_prescricao_p bigint, ie_data_atual_p text) FROM PUBLIC;

