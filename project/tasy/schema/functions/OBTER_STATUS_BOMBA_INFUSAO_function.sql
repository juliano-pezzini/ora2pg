-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_status_bomba_infusao (NR_PRESCRICAO_P bomba_infusao.nr_prescricao%type, NR_ATENDIMENTO_P bomba_infusao.nr_atendimento%type, NR_SEQ_MAT_CPOE_P bomba_infusao.nr_seq_mat_cpoe%type default null) RETURNS varchar AS $body$
DECLARE


  oResult         varchar(500);
  vStatusDS       bigint;
  vStatusST       bigint;
  vStatusCN       bigint;
  vIeQuestionavel bigint;


BEGIN

  if ((trim(both NR_SEQ_MAT_CPOE_P) IS NOT NULL AND (trim(both NR_SEQ_MAT_CPOE_P))::text <> '')) then

    begin
      with status_pump as (select case
                 when bii.ie_status in ('DS') then
                  count(bii.ie_status)
               end ie_status_ds,
               case
                 when bii.ie_status in ('ST') then
                  count(bii.ie_status)
               end ie_status_st,
               case
                 when bii.ie_status in ('IP', 'IS', 'BL', 'TC', 'KV', 'KT') then
                  count(bii.ie_status)
               end ie_status_cn,
               case
                 when coalesce(bii.ie_estado_questionavel, 'N') = 'S' then
                  count(bii.ie_estado_questionavel)
               end ie_questionavel
          from bomba_infusao bi, bomba_infusao_interface bii
         where bi.ie_ativo = 'S'
           and bi.nr_seq_mat_cpoe = NR_SEQ_MAT_CPOE_P
           and bi.nr_seq_bomba_interface = bii.nr_sequencia
         group by bii.ie_status, bii.ie_estado_questionavel)
      select sum(coalesce(status_pump.ie_status_ds, 0)) ie_status_ds,
             sum(coalesce(status_pump.ie_status_st, 0)) ie_status_st,
             sum(coalesce(status_pump.ie_status_cn, 0)) ie_status_cn,
             sum(coalesce(status_pump.ie_questionavel, 0)) ie_questionavel
        into STRICT vstatusds, vstatusst, vstatuscn, viequestionavel
        from status_pump;
    end;

  else
  
    with status_pump as (select case
               when bii.ie_status in ('DS') then
                count(bii.ie_status)
             end ie_status_ds,
             case
               when bii.ie_status in ('ST') then
                count(bii.ie_status)
             end ie_status_st,
             case
               when bii.ie_status in ('IP', 'IS', 'BL', 'TC', 'KV', 'KT') then
                count(bii.ie_status)
             end ie_status_cn,
             case
               when coalesce(bii.ie_estado_questionavel, 'N') = 'S' then
                count(bii.ie_estado_questionavel)
             end ie_questionavel
        from bomba_infusao bi, bomba_infusao_interface bii
       where bi.ie_ativo = 'S'
         and bi.nr_prescricao = NR_PRESCRICAO_P
         and bi.nr_atendimento = NR_ATENDIMENTO_P
         and bi.nr_seq_bomba_interface = bii.nr_sequencia
       group by bii.ie_status, bii.ie_estado_questionavel)
    select sum(coalesce(status_pump.ie_status_ds, 0)) ie_status_ds,
           sum(coalesce(status_pump.ie_status_st, 0)) ie_status_st,
           sum(coalesce(status_pump.ie_status_cn, 0)) ie_status_cn,
           sum(coalesce(status_pump.ie_questionavel, 0)) ie_questionavel
      into STRICT vstatusds, vstatusst, vstatuscn, viequestionavel
      from status_pump;

  end if;

  if (vStatusCN > 0 and vStatusDS = 0 and vStatusST = 0) and
     vIeQuestionavel = 0 then
    oResult := 'CN';
  elsif vStatusDS > 0 and vIeQuestionavel = 0 then
    oResult := 'DS';
  elsif (vStatusST > 0 and vStatusDS = 0 and vStatusCN >= 0) and
        vIeQuestionavel = 0 then
    oResult := 'NI';
  elsif vIeQuestionavel > 0 then
    oResult := 'QN';
  end if;

  return(oResult);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_status_bomba_infusao (NR_PRESCRICAO_P bomba_infusao.nr_prescricao%type, NR_ATENDIMENTO_P bomba_infusao.nr_atendimento%type, NR_SEQ_MAT_CPOE_P bomba_infusao.nr_seq_mat_cpoe%type default null) FROM PUBLIC;

