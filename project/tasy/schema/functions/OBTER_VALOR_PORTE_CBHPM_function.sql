-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_valor_porte_cbhpm ( cd_estabelecimento_p bigint, dt_referencia_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_convenio_p bigint, nr_seq_prestador_p bigint, nr_seq_congenere_p bigint) RETURNS bigint AS $body$
DECLARE


cd_porte_w			cbhpm_preco.cd_porte%type;
vl_porte_w			cbhpm_porte.vl_porte%type;
ie_data_vig_cbhpm_w		parametro_faturamento.ie_data_vig_cbhpm%type;
ie_despreza_casa_cbhpm_w 	parametro_faturamento.ie_despreza_casa_cbhpm%type;
ie_preco_cbhpm_data_w		parametro_faturamento.ie_preco_cbhpm_data%type;

ie_preco_cbhpm_data_ww		varchar(1)	:= 'N';


BEGIN

select	coalesce(max(ie_data_vig_cbhpm), 'N'),
	coalesce(max(ie_despreza_casa_cbhpm), 'N'),
	coalesce(max(ie_preco_cbhpm_data), 'N')
into STRICT	ie_data_vig_cbhpm_w,
	ie_despreza_casa_cbhpm_w,
	ie_preco_cbhpm_data_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_p;

if (ie_data_vig_cbhpm_w	= 'R') then
	select	coalesce(max(ie_data_vig_cbhpm), 'N')
	into STRICT	ie_data_vig_cbhpm_w
	from	convenio_estabelecimento
	where	cd_convenio		= cd_convenio_p
	and	cd_estabelecimento 	= cd_estabelecimento_p;
end if;

/* Felipe - 16/09/2011 - OS 301610 - Se o parâmetro estiver como Ambos ou Prestador e o cálculo for para o Tasy/Hospital ou
	como Ambos ou Operadora e o cálculo for para Tasy/OPS */
if	(((ie_preco_cbhpm_data_w in ('A','P')) and (cd_convenio_p IS NOT NULL AND cd_convenio_p::text <> '')) or
	((ie_preco_cbhpm_data_w in ('A','O')) and
	((nr_seq_prestador_p IS NOT NULL AND nr_seq_prestador_p::text <> '') or (nr_seq_congenere_p IS NOT NULL AND nr_seq_congenere_p::text <> '')))) then
	ie_preco_cbhpm_data_ww	:= 'S';
end if;

begin

/* Felipe - 16/09/2011 - OS 301610 */

if (ie_preco_cbhpm_data_ww = 'S') then
	select	coalesce(a.cd_porte,'X')
	into STRICT	cd_porte_w
	from	cbhpm_preco a
	where	a.cd_procedimento	= cd_procedimento_p
	and	a.ie_origem_proced	= ie_origem_proced_p
	and	a.dt_vigencia		=
		(SELECT max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
			from 	cbhpm_preco x
			where x.cd_procedimento		= cd_procedimento_p
			and	x.ie_origem_proced	= ie_origem_proced_p
			and	x.dt_vigencia		<= dt_referencia_p);
elsif (ie_data_vig_cbhpm_w	= 'N') then
	select	coalesce(a.cd_porte,'X')
	into STRICT	cd_porte_w
	from	cbhpm_preco a
	where	a.cd_procedimento	= cd_procedimento_p
	and	a.ie_origem_proced	= ie_origem_proced_p
	and	a.dt_vigencia		=
		(SELECT	max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
			from	cbhpm_preco x
			where	x.cd_procedimento	= cd_procedimento_p
			and	x.ie_origem_proced	= ie_origem_proced_p
			and	x.dt_vigencia		<= dt_referencia_p);
else
	select	coalesce(a.cd_porte,'X')
	into STRICT	cd_porte_w
	from	cbhpm_preco a
	where	a.cd_procedimento	= cd_procedimento_p
	and	a.ie_origem_proced	= ie_origem_proced_p
	and	a.dt_vigencia		=
		(SELECT	min(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
			from	cbhpm_preco x
			where	x.cd_procedimento	= cd_procedimento_p
			and	x.ie_origem_proced	= ie_origem_proced_p
			and	x.dt_vigencia		<= dt_referencia_p);
end if;
exception
     	when others then
	begin
	cd_porte_w		:= 'X';
	end;
end;

if (coalesce(cd_porte_w,'X') <> 'X') then
	if (ie_data_vig_cbhpm_w	= 'N') then
		select	a.vl_porte
		into STRICT	vl_porte_w
		from	cbhpm_porte	a
		where	a.cd_porte	= substr(cd_porte_w,1,8)
		and	a.dt_vigencia	=
			(SELECT	max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
				from	cbhpm_porte x
				where	x.cd_porte = substr(cd_porte_w,1,8)
				and	x.dt_vigencia <= dt_referencia_p);
	else
		select	a.vl_porte
		into STRICT	vl_porte_w
		from	cbhpm_porte	a
		where	a.cd_porte	= substr(cd_porte_w,1,8)
		and	a.dt_vigencia	=
			(SELECT	min(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
				from	cbhpm_porte x
				where	x.cd_porte = substr(cd_porte_w,1,8)
				and	x.dt_vigencia 	<= dt_referencia_p);
	end if;
end if;

return vl_porte_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_valor_porte_cbhpm ( cd_estabelecimento_p bigint, dt_referencia_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_convenio_p bigint, nr_seq_prestador_p bigint, nr_seq_congenere_p bigint) FROM PUBLIC;

