-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_dados_conta_pos ( nr_seq_conta_pos_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE

 
/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/ 
 
ds_retorno_w		varchar(4000) := null;
nr_seq_lote_fat_w	pls_conta_pos_estabelecido.nr_seq_lote_fat%type;
nr_seq_regra_fat_w	pls_lote_faturamento.nr_seq_regra_fat%type;
nr_seq_evento_fat_w	pls_conta_pos_estabelecido.nr_seq_evento_fat%type;


BEGIN 
if (ie_opcao_p = 'CP') then 
	select	max(cd_procedimento) 
	into STRICT	ds_retorno_w 
	from	pls_conta_pos_estabelecido 
	where	nr_sequencia = nr_seq_conta_pos_p;
	 
	if (coalesce(ds_retorno_w::text, '') = '') then 
		select	pls_obter_dados_conta_proc(nr_seq_conta_proc,'C') 
		into STRICT	ds_retorno_w 
		from	pls_conta_pos_estabelecido 
		where	nr_sequencia = nr_seq_conta_pos_p;
	end if;
 
elsif (ie_opcao_p = 'DP') then 
	begin 
	select	substr(coalesce(pls_obter_desc_procedimento(cd_procedimento,ie_origem_proced),pls_obter_dados_conta_proc(nr_seq_conta_proc,'D')),1,255) 
	into STRICT	ds_retorno_w 
	from	pls_conta_pos_estabelecido 
	where	nr_sequencia = nr_seq_conta_pos_p;
	exception 
	when others then 
		ds_retorno_w := null;
	end;
	 
elsif (ie_opcao_p = 'DM') then 
	begin 
	select	substr(pls_obter_dados_conta_mat(nr_seq_conta_mat,'D'),1,255) 
	into STRICT	ds_retorno_w 
	from	pls_conta_pos_estabelecido 
	where	nr_sequencia = nr_seq_conta_pos_p;
	exception 
	when others then 
		ds_retorno_w := null;
	end;
	 
elsif (ie_opcao_p = 'CM') then 
	select	pls_obter_dados_conta_mat(nr_seq_conta_mat,'O') 
	into STRICT	ds_retorno_w 
	from	pls_conta_pos_estabelecido 
	where	nr_sequencia = nr_seq_conta_pos_p;	
 
elsif (ie_opcao_p = 'LF') then		-- Seq Lote de faturamento 
 
	select	max(nr_seq_lote_fat) 
	into STRICT	ds_retorno_w 
	from	pls_conta_pos_estabelecido 
	where	nr_sequencia = nr_seq_conta_pos_p;	
 
elsif (ie_opcao_p = 'RF') then		-- Seq Regra de faturamento 
 
	select	max(nr_seq_lote_fat) 
	into STRICT	nr_seq_lote_fat_w 
	from	pls_conta_pos_estabelecido 
	where	nr_sequencia = nr_seq_conta_pos_p;	
 
	if (nr_seq_lote_fat_w IS NOT NULL AND nr_seq_lote_fat_w::text <> '') then 
		select	max(nr_seq_regra_fat) 
		into STRICT	ds_retorno_w 
		from	pls_lote_faturamento 
		where	nr_sequencia = nr_seq_lote_fat_w;
	end if;
 
elsif (ie_opcao_p = 'EF') then		-- Seq Evento de faturamento 
 
	select	max(nr_seq_evento_fat) 
	into STRICT	ds_retorno_w 
	from	pls_conta_pos_estabelecido 
	where	nr_sequencia = nr_seq_conta_pos_p;	
 
elsif (ie_opcao_p = 'NRF') then		-- Nome Regra de faturamento 
 
	select	max(nr_seq_lote_fat) 
	into STRICT	nr_seq_lote_fat_w 
	from	pls_conta_pos_estabelecido 
	where	nr_sequencia = nr_seq_conta_pos_p;	
 
	if (nr_seq_lote_fat_w IS NOT NULL AND nr_seq_lote_fat_w::text <> '') then 
		select	max(nr_seq_regra_fat) 
		into STRICT	nr_seq_regra_fat_w 
		from	pls_lote_faturamento 
		where	nr_sequencia = nr_seq_lote_fat_w;
	end if;
	 
	if (nr_seq_regra_fat_w IS NOT NULL AND nr_seq_regra_fat_w::text <> '') then 
		select	max(nm_regra) 
		into STRICT	ds_retorno_w 
		from	pls_regra_faturamento 
		where	nr_sequencia	= nr_seq_regra_fat_w;
	end if;
	 
elsif (ie_opcao_p = 'DEF') then		-- Descrição Evento de faturamento 
 
	select	max(nr_seq_evento_fat) 
	into STRICT	nr_seq_evento_fat_w 
	from	pls_conta_pos_estabelecido 
	where	nr_sequencia = nr_seq_conta_pos_p;	
 
	if (nr_seq_evento_fat_w IS NOT NULL AND nr_seq_evento_fat_w::text <> '') then 
		select	max(ds_evento) 
		into STRICT	ds_retorno_w 
		from	pls_evento_faturamento 
		where	nr_sequencia	= nr_seq_evento_fat_w;
	end if;
 
elsif (ie_opcao_p = 'VLA') then		-- Vl taxa int 
	 
	select	max(vl_administracao) 
	into STRICT	ds_retorno_w 
	from	pls_conta_pos_estabelecido 
	where	nr_sequencia	= nr_seq_conta_pos_p;
	 
elsif (ie_opcao_p = 'VLB') then		-- Vl beneficiário 
 
	select	max(vl_beneficiario) 
	into STRICT	ds_retorno_w 
	from	pls_conta_pos_estabelecido 
	where	nr_sequencia	= nr_seq_conta_pos_p;
 
elsif (ie_opcao_p = 'VLT') then		-- Vl total 
 
	select	max(vl_beneficiario + vl_administracao) 
	into STRICT	ds_retorno_w 
	from	pls_conta_pos_estabelecido 
	where	nr_sequencia	= nr_seq_conta_pos_p;
 
end if;
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_dados_conta_pos ( nr_seq_conta_pos_p bigint, ie_opcao_p text) FROM PUBLIC;

