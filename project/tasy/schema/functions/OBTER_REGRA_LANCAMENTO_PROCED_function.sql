-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_regra_lancamento_proced (nr_seq_proced_p bigint, nr_seq_evento_p bigint) RETURNS bigint AS $body$
DECLARE

 
nr_atendimento_w		bigint;
cd_convenio_w			integer;
cd_categoria_w		varchar(10);
dt_execucao_w			timestamp;
cd_medico_executor_w		varchar(10);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_area_proced_w		bigint;
cd_especialidade_proced_w	bigint;
cd_grupo_proced_w		bigint;
ie_tipo_atendimento_w	smallint;
cd_estabelecimento_w		smallint;
cd_edicao_amb_w		integer;
cd_setor_atendimento_w	integer;
nr_seq_regra_w		bigint;
ie_tipo_convenio_w	smallint;
nr_seq_proc_interno_w	bigint;

cd_material_w		material.cd_material%type;
nr_seq_familia_w	material.nr_seq_familia%type;
cd_grupo_material_w	grupo_material.cd_grupo_material%type;
cd_subgrupo_material_w	subgrupo_material.cd_subgrupo_material%type;
cd_classe_material_w	classe_material.cd_classe_material%type;

c01 CURSOR FOR 
	SELECT	a.nr_sequencia 
	from 	regra_Lanc_Automatico a 
	where	a.cd_estabelecimento						= cd_estabelecimento_w 
	and	coalesce(a.cd_convenio, cd_convenio_w)				= cd_convenio_w 
	and	coalesce(a.cd_categoria, cd_categoria_w)			= cd_categoria_w 
	and	coalesce(a.ie_tipo_convenio, ie_tipo_convenio_w)		= ie_tipo_convenio_w 
	and (coalesce(a.ie_tipo_atendimento,coalesce(ie_tipo_atendimento_w,0)) = coalesce(ie_tipo_atendimento_w,0)) 
	and (coalesce(a.nr_seq_evento, nr_seq_evento_p)			= nr_seq_evento_p or 
		coalesce(nr_seq_evento_p::text, '') = '') 
	and (coalesce(a.cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0)) 
	and (coalesce(a.cd_medico, coalesce(cd_medico_executor_w,'0'))		= coalesce(cd_medico_executor_w,'0')) 
	and (coalesce(a.cd_procedimento,cd_procedimento_w) 		= cd_procedimento_w or 
		coalesce(cd_procedimento_w::text, '') = '') 
	and (coalesce(a.ie_origem_proced,ie_origem_proced_w) 		= ie_origem_proced_w or 
		coalesce(ie_origem_proced_w::text, '') = '') 
	and (coalesce(a.cd_area_procedimento,cd_area_proced_w)		= cd_area_proced_w or 
		coalesce(cd_area_proced_w::text, '') = '') 
	and (coalesce(a.cd_especialidade_proc,cd_especialidade_proced_w)	= cd_especialidade_proced_w or 
		coalesce(cd_especialidade_proced_w::text, '') = '') 
	and (coalesce(a.cd_grupo_proc,cd_grupo_proced_w)			= cd_grupo_proced_w or 
		coalesce(cd_grupo_proced_w::text, '') = '') 
	and (coalesce(a.cd_edicao_amb,cd_edicao_amb_w)			= cd_edicao_amb_w or 
		coalesce(cd_edicao_amb_w::text, '') = '') 
	and (coalesce(a.nr_seq_proc_interno, nr_seq_proc_interno_w) 	= nr_seq_proc_interno_w) 
	and	coalesce(a.cd_material,coalesce(cd_material_w,0)) = coalesce(cd_material_w,0) 
	and	coalesce(a.cd_grupo_material,coalesce(cd_grupo_material_w,0)) = coalesce(cd_grupo_material_w,0) 
	and	coalesce(a.cd_subgrupo_material,coalesce(cd_subgrupo_material_w,0)) = coalesce(cd_subgrupo_material_w,0) 
	and	coalesce(a.cd_classe_material,coalesce(cd_classe_material_w,0)) = coalesce(cd_classe_material_w,0) 
	and	coalesce(a.nr_seq_familia,coalesce(nr_seq_familia_w,0)) = coalesce(nr_seq_familia_w,0) 
	and	ie_situacao					= 'A' 
	order by 
			coalesce(a.cd_medico,0), 
			coalesce(a.cd_setor_atendimento,0), 
			coalesce(a.ie_tipo_atendimento,0), 
			coalesce(a.ie_tipo_convenio,0), 
			coalesce(a.cd_convenio,0), 
			coalesce(a.cd_edicao_amb,0), 
			coalesce(a.cd_procedimento,0), 
			coalesce(a.cd_grupo_proc,0), 
			coalesce(a.cd_especialidade_proc,0), 
			coalesce(a.cd_area_procedimento,0);

BEGIN
 
if (nr_seq_evento_p = 132) then 
	nr_seq_proc_interno_w	:= 0;
	 
	select	a.cd_material, 
		a.nr_atendimento, 
		a.cd_convenio, 
		a.cd_categoria, 
		a.dt_atendimento, 
		a.cd_setor_atendimento, 
		b.cd_grupo_material, 
		b.cd_subgrupo_material, 
		b.cd_classe_material, 
		b.nr_seq_familia, 
		obter_tipo_convenio(a.cd_convenio) 
	into STRICT	cd_material_w, 
		nr_atendimento_w, 
		cd_convenio_w, 
		cd_categoria_w, 
		dt_execucao_w, 
		cd_setor_atendimento_w, 
		cd_grupo_material_w, 
		cd_subgrupo_material_w, 
		cd_classe_material_w, 
		nr_seq_familia_w, 
		ie_tipo_convenio_w 
	from	material_atend_paciente a, 
		estrutura_material_v b 
	where	a.cd_material = b.cd_material 
	and	a.nr_sequencia		= nr_seq_proced_p;
else 
	select	a.cd_procedimento, 
		a.ie_origem_proced, 
		a.nr_atendimento, 
		a.cd_medico_executor, 
		a.cd_convenio, 
		a.cd_categoria, 
		a.dt_procedimento, 
		a.cd_setor_atendimento, 
		b.cd_area_procedimento, 
		b.cd_especialidade, 
		b.cd_grupo_proc, 
		obter_tipo_convenio(a.cd_convenio), 
		coalesce(a.nr_seq_proc_interno,0) 
	into STRICT	cd_procedimento_w, 
		ie_origem_proced_w, 
		nr_atendimento_w, 
		cd_medico_executor_w, 
		cd_convenio_w, 
		cd_categoria_w, 
		dt_execucao_w, 
		cd_setor_atendimento_w, 
		cd_area_proced_w, 
		cd_especialidade_proced_w, 
		cd_grupo_proced_w, 
		ie_tipo_convenio_w, 
		nr_seq_proc_interno_w 
	from	procedimento_paciente a, 
		estrutura_procedimento_v b 
	where	a.nr_sequencia		= nr_seq_proced_p 
	and	a.cd_procedimento	= b.cd_procedimento 
	and	a.ie_origem_proced	= b.ie_origem_proced;
end if;
 
select	ie_tipo_atendimento, 
	cd_estabelecimento 
into STRICT	ie_tipo_atendimento_w, 
	cd_estabelecimento_w 
from	atendimento_paciente 
where	nr_atendimento		= nr_atendimento_w;
 
select	max(cd_edicao_amb) 
into STRICT	cd_edicao_amb_w 
from	convenio_amb 
where (cd_estabelecimento	= cd_estabelecimento_w) 
 and (cd_convenio		= cd_convenio_w) 
 and (cd_categoria		= cd_categoria_w) 
 and (coalesce(ie_situacao,'A')	= 'A') 
 and	(dt_inicio_vigencia	= 
	(SELECT max(dt_inicio_vigencia) 
	from	convenio_amb a 
	where (a.cd_estabelecimento	= cd_estabelecimento_w) 
	and (a.cd_convenio		= cd_convenio_w) 
	and (a.cd_categoria		= cd_categoria_w) 
	and (coalesce(a.ie_situacao,'A')	= 'A') 
	and (a.dt_inicio_vigencia	<= dt_execucao_w)));
 
 
open	c01;
loop 
fetch	c01 into nr_seq_regra_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;
 
return	nr_seq_regra_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_regra_lancamento_proced (nr_seq_proced_p bigint, nr_seq_evento_p bigint) FROM PUBLIC;

