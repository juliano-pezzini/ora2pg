-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_cod_grupo_atividade (cd_estabelecimento_p bigint, nr_seq_nota_p text, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


qt_item_w		bigint;
qt_item_serv_w		bigint;
qt_pessoa_juridica_w	bigint;
qt_possui_w		bigint;
cd_cgc_emitente_w	varchar(14);
nr_codigo_serv_prest_w	varchar(10):= null;
retorno_w		varchar(255):= null;
cod_serv_prest_proc_w	varchar(255) := null;
nr_ativ_w		varchar(10):= '0';
cd_item_servico_w	varchar(20);
ds_item_servico_w	varchar(255);
cd_procedimento_w	procedimento.cd_procedimento%type;
cd_grupo_w		grupo_servico.cd_servico%type;

/*
C - Código
D - Descrição
G- Código do Grupo
*/
BEGIN

select	cd_cgc_emitente
into STRICT	cd_cgc_emitente_w
from	nota_fiscal
where	nr_sequencia = nr_seq_nota_p;

select	count(*)
into STRICT	qt_pessoa_juridica_w
from	pessoa_juridica_estab
where	cd_estabelecimento = cd_estabelecimento_p
and	cd_cgc = cd_cgc_emitente_w;

if (qt_pessoa_juridica_w > 0) then

	select	max(nr_codigo_serv_prest)
	into STRICT	nr_ativ_w
	from	pessoa_juridica_estab
	where	cd_estabelecimento = cd_estabelecimento_p
	and	cd_cgc = cd_cgc_emitente_w;

end if;

select	count(*)
into STRICT	qt_item_w
from	nota_fiscal_item
where	nr_sequencia = nr_seq_nota_p;

if (qt_item_w >= 1) then

	select	sum(qt)
	into STRICT	qt_item_serv_w
	from (
		SELECT	count(*) qt
		from	nota_fiscal_item i,
			procedimento p
		where	p.cd_procedimento = i.cd_procedimento
		and	p.ie_origem_proced = i.ie_origem_proced
		and	i.cd_estabelecimento = cd_estabelecimento_p
		and	i.nr_sequencia = nr_seq_nota_p
		and	(p.nr_seq_item_serv IS NOT NULL AND p.nr_seq_item_serv::text <> '')
		
union all

		SELECT	count(*) qt
		from	nota_fiscal_item i,
			material_fiscal p
		where	p.cd_material = i.cd_material
		and	i.cd_estabelecimento = cd_estabelecimento_p
		and	i.nr_sequencia = nr_seq_nota_p
		and	(p.nr_seq_item_serv IS NOT NULL AND p.nr_seq_item_serv::text <> '')
		) alias6;

	if (qt_item_serv_w > 0) then

		select 	max(nr_seq_item_serv),
			max(item)
		into STRICT	nr_codigo_serv_prest_w,
			cd_procedimento_w
		from (
			SELECT	nr_seq_item_serv,
				i.cd_procedimento item
			from	nota_fiscal_item i,
				procedimento p
			where	p.cd_procedimento = i.cd_procedimento
			and	p.ie_origem_proced = i.ie_origem_proced
			and	i.cd_estabelecimento = cd_estabelecimento_p
			and	i.nr_sequencia = nr_seq_nota_p
			and	(p.nr_seq_item_serv IS NOT NULL AND p.nr_seq_item_serv::text <> '')
			
union all

			SELECT	nr_seq_item_serv,
				null item
			from	nota_fiscal_item i,
				material_fiscal p
			where	p.cd_material = i.cd_material
			and	i.cd_estabelecimento = cd_estabelecimento_p
			and	i.nr_sequencia = nr_seq_nota_p
			and	(p.nr_seq_item_serv IS NOT NULL AND p.nr_seq_item_serv::text <> '')) alias5;

	end if;

end if;

if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then

	select	max(nr_seq_servico_item)
	into STRICT	cod_serv_prest_proc_w
	from   	procedimento_item_servico
	where  	cd_procedimento = cd_procedimento_w
	and	cd_estabelecimento = cd_estabelecimento_p;

	if (cod_serv_prest_proc_w IS NOT NULL AND cod_serv_prest_proc_w::text <> '') then
		select	count(*)
		into STRICT	qt_possui_w
		from	grupo_servico_item
		where	nr_sequencia = cod_serv_prest_proc_w;

		if (qt_possui_w > 0) then

			select	max(coalesce(b.cd_prefeitura, b.cd_item_servico)),
				--max(nvl(b.cd_item_servico, 0)),
				max(coalesce(b.ds_item_servico, 0)),
				--max(nvl(b.nr_seq_grupo_serv, 0)) ,
				max(coalesce(a.cd_servico,0))
			into STRICT	cd_item_servico_w,
				ds_item_servico_w,
				cd_grupo_w
			from	grupo_servico a,
				grupo_servico_item b
			where	b.nr_sequencia =   cod_serv_prest_proc_w
			and    a.nr_sequencia =    b.nr_seq_grupo_serv;

			if (ie_opcao_p = 'C') then
				retorno_w:= cd_item_servico_w;
			elsif (ie_opcao_p = 'D') then
				retorno_w:= ds_item_servico_w;
			elsif (ie_opcao_p = 'G') then
				retorno_w:= cd_grupo_w;
			end if;
		end if;
	end if;

end if;

if coalesce(retorno_w::text, '') = '' then

	if (coalesce(nr_codigo_serv_prest_w::text, '') = '') then

		if (ie_opcao_p = 'C') then
			retorno_w:= nr_ativ_w;
		else
			select	count(*)
			into STRICT	qt_possui_w
			from	grupo_servico_item
			where	cd_item_servico = nr_ativ_w;

			if (qt_possui_w > 0) then

				select	ds_item_servico
				into STRICT	retorno_w
				from	grupo_servico_item
				where	cd_item_servico = nr_ativ_w;

			end if;

		end if;

	else

		select	count(*)
		into STRICT	qt_possui_w
		from	grupo_servico_item
		where	nr_sequencia = nr_codigo_serv_prest_w;

		if (qt_possui_w > 0) then

			select	max(coalesce(b.cd_prefeitura, b.cd_item_servico)),
				--max(nvl(b.cd_item_servico, 0)),
				max(coalesce(b.ds_item_servico, 0)),
				--max(nvl(b.nr_seq_grupo_serv, 0)) ,
				max(coalesce(a.cd_servico,0))
			into STRICT	cd_item_servico_w,
				ds_item_servico_w,
				cd_grupo_w
			from	grupo_servico a,
				grupo_servico_item b
			where	b.nr_sequencia =   nr_codigo_serv_prest_w
			and    a.nr_sequencia =    b.nr_seq_grupo_serv;

			if (ie_opcao_p = 'C') then
				retorno_w:= cd_item_servico_w;
			elsif (ie_opcao_p = 'D') then
				retorno_w:= ds_item_servico_w;
			elsif (ie_opcao_p = 'G') then
				retorno_w:= cd_grupo_w;
			end if;
		end if;

	end if;

end if;

return	retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_cod_grupo_atividade (cd_estabelecimento_p bigint, nr_seq_nota_p text, ie_opcao_p text) FROM PUBLIC;

