-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION sus_obter_se_permite_proc ( cd_pessoa_fisica_p text, ie_origem_proced_p bigint, cd_procedimento_p bigint, cd_setor_atendimento_p bigint, cd_estabelecimento_p bigint) RETURNS varchar AS $body$
DECLARE


ie_permite_solic_proc_w		varchar(01) := 'S';
nr_seq_categoria_w		bigint;
nr_seq_area_w			bigint;
qt_regra_w			bigint;
qt_area_w			bigint;

C01 CURSOR FOR
SELECT	coalesce(ie_permite_solic,'S'),
	nr_seq_area
from	sus_regra_solic_proc
where	cd_estabelecimento 	= cd_estabelecimento_p
and	cd_procedimento		= cd_procedimento_p
and	ie_origem_proced		= ie_origem_proced_p
and	ie_situacao		= 'A'
and	coalesce(cd_pessoa_fisica, 'X')	= coalesce(cd_pessoa_fisica_p,'X')
and	coalesce(nr_seq_categoria,nr_seq_categoria_w)	= nr_seq_categoria_w
and	coalesce(cd_setor_atendimento,cd_setor_atendimento_p)	= cd_setor_atendimento_p
order by coalesce(cd_pessoa_fisica, 'X'),
	 coalesce(nr_seq_area,0),
	 coalesce(nr_seq_categoria_w,0);


BEGIN

select	count(*)
into STRICT	qt_regra_w
from	sus_regra_solic_proc
where	cd_estabelecimento 	= cd_estabelecimento_p
and	cd_procedimento		= cd_procedimento_p
and	ie_origem_proced		= ie_origem_proced_p
and	ie_situacao		= 'A';

if (qt_regra_w > 0) then
	begin

	begin
	select	nr_seq_categoria
	into STRICT	nr_seq_categoria_w
	from	medico
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
	exception when others then
		nr_seq_categoria_w := 0;
	end;

	open C01;
	loop
	fetch C01 into
		ie_permite_solic_proc_w,
		nr_seq_area_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (coalesce(nr_seq_area_w,0) > 0) then
			begin

			select	count(*)
			into STRICT	qt_area_w
			from	medico_area_atuacao
			where	nr_seq_area_atuacao = nr_seq_area_w;

			if (qt_area_w = 0) then
				ie_permite_solic_proc_w := 'N';
			end if;
			end;
		else
			ie_permite_solic_proc_w := ie_permite_solic_proc_w;
		end if;
		end;
	end loop;
	close C01;
	end;
else
	ie_permite_solic_proc_w := 'S';
end if;

return	coalesce(ie_permite_solic_proc_w,'S');

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION sus_obter_se_permite_proc ( cd_pessoa_fisica_p text, ie_origem_proced_p bigint, cd_procedimento_p bigint, cd_setor_atendimento_p bigint, cd_estabelecimento_p bigint) FROM PUBLIC;

