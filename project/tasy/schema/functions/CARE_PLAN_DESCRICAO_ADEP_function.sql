-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION care_plan_descricao_adep ( nr_prescricoes_p text, nr_presc_proc_p text, ie_retorno_p text default 'DN') RETURNS varchar AS $body$
 -- DN = ds_display_name, O = ie_classif_ote , OBS - Observation
DECLARE


nr_prescricoes_w                    varchar(2000);
ds_retorno_w                        varchar(2000);
is_care_plan                        bigint;
nr_prescricao_w                     bigint;
pos_arr                             bigint;
loop_max                            bigint;
flag_found_cp                       smallint  := 0;
ds_display_name_w                  	cp_problem.ds_display_name%type;
ie_classif_ote_w					pe_prescr_proc.ie_classif_ote%type;
ds_observacao_w                     pe_prescr_proc_obs.ds_observacao%type;
ds_display_proc_w                   pe_prescr_proc.ds_display_name%type;

BEGIN

    select (length(nr_prescricoes_p) - length(replace(nr_prescricoes_p,'-','')) + 1) into STRICT loop_max;

    nr_prescricoes_w := replace(nr_prescricoes_p, ' ', '');

    begin
        for indice in 1..loop_max loop
            pos_arr := position(',' in nr_prescricoes_w) - 1;
            if (pos_arr = -1) then
                pos_arr := length(nr_prescricoes_w);
            end if;

            nr_prescricao_w 	:= substr(nr_prescricoes_w, 0, pos_arr);
            nr_prescricoes_w 	:= regexp_replace(nr_prescricoes_w, nr_prescricao_w, '', 1, 1);--tirando prescricao encontrada da string
            nr_prescricoes_w 	:= regexp_replace(nr_prescricoes_w, ',', '', 1, 1);--tirando primeira virgula encontrada da string
            select 	count(*)
            into STRICT 	is_care_plan 
            from 	pe_prescricao 
            where 	nr_sequencia = nr_prescricao_w 
			and 	ie_tipo = 'CP';

            if (is_care_plan = 1) then
                if (flag_found_cp = 0) then
                    flag_found_cp := 1;

                if (obter_param_funcao_html5(281, 1614) = 'N') then  
                          SELECT
                           MAX(ds_diagnostico),
                           MAX(ie_classif_ote),
                           MAX(ds_observacao),
                           MAX(ds_display_proc)
                        into STRICT	ds_display_name_w,
                                ie_classif_ote_w,
                                ds_observacao_w,
                                ds_display_proc_w
                        FROM (
                            SELECT 	
                                g.ds_diagnostico,
                                c.ie_classif_ote,
                                obter_observacao_intervencao(c.nr_sequencia) ds_observacao,
                                c.ds_display_name ds_display_proc
								from 	cp_intervention a ,
                                    patient_cp_intervention b,
                                    pe_prescr_proc c,
                                    patient_cp_interv_plan e,
                                    pe_prescr_diag f,
                                    pe_diagnostico g,
                                    pe_PRESCRICAO h
                            where 	a.nr_sequencia 				= b.nr_seq_cp_intervention
                            and 	b.nr_sequencia 				= c.nr_seq_pat_cp_interv
                            and		b.nr_seq_pat_cp_interv_plan = e.nr_sequencia
                            and 	a.nr_seq_pe_procedimento 	= nr_presc_proc_p
                            and 	c.nr_seq_proc 				= a.nr_seq_pe_procedimento
                            and 	c.nr_seq_prescr 			IN (WITH RECURSIVE cte AS (
  	SELECT 
                                                                        regexp_substr(nr_prescricoes_p,'[^,]+', 1, LEVEL)
                                                                     (regexp_substr(nr_prescricoes_p, '[^,]+', 1, LEVEL) IS NOT NULL AND (regexp_substr(nr_prescricoes_p, '[^,]+', 1, LEVEL))::text <> '')  UNION ALL
  	SELECT 
                                                                        regexp_substr(nr_prescricoes_p,'[^,]+', 1, LEVEL) JOIN cte c ON ()

) SELECT * FROM cte;
)
                            and		e.nr_seq_prescr_diag 	    = f.nr_sequencia
                            and		f.nr_seq_diag			    = g.nr_sequencia
                            AND     h.NR_SEQUENCIA              = c.nr_seq_prescr
                            AND     coalesce(h.dt_suspensao::text, '') = ''
                            
UNION ALL

                            SELECT
                               d.ds_diagnostico,
                               a.ie_classif_ote,
                               obter_observacao_intervencao(a.nr_sequencia) ds_observacao,
                               a.ds_display_name ds_display_proc
                            FROM pe_prescr_proc a 
                            INNER JOIN pe_prescr_diag c ON
                                a.IE_RELATED_PROBLEM = c.NR_SEQUENCIA
                            INNER JOIN pe_diagnostico d ON 
                                d.NR_SEQUENCIA = c.NR_SEQ_DIAG
                            INNER JOIN pe_PRESCRICAO e ON
                                a.nr_seq_prescr = e.NR_SEQUENCIA
                            WHERE
                                a.nr_seq_prescr IN (WITH RECURSIVE cte AS (
  SELECT regexp_substr(nr_prescricoes_p,'[^,]+', 1, LEVEL)
                                                         (regexp_substr(nr_prescricoes_p, '[^,]+', 1, LEVEL) IS NOT NULL AND (regexp_substr(nr_prescricoes_p, '[^,]+', 1, LEVEL))::text <> '')  UNION ALL
  SELECT regexp_substr(nr_prescricoes_p,'[^,]+', 1, LEVEL) JOIN cte c ON ()

) SELECT * FROM cte;
) AND 
                                a.nr_seq_proc   = nr_presc_proc_p AND
                                coalesce(e.dt_suspensao::text, '') = ''
                        ) alias22;

                ELSE
                
                    select 		max(g.ds_display_name),
								max(c.ie_classif_ote),
                                max(obter_observacao_intervencao(c.nr_sequencia)),
								max(c.ds_display_name) ds_display_proc
                                into STRICT	ds_display_name_w,
										ie_classif_ote_w,
                                        ds_observacao_w,
										ds_display_proc_w
                                from 	cp_intervention a , 
                                        patient_cp_intervention b,
                                        pe_prescr_proc c,
                                        patient_care_plan d,
                                        patient_cp_interv_plan e,
                                        patient_cp_problem f,
                                        cp_problem g
                                where 	a.nr_sequencia 				= b.nr_seq_cp_intervention
                                and 	b.nr_sequencia 				= c.nr_seq_pat_cp_interv
                                and		b.nr_seq_pat_care_plan 		= d.nr_sequencia
                                and		b.nr_seq_pat_cp_interv_plan = e.nr_sequencia
                                and		e.nr_seq_pat_care_plan 		= d.nr_sequencia
                                and 	a.nr_seq_pe_procedimento 	= nr_presc_proc_p
                                and 	c.nr_seq_proc 				= nr_presc_proc_p
                                and 	d.nr_seq_prescr 			= nr_prescricao_w
                                and 	c.nr_seq_prescr 			= nr_prescricao_w
                                and		e.nr_seq_pat_cp_problem 	= f.nr_sequencia
                                and		f.nr_seq_cp_problem			= g.nr_sequencia;

                END IF;

                end if;	
            end if;
        end loop;

        if (is_care_plan = 1) then
			if (ie_retorno_p = 'DN') then
				ds_retorno_w := obter_desc_expressao(296350)||': '|| ds_display_name_w;
			elsif (ie_retorno_p = 'DS') then
				ds_retorno_w := ds_display_proc_w;
			elsif (ie_retorno_p = 'O') then
				ds_retorno_w := ie_classif_ote_w;
			elsif (ie_retorno_p = 'OBS') then
                ds_retorno_w := lpad(ds_observacao_w, length(ds_observacao_w) + 30, '  ');
			end if;

        else
            ds_retorno_w := null;
        end if;
    exception when others then
        ds_retorno_w := null;
    end;
return ds_retorno_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION care_plan_descricao_adep ( nr_prescricoes_p text, nr_presc_proc_p text, ie_retorno_p text default 'DN') FROM PUBLIC;

