-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_vl_corret_comis_2508 ( nr_seq_mens_seg_p bigint, nr_seq_vendedor_p bigint) RETURNS bigint AS $body$
DECLARE


ds_retorno			double precision;
nr_seq_segurado_w		bigint;
nr_parcela_w			bigint;
vl_mensalidade_w		double precision;
nr_seq_vendedor_w		bigint;
ie_acao_contrato_w		varchar(2);
ie_recebe_valores_w		varchar(1);
vl_premio_w			double precision;
tx_premio_w			double precision;
qt_regra_vigente_w		bigint;
vl_comissao_w			double precision;
dt_mesano_referencia_w		timestamp;
nr_seq_mens_seg_w		bigint;
nr_seq_regra_ven_w		bigint;
qt_idade_w			smallint;
pr_incremento_w			double precision;
ie_tipo_impacto_w		varchar(2);
vl_tot_mensalidade_w		double precision;
vl_adic_mensalidade_w		double precision;
qt_repasse_gerado_w		bigint;
nr_seq_mensalidade_w		bigint;
nr_seq_contrato_w		bigint;
qt_vidas_contrato_w		bigint;
ie_tipo_pessoa_w		varchar(2);
ie_acao_contrato_regra_w	varchar(2);
qt_aprovados_contrato_w		integer;
qt_ativos_w			integer;
ie_tipo_item_w			varchar(2);
vl_item_w			double precision;
nr_seq_motivo_inclusao_w	bigint;
qt_vidas_subcontrato_w		integer	:= 0;
qt_reg_mens_w			smallint;
nr_seq_bonificacao_vinculo_w	bigint;
nr_seq_bonificacao_w		bigint;
ie_tipo_item_mensalidade_w	varchar(50);
ie_tipo_item_bonificacao_w	varchar(255);
ds_tipo_item_bonificacao_w	varchar(255);
ie_bonus_w			varchar(1)	:= 'S';
nr_seq_plano_w			bigint;
nr_seq_sca_w			bigint;
nr_seq_vinculo_sca_w		bigint;
nr_seq_vendedor_seg_w		bigint;
nr_seq_intercambio_w		bigint;
nr_parcela_sca_w		bigint;
nr_seq_repasse_w		bigint;
nr_seq_item_w			bigint;
nr_seq_sca_ww			bigint;
nr_seq_repasse_sca_w		bigint;
nr_seq_item_sca_w		bigint;
nr_seq_plano_item_w		bigint;
vl_incremento_w			double precision;
vl_incremento_total_w		double precision;
vl_total_item_w			double precision;
ie_sca_embutido_w		varchar(1);
tx_premios_w			double precision;
vl_total_comissao_w		double precision;
nr_seq_sca_vinculo_w		bigint;
ie_proporcional_w		varchar(2);
ie_primeira_parc_integral_w	varchar(2);
qt_itens_liberados_w		bigint;
qt_dias_contrato_adesao_w	bigint;
nr_seq_pagador_w		bigint;
nr_parcela_integral_w		bigint;
nr_seq_grupo_produto_w		bigint;
nr_seq_regra_ven_ww		bigint;
ie_acao_contrato_regra_ww	varchar(2);
ie_recebe_valores_ww		varchar(1);
vl_premio_ww			double precision;
tx_premio_ww			double precision;
tx_incremento_w			double precision;
ie_tipo_item_mensalidade_ww	varchar(50);
nr_seq_grupo_produto_ww		bigint;
nr_seq_portabilidade_w		bigint;
ie_divisao_repasse_w		varchar(2);
tx_repasse_divisao_w		double precision;
nr_seq_vendedor_regra_w		bigint;
qt_meses_meta_w			bigint;
ie_meta_atingida_w		varchar(2);

ie_diferenca_migracao_w		varchar(1);
ie_diferenca_migracao_ww	varchar(1);
nr_seq_segurado_ant_w		bigint;
vl_segurado_ant_w		double precision;

C01 CURSOR FOR
	SELECT	a.nr_seq_segurado,
		a.nr_parcela,
		a.vl_mensalidade,
		a.dt_mesano_referencia,
		a.nr_sequencia,
		a.qt_idade,
		coalesce(b.nr_seq_motivo_inclusao,0),
		b.nr_seq_vendedor_canal,
		b.ie_acao_contrato,
		b.nr_seq_plano,
		b.nr_seq_portabilidade,
		b.nr_seq_segurado_ant,
		coalesce(b.ie_divisao_repasse,'N'),
		0 tx_repasse,
		c.nr_sequencia,
		d.nr_seq_contrato,
		c.nr_seq_pagador
	from	pls_mensalidade_segurado 	a,
		pls_segurado			b,
		pls_mensalidade			c,
		pls_contrato_pagador		d
	where	a.nr_seq_mensalidade	= c.nr_sequencia
	and	a.nr_seq_segurado	= b.nr_sequencia
	and	d.nr_sequencia		= c.nr_seq_pagador
	and	a.nr_sequencia		= nr_seq_mens_seg_p
	and	((coalesce(nr_seq_vendedor_p::text, '') = '') or (nr_seq_vendedor_p = b.nr_seq_vendedor_canal))
	and	coalesce(b.ie_divisao_repasse,'N') = 'N'
	and	coalesce(d.nr_seq_pagador_intercambio::text, '') = ''
	
union all

	SELECT	a.nr_seq_segurado,
		a.nr_parcela,
		a.vl_mensalidade,
		a.dt_mesano_referencia,
		a.nr_sequencia,
		a.qt_idade,
		coalesce(b.nr_seq_motivo_inclusao,0),
		d.nr_seq_vendedor_canal,
		b.ie_acao_contrato,
		b.nr_seq_plano,
		b.nr_seq_portabilidade,
		b.nr_seq_segurado_ant,
		coalesce(b.ie_divisao_repasse,'N'),
		0 tx_repasse,
		c.nr_sequencia,
		e.nr_seq_contrato,
		c.nr_seq_pagador
	from	pls_mensalidade_segurado	a,
		pls_segurado			b,
		pls_mensalidade			c,
		pls_segurado_canal_compl	d,
		pls_contrato_pagador		e
	where	a.nr_seq_mensalidade	= c.nr_sequencia
	and	a.nr_seq_segurado	= b.nr_sequencia
	and	d.nr_seq_segurado	= b.nr_sequencia
	and	e.nr_sequencia		= c.nr_seq_pagador
	and	a.nr_sequencia		= nr_seq_mens_seg_p
	and	((coalesce(nr_seq_vendedor_p::text, '') = '') or (nr_seq_vendedor_p = d.nr_seq_vendedor_canal))
	and	coalesce(b.ie_divisao_repasse,'N') = 'N'
	and	coalesce(e.nr_seq_pagador_intercambio::text, '') = ''
	
union all

	select	a.nr_seq_segurado,
		a.nr_parcela,
		a.vl_mensalidade,
		a.dt_mesano_referencia,
		a.nr_sequencia,
		a.qt_idade,
		coalesce(b.nr_seq_motivo_inclusao,0),
		d.nr_seq_vendedor_canal,
		b.ie_acao_contrato,
		b.nr_seq_plano,
		b.nr_seq_portabilidade,
		b.nr_seq_segurado_ant,
		coalesce(b.ie_divisao_repasse,'N'),
		coalesce(d.tx_repasse,0),
		c.nr_sequencia,
		e.nr_seq_contrato,
		c.nr_seq_pagador
	from	pls_mensalidade_segurado 	a,
		pls_segurado			b,
		pls_mensalidade			c,
		pls_segurado_vendedor		d,
		pls_contrato_pagador		e
	where	a.nr_seq_mensalidade	= c.nr_sequencia
	and	a.nr_seq_segurado	= b.nr_sequencia
	and	b.nr_sequencia		= d.nr_seq_segurado
	and	e.nr_sequencia		= c.nr_seq_pagador
	and	a.nr_sequencia		= nr_seq_mens_seg_p
	and	((coalesce(nr_seq_vendedor_p::text, '') = '') or (nr_seq_vendedor_p = d.nr_seq_vendedor_canal))
	and	coalesce(b.ie_divisao_repasse,'N') = 'S'
	and	coalesce(e.nr_seq_pagador_intercambio::text, '') = '';

C02 CURSOR FOR
	SELECT	a.ie_tipo_item,
		a.vl_item,
		a.nr_seq_bonificacao_vinculo,
		a.nr_seq_vinculo_sca,
		a.nr_parcela_sca,
		a.nr_sequencia,
		'N' ie_sca_embutido
	FROM pls_segurado d, pls_mensalidade_segurado c, pls_mensalidade_seg_item a
LEFT OUTER JOIN pls_sca_vinculo b ON (a.nr_seq_vinculo_sca = b.nr_sequencia)
WHERE a.nr_seq_mensalidade_seg	= c.nr_sequencia and c.nr_seq_segurado		= d.nr_sequencia and a.ie_tipo_mensalidade 		= 'N' and c.nr_sequencia			= nr_seq_mens_seg_p and ((coalesce(b.nr_seq_vendedor_canal::text, '') = '') or (b.nr_seq_vendedor_canal = d.nr_seq_vendedor_canal))
	
union all

	SELECT	'15', /* buscar os SCAs embutidos no preço pré-estabelecido */
		e.vl_parcela,
		null,
		e.nr_seq_vinculo_sca,
		e.nr_parcela,
		a.nr_sequencia,
		'S' ie_sca_embutido
	FROM pls_mensalidade_sca e, pls_segurado d, pls_mensalidade_segurado c, pls_mensalidade_seg_item a
LEFT OUTER JOIN pls_sca_vinculo b ON (a.nr_seq_vinculo_sca = b.nr_sequencia)
WHERE a.nr_seq_mensalidade_seg	= c.nr_sequencia and c.nr_seq_segurado		= d.nr_sequencia and e.nr_seq_item_mens		= a.nr_sequencia and a.ie_tipo_item			= '1' and a.ie_tipo_mensalidade 		= 'N' and c.nr_sequencia			= nr_seq_mens_seg_p and ((coalesce(b.nr_seq_vendedor_canal::text, '') = '') or (b.nr_seq_vendedor_canal = d.nr_seq_vendedor_canal));

C03 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_acao_contrato,
		a.ie_recebe_valores,
		coalesce(a.vl_premio,0),
		coalesce(a.tx_premio,0),
		a.ie_tipo_item_mensalidade,
		a.nr_seq_grupo_produto,
		a.ie_diferenca_migracao,
		coalesce(a.qt_meses_meta,0)
	from	pls_vendedor_regra	a,
		pls_vendedor		b
	where	a.nr_seq_vendedor	= b.nr_sequencia
	and	((ie_divisao_repasse_w = 'N' and b.nr_sequencia = nr_seq_vendedor_w) or (ie_divisao_repasse_w = 'S' and b.nr_sequencia = nr_seq_vendedor_regra_w))
	and (trunc(a.dt_inicio_vigencia,'dd') <= trunc(dt_mesano_referencia_w,'dd'))
	and (coalesce(a.dt_fim_vigencia::text, '') = '' or trunc(a.dt_fim_vigencia,'dd') >= trunc(dt_mesano_referencia_w,'dd'))
	and	((coalesce(ie_primeira_parc_integral,'N') = 'N' and coalesce(nr_parcela_w,a.nr_parcela_inicial) >= a.nr_parcela_inicial and coalesce(nr_parcela_w,a.nr_parcela_final) <= a.nr_parcela_final)
	or (coalesce(ie_primeira_parc_integral,'N') = 'S' and coalesce(nr_parcela_integral_w, a.nr_parcela_inicial) >= a.nr_parcela_inicial and coalesce(nr_parcela_integral_w, a.nr_parcela_final) <= a.nr_parcela_final))
	and	((ie_tipo_item_w <> '15') or ((ie_tipo_item_w = '15') and (nr_parcela_sca_w >= coalesce(a.nr_parcela_inicial_sca,nr_parcela_sca_w) and nr_parcela_sca_w <= coalesce(a.nr_parcela_final_sca,nr_parcela_sca_w))))
	and	((a.ie_acao_contrato = ie_acao_contrato_w) or (coalesce(a.ie_acao_contrato::text, '') = ''))
	and	(((a.ie_tipo_pessoa = ie_tipo_pessoa_w) or (coalesce(a.ie_tipo_pessoa::text, '') = '')) or (a.ie_tipo_pessoa = 'A'))
	and	((a.ie_aprovacao_benef_ativo = 'S' and coalesce(qt_ativos_w,0) >= coalesce(qt_aprovados_contrato_w,0)) or (a.ie_aprovacao_benef_ativo = 'N'))
	and	((a.nr_seq_motivo_inclusao = nr_seq_motivo_inclusao_w) or (coalesce(a.nr_seq_motivo_inclusao::text, '') = ''))
	and	((a.nr_seq_plano = nr_seq_plano_w) or (coalesce(a.nr_seq_plano::text, '') = ''))
	and	((a.nr_seq_sca = nr_seq_sca_w) or (coalesce(a.nr_seq_sca::text, '') = ''))
	and	((a.nr_seq_grupo_produto IS NOT NULL AND a.nr_seq_grupo_produto::text <> '' AND nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '')
	or (coalesce(a.nr_seq_grupo_produto::text, '') = ''))
	and	qt_idade_w between coalesce(a.qt_idade_inicial,qt_idade_w) and coalesce(a.qt_idade_final,qt_idade_w)
	and (qt_dias_contrato_adesao_w between coalesce(qt_dias_contrato, qt_dias_contrato_adesao_w) and coalesce(qt_dias_contrato_fim, qt_dias_contrato_adesao_w))
	and	((coalesce(a.ie_portabilidade,'N') = 'S' and (nr_seq_portabilidade_w IS NOT NULL AND nr_seq_portabilidade_w::text <> '')) or coalesce(a.ie_portabilidade,'N') = 'N')
	and	b.ie_situacao = 'A'
	order by	coalesce(a.nr_seq_sca,0),
			coalesce(a.nr_seq_plano,0),
			coalesce(a.nr_seq_grupo_produto,0),
			coalesce(a.nr_seq_motivo_inclusao,0), -- OS 114198 - Paulo - 24/10/2008 - Campo mais restritivo
			coalesce(a.ie_acao_contrato,'9') desc,
			coalesce(a.ie_tipo_item_mensalidade,'A'),
			coalesce(a.nr_parcela_inicial,0),
			coalesce(a.nr_parcela_final,0),
			coalesce(a.nr_parcela_inicial_sca,0),
			coalesce(a.nr_parcela_final_sca,0),
			coalesce(a.ie_portabilidade,'N'),
			a.dt_inicio_vigencia,
			a.dt_fim_vigencia;

C04 CURSOR FOR
	SELECT	coalesce(a.pr_incremento,0)
	from	pls_regra_adic_benef	a,
		pls_vendedor_regra	b
	where	a.nr_seq_regra_ven	= b.nr_sequencia
	and	b.nr_sequencia		= nr_seq_regra_ven_w
	and (qt_idade_w between coalesce(a.qt_idade_min,qt_idade_w) and coalesce(a.qt_idade_max,qt_idade_w))
	and	((a.ie_tipo_impacto_cpt = ie_tipo_impacto_w) or (coalesce(a.ie_tipo_impacto_cpt::text, '') = ''))
	and	(((a.ie_tipo_pessoa = ie_tipo_pessoa_w) or (coalesce(a.ie_tipo_pessoa::text, '') = '')) or (a.ie_tipo_pessoa = 'A'))
	and	((qt_vidas_contrato_w between coalesce(a.qt_vidas_min,qt_vidas_contrato_w) and coalesce(a.qt_vidas_max,qt_vidas_contrato_w))
		or (nr_seq_mens_seg_p = 7499484) and (3 between coalesce(a.qt_vidas_min,3) and coalesce(a.qt_vidas_max,3)))
	and	((a.ie_acao_contrato = ie_acao_contrato_w) or (coalesce(a.ie_acao_contrato::text, '') = ''))
	and	a.ie_situacao = 'A'
	and	b.ie_situacao = 'A'
	order by	a.ie_acao_contrato,
			a.ie_tipo_impacto_cpt,
			a.qt_vidas_min,
			a.qt_vidas_max,
			a.ie_tipo_pessoa;

C05 CURSOR FOR
	SELECT	b.ie_tipo_impacto
	from	pls_carencia		a,
		pls_tipo_carencia	b,
		pls_segurado		c
	where	a.nr_seq_tipo_carencia	= b.nr_sequencia
	and	a.nr_seq_segurado	= c.nr_sequencia
	and	c.nr_sequencia		= nr_seq_segurado_w
	order by CASE WHEN b.ie_tipo_impacto='N' THEN 0 WHEN b.ie_tipo_impacto='B' THEN 1 WHEN b.ie_tipo_impacto='M' THEN 2 WHEN b.ie_tipo_impacto='A' THEN 3 END;

C06 CURSOR FOR
	SELECT	a.ie_tipo_item
	from	pls_bonificacao_regra	a,
		pls_bonificacao		b
	where	a.nr_seq_bonificacao	= b.nr_sequencia
	and	a.ie_tipo_regra		= 'M'
	and	b.nr_sequencia		= nr_seq_bonificacao_w;

C07 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_tipo_item,
		a.vl_item,
		a.nr_seq_bonificacao_vinculo,
		a.nr_seq_vinculo_sca,
		a.nr_parcela_sca
	FROM pls_segurado d, pls_mensalidade_segurado c, pls_mensalidade_seg_item a
LEFT OUTER JOIN pls_sca_vinculo b ON (a.nr_seq_vinculo_sca = b.nr_sequencia)
WHERE a.nr_seq_mensalidade_seg	= c.nr_sequencia and c.nr_seq_segurado		= d.nr_sequencia and c.nr_sequencia			= nr_seq_mens_seg_p and a.ie_tipo_mensalidade 		= 'N' and a.ie_tipo_item			= 15 and (b.nr_seq_vendedor_canal IS NOT NULL AND b.nr_seq_vendedor_canal::text <> '') and b.nr_seq_vendedor_canal = nr_seq_vendedor_w and b.nr_seq_vendedor_canal <> d.nr_seq_vendedor_canal;

C09 CURSOR FOR
	SELECT	a.nr_seq_segurado,
		a.nr_parcela,
		a.vl_mensalidade,
		a.dt_mesano_referencia,
		a.nr_sequencia,
		a.qt_idade,
		coalesce(b.nr_seq_motivo_inclusao,0),
		b.ie_acao_contrato,
		b.nr_seq_plano,
		d.nr_seq_vendedor_canal,
		coalesce(b.ie_divisao_repasse,'N'),
		c.nr_sequencia,
		e.nr_seq_contrato,
		c.nr_seq_pagador
	from	pls_mensalidade_segurado 	a,
		pls_segurado			b,
		pls_mensalidade			c,
		pls_sca_vinculo			d,
		pls_contrato_pagador 		e
	where	a.nr_seq_mensalidade	= c.nr_sequencia
	and	a.nr_seq_segurado	= b.nr_sequencia
	and	b.nr_sequencia 		= d.nr_seq_segurado
	and	e.nr_sequencia	= c.nr_seq_pagador
	and	(d.nr_seq_vendedor_canal IS NOT NULL AND d.nr_seq_vendedor_canal::text <> '')
	and	c.nr_sequencia		= nr_seq_mensalidade_w
	and	b.nr_seq_vendedor_canal <> d.nr_seq_vendedor_canal
	and	((coalesce(nr_seq_vendedor_p::text, '') = '') or (nr_seq_vendedor_p = d.nr_seq_vendedor_canal))
	and	coalesce(b.ie_divisao_repasse,'N') = 'N'
	and	coalesce(c.ie_cancelamento::text, '') = ''
	and	coalesce(e.nr_seq_pagador_intercambio::text, '') = ''
	group by a.nr_seq_segurado,
		a.nr_parcela,
		a.vl_mensalidade,
		a.dt_mesano_referencia,
		a.nr_sequencia,
		a.qt_idade,
		b.nr_seq_motivo_inclusao,
		b.ie_acao_contrato,
		b.dt_contratacao,
		b.nr_seq_plano,
		d.nr_seq_vendedor_canal,
		b.ie_divisao_repasse,
		c.nr_sequencia,
		e.nr_seq_contrato,
		c.nr_seq_pagador;


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_segurado_w,
	nr_parcela_w,
	vl_tot_mensalidade_w,
	dt_mesano_referencia_w,
	nr_seq_mens_seg_w,
	qt_idade_w,
	nr_seq_motivo_inclusao_w,
	nr_seq_vendedor_w,
	ie_acao_contrato_w,
	nr_seq_plano_w,
	nr_seq_portabilidade_w,
	nr_seq_segurado_ant_w,
	ie_divisao_repasse_w,
	tx_repasse_divisao_w,
	nr_seq_mensalidade_w,
	nr_seq_contrato_w,
	nr_seq_pagador_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
		select	count(*)
		into STRICT	qt_vidas_contrato_w
		from	pls_segurado	a,
			pls_contrato	b
		where	a.nr_seq_contrato	= b.nr_sequencia
		and	b.nr_sequencia		= nr_seq_contrato_w;

		select	count(*)
		into STRICT	qt_vidas_subcontrato_w
		from	pls_contrato	b,
			pls_segurado	a
		where	a.nr_seq_contrato	= b.nr_sequencia
		and	b.nr_contrato_principal	= nr_seq_contrato_w;
	end if;

	qt_vidas_contrato_w	:= coalesce(qt_vidas_contrato_w,0) + coalesce(qt_vidas_subcontrato_w,0);

	if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
		select	CASE WHEN coalesce(cd_pf_estipulante::text, '') = '' THEN 'PJ'  ELSE 'PF' END
		into STRICT	ie_tipo_pessoa_w
		from	pls_contrato
		where	nr_sequencia	= nr_seq_contrato_w;

		select	count(*)
		into STRICT	qt_ativos_w
		from	pls_segurado	a,
			pls_contrato	b
		where	a.nr_seq_contrato	= b.nr_sequencia
		and	b.nr_sequencia		= nr_seq_contrato_w
		and	coalesce(a.dt_rescisao::text, '') = ''
		and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '');

		select	count(*)
		into STRICT	qt_aprovados_contrato_w
		from	pls_segurado	a,
			pls_contrato	b
		where	a.nr_seq_contrato	= b.nr_sequencia
		and	b.nr_sequencia		= nr_seq_contrato_w
		and	a.ie_acao_contrato	= 'A';
	end if;

	nr_parcela_integral_w 		:= -1;
	nr_seq_vendedor_regra_w 	:= null;

	begin
	select	CASE WHEN a.ie_proporcional='S' THEN 'P' WHEN a.ie_proporcional='N' THEN 'I' END
	into STRICT	ie_proporcional_w
	from	pls_mensalidade_segurado	b,
		pls_mensalidade			a
	where	a.nr_sequencia = b.nr_seq_mensalidade
	and	b.nr_parcela = 1
	and	a.nr_sequencia = nr_seq_mensalidade_w;
	exception
	when others then
		ie_proporcional_w := null;
	end;

	if (ie_proporcional_w IS NOT NULL AND ie_proporcional_w::text <> '') then
		ie_primeira_parc_integral_w := ie_proporcional_w;
	else
		begin
		select	a.ie_calc_primeira_mens
		into STRICT	ie_primeira_parc_integral_w
		from	pls_mensalidade_segurado	c,
			pls_mensalidade			b,
			pls_contrato_pagador		a
		where	a.nr_sequencia 		= b.nr_seq_pagador
		and	b.nr_sequencia 		= c.nr_seq_mensalidade
		and	a.nr_sequencia 		= nr_seq_pagador_w
		and	c.nr_seq_segurado 	= nr_seq_segurado_w
		and	c.nr_parcela = 1
		group by a.ie_calc_primeira_mens;
		exception
		when others then
			ie_primeira_parc_integral_w := 'I';
		end;
	end if;

	if (ie_primeira_parc_integral_w = 'P') then
		nr_parcela_integral_w := nr_parcela_w - 1;
	elsif (ie_primeira_parc_integral_w = 'I') then
		nr_parcela_integral_w := nr_parcela_w;
	end if;

	if (coalesce(qt_idade_w::text, '') = '') then
		select	trunc(months_between(dt_mesano_referencia_w, b.dt_nascimento) / 12)
		into STRICT	qt_idade_w
		from	pls_segurado	a,
			pessoa_fisica	b
		where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
		and	a.nr_sequencia		= nr_seq_segurado_w;
	end if;

	ie_tipo_impacto_w	:= 'N';

	/*Obter a quantidade de dias entre a data de contratação e a data de adesão do beneficiário. */

	if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
		select	b.dt_contratacao - a.dt_contrato
		into STRICT	qt_dias_contrato_adesao_w
		from	pls_segurado	b,
			pls_contrato	a
		where	a.nr_sequencia = b.nr_seq_contrato
		and	b.nr_sequencia = nr_seq_segurado_w;
	end if;

	open C05; /* Impacto do CPT */
	loop
	fetch C05 into
		ie_tipo_impacto_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
	end loop;
	close C05;

	if (ie_divisao_repasse_w = 'S') then
		select	nr_seq_vendedor_canal
		into STRICT	nr_seq_vendedor_regra_w
		from	pls_segurado_vendedor
		where	nr_seq_segurado = nr_seq_segurado_w
		and	ie_vendedor_base = 'S';
	end if;

	select	count(*)
	into STRICT	qt_regra_vigente_w
	from	pls_vendedor_regra	a,
		pls_vendedor		b
	where	a.nr_seq_vendedor	= b.nr_sequencia
	and	b.nr_sequencia		= coalesce(nr_seq_vendedor_regra_w, nr_seq_vendedor_w)
	and (trunc(a.dt_inicio_vigencia,'dd') <= trunc(clock_timestamp(),'dd'))
	and (coalesce(a.dt_fim_vigencia::text, '') = '' or trunc(a.dt_fim_vigencia,'dd') > trunc(clock_timestamp(),'dd'))
	and	a.ie_situacao = 'A';

	nr_seq_vendedor_seg_w	:= nr_seq_vendedor_w;

	if (qt_regra_vigente_w > 0) then
		vl_mensalidade_w	:= 0;
		vl_total_item_w		:= 0;
		vl_total_comissao_w	:= 0;
		vl_incremento_total_w	:= 0;

		open C02;
		loop
		fetch C02 into
			ie_tipo_item_w,
			vl_item_w,
			nr_seq_bonificacao_vinculo_w,
			nr_seq_vinculo_sca_w,
			nr_parcela_sca_w,
			nr_seq_item_w,
			ie_sca_embutido_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			begin
			select	coalesce(b.nr_sequencia,0)
			into STRICT	nr_seq_sca_vinculo_w
			from	pls_sca_vinculo		b,
				pls_segurado		a
			where	a.nr_sequencia = b.nr_seq_segurado
			and	a.nr_sequencia = nr_seq_segurado_w
			and	b.nr_sequencia = nr_seq_vinculo_sca_w
			and	b.nr_seq_vendedor_canal = nr_seq_vendedor_p
			and	b.nr_seq_vendedor_canal <> a.nr_seq_vendedor_canal;
			exception
			when others then
				nr_seq_sca_vinculo_w	:= 0;
			end;

			if (coalesce(nr_seq_vinculo_sca_w,0) <> nr_seq_sca_vinculo_w or nr_seq_sca_vinculo_w = 0) then
				ie_bonus_w			:= 'N';
				ds_tipo_item_bonificacao_w	:= '';
				nr_seq_sca_w			:= null;
				nr_seq_bonificacao_w		:= null;
				nr_seq_plano_item_w		:= null;
				vl_comissao_w			:= 0;

				if (ie_tipo_item_w = '15') then
					select	max(nr_seq_plano),
						coalesce(max(nr_seq_vendedor_canal),nr_seq_vendedor_w)
					into STRICT	nr_seq_sca_w,
						nr_seq_vendedor_w
					from	pls_sca_vinculo
					where	nr_sequencia	= nr_seq_vinculo_sca_w;

					nr_seq_sca_ww	:= nr_seq_sca_w;
				elsif (ie_tipo_item_w	in ('1','12')) then
					nr_seq_plano_item_w	:= nr_seq_plano_w;
				end if;

				if (nr_seq_vendedor_seg_w = nr_seq_vendedor_w) then
					if 	((coalesce(nr_seq_bonificacao_vinculo_w,0) <> 0) and (ie_tipo_item_w ='14')) then
						select	nr_seq_bonificacao
						into STRICT	nr_seq_bonificacao_w
						from	pls_bonificacao_vinculo
						where	nr_sequencia	= nr_seq_bonificacao_vinculo_w;

						open C06;
						loop
						fetch C06 into
							ie_tipo_item_bonificacao_w;
						EXIT WHEN NOT FOUND; /* apply on C06 */
							begin
							ds_tipo_item_bonificacao_w	:= ds_tipo_item_bonificacao_w || ',' || ie_tipo_item_bonificacao_w;
							end;
						end loop;
						close C06;
						ds_tipo_item_bonificacao_w	:= substr(ds_tipo_item_bonificacao_w,2,length(ds_tipo_item_bonificacao_w));
						ie_bonus_w	:= 'S';
					end if;

					tx_premios_w			:= 0;
					tx_incremento_w			:= 0;
					nr_seq_regra_ven_w 		:= null;
					ie_acao_contrato_regra_w	:= null;
					ie_recebe_valores_w		:= null;
					vl_premio_w			:= null;
					tx_premio_w			:= null;
					ie_tipo_item_mensalidade_w	:= null;
					nr_seq_grupo_produto_w		:= null;
					ie_meta_atingida_w		:= 'N';

					open C03;
					loop
					fetch C03 into
						nr_seq_regra_ven_ww,
						ie_acao_contrato_regra_ww,
						ie_recebe_valores_ww,
						vl_premio_ww,
						tx_premio_ww,
						ie_tipo_item_mensalidade_ww,
						nr_seq_grupo_produto_ww,
						ie_diferenca_migracao_ww,
						qt_meses_meta_w;
					EXIT WHEN NOT FOUND; /* apply on C03 */
						if (qt_meses_meta_w > 0) then
							ie_meta_atingida_w	:= pls_obter_se_meta_atingida(nr_seq_vendedor_p,dt_mesano_referencia_w,qt_meses_meta_w);
						end if;
						if	(((nr_seq_grupo_produto_ww IS NOT NULL AND nr_seq_grupo_produto_ww::text <> '') and (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') and pls_se_grupo_preco_produto(nr_seq_grupo_produto_ww,nr_seq_plano_w) = 'S') or (coalesce(nr_seq_grupo_produto_ww::text, '') = '')) then
							if (pls_obter_item_mens(ie_tipo_item_mensalidade_ww,ie_tipo_item_w) = 'S') then
								if	((ie_bonus_w = 'S' and pls_obter_item_mens(ie_tipo_item_mensalidade_ww, ds_tipo_item_bonificacao_w) = 'S') or (ie_bonus_w = 'N')) then
									if (qt_meses_meta_w = 0 or ie_meta_atingida_w in ('S','M')) then
										if (ie_meta_atingida_w = 'M') then
											CALL wheb_mensagem_pck.exibir_mensagem_abort(223106);
											/* Mensagem: Favor verificar se o canal de vendas possui metas informadas. */

										end if;

										nr_seq_regra_ven_w 		:= nr_seq_regra_ven_ww;
										ie_acao_contrato_regra_w	:= ie_acao_contrato_regra_ww;
										ie_recebe_valores_w		:= ie_recebe_valores_ww;
										vl_premio_w			:= vl_premio_ww;
										tx_premio_w			:= tx_premio_ww	;
										ie_tipo_item_mensalidade_w	:= ie_tipo_item_mensalidade_ww;
										nr_seq_grupo_produto_w		:= nr_seq_grupo_produto_ww;
										ie_diferenca_migracao_w		:= ie_diferenca_migracao_ww;
									end if;
								end if;
							end if;
						end if;
					end loop;
					close C03;

					if (ie_tipo_item_w = '1') and (ie_diferenca_migracao_w = 'S') and (nr_seq_segurado_ant_w IS NOT NULL AND nr_seq_segurado_ant_w::text <> '') then
						select	max(vl_preco_atual)
						into STRICT	vl_segurado_ant_w
						from	pls_segurado_preco
						where	nr_sequencia	= (	SELECT	max(x.nr_sequencia)
										from	pls_segurado_preco x
										where	x.nr_seq_segurado	= nr_seq_segurado_ant_w
										and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> ''));
						if (coalesce(vl_item_w,0) > coalesce(vl_segurado_ant_w,0)) then
							vl_item_w	:= vl_item_w - vl_segurado_ant_w;
						else
							vl_item_w	:= 0;
						end if;
					end if;

					tx_premios_w := tx_premio_w;

					open C04; /* Itens adicionais */
					loop
					fetch C04 into
						pr_incremento_w;
					EXIT WHEN NOT FOUND; /* apply on C04 */
						tx_premios_w	:= tx_premios_w + pr_incremento_w;
						tx_incremento_w	:= tx_incremento_w + pr_incremento_w;
					end loop;
					close c04;

					if (coalesce(nr_seq_regra_ven_w,0) > 0) then
						if (ie_recebe_valores_w = 'S') then
							select	sum(a.vl_item)
							into STRICT	vl_adic_mensalidade_w
							from	pls_mensalidade_seg_item	a,
								pls_mensalidade_segurado	b
							where	a.nr_seq_mensalidade_seg = b.nr_sequencia
							and	b.nr_sequencia		 = nr_seq_mens_seg_w
							and	a.ie_tipo_mensalidade = 'A';

							vl_comissao_w := (vl_comissao_w + coalesce(vl_adic_mensalidade_w,0));
						end if;

						if 	((tx_premios_w > 0) or (vl_premio_w > 0)) then

							vl_mensalidade_w := (round((vl_item_w * tx_premio_w) / 100,2) + vl_premio_w);
							vl_incremento_w	:= coalesce((round((vl_item_w * coalesce(tx_incremento_w,0)) / 100,2) + vl_premio_w),0);
							vl_comissao_w := coalesce(vl_comissao_w,0) + coalesce(vl_mensalidade_w,0) + coalesce(vl_incremento_w,0);

							vl_incremento_total_w	:= coalesce(vl_incremento_total_w,0) + vl_incremento_w;
							vl_total_item_w	:= coalesce(vl_total_item_w,0) + coalesce(vl_item_w,0);
							vl_total_comissao_w := coalesce(vl_total_comissao_w,0) + coalesce(vl_comissao_w,0);

							if (ie_divisao_repasse_w = 'S') then
								vl_comissao_w := round((vl_comissao_w * tx_repasse_divisao_w) / 100,2);
							end if;
						end if;
					end if;
				end if;
			end if;
			end;
		end loop;
		close C02;
	end if;
	end;
end loop;
close C01;
open C09;
loop
fetch C09 into
	nr_seq_segurado_w,
	nr_parcela_w,
	vl_tot_mensalidade_w,
	dt_mesano_referencia_w,
	nr_seq_mens_seg_w,
	qt_idade_w,
	nr_seq_motivo_inclusao_w,
	ie_acao_contrato_w,
	nr_seq_plano_w,
	nr_seq_vendedor_w,
	ie_divisao_repasse_w,
	nr_seq_mensalidade_w,
	nr_seq_contrato_w,
	nr_seq_pagador_w;
EXIT WHEN NOT FOUND; /* apply on C09 */
	begin

	if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
		select	CASE WHEN coalesce(cd_pf_estipulante::text, '') = '' THEN 'PJ'  ELSE 'PF' END
		into STRICT	ie_tipo_pessoa_w
		from	pls_contrato
		where	nr_sequencia	= nr_seq_contrato_w;

		select	count(*)
		into STRICT	qt_vidas_subcontrato_w
		from	pls_contrato	b,
			pls_segurado	a
		where	a.nr_seq_contrato	= b.nr_sequencia
		and	b.nr_contrato_principal	= nr_seq_contrato_w;
	end if;

	qt_vidas_contrato_w	:= coalesce(qt_vidas_contrato_w,0) + coalesce(qt_vidas_subcontrato_w,0);

	vl_total_comissao_w 	:= 0;
	vl_incremento_total_w	:= 0;
	vl_total_item_w		:= 0;
	nr_parcela_integral_w 	:= null;

	begin
	select	CASE WHEN a.ie_proporcional='S' THEN 'P' WHEN a.ie_proporcional='N' THEN 'I' END
	into STRICT	ie_proporcional_w
	from	pls_mensalidade_segurado	b,
		pls_mensalidade			a
	where	a.nr_sequencia = b.nr_seq_mensalidade
	and	b.nr_parcela = 1
	and	a.nr_sequencia = nr_seq_mensalidade_w;
	exception
	when others then
		ie_proporcional_w := null;
	end;

	if (ie_proporcional_w IS NOT NULL AND ie_proporcional_w::text <> '') then
		ie_primeira_parc_integral_w := ie_proporcional_w;
	else
		begin
		select	a.ie_calc_primeira_mens
		into STRICT	ie_primeira_parc_integral_w
		from	pls_mensalidade_segurado	c,
			pls_mensalidade			b,
			pls_contrato_pagador		a
		where	a.nr_sequencia 		= b.nr_seq_pagador
		and	b.nr_sequencia 		= c.nr_seq_mensalidade
		and	a.nr_sequencia 		= nr_seq_pagador_w
		and	c.nr_seq_segurado 	= nr_seq_segurado_w
		and	c.nr_parcela = 1
		group by a.ie_calc_primeira_mens;
		exception
		when others then
			ie_primeira_parc_integral_w := 'I';
		end;
	end if;

	if (ie_primeira_parc_integral_w = 'P') then
		nr_parcela_integral_w := nr_parcela_w - 1;
	elsif (ie_primeira_parc_integral_w = 'I') then
		nr_parcela_integral_w := nr_parcela_w;
	end if;

	/*Obter a quantidade de dias entre a data de contratação e a data de adesão do beneficiário. */

	if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
		select	b.dt_contratacao - a.dt_contrato
		into STRICT	qt_dias_contrato_adesao_w
		from	pls_segurado	b,
			pls_contrato	a
		where	a.nr_sequencia = b.nr_seq_contrato
		and	b.nr_sequencia = nr_seq_segurado_w;
	end if;

	select	nextval('pls_repasse_mens_seq')
	into STRICT	nr_seq_repasse_sca_w
	;

	select	count(*)
	into STRICT	qt_itens_liberados_w
	from	pls_repasse_mens
	where	nr_seq_mens_seg = nr_seq_mens_seg_w
	and	nr_seq_vendedor = nr_seq_vendedor_w
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

	if (qt_itens_liberados_w = 0) then

		open C07;
		loop
		fetch C07 into
			nr_seq_item_sca_w,
			ie_tipo_item_w,
			vl_item_w,
			nr_seq_bonificacao_vinculo_w,
			nr_seq_vinculo_sca_w,
			nr_parcela_sca_w;
		EXIT WHEN NOT FOUND; /* apply on C07 */
			begin

			ie_bonus_w			:= 'N';
			ds_tipo_item_bonificacao_w	:= '';
			vl_mensalidade_w		:= 0;
			vl_comissao_w			:= 0;

			select	max(nr_seq_plano)
			into STRICT	nr_seq_sca_w
			from	pls_sca_vinculo
			where	nr_sequencia	= nr_seq_vinculo_sca_w;

			tx_incremento_w := 0;
			tx_premios_w := 0;
			pr_incremento_w := 0;
			nr_seq_regra_ven_w 		:= null;
			ie_acao_contrato_regra_w	:= null;
			ie_recebe_valores_w		:= null;
			vl_premio_w			:= null;
			tx_premio_w			:= null;
			ie_tipo_item_mensalidade_w	:= null;
			nr_seq_grupo_produto_w		:= null;
			ie_meta_atingida_w		:= 'N';

			open C03;
			loop
			fetch C03 into
				nr_seq_regra_ven_ww,
				ie_acao_contrato_regra_ww,
				ie_recebe_valores_ww,
				vl_premio_ww,
				tx_premio_ww,
				ie_tipo_item_mensalidade_ww,
				nr_seq_grupo_produto_ww,
				ie_diferenca_migracao_ww,
				qt_meses_meta_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				if (qt_meses_meta_w > 0) then
					ie_meta_atingida_w	:= pls_obter_se_meta_atingida(nr_seq_vendedor_p,dt_mesano_referencia_w,qt_meses_meta_w);
				end if;

				if	(((nr_seq_grupo_produto_ww IS NOT NULL AND nr_seq_grupo_produto_ww::text <> '') and (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') and pls_se_grupo_preco_produto(nr_seq_grupo_produto_ww,nr_seq_plano_w) = 'S') or (coalesce(nr_seq_grupo_produto_ww::text, '') = '')) then
					if (pls_obter_item_mens(ie_tipo_item_mensalidade_ww,ie_tipo_item_w) = 'S') then
						if	((ie_bonus_w = 'S' and pls_obter_item_mens(ie_tipo_item_mensalidade_ww, ds_tipo_item_bonificacao_w) = 'S') or (ie_bonus_w = 'N')) then
							if (qt_meses_meta_w = 0 or ie_meta_atingida_w in ('S','M')) then
								if (ie_meta_atingida_w = 'M') then
									CALL wheb_mensagem_pck.exibir_mensagem_abort(223106);
									/* Mensagem: Favor verificar se o canal de vendas possui metas informadas. */

								end if;

								nr_seq_regra_ven_w 		:= nr_seq_regra_ven_ww;
								ie_acao_contrato_regra_w	:= ie_acao_contrato_regra_ww;
								ie_recebe_valores_w		:= ie_recebe_valores_ww;
								vl_premio_w			:= vl_premio_ww;
								tx_premio_w			:= tx_premio_ww	;
								ie_tipo_item_mensalidade_w	:= ie_tipo_item_mensalidade_ww;
								nr_seq_grupo_produto_w		:= nr_seq_grupo_produto_ww;
								ie_diferenca_migracao_w		:= ie_diferenca_migracao_ww;
							end if;
						end if;
					end if;
				end if;
			end loop;
			close C03;

			if (coalesce(nr_seq_regra_ven_w,0) > 0) then
				tx_premios_w := tx_premio_w;

				open C04; /* Itens adicionais */
				loop
				fetch C04 into
					pr_incremento_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					tx_premios_w := tx_premios_w + pr_incremento_w;
					tx_incremento_w := tx_incremento_w + pr_incremento_w;
				end loop;
				close c04;

				if (ie_recebe_valores_w = 'S') then
					select	sum(vl_item)
					into STRICT	vl_adic_mensalidade_w
					from	pls_mensalidade_seg_item
					where	nr_seq_mensalidade_seg = nr_seq_mens_seg_w
					and	ie_tipo_mensalidade = 'A';

					vl_comissao_w := (vl_comissao_w + coalesce(vl_adic_mensalidade_w,0));
				end if;

				if 	((tx_premios_w > 0) or (vl_premio_w > 0)) then
					vl_mensalidade_w := (round((vl_item_w * tx_premio_w) / 100,2) + vl_premio_w);
					vl_incremento_w	:= coalesce((round((vl_item_w * tx_incremento_w) / 100,2)),0);
					vl_comissao_w := coalesce(vl_comissao_w,0) + coalesce(vl_mensalidade_w,0) + coalesce(vl_incremento_w,0);

					vl_incremento_total_w	:= coalesce(vl_incremento_total_w,0) + vl_incremento_w;
					vl_total_item_w	:= coalesce(vl_total_item_w,0) + coalesce(vl_item_w,0);
					vl_total_comissao_w := coalesce(vl_total_comissao_w,0) + coalesce(vl_comissao_w,0);

					select	count(*)
					into STRICT	qt_repasse_gerado_w
					from	pls_repasse_mens_item	c,
						pls_repasse_mens	a,
						pls_repasse_vend	b
					where	c.nr_seq_repasse	= a.nr_sequencia
					and	a.nr_seq_repasse	= b.nr_sequencia
					and	a.nr_seq_mens_seg	= nr_seq_mens_seg_w
					and	c.nr_seq_mensalidade_seg_item	= nr_seq_item_sca_w
					and	b.ie_tipo_repasse	= 'N';
				end if;
			end if;
			end;
		end loop;
		close C07;
	end if;
	end;
end loop;
close C09;

ds_retorno	:= vl_total_comissao_w;

return	ds_retorno;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_vl_corret_comis_2508 ( nr_seq_mens_seg_p bigint, nr_seq_vendedor_p bigint) FROM PUBLIC;

