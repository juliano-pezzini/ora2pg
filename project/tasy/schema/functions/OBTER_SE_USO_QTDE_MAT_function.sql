-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_uso_qtde_mat (nr_atendimento_p bigint, cd_material_p bigint, qt_material_p bigint, cd_setor_atendimento_p bigint, nr_seq_atepacu_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE

 
/* 
ie_opcao_p       1 - IE_ACAO_EXCESSO 
            	2 - QT_EXCEDIDA 
            	3 - DS_ERRO 
*/
 
 
ds_retorno_w      	varchar(255);
ie_acao_excesso_w    	varchar(5);
ds_erro_w        		varchar(255);
qt_registros_w     	integer;
ie_tipo_atendimento_w  	smallint;
cd_convenio_w      	integer;
ie_tipo_qtde_w     	varchar(1);
qt_permitida_w     	double precision;
qt_horas_intervalo_w  	integer;
qt_executada_w     	double precision;
dt_material_w      	timestamp;
ds_material_w      	varchar(255);
qt_executada_dia_w   	double precision;
qt_executada_mes_w   	double precision;
qt_executada_atend_w  	double precision;
qt_executada_periodo_w 	double precision;
qt_executada_conta_w  	double precision   := 0;
qt_exec_total_conta_w 	double precision   := 0;
qt_excedida_w      	double precision  := 0;
nr_seq_regra_uso_w   	bigint;
cd_area_proc_w     	bigint;
cd_especialidade_proc_w 	bigint;
cd_grupo_proc_w     	bigint;
cd_procedimento_w    bigint;
ie_origem_proced_w   bigint;
cd_estabelecimento_w	smallint;
qt_minutos_intervalo_w	bigint;
cd_tipo_acomodacao_w	smallint;
ds_mensagem_w		varchar(255);
cd_pessoa_fisica_w	varchar(10);
qt_idade_w		double precision;
ie_paciente_isolado_w varchar(1);

c01 CURSOR FOR 
    SELECT a.qt_permitida, 
        a.ie_acao_excesso, 
        a.qt_horas_intervalo, 
        a.ie_tipo_qtde, 
        a.nr_sequencia, 
		a.qt_minutos_intervalo, 
		a.ds_mensagem 
    from  convenio_regra_qtde_mat a 
    where  a.cd_material          = cd_material_p 
    and   a.cd_convenio          = cd_convenio_w 
    and (a.ie_tipo_atendimento     = ie_tipo_atendimento_w     or coalesce(ie_tipo_atendimento::text, '') = '') 
    and (a.cd_setor_atendimento    = cd_setor_atendimento_p    or coalesce(cd_setor_atendimento::text, '') = '') 
	and	coalesce(a.cd_estabelecimento, coalesce(cd_estabelecimento_w,0)) = coalesce(cd_estabelecimento_w,0) 
	and	coalesce(cd_tipo_acomodacao, coalesce(cd_tipo_acomodacao_w,0)) = coalesce(cd_tipo_acomodacao_w,0) 
	and	coalesce(qt_idade_w,1) between coalesce(obter_idade_regra_uso(a.nr_sequencia,'MIN','M'),0) and coalesce(obter_idade_regra_uso(a.nr_sequencia,'MAX','M'),9999999) 
	and	coalesce(a.ie_situacao,'A') = 'A' 
	and ((coalesce(a.ie_paciente_isolado,'A') = 'A') or (coalesce(a.ie_paciente_isolado,'A') = ie_paciente_isolado_w)) 
	and	coalesce(cd_perfil, coalesce(obter_perfil_ativo, 0)) = coalesce(obter_perfil_ativo, 0) 
    order by 
        coalesce(a.ie_tipo_atendimento,'0'), 
        coalesce(a.cd_setor_atendimento,'0'), 
		coalesce(a.cd_estabelecimento,0), 
		coalesce(cd_perfil, 0);

c02 CURSOR FOR 
    /* Obter Estrutura do procedimento */
 
    SELECT b.cd_area_procedimento, 
        b.cd_especialidade, 
        b.cd_grupo_proc, 
        b.cd_procedimento, 
        b.ie_origem_proced 
    from  Estrutura_Procedimento_V    b, 
        procedimento_paciente      a 
    where  a.cd_procedimento        = b.cd_procedimento 
    and   a.ie_origem_proced       = b.ie_origem_proced 
    and   a.nr_atendimento        = nr_atendimento_p 
    and   coalesce(a.cd_motivo_exc_conta::text, '') = '' 
    and   (a.nr_interno_conta IS NOT NULL AND a.nr_interno_conta::text <> '');

c03 CURSOR FOR 
    /* Obter Estrutura do procedimento */
 
    SELECT b.cd_area_procedimento, 
        b.cd_especialidade, 
        b.cd_grupo_proc, 
        b.cd_procedimento, 
        b.ie_origem_proced 
    from  Estrutura_Procedimento_V    b, 
        procedimento_paciente      a 
    where  a.cd_procedimento        = b.cd_procedimento 
    and   a.ie_origem_proced       = b.ie_origem_proced 
    and   a.nr_atendimento        = nr_atendimento_p 
    and   a.nr_seq_atepacu        = nr_seq_atepacu_p 
    and   coalesce(a.cd_motivo_exc_conta::text, '') = '' 
    and   (a.nr_interno_conta IS NOT NULL AND a.nr_interno_conta::text <> '');

 

BEGIN 
 
ds_erro_w        := '';
ie_acao_excesso_w    := '';
 
select count(*) 
into STRICT  qt_registros_w 
from  convenio_regra_qtde_mat 
where  cd_material   = cd_material_p 
and	coalesce(ie_situacao,'A') = 'A';
 
if (qt_registros_w > 0) then 
 
    begin 
    select	coalesce(max(obter_convenio_atendimento(nr_atendimento_p)),0), 
    	coalesce(max((obter_tipo_acomod_atend(nr_atendimento_p,'C'))::numeric ),0) 
	into STRICT	cd_convenio_w, 
		cd_tipo_acomodacao_w 
	;
 
 
    select coalesce(ie_tipo_atendimento,0), 
		coalesce(cd_estabelecimento,0), 
		cd_pessoa_fisica, 
		coalesce(ie_paciente_isolado,'A') 
    into STRICT  ie_tipo_atendimento_w, 
		cd_estabelecimento_w, 
		cd_pessoa_fisica_w, 
		ie_paciente_isolado_w 
    from  atendimento_paciente 
    where  nr_atendimento = nr_atendimento_p;
	 
	begin 
	select	max(obter_idade(b.dt_nascimento,coalesce(b.dt_obito,clock_timestamp()),'DIA'))	 
	into STRICT	qt_idade_w	 
	from	pessoa_fisica b 
	where	b.cd_pessoa_fisica	= cd_pessoa_fisica_w;
	exception 
	when others then 
		qt_idade_w	:= 0;
	end;
	 
    exception 
        when others then 
            ie_tipo_qtde_w := 'X';
    end;
 
    OPEN C01;
    LOOP 
    FETCH C01 into 
        qt_permitida_w, 
        ie_acao_excesso_w, 
        qt_horas_intervalo_w, 
        ie_tipo_qtde_w, 
        nr_seq_regra_uso_w, 
		qt_minutos_intervalo_w, 
		ds_mensagem_w;
    EXIT WHEN NOT FOUND; /* apply on c01 */
        begin 
        qt_permitida_w     := qt_permitida_w;
        ie_acao_excesso_w    := ie_acao_excesso_w;
        qt_horas_intervalo_w  := qt_horas_intervalo_w;
        ie_tipo_qtde_w     := ie_tipo_qtde_w;
        nr_seq_regra_uso_w   := nr_seq_regra_uso_w;
		qt_minutos_intervalo_w	:= qt_minutos_intervalo_w;
        end;
    END LOOP;
    CLOSE C01;
 
    if (ie_tipo_qtde_w <> 'X') then 
 
        select coalesce(max(a.qt_material),0), 
            coalesce(max(a.dt_atendimento), clock_timestamp()), 
            substr(max(b.ds_material),1,255) 
        into STRICT  qt_executada_w, 
            dt_material_w, 
            ds_material_w 
        from  material        b, 
            material_atend_paciente a 
        where  a.cd_material      = b.cd_material 
        and   nr_sequencia      = 0;
    end if;
 
    if (ie_tipo_qtde_w = 'D') then 
 
        select coalesce(sum(qt_material),0) 
        into STRICT  qt_executada_dia_w 
        from  material_atend_paciente 
        where  nr_atendimento     = nr_atendimento_p 
        and   cd_material       = cd_material_p 
        and   (nr_interno_conta IS NOT NULL AND nr_interno_conta::text <> '') 
        and   trunc(dt_atendimento)  = trunc(dt_material_w) 
        and   coalesce(cd_motivo_exc_conta::text, '') = '';
 
        if   ((qt_executada_dia_w + qt_material_p)  >= qt_permitida_w) then 
            qt_excedida_w  := qt_executada_dia_w - qt_permitida_w;
            ds_erro_w    := WHEB_MENSAGEM_PCK.get_texto(297765); --'Ultrapassou a quantidade máxima do dia'; 
        end if;
    end if;
 
    if (ie_tipo_qtde_w = 'M') then 
 
        select coalesce(sum(qt_material),0) 
        into STRICT  qt_executada_mes_w 
        from  material_atend_paciente 
        where  nr_atendimento     = nr_atendimento_p 
        and   cd_material       = cd_material_p 
        and   (nr_interno_conta IS NOT NULL AND nr_interno_conta::text <> '') 
        and   trunc(dt_atendimento, 'month') = trunc(dt_material_w, 'month') 
        and   coalesce(cd_motivo_exc_conta::text, '') = '';
 
        if   ((qt_executada_mes_w + qt_material_p) >= qt_permitida_w) then 
            qt_excedida_w  := qt_executada_mes_w - qt_permitida_w;
            ds_erro_w    := WHEB_MENSAGEM_PCK.get_texto(297766); --'Ultrapassou a quantidade máxima do mês' 
        end if;
    end if;
 
    if (ie_tipo_qtde_w = 'A') then 
 
        select coalesce(sum(qt_material),0) 
        into STRICT  qt_executada_atend_w 
        from  material_atend_paciente 
        where  nr_atendimento     = nr_atendimento_p 
        and   cd_material       = cd_material_p 
        and   coalesce(cd_motivo_exc_conta::text, '') = '';
 
        if   ((qt_executada_atend_w + qt_material_p) > qt_permitida_w ) then 
 
            qt_excedida_w  := qt_executada_atend_w - qt_permitida_w;
            ds_erro_w    := WHEB_MENSAGEM_PCK.get_texto(297767); --'Ultrapassou a quantidade máxima do atendimento' 
        end if;
    end if;
 
    if (ie_tipo_qtde_w = 'H') then 
 
        select coalesce(sum(qt_material),0) 
        into STRICT  qt_executada_periodo_w 
        from  material_atend_paciente 
        where  nr_atendimento     = nr_atendimento_p 
        and   cd_material       = cd_material_p 
        and   dt_atendimento between 
            (dt_material_w - (qt_horas_intervalo_w * 60 /1440)) and dt_material_w 
        and   coalesce(cd_motivo_exc_conta::text, '') = '';
 
        if   ((qt_executada_periodo_w + qt_material_p) > qt_permitida_w) then 
            qt_excedida_w  := qt_executada_periodo_w - qt_permitida_w;
            ds_erro_w    := WHEB_MENSAGEM_PCK.get_texto(297768); --'Ultrapassou a quantidade máxima por período' 
        end if;
    end if;
	 
	if (ie_tipo_qtde_w = 'B') then 
 
        select coalesce(sum(qt_material),0) 
        into STRICT  qt_executada_periodo_w 
        from  material_atend_paciente 
        where  nr_atendimento     = nr_atendimento_p 
        and   cd_material       = cd_material_p 
        and   dt_atendimento between 
            (dt_material_w - (qt_minutos_intervalo_w / 1440)) and dt_material_w 
        and   coalesce(cd_motivo_exc_conta::text, '') = '';
 
        if   ((qt_executada_periodo_w + qt_material_p) > qt_permitida_w) then 
            qt_excedida_w  := qt_executada_periodo_w - qt_permitida_w;
            ds_erro_w    := WHEB_MENSAGEM_PCK.get_texto(297768); --'Ultrapassou a quantidade máxima por período' 
        end if;
    end if;
 
    if (ie_tipo_qtde_w = 'S') then 
 
        select coalesce(sum(qt_material),0) 
        into STRICT  qt_executada_atend_w 
        from  material_atend_paciente 
        where  nr_atendimento     = nr_atendimento_p 
        and   cd_material       = cd_material_p 
        and   cd_setor_atendimento  = cd_setor_atendimento_p 
        and   coalesce(cd_motivo_exc_conta::text, '') = '';
 
        if   ((qt_executada_atend_w + qt_material_p) > qt_permitida_w ) then 
            qt_excedida_w  := qt_executada_atend_w - qt_permitida_w;
            ds_erro_w    := WHEB_MENSAGEM_PCK.get_texto(297770); --'Ultrapassou a quantidade máxima do atendimento nesse setor'; 
        end if;
    end if;
 
    if (ie_tipo_qtde_W = 'U') then 
        OPEN C03;
        LOOP 
        FETCH C03 into 
            cd_area_proc_w, 
            cd_especialidade_proc_w, 
            cd_grupo_proc_w, 
            cd_procedimento_w, 
            ie_origem_proced_w;
        EXIT WHEN NOT FOUND; /* apply on c03 */
            begin 
            select count(*) 
            into STRICT  qt_executada_conta_w 
            from  conv_regra_proc_exclusivo 
            where  coalesce(cd_procedimento, cd_procedimento_w)     = cd_procedimento_w 
            and   coalesce(ie_origem_proced, ie_origem_proced_w)    = ie_origem_proced_w 
            and   coalesce(cd_grupo_proc, cd_grupo_proc_w)       = cd_grupo_proc_w 
            and   coalesce(cd_especialidade, cd_especialidade_proc_w) = cd_especialidade_proc_w 
            and   coalesce(cd_area_procedimento, cd_area_proc_w)    = cd_area_proc_w 
            and   nr_seq_regra_uso_mat              = nr_seq_regra_uso_w;
            qt_exec_total_conta_w  := qt_exec_total_conta_w + qt_executada_conta_w;
            end;
        END LOOP;
        CLOSE C03;
        if (qt_exec_total_conta_w = 0) then 
            ds_erro_w    := WHEB_MENSAGEM_PCK.get_texto(297771); --'Não há na conta o procedimento exclusivo desse material'; 
        end if;
    end if;
 
    if (ie_tipo_qtde_W = 'E') then 
        OPEN C02;
        LOOP 
        FETCH C02 into 
            cd_area_proc_w, 
            cd_especialidade_proc_w, 
            cd_grupo_proc_w, 
            cd_procedimento_w, 
            ie_origem_proced_w;
        EXIT WHEN NOT FOUND; /* apply on c02 */
            begin 
            select count(*) 
            into STRICT  qt_executada_conta_w 
            from  conv_regra_proc_exclusivo 
            where  coalesce(cd_procedimento, cd_procedimento_w)     = cd_procedimento_w 
            and   coalesce(ie_origem_proced, ie_origem_proced_w)    = ie_origem_proced_w 
            and   coalesce(cd_grupo_proc, cd_grupo_proc_w)       = cd_grupo_proc_w 
            and   coalesce(cd_especialidade, cd_especialidade_proc_w) = cd_especialidade_proc_w 
            and   coalesce(cd_area_procedimento, cd_area_proc_w)    = cd_area_proc_w 
            and   nr_seq_regra_uso_mat              = nr_seq_regra_uso_w;
            qt_exec_total_conta_w  := qt_exec_total_conta_w + qt_executada_conta_w;
            end;
        END LOOP;
        CLOSE C02;
        if (qt_exec_total_conta_w = 0) then 
            ds_erro_w    := WHEB_MENSAGEM_PCK.get_texto(297771); --'Não há na conta o procedimento exclusivo desse material'; 
        end if;
    end if;
end if;
 
if (ie_opcao_p   = '1') then 
    ds_retorno_w  := IE_ACAO_EXCESSO_w;
elsif (ie_opcao_p   = '2') then 
    ds_retorno_w  := qt_excedida_w;
else 
    ds_retorno_w  := ds_erro_w;
	if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') and (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then 
		ds_retorno_w := ds_mensagem_w;
	end if;
end if;
 
return ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_uso_qtde_mat (nr_atendimento_p bigint, cd_material_p bigint, qt_material_p bigint, cd_setor_atendimento_p bigint, nr_seq_atepacu_p bigint, ie_opcao_p text) FROM PUBLIC;

