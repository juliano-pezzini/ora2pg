-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_qt_hor_pendente_prescr ( cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, cd_perfil_p bigint, nr_atendimento_p bigint, qt_hora_incosistencia_p bigint, dt_inicio_filtro_P timestamp, dt_final_filtro_P timestamp, ie_opcao_p bigint, ie_etapas_sol_p text, qt_horas_aten_sol_p bigint, qt_minutos_p bigint, qt_minutos_disp_p bigint, ie_consiste_adm_ccg_p text default 'S') RETURNS bigint AS $body$
DECLARE


qt_hor_pendente_w			numeric(30) := 0;
dt_inicial_w				timestamp;
dt_final_w					timestamp;
dt_atual_w					timestamp;
ie_horarios_dietas_orais_w	varchar(1);

ie_consistir_med_w			varchar(1);
ie_consistir_dieta_w		varchar(1);
ie_consistir_sup_w			varchar(1);
ie_consistir_mat_w			varchar(1);
ie_consistir_rec_w			varchar(1);
ie_consistir_sae_w			varchar(1);
ie_consistir_me_w			varchar(1);
ie_consistir_nan_w			varchar(1);
ie_consistir_sol_w			varchar(1);
ie_consistir_ccg_w			varchar(1);
ie_consistir_gas_w			varchar(1);
qt_dieta_w 	numeric(30) := 0;
qt_oral_w 	numeric(30) := 0;
qt_mat_w 	numeric(30) := 0;
qt_proc_w 	numeric(30) := 0;
qt_rec_w 	numeric(30) := 0;
qt_sae_w 	numeric(30) := 0;
qt_ccg_w 	numeric(30) := 0;
qt_nan_w 	numeric(30) := 0;
qt_gas_w 	numeric(30) := 0;
QT_MED_W  	numeric(30) := 0;
dt_entrada_w timestamp;



BEGIN

ie_horarios_dietas_orais_w := Wheb_assist_pck.obterParametroFuncao(1113,148, cd_perfil_p, obter_usuario_ativo, cd_estabelecimento_p);
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (ie_opcao_p IS NOT NULL AND ie_opcao_p::text <> '') then
	
	dt_atual_w		:= clock_timestamp();
	
	select 	max(dt_entrada)
	into STRICT	dt_entrada_w
	from 	atendimento_paciente
	where 	nr_atendimento = nr_atendimento_p;
	
	if (ie_opcao_p in (1,2)) then

		-- ### Opção: VIGENTES 
		if (ie_opcao_p = 1) then
			/*Tratar validade com between */

			dt_inicial_w	:= dt_atual_w - 2;
			dt_final_w		:= dt_atual_w + 3;
			
		-- ### Opção: Período
		elsif (ie_opcao_p = 2) then		
			-- Tratar filtro entre datas 
			if (coalesce(qt_hora_incosistencia_p,0) > 0) then
				dt_inicial_w	:= dt_atual_w - qt_hora_incosistencia_p / 24;
				dt_final_w		:= dt_atual_w + 3;
			else
				dt_inicial_w	:= dt_inicio_filtro_P;
				dt_final_w		:= dt_final_filtro_P;
			end if;
		end if;
		
		
		
	
			ie_consistir_med_w	:= ADEP_obter_se_consiste_item('M', cd_perfil_p,null, null, null);
			ie_consistir_dieta_w	:= ADEP_obter_se_consiste_item('D', cd_perfil_p,null, null, null);
			ie_consistir_sup_w	:= ADEP_obter_se_consiste_item('S', cd_perfil_p,null, null, null);
			ie_consistir_mat_w	:= ADEP_obter_se_consiste_item('MAT', cd_perfil_p,null, null, null);
			ie_consistir_rec_w	:= ADEP_obter_se_consiste_item('R', cd_perfil_p,null, null, null);
			ie_consistir_sae_w	:= ADEP_obter_se_consiste_item('E', cd_perfil_p,null, null, null);
			ie_consistir_me_w	:= ADEP_obter_se_consiste_item('ME', cd_perfil_p,null, null, null);	
			ie_consistir_nan_w	:= ADEP_obter_se_consiste_item('NAN', cd_perfil_p,null, null, null);	
			ie_consistir_gas_w	:= ADEP_obter_se_consiste_item('O', cd_perfil_p,null, null, null);	
			if (ie_consiste_adm_ccg_p = 'S') then
				ie_consistir_ccg_w	:= ADEP_obter_se_consiste_item('CCG', cd_perfil_p,null,null, null);
			end if;
			ie_consistir_sol_w := ADEP_obter_se_consiste_item('SOL', cd_perfil_p, null,null, null);
	
		
		-- Itens pendentes do atendimento (Genérico) e Itens de SAE pendentes do atendimento
		if (ie_consistir_med_w = 'S') then
			select 	sum(qt)

			into STRICT	qt_hor_pendente_w
			from (
			SELECT	count(ie_tipo_item) qt		
			from 	adep_pend_prev_v
			where	1 = 1
			and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item), 
												cd_estabelecimento_p, 
												cd_setor_atendimento_p, 
												cd_perfil_p, 
												CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
												CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
												ie_origem_proced, 
												nr_seq_proc_interno,
												cd_setor_prescr,

												null,
												null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
												null)	= 'S' -- nr_seq_exame_p		
			and 	((dt_validade_prescr	between dt_inicial_w and dt_final_w AND ie_opcao_p <> 1) or
					 ((dt_inicio_prescr  < clock_timestamp()  and dt_validade_prescr > clock_timestamp()) and (ie_opcao_p = 1)))
			and dt_horario between dt_entrada_w and dt_atual_w
			and	nr_atendimento = nr_atendimento_p
			and	ie_tipo_item = 'M'
			and	((ie_dose_especial <> 'S') or (ie_opcao_p <> 1))
			and	ie_consistir_med_w = 'S'		
			
union

			SELECT	count(ie_tipo_item) qt		
			from 	adep_pend_prev_v
			where	1 = 1
			and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item), 
												cd_estabelecimento_p, 
												cd_setor_atendimento_p, 
												cd_perfil_p, 
												CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
												CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
												ie_origem_proced, 
												nr_seq_proc_interno,
												cd_setor_prescr,

												null,
												null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
												null)	= 'S' -- nr_seq_exame_p		
			and (dt_inicio_prescr > clock_timestamp() - interval '1 days' and dt_validade_prescr > clock_timestamp()) and (ie_opcao_p = 1)
			and dt_horario between dt_entrada_w and dt_atual_w
			and	nr_atendimento = nr_atendimento_p
			and	ie_tipo_item = 'M'
			and	(ie_dose_especial = 'S' AND ie_opcao_p = 1)
			and	ie_consistir_med_w = 'S') alias27;

		end if;
		
		if (ie_consistir_dieta_w = 'S') then
			if (ie_opcao_p = 1) then
				select	count(ie_tipo_item) qt	
				into STRICT    qt_dieta_w
				from 	adep_pend_prev_v
				where	1 = 1
				and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
													cd_estabelecimento_p, 
													cd_setor_atendimento_p, 
													cd_perfil_p, 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													ie_origem_proced, 
													nr_seq_proc_interno,
													cd_setor_prescr,

													null,
													null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
													null)	= 'S' -- nr_seq_exame_p					
				and dt_horario between dt_inicial_w and dt_atual_w
				and dt_validade_prescr > clock_timestamp()
				and	nr_atendimento = nr_atendimento_p
				and	ie_tipo_item = 'D';
			else
				select	count(ie_tipo_item) qt	
				into STRICT    qt_dieta_w
				from 	adep_pend_prev_v
				where	1 = 1
				and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
													cd_estabelecimento_p, 
													cd_setor_atendimento_p, 
													cd_perfil_p, 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													ie_origem_proced, 
													nr_seq_proc_interno,
													cd_setor_prescr,

													null,
													null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
													null)	= 'S' -- nr_seq_exame_p					
				and dt_validade_prescr	between dt_inicial_w and dt_final_w

				and dt_horario between dt_entrada_w and dt_atual_w
				and	nr_atendimento = nr_atendimento_p
				and	ie_tipo_item = 'D';
			end if;
			
		end if;
		
		if (ie_consistir_sup_w = 'S') and (ie_horarios_dietas_orais_w = 'S') then
			if (ie_opcao_p = 1) then
				select	count(ie_tipo_item) qt	
				into STRICT    qt_oral_w
				from 	adep_pend_prev_v
				where	1 = 1
				and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
													cd_estabelecimento_p, 
													cd_setor_atendimento_p, 
													cd_perfil_p, 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													ie_origem_proced, 
													nr_seq_proc_interno,
													cd_setor_prescr,

													null,
													null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
													null)	= 'S' -- nr_seq_exame_p				
				and dt_horario between dt_inicial_w and dt_atual_w
				and dt_validade_prescr > clock_timestamp()
				and	nr_atendimento = nr_atendimento_p
				and	ie_tipo_item = 'S';

			else
				select	count(ie_tipo_item) qt	
				into STRICT    qt_oral_w
				from 	adep_pend_prev_v
				where	1 = 1
				and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
													cd_estabelecimento_p, 
													cd_setor_atendimento_p, 
													cd_perfil_p, 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													ie_origem_proced, 
													nr_seq_proc_interno,
													cd_setor_prescr,

													null,
													null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
													null)	= 'S' -- nr_seq_exame_p				
				and dt_validade_prescr	between dt_inicial_w and dt_final_w
				and dt_horario between dt_entrada_w and dt_atual_w
				and	nr_atendimento = nr_atendimento_p
				and	ie_tipo_item = 'S';
			end if;
			
		end if;
		
		if (ie_consistir_mat_w = 'S') then

			if (ie_opcao_p = 1) then
				select	count(ie_tipo_item) qt		
				into STRICT    qt_mat_w
				from 	adep_pend_prev_v
				where	1 = 1
				and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
													cd_estabelecimento_p, 
													cd_setor_atendimento_p, 
													cd_perfil_p, 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													ie_origem_proced, 
													nr_seq_proc_interno,
													cd_setor_prescr,

													null,
													null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
													null)	= 'S' -- nr_seq_exame_p		
				and dt_horario between dt_inicial_w and dt_atual_w
				and dt_validade_prescr > clock_timestamp()
				and	nr_atendimento = nr_atendimento_p
				and	ie_tipo_item = 'MAT';


			else
				select	count(ie_tipo_item) qt		
				into STRICT    qt_mat_w
				from 	adep_pend_prev_v
				where	1 = 1
				and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
													cd_estabelecimento_p, 
													cd_setor_atendimento_p, 
													cd_perfil_p, 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													ie_origem_proced, 
													nr_seq_proc_interno,
													cd_setor_prescr,

													null,
													null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
													null)	= 'S' -- nr_seq_exame_p		
				and dt_validade_prescr	between dt_inicial_w and dt_final_w
				and dt_horario between dt_entrada_w and dt_atual_w
				and	nr_atendimento = nr_atendimento_p
				and	ie_tipo_item = 'MAT';


			end if;
			
		end if;
		
		if (ie_opcao_p = 1) then
			select	count(ie_tipo_item) qt		
			into STRICT	qt_proc_w
			from 	adep_pend_prev_v
			where	1 = 1
			and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
												cd_estabelecimento_p, 
												cd_setor_atendimento_p, 
												cd_perfil_p, 
												CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
												CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
												ie_origem_proced, 
												nr_seq_proc_interno,
												cd_setor_prescr,

												null,
												null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
												null)	= 'S' -- nr_seq_exame_p			
			and	ADEP_obter_se_consiste_item(ie_tipo_item, cd_perfil_p,cd_item, ie_origem_proced, nr_seq_proc_interno) = 'S'		
			and dt_horario between dt_inicial_w and dt_atual_w
			and dt_validade_prescr > clock_timestamp()
			and	nr_atendimento = nr_atendimento_p
			and	ie_tipo_item IN ('P', 'L');

		else
			select	count(ie_tipo_item) qt	
			into STRICT	qt_proc_w			
			from 	adep_pend_prev_v
			where	1 = 1
			and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
												cd_estabelecimento_p, 
												cd_setor_atendimento_p, 
												cd_perfil_p, 
												CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
												CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
												ie_origem_proced, 
												nr_seq_proc_interno,
												cd_setor_prescr,

												null,
												null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
												null)	= 'S' -- nr_seq_exame_p			
			and	ADEP_obter_se_consiste_item(ie_tipo_item, cd_perfil_p,cd_item, ie_origem_proced, nr_seq_proc_interno) = 'S'	
			and (dt_validade_prescr	between dt_inicial_w and dt_final_w)
			and dt_horario between dt_entrada_w and dt_atual_w
			and	nr_atendimento = nr_atendimento_p
			and	ie_tipo_item IN ('P', 'L');
		end if;
		
		
		
		
		if (ie_consistir_rec_w = 'S') then

			if (ie_opcao_p = 1) then
				
				select	count(ie_tipo_item) qt		
				into STRICT	qt_rec_w
				from 	adep_pend_prev_v
				where	1 = 1
				and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
													cd_estabelecimento_p, 
													cd_setor_atendimento_p, 
													cd_perfil_p, 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													ie_origem_proced, 
													nr_seq_proc_interno,
													cd_setor_prescr,

													null,
													null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
													null)	= 'S' -- nr_seq_exame_p					
				and dt_horario between dt_inicial_w and dt_atual_w
				and dt_validade_prescr > clock_timestamp()
				and	nr_atendimento = nr_atendimento_p

				and	ie_tipo_item = 'R';
			else
				
				select	count(ie_tipo_item) qt		
				into STRICT	qt_rec_w
				from 	adep_pend_prev_v
				where	1 = 1
				and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
													cd_estabelecimento_p, 
													cd_setor_atendimento_p, 
													cd_perfil_p, 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													ie_origem_proced, 
													nr_seq_proc_interno,
													cd_setor_prescr,
													null,
													null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
													null)	= 'S' -- nr_seq_exame_p					
				and dt_validade_prescr	between dt_inicial_w and dt_final_w
				and dt_horario between dt_entrada_w and dt_atual_w
				and	nr_atendimento = nr_atendimento_p
				and	ie_tipo_item = 'R';
			end if;
		
		end if;
		
		if (ie_consistir_sae_w = 'S') then
			if (ie_opcao_p = 1) then
					
					select	count(ie_tipo_item) qt	
					into STRICT 	qt_sae_w
					from 	adep_pend_prev_v
					where	1 = 1
					and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
														cd_estabelecimento_p, 
														cd_setor_atendimento_p, 
														cd_perfil_p, 
														CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
														CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
														ie_origem_proced, 
														nr_seq_proc_interno,
														cd_setor_prescr,
														null,
														null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
														null)	= 'S' -- nr_seq_exame_p					
					and dt_horario between dt_inicial_w and dt_atual_w
					and dt_validade_prescr > clock_timestamp()
					and	nr_atendimento = nr_atendimento_p
					and	ie_tipo_item = 'E';
				else
					
					select	count(ie_tipo_item) qt	
					into STRICT 	qt_sae_w
					from 	adep_pend_prev_v
					where	1 = 1
					and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
														cd_estabelecimento_p, 
														cd_setor_atendimento_p, 
														cd_perfil_p, 
														CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
														CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
														ie_origem_proced, 
														nr_seq_proc_interno,
														cd_setor_prescr,
														null,
														null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
														null)	= 'S' -- nr_seq_exame_p					
					and dt_validade_prescr	between dt_inicial_w and dt_final_w
					and dt_horario between dt_entrada_w and dt_atual_w
					and	nr_atendimento = nr_atendimento_p
					and	ie_tipo_item = 'E';
			end if;
			
		end if;	
		
		if (ie_consistir_me_w = 'S') then
			if (ie_opcao_p = 1) then
						
						
					select	count(ie_tipo_item) qt	
					into STRICT qt_med_w
					from 	adep_pend_prev_v
					where	1 = 1
					and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
														cd_estabelecimento_p, 
														cd_setor_atendimento_p, 
														cd_perfil_p, 
														CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
														CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
														ie_origem_proced, 
														nr_seq_proc_interno,
														cd_setor_prescr,
														null,
														null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
														null)	= 'S' -- nr_seq_exame_p			
					and dt_horario between dt_inicial_w and dt_atual_w
					and dt_validade_prescr > clock_timestamp()
					and	nr_atendimento = nr_atendimento_p
					and	ie_tipo_item = 'ME';
				else
						
						
					select	count(ie_tipo_item) qt	
					into STRICT qt_med_w
					from 	adep_pend_prev_v
					where	1 = 1
					and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
														cd_estabelecimento_p, 
														cd_setor_atendimento_p, 
														cd_perfil_p, 
														CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
														CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
														ie_origem_proced, 
														nr_seq_proc_interno,
														cd_setor_prescr,
														null,
														null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
														null)	= 'S' -- nr_seq_exame_p			
					and dt_validade_prescr	between dt_inicial_w and dt_final_w
					and dt_horario between dt_entrada_w and dt_atual_w
					and	nr_atendimento = nr_atendimento_p
					and	ie_tipo_item = 'ME';
				end if;
			
		end if;
		
		if (ie_consistir_ccg_w = 'S') then
			if (ie_opcao_p = 1) then
					
					
				select	count(ie_tipo_item) qt	
				into STRICT 	qt_ccg_w
				from 	adep_pend_prev_v
				where	1 = 1
				and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
													cd_estabelecimento_p, 
													cd_setor_atendimento_p, 
													cd_perfil_p, 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													ie_origem_proced, 
													nr_seq_proc_interno,
													cd_setor_prescr,
													null,
													null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
													null)	= 'S' -- nr_seq_exame_p
				and     ((ie_consiste_adm_ccg_p = 'S') or (ie_tipo_item <> 'CCG'))				
				and	ADEP_obter_se_consiste_item(ie_tipo_item, cd_perfil_p,cd_item, ie_origem_proced, nr_seq_proc_interno) = 'S'
				and dt_horario between dt_inicial_w and dt_atual_w
				and dt_validade_prescr > clock_timestamp()
				and	nr_atendimento = nr_atendimento_p
				and	ie_tipo_item IN ('CIG', 'CCG')	;
			else
					
					
				select	count(ie_tipo_item) qt	
				into STRICT 	qt_ccg_w
				from 	adep_pend_prev_v
				where	1 = 1
				and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
													cd_estabelecimento_p, 
													cd_setor_atendimento_p, 
													cd_perfil_p, 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													ie_origem_proced, 
													nr_seq_proc_interno,
													cd_setor_prescr,
													null,
													null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
													null)	= 'S' -- nr_seq_exame_p
				and     ((ie_consiste_adm_ccg_p = 'S') or (ie_tipo_item <> 'CCG'))				
				and	ADEP_obter_se_consiste_item(ie_tipo_item, cd_perfil_p,cd_item, ie_origem_proced, nr_seq_proc_interno) = 'S'
				and dt_validade_prescr	between dt_inicial_w and dt_final_w
				and dt_horario between dt_entrada_w and dt_atual_w
				and	nr_atendimento = nr_atendimento_p
				and	ie_tipo_item IN ('CIG', 'CCG')	;
			end if;
		end if;
		
		if (ie_consistir_nan_w = 'S') then
			if (ie_opcao_p = 1) then
				select	count(ie_tipo_item) qt		
				into STRICT qt_nan_w
				from 	adep_pend_prev_v
				where	1 = 1		
				and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
													cd_estabelecimento_p, 
													cd_setor_atendimento_p, 
													cd_perfil_p, 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													ie_origem_proced, 
													nr_seq_proc_interno,
													cd_setor_prescr,
													null,
													null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
													null)	= 'S' -- nr_seq_exame_p				
				and dt_horario between dt_inicial_w and dt_atual_w
				and dt_validade_prescr > clock_timestamp()
				and	nr_atendimento = nr_atendimento_p
				and	ie_tipo_item = 'NAN';
			else
				select	count(ie_tipo_item) qt		
				into STRICT qt_nan_w
				from 	adep_pend_prev_v
				where	1 = 1		
				and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
													cd_estabelecimento_p, 
													cd_setor_atendimento_p, 
													cd_perfil_p, 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													ie_origem_proced, 
													nr_seq_proc_interno,
													cd_setor_prescr,
													null,
													null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
													null)	= 'S' -- nr_seq_exame_p				
				and dt_validade_prescr	between dt_inicial_w and dt_final_w
				and dt_horario between dt_entrada_w and dt_atual_w
				and	nr_atendimento = nr_atendimento_p
				and	ie_tipo_item = 'NAN';
			end if;
			
		end if;
		
		
		
		if (ie_consistir_gas_w = 'S') then
			if (ie_opcao_p = 1) then
				select	count(ie_tipo_item) qt 		
				into STRICT qt_gas_w
				from 	adep_pend_prev_v
				where	1 = 1
				and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
													cd_estabelecimento_p, 
													cd_setor_atendimento_p, 
													cd_perfil_p, 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													ie_origem_proced, 
													nr_seq_proc_interno,
													cd_setor_prescr,
													null,
													null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
													null)	= 'S' -- nr_seq_exame_p				
				and dt_horario between dt_inicial_w and dt_atual_w
				and dt_validade_prescr > clock_timestamp()
				and	nr_atendimento = nr_atendimento_p
				and	ie_tipo_item = 'O';	
			else
				select	count(ie_tipo_item) qt 		
				into STRICT qt_gas_w
				from 	adep_pend_prev_v
				where	1 = 1
				and	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
													cd_estabelecimento_p, 
													cd_setor_atendimento_p, 
													cd_perfil_p, 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END , 
													ie_origem_proced, 
													nr_seq_proc_interno,
													cd_setor_prescr,
													null,
													null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
													null)	= 'S' -- nr_seq_exame_p				
					and dt_validade_prescr	between dt_inicial_w and dt_final_w
				and dt_horario between dt_entrada_w and dt_atual_w
				and	nr_atendimento = nr_atendimento_p
				and	ie_tipo_item = 'O';	
			end if;
			
		end if;
		
		
		
		qt_hor_pendente_w :=  qt_hor_pendente_w + qt_dieta_w + qt_oral_w + qt_mat_w + qt_proc_w + qt_rec_w + qt_sae_w + qt_med_w + qt_ccg_w + qt_nan_w + qt_gas_w;

		-- Dispositivos do atendimento
		if (coalesce(qt_minutos_disp_p,0) > 0) then	
			select	count(nr_sequencia) + coalesce(qt_hor_pendente_w,0)
			into STRICT	qt_hor_pendente_w
			from	atend_pac_dispositivo a
			where	a.nr_atendimento = nr_atendimento_p
			and		coalesce(a.DT_RETIRADA::text, '') = ''
			and		(a.DT_RETIRADA_PREV IS NOT NULL AND a.DT_RETIRADA_PREV::text <> '')
			and		dt_atual_w > a.DT_RETIRADA_PREV - qt_minutos_disp_p / 1440;
		end if;

		-- CCG do atendimento
		if (ie_consiste_adm_ccg_p = 'S') then
			
			if (adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item('G'),
											cd_estabelecimento_p, 
											cd_setor_atendimento_p, 
											cd_perfil_p, 
											null, 
											null, 
											null, 
											null,
											null,
											null,
											null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
											null) = 'S') then -- nr_seq_exame_p
				if (ie_opcao_p = 1) then
					select	count(ie_tipo_item) + coalesce(qt_hor_pendente_w,0)
					into STRICT	qt_hor_pendente_w
					from	adep_glic_pend_v
					where		dt_horario between dt_entrada_w and dt_atual_w  
					and 	dt_inicio_prescr  between dt_entrada_w and dt_atual_w  
					and 	dt_validade_prescr > clock_timestamp()

					and	nr_atendimento		= nr_atendimento_p;
				else
					select	count(ie_tipo_item) + coalesce(qt_hor_pendente_w,0)
					into STRICT	qt_hor_pendente_w
					from	adep_glic_pend_v
					where	dt_horario between dt_entrada_w and dt_atual_w
					and 	dt_validade_prescr	between dt_inicial_w and dt_final_w
					and	nr_atendimento		= nr_atendimento_p;
				end if;
				
			end if;


			if (ie_consistir_ccg_w = 'S') then
				if (ie_opcao_p = 1) then
					select	count(a.nr_sequencia) + coalesce(qt_hor_pendente_w,0)
					into STRICT	qt_hor_pendente_w
					from	atendimento_glicemia a,
							atend_glicemia c,
							prescr_medica b				
					where	a.nr_atendimento 	= b.nr_atendimento
					and	c.nr_sequencia		= a.nr_seq_glicemia		
					and	c.nr_atendimento	= a.nr_atendimento
					and	c.nr_atendimento	= b.nr_atendimento
					and	c.nr_prescricao		= b.nr_prescricao
					and dt_inicio_prescr between dt_entrada_w and clock_timestamp()
					and dt_validade_prescr > clock_timestamp()
					and	coalesce(a.dt_suspensao::text, '') = ''
					and	((coalesce(a.qt_ui_insulina_calc,0) > 0) or (coalesce(a.qt_ui_insulina_adm,0) > 0) or (coalesce(a.qt_ui_insulina_int_calc,0) > 0) or (coalesce(a.qt_ui_insulina_int_adm,0) > 0) or (coalesce(a.qt_glicose,0) > 0) or (coalesce(a.qt_glicose_adm,0) > 0))
					and	coalesce(ie_adm_confirmada,'N') <> 'S'
					and	coalesce(ie_status_glic, 'P') = 'N'
					and	dt_atual_w > a.dt_controle + qt_minutos_p / 1440
					and	b.nr_atendimento 	= nr_atendimento_p;
				else
					select	count(a.nr_sequencia) + coalesce(qt_hor_pendente_w,0)
					into STRICT	qt_hor_pendente_w
					from	atendimento_glicemia a,
							atend_glicemia c,
							prescr_medica b				
					where	a.nr_atendimento 	= b.nr_atendimento
					and	c.nr_sequencia		= a.nr_seq_glicemia		
					and	c.nr_atendimento	= a.nr_atendimento
					and	c.nr_atendimento	= b.nr_atendimento
					and	c.nr_prescricao		= b.nr_prescricao
					and dt_validade_prescr	between dt_inicial_w and dt_final_w
					and	coalesce(a.dt_suspensao::text, '') = ''
					and	((coalesce(a.qt_ui_insulina_calc,0) > 0) or (coalesce(a.qt_ui_insulina_adm,0) > 0) or (coalesce(a.qt_ui_insulina_int_calc,0) > 0) or (coalesce(a.qt_ui_insulina_int_adm,0) > 0) or (coalesce(a.qt_glicose,0) > 0) or (coalesce(a.qt_glicose_adm,0) > 0))
					and	coalesce(ie_adm_confirmada,'N') <> 'S'
					and	coalesce(ie_status_glic, 'P') = 'N'
					and	dt_atual_w > a.dt_controle + qt_minutos_p / 1440
					and	b.nr_atendimento 	= nr_atendimento_p;
				end if;
				
			end if;
		end if;

		-- Soluções do atendimento
		if (ie_consistir_sol_w = 'S') then
			if (ie_opcao_p = 1) then
				select	count(IE_TIPO_SOLUCAO) + coalesce(qt_hor_pendente_w,0)

				into STRICT	qt_hor_pendente_w
				from	adep_sol_prescr_v a,
						prescr_mat_hor b
				where   a.nr_prescricao = b.nr_prescricao
				and a.nr_seq_solucao = b.nr_seq_solucao
				and	b.dt_horario between dt_entrada_w and dt_atual_w
				and a.dt_inicio_prescr between dt_entrada_w and clock_timestamp()
				and a.dt_validade_prescr > clock_timestamp()
				and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
				and	coalesce(a.dt_susp_prescr::text, '') = ''
				and coalesce(b.dt_suspensao::text, '') = ''
				and	a.ie_suspenso		<> 'S'
				and	coalesce(a.ie_acm,'N')	<> 'S'
				and	coalesce(a.ie_adep,'N') 	= 'S'
				and	a.ie_tipo_solucao	= 1
				and	((a.ie_status_solucao = 'N') or
					 ((ie_etapas_sol_p = 'S') and (coalesce(a.nr_etapas,0) > 1) and (a.ie_status_solucao in ('I', 'INT')) and
					 ((a.dt_prev_prox_etapa IS NOT NULL AND a.dt_prev_prox_etapa::text <> '') and (dt_atual_w > (coalesce(a.dt_prev_prox_etapa,clock_timestamp()) - qt_horas_aten_sol_p / 1440))))) /* utilizado nvl para evitar ORA-00932 inconsistent datatypes */
				and	a.nr_atendimento		= nr_atendimento_p;
			else
				select	count(IE_TIPO_SOLUCAO) + coalesce(qt_hor_pendente_w,0)
				into STRICT	qt_hor_pendente_w
				from	adep_sol_prescr_v a,
						prescr_mat_hor b
				where   a.nr_prescricao = b.nr_prescricao
				and a.nr_seq_solucao = b.nr_seq_solucao
				and	b.dt_horario between dt_entrada_w and dt_atual_w
				and a.dt_validade_prescr	between dt_inicial_w and dt_final_w
				and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
				and	coalesce(a.dt_susp_prescr::text, '') = ''
				and coalesce(b.dt_suspensao::text, '') = ''
				and	a.ie_suspenso		<> 'S'
				and	coalesce(a.ie_acm,'N')	<> 'S'
				and	coalesce(a.ie_adep,'N') 	= 'S'
				and	a.ie_tipo_solucao	= 1
				and	((a.ie_status_solucao = 'N') or
					 ((ie_etapas_sol_p = 'S') and (coalesce(a.nr_etapas,0) > 1) and (a.ie_status_solucao in ('I', 'INT')) and
					 ((a.dt_prev_prox_etapa IS NOT NULL AND a.dt_prev_prox_etapa::text <> '') and (dt_atual_w > (coalesce(a.dt_prev_prox_etapa,clock_timestamp()) - qt_horas_aten_sol_p / 1440))))) /* utilizado nvl para evitar ORA-00932 inconsistent datatypes */
				and	a.nr_atendimento		= nr_atendimento_p;
			end if;
			
		end if;
		
		-- SNE's do atendimento		
		if (ie_consistir_sup_w = 'S') then
			if (ie_opcao_p = 1) then
				select	count(IE_TIPO_SOLUCAO) + coalesce(qt_hor_pendente_w,0)
				into STRICT	qt_hor_pendente_w	
				from    adep_sol_prescr_v
				where   coalesce(dt_susp_prescr::text, '') = ''
				and     ie_suspenso <> 'S'
				and     coalesce(ie_acm,'N') <> 'S'
				and     ie_status_solucao <> 'T'
				and   dt_status between dt_entrada_w and dt_atual_w	
				and dt_inicio_prescr between dt_entrada_w and clock_timestamp()
				and 	dt_validade_prescr > clock_timestamp()
				and     nr_atendimento = nr_atendimento_p
				and		Obter_se_consiste_min_pausa(nr_prescricao, nr_seq_solucao) = 'S'
				and     coalesce(ie_adep,'N') = 'S'
				and     ie_tipo_solucao = 2			
				and		coalesce(Obter_ult_evento_SNE(nr_prescricao, nr_seq_solucao),0) not in (1,3)
				and     (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
			else
				select	count(IE_TIPO_SOLUCAO) + coalesce(qt_hor_pendente_w,0)
				into STRICT	qt_hor_pendente_w	
				from    adep_sol_prescr_v
				where   coalesce(dt_susp_prescr::text, '') = ''
				and     ie_suspenso <> 'S'
				and     coalesce(ie_acm,'N') <> 'S'
				and     ie_status_solucao <> 'T'
				and    dt_status between dt_entrada_w and dt_atual_w	
				and 	dt_validade_prescr	between dt_inicial_w and dt_final_w
				and     nr_atendimento = nr_atendimento_p
				and		Obter_se_consiste_min_pausa(nr_prescricao, nr_seq_solucao) = 'S'
				and     coalesce(ie_adep,'N') = 'S'
				and     ie_tipo_solucao = 2			
				and		coalesce(Obter_ult_evento_SNE(nr_prescricao, nr_seq_solucao),0) not in (1,3)
				and     (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
			end if;
			
			
		end if;
	end if;
end if;

return	qt_hor_pendente_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_qt_hor_pendente_prescr ( cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, cd_perfil_p bigint, nr_atendimento_p bigint, qt_hora_incosistencia_p bigint, dt_inicio_filtro_P timestamp, dt_final_filtro_P timestamp, ie_opcao_p bigint, ie_etapas_sol_p text, qt_horas_aten_sol_p bigint, qt_minutos_p bigint, qt_minutos_disp_p bigint, ie_consiste_adm_ccg_p text default 'S') FROM PUBLIC;

