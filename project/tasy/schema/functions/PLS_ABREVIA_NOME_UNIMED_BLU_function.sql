-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE reg_nome_benef AS (nm_normal	varchar(60),	nm_abreviado	varchar(60));


CREATE OR REPLACE FUNCTION pls_abrevia_nome_unimed_blu ( nm_pessoa_fisica_p text) RETURNS varchar AS $body$
DECLARE


ds_retorno_w		varchar(255);
ds_sobrenome_w		varchar(255);
ds_lista_nome_w		varchar(255);
ie_nome_ok_w		varchar(10);
i			bigint := 0;
pos_nome_w		bigint;
ds_ultima_letra_w	varchar(255);
nm_pessoa_w		varchar(255);
qt_reg_vet_w		bigint;
type vetor is table of reg_nome_benef index by integer;
vetor_w				vetor;


BEGIN

ds_sobrenome_w	:= (upper(obter_ultimo_nome_pessoa(nm_pessoa_fisica_p)));

/*Verifica se o nome tem menos ou igual a 25 caracteres*/

if (length(nm_pessoa_fisica_p) <= 25) then
	/*Verifica se o sobre nome da pessoa é igual os itens abaixo, faz a conversão sobre eles*/

	if (ds_sobrenome_w in ('FILHO','NETO','SOBRINHO','JUNIOR','SEGUNDO','TERCEIRO')) then
		if (ds_sobrenome_w = 'FILHO') then
			ds_retorno_w	:= replace(nm_pessoa_fisica_p,'FILHO','FH');
		elsif (ds_sobrenome_w = 'NETO') then
			ds_retorno_w	:= replace(nm_pessoa_fisica_p,'NETO','NT');
		elsif (ds_sobrenome_w = 'SOBRINHO') then
			ds_retorno_w	:= replace(nm_pessoa_fisica_p,'SOBRINHO','SB');
		elsif (ds_sobrenome_w = 'JUNIOR') then
			ds_retorno_w	:= replace(nm_pessoa_fisica_p,'JUNIOR','JR');
		elsif (ds_sobrenome_w = 'SEGUNDO') then
			ds_retorno_w	:= replace(nm_pessoa_fisica_p,'SEGUNDO','II');
		elsif (ds_sobrenome_w = 'TERCEIRO') then
			ds_retorno_w	:= replace(nm_pessoa_fisica_p,'TERCEIRO','III');
		end if;

		return ds_retorno_w;
	else
		return nm_pessoa_fisica_p;
	end if;
else
	/*Verifica se o sobre nome da pessoa é igual os itens abaixo, faz a conversão sobre eles*/

	if (ds_sobrenome_w in ('FILHO','NETO','SOBRINHO','JUNIOR','SEGUNDO','TERCEIRO')) then
		if (ds_sobrenome_w = 'FILHO') then
			ds_lista_nome_w	:= replace(nm_pessoa_fisica_p,'FILHO','FH');
			ds_sobrenome_w	:= 'FH';
		elsif (ds_sobrenome_w = 'NETO') then
			ds_lista_nome_w	:= replace(nm_pessoa_fisica_p,'NETO','NT');
			ds_sobrenome_w	:= 'NT';
		elsif (ds_sobrenome_w = 'SOBRINHO') then
			ds_lista_nome_w	:= replace(nm_pessoa_fisica_p,'SOBRINHO','SB');
			ds_sobrenome_w	:= 'SB';
		elsif (ds_sobrenome_w = 'JUNIOR') then
			ds_lista_nome_w	:= replace(nm_pessoa_fisica_p,'JUNIOR','JR');
			ds_sobrenome_w	:= 'JR';
		elsif (ds_sobrenome_w = 'SEGUNDO') then
			ds_lista_nome_w	:= replace(nm_pessoa_fisica_p,'SEGUNDO','II');
			ds_sobrenome_w	:= 'II';
		elsif (ds_sobrenome_w = 'TERCEIRO') then
			ds_lista_nome_w	:= replace(nm_pessoa_fisica_p,'TERCEIRO','III');
			ds_sobrenome_w	:= 'III';
		end if;
	else
		ds_lista_nome_w	:= nm_pessoa_fisica_p;
	end if;

	while(ie_nome_ok_w	= 'N') loop
		begin
		select	substr(ds_lista_nome_w,length(ds_lista_nome_w),length(ds_lista_nome_w))
		into STRICT	ds_ultima_letra_w
		;

		if (ds_ultima_letra_w = ' ') then
			ds_lista_nome_w	:= substr(ds_lista_nome_w,1,length(ds_lista_nome_w)-1);
		else
			ie_nome_ok_w	:= 'S';
		end if;

		end;
	end loop;

	ds_lista_nome_w	:= ds_lista_nome_w || ' ';

	/*Nesse item, o sistema busca o nome do beneficiários e quebra em partes e coloca num vetor*/

	while(ds_lista_nome_w IS NOT NULL AND ds_lista_nome_w::text <> '') loop
		begin
		i		:= i+1;
		qt_reg_vet_w	:= vetor_w.count+1;

		select	position(' ' in ds_lista_nome_w)
		into STRICT	pos_nome_w
		;

		if (pos_nome_w > 0) then
			nm_pessoa_w	:= substr(ds_lista_nome_w,1,pos_nome_w - 1);
			nm_pessoa_w	:= upper(nm_pessoa_w);

			ds_lista_nome_w	:= substr(ds_lista_nome_w,pos_nome_w + 1,length(ds_lista_nome_w));
			/*Verifica se o nome é o primeiro ou igual os caractes abaixo*/

			if (i > 1) and (nm_pessoa_w <> 'DA') and (nm_pessoa_w <> 'DE') and (nm_pessoa_w <> 'DI') and (nm_pessoa_w <> 'DO') and (nm_pessoa_w <> 'DU') and (nm_pessoa_w <> 'DAS') and (nm_pessoa_w <> 'DES') and (nm_pessoa_w <> 'DIS') and (nm_pessoa_w <> 'DOS') and (nm_pessoa_w <> 'DUS') then

				/*Caso não for a última palavra, então abrevia o nome*/

				if (position(' ' in ds_lista_nome_w) > 0) then
					vetor_w[qt_reg_vet_w].nm_normal		:= nm_pessoa_w;
					vetor_w[qt_reg_vet_w].nm_abreviado	:= upper(substr(nm_pessoa_w,1,1));
				else
					vetor_w[qt_reg_vet_w].nm_normal		:= nm_pessoa_w;
					vetor_w[qt_reg_vet_w].nm_abreviado	:= nm_pessoa_w;
				end if;
			else
				vetor_w[qt_reg_vet_w].nm_normal		:= nm_pessoa_w;
				vetor_w[qt_reg_vet_w].nm_abreviado	:= nm_pessoa_w;
			end if;
		end if;
		end;
	end loop;
end if;

/*Monta o nome do beneficiário que está no vetor*/

for i in 1..vetor_w.count loop
	begin

	/*Caso for o primeiro ou o sobrenome, coloca o nome normal*/

	if (i = 1) or (i = vetor_w.count) then
		ds_retorno_w	:= ds_retorno_w||' '||vetor_w[i].nm_normal;
	else
		/*Verifica se o nome do beneficiário atual montado, mais o proxímo nome  e o sobrenome vai ser maior que 25, caso for, coloca o nome abreviado*/

		if (length(ds_retorno_w||vetor_w[i].nm_normal||ds_sobrenome_w) > 25) and
			/*Nessa linha, o sistema irá verificar se existem mais nomes a passar no for, caso tiver continua a abreviar*/

			((vetor_w.count - i) >= 1) then
			ds_retorno_w	:= ds_retorno_w||' '||vetor_w[i].nm_abreviado;
		else
			ds_retorno_w	:= ds_retorno_w||' '||vetor_w[i].nm_normal;
		end if;
	end if;
	end;
end loop;

/*Rotina de verificação para ver se não conseguiu abreviar o nome com 25 caracteres, aqui o sistema já irá abreviar todas as letras, menos o primeiro e o sobrenome*/

if (length(ds_retorno_w)	> 25) then
		ds_retorno_w	:= '';
		for i in 1..vetor_w.count loop
		begin

		if (i = 1) or (i = vetor_w.count) then
			ds_retorno_w	:= ds_retorno_w||' '||vetor_w[i].nm_normal;
		else
			if (length(ds_retorno_w||vetor_w[i].nm_normal||ds_sobrenome_w) > 10) and
				((vetor_w.count - i) >= 1) then
				ds_retorno_w	:= ds_retorno_w||' '||vetor_w[i].nm_abreviado;
			else
				ds_retorno_w	:= ds_retorno_w||' '||vetor_w[i].nm_normal;
			end if;
		end if;
		end;
	end loop;
end if;

ds_retorno_w	:= elimina_caractere_especial(ds_retorno_w);

return	substr(ds_retorno_w,2,length(ds_retorno_w));

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_abrevia_nome_unimed_blu ( nm_pessoa_fisica_p text) FROM PUBLIC;

