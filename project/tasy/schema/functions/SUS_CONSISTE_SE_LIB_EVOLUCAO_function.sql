-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION sus_consiste_se_lib_evolucao ( nr_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE

 
ds_retorno_w			varchar(15) := 'S';
qt_regra_proc_w			bigint;
nr_seq_regra_proc_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
qt_procedimento_solic_w		integer;
nr_seq_forma_org_w		bigint;
nr_seq_subgrupo_w		bigint;
nr_seq_grupo_w			bigint;
cd_setor_atendimento_w		integer;
qt_dias_intern_uti_w		bigint := 0;
qt_dias_setor_w			bigint := 0;

C01 CURSOR FOR 
	SELECT	cd_procedimento, 
		ie_origem_proced, 
		nr_seq_grupo, 
		nr_seq_subgrupo, 
		nr_seq_forma_org 
	from	sus_regra_proc_consist_uti 
	where	ie_situacao = 'A' 
	order by cd_procedimento, 
		nr_seq_forma_org, 
		nr_seq_subgrupo, 
		nr_seq_grupo;

C02 CURSOR FOR 
	SELECT	cd_setor_atendimento 
	from	sus_regra_setor_uti 
	where	ie_situacao = 'A' 
	order by cd_setor_atendimento;
		

BEGIN 
 
select	count(*) 
into STRICT	qt_regra_proc_w 
from	sus_regra_proc_consist_uti 
where	ie_situacao = 'A';
 
if (qt_regra_proc_w > 0) then 
	begin 
	 
	open C01;
	loop 
	fetch C01 into	 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		nr_seq_forma_org_w, 
		nr_seq_subgrupo_w, 
		nr_seq_grupo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		begin 
		select	coalesce(sum(a.qt_procedimento_solic),0) 
		into STRICT	qt_procedimento_solic_w 
		from	sus_laudo_paciente a, 
			sus_estrutura_procedimento_v b 
		where	a.cd_procedimento_solic = b.cd_procedimento 
		and	a.ie_origem_proced = b.ie_origem_proced 
		and	a.nr_atendimento = nr_atendimento_p 
		and	a.ie_tipo_laudo_sus = 2 
		and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
		and	a.cd_procedimento_solic	= coalesce(cd_procedimento_w,a.cd_procedimento_solic) 
		and	a.ie_origem_proced 	= coalesce(ie_origem_proced_w,a.ie_origem_proced) 
		and	b.nr_seq_forma_org 	= coalesce(nr_seq_forma_org_w,b.nr_seq_forma_org) 
		and	b.nr_seq_subgrupo 	= coalesce(nr_seq_subgrupo_w,b.nr_seq_subgrupo) 
		and	b.nr_seq_grupo 		= coalesce(nr_seq_grupo_w,b.nr_seq_grupo) 
		and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '');	
		exception 
		when others then 
			qt_procedimento_solic_w := 0;
		end;
 
		if (qt_procedimento_solic_w > 0) then 
			begin 
			 
			open C02;
			loop 
			fetch C02 into	 
				cd_setor_atendimento_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin 
				 
				begin 
				select	coalesce(sum(trunc(coalesce(dt_saida_unidade, clock_timestamp())) - trunc(dt_entrada_unidade)),0) 
				into STRICT	qt_dias_setor_w 
				from	atend_paciente_unidade a 
				where	nr_atendimento = nr_atendimento_p 
				and	cd_setor_atendimento = cd_setor_atendimento_w;					
				exception 
				when others then 
					qt_dias_setor_w := 0;
				end;
 
				qt_dias_intern_uti_w	:= qt_dias_intern_uti_w + qt_dias_setor_w;
				 
				end;
			end loop;
			close C02;
			 
			if (qt_dias_intern_uti_w > qt_procedimento_solic_w) then 
				begin 
				ds_retorno_w := 'N';
				end;
			end if;
			 
			end;
		end if;
		 
		end;
	end loop;
	close C01;	
	 
	end;
else 
	ds_retorno_w := 'S';
end if;
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION sus_consiste_se_lib_evolucao ( nr_atendimento_p bigint) FROM PUBLIC;

