-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION ageint_valida_regra_classif (cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_agenda_p bigint, cd_medico_p bigint, dt_agenda_p timestamp, ie_classif_agenda_p text, ie_classif_agendamento_p text) RETURNS varchar AS $body$
DECLARE

													
ie_permite_agenda_w varchar(1) := 'S';
ie_tipo_convenio_w bigint;
ie_existe_regra_w bigint;


BEGIN

	select ie_tipo_convenio
	  into STRICT ie_tipo_convenio_w
	  from convenio
	 where cd_convenio = cd_convenio_p;
	
	select count(*)
	  into STRICT ie_existe_regra_w
	  from ageint_regra_classif_adic arca,
		   ageint_classif_lib_adic acla
	 where arca.nr_sequencia = acla.nr_seq_regra_classif
	   and (coalesce(arca.cd_estabelecimento,cd_estabelecimento_p) = cd_estabelecimento_p or coalesce(cd_estabelecimento_p::text, '') = '')
	   and (coalesce(arca.cd_convenio,cd_convenio_p) = cd_convenio_p or coalesce(cd_convenio_p::text, '') = '')
	   and (coalesce(arca.ie_tipo_convenio,ie_tipo_convenio_w) = ie_tipo_convenio_w or ie_tipo_convenio_w = 0)
	   and (coalesce(arca.cd_agenda,cd_agenda_p) = cd_agenda_p or coalesce(cd_agenda_p::text, '') = '')
	   and (coalesce(arca.cd_medico,cd_medico_p) = cd_medico_p or coalesce(cd_medico_p::text, '') = '')
	   and (coalesce(arca.ie_classif_agenda,ie_classif_agenda_p) = ie_classif_agenda_p or coalesce(ie_classif_agenda_p::text, '') = '')
	   and acla.ie_classif_agenda = ie_classif_agendamento_p
	   and (trunc(dt_agenda_p) >= arca.dt_inicio_vigencia or coalesce(arca.dt_inicio_vigencia::text, '') = '')
	   and (trunc(dt_agenda_p) <= arca.dt_fim_vigencia or coalesce(arca.dt_fim_vigencia::text, '') = '')   
	   and (to_date(to_char(dt_agenda_p,'hh24:mi'),'hh24:mi') >= to_date(to_char(hr_inicio,'hh24:mi'),'hh24:mi') or coalesce(hr_inicio::text, '') = '')
	   and (to_date(to_char(dt_agenda_p,'hh24:mi'),'hh24:mi') <= to_date(to_char(hr_fim,'hh24:mi'),'hh24:mi') or coalesce(hr_fim::text, '') = '')
	   and clock_timestamp() >= dt_agenda_p - (nr_tempo_lib / 60 / 24);

	if (ie_existe_regra_w = 0) then
		ie_permite_agenda_w := 'N';
	end if;
	
	return ie_permite_agenda_w;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION ageint_valida_regra_classif (cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_agenda_p bigint, cd_medico_p bigint, dt_agenda_p timestamp, ie_classif_agenda_p text, ie_classif_agendamento_p text) FROM PUBLIC;

