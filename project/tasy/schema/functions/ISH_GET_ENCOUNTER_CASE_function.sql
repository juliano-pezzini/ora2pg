-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION ish_get_encounter_case ( patcaseid_p text, casetype_p text, movemntseqno_p text default 'X', startdate_p text default 'X', starttime_p text default 'X', enddate_p text default 'X', endtime_p text default 'X', movemntctgry_p text default 'NULL', movemnttype_p text default 'NULL', ie_buscar_sem_movto_p text default 'S', ishcasetype_p text default 'NULL', consider_canceled_p text default 'S') RETURNS bigint AS $body$
DECLARE

		
/*'
TYPE_P = IE_TIPO_ATENDIMENTO
INPAT = 1 - Internado
OUTPAT = 8 - Ambulatorial
'*/
nr_seq_episodio_w		episodio_paciente.nr_sequencia%type;
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
nr_seq_interno_w		atend_paciente_unidade.nr_seq_interno%type;
ie_tipo_atendimento_w		varchar(15);
nr_seq_tipo_admissao_fat_w	atendimento_paciente.nr_seq_tipo_admissao_fat%type;
patcaseid_w		bigint;

dt_ref_inicio_w		timestamp;
dt_ref_fim_w		timestamp;
ds_separator_w  varchar(5);


BEGIN
ds_separator_w := ish_param_pck.get_separador;
patcaseid_w	:=	somente_numero(patcaseid_p);

if (coalesce(movemntctgry_p,'NULL') <> 'NULL') and (coalesce(movemnttype_p,'NULL') <> 'NULL') then
	begin	
	if (ish_param_pck.get_conv_tipo_adm_fat = 'CTMCMT') and (coalesce(ishcasetype_p,'NULL') <> 'NULL') then
		nr_seq_tipo_admissao_fat_w	:=	somente_numero(intpd_conv('ATENDIMENTO_PACIENTE', 'NR_SEQ_TIPO_ADMISSAO_FAT', substr(ishcasetype_p || ds_separator_w || movemntctgry_p || ds_separator_w || movemnttype_p,1,40), null, 'I', 'I'));
	elsif (ish_param_pck.get_conv_tipo_adm_fat = 'MCMT') then
		nr_seq_tipo_admissao_fat_w	:=	somente_numero(intpd_conv('ATENDIMENTO_PACIENTE', 'NR_SEQ_TIPO_ADMISSAO_FAT', substr(movemntctgry_p || ds_separator_w || movemnttype_p,1,40), null, 'I', 'I'));
	end if;	
	end;
end if;

if (somente_numero(movemntseqno_p) > 0) then
	begin
	nr_seq_interno_w := somente_numero(intpd_conv('ATEND_PACIENTE_UNIDADE', 'NR_SEQ_INTERNO', substr(patcaseid_p || ds_separator_w || movemntseqno_p,1,40), null, 'I', 'I'));

	select	nr_atendimento
	into STRICT	nr_atendimento_w
	from	atend_paciente_unidade
	where	nr_seq_interno = nr_seq_interno_w;
	exception
	when others then
		nr_atendimento_w	:=	null;
	end;
end if;

if (coalesce(ie_buscar_sem_movto_p, 'S') = 'S') and (coalesce(nr_atendimento_w::text, '') = '') then
	begin	
	begin
	select	nr_sequencia
	into STRICT	nr_seq_episodio_w
	from	episodio_paciente
	where	nr_episodio = patcaseid_w  LIMIT 1;	
	exception
	when others then
		select	nr_sequencia
		into STRICT	nr_seq_episodio_w
		from	episodio_paciente
		where	nr_sequencia = patcaseid_w;
	end;
	
	begin
	dt_ref_inicio_w	:=	to_date(startdate_p || starttime_p,'yyyy-mm-ddhh24:mi:ss');	
	exception
	when others then
		dt_ref_inicio_w	:=	null;
	end;

	begin
	dt_ref_fim_w	:=	to_date(enddate_p || endtime_p,'yyyy-mm-ddhh24:mi:ss');
	exception
	when others then
		dt_ref_fim_w	:=	null;
	end;
	
	if (casetype_p = 'OUTPAT') then
		ie_tipo_atendimento_w	:=	'8';
	elsif (casetype_p = 'INPAT') then
		ie_tipo_atendimento_w	:=	'1';
	else
		ie_tipo_atendimento_w	:=	'X';
	end if;
	
	begin
	if (dt_ref_inicio_w IS NOT NULL AND dt_ref_inicio_w::text <> '') and (dt_ref_fim_w IS NOT NULL AND dt_ref_fim_w::text <> '') then
		select	a.nr_atendimento
		into STRICT	nr_atendimento_w
		from	atendimento_paciente a		
		where	a.nr_seq_episodio = nr_seq_episodio_w
		and	((ie_tipo_atendimento_w = 'X') or (ie_tipo_atendimento_w = get_case_encounter_type(a.nr_seq_episodio, null, a.nr_atendimento, a.ie_tipo_atendimento)))
		and	((coalesce(nr_seq_tipo_admissao_fat_w,0) = 0) or (nr_seq_tipo_admissao_fat_w = a.nr_seq_tipo_admissao_fat))
		and	exists (	SELECT	1
				from	atend_paciente_unidade x
				where	x.nr_atendimento = a.nr_atendimento
				and	to_date(x.dt_entrada_unidade, 'dd/mm/yyyy') <= to_date(dt_ref_inicio_w, 'dd/mm/yyyy'))
		and	exists (	select	1
				from	atend_paciente_unidade x
				where	x.nr_atendimento = a.nr_atendimento
				and	coalesce(to_date(x.dt_saida_unidade, 'dd/mm/yyyy'), to_date(dt_ref_fim_w, 'dd/mm/yyyy')) >= to_date(dt_ref_fim_w, 'dd/mm/yyyy'))
		and (consider_canceled_p = 'S' or coalesce(a.dt_cancelamento::text, '') = '')  LIMIT 1;
	else
		select	a.nr_atendimento
		into STRICT	nr_atendimento_w
		from	atendimento_paciente a
		where	a.nr_seq_episodio = nr_seq_episodio_w
		and	((ie_tipo_atendimento_w = 'X') or (ie_tipo_atendimento_w = get_case_encounter_type(a.nr_seq_episodio, null, a.nr_atendimento, a.ie_tipo_atendimento)))
		and	((coalesce(nr_seq_tipo_admissao_fat_w,0) = 0) or (nr_seq_tipo_admissao_fat_w = a.nr_seq_tipo_admissao_fat))
		and (consider_canceled_p = 'S' or coalesce(a.dt_cancelamento::text, '') = '')  LIMIT 1;
	end if;	
	exception
	when others then
		nr_atendimento_w	:=	null;
	end;
	
	exception
	when others then
		nr_atendimento_w	:=	null;
	end;
end if;

return nr_atendimento_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION ish_get_encounter_case ( patcaseid_p text, casetype_p text, movemntseqno_p text default 'X', startdate_p text default 'X', starttime_p text default 'X', enddate_p text default 'X', endtime_p text default 'X', movemntctgry_p text default 'NULL', movemnttype_p text default 'NULL', ie_buscar_sem_movto_p text default 'S', ishcasetype_p text default 'NULL', consider_canceled_p text default 'S') FROM PUBLIC;

