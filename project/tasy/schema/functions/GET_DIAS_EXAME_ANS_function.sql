-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION get_dias_exame_ans (nr_seq_proc_interno_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_tipo_agendamento_p text) RETURNS bigint AS $body$
DECLARE


cd_area_proced_w	integer;
cd_espec_proced_w	integer;
cd_grupo_proced_w	bigint;
nr_sequencia_w  ageint_dias_atend_exame.nr_sequencia%type;
qt_dias_w ageint_dias_atend_exame.qt_dias_atend_ans%type := 0;

c02 CURSOR FOR
	SELECT 	nr_sequencia
	  into STRICT 	nr_sequencia_w
	  from 	ageint_dias_atend_exame
	  where	ie_situacao = 'A'
	  and (cd_area_procedimento = cd_area_proced_w or coalesce(cd_area_procedimento::text, '') = '')
	  and (cd_especialidade = cd_espec_proced_w or coalesce(cd_especialidade::text, '') = '')
	  and (cd_grupo_proc = cd_grupo_proced_w or coalesce(cd_grupo_proc::text, '') = '')
	  and (nr_seq_proc_interno = nr_seq_proc_interno_p or coalesce(nr_seq_proc_interno::text, '') = '')
	  and	((cd_procedimento	= cd_procedimento_p and ie_origem_proced = ie_origem_proced_p) or coalesce(cd_procedimento::text, '') = '')
	  and (ie_tipo_agendamento = ie_tipo_agendamento_p or coalesce(ie_tipo_agendamento::text, '') = '')
	  order by  coalesce(nr_Seq_proc_interno,0),
			coalesce(cd_procedimento, 0),
			coalesce(cd_grupo_proc,0),
			coalesce(cd_especialidade,0),
			coalesce(cd_area_procedimento,0),
			coalesce(ie_tipo_agendamento,0);


BEGIN

select	coalesce(max(cd_area_procedimento),0),
		coalesce(max(cd_especialidade),0),
		coalesce(max(cd_grupo_proc),0)
into STRICT	cd_area_proced_w,
		cd_espec_proced_w,
		cd_grupo_proced_w
from	estrutura_procedimento_v
where	cd_procedimento = cd_procedimento_p
and		ie_origem_proced = ie_origem_proced_p;

open	c02;
loop
fetch	c02 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	
	nr_sequencia_w	:= nr_sequencia_w;
	
	end;
end loop;
close	c02;


if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
  
    select	max(qt_dias_atend_ans)
    into STRICT	qt_dias_w
    from	ageint_dias_atend_exame
	where	nr_sequencia = nr_sequencia_w;

end if;

return qt_dias_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION get_dias_exame_ans (nr_seq_proc_interno_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_tipo_agendamento_p text) FROM PUBLIC;

