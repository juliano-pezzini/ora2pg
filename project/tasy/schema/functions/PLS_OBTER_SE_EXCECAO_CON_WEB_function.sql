-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_excecao_con_web ( nr_seq_ocorrencia_p pls_excecao_ocorrencia_web.nr_seq_ocorrencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_mat_p pls_conta_mat.nr_sequencia%type, dt_emissao_p timestamp, ie_tipo_item_p text, nr_seq_prestador_p pls_prestador.nr_sequencia%type, cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proced_p procedimento.ie_origem_proced%type, nr_seq_material_p pls_material.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, ie_tipo_guia_p text, nr_seq_plano_p bigint, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, qt_idade_p bigint, qt_idade_meses_p bigint, nr_seq_tipo_acomodacao_p bigint, nr_seq_tipo_acomod_benef_p bigint, ie_pcmso_p text, ie_lib_web_guia_p text, nr_seq_guia_p pls_guia_plano.nr_sequencia%type) RETURNS varchar AS $body$
DECLARE


ie_lib_web_guia_w			varchar(255);
cd_cgc_prestador_imp_w			varchar(20);
cd_cpf_prestador_imp_w			varchar(20);
uf_crm_prest_solic_imp_w		medico.uf_crm%type;
cd_cgc_executor_imp_w			varchar(20);
cd_cpf_executor_imp_w			varchar(20);
cd_cgc_prestador_prot_imp_w		varchar(20);
nr_cpf_prestador_prot_imp_w		varchar(20);
cd_guia_w				varchar(20);
cd_guia_referencia_w			varchar(20);
cd_guia_pesquisa_w			varchar(20);
sg_cons_prest_solic_imp_w		varchar(10);
qt_idade_w				varchar(5);
ie_tipo_prestador_w			varchar(2);
ie_grupo_prest_w			varchar(2);
ie_valida_guia_principal_w		varchar(1);
cd_tipo_acomodacao_imp_w		varchar(2);
ie_unid_tempo_idade_w			varchar(2);
ds_retorno_w				varchar(1)	:= 'N';
ie_validacao_compl_prest_w		varchar(1)	:= 'S';
ie_pcmso_regra_w			varchar(1);
ie_pcmso_benef_w			varchar(1);
cd_procedimento_w			bigint;
nr_seq_prestador_regra_w		bigint;
nr_seq_prestador_imp_w			pls_conta.nr_seq_prestador_imp%type;
nr_crm_prest_solic_imp_w		pls_conta.nr_crm_prest_solic_imp%type;
nr_seq_prestador_exec_imp_w		pls_conta.nr_seq_prestador_exec_imp%type;
nr_seq_prestador_solic_w		pls_prestador.nr_sequencia%type;
nr_seq_prestador_exec_w			pls_prestador.nr_sequencia%type;
nr_seq_protocolo_w			pls_protocolo_conta.nr_sequencia%type;
nr_seq_prestador_prot_imp_w		pls_protocolo_conta.nr_seq_prestador_imp%type;
nr_seq_usu_prestador_w			bigint;
nr_seq_classificacao_w			bigint;
nr_seq_prestador_atend_w		pls_prestador.nr_sequencia%type;
nr_seq_prestador_w			pls_prestador.nr_sequencia%type;
nr_seq_grupo_prestador_w		bigint;
nr_seq_tipo_acomod_benef_w		bigint;
nr_seq_tipo_acomodacao_w		bigint;
nr_seq_tipo_acomodacao_regra_w		bigint;
nr_seq_grupo_rec_regra_w		bigint;
nr_seq_grupo_rec_w			bigint;
nr_seq_regra_w				bigint;
nr_seq_guia_w				bigint;
qt_regra_w				bigint;
ie_origem_proced_w			integer;
qt_idade_meses_w			integer;
qt_idade_min_w				smallint;
qt_idade_max_w				smallint;
qt_guia_princ_valida_w			bigint;
nr_seq_prestador_solic_rec_w		pls_prestador.nr_sequencia%type;/*Prestador solicitante da requisição*/
qt_regra_prest_w			integer;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_prestador,
		a.ie_tipo_prestador,
		a.nr_seq_grupo_prestador,
		a.nr_seq_tipo_acomodacao,
		a.ie_unid_tempo_idade,
		a.qt_idade_min,
		a.qt_idade_max,
		a.nr_seq_grupo_rec,
		coalesce(a.ie_pcmso, 'N'),
		a.ie_valida_guia_principal,
		(SELECT	count(1)
		from	pls_ocor_regra_prest x
		where	x.nr_seq_ocor_web_excecao = a.nr_sequencia) qt_regra_prest
	from	pls_excecao_ocorrencia_web a
	where	a.nr_seq_ocorrencia	= nr_seq_ocorrencia_p
	and	a.ie_situacao		= 'A'
	and	((coalesce(ie_tipo_guia::text, '') = '') or (a.ie_tipo_guia = ie_tipo_guia_p))
	and	a.dt_inicio_vigencia <= fim_dia(dt_emissao_p)
	and (a.dt_fim_vigencia >= trunc(dt_emissao_p,'dd') or coalesce(a.dt_fim_vigencia::text, '') = '')
	and	((coalesce(a.nr_seq_tipo_acomod_benef::text, '') = '') or (a.nr_seq_tipo_acomod_benef = nr_seq_tipo_acomod_benef_w ))
	and	((coalesce(a.nr_seq_tipo_acomodacao::text, '') = '') or (a.nr_seq_tipo_acomodacao  = nr_seq_tipo_acomodacao_w ));


BEGIN
/*Obter dados da conta*/

select	a.nr_seq_prestador_imp,
	a.nr_seq_prestador_imp_ref,
	a.cd_cgc_prestador_imp,
	a.cd_cpf_prestador_imp,
	elimina_caractere_especial(a.nr_crm_prest_solic_imp),
	a.sg_cons_prest_solic_imp,
	a.uf_crm_prest_solic_imp,
	a.nr_seq_prestador_exec_imp,
	a.nr_seq_prestador_exec_imp_ref,
	a.cd_cgc_executor_imp,
	a.cd_cpf_executor_imp,
	a.nr_seq_protocolo,
	a.cd_tipo_acomodacao_imp,
	a.cd_guia_imp,
	a.cd_guia_referencia,
	a.cd_guia_pesquisa,
	b.cd_cgc_prestador_imp,
	b.nr_cpf_prestador_imp,
	b.nr_seq_prestador_imp,
	b.nr_seq_prestador_imp_ref,
	b.nr_seq_usu_prestador
into STRICT	nr_seq_prestador_imp_w,--
	nr_seq_prestador_solic_w,
	cd_cgc_prestador_imp_w,--
	cd_cpf_prestador_imp_w,--
	nr_crm_prest_solic_imp_w,--
	sg_cons_prest_solic_imp_w,--
	uf_crm_prest_solic_imp_w,--
	nr_seq_prestador_exec_imp_w,--
	nr_seq_prestador_exec_w,
	cd_cgc_executor_imp_w,--
	cd_cpf_executor_imp_w,--
	nr_seq_protocolo_w,
	cd_tipo_acomodacao_imp_w,
	cd_guia_w,
	cd_guia_referencia_w,
	cd_guia_pesquisa_w,
	cd_cgc_prestador_prot_imp_w,
	nr_cpf_prestador_prot_imp_w,
	nr_seq_prestador_prot_imp_w,
	nr_seq_prestador_atend_w,
	nr_seq_usu_prestador_w
from	pls_conta		a,
	pls_protocolo_conta	b
where	a.nr_seq_protocolo 	= b.nr_sequencia
and	a.nr_sequencia		= nr_seq_conta_p;

ie_lib_web_guia_w := ie_lib_web_guia_p;
cd_guia_pesquisa_w := pls_converte_cd_guia_pesquisa(cd_guia_w);
nr_seq_guia_w := nr_seq_guia_p;

if (ie_lib_web_guia_w = 'S') then
	if (cd_guia_pesquisa_w IS NOT NULL AND cd_guia_pesquisa_w::text <> '') and (coalesce(nr_seq_guia_w::text, '') = '')then
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_guia_w
		from	pls_guia_plano	a
		where	a.cd_guia_pesquisa	= cd_guia_pesquisa_w
		and	a.nr_seq_segurado	= nr_seq_segurado_p;
	end if;

	if (cd_guia_w IS NOT NULL AND cd_guia_w::text <> '') and (coalesce(nr_seq_guia_w::text, '') = '') then
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_guia_w
		from	pls_guia_plano	a
		where	a.cd_guia		= cd_guia_w
		and	a.nr_seq_segurado	= nr_seq_segurado_p;
	end if;

	if (cd_guia_referencia_w IS NOT NULL AND cd_guia_referencia_w::text <> '') and (coalesce(nr_seq_guia_w::text, '') = '') then
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_guia_w
		from	pls_guia_plano	a
		where	a.cd_guia	= cd_guia_referencia_w
		and	a.nr_seq_segurado	= nr_seq_segurado_p;
	end if;

	if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		select	count(1)
		into STRICT	qt_regra_w
		from	pls_guia_lib_ocor_web	a
		where	a.nr_seq_ocorrencia	= nr_seq_ocorrencia_p
		and	a.nr_seq_guia		= nr_seq_guia_w
		and	dt_emissao_p between trunc(dt_inicio_vigencia) and fim_dia(coalesce(dt_fim_vigencia, dt_emissao_p));

		if (qt_regra_w > 0) then
			ds_retorno_w	:= 'S';
			goto fim;
		end if;

		select	max(b.nr_seq_prestador)
		into STRICT	nr_seq_prestador_solic_rec_w
		from	pls_requisicao		b,
			pls_execucao_requisicao	a
		where	a.nr_seq_guia	= nr_seq_guia_w
		and	b.nr_sequencia	= a.nr_seq_requisicao;
	end if;
end if;
/* Tipo acomodação */

nr_seq_tipo_acomodacao_w := nr_seq_tipo_acomodacao_p;

/*Obter dados segurado*/

ie_pcmso_benef_w 	:= ie_pcmso_p;
qt_idade_w		:= qt_idade_p;
qt_idade_meses_w	:= qt_idade_meses_p;

/*Obter dados do plano */

nr_seq_tipo_acomod_benef_w := nr_seq_tipo_acomod_benef_p;

select	coalesce(max(nr_seq_grupo_rec), 0)
into STRICT	nr_seq_grupo_rec_w
from 	procedimento
where	cd_procedimento = cd_procedimento_p
and 	ie_origem_proced = ie_origem_proced_p;

open C01;
loop
fetch C01 into
	nr_seq_regra_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_prestador_regra_w,
	ie_tipo_prestador_w,
	nr_seq_grupo_prestador_w,
	nr_seq_tipo_acomodacao_regra_w,
	ie_unid_tempo_idade_w,
	qt_idade_min_w,
	qt_idade_max_w,
	nr_seq_grupo_rec_regra_w,
	ie_pcmso_regra_w,
	ie_valida_guia_principal_w,
	qt_regra_prest_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	------------------------------------------------------------REGRA DE ITEM-------------------------------------------------------------------------------
	if (ie_tipo_item_p = 'P') and (coalesce(cd_procedimento_w, 0) <> 0) then
		if (cd_procedimento_w <> coalesce(cd_procedimento_p, 0)) or (ie_origem_proced_w <> coalesce(ie_origem_proced_p, 0)) then
			goto final;
		end if;
	end if;

	if (coalesce(nr_seq_grupo_rec_regra_w,0) > 0) and (coalesce(nr_seq_grupo_rec_regra_w,0) <> nr_seq_grupo_rec_w)	then
		goto final;
	end if;
	------------------------------------------------------------REGRA DE PRESTADOR-------------------------------------------------------------------------------
	/*Obtem tipo Prestador selecionado na regra - */

	if ('E' = ie_tipo_prestador_w and coalesce(nr_seq_prestador_exec_w,0) > 0) then
		nr_seq_prestador_w	:= nr_seq_prestador_exec_w;

	elsif ('A' = ie_tipo_prestador_w and coalesce(nr_seq_prestador_atend_w,0) > 0) then
		nr_seq_prestador_w	:= nr_seq_prestador_atend_w;

	elsif ('S' = ie_tipo_prestador_w and coalesce(nr_seq_prestador_solic_w,0) > 0) then
		nr_seq_prestador_w	:= nr_seq_prestador_solic_w;
	elsif ('SR' = ie_tipo_prestador_w and (nr_seq_prestador_solic_rec_w IS NOT NULL AND nr_seq_prestador_solic_rec_w::text <> '')) then
		nr_seq_prestador_w	:= nr_seq_prestador_solic_rec_w;
	else
		nr_seq_prestador_w	:= nr_seq_prestador_exec_w;
	end if;

	/*Obter se a regra é para um prestador especifico - askono OS 359215  - 26/09/11*/

	if (coalesce(nr_seq_prestador_regra_w,0) > 0) then
		if (nr_seq_prestador_regra_w <> nr_seq_prestador_w) or (coalesce(nr_seq_prestador_w::text, '') = '') then
			goto final;
		end if;
	end if;

	select	max(nr_seq_classificacao)
	into STRICT	nr_seq_classificacao_w
	from	pls_prestador
	where	nr_sequencia = nr_seq_prestador_w;

	/*Verificar se o prestador pertence ao grupo dos prestador - askono OS 359215  - 26/09/11*/

	if (coalesce(nr_seq_grupo_prestador_w,0) > 0) then

		ie_grupo_prest_w := pls_se_grupo_preco_prestador(nr_seq_grupo_prestador_w, nr_seq_prestador_w, nr_seq_classificacao_w); --nr_seq_classificacao_w
		if (ie_grupo_prest_w = 'N') then
			goto final;
		end if;
	end if;

	if (qt_regra_prest_w > 0) then
		/* Francisco - 28/06/2012 - Validação complementar de prestador */

		ie_validacao_compl_prest_w := pls_valida_compl_ocor_prest(	'PLS_EXCECAO_OCORRENCIA_WEB', nr_seq_regra_w, nr_seq_conta_p, nr_seq_prestador_w, dt_emissao_p, ie_validacao_compl_prest_w);
	end if;

	if (ie_validacao_compl_prest_w = 'N') then
		goto final;
	end if;

	if (coalesce(ie_valida_guia_principal_w,'N') = 'S') then

		select	count(1)
		into STRICT 	qt_guia_princ_valida_w
		from	pls_guia_plano
		where	nr_sequencia = nr_seq_guia_w
		and	(nr_seq_guia_principal IS NOT NULL AND nr_seq_guia_principal::text <> '')  LIMIT 1;

		if (coalesce(qt_guia_princ_valida_w,0)  = 0) then
			goto final;
		end if;

	end if;

	------------------------------------------------------------------------------------------REGRA DE BENEFICIÁRIO-------------------------------------------------------------------------------------
	/* REGRA DE IDADE DO SEGURADO*/

	/* Verificar se for regra de quantidade de idade minima ou maxima da regra, sendo "A" por ano e "M" por meses*/

	if (ie_unid_tempo_idade_w = 'A') then
		if	(qt_idade_min_w IS NOT NULL AND qt_idade_min_w::text <> '' AND qt_idade_min_w > qt_idade_w) or
			(qt_idade_max_w IS NOT NULL AND qt_idade_max_w::text <> '' AND qt_idade_max_w < qt_idade_w) then
			goto final;
		end if;
	elsif (ie_unid_tempo_idade_w = 'M') then
		if	(qt_idade_min_w IS NOT NULL AND qt_idade_min_w::text <> '' AND qt_idade_min_w > qt_idade_meses_w) or
			(qt_idade_max_w IS NOT NULL AND qt_idade_max_w::text <> '' AND qt_idade_max_w < qt_idade_meses_w) then
			goto final;
		end if;
	end if;
	-- jjung 26/09/2012 - Se a regra for para quem tem pcmso  e o benef não tiver pcmso então não é excecao
	if (ie_pcmso_regra_w = 'S') then
		if (ie_pcmso_benef_w <> ie_pcmso_regra_w) then
			goto final;
		end if;
	end if;
	-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	ds_retorno_w := 'S';
	/*se encontrou uma exceção válida irá sair do cursor e retornar 'S'  na rotina de gerar ocorrencia web*/

	goto fim;
	<<final>>
		null;
end loop;
close C01;

<<fim>>

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_excecao_con_web ( nr_seq_ocorrencia_p pls_excecao_ocorrencia_web.nr_seq_ocorrencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_mat_p pls_conta_mat.nr_sequencia%type, dt_emissao_p timestamp, ie_tipo_item_p text, nr_seq_prestador_p pls_prestador.nr_sequencia%type, cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proced_p procedimento.ie_origem_proced%type, nr_seq_material_p pls_material.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, ie_tipo_guia_p text, nr_seq_plano_p bigint, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, qt_idade_p bigint, qt_idade_meses_p bigint, nr_seq_tipo_acomodacao_p bigint, nr_seq_tipo_acomod_benef_p bigint, ie_pcmso_p text, ie_lib_web_guia_p text, nr_seq_guia_p pls_guia_plano.nr_sequencia%type) FROM PUBLIC;

