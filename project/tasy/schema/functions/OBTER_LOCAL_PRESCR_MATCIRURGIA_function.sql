-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_local_prescr_matcirurgia (nr_cirurgia_p bigint, nr_prescricao_p bigint, cd_local_estoque_p bigint, nr_seq_atepacu_p bigint, nm_usuario_p text, cd_perfil_p bigint, cd_setor_atendimento_p bigint) RETURNS bigint AS $body$
DECLARE


cd_motivo_baixa_w			smallint;


cd_setor_atendimento_w		integer;
cd_setor_atend_baixa_w		integer;
dt_entrada_unidade_w		timestamp;

nr_prescricao_w				bigint;
dt_prescricao_w				timestamp;
nr_atendimento_w			bigint;
cd_estab_w					bigint;

nr_seq_prescr_w				bigint;
cd_material_w				integer;
qt_material_w				double precision;
qt_dispensar_w				double precision;
qt_dias_solic_w				smallint;
qt_dias_lib_w				smallint;
ie_status_w					varchar(2);
ie_baixa_paciente_w			varchar(1) := 'S';
ie_via_aplicacao_w			varchar(5);
cd_unidade_medida_w			varchar(30);
cd_fornec_consignado_w		varchar(14);
nr_seq_lote_fornec_w		bigint;

ie_local_valido_w			varchar(1) := 'S';
ie_disp_estoque_w			varchar(1) := 'S';
ie_atualiza_estoque_w		varchar(1) := 'S';

cd_local_estoque_w			integer;

nr_sequencia_w				bigint;

cd_convenio_w				integer;
cd_categoria_w				varchar(10);
nr_doc_convenio_w			varchar(20);
ie_tipo_guia_w				varchar(2);
cd_funcao_w					bigint;
ie_somente_cb_w				varchar(01)	:= 'N';
ie_material_estoque_w		varchar(01) := 'N';
ie_mat_estoque_mat_w		varchar(01) := 'N';
cd_convenio_ww				integer;
cd_categoria_ww				varchar(10);
cd_senha_w					varchar(20);

nr_receita_w				bigint;
ds_local_estoque_w			varchar(100);


cd_estabelecimento_w		smallint;
nr_seq_kit_estoque_w		bigint;
ie_local_estoque_w			varchar(1)	:= 'P';
ie_consignado_w				varchar(1);
cd_material_estoque_w		integer;
ie_permitir_baixa_w			varchar(1);
ie_conta_fechada_w			varchar(1);
qt_estoque_w				double precision;
cd_kit_material_w			integer;
ie_baixa_estoque_w			varchar(1);
qt_conv_estoque_consumo_w	double precision;
cd_unidade_medida_estoque_w	varchar(30);
cd_unidade_medida_consumo_w	varchar(30);


C01 CURSOR FOR
	SELECT	b.nr_prescricao,
		b.dt_prescricao,
		b.nr_atendimento,
		c.cd_estabelecimento
	from  	atendimento_paciente c,
		prescr_medica b,
		cirurgia a
	where 	b.nr_atendimento	= c.nr_atendimento
	  and 	a.nr_prescricao		= b.nr_prescricao
	  and 	a.nr_cirurgia 		= nr_cirurgia_p
	  and 	a.nr_prescricao 	= nr_prescricao_p
	  and 	coalesce(b.dt_baixa::text, '') = '';

C02 CURSOR FOR
	SELECT nr_sequencia,
		 cd_material,
		 qt_material,
		 qt_total_dispensar,
		 coalesce(qt_dias_solicitado,0),
		 coalesce(qt_dias_liberado,0),
		 ie_status_cirurgia,
		 obter_se_baixa_estoque_pac(cd_setor_atendimento_w, cd_material,null,0),
		 ie_via_aplicacao,
		 cd_unidade_medida,
		 cd_fornec_consignado,
		 nr_seq_lote_fornec,
		 cd_convenio,
		 cd_categoria,
		 coalesce(nr_receita,0),
		 coalesce(nr_seq_kit_estoque,0),
	coalesce(cd_kit_material, 0)
	from prescr_material
	where 	nr_prescricao = nr_prescricao_w
	and	((ie_somente_cb_w = 'N') or ((ie_status_cirurgia = 'CB') or (ie_status_cirurgia = 'AD')))
	  and cd_motivo_baixa = 0;


BEGIN


select	obter_funcao_ativa
into STRICT	cd_funcao_w
;

cd_motivo_baixa_w := obter_param_usuario(36, 21, cd_perfil_p, nm_usuario_p, 0, cd_motivo_baixa_w);

select 	wheb_usuario_pck.get_cd_estabelecimento
into STRICT	cd_estabelecimento_w
;

ie_permitir_baixa_w	:= 'S';

/* Cirurgia de pacientes */

if (cd_funcao_w = 901) then
	cd_motivo_baixa_w := obter_param_usuario(901, 37, cd_perfil_p, nm_usuario_p, 0, cd_motivo_baixa_w);
	ie_somente_cb_w := obter_param_usuario(901, 45, cd_perfil_p, nm_usuario_p, 0, ie_somente_cb_w);	
	ie_local_estoque_w := obter_param_usuario(901, 137, cd_perfil_p, nm_usuario_p, 0, ie_local_estoque_w);	
end if;

ie_permitir_baixa_w	:= obter_valor_param_usuario(901, 139, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w);

/* Gestao de cirurgias */

if (cd_funcao_w = 900) then
	ie_somente_cb_w := obter_param_usuario(900, 43, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_somente_cb_w);
	ie_local_estoque_w := obter_param_usuario(900, 73, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_local_estoque_w);
	ie_permitir_baixa_w := obter_param_usuario(900, 77, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_permitir_baixa_w);	
end if;

select	max(cd_setor_atendimento),
	max(cd_setor_atendimento),
	max(dt_entrada_unidade)
into STRICT	cd_setor_atendimento_w,
		cd_setor_atend_baixa_w,
		dt_entrada_unidade_w
from 	atend_paciente_unidade
where 	nr_seq_interno = nr_seq_atepacu_p;

select	coalesce(max(ie_atualiza_estoque),'N')
into STRICT	ie_atualiza_estoque_w
from	tipo_baixa_prescricao
where	cd_tipo_baixa = cd_motivo_baixa_w
and		ie_prescricao_devolucao = 'P';

cd_local_estoque_w := cd_local_estoque_p;
if (ie_local_estoque_w = 'U') then
	cd_setor_atendimento_w := cd_setor_atendimento_p;
end if;


open C01;
loop
	fetch C01 into	nr_prescricao_w,
				dt_prescricao_w,
				nr_atendimento_w,
				cd_estab_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */	
	
	/* Verifica se o atendimento possui a conta fechada */

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_conta_fechada_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_w
	and	ie_fim_conta = 'F'
	and	(dt_fim_conta IS NOT NULL AND dt_fim_conta::text <> '');	
	
	if	((ie_permitir_baixa_w = 'S') or (ie_permitir_baixa_w = 'A') or
		 (ie_permitir_baixa_w = 'N' AND ie_conta_fechada_w = 'N') or
		 (ie_permitir_baixa_w = 'B' AND ie_conta_fechada_w = 'N')) then
		begin		
		open C02;
		loop
			fetch c02 into		nr_seq_prescr_w,
						cd_material_w,
						qt_material_w,
						qt_dispensar_w,
						qt_dias_solic_w,
						qt_dias_lib_w,
						ie_status_w,
						ie_baixa_paciente_w,
						ie_via_aplicacao_w,
						cd_unidade_medida_w,
						cd_fornec_consignado_w,
						nr_seq_lote_fornec_w,
						cd_convenio_ww,
						cd_categoria_ww,
						nr_receita_w,
						nr_seq_kit_estoque_w,
						cd_kit_material_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */		
			
			ie_disp_estoque_w 		:= 'S';
			
					
			/* Consistencia - Jerusa OS 115151 */

			if (ie_atualiza_estoque_w <> 'S') then
				cd_local_estoque_w := null;
			elsif	((nr_seq_kit_estoque_w = 0) or (cd_local_estoque_p = 0)) and (ie_local_estoque_w <> 'C') then
				select cd_local_estoque
				into STRICT cd_local_estoque_w
				from setor_atendimento
				where cd_setor_atendimento = cd_setor_atendimento_w;			
			elsif (nr_seq_kit_estoque_w <> 0) and (cd_local_estoque_p <> 0) then
				cd_local_estoque_w	:= cd_local_estoque_p;
			end if;
			
		end loop;
		close C02;
			
		end;
	end if;

end loop;
close c01;


return	cd_local_estoque_w;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_local_prescr_matcirurgia (nr_cirurgia_p bigint, nr_prescricao_p bigint, cd_local_estoque_p bigint, nr_seq_atepacu_p bigint, nm_usuario_p text, cd_perfil_p bigint, cd_setor_atendimento_p bigint) FROM PUBLIC;

