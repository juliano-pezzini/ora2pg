-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_leito_livre_acomp ( nr_atendimento_p bigint, cd_unidade_bas_dest_p text, cd_unidade_compl_dest_p text, cd_setor_atend_dest_p bigint, ie_entrada_unica_p text default 'N', ie_opcao_p text default 'N') RETURNS varchar AS $body$
DECLARE

ds_retorno_w	varchar(1) := 'S';
qt_acompanhate_w	bigint;
qt_acompanhates_w	bigint;
qt_acompanhante_episodio_w	bigint;
nr_agrupamento_w	integer;
qt_livre_w integer;
qt_acomp_acom_w		bigint;



BEGIN

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
	--Obter quantidade de acompanhantes
	select	count(*)
	into STRICT	qt_acompanhates_w
	from	unidade_atendimento a
	where 	a.nr_atendimento_acomp	= nr_atendimento_p
	and 	a.ie_status_unidade	= 'M';
	
	--Obter quantidade de acompanhantes BDM3 FR6 Austria
	select	count(*)
		into STRICT qt_acompanhante_episodio_w
		from	episodio_acompanhante a
		where	a.nr_atend_paciente = nr_atendimento_p
		and a.nr_atend_acompanhante in (
					SELECT	b.nr_atendimento
					from	atendimento_paciente b
					where	b.nr_atendimento = a.nr_atend_acompanhante
					and coalesce(b.dt_alta::text, '') = '');
					
	qt_acompanhate_w := qt_acompanhates_w + qt_acompanhante_episodio_w;
	
	if (qt_acompanhate_w > 0) then
		--Verificar se ha espaco para os acompanhantes no mesmo quarto (Leito e unidade basica iguais)
		if (ie_opcao_p = 'N') then
			select	 count(*)
			into STRICT	 qt_livre_w
			from 	 unidade_atendimento a
			where	 a.cd_setor_atendimento	= cd_setor_atend_dest_p
			and	 a.cd_unidade_basica 	= cd_unidade_bas_dest_p
			and     (((a.cd_unidade_compl	 <> cd_unidade_compl_dest_p)
			and (a.ie_status_unidade in ('L')))  
			or 	 ((obter_se_sem_acomodacao(cd_tipo_acomodacao) = 'N') 
			and (coalesce(a.ie_situacao, 'A') = 'A')
			and (a.ie_status_unidade = 'I')));
		else
			select	 count(*)
			into STRICT	 qt_livre_w
			from 	 unidade_atendimento a
			where	 a.cd_setor_atendimento	= cd_setor_atend_dest_p
			and	 a.cd_unidade_basica 	= cd_unidade_bas_dest_p
			and     (((a.cd_unidade_compl	 <> cd_unidade_compl_dest_p)
			and (a.ie_status_unidade in ('L'))
			and (obter_se_sem_acomodacao(cd_tipo_acomodacao) = 'N'))  
			or 	 ((obter_se_sem_acomodacao(cd_tipo_acomodacao) = 'N') 
			and (coalesce(a.ie_situacao, 'A') = 'A')
			and (a.ie_status_unidade = 'I')));
		end if;

		if (qt_livre_w < qt_acompanhate_w) then
			ds_retorno_w := 'N';
		end if;

		if (ds_retorno_w = 'N') then
			BEGIN
                select 	a.nr_agrupamento
                into STRICT	nr_agrupamento_w
                from	unidade_atendimento a
                where	a.cd_unidade_basica	= cd_unidade_bas_dest_p
                and 	a.cd_unidade_compl	= cd_unidade_compl_dest_p
                and	a.cd_setor_atendimento	= cd_setor_atend_dest_p;
            EXCEPTION
                WHEN OTHERS THEN
                    nr_agrupamento_w := null;
            END;
			
			select	CASE WHEN count(*)=qt_acompanhate_w THEN  'S'  ELSE 'N' END
			into STRICT	ds_retorno_w
			from 	unidade_atendimento a
			where	a.cd_unidade_basica	<> cd_unidade_bas_dest_p
			and	a.nr_agrupamento	= nr_agrupamento_w
			and	a.cd_setor_atendimento	= cd_setor_atend_dest_p
			and 	a.ie_status_unidade in ('L');


		end if;
	else
		select	count(*)
		into STRICT	qt_acomp_acom_w
		from 	atendimento_acompanhante
		where   nr_atendimento = nr_atendimento_p
		and	coalesce(dt_saida::text, '') = ''
		and     ie_alojamento = 'S';		
		
		if (qt_acomp_acom_w > 0) then
			select	 count(*)
			into STRICT	 qt_livre_w
			from 	 unidade_atendimento a
			where (a.cd_unidade_basica	= cd_unidade_bas_dest_p
			and 	 a.cd_unidade_compl	<> cd_unidade_compl_dest_p
			and		 a.cd_setor_atendimento	= cd_setor_atend_dest_p
			and 	 a.ie_status_unidade in ('L')
			and 	 obter_se_sem_acomodacao(cd_tipo_acomodacao) = 'N')
			or (cd_setor_atendimento = cd_setor_atend_dest_p
			and 	 cd_unidade_basica = cd_unidade_bas_dest_p
			and 	 obter_se_sem_acomodacao(cd_tipo_acomodacao) = 'N'
			and 	 coalesce(ie_situacao, 'A') = 'A'
			and 	 ie_status_unidade = 'I');
			

			if (qt_livre_w > 0) then
			    ds_retorno_w := 'S';
			else
			    ds_retorno_w := 'N';
			end if;
		else
			if (ie_entrada_unica_p = 'S') then
                select	 count(*)
        
                into STRICT	 qt_livre_w
        
                from 	 unidade_atendimento a
        
                where	 a.cd_setor_atendimento	= cd_setor_atend_dest_p
        
                and	 a.cd_unidade_basica 	= cd_unidade_bas_dest_p
        
                and     (((a.cd_unidade_compl	 <> cd_unidade_compl_dest_p)
        
                and (a.ie_status_unidade in ('L')))  
        
                or 	 ((obter_se_sem_acomodacao(cd_tipo_acomodacao) = 'N') 
        
                and (coalesce(a.ie_situacao, 'A') = 'A')
        
                and (a.ie_status_unidade = 'I')));

        
        
                if (qt_livre_w = 0) then
        
                    ds_retorno_w := 'N';
        
                end if;
            else
				ds_retorno_w := 'S';
			end if;
		end if;
	end if;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_leito_livre_acomp ( nr_atendimento_p bigint, cd_unidade_bas_dest_p text, cd_unidade_compl_dest_p text, cd_setor_atend_dest_p bigint, ie_entrada_unica_p text default 'N', ie_opcao_p text default 'N') FROM PUBLIC;

