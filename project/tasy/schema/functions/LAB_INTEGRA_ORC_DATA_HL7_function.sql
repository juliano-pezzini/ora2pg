-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION lab_integra_orc_data_hl7 ( nr_prescricao_p prescr_procedimento.nr_prescricao%TYPE, nr_sequencia_p prescr_procedimento.nr_sequencia%TYPE) RETURNS varchar AS $body$
DECLARE


    id_order_w           varchar(1);
    nr_order_w           varchar(14);
    name_doctor_w        pessoa_fisica.nm_pessoa_fisica%TYPE;
    surname_doctor_w     varchar(100);
    id_doctor_w          prescr_medica.cd_medico%TYPE;
    crm_doctor_w         medico.nr_crm%TYPE;
    ds_ordercontrol_w    varchar(1);
    date_release_w       prescr_medica.dt_liberacao%TYPE;
    id_user_w            usuario.cd_pessoa_fisica%TYPE;
    name_user_w          prescr_medica.nm_usuario%TYPE;
    id_basic_unit_w      atend_paciente_unidade.cd_unidade_basica%TYPE;
    id_compl_unit_w      atend_paciente_unidade.cd_unidade_compl%TYPE;
    location_pacient_w   setor_atendimento.ds_setor_atendimento%TYPE;
    json_aux_w           philips_json;
    ds_message_w         text;

BEGIN
    json_aux_w := philips_json();
    BEGIN
        SELECT 1 id_order,
            c.nr_prescricao nr_order,
            substr(obter_nome_pf(b.cd_medico), 1, 60) name_doctor,
            substr(obter_parte_nome_phillips_pf(substr(obter_nome_pf(b.cd_medico), 1, 60), 'sobrenome'), 1, 100) surname_doctor,
            b.cd_medico id_doctor,
            substr(obter_crm_medico(b.cd_medico), 1, 20) crm_doctor,
            NULL ds_ordercontrol,
            b.dt_liberacao date_release,
            obter_pf_usuario(b.nm_usuario, 'C') id_user,
            b.nm_usuario name_user,
            d.cd_unidade_basica id_basic_unit,
            d.cd_unidade_compl id_compl_unit,
            obter_desc_setor_atend(d.cd_setor_atendimento) location_pacient
        INTO STRICT id_order_w,
             nr_order_w,
             name_doctor_w,
             surname_doctor_w,
             id_doctor_w,
             crm_doctor_w,
             ds_ordercontrol_w,
             date_release_w,
             id_user_w,
             name_user_w,
             id_basic_unit_w,
             id_compl_unit_w,
             location_pacient_w
        FROM prescr_medica            b
             INNER JOIN prescr_procedimento      c ON ( b.nr_prescricao = c.nr_prescricao )
             LEFT JOIN atend_paciente_unidade   d ON ( d.nr_seq_interno = obter_atepacu_paciente(b.nr_atendimento, 'A') )
        WHERE c.nr_prescricao = nr_prescricao_p
		AND c.nr_sequencia = nr_sequencia_p;

        json_aux_w.put('id_order', id_order_w);
        json_aux_w.put('nr_order', nr_order_w);
        json_aux_w.put('name_doctor', name_doctor_w);
        json_aux_w.put('surname_doctor', surname_doctor_w);
        json_aux_w.put('id_doctor', id_doctor_w);
        json_aux_w.put('crm_doctor', crm_doctor_w);
        json_aux_w.put('ds_ordercontrol', ds_ordercontrol_w);
        json_aux_w.put('date_release', to_char(date_release_w, 'mm/dd/yyyy hh24:mi:ss'));
        json_aux_w.put('id_user', id_user_w);
        json_aux_w.put('name_user', name_user_w);
        json_aux_w.put('id_basic_unit', id_basic_unit_w);
        json_aux_w.put('id_compl_unit', id_compl_unit_w);
        json_aux_w.put('location_pacient', location_pacient_w);
        dbms_lob.createtemporary(ds_message_w, true);
        json_aux_w.(ds_message_w);
    EXCEPTION
        WHEN no_data_found OR too_many_rows THEN
            ds_message_w := '';
    END;

    RETURN ds_message_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION lab_integra_orc_data_hl7 ( nr_prescricao_p prescr_procedimento.nr_prescricao%TYPE, nr_sequencia_p prescr_procedimento.nr_sequencia%TYPE) FROM PUBLIC;

