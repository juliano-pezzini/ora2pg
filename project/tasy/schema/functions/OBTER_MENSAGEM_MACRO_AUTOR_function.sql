-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_mensagem_macro_autor (nr_sequencia_autor_p bigint, nr_seq_declaracao_p bigint, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE



ds_retorno_w			varchar(4000);
ds_declaracao_w			varchar(4000);
nr_atendimento_w		bigint;
nm_paciente_w			varchar(255);
ds_tipo_autor_w			varchar(255);
ds_proc_autor_w			varchar(1000);
dt_agenda_w			timestamp;
ds_convenio_w			varchar(255);
nm_medico_autor_w		varchar(255);
ds_proc_adic_aux_w		varchar(270);
nr_seq_agenda_w			            autorizacao_convenio.nr_seq_agenda%type;
nr_seq_agenda_consulta_w	        autorizacao_convenio.nr_seq_agenda_consulta%type;
nr_seq_age_integ_w		bigint;
ds_ultimo_historico_w		varchar(500);	

c01 CURSOR FOR	
SELECT	substr(cd_procedimento || ' - ' || substr(obter_Descricao_procedimento(cd_procedimento, ie_origem_proced),1,255),1,270)
from	procedimento_autorizado
where	nr_sequencia_autor	= nr_sequencia_autor_p
order by 1;	
	

BEGIN

select	nr_atendimento,
	substr(coalesce(obter_nome_pf_pj(cd_pessoa_fisica,null),coalesce(coalesce(obter_pessoa_atendimento(nr_atendimento, 'N'),coalesce(obter_nome_paciente_agenda(nr_seq_agenda),coalesce(obter_paciente_agenda_consulta(nr_seq_agenda_consulta),obter_paciente_autor_onc(nr_seq_paciente_setor)))),obter_paciente_gestao_vagas(nr_seq_gestao,'N'))),1,254),
	substr(obter_valor_dominio(1377,ie_tipo_autorizacao),1,255),	
	substr(obter_nome_convenio(cd_convenio),1,255),	
	substr(obter_nome_medico(cd_medico_solicitante, 'C'),1,100),
	nr_seq_agenda,
	nr_seq_agenda_consulta,
	nr_seq_age_integ
into STRICT	nr_atendimento_w,
	nm_paciente_w,
	ds_tipo_autor_w,	
	ds_convenio_w,
	nm_medico_autor_w,
	nr_seq_agenda_w,
	nr_seq_agenda_consulta_w,
	nr_seq_age_integ_w
from	autorizacao_convenio
where	nr_sequencia	= nr_sequencia_autor_p;


if (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
	select	a.dt_agenda
	into STRICT	dt_agenda_w
	from	agenda_paciente a
	where	nr_sequencia	= nr_seq_agenda_w;
elsif (nr_seq_agenda_consulta_w IS NOT NULL AND nr_seq_agenda_consulta_w::text <> '') then
	select	max(a.dt_agenda)
	into STRICT	dt_agenda_w
	from	agenda_consulta a
	where	nr_sequencia	= nr_seq_agenda_consulta_w;
elsif (nr_seq_age_integ_w IS NOT NULL AND nr_seq_age_integ_w::text <> '') then
	select	max(a.dt_inicio_agendamento)
	into STRICT	dt_agenda_w
	from	agenda_integrada a
	where	nr_sequencia	= nr_seq_age_integ_w;
end if;

open C01;
loop
fetch C01 into	
	ds_proc_adic_aux_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (coalesce(ds_proc_autor_w::text, '') = '') then
		ds_proc_autor_w	:= ds_proc_adic_aux_w;
	else
		ds_proc_autor_w	:= ds_proc_autor_w || chr(10) || ds_proc_adic_aux_w;
	end if;
	end;
end loop;
close C01;

select	substr(ds_historico,1,499)
into STRICT	ds_ultimo_historico_w
from	autorizacao_convenio_hist a
where	a.nr_sequencia_autor	= nr_sequencia_autor_p
and	a.nr_sequencia		=
	(SELECT	max(x.nr_sequencia)
	from	autorizacao_convenio_hist x
	where	x.nr_sequencia_autor	= nr_sequencia_autor_p);

select	ds_declaracao
into STRICT	ds_declaracao_w
from	declaracao_autor_convenio
where	nr_sequencia	= nr_seq_declaracao_p;

ds_declaracao_w	:= replace_macro(ds_declaracao_w,'@atendimento',nr_atendimento_w);
ds_declaracao_w	:= replace_macro(ds_declaracao_w,'@sequencia_autor',nr_sequencia_autor_p);
ds_declaracao_w	:= replace_macro(ds_declaracao_w,'@paciente',nm_paciente_w);
ds_declaracao_w	:= replace_macro(ds_declaracao_w,'@tipo_autor',ds_tipo_autor_w);
ds_declaracao_w	:= replace_macro(ds_declaracao_w,'@proc_autor',ds_proc_autor_w);
ds_declaracao_w	:= replace_macro(ds_declaracao_w,'@data_agenda',to_char(dt_agenda_w,'dd/mm/yyyy'));
ds_declaracao_w	:= replace_macro(ds_declaracao_w,'@convenio',ds_convenio_w);
ds_declaracao_w	:= replace_macro(ds_declaracao_w,'@usuario',nm_usuario_p);
ds_declaracao_w	:= replace_macro(ds_declaracao_w,'@medico',nm_medico_autor_w);
ds_declaracao_w	:= replace_macro(ds_declaracao_w,'@ultimo_historico',ds_ultimo_historico_w);

return	ds_declaracao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_mensagem_macro_autor (nr_sequencia_autor_p bigint, nr_seq_declaracao_p bigint, nm_usuario_p text) FROM PUBLIC;

