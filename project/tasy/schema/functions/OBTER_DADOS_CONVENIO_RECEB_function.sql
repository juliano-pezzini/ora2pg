-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_convenio_receb (nr_seq_receb_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


/*	ie_opcao_p

'AD'	Adiantamentos
'VA'	Valor amenor
'RC'	Retornos de convÃªnio
'EST'	Estabelecimento
'VT'	Valor total

*/
nr_adiantamento_w	bigint;
ds_lista_adiant_w	varchar(4000);
ds_retorno_w		varchar(4000);
vl_amenor_w		double precision;
nr_interno_conta_w	bigint;
cd_autorizacao_w	varchar(20);
vl_tot_amenor_w		double precision;
nr_seq_retorno_w	bigint;
ie_existe_w		bigint;
vl_vinculacao_w		double precision;
cd_estabelecimento_w	smallint;
ie_vl_conv_rec_adic_w	varchar(1);
ie_deduzir_adic_w	varchar(1);
vl_adicional_w		double precision;
qt_estorno_w		bigint;
cd_convenio_w		bigint;
dt_recebimento_w	timestamp;

c01 CURSOR FOR
SELECT	a.nr_adiantamento
FROM	convenio_receb_adiant a
WHERE	a.nr_seq_receb	= nr_seq_receb_p;

c02 CURSOR FOR
SELECT	DISTINCT
	c.nr_interno_conta,
	c.cd_autorizacao
FROM	convenio_retorno_item c,
	convenio_retorno b,
	convenio_ret_receb a
WHERE	b.nr_sequencia		= c.nr_seq_retorno
AND	b.ie_status_retorno	= 'F'
AND	a.nr_seq_retorno	= b.nr_sequencia
AND	a.nr_seq_receb		= nr_seq_receb_p;

c03 CURSOR FOR
SELECT	distinct
	a.nr_seq_retorno
from	convenio_ret_receb a
where	a.nr_seq_receb		= nr_seq_receb_p
order by a.nr_seq_retorno;


BEGIN

IF (ie_opcao_p = 'AD') THEN

	SELECT	MAX(a.nr_adiantamento)
	INTO STRICT	nr_adiantamento_w
	FROM	convenio_receb a
	WHERE	a.nr_sequencia	= nr_seq_receb_p;

	ds_lista_adiant_w	:= nr_adiantamento_w;

	OPEN	c01;
	LOOP
	FETCH	c01 INTO
		nr_adiantamento_w;
	EXIT	WHEN(c01%NOTFOUND) OR ((ds_lista_adiant_w IS NOT NULL AND ds_lista_adiant_w::text <> '') AND (LENGTH(ds_lista_adiant_w) >= 3990));

		IF (coalesce(ds_lista_adiant_w::text, '') = '') THEN
			ds_lista_adiant_w	:= nr_adiantamento_w;
		ELSE
			ds_lista_adiant_w	:= ds_lista_adiant_w || ', ' || nr_adiantamento_w;
		END IF;

	END	LOOP;
	CLOSE	c01;

	ds_retorno_w	:= ds_lista_adiant_w;

ELSIF (ie_opcao_p = 'VA') THEN

	OPEN	c02;
	LOOP
	FETCH	c02 INTO
		nr_interno_conta_w,
		cd_autorizacao_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */

		SELECT	a.vl_amenor
		INTO STRICT	vl_amenor_w
		FROM	convenio_retorno_item a
		WHERE	a.nr_sequencia	=
			(SELECT	MAX(x.nr_sequencia)
			FROM	convenio_retorno_item x
			WHERE	coalesce(x.cd_autorizacao,wheb_mensagem_pck.get_Texto(314168))	= coalesce(cd_autorizacao_w,wheb_mensagem_pck.get_Texto(314168))
			AND	x.nr_interno_conta	= nr_interno_conta_w);

		vl_tot_amenor_w	:= coalesce(vl_tot_amenor_w,0) + coalesce(vl_amenor_w,0);

	END	LOOP;
	CLOSE	c02;

	ds_retorno_w	:= vl_tot_amenor_w;
elsif (ie_opcao_p	= 'RC') then
	begin
	ds_retorno_w	:= '';

	open C03;
	loop
	fetch C03 into
		nr_seq_retorno_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		ie_existe_w	:= coalesce(position(nr_seq_retorno_w in ds_retorno_w),0);

		if (ie_existe_w = 0) then
			begin
			if (coalesce(ds_retorno_w::text, '') = '') then
				ds_retorno_w	:= nr_seq_retorno_w;
			else
				ds_retorno_w	:= ds_retorno_w || ', ' || nr_seq_retorno_w;
			end if;
			end;
		end if;
		end;
	end loop;
	close C03;
	end;

elsif (ie_opcao_p	= 'EST') then
	begin
	select	max(a.cd_estabelecimento)
	into STRICT 	ds_retorno_w
	from	convenio_receb a
	where	a.nr_sequencia	= nr_seq_receb_p;
	end;

elsif (ie_opcao_p	= 'VT') then

	select	count(*)
	into STRICT	qt_estorno_w
	from	convenio_retorno b,
		convenio_ret_receb a
	where	(b.nr_seq_ret_estorno IS NOT NULL AND b.nr_seq_ret_estorno::text <> '')
	and	a.nr_seq_retorno	= b.nr_sequencia
	and	a.nr_seq_receb		= nr_seq_receb_p;

	if (coalesce(qt_estorno_w,0) = 0) then

		select	coalesce(a.vl_deposito,a.vl_recebimento)
		into STRICT	ds_retorno_w
		from	convenio_receb a
		where	a.nr_sequencia	= nr_seq_receb_p;

	else

		select	sum(a.vl_vinculacao)
		into STRICT	vl_vinculacao_w
		from	convenio_ret_receb a
		where	a.nr_seq_receb	= nr_seq_receb_p;

		select	max(a.cd_estabelecimento),
			max(a.ie_deduzir_adic),
			max(a.cd_convenio),
			max(a.dt_recebimento)
		into STRICT	cd_estabelecimento_w,
			ie_deduzir_adic_w,
			cd_convenio_w,
			dt_recebimento_w
		from	convenio_receb a
		where	a.nr_sequencia	= nr_seq_receb_p;

		select 	coalesce(max(ie_vl_conv_rec_adic),'N')
		into STRICT	ie_vl_conv_rec_adic_w
		from 	parametro_contas_receber
		where 	cd_estabelecimento = cd_estabelecimento_w;

		ie_vl_conv_rec_adic_w	:= coalesce(OBTER_SE_ATUALIZA_JUROS_RECEB(cd_convenio_w,dt_recebimento_w), ie_vl_conv_rec_adic_w);

		if (ie_vl_conv_rec_adic_w = 'S') or (ie_vl_conv_rec_adic_w = 'O' and coalesce(ie_deduzir_adic_w,'S') = 'S') then

			select	coalesce(sum(coalesce(a.vl_adicional,0) + coalesce(a.vl_cambial_ativo,0) - coalesce(a.vl_cambial_passivo,0)),0)
			into STRICT	vl_adicional_w
			from	convenio_receb_adic a
			where	a.nr_seq_receb	= nr_seq_receb_p;

		end if;

		ds_retorno_w	:= coalesce(vl_vinculacao_w,0) + coalesce(vl_adicional_w,0);

	end if;

END IF;

RETURN	ds_retorno_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_convenio_receb (nr_seq_receb_p bigint, ie_opcao_p text) FROM PUBLIC;

