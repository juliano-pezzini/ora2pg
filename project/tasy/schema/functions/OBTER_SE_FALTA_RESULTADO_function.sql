-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_falta_resultado ( nr_prescricao_p bigint, nr_grupos_p text) RETURNS integer AS $body$
DECLARE


nr_seq_resultado_w	bigint;
nr_seq_exame_w		bigint;
nr_seq_material_w	bigint;
nr_seq_metodo_w		bigint;
nr_seq_prescr_w		integer;
nr_seq_grupo_w		bigint;
qt_itens_formato_w	smallint;
qt_itens_resultado_w	smallint;
ie_resultado_w		smallint;

nr_seq_mat_w		bigint;
sql_grupo_w			varchar(255) := '';

C01 CURSOR FOR
	SELECT	b.nr_seq_resultado,
		b.nr_seq_exame,
		b.nr_seq_material,
		b.nr_seq_prescr,
		c.nr_seq_grupo,
		coalesce(b.nr_seq_metodo,0)
	from	exame_laboratorio c,
		exame_lab_result_item b,
		exame_lab_resultado a
	where a.nr_seq_resultado = b.nr_seq_resultado
	  and b.nr_seq_exame = c.nr_seq_exame
	  and a.nr_prescricao = nr_prescricao_p
	  and (b.nr_seq_material IS NOT NULL AND b.nr_seq_material::text <> '')
	  and Obter_se_exame_baixado(nr_prescricao_p,b.nr_seq_prescr) = 'N';

C02 CURSOR FOR
	SELECT 	a.nr_seq_material,
		count(*) nr_exames
	from	exame_lab_material c,
		exame_lab_format_item b,
		exame_lab_format a
	where a.nr_seq_formato = b.nr_seq_formato
	  and a.nr_seq_material = c.nr_seq_material
	  and a.nr_seq_exame = c.nr_seq_exame
	  and a.nr_seq_exame = nr_seq_exame_w
	  and clock_timestamp() between coalesce(dt_inicio_vigencia,clock_timestamp()) and coalesce(dt_fim_vigencia,clock_timestamp())
	  and ((nr_seq_metodo_w = 0) or (coalesce(a.nr_seq_metodo,nr_seq_metodo_w) = nr_seq_metodo_w))
	  and (b.nr_seq_exame IS NOT NULL AND b.nr_seq_exame::text <> '')
	  and a.ie_padrao = 'S'
	group by c.ie_prioridade, a.nr_seq_material
	having count(*) > 0
	order by c.ie_prioridade desc;



BEGIN

ie_resultado_w	:= 0;
sql_grupo_w		:= '';

if (nr_grupos_p <> '') and (substr(nr_grupos_p,Length(nr_grupos_p),1) <> ',') then
	sql_grupo_w := nr_grupos_p || ',';
/*	sql_grupo_w := ' and c.nr_seq_grupo in (' || nr_grupos_p || ')';*/

end if;

/*open C01 for 'select b.nr_seq_resultado, b.nr_seq_exame, b.nr_seq_material, b.nr_seq_prescr ' ||
		 'from exame_laboratorio c, exame_lab_result_item b, exame_lab_resultado a ' ||
		 'where a.nr_seq_resultado = b.nr_seq_resultado ' ||
		 '  and b.nr_seq_exame = c.nr_seq_exame ' ||
		 '  and a.nr_prescricao = ' || to_char(nr_prescricao_p) ||
		 '  and b.nr_seq_material is not null' || sql_grupo_w;*/
open C01;
loop
	fetch C01 into	nr_seq_resultado_w,
				nr_seq_exame_w,
				nr_seq_material_w,
				nr_seq_prescr_w,
				nr_seq_grupo_w,
				nr_seq_metodo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

	if (coalesce(sql_grupo_w::text, '') = '') or (position(to_char(nr_seq_grupo_w) || ',' in sql_grupo_w) > 0) then
		select count(*)
		into STRICT qt_itens_formato_w
		from	exame_lab_format_item b,
			exame_lab_format a
		where a.nr_seq_formato = b.nr_seq_formato
		  and a.nr_seq_exame = nr_seq_exame_w
		  and a.nr_seq_material = nr_seq_material_w
		  and clock_timestamp() between coalesce(dt_inicio_vigencia,clock_timestamp()) and coalesce(dt_fim_vigencia,clock_timestamp())
		  and ((nr_seq_metodo_w = 0) or (coalesce(a.nr_seq_metodo,nr_seq_metodo_w) = nr_seq_metodo_w))
		  and a.ie_padrao = 'S'
		  and (b.nr_seq_exame IS NOT NULL AND b.nr_seq_exame::text <> '');
		if (qt_itens_formato_w = 0) then
			open C02;
			loop
				fetch C02 into	nr_seq_mat_w,
						qt_itens_formato_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
			end loop;
			close C02;
		end if;

		select count(*)
		into STRICT qt_itens_resultado_w
		from exame_lab_result_item
		where nr_seq_resultado = nr_seq_resultado_w
		  and nr_seq_prescr = nr_seq_prescr_w
		  and (ds_unidade_medida IS NOT NULL AND ds_unidade_medida::text <> '');

		if (qt_itens_formato_w > qt_itens_resultado_w) then
			ie_resultado_w	:= 1;
			exit;
		end if;
	end if;
end loop;

return ie_resultado_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_falta_resultado ( nr_prescricao_p bigint, nr_grupos_p text) FROM PUBLIC;

