-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dt_ult_atend_extenso ( cd_pessoa_fisica_p text) RETURNS varchar AS $body$
DECLARE

 
ds_retorno_w		varchar(255);
dt_alta_w		timestamp;
qt_anos_w		bigint := 0;
qt_meses_w		bigint := 0;
qt_meses_ww		bigint := 0;
qt_dias_w		bigint := 0;
nr_atendimento_w	bigint;
ds_dia_w		varchar(3);
			

BEGIN 
 
select	max(nr_atendimento) 
into STRICT	nr_atendimento_w 
from	atendimento_paciente 
where	cd_pessoa_fisica = cd_pessoa_fisica_p;
 
if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then 
	select	dt_alta 
	into STRICT	dt_alta_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_w;
	 
	if (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') then 
		ds_retorno_w	:= '';
	 
		select	pkg_date_utils.get_diffdate(dt_alta_w, clock_timestamp(), 'MONTH', 0) 
		into STRICT	qt_meses_w 
		;
		 
		if (qt_meses_w > 11) then 
			qt_anos_w		:= trunc(qt_meses_w / 12);
		end if;
		qt_dias_w			:= (PKG_DATE_UTILS.extract_field('DAY',clock_timestamp()) - PKG_DATE_UTILS.extract_field('DAY',dt_alta_w))::numeric;
		if (qt_dias_w < 0) then 
			ds_dia_w		:= PKG_DATE_UTILS.extract_field('DAY',dt_alta_w);
 
			if (PKG_DATE_UTILS.extract_field('DAY',pkg_date_utils.end_of(pkg_date_utils.add_month(clock_timestamp(),-1,0),'MONTH',0)) < ds_dia_w) then 
				ds_dia_w := PKG_DATE_UTILS.extract_field('DAY',pkg_date_utils.end_of(pkg_date_utils.add_month(clock_timestamp(),-1,0),'MONTH',0));
			end if;
 
			ds_dia_w := ds_dia_w || '/';
 
			qt_dias_w		:= coalesce(obter_dias_entre_datas(to_date(ds_dia_w||to_char(pkg_date_utils.add_month(clock_timestamp(),-1,0),'mm/yyyy'),'dd/mm/yyyy'),clock_timestamp()),0);
		end if;
		 
		qt_meses_ww			:= qt_meses_w;
		qt_meses_w			:= qt_meses_w - (qt_anos_w * 12);
		 
		if (qt_anos_w = 1) then 
			ds_retorno_w 		:= '1 ' || lower(wheb_mensagem_pck.get_texto(308338)); -- ano 
		end if;
		if (qt_anos_w > 1) then 
			ds_retorno_w 		:= qt_anos_w || ' ' || wheb_mensagem_pck.get_texto(308339); -- anos 
		end if;
 
		if (PKG_DATE_UTILS.extract_field('DAY',dt_alta_w) = '31') and (PKG_DATE_UTILS.extract_field('DAY',clock_timestamp()) = '30') and (qt_meses_w >= 1) then 
			qt_meses_w := qt_meses_w - 1;
		end if;
 
 
		if (qt_meses_w > 0) then 
			if (qt_anos_w > 0) then 
				ds_retorno_w 	:= ds_retorno_w || ' ';
			end if;
			if (qt_meses_w = 1) then	 
				ds_retorno_w	:= ds_retorno_w || '1 ' || lower(wheb_mensagem_Pck.get_texto(308341)); -- mÃªs 
			end if;
			 
			if (qt_meses_w > 1) then	 
				ds_retorno_w	:= ds_retorno_w || qt_meses_w || ' ' || lower(wheb_mensagem_pck.get_texto(308342)); -- meses 
			end if;
		end if;	
		 
		if (qt_dias_w > 0) then 
			ds_retorno_w	:= ds_retorno_w || ' ' || qt_dias_w || ' ' || wheb_mensagem_pck.get_texto(308347); -- dias 
		end if;
	end if;
end if;
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dt_ult_atend_extenso ( cd_pessoa_fisica_p text) FROM PUBLIC;

