-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_secao_per_agenda (nr_seq_agenda_p bigint, ie_diario_p text, ie_final_semana_p text, qt_intervalo_p bigint, ie_opcao_p text, ie_next_day_p text default 'N') RETURNS timestamp AS $body$
DECLARE


qt_dia_w		smallint;
qt_total_secao_w	smallint;
nr_secao_w	smallint;
dt_agenda_w	timestamp;
dt_atual_w	timestamp;
cd_dia_semana_w	varchar(1);
ds_retorno_w	timestamp;
ie_gerar_dia_w	varchar(1)  := 'S';
qt_feriado_dia_w	bigint;
cd_agenda_w	bigint;
ie_agenda_feriado_w	varchar(1);
ie_bloqueio_w	varchar(1);
ie_existe_turno_w	varchar(1);
cd_estabelecimento_w		smallint;	
ie_existe_livre_w  varchar(1);
ie_dia_gerado_w  varchar(1);

/*
D - end date
*/
BEGIN

if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then
	begin
	/* obter dados agenda */

	select	max(coalesce(a.nr_secao,1)),
		max(a.dt_agenda),
		max(coalesce(a.qt_total_secao,0)),
		max(b.cd_estabelecimento)
	into STRICT	nr_secao_w,
		dt_agenda_w,
		qt_total_secao_w,
		cd_estabelecimento_w
	from	agenda_consulta a,
		agenda b
	where	a.cd_agenda = b.cd_agenda
	and	a.nr_sequencia = nr_seq_agenda_p;
	
	/* Generate schedules per week or daily */

	if (ie_diario_p = 'S') then
		qt_dia_w	:= 1;
	elsif (ie_diario_p = 'N') and (qt_intervalo_p > 0) then
		qt_dia_w	:= qt_intervalo_p;
	elsif (ie_diario_p = 'N') then
		qt_dia_w	:= 7;
	end if;

	--nr_secao_w	:= 1;
	dt_atual_w	:= dt_agenda_w;
	if (qt_total_secao_w > 0) then
		while(nr_secao_w < qt_total_secao_w) loop
			begin
			if (ie_next_day_p = 'S') and (ie_gerar_dia_w = 'N') then
				dt_atual_w	:= dt_atual_w + 1;
			else
				dt_atual_w	:= dt_atual_w + qt_dia_w;
			end if;
                                                ie_gerar_dia_w	:= 'S';	
			
			select	substr(Obter_Cod_Dia_Semana(dt_atual_w),1,1)
			into STRICT	cd_dia_semana_w
			;			


			if (ie_final_semana_p = 'N') and
				((cd_dia_semana_w = 1) or (cd_dia_semana_w = 7))then

				if (cd_dia_semana_w = 1) then
					dt_atual_w	:= dt_atual_w + 1;
				elsif (cd_dia_semana_w = 7) then
						dt_atual_w	:= dt_atual_w + 2;
				end if;

				select	substr(Obter_Cod_Dia_Semana(dt_atual_w),1,1)
				into STRICT	cd_dia_semana_w
				;

			end if;
			
			
			--VALIDATE IF THERE IS A HOLIDAY IN THE MIDDLE OF THE GENERATION PERIOD OF THE SCHEDULE DAYS
			select	coalesce(max(obter_se_feriado(cd_estabelecimento_w, dt_atual_w)), 0)
			into STRICT	qt_feriado_dia_w
			;
			
			--SEARCH COD. FROM THE SCHEDULE TO VERIFY IF SCHEDULE IS ALLOWED ON DAYS THAT ARE HOLIDAYS
			select	coalesce(max(cd_agenda), 0)
			into STRICT	cd_agenda_w
			from	agenda_consulta
			where	nr_sequencia	= nr_seq_agenda_p;
			
			if (cd_agenda_w > 0)then
				begin
				
				select 	coalesce(max(ie_feriado),'N')
				into STRICT	ie_agenda_feriado_w
				from	agenda
				where	cd_agenda = cd_agenda_w;
				
				end;			
			end if;
			
			/* validate time x lock */

			select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_bloqueio_w
			from	agenda_bloqueio
			where	cd_agenda = cd_agenda_w
			and	dt_final >= trunc(dt_atual_w)
			and	dt_inicial <= trunc(dt_atual_w)
			AND (TO_CHAR(hr_final_bloqueio,'hh24:mi:ss') >= TO_CHAR(dt_atual_w,'hh24:mi') 
				OR coalesce(hr_final_bloqueio::text, '') = '')
			AND (TO_CHAR(hr_inicio_bloqueio, 'hh24:mi:ss') <= TO_CHAR(dt_atual_w,'hh24:mi') 
				OR coalesce(hr_inicio_bloqueio::text, '') = '')
			and	((coalesce(ie_dia_semana::text, '') = '') or (ie_dia_semana = cd_dia_semana_w));
			
			/*
			SHIFT TERMS:
			*/
			select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_existe_turno_w
			from   	agenda_turno a,
				agenda_turno_classif c
			where  	c.nr_seq_turno = a.nr_sequencia
			AND 	a.cd_agenda       	= 	cd_agenda_w						
			and    	((a.ie_dia_semana   	= 	cd_dia_semana_w) 
				or (a.ie_dia_semana = 9))
			AND	TO_CHAR(hr_final, 'hh24:mi:ss') >= TO_CHAR(dt_atual_w,'hh24:mi:ss')
			AND	TO_CHAR(hr_inicial, 'hh24:mi:ss') <= TO_CHAR(dt_atual_w,'hh24:mi:ss')
			AND	((qt_feriado_dia_w > 0 AND coalesce(c.ie_gera_feriado,'S') = 'S' AND ie_agenda_feriado_w = 'S')
				OR (qt_feriado_dia_w = 0));
				
			/* validar se existe horario */

			select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_existe_livre_w
			from	agenda_consulta
			where	cd_agenda = cd_agenda_w
			and		dt_agenda = dt_atual_w
			and 	ie_status_agenda = 'L';
			
			/*Validar se dia foi gerado*/

			select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_dia_gerado_w
			from	agenda_consulta
			where	cd_agenda = cd_agenda_w
			and		dt_agenda = dt_atual_w;
			
			if (ie_existe_turno_w = 'N') then
				ie_gerar_dia_w	:= 'N';					
			elsif (ie_existe_livre_w = 'N' and ie_dia_gerado_w = 'S') then
				ie_gerar_dia_w	:= 'N';
			elsif (ie_bloqueio_w = 'S') then
				ie_gerar_dia_w	:= 'N';
			elsif (qt_feriado_dia_w > 0) and (ie_agenda_feriado_w = 'N') then
				ie_gerar_dia_w	:= 'N';	
			end if;				
			
			if (ie_gerar_dia_w	= 'S') then
				nr_secao_w	:= nr_secao_w + 1;
			end if;
	
			
			end;
		end loop;
	end if;

	if (ie_opcao_p = 'D') then
		ds_retorno_w	:= dt_atual_w;
	end if;
	end;
end if;
	
return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_secao_per_agenda (nr_seq_agenda_p bigint, ie_diario_p text, ie_final_semana_p text, qt_intervalo_p bigint, ie_opcao_p text, ie_next_day_p text default 'N') FROM PUBLIC;

