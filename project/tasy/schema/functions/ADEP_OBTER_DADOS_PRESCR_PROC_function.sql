-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION adep_obter_dados_prescr_proc ( nr_prescricao_p bigint, nr_seq_procedimento_p bigint, ie_opcao_p text, ie_exibe_dose_glicemia_p text, ie_acm_p text, ie_sn_p text) RETURNS varchar AS $body$
DECLARE


/*
opcoes
QIL - quantidade x intervalo x lado
*/
ds_retorno_w		varchar(255);
qt_procedimento_w	double precision;
cd_intervalo_w		varchar(7);
ds_topografia_w		varchar(80);
ie_lado_w		varchar(15);
nr_ocorrencia_w		bigint;
nr_seq_solic_sangue_w	bigint;
qt_etapa_atual_w	bigint;
ds_etapas_w		varchar(50);
ds_topo_w		varchar(50);
nr_seq_proc_cpoe_w			prescr_procedimento.nr_seq_proc_cpoe%type;
qt_volume_retirar_w 	cpoe_hemoterapia.qt_volume_retirar%type;
qt_tempo_execucao_w		cpoe_procedimento.qt_tempo_execucao%type;


BEGIN
if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_procedimento_p IS NOT NULL AND nr_seq_procedimento_p::text <> '') then
	begin
	select	coalesce(qt_procedimento,0),
		cd_intervalo,
		CASE WHEN ie_lado='E' THEN 'Esq' WHEN ie_lado='D' THEN 'Dir' WHEN ie_lado='A' THEN obter_desc_expressao(308326)/*'Ambos'*/  ELSE null END ,
		substr(Obter_desc_topografia_dor(nr_seq_topografia),1,80),
		coalesce(nr_ocorrencia,0),
		nr_seq_solic_sangue,
		nr_seq_proc_cpoe
	into STRICT	qt_procedimento_w,
		cd_intervalo_w,
		ie_lado_w,
		ds_topografia_w,
		nr_ocorrencia_w,
		nr_seq_solic_sangue_w,
		nr_seq_proc_cpoe_w
	from	prescr_procedimento
	where	nr_prescricao	= nr_prescricao_p
	and	nr_sequencia	= nr_seq_procedimento_p;

	if (coalesce(ie_opcao_p,'QIL') = 'QIL') then
		begin
		if (nr_ocorrencia_w IS NOT NULL AND nr_ocorrencia_w::text <> '') and (nr_seq_solic_sangue_w > 0) then
		
			select	count(*)
			into STRICT	qt_etapa_atual_w
			from	prescr_proc_hor
			where	nr_prescricao = nr_prescricao_p
			and	nr_seq_procedimento = nr_seq_procedimento_p
			and	coalesce(ie_horario_especial,'N') <> 'S'
			and	((dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '') or (dt_suspensao IS NOT NULL AND dt_suspensao::text <> ''));
		
			ds_etapas_w	:= wheb_mensagem_pck.get_texto(300599);
		
			ds_retorno_w	:= ds_etapas_w || qt_etapa_atual_w || '/' || nr_ocorrencia_w;
		end if;
		if (qt_procedimento_w IS NOT NULL AND qt_procedimento_w::text <> '') and (coalesce(ie_exibe_dose_glicemia_p,'S') = 'S')	then
			ds_retorno_w	:= ds_retorno_w || wheb_mensagem_pck.get_texto(458428) || qt_procedimento_w;
		end if;
		if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
			ds_retorno_w	:= ds_retorno_w || '  ' || substr(OBTER_DESC_INTERVALO(cd_intervalo_w),1,40);
		end if;
		if (ie_lado_w IS NOT NULL AND ie_lado_w::text <> '') then
			ds_retorno_w	:= ds_retorno_w || '  ' || ie_lado_w;
		end if;
		end;
	end if;
	
	if (coalesce(nr_seq_proc_cpoe_w,0) > 0) then
		select 	coalesce(max(qt_volume_retirar),0)
		into STRICT 	qt_volume_retirar_w
		from 	cpoe_hemoterapia
		where 	nr_sequencia = nr_seq_proc_cpoe_w;
		
		if (qt_volume_retirar_w > 0) then
			ds_retorno_w	:= ds_retorno_w || '  ' || obter_desc_expressao(862119) || ': ' ||qt_volume_retirar_w;
		end if;
		
		select	max(qt_tempo_execucao)
		into STRICT	qt_tempo_execucao_w
		from	cpoe_procedimento
		where	nr_sequencia = nr_seq_proc_cpoe_w;
		
		if (qt_tempo_execucao_w IS NOT NULL AND qt_tempo_execucao_w::text <> '') then
			ds_retorno_w	:= ds_retorno_w || '  ' || obter_desc_expressao(1039153) || ': ' || qt_tempo_execucao_w;
		end if;
	end if;
	
	end;
end if;

if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') then
	begin
	if (coalesce(ie_acm_p,'N') = 'S') then
		begin
		ds_retorno_w	:= 'ACM ' || ds_retorno_w;
		end;
	elsif (coalesce(ie_sn_p,'N') = 'S') then
		begin
		ds_retorno_w	:= 'SN ' || ds_retorno_w;
		end;
	end if;
	end;
	
	if (ds_topografia_w IS NOT NULL AND ds_topografia_w::text <> '') then
		ds_topo_w := wheb_mensagem_pck.get_texto(300600);
		ds_retorno_w	:= substr(ds_retorno_w || ds_topo_w ||ds_topografia_w,1,80);
	end if;
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION adep_obter_dados_prescr_proc ( nr_prescricao_p bigint, nr_seq_procedimento_p bigint, ie_opcao_p text, ie_exibe_dose_glicemia_p text, ie_acm_p text, ie_sn_p text) FROM PUBLIC;

