-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION sus_consiste_limite_bpa ( dt_competencia_p timestamp, cd_estabelecimento_p bigint, nr_interno_conta_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE



ds_retorno_w			varchar(255) := '';
ie_tipo_financiamento_w		varchar(4);
ie_complexidade_w			varchar(2);
nr_seq_grupo_w			bigint;
nr_seq_subgrupo_w			bigint;
nr_seq_forma_org_w		bigint;
qt_bpa_competencia_w		bigint;
vl_bpa_competencia_w		double precision;
vl_bpa_atual_w			double precision;
qt_bpa_regra_w			bigint;
vl_bpa_regra_w			double precision;
qt_registro_w			varchar(10);
nr_seq_regra_w			bigint;
cd_municipio_ibge_w		varchar(6);

c_proc_paciente CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced
	from	procedimento_paciente
	where	nr_interno_conta = nr_interno_conta_p
	and	coalesce(cd_motivo_exc_conta::text, '') = '';


BEGIN

begin

select	count(*)
into STRICT	qt_registro_w
from	sus_limite_bpa_comp
where	trunc(dt_competencia,'month')	= trunc(dt_competencia_p,'month')
and	cd_estabelecimento 		= cd_estabelecimento_p;
exception
	when others then
	qt_registro_w := 0;
end;


begin

select	sus_obter_municipio_atend(nr_atendimento,'C')
into STRICT	cd_municipio_ibge_w
from	conta_paciente
where	nr_interno_conta = nr_interno_conta_p;
exception
when others then
	cd_municipio_ibge_w := 'X';
end;

if ( qt_registro_w > 0) then

	for r_proc_paciente in c_proc_paciente loop
		begin

		select	a.ie_tipo_financiamento,
			a.ie_complexidade,
			b.nr_seq_grupo,
			b.nr_seq_subgrupo,
			b.nr_seq_forma_org
		into STRICT	ie_tipo_financiamento_w,
			ie_complexidade_w,
			nr_seq_grupo_w,
			nr_seq_subgrupo_w,
			nr_seq_forma_org_w
		from	sus_procedimento a,
			sus_estrutura_procedimento_v b
		where	a.cd_procedimento	= r_proc_paciente.cd_procedimento
		and	a.ie_origem_proced	= r_proc_paciente.ie_origem_proced
		and	a.cd_procedimento	= b.cd_procedimento
		and	a.ie_origem_proced	= b.ie_origem_proced;
		exception
			when others then
			ie_tipo_financiamento_w 	:= 'X';
			ie_complexidade_w		:= 'X';
			nr_seq_grupo_w		:= 0;
			nr_seq_subgrupo_w		:= 0;
			nr_seq_forma_org_w	:= 0;
		end;

		select	sus_obter_limite_bpa(dt_competencia_p,ie_complexidade_w,ie_tipo_financiamento_w,1,cd_estabelecimento_p,nr_seq_grupo_w,nr_seq_subgrupo_w,nr_seq_forma_org_w,cd_municipio_ibge_w)
		into STRICT	qt_bpa_regra_w
		;

		select	sus_obter_limite_bpa(dt_competencia_p,ie_complexidade_w,ie_tipo_financiamento_w,2,cd_estabelecimento_p,nr_seq_grupo_w,nr_seq_subgrupo_w,nr_seq_forma_org_w,cd_municipio_ibge_w)
		into STRICT	vl_bpa_regra_w
		;

		select	sus_obter_limite_bpa(dt_competencia_p,ie_complexidade_w,ie_tipo_financiamento_w,3,cd_estabelecimento_p,nr_seq_grupo_w,nr_seq_subgrupo_w,nr_seq_forma_org_w,cd_municipio_ibge_w)
		into STRICT	nr_seq_regra_w
		;

		if (ie_opcao_p = 'E') then
			begin
			select	count(*)
			into STRICT	qt_bpa_competencia_w
			from	sus_bpa_unif a,
				sus_limite_bpa_comp b
			where	trunc(a.dt_emissao,'month') 				= trunc(b.dt_competencia,'month')
			and	coalesce(b.ie_tipo_financiamento,ie_tipo_financiamento_w) 	= ie_tipo_financiamento_w
			and	coalesce(b.ie_complexidade,ie_complexidade_w)		= ie_complexidade_w
			and	((coalesce(b.nr_seq_grupo,0) = 0) or (b.nr_seq_grupo = sus_obter_estrut_proc(r_proc_paciente.cd_procedimento,r_proc_paciente.ie_origem_proced,'S','G')))
			and	((coalesce(b.nr_seq_subgrupo,0) = 0) or (b.nr_seq_subgrupo = sus_obter_estrut_proc(r_proc_paciente.cd_procedimento,r_proc_paciente.ie_origem_proced,'S','S')))
			and	((coalesce(b.nr_seq_forma_org,0) = 0) or (b.nr_seq_forma_org = sus_obter_estrut_proc(r_proc_paciente.cd_procedimento,r_proc_paciente.ie_origem_proced,'S','F')))
			and	((coalesce(b.cd_municipio_ibge,'X') = 'X') or (b.cd_municipio_ibge = sus_obter_municipio_atend(a.nr_atendimento,'C')))
			and	b.cd_estabelecimento				= a.cd_estabelecimento
			and	b.nr_sequencia					= nr_seq_regra_w;

			select	sum(coalesce(sus_obter_valor_unif(a.nr_interno_conta,0),0))
			into STRICT	vl_bpa_competencia_w
			from	sus_bpa_unif a,
				sus_limite_bpa_comp b
			where	trunc(a.dt_emissao,'month') 				= trunc(b.dt_competencia,'month')
			and	coalesce(b.ie_tipo_financiamento,ie_tipo_financiamento_w) 	= ie_tipo_financiamento_w
			and	coalesce(b.ie_complexidade,ie_complexidade_w)		= ie_complexidade_w
			and	((coalesce(b.nr_seq_grupo,0) = 0) or (b.nr_seq_grupo = sus_obter_estrut_proc(r_proc_paciente.cd_procedimento,r_proc_paciente.ie_origem_proced,'S','G')))
			and	((coalesce(b.nr_seq_subgrupo,0) = 0) or (b.nr_seq_subgrupo = sus_obter_estrut_proc(r_proc_paciente.cd_procedimento,r_proc_paciente.ie_origem_proced,'S','S')))
			and	((coalesce(b.nr_seq_forma_org,0) = 0) or (b.nr_seq_forma_org = sus_obter_estrut_proc(r_proc_paciente.cd_procedimento,r_proc_paciente.ie_origem_proced,'S','F')))
			and	((coalesce(b.cd_municipio_ibge,'X') = 'X') or (b.cd_municipio_ibge = sus_obter_municipio_atend(a.nr_atendimento,'C')))
			and	b.cd_estabelecimento				= a.cd_estabelecimento
			and	b.nr_sequencia					= nr_seq_regra_w;

			select	coalesce(sus_obter_valor_proc_unif(clock_timestamp(),r_proc_paciente.cd_procedimento,7,cd_estabelecimento_p,1),0)
			into STRICT	vl_bpa_atual_w
			;

			qt_bpa_competencia_w	:= qt_bpa_competencia_w + 1;
			vl_bpa_competencia_w	:= vl_bpa_competencia_w + vl_bpa_atual_w;

			end;
		else
			begin
			select	count(*)
			into STRICT	qt_bpa_competencia_w
			from	sus_bpa_unif a,
				sus_limite_bpa_comp b,
				conta_paciente c
			where	trunc(c.dt_mesano_referencia,'month') 			= trunc(b.dt_competencia,'month')
			and	coalesce(b.ie_tipo_financiamento,ie_tipo_financiamento_w) 	= ie_tipo_financiamento_w
			and	coalesce(b.ie_complexidade,ie_complexidade_w)		= ie_complexidade_w
			and	((coalesce(b.nr_seq_grupo,0) = 0) or (b.nr_seq_grupo = sus_obter_estrut_proc(r_proc_paciente.cd_procedimento,r_proc_paciente.ie_origem_proced,'S','G')))
			and	((coalesce(b.nr_seq_subgrupo,0) = 0) or (b.nr_seq_subgrupo = sus_obter_estrut_proc(r_proc_paciente.cd_procedimento,r_proc_paciente.ie_origem_proced,'S','S')))
			and	((coalesce(b.nr_seq_forma_org,0) = 0) or (b.nr_seq_forma_org = sus_obter_estrut_proc(r_proc_paciente.cd_procedimento,r_proc_paciente.ie_origem_proced,'S','F')))
			and	((coalesce(b.cd_municipio_ibge,'X') = 'X') or (b.cd_municipio_ibge = sus_obter_municipio_atend(a.nr_atendimento,'C')))
			and	b.cd_estabelecimento				= a.cd_estabelecimento
			and	a.nr_interno_conta					= c.nr_interno_conta
			and	b.nr_sequencia					= nr_seq_regra_w;

			select	sum(coalesce(sus_obter_valor_unif(a.nr_interno_conta,0),0))
			into STRICT	vl_bpa_competencia_w
			from	sus_bpa_unif a,
				sus_limite_bpa_comp b,
				conta_paciente c
			where	trunc(c.dt_mesano_referencia,'month') 			= trunc(b.dt_competencia,'month')
			and	coalesce(b.ie_tipo_financiamento,ie_tipo_financiamento_w) 	= ie_tipo_financiamento_w
			and	coalesce(b.ie_complexidade,ie_complexidade_w)		= ie_complexidade_w
			and	((coalesce(b.nr_seq_grupo,0) = 0) or (b.nr_seq_grupo = sus_obter_estrut_proc(r_proc_paciente.cd_procedimento,r_proc_paciente.ie_origem_proced,'S','G')))
			and	((coalesce(b.nr_seq_subgrupo,0) = 0) or (b.nr_seq_subgrupo = sus_obter_estrut_proc(r_proc_paciente.cd_procedimento,r_proc_paciente.ie_origem_proced,'S','S')))
			and	((coalesce(b.nr_seq_forma_org,0) = 0) or (b.nr_seq_forma_org = sus_obter_estrut_proc(r_proc_paciente.cd_procedimento,r_proc_paciente.ie_origem_proced,'S','F')))
			and	((coalesce(b.cd_municipio_ibge,'X') = 'X') or (b.cd_municipio_ibge = sus_obter_municipio_atend(a.nr_atendimento,'C')))
			and	b.cd_estabelecimento				= a.cd_estabelecimento
			and	a.nr_interno_conta					= c.nr_interno_conta
			and	b.nr_sequencia					= nr_seq_regra_w;


			select	coalesce(sus_obter_valor_unif(nr_interno_conta_p,0),0)
			into STRICT	vl_bpa_atual_w
			;

			qt_bpa_competencia_w	:= qt_bpa_competencia_w + 1;
			vl_bpa_competencia_w	:= vl_bpa_competencia_w + vl_bpa_atual_w;

			end;
		end if;

		if (nr_seq_regra_w <> 0) then
			begin
			if (qt_bpa_competencia_w > qt_bpa_regra_w) then
				ds_retorno_w := wheb_mensagem_pck.get_texto(299673, 'QT_AIH_COMPETENCIA=' || qt_bpa_competencia_w || ';QT_AIH_REGRA=' || qt_bpa_regra_w || ';DT_COMPETENCIA=' || to_char(dt_competencia_p,'mm/yyyy'));
			end if;
			if (vl_bpa_competencia_w > vl_bpa_regra_w) then
				ds_retorno_w := wheb_mensagem_pck.get_texto(299674, 'VL_AIH_COMPETENCIA=' || vl_bpa_competencia_w || ';VL_AIH_REGRA=' || vl_bpa_regra_w || ';DT_COMPETENCIA=' || to_char(dt_competencia_p,'mm/yyyy'));
			end if;
			end;
		end if;
	end loop;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION sus_consiste_limite_bpa ( dt_competencia_p timestamp, cd_estabelecimento_p bigint, nr_interno_conta_p bigint, ie_opcao_p text) FROM PUBLIC;

