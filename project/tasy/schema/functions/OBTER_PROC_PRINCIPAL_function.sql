-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_proc_principal ( nr_atendimento_p bigint, cd_convenio_p bigint, ie_tipo_atendimento_p bigint, nr_interno_conta_p bigint, ie_cod_desc_p text) RETURNS varchar AS $body$
DECLARE


cd_proc_principal_w		bigint 	:= 0;
vl_procedimento_w		double precision;
ds_proc_principal_w		PROCEDIMENTO.DS_PROCEDIMENTO%type;
ie_origem_proced_w		bigint 	:= 0;
cd_regra_w			varchar(3);
cd_regra_atual_w		varchar(1);
i 				integer;
cd_proc_convenio_w		varchar(20);
ds_proc_convenio_w		PROCEDIMENTO.DS_PROCEDIMENTO%type;
cd_proc_princ_conta_w		varchar(20);
cd_edicao_amb_w			integer;
cd_especialidade_medica_w	integer	:= 0;
IE_TIPO_CONVENIO_conta_w	integer;
ie_origem_proced_edicao_w	bigint;
nr_seq_proc_interno_w		bigint;
nr_seq_exame_w			bigint;
nr_seq_procedimento_w		bigint;
cd_medico_executor_w		varchar(10);
cd_medico_resp_w		varchar(10);
ie_regra_proc_princ_w		varchar(1)	:= 'N';
nr_interno_conta_w		bigint;
cd_estabelecimento_w		integer;
nr_seq_proc_int_w		bigint;
ds_retorno_w			varchar(240);
nr_seq_proc_w			bigint;
qt_porte_anestesico_w		bigint;
vl_ch_medico_w			double precision;
ie_clinica_w			bigint;

ie_origem_proc_convenio_w	bigint;
cd_estab_conta_w		integer;
cd_prim_setor_atend_w		convenio_regra_proc_princ.cd_prim_setor_atend%type;
qt_regra_ww			bigint;
nr_seq_interno_w		atend_paciente_unidade.nr_seq_interno%Type;
cd_categoria_conta_w		conta_paciente.cd_categoria_parametro%type;
cd_categoria_item_w		procedimento_paciente.cd_categoria%type;
cd_categoria_w			categoria_convenio.cd_categoria%type;



C01 CURSOR FOR
SELECT   a.cd_procedimento,
	 sum(a.vl_procedimento),
	 a.ie_origem_proced,
	 max(a.cd_especialidade),
	 max(a.nr_sequencia)
from	 procedimento_paciente a
where	 a.nr_atendimento      	 = nr_atendimento_p
and	 (a.nr_interno_conta IS NOT NULL AND a.nr_interno_conta::text <> '')
and	 coalesce(a.cd_motivo_exc_conta::text, '') = ''
and 	 exists (select 	1
		 from 		procedimento b
		 where		b.cd_procedimento = a.cd_procedimento
		 and 		b.ie_origem_proced = a.ie_origem_proced
		 and 		b.ie_classificacao      = '1')
and	((ie_regra_proc_princ_w	= 'A') or (a.nr_interno_conta = coalesce(nr_interno_conta_w,a.nr_interno_conta)))
group	 by a.cd_procedimento,a.ie_origem_proced
order	 by sum(a.vl_procedimento) desc;

C02 CURSOR FOR
SELECT	cd_regra
from	convenio_regra_proc_princ
where	cd_convenio		= cd_convenio_p
and 	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_p) = ie_tipo_atendimento_p
and 	coalesce(ie_clinica, ie_clinica_w) = ie_clinica_w
and 	coalesce(cd_prim_setor_atend, cd_prim_setor_atend_w) = cd_prim_setor_atend_w
and	(((ie_regra_proc_princ_w = 'A') and (coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_w,0)) = coalesce(cd_estabelecimento_w,0))) or (coalesce(cd_estabelecimento, coalesce(cd_estab_conta_w, coalesce(cd_estabelecimento_w,0))) = coalesce(cd_estab_conta_w, coalesce(cd_estabelecimento_w,0))))
order by
	coalesce(cd_prim_setor_atend,0),
	coalesce(ie_tipo_atendimento,0),
	coalesce(ie_clinica,0),
	coalesce(cd_estabelecimento,0);

C03 CURSOR FOR
SELECT a.cd_procedimento,
	 sum(a.vl_medico),
	 a.ie_origem_proced,
	max(a.cd_especialidade),
	max(a.nr_sequencia)
from	 procedimento b,
	 procedimento_paciente a
where	 a.cd_procedimento       = b.cd_procedimento
  and	 a.ie_origem_proced      = (b.ie_origem_proced)::numeric
  and	 a.nr_atendimento      	 = nr_atendimento_p
  and	 coalesce(a.cd_motivo_exc_conta::text, '') = ''
  and	 b.ie_classificacao      = '1'
  and	((ie_regra_proc_princ_w	= 'A') or (a.nr_interno_conta = coalesce(nr_interno_conta_w,a.nr_interno_conta)))
group	 by a.cd_procedimento,a.ie_origem_proced
order	 by sum(a.vl_medico) desc;

C04 CURSOR FOR
SELECT 	 a.cd_procedimento,
	 sum(b.vl_medico),
	 a.ie_origem_proced,
	max(a.cd_especialidade),
	max(a.nr_sequencia)
from	 Proc_Paciente_valor b,
	 procedimento_paciente a
where	 a.nr_sequencia		= b.nr_seq_procedimento
  and	 b.ie_tipo_valor	= 2
  and	 a.nr_atendimento      	= nr_atendimento_p
  and	 coalesce(a.cd_motivo_exc_conta::text, '') = ''
  and	((ie_regra_proc_princ_w	= 'A') or (a.nr_interno_conta = coalesce(nr_interno_conta_w,a.nr_interno_conta)))
group	 by a.cd_procedimento,a.ie_origem_proced
order	 by sum(b.vl_medico) desc;

C05 CURSOR FOR
SELECT a.cd_procedimento,
	 dividir(sum(a.vl_procedimento), sum(qt_procedimento)),
	 a.ie_origem_proced,
	max(a.cd_especialidade),
	max(a.nr_sequencia)
from	 procedimento b,
	 procedimento_paciente a
where	 a.cd_procedimento       = b.cd_procedimento
  and	 a.ie_origem_proced      = (b.ie_origem_proced)::numeric
  and	 a.nr_atendimento      	 = nr_atendimento_p
  and	 coalesce(a.cd_motivo_exc_conta::text, '') = ''
  and	 b.ie_classificacao      = '1'
  and	((ie_regra_proc_princ_w	= 'A') or (a.nr_interno_conta = coalesce(nr_interno_conta_w,a.nr_interno_conta)))
group	 by a.cd_procedimento,a.ie_origem_proced
order	 by 2 desc;

C06 CURSOR FOR
SELECT 	 a.cd_procedimento,
	 sum(b.vl_medico) / sum(a.qt_procedimento),
	 a.ie_origem_proced,
	max(a.cd_especialidade),
	max(a.nr_sequencia)
from	 Proc_Paciente_valor b,
	 procedimento_paciente a
where	 a.nr_sequencia		= b.nr_seq_procedimento
  and	 b.ie_tipo_valor	= 2
  and    a.qt_procedimento	> 0
  and	 coalesce(a.cd_motivo_exc_conta::text, '') = ''
  and	 a.nr_atendimento      	= nr_atendimento_p
  and	((ie_regra_proc_princ_w	= 'A') or (a.nr_interno_conta = coalesce(nr_interno_conta_w,a.nr_interno_conta)))
group	 by a.cd_procedimento,a.ie_origem_proced
order	 by sum(b.vl_medico) / sum(a.qt_procedimento) desc;

C07 CURSOR FOR
SELECT 	a.cd_procedimento,
	sum(a.vl_procedimento),
	a.ie_origem_proced,
	max(a.cd_especialidade),
	coalesce(a.cd_medico_executor,'0'),
	max(a.nr_sequencia)
from	procedimento b,
	procedimento_paciente a
where	a.cd_procedimento       = b.cd_procedimento
  and	a.ie_origem_proced      = (b.ie_origem_proced)::numeric
  and	a.nr_atendimento      	= nr_atendimento_p
  and	b.ie_classificacao      = '1'
  and	(a.nr_interno_conta IS NOT NULL AND a.nr_interno_conta::text <> '')
  and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
  and	((ie_regra_proc_princ_w	= 'A') or (a.nr_interno_conta = coalesce(nr_interno_conta_w,a.nr_interno_conta)))
group	by a.cd_procedimento,a.ie_origem_proced, coalesce(a.cd_medico_executor,'0')
order	by sum(a.vl_procedimento) desc;

C08 CURSOR FOR
SELECT	cd_procedimento,
	ie_origem_proced,
	cd_especialidade,
	nr_sequencia
from 	procedimento_paciente
where 	nr_atendimento = nr_atendimento_p
and	coalesce(cd_motivo_exc_conta::text, '') = ''
and 	ie_proc_princ_atend = 'S'
and	((ie_regra_proc_princ_w	= 'A') or (nr_interno_conta = coalesce(nr_interno_conta_w,nr_interno_conta)))
order by
	cd_procedimento desc,
	ie_origem_proced desc,
	coalesce(cd_especialidade,0) desc;

C09 CURSOR FOR
SELECT	a.cd_procedimento,
	a.ie_origem_proced,
	a.cd_especialidade,
	a.nr_sequencia,
	coalesce(somente_numero(substr(obter_dados_preco_proc(cd_estabelecimento_w, a.cd_convenio, a.cd_categoria, a.cd_edicao_amb, a.cd_procedimento, a.ie_origem_proced, a.dt_conta, 'P'),1,10)),0) qt_porte_anestesico,
	coalesce(obter_preco_amb(a.cd_procedimento, a.cd_convenio, a.cd_categoria, cd_estabelecimento_w, 'M'),0) vl_ch_medico
from	procedimento b,
	procedimento_paciente a
where	a.cd_procedimento       = b.cd_procedimento
and	a.ie_origem_proced      = (b.ie_origem_proced)::numeric
and	a.nr_atendimento	= nr_atendimento_p
and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
and	b.ie_classificacao      = '1'
and	((ie_regra_proc_princ_w	= 'A') or (a.nr_interno_conta = coalesce(nr_interno_conta_w,a.nr_interno_conta)))
and	coalesce(somente_numero(substr(obter_dados_preco_proc(cd_estabelecimento_w, a.cd_convenio, a.cd_categoria, a.cd_edicao_amb, a.cd_procedimento, a.ie_origem_proced, a.dt_conta, 'P'),1,10)),0) > 0
order by qt_porte_anestesico desc,
	vl_ch_medico desc,
	a.dt_procedimento;

C10 CURSOR FOR
SELECT 	 a.cd_procedimento,
	 dividir(sum(a.vl_procedimento - a.vl_materiais - a.vl_custo_operacional), sum(a.qt_procedimento)),
	 a.ie_origem_proced,
	max(a.cd_especialidade),
	max(a.nr_sequencia)
from	 procedimento_paciente a
where    a.qt_procedimento	> 0
  and	 a.vl_medico > 0
  and	 coalesce(a.cd_motivo_exc_conta::text, '') = ''
  and	 a.nr_atendimento      	= nr_atendimento_p
  and	((ie_regra_proc_princ_w	= 'A') or (a.nr_interno_conta = coalesce(nr_interno_conta_w,a.nr_interno_conta)))
group	 by a.cd_procedimento,a.ie_origem_proced
order by dividir(sum(a.vl_procedimento - a.vl_materiais - a.vl_custo_operacional), sum(a.qt_procedimento)) desc;

C11 CURSOR FOR
	SELECT   a.cd_procedimento,
		 sum(a.vl_procedimento),
		 a.ie_origem_proced,
		 max(a.cd_especialidade),
		 max(a.nr_sequencia)
	from	 procedimento_paciente a
	where	 a.nr_atendimento      	 = nr_atendimento_p
	and	 (a.nr_interno_conta IS NOT NULL AND a.nr_interno_conta::text <> '')
	and	 coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and 	 exists (SELECT 	1
			 from 		procedimento b
			 where		b.cd_procedimento = a.cd_procedimento
			 and 		b.ie_origem_proced = a.ie_origem_proced
			 and 		b.ie_classificacao      = '2')
	and	((ie_regra_proc_princ_w	= 'A') or (a.nr_interno_conta = coalesce(nr_interno_conta_w,a.nr_interno_conta)))
	group	 by a.cd_procedimento,a.ie_origem_proced
	order	 by sum(a.vl_procedimento) desc;

/*  	O que significa cada letra
	A - Autorização do Convênio
	V - Procedimento de Maior Valor
	H - Procedimento de Maior Valor Honorário
	P - Procedimento de Maior Valor de Ponto (Honorário)
	C - Consulta (Gera pp como Consulta)
	U - Procedimento de Maior Valor Unitário
	X - Honorário de Maior Preço Unitário com pto médico
	L - Primeiro procedimento lançado
	M - Procedimento executado pelo Médico responsável (Entrada Única)
	T - Maior porte anestésico
	Z - Honorário de Maior Preço Unitário
	I - Visita
	S - Taxa de maior valor
*/
BEGIN

cd_proc_convenio_w	:= null;
ds_proc_convenio_w	:= null;
nr_interno_conta_w	:= nr_interno_conta_p;
if (nr_interno_conta_w	<=0) then
	nr_interno_conta_w	:= null;
end if;

select 	coalesce(max(ie_clinica),0),
	max(cd_estabelecimento)
into STRICT	ie_clinica_w,
	cd_estabelecimento_w
from 	atendimento_paciente
where 	nr_atendimento = nr_atendimento_p;

select 	count(*)
into STRICT	qt_regra_ww
from	convenio_regra_proc_princ
where	cd_convenio = cd_convenio_p;

cd_prim_setor_atend_w:= 0;
if (qt_regra_ww > 0) then

	select 	coalesce(max(Obter_Atepacu_paciente(nr_atendimento_p, 'P')),0)
	into STRICT	nr_seq_interno_w
	;

	if (nr_seq_interno_w > 0) then

		select 	coalesce(max(cd_setor_atendimento),0)
		into STRICT	cd_prim_setor_atend_w
		from 	atend_paciente_unidade
		where 	nr_atendimento = nr_atendimento_p
		and 	nr_seq_interno = nr_seq_interno_w;

	end if;

end if;

/*	Buscar codigo do procedimento principal a partir do informado na conta, onde pode ter proc não usado na conta  */

/*	Criado para atender sulamerica do HMV em 28/05/2003  */

cd_proc_princ_conta_w	:= null;
begin
select	cd_proc_princ,
	cd_estabelecimento,
	cd_categoria_parametro
into STRICT	cd_proc_princ_conta_w,
	cd_estab_conta_w,
	cd_categoria_conta_w
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_p;
exception
	when others then
	cd_proc_princ_conta_w 	:= null;
	cd_estab_conta_w	:= null;
	cd_categoria_conta_w	:= null;
end;

select	coalesce(max(ie_regra_proc_princ),'A')
into STRICT	ie_regra_proc_princ_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;

cd_regra_w	:= 'AVH';
OPEN C02;
LOOP
FETCH C02 into
	cd_regra_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	cd_regra_w	:= cd_regra_w;
	end;
END LOOP;
CLOSE C02;


open C08;
loop
fetch C08 into
	cd_proc_principal_w,
	ie_origem_proced_w,
	cd_especialidade_medica_w,
	nr_seq_proc_w;
EXIT WHEN NOT FOUND; /* apply on C08 */
end loop;
close C08;

/*select 	nvl(min(cd_procedimento),0), nvl(min(ie_origem_proced),0)
into 	cd_proc_principal_w,
 	ie_origem_proced_w
from 	procedimento_paciente
where 	nr_atendimento = nr_atendimento_p
and	cd_motivo_exc_conta is null
and 	nvl(ie_proc_princ_atend,'N') = 'S';*/
/*select	nvl(min(cd_especialidade),0)
into	cd_especialidade_medica_w
from	procedimento_paciente
where	nr_atendimento = nr_atendimento_p
and	cd_motivo_exc_conta is null
and 	nvl(ie_proc_princ_atend,'N') = 'S';  */
select 	coalesce(max(substr(obter_dados_atendimento(nr_atendimento_p,'MR'),1,10)),'0')
into STRICT	cd_medico_resp_w
;

FOR i IN 1.. length(cd_regra_w) LOOP
	BEGIN
	cd_regra_atual_w	:= substr(cd_regra_w, i, 1);

	if (cd_proc_principal_w	= 0) and (cd_regra_atual_w	= 'C') then
		begin
		select	coalesce(max(cd_edicao_amb),0)
		into STRICT	cd_edicao_amb_w
		from	convenio_amb
		where	cd_convenio = cd_convenio_p
		and	ie_situacao	= 'A';


		select	max(ie_origem_proced)
		into STRICT	ie_origem_proced_edicao_w
		from	edicao_amb
		where	cd_edicao_amb	= cd_edicao_amb_w
		and	ie_situacao	= 'A';


		if (cd_edicao_amb_w = 2004) or (ie_origem_proced_edicao_w = 5) then
			begin
			cd_proc_principal_w		:= 10101039;
			ie_origem_proced_w		:= 5;
			cd_especialidade_medica_w	:= 0;
			end;
		else
			begin
			cd_proc_principal_w		:= 10014;
			ie_origem_proced_w		:= 1;
			cd_especialidade_medica_w	:= 0;
			end;
		end if;
		end;
	end if;


	if (cd_proc_principal_w	= 0) and (cd_regra_atual_w	= 'I') then
		begin
		select	coalesce(max(cd_edicao_amb),0)
		into STRICT	cd_edicao_amb_w
		from	convenio_amb
		where	cd_convenio = cd_convenio_p
		and	ie_situacao	= 'A';

		select	max(ie_origem_proced)
		into STRICT	ie_origem_proced_edicao_w
		from	edicao_amb
		where	cd_edicao_amb	= cd_edicao_amb_w
		and	ie_situacao	= 'A';


		if (cd_edicao_amb_w = 2004) or (ie_origem_proced_edicao_w = 5) then
			begin
			cd_proc_principal_w		:= 10102019;
			ie_origem_proced_w		:= 5;
			cd_especialidade_medica_w	:= 0;
			end;
		else
			begin
			cd_proc_principal_w		:= 20010;
			ie_origem_proced_w		:= 1;
			cd_especialidade_medica_w	:= 0;
			end;
		end if;
		end;
	end if;

	if (cd_proc_principal_w	= 0) and (cd_regra_atual_w	= 'R') then
		begin
		cd_especialidade_medica_w	:= 0;
		begin
		select	cd_procedimento_princ,
			ie_origem_proced
		into STRICT	cd_proc_principal_w,
			ie_origem_proced_w
		from	cirurgia
		where	nr_atendimento	= nr_atendimento_p
		and	nr_cirurgia		=
				(SELECT min(b.nr_cirurgia)
				from	cirurgia b
				where	nr_atendimento = nr_atendimento_p);
		exception
			when others then
			cd_proc_principal_w	:= 0;
		end;

		end;
	end if;

	if (cd_proc_principal_w	= 0) and (cd_regra_atual_w	= 'V') then
		begin
		OPEN C01;
		LOOP
		FETCH C01 into
			cd_proc_principal_w,
			vl_procedimento_w,
			ie_origem_proced_w,
			cd_especialidade_medica_w,
			nr_seq_proc_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			exit;
			end;
		END LOOP;
		CLOSE C01;
		end;
	end if;

	if (cd_proc_principal_w	= 0) and (cd_regra_atual_w	= 'U') then
		begin
		OPEN C05;
		LOOP
		FETCH C05 into
			cd_proc_principal_w,
			vl_procedimento_w,
			ie_origem_proced_w,
			cd_especialidade_medica_w,
			nr_seq_proc_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
			begin
			exit;
			end;
		END LOOP;
		CLOSE C05;
		end;
	end if;

	if (cd_proc_principal_w	= 0) and (cd_regra_atual_w	= 'H') then
		begin
		OPEN C03;
		LOOP
		FETCH C03 into
			cd_proc_principal_w,
			vl_procedimento_w,
			ie_origem_proced_w,
			cd_especialidade_medica_w,
			nr_seq_proc_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin
			exit;
			end;
		END LOOP;
		CLOSE C03;
		end;
	end if;

	if (cd_proc_principal_w	= 0) and (cd_regra_atual_w	= 'P') then
		begin
		OPEN C04;
		LOOP
		FETCH C04 into
			cd_proc_principal_w,
			vl_procedimento_w,
			ie_origem_proced_w,
			cd_especialidade_medica_w,
			nr_seq_proc_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			begin
			exit;
			end;
		END LOOP;
		CLOSE C04;
		end;
	end if;

	if (cd_proc_principal_w	= 0) and (cd_regra_atual_w	= 'X') then
		begin
		OPEN C06;
		LOOP
		FETCH C06 into
			cd_proc_principal_w,
			vl_procedimento_w,
			ie_origem_proced_w,
			cd_especialidade_medica_w,
			nr_seq_proc_w;
		EXIT WHEN NOT FOUND; /* apply on c06 */
			begin
			exit;
			end;
		END LOOP;
		CLOSE C06;
		end;
	end if;

	if (cd_proc_principal_w	= 0) and (cd_regra_atual_w	= 'M') then
		begin
		OPEN C07;
		LOOP
		FETCH C07 into
			cd_proc_principal_w,
			vl_procedimento_w,
			ie_origem_proced_w,
			cd_especialidade_medica_w,
			cd_medico_executor_w,
			nr_seq_proc_w;
		EXIT WHEN NOT FOUND; /* apply on c07 */
			begin
			if (cd_medico_executor_w = cd_medico_resp_w) then
				exit;
			end if;
			end;
		END LOOP;
		CLOSE C07;
		end;
	end if;

	if (cd_proc_principal_w	= 0) and (cd_regra_atual_w	= 'A') then

		/* Ricardo 25/08/2005 - Coloquei o "and	cd_procedimento_principal is not null" */

		cd_especialidade_medica_w	:= 0;
		begin
		select	coalesce(max(cd_procedimento_principal),0),
			max(ie_origem_proced)
		into STRICT	cd_proc_principal_w,
			ie_origem_proced_w
		from	autorizacao_convenio
		where	nr_atendimento			= nr_atendimento_p
		and	(cd_procedimento_principal IS NOT NULL AND cd_procedimento_principal::text <> '')
		and	nr_seq_autorizacao		=
			(SELECT min(b.nr_seq_autorizacao)
				from  autorizacao_convenio b
				where	b.nr_atendimento	= nr_atendimento_p);
		exception
		when others then
			cd_proc_principal_w := 0;
		end;

	end if;

	if (cd_proc_principal_w	= 0) and (cd_regra_atual_w	= 'L') then
		select	max(a.cd_procedimento),
			max(a.ie_origem_proced),
			max(a.cd_especialidade),
			max(a.nr_sequencia)
		into STRICT	cd_proc_principal_w,
			ie_origem_proced_w,
			cd_especialidade_medica_w,
			nr_seq_proc_w
		from	procedimento_paciente a
		where	a.nr_atendimento	= nr_atendimento_p
		and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
		and	((ie_regra_proc_princ_w	= 'A') or (a.nr_interno_conta = coalesce(nr_interno_conta_w, a.nr_interno_conta)))
		and	a.nr_sequencia = (	SELECT	min(x.nr_sequencia)
						from	procedimento_paciente x
						where	x.nr_atendimento = nr_atendimento_p
						and	coalesce(x.cd_motivo_exc_conta::text, '') = ''
						and	((ie_regra_proc_princ_w	= 'A') or (x.nr_interno_conta = coalesce(nr_interno_conta_w, x.nr_interno_conta)))
					);
	end if;

	if (cd_proc_principal_w	= 0) and (cd_regra_atual_w	= 'T') then
		open C09;
		loop
		fetch C09 into
			cd_proc_principal_w,
			ie_origem_proced_w,
			cd_especialidade_medica_w,
			nr_seq_proc_w,
			qt_porte_anestesico_w,
			vl_ch_medico_w;
		EXIT WHEN NOT FOUND; /* apply on C09 */
			begin
			exit;
			end;
		end loop;
		close C09;
	end if;

	if (cd_proc_principal_w	= 0) and (cd_regra_atual_w	= 'Z') then
		begin
		OPEN C10;
		LOOP
		FETCH C10 into
			cd_proc_principal_w,
			vl_procedimento_w,
			ie_origem_proced_w,
			cd_especialidade_medica_w,
			nr_seq_proc_w;
		EXIT WHEN NOT FOUND; /* apply on c10 */
			begin
			exit;
			end;
		END LOOP;
		CLOSE C10;
		end;
	end if;


	if (cd_proc_principal_w	= 0) and (cd_regra_atual_w	= 'S') then
		begin
		OPEN C11;
		LOOP
		FETCH C11 into
			cd_proc_principal_w,
			vl_procedimento_w,
			ie_origem_proced_w,
			cd_especialidade_medica_w,
			nr_seq_proc_w;
		EXIT WHEN NOT FOUND; /* apply on c11 */
			begin
			exit;
			end;
		END LOOP;
		CLOSE C11;
		end;
	end if;

	END;
END LOOP;

/*	Buscar codigo vinculado a Clinica - Marcus 05/03/2002 */

if (cd_proc_principal_w	= 0) then

	cd_especialidade_medica_w	:= 0;

	select 	coalesce(max(cd_procedimento),0),
		coalesce(max(ie_origem_proced),0)
	into STRICT 	cd_proc_principal_w,
 		ie_origem_proced_w
	from 	Clinica_proc_princ b,
		Atendimento_paciente a
	where 	a.nr_atendimento 	= nr_atendimento_p
	  and 	a.ie_clinica		= b.ie_clinica;
end if;

if (cd_proc_principal_w IS NOT NULL AND cd_proc_principal_w::text <> '') and (coalesce(ie_origem_proced_w,0) = 0) then
	select	coalesce(min(ie_origem_proced),1)
	into STRICT	ie_origem_proced_w
	from	Procedimento
	where	cd_procedimento	= cd_proc_principal_w;
end if;

if (upper(ie_cod_desc_p) in ('D','DI')) then /* Rafael em 08/03/2007 OS51198, incluí o "in 'DI'" */
	begin
	select 	ds_procedimento
	into STRICT	ds_proc_principal_w
	from	procedimento
	where	cd_procedimento	= cd_proc_principal_w
	and	ie_origem_proced	= ie_origem_proced_w;
	exception
		when others then
		ds_proc_principal_w	:= 0;
	end;
end if;


/*	Buscar codigo/descricao convertido p/convenio 06/04/2001 bola */

select	coalesce(max(nr_seq_proc_interno),0),
	coalesce(max(nr_seq_exame),0),
	max(cd_categoria)
into STRICT	nr_seq_proc_int_w,
	nr_seq_exame_w,
	cd_categoria_item_w
from	procedimento_paciente
where	nr_atendimento		= nr_atendimento_p
and	((nr_interno_conta	= nr_interno_conta_p) or (0 = nr_interno_conta_p))
and	cd_procedimento		= cd_proc_principal_w
and	ie_origem_proced	= ie_origem_proced_w;

if (ie_regra_proc_princ_w = 'A') then
	cd_categoria_w	:= cd_categoria_item_w;
else
	cd_categoria_w	:= coalesce(cd_categoria_conta_w, cd_categoria_item_w);
end if;

if (upper(ie_cod_desc_p) in ('D','DI')) then /* Rafael em 08/03/2007 OS51198, incluí o "in 'DI'" */
	begin
	--select 	Obter_Nome_Item_Conv(cd_convenio_p,1,cd_proc_principal_w,ie_origem_proced_w,'N', cd_especialidade_medica_w, null, ie_tipo_atendimento_p, nr_atendimento_p)
	select 	Obter_Dados_Item_Conv(cd_convenio_p, cd_categoria_w, 1, cd_proc_principal_w, ie_origem_proced_w, 'N', cd_especialidade_medica_w, null, ie_tipo_atendimento_p,
			nr_atendimento_p, nr_seq_proc_int_w, nr_seq_exame_w, 'D')
	into STRICT	ds_proc_convenio_w
	;
	exception
		when others then
		ds_proc_convenio_w := null;
	end;
else
	begin
	--select 	Obter_Codigo_Item_Conv(cd_convenio_p,1,cd_proc_principal_w,ie_origem_proced_w,'N', cd_especialidade_medica_w, null, ie_tipo_atendimento_p, nr_atendimento_p)
	select 	Obter_Dados_Item_Conv(cd_convenio_p, cd_categoria_w, 1, cd_proc_principal_w, ie_origem_proced_w, 'N', cd_especialidade_medica_w, null, ie_tipo_atendimento_p,
			nr_atendimento_p, nr_seq_proc_int_w, nr_seq_exame_w, 'C')
	into STRICT	cd_proc_convenio_w
	;
	exception
		when others then
		cd_proc_convenio_w := null;
	end;
end if;


begin
select	b.ie_tipo_convenio
into STRICT	IE_TIPO_CONVENIO_conta_w
from	convenio b, conta_paciente a
where	a.nr_interno_conta	= nr_interno_conta_p
and	a.cd_convenio_parametro	= b.cd_convenio;
exception
	when others then
	IE_TIPO_CONVENIO_conta_w := null;
end;

if (cd_proc_princ_conta_w IS NOT NULL AND cd_proc_princ_conta_w::text <> '') then
	begin

	cd_proc_convenio_w		:= cd_proc_princ_conta_w;
	ie_origem_proc_convenio_w	:= Obter_Origem_Proced_Cat(cd_estab_conta_w, ie_tipo_atendimento_p, IE_TIPO_CONVENIO_conta_w, cd_convenio_p, null);

	begin
	select	coalesce(obter_descricao_procedimento(cd_proc_convenio_w, ie_origem_proc_convenio_w), ds_proc_convenio_w)
	into STRICT	ds_proc_convenio_w
	;
	exception
	when others then
		ds_proc_convenio_w := null;
	end;

	end;
end if;


if (upper(ie_cod_desc_p)	= 'D') then
	RETURN coalesce(ds_proc_convenio_w,ds_proc_principal_w);
elsif (upper(ie_cod_desc_p)	= 'DP') then
	select	obter_descricao_procedimento(cd_proc_principal_w, ie_origem_proced_w)
	into STRICT	ds_proc_principal_w
	;

	RETURN ds_proc_principal_w;
elsif (upper(ie_cod_desc_p)	= 'CO') then
	begin
	if (length(cd_proc_principal_w) = 9) then
		RETURN to_char(ie_origem_proced_w,'FM0') || to_char(cd_proc_principal_w,'FM000000000');
	else
		RETURN to_char(ie_origem_proced_w,'FM0') || to_char(cd_proc_principal_w,'FM00000000');
	end if;
	end;
elsif (upper(ie_cod_desc_p)	= 'CD') then
	begin
	return cd_proc_principal_w;
	end;
elsif (upper(ie_cod_desc_p)	= 'IO') then
	begin
	return ie_origem_proced_w;
	end;
elsif (upper(ie_cod_desc_p)	= 'DI') then
	select	coalesce(max(nr_seq_proc_interno),0)
	into STRICT	nr_seq_proc_interno_w
	from	procedimento_paciente
	where	nr_atendimento		= nr_atendimento_p
	and	((nr_interno_conta	= nr_interno_conta_p) or (0 = nr_interno_conta_p))
	and	cd_procedimento		= cd_proc_principal_w
	and	ie_origem_proced	= ie_origem_proced_w;

	if (nr_seq_proc_interno_w > 0) then
		return	obter_desc_proc_interno(nr_seq_proc_interno_w);
	else
		return	coalesce(ds_proc_convenio_w,ds_proc_principal_w);
	end if;
elsif (upper(ie_cod_desc_p)	= 'CP') then
	RETURN to_char(cd_proc_principal_w);
elsif (upper(ie_cod_desc_p)	= 'SEQ') then
	return nr_seq_proc_w;
elsif (upper(ie_cod_desc_p)	= 'IP') then
	RETURN to_char(ie_origem_proced_w);
elsif (upper(ie_cod_desc_p) = 'EIS') then	/* OS78255: Tireia a máscara no to_char para utilizar na EIS - Contas pendentes (Nova) */
	RETURN to_char(ie_origem_proced_w) || to_char(cd_proc_principal_w);
elsif (upper(ie_cod_desc_p)	= 'SEQ') then

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_procedimento_w
	from	procedimento_paciente
	where	nr_atendimento		= nr_atendimento_p
	and	((nr_interno_conta	= nr_interno_conta_p) or (0 = nr_interno_conta_p))
	and	cd_procedimento		= cd_proc_principal_w
	and	ie_origem_proced	= ie_origem_proced_w;

	return nr_seq_procedimento_w;

elsif (upper(ie_cod_desc_p) = 'CTUSS') then
	select 	max(to_char(CASE WHEN coalesce(cd_procedimento_tuss,0)=0 THEN cd_proc_principal_w  ELSE cd_procedimento_tuss END ))
	into STRICT 	ds_retorno_w
	from	procedimento_paciente
	where	nr_interno_conta = nr_interno_conta_w
	and	cd_procedimento = cd_proc_principal_w;

	return ds_retorno_w;

elsif (upper(ie_cod_desc_p) = 'DTUSS') then

	select 	max(ds_procedimento)
	into STRICT	ds_retorno_w
	from (SELECT	max(obter_descricao_procedimento(cd_procedimento_tuss,8)) ds_procedimento
		from	procedimento_paciente
		where	nr_interno_conta = nr_interno_conta_w
		and	coalesce(cd_procedimento_tuss,0) <> 0
		and	cd_procedimento = cd_proc_principal_w
		
union

		SELECT 	max(obter_descricao_procedimento(cd_procedimento,ie_origem_proced)) ds_procedimento
		from	procedimento_paciente
		where	nr_interno_conta = nr_interno_conta_w
		and	coalesce(cd_procedimento_tuss,0) = 0
		and	cd_procedimento = cd_proc_principal_w) alias9;

	return ds_retorno_w;
else
	return coalesce(cd_proc_convenio_w,to_char(cd_proc_principal_w));
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_proc_principal ( nr_atendimento_p bigint, cd_convenio_p bigint, ie_tipo_atendimento_p bigint, nr_interno_conta_p bigint, ie_cod_desc_p text) FROM PUBLIC;

